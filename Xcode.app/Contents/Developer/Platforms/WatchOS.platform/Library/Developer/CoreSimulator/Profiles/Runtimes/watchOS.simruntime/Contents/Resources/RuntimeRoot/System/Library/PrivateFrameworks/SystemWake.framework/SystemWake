@(#)PROGRAM:SystemWake  PROJECT:BaseBoard-555.1
v8@?0
SWSystemSleepMonitor-mainQueue
Invalid condition not satisfying: %@
_allowsInvalidation
SWSystemSleepMonitor.m
@"SWPreventSystemSleepAssertion"20@?0B8@"NSString"12
v24@?0@"<SWSystemSleepObserver>"8@?<v@?B>16
v12@?0B8
v16@?0@"<BSBlockSentinelSignalContext>"8
response from %@ must be made exactly once
v16@?0@"BSSimpleAssertion"8
!hadBeenCalled
observer != nil
B32@?0@"<SWSystemSleepObserver>"8Q16^B24
!_lock_registered
_lock_systemPowerConnection != IO_OBJECT_NULL
_lock_invalidated
!_lock_invalidated
system activity assertion should be invalidated before deallocated
SWSystemActivityAssertion.m
identifier
state
pendingAcquisition
assertionID
v8@?0
BSSystemActivityDomain
%p twice tried to acquire system activity assertion; id:%@ state:%u
%p system activity assertion - provider returned NULL declare result; id:%@
%p failed to start system activity (%ld); id:%@ state:%u
v16@?0@"BSAbsoluteMachTimer"8
%p system activity assertion state mutated unexpectedly; id:%@ state:%u
%p system activity assertion marked invalid but has non-null asssertionID:%u; id:%@ state:%u
%p system activity assertion marked invalid but has hasUncalledAcquisitionHandler; id:%@ state:%u
%p system activity assertion timed out before acquisition; id:%@
sleepRequestAborted
willWakeFromSleep
afterPendingSleepWasAlreadyInitiated
afterFailingToRevertPendingSleep
afterSleepOfNonZeroDuration
returnValue
systemState
%p must invalidate before dealloc : %@
SWWakingTimer.m
timer
isInvalidated
handler != nil
leeway cannot be negative: %f
cannot schedule after invalidating
v16@?0@"BSContinuousMachTimer"8
v16@?0@"BSWallclockTimer"8
com.apple.SystemWake
Power
Timer
SWScheduledSystemWake.m
wakeDate
timeRemaining
leeway
%p scheduled wake can not be rescheduled after invalidation : %@
%@:%@
SWPreventSystemSleepAssertion workloop
SWPreventSystemSleepAssertionQueue
SWPreventSystemSleepAssertion:%p id:%@ state:%u can only be acquired once
SWPreventSystemSleepAssertion.m
SWPreventSystemSleepAssertion:%p id:%@ state:%u acquired but assertionID null before invalidation
SWPreventSystemSleepAssertion:%p id:%@ state:%u dealloced before invalidation
failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@
%p systemPowerChanged:%u notificationID:%p
%p unexpected powerChangedMessage:%u notificationID:%p
%p (%llu) final response(%{BOOL}u) to %{public}@ came too late
%p (%llu) response(%{BOOL}u) to %{public}@ after early completion
%p (%llu) response(%{BOOL}u to %{public}@ from:%{public}@ came too late
%p registerForSystemPowerOnQueue:%p withDelegate:%p -- connection:%llu port:%llu notifier:%llu
%p unregisterForSystemPower -- connection:%llu port:%llu notifier:%llu
%p invalidated sleep monitor: %p
%p SWSystemPowerCallback(%p) message:%u notificationID:%p
%p system activity assertion (%{public}@) will acquire with timeout:%lf
%p system activity assertion invalidated before declaration; id:%{public}@ state:%u assertionID:%lu timer:%{public}@
%p system activity assertion already acquired; id:%{public}@ state:%u assertionID:%lu timer:%{public}@
%p system activity assertion (%{public}@) will declare system activity
%p system activity assertion (%{public}@) will system activity result:%@
%p failed to start system activity (%ld) for id:%{public}@ state:%u
%p created system activity assertion too late, will wait for next system wake, id:%{public}@ err:%ld wasSleepImminent:%{BOOL}u
%p created system activity assertion; id:%{public}@ systemState:%u assertionID:%lu wasSleepImminent:%{BOOL}u
%p system activity assertion invalidated while waiting on system acquisition (will immediately release); id:%{public}@ assertionID:%lu timer:%{public}@
%p system activity assertion state mutated unexpectedly (will immediately release); id:%{public}@ state:%u assertionID:%lu timer:%{public}@
%p system activity assertion (%{public}@) callback with error:%{public}@
%p system activity assertion invalidated; id:%{public}@ state:%u hasUncalledAcquisitionHandler:%{BOOL}u
%p system activity assertion already invalid; id:%{public}@
%p system activity assertion timed out: %{public}@
%p system activity assertion now valid (%{public}@); id:%{public}@ assertionID:%lu timer:%{public}@
%p system activity assertion woke while still acquiring, waiting for acquisition to complete (%{public}@); id:%{public}@ assertionID:%lu timer:%{public}@
%p system activity assertion not complete, state:%u (%{public}@); id:%{public}@ assertionID:%lu timer:%{public}@
%p dealloc %{public}@
%p scheduling %{public}@
%p canceling %{public}@
%p timer fired:%{public}@
%p obsolete timer fired:%{public}@
%p preventing sleep for:%{public}@
%p not preventing sleep with fire imminent for %{public}@ because leeway is too large: %fs
%p unscheduled, cancelling wake %{public}@
%p scheduling system wake: %{public}@
%p canceling system wake: %{public}@
%p power assertion take complete after invalidation, will release immediately, identifier:%@ id:%d
%p power assertion taken identifier:%{public}@ id:%d
%p will invalidate power assertion; identifier:%{public}@ id:%d
%p power assertion timed out; identifier:%{public}@ id:%d
%p invalidated power assertion before starting acquisition identifier:%{public}@
%p invalidated power assertion during acquisition identifier:%{public}@
%p already invalidated power assertion identifier:%{public}@
zPLR
zPLR
zPLR
SWSystemSleepMonitor
SWSystemSleepMonitorProvidingDelegate
NSObject
BSInvalidatable
SWSystemSleepMonitorProvider
SWSystemSleepMonitorProviding
SWSystemActivityAssertion
SWSystemSleepObserver
SWSystemActivityAcquisitionDetails
SWDeclareSystemActivityResult
SWSystemActivityProvider
SWSystemActivityProviding
SWWakingTimer
BSTimerScheduleQuerying
BSCancellable
SWSystemSleepAssertionProvider
SWSystemSleepAssertionProviding
SWScheduledSystemWake
SWPreventSystemSleepAssertion
sharedProvider
initWithIdentifier:queue:allowsInvalidation:monitorProvider:sleepAssertionProvider:
init
hashTableWithOptions:
registerForSystemPowerOnQueue:withDelegate:
stringWithFormat:
UTF8String
invalidate
systemSleepMonitor:sleepRequestedWithResult:
acquirePreventSystemSleepAssertionWithIdentifier:
cancelPowerChange:
allowPowerChange:
systemSleepMonitor:prepareForSleepWithCompletion:
observersOfSelector:performObserverBlock:completion:
count
context
boolValue
isComplete
sentinelWithQueue:signalCount:signalHandler:
countByEnumeratingWithState:objects:count:
initWithIdentifier:forReason:invalidationBlock:
signalWithContext:
signal
systemSleepMonitorSleepRequestAborted:
systemSleepMonitorWillWakeFromSleep:
systemSleepMonitorDidWakeFromSleep:
addObject:
removeObject:
allObjects
indexesOfObjectsPassingTest:
objectsAtIndexes:
monitorUsingMainQueue
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
systemPowerChanged:notificationID:
initWithIdentifier:queue:
hasSleepBeenRequested
isSleepImminent
addObserver:
removeObserver:
.cxx_destruct
_queue
_identifier
_monitorProvider
_sleepAssertionProvider
_lock
_lock_observers
_lock_messageID
_state
_allowsInvalidation
sleepRequested
TB,R,GhasSleepBeenRequested
sleepImminent
TB,R,GisSleepImminent
referenceWithObject:
object
dealloc
_lock_queue
_lock_weakDelegateWrapper
_lock_systemPowerConnection
_lock_systemPowerPort
_lock_systemPowerNotifier
_lock_registered
_lock_invalidated
initWithIdentifier:sleepMonitor:systemActivityProvider:
builderWithObject:
appendString:withName:
appendUnsignedInteger:withName:
appendBool:withName:ifEqualTo:
appendUnsignedInt:withName:
build
sharedHighPriorityQueue
copy
getMachContinuousKernelWakeTime
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
_queue_declareSystemActivity
declareSystemActivityWithName:
systemState
returnValue
assertionID
createTimerWithIdentifier:
scheduleWithFireInterval:leewayInterval:queue:handler:
releaseAssertionID:
initWithAfterPendingSleepWasAlreadyInitiated:afterFailingToRevertPendingSleep:afterSleepOfNonZeroDuration:
invalidateWithReason:
initWithIdentifier:
isActive
acquireWithTimeout:handler:
_lock_timeoutTimer
_sleepMonitor
_provider
_lock_assertionID
_lock_acquisitionHandler
_lock_startKernelAPWakeTime
_lock_state
_lock_timeout
_lock_wasSleepImminent
_lock_didFailToRevertPendingSleep
_lock_clientDidInvalidate
active
TB,R,N,GisActive
appendBool:withName:
afterPendingSleepWasAlreadyInitiated
afterFailingToRevertPendingSleep
afterSleepOfNonZeroDuration
TB,R,N
_afterPendingSleepWasAlreadyInitiated
_afterFailingToRevertPendingSleep
_afterSleepOfNonZeroDuration
TB,R,N,V_afterPendingSleepWasAlreadyInitiated
TB,R,N,V_afterFailingToRevertPendingSleep
TB,R,N,V_afterSleepOfNonZeroDuration
appendInt:withName:
initWithReturnValue:assertionID:systemState:
_returnValue
_assertionID
_systemState
Ti,R,N,V_returnValue
TI,R,N,V_assertionID
Ti,R,N,V_systemState
initWithIdentifier:sleepMonitor:sleepAssertionProvider:
isScheduled
timeRemaining
appendObject:withName:
scheduleForDate:leewayInterval:queue:handler:
acquireSystemActivityAssertionWithIdentifier:
wakeTime
scheduleWake:leeway:
cancelWake
identifier
T@"NSString",R,C,N
scheduled
TB,R,N,GisScheduled
Td,R,N
cancel
_scheduledWake
_preventSleepAssertion
_lock_timer
_lock_handler
_lock_leeway
T@"NSString",R,C,N,V_identifier
sharedInstance
formatDateAsLongYMDHMSZPosixLocaleWithDate:
timeIntervalSinceNow
appendTimeInterval:withName:decomposeUnits:
timeIntervalSinceReferenceDate
dateWithTimeIntervalSinceReferenceDate:
UUID
UUIDString
timeIntervalSinceDate:
leeway
_lock_wakeDate
_lock_wakeIdentifier
Tq,R,N
_lock_timeoutTime
_invalidated
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8I16^v20
v16@0:8
@32@0:8@16@24
@52@0:8@16@24B32@36@44
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSString"
@"<SWSystemSleepMonitorProviding>"
@"<SWSystemSleepAssertionProviding>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSHashTable"
v32@0:8@16@24
v24@0:8q16
v32@0:8@"NSObject<OS_dispatch_queue>"16@"<SWSystemSleepMonitorProvidingDelegate>"24
@"BSZeroingWeakReference"
^{IONotificationPort=}
v32@0:8@16@?24
v32@0:8@"SWSystemSleepMonitor"16@?<@"SWPreventSystemSleepAssertion"@?B@"NSString">24
v32@0:8@"SWSystemSleepMonitor"16@?<v@?>24
v24@0:8@"SWSystemSleepMonitor"16
@24@0:8@16
@40@0:8@16@24@32
v32@0:8d16@?24
@"BSAbsoluteMachTimer"
@"SWSystemSleepMonitor"
@"<SWSystemActivityProviding>"
@28@0:8B16B20B24
@28@0:8i16I20i24
i16@0:8
I16@0:8
v20@0:8I16
@"SWDeclareSystemActivityResult"24@0:8@"NSString"16
@"BSAbsoluteMachTimer"24@0:8@"NSString"16
d16@0:8
v48@0:8d16d24@32@?40
v48@0:8@16d24@32@?40
@"SWScheduledSystemWake"
@"<BSInvalidatable>"
@"<BSTimerScheduleQuerying><BSCancellable><BSInvalidatable>"
@"SWPreventSystemSleepAssertion"24@0:8@"NSString"16
@"SWSystemActivityAssertion"24@0:8@"NSString"16
q16@0:8
v32@0:8d16q24
@"NSDate"
