playbackState = %d, localOrigin = %{BOOL}u, isInterruption = %{BOOL}u, isLocalInterruption = %{BOOL}u, isPlaying = %{BOOL}u applicationDisplayName = %@, applicationBundleIdentifier = %@, radioStationName = %@, isPlayingRadio = %{BOOL}u
Initialized with nowPlayingStates: %@
activeOrigin: %@
local _activeOrigin, watchBundleID = %@
remote _activeOrigin, companionBundleID = %@, watchBundleID = %@
_activeOriginRef is not a local or companion origin -- %@
no _activeOriginRef
playing = %@, watchBundleID = %@, companionBundleID = %@
session does not need updating, _currentSession = %@, effectiveNowPlayingApp = %@
Create session for companion bundleID: %@; watch bundleID: %@; activeOriginKey: %@; launchingBundleID: %@; URL: %@
Cancelling session, navigateAway %{BOOL}u
Couldn't cancel session; error %@
Updated now playing state cache with key %@ state %@ for origin %@
Origin %@ is the active origin updating now playing state
origin %@ is activeNowPlayingOrigin but state is nil (%{BOOL}u) or not relevant (%{BOOL}u)
Ignoring now playing state %@, originRef %@, _isRelevantOriginRef %{BOOL}u
originObserver:didUpdatePlaybackStateForOrigin:%@ called
originObserver:didUpdateNowPlayingInfoForOrigin:%@ called
originObserver:didUpdateNowPlayingApplicationBundleIdentifierForOrigin:%@ called
No originRef for origin %@
Available origins changed: %@, activeNowPlayingOrigin %@
bundleID
playing
playingRadio
originRef
T@"NSString",R,N,V_bundleID
TB,R,N,V_playing
TB,R,N,GisPlayingRadio,V_playingRadio
T^v,R,N,V_originRef
interrupted
TB,R,N,GisInterrupted,V_interrupted
com.apple.nowplayingsessionprovider-updates
com.apple.NanoNowPlaying
watchBundleID
companionBundleID
nowPlayingStates
(none)
activeOrigin
currentSession
v8@?0
v16@?0@"NSError"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
identifier
Local
Custom
type
displayName
com.apple.Carousel
now_playing
com.apple.NanoMusic
music://show-now-playing
nowplaying://show-now-playing
com.apple.NanoRadio
radio://show-now-playing
com.apple.podcasts
podcasts://show-now-playing
com.apple.NanoBooks
ibooks://show-now-playing
%@/%@
NowPlayingState
NowPlayingSessionProvider
NMROriginObserverDelegate
NSObject
NMRNowPlayingControllerDelegate
CSLSSessionProviding
FirstPartyURLGenerator
mediaRemoteOrigin
playbackState
isPlaying
applicationDisplayName
applicationBundleIdentifier
radioStationName
isPlayingRadio
initWithBundleID:playing:originRef:interrupted:playingRadio:
init
setOriginRef:
builderWithObject:
bundleID
appendObject:withName:
playing
appendBool:withName:
originRef
build
dealloc
nowPlayingStateForNMRNowPlayingState:origin:
description
isInterrupted
.cxx_destruct
_playing
_playingRadio
_interrupted
_bundleID
_originRef
dictionary
initWithOptions:
addObserverDelegate:
setDelegate:
nowPlayingOrigins
countByEnumeratingWithState:objects:count:
_isRelevantOriginRef:
nowPlayingStateForOrigin:
numberWithInt:
setObject:forKey:
activeNowPlayingOrigin
_setActiveOriginRef:
beginObservingOrigins
endObservingOrigins
removeObserverDelegate:
appendObject:withName:skipIfNil:
allValues
appendArraySection:withName:skipIfEmpty:
appendBodySectionWithName:multilinePrefix:block:
sharedManager
companionOrigin
setWithObject:
objectForKey:
_isLocalOriginRef:
applicationInfoForApplicationIdentifier:
isTracked
_isCompanionOriginRef:
applicationInfoForCompanionBundleIdentifier:
applicationBundleID
_effectiveNowPlayingAppForWatchBundleID:companionBundleID:
isEqualToString:
_cancelNowPlayingSession:navigateAway:
_createNowPlayingSessionForCompanionBundleIdentifier:watchBundleIdentifier:activeOriginKey:isLocal:
numberWithBool:
supportsAutoLaunch
urlForLaunchingBundleIdentifier:activeOriginKey:
sessionForBundleID:withURL:type:
setRemote:
sharedInstance
startSession:completion:
numberWithInteger:
dictionaryWithObjects:forKeys:count:
endSession:options:completion:
isEqual:
_queue_updateNowPlayingState
updateNowPlayingStateForOrigin:
addObject:
allKeys
setWithArray:
minusSet:
removeObjectForKey:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
originObserver:didUpdateNowPlayingInfoForOrigin:
originObserver:didUpdateNowPlayingApplicationBundleIdentifierForOrigin:
originObserver:didUpdatePlaybackStateForOrigin:
originObserver:didUpdateSupportedCommandsForOrigin:
originObserver:didUpdateElapsedTimeForOrigin:
originObserver:didUpdateTimestampForOrigin:
originObserver:didUpdatePlaybackQueueForOrigin:
nowPlayingOriginsDidUpdateForController:
activeNowPlayingOriginDidUpdateForController:
providedSessionTypes
_updateQueue
_nowPlayingController
_activeOriginRef
_nowPlayingCompanionBundleIdentifier
_nowPlayingWatchBundleIdentifier
_nowPlayingLastActiveBundleIdentifier
_currentSession
_nowPlayingStates
_firstPartyURLGenerator
_applicationInfoService
appendInt64:withName:
appendString:withName:
_urlForOpenURLString:activeOriginKey:
stringWithFormat:
URLWithString:
_firstPartyBundleIDToOpenURLString
@32@0:8@16@24
@44@0:8@16B24^v28B36B40
v24@0:8^v16
@16@0:8
v16@0:8
B16@0:8
^v16@0:8
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@16@"NMROrigin"24
v24@0:8@16
v24@0:8@"NMRNowPlayingController"16
@"NSSet"16@0:8
B24@0:8^v16
v44@0:8@16@24@32B40
v28@0:8@16B24
@"NSObject<OS_dispatch_queue>"
@"NMRNowPlayingController"
@"CSLSSession"
@"NSMutableDictionary"
@"FirstPartyURLGenerator"
@"CSLSApplicationInfoService"
@"NSDictionary"
