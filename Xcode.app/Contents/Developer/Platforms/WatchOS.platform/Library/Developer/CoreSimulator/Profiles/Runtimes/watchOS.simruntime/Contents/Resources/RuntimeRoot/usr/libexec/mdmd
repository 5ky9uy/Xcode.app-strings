@(#)PROGRAM:mdmd  PROJECT:DeviceManagementClientTools-1
UDID
com.apple.devicemanagementclient.mdmd.polling
v8@?0
MDMDServer member queue
v16@?0@"NSError"8
v20@?0B8@"NSError"12
v24@?0Q8@"NSError"16
mdmd-Polling
-[MDMDServer memberQueueEnqueuePoll]
-[MDMDServer memberQueueEnqueuePoll]_block_invoke_2
-[MDMDServer memberQueueEnqueuePoll]_block_invoke
v12@?0B8
readConfigurationOutError:
MDM_ERROR_BAD_INSTALLATION
mdmd-StartMDMDServer
-[MDMDServer startOutError:]
-[MDMDServer startOutError:]_block_invoke
-[MDMDServer startOutError:]_block_invoke_2
mdmd-ReceivedPublicToken
-[MDMDServer connection:didReceivePublicToken:]_block_invoke
-[MDMDServer connection:didReceivePublicToken:]_block_invoke_3
-[MDMDServer connection:didReceivePublicToken:]_block_invoke_2
mdmd-ReceivedMessageForTopic
-[MDMDServer connection:didReceiveMessageForTopic:userInfo:]
-[MDMDServer connection:didReceiveMessageForTopic:userInfo:]_block_invoke_2
-[MDMDServer connection:didReceiveMessageForTopic:userInfo:]_block_invoke_3
mdmd-PushToken
simulatorToken
v16@?0@"NSData"8
v16@?0@"MDMHTTPTransaction"8
-[MDMDServer schedulePollingServerForCommandWithAssertion:]
-[MDMDServer schedulePollingServerForCommandWithAssertion:]_block_invoke_2
-[MDMDServer schedulePollingServerForCommandWithAssertion:]_block_invoke
(Idle)
mdmd-Request-%@
v16@?0@"NSDictionary"8
mdmd-NetworkReachabilityChanged
-[MDMDServer _networkReachabilityDidChange]
-[MDMDServer _networkReachabilityDidChange]_block_invoke_2
-[MDMDServer _networkReachabilityDidChange]_block_invoke
mdmd-KeybagStateChanged
-[MDMDServer _keybagStateDidChange]_block_invoke
-[MDMDServer _keybagStateDidChange]_block_invoke_3
-[MDMDServer _keybagStateDidChange]_block_invoke_2
mdmd-BuddyFinished
-[MDMDServer buddyDidFinish]
-[MDMDServer buddyDidFinish]_block_invoke_2
-[MDMDServer buddyDidFinish]_block_invoke
/Library/Caches/com.apple.xbs/Sources/DeviceManagementClientTools_Sim/DeviceManagementClient-1.26/DeviceManagementClientTools/MDM Daemon/Server/MDMDServer.m
-[MDMDServer notifyNewConfigurationWithCompletion:]
mdmd-NewConfig
-[MDMDServer notifyNewConfigurationWithCompletion:]_block_invoke
-[MDMDServer scheduleTokenUpdateWithCompletion:]
mdmd-ScheduleTokenUpdate
-[MDMDServer scheduleTokenUpdateWithCompletion:]_block_invoke_3
-[MDMDServer scheduleTokenUpdateWithCompletion:]_block_invoke_2
-[MDMDServer scheduleTokenUpdateIfNecessaryWithCompletion:]
mdmd-ScheduleTokenUpdateIfNecessary
-[MDMDServer scheduleTokenUpdateIfNecessaryWithCompletion:]_block_invoke_2
-[MDMDServer scheduleTokenUpdateIfNecessaryWithCompletion:]_block_invoke
mdmd-PerformOutstandingActivities
-[MDMDServer performOutstandingActivities]
-[MDMDServer performOutstandingActivities]_block_invoke_3
-[MDMDServer performOutstandingActivities]_block_invoke
-[MDMDServer simulatePushWithCompletion:]
mdmd-SimulatePush
-[MDMDServer simulatePushIfNetworkTetheredWithCompletion:]
mdmd-SimulatePushNetworkTethered
MDM_ERROR_NOT_NETWORK_TETHERED
-[MDMDServer simulatePushWithAssertion:completion:]
-[MDMDServer simulatePushWithAssertion:completion:]_block_invoke_3
-[MDMDServer simulatePushWithAssertion:completion:]_block_invoke
-[MDMDServer retryNotNowWithCompletion:]
mdmd-RetryNotNow
-[MDMDServer retryNotNowWithCompletion:]_block_invoke
mdmd-MigrateMDMWithContext
-[MDMDServer uprootMDMWithCompletion:]
mdmd-UprootMDM
-[MDMDServer uprootMDMWithCompletion:]_block_invoke
v24@?0@8@"NSError"16
v24@?0@"CATTaskResultObject"8@"NSError"16
mdmd-ProcessDeviceRequest-%@
com.apple.ManagedConfiguration.PerformDeviceRequest
com.apple.purplebuddy.setupdone
v12@?0i8
MDM_ERROR_NO_INSTALLATION
MDM_ERROR_BAD_INSTALLATION_BAD_VALUE
MDM_ERROR_MISSING_IDENTITY
.Managed.plist.lock
mdmd-MigrateMDM
Managed
v32@?0@"NSString"8@"NSDictionary"16^B24
com.apple.managedconfiguration.mdmd-access
com.apple.managedconfiguration.mdmd.push
com.apple.managedconfiguration.profiled-access
XPC_ERROR_LACKS_ENTITLEMENT_CODE
mdmd Catalyst Queue
mdmd-Start
init
setExecutionQueue:
setObserver:
memberQueueIdentity
dealloc
memberQueue
memberQueueServerURL
setMemberQueueServerURL:
memberQueueOrganizationInfo
copy
setMemberQueueOrganizationInfo:
dictionaryWithContentsOfFile:
_updateMDMConfiguration:organizationInfo:
setObject:forKeyedSubscript:
objectForKeyedSubscript:
removeObjectForKey:
writeDictToMDMConfigurationFile:
_changeOrganizationNameForRMAccountIdentifier:personaID:organizationName:
updateOrganizationName:rmAccountIdentifier:personaID:error:
memberQueueMDMOptions
setMemberQueueMDMOptions:
sharedInstance
enableActivationLockWithCompletion:
isActivationLockedWithCompletion:
fmipStateWithCompletion:
isEqualToData:
memberQueueLastResponseWasNotNow
objectForKey:
boolValue
dictionary
setObject:forKey:
DMCWriteToBinaryFile:
count
defaultManager
removeItemAtPath:error:
setMemberQueueLastPollingAttempt
date
numberWithDouble:
numberWithUnsignedInt:
setMemberQueueLastPollingAttempt:
setMemberQueueLastPollingAttemptMonotonicTime:
setMemberQueueLastPollingAttemptRTCResetCount:
setLastPollingSuccess
scheduleNextPoll
setMemberQueueLastPollingSuccess
setMemberQueueLastPollingSuccess:
setMemberQueueLastPollingSuccessMonotonicTime:
setMemberQueueLastPollingSuccessRTCResetCount:
setMemberQueueLastResponseWasNotNow:
memberQueueSetOutstandingActivity:forKey:
memberQueueRemoveOutstandingActivityForKey:
memberQueueScheduleNextPoll
memberQueuePollingInterval
unsignedIntegerValue
memberQueueLastPollingAttemptMonotonicTime
doubleValue
memberQueueLastPollingAttemptRTCResetCount
unsignedIntValue
memberQueueEnqueuePoll
scheduleOneShotActivity:interval:gracePeriod:callback:
initWithReason:
jobQueue
memberQueueCachedResponse
_idleResponse
setMemberQueueCachedResponse:
jobDidFinishFromFunction:
executionQueueCheckForOutstandingActivityIsReachabilityEvent:assertion:completionBlock:
fromFunction:enqueueJob:
tokenUpdateCount
memberQueueDevAPSConnection
_setEnabledTopics:
memberQueueProdAPSConnection
setMemberQueueIsMDMConfigurationValid:
setMemberQueueIdentity:
setMemberQueueAccessRights:
setMemberQueueCheckInPinnedSecCertificateRefs:
setMemberQueueCheckInURL:
setMemberQueueEnrollmentID:
setMemberQueueManagingProfileIdentifier:
setMemberQueuePinningRevocationCheckRequired:
setMemberQueuePollingInterval:
setMemberQueuePushMagic:
setMemberQueuePushToken:
setMemberQueueServerPinnedSecCertificateRefs:
setMemberQueueSignMessage:
setMemberQueueTopic:
setMemberQueueUseDevelopmentAPNS:
setMemberQueueUseEnrollmentID:
memberQueueForgetCurrentConfiguration
sharedConfiguration
refreshDetailsFromDisk
_memberQueueReadConfigurationFromDisk
_memberQueueParseMDMConfigurationDict:
hrnMode
initWithEnvironmentName:namedDelegatePort:
setMemberQueueDevAPSConnection:
setDelegate:
mainRunLoop
scheduleInRunLoop:
setMemberQueueProdAPSConnection:
memberQueueUseDevelopmentAPNS
memberQueueTopic
arrayWithObject:
publicToken
memberQueuePushToken
_startWaitForPushToken
_readConfigurationOutError:
addDidBecomeReadyKey:callback:
_memberQueueStartListeningForInterestingEvents
_memberQueueStopListeningForInterestingEvents
DMCErrorWithDomain:code:descriptionArray:suggestion:USEnglishSuggestion:underlyingError:errorType:
profiledCheckIn
cachedResponse
deviceIsLocked
schedulePollingServerForCommandWithAssertion:
memberQueueIsMDMConfigurationValid
isTokenUpdateScheduled
_executionQueueCheckForOutstandingActivityIsReachabilityEvent:assertion:completionBlock:
executionQueueTellServerAboutDeviceTokenWithAssertion:completionBlock:
executionQueue
memberQueuePushMagic
executionQueuePushTokenWaitContinuationBlock
setExecutionQueuePushTokenWaitContinuationBlock:
DMCSHA256Hash
memberQueueLastPushTokenHash
setMemberQueueLastPushTokenHash:
memberQueueIncrementTokenUpdateRequestCount
isEqualToString:
memberQueuePushMagicMismatchDateMarker
timeIntervalSinceNow
sharedClient
scheduleTokenUpdate
initWithDictionary:
setMemberQueuePushMagicMismatchDateMarker:
executionQueuePollServerForCommandWithAssertion:completionBlock:
isUserEnrollment
dataUsingEncoding:
executionQueueIsCheckinInProgress
setExecutionQueueIsCheckinInProgress:
memberQueueAccessRights
memberQueueCheckInURL
memberQueueCheckInPinnedSecCertificateRefs
memberQueuePinningRevocationCheckRequired
memberQueueSignMessage
userSwitchAlreadyInitiated
setMemberQueueTokenUpdateRequestCount:
isAwaitingDeviceConfigured
numberWithBool:
dictionaryWithObjects:forKeys:count:
mutableCopy
memberQueueUseEnrollmentID
memberQueueEnrollmentID
dataWithPropertyList:format:options:error:
rmAccountID
initWithURL:data:identity:pinnedCertificates:pinningRevocationCheckRequired:signMessage:isCheckin:isShortTransaction:rmAccountID:
shouldSimulateMDMCommunication
emptySuccessResponseBlock
setSimulatedTransactionBlock:
performSynchronously
httpErrorFromTransaction:assertion:configuration:reauthQueue:
memberQueueDecrementTokenUpdateRequestCount
memberQueueTokenUpdateCount
recordDateForEvent:
recordData:forEvent:
statusCode
performOutstandingActivities
pushTokenCompletionBlock:
memberQueueServerPinnedSecCertificateRefs
responseDataFromResponseDictionary:
performCompletionBlock:
responseData
error
sendResponse:completionBlock:
setMemberQueuePollRequested:
setCachedResponse:
setLastPollingAttempt
DMCVerboseDescription
pollingFailed
DMCSafePropertyListWithData:options:format:error:
length
malformedRequestErrorResult
pollingSucceeded
stringWithFormat:
executionQueueHandleRequest:withMDMParserOfClass:assertion:completionBlock:
dictionaryWithDictionary:
DMCContainsErrorDomain:code:
errorChainFromError:
memberQueueCommandUUID
memberQueueManagingProfileIdentifier
initWithManagingProfileIdentifier:
setServer:
setMemberQueueCommandUUID:
responseFromBasicResponse:
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
addObject:
processRequest:accessRights:assertion:completionBlock:
memberQueueHasOutstandingActivity
fileExistsAtPath:
intValue
numberWithInt:
isEphemeralMultiUser
memberQueueUserSwitchAlreadyInitiated
setMemberQueueUserSwitchAlreadyInitiated:
simulatePushWithAssertion:completion:
isManagedByMDM
DMCErrorWithDomain:code:descriptionArray:errorType:
sharedMigrator
migrateMDMWithContext:
clearCoreFollowup
simulatePushWithCompletion:
isRMDMEnabled
unenrollWithProfileIdentifier:error:
systemConnection
managedAppIDs
setBundleIdentifier:
performRequest:error:
arrayWithObjects:count:
performRequest:completion:
organizationInfo
serverURL
host
DMCDictionaryFromFile:
setProfileIdentifier:
setType:
setTokenUpdateRequestCountToZero
clearCachedResponse
setUserSwitchAlreadyInitiated:
assertionDescriptions
appendFormat:
sharedNetworkObserver
_networkReachabilityDidChange
addNetworkReachableObserver:selector:
buddyDidFinish
_registerForDispatchNotification:outToken:targetQueue:handler:
removeNetworkReachableObserver:
_cancelDispatchNotificationWithToken:
dataWithContentsOfFile:
copyIdentityWithPersistentID:useSystemKeychain:enforcePersonalPersona:
copyCertificatesWithPersistentIDs:useSystemKeychain:enforcePersonalPersona:
initWithString:
sharedServer
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
listener:shouldAcceptNewConnection:
getAssertionDescriptionsWithCompletion:
notifyNewConfigurationWithCompletion:
scheduleTokenUpdateWithCompletion:
scheduleTokenUpdateIfNecessaryWithCompletion:
simulatePushIfNetworkTetheredWithCompletion:
retryNotNowWithCompletion:
migrateMDMWithContext:completion:
reauthenticationCompleteWithCompletion:
uprootMDMWithCompletion:
processDeviceRequest:encodeResponse:completion:
setServerURL:
setOrganizationInfo:
MDMOptions
setMDMOptions:
lastResponseWasNotNow
setLastResponseWasNotNow:
startOutError:
sendResponseSynchronously:outStatusCode:outError:
hasOutstandingActivity
_keybagStateDidChange
organizationName
serverName
daemonIdentifier
softwareUpdatePathFromDisk
handleHTTPStatusGoneResponse
executionQueueRemoveMDMProfileWithAssertion:
willSwitchUser
setMemberQueue:
memberQueuePollRequested
memberQueueTimerContext
setMemberQueueTimerContext:
memberQueuePowerAssertionAssertedNotificationToken
setMemberQueuePowerAssertionAssertedNotificationToken:
memberQueuePowerAssertionDeassertedNotificationToken
setMemberQueuePowerAssertionDeassertedNotificationToken:
memberQueueLastPollingAttempt
memberQueueLastPollingSuccess
memberQueueLastPollingSuccessMonotonicTime
memberQueueLastPollingSuccessRTCResetCount
setJobQueue:
eventQueueBusyCount
setEventQueueBusyCount:
.cxx_destruct
_keybagEventToken
_buddyDoneEventToken
_isObservingReachability
_memberQueueIsMDMConfigurationValid
_memberQueuePinningRevocationCheckRequired
_memberQueueUseDevelopmentAPNS
_memberQueueSignMessage
_memberQueuePollRequested
_memberQueueUserSwitchAlreadyInitiated
_memberQueueUseEnrollmentID
_executionQueueIsCheckinInProgress
_memberQueueAccessRights
_memberQueuePowerAssertionAssertedNotificationToken
_memberQueuePowerAssertionDeassertedNotificationToken
_eventQueueBusyCount
_memberQueue
_memberQueueDevAPSConnection
_memberQueueProdAPSConnection
_memberQueueManagingProfileIdentifier
_memberQueueIdentity
_memberQueueServerPinnedSecCertificateRefs
_memberQueueCheckInPinnedSecCertificateRefs
_memberQueueTopic
_memberQueuePollingInterval
_memberQueueServerURL
_memberQueueCheckInURL
_memberQueueOrganizationInfo
_memberQueueMDMOptions
_memberQueuePushMagic
_memberQueuePushToken
_memberQueueTimerContext
_memberQueueCommandUUID
_memberQueueEnrollmentID
_memberQueueLastPollingAttempt
_memberQueueLastPollingSuccess
_memberQueueLastPollingAttemptMonotonicTime
_memberQueueLastPollingAttemptRTCResetCount
_memberQueueLastPollingSuccessMonotonicTime
_memberQueueLastPollingSuccessRTCResetCount
_jobQueue
_executionQueuePushTokenWaitContinuationBlock
T@"NSObject<OS_dispatch_queue>",&,N,V_memberQueue
T@"APSConnection",&,N,V_memberQueueDevAPSConnection
T@"APSConnection",&,N,V_memberQueueProdAPSConnection
TB,N,V_memberQueueIsMDMConfigurationValid
T@"NSString",&,N,V_memberQueueManagingProfileIdentifier
T^{__SecIdentity=},N,V_memberQueueIdentity
T@"NSArray",&,N,V_memberQueueServerPinnedSecCertificateRefs
T@"NSArray",&,N,V_memberQueueCheckInPinnedSecCertificateRefs
TB,N,V_memberQueuePinningRevocationCheckRequired
T@"NSString",&,N,V_memberQueueTopic
T@"NSNumber",&,N,V_memberQueuePollingInterval
T@"NSURL",&,N,V_memberQueueServerURL
T@"NSURL",&,N,V_memberQueueCheckInURL
T@"NSDictionary",&,N,V_memberQueueOrganizationInfo
T@"NSDictionary",&,N,V_memberQueueMDMOptions
Ti,N,V_memberQueueAccessRights
TB,N,V_memberQueueUseDevelopmentAPNS
T@"NSString",&,N,V_memberQueuePushMagic
TB,N,V_memberQueueSignMessage
T@"NSData",&,N,V_memberQueuePushToken
TB,N,V_memberQueuePollRequested
T@"DMCTimerContext",&,N,V_memberQueueTimerContext
Ti,N,V_memberQueuePowerAssertionAssertedNotificationToken
Ti,N,V_memberQueuePowerAssertionDeassertedNotificationToken
T@"NSString",&,N,V_memberQueueCommandUUID
TB,N,V_memberQueueUserSwitchAlreadyInitiated
TB,N,V_memberQueueUseEnrollmentID
T@"NSString",&,N,V_memberQueueEnrollmentID
T@"NSDate",&,N,V_memberQueueLastPollingAttempt
T@"NSDate",&,N,V_memberQueueLastPollingSuccess
T@"NSNumber",&,N,V_memberQueueLastPollingAttemptMonotonicTime
T@"NSNumber",&,N,V_memberQueueLastPollingAttemptRTCResetCount
T@"NSNumber",&,N,V_memberQueueLastPollingSuccessMonotonicTime
T@"NSNumber",&,N,V_memberQueueLastPollingSuccessRTCResetCount
T@"DMCJobQueue",&,N,V_jobQueue
T@"NSDictionary",&,N
TB,N
T@?,C,N,V_executionQueuePushTokenWaitContinuationBlock
TB,N,V_executionQueueIsCheckinInProgress
Ti,N,V_eventQueueBusyCount
T@"NSDictionary",C,N
TB,R,N
tokenUpdateScheduled
TB,R,N,GisTokenUpdateScheduled
T@"NSDictionary",R,C,N
stringByAppendingPathComponent:
fileExistsAtPath:isDirectory:
_moveNonStoreManagedBooksToSystemGroupContainerFromLegacyPath:
_moveNonStoreManagedBooksToSystemGroupContainer
_updateNonStoreBooksManifestForSystemGroupContainer
_updateSkipBackupKeyForNonStoreBooksDirectory
_updateUnlockTokenSecretToClassDIfNeeded
_resetManagedAppRemovability
userMode
contentsOfDirectoryAtPath:error:
firstObject
numberWithUnsignedLong:
setAttributes:ofItemAtPath:error:
initWithManifestDictionary:
persistentID
fullPath
hasPrefix:
lastPathComponent
setFullPath:
allValues
manifestDictionary
writeToFile:atomically:
isEnterpriseBookBackupAllowed
dataFromService:account:label:description:group:useSystemKeychain:enforcePersonalPersona:outError:
stringFromServiceData:
removeItemForService:account:label:description:useSystemKeychain:enforcePersonalPersona:group:
dataFromString:
setData:forService:account:label:description:access:group:useSystemKeychain:sysBound:enforcePersonalPersona:outError:
setRemovability:forAppWithBundleID:completion:
enumerateKeysAndObjectsUsingBlock:
interfaceWithProtocol:
setExportedInterface:
setXpcConnection:
setExportedObject:
resume
xpcConnection
valueForEntitlement:
remoteProcessHasEntitlement:
lacksEntitlementError:
_xpcConnection
T@"NSXPCConnection",W,N,V_xpcConnection
initWithMachServiceName:
currentRunLoop
Could not update organizatioin name from organization info. Error: %{public}@
Could not get device locator state. Error: %{public}@
Could not get activation lock state. Error: %{public}@
Enabling activation lock.
Could not enable activation lock. Error: %{public}@
Scheduling poll in %f seconds, tolerance %f.
MDMDServer: memberQueueForgetCurrentConfiguration: clearing push topics! and forgetting current APNS configuration!
MDMDServer: _readConfigurationOutError:
MDMDServer: _readConfigurationOutError: doneblock:
MDMDServer: readConfigurationOutError: doneblock: creating Dev APNS connection
MDMDServer: readConfigurationOutError: doneblock: creating Prod APNS connection
MDMDServer: readConfigurationOutError: doneblock: valid MDM configuration
MDMDServer: readConfigurationOutError: doneblock: using Dev APNS, enabling topics: %{public}@
MDMDServer: readConfigurationOutError: doneblock: using Prod APNS, enabling topics: %{public}@
No valid MDM configuration found. Error: %{public}@
MDMDServer: _readConfigurationOutError: doneblock: No valid MDM installation found. MDM will not listen to push messages. Error: %{public}@
Valid MDM configuration found.
No valid MDM configuration found.
Not polling in response to reachability change. Waiting for device to unlock first.
Scheduling poll of MDM server.
No cached response to send.
Checking for outstanding activity. Reachability event: %d
Push token received.
Push token data: '%{public}@' Topic: '%{public}@' Magic: '%{public}@'
Push token is new, need to update
Push token is not new, don't need to update
Received push notification.
Push notification data: %{public}@
Ignoring push notification with mismatched topic: %{public}@
Rejecting MDM push dictionary because it does not contain the "%{public}@" key
Rejecting MDM push dictionary because the "%{public}@" key is not a string.
Rejecting MDM push dictionary because it does not have the right magic string.
Push magic mismatch marker already exists with date: %{public}@
Existing push magic mismatch marker is older than %f seconds (%f seconds old), scheduling token update
Setting push magic mismatch marker with date: %{public}@
Ignoring extra keys in push dictionary: %{public}@
Telling server about new device token.
Telling MDM Check-In Server about new device token.
User switch already initiated. Not telling server about new token right now.
The token update dictionary has Enrollment ID: %{public}@
The token update dictionary has UDID: %{public}@
The certificate that the device is using to authenticate itself to the server has the following properties: %{public}@
Transaction completed. Status: %d
Cannot tell server of a new push token. Error: %{public}@
Polling MDM server %{public}@ for next command.
User switch already initiated. Not polling the server for commands right now.
Scheduling safety poll in %f seconds, tolerance %f.
Could not send response to MDM server. Error: %{public}@
Transaction completed. Status: %d, ResponseUUID: %{public}@
Could not parse command. Error: %{public}@
Server has no commands for this device.
Command Status: %{public}@
Error: %{public}@
Command Status: %{public}@
Processing command UUID: %{public}@
Network reachability has changed.
<%s %s:%lu>
Asked to poll server if tethered, but no MDM installation exists.
Last response was not a NotNow. Ignoring poll request.
Uprooting MDM installation
Could not execute remote management unenrollment, error: %{public}@
Could not stop managing app: %{public}@, error: %{public}@
Ignoring stop managing books error: %{public}@
Removing MDM profile.
Could not remove MDM profile: %{public}@
Will switch user. Unfinished assertions:
%{public}@
Waiting for push token to be assigned to this device...
MDM migrating...
Unable to create unlock escrow during erase-context migration: %{public}@
Found non-store managed books in seed-only system location. Migrating...
MDM completed migration.
Migrating non-store managed books to system group container...
Moving legacy non-store managed books directory...
Failed to move legacy non-store managed books with error %{public}@
Failed to delete legacy non-store managed books with error %{public}@
Failed to move legacy non-store managed books with no error
Failed to set permissions on new non-store managed books directory with error %{public}@
Removing empty legacy non-store managed books...
Failed to delete empty legacy non-store managed books with error %{public}@
Failed to fix permissions of device's MDM managed non-store books with errors %{public}@
Completed non-store managed books system group container migration.
Beginning update of non-store managed books manifest...
Completed non-store managed books manifest update with no manifest.
Completed non-store managed books manifest update with empty manifest.
Completed non-store managed books manifest update with no books.
Completed non-store managed books manifest update.
Migrating enterprise book backup flag...
Failed to set backup exclusion on enterprise books directory
Set backup exclusion on enterprise books directory to %d
Could not get unlock token item: %{public}@
Could not set unlock token item: %{public}@
Not migrating old MDM secret because we already have a new one!
Cleaning up managed app removability...
Could not set removability for bundle identifier: %{bundleIdentifier}@, error: %{public}@
Accepted new connection.
mdmd starting...
mdmd stopping.
MDMDServer
DMCJobQueueObserver
NSObject
APSConnectionDelegate
NSXPCListenerDelegate
MDMXPCProtocol
MDMClientProtocol
MDMDMigrator
MDMDServiceDelegate
MDMDServicer
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v24@0:8@16
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v28@0:8i16@?20
v36@0:8@16B24@?28
v24@0:8@?<v@?@"NSError">16
v28@0:8i16@?<v@?@"NSError">20
v36@0:8@"NSDictionary"16B24@?<v@?@"NSError"@"NSDictionary"@"NSData">28
v16@0:8
v20@0:8B16
B24@0:8^@16
v36@0:8B16@20@?28
v32@0:8@16@?24
@40@0:8@16^q24^@32
@24@0:8@16
v48@0:8@16#24@32@?40
i16@0:8
v20@0:8i16
I48@0:8r*16^i24@32@?40
I20@0:8I16
^{__SecIdentity=}16@0:8
v24@0:8^{__SecIdentity=}16
@?16@0:8
@"NSObject<OS_dispatch_queue>"
@"APSConnection"
@"NSString"
^{__SecIdentity=}
@"NSArray"
@"NSNumber"
@"NSURL"
@"NSDictionary"
@"NSData"
@"DMCTimerContext"
@"NSDate"
@"DMCJobQueue"
@"NSXPCConnection"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241115</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>mdmd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.devicemanagementclient.mdmd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundlePackageType</key>
<string>com.apple.product-type.tool</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>13A6139f</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>8.0</string>
<key>DTSDKBuild</key>
<string>19R5266f</string>
<key>DTSDKName</key>
<string>watchsimulator8.0.internal</string>
<key>DTXcode</key>
<string>1300</string>
<key>DTXcodeBuild</key>
<string>13A6139f</string>
<key>MinimumOSVersion</key>
<string>8.0</string>
<key>NSAppTransportSecurity</key>
<dict>
<key>NSAllowsArbitraryLoads</key>
<false/>
</dict>
<key>NSMainNibFile</key>
<string>MainWindow</string>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>application-identifier</key>
<string>com.apple.devicemanagementclient.mdmd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.GAX.SPI</key>
<true/>
<key>com.apple.MobileInternetSharing.allow</key>
<true/>
<key>com.apple.SystemConfiguration.SCPreferences-write-access</key>
<array>
<string>com.apple.AutoWake.xml</string>
<string>preferences.plist</string>
</array>
<key>com.apple.appletv.pbs.allow-active-application</key>
<true/>
<key>com.apple.appletv.pbs.osupdate-service-access</key>
<true/>
<key>com.apple.appstored.install-apps</key>
<true/>
<key>com.apple.apsd.ios-device-push-token</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.dmd-access</key>
<true/>
<key>com.apple.dmd.operation.apply-redemption-code</key>
<true/>
<key>com.apple.dmd.operation.begin-transaction</key>
<true/>
<key>com.apple.dmd.operation.clear-activation-lock-bypass-code</key>
<true/>
<key>com.apple.dmd.operation.clear-device-passcode</key>
<true/>
<key>com.apple.dmd.operation.clear-restrictions-password</key>
<true/>
<key>com.apple.dmd.operation.delete-user</key>
<true/>
<key>com.apple.dmd.operation.disable-lost-mode</key>
<true/>
<key>com.apple.dmd.operation.enable-lost-mode</key>
<true/>
<key>com.apple.dmd.operation.end-transaction</key>
<true/>
<key>com.apple.dmd.operation.erase-device</key>
<true/>
<key>com.apple.dmd.operation.fetch-activation-lock-bypass-code</key>
<true/>
<key>com.apple.dmd.operation.fetch-apps</key>
<true/>
<key>com.apple.dmd.operation.fetch-available-os-updates</key>
<true/>
<key>com.apple.dmd.operation.fetch-certificates</key>
<true/>
<key>com.apple.dmd.operation.fetch-device-properties</key>
<true/>
<key>com.apple.dmd.operation.fetch-location</key>
<true/>
<key>com.apple.dmd.operation.fetch-managed-books</key>
<true/>
<key>com.apple.dmd.operation.fetch-os-update-status</key>
<true/>
<key>com.apple.dmd.operation.fetch-profiles</key>
<true/>
<key>com.apple.dmd.operation.fetch-provisioning-profiles</key>
<true/>
<key>com.apple.dmd.operation.fetch-restrictions</key>
<true/>
<key>com.apple.dmd.operation.fetch-security-information</key>
<true/>
<key>com.apple.dmd.operation.fetch-unlock-token</key>
<true/>
<key>com.apple.dmd.operation.fetch-users</key>
<true/>
<key>com.apple.dmd.operation.install-app</key>
<true/>
<key>com.apple.dmd.operation.install-managed-book</key>
<true/>
<key>com.apple.dmd.operation.install-profile</key>
<true/>
<key>com.apple.dmd.operation.install-provisioning-profile</key>
<true/>
<key>com.apple.dmd.operation.invite-user-to-vpp</key>
<true/>
<key>com.apple.dmd.operation.lock-device</key>
<true/>
<key>com.apple.dmd.operation.log-out-user</key>
<true/>
<key>com.apple.dmd.operation.play-lost-mode-sound</key>
<true/>
<key>com.apple.dmd.operation.refresh-cellular-plans</key>
<true/>
<key>com.apple.dmd.operation.remove-app</key>
<true/>
<key>com.apple.dmd.operation.remove-managed-book</key>
<true/>
<key>com.apple.dmd.operation.remove-profile</key>
<true/>
<key>com.apple.dmd.operation.remove-protected-profile</key>
<true/>
<key>com.apple.dmd.operation.remove-provisioning-profile</key>
<true/>
<key>com.apple.dmd.operation.request-airplay-mirroring</key>
<true/>
<key>com.apple.dmd.operation.restart-device</key>
<true/>
<key>com.apple.dmd.operation.schedule-os-update</key>
<true/>
<key>com.apple.dmd.operation.schedule-os-update-scan</key>
<true/>
<key>com.apple.dmd.operation.set-app-analytics-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-app-associated-domains</key>
<true/>
<key>com.apple.dmd.operation.set-app-associated-domains-enable-direct-downloads</key>
<true/>
<key>com.apple.dmd.operation.set-app-configuration</key>
<true/>
<key>com.apple.dmd.operation.set-app-options</key>
<true/>
<key>com.apple.dmd.operation.set-app-removability</key>
<true/>
<key>com.apple.dmd.operation.set-app-vpn-uuid</key>
<true/>
<key>com.apple.dmd.operation.set-bluetooth-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-data-roaming-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-device-name</key>
<true/>
<key>com.apple.dmd.operation.set-diagnostic-submission-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-maximum-resident-users</key>
<true/>
<key>com.apple.dmd.operation.set-passcode-lock-grace-period</key>
<true/>
<key>com.apple.dmd.operation.set-personal-hotspot-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-user-language</key>
<true/>
<key>com.apple.dmd.operation.set-user-locale</key>
<true/>
<key>com.apple.dmd.operation.set-voice-roaming-enabled</key>
<true/>
<key>com.apple.dmd.operation.set-wallpaper</key>
<true/>
<key>com.apple.dmd.operation.shut-down-device</key>
<true/>
<key>com.apple.dmd.operation.start-managing-app</key>
<true/>
<key>com.apple.dmd.operation.stop-airplay-mirroring</key>
<true/>
<key>com.apple.dmd.operation.stop-managing-app</key>
<true/>
<key>com.apple.dmd.operation.stop-managing-books</key>
<true/>
<key>com.apple.dmd.operation.trigger-diagnostics</key>
<true/>
<key>com.apple.dmd.operation.update-app</key>
<true/>
<key>com.apple.dmd.operation.validate-applications</key>
<true/>
<key>com.apple.frontboard.shutdown</key>
<true/>
<key>com.apple.icloud.FindMyDevice.FindMyDeviceHelperXPCService.access</key>
<true/>
<key>com.apple.icloud.findmydeviced.access</key>
<true/>
<key>com.apple.itunesstored.metrics</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.keystore.escrow.create</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.managedconfiguration.mdmd-access</key>
<true/>
<key>com.apple.managedconfiguration.mdmuserd-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.managedconfiguration.profiled.configurationprofiles</key>
<array>
<string>Inspection</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>SilentNonUIInstallation</string>
<string>UIInstallation</string>
<string>CloudLockedRemoval</string>
</array>
<key>com.apple.managedconfiguration.profiled.get</key>
<array>
<string>MachineInfo</string>
<string>ManagedApplications</string>
<string>NetworkExtension</string>
<string>WiFiNetworks</string>
</array>
<key>com.apple.managedconfiguration.profiled.provisioningprofiles</key>
<array>
<string>Installation</string>
<string>PopInstallationQueue</string>
<string>Removal</string>
<string>Validation</string>
</array>
<key>com.apple.managedconfiguration.profiled.set</key>
<array>
<string>ActivationLock</string>
<string>ActivationRecord</string>
<string>Certificates</string>
<string>ClientRestrictions</string>
<string>CloudConfiguration</string>
<string>Passcode</string>
<string>Safari</string>
<string>UserSettings</string>
</array>
<key>com.apple.managedconfiguration.profiled.usercompliance</key>
<true/>
<key>com.apple.mkb.usersession.delete</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.loginwindow</key>
<true/>
<key>com.apple.mobile.keybagd.UserManager.bubblepop</key>
<true/>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.keychain.sysbound</key>
<true/>
<key>com.apple.private.lockdown.finegrained-get</key>
<array>
<string>NULL/DeviceName</string>
<string>com.apple.mobile.backup/LastCloudBackupDate</string>
</array>
<key>com.apple.private.lockdown.finegrained-set</key>
<array>
<string>NULL/DeviceName</string>
</array>
<key>com.apple.private.lockdown.ignore-mc-name-restriction</key>
<true/>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>Uninstall</string>
<string>Lookup</string>
<string>CopyDiskUsageForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>InstallForLaunchServices</string>
</array>
<key>com.apple.private.remotemanagement.enrollment</key>
<true/>
<key>com.apple.private.system-keychain</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.runningboard.process-state</key>
<true/>
<key>com.apple.security.iokit-user-client-class</key>
<array>
<string>AGXCommandQueue</string>
<string>AGXDevice</string>
<string>AGXDeviceUserClient</string>
<string>AGXSharedUserClient</string>
<string>AppleJPEGDriverUserClient</string>
<string>IOAccelContext</string>
<string>IOAccelContext2</string>
<string>IOAccelDevice</string>
<string>IOAccelDevice2</string>
<string>IOAccelSharedUserClient</string>
<string>IOAccelSharedUserClient2</string>
<string>IOAccelSubmitter2</string>
<string>IOSurfaceAcceleratorClient</string>
<string>IOSurfaceRootUserClient</string>
</array>
<key>com.apple.security.system-groups</key>
<array>
<string>systemgroup.com.apple.configurationprofiles</string>
<string>systemgroup.com.apple.media.books.managed</string>
</array>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.springboard.remote-alert</key>
<true/>
<key>com.apple.springboard.wipedevice</key>
<true/>
<key>com.apple.timed</key>
<true/>
<key>com.apple.tzlink.allow</key>
<true/>
<key>com.apple.umd.usersession.provision</key>
<true/>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.wipedevice</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
zPLR
zPLR
