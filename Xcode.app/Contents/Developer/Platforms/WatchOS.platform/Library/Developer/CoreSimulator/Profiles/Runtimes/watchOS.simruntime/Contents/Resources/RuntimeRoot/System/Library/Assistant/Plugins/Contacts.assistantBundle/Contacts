com.apple.contact.people
%@-fullSyncSequenceNumberSnapshot
-[ABAssistantSyncPeople getLastClearedSyncAnchor]
-[ABAssistantSyncPeople clearChangeHistoryToSyncAnchor:]
-[ABAssistantSyncPeople contactsForFullSync]_block_invoke
v24@?0@"CNContact"8^B16
-[ABAssistantSyncPeople contactsForFullSync]
-[ABAssistantSyncPeople copyChangeHistoryAfterSyncAnchor:]
-[ABAssistantSyncPeople newSADomainObjectFromCNContactWithIdentifier:]
%@-currentSyncAnchorSnapshot
-[CNChangeHistoryContactChange(CNAssistantAdditions) iOSLegacyIdentifier]
com.apple.assistant.Contacts
CNAssistantSyncInfo.plist
+[ABAssistantSyncInfoPersistence saveFileForDictionary:]
Expected identifier to be set
Expected SAABPerson for identifier
Invalid person identifier
Invalid person identifier (person does not exist)
-[CNAssistantCommandCancelPerson removeUpdatesFromCache]
v32@?0@8Q16^B24
Expected scope to be local or remote
Birthday not supported
Relationship not supported
No search parameter specified (me, name, email, phone, company or address)
Only support single parameter searching (me, name, email, phone, company or address)
Only support local search with an accountIdentifier for name
Only support remote search for name, email or company
Search error: %@
B16@?0@"CNContact"8
@"SAPerson"16@?0@"CNContact"8
@"NSString"16@?0@"CNContainer"8
Expected domainItem to be set
Expected SAABPerson for domainItem
addressbook://%@
Failed to open url %@
Expected personSearches to be set
v16@?0@"NSDictionary"8
-[CNAssistantCommandClear clearAceDomainObjects]
Expected SAABPerson for setFields
Expected SAABPerson for addFields
Expected SAABPerson for removeFields
Failed to cache the update
-[ABAssistantSyncWorker beginSyncWithAnchor:validity:forKey:beginInfo:]
-[ABAssistantSyncWorker _saDomainObjectWithReadactMeCard:]
-[ABAssistantSyncWorker getChangeAfterAnchor:changeInfo:]
-[ABAssistantSyncWorker syncDidEnd]
-[ABAssistantSyncWorker syncSnapshotForKey:]
.verification
%i %@
-[ABAssistantSyncWorker getCurrentValidity]
-[ABAssistantSyncWorker validateKey:]
wrong key
expecting key prefix %@
-[ABAssistantSyncWorker registerChangeHistoryClientIdentifier:]
-[ABAssistantSyncWorker unregisterChangeHistoryClientIdentifier:]
Expected identifiers to be set
%li %d
sequenceNumber = %li, contactLegacyIdentifier = %d, shouldResetSync = %@, shouldDeleteSyncedContacts = %@, shouldFullSync = %@, shouldResumePreviousFullSync = %@
sequenceNumber = %li, contactLegacyIdentifier = %d
Failed to update the AB person
com.apple.AssistantServices
CNAssistantUpdatesCache.plist
%s Failed to get latest consumed change history anchor for %@, error = %@
%s Failed to get clear change history for %@ to sequence number = %li, error = %@
%s ERROR: contacts for full sync are not sorted in monotonically increasing order.
%s failed to enumerate all contacts
%s Failed to enumerate all contacts, error = %@
%s Failed to fetch change history for %@, error = %@
%s failed to fetch contact with identifier = %@
%s failed to fetch contact with identifier = %@, error = %@
%s Error retrieving contact for iOS legacy identifier: %@
%s Error writing sync info dictionary: %@
%s Cannot write sync info dictionary to path %@
%s Failed to remove updates from cache for identifer %@
%s Failed to remove the updates cache file.
%s > beginSyncWithAnchor:%@ validity:%@ forKey:%@
%s AddressBook database is not available to sync with.
%s calling [beginInfo resetWithValidity:%@], because validity not current
%s syncAnchor: %@
%s calling [syncAnchor resetSync], sync anchor is older than last cleared change sync anchor of %@
%s calling [beginInfo resetWithValidity:%@], because syncAnchor.shouldResetSync
%s clearing change history up to %@
%s full sync should be performed
%s full sync database snapshot, sequenceNumber = %i
%s full sync trying to cache all contacts
%s full sync cached %li contacts, max contactIdentifier = %@
%s full sync trying to resume previous full sync
%s full sync resuming previous full sync, self.syncIndex = %li, contactLegacyIdentifier = %d
%s full sync failed to resume previous full sync
%s full sync has no contacts to sync, synthesizing end anchor = %@
%s change sync trying to cache changed contacts
%s change sync cached %li contacts
%s < beginSyncWithAnchor
%s Redacting Me contact, saPerson.internalGUID=%@
%s > getChangeAfterAnchor:%@
%s < getChangeAfterAnchor - sync is not available
%s no more changes coming
%s full sync trying to find next contact to sync, self.syncIndex=%li, self.syncCount=%li
%s change sync found next contact to sync, changeInfo.object=%@, changeInfo.postAnchor=%@
%s full sync record anchor, changeInfo.postAnchor = %@
%s full sync synthesizing end anchor, changeInfo.postAnchor = %@
%s full sync failed to find any contacts to sync
%s change sync trying to find next contact to sync, self.syncIndex=%li, self.syncCount=%li
%s self.syncIndex = %li, contactIdentifier = %@, changeType = %li, sequenceNumber = %li
%s change sync found next contact to sync, changeInfo.isDelete=YES, changeInfo.object=%@
%s change sync found next contact to sync, changeInfo.object=%@
%s change sync anchor, changeInfo.postAnchor = %@
%s change sync failed to find any contacts to sync
%s < getChangeAfterAnchor
%s > syncDidEnd
%s syncSnapshotForKey:%@, validity=%@, count=%li, anchor="%@"
%s Failed to get the store identifier, error = %@
%s raising an exception because key is wrong, was expecting key with prefix "%@"
%s Failed to register %@ for contacts change history, error = %@
%s Failed to unregister %@ for contacts change history, error = %@
zPLR
zPLR
ABAssistantSyncPeople
ABAssistantSyncDelegate
NSObject
ABAssistantSyncHandler
AFSyncHandler
CNAssistantAdditions
ABAssistantSyncInfoPersistence
CNAssistantCommandCancelPerson
CNAssistantCommand
AFServiceCommand
MapAndFilter
CNAssistantCommandSearchPerson
CNAssistantCommandPunchOut
CNAssistantCommandMultiSearchPerson
CNAssistantCommandClear
AFDomainObjectClearing
CNAssistantCommandUpdatePerson
ABAssistantSyncWorker
CNAssistantCommandRetrievePerson
ABAssistantSyncAnchor
CNAssistantCommandCommitPerson
CNAssistantCache
init
initWithDelegate:
setSyncWorker:
changeHistoryClientIdentifier
stringWithFormat:
contactStore
latestConsumedChangeHistoryAnchorForClientIdentifier:error:
sequenceNumber
initWithSequenceNumber:contactLegacyIdentifier:
verifyChangeHistoryForClientIdentifier:error:
initWithSequenceNumber:
initWithClientIdentifier:
setToChangeAnchor:
executeChangeHistoryClearRequest:error:
individualContactCountWithError:
integerValue
descriptorsForRequiredKeysForConversionType:
initWithKeysToFetch:
setUnifyResults:
addObject:
iOSLegacyIdentifier
enumerateContactsWithFetchRequest:error:usingBlock:
setIncludeChangeAnchors:
changeHistoryWithFetchRequest:error:
contactChanges
createSAPersonFromCNContact:conversionType:
arrayWithObjects:count:
predicateForContactsWithIdentifiers:
setPredicate:
newSADomainObjectFromCNContact:
assistantIDFromContactID:
setIdentifier:
_currentSyncSnapshotProperty
saveString:forKey:
setCurrentSyncSnapshotAnchorString:
stringForKey:
anchorWithString:forContactStore:
copyChangeHistoryAfterSyncAnchor:
lastObject
changeAnchor
stringValueWithSequenceNumber:contactLegacyIdentifier:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
expectedSyncKeyPrefix
setChangeHistoryClientIdentifier:
fullSyncSnapshotProperty
hasContactsForFullSync
contactsForFullSync
getLastClearedSyncAnchor
verifyChangeHistory
clearChangeHistoryToSyncAnchor:
newSADomainObjectFromCNContactWithIdentifier:
newSADomainObjectFromDeletedContactIdentifier:
resetCurrentSyncSnapshot
currentSyncSnapshotAnchorString
currentSyncSnapshotCount
T@"CNContactStore",R,N
syncWorker
syncSnapshotForKey:
syncVerificationKeyForKey:
beginSyncWithAnchor:validity:forKey:beginInfo:
getChangeAfterAnchor:changeInfo:
syncDidEnd
beginSyncWithAnchor:validity:count:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:configuration:
beginSyncWithInfo:configuration:
currentSyncSnapshot
setContactStore:
T@"CNContactStore",&,N
.cxx_destruct
_contactStore
_syncWorker
_changeHistoryClientIdentifier
T@"ABAssistantSyncWorker",&,N,V_syncWorker
T@"NSString",&,N,V_changeHistoryClientIdentifier
T@"CNContactStore",&,N,V_contactStore
contact
isKeyAvailable:
contactIdentifier
unifiedContactWithIdentifier:keysToFetch:error:
Ti,R,N
firstObject
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
filePath
fileExistsAtPath:
isReadableFileAtPath:
dictionaryWithContentsOfFile:
dictionary
isWritableFileAtPath:
fileURLWithPath:
writeToURL:error:
infoDictionary
setObject:forKeyedSubscript:
saveFileForDictionary:
objectForKeyedSubscript:
saveValue:forKey:
valueForKey:
validate
removeUpdatesFromCache
identifier
commandFailedWithReason:
absoluteString
contactIDFromAssistantID:
removeUpdatesForAssistantUrl:
domainObjectCancelCompleted
performWithCompletion:
performWithCompletion:serviceHelper:
performWithCompletion:serviceHelper:executionInfo:
initWithDictionary:
count
arrayWithCapacity:
enumerateObjectsUsingBlock:
mapUsingBlock:
filterUsingBlock:
perform
scope
isEqualToString:
birthday
relationship
name
email
phone
company
address
accountIdentifier
boolValue
meContact:
code
searchLocal:
searchRemote:
personSearchCompletedWithResults:
descriptorsForRequiredKeys
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
personFromContact:
predicateForContactsMatchingName:options:
unifiedContactsMatchingPredicate:keysToFetch:error:
predicateForContactsWithOrganizationName:
contactType
arrayByAddingObjectsFromArray:
searchByName:
emailAddress
predicateForContactsMatchingEmailAddress:
number
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:
street
setStreet:
city
setCity:
stateCode
setState:
postalCode
setPostalCode:
countryCode
setISOCountryCode:
predicateForContactsMatchingPostalAddress:
markMeContactInPeople:usingStore:
predicateForContainersInAccountWithIdentifier:
containersMatchingPredicate:error:
predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:
punchOutWithServiceHelper:
domainItem
URLWithString:
openSensitiveURL:
commandSucceeded
validateIdentifier
personSearches
countByEnumeratingWithState:objects:count:
resultsLimit
refId
setRefId:
results
personSearchCompleted
multiPersonSearchCompleted
setPersonSearchCompleteds:
removeAllUpdates
clearAceDomainObjects
addToUpdatesCache
setFields
addFields
removeFields
addUpdate:forAssistantUrl:
domainObjectUpdateCompleted
setDelegate:
setSyncAvailable:
validateKey:
delegate
registerChangeHistoryClientIdentifier:
getCurrentValidity
resetWithValidity:
shouldFullSync
isOlderThanAnchor:
shortDescription
resetSync
shouldResetSync
unregisterChangeHistoryClientIdentifier:
shouldClearChangeHistoryForPreviouslySyncedContacts
shouldResumePreviousFullSync
saveSequenceCount
numberWithInt:
clearSyncCache
setAllContacts:
allContacts
setSyncIndex:
setSyncCount:
syncCount
syncIndex
objectAtIndexedSubscript:
contactLegacyIdentifier
intValue
setContactsChanges:
contactsChanges
internalGUID
syncAvailable
setPostAnchor:
setObject:
_saDomainObjectWithReadactMeCard:
object
postAnchor
stringValueForFullSyncWithContactLegacyIdentifier:
changeType
setIsDelete:
setValidity:
setCount:
setAnchor:
validity
anchor
stringByAppendingString:
identifierWithError:
hasPrefix:
raise:format:
registerChangeHistoryClientIdentifier:error:
unregisterChangeHistoryClientIdentifier:error:
_syncAvailable
_delegate
_allContacts
_contactsChanges
_syncIndex
_syncCount
T@"<ABAssistantSyncDelegate>",W,V_delegate
T@"NSArray",&,V_allContacts
T@"NSArray",&,V_contactsChanges
Tq,V_syncIndex
Tq,V_syncCount
TB,V_syncAvailable
retrieve
identifiers
array
personFromContact:useABPerson:
setObjects:
componentsSeparatedByString:
objectAtIndex:
scannerWithString:
scanInteger:
stringValue
_contactLegacyIdentifier
_sequenceNumber
Tq,R,N,V_sequenceNumber
Ti,R,N,V_contactLegacyIdentifier
T@"NSString",R,N
TB,R,N
commitFromUpdatesCache
updatesForAssistantUrl:
domainObjectUpdateWithDictionary:context:
applyUpdate:toContactWithIdentifier:usingStore:saveRequest:
executeSaveRequest:error:
domainObjectCommitCompleted
commandFailedWithErrorCode:
cachePath
writeToFile:atomically:
cacheDictionary
mutableCopy
initWithCapacity:
saveCache:
removeObjectForKey:
removeItemAtPath:error:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
@24@0:8@16
v16@0:8
q16@0:8
v24@0:8@"NSString"16
@"NSArray"16@0:8
@"ABAssistantSyncAnchor"16@0:8
v24@0:8@"ABAssistantSyncAnchor"16
@"NSArray"24@0:8@"ABAssistantSyncAnchor"16
@"SADomainObject"24@0:8@"CNContact"16
@"SADomainObject"24@0:8@"NSString"16
@"CNContactStore"16@0:8
v48@0:8@16@24@32@40
v56@0:8@16@24q32@40@48
v64@0:8@16@24q32@40@48@56
v32@0:8@16@24
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"<AFSyncBeginInfo>"40
v56@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48
v64@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48@"<AFSyncConfiguration>"56
v32@0:8@"<AFSyncBeginInfo>"16@"<AFSyncConfiguration>"24
v32@0:8@"NSString"16@"<AFSyncChangeInfo>"24
@"AFSyncSnapshot"24@0:8@"NSString"16
@"AFSyncSnapshot"16@0:8
@"NSString"24@0:8@"NSString"16
v24@0:8@"CNContactStore"16
@"CNContactStore"
@"ABAssistantSyncWorker"
@"NSString"
i16@0:8
v24@0:8@?16
v32@0:8@?16@24
v40@0:8@?16@24@32
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24
v40@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24@"AFCommandExecutionInfo"32
@24@0:8@"NSDictionary"16
@24@0:8@?16
@24@0:8^@16
v24@0:8q16
v20@0:8B16
@"<ABAssistantSyncDelegate>"
@"NSArray"
@28@0:8q16i24
@20@0:8i16
@32@0:8@16@24
B32@0:8@16@24
com.apple.contact.people
%@-fullSyncSequenceNumberSnapshot
-[ABAssistantSyncPeople getLastClearedSyncAnchor]
-[ABAssistantSyncPeople clearChangeHistoryToSyncAnchor:]
-[ABAssistantSyncPeople contactsForFullSync]_block_invoke
v24@?0@"CNContact"8^B16
-[ABAssistantSyncPeople contactsForFullSync]
-[ABAssistantSyncPeople copyChangeHistoryAfterSyncAnchor:]
-[ABAssistantSyncPeople newSADomainObjectFromCNContactWithIdentifier:]
%@-currentSyncAnchorSnapshot
-[CNChangeHistoryContactChange(CNAssistantAdditions) iOSLegacyIdentifier]
com.apple.assistant.Contacts
CNAssistantSyncInfo.plist
+[ABAssistantSyncInfoPersistence saveFileForDictionary:]
Expected identifier to be set
Expected SAABPerson for identifier
Invalid person identifier
Invalid person identifier (person does not exist)
-[CNAssistantCommandCancelPerson removeUpdatesFromCache]
v32@?0@8Q16^B24
Expected scope to be local or remote
Birthday not supported
Relationship not supported
No search parameter specified (me, name, email, phone, company or address)
Only support single parameter searching (me, name, email, phone, company or address)
Only support local search with an accountIdentifier for name
Only support remote search for name, email or company
Search error: %@
B16@?0@"CNContact"8
@"SAPerson"16@?0@"CNContact"8
@"NSString"16@?0@"CNContainer"8
Expected domainItem to be set
Expected SAABPerson for domainItem
addressbook://%@
Failed to open url %@
Expected personSearches to be set
v16@?0@"NSDictionary"8
-[CNAssistantCommandClear clearAceDomainObjects]
Expected SAABPerson for setFields
Expected SAABPerson for addFields
Expected SAABPerson for removeFields
Failed to cache the update
-[ABAssistantSyncWorker beginSyncWithAnchor:validity:forKey:beginInfo:]
-[ABAssistantSyncWorker _saDomainObjectWithReadactMeCard:]
-[ABAssistantSyncWorker getChangeAfterAnchor:changeInfo:]
-[ABAssistantSyncWorker syncDidEnd]
-[ABAssistantSyncWorker syncSnapshotForKey:]
.verification
%i %@
-[ABAssistantSyncWorker getCurrentValidity]
-[ABAssistantSyncWorker validateKey:]
wrong key
expecting key prefix %@
-[ABAssistantSyncWorker registerChangeHistoryClientIdentifier:]
-[ABAssistantSyncWorker unregisterChangeHistoryClientIdentifier:]
Expected identifiers to be set
%li %d
sequenceNumber = %li, contactLegacyIdentifier = %d, shouldResetSync = %@, shouldDeleteSyncedContacts = %@, shouldFullSync = %@, shouldResumePreviousFullSync = %@
sequenceNumber = %li, contactLegacyIdentifier = %d
Failed to update the AB person
com.apple.AssistantServices
CNAssistantUpdatesCache.plist
%s Failed to get latest consumed change history anchor for %@, error = %@
%s Failed to get clear change history for %@ to sequence number = %li, error = %@
%s ERROR: contacts for full sync are not sorted in monotonically increasing order.
%s failed to enumerate all contacts
%s Failed to enumerate all contacts, error = %@
%s Failed to fetch change history for %@, error = %@
%s failed to fetch contact with identifier = %@
%s failed to fetch contact with identifier = %@, error = %@
%s Error retrieving contact for iOS legacy identifier: %@
%s Error writing sync info dictionary: %@
%s Cannot write sync info dictionary to path %@
%s Failed to remove updates from cache for identifer %@
%s Failed to remove the updates cache file.
%s > beginSyncWithAnchor:%@ validity:%@ forKey:%@
%s AddressBook database is not available to sync with.
%s calling [beginInfo resetWithValidity:%@], because validity not current
%s syncAnchor: %@
%s calling [syncAnchor resetSync], sync anchor is older than last cleared change sync anchor of %@
%s calling [beginInfo resetWithValidity:%@], because syncAnchor.shouldResetSync
%s clearing change history up to %@
%s full sync should be performed
%s full sync database snapshot, sequenceNumber = %i
%s full sync trying to cache all contacts
%s full sync cached %li contacts, max contactIdentifier = %@
%s full sync trying to resume previous full sync
%s full sync resuming previous full sync, self.syncIndex = %li, contactLegacyIdentifier = %d
%s full sync failed to resume previous full sync
%s full sync has no contacts to sync, synthesizing end anchor = %@
%s change sync trying to cache changed contacts
%s change sync cached %li contacts
%s < beginSyncWithAnchor
%s Redacting Me contact, saPerson.internalGUID=%@
%s > getChangeAfterAnchor:%@
%s < getChangeAfterAnchor - sync is not available
%s no more changes coming
%s full sync trying to find next contact to sync, self.syncIndex=%li, self.syncCount=%li
%s change sync found next contact to sync, changeInfo.object=%@, changeInfo.postAnchor=%@
%s full sync record anchor, changeInfo.postAnchor = %@
%s full sync synthesizing end anchor, changeInfo.postAnchor = %@
%s full sync failed to find any contacts to sync
%s change sync trying to find next contact to sync, self.syncIndex=%li, self.syncCount=%li
%s self.syncIndex = %li, contactIdentifier = %@, changeType = %li, sequenceNumber = %li
%s change sync found next contact to sync, changeInfo.isDelete=YES, changeInfo.object=%@
%s change sync found next contact to sync, changeInfo.object=%@
%s change sync anchor, changeInfo.postAnchor = %@
%s change sync failed to find any contacts to sync
%s < getChangeAfterAnchor
%s > syncDidEnd
%s syncSnapshotForKey:%@, validity=%@, count=%li, anchor="%@"
%s Failed to get the store identifier, error = %@
%s raising an exception because key is wrong, was expecting key with prefix "%@"
%s Failed to register %@ for contacts change history, error = %@
%s Failed to unregister %@ for contacts change history, error = %@
ABAssistantSyncPeople
ABAssistantSyncDelegate
NSObject
ABAssistantSyncHandler
AFSyncHandler
CNAssistantAdditions
ABAssistantSyncInfoPersistence
CNAssistantCommandCancelPerson
CNAssistantCommand
AFServiceCommand
MapAndFilter
CNAssistantCommandSearchPerson
CNAssistantCommandPunchOut
CNAssistantCommandMultiSearchPerson
CNAssistantCommandClear
AFDomainObjectClearing
CNAssistantCommandUpdatePerson
ABAssistantSyncWorker
CNAssistantCommandRetrievePerson
ABAssistantSyncAnchor
CNAssistantCommandCommitPerson
CNAssistantCache
init
initWithDelegate:
setSyncWorker:
changeHistoryClientIdentifier
stringWithFormat:
contactStore
latestConsumedChangeHistoryAnchorForClientIdentifier:error:
sequenceNumber
initWithSequenceNumber:contactLegacyIdentifier:
verifyChangeHistoryForClientIdentifier:error:
initWithSequenceNumber:
initWithClientIdentifier:
setToChangeAnchor:
executeChangeHistoryClearRequest:error:
individualContactCountWithError:
integerValue
descriptorsForRequiredKeysForConversionType:
initWithKeysToFetch:
setUnifyResults:
addObject:
iOSLegacyIdentifier
enumerateContactsWithFetchRequest:error:usingBlock:
setIncludeChangeAnchors:
changeHistoryWithFetchRequest:error:
contactChanges
createSAPersonFromCNContact:conversionType:
arrayWithObjects:count:
predicateForContactsWithIdentifiers:
setPredicate:
newSADomainObjectFromCNContact:
assistantIDFromContactID:
setIdentifier:
_currentSyncSnapshotProperty
saveString:forKey:
setCurrentSyncSnapshotAnchorString:
stringForKey:
anchorWithString:forContactStore:
copyChangeHistoryAfterSyncAnchor:
lastObject
changeAnchor
stringValueWithSequenceNumber:contactLegacyIdentifier:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
expectedSyncKeyPrefix
setChangeHistoryClientIdentifier:
fullSyncSnapshotProperty
hasContactsForFullSync
contactsForFullSync
getLastClearedSyncAnchor
verifyChangeHistory
clearChangeHistoryToSyncAnchor:
newSADomainObjectFromCNContactWithIdentifier:
newSADomainObjectFromDeletedContactIdentifier:
resetCurrentSyncSnapshot
currentSyncSnapshotAnchorString
currentSyncSnapshotCount
T@"CNContactStore",R,N
syncWorker
syncSnapshotForKey:
syncVerificationKeyForKey:
beginSyncWithAnchor:validity:forKey:beginInfo:
getChangeAfterAnchor:changeInfo:
syncDidEnd
beginSyncWithAnchor:validity:count:forKey:beginInfo:
beginSyncWithAnchor:validity:count:forKey:beginInfo:configuration:
beginSyncWithInfo:configuration:
currentSyncSnapshot
setContactStore:
T@"CNContactStore",&,N
.cxx_destruct
_contactStore
_syncWorker
_changeHistoryClientIdentifier
T@"ABAssistantSyncWorker",&,N,V_syncWorker
T@"NSString",&,N,V_changeHistoryClientIdentifier
T@"CNContactStore",&,N,V_contactStore
contact
isKeyAvailable:
contactIdentifier
unifiedContactWithIdentifier:keysToFetch:error:
Ti,R,N
firstObject
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
filePath
fileExistsAtPath:
isReadableFileAtPath:
dictionaryWithContentsOfFile:
dictionary
isWritableFileAtPath:
fileURLWithPath:
writeToURL:error:
infoDictionary
setObject:forKeyedSubscript:
saveFileForDictionary:
objectForKeyedSubscript:
saveValue:forKey:
valueForKey:
validate
removeUpdatesFromCache
identifier
commandFailedWithReason:
absoluteString
contactIDFromAssistantID:
removeUpdatesForAssistantUrl:
domainObjectCancelCompleted
performWithCompletion:
performWithCompletion:serviceHelper:
performWithCompletion:serviceHelper:executionInfo:
initWithDictionary:
count
arrayWithCapacity:
enumerateObjectsUsingBlock:
mapUsingBlock:
filterUsingBlock:
perform
scope
isEqualToString:
birthday
relationship
name
email
phone
company
address
accountIdentifier
boolValue
meContact:
code
searchLocal:
searchRemote:
personSearchCompletedWithResults:
descriptorsForRequiredKeys
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
personFromContact:
predicateForContactsMatchingName:options:
unifiedContactsMatchingPredicate:keysToFetch:error:
predicateForContactsWithOrganizationName:
contactType
arrayByAddingObjectsFromArray:
searchByName:
emailAddress
predicateForContactsMatchingEmailAddress:
number
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:
street
setStreet:
city
setCity:
stateCode
setState:
postalCode
setPostalCode:
countryCode
setISOCountryCode:
predicateForContactsMatchingPostalAddress:
markMeContactInPeople:usingStore:
predicateForContainersInAccountWithIdentifier:
containersMatchingPredicate:error:
predicateForContactsMatchingFullTextSearch:containerIdentifiers:groupIdentifiers:
punchOutWithServiceHelper:
domainItem
URLWithString:
openSensitiveURL:
commandSucceeded
validateIdentifier
personSearches
countByEnumeratingWithState:objects:count:
resultsLimit
refId
setRefId:
results
personSearchCompleted
multiPersonSearchCompleted
setPersonSearchCompleteds:
removeAllUpdates
clearAceDomainObjects
addToUpdatesCache
setFields
addFields
removeFields
addUpdate:forAssistantUrl:
domainObjectUpdateCompleted
setDelegate:
setSyncAvailable:
validateKey:
delegate
registerChangeHistoryClientIdentifier:
getCurrentValidity
resetWithValidity:
shouldFullSync
isOlderThanAnchor:
shortDescription
resetSync
shouldResetSync
unregisterChangeHistoryClientIdentifier:
shouldClearChangeHistoryForPreviouslySyncedContacts
shouldResumePreviousFullSync
saveSequenceCount
numberWithInt:
clearSyncCache
setAllContacts:
allContacts
setSyncIndex:
setSyncCount:
syncCount
syncIndex
objectAtIndexedSubscript:
contactLegacyIdentifier
intValue
setContactsChanges:
contactsChanges
internalGUID
syncAvailable
setPostAnchor:
setObject:
_saDomainObjectWithReadactMeCard:
object
postAnchor
stringValueForFullSyncWithContactLegacyIdentifier:
changeType
setIsDelete:
setValidity:
setCount:
setAnchor:
validity
anchor
stringByAppendingString:
identifierWithError:
hasPrefix:
raise:format:
registerChangeHistoryClientIdentifier:error:
unregisterChangeHistoryClientIdentifier:error:
_syncAvailable
_delegate
_allContacts
_contactsChanges
_syncIndex
_syncCount
T@"<ABAssistantSyncDelegate>",W,V_delegate
T@"NSArray",&,V_allContacts
T@"NSArray",&,V_contactsChanges
Tq,V_syncIndex
Tq,V_syncCount
TB,V_syncAvailable
retrieve
identifiers
array
personFromContact:useABPerson:
setObjects:
componentsSeparatedByString:
objectAtIndex:
scannerWithString:
scanInteger:
stringValue
_contactLegacyIdentifier
_sequenceNumber
Tq,R,N,V_sequenceNumber
Ti,R,N,V_contactLegacyIdentifier
T@"NSString",R,N
TB,R,N
commitFromUpdatesCache
updatesForAssistantUrl:
domainObjectUpdateWithDictionary:context:
applyUpdate:toContactWithIdentifier:usingStore:saveRequest:
executeSaveRequest:error:
domainObjectCommitCompleted
commandFailedWithErrorCode:
cachePath
writeToFile:atomically:
cacheDictionary
mutableCopy
initWithCapacity:
saveCache:
removeObjectForKey:
removeItemAtPath:error:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
@24@0:8@16
v16@0:8
q16@0:8
v24@0:8@"NSString"16
@"NSArray"16@0:8
@"ABAssistantSyncAnchor"16@0:8
v24@0:8@"ABAssistantSyncAnchor"16
@"NSArray"24@0:8@"ABAssistantSyncAnchor"16
@"SADomainObject"24@0:8@"CNContact"16
@"SADomainObject"24@0:8@"NSString"16
@"CNContactStore"16@0:8
v48@0:8@16@24@32@40
v56@0:8@16@24q32@40@48
v64@0:8@16@24q32@40@48@56
v32@0:8@16@24
v48@0:8@"NSString"16@"NSString"24@"NSString"32@"<AFSyncBeginInfo>"40
v56@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48
v64@0:8@"NSString"16@"NSString"24q32@"NSString"40@"<AFSyncBeginInfo>"48@"<AFSyncConfiguration>"56
v32@0:8@"<AFSyncBeginInfo>"16@"<AFSyncConfiguration>"24
v32@0:8@"NSString"16@"<AFSyncChangeInfo>"24
@"AFSyncSnapshot"24@0:8@"NSString"16
@"AFSyncSnapshot"16@0:8
@"NSString"24@0:8@"NSString"16
v24@0:8@"CNContactStore"16
@"CNContactStore"
@"ABAssistantSyncWorker"
@"NSString"
i16@0:8
v24@0:8@?16
v32@0:8@?16@24
v40@0:8@?16@24@32
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24
v40@0:8@?<v@?@"NSDictionary">16@"<AFServiceHelper>"24@"AFCommandExecutionInfo"32
@24@0:8@"NSDictionary"16
@24@0:8@?16
@24@0:8^@16
v24@0:8q16
v20@0:8B16
@"<ABAssistantSyncDelegate>"
@"NSArray"
@28@0:8q16i24
@20@0:8i16
@32@0:8@16@24
B32@0:8@16@24
