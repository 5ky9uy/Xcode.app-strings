@(#)PROGRAM:shazamd  PROJECT:ShazamKit-1
com.apple.aps.shazamd
com.apple.aps.shazamd.queue
com.apple.shazamd
v16@?0@"NSError"8
com.apple.shazamd.transaction
SHAZAMKIT_MICROPHONE_ACCESS_ATTRIBUTION
v8@?0
core
com.apple.ShazamKit
artistName
name
shazamUrl
relationships
meta
matchOffset
speedSkew
frequencySkew
POST
data:audio/vnd.shazam.sig;base64,%@
audioSource
startDate
sessionDurationInSeconds
%.2f
results
data
resources
errors
songs
shazam-songs
lyrics
music-videos
Please check that you have enabled the ShazamKit App Service for this app identifier
v24@?0@"AMSURLResult"8@"NSError"16
v24@?0@"AMSURLRequest"8@"NSError"16
com.apple.ShazamNotifications
NOMATCH
v16@?0@"UNNotificationContent"8
com.apple.shazamd.audiomanager.dispatch
SHRecordingServiceStarted
SHRecordingServiceStopped
SHRecordingServiceTapClosed
com.apple.ShazamKit.recordingService.audioManager.dispatch
v20@?0B8@"NSError"12
ShazamLibrary
momd
sqlite
com.apple.ShazamNotifications.main-thread
com.apple.ShazamNotifications.category.actionable
com.apple.ShazamNotifications.category.default
v16@?0@"UNNotificationAttachment"8
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_SUBTITLE
SHAZAM_MODULE_NOTIFICATION_NO_MATCH_BODY
Shazam
shazam-feature-flags
shazam-endpoints
shazam-insights
shazam-media-api-host
shazamkit-media-api-host
v28@?0@8B16@"NSError"20
com.apple.musicrecognition
com.apple.shazamd.library.dispatch-queue
com.apple.shazamd.library.sync-queue
v24@?0q8q16
v16@?0q8
v24@?0q8@"NSError"16
com.apple.ShazamKit.shazamaudiorecorder.dispatch
SHLibraryLabelName
platform
matches
retry
retryInMilliseconds
recordingIntermissionInMilliseconds
{deviceid}
{sessionid}
{language}
{storefront}
{shazamid}
https
SHRecognitionServiceFoundMatch
match
SHRecognitionServiceNoMatch
signature
external
internal
v32@?0@"AVAudioPCMBuffer"8@"AVAudioTime"16@"NSError"24
%@ is not a valid client identifier
-[_initWithInstallationID:] should not be used on this class
attributes
v16@?0@"NSNotification"8
com.apple.private.shazamkit.allow-external-audio-recording
com.apple.private.shazamkit.allow-internal-audio-recording
com.apple.private.tcc.allow
kTCCServiceMediaLibrary
kTCCServiceMicrophone
com.apple.private.ShazamKit
com.apple.private.shazamkit.allow-remote-recognition
com.apple.Shazam.MusicRecognition.result
Match
Source
@"NSDictionary"8@?0
@distinctUnionOfObjects.%@
Should not try to save and delete tracks at the same time: %@
Should not try to save and delete groups at the same time: %@
T: +%lu -%lu G: +%lu -%lu
ttml
SHLLibraryTrackRecognitionIdentifierKey
SHLLibraryTrackShazamKey
_[T]_
%@ %@ is not a valid recognition identifier and key
%@%@%@
v24@?0@"CKAccountInfo"8@"NSError"16
Track with identifier %@ is already associated to a group (%@), try removing it before.
Track with identifier %@ cannot be removed, try adding it before.
SHLSyncSessionFetchTaskIdentifier
SHLSyncSessionFetchTaskFetchType
SHLSyncSessionFetchTaskSyncTrigger
com.shazam.ShazamLibrary.operation-queue
com.shazam.library
v32@?0@"CKRecordID"8@"NSError"16^B24
No account logged in on this device.
Logged in account is restricted.
Logged in account is not a two-factor auth account with at least one passcode enabled device.
Missing encryption identity.
Network is unavailable.
Storage is full.
The content of your Shazam Library was deleted.
The content of your Shazam Library was purged.
Failed to sync your Shazam Library.
Shazam Library saves to the user's private database, which requires an authenticated session.
Parental Controls / Device Management has denied access to account credentials.
A device to device encyption requires an account with two-factor auth and a device with passcode enabled.
Encryption key has been permanently lost.
There's no network available to perform any networking tasks.
The user has reached the storage quota.
All contents have been removed.
All contents have been removed, usually through the Settings UI.
A possible internal sync error, check underlying error for a detailed description.
The user should manually log in.
Switch to an account that is not restricted by the system.
Turn on a passcode on the device and enable two-factor auth on the current iCloud account.
Non-recoverable. The user's local data should be automatically re-sync to Shazam Library.
Wait for network to become available and retry sync later.
The user should manually remove data or upgrade storage plans.
Non-recoverable. The user should choose to remove local data or re-sync to Shazam Library.
Initiate a manual sync later.
You must provide a valid encoded data.
SHLLibraryTrackIdentifier
SHLLibraryTrackRecognitionIdentifier
SHLLibraryTrackMetadata
SHLLibraryTrackProviderIdentifier
SHLLibraryTrackProviderName
SHLLibraryTrackDate
SHLLibraryTrackTitle
SHLLibraryTrackSubtitle
SHLLibraryTrackLocation
SHLLibraryTrackCompoundIdentifierKey
SHLLibraryTrackAssociatedGroupIdentifier
SHLLibraryTrackLibrarySet
CFBundleName
%@_watchos
You must have a valid Shazam key to create a library item.
%@ is not a valid recognition identifier.
CFBundleShortVersionString
hw.machine
kern.osversion
ProductName
ProductVersion
ShazamKit/%@ model/%@ %@/%@ %@
v16@?0@"NSArray"8
User-Agent
application/json
Content-Type
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v24@?0@"SHTokenizedEndpoint"8@"NSError"16
com.apple.ShazamNotifications.user-info.payload
com.apple.ShazamNotifications.user-info.media-item
com.apple.ShazamNotifications.user-info.attribution
com.apple.ShazamNotifications.user-info.apple-music
baseURL
path
geocharts
minGeohashLength
maxGeohashLength
targeting
{year}
{weekOfYear}
{geohash}
%@%@
ModifyRecords
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
%@_%@
libraryBatchInsertions
libraryBatchDeletions
com.apple.shazam
com.apple.shazam.secure
iCloud.com.shazam.Shazam
shazam-library
Group
detail
code
sh.001
sh.002
ModifySubscriptions
v32@?0@"NSString"8@"NSError"16^B24
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
Library
v16@?0@"SHLTaskPreconditionResult"8
SHLibraryAvailabilityListenerUserID
v24@?0@"CKRecordID"8@"NSError"16
inflighttasks
failedtasks
privatedatabase
privatedatabasetransaction
zones
token
zonesubscription
SHLLibraryLabelName
lookup
%@.%@
Track
RecognitionIdentifier
ShazamKey
ProviderIdentifier
ProviderName
Date
Title
Subtitle
Location
AssociatedGroupIdentifier
Labels
UserAction
PushTriggered
v12@?0B8
albumName
isrc
contentRating
genreNames
releaseDate
artwork
public-lyrics
EXPLICIT
FetchDatabaseChanges
FetchZoneChanges
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
com.shazam.ShazamLibrary.syncSession.dispatchQueue
You must conform to the protocol of the modify task you're trying to add.
You must conform to the protocol of the fetch task you're trying to add.
ModifyZones
v32@?0@"CKRecordZoneID"8@"NSError"16^B24
There must a valid bundle identifier for the calling process to fetch library tracks.
SHLLibraryGroupIdentifier
SHLLibraryGroupMetadata
SHLLibraryGroupTracksToSave
%@ is not a valid identifier.
SHLSyncSessionModifyTaskTracksToModify
SHLSyncSessionModifyTaskGroupsToModify
SHLSyncSessionModifyTaskIdentifier
SHLSyncSessionModifyTaskProgress
SHLSyncSessionModifyTaskRetryCount
SHLSyncSessionModifyTaskSyncTrigger
q24@?0@"SHLLibraryBatch"8@"SHLLibraryBatch"16
SHLibraryDataStoreCacheName
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
%@ context
%K == %@
%@ != nil
%@ == nil
%K IN %@
syncID
B24@?0@"SHTrackMO"8@"NSDictionary"16
@unionOfObjects.%@.%@
B24@?0@"SHGroupMO"8@"NSDictionary"16
v16@?0@"NSString"8
v24@?0@"SHEndpoints"8@"NSError"16
v24@?0@"SHHost"8@"NSError"16
v24@?0@"NSURL"8@"NSError"16
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
SHGroupMO
SHMetadataMO
SHTrackMO
init
topic
userInfo
notificationFromRemoteNotificationDictionary:
notificationType
empty
initWithDifference:trigger:
syncController
synchronizeWithContext:
apsEnvironmentString
connectionQueue
initWithEnvironmentName:namedDelegatePort:queue:
setDelegate:
sharedInstance
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
libraryWillBeginSync:
library:didChangeTracksWithDifference:
library:didProduceError:failedItemIdentifiers:
libraryDidCompleteSync:
registerForPushNotifications
connection
setConnectionQueue:
.cxx_destruct
_syncController
_connection
_connectionQueue
T@"APSConnection",R,N,V_connection
T@"SHLibrarySyncController",R,N,V_syncController
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
dealloc
startRecognitionForRequest:
delegate
stop
T@"<SHMatcherDelegate>",W,N
synchronizeDifference:
fetchLibraryTracksWithLimit:completionHandler:
fetchLibraryTracksForCurrentProcessWithLimit:completionHandler:
T@"<SHLibrarySyncDelegate>",W,N
mediaItemForShazamID:completionHandler:
interfaceWithProtocol:
setExportedInterface:
remoteInterface
setRemoteObjectInterface:
remoteObjectProxyWithErrorHandler:
initWithConnection:
bundleIdentifier
registerBundleAttribution:
transaction
setTransaction:
setCurrentAttributionKey:andApp:
watchdogTimer
stopWatchdogTimer
startWatchdogTimerForInterval:firedCompletion:
isRunning
managesRecordingSession
attribution
startManagedRecordingDate
date
powerlogCallingProcessBundleID:startDate:endDate:
endTransaction
stopMediaSafetyNetExemption
setStartManagedRecordingDate:
startMediaSafetyNetExemption
timeRequiredToPerformWork
startTransaction
matcher:didFindMatch:
matcher:didNotFindMatch:
matcher:didFail:
matcher:didFinishWithOutcome:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setInterface:forSelector:argumentIndex:ofReply:
exportedObject
setExportedObject:
shazamService:updatedChildService:
remoteDelegate
setRemoteDelegate:
associatedBundleID
hasStartedSafetynetException
setHasStartedSafetynetException:
_hasStartedSafetynetException
_watchdogTimer
_remoteInterface
_remoteDelegate
_attribution
_associatedBundleID
_transaction
_startManagedRecordingDate
T@"NSString",R,C,N,V_associatedBundleID
T@"NSXPCConnection",R,N,V_connection
T@"NSXPCInterface",R,N,V_remoteInterface
T@"SHWatchdogTimer",R,N,V_watchdogTimer
T@"NSObject<OS_os_transaction>",&,N,V_transaction
TB,N,V_hasStartedSafetynetException
T@"NSDate",&,N,V_startManagedRecordingDate
T@"<SHXPCRemoteDelegate>",&,N,V_remoteDelegate
T@"<SHXPCServiceProxy>",&,N
T@"SHAttribution",R,N,V_attribution
cStringUsingEncoding:
array
populateRemoteConfiguration
initWithEntitlements:attribution:
setShazamServiceDelegate:
connections
addObject:
processIdentifier
removeObject:
setInterruptionHandler:
setInvalidationHandler:
resume
listener:shouldAcceptNewConnection:
apsConnection
_connections
_apsConnection
T@"NSMutableArray",R,N,V_connections
T@"SHAPSConnection",R,N,V_apsConnection
initWithMachServiceName:
currentRunLoop
watchdogTimerSource
_watchdogTimerSource
T@"NSObject<OS_dispatch_source>",R,N,V_watchdogTimerSource
shazamItemDictionary
extractIDsFromRelation:
initWithShazamItemDictionary:
speedSkew
frequencySkew
setShazamItemDictionary:
_shazamItemDictionary
T@"NSDictionary",&,N,V_shazamItemDictionary
T@"NSNumber",R,N
T@"NSArray",R,C,N
shazamDictionary
setShazamDictionary:
_shazamDictionary
T@"NSDictionary",&,N,V_shazamDictionary
initWithRecordingService:
audioTap
stopTap
recordingService
setAudioTap:
setTapClosedObserver:
tapClosedObserver
setRecordingService:
_audioTap
_tapClosedObserver
_recordingService
T@"SHAudioTap",W,N,V_audioTap
T@,W,N,V_tapClosedObserver
T@"SHRecordingService",&,N,V_recordingService
initWithCatalog:recognitionRequester:
catalog
matchSignature:tokenizedEndpoint:
partnerURLRequestForSignature:endpoint:
duration
dataRepresentation
responseForServerData:signature:
buildURLForSignature:endpoint:
setHTTPMethod:
base64EncodedStringWithOptions:
iso8601Formatter
stringFromDate:
audioSource
sessionDuration
dictionaryWithDictionary:
dataWithJSONObject:options:error:
setHTTPBody:
setCatalog:
setNetworkRequester:
_iso8601Formatter
_catalog
T@"SHShazamServiceCatalog",&,N,V_catalog
T@"<SHNetworkRecognitionRequester>",&,N,V_networkRequester
T@"NSISO8601DateFormatter",R,N,V_iso8601Formatter
initWithRecordingIntermission:retrySeconds:match:signature:error:
noMatchWithRecordingIntermission:retrySeconds:signature:
audioStartDate
mediaItemFromResourcesResponse:shazamID:signatureStartDate:
set_rawResponseSongs:
initWithMediaItems:forSignature:
matchWithRecordingIntermission:retrySeconds:match:
dateByAddingTimeInterval:
initWithLyricsStartDate:lines:songwriters:
initWithMatchedMediaItemDictionary:syncedLyrics:
matcherResponseFromServerData:signature:
JSONObjectWithData:options:error:
annotateClientError:code:underlyingError:
objectForKeyedSubscript:
firstObject
initWithErrorDictionary:
error
annotateClientError:withError:
initWithDataArray:
initWithResourcesDictionary:
shazamIDs
count
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
mediaItemFromResourcesResponse:shazamID:
mediaDictionaryFromResourcesResponse:shazamID:
mediaItemWithProperties:
dictionary
shazamResponse
itemForIdentifier:
shazamID
setValue:forKey:
shazamURL
title
artistName
matchOffset
songRelationIDs
songsResponse
itemForIdentifiers:
appleMusicID
appleMusicURL
artworkURL
genreNames
releaseDate
isExplicitContent
numberWithBool:
albumName
isrc
lyricsRelationIDs
lyricsResponse
lyricsSnippet
staticLyrics
musicVideoRelationIDs
musicVideoResponse
copy
mediaItemsFromServerData:error:
resourcesDictionary
initWithSongsDictionary:
initWithShazamDictionary:
initWithLyricsDictionary:
initWithMusicVideoDictionary:
setResourcesDictionary:
_resourcesDictionary
T@"NSDictionary",&,N,V_resourcesDictionary
T@"SHServerSongsResponse",R,N
T@"SHServerShazamResponse",R,N
T@"SHServerLyricsResponse",R,N
T@"SHServerMusicVideoResponse",R,N
sessionConfiguration
invalidateAndCancel
encoder
requestByEncodingRequest:parameters:
dataTaskPromiseWithRequest:
data
response
addFinishBlock:
defaultSessionConfiguration
setTimeoutIntervalForRequest:
setWaitsForConnectivity:
setDiscretionary:
initWithClientIdentifier:bag:
setClientType:
initWithTokenService:
setProtocolHandler:
initWithTokenService:bag:
invalidate
setClientIdentifier:
_encoder
T@"NSString",C,N,V_clientIdentifier
Tq,N,V_clientType
T@"AMSURLSession",&,N,V_session
T@"AMSMediaRequestEncoder",R,N,V_encoder
initWithBundleIdentifier:
handleNotificationDefaultActionsLocally
notificationCenterDelegate
setWantsNotificationResponsesDelivered
currentMediaItem
containsMediaItemWithFuzzyTolerance:
currentSignatureID
querySignature
setIsRunning:
mediaItems
setCurrentMediaItem:
setCurrentSignatureID:
sendMatchNotification:
sendAnalyticsEventForMatch:
contentProvider
requestWithIdentifier:content:trigger:
userNotificationCenter
addNotificationRequest:withCompletionHandler:
setObject:forKey:
setUserNotificationCenter:
setContentProvider:
setNotificationCenterDelegate:
_currentMediaItem
_currentSignatureID
_userNotificationCenter
_contentProvider
_notificationCenterDelegate
T@"SHMatchedMediaItem",&,N,V_currentMediaItem
T@"NSUUID",&,N,V_currentSignatureID
T@"UNUserNotificationCenter",&,N,V_userNotificationCenter
T@"SHNotificationContentProvider",&,N,V_contentProvider
T@"SHNotificationCenterDelegate",&,N,V_notificationCenterDelegate
handleAudioSessionInterruption:
addObserver:selector:name:object:
handleAudioSessionRouteChange:
handleMediaServicesWereLost:
handleMediaServicesWereReset:
removeObserver:name:object:
registerObservers
configureAudioSession
setActive:withOptions:error:
removeObservers
setIsAudioSessionInterrupted:
setCategory:withOptions:error:
setAllowHapticsAndSystemSoundsDuringRecording:error:
preferDecoupledIO:error:
setActive:error:
currentRoute
outputs
portType
areHeadphonesConnected
isExternalSpeakerConnected
isOtherAudioPlaying
setAudioManagerDispatchQueue:
_isAudioSessionInterrupted
TB,N,V_isAudioSessionInterrupted
T@"NSObject<OS_dispatch_queue>",&,N,V_audioManagerDispatchQueue
T@"<SHAudioSessionManagerDelegate>",W,N,V_delegate
isAudioSourceSupported:
audioSessionManager
areHeadphonesOrExternalSpeakerConnectedWhileAudioPlaying
shouldUseInternalSession
initWithRecordingSource:
activeTaps
defaultCenter
postNotificationName:object:
startRecordingWithOptions:
stopRecording
deactivateAudioSession
removeAllObjects
availableRecorders
stopRecordingWithError:
recognitionSource
isAudioSessionInterrupted
isClosed
recordingSource
completion
stopTap:
activateAudioSessionWithOptions:
audioManagerDispatchQueue
failedToResumeAfterInterruption
startRecordersWithCompletion:
startRecordingWithCompletion:
integerValue
initWithSource:
arrayWithObjects:count:
mutableCopy
errorWithCode:underlyingError:
recorder:producedAudioBuffer:atTime:
audioSessionManager:interruptionBeganWithOptions:
audioSessionManager:interruptionEndedWithOptions:
initWithRecorders:
createTap
startTap:
requiredEntitlements
_audioSessionManager
_availableRecorders
_activeTaps
_audioManagerDispatchQueue
T@"NSMutableArray",R,N,V_activeTaps
T@"SHAudioSessionManager",R,N,V_audioSessionManager
T@"NSArray",R,N,V_availableRecorders
T@"NSObject<OS_dispatch_queue>",R,N,V_audioManagerDispatchQueue
URLForResource:withExtension:
URLForDirectory:inDomain:appropriateForURL:create:error:
applicationSupportDirectory
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
setType:
setShouldMigrateStoreAutomatically:
setShouldInferMappingModelAutomatically:
setUsesPersistentHistoryTracking:
persistentStoreURL
setURL:
diff
trigger
setError:
_delegate
_diff
_trigger
_error
T@"<SHLibrarySyncDelegate>",W,N,V_delegate
T@"SHLibraryDifference",R,N,V_diff
T@"NSString",R,N,V_trigger
T@"NSError",&,N,V_error
setTitle:
defaultActionShouldBeHandledLocallyForProvider:
setShouldBackgroundDefaultAction:
webURL
setDefaultActionURL:
setThreadIdentifier:
setSummaryArgumentCount:
setShouldIgnoreDoNotDisturb:
defaultSound
setSound:
setShouldAuthenticateDefaultAction:
artist
setBody:
setSummaryArgument:
setCategoryIdentifier:
userInfoPayloadForMediaItem:bundleIdentifier:
setUserInfo:
setAttachments:
notificationAttachmentForMediaItem:completionHandler:
localizedUserNotificationStringForKey:arguments:
dateWithTimeIntervalSinceNow:
setExpirationDate:
setShouldHideDate:
setShouldSuppressDefaultAction:
initWithAttribution:
notificationContentForMediaItem:completionHandler:
notificationContentForNoMatch
setAttribution:
T@"SHAttribution",&,N,V_attribution
T@"<SHNotificationContentProviderDelegate>",W,N,V_delegate
addBagKey:valueType:
registerBagKeySet:forProfile:profileVersion:
bagForProfile:profileVersion:
initWithBag:
amsBag
dictionaryForKey:
setFeatureFlagsBagValue:
setEndpointsBagValue:
setInsightsBagValue:
stringForKey:
setInternalHostBagValue:
setExternalHostBagValue:
endpointsBagValue
valueWithCompletion:
insightsBagValue
internalHostBagValue
externalHostBagValue
featureFlagsBagValue
populateFeatureFlags
featureFlags
setFeatureFlags:
endpointsWithCompletion:
insightsWithCompletion:
hostForClientType:completion:
setAmsBag:
_featureFlags
_amsBag
_featureFlagsBagValue
_endpointsBagValue
_insightsBagValue
_internalHostBagValue
_externalHostBagValue
T@"AMSBag",&,N,V_amsBag
T@"SHFeatureFlags",&,N,V_featureFlags
T@"AMSBagValue",&,N,V_featureFlagsBagValue
T@"AMSBagValue",&,N,V_endpointsBagValue
T@"AMSBagValue",&,N,V_insightsBagValue
T@"AMSBagValue",&,N,V_internalHostBagValue
T@"AMSBagValue",&,N,V_externalHostBagValue
dataArray
setDataArray:
_dataArray
T@"NSArray",&,N,V_dataArray
T@"NSArray",R,N
subarrayWithRange:
sh_sliceIntoChunksOfMaximumSize:
initWithStoreType:
secureLibrary
initWithDataStore:remoteLibrary:accountListener:
sharedContext
manateeContainer
options
setApplicationBundleIdentifierOverrideForTCC:
syncGroup
dispatchQueue
syncQueue
setCurrentContext:
observeLocalChanges
synchronizeLocalDifference:
synchronizeRemoteDifference:trigger:
dataStore
fetchRecentLibraryTracksWithLimit:bundleIdentifier:
changes
changeType
libraryItem
identifier
persistLibraryGroups:completionHandler:
persistLibraryTracks:completionHandler:
deleteItemsByIdentifiers:completionHandler:
commitChangesWithError:
accountListener
dictionaryWithObjects:forKeys:count:
errorWithCode:underlyingError:keyOverrides:
beginLibrarySync
handleLibraryError:failedItemIdentifiers:
persistChangesAndCompleteSyncWithCompletionHandler:
_synchronizeRemoteDifference:trigger:
fetchDeviceToDeviceEncryptionCapabilityWithCompletionHandler:
fetchAllUploadableTracksMissingLibrarySyncMetadata
shazamLibraryTrackFromLibraryTrack:
addTracks:
shazamLibraryGroupFromLibraryGroup:
addGroups:
initWithIdentifier:
deleteTracks:
deleteGroups:
remoteLibrary
synchronizeChanges:withTrigger:
libraryTracksFetchedResultsController
performFetch:
libraryTrackFromShazamLibraryTrack:
libraryGroupFromShazamLibraryGroup:
currentContext
resetDataIfNeededForSyncError:
currentDiff
domain
isEqualToString:
code
removeAllSyncMetadataItems
removeAllLocalItems
fetchRequest
deleteAllItemsWithFetchRequest:completionHandler:
reset
clearCachedSyncStatus
libraryTrackFromManagedTrack:
initWithLibraryItem:changeType:indexPath:
changeForIndexPath:
addChanges:
library:didChangeTracks:syncAction:
library:didChangeGroups:syncAction:
library:didDeleteItemsWithIdentifiers:syncAction:
library:didProduceError:withFailedItemIdentifiers:syncAction:
library:didCompleteSyncWithCompletionHandler:
currentLibraryAccountHasChanged
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
fetchLibraryTracksWithLimit:bundleIdentifier:completionHandler:
setCurrentDiff:
setRemoteLibrary:
setDataStore:
dataStoreShouldPersistChanges
setSyncGroup:
setDispatchQueue:
setSyncQueue:
setAccountListener:
_dataStoreShouldPersistChanges
_currentDiff
_remoteLibrary
_dataStore
_syncGroup
_dispatchQueue
_syncQueue
_currentContext
_accountListener
T@"SHLShazamLibrary",&,N,V_remoteLibrary
T@"SHLibraryDataStore",&,N,V_dataStore
T@"SHLibraryDifference",&,N,V_currentDiff
TB,R,N,V_dataStoreShouldPersistChanges
T@"NSObject<OS_dispatch_group>",&,N,V_syncGroup
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
T@"SHLibrarySyncContext",&,N,V_currentContext
T@"SHLibraryAccountListener",&,N,V_accountListener
T@"<SHLibrarySyncDelegate>",W,N,Vdelegate
_isClosed
_completion
_recordingSource
T@?,C,N,V_completion
Tq,R,N,V_recordingSource
TB,R,N,V_isClosed
stopAudioQueueAndClearBuffersWithError:
isAudioQueueRunning
errorWithDomain:code:userInfo:
initStandardFormatWithSampleRate:channels:
streamDescription
hasAudioQueueFailedWithStatus:annotateError:
startAudioQueueAfterRetrySecondsWithCompletion:
initWithPCMFormat:frameCapacity:
setFrameLength:
audioBufferList
audioRecorderDispatchQueue
audioBufferFromData:byteSize:inFormat:
T@"<SHAudioRecorderDelegate>",W,N
Tq,R,N
setRecognitionSource:
audioQueue
setAudioQueue:
audioStreamBasicDescription
setAudioStreamBasicDescription:
setAudioRecorderDispatchQueue:
mBuffers
_recognitionSource
_audioQueue
_audioRecorderDispatchQueue
_audioStreamBasicDescription
Tq,N,V_recognitionSource
T^{OpaqueAudioQueue=},N,V_audioQueue
T{AudioStreamBasicDescription=dIIIIIIII},N,V_audioStreamBasicDescription
T@"NSObject<OS_dispatch_queue>",&,N,V_audioRecorderDispatchQueue
T@"<SHAudioRecorderDelegate>",W,N,V_delegate
initWithStreamDescription:
sampleRate
initWithAudioTimeStamp:sampleRate:
name
hasPrefix:
decodeObjectOfClass:forKey:
initWithName:
encodeObject:forKey:
isEqualLabel:
lowercaseString
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
_name
T@"NSString",R,C,N,V_name
resultsDictionary
doubleValue
initWithResultsDictionary:
retrySeconds
recordingIntermissionSeconds
setResultsDictionary:
_resultsDictionary
T@"NSDictionary",&,N,V_resultsDictionary
Td,R,N
originalURLPath
tokenForTokenType:
containsString:
tokenDictionary
stringByReplacingOccurrencesOfString:withString:
containsTokens
setScheme:
host
setHost:
tokenURLPath
componentsSeparatedByString:
setPath:
lastObject
setQuery:
URLRepresentation
absoluteString
allocWithZone:
copyWithZone:
initWithHost:tokenURLPath:
mutableCopyWithZone:
setTokenDictionary:
updateToken:withValue:
setOriginalURLPath:
_host
_originalURLPath
_tokenDictionary
T@"NSString",C,N,V_originalURLPath
T@"NSMutableDictionary",&,N,V_tokenDictionary
T@"NSString",R,C,N,V_host
T@"NSString",R,C,N
internalErrorWithCode:underlyingError:
signature
errorResponseForSignature:error:
setMatcherRequest:
serviceDelegate
serviceUpdated:withRunningState:
clientType
installationID
initWithClientIdentifier:clientType:installationID:
initWithCatalog:
setSession:
session
matcherRequest
type
matchSignature:
deadline
matchStreamingBuffer:atTime:
unrecoverableError:
finishSessionIfNecessaryForRequest:response:outcome:
setCompletion:
finishSessionConditionsMetForRequest:response:outcome:
stopWithOutcome:
stopCondition
hasHitDeadline
match
metrics
setAudioSource:
sendNotifications
postNotificationName:object:userInfo:
timeIntervalSinceNow
close
session:didFindMatch:
session:didNotFindMatchForSignature:error:
setServiceDelegate:
T@"<SHServiceDelegate>",W,N
TB,R,N
initWithAttribution:clientType:
startRecognitionForRequest:withAudioTap:
session:shouldAttemptToMatchSignature:
session:didFindMatchForResponse:
session:didNotFindMatchForResponse:
_serviceDelegate
_session
_tap
_matcherRequest
_clientType
T@"SHSession",&,N,V_session
T@"SHMatcherRequest",&,N,V_matcherRequest
Tq,R,N,V_clientType
T@"<SHMatcherDelegate>",W,N,V_delegate
T@"SHAudioTap",R,N,V_tap
T@"<SHServiceDelegate>",W,N,V_serviceDelegate
validateClientIdentifier:
exceptionWithName:reason:userInfo:
_initWithInstallationID:
clientIdentifier
loadMatchEndpointForClientIdentifier:clientType:installationID:callback:
loadConfiguration:
_createMatcher
setURLBuilder:
_installationID
_clientIdentifier
T@"SHShazamServiceURLBuilder",&,N,V_URLBuilder
T@"NSString",R,C,N,V_installationID
T@"NSString",R,C,N,V_clientIdentifier
shl_isEncrypted
shl_encrypted
TB,N,Gshl_isEncrypted
privateOperation
configuration
setAutomaticallyRetryNetworkFailures:
setDiscretionaryNetworkBehavior:
setConfiguration:
initWithOperation:
operation
setPrivateOperation:
_privateOperation
T@"CKDatabaseOperation",&,N,V_privateOperation
T@"CKDatabaseOperation",R,N
musicVideoItemDictionary
URLWithString:
initWithMusicVideoItemDictionary:
setMusicVideoItemDictionary:
_musicVideoItemDictionary
T@"NSDictionary",&,N,V_musicVideoItemDictionary
T@"NSURL",R,N
musicVideoDictionary
setMusicVideoDictionary:
_musicVideoDictionary
T@"NSDictionary",&,N,V_musicVideoDictionary
unobserveRecognitionNotifications
recognitionService
shouldStartService:
audioTapService
startTap
libraryService
mediaItemService
services
entitlements
hasRequiredEntitlements:
shazamServiceDelegate
isEntitledForInternalClient
notificationService
canSendNotificationForMatch:
sendNotificationForMatch:
addObserverForName:object:queue:usingBlock:
setMatchedObserver:
canSendNotificationForNoMatchSignatureID:
sendNotificationForNoMatch
setNoMatchObserver:
matchedObserver
removeObserver:
noMatchObserver
observeRecognitionNotificationsForService:
initWithSyncController:attribution:
configurationForService:
setEntitlements:
_recognitionService
_notificationService
_audioTapService
_libraryService
_mediaItemService
_shazamServiceDelegate
_entitlements
_matchedObserver
_noMatchObserver
T@"SHEntitlements",&,N,V_entitlements
T@"SHRecognitionService",R,N,V_recognitionService
T@"SHNotificationService",R,N,V_notificationService
T@"SHAudioTapService",R,N,V_audioTapService
T@"SHLibraryService",R,N,V_libraryService
T@"SHMediaItemService",R,N,V_mediaItemService
T@,W,N,V_matchedObserver
T@,W,N,V_noMatchObserver
T@"<SHXPCRemoteDelegate>",W,N,V_delegate
T@"<SHShazamServiceDelegate>",W,N,V_shazamServiceDelegate
setAppClipEnabled:
populateWithConfiguration:
defaultFlags
initWithConfiguration:
appClipEnabled
_appClipEnabled
TB,N,V_appClipEnabled
initWithType:scope:
sessionType
sessionScope
_sessionType
_sessionScope
Tq,R,N,V_sessionType
Tq,R,N,V_sessionScope
configureEntitlementsForTask:
configureEntitlementsForConnection:
entitlementArray:containsEntitlementValue:fromSecTask:
boolValueOfEntitlement:fromSecTask:
entitlementArray:containsEntitlementValue:fromConnection:
boolValueOfEntitlement:fromConnection:
isEntitledForStorefront
isEntitledForMicrophone
isEntitledForExternalAudioRecording
isEntitledForInternalAudioRecording
isSubsetOfSet:
valueForEntitlement:
boolValue
containsObject:
copyValueOfEntitlement:fromSecTask:
setIsEntitledForStorefront:
_isEntitledForStorefront
_isEntitledForMicrophone
_isEntitledForExternalAudioRecording
_isEntitledForInternalAudioRecording
_isEntitledForInternalClient
TB,N,V_isEntitledForStorefront
TB,R,N,V_isEntitledForMicrophone
TB,R,N,V_isEntitledForExternalAudioRecording
TB,R,N,V_isEntitledForInternalAudioRecording
TB,R,N,V_isEntitledForInternalClient
sendEvent:withPayload:
trackSetToAdd
allObjects
trackSetToDelete
groupSetToAdd
groupSetToDelete
stringWithFormat:
valueForKeyPath:
setWithArray:
intersectSet:
shl_exceptionWithName:reason:
addObjectsFromArray:
tracksToSave
tracksToAdd
tracksToDelete
groupsToAdd
groupsToDelete
trackIDsToDelete
groupIDsToDelete
mergeChangeset:
setTrackSetToAdd:
setTrackSetToDelete:
setGroupSetToAdd:
setGroupSetToDelete:
_trackSetToAdd
_trackSetToDelete
_groupSetToAdd
_groupSetToDelete
T@"NSMutableSet",&,N,V_trackSetToAdd
T@"NSMutableSet",&,N,V_trackSetToDelete
T@"NSMutableSet",&,N,V_groupSetToAdd
T@"NSMutableSet",&,N,V_groupSetToDelete
_initWithTasksToRetry:error:
tasksToRetry
allItemIdentifiers
initWithError:
initWithTasksToRetry:error:
failedItemIdentifiers
_tasksToRetry
T@"NSError",R,N,V_error
T@"NSArray",R,N,V_tasksToRetry
parseTTMLFromLyricsItemDictionary:
songInfo
lyricsLines
lyricsText
string
startTime
lyricLineWithText:offset:
snippetFromOffset:
songwriters
dataUsingEncoding:
initWithTTMLData:
parseWithError:
lyricsLineStartingBeforeTimeOffset:
length
appendString:
nextLine
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
initWithLyricsItemDictionary:
lyricLines
setSongInfo:
_songInfo
T@"MSVLyricsSongInfo",&,N,V_songInfo
lyricsDictionary
setLyricsDictionary:
_lyricsDictionary
T@"NSDictionary",&,N,V_lyricsDictionary
initWithRecognitionIdentifier:shazamKey:
isTrackIdentifier:
recognitionIdentifierFromTrackIdentifier:
shazamKeyFromTrackIdentifier:
identifierWithRecognitionIdentifier:shazamKey:
rangeOfString:options:
substringFromIndex:
keyWithValue:
substringToIndex:
recognitionIdentifier
precomposedStringWithCanonicalMapping
shazamKey
validatedKey
initWithKey:
compoundIdentifierFromTrackIdentifier:
libraryItemIdentifier
hasValidRecognitionIdentifier
_recognitionIdentifier
_shazamKey
T@"NSString",R,N
T@"NSString",R,N,V_recognitionIdentifier
T@"SHLShazamKey",R,N,V_shazamKey
supportsDeviceToDeviceEncryption
accountInfoWithCompletionHandler:
initWithLibraryGroup:
removeTracks:
_fetchType
Tq,N,V_fetchType
T@"<SHLSyncSessionFetchTaskDelegate>",W,N,V_delegate
initOperationQueue
setMaxConcurrentOperationCount:
tailOperation
isFinished
isCancelled
addDependency:
setTailOperation:
operationQueue
addOperations:waitUntilFinished:
cancelAllOperations
setOperationQueue:
_operationQueue
_tailOperation
T@"NSOperationQueue",&,N,V_operationQueue
T@"NSOperation",W,N,V_tailOperation
autoupdatingCurrentLocale
countryCode
storefront:
errorCode:underlyingError:
errorCodeForError:
canRetryForPartialError:
userInfoForErrorCode:withUnderlyingError:
initWithDomain:code:userInfo:
localizedDescriptionForSyncError:
localizedFailureReasonForSyncError:
localizedRecoverySuggestionForSyncError:
validEncodedSystemData:
encodedSystemData
initWithMetadata:
initWithEncodedSystemData:
_encodedSystemData
T@"NSData",R,N,V_encodedSystemData
initWithLibraryTrack:
setDate:
subtitle
setSubtitle:
location
setLocation:
setRecognitionIdentifier:
setShazamKey:
_date
T@"NSDate",&,N,V_date
T@"NSString",&,N,VrecognitionIdentifier
T@"SHLShazamKey",&,N,VshazamKey
T@"NSString",C,N,Vtitle
T@"NSString",C,N,Vsubtitle
T@"CLLocation",&,N,Vlocation
_initWithIdentifier:metadata:labels:
commonInitWithIdentifier:metadata:labels:
validProviderIdentifier
validProviderName
bundleName
addPlatformLabel
mainBundle
labelSet
isEqualTrack:
platformLabel
_initWithRecognitionIdentifier:shazamKey:metadata:labels:
T@"SHLLibraryItemMetadata",R,N
removeLabel:
setLabelSet:
_metadata
_providerName
_providerIdentifier
_title
_subtitle
_location
_associatedGroupIdentifier
_compoundIdentifier
_labelSet
T@"NSMutableSet",&,N,V_labelSet
T@"NSString",&,N,V_associatedGroupIdentifier
T@"NSString",&,N,V_providerIdentifier
T@"NSString",&,N,V_providerName
T@"NSDate",R,N,V_date
T@"NSString",R,N,V_title
T@"NSString",R,N,V_subtitle
T@"CLLocation",R,N,V_location
T@"NSSet",R,N
T@"SHLLibraryTrackCompoundIdentifier",R,N,V_compoundIdentifier
T@"SHLLibraryItemMetadata",R,N,V_metadata
bundleForClass:
objectForInfoDictionaryKey:
_systemInfoByName:
stringWithUTF8String:
frameworkShortVersion
deviceModel
deviceSystemName
deviceProductVersion
deviceOSVersion
userAgent
originalTask
recoverTaskFromPartialError
recoverTaskFromLimitExceededError
savedGroups
deletedIDs
groupsToModify
deletions
initWithInsertions:deletions:
savedTracks
tracksToModify
differenceOfBatch:
initWithTracksToModify:groupsToModify:
subdivideTaskIntoBatchesOfSize:
initWithOriginalTask:savedGroups:savedTracks:deletedIDs:error:
recoverableTasks
setOriginalTask:
setSavedGroups:
setSavedTracks:
setDeletedIDs:
_originalTask
_savedGroups
_savedTracks
_deletedIDs
T@"SHLSyncSessionModifyTask",&,N,V_originalTask
T@"NSArray",&,N,V_savedGroups
T@"NSArray",&,N,V_savedTracks
T@"NSArray",&,N,V_deletedIDs
initWithScope:
containerTransformer
cloudBackedContainer
initWithContainer:
scope
fetchTaskTransformer
cloudBackedZoneChangesOperationFromFetchTask:forChangedZones:container:
defaultQueue
addOperation:
cache
zoneID
zoneName
subscriptionExistsForZoneIdentifier:
subscriptionTaskTransformer
cloudBackedOperationForZones:container:
shazamLibraryZone
zoneExistsForIdentifier:
initWithZone:
storeZoneIdentifier:error:
zoneTransformer
cloudBackedOperationForZonesToSave:container:
cloudBackedDatabaseChangesOperationFromFetchTask:container:completion:
storeTask:ofType:error:
addOperation:waitUntilFinished:
preconditions
scheduleFetchTask:
setFetchTaskTransformer:
setSubscriptionTaskTransformer:
_fetchTaskTransformer
_subscriptionTaskTransformer
T@"SHLCloudFetchTaskTransformer",&,N,V_fetchTaskTransformer
T@"SHLCloudSubscriptionTransformer",&,N,V_subscriptionTaskTransformer
requestAppClipForURL:
T@"<SHAppClipDelegate>",W,N,V_delegate
initWithClientIdentifier:clientType:
URLBuilder
requestWithURL:
addValue:forHTTPHeaderField:
networkRequester
performRequest:withReply:
loadLookupEndpointForClientIdentifier:clientType:callback:
_isRunning
_URLBuilder
_networkRequester
T@"SHShazamServiceURLBuilder",R,N,V_URLBuilder
T@"<SHNetworkRecognitionRequester>",R,N,V_networkRequester
TB,R,N,V_isRunning
notificationFromLegacyUserInfoFormat:
setMediaItem:
setBundleIdentifier:
payloadFromNotificationContentUserInfo:
mediaItem
_mediaItem
_bundleIdentifier
T@"SHMediaItem",&,N,V_mediaItem
T@"NSString",C,N,V_bundleIdentifier
initWithContainer:usingEncryption:
setScope:
Tq,N,V_scope
insightsDictionary
currentCalendar
components:fromDate:
year
weekOfYear
targetingEndpointForStorefront:
geoChartsEndpointForDate:geoHash:
maxGeoChartsGeohashLength
minGeoChartsGeohashLength
setInsightsDictionary:
_insightsDictionary
T@"NSDictionary",&,N,V_insightsDictionary
containerWithScope:
containerIdentifier
initWithContainerIdentifier:
modifyTaskScheduler
fetchTaskScheduler
createTransaction
_configuration
T@"SHLSyncSessionConfiguration",&,N,V_configuration
T@"<SHLModifyTaskScheduler>",R,N
T@"<SHLFetchTaskScheduler>",R,N
setSavePolicy:
modifyRecordsOperation
recordsToSaveFromModifyTask:container:
setRecordsToSave:
recordIDsToDeleteFromModifyTask:
setRecordIDsToDelete:
progress
recordsToSave
setTotalUnitCount:
completedUnitCount
setCompletedUnitCount:
setPerRecordSaveBlock:
setPerRecordCompletionBlock:
removeTaskOfType:forIdentifier:error:
canRetryForError:
taskOfType:identifier:
errorWithUnderlyingError:
session:task:didProduceOutcome:
isEncrypted
libraryTrackFromCloudBackedItem:usingEncryption:
shl_libraryIdentifier
session:task:didModifyGroups:
session:task:didModifyTracks:
session:task:didDeleteItemsWithIdentifiers:
setModifyRecordsCompletionBlock:
recordIDsToDelete
syncTrigger
insertions
cloudBackedItemFromLibraryTrack:usingEncryption:
cloudBackedOperationFromModifyTask:container:
setModifyRecordsOperation:
_modifyRecordsOperation
T@"CKModifyRecordsOperation",&,N,V_modifyRecordsOperation
minusSet:
_insertions
_deletions
T@"NSSet",R,N,V_insertions
T@"NSSet",R,N,V_deletions
TB,R,N,GhasChanges
containerWithIdentifier:
initWithZoneName:ownerName:
initWithZoneID:
defaultContainer
debugContainer
T@"SHLCloudContext",R,N
_defaultContainer
_manateeContainer
_debugContainer
_shazamLibraryZone
T@"CKContainer",R,N,V_debugContainer
T@"CKContainer",R,N,V_defaultContainer
T@"CKRecordZone",R,N,V_shazamLibraryZone
T@"CKContainer",R,N,V_manateeContainer
setContainerTransformer:
setZoneTransformer:
setCache:
_scope
_containerTransformer
_zoneTransformer
_cache
T@"SHLCloudContainerTransformer",&,N,V_containerTransformer
T@"SHLCloudModifyZoneTransformer",&,N,V_zoneTransformer
T@"SHLCloudLibraryCache",&,N,V_cache
Tq,R,N,V_scope
record
recordType
initRequiringSecureCoding:
encodeSystemFieldsWithCoder:
encodedData
recordID
recordName
initWithIdentifier:metadata:
baseCloudRecordFromGroup:
initWithRecord:
metadata
initForReadingFromData:error:
finishDecoding
initWithRecordName:zoneID:
initWithRecordType:recordID:
libraryGroupFromCloudBackedItem:
cloudBackedItemFromLibraryGroup:
errorDictionary
errorCodeForResponseCode:
setErrorDictionary:
_errorDictionary
T@"NSDictionary",&,N,V_errorDictionary
T@"NSError",R,N
_zone
T@"CKRecordZone",R,N,V_zone
container
dictionaryWithCapacity:
newSubscriptionForZoneID:
initWithSubscription:
storeSubscription:forZoneIdentifier:error:
subscriptionID
privateCloudDatabase
modifySubscriptionsOperation
setDatabase:
allValues
setSubscriptionsToSave:
objectForKey:
removeSubscriptionForZoneIdentifier:error:
enumerateKeysAndObjectsUsingBlock:
setModifySubscriptionsCompletionBlock:
setExpectedSendSize:
subscriptionsToSave
subscriptionIDsToDelete
setQuantity:
setName:
setGroup:
initWithZoneID:subscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
setModifySubscriptionsOperation:
_modifySubscriptionsOperation
T@"CKModifySubscriptionsOperation",&,N,V_modifySubscriptionsOperation
fulfilledResult
isSatisfied
removeObjectAtIndex:
evaluatePreconditions:withCompletion:
evaluatePreconditionWithCompletion:
_encrypted
_container
T@"CKContainer",R,N,V_container
encrypted
TB,R,N,GisEncrypted,V_encrypted
observeAccountChangedNotification
updateAccountInfo
accountStatus
fetchAccountInfoWithCompletionHandler:
mainQueue
fetchUserRecordID
setCurrentUserID:
fetchUserRecordIDWithCompletionHandler:
standardUserDefaults
currentUserID
T@"NSString",C,N
T@"CKContainer",R,N
T@"<SHLibraryAccountListenerDelegate>",W,N,V_delegate
setCurrentCache:
_currentCache
T@"<SHLLibraryCache>",&,N,V_currentCache
subscription
_subscription
T@"CKSubscription",R,N,V_subscription
initWithIdentifier:providerIdentifier:providerName:date:labels:
setMetadata:
recognitionID
group
cloudContainer
failedResult
errorWithCode:
resultWithError:
accountStatusWithCompletionHandler:
setCloudContainer:
_cloudContainer
T@"SHLCloudBackedContainer",&,N,V_cloudContainer
doesCachesDirectoryExist
defaultManager
cachesDirectory
removeItemAtPath:error:
doesTaskFolderPathsExist
createTaskFolderPaths
inflightTaskPathForIdentifier:
failedTaskPathForIdentifier:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToFile:options:error:
fileExistsAtPath:
tasksOfType:
inflightFolderPath
failedFolderPath
fileURLWithPath:
tasksForFolderPath:ofType:
taskForFilePath:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
lastPathComponent
size
retryCount
setRetryCount:
setSyncTrigger:
T@"NSProgress",R,N
Tq,N
T@"NSString",N
T@"SHLSyncSession",W,N
removeItemAtURL:error:
dataWithContentsOfFile:
decodeObjectOfClasses:forKey:
doesZoneFolderPathExist
createZoneFolderPath
zonePathForIdentifier:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileExistsAtPath:isDirectory:
doesPrivateDatabaseFolderPathExist
createPrivateDatabaseFolderPath
currentDatabaseFolderPath
writeToken:toPath:error:
stringByAppendingPathComponent:
removeTokenAtPath:error:
zonesFolderPath
privateDatabaseFolderPath
containerID
privateDatabaseTransactionPath
undoTransactionWithError:
copyItemAtPath:toPath:error:
replaceItemAtURL:withItemAtURL:backupItemName:options:resultingItemURL:error:
removeAllTasksOfType:
resetWithError:
startTransactionWithError:
commitTransactionWithError:
removeZoneIdentifier:error:
storeDatabaseToken:error:
storeZoneToken:forZoneIdentifier:error:
removeDatabaseTokenWithError:
removeTokenForZoneIdentifier:error:
databaseToken
zoneTokenForZoneIdentifier:
setContainerID:
_containerID
T@"NSString",&,N,V_containerID
_record
T@"CKRecord",R,N,V_record
T@"NSString",R,N,V_name
endpoints
matchURLPathForClientIdentifier:
lookupURLPathForClientIdentifier:
_endpoints
T@"NSDictionary",R,N,V_endpoints
initWithResult:error:
_satisfied
satisfied
TB,R,N,GisSatisfied,V_satisfied
setShl_encrypted:
shl_objectForKey:
initWithRecognitionIdentifier:shazamKey:metadata:
setProviderIdentifier:
setProviderName:
encryptedValuesByKey
setAssociatedGroupIdentifier:
addLabel:
baseCloudRecordFromTrack:usingEncryption:
compoundIdentifier
shl_setObject:forKey:
providerIdentifier
providerName
coordinate
initWithLatitude:longitude:
setObject:forKeyedSubscript:
labels
associatedGroupIdentifier
initWithRecordID:action:
progressWithTotalUnitCount:
cleanupTransactionsWithError:
syncSession
shouldPerformFetch
newFetchTaskWithTrigger:
updateProgressWithTask:
executeTask:
newModifyTaskWithChanges:trigger:
syncProgress
shl_markIndeterminate
store
currentCache
syncActionForTaskType:
finishSession:
retryFailedTasks:
initWithOutcome:retryBlock:
retryHandler
retryTask:withContext:
taskWithFailedItemsAndCurrentChanges:
setFetchType:
unionSet:
hasChanges
totalUnitCount
addChild:withPendingUnitCount:
defaultLibrary
session:task:didFetchTracks:
session:task:didFetchGroups:
session:task:didFetchDeletedItemsWithIdentifiers:
T@"SHLShazamLibrary",R,N
synchronizeWithTrigger:
setSyncProgress:
setSyncSession:
setStore:
setRetryHandler:
setShouldPerformFetch:
_shouldPerformFetch
_syncProgress
_syncSession
_store
_retryHandler
T@"NSProgress",&,N,V_syncProgress
T@"SHLSyncSession",&,N,V_syncSession
T@"SHLLibraryStore",&,N,V_store
T@"SHLFailedTaskRetryHandler",&,N,V_retryHandler
TB,N,V_shouldPerformFetch
T@"<SHLShazamLibraryDelegate>",W,N,V_delegate
songItemDictionary
artworkURLFromDictionary:
setFormatOptions:
dateFromString:
uppercaseString
initWithDictionary:
artworkSize
targetArtworkImageSizeFromOriginalSize:
URLWithSize:cropStyle:format:
initWithSongItemDictionary:
setSongItemDictionary:
_songItemDictionary
T@"NSDictionary",&,N,V_songItemDictionary
T@"NSDate",R,N
songsDictionary
_songsDictionary
T@"NSDictionary",R,N,V_songsDictionary
notification
request
content
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
setFetchAllChanges:
databaseChangesOperation
fetchType
setPreviousServerChangeToken:
previousServerChangeToken
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
setRecordZoneWithIDWasPurgedBlock:
setFetchDatabaseChangesCompletionBlock:
setExpectedReceiveSize:
recordZoneChangesOperation
recordIDsFromCloudBackedZones:
setRecordZoneIDs:
configurationsByRecordZoneIDUsingCache:
setConfigurationsByRecordZoneID:
setRecordWasChangedBlock:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
recordZoneIDs
setDatabaseChangesOperation:
setRecordZoneChangesOperation:
_databaseChangesOperation
_recordZoneChangesOperation
T@"CKFetchDatabaseChangesOperation",&,N,V_databaseChangesOperation
T@"CKFetchRecordZoneChangesOperation",&,N,V_recordZoneChangesOperation
executeModifyTask:
executeFetchTask:
schedulerFactory
sessionDispatchQueue
scheduleModifyTask:
setSchedulerFactory:
setSessionDispatchQueue:
_schedulerFactory
_sessionDispatchQueue
T@"SHLTaskSchedulerFactory",&,N,V_schedulerFactory
T@"<SHLLocalStateTransactionable>",&,N,V_transaction
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionDispatchQueue
T@"<SHLSyncSessionDelegate>",W,N,V_delegate
initWithToken:
serverChangeToken
_serverChangeToken
T@"CKServerChangeToken",R,N,V_serverChangeToken
modifyRecordZonesOperation
recordZonesFromCloudBackedZones:
setRecordZonesToSave:
setModifyRecordZonesCompletionBlock:
recordZonesToSave
recordZoneIDsToDelete
setModifyRecordZonesOperation:
_modifyRecordZonesOperation
T@"CKModifyRecordZonesOperation",&,N,V_modifyRecordZonesOperation
initWithLibraryTrack:localTrack:
libraryTrack
localTrack
_libraryTrack
_localTrack
T@"SHLibraryTrack",R,N,V_libraryTrack
T@"SHTrackMO",R,N,V_localTrack
initWithLibraryGroup:localGroup:
libraryGroup
localGroup
_libraryGroup
_localGroup
T@"SHLibraryGroup",R,N,V_libraryGroup
T@"SHGroupMO",R,N,V_localGroup
locallyFoundTracks
remoteOnlyTracks
locallyFoundGroups
remoteOnlyGroups
_locallyFoundTracks
_remoteOnlyTracks
_locallyFoundGroups
_remoteOnlyGroups
T@"NSMutableArray",R,N,V_locallyFoundTracks
T@"NSMutableArray",R,N,V_remoteOnlyTracks
T@"NSMutableArray",R,N,V_locallyFoundGroups
T@"NSMutableArray",R,N,V_remoteOnlyGroups
setSyncController:
T@"SHLibrarySyncController",&,N,V_syncController
_initWithIdentifier:metadata:tracksToSave:
commonInitWithIdentifier:metadata:tracksToSave:
validIdentifier:
isEqualGroup:
setTracksToSave:
_tracksToSave
T@"NSMutableArray",&,N,V_tracksToSave
isShazamKeyValid:
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:
longLongValue
numberWithLongLong:
unsignedIntegerValue
_validatedKey
T@"NSString",R,N,V_validatedKey
outcome
retryBlock
_outcome
_retryBlock
T@"SHLTaskOutcome",R,N,V_outcome
T@?,R,N,V_retryBlock
retrySecondsForError:
retryTaskWithTimer:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
UUID
UUIDString
subdivideIntoBatchesOfSize:
numberOfItems
sortUsingComparator:
_init
setGroupsToModify:
setTracksToModify:
updateProgress
decodeInt64ForKey:
decodeIntegerForKey:
encodeInt64:forKey:
encodeInteger:forKey:
_progress
_identifier
_retryCount
_syncTrigger
_tracksToModify
_groupsToModify
T@"SHLLibraryBatch",&,N,V_tracksToModify
T@"SHLLibraryBatch",&,N,V_groupsToModify
T@"<SHLSyncSessionModifyTaskDelegate>",W,N,V_delegate
T@"NSString",R,N,V_identifier
T@"NSProgress",R,N,V_progress
Tq,N,V_retryCount
T@"NSString",N,V_syncTrigger
T@"SHLSyncSession",W,N,Vsession
loadStoreWithType:
managedObjectModelURL
initWithContentsOfURL:
initWithName:managedObjectModel:
persistentStoreDescriptionForStoreType:
setPersistentStoreDescriptions:
loadPersistentStoresWithCompletionHandler:
newBackgroundContext
setIncludesPendingChanges:
setReturnsObjectsAsFaults:
setRelationshipKeyPathsForPrefetching:
setFetchLimit:
providerID
predicateWithFormat:
sortDescriptorWithKey:ascending:
setSortDescriptors:
managedObjectContext
fetchManagedObjectForRequest:withPredicate:context:
andPredicateWithSubpredicates:
libraryGroupFromManagedGroup:
updateReportForLibraryTrack:
setData:
createMetadataWithData:track:group:context:
updateManagedTrack:withLibraryTrack:
insertNewObjectForEntityForName:inManagedObjectContext:
setArtworkURL:
associateTrack:toGroupWithIdentifier:context:
performBlockAndWait:
syncID
predicateWithBlock:
filteredArrayUsingPredicate:
updateReportForLibraryGroups:
setSyncID:
deleteObject:
persistentContainer
persistentStoreDescriptions
initWithFetchRequest:
persistentStoreCoordinator
executeRequest:withContext:error:
save:
setPredicate:
executeFetchRequest:error:
setTrack:
setRecognitionID:
setProviderID:
setLabels:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
fetchRecentLibraryGroupsWithLimit:
setPersistentContainer:
setManagedObjectContext:
_libraryTracksFetchedResultsController
_persistentContainer
_managedObjectContext
T@"NSPersistentContainer",&,N,V_persistentContainer
T@"NSManagedObjectContext",&,N,V_managedObjectContext
T@"NSFetchedResultsController",R,N,V_libraryTracksFetchedResultsController
loadEndpointForClientIdentifier:clientType:endpointType:installationID:callback:
storefront
updateTokensForEndpoint:countryCode:installationID:
preferredLanguages
_storefront
T@"SHStorefront",R,N,V_storefront
taskTransformer
setTaskTransformer:
_taskTransformer
T@"SHLCloudModifyTaskTransformer",&,N,V_taskTransformer
attachmentWithIdentifier:URL:options:error:
downloadImageURL:completionHandler:
sharedSession
processInfo
globallyUniqueString
temporaryDirectory
URLByAppendingPathComponent:
moveItemAtURL:toURL:error:
downloadTaskWithURL:completionHandler:
fetchRequestWithEntityName:
T@"NSString",C,D,N
T@"SHMetadataMO",&,D,N
tracks
T@"NSSet",&,D,N
T@"NSData",&,D,N
T@"SHGroupMO",&,D,N
track
T@"SHTrackMO",&,D,N
T@"NSURL",C,D,N
T@"NSDate",C,D,N
T@"NSArray",&,D,N
Received public token '%@' on connection %@
APS push received for topic: '%@'
Ignoring APS push message, not a CloudKit update
Deallocating the XPC Service
Failed to setup the remote proxy %@
Starting transaction
Ending transaction
Starting watchdog timer for %f seconds
Stopping watchdog timer
XPC Service stopping after final service %@ finished
XPC Service started running %@
XPC connection interrupted from %@:%i
XPC connection invalidated from %@:%i
Failed to set tmp dir suffix
Watchdog timer fired
Shazam service matching signature of duration %f with data of length %lu at %@
Received network response, no data %@
Server response parser: Error, %@
Server response parser: Error, returning results, recording intermission %f, retry %f
Server response parser: Returning results, recording intermission %f, retry %f
Server response parser: has match %@
Server response parser: No response %@
Server response parser: has no match
Server response parser: has no media items
Failed to encode network request %@
Failed to fetch data task %@
Sending no match notification
Sending match notification
Failed to schedule notification: %@
Deallocating audio session manager
Register observers
Remove observers
Deactivating audio session
Failed to deactivate AVAudioSession: %@
Audio interruption started, stopping recognition
Audio interruption ended
Media services lost notification - stopping recognition
Media services reset notification - restarting recognition
Activating audio session
Failed to set category on AVAudioSession: %@
Failed to enable haptics while recording: %@
Failed to decouple IO AVAudioSession: %@
Failed to activate AVAudioSession: %@
handleAudioSessionRouteChange: %@
Deallocating recording service
Internal session support: %d headphones connected: %d
Using internal recognition session as the preferred session
Using external recognition session as the preferred session
Failed to stop recorder with error: %@
Unable to resume recognition after audio interruption: %@
Failed to start recorder %@
Failed to start recorders with error: %@
Told not to resume after audio interruption ended
Unable to load Application Support directory: %@
Populating remote configuration...
Fetching endpoints...
Endpoint fetch complete with value %@ error %@
Fetching insights...
Insights fetch complete with value %@ error %@
Fetching hosts...
Host fetch complete with value %@ error %@
Processed %lu changes before sync. Inserted %ld & Updated %ld local group entries
Processed %lu changes before sync. Inserted %ld & Updated %ld local track entries
Processed %lu deletions before sync. Deleted %ld local entries
Failed to persist library changes with error %@
iCloud account is not available or device to device encryption is not supported, skipping remote sync
Failed to observe local changes: %@
Processed %lu returned track changes. Inserted %ld & Updated %ld local entries
Processed %lu returned group changes. Inserted %ld & Updated %ld local entries
Processed %lu returned deletions. Deleted %ld local entries
Failed to persist sync changes with error: %@
Failed to delete sync metadata: %@
Failed to purge local group objects: %@
Failed to purge local track objects: %@
Clear sync metadata and cache sync status
Failed to convert %@ to %@
Deallocating SHAudioRecorder
Failed to create a new audio queue input with error %@
Failed to set audio queue property
Failed to add isRunning property listener
Failed to start audio queue, retry one more time
Failed to stop audio queue %@
Failed to remove isRunning property listener %@
Failed to dispose audio queue %@
Failed to start audio queue after a retry
Audio queue <%p> running state has changed
Recognition Service already recognizing
startRecognition of single signature
startRecognition based upon deadline %@
Tagging finish conditions NOT met - continuing
Tagging finish conditions: timeOut %d, oneAttempt: %d, foundMatch: %d, signatureMatch: %d, failed %d
Not recognizing so returning from stop
Deallocating the Shazam Service
Shazam service stop called
Validating entitlements failed with missing entitlements %@, stopping
Service %@ changed running state to %d
Client does not have entitlement: %@
Failed to parse lyrics song info %@
Failed to fetch account info %@
Account supports device to device encryption
<task: %{public}@ %@> Local subscription for <zone: %{public}@> does not exist, creating one now
<task: %{public}@ %@> <zone: %{public}@> does not exist, so we are attempting to create one with a subscription
<task: %{public}@ %@> is scheduled
Fetching media item at %@
Media item fetch response %@, %@
Error fetching media item %@
Unable to unarchive notification payload data %@ with error %@
Failed to complete modify operation. Error %@
iCloud account is available
No iCloud account available
iCloud account is restricted
Failed to retrieve iCloud account information with error %@
Sync started with trigger: %{public}@
Failed to complete <task: %{public}@ %@> and not retrying due to <error: %@>
Finished <task: %{public}@ %@> and sync complete
Finished <task: %{public}@ %@>, still syncing
Client called Library completion with success = %d for <task: %{public}@ %@>
Error finishing transaction for <task: %{public}@ %@> %@
Finished handling transaction for <task: %{public}@ %@>
Uploaded %lu modified tracks
Uploaded %lu modified groups
Deleted %lu items
Fetched %lu tracks
Fetched %lu groups
Fetched %lu deleted items
Received notification response %@ for request %@ with content %@
Using <token: %@> for database fetch
<zone: %@> does not exist locally, saving now
<zone: %@> was deleted
<zone: %@> was purged
Updated database <token: %@>
Updated <zone: %{public}@> token: %@>
<zone: %{public}@> token has expired. Removing saved token
Using <zone changes configuration: %@> for fetch
Failed to schedule <task: %{public}@ %@> pre-conditions were not satisifed
Failed to complete zone operation. Error %@
Missing bundle identifier, failed to fetch library tracks
Retrying <task: %{public}@ %@> after %f seconds <error: %@>
Retrying <task: %{public}@ %@> immediately <error: %@>
Failed to load description %@
Updating existing entries for %lu library track(s)
Creating entries for %lu library track(s)
Updating existing entries for %lu Library Group IDs: %@
Creating entries for %lu library group(s)
Failed to fetch request %{public}@
Persisting a Track with an associated Group ID, but there is no group saved locally. Will fallback to creation.
Missing or invalid host %@
Missing or invalid match endpoint %@
Fetching endpoint with storefront %@
<task: %{public}@ %@> <zone: %{public}@> does not exist locally, so we are creating one
SHAPSConnection
APSConnectionDelegate
NSObject
SHLibrarySyncDelegate
SHXPCServiceProxy
SHMatcher
SHLibrarySync
SHMediaItemProvider
SHXPCRemoteDelegate
SHMatcherDelegate
SHXPCConnection
SHShazamServiceDelegate
SHXPCServiceDelegate
NSXPCListenerDelegate
SHWatchdogTimer
SHShazamResponseItem
SHServerShazamResponse
SHAudioTapService
SHShazamServiceMatcher
SHServerMatchResponseParser
SHServerGetResponseParser
SHServerResourcesResponse
SHAMSEndpointRequester
SHNetworkRecognitionRequester
SHNotificationService
SHNotificationContentProviderDelegate
SHAudioSessionManager
SHRecordingService
SHAudioRecorderDelegate
SHAudioSessionManagerDelegate
SHLibraryPersistentConfiguration
SHLibrarySyncContext
SHNotificationContentProvider
SHRemoteConfiguration
SHServerDataResponse
Chunking
SHLibrarySyncController
SHLShazamLibraryDelegate
SHLibraryAccountListenerDelegate
NSFetchedResultsControllerDelegate
SHAudioTap
SHAudioRecorder
SHLibraryLabel
NSSecureCoding
NSCoding
SHServerResultsResponse
SHTokenizedEndpoint
NSCopying
SHRecognitionService
SHSessionDelegate
SHService
SHShazamServiceCatalog
ShazamLibrary
SHLCloudBackedOperation
SHMusicVideoResponseItem
SHServerMusicVideoResponse
SHShazamService
SHServiceDelegate
SHFeatureFlags
SHHost
SHLSyncSessionConfiguration
SHEntitlements
SHAnalytics
SHLLibraryChangeset
SHLTaskOutcome
SHLyricsResponseItem
SHServerLyricsResponse
SHLLibraryTrackCompoundIdentifier
SHLCloudEncryptionPrecondition
SHLMutableLibraryGroup
SHLSyncSessionFetchTask
SHLOperationQueue
SHStorefront
SHLError
SHLLibraryItemMetadata
SHLMutableLibraryTrack
SHLLibraryTrack
SHLLibraryItem
NSMutableCopying
SHDeviceInfo
SHLModifyTaskRecovery
SHLCloudFetchTaskScheduler
SHLFetchTaskScheduler
SHLTaskScheduler
SHAppClip
SHMediaItemService
SHNotificationPayload
SHLCloudContainerTransformer
SHInsights
SHLTaskSchedulerFactory
SHLCloudModifyTaskTransformer
SHLLibraryBatch
SHLCloudContext
SHLCloudTaskScheduler
SHLCloudGroupTransformer
SHServerErrorResponse
SHLCloudBackedZone
SHLCloudSubscriptionTransformer
SHLTaskPreconditionEvaluator
SHLCloudBackedContainer
SHLibraryAccountListener
SHLLibraryStore
SHLCloudBackedSubscription
SHLibraryItemMapper
SHLCloudAccountStatusPrecondition
SHLTaskPrecondition
SHLSyncSessionTask
SHLCloudLibraryCache
SHLLibraryCache
SHLLocalStateTransactionable
SHLCloudBackedItem
SHLLibraryLabel
SHEndpoints
SHLTaskPreconditionResult
SHLCloudTrackTransformer
SHLShazamLibrary
SHLSyncSessionModifyTaskDelegate
SHLSyncSessionTaskDelegate
SHLSyncSessionDelegate
SHLSyncSessionFetchTaskDelegate
SHSongsResponseItem
SHServerSongsResponse
SHNotificationCenterDelegate
UNUserNotificationCenterDelegate
SHLCloudFetchTaskTransformer
SHLSyncSession
SHLCloudBackedToken
SHLCloudModifyZoneTransformer
SHLibraryTrackLocalTrackPair
SHLibraryGroupLocalGroupPair
SHLibrarySyncUpdateReport
SHLibraryService
SHLLibraryGroup
SHLShazamKey
SHLTaskRetryContext
SHLFailedTaskRetryHandler
SHLSyncSessionModifyTask
SHLibraryDataStore
SHShazamServiceURLBuilder
SHLCloudModifyTaskScheduler
SHLModifyTaskScheduler
SHNotificationAttachmentProvider
SHGroupMO
CoreDataProperties
SHMetadataMO
SHTrackMO
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v24@0:8@16
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v24@0:8@"<SHLibrarySync>"16
v32@0:8@"<SHLibrarySync>"16@"SHLibraryDifference"24
v40@0:8@"<SHLibrarySync>"16@"NSError"24@"NSArray"32
v16@0:8
@"SHLibrarySyncController"
@"APSConnection"
@"NSObject<OS_dispatch_queue>"
v24@0:8@"SHMatcherRequest"16
@"<SHMatcherDelegate>"16@0:8
v24@0:8@"<SHMatcherDelegate>"16
v32@0:8q16@?24
v24@0:8@"SHLibraryDifference"16
v32@0:8q16@?<v@?@"NSArray"@"NSError">24
@"<SHLibrarySyncDelegate>"16@0:8
v24@0:8@"<SHLibrarySyncDelegate>"16
v32@0:8@16@?24
v32@0:8@"NSString"16@?<v@?@"SHMediaItem"@"NSError">24
v32@0:8@16q24
v32@0:8@"<SHMatcher>"16@"SHMatcherResponse"24
v32@0:8@"<SHMatcher>"16q24
v32@0:8@"SHShazamService"16@"<SHService>"24
@24@0:8@16
v32@0:8d16@?24
v20@0:8B16
@"SHWatchdogTimer"
@"NSXPCInterface"
@"<SHXPCRemoteDelegate>"
@"SHAttribution"
@"NSString"
@"NSXPCConnection"
@"NSObject<OS_os_transaction>"
@"NSDate"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSMutableArray"
@"SHAPSConnection"
@"NSObject<OS_dispatch_source>"
@"SHRecordingService"
@"NSISO8601DateFormatter"
@"SHShazamServiceCatalog"
@32@0:8@16^@24
@32@0:8@16@24
@"NSDictionary"
v32@0:8@"NSURLRequest"16@?<v@?@"NSData"@"NSURLResponse"@"NSError">24
@"AMSMediaRequestEncoder"
@"AMSURLSession"
B24@0:8@"SHNotificationContentProvider"16
@"SHMatchedMediaItem"
@"NSUUID"
@"UNUserNotificationCenter"
@"SHNotificationContentProvider"
@"SHNotificationCenterDelegate"
@"<SHAudioSessionManagerDelegate>"
v40@0:8@"<SHAudioRecorder>"16@"AVAudioPCMBuffer"24@"AVAudioTime"32
v32@0:8@16Q24
v32@0:8@"SHAudioSessionManager"16Q24
B24@0:8q16
v24@0:8Q16
v24@0:8@?16
@"SHAudioSessionManager"
@"NSArray"
@"<SHLibrarySyncDelegate>"
@"SHLibraryDifference"
@"NSError"
@"<SHNotificationContentProviderDelegate>"
@"SHFeatureFlags"
@"AMSBag"
@"AMSBagValue"
v40@0:8@16@24q32
v48@0:8@16@24@32q40
v24@0:8@"SHLShazamLibrary"16
v40@0:8@"SHLShazamLibrary"16@"NSArray"24q32
v48@0:8@"SHLShazamLibrary"16@"NSError"24@"NSArray"32q40
v32@0:8@"SHLShazamLibrary"16@?<v@?B>24
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v32@0:8@"NSFetchedResultsController"16@"NSDiffableDataSourceSnapshot"24
v32@0:8@"NSFetchedResultsController"16@"NSOrderedCollectionDifference"24
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
@40@0:8@16@24@32
v40@0:8q16@24@?32
@"SHLShazamLibrary"
@"SHLibraryDataStore"
@"NSObject<OS_dispatch_group>"
@"SHLibrarySyncContext"
@"SHLibraryAccountListener"
@?16@0:8
@40@0:8^v16Q24@32
@24@0:8q16
B24@0:8^@16
q16@0:8
v24@0:8@?<v@?B@"NSError">16
@"<SHAudioRecorderDelegate>"16@0:8
v24@0:8@"<SHAudioRecorderDelegate>"16
B28@0:8i16^@20
v24@0:8q16
^{OpaqueAudioQueue=}16@0:8
v24@0:8^{OpaqueAudioQueue=}16
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
v56@0:8{AudioStreamBasicDescription=dIIIIIIII}16
[3^{AudioQueueBuffer}]
@"<SHAudioRecorderDelegate>"
^{OpaqueAudioQueue=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
B32@0:8q16@24
@"NSMutableDictionary"
v32@0:8@"SHSession"16@"SHMatch"24
v40@0:8@"SHSession"16@"SHSignature"24@"NSError"32
d16@0:8
@"NSArray"16@0:8
@"<SHServiceDelegate>"16@0:8
v24@0:8@"<SHServiceDelegate>"16
@32@0:8@16q24
B40@0:8@16@24q32
@"<SHServiceDelegate>"
@"SHSession"
@"<SHMatcherDelegate>"
@"SHAudioTap"
@"SHMatcherRequest"
@40@0:8@16q24@32
@"CKDatabaseOperation"
v28@0:8@"<SHService>"16B24
@"SHRemoteConfiguration"24@0:8@"<SHService>"16
@"SHRecognitionService"
@"SHNotificationService"
@"SHAudioTapService"
@"SHLibraryService"
@"SHMediaItemService"
@"<SHShazamServiceDelegate>"
@"SHEntitlements"
@32@0:8q16q24
v24@0:8^{__SecTask=}16
B40@0:8@16@24@32
^v32@0:8@16^{__SecTask=}24
B32@0:8@16^{__SecTask=}24
B40@0:8@16@24^{__SecTask=}32
@"NSMutableSet"
@24@0:8d16
@"MSVLyricsSongInfo"
@"SHLShazamKey"
@"<SHLSyncSessionFetchTaskDelegate>"
@"NSOperationQueue"
@"NSOperation"
d24@0:8@16
@"NSData"
@"CLLocation"
@24@0:8@"NSString"16
@32@0:8@"NSString"16@"SHLLibraryItemMetadata"24
@"SHLLibraryItemMetadata"16@0:8
@"SHLLibraryItemMetadata"
@"SHLLibraryTrackCompoundIdentifier"
@24@0:8*16
@56@0:8@16@24@32@40@48
@"SHLSyncSessionModifyTask"
v24@0:8@"SHLSyncSessionFetchTask"16
@"SHLCloudFetchTaskTransformer"
@"SHLCloudSubscriptionTransformer"
@"<SHAppClipDelegate>"
@"SHShazamServiceURLBuilder"
@"<SHNetworkRecognitionRequester>"
@"SHMediaItem"
@"SHLSyncSessionConfiguration"
@"CKModifyRecordsOperation"
@"NSSet"
@"CKContainer"
@"CKRecordZone"
@"SHLCloudContainerTransformer"
@"SHLCloudModifyZoneTransformer"
@"SHLCloudLibraryCache"
q24@0:8@16
@"CKModifySubscriptionsOperation"
@"<SHLibraryAccountListenerDelegate>"
@"<SHLLibraryCache>"
@"CKSubscription"
v24@0:8@?<v@?@"SHLTaskPreconditionResult">16
@"SHLCloudBackedContainer"
@"NSProgress"16@0:8
v24@0:8@"NSString"16
@"SHLSyncSession"16@0:8
v24@0:8@"SHLSyncSession"16
B40@0:8@16q24^@32
B40@0:8q16@24^@32
@32@0:8q16@24
B40@0:8@"<SHLSyncSessionTask>"16q24^@32
B40@0:8q16@"NSString"24^@32
@"NSArray"24@0:8q16
@"<SHLSyncSessionTask>"32@0:8q16@"NSString"24
B32@0:8@16^@24
B40@0:8@16@24^@32
@"CKRecord"
@28@0:8B16@20
@28@0:8@16B24
v40@0:8@"SHLSyncSession"16@"<SHLSyncSessionTask>"24@"SHLTaskOutcome"32
v40@0:8@"SHLSyncSession"16@"SHLSyncSessionModifyTask"24@"NSArray"32
v40@0:8@"SHLSyncSession"16@"SHLSyncSessionFetchTask"24@"NSArray"32
q24@0:8q16
@"<SHLShazamLibraryDelegate>"
@"NSProgress"
@"SHLSyncSession"
@"SHLLibraryStore"
@"SHLFailedTaskRetryHandler"
{CGSize=dd}32@0:8{CGSize=dd}16
v40@0:8@16@24@?32
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
@40@0:8@16@24@?32
@"CKFetchDatabaseChangesOperation"
@"CKFetchRecordZoneChangesOperation"
@"<SHLSyncSessionDelegate>"
@"SHLTaskSchedulerFactory"
@"<SHLLocalStateTransactionable>"
@"CKServerChangeToken"
@"CKModifyRecordZonesOperation"
@"SHLibraryTrack"
@"SHTrackMO"
@"SHLibraryGroup"
@"SHGroupMO"
@32@0:8@16@?24
@"SHLTaskOutcome"
@"<SHLSyncSessionModifyTaskDelegate>"
@"SHLLibraryBatch"
@48@0:8@16@24@32@40
@"NSFetchedResultsController"
@"NSPersistentContainer"
@"NSManagedObjectContext"
v40@0:8@16q24@?32
v48@0:8@16q24@32@?40
v56@0:8@16q24q32@40@?48
@"SHStorefront"
v24@0:8@"SHLSyncSessionModifyTask"16
@"SHLCloudModifyTaskTransformer"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241115</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>shazamd</string>
<key>CFBundleExecutable</key>
<string>shazamd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.shazamd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>shazamd</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>19R5266o</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>8.0</string>
<key>DTSDKBuild</key>
<string>19R5266o</string>
<key>DTSDKName</key>
<string>watchsimulator8.0.internal</string>
<key>DTXcode</key>
<string>1300</string>
<key>DTXcodeBuild</key>
<string>13A6139f</string>
<key>MinimumOSVersion</key>
<string>8.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.shazamd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.coreaudio.app-tap</key>
<true/>
<key>com.apple.coreaudio.private.SystemWideTap</key>
<true/>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.shazam.secure</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.ClipServices</key>
<true/>
<key>com.apple.private.ShazamKit</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.shazam.secure</key>
<string>com.apple.shazam.secure</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.controlcenter.service.moduleidentifiers</key>
<array>
<string>com.apple.shazamkit.controlcenter.ShazamModule</string>
</array>
<key>com.apple.private.mediasafetynet.exception.shazam</key>
<true/>
<key>com.apple.private.shazamkit.persistence</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.ShazamNotifications</string>
</array>
<key>com.apple.security.device.audio-input</key>
<true/>
<key>com.apple.security.device.microphone</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Library/Application Support/com.apple.shazamd/</string>
<string>/Library/Caches/com.apple.shazamd/</string>
<string>/Library/Caches/com.apple.shazam.secure/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.ClipServices.clipserviced</string>
<string>com.apple.audio.AudioQueueServer</string>
<string>com.apple.controlcenter.remoteservice</string>
<string>com.apple.fairplayd.versioned</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.systemstatus.activityattribution</string>
<string>com.apple.mediasafetynet.exceptions</string>
<string>com.apple.powerlog.plxpclogger.xpc</string>
<string>com.apple.apsd</string>
<string>com.apple.shazamd.persistence</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.ShazamKit</string>
<string>com.apple.shazamd</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.security.ts.play-media</key>
<true/>
<key>com.apple.security.ts.tmpdir</key>
<string>com.apple.shazamd</string>
<key>com.apple.systemstatus.activityattribution</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
