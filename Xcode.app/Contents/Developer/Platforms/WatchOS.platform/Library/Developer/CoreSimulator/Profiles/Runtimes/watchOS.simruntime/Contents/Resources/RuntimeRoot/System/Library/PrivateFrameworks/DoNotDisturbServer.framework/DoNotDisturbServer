@(#)PROGRAM:DoNotDisturbServer  PROJECT:DoNotDisturb-1
source
applicationIdentifier
displayName
storeIconURL
cachedIconURL
syncEngine
action
modifiedRecords
deletedMetadata
metadataAck
ackAction
syncDate
update
replace
unlock
resync
Kettle
FeatureComplete
com.donotdisturb.server.DNDSIDSSyncEngine
v8@?0
Tinker
non-Tinker
enabled
disabled
com.apple.donotdisturb.DNDSIDSSyncEngine
zones
pairedDevice
syncState
retriesAvailable
inflightExpirationTime
inflightMetadata
inflightMetadataByRequestIdentifier
inflightDateByRequestIdentifier
role
v20@?0B8@"NSError"12
v28@?0B8@"NSString"12@"NSError"20
<%@: %p; interruptionBehaviorSetting: %@>
interruptionBehaviorSetting
header
version
timestamp
data
NSDictionary
Unexpected version number
com.apple.donotdisturb.server.JSONBackingStore
deviceOutOfSpace
<%@: %p; UUID: %@; predicate: %@; requestDate: %@; details: %@; source: %@; reason: %@; reasonOverride: %@>
v24@?0q8^B16
com.apple.donotdisturb.lifetime-monitor.%@
@"NSString"16@?0@"NSUUID"8
active-uuids
preventAutoReply
bypassSettings
lastModified
automaticallyGenerated
.donotdisturb.trigger
com.apple.donotdisturb.private.app-launch
com.apple.donotdisturb.private.biome-app-launch.queue
com.apple.donotdisturb.appForeground.coalescing
B16@?0@"DNDModeAssertion"8
system
com.apple.donotdisturb.appLaunch
eventBody.bundleID
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
com.apple.donotdisturb.appLaunch.event-coalescing
com.apple.focus.activity-manager
B16@?0@"<DNDSModeAssertionUpdateContext>"8
com.apple.donotdisturb.EventBehaviorResolutionService
com.apple.donotdisturb.EventBehaviorResolver
uuid
local-date
client-identifier
outcome
reason
@"NSDictionary"16@?0@"DNDSEventBehaviorResolution"8
resolution-record
B24@?0@"DNDSEventBehaviorResolution"8@16
is NOT
com.apple.cmas
B16@?0@"CNContact"8
v24@?0@"CNContact"8^B16
@16@?0@"CNContact"8
B16@?0@"DNDSEventBehaviorResolution"8
UI locked
UI unlocked
<invalid>
com.apple.donotdisturb.availability.service.launching
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
com.apple.donotdisturbd.%@
User Notifications are disabled for this App.
Focus Status is not shared with this App.
App is missing Communication Notifications entitlement.
<%@: %p; immediateBypassEventSourceType: %@; immediateBypassCNGroupIdentifier: '%@'; repeatEventSourceBehaviorEnabledSetting: %@>
immediateBypassEventSourceType
immediateBypassCNGroupIdentifier
repeatEventSourceBehaviorEnabledSetting
com.apple.donotdisturb.server.ContactMonitor
v32@?0@"NSArray"8@"NSArray"16@"NSData"24
v24@?0@"NSArray"8^B16
com.apple.donotdisturb.server.CalendarEventLifetimeMonitor.timer
v24@?0@"NSString"8@"NSObject<OS_xpc_object>"16
B16@?0@"EKEvent"8
com.apple.donotdisturb.server.DateIntervalLifetimeMonitor.timer
@"NSUUID"16@?0@"DNDModeAssertion"8
com.donotdisturb.server.AvailabilityCoordinator
com.donotdisturb.server.ExtensionLaunch
@"NSSet"24@?0@"NSArray"8@"NSArray"16
com.apple.MobileSMS
v24@?0@"NSString"8@"NSError"16
v24@?0@"INIntentResponse"8@"NSError"16
NSExtension
NSExtensionPointIdentifier
com.apple.watchkit
v16@?0@"NSError"8
Calling bundleId does not have permission to read user availability.
Caller does not have permission to trigger publishing user availability.
AVAILABLE
UNAVAILABLE
Call to -[SKStatusPublishingService publishStatusRequest:completion:] timed out
com.apple.donotdisturb.server.until-i-leave
com.donotdisturb.server.LocationLifetimeMonitor
CLCircularRegion
DNDModeAssertionExplicitRegionLifetime
%@.private.region.%@
Failed to load current explicit region database
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSLocationLifetimeMonitor.m
Failed to write store
<%@: %p; enteredRegionIdentifiersPendingExit: %@>
enteredRegionIdentifiersPendingExit
Failed to load current region database
<%@: %p; activeAssertionUUIDs: %@; hasActiveLifetimes: %@; currentRegion: %@; regionEntered: %@>
activeLifetimeAssertionUUIDs
@16@?0@"NSString"8
currentRegion
regionIdentifier
regionCenterLatitude
regionCenterLongitude
regionRadius
regionEntered
@16@?0@"NSUUID"8
unknown
inside
outside
act-update-fuzz-floor
act-update-fuzz-ceiling
act-update-disabled
act-update-coalescing-interval
<%@: %p; lastUpdatedTimestamp: %@; scheduleEnabledSetting: %@; timePeriodStartTimeHour: %@; timePeriodStartTimeMinute: %@; timePeriodEndTimeHour: %@; timePeriodEndTimeMinute: %@; timePeriodWeekdays: %@; bedtimeBehaviorEnabledSetting: %@>
lastUpdatedTimestamp
scheduleEnabledSetting
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodEndTimeHour
timePeriodEndTimeMinute
timePeriodWeekdays
bedtimeBehaviorEnabledSetting
<%@: %p; meDeviceStatus: %@; meDeviceName: %@>
meDeviceStatus
meDeviceName
<%@: %p; placeholderModes: %@>
placeholderModes
Inactive
Active
storeAssertionRecords
storeInvalidationRecords
storeInvalidationRequestRecords
assertionUUID
assertionStartDateTimestamp
assertionDetails
assertionSource
assertionDetailsIdentifier
assertionDetailsModeIdentifier
assertionDetailsUserVisibleEndDate
assertionDetailsLifetime
assertionDetailsReason
assertionDetailsLifetimeType
assertionDetailsCalendarEventLifetimeEventUniqueIdentifier
assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp
assertionDetailsCalendarEventLifetimeOnlyDuringEvent
assertionDetailsDateIntervalLifetimeStartDateTimestamp
assertionDetailsDateIntervalLifetimeEndDateTimestamp
assertionDetailsScheduleLifetimeScheduleIdentifier
assertionDetailsScheduleLifetimeBehavior
assertionDetailsExplicitRegionLocationLifetimeLatitude
assertionDetailsExplicitRegionLocationLifetimeLongitude
assertionDetailsExplicitLocationRegionLifetimeRadius
assertionDetailsExplicitRegionLocationLifetimeRegionIdentifier
assertionClientIdentifier
assertionSourceDeviceIdentifier
invalidationAssertion
invalidationDateTimestamp
invalidationDetails
invalidationSource
invalidationReason
invalidationReasonOverride
invalidationDetailsIdentifier
invalidationRequestUUID
invalidationRequestPredicate
invalidationRequestDateTimestamp
invalidationRequestDetails
invalidationRequestSource
invalidationRequestReason
invalidationRequestReasonOverride
invalidationPredicateType
dateInvalidationPredicateDate
clientIdentifierInvalidationPredicateIdentifiers
UUIDInvalidationPredicateUUIDs
Library
DoNotDisturb
Assertions.json
Settings.json
Metrics.json
BulletinBoard
BehaviorOverrides.plist
UntilExitRegion.json
ExplicitRegion.json
ModeConfigurations.json
ModeConfigurationsSecure.json
GlobalConfiguration.json
System
PlaceholderModes.ipados.json
PlaceholderModes.json
SyncEngineMetadata.plist
SyncEngineLastChance.plist
IDSSyncEngineMetadata.plist
AssertionSyncMetadata.plist
MeDeviceStatus.json
@"NSDictionary"16@?0@8
user-requested
assertionDetailsUserRequested
schedule
com.apple.donotdisturb.schedule.default
expire-on-end
storeLastCompleteInvalidationTimestamp
user-changed-state
storeLastCompleteInvalidationReason
assertionDetailsSyncSuppressionOptions
storeLastUpdateDate
storeLastCompleteInvalidationSourceClientIdentifier
storeLastCompleteInvalidationSourceDeviceIdentifier
@"NSDictionary"16@?0@"NSMutableDictionary"8
invalidationSourceClientIdentifier
invalidationSourceDeviceIdentifier
B16@?0@"DNDModeAssertionInvalidation"8
q24@?0@"DNDModeAssertion"8@"DNDModeAssertion"16
q24@?0@"DNDSModeAssertionInvalidationRequest"8@"DNDSModeAssertionInvalidationRequest"16
B16@?0@"DNDSModeAssertionInvalidationRequest"8
q24@?0@"DNDModeAssertionInvalidation"8@"DNDModeAssertionInvalidation"16
default.device
assertionDetailsScheduleLifetimeLatitude
assertionDetailsScheduleLifetimeLongitude
assertionDetailsScheduleLifetimeRadius
assertionDetailsScheduleLifetimeRegionIdentifier
<%@: %p; interruptionSuppression: %@>
<%@: %p; mode: %@; configuration: %@; secureConfiguration: %@; triggers: %@; impactsAvailability: %@; dimsLockScreen: %@; created: %@; lastModified: %@; automaticallyGenerated: %@; hasSecureData: %@>
<%@: %p; mode: %@; impactsAvailability: %@; dimsLockScreen: %@>
mode
configuration
secureConfiguration
triggers
secureTriggers
impactsAvailability
dimsLockScreen
created
hasSecureData
metadata
systemFields
systemFieldsRecordID
systemFieldsData
userRecordID
accountStatus
encryptionAvailable
com.apple.donotdisturb.server.MetricsManager
com.apple.donotdisturb.control-center.module
com.apple.private.Carousel.control-center.DND.state
none
com.apple.donotdisturb.assertionTaken
manual
type
controlCenterPhone
controlCenterWatch
scheduleIdentifier
hour
lockState
weekday
@"NSDictionary"8@?0
com.apple.donotdisturb.kit.lifetime.one-hour
com.apple.donotdisturb.kit.lifetime.evening
com.apple.donotdisturb.kit.lifetime.morning
com.apple.donotdisturb.kit.lifetime.location
com.apple.donotdisturb.kit.lifetime.event
com.apple.donotdisturb.mode.driving
com.apple.donotdisturb.dailyHeartbeat
manuallyEnabled
numberOfSessions
numberOfManualSessions
enabledFromControlCenterPhone
enabledFromControlCenterWatch
enabledForOneHour
enabledUntilEvening
enabledUntilMorning
enabledAtLocation
enabledDuringEvent
enabledDrivingMode
enabledSleepMode
dayOfWeek
com.apple.donotdisturb.weeklyHeartbeat
com.apple.donotdisturb.monthlyHeartbeat
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/Metrics/DNDSMetricsManager.m
MMMMYYYY
en_US
<%@: %p; minimumBreakthroughUrgency: %@; ; allowedThreads: %@; ; deniedThreads: %@; >
minimumBreakthroughUrgency
allowedThreads
deniedThreads
com.apple.donotdisturb.server.ScheduleLifetimeMonitor.timer
com.apple.mobiletimer.mode.sleep
com.apple.donotdisturb.reachability
v16@?0@"NSObject<OS_nw_path>"8
com.apple.donotdisturb.server.ModeConfigurationsManager
Cannot store mode configuration as new configuration contains secure data and store is not writeable
Cannot replace mode configuration as existing configuration has secure data and store is not writeable
Failed to load configurations
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSModeConfigurationManager.m
Saving configuration
Saved configurations
Failed to save configuations
Error saving configurations
Failed to save configuations; first lock
com.apple.donotdisturb.ModeConfigurationsManager
@"DNDSModeAssertionRecord"16@?0@8
com.apple.donotdisturb.legacy-watch-toggle
@"NSDictionary"16@?0@"DNDSModeAssertionRecord"8
com.apple.donotdisturb.PlaceholderModeManager
Failed to load placeholder modes
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSPlaceholderModeManager.m
BBBehaviorOverride
BBBehaviorOverrideEffectiveInterval
bundleID
platform
<%@: %p; preventAutoReply: %@; bypassSettings: %@; lastModified: %@; automaticallyGenerated: %@>
<schedule: enabled: %@; %@; bedtime: %@; creation: %@>
com.apple.donotdisturb.private.fmf-me-device.queue
com.apple.donotdisturb.DNDSMeDeviceService.call-out
Failed to load current 'Me Device' database
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSMeDeviceService.m
Failed to write 'Me Device' store
class
enabledSetting
DNDModeConfigurationTrigger
DNDModeConfigurationScheduleTrigger
DNDModeConfigurationSmartTrigger
DNDModeConfigurationWorkoutTrigger
DNDModeConfigurationSleepingTrigger
DNDModeConfigurationDrivingTrigger
DNDModeConfigurationGameControllerTrigger
DNDModeConfigurationMindfulnessTrigger
DNDModeConfigurationAppForegroundTrigger
DNDModeConfigurationLocationTrigger
bundleIdentifier
creationDate
latitude
longitude
radius
referenceFrame
identifier
detail
<%@: %p; triggers: %@>
com.apple.donotdisturb.server.SettingsManager
Failed to load settings
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSSettingsManager.m
Error saving settings
com.apple.donotdisturb.SettingsManager
interruption-behavior
%@ (%@)
behavior-settings
creation-date-local
creation-date-timestamp
start-time
%lu:%lu
end-time
bedtime-enabled
schedule-settings
cloud-enabled
local-enabled
sync-settings
<%@: %p; metadata: %@; data: %@>
<%@: %p; assertions: %@; invalidations: %@>
com.apple.developer.usernotifications.communication
<%@: %p>
<%@: %p; date: %@>
date
<%@: %p; clientIdentifiers: %@>
clientIdentifiers
<%@: %p; UUIDs: %@>
UUIDs
com.apple.donotdisturb.trigger.workout
com.apple.donotdisturb.private.workout-trigger
com.apple.nano
workoutDND
com.apple.donotdisturb.private.biome-workout.queue
WorkoutDNDStateChangedNotification
%@.%@
com.apple.donotdisturb.workoutTrigger
start
stop
resume
pause
unspecified
com.apple.donotdisturb.DNDSSyncEngineLastChanceDataStore.queue
com.donotdisturb.server.sync.legacy
com.donotdisturb.server.sync.legacy.workout
dndState
dndStateDate
dndCompanionAssertActive
dndGizmoAssertActive
com.donotdisturb.server.LegacyAssertionSyncManager
DNDStateChangedNotification
DNDAssertStateChangedNotification
B16@?0@"DNDSModeAssertionManagerUpdateContext"8
B16@?0@"DNDStateModeAssertionMetadata"8
com.apple.donotdisturb.sync.legacy.toggle-assertion
com.apple.donotdisturb.sync.legacy.mirror-assertion
com.apple.donotdisturb.mode.workout
com.apple.donotdisturb.server.ModeAssertionManager
Failed to load assertion database
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSModeAssertionManager.m
com.apple.private.dndtool
com.apple.donotdisturbd.nonPersistentAssertionTransaction
DNDSModeConfigurationsRecordData
DNDSModeConfigurationsRecordPartitionedData
DNDSModeConfigurationsRecordMainPartition
DNDSModeConfigurationsRecordSecondaryPartition
DNDSModeConfigurationsVersion
DNDSModeConfigurationsMinimumRequiredVersion
com.apple.donotdisturb.daemon_workloop
<%@: %p; metricsByDay: %@; lastDailyHeartbeat: %@; metricsByWeek: %@; lastWeeklyHeartbeat: %@; metricsByMonth: %@; lastMonthlyHeartbeat: %@>
metricsByDay
lastDailyHeartbeat
metricsByWeek
lastWeeklyHeartbeat
metricsByMonth
lastMonthlyHeartbeat
com.apple.donotdisturb.trigger.driving
com.apple.donotdisturb.private.driving-trigger
com.apple.donotdisturb.private.biome-driving.queue
dndEffectiveOverrides
dndPrivilegedSenderTypes
DNDEffectiveOverridesChangedNotification
DNDPrivilegedSenderChangedNotification
<%@: %p; type: %@; suppressionType: %@; minimumBreakthroughUrgency: %@; hideApplicationBadges: %@>
configurationType
suppressionType
hideApplicationBadges
v24@?0@"INIntentResponse"8@"INCExtensionError"16
v24@?0@"<INCExtensionProxy>"8@"NSError"16
<%@: %p; assertions: %@; invalidations: %@; invalidationRequests: %@>
lastReceivedStoreDate
lastSentStoreDate
pendingLastSentStoreDate
lastUpdateDate
deviceIdentifiers
@"DNDModeAssertion"16@?0@"DNDModeAssertion"8
@"DNDModeAssertionInvalidation"16@?0@"DNDModeAssertionInvalidation"8
@"DNDSModeAssertionInvalidationRequest"16@?0@"DNDSModeAssertionInvalidationRequest"8
@16@?0@"DNDModeAssertion"8
com.apple.donotdisturb.server.ModernAssertionSyncManager
com.apple.donotdisturb.pendingUpdate
Focus detected excessive change rate.
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSModernAssertionSyncManager.m
com.apple.donotdisturb.sync
forced 
@16@?0@"DNDSPairedDevice"8
v32@?0@"_DNDSSyncMessageGroup"8@"NSMutableArray"16^B24
Failed to load assertion sync metadata store
v24@?0@"NSString"8@"NSDate"16
Failed to write sync metadata
com.apple.donotdisturb.AssertionSync
device %@
last-received-dates
last-sent-dates
message %@
pending-messages
.private.schedule
sendDate: %@; deviceIdentifiers: %@
<%@: %p; lastReceivedStoreDate: %@; lastSentStoreDate: %@; pendingLastSentStoreDate: %@>
@"DNDSModeAssertionInvalidationRecord"16@?0@8
@"DNDSModeAssertionInvalidationRequestRecord"16@?0@8
@"NSDictionary"16@?0@"DNDSModeAssertionInvalidationRecord"8
@"NSDictionary"16@?0@"DNDSModeAssertionInvalidationRequestRecord"8
%@Local
B16@?0@8
NSString
Error writing migrated settings
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSLegacySettingsMigration.m
Error loading legacy settings
com.apple.donotdisturb.legacy-migration
legacy-toggle
Error writing migrated assertions
Error removing legacy settings
<%@: %p%@%@; deviceIdentifier: '%@'; deviceClass: %@; syncProtocolVersion: %lu; iOS14EraOS: %@; iCloudEnabled: %@; syncServiceType: %@; pairingIdentifier: %@; pairingDataStore: %@>
; deviceName: '%@'
; build: %@
com.apple.donotdisturb
phone
watch
local
cloud
<%@: %p; UUID: %@; date: %@; eventBehavior: %@; clientIdentifier: '%@'; outcome: %@; reason: %@>
<%@: %p; enabled: %@; manuallyEnabled: %@; numberOfSessions: %@; numberOfManualSessions: %@; enabledFromControlCenterPhone: %@; enabledFromControlCenterWatch: %@; enabledForOneHour: %@; enabledUntilEvening: %@; enabledUntilMorning: %@; enabledAtLocation: %@; enabledDuringEvent: %@; enabledDrivingMode: %@; enabledSleepMode: %@>
numOfSessions
numOfManualSessions
<%@: %p; %@; dayOfWeek: %@>
com.apple.donotdisturb.DNDSAuxiliaryStateMonitor.queue
calendar
date-interval
current-location
explicit-region
match-schedule
com.apple.donotdisturb.trigger.sleeping
com.apple.donotdisturb.private.sleeping-trigger
com.apple.donotdisturb.private.biome-sleeping.queue
com.apple.donotdisturb.sleepingTrigger
wind-down
bedtime
user-request
expected
cloud-synced
cloud-synced-user-request
nano-synced
turned-off-dnd
automation
cloud-synced-automation
other
appInfo
monitoredBundleIdentifiers
AppInfoMetadata.plist
com.apple.donotdisturb.server.AppInfoCache
com.apple.donotdisturb.iconcache
IconCache
https://itunes.apple.com/lookup
bundleId
country
entity
software,iPadSoftware,macSoftware
limit
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v16@?0@"DNDAppInfo"8
%@_%@.%@
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
results
trackName
artworkUrl100
kind
software
ipad-software
mac-software
v16@?0@"NSDictionary"8
com.apple.NanoStopwatch
APP_NAME_STOPWATCH
com.apple.NanoMenstrualCycles
APP_NAME_CYCLE_TRACKING
com.apple.watchmemojieditor
APP_NAME_MEMOJI
com.apple.NanoHeartRhythm
APP_NAME_ECG
com.apple.private.NanoTimer
APP_NAME_TIMER
com.apple.NanoOxygenSaturation.watchkitapp
APP_NAME_BLOOD_OXYGEN
com.apple.NanoAlarm
APP_NAME_ALARMS
com.apple.NanoTips
APP_NAME_TIPS
com.apple.NanoSleep.watchkitapp
APP_NAME_SLEEP
com.apple.Mind
APP_NAME_MINDFULNESS
com.apple.NanoNowPlaying
APP_NAME_NOW_PLAYING
com.apple.Noise
APP_NAME_NOISE
com.apple.NanoRemote
APP_NAME_REMOTE
com.apple.HeartRate
APP_NAME_HEART_RATE
com.apple.MobileStore
APP_NAME_ITUNES_STORE
com.apple.Health
APP_NAME_HEALTH
com.apple.Bridge
APP_NAME_WATCH
com.apple.Passbook
APP_NAME_WALLET
com.apple.camera
APP_NAME_CAMERA
com.apple.store.Jolly
APP_NAME_APPLE_STORE
com.apple.mobilephone
APP_NAME_PHONE
com.apple.donotdisturb.private.schedule
@"NSString"16@?0@"NSString"8
v32@?0@"NSString"8@"NSArray"16^B24
overrideType
overrideMode
effectiveIntervals
DNDSModeConfigurationsRecord
DNDSModeConfigurations
DNDSModeConfigurationsContactHistoryToken
Local configuration
Remote configuration
modeConfiguration
Writing updated configurations
Configuration
Writing configurations
bundle
@"DNDSClientDetails"16@?0@"NSString"8
AppleInternal
@"NSURL"16@?0@"NSString"8
ClientBundles
@16@?0@"NSURL"8
B16@?0@"NSURL"8
.preload.bundle
@"DNDSClientDetails"16@?0@"NSURL"8
ABCDEFGHIJKLMNOPQRSTUVWXYZ
0123456789
com.apple.donotdisturb.server.PairedDeviceStateMonitor
B16@?0@"DNDSPairedDevice"8
com.apple.donotdisturb.PairedDevice
protocol-version
icloud-enabled
name
build
paired-device
cloud-devices
<%@: %p; symbolImageName: %@; tintColorName: %@; name: %@; modeIdentifier: %@; semanticType: %zd; visibility: %lu; identifier: %@>
symbolImageName
tintColorName
modeIdentifier
semanticType
visibility
<%@: %p; modeConfigurations: %@>
modeConfigurations
com.donotdisturb.server.IdentityServicesSync
@16@?0@"IDSDevice"8
DNDSAllowUnredactedSysdiagnose
com.apple.donotdisturb.server.sysdiagnose
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
<%@: %p; senderConfiguration: %@; ; allowedApplications: %@; ; deniedApplications: %@; >
senderConfiguration
platforms
allowedApplications
deniedApplications
ServerGeneral
Resolver
ServiceProvider
AvailabilityProvider
StateProvider
AssertionManager
AssertionStore
IDSTransport
Schedule
AppForegroundTrigger
BiomeDonation
DrivingTrigger
MindfulnessTrigger
GamingTrigger
SleepingTrigger
SmartTrigger
WorkoutTrigger
Settings
AuxiliaryState
SystemState
MeDeviceService
LegacyAssertionSync
LegacySettingsSync
ModernAssertionSync
PairedDeviceState
DateIntervalLifetimeMonitor
LocationLifetimeMonitor
CalendarEventLifetimeMonitor
ScheduleLifetimeMonitor
DefaultLifetimeMonitor
DataMigrator
Sysdiagnose
Metrics
Keybag
CloudSync
ModeConfigurations
GlobalConfiguration
IDSSyncEngine
startComponents
endComponents
repeatInterval
disableCloudSync
mirrorDNDState
<%@: %p; pairSyncEnabled: %@; cloudSyncEnabled: %@>
<%@: %p; assertions: %@; activeAssertionUUIDs: %@; activeDateIntervalByAssertionUUID: %@; interruptionBehaviorSetting: %@; lostModeState: %@; lastUpdate: %@>
syncDates
initialSyncs
pairedDeviceIdentifier
recordID
overrideStatus
overrideStatusLastCalculatedTime
overrides
privilegedSenderTypes
privilegedAddressBookGroupRecordID
effectiveWhileUnlocked
user-action
system-state
lifetime-expired
client-ended
client-replaced
server-unresponsive
client-unresponsive
location-lifetime-expired
@"DNDSModeAssertionRecord"16@?0@"DNDModeAssertion"8
@"DNDSModeAssertionInvalidationRecord"16@?0@"DNDModeAssertionInvalidation"8
@"DNDSModeAssertionInvalidationRequestRecord"16@?0@"DNDSModeAssertionInvalidationRequest"8
@"DNDModeAssertion"16@?0@"DNDSModeAssertionRecord"8
@"DNDModeAssertionInvalidation"16@?0@"DNDSModeAssertionInvalidationRecord"8
@"DNDSModeAssertionInvalidationRequest"16@?0@"DNDSModeAssertionInvalidationRequestRecord"8
@"NSUUID"16@?0@"NSString"8
com.apple.donotdisturb.trigger.mindfulness
com.apple.donotdisturb.private.mindfulness-trigger
com.apple.donotdisturb.private.biome-mindfulness.queue
com.apple.donotdisturb.mindfulnessTrigger
breathe
reflect
meditation
DNDClientDetails
DNDEventBehaviorResolutionServiceOptions
DNDEventBehaviorResolutionContextDeviceUILocked
DNDModeAssertionServiceOptions
DNDAssertionsPersist
DNDClientIdentifier
DNDSyncSuppressed
DNDiOS14SyncSuppressed
DNDUserInteractive
disableModeConfigurationsSync
disableSync
dndCompanionCloudSyncDisabled
MirrorDNDStateChangedNotification
DNDCompanionCloudSyncDisabledChangedNotification
v32@?0@"NSString"8@"DNDModeConfiguration"16^B24
B16@?0@"DNDModeConfigurationTrigger"8
UUID IN %@
source.clientIdentifier IN %@
source.deviceIdentifier == %@
NOT (details.modeIdentifier IN %@)
B24@?0@"DNDModeAssertion"8@"NSDictionary"16
startDate < %@
<%@: %p; behaviorSettings: %@; phoneCallBypassSettings: %@; scheduleSettings: %@; configurations: %@>
behaviorSettings
phoneCallBypassSettings
scheduleSettings
configurations
com.apple.donotdisturb.siri.assistant
com.apple.donotdisturb.preferences
com.apple.siri.Settings
com.apple.springboard.donotdisturb.hid
com.apple.DoNotDisturb.Intents
com.apple.private.dndtool.user-requested
com.apple.carkitd.assertion-service
com.apple.private.Carousel.school-mode.DND.state
com.apple.donotdisturb.private.gaming-trigger
com.apple.HealthDaemon.assertion-service
com.apple.sleep.sleep-mode
com.apple.sleep.sleep-mode-legacy
com.apple.mobiletimer.bedtime-mode
com.apple.donotdisturb.private.smart-trigger
Available
Source
Reason
SemanticType
ExtensionCount
BundleID
InterruptionSuppression
Count
com.apple.alarm
com.apple.notifyd.matching
com.apple.donotdisturb.%@
v16@?0@"NSObject<OS_xpc_object>"8
Date
UserVisible
<%@: %p; allowedContactTypes: %@; ; deniedContactTypes: %@; ; allowedContactGroups: %@; ; deniedContactGroups: %@; ; allowedContacts: %@; ; deniedContacts: %@; ; phoneCallBypassSettings: %@; >
allowedContactTypes
deniedContactTypes
allowedContactGroups
deniedContactGroups
allowedContacts
deniedContacts
zone
<%@: %p; identifier: %@; zone: %@>
<%@: %p; contactIdentifier: %@; firstName: '%@'; middleName: %@; lastName: %@; nickName: %@; organizationName: %@; phoneNumbers: %@; emailAddresses: %@>
phoneNumbers
contactIdentifier
firstName
middleName
lastName
nickName
organizationName
emailAddresses
value
Record
secureModeConfigurations
com.apple.donotdisturbd
com.apple.aps.donotdisturb.sync-engine
com.donotdisturb.server.DNDSSyncEngine.account-update
com.apple.donotdisturb.DNDSSyncEngine
allowSyncEngineCreation
accountAvailable
featureEnabled
supportedDevice
syncEnabled
testing
available
unavailable
v28@?0@"NSString"8B16@"NSError"20
v24@?0q8@"NSError"16
v24@?0@"CKRecordID"8@"NSError"16
v24@?0@"CKAccountInfo"8@"NSError"16
LocalModeConfigurations.json
LocalModeConfigurationsSecure.json
LocalGlobalConfiguration.json
SyncedGlobalConfiguration.json
allowed
suppressed
deleted
<%@: %p; recordID: %@; lastModified: %@; deleted: %s>
com.apple.donotdisturb.trigger.gaming
com.apple.donotdisturb.private.biome-gaming.queue
com.apple.donotdisturb.gamingTrigger
com.apple.donotdisturb.service.launching
com.apple.donotdisturb.service.non-launching
v24@?0@"DNDSClientConnectionDetails"8@"BSServiceConnection<BSServiceConnectionContext>"16
B16@?0@"NSString"8
@"DNDSClientConnectionDetails"16@?0@"DNDSClientConnectionDetails"8
Mode assertion not found for assertion UUID.
com.apple.private.donotdisturb.behavior.resolution.client-identifiers
com.apple.private.donotdisturb.mode.assertion.client-identifiers
com.apple.private.donotdisturb.state.request.client-identifiers
com.apple.private.donotdisturb.state.updates.client-identifiers
com.apple.private.donotdisturb.auxiliary-state.modification.client-identifiers
com.apple.private.donotdisturb.settings.request.client-identifiers
com.apple.private.donotdisturb.settings.modify.client-identifiers
com.apple.private.donotdisturb.settings.updates.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.request.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.modify.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.updates.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.availability.client-identifiers
com.apple.private.donotdisturb.medevicestate.client-identifiers
com.apple.FocusSettings
com.apple.private.donotdisturb.mode.assertion.user-requested.client-identifiers
B24@?0@8@"NSDictionary"16
assertion.source.clientIdentifier IN %@
DNDSGlobalConfigurationRecord
DNDSGlobalConfigurationRecordData
DNDSGlobalConfigurationRecordEncryptedData
DNDSGlobalConfigurationVersion
DNDSGlobalConfigurationMinimumRequiredVersion
DNDSGlobalConfiguration
prevent
allow
[AUTO GENERATED] [%@/%@] %@ (%@:%lu%@)
 -- %@:%lu
Please describe what you were doing:
--- Do not edit below this line ---
Error: %@
Original title: %@
%%0A
tap-to-radar://new?ComponentID=960036&ComponentName=Do%%20Not%%20Disturb%%20(iOS)&ComponentVersion=New%%20Bugs&Title=%@&Description=%@
[Intenal] File a Radar (DND)
Do Not Disturb has encoutered an unexpected state. Please file a Radar to help us diagnose this issue!
Yes, I'll help!
/System/Library/Frameworks/CoreServices.framework/CoreServices
### Failed to Soft Linked: /System/Library/Frameworks/CoreServices.framework/CoreServices
LSApplicationWorkspace
dnd.keybag.observers
dnd.keybag
com.apple.private.alloy.donotdisturb
com.apple.private.alloy.status.personal
com.donotdisturb.server.Server
SignificantTimeChangeNotification
No mode configuration found for mode identifier.
@16@?0@"DNDMode"8
B16@?0@"DNDMode"8
v16@?0@"<DNDSAssertionSyncManager>"8
v16@?0q8
Migrated default mode
v32@?0@"DNDMode"8Q16^B24
@16@?0@"DNDModeConfigurationTrigger"8
B16@?0@"NSUUID"8
isPlaceholder == NO
NONE %@.modeIdentifier == modeIdentifier
isPlaceholder == YES
ANY %@.modeIdentifier == modeIdentifier
com.apple.donotdisturb.trigger.smart
com.apple.donotdisturb.private.biome-inferred-mode.queue
com.apple.donotdisturb.smartTrigger
eventBody.isAutomationEnabled
com.apple.donotdisturb.GlobalConfigurationManager
globalConfiguration
Error saving configuration
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSGlobalConfigurationManager.m
IDS sync engine is disabled because of feature flag
IDS sync engine is disabled because of unsupported device
IDS sync engine is available
Ignoring records as the sync engine is disabled: %{public}llu
IDS sync engine paired device has changed Tinker state to %{public}s
IDS sync engine changed to %{public}s
Ignoring paired device/enabled change as the sync engine is not available: %{public}llu
Paired device changed from %{public}@ to %{public}@
Ignoring incoming message as the sync engine is disabled: %{public}llu
Rejecting incoming message as the sync engine is disabled: %{public}llu
Rejecting incoming message as it is not from the active device: deviceIdentifier=%{public}@, pairedDevice=%{public}@
*** PLEASE UPDATE DEVICES *** Rejecting incoming message as the version number is not supported by this sync protocol: versionNumber=%{public}lu, currentVersionNumber=%{public}lu
Ignoring message send callback as the sync engine is disabled: %{public}llu
Error in didSendWithRequestIdentifier sending record modifications: %{public}@
Removed %{public}llu inflight records; %{public}llu remaining
%{public}llu outstanding request identifiers
Sync because keybag is unlocked
Metadata store is invalid; purging
Will not sync because keybag is locked
Will not sync because sync is inactive
Will not sync because pairedDeviceIdentifier is nil
Performing sync for all data sources
Will not send ack because keybag is locked
Will not send ack because sync is inactive
Will not send ack because action is nil
Sending ack for action %{public}@ with %{public}llu record metadata items
Sent %{public}llu record metadata items in ack
Error sending metadata ack: %{public}@
Will not send unlock message because keybag is locked
Will not send unlock message because sync is inactive
Sent unlock message
Failed to send unlock message: %{public}@
Will not send resync message because sync is inactive
Sent resync message
Failed to send resync message: %{public}@
Will not send records because keybag is locked
Will not send records because sync is inactive
Will not send records because pairedDeviceIdentifier is nil
Sending %{public}llu modified records and %{publi}llu deleted record IDs
Paired device has synced before; sending as update
Paired device has never synced; sending as replace
Metadata for modified record with ID %{public}@ is already syncing
Modified record could not be serialized: %@
Metadata for deleted record with ID %{public}@ is already syncing
Deleted record metadata could not be serialized: %@
Update message is empty; will not send
Syncing %{public}llu modifications and %{public}llu deletions
Added %{public}llu inflight records; %{public}llu remaining
Sent %{public}llu modified record IDs and %{publi}llu deleted record IDs
Error in sendMessage sending record modifications: %{public}@
Exhausted retry attempts; will not try again
Will not set retry timer because keybag is locked
Will not set retry timer because sync is inactive
Retry timer will fire in %llus
Retry timer fired (attempt #%{public}llu)
Resetting retry timer
Cancelling retry timer
No inflight metadata; will not start expiration timer
Will not set expiration timer because keybag is locked
Will not set expiration retry timer because sync is inactive
Expiration timer will fire in %llus
Expiration timer fired
Cancelling expiration timer
Will not handle message because sync is inactive
Unknown action %{public}@
Received resync message
Received ack message for action %{public}@
Paired device has performed an initial sync
Received unlock message
Received update message
Ignoring update from paired device that we have never synced with
Sending modified record %{private}@ to data source %{public}@
Incoming modified record %{private}@ has an older lastModified date than the existing record
Sending deleted recordID %{private}@ to data source %{public}@
Incoming deleted metadata %{private}@ has an older lastModified date than the existing metadata
Received replace message
Paired device should never send a replace message
Metadata store is invalid; purging and syncing
Unexpected version number %{public}llu (maximum version number %{public}llu)
Updated assertions for app launch triggers: configuration=%@
Don't have trigger for identifier '%@'. Invalidating...
Refreshing with event %@
Adding biome app launch event monitor for %{public}@
AppLaunch subscription completed: state=%ld error=%{public}@
Received app launch event: bundleID=%{public}@ starting=%{public}@ event=%{public}@
reset coalescing timer due to bundleID change; updated assertions for app launch event: event=%{public}@
coalescing timer fired; updated assertions for app launch event: event=%{public}@
Resolving breakthrough for active mode: %{public}@.
Couldn't find mode configuration for active mode: %{public}@.
Event was resolved: resolution=%@
Pruned %lu resolutions from record
Resolution modified to accomodate auxiliary state; isScreenMirrored=%d isScreenShared=%d isPresentationModeEnabled=%d
Breakthrough %{public}@ allowed for configuration %@ with event details: %@.
Breakthrough %{public}@ allowed for global settings with event details: %@.
Got bypass settings: settings=%{public}@
Checked if event source is a favorite: source=%{public}@, favorite=%{BOOL}d
Error looking up favorite contacts: error=%{public}@
Checked if event source is a contact: source=%{public}@, contact=%{BOOL}d
Error looking up contacts: error=%{public}@
Checked if event source is a group contact: source=%{public}@, contact=%{BOOL}d
Error looking up group contacts: error=%{public}@
Checked if event source is a repeat: source=%{public}@, repeat=%{BOOL}d
Checked if event source is an emergency contact: source=%{public}@, emergencyContact=%{BOOL}d
Error looking up emergency contacts: error=%{public}@
Filled out missing contact identifier: %{public}@ from sender: %@ to determine breakthrough.
Updated contact identifier to %{public}@ from sender: %@ to determine breakthrough.
No change to contact identifier from sender: %@ to determine breakthrough.
Resolving breakthrough through for configuration: %@ with event details application: %{public}@, sender: %@, urgency: %{public}@, eventType: %{public}@, threadIdentifier: %{public}@
Resolving global breakthrough for sender: %@
Failed to lookup contact in address book. predicate=%{public}@, error=%{public}@
Determined whether sharing / mirroring preferences should adjust event behavior; shouldAdjust=%d
XPC connection successfully accepted: connection=%{public}@
Mapping watchOS bundle %@ to iOS counterpart bundle %@.
[%{public}@] Error determining Focus Status; will report YES for available: error=%{public}@ connection=%{public}@
[%{public}@] Determinined Focus Status: available=%{public}@ connection=%{public}@
[%{public}@] XPC connection without User Notifications authorization tried to get Focus Status, will invalidate: connection=%{public}@
[%{public}@] XPC connection without sharing authorization tried to get Focus Status, will invalidate: connection=%{public}@
[%{public}@] XPC connection without Communication Notifications entitlement tried to get Focus Status, will invalidate: connection=%{public}@
Client XPC connection was interrupted: connection=%{public}@
Client XPC connection was invalidated: connection=%{public}@
Contacts store changed
Fetched %{public}lld contacts
Unable to fetch contact change history: %{public}@
Collected %{public}lld changed contacts and %{public}lld
History contains %{public}lld events
Unable to fetch contact change history
count: %{public}@
Refreshing monitor, date=%{public}@
Unable to find matching event for synced assertion; eventIdentifier=%{public}@; assertionIdentifier=%{public}@
No date interval for event; eventIdentifier=%{public}@
Pending date interval for event; eventIdentifier=%{public}@
Active date interval for event; eventIdentifier=%{public}@
Expired date interval for event; eventIdentifier=%{public}@
Invalidating existing timer; fireDate=%{public}@
Scheduling timer; nextUpdateDate=%{public}@
Requested access to events, granted=%{BOOL}d error=%{public}@
Refreshing monitor
Skipping availability coordination because User Availability is disabled.
Ignoring request to coordinate user availability; from and to configurations are the same.
Error publishing availability to StatusKit: %{public}@
Published status request with identifier: %{public}@
Ignoring request to publish StatusKit availability; from and to configurations are the same.
Checking if intent extensions need availability update
update.previousState: %{public}@
update.state: %{public}@
Notifying intent extensions of availability update
Found intent extension for app: %{public}@
Intent launcher error: %{public}@
Skipping Intent launch of %@ because relative availability did not change.
App (%{public}@) does not have user availability TCC permission, not launching extension.
App (%{public}@) does not have UN Communication entitlement, not launching extension.
App (%{public}@) does not have UN authorization, not launching extension.
Done dispatching launch blocks to _launchQueue
Error getting allowedModesForContactHandle: %@
Error publishing AKAvailabilityInvitation: %@
Successfully published AKAvailabilityInvitation
Skipping availability re-publish because no mode is enabled.
Skipping availability re-publish because User Availability is disabled.
Skipping availability re-publish because there were no changes to allowed contacts.
Skipping availability check because User Availability is disabled.
Looking up User Availability permission for bundleId: %{public}@
Empty bundleId passed to isTCCUserAvailabilityGrantedForBundleId
Skipping allowed modes check because User Availability is disabled.
Skipping availability check for contact because User Availability is disabled.
Messages does not have user availability TCC permission.
Error getting mode configuration for %{private}@
Unexpected empty identifier UUID or nil mode for modeIdentifier, modeIdentifier=%{private}@
.impactsAvailability is disabled for %{private}@
Forced focus status update indicating not focused due to TCC revocation
Informing availability (%{public}@) for activity %{public}@ to StatusKit
Skipping publish because User Availability is disabled.
Could not fetch a contact for contact: %@
Scoring %{public}llu matches for contact %@
Contact %@ scored %{public}llu
New high score: %{public}llu
Contact %@ has the high score %{public}llu
Explicit region monitoring failed for region; manager=%p, region=%@, error=%{public}@
Explicit region region state was determined; manager=%p, state=%{public}@, region=%@
Confirmed explicit region entry; region=%@
Confirmed explicit region entry, not taking assertion until explicit exit following early invalidation of the assertion associated with prior entry; region=%@
Confirmed explicit region exit for a region pending exit following early invalidation of the assertion associated with prior entry, will note exit; region=%@
Confirmed explicit region exit, will invalidate all assertions; region=%@
Received unexpected explicit region exit, region=%@
Did not handle explicit region state %{public}@; region=%@
Explicit region monitoring encountered a failure; manager=%p, error=%{public}@
Refreshing explicit region monitor
Assertion(s) for region(s) invalidated without exit from region(s); regions=%{public}@
Start monitoring for region; region=%@
Stop monitoring for region; region=%@
Monitoring stopped for an entered region, associated assertion will be invalidated and entrance reset; region=%@
Monitoring stopped for an entered region pending exit following early invalidation of the assertion associated with prior entry, entrance will be reset; region=%@
Failed to load current explicit region database, will request a radar; error=%{public}@
Found existing entered regions for invalidated assertions pending exit.
Wrote out explicit region store to file
Failed to write explicit region store, but error can be ignored; error=%{public}@
Failed to write explicit region store, will request radar; error=%{public}@
Until I leave location monitoring failed for region, will stop monitor and invalidate all assertions; manager=%p, region=%@, error=%{public}@
Until I leave location region state was determined; manager=%p, state=%{public}@, region=%@
Confirmed until I leave region entry
Confirmed until I leave region exit, will invalidate all assertions
Received unexpected until I leave region exit, will start region monitoring again
Did not handle until I leave region state %{public}@
Until I leave location monitoring found location, will update geofence; manager=%p, locations=%@
Until I leave location monitoring failed, will stop monitor and invalidate all assertions; manager=%p, error=%{public}@
Refreshing until I leave monitor
Requesting current location to begin monitoring until I leave
Until I leave location monitoring stopping for geofence; region=%@
Until I leave location monitoring started for geofence; region=%@
Failed to load current until I leave region database, will request a radar; error=%{public}@
Found existing until I leave region to begin monitoring
Wrote out until I leave store to file
Failed to write until I leave store, but error can be ignored; error=%{public}@
Failed to write until I leave store, will request radar; error=%{public}@
generating fuzzable %@ - %@ ms
com.apple.donotdisturb.ModeAssertionManagerUpdateContext.takeAssertion
Inserted new assertion into store; assertion=%{public}@
Inserted new invalidation request into store; invalidationRequest=%{public}@
Assertion was already invalidated; assertion=%{public}@
Assertion already exists in store; assertion=%{public}@
Found %lu assertion(s) for predicate: predicate=%{public}@
Found %lu assertion invalidation(s) for predicate: predicate=%{public}@
com.apple.donotdisturb.ModeAssertionManagerUpdateContext.invalidateAssertions
Inserted new invalidation request into store; request=%{public}@
Assertion preserved; assertion=%{public}@
Assertion invalidated; invalidation=%{public}@, invalidationRequest=%{public}@
Assertion already invalidated, skipping work; invalidation=%{public}@, invalidationRequest=%{public}@
[%{public}@] Begin: %{public}@
[%{public}@] %{public}@
[%{public}@] created: %{public}@; lastModified: %{public}@; isAutomaticallyGenerated: %{public}d; hasSecureData: %{public}d; 
[%{public}@] triggers: %{private}@
[%{public}@] configuration: %{private}@
[%{public}@] End
Failed to decode system fields for record %{public}@: %{public}@
Failed to delete metadata store: %@
Detected outdated metadata store with version %{public}llu
Failed to write metadata store: %{public}@
Sending assertion taken event
Updating aggregated metrics
Sending daily metrics heartbeat
Sending weekly metrics heartbeat
Sending monthly metrics heartbeat
Metrics Wrote out store to file
Metrics Failed to write store, but error can be ignored; error=%{public}@
Metrics Failed to write store, will request radar; error=%{public}@
Skipping inactive lifetime, lifetime=%{public}@
Informed of reachability change to %@
Informing delegates of debounced reachability state: %@
Debounced reachability state (%@) did not change. Ignoring.
Cannot store mode configuration as new configuration contains secure data and store is not writeable
Cannot replace mode configuration as existing configuration has secure data and store is not writeable
Secure data will not be written
Secure data will be written
Setting mode configuration with placeholder visibility effectively removing mode configuration for system Focus by demoting to placeholder; modeIdentifier=%{public}@
Removing mode configuration for default Focus is not supported; modeIdentifier=%{public}@
Removing mode configuration for custom Focus; modeIdentifier=%{public}@
Removing mode configuration for system Focus by demoting to placeholder; modeIdentifier=%{public}@
Failed to load configurations, will request a radar; error=%{public}@
Failed to load configurations but device is under first lock; error=%{public}@
Keybag unlocked for the first time; fixing up mode sender configurations if needed.
Failed to save configurations, but error can be ignored; error=%{public}@
Failed to save configurations, will request a radar; error=%{public}@
Failed to save configurations but device is under first lock; error=%{public}@
Failed to read record to fix up configurations; error=%{public}@
Fixing up mode with sender configuration: %{public}@ to new sender configuration: %{public}@
Fixing up driving mode with secureConfiguration: %{public}@ to new secureConfiguration: %{public}@
Failed to write record to fix up configurations though it was needed; error=%{public}@
Deferring mode sender configuration fixup until keybag unlocked for the first time.
Sanitizing contact %{public}@ failed: error=%{public}@
Calculate DND state for snapshot: activeAssertionUUIDs=%{public}@
assertion for snapshot: assertion=%{public}@
Current DND state was calculated: state=%{public}@
Failed to load placeholder modes, will request a radar; error=%{public}@
Main partition data is nil in record data %{public}@
Secondary partition data is nil in record data %{public}@
Failed to decode main partition data %{public}@: %{public}@
Failed to decode
secondary partition data %{public}@: %{public}@
Record %{public}@ is not valid JSON
Configuration: %{private}@
Dictionary: %{private}@
Partition: %{private}@
received notification that 'Me Device' status changed fetching devices
received notification that 'Me Device' devices changed fetching devices
determining current 'Me Device' status is not supported
failed to load current 'Me Device' database, will request a radar; error=%{public}@
current 'Me Device' state unknown / incomplete; requesting active device
current 'Me Device' state loaded from store; meDeviceStatus=%{public}@, meDeviceName=%{public}@
wrote out 'Me Device' store to file
failed to write 'Me Device' store, but error can be ignored; error=%{public}@
failed to write 'Me Device' store, will request radar; error=%{public}@
Failed to load settings, will request a radar; error=%{public}@
Saved settings; settingsRecord=%{public}@
Failed to save settings, but error can be ignored; error=%{public}@
Failed to save settings, will request a radar; settingsRecord=%{public}@, error=%{public}@
Refresh workout trigger for system: mode=%{public}@
Invalidating active assertion no mode identifer for workout trigger; previousModeID=%{public}@
Updating active assertion to new mode identifer for workout trigger; modeID=%{public}@ previousModeID=%{public}@
Acquiring assertion for workout trigger in response to event; modeID=%{public}@
Invalidating active assertion workout trigger in response to event; previousModeID=%{public}@
Invalidating active assertion no mode identifer for workout trigger in response to event; previousModeID=%{public}@
Adding biome workout event monitor; mode=%{public}@
Workout subscription completed: state=%ld error=%{public}@
Received workout event: eventType=%{public}@
Updated assertions for workout event: event=%{public}@
Create mode for workout trigger to match existing nano preferences setting.
Created mode for workout trigger: mode=%{public}@
Create mode for workout trigger in response to nano preference update.
Update workout trigger for mode in response to nano preference update: enabled=%{public}@ mode=%{public}@
Refreshed workout trigger for nano preferences update: mode=%{public}@
Workout trigger already matches nano preferences update: mode=%{public}@
Disable workout DND preference for workout trigger mode deletion.
Disable workout DND preference to match disabled workout trigger.
Enable workout DND preference to match enabled workout trigger.
Requesting workout trigger refresh due to nano preferences change
Failed to delete last chance store: %@
Failed to write last chance store: %@
Failed to serialize last chance store: %@
Cleaning up state
Update toggle sync: companionUpdateDate=%{public}@, gizmoUpdateDate=%{public}@, reason=%{public}@
Gizmo date was not valid, will reset to distantPast
Gizmo date is bogus, will reset to distantPast: gizmoUpdateDate=%{public}@
Gizmo date is in the future, will reset to now: gizmoUpdateDate=%{public}@
Will update toggle sync state to reflect current companion state, companionToggleDNDActive=%{BOOL}d, gizmoDNDActive=%{BOOL}d, reason=%{public}@
Ignoring update to toggle for reason %{public}@ as it was not user initiated
Gizmo has toggled DND, will mirror locally: gizmoDNDActive=%{BOOL}d
Gizmo has invalidated its DND assertion, will mirror locally
Did not update local state as it was not required
Companion assertion active changed, will update gizmo: value=%{BOOL}d
Gizmo has taken a DND assertion, will mirror locally
NPS has sent notification, name=%{public}@
Unable to find assertions, will return default: error=%{public}@
Unable to find assertion invalidations, will return default: error=%{public}@
com.apple.donotdisturb.ModeAssertionManager.updateModeAssertions
Executed handler; return=%{BOOL}d
Failed to load assertion database, will request a radar; error=%{public}@
Removing stale invalidations from store. %@
Removing stale invalidation requests from store. %@
Wrote out store to file
Failed to write store, but error can be ignored; error=%{public}@
Failed to write store, will request radar; error=%{public}@
No action taken for request to refresh driving trigger; automatic entry not supported
Error decoding behavior overrides: error=%{public}@
Ignoring schedule settings with no override
Error encoding behavior overrides
Got new schedule settings: settings=%{public}@, oldSettings=%{public}@
Got new schedule settings: settings=%{public}@
Got new bypass settings: settings=%{public}@, oldSettings=%{public}@
Got new bypass settings: settings=%{public}@
INCExtensionConnection timeout!! %{public}@
INCExtensionConnection interrupted!! %{public}@
INCExtensionConnection resumeWithCompletionHandler error!! %{public}@
INCExtensionConnection proxy handle error!! %{public}@
Sending forced update to local paired device on resume.
Skipping initial state sync on resume because there isn't a paired device.
Sending update to cloud devices on resume.
Skipping update as it should not require sync: result=%{public}@
Delaying sync of fuzzable change by %@ seconds.
Delaying sync for %@ seconds to coalesce update.
Coalescing timer has delayed sync for %@ seconds. This may indicate a rogue trigger.
Skipping sync due to server bag override.
Rejecting message because cloud sync is disabled.
Rejecting incoming message with unhandled messageType: %@
*** PLEASE UPDATE DEVICES *** Rejecting incoming message as the version number is not supported by this sync protocol: versionNumber=%lu, currentVersionNumber=%lu
Received message from sync service; syncService=%p, message=%{public}@, versionNumber=%lu, deviceIdentifier=%{public}@
Sent message from sync service; syncService=%p, requestIdentifier=%{public}@, success=%@, error=%{public}@
Unable to find paired device for device identifier %{public}@
Received impossible version number: versionNumber=%lu, currentVersionNumber=%lu
Received store from %{public}@ is older (%{public}@) than the last received store (%{public}@).
%lu assertion(s) were abandoned by the remote device, will invalidate: UUIDs=%{public}@
Incoming store from %{public}@ was older (%{public}@) than the store it replaced (%{public}@). Will re-send...
Error decoding the assertion store from sync message
Sending %{public}@update to devices: %@
Generating message for sync to %@: %@
Skipping sending store to %@ as it is the same as the previous (%{public}@)
Syncing on %{public}@ version %@: %@
Error sending %{public}@ assertions to %@: error=%{public}@
Sending %{public}@ assertions pending with identifier %{public}@
Unable to generate store message for %@
Got send results from unrecognized identifier %{public}@. success: %@, error: %{public}@
Send request %{public}@ failed with error %{public}@. Recipients: %{public}@
Bumping lastUpdateDate for %{public}@ from %{public}@ to %@
Leaving lastUpdateDate unchanged for %{public}@ (%{public}@). Got %{public}@ and already have %@{public}
Rewinding lastUpdateDate for %{public}@ (%{public}@). Got %{public}@ but already have %@{public}
Failed to load load assertion sync metadata store, will request a radar; error=%{public}@
Creating new assertion sync metadata store.
Retiring device(s) from last seen metadata: %@
Retiring device(s) from last sent metadata: %@
Retiring pending message(s) from metadata: %@
Wrote out assertion sync metadata store.
Failed to write assertion sync metadata store, but error can be ignored; error=%{public}@
Failed to write assertion sync metadata store, will request radar; error=%{public}@
Successfully wrote migrated settings
Error writing migrated settings, but error can be ignored; error=%{public}@
Error writing migrated settings, will request radar: error=%{public}@
Error loading legacy settings, will request radar: error=%{public}@
Error loading legacy settings but there was no error. Will ignore.
Legacy override status present with no pre-existing assertion store, will create
Successfully wrote migrated assertions
Error writing migrated assertions, will request radar: error=%{public}@
Legacy override status' effective time is in the future. Ignoring...
Successfully removed legacy settings
Error removing legacy settings, will request radar: error=%{public}@
Could not sanitize contacts; will use existing data this time: %{public}@
Fetched %{public}lld sanitizated contacts
Unable to fetch sanitized contacts: %{public}@
Ignoring request to donate for state update; from and to mode are the same.
Biome event(s) donated for mode end: reason=%{public}@ source=%{public}@ from=%{public}@
Biome event(s) donated for mode begin: reason=%{public}@ source=%{public}@ to=%{public}@
Updated assertions for sleeping trigger: mode=%{public}@
No action taken for request to refresh sleeping trigger; automatic entry not supported
Invalidating active assertion no mode identifer for sleeping trigger; previousModeID=%{public}@
Updating active assertion to new mode identifer for sleeping trigger; modeID=%{public}@ previousModeID=%{public}@
Ignoring event: reason=%{public}@ state=%{public}@ expectedEnd=%{public}@
Existing assertions found for sleeping trigger manager and activity manager; modeID=%{public}@ assertion=%{public}@ userAssertion=%{public}@
Invalidating user assertion(s) for mode in response to event; modeID=%{public}@ lifetime=%{public}@
Acquiring assertion for sleeping trigger in response to event; modeID=%{public}@ lifetime=%{public}@
Invalidating active assertion for sleeping trigger in response to event; previousModeID=%{public}@ assertion=%{public}@
Invalidating active user assertion for associated mode in response to event; previousModeID=%{public}@ assertion=%{public}@
Invalidating assertion(s) for mode in response to event; modeID=%{public}@
Invalidating active assertion no mode identifer for sleeping trigger in response to event; previousModeID=%{public}@
Adding biome sleeping event monitor; mode=%{public}@
Sleeping subscription completed: state=%ld error=%{public}@
Received sleeping event: reason=%{public}@ state=%{public}@ expectedEnd=%{public}@ timestamp:%f
Processed sleeping event: reason=%{public}@ state=%{public}@ expectedEnd=%{public}@
App was installed
App was removed
Will not write cache as keybag is locked
Could not create icon cache directory: %{public}@
Failed to serialize metadata store: %{public}@
Will not read cache as keybag is locked
Will not fetch app info as keybag is locked
Could not copy icon for %{private}@ to %{private}@: %{public}@
App lookup of %{private}@ from store failed: %{public}@
Unable to parse store response, bundle identifier is missing: %{public}@
Unable to parse store response, display name is missing: %{public}@
Got app %{private}@ details from the store: %{private}@
Cleaned up %{private}@
Failed to removed cached icon at %{private}@: %{public}@
Monitoring bundle identifiers: %{public}@
Relevant bundle identifiers: %{public}@
Updated assertions for schedule: settings=%{public}@
Unable to update assertions for schedule: error=%{public}@, settings=%{public}@
Existing schedule assertion does not need to change: settings=%{public}@
Backing store was purged
Fetched record with ID: %{public}@
Fetched data with ID %{public}@ is current; applying update
Fetched data with ID %{public}@ is outdated; ignoring update and resending local data
Fetched data with ID %{public}@ could not be reconstructed into a configuration; ignoring update
Failed to delete record %{public}@: %{public}@
Encountered conflict while saving configuration: %{public}@
Resolved conflict records with ID %{public}@; using remote data
Could not resolve conflict as remote configuration is corrupt; keeping local data with ID %{public}@
Resolved conflict between records with ID %{public}@; using local data
Preparing to save record %{public}@
Server removed record %{public}@
Removing all records because zone was deleted
Fetched %{public}llu record IDs for the sync engine
Preparing to save record for IDS sync engine: %{public}@
Fetched record from IDS sync engine with ID: %{public}@
IDS sync engine removed record %{public}@
Purging data for IDS sync engine
Replacing records with default mode configuration
Error deleting records: %{public}@
Could not read current configuration for monitored contacts: %{public}@
Received updated identifierless contacts: %{private}@
Detected matching contact in configuration: %{public}@
Did not encounter any matching configurations
Received updated contacts: %{private}@
Received deleted contact identifiers: %{private}@
Failed to fetch existing configurations: %{public}@
Failed to remove record %{public}@: %{public}@
Writing updated configuration with identifier: %{public}@
Error writing fetched configurations: %{public}@
Merge diff modified: %{public}@
Merge diff deleted: %{public}@
Error writing record: %{public}@
Purging record IDs: %{public}@
Error purging record IDs: %{public}@
Purging data
Could not read records to extract mode identifiers: %{public}@
Fetched %{public}llu mode identifiers
Fetched %{public}llu record IDs for the IDS sync engine
Notifying delegate of available modes: %{public}@
Unexpected macOS version: %@.%@
Unable to find device with ID %@. Devices: %@
Paired device state changed: from=%{public}@, to=%{public}@
Paired device did not change: current=%{public}@
Device class or sync protocol was invalid: device=%{public}@
Ignoring paired device on cloud channel. %@
Device class was invalid: device=%{public}@
Device protocol version was invalid: device=%{public}@
No change in cloud devices.
Cloud devices initalized. Devices: %@
Cloud devices added: %@. Removed: %@
No change in cloud devices.
Paired device state updated, will check for pairing change
Nearby devices changed, devices=%{public}@
Devices changed, devices=%{public}@
com.apple.donotdisturb.DNDSIDSSyncService.incomingMessage
Unable to find IDS device for fromID %@
Received sync data: service=%{public}@, account=%{public}@, identifier=%{public}@, message=%{public}@, deviceIdentifier=%@, context=%{public}@
Unable to resolve the device identifier from the IDS ID
Sync data send has finished: identifier=%{public}@, success=%{BOOL}d, error=%{public}@
Send sync data: identifier=%{public}@; Destinations: %@
Failed to send sync data: identifier=%{public}@, error=%{public}@
Unable to find matching IDS identifier for devices %@
Failed to migrate message
Discarding data because delegate did not allow the message
Missing data, will skip message
Missing record version number, will skip message
Invalid version number, will skip message: versionNumber=%{public}@
Capturing state from %@
Capturing sysdiagnose... date=%{public}@
Packing sysdiagnose state data...
Sysdiagnose captured
Could not capture sysdiagnose due to too much data
Could not capture sysdiagnose due to unable to make Plist: error=%{public}@
[%{public}@] Begin secure configuration
[%{public}@] Allowed app: %{private}@; %{private}@
[%{public}@] Denied app: %{private}@
[%{public}@] senderConfiguration: %{private}@
[%{public}@] End secure configuration
Unexpected class in denied application list
Purging metadata store
Forgetting device without initial sync data: %{public}@
Forgetting outdated device: %{public}@
Forgetting sync dates for record: %{public}@
Forgetting metadata for record: %{public}@
Forgetting record: %{public}@
Missing parameters of region trigger: %@
Unexpected object (%@) found in invalidation predicate UUIDs: %@
Updated assertions for mindfulness trigger: mode=%{public}@
No action taken for request to refresh mindfulness trigger; automatic entry not supported
Invalidating active assertion no mode identifer for mindfulness session trigger; previousModeID=%{public}@
Updating active assertion to new mode identifer for mindfulness session trigger; modeID=%{public}@ previousModeID=%{public}@
Acquiring assertion for mindfulness session trigger in response to event; modeID=%{public}@
Invalidating active assertion for mindfulness session trigger in response to event; previousModeID=%{public}@
Invalidating active assertion for mindfulness session trigger in response to event, trigger is disabled; previousModeID=%{public}@
Adding biome mindfulness session event monitor; mode=%{public}@
Mindfulness session subscription completed: state=%ld error=%{public}@
Received mindfulness session event: eventType=%{public}@
Updated assertions for mindfulness session event: eventType=%{public}@ sessionType=%{public}@
Failed to set Focus mirroring preference. Key does not exist or is invalid format. Expected %@.
Failed to set Focus mirroring preference. Accessor returned %@. Expected %@.
Set Focus mirroring preference.
Failed to get NPS accessor on paired device.
Initialized sync settings to %@
New sync settings: %@. Old: %@
Unable to updated workout trigger enabled setting: enabled=%{public}@ mode=%{public}@ error=%{public}@
Cannot map %{private}@ from %{public}@ to %{public}@ on this device
Record data is nil in record data %{public}@
Partioned record data is nil in record data %{public}@
Failed to decode record data %{public}@: %{public}@
Failed to decode
partitioned record data %{public}@: %{public}@
%{public}@
Sync engine will be enabled on startup
Sync engine will be disabled on startup because of feature flag
Sync engine will be disabled on startup because user setting is disabled
Sync engine will be disabled on startup because of missing account
Sync engine changing to %{public}s
Adding record IDs to save: %{public}@; to delete: %{public}@
Failed to find data source with zoneID %{public}@ for record %{public}@; sending to last-chance store
Removing record with ID %{public}@ from source %{public}@
Could not find a source for removing record with ID %{public}@
Deleted record: %{public}@
Fetched record: %{public}@
Saved record: %{public}@
Updated metadata
Failed to find data source with zoneID %{public}@ for record %{public}@
Failed to save record %{public}@: %{public}@
Unexpected error encountered when saving record %{public}@: %{public}@
Server record has changed; resolving conflict
Failed to find data source with zoneID %{public}@
Both server and client record IDs are nil for record ID %{public}@
Record is unknown on the server; flushing metadata and resending
Record ID is nil; ignoring unknown item
Zone %{public}@ not found; pushing zone to server
Zone ID is nil; ignoring record
Missing identity for zone %{public}@; deleting and recreating zone
ZoneID is nil; ignoring record
User deleted zone %{public}@; deleting zone
ZoneID is nil; ignoring deleted zone
Unhandled error: %{public}@
Creating record to save: %{public}@
Failed to create record to save: %{public}@
Record was deleted: %{public}@
Zone was deleted: %{public}@
Zone was purged: %{public}@
Keybag unlocked
Sync engine will start
Updating account
Ignoring account change because device is unsupported
Ignoring account change because feature is not enabled
Device is locked
Initial account state is %s; encryption is %s
Could not fetch account status: %@
Could not fetch account state: %{public}@
Sync engine will be disabled because account is restricted
Sync engine will be disabled because no account exists
Sync engine will be disabled because the account is unavailable
Sync engine will be disabled because of an error: %@
Could not fetch account info ID: %{public}@
Could not fetch user record ID: %{public}@
Encryption is newly available
Encryption is available
Encryption is newly unavailable
Encryption is not available
Sync enabled state is newly disabled
Sync enabled state is newly enabled
Sync enabled state is unchanged from disabled
Sync enabled state is unchanged from enabled
User record is unchanged from nil
User record was removed
New user record was added
User record ID is unchanged
User record ID has changed
Sync engine resolved state: %s
Purging sync engine data
Destroying sync engine
Account status has changed to: %{public}llu
User record ID has changed to: %{public}@
Purging data from data sources
Purging data from zone %{public}@
Performing initial sync for data sources
Performing initial sync for zone %{public}@
Migrating configurations from old local stores
Could not delete mode store: %@
Could not delete secure mode store: %@
Could not delete old synced global store: %@
Could not replace mode store with old store: %@
Could not replace secure mode store with old store: %@
Could not replace global store with old store: %@
Erasing configurations from old local stores
Could not delete old mode store: %@
Could not delete old secure mode store: %@
Could not delete old global store: %@
Updated assertions for gaming trigger: mode=%{public}@
No action taken for request to refresh gaming trigger; automatic entry not supported
Invalidating active assertion no mode identifer for game controller trigger; previousModeID=%{public}@
Updating active assertion to new mode identifer for game controller trigger; modeID=%{public}@ previousModeID=%{public}@
Acquiring assertion for game controller trigger in response to event; modeID=%{public}@
Invalidating active assertion for game controller trigger in response to event; previousModeID=%{public}@
Invalidating active assertion for game controller trigger in response to event, trigger is disabled; previousModeID=%{public}@
Adding biome game controller event monitor; mode=%{public}@
Game controller subscription completed: state=%ld error=%{public}@
Received controller event: isControllerConnected=%{BOOL}d number=%lu
Updated assertions for controller event: isControllerConnected=%{BOOL}d number=%lu
Did receive state update, will handle; stateUpdate=%{public}@
Delivering state update: pid=%d, stateUpdate=%{public}@, connection=%{public}@
Delivering active mode update: pid=%d, activeModeIdentifier=%{public}@, connection=%{public}@
Did receive update result with %lu assertion(s) & %lu invalidation(s), will handle; updateResult=%{public}@
Handling invalidation: %@
Delivering assertion update with invalidation: assertion=%{public}@, invalidation=%{public}@, connection=%{public}@
Handling assertion: %@
Delivering assertion update: assertion=%{public}@, connection=%{public}@
Did receive updated behavior settings, will handle; settings=%{public}@
Delivering settings update: settings=%{public}@, connection=%{public}@
Did receive updated phone call bypass settings, will handle; settings=%{public}@
Delivering bypass update: settings=%{public}@, connection=%{public}@
Did receive updated pair sync state, will handle; state=%{public}@
Delivering pair sync state: state=%{public}@, connection=%{public}@
Did receive updated prevent auto reply settings, will handle; settings=%{public}@
Delivering prevent auto reply update: settings=%{public}@, connection=%{public}@
Did receive updated schedule settings, will handle; settings=%{public}@
Did receive updated available modes, will handle; modes=%{public}@
Delivering modes update: pid=%d, modes=%{public}@, connection=%{public}@
Delivering available modes update: pid=%d, modes=%{public}@, connection=%{public}@
Did receive updated 'Me Device' state, will handle; meDeviceStatus=%{public}@, meDeviceName=%{public}@
Delivering 'Me Device' state update: pid=%d, meDeviceStatus=%{public}@, meDeviceName=%{public}@, connection=%{public}@
XPC connection without any valid entitlements tried to connect, will reject: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to process event, will invalidate: connection=%{public}@
[%{public}@] XPC connection blocked by: rdar://76425581 tried to take mode assertion, no action taken: connection=%{public}@, assertionDetails=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to take mode assertion, will invalidate: connection=%{public}@, assertionDetails=%{public}@
[%{public}@] XPC connection blocked by: rdar://76425581 tried to invalidate mode assertion, no action taken: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to invalidate mode assertion, will invalidate: connection=%{public}@
[%{public}@] XPC connection blocked by: rdar://76425581 tried to get mode assertion, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode assertion, will invalidate: connection=%{public}@
[%{public}@] XPC connection blocked by: rdar://76425581 tried to get mode assertion invalidation, no action taken: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode assertion invalidation, will invalidate: connection=%{public}@
[%{public}@] XPC connection blocked by: rdar://76425581 tried to invalidate all mode assertions, no action taken: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to invalidate all mode assertions, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to request all mode assertions, will invalidate: connection=%{public}@
[%{public}@] XPC connection blocked by: rdar://76425581 tried to get register for assertion updates, no action taken: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to register for assertion updates, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to query state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to query state as a part of registering for updates, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to register for state updates, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set screen sharing / mirroring settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get behavior settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set behavior settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get schedule settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set schedule settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set global configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get auto reply prevention state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to register for global configuration updates; will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get cloud sync state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to change cloud sync preference enabled state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get pair sync state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to change pair sync preference enabled state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to fetch state dump, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to notify of focus status sharing change, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set mode configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to remove mode configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode configurations, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get all modes, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get available modes, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to sync modes, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get availability state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to publish statuskit availability, will invalidate: connection=%{public}@
Activating mode %@ with details %@
[%{public}@] XPC connection without any valid entitlements tried to activate a mode, will invalidate: connection=%{public}@, modeIdentifier=%{public}@
Invalidating mode with UUID %@ with details %@
[%{public}@] XPC connection without any valid entitlements tried to invalidate a mode, will invalidate: connection=%{public}@, assertionUUID=%{public}@
[%{public}@] XPC connection without valid entitlements tried to register for available mode identifiers; will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to fetch app info; will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to query 'Me Device' state; will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to register for 'Me Device' state updates; will invalidate: connection=%{public}@
Registering new connection details for connection: connection=%{public}@
Updating connection details for connection: connection=%{public}@, updatedConnectionDetails=%{public}@
Connection details unregistered: connection=%{public}@, clientDetails=%{public}@
Invalidating assertion due to client disconnect: connection=%{public}@, UUID=%{public}@
Could not read configuration: %{public}@
Fetched record with ID: %@
Fetched data with ID %@ is current; applying update
Fetched data with ID %@ is outdated; ignoring update and resending local data
Fetched data with ID %@ could not be reconstructed into a configuration; ignoring update
Failed to delete record %@: %@
Resolved conflict records with ID %@; using remote data
Resolved conflict between records with ID %@; using local data
Could not resolve conflict as remote configuration is nil; keeping local data with ID %@
Preparing to save record %@
Global configuration was deleted
Preparing to save record for IDS sync engine: %@
Fetched record from IDS sync engine with ID: %@
Replacing record with default global configuration
Updating global configuration
Ignoring incoming configuration with date %@ as it is older than existing configuration with date %@
Record data is nil in record data %@
Failed to decode record data %@: %@
Failed to fetch existing configuration: %@
Record %@ is not valid JSON
Could not read configuration: %@
Notifying delegate of prevent-auto-reply change: %{public}s
Error writing fetched configurations: %@
Will sanitize assertion date: date=%{public}@ assertion=%{public}@
Will sanitize invalidation date: date=%{public}@ invalidation=%{public}@
Will sanitize invalidation request date: date=%{public}@ invalidationRequest=%{public}@
State changed
First unlock occurred
DND phone call bypass settings changed, will refresh state; manager=%{public}@, settings=%{public}@
Access to contacts store: granted=%{BOOL}u, error=%{public}@
Got significant time change; update lifetime monitors
Lifetime monitor says active assertions changed; monitor=%p
Lifetime monitor says UUIDs should expire; monitor=%p, UUIDs=%{public}@
Notifying PowerLog of Focus interruption suppression event: bundleIdentifier=%{public}@ suppression=%ld
No mode configuration found for mode identifier: modeIdentifier=%{public}@
No behavior settings in settings manager, will return default settings
No schedule settings in settings manager, will return default settings
No default paired device
Paired devices: %@
Updated mode modifification date to %@ on assertion %@
%@ configuration doesn't have a useful modification date: %@
Unable to find mode configuration for mode %@
Performed update for sync manager; manager=%{public}@
Error when performing update for sync manager; manager=%{public}@, error=%{public}@
Error while requesting settings sync for Focus sync. %@
Sync manager gets bypass settings; manager=%{public}@, settings=%{public}@
Received updated bypass settings via sync; manager=%{public}@, settings=%{public}@
Error replacing bypass settings in default mode: %{public}@
Error fetching default mode: %{public}@
Received updated schedule settings via sync; manager=%{public}@, settings=%{public}@
DND behavior settings changed, will refresh state; manager=%{public}@, settings=%{public}@
DND schedule settings changed, will refresh state; manager=%{public}@, settings=%{public}@
Sync settings updated; manager=%{public}@, settings=%{public}@
Available modes updated; manager=%{public}@, modes=%{public}@
Settings for this mode changed. Forcing a sync to all devices.
Skipping forced update for settings change because they were not local changes.
Paired devices updated; monitor=%{public}@, previousDevice=%{public}@, device=%{public}@
Cloud devices changed; monitor=%{public}@, previousDevices=%{public}@, devices=%{public}@
Failed forced publish to StatusKit: %@
Fetched changes
Error fetching changes: %@
Forcing cloud sync
Sent changes
Error sending changes: %@
Device regained internet connectivity. Queueing a current activity sync.
Device lost internet connectivity.
State was updated: previousState=%{public}@
State was updated: currentState=%{public}@
State was updated: reason=%{public}@ source=%{public}@
Notifying PowerLog of Focus status change event: availability=%ld source=%ld reason=%ld semanticType=%ld extensionsLaunched=%ld
Unable to set mode configuration while migrating bypass settings: error=%{public}@
Migrated bypass settings: settings=%{public}@
Unable to save eraose old bypass settings: settings=%{public}@ error=%{public}@
Unable to fetch mode configurations to migrate bypass settings: error=%{public}@
Unable to fetch global configuration to migrate bypass settings: error=%{public}@
Delaying default mode migration until device unlocks
Unable to save migrated default mode: mode=%{public}@ error=%{public}@
Checking configuration from %@ for %@
Unable to find configuration for %@. It may not yet exist on this device.
Configuration for %@ is out of date. %@ < %@
Requesting configuration sync for stale mode %@.
Failed to sync updated configurations for synced %@ assertion. Error: %@
Updated configurations succesfully synced for %@.
Mode configuration is up to date.
Mode assertion update result:
 assertions=%{public}@
Mode assertion update result:
 invalidations=%{public}@
Ignored update as it changed nothing
Current DND sync status: local device=%{public}@, cloud devices=%{public}@, settings=%{public}@
Received new lost mode state: state=%@
Updated assertions for smart triggers: supportedModes=%{public}@
Adding biome inferred mode event monitor for %{public}@
InferredMode subscription completed: state=%ld error=%{public}@
Received inferred mode event: modeIdentifier=%{public}@ starting=%{public}@
Updated assertions for inferred mode event: event=%{public}@
Ignored automatic entry for unsupported inferred mode event: event=%{public}@
Setting auto reply to %s
Error reading auto reply state: %@
Saved configuration; configuration=%{public}@
Failed to save configuration, but error can be ignored; error=%{public}@
Failed to save configuration, will request a radar; configuration=%{public}@, error=%{public}@
Failed to save configuration but device is under first lock; configuration=%{public}@, error=%{public}@
Received SIGTERM
Starting up...
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
Record
DNDSBackingStoreRecord
NSObject
DNDSIDSSyncEngine
DNDSSyncServiceDelegate
DNDSKeybagStateObserver
DNDSSysdiagnoseDataProvider
DNDSIDSSyncEngineSynchronizing
Resolution
DNDSModernAssertionSourceResolution
DNDSBehaviorSettingsRecord
NSCopying
NSMutableCopying
DNDSMutableBehaviorSettingsRecord
DNDSPartitionedBackingStoreRecord
DNDSJSONBackingStore
DNDSBackingStore
DNDSModeAssertionInvalidationRequest
Schedule
DNDSLifetimeMonitorResult
DNDSBaseLifetimeMonitor
DNDSLifetimeMonitor
DNDSAppForegroundTriggerManager
DNDSBiomeTriggerManager
DNDSBiomeTriggerManagerDataSource
DNDSAppForegroundTriggerConfiguration
DNDSDateHelper
DNDContactHandle
DNDSEventBehaviorEvolver
DNDSEventBehaviorResolver
Testing
DNDSMemoryCachedBackingStore
DNDSBackingStoreDelegate
DNDSCachedBackingStore
DNDSRemoteAvailabilityServiceProvider
BSServiceConnectionListenerDelegate
DNDRemoteAvailabilityServiceServerProtocol
DNDSBypassSettingsRecord
DNDSMutableBypassSettingsRecord
DNDSContactMonitorChangeCollector
CNChangeHistoryEventVisitor
DNDSContactMonitor
DNDSContactMonitoring
DNDSCalendarEventLifetimeMonitor
SyncMessage
DNDSDateIntervalLifetimeMonitor
DNDSDefaultLifetimeMonitor
DNDSUserAvailabilityCoordinator
DNDSContactProvider
DNDSContactProviding
Defaults
DNDSLocationLifetimeMonitor
CLLocationManagerDelegate
DNDSAggregateLocationLifetimeMonitor
DNDSMeDeviceServiceListener
DNDSExplicitRegionLocationLifetimeMonitor
DNDSLocationTriggerConfiguration
DNDSExplicitRegionStore
DNDSMutableExplicitRegionStore
DNDSUntilExitLocationLifetimeMonitor
DNDSUntilExitRegionStore
DNDSMutableUntilExitRegionStore
DNDSIDSServerBagValues
DNDSScheduleSettingsRecord
DNDSMutableScheduleSettingsRecord
DNDSMeDeviceStore
DNDSMutableMeDeviceStore
DNDSPlaceholderModesRecord
BackingRecord
BackingStores
BackingRecordUpgrade
DNDSModeAssertionManagerUpdateContext
DNDSModeAssertionUpdateContext
DNDSModeAssertionQuerying
SysdiagnoseRecord
DNDSModeDetails
DNDSModeConfigurationRecord
DNDSMutableModeConfigurationRecord
DNDSSyncEngineMetadataStore
DNDSSyncEngineMetadataStoring
DNDSMetricsManager
DNDSApplicationConfigurationRecord
DNDSMutableApplicationConfigurationRecord
DNDSScheduleLifetimeMonitor
DNDSModeRepository
DNDSReachability
DNDSModeConfigurationManager
DNDSModeConfigurationsStoreDelegate
PeaceSyncMessage
Contacts
DNDSClientConnectionDetails
DNDSMutableClientConnectionDetails
DNDSStateProvider
DNDSPlaceholderModeManager
LegacySupport
DNDSFirstUnlockPurgedBackingStore
DNDSCachedBackingStoreDelegate
DNDSGlobalConfiguration
DNDSMutableGlobalConfiguration
CKRecord
DNDSScheduleSettings
DNDSMeDeviceService
DNDSModeConfigurationTriggersRecord
DNDSMutableModeConfigurationTriggersRecord
DNDSSettingsManager
DNDSSyncSettingsProviderDelegate
DNDSIDSRecord
DNDSModeAssertionUpdateResult
Batch
DNDSModeAssertionInvalidationPredicate
DNDSAnyModeAssertionInvalidationPredicate
DNDSModeAssertionDateInvalidationPredicate
DNDSModeAssertionClientIdentifierInvalidationPredicate
DNDSModeAssertionUUIDInvalidationPredicate
DNDSWorkoutTriggerManager
DNDSModeConfigurationsRecordDiff
DNDSSyncEngineLastChanceDataStore
DNDSSyncEngineLastChanceDataStoring
DNDSLegacyAssertionSyncManager
DNDSAssertionSyncManager
DNDSModeAssertionManager
DNDSModeAssertionUpdating
DNDSWorkloop
DNDSMetricsRecord
DNDSMutableMetricsRecord
DNDSDrivingTriggerManager
DNDSLegacySettingsSyncManager
DNDSSettingsSyncManager
DNDSConfigurationRecord
DNDSMutableConfigurationRecord
DNDSUserAvailabilityIntentLauncher
DNDSModeAssertionStore
DNDSMutableModeAssertionStore
DNDSModernAssertionSync
DNDSModernAssertionSyncManager
AssertionSyncManager
_DNDSPendingMessageRecipients
_DNDSSyncMessageGroup
DNDSModernAssertionSyncMetadataStore
DNDSModeAssertionStoreRecord
Dictionary
DNDSModeAssertionStoreRecordDictionaryEncoding
Sanitization
DNDSBiomeDonationManager
DNDSPairedDevice
DNDSEventBehaviorResolution
DNDSHeartbeatMetricsRecord
DNDSHeartbeatMetricsProtocol
DNDSMutableHeartbeatMetricsRecord
DNDSMutableHeartbeatMetricsProtocol
DNDSDailyHeartbeatMetricsRecord
DNDSMutableDailyHeartbeatMetricsRecord
DNDSWeeklyHeartbeatMetricsRecord
DNDSMutableWeeklyHeartbeatMetricsRecord
DNDSMonthlyHeartbeatMetricsRecord
DNDSMutableMonthlyHeartbeatMetricsRecord
DNDSAuxiliaryStateMonitor
DNDModeAssertionLifetimeTypeHelper
DNDModeAssertionScheduleLifetimeBehaviorHelper
DNDSSleepingTriggerManager
DNDSAppInfoCache
LSApplicationWorkspaceObserverProtocol
DNDSScheduleManager
DNDSLegacyBehaviorOverride
NSSecureCoding
NSCoding
DNDSModeConfigurationsStore
DNDSSyncEngineDataSource
DNDSIDSSyncEngineDataSource
DNDSModeConfigurationsStoring
DNDSContactMonitorListener
DNDSClientDetailsProvider
DNDServer
DNDSPairedDeviceStateMonitor
IDSServiceDelegate
BackingStore
DNDSModeRecord
DNDSMutableModeRecord
DNDSConfigurationsRecord
DNDSMutableConfigurationsRecord
DNDSIDSSyncService
DNDSSyncService
DNDSConfigurationSecureRecord
DNDSMutableConfigurationSecureRecord
DNDSLegacyBehaviorOverrideEffectiveInterval
DNDSSyncSettings
DNDSMutableSyncSettings
DNDSStateProviderSystemSnapshot
DNDSMutableStateProviderSystemSnapshot
DNDSIDSSyncEngineMetadataStore
DNDSIDSSyncEngineMetadataStoring
DNDModeAssertionReasonHelper
DNDModeAssertionInvalidationReasonHelper
DNDModeAssertionInvalidationReasonOverrideHelper
DNDSModeAssertionInvalidationPredicateTypeHelper
DNDSModeAssertionRecord
DNDSModeAssertionDetailsRecord
DNDSModeAssertionLifetimeRecord
DNDSModeAssertionSourceRecord
DNDSModeAssertionInvalidationRecord
DNDSModeAssertionInvalidationDetailsRecord
DNDSModeAssertionInvalidationRequestRecord
DNDSModeAssertionInvalidationPredicateRecord
LifetimePhase
DNDSMindfulnessTriggerManager
DNDSClientDetails
DNDSSyncSettingsProvider
DNDSBackingStoreDictionaryContext
DNDSMutableBackingStoreDictionaryContext
DNDSAppForegroundTriggerManagerDataSource
DNDSDrivingTriggerManagerDataSource
DNDSGamingTriggerManagerDataSource
DNDSMindfulnessTriggerManagerDataSource
DNDSSleepingTriggerManagerDataSource
DNDSSmartTriggerManagerDataSource
DNDSWorkoutTriggerManagerDataSource
Predicates
DNDSSettingsRecord
DNDSMutableSettingsRecord
DNDSApplicationIdentifierMapper
DNDSApplicationIdentifierMapping
DNDSModeResolutionService
DoNotDisturbServer
DNDSConfigurationsSecureRecord
DNDSMutableConfigurationsSecureRecord
DNDSXPCEventInterface
DNDSXPCEventStream
DNDSSenderConfigurationRecord
DNDSMutableSenderConfigurationRecord
DNDSIDSRecordID
DNDSContactRecord
DNDSMutableContactRecord
DNDSModeConfigurationsRecord
DNDSMutableModeConfigurationsRecord
DNDSSyncEngine
CKSyncEngineDataSource
DNDSIDSRecordMetadata
DNDSMutableIDSRecordMetadata
DNDSXPCTimer
DNDSGamingTriggerManager
DNDSRemoteServiceProvider
DNDRemoteServiceServerProtocol
DNDRemoteServiceServerBehaviorResolutionProtocol
DNDRemoteServiceServerModeAssertionProtocol
DNDRemoteServiceServerStateProtocol
DNDRemoteServiceServerSettingsProtocol
DNDRemoteServiceServerModeConfigurationProtocol
DNDRemoteServiceServerModeSelectionProtocol
DNDRemoteServiceServerGlobalConfigurationProtocol
DNDRemoteServiceServerAppInfoProtocol
DNDRemoteServiceServerMeDeviceStateProtocol
DNDRemoteServiceServerAuxiliaryStateProtocol
DNDRemoteMonitorServerProtocol
DNDRemoteMonitorServerModeAssertionProtocol
DNDRemoteMonitorServerStateProtocol
DNDRemoteMonitorServerSettingsProtocol
DNDRemoteMonitorServerModeSelectionProtocol
DNDRemoteMonitorServerGlobalConfigurationProtocol
DNDRemoteMonitorServerMeDeviceStateProtocol
Entitlements
DNDSGlobalConfigurationStore
DNDSGlobalConfigurationStoring
DateOperations
DNDSKeybag
DNDSKeybagStateProviding
DNDSGlobalConfigurationManagerDelegate
DNDSServer
DNDSEventBehaviorResolverDataSource
DNDSLifetimeMonitorDataSource
DNDSLocationLifetimeMonitorDataSource
DNDSScheduleLifetimeMonitorDataSource
DNDSLifetimeMonitorDelegate
DNDSRemoteServiceProviderDelegate
DNDSRemoteServiceProviderBehaviorResolutionDelegate
DNDSRemoteServiceProviderAssertionDelegate
DNDSRemoteServiceProviderStateDelegate
DNDSRemoteServiceProviderSettingsDelegate
DNDSRemoteServiceProviderModeConfigurationsDelegate
DNDSRemoteServiceProviderGlobalConfigurationDelegate
DNDSRemoteServiceProviderAppInfoDelegate
DNDSRemoteServiceProviderMeDeviceStateDelegate
DNDSRemoteServiceProviderAuxiliaryStateDelegate
DNDSRemoteAvailabilityServiceProviderDelegate
DNDSAssertionSyncManagerDataSource
DNDSAssertionSyncManagerDelegate
DNDSLegacyAssertionSyncManagerDataSource
DNDSSettingsSyncManagerDataSource
DNDSSettingsSyncManagerDelegate
DNDSScheduleManagerDataSource
DNDSSettingsManagerDelegate
DNDSPairedDeviceStateMonitorDelegate
DNDSModeConfigurationManagerDelegate
DNDSReachabilityDelegate
DNDSSmartTriggerManager
DNDSGlobalConfigurationManager
DNDSGlobalConfigurationStoreDelegate
bs_safeDictionaryForKey:
newWithDictionaryRepresentation:context:
bs_safeNumberForKey:
unsignedIntegerValue
bs_safeStringForKey:
URLWithString:
fileURLWithPath:
initWithSource:applicationIdentifier:displayName:storeIconURL:cachedIconURL:
applicationIdentifier
dictionaryRepresentationWithContext:
dictionary
source
numberWithInteger:
setObject:forKeyedSubscript:
displayName
storeIconURL
absoluteString
cachedIconURL
path
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
_isTinkerWatch
initWithMetadataStore:syncService:keybag:role:syncState:inflightExpirationTime:
init
strongToWeakObjectsMapTable
setDelegate:
resume
addObserver:
validate
date
setDeletedAtDate:forRecordIDs:
setLastModifiedDate:forRecordIDs:
_queue_resetRetryTimer
deviceIdentifier
_queue_syncDataSourcesToDeviceWithIdentifier:
removeObjectForKey:
objectForKey:
setObject:forKey:
syncProtocolVersion
syncServiceType
copy
_queue_validate
hasPerformedInitialSyncForPairedDeviceIdentifier:
_queue_sendResyncMessageToDeviceWithIdentifier:
hasUnlockedSinceBoot
_queue_handleMessage:fromPairedDeviceIdentifier:
isEqualToString:
_queue_startRetryTimer
objectForKeyedSubscript:
minusSet:
_queue_restartInflightExpirationTimer
count
_queue_sendUnlockMessageToDeviceWithIdentifier:
isValidAtDate:
purge
dictionaryRepresentation
allKeys
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
sharedInstance
activePairedDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
firstObject
valueForProperty:
modifiedRecordIDsForPairedDeviceIdentifier:
deletedRecordIDsForPairedDeviceIdentifier:
array
countByEnumeratingWithState:objects:count:
recordIDsForIDSSyncEngine:
addObjectsFromArray:
unknownRecordIDsInRecordIDs:
arrayByAddingObjectsFromArray:
_queue_sendModifiedRecordIDs:deletedRecordIDs:toDeviceWithIdentifier:
initWithDestination:partitionType:redactSensitiveData:contactProvider:applicationIdentifierMapper:
addObject:
timeIntervalSinceReferenceDate
numberWithDouble:
dictionaryWithObjects:forKeys:count:
setWithObject:
sendMessage:withVersionNumber:messageType:toDestinations:completionHandler:
_queue_removeAllInflightMetadata
_queue_cancelInflightExpirationTimer
recordMetadataForRecordID:
containsObject:
recordID
initWithMetadata:
_queue_dataSourceForZone:
idsSyncEngine:prepareRecordToSave:
UUID
UUIDString
unionSet:
sendMessage:withVersionNumber:messageType:toDestinations:identifyingCompletionHandler:
_queue_cancelRetryTimer
distantFuture
earlierDate:
dateByAddingTimeInterval:
timeIntervalSinceNow
_queue_startInflightExpirationTimer
_queue_earliestExpirationTimeSinceNowForInflightMetadata
_queue_removeAllInflightMetadataWithExpirationDate:
removeAllObjects
laterDate:
_queue_handleUpdateMessage:fromPairedDeviceIdentifier:
_queue_handleReplaceMessage:fromPairedDeviceIdentifier:
_queue_handleAckMessage:fromPairedDeviceIdentifier:
_queue_handleUnlockMessage:fromPairedDeviceIdentifier:
_queue_handleResyncMessage:fromPairedDeviceIdentifier:
removePairedDeviceIdentifier:
bs_safeArrayForKey:
doubleValue
dateWithTimeIntervalSinceReferenceDate:
setPerformedInitialSyncForPairedDeviceIdentifier:
setSyncDate:forRecordsMatchingMetadata:forPairedDeviceIdentifier:
lastModified
metadata
arrayWithObjects:count:
updateMetadata:
setSyncDate:forRecordIDs:forPairedDeviceIdentifier:
idsSyncEngine:didFetchRecord:
idsSyncEngine:recordWithIDWasDeleted:
_queue_sendAckWithMetadata:forAction:toDeviceWithIdentifier:
purgeRecordsForIDSSyncEngine:
syncService:didReceiveMessage:withVersionNumber:messageType:fromDeviceIdentifier:
syncService:shouldAcceptIncomingMessage:withVersionNumber:messageType:fromDeviceIdentifier:
syncService:didSendWithRequestIdentifier:withSuccess:error:
keybagDidUnlockForTheFirstTime:
keybagDidChangeState:
sysdiagnoseDataForDate:redacted:
sysdiagnoseDataIdentifier
T@"NSString",R,C,N
addRecordIDsToSave:recordIDsToDelete:
setDataSource:forZone:
setPairedDevice:syncEnabled:
sync
initWithMetadataStore:syncService:keybag:
setDidReceiveUnlockMessage:
setDidFireMetadataExpirationTimer:
pairSyncState
inflightMetadata
.cxx_destruct
_sourcesByZone
_syncService
_pairedDevice
_syncState
_metadataStore
_keybag
_queue
_retryTimer
_inflightExpirationTimer
_retriesAvailable
_inflightExpirationTime
_inflightMetadataByRequestIdentifier
_inflightDateByRequestIdentifier
_inflightMetadata
_role
_didReceiveUnlockMessage
_didFireMetadataExpirationTimer
TQ,R,N
resolveWithExpectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:
startDate
details
initWithUUID:startDate:details:source:
assertion
invalidationDate
reason
reasonOverride
initWithAssertion:invalidationDate:details:source:reason:reasonOverride:
clientIdentifier
initWithClientIdentifier:deviceIdentifier:
predicate
requestDate
initWithUUID:predicate:requestDate:details:source:reason:reasonOverride:
_initWithRecord:
interruptionBehaviorSetting
_initWithInterruptionBehaviorSetting:
stringWithFormat:
bs_safeObjectForKey:ofType:
migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:
copyWithZone:
mutableCopyWithZone:
_interruptionBehaviorSetting
T@"NSNumber",R,C,N,V_interruptionBehaviorSetting
setInterruptionBehaviorSetting:
T@"NSNumber",C,D,N
initWithRecordClass:fileURL:secureFileURL:versionNumber:securityClass:
dealloc
readRecordDictionaryfromURL:withError:
newWithDictionaryRepresentation:partitionedDictionaryRepresentation:context:
writeRecord:writePartition:error:
writeRecordDictionary:withSecurityClass:toURL:error:
defaultManager
fileExistsAtPath:
dataWithContentsOfURL:options:error:
JSONObjectWithData:options:error:
integerValue
delegate
backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:
errorWithDomain:code:userInfo:
isValidJSONObject:
dataWithJSONObject:options:error:
URLByDeletingLastPathComponent
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
dataWritingOptionsForSecurityClass:
writeToURL:options:error:
dnds_isOutOfSpaceError
numberWithBool:
readRecordWithError:
writeRecord:error:
T@"<DNDSBackingStoreDelegate>",W,N
initWithRecordClass:fileURL:versionNumber:
_recordClass
_fileURL
_secureFileURL
_versionNumber
_deviceOutOfSpace
_securityClass
_delegate
T@"NSString",R,C,D,N
T@"<DNDSBackingStoreDelegate>",W,N,V_delegate
requestWithPredicate:requestDate:source:reason:
requestWithPredicate:requestDate:details:source:reason:reasonOverride:
_UUID
_predicate
_requestDate
_details
_source
_reason
_reasonOverride
T@"NSUUID",R,C,N,V_UUID
T@"DNDSModeAssertionInvalidationPredicate",R,C,N,V_predicate
T@"NSDate",R,C,N,V_requestDate
T@"DNDModeAssertionInvalidationDetails",R,C,N,V_details
T@"DNDModeAssertionSource",R,C,N,V_source
TQ,R,N,V_reason
TQ,R,N,V_reasonOverride
contactIdentifier
initWithContactIdentifier:
firstName
setFirstName:
middleName
setMiddleName:
lastName
setLastName:
nickName
setNickName:
organizationName
setOrganizationName:
phoneNumbers
setPhoneNumbers:
emailAddresses
setEmailAddresses:
setContactIdentifier:
makeRecord
contactForRecord:
scheduleEnabledSetting
timePeriod
weekdays
component:fromDate:
startTime
dateComponents
endTime
date:matchesComponents:
nextDateAfterDate:matchingComponents:options:
setWeekday:
compare:
initWithStartDate:endDate:
dnds_dateIntervalForScheduleSettings:date:calendar:
dnds_dateIntervalUntilEndOfScheduleForScheduleSettings:startDate:calendar:
initWithActiveUUIDs:expiredUUIDs:
activeUUIDs
expiredUUIDs
_activeUUIDs
_expiredUUIDs
T@"NSArray",R,C,N,V_activeUUIDs
T@"NSArray",R,C,N,V_expiredUUIDs
cStringUsingEncoding:
refreshMonitorFromQueueForDate:
dataSource
lifetimeClass
lifetimeMonitor:modeAssertionsWithLifetimeClass:
updateForModeAssertions:date:
lifetimeMonitor:lifetimeDidExpireForAssertionUUIDs:expirationDate:
activeAssertionsDidChangeForLifetimeMonitor:
activeLifetimeAssertionUUIDs
bs_mapNoNulls:
refreshMonitorForDate:
setDataSource:
T@"NSArray",R,C,N
T@"<DNDSLifetimeMonitorDataSource>",W,N
T@"<DNDSLifetimeMonitorDelegate>",W,N
queue
_activeLifetimeAssertionUUIDs
_dataSource
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSArray",R,C,N,V_activeLifetimeAssertionUUIDs
T@"<DNDSLifetimeMonitorDataSource>",W,N,V_dataSource
T@"<DNDSLifetimeMonitorDelegate>",W,N,V_delegate
settingsForRecord:
dateWithTimeIntervalSince1970:
boolValue
initWithPreventAutoReply:bypassSettings:lastModified:automaticallyGenerated:
bypassSettings
preventAutoReply
timeIntervalSince1970
isAutomaticallyGenerated
backingStoreWithFileURL:
serialQueueTargetingSharedWorkloop:
appForegroundTriggerConfigurationForAppForegroundTriggerManager:
_configureAppForegroundTriggerWithConfiguration:
_refreshWithTriggerConfiguration:event:
triggerManager:assertionsWithClientIdentifer:error:
triggeringBundleIdentifiers
setWithArray:
identifier
hasSuffix:
stringByReplacingOccurrencesOfString:withString:
triggerManager:invalidateModeAssertionWithUUID:reason:reasonOverride:clientIdentifier:error:
eventBody
isStarting
bundleID
modeIdentifierForBundleIdentifier:
stringByAppendingString:
setIdentifier:
setLifetime:
setModeIdentifier:
setReason:
triggerManager:takeModeAssertionWithDetails:clientIdentifier:error:
modeIdentifier
bs_filter:
cancel
initWithIdentifier:targetQueue:
appLaunch
publisher
filterWithKeyPath:comparison:value:
subscribeOn:
state
error
_refreshIfNeccessaryForEvent:
sinkWithCompletion:receiveInput:
_coalescingQueue_coalesceWithTriggerConfiguration:event:
_coalescingQueue_resetCoalescingTimer
_coalescingQueue_refreshWithTriggerConfiguration:
refresh
_biomeQueue
_coalescingTimer
_coalescingQueue
_sinks
_currentTriggerConfiguration
_latestEvent
_eventCoalescingTransaction
T@"<DNDSAppForegroundTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_updateModeAssertionManagerAndRefreshLifetimesAndStateWithHandler:error:
clientDetailsForIdentifier:
identifiers
predicateForModeAssertionsWithClientIdentifiers:
modeAssertionsMatchingPredicate:
takeAssertionWithDetails:source:startDate:
assertions
lockState
assertionTaken:withClientDetails:lockState:
predicateForAssertionUUIDs:
invalidateAssertionsForRequest:
invalidations
predicateForModeAssertionInvalidationsWithAssertionClientIdentifiers:
modeAssertionInvalidationsMatchingPredicate:
triggerManager:performModeAssertionUpdatesWithHandler:
triggerManager:latestInvalidationWithClientIdentifer:error:
mutableCopy
addTriggerForModeWithIdentifier:onForegroundOfApp:
_bundleIDToModeIdentifierTriggers
dnds_numberWithDate:
dnds_dateValue
dnds_safeNumberWithDate:
predicateForContactsWithIdentifiers:
value
destinationIdIsPhoneNumber
type
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:prefixHint:
predicateForContactsMatchingEmailAddress:
dnds_predicateForContactsMatchingEventSender:
length
isPopulated
initWithContactStore:
_queue_resolveBehaviorForEventDetails:clientDetails:date:error:
localizedStringFromDate:dateStyle:timeStyle:
outcome
currentStateForEventBehaviorResolver:
isActive
behavior
_activeModeConfigurationForBehavior:
mode
configuration
activeModeUUID
_queue_resolutionForModeWithConfiguration:eventDetails:clientDetails:activeModeUUID:date:error:
activeModeIdentifier
initWithEventDetails:interruptionSuppression:resolutionReason:activeModeUUID:
resolutionForDate:eventBehavior:clientIdentifier:outcome:reason:
_queue_adjustEventBehaviorResolutionForAuxiliaryState:
predicateWithBlock:
filterUsingPredicate:
eventBehavior
interruptionSuppression
_queue_shouldAdjustEventBehaviorForMirroring
isScreenShared
isScreenMirrored
isPresentationModeEnabled
eventDetails
activeModeConfiguration
_legacyModeConfigurationForModeConfiguration:
defaultConfiguration
senderConfiguration
phoneCallBypassSettings
setPhoneCallBypassSettings:
setSenderConfiguration:
setMinimumBreakthroughUrgency:
setConfiguration:
bundleIdentifier
sender
urgency
threadIdentifier
notifyAnyway
_queue_isBreakthroughAllowedForConfiguration:application:sender:urgency:eventType:threadIdentifier:notifyAnyway:reason:
_queue_isBreakthroughAllowedForSender:eventType:clientDetails:date:reason:
suppressionType
eventBehaviorResolver:bypassSettingsForClientIdentifier:
immediateBypassEventSourceType
_queue_eventSourceIsFavorite:
_queue_eventSourceIsContact:
immediateBypassCNGroupIdentifier
_queue_eventSourceIsContact:inGroupWithIdentifier:
repeatEventSourceBehaviorEnabledSetting
_queue_eventSourceIsRepeat:clientDetails:date:
_queue_eventSourceIsEmergencyContact:
initWithKeysToFetch:
setPredicate:
setUnifyResults:
isUnified
linkedContacts
entriesForContact:
bs_containsObjectPassingTest:
enumerateContactsWithFetchRequest:error:usingBlock:
predicateForContactsInGroupWithIdentifier:
unifiedContactsMatchingPredicate:keysToFetch:error:
bs_flatten
callAlert
ignoreMute
_queue_firstContactForPredicate:
deniedContactTypes
allowedContactTypes
deniedContactGroups
allowedContactGroups
deniedContacts
allowedContacts
eventBehaviorResolver:isAvailabilityActiveForBundleIdentifier:
deniedApplications
allowedApplications
minimumBreakthroughUrgency
deniedThreads
allowedThreads
matchesContactHandle:
_queue_resolveOutcomeForEventSender:clientDetails:date:reason:
initWithModeRepository:contactStore:auxiliaryStateMonitor:
resolveBehaviorForEventDetails:clientDetails:date:error:
_modeRepository
_contactStore
_auxiliaryStateMonitor
_favorites
_resolutionRecord
T@"<DNDSEventBehaviorResolverDataSource>",W,N,V_dataSource
resolutionForConfiguration:eventDetails:clientDetails:date:error:
purgeCache
T@"<DNDSCachedBackingStoreDelegate>",W,N
initWithUnderlyingBackingStore:
_underlyingBackingStore
_cache
_lock
T@"<DNDSCachedBackingStoreDelegate>",W,N,V_delegate
setDomain:
setService:
listenerWithConfigurator:
invalidate
activate
activateManualDomain:
userInitiated
setServiceQuality:
setInterface:
setInterfaceTarget:
_handleClientConnectionInterrupted:
setInterruptionHandler:
_handleClientConnectionInvalidated:
setInvalidationHandler:
configureConnection:
_addConnection:
UTF8String
currentContext
remoteProcess
auditToken
realToken
dnds_hasUserNotificationsCommunicationEntitlement
initWithBundleID:
bundleRecordForAuditToken:error:
containingBundleRecord
entitlements
objectForKey:ofClass:
counterpartIdentifiers
initWithBundleID:platform:
remoteAvailabilityServiceProvider:isLocalUserAvailableForApplicationIdentifier:withError:
_removeConnection:
removeObject:
listener:didReceiveConnection:withContext:
getIsLocalUserAvailableWithRequestDetails:completionHandler:
initWithClientDetailsProvider:
_requestListener
_clientDetailsProvider
_accessLock
_connections
T@"<DNDSRemoteAvailabilityServiceProviderDelegate>",W,N,V_delegate
_initWithImmediateBypassEventSourceType:immediateBypassCNGroupIdentifier:repeatEventSourceBehaviorEnabledSetting:
bs_setSafeObject:forKey:
_immediateBypassEventSourceType
_immediateBypassCNGroupIdentifier
_repeatEventSourceBehaviorEnabledSetting
T@"NSNumber",R,C,N,V_immediateBypassEventSourceType
T@"NSString",R,C,N,V_immediateBypassCNGroupIdentifier
T@"NSNumber",R,C,N,V_repeatEventSourceBehaviorEnabledSetting
setImmediateBypassEventSourceType:
setImmediateBypassCNGroupIdentifier:
setRepeatEventSourceBehaviorEnabledSetting:
T@"NSString",C,D,N
contact
visitDropEverythingEvent:
visitAddContactEvent:
visitUpdateContactEvent:
visitDeleteContactEvent:
visitAddGroupEvent:
visitUpdateGroupEvent:
visitDeleteGroupEvent:
visitAddMemberToGroupEvent:
visitRemoveMemberFromGroupEvent:
visitAddSubgroupToGroupEvent:
visitRemoveSubgroupFromGroupEvent:
initWithMonitoredContactIdentifiers:
updatedContacts
deletedContactIdentifiers
_updatedContacts
_deletedContactIdentifiers
_monitoredContactIdentifiers
T@"NSArray",R,C,N,V_updatedContacts
T@"NSArray",R,C,N,V_deletedContactIdentifiers
hashTableWithOptions:
defaultCenter
_contactStoreChanged:
addObserver:selector:name:object:
monitoredContacts
contactHistoryToken
_contactsWithCNContacts:
contactMonitor:didReceiveUpdatedContacts:deletedContactIdentifiers:withContactHistoryToken:
_fetchUpdatesWithContactHistoryToken:monitoredContacts:handler:
contactWithCNContact:
_updateContactsWithIdentifiers
_updateContactsWithoutIdentifiers
_lock_listenersByContactHistoryToken
_lock_monitoredContactsByContactHistoryToken
_queue_fetchUpdatesWithContactHistoryToken:monitoredContacts:handler:
allObjects
contactForContact:
contactMonitor:didReceiveUpdatedContactsForContactsWithoutIdentifiers:
keysToFetch
currentHistoryToken
enumerateBatchesOfSize:handler:
setStartingToken:
setAdditionalContactKeyDescriptors:
enumeratorForChangeHistoryFetchRequest:error:
acceptEventVisitor:
data
isEqualToData:
countForFetchRequest:error:
_fetchContactHistoryWithToken:monitoredContacts:handler:
_fetchContactsForMonitoredContacts:handler:
addListener:
removeListener:
initWithContactStore:contactProvider:
_listeners
_contactProvider
_fetchQueue
_calendarEventStoreChangedWithNotification:
lifetimeMonitor:registerTimerHandlerWithServiceIdentifier:handler:
_eventForCalendarEventLifetime:assertionStartDate:
isOnlyDuringEvent
endDate
lifetime
activeDateIntervalForCalendarEventLifetime:assertionStartDate:
eventUniqueID
dnds_lifetimePhaseForDate:
isEqualToDate:
_eventStore
reset
initWithFireDate:serviceIdentifier:userVisible:
lifetimeMonitor:setTimer:
initWithEKOptions:
requestAccessToEntityType:completion:
occurrenceDate
_eventStoreCreatingIfNeeded
predicateForEventsWithStartDate:endDate:calendars:
eventsMatchingPredicate:
uniqueId
_lifetimeTimerFireDate
recordForDictionary:keys:
object
distantPast
recordForAssertionStore:
dictionaryWithKeys:options:
syncDictionaryRepresentationWithDate:messageUUID:
syncMessageKeys
newWithSyncDictionaryRepresentation:
messageDateForSyncDictionaryRepresentation:
dateInterval
initWithStatusTypeIdentifier:
impactsAvailability
allowedApplicationIdentifiers
deniedApplicationIdentifiers
countForObject:
setByAddingObjectsFromSet:
_queue_updateAvailabilityKit:fromConfiguration:toConfiguration:
_queue_notifyIntentExtensionsOfUserAvailability:applicationIdentifiers:completionHandler:
_isLocalUserAvailableForAppId:modeIdentifier:withError:
_publishStatusKitAvailability:activityIdentifier:local:scheduled:date:forced:completion:
previousState
_userAvailabilityTCCApprovedBundleIds
enumeratorWithOptions:
appInfoWithApplicationRecord:
supportedIntentsByApp
supportedActionsByExtensions
_entitlementRecordForApplicationRecord:
initWithApplicationRecord:available:
launchIntentExtensionWithCompletion:
deviceClass
applicationExtensionRecords
infoDictionary
setType:
anyObject
setValue:
allowedModesForContactHandle:withError:
initWithString:
initWithAvailableDuringActivityIdentifiers:
statusKitInvitationPayloadWithDateCreated:
inviteHandlesFromPrimaryAccountHandle:withInvitationPayload:completion:
lastCalculatedState
_publishStatusKitCurrentAvailabilityForced:completionHandler:
modeConfigurationForModeIdentifier:withError:
exceptionForApplicationIdentifier:thread:forModeIdentifier:
modeConfigurationsWithError:
allValues
exceptionForContactHandle:forModeIdentifier:
initWithCapacity:
_isTCCUserAvailabilityGrantedForMessages
_publishStatusKitAvailability:activityIdentifier:forced:completion:
initWithAvailable:activityIdentifierString:
statusPublishRequest
setIsSecondaryDeviceRepublish:
setIsScheduledRequest:
setDateCreated:
publishStatusRequest:completion:
publishStatusKitAvailabilityForced:error:
isTCCUserAvailabilityGrantedForBundleId:
initWithConfigurationManger:stateProvider:
suspend
coordinateUserAvailability:fromConfiguration:toConfiguration:completionHandler:
sendStatusKitInvitationsForContacts:
isLocalUserAvailableForApplicationIdentifier:withError:
userAvailabilityInActiveModeForContactHandle:withError:
publishStatusKitAvailabilityReturningError:
_active
_extensionLaunchQueue
_modeConfigurationManager
_stateProvider
_statusService
sharedContactStore
predicateForContactsMatchingHandleStrings:
_bestMatchForContact:inContacts:
givenName
lowercaseString
familyName
stringValue
initWithSuppressionState:activeModeAssertionMetadata:startDate:userVisibleTransitionDate:userVisibleTransitionLifetimeType:activeModeConfiguration:
fallbackState
T@"DNDState",R,C,D,N
initWithAggregateMonitor:
meDeviceState
meDeviceStatus
dnd_locationBundle
initWithEffectiveBundle:delegate:onQueue:
_queue_refreshMonitorForDate:
monitoredRegions
hasCurrentRegion
locationManager:monitoringDidFailForRegion:withError:
locationManager:didDetermineState:forRegion:
locationManager:didUpdateLocations:
locationManager:didFailWithError:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
locationManager
availableRegions
T@"NSObject<OS_dispatch_queue>",R,N
T@"CLLocationManager",R,N
T@"<DNDSLocationLifetimeMonitorDataSource>",W,N
meDeviceService:didReceiveMeDeviceStateUpdate:
initWithMeDeviceService:
_locationManager
_meDeviceService
_untilExitMonitor
_explicitRegionMonitor
_children
T@"<DNDSLocationLifetimeMonitorDataSource>",W,N,V_dataSource
T@"CLLocationManager",R,N,V_locationManager
emptyConfiguration
dnds_locationAssertionExplicitRegionFileURL
_loadDataFromBackingStore
_queue_refreshMonitor
regionIdentifiers
_queue_takeAssertionOnEntryIntoRegion:
_saveDataToBackingStoreWithError:
_queue_invalidateAssertionOnExitFromRegion:
aggregateMonitor
locationTriggerConfigurationForLifetimeMonitor:
regions
_queue_stopMonitoringForRegion:
_queue_startMonitoringForRegion:
region
_queue_resolveEnteredRegionIdentifiersWithAssertionRegionIdentifiers:
isEqualToSet:
startMonitoringForRegion:
stopMonitoringForRegion:
modeIdentifierForRegion:
_queue_locationMonitorClientIdentifierForModeIdentifier:region:
lifetimeWithExplicitRegion:
lifetimeMonitor:takeModeAssertionWithDetails:clientIdentifier:error:
enteredRegionIdentifiersPendingExit
setEnteredRegionIdentifiersPendingExit:
setAggregateMonitor:
_currentConfiguration
_enteredRegionIdentifiers
_enteredRegionIdentifiersPendingExit
_store
_backingStore
_aggregateMonitor
T@"<DNDSAggregateLocationLifetimeMonitor>",W,N,V_aggregateMonitor
regionForRegionIdentifier:
addTriggerForModeWithIdentifier:forRegion:
_modeIdentifierByRegionIdentifier
_regionByRegionIdentifier
_initWithStore:
_initWithEnteredRegionIdentifiersPendingExit:
T@"NSSet",R,C,N,V_enteredRegionIdentifiersPendingExit
T@"NSSet",C,D,N
dnds_locationAssertionUntilExitRegionFileURL
_queue_stopMonitoringCurrentLocation
_queue_sendExpiryEventForAllLocationAssertions
_queue_beginMonitoringCurrentLocation
lastObject
_queue_geofenceLocation:
isEqualToArray:
requestLocation
coordinate
initNearbyAllowedWithCenter:radius:identifier:
setNotifyOnExit:
setNotifyOnEntry:
_queue_geofenceRegion:
hasActiveLifetimes
currentRegion
regionEntered
setActiveLifetimeAssertionUUIDs:
setHasActiveLifetimes:
setCurrentRegion:
setRegionEntered:
_currentRegion
_regionEntered
_hasActiveLifetimes
TB,R,N
numberWithInt:
initWithUUIDString:
initWithCenter:radius:identifier:
_initWithActiveLifetimeAssertionUUIDs:currentRegion:regionEntered:
center
radius
T@"CLRegion",R,C,N,V_currentRegion
T@"NSNumber",R,C,N,V_regionEntered
T@"NSNumber",R,C,N,V_hasActiveLifetimes
T@"NSArray",C,D,N
T@"CLRegion",C,D,N
sharedInstanceForBagType:
_numberForKey:
unsignedIntValue
numberWithUnsignedInt:
resolvedScheduledActivityUpdateFuzzMilliseconds
resolvedActivityUpdateDisabled
resolvedActivityUpdateCoalescingSeconds
lastUpdatedTimestamp
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodEndTimeHour
timePeriodEndTimeMinute
timePeriodWeekdays
bedtimeBehaviorEnabledSetting
_initWithLastUpdatedTimestamp:scheduleEnabledSetting:timePeriodStartTimeHour:timePeriodStartTimeMinute:timePeriodEndTimeHour:timePeriodEndTimeMinute:timePeriodWeekdays:bedtimeBehaviorEnabledSetting:
_lastUpdatedTimestamp
_scheduleEnabledSetting
_timePeriodStartTimeHour
_timePeriodStartTimeMinute
_timePeriodEndTimeHour
_timePeriodEndTimeMinute
_timePeriodWeekdays
_bedtimeBehaviorEnabledSetting
T@"NSNumber",R,C,N,V_lastUpdatedTimestamp
T@"NSNumber",R,C,N,V_scheduleEnabledSetting
T@"NSNumber",R,C,N,V_timePeriodStartTimeHour
T@"NSNumber",R,C,N,V_timePeriodStartTimeMinute
T@"NSNumber",R,C,N,V_timePeriodEndTimeHour
T@"NSNumber",R,C,N,V_timePeriodEndTimeMinute
T@"NSNumber",R,C,N,V_timePeriodWeekdays
T@"NSNumber",R,C,N,V_bedtimeBehaviorEnabledSetting
setLastUpdatedTimestamp:
setScheduleEnabledSetting:
setTimePeriodStartTimeHour:
setTimePeriodStartTimeMinute:
setTimePeriodEndTimeHour:
setTimePeriodEndTimeMinute:
setTimePeriodWeekdays:
setBedtimeBehaviorEnabledSetting:
meDeviceName
_initWithStatus:name:
_meDeviceStatus
_meDeviceName
T@"NSNumber",R,C,N,V_meDeviceStatus
T@"NSString",R,C,N,V_meDeviceName
setMeDeviceStatus:
setMeDeviceName:
placeholderModes
_initWithModePlaceholders:
_placeholderModes
T@"NSArray",R,C,N,V_placeholderModes
backingRecordKeys
fileURLWithPathComponents:
URLByAppendingPathComponent:
dnds_localAssertionBackingStoreFileURL
dnds_settingsBackingStoreFileURL
dnds_metricsBackingStoreFileURL
dnds_legacySettingsFileURL
dnds_modeConfigurationsBackingStoreFileURL
dnds_modeConfigurationsSecureBackingStoreFileURL
dnds_globalConfigurationBackingStoreFileURL
dnds_placeholderModesLocalBackingStoreFileURL
dnds_syncEngineMetadataFileURL
dnds_syncEngineLastChanceFileURL
dnds_idsSyncEngineMetadataFileURL
dnds_assertionSyncMetadataFileURL
dnds_meDeviceStoreFileURL
bs_takeObjectForKey:
upgradeDictionaryRepresentation:fromVersionNumber:toVersionNumber:
emptyResult
arrayByAddingObject:
setAssertions:
isUserInteractionClient
predicateForAnyAssertion
predicateForAssertionClientIdentifiers:
invalidationRequests
setInvalidationRequests:
sanitizeDatesForThreshold:
_resolveStore:
_cleanupStore:
_calculateUpdateResultForStore:previousStore:
resultCombiningWithResult:
filteredArrayUsingPredicate:
takeAssertionWithUUID:details:source:startDate:
sortedArrayUsingComparator:
predicateForAssertionsTakenBeforeDate:
andPredicateWithSubpredicates:
evaluateWithObject:
bs_firstObjectPassingTest:
sortUsingComparator:
setInvalidations:
orderedSetWithArray:
keysSortedByValueUsingComparator:
clientIdentifiers
UUIDs
bs_safeAddObject:
initWithAssertions:invalidations:
initWithStore:clientDetailsProvider:
store
updateResult
_updateResult
T@"DNDSModeAssertionStore",R,C,N,V_store
T@"DNDSModeAssertionUpdateResult",R,C,N,V_updateResult
sysdiagnoseDictionaryRepresentation
sysdiagnoseRecordKeys
initWithInterruptionSuppression:
detailsForInactiveDoNotDisturb
restrictedDetailsWithDetails:
_interruptionSuppression
TQ,R,N,V_interruptionSuppression
secureConfiguration
triggers
dimsLockScreen
created
hasSecureData
_initWithMode:configuration:secureConfiguration:triggers:impactsAvailability:dimsLockScreen:created:lastModified:automaticallyGenerated:hasSecureData:
shortDescription
log:withPrefix:
partitionType
log:withMessage:
_mode
_configuration
_secureConfiguration
_triggers
_impactsAvailability
_dimsLockScreen
_created
_lastModified
_automaticallyGenerated
_hasSecureData
T@"DNDSModeRecord",R,C,N,V_mode
T@"DNDSConfigurationRecord",R,C,N,V_configuration
T@"DNDSConfigurationSecureRecord",R,C,N,V_secureConfiguration
T@"DNDSModeConfigurationTriggersRecord",R,C,N,V_triggers
TQ,R,N,V_impactsAvailability
TQ,R,N,V_dimsLockScreen
T@"NSDate",R,C,N,V_created
T@"NSDate",R,C,N,V_lastModified
automaticallyGenerated
TB,R,N,GisAutomaticallyGenerated,V_automaticallyGenerated
TB,R,N,V_hasSecureData
allocWithZone:
setMode:
setSecureConfiguration:
setTriggers:
setImpactsAvailability:
setDimsLockScreen:
setCreated:
setLastModified:
setAutomaticallyGenerated:
setHasSecureData:
initWithURL:
_read
_write
initForReadingFromData:error:
initWithCoder:
recordName
_updateSystemFieldsForRecord:
_removeSystemFieldsForRecordID:
zoneID
removeItemAtURL:error:
dictionaryWithContentsOfURL:
_decodeRecordIDFromData:
_encodedRecordIDFromRecordID:
writeToURL:error:
_encodedSystemFieldsFromRecord:
initRequiringSecureCoding:
encodeSystemFieldsWithCoder:
encodedData
encodeWithCoder:
recordWithID:
addRecord:
removeRecordWithID:
removeRecordsWithZoneID:
recordIDsWithZoneID:
setMetadata:
userRecordID
setUserRecordID:
accountStatus
setAccountStatus:
isEncryptionAvailable
setEncryptionAvailable:
T@"NSData",C,N
T@"NSString",C,N
Tq,N
encryptionAvailable
TB,N,GisEncryptionAvailable
_metadata
_systemFieldsByRecordID
_url
_userRecordID
_accountStatus
_encryptionAvailable
initWithCalendarIdentifier:
systemTimeZone
setTimeZone:
scheduleIdentifier
_calendar
_aggregateMetricsWithEnabled:manuallyEnabled:numberOfNewSessions:numberOfNewManualSessions:controlCenterPhone:controlCenterWatch:type:mode:dayOfWeek:
sendMetricsHeartbeatsIfNeeded
_sendDailyHeartbeatIfNeeded
_sendWeeklyHeartbeatIfNeeded
_sendMonthlyHeartbeatIfNeeded
_metricsDayStringForDate:
metricsByDay
valueForKey:
_metricsWeekStringForDate:
metricsByWeek
_metricsMonthStringForDate:
metricsByMonth
setEnabled:
setManuallyEnabled:
numberOfSessions
intValue
setNumberOfSessions:
numberOfManualSessions
setNumberOfManualSessions:
setEnabledFromControlCenterPhone:
setEnabledFromControlCenterWatch:
setEnabledForOneHour:
setEnabledUntilEvening:
setEnabledUntilMorning:
setEnabledAtLocation:
setEnabledDuringEvent:
setEnabledDrivingMode:
setEnabledSleepMode:
setDayOfWeek:
setValue:forKey:
setMetricsByDay:
setMetricsByWeek:
setMetricsByMonth:
_writeMetricsToStore:
lastDailyHeartbeat
startOfDayForDate:
_dateForYesterday
enabled
manuallyEnabled
enabledFromControlCenterPhone
enabledFromControlCenterWatch
enabledForOneHour
enabledUntilEvening
enabledUntilMorning
enabledAtLocation
enabledDuringEvent
enabledDrivingMode
enabledSleepMode
dayOfWeek
setLastDailyHeartbeat:
lastWeeklyHeartbeat
_startOfWeekWithDate:
_startOfLastWeek
setLastWeeklyHeartbeat:
lastMonthlyHeartbeat
_startOfMonthWithDate:
_startOfLastMonth
setLastMonthlyHeartbeat:
_dateFormatter
setDateStyle:
setTimeStyle:
stringFromDate:
setLocalizedDateFormatFromTemplate:
setDay:
dateByAddingComponents:toDate:options:
components:fromDate:
weekday
dateFromComponents:
month
setMonth:
initWithLocaleIdentifier:
setLocale:
_metricsBackingStore
_metricsRecord
_initWithMinimumBreakthroughUrgency:allowedThreads:deniedThreads:
_minimumBreakthroughUrgency
_allowedThreads
_deniedThreads
T@"NSNumber",R,C,N,V_minimumBreakthroughUrgency
T@"NSSet",R,C,N,V_allowedThreads
T@"NSSet",R,C,N,V_deniedThreads
setAllowedThreads:
setDeniedThreads:
_activeDateIntervalForScheduleLifetime:assertion:date:ignoreMatchScheduleStartDate:
scheduleSettingsByModeIdentifierForScheduleLifetimeMonitor:
calendarWithIdentifier:
defaultScheduleSettings
_activeDateIntervalForScheduleLifetime:assertionStartDate:date:scheduleSettings:calendar:ignoreMatchScheduleStartDate:
creationDate
containsDate:
activeDateIntervalForScheduleLifetime:assertion:date:
nextActiveDateIntervalForScheduleLifetime:assertion:date:
calendar
setCalendar:
T@"NSCalendar",&,N,V_calendar
T@"<DNDSScheduleLifetimeMonitorDataSource>",W,D,N
modeDetailsForIdentifiers:
weakObjectsHashTable
setupPathMonitor
debounceTimer
_setReachable:
isInitialized
setInitialized:
setLastInformedReachability:
pathMonitor
_updateHandlerForPath:
_informDelegates
delegates
isReachable
lastInformedReachability
reachabilityChangedTo:
commonReachability
addDelegate:
removeDelegate:
setReachable:
_reachable
_lastInformedReachability
_initialized
_pathMonitor
_debounceTimer
_delegates
T@"NSObject<OS_nw_path_monitor>",R,N,V_pathMonitor
T@"NSObject<OS_dispatch_source>",R,N,V_debounceTimer
T@"NSHashTable",R,N,V_delegates
reachable
TB,N,GisReachable,V_reachable
TB,N,V_lastInformedReachability
initialized
TB,N,GisInitialized,V_initialized
_fixupConfigurationsIfNeeded
_inheritFromDefaultModeConfiguration:
_prepareModeConfigurationForStorage:withError:
isPlaceholder
_saveModeConfiguration:writeSecurePartition:error:
_notifyChangeOfModeConfigurationFrom:to:
_readModeConfigurationsReturningError:
modeConfigurationForModeIdentifier:
visibility
modeConfigurationForRecord:
semanticType
setModeConfiguration:forModeIdentifier:
_removedModeConfigurationRecordForModeRecord:
_writeModeConfigurationsRecord:writeSecurePartition:error:
availableModesFilteringPlaceholders:returningError:
modeConfigurationManager:didUpdateAvailableModes:
modeConfigurations
modeForRecord:
exceptionForApplicationIdentifier:thread:
exceptionForContactHandle:
sanitizedConfigurationWithContactStore:
intersectSet:
modeConfigurationManager:didModifyExceptionsForContacts:forModeConfiguration:
setVisibility:
initWithMode:configuration:triggers:
_sysdiagnoseDataShouldRedact:
removeObserver:
setAllowedContactTypes:
setDeniedContactTypes:
setAllowedContactGroups:
setDeniedContactGroups:
setAllowedApplications:
modeConfigurationStore:didUpdateAvailableModes:
initWithBackingStore:keybag:
setModeConfiguration:withError:
removeModeConfigurationForModeIdentifier:withError:
exceptionForApplication:thread:forModeIdentifier:
relevantApplicationIdentifiers
T@"<DNDSModeConfigurationManagerDelegate>",W,N,V_delegate
setLifetimeType:
setEventUniqueID:
setOnlyDuringEvent:
setOccurrenceDate:
setStartDate:
setEndDate:
dnds_stringForLifetimeType:
setScheduleIdentifier:
dnds_stringForScheduleLifetimeBehavior:
setBehavior:
setClientIdentifier:
setUUID:
setDetails:
setSource:
recordForInvalidationRequest:
lifetimeType
onlyDuringEvent
predicateType
peaceSyncDictionaryRepresentationWithDate:messageUUID:userRequestedClientIdentifierHandler:
newWithPeaceSyncDictionaryRepresentation:
messageDateForPeaceSyncDictionaryRepresentation:
configurationForRecord:
nickname
normalizePhoneNumber:
unifiedContactWithIdentifier:keysToFetch:error:
sanitizedContactWithContactStore:withError:
_initWithDetails:
interruptionInvalidationAssertionUUID
assertionUpdateClientIdentifiers
activeAssertionUpdateClientIdentifiers
wantsStateUpdates
wantsSettingsUpdates
wantsModeUpdates
wantsActiveModeUpdates
wantsGlobalConfigurationUpdates
wantsMeDeviceStateUpdates
_initWithInterruptionInvalidationAssertionUUID:assertionUpdateClientIdentifiers:activeAssertionUpdateClientIdentifiers:wantsStateUpdates:wantsSettingsUpdates:wantsModeUpdates:wantsActiveModeUpdates:wantsGlobalConfigurationUpdates:wantsMeDeviceStateUpdates:
_interruptionInvalidationAssertionUUID
_assertionUpdateClientIdentifiers
_activeAssertionUpdateClientIdentifiers
_wantsStateUpdates
_wantsSettingsUpdates
_wantsModeUpdates
_wantsActiveModeUpdates
_wantsGlobalConfigurationUpdates
_wantsMeDeviceStateUpdates
T@"NSUUID",R,C,N,V_interruptionInvalidationAssertionUUID
T@"NSSet",R,C,N,V_assertionUpdateClientIdentifiers
T@"NSSet",R,C,N,V_activeAssertionUpdateClientIdentifiers
TB,R,N,V_wantsStateUpdates
TB,R,N,V_wantsSettingsUpdates
TB,R,N,V_wantsModeUpdates
TB,R,N,V_wantsActiveModeUpdates
TB,R,N,V_wantsGlobalConfigurationUpdates
TB,R,N,V_wantsMeDeviceStateUpdates
setInterruptionInvalidationAssertionUUID:
setAssertionUpdateClientIdentifiers:
setWantsStateUpdates:
setWantsSettingsUpdates:
setWantsModeUpdates:
setWantsActiveModeUpdates:
setActiveAssertionUpdateClientIdentifiers:
setWantsGlobalConfigurationUpdates:
setWantsMeDeviceStateUpdates:
T@"NSUUID",C,D,N
TB,D,N
setLastSystemSnapshot:
activeAssertionUUIDs
lostModeState
recalculateModeForSnapshot:
activeDateIntervalByAssertionUUID
userVisibleEndDate
initWithClientIdentifier:modeIdentifier:lifetimeType:activeDateInterval:userVisibleEndDate:
lastUpdate
setOverrideModeIdentifier:
setLastCalculatedState:
initWithModeConfigurationManager:
recalculateStateForSnapshot:
lastSystemSnapshot
_lastSystemSnapshot
_lastCalculatedState
T@"DNDSStateProviderSystemSnapshot",C,V_lastSystemSnapshot
T@"DNDState",C,V_lastCalculatedState
_readPlaceholderModesReturningError:
placeholderModesWithError:
initWithBackingStore:
setClassName:forClass:
dnds_secureLegacyArchiver
setClass:forClassName:
dnds_secureLegacyUnarchiverForReadingFromData:error:
cachedBackingStoreDidPurgeCache:
initWithUnderlyingBackingStore:keybag:
platform
_initWithConfiguration:
mergeWithGlobalConfiguration:
_preventAutoReply
_bypassSettings
TQ,R,N,V_preventAutoReply
T@"DNDBypassSettings",R,C,N,V_bypassSettings
setPreventAutoReply:
setBypassSettings:
TQ,D,N
T@"DNDBypassSettings",C,D,N
T@"NSDate",C,D,N
TB,D,N,GisAutomaticallyGenerated
encryptedValues
populateCKRecord:
newWithCKRecord:
settingsWithClientSettings:creationDate:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:creationDate:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:
supportsSecureCoding
classForCoder
replacementObjectForCoder:
_creationDate
T@"NSDate",R,C,N,V_creationDate
_queue_fetchAllDevices
initWithStatus:name:
_queue_saveDataToBackingStoreWithError:
meDeviceChanged
devicesChanged
_workQueue
_calloutQueue
_meDeviceState
_storeLock
T@"DNDMeDeviceState",R,C,N
initWithEnabledSetting:
enabledSetting
applicationIdentifierMapper
applicationIdentifierForFileWithSourceApplicationIdentifier:
initWithApplicationIdentifier:enabledSetting:
destination
applicationIdentifierForSyncWithSourceApplicationIdentifier:
setHour:
setMinute:
setStartTime:
setEndTime:
setWeekdays:
initWithTimePeriod:creationDate:enabledSetting:
hour
minute
setGeoReferenceFrame:
initWithRegion:detail:enabledSetting:
geoReferenceFrame
detail
initWithTriggers:
T@"NSArray",R,C,N,V_triggers
pairedDeviceDidChange
_readSettingsReturningError:
behaviorSettings
_saveBehaviorSettings:scheduleSettings:error:
settingsManager:didReceiveUpdatedBehaviorSettings:
scheduleSettings
settingsManager:didReceiveUpdatedScheduleSettings:
syncSettings
setPairSyncEnabled:
setBehaviorSettings:
setScheduleSettings:
_writeSettingsRecord:error:
configurations
configurationForModeIdentifier:
setConfiguration:forModeIdentifier:
setConfigurations:
settingsManager:didReceiveUpdatedSyncSettings:
behaviorSettingsWithError:
scheduleSettingsWithError:
syncSettingsWithError:
isCloudSyncEnabled
isPairSyncEnabled
syncSettingsProvider:didReceiveUpdatedSyncSettings:
initWithBackingStore:contactStore:
setBehaviorSettings:withError:
phoneCallBypassSettingsWithError:
setScheduleSettings:withError:
_saveConfiguration:forModeIdentifier:error:
fallbackConfiguration
_syncSettingsProvider
T@"<DNDSSettingsManagerDelegate>",W,N,V_delegate
_initWithMetadata:data:
dictionaryWithDictionary:
isDeleted
_data
T@"DNDSIDSRecordID",R,C,N
T@"NSDate",R,C,N
deleted
TB,R,N,GisDeleted
T@"DNDSIDSRecordMetadata",R,C,N
_assertions
_invalidations
T@"NSArray",R,C,N,V_assertions
T@"NSArray",R,C,N,V_invalidations
objectAtIndexedSubscript:
currentNotificationSettingsCenter
notificationSourceWithIdentifier:
sourceSettings
notificationSettings
authorizationStatus
initWithDate:
initWithClientIdentifiers:
initWithUUIDs:
_init
evaluateWithObject:substitutionVariables:
TQ,R,D,N
decodeObjectOfClass:forKey:
encodeObject:forKey:
_date
T@"NSDate",R,C,N,V_date
setWithObjects:
decodeObjectOfClasses:forKey:
_clientIdentifiers
T@"NSArray",R,C,N,V_clientIdentifiers
_UUIDs
T@"NSArray",R,C,N,V_UUIDs
_migrateWorkoutDNDNanoPreference
workoutModeForWorkoutTriggerManager:
_isWorkoutTriggerEnabledForModeConfiguration:
_updateNanoPreferencesForRefreshWithModeConfiguration:
_configureWorkoutTriggerWithMode:
_refreshWithMode:event:
eventType
_assertionIdentifierForHealthKitWorkoutEvent:
activityUUID
healthKitWorkoutStream
isEnabled
_accessor
_isWorkoutDNDNanoPreferenceEnabled
createWorkoutModeForWorkoutTriggerManager:
setWorkoutTriggerEnabled:forWorkoutTriggerManager:
_setWorkoutDNDNanoPreferenceEnabled:
currentDevice
initWithDomain:
synchronize
boolForKey:keyExistsAndHasValidFormat:
setBool:forKey:
synchronizeNanoDomain:keys:
refreshMigratingIfNecessary
_refreshForNanoPreferenceChange
_npsManager
T@"<DNDSWorkoutTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_generateDiff
_modifiedConfigurations
_removedConfigurations
_recordIDsInModeConfigurations:
initWithRecordName:zoneID:
initWithOriginalModeConfigurations:updatedModeConfigurations:zone:
original
updated
modifiedIDs
removedIDs
_original
_updated
_modifiedIDs
_removedIDs
_zone
T@"DNDSModeConfigurationsRecord",R,C,N,V_original
T@"DNDSModeConfigurationsRecord",R,C,N,V_updated
T@"NSArray",R,C,N,V_modifiedIDs
T@"NSArray",R,C,N,V_removedIDs
T@"CKRecordZone",R,C,N,V_zone
_queue_read
_queue_write
arrayWithContentsOfURL:
_decodeRecordFromData:
_encodedDataFromRecord:
dataWithPropertyList:format:options:error:
recordsWithZoneID:
records
T@"NSDictionary",R,C,N
_queue_recordsByID
_endMonitoringForChanges
_beginMonitoringForChanges
_updateForReason:
_queue_updateToggleSyncForReason:
_queue_updateGizmoAssertionSyncWithModeAssertionUpdateContext:
syncManager:performModeAssertionUpdatesWithHandler:
currentStateForLegacyAssertionSyncManager:
lastUpdateDate
activeModeAssertionMetadata
activeDateInterval
_queue_gizmoUpdateDate
_queue_updateCompanionToggleSyncForGizmoUpdateDate:modeAssertionUpdateContext:
_queue_updateGizmoToggleSyncForState:companionUpdateDate:reason:
_queue_updateCompanionAssertionMirroringForState:
doubleForKey:keyExistsAndHasValidFormat:
dateWithTimeIntervalSinceNow:
boolForKey:
isSyncSuppressedClient
setDouble:forKey:
currentlyActivePairedDeviceForSyncManager:
lifetimeUntilEndOfScheduleWithIdentifier:
detailsWithIdentifier:modeIdentifier:lifetime:reason:
cleanupState
updateForModeAssertionUpdateResult:
updateDevices:
updateForStateUpdate:
forceUpdateAllDevices
T@"<DNDSAssertionSyncManagerDataSource>",W,N
T@"<DNDSAssertionSyncManagerDelegate>",W,N
initWithClientDetailsProvider:pairedDevice:
_updateGizmoAssertionSync
T@"<DNDSLegacyAssertionSyncManagerDataSource>",W,N,V_dataSource
T@"<DNDSAssertionSyncManagerDelegate>",W,N,V_delegate
initWithBackingStore:clientDetailsProvider:
updateModeAssertionsWithContextHandler:error:
_resolveTransactionForModeAssertionStore
timeIntervalSinceDate:
bs_differenceWithArray:
isPersistentAssertionClient
hasPrefix:
initWithBackingStoreURL:clientDetailsProvider:
clientDetailsForClientIdentifier:
_nonPersistentAssertionTransaction
sharedDaemonWorkloop
_initWithMetricsByDay:lastDailyHeartbeat:metricsByWeek:lastWeeklyHeartbeat:metricsByMonth:lastMonthlyHeartbeat:
_metricsByDay
_lastDailyHeartbeat
_metricsByWeek
_lastWeeklyHeartbeat
_metricsByMonth
_lastMonthlyHeartbeat
T@"NSDictionary",R,C,N,V_metricsByDay
T@"NSDate",R,C,N,V_lastDailyHeartbeat
T@"NSDictionary",R,C,N,V_metricsByWeek
T@"NSDate",R,C,N,V_lastWeeklyHeartbeat
T@"NSDictionary",R,C,N,V_metricsByMonth
T@"NSDate",R,C,N,V_lastMonthlyHeartbeat
T@"NSDictionary",C,D,N
T@"<DNDSDrivingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
integerForKey:keyExistsAndHasValidFormat:
recordForLegacyPrivilegedSenderType:legacyAddressBookID:
legacyPrivilegedSenderType
setInteger:forKey:
recordForLegacyBehaviorOverride:lastUpdated:
legacyBehaviorOverride
dnds_bypassSettings
dnds_setBypassSettings:
dnds_scheduleSettingsWithLastUpdated:
dnds_setScheduleSettings:
_initWithListen:send:pairedDevice:
_updateBypassSettings
_updateScheduleSettingsWithDate:
update
phoneCallBypassSettingsForSyncManager:
scheduleSettingsForSyncManager:
_propagateBypassSettings:
_propagateScheduleSettings:
syncManager:didReceiveUpdatedScheduleSettings:
syncManager:didReceiveUpdatedPhoneCallBypassSettings:
sendManagerForPairedDevice:
receiveManagerForPairedDevice:
T@"<DNDSSettingsSyncManagerDataSource>",W,N
T@"<DNDSSettingsSyncManagerDelegate>",W,N
_listen
_send
T@"<DNDSSettingsSyncManagerDataSource>",W,N,V_dataSource
T@"<DNDSSettingsSyncManagerDelegate>",W,N,V_delegate
hideApplicationBadges
_initWithType:suppressionType:minimumBreakthroughUrgency:hideApplicationBadges:
defaultConfigurationType
defaultSuppressionType
defaultMinimumBreakthroughUrgency
_type
_suppressionType
_hideApplicationBadges
T@"NSNumber",R,C,N,V_type
T@"NSNumber",R,C,N,V_suppressionType
T@"NSNumber",R,C,N,V_hideApplicationBadges
setSuppressionType:
setHideApplicationBadges:
initWithIsFocused:
initWithFocusStatus:
_setLaunchId:
initWithIntent:
setRequiresTCC:
_cleanupWithError:completion:
setTimeoutHandler:
underlyingError
handleIntentWithCompletionHandler:
resumeWithCompletionHandler:
_connection
_applicationRecord
_available
_completionFiredFlag
_invalidationRequests
T@"NSArray",R,C,N,V_invalidationRequests
isIOS14SyncSuppressedClient
isIOS14EraOS
bs_compactMap:
syncManager:updateOutboundModeAssertion:
setObject:atIndexedSubscript:
supportsKettle
isInternalScheduled
syncManager:scheduleSettingsForModeIdentifier:
currentCalendar
lifetimeWithDateInterval:
bs_map:
filterForSyncToPairedDevice:clientDetailsProvider:
unresolveSourcesForSyncToPairedDevice:
resolveSourcesForSyncFromPairedDevice:
updateConfigurationModificationDatesWithDataSource:syncManager:
downgradeAssertionsIfNeededForSyncToPairedDevice:dataSource:syncManager:
_loadMetadataFromBackingStore
_maintainMetadataBackingStore
_saveMetadataToBackingStore
_queue_updateDevices
pairedDevicesForSyncManager:
updateDevices:force:shouldFuzz:
isClientScheduled
isUserInitiated
isUserInvalidated
floatValue
_queue_sendStateSnapshotToPairedDevices:force:
isCloudSyncDisabledForSyncManager:
_queue_handleMessage:withVersionNumber:fromDeviceIdentifier:
_queue_handleDidSendRequestIdentifier:withSuccess:error:
syncManager:deviceForDeviceIdentifier:
lastReceivedStoreDate
lastSentStoreDate
predicateForModeAssertionsWithDeviceIdentifier:
initWithServiceType:protocolVersion:store:
arrayWithCapacity:
serviceType
protocolVersion
initWithLastUpdateDate:deviceIdentifiers:
pendingLastSentStoreDate
enumerateKeysAndObjectsUsingBlock:
syncManager:prepareForSyncToDevices:completionHandler:
deviceIdentifiers
bs_each:
removeObjectsForKeys:
dictionaryWithCapacity:
initWithClientDetailsProvider:localSyncService:cloudSyncService:
_fuzzTimer
_localSyncService
_cloudSyncService
_metadataBackingStore
_timerQueuedDevices
_timerQueuedForceUpdate
_timerCurrentDelay
_timerQueuedTransaction
_timerLock
T@"<DNDSAssertionSyncManagerDataSource>",W,N,V_dataSource
_lastUpdateDate
_deviceIdentifiers
T@"NSDate",R,C,N,V_lastUpdateDate
T@"NSSet",R,C,N,V_deviceIdentifiers
_protocolVersion
_serviceType
TQ,R,N,V_protocolVersion
TQ,R,N,V_serviceType
T@"DNDSMutableModeAssertionStore",R,C,N,V_store
_initWithLastReceivedStoreDate:lastSentStoreDate:pendingLastSentStoreDate:
_lastReceivedStoreDate
_lastSentStoreDate
_pendingLastSentStoreDate
T@"NSMutableDictionary",R,C,N,V_lastReceivedStoreDate
T@"NSMutableDictionary",R,C,N,V_lastSentStoreDate
T@"NSMutableDictionary",R,C,N,V_pendingLastSentStoreDate
dnds_setSafeLocalDateForTimestamp:key:
setModeConfigurationModifiedDate:
setUserVisibleEndDate:
modeConfigurationModifiedDate
setLatitude:
setLongitude:
setRadius:
setRegionIdentifier:
latitude
longitude
regionIdentifier
setDeviceIdentifier:
setAssertion:
setInvalidationDate:
setReasonOverride:
setRequestDate:
setPredicateType:
setDate:
setClientIdentifiers:
setUUIDs:
recordWithEncodedInfo:error:
sanitizeContacts:
setAllowedContacts:
setDeniedContacts:
needsSanitization
fetchContactsWithIdentifiers:error:
_donateEventForStateUpdate:
initWithMode:semanticModeIdentifier:starting:modeUpdateReason:modeSemanticType:modeUpdateSource:
sendEvent:
handleStateUpdate:
_computedModeStream
isICloudEnabled
pairingIdentifier
pairingDataStore
deviceName
osBuild
initWithLocalDeviceIdentifier:deviceClass:syncProtocolVersion:iOS14EraOS:pairingIdentifier:pairingDataStore:
initWithCloudDeviceIdentifier:deviceClass:syncProtocolVersion:
setOsBuild:
setDeviceName:
setICloudEnabled:
_iOS14EraOS
_iCloudEnabled
_deviceIdentifier
_deviceClass
_deviceName
_osBuild
_syncProtocolVersion
_syncServiceType
_pairingIdentifier
_pairingDataStore
T@"NSUUID",R,C,N,V_pairingIdentifier
T@"NSString",R,C,N,V_pairingDataStore
iOS14EraOS
TB,R,N,GisIOS14EraOS,V_iOS14EraOS
iCloudEnabled
TB,N,GisICloudEnabled,V_iCloudEnabled
T@"NSString",C,N,V_deviceName
T@"NSString",C,N,V_osBuild
T@"NSString",R,C,N,V_deviceIdentifier
TQ,R,N,V_deviceClass
TQ,R,N,V_syncProtocolVersion
TQ,R,N,V_syncServiceType
_initWithUUID:date:eventBehavior:clientIdentifier:outcome:reason:
_descriptionForRedacted:
redactedDescription
_eventBehavior
_clientIdentifier
_outcome
T@"DNDClientEventBehavior",R,C,N,V_eventBehavior
T@"NSString",R,C,N,V_clientIdentifier
TQ,R,N,V_outcome
name
symbolImageName
tintColorName
initWithName:modeIdentifier:symbolImageName:tintColorName:semanticType:visibility:identifier:
_name
setName:
setSymbolImageName:
setTintColorName:
setSemanticType:
_initWithEnabled:manuallyEnabled:numberOfSessions:numberOfManualSessions:enabledFromControlCenterPhone:enabledFromControlCenterWatch:enabledForOneHour:enabledUntilEvening:enabledUntilMorning:enabledAtLocation:enabledDuringEvent:enabledDrivingMode:enabledSleepMode:
bs_boolForKey:
T@"NSNumber",R,C,N
_enabled
_manuallyEnabled
_numberOfSessions
_numberOfManualSessions
_enabledFromControlCenterPhone
_enabledFromControlCenterWatch
_enabledForOneHour
_enabledUntilEvening
_enabledUntilMorning
_enabledAtLocation
_enabledDuringEvent
_enabledDrivingMode
_enabledSleepMode
TB,R,N,V_enabled
TB,R,N,V_manuallyEnabled
T@"NSNumber",R,C,N,V_numberOfSessions
T@"NSNumber",R,C,N,V_numberOfManualSessions
TB,R,N,V_enabledFromControlCenterPhone
TB,R,N,V_enabledFromControlCenterWatch
TB,R,N,V_enabledForOneHour
TB,R,N,V_enabledUntilEvening
TB,R,N,V_enabledUntilMorning
TB,R,N,V_enabledAtLocation
TB,R,N,V_enabledDuringEvent
TB,R,N,V_enabledDrivingMode
TB,R,N,V_enabledSleepMode
TB,N
T@"NSNumber",C,N
_initWithEnabled:manuallyEnabled:numberOfSessions:numberOfManualSessions:enabledFromControlCenterPhone:enabledFromControlCenterWatch:enabledForOneHour:enabledUntilEvening:enabledUntilMorning:enabledAtLocation:enabledDuringEvent:enabledDrivingMode:enabledSleepMode:dayOfWeek:
_dayOfWeek
T@"NSNumber",R,C,N,V_dayOfWeek
setScreenShared:
setScreenMirrored:
_presentationModeEnabled
_screenShared
_screenMirrored
presentationModeEnabled
TB,R,N,GisPresentationModeEnabled
screenShared
TB,N,GisScreenShared
screenMirrored
TB,N,GisScreenMirrored
dnds_lifetimeTypeValue
dnds_scheduleLifetimeBehaviorValue
_featureEnabled
sleepingModeForSleepingTriggerManager:
_configureSleepingTriggerWithMode:
sleepModeChangeReason
sleepModeState
expectedEndDate
sleepModeStream
timestamp
T@"<DNDSSleepingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
ephemeralSessionConfiguration
sharedURLCache
setURLCache:
setRequestCachePolicy:
setHTTPShouldUsePipelining:
setUnderlyingQueue:
sessionWithConfiguration:delegate:delegateQueue:
setSessionDescription:
defaultWorkspace
_queue_monitorBundleIdentifiers:
_fallbackAppInfoForBundleIdentifier:
_sanitizeAppInfo:
_cacheURL
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
componentsWithString:
componentsJoinedByString:
queryItemWithName:value:
currentLocale
countryCode
setQueryItems:
requestWithURL:cachePolicy:timeoutInterval:
requestWithURL:
_parseAppStoreResponseForBundleIdentifiers:response:data:error:
dataTaskWithRequest:completionHandler:
_fetchIconForAppInfo:timeoutInterval:completionHandler:
pathExtension
copyItemAtURL:toURL:error:
setCachedIconURL:
downloadTaskWithRequest:completionHandler:
setDisplayName:
setApplicationIdentifier:
setStoreIconURL:
_queue_removeCachedDataForAppInfo:
_installedBundleIdentifiers
_queue_removeUnusedAppInfo
_queue_fetchMissingAppInfo
_queue_bundleIdentifiersWithMissingInfo
_fetchIconsForAppInfo:timeoutInterval:completionHandler:
_fetchAppStoreInfoForBundleIdentifiers:timeoutInterval:limit:completionHandler:
_fallbackAppInfoByBundleIdentifier
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
databaseWasRebuilt
initWithKeybag:
monitorApplicationIdentifiers:
appInfoForBundleIdentifier:
appInfoForBundleIdentifiers:
_monitoredBundleIdentifiers
_relevantBundleIdentifiers
_inflightBundleIdentifiers
_appInfoByBundleIdentifier
_urlSession
scheduleSettingsByModeIdentifierForScheduleManager:
_refreshWithScheduleSettingsByModeIdentifier:context:
_scheduleManagerClientIdentifierForModeIdentifier:
_refreshWithScheduleSettings:modeIdentifier:currentScheduleAssertion:context:
lifetimeMatchingScheduleWithIdentifier:
initWithModeAssertionManager:
_modeAssertionManager
_currentScheduleSettingsByModeIdentifier
T@"<DNDSScheduleManagerDataSource>",W,N,V_dataSource
decodeIntegerForKey:
initWithOverrideType:mode:effectiveIntervals:
overrideType
encodeInteger:forKey:
effectiveIntervals
TB,R
_overrideType
_effectiveIntervals
TQ,R,N,V_overrideType
TQ,R,N,V_mode
T@"NSArray",R,C,N,V_effectiveIntervals
setDataSource:forZoneName:
standardUserDefaults
dataForKey:
_lock_writeRecord:writePartition:error:
_notifyDelegateOfAvailableModes
zoneName
recordType
_lock_existingConfigurations
mergeWithModeConfiguration:
diffObject:againstObject:withDescription:
hasDifferences
_lock_updateModeConfigurationWithCKRecord:
initWithIdentifier:zone:
_lock_removeModeConfigurationWithModeIdentifier:
_lock_populateCKRecord:
_lock_removeModeConfigurationWithCKRecordID:
_purgeRecordIDs:
_lock_modeIdentifiers
initWithZoneName:
_purgeData
_lock_populateDNDSIDSRecord:
newWithDNDSIDSRecord:
_lock_updateModeConfigurationWithDNDSIDSRecord:
_lock_recordIDsForIDSSyncEngine:
defaultModeConfiguration
_lock_mutableExistingConfigurations
_lock_modeConfigurationForDNDSIDSRecordID:
populateDNDSIDSRecord:
_lock_modeConfigurationForCKRecordID:
_lock_modeConfigurationForModeIdentifier:
_lock_updateModeConfigurationWithConfiguration:
_lock_purgeData
_lock_purgeRecordIDs:
syncEngine:recordTypeForRecordID:
syncEngine:prepareRecordToSave:
syncEngine:resolveConflictBetweenClientRecord:andServerRecord:
syncEngine:failedToDeleteRecordWithID:error:
syncEngine:didFetchRecord:
syncEngine:recordWithIDWasDeleted:
syncEngine:wantsRecord:
syncEngine:zoneWithIDWasDeleted:removingRecordIDs:
recordIDsForSyncEngine:
purgeRecordsForSyncEngine:
T@"<DNDSModeConfigurationsStoreDelegate>",W,N
setContactHistoryToken:
T@"NSSet",R,C,N
initWithBackingStore:syncEngine:idsSyncEngine:
_contactMonitor
_syncEngine
_idsSyncEngine
_contactHistoryToken
T@"<DNDSModeConfigurationsStoreDelegate>",W,N,V_delegate
T@"NSData",C,N,V_contactHistoryToken
_loadPreloadBundles
clientDetailsForIdentifier:applicationBundleURL:
_defaultModuleDirectories
URLByAppendingPathExtension:
detailsForBundleAtURL:
detailsForClientIdentifier:applicationBundleURL:
isResolutionContextAssumingDeviceUILocked
initWithClientIdentifier:identifiers:resolutionContextAssumingDeviceUILocked:userInteractionClient:persistentAssertionClient:syncSuppressedClient:iOS14SyncSuppressedClient:
pathWithComponents:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
findClientDetailsForIdentifier:
_detailsByIdentifier
deviceType
productBuildVersion
characterSetWithCharactersInString:
invertedSet
rangeOfCharacterFromSet:
substringFromIndex:
stringByRemovingCharactersFromSet:
operatingSystemVersion
_dnds_pairedDeviceClass
_dnds_minorBuildVersion
_dnds_syncProtocolVersion
_dnds_isIOS14EraOS
_queue_updatePairedState
_queue_updateCloudDevices
cloudDevices
pairedDevice
_getCurrentPairedDevice
setPairedDevice:
pairedDeviceStateMonitor:pairingChangedFromDevice:toDevice:
getActivePairedDevice
devices
uniqueIDOverride
_pairedDeviceStateChanged:
isLocallyPaired
setWithSet:
setCloudDevices:
pairedDeviceStateMonitor:cloudPairingChangedFromDevices:toDevices:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithLocalIDSService:cloudIDSService:
pairedDeviceForDeviceIdentifier:
_localService
_cloudService
_pairedDeviceDidChangeNotificationToken
_cloudDevices
T@"DNDSPairedDevice",C,V_pairedDevice
T@"NSSet",C,V_cloudDevices
T@"<DNDSPairedDeviceStateMonitorDelegate>",W,N,V_delegate
_initWithSymbolImageName:tintColorName:name:modeIdentifier:semanticType:visibility:identifier:
_symbolImageName
_tintColorName
_modeIdentifier
_semanticType
_visibility
_identifier
T@"NSString",R,C,N,V_symbolImageName
T@"NSString",R,C,N,V_tintColorName
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_modeIdentifier
Tq,R,N,V_semanticType
TQ,R,N,V_visibility
T@"NSUUID",R,C,N,V_identifier
configurationOfType:
setAllowedApplicationIdentifiers:
setDeniedApplicationIdentifiers:
setDeniedApplications:
makeSecureRecord
configurationForRecord:secureRecord:
_initWithModeConfigurations:
_modeConfigurations
T@"NSDictionary",R,C,N,V_modeConfigurations
setModeConfigurations:
_queue_resume
_queue_sendMessage:withVersionNumber:messageType:toDestinations:requestIdentifier:error:
deviceForFromID:
outgoingResponseIdentifier
_queue_handleIncomingMessage:deviceIdentifier:
addDelegate:queue:
sendMessage:toDestinations:priority:options:identifier:error:
T@"<DNDSSyncServiceDelegate>",W,N
initWithIDSService:
T@"<DNDSSyncServiceDelegate>",W,N,V_delegate
getBytes:length:
_initWithSenderConfiguration:allowedApplications:deniedApplications:
_senderConfiguration
_allowedApplications
_deniedApplications
T@"DNDSSenderConfigurationRecord",R,C,N,V_senderConfiguration
T@"NSDictionary",R,C,N,V_allowedApplications
T@"NSSet",R,C,N,V_deniedApplications
T@"DNDSSenderConfigurationRecord",C,D,N
initWithStartComponents:endComponents:calendarIdentifier:repeatInterval:identifier:
startComponents
endComponents
calendarIdentifier
repeatInterval
_startComponents
_endComponents
_calendarIdentifier
_repeatInterval
T@"NSDateComponents",R,C,N,V_startComponents
T@"NSDateComponents",R,C,N,V_endComponents
T@"NSString",R,C,N,V_calendarIdentifier
TQ,R,N,V_repeatInterval
initWithPairSyncEnabled:cloudSyncEnabled:
_pairSyncEnabled
_cloudSyncEnabled
pairSyncEnabled
TB,R,N,GisPairSyncEnabled,V_pairSyncEnabled
cloudSyncEnabled
TB,R,N,GisCloudSyncEnabled,V_cloudSyncEnabled
setCloudSyncEnabled:
TB,D,N,GisPairSyncEnabled
TB,D,N,GisCloudSyncEnabled
_initWithSnapshot:
_initWithAssertions:activeAssertionUUIDs:activeDateIntervalByAssertionUUID:interruptionBehaviorSetting:lostModeState:lastUpdate:
_activeAssertionUUIDs
_activeDateIntervalByAssertionUUID
_lostModeState
_lastUpdate
T@"NSArray",R,C,N,V_activeAssertionUUIDs
T@"NSDictionary",R,C,N,V_activeDateIntervalByAssertionUUID
TQ,R,N,V_interruptionBehaviorSetting
TQ,R,N,V_lostModeState
T@"NSDate",R,C,N,V_lastUpdate
setActiveAssertionUUIDs:
setActiveDateIntervalByAssertionUUID:
setLostModeState:
setLastUpdate:
garbageCollect
_parseDictionary:
initWithRecordID:lastModified:deleted:
_forgetSyncDatesForRecordID:
_forgetSyncDatesForDevicesWithoutInitialSync
_forgetSyncDatesForOutdatedDevices
_forgetObsoleteTombstones
_isMetadataValidAtDate:
_areSyncDatesValidAtDate:
_isPairedDeviceOutdated:
_canTombstoneBeRemovedWithRecordID:
_forgetRecordID:
_forgetMetadataForRecordID:
hasMetadataForPairedDeviceIdentifier:
initWithDeviceObsoletionDuration:tombstoneObsoletionDuration:
_recordMetadataByRecordID
_recordIDSyncDatesByPairedDeviceIdentifier
_initialSyncPairedDeviceIdentifiers
_deviceObsoletionDuration
_tombstoneObsoletionDuration
_recordWithEncodedInfo:error:
bs_firstObjectOfClass:
predicateForiOSLegacyIdentifier:
requestAccessForEntityType:completionHandler:
groupsMatchingPredicate:error:
dnds_assertionReasonValue
dnds_stringForAssertionReason:
dnds_invalidationReasonValue
dnds_stringForInvalidationReason:
dnds_invalidationReasonOverrideValue
dnds_stringForInvalidationReasonOverride:
dnds_predicateTypeValue
dnds_stringForPredicateType:
recordForAssertion:
recordForInvalidation:
T@"NSArray",&,N,V_assertions
T@"NSArray",&,N,V_invalidations
T@"NSArray",&,N,V_invalidationRequests
recordForAssertionDetails:
recordForAssertionSource:
_startDate
T@"NSString",&,N,V_UUID
T@"NSNumber",&,N,V_startDate
T@"DNDSModeAssertionDetailsRecord",&,N,V_details
T@"DNDSModeAssertionSourceRecord",&,N,V_source
recordForAssertionLifetime:
_modeConfigurationModifiedDate
_userVisibleEndDate
_lifetime
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_modeIdentifier
T@"NSNumber",&,N,V_modeConfigurationModifiedDate
T@"NSNumber",&,N,V_userVisibleEndDate
T@"DNDSModeAssertionLifetimeRecord",&,N,V_lifetime
T@"NSString",&,N,V_reason
initWithEventUniqueID:occurrenceDate:onlyDuringEvent:
initWithDateInterval:
initWithScheduleIdentifier:behavior:
initWithRegion:
_lifetimeType
_eventUniqueID
_occurrenceDate
_onlyDuringEvent
_endDate
_scheduleIdentifier
_behavior
_latitude
_longitude
_radius
_regionIdentifier
T@"NSString",&,N,V_lifetimeType
T@"NSString",&,N,V_eventUniqueID
T@"NSNumber",&,N,V_occurrenceDate
T@"NSNumber",&,N,V_onlyDuringEvent
T@"NSNumber",&,N,V_endDate
T@"NSString",&,N,V_scheduleIdentifier
T@"NSString",&,N,V_behavior
T@"NSNumber",&,N,V_latitude
T@"NSNumber",&,N,V_longitude
T@"NSNumber",&,N,V_radius
T@"NSString",&,N,V_regionIdentifier
T@"NSString",&,N,V_clientIdentifier
T@"NSString",&,N,V_deviceIdentifier
recordForInvalidationDetails:
_assertion
_invalidationDate
T@"DNDSModeAssertionRecord",&,N,V_assertion
T@"NSNumber",&,N,V_invalidationDate
T@"DNDSModeAssertionInvalidationDetailsRecord",&,N,V_details
T@"NSString",&,N,V_reasonOverride
recordForInvalidationPredicate:
T@"DNDSModeAssertionInvalidationPredicateRecord",&,N,V_predicate
T@"NSNumber",&,N,V_requestDate
_predicateType
T@"NSString",&,N,V_predicateType
T@"NSNumber",&,N,V_date
T@"NSArray",&,N,V_clientIdentifiers
T@"NSArray",&,N,V_UUIDs
mindfulnessModeForMindfulnessTriggerManager:
_configureTriggerWithMode:
stateType
mindfulnessStream
sessionType
T@"<DNDSMindfulnessTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_detailsForClientIdentifier:bundleInfoDictionary:
_resolutionContextAssumingDeviceUILocked
_userInteractionClient
_persistentAssertionClient
_syncSuppressedClient
_iOS14SyncSuppressedClient
_identifiers
T@"NSArray",R,C,N,V_identifiers
resolutionContextAssumingDeviceUILocked
TB,R,N,GisResolutionContextAssumingDeviceUILocked,V_resolutionContextAssumingDeviceUILocked
userInteractionClient
TB,R,N,GisUserInteractionClient,V_userInteractionClient
persistentAssertionClient
TB,R,N,GisPersistentAssertionClient,V_persistentAssertionClient
syncSuppressedClient
TB,R,N,GisSyncSuppressedClient,V_syncSuppressedClient
iOS14SyncSuppressedClient
TB,R,N,GisIOS14SyncSuppressedClient,V_iOS14SyncSuppressedClient
_isCloudSyncPreferenceEnabled
_updatePairSyncPreferences
_updateCloudSyncPreferences
_lock_isCloudSyncPreferenceEnabled
_lock_accessor
_lock_updateSyncSettingsIfNewSettingsDiffer:
_lock_updatePairSyncPreferences
_lock_updateCompanionCloudSyncPreference
_lock_setCompanionCloudSyncPreferenceEnabled:
isPairedWatch
_lock_isPairSyncPreferenceEnabled
isPaired
addObserver:forKeyPath:options:context:
setSyncSettings:
observeValueForKeyPath:ofObject:change:context:
setPairedWatch:
_pairedWatch
_syncSettings
T@"DNDSSyncSettings",C,V_syncSettings
pairedWatch
TB,GisPairedWatch,V_pairedWatch
T@"<DNDSSyncSettingsProviderDelegate>",W,N,V_delegate
_initWithContext:
contactProvider
redactSensitiveData
_destination
_partitionType
_redactSensitiveData
_applicationIdentifierMapper
TQ,R,N,V_destination
TQ,R,N,V_partitionType
TB,R,N,V_redactSensitiveData
T@"<DNDSContactProviding>",R,N,V_contactProvider
T@"<DNDSApplicationIdentifierMapping>",R,N,V_applicationIdentifierMapper
setDestination:
setPartitionType:
setRedactSensitiveData:
setContactProvider:
setApplicationIdentifierMapper:
T@"<DNDSContactProviding>",&,D,N
T@"<DNDSApplicationIdentifierMapping>",&,D,N
drivingModeForDrivingTriggerManager:
gamingModeForGamingTriggerManager:
modesSupportingSmartEntryForSmartTriggerManager:
_createDefaultModeForWorkoutTriggerIfNecessary
predicateWithFormat:
predicateForModeAssertionsWithUUIDs:
predicateForModeAssertionsWithModeIdentifiersNotContainedIn:
predicateForModeAssertionsWithLifetimeClass:
predicateForModeAssertionsTakenBeforeDate:
_initWithBehaviorSettings:phoneCallBypassSettings:scheduleSettings:configurations:
_behaviorSettings
_phoneCallBypassSettings
_scheduleSettings
_configurations
T@"DNDSBehaviorSettingsRecord",R,C,N,V_behaviorSettings
T@"DNDSBypassSettingsRecord",R,C,N,V_phoneCallBypassSettings
T@"DNDSScheduleSettingsRecord",R,C,N,V_scheduleSettings
T@"DNDSConfigurationsRecord",R,C,N,V_configurations
T@"DNDSBehaviorSettingsRecord",C,D,N
T@"DNDSBypassSettingsRecord",C,D,N
T@"DNDSScheduleSettingsRecord",C,D,N
T@"DNDSConfigurationsRecord",C,D,N
_macOSBundleIDForiOSBundleID:
_iOSBundleIDForMacOSBundleID:
applicationIdentifierForTargetPlatform:withSourceApplicationIdentifier:
_preferModeAssertion:toModeAssertion:
_priorityForModeAssertion:
domain
code
dnds_outOfSpaceError
TB,R,D,N,Gdnds_isOutOfSpaceError
setEvent:forKey:onStream:
registerForStream:queue:handler:
stringWithUTF8String:
serviceIdentifier
start
registerTimerHandlerWithServiceIdentifier:handler:
setTimer:
_timerHandlersByToken
_initWithAllowedContactTypes:deniedContactTypes:allowedContactGroups:deniedContactGroups:allowedContacts:deniedContacts:phoneCallBypassSettings:
_allowedContactTypes
_deniedContactTypes
_allowedContactGroups
_deniedContactGroups
_allowedContacts
_deniedContacts
T@"NSSet",R,C,N,V_allowedContactTypes
T@"NSSet",R,C,N,V_deniedContactTypes
T@"NSSet",R,C,N,V_allowedContactGroups
T@"NSSet",R,C,N,V_deniedContactGroups
T@"NSSet",R,C,N,V_allowedContacts
T@"NSSet",R,C,N,V_deniedContacts
_initWithRecordID:
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_zone
_initWithContactIdentifier:firstName:middleName:lastName:nickName:organizationName:phoneNumbers:emailAddresses:
_contactIdentifier
_firstName
_middleName
_lastName
_nickName
_organizationName
_phoneNumbers
_emailAddresses
T@"NSString",R,C,N,V_contactIdentifier
T@"NSString",R,C,N,V_firstName
T@"NSString",R,C,N,V_middleName
T@"NSString",R,C,N,V_lastName
T@"NSString",R,C,N,V_nickName
T@"NSString",R,C,N,V_organizationName
T@"NSSet",R,C,N,V_phoneNumbers
T@"NSSet",R,C,N,V_emailAddresses
backingStoreWithFileURL:secureFileURL:
triggersForModeIdentifier:
modeForModeIdentifier:
_modeConfigurationsByModeIdentifier
setMode:forModeIdentifier:
setTriggers:forModeIdentifier:
initWithMetadataStore:lastChanceDataStore:keybag:syncEnabled:
initWithMetadataStore:lastChanceDataStore:syncEngine:keybag:syncEnabled:
containerWithIdentifier:
_updateAccountWithCurrentSyncEnabledState
_cloudKitAccountChanged:
_lock_isSyncAvailable
_lock_isSyncEnabled
_updateAccountWithSyncEnabledState:
_initialSyncForDataSource:withZoneName:
_retryLastChanceRecordsForDataSource:withZoneName:
_zoneIDForRecord:
_lock_dataSourceForZoneID:
initWithZoneID:
addRecordZonesToSave:recordZoneIDsToDelete:
hasPendingModifications
handleFetchedRecord:
userInfo
syncEngine:zoneWithIDWasPurged:
initWithRecordType:recordID:
handleDeletedRecordID:
removeZoneWithID:
purgeZoneWithID:
_retryLastChanceRecords
privateCloudDatabase
initWithDatabase:dataSource:metadata:
setApsMachServiceName:
initWithConfiguration:
_accountUpdateQueue_updateAccountWithSyncEnabledState:
_migrateOldStoresWithSyncEnabledState:
_lock_isSyncPreferenceEnabled
_lock_currentUserRecordID
_lock_encryptionAvailable
_handleAccountFetchWithUpdatedUserRecordID:updatedAccountStatus:updatedEncryptionAvailable:updatedSyncEnabled:
_fetchAccountStateWithCompletionHandler:
_lock_destroySyncEngine
_lock_setCurrentAccountStatus:
_purgeDataFromDataSources
accountStatusWithCompletionHandler:
deviceToDeviceEncryptionAvailability
fetchUserRecordIDWithCompletionHandler:
accountInfoWithCompletionHandler:
_lock_setCurrentUserRecordID:
_lock_setEncryptionAvailable:
_lock_startSyncEngine
_initialSyncForDataSources
moveItemAtURL:toURL:error:
syncEngine:recordToSaveForRecordID:
syncEngine:didSaveRecord:
syncEngine:failedToSaveRecord:error:
syncEngine:didDeleteRecordWithID:
syncEngine:recordWithIDWasDeleted:recordType:
syncEngine:didUpdateMetadata:
syncEngine:didSaveRecordZone:
syncEngine:didDeleteRecordZoneWithID:
syncEngine:failedToFetchChangesForRecordZoneID:error:
syncEngine:failedToSaveRecordZone:error:
syncEngine:failedToDeleteRecordZoneWithID:error:
syncEngine:zoneWithIDChanged:
syncEngine:zoneWithIDWasDeleted:
cloudSyncState
isSyncAvailable
isSyncEnabled
isSyncPreferenceEnabled
setSyncPreferenceEnabled:
setTesting:
sendChangesWithCompletionHandler:
fetchChanges:withCompletionHandler:
sync:withCompletionHandler:
hasLocalChanges
syncEngine:shouldFetchChangesForZoneID:
_lock_dataSources
_lock_currentAccountStatus
_lock_dataSourceForRecord:
_accountUpdateQueue
_sourcesByZoneName
_lastChanceStore
_state
_allowSyncEngineCreation
_container
syncPreferenceEnabled
TB,N,GisSyncPreferenceEnabled
syncEnabled
TB,R,N,GisSyncEnabled
syncAvailable
TB,R,N,GisSyncAvailable
_initWithRecordMetadata:
_recordID
_deleted
T@"DNDSIDSRecordID",R,C,N,V_recordID
TB,R,N,GisDeleted,V_deleted
setRecordID:
setDeleted:
T@"DNDSIDSRecordID",C,D,N
TB,D,N,GisDeleted
setServiceIdentifier:
isUserVisible
setUserVisible:
_userVisible
_serviceIdentifier
T@"NSDate",C,N,V_date
T@"NSString",C,N,V_serviceIdentifier
userVisible
TB,N,GisUserVisible,V_userVisible
isControllerConnected
gameControllerStream
numberOfControllersConnected
T@"<DNDSGamingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
weakToStrongObjectsMapTable
remoteTarget
deliverStateUpdate:
remoteServiceProvider:activeAssertionWithClientIdentifer:error:
deliverActiveModeAssertion:stateUpdate:clientIdentifiers:
_iterateClientConnectionsToSendWithHandler:
deliverActiveModeAssertionUpdate:invalidation:clientIdentifiers:
deliverUpdatedBehaviorSettings:
deliverUpdatedPhoneCallBypassSettings:
deliverUpdatedPairSyncState:
deliverUpdatedPreventAutoReplySetting:
deliverUpdatedScheduleSettings:
deliverAllModes:
deliverAvailableModes:
deliverMeDeviceState:
dnds_hasAnyValidEntitlement
dnds_hasBehaviorResolutionEntitlementForClientIdentifier:
_clientDetailsForClientIdentifier:clientConnection:
remoteServiceProvider:resolveBehaviorForEventDetails:clientDetails:date:error:
dnds_hasEntitlementsToRequestAssertionWithDetails:clientIdentifier:
remoteServiceProvider:takeModeAssertionWithDetails:clientIdentifier:error:
_registerOrMutateConnectionDetailsForClientConnection:handler:
dnds_hasModeAssertionEntitlementForClientIdentifier:
remoteServiceProvider:invalidateModeAssertionForClientIdentifier:reason:reasonOverride:details:error:
remoteServiceProvider:assertionWithClientIdentifer:error:
remoteServiceProvider:latestInvalidationWithClientIdentifer:error:
dnds_hasUserRequestedModeAssertionEntitlementForClientIdentifier:
remoteServiceProvider:invalidateAllModeAssertionsTakenBeforeDate:forReason:clientIdentifier:error:
remoteServiceProvider:allActiveModeAssertionsWithError:
setByAddingObject:
dnds_hasStateRequestEntitlementForClientIdentifier:
_queryStateWithCompletionHandler:
dnds_hasStateUpdatesEntitlementForClientIdentifier:
remoteServiceProvider:currentStateWithError:
dnds_hasAuxiliaryStateModificationEntitlementForClientIdentifier:
remoteServiceProvider:setScreenIsShared:screenIsMirrored:withError:
dnds_hasSettingsRequestEntitlementForClientIdentifier:
remoteServiceProvider:behaviorSettingsWithError:
dnds_hasSettingsModificationEntitlementForClientIdentifier:
remoteServiceProvider:setBehaviorSettings:withError:
remoteServiceProvider:scheduleSettingsWithError:
remoteServiceProvider:setScheduleSettings:withError:
dnds_hasSettingsUpdatesEntitlementForClientIdentifier:
dnds_hasModeConfigurationModificationEntitlementForClientIdentifier:
remoteServiceProvider:setPreventAutoReply:withError:
remoteServiceProvider:getPreventAutoReplyReturningError:
remoteServiceProvider:getCloudSyncStateReturningError:
remoteServiceProvider:setCloudSyncPreferenceEnabled:withError:
remoteServiceProvider:getPairSyncStateReturningError:
remoteServiceProvider:setPairSyncPreferenceEnabled:withError:
remoteServiceProvider:didChangeFocusStatusSharingSettingForApplicationIdentifier:
remoteServiceProvider:setModeConfiguration:withError:
remoteServiceProvider:removeModeConfigurationWithModeIdentifier:withError:
dnds_hasModeConfigurationRequestEntitlementForClientIdentifier:
remoteServiceProvider:modeConfigurationsWithError:
remoteServiceProvider:modeConfigurationForModeIdentifier:withError:
remoteServiceProvider:allModesReturningError:
remoteServiceProvider:availableModesReturningError:
remoteServiceProvider:syncModeConfigurationsReturningError:
dnds_hasModeConfigurationAvailabilityEntitlementForClientIdentifier:
remoteServiceProvider:allowedModesForContactHandle:withError:
remoteServiceProvider:userAvailabilityInActiveModeForContactHandle:withError:
remoteServiceProvider:publishStatusKitAvailabilityReturningError:
remoteServiceProvider:invalidateModeAssertionWithUUID:reason:reasonOverride:clientIdentifier:error:
dnds_hasModeConfigurationUpdatesEntitlementForClientIdentifier:
dnds_hasActiveModeUpdatesEntitlementForClientIdentifier:
remoteServiceProvider:getAppInfoForBundleIdentifier:withError:
remoteServiceProvider:getAppInfoForBundleIdentifiers:withError:
dnds_hasMeDeviceStateEntitlementForClientIdentifier:
remoteServiceProvider:currentMeDeviceStateWithError:
_unregisterConnectionDetailsForClientConnection:
resolveBehaviorForEventDetails:requestDetails:completionHandler:
takeModeAssertionWithDetails:requestDetails:completionHandler:
invalidateActiveModeAssertionWithDetails:reasonOverride:requestDetails:completionHandler:
getActiveModeAssertionWithRequestDetails:completionHandler:
getLatestModeAssertionInvalidationWithRequestDetails:completionHandler:
invalidateAllActiveModeAssertionsWithRequestDetails:completionHandler:
getAllModeAssertionsWithRequestDetails:completionHandler:
queryStateWithRequestDetails:completionHandler:
queryStateForUpdateWithRequestDetails:completionHandler:
getBehaviorSettingsWithRequestDetails:completionHandler:
setBehaviorSettings:withRequestDetails:completionHandler:
getScheduleSettingsWithRequestDetails:completionHandler:
setScheduleSettings:withRequestDetails:completionHandler:
setModeConfiguration:withRequestDetails:completionHandler:
removeModeConfigurationForModeIdentifier:withRequestDetails:completionHandler:
getModeConfigurationsWithRequestDetails:completionHandler:
getModeConfigurationForModeIdentifier:withRequestDetails:completionHandler:
getAllModesWithRequestDetails:completionHandler:
getAvailableModesWithRequestDetails:completionHandler:
syncModeConfigurationsWithRequestDetails:completionHandler:
getAllowedModesForContactHandle:withRequestDetails:completionHandler:
getUserAvailabilityInActiveModeForContactHandle:withRequestDetails:completionHandler:
publishStatusKitAvailabilityWithRequestDetails:completionHandler:
activateModeWithDetails:withRequestDetails:completionHandler:
activeModeAssertionWithRequestDetails:completionHandler:
invalidateModeAssertionWithUUID:withRequestDetails:completionHandler:
getPreventAutoReplyWithRequestDetails:completionHandler:
setPreventAutoReply:withRequestDetails:completionHandler:
getCloudSyncStateWithRequestDetails:completionHandler:
setCloudSyncPreferenceEnabled:withRequestDetails:completionHandler:
getPairSyncStateWithRequestDetails:completionHandler:
setPairSyncPreferenceEnabled:withRequestDetails:completionHandler:
getStateDumpWithRequestDetails:completionHandler:
didChangeFocusStatusSharingSettingForApplicationIdentifier:withRequestDetails:completionHandler:
getAppInfoForBundleIdentifier:withRequestDetails:completionHandler:
getAppInfoForBundleIdentifiers:withRequestDetails:completionHandler:
queryMeDeviceStateWithRequestDetails:completionHandler:
setScreenIsShared:screenIsMirrored:withRequestDetails:completionHandler:
registerForAssertionUpdatesWithRequestDetails:completionHandler:
registerForStateUpdatesWithRequestDetails:completionHandler:
registerForSettingsUpdatesWithRequestDetails:completionHandler:
registerForModeSelectionUpdatesWithRequestDetails:completionHandler:
registerForGlobalConfigurationUpdatesWithRequestDetails:completionHandler:
registerForMeDeviceStateUpdatesWithRequestDetails:completionHandler:
handleModeAssertionUpdateResult:
handleUpdatedBehaviorSettings:
handleUpdatedPhoneCallBypassSettings:
handleUpdatedPairSyncState:
handleUpdatedPreventAutoReplySetting:
handleUpdatedScheduleSettings:
handleUpdatedModes:availableModes:
handleMeDeviceStateUpdate:
_monitorListener
_clientConnectionDetailsByConnection
T@"<DNDSRemoteServiceProviderDelegate>",W,N,V_delegate
_dnds_safeStringArrayEntitlementForKey:
hasEntitlement:
valueForEntitlement:
_notifyDelegateOfConfigurationChange
_lock_existingConfiguration
_createConfigurationFromCKRecord:
_lock_updateConfigurationWithCKRecord:
_lock_prepareCKRecordToSave:
_lock_prepareDNDSIDSRecordToSave:
_createConfigurationFromDNDSIDSRecord:
_lock_updateConfigurationWithDNDSIDSRecord:
_populateDNDSIDSRecord:withGlobalConfiguration:
_populateCKRecord:withGlobalConfiguration:
globalConfigurationStore:didUpdatePreventAutoReplySetting:
T@"<DNDSGlobalConfigurationStoreDelegate>",W,N
globalConfigurationSyncManager:didReceiveUpdatedGlobalConfiguration:
_lock_mutableExistingConfigurationInStore:
T@"<DNDSGlobalConfigurationStoreDelegate>",W,N,V_delegate
lastPathComponent
productHardwareModel
alphanumericCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
openURL:configuration:completionHandler:
_beginObservingKeybag
isLocked
_queue_handleKeybagStatusChanged
_queue_handleFirstUnlock
_queue_observers
_queue_hasUnlockedSinceBoot
globalConfigurationManager:didUpdatePhoneCallBypassSettings:
globalConfigurationManager:didUpdatePreventAutoReplySetting:
lostModeIsActive
initWithService:
_migrateDefaultDoNotDisturbModeIfNeeded
_migrateBypassSettingsIfNeeded
_queue_updateScheduleManagerLifetimeMonitorsAndStateForReason:source:
_queue_validateIDSSyncEngine
setLockState:
_scheduleSettingsForModeConfigurations
_invalidateModeAssertionForClientIdentifier:reason:reasonOverride:details:error:
_stateSystemSnapshot
_scheduleSettingsFromDefaultScheduleTrigger
_setDefaultScheduleTriggerWithScheduleSettings:
_queue_handlePairedDeviceAndSyncSettingsChange
_allModes
setPreventAutoReply:withError:
getPreventAutoReplyReturningError:
initWithPreviousState:state:reason:source:
getConfigurationReturningError:
setConfiguration:withError:
defaultMode
_scheduleTriggerMatchingSettings:
defaultScheduleTrigger
enumerateObjectsUsingBlock:
initWithName:modeIdentifier:symbolImageName:tintColorName:semanticType:
arrayByExcludingObjectsInArray:
_setScheduleTrigger:forModeConfigurationWithIdentifier:
_setDimsLockScreenSetting:forModeConfigurationWithIdentifier:
_scheduleSettingsMatchingTrigger:
predicateWithValue:
_activeDateIntervalForModeAssertion:currentlyActive:
duration
_forceConfigurationSyncIfNeededWithUpdateResult:
placeholderModeFromMode:
currentUILockStateForEventBehaviorResolver:
eventBehaviorResolver:configurationForModeIdentifier:
_handleSignificantTimeChange
setUILockState:error:
_setLostModeState:error:
settingsManager:didReceiveUpdatedPhoneCallBypassSettings:
layoutIsLocked:
_calendarEventLifetimeMonitor
_scheduleLifetimeMonitor
_locationLifetimeMonitor
_lifetimeMonitors
_scheduleManager
_appForegroundTriggerManager
_biomeDonationManager
_drivingTriggerManager
_gamingTriggerManager
_mindfulnessTriggerManager
_sleepingTriggerManager
_smartTriggerManager
_workoutTriggerManager
_eventBehaviorResolver
_serviceProvider
_availabilityServiceProvider
_assertionSyncManager
_legacyAssertionSyncManager
_settingsSyncManager
_settingsManager
_idsLocalService
_idsCloudService
_pairedDeviceStateMonitor
_reachability
_eventStream
_layoutMonitor
_globalConfigurationStore
_globalConfigurationManager
_modeConfigurationsStore
_placeholderModeManager
_appInfoCache
_userAvailabilityCoordinator
_metricsManager
_lockState
TQ,V_lockState
TQ,V_lostModeState
_configureSmartTriggerWithSupportedModes:
_refreshWithSupportedModes:event:
isStart
modeUUID
filterWithKeyPath:value:
T@"<DNDSSmartTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_writeConfiguration:error:
T@"<DNDSGlobalConfigurationManagerDelegate>",W,N,V_delegate
@24@0:8@16
@32@0:8@16@24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSDictionary"24@0:8@"DNDSBackingStoreDictionaryContext"16
@32@0:8@"NSDictionary"16@"DNDSBackingStoreDictionaryContext"24
v56@0:8@16@24Q32@40@48
B56@0:8@16@24Q32@40@48
v44@0:8@16@24B32@36
v56@0:8@"<DNDSSyncService>"16@"NSDictionary"24Q32@"NSString"40@"NSString"48
B56@0:8@"<DNDSSyncService>"16@"NSDictionary"24Q32@"NSString"40@"NSString"48
v44@0:8@"<DNDSSyncService>"16@"NSString"24B32@"NSError"36
v24@0:8@16
v24@0:8@"<DNDSKeybagStateProviding>"16
@28@0:8@16B24
@"NSDictionary"28@0:8@"NSDate"16B24
v32@0:8@16@24
v28@0:8@16B24
v16@0:8
v32@0:8@"NSArray"16@"NSArray"24
v32@0:8@"<DNDSIDSSyncEngineDataSource>"16@"NSString"24
v28@0:8@"DNDSPairedDevice"16B24
@40@0:8@16@24@32
@64@0:8@16@24@32Q40Q48Q56
v24@0:8@?16
v40@0:8@16@24@32
d16@0:8
@"NSMapTable"
@"<DNDSSyncService>"
@"DNDSPairedDevice"
@"<DNDSIDSSyncEngineMetadataStoring>"
@"<DNDSKeybagStateProviding>"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NSMutableDictionary"
@"NSMutableSet"
@40@0:8@"NSString"16@"NSString"24@"NSString"32
@40@0:8@16Q24Q32
@24@0:8^{_NSZone=}16
@"NSNumber"
@40@0:8@"NSDictionary"16@"NSDictionary"24@"DNDSBackingStoreDictionaryContext"32
Q24@0:8Q16
@24@0:8^@16
Q32@0:8@16^@24
Q36@0:8@16B24^@28
Q32@0:8@"<DNDSBackingStoreRecord>"16^@24
Q36@0:8@"<DNDSBackingStoreRecord>"16B24^@28
@"<DNDSBackingStoreDelegate>"16@0:8
v24@0:8@"<DNDSBackingStoreDelegate>"16
@40@0:8#16@24Q32
@56@0:8#16@24@32Q40Q48
@32@0:8@16^@24
Q48@0:8@16Q24@32^@40
@"NSURL"
@"<DNDSBackingStoreDelegate>"
@48@0:8@16@24@32Q40
@64@0:8@16@24@32@40Q48Q56
@72@0:8@16@24@32@40@48Q56Q64
@"NSUUID"
@"DNDSModeAssertionInvalidationPredicate"
@"NSDate"
@"DNDModeAssertionInvalidationDetails"
@"DNDModeAssertionSource"
@"NSArray"
v24@0:8@"NSDate"16
@"NSArray"16@0:8
@"<DNDSLifetimeMonitorDataSource>"16@0:8
v24@0:8@"<DNDSLifetimeMonitorDataSource>"16
@"<DNDSLifetimeMonitorDelegate>"16@0:8
v24@0:8@"<DNDSLifetimeMonitorDelegate>"16
@"<DNDSLifetimeMonitorDataSource>"
@"<DNDSLifetimeMonitorDelegate>"
@"DNDSAppForegroundTriggerConfiguration"
@"BMStoreEvent"
@"NSObject<OS_os_transaction>"
@"<DNDSAppForegroundTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
@32@0:8@16@?24
@40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@64@0:8@16@24Q32Q40@48^@56
@"NSDictionary"
@24@0:8Q16
@64@0:8@16@24@32@40@48^@56
Q48@0:8@16@24@32o^Q40
B32@0:8@16@24
B40@0:8@16@24@32
B76@0:8@16@24@32Q40Q48@56B64o^Q68
B56@0:8@16Q24@32@40o^Q48
@"<DNDSModeRepository>"
@"CNContactStore"
@"DNDSAuxiliaryStateMonitor"
@"CNFavorites"
@"NSMutableArray"
@"<DNDSEventBehaviorResolverDataSource>"
@56@0:8@16@24@32@40^@48
@48@0:8@16@24Q32Q40
@"NSDictionary"48@0:8@"<DNDSBackingStore>"16@"NSDictionary"24Q32Q40
@"<DNDSCachedBackingStoreDelegate>"16@0:8
v24@0:8@"<DNDSCachedBackingStoreDelegate>"16
@"<DNDSBackingStore>"
@"<DNDSBackingStoreRecord>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<DNDSCachedBackingStoreDelegate>"
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
v32@0:8@16@?24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"NSError">24
@"BSServiceConnectionListener"
@"DNDSClientDetailsProvider"
@"<DNDSRemoteAvailabilityServiceProviderDelegate>"
@"NSString"
v24@0:8@"CNChangeHistoryDropEverythingEvent"16
v24@0:8@"CNChangeHistoryAddContactEvent"16
v24@0:8@"CNChangeHistoryUpdateContactEvent"16
v24@0:8@"CNChangeHistoryDeleteContactEvent"16
v24@0:8@"CNChangeHistoryAddGroupEvent"16
v24@0:8@"CNChangeHistoryUpdateGroupEvent"16
v24@0:8@"CNChangeHistoryDeleteGroupEvent"16
v24@0:8@"CNChangeHistoryAddMemberToGroupEvent"16
v24@0:8@"CNChangeHistoryRemoveMemberFromGroupEvent"16
v24@0:8@"CNChangeHistoryAddSubgroupToGroupEvent"16
v24@0:8@"CNChangeHistoryRemoveSubgroupFromGroupEvent"16
@"NSSet"
v24@0:8@"<DNDSContactMonitorListener>"16
B40@0:8@16@24@?32
v40@0:8@16@24@?32
@"NSHashTable"
@"<DNDSContactProviding>"
@"EKEventStore"
{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}16@0:8
v48@0:8@16@24@32@?40
B40@0:8@16@24o^@32
B32@0:8@16o^@24
@32@0:8@16o^@24
v28@0:8B16@?20
v40@0:8B16@20B28@?32
v56@0:8B16@20B28B32@36B44@?48
@24@0:8o^@16
@28@0:8B16o^@20
@"DNDSModeConfigurationManager"
@"DNDSStateProvider"
@"SKStatusPublishingService"
@"DNDContact"24@0:8@"DNDContact"16
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"NSObject<OS_dispatch_queue>"16@0:8
@"CLLocationManager"16@0:8
@"<DNDSLocationLifetimeMonitorDataSource>"16@0:8
v24@0:8@"<DNDSLocationLifetimeMonitorDataSource>"16
v32@0:8@"DNDSMeDeviceService"16@"DNDMeDeviceState"24
@"CLLocationManager"
@"DNDSMeDeviceService"
@"DNDSUntilExitLocationLifetimeMonitor"
@"DNDSExplicitRegionLocationLifetimeMonitor"
@"<DNDSLocationLifetimeMonitorDataSource>"
B24@0:8^@16
@"DNDSLocationTriggerConfiguration"
@"DNDSExplicitRegionStore"
@"<DNDSAggregateLocationLifetimeMonitor>"
@"CLRegion"
@"DNDSUntilExitRegionStore"
@80@0:8@16@24@32@40@48@56@64@72
@"NSArray"24@0:8@"NSPredicate"16
@"DNDSModeAssertionUpdateResult"40@0:8@"DNDModeAssertionDetails"16@"DNDModeAssertionSource"24@"NSDate"32
@"DNDSModeAssertionUpdateResult"24@0:8@"DNDSModeAssertionInvalidationRequest"16
@48@0:8@16@24@32@40
v24@0:8N@16
@"DNDSModeAssertionStore"
@"DNDSModeAssertionUpdateResult"
@88@0:8@16@24@32@40Q48Q56@64@72B80B84
@"DNDSModeRecord"
@"DNDSConfigurationRecord"
@"DNDSConfigurationSecureRecord"
@"DNDSModeConfigurationTriggersRecord"
v24@0:8Q16
v20@0:8B16
q16@0:8
v24@0:8q16
@"CKRecord"24@0:8@"CKRecordID"16
v24@0:8@"CKRecord"16
v24@0:8@"CKRecordID"16
v24@0:8@"CKRecordZoneID"16
@"NSArray"24@0:8@"CKRecordZoneID"16
@"NSData"16@0:8
v24@0:8@"NSData"16
v24@0:8@"NSString"16
@"NSData"
v40@0:8@16@24Q32
v64@0:8B16B20i24i28B32B36@40@48@56
@"DNDSMutableMetricsRecord"
@"NSCalendar"
@44@0:8@16@24@32B40
@60@0:8@16@24@32@40@48B56
@"NSArray"24@0:8@"NSArray"16
@"NSObject<OS_nw_path_monitor>"
v32@0:8@"<DNDSModeConfigurationsStoring>"16@"NSArray"24
B32@0:8@16^@24
@28@0:8B16^@20
Q40@0:8@16@24@32
Q32@0:8@16@24
@20@0:8B16
@"<DNDSModeConfigurationsStoring>"
@"<DNDSModeConfigurationManagerDelegate>"
@40@0:8@16@24@?32
@64@0:8@16@24@32B40B44B48B52B56B60
@"DNDSStateProviderSystemSnapshot"
@"DNDState"
v24@0:8@"<DNDSCachedBackingStore>"16
@"<DNDSCachedBackingStore>"
@44@0:8Q16@24@32B40
@"DNDBypassSettings"
B24@0:8N@16
@48@0:8Q16@24Q32@40
@"DNDMeDeviceState"
@"DNDSMeDeviceStore"
v32@0:8@"DNDSSyncSettingsProvider"16@"DNDSSyncSettings"24
Q40@0:8@16@24^@32
@"DNDSSyncSettingsProvider"
@"<DNDSSettingsManagerDelegate>"
@"DNDSIDSRecordMetadata"
v32@0:8Q16@?24
@"NPSDomainAccessor"
@"NPSManager"
@"<DNDSWorkoutTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
@"DNDSModeConfigurationsRecord"
@"CKRecordZone"
@"NSDictionary"16@0:8
@"<DNDSAssertionSyncManagerDataSource>"16@0:8
v24@0:8@"<DNDSAssertionSyncManagerDataSource>"16
@"<DNDSAssertionSyncManagerDelegate>"16@0:8
v24@0:8@"<DNDSAssertionSyncManagerDelegate>"16
v24@0:8@"DNDSModeAssertionUpdateResult"16
v24@0:8@"NSArray"16
v24@0:8@"DNDStateUpdate"16
@"<DNDSLegacyAssertionSyncManagerDataSource>"
@"<DNDSAssertionSyncManagerDelegate>"
@32@0:8@?16^@24
@"DNDSModeAssertionUpdateResult"32@0:8@?<B@?@"<DNDSModeAssertionUpdateContext>">16^@24
@64@0:8@16@24@32@40@48@56
@"<DNDSDrivingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
@"<DNDSSettingsSyncManagerDataSource>"16@0:8
v24@0:8@"<DNDSSettingsSyncManagerDataSource>"16
@"<DNDSSettingsSyncManagerDelegate>"16@0:8
v24@0:8@"<DNDSSettingsSyncManagerDelegate>"16
@32@0:8B16B20@24
@"<DNDSSettingsSyncManagerDataSource>"
@"<DNDSSettingsSyncManagerDelegate>"
@"INCExtensionConnection"
@"LSApplicationRecord"
{atomic_flag="_Value"AB}
v32@0:8@16B24B28
v40@0:8@16Q24@32
v36@0:8@16B24@28
@"DNDSModernAssertionSyncMetadataStore"
@"NSObject<DNDSBackingStore>"
@"<DNDSAssertionSyncManagerDataSource>"
@40@0:8Q16Q24@32
@"DNDSMutableModeAssertionStore"
@32@0:8r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}16Q24
@32@0:8@16r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}24
@"NSDictionary"32@0:8r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}16Q24
@32@0:8@"NSDictionary"16r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}24
@"BMUserFocusComputedModeStream"
@60@0:8@16Q24Q32B40@44@52
@56@0:8@16@24@32Q40Q48
@"DNDClientEventBehavior"
@"NSNumber"16@0:8
@76@0:8B16B20@24@32B40B44B48B52B56B60B64B68B72
v24@0:8@"NSNumber"16
@84@0:8B16B20@24@32B40B44B48B52B56B60B64B68B72@76
@"<DNDSSleepingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
v48@0:8@16d24Q32@?40
v40@0:8@16d24@?32
@"NSURLSession"
v48@0:8@16@24@32@40
@"DNDSModeAssertionManager"
@"<DNDSScheduleManagerDataSource>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B32@0:8@16N@24
@"NSString"32@0:8@"DNDSSyncEngine"16@"CKRecordID"24
B32@0:8@"DNDSSyncEngine"16N@"CKRecord"24
v40@0:8@"DNDSSyncEngine"16@"CKRecord"24@"CKRecord"32
v40@0:8@"DNDSSyncEngine"16@"CKRecordID"24@"NSError"32
v32@0:8@"DNDSSyncEngine"16@"CKRecord"24
v32@0:8@"DNDSSyncEngine"16@"CKRecordID"24
B32@0:8@"DNDSSyncEngine"16@"CKRecord"24
v40@0:8@"DNDSSyncEngine"16@"CKRecordZoneID"24@"NSArray"32
@"NSArray"24@0:8@"DNDSSyncEngine"16
v24@0:8@"DNDSSyncEngine"16
v32@0:8@16N@24
v32@0:8@"DNDSIDSSyncEngine"16N@"DNDSIDSRecord"24
v32@0:8@"DNDSIDSSyncEngine"16@"DNDSIDSRecord"24
v32@0:8@"DNDSIDSSyncEngine"16@"DNDSIDSRecordID"24
@"NSArray"24@0:8@"DNDSIDSSyncEngine"16
v24@0:8@"DNDSIDSSyncEngine"16
@"<DNDSModeConfigurationsStoreDelegate>"16@0:8
v24@0:8@"<DNDSModeConfigurationsStoreDelegate>"16
v48@0:8@"<DNDSContactMonitoring>"16@"NSArray"24@"NSArray"32@"NSData"40
v32@0:8@"<DNDSContactMonitoring>"16@"NSDictionary"24
@"NSSet"16@0:8
@"<DNDSContactMonitoring>"
@"DNDSSyncEngine"
@"DNDSIDSSyncEngine"
@"<DNDSModeConfigurationsStoreDelegate>"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@"IDSService"
@"<DNDSPairedDeviceStateMonitorDelegate>"
@72@0:8@16@24@32@40q48Q56@64
v56@0:8@16Q24@32@40@?48
v56@0:8@"NSDictionary"16Q24@"NSString"32@"NSSet"40@?<v@?B@"NSError">48
v56@0:8@"NSDictionary"16Q24@"NSString"32@"NSSet"40@?<v@?B@"NSString"@"NSError">48
@"<DNDSSyncServiceDelegate>"16@0:8
v24@0:8@"<DNDSSyncServiceDelegate>"16
B64@0:8@16Q24@32@40^@48^@56
@"<DNDSSyncServiceDelegate>"
@"DNDSSenderConfigurationRecord"
@56@0:8@16@24@32Q40@48
@"NSDateComponents"
@24@0:8B16B20
@64@0:8@16@24@32Q40Q48@56
@"NSArray"24@0:8@"NSString"16
v32@0:8@"NSDate"16@"NSArray"24
@"DNDSIDSRecordMetadata"24@0:8@"DNDSIDSRecordID"16
v40@0:8@"NSDate"16@"NSArray"24@"NSString"32
B24@0:8@"NSString"16
B24@0:8@"NSDate"16
@32@0:8d16d24
@28@0:8Q16i24
@"DNDSModeAssertionDetailsRecord"
@"DNDSModeAssertionSourceRecord"
@"DNDSModeAssertionLifetimeRecord"
@"DNDSModeAssertionRecord"
@"DNDSModeAssertionInvalidationDetailsRecord"
@"DNDSModeAssertionInvalidationPredicateRecord"
Q24@0:8@16
@"<DNDSMindfulnessTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
@52@0:8@16@24B32B36B40B44B48
v48@0:8@16@24@32^v40
@"DNDSSyncSettings"
@"<DNDSSyncSettingsProviderDelegate>"
@52@0:8Q16Q24B32@36@44
@"<DNDSApplicationIdentifierMapping>"
@"DNDSAppForegroundTriggerConfiguration"24@0:8@"DNDSAppForegroundTriggerManager"16
@"DNDMode"24@0:8@"DNDSDrivingTriggerManager"16
@"DNDMode"24@0:8@"DNDSGamingTriggerManager"16
@"DNDMode"24@0:8@"DNDSMindfulnessTriggerManager"16
@"DNDMode"24@0:8@"DNDSSleepingTriggerManager"16
@"NSSet"24@0:8@"DNDSSmartTriggerManager"16
v28@0:8B16@20
@"DNDModeConfiguration"24@0:8@"DNDSWorkoutTriggerManager"16
v28@0:8B16@"DNDSWorkoutTriggerManager"20
@24@0:8#16
@"DNDSBehaviorSettingsRecord"
@"DNDSBypassSettingsRecord"
@"DNDSScheduleSettingsRecord"
@"DNDSConfigurationsRecord"
@"DNDApplicationIdentifier"24@0:8@"DNDApplicationIdentifier"16
@32@0:8Q16@24
@72@0:8@16@24@32@40@48@56@64
@"CKRecord"32@0:8@"CKSyncEngine"16@"CKRecordID"24
v32@0:8@"CKSyncEngine"16@"CKRecord"24
v40@0:8@"CKSyncEngine"16@"CKRecord"24@"NSError"32
v32@0:8@"CKSyncEngine"16@"CKRecordID"24
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSString"32
v32@0:8@"CKSyncEngine"16@"NSData"24
v32@0:8@"CKSyncEngine"16@"CKRecordZone"24
v32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
v40@0:8@"CKSyncEngine"16@"CKRecordZoneID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordZone"24@"NSError"32
@52@0:8@16@24@32@40B48
v40@0:8@16q24B32B36
@"<DNDSSyncEngineMetadataStoring>"
@"<DNDSSyncEngineSynchronizing>"
@"<DNDSSyncEngineLastChanceDataStoring>"
{?="syncEnabled"B"featureEnabled"B"accountAvailable"B"encryptionAvailable"B"supportedDevice"B"testing"B}
@"CKContainer"
@36@0:8@16@24B32
@"DNDSIDSRecordID"
@"<DNDSGamingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
v40@0:8@"DNDClientEventDetails"16@"DNDRequestDetails"24@?<v@?@"DNDClientEventBehavior"@"NSError">32
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"DNDModeAssertion"@"NSError">32
v48@0:8@"DNDModeAssertionInvalidationDetails"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"DNDModeAssertionInvalidation"@"NSError">40
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertionInvalidation"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDModeAssertion__>"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDState"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDBehaviorSettings"@"NSError">24
v40@0:8@"DNDBehaviorSettings"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDScheduleSettings"@"NSError">24
v40@0:8@"DNDScheduleSettings"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"DNDModeConfiguration"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDModeConfiguration__>"@"NSError">24
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDModeConfiguration"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDMode__>"@"NSError">24
v40@0:8@"DNDContactHandle"16@"DNDRequestDetails"24@?<v@?@"NSArray<__NSString__>"@"NSError">32
v40@0:8@"DNDContactHandle"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"NSUUID"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
Vv40@0:8@16@24@?32
v40@0:8@"NSNumber"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSDictionary"@"NSError">24
Vv40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDAppInfo"@"NSError">32
v40@0:8@"NSArray<__NSString__>"16@"DNDRequestDetails"24@?<v@?@"NSArray<__DNDAppInfo__>"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDMeDeviceState"@"NSError">24
v48@0:8@"NSNumber"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"DNDMeDeviceState"@"NSError">24
@"<DNDSRemoteServiceProviderDelegate>"
@"<DNDSGlobalConfigurationStoreDelegate>"16@0:8
v24@0:8@"<DNDSGlobalConfigurationStoreDelegate>"16
@"DNDSGlobalConfiguration"
@"<DNDSGlobalConfigurationStoreDelegate>"
v24@0:8@"<DNDSKeybagStateObserver>"16
v28@0:8@"DNDSGlobalConfigurationManager"16B24
v32@0:8@"DNDSGlobalConfigurationManager"16@"DNDBypassSettings"24
@"DNDState"24@0:8@"DNDSEventBehaviorResolver"16
Q24@0:8@"DNDSEventBehaviorResolver"16
@"DNDBypassSettings"32@0:8@"DNDSEventBehaviorResolver"16@"NSString"24
@"DNDConfiguration"32@0:8@"DNDSEventBehaviorResolver"16@"NSString"24
B32@0:8@"DNDSEventBehaviorResolver"16@"NSString"24
@32@0:8@16#24
@"NSArray"32@0:8@"<DNDSLifetimeMonitor>"16#24
@"DNDSLocationTriggerConfiguration"24@0:8@"<DNDSLifetimeMonitor>"16
@"NSDictionary"24@0:8@"<DNDSLifetimeMonitor>"16
v24@0:8@"<DNDSLifetimeMonitor>"16
@"DNDModeAssertion"48@0:8@"<DNDSLifetimeMonitor>"16@"DNDModeAssertionDetails"24@"NSString"32^@40
v40@0:8@"<DNDSLifetimeMonitor>"16@"NSArray"24@"NSDate"32
v40@0:8@"<DNDSLifetimeMonitor>"16@"NSString"24@?<v@?@"NSString"@"NSObject<OS_xpc_object>">32
v32@0:8@"<DNDSLifetimeMonitor>"16@"DNDSXPCTimer"24
@"DNDClientEventBehavior"56@0:8@"DNDSRemoteServiceProvider"16@"DNDClientEventDetails"24@"DNDSClientDetails"32@"NSDate"40^@48
@56@0:8@16@24Q32@40^@48
@"DNDModeAssertion"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"DNDModeAssertionInvalidation"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"DNDModeAssertion"48@0:8@"DNDSRemoteServiceProvider"16@"DNDModeAssertionDetails"24@"NSString"32^@40
@"DNDModeAssertionInvalidation"64@0:8@"DNDSRemoteServiceProvider"16@"NSUUID"24Q32Q40@"NSString"48^@56
@"DNDModeAssertionInvalidation"64@0:8@"DNDSRemoteServiceProvider"16@"NSString"24Q32Q40@"DNDModeAssertionInvalidationDetails"48^@56
@"NSArray"56@0:8@"DNDSRemoteServiceProvider"16@"NSDate"24Q32@"NSString"40^@48
@"NSArray"32@0:8@"DNDSRemoteServiceProvider"16^@24
@"DNDState"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@16@24^@32
@"DNDBehaviorSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDBehaviorSettings"24^@32
@"DNDScheduleSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDScheduleSettings"24^@32
@"DNDModeConfiguration"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"NSDictionary"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDModeConfiguration"24^@32
B32@0:8@"DNDSRemoteServiceProvider"16^@24
@"NSArray"40@0:8@"DNDSRemoteServiceProvider"16@"DNDContactHandle"24^@32
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDContactHandle"24^@32
@"NSString"32@0:8@"DNDSRemoteServiceProvider"16^@24
B36@0:8@16B24^@28
B36@0:8@"DNDSRemoteServiceProvider"16B24^@28
Q32@0:8@"DNDSRemoteServiceProvider"16^@24
v32@0:8@"DNDSRemoteServiceProvider"16@"NSString"24
@"DNDAppInfo"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"NSArray"40@0:8@"DNDSRemoteServiceProvider"16@"NSArray"24^@32
@"DNDMeDeviceState"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@16B24B28^@32
B40@0:8@"DNDSRemoteServiceProvider"16B24B28^@32
B40@0:8@"DNDSRemoteAvailabilityServiceProvider"16@"DNDApplicationIdentifier"24o^@32
@"DNDSPairedDevice"24@0:8@"<DNDSAssertionSyncManager>"16
@"NSSet"24@0:8@"<DNDSAssertionSyncManager>"16
@"DNDSPairedDevice"32@0:8@"<DNDSAssertionSyncManager>"16@"NSString"24
@"DNDModeAssertion"32@0:8@"<DNDSAssertionSyncManager>"16@"DNDModeAssertion"24
@"DNDScheduleSettings"32@0:8@"<DNDSAssertionSyncManager>"16@"NSString"24
B24@0:8@"<DNDSAssertionSyncManager>"16
v32@0:8@"<DNDSAssertionSyncManager>"16@?<B@?@"<DNDSModeAssertionUpdateContext>">24
v40@0:8@"<DNDSAssertionSyncManager>"16@"NSArray"24@?<v@?>32
@"DNDState"24@0:8@"<DNDSAssertionSyncManager>"16
@"DNDBypassSettings"24@0:8@"<DNDSSettingsSyncManager>"16
@"DNDSScheduleSettings"24@0:8@"<DNDSSettingsSyncManager>"16
v32@0:8@"<DNDSSettingsSyncManager>"16@"DNDBypassSettings"24
v32@0:8@"<DNDSSettingsSyncManager>"16@"DNDSScheduleSettings"24
@"NSDictionary"24@0:8@"DNDSScheduleManager"16
v32@0:8@"DNDSSettingsManager"16@"DNDBehaviorSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDSScheduleSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDSSyncSettings"24
v40@0:8@"DNDSPairedDeviceStateMonitor"16@"DNDSPairedDevice"24@"DNDSPairedDevice"32
v40@0:8@"DNDSPairedDeviceStateMonitor"16@"NSSet"24@"NSSet"32
v32@0:8@"DNDSModeConfigurationManager"16@"NSArray"24
v40@0:8@"DNDSModeConfigurationManager"16@"NSDictionary"24@"DNDModeConfiguration"32
B32@0:8Q16^@24
@56@0:8@16Q24Q32@40^@48
v32@0:8Q16q24
B32@0:8Q16@24
@"DNDSCalendarEventLifetimeMonitor"
@"DNDSScheduleLifetimeMonitor"
@"DNDSLocationLifetimeMonitor"
@"DNDSScheduleManager"
@"DNDSAppForegroundTriggerManager"
@"DNDSBiomeDonationManager"
@"DNDSDrivingTriggerManager"
@"DNDSGamingTriggerManager"
@"DNDSMindfulnessTriggerManager"
@"DNDSSleepingTriggerManager"
@"DNDSSmartTriggerManager"
@"DNDSWorkoutTriggerManager"
@"DNDSEventBehaviorResolver"
@"DNDSRemoteServiceProvider"
@"DNDSRemoteAvailabilityServiceProvider"
@"<DNDSAssertionSyncManager>"
@"<DNDSSettingsSyncManager>"
@"DNDSSettingsManager"
@"DNDSPairedDeviceStateMonitor"
@"DNDSReachability"
@"DNDSXPCEventStream"
@"FBSDisplayLayoutMonitor"
@"DNDSGlobalConfigurationStore"
@"DNDSGlobalConfigurationManager"
@"DNDSModeConfigurationsStore"
@"DNDSPlaceholderModeManager"
@"DNDSContactMonitor"
@"DNDSAppInfoCache"
@"DNDSUserAvailabilityCoordinator"
@"DNDSMetricsManager"
@"<DNDSSmartTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
v28@0:8@"<DNDSGlobalConfigurationStoring>"16B24
B28@0:8B16^@20
@"<DNDSGlobalConfigurationStoring>"
@"<DNDSGlobalConfigurationManagerDelegate>"
@(#)PROGRAM:DoNotDisturbServer  PROJECT:DoNotDisturb-1
source
applicationIdentifier
displayName
storeIconURL
cachedIconURL
syncEngine
action
modifiedRecords
deletedMetadata
metadataAck
ackAction
syncDate
update
replace
unlock
resync
Kettle
FeatureComplete
com.donotdisturb.server.DNDSIDSSyncEngine
v8@?0
Tinker
non-Tinker
enabled
disabled
com.apple.donotdisturb.DNDSIDSSyncEngine
zones
pairedDevice
syncState
retriesAvailable
inflightExpirationTime
inflightMetadata
inflightMetadataByRequestIdentifier
inflightDateByRequestIdentifier
role
v20@?0B8@"NSError"12
v28@?0B8@"NSString"12@"NSError"20
<%@: %p; interruptionBehaviorSetting: %@>
interruptionBehaviorSetting
header
version
timestamp
data
NSDictionary
Unexpected version number
com.apple.donotdisturb.server.JSONBackingStore
deviceOutOfSpace
<%@: %p; UUID: %@; predicate: %@; requestDate: %@; details: %@; source: %@; reason: %@; reasonOverride: %@>
v24@?0q8^B16
com.apple.donotdisturb.lifetime-monitor.%@
@"NSString"16@?0@"NSUUID"8
active-uuids
preventAutoReply
bypassSettings
lastModified
automaticallyGenerated
.donotdisturb.trigger
com.apple.donotdisturb.private.app-launch
com.apple.donotdisturb.private.biome-app-launch.queue
com.apple.donotdisturb.appForeground.coalescing
B16@?0@"DNDModeAssertion"8
system
com.apple.donotdisturb.appLaunch
eventBody.bundleID
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
com.apple.donotdisturb.appLaunch.event-coalescing
com.apple.focus.activity-manager
B16@?0@"<DNDSModeAssertionUpdateContext>"8
com.apple.donotdisturb.EventBehaviorResolutionService
com.apple.donotdisturb.EventBehaviorResolver
uuid
local-date
client-identifier
outcome
reason
@"NSDictionary"16@?0@"DNDSEventBehaviorResolution"8
resolution-record
B24@?0@"DNDSEventBehaviorResolution"8@16
is NOT
com.apple.cmas
B16@?0@"CNContact"8
v24@?0@"CNContact"8^B16
@16@?0@"CNContact"8
B16@?0@"DNDSEventBehaviorResolution"8
UI locked
UI unlocked
<invalid>
com.apple.donotdisturb.availability.service.launching
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionConfiguring>"8
com.apple.donotdisturbd.%@
User Notifications are disabled for this App.
Focus Status is not shared with this App.
App is missing Communication Notifications entitlement.
<%@: %p; immediateBypassEventSourceType: %@; immediateBypassCNGroupIdentifier: '%@'; repeatEventSourceBehaviorEnabledSetting: %@>
immediateBypassEventSourceType
immediateBypassCNGroupIdentifier
repeatEventSourceBehaviorEnabledSetting
com.apple.donotdisturb.server.ContactMonitor
v32@?0@"NSArray"8@"NSArray"16@"NSData"24
v24@?0@"NSArray"8^B16
com.apple.donotdisturb.server.CalendarEventLifetimeMonitor.timer
v24@?0@"NSString"8@"NSObject<OS_xpc_object>"16
B16@?0@"EKEvent"8
com.apple.donotdisturb.server.DateIntervalLifetimeMonitor.timer
@"NSUUID"16@?0@"DNDModeAssertion"8
com.donotdisturb.server.AvailabilityCoordinator
com.donotdisturb.server.ExtensionLaunch
@"NSSet"24@?0@"NSArray"8@"NSArray"16
com.apple.MobileSMS
v24@?0@"NSString"8@"NSError"16
v24@?0@"INIntentResponse"8@"NSError"16
NSExtension
NSExtensionPointIdentifier
com.apple.watchkit
v16@?0@"NSError"8
Calling bundleId does not have permission to read user availability.
Caller does not have permission to trigger publishing user availability.
AVAILABLE
UNAVAILABLE
Call to -[SKStatusPublishingService publishStatusRequest:completion:] timed out
com.apple.donotdisturb.server.until-i-leave
com.donotdisturb.server.LocationLifetimeMonitor
CLCircularRegion
DNDModeAssertionExplicitRegionLifetime
%@.private.region.%@
Failed to load current explicit region database
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSLocationLifetimeMonitor.m
Failed to write store
<%@: %p; enteredRegionIdentifiersPendingExit: %@>
enteredRegionIdentifiersPendingExit
Failed to load current region database
<%@: %p; activeAssertionUUIDs: %@; hasActiveLifetimes: %@; currentRegion: %@; regionEntered: %@>
activeLifetimeAssertionUUIDs
@16@?0@"NSString"8
currentRegion
regionIdentifier
regionCenterLatitude
regionCenterLongitude
regionRadius
regionEntered
@16@?0@"NSUUID"8
unknown
inside
outside
act-update-fuzz-floor
act-update-fuzz-ceiling
act-update-disabled
act-update-coalescing-interval
<%@: %p; lastUpdatedTimestamp: %@; scheduleEnabledSetting: %@; timePeriodStartTimeHour: %@; timePeriodStartTimeMinute: %@; timePeriodEndTimeHour: %@; timePeriodEndTimeMinute: %@; timePeriodWeekdays: %@; bedtimeBehaviorEnabledSetting: %@>
lastUpdatedTimestamp
scheduleEnabledSetting
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodEndTimeHour
timePeriodEndTimeMinute
timePeriodWeekdays
bedtimeBehaviorEnabledSetting
<%@: %p; meDeviceStatus: %@; meDeviceName: %@>
meDeviceStatus
meDeviceName
<%@: %p; placeholderModes: %@>
placeholderModes
Inactive
Active
storeAssertionRecords
storeInvalidationRecords
storeInvalidationRequestRecords
assertionUUID
assertionStartDateTimestamp
assertionDetails
assertionSource
assertionDetailsIdentifier
assertionDetailsModeIdentifier
assertionDetailsUserVisibleEndDate
assertionDetailsLifetime
assertionDetailsReason
assertionDetailsLifetimeType
assertionDetailsCalendarEventLifetimeEventUniqueIdentifier
assertionDetailsCalendarEventLifetimeOccurrenceDateTimestamp
assertionDetailsCalendarEventLifetimeOnlyDuringEvent
assertionDetailsDateIntervalLifetimeStartDateTimestamp
assertionDetailsDateIntervalLifetimeEndDateTimestamp
assertionDetailsScheduleLifetimeScheduleIdentifier
assertionDetailsScheduleLifetimeBehavior
assertionDetailsExplicitRegionLocationLifetimeLatitude
assertionDetailsExplicitRegionLocationLifetimeLongitude
assertionDetailsExplicitLocationRegionLifetimeRadius
assertionDetailsExplicitRegionLocationLifetimeRegionIdentifier
assertionClientIdentifier
assertionSourceDeviceIdentifier
invalidationAssertion
invalidationDateTimestamp
invalidationDetails
invalidationSource
invalidationReason
invalidationReasonOverride
invalidationDetailsIdentifier
invalidationRequestUUID
invalidationRequestPredicate
invalidationRequestDateTimestamp
invalidationRequestDetails
invalidationRequestSource
invalidationRequestReason
invalidationRequestReasonOverride
invalidationPredicateType
dateInvalidationPredicateDate
clientIdentifierInvalidationPredicateIdentifiers
UUIDInvalidationPredicateUUIDs
Library
DoNotDisturb
Assertions.json
Settings.json
Metrics.json
BulletinBoard
BehaviorOverrides.plist
UntilExitRegion.json
ExplicitRegion.json
ModeConfigurations.json
ModeConfigurationsSecure.json
GlobalConfiguration.json
System
PlaceholderModes.ipados.json
PlaceholderModes.json
SyncEngineMetadata.plist
SyncEngineLastChance.plist
IDSSyncEngineMetadata.plist
AssertionSyncMetadata.plist
MeDeviceStatus.json
@"NSDictionary"16@?0@8
user-requested
assertionDetailsUserRequested
schedule
com.apple.donotdisturb.schedule.default
expire-on-end
storeLastCompleteInvalidationTimestamp
user-changed-state
storeLastCompleteInvalidationReason
assertionDetailsSyncSuppressionOptions
storeLastUpdateDate
storeLastCompleteInvalidationSourceClientIdentifier
storeLastCompleteInvalidationSourceDeviceIdentifier
@"NSDictionary"16@?0@"NSMutableDictionary"8
invalidationSourceClientIdentifier
invalidationSourceDeviceIdentifier
B16@?0@"DNDModeAssertionInvalidation"8
q24@?0@"DNDModeAssertion"8@"DNDModeAssertion"16
q24@?0@"DNDSModeAssertionInvalidationRequest"8@"DNDSModeAssertionInvalidationRequest"16
B16@?0@"DNDSModeAssertionInvalidationRequest"8
q24@?0@"DNDModeAssertionInvalidation"8@"DNDModeAssertionInvalidation"16
default.device
assertionDetailsScheduleLifetimeLatitude
assertionDetailsScheduleLifetimeLongitude
assertionDetailsScheduleLifetimeRadius
assertionDetailsScheduleLifetimeRegionIdentifier
<%@: %p; interruptionSuppression: %@>
<%@: %p; mode: %@; configuration: %@; secureConfiguration: %@; triggers: %@; impactsAvailability: %@; dimsLockScreen: %@; created: %@; lastModified: %@; automaticallyGenerated: %@; hasSecureData: %@>
<%@: %p; mode: %@; impactsAvailability: %@; dimsLockScreen: %@>
mode
configuration
secureConfiguration
triggers
secureTriggers
impactsAvailability
dimsLockScreen
created
hasSecureData
metadata
systemFields
systemFieldsRecordID
systemFieldsData
userRecordID
accountStatus
encryptionAvailable
com.apple.donotdisturb.server.MetricsManager
com.apple.donotdisturb.control-center.module
com.apple.private.Carousel.control-center.DND.state
none
com.apple.donotdisturb.assertionTaken
manual
type
controlCenterPhone
controlCenterWatch
scheduleIdentifier
hour
lockState
weekday
@"NSDictionary"8@?0
com.apple.donotdisturb.kit.lifetime.one-hour
com.apple.donotdisturb.kit.lifetime.evening
com.apple.donotdisturb.kit.lifetime.morning
com.apple.donotdisturb.kit.lifetime.location
com.apple.donotdisturb.kit.lifetime.event
com.apple.donotdisturb.mode.driving
com.apple.donotdisturb.dailyHeartbeat
manuallyEnabled
numberOfSessions
numberOfManualSessions
enabledFromControlCenterPhone
enabledFromControlCenterWatch
enabledForOneHour
enabledUntilEvening
enabledUntilMorning
enabledAtLocation
enabledDuringEvent
enabledDrivingMode
enabledSleepMode
dayOfWeek
com.apple.donotdisturb.weeklyHeartbeat
com.apple.donotdisturb.monthlyHeartbeat
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/Metrics/DNDSMetricsManager.m
MMMMYYYY
en_US
<%@: %p; minimumBreakthroughUrgency: %@; ; allowedThreads: %@; ; deniedThreads: %@; >
minimumBreakthroughUrgency
allowedThreads
deniedThreads
com.apple.donotdisturb.server.ScheduleLifetimeMonitor.timer
com.apple.mobiletimer.mode.sleep
com.apple.donotdisturb.reachability
v16@?0@"NSObject<OS_nw_path>"8
com.apple.donotdisturb.server.ModeConfigurationsManager
Cannot store mode configuration as new configuration contains secure data and store is not writeable
Cannot replace mode configuration as existing configuration has secure data and store is not writeable
Failed to load configurations
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSModeConfigurationManager.m
Saving configuration
Saved configurations
Failed to save configuations
Error saving configurations
Failed to save configuations; first lock
com.apple.donotdisturb.ModeConfigurationsManager
@"DNDSModeAssertionRecord"16@?0@8
com.apple.donotdisturb.legacy-watch-toggle
@"NSDictionary"16@?0@"DNDSModeAssertionRecord"8
com.apple.donotdisturb.PlaceholderModeManager
Failed to load placeholder modes
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSPlaceholderModeManager.m
BBBehaviorOverride
BBBehaviorOverrideEffectiveInterval
bundleID
platform
<%@: %p; preventAutoReply: %@; bypassSettings: %@; lastModified: %@; automaticallyGenerated: %@>
<schedule: enabled: %@; %@; bedtime: %@; creation: %@>
com.apple.donotdisturb.private.fmf-me-device.queue
com.apple.donotdisturb.DNDSMeDeviceService.call-out
Failed to load current 'Me Device' database
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSMeDeviceService.m
Failed to write 'Me Device' store
class
enabledSetting
DNDModeConfigurationTrigger
DNDModeConfigurationScheduleTrigger
DNDModeConfigurationSmartTrigger
DNDModeConfigurationWorkoutTrigger
DNDModeConfigurationSleepingTrigger
DNDModeConfigurationDrivingTrigger
DNDModeConfigurationGameControllerTrigger
DNDModeConfigurationMindfulnessTrigger
DNDModeConfigurationAppForegroundTrigger
DNDModeConfigurationLocationTrigger
bundleIdentifier
creationDate
latitude
longitude
radius
referenceFrame
identifier
detail
<%@: %p; triggers: %@>
com.apple.donotdisturb.server.SettingsManager
Failed to load settings
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSSettingsManager.m
Error saving settings
com.apple.donotdisturb.SettingsManager
interruption-behavior
%@ (%@)
behavior-settings
creation-date-local
creation-date-timestamp
start-time
%lu:%lu
end-time
bedtime-enabled
schedule-settings
cloud-enabled
local-enabled
sync-settings
<%@: %p; metadata: %@; data: %@>
<%@: %p; assertions: %@; invalidations: %@>
com.apple.developer.usernotifications.communication
<%@: %p>
<%@: %p; date: %@>
date
<%@: %p; clientIdentifiers: %@>
clientIdentifiers
<%@: %p; UUIDs: %@>
UUIDs
com.apple.donotdisturb.trigger.workout
com.apple.donotdisturb.private.workout-trigger
com.apple.nano
workoutDND
com.apple.donotdisturb.private.biome-workout.queue
WorkoutDNDStateChangedNotification
%@.%@
com.apple.donotdisturb.workoutTrigger
start
stop
resume
pause
unspecified
com.apple.donotdisturb.DNDSSyncEngineLastChanceDataStore.queue
com.donotdisturb.server.sync.legacy
com.donotdisturb.server.sync.legacy.workout
dndState
dndStateDate
dndCompanionAssertActive
dndGizmoAssertActive
com.donotdisturb.server.LegacyAssertionSyncManager
DNDStateChangedNotification
DNDAssertStateChangedNotification
B16@?0@"DNDSModeAssertionManagerUpdateContext"8
B16@?0@"DNDStateModeAssertionMetadata"8
com.apple.donotdisturb.sync.legacy.toggle-assertion
com.apple.donotdisturb.sync.legacy.mirror-assertion
com.apple.donotdisturb.mode.workout
com.apple.donotdisturb.server.ModeAssertionManager
Failed to load assertion database
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSModeAssertionManager.m
com.apple.private.dndtool
com.apple.donotdisturbd.nonPersistentAssertionTransaction
DNDSModeConfigurationsRecordData
DNDSModeConfigurationsRecordPartitionedData
DNDSModeConfigurationsRecordMainPartition
DNDSModeConfigurationsRecordSecondaryPartition
DNDSModeConfigurationsVersion
DNDSModeConfigurationsMinimumRequiredVersion
com.apple.donotdisturb.daemon_workloop
<%@: %p; metricsByDay: %@; lastDailyHeartbeat: %@; metricsByWeek: %@; lastWeeklyHeartbeat: %@; metricsByMonth: %@; lastMonthlyHeartbeat: %@>
metricsByDay
lastDailyHeartbeat
metricsByWeek
lastWeeklyHeartbeat
metricsByMonth
lastMonthlyHeartbeat
com.apple.donotdisturb.trigger.driving
com.apple.donotdisturb.private.driving-trigger
com.apple.donotdisturb.private.biome-driving.queue
dndEffectiveOverrides
dndPrivilegedSenderTypes
DNDEffectiveOverridesChangedNotification
DNDPrivilegedSenderChangedNotification
<%@: %p; type: %@; suppressionType: %@; minimumBreakthroughUrgency: %@; hideApplicationBadges: %@>
configurationType
suppressionType
hideApplicationBadges
v24@?0@"INIntentResponse"8@"INCExtensionError"16
v24@?0@"<INCExtensionProxy>"8@"NSError"16
<%@: %p; assertions: %@; invalidations: %@; invalidationRequests: %@>
lastReceivedStoreDate
lastSentStoreDate
pendingLastSentStoreDate
lastUpdateDate
deviceIdentifiers
@"DNDModeAssertion"16@?0@"DNDModeAssertion"8
@"DNDModeAssertionInvalidation"16@?0@"DNDModeAssertionInvalidation"8
@"DNDSModeAssertionInvalidationRequest"16@?0@"DNDSModeAssertionInvalidationRequest"8
@16@?0@"DNDModeAssertion"8
com.apple.donotdisturb.server.ModernAssertionSyncManager
com.apple.donotdisturb.pendingUpdate
Focus detected excessive change rate.
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSModernAssertionSyncManager.m
com.apple.donotdisturb.sync
forced 
@16@?0@"DNDSPairedDevice"8
v32@?0@"_DNDSSyncMessageGroup"8@"NSMutableArray"16^B24
Failed to load assertion sync metadata store
v24@?0@"NSString"8@"NSDate"16
Failed to write sync metadata
com.apple.donotdisturb.AssertionSync
device %@
last-received-dates
last-sent-dates
message %@
pending-messages
.private.schedule
sendDate: %@; deviceIdentifiers: %@
<%@: %p; lastReceivedStoreDate: %@; lastSentStoreDate: %@; pendingLastSentStoreDate: %@>
@"DNDSModeAssertionInvalidationRecord"16@?0@8
@"DNDSModeAssertionInvalidationRequestRecord"16@?0@8
@"NSDictionary"16@?0@"DNDSModeAssertionInvalidationRecord"8
@"NSDictionary"16@?0@"DNDSModeAssertionInvalidationRequestRecord"8
%@Local
B16@?0@8
NSString
Error writing migrated settings
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSLegacySettingsMigration.m
Error loading legacy settings
com.apple.donotdisturb.legacy-migration
legacy-toggle
Error writing migrated assertions
Error removing legacy settings
<%@: %p%@%@; deviceIdentifier: '%@'; deviceClass: %@; syncProtocolVersion: %lu; iOS14EraOS: %@; iCloudEnabled: %@; syncServiceType: %@; pairingIdentifier: %@; pairingDataStore: %@>
; deviceName: '%@'
; build: %@
com.apple.donotdisturb
phone
watch
local
cloud
<%@: %p; UUID: %@; date: %@; eventBehavior: %@; clientIdentifier: '%@'; outcome: %@; reason: %@>
<%@: %p; enabled: %@; manuallyEnabled: %@; numberOfSessions: %@; numberOfManualSessions: %@; enabledFromControlCenterPhone: %@; enabledFromControlCenterWatch: %@; enabledForOneHour: %@; enabledUntilEvening: %@; enabledUntilMorning: %@; enabledAtLocation: %@; enabledDuringEvent: %@; enabledDrivingMode: %@; enabledSleepMode: %@>
numOfSessions
numOfManualSessions
<%@: %p; %@; dayOfWeek: %@>
com.apple.donotdisturb.DNDSAuxiliaryStateMonitor.queue
calendar
date-interval
current-location
explicit-region
match-schedule
com.apple.donotdisturb.trigger.sleeping
com.apple.donotdisturb.private.sleeping-trigger
com.apple.donotdisturb.private.biome-sleeping.queue
com.apple.donotdisturb.sleepingTrigger
wind-down
bedtime
user-request
expected
cloud-synced
cloud-synced-user-request
nano-synced
turned-off-dnd
automation
cloud-synced-automation
other
appInfo
monitoredBundleIdentifiers
AppInfoMetadata.plist
com.apple.donotdisturb.server.AppInfoCache
com.apple.donotdisturb.iconcache
IconCache
https://itunes.apple.com/lookup
bundleId
country
entity
software,iPadSoftware,macSoftware
limit
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
v16@?0@"DNDAppInfo"8
%@_%@.%@
v32@?0@"NSURL"8@"NSURLResponse"16@"NSError"24
results
trackName
artworkUrl100
kind
software
ipad-software
mac-software
v16@?0@"NSDictionary"8
com.apple.NanoStopwatch
APP_NAME_STOPWATCH
com.apple.NanoMenstrualCycles
APP_NAME_CYCLE_TRACKING
com.apple.watchmemojieditor
APP_NAME_MEMOJI
com.apple.NanoHeartRhythm
APP_NAME_ECG
com.apple.private.NanoTimer
APP_NAME_TIMER
com.apple.NanoOxygenSaturation.watchkitapp
APP_NAME_BLOOD_OXYGEN
com.apple.NanoAlarm
APP_NAME_ALARMS
com.apple.NanoTips
APP_NAME_TIPS
com.apple.NanoSleep.watchkitapp
APP_NAME_SLEEP
com.apple.Mind
APP_NAME_MINDFULNESS
com.apple.NanoNowPlaying
APP_NAME_NOW_PLAYING
com.apple.Noise
APP_NAME_NOISE
com.apple.NanoRemote
APP_NAME_REMOTE
com.apple.HeartRate
APP_NAME_HEART_RATE
com.apple.MobileStore
APP_NAME_ITUNES_STORE
com.apple.Health
APP_NAME_HEALTH
com.apple.Bridge
APP_NAME_WATCH
com.apple.Passbook
APP_NAME_WALLET
com.apple.camera
APP_NAME_CAMERA
com.apple.store.Jolly
APP_NAME_APPLE_STORE
com.apple.mobilephone
APP_NAME_PHONE
com.apple.donotdisturb.private.schedule
@"NSString"16@?0@"NSString"8
v32@?0@"NSString"8@"NSArray"16^B24
overrideType
overrideMode
effectiveIntervals
DNDSModeConfigurationsRecord
DNDSModeConfigurations
DNDSModeConfigurationsContactHistoryToken
Local configuration
Remote configuration
modeConfiguration
Writing updated configurations
Configuration
Writing configurations
bundle
@"DNDSClientDetails"16@?0@"NSString"8
AppleInternal
@"NSURL"16@?0@"NSString"8
ClientBundles
@16@?0@"NSURL"8
B16@?0@"NSURL"8
.preload.bundle
@"DNDSClientDetails"16@?0@"NSURL"8
ABCDEFGHIJKLMNOPQRSTUVWXYZ
0123456789
com.apple.donotdisturb.server.PairedDeviceStateMonitor
B16@?0@"DNDSPairedDevice"8
com.apple.donotdisturb.PairedDevice
protocol-version
icloud-enabled
name
build
paired-device
cloud-devices
<%@: %p; symbolImageName: %@; tintColorName: %@; name: %@; modeIdentifier: %@; semanticType: %zd; visibility: %lu; identifier: %@>
symbolImageName
tintColorName
modeIdentifier
semanticType
visibility
<%@: %p; modeConfigurations: %@>
modeConfigurations
com.donotdisturb.server.IdentityServicesSync
@16@?0@"IDSDevice"8
DNDSAllowUnredactedSysdiagnose
com.apple.donotdisturb.server.sysdiagnose
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
<%@: %p; senderConfiguration: %@; ; allowedApplications: %@; ; deniedApplications: %@; >
senderConfiguration
platforms
allowedApplications
deniedApplications
ServerGeneral
Resolver
ServiceProvider
AvailabilityProvider
StateProvider
AssertionManager
AssertionStore
IDSTransport
Schedule
AppForegroundTrigger
BiomeDonation
DrivingTrigger
MindfulnessTrigger
GamingTrigger
SleepingTrigger
SmartTrigger
WorkoutTrigger
Settings
AuxiliaryState
SystemState
MeDeviceService
LegacyAssertionSync
LegacySettingsSync
ModernAssertionSync
PairedDeviceState
DateIntervalLifetimeMonitor
LocationLifetimeMonitor
CalendarEventLifetimeMonitor
ScheduleLifetimeMonitor
DefaultLifetimeMonitor
DataMigrator
Sysdiagnose
Metrics
Keybag
CloudSync
ModeConfigurations
GlobalConfiguration
IDSSyncEngine
startComponents
endComponents
repeatInterval
disableCloudSync
mirrorDNDState
<%@: %p; pairSyncEnabled: %@; cloudSyncEnabled: %@>
<%@: %p; assertions: %@; activeAssertionUUIDs: %@; activeDateIntervalByAssertionUUID: %@; interruptionBehaviorSetting: %@; lostModeState: %@; lastUpdate: %@>
syncDates
initialSyncs
pairedDeviceIdentifier
recordID
overrideStatus
overrideStatusLastCalculatedTime
overrides
privilegedSenderTypes
privilegedAddressBookGroupRecordID
effectiveWhileUnlocked
user-action
system-state
lifetime-expired
client-ended
client-replaced
server-unresponsive
client-unresponsive
location-lifetime-expired
@"DNDSModeAssertionRecord"16@?0@"DNDModeAssertion"8
@"DNDSModeAssertionInvalidationRecord"16@?0@"DNDModeAssertionInvalidation"8
@"DNDSModeAssertionInvalidationRequestRecord"16@?0@"DNDSModeAssertionInvalidationRequest"8
@"DNDModeAssertion"16@?0@"DNDSModeAssertionRecord"8
@"DNDModeAssertionInvalidation"16@?0@"DNDSModeAssertionInvalidationRecord"8
@"DNDSModeAssertionInvalidationRequest"16@?0@"DNDSModeAssertionInvalidationRequestRecord"8
@"NSUUID"16@?0@"NSString"8
com.apple.donotdisturb.trigger.mindfulness
com.apple.donotdisturb.private.mindfulness-trigger
com.apple.donotdisturb.private.biome-mindfulness.queue
com.apple.donotdisturb.mindfulnessTrigger
breathe
reflect
meditation
DNDClientDetails
DNDEventBehaviorResolutionServiceOptions
DNDEventBehaviorResolutionContextDeviceUILocked
DNDModeAssertionServiceOptions
DNDAssertionsPersist
DNDClientIdentifier
DNDSyncSuppressed
DNDiOS14SyncSuppressed
DNDUserInteractive
disableModeConfigurationsSync
disableSync
dndCompanionCloudSyncDisabled
MirrorDNDStateChangedNotification
DNDCompanionCloudSyncDisabledChangedNotification
v32@?0@"NSString"8@"DNDModeConfiguration"16^B24
B16@?0@"DNDModeConfigurationTrigger"8
UUID IN %@
source.clientIdentifier IN %@
source.deviceIdentifier == %@
NOT (details.modeIdentifier IN %@)
B24@?0@"DNDModeAssertion"8@"NSDictionary"16
startDate < %@
<%@: %p; behaviorSettings: %@; phoneCallBypassSettings: %@; scheduleSettings: %@; configurations: %@>
behaviorSettings
phoneCallBypassSettings
scheduleSettings
configurations
com.apple.donotdisturb.siri.assistant
com.apple.donotdisturb.preferences
com.apple.siri.Settings
com.apple.springboard.donotdisturb.hid
com.apple.DoNotDisturb.Intents
com.apple.private.dndtool.user-requested
com.apple.carkitd.assertion-service
com.apple.private.Carousel.school-mode.DND.state
com.apple.donotdisturb.private.gaming-trigger
com.apple.HealthDaemon.assertion-service
com.apple.sleep.sleep-mode
com.apple.sleep.sleep-mode-legacy
com.apple.mobiletimer.bedtime-mode
com.apple.donotdisturb.private.smart-trigger
Available
Source
Reason
SemanticType
ExtensionCount
BundleID
InterruptionSuppression
Count
com.apple.alarm
com.apple.notifyd.matching
com.apple.donotdisturb.%@
v16@?0@"NSObject<OS_xpc_object>"8
Date
UserVisible
<%@: %p; allowedContactTypes: %@; ; deniedContactTypes: %@; ; allowedContactGroups: %@; ; deniedContactGroups: %@; ; allowedContacts: %@; ; deniedContacts: %@; ; phoneCallBypassSettings: %@; >
allowedContactTypes
deniedContactTypes
allowedContactGroups
deniedContactGroups
allowedContacts
deniedContacts
zone
<%@: %p; identifier: %@; zone: %@>
<%@: %p; contactIdentifier: %@; firstName: '%@'; middleName: %@; lastName: %@; nickName: %@; organizationName: %@; phoneNumbers: %@; emailAddresses: %@>
phoneNumbers
contactIdentifier
firstName
middleName
lastName
nickName
organizationName
emailAddresses
value
Record
secureModeConfigurations
com.apple.donotdisturbd
com.apple.aps.donotdisturb.sync-engine
com.donotdisturb.server.DNDSSyncEngine.account-update
com.apple.donotdisturb.DNDSSyncEngine
allowSyncEngineCreation
accountAvailable
featureEnabled
supportedDevice
syncEnabled
testing
available
unavailable
v28@?0@"NSString"8B16@"NSError"20
v24@?0q8@"NSError"16
v24@?0@"CKRecordID"8@"NSError"16
v24@?0@"CKAccountInfo"8@"NSError"16
LocalModeConfigurations.json
LocalModeConfigurationsSecure.json
LocalGlobalConfiguration.json
SyncedGlobalConfiguration.json
allowed
suppressed
deleted
<%@: %p; recordID: %@; lastModified: %@; deleted: %s>
com.apple.donotdisturb.trigger.gaming
com.apple.donotdisturb.private.biome-gaming.queue
com.apple.donotdisturb.gamingTrigger
com.apple.donotdisturb.service.launching
com.apple.donotdisturb.service.non-launching
v24@?0@"DNDSClientConnectionDetails"8@"BSServiceConnection<BSServiceConnectionContext>"16
B16@?0@"NSString"8
@"DNDSClientConnectionDetails"16@?0@"DNDSClientConnectionDetails"8
Mode assertion not found for assertion UUID.
com.apple.private.donotdisturb.behavior.resolution.client-identifiers
com.apple.private.donotdisturb.mode.assertion.client-identifiers
com.apple.private.donotdisturb.state.request.client-identifiers
com.apple.private.donotdisturb.state.updates.client-identifiers
com.apple.private.donotdisturb.auxiliary-state.modification.client-identifiers
com.apple.private.donotdisturb.settings.request.client-identifiers
com.apple.private.donotdisturb.settings.modify.client-identifiers
com.apple.private.donotdisturb.settings.updates.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.request.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.modify.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.updates.client-identifiers
com.apple.private.donotdisturb.modeconfiguration.availability.client-identifiers
com.apple.private.donotdisturb.medevicestate.client-identifiers
com.apple.FocusSettings
com.apple.private.donotdisturb.mode.assertion.user-requested.client-identifiers
B24@?0@8@"NSDictionary"16
assertion.source.clientIdentifier IN %@
DNDSGlobalConfigurationRecord
DNDSGlobalConfigurationRecordData
DNDSGlobalConfigurationRecordEncryptedData
DNDSGlobalConfigurationVersion
DNDSGlobalConfigurationMinimumRequiredVersion
DNDSGlobalConfiguration
prevent
allow
[AUTO GENERATED] [%@/%@] %@ (%@:%lu%@)
 -- %@:%lu
Please describe what you were doing:
--- Do not edit below this line ---
Error: %@
Original title: %@
%%0A
tap-to-radar://new?ComponentID=960036&ComponentName=Do%%20Not%%20Disturb%%20(iOS)&ComponentVersion=New%%20Bugs&Title=%@&Description=%@
[Intenal] File a Radar (DND)
Do Not Disturb has encoutered an unexpected state. Please file a Radar to help us diagnose this issue!
Yes, I'll help!
/System/Library/Frameworks/CoreServices.framework/CoreServices
### Failed to Soft Linked: /System/Library/Frameworks/CoreServices.framework/CoreServices
LSApplicationWorkspace
dnd.keybag.observers
dnd.keybag
com.apple.private.alloy.donotdisturb
com.apple.private.alloy.status.personal
com.donotdisturb.server.Server
SignificantTimeChangeNotification
No mode configuration found for mode identifier.
@16@?0@"DNDMode"8
B16@?0@"DNDMode"8
v16@?0@"<DNDSAssertionSyncManager>"8
v16@?0q8
Migrated default mode
v32@?0@"DNDMode"8Q16^B24
@16@?0@"DNDModeConfigurationTrigger"8
B16@?0@"NSUUID"8
isPlaceholder == NO
NONE %@.modeIdentifier == modeIdentifier
isPlaceholder == YES
ANY %@.modeIdentifier == modeIdentifier
com.apple.donotdisturb.trigger.smart
com.apple.donotdisturb.private.biome-inferred-mode.queue
com.apple.donotdisturb.smartTrigger
eventBody.isAutomationEnabled
com.apple.donotdisturb.GlobalConfigurationManager
globalConfiguration
Error saving configuration
/Library/Caches/com.apple.xbs/Sources/DoNotDisturbServer_Sim/DoNotDisturb-224.7.6/DoNotDisturbServer/DNDSGlobalConfigurationManager.m
IDS sync engine is disabled because of feature flag
IDS sync engine is disabled because of unsupported device
IDS sync engine is available
Ignoring records as the sync engine is disabled: %{public}llu
IDS sync engine paired device has changed Tinker state to %{public}s
IDS sync engine changed to %{public}s
Ignoring paired device/enabled change as the sync engine is not available: %{public}llu
Paired device changed from %{public}@ to %{public}@
Ignoring incoming message as the sync engine is disabled: %{public}llu
Rejecting incoming message as the sync engine is disabled: %{public}llu
Rejecting incoming message as it is not from the active device: deviceIdentifier=%{public}@, pairedDevice=%{public}@
*** PLEASE UPDATE DEVICES *** Rejecting incoming message as the version number is not supported by this sync protocol: versionNumber=%{public}lu, currentVersionNumber=%{public}lu
Ignoring message send callback as the sync engine is disabled: %{public}llu
Error in didSendWithRequestIdentifier sending record modifications: %{public}@
Removed %{public}llu inflight records; %{public}llu remaining
%{public}llu outstanding request identifiers
Sync because keybag is unlocked
Metadata store is invalid; purging
Will not sync because keybag is locked
Will not sync because sync is inactive
Will not sync because pairedDeviceIdentifier is nil
Performing sync for all data sources
Will not send ack because keybag is locked
Will not send ack because sync is inactive
Will not send ack because action is nil
Sending ack for action %{public}@ with %{public}llu record metadata items
Sent %{public}llu record metadata items in ack
Error sending metadata ack: %{public}@
Will not send unlock message because keybag is locked
Will not send unlock message because sync is inactive
Sent unlock message
Failed to send unlock message: %{public}@
Will not send resync message because sync is inactive
Sent resync message
Failed to send resync message: %{public}@
Will not send records because keybag is locked
Will not send records because sync is inactive
Will not send records because pairedDeviceIdentifier is nil
Sending %{public}llu modified records and %{publi}llu deleted record IDs
Paired device has synced before; sending as update
Paired device has never synced; sending as replace
Metadata for modified record with ID %{public}@ is already syncing
Modified record could not be serialized: %@
Metadata for deleted record with ID %{public}@ is already syncing
Deleted record metadata could not be serialized: %@
Update message is empty; will not send
Syncing %{public}llu modifications and %{public}llu deletions
Added %{public}llu inflight records; %{public}llu remaining
Sent %{public}llu modified record IDs and %{publi}llu deleted record IDs
Error in sendMessage sending record modifications: %{public}@
Exhausted retry attempts; will not try again
Will not set retry timer because keybag is locked
Will not set retry timer because sync is inactive
Retry timer will fire in %llus
Retry timer fired (attempt #%{public}llu)
Resetting retry timer
Cancelling retry timer
No inflight metadata; will not start expiration timer
Will not set expiration timer because keybag is locked
Will not set expiration retry timer because sync is inactive
Expiration timer will fire in %llus
Expiration timer fired
Cancelling expiration timer
Will not handle message because sync is inactive
Unknown action %{public}@
Received resync message
Received ack message for action %{public}@
Paired device has performed an initial sync
Received unlock message
Received update message
Ignoring update from paired device that we have never synced with
Sending modified record %{private}@ to data source %{public}@
Incoming modified record %{private}@ has an older lastModified date than the existing record
Sending deleted recordID %{private}@ to data source %{public}@
Incoming deleted metadata %{private}@ has an older lastModified date than the existing metadata
Received replace message
Paired device should never send a replace message
Metadata store is invalid; purging and syncing
Unexpected version number %{public}llu (maximum version number %{public}llu)
Updated assertions for app launch triggers: configuration=%@
Don't have trigger for identifier '%@'. Invalidating...
Refreshing with event %@
Adding biome app launch event monitor for %{public}@
AppLaunch subscription completed: state=%ld error=%{public}@
Received app launch event: bundleID=%{public}@ starting=%{public}@ event=%{public}@
reset coalescing timer due to bundleID change; updated assertions for app launch event: event=%{public}@
coalescing timer fired; updated assertions for app launch event: event=%{public}@
Resolving breakthrough for active mode: %{public}@.
Couldn't find mode configuration for active mode: %{public}@.
Event was resolved: resolution=%@
Pruned %lu resolutions from record
Resolution modified to accomodate auxiliary state; isScreenMirrored=%d isScreenShared=%d isPresentationModeEnabled=%d
Breakthrough %{public}@ allowed for configuration %@ with event details: %@.
Breakthrough %{public}@ allowed for global settings with event details: %@.
Got bypass settings: settings=%{public}@
Checked if event source is a favorite: source=%{public}@, favorite=%{BOOL}d
Error looking up favorite contacts: error=%{public}@
Checked if event source is a contact: source=%{public}@, contact=%{BOOL}d
Error looking up contacts: error=%{public}@
Checked if event source is a group contact: source=%{public}@, contact=%{BOOL}d
Error looking up group contacts: error=%{public}@
Checked if event source is a repeat: source=%{public}@, repeat=%{BOOL}d
Checked if event source is an emergency contact: source=%{public}@, emergencyContact=%{BOOL}d
Error looking up emergency contacts: error=%{public}@
Filled out missing contact identifier: %{public}@ from sender: %@ to determine breakthrough.
Updated contact identifier to %{public}@ from sender: %@ to determine breakthrough.
No change to contact identifier from sender: %@ to determine breakthrough.
Resolving breakthrough through for configuration: %@ with event details application: %{public}@, sender: %@, urgency: %{public}@, eventType: %{public}@, threadIdentifier: %{public}@
Resolving global breakthrough for sender: %@
Failed to lookup contact in address book. predicate=%{public}@, error=%{public}@
Determined whether sharing / mirroring preferences should adjust event behavior; shouldAdjust=%d
XPC connection successfully accepted: connection=%{public}@
Mapping watchOS bundle %@ to iOS counterpart bundle %@.
[%{public}@] Error determining Focus Status; will report YES for available: error=%{public}@ connection=%{public}@
[%{public}@] Determinined Focus Status: available=%{public}@ connection=%{public}@
[%{public}@] XPC connection without User Notifications authorization tried to get Focus Status, will invalidate: connection=%{public}@
[%{public}@] XPC connection without sharing authorization tried to get Focus Status, will invalidate: connection=%{public}@
[%{public}@] XPC connection without Communication Notifications entitlement tried to get Focus Status, will invalidate: connection=%{public}@
Client XPC connection was interrupted: connection=%{public}@
Client XPC connection was invalidated: connection=%{public}@
Contacts store changed
Fetched %{public}lld contacts
Unable to fetch contact change history: %{public}@
Collected %{public}lld changed contacts and %{public}lld
History contains %{public}lld events
Unable to fetch contact change history
count: %{public}@
Refreshing monitor, date=%{public}@
Unable to find matching event for synced assertion; eventIdentifier=%{public}@; assertionIdentifier=%{public}@
No date interval for event; eventIdentifier=%{public}@
Pending date interval for event; eventIdentifier=%{public}@
Active date interval for event; eventIdentifier=%{public}@
Expired date interval for event; eventIdentifier=%{public}@
Invalidating existing timer; fireDate=%{public}@
Scheduling timer; nextUpdateDate=%{public}@
Requested access to events, granted=%{BOOL}d error=%{public}@
Refreshing monitor
Skipping availability coordination because User Availability is disabled.
Ignoring request to coordinate user availability; from and to configurations are the same.
Error publishing availability to StatusKit: %{public}@
Published status request with identifier: %{public}@
Ignoring request to publish StatusKit availability; from and to configurations are the same.
Checking if intent extensions need availability update
update.previousState: %{public}@
update.state: %{public}@
Notifying intent extensions of availability update
Found intent extension for app: %{public}@
Intent launcher error: %{public}@
Skipping Intent launch of %@ because relative availability did not change.
App (%{public}@) does not have user availability TCC permission, not launching extension.
App (%{public}@) does not have UN Communication entitlement, not launching extension.
App (%{public}@) does not have UN authorization, not launching extension.
Done dispatching launch blocks to _launchQueue
Error getting allowedModesForContactHandle: %@
Error publishing AKAvailabilityInvitation: %@
Successfully published AKAvailabilityInvitation
Skipping availability re-publish because no mode is enabled.
Skipping availability re-publish because User Availability is disabled.
Skipping availability re-publish because there were no changes to allowed contacts.
Skipping availability check because User Availability is disabled.
Looking up User Availability permission for bundleId: %{public}@
Empty bundleId passed to isTCCUserAvailabilityGrantedForBundleId
Skipping allowed modes check because User Availability is disabled.
Skipping availability check for contact because User Availability is disabled.
Messages does not have user availability TCC permission.
Error getting mode configuration for %{private}@
Unexpected empty identifier UUID or nil mode for modeIdentifier, modeIdentifier=%{private}@
.impactsAvailability is disabled for %{private}@
Forced focus status update indicating not focused due to TCC revocation
Informing availability (%{public}@) for activity %{public}@ to StatusKit
Skipping publish because User Availability is disabled.
Could not fetch a contact for contact: %@
Scoring %{public}llu matches for contact %@
Contact %@ scored %{public}llu
New high score: %{public}llu
Contact %@ has the high score %{public}llu
Explicit region monitoring failed for region; manager=%p, region=%@, error=%{public}@
Explicit region region state was determined; manager=%p, state=%{public}@, region=%@
Confirmed explicit region entry; region=%@
Confirmed explicit region entry, not taking assertion until explicit exit following early invalidation of the assertion associated with prior entry; region=%@
Confirmed explicit region exit for a region pending exit following early invalidation of the assertion associated with prior entry, will note exit; region=%@
Confirmed explicit region exit, will invalidate all assertions; region=%@
Received unexpected explicit region exit, region=%@
Did not handle explicit region state %{public}@; region=%@
Explicit region monitoring encountered a failure; manager=%p, error=%{public}@
Refreshing explicit region monitor
Assertion(s) for region(s) invalidated without exit from region(s); regions=%{public}@
Start monitoring for region; region=%@
Stop monitoring for region; region=%@
Monitoring stopped for an entered region, associated assertion will be invalidated and entrance reset; region=%@
Monitoring stopped for an entered region pending exit following early invalidation of the assertion associated with prior entry, entrance will be reset; region=%@
Failed to load current explicit region database, will request a radar; error=%{public}@
Found existing entered regions for invalidated assertions pending exit.
Wrote out explicit region store to file
Failed to write explicit region store, but error can be ignored; error=%{public}@
Failed to write explicit region store, will request radar; error=%{public}@
Until I leave location monitoring failed for region, will stop monitor and invalidate all assertions; manager=%p, region=%@, error=%{public}@
Until I leave location region state was determined; manager=%p, state=%{public}@, region=%@
Confirmed until I leave region entry
Confirmed until I leave region exit, will invalidate all assertions
Received unexpected until I leave region exit, will start region monitoring again
Did not handle until I leave region state %{public}@
Until I leave location monitoring found location, will update geofence; manager=%p, locations=%@
Until I leave location monitoring failed, will stop monitor and invalidate all assertions; manager=%p, error=%{public}@
Refreshing until I leave monitor
Requesting current location to begin monitoring until I leave
Until I leave location monitoring stopping for geofence; region=%@
Until I leave location monitoring started for geofence; region=%@
Failed to load current until I leave region database, will request a radar; error=%{public}@
Found existing until I leave region to begin monitoring
Wrote out until I leave store to file
Failed to write until I leave store, but error can be ignored; error=%{public}@
Failed to write until I leave store, will request radar; error=%{public}@
generating fuzzable %@ - %@ ms
com.apple.donotdisturb.ModeAssertionManagerUpdateContext.takeAssertion
Inserted new assertion into store; assertion=%{public}@
Inserted new invalidation request into store; invalidationRequest=%{public}@
Assertion was already invalidated; assertion=%{public}@
Assertion already exists in store; assertion=%{public}@
Found %lu assertion(s) for predicate: predicate=%{public}@
Found %lu assertion invalidation(s) for predicate: predicate=%{public}@
com.apple.donotdisturb.ModeAssertionManagerUpdateContext.invalidateAssertions
Inserted new invalidation request into store; request=%{public}@
Assertion preserved; assertion=%{public}@
Assertion invalidated; invalidation=%{public}@, invalidationRequest=%{public}@
Assertion already invalidated, skipping work; invalidation=%{public}@, invalidationRequest=%{public}@
[%{public}@] Begin: %{public}@
[%{public}@] %{public}@
[%{public}@] created: %{public}@; lastModified: %{public}@; isAutomaticallyGenerated: %{public}d; hasSecureData: %{public}d; 
[%{public}@] triggers: %{private}@
[%{public}@] configuration: %{private}@
[%{public}@] End
Failed to decode system fields for record %{public}@: %{public}@
Failed to delete metadata store: %@
Detected outdated metadata store with version %{public}llu
Failed to write metadata store: %{public}@
Sending assertion taken event
Updating aggregated metrics
Sending daily metrics heartbeat
Sending weekly metrics heartbeat
Sending monthly metrics heartbeat
Metrics Wrote out store to file
Metrics Failed to write store, but error can be ignored; error=%{public}@
Metrics Failed to write store, will request radar; error=%{public}@
Skipping inactive lifetime, lifetime=%{public}@
Informed of reachability change to %@
Informing delegates of debounced reachability state: %@
Debounced reachability state (%@) did not change. Ignoring.
Cannot store mode configuration as new configuration contains secure data and store is not writeable
Cannot replace mode configuration as existing configuration has secure data and store is not writeable
Secure data will not be written
Secure data will be written
Setting mode configuration with placeholder visibility effectively removing mode configuration for system Focus by demoting to placeholder; modeIdentifier=%{public}@
Removing mode configuration for default Focus is not supported; modeIdentifier=%{public}@
Removing mode configuration for custom Focus; modeIdentifier=%{public}@
Removing mode configuration for system Focus by demoting to placeholder; modeIdentifier=%{public}@
Failed to load configurations, will request a radar; error=%{public}@
Failed to load configurations but device is under first lock; error=%{public}@
Keybag unlocked for the first time; fixing up mode sender configurations if needed.
Failed to save configurations, but error can be ignored; error=%{public}@
Failed to save configurations, will request a radar; error=%{public}@
Failed to save configurations but device is under first lock; error=%{public}@
Failed to read record to fix up configurations; error=%{public}@
Fixing up mode with sender configuration: %{public}@ to new sender configuration: %{public}@
Fixing up driving mode with secureConfiguration: %{public}@ to new secureConfiguration: %{public}@
Failed to write record to fix up configurations though it was needed; error=%{public}@
Deferring mode sender configuration fixup until keybag unlocked for the first time.
Sanitizing contact %{public}@ failed: error=%{public}@
Calculate DND state for snapshot: activeAssertionUUIDs=%{public}@
assertion for snapshot: assertion=%{public}@
Current DND state was calculated: state=%{public}@
Failed to load placeholder modes, will request a radar; error=%{public}@
Main partition data is nil in record data %{public}@
Secondary partition data is nil in record data %{public}@
Failed to decode main partition data %{public}@: %{public}@
Failed to decode
secondary partition data %{public}@: %{public}@
Record %{public}@ is not valid JSON
Configuration: %{private}@
Dictionary: %{private}@
Partition: %{private}@
received notification that 'Me Device' status changed fetching devices
received notification that 'Me Device' devices changed fetching devices
determining current 'Me Device' status is not supported
failed to load current 'Me Device' database, will request a radar; error=%{public}@
current 'Me Device' state unknown / incomplete; requesting active device
current 'Me Device' state loaded from store; meDeviceStatus=%{public}@, meDeviceName=%{public}@
wrote out 'Me Device' store to file
failed to write 'Me Device' store, but error can be ignored; error=%{public}@
failed to write 'Me Device' store, will request radar; error=%{public}@
Failed to load settings, will request a radar; error=%{public}@
Saved settings; settingsRecord=%{public}@
Failed to save settings, but error can be ignored; error=%{public}@
Failed to save settings, will request a radar; settingsRecord=%{public}@, error=%{public}@
Refresh workout trigger for system: mode=%{public}@
Invalidating active assertion no mode identifer for workout trigger; previousModeID=%{public}@
Updating active assertion to new mode identifer for workout trigger; modeID=%{public}@ previousModeID=%{public}@
Acquiring assertion for workout trigger in response to event; modeID=%{public}@
Invalidating active assertion workout trigger in response to event; previousModeID=%{public}@
Invalidating active assertion no mode identifer for workout trigger in response to event; previousModeID=%{public}@
Adding biome workout event monitor; mode=%{public}@
Workout subscription completed: state=%ld error=%{public}@
Received workout event: eventType=%{public}@
Updated assertions for workout event: event=%{public}@
Create mode for workout trigger to match existing nano preferences setting.
Created mode for workout trigger: mode=%{public}@
Create mode for workout trigger in response to nano preference update.
Update workout trigger for mode in response to nano preference update: enabled=%{public}@ mode=%{public}@
Refreshed workout trigger for nano preferences update: mode=%{public}@
Workout trigger already matches nano preferences update: mode=%{public}@
Disable workout DND preference for workout trigger mode deletion.
Disable workout DND preference to match disabled workout trigger.
Enable workout DND preference to match enabled workout trigger.
Requesting workout trigger refresh due to nano preferences change
Failed to delete last chance store: %@
Failed to write last chance store: %@
Failed to serialize last chance store: %@
Cleaning up state
Update toggle sync: companionUpdateDate=%{public}@, gizmoUpdateDate=%{public}@, reason=%{public}@
Gizmo date was not valid, will reset to distantPast
Gizmo date is bogus, will reset to distantPast: gizmoUpdateDate=%{public}@
Gizmo date is in the future, will reset to now: gizmoUpdateDate=%{public}@
Will update toggle sync state to reflect current companion state, companionToggleDNDActive=%{BOOL}d, gizmoDNDActive=%{BOOL}d, reason=%{public}@
Ignoring update to toggle for reason %{public}@ as it was not user initiated
Gizmo has toggled DND, will mirror locally: gizmoDNDActive=%{BOOL}d
Gizmo has invalidated its DND assertion, will mirror locally
Did not update local state as it was not required
Companion assertion active changed, will update gizmo: value=%{BOOL}d
Gizmo has taken a DND assertion, will mirror locally
NPS has sent notification, name=%{public}@
Unable to find assertions, will return default: error=%{public}@
Unable to find assertion invalidations, will return default: error=%{public}@
com.apple.donotdisturb.ModeAssertionManager.updateModeAssertions
Executed handler; return=%{BOOL}d
Failed to load assertion database, will request a radar; error=%{public}@
Removing stale invalidations from store. %@
Removing stale invalidation requests from store. %@
Wrote out store to file
Failed to write store, but error can be ignored; error=%{public}@
Failed to write store, will request radar; error=%{public}@
No action taken for request to refresh driving trigger; automatic entry not supported
Error decoding behavior overrides: error=%{public}@
Ignoring schedule settings with no override
Error encoding behavior overrides
Got new schedule settings: settings=%{public}@, oldSettings=%{public}@
Got new schedule settings: settings=%{public}@
Got new bypass settings: settings=%{public}@, oldSettings=%{public}@
Got new bypass settings: settings=%{public}@
INCExtensionConnection timeout!! %{public}@
INCExtensionConnection interrupted!! %{public}@
INCExtensionConnection resumeWithCompletionHandler error!! %{public}@
INCExtensionConnection proxy handle error!! %{public}@
Sending forced update to local paired device on resume.
Skipping initial state sync on resume because there isn't a paired device.
Sending update to cloud devices on resume.
Skipping update as it should not require sync: result=%{public}@
Delaying sync of fuzzable change by %@ seconds.
Delaying sync for %@ seconds to coalesce update.
Coalescing timer has delayed sync for %@ seconds. This may indicate a rogue trigger.
Skipping sync due to server bag override.
Rejecting message because cloud sync is disabled.
Rejecting incoming message with unhandled messageType: %@
*** PLEASE UPDATE DEVICES *** Rejecting incoming message as the version number is not supported by this sync protocol: versionNumber=%lu, currentVersionNumber=%lu
Received message from sync service; syncService=%p, message=%{public}@, versionNumber=%lu, deviceIdentifier=%{public}@
Sent message from sync service; syncService=%p, requestIdentifier=%{public}@, success=%@, error=%{public}@
Unable to find paired device for device identifier %{public}@
Received impossible version number: versionNumber=%lu, currentVersionNumber=%lu
Received store from %{public}@ is older (%{public}@) than the last received store (%{public}@).
%lu assertion(s) were abandoned by the remote device, will invalidate: UUIDs=%{public}@
Incoming store from %{public}@ was older (%{public}@) than the store it replaced (%{public}@). Will re-send...
Error decoding the assertion store from sync message
Sending %{public}@update to devices: %@
Generating message for sync to %@: %@
Skipping sending store to %@ as it is the same as the previous (%{public}@)
Syncing on %{public}@ version %@: %@
Error sending %{public}@ assertions to %@: error=%{public}@
Sending %{public}@ assertions pending with identifier %{public}@
Unable to generate store message for %@
Got send results from unrecognized identifier %{public}@. success: %@, error: %{public}@
Send request %{public}@ failed with error %{public}@. Recipients: %{public}@
Bumping lastUpdateDate for %{public}@ from %{public}@ to %@
Leaving lastUpdateDate unchanged for %{public}@ (%{public}@). Got %{public}@ and already have %@{public}
Rewinding lastUpdateDate for %{public}@ (%{public}@). Got %{public}@ but already have %@{public}
Failed to load load assertion sync metadata store, will request a radar; error=%{public}@
Creating new assertion sync metadata store.
Retiring device(s) from last seen metadata: %@
Retiring device(s) from last sent metadata: %@
Retiring pending message(s) from metadata: %@
Wrote out assertion sync metadata store.
Failed to write assertion sync metadata store, but error can be ignored; error=%{public}@
Failed to write assertion sync metadata store, will request radar; error=%{public}@
Successfully wrote migrated settings
Error writing migrated settings, but error can be ignored; error=%{public}@
Error writing migrated settings, will request radar: error=%{public}@
Error loading legacy settings, will request radar: error=%{public}@
Error loading legacy settings but there was no error. Will ignore.
Legacy override status present with no pre-existing assertion store, will create
Successfully wrote migrated assertions
Error writing migrated assertions, will request radar: error=%{public}@
Legacy override status' effective time is in the future. Ignoring...
Successfully removed legacy settings
Error removing legacy settings, will request radar: error=%{public}@
Could not sanitize contacts; will use existing data this time: %{public}@
Fetched %{public}lld sanitizated contacts
Unable to fetch sanitized contacts: %{public}@
Ignoring request to donate for state update; from and to mode are the same.
Biome event(s) donated for mode end: reason=%{public}@ source=%{public}@ from=%{public}@
Biome event(s) donated for mode begin: reason=%{public}@ source=%{public}@ to=%{public}@
Updated assertions for sleeping trigger: mode=%{public}@
No action taken for request to refresh sleeping trigger; automatic entry not supported
Invalidating active assertion no mode identifer for sleeping trigger; previousModeID=%{public}@
Updating active assertion to new mode identifer for sleeping trigger; modeID=%{public}@ previousModeID=%{public}@
Ignoring event: reason=%{public}@ state=%{public}@ expectedEnd=%{public}@
Existing assertions found for sleeping trigger manager and activity manager; modeID=%{public}@ assertion=%{public}@ userAssertion=%{public}@
Invalidating user assertion(s) for mode in response to event; modeID=%{public}@ lifetime=%{public}@
Acquiring assertion for sleeping trigger in response to event; modeID=%{public}@ lifetime=%{public}@
Invalidating active assertion for sleeping trigger in response to event; previousModeID=%{public}@ assertion=%{public}@
Invalidating active user assertion for associated mode in response to event; previousModeID=%{public}@ assertion=%{public}@
Invalidating assertion(s) for mode in response to event; modeID=%{public}@
Invalidating active assertion no mode identifer for sleeping trigger in response to event; previousModeID=%{public}@
Adding biome sleeping event monitor; mode=%{public}@
Sleeping subscription completed: state=%ld error=%{public}@
Received sleeping event: reason=%{public}@ state=%{public}@ expectedEnd=%{public}@ timestamp:%f
Processed sleeping event: reason=%{public}@ state=%{public}@ expectedEnd=%{public}@
App was installed
App was removed
Will not write cache as keybag is locked
Could not create icon cache directory: %{public}@
Failed to serialize metadata store: %{public}@
Will not read cache as keybag is locked
Will not fetch app info as keybag is locked
Could not copy icon for %{private}@ to %{private}@: %{public}@
App lookup of %{private}@ from store failed: %{public}@
Unable to parse store response, bundle identifier is missing: %{public}@
Unable to parse store response, display name is missing: %{public}@
Got app %{private}@ details from the store: %{private}@
Cleaned up %{private}@
Failed to removed cached icon at %{private}@: %{public}@
Monitoring bundle identifiers: %{public}@
Relevant bundle identifiers: %{public}@
Updated assertions for schedule: settings=%{public}@
Unable to update assertions for schedule: error=%{public}@, settings=%{public}@
Existing schedule assertion does not need to change: settings=%{public}@
Backing store was purged
Fetched record with ID: %{public}@
Fetched data with ID %{public}@ is current; applying update
Fetched data with ID %{public}@ is outdated; ignoring update and resending local data
Fetched data with ID %{public}@ could not be reconstructed into a configuration; ignoring update
Failed to delete record %{public}@: %{public}@
Encountered conflict while saving configuration: %{public}@
Resolved conflict records with ID %{public}@; using remote data
Could not resolve conflict as remote configuration is corrupt; keeping local data with ID %{public}@
Resolved conflict between records with ID %{public}@; using local data
Preparing to save record %{public}@
Server removed record %{public}@
Removing all records because zone was deleted
Fetched %{public}llu record IDs for the sync engine
Preparing to save record for IDS sync engine: %{public}@
Fetched record from IDS sync engine with ID: %{public}@
IDS sync engine removed record %{public}@
Purging data for IDS sync engine
Replacing records with default mode configuration
Error deleting records: %{public}@
Could not read current configuration for monitored contacts: %{public}@
Received updated identifierless contacts: %{private}@
Detected matching contact in configuration: %{public}@
Did not encounter any matching configurations
Received updated contacts: %{private}@
Received deleted contact identifiers: %{private}@
Failed to fetch existing configurations: %{public}@
Failed to remove record %{public}@: %{public}@
Writing updated configuration with identifier: %{public}@
Error writing fetched configurations: %{public}@
Merge diff modified: %{public}@
Merge diff deleted: %{public}@
Error writing record: %{public}@
Purging record IDs: %{public}@
Error purging record IDs: %{public}@
Purging data
Could not read records to extract mode identifiers: %{public}@
Fetched %{public}llu mode identifiers
Fetched %{public}llu record IDs for the IDS sync engine
Notifying delegate of available modes: %{public}@
Unexpected macOS version: %@.%@
Unable to find device with ID %@. Devices: %@
Paired device state changed: from=%{public}@, to=%{public}@
Paired device did not change: current=%{public}@
Device class or sync protocol was invalid: device=%{public}@
Ignoring paired device on cloud channel. %@
Device class was invalid: device=%{public}@
Device protocol version was invalid: device=%{public}@
No change in cloud devices.
Cloud devices initalized. Devices: %@
Cloud devices added: %@. Removed: %@
No change in cloud devices.
Paired device state updated, will check for pairing change
Nearby devices changed, devices=%{public}@
Devices changed, devices=%{public}@
com.apple.donotdisturb.DNDSIDSSyncService.incomingMessage
Unable to find IDS device for fromID %@
Received sync data: service=%{public}@, account=%{public}@, identifier=%{public}@, message=%{public}@, deviceIdentifier=%@, context=%{public}@
Unable to resolve the device identifier from the IDS ID
Sync data send has finished: identifier=%{public}@, success=%{BOOL}d, error=%{public}@
Send sync data: identifier=%{public}@; Destinations: %@
Failed to send sync data: identifier=%{public}@, error=%{public}@
Unable to find matching IDS identifier for devices %@
Failed to migrate message
Discarding data because delegate did not allow the message
Missing data, will skip message
Missing record version number, will skip message
Invalid version number, will skip message: versionNumber=%{public}@
Capturing state from %@
Capturing sysdiagnose... date=%{public}@
Packing sysdiagnose state data...
Sysdiagnose captured
Could not capture sysdiagnose due to too much data
Could not capture sysdiagnose due to unable to make Plist: error=%{public}@
[%{public}@] Begin secure configuration
[%{public}@] Allowed app: %{private}@; %{private}@
[%{public}@] Denied app: %{private}@
[%{public}@] senderConfiguration: %{private}@
[%{public}@] End secure configuration
Unexpected class in denied application list
Purging metadata store
Forgetting device without initial sync data: %{public}@
Forgetting outdated device: %{public}@
Forgetting sync dates for record: %{public}@
Forgetting metadata for record: %{public}@
Forgetting record: %{public}@
Missing parameters of region trigger: %@
Unexpected object (%@) found in invalidation predicate UUIDs: %@
Updated assertions for mindfulness trigger: mode=%{public}@
No action taken for request to refresh mindfulness trigger; automatic entry not supported
Invalidating active assertion no mode identifer for mindfulness session trigger; previousModeID=%{public}@
Updating active assertion to new mode identifer for mindfulness session trigger; modeID=%{public}@ previousModeID=%{public}@
Acquiring assertion for mindfulness session trigger in response to event; modeID=%{public}@
Invalidating active assertion for mindfulness session trigger in response to event; previousModeID=%{public}@
Invalidating active assertion for mindfulness session trigger in response to event, trigger is disabled; previousModeID=%{public}@
Adding biome mindfulness session event monitor; mode=%{public}@
Mindfulness session subscription completed: state=%ld error=%{public}@
Received mindfulness session event: eventType=%{public}@
Updated assertions for mindfulness session event: eventType=%{public}@ sessionType=%{public}@
Failed to set Focus mirroring preference. Key does not exist or is invalid format. Expected %@.
Failed to set Focus mirroring preference. Accessor returned %@. Expected %@.
Set Focus mirroring preference.
Failed to get NPS accessor on paired device.
Initialized sync settings to %@
New sync settings: %@. Old: %@
Unable to updated workout trigger enabled setting: enabled=%{public}@ mode=%{public}@ error=%{public}@
Cannot map %{private}@ from %{public}@ to %{public}@ on this device
Record data is nil in record data %{public}@
Partioned record data is nil in record data %{public}@
Failed to decode record data %{public}@: %{public}@
Failed to decode
partitioned record data %{public}@: %{public}@
%{public}@
Sync engine will be enabled on startup
Sync engine will be disabled on startup because of feature flag
Sync engine will be disabled on startup because user setting is disabled
Sync engine will be disabled on startup because of missing account
Sync engine changing to %{public}s
Adding record IDs to save: %{public}@; to delete: %{public}@
Failed to find data source with zoneID %{public}@ for record %{public}@; sending to last-chance store
Removing record with ID %{public}@ from source %{public}@
Could not find a source for removing record with ID %{public}@
Deleted record: %{public}@
Fetched record: %{public}@
Saved record: %{public}@
Updated metadata
Failed to find data source with zoneID %{public}@ for record %{public}@
Failed to save record %{public}@: %{public}@
Unexpected error encountered when saving record %{public}@: %{public}@
Server record has changed; resolving conflict
Failed to find data source with zoneID %{public}@
Both server and client record IDs are nil for record ID %{public}@
Record is unknown on the server; flushing metadata and resending
Record ID is nil; ignoring unknown item
Zone %{public}@ not found; pushing zone to server
Zone ID is nil; ignoring record
Missing identity for zone %{public}@; deleting and recreating zone
ZoneID is nil; ignoring record
User deleted zone %{public}@; deleting zone
ZoneID is nil; ignoring deleted zone
Unhandled error: %{public}@
Creating record to save: %{public}@
Failed to create record to save: %{public}@
Record was deleted: %{public}@
Zone was deleted: %{public}@
Zone was purged: %{public}@
Keybag unlocked
Sync engine will start
Updating account
Ignoring account change because device is unsupported
Ignoring account change because feature is not enabled
Device is locked
Initial account state is %s; encryption is %s
Could not fetch account status: %@
Could not fetch account state: %{public}@
Sync engine will be disabled because account is restricted
Sync engine will be disabled because no account exists
Sync engine will be disabled because the account is unavailable
Sync engine will be disabled because of an error: %@
Could not fetch account info ID: %{public}@
Could not fetch user record ID: %{public}@
Encryption is newly available
Encryption is available
Encryption is newly unavailable
Encryption is not available
Sync enabled state is newly disabled
Sync enabled state is newly enabled
Sync enabled state is unchanged from disabled
Sync enabled state is unchanged from enabled
User record is unchanged from nil
User record was removed
New user record was added
User record ID is unchanged
User record ID has changed
Sync engine resolved state: %s
Purging sync engine data
Destroying sync engine
Account status has changed to: %{public}llu
User record ID has changed to: %{public}@
Purging data from data sources
Purging data from zone %{public}@
Performing initial sync for data sources
Performing initial sync for zone %{public}@
Migrating configurations from old local stores
Could not delete mode store: %@
Could not delete secure mode store: %@
Could not delete old synced global store: %@
Could not replace mode store with old store: %@
Could not replace secure mode store with old store: %@
Could not replace global store with old store: %@
Erasing configurations from old local stores
Could not delete old mode store: %@
Could not delete old secure mode store: %@
Could not delete old global store: %@
Updated assertions for gaming trigger: mode=%{public}@
No action taken for request to refresh gaming trigger; automatic entry not supported
Invalidating active assertion no mode identifer for game controller trigger; previousModeID=%{public}@
Updating active assertion to new mode identifer for game controller trigger; modeID=%{public}@ previousModeID=%{public}@
Acquiring assertion for game controller trigger in response to event; modeID=%{public}@
Invalidating active assertion for game controller trigger in response to event; previousModeID=%{public}@
Invalidating active assertion for game controller trigger in response to event, trigger is disabled; previousModeID=%{public}@
Adding biome game controller event monitor; mode=%{public}@
Game controller subscription completed: state=%ld error=%{public}@
Received controller event: isControllerConnected=%{BOOL}d number=%lu
Updated assertions for controller event: isControllerConnected=%{BOOL}d number=%lu
Did receive state update, will handle; stateUpdate=%{public}@
Delivering state update: pid=%d, stateUpdate=%{public}@, connection=%{public}@
Delivering active mode update: pid=%d, activeModeIdentifier=%{public}@, connection=%{public}@
Did receive update result with %lu assertion(s) & %lu invalidation(s), will handle; updateResult=%{public}@
Handling invalidation: %@
Delivering assertion update with invalidation: assertion=%{public}@, invalidation=%{public}@, connection=%{public}@
Handling assertion: %@
Delivering assertion update: assertion=%{public}@, connection=%{public}@
Did receive updated behavior settings, will handle; settings=%{public}@
Delivering settings update: settings=%{public}@, connection=%{public}@
Did receive updated phone call bypass settings, will handle; settings=%{public}@
Delivering bypass update: settings=%{public}@, connection=%{public}@
Did receive updated pair sync state, will handle; state=%{public}@
Delivering pair sync state: state=%{public}@, connection=%{public}@
Did receive updated prevent auto reply settings, will handle; settings=%{public}@
Delivering prevent auto reply update: settings=%{public}@, connection=%{public}@
Did receive updated schedule settings, will handle; settings=%{public}@
Did receive updated available modes, will handle; modes=%{public}@
Delivering modes update: pid=%d, modes=%{public}@, connection=%{public}@
Delivering available modes update: pid=%d, modes=%{public}@, connection=%{public}@
Did receive updated 'Me Device' state, will handle; meDeviceStatus=%{public}@, meDeviceName=%{public}@
Delivering 'Me Device' state update: pid=%d, meDeviceStatus=%{public}@, meDeviceName=%{public}@, connection=%{public}@
XPC connection without any valid entitlements tried to connect, will reject: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to process event, will invalidate: connection=%{public}@
[%{public}@] XPC connection blocked by: rdar://76425581 tried to take mode assertion, no action taken: connection=%{public}@, assertionDetails=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to take mode assertion, will invalidate: connection=%{public}@, assertionDetails=%{public}@
[%{public}@] XPC connection blocked by: rdar://76425581 tried to invalidate mode assertion, no action taken: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to invalidate mode assertion, will invalidate: connection=%{public}@
[%{public}@] XPC connection blocked by: rdar://76425581 tried to get mode assertion, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode assertion, will invalidate: connection=%{public}@
[%{public}@] XPC connection blocked by: rdar://76425581 tried to get mode assertion invalidation, no action taken: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode assertion invalidation, will invalidate: connection=%{public}@
[%{public}@] XPC connection blocked by: rdar://76425581 tried to invalidate all mode assertions, no action taken: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to invalidate all mode assertions, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to request all mode assertions, will invalidate: connection=%{public}@
[%{public}@] XPC connection blocked by: rdar://76425581 tried to get register for assertion updates, no action taken: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to register for assertion updates, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to query state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to query state as a part of registering for updates, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to register for state updates, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set screen sharing / mirroring settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get behavior settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set behavior settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get schedule settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set schedule settings, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set global configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get auto reply prevention state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to register for global configuration updates; will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get cloud sync state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to change cloud sync preference enabled state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get pair sync state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to change pair sync preference enabled state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to fetch state dump, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to notify of focus status sharing change, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to set mode configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to remove mode configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode configurations, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get mode configuration, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get all modes, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get available modes, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to sync modes, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to get availability state, will invalidate: connection=%{public}@
[%{public}@] XPC connection without any valid entitlements tried to publish statuskit availability, will invalidate: connection=%{public}@
Activating mode %@ with details %@
[%{public}@] XPC connection without any valid entitlements tried to activate a mode, will invalidate: connection=%{public}@, modeIdentifier=%{public}@
Invalidating mode with UUID %@ with details %@
[%{public}@] XPC connection without any valid entitlements tried to invalidate a mode, will invalidate: connection=%{public}@, assertionUUID=%{public}@
[%{public}@] XPC connection without valid entitlements tried to register for available mode identifiers; will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to fetch app info; will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to query 'Me Device' state; will invalidate: connection=%{public}@
[%{public}@] XPC connection without valid entitlements tried to register for 'Me Device' state updates; will invalidate: connection=%{public}@
Registering new connection details for connection: connection=%{public}@
Updating connection details for connection: connection=%{public}@, updatedConnectionDetails=%{public}@
Connection details unregistered: connection=%{public}@, clientDetails=%{public}@
Invalidating assertion due to client disconnect: connection=%{public}@, UUID=%{public}@
Could not read configuration: %{public}@
Fetched record with ID: %@
Fetched data with ID %@ is current; applying update
Fetched data with ID %@ is outdated; ignoring update and resending local data
Fetched data with ID %@ could not be reconstructed into a configuration; ignoring update
Failed to delete record %@: %@
Resolved conflict records with ID %@; using remote data
Resolved conflict between records with ID %@; using local data
Could not resolve conflict as remote configuration is nil; keeping local data with ID %@
Preparing to save record %@
Global configuration was deleted
Preparing to save record for IDS sync engine: %@
Fetched record from IDS sync engine with ID: %@
Replacing record with default global configuration
Updating global configuration
Ignoring incoming configuration with date %@ as it is older than existing configuration with date %@
Record data is nil in record data %@
Failed to decode record data %@: %@
Failed to fetch existing configuration: %@
Record %@ is not valid JSON
Could not read configuration: %@
Notifying delegate of prevent-auto-reply change: %{public}s
Error writing fetched configurations: %@
Will sanitize assertion date: date=%{public}@ assertion=%{public}@
Will sanitize invalidation date: date=%{public}@ invalidation=%{public}@
Will sanitize invalidation request date: date=%{public}@ invalidationRequest=%{public}@
State changed
First unlock occurred
DND phone call bypass settings changed, will refresh state; manager=%{public}@, settings=%{public}@
Access to contacts store: granted=%{BOOL}u, error=%{public}@
Got significant time change; update lifetime monitors
Lifetime monitor says active assertions changed; monitor=%p
Lifetime monitor says UUIDs should expire; monitor=%p, UUIDs=%{public}@
Notifying PowerLog of Focus interruption suppression event: bundleIdentifier=%{public}@ suppression=%ld
No mode configuration found for mode identifier: modeIdentifier=%{public}@
No behavior settings in settings manager, will return default settings
No schedule settings in settings manager, will return default settings
No default paired device
Paired devices: %@
Updated mode modifification date to %@ on assertion %@
%@ configuration doesn't have a useful modification date: %@
Unable to find mode configuration for mode %@
Performed update for sync manager; manager=%{public}@
Error when performing update for sync manager; manager=%{public}@, error=%{public}@
Error while requesting settings sync for Focus sync. %@
Sync manager gets bypass settings; manager=%{public}@, settings=%{public}@
Received updated bypass settings via sync; manager=%{public}@, settings=%{public}@
Error replacing bypass settings in default mode: %{public}@
Error fetching default mode: %{public}@
Received updated schedule settings via sync; manager=%{public}@, settings=%{public}@
DND behavior settings changed, will refresh state; manager=%{public}@, settings=%{public}@
DND schedule settings changed, will refresh state; manager=%{public}@, settings=%{public}@
Sync settings updated; manager=%{public}@, settings=%{public}@
Available modes updated; manager=%{public}@, modes=%{public}@
Settings for this mode changed. Forcing a sync to all devices.
Skipping forced update for settings change because they were not local changes.
Paired devices updated; monitor=%{public}@, previousDevice=%{public}@, device=%{public}@
Cloud devices changed; monitor=%{public}@, previousDevices=%{public}@, devices=%{public}@
Failed forced publish to StatusKit: %@
Fetched changes
Error fetching changes: %@
Forcing cloud sync
Sent changes
Error sending changes: %@
Device regained internet connectivity. Queueing a current activity sync.
Device lost internet connectivity.
State was updated: previousState=%{public}@
State was updated: currentState=%{public}@
State was updated: reason=%{public}@ source=%{public}@
Notifying PowerLog of Focus status change event: availability=%ld source=%ld reason=%ld semanticType=%ld extensionsLaunched=%ld
Unable to set mode configuration while migrating bypass settings: error=%{public}@
Migrated bypass settings: settings=%{public}@
Unable to save eraose old bypass settings: settings=%{public}@ error=%{public}@
Unable to fetch mode configurations to migrate bypass settings: error=%{public}@
Unable to fetch global configuration to migrate bypass settings: error=%{public}@
Delaying default mode migration until device unlocks
Unable to save migrated default mode: mode=%{public}@ error=%{public}@
Checking configuration from %@ for %@
Unable to find configuration for %@. It may not yet exist on this device.
Configuration for %@ is out of date. %@ < %@
Requesting configuration sync for stale mode %@.
Failed to sync updated configurations for synced %@ assertion. Error: %@
Updated configurations succesfully synced for %@.
Mode configuration is up to date.
Mode assertion update result:
 assertions=%{public}@
Mode assertion update result:
 invalidations=%{public}@
Ignored update as it changed nothing
Current DND sync status: local device=%{public}@, cloud devices=%{public}@, settings=%{public}@
Received new lost mode state: state=%@
Updated assertions for smart triggers: supportedModes=%{public}@
Adding biome inferred mode event monitor for %{public}@
InferredMode subscription completed: state=%ld error=%{public}@
Received inferred mode event: modeIdentifier=%{public}@ starting=%{public}@
Updated assertions for inferred mode event: event=%{public}@
Ignored automatic entry for unsupported inferred mode event: event=%{public}@
Setting auto reply to %s
Error reading auto reply state: %@
Saved configuration; configuration=%{public}@
Failed to save configuration, but error can be ignored; error=%{public}@
Failed to save configuration, will request a radar; configuration=%{public}@, error=%{public}@
Failed to save configuration but device is under first lock; configuration=%{public}@, error=%{public}@
Received SIGTERM
Starting up...
Record
DNDSBackingStoreRecord
NSObject
DNDSIDSSyncEngine
DNDSSyncServiceDelegate
DNDSKeybagStateObserver
DNDSSysdiagnoseDataProvider
DNDSIDSSyncEngineSynchronizing
Resolution
DNDSModernAssertionSourceResolution
DNDSBehaviorSettingsRecord
NSCopying
NSMutableCopying
DNDSMutableBehaviorSettingsRecord
DNDSPartitionedBackingStoreRecord
DNDSJSONBackingStore
DNDSBackingStore
DNDSModeAssertionInvalidationRequest
Schedule
DNDSLifetimeMonitorResult
DNDSBaseLifetimeMonitor
DNDSLifetimeMonitor
DNDSAppForegroundTriggerManager
DNDSBiomeTriggerManager
DNDSBiomeTriggerManagerDataSource
DNDSAppForegroundTriggerConfiguration
DNDSDateHelper
DNDContactHandle
DNDSEventBehaviorEvolver
DNDSEventBehaviorResolver
Testing
DNDSMemoryCachedBackingStore
DNDSBackingStoreDelegate
DNDSCachedBackingStore
DNDSRemoteAvailabilityServiceProvider
BSServiceConnectionListenerDelegate
DNDRemoteAvailabilityServiceServerProtocol
DNDSBypassSettingsRecord
DNDSMutableBypassSettingsRecord
DNDSContactMonitorChangeCollector
CNChangeHistoryEventVisitor
DNDSContactMonitor
DNDSContactMonitoring
DNDSCalendarEventLifetimeMonitor
SyncMessage
DNDSDateIntervalLifetimeMonitor
DNDSDefaultLifetimeMonitor
DNDSUserAvailabilityCoordinator
DNDSContactProvider
DNDSContactProviding
Defaults
DNDSLocationLifetimeMonitor
CLLocationManagerDelegate
DNDSAggregateLocationLifetimeMonitor
DNDSMeDeviceServiceListener
DNDSExplicitRegionLocationLifetimeMonitor
DNDSLocationTriggerConfiguration
DNDSExplicitRegionStore
DNDSMutableExplicitRegionStore
DNDSUntilExitLocationLifetimeMonitor
DNDSUntilExitRegionStore
DNDSMutableUntilExitRegionStore
DNDSIDSServerBagValues
DNDSScheduleSettingsRecord
DNDSMutableScheduleSettingsRecord
DNDSMeDeviceStore
DNDSMutableMeDeviceStore
DNDSPlaceholderModesRecord
BackingRecord
BackingStores
BackingRecordUpgrade
DNDSModeAssertionManagerUpdateContext
DNDSModeAssertionUpdateContext
DNDSModeAssertionQuerying
SysdiagnoseRecord
DNDSModeDetails
DNDSModeConfigurationRecord
DNDSMutableModeConfigurationRecord
DNDSSyncEngineMetadataStore
DNDSSyncEngineMetadataStoring
DNDSMetricsManager
DNDSApplicationConfigurationRecord
DNDSMutableApplicationConfigurationRecord
DNDSScheduleLifetimeMonitor
DNDSModeRepository
DNDSReachability
DNDSModeConfigurationManager
DNDSModeConfigurationsStoreDelegate
PeaceSyncMessage
Contacts
DNDSClientConnectionDetails
DNDSMutableClientConnectionDetails
DNDSStateProvider
DNDSPlaceholderModeManager
LegacySupport
DNDSFirstUnlockPurgedBackingStore
DNDSCachedBackingStoreDelegate
DNDSGlobalConfiguration
DNDSMutableGlobalConfiguration
CKRecord
DNDSScheduleSettings
DNDSMeDeviceService
DNDSModeConfigurationTriggersRecord
DNDSMutableModeConfigurationTriggersRecord
DNDSSettingsManager
DNDSSyncSettingsProviderDelegate
DNDSIDSRecord
DNDSModeAssertionUpdateResult
Batch
DNDSModeAssertionInvalidationPredicate
DNDSAnyModeAssertionInvalidationPredicate
DNDSModeAssertionDateInvalidationPredicate
DNDSModeAssertionClientIdentifierInvalidationPredicate
DNDSModeAssertionUUIDInvalidationPredicate
DNDSWorkoutTriggerManager
DNDSModeConfigurationsRecordDiff
DNDSSyncEngineLastChanceDataStore
DNDSSyncEngineLastChanceDataStoring
DNDSLegacyAssertionSyncManager
DNDSAssertionSyncManager
DNDSModeAssertionManager
DNDSModeAssertionUpdating
DNDSWorkloop
DNDSMetricsRecord
DNDSMutableMetricsRecord
DNDSDrivingTriggerManager
DNDSLegacySettingsSyncManager
DNDSSettingsSyncManager
DNDSConfigurationRecord
DNDSMutableConfigurationRecord
DNDSUserAvailabilityIntentLauncher
DNDSModeAssertionStore
DNDSMutableModeAssertionStore
DNDSModernAssertionSync
DNDSModernAssertionSyncManager
AssertionSyncManager
_DNDSPendingMessageRecipients
_DNDSSyncMessageGroup
DNDSModernAssertionSyncMetadataStore
DNDSModeAssertionStoreRecord
Dictionary
DNDSModeAssertionStoreRecordDictionaryEncoding
Sanitization
DNDSBiomeDonationManager
DNDSPairedDevice
DNDSEventBehaviorResolution
DNDSHeartbeatMetricsRecord
DNDSHeartbeatMetricsProtocol
DNDSMutableHeartbeatMetricsRecord
DNDSMutableHeartbeatMetricsProtocol
DNDSDailyHeartbeatMetricsRecord
DNDSMutableDailyHeartbeatMetricsRecord
DNDSWeeklyHeartbeatMetricsRecord
DNDSMutableWeeklyHeartbeatMetricsRecord
DNDSMonthlyHeartbeatMetricsRecord
DNDSMutableMonthlyHeartbeatMetricsRecord
DNDSAuxiliaryStateMonitor
DNDModeAssertionLifetimeTypeHelper
DNDModeAssertionScheduleLifetimeBehaviorHelper
DNDSSleepingTriggerManager
DNDSAppInfoCache
LSApplicationWorkspaceObserverProtocol
DNDSScheduleManager
DNDSLegacyBehaviorOverride
NSSecureCoding
NSCoding
DNDSModeConfigurationsStore
DNDSSyncEngineDataSource
DNDSIDSSyncEngineDataSource
DNDSModeConfigurationsStoring
DNDSContactMonitorListener
DNDSClientDetailsProvider
DNDServer
DNDSPairedDeviceStateMonitor
IDSServiceDelegate
BackingStore
DNDSModeRecord
DNDSMutableModeRecord
DNDSConfigurationsRecord
DNDSMutableConfigurationsRecord
DNDSIDSSyncService
DNDSSyncService
DNDSConfigurationSecureRecord
DNDSMutableConfigurationSecureRecord
DNDSLegacyBehaviorOverrideEffectiveInterval
DNDSSyncSettings
DNDSMutableSyncSettings
DNDSStateProviderSystemSnapshot
DNDSMutableStateProviderSystemSnapshot
DNDSIDSSyncEngineMetadataStore
DNDSIDSSyncEngineMetadataStoring
DNDModeAssertionReasonHelper
DNDModeAssertionInvalidationReasonHelper
DNDModeAssertionInvalidationReasonOverrideHelper
DNDSModeAssertionInvalidationPredicateTypeHelper
DNDSModeAssertionRecord
DNDSModeAssertionDetailsRecord
DNDSModeAssertionLifetimeRecord
DNDSModeAssertionSourceRecord
DNDSModeAssertionInvalidationRecord
DNDSModeAssertionInvalidationDetailsRecord
DNDSModeAssertionInvalidationRequestRecord
DNDSModeAssertionInvalidationPredicateRecord
LifetimePhase
DNDSMindfulnessTriggerManager
DNDSClientDetails
DNDSSyncSettingsProvider
DNDSBackingStoreDictionaryContext
DNDSMutableBackingStoreDictionaryContext
DNDSAppForegroundTriggerManagerDataSource
DNDSDrivingTriggerManagerDataSource
DNDSGamingTriggerManagerDataSource
DNDSMindfulnessTriggerManagerDataSource
DNDSSleepingTriggerManagerDataSource
DNDSSmartTriggerManagerDataSource
DNDSWorkoutTriggerManagerDataSource
Predicates
DNDSSettingsRecord
DNDSMutableSettingsRecord
DNDSApplicationIdentifierMapper
DNDSApplicationIdentifierMapping
DNDSModeResolutionService
DoNotDisturbServer
DNDSConfigurationsSecureRecord
DNDSMutableConfigurationsSecureRecord
DNDSXPCEventInterface
DNDSXPCEventStream
DNDSSenderConfigurationRecord
DNDSMutableSenderConfigurationRecord
DNDSIDSRecordID
DNDSContactRecord
DNDSMutableContactRecord
DNDSModeConfigurationsRecord
DNDSMutableModeConfigurationsRecord
DNDSSyncEngine
CKSyncEngineDataSource
DNDSIDSRecordMetadata
DNDSMutableIDSRecordMetadata
DNDSXPCTimer
DNDSGamingTriggerManager
DNDSRemoteServiceProvider
DNDRemoteServiceServerProtocol
DNDRemoteServiceServerBehaviorResolutionProtocol
DNDRemoteServiceServerModeAssertionProtocol
DNDRemoteServiceServerStateProtocol
DNDRemoteServiceServerSettingsProtocol
DNDRemoteServiceServerModeConfigurationProtocol
DNDRemoteServiceServerModeSelectionProtocol
DNDRemoteServiceServerGlobalConfigurationProtocol
DNDRemoteServiceServerAppInfoProtocol
DNDRemoteServiceServerMeDeviceStateProtocol
DNDRemoteServiceServerAuxiliaryStateProtocol
DNDRemoteMonitorServerProtocol
DNDRemoteMonitorServerModeAssertionProtocol
DNDRemoteMonitorServerStateProtocol
DNDRemoteMonitorServerSettingsProtocol
DNDRemoteMonitorServerModeSelectionProtocol
DNDRemoteMonitorServerGlobalConfigurationProtocol
DNDRemoteMonitorServerMeDeviceStateProtocol
Entitlements
DNDSGlobalConfigurationStore
DNDSGlobalConfigurationStoring
DateOperations
DNDSKeybag
DNDSKeybagStateProviding
DNDSGlobalConfigurationManagerDelegate
DNDSServer
DNDSEventBehaviorResolverDataSource
DNDSLifetimeMonitorDataSource
DNDSLocationLifetimeMonitorDataSource
DNDSScheduleLifetimeMonitorDataSource
DNDSLifetimeMonitorDelegate
DNDSRemoteServiceProviderDelegate
DNDSRemoteServiceProviderBehaviorResolutionDelegate
DNDSRemoteServiceProviderAssertionDelegate
DNDSRemoteServiceProviderStateDelegate
DNDSRemoteServiceProviderSettingsDelegate
DNDSRemoteServiceProviderModeConfigurationsDelegate
DNDSRemoteServiceProviderGlobalConfigurationDelegate
DNDSRemoteServiceProviderAppInfoDelegate
DNDSRemoteServiceProviderMeDeviceStateDelegate
DNDSRemoteServiceProviderAuxiliaryStateDelegate
DNDSRemoteAvailabilityServiceProviderDelegate
DNDSAssertionSyncManagerDataSource
DNDSAssertionSyncManagerDelegate
DNDSLegacyAssertionSyncManagerDataSource
DNDSSettingsSyncManagerDataSource
DNDSSettingsSyncManagerDelegate
DNDSScheduleManagerDataSource
DNDSSettingsManagerDelegate
DNDSPairedDeviceStateMonitorDelegate
DNDSModeConfigurationManagerDelegate
DNDSReachabilityDelegate
DNDSSmartTriggerManager
DNDSGlobalConfigurationManager
DNDSGlobalConfigurationStoreDelegate
bs_safeDictionaryForKey:
newWithDictionaryRepresentation:context:
bs_safeNumberForKey:
unsignedIntegerValue
bs_safeStringForKey:
URLWithString:
fileURLWithPath:
initWithSource:applicationIdentifier:displayName:storeIconURL:cachedIconURL:
applicationIdentifier
dictionaryRepresentationWithContext:
dictionary
source
numberWithInteger:
setObject:forKeyedSubscript:
displayName
storeIconURL
absoluteString
cachedIconURL
path
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
_isTinkerWatch
initWithMetadataStore:syncService:keybag:role:syncState:inflightExpirationTime:
init
strongToWeakObjectsMapTable
setDelegate:
resume
addObserver:
validate
date
setDeletedAtDate:forRecordIDs:
setLastModifiedDate:forRecordIDs:
_queue_resetRetryTimer
deviceIdentifier
_queue_syncDataSourcesToDeviceWithIdentifier:
removeObjectForKey:
objectForKey:
setObject:forKey:
syncProtocolVersion
syncServiceType
copy
_queue_validate
hasPerformedInitialSyncForPairedDeviceIdentifier:
_queue_sendResyncMessageToDeviceWithIdentifier:
hasUnlockedSinceBoot
_queue_handleMessage:fromPairedDeviceIdentifier:
isEqualToString:
_queue_startRetryTimer
objectForKeyedSubscript:
minusSet:
_queue_restartInflightExpirationTimer
count
_queue_sendUnlockMessageToDeviceWithIdentifier:
isValidAtDate:
purge
dictionaryRepresentation
allKeys
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
sharedInstance
activePairedDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
firstObject
valueForProperty:
modifiedRecordIDsForPairedDeviceIdentifier:
deletedRecordIDsForPairedDeviceIdentifier:
array
countByEnumeratingWithState:objects:count:
recordIDsForIDSSyncEngine:
addObjectsFromArray:
unknownRecordIDsInRecordIDs:
arrayByAddingObjectsFromArray:
_queue_sendModifiedRecordIDs:deletedRecordIDs:toDeviceWithIdentifier:
initWithDestination:partitionType:redactSensitiveData:contactProvider:applicationIdentifierMapper:
addObject:
timeIntervalSinceReferenceDate
numberWithDouble:
dictionaryWithObjects:forKeys:count:
setWithObject:
sendMessage:withVersionNumber:messageType:toDestinations:completionHandler:
_queue_removeAllInflightMetadata
_queue_cancelInflightExpirationTimer
recordMetadataForRecordID:
containsObject:
recordID
initWithMetadata:
_queue_dataSourceForZone:
idsSyncEngine:prepareRecordToSave:
UUID
UUIDString
unionSet:
sendMessage:withVersionNumber:messageType:toDestinations:identifyingCompletionHandler:
_queue_cancelRetryTimer
distantFuture
earlierDate:
dateByAddingTimeInterval:
timeIntervalSinceNow
_queue_startInflightExpirationTimer
_queue_earliestExpirationTimeSinceNowForInflightMetadata
_queue_removeAllInflightMetadataWithExpirationDate:
removeAllObjects
laterDate:
_queue_handleUpdateMessage:fromPairedDeviceIdentifier:
_queue_handleReplaceMessage:fromPairedDeviceIdentifier:
_queue_handleAckMessage:fromPairedDeviceIdentifier:
_queue_handleUnlockMessage:fromPairedDeviceIdentifier:
_queue_handleResyncMessage:fromPairedDeviceIdentifier:
removePairedDeviceIdentifier:
bs_safeArrayForKey:
doubleValue
dateWithTimeIntervalSinceReferenceDate:
setPerformedInitialSyncForPairedDeviceIdentifier:
setSyncDate:forRecordsMatchingMetadata:forPairedDeviceIdentifier:
lastModified
metadata
arrayWithObjects:count:
updateMetadata:
setSyncDate:forRecordIDs:forPairedDeviceIdentifier:
idsSyncEngine:didFetchRecord:
idsSyncEngine:recordWithIDWasDeleted:
_queue_sendAckWithMetadata:forAction:toDeviceWithIdentifier:
purgeRecordsForIDSSyncEngine:
syncService:didReceiveMessage:withVersionNumber:messageType:fromDeviceIdentifier:
syncService:shouldAcceptIncomingMessage:withVersionNumber:messageType:fromDeviceIdentifier:
syncService:didSendWithRequestIdentifier:withSuccess:error:
keybagDidUnlockForTheFirstTime:
keybagDidChangeState:
sysdiagnoseDataForDate:redacted:
sysdiagnoseDataIdentifier
T@"NSString",R,C,N
addRecordIDsToSave:recordIDsToDelete:
setDataSource:forZone:
setPairedDevice:syncEnabled:
sync
initWithMetadataStore:syncService:keybag:
setDidReceiveUnlockMessage:
setDidFireMetadataExpirationTimer:
pairSyncState
inflightMetadata
.cxx_destruct
_sourcesByZone
_syncService
_pairedDevice
_syncState
_metadataStore
_keybag
_queue
_retryTimer
_inflightExpirationTimer
_retriesAvailable
_inflightExpirationTime
_inflightMetadataByRequestIdentifier
_inflightDateByRequestIdentifier
_inflightMetadata
_role
_didReceiveUnlockMessage
_didFireMetadataExpirationTimer
TQ,R,N
resolveWithExpectedRemoteDeviceIdentifier:localDeviceIdentifier:remoteDeviceIdentifier:
startDate
details
initWithUUID:startDate:details:source:
assertion
invalidationDate
reason
reasonOverride
initWithAssertion:invalidationDate:details:source:reason:reasonOverride:
clientIdentifier
initWithClientIdentifier:deviceIdentifier:
predicate
requestDate
initWithUUID:predicate:requestDate:details:source:reason:reasonOverride:
_initWithRecord:
interruptionBehaviorSetting
_initWithInterruptionBehaviorSetting:
stringWithFormat:
bs_safeObjectForKey:ofType:
migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:
copyWithZone:
mutableCopyWithZone:
_interruptionBehaviorSetting
T@"NSNumber",R,C,N,V_interruptionBehaviorSetting
setInterruptionBehaviorSetting:
T@"NSNumber",C,D,N
initWithRecordClass:fileURL:secureFileURL:versionNumber:securityClass:
dealloc
readRecordDictionaryfromURL:withError:
newWithDictionaryRepresentation:partitionedDictionaryRepresentation:context:
writeRecord:writePartition:error:
writeRecordDictionary:withSecurityClass:toURL:error:
defaultManager
fileExistsAtPath:
dataWithContentsOfURL:options:error:
JSONObjectWithData:options:error:
integerValue
delegate
backingStore:migrateDictionaryRepresentation:fromVersionNumber:toVersionNumber:
errorWithDomain:code:userInfo:
isValidJSONObject:
dataWithJSONObject:options:error:
URLByDeletingLastPathComponent
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
dataWritingOptionsForSecurityClass:
writeToURL:options:error:
dnds_isOutOfSpaceError
numberWithBool:
readRecordWithError:
writeRecord:error:
T@"<DNDSBackingStoreDelegate>",W,N
initWithRecordClass:fileURL:versionNumber:
_recordClass
_fileURL
_secureFileURL
_versionNumber
_deviceOutOfSpace
_securityClass
_delegate
T@"NSString",R,C,D,N
T@"<DNDSBackingStoreDelegate>",W,N,V_delegate
requestWithPredicate:requestDate:source:reason:
requestWithPredicate:requestDate:details:source:reason:reasonOverride:
_UUID
_predicate
_requestDate
_details
_source
_reason
_reasonOverride
T@"NSUUID",R,C,N,V_UUID
T@"DNDSModeAssertionInvalidationPredicate",R,C,N,V_predicate
T@"NSDate",R,C,N,V_requestDate
T@"DNDModeAssertionInvalidationDetails",R,C,N,V_details
T@"DNDModeAssertionSource",R,C,N,V_source
TQ,R,N,V_reason
TQ,R,N,V_reasonOverride
contactIdentifier
initWithContactIdentifier:
firstName
setFirstName:
middleName
setMiddleName:
lastName
setLastName:
nickName
setNickName:
organizationName
setOrganizationName:
phoneNumbers
setPhoneNumbers:
emailAddresses
setEmailAddresses:
setContactIdentifier:
makeRecord
contactForRecord:
scheduleEnabledSetting
timePeriod
weekdays
component:fromDate:
startTime
dateComponents
endTime
date:matchesComponents:
nextDateAfterDate:matchingComponents:options:
setWeekday:
compare:
initWithStartDate:endDate:
dnds_dateIntervalForScheduleSettings:date:calendar:
dnds_dateIntervalUntilEndOfScheduleForScheduleSettings:startDate:calendar:
initWithActiveUUIDs:expiredUUIDs:
activeUUIDs
expiredUUIDs
_activeUUIDs
_expiredUUIDs
T@"NSArray",R,C,N,V_activeUUIDs
T@"NSArray",R,C,N,V_expiredUUIDs
cStringUsingEncoding:
refreshMonitorFromQueueForDate:
dataSource
lifetimeClass
lifetimeMonitor:modeAssertionsWithLifetimeClass:
updateForModeAssertions:date:
lifetimeMonitor:lifetimeDidExpireForAssertionUUIDs:expirationDate:
activeAssertionsDidChangeForLifetimeMonitor:
activeLifetimeAssertionUUIDs
bs_mapNoNulls:
refreshMonitorForDate:
setDataSource:
T@"NSArray",R,C,N
T@"<DNDSLifetimeMonitorDataSource>",W,N
T@"<DNDSLifetimeMonitorDelegate>",W,N
queue
_activeLifetimeAssertionUUIDs
_dataSource
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSArray",R,C,N,V_activeLifetimeAssertionUUIDs
T@"<DNDSLifetimeMonitorDataSource>",W,N,V_dataSource
T@"<DNDSLifetimeMonitorDelegate>",W,N,V_delegate
settingsForRecord:
dateWithTimeIntervalSince1970:
boolValue
initWithPreventAutoReply:bypassSettings:lastModified:automaticallyGenerated:
bypassSettings
preventAutoReply
timeIntervalSince1970
isAutomaticallyGenerated
backingStoreWithFileURL:
serialQueueTargetingSharedWorkloop:
appForegroundTriggerConfigurationForAppForegroundTriggerManager:
_configureAppForegroundTriggerWithConfiguration:
_refreshWithTriggerConfiguration:event:
triggerManager:assertionsWithClientIdentifer:error:
triggeringBundleIdentifiers
setWithArray:
identifier
hasSuffix:
stringByReplacingOccurrencesOfString:withString:
triggerManager:invalidateModeAssertionWithUUID:reason:reasonOverride:clientIdentifier:error:
eventBody
isStarting
bundleID
modeIdentifierForBundleIdentifier:
stringByAppendingString:
setIdentifier:
setLifetime:
setModeIdentifier:
setReason:
triggerManager:takeModeAssertionWithDetails:clientIdentifier:error:
modeIdentifier
bs_filter:
cancel
initWithIdentifier:targetQueue:
appLaunch
publisher
filterWithKeyPath:comparison:value:
subscribeOn:
state
error
_refreshIfNeccessaryForEvent:
sinkWithCompletion:receiveInput:
_coalescingQueue_coalesceWithTriggerConfiguration:event:
_coalescingQueue_resetCoalescingTimer
_coalescingQueue_refreshWithTriggerConfiguration:
refresh
_biomeQueue
_coalescingTimer
_coalescingQueue
_sinks
_currentTriggerConfiguration
_latestEvent
_eventCoalescingTransaction
T@"<DNDSAppForegroundTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_updateModeAssertionManagerAndRefreshLifetimesAndStateWithHandler:error:
clientDetailsForIdentifier:
identifiers
predicateForModeAssertionsWithClientIdentifiers:
modeAssertionsMatchingPredicate:
takeAssertionWithDetails:source:startDate:
assertions
lockState
assertionTaken:withClientDetails:lockState:
predicateForAssertionUUIDs:
invalidateAssertionsForRequest:
invalidations
predicateForModeAssertionInvalidationsWithAssertionClientIdentifiers:
modeAssertionInvalidationsMatchingPredicate:
triggerManager:performModeAssertionUpdatesWithHandler:
triggerManager:latestInvalidationWithClientIdentifer:error:
mutableCopy
addTriggerForModeWithIdentifier:onForegroundOfApp:
_bundleIDToModeIdentifierTriggers
dnds_numberWithDate:
dnds_dateValue
dnds_safeNumberWithDate:
predicateForContactsWithIdentifiers:
value
destinationIdIsPhoneNumber
type
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:prefixHint:
predicateForContactsMatchingEmailAddress:
dnds_predicateForContactsMatchingEventSender:
length
isPopulated
initWithContactStore:
_queue_resolveBehaviorForEventDetails:clientDetails:date:error:
localizedStringFromDate:dateStyle:timeStyle:
outcome
currentStateForEventBehaviorResolver:
isActive
behavior
_activeModeConfigurationForBehavior:
mode
configuration
activeModeUUID
_queue_resolutionForModeWithConfiguration:eventDetails:clientDetails:activeModeUUID:date:error:
activeModeIdentifier
initWithEventDetails:interruptionSuppression:resolutionReason:activeModeUUID:
resolutionForDate:eventBehavior:clientIdentifier:outcome:reason:
_queue_adjustEventBehaviorResolutionForAuxiliaryState:
predicateWithBlock:
filterUsingPredicate:
eventBehavior
interruptionSuppression
_queue_shouldAdjustEventBehaviorForMirroring
isScreenShared
isScreenMirrored
isPresentationModeEnabled
eventDetails
activeModeConfiguration
_legacyModeConfigurationForModeConfiguration:
defaultConfiguration
senderConfiguration
phoneCallBypassSettings
setPhoneCallBypassSettings:
setSenderConfiguration:
setMinimumBreakthroughUrgency:
setConfiguration:
bundleIdentifier
sender
urgency
threadIdentifier
notifyAnyway
_queue_isBreakthroughAllowedForConfiguration:application:sender:urgency:eventType:threadIdentifier:notifyAnyway:reason:
_queue_isBreakthroughAllowedForSender:eventType:clientDetails:date:reason:
suppressionType
eventBehaviorResolver:bypassSettingsForClientIdentifier:
immediateBypassEventSourceType
_queue_eventSourceIsFavorite:
_queue_eventSourceIsContact:
immediateBypassCNGroupIdentifier
_queue_eventSourceIsContact:inGroupWithIdentifier:
repeatEventSourceBehaviorEnabledSetting
_queue_eventSourceIsRepeat:clientDetails:date:
_queue_eventSourceIsEmergencyContact:
initWithKeysToFetch:
setPredicate:
setUnifyResults:
isUnified
linkedContacts
entriesForContact:
bs_containsObjectPassingTest:
enumerateContactsWithFetchRequest:error:usingBlock:
predicateForContactsInGroupWithIdentifier:
unifiedContactsMatchingPredicate:keysToFetch:error:
bs_flatten
callAlert
ignoreMute
_queue_firstContactForPredicate:
deniedContactTypes
allowedContactTypes
deniedContactGroups
allowedContactGroups
deniedContacts
allowedContacts
eventBehaviorResolver:isAvailabilityActiveForBundleIdentifier:
deniedApplications
allowedApplications
minimumBreakthroughUrgency
deniedThreads
allowedThreads
matchesContactHandle:
_queue_resolveOutcomeForEventSender:clientDetails:date:reason:
initWithModeRepository:contactStore:auxiliaryStateMonitor:
resolveBehaviorForEventDetails:clientDetails:date:error:
_modeRepository
_contactStore
_auxiliaryStateMonitor
_favorites
_resolutionRecord
T@"<DNDSEventBehaviorResolverDataSource>",W,N,V_dataSource
resolutionForConfiguration:eventDetails:clientDetails:date:error:
purgeCache
T@"<DNDSCachedBackingStoreDelegate>",W,N
initWithUnderlyingBackingStore:
_underlyingBackingStore
_cache
_lock
T@"<DNDSCachedBackingStoreDelegate>",W,N,V_delegate
setDomain:
setService:
listenerWithConfigurator:
invalidate
activate
activateManualDomain:
userInitiated
setServiceQuality:
setInterface:
setInterfaceTarget:
_handleClientConnectionInterrupted:
setInterruptionHandler:
_handleClientConnectionInvalidated:
setInvalidationHandler:
configureConnection:
_addConnection:
UTF8String
currentContext
remoteProcess
auditToken
realToken
dnds_hasUserNotificationsCommunicationEntitlement
initWithBundleID:
bundleRecordForAuditToken:error:
containingBundleRecord
entitlements
objectForKey:ofClass:
counterpartIdentifiers
initWithBundleID:platform:
remoteAvailabilityServiceProvider:isLocalUserAvailableForApplicationIdentifier:withError:
_removeConnection:
removeObject:
listener:didReceiveConnection:withContext:
getIsLocalUserAvailableWithRequestDetails:completionHandler:
initWithClientDetailsProvider:
_requestListener
_clientDetailsProvider
_accessLock
_connections
T@"<DNDSRemoteAvailabilityServiceProviderDelegate>",W,N,V_delegate
_initWithImmediateBypassEventSourceType:immediateBypassCNGroupIdentifier:repeatEventSourceBehaviorEnabledSetting:
bs_setSafeObject:forKey:
_immediateBypassEventSourceType
_immediateBypassCNGroupIdentifier
_repeatEventSourceBehaviorEnabledSetting
T@"NSNumber",R,C,N,V_immediateBypassEventSourceType
T@"NSString",R,C,N,V_immediateBypassCNGroupIdentifier
T@"NSNumber",R,C,N,V_repeatEventSourceBehaviorEnabledSetting
setImmediateBypassEventSourceType:
setImmediateBypassCNGroupIdentifier:
setRepeatEventSourceBehaviorEnabledSetting:
T@"NSString",C,D,N
contact
visitDropEverythingEvent:
visitAddContactEvent:
visitUpdateContactEvent:
visitDeleteContactEvent:
visitAddGroupEvent:
visitUpdateGroupEvent:
visitDeleteGroupEvent:
visitAddMemberToGroupEvent:
visitRemoveMemberFromGroupEvent:
visitAddSubgroupToGroupEvent:
visitRemoveSubgroupFromGroupEvent:
initWithMonitoredContactIdentifiers:
updatedContacts
deletedContactIdentifiers
_updatedContacts
_deletedContactIdentifiers
_monitoredContactIdentifiers
T@"NSArray",R,C,N,V_updatedContacts
T@"NSArray",R,C,N,V_deletedContactIdentifiers
hashTableWithOptions:
defaultCenter
_contactStoreChanged:
addObserver:selector:name:object:
monitoredContacts
contactHistoryToken
_contactsWithCNContacts:
contactMonitor:didReceiveUpdatedContacts:deletedContactIdentifiers:withContactHistoryToken:
_fetchUpdatesWithContactHistoryToken:monitoredContacts:handler:
contactWithCNContact:
_updateContactsWithIdentifiers
_updateContactsWithoutIdentifiers
_lock_listenersByContactHistoryToken
_lock_monitoredContactsByContactHistoryToken
_queue_fetchUpdatesWithContactHistoryToken:monitoredContacts:handler:
allObjects
contactForContact:
contactMonitor:didReceiveUpdatedContactsForContactsWithoutIdentifiers:
keysToFetch
currentHistoryToken
enumerateBatchesOfSize:handler:
setStartingToken:
setAdditionalContactKeyDescriptors:
enumeratorForChangeHistoryFetchRequest:error:
acceptEventVisitor:
data
isEqualToData:
countForFetchRequest:error:
_fetchContactHistoryWithToken:monitoredContacts:handler:
_fetchContactsForMonitoredContacts:handler:
addListener:
removeListener:
initWithContactStore:contactProvider:
_listeners
_contactProvider
_fetchQueue
_calendarEventStoreChangedWithNotification:
lifetimeMonitor:registerTimerHandlerWithServiceIdentifier:handler:
_eventForCalendarEventLifetime:assertionStartDate:
isOnlyDuringEvent
endDate
lifetime
activeDateIntervalForCalendarEventLifetime:assertionStartDate:
eventUniqueID
dnds_lifetimePhaseForDate:
isEqualToDate:
_eventStore
reset
initWithFireDate:serviceIdentifier:userVisible:
lifetimeMonitor:setTimer:
initWithEKOptions:
requestAccessToEntityType:completion:
occurrenceDate
_eventStoreCreatingIfNeeded
predicateForEventsWithStartDate:endDate:calendars:
eventsMatchingPredicate:
uniqueId
_lifetimeTimerFireDate
recordForDictionary:keys:
object
distantPast
recordForAssertionStore:
dictionaryWithKeys:options:
syncDictionaryRepresentationWithDate:messageUUID:
syncMessageKeys
newWithSyncDictionaryRepresentation:
messageDateForSyncDictionaryRepresentation:
dateInterval
initWithStatusTypeIdentifier:
impactsAvailability
allowedApplicationIdentifiers
deniedApplicationIdentifiers
countForObject:
setByAddingObjectsFromSet:
_queue_updateAvailabilityKit:fromConfiguration:toConfiguration:
_queue_notifyIntentExtensionsOfUserAvailability:applicationIdentifiers:completionHandler:
_isLocalUserAvailableForAppId:modeIdentifier:withError:
_publishStatusKitAvailability:activityIdentifier:local:scheduled:date:forced:completion:
previousState
_userAvailabilityTCCApprovedBundleIds
enumeratorWithOptions:
appInfoWithApplicationRecord:
supportedIntentsByApp
supportedActionsByExtensions
_entitlementRecordForApplicationRecord:
initWithApplicationRecord:available:
launchIntentExtensionWithCompletion:
deviceClass
applicationExtensionRecords
infoDictionary
setType:
anyObject
setValue:
allowedModesForContactHandle:withError:
initWithString:
initWithAvailableDuringActivityIdentifiers:
statusKitInvitationPayloadWithDateCreated:
inviteHandlesFromPrimaryAccountHandle:withInvitationPayload:completion:
lastCalculatedState
_publishStatusKitCurrentAvailabilityForced:completionHandler:
modeConfigurationForModeIdentifier:withError:
exceptionForApplicationIdentifier:thread:forModeIdentifier:
modeConfigurationsWithError:
allValues
exceptionForContactHandle:forModeIdentifier:
initWithCapacity:
_isTCCUserAvailabilityGrantedForMessages
_publishStatusKitAvailability:activityIdentifier:forced:completion:
initWithAvailable:activityIdentifierString:
statusPublishRequest
setIsSecondaryDeviceRepublish:
setIsScheduledRequest:
setDateCreated:
publishStatusRequest:completion:
publishStatusKitAvailabilityForced:error:
isTCCUserAvailabilityGrantedForBundleId:
initWithConfigurationManger:stateProvider:
suspend
coordinateUserAvailability:fromConfiguration:toConfiguration:completionHandler:
sendStatusKitInvitationsForContacts:
isLocalUserAvailableForApplicationIdentifier:withError:
userAvailabilityInActiveModeForContactHandle:withError:
publishStatusKitAvailabilityReturningError:
_active
_extensionLaunchQueue
_modeConfigurationManager
_stateProvider
_statusService
sharedContactStore
predicateForContactsMatchingHandleStrings:
_bestMatchForContact:inContacts:
givenName
lowercaseString
familyName
stringValue
initWithSuppressionState:activeModeAssertionMetadata:startDate:userVisibleTransitionDate:userVisibleTransitionLifetimeType:activeModeConfiguration:
fallbackState
T@"DNDState",R,C,D,N
initWithAggregateMonitor:
meDeviceState
meDeviceStatus
dnd_locationBundle
initWithEffectiveBundle:delegate:onQueue:
_queue_refreshMonitorForDate:
monitoredRegions
hasCurrentRegion
locationManager:monitoringDidFailForRegion:withError:
locationManager:didDetermineState:forRegion:
locationManager:didUpdateLocations:
locationManager:didFailWithError:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didChangeAuthorizationStatus:
locationManagerDidChangeAuthorization:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
locationManager
availableRegions
T@"NSObject<OS_dispatch_queue>",R,N
T@"CLLocationManager",R,N
T@"<DNDSLocationLifetimeMonitorDataSource>",W,N
meDeviceService:didReceiveMeDeviceStateUpdate:
initWithMeDeviceService:
_locationManager
_meDeviceService
_untilExitMonitor
_explicitRegionMonitor
_children
T@"<DNDSLocationLifetimeMonitorDataSource>",W,N,V_dataSource
T@"CLLocationManager",R,N,V_locationManager
emptyConfiguration
dnds_locationAssertionExplicitRegionFileURL
_loadDataFromBackingStore
_queue_refreshMonitor
regionIdentifiers
_queue_takeAssertionOnEntryIntoRegion:
_saveDataToBackingStoreWithError:
_queue_invalidateAssertionOnExitFromRegion:
aggregateMonitor
locationTriggerConfigurationForLifetimeMonitor:
regions
_queue_stopMonitoringForRegion:
_queue_startMonitoringForRegion:
region
_queue_resolveEnteredRegionIdentifiersWithAssertionRegionIdentifiers:
isEqualToSet:
startMonitoringForRegion:
stopMonitoringForRegion:
modeIdentifierForRegion:
_queue_locationMonitorClientIdentifierForModeIdentifier:region:
lifetimeWithExplicitRegion:
lifetimeMonitor:takeModeAssertionWithDetails:clientIdentifier:error:
enteredRegionIdentifiersPendingExit
setEnteredRegionIdentifiersPendingExit:
setAggregateMonitor:
_currentConfiguration
_enteredRegionIdentifiers
_enteredRegionIdentifiersPendingExit
_store
_backingStore
_aggregateMonitor
T@"<DNDSAggregateLocationLifetimeMonitor>",W,N,V_aggregateMonitor
regionForRegionIdentifier:
addTriggerForModeWithIdentifier:forRegion:
_modeIdentifierByRegionIdentifier
_regionByRegionIdentifier
_initWithStore:
_initWithEnteredRegionIdentifiersPendingExit:
T@"NSSet",R,C,N,V_enteredRegionIdentifiersPendingExit
T@"NSSet",C,D,N
dnds_locationAssertionUntilExitRegionFileURL
_queue_stopMonitoringCurrentLocation
_queue_sendExpiryEventForAllLocationAssertions
_queue_beginMonitoringCurrentLocation
lastObject
_queue_geofenceLocation:
isEqualToArray:
requestLocation
coordinate
initNearbyAllowedWithCenter:radius:identifier:
setNotifyOnExit:
setNotifyOnEntry:
_queue_geofenceRegion:
hasActiveLifetimes
currentRegion
regionEntered
setActiveLifetimeAssertionUUIDs:
setHasActiveLifetimes:
setCurrentRegion:
setRegionEntered:
_currentRegion
_regionEntered
_hasActiveLifetimes
TB,R,N
numberWithInt:
initWithUUIDString:
initWithCenter:radius:identifier:
_initWithActiveLifetimeAssertionUUIDs:currentRegion:regionEntered:
center
radius
T@"CLRegion",R,C,N,V_currentRegion
T@"NSNumber",R,C,N,V_regionEntered
T@"NSNumber",R,C,N,V_hasActiveLifetimes
T@"NSArray",C,D,N
T@"CLRegion",C,D,N
sharedInstanceForBagType:
_numberForKey:
unsignedIntValue
numberWithUnsignedInt:
resolvedScheduledActivityUpdateFuzzMilliseconds
resolvedActivityUpdateDisabled
resolvedActivityUpdateCoalescingSeconds
lastUpdatedTimestamp
timePeriodStartTimeHour
timePeriodStartTimeMinute
timePeriodEndTimeHour
timePeriodEndTimeMinute
timePeriodWeekdays
bedtimeBehaviorEnabledSetting
_initWithLastUpdatedTimestamp:scheduleEnabledSetting:timePeriodStartTimeHour:timePeriodStartTimeMinute:timePeriodEndTimeHour:timePeriodEndTimeMinute:timePeriodWeekdays:bedtimeBehaviorEnabledSetting:
_lastUpdatedTimestamp
_scheduleEnabledSetting
_timePeriodStartTimeHour
_timePeriodStartTimeMinute
_timePeriodEndTimeHour
_timePeriodEndTimeMinute
_timePeriodWeekdays
_bedtimeBehaviorEnabledSetting
T@"NSNumber",R,C,N,V_lastUpdatedTimestamp
T@"NSNumber",R,C,N,V_scheduleEnabledSetting
T@"NSNumber",R,C,N,V_timePeriodStartTimeHour
T@"NSNumber",R,C,N,V_timePeriodStartTimeMinute
T@"NSNumber",R,C,N,V_timePeriodEndTimeHour
T@"NSNumber",R,C,N,V_timePeriodEndTimeMinute
T@"NSNumber",R,C,N,V_timePeriodWeekdays
T@"NSNumber",R,C,N,V_bedtimeBehaviorEnabledSetting
setLastUpdatedTimestamp:
setScheduleEnabledSetting:
setTimePeriodStartTimeHour:
setTimePeriodStartTimeMinute:
setTimePeriodEndTimeHour:
setTimePeriodEndTimeMinute:
setTimePeriodWeekdays:
setBedtimeBehaviorEnabledSetting:
meDeviceName
_initWithStatus:name:
_meDeviceStatus
_meDeviceName
T@"NSNumber",R,C,N,V_meDeviceStatus
T@"NSString",R,C,N,V_meDeviceName
setMeDeviceStatus:
setMeDeviceName:
placeholderModes
_initWithModePlaceholders:
_placeholderModes
T@"NSArray",R,C,N,V_placeholderModes
backingRecordKeys
fileURLWithPathComponents:
URLByAppendingPathComponent:
dnds_localAssertionBackingStoreFileURL
dnds_settingsBackingStoreFileURL
dnds_metricsBackingStoreFileURL
dnds_legacySettingsFileURL
dnds_modeConfigurationsBackingStoreFileURL
dnds_modeConfigurationsSecureBackingStoreFileURL
dnds_globalConfigurationBackingStoreFileURL
dnds_placeholderModesLocalBackingStoreFileURL
dnds_syncEngineMetadataFileURL
dnds_syncEngineLastChanceFileURL
dnds_idsSyncEngineMetadataFileURL
dnds_assertionSyncMetadataFileURL
dnds_meDeviceStoreFileURL
bs_takeObjectForKey:
upgradeDictionaryRepresentation:fromVersionNumber:toVersionNumber:
emptyResult
arrayByAddingObject:
setAssertions:
isUserInteractionClient
predicateForAnyAssertion
predicateForAssertionClientIdentifiers:
invalidationRequests
setInvalidationRequests:
sanitizeDatesForThreshold:
_resolveStore:
_cleanupStore:
_calculateUpdateResultForStore:previousStore:
resultCombiningWithResult:
filteredArrayUsingPredicate:
takeAssertionWithUUID:details:source:startDate:
sortedArrayUsingComparator:
predicateForAssertionsTakenBeforeDate:
andPredicateWithSubpredicates:
evaluateWithObject:
bs_firstObjectPassingTest:
sortUsingComparator:
setInvalidations:
orderedSetWithArray:
keysSortedByValueUsingComparator:
clientIdentifiers
UUIDs
bs_safeAddObject:
initWithAssertions:invalidations:
initWithStore:clientDetailsProvider:
store
updateResult
_updateResult
T@"DNDSModeAssertionStore",R,C,N,V_store
T@"DNDSModeAssertionUpdateResult",R,C,N,V_updateResult
sysdiagnoseDictionaryRepresentation
sysdiagnoseRecordKeys
initWithInterruptionSuppression:
detailsForInactiveDoNotDisturb
restrictedDetailsWithDetails:
_interruptionSuppression
TQ,R,N,V_interruptionSuppression
secureConfiguration
triggers
dimsLockScreen
created
hasSecureData
_initWithMode:configuration:secureConfiguration:triggers:impactsAvailability:dimsLockScreen:created:lastModified:automaticallyGenerated:hasSecureData:
shortDescription
log:withPrefix:
partitionType
log:withMessage:
_mode
_configuration
_secureConfiguration
_triggers
_impactsAvailability
_dimsLockScreen
_created
_lastModified
_automaticallyGenerated
_hasSecureData
T@"DNDSModeRecord",R,C,N,V_mode
T@"DNDSConfigurationRecord",R,C,N,V_configuration
T@"DNDSConfigurationSecureRecord",R,C,N,V_secureConfiguration
T@"DNDSModeConfigurationTriggersRecord",R,C,N,V_triggers
TQ,R,N,V_impactsAvailability
TQ,R,N,V_dimsLockScreen
T@"NSDate",R,C,N,V_created
T@"NSDate",R,C,N,V_lastModified
automaticallyGenerated
TB,R,N,GisAutomaticallyGenerated,V_automaticallyGenerated
TB,R,N,V_hasSecureData
allocWithZone:
setMode:
setSecureConfiguration:
setTriggers:
setImpactsAvailability:
setDimsLockScreen:
setCreated:
setLastModified:
setAutomaticallyGenerated:
setHasSecureData:
initWithURL:
_read
_write
initForReadingFromData:error:
initWithCoder:
recordName
_updateSystemFieldsForRecord:
_removeSystemFieldsForRecordID:
zoneID
removeItemAtURL:error:
dictionaryWithContentsOfURL:
_decodeRecordIDFromData:
_encodedRecordIDFromRecordID:
writeToURL:error:
_encodedSystemFieldsFromRecord:
initRequiringSecureCoding:
encodeSystemFieldsWithCoder:
encodedData
encodeWithCoder:
recordWithID:
addRecord:
removeRecordWithID:
removeRecordsWithZoneID:
recordIDsWithZoneID:
setMetadata:
userRecordID
setUserRecordID:
accountStatus
setAccountStatus:
isEncryptionAvailable
setEncryptionAvailable:
T@"NSData",C,N
T@"NSString",C,N
Tq,N
encryptionAvailable
TB,N,GisEncryptionAvailable
_metadata
_systemFieldsByRecordID
_url
_userRecordID
_accountStatus
_encryptionAvailable
initWithCalendarIdentifier:
systemTimeZone
setTimeZone:
scheduleIdentifier
_calendar
_aggregateMetricsWithEnabled:manuallyEnabled:numberOfNewSessions:numberOfNewManualSessions:controlCenterPhone:controlCenterWatch:type:mode:dayOfWeek:
sendMetricsHeartbeatsIfNeeded
_sendDailyHeartbeatIfNeeded
_sendWeeklyHeartbeatIfNeeded
_sendMonthlyHeartbeatIfNeeded
_metricsDayStringForDate:
metricsByDay
valueForKey:
_metricsWeekStringForDate:
metricsByWeek
_metricsMonthStringForDate:
metricsByMonth
setEnabled:
setManuallyEnabled:
numberOfSessions
intValue
setNumberOfSessions:
numberOfManualSessions
setNumberOfManualSessions:
setEnabledFromControlCenterPhone:
setEnabledFromControlCenterWatch:
setEnabledForOneHour:
setEnabledUntilEvening:
setEnabledUntilMorning:
setEnabledAtLocation:
setEnabledDuringEvent:
setEnabledDrivingMode:
setEnabledSleepMode:
setDayOfWeek:
setValue:forKey:
setMetricsByDay:
setMetricsByWeek:
setMetricsByMonth:
_writeMetricsToStore:
lastDailyHeartbeat
startOfDayForDate:
_dateForYesterday
enabled
manuallyEnabled
enabledFromControlCenterPhone
enabledFromControlCenterWatch
enabledForOneHour
enabledUntilEvening
enabledUntilMorning
enabledAtLocation
enabledDuringEvent
enabledDrivingMode
enabledSleepMode
dayOfWeek
setLastDailyHeartbeat:
lastWeeklyHeartbeat
_startOfWeekWithDate:
_startOfLastWeek
setLastWeeklyHeartbeat:
lastMonthlyHeartbeat
_startOfMonthWithDate:
_startOfLastMonth
setLastMonthlyHeartbeat:
_dateFormatter
setDateStyle:
setTimeStyle:
stringFromDate:
setLocalizedDateFormatFromTemplate:
setDay:
dateByAddingComponents:toDate:options:
components:fromDate:
weekday
dateFromComponents:
month
setMonth:
initWithLocaleIdentifier:
setLocale:
_metricsBackingStore
_metricsRecord
_initWithMinimumBreakthroughUrgency:allowedThreads:deniedThreads:
_minimumBreakthroughUrgency
_allowedThreads
_deniedThreads
T@"NSNumber",R,C,N,V_minimumBreakthroughUrgency
T@"NSSet",R,C,N,V_allowedThreads
T@"NSSet",R,C,N,V_deniedThreads
setAllowedThreads:
setDeniedThreads:
_activeDateIntervalForScheduleLifetime:assertion:date:ignoreMatchScheduleStartDate:
scheduleSettingsByModeIdentifierForScheduleLifetimeMonitor:
calendarWithIdentifier:
defaultScheduleSettings
_activeDateIntervalForScheduleLifetime:assertionStartDate:date:scheduleSettings:calendar:ignoreMatchScheduleStartDate:
creationDate
containsDate:
activeDateIntervalForScheduleLifetime:assertion:date:
nextActiveDateIntervalForScheduleLifetime:assertion:date:
calendar
setCalendar:
T@"NSCalendar",&,N,V_calendar
T@"<DNDSScheduleLifetimeMonitorDataSource>",W,D,N
modeDetailsForIdentifiers:
weakObjectsHashTable
setupPathMonitor
debounceTimer
_setReachable:
isInitialized
setInitialized:
setLastInformedReachability:
pathMonitor
_updateHandlerForPath:
_informDelegates
delegates
isReachable
lastInformedReachability
reachabilityChangedTo:
commonReachability
addDelegate:
removeDelegate:
setReachable:
_reachable
_lastInformedReachability
_initialized
_pathMonitor
_debounceTimer
_delegates
T@"NSObject<OS_nw_path_monitor>",R,N,V_pathMonitor
T@"NSObject<OS_dispatch_source>",R,N,V_debounceTimer
T@"NSHashTable",R,N,V_delegates
reachable
TB,N,GisReachable,V_reachable
TB,N,V_lastInformedReachability
initialized
TB,N,GisInitialized,V_initialized
_fixupConfigurationsIfNeeded
_inheritFromDefaultModeConfiguration:
_prepareModeConfigurationForStorage:withError:
isPlaceholder
_saveModeConfiguration:writeSecurePartition:error:
_notifyChangeOfModeConfigurationFrom:to:
_readModeConfigurationsReturningError:
modeConfigurationForModeIdentifier:
visibility
modeConfigurationForRecord:
semanticType
setModeConfiguration:forModeIdentifier:
_removedModeConfigurationRecordForModeRecord:
_writeModeConfigurationsRecord:writeSecurePartition:error:
availableModesFilteringPlaceholders:returningError:
modeConfigurationManager:didUpdateAvailableModes:
modeConfigurations
modeForRecord:
exceptionForApplicationIdentifier:thread:
exceptionForContactHandle:
sanitizedConfigurationWithContactStore:
intersectSet:
modeConfigurationManager:didModifyExceptionsForContacts:forModeConfiguration:
setVisibility:
initWithMode:configuration:triggers:
_sysdiagnoseDataShouldRedact:
removeObserver:
setAllowedContactTypes:
setDeniedContactTypes:
setAllowedContactGroups:
setDeniedContactGroups:
setAllowedApplications:
modeConfigurationStore:didUpdateAvailableModes:
initWithBackingStore:keybag:
setModeConfiguration:withError:
removeModeConfigurationForModeIdentifier:withError:
exceptionForApplication:thread:forModeIdentifier:
relevantApplicationIdentifiers
T@"<DNDSModeConfigurationManagerDelegate>",W,N,V_delegate
setLifetimeType:
setEventUniqueID:
setOnlyDuringEvent:
setOccurrenceDate:
setStartDate:
setEndDate:
dnds_stringForLifetimeType:
setScheduleIdentifier:
dnds_stringForScheduleLifetimeBehavior:
setBehavior:
setClientIdentifier:
setUUID:
setDetails:
setSource:
recordForInvalidationRequest:
lifetimeType
onlyDuringEvent
predicateType
peaceSyncDictionaryRepresentationWithDate:messageUUID:userRequestedClientIdentifierHandler:
newWithPeaceSyncDictionaryRepresentation:
messageDateForPeaceSyncDictionaryRepresentation:
configurationForRecord:
nickname
normalizePhoneNumber:
unifiedContactWithIdentifier:keysToFetch:error:
sanitizedContactWithContactStore:withError:
_initWithDetails:
interruptionInvalidationAssertionUUID
assertionUpdateClientIdentifiers
activeAssertionUpdateClientIdentifiers
wantsStateUpdates
wantsSettingsUpdates
wantsModeUpdates
wantsActiveModeUpdates
wantsGlobalConfigurationUpdates
wantsMeDeviceStateUpdates
_initWithInterruptionInvalidationAssertionUUID:assertionUpdateClientIdentifiers:activeAssertionUpdateClientIdentifiers:wantsStateUpdates:wantsSettingsUpdates:wantsModeUpdates:wantsActiveModeUpdates:wantsGlobalConfigurationUpdates:wantsMeDeviceStateUpdates:
_interruptionInvalidationAssertionUUID
_assertionUpdateClientIdentifiers
_activeAssertionUpdateClientIdentifiers
_wantsStateUpdates
_wantsSettingsUpdates
_wantsModeUpdates
_wantsActiveModeUpdates
_wantsGlobalConfigurationUpdates
_wantsMeDeviceStateUpdates
T@"NSUUID",R,C,N,V_interruptionInvalidationAssertionUUID
T@"NSSet",R,C,N,V_assertionUpdateClientIdentifiers
T@"NSSet",R,C,N,V_activeAssertionUpdateClientIdentifiers
TB,R,N,V_wantsStateUpdates
TB,R,N,V_wantsSettingsUpdates
TB,R,N,V_wantsModeUpdates
TB,R,N,V_wantsActiveModeUpdates
TB,R,N,V_wantsGlobalConfigurationUpdates
TB,R,N,V_wantsMeDeviceStateUpdates
setInterruptionInvalidationAssertionUUID:
setAssertionUpdateClientIdentifiers:
setWantsStateUpdates:
setWantsSettingsUpdates:
setWantsModeUpdates:
setWantsActiveModeUpdates:
setActiveAssertionUpdateClientIdentifiers:
setWantsGlobalConfigurationUpdates:
setWantsMeDeviceStateUpdates:
T@"NSUUID",C,D,N
TB,D,N
setLastSystemSnapshot:
activeAssertionUUIDs
lostModeState
recalculateModeForSnapshot:
activeDateIntervalByAssertionUUID
userVisibleEndDate
initWithClientIdentifier:modeIdentifier:lifetimeType:activeDateInterval:userVisibleEndDate:
lastUpdate
setOverrideModeIdentifier:
setLastCalculatedState:
initWithModeConfigurationManager:
recalculateStateForSnapshot:
lastSystemSnapshot
_lastSystemSnapshot
_lastCalculatedState
T@"DNDSStateProviderSystemSnapshot",C,V_lastSystemSnapshot
T@"DNDState",C,V_lastCalculatedState
_readPlaceholderModesReturningError:
placeholderModesWithError:
initWithBackingStore:
setClassName:forClass:
dnds_secureLegacyArchiver
setClass:forClassName:
dnds_secureLegacyUnarchiverForReadingFromData:error:
cachedBackingStoreDidPurgeCache:
initWithUnderlyingBackingStore:keybag:
platform
_initWithConfiguration:
mergeWithGlobalConfiguration:
_preventAutoReply
_bypassSettings
TQ,R,N,V_preventAutoReply
T@"DNDBypassSettings",R,C,N,V_bypassSettings
setPreventAutoReply:
setBypassSettings:
TQ,D,N
T@"DNDBypassSettings",C,D,N
T@"NSDate",C,D,N
TB,D,N,GisAutomaticallyGenerated
encryptedValues
populateCKRecord:
newWithCKRecord:
settingsWithClientSettings:creationDate:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:creationDate:
initWithScheduleEnabledSetting:timePeriod:bedtimeBehaviorEnabledSetting:
supportsSecureCoding
classForCoder
replacementObjectForCoder:
_creationDate
T@"NSDate",R,C,N,V_creationDate
_queue_fetchAllDevices
initWithStatus:name:
_queue_saveDataToBackingStoreWithError:
meDeviceChanged
devicesChanged
_workQueue
_calloutQueue
_meDeviceState
_storeLock
T@"DNDMeDeviceState",R,C,N
initWithEnabledSetting:
enabledSetting
applicationIdentifierMapper
applicationIdentifierForFileWithSourceApplicationIdentifier:
initWithApplicationIdentifier:enabledSetting:
destination
applicationIdentifierForSyncWithSourceApplicationIdentifier:
setHour:
setMinute:
setStartTime:
setEndTime:
setWeekdays:
initWithTimePeriod:creationDate:enabledSetting:
hour
minute
setGeoReferenceFrame:
initWithRegion:detail:enabledSetting:
geoReferenceFrame
detail
initWithTriggers:
T@"NSArray",R,C,N,V_triggers
pairedDeviceDidChange
_readSettingsReturningError:
behaviorSettings
_saveBehaviorSettings:scheduleSettings:error:
settingsManager:didReceiveUpdatedBehaviorSettings:
scheduleSettings
settingsManager:didReceiveUpdatedScheduleSettings:
syncSettings
setPairSyncEnabled:
setBehaviorSettings:
setScheduleSettings:
_writeSettingsRecord:error:
configurations
configurationForModeIdentifier:
setConfiguration:forModeIdentifier:
setConfigurations:
settingsManager:didReceiveUpdatedSyncSettings:
behaviorSettingsWithError:
scheduleSettingsWithError:
syncSettingsWithError:
isCloudSyncEnabled
isPairSyncEnabled
syncSettingsProvider:didReceiveUpdatedSyncSettings:
initWithBackingStore:contactStore:
setBehaviorSettings:withError:
phoneCallBypassSettingsWithError:
setScheduleSettings:withError:
_saveConfiguration:forModeIdentifier:error:
fallbackConfiguration
_syncSettingsProvider
T@"<DNDSSettingsManagerDelegate>",W,N,V_delegate
_initWithMetadata:data:
dictionaryWithDictionary:
isDeleted
_data
T@"DNDSIDSRecordID",R,C,N
T@"NSDate",R,C,N
deleted
TB,R,N,GisDeleted
T@"DNDSIDSRecordMetadata",R,C,N
_assertions
_invalidations
T@"NSArray",R,C,N,V_assertions
T@"NSArray",R,C,N,V_invalidations
objectAtIndexedSubscript:
currentNotificationSettingsCenter
notificationSourceWithIdentifier:
sourceSettings
notificationSettings
authorizationStatus
initWithDate:
initWithClientIdentifiers:
initWithUUIDs:
_init
evaluateWithObject:substitutionVariables:
TQ,R,D,N
decodeObjectOfClass:forKey:
encodeObject:forKey:
_date
T@"NSDate",R,C,N,V_date
setWithObjects:
decodeObjectOfClasses:forKey:
_clientIdentifiers
T@"NSArray",R,C,N,V_clientIdentifiers
_UUIDs
T@"NSArray",R,C,N,V_UUIDs
_migrateWorkoutDNDNanoPreference
workoutModeForWorkoutTriggerManager:
_isWorkoutTriggerEnabledForModeConfiguration:
_updateNanoPreferencesForRefreshWithModeConfiguration:
_configureWorkoutTriggerWithMode:
_refreshWithMode:event:
eventType
_assertionIdentifierForHealthKitWorkoutEvent:
activityUUID
healthKitWorkoutStream
isEnabled
_accessor
_isWorkoutDNDNanoPreferenceEnabled
createWorkoutModeForWorkoutTriggerManager:
setWorkoutTriggerEnabled:forWorkoutTriggerManager:
_setWorkoutDNDNanoPreferenceEnabled:
currentDevice
initWithDomain:
synchronize
boolForKey:keyExistsAndHasValidFormat:
setBool:forKey:
synchronizeNanoDomain:keys:
refreshMigratingIfNecessary
_refreshForNanoPreferenceChange
_npsManager
T@"<DNDSWorkoutTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_generateDiff
_modifiedConfigurations
_removedConfigurations
_recordIDsInModeConfigurations:
initWithRecordName:zoneID:
initWithOriginalModeConfigurations:updatedModeConfigurations:zone:
original
updated
modifiedIDs
removedIDs
_original
_updated
_modifiedIDs
_removedIDs
_zone
T@"DNDSModeConfigurationsRecord",R,C,N,V_original
T@"DNDSModeConfigurationsRecord",R,C,N,V_updated
T@"NSArray",R,C,N,V_modifiedIDs
T@"NSArray",R,C,N,V_removedIDs
T@"CKRecordZone",R,C,N,V_zone
_queue_read
_queue_write
arrayWithContentsOfURL:
_decodeRecordFromData:
_encodedDataFromRecord:
dataWithPropertyList:format:options:error:
recordsWithZoneID:
records
T@"NSDictionary",R,C,N
_queue_recordsByID
_endMonitoringForChanges
_beginMonitoringForChanges
_updateForReason:
_queue_updateToggleSyncForReason:
_queue_updateGizmoAssertionSyncWithModeAssertionUpdateContext:
syncManager:performModeAssertionUpdatesWithHandler:
currentStateForLegacyAssertionSyncManager:
lastUpdateDate
activeModeAssertionMetadata
activeDateInterval
_queue_gizmoUpdateDate
_queue_updateCompanionToggleSyncForGizmoUpdateDate:modeAssertionUpdateContext:
_queue_updateGizmoToggleSyncForState:companionUpdateDate:reason:
_queue_updateCompanionAssertionMirroringForState:
doubleForKey:keyExistsAndHasValidFormat:
dateWithTimeIntervalSinceNow:
boolForKey:
isSyncSuppressedClient
setDouble:forKey:
currentlyActivePairedDeviceForSyncManager:
lifetimeUntilEndOfScheduleWithIdentifier:
detailsWithIdentifier:modeIdentifier:lifetime:reason:
cleanupState
updateForModeAssertionUpdateResult:
updateDevices:
updateForStateUpdate:
forceUpdateAllDevices
T@"<DNDSAssertionSyncManagerDataSource>",W,N
T@"<DNDSAssertionSyncManagerDelegate>",W,N
initWithClientDetailsProvider:pairedDevice:
_updateGizmoAssertionSync
T@"<DNDSLegacyAssertionSyncManagerDataSource>",W,N,V_dataSource
T@"<DNDSAssertionSyncManagerDelegate>",W,N,V_delegate
initWithBackingStore:clientDetailsProvider:
updateModeAssertionsWithContextHandler:error:
_resolveTransactionForModeAssertionStore
timeIntervalSinceDate:
bs_differenceWithArray:
isPersistentAssertionClient
hasPrefix:
initWithBackingStoreURL:clientDetailsProvider:
clientDetailsForClientIdentifier:
_nonPersistentAssertionTransaction
sharedDaemonWorkloop
_initWithMetricsByDay:lastDailyHeartbeat:metricsByWeek:lastWeeklyHeartbeat:metricsByMonth:lastMonthlyHeartbeat:
_metricsByDay
_lastDailyHeartbeat
_metricsByWeek
_lastWeeklyHeartbeat
_metricsByMonth
_lastMonthlyHeartbeat
T@"NSDictionary",R,C,N,V_metricsByDay
T@"NSDate",R,C,N,V_lastDailyHeartbeat
T@"NSDictionary",R,C,N,V_metricsByWeek
T@"NSDate",R,C,N,V_lastWeeklyHeartbeat
T@"NSDictionary",R,C,N,V_metricsByMonth
T@"NSDate",R,C,N,V_lastMonthlyHeartbeat
T@"NSDictionary",C,D,N
T@"<DNDSDrivingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
integerForKey:keyExistsAndHasValidFormat:
recordForLegacyPrivilegedSenderType:legacyAddressBookID:
legacyPrivilegedSenderType
setInteger:forKey:
recordForLegacyBehaviorOverride:lastUpdated:
legacyBehaviorOverride
dnds_bypassSettings
dnds_setBypassSettings:
dnds_scheduleSettingsWithLastUpdated:
dnds_setScheduleSettings:
_initWithListen:send:pairedDevice:
_updateBypassSettings
_updateScheduleSettingsWithDate:
update
phoneCallBypassSettingsForSyncManager:
scheduleSettingsForSyncManager:
_propagateBypassSettings:
_propagateScheduleSettings:
syncManager:didReceiveUpdatedScheduleSettings:
syncManager:didReceiveUpdatedPhoneCallBypassSettings:
sendManagerForPairedDevice:
receiveManagerForPairedDevice:
T@"<DNDSSettingsSyncManagerDataSource>",W,N
T@"<DNDSSettingsSyncManagerDelegate>",W,N
_listen
_send
T@"<DNDSSettingsSyncManagerDataSource>",W,N,V_dataSource
T@"<DNDSSettingsSyncManagerDelegate>",W,N,V_delegate
hideApplicationBadges
_initWithType:suppressionType:minimumBreakthroughUrgency:hideApplicationBadges:
defaultConfigurationType
defaultSuppressionType
defaultMinimumBreakthroughUrgency
_type
_suppressionType
_hideApplicationBadges
T@"NSNumber",R,C,N,V_type
T@"NSNumber",R,C,N,V_suppressionType
T@"NSNumber",R,C,N,V_hideApplicationBadges
setSuppressionType:
setHideApplicationBadges:
initWithIsFocused:
initWithFocusStatus:
_setLaunchId:
initWithIntent:
setRequiresTCC:
_cleanupWithError:completion:
setTimeoutHandler:
underlyingError
handleIntentWithCompletionHandler:
resumeWithCompletionHandler:
_connection
_applicationRecord
_available
_completionFiredFlag
_invalidationRequests
T@"NSArray",R,C,N,V_invalidationRequests
isIOS14SyncSuppressedClient
isIOS14EraOS
bs_compactMap:
syncManager:updateOutboundModeAssertion:
setObject:atIndexedSubscript:
supportsKettle
isInternalScheduled
syncManager:scheduleSettingsForModeIdentifier:
currentCalendar
lifetimeWithDateInterval:
bs_map:
filterForSyncToPairedDevice:clientDetailsProvider:
unresolveSourcesForSyncToPairedDevice:
resolveSourcesForSyncFromPairedDevice:
updateConfigurationModificationDatesWithDataSource:syncManager:
downgradeAssertionsIfNeededForSyncToPairedDevice:dataSource:syncManager:
_loadMetadataFromBackingStore
_maintainMetadataBackingStore
_saveMetadataToBackingStore
_queue_updateDevices
pairedDevicesForSyncManager:
updateDevices:force:shouldFuzz:
isClientScheduled
isUserInitiated
isUserInvalidated
floatValue
_queue_sendStateSnapshotToPairedDevices:force:
isCloudSyncDisabledForSyncManager:
_queue_handleMessage:withVersionNumber:fromDeviceIdentifier:
_queue_handleDidSendRequestIdentifier:withSuccess:error:
syncManager:deviceForDeviceIdentifier:
lastReceivedStoreDate
lastSentStoreDate
predicateForModeAssertionsWithDeviceIdentifier:
initWithServiceType:protocolVersion:store:
arrayWithCapacity:
serviceType
protocolVersion
initWithLastUpdateDate:deviceIdentifiers:
pendingLastSentStoreDate
enumerateKeysAndObjectsUsingBlock:
syncManager:prepareForSyncToDevices:completionHandler:
deviceIdentifiers
bs_each:
removeObjectsForKeys:
dictionaryWithCapacity:
initWithClientDetailsProvider:localSyncService:cloudSyncService:
_fuzzTimer
_localSyncService
_cloudSyncService
_metadataBackingStore
_timerQueuedDevices
_timerQueuedForceUpdate
_timerCurrentDelay
_timerQueuedTransaction
_timerLock
T@"<DNDSAssertionSyncManagerDataSource>",W,N,V_dataSource
_lastUpdateDate
_deviceIdentifiers
T@"NSDate",R,C,N,V_lastUpdateDate
T@"NSSet",R,C,N,V_deviceIdentifiers
_protocolVersion
_serviceType
TQ,R,N,V_protocolVersion
TQ,R,N,V_serviceType
T@"DNDSMutableModeAssertionStore",R,C,N,V_store
_initWithLastReceivedStoreDate:lastSentStoreDate:pendingLastSentStoreDate:
_lastReceivedStoreDate
_lastSentStoreDate
_pendingLastSentStoreDate
T@"NSMutableDictionary",R,C,N,V_lastReceivedStoreDate
T@"NSMutableDictionary",R,C,N,V_lastSentStoreDate
T@"NSMutableDictionary",R,C,N,V_pendingLastSentStoreDate
dnds_setSafeLocalDateForTimestamp:key:
setModeConfigurationModifiedDate:
setUserVisibleEndDate:
modeConfigurationModifiedDate
setLatitude:
setLongitude:
setRadius:
setRegionIdentifier:
latitude
longitude
regionIdentifier
setDeviceIdentifier:
setAssertion:
setInvalidationDate:
setReasonOverride:
setRequestDate:
setPredicateType:
setDate:
setClientIdentifiers:
setUUIDs:
recordWithEncodedInfo:error:
sanitizeContacts:
setAllowedContacts:
setDeniedContacts:
needsSanitization
fetchContactsWithIdentifiers:error:
_donateEventForStateUpdate:
initWithMode:semanticModeIdentifier:starting:modeUpdateReason:modeSemanticType:modeUpdateSource:
sendEvent:
handleStateUpdate:
_computedModeStream
isICloudEnabled
pairingIdentifier
pairingDataStore
deviceName
osBuild
initWithLocalDeviceIdentifier:deviceClass:syncProtocolVersion:iOS14EraOS:pairingIdentifier:pairingDataStore:
initWithCloudDeviceIdentifier:deviceClass:syncProtocolVersion:
setOsBuild:
setDeviceName:
setICloudEnabled:
_iOS14EraOS
_iCloudEnabled
_deviceIdentifier
_deviceClass
_deviceName
_osBuild
_syncProtocolVersion
_syncServiceType
_pairingIdentifier
_pairingDataStore
T@"NSUUID",R,C,N,V_pairingIdentifier
T@"NSString",R,C,N,V_pairingDataStore
iOS14EraOS
TB,R,N,GisIOS14EraOS,V_iOS14EraOS
iCloudEnabled
TB,N,GisICloudEnabled,V_iCloudEnabled
T@"NSString",C,N,V_deviceName
T@"NSString",C,N,V_osBuild
T@"NSString",R,C,N,V_deviceIdentifier
TQ,R,N,V_deviceClass
TQ,R,N,V_syncProtocolVersion
TQ,R,N,V_syncServiceType
_initWithUUID:date:eventBehavior:clientIdentifier:outcome:reason:
_descriptionForRedacted:
redactedDescription
_eventBehavior
_clientIdentifier
_outcome
T@"DNDClientEventBehavior",R,C,N,V_eventBehavior
T@"NSString",R,C,N,V_clientIdentifier
TQ,R,N,V_outcome
name
symbolImageName
tintColorName
initWithName:modeIdentifier:symbolImageName:tintColorName:semanticType:visibility:identifier:
_name
setName:
setSymbolImageName:
setTintColorName:
setSemanticType:
_initWithEnabled:manuallyEnabled:numberOfSessions:numberOfManualSessions:enabledFromControlCenterPhone:enabledFromControlCenterWatch:enabledForOneHour:enabledUntilEvening:enabledUntilMorning:enabledAtLocation:enabledDuringEvent:enabledDrivingMode:enabledSleepMode:
bs_boolForKey:
T@"NSNumber",R,C,N
_enabled
_manuallyEnabled
_numberOfSessions
_numberOfManualSessions
_enabledFromControlCenterPhone
_enabledFromControlCenterWatch
_enabledForOneHour
_enabledUntilEvening
_enabledUntilMorning
_enabledAtLocation
_enabledDuringEvent
_enabledDrivingMode
_enabledSleepMode
TB,R,N,V_enabled
TB,R,N,V_manuallyEnabled
T@"NSNumber",R,C,N,V_numberOfSessions
T@"NSNumber",R,C,N,V_numberOfManualSessions
TB,R,N,V_enabledFromControlCenterPhone
TB,R,N,V_enabledFromControlCenterWatch
TB,R,N,V_enabledForOneHour
TB,R,N,V_enabledUntilEvening
TB,R,N,V_enabledUntilMorning
TB,R,N,V_enabledAtLocation
TB,R,N,V_enabledDuringEvent
TB,R,N,V_enabledDrivingMode
TB,R,N,V_enabledSleepMode
TB,N
T@"NSNumber",C,N
_initWithEnabled:manuallyEnabled:numberOfSessions:numberOfManualSessions:enabledFromControlCenterPhone:enabledFromControlCenterWatch:enabledForOneHour:enabledUntilEvening:enabledUntilMorning:enabledAtLocation:enabledDuringEvent:enabledDrivingMode:enabledSleepMode:dayOfWeek:
_dayOfWeek
T@"NSNumber",R,C,N,V_dayOfWeek
setScreenShared:
setScreenMirrored:
_presentationModeEnabled
_screenShared
_screenMirrored
presentationModeEnabled
TB,R,N,GisPresentationModeEnabled
screenShared
TB,N,GisScreenShared
screenMirrored
TB,N,GisScreenMirrored
dnds_lifetimeTypeValue
dnds_scheduleLifetimeBehaviorValue
_featureEnabled
sleepingModeForSleepingTriggerManager:
_configureSleepingTriggerWithMode:
sleepModeChangeReason
sleepModeState
expectedEndDate
sleepModeStream
timestamp
T@"<DNDSSleepingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
ephemeralSessionConfiguration
sharedURLCache
setURLCache:
setRequestCachePolicy:
setHTTPShouldUsePipelining:
setUnderlyingQueue:
sessionWithConfiguration:delegate:delegateQueue:
setSessionDescription:
defaultWorkspace
_queue_monitorBundleIdentifiers:
_fallbackAppInfoForBundleIdentifier:
_sanitizeAppInfo:
_cacheURL
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
componentsWithString:
componentsJoinedByString:
queryItemWithName:value:
currentLocale
countryCode
setQueryItems:
requestWithURL:cachePolicy:timeoutInterval:
requestWithURL:
_parseAppStoreResponseForBundleIdentifiers:response:data:error:
dataTaskWithRequest:completionHandler:
_fetchIconForAppInfo:timeoutInterval:completionHandler:
pathExtension
copyItemAtURL:toURL:error:
setCachedIconURL:
downloadTaskWithRequest:completionHandler:
setDisplayName:
setApplicationIdentifier:
setStoreIconURL:
_queue_removeCachedDataForAppInfo:
_installedBundleIdentifiers
_queue_removeUnusedAppInfo
_queue_fetchMissingAppInfo
_queue_bundleIdentifiersWithMissingInfo
_fetchIconsForAppInfo:timeoutInterval:completionHandler:
_fetchAppStoreInfoForBundleIdentifiers:timeoutInterval:limit:completionHandler:
_fallbackAppInfoByBundleIdentifier
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
databaseWasRebuilt
initWithKeybag:
monitorApplicationIdentifiers:
appInfoForBundleIdentifier:
appInfoForBundleIdentifiers:
_monitoredBundleIdentifiers
_relevantBundleIdentifiers
_inflightBundleIdentifiers
_appInfoByBundleIdentifier
_urlSession
scheduleSettingsByModeIdentifierForScheduleManager:
_refreshWithScheduleSettingsByModeIdentifier:context:
_scheduleManagerClientIdentifierForModeIdentifier:
_refreshWithScheduleSettings:modeIdentifier:currentScheduleAssertion:context:
lifetimeMatchingScheduleWithIdentifier:
initWithModeAssertionManager:
_modeAssertionManager
_currentScheduleSettingsByModeIdentifier
T@"<DNDSScheduleManagerDataSource>",W,N,V_dataSource
decodeIntegerForKey:
initWithOverrideType:mode:effectiveIntervals:
overrideType
encodeInteger:forKey:
effectiveIntervals
TB,R
_overrideType
_effectiveIntervals
TQ,R,N,V_overrideType
TQ,R,N,V_mode
T@"NSArray",R,C,N,V_effectiveIntervals
setDataSource:forZoneName:
standardUserDefaults
dataForKey:
_lock_writeRecord:writePartition:error:
_notifyDelegateOfAvailableModes
zoneName
recordType
_lock_existingConfigurations
mergeWithModeConfiguration:
diffObject:againstObject:withDescription:
hasDifferences
_lock_updateModeConfigurationWithCKRecord:
initWithIdentifier:zone:
_lock_removeModeConfigurationWithModeIdentifier:
_lock_populateCKRecord:
_lock_removeModeConfigurationWithCKRecordID:
_purgeRecordIDs:
_lock_modeIdentifiers
initWithZoneName:
_purgeData
_lock_populateDNDSIDSRecord:
newWithDNDSIDSRecord:
_lock_updateModeConfigurationWithDNDSIDSRecord:
_lock_recordIDsForIDSSyncEngine:
defaultModeConfiguration
_lock_mutableExistingConfigurations
_lock_modeConfigurationForDNDSIDSRecordID:
populateDNDSIDSRecord:
_lock_modeConfigurationForCKRecordID:
_lock_modeConfigurationForModeIdentifier:
_lock_updateModeConfigurationWithConfiguration:
_lock_purgeData
_lock_purgeRecordIDs:
syncEngine:recordTypeForRecordID:
syncEngine:prepareRecordToSave:
syncEngine:resolveConflictBetweenClientRecord:andServerRecord:
syncEngine:failedToDeleteRecordWithID:error:
syncEngine:didFetchRecord:
syncEngine:recordWithIDWasDeleted:
syncEngine:wantsRecord:
syncEngine:zoneWithIDWasDeleted:removingRecordIDs:
recordIDsForSyncEngine:
purgeRecordsForSyncEngine:
T@"<DNDSModeConfigurationsStoreDelegate>",W,N
setContactHistoryToken:
T@"NSSet",R,C,N
initWithBackingStore:syncEngine:idsSyncEngine:
_contactMonitor
_syncEngine
_idsSyncEngine
_contactHistoryToken
T@"<DNDSModeConfigurationsStoreDelegate>",W,N,V_delegate
T@"NSData",C,N,V_contactHistoryToken
_loadPreloadBundles
clientDetailsForIdentifier:applicationBundleURL:
_defaultModuleDirectories
URLByAppendingPathExtension:
detailsForBundleAtURL:
detailsForClientIdentifier:applicationBundleURL:
isResolutionContextAssumingDeviceUILocked
initWithClientIdentifier:identifiers:resolutionContextAssumingDeviceUILocked:userInteractionClient:persistentAssertionClient:syncSuppressedClient:iOS14SyncSuppressedClient:
pathWithComponents:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
findClientDetailsForIdentifier:
_detailsByIdentifier
deviceType
productBuildVersion
characterSetWithCharactersInString:
invertedSet
rangeOfCharacterFromSet:
substringFromIndex:
stringByRemovingCharactersFromSet:
operatingSystemVersion
_dnds_pairedDeviceClass
_dnds_minorBuildVersion
_dnds_syncProtocolVersion
_dnds_isIOS14EraOS
_queue_updatePairedState
_queue_updateCloudDevices
cloudDevices
pairedDevice
_getCurrentPairedDevice
setPairedDevice:
pairedDeviceStateMonitor:pairingChangedFromDevice:toDevice:
getActivePairedDevice
devices
uniqueIDOverride
_pairedDeviceStateChanged:
isLocallyPaired
setWithSet:
setCloudDevices:
pairedDeviceStateMonitor:cloudPairingChangedFromDevices:toDevices:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithLocalIDSService:cloudIDSService:
pairedDeviceForDeviceIdentifier:
_localService
_cloudService
_pairedDeviceDidChangeNotificationToken
_cloudDevices
T@"DNDSPairedDevice",C,V_pairedDevice
T@"NSSet",C,V_cloudDevices
T@"<DNDSPairedDeviceStateMonitorDelegate>",W,N,V_delegate
_initWithSymbolImageName:tintColorName:name:modeIdentifier:semanticType:visibility:identifier:
_symbolImageName
_tintColorName
_modeIdentifier
_semanticType
_visibility
_identifier
T@"NSString",R,C,N,V_symbolImageName
T@"NSString",R,C,N,V_tintColorName
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_modeIdentifier
Tq,R,N,V_semanticType
TQ,R,N,V_visibility
T@"NSUUID",R,C,N,V_identifier
configurationOfType:
setAllowedApplicationIdentifiers:
setDeniedApplicationIdentifiers:
setDeniedApplications:
makeSecureRecord
configurationForRecord:secureRecord:
_initWithModeConfigurations:
_modeConfigurations
T@"NSDictionary",R,C,N,V_modeConfigurations
setModeConfigurations:
_queue_resume
_queue_sendMessage:withVersionNumber:messageType:toDestinations:requestIdentifier:error:
deviceForFromID:
outgoingResponseIdentifier
_queue_handleIncomingMessage:deviceIdentifier:
addDelegate:queue:
sendMessage:toDestinations:priority:options:identifier:error:
T@"<DNDSSyncServiceDelegate>",W,N
initWithIDSService:
T@"<DNDSSyncServiceDelegate>",W,N,V_delegate
getBytes:length:
_initWithSenderConfiguration:allowedApplications:deniedApplications:
_senderConfiguration
_allowedApplications
_deniedApplications
T@"DNDSSenderConfigurationRecord",R,C,N,V_senderConfiguration
T@"NSDictionary",R,C,N,V_allowedApplications
T@"NSSet",R,C,N,V_deniedApplications
T@"DNDSSenderConfigurationRecord",C,D,N
initWithStartComponents:endComponents:calendarIdentifier:repeatInterval:identifier:
startComponents
endComponents
calendarIdentifier
repeatInterval
_startComponents
_endComponents
_calendarIdentifier
_repeatInterval
T@"NSDateComponents",R,C,N,V_startComponents
T@"NSDateComponents",R,C,N,V_endComponents
T@"NSString",R,C,N,V_calendarIdentifier
TQ,R,N,V_repeatInterval
initWithPairSyncEnabled:cloudSyncEnabled:
_pairSyncEnabled
_cloudSyncEnabled
pairSyncEnabled
TB,R,N,GisPairSyncEnabled,V_pairSyncEnabled
cloudSyncEnabled
TB,R,N,GisCloudSyncEnabled,V_cloudSyncEnabled
setCloudSyncEnabled:
TB,D,N,GisPairSyncEnabled
TB,D,N,GisCloudSyncEnabled
_initWithSnapshot:
_initWithAssertions:activeAssertionUUIDs:activeDateIntervalByAssertionUUID:interruptionBehaviorSetting:lostModeState:lastUpdate:
_activeAssertionUUIDs
_activeDateIntervalByAssertionUUID
_lostModeState
_lastUpdate
T@"NSArray",R,C,N,V_activeAssertionUUIDs
T@"NSDictionary",R,C,N,V_activeDateIntervalByAssertionUUID
TQ,R,N,V_interruptionBehaviorSetting
TQ,R,N,V_lostModeState
T@"NSDate",R,C,N,V_lastUpdate
setActiveAssertionUUIDs:
setActiveDateIntervalByAssertionUUID:
setLostModeState:
setLastUpdate:
garbageCollect
_parseDictionary:
initWithRecordID:lastModified:deleted:
_forgetSyncDatesForRecordID:
_forgetSyncDatesForDevicesWithoutInitialSync
_forgetSyncDatesForOutdatedDevices
_forgetObsoleteTombstones
_isMetadataValidAtDate:
_areSyncDatesValidAtDate:
_isPairedDeviceOutdated:
_canTombstoneBeRemovedWithRecordID:
_forgetRecordID:
_forgetMetadataForRecordID:
hasMetadataForPairedDeviceIdentifier:
initWithDeviceObsoletionDuration:tombstoneObsoletionDuration:
_recordMetadataByRecordID
_recordIDSyncDatesByPairedDeviceIdentifier
_initialSyncPairedDeviceIdentifiers
_deviceObsoletionDuration
_tombstoneObsoletionDuration
_recordWithEncodedInfo:error:
bs_firstObjectOfClass:
predicateForiOSLegacyIdentifier:
requestAccessForEntityType:completionHandler:
groupsMatchingPredicate:error:
dnds_assertionReasonValue
dnds_stringForAssertionReason:
dnds_invalidationReasonValue
dnds_stringForInvalidationReason:
dnds_invalidationReasonOverrideValue
dnds_stringForInvalidationReasonOverride:
dnds_predicateTypeValue
dnds_stringForPredicateType:
recordForAssertion:
recordForInvalidation:
T@"NSArray",&,N,V_assertions
T@"NSArray",&,N,V_invalidations
T@"NSArray",&,N,V_invalidationRequests
recordForAssertionDetails:
recordForAssertionSource:
_startDate
T@"NSString",&,N,V_UUID
T@"NSNumber",&,N,V_startDate
T@"DNDSModeAssertionDetailsRecord",&,N,V_details
T@"DNDSModeAssertionSourceRecord",&,N,V_source
recordForAssertionLifetime:
_modeConfigurationModifiedDate
_userVisibleEndDate
_lifetime
T@"NSString",&,N,V_identifier
T@"NSString",&,N,V_modeIdentifier
T@"NSNumber",&,N,V_modeConfigurationModifiedDate
T@"NSNumber",&,N,V_userVisibleEndDate
T@"DNDSModeAssertionLifetimeRecord",&,N,V_lifetime
T@"NSString",&,N,V_reason
initWithEventUniqueID:occurrenceDate:onlyDuringEvent:
initWithDateInterval:
initWithScheduleIdentifier:behavior:
initWithRegion:
_lifetimeType
_eventUniqueID
_occurrenceDate
_onlyDuringEvent
_endDate
_scheduleIdentifier
_behavior
_latitude
_longitude
_radius
_regionIdentifier
T@"NSString",&,N,V_lifetimeType
T@"NSString",&,N,V_eventUniqueID
T@"NSNumber",&,N,V_occurrenceDate
T@"NSNumber",&,N,V_onlyDuringEvent
T@"NSNumber",&,N,V_endDate
T@"NSString",&,N,V_scheduleIdentifier
T@"NSString",&,N,V_behavior
T@"NSNumber",&,N,V_latitude
T@"NSNumber",&,N,V_longitude
T@"NSNumber",&,N,V_radius
T@"NSString",&,N,V_regionIdentifier
T@"NSString",&,N,V_clientIdentifier
T@"NSString",&,N,V_deviceIdentifier
recordForInvalidationDetails:
_assertion
_invalidationDate
T@"DNDSModeAssertionRecord",&,N,V_assertion
T@"NSNumber",&,N,V_invalidationDate
T@"DNDSModeAssertionInvalidationDetailsRecord",&,N,V_details
T@"NSString",&,N,V_reasonOverride
recordForInvalidationPredicate:
T@"DNDSModeAssertionInvalidationPredicateRecord",&,N,V_predicate
T@"NSNumber",&,N,V_requestDate
_predicateType
T@"NSString",&,N,V_predicateType
T@"NSNumber",&,N,V_date
T@"NSArray",&,N,V_clientIdentifiers
T@"NSArray",&,N,V_UUIDs
mindfulnessModeForMindfulnessTriggerManager:
_configureTriggerWithMode:
stateType
mindfulnessStream
sessionType
T@"<DNDSMindfulnessTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_detailsForClientIdentifier:bundleInfoDictionary:
_resolutionContextAssumingDeviceUILocked
_userInteractionClient
_persistentAssertionClient
_syncSuppressedClient
_iOS14SyncSuppressedClient
_identifiers
T@"NSArray",R,C,N,V_identifiers
resolutionContextAssumingDeviceUILocked
TB,R,N,GisResolutionContextAssumingDeviceUILocked,V_resolutionContextAssumingDeviceUILocked
userInteractionClient
TB,R,N,GisUserInteractionClient,V_userInteractionClient
persistentAssertionClient
TB,R,N,GisPersistentAssertionClient,V_persistentAssertionClient
syncSuppressedClient
TB,R,N,GisSyncSuppressedClient,V_syncSuppressedClient
iOS14SyncSuppressedClient
TB,R,N,GisIOS14SyncSuppressedClient,V_iOS14SyncSuppressedClient
_isCloudSyncPreferenceEnabled
_updatePairSyncPreferences
_updateCloudSyncPreferences
_lock_isCloudSyncPreferenceEnabled
_lock_accessor
_lock_updateSyncSettingsIfNewSettingsDiffer:
_lock_updatePairSyncPreferences
_lock_updateCompanionCloudSyncPreference
_lock_setCompanionCloudSyncPreferenceEnabled:
isPairedWatch
_lock_isPairSyncPreferenceEnabled
isPaired
addObserver:forKeyPath:options:context:
setSyncSettings:
observeValueForKeyPath:ofObject:change:context:
setPairedWatch:
_pairedWatch
_syncSettings
T@"DNDSSyncSettings",C,V_syncSettings
pairedWatch
TB,GisPairedWatch,V_pairedWatch
T@"<DNDSSyncSettingsProviderDelegate>",W,N,V_delegate
_initWithContext:
contactProvider
redactSensitiveData
_destination
_partitionType
_redactSensitiveData
_applicationIdentifierMapper
TQ,R,N,V_destination
TQ,R,N,V_partitionType
TB,R,N,V_redactSensitiveData
T@"<DNDSContactProviding>",R,N,V_contactProvider
T@"<DNDSApplicationIdentifierMapping>",R,N,V_applicationIdentifierMapper
setDestination:
setPartitionType:
setRedactSensitiveData:
setContactProvider:
setApplicationIdentifierMapper:
T@"<DNDSContactProviding>",&,D,N
T@"<DNDSApplicationIdentifierMapping>",&,D,N
drivingModeForDrivingTriggerManager:
gamingModeForGamingTriggerManager:
modesSupportingSmartEntryForSmartTriggerManager:
_createDefaultModeForWorkoutTriggerIfNecessary
predicateWithFormat:
predicateForModeAssertionsWithUUIDs:
predicateForModeAssertionsWithModeIdentifiersNotContainedIn:
predicateForModeAssertionsWithLifetimeClass:
predicateForModeAssertionsTakenBeforeDate:
_initWithBehaviorSettings:phoneCallBypassSettings:scheduleSettings:configurations:
_behaviorSettings
_phoneCallBypassSettings
_scheduleSettings
_configurations
T@"DNDSBehaviorSettingsRecord",R,C,N,V_behaviorSettings
T@"DNDSBypassSettingsRecord",R,C,N,V_phoneCallBypassSettings
T@"DNDSScheduleSettingsRecord",R,C,N,V_scheduleSettings
T@"DNDSConfigurationsRecord",R,C,N,V_configurations
T@"DNDSBehaviorSettingsRecord",C,D,N
T@"DNDSBypassSettingsRecord",C,D,N
T@"DNDSScheduleSettingsRecord",C,D,N
T@"DNDSConfigurationsRecord",C,D,N
_macOSBundleIDForiOSBundleID:
_iOSBundleIDForMacOSBundleID:
applicationIdentifierForTargetPlatform:withSourceApplicationIdentifier:
_preferModeAssertion:toModeAssertion:
_priorityForModeAssertion:
domain
code
dnds_outOfSpaceError
TB,R,D,N,Gdnds_isOutOfSpaceError
setEvent:forKey:onStream:
registerForStream:queue:handler:
stringWithUTF8String:
serviceIdentifier
start
registerTimerHandlerWithServiceIdentifier:handler:
setTimer:
_timerHandlersByToken
_initWithAllowedContactTypes:deniedContactTypes:allowedContactGroups:deniedContactGroups:allowedContacts:deniedContacts:phoneCallBypassSettings:
_allowedContactTypes
_deniedContactTypes
_allowedContactGroups
_deniedContactGroups
_allowedContacts
_deniedContacts
T@"NSSet",R,C,N,V_allowedContactTypes
T@"NSSet",R,C,N,V_deniedContactTypes
T@"NSSet",R,C,N,V_allowedContactGroups
T@"NSSet",R,C,N,V_deniedContactGroups
T@"NSSet",R,C,N,V_allowedContacts
T@"NSSet",R,C,N,V_deniedContacts
_initWithRecordID:
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_zone
_initWithContactIdentifier:firstName:middleName:lastName:nickName:organizationName:phoneNumbers:emailAddresses:
_contactIdentifier
_firstName
_middleName
_lastName
_nickName
_organizationName
_phoneNumbers
_emailAddresses
T@"NSString",R,C,N,V_contactIdentifier
T@"NSString",R,C,N,V_firstName
T@"NSString",R,C,N,V_middleName
T@"NSString",R,C,N,V_lastName
T@"NSString",R,C,N,V_nickName
T@"NSString",R,C,N,V_organizationName
T@"NSSet",R,C,N,V_phoneNumbers
T@"NSSet",R,C,N,V_emailAddresses
backingStoreWithFileURL:secureFileURL:
triggersForModeIdentifier:
modeForModeIdentifier:
_modeConfigurationsByModeIdentifier
setMode:forModeIdentifier:
setTriggers:forModeIdentifier:
initWithMetadataStore:lastChanceDataStore:keybag:syncEnabled:
initWithMetadataStore:lastChanceDataStore:syncEngine:keybag:syncEnabled:
containerWithIdentifier:
_updateAccountWithCurrentSyncEnabledState
_cloudKitAccountChanged:
_lock_isSyncAvailable
_lock_isSyncEnabled
_updateAccountWithSyncEnabledState:
_initialSyncForDataSource:withZoneName:
_retryLastChanceRecordsForDataSource:withZoneName:
_zoneIDForRecord:
_lock_dataSourceForZoneID:
initWithZoneID:
addRecordZonesToSave:recordZoneIDsToDelete:
hasPendingModifications
handleFetchedRecord:
userInfo
syncEngine:zoneWithIDWasPurged:
initWithRecordType:recordID:
handleDeletedRecordID:
removeZoneWithID:
purgeZoneWithID:
_retryLastChanceRecords
privateCloudDatabase
initWithDatabase:dataSource:metadata:
setApsMachServiceName:
initWithConfiguration:
_accountUpdateQueue_updateAccountWithSyncEnabledState:
_migrateOldStoresWithSyncEnabledState:
_lock_isSyncPreferenceEnabled
_lock_currentUserRecordID
_lock_encryptionAvailable
_handleAccountFetchWithUpdatedUserRecordID:updatedAccountStatus:updatedEncryptionAvailable:updatedSyncEnabled:
_fetchAccountStateWithCompletionHandler:
_lock_destroySyncEngine
_lock_setCurrentAccountStatus:
_purgeDataFromDataSources
accountStatusWithCompletionHandler:
deviceToDeviceEncryptionAvailability
fetchUserRecordIDWithCompletionHandler:
accountInfoWithCompletionHandler:
_lock_setCurrentUserRecordID:
_lock_setEncryptionAvailable:
_lock_startSyncEngine
_initialSyncForDataSources
moveItemAtURL:toURL:error:
syncEngine:recordToSaveForRecordID:
syncEngine:didSaveRecord:
syncEngine:failedToSaveRecord:error:
syncEngine:didDeleteRecordWithID:
syncEngine:recordWithIDWasDeleted:recordType:
syncEngine:didUpdateMetadata:
syncEngine:didSaveRecordZone:
syncEngine:didDeleteRecordZoneWithID:
syncEngine:failedToFetchChangesForRecordZoneID:error:
syncEngine:failedToSaveRecordZone:error:
syncEngine:failedToDeleteRecordZoneWithID:error:
syncEngine:zoneWithIDChanged:
syncEngine:zoneWithIDWasDeleted:
cloudSyncState
isSyncAvailable
isSyncEnabled
isSyncPreferenceEnabled
setSyncPreferenceEnabled:
setTesting:
sendChangesWithCompletionHandler:
fetchChanges:withCompletionHandler:
sync:withCompletionHandler:
hasLocalChanges
syncEngine:shouldFetchChangesForZoneID:
_lock_dataSources
_lock_currentAccountStatus
_lock_dataSourceForRecord:
_accountUpdateQueue
_sourcesByZoneName
_lastChanceStore
_state
_allowSyncEngineCreation
_container
syncPreferenceEnabled
TB,N,GisSyncPreferenceEnabled
syncEnabled
TB,R,N,GisSyncEnabled
syncAvailable
TB,R,N,GisSyncAvailable
_initWithRecordMetadata:
_recordID
_deleted
T@"DNDSIDSRecordID",R,C,N,V_recordID
TB,R,N,GisDeleted,V_deleted
setRecordID:
setDeleted:
T@"DNDSIDSRecordID",C,D,N
TB,D,N,GisDeleted
setServiceIdentifier:
isUserVisible
setUserVisible:
_userVisible
_serviceIdentifier
T@"NSDate",C,N,V_date
T@"NSString",C,N,V_serviceIdentifier
userVisible
TB,N,GisUserVisible,V_userVisible
isControllerConnected
gameControllerStream
numberOfControllersConnected
T@"<DNDSGamingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
weakToStrongObjectsMapTable
remoteTarget
deliverStateUpdate:
remoteServiceProvider:activeAssertionWithClientIdentifer:error:
deliverActiveModeAssertion:stateUpdate:clientIdentifiers:
_iterateClientConnectionsToSendWithHandler:
deliverActiveModeAssertionUpdate:invalidation:clientIdentifiers:
deliverUpdatedBehaviorSettings:
deliverUpdatedPhoneCallBypassSettings:
deliverUpdatedPairSyncState:
deliverUpdatedPreventAutoReplySetting:
deliverUpdatedScheduleSettings:
deliverAllModes:
deliverAvailableModes:
deliverMeDeviceState:
dnds_hasAnyValidEntitlement
dnds_hasBehaviorResolutionEntitlementForClientIdentifier:
_clientDetailsForClientIdentifier:clientConnection:
remoteServiceProvider:resolveBehaviorForEventDetails:clientDetails:date:error:
dnds_hasEntitlementsToRequestAssertionWithDetails:clientIdentifier:
remoteServiceProvider:takeModeAssertionWithDetails:clientIdentifier:error:
_registerOrMutateConnectionDetailsForClientConnection:handler:
dnds_hasModeAssertionEntitlementForClientIdentifier:
remoteServiceProvider:invalidateModeAssertionForClientIdentifier:reason:reasonOverride:details:error:
remoteServiceProvider:assertionWithClientIdentifer:error:
remoteServiceProvider:latestInvalidationWithClientIdentifer:error:
dnds_hasUserRequestedModeAssertionEntitlementForClientIdentifier:
remoteServiceProvider:invalidateAllModeAssertionsTakenBeforeDate:forReason:clientIdentifier:error:
remoteServiceProvider:allActiveModeAssertionsWithError:
setByAddingObject:
dnds_hasStateRequestEntitlementForClientIdentifier:
_queryStateWithCompletionHandler:
dnds_hasStateUpdatesEntitlementForClientIdentifier:
remoteServiceProvider:currentStateWithError:
dnds_hasAuxiliaryStateModificationEntitlementForClientIdentifier:
remoteServiceProvider:setScreenIsShared:screenIsMirrored:withError:
dnds_hasSettingsRequestEntitlementForClientIdentifier:
remoteServiceProvider:behaviorSettingsWithError:
dnds_hasSettingsModificationEntitlementForClientIdentifier:
remoteServiceProvider:setBehaviorSettings:withError:
remoteServiceProvider:scheduleSettingsWithError:
remoteServiceProvider:setScheduleSettings:withError:
dnds_hasSettingsUpdatesEntitlementForClientIdentifier:
dnds_hasModeConfigurationModificationEntitlementForClientIdentifier:
remoteServiceProvider:setPreventAutoReply:withError:
remoteServiceProvider:getPreventAutoReplyReturningError:
remoteServiceProvider:getCloudSyncStateReturningError:
remoteServiceProvider:setCloudSyncPreferenceEnabled:withError:
remoteServiceProvider:getPairSyncStateReturningError:
remoteServiceProvider:setPairSyncPreferenceEnabled:withError:
remoteServiceProvider:didChangeFocusStatusSharingSettingForApplicationIdentifier:
remoteServiceProvider:setModeConfiguration:withError:
remoteServiceProvider:removeModeConfigurationWithModeIdentifier:withError:
dnds_hasModeConfigurationRequestEntitlementForClientIdentifier:
remoteServiceProvider:modeConfigurationsWithError:
remoteServiceProvider:modeConfigurationForModeIdentifier:withError:
remoteServiceProvider:allModesReturningError:
remoteServiceProvider:availableModesReturningError:
remoteServiceProvider:syncModeConfigurationsReturningError:
dnds_hasModeConfigurationAvailabilityEntitlementForClientIdentifier:
remoteServiceProvider:allowedModesForContactHandle:withError:
remoteServiceProvider:userAvailabilityInActiveModeForContactHandle:withError:
remoteServiceProvider:publishStatusKitAvailabilityReturningError:
remoteServiceProvider:invalidateModeAssertionWithUUID:reason:reasonOverride:clientIdentifier:error:
dnds_hasModeConfigurationUpdatesEntitlementForClientIdentifier:
dnds_hasActiveModeUpdatesEntitlementForClientIdentifier:
remoteServiceProvider:getAppInfoForBundleIdentifier:withError:
remoteServiceProvider:getAppInfoForBundleIdentifiers:withError:
dnds_hasMeDeviceStateEntitlementForClientIdentifier:
remoteServiceProvider:currentMeDeviceStateWithError:
_unregisterConnectionDetailsForClientConnection:
resolveBehaviorForEventDetails:requestDetails:completionHandler:
takeModeAssertionWithDetails:requestDetails:completionHandler:
invalidateActiveModeAssertionWithDetails:reasonOverride:requestDetails:completionHandler:
getActiveModeAssertionWithRequestDetails:completionHandler:
getLatestModeAssertionInvalidationWithRequestDetails:completionHandler:
invalidateAllActiveModeAssertionsWithRequestDetails:completionHandler:
getAllModeAssertionsWithRequestDetails:completionHandler:
queryStateWithRequestDetails:completionHandler:
queryStateForUpdateWithRequestDetails:completionHandler:
getBehaviorSettingsWithRequestDetails:completionHandler:
setBehaviorSettings:withRequestDetails:completionHandler:
getScheduleSettingsWithRequestDetails:completionHandler:
setScheduleSettings:withRequestDetails:completionHandler:
setModeConfiguration:withRequestDetails:completionHandler:
removeModeConfigurationForModeIdentifier:withRequestDetails:completionHandler:
getModeConfigurationsWithRequestDetails:completionHandler:
getModeConfigurationForModeIdentifier:withRequestDetails:completionHandler:
getAllModesWithRequestDetails:completionHandler:
getAvailableModesWithRequestDetails:completionHandler:
syncModeConfigurationsWithRequestDetails:completionHandler:
getAllowedModesForContactHandle:withRequestDetails:completionHandler:
getUserAvailabilityInActiveModeForContactHandle:withRequestDetails:completionHandler:
publishStatusKitAvailabilityWithRequestDetails:completionHandler:
activateModeWithDetails:withRequestDetails:completionHandler:
activeModeAssertionWithRequestDetails:completionHandler:
invalidateModeAssertionWithUUID:withRequestDetails:completionHandler:
getPreventAutoReplyWithRequestDetails:completionHandler:
setPreventAutoReply:withRequestDetails:completionHandler:
getCloudSyncStateWithRequestDetails:completionHandler:
setCloudSyncPreferenceEnabled:withRequestDetails:completionHandler:
getPairSyncStateWithRequestDetails:completionHandler:
setPairSyncPreferenceEnabled:withRequestDetails:completionHandler:
getStateDumpWithRequestDetails:completionHandler:
didChangeFocusStatusSharingSettingForApplicationIdentifier:withRequestDetails:completionHandler:
getAppInfoForBundleIdentifier:withRequestDetails:completionHandler:
getAppInfoForBundleIdentifiers:withRequestDetails:completionHandler:
queryMeDeviceStateWithRequestDetails:completionHandler:
setScreenIsShared:screenIsMirrored:withRequestDetails:completionHandler:
registerForAssertionUpdatesWithRequestDetails:completionHandler:
registerForStateUpdatesWithRequestDetails:completionHandler:
registerForSettingsUpdatesWithRequestDetails:completionHandler:
registerForModeSelectionUpdatesWithRequestDetails:completionHandler:
registerForGlobalConfigurationUpdatesWithRequestDetails:completionHandler:
registerForMeDeviceStateUpdatesWithRequestDetails:completionHandler:
handleModeAssertionUpdateResult:
handleUpdatedBehaviorSettings:
handleUpdatedPhoneCallBypassSettings:
handleUpdatedPairSyncState:
handleUpdatedPreventAutoReplySetting:
handleUpdatedScheduleSettings:
handleUpdatedModes:availableModes:
handleMeDeviceStateUpdate:
_monitorListener
_clientConnectionDetailsByConnection
T@"<DNDSRemoteServiceProviderDelegate>",W,N,V_delegate
_dnds_safeStringArrayEntitlementForKey:
hasEntitlement:
valueForEntitlement:
_notifyDelegateOfConfigurationChange
_lock_existingConfiguration
_createConfigurationFromCKRecord:
_lock_updateConfigurationWithCKRecord:
_lock_prepareCKRecordToSave:
_lock_prepareDNDSIDSRecordToSave:
_createConfigurationFromDNDSIDSRecord:
_lock_updateConfigurationWithDNDSIDSRecord:
_populateDNDSIDSRecord:withGlobalConfiguration:
_populateCKRecord:withGlobalConfiguration:
globalConfigurationStore:didUpdatePreventAutoReplySetting:
T@"<DNDSGlobalConfigurationStoreDelegate>",W,N
globalConfigurationSyncManager:didReceiveUpdatedGlobalConfiguration:
_lock_mutableExistingConfigurationInStore:
T@"<DNDSGlobalConfigurationStoreDelegate>",W,N,V_delegate
lastPathComponent
productHardwareModel
alphanumericCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
openURL:configuration:completionHandler:
_beginObservingKeybag
isLocked
_queue_handleKeybagStatusChanged
_queue_handleFirstUnlock
_queue_observers
_queue_hasUnlockedSinceBoot
globalConfigurationManager:didUpdatePhoneCallBypassSettings:
globalConfigurationManager:didUpdatePreventAutoReplySetting:
lostModeIsActive
initWithService:
_migrateDefaultDoNotDisturbModeIfNeeded
_migrateBypassSettingsIfNeeded
_queue_updateScheduleManagerLifetimeMonitorsAndStateForReason:source:
_queue_validateIDSSyncEngine
setLockState:
_scheduleSettingsForModeConfigurations
_invalidateModeAssertionForClientIdentifier:reason:reasonOverride:details:error:
_stateSystemSnapshot
_scheduleSettingsFromDefaultScheduleTrigger
_setDefaultScheduleTriggerWithScheduleSettings:
_queue_handlePairedDeviceAndSyncSettingsChange
_allModes
setPreventAutoReply:withError:
getPreventAutoReplyReturningError:
initWithPreviousState:state:reason:source:
getConfigurationReturningError:
setConfiguration:withError:
defaultMode
_scheduleTriggerMatchingSettings:
defaultScheduleTrigger
enumerateObjectsUsingBlock:
initWithName:modeIdentifier:symbolImageName:tintColorName:semanticType:
arrayByExcludingObjectsInArray:
_setScheduleTrigger:forModeConfigurationWithIdentifier:
_setDimsLockScreenSetting:forModeConfigurationWithIdentifier:
_scheduleSettingsMatchingTrigger:
predicateWithValue:
_activeDateIntervalForModeAssertion:currentlyActive:
duration
_forceConfigurationSyncIfNeededWithUpdateResult:
placeholderModeFromMode:
currentUILockStateForEventBehaviorResolver:
eventBehaviorResolver:configurationForModeIdentifier:
_handleSignificantTimeChange
setUILockState:error:
_setLostModeState:error:
settingsManager:didReceiveUpdatedPhoneCallBypassSettings:
layoutIsLocked:
_calendarEventLifetimeMonitor
_scheduleLifetimeMonitor
_locationLifetimeMonitor
_lifetimeMonitors
_scheduleManager
_appForegroundTriggerManager
_biomeDonationManager
_drivingTriggerManager
_gamingTriggerManager
_mindfulnessTriggerManager
_sleepingTriggerManager
_smartTriggerManager
_workoutTriggerManager
_eventBehaviorResolver
_serviceProvider
_availabilityServiceProvider
_assertionSyncManager
_legacyAssertionSyncManager
_settingsSyncManager
_settingsManager
_idsLocalService
_idsCloudService
_pairedDeviceStateMonitor
_reachability
_eventStream
_layoutMonitor
_globalConfigurationStore
_globalConfigurationManager
_modeConfigurationsStore
_placeholderModeManager
_appInfoCache
_userAvailabilityCoordinator
_metricsManager
_lockState
TQ,V_lockState
TQ,V_lostModeState
_configureSmartTriggerWithSupportedModes:
_refreshWithSupportedModes:event:
isStart
modeUUID
filterWithKeyPath:value:
T@"<DNDSSmartTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>",W,N,V_dataSource
_writeConfiguration:error:
T@"<DNDSGlobalConfigurationManagerDelegate>",W,N,V_delegate
@24@0:8@16
@32@0:8@16@24
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSDictionary"24@0:8@"DNDSBackingStoreDictionaryContext"16
@32@0:8@"NSDictionary"16@"DNDSBackingStoreDictionaryContext"24
v56@0:8@16@24Q32@40@48
B56@0:8@16@24Q32@40@48
v44@0:8@16@24B32@36
v56@0:8@"<DNDSSyncService>"16@"NSDictionary"24Q32@"NSString"40@"NSString"48
B56@0:8@"<DNDSSyncService>"16@"NSDictionary"24Q32@"NSString"40@"NSString"48
v44@0:8@"<DNDSSyncService>"16@"NSString"24B32@"NSError"36
v24@0:8@16
v24@0:8@"<DNDSKeybagStateProviding>"16
@28@0:8@16B24
@"NSDictionary"28@0:8@"NSDate"16B24
v32@0:8@16@24
v28@0:8@16B24
v16@0:8
v32@0:8@"NSArray"16@"NSArray"24
v32@0:8@"<DNDSIDSSyncEngineDataSource>"16@"NSString"24
v28@0:8@"DNDSPairedDevice"16B24
@40@0:8@16@24@32
@64@0:8@16@24@32Q40Q48Q56
v24@0:8@?16
v40@0:8@16@24@32
d16@0:8
@"NSMapTable"
@"<DNDSSyncService>"
@"DNDSPairedDevice"
@"<DNDSIDSSyncEngineMetadataStoring>"
@"<DNDSKeybagStateProviding>"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NSMutableDictionary"
@"NSMutableSet"
@40@0:8@"NSString"16@"NSString"24@"NSString"32
@40@0:8@16Q24Q32
@24@0:8^{_NSZone=}16
@"NSNumber"
@40@0:8@"NSDictionary"16@"NSDictionary"24@"DNDSBackingStoreDictionaryContext"32
Q24@0:8Q16
@24@0:8^@16
Q32@0:8@16^@24
Q36@0:8@16B24^@28
Q32@0:8@"<DNDSBackingStoreRecord>"16^@24
Q36@0:8@"<DNDSBackingStoreRecord>"16B24^@28
@"<DNDSBackingStoreDelegate>"16@0:8
v24@0:8@"<DNDSBackingStoreDelegate>"16
@40@0:8#16@24Q32
@56@0:8#16@24@32Q40Q48
@32@0:8@16^@24
Q48@0:8@16Q24@32^@40
@"NSURL"
@"<DNDSBackingStoreDelegate>"
@48@0:8@16@24@32Q40
@64@0:8@16@24@32@40Q48Q56
@72@0:8@16@24@32@40@48Q56Q64
@"NSUUID"
@"DNDSModeAssertionInvalidationPredicate"
@"NSDate"
@"DNDModeAssertionInvalidationDetails"
@"DNDModeAssertionSource"
@"NSArray"
v24@0:8@"NSDate"16
@"NSArray"16@0:8
@"<DNDSLifetimeMonitorDataSource>"16@0:8
v24@0:8@"<DNDSLifetimeMonitorDataSource>"16
@"<DNDSLifetimeMonitorDelegate>"16@0:8
v24@0:8@"<DNDSLifetimeMonitorDelegate>"16
@"<DNDSLifetimeMonitorDataSource>"
@"<DNDSLifetimeMonitorDelegate>"
@"DNDSAppForegroundTriggerConfiguration"
@"BMStoreEvent"
@"NSObject<OS_os_transaction>"
@"<DNDSAppForegroundTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
@32@0:8@16@?24
@40@0:8@16@24^@32
@48@0:8@16@24@32^@40
@64@0:8@16@24Q32Q40@48^@56
@"NSDictionary"
@24@0:8Q16
@64@0:8@16@24@32@40@48^@56
Q48@0:8@16@24@32o^Q40
B32@0:8@16@24
B40@0:8@16@24@32
B76@0:8@16@24@32Q40Q48@56B64o^Q68
B56@0:8@16Q24@32@40o^Q48
@"<DNDSModeRepository>"
@"CNContactStore"
@"DNDSAuxiliaryStateMonitor"
@"CNFavorites"
@"NSMutableArray"
@"<DNDSEventBehaviorResolverDataSource>"
@56@0:8@16@24@32@40^@48
@48@0:8@16@24Q32Q40
@"NSDictionary"48@0:8@"<DNDSBackingStore>"16@"NSDictionary"24Q32Q40
@"<DNDSCachedBackingStoreDelegate>"16@0:8
v24@0:8@"<DNDSCachedBackingStoreDelegate>"16
@"<DNDSBackingStore>"
@"<DNDSBackingStoreRecord>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<DNDSCachedBackingStoreDelegate>"
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
v32@0:8@16@?24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"NSError">24
@"BSServiceConnectionListener"
@"DNDSClientDetailsProvider"
@"<DNDSRemoteAvailabilityServiceProviderDelegate>"
@"NSString"
v24@0:8@"CNChangeHistoryDropEverythingEvent"16
v24@0:8@"CNChangeHistoryAddContactEvent"16
v24@0:8@"CNChangeHistoryUpdateContactEvent"16
v24@0:8@"CNChangeHistoryDeleteContactEvent"16
v24@0:8@"CNChangeHistoryAddGroupEvent"16
v24@0:8@"CNChangeHistoryUpdateGroupEvent"16
v24@0:8@"CNChangeHistoryDeleteGroupEvent"16
v24@0:8@"CNChangeHistoryAddMemberToGroupEvent"16
v24@0:8@"CNChangeHistoryRemoveMemberFromGroupEvent"16
v24@0:8@"CNChangeHistoryAddSubgroupToGroupEvent"16
v24@0:8@"CNChangeHistoryRemoveSubgroupFromGroupEvent"16
@"NSSet"
v24@0:8@"<DNDSContactMonitorListener>"16
B40@0:8@16@24@?32
v40@0:8@16@24@?32
@"NSHashTable"
@"<DNDSContactProviding>"
@"EKEventStore"
{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}16@0:8
v48@0:8@16@24@32@?40
B40@0:8@16@24o^@32
B32@0:8@16o^@24
@32@0:8@16o^@24
v28@0:8B16@?20
v40@0:8B16@20B28@?32
v56@0:8B16@20B28B32@36B44@?48
@24@0:8o^@16
@28@0:8B16o^@20
@"DNDSModeConfigurationManager"
@"DNDSStateProvider"
@"SKStatusPublishingService"
@"DNDContact"24@0:8@"DNDContact"16
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"NSObject<OS_dispatch_queue>"16@0:8
@"CLLocationManager"16@0:8
@"<DNDSLocationLifetimeMonitorDataSource>"16@0:8
v24@0:8@"<DNDSLocationLifetimeMonitorDataSource>"16
v32@0:8@"DNDSMeDeviceService"16@"DNDMeDeviceState"24
@"CLLocationManager"
@"DNDSMeDeviceService"
@"DNDSUntilExitLocationLifetimeMonitor"
@"DNDSExplicitRegionLocationLifetimeMonitor"
@"<DNDSLocationLifetimeMonitorDataSource>"
B24@0:8^@16
@"DNDSLocationTriggerConfiguration"
@"DNDSExplicitRegionStore"
@"<DNDSAggregateLocationLifetimeMonitor>"
@"CLRegion"
@"DNDSUntilExitRegionStore"
@80@0:8@16@24@32@40@48@56@64@72
@"NSArray"24@0:8@"NSPredicate"16
@"DNDSModeAssertionUpdateResult"40@0:8@"DNDModeAssertionDetails"16@"DNDModeAssertionSource"24@"NSDate"32
@"DNDSModeAssertionUpdateResult"24@0:8@"DNDSModeAssertionInvalidationRequest"16
@48@0:8@16@24@32@40
v24@0:8N@16
@"DNDSModeAssertionStore"
@"DNDSModeAssertionUpdateResult"
@88@0:8@16@24@32@40Q48Q56@64@72B80B84
@"DNDSModeRecord"
@"DNDSConfigurationRecord"
@"DNDSConfigurationSecureRecord"
@"DNDSModeConfigurationTriggersRecord"
v24@0:8Q16
v20@0:8B16
q16@0:8
v24@0:8q16
@"CKRecord"24@0:8@"CKRecordID"16
v24@0:8@"CKRecord"16
v24@0:8@"CKRecordID"16
v24@0:8@"CKRecordZoneID"16
@"NSArray"24@0:8@"CKRecordZoneID"16
@"NSData"16@0:8
v24@0:8@"NSData"16
v24@0:8@"NSString"16
@"NSData"
v40@0:8@16@24Q32
v64@0:8B16B20i24i28B32B36@40@48@56
@"DNDSMutableMetricsRecord"
@"NSCalendar"
@44@0:8@16@24@32B40
@60@0:8@16@24@32@40@48B56
@"NSArray"24@0:8@"NSArray"16
@"NSObject<OS_nw_path_monitor>"
v32@0:8@"<DNDSModeConfigurationsStoring>"16@"NSArray"24
B32@0:8@16^@24
@28@0:8B16^@20
Q40@0:8@16@24@32
Q32@0:8@16@24
@20@0:8B16
@"<DNDSModeConfigurationsStoring>"
@"<DNDSModeConfigurationManagerDelegate>"
@40@0:8@16@24@?32
@64@0:8@16@24@32B40B44B48B52B56B60
@"DNDSStateProviderSystemSnapshot"
@"DNDState"
v24@0:8@"<DNDSCachedBackingStore>"16
@"<DNDSCachedBackingStore>"
@44@0:8Q16@24@32B40
@"DNDBypassSettings"
B24@0:8N@16
@48@0:8Q16@24Q32@40
@"DNDMeDeviceState"
@"DNDSMeDeviceStore"
v32@0:8@"DNDSSyncSettingsProvider"16@"DNDSSyncSettings"24
Q40@0:8@16@24^@32
@"DNDSSyncSettingsProvider"
@"<DNDSSettingsManagerDelegate>"
@"DNDSIDSRecordMetadata"
v32@0:8Q16@?24
@"NPSDomainAccessor"
@"NPSManager"
@"<DNDSWorkoutTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
@"DNDSModeConfigurationsRecord"
@"CKRecordZone"
@"NSDictionary"16@0:8
@"<DNDSAssertionSyncManagerDataSource>"16@0:8
v24@0:8@"<DNDSAssertionSyncManagerDataSource>"16
@"<DNDSAssertionSyncManagerDelegate>"16@0:8
v24@0:8@"<DNDSAssertionSyncManagerDelegate>"16
v24@0:8@"DNDSModeAssertionUpdateResult"16
v24@0:8@"NSArray"16
v24@0:8@"DNDStateUpdate"16
@"<DNDSLegacyAssertionSyncManagerDataSource>"
@"<DNDSAssertionSyncManagerDelegate>"
@32@0:8@?16^@24
@"DNDSModeAssertionUpdateResult"32@0:8@?<B@?@"<DNDSModeAssertionUpdateContext>">16^@24
@64@0:8@16@24@32@40@48@56
@"<DNDSDrivingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
@"<DNDSSettingsSyncManagerDataSource>"16@0:8
v24@0:8@"<DNDSSettingsSyncManagerDataSource>"16
@"<DNDSSettingsSyncManagerDelegate>"16@0:8
v24@0:8@"<DNDSSettingsSyncManagerDelegate>"16
@32@0:8B16B20@24
@"<DNDSSettingsSyncManagerDataSource>"
@"<DNDSSettingsSyncManagerDelegate>"
@"INCExtensionConnection"
@"LSApplicationRecord"
{atomic_flag="_Value"AB}
v32@0:8@16B24B28
v40@0:8@16Q24@32
v36@0:8@16B24@28
@"DNDSModernAssertionSyncMetadataStore"
@"NSObject<DNDSBackingStore>"
@"<DNDSAssertionSyncManagerDataSource>"
@40@0:8Q16Q24@32
@"DNDSMutableModeAssertionStore"
@32@0:8r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}16Q24
@32@0:8@16r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}24
@"NSDictionary"32@0:8r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}16Q24
@32@0:8@"NSDictionary"16r^{?={?=@@@}{?=@@@@}{?=@@@@@@}{?=@@@@@@@@@@@@}{?=@@}{?=@@@@@@}{?=@}{?=@@@@@@@}{?=@@@@}}24
@"BMUserFocusComputedModeStream"
@60@0:8@16Q24Q32B40@44@52
@56@0:8@16@24@32Q40Q48
@"DNDClientEventBehavior"
@"NSNumber"16@0:8
@76@0:8B16B20@24@32B40B44B48B52B56B60B64B68B72
v24@0:8@"NSNumber"16
@84@0:8B16B20@24@32B40B44B48B52B56B60B64B68B72@76
@"<DNDSSleepingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
v48@0:8@16d24Q32@?40
v40@0:8@16d24@?32
@"NSURLSession"
v48@0:8@16@24@32@40
@"DNDSModeAssertionManager"
@"<DNDSScheduleManagerDataSource>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B32@0:8@16N@24
@"NSString"32@0:8@"DNDSSyncEngine"16@"CKRecordID"24
B32@0:8@"DNDSSyncEngine"16N@"CKRecord"24
v40@0:8@"DNDSSyncEngine"16@"CKRecord"24@"CKRecord"32
v40@0:8@"DNDSSyncEngine"16@"CKRecordID"24@"NSError"32
v32@0:8@"DNDSSyncEngine"16@"CKRecord"24
v32@0:8@"DNDSSyncEngine"16@"CKRecordID"24
B32@0:8@"DNDSSyncEngine"16@"CKRecord"24
v40@0:8@"DNDSSyncEngine"16@"CKRecordZoneID"24@"NSArray"32
@"NSArray"24@0:8@"DNDSSyncEngine"16
v24@0:8@"DNDSSyncEngine"16
v32@0:8@16N@24
v32@0:8@"DNDSIDSSyncEngine"16N@"DNDSIDSRecord"24
v32@0:8@"DNDSIDSSyncEngine"16@"DNDSIDSRecord"24
v32@0:8@"DNDSIDSSyncEngine"16@"DNDSIDSRecordID"24
@"NSArray"24@0:8@"DNDSIDSSyncEngine"16
v24@0:8@"DNDSIDSSyncEngine"16
@"<DNDSModeConfigurationsStoreDelegate>"16@0:8
v24@0:8@"<DNDSModeConfigurationsStoreDelegate>"16
v48@0:8@"<DNDSContactMonitoring>"16@"NSArray"24@"NSArray"32@"NSData"40
v32@0:8@"<DNDSContactMonitoring>"16@"NSDictionary"24
@"NSSet"16@0:8
@"<DNDSContactMonitoring>"
@"DNDSSyncEngine"
@"DNDSIDSSyncEngine"
@"<DNDSModeConfigurationsStoreDelegate>"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@"IDSService"
@"<DNDSPairedDeviceStateMonitorDelegate>"
@72@0:8@16@24@32@40q48Q56@64
v56@0:8@16Q24@32@40@?48
v56@0:8@"NSDictionary"16Q24@"NSString"32@"NSSet"40@?<v@?B@"NSError">48
v56@0:8@"NSDictionary"16Q24@"NSString"32@"NSSet"40@?<v@?B@"NSString"@"NSError">48
@"<DNDSSyncServiceDelegate>"16@0:8
v24@0:8@"<DNDSSyncServiceDelegate>"16
B64@0:8@16Q24@32@40^@48^@56
@"<DNDSSyncServiceDelegate>"
@"DNDSSenderConfigurationRecord"
@56@0:8@16@24@32Q40@48
@"NSDateComponents"
@24@0:8B16B20
@64@0:8@16@24@32Q40Q48@56
@"NSArray"24@0:8@"NSString"16
v32@0:8@"NSDate"16@"NSArray"24
@"DNDSIDSRecordMetadata"24@0:8@"DNDSIDSRecordID"16
v40@0:8@"NSDate"16@"NSArray"24@"NSString"32
B24@0:8@"NSString"16
B24@0:8@"NSDate"16
@32@0:8d16d24
@28@0:8Q16i24
@"DNDSModeAssertionDetailsRecord"
@"DNDSModeAssertionSourceRecord"
@"DNDSModeAssertionLifetimeRecord"
@"DNDSModeAssertionRecord"
@"DNDSModeAssertionInvalidationDetailsRecord"
@"DNDSModeAssertionInvalidationPredicateRecord"
Q24@0:8@16
@"<DNDSMindfulnessTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
@52@0:8@16@24B32B36B40B44B48
v48@0:8@16@24@32^v40
@"DNDSSyncSettings"
@"<DNDSSyncSettingsProviderDelegate>"
@52@0:8Q16Q24B32@36@44
@"<DNDSApplicationIdentifierMapping>"
@"DNDSAppForegroundTriggerConfiguration"24@0:8@"DNDSAppForegroundTriggerManager"16
@"DNDMode"24@0:8@"DNDSDrivingTriggerManager"16
@"DNDMode"24@0:8@"DNDSGamingTriggerManager"16
@"DNDMode"24@0:8@"DNDSMindfulnessTriggerManager"16
@"DNDMode"24@0:8@"DNDSSleepingTriggerManager"16
@"NSSet"24@0:8@"DNDSSmartTriggerManager"16
v28@0:8B16@20
@"DNDModeConfiguration"24@0:8@"DNDSWorkoutTriggerManager"16
v28@0:8B16@"DNDSWorkoutTriggerManager"20
@24@0:8#16
@"DNDSBehaviorSettingsRecord"
@"DNDSBypassSettingsRecord"
@"DNDSScheduleSettingsRecord"
@"DNDSConfigurationsRecord"
@"DNDApplicationIdentifier"24@0:8@"DNDApplicationIdentifier"16
@32@0:8Q16@24
@72@0:8@16@24@32@40@48@56@64
@"CKRecord"32@0:8@"CKSyncEngine"16@"CKRecordID"24
v32@0:8@"CKSyncEngine"16@"CKRecord"24
v40@0:8@"CKSyncEngine"16@"CKRecord"24@"NSError"32
v32@0:8@"CKSyncEngine"16@"CKRecordID"24
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordID"24@"NSString"32
v32@0:8@"CKSyncEngine"16@"NSData"24
v32@0:8@"CKSyncEngine"16@"CKRecordZone"24
v32@0:8@"CKSyncEngine"16@"CKRecordZoneID"24
v40@0:8@"CKSyncEngine"16@"CKRecordZoneID"24@"NSError"32
v40@0:8@"CKSyncEngine"16@"CKRecordZone"24@"NSError"32
@52@0:8@16@24@32@40B48
v40@0:8@16q24B32B36
@"<DNDSSyncEngineMetadataStoring>"
@"<DNDSSyncEngineSynchronizing>"
@"<DNDSSyncEngineLastChanceDataStoring>"
{?="syncEnabled"B"featureEnabled"B"accountAvailable"B"encryptionAvailable"B"supportedDevice"B"testing"B}
@"CKContainer"
@36@0:8@16@24B32
@"DNDSIDSRecordID"
@"<DNDSGamingTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
v40@0:8@"DNDClientEventDetails"16@"DNDRequestDetails"24@?<v@?@"DNDClientEventBehavior"@"NSError">32
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"DNDModeAssertion"@"NSError">32
v48@0:8@"DNDModeAssertionInvalidationDetails"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"DNDModeAssertionInvalidation"@"NSError">40
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDModeAssertionInvalidation"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDModeAssertion__>"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDState"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDBehaviorSettings"@"NSError">24
v40@0:8@"DNDBehaviorSettings"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDScheduleSettings"@"NSError">24
v40@0:8@"DNDScheduleSettings"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"DNDModeConfiguration"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDModeConfiguration__>"@"NSError">24
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDModeConfiguration"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSArray<__DNDMode__>"@"NSError">24
v40@0:8@"DNDContactHandle"16@"DNDRequestDetails"24@?<v@?@"NSArray<__NSString__>"@"NSError">32
v40@0:8@"DNDContactHandle"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"DNDModeAssertionDetails"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"NSUUID"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
Vv40@0:8@16@24@?32
v40@0:8@"NSNumber"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSDictionary"@"NSError">24
Vv40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"NSString"16@"DNDRequestDetails"24@?<v@?@"DNDAppInfo"@"NSError">32
v40@0:8@"NSArray<__NSString__>"16@"DNDRequestDetails"24@?<v@?@"NSArray<__DNDAppInfo__>"@"NSError">32
v32@0:8@"DNDRequestDetails"16@?<v@?@"DNDMeDeviceState"@"NSError">24
v48@0:8@"NSNumber"16@"NSNumber"24@"DNDRequestDetails"32@?<v@?@"NSNumber"@"NSError">40
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"DNDModeAssertion"@"NSError">24
v32@0:8@"DNDRequestDetails"16@?<v@?@"NSNumber"@"DNDMeDeviceState"@"NSError">24
@"<DNDSRemoteServiceProviderDelegate>"
@"<DNDSGlobalConfigurationStoreDelegate>"16@0:8
v24@0:8@"<DNDSGlobalConfigurationStoreDelegate>"16
@"DNDSGlobalConfiguration"
@"<DNDSGlobalConfigurationStoreDelegate>"
v24@0:8@"<DNDSKeybagStateObserver>"16
v28@0:8@"DNDSGlobalConfigurationManager"16B24
v32@0:8@"DNDSGlobalConfigurationManager"16@"DNDBypassSettings"24
@"DNDState"24@0:8@"DNDSEventBehaviorResolver"16
Q24@0:8@"DNDSEventBehaviorResolver"16
@"DNDBypassSettings"32@0:8@"DNDSEventBehaviorResolver"16@"NSString"24
@"DNDConfiguration"32@0:8@"DNDSEventBehaviorResolver"16@"NSString"24
B32@0:8@"DNDSEventBehaviorResolver"16@"NSString"24
@32@0:8@16#24
@"NSArray"32@0:8@"<DNDSLifetimeMonitor>"16#24
@"DNDSLocationTriggerConfiguration"24@0:8@"<DNDSLifetimeMonitor>"16
@"NSDictionary"24@0:8@"<DNDSLifetimeMonitor>"16
v24@0:8@"<DNDSLifetimeMonitor>"16
@"DNDModeAssertion"48@0:8@"<DNDSLifetimeMonitor>"16@"DNDModeAssertionDetails"24@"NSString"32^@40
v40@0:8@"<DNDSLifetimeMonitor>"16@"NSArray"24@"NSDate"32
v40@0:8@"<DNDSLifetimeMonitor>"16@"NSString"24@?<v@?@"NSString"@"NSObject<OS_xpc_object>">32
v32@0:8@"<DNDSLifetimeMonitor>"16@"DNDSXPCTimer"24
@"DNDClientEventBehavior"56@0:8@"DNDSRemoteServiceProvider"16@"DNDClientEventDetails"24@"DNDSClientDetails"32@"NSDate"40^@48
@56@0:8@16@24Q32@40^@48
@"DNDModeAssertion"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"DNDModeAssertionInvalidation"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"DNDModeAssertion"48@0:8@"DNDSRemoteServiceProvider"16@"DNDModeAssertionDetails"24@"NSString"32^@40
@"DNDModeAssertionInvalidation"64@0:8@"DNDSRemoteServiceProvider"16@"NSUUID"24Q32Q40@"NSString"48^@56
@"DNDModeAssertionInvalidation"64@0:8@"DNDSRemoteServiceProvider"16@"NSString"24Q32Q40@"DNDModeAssertionInvalidationDetails"48^@56
@"NSArray"56@0:8@"DNDSRemoteServiceProvider"16@"NSDate"24Q32@"NSString"40^@48
@"NSArray"32@0:8@"DNDSRemoteServiceProvider"16^@24
@"DNDState"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@16@24^@32
@"DNDBehaviorSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDBehaviorSettings"24^@32
@"DNDScheduleSettings"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDScheduleSettings"24^@32
@"DNDModeConfiguration"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"NSDictionary"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDModeConfiguration"24^@32
B32@0:8@"DNDSRemoteServiceProvider"16^@24
@"NSArray"40@0:8@"DNDSRemoteServiceProvider"16@"DNDContactHandle"24^@32
B40@0:8@"DNDSRemoteServiceProvider"16@"DNDContactHandle"24^@32
@"NSString"32@0:8@"DNDSRemoteServiceProvider"16^@24
B36@0:8@16B24^@28
B36@0:8@"DNDSRemoteServiceProvider"16B24^@28
Q32@0:8@"DNDSRemoteServiceProvider"16^@24
v32@0:8@"DNDSRemoteServiceProvider"16@"NSString"24
@"DNDAppInfo"40@0:8@"DNDSRemoteServiceProvider"16@"NSString"24^@32
@"NSArray"40@0:8@"DNDSRemoteServiceProvider"16@"NSArray"24^@32
@"DNDMeDeviceState"32@0:8@"DNDSRemoteServiceProvider"16^@24
B40@0:8@16B24B28^@32
B40@0:8@"DNDSRemoteServiceProvider"16B24B28^@32
B40@0:8@"DNDSRemoteAvailabilityServiceProvider"16@"DNDApplicationIdentifier"24o^@32
@"DNDSPairedDevice"24@0:8@"<DNDSAssertionSyncManager>"16
@"NSSet"24@0:8@"<DNDSAssertionSyncManager>"16
@"DNDSPairedDevice"32@0:8@"<DNDSAssertionSyncManager>"16@"NSString"24
@"DNDModeAssertion"32@0:8@"<DNDSAssertionSyncManager>"16@"DNDModeAssertion"24
@"DNDScheduleSettings"32@0:8@"<DNDSAssertionSyncManager>"16@"NSString"24
B24@0:8@"<DNDSAssertionSyncManager>"16
v32@0:8@"<DNDSAssertionSyncManager>"16@?<B@?@"<DNDSModeAssertionUpdateContext>">24
v40@0:8@"<DNDSAssertionSyncManager>"16@"NSArray"24@?<v@?>32
@"DNDState"24@0:8@"<DNDSAssertionSyncManager>"16
@"DNDBypassSettings"24@0:8@"<DNDSSettingsSyncManager>"16
@"DNDSScheduleSettings"24@0:8@"<DNDSSettingsSyncManager>"16
v32@0:8@"<DNDSSettingsSyncManager>"16@"DNDBypassSettings"24
v32@0:8@"<DNDSSettingsSyncManager>"16@"DNDSScheduleSettings"24
@"NSDictionary"24@0:8@"DNDSScheduleManager"16
v32@0:8@"DNDSSettingsManager"16@"DNDBehaviorSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDSScheduleSettings"24
v32@0:8@"DNDSSettingsManager"16@"DNDSSyncSettings"24
v40@0:8@"DNDSPairedDeviceStateMonitor"16@"DNDSPairedDevice"24@"DNDSPairedDevice"32
v40@0:8@"DNDSPairedDeviceStateMonitor"16@"NSSet"24@"NSSet"32
v32@0:8@"DNDSModeConfigurationManager"16@"NSArray"24
v40@0:8@"DNDSModeConfigurationManager"16@"NSDictionary"24@"DNDModeConfiguration"32
B32@0:8Q16^@24
@56@0:8@16Q24Q32@40^@48
v32@0:8Q16q24
B32@0:8Q16@24
@"DNDSCalendarEventLifetimeMonitor"
@"DNDSScheduleLifetimeMonitor"
@"DNDSLocationLifetimeMonitor"
@"DNDSScheduleManager"
@"DNDSAppForegroundTriggerManager"
@"DNDSBiomeDonationManager"
@"DNDSDrivingTriggerManager"
@"DNDSGamingTriggerManager"
@"DNDSMindfulnessTriggerManager"
@"DNDSSleepingTriggerManager"
@"DNDSSmartTriggerManager"
@"DNDSWorkoutTriggerManager"
@"DNDSEventBehaviorResolver"
@"DNDSRemoteServiceProvider"
@"DNDSRemoteAvailabilityServiceProvider"
@"<DNDSAssertionSyncManager>"
@"<DNDSSettingsSyncManager>"
@"DNDSSettingsManager"
@"DNDSPairedDeviceStateMonitor"
@"DNDSReachability"
@"DNDSXPCEventStream"
@"FBSDisplayLayoutMonitor"
@"DNDSGlobalConfigurationStore"
@"DNDSGlobalConfigurationManager"
@"DNDSModeConfigurationsStore"
@"DNDSPlaceholderModeManager"
@"DNDSContactMonitor"
@"DNDSAppInfoCache"
@"DNDSUserAvailabilityCoordinator"
@"DNDSMetricsManager"
@"<DNDSSmartTriggerManagerDataSource><DNDSBiomeTriggerManagerDataSource>"
v28@0:8@"<DNDSGlobalConfigurationStoring>"16B24
B28@0:8B16^@20
@"<DNDSGlobalConfigurationStoring>"
@"<DNDSGlobalConfigurationManagerDelegate>"
