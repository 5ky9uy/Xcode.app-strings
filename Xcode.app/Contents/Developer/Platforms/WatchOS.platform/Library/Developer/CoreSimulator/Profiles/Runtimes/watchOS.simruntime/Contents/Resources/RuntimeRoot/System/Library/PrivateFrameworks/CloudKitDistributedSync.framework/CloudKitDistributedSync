N3orc19SeekableInputStreamE
N6google8protobuf2io19ZeroCopyInputStreamE
N3orc24SeekableArrayInputStreamE
N3orc23SeekableFileInputStreamE
N3orc16PositionRecorderE
N3orc20BufferedOutputStreamE
N3orc5proto17IntegerStatisticsE
N3orc5proto16DoubleStatisticsE
N3orc5proto16StringStatisticsE
N3orc5proto16BucketStatisticsE
N3orc5proto17DecimalStatisticsE
N3orc5proto14DateStatisticsE
N3orc5proto19TimestampStatisticsE
N3orc5proto16BinaryStatisticsE
N3orc5proto20CollectionStatisticsE
N3orc5proto16ColumnStatisticsE
N3orc5proto13RowIndexEntryE
N3orc5proto8RowIndexE
N3orc5proto11BloomFilterE
N3orc5proto16BloomFilterIndexE
N3orc5proto6StreamE
N3orc5proto14ColumnEncodingE
N3orc5proto23StripeEncryptionVariantE
N3orc5proto12StripeFooterE
N3orc5proto10StringPairE
N3orc5proto4TypeE
N3orc5proto17StripeInformationE
N3orc5proto16UserMetadataItemE
N3orc5proto16StripeStatisticsE
N3orc5proto8MetadataE
N3orc5proto8DataMaskE
N3orc5proto13EncryptionKeyE
N3orc5proto17EncryptionVariantE
N3orc5proto10EncryptionE
N3orc5proto6FooterE
N3orc5proto10PostScriptE
N3orc5proto8FileTailE
N6google8protobuf8internal29InternalMetadataWithArenaBaseINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_29InternalMetadataWithArenaLiteEE9ContainerE
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
?N3orc11BloomFilterE
N3orc15BloomFilterImplE
N3orc14ByteRleEncoderE
N3orc18ByteRleEncoderImplE
N3orc21BooleanRleEncoderImplE
N3orc14ByteRleDecoderE
N3orc18ByteRleDecoderImplE
N3orc21BooleanRleDecoderImplE
]xEc
N3orc13StripeStreamsE
N3orc12ColumnReaderE
N3orc19BooleanColumnReaderE
N3orc16ByteColumnReaderE
N3orc19IntegerColumnReaderE
N3orc21TimestampColumnReaderE
N3orc18DoubleColumnReaderE
N3orc28StringDictionaryColumnReaderE
N3orc24StringDirectColumnReaderE
N3orc18StructColumnReaderE
N3orc16ListColumnReaderE
N3orc15MapColumnReaderE
N3orc17UnionColumnReaderE
N3orc21Decimal64ColumnReaderE
N3orc22Decimal128ColumnReaderE
N3orc25DecimalHive11ColumnReaderE
NSt3__120__shared_ptr_pointerIPN3orc16StringDictionaryENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN3orc16StringDictionaryEE27__shared_ptr_default_deleteIS2_S2_EE
CN3orc24RowIndexPositionRecorderE
N3orc14StreamsFactoryE
N3orc18StreamsFactoryImplE
N3orc12ColumnWriterE
N3orc18StructColumnWriterE
N3orc19IntegerColumnWriterE
N3orc16ByteColumnWriterE
N3orc19BooleanColumnWriterE
N3orc18DoubleColumnWriterE
N3orc18StringColumnWriterE
N3orc16CharColumnWriterE
N3orc19VarCharColumnWriterE
N3orc18BinaryColumnWriterE
N3orc21TimestampColumnWriterE
N3orc16DateColumnWriterE
N3orc21Decimal64ColumnWriterE
N3orc22Decimal128ColumnWriterE
N3orc16ListColumnWriterE
N3orc15MapColumnWriterE
N3orc17UnionColumnWriterE
N3orc21CompressionStreamBaseE
N3orc17CompressionStreamE
N3orc21ZlibCompressionStreamE
N3orc23ZlibDecompressionStreamE
N3orc24BlockDecompressionStreamE
N3orc25SnappyDecompressionStreamE
N3orc22LzoDecompressionStreamE
N3orc22Lz4DecompressionStreamE
N3orc22BlockCompressionStreamE
N3orc21ZSTDCompressionStreamE
N3orc23ZSTDDecompressionStreamE
NSt3__120__shared_ptr_pointerIP11ZSTD_CCtx_sPFmS2_ENS_9allocatorIS1_EEEE
PFmP11ZSTD_CCtx_sE
NSt3__120__shared_ptr_pointerIP11ZSTD_DCtx_sPFmS2_ENS_9allocatorIS1_EEEE
PFmP11ZSTD_DCtx_sE
N3orc17NotImplementedYetE
N3orc10ParseErrorE
N3orc15InvalidArgumentE
]xEc
N3orc23MalformedInputExceptionE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
N3orc10MemoryPoolE
N3orc14MemoryPoolImplE
N3orc10DataBufferIcEE
N3orc10DataBufferIPcEE
N3orc10DataBufferIdEE
N3orc10DataBufferIxEE
N3orc10DataBufferIyEE
N3orc10DataBufferIhEE
N3orc10DataBufferINS_6Int128EEE
N3orc15FileInputStreamE
N3orc12OutputStreamE
_N3orc13ReaderOptionsE
N3orc16RowReaderOptionsE
N3orc9RowReaderE
N3orc13RowReaderImplE
N3orc6ReaderE
N3orc10ReaderImplE
N3orc11InputStreamE
NSt3__120__shared_ptr_pointerIPN3orc12FileContentsENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN3orc12FileContentsEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__120__shared_ptr_pointerIPN3orc11BloomFilterENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN3orc11BloomFilterEEE
N3orc12RleEncoderV1E
N3orc12RleDecoderV1E
 (08@
  ((((((((0000000088888888@@@@@@@@
        ((((((((0000000088888888@@@@@@@@
N3orc12RleDecoderV2E
?ffffff
?N3orc12RleEncoderV2E
N3orc10RleEncoderE
N3orc10RleDecoderE
N3orc16ColumnStatisticsE
N3orc23MutableColumnStatisticsE
N3orc20ColumnStatisticsImplE
N3orc22BinaryColumnStatisticsE
N3orc26BinaryColumnStatisticsImplE
N3orc23BooleanColumnStatisticsE
N3orc27BooleanColumnStatisticsImplE
N3orc20DateColumnStatisticsE
N3orc24DateColumnStatisticsImplE
N3orc23DecimalColumnStatisticsE
N3orc27DecimalColumnStatisticsImplE
N3orc22DoubleColumnStatisticsE
N3orc26DoubleColumnStatisticsImplE
N3orc23IntegerColumnStatisticsE
N3orc27IntegerColumnStatisticsImplE
N3orc22StringColumnStatisticsE
N3orc26StringColumnStatisticsImplE
N3orc25TimestampColumnStatisticsE
N3orc29TimestampColumnStatisticsImplE
N3orc10StatisticsE
N3orc14StatisticsImplE
N3orc16StripeStatisticsE
N3orc20StripeStatisticsImplE
NSt3__120__shared_ptr_pointerIPN3orc16ColumnStatisticsENS_10shared_ptrIKS2_E27__shared_ptr_default_deleteIS5_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIKN3orc16ColumnStatisticsEE27__shared_ptr_default_deleteIS3_S2_EE
N3orc17StreamInformationE
N3orc21StreamInformationImplE
N3orc17StripeInformationE
N3orc21StripeInformationImplE
N3orc17StripeStreamsImplE
N3orc10FutureRuleE
N3orc14FutureRuleImplE
/usr/share/zoneinfo
N3orc13TimezoneErrorE
N3orc13VersionParserE
N3orc14Version1ParserE
N3orc14Version2ParserE
N3orc8TimezoneE
N3orc12TimezoneImplE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__shared_ptr_pointerIPN3orc14FutureRuleImplENS_10shared_ptrINS1_10FutureRuleEE27__shared_ptr_default_deleteIS5_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN3orc10FutureRuleEE27__shared_ptr_default_deleteIS2_NS1_14FutureRuleImplEEE
NSt3__120__shared_ptr_pointerIPN3orc12TimezoneImplENS_10shared_ptrINS1_8TimezoneEE27__shared_ptr_default_deleteIS5_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN3orc8TimezoneEE27__shared_ptr_default_deleteIS2_NS1_12TimezoneImplEEE
N3orc4TypeE
N3orc8TypeImplE
N3orc17ColumnVectorBatchE
N3orc15LongVectorBatchE
N3orc17DoubleVectorBatchE
N3orc24EncodedStringVectorBatchE
N3orc17StringVectorBatchE
N3orc17StructVectorBatchE
N3orc15ListVectorBatchE
N3orc14MapVectorBatchE
N3orc16UnionVectorBatchE
N3orc20Decimal64VectorBatchE
N3orc21Decimal128VectorBatchE
N3orc20TimestampVectorBatchE
N3orc13WriterOptionsE
N3orc6WriterE
N3orc10WriterImplE
NSt3__121__basic_string_commonILb1EEE
  !!""##$$$$%%%%&&&&&&&&''''''''(((((((((((((((())))))))))))))))********************************
  !!""##$$$$%%%%&&&&&&&&''''''''(((((((((((((((())))))))))))))))********************************
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
Z* ,
H$6t
_~6
52F*
#jT$
^6o}
[-&LMb#{'
w+OQvr
R1h58
SKyu
)\ZEo^m/
ru&o
i8P/_
?(3w
H*0"ZOW
{kHw
)T`D
!AxU
l!;b
:1X:
y9*O
kM`~
Vc0a
dQy/
lDa>
7~8A
C-Yn
gqr<
$/o|
f-=v
mj>zjZ
l6qnk
IiGM>nw
1A26b
i91k
ewh/?y
*5KS
6~_'
F*.f
1wsHp
M8MF
Pe6^
#bML"
`F(>
vQO+t
[h1R
XsBI
hPU3
^oEZ_
2%k_
w3Xc
/P8i
OZw3(?
Z"0*
fP~V
D`T
^GP~
b;!l
V_:X1:
NJ2"v
O*9y]
fu`z
/yQA
&]|v


N6snappy6SourceE
N6snappy15ByteArraySourceE
@ N6google8protobuf2io20ZeroCopyOutputStreamE
N6google8protobuf2io17ArrayOutputStreamE
N6google8protobuf2io18StringOutputStreamE
N6google8protobuf11MessageLiteE
N6google8protobuf14FatalExceptionE
@(#)PROGRAM:CloudKitDistributedSync  PROJECT:CloudKit-1930.13
@24CKXORCMemoryOutputStream
23CKXORCMemoryInputStream
CQ
CQ
CQ
CQ
Can't backup that much!
SeekableArrayInputStream 
can't backup negative distances
can't backup unless we just called Next
can't backup that far
seek too far
 from 
 for 
WriteAliasedRaw is not supported.
BufferedOutputStream 
Failed to allocate buffer.
/Library/Caches/com.apple.xbs/Binaries/CloudKitCode_Sim/install/TempContent/Objects/CloudKit.build/ORC.build/DerivedSources/cmake/c++/src/orc_proto.pb.cc
orc.proto.IntegerStatistics
orc.proto.DoubleStatistics
orc.proto.StringStatistics
orc.proto.BucketStatistics
orc.proto.DecimalStatistics
orc.proto.DateStatistics
orc.proto.TimestampStatistics
orc.proto.BinaryStatistics
orc.proto.CollectionStatistics
orc.proto.ColumnStatistics
orc.proto.RowIndexEntry
orc.proto.RowIndex
orc.proto.BloomFilter
orc.proto.BloomFilterIndex
orc.proto.Stream
orc.proto.ColumnEncoding
orc.proto.StripeEncryptionVariant
orc.proto.StripeFooter
orc.proto.StringPair
orc.proto.Type
orc.proto.StripeInformation
orc.proto.UserMetadataItem
orc.proto.StripeStatistics
orc.proto.Metadata
orc.proto.DataMask
orc.proto.EncryptionKey
orc.proto.EncryptionVariant
orc.proto.Encryption
orc.proto.Footer
orc.proto.PostScript
orc.proto.FileTail
expectedEntries should be > 0
False positive probability should be > 0.0 & < 1.0
numBits should be multiple of 64!
bad position
bad read in nextBuffer
DATA stream not found in Boolean column
DATA stream not found in Byte column
DATA stream not found in Integer column
DATA stream not found in Timestamp column
SECONDARY stream not found in Timestamp column
DATA stream not found in Double column
bad read in readFully
Corrupt dictionary blob in StringDictionaryColumn
Entry index out of range in StringDictionaryColumn
LENGTH stream not found in StringDirectColumn
DATA stream not found in StringDirectColumn
failed to read in StringDirectColumnReader.next
Unknown encoding for StructColumnReader
LENGTH stream not found in List column
LENGTH stream not found in Map column
LENGTH stream not found in Union column
DATA stream not found in Decimal64Column
SECONDARY stream not found in Decimal64Column
Hive 0.11 decimal was more than 38 digits.
Warning: 
Hive 0.11 decimal with more than 38 digits 
replaced by NULL.
buildReader unhandled string encoding
buildReader unhandled type
Unknown encoding in convertRleVersion
bad read in DoubleColumnReader::next()
Read past end of stream in Decimal64ColumnReader 
Decimal scale out of range
unordered_map::at: key not found
Invalid param
Failed to write bloom filter stream.
Failed to cast to StructVectorBatch
Failed to cast to LongVectorBatch
Failed to cast to IntegerColumnStatisticsImpl
Failed to cast to BooleanColumnStatisticsImpl
Failed to cast to DoubleVectorBatch
Failed to cast to DoubleColumnStatisticsImpl
Failed to cast to StringVectorBatch
Failed to cast to StringColumnStatisticsImpl
Failed to cast to BinaryColumnStatisticsImpl
Failed to cast to TimestampVectorBatch
Failed to cast to TimestampColumnStatisticsImpl
Failed to cast to DateColumnStatisticsImpl
Failed to cast to Decimal64VectorBatch
Failed to cast to DecimalColumnStatisticsImpl
Failed to cast to Decimal128VectorBatch
Failed to cast to ListVectorBatch
Failed to cast to MapVectorBatch
Failed to cast to UnionVectorBatch
Decimal precision more than 38 is not supported
Type is not supported yet for creating ColumnWriter.
Failed to flush compression buffer.
Failed to get next output buffer from output stream.
Failed to reset inflate.
Failed to deflate input data.
ZlibCompressionStream
1.2.11
Error while calling deflateInit2() for zlib.
Memory error from inflateInit2
Version error from inflateInit2
Stream error from inflateInit2
Unknown error from inflateInit2
Error in ~ZlibDecompressionStream() 
Bad inflateReset in ZlibDecompressionStream::Next
Buffer error in ZlibDecompressionStream::Next
Data error in ZlibDecompressionStream::Next
Stream error in ZlibDecompressionStream::Next
Unknown error in ZlibDecompressionStream::Next
Unknown compression state in ZlibDecompressionStream::Next
Backup without previous Next in ZlibDecompressionStream
Bad skip in ZlibDecompressionStream::seek
zlib(
Backup without previous Next in 
Bad skip in 
SnappyDecompressionStream choked on corrupt input
Snappy length exceeds block size
 - failed to decompress
Write to an out-of-bound place!
Error while calling ZSTD_createCCtx() for zstd.
Error while calling ZSTD_createDCtx() for zstd.
compression codec
Unknown compression codec 
Read past EOF in ZlibDecompressionStream::readBuffer
read past EOF
snappy(
lzo(
lz4(
ZstdCompressionStream
zstd(
Can't build Int128 with 5 ints.
Unsupported length for building Int128
Division by 0 in Int128
Int128 too large to convert to long
Invalid LZO command 
MalformedInputException at 
MalformedInputException 
Can't open 
Can't stat 
Buffer is null
Bad read of 
Short read of 
Unknown compression type
Invalid column selected 
 out of 
Invalid type id selected 
Failed to parse the row index
bad StripeFooter from 
Failed to serialize file tail
stripe index out of range
key not found
Malformed RowIndex stream meta in stripe 
: streamOffset=
, streamLength=
, stripeOffset=
, stripeIndexLength=
Failed to parse RowIndex from stripe footer
No stripe statistics in file
column index out of range
Invalid Metadata length: fileLength=
, metadataLength=
, footerLength=
, postscriptLength=
Failed to parse the metadata
Warning: ORC file 
 was written in an unknown format version 
Malformed StripeInformation at stripe index 
: fileLength=
, StripeInfo=(offset=
, indexLength=
, dataLength=
Invalid ORC postscript length
Not an ORC file
Invalid ORC postscript length: 
, file length = 
Failed to parse the postscript from 
Footer is corrupt: no types found
Footer is corrupt: malformed link from type 
 to 
Footer is corrupt: types(
) not exists
Footer is corrupt: subType(
) >= subType(
) in types(
). (
 >= 
Failed to parse the footer from 
Failed to parse the file tail from string
File size too small
Invalid ORC tailSize=
, fileLength=
Illegal stripe index: 
Failed to parse BloomFilterIndex
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
bad read in readByte
Corrupt PATCHED_BASE encoded data (pl==0)!
Corrupt PATCHED_BASE encoded data (patchBitSize + pgw > 64)!
bad read in RleDecoderV2::readByte
Invalid p value: 
, isFixedDelta cannot be false
, currDelta should be zero
currDelta should be equal to initialDelta for fixed delta encoding
Not implemented yet
Not supported type: 
Column has 
 values
 and has null value: 
Data type: Binary
Values: 
Has null: 
Total length: 
Total length: not defined
Total length is not defined.
Data type: Boolean
(true: 
; false: 
(true: not defined; false: not defined)
True and false counts are not defined
False count is not defined.
True count is not defined.
Data type: Date
Minimum: 
Minimum: not defined
Maximum: 
Maximum: not defined
Minimum is not defined.
Maximum is not defined.
Data type: Decimal
Sum: 
Sum: not defined
Sum is not defined.
Data type: Double
Data type: Integer
Data type: String
Minimum is not defined
Maximum is not defined
Total length is not defined
Data type: Timestamp
%Y-%m-%d %H:%M:%S
LowerBound: 
LowerBound is not defined
UpperBound: 
UpperBound is not defined
LowerBound is not defined.
UpperBound is not defined.
Malformed stream meta at stream index 
 in stripe 
, stripeDataLength=
Failed to parse the stripe footer
  Future rule: 
  standard 
  dst 
  start 
  end 
 (dst)
TZDIR
name out of range in variant 
TZif
non-tzfile 
tzfile too short 
 needs 
 and has 
tzfile rule out of range 
 references rule 
Timezone file: 
  Version: 
  Variant 
%F %H:%M:%S
  Transition: 
null
) -> 
julian 
day 
month 
 week 
 day 
 at 
Extra text
name required
missing close '>'
empty string not allowed
missing number
missing transition
missing first .
missing second .
 in '
boolean
tinyint
smallint
bigint
float
double
string
binary
timestamp
array<
void
map<
struct<
uniontype<
decimal(
date
varchar(
char(
Unknown type
not supported yet
Illegal LIST type that doesn't contain one subtype
Illegal MAP type that doesn't contain two subtypes
Illegal UNION type that doesn't contain any subtypes
Unknown type kind
Invalid type string.
Array type must contain exactly one sub type.
Map type must contain exactly two sub types.
Struct type must contain at least one sub type.
Union type must contain at least one sub type.
Decimal type must specify precision and scale.
array
struct
uniontype
decimal
varchar
char
Unknown type 
Invalid type string. Cannot find closing >
Invalid type string. Cannot find closing )
Unrecognized character.
Long vector <
 of 
Double vector <
Encoded string vector <
Byte vector <
Struct vector <
List vector <
 with 
Map vector <
Union vector <
; with 
Decimal64 vector  with 
Decimal128 vector  with 
Timestamp vector <
Unsupported file version specified.
Failed to write stripe footer.
Failed to write metadata.
Failed to write file footer.
Failed to write post script.
Unknown type.
incorrect header check
unknown compression method
invalid window size
unknown header flags set
header crc mismatch
invalid block type
invalid stored block lengths
too many length or distance symbols
invalid code lengths set
invalid bit length repeat
invalid code -- missing end-of-block
invalid literal/lengths set
invalid distances set
invalid literal/length code
invalid distance code
invalid distance too far back
incorrect data check
incorrect length check
need dictionary
stream end
file error
stream error
data error
insufficient memory
buffer error
incompatible version
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/arena.cc
CHECK failed: (min_bytes) <= (std::numeric_limits<size_t>::max() - kBlockHeaderSize): 
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/generated_message_util.cc
Not implemented field number 
CHECK failed: (scc->visit_status.load(std::memory_order_relaxed)) == (SCCInfoBase::kRunning): 
 with type 
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/io/coded_stream.cc
A protocol message was rejected because it was too big (more than 
 bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
CHECK failed: (buffer_size) >= (0): 
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/io/zero_copy_stream.cc
This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/io/zero_copy_stream_impl_lite.cc
CHECK failed: (last_returned_size_) > (0): 
BackUp() can only be called after a successful Next().
CHECK failed: (count) <= (last_returned_size_): 
CHECK failed: (count) >= (0): 
CHECK failed: target_ != NULL: 
Cannot allocate buffer larger than kint32max for 
StringOutputStream.
CHECK failed: (count) <= (target_->size()): 
(cannot determine missing fields for lite message)
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/message_lite.cc
Exceeded maximum protobuf size of 2GB: 
CHECK failed: !coded_out.HadError(): 
parse
Can't 
 message of type "
" because it is missing required fields: 
CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): 
 was modified concurrently during serialization.
CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): 
Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of 
This shouldn't be called if all the sizes are equal.
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/stubs/common.cc
This program requires version 
 of the Protocol Buffer runtime library, but the installed version is 
.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
This program was compiled against version 
 of the Protocol Buffer runtime library, which is not compatible with the installed version (
).  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
%d.%d.%d
INFO
WARNING
ERROR
FATAL
[libprotobuf %s %s:%d] %s
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/wire_format_lite.cc
CHECK failed: (value.size()) <= (kint32max): 
CKXSchema.mm
Token not found
Can't define field for top-level container struct
Can't define struct reference for top-level container struct
Invalid list type
Can't define non-struct list for top-level container struct
Invalid field type
Index out of bounds
CKDSErrorDomain
CKAtomSerialization.mm
Unexpected class %@
Unexpected struct token %ld
Object needs to be of type %@
Proxy needs to be of type %@
Non-zero-length NSData has empty bytes
v32@?0@"CKXAtomReference"8Q16^B24
v32@?0@"CKAtomReferenceProxy"8Q16^B24
Atom behavior is internal and should not be set manually
v32@?0@"CKXAtom"8Q16^B24
v32@?0@"CKAtomProxy"8Q16^B24
v8@?0
__location:struct<
identifier:binary,
zone_name:string,
zone_owner_name:string,
__timestamp:struct<
modifier:tinyint,
clock:bigint,
unordered:boolean,
__reference:struct<
type:tinyint,
__location_row:bigint,
__timestamp_row:bigint,
__atom:struct<
version:bigint,
__identifier_row:bigint,
references:array<__reference_row:bigint>,
atom_behavior:tinyint,
atom_type:bigint,
value:binary,
v24@?0^v8Q16
CKXAtomORCSchema.mm
Invalid struct %lu
Invalid field %lu
CKXUncompressedReaderWriter.mm
Invalid field
Invalid location
Field is not a reference
Invalid page count
Invalid struct
Invalid size
Invalid size for data (is %lu, expecting %lu)
Invalid size for page
Invalid offset
Invalid page
%02x
CKXORCUtilities.mm
Unexpected null value column in writer
Unexpected null struct list column in writer
CKXBackingStore.mm
No error found for failed read
Data not present
Backing store already set up for reading
Unexpected atom batch header format
No reader available for atom batch format version %d
Reading not permitted while writing
Reader not found
Writing not permitted while reading
Writer not found
finishWriting needs to be called before any data can be read
Writing not permitted after finishWriting has already been called
Unexpected read error after closing atom batch for writing: %@
Can't get data while still writing; call finishWriting
Invalid struct token
Proxy must be immutable for reading
Proxy must be mutable for writing
Write proxy %@ was retained out of scope and cannot be reused
setData should not be called on the backing store instance
Unexpected version
v32@?0{_NSRange=QQ}8^B24
Index %lu out of range
%@ is unavailable
CKXORCReaderWriter.mm
The ORC reader requires a helper object conforming to CKXORCHelpers
Unexpected atom batch read error: %s
Atom batch read error: %s
Invalid row: %llu/%llu
Incorrect rows loaded: row %llu does not fit in range %llu->llu
Root column not found
Invalid list
Index out of range
Unexpected null struct list column in reader
The ORC writer requires a helper object conforming to CKXORCHelpers
Expected dictionary to be enabled
Expected indexes to be disabled
Previous column capacity %llu unexpectedly greater than batch capacity %llu
Incorrect rows loaded: batch offset %llu does not fit in range %d->%llu
Can't access row (%llu) smaller than the current batch starting row (%llu)
Only suitable for testing
Number of elements in batch exceeds capacity
Can't append to any list row other than the last one
Unexpected null struct reference column in writer
CKXORCMemoryInputStream
void CKXReaderCheck(CKXORCReader *__strong)
Reader not present: make sure that -[CKXORCReader setData:error:] has been called
CKXORCMemoryOutputStream
v32@?0@"CKXProxyBase"8Q16^B24
Proxies by class:
q24@?0#8#16
  %@: %lu
v32@?0#8Q16^B24
Active proxies by scope:
  %@: %ld
v32@?0@"NSNumber"8@"NSNumber"16^B24
No proxies in cache
Total proxies created: %ld
Total proxies reclaimed: %ld
CKAtomBatch.m
Error opening atom batch: %@
Unexpectedly nil backing store for writer
v16@?0@"CKAtomBatchProxy"8
v24@?0@"CKAtomMutableProxy"8Q16
v16@?0@"CKAtomBatchMutableProxy"8
Use -[CKAtomBatch initWriterWithAtomLocation:] to initialize a batch
Atom Batch (%ld atom%@) {
  },
  Location %@ {
    Atom {
      Identifier: %@
      Reference %lu: %@/%@
      Value: %@
    }
Clock value NSUIntegerMax is reserved
%@%@:%@%@
v32@?0@"CKDistributedTimestamp"8Q16^B24
CKDistributedTime.m
Non-zero modifiers for sequential timestamps not yet supported
Unordered to ordered timestamp promotion not supported
v24@?0@"CKDistributedTimestamp"8^B16
@"NSString"16@?0@"NSArray"8
q24@?0@"CKDistributedTimestamp"8@"CKDistributedTimestamp"16
[%@]
{%@}
{%lu unordered}
Timestamp sites should match
Unordered timestamps should not be partially overlapping
( %@ -> %@ ]
Replaced non-placeholder reference with new reference (%ld->%lu) in uncompressed writer. There may be orphaned objects.
Reading v%u file with writer code %u, writer version %d, and length %lu
Skipping read for v%u file with writer code %u, writer version %d, and length %lu, due to null root struct
Created ORC reader for struct %lu with size: %lu, rows: %llu
Created ORC writer
BUG IN CLOUDKIT: Committing batch while uncommitted structs are still present
Growing ORC write batch to size %llu->%llu
Flushed ORC writer with file size: %lu, rows: %llu
Proxy %@ retained out of expected scope. This may cause degraded performance if it happens too often.
Proxies not put back in expected order. This may cause degraded performance if it happens too often.
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
CKXSchema
CKXReaderBase
CKXWriterBase
CKXVersionedReaderWriterStore
CKXAtomBindingImplementation
CKXBinding
CKXDistributedTimestamp
CKXAtomLocation
CKXAtomReference
CKXAtom
CKXAtomBatch
CKDistributedTimestampProxy
CKXReadStructProxy
CKAtomLocationProxy
CKAtomReferenceProxy
CKAtomProxy
CKAtomBatchProxy
CKDistributedTimestampMutableProxy
CKXWriteStructProxy
CKAtomLocationMutableProxy
CKAtomReferenceMutableProxy
CKAtomMutableProxy
CKAtomBatchMutableProxy
Helpers
CKXAtomORCSchema
CKXORCHelpers
CKXUncompressedReader
CKXReaderProtocol
CKXReaderWriterProtocol
CKXUncompressedWriter
CKXWriterProtocol
CKAtomLocation
NSCopying
CKAtomReference
CKXORCUtilities
CKXBackingStore
Header
IndexAtIndex
CKXORCReaderOptions
CKXORCReader
CKXORCWriterOptions
CKXORCWriter
CKXProxyBase
CKXStructProxyBase
CKXStructMutableProxyBase
CKXArrayProxyBase
CKXStructArrayProxy
CKXStructArrayMutableProxy
CKXStructProxyChildCache
CKXProxyCache
CKAtomBatchEnumerationOptions
CKAtomBatch
CKOrdering
CKDistributedTimestamp
NSSecureCoding
NSCoding
CKDistributedTimestampVector
CKDistributedTimestampVectorRange
init
nextIdentifier
setNextIdentifier:
defineStruct
newIdentifier
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
typeForEncoding:
size
code
fieldTypeForField:
listTypeForField:
fieldTokenCountForStructToken:
fieldTokenAtIndex:forStructToken:
structForStructReference:
structForListReference:
defineTopLevelContainerStruct
defineFieldForStruct:withEncoding:optional:
defineStructReferenceToType:forStruct:
defineListReferenceToStructType:forStruct:
defineListReferenceOfType:forStruct:
valueSizeForField:
valueTypeForField:
valueFieldIsOptional:
referencedStructCountForStructToken:
referencedStructAtIndex:forStructToken:
structIsTopLevelContainer:
fieldExists:
structContainingField:
.cxx_destruct
.cxx_construct
structTokens
structTokenToStructProperties
structTokenToFieldTokens
fieldTokenToFieldProperties
_nextIdentifier
TQ,N,V_nextIdentifier
initWithSchema:
setData:
schema
data
_schema
_data
T@"CKXSchema",R,N,V_schema
T@"NSData",&,N,V_data
datas
addObject:
count
objectAtIndexedSubscript:
newPage
pageAtIndex:
pageCount
_datas
T@"NSMutableArray",R,N,V_datas
createReaderForVersionIfNecessary:
createWriterForVersionIfNecessary:
versionSupported:
uncompressedReader
binding
setUncompressedReader:
orcReader
orcHelpers
optionsByReaderWriterClass
objectForKeyedSubscript:
initWithSchema:helpers:options:
setOrcReader:
uncompressedWriter
setUncompressedWriter:
orcWriter
setOrcWriter:
initWithBinding:optionsByReaderWriterClass:
readerForVersion:
writerForVersion:
setBinding:
setOptionsByReaderWriterClass:
_uncompressedReader
_uncompressedWriter
_orcReader
_orcWriter
_binding
_optionsByReaderWriterClass
T@"CKXUncompressedReader",&,N,V_uncompressedReader
T@"CKXUncompressedWriter",&,N,V_uncompressedWriter
T@"CKXORCReader",&,N,V_orcReader
T@"CKXORCWriter",&,N,V_orcWriter
T@"NSObject<CKXBinding>",&,N,V_binding
T@"NSDictionary",&,N,V_optionsByReaderWriterClass
appendBytes:length:
length
topLevelStructToken
structTokenForClass:
objectClassForStructToken:
proxyClassForStructToken:
mutableProxyClassForStructToken:
setSchema:
tokens
T@"CKXSchema",&,N,V_schema
siteIdentifier
setSiteIdentifier:
modifier
setModifier:
clock
setClock:
unordered
setUnordered:
_modifier
_unordered
_siteIdentifier
_clock
T@"NSData",&,N,V_siteIdentifier
TC,N,V_modifier
Tq,N,V_clock
TB,N,V_unordered
identifier
setIdentifier:
_identifier
T@"NSData",&,N,V_identifier
type
setType:
location
setLocation:
timestamp
setTimestamp:
_type
_location
_timestamp
TC,N,V_type
T@"CKXAtomLocation",&,N,V_location
T@"CKXDistributedTimestamp",&,N,V_timestamp
version
setVersion:
references
setReferences:
atomBehavior
setAtomBehavior:
atomType
setAtomType:
value
setValue:
_atomBehavior
_version
_references
_atomType
_value
TQ,N,V_version
T@"NSArray",&,N,V_references
TC,N,V_atomBehavior
TQ,N,V_atomType
T@"NSData",&,N,V_value
atoms
setAtoms:
_atoms
T@"NSArray",&,N,V_atoms
dataForToken:
copyBytes:length:isNull:forToken:
backingStore
readerForProxy:
structInstance
copyData:forField:inStruct:
objectCopy
copySiteIdentifierBytes:length:isNull:
formatVersion
stringForToken:
copyIdentifierBytes:length:isNull:
zoneName
copyZoneNameBytes:length:isNull:
zoneOwnerName
copyZoneOwnerNameBytes:length:isNull:
childProxyCache
structProxyForStructReference:mutable:
structListProxyForListReference:mutable:
copyValueBytes:length:isNull:
bytes
setSiteIdentifierBytes:length:
mutableListInstanceForField:
writerForProxy:
setData:withLength:forList:
setData:withEncoding:forField:inStruct:
copyFromObject:
copyFromReadProxy:
setIdentifierBytes:length:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
setZoneNameBytes:length:
setZoneOwnerNameBytes:length:
copyFromObjectProxy:
setZoneName:
setZoneOwnerName:
appendObject:
enumerateObjectsUsingBlock:
appendProxy:
enumerate:
setAtomBehavior:withValidation:
raise:format:
setValueBytes:length:
initWithSiteIdentifier:clockValue:modifier:unordered:
clockValue
copyFromTimestamp:
initWithZoneName:ownerName:
initWithData:zoneID:
zoneID
ownerName
copyFromLocation:
initWithLocation:timestamp:type:
reference
copyFromReference:
appendString:
topLevelIndexForStruct:
enumerateColumn:includingRoot:shallow:withBlock:
generateSchema
configureColumnsWithRootColumn:
structReferenceIndexForReference:
listColumnIndexForReference:
valueColumnIndexForField:
offsetForField:inStruct:
referenceIsNull:inStruct:
getBytes:range:
fixedSizeForStruct:
lengthForList:
setData:error:
rootStructWithType:
referencedStructForReference:inStruct:
referencedListForReference:inStruct:
referencedStructAtIndex:inList:
copyData:forList:
resetBytesInRange:
replaceBytesInRange:withBytes:
initWithBytes:length:encoding:
replaceBytesInRange:withBytes:length:
appendData:
beginRootStructWithType:
beginReferencedStructForReference:inStruct:
beginReferencedListForReference:inStruct:
beginAppendedListStructInList:
commitStruct:
flush
pendingPageToFieldInCKXStructInstance
pendingPageToListInstance
initWithName:zoneID:
dataUsingEncoding:
initWithData:encoding:
isEqual:
hash
stringWithCapacity:
appendFormat:
copyWithZone:
initWithName:
name
isEqualToLocation:
description
setZoneID:
_zoneID
T@"CKRecordZoneID",&,N,V_zoneID
T@"NSString",R,N
initWithLocation:
isEqualToReference:
T@"CKAtomLocation",&,N,V_location
T@"CKDistributedTimestamp",&,N,V_timestamp
setDefaultValuesForStruct:withRootColumn:atOffset:withSchema:orcHelpers:
initWithBinding:data:formatVersion:optionsByReaderWriterClass:error:
initWriterWithBinding:version:
writeUsingBlock:
finishWriting
_setupBackingStoreForReadingWithError:
stringWithFormat:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
readerWriterStore
dataWithoutHeader:
cacheScope
proxyForStructToken:withCKXStructInstance:mutable:cacheScope:
headerForData:
header
isWriting
topLevelReadProxy
topLevelWriteProxy
setTopLevelWriteProxy:
reset
proxyWithListInstance:mutable:cacheScope:
proxyCache
proxyForClass:withScope:
associateWithBackingStore:
associateWithStructInstance:
associateWithListInstance:
setCacheScope:
putBackAllProxiesWithScope:
isMutable
committed
reader
writer
data:withHeaderForVersion:
initWithBinding:data:error:
initWithBinding:formatVersion:writerBlock:
writerIdentity
readUsingBlock:
structProxyForStructReference:inCKXStructInstance:mutable:
structListProxyForListReference:inCKXStructInstance:mutable:
appendedStructProxyForListInstance:
structProxyForListInstance:atIndex:
proxyScope:
setReaderWriterStore:
setProxyCache:
setTopLevelReadProxy:
setHeader:
_header
_readerWriterStore
_proxyCache
_cacheScope
_topLevelReadProxy
_topLevelWriteProxy
T@"CKXVersionedReaderWriterStore",&,N,V_readerWriterStore
T@"CKXProxyCache",&,N,V_proxyCache
TQ,N,V_cacheScope
T@"CKXProxyBase<CKXReadStructProxy>",&,N,V_topLevelReadProxy
T@"CKXProxyBase<CKXWriteStructProxy>",&,N,V_topLevelWriteProxy
T{?=C{?=CC}},N,V_header
T@"NSData",R,N,V_data
TB,R,N
TC,R,N
subdataWithRange:
dataWithBytes:length:
createHeaderDataForFormatVersion:
mutableCopy
enumerateRangesUsingBlock:
indexAtIndex:
initWithBatchSize:
batchSize
setBatchSize:
_batchSize
TQ,N,V_batchSize
helpers
options
createRowReaderForStruct:
loadBatchWithRow:forStruct:
addIndex:
createReaderIfNecessaryWithError:
structReferenceColumnForReference:
offsetInCurrentBatchForRow:forStruct:
listColumnForReference:
valueColumnForField:
rowsForStructColumn:
rootColumnForStruct:
structColumnForStruct:
_reader
_structToReaderBatchPair
_rowsForTopLevelContainerStructs
_helpers
_options
T@"<CKXORCHelpers>",R,N,V_helpers
T@"CKXORCReaderOptions",R,N,V_options
batchCommitMarginPercentage
setBatchCommitMarginPercentage:
batchResizeIncrement
setBatchResizeIncrement:
compressionBlockSize
setCompressionBlockSize:
compressionKind
setCompressionKind:
stripeSize
setStripeSize:
testRowsInterspersedWithNulls
setTestRowsInterspersedWithNulls:
_testRowsInterspersedWithNulls
_batchCommitMarginPercentage
_batchResizeIncrement
_compressionBlockSize
_compressionKind
_stripeSize
Td,N,V_batchCommitMarginPercentage
TQ,N,V_batchResizeIncrement
TQ,N,V_compressionBlockSize
Tq,N,V_compressionKind
TQ,N,V_stripeSize
TB,N,V_testRowsInterspersedWithNulls
cStringUsingEncoding:
rootColumn
updateNumberOfElementsForCurrentBatch
enumerateAllColumnsWithBlock:
resetColumnNulls:inRange:
startingRowForCurrentBatch
setStartingRowForCurrentBatch:
commitBatch
growCurrentBatchToIncludeBatchOffset:
growCurrentBatchToIncludeRow:
offsetInCurrentBatchForRow:
expandColumn:includingBatchOffset:
rootStructToken
expandColumn:includingRow:
createWriter
setRootStructToken:
appendRowForStruct:
commitBatchIfNeeded
_writer
_outputStream
_currentBatch
_uncommittedStructs
_rootStructToken
_startingRowForCurrentBatch
T@"CKXORCWriterOptions",R,N,V_options
TQ,N,V_rootStructToken
TQ,N,V_startingRowForCurrentBatch
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
dataWithCapacity:
copy
_init
commit
cached
scope
setScope:
_committed
_backingStore
_scope
T@"CKXBackingStore",R,W,N,V_backingStore
Tq,N,V_scope
TB,R,N,V_committed
initWithProxy:
initWithBytes:length:
_childProxyCache
_structInstance
T{?=QQQ},R,N,V_structInstance
T@"CKXStructProxyChildCache",R,N,V_childProxyCache
fieldTokenToListInstance
listInstance
_listInstance
T{?=QQQQ},R,N,V_listInstance
proxyAtIndex:
index
setIndex:
appendWithProxyBlock:
_index
Tq,N,V_index
proxy
fieldToProxy
_proxy
T@"CKXStructProxyBase",R,W,N,V_proxy
strongToStrongObjectsMapTable
cachedProxies
objectForKey:
lastObject
removeLastObject
totalProxiesCreated
setTotalProxiesCreated:
scopedProxies
setObject:forKey:
totalProxiesReclaimed
setTotalProxiesReclaimed:
_putBackProxyWithoutCheckingScope:
lastIndex
removeObjectsAtIndexes:
keyEnumerator
countByEnumeratingWithState:objects:count:
compare:
sortedArrayUsingComparator:
numberWithInteger:
integerValue
numberWithLong:
setObject:forKeyedSubscript:
enumerateKeysAndObjectsUsingBlock:
debugDescription
setCachedProxies:
setScopedProxies:
_cachedProxies
_scopedProxies
_totalProxiesCreated
_totalProxiesReclaimed
T@"NSMapTable",&,N,V_cachedProxies
T@"NSMutableArray",&,N,V_scopedProxies
Tq,N,V_totalProxiesCreated
Tq,N,V_totalProxiesReclaimed
initWithIncludedIndexes:
initWithIncludedLocation:
includedIndexes
setIncludedIndexes:
includedLocation
setIncludedLocation:
_includedIndexes
_includedLocation
T@"NSIndexSet",&,N,V_includedIndexes
T@"CKAtomLocation",&,N,V_includedLocation
initWithFormatVersion:optionsByReaderWriterClass:enumerationOptions:location:data:error:
initWriterWithAtomLocation:
initWriterWithAtomLocation:version:
enumerationOptions
containsIndex:
descriptionWithAtomValueParser:
numberOfAtoms
enumerateAtomsWithOptions:usingBlock:
initWithData:
initWithData:error:
initWithAtomBatch:enumerationOptions:error:
initWriter
appendAtomWithBlock:
setBackingStore:
setEnumerationOptions:
_enumerationOptions
T@"CKXBackingStore",&,N,V_backingStore
T@"CKAtomBatchEnumerationOptions",&,N,V_enumerationOptions
T{?=CC},R,N
T@"NSData",R,N
Tq,R,N
ckCompare:
_initWithSiteIdentifier:clockValue:modifier:unordered:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeIntForKey:
decodeBoolForKey:
encodeObject:forKey:
encodeInteger:forKey:
encodeInt:forKey:
encodeBool:forKey:
compareToTimestamp:
numberWithUnsignedChar:
numberWithUnsignedInteger:
numberWithBool:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithSiteIdentifier:clockValue:
_clockValue
T@"NSData",R,N,V_siteIdentifier
TQ,R,N,V_clockValue
TC,R,N,V_modifier
TB,R,N,V_unordered
addTimestamp:
timestamps
decodeArrayOfObjectsOfClass:forKey:
unorderedTimestampSet
arrayWithArray:
setWithArray:
allObjects
timestampCount
timestampArray
timestampAtIndex:
timestampForSiteIdentifier:
indexForTimestampForSiteIdentifier:
unorderedTimestamps
isSubsetOfSet:
sequentialSiteIdentifiers
_isGreaterThanOrEqualToTimestamp:
minusSet:
initWithTimestamps:
initWithFrom:to:
containsObject:
setObject:atIndexedSubscript:
intersectSet:
compareToTimestampVector:
string
initWithIdentifiers:
identifierCount
identifierAtIndex:
identifierForSiteIdentifier:
identifiers
unorderedIdentifiers
rangeWithSubtractedTimestamp:
addIdentifier:
mergeFrom:
minimalTimestampWith:
setTimestampArray:
setUnorderedTimestampSet:
_timestampArray
_unorderedTimestampSet
T@"NSMutableArray",&,N,V_timestampArray
T@"NSMutableSet",&,N,V_unorderedTimestampSet
isEqualToSet:
from
includes:
_from
T@"CKDistributedTimestampVector",R,N,V_from
T@"CKDistributedTimestampVector",R,N,V_to
@16@0:8
q16@0:8
Q16@0:8
Q36@0:8Q16r*24B32
Q32@0:8Q16Q24
Q32@0:8q16Q24
q24@0:8Q16
Q24@0:8Q16
B24@0:8Q16
v24@0:8Q16
v16@0:8
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
{unordered_map<unsigned long, CKXStructProperties, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, CKXStructProperties>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, CKXStructProperties>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXStructProperties>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXStructProperties>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, CKXStructProperties>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXStructProperties>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXStructProperties>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{unordered_map<unsigned long, std::vector<unsigned long>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::vector<unsigned long>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::vector<unsigned long>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::vector<unsigned long>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::vector<unsigned long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::vector<unsigned long>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::vector<unsigned long>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{unordered_map<unsigned long, CKXFieldProperties, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, CKXFieldProperties>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, CKXFieldProperties>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXFieldProperties>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXFieldProperties>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, CKXFieldProperties>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXFieldProperties>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXFieldProperties>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@24@0:8@16
v24@0:8@16
@"CKXSchema"
@"NSData"
@24@0:8q16
@"NSMutableArray"
B20@0:8C16
@32@0:8@16@24
@20@0:8C16
@"CKXUncompressedReader"
@"CKXUncompressedWriter"
@"CKXORCReader"
@"CKXORCWriter"
@"NSObject<CKXBinding>"
@"NSDictionary"
Q24@0:8#16
#24@0:8Q16
@"CKXSchema"16@0:8
@"<CKXORCHelpers>"16@0:8
{?="timestamp"Q"timestamp_identifier"Q"timestamp_modifier"Q"timestamp_clock"Q"timestamp_unordered"Q"location"Q"location_identifier"Q"location_zone_name"Q"location_zone_owner_name"Q"reference"Q"reference_type"Q"reference_location"Q"reference_timestamp"Q"atom"Q"atom_version"Q"atom_location"Q"atom_timestamp"Q"atom_references"Q"atom_atom_behavior"Q"atom_atom_type"Q"atom_value"Q"atomBatch"Q"atomBatch_atoms"Q}
C16@0:8
v20@0:8C16
v24@0:8q16
B16@0:8
v20@0:8B16
@"CKXAtomLocation"
@"CKXDistributedTimestamp"
@"NSArray"
v40@0:8^v16^Q24^B32
v24@0:8@"NSObject"16
v24@0:8@"CKXStructProxyBase<CKXReadStructProxy>"16
v32@0:8^v16Q24
v24@0:8C16B20
v24@0:8^v16
@"NSString"16@0:8
B32@0:8@16^@24
{?=QQQ}24@0:8Q16
{?=QQQ}48@0:8Q16{?=QQQ}24
{?=QQQQ}48@0:8Q16{?=QQQ}24
{?=QQQ}56@0:8q16{?=QQQQ}24
B48@0:8Q16{?=QQQ}24
q48@0:8{?=QQQQ}16
v56@0:8^v16Q24{?=QQQ}32
v56@0:8^v16{?=QQQQ}24
B32@0:8@"NSData"16^@24
{?=QQQ}48@0:8{?=QQQQ}16
v64@0:8^v16r*24Q32{?=QQQ}40
v64@0:8^v16Q24{?=QQQQ}32
v40@0:8{?=QQQ}16
@"NSData"16@0:8
{unordered_map<unsigned long, std::pair<CKXStructInstance, unsigned long>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::pair<CKXStructInstance, unsigned long>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{unordered_map<unsigned long, CKXListInstance, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, CKXListInstance>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, CKXListInstance>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXListInstance>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXListInstance>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, CKXListInstance>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXListInstance>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXListInstance>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@24@0:8^{_NSZone=}16
B24@0:8@16
@"CKRecordZoneID"
@36@0:8@16@24C32
@"CKAtomLocation"
@"CKDistributedTimestamp"
v40@0:8^v16B24B28@?32
v56@0:8Q16^v24Q32@40@48
@40@0:8@16@24^@32
@36@0:8@16C24@?28
@28@0:8@16C24
@52@0:8@16@24C32@36^@44
B24@0:8^@16
{?=C{?=CC}}16@0:8
{?=CC}16@0:8
v24@0:8@?16
@52@0:8Q16{?=QQQ}24B48
@48@0:8{?=QQQQ}16
@56@0:8{?=QQQQ}16q48
@60@0:8Q16{?=QQQ}24B48q52
@60@0:8{?=QQQQ}16B48q52
v19@0:8{?=C{?=CC}}16
{?="formatVersion"C"writerIdentity"{?="writerCode"C"writerVersion"C}}
@"CKXVersionedReaderWriterStore"
@"CKXProxyCache"
@"CKXProxyBase<CKXReadStructProxy>"
@"CKXProxyBase<CKXWriteStructProxy>"
{?=C{?=CC}}24@0:8@16
@24@0:8Q16
@40@0:8@16@24@32
B32@0:8Q16Q24
^v24@0:8Q16
{unique_ptr<orc::Reader, std::default_delete<orc::Reader>>="__ptr_"{__compressed_pair<orc::Reader *, std::default_delete<orc::Reader>>="__value_"^{Reader}}}
{unordered_map<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{unordered_map<unsigned long, NSIndexSet *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, NSIndexSet *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, NSIndexSet *>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSIndexSet *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSIndexSet *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, NSIndexSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSIndexSet *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSIndexSet *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@"<CKXORCHelpers>"
@"CKXORCReaderOptions"
d16@0:8
v24@0:8d16
v40@0:8^v16{_NSRange=QQ}24
^v16@0:8
{unique_ptr<orc::Writer, std::default_delete<orc::Writer>>="__ptr_"{__compressed_pair<orc::Writer *, std::default_delete<orc::Writer>>="__value_"^{Writer}}}
{unique_ptr<orc::OutputStream, std::default_delete<orc::OutputStream>>="__ptr_"{__compressed_pair<orc::OutputStream *, std::default_delete<orc::OutputStream>>="__value_"^{OutputStream}}}
{unique_ptr<orc::ColumnVectorBatch, std::default_delete<orc::ColumnVectorBatch>>="__ptr_"{__compressed_pair<orc::ColumnVectorBatch *, std::default_delete<orc::ColumnVectorBatch>>="__value_"^{ColumnVectorBatch}}}
{set<CKXStructInstance, std::less<CKXStructInstance>, std::allocator<CKXStructInstance>>="__tree_"{__tree<CKXStructInstance, std::less<CKXStructInstance>, std::allocator<CKXStructInstance>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<CKXStructInstance, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::less<CKXStructInstance>>="__value_"Q}}}
@"CKXORCWriterOptions"
@"CKXBackingStore"
v48@0:8^v16^Q24^B32Q40
{?=QQQ}16@0:8
@"CKXStructProxyChildCache"
{?="structToken"Q"page"Q"offset"Q}
{?=QQQQ}24@0:8Q16
v48@0:8{?=QQQQ}16
{?=QQQQ}16@0:8
{?="structToken"Q"listReferenceToken"Q"page"Q"offset"Q}
@28@0:8Q16B24
{unordered_map<unsigned long, CKXProxyBase *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, CKXProxyBase *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, CKXProxyBase *>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXProxyBase *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXProxyBase *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, CKXProxyBase *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXProxyBase *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXProxyBase *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@"CKXStructProxyBase"
@32@0:8#16q24
@"NSMapTable"
@"NSIndexSet"
@32@0:8@16^@24
@60@0:8C16@20@28@36@44^@52
v32@0:8@16@?24
@24@0:8@?16
@"CKAtomBatchEnumerationOptions"
q24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16Q24
@40@0:8@16Q24C32B36
@"NSMutableSet"
@"CKDistributedTimestampVector"
N3orc19SeekableInputStreamE
N6google8protobuf2io19ZeroCopyInputStreamE
N3orc24SeekableArrayInputStreamE
N3orc23SeekableFileInputStreamE
N3orc16PositionRecorderE
N3orc20BufferedOutputStreamE
#8Mbw
(6DT
*8FV
*8FTbp
+9GUc
*8N3orc5proto17IntegerStatisticsE
N3orc5proto16DoubleStatisticsE
N3orc5proto16StringStatisticsE
N3orc5proto16BucketStatisticsE
N3orc5proto17DecimalStatisticsE
N3orc5proto14DateStatisticsE
N3orc5proto19TimestampStatisticsE
N3orc5proto16BinaryStatisticsE
N3orc5proto20CollectionStatisticsE
N3orc5proto16ColumnStatisticsE
N3orc5proto13RowIndexEntryE
N3orc5proto8RowIndexE
N3orc5proto11BloomFilterE
N3orc5proto16BloomFilterIndexE
N3orc5proto6StreamE
N3orc5proto14ColumnEncodingE
N3orc5proto23StripeEncryptionVariantE
N3orc5proto12StripeFooterE
N3orc5proto10StringPairE
N3orc5proto4TypeE
N3orc5proto17StripeInformationE
N3orc5proto16UserMetadataItemE
N3orc5proto16StripeStatisticsE
N3orc5proto8MetadataE
N3orc5proto8DataMaskE
N3orc5proto13EncryptionKeyE
N3orc5proto17EncryptionVariantE
N3orc5proto10EncryptionE
N3orc5proto6FooterE
N3orc5proto10PostScriptE
N3orc5proto8FileTailE
N6google8protobuf8internal29InternalMetadataWithArenaBaseINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_29InternalMetadataWithArenaLiteEE9ContainerE
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
N3orc11BloomFilterE
N3orc15BloomFilterImplE
N3orc14ByteRleEncoderE
N3orc18ByteRleEncoderImplE
N3orc21BooleanRleEncoderImplE
N3orc14ByteRleDecoderE
N3orc18ByteRleDecoderImplE
N3orc21BooleanRleDecoderImplE
?FMT[b
]xEc
N3orc13StripeStreamsE
N3orc12ColumnReaderE
N3orc19BooleanColumnReaderE
N3orc16ByteColumnReaderE
N3orc19IntegerColumnReaderE
N3orc21TimestampColumnReaderE
N3orc18DoubleColumnReaderE
N3orc28StringDictionaryColumnReaderE
N3orc24StringDirectColumnReaderE
N3orc18StructColumnReaderE
N3orc16ListColumnReaderE
N3orc15MapColumnReaderE
N3orc17UnionColumnReaderE
N3orc21Decimal64ColumnReaderE
N3orc22Decimal128ColumnReaderE
N3orc25DecimalHive11ColumnReaderE
NSt3__120__shared_ptr_pointerIPN3orc16StringDictionaryENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN3orc16StringDictionaryEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__114default_deleteIN3orc16StringDictionaryEEE
 )2:DLT\dlz
N3orc24RowIndexPositionRecorderE
N3orc14StreamsFactoryE
N3orc18StreamsFactoryImplE
N3orc12ColumnWriterE
N3orc18StructColumnWriterE
N3orc19IntegerColumnWriterE
N3orc16ByteColumnWriterE
N3orc19BooleanColumnWriterE
N3orc18DoubleColumnWriterE
N3orc18StringColumnWriterE
N3orc16CharColumnWriterE
N3orc19VarCharColumnWriterE
N3orc18BinaryColumnWriterE
N3orc21TimestampColumnWriterE
N3orc16DateColumnWriterE
N3orc21Decimal64ColumnWriterE
N3orc22Decimal128ColumnWriterE
N3orc16ListColumnWriterE
N3orc15MapColumnWriterE
N3orc17UnionColumnWriterE
*18?1
GN3orc21CompressionStreamBaseE
N3orc17CompressionStreamE
N3orc21ZlibCompressionStreamE
N3orc23ZlibDecompressionStreamE
N3orc24BlockDecompressionStreamE
N3orc25SnappyDecompressionStreamE
N3orc22LzoDecompressionStreamE
N3orc22Lz4DecompressionStreamE
N3orc22BlockCompressionStreamE
N3orc21ZSTDCompressionStreamE
N3orc23ZSTDDecompressionStreamE
NSt3__120__shared_ptr_pointerIP11ZSTD_CCtx_sPFmS2_ENS_9allocatorIS1_EEEE
PFmP11ZSTD_CCtx_sE
FmP11ZSTD_CCtx_sE
NSt3__120__shared_ptr_pointerIP11ZSTD_DCtx_sPFmS2_ENS_9allocatorIS1_EEEE
PFmP11ZSTD_DCtx_sE
FmP11ZSTD_DCtx_sE
N3orc17NotImplementedYetE
N3orc10ParseErrorE
N3orc15InvalidArgumentE
]xEc
N3orc23MalformedInputExceptionE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
N3orc10MemoryPoolE
N3orc14MemoryPoolImplE
N3orc10DataBufferIcEE
N3orc10DataBufferIPcEE
N3orc10DataBufferIdEE
N3orc10DataBufferIxEE
N3orc10DataBufferIyEE
N3orc10DataBufferIhEE
N3orc10DataBufferINS_6Int128EEE
N3orc15FileInputStreamE
N3orc12OutputStreamE
N3orc13ReaderOptionsE
N3orc16RowReaderOptionsE
N3orc9RowReaderE
N3orc13RowReaderImplE
N3orc6ReaderE
N3orc10ReaderImplE
N3orc11InputStreamE
NSt3__120__shared_ptr_pointerIPN3orc12FileContentsENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN3orc12FileContentsEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__114default_deleteIN3orc12FileContentsEEE
NSt3__120__shared_ptr_pointerIPN3orc11BloomFilterENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN3orc11BloomFilterEEE
N3orc12RleEncoderV1E
N3orc12RleDecoderV1E
 (08@
  ((((((((0000000088888888@@@@@@@@
        ((((((((0000000088888888@@@@@@@@
N3orc12RleDecoderV2E
?ffffff
N3orc12RleEncoderV2E
N3orc10RleEncoderE
N3orc10RleDecoderE
N3orc16ColumnStatisticsE
N3orc23MutableColumnStatisticsE
N3orc20ColumnStatisticsImplE
N3orc22BinaryColumnStatisticsE
N3orc26BinaryColumnStatisticsImplE
N3orc23BooleanColumnStatisticsE
N3orc27BooleanColumnStatisticsImplE
N3orc20DateColumnStatisticsE
N3orc24DateColumnStatisticsImplE
N3orc23DecimalColumnStatisticsE
N3orc27DecimalColumnStatisticsImplE
N3orc22DoubleColumnStatisticsE
N3orc26DoubleColumnStatisticsImplE
N3orc23IntegerColumnStatisticsE
N3orc27IntegerColumnStatisticsImplE
N3orc22StringColumnStatisticsE
N3orc26StringColumnStatisticsImplE
N3orc25TimestampColumnStatisticsE
N3orc29TimestampColumnStatisticsImplE
N3orc10StatisticsE
N3orc14StatisticsImplE
N3orc16StripeStatisticsE
N3orc20StripeStatisticsImplE
NSt3__120__shared_ptr_pointerIPN3orc16ColumnStatisticsENS_10shared_ptrIKS2_E27__shared_ptr_default_deleteIS5_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIKN3orc16ColumnStatisticsEE27__shared_ptr_default_deleteIS3_S2_EE
NSt3__114default_deleteIN3orc16ColumnStatisticsEEE
N3orc17StreamInformationE
N3orc21StreamInformationImplE
N3orc17StripeInformationE
N3orc21StripeInformationImplE
N3orc17StripeStreamsImplE
N3orc10FutureRuleE
N3orc14FutureRuleImplE
/usr/share/zoneinfo
N3orc13TimezoneErrorE
N3orc13VersionParserE
N3orc14Version1ParserE
N3orc14Version2ParserE
N3orc8TimezoneE
N3orc12TimezoneImplE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__120__shared_ptr_pointerIPN3orc14FutureRuleImplENS_10shared_ptrINS1_10FutureRuleEE27__shared_ptr_default_deleteIS5_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN3orc10FutureRuleEE27__shared_ptr_default_deleteIS2_NS1_14FutureRuleImplEEE
NSt3__114default_deleteIN3orc14FutureRuleImplEEE
NSt3__120__shared_ptr_pointerIPN3orc12TimezoneImplENS_10shared_ptrINS1_8TimezoneEE27__shared_ptr_default_deleteIS5_S2_EENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN3orc8TimezoneEE27__shared_ptr_default_deleteIS2_NS1_12TimezoneImplEEE
NSt3__114default_deleteIN3orc12TimezoneImplEEE
N3orc4TypeE
N3orc8TypeImplE
N3orc17ColumnVectorBatchE
N3orc15LongVectorBatchE
N3orc17DoubleVectorBatchE
N3orc24EncodedStringVectorBatchE
N3orc17StringVectorBatchE
N3orc17StructVectorBatchE
N3orc15ListVectorBatchE
N3orc14MapVectorBatchE
N3orc16UnionVectorBatchE
N3orc20Decimal64VectorBatchE
N3orc21Decimal128VectorBatchE
N3orc20TimestampVectorBatchE
N3orc13WriterOptionsE
N3orc6WriterE
N3orc10WriterImplE
NSt3__121__basic_string_commonILb1EEE
  !!""##$$$$%%%%&&&&&&&&''''''''(((((((((((((((())))))))))))))))********************************
  !!""##$$$$%%%%&&&&&&&&''''''''(((((((((((((((())))))))))))))))********************************
 n;^
Qkkbal
i]Wb
9a&g
MGiI
wn>Jj
#.zf
+o*7
Z* ,
H$6t
_~6
52F*
#jT$
^6o}
[-&LMb#{'
w+OQvr
R1h58
SKyu
)\ZEo^m/
ru&o
i8P/_
?(3w
H*0"ZOW
{kHw
)T`D
!AxU
l!;b
:1X:
y9*O
kM`~
Vc0a
dQy/
lDa>
7~8A
C-Yn
gqr<
$/o|
f-=v
mj>zjZ
l6qnk
IiGM>nw
1A26b
i91k
ewh/?y
*5KS
6~_'
F*.f
1wsHp
M8MF
Pe6^
#bML"
`F(>
vQO+t
[h1R
XsBI
hPU3
^oEZ_
2%k_
w3Xc
/P8i
OZw3(?
Z"0*
fP~V
D`T
^GP~
b;!l
V_:X1:
NJ2"v
O*9y]
fu`z
/yQA
&]|v


N6snappy6SourceE
N6snappy15ByteArraySourceE
N6google8protobuf2io20ZeroCopyOutputStreamE
N6google8protobuf2io17ArrayOutputStreamE
N6google8protobuf2io18StringOutputStreamE
N6google8protobuf11MessageLiteE
N6google8protobuf14FatalExceptionE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
@(#)PROGRAM:CloudKitDistributedSync  PROJECT:CloudKit-1930.13
@24CKXORCMemoryOutputStream
23CKXORCMemoryInputStream
4x
Can't backup that much!
SeekableArrayInputStream 
can't backup negative distances
can't backup unless we just called Next
can't backup that far
seek too far
 from 
 for 
WriteAliasedRaw is not supported.
BufferedOutputStream 
Failed to allocate buffer.
/Library/Caches/com.apple.xbs/Binaries/CloudKitCode_Sim/install/TempContent/Objects/CloudKit.build/ORC.build/DerivedSources/cmake/c++/src/orc_proto.pb.cc
orc.proto.IntegerStatistics
orc.proto.DoubleStatistics
orc.proto.StringStatistics
orc.proto.BucketStatistics
orc.proto.DecimalStatistics
orc.proto.DateStatistics
orc.proto.TimestampStatistics
orc.proto.BinaryStatistics
orc.proto.CollectionStatistics
orc.proto.ColumnStatistics
orc.proto.RowIndexEntry
orc.proto.RowIndex
orc.proto.BloomFilter
orc.proto.BloomFilterIndex
orc.proto.Stream
orc.proto.ColumnEncoding
orc.proto.StripeEncryptionVariant
orc.proto.StripeFooter
orc.proto.StringPair
orc.proto.Type
orc.proto.StripeInformation
orc.proto.UserMetadataItem
orc.proto.StripeStatistics
orc.proto.Metadata
orc.proto.DataMask
orc.proto.EncryptionKey
orc.proto.EncryptionVariant
orc.proto.Encryption
orc.proto.Footer
orc.proto.PostScript
orc.proto.FileTail
expectedEntries should be > 0
False positive probability should be > 0.0 & < 1.0
numBits should be multiple of 64!
bad position
bad read in nextBuffer
DATA stream not found in Boolean column
DATA stream not found in Byte column
DATA stream not found in Integer column
DATA stream not found in Timestamp column
SECONDARY stream not found in Timestamp column
DATA stream not found in Double column
bad read in readFully
Corrupt dictionary blob in StringDictionaryColumn
Entry index out of range in StringDictionaryColumn
LENGTH stream not found in StringDirectColumn
DATA stream not found in StringDirectColumn
failed to read in StringDirectColumnReader.next
Unknown encoding for StructColumnReader
LENGTH stream not found in List column
LENGTH stream not found in Map column
LENGTH stream not found in Union column
DATA stream not found in Decimal64Column
SECONDARY stream not found in Decimal64Column
Hive 0.11 decimal was more than 38 digits.
Warning: 
Hive 0.11 decimal with more than 38 digits 
replaced by NULL.
buildReader unhandled string encoding
buildReader unhandled type
Unknown encoding in convertRleVersion
bad read in DoubleColumnReader::next()
Read past end of stream in Decimal64ColumnReader 
Decimal scale out of range
unordered_map::at: key not found
Invalid param
Failed to write bloom filter stream.
Failed to cast to StructVectorBatch
Failed to cast to LongVectorBatch
Failed to cast to IntegerColumnStatisticsImpl
Failed to cast to BooleanColumnStatisticsImpl
Failed to cast to DoubleVectorBatch
Failed to cast to DoubleColumnStatisticsImpl
Failed to cast to StringVectorBatch
Failed to cast to StringColumnStatisticsImpl
Failed to cast to BinaryColumnStatisticsImpl
Failed to cast to TimestampVectorBatch
Failed to cast to TimestampColumnStatisticsImpl
Failed to cast to DateColumnStatisticsImpl
Failed to cast to Decimal64VectorBatch
Failed to cast to DecimalColumnStatisticsImpl
Failed to cast to Decimal128VectorBatch
Failed to cast to ListVectorBatch
Failed to cast to MapVectorBatch
Failed to cast to UnionVectorBatch
Decimal precision more than 38 is not supported
Type is not supported yet for creating ColumnWriter.
Failed to flush compression buffer.
Failed to get next output buffer from output stream.
Failed to reset inflate.
Failed to deflate input data.
ZlibCompressionStream
1.2.11
Error while calling deflateInit2() for zlib.
Memory error from inflateInit2
Version error from inflateInit2
Stream error from inflateInit2
Unknown error from inflateInit2
Error in ~ZlibDecompressionStream() 
Bad inflateReset in ZlibDecompressionStream::Next
Buffer error in ZlibDecompressionStream::Next
Data error in ZlibDecompressionStream::Next
Stream error in ZlibDecompressionStream::Next
Unknown error in ZlibDecompressionStream::Next
Unknown compression state in ZlibDecompressionStream::Next
Backup without previous Next in ZlibDecompressionStream
Bad skip in ZlibDecompressionStream::seek
zlib(
Backup without previous Next in 
Bad skip in 
SnappyDecompressionStream choked on corrupt input
Snappy length exceeds block size
 - failed to decompress
Write to an out-of-bound place!
Error while calling ZSTD_createCCtx() for zstd.
Error while calling ZSTD_createDCtx() for zstd.
compression codec
Unknown compression codec 
Read past EOF in ZlibDecompressionStream::readBuffer
read past EOF
snappy(
lzo(
lz4(
ZstdCompressionStream
zstd(
Can't build Int128 with 5 ints.
Unsupported length for building Int128
Division by 0 in Int128
Int128 too large to convert to long
Invalid LZO command 
MalformedInputException at 
MalformedInputException 
Can't open 
Can't stat 
Buffer is null
Bad read of 
Short read of 
Unknown compression type
Invalid column selected 
 out of 
Invalid type id selected 
Failed to parse the row index
bad StripeFooter from 
Failed to serialize file tail
stripe index out of range
key not found
Malformed RowIndex stream meta in stripe 
: streamOffset=
, streamLength=
, stripeOffset=
, stripeIndexLength=
Failed to parse RowIndex from stripe footer
No stripe statistics in file
column index out of range
Invalid Metadata length: fileLength=
, metadataLength=
, footerLength=
, postscriptLength=
Failed to parse the metadata
Warning: ORC file 
 was written in an unknown format version 
Malformed StripeInformation at stripe index 
: fileLength=
, StripeInfo=(offset=
, indexLength=
, dataLength=
Invalid ORC postscript length
Not an ORC file
Invalid ORC postscript length: 
, file length = 
Failed to parse the postscript from 
Footer is corrupt: no types found
Footer is corrupt: malformed link from type 
 to 
Footer is corrupt: types(
) not exists
Footer is corrupt: subType(
) >= subType(
) in types(
). (
 >= 
Failed to parse the footer from 
Failed to parse the file tail from string
File size too small
Invalid ORC tailSize=
, fileLength=
Illegal stripe index: 
Failed to parse BloomFilterIndex
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
bad read in readByte
Corrupt PATCHED_BASE encoded data (pl==0)!
Corrupt PATCHED_BASE encoded data (patchBitSize + pgw > 64)!
bad read in RleDecoderV2::readByte
Invalid p value: 
, isFixedDelta cannot be false
, currDelta should be zero
currDelta should be equal to initialDelta for fixed delta encoding
Not implemented yet
Not supported type: 
Column has 
 values
 and has null value: 
Data type: Binary
Values: 
Has null: 
Total length: 
Total length: not defined
Total length is not defined.
Data type: Boolean
(true: 
; false: 
(true: not defined; false: not defined)
True and false counts are not defined
False count is not defined.
True count is not defined.
Data type: Date
Minimum: 
Minimum: not defined
Maximum: 
Maximum: not defined
Minimum is not defined.
Maximum is not defined.
Data type: Decimal
Sum: 
Sum: not defined
Sum is not defined.
Data type: Double
Data type: Integer
Data type: String
Minimum is not defined
Maximum is not defined
Total length is not defined
Data type: Timestamp
%Y-%m-%d %H:%M:%S
LowerBound: 
LowerBound is not defined
UpperBound: 
UpperBound is not defined
LowerBound is not defined.
UpperBound is not defined.
Malformed stream meta at stream index 
 in stripe 
, stripeDataLength=
Failed to parse the stripe footer
  Future rule: 
  standard 
  dst 
  start 
  end 
 (dst)
TZDIR
name out of range in variant 
TZif
non-tzfile 
tzfile too short 
 needs 
 and has 
tzfile rule out of range 
 references rule 
Timezone file: 
  Version: 
  Variant 
%F %H:%M:%S
  Transition: 
null
) -> 
julian 
day 
month 
 week 
 day 
 at 
Extra text
name required
missing close '>'
empty string not allowed
missing number
missing transition
missing first .
missing second .
 in '
boolean
tinyint
smallint
bigint
float
double
string
binary
timestamp
array<
void
map<
struct<
uniontype<
decimal(
date
varchar(
char(
Unknown type
not supported yet
Illegal LIST type that doesn't contain one subtype
Illegal MAP type that doesn't contain two subtypes
Illegal UNION type that doesn't contain any subtypes
Unknown type kind
Invalid type string.
Array type must contain exactly one sub type.
Map type must contain exactly two sub types.
Struct type must contain at least one sub type.
Union type must contain at least one sub type.
Decimal type must specify precision and scale.
array
struct
uniontype
decimal
varchar
char
Unknown type 
Invalid type string. Cannot find closing >
Invalid type string. Cannot find closing )
Unrecognized character.
Long vector <
 of 
Double vector <
Encoded string vector <
Byte vector <
Struct vector <
List vector <
 with 
Map vector <
Union vector <
; with 
Decimal64 vector  with 
Decimal128 vector  with 
Timestamp vector <
Unsupported file version specified.
Failed to write stripe footer.
Failed to write metadata.
Failed to write file footer.
Failed to write post script.
Unknown type.
incorrect header check
unknown compression method
invalid window size
unknown header flags set
header crc mismatch
invalid block type
invalid stored block lengths
too many length or distance symbols
invalid code lengths set
invalid bit length repeat
invalid code -- missing end-of-block
invalid literal/lengths set
invalid distances set
invalid literal/length code
invalid distance code
invalid distance too far back
incorrect data check
incorrect length check
need dictionary
stream end
file error
stream error
data error
insufficient memory
buffer error
incompatible version
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/arena.cc
CHECK failed: (min_bytes) <= (std::numeric_limits<size_t>::max() - kBlockHeaderSize): 
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/generated_message_util.cc
Not implemented field number 
CHECK failed: (scc->visit_status.load(std::memory_order_relaxed)) == (SCCInfoBase::kRunning): 
 with type 
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/io/coded_stream.cc
A protocol message was rejected because it was too big (more than 
 bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
CHECK failed: (buffer_size) >= (0): 
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/io/zero_copy_stream.cc
This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/io/zero_copy_stream_impl_lite.cc
CHECK failed: (last_returned_size_) > (0): 
BackUp() can only be called after a successful Next().
CHECK failed: (count) <= (last_returned_size_): 
CHECK failed: (count) >= (0): 
CHECK failed: target_ != NULL: 
Cannot allocate buffer larger than kint32max for 
StringOutputStream.
CHECK failed: (count) <= (target_->size()): 
(cannot determine missing fields for lite message)
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/message_lite.cc
Exceeded maximum protobuf size of 2GB: 
CHECK failed: !coded_out.HadError(): 
parse
Can't 
 message of type "
" because it is missing required fields: 
CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): 
 was modified concurrently during serialization.
CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): 
Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of 
This shouldn't be called if all the sizes are equal.
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/stubs/common.cc
This program requires version 
 of the Protocol Buffer runtime library, but the installed version is 
.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
This program was compiled against version 
 of the Protocol Buffer runtime library, which is not compatible with the installed version (
).  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
%d.%d.%d
INFO
WARNING
ERROR
FATAL
[libprotobuf %s %s:%d] %s
/Library/Caches/com.apple.xbs/Sources/CloudKitCode_Sim/CloudKit-1930.13/CKDistributedSyncDependencies/orc-dependencies/protobuf-3.6.1/src/google/protobuf/wire_format_lite.cc
CHECK failed: (value.size()) <= (kint32max): 
CKXSchema.mm
Token not found
Can't define field for top-level container struct
Can't define struct reference for top-level container struct
Invalid list type
Can't define non-struct list for top-level container struct
Invalid field type
Index out of bounds
CKDSErrorDomain
CKAtomSerialization.mm
Unexpected class %@
Unexpected struct token %ld
Object needs to be of type %@
Proxy needs to be of type %@
Non-zero-length NSData has empty bytes
v32@?0@"CKXAtomReference"8Q16^B24
v32@?0@"CKAtomReferenceProxy"8Q16^B24
Atom behavior is internal and should not be set manually
v32@?0@"CKXAtom"8Q16^B24
v32@?0@"CKAtomProxy"8Q16^B24
v8@?0
__location:struct<
identifier:binary,
zone_name:string,
zone_owner_name:string,
__timestamp:struct<
modifier:tinyint,
clock:bigint,
unordered:boolean,
__reference:struct<
type:tinyint,
__location_row:bigint,
__timestamp_row:bigint,
__atom:struct<
version:bigint,
__identifier_row:bigint,
references:array<__reference_row:bigint>,
atom_behavior:tinyint,
atom_type:bigint,
value:binary,
v24@?0^v8Q16
CKXAtomORCSchema.mm
Invalid struct %lu
Invalid field %lu
CKXUncompressedReaderWriter.mm
Invalid field
Invalid location
Field is not a reference
Invalid page count
Invalid struct
Invalid size
Invalid size for data (is %lu, expecting %lu)
Invalid size for page
Invalid offset
Invalid page
%02x
CKXORCUtilities.mm
Unexpected null value column in writer
Unexpected null struct list column in writer
CKXBackingStore.mm
No error found for failed read
Data not present
Backing store already set up for reading
Unexpected atom batch header format
No reader available for atom batch format version %d
Reading not permitted while writing
Reader not found
Writing not permitted while reading
Writer not found
finishWriting needs to be called before any data can be read
Writing not permitted after finishWriting has already been called
Unexpected read error after closing atom batch for writing: %@
Can't get data while still writing; call finishWriting
Invalid struct token
Proxy must be immutable for reading
Proxy must be mutable for writing
Write proxy %@ was retained out of scope and cannot be reused
setData should not be called on the backing store instance
Unexpected version
v32@?0{_NSRange=QQ}8^B24
Index %lu out of range
%@ is unavailable
CKXORCReaderWriter.mm
The ORC reader requires a helper object conforming to CKXORCHelpers
Unexpected atom batch read error: %s
Atom batch read error: %s
Invalid row: %llu/%llu
Incorrect rows loaded: row %llu does not fit in range %llu->llu
Root column not found
Invalid list
Index out of range
Unexpected null struct list column in reader
The ORC writer requires a helper object conforming to CKXORCHelpers
Expected dictionary to be enabled
Expected indexes to be disabled
Previous column capacity %llu unexpectedly greater than batch capacity %llu
Incorrect rows loaded: batch offset %llu does not fit in range %d->%llu
Can't access row (%llu) smaller than the current batch starting row (%llu)
Only suitable for testing
Number of elements in batch exceeds capacity
Can't append to any list row other than the last one
Unexpected null struct reference column in writer
CKXORCMemoryInputStream
void CKXReaderCheck(CKXORCReader *__strong)
Reader not present: make sure that -[CKXORCReader setData:error:] has been called
CKXORCMemoryOutputStream
v32@?0@"CKXProxyBase"8Q16^B24
Proxies by class:
q24@?0#8#16
  %@: %lu
v32@?0#8Q16^B24
Active proxies by scope:
  %@: %ld
v32@?0@"NSNumber"8@"NSNumber"16^B24
No proxies in cache
Total proxies created: %ld
Total proxies reclaimed: %ld
CKAtomBatch.m
Error opening atom batch: %@
Unexpectedly nil backing store for writer
v16@?0@"CKAtomBatchProxy"8
v24@?0@"CKAtomMutableProxy"8Q16
v16@?0@"CKAtomBatchMutableProxy"8
Use -[CKAtomBatch initWriterWithAtomLocation:] to initialize a batch
Atom Batch (%ld atom%@) {
  },
  Location %@ {
    Atom {
      Identifier: %@
      Reference %lu: %@/%@
      Value: %@
    }
Clock value NSUIntegerMax is reserved
%@%@:%@%@
v32@?0@"CKDistributedTimestamp"8Q16^B24
CKDistributedTime.m
Non-zero modifiers for sequential timestamps not yet supported
Unordered to ordered timestamp promotion not supported
v24@?0@"CKDistributedTimestamp"8^B16
@"NSString"16@?0@"NSArray"8
q24@?0@"CKDistributedTimestamp"8@"CKDistributedTimestamp"16
[%@]
{%@}
{%lu unordered}
Timestamp sites should match
Unordered timestamps should not be partially overlapping
( %@ -> %@ ]
Replaced non-placeholder reference with new reference (%ld->%lu) in uncompressed writer. There may be orphaned objects.
Reading v%u file with writer code %u, writer version %d, and length %lu
Skipping read for v%u file with writer code %u, writer version %d, and length %lu, due to null root struct
Created ORC reader for struct %lu with size: %lu, rows: %llu
Created ORC writer
BUG IN CLOUDKIT: Committing batch while uncommitted structs are still present
Growing ORC write batch to size %llu->%llu
Flushed ORC writer with file size: %lu, rows: %llu
Proxy %@ retained out of expected scope. This may cause degraded performance if it happens too often.
Proxies not put back in expected order. This may cause degraded performance if it happens too often.
CKXSchema
CKXReaderBase
CKXWriterBase
CKXVersionedReaderWriterStore
CKXAtomBindingImplementation
CKXBinding
CKXDistributedTimestamp
CKXAtomLocation
CKXAtomReference
CKXAtom
CKXAtomBatch
CKDistributedTimestampProxy
CKXReadStructProxy
CKAtomLocationProxy
CKAtomReferenceProxy
CKAtomProxy
CKAtomBatchProxy
CKDistributedTimestampMutableProxy
CKXWriteStructProxy
CKAtomLocationMutableProxy
CKAtomReferenceMutableProxy
CKAtomMutableProxy
CKAtomBatchMutableProxy
Helpers
CKXAtomORCSchema
CKXORCHelpers
CKXUncompressedReader
CKXReaderProtocol
CKXReaderWriterProtocol
CKXUncompressedWriter
CKXWriterProtocol
CKAtomLocation
NSCopying
CKAtomReference
CKXORCUtilities
CKXBackingStore
Header
IndexAtIndex
CKXORCReaderOptions
CKXORCReader
CKXORCWriterOptions
CKXORCWriter
CKXProxyBase
CKXStructProxyBase
CKXStructMutableProxyBase
CKXArrayProxyBase
CKXStructArrayProxy
CKXStructArrayMutableProxy
CKXStructProxyChildCache
CKXProxyCache
CKAtomBatchEnumerationOptions
CKAtomBatch
CKOrdering
CKDistributedTimestamp
NSSecureCoding
NSCoding
CKDistributedTimestampVector
CKDistributedTimestampVectorRange
init
nextIdentifier
setNextIdentifier:
defineStruct
newIdentifier
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
typeForEncoding:
size
code
fieldTypeForField:
listTypeForField:
fieldTokenCountForStructToken:
fieldTokenAtIndex:forStructToken:
structForStructReference:
structForListReference:
defineTopLevelContainerStruct
defineFieldForStruct:withEncoding:optional:
defineStructReferenceToType:forStruct:
defineListReferenceToStructType:forStruct:
defineListReferenceOfType:forStruct:
valueSizeForField:
valueTypeForField:
valueFieldIsOptional:
referencedStructCountForStructToken:
referencedStructAtIndex:forStructToken:
structIsTopLevelContainer:
fieldExists:
structContainingField:
.cxx_destruct
.cxx_construct
structTokens
structTokenToStructProperties
structTokenToFieldTokens
fieldTokenToFieldProperties
_nextIdentifier
TQ,N,V_nextIdentifier
initWithSchema:
setData:
schema
data
_schema
_data
T@"CKXSchema",R,N,V_schema
T@"NSData",&,N,V_data
datas
addObject:
count
objectAtIndexedSubscript:
newPage
pageAtIndex:
pageCount
_datas
T@"NSMutableArray",R,N,V_datas
createReaderForVersionIfNecessary:
createWriterForVersionIfNecessary:
versionSupported:
uncompressedReader
binding
setUncompressedReader:
orcReader
orcHelpers
optionsByReaderWriterClass
objectForKeyedSubscript:
initWithSchema:helpers:options:
setOrcReader:
uncompressedWriter
setUncompressedWriter:
orcWriter
setOrcWriter:
initWithBinding:optionsByReaderWriterClass:
readerForVersion:
writerForVersion:
setBinding:
setOptionsByReaderWriterClass:
_uncompressedReader
_uncompressedWriter
_orcReader
_orcWriter
_binding
_optionsByReaderWriterClass
T@"CKXUncompressedReader",&,N,V_uncompressedReader
T@"CKXUncompressedWriter",&,N,V_uncompressedWriter
T@"CKXORCReader",&,N,V_orcReader
T@"CKXORCWriter",&,N,V_orcWriter
T@"NSObject<CKXBinding>",&,N,V_binding
T@"NSDictionary",&,N,V_optionsByReaderWriterClass
appendBytes:length:
length
topLevelStructToken
structTokenForClass:
objectClassForStructToken:
proxyClassForStructToken:
mutableProxyClassForStructToken:
setSchema:
tokens
T@"CKXSchema",&,N,V_schema
siteIdentifier
setSiteIdentifier:
modifier
setModifier:
clock
setClock:
unordered
setUnordered:
_modifier
_unordered
_siteIdentifier
_clock
T@"NSData",&,N,V_siteIdentifier
TC,N,V_modifier
Tq,N,V_clock
TB,N,V_unordered
identifier
setIdentifier:
_identifier
T@"NSData",&,N,V_identifier
type
setType:
location
setLocation:
timestamp
setTimestamp:
_type
_location
_timestamp
TC,N,V_type
T@"CKXAtomLocation",&,N,V_location
T@"CKXDistributedTimestamp",&,N,V_timestamp
version
setVersion:
references
setReferences:
atomBehavior
setAtomBehavior:
atomType
setAtomType:
value
setValue:
_atomBehavior
_version
_references
_atomType
_value
TQ,N,V_version
T@"NSArray",&,N,V_references
TC,N,V_atomBehavior
TQ,N,V_atomType
T@"NSData",&,N,V_value
atoms
setAtoms:
_atoms
T@"NSArray",&,N,V_atoms
dataForToken:
copyBytes:length:isNull:forToken:
backingStore
readerForProxy:
structInstance
copyData:forField:inStruct:
objectCopy
copySiteIdentifierBytes:length:isNull:
formatVersion
stringForToken:
copyIdentifierBytes:length:isNull:
zoneName
copyZoneNameBytes:length:isNull:
zoneOwnerName
copyZoneOwnerNameBytes:length:isNull:
childProxyCache
structProxyForStructReference:mutable:
structListProxyForListReference:mutable:
copyValueBytes:length:isNull:
bytes
setSiteIdentifierBytes:length:
mutableListInstanceForField:
writerForProxy:
setData:withLength:forList:
setData:withEncoding:forField:inStruct:
copyFromObject:
copyFromReadProxy:
setIdentifierBytes:length:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
setZoneNameBytes:length:
setZoneOwnerNameBytes:length:
copyFromObjectProxy:
setZoneName:
setZoneOwnerName:
appendObject:
enumerateObjectsUsingBlock:
appendProxy:
enumerate:
setAtomBehavior:withValidation:
raise:format:
setValueBytes:length:
initWithSiteIdentifier:clockValue:modifier:unordered:
clockValue
copyFromTimestamp:
initWithZoneName:ownerName:
initWithData:zoneID:
zoneID
ownerName
copyFromLocation:
initWithLocation:timestamp:type:
reference
copyFromReference:
appendString:
topLevelIndexForStruct:
enumerateColumn:includingRoot:shallow:withBlock:
generateSchema
configureColumnsWithRootColumn:
structReferenceIndexForReference:
listColumnIndexForReference:
valueColumnIndexForField:
offsetForField:inStruct:
referenceIsNull:inStruct:
getBytes:range:
fixedSizeForStruct:
lengthForList:
setData:error:
rootStructWithType:
referencedStructForReference:inStruct:
referencedListForReference:inStruct:
referencedStructAtIndex:inList:
copyData:forList:
resetBytesInRange:
replaceBytesInRange:withBytes:
initWithBytes:length:encoding:
replaceBytesInRange:withBytes:length:
appendData:
beginRootStructWithType:
beginReferencedStructForReference:inStruct:
beginReferencedListForReference:inStruct:
beginAppendedListStructInList:
commitStruct:
flush
pendingPageToFieldInCKXStructInstance
pendingPageToListInstance
initWithName:zoneID:
dataUsingEncoding:
initWithData:encoding:
isEqual:
hash
stringWithCapacity:
appendFormat:
copyWithZone:
initWithName:
name
isEqualToLocation:
description
setZoneID:
_zoneID
T@"CKRecordZoneID",&,N,V_zoneID
T@"NSString",R,N
initWithLocation:
isEqualToReference:
T@"CKAtomLocation",&,N,V_location
T@"CKDistributedTimestamp",&,N,V_timestamp
setDefaultValuesForStruct:withRootColumn:atOffset:withSchema:orcHelpers:
initWithBinding:data:formatVersion:optionsByReaderWriterClass:error:
initWriterWithBinding:version:
writeUsingBlock:
finishWriting
_setupBackingStoreForReadingWithError:
stringWithFormat:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
readerWriterStore
dataWithoutHeader:
cacheScope
proxyForStructToken:withCKXStructInstance:mutable:cacheScope:
headerForData:
header
isWriting
topLevelReadProxy
topLevelWriteProxy
setTopLevelWriteProxy:
reset
proxyWithListInstance:mutable:cacheScope:
proxyCache
proxyForClass:withScope:
associateWithBackingStore:
associateWithStructInstance:
associateWithListInstance:
setCacheScope:
putBackAllProxiesWithScope:
isMutable
committed
reader
writer
data:withHeaderForVersion:
initWithBinding:data:error:
initWithBinding:formatVersion:writerBlock:
writerIdentity
readUsingBlock:
structProxyForStructReference:inCKXStructInstance:mutable:
structListProxyForListReference:inCKXStructInstance:mutable:
appendedStructProxyForListInstance:
structProxyForListInstance:atIndex:
proxyScope:
setReaderWriterStore:
setProxyCache:
setTopLevelReadProxy:
setHeader:
_header
_readerWriterStore
_proxyCache
_cacheScope
_topLevelReadProxy
_topLevelWriteProxy
T@"CKXVersionedReaderWriterStore",&,N,V_readerWriterStore
T@"CKXProxyCache",&,N,V_proxyCache
TQ,N,V_cacheScope
T@"CKXProxyBase<CKXReadStructProxy>",&,N,V_topLevelReadProxy
T@"CKXProxyBase<CKXWriteStructProxy>",&,N,V_topLevelWriteProxy
T{?=C{?=CC}},N,V_header
T@"NSData",R,N,V_data
TB,R,N
TC,R,N
subdataWithRange:
dataWithBytes:length:
createHeaderDataForFormatVersion:
mutableCopy
enumerateRangesUsingBlock:
indexAtIndex:
initWithBatchSize:
batchSize
setBatchSize:
_batchSize
TQ,N,V_batchSize
helpers
options
createRowReaderForStruct:
loadBatchWithRow:forStruct:
addIndex:
createReaderIfNecessaryWithError:
structReferenceColumnForReference:
offsetInCurrentBatchForRow:forStruct:
listColumnForReference:
valueColumnForField:
rowsForStructColumn:
rootColumnForStruct:
structColumnForStruct:
_reader
_structToReaderBatchPair
_rowsForTopLevelContainerStructs
_helpers
_options
T@"<CKXORCHelpers>",R,N,V_helpers
T@"CKXORCReaderOptions",R,N,V_options
batchCommitMarginPercentage
setBatchCommitMarginPercentage:
batchResizeIncrement
setBatchResizeIncrement:
compressionBlockSize
setCompressionBlockSize:
compressionKind
setCompressionKind:
stripeSize
setStripeSize:
testRowsInterspersedWithNulls
setTestRowsInterspersedWithNulls:
_testRowsInterspersedWithNulls
_batchCommitMarginPercentage
_batchResizeIncrement
_compressionBlockSize
_compressionKind
_stripeSize
Td,N,V_batchCommitMarginPercentage
TQ,N,V_batchResizeIncrement
TQ,N,V_compressionBlockSize
Tq,N,V_compressionKind
TQ,N,V_stripeSize
TB,N,V_testRowsInterspersedWithNulls
cStringUsingEncoding:
rootColumn
updateNumberOfElementsForCurrentBatch
enumerateAllColumnsWithBlock:
resetColumnNulls:inRange:
startingRowForCurrentBatch
setStartingRowForCurrentBatch:
commitBatch
growCurrentBatchToIncludeBatchOffset:
growCurrentBatchToIncludeRow:
offsetInCurrentBatchForRow:
expandColumn:includingBatchOffset:
rootStructToken
expandColumn:includingRow:
createWriter
setRootStructToken:
appendRowForStruct:
commitBatchIfNeeded
_writer
_outputStream
_currentBatch
_uncommittedStructs
_rootStructToken
_startingRowForCurrentBatch
T@"CKXORCWriterOptions",R,N,V_options
TQ,N,V_rootStructToken
TQ,N,V_startingRowForCurrentBatch
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
dataWithCapacity:
copy
_init
commit
cached
scope
setScope:
_committed
_backingStore
_scope
T@"CKXBackingStore",R,W,N,V_backingStore
Tq,N,V_scope
TB,R,N,V_committed
initWithProxy:
initWithBytes:length:
_childProxyCache
_structInstance
T{?=QQQ},R,N,V_structInstance
T@"CKXStructProxyChildCache",R,N,V_childProxyCache
fieldTokenToListInstance
listInstance
_listInstance
T{?=QQQQ},R,N,V_listInstance
proxyAtIndex:
index
setIndex:
appendWithProxyBlock:
_index
Tq,N,V_index
proxy
fieldToProxy
_proxy
T@"CKXStructProxyBase",R,W,N,V_proxy
strongToStrongObjectsMapTable
cachedProxies
objectForKey:
lastObject
removeLastObject
totalProxiesCreated
setTotalProxiesCreated:
scopedProxies
setObject:forKey:
totalProxiesReclaimed
setTotalProxiesReclaimed:
_putBackProxyWithoutCheckingScope:
lastIndex
removeObjectsAtIndexes:
keyEnumerator
countByEnumeratingWithState:objects:count:
compare:
sortedArrayUsingComparator:
numberWithInteger:
integerValue
numberWithLong:
setObject:forKeyedSubscript:
enumerateKeysAndObjectsUsingBlock:
debugDescription
setCachedProxies:
setScopedProxies:
_cachedProxies
_scopedProxies
_totalProxiesCreated
_totalProxiesReclaimed
T@"NSMapTable",&,N,V_cachedProxies
T@"NSMutableArray",&,N,V_scopedProxies
Tq,N,V_totalProxiesCreated
Tq,N,V_totalProxiesReclaimed
initWithIncludedIndexes:
initWithIncludedLocation:
includedIndexes
setIncludedIndexes:
includedLocation
setIncludedLocation:
_includedIndexes
_includedLocation
T@"NSIndexSet",&,N,V_includedIndexes
T@"CKAtomLocation",&,N,V_includedLocation
initWithFormatVersion:optionsByReaderWriterClass:enumerationOptions:location:data:error:
initWriterWithAtomLocation:
initWriterWithAtomLocation:version:
enumerationOptions
containsIndex:
descriptionWithAtomValueParser:
numberOfAtoms
enumerateAtomsWithOptions:usingBlock:
initWithData:
initWithData:error:
initWithAtomBatch:enumerationOptions:error:
initWriter
appendAtomWithBlock:
setBackingStore:
setEnumerationOptions:
_enumerationOptions
T@"CKXBackingStore",&,N,V_backingStore
T@"CKAtomBatchEnumerationOptions",&,N,V_enumerationOptions
T{?=CC},R,N
T@"NSData",R,N
Tq,R,N
ckCompare:
_initWithSiteIdentifier:clockValue:modifier:unordered:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeIntForKey:
decodeBoolForKey:
encodeObject:forKey:
encodeInteger:forKey:
encodeInt:forKey:
encodeBool:forKey:
compareToTimestamp:
numberWithUnsignedChar:
numberWithUnsignedInteger:
numberWithBool:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithSiteIdentifier:clockValue:
_clockValue
T@"NSData",R,N,V_siteIdentifier
TQ,R,N,V_clockValue
TC,R,N,V_modifier
TB,R,N,V_unordered
addTimestamp:
timestamps
decodeArrayOfObjectsOfClass:forKey:
unorderedTimestampSet
arrayWithArray:
setWithArray:
allObjects
timestampCount
timestampArray
timestampAtIndex:
timestampForSiteIdentifier:
indexForTimestampForSiteIdentifier:
unorderedTimestamps
isSubsetOfSet:
sequentialSiteIdentifiers
_isGreaterThanOrEqualToTimestamp:
minusSet:
initWithTimestamps:
initWithFrom:to:
containsObject:
setObject:atIndexedSubscript:
intersectSet:
compareToTimestampVector:
string
initWithIdentifiers:
identifierCount
identifierAtIndex:
identifierForSiteIdentifier:
identifiers
unorderedIdentifiers
rangeWithSubtractedTimestamp:
addIdentifier:
mergeFrom:
minimalTimestampWith:
setTimestampArray:
setUnorderedTimestampSet:
_timestampArray
_unorderedTimestampSet
T@"NSMutableArray",&,N,V_timestampArray
T@"NSMutableSet",&,N,V_unorderedTimestampSet
isEqualToSet:
from
includes:
_from
T@"CKDistributedTimestampVector",R,N,V_from
T@"CKDistributedTimestampVector",R,N,V_to
@16@0:8
q16@0:8
Q16@0:8
Q36@0:8Q16r*24B32
Q32@0:8Q16Q24
Q32@0:8q16Q24
q24@0:8Q16
Q24@0:8Q16
B24@0:8Q16
v24@0:8Q16
v16@0:8
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
{unordered_map<unsigned long, CKXStructProperties, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, CKXStructProperties>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, CKXStructProperties>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXStructProperties>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXStructProperties>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, CKXStructProperties>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXStructProperties>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXStructProperties>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXStructProperties>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{unordered_map<unsigned long, std::vector<unsigned long>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::vector<unsigned long>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::vector<unsigned long>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::vector<unsigned long>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::vector<unsigned long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::vector<unsigned long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::vector<unsigned long>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::vector<unsigned long>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{unordered_map<unsigned long, CKXFieldProperties, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, CKXFieldProperties>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, CKXFieldProperties>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXFieldProperties>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXFieldProperties>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, CKXFieldProperties>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXFieldProperties>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXFieldProperties>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXFieldProperties>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@24@0:8@16
v24@0:8@16
@"CKXSchema"
@"NSData"
@24@0:8q16
@"NSMutableArray"
B20@0:8C16
@32@0:8@16@24
@20@0:8C16
@"CKXUncompressedReader"
@"CKXUncompressedWriter"
@"CKXORCReader"
@"CKXORCWriter"
@"NSObject<CKXBinding>"
@"NSDictionary"
Q24@0:8#16
#24@0:8Q16
@"CKXSchema"16@0:8
@"<CKXORCHelpers>"16@0:8
{?="timestamp"Q"timestamp_identifier"Q"timestamp_modifier"Q"timestamp_clock"Q"timestamp_unordered"Q"location"Q"location_identifier"Q"location_zone_name"Q"location_zone_owner_name"Q"reference"Q"reference_type"Q"reference_location"Q"reference_timestamp"Q"atom"Q"atom_version"Q"atom_location"Q"atom_timestamp"Q"atom_references"Q"atom_atom_behavior"Q"atom_atom_type"Q"atom_value"Q"atomBatch"Q"atomBatch_atoms"Q}
C16@0:8
v20@0:8C16
v24@0:8q16
B16@0:8
v20@0:8B16
@"CKXAtomLocation"
@"CKXDistributedTimestamp"
@"NSArray"
v40@0:8^v16^Q24^B32
v24@0:8@"NSObject"16
v24@0:8@"CKXStructProxyBase<CKXReadStructProxy>"16
v32@0:8^v16Q24
v24@0:8C16B20
v24@0:8^v16
@"NSString"16@0:8
B32@0:8@16^@24
{?=QQQ}24@0:8Q16
{?=QQQ}48@0:8Q16{?=QQQ}24
{?=QQQQ}48@0:8Q16{?=QQQ}24
{?=QQQ}56@0:8q16{?=QQQQ}24
B48@0:8Q16{?=QQQ}24
q48@0:8{?=QQQQ}16
v56@0:8^v16Q24{?=QQQ}32
v56@0:8^v16{?=QQQQ}24
B32@0:8@"NSData"16^@24
{?=QQQ}48@0:8{?=QQQQ}16
v64@0:8^v16r*24Q32{?=QQQ}40
v64@0:8^v16Q24{?=QQQQ}32
v40@0:8{?=QQQ}16
@"NSData"16@0:8
{unordered_map<unsigned long, std::pair<CKXStructInstance, unsigned long>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::pair<CKXStructInstance, unsigned long>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::pair<CKXStructInstance, unsigned long>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{unordered_map<unsigned long, CKXListInstance, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, CKXListInstance>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, CKXListInstance>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXListInstance>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXListInstance>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, CKXListInstance>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXListInstance>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXListInstance>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXListInstance>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@24@0:8^{_NSZone=}16
B24@0:8@16
@"CKRecordZoneID"
@36@0:8@16@24C32
@"CKAtomLocation"
@"CKDistributedTimestamp"
v40@0:8^v16B24B28@?32
v56@0:8Q16^v24Q32@40@48
@40@0:8@16@24^@32
@36@0:8@16C24@?28
@28@0:8@16C24
@52@0:8@16@24C32@36^@44
B24@0:8^@16
{?=C{?=CC}}16@0:8
{?=CC}16@0:8
v24@0:8@?16
@52@0:8Q16{?=QQQ}24B48
@48@0:8{?=QQQQ}16
@56@0:8{?=QQQQ}16q48
@60@0:8Q16{?=QQQ}24B48q52
@60@0:8{?=QQQQ}16B48q52
v19@0:8{?=C{?=CC}}16
{?="formatVersion"C"writerIdentity"{?="writerCode"C"writerVersion"C}}
@"CKXVersionedReaderWriterStore"
@"CKXProxyCache"
@"CKXProxyBase<CKXReadStructProxy>"
@"CKXProxyBase<CKXWriteStructProxy>"
{?=C{?=CC}}24@0:8@16
@24@0:8Q16
@40@0:8@16@24@32
B32@0:8Q16Q24
^v24@0:8Q16
{unique_ptr<orc::Reader, std::default_delete<orc::Reader>>="__ptr_"{__compressed_pair<orc::Reader *, std::default_delete<orc::Reader>>="__value_"^{Reader}}}
{unordered_map<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::pair<std::unique_ptr<orc::RowReader>, std::unique_ptr<orc::ColumnVectorBatch>>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{unordered_map<unsigned long, NSIndexSet *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, NSIndexSet *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, NSIndexSet *>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSIndexSet *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSIndexSet *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, NSIndexSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSIndexSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSIndexSet *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSIndexSet *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@"<CKXORCHelpers>"
@"CKXORCReaderOptions"
d16@0:8
v24@0:8d16
v40@0:8^v16{_NSRange=QQ}24
^v16@0:8
{unique_ptr<orc::Writer, std::default_delete<orc::Writer>>="__ptr_"{__compressed_pair<orc::Writer *, std::default_delete<orc::Writer>>="__value_"^{Writer}}}
{unique_ptr<orc::OutputStream, std::default_delete<orc::OutputStream>>="__ptr_"{__compressed_pair<orc::OutputStream *, std::default_delete<orc::OutputStream>>="__value_"^{OutputStream}}}
{unique_ptr<orc::ColumnVectorBatch, std::default_delete<orc::ColumnVectorBatch>>="__ptr_"{__compressed_pair<orc::ColumnVectorBatch *, std::default_delete<orc::ColumnVectorBatch>>="__value_"^{ColumnVectorBatch}}}
{set<CKXStructInstance, std::less<CKXStructInstance>, std::allocator<CKXStructInstance>>="__tree_"{__tree<CKXStructInstance, std::less<CKXStructInstance>, std::allocator<CKXStructInstance>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<CKXStructInstance, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::less<CKXStructInstance>>="__value_"Q}}}
@"CKXORCWriterOptions"
@"CKXBackingStore"
v48@0:8^v16^Q24^B32Q40
{?=QQQ}16@0:8
@"CKXStructProxyChildCache"
{?="structToken"Q"page"Q"offset"Q}
{?=QQQQ}24@0:8Q16
v48@0:8{?=QQQQ}16
{?=QQQQ}16@0:8
{?="structToken"Q"listReferenceToken"Q"page"Q"offset"Q}
@28@0:8Q16B24
{unordered_map<unsigned long, CKXProxyBase *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, CKXProxyBase *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, CKXProxyBase *>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXProxyBase *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXProxyBase *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, CKXProxyBase *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, CKXProxyBase *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, CKXProxyBase *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, CKXProxyBase *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@"CKXStructProxyBase"
@32@0:8#16q24
@"NSMapTable"
@"NSIndexSet"
@32@0:8@16^@24
@60@0:8C16@20@28@36@44^@52
v32@0:8@16@?24
@24@0:8@?16
@"CKAtomBatchEnumerationOptions"
q24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16Q24
@40@0:8@16Q24C32B36
@"NSMutableSet"
@"CKDistributedTimestampVector"
