init
initWithQueue:environment:
setWeakEventDatabaseController:
setWeakReminderDatabaseController:
environment
dbFileManager
pairingID
stringWithFormat:
changeObserverForEventWithQueue:databaseController:environment:
changeObserverForReminderWithQueue:databaseController:environment:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
delegate
setDelegate:
clientName
initWithEnvironment:
.cxx_destruct
_environment
_keyQueue
_clientName
_delegate
appendFormat:
appendString:
copy
entityType
setEntityType:
selfAttendeeEmail
setSelfAttendeeEmail:
selfAttendeeUUID
setSelfAttendeeUUID:
selfOrganizerEmail
setSelfOrganizerEmail:
selfOrganizerUUID
setSelfOrganizerUUID:
attendeeStatus
setAttendeeStatus:
invitationStatus
setInvitationStatus:
properInvitationStatus
setProperInvitationStatus:
hasProperInvitationStatus
setHasProperInvitationStatus:
identifier
setIdentifier:
dateChanged
setDateChanged:
timeChanged
setTimeChanged:
titleChanged
setTitleChanged:
locationChanged
setLocationChanged:
attendeeComment
setAttendeeComment:
attendeeStatusFlag
setAttendeeStatusFlag:
startDate
setStartDate:
externalID
setExternalID:
locationPredictionState
setLocationPredictionState:
_hasProperInvitationStatus
_dateChanged
_timeChanged
_titleChanged
_locationChanged
_attendeeComment
_attendeeStatusFlag
_entityType
_selfAttendeeEmail
_selfAttendeeUUID
_selfOrganizerEmail
_selfOrganizerUUID
_attendeeStatus
_invitationStatus
_properInvitationStatus
_identifier
_startDate
_externalID
_locationPredictionState
properties
allValues
UUID
UUIDString
NEKFluff
length
NEKSqueeze
eks_garbageUUID
objectForKey:
setObject:forKey:
objectForKeyedSubscript:
count
initWithCapacity:
countByEnumeratingWithState:objects:count:
settablePropertiesForCalendarItemIdentifier:
propertiesForCalendarItemIdentifier:
numberWithUnsignedInteger:
numberWithInteger:
keyEnumerator
title
oldCalendarIdentifier
objectIdentifier
sequencer
changeType
ICSWrapperMetadata
ICSData
setICSData:
hasPropertiesForIdentifier:
setMetadata:forCalendarItemIdentifier:
startDateMap
setDateChanged:forIdentifier:
dateChangedForIdentifier:
setTimeChanged:forIdentifier:
timeChangedForIdentifier:
setTitleChanged:forIdentifier:
titleChangedForIdentifier:
setLocationChanged:forIdentifier:
locationChangedForIdentifier:
setAttendeeComment:forIdentifier:
attendeeCommentForIdentifier:
setSelfAttendeeEmail:forIdentifier:
selfAttendeeEmailForIdentifier:
setSelfAttendeeUUID:forIdentifier:
selfAttendeeUUIDForIdentifier:
setSelfOrganizerEmail:forIdentifier:
selfOrganizerEmailForIdentifier:
setSelfOrganizerUUID:forIdentifier:
selfOrganizerUUIDForIdentifier:
setInvitationStatus:forIdentifier:
invitationStatusForIdentifier:
setProperInvitationStatus:forIdentifier:
properInvitationStatusForIdentifier:
setLocationPredictionState:forIdentifier:
locationPredictionStateForIdentifier:
setAttendeeStatus:forIdentifier:
attendeeStatusForIdentifier:
setAttendeeStatusFlag:forIdentifier:
attendeeStatusFlagForIdentifier:
setExternalID:forIdentifier:
externalIDForIdentifier:
setStartDate:forIdentifier:
startDateForIdentifier:
enumerateCalendarItemIdentifiersUsingBlock:
entityTypeForCalendarItemWithIdentifier:
objectTypeForCalendarItemWithIdentifier:
lzfseICSData
setLzfseICSData:
calendarIdentifier
setCalendarIdentifier:
setOldCalendarIdentifier:
oldIdentifier
setOldIdentifier:
nuevoIdentifier
setNuevoIdentifier:
calendarItemCount
setCalendarItemCount:
isTaskCompleted
setTaskCompleted:
taskCompletionDate
setTaskCompletionDate:
displayOrder
setDisplayOrder:
isReminderWithLocation
setIsReminderWithLocation:
setStartDateMap:
setProperties:
syncId
setSyncId:
_zICSData
_rICSData
_title
_taskCompleted
_isReminderWithLocation
_lzfseICSData
_calendarIdentifier
_oldCalendarIdentifier
_oldIdentifier
_nuevoIdentifier
_calendarItemCount
_taskCompletionDate
_displayOrder
_startDateMap
_properties
_syncId
initWithExpiration:
setCountLimit:
setName:
setEnvironment:
setMean:
setStddev:
setAlpha:
setFailureScaling:
setSigmaSpan:
setFailTimeout:
setMinTimeout:
setMaxTimeout:
name
tinyStore
getDoubleValueForKey:default:
setFirstTimeEver:
setVariance:
mean
setDoubleValue:forKey:
variance
failTimeout
firstTimeEver
alpha
failureScaling
_clip:
nextTimeout
minTimeout
sigmaSpan
stddev
maxTimeout
initWithEnvironment:name:defaultMean:defaultStddev:
load
save
updateSuccess:
updateFailure
_firstTimeEver
_mean
_alpha
_failureScaling
_sigmaSpan
_minTimeout
_maxTimeout
_name
_variance
_failTimeout
daCalendarItemUniqueIdentifier
setMode:
localAccountID
fetchAccountWithObjectID:error:
eks_localAccount
fetchListsWithError:
firstObject
daemonController
syncDebugPerformerWithReason:errorHandler:
purgeDeletedObjectsWithCompletionHandler:
eks_defaultLocalList
purgeLazyDeletedObjects
eks_storeForSyncing
initWithDatabaseManager:
recordMap
lock
wait
broadcast
unlock
initWithFileManager:
isEventKitSyncEnabledForReminderKit
seenMap
syncCoordinator
syncController
setSyncController:
analytics
isReminderKitEnabled
daemon
setDaemon:
setAnalytics:
_lock
_controllerCondition
_syncController
_dbFileManager
_tinyStore
_recordMap
_seenMap
_syncCoordinator
_analytics
_daemon
initWithSourceIdentifier:attributes:calendarIdentifier:
storeIdentifier
attributes
isDefaultTaskCalendar
setIsDefaultTaskCalendar:
isDefaultEventCalendar
setIsDefaultEventCalendar:
_isDefaultTaskCalendar
_isDefaultEventCalendar
_storeIdentifier
_attributes
alarms
trigger
structuredLocation
list
initWithList:
store
arrayWithObjects:count:
setPropertiesForWrapper:withReminders:oldListIdentifier:sendAllProperties:store:list:
icsTodoFromReminder:exportingOption:
initWithData:encoding:
string
icsDisplayOrder
externalIdentifier
objectID
uuid
isCompleted
completionDate
timeIntervalSinceReferenceDate
remObjectID
eks_debugDesc
setAllPropertiesForReminder:identifier:wrapper:store:list:oldListIdentifier:
setMinimalPropertiesForReminder:identifier:wrapper:
wrapperForReminder:oldListIdentifier:store:
x_calendarserver_access
setX_calendarserver_access:
setComponents:options:
initWithCalendar:
ICSDataWithOptions:
dictionaryRepresentation
dictionary
numberWithBool:
setPersistentID:
allocWithZone:
copyWithZone:
hasPersistentID
setIsLocalStore:
setHasIsLocalStore:
hasIsLocalStore
readFrom:
writeTo:
copyTo:
mergeFrom:
persistentID
isLocalStore
_persistentID
_isLocalStore
_has
initWithSource:
initWithAttributes:
initWithPersistentID:isLocalStore:
initWithUUIDString:
objectIDWithUUID:
initWithAccount:
accountForStore:identifier:
initWithPath:
path
UTF8String
_bootstrap
date
initWithCalendarIdentifier:
components:fromDate:
year
month
hour
minute
second
stringByReplacingOccurrencesOfString:withString:
_recreatePath
_createParentDirectory
_openDatabase
_prepDatabase
newFileName:
_newPath
defaultManager
stringByDeletingLastPathComponent
dictionaryWithObjects:forKeys:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
domain
isEqualToString:
code
_makeErrorDictionary
exceptionWithName:reason:userInfo:
_executeSql:
initWithName:
_addSchema:
setDb:
createTables
instanceName
currentVersion
_instanceVersion:
migrateFrom:
_setInstance:version:
stringWithUTF8String:
numberWithInt:
_parseSql:andRun:
initWithQueue:
setParsed:
setRawDb:
resetBindCursor
_loadCache:sqlErr:
parsed
_parseMultipleSql:andRun:
setObject:forKeyedSubscript:
allKeys
getIntegerForKey:default:
setInteger:forKey:
cache:willEvictObject:
initWithURL:
addSchema:
executeSql:
parseSql:andRun:
parseMultipleSql:andRun:
setPath:
pathTemplate
setPathTemplate:
_statementCache
_instanceVersions
_alreadyOnQueue
_path
_pathTemplate
usedRecently
setUsedRecently:
timer
setTimer:
callRemoveAllObjects
queue
_tickleTimer
removeAllObjects
expiration
action
setQueue:
setExpiration:
setAction:
_usedRecently
_timer
_queue
_expiration
_action
setSourceIdentifier:
setAttributes:
hasSourceIdentifier
hasCalendarIdentifier
hasAttributes
setHasIsDefaultTaskCalendar:
hasIsDefaultTaskCalendar
setHasIsDefaultEventCalendar:
hasIsDefaultEventCalendar
hasOldCalendarIdentifier
sourceIdentifier
_sourceIdentifier
storeForEventWithEnvironment:
storeForReminderWithEnvironment:
freshEventStoreFor:
saveEventStore:
removeAllItems
updateSource:store:
updateCalendar:store:
updateICS:store:session:
deleteItem:store:
changeObserver
setChangeObserver:
_changeObserver
predicateWithBlock:
source
sourceType
isDelegate
calendar
type
account
isGroup
daIsEventOnlyContainer
daIsNotificationsCollection
eventStore
defaultLocalCalendar
numberWithUnsignedLongLong:
setUUID:
setTitle:
setType:
setDigest:
setSymbolicColorName:
setColorString:
setSharedOwnerName:
setSharedOwnerAddress:
setPublishedURLString:
setExternalIdentificationTag:
setSyncToken:
setExternalModificationTag:
setExternalRepresentation:
setNotes:
setSubCalAccountID:
setPushKey:
setSelfIdentityDisplayName:
setSelfIdentityEmail:
setSelfIdentityAddressString:
setSelfIdentityFirstName:
setSelfIdentityLastName:
setOwnerIdentityDisplayName:
setOwnerIdentityEmail:
setOwnerIdentityAddressString:
setOwnerIdentityFirstName:
setOwnerIdentityLastName:
hasUUID
hasTitle
setIsReadonly:
setHasIsReadonly:
hasIsReadonly
setIsHidden:
setHasIsHidden:
hasIsHidden
setIsImmutable:
setHasIsImmutable:
hasIsImmutable
setIsInbox:
setHasIsInbox:
hasIsInbox
setIsNotificationsCollection:
setHasIsNotificationsCollection:
hasIsNotificationsCollection
setIsSharingInvitation:
setHasIsSharingInvitation:
hasIsSharingInvitation
setIsSubscribed:
setHasIsSubscribed:
hasIsSubscribed
setIsHolidayCalendar:
setHasIsHolidayCalendar:
hasIsHolidayCalendar
setIsFamilyCalendar:
setHasIsFamilyCalendar:
hasIsFamilyCalendar
setIsIgnoringEventAlerts:
setHasIsIgnoringEventAlerts:
hasIsIgnoringEventAlerts
setIsIgnoringSharedCalendarNotifications:
setHasIsIgnoringSharedCalendarNotifications:
hasIsIgnoringSharedCalendarNotifications
setIsSchedulingProhibited:
setHasIsSchedulingProhibited:
hasIsSchedulingProhibited
setIsDefaultCalendarForStore:
setHasIsDefaultCalendarForStore:
hasIsDefaultCalendarForStore
hasType
hasDigest
hasSymbolicColorName
hasColorString
setHasDisplayOrder:
hasDisplayOrder
setSharingStatus:
setHasSharingStatus:
hasSharingStatus
hasSharedOwnerName
hasSharedOwnerAddress
setSharingInvitationResponse:
setHasSharingInvitationResponse:
hasSharingInvitationResponse
hasPublishedURLString
setCanBePublished:
setHasCanBePublished:
hasCanBePublished
setCanBeShared:
setHasCanBeShared:
hasCanBeShared
setIsPublished:
setHasIsPublished:
hasIsPublished
hasExternalID
hasExternalIdentificationTag
hasSyncToken
hasExternalModificationTag
hasExternalRepresentation
setSupportedEntityTypes:
setHasSupportedEntityTypes:
hasSupportedEntityTypes
setHasInvitationStatus:
hasInvitationStatus
setHasBeenAlerted:
setHasHasBeenAlerted:
hasHasBeenAlerted
hasNotes
hasSubCalAccountID
hasPushKey
hasSelfIdentityDisplayName
hasSelfIdentityEmail
hasSelfIdentityAddressString
hasSelfIdentityFirstName
hasSelfIdentityLastName
hasOwnerIdentityDisplayName
hasOwnerIdentityEmail
hasOwnerIdentityAddressString
hasOwnerIdentityFirstName
hasOwnerIdentityLastName
uUID
isReadonly
isHidden
isImmutable
isInbox
isNotificationsCollection
isSharingInvitation
isSubscribed
isHolidayCalendar
isFamilyCalendar
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isSchedulingProhibited
isDefaultCalendarForStore
digest
symbolicColorName
colorString
sharingStatus
sharedOwnerName
sharedOwnerAddress
sharingInvitationResponse
publishedURLString
canBePublished
canBeShared
isPublished
externalIdentificationTag
syncToken
externalModificationTag
externalRepresentation
supportedEntityTypes
hasBeenAlerted
notes
subCalAccountID
pushKey
selfIdentityDisplayName
selfIdentityEmail
selfIdentityAddressString
selfIdentityFirstName
selfIdentityLastName
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityAddressString
ownerIdentityFirstName
ownerIdentityLastName
_sharingInvitationResponse
_sharingStatus
_supportedEntityTypes
_colorString
_digest
_externalIdentificationTag
_externalModificationTag
_externalRepresentation
_notes
_ownerIdentityAddressString
_ownerIdentityDisplayName
_ownerIdentityEmail
_ownerIdentityFirstName
_ownerIdentityLastName
_publishedURLString
_pushKey
_selfIdentityAddressString
_selfIdentityDisplayName
_selfIdentityEmail
_selfIdentityFirstName
_selfIdentityLastName
_sharedOwnerAddress
_sharedOwnerName
_subCalAccountID
_symbolicColorName
_syncToken
_type
_uUID
_canBePublished
_canBeShared
_hasBeenAlerted
_isDefaultCalendarForStore
_isFamilyCalendar
_isHidden
_isHolidayCalendar
_isIgnoringEventAlerts
_isIgnoringSharedCalendarNotifications
_isImmutable
_isInbox
_isNotificationsCollection
_isPublished
_isReadonly
_isSchedulingProhibited
_isSharingInvitation
_isSubscribed
syncStateDBPathFor:
_convertIfNeeded:
fileExistsAtPath:
_loadPlistFrom:
_migrateIntegerFrom:key:
_migrateStringFrom:key:
_migrateDoubleFrom:key:
removeItemAtPath:error:
integerValue
setIntegerValue:forKey:
setStringValue:forKey:
doubleValue
setString:forKey:
getStringForKey:default:
compareAndSwapIntegerValue:expectedExistingValue:forKey:
setDouble:forKey:
getDoubleForKey:default:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
getStringValueForKey:default:
getIntegerValueForKey:default:
_store
_file
initWithFile:
initWithData:
data
setData:
msgType
setMsgType:
responseIdentifier
setResponseIdentifier:
_data
_msgType
_responseIdentifier
initWithIDSServiceName:logging:
initWithService:
addDelegate:queue:
dataUsingEncoding:
appendBytes:length:
appendData:
getBytes:range:
subdataWithRange:
idsOptions
mutableCopy
_makeWireMessageType:content:
setWithObject:
sendData:toDestinations:priority:options:identifier:error:
fileURLWithPath:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
_rawSendData:type:responseIdentifier:error:
_rawSendFile:type:responseIdentifier:error:
removeObjectForKey:
_makeMessageFromWireData:
incomingResponseIdentifier
outgoingResponseIdentifier
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithIDSServiceName:
registerMessageType:handler:
resume
setPriority:
setCloudFallback:
sendMessage:responseHandler:completion:
reply:to:completion:
setIdsOptions:
_outstanding
_handlers
_service
_priority
_logFacility
_suspended
_cloudFallback
_idsOptions
lastPathComponent
fileSystemRepresentation
setStart:
start
dateByAddingTimeInterval:
setEnd:
_countEvents
dateWithTimeIntervalSinceReferenceDate:
endDate
masterCount
setMasterCount:
occurrenceCount
setOccurrenceCount:
showAlert
setShowAlert:
eks_eventOnlyStoreFor:
sources
allCalendars
predicateForMasterEventsWithOccurrencesWithStartDate:endDate:inCalendar:
eventObjectIDsMatchingPredicate:
predicateForEventsWithStartDate:endDate:calendars:
setDateFormat:
systemTimeZone
setTimeZone:
stringFromDate:
validationWrapperForSameSpan:
validationWrapperForRightNow
validationWrapperForPb:
validationEnabled
validate
_showAlert
_start
_end
_masterCount
_occurrenceCount
bindString:
step
fetchInteger
bindInteger:
fetchDouble
bindDouble:
fetchString
fetchBlob
bindBlob:
getDataForKey:default:
setData:forKey:
_insert
_select
_baseName
identifierForRecordID:
setIdentifier:forRecordID:
deleteIdentifierForRecordID:
commit:
reset
removeAllRecords
rowID
setRowID:
entityRowID
setEntityRowID:
_rowID
_entityRowID
_UUID
insertTableIfNeeded
prepareStatements
_beginTransaction
dealloc
_schemaVersion
_setSchemaVersion
recordForRecordID:
stringWithCString:encoding:
errorWithDomain:code:userInfo:
_selectRecord
_updateRecord
_insertRecord
_deleteRecord
identifierInRowMappingForRecordIDRef:
calendarIdentifierInRowMappingForRecordIDRef:
initWithIdentifier:calendarIdentifier:type:
stringRepresentation
deletionWrapperForRecordID:eventStore:
deletionWrapperForSourceID:
stores
setStores:
calendars
setCalendars:
tasks
setTasks:
events
setEvents:
_stores
_calendars
_tasks
_events
initWithCustomClientId:
eks_eventOnlyStoreIgnoringExternalChangesFor:withClientId:
nowMinusPrevious:
dirtyMemory
wallTime
_commitPendingRecordMapChanges
removeDeletableCalendars:
removeDeletableSources:
_deletableSources
deleteStore:
_deletableCalendars
deleteCalendar:
removeAllRecordsInCalendar:
predicateForCalendarItemsOfType:inCalendar:
publicObjectWithObjectID:
removeEvent:span:error:
reminderObjectIDsMatchingPredicate:
removeReminder:commit:error:
defaultCalendarForNewReminders
defaultCalendarForNewEvents
uniqueId
isPhantom
isDetached
originalItem
containsObject:
addObject:
_shouldSendEvent:
_shouldSendReminder:
localSource
accountPersistentID
sourceWithIdentifier:
allowsEvents
allowsTasks
_updateSource:withSourceWrapper:store:
saveSource:commit:error:
_createSourceForWrapper:store:
calendarWithIdentifier:
_updateCalendar:withCalendarWrapper:
saveCalendar:commit:error:
_createCalendarForWrapper:store:
_checkAndSetDefaultCalendar:calendarWrapper:store:
performUpdateWithICSWrappers:store:session:
_deleteSourceWithIdentifier:store:
_deleteCalendarWithIdentifier:store:
_deleteEventWithIdentifier:calendarIdentifier:store:
_deleteReminderWithIdentifier:calendarIdentifier:store:
applySidePropertiesToEntity:withWrapper:session:
isTemporary
_didCreateEntity:
updateRowMappingForEntity:
selfAttendee
participantStatus
setParticipationStatus:
isMaster
saveEvent:span:commit:error:
setCompletionDate:
participationStatus
dictionaryWithCapacity:
calendarItemsWithExternalIdentifier:
calendarItemExternalIdentifier
updateEvent:identifier:eventStore:occurrenceDate:participationStatus:masterIdentifier:isMaster:
detachedItems
originalStartDate
longLongValue
persistentObject
initWithPersistentObject:occurrenceDate:
eventForUID:occurrenceDate:
intValue
eventWithUniqueId:
componentsSeparatedByString:
objectAtIndexedSubscript:
eventsWithExternalIdentifier:inCalendars:
handleUpdatedItemFromGizmo:type:withWrapper:identifier:
detacheesForIdentifierCreatingIfNeeded:detachedEventMap:
hasRecurrenceRules
remindersWithExternalIdentifier:inCalendars:
base64EncodedStringWithOptions:
calendarInStore:withNEKCalendarID:
handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:
handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:
calendarItemsWithExternalIdentifier:inCalendars:
updateMasterEvent:masterIdentifier:calendarIdentifier:masterParticipationStatus:detachedEvents:
allObjects
_deleteCalendarItemsInICSWrapperFromOldCalendar:store:
_deleteCalendarItemsMovedToCalendar:inICSWrapper:
importICSData:intoCalendars:options:
objectAtIndex:
handleNewEntity:withWrapper:session:
_removeIdentifierForDeletedEntity:
calendarItemsWithUniqueIdentifier:inCalendar:
_deleteDetachedCalendarItemsFromOldCalendar:deletedEvents:
setUniqueId:
updateSelfAttendeeForCalendarItem:identifier:withWrapper:
isExternallyOrganizedInvitation
status
deleteInviteByUUID:
shouldShowInvite:withUUID:
didShowInvite:withUUID:
unsignedIntegerValue
updateInvitationStatusForCalendarItem:identifier:withWrapper:session:
saveEvent:span:error:
saveReminder:error:
attendees
emailAddress
absoluteString
setSelfAttendee:
organizer
setCurrentUser:
setOrganizer:
isResetSync
eks_cacheKey
numberWithDouble:
owner
updates
setUpdates:
enumerateForChangeType:forEntitiesOfClass:withBlock:
insertedOrUpdatedSources
wrapperForSource:
push:
wrapperForCalEntity:
_compoundIdentifierForEntity:
startMappingEntities
initForFullSync:tinyStore:
eventInFuture:inStore:
eventInWindow:inStore:
shouldSendEntity:
wrapperForCalendarItem:needsInvite:eventStore:
hasRowMappingForEntity:
endMappingEntities
deletes
deletedSourcesIDs
wrapperForCalendar:
wrapperForCalendarItem:
initWithCalendarRef:useAttributes:
wrapperForCalendar:useAttributes:
_identifierInRowMapping:
isIdentifierPresent:forRecordID:
sweep
removeSource:commit:error:
removeCalendar:commit:error:
_deleteAndLogEvent:identifier:store:
configureSource:inStore:withAttributes:
sourceWithEventStore:
setDefaultCalendarForNewReminders:
setDefaultCalendarForNewEvents:
didCalendarChange:
configureCalendar:inDatabase:withAttributes:
setAllowsEvents:
eventSourceForDatabase:identifier:
setSource:
calendarForEntityTypes:eventStore:
calendarForEntityType:eventStore:
setImmutable:
_sendChangesIfAvailable
purgeRecordMap
getDefaultTaskCalendar:defaultEventCalendar:store:
deleteItemWithIdentifier:store:
addAttendeeEvents:
storeWrappersForSourceAggregator:pipe:
calendarWrappersForChangeSet:pipe:
ICSWrappersForChangeSet:pipe:
deletionWrappersForChangeSet:skipSourceDeletions:pipe:
deletionWrappersForSourceAggregator:pipe:
identifierInRowMappingForEventOrTask:
calendarIdentifierInRowMappingForEventOrTask:
removeIdentifiersForDeletedRecordIDs:
commitRecordMap
sweepSeenMap
deleteEvent:
deleteTask:
_ICSLogTestForWrapper:
_flushQueue
_createdEntities
_createdEntitiesLock
_idleBlockQueue
_pipeQueue
_syncedEntityUniqueIdentifiers
_alertSupressionCache
setPropertiesForWrapper:withCalendarItems:needsInvite:sendAllProperties:eventStore:calendar:originalEvent:
uniqueIdentifier
instance
canUseLzfse
ICSDataForCalendarItems:options:
isCurrentUser
setAllPropertiesForItem:identifier:wrapper:needsInvite:eventStore:calendar:
setMinimalPropertiesForItem:identifier:wrapper:
initWithDomain:
setWithObjects:
shared
migratePrefsIfNecessary
integerForKey:
synchronizeUserDefaultsDomain:keys:
synchronize
alertInviteeDeclines
_broadcastBool:forKey:
showDeclinedEvents
rebroadcastShowDeclinedChangeNotification
rebroadcastAlertInviteeDeclinesChangeNotification
setBool:forKey:
synchronizeNanoDomain:keys:
boolForKey:keyExistsAndHasValidFormat:
sequenceNumber
setShowDeclinedEvents:
applyRebroadcastShowDeclinedEvents
applyRebroadcastAlertInviteeDeclines
enumerateKeysAndObjectsUsingBlock:
rebroadcastAllObservedNotifications
handleDarwinNotificationOfName:
_prefObserverLog
_npsManager
_domainAccessor
_keysToDirectMirrorCompanionToGizmo
_ekPrefs
_enumerateForChangeType:forEntitiesOfClass:withBlock:
inserts
component:fromDate:
_currentHour
fetchHourlyTallies:hour:
_writeTally:
countSessionType:
clearHour:
setHasStartDate:
hasStartDate
setEndDate:
setHasEndDate:
hasEndDate
setHasMasterCount:
hasMasterCount
setHasOccurrenceCount:
hasOccurrenceCount
setHasShowAlert:
hasShowAlert
_endDate
writeStackshot:
writeCrashReport:
facilityWithSubsystem:category:
_recvSetReminderKitReminderCompletedEndpoint:
_recvSetEventKitReminderCompletedEndpoint:
_recvSetParticipantStatusEndpoint:
_recvSetReminderKitAlarmSnoozeEndpoint:
_recvSetEventKitAlarmSnoozeEndpoint:
_recvDeleteEventEndpoint:
setSetParticipantStatus:
setParticipantStatus
setStatus:
setSpan:
setStoreIdentifier:
setItemIdentifier:
setDeleteEvent:
deleteEvent
setEventIdentifier:
setEventTitle:
setEventStart:
setCalendarTitle:
setSetReminderComplete:
setReminderComplete
setIsComplete:
setCalendarName:
setReminderTitle:
setExternalIdentifier:
setSetAlarmSnooze:
setAlarmSnooze
setSnoozeAmount:
setAlarmIdentifier:
snoozeAlarm:withTimeIntervalFromNow:
initWithReminderKitEnabled:
_disableMutation
sendSetParticipantStatus:span:storeId:eventId:
sendDeleteEventId:title:start:inCalendarId:title:inSource:span:
sendSetCompleted:calendarName:title:externalIdentifier:
sendSetReminderAlarmSnooze:calendarName:title:externalIdentifier:alarmIdentifier:
sendSetEventAlarmSnooze:calendarName:storeId:eventId:alarmIdentifier:
_calendarItem:snoozeAlarmID:withTimeIntervalFromNow:
_messaging
_messageLogging
_enableDisableLogging
userInfo
_blockUntilUnlock
_registerForNotifications
setLeadingEdgeDelay:
setCoalesingDelay:
defaultCenter
postNotificationName:object:
initWithLeadingEdgeDelay:coalescingDelay:action:
didReceiveStartSyncCommand:
receivedStartSyncNotificationString
addObserver:selector:name:object:
didReceiveReunionSyncCommand:
receivedReunionSyncNotificationString
_databaseChangedExternally
_triggerFullSync
_enableStall
clearRetryState
clearRemoteBuildVersion
_triggerMigrationSync
shouldSyncBasedOnTime:
_triggerNightlySync
flush
setNeedsFullSync
setNeedsReunionSync
signal
setNeedsNightlySync
setNeedsMigrationSync
_notificationQueue
_daemonQueue
_preferencesObserver
_preferencesQueue
_logDbFile
_changeCoalescer
compare:
isBefore:
isAfter:
targetableDevice
systemBuildVersion
compare:options:
_setWindowToNow
_loadLastSyncWindow
_getTestWindowStart
_getTestWindowEnd
_computeDerived
_getWindowStart
_getWindowEnd
initWithTimeIntervalSinceReferenceDate:
_spanNowTime
setTaskCutoffDate:
defaultTimeZone
_eventInWindow:inStore:
timeZone
occurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:
taskCutoffDate
distantFuture
taskCutoff
reminderInWindow:
reminderInFuture:
spanStart
setSpanStart:
spanEnd
setSpanEnd:
setTaskCutoff:
_fwdDaysToSync
_revDaysToSync
_dontSyncDays
_spanStart
_spanEnd
_taskCutoff
_timeZone
_taskCutoffDate
entityName
cdEntityName
fetchReminderIncludingMarkedForDeleteWithObjectID:error:
deletionWrapperForObjectID:deletedReminderAndListMapping:
ekEventStore
sourceWithExternalID:
enumerateObjectsUsingBlock:
initWithNEKEventStore:eventChanges:reminderChanges:
_insertedOrUpdatedSources
_deletedSourcesIDs
_ekEventStore
inactive
defaultAlarmOffset
setDefaultAlarmOffset:
isEnabled
setIsEnabled:
isFacebookSource
setIsFacebook:
usesSelfAttendee
setUsesSelfAttendee:
constraintsDescriptionPath
setConstraintsDescriptionPath:
creatorBundleID
setCreatorBundleID:
creatorCodeSigningIdentity
setCreatorCodeSigningIdentity:
setAccountPersistentID:
supportsSharedCalendars
setSupportsSharedCalendars:
setAllowsTasks:
allowsCalendarAddDeleteModify
setAllowsCalendarAddDeleteModify:
onlyCreatorCanModify
setOnlyCreatorCanModify:
snoozeAlarmRequiresDetach
setSnoozeAlarmRequiresDetach:
supportsAlarmAcknowledgedDate
setSupportsAlarmAcknowledgedDate:
calendarsForEntityType:
deleteWhatever:calendarsInSource:inStore:
setSourceType:
setEnabled:
isFacebook
deleteSourcesTaskCalendars:inStore:
deleteSourcesEventCalendars:inStore:
os_log_facility
setObfuscate:
obfuscate
isInternalDevice
rpcEndpoint
setParticipantStatus:span:storeId:eventId:
deleteEventId:title:start:inCalendarId:title:inSource:span:
setCompleted:calendarName:title:externalIdentifier:
setReminderAlarmSnooze:calendarName:title:externalIdentifier:alarmIdentifier:
setEventAlarmSnooze:calendarName:storeId:eventId:alarmIdentifier:
connection
setConnection:
setRpcEndpoint:
_connection
_rpcEndpoint
initWithMachServiceName:
_setQueue:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
listener:shouldAcceptNewConnection:
initWithEndpoint:
_listener
impl
setHasIsComplete:
hasIsComplete
hasCalendarName
hasReminderTitle
hasExternalIdentifier
isComplete
calendarName
reminderTitle
_calendarName
_externalIdentifier
_reminderTitle
_isComplete
isDefaultLocalCalendar
initWithIdentifier:isDefaultLocalCalendar:
_isDefaultLocalCalendar
numberWithUnsignedInt:
hasName
setHasDefaultAlarmOffset:
hasDefaultAlarmOffset
setHasType:
setHasIsEnabled:
hasIsEnabled
setHasIsFacebook:
hasIsFacebook
setHasUsesSelfAttendee:
hasUsesSelfAttendee
hasConstraintsDescriptionPath
hasCreatorBundleID
hasCreatorCodeSigningIdentity
hasAccountPersistentID
setHasSupportsSharedCalendars:
hasSupportsSharedCalendars
setHasAllowsTasks:
hasAllowsTasks
setHasAllowsEvents:
hasAllowsEvents
setHasAllowsCalendarAddDeleteModify:
hasAllowsCalendarAddDeleteModify
setHasOnlyCreatorCanModify:
hasOnlyCreatorCanModify
setHasSnoozeAlarmRequiresDetach:
hasSnoozeAlarmRequiresDetach
setHasSupportsAlarmAcknowledgedDate:
hasSupportsAlarmAcknowledgedDate
_accountPersistentID
_constraintsDescriptionPath
_creatorBundleID
_creatorCodeSigningIdentity
_defaultAlarmOffset
_allowsCalendarAddDeleteModify
_allowsEvents
_allowsTasks
_isEnabled
_isFacebook
_onlyCreatorCanModify
_snoozeAlarmRequiresDetach
_supportsAlarmAcknowledgedDate
_supportsSharedCalendars
_usesSelfAttendee
isSyncingReply:
listener
setListener:
stringByAppendingPathComponent:
sharedInstance
waitForPairingStorePathPairingID:
pairingStorePath
dueDateComponents
setValue:forKey:
recordSessionType:
setStore:
storeFile
setStoreFile:
_storeFile
daConstraintsDescriptionPath
daSupportsSharedCalendars
_addAccountWithType:name:accountObjectID:
configureAccount:accountChangeItemProvider:withAttributes:
saveSynchronouslyWithError:
updateAccount:
setDaConstraintsDescriptionPath:
setDaSupportsSharedCalendars:
setInactive:
removeFromStore
createAccountWithSaveRequest:withAttributes:
configureAccount:withSaveRequest:withAttributes:
hasPrefix:
hasSuffix:
_createDb
_prepareStatements
dbFilename
location
localizedStandardCompare:
setDbFilename:
_dbQueue
_dbConn
_update
_fetch
_delete
_sweep
_dbFilename
_changed:
setCache:
removeObserver:
_query:
cache
getActivePairedDevice
supportsCapability:
boolValue
canUseDataTransfer
_cache
_setClipping:
initWithDelegate:
initWithService:priority:qos:asMasterStore:options:
setOptions:
setEngineType:
setSendingBufferCap:
setDelegate:queue:
resume:
setNeedsResetSync
maxDeltaRetries
setHasChangesAvailable
okToPerformDeltaSync
currentSession
activityComplete
storeUpdateTimeNs
setStoreUpdateTimeNs:
calendarUpdateTimeNs
setCalendarUpdateTimeNs:
eventUpdateTimeNs
setEventUpdateTimeNs:
array
reminderUpdateTimeNs
setReminderUpdateTimeNs:
reminderStore
_deleteSYObject:eventStore:reminderStore:
isSending
_retrySession:
valueForKey:
setPerfomanceTracker:
bumpFaultsAndScheduleRetry
setEventChangeObserver:
setReminderChangeObserver:
setNekEventStore:
setNekReminderStore:
initWithFIFOLength:name:
fetchEverythingIntoPipe:
setChangeSupplier:
setStatsTracker:
fetchNightlyIntoPipe:
_clearToDeltaSync
fetchChangesIntoPipe:
isTruncated
terminateIfNotFinished
isEffectivelyEmpty
completion
scheduleRetry
changeSupplier
sealCompletions
setChangeCount:
changeCount
statsTracker
setFullSessionTimeout:
engineType
fullSessionTimeout
setPerMessageTimeout:
setMaxConcurrentMessages:
perMessageTimeout
setSessionMetadata:
resetLocalCalendarCache
setSerializer:
setCanRestart:
setCanRollback:
targetIsConnected
_nextDelay:
fireIn:
fireOnConnection
_retrySync
perfomanceTracker
cpuTimeMs
_shouldFakeFailure
setError:
validationObject
error
changeObserverDidObserveChanges:
changeObserverDidObserveTruncation:
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
service:targetDeviceProximityChanged:
service:targetDeviceConnectionChanged:
serviceDidPairDevice:
serviceDidUnpairDevice:
activityRun:
activityIdentifier:
activitySubsystem:
activity:customizeCriteria:
_canUseDataTransfer
createOrUpdateSYObject:eventStore:reminderStore:session:
deleteSYObject:eventStore:reminderStore:
isCurrentlySyncing
_syServiceLock
_syncService
_wasUsingDataTransfer
_sessionIdleQueue
_eventStore
_reminderStore
_syncSession
_activity
_completion
_isNightlySync
_resetTimeoutTracker
_deltaTimeoutTracker
_nightlyTimeoutTracker
_mutatorListener
_statusReporter
_sessionDepth
_isCurrentlySyncing
initWithList:useAttributes:
bytes
resetFetchCursor
dataWithBytes:length:
bindUint64:
fetchUint64
rawDb
bindPosition
fetchPosition
columnCount
bindCount
_parsed
_rawDb
setSyncID:
addMetadataKeys:
addMetadataValues:
syncID
hasTaskCompletionDate
hasICSData
hasLzfseICSData
iCSData
hasOldIdentifier
metadataKeys
metadataValues
isHolidyCalendar
publishedURL
selfIdentityAddress
ownerIdentityAddress
setIsHolidyCalendar:
URLWithString:
setPublishedURL:
setSelfIdentityAddress:
setOwnerIdentityAddress:
setIsDefaultLocalCalendar:
setInvitationChangedPropertyFlagDate:
setInvitationChangedPropertyFlagTime:
setInvitationChangedPropertyFlagTitle:
setInvitationChangedPropertyFlagLocation:
setInvitationChangedPropertyFlagAttendeeComment:
setInvitationChangedPropertyFlagAttendeeStatus:
invitationChangedPropertyFlagDate
hasInvitationChangedPropertyFlagDate
invitationChangedPropertyFlagTime
hasInvitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
hasInvitationChangedPropertyFlagTitle
invitationChangedPropertyFlagLocation
hasInvitationChangedPropertyFlagLocation
invitationChangedPropertyFlagAttendeeComment
hasInvitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
hasInvitationChangedPropertyFlagAttendeeStatus
condition
fifo
terminated
finished
setFifo:
setFinished:
removeObjectAtIndex:
conditionalPop:
setTerminated:
finish
terminate
setLength:
setCondition:
_finished
_terminated
_error
_length
_condition
_fifo
isEmpty
changeSetForEvent
changeSetForReminder
setInserts:
setDeletes:
deletionMap
setDeletionMap:
moveMap
setMoveMap:
changeNumber
setChangeNumber:
setCompletion:
truncated
setTruncated:
_truncated
_inserts
_updates
_deletes
_deletionMap
_moveMap
_changeNumber
setStoreWrapper:
setCalendarWrapper:
setICSWrapper:
setDeletionWrapper:
setValidationWrapper:
setPacketNumber:
setHasPacketNumber:
hasPacketNumber
hasStoreWrapper
hasCalendarWrapper
hasICSWrapper
hasDeletionWrapper
hasValidationWrapper
hasSetReminderComplete
hasSetParticipantStatus
hasSetAlarmSnooze
hasDeleteEvent
packetNumber
storeWrapper
calendarWrapper
iCSWrapper
deletionWrapper
validationWrapper
_calendarWrapper
_deleteEvent
_deletionWrapper
_iCSWrapper
_packetNumber
_setAlarmSnooze
_setParticipantStatus
_setReminderComplete
_storeWrapper
_validationWrapper
_isHolidyCalendar
_publishedURL
_selfIdentityAddress
_ownerIdentityAddress
isDegenerate:
setValidationObject:
syncSession:enqueueChanges:error:
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
syncSession:successfullySynced:
progressLiar
setProgressLiar:
syncKind
setSyncKind:
_isFirst
_changeQueue
_ct_logger
_preSyncCensus
_changeSupplier
_progressLiar
_changeCount
_syncKind
_statsTracker
_perfomanceTracker
_validationObject
_storeUpdateTimeNs
_calendarUpdateTimeNs
_eventUpdateTimeNs
_reminderUpdateTimeNs
session
setSession:
_session
hasIdentifier
setHasIsDefaultLocalCalendar:
hasIsDefaultLocalCalendar
nekEventStore
nekReminderStore
shouldSendReminder:
eventChangeObserver
eventDatabaseController
freshStoreAndChangeNumber:
moveChangeNumber:store:
addCompletion:
reminderChangeObserver
changeStateMap
saveChangeTrackingStateMap:
allSourcesInto:
allCloudKitAccountsInto:
allCalendarsInto:
allListsInto:
allEventsInto:filter:window:
allRemindersInto:filter:window:
initWithBlock:
setBackgroundThread:
backgroundThread
fetchEventChangeSet
fetchReminderChangeSet
markAsNotEffectivelyEmpty
markAsTruncated
storeWrapperForCloudKitAccount:pipe:
listWrappersForChangeSet:pipe:
remindersWrappersForChangeSet:skipAccountDeletions:pipe:
_eventChangeObserver
_reminderChangeObserver
_nekEventStore
_nekReminderStore
_backgroundThread
fetchListWithObjectID:error:
listInStore:withNEKCalendarID:
hasSelfAttendeeEmail
setHasEntityType:
hasEntityType
setHasInvitationChangedPropertyFlagDate:
setHasInvitationChangedPropertyFlagTime:
setHasInvitationChangedPropertyFlagTitle:
setHasInvitationChangedPropertyFlagLocation:
setHasInvitationChangedPropertyFlagAttendeeComment:
setHasInvitationChangedPropertyFlagAttendeeStatus:
hasSelfAttendeeUUID
hasSelfOrganizerEmail
hasSelfOrganizerUUID
setHasAttendeeStatus:
hasAttendeeStatus
setHasLocationPredictionState:
hasLocationPredictionState
_invitationChangedPropertyFlagAttendeeComment
_invitationChangedPropertyFlagAttendeeStatus
_invitationChangedPropertyFlagDate
_invitationChangedPropertyFlagLocation
_invitationChangedPropertyFlagTime
_invitationChangedPropertyFlagTitle
daIsReadOnly
daIsImmutable
ekColor
daSymbolicColorName
daHexString
daDisplayOrder
daExternalIdentificationTag
daSyncToken
daPushKey
addListWithName:toAccountChangeItem:listObjectID:
configureList:listChangeItemProvider:withAttributes:
updateList:
setDaIsReadOnly:
setDaIsImmutable:
setDaIsNotificationsCollection:
initWithDASymbolicColorName:daHexString:
setColor:
setDaDisplayOrder:
setDaExternalIdentificationTag:
setDaSyncToken:
setDaPushKey:
createListInAccount:withSaveRequest:withAttributes:
configureList:withSaveRequest:withAttributes:
cpuTime
setDirtyMemory:
setCpuTime:
setWallTime:
_wallTime
_cpuTime
_dirtyMemory
setHasSnoozeAmount:
hasSnoozeAmount
hasAlarmIdentifier
hasItemIdentifier
hasStoreIdentifier
snoozeAmount
alarmIdentifier
itemIdentifier
_snoozeAmount
_alarmIdentifier
_itemIdentifier
readOnly
isSubscribedHolidayCalendar
allowsScheduling
isDefaultSchedulingCalendar
publishURL
externalIDTag
allowEvents
allowReminders
subcalAccountID
unlocalizedTitle
setReadOnly:
setHidden:
setInbox:
setNotificationsCollection:
setSharingInvitation:
setSubscribed:
setSubscribedHolidayCalendar:
setFamilyCalendar:
setAllowsScheduling:
setIsDefaultSchedulingCalendar:
setPublishURL:
setExternalIDTag:
setSubcalAccountID:
degenerateChange
dataFromChange:
changeFromData:ofType:
dataWithSYObject:
SYObjectWithData:
encodeSYChangeForBackwardCompatibility:protocolVersion:
decodeChangeData:fromProtocolVersion:ofType:
beginObservingChanges
registerForDetailedChangeTracking:
stopObservingChanges
weakEventDatabaseController
setLastSequenceNumber:
databaseDidChange
_changeTrackingWasPurged:
removeObserver:name:object:
notifyForDatabaseUpdatesIfNeeded
notifyForDatabaseUpdates
eks_eventStoreFor:
allowedEntityTypes
initWithCalendarRef:
predicateForMasterEventsInCalendars:
_masterEventsToSync
predicateForRemindersInCalendars:
lastSequenceNumber
_fetchChangesInto:from:inside:
markChangedObjectIDsConsumedUpToToken:
previousDefaultTaskCalendar
previousDefaultEventCalendar
setPreviousDefaultTaskCalendar:
setPreviousDefaultEventCalendar:
fetchChangedObjectIDsSinceToken:resultHandler:
_sequenceKey
_taskCalendarKey
_eventCalendarKey
_sawSeqnoFailure
_lastSequenceNumber
_weakEventDatabaseController
numberWithLong:
mapTableWithKeyOptions:valueOptions:
saveRequests
_saveEventStore:
saveRequestsNeedPurgeDeletedObjectsAfterSave
setSaveRequestsNeedPurgeDeletedObjectsAfterSave:
saveRequestForStore:needsPurgeDeletedObjectsAfterSave:
initWithStore:
setAuthor:
removeDeletableLists:
removeDeletableAccounts:
_deletableAccountsForStore:
deleteAccount:
fetchAccountsWithError:
filteredArrayUsingPredicate:
_deletableListsForStore:
deleteList:
removeAllRemindersInList:
saveRequestForStore:
fetchRemindersWithError:
updateReminder:
removeFromList
addObjectsFromArray:
fetchDefaultListWithError:
_updateAccount:withSourceWrapper:store:
_createAccountForWrapper:store:
_updateList:withCalendarWrapper:
_createListForWrapper:store:
_checkAndSetDefaultList:calendarWrapper:store:
_deleteAccountWithIdentifier:store:
_deleteListWithIdentifier:store:
_deleteReminderWithIdentifier:store:
applySidePropertiesToReminderChangeItem:withWrapper:session:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
handleUpdatedReminderFromGizmo:withSaveRequest:withWrapper:
orderedSet
reverseObjectEnumerator
fetchRemindersWithDACalendarItemUniqueIdentifiers:inList:error:
deduplicateICSWrappers:
listCacheForStore:wrappers:
reminderCacheForStore:wrappers:
handleReminderWithUniqueIdentifierFromGizmo:saveRequest:list:wrapper:
_ensureReminderInList:saveRequest:inICSWrapper:
importRemindersFromICSData:insertIntoListChangeItem:error:
updateReminderChangeItem:fromICSData:isNew:withOptions:error:
handleNewReminderChangeItem:withWrapper:session:
addReminderChangeItem:
arrayWithCapacity:
fetchAccountsWithObjectIDs:error:
batchedEnumerateForChangeSet:changeType:forEntitiesOfClass:withFetchBlock:withBlock:
fetchListsWithObjectIDs:error:
fetchRemindersWithObjectIDs:error:
batchedEnumerateAccountsForStore:changeSet:changeType:withBlock:
wrapperForList:
batchedEnumerateListsForStore:changeSet:changeType:withBlock:
deletionWrappersForChangeSet:deletedReminderAndListMapping:skipAccountDeletions:pipe:
ICSWrappersForChangeSet:movedReminderAndListMapping:pipe:
wrapperForReminder:oldListIdentifier:
batchedEnumerateRemindersForStore:changeSet:changeType:withBlock:
wrapperForList:useAttributes:
removeFromParent
daemonUserDefaults
preferredDefaultListID
setPreferredDefaultListID:
getDefaultListForStore:
deleteReminder:
setSaveRequests:
_saveRequestsNeedPurgeDeletedObjectsAfterSave
_saveRequests
metadataKeysCount
clearMetadataKeys
metadataKeysAtIndex:
metadataValuesCount
clearMetadataValues
metadataValuesAtIndex:
metadataKeysType
metadataValuesType
setHasCalendarItemCount:
hasCalendarItemCount
hasSyncID
setHasTaskCompletionDate:
hasNuevoIdentifier
setMetadataKeys:
setMetadataValues:
_iCSData
_metadataKeys
_metadataValues
_syncID
_completions
_isTruncated
_isEffectivelyEmpty
hasEventIdentifier
hasEventTitle
setHasEventStart:
hasEventStart
hasCalendarTitle
setHasSpan:
hasSpan
eventIdentifier
eventTitle
eventStart
calendarTitle
span
_eventStart
_calendarTitle
_eventIdentifier
_eventTitle
_span
weakReminderDatabaseController
storeDidChange
storeDidChangeNotificationName
_remindersPendingChangesStateKey
reminderDatabaseController
enumerateAllRemindersWithBlock:
loadChangeTrackingStateMapWithStore:
deletedAccountIDsFromLoadedMap
hasChangeTrackingTokens
beginTrackingFromEpochForStore:clientName:
_fetchChangesInto:from:inside:outDeletedReminderAndListMapping:outMovedReminderAndListMapping:
orderedSetWithCapacity:
changedObjectID
updatedProperties
previousDefaultReminderListID
setPreviousDefaultReminderListID:
fetchChangedObjectIDs:
initWithBase64EncodedString:options:
initWithData:store:clientName:
persistToData:
_reminderListKey
beginTrackingFromNowForStore:clientName:
_changeTrackingStateMap
_weakReminderDatabaseController
setChangeTracking:
setLastChangeToken:
changeTracking
lastChangeToken
initWithChangeTracking:lastChangeToken:
_changeTracking
_lastChangeToken
unarchivedObjectOfClass:fromData:error:
_beginTrackingFromLoadedStateForStore:clientName:
internalTransactionAuthorKeysToExclude
archivedDataWithRootObject:requiringSecureCoding:error:
transactionAuthorsToExclude
provideChangeTrackingForAccountID:clientName:transactionAuthorKeysToExclude:
universalToken
_beginTrackingForStore:clientName:verifyAccountsBlock:changeTrackingStateFromAccountBlock:
currentChangeTokenWithError:
setWithCapacity:
fetchAccountsIncludingInactive:error:
filterAccountToSync:
fetchHistoryAfterToken:error:
transaction
accountID
fetchAuxiliaryChangeInfosOfType:withChangeObject:error:
auxiliaryChangeInfos
reminderIdentifier
oldListIdentifier
lastChangeTokenForAccountID:
setChangeToken:forAccountID:
decodeObjectOfClasses:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
_loadedChangeTokenMap
_deletedAccountIDsFromLoadedMap
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
initWithEKOptions:
initWithKeyOptions:valueOptions:capacity:
setActivityCondition:
setLog:
_checkIn
activityCondition
_setActivity:
setRunTransaction:
setEstimatedFireDate:
_setState:
setLastFired:
dateWithTimeIntervalSinceNow:
estimatedFireDate
_baseCriteria
activity
timeIntervalSinceNow
fireNever
runTransaction
inActivity
shouldDefer
lastFired
setActivity:
_lastFired
_runTransaction
_activityCondition
_estimatedFireDate
_log
hasSyncId
setHasStatus:
hasStatus
_status
changeObserver.keyqueue
com.apple.eventkitsync.changeobserver.%@
hash
superclass
description
T@"NSString",R,C
delegate
T@"<NEKChangeObserverDelegate>",W,N
clientName
T@"NSString",R,N
T@"<NEKChangeObserverDelegate>",W,N,V_delegate
NEKDatabaseChangedExternallyNotification
NEKChangeLogWasPurged
NEKDefaultCalendarChanged
<NEKICSWrapperMetadata (%p): 
  entityType: %d
  identifier: %@
  externalID: %@
  selfAttendeeEmail: %@
  selfAttendeeUUID: %@
  selfOrganizerEmail: %@
  selfOrganizerUUID: %@
  attendeeStatus: %d
  invitationStatus: %d
  properInvitationStatus: %d
  hasProperInvitationStatus: %d
  locationPredictionState: %d
  dateChanged: %d
  timeChanged: %d
  titleChanged: %d
  locationChanged: %d
  attendeeComment: %d
  attendeeStatusFlag: %d
  startDate: %@
entityType
TQ,N,V_entityType
selfAttendeeEmail
T@"NSString",&,N,V_selfAttendeeEmail
selfAttendeeUUID
T@"NSString",&,N,V_selfAttendeeUUID
selfOrganizerEmail
T@"NSString",&,N,V_selfOrganizerEmail
selfOrganizerUUID
T@"NSString",&,N,V_selfOrganizerUUID
attendeeStatus
Tq,N,V_attendeeStatus
invitationStatus
TQ,N,V_invitationStatus
properInvitationStatus
TQ,N,V_properInvitationStatus
hasProperInvitationStatus
TB,N,V_hasProperInvitationStatus
identifier
T@"NSString",C,N,V_identifier
dateChanged
TB,N,V_dateChanged
timeChanged
TB,N,V_timeChanged
titleChanged
TB,N,V_titleChanged
locationChanged
TB,N,V_locationChanged
attendeeComment
TB,N,V_attendeeComment
attendeeStatusFlag
TB,N,V_attendeeStatusFlag
startDate
T@"NSDate",&,N,V_startDate
externalID
T@"NSString",C,N,V_externalID
locationPredictionState
Tq,N,V_locationPredictionState
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@; title='%@'>
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@>
<%@ %p, calendarIdentifier = %@; oldCalendarIdentifier = %@; count = %@>
objectIdentifier
sequencer
changeType
Tq,R,N
properties
T@"NSMutableDictionary",&,N,V_properties
calendarItemCount
Tq,N,V_calendarItemCount
syncId
T@"NSString",C,N,V_syncId
ICSData
T@"NSData",&,N
lzfseICSData
T@"NSData",&,N,V_lzfseICSData
calendarIdentifier
T@"NEKCalendarID",&,N,V_calendarIdentifier
oldCalendarIdentifier
T@"NSString",&,N,V_oldCalendarIdentifier
oldIdentifier
T@"NSString",&,N,V_oldIdentifier
nuevoIdentifier
T@"NSString",&,N,V_nuevoIdentifier
title
T@"NSString",R,N,V_title
taskCompleted
TB,N,GisTaskCompleted,V_taskCompleted
taskCompletionDate
Td,N,V_taskCompletionDate
displayOrder
Tq,N,V_displayOrder
isReminderWithLocation
TB,N,V_isReminderWithLocation
startDateMap
T@"NSDictionary",&,N,V_startDateMap
NDTSetDefaultPriority
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-367/NanoDaemonToolkit/NanoDaemonToolkit/NDTQueueFactory.m
qos != QOS_CLASS_UNSPECIFIED
NDTSetElevatedPriority
%@.mean
%@.variance
%@.failureTimeout
name
T@"NSString",&,N,V_name
environment
T@"NEKEnvironment",W,N,V_environment
firstTimeEver
TB,N,V_firstTimeEver
variance
Td,N,V_variance
failTimeout
Td,N,V_failTimeout
mean
Td,N,V_mean
stddev
Td,N
alpha
Td,N,V_alpha
failureScaling
Td,N,V_failureScaling
sigmaSpan
Td,N,V_sigmaSpan
minTimeout
Td,N,V_minTimeout
maxTimeout
Td,N,V_maxTimeout
GARBAGE:%@
EventKitSync purgeDeleted
v16@?0@"NSError"8
dbFileManager
T@"NEKDatabaseFileManager",R,N
tinyStore
T@"NEKTinyStore",R,N
recordMap
T@"NEKRecordMap",R,N
seenMap
T@"NEKSeenMap",R,N
syncCoordinator
T@"NEKSyncCoordinator",R,N
syncController
T@"NEKSyncController",&,N
daemon
T@"NEKDaemon",&,N,V_daemon
analytics
T@"NEKAnalytics",&,N,V_analytics
isReminderKitEnabled
TB,R,N
<%@ %p, source = %@, calendarIdentifier = %@>
T@"NSString",&,N,V_calendarIdentifier
storeIdentifier
T@"NEKSourceID",R,N,V_storeIdentifier
attributes
T@"NEKCalendarAttributes",R,N,V_attributes
isDefaultTaskCalendar
TB,N,V_isDefaultTaskCalendar
isDefaultEventCalendar
TB,N,V_isDefaultEventCalendar
watch.eventsync
com.apple.eventkitsync
%@ %@
persistentID
isLocalStore
hasPersistentID
T@"NSString",&,N,V_persistentID
hasIsLocalStore
TB,N
TB,N,V_isLocalStore
+[NEKSourceID(Reminder) accountForStore:identifier:]
com.apple.ndt.stmt.begin
com.apple.ndt.stmt.commit
com.apple.ndt.stmt.rollback
/tmp/pleasePassAPath
NDTSQFile.%@
%04d%02d%02d-%02d%02d%02d
:memory:
mobile
NDTSQOpenDatabase
Cannot open database for writing
pragma journal_mode=wal
_SQ_Versions
SQLExecuteError
Error in executing SQL
i8@?0
NDTSQExecuteSql
Error parsing or executing SQL in executeSql:
NDTSQParse
Error parsing SQL in parseSql:andExecute:
Error executing SQL in parseSql:andExecute:
BEGIN
COMMIT
ROLLBACK
Error parsing SQL in parseMultipleSql:andExecute:
Error executing SQL in parseMultipleSql:andExecute:
T^{sqlite3=},N,V_db
pathTemplate
T@"NSString",&,N,V_pathTemplate
path
T@"<NDTSQFileDelegate>",W,N,V_delegate
NDTTimedCache
timer
T@"NSObject<OS_dispatch_source>",&,N,V_timer
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
expiration
Td,N,V_expiration
action
T@?,C,N,V_action
usedRecently
TB,N,V_usedRecently
sourceIdentifier
hasSourceIdentifier
T@"NEKPBSourceID",&,N,V_sourceIdentifier
hasCalendarIdentifier
hasAttributes
T@"NEKPBCalendarAttributes",&,N,V_attributes
hasIsDefaultTaskCalendar
hasIsDefaultEventCalendar
hasOldCalendarIdentifier
changeObserver
T@"<NEKChangeObserver>",&,N,V_changeObserver
UUID
isReadonly
isHidden
isImmutable
isInbox
isNotificationsCollection
isSharingInvitation
isSubscribed
isHolidayCalendar
isFamilyCalendar
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isSchedulingProhibited
isDefaultCalendarForStore
type
digest
symbolicColorName
colorString
sharingStatus
sharedOwnerName
sharedOwnerAddress
sharingInvitationResponse
publishedURLString
canBePublished
canBeShared
isPublished
externalIdentificationTag
syncToken
externalModificationTag
externalRepresentation
supportedEntityTypes
hasBeenAlerted
notes
subCalAccountID
pushKey
selfIdentityDisplayName
selfIdentityEmail
selfIdentityAddressString
selfIdentityFirstName
selfIdentityLastName
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityAddressString
ownerIdentityFirstName
ownerIdentityLastName
hasUUID
uUID
T@"NSString",&,N,V_uUID
hasTitle
T@"NSString",&,N,V_title
hasIsReadonly
TB,N,V_isReadonly
hasIsHidden
TB,N,V_isHidden
hasIsImmutable
TB,N,V_isImmutable
hasIsInbox
TB,N,V_isInbox
hasIsNotificationsCollection
TB,N,V_isNotificationsCollection
hasIsSharingInvitation
TB,N,V_isSharingInvitation
hasIsSubscribed
TB,N,V_isSubscribed
hasIsHolidayCalendar
TB,N,V_isHolidayCalendar
hasIsFamilyCalendar
TB,N,V_isFamilyCalendar
hasIsIgnoringEventAlerts
TB,N,V_isIgnoringEventAlerts
hasIsIgnoringSharedCalendarNotifications
TB,N,V_isIgnoringSharedCalendarNotifications
hasIsSchedulingProhibited
TB,N,V_isSchedulingProhibited
hasIsDefaultCalendarForStore
TB,N,V_isDefaultCalendarForStore
hasType
T@"NSString",&,N,V_type
hasDigest
T@"NSData",&,N,V_digest
hasSymbolicColorName
T@"NSString",&,N,V_symbolicColorName
hasColorString
T@"NSString",&,N,V_colorString
hasDisplayOrder
Ti,N,V_displayOrder
hasSharingStatus
TQ,N,V_sharingStatus
hasSharedOwnerName
T@"NSString",&,N,V_sharedOwnerName
hasSharedOwnerAddress
T@"NSString",&,N,V_sharedOwnerAddress
hasSharingInvitationResponse
TQ,N,V_sharingInvitationResponse
hasPublishedURLString
T@"NSString",&,N,V_publishedURLString
hasCanBePublished
TB,N,V_canBePublished
hasCanBeShared
TB,N,V_canBeShared
hasIsPublished
TB,N,V_isPublished
hasExternalID
T@"NSString",&,N,V_externalID
hasExternalIdentificationTag
T@"NSString",&,N,V_externalIdentificationTag
hasSyncToken
T@"NSString",&,N,V_syncToken
hasExternalModificationTag
T@"NSString",&,N,V_externalModificationTag
hasExternalRepresentation
T@"NSData",&,N,V_externalRepresentation
hasSupportedEntityTypes
TQ,N,V_supportedEntityTypes
hasInvitationStatus
hasHasBeenAlerted
TB,N,V_hasBeenAlerted
hasNotes
T@"NSString",&,N,V_notes
hasSubCalAccountID
T@"NSString",&,N,V_subCalAccountID
hasPushKey
T@"NSString",&,N,V_pushKey
hasSelfIdentityDisplayName
T@"NSString",&,N,V_selfIdentityDisplayName
hasSelfIdentityEmail
T@"NSString",&,N,V_selfIdentityEmail
hasSelfIdentityAddressString
T@"NSString",&,N,V_selfIdentityAddressString
hasSelfIdentityFirstName
T@"NSString",&,N,V_selfIdentityFirstName
hasSelfIdentityLastName
T@"NSString",&,N,V_selfIdentityLastName
hasOwnerIdentityDisplayName
T@"NSString",&,N,V_ownerIdentityDisplayName
hasOwnerIdentityEmail
T@"NSString",&,N,V_ownerIdentityEmail
hasOwnerIdentityAddressString
T@"NSString",&,N,V_ownerIdentityAddressString
hasOwnerIdentityFirstName
T@"NSString",&,N,V_ownerIdentityFirstName
hasOwnerIdentityLastName
T@"NSString",&,N,V_ownerIdentityLastName
TinyStore
tinyStore.sqlitedb
tinyStore.plist
com.apple.eventkitsync.changeobserver.sequencenumber
FaultCount
RetryMustBeReset
heardFromPhone
MigrationSyncCount
eventCalendarId
taskCalendarId
windowEnd
windowStart
deltaSync.failureTimeout
deltaSync.mean
deltaSync.variance
resetSync.failureTimeout
resetSync.mean
resetSync.variance
nightlySync.failureTimeout
nightlySync.mean
nightlySync.variance
msgType
data
T@"NSData",&,N,V_data
T@"NSString",&,N,V_path
T@"NSString",&,N,V_msgType
responseIdentifier
T@"NSString",&,N,V_responseIdentifier
NDTMessaging
-[NDTMessaging sendMessage:responseHandler:completion:]
v8@?0
-[NDTMessaging reply:to:completion:]
-[NDTMessaging service:account:incomingData:fromID:context:]
-[NDTMessaging service:account:incomingResourceAtURL:metadata:fromID:context:]
TQ,R
T#,R
debugDescription
idsOptions
T@"NSDictionary",&,N,V_idsOptions
/tmp/verifier_data.XXXXXX
%s/%@
ValidationWrapper
cvAlertEnabled
com.apple.Bridge.CalendarSyncDebug
yyyyMMdd/HHmm
<%@:%p start:%@ end:%@ masterCount:%d occurrenceCount:%d>
Calendar validation failure. Please file a radar against "EventKitSync | watchOS"
Sync validation failure
start
T@"NSDate",&,N,V_start
T@"NSDate",&,N,V_end
masterCount
Tq,N,V_masterCount
occurrenceCount
Tq,N,V_occurrenceCount
showAlert
TB,N,V_showAlert
select value from %@ where key = ?
insert or replace into %@ (key, value) values (?, ?)
create table if not exists %@ (key text unique, value text)
NDTSQKeyValueStore:%@
i16@?0@"NDTSQStatement"8
rowID
Tq,N,V_rowID
Tq,N,V_entityType
entityRowID
Tq,N,V_entityRowID
T@"NSString",C,N,V_UUID
SELECT rowId, entityType, entityRowID, UUID FROM record WHERE entityType = ? AND entityRowID = ?;
UPDATE record SET UUID=?, timestamp=? where rowId=?;
INSERT INTO record(entityType, entityRowID, UUID, timestamp) VALUES(?, ?, ?, ?);
DELETE FROM record WHERE entityType = ? AND entityRowID = ?
PRAGMA user_version
PRAGMA user_version = 1
CREATE TABLE IF NOT EXISTS record(rowid INTEGER PRIMARY KEY ASC, entityType INT, entityRowID INT, UUID TEXT, timestamp INT)
CREATE UNIQUE INDEX IF NOT EXISTS entityIndex ON record (entityType, entityRowID)
ALTER TABLE record ADD COLUMN timestamp INT DEFAULT NULL;
CREATE VIEW IF NOT EXISTS record_utc AS SELECT datetime(timestamp, 'unixepoch') stamp, entityType,  entityRowID, uuid FROM record ORDER BY timestamp, entityType, uuid
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-367/NEKSyncBundle/Models/_NEKRecordMapImpl.m
-[_NEKRecordMapSqliteImpl _beginTransaction]
-[_NEKRecordMapSqliteImpl commit:]
EventKitSync
-[_NEKRecordMapSqliteImpl reset]
-[_NEKRecordMapSqliteImpl removeAllRecords]
DELETE FROM record
SELECT COUNT(*) FROM record
00000000/0000
/System/Library/LaunchDaemons/com.apple.SpringBoard.plist
stores
T@"NSArray",&,N,V_stores
calendars
T@"NSArray",&,N,V_calendars
tasks
T@"NSArray",&,N,V_tasks
events
T@"NSArray",&,N,V_events
com.apple.eventkitsync.nekeventstore
com.apple.eventkitsync.dbidleblocks
com.apple.eventkitsync.pipe
SaveDB
-[NEKEventStore removeAllRecordsInCalendar:]
-[NEKEventStore getDefaultTaskCalendar:defaultEventCalendar:store:]
updateSource:
updateCalendar:
updateICS:
deleteItemWithIdentifier:
-[NEKEventStore deleteItem:store:]
-[NEKEventStore handleNewEntity:withWrapper:session:]
-[NEKEventStore handleUpdatedItemFromGizmo:type:withWrapper:identifier:]
/RID=
updateMasterEvent:blah...
%@%@%llu
-[NEKEventStore handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:]
-[NEKEventStore handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:]
-[NEKEventStore performUpdateWithICSWrappers:store:session:]_block_invoke
v16@?0@"NSString"8
-[NEKEventStore performUpdateWithICSWrappers:store:session:]
-[NEKEventStore _deleteCalendarItemsInICSWrapperFromOldCalendar:store:]_block_invoke
-[NEKEventStore _deleteCalendarItemsMovedToCalendar:inICSWrapper:]_block_invoke
v28@?0@"EKObjectID"8i16^B20
ICSWrappersForChangeSet(roll)
ICSWrappersForChangeSet(roll2)
-[NEKEventStore ICSWrappersForChangeSet:pipe:]_block_invoke
%@%@%@
-[NEKEventStore _checkAndSetDefaultCalendar:calendarWrapper:store:]
-[NEKEventStore _createCalendarForWrapper:store:]
com.apple.NanoCalendar.PrefSync.PrefMigrationSeed
com.apple.mobilecal
InviteeDeclineAlerts-rebroadcast
ShowDeclinedEvents-rebroadcast
enableTravelAdvisoriesForAutomaticBehavior
com.apple.calendar.database.preference.notification.enableTravelAdvisoriesForAutomaticBehavior
com.apple.NanoCalendar
preferences_observer
LastDeselectedCalendarSyncHashes
LastDeselectedCalendarSyncIdentifiers
TimeZoneCityArray
kCalTimeZonePrefChangedDistributedNotification
overlayCalendarID
CalEventDeclineEventPrefChangedRebroadcast
CalEventShowInviteeDeclinesPrefChangedRebroadcast
CalEventDeclineEventPrefChanged
CalEventShowInviteeDeclinesPrefChanged
v32@?0@"NSString"8@"NSSet"16^B24
B16@?0@"EKObjectID"8
v20@?0@"NSArray"8i16
CREATE TABLE IF NOT EXISTS analytics (hour INT PRIMARY KEY, deltas INT, resets INT, failures INT)
INSERT OR REPLACE INTO analytics (deltas, resets, failures, hour) values (?,?,?,?)
SELECT deltas, resets, failures FROM analytics WHERE hour = ?
DELETE FROM analytics WHERE hour = ?
endDate
hasStartDate
Td,N,V_startDate
hasEndDate
Td,N,V_endDate
hasMasterCount
TQ,N,V_masterCount
hasOccurrenceCount
TQ,N,V_occurrenceCount
hasShowAlert
backchannel
com.apple.private.alloy.eventkitmutation
setRemCom
v16@?0@"NDTMessage"8
setParStt
setAlmSno
deleEvent
internal_disablePhoneMutator
com.apple.EventKitSync
v24@?0@"NSError"8@"NSString"16
<%@ %p; type=%@; identifier=%@; calendarIdentifier=%@>
Calendar
Event
Reminder
Source
None
watch
PreferencesObserver
com.apple.eventkitsyncd.daemon
com.apple.eventkitsyncd.notifications
com.apple.notifyd.matching
HandleNotifications
_CalDatabaseChangedNotification
com.apple.reminderkit.storeChanged
EventKitSyncTesting
com.apple.eventkitsync.force
com.apple.eventkitsync.zapversion
com.apple.datamigrator.migrationDidFinish
SignificantTimeChangeNotification
CalDatabaseIdleChangeTrackingClientWasPurgedNotification
CalDefaultCalendarChangedNotification
com.apple.eventkitsync.analytics.flush
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.eventkitsync.analytics.daily
-[NEKDaemon _registerForNotifications]
testWindowStart
testWindowEnd
16A0
spanStart
Td,N,V_spanStart
spanEnd
Td,N,V_spanEnd
taskCutoff
Td,N,V_taskCutoff
timeZone
T@"NSTimeZone",&,N,V_timeZone
T@"NSDate",&,N,V_endDate
taskCutoffDate
T@"NSDate",&,N,V_taskCutoffDate
syncWindow
v32@?0@"EKObjectID"8Q16^B24
@?<v@?@"EKObjectID"Q^B>16@?0@?<v@?@"NSString"@"EKSource"Q^B>8
v32@?0@"REMObjectID"8Q16^B24
@?<v@?@"REMObjectID"Q^B>16@?0@?<v@?@"NSString"@"EKSource"Q^B>8
v40@?0@"NSString"8@"EKSource"16Q24^B32
ekEventStore
T@"EKEventStore",R,N,V_ekEventStore
insertedOrUpdatedSources
T@"NSSet",R,N,V_insertedOrUpdatedSources
deletedSourcesIDs
T@"NSSet",R,N,V_deletedSourcesIDs
-[NEKSourceAttributes(Event) initWithSource:]
CloudKit
non-CloudKit
B24@?0@"NSString"8@"NSString"16
B24@?0@"NSNumber"8@"NSNumber"16
isFacebook
com.apple.nanodaemontoolkit
[VOID]
(nil)
>%08x<
com.apple.logging.obfuscation
obfuscate
connection
T@"NSXPCConnection",&,N,V_connection
rpcEndpoint
T@"NEKRPCEndpoint",&,N,V_rpcEndpoint
com.apple.NanoRemoteEventKit.Mutator
com.apple.NEKMutatorListener.xpc
RecordMap.db
com.apple.eventkitsync.recordmap
isComplete
calendarName
reminderTitle
externalIdentifier
hasIsComplete
TB,N,V_isComplete
hasCalendarName
T@"NSString",&,N,V_calendarName
hasReminderTitle
T@"NSString",&,N,V_reminderTitle
hasExternalIdentifier
T@"NSString",&,N,V_externalIdentifier
>>LOCAL<<
Default local calendar
UUID: %@
<%@ %p; %@>
T@"NSString",R,N,V_identifier
isDefaultLocalCalendar
TB,R,N,V_isDefaultLocalCalendar
defaultAlarmOffset
isEnabled
usesSelfAttendee
constraintsDescriptionPath
creatorBundleID
creatorCodeSigningIdentity
accountPersistentID
supportsSharedCalendars
allowsTasks
allowsEvents
allowsCalendarAddDeleteModify
onlyCreatorCanModify
snoozeAlarmRequiresDetach
supportsAlarmAcknowledgedDate
hasName
hasDefaultAlarmOffset
TI,N,V_defaultAlarmOffset
TI,N,V_type
hasIsEnabled
TB,N,V_isEnabled
hasIsFacebook
TB,N,V_isFacebook
hasUsesSelfAttendee
TB,N,V_usesSelfAttendee
hasConstraintsDescriptionPath
T@"NSString",&,N,V_constraintsDescriptionPath
hasCreatorBundleID
T@"NSString",&,N,V_creatorBundleID
hasCreatorCodeSigningIdentity
T@"NSString",&,N,V_creatorCodeSigningIdentity
hasAccountPersistentID
T@"NSString",&,N,V_accountPersistentID
hasSupportsSharedCalendars
TB,N,V_supportsSharedCalendars
hasAllowsTasks
TB,N,V_allowsTasks
hasAllowsEvents
TB,N,V_allowsEvents
hasAllowsCalendarAddDeleteModify
TB,N,V_allowsCalendarAddDeleteModify
hasOnlyCreatorCanModify
TB,N,V_onlyCreatorCanModify
hasSnoozeAlarmRequiresDetach
TB,N,V_snoozeAlarmRequiresDetach
hasSupportsAlarmAcknowledgedDate
TB,N,V_supportsAlarmAcknowledgedDate
com.apple.eventkitsync.statusreporter
com.apple.NEKStatusReporter.xpc
listener
T@"NSXPCListener",&,N,V_listener
v24@?0@"NSString"8@"NSUUID"16
%@;%@;%f
Analytics.sqlite
hour
deltas
resets
failures
com.apple.eventkitsync.sessions
store
T@"NEKAnalyticsStore",&,N,V_store
storeFile
T@"NDTSQFile",&,N,V_storeFile
/System/Library/PrivateFrameworks/CDDataAccess.framework
/System/Library/PrivateFrameworks/DataAccess.framework
+[NEKSourceAttributes(Reminder) createAccountWithSaveRequest:withAttributes:]
@"REMAccountChangeItem"8@?0
.plist
SeenMap.db
com.apple.eventkitsync.seenmap
drop table if exists seen
create table if not exists seendata (uuid TEXT, start_date REAL, end_date REAL, location TEXT, primary key (uuid))
B24@?0^^{sqlite3_stmt}8*16
insert or replace into seendata values ( ?, ?, ?, ?);
select start_date, end_date, location from seendata where uuid = ?;
delete from seendata where uuid = ?;
delete from seendata where end_date < ?;
-[NEKSeenMap didShowInvite:withUUID:]
-[NEKSeenMap deleteInviteByUUID:]
-[NEKSeenMap sweep]
dbFilename
T@"NSString",&,N,V_dbFilename
E8CD02C1-B7C0-4E12-8A44-AB54B5F52E5F
E58F9466-0386-4DE7-B6CE-537A8B54C9B7
cache
T@"NSMutableDictionary",&,N,V_cache
canUseDataTransfer
canUseLzfse
NEK.sessionIdle
resetSync
deltaSync
nightlySync
minSessionTimeout
maxSessionTimeout
NEK.SYService
com.apple.private.alloy.eventkitsync
internal_forceFileTransfer
maxDeltaRetries
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-367/NEKSyncBundle/Models/NEKSyncController.m
-[NEKSyncController service:willPreferSession:overSession:]
-[NEKSyncController service:startSession:error:]
sending
receiving
delta
RetryDueDate
ResetSyncPipe
NightlySyncPipe
DeltaSyncPipe
internal_enableLongTimeouts
com.apple.watch.eventkitsync.failuretesting
internal_probabilityOfSyncFailure
internal_retryInterval
com.apple.eventkitsync.retrysync
com.apple.eventkitsync.sessionEnded
-[NEKSyncController service:sessionEnded:error:]
v16@?0@?<v@?>8
 (FAKE)
nightly
reset
T@"<NEKSyncControllerDelegate>",W,N,V_delegate
isCurrentlySyncing
TB,R,N,V_isCurrentlySyncing
eventStore
T@"NEKStore",R,N,V_eventStore
reminderStore
T@"NEKStore",R,N,V_reminderStore
sessionTimeout
sessionPerf
SQLBindError
Index out of bounds
SQLFetchError
Column out of bounds
parsed
T^{sqlite3_stmt=},N,V_parsed
rawDb
T^{sqlite3=},N,V_rawDb
v32@?0@"NSString"8@"NEKPBICSWrapperMetadata"16^B24
v32@?0@"NSString"8Q16^B24
B16@?0@8
<NDTResultsFIFO:%p cap:%d/%d term:%d fin:%d>
length
Tq,N,V_length
condition
T@"NSCondition",&,N,V_condition
fifo
T@"NSMutableArray",&,N,V_fifo
terminated
TB,N,V_terminated
finished
TB,N,V_finished
T@"NSString",R,N,V_name
error
T@"NSError",&,N,V_error
<%@ %p; empty changeset>
<%@ %p; %d inserts; %d updates; %d deletes>
inserts
T@"NSArray",C,N,V_inserts
updates
T@"NSArray",C,N,V_updates
deletes
T@"NSArray",C,N,V_deletes
deletionMap
T@"NSDictionary",&,N,V_deletionMap
moveMap
T@"NSDictionary",&,N,V_moveMap
changeNumber
Tq,N,V_changeNumber
completion
T@?,C,N,V_completion
truncated
TB,N,V_truncated
isEmpty
packetNumber
storeWrapper
calendarWrapper
ICSWrapper
deletionWrapper
validationWrapper
setReminderComplete
setParticipantStatus
setAlarmSnooze
deleteEvent
hasPacketNumber
TI,N,V_packetNumber
hasStoreWrapper
T@"NEKPBSourceWrapper",&,N,V_storeWrapper
hasCalendarWrapper
T@"NEKPBCalendarWrapper",&,N,V_calendarWrapper
hasICSWrapper
iCSWrapper
T@"NEKPBICSWrapper",&,N,V_iCSWrapper
hasDeletionWrapper
T@"NEKPBDeletionWrapper",&,N,V_deletionWrapper
hasValidationWrapper
T@"NEKPBValidationWrapper",&,N,V_validationWrapper
hasSetReminderComplete
T@"NEKPBSetReminderComplete",&,N,V_setReminderComplete
hasSetParticipantStatus
T@"NEKPBSetParticipantStatus",&,N,V_setParticipantStatus
hasSetAlarmSnooze
T@"NEKPBSetAlarmSnooze",&,N,V_setAlarmSnooze
hasDeleteEvent
T@"NEKPBDeleteEvent",&,N,V_deleteEvent
<%@ %p; persistentID=%@; type=%@>
T@"NEKSourceAttributes",R,N,V_attributes
Local
Exchange
CalDAV
MobileMe
Subscribed
Birthdays
Unknown
T@"NSString",C,N,V_title
isHolidyCalendar
TB,N,V_isHolidyCalendar
T@"NSData",C,N,V_digest
T@"NSString",C,N,V_symbolicColorName
T@"NSString",C,N,V_colorString
T@"NSString",C,N,V_sharedOwnerName
T@"NSString",C,N,V_sharedOwnerAddress
publishedURL
T@"NSURL",C,N,V_publishedURL
T@"NSString",C,N,V_externalIdentificationTag
T@"NSString",C,N,V_syncToken
T@"NSString",C,N,V_externalModificationTag
T@"NSData",C,N,V_externalRepresentation
Ti,N,V_supportedEntityTypes
T@"NSString",C,N,V_notes
T@"NSString",C,N,V_subCalAccountID
T@"NSString",C,N,V_pushKey
T@"NSString",C,N,V_selfIdentityDisplayName
T@"NSString",C,N,V_selfIdentityEmail
selfIdentityAddress
T@"NSURL",C,N,V_selfIdentityAddress
T@"NSString",C,N,V_selfIdentityFirstName
T@"NSString",C,N,V_selfIdentityLastName
T@"NSString",C,N,V_ownerIdentityDisplayName
T@"NSString",C,N,V_ownerIdentityEmail
ownerIdentityAddress
T@"NSURL",C,N,V_ownerIdentityAddress
T@"NSString",C,N,V_ownerIdentityFirstName
T@"NSString",C,N,V_ownerIdentityLastName
encoding
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-367/NEKSyncBundle/Models/NEKSyncSession.m
-[NEKSyncSession init]
internal_disableSync
syncSession:applyChanges:(Events)
syncSession:applyChanges:(Reminders)
syncSession:applyChanges:(purge)
changeSupplier
T@"NEKResultsPipe",&,N,V_changeSupplier
progressLiar
T@"NEKProgressLiar",&,N,V_progressLiar
changeCount
Tq,N,V_changeCount
Td,N,V_start
syncKind
T@"NSString",&,N,V_syncKind
T@"NEKEnvironment",&,N,V_environment
statsTracker
T@"NEKStatTracker",&,N,V_statsTracker
perfomanceTracker
T@"NDTPerf",&,N,V_perfomanceTracker
validationObject
T@"NEKValidationWrapper",&,N,V_validationObject
storeUpdateTimeNs
TQ,N,V_storeUpdateTimeNs
calendarUpdateTimeNs
TQ,N,V_calendarUpdateTimeNs
eventUpdateTimeNs
TQ,N,V_eventUpdateTimeNs
reminderUpdateTimeNs
TQ,N,V_reminderUpdateTimeNs
com.apple.eventkitsync.recievedpairedsyncstart
com.apple.eventkitsync.recievedreunionsyncstart
session
T@"PSYServiceSyncSession",&,N,V_session
Local store
persistentID: %@
hasIdentifier
T@"NSString",&,N,V_identifier
hasIsDefaultLocalCalendar
TB,N,V_isDefaultLocalCalendar
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-367/NEKSyncBundle/Models/NEKResultsFetcher.m
-[NEKResultsFetcher fetchEverythingIntoPipe:]
B16@?0@"EKCalendarItem"8
B16@?0@"REMReminder"8
-[NEKResultsFetcher fetchEverythingIntoPipe:]_block_invoke
-[NEKResultsFetcher fetchNightlyIntoPipe:]
-[NEKResultsFetcher fetchNightlyIntoPipe:]_block_invoke
-[NEKResultsFetcher fetchChangesIntoPipe:]
backgroundThread
T@"NSThread",&,N,V_backgroundThread
eventChangeObserver
T@"NEKEventChangeObserver",&,N,V_eventChangeObserver
reminderChangeObserver
T@"NEKReminderChangeObserver",&,N,V_reminderChangeObserver
nekEventStore
T@"NEKEventStore",&,N,V_nekEventStore
nekReminderStore
T@"NEKReminderStore",&,N,V_nekReminderStore
+[NEKCalendarID(Reminder) listInStore:withNEKCalendarID:]
invitationChangedPropertyFlagDate
invitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
invitationChangedPropertyFlagLocation
invitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
hasSelfAttendeeEmail
hasEntityType
hasInvitationChangedPropertyFlagDate
TB,N,V_invitationChangedPropertyFlagDate
hasInvitationChangedPropertyFlagTime
TB,N,V_invitationChangedPropertyFlagTime
hasInvitationChangedPropertyFlagTitle
TB,N,V_invitationChangedPropertyFlagTitle
hasInvitationChangedPropertyFlagLocation
TB,N,V_invitationChangedPropertyFlagLocation
hasInvitationChangedPropertyFlagAttendeeComment
TB,N,V_invitationChangedPropertyFlagAttendeeComment
hasInvitationChangedPropertyFlagAttendeeStatus
TB,N,V_invitationChangedPropertyFlagAttendeeStatus
hasSelfAttendeeUUID
hasSelfOrganizerEmail
hasSelfOrganizerUUID
hasAttendeeStatus
TQ,N,V_attendeeStatus
hasLocationPredictionState
TQ,N,V_locationPredictionState
+[NEKCalendarAttributes(Reminder) createListInAccount:withSaveRequest:withAttributes:]
@"REMListChangeItem"8@?0
B24@?0@"NSObject"8@"NSObject"16
<%@:%p cpu=%lld, wall=%lld, dmem=%lld>
wallTime
Tq,N,V_wallTime
cpuTime
Tq,N,V_cpuTime
dirtyMemory
Tq,N,V_dirtyMemory
snoozeAmount
alarmIdentifier
itemIdentifier
hasSnoozeAmount
Td,N,V_snoozeAmount
hasAlarmIdentifier
T@"NSString",&,N,V_alarmIdentifier
hasItemIdentifier
T@"NSString",&,N,V_itemIdentifier
hasStoreIdentifier
T@"NSString",&,N,V_storeIdentifier
CalSyncClientBeginningMultiSave
CalSyncClientFinishedMultiSave
-[NEKEventChangeObserver databaseDidChange]
-[NEKEventChangeObserver allSourcesInto:]
-[NEKEventChangeObserver allCalendarsInto:]
-[NEKEventChangeObserver allRemindersInto:filter:window:]
allRemindersInto:filter:window:
allRemindersInto:filter:window:(2)
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-367/NEKSyncBundle/Models/NEKEventChangeObserver.m
-[NEKEventChangeObserver fetchEventChangeSet]
Fetching changes took a long time
Inserts:
Updates:
Deletes:
-[NEKEventChangeObserver _fetchChangesInto:from:inside:]_block_invoke
v44@?0B8q12@"NSArray"20@"NSArray"28@"NSArray"36
-[NEKEventChangeObserver previousDefaultTaskCalendar]
-[NEKEventChangeObserver setPreviousDefaultTaskCalendar:]
weakEventDatabaseController
T@"NEKEventStore",W,N,V_weakEventDatabaseController
v16@?0@"EKObjectID"8
com.apple.eventkitsync.nekreminderstore
com.apple.eventkitsync.reminders.pipe
saveRequestForStore(Reminders)
removeAllItems
removeAllItems(reminders)
B24@?0@"REMAccount"8@"NSDictionary"16
B24@?0@"REMList"8@"NSDictionary"16
updateAccount:
-[NEKReminderStore updateSource:store:]_block_invoke
-[NEKReminderStore updateCalendar:store:]_block_invoke
-[NEKReminderStore handleReminderWithUniqueIdentifierFromGizmo:saveRequest:list:wrapper:]
-[NEKReminderStore performUpdateWithICSWrappers:store:session:]
v32@?0@"NSData"8Q16^B24
v16@?0^B8
v28@?0@"REMObjectID"8i16^B20
@"NSDictionary"16@?0@"NSArray"8
storeWrapperForCloudKitAccount
v36@?0@"REMObjectID"8@"REMAccount"16i24^B28
listWrappersForChangeSet
v36@?0@"REMObjectID"8@"REMList"16i24^B28
ICSWrappersForChangeSet(Reminders)
v36@?0@"REMObjectID"8@"REMReminder"16i24^B28
-[NEKReminderStore _deleteAccountWithIdentifier:store:]
-[NEKReminderStore _deleteListWithIdentifier:store:]
saveRequests
T@"NSMapTable",&,N,V_saveRequests
saveRequestsNeedPurgeDeletedObjectsAfterSave
TB,N,V_saveRequestsNeedPurgeDeletedObjectsAfterSave
metadataKeys
metadataValues
syncID
hasICSData
iCSData
T@"NSData",&,N,V_iCSData
T@"NEKPBCalendarIdentifier",&,N,V_calendarIdentifier
hasCalendarItemCount
TI,N,V_calendarItemCount
T@"NSMutableArray",&,N,V_metadataKeys
T@"NSMutableArray",&,N,V_metadataValues
hasSyncID
T@"NSString",&,N,V_syncID
hasTaskCompletionDate
hasOldIdentifier
hasNuevoIdentifier
TQ,N,V_displayOrder
hasLzfseICSData
<NEKSourceAttributes (%p)
  name: %@
  defaultAlarmOffset: %@
  type: %d
  isEnabled: %d
  isFacebook: %d
  usesSelfAttendee: %d
  constraintsDescriptionPath: %@
  externalModificationTag: %@
  creatorBundleID: %@
  creatorCodeSigningIdentity: %@
  accountPersistentID: %@
  supportsSharedCalendars: %d
  allowsTasks: %d
  allowsEvents: %d
  allowsCalendarAddModifyDelete: %d
  onlyCreatorCanModify: %d
  snoozeAlarmRequiresDetach: %d
  supportsAlarmAcknowledgedDate: %d
  isLocalStore: %d
T@"NSString",C,N,V_name
T@"NSNumber",&,N,V_defaultAlarmOffset
Tq,N,V_type
T@"NSString",C,N,V_constraintsDescriptionPath
T@"NSString",C,N,V_creatorBundleID
T@"NSString",C,N,V_creatorCodeSigningIdentity
T@"NSString",C,N,V_accountPersistentID
SQLErrString
SQLErrMessage
SQLErrCode
T@"NDTSQFile",&,N,V_db
T@?,R,N
isEffectivelyEmpty
isTruncated
eventIdentifier
eventTitle
eventStart
calendarTitle
span
hasEventIdentifier
T@"NSString",&,N,V_eventIdentifier
hasEventTitle
T@"NSString",&,N,V_eventTitle
hasEventStart
Td,N,V_eventStart
hasCalendarTitle
T@"NSString",&,N,V_calendarTitle
hasSpan
TI,N,V_span
com.apple.eventkitsyncd
reminderListId
remindersPendingChangesState
-[NEKReminderChangeObserver storeDidChange]
v24@?0@"REMReminder"8^B16
/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-367/NEKSyncBundle/Models/NEKReminderChangeObserver.m
-[NEKReminderChangeObserver fetchReminderChangeSet]
markedForDeletion
_fetchChangesInto(Reminders)
ReminderKit: Inserts: 
ReminderKit: Updates: 
ReminderKit: Deletes: 
v60@?0B8@"NEKReminderChangeTrackingStateMap"12@"NSArray"20@"NSArray"28@"NSArray"36@"NSDictionary"44@"NSDictionary"52
com.apple.eventkitsync.changeobserver.reminderkit.sequencenumber
-[NEKReminderChangeObserver previousDefaultReminderListID]
weakReminderDatabaseController
T@"NEKReminderStore",W,N,V_weakReminderDatabaseController
<%@: %p: %@, %@>
changeTracking
T@"REMChangeTracking",&,N,V_changeTracking
lastChangeToken
T@"REMChangeToken",&,N,V_lastChangeToken
B24@?0@"REMAccount"8@16
B16@?0@"NSArray"8
@"NEKReminderChangeTrackingState"16@?0@"REMAccount"8
B24@?0@"REMChangeObject"8@"NSDictionary"16
list
v32@?0@"REMObjectID"8@"NEKReminderChangeTrackingState"16^B24
<%@: loaded:%@ - active:%@>
REMNSPersistentHistoryToken
_REMChangeUniversalToken
loadedChangeTokenMap
supportsSecureCoding
TB,R
hasChangeTrackingTokens
deletedAccountIDsFromLoadedMap
T@"NSSet",R,V_deletedAccountIDsFromLoadedMap
%@<%p>
xpc_activity
runTransaction
T@"NSObject<OS_os_transaction>",&,N,V_runTransaction
activityCondition
T@"NSCondition",&,N,V_activityCondition
activity
T@"NSObject<OS_xpc_object>",&,N,V_activity
estimatedFireDate
T@"NSDate",&,N,V_estimatedFireDate
T@"NSObject<OS_os_log>",&,N,V_log
lastFired
T@"NSDate",&,N,V_lastFired
T@"<NDTActiviityDelegate>",W,N,V_delegate
inActivity
CHECK_IN
WAIT
DEFER
CONTINUE
DONE
OUT_OF_BOUNDS
hasSyncId
T@"NSString",&,N,V_syncId
status
hasStatus
TI,N,V_status
T@"NEKPBSourceAttributes",&,N,V_attributes
NEKChangeObserver
NSObject
NEKICSWrapperMetadata
NEKICSWrapper
SYChange
NEKStatTracker
EventKitSync
EventKitAdditions
NEKEnvironment
NEKCalendarWrapper
Reminder
NEKPBSourceID
NSCopying
Event
NDTSQException
NDTSQFile
NSCacheDelegate
NDTTimedCache
NEKPBCalendarWrapper
NEKStore
Reminders
NEKPBCalendarAttributes
NEKTinyStore
NDTMessage
NDTMessaging
IDSServiceDelegate
NEKValidationWrapper
NDTSQKeyValueStore
_NEKRecordMapImpl
_NEKRecordMapSqliteRecord
_NEKRecordMapSqliteImpl
_NEKSyncSet
NEKEventStore
NEKPreferencesObserver
NEKEventChangeSet
NEKAnalyticsStore
NEKPBValidationWrapper
NDTCrashSynthesizer
NEKRPCEndpoint
NEKDeletionWrapper
NEKDaemon
KeepItSimple
NEKSyncWindow
NEKSourceChangeAggregator
NDTLogFacility
NDTLog
NEKMutatorXPCEndpoint
NEKRemoteMutatorDaemonInterface
NEKMutatorListener
NSXPCListenerDelegate
NEKRecordMap
NEKPBSetReminderComplete
NEKCalendarID
NEKPBSourceAttributes
NEKStatusReporterEndpoint
NEKStatusReporterProtocol
NEKStatusReporter
NEKDatabaseFileManager
NEKAnalytics
NEKSeenMap
NEKCapabilities
NEKSyncController
NEKChangeObserverDelegate
SYServiceDelegate
NDTActiviityDelegate
NEKReminderChangeSet
NDTSQStatement
NDTResultsFIFO
NEKChangeSet
NEKPBProtoBuffMessage
NEKSourceWrapper
NEKCalendarAttributes
NEKSyncSession
SYSessionDelegate
NEKSyncCoordinator
NEKSourceID
NEKPBCalendarIdentifier
NEKResultsFetcher
NEKPBICSWrapperMetadata
NDTPerf
NEKPBSetAlarmSnooze
NEKProtobufSerializer
SYChangeSerializer
NEKEventChangeObserver
NEKReminderStore
NEKPBICSWrapper
NEKSourceAttributes
NDTSQSchema
NEKResultsPipe
NEKPBDeleteEvent
NEKReminderChangeObserver
NEKReminderChangeTrackingState
NEKReminderChangeTrackingStateMap
NSSecureCoding
NSCoding
NDTActivity
NEKPBDeletionWrapper
NEKPBSetParticipantStatus
NEKPBSourceWrapper
@40@0:8@16@24@32
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
@"NEKEnvironment"16@0:8
@"<NEKChangeObserverDelegate>"16@0:8
v24@0:8@"<NEKChangeObserverDelegate>"16
@24@0:8@16
v16@0:8
@"NEKEnvironment"
@"NSObject<OS_dispatch_queue>"
@"NSString"
@"<NEKChangeObserverDelegate>"
v24@0:8Q16
q16@0:8
v24@0:8q16
v20@0:8B16
@"NSDate"
v32@0:8@16@24
v28@0:8B16@20
v32@0:8Q16@24
v32@0:8q16@24
q24@0:8@16
v24@0:8@?16
Q24@0:8@16
d16@0:8
v24@0:8d16
@"NSData"
@"NEKCalendarID"
@"NSDictionary"
@"NSMutableDictionary"
@48@0:8@16@24d32d40
d24@0:8d16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSCondition"
@"NEKSyncController"
@"NEKDatabaseFileManager"
@"NEKTinyStore"
@"NEKRecordMap"
@"NEKSeenMap"
@"NEKSyncCoordinator"
@"NEKAnalytics"
@"NEKDaemon"
@"NEKSourceID"
@"NEKCalendarAttributes"
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v60@0:8@16@24@32B40@44@52
@24@0:8^{_NSZone=}16
{?="isLocalStore"b1}
@32@0:8@16@24
v32@0:8@"NSCache"16@24
v32@0:8@16@?24
@32@0:8@16^i24
v32@0:8@16q24
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
@"NSCache"
@"NDTSQKeyValueStore"
^{sqlite3=}
@"<NDTSQFileDelegate>"
@24@0:8d16
@?16@0:8
@"NSObject<OS_dispatch_source>"
@"NEKPBCalendarAttributes"
@"NEKPBSourceID"
{?="isDefaultEventCalendar"b1"isDefaultTaskCalendar"b1}
@"<NEKChangeObserver>"
v20@0:8i16
i16@0:8
{?="invitationStatus"b1"sharingInvitationResponse"b1"sharingStatus"b1"supportedEntityTypes"b1"displayOrder"b1"canBePublished"b1"canBeShared"b1"hasBeenAlerted"b1"isDefaultCalendarForStore"b1"isFamilyCalendar"b1"isHidden"b1"isHolidayCalendar"b1"isIgnoringEventAlerts"b1"isIgnoringSharedCalendarNotifications"b1"isImmutable"b1"isInbox"b1"isNotificationsCollection"b1"isPublished"b1"isReadonly"b1"isSchedulingProhibited"b1"isSharingInvitation"b1"isSubscribed"b1}
q32@0:8@16q24
B40@0:8q16q24@32
v32@0:8d16@24
d32@0:8@16d24
@"NDTSQFile"
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v20@0:8I16
@48@0:8@16@24@32^@40
v40@0:8@16@?24@?32
@"IDSService"
@"NDTLogFacility"
B24@0:8^@16
^{sqlite3_stmt=}
@"NSArray"
v40@0:8^@16^@24@32
v48@0:8@16q24@32@40
B68@0:8@16@24@32@40q48@56B64
B56@0:8@16@24@32q40@48
v36@0:8@16B24@28
@28@0:8@16B24
B40@0:8@16@24@32
B32@0:8@16@24
@"NSMutableArray"
v68@0:8@16@24@32B40@44@52@60
@"NSObject<OS_os_log>"
@"NPSManager"
@"NPSDomainAccessor"
@"EKPreferences"
v36@0:8i16#20@?28
v24@0:8^{NEKAnalyticsTally=iiii}16
v28@0:8^{NEKAnalyticsTally=iiii}16i24
{?="endDate"b1"masterCount"b1"occurrenceCount"b1"startDate"b1"showAlert"b1}
@20@0:8B16
v48@0:8q16q24@32@40
v72@0:8@16@24d32@40@48@56q64
v44@0:8B16@20@28@36
v56@0:8d16@24@32@40@48
B40@0:8@16@24d32
@"NDTMessaging"
@36@0:8@16@24i32
@"NEKPreferencesObserver"
@"NEKSignalCoalescer"
@28@0:8B16@20
B24@0:8d16
@"NSTimeZone"
@"NSSet"
@"EKEventStore"
v40@0:8Q16@24@32
v48@0:8q16q24@"NSString"32@"NSString"40
v72@0:8@"NSString"16@"NSString"24d32@"NSString"40@"NSString"48@"NSString"56q64
v44@0:8B16@"NSString"20@"NSString"28@"NSString"36
v56@0:8d16@"NSString"24@"NSString"32@"NSString"40@"NSString"48
@"NSXPCConnection"
@"NEKRPCEndpoint"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@"_NEKRecordMapImpl"
{?="isComplete"b1}
I16@0:8
{?="defaultAlarmOffset"b1"type"b1"allowsCalendarAddDeleteModify"b1"allowsEvents"b1"allowsTasks"b1"isEnabled"b1"isFacebook"b1"isLocalStore"b1"onlyCreatorCanModify"b1"snoozeAlarmRequiresDetach"b1"supportsAlarmAcknowledgedDate"b1"supportsSharedCalendars"b1"usesSelfAttendee"b1}
v24@0:8@?<v@?B>16
@"NEKAnalyticsStore"
B40@0:8@16@?24@32
v24@0:8@"<NEKChangeObserver>"16
B40@0:8@16@24^@32
v48@0:8@16@24@32@?40
v28@0:8@16B24
B40@0:8@"SYService"16@"SYSession"24^@32
v40@0:8@"SYService"16@"SYSession"24@"NSError"32
v40@0:8@"SYService"16@"NSData"24@?<v@?B@"NSError">32
v48@0:8@"SYService"16@"NSInputStream"24@"NSDictionary"32@?<v@?B@"NSError">40
v40@0:8@"SYService"16@"NSError"24@"NSDictionary"32
@"SYSession"40@0:8@"SYService"16@"SYSession"24@"SYSession"32
v40@0:8@"SYService"16@"NSUUID"24@"NSUUID"32
v28@0:8@"SYService"16B24
v24@0:8@"SYService"16
*24@0:8@16
v24@0:8@"NDTActivity"16
*24@0:8@"NDTActivity"16
v32@0:8@"NDTActivity"16@"NSObject<OS_xpc_object>"24
d24@0:8q16
@"SYService"
@"NEKStore"
@"NEKSyncSession"
@"NDTActivity"
@"NEKStatTracker"
@"NEKMutatorListener"
@"NEKStatusReporter"
@"<NEKSyncControllerDelegate>"
i24@0:8q16
i24@0:8Q16
i24@0:8@16
i24@0:8d16
v24@0:8^{sqlite3_stmt=}16
^{sqlite3_stmt=}16@0:8
@32@0:8q16@24
@"NSError"
@"NEKPBCalendarWrapper"
@"NEKPBDeleteEvent"
@"NEKPBDeletionWrapper"
@"NEKPBICSWrapper"
@"NEKPBSetAlarmSnooze"
@"NEKPBSetParticipantStatus"
@"NEKPBSetReminderComplete"
@"NEKPBSourceWrapper"
@"NEKPBValidationWrapper"
{?="packetNumber"b1}
@"NEKSourceAttributes"
@"NSURL"
I40@0:8@16@?24^@32
B32@0:8@16^@24
I40@0:8@"SYSession"16@?<B@?@"<SYChange>">24^@32
v40@0:8@"SYSession"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"SYSession"16@"NSError"24
B32@0:8@"SYSession"16^@24
v32@0:8@"SYSession"16@?<v@?B@"NSError">24
v32@0:8@"SYSession"16@"NSSet"24
^{ct_green_tea_logger_s=}
@"NEKValidationWrapper"
@"NEKResultsPipe"
@"NEKProgressLiar"
@"NDTPerf"
@"PSYServiceSyncSession"
{?="isDefaultLocalCalendar"b1}
@"NEKEventChangeObserver"
@"NEKReminderChangeObserver"
@"NEKEventStore"
@"NEKReminderStore"
@"NSThread"
{?="attendeeStatus"b1"entityType"b1"invitationStatus"b1"locationPredictionState"b1"properInvitationStatus"b1"startDate"b1"invitationChangedPropertyFlagAttendeeComment"b1"invitationChangedPropertyFlagAttendeeStatus"b1"invitationChangedPropertyFlagDate"b1"invitationChangedPropertyFlagLocation"b1"invitationChangedPropertyFlagTime"b1"invitationChangedPropertyFlagTitle"b1}
{?="snoozeAmount"b1}
@32@0:8@16q24
@40@0:8@16q24q32
@"NSData"24@0:8@"<SYChange>"16
@"<SYChange>"32@0:8@"NSData"16q24
@"NSData"24@0:8@"<SYObject>"16
@"<SYObject>"24@0:8@"NSData"16
@"NSData"32@0:8@"<SYChange>"16q24
@"<SYChange>"40@0:8@"NSData"16q24q32
@24@0:8^q16
v36@0:8@16i24@28
v52@0:8@16i24#28@?36@?44
v44@0:8@16@24i32@?36
v44@0:8@16@24B32@36
@"NSMapTable"
@24@0:8Q16
@"NEKPBCalendarIdentifier"
{?="displayOrder"b1"taskCompletionDate"b1"calendarItemCount"b1}
@"NSNumber"
{?="eventStart"b1"span"b1}
B56@0:8@16@24@32^@40^@48
@"NEKReminderChangeTrackingStateMap"
@"REMChangeTracking"
@"REMChangeToken"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^@16
v48@0:8@16@24@?32@?40
@"<NDTActiviityDelegate>"
@"NSObject<OS_os_transaction>"
@"NSObject<OS_xpc_object>"
{?="type"b1}
{?="span"b1"status"b1}
@"NEKPBSourceAttributes"
333333
Setting ICS, len:%d
Error fetching local account: %{public}@
Error fetching lists in local account: %{public}@
Error getting debug performer for purging lazy deleted objects: %@
Error purging lazy deleted objects: %@
Read in location for a reminder
Adding ICS to wrapper to send: %{public}@
Setting task with identifier %{public}@ as completed, completion date is %{public}@
Reminder %{public}@ does not have daCalendarItemUniqueIdentifier. Falling back to use REMObjectID.
Setting all properties on %@, identifier: %{public}@
Setting minimal properties on %@, identifier: %{public}@
Can't create canonical unique identifier for reminder %{public}@. Identifier returned by REMReminder is %{public}@
Unable to create UUID for %s %{public}@
Error fetching account. Account's persistent ID: [%{public}@]
Converting old plist state
Done converting old plist state
dataWithContentsOfFile gave us nothing
propertyListWithData gave us nothing. Error: %{public}@
_rawSendData assigned IDS identifier: %@
_rawSendData has an error: %{public}@
_rawSendFile assigned IDS identifier: %@
_rawSendFile has an error: %{public}@
No identifier returned. Error: %{public}@
Incoming reply message but no handler registered.
Can't find a handler for this message
didSend:%c IDS id: %{public}@, error: %{public}@
Validation failure. Local: %@ Remote: %@
Validation faulting on second failure: Local: %@ Remote: %@
Validation succeeded, %@.
Sqlite create failed, path: %{public}@, error: (%d)
SQL not understood: %s
Cannot compile pragma fetch statement
setIdentifier: passed invalid parameters.
setIdentifier_update:%{public}@ forRecordID: %{public}@
setIdentifier_insert:%{public}@ forRecordID: %{public}@
setIdentifier: Error inserting/updating data into record map: %d
deleteIdentifierForRecordID:%{public}@
deleteIdentifierForRecordID: Error deleting record: %d
%{public}s:%d %s --mark--
NEKRecordMap removeAllRecords
Called with nil recordID or nil event store
Event deletion wrapper: %{public}@ -> %{public}@
Memory delta from save: %lld #perf
Event database save time: %fs #perf
Error saving EventKit database: %{public}@
Database changes saved successfully
Error deleting future events in calendar purge: %{public}@
Error deleting single event in calendar purge: %{public}@
Error deleting reminder in calendar purge: %{public}@
%{public}s: Ignoring EventKit code path
%{public}s: Ignoring EventKit code path for getting default task calendar
_shouldSendEvent: Got a nil identifier for event: %p
Entity with summary %{public}@ identifier %{public}@ is a phantom master.  Ignoring.
_shouldSendEvent: Entity with summary %{public}@ identifier %{public}@ is detached, master identifier is %{public}@
_shouldSendEvent: Entity with summary %{public}@ identifier %{public}@ is detached, but can't get master, so using the actual detached event
No calendar for event with summary %{public}@ identifier %{public}@, event won't be tracked for sending duplicates, but we'll soldier on and likely fail somewhere later down the line.
Calendar identifier is nil for event %{public}@ identifier %{public}@. This is probably very bad.
Entity with summary %{public}@ and identifier %{public}@ already in set for calendar with identifier %{public}@, not sending again
Entity with summary %{public}@ and identifier %{public}@ not in set for calendar with identifier %{public}@, adding
Identifier is nil after much fiddling. Perhaps the master identifier is to blame?
Selecting reminder %{public}@
Create or update source: %{public}@
Saving after updating a source (%{public}@) failed: %{public}@
Updated source (%{public}@) saved successfully.
No need to create source since the source [%{public}@] doesn't exist in database and the source wrapper has allowsEvents=NO
Saving after creating a source (%{public}@) failed: %{public}@
New source (%{public}@) saved successfully.
Received source wrapper that I'm not sure how to process: %{public}@
Error saving new/updated source (%{public}@): %{public}@
Update calendar: %{public}@
Error saving updated calendar (%{public}@): %{public}@
Create calendar: %{public}@
Error saving new calendar (%{public}@): %{public}@
%{public}s: Ignoring EventKit code path for reminder with identifier: [%{public}@]
%{public}s: Ignoring sidecar data for phantom master with identifier: [%{public}@]
Handling updated event from gizmo with summary %{public}@ and identifier %{public}@
Set self attendee status to 0x%08x for event with identifier %{public}@
Set invitation status to none for event with identifier %{public}@
Error saving database while setting event invitation status: %{public}@
No need to set attendee status, synced value is the same as existing value: 0x%08x for event with identifier %{public}@
Handling updated task from gizmo with summary "%{public}@" and identifier %{public}@
Task with identifier %{public}@ is completed, completion date is %{public}@
Saved event with identifier %{public}@, externalID is %{public}@
Failed to save event with identifier %{public}@. Error =  %{public}@
Participant status did not change. No need to save event with identifier %{public}@, externalID is %{public}@
Handling updated master event from gizmo with participationStatus %d, summary "%{public}@", and identifier %{public}@
Can't get row id for master with identifier %{public}@ to set attendee status for recurring series
Checking for calendar match for event %{public}@ with identifier %{public}@
Checking for match on calendar, we want %{public}@, calendarIdentifier is %{public}@
Handling master event from gizmo with participation status %d, summary %{public}@, and identifier %{public}@
Couldn't get master event for recurring event sequence with identifier %{public}@, but we'll check for detached events in case those are still around
Using existing detached event
Grabbing recurrence to use for detached event
Handling updated detached event from gizmo with participation status %d, summary %{public}@, and identifier %{public}@.
Failed to get/create event with identifier %{public}@ to set attendee status %d, skipping event
Failed to commit after saving recurring event series with master identifier %{public}@. Error =  %{public}@
Found event with identifer %{public}@ but in the wrong calendar.
%{public}s: No calendar item with identifier %{public}@ in calendar with identifier %{public}@
performUpdateWithICSWrappers received %d items
Received ICS wrapper: %{public}@
recv: %{public}@
recv LZFSE: <<!%@!>>
performUpdateWithICSWrappers: Calendar %{public}@ does not exist!
Processing update from the watch, main identifier is %{public}@
Cannot find object of type %d to update.
No calendar item found for main event in recurring series with identifier %{public}@ in calendar with identifier %{public}@
Processing add/update from companion, or a new record from the watch
Error deleting event for identifier remap: %{public}@
Item ID remapping complete: %{public}@ => %{public}@
Got an update/add for calendar item, old calendar id = %{public}@, current calendar id = %{public}@
Calendars don't match, so deleting from old calendar: old calendar id = %{public}@, current calendar id = %{public}@
Calendars match, so event didn't move: old calendar id = %{public}@, current calendar id = %{public}@
Got an update/add for event "%{public}@", no old calendar id was sent, so this is from an old record map and falling back to old code to check and delete from any old calendar. The current calendar id = %{public}@
Critical error, received compressed and uncompressed data.
ICS Import: %fs #perf
We have a recurring event %{public}@ and identifier %{public}@, checking to see if any detached events need attention
performUpdateWithICSWrappers: handling detached event %{public}@ identifier %{public}@
We have a recurring event with summary "%{public}@" and identifier %{public}@, deleting all detached events too, since they have also moved calendars
Deleting detached event from old calendar since it has moved. Event summary "%{public}@", identifier %{public}@
No calendar for calendar identifier %{public}@
Skipping deletion for event with identifier %{public}@ in calendar with identifier %{public}@, we already detected and deleted it as part of a recurring master's detached events
Found no matches for potential deletion of calendar item %{public}@
Found multiple matches for potential deletion of calendar item %{public}@
Error deleting item: %{public}@
Changing event id from %{public}@ to %{public}@
we are considering a notification for invitations for event with identifier %{public}@, attendeeStatus: %d
We've concluded this event needs a response, so set invitation status to unalerted (%d) for event with identifier %{public}@
setting externalID %{public}@ for event with identifier %{public}@
No externalID in metadata for event with identifier %{public}@
Changed date changed flag to %d for event %{public}@
Changed time changed flag to %d for event %{public}@
Changed title changed flag to %d for event %{public}@
Changed location changed flag to %d for event %{public}@
Changed attendee comment changed flag to %d for event %{public}@
Changed attendee status changed flag to %d for event %{public}@
Setting location prediction state to %d for event %{public}@
Error saving event in applySidePropertiesToEntity: %{public}@
Self attendee email is %{public}@, and uuid is %{public}@ for event with identifier %{public}@
Found self attendee for event with identifier %{public}@, email = %{public}@, address = %{public}@
No self attendee email in wrapper for event with identifier %{public}@
Determined user is organizer for event with identifier %{public}@, email = %{public}@, address = %{public}@
updateSelfAttendeeForCalendarItem saving, attendees: %d, span: %d
updateSelfAttendeeForCalendarItem save error: %{public}@
Deleteing suppression cache entry for %@
Suppressing alert due to cache hit on %@
Setting invitation status %{public}@ for event with identifier %{public}@
No invitation status in wrapper for event with identifier %{public}@
Surreptitiously adding event to changeset: %{public}@ due to attendee change
Can't create wrapper for source %@
Sending source wrapper accountPersistentID=%{public}@ isLocalStore=%d events=%d tasks=%d
Skipping hidden calendar: %{public}@
CalendarID remap detected: %{public}@ => %{public}@
Could not create calendar wrapper for entity: %{public}@
publicObjectWithObjectID returned nil, objectID: %{public}@
Event %{public}@ returned a unique id of nil.
%{public}s: Ignoring EventKit code path for reminder
CalendarItem remap detected: %{public}@ => %{public}@
Decided not to send event %@
Decided not to send reminder %@
Decided not to send %{public}@
Deletion wrapper: %@
Could not create deletion wrapper for recordID: %{public}@
Deletion wrapper for source: %@
Attempt to create wrapper for unknown type: %{public}@
updateRowMappingForEntity: Entity %{public}@ and identifier %{public}@ is detached, master identifier is %{public}@
updateRowMappingForEntity: Entity %{public}@ and identifier %{public}@ is detached, but has no master. Skipping adding to table
Error committing record map: %{public}@
Error deleting source with identifier %{public}@
Deleted source with identifier %{public}@
Cannot delete source; no source exists for %{public}@
Error deleting calendar with identifier %{public}@, error: %{public}@
Deleted calendar with identifier %{public}@
Cannot delete; no calendar exists for %{public}@
Deleting event with identifier %{public}@, recordID %{public}@
Error deleting event %{public}@
Deleting event with identifier %{public}@, from calendar with identifier %{public}@
Deleting event with identifier %{public}@, from any calendar, old mapping didn't send calendar to delete from so falling back to old code
Deleting event %{public}@ failed as we were not handed an event by the store.
No event exists for %{public}@
Failure to delete reminder: %{public}@
No reminder exists for %{public}@
Setting default task calendar to calendar with name %{public}@, identifier %{public}@
%{public}s: Ignoring EventKit code path for check and set default task calendar
Setting default event calendar to calendar with name %{public}@, identifier %{public}@
Updating calendar with title %{public}@, identifier %{public}@
Calendar (%{public}@ %{public}@) moved to a different store: %{public}@
Cannot find local source.
%{public}s: Ignoring EventKit code path: mixed entity calendar is not supported
%{public}s: Ignoring EventKit code path: creating reminders calendar is not supported
Source not found with sourceID: %@
Created calendar with title %{public}@, identifier %{public}@
Asked to set a nonexistent calendar as the default. Ignoring. Calendar identifier = %{public}@, store identifier = %{public}@
Failure deleting source "%{public}@", %{public}@
Error deleting calendar "%{public}@": %{public}@
Error removing event: %{public}@
Error deleting reminder: %{public}@
wrapperForCalendarItem: Entity with identifier %{public}@ is detached, master identifier is %@
Entity with identifier %{public}@ is detached, but can't get master
Entity with identifier %{public}@ is master for a recurring series
Handling detached events for %{public}@, count=%d
LZFSE ICS: <<!%@!>>
self attendee status is 0x%08x for event with identifier %{public}@
Setting all properties on %@, identifier: %{public}@, attendees: %d
Setting minimal properties on %@, identifier: %{public}@, attendees: %d
Can't create canonical unique identifier for event %{public}@. Identifier returned by CalCalendarItemCopyUniqueIdentifier is %{public}@
Migrated prefs; version %zd -> %zd
Rebroadcast pref for key %{public}@
Applied rebroadcast pref for key %{public}@ => %d
Synced prefs for keys %{public}@
Terminating enumeration early
Received weird session type: %d
Sent setParticipantStatus message, identifier: %@
Sent deleteEvent message, identifier: %@
Sent setCompleted message, identifier: %@
Sent setReminderSnooze message, identifier: %@
Sent setEventSnooze message, identifier: %@
Send failed.
Called on watch.
Failure to initialize SQL log: %@, userInfo: %@
== Started EventKitSync_Sim-367
Pairing ID: %{public}@
Pre prefs observer init
Post prefs observer init
_blockUntilUnlock returned
Firing defered DB change notice.
Beginning XPC transaction for com.apple.notifyd.matching notification named %{public}@
Launched from IDS
Triggering full sync for testing notification %{public}@
Thinking about a migration sync.
SignificantTimeChange incremental sync
SignificantTimeChange ignored
Calling pref observer for notification: %{public}@
Ending XPC transaction for com.apple.notifyd.matching notification named %{public}@
Analytics activity
Failed to set done
Done
%s: Registered for XPC activity.
Registered for notifications.
Received full sync command from NEKSyncCoordinator.
Prefs synced.
Starting sync controller.
Received reunion sync command.
Creating sync controller
Assigning sync controller
Starting sync controller
Window: start: %{public}@ end: %{public}@, isFullSync: %d
Asked for incremental sync window when there was no/incomplete previous sync window data
Rejected event: %{public}@ %{public}@
Rejected reminder: %{public}@ %{public}@
Accepting unknown entity: %{public}@
event not in future: %{public}@ "%@"
reminder not in future: %{public}@
Cannot determine calendar identifier for reminder %{public}@. Deletion wrapper will be sent but the remote device may not be able to delete the reminder
Sorry. Unable to determine identifier or resolve EKSource object for EKObjectID %{public}@
Source with ID %{public}@ does not exist. This is unexpected for update/insert. Skipping.
Source with ID %{public}@ (%@) updated. Going to send wrapper for this source.
EKSource %{public}@ (%@) is still available due to one of the event/reminder dataclass still enabled. Treating this as an update to send wrapper for dataclass updates.
Deleted source/account %{public}@ is not available anymore. Going to send delete wrapper for this source
Failed to fetch account with identifier %{public}@
Sending %{public}@ reminder-only EKSource %{public}@ with REMAccount %{public}@
Performing a priori deletion of calendar %{public}@
Deletion of calendar %{public}@ didn't go so well: %{public}@
Error committing store after preemptive deletion of calendars: %{public}@
Successful save after deleting very suspicious calendars.
Starting configuration of source with persistent ID: [%{public}@].
Source's 'name' has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'type' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'enabled' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's '%@' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'usesSelfAttendee' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'constraintsDescriptionPath' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'externalID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'creatorBundleID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'accountPersistentID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'supportsSharedCalendars' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'allowsTasks' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'allowsEvents' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Completed configuration of source with persistent ID: [%{public}@].
setParticipantStatus storeID: %@ eventID: %@
setCompleted calendar: '%{public}@' reminder: '%{public}@' externalId: %@
setReminderAlarmSnooze time:%.1f calendar: '%{public}@' reminder: '%{public}@' externalId: %@
setEventAlarmSnooze time:%.1f calendar: '%{public}@' storeId: %@ eventID: %@
deleteEventId storeId: %@ calendarId: %@ eventId: %@
Returning suggested db path: %@
Flushing to CoreAnalytics
Daily tally: D: %d R: %d F: %d
Creating REMAccount with id:%{public}@ type:%@ name:%@
Error creating account. Source's persistent ID: [%{public}@]
UNSUPPORTED: Local source's 'name' has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'type' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'enabled' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's '%@' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'usesSelfAttendee' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'externalModificationTag' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'creatorBundleID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'accountPersistentID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'allowsTasks' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Updating local account .inactive to %{public}@.
Deleting account with identifier %{public}@.
UNSUPPORTED: Source's 'allowsEvents' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
UNSUPPORTED: Source's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Unknown account type %ld
Unexpected constraint plist path from ReminderKit account: %@
Unexpected constraint plist path from EventKit source: %@
Sqlite create failed, path: %s, error: (%d)
Sqlite statement prepare failed for "%{public}s"
ReminderKit enabled.
ReminderKit disabled.
Remote system build version: %{public}@
New NEK.SYService queue: %p
Shutting down existing SYService: %p
Selecting file transfer engine
Selecting data messaging engine
Failed to resume SYService: %{public}@
Started new SYService: %p
Enqueueing a full sync
Enqueueing a delta reunion sync
Reunion sync with faults- Forcing full sync
Poking CS for nightly sync
Nightly sync requested but we have faults. Ignoring request.
Requested migration sync
Migration number is fine, no migration sync needed.
Migration check dropped as we haven't heard from the phone yet.
Remove all items
Retrying a failed sync (%d) (delta)
_retrySync called but we have no faults. We're perfect!
%{public}@
Assuming mixed entity NEKICSWrapper comes from EventKit
object is not of recognized class: %{public}@
Got a deletion wrapper from SYStore: %{public}@
passed weird class: %{public}@
Decided to prefer reset session over delta.
Winning session: %{public}@, losing session: %{public}@
%{public}s %{public}@ #%{public}@ #%{public}@
Session start call not balanced. This is a fatal condition.
Locking session idle queue.
Looks like system build version changed. Rejecting session.
Delta sync fired but it really wants to be a reset sync.
Change set was empty, not starting a sync session.
Retry is overdue and we need a reset. Forcing things along.
We were denied delta sync effort but there is no backup due date. Scheduling retry based on current faultCount/connectedState
Sync request ignored: isReset: %d isNightly: %d clearToDelta: %d
Second check of change set was empty, not starting a sync session.
Before timeout stats: x=%.02f sigma=%f
Comically long session timeouts enabled!
Session timeout: %.02f
perMessageTimeout: %d
Setting heardFromPhone to NO
Phone's sending us a delta when we want a reset. How rude!
Returning from startSession with result: %d
Remote engine requirement zapped.
This pipe better be dead: %{public}@
Session is nil during sessionEnded.
service.currentSession is nil, clearing user session.
Current session [%{public}@] != ending session [%{public}@]. Error: %{public}@ Dropping notificaiton on floor.
Send complete with error: %{public}@
SendingSession: %{public}@ error: %{public}@ cpuTime: %.02fms
There was a sync error%{public}@.
Failed session was a %{public}s so setting up retry to be a reset.
UserCancelled error, retry should already be scheduled.
LostCollisionTest error, retry should already be scheduled.
Post failure update sync timings: x=%.02f sigma=%f
Looks like I didn't schedule  retry. That's bad.
Following nightly sync with request for delta
Post success update sync timings: elapsed=%.02f x=%.02f sigma=%f
ReceivingSession: %{public}@ error: %{public}@ cpuTime: %.02fms
Session walltime breakdown (ms): %llu store, %llu calendar, %llu events, %llu reminders.
Setting heardFromPhone to YES
Recv complete with error: %{public}@
Resuming session idle queue
Fatal: sessionEnd call not balanced.
Poking CS for delta sync
Change log truncation is making us request a reset
For %{public}@ we are sending attendee stats (ek %d, wire %d)
For %{public}@ setting attendee status to (wire %d, ek %d)
Enqueued last change, pipe error: %{public}@
Enqueing validation message.
Not enqueuing validation message as the population shifted during sync.
Sending events
Applying changes
Sync disabled. Dropping changes on floor.
Deserialization failed.
Hit ICS batch import capacity.
Picking up final ICS batch import, %d items.
Calling sync session completion.
Sync disabled. Ignoring reset request.
Sync request supressed as we haven't heard from the phone
fetchEverythingIntoPipe:PipeBefore: %{public}@
%{public}s: All things pushed successfully
fetchEverythingIntoPipe:PipeAfter: %{public}@
fetchNightlyIntoPipe:PipeBefore: %{public}@
%{public}s: All nightly things pushed successfully
fetchNightlyIntoPipe:PipeAfter: %{public}@
Finishing pipe (empty changesets): %p
fetchChangesIntoPipe:PipeBefore: %{public}@
fetchChangesIntoPipe:PipeAfter: %{public}@
Default local list does not exist
Cannot find list for identifier %{public}@
Starting configuration of list with UUID: [%{public}@].
UNSUPPORTED: List's 'UUID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'title' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'isReadOnly' has changed from %@ to %@.  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isHidden' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'isImmutable' has changed from %@ to %@.  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isInbox' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'isNotificationsCollection' has changed from %@ to %@.  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSharingInvitation' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSubscribed' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isHolidayCalendar' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isFamilyCalendar' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isIgnoringEventAlerts' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isIgnoringSharedCalendarNotifications' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isSchedulingProhibited' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isDefaultCalendarForStore' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'digest' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'symbolicColorName/colorString' has changed from [%@/%@] to [%@/%@].  List's UUID: [%{public}@]
List's 'displayOrder' has changed from %ld to %d.  List's UUID: [%{public}@]
List's 'sharingStatus' has changed from %@ to %@.  List's UUID: [%{public}@]
List's 'sharedOwnerName' has changed from %@ to %@.  List's UUID: [%{public}@]
List's 'sharedOwnerAddress' has changed from %@ to %@.  List's UUID: [%{public}@]
UNSUPPORTED: List's 'sharingInvitationResponse' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'publishedURL' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'canBePublished' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'canBeShared' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'isPublished' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'externalID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'externalIdentificationTag' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'daSyncToken' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'externalModificationTag' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'externalRepresentation' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'invitationStatus' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'notes' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'subCalAccountID' has changed from [%@] to [%@].  List's UUID: [%{public}@]
List's 'pushKey' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityDisplayName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityEmail' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityFirstName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'selfIdentityLastName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityDisplayName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityEmail' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityAddress' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityFirstName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
UNSUPPORTED: List's 'ownerIdentityLastName' has changed from [%@] to [%@].  List's UUID: [%{public}@]
Completed configuration of list with UUID: [%{public}@].
didCalendarChange: title:%{public}@ identifier:%{public}@
didCalendarChange: local->syncToken:%{public}@ externalModificationTag:%{public}@ externalIdentificationTag:%{public}@
didCalendarChange: incmg->syncToken:%{public}@ externalModificationTag:%{public}@ externalIdentificationTag:%{public}@
No changes for calendar with title %{public}@, identifier %{public}@
_calendarPropertyIsEqualToAttributeProperty: Calendar and attributes property %{public}@ are different: (calendar) %{public}@ != (attributes) %{public}@
dataWithSYChange: serializing object of class: %{public}@ S_PKT_NUM:%04x_%04x
Sending reminder with location
SYChangeWithData - unrecognized type: %{public}@
SYChangeWithData: returning object of type: %{public}@ R_PKT_NUM:%04x_%04x
Transport number gap detected. Might be a problem, might not.
Could not create wrapper object
Registered for change tracking, seqNo: %d
Ignoring delta sync request as sync coordinator says it is not time.
%{public}s: Ignoring EventKit code path for sync'ing local reminders-only source %{public}@
Sending mixed entity source %{public}@ from EventKit
Failed to create source wrapper for %{public}@
%{public}s: Ignoring EventKit code path for sync'ing calendar %{public}@
Sending mixed entity calendar %@ from EventKit
Marking default task calendar in wrapper to calendar with name %{public}@, identifier %{public}@
Marking default event calendar in wrapper to calendar with name %{public}@, identifier %{public}@
publicObjectWithObjectID returned nil. ObjectID: %{public}@
Reading events
%{public}s: Ignoring EventKit code path for sync'ing reminders
Previous sequence number: %d, current sequence number: %d, delta: %d
Change log numbers went backward, forcing full sync (phone only)
Fetch duration: %.2f
Aggregate changelog: %{public}@
Change log truncated
Watch is ignoring the changelog truncation. "This is fine." -- dog.
fetchChangesInto: Fetching default calendars
fetchChangesInto: Changed default task calendar
fetchChangesInto: Unchanged default task calendar
fetchChangesInto: Changed default event calendar
fetchChangesInto: Unchanged default events calendar
fetchChangesInto: Done fetching default calendars
Updates is NULL. This shouldn't happen.
EventKit: Change set is empty.
It's kinda weird but I'm rolling the changelog sequence number back.
Moved stored change number from %d to %d
Setting anchor sequence number: %d
%{public}s: Ignoring EventKit code path for getting previous default task calendar
%{public}s: Ignoring EventKit code path for setting previous default task calendar
Error saving save request %@: %{public}@
Reminders database save time: %fs #perf
Can't create save request for nil store. Using a fresh REMStore to avoid crashing, but this won't be correct.
Save request created with needsPurgeDeletedObjectsAfterSave=YES. The next save will be slow.
Received reset sync. Resetting change tracking state map to %{public}@
Error fetching accounts: %{public}@
Skip deleting list in CloudKit account with ID %{public}@
Error fetching lists: %{public}@
Selecting reminder (id=%{public}@, calendarUniqueId=%{public}@)
Error fetching account with ID: [%{public}@]
Create or update account: %{public}@
Account (%{public}@) saved successfully.
Saving after updating an account (%{public}@) failed
No need to create account since the account [%{public}@] doesn't exist in database and the source wrapper has allowsTasks=NO
New account (%{public}@) saved successfully.
Saving after creating an account (%{public}@) failed
Error fetching list with ID: [%{public}@]
Update list: %{public}@
List (%{public}@) saved successfully.
Error saving updated list (%{public}@)
Create list: %{public}@
New list (%{public}@) saved successfully.
Error saving new list (%{public}@)
Unknown deletion wrapper: %{public}@
Handling updated reminder from gizmo with summary "%{public}@" and identifier %{public}@
Reminder with identifier %{public}@ is completed, completion date is %{public}@
Received ICS wrappers with the same identifier %{public}@ in the same batch. Deduplicating. 
Going to build list cache for IDs %{public}@
Built list cache for wrappers %{public}@
Received ICS wrappers with the same identifier %{public}@ in the same batch
Going to build reminder cache for IDs %{public}@
Failed to batch fetch reminders with calendar item unique ID %{public}@. error=%@
Built reminder cache for wrappers %{public}@
List %{public}@ does not exist. Skip processing this wrapper.
Got an update/add for reminder, old list id = %{public}@, current list id = %{public}@
Lists don't match, so deleting from old list: old list id = %{public}@, current list id = %{public}@
Lists match, so reminder didn't move: old list id = %{public}@, current list id = %{public}@
Got an update/add for reminder "%{public}@", no old list id was sent, so this is from an old record map and falling back to old code to check and delete from any old list. The current list id = %{public}@
Reminder for identifier %{public}@ not found (%@)
No ReminderChangeItem was created. ICS importing failed?
Input to _ensureReminderInList is nil (%@, %@, %@). Skipping.
Unexpected wrapper type %lu for identitifer %{public}@
Found no matches for potential deletion of moved reminder %{public}@ with error %@
Failed to batch fetch account %{public}@ %@
Fetched account batch: %{public}@ %{public}@
Failed to batch fetch list %{public}@ %@
Fetched list batch: %{public}@ %{public}@
Failed to batch fetch reminder %{public}@ %@
Fetched reminder batch: %{public}@ %{public}@
Skipping storeWrapperForCloudKitAccount as changeSet is empty
Failed to create source wrapper for CloudKit account %{public}@
Sending source wrapper for CloudKit account %{public}@
Skipping listWrappersForChangeSet as changeSet is empty
Failed to fetch list %{public}@. Unable to create wrapper.
Skipping remindersWrappersForChangeSet as changeSet is empty
Failed to fetch reminder %{public}@. Unable to create wrapper.
Deleting account with identifier %{public}@
Cannot delete; no account exists for identifier %{public}@
Cannot delete; account with identifier %{public}@ is a local account
Cannot delete; account with identifier %{public}@ is a local internal account (this is unexpected)
Cannot delete; no list exists for identifier %{public}@
Cannot delete; no reminder exists for identifier %{public}@
Default list continues to be %{public}@
Setting default list from %{public}@ to %{public}@
Updating list with title %{public}@, identifier %{public}@
Failed to fetch an account for reminders. This is very bad.
Created list with title %{public}@, identifier %{public}@
Asked to set a nonexistent list as the default. Ignoring. List identifier = %{public}@, account identifier = %{public}@
Error removing reminder: %{public}@
storeDidChange; Marking NEKRemindersPendingChangesStateCheckWithReminderKit
Error fetching reminder accounts for lists: %{public}@
Marking default list in wrapper to list with name %{public}@, identifier %{public}@
allRemindersInto; marking NEKRemindersPendingChangesStateSyncing
remindersPendingChangesState says No (%tu); skipping fetchReminderChangeSet
remindersPendingChangesState says Yes (%tu); marking NEKRemindersPendingChangesStateSyncing and continuing fetchReminderChangeSet
Pulled nil from changeTrackingStateMap.
%{public}s: Saw sequence number failure already. Still waiting for corrective sync to complete.
Timed out trying to fetch changes from database.
Synthesizing delete for REMAccount %{public}@
Previous sequence number: %@
Current sequence number: %@
Found marked as delete reminder %{public}@
Found marked as delete list %{public}@
Unhandled object with markedForDeletion update %{public}@
fetchChangesInto: Fetching default list
fetchChangesInto: Changed default list
fetchChangesInto: Unchanged default list
fetchChangesInto: Done fetching default list
ReminderKit: Change set is empty.
Reminders completion; remindersPendingChangesState was: %zd, allRemindersChangesNowSynced: %d
Reminder fetchChanges: Timeout out waiting for database to respond.
Loaded change tracking state map %@
Saved change tracking state map %@
No previous NEKReminderChangeTrackingStateMap found
Error deserializing NEKReminderChangeTrackingStateMap archive. (%@)
Decoded NEKReminderChangeTrackingStateMap. %@
Encoded NEKReminderChangeTrackingStateMap: %@ (encoded=%@)
Tracking more than one store is not supported. Behavior is undefined.
Error fetching accounts %@
Error fetching changes for account %{public}@ with state %{public}@, assuming changes are truncated: %@
Filtered change set summary for account %{public}@ since token %{public}@: before: i=%{public}@ u=%{public}@ d=%{public}@; after: i=%{public}@ u=%{public}@ d=%{public}@
Fetched auxiliary delete change info %@ for object ID %{public}@
Old list ID %{public}@ for deleted reminder %{public}@
Fetched auxiliary move change info %@ for object ID %{public}@
Old list ID %{public}@ for moved reminder %{public}@
Error fetching auxiliary change info %@
Forward to latest change token for account %{public}@ (lastChangeToken=%{public}@, latestChangeToken=%{public}@).
Resetting to current change token for account %{public}@ because change history is truncated (lastChangeToken=%{public}@, latestChangeToken=%{public}@).
%{public}s%{public}@, %{public}@, %{public}@, %{public}@
%{public}s%{public}@
%{public}s%{public}@, %{public}@
%{public}s%{public}@, %{public}@, %{public}@
--empty--
NEKSqueeze failed to initialize
NEKSqueeze failed to compress
Compressed ICS %d->%d %.01f%%
NEKFluff failed to initialize
NEKFluff failed to uncompress
EKa: Live EKEventStore: %{public}@
EKa: Total stores: %d
SIGTERM, Bye bye.
SIGQUIT, Bye bye.
Manually triggered state dump
Checkin activity state: %s
Checkin criteria: %p
Running
Received an odd state in checkin: %d.
fireIn: %d
fireIn request disregarded for previous scheduled timer (%0.2f to go)
fireOnConnection
fireNever
Set activity state to %s
activityComplete
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.calendar.changeIdTrackingOverride</key>
<true/>
<key>com.apple.private.calendar.syncclient</key>
<true/>
<key>com.apple.private.calendar.watchos-mutable-database</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.eventkitmutation</string>
<string>com.apple.private.alloy.eventkitsync</string>
</array>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
