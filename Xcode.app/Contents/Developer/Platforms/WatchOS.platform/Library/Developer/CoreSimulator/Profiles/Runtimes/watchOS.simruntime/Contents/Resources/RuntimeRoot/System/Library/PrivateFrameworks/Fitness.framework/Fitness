[#analytics] submission for event: %@, key: %@, value: %@
[#analytics] health data submission not allowed. Not sending analytics for event: %@
[#analytics] submission for event: %@, payload: %@
[FIMindfulnessAppMigrator] No keys to migrate
[FIMindfulnessAppMigrator] Values already exist (BreathRate: %ld, HapticLevel: %ld)
[FIMindfulnessAppMigrator] Migrating BreatheRate: %ld
[FIMindfulnessAppMigrator] Not migrating breath rate (existing: %{BOOL}d, migrated: %{BOOL}d)
[FIMindfulnessAppMigrator] Migrating HapticLevel: %ld
[FIMindfulnessAppMigrator] Not migrating haptic level (existing: %{BOOL}d, migratedBreathRateExists %{BOOL}d)
[FIMindfulnessAppMigrator] Syncing to Companion
FIAppStoreAvailability - device not tablet; calling completion with YES
FIAppStoreAvailability failed to fetch Fitness availability for device; dispatch group timed out
FIAppStoreAvailability failed to fetch fitness plus enabled value: %@
FIAppStoreAvailability fetched fitness plus enabled value: %d
FIAppStoreAvailability failed to fetch device list: %@
FIAppStoreAvailability failed to fetch device list; semaphore timed out
FIAppStoreAvailability - isSupportedWatchAvailable: %d
Sleep data provider - initial load sleep user day
Sleep data provider - cached sleep user day creation date %@; is valid %d
Sleep data provider - cached sleep user day start of day (%@) end of day (%@)
Sleep data provider - updating sleep user day
Sleep data provider - did not find sleep event (%@) error (%@)
Sleep data provider - next event (%@) > 24 hours from current date (%@)
Sleep data provider - updating with identifier %@
Sleep data provider - error fetching next event after wake up (%@) error (%@)
Sleep data provider - next event after wake up (%@) > 24 hours from current date (%@)
Sleep data provider - error fetching sleep model for wind down or bedtime event error (%@)
Sleep data provider - error fetching next event after 24 hours before wind down or bedtime (%@) error (%@)
Sleep data provider - previous wake up event before wind down or bedtime (%@) > 24 hours from current date (%@)
Sleep data provider - error fetching next event after previous wake up event (%@)
Sleep data provider - clearing sleep user start of day
Sleep data provider - setting sleep user start of day (%@) end of day (%@)
Sleep data provider - failed to fetch current sleep event record (%@)
Sleep data provider - last good morning dismissed date (%@ -> %@)
Sleep data provider - failed to fetch current sleep schedule model (%@)
Sleep data provider - updated good morning alert notification enabled (%d -> %d)
Sleep data provider - failed to fetch current sleep event record for wake up date (%@)
Sleep data provider - updated last alarm wake up date (%@ -> %@)
Sleep data provider - failed to fetch current sleep schedule state update, setting state to disabled (%@)
Sleep data provider - sleep schedule state updated (%@)
Sleep data provider - failed to fetch cached sleep user day %@
Sleep data provider - failed to cache sleep user day %@
Sleep store schedule did change; updating sleep data provider and notifying observers
Sleep store settings did change; updating sleep data provider and notifying observers
Sleep store state did change; updating sleep data provider and notifying observers
Sleep store mode did change; updating sleep data provider and notifying observers
Sleep store record did change; updating sleep data provider and notifying observers
Most recent alarm wake up date did change; notifying observers
Last good morning dismissed date did change; notifying observers
Sleep store model did change; updating sleep data provider and notifying observers
Fitness App Restricted State %{public}@ to %{public}@, notifying delegate
%@ failed to query mindfulness sessions: %@
%@ starting mindfulness sessions query (retry count: %lu)
%@ stopping mindfulness sessions query
%@ reached max retry count %lu (max: %lu); not restarting query
Adding sample %@ to quantity slice %@ caused error: %@
Unable to find a random string for prefix %{public}@ in bundle %{public}@ with table name %{public}@
Could not find random key for prefix %@, returning prefix itself
Working with possible suffixes: %@, key %@, and table name %@
Attempted to localize key %@
Result of localization is nil, returning original key
Unable to find the string for key %{public}@ in bundle %{public}@ with table name %{public}@
Storing property %@
[HealthSettings] Failed to store characteristic %@ with error %{public}@
[HealthSettings] Internal error: no error argument passed for operation %{public}@, assuming the worst
[HealthSettings] Failed operation: %{public}@ with error %{public}@
[HealthSettings] Fetching lean body mass timed out
Adding sample %@ to quantity trigger %@ caused error: %@
Unsupported interval definitions version. Default interval workouts have been created with current version. User version:%lx Minimum supported version:%lx Current version:%lx
Error deserializing workout definition. Error: %@
Default interval workout definitions have been saved.
Error deserializing workout definition. error: %@
Error to unarchiving reminders %@
Error to archiving reminders %@
Unable to fetch date of birth, unable to determine fitness experience type
TypicalDayActivityModel cannot answer achievements question because delegate does not implement necessary achievements methods: 'bestMoveStreak' & 'currentMoveStreak'
Not projected to beat move record by EOD because too few days of Activity history to earn achievement
Projected to earn %f move credit by EOD; current record is %f
TypicalDayActivityModel cannot answer achievements question because delegate does not implement necessary achievements methods: 'totalMoveGoalsAttempted' & 'bestMoveValue'
User is in move minutes mode, not suggesting walk
User is in the fitness jr. experience, not suggesting walk
Not computing brisk walk time for user in move minutes mode.
Not computing brisk walk time for user in the fitness jr. experience.
Computed time to walk: %f
Walk is over 20 minutes, returning rounded to nearest 5 minutes: %f
Walk is under 20 minutes, returning rounded to nearest 1 minute: %f
Not computing brisk walk time because activity summary has no energy burned goal set.
Projected off wrist date is nil, using earliest of default day length or midnight: %@
Activity Summary (%@) is still loading.
Waiting for initial activity summary to load
Finished waiting for initial activity summary to load
Cannot build histogram for goal type %lu
Building typical-day histogram (goaltype=%lu) with activity summary for date: %{public}@
Skipping summary with start date %{public}@ for ring type %lu because it has more data then we have buckets (over 24 hour day)
Last active index: %ld, for start date: %{public}@, object date: %{public}@
Last active index is NOT FOUND, for start date: %{public}@, object date: %{public}@
Not enough activity data to predict off wrist time
Error enumerating activity summaries %{public}@
Setting up date buckets for date: %@
TypicalDayModel: binDate later than nextDate! %{public}@, %{public}@, %{public}@, %ld
Error reading activity mode characteristic. error=%@
No activity mode user default. Defaulting to HKActivityMoveModeActiveEnergy.
@"NSDictionary"8@?0
CustomDateComponents
CustomWeekdaySelection
Enabled
Type
FIMindfulnessReminder (%p): enabled: %d, type: %@, date components: (hour: %ld, minute: %ld)
Custom
StartOfDay
EndOfDay
Unknown
NanoLifestyleMindfulnessPreferencesChangedNotification
v32@?0@"HKQuantitySample"8Q16^B24
<%@:%p, finalized:%@, quantityType:%@, startDate:%@,            endDate:%@, numCommittedSamples:%lu, numUncommittedSamples:%lu, lastCommitDate:%@, commitedTotal:%@ committedDuration:%lu>
Sample %@ does not overlap with startDate:%@ endDate: %@
fitnessPlusEnabled
Fitness
watchOS
v12@?0B8
v8@?0
DeviceClassNumber
v28@?0@"NSNumber"8B16@"NSError"20
v24@?0@"NSArray"8@"NSError"16
B16@?0@"AKRemoteDevice"8
B16@?0@"ACAccount"8
q24@?0@"HKWorkoutEvent"8@"HKWorkoutEvent"16
q24@?0@"HKQuantitySample"8@"HKQuantitySample"16
Failed validation step: %@ for object %@
cachedSleepUserDay
com.apple.ActivityMonitorApp
com.apple.Fitness
com.apple.SessionTrackerApp
B16@?0@"LSApplicationProxy"8
initially set
changed
Allowed
Restricted
FIMindfulnessSessionDataProviderDidUpdate
mindfulnessSessionsQueue
endDate
@16@?0@"HKDeletedObject"8
v48@?0@"HKAnchoredObjectQuery"8@"NSArray"16@"NSArray"24@"HKQueryAnchor"32@"NSError"40
v32@?0@"FITrailingQuantityTimeSlice"8Q16^B24
@16@?0@"FITrailingQuantityTimeSlice"8
Event must be pause or resume event.  Event type: %ld
First event must be pause event.  Event type: %ld
New event date must be after previous date. Previous event date: %@. New event date: %@.
New event type must be resume. Previous event type: %ld. New event type: %ld.
Current event type must be pause. Previous event type: %ld. New event type: %ld.
type
quantity
FICanonicalQuantityUnitForIntervalType
FIIntervalDefinition.m
unit != nil
Key 'type' exists
B16@?0@"NSDictionary"8
Key 'quantity' exists
'quantity' is number
'type' is number
'type' is a valid identifier
@16@?0@"HKQuantityType"8
@16@?0@"FIQuantityTimeSlice"8
v32@?0@8Q16^B24
Localizable
Localizable-tinker
__key_not_found__
EEEE
LLLL
%@_%d
NAME
creationDate
startOfDay
endOfDay
v24@?0@"NSNumber"8^B16
dateOfBirth
height
weight
biologicalSexObject
wheelchairUse
No action defined for unknown property key %@
fetch birth date
fetch height
fetch weight
fetch sex
fetch wheelchair use
v32@?0@"HKSampleQuery"8@"NSArray"16@"NSError"24
<%@:%p, finalized:%@, quantityType:%@, startDate:%@,            endDate:%@, numUncommitedSamples:%lu, lastCommitDate:%@, commitedTotal:%@>
Cannot add sample - segment is finalized
[%02d] %06.2f 
com.apple.nanolifestyle.sessiontrackerapp.intervals
IntervalWorkoutDefinitions
IntervalWorkoutDefinitionsVersion
name
HIIT 30/10
identifier
sets
repeatCount
setType
intervalDefinitions
Quarter Mile Sprints
Varied Speed
com.apple.Mind
com.apple.Fitness.analytics.fitnessJr
.ageBucket
ageBucket
Over Twelve
.activityMoveModeSwitchedInSettings
newActivityMoveMode
Apple Move Time
Active Energy
Localizable-Simplified-tinker
Localizable-Modified-tinker
@16@?0@"FIIntervalSetDefinition"8
Key 'name' exists
Key 'identifier' exists
Key 'sets' exists
Sets is an arary
'sets' contains dictionaries only
FITypicalDayActivityModelTodayActivityDidChange
queue
startOfToday
endOfToday
percentageOfTypicalDayMoveComparedToNow
percentageOfTypicalDayBriskMinutesEarnedComparedToNow
userEndOfDay
userStartOfDay
moveHistogram
exerciseHistogram
totalActiveDays
B24@?0@"_HKActivityStatisticsQuantityInfo"8@"NSDictionary"16
v16@?0@"HKActivitySummary"8
CMCalorieUserInfo
Unable to find class %s
/System/Library/Frameworks/CoreMotion.framework/CoreMotion
/System/Library/Frameworks/CoreMotion.framework/Contents/MacOS/CoreMotion
CMNatalimeter
NanoLifestylePreferencesChangedNotification
FIDailyGoalTypeNone
FIDailyGoalTypeMove
FIDailyGoalTypeExercise
FIDailyGoalTypeStand
FIDailyGoalTypeAll
com.apple.fitness.intervals
mostRecentGoal
numTimesGoalAchieved
totalMove
totalSteps
totalDistance
totalFlights
totalBriskMinutes
dailyTotalsArray
totalPushCount
totalDeepBreathingSessionCount
com.apple.nanolifestyle.sessiontrackerapp
NanoLifestyleSessionTrackerAppPreferencesChangedNotification
com.apple.fitcored
NLPredictedActivityEndEnableNotification
NLPredictedActivityStartEnableNotification
BreathRate
HapticLevel
MigratedBreathRate
MigratedHapticLevel
EnableWeeklySummary
EnableStartOfDayReminder
EnableEndOfDayReminder
CustomReminders
DeepBreathingSettingsMigrated
NLPredictedActivityStartedMonitoringNotification
NLPredictedActivityClassifiedNotification
NLPredictedActivityEndedMonitoringNotification
<%@:%p, triggered:%@, triggeredDate:%@, _threshold:%@, _slice:%@
@16@?0@"FIIntervalDefinition"8
Key 'intervalDefinitions' exists
Key 'repeatCount' exists
Key 'setType' exists
'setType' is number
'repeatCount' is number
'intervalDefinitions' is an array
'setType' is a valid identifier
'intervalDefinitions' contains dictionaries only
NRPairedDeviceRegistry
/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
/System/Library/PrivateFrameworks/NanoRegistry.framework/Contents/MacOS/NanoRegistry
HKActivityMoveModeNotSet
HKActivityMoveModeActiveEnergy
HKActivityMoveModeAppleMoveTime
softlink:r:path:/System/Library/Frameworks/CoreMotion.framework/CoreMotion
softlink:r:path:/System/Library/PrivateFrameworks/NanoRegistry.framework/NanoRegistry
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
FIMindfulnessReminder
NSSecureCoding
NSCoding
FIMindfulnessAppMigrator
FITrailingQuantityTimeSlice
SampleProcessing
FIAppStoreAvailability
FIValidation
FISleepDataProvider
HKSPSleepStoreObserver
NSObject
FIFitnessAppsStateObserver
LSApplicationWorkspaceObserverProtocol
FIMindfulnessSessionDataProvider
FITrailingIntervalController
FIIntervalDefinition
FIDictionaryRepresentable
FIMutableTimeSliceGroup
Fitness
FIReduction
FIAdditions
FISleepUserDay
FIActivitySettingsController
NSCopying
FIQuantityTimeSlice
FIQuantityIntervalController
FIIntervalController
FISimpleHistogram
FIIntervalWorkoutDefinitionsManager
FIMindfulnessCustomReminderProvider
FIIntervalWorkoutDefinition
FITypicalDayActivityModel
FISleepDataProviderDelegate
FIIntervalQuantityTrigger
FIIntervalSetDefinition
FIQuantityInterval
sharedConnection
isHealthDataSubmissionAllowed
dictionaryWithObjects:forKeys:count:
initWithType:customDateComponents:customWeekdaySelection:enabled:
init
type
customDateComponents
isEqual:
customWeekdaySelection
hash
_typeDescription
hour
minute
stringWithFormat:
encodeObject:forKey:
encodeInteger:forKey:
encodeBool:forKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeBoolForKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithType:
initWithType:customDateComponents:
description
enabled
.cxx_destruct
_enabled
_customDateComponents
_customWeekdaySelection
_type
T@"NSDateComponents",R,N,V_customDateComponents
TQ,R,N,V_customWeekdaySelection
TB,R,N,V_enabled
Tq,R,N,V_type
initWithContainer:
_integerForKey:exists:
_removeObjectForKey:
_setInteger:key:
_synchronize
arrayWithObjects:count:
setWithArray:
synchronizeUserDefaultsDomain:keys:container:
standardUserDefaults
objectForKey:
integerValue
numberWithInteger:
setInteger:forKey:
removeObjectForKey:
synchronize
migrateIfNeeded
_container
distantFuture
initWithQuantityType:startDate:endDate:
canonicalUnit
quantityWithUnit:doubleValue:
initWithQuantityType:startDate:endDate:committedSamples:uncommittedSamples:lastCommitDate:committedTotal:finalized:
countByEnumeratingWithState:objects:count:
initWithStartDate:endDate:
_quantityByAddingQuantity:
timeIntervalSinceDate:
endDate
hk_isAfterDate:
autoCommitDateForSamples:
arrayByAddingObject:
_commitingSamples:toPreviousCommittedTotal:toPreviousCommittedSamples:untilDate:startDate:endDate:
count
arrayWithCapacity:
addObject:
enumerateObjectsUsingBlock:
arrayByAddingObjectsFromArray:
lastObject
earlierDate:
distantPast
committingUntilDate:
hk_isGreaterThanQuantity:
quantityType
compare:
startDate
enumerateObjectsWithOptions:usingBlock:
settingStartDate:
initWithQuantityType:startDate:
committedAndAddedTotal
committedDuration
activeDurationUntilDate:
addingSample:error:
addingSamples:error:
settingEndDate:
settingTotalQuantityLimit:
committedSamples
finalized
committedTotal
_uncommittedSamples
_committedSamples
_lastCommitDate
_finalized
_quantityType
_startDate
_endDate
_committedTotal
T@"HKQuantityType",R,N,V_quantityType
T@"NSDate",R,N,V_startDate
T@"NSDate",R,N,V_endDate
T@"NSArray",R,N,V_committedSamples
TB,R,N,V_finalized
T@"HKQuantity",R,N,V_committedTotal
Td,R,N
T@"HKQuantity",R,N
hk_isBeforeDate:
_totalByCommittingSample:toPreviousTotal:startDate:endDate:
subarrayWithRange:
fi_overlapsStartDate:endDate:
fi_isBeforeDate:
fi_isAfterDate:
fi_spansDate:useStrictDateLimits:
_isDeviceTablet
isFitnessPlusStorefrontContentAvailableWithCompletion:
_isSupportedWatchAvailableWithCompletion:
bagForProfile:profileVersion:
boolForKey:
localizedDescription
boolValue
valueWithCompletion:
sharedInstance
allAuthKitAccounts
ams_altDSID
setAltDSID:
setOperatingSystems:
fetchDeviceListWithContext:completion:
operatingSystemVersion
hk_firstObjectPassingTest:
fetchIsFitnessAvailableForDeviceWithCompletion:
intersectionWithDateInterval:
duration
quantity
_unit
doubleValueForUnit:
initWithCapacity:
copy
initWithArray:
dateInterval
sortUsingComparator:
dateByAddingTimeInterval:
test
name
validateObject:withError:
validationWithName:test:
performValidations:withObject:error:
_name
_test
T@"NSString",R,N,V_name
T@?,R,N,V_test
initWithSuiteName:
_fetchGoodMorningAlertNotificationEnabled
_fetchLastGoodMorningDismissedDate
_fetchLastAlarmWakeUpDate
_updateCurrentSleepScheduleState
_initialLoadSleepUserDay
addObserver:
removeObserver:
dealloc
_fetchCachedSleepUserDay
currentDate
creationDate
hk_isAfterOrEqualToDate:
currentCalendar
isDateInToday:
startOfDay
endOfDay
isEmpty
_setSleepUserDay:
_setEmptySleepUserDay:
_updateSleepUserDay
nextEventDueAfterDate:error:
_clearSleepUserDay
dueDate
_isDate:within24HoursOfDate:
identifier
_updateSleepUserDayFromWakeUp:currentDate:
_updateSleepUserDayFromWindDownOrBedtime:currentDate:
_setSleepUserDayWithStartOfDay:endOfDay:
sleepScheduleModelWithError:
previousEventWithIdentifier:dueBeforeDate:
initEmptySleepUserDay
_cacheSleepUserDay:
initWithStartOfDay:endOfDay:
currentSleepEventRecordWithError:
goodMorningDismissedDate
isEqualToDate:
goodMorningAlertNotificationEnabled
_lastAlarmWakeUpDateFromRecord:
wakeUpAlarmDismissedDate
wakeUpWithNoAlarmDate
currentSleepScheduleStateWithError:
_clearCurrentSleepScheduleState
valueForKey:
unarchivedObjectOfClasses:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
setObject:forKey:
sleepDataProviderUserDayDidUpdate
_updateLastAlarmWakeUpDateIfNeeded:
_updateLastGoodMorningDismissedDateIfNeeded:
sleepDataProviderLastAlarmWakeUpDateDidChange
sleepDataProviderLastGoodMorningDismissedDateDidChange
sleepEventRecord
_updateGoodMorningAlertNotificationEnabledIfNeeded:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
sleepStore:sleepScheduleDidChange:
sleepStore:sleepSettingsDidChange:
sleepStore:sleepEventDidOccur:
sleepStore:sleepScheduleStateDidChange:
sleepStore:sleepModeOnDidChange:
initWithSleepStore:delegate:
activate
sleepUserDay
lastGoodMorningDismissedDate
isGoodMorningAlertNotificationEnabled
lastAlarmWakeUpDate
isUserAwake
sleepStore:sleepEventRecordDidChange:
sleepStore:sleepScheduleModelDidChange:
_setUserDefaults:
setSleepUserDay:
setLastGoodMorningDismissedDate:
setIsGoodMorningAlertNotificationEnabled:
setLastAlarmWakeUpDate:
setIsUserAwake:
_sleepStore
_delegate
_currentSleepScheduleState
_userDefaults
_lock
_isGoodMorningAlertNotificationEnabled
_isUserAwake
_sleepUserDay
_lastGoodMorningDismissedDate
_lastAlarmWakeUpDate
T@"FISleepUserDay",&,N,V_sleepUserDay
T@"NSDate",C,N,V_lastGoodMorningDismissedDate
TB,N,V_isGoodMorningAlertNotificationEnabled
T@"NSDate",C,N,V_lastAlarmWakeUpDate
TB,N,V_isUserAwake
_cacheInitialFitnessAppsRestrictedState
defaultWorkspace
_fitnessAppBundleIdentifiers
bundleIdentifier
containsObject:
hk_filter:
_cacheCurrentFitnessAppsRestrictedStateWithProxies:initialLoad:
applicationProxyForIdentifier:
appState
isRestricted
fitnessAppsStateObserver:stateDidChange:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
initWithDelegate:
areFitnessAppsRestricted
_fitnessAppsState
sortDescriptorWithKey:ascending:
setSortDescriptor:
startMindfulnessSessionQueryIfNeeded
stopQuery:
categoryTypeForIdentifier:
_queue_retryMindfulSessionQueryWithRetryCount:
UUID
hk_mapToSet:
removeSamplesWithUUIDs:
insertSamples:
defaultCenter
postNotificationName:object:
initWithType:predicate:anchor:limit:resultsHandler:
setUpdateHandler:
_createMindfulnessSessionsQueryWithRetryCount:
executeQuery:
removeAllSamples
_queue_stopMindfulSessionQuery
_queue_startMindfulnessSessionQueryWithRetryCount:
allSamples
initWithHealthStore:
allMindfulnessSessionsWithCompletion:
_healthStore
_serialQueue
_mindfulnessSessions
_mindfulnessSessionsQuery
addSamples:
_updateSlicesWithSamples:
_determineAndProcessThresholdReached
reverseObjectEnumerator
allObjects
fi_mapUsingBlock:
_addPauseEvent:
_addResumeEvent:
arrayWithArray:
replaceObjectAtIndex:withObject:
_processUncommittedSamples
initWithQuantityType:threshold:startDate:
addSample:
addEvent:withError:
setThreshold:
idleDurationUntilDate:
threshold
thresholdReached
pauseResumeEvents
_slices
_thresholdReached
_threshold
_pauseResumeEvents
T@"HKQuantity",&,N,V_threshold
TB,R,N,V_thresholdReached
T@"NSArray",R,N,V_pauseResumeEvents
secondUnit
meterUnit
intervalDefinitionWithTypeIdentifier:quantity:
objectForKeyedSubscript:
doubleValue
initWithTypeIdentifier:quantity:
numberWithDouble:
definitionFromDictionary:error:
dictionaryRepresentation
byChangingType:quantity:
_quantity
T@"HKQuantity",R,N,V_quantity
initWithTimeSlices:
timeSliceGroupForQuantityTypes:startDate:
commitAllSlicesToDate:
updateSlicesWithEndDate:
updateSlicesWithSample:
allSlicesFinalized
slices
T@"NSArray",R,N,V_slices
TB,R,D,N
hk_isBeforeOrEqualToDate:
reductionWithObject:
initWithObject:
object
_object
T@,R,N,V_object
fi_flatMapUsingBlock:
fi_filteredArrayUsingBlock:
fi_reduceWithReduction:block:
fi_arrayByEnumeratingRange:usingBlock:
setRoundingMode:
setMaximumFractionDigits:
stringFromNumber:
setNumberStyle:
setFormattingContext:
setLocalizedDateFormatFromTemplate:
stringFromDate:
setDateFormat:
isEqualToString:
localizedStringForKey:value:table:
objectAtIndexedSubscript:
stringByAppendingString:
containsString:
rangeOfString:
stringByReplacingOccurrencesOfString:withString:options:range:
date
setCreationDate:
setStartOfDay:
setEndOfDay:
_creationDate
_startOfDay
_endOfDay
T@"NSDate",C,N,V_creationDate
T@"NSDate",C,N,V_startOfDay
T@"NSDate",C,N,V_endOfDay
hk_weekendDays
unsignedIntegerValue
_setUncommitedValue:forPropertyKey:
setObject:forKeyedSubscript:
_setHeightCharacteristicQuantity:error:
_setBodyMassCharacteristicQuantity:error:
hk_canonicalDateOfBirthDateComponentsWithDate:
_setDateOfBirthComponents:error:
_setBiologicalSex:error:
_setWheelchairUse:error:
raise:format:
dateOfBirthComponentsWithError:
calendarWithIdentifier:
dateFromComponents:
_logAndNilError:operationDescription:
_heightCharacteristicQuantityWithError:
_bodyMassCharacteristicQuantityWithError:
biologicalSexWithError:
biologicalSex
wheelchairUseWithError:
wheelchairUse
removeAllObjects
setWheelchairUse:
allKeys
_commitValue:forPropertyKey:error:
quantityTypeForIdentifier:
initWithSampleType:predicate:limit:sortDescriptors:resultsHandler:
mutableCopy
copyWithZone:
setDateOfBirth:
setHeight:
setWeight:
setBiologicalSex:
_hasDirtyPropertyForPropertyKey:
populateExistingCharacteristics
commmitWithError:
experienceType
leanBodyMass
dateOfBirth
height
weight
updateHandler
_dirtyPropertiesMap
_dateOfBirth
_height
_weight
_biologicalSex
_wheelchairUse
_updateHandler
T@"NSDate",C,N,V_dateOfBirth
T@"HKQuantity",&,N,V_height
T@"HKQuantity",&,N,V_weight
Tq,N,V_biologicalSex
Tq,N,V_wheelchairUse
T@?,C,N,V_updateHandler
initWithQuantityType:startDate:endDate:uncommitedSamples:lastCommitDate:committedTotal:finalized:
_commitingSamples:toPreviousCommittedTotal:untilDate:startDate:endDate:
initWithQuantityType:startDate:threshold:
_updateTriggerWithSample:
triggered
triggeredDate
intervalComplete
intervalEndDate
TB,R,N
T@"NSDate",R,N
initWithIntervalQuantityType:threshold:startDate:trackedQuantityTypes:
isIntervalEndDate
_quantityTrigger
_sliceGroup
T@"NSDate",R,D,N
descriptionArray
stringByPaddingToLength:withString:startingAtIndex:
bucketCount
initWithNumberOfBuckets:
valueForBucketAtIndex:
addValue:toBucketAtIndex:
numberOfValuesInBucketAtIndex:
_bucketCount
_buckets
initWithDomain:
_checkVersion
loadIntervalWorkoutDefinitions
integerForKey:keyExistsAndHasValidFormat:
_saveDefaultIntervalWorkouts
_deserializeIntervalWorkoutDefinitions:
domain
synchronizeNanoDomain:keys:
_serializeRootIntervalWorkoutDefinitions:
_saveRootIntervalWorkoutDefinitions:
indexOfObject:
_updateIntervalWorkoutDefinition:activityTypeIdentifier:
_serializeAndSaveRootIntervalWorkoutDefinitions:
removeObjectAtIndex:
_trimRootIntervalWorkoutDefinitions:
array
_defaultUserIntervalWorkouts
_mockQuarterMileSprints
_mockVariedSpeed
_mockHIIT3010
UUIDString
saveIntervalWorkoutDefinition:activityTypeIdentifier:
removeIntervalWorkoutDefinitionAtIndex:activityTypeIdentifier:
intervalWorkoutDefinitionsForActivityTypeIdentifier:
_domainAccessor
_syncManager
_rootIntervalWorkoutDefinitions
persistentDomainForName:
numberWithBool:
setWithObject:
synchronizeUserDefaultsDomain:keys:
setBool:forKey:
setWithObjects:
reminders
updateReminders:
hk_gregorianCalendar
intervalCount
intervalAtIndex:
initWithUUIDString:
initWithName:identifier:sets:
sets
initWithIntervalDefinitions:repeatCount:setType:
insertObject:atIndex:
objectAtIndex:
byAddingIntervalDefinition:
byReplacingSetDefinitionAtIndex:withSetDefinition:
section
byInsertingIntervalDefinition:atIndex:
byReplacingIntervalDefinitionAtIndex:withIntervalDefinition:
byRemovingIntervalDefinitionAtIndex:
intervalWorkoutDefinition
intervalDefinitionForIntervalAtIndex:
byChangingName:
byAddingSetDefinition:
byInsertingSetDefinition:atIndex:
byRemovingSetDefinitionAtIndex:
byAddingIntervalDefinition:toSetIndex:
byInsertingIntervalDefinition:atIndexPath:
byReplacingIntervalDefinitionAtIndexPath:withIntervalDefinition:
byRemovingIntervalDefinitionAtIndexPath:
_identifier
_sets
T@"NSUUID",R,N,V_identifier
T@"NSArray",R,N,V_sets
TQ,R,D,N
minuteUnit
countUnit
initForDateInterval:delegate:sleepDataProvider:
setDelegate:
_queue_populateHistogramsAndOffWristDateForToday
delegate
startOfDayForDate:
startOfToday
dateByAddingUnit:value:toDate:options:
_bucketIndexForDate:startOfDay:bucketDates:
timeIntervalSinceReferenceDate
_waitUntilActivitySummaryLoaded
appleExerciseTime
_queue_currentValueForHistogram:
_percentageOfTypicalDayComparedToNowForGoal:
appleExerciseTimeGoal
_willCompleteGoalWithType:bufferPercentage:
userEndOfDay
_standHoursCompletionPercentage
appleStandHoursGoal
appleStandHours
_exerciseTimeCompletionPercentage
bestMoveStreak
currentMoveStreak
totalMoveGoalsAttempted
bestMoveValue
endOfToday
percentageOfTypicalDayMoveComparedToNow
percentageOfTypicalDayBriskMinutesEarnedComparedToNow
userStartOfDay
totalActiveDays
activityMoveMode
briskWalkTimeToCompleteMoveGoalWithAcitivitySettingsController:
hk_startOfDateByAddingDays:toDate:
_queue_briskWalkTimeToCompleteMoveGoalWithDateOfBirth:biologicalSex:height:weight:wheelchairUse:experienceType:
_hasEnergyBurnedGoal
activeEnergyBurnedGoal
smallCalorieUnit
activeEnergyBurned
gramUnitWithMetricPrefix:
initWithAge:gender:height:weight:condition:
computeTimeToActiveCalories:user:workoutType:
firstOnWristDateToday
projectedOffWrist
_goodMorningAlertDismissedDateForToday
_isDataLoading
typicalDayActivityModelDidUpdate
_dailyBriskMinutesStatistics
_bucketDateForIndex:startOfDay:
quantityValue
predicateWithBlock:
filteredArrayUsingPredicate:
isMainThread
_emptySimpleHistogram
_queue_updateHistogram:goalType:activitySummary:
_queue_updateProjectedOffWristDateHistogram:activitySummary:activeDays:
_queue_enumerateActivitySummariesOrderedByCacheIndexWithCalendar:error:handler:
_queue_calculateProjectedOffWristDateFromHistogram:activeDays:
components:fromDate:
enumerateActivitySummariesFromDateComponents:toDateComponents:error:handler:
containsDate:
appleMoveMinutes
appleMoveMinutesGoal
_moveMinutesCompletionPercentage
_activeEnergyCompletionPercentage
_dailyMoveMinutesStatistics
_dailyEnergyBurnedStatistics
initForDateInterval:delegate:
valueOfTypicalDayBriskMinutesEarnedByNow
valueOfTypicalDayMoveEarnedByNow
willCompleteMoveGoalWithBufferPercentage:
willCompleteExerciseGoalWithBufferPercentage:
willCompleteStandGoalOrItIsTooLateWithBufferPercentage:
currentMoveGoalPercentage
currentExerciseGoalPercentage
currentStandGoalPercentage
willCompletingMoveRingEarnStreakAchievement
projectedToBeatMoveRecordByEndOfDay
rebuildWithInterval:
shouldSuggestWalkWithActivitySettingsController:
projectedDayDuration
isSleepAlarmEnabledForToday
userWakeUpDateForToday
handleUpdatedCurrentActivitySummary:
_setProjectedOffWristDateToday:
_sleepDataProvider
_interval
_queue_currentActivitySummary
_queue_moveHistogram
_queue_exerciseHistogram
_queue_bucketDates
_activitySummaryLoaded
_activitySummaryBarrierGroup
_queue
_projectedOffWristDateToday
_totalActiveDays
_sleepUserDayLock
T@"<FITypicalDayActivityModelDelegate>",W,N,V_delegate
Tq,R,N
component:fromDate:
errorWithDomain:code:userInfo:
initWithQuantityTimeslice:threshold:triggeredDate:
hk_isLessThanQuantity:
settingTimeSlice:
_finalizedTriggerByAddingSample:toSlice:withPreviousTotal:threshold:
_slice
_completion
_triggeredDate
T@"HKQuantityType",R,D,N
T@"NSDate",R,N,V_triggeredDate
intervalDefinitions
repeatCount
setType
byChangingRepeatCount:
byChangingSetType:
_intervalDefinitions
_repeatCount
_setType
T@"NSArray",R,N,V_intervalDefinitions
Tq,R,N,V_repeatCount
Tq,R,N,V_setType
components:fromDate:toDate:options:
year
_isMetricDistance
meterUnitWithMetricPrefix:
mileUnit
activePairedDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
firstObject
isWorkoutEndReminderEnabledWhenDeviceIsInMoveTimeMode:withCurrentSetting:
isWorkoutStartReminderEnabledWhenDeviceIsSatellitePaired:isInMoveTimeMode:withCurrentSetting:
_activityMoveModeWithError:
_isZero
moveMinuteGoal
calorieGoal
quantitySampleWithType:quantity:startDate:endDate:
exerciseGoal
standGoal
saveObjects:withCompletion:
dateWithTimeIntervalSinceReferenceDate:
categorySampleWithType:value:startDate:endDate:
initWithIntervalDefinition:activityType:startDate:
definition
trackedQuantityType
_definition
_trackedQuantityType
T@"FIIntervalDefinition",R,N,V_definition
T@"HKQuantityType",R,N,V_trackedQuantityType
T@"HKQuantity",R,N,V_threshold
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8q16
@32@0:8q16@24
@44@0:8q16@24Q32B40
B24@0:8@16
Q16@0:8
@16@0:8
q16@0:8
v16@0:8
@"NSDateComponents"
q32@0:8@16^B24
v32@0:8q16@24
@"NSString"
@32@0:8@16@24
@40@0:8@16@24@32
@76@0:8@16@24@32@40@48@56@64B72
d16@0:8
d24@0:8@16
@32@0:8@16^@24
@"NSArray"
@"NSDate"
@"HKQuantityType"
@"HKQuantity"
@48@0:8@16@24@32@40
@64@0:8@16@24@32@40@48@56
v24@0:8@?16
@32@0:8@16@?24
B40@0:8@16@24^@32
B32@0:8@16^@24
@?16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@16Q24
v28@0:8@16B24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSchedule"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepSettings"24
v32@0:8@"HKSPSleepStore"16@"HKSPSleepEvent"24
v32@0:8@"HKSPSleepStore"16Q24
v28@0:8@"HKSPSleepStore"16B24
B20@0:8B16
B32@0:8@16@24
v20@0:8B16
@"HKSPSleepStore"
@"<FISleepDataProviderDelegate>"
@"NSUserDefaults"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"FISleepUserDay"
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
@"<FIFitnessAppsStateObserverDelegate>"
v24@0:8q16
@"HKHealthStore"
@"NSObject<OS_dispatch_queue>"
@"HKSortedSampleArray"
@"HKAnchoredObjectQuery"
@"NSDictionary"16@0:8
@32@0:8@"NSDictionary"16^@24
B28@0:8@16B24
@24@0:8@?16
@40@0:8{_NSRange=QQ}16@?32
@24@0:8^{_NSZone=}16
B32@0:8^@16@24
B24@0:8^@16
@"NSMutableDictionary"
@68@0:8@16@24@32@40@48@56B64
@56@0:8@16@24@32@40@48
@"NSDate"16@0:8
@"FIIntervalQuantityTrigger"
@"FIMutableTimeSliceGroup"
d24@0:8Q16
v32@0:8d16Q24
q24@0:8Q16
^{?=qd}
@"NPSDomainAccessor"
@"NPSManager"
@32@0:8@16Q24
@32@0:8Q16@24
@24@0:8Q16
@"NSUUID"
@"NSCalendar"16@0:8
d24@0:8q16
B32@0:8q16d24
B24@0:8d16
d64@0:8@16q24@32@40q48Q56
v40@0:8@16q24@32
v40@0:8@16@24^q32
@32@0:8@16q24
B40@0:8@16^@24@?32
q40@0:8@16@24@32
@"NSDateInterval"
@"HKActivitySummary"
@"FISimpleHistogram"
@"NSMutableArray"
@"NSObject<OS_dispatch_group>"
@"FISleepDataProvider"
@"<FITypicalDayActivityModelDelegate>"
@"FIQuantityTimeSlice"
@40@0:8@16q24q32
@40@0:8@16Q24@32
@"FIIntervalDefinition"
A`%y@
