BDSErrorDomain
com.apple.iBooks.BookDataStoreService
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v8@?0
v16@?0@"NSError"8
v32@?0@"NSArray"8@"BCMutableCloudSyncVersions"16@"NSError"24
v32@?0@"NSArray"8{_NSRange=QQ}16
v20@?0B8@"NSError"12
v24@?0B8B12@"NSError"16
remoteObjectProxy
T@"<BDSServiceProtocol><NSXPCProxyCreating>",R,N,V_remoteObjectProxy
connection
T@"NSXPCConnection",R,N,V_connection
connectionHealthy
TB,N,V_connectionHealthy
name
collectionDescription
hidden
sortOrder
sortMode
collectionDetail
deletedFlag
TB,R,N
modificationDate
T@"NSDate",R,C,N
editGeneration
Tq,R,N
syncGeneration
systemFields
T@"CKRecord",R,C,N
ckSystemFields
T@"NSData",R,C,N
privacyDelegate
T@"<BCCloudDataPrivacyDelegate>",W,N
collectionID
T@"NSString",R,C,N
Ti,R,N
the same
newer
collectionID: %@, Name: %@, Description: %@ hidden:%@ sortOrder:%d sortMode %d
T@"NSString",C,D,N
TB,D,N
Ti,D,N
collectionID: %@, Name: %@, Description: %@ hidden:%@ sortOrder:%d sortMode:%d
supportsSecureCoding
TB,R
T@"NSString",C,N,V_collectionID
T@"NSString",C,N,V_name
T@"NSString",C,N,V_collectionDescription
TB,N,V_hidden
Ti,N,V_sortOrder
Ti,N,V_sortMode
iBooks
BCCloudKitFetchChangesTransaction-
cloudKitController
T@"BCCloudKitController",W,N,V_cloudKitController
NSManagedObjectContextIMAdditionsSafeAccessState
objectID
dataType
cloudVersion
localVersion
syncVersion
historyToken
historyTokenOffset
T@"NSPersistentHistoryToken",R,C,N
rawHistoryToken
T@"NSData",C,D,N
T@"NSPersistentHistoryToken",C,D,N
Tq,D,N
dataType: %@, cloudVersion: %lld, localVersion: %lld, syncVersion: %lld historyToken:%@ historyTokenOffset=%lld
T@"NSString",C,N,V_dataType
T@"NSPersistentHistoryToken",C,N,V_historyToken
Tq,N,V_historyTokenOffset
Tq,N,V_cloudVersion
Tq,N,V_localVersion
Tq,N,V_syncVersion
com.apple.iBooks
BookDataStore.CloudKit
BookDataStore.CloudKitAudiobook
BookDataStore.ServiceCenter
BookDataStore.Service
BookDataStore.ArtworkImporter
BCCloudKitDataChangedTransaction-
notificationName
T@"NSString",C,N,V_notificationName
v12@?0B8
sharedClient
T@"BDSJaliscoDAAPClient",R,N
serviceProxy
T@"BDSServiceProxy",&,N,V_serviceProxy
familyUpdateInProgress
TB,N,V_familyUpdateInProgress
BCSyncCloudKit
BCCloudAssetAnnotationManagerChanged
BCAssetAnnotations
BCCloudAssetAnnotationManagerAssetCache
com.apple.BCCloudAssetAnnotationManager
annotationCreationDate
T@"NSDate",R,&,N
annotationCreatorIdentifier
T@"NSString",R,&,N
annotationDeleted
TB,R,N,GisAnnotationDeleted
annotationIsUnderline
annotationLocation
annotationModificationDate
annotationNote
annotationRepresentativeText
annotationSelectedText
annotationStyleNumber
T@"NSNumber",R,&,N
annotationTypeNumber
annotationUuid
plAbsolutePhysicalLocation
plLocationRangeStart
plLocationRangeEnd
plUserData
T@"NSData",R,&,N
plStorageUUID
physicalPageNumber
annotationVersion
assetVersion
attachments
chapterTitle
userModificationDate
annotationSelectedTextRange
T{_NSRange=QQ},R,N
readingProgressHighWaterMark
Tf,R,N
readingProgress
spineIndexUpdated
locationModificationDate
futureProofing12
assetID = %@
assetID IN %@
assetID
v28@?0B8@"NSArray"12@"NSError"20
annotationsDataSource
T@"BCCloudDataSource",&,N,V_annotationsDataSource
syncManager
T@"BCCloudDataSyncManager",&,N,V_syncManager
dataManager
T@"BCCloudDataManager",&,N,V_dataManager
ckAssetStoreDirectory
T@"NSURL",&,N,V_ckAssetStoreDirectory
enableCloudSync
TB,N,V_enableCloudSync
%@ %@
location
length
TQ,N,V_location
TQ,N,V_length
storeItem
storeID
storeID: %@, 
T@"NSString",C,N,V_storeID
starRating
reviewTitle
reviewBody
assetReview
assetReviewID
Ts,R,N
normalizedStarRating
Td,R,N
userID
assetReviewID: %@, starRating: %hd, reviewTitle: %@, reviewBody: %@
%@|%@
Ts,D,N
Td,N
T@"NSString",C,N,V_assetReviewID
T@"NSString",C,N,V_userID
Ts,N,V_starRating
T@"NSString",C,N,V_reviewTitle
T@"NSString",C,N,V_reviewBody
com.apple.iBooks.CloudKitTransactionManager
transactionAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_transactionAccessQueue
transactions
T@"NSMutableDictionary",&,N,V_transactions
NSError %@
NSDetailedErrors
----------------------- Sub-errors: %03lu
Not an NSError: %@
-----------------------
BCCloudCollections
BCCloudCollectionMemberManagerChanged
BCCloudCollectionDetailManagerChanged
momd
collectionDetailManager
T@"NSObject<BCCloudCollectionDetailManager>",&,N,V_collectionDetailManager
collectionMemberManager
T@"NSObject<BCCloudCollectionMemberManager>",&,N,V_collectionMemberManager
changeTokenController
T@"BCCloudChangeTokenController",&,N,V_changeTokenController
objectModel
T@"NSManagedObjectModel",&,N,V_objectModel
collectionDataSource
T@"BCCloudDataSource",&,N,V_collectionDataSource
proxyMode
TB,N,V_proxyMode
localRecordID
localRecordIDEncrypted
%@.%@
saltedHashedID
T@"NSDate",C,D,N
T@"CKRecord",C,D,N
T@"<BCCloudDataPrivacyDelegate>",W,N,V_privacyDelegate
TB,N,V_deletedFlag
T@"NSDate",C,N,V_modificationDate
Tq,N,V_editGeneration
Tq,N,V_syncGeneration
T@"NSString",C,N,V_localRecordID
T@"CKRecord",C,N,V_systemFields
T@"NSData",R,C,D,N
AssetZone
CollectionZone
ReadingStatistics
GlobalMetadata
ReadingHistoryModel
com.apple.iBooks.CloudKitController
com.apple.iBooks.cloudData
com.apple.NanoBooks
BCCloudKit-iBooks
bcck
BCPrivateDatabase
com.apple.iBooks.BCCloudKitPrivate
Want_To_Read_Collection_ID
isFinished
notFinished
lastOpenDate
dateFinished
taste
tasteSyncedToStore
readingPositionCFIString
readingPositionAnnotationVersion
readingPositionAssetVersion
readingPositionUserData
readingPositionLocationRangeStart
readingPositionLocationRangeEnd
readingPositionAbsolutePhysicalLocation
readingPositionStorageUUID
readingPositionLocationUpdateDate
datePlaybackTimeUpdated
bookmarkTime
collectionMemberID
queueIdentifier
T@"NSString",R,N
containerIdentifier
appZones
T@"NSArray",R,N
serviceZones
dbArchiveFolderName
dbArchiveExtension
dbArchiveFilename
dbSubscriptionID
appBundleIdentifier
requiresDeviceToDeviceEncryption
T@"NSString",&,N,V_queueIdentifier
T@"NSString",&,N,V_containerIdentifier
T@"NSArray",&,N,V_appZones
T@"NSArray",&,N,V_serviceZones
T@"NSString",&,N,V_dbArchiveFolderName
T@"NSString",&,N,V_dbArchiveExtension
T@"NSString",&,N,V_dbArchiveFilename
T@"NSString",&,N,V_dbSubscriptionID
T@"NSString",&,N,V_appBundleIdentifier
TB,N,V_requiresDeviceToDeviceEncryption
creationDate
creatorIdentifier
deleted
isUnderline
locationCFIString
note
representativeText
selectedText
style
type
uuid
selectedTextRange
futureProofing11
plLocationStorageUUID
-[BCProtoAnnotation writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoBooks_Sim/NanoBooks-272.1/frameworks/BookCore/BookCore/Assets/BCProtoAnnotation.m
nil != self->_creatorIdentifier
nil != self->_uuid
Td,N,V_creationDate
T@"NSString",&,N,V_creatorIdentifier
hasDeleted
TB,N
TB,N,V_deleted
hasIsUnderline
TB,N,V_isUnderline
hasLocationCFIString
T@"NSString",&,N,V_locationCFIString
Td,N,V_modificationDate
hasNote
T@"NSString",&,N,V_note
hasRepresentativeText
T@"NSString",&,N,V_representativeText
hasSelectedText
T@"NSString",&,N,V_selectedText
hasStyle
TI,N,V_style
hasType
TI,N,V_type
T@"NSString",&,N,V_uuid
hasPhysicalPageNumber
T@"NSString",&,N,V_physicalPageNumber
hasAnnotationVersion
T@"NSString",&,N,V_annotationVersion
hasAssetVersion
T@"NSString",&,N,V_assetVersion
hasAttachments
T@"NSString",&,N,V_attachments
hasChapterTitle
T@"NSString",&,N,V_chapterTitle
hasUserModificationDate
Td,N,V_userModificationDate
hasSelectedTextRange
T@"BCAnnotationRange",&,N,V_selectedTextRange
hasReadingProgressHighWaterMark
Tf,N,V_readingProgressHighWaterMark
hasSpineIndexUpdated
TB,N,V_spineIndexUpdated
hasReadingProgress
Tf,N,V_readingProgress
hasFutureProofing11
T@"NSString",&,N,V_futureProofing11
hasFutureProofing12
T@"NSString",&,N,V_futureProofing12
hasPlAbsolutePhysicalLocation
Ti,N,V_plAbsolutePhysicalLocation
hasPlLocationRangeEnd
Ti,N,V_plLocationRangeEnd
hasPlLocationRangeStart
Ti,N,V_plLocationRangeStart
hasPlLocationStorageUUID
T@"NSString",&,N,V_plLocationStorageUUID
hasPlUserData
T@"NSData",&,N,V_plUserData
hasLocationModificationDate
Td,N,V_locationModificationDate
CFBundleShortVersionString
assetAnnotations
bookAnnotations
T@"NSData",R,N
assetID: %@, assetVersion: %@, statistics: %@
T@"NSData",&,D,N
assetID: %@, assetVersion: %@, annotations: %@
T@"NSString",C,N,V_assetVersion
T@"NSData",&,N,V_bookAnnotations
T@"NSString",R,C,N,V_assetID
BDSCloudGlobalMetadataManagerChanged
BDSCloudGlobalMetadataManagerFetchedRecordsChanged
BCCloudGlobalMetadata
BCGlobalMetadatum
key = %@
key IN %@
saltedHashedID IN %@
key = %@  AND (deletedFlag == NULL OR deletedFlag == NO)
v24@?0@"<BCCloudData>"8@"NSError"16
v24@?0@"BCMutableGlobalMetadatum"8@"NSError"16
globalMetadataDataSource
T@"BCCloudDataSource",&,N,V_globalMetadataDataSource
conflictResolvers
T@"NSMutableDictionary",&,N,V_conflictResolvers
BDSICloudIdentityTokenTrackerToken
BDSICloudIdentityToken.plist
com.apple.iBooks.BDSICloudStatusMonitor.dispatchQueue
plistContents
T@"NSMutableDictionary",&,N,V_plistContents
plistURL
T@"NSURL",&,N,V_plistURL
currentToken
T@"BDSICloudIdentityToken",&,N,V_currentToken
dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
trackLiverpool
TB,N,V_trackLiverpool
com.apple.iBooks.CloudKitTransaction.
v16@?0@?<v@?>8
_coalescedNotification in %@
v16@?0@"NSString"8
BCCloudKitTransaction-
entityName
T@"NSString",C,N,V_entityName
coalescedNotification
T@"BUCoalescingCallBlock",&,N,V_coalescedNotification
osTransaction
T@"BDSOSTransaction",&,N,V_osTransaction
lifecycleAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_lifecycleAccessQueue
transactionLifetime
T@"NSObject<OS_dispatch_source>",&,N,V_transactionLifetime
delegate
T@"<BCCloudKitTransactionDelegate>",W,N,V_delegate
clientCount
Tq,N,V_clientCount
hasUpdatedSubscription
serverChangeToken
userRecordID
recordIDSalt
salt
saltEncrypted
<%@: %p recordZone:%@>
recordZone
T@"CKRecordZone",R,N,V_recordZone
com.apple.iBooks.CloudKitDatabaseController
_coalescedArchive in BCCloudKitDatabaseController
_coalescedZoneFetch in BCCloudKitDatabaseController
v24@?0@"CKRecord"8@"NSError"16
v24@?0@"CKRecordID"8@"NSError"16
v32@?0@"NSString"8Q16^B24
attachWithDatabase
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"CKRecordZoneID"8
v16@?0@"CKServerChangeToken"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
v32@?0@"CKRecordZone"8Q16^B24
v24@?0@"NSArray"8@"NSError"16
v24@?0@"CKRecordZoneID"8^B16
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"CKRecordZoneID"8Q16^B24
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v32@?0@"NSString"8@"NSArray"16^B24
zoneName
B32@?0@"<BCCloudKitDatabaseObserver>"8Q16^B24
v32@?0@"NSString"8@"NSMutableArray"16^B24
database
T@"CKDatabase",&,N,V_database
container
T@"CKContainer",&,N,V_container
archiveURL
T@"NSURL",C,N,V_archiveURL
desiredRecordZoneIDs
T@"NSArray",C,N,V_desiredRecordZoneIDs
changedRecordZoneIDs
T@"NSMutableSet",&,N,V_changedRecordZoneIDs
accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
coalescedArchive
T@"BUCoalescingCallBlock",&,N,V_coalescedArchive
subscriptionID
T@"NSString",C,N,V_subscriptionID
T@"NSString",C,N,V_containerIdentifier
T@"CKRecordID",&,N,V_userRecordID
T@"CKServerChangeToken",&,N,V_serverChangeToken
T@"NSData",&,N,V_recordIDSalt
recordZones
T@"NSMutableDictionary",&,N,V_recordZones
observers
T@"NSMutableDictionary",&,N,V_observers
tokenStores
T@"NSMutableDictionary",&,N,V_tokenStores
coalescedZoneFetch
T@"BUCoalescingCallBlock",&,N,V_coalescedZoneFetch
attachedToContainer
TB,N,V_attachedToContainer
backOffInterval
Td,N,V_backOffInterval
serverFetchPostponed
TB,N,V_serverFetchPostponed
fetchRecordZoneChangesSuccess
TB,N,V_fetchRecordZoneChangesSuccess
hasSubscription
TB,N,V_hasSubscription
liverpoolIdentityToken
nonNilLiverpoolIdentityToken
com.apple.tcc.access.changed
com.apple.iBooks.BDSLiverpoolStatusMonitor.dispatchQueue
com.apple.iBooks.BDSLiverpoolStatusMonitor.notifyQueue
v12@?0i8
/Library/Caches/com.apple.xbs/Sources/NanoBooks_Sim/NanoBooks-272.1/frameworks/BookDataStore/Utilities/BDSLiverpoolStatusMonitor.m
-[BDSLiverpoolStatusMonitor addObserver:]_block_invoke
[self.observers containsObject:observer] == NO
%p is already an observer
<%@(%p) CloudKit=%@ optedIn=%@
lastArchivedICloudIdentityToken
T@"BDSICloudIdentityToken",C,N,V_lastArchivedICloudIdentityToken
lastArchivedNonNilICloudIdentityToken
T@"BDSICloudIdentityToken",C,N,V_lastArchivedNonNilICloudIdentityToken
currentICloudIdentityToken
T@"BDSICloudIdentityToken",C,N,V_currentICloudIdentityToken
optedIn
TB,N,V_optedIn
optedInKnown
TB,N,V_optedInKnown
lastArchivedNonNilICloudIdentityTokenWasNonNilAtColdLaunch
TB,N,V_lastArchivedNonNilICloudIdentityTokenWasNonNilAtColdLaunch
tccNotifyToken
Ti,N,V_tccNotifyToken
containerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_containerQueue
notifyQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notifyQueue
T@"NSHashTable",&,N,V_observers
coordinatingObserver
T@"<BDSLiverpoolStatusChangeObserving>",W,N,V_coordinatingObserver
iCloudIdentityToken
T@"BCICloudIdentityToken",R,C,N
userIdentityPreviouslyRecordedOnThisDevice
BDSArrayAdditionsErrorDomain
watchSynced-
BKLibrary.ReadingNow
BKAudioBookSkipForward
BKAudioBookSkipBackward
BCOverrideRecentBookAlgorithm
BCTimeThresholdPromotionOverride
syncedPreferenceKeys
BCServerChangeToken
T@"NSManagedObjectContext",W,N,V_moc
T@"NSString",C,N,V_zoneName
BDSReachabilityErrorDomain
kNetworkReachabilityChangedNotification
T@"NSObject<OS_os_transaction>",&,N,V_osTransaction
BCAssetData
BCCloudAssetDetailManagerChanged
BCCloudReadingNowDetailManagerChanged
BCCloudAssetReviewManagerChanged
BCCloudStoreAssetManagerChanged
assetAnnotationManager
T@"BCCloudAssetAnnotationManager",&,N,V_assetAnnotationManager
assetDetailManager
T@"NSObject<BCCloudAssetDetailManager>",&,N,V_assetDetailManager
readingNowDetailManager
T@"NSObject<BCCloudReadingNowDetailManager>",&,N,V_readingNowDetailManager
assetReviewManager
T@"NSObject<BCCloudAssetReviewManager>",&,N,V_assetReviewManager
storeAssetManager
T@"NSObject<BCCloudStoreAssetManager>",&,N,V_storeAssetManager
assetDataSource
T@"BCCloudDataSource",&,N,V_assetDataSource
com.apple.iBooks.CloudDataSyncManager
v16@?0B8B12
v32@?0@"CKRecordID"8@"BCMutableCloudData"16^B24
T@"BCCloudKitController",&,N,V_cloudKitController
dataMapper
T@"<BCCloudDataMapper>",&,N,V_dataMapper
syncQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
processingCloudData
TB,N,V_processingCloudData
tooBigBatch
TQ,N,V_tooBigBatch
serverPushPostponed
TB,N,V_serverPushPostponed
T@"<BCCloudDataSyncManagerDelegate>",W,N,V_delegate
_coalescedAttachment in BCCloudKitController
v24@?0@"CKAccountInfo"8@"NSError"16
v24@?0q8@"NSError"16
v40@?0q8@"NSError"16@"CKAccountInfo"24@"NSError"32
sharedInstance
T@"BCCloudKitController",R
transactionManager
T@"BCCloudKitTransactionManager",&,N,V_transactionManager
privateCloudDatabaseController
T@"BCCloudKitDatabaseController",&,V_privateCloudDatabaseController
gettingAccountInfo
TB,N,V_gettingAccountInfo
serviceMode
TB,N,V_serviceMode
didChangeContainer
TB,N,V_didChangeContainer
configuration
T@"<BCContainerConfiguration>",&,N,V_configuration
coalescedAttachment
T@"BUCoalescingCallBlock",&,N,V_coalescedAttachment
BCCloudAsset-iBooks
removing directory containing persistent store
re-creating cloud data source persistent store
managedObjectModel
T@"NSManagedObjectModel",&,N,V_managedObjectModel
managedObjectContext
T@"NSManagedObjectContext",&,N,V_managedObjectContext
persistentStoreCoordinator
T@"NSPersistentStoreCoordinator",&,N,V_persistentStoreCoordinator
setupPersistentStore
TB,N,V_setupPersistentStore
readingNowDetail
isTrackedAsRecent
lastEngagedDate
assetID: %@, isTrackedAsRecent: %@, lastEngagedDate: %@
T@"NSString",C,N,V_assetID
TB,N,V_isTrackedAsRecent
T@"NSDate",C,N,V_lastEngagedDate
appVersion
annotation
-[BCAnnotationsProtoBook writeTo:]
/Library/Caches/com.apple.xbs/Sources/NanoBooks_Sim/NanoBooks-272.1/frameworks/BookCore/BookCore/Assets/BCAnnotationsProtoBook.m
nil != self->_assetID
nil != self->_appVersion
T@"NSString",&,N,V_assetID
T@"NSString",&,N,V_appVersion
annotations
T@"NSMutableArray",&,N,V_annotations
applicationCacheDirectory
T@"NSString",R
applicationDocumentsDirectory
collectionMember
collectionMemberID: %@, sortOrder:%d modificationDate:%@
T@"NSString",C,N,V_collectionMemberID
<%@=%p %@>
token
T@"NSString",C,N,V_token
assetDetail
BCAssetDetail assetID: %@
  (isFinished: %@, notFinished: %@, dateFinished: %@ lastOpenDate: %@)  (taste: %d, tasteSyncedToStore: %d)  readingPosition=(
    readingProgress:%.2f
    readingProgressHighWaterMark:%.2f
    cfi:%@
    annotationVersion=%@
    assetVersion=%@
    userData=%@
    locationRangeStart=%d    locationRangeEnd=%d    absolutePhysicalLocation=%d    storageUUID=%@
    locationUpdateDate=%@)
  playbackPosition=(
    datePlaybackTimeUpdated=%@
    bookmarkTime = %.2f)
Tf,D,N
Td,D,N
isAudiobook
BCMutableAssetDetail assetID: %@
  (isFinished: %@, notFinished: %@, dateFinished: %@ lastOpenDate: %@)  (taste: %d, tasteSyncedToStore: %d)  readingPosition=(
    readingProgress:%.2f
    readingProgressHighWaterMark:%.2f
    cfi:%@
    annotationVersion=%@
    assetVersion=%@
    userData=%@
    locationRangeStart=%d    locationRangeEnd=%d    absolutePhysicalLocation=%d    storageUUID=%@
    locationUpdateDate=%@)
  playbackPosition=(
    datePlaybackTimeUpdated=%@
    bookmarkTime = %.2f)
TB,N,V_isFinished
TB,N,V_notFinished
T@"NSDate",C,N,V_lastOpenDate
T@"NSDate",C,N,V_dateFinished
Ts,N,V_taste
Ts,N,V_tasteSyncedToStore
T@"NSString",C,N,V_readingPositionCFIString
T@"NSString",C,N,V_readingPositionAnnotationVersion
T@"NSString",C,N,V_readingPositionAssetVersion
T@"NSData",C,N,V_readingPositionUserData
Ti,N,V_readingPositionLocationRangeStart
Ti,N,V_readingPositionLocationRangeEnd
Ti,N,V_readingPositionAbsolutePhysicalLocation
T@"NSString",C,N,V_readingPositionStorageUUID
T@"NSDate",C,N,V_readingPositionLocationUpdateDate
T@"NSDate",C,N,V_datePlaybackTimeUpdated
Td,N,V_bookmarkTime
BCCloudKitSyncToCKTransaction-
globalMetadata
value
key: %@, value: %@
T@"NSString",C,N,V_value
T@"NSString",R,C,N,V_key
XCTestConfigurationFilePath
BDSUnitTest
Documents
unitTesting
TB,GisUnitTesting
containerURL
T@"NSURL",R
documentsURL
BookDataStore.DataManagerCallbackQueue
editGeneration > syncGeneration
BCCloudSyncVersions
dataType == %@
CoreDataError
domain
code
v32@?0@"NSString"8@"<BCCloudData>"16^B24
v32@?0@"BCCloudData"8Q16^B24
keyFromMyKitchenDrawer
%K IN %@
recordName
deletedFlag == NO
dataSource
T@"BCCloudDataSource",&,N,V_dataSource
responseQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
T@"BCCloudDataSyncManager",W,N,V_syncManager
immutableClass
T#,V_immutableClass
mutableClass
T#,V_mutableClass
signalDataChangedTransaction
TB,N,V_signalDataChangedTransaction
Starting up BDSServiceProxy.
The connection to service was interrupted.
The connection to service was invalidated.
Remote proxy hit an error: %{public}@
Attempting to re-form connection to XPC service %f seconds after invalidation.
[ServiceProxy]:  Shutting down service proxy.
BDSServiceProxy updatePolitely:%i reason:%ld Error %@
BDSServiceProxy updatePolitely: connection unhealthy
BDSServiceProxy updateFamilyPolitely:%i reason:%ld Error %@
BDSServiceProxy updateFamilyPolitely: connection unhealthy
BDSServiceProxy setItemHidden:%i forStoreID:%@ Error %@
BDSServiceProxy setItemHidden: connection unhealthy
BDSServiceProxy hideItemsWithStoreIDs:%@ Error %@
BDSServiceProxy hideItemsWithStoreIDs: connection unhealthy
BCCollectionDetail configureFromCloudData wrong class passed in.
BCCollectionDetail %{public}@ Mismatch collectionID from record collectionID %{public}@
BCCollectionDetail %{public}@ Resolving conflicts from record %{public}@, keeping my properties as my modification date is %{public}@.
BCCollectionDetail %{public}@ No Record supplied
BCMutableCollectionDetail init with no collectionID supplied
BCMutableCollectionDetail configureFromCloudData wrong class passed in.
BCMutableCollectionDetail init with no record supplied
BCMutableCollectionDetail requesting configured record with no underlying systemfields for collectionID:%@
BCCloudKitFetchChangesTransaction - privateCloudDatabaseController is nil
Handled Exception {%@}
Failed to create rawHistoryToken from data error: %@
Error unarchiving persistent history token: %{public}@
TCC returned a NULL array!
Successfully set %{public}@ to %{public}@.
Failed to set %{public}@ to %{public}@.
Unable to create CKAsset local cache at %@ error=%@
Failed to create cache URL. directory: %@ assetID: %@
BCStoreItem configureFromCloudData wrong class passed in.
BCStoreItem %@ Mismatch storeID from record storeID %@
BCStoreItem %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCStoreItem %@ No Record supplied
BCMutableStoreItem init with no storeID supplied
BCMutableStoreItem init with no record supplied
BCAssetReview configureFromCloudData wrong class passed in.
BCAssetReview %@ Mismatch assetReviewID from record assetReviewID %@
BCAssetReview %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCAssetReview %@ No Record supplied
BCMutableAssetReview init with no assetReviewID supplied
BCMutableAssetReview init with no record supplied
BCCloudCollectionsManager #enableCloudSync setEnableCloudSync %@
BCCollectionDetail %{public}@ invalid record name %{public}@ salt!
BCCloudData %{public}@ Unable to generate record name
BCCloudData recordType called
BCCloudData identifier called
BCCloudData zoneName called
BCCloudData +propertyIDKey called
BCMutableCloudData init with no privacy delegate!
BCMutableCloudData init with no record supplied
BCMutableCloudData ckSystemFields called
BCMutableCloudData recordType called
BCMutableCloudData identifier called
BCAssetAnnotations configureFromCloudData wrong class passed in.
BCAssetAnnotations %{public}@ Mismatch assetID from record assetID %{public}@
BCAssetAnnotations No readable annotations in serialized local data for assetID %{public}@
BCAssetAnnotations No readable annoatations in incoming data for assetID %{public}@
BCAssetAnnotations No readable annotations in serialized cloud data for assetID %{public}@
BCAssetAnnotations %{public}@ No Record supplied
BCMutableAssetAnnotations init with no assetID supplied
BCAssetAnnotations initWithCloudData invalid assetID.
BCAssetAnnotations initWithCloudData wrong class passed in.
No readable annotations for asset %@
BCMutableAssetAnnotations init record has invalid assetID
BCMutableAssetAnnotations init with no record supplied
Unable to write annotations protobuf to URL %@
skipping annotation not valid for sync %@
skipping annotation not valid for sync %@.
proto annotation found missing required properties %@
trying to incorrectly sync global annotation in BCAssetAnnotations %@
*** Assertion failure: %s in %s - %@:%@ %@
Trying to remove without IDs
BDSICloudIdentityTokenTracker didUnacknowledgediCloudLogoutOccur=%{public}@ l=%{public}@ c=%{public}@
_coalescedNotification in %@ did not call notification within 10s.
_coalescedArchive (%@)
did not call completion after 10s in %{public}@
_coalescedZoneFetch (%@)
BCCloudKitDatabaseController - Error fetching zone changes: %@
BCCloudKitDatabaseController - attached to container.
BCCloudKitDatabaseController (%{public}@) - fetchChangesWithCompletion:
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchChangesWithCompletion for changedRecordZoneIDs:%{public}@
BCCloudKitDatabaseController (%{public}@) - Error fetching database changes: %@
BCCloudKitDatabaseController - fetchRecordForRecordID attached: %@
WARNING: BCCloudKitDatabaseController - fetchRecordForRecordID called without a database.  attached: %@
BCCloudKitDatabaseController - containerIdentifer changed from: %{public}@ to: %{public}@
BCCloudKitDatabaseController (%{public}@) - connectUserTo:container:updateSubscription:completion:
BCCloudKitDatabaseController - archiveComplete
BCCloudKitDatabaseController - Error fetching user recordID: %{public}@
BCCloudKitDatabaseController (%{public}@) - attachToZones: %{public}@
BCCloudKitDatabaseController - Creating Record Zones.  desiredRecordZoneIDs:%{public}@
BCCloudKitDatabaseController - detaching because error fetching changes:%{public}@
BCCloudKitDatabaseController - detaching because error establishing record salt:%{public}@
BCCloudKitDatabaseController - p_createRecordZones error: %{public}@
BCCloudKitDatabaseController - detaching because error creating record zones
BCCloudKitDatabaseController - Detaching Container:%{public}@
BCCloudKitDatabaseController - requesting salted ID for %@ without salt!
BCCloudDatabaseController: unable to generate record name for %@
CKModifySubscriptionsOperation failed: %{public}@
p_subscribeWithCompletion (%{public}@)
Attempting CKModifySubscriptionsOperation
CKModifySubscriptionsOperation Success!
BCCloudKitDatabaseController modifySubscriptionsOperation: %@, id: %@
BCCloudKitDatabaseController (%{public}@)- Adding fetch database changes
CKFetchDatabaseChangesOperation zoneID was deleted: %{public}@
CKFetchDatabaseChangesOperation zoneID was changed: %{public}@
CKFetchDatabaseChangesOperation failed: %{public}@
CKFetchDatabaseChangesOperation Success
CKFetchDatabaseChangesOperation Success, but no serverChangeToken
BCCloudKitDatabaseController (%{public}@) - p_createRecordZones %{public}@, database:%{public}@
BCCloudKitDatabaseController - fetchRecordZonesOperation.fetchRecordZonesCompletionBlock recordZonesByZoneID:%{public}@, error:%{public}@
BCCloudKitDatabaseController - assigning recordZones[%{public}@]
BCCloudKitDatabaseController - calling saveResultsBlock
BCCloudKitDatabaseController - No PCS Identity available
CKFetchRecordZonesOperation failed: %{public}@ retrying
CKFetchRecordZonesOperation failed: %{public}@
BCCloudKitDatabaseController - One or more zones missing
CKModifyRecordZonesOperation failed: %{public}@ retrying
CKModifyRecordZonesOperation failed: %{public}@
(%{public}@) Successfully read existing record salt
(%{public}@) Error retrieving salt record: %@ serverRecord:%@
Successfully established record salt
BCCloudKitDatabaseController - Create salt: unable to save salt record %{public}@
fetch zone changes attempted while postponing such fetches.  Nil error, but this operation will be attempted again after the back-off period.
BCCloudKitDatabaseController (%{public}@)- fetching record zone changes for recordZoneIDs:%{public}@
BCCloudKitDatabaseController (%{public}@) - finished fetching tokens for zones %{public}@
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneIDs:%{public}@, optionsByRecordZoneID:%{public}@ self.database=%p
BCCloudKitDatabaseController - BCCloudKitDatabaseController fetchRecordZoneChangesOperation.recordChangedBlock record=%@
BCCloudKitDatabaseController - BCCloudKitDatabaseController recordWithIDWasDeletedBlock recordID=%@
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneChangeTokensUpdatedBlock recordZoneIDs=%{public}@ 
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneFetchCompletionBlock recordZoneIDs=%{public}@ moreComing=%{public}@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ zoneFetchCompletion failed: %{public}@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ success.  More coming: %{public}@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock zoneChanges failed: %{public}@ %{public}@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation retrying fetch for error: %{public}@
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchRecordZoneChangesOperation.fetchRecordZoneChangesCompletionBlock retryFetch
BCCloudKitDatabaseController - CKFetchRecordZoneChangesOperation NOT retrying fetch for error: %{public}@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock success (%{public}@).
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfAttachmentChange. Attached to container: %@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfRecordsChanged.
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfRecordsChanged: changedRecords.count=%lu recordType=%{public}@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfCompletedFetchOfZone zoneName=%{public}@
Error decoding BCCloudKitDatabaseController from data.  Error=%{public}@
Deleting zone: (%{public}@)
Error deleting zones (%{public}@): (%{public}@)
BCCloudKitDatabaseController %{public}@ - missing encryption identity.  Recreating zones
BCCloudKitDatabaseController %{public}@ - missing encryption identity due to the keychain not being synced yet.  Detaching.
BCCloudKitDatabaseController - Invalid parameter combination observer=%p recordType=%{public}@
BCCloudKitDatabaseController - Attempt to remove observer %p that is not observing recordType %{public}@.
BCCloudKitDatabaseController - Invalid observer=%p
BCCloudKitDatabaseController - Registering store for record zone %{public}@
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in registerServerChangeTokenStore:forZoneID: recordZoneID=%{public}@
BCCloudKitDatabaseController - performed zone fetch for recordZoneID:%{public}@
BCCloudKitDatabaseController - Registered multiple stores for record zone %{public}@
BCCloudKitDatabaseController - Invalid parameter combination tokenStore=%p recordZoneID=%{public}@
BCCloudKitDatabaseController - Did not find tokenStore to remove
BCCloudKitDatabaseController - Trying to remove nil server change token store
BCLiverpoolStatusMonitor CloudKit=%{public}@ optedIn=%{public}@
iCloud identity changed. {Refreshing with optedIn: %{public}@}
BDSLiverpoolStatusMonitor: restartObserving was called
BDSLiverpoolStatusMonitor: notifying observers of a token change
BDSLiverpoolStatusMonitor: tokens match ... so we are not notifying anyone
iCloud identity changed. {iCloudEnabled: %@}
Synced preference %@ changed in group, copying value locally (new value %@, old value %@)
Preference %@ was unchanged
Checking local preferences with appSuite: %@ container: %@ groupName: %@ groupContainer: %@
Synced preference %@ changed locally, copying value to group container (new value %@, old value %@)
Updating npsManager with sync keys: %@
#dissociateCloudData Change Token Controller error: %@
#dissociateCloudData Change Token Controller successfully transitioned to a new cloud container for zone: %@
BCCloudChangeTokenController - Error deleting cloud tokens: %@ with server change token: %{public}@
BCCloudChangeTokenController - #recordChange Error saving MOC zone: %@ with server change token: %{public}@
BCCloudChangeTokenController - serverChangeTokenWithCompletion: %@
BCCloudChangeTokenController - #recordChange Error fetching from MOC zone: %@ with server change token: %{public}@
Error unarchiving server change token: %{public}@
BCCloudChangeTokenController - #recordChange zone: %@ returning server change token: %@
Dealloc BCCloudAssetManager
BCCloudDataSyncManager: syncCloudData: entityName: %@, attachedState: %@ reachable: %@
BCCloudDataSyncManager: startSyncToCKWithCompletion entityName: %@, attachedState: %@ reachable: %@
BCCloudDataSyncManager: cloudDataMap already contans an entry for deleting %@
BCCloudDataSyncManager: Unable to retrieve systemFields from %@
BCCloudDataSyncManager: Unable to configure CKRecord to save from %@
BCCloudDataSyncManager: cloudDataMap already contans an entry for saving %@
Successful save of CKRecord id=%@ %@
Successful removal of CKRecord ids=%@
Partial failure saving %lu records and deleting %lu records.  Failed %lu.
CKErrorServerRecordChanged record %{public}@ perRecordError %{public}@
Error for record %{public}@ operationError %{public}@ perRecordError %{public}@
Unable to retrieve serverRecord for recordID %{public}@ operationError %{public}@ perRecordError %{public}@
Error modifying record:%@ error=%{public}@
Record ID is nil for record to fetch: %@
Fetching %lu records that had assets on conflict
Successfully fetched %lu records that had assets on conflict
Error fetching records with assets on conflict: error=%{public}@
Error saving record, but we don't have a delegate to inform
Error modifying records: error=%{public}@
We can't have handled more records than we attempted to sync
Adding CKModifyRecordsOperation to database for: %@.  Operation ID: %@
BCCloudKitController (%{public}@) _coalescedAttachment
BCCloudKitController (%{public}@) #enableCloudSync setEnableCloudSync %@ serviceMode:%@
BCCloudKitController (%{public}@) - p_updateAttachment
BCCloudKitController (%{public}@) - Update Attachment Current State: attached:%{public}@
BCCloudKitController (%{public}@) - Update Attachment: getting account info
BCCloudKitController (%{public}@) - Update Attachment: detaching from database controller
BCCloudKitController (%{public}@) - Update Attachment: No change to attachment.
BCCloudKitController (%{public}@) - Update Attachment: Signaling fetch changes for %{public}@
BCCloudKitController (%{public}@) - p_getAccountInfo
BCCloudKitController (%{public}@) - getAccountInfo self.gettingAccountInfo=YES
BCCloudKitController - CKAccountStatusCouldNotDetermine: %@
Could not determine iCloud status.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController - Account Available for %{public}@
Error connecting user to database error=%{public}@
BCCloudKitController - connectUserToContainer subscription completed.
Container %{public}@ requires device-to-device encryption but user's account does not support it.  Not connecting.
iBooks isn't signed into iCloud.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController (%{public}@) - applicationDidBecomeActive
(%{public}@) handleRemoteNotification:
p_accountChanged (%{public}@) notification=%@
p_identityChanged (%{public}@)
Unable to create persistent stores on the coordinator:%@
Nil persistent store directory
Creating cloud data source persistent store directory %@
Error creating cloud data source persistent store directory %@
Error %{public}@: %{public}@
Nil persistent store path
Creating cloud data source persistent store for %@
Error creating cloud data source persistent store.
Removing old store and re-creating
Error creating cloud data source persistent store
BCReadingNowDetail configureFromCloudData wrong class passed in.
BCReadingNowDetail %@ Mismatch assetID from record assetID %@
BCReadingNowDetail %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCReadingNowDetail %@ No Record supplied
BCMutableReadingNowDetail init with no assetID supplied
BCMutableReadingNowDetail init with no record supplied
BCCollectionMember configureFromCloudData wrong class passed in.
BCCollectionMember resolveConflictsFromRecord record contains nil collectionMemberID
BCCollectionMember %@ Mismatch assetID from record collectionMemberID %@
BCCollectionMember %@ Resolving conflicts from record %{public}@, keeping my properties as my modification date is %{public}@.
BCMutableCollectionMember init with no collectionMemberID supplied
BCCollectionMember initWithCloudData cloudData contains nil collectionMemberID
BCMutableCollectionMember configureFromCloudData wrong class passed in.
BCCollectionMember initWithCloudData record contains nil collectionMemberID
BCMutableCollectionMember init with no record supplied
BCAssetDetail configureFromCloudData wrong class passed in.
BCAssetDetail %@ Audiobook Configuring bookmark time old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Configuring bookmark time, ignoring as my bookmark time is same or newer old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Mismatch assetID from record assetID %@
BCAssetDetail %@ Resolving conflicts from record %@ adopting general record properties.
BCAssetDetail %@ Resolving conflicts from record %@, keeping my basic properties as my modification date is %{public}@.
BCAssetDetail %@ Resolving conflicts from record %@ adopting reading position properties.
BCAssetDetail %@ Resolving conflicts from record %@, keeping my reading position properties as my reading position update date is %{public}@.
BCAssetDetail %@ Resolving conflicts from record %@ adopting playback time properties.
BCAssetDetail %@ Audiobook Resolving bookmark time old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as bookmark time is NULL.
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as my bookmark time is newer old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as my bookmark time is newer old:[%@ = %.2f] new:[%@ = NULL].
BCAssetDetail %@ Resolving conflicts from record %@, keeping my playback time properties as my playback time update date is %{public}@.
BCAssetDetail %@ No Record supplied
BCMutableAssetDetail init with no assetID supplied
BCMutableAssetDetail init with no record supplied
BCMutableAssetDetail %@ attempt to move readingProgressHighWaterMark backwards from %f to %f
BCGlobalMetadatum configureFromCloudData wrong class passed in.
BCGlobalMetadatum %@ Mismatch key from record key %@
BCGlobalMetadatum %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCGlobalMetadatum %@ No Record supplied
BCMutableGlobalMetadatum init with no key supplied
BCMutableGlobalMetadatum init with no record supplied
#dissociateCloudData error: %@
#dissociateCloudData Successfully transitioned to a new cloud container for entity: %@
BCCloudDataManager error: %@
No managed object context!
BCCloudDataManager %@ startSyncToCKWithCompletion found %lu dirty records
BCCloudDataManager %@ startSyncToCKWithCompletion no records need updating
Did not find %{public}@ to remove for predicate:%{pubic}@
Did not match the same results as the cloud data provided.
Did not find %{public}@ to update sync gen from cloudData:%@
Did not find %{public}@ to delete for predicate %{public}@
Tried to look up cloud data but there was no moc.
CKRecord unexpected with no local identifier: %{public}@
BCCloudDataManager %@ #dissociateCloudData
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
BDSServiceProtocol
BCCloudAssetDetailManager
NSObject
BDSCloudKitSupportSignOutDissociate
BCCloudReadingNowDetailManager
BCCloudAssetReviewManager
BCCloudStoreAssetManager
BCCloudCollectionDetailManager
BCCloudCollectionMemberManager
BCCloudKitSyncEnablement
BDSCloudKitSupportSignOut
BDSCloudKitSupportSignOutDelete
BCCloudKitTransactionManagerService
BDSNBPinningManagerService
BDSJaliscoDAAPClientService
BDSServiceProxy
NSXPCProxyCreating
BCCollectionDetail
BCCloudData
BCMutableCollectionDetail
NSSecureCoding
NSCoding
BCCloudKitFetchChangesTransaction
IMAdditions
BatchDelete
Common_Stores
BCCloudSyncVersions
BCMutableCloudSyncVersions
BCCloudKitDataChangedTransaction
BDSJaliscoDAAPClient
BDSSyncUserDefaults
BDSAnnotation
BCCloudAssetAnnotationManager
BCCloudDataSyncManagerDelegate
BCAnnotationRange
NSCopying
BCStoreItem
BCMutableStoreItem
BCAssetReview
BCMutableAssetReview
BCCloudKitTransactionManager
BCCloudKitTransactionDelegate
CoreDataExtras
BCCloudCollectionsManager
BCCloudDataNullPrivacyDelegate
BCCloudDataPrivacyDelegate
BCMutableCloudData
BDSNBPinningManager
BCAssetDetail
BCCollectionMember
BCCloudKitConfiguration
BCContainerConfiguration
BCProtoAnnotation
BDSAppVersion
BCAssetAnnotations
BCMutableAssetAnnotations
BDSCloudGlobalMetadataManager
BDSCloudKitSupportSignOutDeleteWithoutInstance
BDSICloudIdentityTokenTracker
BCCloudKitTransaction
BCCloudKitRecordZone
BCCloudKitDatabaseController
BDSLiverpoolStatusMonitor
BDSAdditions
BDSUserPreferencesSync
BCCloudChangeTokenController
BCCloudKitChangeTokenStore
BDSReachability
BDSOSTransaction
BCCloudAssetManager
BCCloudDataSyncManager
BCCloudKitDatabaseObserver
BCCloudKitController
BCCloudDataSource
BCReadingNowDetail
BCMutableReadingNowDetail
BCAnnotationsProtoBook
BDSApplication
BCMutableCollectionMember
BookDataStoreBundleLookupClass
BDSICloudIdentityToken
BCMutableAssetDetail
BCCloudKitSyncToCKTransaction
BCGlobalMetadatum
BCMutableGlobalMetadatum
BDSAppGroupContainer
BCCloudManagerBatchSupport
BCCloudDataManager
init
formXPCConnection
initWithMachServiceName:options:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
dissociateCloudDataFromSyncWithCompletion:
currentAssetDetailCloudSyncVersions:
setAssetDetail:completion:
setAssetDetails:completion:
deleteAssetDetailForAssetID:completion:
assetDetailForAssetID:completion:
assetDetailsForAssetIDs:completion:
resolvedAssetDetailForAssetID:completion:
fetchAssetDetailsIncludingDeleted:completion:
fetchAssetDetailsForUnsyncedTastes:
fetchFinishedDatesByAssetIDForYear:completion:
fetchFinishedAssetCountByYearWithCompletion:
getAssetDetailChangesSince:completion:
currentReadingNowDetailCloudSyncVersions:
setReadingNowDetails:completion:
deleteReadingNowDetailForAssetID:completion:
readingNowDetailsForAssetIDs:completion:
getReadingNowDetailChangesSince:completion:
setAssetReview:completion:
setAssetReviews:completion:
deleteAssetReviewForAssetReviewID:completion:
deleteAssetReviewForAssetReviewIDs:completion:
assetReviewForAssetReviewID:completion:
assetReviewsForAssetReviewIDs:completion:
fetchAssetReviewsForUserID:includingDeleted:completion:
getAssetReviewChangesSince:completion:
addStoreItem:completion:
addStoreItems:completion:
deleteStoreItemWithStoreID:completion:
deleteStoreItemsWithStoreIDs:completion:
storeItemForStoreID:completion:
fetchStoreItemsIncludingDeleted:completion:
getStoreItemChangesSince:completion:
currentCollectionDetailCloudSyncVersions:
setCollectionDetail:completion:
setCollectionDetails:completion:
deleteCollectionDetailForCollectionID:completion:
deleteCollectionDetailForCollectionIDs:completion:
collectionDetailForCollectionID:completion:
collectionDetailsForCollectionIDs:completion:
fetchCollectionDetailsIncludingDeleted:completion:
getCollectionDetailChangesSince:completion:
currentCollectionMemberCloudSyncVersions:
setCollectionMember:completion:
setCollectionMembers:completion:
deleteCollectionMemberForCollectionMemberID:completion:
deleteCollectionMemberForCollectionMemberIDs:completion:
collectionMemberForCollectionMemberID:completion:
fetchCollectionMembersIncludingDeleted:completion:
fetchCollectionMembersInCollectionID:completion:
fetchMaxSortOrderInCollectionID:completion:
getCollectionMemberChangesSince:completion:
setEnableCollectionSync:
setEnableCloudSync:enableReadingNowSync:
setCloudSyncPaused:
deleteCloudDataWithCompletion:
signalFetchChangesTransaction:
fetchMostRecentAudiobookWithCompletion:
updateWantToReadAndReadingNowWithCompletion:
updateWantToReadWithCompletion:
updateReadingNowWithCompletion:
updateBitrateForItemWithAdamID:completion:
performInitialUpdateOfAutomaticPinningListsWithCompletion:
updatePolitely:reason:completion:
updateFamilyPolitely:reason:completion:
setItemHidden:forStoreID:
hideItemsWithStoreIDs:completion:
audiobookStoreEnabledWithCompletion:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setRemoteObjectInterface:
setInterruptionHandler:
setConnectionHealthy:
scheduleRestart
setInvalidationHandler:
remoteObjectProxyWithErrorHandler:
connectionHealthy
resume
invalidate
remoteObjectProxy
errorWithDomain:code:userInfo:
addObjectsFromArray:
bds_traverseBatchesOfSize:block:
allKeys
bds_subDictionaryWithKeys:
progressWithTotalUnitCount:
setTotalUnitCount:
synchronousRemoteObjectProxyWithErrorHandler:
shutdown
connection
.cxx_destruct
_connectionHealthy
_remoteObjectProxy
_connection
initWithCloudData:
incrementEditGeneration
recordType
identifier
zoneName
deletedFlag
modificationDate
editGeneration
syncGeneration
systemFields
ckSystemFields
privacyDelegate
setPrivacyDelegate:
collectionID
name
collectionDescription
hidden
sortOrder
sortMode
_configureFromCollectionDetail:withMergers:
isEqualExceptForDate:
isEqualToString:
configureFromCloudData:withMergers:
setDifferentString:forKey:
numberWithBool:
setDifferentNumber:forKey:
numberWithInteger:
resolveConflictsFromRecord:withResolvers:
localIdentifierFromRecord:
setCollectionID:
timeIntervalSinceReferenceDate
objectForKey:
setName:
setDifferentDate:forKey:
hasChanges
recordID
recordName
stringWithFormat:
propertyIDKey
mutableCopy
copy
initWithRecord:
boolValue
intValue
configuredRecordFromAttributes
establishedSalt
setObject:forKey:
numberWithInt:
encodeWithCoder:
encodeObject:forKey:
encodeBool:forKey:
encodeInt:forKey:
initWithCoder:
localRecordID
decodeObjectOfClass:forKey:
decodeBoolForKey:
decodeIntForKey:
supportsSecureCoding
initWithCollectionID:
setCollectionDescription:
setHidden:
setSortOrder:
setSortMode:
_hidden
_sortOrder
_sortMode
_collectionID
_name
_collectionDescription
initWithEntityName:delegate:
stringByAppendingString:
cloudKitController
privateCloudDatabaseController
fetchChangesWithCompletion:
transactionNameForEntityName:
initWithCloudKitController:delegate:
performWorkWithCompletion:
coalescingDelay
transactionLifetimeTimout
setCloudKitController:
_cloudKitController
initWithObjects:
andPredicateWithSubpredicates:
entityForName:inManagedObjectContext:
setEntity:
setPredicate:
countForFetchRequest:error:
logRecursively
count
objectAtIndex:
setResultType:
setPropertiesToFetch:
setReturnsDistinctResults:
initWithKey:ascending:
setSortDescriptors:
executeFetchRequest:error:
copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:distinct:
arrayWithObject:
copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:
copyEntityPropertyArray:fromEntityName:withPredicate:sortBy:ascending:
lastObject
insertNewObjectForEntityForName:inManagedObjectContext:
setIncludesPropertyValues:
setRelationshipKeyPathsForPrefetching:
setReturnsObjectsAsFaults:
setFetchLimit:
setFetchBatchSize:
entity:withPredicate:sortDescriptors:fetchLimit:prefetchRelationships:
entity:withPredicate:sortBy:ascending:fetchLimit:prefetchRelationships:
entity:withPredicate:sortBy:ascending:fetchLimit:
im_pushSafeAccessState
im_popSafeAccessState
countEntity:withPredicate:
copyEntityProperty:fromEntityName:withPredicate:
newByClass:
objectIDsWithPredicate:forEntity:
unbatchedObjectsWithPredicate:forEntity:
entity:withPredicate:
im_performSafeAccess:
im_isPerformingSafeAccess
mergePredicate:andPredicate:
countByEnumeratingWithState:objects:count:
deleteObject:
save:
batchDeleteEntity:matching:prefetchRelationships:
persistentStores
valueForKey:
setWithArray:
intersectsSet:
hasStoreInCommonWith:
setValue:forKey:
setDifferentValue:forKey:klass:
dictionary
setDifferentObject:forKey:
propertiesForKeys:
initWithCloudSyncVersions:
cloudVersion
setCloudVersion:
localVersion
setLocalVersion:
syncVersion
setSyncVersion:
historyToken
setHistoryToken:
historyTokenOffset
setHistoryTokenOffset:
archivedDataWithRootObject:requiringSecureCoding:error:
setRawHistoryToken:
rawHistoryToken
unarchivedObjectOfClass:fromData:error:
dataType
configureFromSyncVersions:
encodeInt64:forKey:
setDataType:
decodeInt64ForKey:
_dataType
_cloudVersion
_localVersion
_syncVersion
_historyToken
_historyTokenOffset
defaultCenter
notificationName
postNotificationName:object:
initWithEntityName:notificationName:delegate:
setNotificationName:
_notificationName
serviceProxy
setFamilyUpdateInProgress:
sharedClient
familyUpdateInProgress
setServiceProxy:
_familyUpdateInProgress
_serviceProxy
aa_primaryAppleAccount
accountType
standardUserDefaults
boolForKey:
isGlobalICloudDriveSyncOptedIn
aa_altDSID
_isBundleIdentifierInArray:
isSignedIntoICloud
isCloudKitSyncOptedIn
iCloudIdentity
_isServiceEnabledAlternative:
_isServiceDisabledAlternative:
_setService:enabled:
initWithCloudKitController:
setDelegate:
entityName
initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:
applicationCacheDirectory
stringByAppendingPathComponent:
fileURLWithPath:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
dealloc
syncManager
addObserver:recordType:
transactionManager
signalSyncToCKTransactionForEntityName:syncManager:
sharedInstance
removeObserver:recordType:
dataManager
setAssetID:
appVersion
setAppVersion:
annotationCreationDate
annotationCreatorIdentifier
isAnnotationDeleted
annotationIsUnderline
annotationLocation
annotationModificationDate
annotationNote
annotationRepresentativeText
annotationSelectedText
annotationStyleNumber
annotationTypeNumber
annotationUuid
plAbsolutePhysicalLocation
plLocationRangeStart
plLocationRangeEnd
plUserData
plStorageUUID
physicalPageNumber
annotationVersion
assetVersion
attachments
chapterTitle
userModificationDate
annotationSelectedTextRange
readingProgressHighWaterMark
readingProgress
spineIndexUpdated
locationModificationDate
futureProofing12
setAssetVersion:
setCreatorIdentifier:
setUuid:
setModificationDate:
setCreationDate:
setDeleted:
setIsUnderline:
setLocationCFIString:
setNote:
setRepresentativeText:
setSelectedText:
setStyle:
setType:
setPhysicalPageNumber:
setAnnotationVersion:
setAttachments:
setChapterTitle:
setUserModificationDate:
setLocation:
setLength:
setSelectedTextRange:
setReadingProgressHighWaterMark:
setSpineIndexUpdated:
setReadingProgress:
setFutureProofing12:
setPlAbsolutePhysicalLocation:
setPlLocationRangeEnd:
setPlLocationRangeStart:
setPlLocationStorageUUID:
setPlUserData:
setLocationModificationDate:
addAnnotation:
initWithAssetID:
writeTo:
immutableData
setBookAnnotations:
predicateWithFormat:
setCloudData:predicate:completion:
dataUsingEncoding:
bu_md5
length
ckAssetStoreDirectory
URLByAppendingPathComponent:
enableCloudSync
startSyncToCKWithCompletion:
dictionaryWithCapacity:
assetID
updateSyncGenerationFromCloudData:predicate:propertyIDKey:completion:
resolveConflictsForRecords:completion:
failedRecordIDs:completion:
getChangesSince:forEntityClass:completion:
syncManager:startSyncToCKWithCompletion:
signalSyncToCKForSyncManager:
syncManager:removeCloudDataForIDs:completion:
syncManager:updateSyncGenerationFromCloudData:completion:
syncManager:resolveConflictsForRecords:completion:
syncManager:failedRecordIDs:completion:
syncManager:fetchedAllRecordsInZone:
assetWithID:updatedAnnotations:completion:
fileURLForCachingCKAssetWithAssetID:
getAnnotationChangesSince:completion:
initWithCloudDataSource:cloudKitController:
setEnableCloudSync:
annotationsDataSource
setAnnotationsDataSource:
setSyncManager:
setDataManager:
setCkAssetStoreDirectory:
_accessQueue
_enableCloudSync
_annotationsDataSource
_syncManager
_dataManager
_ckAssetStoreDirectory
dictionaryRepresentation
numberWithUnsignedLongLong:
allocWithZone:
copyWithZone:
readFrom:
copyTo:
mergeFrom:
location
_length
_location
storeID
_configureFromStoreItem:withMergers:
setStoreID:
initWithStoreID:
_storeID
assetReviewID
starRating
normalizedStarRating
reviewTitle
reviewBody
_configureFromAssetReview:withMergers:
userIDFromAssetReviewID:
numberWithShort:
setAssetReviewID:
floatValue
numberWithDouble:
integerValue
setStarRating:
rangeOfString:
substringFromIndex:
substringToIndex:
assetReviewIDWithUserID:assetID:
assetIDFromAssetReviewID:
setNormalizedStarRating:
initWithAssetReviewID:
setReviewTitle:
setReviewBody:
userID
setUserID:
_starRating
_assetReviewID
_reviewTitle
_reviewBody
_userID
transactionAccessQueue
transactions
transactionName
clientConnected
signal
initWithEntityName:syncManager:delegate:
subscriptionID
removeObjectForKey:
transactionCompleted:
signalDataChangeTransactionForEntityName:notificationName:
signalFetchChangesTransactionInService:
setTransactionAccessQueue:
setTransactions:
_transactionAccessQueue
_transactions
userInfo
localizedDescription
localizedFailureReason
localizedRecoverySuggestion
localizedRecoveryOptions
sharedClientXPCProxy
initClientXPCProxy
bundleForClass:
pathForResource:ofType:
fileURLWithPath:isDirectory:
initWithContentsOfURL:
sharedManager
objectModel
setObjectModel:
collectionDataSource
setCollectionDataSource:
collectionDetailManager
setCollectionDetailManager:
collectionMemberManager
setCollectionMemberManager:
changeTokenController
setChangeTokenController:
proxyMode
setProxyMode:
_proxyMode
_objectModel
_collectionDataSource
_collectionDetailManager
_collectionMemberManager
_changeTokenController
nullPrivacyDelegate
recordNameFromRecordType:identifier:
recordChangeTag
setSystemFields:
setSaltedHashedID:
saltedHashedID
decodeRecordFromSystemFields:
initWithZoneName:ownerName:
initWithRecordName:zoneID:
initWithRecordType:recordID:
encodeRecordSystemFields:
setCkSystemFields:
setEditGeneration:
encryptedValuesByKey
setObject:forKeyedSubscript:
objectForKeyedSubscript:
_privacyDelegate
data
setDeletedFlag:
setSyncGeneration:
setLocalRecordID:
_deletedFlag
_editGeneration
_syncGeneration
_modificationDate
_systemFields
_localRecordID
setQueueIdentifier:
setContainerIdentifier:
setAppZones:
arrayWithObjects:count:
setServiceZones:
setDbArchiveFolderName:
setDbArchiveExtension:
setDbArchiveFilename:
setDbSubscriptionID:
setAppBundleIdentifier:
setRequiresDeviceToDeviceEncryption:
isFinished
notFinished
lastOpenDate
dateFinished
taste
tasteSyncedToStore
readingPositionCFIString
readingPositionAnnotationVersion
readingPositionAssetVersion
readingPositionUserData
readingPositionLocationRangeStart
readingPositionLocationRangeEnd
readingPositionAbsolutePhysicalLocation
readingPositionStorageUUID
readingPositionLocationUpdateDate
datePlaybackTimeUpdated
bookmarkTime
collectionMemberID
collectionIDFromCollectionMemberID:
configuration
shouldArchiveData:
shouldPerformDatabaseSubscriptionForServiceMode:
queueIdentifier
containerIdentifier
appZones
serviceZones
dbArchiveFolderName
dbArchiveExtension
dbArchiveFilename
dbSubscriptionID
appBundleIdentifier
requiresDeviceToDeviceEncryption
_requiresDeviceToDeviceEncryption
_queueIdentifier
_containerIdentifier
_appZones
_serviceZones
_dbArchiveFolderName
_dbArchiveExtension
_dbArchiveFilename
_dbSubscriptionID
_appBundleIdentifier
numberWithUnsignedInt:
numberWithFloat:
setFutureProofing11:
setHasDeleted:
hasDeleted
setHasIsUnderline:
hasIsUnderline
hasLocationCFIString
hasNote
hasRepresentativeText
hasSelectedText
setHasStyle:
hasStyle
setHasType:
hasType
hasPhysicalPageNumber
hasAnnotationVersion
hasAssetVersion
hasAttachments
hasChapterTitle
setHasUserModificationDate:
hasUserModificationDate
hasSelectedTextRange
setHasReadingProgressHighWaterMark:
hasReadingProgressHighWaterMark
setHasSpineIndexUpdated:
hasSpineIndexUpdated
setHasReadingProgress:
hasReadingProgress
hasFutureProofing11
hasFutureProofing12
setHasPlAbsolutePhysicalLocation:
hasPlAbsolutePhysicalLocation
setHasPlLocationRangeEnd:
hasPlLocationRangeEnd
setHasPlLocationRangeStart:
hasPlLocationRangeStart
hasPlLocationStorageUUID
hasPlUserData
setHasLocationModificationDate:
hasLocationModificationDate
creationDate
creatorIdentifier
deleted
isUnderline
locationCFIString
note
representativeText
selectedText
style
type
uuid
selectedTextRange
futureProofing11
plLocationStorageUUID
_creationDate
_locationModificationDate
_userModificationDate
_annotationVersion
_assetVersion
_attachments
_chapterTitle
_creatorIdentifier
_futureProofing11
_futureProofing12
_locationCFIString
_note
_physicalPageNumber
_plAbsolutePhysicalLocation
_plLocationRangeEnd
_plLocationRangeStart
_plLocationStorageUUID
_plUserData
_readingProgress
_readingProgressHighWaterMark
_representativeText
_selectedText
_selectedTextRange
_style
_type
_uuid
_deleted
_isUnderline
_spineIndexUpdated
_has
mainBundle
objectForInfoDictionaryKey:
bookAnnotations
_configureFromAssetAnnotations:withMergers:
_mergeInAssetID:assetVersion:serializedData:
initWithData:
fileURL
dataWithContentsOfURL:
assetAnnotationManager
writeToURL:atomically:
initWithFileURL:
_assetID
_bookAnnotations
array
annotations
addObject:
removeObjectsInArray:
initWithFormat:arguments:
stringWithCString:encoding:
lastPathComponent
initWithManagedObjectModel:persistentStorePath:
initWithCloudDataSource:
managedObjectContext
initWithMOC:zoneName:cloudKitController:
conflictResolvers
setConflictResolvers:
arrayWithCapacity:
removeMetadataForSaltedHashedRecordIDs:completion:
updateSyncGenerationFromCloudData:completion:
resolveConflictsForRecords:withResolvers:completion:
currentCloudSyncVersions:
setCloudData:predicate:propertyIDKey:completion:
removeCloudDataForPredicate:completion:
deleteCloudDataForPredicate:completion:
cloudDataWithPredicate:sortDescriptors:completion:
metadatumForKey:completion:
fetchCloudDataIncludingDeleted:completion:
initWithKey:
value
resolvedCloudDataForCloudData:withResolvers:predicate:completion:
setValue:
setMetadatum:completion:
setMetadata:completion:
deleteMetadatumForKey:completion:
metadatumIncludingDeleted:forKey:completion:
fetchMetadataIncludingDeleted:completion:
getMetadataChangesSince:completion:
resolvedMetadataValueForKey:completion:
metadataValueForKey:completion:
setMetadataValue:forKey:completion:
setConflictResolver:forKey:
removeConflictResolverForKey:
globalMetadataDataSource
setGlobalMetadataDataSource:
_globalMetadataDataSource
_conflictResolvers
dictionaryWithContentsOfURL:
trackLiverpool
tokenForCurrentIdentityIfCloudKitEnabled
initWithCurrentIdentity
setCurrentToken:
initWithToken:
dispatchQueue
currentToken
plistContents
initFromArchive:
token
plistURL
initWithContainerURL:trackingLiverpool:
fetchCurrentToken
forceUpdateTokenWithString:
didUnacknowledgediCloudLogoutOccur
acknowledgeiCloudIdentity
setPlistContents:
setPlistURL:
setDispatchQueue:
setTrackLiverpool:
_trackLiverpool
_plistContents
_plistURL
_currentToken
_dispatchQueue
cStringUsingEncoding:
initWithTransactionName:
initWithNotifyBlock:notifyTimeout:blockDescription:notifyTimeoutBlock:
setCoalescingDelay:
lifecycleAccessQueue
clientCount
setClientCount:
transactionLifetime
coalescedNotification
laq_scheduleTransactionLifetime
signalWithCompletion:
delegate
setTransactionLifetime:
setEntityName:
setCoalescedNotification:
osTransaction
setOsTransaction:
setLifecycleAccessQueue:
_entityName
_coalescedNotification
_osTransaction
_lifecycleAccessQueue
_transactionLifetime
_delegate
_clientCount
recordZone
initWithRecordZone:
_recordZone
p_unarchive
accessQueue
p_archiveToData
database
attachedToContainer
fetchRecordZoneChangesSuccess
setAttachedToContainer:
p_informObserversOfAttachmentChange
p_fetchZoneChanges:
changedRecordZoneIDs
coalescedZoneFetch
p_fetchDatabaseChanges:
fetchRecordWithID:completionHandler:
containerWithIdentifier:
setSourceApplicationBundleIdentifier:
p_unsubscribeToContainer:
setHasSubscription:
setServerChangeToken:
p_scheduleArchiveWithCompletion:
p_subscribeWithCompletion:
fetchUserRecordIDWithCompletionHandler:
enumerateObjectsUsingBlock:
desiredRecordZoneIDs
endTransaction
detach
p_createRecordIDSaltWithCompletion:
zonesUnreadableDueToMissingD2DEncryptionIdentity:completion:
zonesTemporarilyUnreadableDueToMissingD2DEncryptionIdentity:completion:
p_createRecordZones:completionHandler:
detachWithCompletion:
recordZones
recordIDSalt
bytes
UTF8String
dataWithBytes:length:
base64EncodedStringWithOptions:
saltedAndHashedIDFromLocalID:
privateCloudDatabase
initWithSubscriptionsToSave:subscriptionIDsToDelete:
setQualityOfService:
setContainer:
setConfiguration:
setDatabase:
doubleValue
setModifySubscriptionsCompletionBlock:
addOperation:
hasSubscription
initWithSubscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
container
operationID
serverChangeToken
initWithPreviousServerChangeToken:
setFetchAllChanges:
setRecordZoneWithIDWasDeletedBlock:
setChangeTokenUpdatedBlock:
setRecordZoneWithIDChangedBlock:
setFetchDatabaseChangesCompletionBlock:
initWithRecordZoneIDs:
zoneID
allValues
code
minusSet:
initWithZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
arrayByAddingObjectsFromArray:
setModifyRecordZonesCompletionBlock:
setFetchRecordZonesCompletionBlock:
initWithRecordName:
setRecordIDSalt:
domain
saveRecord:completionHandler:
serverFetchPostponed
tokenStores
containsObject:
cloudSyncEnabled
p_informObserversOfCompletedFetchOfZone:
p_fetchRecordZoneChangesForRecordZoneIDs:completionHandler:
null
serverChangeTokenWithCompletion:
setPreviousServerChangeToken:
removeObject:
p_fetchRecordZoneChanges:optionsByRecordZoneID:completionHandler:
setBackOffInterval:
backOffInterval
initWithRecordZoneIDs:configurationsByRecordZoneID:
p_informObserversOfRecordsChanged:forRecordType:
removeAllObjects
setRecordChangedBlock:
observers
databaseController:recordWithIDWasDeleted:recordType:
setRecordWithIDWasDeletedBlock:
p_informObserversOfRecordsChanged:
storeServerChangeToken:completion:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setServerFetchPostponed:
p_updateRetryParametersFromFetchZoneChangesOperationError:
setFetchRecordZoneChangesSuccess:
setFetchRecordZoneChangesCompletionBlock:
databaseController:attachmentChanged:
enumerateKeysAndObjectsUsingBlock:
initWithArray:copyItems:
databaseController:recordsChanged:
databaseController:fetchedAllRecordsInZone:
coalescedArchive
archiveURL
p_unarchiveFromData:
initRequiringSecureCoding:
encodeInteger:forKey:
userRecordID
finishEncoding
encodedData
initForReadingFromData:error:
decodeIntegerForKey:
setUserRecordID:
finishDecoding
encodeSystemFieldsWithCoder:
attachToZones:completion:
_deleteRecordZonesWithIDs:qualityOfService:completion:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
initWithSubscriptionID:appBundleIdentifier:archiveURL:
fetchRecordForRecordID:completion:
willAttachToContainer:serviceMode:completion:
connectUserTo:container:updateSubscription:completion:subscriptionCompletion:
getAttached:
recordZoneWithName:completionHandler:
removeObserver:
registerServerChangeTokenStore:forZoneID:
unregisterServerChangeTokenStore:
setSubscriptionID:
setArchiveURL:
setDesiredRecordZoneIDs:
setChangedRecordZoneIDs:
setAccessQueue:
setCoalescedArchive:
setRecordZones:
setObservers:
setTokenStores:
setCoalescedZoneFetch:
_hasSubscription
_attachedToContainer
_serverFetchPostponed
_fetchRecordZoneChangesSuccess
_database
_container
_subscriptionID
_archiveURL
_desiredRecordZoneIDs
_changedRecordZoneIDs
_coalescedArchive
_userRecordID
_serverChangeToken
_recordIDSalt
_recordZones
_observers
_tokenStores
_coalescedZoneFetch
_backOffInterval
hashTableWithOptions:
isPrimaryAccountManagedAppleID
dq_refreshICloudAvailabilityStatus
p_iCloudIdentityDidChange:
setTccNotifyToken:
isCloudKitEnabled
optedInKnown
setOptedIn:
refreshICloudTokensAndUpdateWithOptedIn:
optedIn
dq_archiveCurrentICloudIdentityToken
tccNotifyToken
lastArchivedNonNilICloudIdentityTokenWasNonNilAtColdLaunch
lastArchivedNonNilICloudIdentityToken
currentICloudIdentityToken
dq_isCloudKitEnabled
setCoordinatingObserver:
lastArchivedICloudIdentityToken
_notifyObserversWithCurrentToken:lastToken:
synchronize
liverpoolStatusChangedToAvailableWithNewIdentity:oldIdentity:
notifyQueue
coordinatingObserver
updateWithOptedIn:
userIdentityPreviouslyRecordedOnThisDevice
iCloudIdentityToken
addObserver:
registerCoordinatingObserver:
restartObserving
setLastArchivedICloudIdentityToken:
setLastArchivedNonNilICloudIdentityToken:
setCurrentICloudIdentityToken:
setOptedInKnown:
setLastArchivedNonNilICloudIdentityTokenWasNonNilAtColdLaunch:
containerQueue
setContainerQueue:
setNotifyQueue:
_optedIn
_optedInKnown
_lastArchivedNonNilICloudIdentityTokenWasNonNilAtColdLaunch
_tccNotifyToken
_lastArchivedICloudIdentityToken
_lastArchivedNonNilICloudIdentityToken
_currentICloudIdentityToken
_containerQueue
_notifyQueue
_coordinatingObserver
pointerAtIndex:
methodForSelector:
removePointerAtIndex:
bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:
bds_arrayByRemovingNSNullsInvokingBlockForNulls:
subarrayWithRange:
initWithOptions:
addPointer:
bds_dictionaryUsingPropertyAsKey:
bds_arrayByRemovingNSNulls
bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:completion:
containerURL
_initWithSuiteName:container:
syncedPreferenceKeys
copyChangedLocalPreferencesToGroupContainerWithAppSuiteName:container:groupName:groupContainer:
synchronizeUserDefaultsDomain:keys:container:appGroupContainer:
objectFromGroupPreferencesForKey:
copyChangedGroupPreferencesToLocalContainer
copyChangedLocalPreferencesToGroupContainer
bds_UUID
didChangeContainer
fetchRequestWithEntityName:
initWithFetchRequest:
executeRequest:error:
result
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
performBlock:
initWithEntityName:
objectAtIndexedSubscript:
setMoc:
setZoneName:
_moc
_zoneName
stopNotifier
reachabilityWithAddress:
localWiFiStatusForFlags:
networkStatusForFlags:
sharedReachabilityForInternetConnection
currentReachabilityStatus
reachabilityForInternetConnection
reachabilityWithHostName:
reachabilityForLocalWiFi
_updateIsOffline
isOffline
startNotifier
connectionRequired
localWiFiRef
reachabilityRef
assetDataSource
setAssetDataSource:
setAssetAnnotationManager:
assetDetailManager
setAssetDetailManager:
readingNowDetailManager
setReadingNowDetailManager:
assetReviewManager
setAssetReviewManager:
storeAssetManager
setStoreAssetManager:
_assetDataSource
_assetAnnotationManager
_assetDetailManager
_readingNowDetailManager
_assetReviewManager
_storeAssetManager
initWithCloudKitController:dataMapper:
syncQueue
_syncQueueSyncForCloudData:completion:
serverPushPostponed
tooBigBatch
_maxCloudDataPerBatch
dataMapper
recordFromCloudData:
setTooBigBatch:
_leaveDispatchGroup:times:
allObjects
initWithRecordIDs:
setFetchRecordsCompletionBlock:
setServerPushPostponed:
_updateRetryParametersFromModifyRecordsOperationError:batchSize:
setProcessingCloudData:
_batchFromCloudData:
_fromBatch:getRecordsToSave:recordIDsToDelete:buildingMap:
_enterDispatchGroup:times:
initWithRecordsToSave:recordIDsToDelete:
setSavePolicy:
_modifyRecordsCompletionBlockWithDispatchGroup:cloudDataMap:recordCount:
setModifyRecordsCompletionBlock:
databaseController:reachabilityChanged:
syncCloudData:completion:
signalSyncToCK
setDataMapper:
setSyncQueue:
processingCloudData
_processingCloudData
_serverPushPostponed
_dataMapper
_syncQueue
_tooBigBatch
initWithConfiguration:
setTransactionManager:
p_accountChanged:
addObserver:selector:name:object:
p_identityChanged:
p_privateDatabaseArchiveURLForConfiguration:
serviceMode
p_updateAttachment
coalescedAttachment
gettingAccountInfo
p_getAccountInfo
databaseFolderURLForConfiguration:
removeItemAtURL:error:
applicationDocumentsDirectory
initFileURLWithPath:isDirectory:
p_createDatabaseArchiveDirectoryForConfiguration:
stringByAppendingPathExtension:
accountInfoWithCompletionHandler:
accountStatusWithCompletionHandler:
setGettingAccountInfo:
supportsDeviceToDeviceEncryption
p_getNecessaryAccountInfoFromContainer:completion:
notificationFromRemoteNotificationDictionary:
setEnableCloudSync:serviceMode:
applicationDidBecomeActive
handleRemoteNotification:
setPrivateCloudDatabaseController:
setDidChangeContainer:
setServiceMode:
setCoalescedAttachment:
_didChangeContainer
_gettingAccountInfo
_serviceMode
_transactionManager
_privateCloudDatabaseController
_configuration
_coalescedAttachment
setPersistentStoreCoordinator:
_setupPersistentStoreCoordinatorWithPath:
setupPersistentStore
persistentStoreCoordinator
_setupManagedObjectContextWithCoordinator:
managedObjectModel
_persistentStoreDirectory
removeItemAtPath:error:
initWithConcurrencyType:
setUndoManager:
initWithManagedObjectModel:
_persistentStoreOptions
_createPersistentStoreDirectory
addPersistentStoreWithType:configuration:URL:options:error:
isReadOnly
_logIfError:operation:
setSetupPersistentStore:
initWithPersistentStoreCoordinator:
setManagedObjectContext:
setManagedObjectModel:
_setupPersistentStore
_managedObjectContext
_managedObjectModel
_persistentStoreCoordinator
isTrackedAsRecent
lastEngagedDate
_configureFromReadingNowDetail:withMergers:
isEqualToDate:
compare:
setIsTrackedAsRecent:
setLastEngagedDate:
_isTrackedAsRecent
_lastEngagedDate
initWithCapacity:
annotationsCount
clearAnnotations
annotationAtIndex:
annotationType
setAnnotations:
_annotations
_appVersion
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_configureFromCollectionMember:withMergers:
setCollectionMemberID:
collectionMemberIDWithCollectionID:assetID:
assetIDFromCollectionMemberID:
initWithCollectionMemberID:
_collectionMemberID
bundleURL
_hashFor:
bu_md5UpperCase
setToken:
_token
_configureFromAssetDetail:withMergers:
setDifferentBookmarkTime:
setBookmarkTime:
isAudiobook
encodeInt32:forKey:
encodeDouble:forKey:
decodeInt32ForKey:
decodeDoubleForKey:
setIsFinished:
setNotFinished:
setTaste:
setTasteSyncedToStore:
setDateFinished:
setLastOpenDate:
setReadingPositionCFIString:
setReadingPositionAnnotationVersion:
setReadingPositionAssetVersion:
setReadingPositionUserData:
setReadingPositionLocationRangeStart:
setReadingPositionLocationRangeEnd:
setReadingPositionAbsolutePhysicalLocation:
setReadingPositionStorageUUID:
setDatePlaybackTimeUpdated:
setReadingPositionLocationUpdateDate:
_isFinished
_notFinished
_taste
_tasteSyncedToStore
_readingPositionLocationRangeStart
_readingPositionLocationRangeEnd
_readingPositionAbsolutePhysicalLocation
_dateFinished
_lastOpenDate
_readingPositionCFIString
_readingPositionAnnotationVersion
_readingPositionAssetVersion
_readingPositionUserData
_readingPositionStorageUUID
_datePlaybackTimeUpdated
_bookmarkTime
_readingPositionLocationUpdateDate
_configureFromMetadatum:withMergers:
setKey:
_key
_value
processInfo
environment
isUnitTesting
bu_booksGroupContainerURL
setUnitTesting:
documentsURL
changes
changeType
changedObjectID
existingObjectWithID:error:
isDeleted
refreshObject:mergeChanges:
entity
tombstone
processPendingChanges
bds_atOffset:getAtMost:moc:entityClass:privacyDelegate:updated:tombstones:
initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:dataMapper:
mq_cloudSyncVersions
responseQueue
_logError:
firstObject
signalDataChangedTransaction
setCloudData:predicate:mergers:completion:
mq_incrementCloudVersion
mq_signalTransactions
mq_sanitizeError:
setCloudData:predicate:propertyIDKey:mergers:completion:
resolvedCloudDataForCloudData:withResolvers:mergers:predicate:completion:
cloudDataFromRecord:
mutableClass
resolveConflictsForRecords:withResolvers:mergers:completion:
immutableClass
predicateWithValue:
cloudDatasWithPredicate:completion:
fetchHistoryAfterToken:
countWithPredicate:completion:
cloudDatasWithPredicate:sortDescriptors:maximumResultCount:filter:completion:
transformedCloudDatasWithPredicate:transformer:limit:completion:
resolvedCloudDataForCloudData:predicate:completion:
dataSource
setDataSource:
setResponseQueue:
setImmutableClass:
setMutableClass:
setSignalDataChangedTransaction:
_signalDataChangedTransaction
_dataSource
_responseQueue
_immutableClass
_mutableClass
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?B@"NSError">16
v32@0:8@16@?24
v28@0:8B16@?20
v32@0:8q16@?24
v24@0:8@?<v@?@"BCMutableCloudSyncVersions">16
v32@0:8@"BCMutableAssetDetail"16@?<v@?BB@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableAssetDetail"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">24
v28@0:8B16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8q16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"BCMutableCloudSyncVersions"16@?<v@?@"NSSet"@"NSSet"@"BCMutableCloudSyncVersions"@"NSError"B>24
v36@0:8@16B24@?28
v32@0:8@"BCMutableAssetReview"16@?<v@?BB@"NSError">24
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableAssetReview"@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">28
v32@0:8@"BCMutableStoreItem"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableStoreItem"@"NSError">24
v32@0:8@"BCMutableCollectionDetail"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableCollectionDetail"@"NSError">24
v32@0:8@"BCMutableCollectionMember"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableCollectionMember"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">24
v32@0:8@"NSString"16@?<v@?i@"NSError">24
v20@0:8B16
v24@0:8B16B20
v24@0:8@16
v24@0:8@"NSString"16
@24@0:8@?16
v24@0:8@?<v@?@"NSString"@"NSError">16
@"NSProgress"24@0:8@?<v@?@"NSError">16
v32@0:8@"NSNumber"16@?<v@?@"NSError">24
v36@0:8B16q20@?28
v28@0:8B16@20
v36@0:8B16q20@?<v@?B>28
v28@0:8B16@"NSString"20
v32@0:8@"NSSet"16@?<v@?@"NSSet">24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
@24@0:8@?<v@?@"NSError">16
v16@0:8
@"<BDSServiceProtocol><NSXPCProxyCreating>"
@"NSXPCConnection"
q16@0:8
@"NSDate"16@0:8
@"CKRecord"16@0:8
@"NSData"16@0:8
@"<BCCloudDataPrivacyDelegate>"16@0:8
v24@0:8@"<BCCloudDataPrivacyDelegate>"16
i16@0:8
v32@0:8@16@24
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v20@0:8i16
@"NSString"
@32@0:8@16@24
d16@0:8
@"BCCloudKitController"
Q32@0:8@16@24
@56@0:8@16@24@32@40B48B52
@52@0:8@16@24@32@40B48
@40@0:8@16@24@32
@24@0:8#16
@56@0:8@16@24@32Q40@48
@60@0:8@16@24@32B40Q44@52
@52@0:8@16@24@32B40Q44
v40@0:8@16@24@32
B40@0:8@16@24#32
B32@0:8@16@24
@"NSPersistentHistoryToken"16@0:8
v24@0:8q16
@"NSPersistentHistoryToken"
@"BDSServiceProxy"
B24@0:8^{__CFArray=}16
B24@0:8^{__CFString=}16
v28@0:8^{__CFString=}16B24
{_NSRange=QQ}16@0:8
f16@0:8
@"NSNumber"16@0:8
v40@0:8@16@24@?32
v32@0:8@"BCCloudDataSyncManager"16@?<v@?>24
v24@0:8@"BCCloudDataSyncManager"16
v40@0:8@"BCCloudDataSyncManager"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"BCCloudDataSyncManager"16@"NSString"24
v40@0:8@"NSString"16@"NSArray"24@?<v@?BB@"NSError">32
@"NSURL"24@0:8@"NSString"16
@"NSObject<OS_dispatch_queue>"
@"BCCloudDataSource"
@"BCCloudDataSyncManager"
@"BCCloudDataManager"
@"NSURL"
@24@0:8^{_NSZone=}16
v24@0:8Q16
s16@0:8
v24@0:8d16
v20@0:8s16
v24@0:8@"BCCloudKitTransaction"16
@"NSMutableDictionary"
@"NSManagedObjectModel"
@"NSObject<BCCloudCollectionDetailManager>"
@"NSObject<BCCloudCollectionMemberManager>"
@"BCCloudChangeTokenController"
@"NSString"32@0:8@"NSString"16@"NSString"24
@"<BCCloudDataPrivacyDelegate>"
@"NSDate"
@"CKRecord"
B20@0:8B16
B24@0:8@"<BCCloudData>"16
@"NSArray"16@0:8
@"<BCContainerConfiguration>"16@0:8
@"NSArray"
v20@0:8I16
v20@0:8f16
I16@0:8
@"NSData"
@"BCAnnotationRange"
{?="locationModificationDate"b1"userModificationDate"b1"plAbsolutePhysicalLocation"b1"plLocationRangeEnd"b1"plLocationRangeStart"b1"readingProgress"b1"readingProgressHighWaterMark"b1"style"b1"type"b1"deleted"b1"isUnderline"b1"spineIndexUpdated"b1}
v36@0:8B16@20@?28
v32@0:8@"<BCGlobalMetadatum>"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableGlobalMetadatum"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"BCMutableGlobalMetadatum"@"NSError">28
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@?16@24
@28@0:8@16B24
@"BDSICloudIdentityToken"
@"BUCoalescingCallBlock"
@"BDSOSTransaction"
@"NSObject<OS_dispatch_source>"
@"<BCCloudKitTransactionDelegate>"
@"CKRecordZone"
v52@0:8@16@24B32@?36@?44
v40@0:8@16q24@?32
@"CKDatabase"
@"CKContainer"
@"NSMutableSet"
@"CKRecordID"
@"CKServerChangeToken"
@"NSHashTable"
@"<BDSLiverpoolStatusChangeObserving>"
v44@0:8:16B24@28@?36
v32@0:8Q16@?24
v32@0:8:16@?24
v48@0:8@16@24@32@40
v32@0:8@"CKServerChangeToken"16@?<v@?>24
v24@0:8@?<v@?@"CKServerChangeToken">16
@"NSManagedObjectContext"
@24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
i20@0:8I16
^{__SCNetworkReachability=}
@24@0:8r*16
@"NSObject<OS_os_transaction>"
@"BCCloudAssetAnnotationManager"
@"NSObject<BCCloudAssetDetailManager>"
@"NSObject<BCCloudReadingNowDetailManager>"
@"NSObject<BCCloudAssetReviewManager>"
@"NSObject<BCCloudStoreAssetManager>"
v28@0:8@16B24
v28@0:8@"BCCloudKitDatabaseController"16B24
v32@0:8@"BCCloudKitDatabaseController"16@"NSArray"24
v40@0:8@"BCCloudKitDatabaseController"16@"CKRecordID"24@"NSString"32
v32@0:8@"BCCloudKitDatabaseController"16@"NSString"24
v48@0:8@16^@24^@32^@40
v32@0:8@16Q24
@?40@0:8@16@24Q32
@"<BCCloudDataSyncManagerDelegate>"
@"<BCCloudDataMapper>"
@"BCCloudKitTransactionManager"
@"BCCloudKitDatabaseController"
@"<BCContainerConfiguration>"
@"NSPersistentStoreCoordinator"
@24@0:8Q16
@"NSMutableArray"
B24@0:8d16
B72@0:8^q16q24@32#40@48^@56^@64
@72@0:8@16@24@32#40#48@56@64
@80@0:8@16@24@32#40#48@56@64@72
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24Q32@?40@?48
v48@0:8@16@?24q32@?40
v40@0:8@16#24@?32
v24@0:8#16
