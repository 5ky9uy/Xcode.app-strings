@(#)PROGRAM:StatusKit  PROJECT:StatusKit-1
statusPayload
statusUniqueIdentifier
datePublished
dateReceived
dateCreated
invitationPayload
<%@: %p; identifier = "%@"; payload = "%@"; datePublished = "%@"; dateReceived = "%@"; dateCreated = "%@">
payloadData
v8@?0
com.apple.StatusKit
SKInvitationPayload
<%@: %p; payloadDictionary = "%@"; dateCreated = "%@">;
<%@: %p; payloadData = "%@"; dateCreated = "%@">;
subscriptionIdentifier
statusTypeIdentifier
isPersonalStatusSubscription
currentStatus
ownerHandles
<%@: %p; subscriptionID = "%@"; personal = YES; status = "%@">
<%@: %p; subscriptionID = "%@"; owners = "%@"; status = "%@">
SKStatusPublishingErrorDomain
com.apple.StatusKit.PublishingService
v16@?0@"NSError"8
v24@?0@"NSString"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
v20@?0B8@"NSError"12
v24@?0@"SKHandleInvitability"8@"NSError"16
com.apple.StatusKit.publish.types
v16@?0@"<SKStatusPublishingServiceDelegate>"8
PublishingService
PublishingDaemonConnection
com.apple.StatusKit.publish
SKStatusPayload
<%@: %p; payloadDictionary = "%@">;
<%@: %p; payloadData = "%@">;
<nil>
SKStatusSubscription
IsInvitable
WasRemoved
SKHandleInvitability
<%@: %p; isInvitable = "%d"; wasRemoved = "%d">;
scheduledRequest
secondaryDeviceRepublish
<%@: %p; identifier = "%@"; payload = "%@"; dateCreated = "%@"; scheduled=%ld, republish=%ld>
SKStatusSubscriptionErrorDomain
com.apple.StatusKit.SubscriptionService
v24@?0@"SKStatusSubscriptionMetadata"8@"NSError"16
v24@?0q8@"NSError"16
v16@?0@"<SKStatusSubscriptionServiceDelegate>"8
com.apple.StatusKit.subscribe.types
SubscriptionService
handleString
<%@: %p; handleString = "%@">
StatusSubscriptionDaemonConnection
com.apple.StatusKit.subscribe
Error serializing status payload dictionary: %@
Error deserializing status payload data as dictionary: %@
Publishing status request. StatusType: %{public}@ Request: %@
XPC Error publishing status request. StatusType: %{public}@ statusRequest:%@ Error: %{public}@
Publish status request failed with error: %@
Publish status request completed with statusUniqueIdentifier: %@
Retrieving invited handles. StatusType: %{public}@
XPC Error retrieving invited handles. StatusType: %{public}@ Error: %{public}@
Retreived invited handles. StatusType: %{public}@ Handles: %@ Error: %@
Retreived invited handles. StatusType: %{public}@ Handles: %@
Checking if handle %@ has already been invited (sync) from handle: %@. StatusType: %{public}@
XPC Error checking if handle is invited (sync). StatusType: %{public}@ Error: %{public}@
Checked if handle is invited (sync). StatusType: %{public}@ Handle: %@ isInvited:%d Error: %@
Determined if handle is invited (sync). StatusType: %{public}@ Handle: %@ isInvited: %d
Checking if handle %@ has already been invited (async) from handle: %@. StatusType: %{public}@
XPC Error checking if handle is invited (async). StatusType: %{public}@ handle:%@ Error: %{public}@
Error while checking if handle has already been invited (async). StatusType: %{public}@ Handle: %@ isInvited:%d Error: %@
Checked if handle is invited (async). StatusType: %{public}@ Handle: %@ isInvited: %d
Fetching handle %@ invitability. StatusType: %{public}@
XPC Error checking invitability. StatusType: %{public}@ handle:%@ Error: %{public}@
Error fetching handle invitability. StatusType: %{public}@ Handle: %@ invitability:%@ Error: %@
Checked if handle is invitable. StatusType: %{public}@ Handle: %@ invitability: %@
Checking if handle %@ is inviteable. StatusType: %{public}@
XPC Error checking inviteability. StatusType: %{public}@ handle:%@ Error: %{public}@
Error while checking if handle is inviteable. StatusType: %{public}@ Handle: %@ isInviteable:%d Error: %@
Checked if handle is inviteable. StatusType: %{public}@ Handle: %@ isInviteable: %d
Received request to invite handles: %@ to personal channel with statusTypeIdentifier: %{public}@ from sender handle: %@
XPC Error inviting handles. StatusType: %{public}@ handles:%@ Error: %{public}@
Inviting handles completed with error: %@
Inviting handles completed.
Removing invited handles. StatusType: %{public}@ Handles: %@
XPC Error removing invited handles. StatusType: %{public}@ handles:%@ Error: %{public}@
Remove invited handles completed with error: %@
Remove invited handles completed.
Removing all invited handles. StatusType: %{public}@
XPC Error removing all invited handles. StatusType: %{public}@ Error: %{public}@
Remove all invited handles completed with error: %@
Remove all invited handles completed.
Registering for delegate callbacks for statusTypeIdentifier: %{public}@
XPC Error registering for delegate callbacks. Error: %{public}@
Error registering for delegate callbacks. Error: %@
Completed registration for delegate callbacks for statusTypeIdentifier: %@
Client is attempting to publish status of type %{public}@ but is not entitled. Client needs %@ entitlement with this status type identifier.
No delegates available to perform publishing service delegate callback
Notifying publishing service delegate that the XPC connection has disconnected
Subscription publishing delegate does not implement the delegate method to be notified the XPC connection has disconnected
XPC Error (async): %{public}@
XPC Error (synchronous): %{public}@
XPC Connection Invalidation Handled
XPC Connection Interruption Handled
Retaining transient subscription assertion for subscriptionIdentifier %@
XPC Error retaining transient subscription assertion. Error: %{public}@
Error retaining transient subscription assertion. Error: %{public}@
Successfully retained transient subscription assertion for subscription identifier %@
Releasing transient subscription assertion for subscriptionIdentifier %@
XPC Error releasing transient subscription assertion. Error: %{public}@
Error releasing transient subscription assertion. Error: %{public}@
Successfully released transient subscription assertion for subscription identifier %@
Retaining persistent subscription assertion for subscriptionIdentifier %@ applicationIdentifier %@
XPC Error retaining persistent subscription assertion. Error: %{public}@
Error retaining persistent subscription assertion. Error: %{public}@
Successfully retained persistent subscription assertion for subscription identifier %@ applicationIdentifier %@
Releasing persistent subscription assertion for subscriptionIdentifier %@ applicationIdentifier %@
XPC Error releasing persistent subscription assertion. Error: %{public}@
Error releasing persistent subscription assertion. Error: %{public}@
Successfully released persistent subscription assertion for subscription identifier %@ applicationIdentifier %@
Deleting subscription with subscriptionIdentifier %@
Error deleting subscription with identifier %@. Error: %{public}@
Successfully deleting subscription with identifier %@
Fetching subscription (sync) for handle %@ statusType: %{public}@
XPC Error retrieving subscription. Error: %{public}@
Error retrieving subscription for handle. Error: %@ handle: %@
Retreived subscription metadata for handle. subscriptionMetadata: %@ handle: %@
Did not find subscription metadata for handle. handle: %@
Fetching subscription (async) for handle %@ statusType: %{public}@
Fetching personal subscription (sync) for statusType: %{public}@
XPC Error retrieving personal subscription. Error: %{public}@
Error retrieving personal subscription. Error: %@
Retreived personal subscription metadata. subscriptionMetadata: %@
Did not find personal subscription metadata for status type: %@
Fetching all subscription assertions (sync) for statusType: %{public}@
XPC Error retrieving all subscription assertions. Error: %{public}@
Error retrieving all subscription assertions for status type: %@. Error: %@
Retreived subscription assertions metadatas for status type. subscriptionMetadata: %@ statusType: %@
Did not find subscription assertions for status type: %@
Fetching all active subscription (sync) for statusType: %{public}@
XPC Error retrieving all active subscriptions. Error: %{public}@
Error retrieving all active subscription for status type: %@. Error: %@
Retreived active subscription metadatas for status type. subscriptionMetadata: %@ statusType: %@
Did not find active subscriptions for status type: %@
Fetching all subscription (sync) for statusType: %{public}@
XPC Error retrieving all subscriptions. Error: %{public}@
Error retrieving all subscription for status type: %@. Error: %@
Retreived subscription metadatas for status type. subscriptionMetadata: %@ statusType: %@
Did not find subscriptions for status type: %@
Fetching all subscription with persistent assertion for statusType: %{public}@ application identifer: %@
XPC Error retrieving all subscriptions with persistent assertion. Error: %{public}@
Retreived %ld subscription metadatas for status type. subscriptionMetadata: %@ statusType: %@
Fetching channel validation token (sync) for statusType: %{public}@ handle: %@
XPC Error fetching channel validation token (sync). Error: %{public}@
Error fetching channel validation token (sync). Error: %@
Daemon returned neither a subscription validation token nor an error (sync), this should not happen, daemon should return empty string to indicate a value is not found.
Subscription validation (sync) token for handle: %@ is "%@"
Fetching channel validation token (async) for statusType: %{public}@ handle: %@
XPC Error fetching channel validation token (async). Error: %{public}@
Error fetching channel validation token (async). Error: %@
Daemon returned neither a subscription validation token nor an error (async), this should not happen, daemon should return empty string to indicate a value is not found.
Subscription validation token (async) for handle: %@ is "%@"
Validating subscription validation token "%@" for statusType: %{public}@ fromHandle: %@
XPC Error validating validation token (async). Error: %{public}@
Error validating subscription validation token (async). Error: %@
Subscription validation token "%@" from %@ has an UNKNOWN VALIDITY (!?), with no error. This is likely a bug in StatusKit.
Subscription validation token "%@" from %@ is NOT VALID. Client should re-invite this handle if appropriate.
Subscription validation token "%@" from %@ is valid
Notifying subscription service delegate that the XPC connection has disconnected
Subscription service delegate does not implement the delegate method to be notified the XPC connection has disconnected
Subscription state changed: %@
Informing delegate of state change. Delegate: %@
Delegate does not implement subscriptionStateChanged:, not informing delegate: %@
Subscription received a status update: %@
Informing delegate of status update. Delegate: %@
Delegate does not implement subscriptionReceivedStatusUpdate:, not informing delegate: %@
Invitation received for subscription: %@
Informing delegate of invitation received. Delegate: %@
Delegate does not implement subscriptionInvitationReceived:, not informing delegate: %@
No delegates available to perform subscription service delegate callback
Client is attempting to access StatusKit subscription information of type %{public}@ but is not entitled. Client needs %{public}@ entitlement with this status type identifier.
XPC connection to PID %ld invalidated
XPC connection to PID %ld interrupted
zPLR
zPLR
zPLR
zPLR
SKPublishedStatus
NSSecureCoding
NSCoding
SKInvitationPayload
DictionaryPayloads
SKStatusSubscriptionMetadata
SKStatusPublishingService
SKStatusPublishingDaemonDelegateProtocol
NSObject
SKStatusPublishingConnectionDelegateProtocol
Deprecated
SKStatusPublishingDaemonProtocol
SKStatusPublishingDaemonConnection
SKStatusPayload
SKStatusSubscription
SKHandleInvitability
SKStatusPublishRequest
SKStatusSubscriptionService
SKStatusSubscriptionDaemonDelegateProtocol
SKStatusSubscriptionConnectionDelegateProtocol
SKHandle
SKStatusSubscriptionDaemonProtocol
SKStatusSubscriptionDaemonConnection
SKDelegateResponseQueue
init
encodeObject:forKey:
decodeObjectOfClass:forKey:
statusUniqueIdentifier
statusPayload
datePublished
dateReceived
dateCreated
stringWithFormat:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithStatusPayload:statusUniqueIdentifier:datePublished:dateCreated:dateReceived:invitationPayload:
description
invitationPayload
.cxx_destruct
_statusPayload
_statusUniqueIdentifier
_datePublished
_dateCreated
_dateReceived
_invitationPayload
T@"SKStatusPayload",R,N,V_statusPayload
T@"NSString",R,N,V_statusUniqueIdentifier
T@"NSDate",R,N,V_datePublished
T@"NSDate",R,N,V_dateCreated
T@"NSDate",R,N,V_dateReceived
T@"SKInvitationPayload",R,N,V_invitationPayload
payloadDictionary
payloadData
initWithData:dateCreated:
logger
cachedPayloadDictionary
setCachedPayloadDictionary:
_payloadData
_cachedPayloadDictionary
T@"NSDictionary",&,N,V_cachedPayloadDictionary
T@"NSData",R,N,V_payloadData
dataWithPropertyList:format:options:error:
propertyListWithData:options:format:error:
initWithDictionary:dateCreated:
T@"NSDictionary",R,N
copy
encodeBool:forKey:
decodeBoolForKey:
setWithObjects:
decodeObjectOfClasses:forKey:
initWithSubscriptionIdentifier:statusTypeIdentifier:isPersonalStatusSubscription:currentStatus:ownerHandles:
subscriptionIdentifier
currentStatus
ownerHandles
statusTypeIdentifier
isPersonalStatusSubscription
_personalStatusSubscription
_subscriptionIdentifier
_statusTypeIdentifier
_currentStatus
_ownerHandles
T@"NSString",R,N,V_subscriptionIdentifier
T@"NSString",R,N,V_statusTypeIdentifier
personalStatusSubscription
TB,R,N,GisPersonalStatusSubscription,V_personalStatusSubscription
T@"SKPublishedStatus",R,N,V_currentStatus
T@"NSArray",R,N,V_ownerHandles
weakToStrongObjectsMapTable
_registerForDelegateCallbacksIfNecessary
daemonConnection
_simulateCrashIfNecessaryForError:
asynchronousRemoteDaemonWithErrorHandler:
publishStatusRequest:statusTypeIdentifier:completion:
synchronousRemoteDaemonWithErrorHandler:
invitedHandlesForStatusTypeIdentifier:completion:
_isHandleInvited:fromSenderHandle:
isHandleInvited:fromSenderHandle:forStatusTypeIdentifier:completion:
_isHandleInvited:fromSenderHandle:completion:
_isHandleInvitable:fromSenderHandle:completion:
_fetchHandleInvitability:fromSenderHandle:completion:
fetchHandleInvitability:fromHandle:forStatusTypeIdentifier:completion:
isHandleInviteable:fromHandle:forStatusTypeIdentifier:completion:
_inviteHandle:fromSenderHandle:withInvitationPayload:completion:
arrayWithObjects:count:
inviteHandles:fromSenderHandle:withInvitationPayload:completion:
_inviteHandles:fromSenderHandle:withInvitationPayload:completion:
inviteHandles:fromSenderHandle:withInvitationPayload:statusTypeIdentifier:completion:
removeInvitedHandles:completion:
removeInvitedHandles:statusTypeIdentifier:completion:
removeAllInvitedHandlesFromPersonalChannelWithStatusTypeIdentifier:completion:
initWithQueue:
setObject:forKey:
removeObjectForKey:
count
registerForDelegateCallbacksWithStatusTypeIdentifier:completion:
domain
isEqualToString:
code
keyEnumerator
countByEnumeratingWithState:objects:count:
objectForKey:
dispatchQueue
publishingServiceDaemonDisconnected:
_delegatesPerformOnResponseQueueForGroup:block:
initWithPublishingDaemonDelegate:connectionDelegate:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
publishingDaemonConnectionDidDisconnect:
initWithStatusTypeIdentifier:
publishStatusRequest:completion:
invitedHandles
isHandleInvited:fromSenderHandle:
isHandleInvitedFromPrimaryAccountHandle:
isHandleInvited:fromSenderHandle:completion:
isHandleInvitedFromPrimaryAccountHandle:completion:
isHandleInvitableFromPrimaryAccountHandle:completion:
isHandleInvitable:fromSenderHandle:completion:
fetchHandleInvitabilityFromPrimaryAccountHandle:completion:
fetchHandleInvitability:fromSenderHandle:completion:
inviteHandle:fromSenderHandle:withInvitationPayload:completion:
inviteHandleFromPrimaryAccountHandle:withInvitationPayload:completion:
inviteHandlesFromPrimaryAccountHandle:withInvitationPayload:completion:
removeInvitedHandle:completion:
removeAllInvitedHandlesWithCompletion:
addDelegate:queue:
removeDelegate:
setDaemonConnection:
delegates
setDelegates:
registeredForDelegateCallbacks
setRegisteredForDelegateCallbacks:
privateWorkQueue
setPrivateWorkQueue:
_registeredForDelegateCallbacks
_daemonConnection
_delegates
_privateWorkQueue
T@"SKStatusPublishingDaemonConnection",&,N,V_daemonConnection
T@"NSMapTable",&,N,V_delegates
TB,N,V_registeredForDelegateCallbacks
T@"NSObject<OS_dispatch_queue>",&,N,V_privateWorkQueue
T@"NSArray",R,N
isHandleInvited:
isHandleInvited:completion:
isHandleInvitable:completion:
inviteHandle:withInvitationPayload:completion:
inviteHandles:withInvitationPayload:completion:
xpcConnection
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
_xpcConnectionOptions
initWithMachServiceName:options:
daemonXPCInterface
setRemoteObjectInterface:
daemonDelegateXPCInterface
setExportedInterface:
setExportedObject:
setXpcConnection:
connectionDelegate
setInvalidationHandler:
setInterruptionHandler:
resume
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
T@"NSXPCInterface",R,N
setXPCConnection:
publishingDaemonDelegate
setPublishingDaemonDelegate:
setConnectionDelegate:
_xpcConnection
_publishingDaemonDelegate
_connectionDelegate
T@"NSXPCConnection",&,N,V_xpcConnection
T@"<SKStatusPublishingDaemonDelegateProtocol>",W,N,V_publishingDaemonDelegate
T@"<SKStatusPublishingConnectionDelegateProtocol>",W,N,V_connectionDelegate
initWithData:
initWithDictionary:
retainTransientSubscriptionAssertionForSubscriptionIdentifier:statusTypeIdentifier:completion:
releaseTransientSubscriptionAssertionForSubscriptionIdentifier:statusTypeIdentifier:completion:
retainPersistentSubscriptionAssertionForSubscriptionIdentifier:statusTypeIdentifier:applicationIdentifier:completion:
releasePersistentSubscriptionAssertionForSubscriptionIdentifier:statusTypeIdentifier:applicationIdentifier:completion:
deleteSubscriptionWithIdentifier:statusTypeIdentifier:completion:
handleString
addObject:
_ownerHandlesDescription
initWithSubscriptionMetadata:daemonConnection:
retainTransientSubscriptionAssertionWithCompletion:
releaseTransientSubscriptionAssertionWithCompletion:
retainPersistentSubscriptionAssertionForApplicationIdentifier:completion:
releasePersistentSubscriptionAssertionForApplicationIdentifier:completion:
deleteSubscriptionWithCompletion:
subscriptionMetadata
_subscriptionMetadata
T@"SKStatusSubscriptionMetadata",R,N,V_subscriptionMetadata
T@"SKStatusSubscriptionDaemonConnection",R,N,V_daemonConnection
T@"SKPublishedStatus",R,N
T@"NSString",R,N
TB,R,N,GisPersonalStatusSubscription
firstObject
ownerHandle
T@"SKHandle",R,N
isInvitable
wasRemoved
initWithIsInvitable:wasRemoved:
_isInvitable
_wasRemoved
TB,R,N,V_isInvitable
TB,R,N,V_wasRemoved
UUID
UUIDString
initWithStatusPayload:
isScheduledRequest
isSecondaryDeviceRepublish
initWithStatusPayload:isScheduledRequest:
setIsScheduledRequest:
setStatusUniqueIdentifier:
setDateCreated:
setIsSecondaryDeviceRepublish:
_isScheduledRequest
_isSecondaryDeviceRepublish
T@"SKStatusPayload",R,C,N,V_statusPayload
TB,N,V_isScheduledRequest
T@"NSString",&,N,V_statusUniqueIdentifier
T@"NSDate",&,N,V_dateCreated
TB,N,V_isSecondaryDeviceRepublish
subscriptionMetadataForHandle:statusTypeIdentifier:completion:
subscriptionMetadataForPersonalSubscriptionWithStatusTypeIdentifier:completion:
_allStatusSubscriptionsIncludingPersonalSubscription:
allSubscriptionMetadatasWithActiveAssertionsForStatusTypeIdentifier:completion:
allSubscriptionMetadatasWithActiveSubscriptionsForStatusTypeIdentifier:completion:
allSubscriptionMetadatasForStatusTypeIdentifier:includingPersonalSubscription:completion:
allStatusSubscriptionsWithPersistentSubscriptionAssertionForApplicationIdentifier:statusTypeIdentifier:completion:
subscriptionValidationTokenForHandle:statusTypeIdentifier:completion:
validatePersonalStatusSubscriptionMatchesSubscriptionValidationToken:fromSender:statusTypeIdentifier:completion:
subscriptionServiceDaemonDisconnected:
subscriptionStateChanged:
subscriptionReceivedStatusUpdate:
subscriptionInvitationReceived:
initWithSubscriptionDaemonDelegate:connectionDelegate:
subscriptionStateChangedForSubscriptions:completion:
subscriptionReceivedStatusUpdate:completion:
subscriptionInvitationReceived:completion:
subscriptionDaemonConnectionDidDisconnect:
statusSubscriptionForHandle:
statusSubscriptionForHandle:completion:
allStatusSubscriptions
allStatusSubscriptionsExceptPersonalSubscription
allStatusSubscriptionsWithActiveAssertions
allStatusSubscriptionsWithActiveSubscriptions
allStatusSubscriptionsWithPersistentSubscriptionAssertionForApplicationIdentifier:completion:
subscriptionValidationTokenForHandle:error:
subscriptionValidationTokenForHandle:completion:
validatePersonalStatusSubscriptionMatchesSubscriptionValidationToken:fromSender:completion:
T@"SKStatusSubscriptionDaemonConnection",&,N,V_daemonConnection
T@"SKStatusSubscription",R,N
isExactlyEqualToHandle:
initWithString:
_handleString
T@"NSString",R,N,V_handleString
initWithString:mergeID:
processIdentifier
subscriptionDaemonDelegate
setSubscriptionDaemonDelegate:
_subscriptionDaemonDelegate
T@"<SKStatusSubscriptionDaemonDelegateProtocol>",W,N,V_subscriptionDaemonDelegate
T@"<SKStatusSubscriptionConnectionDelegateProtocol>",W,N,V_connectionDelegate
_dispatchQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dispatchQueue
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@64@0:8@16@24@32@40@48@56
@16@0:8
v16@0:8
@"SKStatusPayload"
@"NSString"
@"NSDate"
@"SKInvitationPayload"
@32@0:8@16@24
@"NSData"
@"NSDictionary"
@52@0:8@16@24B32@36@44
@"SKPublishedStatus"
@"NSArray"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"SKStatusPublishingDaemonConnection"16
v32@0:8@16@?24
B32@0:8@16@24
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v24@0:8@?16
v32@0:8@16@24
v20@0:8B16
@"SKStatusPublishingDaemonConnection"
@"NSMapTable"
@"NSObject<OS_dispatch_queue>"
v56@0:8@16@24@32@40@?48
v40@0:8@"SKStatusPublishRequest"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v48@0:8@"SKHandle"16@"SKHandle"24@"NSString"32@?<v@?B@"NSError">40
v48@0:8@"SKHandle"16@"SKHandle"24@"NSString"32@?<v@?@"SKHandleInvitability"@"NSError">40
v56@0:8@"NSArray"16@"SKHandle"24@"SKInvitationPayload"32@"NSString"40@?<v@?@"NSError">48
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
@24@0:8@?16
@"NSXPCConnection"
@"<SKStatusPublishingDaemonDelegateProtocol>"
@"<SKStatusPublishingConnectionDelegateProtocol>"
@"SKStatusSubscriptionMetadata"
@"SKStatusSubscriptionDaemonConnection"
@24@0:8B16B20
@28@0:8@16B24
v32@0:8@"NSArray"16@?<v@?>24
v32@0:8@"SKStatusSubscriptionMetadata"16@?<v@?>24
v24@0:8@"SKStatusSubscriptionDaemonConnection"16
@20@0:8B16
@32@0:8@16^@24
v36@0:8@16B24@?28
v40@0:8@"SKHandle"16@"NSString"24@?<v@?@"SKStatusSubscriptionMetadata"@"NSError">32
v36@0:8@"NSString"16B24@?<v@?@"NSArray"@"NSError">28
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"SKStatusSubscriptionMetadata"@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSError">40
v40@0:8@"SKHandle"16@"NSString"24@?<v@?@"NSString"@"NSError">32
v48@0:8@"NSString"16@"SKHandle"24@"NSString"32@?<v@?q@"NSError">40
@"<SKStatusSubscriptionDaemonDelegateProtocol>"
@"<SKStatusSubscriptionConnectionDelegateProtocol>"
