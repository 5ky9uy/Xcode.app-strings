@(#)PROGRAM:NanoContactsSettings  PROJECT:NanoContacts-1
initWithStyle:
defaultCenter
_contactStoreDidChange:
addObserver:selector:name:object:
_meContactDidChange:
removeObserver:
dealloc
propertyForKey:
isEqualToString:
name
target
detailControllerClass
editPaneClass
initWithName:target:set:get:detail:cell:edit:
newTableCellForSpecifier:
isContainerGuardianRestricted
setCellEnabled:
sharedDefaults
contactStore
initWithStore:
descriptorForRequiredKeysForStyle:
arrayWithObjects:count:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
meContact
identifier
predicateForContainerOfContactWithIdentifier:
defaultContainerIdentifier
predicateForContainersWithIdentifiers:
containersMatchingPredicate:error:
firstObject
_isAltAccount
contactContainer
isGuardianRestricted
setMeContact:error:
reloadSpecifiers
navigationController
popViewControllerAnimated:
contactsDefaults
sortOrder
displayNameOrder
integerValue
setDisplayNameOrder:
stringFromContact:style:
contactDataSource
initWithDataSource:
setDelegate:
localizedStringForKey:
setTitle:
pushViewController:animated:
_reload
sharedInstance
activePairedDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
valueForProperty:
boolValue
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
contactListViewController:canSelectContact:
contactListViewController:shouldSelectContact:atIndexPath:
contactListViewController:didSelectContact:
contactListViewController:updatedNoContactsState:
contactListViewController:didPickContact:
contactListViewController:shouldAllowSelectingPersonWithRecordID:
specifierPlistName
localizedStringTableName
contactsSortOrder:
setContactsSortOrder:specifier:
personNameOrder:
setPersonNameOrder:specifier:
meCardName:
showMeCardPicker:
setContactsDefaults:
setContactStore:
setContactDataSource:
setMeContact:
setContactContainer:
.cxx_destruct
_contactsDefaults
_contactStore
_contactDataSource
_meContact
_contactContainer
loadSpecifiers
isShortNameFormatEnabled
_updateSpecifiersForShortNamesDisabled
numberWithBool:
setShortNameFormatEnabled:
shortNameFormat
setShortNameFormat:
shortNameFormatPrefersNicknames
setShortNameFormatPrefersNicknames:
specifierSet
specifierForID:
removePropertyForKey:
indexOfSpecifier:
removeSpecifiersStartingAtIndex:length:
shortNamesEnabled:
setShortNamesEnabled:specifier:
shortNameFormat:
setShortNameFormat:specifier:
preferNicknames:
setPreferNicknames:specifier:
MeCard
Contacts
contactsSortOrder
com.apple.AddressBook.PreferenceChanged
PICK_MY_INFO
v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
contactsDefaults
T@"CNContactsUserDefaults",&,N,V_contactsDefaults
contactStore
T@"CNContactStore",&,N,V_contactStore
contactDataSource
T@"NCABContactStoreDataSource",&,N,V_contactDataSource
meContact
T@"CNContact",&,N,V_meContact
contactContainer
T@"CNContainer",&,N,V_contactContainer
isContainerGuardianRestricted
TB,R,N
ShortName
ShortNameGroup
ShortNameFormat
NCABSettingsViewController
NCABContactListViewControllerDelegate
NSObject
NCABShortNameSettingsViewController
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B40@0:8@16@24@32
v32@0:8@16@24
v28@0:8@16B24
v32@0:8@16^v24
B28@0:8@16i24
B32@0:8@"NCABContactListViewController"16@"CNContact"24
B40@0:8@"NCABContactListViewController"16@"CNContact"24@"NSIndexPath"32
v32@0:8@"NCABContactListViewController"16@"CNContact"24
v28@0:8@"NCABContactListViewController"16B24
v32@0:8@"NCABContactListViewController"16^v24
B28@0:8@"NCABContactListViewController"16i24
@24@0:8q16
v16@0:8
@24@0:8@16
v24@0:8@16
@"CNContactsUserDefaults"
@"CNContactStore"
@"NCABContactStoreDataSource"
@"CNContact"
@"CNContainer"
