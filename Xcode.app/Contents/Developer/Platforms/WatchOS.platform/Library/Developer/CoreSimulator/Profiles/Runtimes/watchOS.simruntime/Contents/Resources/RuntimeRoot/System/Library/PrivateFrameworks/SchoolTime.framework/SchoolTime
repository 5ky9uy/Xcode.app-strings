@(#)PROGRAM:SchoolTime  PROJECT:SchoolTime-1
com.apple.schooltime.behaviorResolution
%@ %@
startTimeIntervalSinceReferenceDate
duration
calendarIdentifier
timeZoneName
scheduleStartHour
scheduleStartMinute
scheduleEndHour
scheduleEndMinute
timeInterval
<%@ %p; startTime: %@:%@; endTime: %@:%@; %@>
q24@?0@"SCLScheduleRecurrence"8@"SCLScheduleRecurrence"16
v12@?0i8
v8@?0
v16@?0@"NSError"8
v24@?0@"SCLSchoolModeServerSettings"8@"NSError"16
v20@?0B8@"NSError"12
version
isEnabled
recurrences
startTime
endTime
repeatSchedule
en-US
v16@?0q8
(none)
<%@ %p; startTime=%@; endTime=%@, repeatSchedule=%@>
<%@ %p; %@; %@; referenceDate=%@>
v24@?0@"SCLHistoryGroup"8^B16
v32@?0@"SCLUnlockHistoryItem"8Q16^B24
v32@?0@"SCLHistoryGroup"8Q16^B24
q24@?0@"SCLUnlockHistoryItem"8@"SCLUnlockHistoryItem"16
referenceDate
q24@?0@"SCLHistoryGroup"8@"SCLHistoryGroup"16
SchoolTimeFormatters
ScheduleOff
CustomDailyScheduleFormat
CustomScheduleDetailTextSemicolonSeparator
CustomScheduleDetailTextCommaSeparator
v24@?0q8^B16
q24@?0@"SCLScheduleFormatterItem"8@"SCLScheduleFormatterItem"16
com.apple.private.alloy.tinker.school
com.apple.schooltimed.SCLTransportService
B24@?0@"SCLTransportController"8@"NSDictionary"16
IDSCopyIDForDevice returned nil for device %@
acquired
unacquired
invalidated
<%@ %p (%@); %@>
v24@?0@"SCLSuppressSchoolModeAssertion"8@"NSError"16
-[SCLSchoolMode init]
SCLSchoolMode.m
false
SCLSchoolMode was resumed more than once %@
Got delegate callback but not resumed: %@
interval
calendar
timezone
scheduleStartTime
scheduleEndTime
UnlockEvent
v16@?0@"<SCLSchedulingParameters>"8
clientIdentifier
UUID
date
eventBehavior
com.apple.SchoolTime
persistence
pairing
transport
framework
interrupt
com.apple.schooltime.schoolmodeserver
com.apple.schooltime.schedule.active
SignificantTimeChangeNotification
com.apple.schooltime.eventBehaviorResolution
com.apple.schooltime.behaviorResolutionConnection
v24@?0@"SCLInterruptEventBehavior"8@"NSError"16
SCLInterruptBehaviorResolver
B16@?0@"CNContact"8
v24@?0@"CNContact"8^B16
B16@?0@"SCLInterruptBehaviorResolutionRecord"8
B24@?0@"SCLInterruptBehaviorResolutionRecord"8@16
%@ should be implemented by a concrete subclass of %@
B24@?0@"SCLScheduleRecurrence"8@"NSDictionary"16
activeState
scheduleEnabled
inSchedule
<%@ %p; %@; scheduleEnabled=%u; inSchedule=%u>
inactive
suppressed
active
scheduleSettings
SUNDAY
MONDAY
TUESDAY
WEDNESDAY
THURSDAY
FRIDAY
SATURDAY
(unknown: %i)
hasAttemptedRemoteSync
ScheduleSettings.dat
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
pairingID
IDSDeviceID
schedule
serverState
SCLSchooolModeCoordinator %p
com.apple.schooltimed
Schedule cannot be set before first unlock.
com.apple.schooltime
Cannot overwrite existing schedule for initial sync.
v16@?0@"SCLPersistentSettings"8
The schedule is invalid
com.apple.Schooltime.unscheduledActivation
isAltAccount
@"NSDictionary"8@?0
com.apple.Schooltime.scheduleUnlock
UnlockDuration
<%@ %p; %02d:%02d - %02d:%02d>
manualSchoolModeEnabled
com.apple.schooltime.suppression
enabled
<%@ %p; enabled=%u; schedule=%@>
v32@?0@"SCLScheduleRecurrence"8Q16^B24
SCHEDULE_TIME_INTERVAL_SHORT_FORMAT
v16@?0@"SCLScheduleFormatter"8
<%@ %p; %@>
com.apple.Schooltime.activeDuration
Did not iterate all weekdays; %@; %@ %@ - %@
SchoolTime
momd
SCLUnlockHistoryPersistentStore context
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
startDate >= %@
startDate
startDate < %@
type
urgency
sender
default
call
notification
<unknown>
critical
loaded
state
dayMap
<%@ %p>
%@: %@ - %@
Day %@ must be between 1 and 7
SettingsSyncContext.plist
com.apple.schooltimed.settingssync-%@
v16@?0@"NSObject<OS_xpc_object>"8
Recurrence validation failed.
FailedValidations
OverlappingRecurrences
CrossDayBoundaryRecurrences
hour
minute
SCLSuppressSchoolModeAssertionManager
v16@?0@"<SCLSuppressSchoolModeAssertionManagerObserver>"8
status
clients
Cannot set schedule because client is missing the %@ entitlement
No pairing for pairingID %@
<%@ %p; explanation: %@>
<%@ %p; %@:%@>
Hour %@ cannot be greater than 23
Minute %@ cannot be greater than 59
contactIdentifier
value
email
phone
unknown
identifier
com.apple.schooltime.manager
B16@?0@"NRDevice"8
coordinators
devices
@16@?0@8
SCLSchoolModeManager
hasPairingStorePath
isArchived
UnlockHistory.sqlite3
com.apple.schooltime.database.maintenance
com.apple.schooltime.wake.activity
event
interruptEligible
none
eligible
eligibleToInterrupt
com.apple.schooltime.schedule
com.apple.schooltime.setschedule
com.apple.schooltime.unlockhistory
com.apple.schooltime.edithistory
SCLServerStartNotification
syncStatus
messageIdentifier
error
recoveryHistory
[%{public}@] received server restart notification
[%{public}@] Could not register for server restart notification: %@
[%{public}@] Connection was interrupted.
[%{public}@] Connection was invalidated remotely.
Resume SCLSchoolMode
Activate SCLSchoolMode %@
Failed to get initial settings for school mode: %@
synchronous, updating server settings before applying
Reconnect SCLSchoolMode
[%{public}@] made new connection for reconnect: %{BOOL}d; isRunning: %{BOOL}d
[%{public}@] new connection and previously running, resuming
[%@] setActive %{BOOL}u error %@
[%@] setActive %{BOOL}u success %{BOOL}u error %@
Dropping connection and NOT reconnecting %@ - %@
[%{public}@] Applying server settings, oldState %@, newState %@
Type: %d
No transport controller for incoming message from %@; %@
Incoming Protobuf
Service message with identifier %@ did send with success %{BOOL}u error: %@
Service message with identifier %@ failed to send with error %@
Service message %@ hasBeenDelivered
Acquire suppression assertion async
Acquiring suppression assertion %@
Could not acquire assertion - %@ %@
Acquire suppression assertion sync
Suppression connection interrupted - needs reconnect = %{BOOL}d
Suppression connection invalidated. Further attempts to acquire suppression assertion will fail.
SetActive
[%@] setActive:%{BOOL}d
[%@] setActive complete success:%{BOOL}d; error %@
ApplyScheduleSettings
Apply schedule settings: %{public}@
NoteSignificantUserInteraction
NoteSignificantUserInteraction for %@
startWithScheduleSettings
qosClass: 0x%x
Initial server evaluation
School Mode Server Initial Evaluation
Cancelling timer
Setting timer for duration: %@ with transaction %@
Creating SCLInterruptBehaviorResolution for client %@
Resolving behavior for client %@ event %@
Resolved behavior %@
Could not resolve behavior for event %@ (error:%@)
Connection interrupted
Connection invalidated
Access to contacts store: granted=%{BOOL}u, error=%@
Accepting new connection from pid %d
Resolving behavior for event: %{public}@
Result behavior:%@ for event: %{public}@
Missing entitlement for resolving behavior
Client %@ entitled %{BOOL}u
sender=%{public}@, isEmergencyBypassEnabled=%{BOOL}u
Error checking emergency bypass contacts: error=%@
Checked if event sender is a repeat: sender=%{public}@, repeat=%{BOOL}u
New record added %{public}@
Pruned %lu resolution records
No linked IDS device for NRDevice with pairingID %@; deviceIdentifier: %@; devices: %@ 
<SCLTransportController %p> device %@
No delegate for handling incoming protobuf for %@
Unhandled protobuf message %@
Failed to send history item: %@
Sent history item with identifier %@
Received incoming schedule: %@ forInitialSync: %{BOOL}u
Handle incoming history item %@
Failed to send remote schedule response: %@
Sent remote schedule response with identifier %@
No schedule settings for remote request.
Failed to apply schedule: %@
Sent schedule with identifier %@
Failed to send remote schedule request: %@
Sent remote schedule request %@
Directory at %@ already existed: %@
Could not create SchoolTime folder at %@; %@
Failed to load schedule settings from data: %@
Persistent schedule data doesn't exist: %@
Failed to read schedule data with error: %@
Already requested schedule settings for pairingID %@
Requesting remote settings for pairingID %@
Class C Data is available
Apply schedule: %@
Persist settings - manualSchoolModeEnabled: %{BOOL}u; schedule: %@
Failed to write data for schedule: %@
Failed to create data for settings: %@ %@
Failed to find active schedule recurrence for unlock period at date %@ in calendar %@: %@
Failed to apply schedule %@ from remote source with error: %@
Applied remote schedule: %@
Received unexpected unlock item on watch
Did not iterate all weekdays; %{public}@; %{public}@ %{public}@ - %{public}@
Loaded description %@
Couldn't load description %@
Failed to save item %@: %@
Could not retrieve recent history items: %@
Failed to purge old items: %@
Deleted %@ items
Device %@ is missing pairingID
Have pairing id %@ but nil pairing store path. Perhaps device hasn't completed pairing yet? %@
Settings Sync Activity
Begin sync activity %@
Failed to move activity %@ to CONTINUE state
Failed to move activity %@ to DONE state
Could not generate data for state machine context: %@
Could not save state machine context: %@
Saved state machine context
Sync coordinator start timer: %@
Sync coordinator cancel tiemr
Perform Settings Sync
Sync coordinator perform sync
Sent schedule settings with identifier %@
Failed to send schedule settings with error: %@
Sync coordinator cancel retry activity: %@
Sync coordinator schedule retry activity %@
No existing activity for checkin %@
Could not start activity %@
Could not end %@
Acquired suppression assertion for %@
Relinquished suppression assertion for %@
Client %@ is not entitled to acquire suppression assertions
Client: %p
Connect Client
State dump
Start School Mode Manager
Loading devices %@
<NRDevice %p; pairingID=%@; hasPairingPath=%{BOOL}d; isAltAccount=%{BOOL}d; isArchived=%{BOOL}d> isEligible:%{BOOL}d
No linked IDS device for NRDevice with pairingID %@
Device is not tinker-paired. Allowing manual SchoolTime
Connecting client %@ to coordinator %@
Created pairing for pairingID %@
Handle Device Paired
Device paired: %@
Missing pairingID for device paired notification %@
Got pairing notification for pairingID %{public}@ but we already have an SCLDPairing
Handle Device Unpaired
Missing pairingID for device unpaired notification %@
Device unpaired: %{public}@ - %@
No coordinator was found for pairingID %{public}@; attempting to manually remove unpaired coordinators
%@ is missing a pairingID
Coordinators have no valid pairingID, but were not the unpaired devices: %{public}@
%@ is missing a pairingID - %@
Coordinator %@ is not in the coordinator map: %@
Removing coordinator for pairingID %{public}@
No pairing for client with pairingID %@
AutoUpdatingPairingID used when multiple pairings are present. Linking to %@
No coordinator for pairingID %@. Pending client until pairing.
Checked in with activity %@
Old criteria doesn't exist - setting new criteria
using old criteria
No tinker-paired devices available. Unregistering %s
Database Maintenance
Performing database maintenance: %@
Failed to move activity to CONTINUE state
Completed database maintenance
Failed to move activity to DONE state
Registering xpc activity %s for %@
registered & received xpc activity %@ with state %ld
%s checked in, setting criteria wake interval %f
%s deferred
xpc_activity_set_state(%s, XPC_ACTIVITY_STATE_DEFER) failed
%s asked to run
Transition from state %@ to state: %@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
SCLInterruptBehaviorResolutionXPCServer
NSObject
SCLSettingsSyncErrorBehavior
SCLSettingsSyncErrorHandler
SCLPBUnlockHistoryItem
NSCopying
SCLScheduleRecurrence
NSSecureCoding
NSCoding
Extended
SCLSchoolModeXPCClient
SCLPBScheduleSettings
SCLSimpleSchedule
SCLMutableSimpleSchedule
SCLSettingsSyncState
SCLSettingsSyncStateSynced
SCLSettingsSyncStatePendingSend
SCLSettingsSyncStateSending
SCLSettingsSyncStateSent
SCLSettingsSyncStateFailed
SCLHistoryGroupKey
SCLHistoryGroup
SCLScheduleFormatter
SCLScheduleFormatterItem
SCLScheduleTimeFormatter
SCLTimeIntervalsFormatter
SCLTransportService
IDSServiceDelegate
IDSServiceDelegatePrivate
SCLSuppressSchoolModeAssertion
SCLSchoolMode
SCLSchoolModeXPCClientDelegate
Private
SCLSchoolModeConfiguration
Testing
SCLUnlockHistoryItem
SCLUnlockEvent
SCLSchedulingParameters
SCLSchedulingEngine
SCLInterruptBehaviorResolutionRecord
SCLSchoolModeServer
SCLSchedulingEngineDelegate
SCLSuppressSchoolModeAssertionManagerObserver
SCLInterruptBehaviorResolution
SCLInterruptBehaviorResolver
NSXPCListenerDelegate
SCLSchoolModeServerObserver
SCLSchedule
NSMutableCopying
Convenience
SCLTransportController
SCLSettingsSyncTransport
SCLState
SCLPBScheduleRequestResponse
SCLPBScheduleRecurrence
SCLPBScheduleRequest
SCLSchoolModeCoordinator
SCLTransportControllerDelegate
SCLSchoolModeCoordinatorConfiguration
SCLTimeInterval
SCLPBTimeInterval
SCLPersistentSettings
SCLSuppressSchoolModeAssertionXPCServer
SCLScheduleSettings
SCLMutableScheduleSettings
SCLScheduleIntervalFormatter
SCLWatchServer
SCLRecurrenceSchedule
SCLRecurrenceScheduleCreation
SCLActiveDurationAnalyticsSource
SchoolTime
SCLUnlockHistoryPersistentStore
SCLScheduling
SCLInterruptEvent
SCLMutableInterruptEvent
SCLSchoolModeServerSettings
SCLDailySchedule
SCLMutableDailySchedule
SCLSettingsSyncCoordinator
SCLSettingsSyncStateMachineDelegate
SCLScheduleAttributes
SCLPBScheduleTime
SCLSuppressSchoolModeAssertionManager
SCLSuppressSchoolModeAssertionClientDelegate
SCLSuppressSchoolModeAssertionClient
SCLScheduleTime
SCLMutableScheduleTime
SCLContact
SCLMutableContact
SCLSchoolModeClientProxy
SCLSchoolModeXPCServer
SCLSchoolModeManager
SCLSchoolModeClientProxyDelegate
SCLSchoolModeManagerConfiguration
SCLSchoolModeWakeScheduler
SCLInterruptEventBehavior
SCLSettingsSyncContext
SCLSettingsSyncStateMachine
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
resolveBehaviorForEvent:clientIdentifier:completion:
interfaceWithProtocol:
setWithObject:
setClasses:forSelector:argumentIndex:ofReply:
init
initWithRecoveryType:retryInterval:
recoveryType
retryInterval
_recoveryType
_retryInterval
TQ,R,N,V_recoveryType
Tq,R,N,V_retryInterval
recoveryTypeForError:
countByEnumeratingWithState:objects:count:
domain
code
behaviorForError:history:
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithDouble:
setObject:forKey:
numberWithUnsignedInt:
setCalendarIdentifier:
setTimeZoneName:
allocWithZone:
copyWithZone:
setStartTimeIntervalSinceReferenceDate:
setHasStartTimeIntervalSinceReferenceDate:
hasStartTimeIntervalSinceReferenceDate
setDuration:
setHasDuration:
hasDuration
hasCalendarIdentifier
hasTimeZoneName
setScheduleStartHour:
setHasScheduleStartHour:
hasScheduleStartHour
setScheduleStartMinute:
setHasScheduleStartMinute:
hasScheduleStartMinute
setScheduleEndHour:
setHasScheduleEndHour:
hasScheduleEndHour
setScheduleEndMinute:
setHasScheduleEndMinute:
hasScheduleEndMinute
readFrom:
writeTo:
copyTo:
mergeFrom:
startTimeIntervalSinceReferenceDate
duration
calendarIdentifier
timeZoneName
scheduleStartHour
scheduleStartMinute
scheduleEndHour
scheduleEndMinute
.cxx_destruct
_duration
_startTimeIntervalSinceReferenceDate
_calendarIdentifier
_scheduleEndHour
_scheduleEndMinute
_scheduleStartHour
_scheduleStartMinute
_timeZoneName
_has
TB,N
Td,N,V_startTimeIntervalSinceReferenceDate
Td,N,V_duration
TB,R,N
T@"NSString",&,N,V_calendarIdentifier
T@"NSString",&,N,V_timeZoneName
TI,N,V_scheduleStartHour
TI,N,V_scheduleStartMinute
TI,N,V_scheduleEndHour
TI,N,V_scheduleEndMinute
copy
decodeIntegerForKey:
decodeObjectOfClass:forKey:
encodeInteger:forKey:
encodeObject:forKey:
timeInterval
startTime
hour
numberWithUnsignedInteger:
minute
endTime
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithTimeInterval:day:
_timeInterval
_day
T@"SCLTimeInterval",R,C,N,V_timeInterval
Tq,R,N,V_day
dateIntervalForActiveScheduleOnOrAfterDate:calendar:
containsDate:
component:fromDate:
dateComponents
setWeekday:
crossesDayBoundary
SCL_dateIntervalForActiveScheduleOnOrAfterDate:calendar:startComponents:endComponents:
intersectsTimeInterval:
compare:
numberWithInteger:
isActiveAtDate:calendar:
intersectsRecurrence:
isContiguousWithRecurrence:
dayOfWeekAndStartTimeComparator
setSchedule:
setScheduleSettings:
initWithActiveState:scheduleEnabled:inSchedule:
setState:
_makeConnection:
identifier
UTF8String
configuration
targetQueue
_reconnectToServer
dealloc
testingEndpoint
initWithListenerEndpoint:
initWithMachServiceName:options:
setExportedObject:
setExportedInterface:
setRemoteObjectInterface:
_setQueue:
_dropConnection
setInterruptionHandler:
setInvalidationHandler:
resume
applyServerSettings:
loadsSynchronously
synchronousRemoteObjectProxyWithErrorHandler:
remoteObjectProxyWithErrorHandler:
pairingID
state
connectWithPairingID:identifier:completion:
isRunning
scheduleSettings
isLoaded
connection
invalidate
serverWithErrorHandler:
applySchedule:completion:
setActive:completion:
fetchRecentUnlockHistoryItemsWithCompletion:
addUnlockHistoryItem:completion:
deleteHistoryWithCompletion:
noteSignificantUserInteraction
triggerRemoteSync
dumpState
delegate
client:didUpdateToState:fromState:
client:didLoadScheduleSettings:
client:didUpdateScheduleSettings:
clientDidChangeUnlockHistory:
didChangeUnlockHistory
initWithDelegate:configuration:
applyScheduleSettings:completion:
setDelegate:
setConnection:
setConfiguration:
setRunning:
_lock
_connectionLock
_serverSettings
_restartNotificationToken
_running
_delegate
_connection
_configuration
T@"<SCLSchoolModeXPCClientDelegate>",W,N,V_delegate
T@"NSXPCConnection",&,N,V_connection
T@"SCLSchoolModeConfiguration",&,N,V_configuration
running
TB,N,GisRunning,V_running
T@"SCLState",R,N
T@"SCLScheduleSettings",R,N
loaded
TB,R,N,GisLoaded
removeAllObjects
addObject:
count
objectAtIndex:
numberWithBool:
initWithCapacity:
addRecurrences:
recurrencesCount
clearRecurrences
recurrencesAtIndex:
recurrencesType
setVersion:
setHasVersion:
hasVersion
setIsEnabled:
setHasIsEnabled:
hasIsEnabled
version
isEnabled
recurrences
setRecurrences:
_recurrences
_version
_isEnabled
TI,N,V_version
TB,N,V_isEnabled
T@"NSMutableArray",&,N,V_recurrences
repeatSchedule
initWithSimpleSchedule:
array
localeWithLocaleIdentifier:
setLocale:
weekdaySymbols
componentsJoinedByString:
initWithStartTime:endTime:
mutableCopyWithZone:
_startTime
_endTime
_repeatSchedule
T@"SCLScheduleTime",R,C,N,V_startTime
T@"SCLScheduleTime",R,C,N,V_endTime
Tq,R,N,V_repeatSchedule
setStartTime:
setEndTime:
setRepeatSchedule:
T@"SCLScheduleTime",C,D,N
Tq,D,N
stateMachine
context
clearRecoveryHistory
initWithStateMachine:
settingsDidChange
commitSettings
significantUserInteractionOccurred
xpcActivityStarted
enqueueFailedWithError:
didEnqueueMessage:
message:failedWithError:
messageDidSend:
messageWasDelivered:
message:didFailToAcknowledgeWithError:
willExitWithNextState:
didEnterWithPreviousState:
status
setStateMachine:
_status
_stateMachine
TQ,R,N,V_status
T@"SCLSettingsSyncStateMachine",W,N,V_stateMachine
setError:
setMessageIdentifier:
cancelRetryActivity
pendingSendState
transitionToState:
scheduleCommitTimerWithInterval:
performSync
cancelCommitTimer
failedState
sendingState
messageIdentifier
sentState
syncedState
errorWithDomain:code:userInfo:
recoveryHistory
error
errorHandler
addRecoveryHistory:
transitionToPendingState
retryCriteriaWithInterval:
scheduleRetryWithActivityCriteria:
calendar
referenceDate
timeZone
initWithCalendar:referenceDate:
_calendar
_referenceDate
T@"NSCalendar",R,N,V_calendar
T@"NSDate",R,N,V_referenceDate
strongToStrongObjectsMapTable
canContainUnlockHistoryItem:
enumerateObjectsUsingBlock:
unlockedInterval
startDate
startOfDayForDate:
objectForKey:
recurrencesForDay:
initWithRecurrences:
initWithEffectiveSchedule:calendar:referenceDate:
scheduleStartTime
scheduleEndTime
arrayWithObjects:count:
items
sortUsingComparator:
sortDescriptorWithKey:ascending:
containsObject:
sortDescriptorWithKey:ascending:comparator:
firstObject
sortUsingDescriptors:
isScheduledForDay:
isDate:inSameDayAsDate:
insertObject:atIndex:
effectiveSchedule
effectiveRecurrence
historyGroupsByPrioritizingSchedule:forDate:inCalendar:items:
setItems:
_effectiveSchedule
_items
T@"SCLSchedule",R,C,N,V_effectiveSchedule
T@"NSMutableArray",&,N,V_items
autoupdatingCurrentLocale
autoupdatingCurrentCalendar
_regenerateFormatters
timeZoneForSecondsFromGMT:
calendarWithIdentifier:
locale
setTimeZone:
setCalendar:
setDateFormat:
setDateTemplate:
bundleForClass:
formatterItemsForSchedule:
localizedStringForKey:value:table:
days
timeIntervalsFormatter
setPrefersHoursOnly:
timeIntervals
stringFromTimeIntervals:
stringForWeekdaysInItem:
initWithFormat:locale:
dayRanges
integerValue
date
nextDateAfterDate:matchingUnit:value:options:
stringFromDate:
lastObject
initWithStartDate:endDate:
stringFromDateInterval:
listFormatter
stringFromItems:
timeIntervalsForDay:
objectForKeyedSubscript:
initWithCalendar:timeIntervals:
setObject:forKeyedSubscript:
addDay:
SCL_enumerateWeekdaysUsingBlock:
allValues
SCL_orderedWeekdays
earliestWeekdayInCalendar
indexOfObject:
sortedArrayUsingComparator:
stringFromSchedule:
standaloneWeekdayFormatter
weekdayIntervalFormatter
_locale
_timeIntervalsFormatter
_listFormatter
_standaloneWeekdayFormatter
_weekdayIntervalFormatter
T@"SCLTimeIntervalsFormatter",R,N,V_timeIntervalsFormatter
T@"NSListFormatter",R,N,V_listFormatter
T@"NSDateFormatter",R,N,V_standaloneWeekdayFormatter
T@"NSDateIntervalFormatter",R,N,V_weekdayIntervalFormatter
T@"NSLocale",&,N,V_locale
T@"NSCalendar",C,N,V_calendar
_days
_timeIntervals
T@"NSArray",R,C,N,V_timeIntervals
defaultTimeZone
setDateStyle:
setTimeStyle:
stringForScheduleTime:
dateWithEra:year:month:day:hour:minute:second:nanosecond:
stringForObjectValue:
_dateFormatter
setFormattingStyle:
setItemFormatter:
intervalFormatter
prefersHoursOnly
setCoalescesAMPMSymbols:
stringFromTime:toTime:
formattingStyle
intervalFormattingStyle
setIntervalFormattingStyle:
_prefersHoursOnly
_intervalFormatter
T@"SCLScheduleIntervalFormatter",R,N,V_intervalFormatter
T@"NSLocale",&,D,N
TB,N,V_prefersHoursOnly
TQ,N
setEnabled:
schedule
setDay:
setTimeInterval:
hasHour
hasMinute
setHour:
setMinute:
initWithHour:minute:
timeIntervalSinceReferenceDate
name
dateWithTimeIntervalSinceReferenceDate:
initWithStartDate:duration:
timeZoneWithName:
initWithInterval:calendar:timeZone:startTime:endTime:
weakObjectsHashTable
setWantsCrossAccountMessaging:
service
queue
addDelegate:withDelegateProperties:queue:
transportControllers
setTransportService:
removeObject:
IDSDeviceIdentifier
uniqueIDOverride
predicateWithBlock:
allObjects
filteredArrayUsingPredicate:
dictionaryWithObjects:forKeys:count:
sendProtobuf:toDestinations:priority:options:identifier:error:
type
linkedDeviceForFromID:withRelationship:
transportControllerForDevice:
service:incomingProtobuf:fromID:context:
service:identifier:didSendWithSuccess:error:
service:didDeliverMessageWithIdentifier:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
service:account:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
service:account:incomingTopLevelMessage:fromID:messageContext:
service:token:time:error:
service:didFlushCacheForRemoteURI:fromURI:guid:
service:didHintCheckingTransportLogWithReason:
service:didUpdatePseudonymsWithChanges:
initWithTargetQueue:service:
start
addTransportController:
removeTransportController:
sendProtobuf:toDevice:options:identifier:error:
_service
_transportControllers
_queue
_targetQueue
T@"NSHashTable",R,N,V_transportControllers
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_targetQueue
T@"IDSService",R,N,V_service
UUID
connectionInterrupted
connectionInvalidated
explanation
acquireWithExplanation:UUID:completion:
acquireWithInvalidationHandler:
initWithExplanation:
isValid
acquireWithError:
_UUID
_state
_explanation
T@"NSString",R,C,N,V_explanation
valid
TB,R,N,GisValid
initWithIdentifier:delegate:
initWithIdentifier:pairingID:delegate:
setIdentifier:
setPairingID:
initWithConfiguration:
cStringUsingEncoding:
setTargetQueue:
resumeState
raise:format:
setResumeState:
_assertQueueIfReady
schoolMode:didUpdateState:fromState:
schoolMode:didUpdateScheduleSettings:
schoolModeDidUpdateUnlockHistory:
schoolMode:didLoadScheduleSettings:
schoolModeDidLoad:
initWithIdentifier:
_xpcClient
_resumeState
TQ,V_resumeState
T@"NSString",R,N
setLoadsSynchronously:
setTestingEndpoint:
_testingEndpoint
_loadsSynchronously
_identifier
_pairingID
T@"NSString",C,N,V_identifier
T@"NSObject<OS_dispatch_queue>",&,N,V_targetQueue
T@"<SCLSchoolModeDelegate>",W,N,V_delegate
T@"NSUUID",C,N,V_pairingID
TB,N,V_loadsSynchronously
T@"NSXPCListenerEndpoint",&,N
_loadEffectiveRecurrence
builderWithObject:
appendObject:withName:
build
initWithInterval:calendar:timeZone:
_unlockedInterval
_timeZone
_scheduleStartTime
_scheduleEndTime
_effectiveRecurrence
T@"NSDateInterval",R,N,V_unlockedInterval
T@"NSTimeZone",R,N,V_timeZone
T@"SCLScheduleTime",R,N,V_scheduleStartTime
T@"SCLScheduleTime",R,N,V_scheduleEndTime
T@"SCLScheduleRecurrence",R,N,V_effectiveRecurrence
fetchRequestWithEntityName:
fetchRequest
T@"NSDate",C,D,N
Ts,D,N
T@"NSString",C,D,N
T@"NSUUID",C,D,N
evaluationDate
setEvaluationDate:
activationSetting
setActivationSetting:
isSuppressed
setSuppressed:
_suppressed
_evaluationDate
_scheduleSettings
_activationSetting
T@"NSDate",C,N,V_evaluationDate
T@"SCLScheduleSettings",C,N,V_scheduleSettings
suppressed
TB,N,GisSuppressed,V_suppressed
TQ,N,V_activationSetting
_evaluateChangeFromParameters:toParameters:
activeState
isScheduleEnabled
isInSchedule
schedulingParameters
schedulingEngine:didUpdateState:fromState:nextEvaluationDate:
endDate
updateParametersWithBlock:
initWithParametersBlock:shouldStartManuallyActive:
reevaluateStateAtDate:
lastEvaluationDate
nextEvaluationDate
setSchedulingParameters:
_lastEvaluationDate
_nextEvaluationDate
_schedulingParameters
T@"SCLSchedulingParameters",&,N,V_schedulingParameters
T@"<SCLSchedulingEngineDelegate>",W,N,V_delegate
T@"SCLState",R,N,V_state
T@"NSDate",R,N
_initWithUUID:date:eventBehavior:clientIdentifier:
clientIdentifier
appendString:withName:
appendObject:withName:skipIfNil:
eventBehavior
isEqualToString:
resolutionRecordForDate:eventBehavior:clientIdentifier:
_date
_eventBehavior
_clientIdentifier
T@"NSUUID",R,C,N,V_UUID
T@"NSDate",R,C,N,V_date
T@"SCLInterruptEventBehavior",R,C,N,V_eventBehavior
T@"NSString",R,C,N,V_clientIdentifier
dataWithPropertyList:format:options:error:
length
bytes
schedulingEngine
handleSignificantTimeChange
setTimeChangeToken:
defaultCenter
handleLocaleChange
addObserver:selector:name:object:
suppressionManager
addObserver:
currentCalendar
configureParameters:forSuppressionStatus:
setSchedulingEngine:
timeChangeToken
removeObserver:name:object:
_scheduleTimerForDate:
observers
timeIntervalSinceNow
numberWithFloat:
scheduleWakeForDate:
timerFired
cancelWake
server:didUpdateState:fromState:
assertionManager:didUpdateAssertionsStatus:
initWithQueue:suppressionManager:wakeScheduler:
currentState
startWithScheduleSettings:shouldStartManuallyActive:
removeObserver:
setActive:
applySchedule:
wakeScheduler
setQueue:
timerSource
setTimerSource:
activeTransaction
setActiveTransaction:
_timeChangeToken
_suppressionManager
_wakeScheduler
_observers
_schedulingEngine
_timerSource
_activeTransaction
T@"NSHashTable",R,N,V_observers
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
Ti,N,V_timeChangeToken
T@"SCLSchedulingEngine",&,V_schedulingEngine
T@"NSObject<OS_dispatch_source>",&,N,V_timerSource
T@"NSObject<OS_os_transaction>",&,N,V_activeTransaction
T@"SCLState",R
T@"SCLSuppressSchoolModeAssertionManager",R,N,V_suppressionManager
T@"SCLSchoolModeWakeScheduler",R,N,V_wakeScheduler
mapTableWithKeyOptions:valueOptions:
initWithClientIdentifier:
serverConnection
setServerConnection:
resolutionForClientIdentifier:
resolveBehaviorForEvent:error:
_connectionQueue
contactIdentifier
predicateForContactsWithIdentifiers:
value
destinationIdIsPhoneNumber
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:prefixHint:
predicateForContactsMatchingEmailAddress:
scl_predicateForContactsMatchingEventSender:
initWithMachServiceName:
requestAccessForEntityType:completionHandler:
processIdentifier
_isEntitledWithClientIdentifier:
_resolveInterruptBehaviorForEvent:date:clientIdentifier:
currentConnection
valueForEntitlement:
sender
isActive
shouldAlwaysInterrupt
urgency
_isEmergencyBypassEnabledForContact:
_isRepeatSender:date:clientIdentifier:
initWithEvent:interruptEligibility:
_addResolutionRecord:
initWithKeysToFetch:
setPredicate:
setUnifyResults:
isUnified
linkedContacts
callAlert
ignoreMute
bs_containsObjectPassingTest:
enumerateContactsWithFetchRequest:error:usingBlock:
dateByAddingTimeInterval:
event
filterUsingPredicate:
listener:shouldAcceptNewConnection:
initWithTargetQueue:
activate
listener
setListener:
contactStore
setContactStore:
setCurrentState:
resolutionRecords
setResolutionRecords:
_listener
_contactStore
_currentState
_resolutionRecords
T@"NSXPCListener",&,N,V_listener
T@"CNContactStore",&,N,V_contactStore
T@"SCLState",&,N,V_currentState
T@"NSMutableArray",&,N,V_resolutionRecords
scheduledDays
initWithSchedule:
startTimeForDay:
endTimeForDay:
isEmpty
empty
TB,R,D,N,GisEmpty
Tq,R,N
T@"NSArray",R,N
anyObject
uniformTimeIntervals
linkedDevicesWithRelationship:
deviceRegistry
NRDevice
deviceForNRDevice:fromIDSDevices:
device
data
initWithData:
handleIncomingSchedule:forType:
handleIncomingHistoryItem:
hasScheduleSettings
handleRemoteScheduleSettingsRequest
numberWithUnsignedShort:
settingsSyncCoordinator
didDeliverMessageWithIdentifier:
identifier:didSendWithSuccess:error:
initWithProtobufData:type:isResponse:
transportService
transportController:didReceiveSchedule:forInitialSync:
transportController:didReceiveUnlockHistoryItem:
currentScheduleSettingsForTransportController:
sendSchedule:identifier:error:
initWithNRDevice:deviceRegistry:service:deviceIdentifier:
addUnlockHistoryItem:
requestRemoteSettings
setSettingsSyncCoordinator:
_NRDevice
_deviceRegistry
_IDSDeviceIdentifier
_transportService
_settingsSyncCoordinator
T@"NRDevice",R,N,V_NRDevice
T@"NRPairedDeviceRegistry",R,N,V_deviceRegistry
T@"NSString",R,N,V_IDSDeviceIdentifier
T@"IDSDevice",R,D,N
T@"SCLTransportService",W,N,V_transportService
T@"<SCLTransportControllerDelegate>",W,N,V_delegate
T@"SCLSettingsSyncCoordinator",W,N,V_settingsSyncCoordinator
decodeBoolForKey:
encodeBool:forKey:
initWithActive:scheduleEnabled:inSchedule:
_scheduleEnabled
_inSchedule
_activeState
active
TB,R,N,GisActive
scheduleEnabled
TB,R,N,GisScheduleEnabled,V_scheduleEnabled
inSchedule
TB,R,N,GisInSchedule,V_inSchedule
TQ,R,N,V_activeState
T@"SCLPBScheduleSettings",&,N,V_scheduleSettings
hasTimeInterval
setHasDay:
hasDay
dayAsString:
StringAsDay:
T@"SCLPBTimeInterval",&,N,V_timeInterval
Ti,N,V_day
directoryURL
URLByAppendingPathComponent:
initWithInitialState:
server
transportController
_createSchoolTimeDirectoryIfNeeded
_registerForFirstUnlockIfNeeded
stateDataWithHints:
idsDevice
persistentSettings
appendBodySectionWithName:multilinePrefix:block:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
scheduleURL
dataWithContentsOfURL:options:error:
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
sendsRemoteScheduleSettings
_requestRemoteScheduleSettingsIfNeeded
path
_lock_loadPersistentSchedule
historyStore
loadStore
activateSettingsSyncCoordinatorWithSettings:
_updateClientsWithSchedule:notify:
isManualSchoolModeEnabled
initWithFileURL:pairingID:schedule:queue:
setTransport:
_classCDataIsAvailable
setCoordinator:
_checkIfClassCDataIsAvailable
clients
applySchedule:forInitialSync:error:
_lock_updatePersistentSettingsWithBlock:
didUpdateScheduleSettings:notify:
insertItem:
_noteHistoryDidUpdate
sendsRemoteHistoryItems
recentHistoryItems
valueForProperty:
boolValue
deleteHistory:
purgeOldItems
unlockHistoryDidChange
_persistSettings:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToURL:options:error:
pendingUnlockItem
recurrenceForActiveScheduleOnOrAfterDate:calendar:
localTimeZone
setPendingUnlockItem:
timeIntervalSinceDate:
setManualSchoolModeEnabled:
didUpdateState:fromState:
activeDurationAnalyticsSource
addClient:
removeClient:
applySchedule:error:
purgeOldHistoryItems
nrDevice
isReady
setPersistentSettings:
stateHandle
setStateHandle:
_firstUnlockToken
_hasReceivedFirstUnlock
_ready
_clients
_directoryURL
_scheduleURL
_pendingUnlockItem
_persistentSettings
_stateHandle
_activeDurationAnalyticsSource
T@"NSMutableSet",R,N,V_clients
T@"NSURL",R,N,V_directoryURL
T@"NSURL",R,N,V_scheduleURL
T@"SCLUnlockHistoryItem",&,N,V_pendingUnlockItem
T@"SCLPersistentSettings",&,N,V_persistentSettings
T@"SCLSettingsSyncCoordinator",&,N,V_settingsSyncCoordinator
TQ,N,V_stateHandle
T@"SCLActiveDurationAnalyticsSource",R,N,V_activeDurationAnalyticsSource
T@"SCLSchoolModeCoordinatorConfiguration",R,C,N,V_configuration
T@"SCLState",R,N,V_currentState
T@"SCLScheduleSettings",&,D,N
ready
TB,R,N,GisReady,V_ready
setNRDevice:
setIdsDevice:
setTransportController:
setServer:
setHistoryStore:
setDirectoryURL:
setSendsRemoteHistoryItems:
setSendsRemoteScheduleSettings:
isManuallyManagedOnly
setManuallyManagedOnly:
_sendsRemoteScheduleSettings
_sendsRemoteHistoryItems
_manuallyManagedOnly
_idsDevice
_transportController
_server
_historyStore
T@"NRDevice",&,N,V_NRDevice
T@"IDSDevice",&,N,V_idsDevice
T@"SCLTransportController",&,N,V_transportController
T@"SCLSchoolModeServer",&,N,V_server
T@"SCLUnlockHistoryPersistentStore",&,N,V_historyStore
T@"NSURL",&,N,V_directoryURL
TB,N,V_sendsRemoteScheduleSettings
TB,N,V_sendsRemoteHistoryItems
manuallyManagedOnly
TB,N,GisManuallyManagedOnly,V_manuallyManagedOnly
containsScheduleTime:
hasStartTime
hasEndTime
T@"SCLPBScheduleTime",&,N,V_startTime
T@"SCLPBScheduleTime",&,N,V_endTime
_manualSchoolModeEnabled
T@"SCLScheduleSettings",&,N,V_scheduleSettings
manualSchoolModeEnabled
TB,N,GisManualSchoolModeEnabled,V_manualSchoolModeEnabled
initWithSchoolModeScheduleSettings:
TQ,R,N
_enabled
_schedule
enabled
TB,R,N,GisEnabled,V_enabled
TQ,R,N,V_version
T@"SCLSchedule",R,C,N,V_schedule
TB,D,N,GisEnabled
T@"SCLSchedule",C,D,N
objectAtIndexedSubscript:
distantPast
distantFuture
earlierDate:
subarrayWithRange:
addObjectsFromArray:
indexSetWithIndexesInRange:
enumerateObjectsAtIndexes:options:usingBlock:
removeObjectAtIndex:
newDateFormatterWithLocale:
referenceCalendar
referenceTimeZone
dateByAddingComponents:toDate:options:
dateByAddingUnit:value:toDate:options:
_stringForDateInterval:startComponents:endComponents:
stringFromTimeInterval:
briefFormatter
coalescesAMPMSymbols
shortFormatter
_shortIntervalFormat
_stringForCoalescedAMPMSymbolsWithDateInterval:locale:startTimeComponents:endTimeComponents:
bundle
table
setFormattingContext:
setLocalizedDateFormatFromTemplate:
localizedStringWithFormat:
setShortFormatter:
setBriefFormatter:
setBundle:
setTable:
setReferenceCalendar:
setReferenceTimeZone:
_coalescesAMPMSymbols
_formattingStyle
_shortFormatter
_briefFormatter
_bundle
_table
_referenceCalendar
_referenceTimeZone
T@"NSDateFormatter",&,N,V_shortFormatter
T@"NSDateIntervalFormatter",&,N,V_briefFormatter
T@"NSBundle",&,N,V_bundle
T@"NSString",&,N,V_table
T@"NSCalendar",&,N,V_referenceCalendar
T@"NSTimeZone",&,N,V_referenceTimeZone
TQ,N,V_formattingStyle
TB,N,V_coalescesAMPMSymbols
currentLocale
dateFormatFromTemplate:options:locale:
containsString:
sharedWatchServer
sharedInstance
setDeviceRegistry:
initWithService:
setService:
setManagesSchoolTimeSession:
setAllowsNonTinkerPairing:
setWorkloop:
schoolModeManager
_schoolModeManager
T@"SCLSchoolModeManager",R,N,V_schoolModeManager
performBlockWithSharedFormatter:
decodeObjectOfClasses:forKey:
initWithTimeIntervals:repeatSchedule:
isActiveForState:
commitAnalyticsEventForTransitionFromState:toState:
setActiveStartTimestamp:
activeStartTimestamp
secondsSinceContinuousTimestamp:
numberWithUnsignedLongLong:
secondsWithMachTimeInterval:
timebase
_activeStartTimestamp
_timebase
TQ,N,V_activeStartTimestamp
T{mach_timebase_info=II},R,N,V_timebase
T@"SCLState",C,N,V_currentState
firstWeekday
isDateInWeekend:
localeIdentifier
SCL_nonWeekendDays
URLForResource:withExtension:
initWithContentsOfURL:
initWithName:managedObjectModel:
initWithURL:
setType:
setPersistentStoreDescriptions:
persistentContainer
newBackgroundContext
setName:
setStoreContext:
loadPersistentStoresWithCompletionHandler:
refreshAllObjects
storeContext
initWithContext:
setStartDate:
save:
performBlockAndWait:
initWithFetchRequest:
executeRequest:error:
persistentStoreCoordinator
persistentStores
setAffectedStores:
recentItemsThresholdDate
predicateWithFormat:
setSortDescriptors:
executeFetchRequest:error:
setResultType:
result
_URL
_persistentContainer
_storeContext
T@"NSManagedObjectContext",&,V_storeContext
T@"NSURL",R,N,V_URL
T@"NSPersistentContainer",R,N,V_persistentContainer
nextDateAfterDate:matchingComponents:options:
_initWithEvent:
_initWithType:urgency:sender:
_type
_urgency
_sender
TQ,R,N,V_type
TQ,R,N,V_urgency
T@"SCLContact",R,N,V_sender
TB,R,D,N
setUrgency:
setSender:
setShouldAlwaysInterrupt:
TQ,D,N
T@"SCLContact",C,D,N
TB,D,N
initWithUUIDBytes:
initWithSettings:
setLoaded:
_loaded
T@"SCLState",C,N,V_state
TB,N,GisLoaded,V_loaded
dayMap
mutableCopy
scheduleForDay:
appendFormat:
setDayMap:
_dayMap
T@"NSMutableDictionary",&,N,V_dayMap
removeObjectForKey:
removeScheduleForDay:
setStartTime:endTime:forDay:
UUIDString
dataWithContentsOfURL:
unarchivedObjectOfClass:fromData:error:
registerActivityWithCriteria:
xpcActivityName
contextURL
commitTimerFired
transport
beginActivity:
performSyncForStateMachine:
stateMachine:scheduleRetryWithActivityCriteria:
stateMachine:scheduleCommitTimerWithInterval:
stateMachine:didTransitionFromState:toState:
cancelRetryActivityForStateMachine:
cancelCommitTimerForStateMachine:
noteSignificantUserInteractionOccured
_transport
_contextURL
_xpcActivityName
T@"SCLSettingsSyncStateMachine",R,N,V_stateMachine
T@"NSURL",R,N,V_contextURL
T@"NSString",R,N,V_xpcActivityName
T@"SCLScheduleSettings",R,N,V_schedule
T@"<SCLSettingsSyncTransport>",W,N,V_transport
initWithSchedule:options:
_prepareWithRecurrences:
objectEnumerator
nextObject
validationOptions
validationError
hasUniformIntervals
hasSingleIntervalPerDay
_valid
_hasUniformIntervals
_hasSingleIntervalPerDay
_validationOptions
_validationError
_scheduledDays
T@"SCLSchedule",R,N,V_schedule
TQ,R,N,V_validationOptions
TB,R,N,GisValid,V_valid
T@"NSError",R,N,V_validationError
Tq,R,N,V_scheduledDays
TB,R,N,V_hasUniformIntervals
TB,R,N,V_hasSingleIntervalPerDay
setHasHour:
setHasMinute:
_hour
_minute
TI,N,V_hour
TI,N,V_minute
_stateDataWithHints:
initWithConnection:
acquiredClients
performObserverBlock:
appendArraySection:withName:skipIfEmpty:
clientDidAcquireAssertion:
clientDidInvalidate:
setClients:
setAcquiredClients:
setObservers:
_acquiredClients
T@"NSMutableSet",&,N,V_clients
T@"NSMutableSet",&,N,V_acquiredClients
T@"NSHashTable",&,N,V_observers
connectionDidInvalidate
setAcquired:
isEntitled
isAcquired
setEntitled:
_acquired
_entitled
acquired
TB,N,GisAcquired,V_acquired
entitled
TB,N,GisEntitled,V_entitled
T@"<SCLSuppressSchoolModeAssertionClientDelegate>",W,N,V_delegate
T@"NSXPCConnection",R,N,V_connection
initWithScheduleTime:
TQ,R,N,V_hour
TQ,R,N,V_minute
T@"NSDateComponents",R,C,N
_initWithContactIdentifier:type:value:
_contactIdentifier
_value
T@"NSString",R,N,V_contactIdentifier
T@"NSString",R,N,V_value
setContactIdentifier:
setValue:
clientProxyDidInvalidate:
appendInt:withName:
clientProxy:didConnectWithPairingID:
serverSettings
validateBooleanEntitlement:error:
validatePairing:
coordinator
remoteClient
remoteObjectProxy
sendServerSettings:
_coordinator
T@"NSUUID",&,V_pairingID
T@"NSString",C,V_identifier
T@"SCLSchoolModeCoordinator",W,V_coordinator
T@"<SCLSchoolModeClientProxyDelegate>",W,N,V_delegate
workloop
managesSchoolTimeSession
getAllDevicesWithArchivedAltAccountDevicesMatching:
coordinatorMap
descriptionBuilderForNRDevice:
appendArraySection:withName:skipIfEmpty:objectTransformer:
appendBool:withName:
supppressionManager
interruptBehaviorResolver
loadPairedDevices
_updateActivityRegistration
handleDevicePairedNotification:
handleDeviceUnpairedNotification:
eligiblePairedDevices
createControllerForDevice:
isEligibleDevice:
allowsNonTinkerPairing
fileURLWithPath:
devices
userInfo
removeCoordinator:
keyEnumerator
setWithArray:
activityCriteria
_handleActivityStarted:
_supppressionManager
_interruptBehaviorResolver
_coordinatorMap
T@"SCLSchoolModeManagerConfiguration",R,N,V_configuration
T@"SCLTransportService",R,N,V_transportService
T@"NSXPCListener",R,N,V_listener
T@"SCLSuppressSchoolModeAssertionManager",R,N,V_supppressionManager
T@"SCLInterruptBehaviorResolver",R,N,V_interruptBehaviorResolver
T@"NSMapTable",R,N,V_coordinatorMap
_managesSchoolTimeSession
_allowsNonTinkerPairing
_workloop
T@"NRPairedDeviceRegistry",&,N,V_deviceRegistry
T@"IDSService",&,N,V_service
TB,N,V_managesSchoolTimeSession
TB,N,V_allowsNonTinkerPairing
T@"NSObject<OS_dispatch_workloop>",&,N,V_workloop
eligibility
_event
_eligibility
T@"SCLInterruptEvent",R,N,V_event
TQ,R,N,V_eligibility
setClass:forSelector:argumentIndex:ofReply:
syncStatus
removeLastObject
setSyncStatus:
_recoveryHistory
_syncStatus
_messageIdentifier
_error
TQ,N,V_syncStatus
T@"NSString",C,N,V_messageIdentifier
T@"NSError",&,N,V_error
_isRelevantMessage:
setContext:
_context
_errorHandler
_syncedState
_pendingSendState
_sendingState
_sentState
_failedState
T@"<SCLSettingsSyncStateMachineDelegate>",W,N,V_delegate
T@"SCLSettingsSyncContext",&,N,V_context
T@"SCLSettingsSyncErrorHandler",R,N,V_errorHandler
T@"SCLSettingsSyncState",R,N,V_currentState
T@"SCLSettingsSyncState",R,N,V_syncedState
T@"SCLSettingsSyncState",R,N,V_pendingSendState
T@"SCLSettingsSyncState",R,N,V_sendingState
T@"SCLSettingsSyncState",R,N,V_sentState
T@"SCLSettingsSyncState",R,N,V_failedState
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
Vv40@0:8@16@24@?32
Vv40@0:8@"SCLInterruptEvent"16@"NSString"24@?<v@?@"SCLInterruptEventBehavior"@"NSError">32
@32@0:8Q16q24
q16@0:8
@32@0:8@16@24
Q24@0:8@16
@24@0:8^{_NSZone=}16
v24@0:8d16
v20@0:8B16
v20@0:8I16
v24@0:8@16
d16@0:8
I16@0:8
v16@0:8
@"NSString"
{?="duration"b1"startTimeIntervalSinceReferenceDate"b1"scheduleEndHour"b1"scheduleEndMinute"b1"scheduleStartHour"b1"scheduleStartMinute"b1}
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16q24
@"SCLTimeInterval"
B32@0:8@16@24
@?16@0:8
Vv24@0:8@16
Vv24@0:8@"SCLSchoolModeServerSettings"16
v32@0:8@16@?24
v28@0:8B16@?20
v24@0:8@?16
@24@0:8@?16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"SCLSchoolModeServerSettings"
@"<SCLSchoolModeXPCClientDelegate>"
@"NSXPCConnection"
@"SCLSchoolModeConfiguration"
@24@0:8Q16
@"NSMutableArray"
{?="version"b1"isEnabled"b1}
@"SCLScheduleTime"
v24@0:8q16
v32@0:8@16@24
@"SCLSettingsSyncStateMachine"
@24@0:8q16
@"NSCalendar"
@"NSDate"
@48@0:8@16@24@32@40
@40@0:8@16@24@32
@"SCLSchedule"
@"NSLocale"
@"SCLTimeIntervalsFormatter"
@"NSListFormatter"
@"NSDateFormatter"
@"NSDateIntervalFormatter"
@"NSArray"
v24@0:8Q16
@"SCLScheduleIntervalFormatter"
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v68@0:8@16@24@32@40q48@56B64
v76@0:8@16@24@32@40q48@56B64@68
v72@0:8@16@24@32@40@48@56@64
v48@0:8@16@24d32@40
v32@0:8@16q24
v68@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40q48@"NSError"56B64
v76@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40q48@"NSError"56B64@"IDSMessageContext"68
v72@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@"NSArray"48@"NSArray"56@"NSDictionary"64
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@48
v48@0:8@"IDSService"16@"NSString"24d32@"NSError"40
v48@0:8@"IDSService"16@"NSString"24@"NSString"32@"NSString"40
v32@0:8@"IDSService"16q24
B56@0:8@16@24@32^@40^@48
@"IDSService"
@"NSHashTable"
@"NSObject<OS_dispatch_queue>"
B24@0:8o^@16
@"NSUUID"
v40@0:8@"SCLSchoolModeXPCClient"16@"SCLState"24@"SCLState"32
v32@0:8@"SCLSchoolModeXPCClient"16@"SCLScheduleSettings"24
v24@0:8@"SCLSchoolModeXPCClient"16
@"SCLSchoolModeXPCClient"
@"NSXPCListenerEndpoint"
@"<SCLSchoolModeDelegate>"
@56@0:8@16@24@32@40@48
@"NSDateInterval"
@"NSTimeZone"
@"SCLScheduleRecurrence"
v24@0:8@"NSCalendar"16
v24@0:8@"NSDate"16
v24@0:8@"SCLScheduleSettings"16
@"SCLScheduleSettings"
@28@0:8@?16B24
@"<SCLSchedulingEngineDelegate>"
@"SCLState"
@"SCLSchedulingParameters"
@"SCLInterruptEventBehavior"
v48@0:8@"SCLSchedulingEngine"16@"SCLState"24@"SCLState"32@"NSDate"40
v32@0:8@16Q24
v32@0:8@"SCLSuppressSchoolModeAssertionManager"16Q24
v28@0:8@16B24
i16@0:8
v20@0:8i16
@"SCLSuppressSchoolModeAssertionManager"
@"SCLSchoolModeWakeScheduler"
@"SCLSchedulingEngine"
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_os_transaction>"
@32@0:8@16o^@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@"SCLSchoolModeServer"16@"SCLState"24@"SCLState"32
B40@0:8@16@24@32
@"NSXPCListener"
@"CNContactStore"
B24@0:8q16
B40@0:8@16^@24^@32
B40@0:8@"SCLScheduleSettings"16^@24^@32
v44@0:8@16@24B32@36
v28@0:8@16i24
@"NRDevice"
@"NRPairedDeviceRegistry"
@"SCLTransportService"
@"<SCLTransportControllerDelegate>"
@"SCLSettingsSyncCoordinator"
@32@0:8Q16B24B28
@28@0:8B16B20B24
@"SCLPBScheduleSettings"
@20@0:8i16
i24@0:8@16
@"SCLPBTimeInterval"
{?="day"b1}
v36@0:8@16@24B32
v32@0:8@"SCLTransportController"16@"SCLUnlockHistoryItem"24
v36@0:8@"SCLTransportController"16@"SCLScheduleSettings"24B32
@"SCLScheduleSettings"24@0:8@"SCLTransportController"16
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}24@0:8^{os_state_hints_s=I*II}16
B32@0:8@16^@24
B36@0:8@16B24^@28
@"SCLSchoolModeCoordinatorConfiguration"
@"NSMutableSet"
@"NSURL"
@"SCLUnlockHistoryItem"
@"SCLPersistentSettings"
@"SCLActiveDurationAnalyticsSource"
@"IDSDevice"
@"SCLTransportController"
@"SCLSchoolModeServer"
@"SCLUnlockHistoryPersistentStore"
@"SCLPBScheduleTime"
Vv40@0:8@"NSString"16@"NSUUID"24@?<v@?B@"NSError">32
@"NSBundle"
@"SCLSchoolModeManager"
Q24@0:8Q16
{mach_timebase_info=II}16@0:8
{mach_timebase_info="numer"I"denom"I}
B24@0:8^@16
@"NSPersistentContainer"
@"NSManagedObjectContext"
@40@0:8Q16Q24@32
@"SCLContact"
@"NSMutableDictionary"
v40@0:8@16@24q32
v32@0:8@16d24
v24@0:8@"SCLSettingsSyncStateMachine"16
v32@0:8@"SCLSettingsSyncStateMachine"16@"NSObject<OS_xpc_object>"24
v32@0:8@"SCLSettingsSyncStateMachine"16d24
v40@0:8@"SCLSettingsSyncStateMachine"16@"SCLSettingsSyncState"24@"SCLSettingsSyncState"32
v36@0:8@16B24@28
@"<SCLSettingsSyncTransport>"
@32@0:8@16Q24
@"NSError"
{?="hour"b1"minute"b1}
v24@0:8@"SCLSuppressSchoolModeAssertionClient"16
@"<SCLSuppressSchoolModeAssertionClientDelegate>"
@32@0:8Q16Q24
q24@0:8@16
@40@0:8@16Q24@32
Vv32@0:8@16@?24
Vv28@0:8B16@?20
Vv24@0:8@?16
Vv40@0:8@"NSUUID"16@"NSString"24@?<v@?@"SCLSchoolModeServerSettings"@"NSError">32
Vv32@0:8@"SCLScheduleSettings"16@?<v@?B@"NSError">24
Vv28@0:8B16@?<v@?B@"NSError">20
Vv24@0:8@?<v@?@"NSArray"@"NSError">16
Vv32@0:8@"SCLUnlockHistoryItem"16@?<v@?B@"NSError">24
Vv24@0:8@?<v@?B@"NSError">16
@"SCLSchoolModeCoordinator"
@"<SCLSchoolModeClientProxyDelegate>"
v32@0:8@"SCLSchoolModeClientProxy"16@"NSUUID"24
v24@0:8@"SCLSchoolModeClientProxy"16
@"SCLSchoolModeManagerConfiguration"
@"SCLInterruptBehaviorResolver"
@"NSMapTable"
@"NSObject<OS_dispatch_workloop>"
@"SCLInterruptEvent"
@"<SCLSettingsSyncStateMachineDelegate>"
@"SCLSettingsSyncContext"
@"SCLSettingsSyncErrorHandler"
@"SCLSettingsSyncState"
