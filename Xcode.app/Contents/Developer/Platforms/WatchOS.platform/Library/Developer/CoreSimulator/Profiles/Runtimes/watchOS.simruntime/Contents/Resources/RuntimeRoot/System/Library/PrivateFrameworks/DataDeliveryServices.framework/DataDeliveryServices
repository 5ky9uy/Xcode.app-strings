@(#)PROGRAM:DataDeliveryServices  PROJECT:DataDeliveryServices-1
com.apple.DataDeliveryServices.AssetService
com.apple.DataDeliveryServices.ddsserver.queue
v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
delegate
T@"<DDSManagingDelegate>",&,N
manager
T@"<DDSManaging>",R,N,V_manager
listener
T@"NSXPCListener",R,N,V_listener
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
clientConnections
T@"NSMutableSet",R,N,V_clientConnections
_ContentVersion
_CompatibilityVersion
_UnarchivedSize
AssetLocale
Locale
AssetRegion
Province
Country
City
ContentType
AssetType
com.apple.DataDeliveryServices.DDSAssetQueryResultCache
assetsByQueryCache
T@"NSCache",&,N,V_assetsByQueryCache
com.apple.MobileAsset.LinguisticData
com.apple.DataDeliveryServices.ddsassetcenter.queue
v16@?0@"NSSet"8
v24@?0@"<DDSAssetCenterDelegate>"8^B16
provider
T@"<DDSAssetProviding>",R,N,V_provider
managerInterface
T@"<DDSManaging>",R,N,V_managerInterface
delegates
T@"NSMutableSet",R,N,V_delegates
assetObserver
T@"<DDSAssetObserving>",R,N,V_assetObserver
v32@?0@"NSString"8@"NSMutableSet"16^B24
Keyboards
DataDeliveryServices
apple-internal-install
BuildVersion
yyyy-MM-dd_HH:mm:ss
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSString"16^B24
<filter: %@>
<redacted>
v32@?0@8@16^B24
supportsSecureCoding
TB,R
filters
T@"NSMutableDictionary",&,N,V_filters
B16@?0@"NSDictionary"8
ContentPath
<%@: %p, type: %@, path: %@>
parentAsset
T@"DDSAsset",&,N,V_parentAsset
contents
T@"NSDictionary",&,N,V_contents
path
T@"NSURL",R,N
region
T@"NSDictionary",R,N
type
T@"NSString",R,N
fileName
locale
__InstallDate
%@::%@
%@-%@
%@ : %@, 
<%@: %p, %@>
maAsset
T@"MAAsset",&,N,V_maAsset
debuggingID
T@"NSString",&,N,V_debuggingID
uniqueIdentifier
T@"NSString",&,N,V_uniqueIdentifier
attributes
T@"NSDictionary",R,N,V_attributes
compatibilityVersion
TQ,R,N
contentVersion
localURL
T@"NSURL",R,N,V_localURL
assetState
TQ,R,N,V_assetState
dataType
T@"NSString",R,N,V_dataType
assetType
T@"NSString",R,N,V_assetType
installDate
shortName
assetUUID
v16@?0@?<v@?q>8
schedulerByIdentifier
T@"NSMutableDictionary",&,N,V_schedulerByIdentifier
T@"<DDSBackgroundActivitySchedulerDelegate>",&,N,V_delegate
com.apple.DataDeliveryServices
v24@?0@"DDSAssertDescriptor"8^B16
<%@: %p, query: %@, policy: %@>
descriptors
T@"NSMutableSet",&,N,V_descriptors
lastUpdated
T@"NSDate",&,N,V_lastUpdated
query
T@"DDSAssetQuery",R,N,V_query
policy
T@"DDSAssetPolicy",R,N
assertionIdentifiers
T@"NSSet",R,N
clientIdentifiers
timerOverrideDuration
com.apple.DataDeliveryServices.update
com.apple.DataDeliveryServices.retry
MetadataSyncState
Date
Status
AttemptCount
-[DDSRemoteSyncState loadState]
/Library/Caches/com.apple.xbs/Sources/DataDeliveryServices_Sim/DataDeliveryServices-30/Sources/DDSRemoteSyncState.m
[date isKindOfClass:[NSDate class]]
[buildVersion isKindOfClass:[NSString class]]
date
T@"NSDate",&,N,V_date
syncStatus
Tq,N,V_syncStatus
attemptCount
TQ,N,V_attemptCount
buildVersion
T@"NSString",&,N,V_buildVersion
scheduler
T@"DDSBackgroundActivityScheduler",&,N,V_scheduler
T@"<DDSRemoteSyncStateDelegate>",W,N,V_delegate
Contents
Required
Optional
Delta
Language
Script
InputLayout
ContactLabel
Home
Work
Lexicon
LexiconDelta
Phrases
LanguageModel
LanguageModelDelta
SpellChecker
SpellCheckerDelta
com.apple.DataDeliveryServices.DDSAssetQuery
<query: %@, locO: %d, iO: %d, latO: %d, %@>
%@-%d-%d-%d-%@
filter
T@"DDSAttributeFilter",R,N,V_filter
cacheKey
localOnly
TB,N,V_localOnly
installedOnly
TB,N,V_installedOnly
latestOnly
TB,N,V_latestOnly
cachedOnly
TB,N,V_cachedOnly
com.apple.DataDeliveryServices.ddsinterface.queue
v16@?0@"NSError"8
serverOverride
T@"<DDSManaging>",&,N,V_serverOverride
remoteServer
T@"NSXPCConnection",&,N,V_remoteServer
sharedInstance
T@"DDSInterface",R,N,V_sharedInstance
mDelegate
T@"<DDSManagingDelegate>",&,N,V_mDelegate
connectionUsageQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_connectionUsageQueue
T@"<DDSManagingDelegate>",&,N,V_delegate
Default
Query
Update
com.apple.keyboard.dataDeliveryServices.
assetDownload
updateCycle
aggDuration
duration
retries
success
process
assetName
UpdateCatalogAnalytic
com.apple.DataDeliveryServices.DDSAnalytics
@"NSMutableDictionary"8@?0
/var/tmp/dds_dump_%@.log
Installed Assets:
%@ (%lu)
In Progress:
%@, (start: %@, state: %@ retries: %lu)
v32@?0@"NSString"8@"DDSTimedAnalytic"16^B24
v32@?0@"NSNumber"8Q16^B24
BcsilqCSILQ
None
Requested
Retried
Completed
Failed
analyticByIdentifier
T@"NSMutableDictionary",R,N,V_analyticByIdentifier
analyticQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_analyticQueue
.dds.assets-updated
T@"<DDSAssetObservingDelegate>",W,N,V_delegate
typesToObserve
T@"NSSet",&,N,V_typesToObserve
+[DDSMobileAssetv1PredicateAdapter predicateForQuery:compatibilityVersion:internalInstall:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/DataDeliveryServices_Sim/DataDeliveryServices-30/Sources/DDSMobileAssetv1PredicateAdapter.m
[allowedValues.anyObject isKindOfClass:NSString.class] || [allowedValues.anyObject isKindOfClass:NSDictionary.class]
%K == %@
%K == %@ || %K == %@
%K ==[c] %@
%K == nil
SUBQUERY(%K.@allValues, $x, $x != '').@count == 0
%@.%@
%K != nil
T@"DDSLinguisticAttributeFilter",R,N
TQ,N,V_retries
TB,N,V_success
startTime
Td,N,V_startTime
endTime
Td,N,V_endTime
lastAction
Ti,N,V_lastAction
identifier
T@"NSString",R,N,V_identifier
durationInSec
<%@: %p, pdf: %ld, doc: %d, dwp: %d>
idleUsageEvictionPeriod
T@"NSDateComponents",&,N,V_idleUsageEvictionPeriod
preferredDownloadFrequency
Tq,N,V_preferredDownloadFrequency
downloadOverCellular
TB,N,V_downloadOverCellular
downloadWithoutPower
TB,N,V_downloadWithoutPower
notificationDownloadTriggers
T@"NSSet",C,N,V_notificationDownloadTriggers
downloadCompletionNotification
T@"NSString",C,N,V_downloadCompletionNotification
asset
T@"DDSAsset",&,N,V_asset
MobileAssetProperties
com.apple.DataDeliveryServices.DDSMobileAssetv2Provider
-[DDSMobileAssetv2Provider performAssetsForQuery:errorPtr:]
/Library/Caches/com.apple.xbs/Sources/DataDeliveryServices_Sim/DataDeliveryServices-30/Sources/DDSMobileAssetv2Provider.m
[allowedRegions isKindOfClass:NSArray.class]
[allowedRegion isKindOfClass:NSDictionary.class]
Error updating assertions
message
v24@?0@"DDSAssertion"8@"NSError"16
Error downloading asset: %@
v24@?0@"DDSAsset"8Q16
v16@?0@"MAProgressNotification"8
v16@?0q8
Success
Fail
Error updating catalog for %@: %lu
v24@?0@"DDSAssertion"8^B16
Info.plist
T@"<DDSAssetProvidingDelegate>",&,N
remainingAssetsByQueryId
T@"NSMutableDictionary",R,N,V_remainingAssetsByQueryId
encounteredAssertionUpdateError
TB,N,V_encounteredAssertionUpdateError
assetQueryResultsCache
T@"<DDSAssetQueryResultCaching>",&,N,V_assetQueryResultsCache
downloadStateByAssetID
T@"NSMutableDictionary",&,N,V_downloadStateByAssetID
T@"<DDSAssetProvidingDelegate>",&,N,Vdelegate
/System/Library/LinguisticData
<%@ %p: aID: %@ cID: %@>
clientIdentifier
T@"NSString",&,N,V_clientIdentifier
assertionIdentifier
T@"NSString",&,N,V_assertionIdentifier
T@"DDSAssetPolicy",&,N,V_policy
/Library/DataDeliveryServices/
ddsassertiondata.plist
com.apple.DataDeliveryServices.DDSAssertionTracker
T@"<DDSAssetTrackingDelegate>",&,N
trackedAssertions
T@"NSMutableArray",R,N,V_trackedAssertions
trackedAssertionSets
T@"NSMutableDictionary",R,N,V_trackedAssertionSets
dataHandler
T@"<DDSAssertionDataHandling>",R,N,V_dataHandler
T@"<DDSAssetTrackingDelegate>",&,N,V_delegate
com.apple.DataDeliveryServices.DDSManager.UpdateCycle
tracker
T@"<DDSAssetTracking>",R,N,V_tracker
timer
T@"DDSScheduledTimer",R,N,V_timer
remoteSyncState
T@"DDSRemoteSyncState",R,N,V_remoteSyncState
pendingAssertionsToUpdate
T@"NSMutableSet",&,N,V_pendingAssertionsToUpdate
pendingAssertionsQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_pendingAssertionsQueue
Server shouldAcceptNewConnection: (%{public}@)
Client connection invalidated: %{public}@
Client connection interrupted: %{public}@
Asked to clear cache...
Cache will evict: %{public}@
Adding AssetCenter delegate: %{public}@
Removing AssetCenter delegate: %{public}@
Returning assertions: (%{public}@) for clientID: (%{public}@)
Found assertions: (%{public}@) for clientID: (%{public}@)
Letting delegates know assets updated: %{public}@
Setting setDoNotBlockOnNetworkStatus to YES
WARNING: The version of DataDeliveryServices in this build does not set doNotBlockOnNetworkStatusSetter=YES, possibly resulting in hangs.
No values specified for key (%{public}@)
Skipping key: %{public}@ values: %{public}@ (is this the region dict? that's handled elsewhere)
Unexpected failure adding key (%{public}@)/value (%{public}@) pair
Error decoding object for key %{public}@
Delay: %ld Now: %{public}@ Future: %{public}@
Scheduling activity: %{public}@ for approximately %{public}@ (tolerance of %ld seconds)
Scheduled activity %{public}@ fired!
Descriptor with assertion id: %{public}@ already added.
Error decoding descriptors: (%{public}@)
Retry already scheduled
Sync failed, giving up for today
Requesting retry...
Loaded sync state (date: %{public}@, buildVersion: %{public}@, attempts: %{public}lu, status: %{public}lu)
Saving sync state (date: %{public}@, buildVersion: %{public}@, attempts: %{public}lu, status: %{public}lu
XPC connection to server invalidated.
XPC connection to server interrupted.
Using 0 NSXPCConnectionOptions for macOS connection
Error creating proxy (%{public}@)
Error creating sync proxy (%{public}@)
Using test local server
Interface is using remote server: (%{public}@)
Interface is using sync remote server: (%{public}@)
Cancel recording asset analytic for %@
Record asset action: %{public}@ for %{public}@
Report asset download analytic: %{public}@
Report update catalog analytic: %{public}@
Dumping: 
%{public}@
End observing types: %@
Observed asset change notification: %@, type: %@
Unexpected nil AssetObserver in CFNotification callback
Unexpected dealloc for asset observer
Unexpected type of value: %@
Compatibility predicate: %@
Error decoding %{public}@ (%{public}@)
assets query: %@
assetsForQuery: %{public}@ final result: %{public}@ was cached: %d
Error for queryMetaDataSync: %{public}lu
assetsForQuery raw results: %{public}@, result value: %{public}lu
Searching for regions in filters: %@, found allowed regions: %@
Found asset region: %{private}@ didMatch: %d
Begin download for %lu assertions
Encountered error: %{public}@
Downloading assertions remaining: %lu
Begin download for assertion: %{public}@
Unexpected installedOnly/localOnly YES value on assertion's query: %@.  Are you really, really sure you meant that?
Downloading assets %{public}@
handling asset: %{public}@, state: %ld
Remaining: %ld in set: %{public}@
Unexpected error downloading asset %{public}@, result: %ld
Updating catalog for LinguisticData...
Updated catalog result %{public}@ (result: %lu)
%{public}@
Error removing assets (%{public}@) for query: %{public}@
Removing old assets for assertions: %{public}@
All assets eligible for removal: %{public}@
Latest assets not eligible for removal: %{public}@
Removing assets: %{public}@
Purged asset (%{public}@) successfully
Failed to purged asset (%{public}@) with result: %lu
didCompleteDownloadForAssertion: %{public}@
didUpdateCatalogWithError: %{public}@
Supported compatibility version = %ld
Error (%{public}@) unarchiving assertion content
Error (%{public}@) loading assertion data (%{public}@).  Though, this is expected if the file doesn't exist yet.
Saved assertion data to URL: (%{public}@)
Error (%{public}@) writing content: %{public}@
Error (%{public}@) archiving content at URL: %{public}@
Creating directory at URL: %{public}@, success: %d
Error (%{public}@) creating directory at path %{public}@
Verified the DDS folder is present at %{public}@
Add assertion (%{public}@) with id (%{public}@) for client (%{public}@)
Remove assertion with id: %{public}@
Removed descriptor id: %{public}@
Removing assertion: %{public}@
Descriptors: %{public}@
Calling delegate to remove assertion: %{public}@
Setting last updated for assertion (%{public}@) set to (%{public}@)
Beginning update cycle (forced %d, discretionary %d)...
Updating catalog for asset types: %{public}@
Cycle will force update all assertions: %{public}@
Cycle will update pending assertions: %{public}@
Cycle will update time eligible assertions: %{public}@
Update cycle already triggered, holding with pending assertions...
Add assertion for query: %{public}@ policy: (%{public}@) assertionID: (%{public}@) clientID: (%{public}@)
Remove assertion with ID: (%{public}@)
For clientID (%{public}@), found assertion IDs (%{public}@)
Handle new assertions: %{public}@
Asked to remove assertions: %{public}@, will let garbage collection collect.
Download state: %{public}lu for asset: %{public}@
Completed download for assertion (%{public}@) with error: %{public}@
Completed download for assertions (%{public}@) with error: %{public}@
Calling didEndUpdateCycle
didUpdateCatalogWithError with error: %{public}@
Begin update cycle requested...
Retry update cycle requested...
Update cycled ended with error: %{public}@
Begin cycle for missed/remaining pending assertions...
Asset log dump requested!
Unexpected error dumping assets: %{public}@
Asset update requested via ddsutil
Requesting clean v1 LinguisticData repository
Finished clean v1 LinguisticData repository
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
DDSManaging
NSObject
DDSServer
NSXPCListenerDelegate
DDSLinguisticAttributeFilter
DDSAssetQueryResultCache
NSCacheDelegate
DDSAssetQueryResultCaching
DDSAssetCenter
DDSManagingDelegate
DDSAssetObservingDelegate
DDSMobileAssetv2QueryAdapter
DDSAttributeFilter
NSSecureCoding
NSCoding
DDSContentItemMatcher
DDSContentItem
DDSAsset
DDSBackgroundActivityScheduler
DDSAssertion
NSCopying
DDSRemoteSyncState
DDSBackgroundActivitySchedulerDelegate
DDSAssetQuery
DDSInterface
DDSAnalytics
DDSAssetObserver
DDSAssetObserving
DDSMobileAssetv1PredicateAdapter
DDSLinguisticAssetQuery
DDSTimedAnalytic
DDSAssetPolicy
DDSAssetDownloadAnalytic
DDSMobileAssetv2Provider
DDSAssetProviding
DDSAssertDescriptor
DDSAssertionDataHandler
DDSAssertionDataHandling
DDSAssertionTracker
DDSAssetTracking
DDSManager
DDSAssetProvidingDelegate
DDSAssetTrackingDelegate
DDSRemoteSyncStateDelegate
initWithManager:
init
setDelegate:
cStringUsingEncoding:
initWithMachServiceName:
_setQueue:
resume
manager
setExportedObject:
interface
setExportedInterface:
setRemoteObjectInterface:
queue
handleEndedConnection:
setInvalidationHandler:
setInterruptionHandler:
clientConnections
addObject:
removeObject:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
addAssertionForQuery:policy:assertionID:clientID:
removeAssertionWithID:
assertionIDsForClientID:reply:
triggerDump
triggerUpdate
delegate
interfaceWithProtocol:
arrayWithObjects:count:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
setClass:forSelector:argumentIndex:ofReply:
invalidate
dealloc
sharedInstance
listener:shouldAcceptNewConnection:
listener
.cxx_destruct
_manager
_listener
_queue
_clientConnections
addAllowedValue:forKey:
setObject:forKeyedSubscript:
addContentType:
addContentItemLocale:
addAssetLocale:
addRegionWithCountry:province:city:
setCountLimit:
assetsByQueryCache
cacheKey
objectForKey:
setObject:forKey:
removeAllObjects
cache:willEvictObject:
cachedAssetsForQuery:
cacheAssets:forQuery:
clearCache
setAssetsByQueryCache:
_assetsByQueryCache
initWithProvider:managerInterface:
setWithObject:
observeAssetTypes:
delegates
provider
assetsForQuery:errorPtr:
allContentItemsMatchingQuery:error:
contentItemsFromAssets:matchingFilter:
managerInterface
serverDidUpdateAssetsWithType:
didUpdateAssetsWithType:
enumerateObjectsUsingBlock:
registerDelegate:
unregisterDelegate:
assetsForQuery:error:
addAssertionForAssetsWithQuery:policy:assertionID:clientID:
removeAssertionWithIdentifier:
assertionIDsForClientID:
assetObserver
_provider
_managerInterface
_delegates
_assetObserver
assetType
initWithType:
setDoNotBlockBeforeFirstUnlock:
setDoNotBlockOnNetworkStatus:
filter
filters
anyObject
count
allObjects
firstObject
isEqualToString:
addKeyValueNull:
addKeyValuePair:with:
mutableCopy
addKeyValueArray:with:
enumerateKeysAndObjectsUsingBlock:
stringFromInteger:
stringWithFormat:
maAssetQueryForddsAssetQuery:compatiblilityVersion:internalInstall:
systemLocale
setLocale:
setDateFormat:
stringFromDate:
initWithDictionary:
addAllowedValues:forKey:
enumerateAllowedValuesAndKeys:
dictionary
containsObject:
allowedValuesForKey:
_setForKey:
unionSet:
minusSet:
encodeObject:forKey:
decodeTopLevelObjectOfClasses:forKey:error:
isEqualToQueryFilter:
hashObject:
hashDictionary:
hashSet:
countByEnumeratingWithState:objects:count:
attributeFilter
attributeFilterWithDictionary:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
addEntriesFromFilter:
entriesMatchingAttributes:
doesContainAttributes:
removeAllowedValue:forKey:
removeAllowedValues:forKey:
setFilters:
_filters
attributes
array
objectForKeyedSubscript:
shouldLenientlyMatchWithContentItemsForRegion:
_anyStringIn:matches:acceptUnspecifiedValue:
_anyDictionaryIn:matches:shouldLenientlyMatch:
initWithParentAsset:contents:
length
caseInsensitiveCompare:
_string:matches:acceptUnspecifiedValue:
allKeys
_dictionary:matches:acceptUnspecifiedAttribute:lenientMatch:
assetContentItemsMatching:contentItems:parentAsset:
contents
parentAsset
localURL
URLByAppendingPathComponent:
isEqualToContentItem:
path
fileName
type
locale
region
setParentAsset:
setContents:
_parentAsset
_contents
setMaAsset:
copy
getLocalUrl
addEntriesFromDictionary:
unsignedIntegerValue
stringValue
maAsset
uniqueIdentifierForMAAsset:
assetUUID
uniqueIdentifier
shortName
stringByAppendingString:
stringByAppendingFormat:
pathComponents
objectAtIndexedSubscript:
string
appendString:
appendFormat:
debuggingID
isEqualToAsset:
asset
assetWithMAAsset:
debuggingIDsForAssets:
_mergeAttributes:
compatibilityVersion
contentVersion
installDate
assetState
dataType
setDebuggingID:
setUniqueIdentifier:
_attributes
_localURL
_assetState
_dataType
_assetType
_maAsset
_debuggingID
_uniqueIdentifier
setSchedulerByIdentifier:
date
dateByAddingTimeInterval:
initWithIdentifier:
setQualityOfService:
setRepeats:
setDelay:
setTolerance:
_setAdditionalXPCActivityProperties:
schedulerByIdentifier
performScheduledActivityWithIdentifier:
removeObjectForKey:
scheduleWithBlock:
scheduleActivityWithIdentifier:interval:tolerance:
cancelActivityWithIdentifier:
_delegate
_schedulerByIdentifier
descriptors
assertionIdentifier
clientIdentifier
initWithPolicy:assertionID:clientID:
invalidateDescription
setPreferredDownloadFrequency:
policy
downloadWithoutPower
setDownloadWithoutPower:
downloadOverCellular
setDownloadOverCellular:
preferredDownloadFrequency
query
decodeObjectOfClass:forKey:
lastUpdated
allocWithZone:
initWithQuery:
setDescriptors:
setLastUpdated:
isEqualToAssertion:
isEqualToDate:
copyWithZone:
addDescriptorWithAssertionID:clientID:policy:
clientIdentifiers
assertionIdentifiers
removeDescriptorWithClientID:
removeDescriptorWithAssertionID:
_description
_lastUpdated
_query
_descriptors
setScheduler:
scheduler
loadState
shouldInitiateRegularUpdateCycle
requestUpdate
scheduleRegularUpdate
timeBetweenSyncs
attemptCount
nextUpdateTimeIntervalForAttemptCount:
timeIntervalSinceNow
buildVersionString
buildVersion
syncStatus
setSyncStatus:
setAttemptCount:
scheduleRetry
setDate:
saveState
remoteSyncStateRequestsUpdate
remoteSyncStateRequestsRetry
resetState
requestRetry
earlierDate:
setBuildVersion:
integerValue
numberWithInteger:
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
calendarWithIdentifier:
components:fromDate:
dateFromComponents:
setDay:
setHour:
dateByAddingComponents:toDate:options:
timeIntervalSinceDate:
timeIntervalUntilNextRegularUpdate
beganUpdateCycle
completedUpdateCycleWithError:
_syncStatus
_date
_attemptCount
_buildVersion
_scheduler
initWithAssetType:filter:
initWithAssetType:filter:localOnly:installedOnly:latestOnly:cachedOnly:
localOnly
numberWithBool:
installedOnly
latestOnly
cachedOnly
boolValue
isEqualToAssetQuery:
setInstalledOnly:
setLocalOnly:
setLatestOnly:
setCachedOnly:
assetType:
_localOnly
_installedOnly
_latestOnly
_cachedOnly
_filter
cString
connectionUsageQueue
server
syncServer
xpcConnectionOptionsForServer
initWithMachServiceName:options:
teardownXPCConnection
createConnectionIfNecessary
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
serverOverride
serviceObjectProxy
syncServiceObjectProxy
setServerOverride:
remoteServer
setRemoteServer:
mDelegate
setMDelegate:
_serverOverride
_remoteServer
_sharedInstance
_mDelegate
_connectionUsageQueue
analyticQueue
analyticByIdentifier
stringForAction:
initWithAsset:
updateWithAction:
reportAssetDownloadAnalytic:
durationInSec
bucketForValue:fromBuckets:
roundNumber:toSignificantDigits:
success
processName
identifier
retries
initWithString:
startTime
initWithTimeIntervalSince1970:
lastAction
writeToFile:atomically:encoding:error:
compare:
isInteger:
doubleValue
numberWithInt:
numberWithDouble:
intValue
objCType
processInfo
cancelRecordingForAsset:
recordAssetAction:forAsset:
recordUpdateCycleState:
reportUpdateCycleAnalytic:
dumpAssetLogWithInstalledAssets:
_analyticByIdentifier
_analyticQueue
beginObservingTypes:
stringByReplacingOccurrencesOfString:withString:
typesToObserve
endObservingTypes:
notifyObserversAssetsUpdatedForType:
setTypesToObserve:
_typesToObserve
predicateForQuery:compatibilityVersion:internalInstall:
predicateForKey:matchingAnyStringIn:
predicateForKey:matchingAnyDictionaryIn:acceptUnspecifiedValue:acceptUnspecifiedAttribute:lenientMatch:
compatibilityPredicateForCompatabilityVersion:internalInstall:
andPredicateWithSubpredicates:
regionKeys
setWithObjects:
predicateWithFormat:
numberWithUnsignedLong:
predicateWithValue:
orPredicateWithSubpredicates:
arrayByAddingObject:
predicateForKey:matchingString:
predicateForAssetQuery:compatiblilityVersion:
extractRegionDictFromFilter:
localeWithLocaleIdentifier:
languageCode
initWithLanguageIdentifier:
setLastAction:
timeIntervalSince1970
setStartTime:
setRetries:
setSuccess:
setEndTime:
endTime
_success
_lastAction
_identifier
_retries
_startTime
_endTime
downloadCompletionNotification
idleUsageEvictionPeriod
notificationDownloadTriggers
isEqualToAssetPolicy:
assetPolicy
setNotificationDownloadTriggers:
setDownloadCompletionNotification:
setIdleUsageEvictionPeriod:
_downloadOverCellular
_downloadWithoutPower
_preferredDownloadFrequency
_notificationDownloadTriggers
_downloadCompletionNotification
_idleUsageEvictionPeriod
setAsset:
_asset
addObjectsFromArray:
assetQueryResultsCache
performAssetsForQuery:errorPtr:
supportedCompatibilityVersion
returnTypes:
queryMetaDataSync
results
shouldMatchAttributeValue:givenValue:
state
latestAssetsOnlyFromAssets:
setEncounteredAssertionUpdateError:
remainingAssetsByQueryId
encounteredAssertionUpdateError
errorWithDomain:code:userInfo:
didCompleteDownloadForAssertions:error:
beginDownloadForAssertion:discretionaryDownload:handler:
initWithArray:
didCompleteDownloadForAssertion:error:
beginDownloadForAssets:withPolicy:discretionaryDownload:error:handler:
isStalled
totalWritten
totalExpected
didChangeDownloadState:forAsset:
attachProgressCallBack:
downloadOptionsForPolicy:discretionaryDownload:
startDownload:then:
setAllowsCellularAccess:
setRequiresPowerPluggedIn:
setDiscretionary:
didUpdateCatalogWithError:
startCatalogDownload:options:then:
didBeginUpdateCatalog
latestBetweenAssetA:AssetB:
allValues
removeAssets:
purge:
downloadStateByAssetID
stringWithUTF8String:
stringByAppendingPathComponent:
defaultManager
fileExistsAtPath:
initWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
beginDownloadForAssertions:discretionaryDownload:
updateCatalogForAssetTypes:discretionaryDownload:withCompletion:
removeAssetsForAssertions:
removeOldAssetsForAssertions:
setAssetQueryResultsCache:
setDownloadStateByAssetID:
_encounteredAssertionUpdateError
_remainingAssetsByQueryId
_assetQueryResultsCache
_downloadStateByAssetID
isEqualToDescriptor:
setClientIdentifier:
setAssertionIdentifier:
setPolicy:
_clientIdentifier
_assertionIdentifier
_policy
assertionContentURL
dataWithContentsOfURL:options:error:
unarchivedObjectOfClasses:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToURL:options:error:
fileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
assertionContentDirectory
loadAssertionData
saveAssertionData:
initWithDataHandler:
trackedAssertions
assertionDueForUpdateFrom:SinceDate:
intervalForDownloadFrequency:
dataHandler
handleNewAssertions:
handleRemovedAssertions:
didUpdateAssertion:atDate:
assertionDueForUpdateSinceDate:
allAssertions
trackedAssetTypes
trackedAssertionSets
_trackedAssertions
_trackedAssertionSets
_dataHandler
initWithProvider:tracker:
deleteV1AssetsIfNecessary
remoteSyncState
didStartUpdateCycle
tracker
pendingAssertionsQueue
setPendingAssertionsToUpdate:
pendingAssertionsToUpdate
didEndUpdateCycleWithError:
beginUpdateCycleForced:discretionaryDownload:
willRetryUpdateCycle
timer
_tracker
_timer
_remoteSyncState
_pendingAssertionsToUpdate
_pendingAssertionsQueue
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16@24@32@40
v24@0:8@16
v32@0:8@16@?24
v16@0:8
v48@0:8@"DDSAssetQuery"16@"DDSAssetPolicy"24@"NSString"32@"NSString"40
v24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSSet">24
@"<DDSManagingDelegate>"16@0:8
v24@0:8@"<DDSManagingDelegate>"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
@"<DDSManaging>"
@"NSXPCListener"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
v40@0:8@16@24@32
v32@0:8@16@24
v32@0:8@"NSCache"16@24
@"NSArray"24@0:8@"DDSAssetQuery"16
v32@0:8@"NSArray"16@"DDSAssetQuery"24
@"NSCache"
@32@0:8@16@24
@32@0:8@16^@24
@"<DDSAssetProviding>"
@"<DDSAssetObserving>"
@36@0:8@16Q24B32
@24@0:8Q16
Q24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@?16
@"NSMutableDictionary"
@40@0:8@16@24@32
B36@0:8@16@24B32
B40@0:8@16@24B32B36
B40@0:8@16@24@?32
@"DDSAsset"
@"NSDictionary"
@"NSURL"
@"NSString"
@"MAAsset"
v40@0:8@16d24d32
@"<DDSBackgroundActivitySchedulerDelegate>"
@24@0:8^{_NSZone=}16
@"NSDate"
@"DDSAssetQuery"
d16@0:8
d24@0:8Q16
q16@0:8
v24@0:8q16
v24@0:8Q16
@"<DDSRemoteSyncStateDelegate>"
@"DDSBackgroundActivityScheduler"
@48@0:8@16@24B32B36B40B44
v20@0:8B16
@"DDSAttributeFilter"
@"<DDSManagingDelegate>"
@"NSXPCConnection"
@"DDSInterface"
v28@0:8i16@20
v20@0:8i16
@20@0:8i16
v24@0:8@"<DDSAssetObservingDelegate>"16
@"<DDSAssetObservingDelegate>"16@0:8
v24@0:8@"NSSet"16
@"<DDSAssetObservingDelegate>"
@"NSSet"
@32@0:8@16Q24
@28@0:8Q16B24
@44@0:8@16@24B32B36B40
v24@0:8d16
i16@0:8
@"NSDateComponents"
v28@0:8@16B24
v36@0:8@16B24@?28
v28@0:8@"NSSet"16B24
@"NSArray"32@0:8@"DDSAssetQuery"16^@24
@"NSArray"32@0:8@"NSArray"16@"DDSAttributeFilter"24
v36@0:8@"NSSet"16B24@?<v@?@"NSError">28
@"<DDSAssetProvidingDelegate>"16@0:8
v24@0:8@"<DDSAssetProvidingDelegate>"16
v52@0:8@16@24B32^@36@?44
@28@0:8@16B24
v32@0:8Q16@24
@"<DDSAssetProvidingDelegate>"
@"<DDSAssetQueryResultCaching>"
@"DDSAssetPolicy"
@"NSArray"16@0:8
v24@0:8@"NSArray"16
v32@0:8@"DDSAssertion"16@"NSDate"24
@"NSArray"24@0:8@"NSDate"16
@"NSSet"16@0:8
@"NSSet"24@0:8@"NSString"16
@"<DDSAssetTrackingDelegate>"16@0:8
v24@0:8@"<DDSAssetTrackingDelegate>"16
d24@0:8q16
@"<DDSAssetTrackingDelegate>"
@"NSMutableArray"
@"<DDSAssertionDataHandling>"
v24@0:8@"NSError"16
v32@0:8Q16@"DDSAsset"24
v32@0:8@"DDSAssertion"16@"NSError"24
v32@0:8@"NSSet"16@"NSError"24
v24@0:8B16B20
@"<DDSAssetTracking>"
@"DDSScheduledTimer"
@"DDSRemoteSyncState"
