@(#)PROGRAM:DataDeliveryServices  PROJECT:DataDeliveryServices-1
com.apple.DataDeliveryServices.AssetService
com.apple.DataDeliveryServices.ddsserver.queue
v8@?0
%s Server notifying clients of update for asset type: %@
-[DDSServer didUpdateAssetsWithType:]
%s Updating client (%@) of update for asset type: %@
-[DDSServer didUpdateAssetsWithType:]_block_invoke
v16@?0@"NSError"8
%s Server shouldAcceptNewConnection: (%@)
-[DDSServer listener:shouldAcceptNewConnection:]
%s Client connection invalidated: %@
-[DDSServer listener:shouldAcceptNewConnection:]_block_invoke
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
delegate
T@"<DDSManagingDelegate>",&,N
manager
T@"<DDSManaging>",R,N,V_manager
listener
T@"NSXPCListener",R,N,V_listener
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
clientConnections
T@"NSMutableSet",R,N,V_clientConnections
_ContentVersion
_CompatibilityVersion
_UnarchivedSize
AssetLocale
Locale
AssetRegion
Province
Country
City
ContentType
AssetType
MobileAssetProperties
Contents
com.apple.DataDeliveryServices.DDSMobileAssetv1Provider
-[DDSMobileAssetv1Provider updateCatalogForAssetTypes:withCompletion:]
%s Running query for assets (local=%@, predicate=%@)
-[DDSMobileAssetv1Provider runASQuery:installedAssetsOnly:latestAssetsOnly:error:]
%s Raw query results: %@
%s Final query results count: %lu
%s %@
-[DDSMobileAssetv1Provider allContentItemsMatchingQuery:error:]
%s Begin download for assertion: %@
-[DDSMobileAssetv1Provider beginDownloadForAssertion:withError:]
%s Downloading %ld assets
v24@?0@"DDSAssertion"8@"NSError"16
%s handling asset: %@, state: %ld
-[DDSMobileAssetv1Provider beginDownloadForAssertion:withError:]_block_invoke
%s Remaining: %ld, removing asset from set: %@
Error downloading asset: %@
message
v24@?0@"DDSAsset"8Q16
v24@?0@"NSDictionary"8@"NSError"16
Info.plist
%s Supported compatibility version = %ld
+[DDSMobileAssetv1Provider supportedCompatibilityVersion]_block_invoke
T@"<DDSAssetProvidingDelegate>",&,N
remainingAssetsByAssertion
T@"NSMutableDictionary",R,N,V_remainingAssetsByAssertion
T@"<DDSAssetProvidingDelegate>",&,N,V_delegate
/System/Library/LinguisticData
timerOverrideDuration
-[DDSScheduledTimerImpl initWithExpirationHandler:]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataDeliveryServices_Sim/DataDeliveryServices-2.11/Sources/DDSScheduledTimer.m
[NSThread isMainThread]
SignificantTimeChangeNotification
-[DDSScheduledTimerImpl dealloc]
-[DDSScheduledTimerImpl invalidate]
-[DDSScheduledTimerImpl assetTimerFired]
+[DDSScheduledTimerImpl nextFireDateForDate:]
[fireDate timeIntervalSinceDate:date] > 3 * 3600
[fireDate timeIntervalSinceDate:date] < 28 * 3600
-[DDSScheduledTimerImpl updateAssetTimer]
%s Next asset download date: %@
com.apple.DataDeliveryServices.ddsassetcenter.queue
%s Using MobileAssets v2... =)
+[DDSAssetCenter sharedInstance]_block_invoke
%s Using MobileAssets v1... =(
%s Adding AssetCenter delegate: %@
-[DDSAssetCenter registerDelegate:]_block_invoke
%s Removing AssetCenter delegate: %@
-[DDSAssetCenter unregisterDelegate:]_block_invoke
%s Returning assertions: (%@) for clientID: (%@)
-[DDSAssetCenter assertionIDsForClientID:]_block_invoke
v16@?0@"NSSet"8
%s Found assertions: (%@) for clientID: (%@)
-[DDSAssetCenter assertionIDsForClientID:]
%s AssetCenter notifying assets of update with type: %@
-[DDSAssetCenter didUpdateAssetsWithType:]
v24@?0@"<DDSAssetCenterDelegate>"8^B16
provider
T@"<DDSAssetProviding>",R,N,V_provider
managerInterface
T@"<DDSManaging>",R,N,V_managerInterface
delegates
T@"NSMutableSet",R,N,V_delegates
+[DDSMobileAssetv2QueryAdapter maAssetQueryForddsAssetQuery:compatiblilityVersion:internalInstall:]_block_invoke
%s Added key: %@, value: Unspecified
%s Added key: %@, value: %@
%s Added key: %@, values: %@
%s Skipping key: %@ values: %@ (is this the region dict? that's handled elsewhere)
v32@?0@"NSString"8@"NSMutableSet"16^B24
+[DDSMobileAssetv2QueryAdapter maAssetQueryForddsAssetQuery:compatiblilityVersion:internalInstall:]
http://mesu.apple.com/assets/
https://basejumper.apple.com/assets/
UseInternalServer
com.apple.DataDeliveryServices.reachabilityQueue
%s Could not create reachability!
-[DDSReachabilityObserver queryInitialState]
%s Could not set reachability callback
%s started monitoring reachability
%s Internet reachability did change %@
-[DDSReachabilityObserver reachabilityDidChange:]
reachable
not reachable
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
reachabilityRef
T^{__SCNetworkReachability=},R,N,V_reachabilityRef
isInternetReachable
TB,N,V_isInternetReachable
T@"<DDSReachabilityObserverDelegate>",&,N,V_delegate
TB,R,N,V_reachable
Keyboards
DataDeliveryServices
apple-internal-install
BuildVersion
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSString"16^B24
-[DDSAttributeFilter initWithCoder:]
<%@: %p, filters: %@>
supportsSecureCoding
TB,R
filters
T@"NSMutableDictionary",&,N,V_filters
B16@?0@"NSDictionary"8
ContentPath
parentAsset
T@"DDSAsset",&,N,V_parentAsset
contents
T@"NSDictionary",&,N,V_contents
path
T@"NSURL",R,N
%@::%@
%@ : %@, 
localURL
T@"NSURL",&,N,V_localURL
attributes
T@"NSDictionary",&,N,V_attributes
uniqueIdentifier
T@"NSString",R,N
asAsset
T@"ASAsset",&,N,V_asAsset
maAsset
T@"MAAsset",&,N,V_maAsset
debuggingID
compatibilityVersion
Tq,R,N,V_compatibilityVersion
com.apple.DataDeliveryServices
%s Descriptor with assertion id: %@ already added.
-[DDSAssertion addDescriptorWithAssertionID:clientID:policy:]
v24@?0@"DDSAssertDescriptor"8^B16
-[DDSAssertion initWithCoder:]
<%@: %p, query: %@, policy: %@>
descriptors
T@"NSMutableSet",&,N,V_descriptors
lastUpdated
T@"NSDate",&,N,V_lastUpdated
query
T@"DDSAssetQuery",R,N,V_query
policy
T@"DDSAssetPolicy",R,N
assertionIdentifiers
T@"NSSet",R,N
clientIdentifiers
Required
Optional
Delta
Language
Script
InputLayout
ContactLabel
Home
Work
Lexicon
LexiconDelta
Phrases
LanguageModel
LanguageModelDelta
SpellChecker
SpellCheckerDelta
<%@: %p, at: %@, locO: %d, iO: %d, latO: %d, fil: %@>
assetType
T@"NSString",R,N,V_assetType
filter
T@"DDSAttributeFilter",R,N,V_filter
localOnly
TB,N,V_localOnly
installedOnly
TB,N,V_installedOnly
latestOnly
TB,N,V_latestOnly
com.apple.DataDeliveryServices.ddsinterface.queue
%s Created interface
+[DDSInterface sharedInstance]_block_invoke
-[DDSInterface createConnectionIfNecessary]_block_invoke_2
%s Using 0 NSXPCConnectionOptions for macOS connection
+[DDSInterface xpcConnectionOptionsForServer]
-[DDSInterface serviceObjectProxy]_block_invoke
-[DDSInterface syncServiceObjectProxy]_block_invoke
%s Using test local server
-[DDSInterface server]
%s Interface is using remote server: (%@)
-[DDSInterface syncServer]
%s Interface is using sync remote server: (%@)
serverOverride
T@"<DDSManaging>",&,N,V_serverOverride
remoteServer
T@"NSXPCConnection",&,N,V_remoteServer
sharedInstance
T@"DDSInterface",R,N,V_sharedInstance
mDelegate
T@"<DDSManagingDelegate>",&,N,V_mDelegate
T@"<DDSManagingDelegate>",&,N,V_delegate
ddsLogLevel
DDSLog
+[DDSMobileAssetv1PredicateAdapter predicateForQuery:compatibilityVersion:internalInstall:]_block_invoke
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataDeliveryServices_Sim/DataDeliveryServices-2.11/Sources/DDSMobileAssetv1PredicateAdapter.m
[allowedValues.anyObject isKindOfClass:NSString.class] || [allowedValues.anyObject isKindOfClass:NSDictionary.class]
%K == %@
%K == %@ || %K == %@
%s Compatibility predicate: %@
+[DDSMobileAssetv1PredicateAdapter compatibilityPredicateForCompatabilityVersion:internalInstall:]
%K ==[c] %@
%K == nil
SUBQUERY(%K.@allValues, $x, $x != '').@count == 0
%@.%@
%K != nil
com.apple.MobileAsset.LinguisticData
T@"DDSLinguisticAttributeFilter",R,N
-[DDSAssetPolicy initWithCoder:]
<%@: %p, pdf: %ld, doc: %d, dwp: %d>
idleUsageEvictionPeriod
T@"NSDateComponents",&,N,V_idleUsageEvictionPeriod
preferredDownloadFrequency
Tq,N,V_preferredDownloadFrequency
downloadOverCellular
TB,N,V_downloadOverCellular
downloadWithoutPower
TB,N,V_downloadWithoutPower
notificationDownloadTriggers
T@"NSSet",C,N,V_notificationDownloadTriggers
downloadCompletionNotification
T@"NSString",C,N,V_downloadCompletionNotification
MetadataSyncState
Date
Status
AttemptCount
-[DDSAssetSyncState loadStateIfNecessary]
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataDeliveryServices_Sim/DataDeliveryServices-2.11/Sources/DDSAssetSyncState.m
[date isKindOfClass:[NSDate class]]
[buildVersion isKindOfClass:[NSString class]]
-[DDSAssetSyncState saveState]
_loadedState
%s Saving sync state: %lu
-[DDSAssetSyncState updateState]
%s Time for metadata refresh (enoughTimeElapsed = %d, newBuildVersion = %d, syncDateSinceNow = %.3g)!
%s status: %lu, attempt count: %lu, should sync = %d
-[DDSAssetSyncState shouldSyncToRemoteMetadata]
%s sync attempt failed with error: %@
-[DDSAssetSyncState didSyncToRemoteMetadataWithError:]
status
Tq,N,V_status
date
T@"NSDate",C,N,V_date
buildVersion
T@"NSString",C,N,V_buildVersion
attemptCount
Tq,N,V_attemptCount
com.apple.DataDeliveryServices.DDSMobileAssetv2Provider
-[DDSMobileAssetv2Provider allContentItemsMatchingQuery:error:]
%s Raw metadata sync results: %@
-[DDSMobileAssetv2Provider assetsForQuery:errorPtr:]
%s Raw results: %@, result value: %lu
%s Searching for regions in filters: %@
%s Found allowed regions: %@
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataDeliveryServices_Sim/DataDeliveryServices-2.11/Sources/DDSMobileAssetv2Provider.m
[allowedRegions isKindOfClass:NSArray.class]
[allowedRegion isKindOfClass:NSDictionary.class]
%s Found asset region: %@ didMatch: %d
%s Skipping regions with allowed regions: %@
%s Final query result: %@
%s Begin download for assertions: %@
-[DDSMobileAssetv2Provider beginDownloadForAssertions:]
-[DDSMobileAssetv2Provider beginDownloadForAssertions:]_block_invoke
Error updating assertions
-[DDSMobileAssetv2Provider beginDownloadForAssertion:handler:]
%s Downloading assets %@
-[DDSMobileAssetv2Provider beginDownloadForAssertion:handler:]_block_invoke
%s Remaining: %ld in set: %@
v16@?0@"MAProgressNotification"8
v16@?0q8
%s Updating catalog for LinguisticData...
-[DDSMobileAssetv2Provider updateCatalogForAssetTypes:withCompletion:]
%s Update catalog result: %lu
-[DDSMobileAssetv2Provider updateCatalogForAssetTypes:withCompletion:]_block_invoke
%s Updated catalog for %@ successfully
Error updating catalog for %@: %lu
-[DDSMobileAssetv2Provider removeAssetsForAssertions:]_block_invoke
v24@?0@"DDSAssertion"8^B16
%s Removing old assets for assertions: %@
-[DDSMobileAssetv2Provider removeOldAssetsForAssertions:]
%s All assets eligible for removal: %@
-[DDSMobileAssetv2Provider removeOldAssetsForAssertions:]_block_invoke
%s Latest assets not eligible for removal: %@
%s Removing assets: %@
-[DDSMobileAssetv2Provider removeAssets:]
%s Purged asset (%@) successfully
-[DDSMobileAssetv2Provider removeAssets:]_block_invoke
+[DDSMobileAssetv2Provider supportedCompatibilityVersion]_block_invoke
encounteredAssertionUpdateError
TB,N,V_encounteredAssertionUpdateError
T@"<DDSAssetProvidingDelegate>",&,N,Vdelegate
<%@ %p: aID: %@ cID: %@>
clientIdentifier
T@"NSString",&,N,V_clientIdentifier
assertionIdentifier
T@"NSString",&,N,V_assertionIdentifier
T@"DDSAssetPolicy",&,N,V_policy
/Library/DataDeliveryServices/
ddsassertiondata.plist
%s Loading assertion data from URL: (%@)
-[DDSAssertionDataHandler loadAssertionData]
%s Saved assertion data to URL: (%@)
-[DDSAssertionDataHandler saveAssertionData:]
%s Creating directory at URL: %@, success: %d
-[DDSAssertionDataHandler assertionContentDirectory]_block_invoke
%s Verified the DDS folder is present at %@
com.apple.DataDeliveryServices.DDSAssertionTracker
%s Add assertion (%@) with id (%@) for client (%@)
-[DDSAssertionTracker addAssertionForQuery:policy:assertionID:clientID:]_block_invoke
%s Remove assertion with id: %@
-[DDSAssertionTracker removeAssertionWithID:]_block_invoke
%s Removed descriptor id: %@
%s Removing assertion: %@
%s Descriptors: %@
%s Calling delegate to remove assertion: %@
-[DDSAssertionTracker removeAssertionWithID:]
%s Setting last updated for assertion (%@) set to (%@)
-[DDSAssertionTracker didUpdateAssertion:atDate:]_block_invoke
T@"<DDSAssetTrackingDelegate>",&,N
trackedAssertions
T@"NSMutableArray",R,N,V_trackedAssertions
trackedAssertionSets
T@"NSMutableDictionary",R,N,V_trackedAssertionSets
dataHandler
T@"<DDSAssertionDataHandling>",R,N,V_dataHandler
T@"<DDSAssetTrackingDelegate>",&,N,V_delegate
%s Scheduled timer fired, attempt to update manifest...
-[DDSManager beginUpdate]
%s Updating manifest for asset types: %@
-[DDSManager beginUpdate]_block_invoke
%s Determined assertions to update: %@
%s Add assertion for query: %@ policy: (%@) assertionID: (%@) clientID: (%@)
-[DDSManager addAssertionForQuery:policy:assertionID:clientID:]
%s Remove assertion with ID: (%@)
-[DDSManager removeAssertionWithID:]
%s Requesting assertion IDs for client ID: (%@)
-[DDSManager assertionIDsForClientID:reply:]
%s For clientID (%@), found assertion IDs (%@)
%s Handle new assertions: %@
-[DDSManager handleNewAssertions:]
%s Update catalog with provider: %@
%s Updated manifest error: %@
-[DDSManager handleNewAssertions:]_block_invoke
%s Asking to download for assertions: %@
%s Handle removed assertions: %@
-[DDSManager handleRemovedAssertions:]
%s Download state: %lu for asset: %@
-[DDSManager didChangeDownloadState:forAsset:]
%s Completed download for assertion (%@)
-[DDSManager didCompleteDownloadForAssertion:error:]
%s Completed download for assertions (%@) with error: %@
-[DDSManager didCompleteDownloadForAssertions:error:]
%s didUpdateManifest with error: %@
-[DDSManager didUpdateManifestWithError:]
%s Asset server is reachable
-[DDSManager reachabilityStateDidChange:]
%s Starting a sync...
%s Don't need to sync...
%s Asset server is unreachable
%s Requesting clean v1 LinguisticData repository
-[DDSManager deleteV1AssetsIfNecessary]_block_invoke
%s Finished clean v1 LinguisticData repository
tracker
T@"<DDSAssetTracking>",R,N,V_tracker
timer
T@"DDSScheduledTimer",R,N,V_timer
syncState
T@"DDSAssetSyncState",R,N,V_syncState
reachabilityObserver
T@"DDSReachabilityObserver",R,N,V_reachabilityObserver
DDS Error: %s Error getting remoteObjectProxy in %s (%@)
DDS Error: %s Client connection interrupted: %@
DDS Error: %s Error updating manifest (%@)
DDS Error: %s runQuery: %@
DDS Error: %s assets query: %@
DDS Error: %s No values specified for key (%@)
DDS Error: %s Unexpected failure adding key (%@)/value (%@) pair
DDS Error: %s Could not set reachability queue
DDS Error: %s Error decoding object for key %@
DDS Error: %s Error decoding descriptors: (%@)
DDS Error: %s XPC connection to server invalidated.
DDS Error: %s XPC connection to server interrupted.
DDS Error: %s Error creating proxy (%@)
DDS Error: %s Error creating sync proxy (%@)
DDS Error: %s Unexpected type of value: %@
DDS Error: %s Error decoding %@ (%@)
DDS Error: %s Error for queryMetaDataSync: %lu
DDS Error: %s Encountered error: %@
DDS Error: %s Unexpected installedOnly/localOnly YES value on assertion's query: %@.  Are you really, really sure you meant that?
DDS Error: %s %@
DDS Error: %s Error removing assets (%@) for query: %@
DDS Error: %s Failed to purged asset (%@) with result: %lu
DDS Error: %s Error (%@) unarchiving assertion content
DDS Error: %s Error (%@) loading assertion data (%@).  Though, this is expected if the file doesn't exist yet.
DDS Error: %s Error (%@) writing content: %@
DDS Error: %s Error (%@) archiving content at URL: %@
DDS Error: %s Error (%@) creating directory at path %@
DDS Error: %s Error (%@) updating catalog for asset types (%@) for timer fire
DDS Error: %s Error (%@) updating catalog, abandoning downloads for assertion (%@)
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
DDSManaging
NSObject
DDSServer
NSXPCListenerDelegate
DDSManagingDelegate
DDSLinguisticAttributeFilter
DDSMobileAssetv1Provider
DDSAssetProviding
DDSScheduledTimerImpl
DDSScheduledTimer
Testing
DDSAssetCenter
DDSMobileAssetv2QueryAdapter
DDSReachabilityObserver
DDSAttributeFilter
NSSecureCoding
NSCoding
DDSContentItemMatcher
DDSContentItem
DDSAsset
DDSAssertion
NSCopying
DDSAssetQuery
DDSInterface
DDSMobileAssetv1PredicateAdapter
DDSLinguisticAssetQuery
DDSAssetPolicy
DDSAssetSyncState
TestingSupport
DDSMobileAssetv2Provider
DDSAssertDescriptor
DDSAssertionDataHandler
DDSAssertionDataHandling
DDSAssertionTracker
DDSAssetTracking
DDSManager
DDSAssetProvidingDelegate
DDSReachabilityObserverDelegate
DDSAssetTrackingDelegate
initWithManager:
init
setDelegate:
cStringUsingEncoding:
initWithMachServiceName:
_setQueue:
resume
stringWithFormat:
clientConnections
allObjects
countByEnumeratingWithState:objects:count:
remoteObjectProxyWithErrorHandler:
didUpdateAssetsWithType:
manager
setExportedObject:
interface
setExportedInterface:
setRemoteObjectInterface:
queue
handleEndedConnection:
setInvalidationHandler:
setInterruptionHandler:
addObject:
removeObject:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
addAssertionForQuery:policy:assertionID:clientID:
removeAssertionWithID:
assertionIDsForClientID:reply:
delegate
interfaceWithProtocol:
arrayWithObjects:count:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
setClass:forSelector:argumentIndex:ofReply:
invalidate
dealloc
sharedInstance
listener:shouldAcceptNewConnection:
listener
.cxx_destruct
_manager
_listener
_queue
_clientConnections
addAllowedValue:forKey:
setObject:forKeyedSubscript:
addContentType:
addContentItemLocale:
addAssetLocale:
addRegionWithCountry:province:city:
initWithAssetType:
setQueriesLocalAssetInformationOnly:
runASQuery:installedAssetsOnly:latestAssetsOnly:error:
didUpdateManifestWithError:
asAssetQueryWithDDSQuery:
installedOnly
latestOnly
assetType
supportedCompatibilityVersion
predicateForAssetQuery:compatiblilityVersion:
setPredicate:
localOnly
queriesLocalAssetInformationOnly
predicate
runQueryAndReturnError:
state
assetWithASAsset:
latestAssetsOnlyFromAssets:
count
localURL
uniqueIdentifier
objectForKeyedSubscript:
latestBetweenAssetA:AssetB:
allValues
attributes
objectForKey:
integerValue
filters
assetContentItemsMatching:contentItems:parentAsset:
addObjectsFromArray:
assetsForQuery:errorPtr:
contentItemsFromAssets:matchingFilter:
query
initWithArray:
remainingAssetsByAssertion
removeObjectForKey:
didCompleteDownloadForAssertion:error:
policy
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
beginDownloadForAssets:withPolicy:error:handler:
asAsset
downloadOptionsForPolicy:
requiredDiskSpaceIsAvailable:error:
downloadStateForOperation:
didChangeDownloadState:forAsset:
setProgressHandler:
beginDownloadWithOptions:
isEqualToString:
numberWithBool:
stringWithUTF8String:
stringByAppendingPathComponent:
defaultManager
fileExistsAtPath:
initWithContentsOfFile:options:error:
propertyListWithData:options:format:error:
beginDownloadForAssertions:
allContentItemsMatchingQuery:error:
updateCatalogForAssetTypes:withCompletion:
removeAssetsForAssertions:
removeOldAssetsForAssertions:
beginDownloadForAssertion:withError:
_delegate
_remainingAssetsByAssertion
isMainThread
copy
updateAssetTimer
calendarWithIdentifier:
components:fromDate:
dateFromComponents:
setDay:
setHour:
setMinute:
dateByAddingComponents:toDate:options:
timeIntervalSinceDate:
date
nextFireDateForDate:
dateByAddingTimeInterval:
assetTimerFired
initWithFireDate:interval:target:selector:userInfo:repeats:
currentRunLoop
addTimer:forMode:
initWithExpirationHandler:
_expirationHandler
_assetTimer
scheduledTimerWithExpirationHandler:
_impl
setOverrideInterval:
initWithProvider:managerInterface:
delegates
provider
managerInterface
enumerateObjectsUsingBlock:
registerDelegate:
unregisterDelegate:
assetsForQuery:error:
addAssertionForAssetsWithQuery:policy:assertionID:clientID:
removeAssertionWithIdentifier:
assertionIDsForClientID:
_provider
_managerInterface
_delegates
initWithType:
filter
anyObject
firstObject
addKeyValueNull:
addKeyValuePair:with:
mutableCopy
addKeyValueArray:with:
enumerateKeysAndObjectsUsingBlock:
stringFromInteger:
maAssetQueryForddsAssetQuery:compatiblilityVersion:internalInstall:
queryInitialState
serverURL
UTF8String
reachabilityStateDidChange:
reachabilityDidChange:
reachable
setQueue:
reachabilityRef
isInternetReachable
setIsInternetReachable:
_reachable
_isInternetReachable
_reachabilityRef
initWithDictionary:
setObject:forKey:
addAllowedValues:forKey:
enumerateAllowedValuesAndKeys:
dictionary
containsObject:
allowedValuesForKey:
_setForKey:
unionSet:
minusSet:
encodeObject:forKey:
decodeTopLevelObjectOfClasses:forKey:error:
isEqualToQueryFilter:
attributeFilter
attributeFilterWithDictionary:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
addEntriesFromFilter:
entriesMatchingAttributes:
doesContainAttributes:
removeAllowedValue:forKey:
removeAllowedValues:forKey:
setFilters:
_filters
array
shouldLenientlyMatchWithContentItemsForRegion:
_anyStringIn:matches:acceptUnspecifiedValue:
_anyDictionaryIn:matches:shouldLenientlyMatch:
initWithParentAsset:contents:
length
caseInsensitiveCompare:
_string:matches:acceptUnspecifiedValue:
allKeys
_dictionary:matches:acceptUnspecifiedAttribute:lenientMatch:
contents
parentAsset
URLByAppendingPathComponent:
path
setParentAsset:
setContents:
_parentAsset
_contents
setAsAsset:
setMaAsset:
getLocalUrl
addEntriesFromDictionary:
maAsset
uniqueIdentifierForMAAsset:
uniqueIdentifierForASAsset:
pathComponents
objectAtIndexedSubscript:
stringByAppendingString:
stringByAppendingFormat:
string
appendString:
appendFormat:
debuggingID
asset
assetWithMAAsset:
debuggingIDsForAssets:
setasAsset:
_mergeAttributes:
setAttributes:
compatibilityVersion
setLocalURL:
_attributes
_compatibilityVersion
_localURL
_asAsset
_maAsset
descriptors
assertionIdentifier
clientIdentifier
initWithPolicy:assertionID:clientID:
setPreferredDownloadFrequency:
downloadWithoutPower
setDownloadWithoutPower:
downloadOverCellular
setDownloadOverCellular:
preferredDownloadFrequency
decodeObjectOfClass:forKey:
lastUpdated
allocWithZone:
initWithQuery:
setDescriptors:
setLastUpdated:
isEqualToAssertion:
isEqualToDate:
copyWithZone:
addDescriptorWithAssertionID:clientID:policy:
clientIdentifiers
assertionIdentifiers
removeDescriptorWithClientID:
removeDescriptorWithAssertionID:
_lastUpdated
_query
_descriptors
initWithAssetType:filter:
boolValue
isEqualToAssetQuery:
setInstalledOnly:
setLocalOnly:
setLatestOnly:
_localOnly
_installedOnly
_latestOnly
_assetType
_filter
_assertionClientDispatchQueue
server
syncServer
xpcConnectionOptionsForServer
initWithMachServiceName:options:
teardownXPCConnection
createConnectionIfNecessary
synchronousRemoteObjectProxyWithErrorHandler:
serverOverride
serviceObjectProxy
syncServiceObjectProxy
setServerOverride:
remoteServer
setRemoteServer:
mDelegate
setMDelegate:
_serverOverride
_remoteServer
_sharedInstance
_mDelegate
predicateForQuery:compatibilityVersion:internalInstall:
predicateForKey:matchingAnyStringIn:
predicateForKey:matchingAnyDictionaryIn:acceptUnspecifiedValue:acceptUnspecifiedAttribute:lenientMatch:
compatibilityPredicateForCompatabilityVersion:internalInstall:
andPredicateWithSubpredicates:
regionKeys
setWithObjects:
numberWithUnsignedInteger:
predicateWithFormat:
numberWithUnsignedLong:
predicateWithValue:
orPredicateWithSubpredicates:
arrayByAddingObject:
predicateForKey:matchingString:
extractRegionDictFromFilter:
initWithLanguageIdentifier:
downloadCompletionNotification
idleUsageEvictionPeriod
notificationDownloadTriggers
numberWithInteger:
isEqualToAssetPolicy:
assetPolicy
setNotificationDownloadTriggers:
setDownloadCompletionNotification:
setIdleUsageEvictionPeriod:
_downloadOverCellular
_downloadWithoutPower
_preferredDownloadFrequency
_notificationDownloadTriggers
_downloadCompletionNotification
_idleUsageEvictionPeriod
earlierDate:
setDate:
buildVersionString
setBuildVersion:
setStatus:
setAttemptCount:
saveState
buildVersion
status
attemptCount
timeIntervalSinceNow
loadStateIfNecessary
updateState
currentStatus
shouldSyncToRemoteMetadata
didBeginSyncToRemoteMetadata
didSyncToRemoteMetadataWithError:
_loadedState
_status
_date
_buildVersion
_attemptCount
initWithDate:buildVersion:status:attemptCount:
returnTypes:
queryMetaDataSync
results
shouldMatchAttributeValue:givenValue:
setEncounteredAssertionUpdateError:
encounteredAssertionUpdateError
didCompleteDownloadForAssertions:error:
beginDownloadForAssertion:handler:
isStalled
totalWritten
totalExpected
attachProgressCallBack:
startDownload:then:
setAllowsCellularAccess:
setRequiresPowerPluggedIn:
startCatalogDownload:options:then:
removeAssets:
purge:
_encounteredAssertionUpdateError
isEqualToDescriptor:
setClientIdentifier:
setAssertionIdentifier:
setPolicy:
_clientIdentifier
_assertionIdentifier
_policy
assertionContentURL
dataWithContentsOfURL:options:error:
unarchivedObjectOfClasses:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToURL:options:error:
fileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
assertionContentDirectory
loadAssertionData
saveAssertionData:
initWithDataHandler:
trackedAssertions
assertionDueForUpdateFrom:SinceDate:
intervalForDownloadFrequency:
dataHandler
setWithObject:
handleNewAssertions:
handleRemovedAssertions:
didUpdateAssertion:atDate:
assertionDueForUpdateSinceDate:
trackedAssetTypes
trackedAssertionSets
_trackedAssertions
_trackedAssertionSets
_dataHandler
initWithProvider:tracker:
setTimer
checkSyncState
deleteV1AssetsIfNecessary
syncState
beginUpdate
tracker
timer
reachabilityObserver
_tracker
_timer
_syncState
_reachabilityObserver
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16@24@32@40
v24@0:8@16
v32@0:8@16@?24
v48@0:8@"DDSAssetQuery"16@"DDSAssetPolicy"24@"NSString"32@"NSString"40
v24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSSet">24
@"<DDSManagingDelegate>"16@0:8
v24@0:8@"<DDSManagingDelegate>"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@24@0:8@16
v16@0:8
@"<DDSManaging>"
@"NSXPCListener"
@"NSObject<OS_dispatch_queue>"
@"NSMutableSet"
v40@0:8@16@24@32
@32@0:8@16@24
q16@0:8
@32@0:8@16^@24
v24@0:8@"NSSet"16
@"NSArray"32@0:8@"DDSAssetQuery"16^@24
@"NSArray"32@0:8@"NSArray"16@"DDSAttributeFilter"24
v32@0:8@"NSSet"16@?<v@?@"NSError">24
@"<DDSAssetProvidingDelegate>"16@0:8
v24@0:8@"<DDSAssetProvidingDelegate>"16
@40@0:8@16B24B28^@32
v32@0:8@16^@24
v48@0:8@16@24^@32@?40
Q24@0:8@16
@"<DDSAssetProvidingDelegate>"
@"NSMutableDictionary"
@24@0:8@?16
@"NSTimer"
@"DDSScheduledTimerImpl"
v24@0:8d16
@"<DDSAssetProviding>"
@36@0:8@16Q24B32
@24@0:8Q16
v20@0:8B16
^{__SCNetworkReachability=}16@0:8
@"<DDSReachabilityObserverDelegate>"
^{__SCNetworkReachability=}
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@?16
v32@0:8@16@24
@40@0:8@16@24@32
B36@0:8@16@24B32
B40@0:8@16@24B32B36
B40@0:8@16@24@?32
@"DDSAsset"
@"NSDictionary"
@"NSURL"
@"ASAsset"
@"MAAsset"
@24@0:8^{_NSZone=}16
@"NSDate"
@"DDSAssetQuery"
@"NSString"
@"DDSAttributeFilter"
@"<DDSManagingDelegate>"
@"NSXPCConnection"
@"DDSInterface"
@32@0:8@16Q24
@28@0:8Q16B24
@44@0:8@16@24B32B36B40
v24@0:8q16
@"NSSet"
@"NSDateComponents"
@48@0:8@16@24q32q40
@"DDSAssetPolicy"
@"NSArray"16@0:8
v24@0:8@"NSArray"16
v32@0:8@"DDSAssertion"16@"NSDate"24
@"NSArray"24@0:8@"NSDate"16
@"NSSet"16@0:8
@"NSSet"24@0:8@"NSString"16
@"<DDSAssetTrackingDelegate>"16@0:8
v24@0:8@"<DDSAssetTrackingDelegate>"16
d24@0:8q16
@"<DDSAssetTrackingDelegate>"
@"NSMutableArray"
@"<DDSAssertionDataHandling>"
v32@0:8Q16@24
v24@0:8@"NSError"16
v32@0:8Q16@"DDSAsset"24
v32@0:8@"DDSAssertion"16@"NSError"24
v32@0:8@"NSSet"16@"NSError"24
@"<DDSAssetTracking>"
@"DDSScheduledTimer"
@"DDSAssetSyncState"
@"DDSReachabilityObserver"
