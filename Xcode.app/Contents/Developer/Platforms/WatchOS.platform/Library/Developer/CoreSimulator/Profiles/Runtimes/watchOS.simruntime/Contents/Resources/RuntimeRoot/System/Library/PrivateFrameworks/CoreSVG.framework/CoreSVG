@(#)PROGRAM:CoreSVG  PROJECT:CoreSVG-129
@12SVGAttribute
10CFRetained
15SVGAttributeMap
?9SVGCanvas
?11SVGDocument
15SVGGradientStop
11SVGGradient
7SVGNode
8SVGPaint
@(#)PROGRAM:CoreSVG PROJECT:CoreSVG-129
G14SVGPathCommand
7SVGPath
11SVGRootNode
12SVGShapeNode
v8@?0
bevel
butt
circle
class
defs
display-p3
ellipse
evenodd
fill
fill-opacity
fill-rule
fill-stroke
font
font-family
font-size
font-weight
height
line
linearGradient
mesh
miter
nonzero
offset
opacity
path
points
polygon
polyline
preserveAspectRatio
radialGradient
rect
round
srgb
square
stop
stop-color
stroke
stroke-dasharray
stroke-dashoffset
stroke-linecap
stroke-linejoin
stroke-miterlimit
stroke-opacity
stroke-width
style
symbol
transform
unknown
version
viewBox
width
text
letter-spacing
href
xlink:href
map::at:  key not found
SVGAttribute
matrix(%g %g %g %g %g %g)
none
url(
isEqual(): Unexpected expected type: %d
%s: %s
SVGAttributeMap
Times
black
v28@?0I8^{SVGAttribute=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}Q^{CFRetainedReference}I{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}i(Value=^{vector<double, std::__1::allocator<double> >}I^{SVGPaint}^{SVGPath})^{vector<CGPoint, std::__1::allocator<CGPoint> >}i}12^B20
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
SVGCanvas
#%02x%02x%02x
rgba(%d,%d,%d,%g)
aliceblue
antiquewhite
aqua
aquamarine
azure
beige
bisque
blanchedalmond
blue
blueviolet
brown
burlywood
cadetblue
chartreuse
chocolate
coral
cornflowerblue
cornsilk
crimson
cyan
darkblue
darkcyan
darkgoldenrod
darkgray
darkgrey
darkgreen
darkkhaki
darkmagenta
darkolivegreen
darkorange
darkorchid
darkred
darksalmon
darkseagreen
darkslateblue
darkslategray
darkslategrey
darkturquoise
darkviolet
deeppink
deepskyblue
dimgray
dimgrey
dodgerblue
firebrick
floralwhite
forestgreen
fuchsia
gainsboro
ghostwhite
gold
goldenrod
gray
green
greenyellow
grey
honeydew
hotpink
indianred
indigo
ivory
khaki
lavender
lavenderblush
lawngreen
lemonchiffon
lightblue
lightcoral
lightcyan
lightgoldenrodyellow
lightgray
lightgrey
lightgreen
lightpink
lightsalmon
lightseagreen
lightskyblue
lightslateblue
lightslategray
lightslategrey
lightsteelblue
lightyellow
lime
limegreen
linen
magenta
maroon
mediumaquamarine
mediumblue
mediumorchid
mediumpurple
mediumseagreen
mediumslateblue
mediumspringgreen
mediumturquoise
mediumvioletred
midnightblue
mintcream
mistyrose
moccasin
navajowhite
navy
oldlace
olive
olivedrab
orange
orangered
orchid
palegoldenrod
palegreen
paleturquoise
palevioletred
papayawhip
peachpuff
peru
pink
plum
powderblue
purple
rosybrown
royalblue
saddlebrown
salmon
sandybrown
seagreen
seashell
sienna
silver
skyblue
slateblue
slategray
slategrey
snow
springgreen
steelblue
teal
thistle
tomato
turquoise
violet
violetred
wheat
white
whitesmoke
yellow
yellowgreen
rgb(
rgba(
hsl(
hsla(
SVGDocument
Root Node is already populated in SVGDocument. Skipping read.
SVGGradientStop
Stop: Offset: %g, Color: %s
SVGGradient: Attribute parse error: %s
Gradient: %d stop(s)
SVGNode
Warning: attempted to add a node to itself, causing a cycle. Ignoring.
Node: %s (id: %s), %d children, %d definitions
SVGPaint
url(#%s)
matrix
translate
scale
rotate
skewX
skewY
Malformed path detected
Failed to parse SVGVectors list for command: %c
CGSVGDrawState
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreSVG_Sim/CoreSVG-129/CoreSVG/Private/CGSVGContext.cpp
this != &state
Error: Given fill-rule was undefined
v28@?0I8^{CGSVGAttribute=}12^B20
v28@?0^{CGSVGNode=}8i16^B20
Text node x argument is unexpected type
Text node y argument is unexpected type
monospace
Courier
serif
sans-serif
Helvetica
cursive
Apple Chancery
fantasy
Papyrus
SVGPathCommand
appendPoint
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreSVG_Sim/CoreSVG-129/CoreSVG/Project/SVGPath.cpp
_floats != nullptr
appendPoints
appendFloats
SVGPath
boundingBox
floats != nullptr
%s: Unandled type: %d
CGRect SVGPath::boundingBox() const
Got null from CFDataGetBytePtr(...)
Got zero-length from CFDataRef
Failed to parse with xmlReadMemory
Root XML node does not have "SVG" type
Reader: Error on line %d: %s
Reader: %s
Attribute: '%s' is not allowed in strict mode
Text element is not allowed in strict mode
translate(%g,%g)
scale(%g,%g)
var(
:root
Failure: Failed to resolve gradient definition
RootNode: Size: {%.2f, %.2f} Viewbox: 
Failed to parse %s for node name "svg"
None
xMinYMin
xMidYMin
xMaxYMin
xMinYMid
xMidYMid
xMaxYMid
xMinYMax
xMidYMax
xMaxYMax
Meet
Slice
SVGShapeNode: Invalid primitive: %s
SVGShapeNode: Error parsing atom: %s
SVGShapeNode::boundingBox: unhandled type: %d
Shape: %s 
                                      
%.*s
{{%g, %g}, {%g, %g}}
CoreSVG: Error: 
Failed to convert the given CFString
CGPointListFromFloats
/AppleInternal/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreSVG_Sim/CoreSVG-129/CoreSVG/Project/SVGUtilities.cpp
((count % 2) == 0) && "Must be multiple of two"
CoreSVG has logged an error. Set environment variabe "%s" to learn more.
CORESVG_VERBOSE
UTF-8
Generator: Apple Native CoreSVG %g
-//W3C//DTD SVG 1.1//EN
http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd
xmlns
http://www.w3.org/2000/svg
xmlns:xlink
http://www.w3.org/1999/xlink
%g %g %g %g
url(#grad%d)
Attribute '%s' is not allowed in strict mode
Text shapes are not allowed in strict mode
grad%d
%s:%s;
variables
strict
v28@?0r^{SVGNode=^^?{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}Q^{CFRetainedReference}^{SVGNode}^{SVGAttributeMap}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{vector<SVGNode *, std::__1::allocator<SVGNode *> >=^^{SVGNode}^^{SVGNode}{__compressed_pair<SVGNode **, std::__1::allocator<SVGNode *> >=^^{SVGNode}}}{map<const std::__1::basic_string<char>, SVGNode *, CaseInsensitiveStringLess, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SVGNode *> > >={__tree<std::__1::__value_type<const std::__1::basic_string<char>, SVGNode *>, std::__1::__map_value_compare<const std::__1::basic_string<char>, std::__1::__value_type<const std::__1::basic_string<char>, SVGNode *>, CaseInsensitiveStringLess, true>, std::__1::allocator<std::__1::__value_type<const std::__1::basic_string<char>, SVGNode *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const std::__1::basic_string<char>, SVGNode *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<const std::__1::basic_string<char>, std::__1::__value_type<const std::__1::basic_string<char>, SVGNode *>, CaseInsensitiveStringLess, true> >=Q}}}{map<std::__1::basic_string<char>, SVGNode *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, SVGNode *> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, SVGNode *>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, SVGNode *>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, SVGNode *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, SVGNode *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, SVGNode *>, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}8i16^B20
Unhandled operator '%c'
v16@?0r^{CGPathElement=i^{CGPoint}}8
C/c command was given the wrong number of points.
S/s command was given the wrong number of points.
Q/q command was given the wrong number of points.
A/a command was given the wrong number of floats.
Warning: ellipses path has invalid rx or ry value. Drawing line.
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
