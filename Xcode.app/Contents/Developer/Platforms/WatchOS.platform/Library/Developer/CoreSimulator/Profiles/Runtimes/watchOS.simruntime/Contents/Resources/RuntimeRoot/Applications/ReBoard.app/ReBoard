@(#)PROGRAM:ReBoard  PROJECT:Carousel-1110.2.18
com.apple.system.prefs.changed
%@ %@
timestamp
onAC
CSLHIDUISensorMode
CoverGestureEnabled
WakeOnTapEnabled
WakeOnSwipeEnabled
WakeOnLongPressEnabled
WakeOnTapThroughEnabled
WakeOnSwipeThroughEnabled
WakeOnLongPressThroughEnabled
v16@?0@"BKSMutableHIDUISensorMode"8
kIOSSHLUnsupportedChargingAccessoryStatusChangedNotification
v8@?0
SBHideACPower
SBLowBatteryLevel
B8@?0
coverGestureEnabled
touchLocked
inactiveTapGestureEnabled
alwaysOnSwipeGestureEnabled
alwaysOnHoldGestureEnabled
alwaysOnTapThroughEnabled
alwaysOnSwipeThroughEnabled
v16@?0@"NSError"8
RESET_FAILED_MESSAGE
General
v12@?0B8
backlight
v32@?0@"<PBAIdleSleepObserving>"8Q16^B24
 retroactively
MaximumProgressPercent
ProgressDuration
ReBoardDismissalOverlay
v16@?0@"FBMutableSystemShellInitializationOptions"8
PBAHIDEventController
UIRootSceneWindow-%@-%p
-activate called on %@ that is already activated
v16@?0@"FBSMutableSceneSettings"8
v16@?0@"FBSMutableSceneClientSettings"8
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
numberWithBool:
allocWithZone:
init
isMemberOfClass:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
setOnAC:
setHasOnAC:
hasOnAC
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
timestamp
onAC
_timestamp
_onAC
_has
TB,N
TQ,N,V_timestamp
TB,N,V_onAC
copy
isTouchLocked
setDigitizerEnabled:
setProximityDetectionMode:
isCoverGestureEnabled
addObject:
isInactiveTapGestureEnabled
isAlwaysOnSwipeGestureEnabled
isAlwaysOnHoldGestureEnabled
isAlwaysOnTapThroughEnabled
isAlwaysOnSwipeThroughEnabled
isAlwaysOnHoldThroughEnabled
setMultitouchHostStateKeys:
buildModeForReason:builder:
sharedInstance
requestUISensorMode:
invalidate
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
sensorMode
T@"CSLHIDUISensorMode",R,N
updateSensorMode:
.cxx_destruct
_lock
_sensorMode
_sensorModeAssertion
setStateForFullPower:
postFullPower
setStateForPluggedIn:
postPluggedIn
setStateForCurvedBatteryCapacity:
postCurvedBattery
_queue
_fullPowerToken
_pluggedInToken
_curvedBatteryCapacityToken
_fullPowerTokenRegistered
_pluggedInTokenRegistered
_curvedBatterCapacityTokenRegistered
_removePreferencesObserver
defaultCenter
removeObserver:
dealloc
setHideACPower:
setLowBatteryLevel:
postNotificationName:object:userInfo:
postNotificationName:object:
isOnAC
isOnACForUI
isBatteryCharging
isConnectedToUnsupportedChargingAccessory
batteryCapacity
TB,R,N
Tf,R,N
_loadPreferences
_addPreferencesObserver
updateBatteryState:
logAWDMetric
setIsConnectedToUnsupportedChargingAccessory:
batteryCapacityAsPercentage
setIsOnAC:
setIsOnACForUI:
setIsBatteryCharging:
setBatteryCapacity:
batteryStatusLogger
setBatteryStatusLogger:
supportsDetailedBatteryCapacity
setSupportsDetailedBatteryCapacity:
isConnectedToChargeIncapablePowerSource
setIsConnectedToChargeIncapablePowerSource:
hideACPower
lowBatteryLevel
chargerFamilyKey
setChargerFamilyKey:
_notifySender
_isOnAC
_isOnACForUI
_isBatteryCharging
_isConnectedToUnsupportedChargingAccessory
_supportsDetailedBatteryCapacity
_isConnectedToChargeIncapablePowerSource
_hideACPower
_batteryCapacity
_chargerFamilyKey
_batteryStatusLogger
_lowBatteryLevel
TB,N,V_isOnAC
TB,N,V_isOnACForUI
TB,N,V_isBatteryCharging
Tf,N,V_batteryCapacity
TB,N,V_supportsDetailedBatteryCapacity
TB,N,V_isConnectedToChargeIncapablePowerSource
TB,N,V_isConnectedToUnsupportedChargingAccessory
TB,V_hideACPower
Tq,V_lowBatteryLevel
Ti,N,V_chargerFamilyKey
T@"<CSLBatteryStatusLogger>",W,N,V_batteryStatusLogger
builderWithObject:ofExpectedClass:
appendBool:counterpart:
isEqual
builder
appendBool:
initWithCoverGestureEnabled:inactiveTapGestureEnabled:alwaysOnSwipeGestureEnabled:alwaysOnHoldGestureEnabled:alwaysOnTapThroughEnabled:alwaysOnSwipeThroughEnabled:alwaysOnHoldThroughEnabled:touchLocked:
builderWithObject:
appendBool:withName:ifEqualTo:
appendBool:withName:
build
mutableCopyWithZone:
_coverGestureEnabled
_inactiveTapGestureEnabled
_alwaysOnSwipeGestureEnabled
_alwaysOnHoldGestureEnabled
_alwaysOnTapThroughEnabled
_alwaysOnSwipeThroughEnabled
_alwaysOnHoldThroughEnabled
_touchLocked
coverGestureEnabled
TB,R,N,GisCoverGestureEnabled,V_coverGestureEnabled
inactiveTapGestureEnabled
TB,R,N,GisInactiveTapGestureEnabled,V_inactiveTapGestureEnabled
alwaysOnSwipeGestureEnabled
TB,R,N,GisAlwaysOnSwipeGestureEnabled,V_alwaysOnSwipeGestureEnabled
alwaysOnHoldGestureEnabled
TB,R,N,GisAlwaysOnHoldGestureEnabled,V_alwaysOnHoldGestureEnabled
alwaysOnTapThroughEnabled
TB,R,N,GisAlwaysOnTapThroughEnabled,V_alwaysOnTapThroughEnabled
alwaysOnSwipeThroughEnabled
TB,R,N,GisAlwaysOnSwipeThroughEnabled,V_alwaysOnSwipeThroughEnabled
alwaysOnHoldThroughEnabled
TB,R,N,GisAlwaysOnHoldThroughEnabled,V_alwaysOnHoldThroughEnabled
touchLocked
TB,R,N,GisTouchLocked,V_touchLocked
setCoverGestureEnabled:
setInactiveTapGestureEnabled:
setAlwaysOnSwipeGestureEnabled:
setAlwaysOnHoldGestureEnabled:
setAlwaysOnTapThroughEnabled:
setAlwaysOnSwipeThroughEnabled:
setAlwaysOnHoldThroughEnabled:
setTouchLocked:
TB,N,GisCoverGestureEnabled
TB,N,GisInactiveTapGestureEnabled
TB,N,GisAlwaysOnSwipeGestureEnabled
TB,N,GisAlwaysOnHoldGestureEnabled
TB,N,GisAlwaysOnTapThroughEnabled
TB,N,GisAlwaysOnSwipeThroughEnabled
TB,N,GisAlwaysOnHoldThroughEnabled
TB,N,GisTouchLocked
mainScreen
bounds
initWithFrame:
blackColor
setBackgroundColor:
center
setCenter:
setAnimating:
addSubview:
failSafeObliterate
activeDeviceSelectorBlock
getDevicesMatching:
firstObject
unpairWithDevice:shouldObliterate:operationHasBegun:
showResetFailureMessage
mainBundle
localizedStringForKey:value:table:
setText:
setTextAlignment:
setNumberOfLines:
systemOrangeColor
setTextColor:
setAlpha:
removeFromSuperview
showObliterationAlert
animateWithDuration:delay:options:animations:completion:
currentConditionsAllowObliteration:
initWithDelegate:
obliterateWithSpinnerInView:forceSWUpdate:
delegate
_view
_forceSWUpdate
_spinner
_delegate
T@"<CSLObliterationAlertProviding>",R,W,N,V_delegate
sharedController
setIdleSleepTimeout:
resetIdleTimerAndUndim:
setIdleSleepController:
startReceivingEvents
_lockButtonDown
_lockButtonUp
_menuButtonDown
_menuButtonUp
__handleHIDEvent:
_handleHIDEvent:
_hidEvent
isDisplayDim
shouldCheckInWithBackboard
registerAsSystemApp
_createStatusBarWithRequestedStyle:orientation:hidden:
_isSpringBoard
applicationWillOrderInContext:windowLevel:screen:
applicationDidOrderOutContext:screen:
_handlePhysicalButtonEvent:
idleSleepController
_idleSleepController
T@"PBAIdleSleepController",&,N,V_idleSleepController
weakObjectsHashTable
setDisplayDim:
_undimDisplayForce
_withLock:
removeObject:
allObjects
idleSleepController:displayWillSleep:
enumerateObjectsUsingBlock:
_callObservers:
_preventIdleSleep
_setHIDUILockedState:
_preventIdleSleepForNumberOfSeconds:
_allowIdleSleep
cancelPreviousPerformRequestsWithTarget:selector:object:
setPreventIdleSleep:forReason:
arrayWithObjects:count:
performSelector:withObject:afterDelay:inModes:
undimDisplay
_nextLockTimeDuration
dimDisplay
addObserver:
_userEventsDidIdle
_userEventOccurred
_userEventPresenceTimerExpired
_requestedUserEventNotificationOccurred
_startAllowingIdleTimer
idleSleepTimeout
allowIdleTimerToBeReset
setAllowIdleTimerToBeReset:
_observers
_hidProvider
_displayDim
_allowIdleTimerToBeReset
_idleSleepTimeout
TB,N,V_allowIdleTimerToBeReset
displayDim
TB,N,GisDisplayDim,V_displayDim
Td,N,V_idleSleepTimeout
defaultContext
bundleIdentifier
identityForIdentifier:
newSceneIdentityTokenForIdentity:
setDefaultSceneToken:
_newApplicationInitializationContext
_hostsSystemStatusBar
disablesFrontBoardImplicitWindowScenes
standardUserDefaults
dictionaryWithObjects:forKeys:count:
registerDefaults:
viewDidLoad
initWithActivityIndicatorStyle:
view
initialize
_isSecure
activate
setWindowLevel:
setRootViewController:
makeKeyAndVisible
mainDisplay
existingOverlayForDisplay:
dismiss
initWithMachServiceName:
setDelegate:
resume
setExportedObject:
prepareForDismissalWithCompletion:
interfaceWithProtocol:
setExportedInterface:
descriptorWithName:display:
initWithDescriptor:
present
listener:shouldAcceptNewConnection:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
window
setWindow:
T@"UIWindow",&,N
sceneManager
setSceneManager:
_listener
_window
_sceneManager
T@"CSLAlternateSystemAppSceneManager",&,N,V_sceneManager
T@"UIWindow",&,N,V_window
setShouldWaitForMigrator:
applicationProxyForIdentifier:
setRegisterAdditionalServicesBlock:
descriptorWithPage:usage:
builtinDisplay
nullDisplay
setWithObjects:
defaultSystemPredicate
setDisplays:
mutableCopy
descriptors
unionSet:
setDescriptors:
systemTarget
ruleForDispatchingDiscreteEventsMatchingPredicate:toTarget:
defaultFocusPredicate
minusSet:
keyboardFocusTarget
dispatchDiscreteEventsForReason:withRules:
setSystemAppControlsFocusOnMainDisplay:
dispatchingAssertion
setDispatchingAssertion:
_dispatchingAssertion
T@"<BSInvalidatable>",&,N,V_dispatchingAssertion
mainConfiguration
initWithDisplayConfiguration:
initWithIdentifier:priority:appearanceStyle:rootWindow:
raise:format:
_createInitialAppScene
sceneTransformer
definition
setIdentity:
localIdentity
setClientIdentity:
specification
setSpecification:
parametersForSpecification:
setDisplayConfiguration:
_referenceBounds
setFrame:
setLevel:
setForeground:
setInterfaceOrientation:
isUISubclass
setDeviceOrientationEventsEnabled:
currentVariant
updateSettingsWithBlock:
settings
interfaceOrientation
setStatusBarStyle:
updateClientSettingsWithBlock:
createSceneWithDefinition:initialParameters:
presentationBinder
addScene:
transformer
isActivated
setPresentationBinder:
rootWindow
setRootWindow:
_activated
_presentationBinder
_rootWindow
T@"UIRootWindowScenePresentationBinder",&,N,V_presentationBinder
T@"UIRootSceneWindow",&,N,V_rootWindow
T@"UIMutableTransformer",R,N
activated
TB,R,N,GisActivated,V_activated
AWDCarouselBatteryACStatusChanged
NSCopying
CSLHIDUISensorModeProvider
CSLHIDUISensorModeProviding
NSObject
_IOSSHLBatteryNotifySender
IOSSHLBatteryStatus
IOSSHLBatteryStatusProviding
CSLHIDUISensorMode
NSMutableCopying
CSLMutableHIDUISensorMode
CSLObliterator
RBApplication
PBAIdleSleepController
CSLAlternateSystemShellApplication
RBMainViewController
RBSecureWindow
CSLSReBoardServiceInterface
RBAppDelegate
NSXPCListenerDelegate
UIApplicationDelegate
PBAHIDEventController
CSLAlternateSystemAppSceneManager
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
B16@0:8
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
{?="timestamp"b1"onAC"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"CSLHIDUISensorMode"16@0:8
v16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CSLHIDUISensorMode"
@"<BSInvalidatable>"
@"NSObject<OS_dispatch_queue>"
f16@0:8
i16@0:8
v20@0:8f16
q16@0:8
v24@0:8q16
v20@0:8i16
@"_IOSSHLBatteryNotifySender"
@"<CSLBatteryStatusLogger>"
@48@0:8B16B20B24B28B32B36B40B44
B20@0:8B16
@24@0:8@16
v28@0:8@16B24
@"UIView"
@"PUICActivityIndicatorView"
@"<CSLObliterationAlertProviding>"
v36@0:8q16q24B32
v36@0:8@16f24@28
v32@0:8@16@24
B24@0:8^{__IOHIDEvent=}16
v24@0:8^{__IOHIDEvent=}16
@"PBAIdleSleepController"
v24@0:8@?16
v28@0:8B16@20
d16@0:8
v24@0:8d16
@"NSHashTable"
@"CSLHIDUISensorModeProvider"
Vv24@0:8@?16
Vv24@0:8@?<v@?>16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
@32@0:8@16@24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"NSXPCListener"
@"UIWindow"
@"CSLAlternateSystemAppSceneManager"
@"UIRootWindowScenePresentationBinder"
@"UIRootSceneWindow"
updated sensor mode to %@
########## DBG_CODE: (%d)
Triggering fail safe obliteration
Triggering unpair with device %@
-unpairWithDevice returns Error %@
Obliteration failed to start: '%@'
Unpairing/Obliteration has begun
Dimming display
disabling idle timer
Setting next autolock duration to %f%@
User Events Did Idle
User Events Did UnIdle
User Events Occurred
User Events Presence Timer Expired
User Event Notification fired
Got notification that backboardd is done doing setup work and is ready for the idle timer to be reset
prepare for dismissal
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>com.apple.CommCenter.Preferences-delete</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.datamigrator</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.stash.access</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.ids.registration-reset</key>
<true/>
<key>com.apple.private.kernel.darkboot</key>
<true/>
<key>com.apple.private.security.no-sandbox</key>
<true/>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
zPLR
@(#)PROGRAM:ReBoard  PROJECT:Carousel-1110.2.18
com.apple.system.prefs.changed
%@ %@
timestamp
onAC
CSLHIDUISensorMode
CoverGestureEnabled
WakeOnTapEnabled
WakeOnSwipeEnabled
WakeOnLongPressEnabled
WakeOnTapThroughEnabled
WakeOnSwipeThroughEnabled
WakeOnLongPressThroughEnabled
v16@?0@"BKSMutableHIDUISensorMode"8
kIOSSHLUnsupportedChargingAccessoryStatusChangedNotification
v8@?0
SBHideACPower
SBLowBatteryLevel
B8@?0
coverGestureEnabled
touchLocked
inactiveTapGestureEnabled
alwaysOnSwipeGestureEnabled
alwaysOnHoldGestureEnabled
alwaysOnTapThroughEnabled
alwaysOnSwipeThroughEnabled
v16@?0@"NSError"8
RESET_FAILED_MESSAGE
General
v12@?0B8
backlight
v32@?0@"<PBAIdleSleepObserving>"8Q16^B24
 retroactively
MaximumProgressPercent
ProgressDuration
ReBoardDismissalOverlay
v16@?0@"FBMutableSystemShellInitializationOptions"8
PBAHIDEventController
UIRootSceneWindow-%@-%p
-activate called on %@ that is already activated
v16@?0@"FBSMutableSceneSettings"8
v16@?0@"FBSMutableSceneClientSettings"8
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
numberWithBool:
allocWithZone:
init
isMemberOfClass:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
setOnAC:
setHasOnAC:
hasOnAC
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
timestamp
onAC
_timestamp
_onAC
_has
TB,N
TQ,N,V_timestamp
TB,N,V_onAC
copy
isTouchLocked
setDigitizerEnabled:
setProximityDetectionMode:
isCoverGestureEnabled
addObject:
isInactiveTapGestureEnabled
isAlwaysOnSwipeGestureEnabled
isAlwaysOnHoldGestureEnabled
isAlwaysOnTapThroughEnabled
isAlwaysOnSwipeThroughEnabled
isAlwaysOnHoldThroughEnabled
setMultitouchHostStateKeys:
buildModeForReason:builder:
sharedInstance
requestUISensorMode:
invalidate
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
sensorMode
T@"CSLHIDUISensorMode",R,N
updateSensorMode:
.cxx_destruct
_lock
_sensorMode
_sensorModeAssertion
setStateForFullPower:
postFullPower
setStateForPluggedIn:
postPluggedIn
setStateForCurvedBatteryCapacity:
postCurvedBattery
_queue
_fullPowerToken
_pluggedInToken
_curvedBatteryCapacityToken
_fullPowerTokenRegistered
_pluggedInTokenRegistered
_curvedBatterCapacityTokenRegistered
_removePreferencesObserver
defaultCenter
removeObserver:
dealloc
setHideACPower:
setLowBatteryLevel:
postNotificationName:object:userInfo:
postNotificationName:object:
isOnAC
isOnACForUI
isBatteryCharging
isConnectedToUnsupportedChargingAccessory
batteryCapacity
TB,R,N
Tf,R,N
_loadPreferences
_addPreferencesObserver
updateBatteryState:
logAWDMetric
setIsConnectedToUnsupportedChargingAccessory:
batteryCapacityAsPercentage
setIsOnAC:
setIsOnACForUI:
setIsBatteryCharging:
setBatteryCapacity:
batteryStatusLogger
setBatteryStatusLogger:
supportsDetailedBatteryCapacity
setSupportsDetailedBatteryCapacity:
isConnectedToChargeIncapablePowerSource
setIsConnectedToChargeIncapablePowerSource:
hideACPower
lowBatteryLevel
chargerFamilyKey
setChargerFamilyKey:
_notifySender
_isOnAC
_isOnACForUI
_isBatteryCharging
_isConnectedToUnsupportedChargingAccessory
_supportsDetailedBatteryCapacity
_isConnectedToChargeIncapablePowerSource
_hideACPower
_batteryCapacity
_chargerFamilyKey
_batteryStatusLogger
_lowBatteryLevel
TB,N,V_isOnAC
TB,N,V_isOnACForUI
TB,N,V_isBatteryCharging
Tf,N,V_batteryCapacity
TB,N,V_supportsDetailedBatteryCapacity
TB,N,V_isConnectedToChargeIncapablePowerSource
TB,N,V_isConnectedToUnsupportedChargingAccessory
TB,V_hideACPower
Tq,V_lowBatteryLevel
Ti,N,V_chargerFamilyKey
T@"<CSLBatteryStatusLogger>",W,N,V_batteryStatusLogger
builderWithObject:ofExpectedClass:
appendBool:counterpart:
isEqual
builder
appendBool:
initWithCoverGestureEnabled:inactiveTapGestureEnabled:alwaysOnSwipeGestureEnabled:alwaysOnHoldGestureEnabled:alwaysOnTapThroughEnabled:alwaysOnSwipeThroughEnabled:alwaysOnHoldThroughEnabled:touchLocked:
builderWithObject:
appendBool:withName:ifEqualTo:
appendBool:withName:
build
mutableCopyWithZone:
_coverGestureEnabled
_inactiveTapGestureEnabled
_alwaysOnSwipeGestureEnabled
_alwaysOnHoldGestureEnabled
_alwaysOnTapThroughEnabled
_alwaysOnSwipeThroughEnabled
_alwaysOnHoldThroughEnabled
_touchLocked
coverGestureEnabled
TB,R,N,GisCoverGestureEnabled,V_coverGestureEnabled
inactiveTapGestureEnabled
TB,R,N,GisInactiveTapGestureEnabled,V_inactiveTapGestureEnabled
alwaysOnSwipeGestureEnabled
TB,R,N,GisAlwaysOnSwipeGestureEnabled,V_alwaysOnSwipeGestureEnabled
alwaysOnHoldGestureEnabled
TB,R,N,GisAlwaysOnHoldGestureEnabled,V_alwaysOnHoldGestureEnabled
alwaysOnTapThroughEnabled
TB,R,N,GisAlwaysOnTapThroughEnabled,V_alwaysOnTapThroughEnabled
alwaysOnSwipeThroughEnabled
TB,R,N,GisAlwaysOnSwipeThroughEnabled,V_alwaysOnSwipeThroughEnabled
alwaysOnHoldThroughEnabled
TB,R,N,GisAlwaysOnHoldThroughEnabled,V_alwaysOnHoldThroughEnabled
touchLocked
TB,R,N,GisTouchLocked,V_touchLocked
setCoverGestureEnabled:
setInactiveTapGestureEnabled:
setAlwaysOnSwipeGestureEnabled:
setAlwaysOnHoldGestureEnabled:
setAlwaysOnTapThroughEnabled:
setAlwaysOnSwipeThroughEnabled:
setAlwaysOnHoldThroughEnabled:
setTouchLocked:
TB,N,GisCoverGestureEnabled
TB,N,GisInactiveTapGestureEnabled
TB,N,GisAlwaysOnSwipeGestureEnabled
TB,N,GisAlwaysOnHoldGestureEnabled
TB,N,GisAlwaysOnTapThroughEnabled
TB,N,GisAlwaysOnSwipeThroughEnabled
TB,N,GisAlwaysOnHoldThroughEnabled
TB,N,GisTouchLocked
mainScreen
bounds
initWithFrame:
blackColor
setBackgroundColor:
center
setCenter:
setAnimating:
addSubview:
failSafeObliterate
activeDeviceSelectorBlock
getDevicesMatching:
firstObject
unpairWithDevice:shouldObliterate:operationHasBegun:
showResetFailureMessage
mainBundle
localizedStringForKey:value:table:
setText:
setTextAlignment:
setNumberOfLines:
systemOrangeColor
setTextColor:
setAlpha:
removeFromSuperview
showObliterationAlert
animateWithDuration:delay:options:animations:completion:
currentConditionsAllowObliteration:
initWithDelegate:
obliterateWithSpinnerInView:forceSWUpdate:
delegate
_view
_forceSWUpdate
_spinner
_delegate
T@"<CSLObliterationAlertProviding>",R,W,N,V_delegate
sharedController
setIdleSleepTimeout:
resetIdleTimerAndUndim:
setIdleSleepController:
startReceivingEvents
_lockButtonDown
_lockButtonUp
_menuButtonDown
_menuButtonUp
__handleHIDEvent:
_handleHIDEvent:
_hidEvent
isDisplayDim
shouldCheckInWithBackboard
registerAsSystemApp
_createStatusBarWithRequestedStyle:orientation:hidden:
_isSpringBoard
applicationWillOrderInContext:windowLevel:screen:
applicationDidOrderOutContext:screen:
_handlePhysicalButtonEvent:
idleSleepController
_idleSleepController
T@"PBAIdleSleepController",&,N,V_idleSleepController
weakObjectsHashTable
setDisplayDim:
_undimDisplayForce
_withLock:
removeObject:
allObjects
idleSleepController:displayWillSleep:
enumerateObjectsUsingBlock:
_callObservers:
_preventIdleSleep
_setHIDUILockedState:
_preventIdleSleepForNumberOfSeconds:
_allowIdleSleep
cancelPreviousPerformRequestsWithTarget:selector:object:
setPreventIdleSleep:forReason:
arrayWithObjects:count:
performSelector:withObject:afterDelay:inModes:
undimDisplay
_nextLockTimeDuration
dimDisplay
addObserver:
_userEventsDidIdle
_userEventOccurred
_userEventPresenceTimerExpired
_requestedUserEventNotificationOccurred
_startAllowingIdleTimer
idleSleepTimeout
allowIdleTimerToBeReset
setAllowIdleTimerToBeReset:
_observers
_hidProvider
_displayDim
_allowIdleTimerToBeReset
_idleSleepTimeout
TB,N,V_allowIdleTimerToBeReset
displayDim
TB,N,GisDisplayDim,V_displayDim
Td,N,V_idleSleepTimeout
defaultContext
bundleIdentifier
identityForIdentifier:
newSceneIdentityTokenForIdentity:
setDefaultSceneToken:
_newApplicationInitializationContext
_hostsSystemStatusBar
disablesFrontBoardImplicitWindowScenes
standardUserDefaults
dictionaryWithObjects:forKeys:count:
registerDefaults:
viewDidLoad
initWithActivityIndicatorStyle:
view
initialize
_isSecure
activate
setWindowLevel:
setRootViewController:
makeKeyAndVisible
mainDisplay
existingOverlayForDisplay:
dismiss
initWithMachServiceName:
setDelegate:
resume
setExportedObject:
prepareForDismissalWithCompletion:
interfaceWithProtocol:
setExportedInterface:
descriptorWithName:display:
initWithDescriptor:
present
listener:shouldAcceptNewConnection:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
window
setWindow:
T@"UIWindow",&,N
sceneManager
setSceneManager:
_listener
_window
_sceneManager
T@"CSLAlternateSystemAppSceneManager",&,N,V_sceneManager
T@"UIWindow",&,N,V_window
setShouldWaitForMigrator:
applicationProxyForIdentifier:
setRegisterAdditionalServicesBlock:
descriptorWithPage:usage:
builtinDisplay
nullDisplay
setWithObjects:
defaultSystemPredicate
setDisplays:
mutableCopy
descriptors
unionSet:
setDescriptors:
systemTarget
ruleForDispatchingDiscreteEventsMatchingPredicate:toTarget:
defaultFocusPredicate
minusSet:
keyboardFocusTarget
dispatchDiscreteEventsForReason:withRules:
setSystemAppControlsFocusOnMainDisplay:
dispatchingAssertion
setDispatchingAssertion:
_dispatchingAssertion
T@"<BSInvalidatable>",&,N,V_dispatchingAssertion
mainConfiguration
initWithDisplayConfiguration:
initWithIdentifier:priority:appearanceStyle:rootWindow:
raise:format:
_createInitialAppScene
sceneTransformer
definition
setIdentity:
localIdentity
setClientIdentity:
specification
setSpecification:
parametersForSpecification:
setDisplayConfiguration:
_referenceBounds
setFrame:
setLevel:
setForeground:
setInterfaceOrientation:
isUISubclass
setDeviceOrientationEventsEnabled:
currentVariant
updateSettingsWithBlock:
settings
interfaceOrientation
setStatusBarStyle:
updateClientSettingsWithBlock:
createSceneWithDefinition:initialParameters:
presentationBinder
addScene:
transformer
isActivated
setPresentationBinder:
rootWindow
setRootWindow:
_activated
_presentationBinder
_rootWindow
T@"UIRootWindowScenePresentationBinder",&,N,V_presentationBinder
T@"UIRootSceneWindow",&,N,V_rootWindow
T@"UIMutableTransformer",R,N
activated
TB,R,N,GisActivated,V_activated
AWDCarouselBatteryACStatusChanged
NSCopying
CSLHIDUISensorModeProvider
CSLHIDUISensorModeProviding
NSObject
_IOSSHLBatteryNotifySender
IOSSHLBatteryStatus
IOSSHLBatteryStatusProviding
CSLHIDUISensorMode
NSMutableCopying
CSLMutableHIDUISensorMode
CSLObliterator
RBApplication
PBAIdleSleepController
CSLAlternateSystemShellApplication
RBMainViewController
RBSecureWindow
CSLSReBoardServiceInterface
RBAppDelegate
NSXPCListenerDelegate
UIApplicationDelegate
PBAHIDEventController
CSLAlternateSystemAppSceneManager
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
B16@0:8
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
{?="timestamp"b1"onAC"b1}
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"CSLHIDUISensorMode"16@0:8
v16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CSLHIDUISensorMode"
@"<BSInvalidatable>"
@"NSObject<OS_dispatch_queue>"
f16@0:8
i16@0:8
v20@0:8f16
q16@0:8
v24@0:8q16
v20@0:8i16
@"_IOSSHLBatteryNotifySender"
@"<CSLBatteryStatusLogger>"
@48@0:8B16B20B24B28B32B36B40B44
B20@0:8B16
@24@0:8@16
v28@0:8@16B24
@"UIView"
@"PUICActivityIndicatorView"
@"<CSLObliterationAlertProviding>"
v36@0:8q16q24B32
v36@0:8@16f24@28
v32@0:8@16@24
B24@0:8^{__IOHIDEvent=}16
v24@0:8^{__IOHIDEvent=}16
@"PBAIdleSleepController"
v24@0:8@?16
v28@0:8B16@20
d16@0:8
v24@0:8d16
@"NSHashTable"
@"CSLHIDUISensorModeProvider"
Vv24@0:8@?16
Vv24@0:8@?<v@?>16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
@32@0:8@16@24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"NSXPCListener"
@"UIWindow"
@"CSLAlternateSystemAppSceneManager"
@"UIRootWindowScenePresentationBinder"
@"UIRootSceneWindow"
updated sensor mode to %@
########## DBG_CODE: (%d)
Triggering fail safe obliteration
Triggering unpair with device %@
-unpairWithDevice returns Error %@
Obliteration failed to start: '%@'
Unpairing/Obliteration has begun
Dimming display
disabling idle timer
Setting next autolock duration to %f%@
User Events Did Idle
User Events Did UnIdle
User Events Occurred
User Events Presence Timer Expired
User Event Notification fired
Got notification that backboardd is done doing setup work and is ready for the idle timer to be reset
prepare for dismissal
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>com.apple.CommCenter.Preferences-delete</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.datamigrator</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.stash.access</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.ids.registration-reset</key>
<true/>
<key>com.apple.private.kernel.darkboot</key>
<true/>
<key>com.apple.private.security.no-sandbox</key>
<true/>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
