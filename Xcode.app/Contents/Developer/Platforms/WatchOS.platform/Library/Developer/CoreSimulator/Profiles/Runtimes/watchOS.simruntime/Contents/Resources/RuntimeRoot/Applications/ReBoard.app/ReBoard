init
sharedController
setIdleSleepTimeout:
resetIdleTimerAndUndim:
setIdleSleepController:
startReceivingEvents
_lockButtonDown
_lockButtonUp
_menuButtonDown
_menuButtonUp
__handleHIDEvent:
_handleHIDEvent:
_hidEvent
isDisplayDim
shouldCheckInWithBackboard
registerAsSystemApp
_createStatusBarWithRequestedStyle:orientation:hidden:
_isSpringBoard
applicationWillOrderInContext:windowLevel:screen:
applicationDidOrderOutContext:screen:
_handlePhysicalButtonEvent:
.cxx_destruct
idleSleepController
_idleSleepController
weakObjectsHashTable
setDisplayDim:
_undimDisplayForce
sharedInstance
addObserver:
removeObserver:
dealloc
addObject:
_withLock:
removeObject:
allObjects
idleSleepController:displayWillSleep:
enumerateObjectsUsingBlock:
_callObservers:
_preventIdleSleep
_setHIDUILockedState:
_preventIdleSleepForNumberOfSeconds:
_allowIdleSleep
cancelPreviousPerformRequestsWithTarget:selector:object:
setPreventIdleSleep:forReason:
arrayWithObjects:count:
performSelector:withObject:afterDelay:inModes:
undimDisplay
_nextLockTimeDuration
dimDisplay
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
powerMonitorSystemSleepRequested:
powerMonitorSystemSleepRequestAborted:
powerMonitorSystemWillSleep:
powerMonitorSystemWillWakeFromSleep:
powerMonitorSystemDidWakeFromSleep:
_userEventsDidIdle
_userEventOccurred
_userEventPresenceTimerExpired
_requestedUserEventNotificationOccurred
_startAllowingIdleTimer
idleSleepTimeout
allowIdleTimerToBeReset
setAllowIdleTimerToBeReset:
_observers
_lock
_displayDim
_allowIdleTimerToBeReset
_idleSleepTimeout
standardUserDefaults
numberWithInteger:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
registerDefaults:
viewDidLoad
initWithActivityIndicatorStyle:
view
bounds
setCenter:
addSubview:
setAnimating:
initialize
_isSecure
mainScreen
initWithFrame:
setWindowLevel:
blackColor
setBackgroundColor:
setRootViewController:
makeKeyAndVisible
mainDisplay
existingOverlayForDisplay:
dismiss
initWithMachServiceName:
setDelegate:
resume
setExportedObject:
prepareForDismissalWithCompletion:
interfaceWithProtocol:
setExportedInterface:
descriptorWithName:display:
initWithDescriptor:
present
listener:shouldAcceptNewConnection:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
window
setWindow:
_listener
_window
descriptorWithPage:usage:
builtinDisplay
nullDisplay
setWithObjects:
defaultSystemPredicate
setDisplays:
mutableCopy
descriptors
unionSet:
setDescriptors:
systemTarget
ruleForDispatchingDiscreteEventsMatchingPredicate:toTarget:
defaultFocusPredicate
minusSet:
keyboardFocusTarget
dispatchDiscreteEventsForReason:withRules:
setSystemAppControlsFocusOnMainDisplay:
dispatchingAssertion
setDispatchingAssertion:
_dispatchingAssertion
RBApplication
PBAIdleSleepController
BSPowerMonitorObserver
NSObject
RBMainViewController
RBSecureWindow
CSLSReBoardServiceInterface
RBAppDelegate
NSXPCListenerDelegate
UIApplicationDelegate
PBAHIDEventController
B16@0:8
@16@0:8
v36@0:8q16q24B32
v36@0:8@16f24@28
v32@0:8@16@24
B24@0:8^{__IOHIDEvent=}16
v24@0:8^{__IOHIDEvent=}16
B24@0:8@16
v16@0:8
v24@0:8@16
@"PBAIdleSleepController"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B24@0:8@"BSPowerMonitor"16
v24@0:8@"BSPowerMonitor"16
v24@0:8@?16
v20@0:8B16
v20@0:8f16
v28@0:8B16@20
d16@0:8
v24@0:8d16
@"NSHashTable"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
Vv24@0:8@?16
Vv24@0:8@?<v@?>16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"NSXPCListener"
@"UIWindow"
@"<BSInvalidatable>"
idleSleepController
T@"PBAIdleSleepController",&,N,V_idleSleepController
backlight
v8@?0
v32@?0@"<PBAIdleSleepObserving>"8Q16^B24
 retroactively
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
allowIdleTimerToBeReset
TB,N,V_allowIdleTimerToBeReset
displayDim
TB,N,GisDisplayDim,V_displayDim
idleSleepTimeout
Td,N,V_idleSleepTimeout
MaximumProgressPercent
ProgressDuration
ReBoardDismissalOverlay
window
T@"UIWindow",&,N
T@"UIWindow",&,N,V_window
PBAHIDEventController
dispatchingAssertion
T@"<BSInvalidatable>",&,N,V_dispatchingAssertion
Dimming display
Got kIOMessageCanSystemSleep
Got kIOMessageSystemWillNotSleep
Got kIOMessageSystemWillSleep
Got kIOMessageSystemWillPowerOn
Got kIOMessageSystemHasPoweredOn
disabling idle timer
Setting next autolock duration to %f%@
User Events Did Idle
User Events Did UnIdle
User Events Occurred
User Events Presence Timer Expired
User Event Notification fired
Got notification that backboardd is done doing setup work and is ready for the idle timer to be reset
prepare for dismissal
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>com.apple.CommCenter.Preferences-delete</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.datamigrator</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.ids.registration-reset</key>
<true/>
<key>com.apple.private.kernel.darkboot</key>
<true/>
<key>com.apple.private.security.no-sandbox</key>
<true/>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
zPLR
