com.apple.system.prefs.changed
%@ %@
timestamp
onAC
hasTimestamp
TB,N
TQ,N,V_timestamp
hasOnAC
TB,N,V_onAC
kIOSSHLUnsupportedChargingAccessoryStatusChangedNotification
v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
isOnAC
TB,R,N
isOnACForUI
isBatteryCharging
isConnectedToUnsupportedChargingAccessory
batteryCapacity
Tf,R,N
TB,N,V_isOnAC
TB,N,V_isOnACForUI
TB,N,V_isBatteryCharging
Tf,N,V_batteryCapacity
supportsDetailedBatteryCapacity
TB,N,V_supportsDetailedBatteryCapacity
isConnectedToChargeIncapablePowerSource
TB,N,V_isConnectedToChargeIncapablePowerSource
TB,N,V_isConnectedToUnsupportedChargingAccessory
hideACPower
TB,V_hideACPower
lowBatteryLevel
Tq,V_lowBatteryLevel
chargerFamilyKey
Ti,N,V_chargerFamilyKey
batteryStatusLogger
T@"<CSLBatteryStatusLogger>",W,N,V_batteryStatusLogger
SBHideACPower
SBLowBatteryLevel
v16@?0@"NSError"8
RESET_FAILED_MESSAGE
General
v12@?0B8
delegate
T@"<CSLObliterationAlertProviding>",R,W,N,V_delegate
idleSleepController
T@"PBAIdleSleepController",&,N,V_idleSleepController
backlight
v32@?0@"<PBAIdleSleepObserving>"8Q16^B24
 retroactively
allowIdleTimerToBeReset
TB,N,V_allowIdleTimerToBeReset
displayDim
TB,N,GisDisplayDim,V_displayDim
idleSleepTimeout
Td,N,V_idleSleepTimeout
MaximumProgressPercent
ProgressDuration
ReBoardDismissalOverlay
window
T@"UIWindow",&,N
sceneManager
T@"CSLAlternateSystemAppSceneManager",&,N,V_sceneManager
T@"UIWindow",&,N,V_window
v16@?0@"FBMutableSystemShellInitializationOptions"8
PBAHIDEventController
dispatchingAssertion
T@"<BSInvalidatable>",&,N,V_dispatchingAssertion
UIRootSceneWindow-%@-%p
-activate called on %@ that is already activated
v16@?0@"FBSMutableSceneSettings"8
v16@?0@"FBSMutableSceneClientSettings"8
presentationBinder
T@"UIRootWindowScenePresentationBinder",&,N,V_presentationBinder
rootWindow
T@"UIRootSceneWindow",&,N,V_rootWindow
transformer
T@"UIMutableTransformer",R,N
activated
TB,R,N,GisActivated,V_activated
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
numberWithBool:
allocWithZone:
init
isMemberOfClass:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
setOnAC:
setHasOnAC:
hasOnAC
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
timestamp
onAC
_timestamp
_onAC
_has
setStateForFullPower:
postFullPower
setStateForPluggedIn:
postPluggedIn
setStateForCurvedBatteryCapacity:
postCurvedBattery
.cxx_destruct
_queue
_fullPowerToken
_pluggedInToken
_curvedBatteryCapacityToken
_fullPowerTokenRegistered
_pluggedInTokenRegistered
_curvedBatterCapacityTokenRegistered
_removePreferencesObserver
defaultCenter
removeObserver:
dealloc
setHideACPower:
setLowBatteryLevel:
postNotificationName:object:userInfo:
postNotificationName:object:
sharedInstance
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
isOnAC
isOnACForUI
isBatteryCharging
isConnectedToUnsupportedChargingAccessory
batteryCapacity
_loadPreferences
_addPreferencesObserver
updateBatteryState:
logAWDMetric
setIsConnectedToUnsupportedChargingAccessory:
batteryCapacityAsPercentage
setIsOnAC:
setIsOnACForUI:
setIsBatteryCharging:
setBatteryCapacity:
batteryStatusLogger
setBatteryStatusLogger:
supportsDetailedBatteryCapacity
setSupportsDetailedBatteryCapacity:
isConnectedToChargeIncapablePowerSource
setIsConnectedToChargeIncapablePowerSource:
hideACPower
lowBatteryLevel
chargerFamilyKey
setChargerFamilyKey:
_notifySender
_isOnAC
_isOnACForUI
_isBatteryCharging
_isConnectedToUnsupportedChargingAccessory
_supportsDetailedBatteryCapacity
_isConnectedToChargeIncapablePowerSource
_hideACPower
_batteryCapacity
_chargerFamilyKey
_batteryStatusLogger
_lowBatteryLevel
mainScreen
bounds
initWithFrame:
blackColor
setBackgroundColor:
center
setCenter:
setAnimating:
addSubview:
failSafeObliterate
activeDeviceSelectorBlock
getDevicesMatching:
firstObject
unpairWithDevice:shouldObliterate:operationHasBegun:
showResetFailureMessage
mainBundle
localizedStringForKey:value:table:
setText:
setTextAlignment:
setNumberOfLines:
systemOrangeColor
setTextColor:
setAlpha:
removeFromSuperview
showObliterationAlert
animateWithDuration:delay:options:animations:completion:
currentConditionsAllowObliteration:
initWithDelegate:
obliterateWithSpinnerInView:forceSWUpdate:
delegate
_view
_forceSWUpdate
_spinner
_delegate
sharedController
setIdleSleepTimeout:
resetIdleTimerAndUndim:
setIdleSleepController:
startReceivingEvents
_lockButtonDown
_lockButtonUp
_menuButtonDown
_menuButtonUp
__handleHIDEvent:
_handleHIDEvent:
_hidEvent
isDisplayDim
shouldCheckInWithBackboard
registerAsSystemApp
_createStatusBarWithRequestedStyle:orientation:hidden:
_isSpringBoard
applicationWillOrderInContext:windowLevel:screen:
applicationDidOrderOutContext:screen:
_handlePhysicalButtonEvent:
idleSleepController
_idleSleepController
weakObjectsHashTable
setDisplayDim:
_undimDisplayForce
addObserver:
addObject:
_withLock:
removeObject:
allObjects
idleSleepController:displayWillSleep:
enumerateObjectsUsingBlock:
_callObservers:
_preventIdleSleep
_setHIDUILockedState:
_preventIdleSleepForNumberOfSeconds:
_allowIdleSleep
cancelPreviousPerformRequestsWithTarget:selector:object:
setPreventIdleSleep:forReason:
arrayWithObjects:count:
performSelector:withObject:afterDelay:inModes:
undimDisplay
_nextLockTimeDuration
dimDisplay
powerMonitorSystemSleepRequested:
powerMonitorSystemSleepRequestAborted:
powerMonitorSystemWillSleep:
powerMonitorSystemWillWakeFromSleep:
powerMonitorSystemDidWakeFromSleep:
_userEventsDidIdle
_userEventOccurred
_userEventPresenceTimerExpired
_requestedUserEventNotificationOccurred
_startAllowingIdleTimer
idleSleepTimeout
allowIdleTimerToBeReset
setAllowIdleTimerToBeReset:
_observers
_lock
_displayDim
_allowIdleTimerToBeReset
_idleSleepTimeout
defaultContext
bundleIdentifier
identityForIdentifier:
newSceneIdentityTokenForIdentity:
setDefaultSceneToken:
_newApplicationInitializationContext
_hostsSystemStatusBar
disablesFrontBoardImplicitWindowScenes
standardUserDefaults
dictionaryWithObjects:forKeys:count:
registerDefaults:
viewDidLoad
initWithActivityIndicatorStyle:
view
initialize
_isSecure
activate
setWindowLevel:
setRootViewController:
makeKeyAndVisible
mainDisplay
existingOverlayForDisplay:
dismiss
initWithMachServiceName:
setDelegate:
resume
setExportedObject:
prepareForDismissalWithCompletion:
interfaceWithProtocol:
setExportedInterface:
descriptorWithName:display:
initWithDescriptor:
present
listener:shouldAcceptNewConnection:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
window
setWindow:
sceneManager
setSceneManager:
_listener
_window
_sceneManager
setShouldWaitForMigrator:
applicationProxyForIdentifier:
setRegisterAdditionalServicesBlock:
descriptorWithPage:usage:
builtinDisplay
nullDisplay
setWithObjects:
defaultSystemPredicate
setDisplays:
mutableCopy
descriptors
unionSet:
setDescriptors:
systemTarget
ruleForDispatchingDiscreteEventsMatchingPredicate:toTarget:
defaultFocusPredicate
minusSet:
keyboardFocusTarget
dispatchDiscreteEventsForReason:withRules:
setSystemAppControlsFocusOnMainDisplay:
dispatchingAssertion
setDispatchingAssertion:
_dispatchingAssertion
mainConfiguration
initWithDisplayConfiguration:
initWithIdentifier:priority:appearanceStyle:rootWindow:
raise:format:
_createInitialAppScene
sceneTransformer
definition
setIdentity:
localIdentity
setClientIdentity:
specification
setSpecification:
parametersForSpecification:
setDisplayConfiguration:
_referenceBounds
setFrame:
setLevel:
setForeground:
setInterfaceOrientation:
isUISubclass
setDeviceOrientationEventsEnabled:
updateSettingsWithBlock:
settings
interfaceOrientation
setStatusBarStyle:
updateClientSettingsWithBlock:
createSceneWithDefinition:initialParameters:
presentationBinder
addScene:
transformer
isActivated
setPresentationBinder:
rootWindow
setRootWindow:
_activated
_presentationBinder
_rootWindow
AWDCarouselBatteryACStatusChanged
NSCopying
_IOSSHLBatteryNotifySender
IOSSHLBatteryStatus
IOSSHLBatteryStatusProviding
NSObject
CSLObliterator
RBApplication
PBAIdleSleepController
BSPowerMonitorObserver
CSLAlternateSystemShellApplication
RBMainViewController
RBSecureWindow
CSLSReBoardServiceInterface
RBAppDelegate
NSXPCListenerDelegate
UIApplicationDelegate
PBAHIDEventController
CSLAlternateSystemAppSceneManager
@24@0:8^{_NSZone=}16
v24@0:8Q16
v20@0:8B16
B16@0:8
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
{?="timestamp"b1"onAC"b1}
v16@0:8
@"NSObject<OS_dispatch_queue>"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
f16@0:8
i16@0:8
v20@0:8f16
q16@0:8
v24@0:8q16
v20@0:8i16
@"_IOSSHLBatteryNotifySender"
@"<CSLBatteryStatusLogger>"
B20@0:8B16
@24@0:8@16
v28@0:8@16B24
@"UIView"
@"PUICActivityIndicatorView"
@"<CSLObliterationAlertProviding>"
v36@0:8q16q24B32
v36@0:8@16f24@28
v32@0:8@16@24
B24@0:8^{__IOHIDEvent=}16
v24@0:8^{__IOHIDEvent=}16
@"PBAIdleSleepController"
B24@0:8@"BSPowerMonitor"16
v24@0:8@"BSPowerMonitor"16
v24@0:8@?16
v28@0:8B16@20
d16@0:8
v24@0:8d16
@"NSHashTable"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
Vv24@0:8@?16
Vv24@0:8@?<v@?>16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
@32@0:8@16@24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"NSXPCListener"
@"UIWindow"
@"CSLAlternateSystemAppSceneManager"
@"<BSInvalidatable>"
@"UIRootWindowScenePresentationBinder"
@"UIRootSceneWindow"
########## DBG_CODE: (%d)
Triggering fail safe obliteration
Triggering unpair with device %@
-unpairWithDevice returns Error %@
Obliteration failed to start: '%@'
Unpairing/Obliteration has begun
Dimming display
Got kIOMessageCanSystemSleep
Got kIOMessageSystemWillNotSleep
Got kIOMessageSystemWillSleep
Got kIOMessageSystemWillPowerOn
Got kIOMessageSystemHasPoweredOn
disabling idle timer
Setting next autolock duration to %f%@
User Events Did Idle
User Events Did UnIdle
User Events Occurred
User Events Presence Timer Expired
User Event Notification fired
Got notification that backboardd is done doing setup work and is ready for the idle timer to be reset
prepare for dismissal
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>com.apple.CommCenter.Preferences-delete</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.datamigrator</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.stash.access</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.ids.registration-reset</key>
<true/>
<key>com.apple.private.kernel.darkboot</key>
<true/>
<key>com.apple.private.security.no-sandbox</key>
<true/>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
zPLR
