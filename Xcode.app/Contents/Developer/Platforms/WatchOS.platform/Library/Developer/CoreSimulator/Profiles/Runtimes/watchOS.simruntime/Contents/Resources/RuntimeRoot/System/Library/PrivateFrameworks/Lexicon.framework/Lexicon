p?q`P@0 
>N7lexicon28UnigramsCompilationExceptionE
N7lexicon21SortKeyByteStatisticsE
N3nlp25ResourceCreationExceptionE
19_LXStaticCursorImpl
13_LXCursorImpl
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__117bad_function_callE
N7lexicon21NamedObjectRepositoryINS_18MutableLexiconImplEE8ListenerE
20_LXStaticLexiconImpl
14_LXLexiconImpl
NSt3__120__shared_ptr_emplaceIN7lexicon22RangedTokenIDGeneratorENS_9allocatorIS2_EEEE
NSt3__110shared_ptrIN7lexicon16TokenIDGeneratorEE27__shared_ptr_default_deleteIS2_NS1_22SharedTokenIDGeneratorEEE
NSt3__120__shared_ptr_pointerIPN7lexicon22SharedTokenIDGeneratorENS_10shared_ptrINS1_16TokenIDGeneratorEE27__shared_ptr_default_deleteIS5_S2_EENS_9allocatorIS2_EEEE
N7lexicon15CodebookDecoderE
N7lexicon16MetaFlagsDecoderE
N7lexicon15CodebookEncoderE
N7lexicon16MetaFlagsEncoderE
ZN7lexicon18MutableLexiconImpl24remove_entry_under_mutexERKNS_6StringEE3$_6
NSt3__110__function6__funcIZN7lexicon18MutableLexiconImpl24remove_entry_under_mutexERKNS2_6StringEE3$_6NS_9allocatorIS7_EEFN3WTF6RefPtrINS2_16DynamicTrieEntryEEEPSC_EEE
NSt3__110__function6__baseIFN3WTF6RefPtrIN7lexicon16DynamicTrieEntryEEEPS5_EEE
ZN7lexicon18MutableLexiconImpl17set_user_bitfieldEPK10__CFStringjE3$_5
NSt3__110__function6__funcIZN7lexicon18MutableLexiconImpl17set_user_bitfieldEPK10__CFStringjE3$_5NS_9allocatorIS7_EEFN3WTF6RefPtrINS2_16DynamicTrieEntryEEEPSC_EEE
ZN7lexicon18MutableLexiconImpl17update_meta_flagsEPK10__CFStringjE3$_4
NSt3__110__function6__funcIZN7lexicon18MutableLexiconImpl17update_meta_flagsEPK10__CFStringjE3$_4NS_9allocatorIS7_EEFN3WTF6RefPtrINS2_16DynamicTrieEntryEEEPSC_EEE
ZN7lexicon18MutableLexiconImpl23increment_penalty_countEPK10__CFStringiE3$_3
NSt3__110__function6__funcIZN7lexicon18MutableLexiconImpl23increment_penalty_countEPK10__CFStringiE3$_3NS_9allocatorIS7_EEFN3WTF6RefPtrINS2_16DynamicTrieEntryEEEPSC_EEE
ZN7lexicon18MutableLexiconImpl21increment_usage_countEPK10__CFStringiE3$_2
NSt3__110__function6__funcIZN7lexicon18MutableLexiconImpl21increment_usage_countEPK10__CFStringiE3$_2NS_9allocatorIS7_EEFN3WTF6RefPtrINS2_16DynamicTrieEntryEEEPSC_EEE
ZN7lexicon18MutableLexiconImpl13migrate_entryEPK8_LXEntryjdE3$_1
NSt3__110__function6__funcIZN7lexicon18MutableLexiconImpl13migrate_entryEPK8_LXEntryjdE3$_1NS_9allocatorIS7_EEFN3WTF6RefPtrINS2_16DynamicTrieEntryEEEPSC_EEE
ZN7lexicon18MutableLexiconImpl9add_entryEPK10__CFStringjE3$_0
NSt3__110__function6__funcIZN7lexicon18MutableLexiconImpl9add_entryEPK10__CFStringjE3$_0NS_9allocatorIS7_EEFN3WTF6RefPtrINS2_16DynamicTrieEntryEEEPSC_EEE
N7lexicon18MutableLexiconImplE
NSt3__110shared_ptrIN7lexicon18MutableLexiconImplEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__120__shared_ptr_pointerIPN7lexicon18MutableLexiconImplENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
N7lexicon20SortKeyByteConverterE
DynamicDictionary-
ZN7lexiconL26populate_missing_token_idsERNS_11DynamicTrieERNS_16TokenIDGeneratorEE3$_2
NSt3__110__function6__funcIZN7lexiconL26populate_missing_token_idsERNS2_11DynamicTrieERNS2_16TokenIDGeneratorEE3$_2NS_9allocatorIS7_EEFN3WTF6RefPtrINS2_16DynamicTrieEntryEEEPSC_EEE
ZN7lexiconL20add_serialized_entryERNS_11DynamicTrieERKN3WTF6RefPtrINS_16DynamicTrieEntryEEEE3$_1
NSt3__110__function6__funcIZN7lexiconL20add_serialized_entryERNS2_11DynamicTrieERKN3WTF6RefPtrINS2_16DynamicTrieEntryEEEE3$_1NS_9allocatorISB_EEFS8_PS7_EEE
NSt3__110shared_ptrIN7lexicon21DynamicDictionaryImplEE27__shared_ptr_default_deleteIS2_S2_EE
NSt3__120__shared_ptr_pointerIPN7lexicon21DynamicDictionaryImplENS_10shared_ptrIS2_E27__shared_ptr_default_deleteIS2_S2_EENS_9allocatorIS2_EEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
N7lexicon21DynamicLexiconWrapperE
NSt3__112codecvt_utf8IDsLm1114111ELNS_12codecvt_modeE0EEE
PFvP9UCollatorE
NSt3__120__shared_ptr_pointerIP9UCollatorPFvS2_ENS_9allocatorIS1_EEEE
NSt3__120__shared_ptr_emplaceI24LXTICompiledCollatorFileNS_9allocatorIS1_EEEE
N7lexicon13LegacyDecoderE
N7lexicon22SharedTokenIDGeneratorE
N7lexicon16TokenIDGeneratorE
N7lexicon24MutableLexiconCursorImplE
N7lexicon15EmptyRootCursorE
N7lexicon19DynamicLexiconProxyE
N7lexicon19DynamicLexiconProxy15LexiconListenerE
NSt3__120__shared_ptr_emplaceIN7lexicon19DynamicLexiconProxy15LexiconListenerENS_9allocatorIS3_EEEE
N7lexicon22RangedTokenIDGeneratorE
N7lexicon8DataFileE
N7lexicon14MappedDataFileE
N7lexicon16WritableDataFileE
N7lexicon16ReadOnlyDataFileE
ZN7lexicon12PathRegistry26createBaselineUnigramsPathEPK10__CFLocaleE3$_0
NSt3__110__function6__funcIZN7lexicon12PathRegistry26createBaselineUnigramsPathEPK10__CFLocaleE3$_0NS_9allocatorIS7_EEFbPK7__CFURLPK10__CFStringEEE
NSt3__110__function6__baseIFbPK7__CFURLPK10__CFStringEEE
ZN7lexicon12PathRegistry23createPhraseLexiconPathEPK10__CFLocaleE3$_1
NSt3__110__function6__funcIZN7lexicon12PathRegistry23createPhraseLexiconPathEPK10__CFLocaleE3$_1NS_9allocatorIS7_EEFbPK7__CFURLPK10__CFStringEEE
ZN7lexicon12PathRegistry23createDeltaUnigramsPathEPK10__CFLocaleE3$_2
NSt3__110__function6__funcIZN7lexicon12PathRegistry23createDeltaUnigramsPathEPK10__CFLocaleE3$_2NS_9allocatorIS7_EEFbPK7__CFURLPK10__CFStringEEE
com.apple.NLPUtils
TMPDIR
/tmp
/nlptemp-XXXXXX
File at URL is not readable
File at URL is not a valid property list
Property list at URL is not a dictionary
%@: %@
com.apple.NLPUtils.ErrorDomain
missing source path
StemSuffixTokenIDConverter
StaticDictionaryImpl
TIStaticDictionaryImpl.cpp
!m_baseline_trie.valid()
LXCursor.cpp
impl.valid()
LXCursorCreateByAdvancingWithUTF8
false && "missing cursor"
LXCursorCreateByAdvancingWithUTF16
LXCursorCreateByAdvancingWithUTF32
LXCursorEnumerateEntriesRecursivelyWithPolicy
false && "unsupported enumeration policy"
Cursor
LXCursorsAreEqual
false && "LXCursorsAreEqual not implemented yet"
TIHuffmanCoder.cpp
!is_compiled()
m_freq_table.size() >= 2
queue.size() == 1
std::find(cur_word.begin(), cur_word.end(), true) == cur_word.end()
B24@?0r^v8r^v16
write
is_compiled()
num_chars_in_depth[depth] <= 0xffff
bytes.size() == encoded_size(str)
encoded_size
bit_count > 0
Q12@?0I8
encoded_size_block_invoke
it != m_dictionary.end()
v12@?0I8
encode_block_invoke
build_lookup_tables
lo < hi && hi <= m_codebook.size()
longest_codeword_length > depth
codeword.size() > depth
sub_lo < sub_hi
entry.empty()
std::all_of(m_tables[table_index].entries.begin(), m_tables[table_index].entries.end(), ^(const HuffmanDecoderTableEntry &entry) { return !entry.empty(); })
HuffmanDecoderTable
TIHuffmanCoder.h
bl > 0
valid()
table.bit_length >= 1
WARNING:  Derivation of base form failed.  Expected %s (0x%s).  Got %s (0x%s).  
DefaultLogger
Common sort-key letter form table wrote 
 entries, expected 
parse_substitution_list
TIWord.cpp
count == base_surface_form.length()
Word
huffman_decoder
!sort_key_for_derivation.empty()
!common_letter_base.is_empty()
append_suffix
TITokenIDGetLexiconID(suffix.token_id()) == TITokenIDGetLexiconID(token_id())
TITokenIDGetLexiconID(combined_token_id) == TITokenIDGetLexiconID(token_id())
TIDynamicTrie.cpp
derefBase
new_count >= 0
merge
is_root() || lcp_size > 0
child1_key[0] != child2_key[0]
lcp_size < m_key_size
lcp_size == m_key_size
lcp_size < new_key.size()
B16@?0r^v8
DynamicTrieCursor
TIDynamicTrie.h
m_key_index < m_trie_node->key_size()
OVERRIDE: frequency similarity ratio: %f
OutputPath
Nothing to be done for %s (%s) 
Compiling %s (%s) 
writing version %x.%x, collator v%s, UCA v%s, %s
invalid index file at 
Allocating trie slots: magic_number=%u, root_usage_sum=%f
Trie size=
 bytes exceeds trie addressing capacity=
Reserved %d and wrote %d trie nodes in %u bytes
 DenseKeyCodes,
 CommonLetterForms,
 SubstitutionLists,
 PartialProbability,
 Percentile,
 UnigramRecordV2,
 VarByteTrieNodesV2,
 RelativeChildOffsetsV2,
 SkipDerivableUnigrams,
 PatriciaTrieRuns,
 CompressTrieTails,
 NonDerivablePrefixUnigrams,
 Exclude0FreqWords,
 AllSortKeysAreDistributive,
 SortKeysChangeRetroactively
 WriteWordIds
 Write4ByteUnigramOffsets
 HuffmanEncodeSurfaceForms
    Options: %s
writing: %s
Failed to open data file at 
 (errno=
Unigram index length=
 (try passing the '-4' option when compiling)
Wrote %d non-derivable words in %d bytes
WARNING: words [%s] and [%s] share word id %u; only former is stored in word id map
write_unigram_data
UnigramsCompiler.cpp
m_huffman_coder.is_compiled()
Inserted %d trie nodes.
Condensed %d nodes into patricia nodes.
Adding retro-active sort-key change hints!
    ALL surface-form sort-keys are distributive!
    %d surface-forms sort-keys are non-distributive.
    %d unigram sort-keys do not build cumulatively. They change retroactively!
    %d unigram base forms are not derivable from their sort-keys!
    %d surface forms don't align with their dict/sort keys.
Mapped %d sort key units to letter forms.
Non-empty surface-form substitution lists:
    %s -> %s            
    Frequency distribution:  Lowest=%lf, NextLowest=%lf, Highest=%lf
Squashing with root power %.3lf to achieve frequency target range %.0f to %.0f
convert_combining_classes_to_bits
classes.size() <= Word::MaxCombiningClassCount
I16@?0r^v8
convert_combining_classes_to_bits_block_invoke
class_ids.count(class_name)
Failed to open 
    Read %d unigrams.  Registered %lu words.
        Excluded %d 0-frequency neighbor-key macros.
        Merged %d duplicate surface forms.  %d shared sort-key strings remain
WARNING: Excluding word with null sortkey: %s
        Excluding word with 0 freq: %s
output_path
dat_path.ends_with(String(".dat"))
default_output_path
m_unigrams_path.find(String("/")) != String::NotAnIndex
words
input_filename.ends_with(String("words"))
SuffixCount
StemCount
Abbreviation
Name
StemSuffixClasses
NonStemSuffixCount
Locale
invalid stem suffix lexicon ID converter plist
locale %s
non-stem/suffix ID range 0-%u
%u stem/suffix classes:
  %s (%s): 
  %u: 
class ID %u; stem ID range %u-%u; suffix ID range %u-%u; stem/suffix ID range %u-%u
write of stem suffix data failed:
write of stem suffix data failed: unspecified error
collate_strings
LXUtils.cpp
false && "invalid return value from ucol_strcollUTF8()"
createLocale
false && "received unsupported CFType for locale"
createDeltaLexiconPath
CFArrayGetCount(delta_paths) == 1 && "multiple delta files are not currently supported"
safe_probability
0 <= numerator && numerator <= denominator && "invalid probability calculation"
com.apple.Lexicon.ErrorDomain
replaceFileWithBackup
replaceObjectError
failed to replace file: %@
NSFileOriginalItemLocationKey
CFURLReplaceObjectBackup.bak
LXLexicon.cpp
false && "cannot clear non-mutable dictionary"
false && "cannot remove entries from non-mutable dictionary"
set_user_bitfield
false && "cannot update entries in non-mutable dictionary"
update_meta_flags
increment_penalty_count
increment_usage_count
migrate_entry
false && "cannot migrate entries to non-mutable dictionary"
false && "cannot add entries to non-mutable dictionary"
serialized_size
false && "serialized_size() not yet supported for static lexicons"
Failed to load the immutable lexicon
locale
dataFile
deltaFiles
name
enableInternalStemSuffix
type
unigrams
phrases
munlock
false && "memory locking is not supported for this type"
mlock
creating static lexicon with locale=
, baseline_path=
, delta_path=
, stem_suffix_id_map_path=
Immutable
lstsfmap%@
Unigrams
LXLexicon
Could not determine the location of the base unigrams file, or one was not provided.
A name is required when creating a mutable lexicon
A name is required when creating a transient lexicon
LXLexiconCopyName
lexicon && "Missing lexicon"
LXLexiconGetSortkeyBytes
numBytes != NULL && "numBytes must not be NULL"
timestamp
penaltyCount
usageCount
flags
yyyy-MM-dd HH:mm:ss zzz
en_US
Validation
TIByteString.cpp
buffer_size <= std::numeric_limits<uint16_t>::max()
decode
LXCodebookCoder.cpp
false && "Invalid index for meta flags codebook"
encode
!m_flagsCodebook.empty()
false && "Unknown LXMetaFlags value"
compile
m_flagsCodebook.empty()
Compiling %lu distinct metadata flags values
train
false && "Metaflags codebook has already been compiled"
Too many metadata flag combinations to encode as an 8-bit integer
Corrupt input stream: failed to read meta flags codebook length
Corrupt input stream: cannot read meta flags codebook
Mutable
LXMutableLexiconImpl.cpp
new_entry->token_id() != kLXTokenIDUNK && "invalid tokenID for existing entry"
v24@?0^v8*16
m_collator
create_sort_key_converter_under_mutex
0123456789 
quicktype_exemplars
icu_exemplars
U_SUCCESS(error_code)
ulocdata
exemplar_set
Failed to create a mutable lexicon instance.
initialize
TIString.cpp
len <= m_capacity
ensure_capacity
m_capacity >= InitialCapacity
data_in_allocated_internal_buffer()
internalize_buffer
m_buffer_type == External
String
str && len <= strnlen(str, len) || len == 0
(str && pos + len <= strlen(str)) || pos + len == 0
 000000000000
operator=
!m_buffer || m_buffer != o.m_buffer || m_buffer_type == External
trim
e != NotAnIndex
e < size()
replace
pos + size_replaced <= size()
append
append_format
string_pseudofile
status >= 0
status == 0
SortKeyByteConverter
Attempted to write past bounds of sortkey buffer: UTF-32 char: (%#07x), locale code: (%s), partial sort key (%s)
SK=0x%s: %s
com.apple.Lexicon
Default
operator()
TIDynamicDictionaryImpl.cpp
false && "Unexpectedly missing trie entry"
DynamicDictionaryImpl
store_atomically
overwrite_dynamic_dict
!error
%s%d
Could not construct
nlptemp-
cleanup_nlp_temp_files
Could not convert
make_entry
tokenID != kLXTokenIDUNK && "generated an invalid tokenID"
child_bytes
TIStemSuffixDictionaryCursor.cpp
character_to_titlecase
TIStringFunctions.cpp
errorcode == U_ZERO_ERROR
character_to_lowercase
%02x
compute_sort_key
ustr_len <= ustr.size()
key_len <= key.size()
key[key_len - 1] == 0
collator
c != 0
key_len <= keyBuffer.size()
keyBuffer[key_len - 1] == 0
Keyboard.durableNamedEntity
Keyboard.recentNamedEntity
Keyboard.userContacts
kDefaultCustomCollator
kCustomTurkishCollator
kCustomNordicCollator
kCustomTamilCollator
kCustomGermanCollator
unknown custom collator (type=
wstring_convert: to_bytes error
TIKeyboardCollator.cpp
TIKeyboardCollator
getRootCollator
U_SUCCESS(error)
*rootCollator
file not found
file has zero length
file failed to load
collator is out of date
Unknown collator failure 
com.apple.Lexicon-framework
LXEntryCopyString
LXEntry.cpp
entry
LXEntryCopyStoredString
LXEntryGetMetaFlags
LXEntryGetCategoryFlags
LXEntryGetPartialProbability
LXEntryGetTokenID
LXEntryGetAffixData
peek_next_byte
TIWordTrie.cpp
has_more_patricia_key_bytes()
advance
!is_root()
children_of_cursor
cursor.is_root() || first_child_offset >= m_trie_root_offset
derive_words_at_cursor
!cursor.is_root()
!derived_base_form.is_empty()
derive_words_at_offset
termination_prob > 0
B16@?0r^{Word={String=SSSC*[16c]}{ByteString=(?={?=S*}{?=S[14C]})}fIICIII{TITokenID=II}i}8
.dat
m_word_id_map_offset > 0
huffman_coder_offset > 0
WordTrie
open()
fstat()
mmap()
 failed for '
mlock() failed for words file
mlock() failed for index file
log_result_on_failure
munlock() failed for words file
munlock() failed for index file
word_with_id
result.word_id() == word_id
bodilyfunctions
bodypart
derogatory
disease
drugabuse
political
religious
sexual
violence
warfare
add_suffixes
TIStaticDictionaryImplCursor.cpp
converter
probability_of_baseline
isfinite(result)
is_root
m_baseline_cursor.is_root() == m_delta_cursor.is_root()
probability_of_baseline_given_termination
children
suffix_byte < 0x100 || subcursor_byte < 0x100
baseline_byte < 0x100 || delta_byte < 0x100
stem_child_bytes
derive_words
BUILT_PRODUCTS_DIR
WRAPPER_NAME
Output
SRCROOT
TEXTINPUT_LANGUAGE
PRECOMPILED_DATA
DERIVED_SOURCES_DIR
Deps
couldn't create directory '%s': %s (%d)
extract_locale_from_path
DictCompiler.cpp
filename_parts.size() >= 2
lang_region_split.size() == 1 || lang_region_split.size() == 2
couldn't read magic number from file
Magic numbers don't match!  Recorded: %u  Actual %u
couldn't read major version from file
Major versions don't match!  Recorded: %u  Actual %u
couldn't read minor version from file
Minor versions don't match!  Recorded: %u(0x%x)  Actual %u(0x%x)
couldn't read collator version from file
Collator versions don't match!  Recorded: %s  Actual %s
couldn't read UCA version from file
Unicode Collation Algorithm (UCA) versions don't match!  Recorded: %s  Actual %s
couldn't get recorded checksum from file
Checksums don't match!
Recorded: %s
Actual: %s
File not found: %s
v32@?0{DynamicTrieCursor={RefPtr<lexicon::DynamicTrieNode>=^{DynamicTrieNode}}C}8^B24
v48@?0r^v8r^{String=SSSC*[16c]}16r^{SortKeyCursor={ByteString=(?={?=S*}{?=S[14C]})}C{ByteString=(?={?=S*}{?=S[14C]})}I}24d32*40
v24@?0r^v8^B16
LXEntry
is_equal
LXMutableLexiconCursorImpl.cpp
false && "MutableLexiconCursorImpl::is_equal not implemented yet"
create_child
impl
clear
LXDynamicLexiconProxy.cpp
false && "clear() not supported for a lexicon proxy"
remove_entry
false && "remove_entry() not supported for a lexicon proxy"
add_entry
false && "add_entry() not supported for a lexicon proxy"
enumerate_common_letter_forms
false && "enumerate_common_letter_forms not supported for a detached lexicon proxy"
LXCursor
store
false && "store() not supported for a lexicon proxy"
load
false && "load() not supported for a lexicon proxy"
root
UnigramWord
UnigramWord.cpp
m_collator && "Missing collator"
freq
role
roles
item_val.length() == 1
cap_bits
surface_form
post
needs_prefix
needs_suffix
word_id < (1 << 24)
preferred_form
preferred_form_for_sortkey
categories
WARNING: skipping invalid category=%s
operator!=
TIString.h
p==rhs.p
parse_role_flags
false && "invalid role flag in unigrams file"
NOTE: Prefix sort-key changed retroactively at %s -> %s for %s:  0x%s -> 0x%s 
NOTE:  Sort key for %s->%s freq=%.1f is not distributive:
    0x%s / 0x%s
<%d: %s  
^%d: %s  
@%d: %s  
write_unigram_record_v2
record_length <= 0xff
 : p=%.0f
 : f=%.0f
 : r=%s
 : c=%#x
 : s=%s
 : pre=%s
 : needs_prefix
 : post=%s
 : needs_suffix
<Word: k=0x%s> 
 (s=0x%s)
v8@?0
RangedTokenIDGenerator
TIDataFile.cpp
InputStream
m_offset <= m_size
read_null_terminated_string
result.size() == len
tell
result != -1
seek
false
seek_to_end
WTFRefCounted.h
old_count > 0
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Child offset ranges: Zero= %d, UInt24= %d, UInt16= %d, UInt8= %d : SInt24= %d, SInt16= %d, SInt8= %d
Child offset savings: UInt16= %d, UInt8= %d, UInt16^UInt8 = %d : SInt16= %d, SInt8= %d, SInt16^SInt8= %d : SInt16^UInt8= %d
Non-branching chain histogram [length, count]:
Compression savings: %d bytes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
WARNING! Changing surface form list for trie node on recursive insertion of: %s
Existing form: %s
YIKES:  %d grandchildren already have trie offsets but %d don't!
write_trie_node_as_var_byte_slot
UnigramTrieNode.cpp
m_written_offset == idx_file.tell()
patricia_key_size_1 <= (kMaxPatriciaKeyBytes - 1)
relative_child_offset >= 0 && relative_child_offset <= DC_UINT8_MAX
relative_child_offset >= DC_INT16_MIN && relative_child_offset <= DC_INT16_MAX
node_children_offset < kPatriciaTrieNodeOffsetLimit
UnigramTrieNode 
 was not allocated a write file offset: parent @0x
v44@?0^{__CFURL=}8i16^{__CFLocale=}20^{__CFString=}28^B36
Phrases
Delta
Failed to compile the stem-suffix tokenID conversion map: %s
failed to create the stem-suffix lexiconID converter: %s
Unsupported enumeration policy: %ld
WARNING:  Derivation of base form failed.  Expected %s (0x%s).  Got %s (0x%s).  
OVERRIDE: frequency similarity ratio: %f
Nothing to be done for %s (%s) 
Compiling %s (%s) 
writing version %x.%x, collator v%s, UCA v%s, %s
Allocating trie slots: magic_number=%u, root_usage_sum=%f
Reserved %d and wrote %d trie nodes in %u bytes
    Options: %s
writing: %s
Wrote %d non-derivable words in %d bytes
WARNING: words [%s] and [%s] share word id %u; only former is stored in word id map
Inserted %d trie nodes.
Condensed %d nodes into patricia nodes.
Adding retro-active sort-key change hints!
    ALL surface-form sort-keys are distributive!
    %d surface-forms sort-keys are non-distributive.
    %d unigram sort-keys do not build cumulatively. They change retroactively!
    %d unigram base forms are not derivable from their sort-keys!
    %d surface forms don't align with their dict/sort keys.
Mapped %d sort key units to letter forms.
Non-empty surface-form substitution lists:
    %s -> %s            
    Frequency distribution:  Lowest=%lf, NextLowest=%lf, Highest=%lf
Squashing with root power %.3lf to achieve frequency target range %.0f to %.0f
    Read %d unigrams.  Registered %lu words.
        Excluded %d 0-frequency neighbor-key macros.
        Merged %d duplicate surface forms.  %d shared sort-key strings remain
WARNING: Excluding word with null sortkey: %s
        Excluding word with 0 freq: %s
Failed to convert '%@' (%s) to UTF-8
Compiling %lu distinct metadata flags values
%s: failed to add '%@' to the lexicon
%s: could not create CFString for string='%s' and token_id=%d
%s: storing %lu entries
%s: loaded %lu entries from %s
%s: collision for strings '%s' and '%s': tokenID=%u
%s: Failed to load static dictionary for localeIdentifier=%s, unigrams='%s', delta='%s'
%s: u_strToUTF8() (length preflight) failed with '%s'
%s: u_strToUTF8() failed with '%s'
found unknown lead_primary=%u, with sort_key_byte=%u
Attempted to write past bounds of sortkey buffer: UTF-32 char: (%#07x), locale code: (%s), partial sort key (%s)
found invalid serialized entry with string='%s' and token_id=%d
found duplicate serialized entry with string='%s'
cannot store dynamic dictionary: empty path
%s: Failed to write the dynamic dictionary [%s])
failed to overwrite the existing dynamic dictionary at %s: %@
Could not set resource value NSURLIsExcludedFromBackupKey on %@: %@
%s: failed to clean up NLP temporary files: %s
u_strFromUTF32 failed to convert %u (%s)
WARNING! Creating precompiled collator. This is expensive!
failed to compile rules '%s' for collator type %s: %s
Collator customization failed: %s
failed to open collator %d from binary file at path %s: %s
failed to load the shared collator: could not get the Lexicon.framework bundle
failed to load the shared collator: could not find collator.dat in the resource bundle
error loading collator file at %@: %s
could not create custom collator for locale=%@; using default custom collator
Collator creation failed for locale '%s'! Backing off to root collator.
failed to load word trie: %s
invalid magic number
mismatched words and index file versions
major version %u does not match required version %u
minor version %u is not supported (%u required)
Failed to create metadata flags decoder: %s
ICU version mismatch: file_collator=%s, loaded_collator=%s, file_uca=%s, loaded_uca=%s
%s: %s: %s
couldn't create directory '%s': %s (%d)
couldn't read magic number from file
Magic numbers don't match!  Recorded: %u  Actual %u
couldn't read major version from file
Major versions don't match!  Recorded: %u  Actual %u
couldn't read minor version from file
Minor versions don't match!  Recorded: %u(0x%x)  Actual %u(0x%x)
couldn't read collator version from file
Collator versions don't match!  Recorded: %s  Actual %s
couldn't read UCA version from file
Unicode Collation Algorithm (UCA) versions don't match!  Recorded: %s  Actual %s
couldn't get recorded checksum from file
Checksums don't match!
Recorded: %s
Actual: %s
File not found: %s
WARNING: skipping invalid category=%s
NOTE: Prefix sort-key changed retroactively at %s -> %s for %s:  0x%s -> 0x%s 
NOTE:  Sort key for %s->%s freq=%.1f is not distributive:
    0x%s / 0x%s
<%d: %s  
^%d: %s  
@%d: %s  
exhausted tokenID range: (%d, %d]
unknown tokenID found in the free list
Child offset ranges: Zero= %d, UInt24= %d, UInt16= %d, UInt8= %d : SInt24= %d, SInt16= %d, SInt8= %d
Child offset savings: UInt16= %d, UInt8= %d, UInt16^UInt8 = %d : SInt16= %d, SInt8= %d, SInt16^SInt8= %d : SInt16^UInt8= %d
Non-branching chain histogram [length, count]:
Compression savings: %d bytes
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
WARNING! Changing surface form list for trie node on recursive insertion of: %s
Existing form: %s
YIKES:  %d grandchildren already have trie offsets but %d don't!
zPLR
zPLR
fff?
