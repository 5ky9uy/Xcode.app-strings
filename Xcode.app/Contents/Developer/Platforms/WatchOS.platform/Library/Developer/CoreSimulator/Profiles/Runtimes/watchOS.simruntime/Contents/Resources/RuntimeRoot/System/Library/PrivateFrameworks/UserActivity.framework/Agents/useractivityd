@(#)PROGRAM:useractivityd  PROJECT:UserActivity-511
MbP?
?(knN
$@gfffgfffgfffgfff
J@%L9
pbpaste!
pbtypes!
string
bytes
length
stringWithFormat:
appendString:
copy
data
characterAtIndex:
appendBytes:length:
clientWriteSize
numberWithUnsignedLongLong:
clientWriteTime
clientWriteSpeed
usedStreams
numberWithBool:
streamOpenDelay
streamDataSize
streamDataXferTime
streamDataXferSpeed
totalTime
errorCode
numberWithLongLong:
dictionaryWithObjects:forKeys:count:
eventName
eventPayload
setClientWriteSize:
setClientWriteTime:
setClientWriteSpeed:
setUsedStreams:
setStreamOpenDelay:
setStreamDataSize:
setStreamDataXferTime:
setStreamDataXferSpeed:
setTotalTime:
setErrorCode:
_usedStreams
_clientWriteSize
_clientWriteTime
_clientWriteSpeed
_streamOpenDelay
_streamDataSize
_streamDataXferTime
_streamDataXferSpeed
_totalTime
_errorCode
TQ,N,V_clientWriteSize
TQ,N,V_clientWriteTime
TQ,N,V_clientWriteSpeed
TB,N,V_usedStreams
TQ,N,V_streamOpenDelay
TQ,N,V_streamDataSize
TQ,N,V_streamDataXferTime
TQ,N,V_streamDataXferSpeed
TQ,N,V_totalTime
Tq,N,V_errorCode
initWithManager:name:
sharedDefaults
debugEnablePinging
countByEnumeratingWithState:objects:count:
activityType
isEqual:
initFromPing:
uuid
UUIDString
pongCount
setPongCount:
pongItems
removeObject:
setWasContinuedBlock:
addObject:
manager
scheduleUpdatingAdvertisableItems
requestPayloadWithCompletionHandler:
count
initWithManager:
active
items
setItems:
statusString
.cxx_destruct
_pongItems
_pongCount
T@"NSMutableSet",R,C,V_pongItems
Tq,V_pongCount
initWithMachServiceName:
setDelegate:
setBestAppsListener:
suspend
bestAppsListener
resume
terminate
invalidate
auditToken
valueForEntitlement:
boolValue
effectiveUserIdentifier
disableEntitlementsCheck
initWithManager:connection:
addActivityNotifier:
suspended
setSuspended:
initWithAuditToken:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
setDisableEntitlementsCheck:
_disableEntitlementsCheck
_bestAppsListener
T@"NSXPCListener",&,V_bestAppsListener
TB,V_disableEntitlementsCheck
init
setProviderRequests:
setLocked:
providerRequests
allKeys
objectForKeyedSubscript:
locked
setObject:forKeyedSubscript:
UUID
_provideItemAtURL:toReaderWithID:completionHandler:
_provideItemAtURL:completionHandler:
_providedItemsURL
_providedItemsOperationQueue
_cancelProvidingItemAtURL:toReaderWithID:
_physicalURLForURL:
_getPhysicalURLForURL:completionHandler:
_writerWithID:didFinishWritingForURL:
_providedItemAtURL:didGainPresenterWithID:
_providedItemAtURL:didLosePresenterWithID:
_providedItemAtURL:withPresenterWithID:didMoveToURL:
_movingItemAtURL:requiresProvidingWithDestinationURL:completionHandler:
_fileReactorID
T@"NSURL",R,C
T@"NSOperationQueue",R
initWithURL:
unlockWithError:
_locked
_providerRequests
T@"NSMutableDictionary",&,V_providerRequests
TB,V_locked
T@"NSURL",R,C,V_providedItemsURL
T@"NSOperationQueue",R,V_providedItemsOperationQueue
init:queue:interval:block:
setup:interval:
setUserActivityNotificationRef:
userActivityNotificationRef
block
name
dealloc
queue
firstTime
setActive:
cStringUsingEncoding:
interval
enabled
startTime
timeIntervalSinceNow
setFirstTime:
date
idleTracker:queue:interval:block:
setEnabled:
setInterval:
setBlock:
setQueue:
setStartTime:
_active
_enabled
_firstTime
_interval
_name
_block
_queue
_userActivityNotificationRef
_startTime
TB,V_active
T@?,C,V_block
T@"NSObject<OS_dispatch_queue>",&,V_queue
TQ,V_userActivityNotificationRef
T@"NSDate",&,V_startTime
TB,V_firstTime
T@"NSString",R,V_name
TB,V_enabled
Td,V_interval
initWithUUID:type:options:
setActivityType:
setTitle:
setEligibleForHandoff:
dataWithLength:
mutableBytes
setPayload:identifier:
initWithUserActivityInfo:
setType:
payloadForIdentifier:
initWithPayloadSize:
wasContinuedBlock
_wasContinuedBlock
T@?,C,V_wasContinuedBlock
controller
firstObject
receivedItems
array
simulator
peeredDevice
initWithUserActivityInfo:peerDevice:simulator:
pairedClientPort
activitiesShouldCrossover
webpageURL
setWebpageURL:
dateWithTimeIntervalSinceNow:
setWhen:
defaultWorkspace
teamIdentifier
applicationForUserActivityType:
bundleIdentifier
setBundleIdentifier:
arrayWithObject:
scheduleBestAppDetermination
receiving
logString
appendFormat:
initWithSimulator:
doSetReceivedItems:
fetchAdvertisedItems:
_simulator
_receivedItems
T@"NSArray",R,C,V_receivedItems
T@"UASimulator",R,&,V_simulator
initWithBytes:length:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
decodeObjectForKey:
finishDecoding
absoluteToNSec:
advertising
advertisedItem
advertisableItems
setAdvertisedItem:
advertisingItems
setAdvertisableItems:
setItem:
_advertisableItems
_advertisedItem
T@"UAUserActivityInfo",&,V_advertisedItem
setUuid:
suggestedActionType
setSuggestedActionType:
isFromPairedDevice
setFromPairedDevice:
isBrowserFallback
setBrowserFallback:
payloadSize
setPayloadSize:
transferSpeed
setTransferSpeed:
transferDuration
setTransferDuration:
error
setError:
isCancelled
setCancelled:
interactionType
setInteractionType:
webToNative
setWebToNative:
supportsContinuityStreams
setSupportsContinuityStreams:
remoteDeviceType
setRemoteDeviceType:
scheduledForSubmission
setScheduledForSubmission:
payloadRequested
setPayloadRequested:
_fromPairedDevice
_browserFallback
_cancelled
_webToNative
_supportsContinuityStreams
_scheduledForSubmission
_payloadRequested
_uuid
_bundleIdentifier
_activityType
_suggestedActionType
_payloadSize
_transferSpeed
_transferDuration
_error
_interactionType
_remoteDeviceType
T@"NSUUID",C,V_uuid
T@"NSString",C,V_bundleIdentifier
T@"NSString",C,V_activityType
TQ,V_suggestedActionType
fromPairedDevice
TB,GisFromPairedDevice,V_fromPairedDevice
browserFallback
TB,GisBrowserFallback,V_browserFallback
TQ,V_payloadSize
Td,V_transferSpeed
Td,V_transferDuration
T@"NSError",C,V_error
cancelled
TB,GisCancelled,V_cancelled
TQ,V_interactionType
TB,V_webToNative
TB,V_supportsContinuityStreams
T@"NSString",C,V_remoteDeviceType
TB,V_scheduledForSubmission
TB,V_payloadRequested
itemUUID
hardSupressUntil
supressUntil
lastInterestingTime
setItemUUID:
setHardSupressUntil:
setSupressUntil:
setLastInterestingTime:
_itemUUID
_hardSupressUntil
_supressUntil
_lastInterestingTime
T@"NSUUID",C,V_itemUUID
T@"NSDate",C,V_hardSupressUntil
T@"NSDate",C,V_supressUntil
T@"NSDate",C,V_lastInterestingTime
initWithBytes:length:encoding:
setConnection:
dictionary
setSupressedUntil:
update
dispatchScheduler:frequency:queue:block:
setScheduler:
setExportedInterface:
setRemoteObjectInterface:
setExportedObject:
removeActivityNotifier:
connection
setInvalidationHandler:
setInterruptionHandler:
triggerUserIdleDetermination
possibleItems
allValues
setWithArray:
setPossibleItems:
bestCornerItemsFromItems:
notifyBestAppsChanged:atTime:
cornerActionItems
cornerActionItemTimeout
supressedUntil
objectForKey:
when
type
activityReceivingAllowed
dynamicActivityType
sortUsingComparator:
subarrayWithRange:
wantsBestAppChangedNotifications
lastItemUUIDs
lastItemWhens
objectAtIndex:
remoteObjectProxy
arrayWithCapacity:
setObject:atIndexedSubscript:
peerDevice
deviceType
setPeerDeviceType:
setLastItemUUIDs:
setLastItemWhens:
notifyBestAppsChanged:when:confidence:
setLastItemStr:
sharedManager
wasContinuedInfo
submitUserActivityWasSuggestedInfo:
removeObjectForKey:
scheduler
scheduleAt:
lastItemStr
nextTime
runCount
fetchMoreAppSuggestions
userActivityInfoForUUID:
cornerActionItemSupressionInterval
bestAppSuggestionSupressionIntervalForUnchangingItem
setObject:forKey:
scheduleNext:
cornerActionItemForUUID:
setWasContinuedInfo:
submitUserActivityWasContinuedInfo:
caseInsensitiveCompare:
initWithURL:resolvingAgainstBaseURL:
queryItems
value
defaultCenter
postNotificationName:object:userInfo:
setWantsBestAppChangedNotifications:
doConnected
doStartBestAppSuggestion:
doDetermineBestAppSuggestionWithCompletionHandler:
doDetermineBestAppSuggestions:completionHandler:
doRemoveBestAppSuggestion:options:
doRegisterForBestAppChangeNotification
doUnregisterForBestAppChangeNotification
doQueueFetchOfPayloadForBestAppSuggestion:completionHandler:
doLaunchFollowUp:interactionType:cancelled:
fetchAllNearbyAppSuggestions:
requiresBoosted
_wantsBestAppChangedNotifications
_connection
_supressedUntil
_scheduler
_possibleItems
_lastItemUUIDs
_lastItemWhens
_lastItemStr
T@"NSXPCConnection",&,V_connection
T@"NSMutableDictionary",&,V_supressedUntil
TB,V_wantsBestAppChangedNotifications
T@"UADispatchScheduler",&,V_scheduler
T@"NSMutableDictionary",&,V_possibleItems
T@"NSArray",C,V_lastItemUUIDs
T@"NSArray",C,V_lastItemWhens
T@"NSString",C,V_lastItemStr
standardUserDefaults
stringWithCString:encoding:
doubleValue
removeObjectAtIndex:
debugManager
setDisableAdminEntitlmentChecking:
setSupportNetworkPeers:
initWithDelegate:
setPairedScanner:
setPairedAdvertiser:
addSFActivityAdvertiser:
addSFActivityScanner:
addAdvertiser:
addReceiver:
addClient:
addHandler:
setPasteboardController:
pasteboardController
setPingController:
enableTransactions
currentRunLoop
createSharedDataDirectory
setTmpArchiveWriteFiles:
setLockTokens:
setProviders:
stringByAppendingPathComponent:
defaultManager
sharedDataPath
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileExistsAtPath:
createFileForUUID:inSubFolder:
directoryExistsAtPath:
createFolderAtPath:
createFileAtPath:contents:attributes:
fileExistsAtPath:isDirectory:
currentLocalBlobPath
stringForKey:
setCurrentLocalBlobPath:
removeItemAtPath:error:
createFileForUUID:
fileHandleForWritingAtPath:
fileHandleForReadingAtPath:
currentRemoteBlobPath
setCurrentRemoteBlobPath:
sharedInstance
fileURLWithPath:isDirectory:
URLByAppendingPathComponent:
path
subDirForItem:
URLWithString:
fileURLForArchiveWithUUID:
tmpArchiveWriteFiles
writeData:error:
synchronizeFile
closeFile
providers
_addFileProvider:completionHandler:
_removeFileProvider:
releaseLockForItem:withError:
errorWithDomain:code:userInfo:
removeAllObjects
initWithFilePresenter:
fileURLWithPath:
lockTokens
removeItemAtURL:error:
releaseLockForItem:
coordinateWritingItemAtURL:options:error:byAccessor:
contentsOfDirectoryAtPath:error:
URLWithString:relativeToURL:
initWithUUIDString:
fileURLForCloneItems
fileExistsForUUID:inSubFolder:
createFileForLocalPasteboardBlob
localPasteboardBlobForReading
createFileForRemotePasteboardBlob
remotePasteboardBlobForReading
fileURLForPasteboardItem:
readHandleForArchiveWithUUID:
createTmpArchiveFileWithUUID:
writeArchiveData:forItem:
finishWritingArchiveForUUID:
obtainLockForItem:completion:
cancelAllLocks
cleanupForItem:
cleanupArchiveDir
cleanupItemsDir
cleanupCloneDir
_currentLocalBlobPath
_currentRemoteBlobPath
_tmpArchiveWriteFiles
_lockTokens
_providers
T@"NSString",&,V_currentLocalBlobPath
T@"NSString",&,V_currentRemoteBlobPath
T@"NSMutableDictionary",&,V_tmpArchiveWriteFiles
T@"NSMutableDictionary",&,V_lockTokens
T@"NSMutableDictionary",&,V_providers
submitWasSuggestedInfo
submit
_submitted
hasPrefix:
setUniqueID:
setModelIdentifier:
setProductName:
setProductVersion:
setProductBuildVersion:
setName:
setDeviceColor:
setEnclosureColor:
uniqueID
modelIdentifier
productName
productVersion
productBuildVersion
deviceColor
enclosureColor
deviceTypeForModelIdentifier:
_typeWithDeviceModelCode:
typeWithIdentifier:
arrayWithObjects:count:
conformsToType:
identifier
enumerateObjectsUsingBlock:
isEqualToString:
peerForSelf
testPeerForModel:
T@"NSString",R,&
inputStreamWithFileAtPath:
open
propertyListWithStream:options:format:error:
close
removeReceiver:
scanningForTypes
setScanningForTypes:
TB,R,D
T@"NSSet",C,VscanningForTypes
terminated
priority
_suspended
_terminated
_manager
_priority
T@"NSUUID",R,&,V_uuid
T@"UACornerActionManager",R,&,V_manager
T@"NSString",C,V_name
Tq,R,V_priority
TB,R
TB,R,V_terminated
initWithUUID:type:options:originatingClient:
originatingClient
setOriginatingClient:
_originatingClient
T@"UAUserActivityClientProcess",W,V_originatingClient
reportedActivityType
firstPartyActivityTypeOrUnknown:
initWithInputStream:outputStream:delegate:
setStreamHandler:
setArchivePackagers:
setArchiveQueue:
setRequestedArchives:
setUuidItemMap:
setObjects:
streamHandler
start
setState:
pasteboardStreamWatchdogTimeout
receivedPasteboardInfo:withError:
completedReceivingPasteboardWithError:
sendCompletedWithError:
stop
initWithName:timeout:block:
setWatchdog:
objects
receivedInfo
watchdog
poke
handlePasteboardInfoRequest:
handlePasteboardInfoResponse:
handlePasteboardDataRequest:
handlePasteboardDataResponse:
handlePasteboardFileRequest:
handlePasteboardFileResponse:
handlePasteboardAuxInfoReceived:
handleHeartbeat:
state
filePackager
deliverNextPacket
archiveQueue
archivePackagers
numberWithInteger:
packMessage:
writeMessage:tag:
unpackMessage:
integerValue
initWithDomain:code:userInfo:
sendPasteboardInfoResponse
sendPasteboardDataResponse
containsObject:
sendingInfo
pbinfo
types
requestedArchives
setReceivedInfo:
progress
setCompletedUnitCount:
sendPasteboardDataRequest
processPasteboardInfo:
sendStopWithError:
bytesReceived
setBytesReceived:
calculateTimeRemaining
receivingDataFile
returnInfoEarly
remoteHasFiles
sendFileArchiveRequest
intValue
floatValue
initWithDestinationURL:forArchiveUUID:
storeObject:
uuidItemMap
extractArchiveWithCompletion:
setExpectedLength:
setTotalUnitCount:
archivedDataWithRootObject:requiringSecureCoding:error:
sendingDataFile
dataSize
initWithFile:fileSize:packetSize:options:receiver:
setFilePackager:
setTag:
totalSendSize
dataUsingEncoding:
setRemoteHasFiles:
setReturnInfoEarly:
setReceivingDataFile:
setProgress:
setInfoRecvHandler:
setFileRecvHandler:
setStreamStartTime:
setItemsLockedSem:
sendPasteboardInfoRequest
cancel
itemsLockedSem
infoRecvHandler
removeReceivedItems:
fileRecvHandler
totalBytesReceived
objectAtIndexedSubscript:
numberWithInt:
setUserInfoObject:forKey:
streamStartTime
numberWithDouble:
expectedLength
pasteboardUITimeRemainingDelay
setSendingInfo:
dataFile
setSendingDataFile:
setTotalSendSize:
setDataFile:
setSendErrorHandler:
setHeartBeatTrigger:
heartBeatTrigger
sendHeartbeat
fetchDataForType:
URLWithDataRepresentation:relativeToURL:
propertyListWithData:options:format:error:
initWithURL:typeUUID:
sendTotalSendSize
archiveURLWithCompletion:
sendErrorHandler
totalBytesSent
totalPacketCount
offset
unsignedLongLongValue
seekToFileOffset:
size
readDataOfLength:
streams:didReadMessage:withTag:
streams:didWriteMessageWithTag:
streamsDidClose:withError:
streams:didReadRawData:
streamsDidWriteRawDataBuffer:
packager:gotData:forPacket:
filePackagerError:
receivePasteboardToFile:withProgress:infoReceivedHandler:completionHandler:returnInfoEarly:
cancelReceive
sendPasteboard:withCompletion:
initWithInputStream:outputStream:
recvStop:
auxStateInfo
setAuxStateInfo:
_remoteHasFiles
_returnInfoEarly
_streamHandler
_state
_auxStateInfo
_objects
_watchdog
_heartBeatTrigger
_infoRecvHandler
_fileRecvHandler
_receivedInfo
_receivingDataFile
_progress
_bytesReceived
_itemsLockedSem
_uuidItemMap
_streamStartTime
_expectedLength
_sendErrorHandler
_sendingInfo
_sendingDataFile
_filePackager
_archivePackagers
_archiveQueue
_requestedArchives
_totalSendSize
T@"UAStreamHandler",&,V_streamHandler
Tq,N,V_state
T@"NSDictionary",&,V_auxStateInfo
T@"NSMutableArray",&,V_objects
T@"UADispatchWatchdog",&,V_watchdog
T@"NSObject<OS_dispatch_source>",&,V_heartBeatTrigger
T@?,C,V_infoRecvHandler
T@?,C,V_fileRecvHandler
T@"UASharedPasteboardInfoWrapper",&,V_receivedInfo
T@"NSFileHandle",&,V_receivingDataFile
T@"NSProgress",&,V_progress
Tq,V_bytesReceived
TB,V_remoteHasFiles
TB,V_returnInfoEarly
T@"NSObject<OS_dispatch_semaphore>",&,V_itemsLockedSem
T@"NSMutableDictionary",&,V_uuidItemMap
TQ,V_streamStartTime
Tq,V_expectedLength
T@?,C,V_sendErrorHandler
T@"UASharedPasteboardInfoWrapper",&,V_sendingInfo
T@"NSFileHandle",&,V_sendingDataFile
T@"UCFilePackager",&,V_filePackager
T@"NSMutableDictionary",&,V_archivePackagers
T@"NSMutableArray",&,V_archiveQueue
T@"NSMutableArray",&,V_requestedArchives
Tq,V_totalSendSize
setDebugType:
debugType
initWithType:manager:
advertisingBytes
_debugType
TQ,V_debugType
setTimeout:
setHandler:
setHasFired:
source
timeout
_triggerWatchdog
setSource:
hasFired
handler
_hasFired
_handler
_timeout
_source
T@?,C,V_handler
Td,V_timeout
T@"NSObject<OS_dispatch_source>",&,V_source
TB,V_hasFired
reason
numberWithUnsignedInteger:
setReason:
_reason
TQ,V_reason
eligibleForHandoff
updateItem:
setWithObject:
pairedDevices
scheduleUpdatingAdvertisableItems:
item
addItem:
removeItem:
eligibleAdvertiseableItemsInOrder
_item
T@"UAUserActivityInfo",&,V_item
payloadXferTime
payloadXferSpeed
streamOpenTime
underlyingErrorCode
numberOfItems
isFileCopy
isAsyncTransfer
setPayloadXferTime:
setPayloadXferSpeed:
setStreamOpenTime:
setUnderlyingErrorCode:
setNumberOfItems:
setIsFileCopy:
setIsAsyncTransfer:
_isFileCopy
_isAsyncTransfer
_payloadXferTime
_payloadXferSpeed
_streamOpenTime
_underlyingErrorCode
_numberOfItems
TQ,N,V_payloadSize
TQ,N,V_payloadXferTime
TQ,N,V_payloadXferSpeed
TQ,N,V_streamOpenTime
TB,N,V_cancelled
Tq,N,V_underlyingErrorCode
Tq,N,V_numberOfItems
TB,N,V_isFileCopy
TB,N,V_isAsyncTransfer
T@"NSString",&,N,V_remoteDeviceType
setMainDispatchQ:
mainDispatchQ
_determineWhenSystemGoesIdleThread
_determineItemToAdvertiseForHandoffThread
_checkIfBestApplicationChangedThread
userIdleInterval
updateUserActiveState:
setUserIdleTracker:
advertisers
clients
setByAddingObjectsFromSet:
userActivityClients
nextUpdateAdvertisedItemsScheduler
advertiseableItems
eligibleToAdvertise
uaAdvertisableItemsInOrder:
allObjects
sortedArrayUsingComparator:
addObjectsFromArray:
recentEligibleItemsInOrder:
screenDimmed
eligibleToAlwaysAdvertise
options
intervalToAskClientWithUnsynchronizedDocumentsToUpdate
lastTimePayloadWasRequestedForAdvertisedItem
setLastTimePayloadWasRequestedForAdvertisedItem:
requestPayloadWithCompletionHandlerEvenIfClean:withCompletionHandler:
itemsBeingAdvertised
advertisingSuspended
triggerUserIdleDetermination:
activityAdvertisingAllowed
nextUserIdleDeterminationScheduler
alwaysPick
userActive
weAreAdvertisingAtLeastOneItem
setUserInactivePowerAssertion:
userInactivePowerAssertion
setScreenDimmedPowerAssertion:
screenDimmedPowerAssertion
deviceUILocked
deviceUILockedPowerAssertion
okToSuspendAdvertising
systemHasSuspendedAdvertisements
setSystemHasSuspendedAdvertisements:
setSystemHasSuspendedScanning:
notifiers
receivers
debugCornerItem
anyObject
haveBestAppChangeNotificationClients
scheduleBestAppDetermination:
nextScheduleBestAppDeterminationScheduler
multiHandoffEnabled
setShouldAdvertiseAutoPullActivityList:
bluetoothStatusCallbackIdentifier
bluetoothStatus
unregisterCallback:
setBluetoothStatusCallbackIdentifier:
setBluetoothStatus:
triggerAll
registerCallback:
handlers
systemPreferenceChangedToken
removeObserver:name:object:
uiLockStatusToken
setUiLockStatusToken:
suspendListeningForBluetooth
userIdleTracker
updateUIDeviceLockedState:
backlightLevelToken
isBacklightOn
updateScreenDimStateState:
resumeListeningForBluetooth
reset
userIdleRemovalDelay
initWithName:delta:activityUUID:queue:runAtCompletion:
appendRecentAction:
screenDimDelayBeforeRemovingAdvertisements
screenDimDelayBeforeRemovingPasteboardAdvertisement
deviceLockDelayBeforeRemovingHandoffAdvertisement
deviceLockDelayBeforeRemovingPasteboardAdvertisement
setDeviceUILockedPowerAssertion:
weAreAdvertisingAnItem
uaAdvertisableItemsInOrder
dictionaryForAdvertisableItem:
initWithSuiteName:
timeIntervalSinceDate:
currentPerfTime
nextRunTimeString
compare:
insertObject:atIndex:
pinnedUserActivityInfoItem
perfSummaryString
actionStrs:maximumInternal:clear:
localPBStatus
receivingSuspended
unionSet:
cornerActionManager
sharedActivityManagerServer
updateScreenSaverActive:
shouldItemBeAdvertised:
activeAdvertiseableItemsUUIDs
userActivityItemsChanged
isBluetoothEnabled
setAdvertisingSuspended:
systemHasSuspendedScanning
bestCornerItem
bestCornerItem:
setDebugCornerItem:
checkIfBestCornerItemChanged:
processWasRemoved
setUserActive:
dictionaryForCornerActionItem:
debuggingInfo
dynamicUserActivitiesString
shortStatusString
removeAdvertiser:
removeClient:
removeHandler:
allHandlers
setBacklightOn:
activeDevicesIdentifiers
userDefaults
isBatterySaverModeEnabled
setPinnedUserActivityInfoItem:
setReceivingSuspended:
pingController
setDeviceUILocked:
setScreenDimmed:
setBacklightLevelToken:
holdPowerAssertionUntil
setHoldPowerAssertionUntil:
holdPowerAssertionSourceTimer
setHoldPowerAssertionSourceTimer:
holdPowerAssertion
setHoldPowerAssertion:
systemIsIdle
setSystemIsIdle:
setSystemPreferenceChangedToken:
pingMode
setPingMode:
avgPingTime
setAvgPingTime:
pingStart
setPingStart:
pongSem
setPongSem:
pongTimer
setPongTimer:
_advertisers
_receivers
_clients
_notifiers
_handlers
_creationTime
_itemsBeingAdvertised
_managedSettingsChangedNotificationToken
_helpersDispatchGroup
_systemIdlePreviousTimeSinceLastUserActivity
_advertisingSuspended
_lastNumAdvertiseableProcesses
_debugCornerItem
_backlightOn
_systemHasSuspendedAdvertisements
_systemHasSuspendedScanning
_userActive
_batterySaverModeEnabled
_receivingSuspended
_deviceUILocked
_screenDimmed
_systemIsIdle
_pingMode
_backlightLevelToken
_holdPowerAssertion
_systemPreferenceChangedToken
_uiLockStatusToken
_activeDevicesIdentifiers
_userDefaults
_debugManager
_pinnedUserActivityInfoItem
_pasteboardController
_pingController
_mainDispatchQ
_nextUserIdleDeterminationScheduler
_nextUpdateAdvertisedItemsScheduler
_nextScheduleBestAppDeterminationScheduler
_deviceUILockedPowerAssertion
_screenDimmedPowerAssertion
_holdPowerAssertionUntil
_holdPowerAssertionSourceTimer
_userIdleTracker
_userInactivePowerAssertion
_lastTimePayloadWasRequestedForAdvertisedItem
_avgPingTime
_pingStart
_pongSem
_pongTimer
_bluetoothStatus
_bluetoothStatusCallbackIdentifier
T@"NSArray",R,C,V_itemsBeingAdvertised
T@"UADispatchScheduler",R,&,V_nextUserIdleDeterminationScheduler
T@"UADispatchScheduler",R,&,V_nextUpdateAdvertisedItemsScheduler
T@"UADispatchScheduler",R,&,V_nextScheduleBestAppDeterminationScheduler
TB,V_systemHasSuspendedAdvertisements
TB,V_systemHasSuspendedScanning
TB,V_deviceUILocked
T@"UATimedPowerAssertions",&,V_deviceUILockedPowerAssertion
TB,V_screenDimmed
T@"UATimedPowerAssertions",&,V_screenDimmedPowerAssertion
Ti,V_backlightLevelToken
T@"NSDate",&,V_holdPowerAssertionUntil
T@"NSObject<OS_dispatch_source>",&,V_holdPowerAssertionSourceTimer
TI,V_holdPowerAssertion
T@"PowerManagerIdleTracker",&,V_userIdleTracker
TB,V_userActive
T@"UATimedPowerAssertions",&,V_userInactivePowerAssertion
TB,V_systemIsIdle
T@"NSDate",C,V_lastTimePayloadWasRequestedForAdvertisedItem
Ti,V_systemPreferenceChangedToken
Ti,V_uiLockStatusToken
TB,V_pingMode
Td,V_avgPingTime
T@"NSDate",&,V_pingStart
T@"NSObject<OS_dispatch_semaphore>",&,V_pongSem
T@"NSTimer",&,V_pongTimer
T@"UABluetoothStatus",&,V_bluetoothStatus
T@"NSObject",&,V_bluetoothStatusCallbackIdentifier
T@"NSUUID",R,C,V_uuid
T@"UAUserActivityInfo",&,N
T@"NSSet",R,V_activeDevicesIdentifiers
T@"NSUserDefaults",R,&,V_userDefaults
batterySaverModeEnabled
TB,R,GisBatterySaverModeEnabled,V_batterySaverModeEnabled
T@"ActivityManagerDebuggingManager",R,&,V_debugManager
T@"UAUserActivityInfo",&,V_pinnedUserActivityInfoItem
backlightOn
TB,GisBacklightOn,V_backlightOn
T@"NSSet",R,C
TB,V_receivingSuspended
T@"UASharedPasteboardClientController",&,V_pasteboardController
T@"UAPingController",&,V_pingController
T@"NSObject<OS_dispatch_queue>",&,V_mainDispatchQ
intervalToDelaySuspensionOfAdvertisingForItem:
enumerateLinesUsingBlock:
initWithController:
notifier
client
_client
_notifier
T@"UAPingClient",R,&,V_client
T@"UAPingNotifier",R,&,V_notifier
setInfo:
info
code
stringForInteraction
initWithAnalyticsInfo:
_info
T@"UAUserActivityAnalyticsInfo",&,V_info
setFrequency:
frequency
doIt
init:frequency:queue:block:
_doIt
executingGroup
updateFrequency:
waitUntilComplete
_frequency
_runCount
_nextTime
_executingGroup
T@"NSObject<OS_dispatch_source>",R,&,V_source
T@"NSObject<OS_dispatch_queue>",R,&,V_queue
T@"NSObject<OS_dispatch_group>",R,&,V_executingGroup
Td,V_frequency
T@?,R,&,V_block
TQ,R,V_runCount
TQ,R,V_nextTime
notifiedItems
setNotifiedItems:
T@"NSSet",C
T@"NSSet",C,D
setDataRequester:
setDataRequested:
setRespQueue:
stateAsString
respQueue
setPbInfo:
pbInfo
updateState:
dataRequester
submitRemotePasteboardBecameUnavailable:
submitRemotePasteboardTypeInfoRequested:
protocolVersion
setStreamProtocolVersion:
streamProtocolVersion
extraDataType
extraData
requestRemotePasteboardInfo:
requestRemoteTypeInfo:
requestStreamEndpointDataV2:
requestStreamEndpointData:
initWithRequester:
requestRemotePasteboardData:
returnEarly
setReturnEarly:
dataRequested
_returnEarly
_dataRequested
_dataRequester
_pbInfo
_streamProtocolVersion
_respQueue
TB,V_dataRequested
T@"NSUUID",&,V_uuid
T@"NSObject<OS_dispatch_queue>",&,V_respQueue
T@"NSError",&,V_error
T@"UASharedPasteboardDataRequester",&,V_dataRequester
T@"UASharedPasteboardInfo",&,V_pbInfo
TQ,V_state
TB,V_returnEarly
Tq,V_streamProtocolVersion
fileSystemRepresentation
dataWithBytes:length:
setClientq:
setXpclistener:
xpclistener
setAuxlistener:
auxlistener
setControlConnections:
setControlListener:
controlListener
initWithMachServiceName:options:
setClientNotificationConnection:
remotePasteboardAvailable:
pasteboardWillBeFetched:
interfaceWithProtocol:
clientNotificationConnection
setCoders:
setRemoteAvailable:
bundleWithPath:
setUaBundle:
uaBundle
load
clientConnection
localPasteboardRefection
setLocalPasteboardReflection:
setRemotePasteboardAvalibility:withDataRequester:
clearLocalPasteboardInformation
currentPasteboardActivityInfo
advertiseTypes
currentLocalTypes
currentLocalGeneration
setGeneration:
setPasteboardTypes:
isScreenWatcherPresent
setRemoteGeneration:
fetchProgress
remoteGeneration
remoteObjectProxyWithErrorHandler:
peer
clipboardSharingEnabled
setCurrentLocalTypes:
setCurrentLocalGeneration:
setHasFetchedLocalData:
localReflection
setCurrentLocalPasteboard:
setCurrentLocalPasteboardSize:
writeLocalPasteboardToFile:itemDir:extension:withCompletion:
setAdvertiseTypes:
localTimeout
localPasteboardAvalibilityTimeout
clearLocalPasteboardTypes:
timerWithTimeInterval:target:selector:userInfo:repeats:
setLocalTimeout:
mainRunLoop
addTimer:forMode:
submitLocalPasteboardInfoWasCleared
pasteAdvertiser
setPasteAdvertiser:
localInfo
setPboardInfoToSend:
localPasteboardAvalibilityClearedTimeout
removeLocalPasteboardFromAdvertisers:
currentLocalPasteboard
currentLocalPasteboardSize
setDataSize:
setPasteFetchStartTime:
setPasteInfo:
pasteInfo
pasteboardShowUIDelay
showProgressUI:
setShowUITimer:
showUITimer
currentProgress
initWithParent:userInfo:
setFetchProgress:
setKind:
setCancellable:
coders
hideProgressUI:
setCancellationHandler:
_publish
pasteFetchStartTime
receivePasteboardStreamData:version:withCompletion:
initWithServiceType:
setStreamOpenStartTime:
streamStatus
streamOpenStartTime
longLongValue
lastPathComponent
setSharedDataPath:
setSandboxExtensions:
streamXferStartTime
userInfo
submitRemotePasteboardWasRequested:
setStreamXferStartTime:
getContinuationStreamsWithEndpointData:completionHandler:
setLocalReflection:
setPbinfo:
setProtocolVersion:
setLocalSendStartTime:
setLocalInfo:
pboardInfoToSend
setExtraDataType:
readDataToEndOfFile
setExtraData:
localSendStartTime
submitDidSendLocalPasteboard:
setSupportsStreams:
serviceEndpointData
setSendingCoderVersion:
hasFetchedLocalData
pasteboardEmbeddedPayloadSizeLimitInBytes
pboardFetchSem
setPboardFetchSem:
clientq
sendingCoderVersion
setClientConnection:
setAuxConnection:
controlConnections
setScreenWatcherPresent:
isUIVisible
setIsUIVisible:
pasteboardUIMinimumDurration
setDontHideUIBefore:
localizedStringForKey:value:table:
notificationRef
dontHideUIBefore
pasteboardHideUIDelay
setNotificationRef:
_unpublish
fetchRemotePasteboardStatus:
fetchRemoteDeviceName:
localPasteboardTypesDidChange:forGeneration:
fetchRemotePasteboardTypesForProcess:withCompletion:
fetchRemotePasteboardForProcess:withCompletion:
setReturnPasteboardDataEarlyWithCompletion:
advertiser:didReceiveInputStream:outputStream:
startConnection:
getLocalPasteboardInfoData:
startServiceForPasteVersion:handler:
auxConnection
remoteAvailable
outStream
setOutStream:
inStream
setInStream:
osxUIConnection
setOsxUIConnection:
_screenWatcherPresent
_hasFetchedLocalData
_advertiseTypes
_remoteAvailable
_isUIVisible
_clientq
_xpclistener
_auxlistener
_controlListener
_auxConnection
_clientConnection
_clientNotificationConnection
_controlConnections
_currentLocalTypes
_currentLocalGeneration
_localTimeout
_currentLocalPasteboard
_currentLocalPasteboardSize
_pasteAdvertiser
_remoteGeneration
_pboardFetchSem
_pboardInfoToSend
_outStream
_inStream
_coders
_sendingCoderVersion
_fetchProgress
_showUITimer
_dontHideUIBefore
_osxUIConnection
_notificationRef
_pasteFetchStartTime
_localSendStartTime
_streamOpenStartTime
_streamXferStartTime
_pasteInfo
_localInfo
_uaBundle
T@"NSObject<OS_dispatch_queue>",&,V_clientq
T@"NSXPCListener",&,V_xpclistener
T@"NSXPCListener",&,V_auxlistener
T@"NSXPCListener",&,V_controlListener
T@"NSXPCConnection",&,V_auxConnection
T@"NSXPCConnection",&,V_clientConnection
T@"NSXPCConnection",&,V_clientNotificationConnection
T@"NSMutableSet",&,V_controlConnections
T@"UASharedPasteboardInfo",&,V_currentLocalTypes
TQ,V_currentLocalGeneration
T@"NSTimer",&,V_localTimeout
TB,V_hasFetchedLocalData
T@"NSArray",&,V_currentLocalPasteboard
Tq,V_currentLocalPasteboardSize
TB,V_advertiseTypes
TB,V_remoteAvailable
T@"SFCompanionAdvertiser",&,V_pasteAdvertiser
T@"UCRemotePasteboardGeneration",&,V_remoteGeneration
T@"NSObject<OS_dispatch_semaphore>",&,V_pboardFetchSem
T@"UASharedPasteboardInfoWrapper",&,V_pboardInfoToSend
T@"UASharedPasteboardOutputStreamManager",&,V_outStream
T@"UASharedPasteboardInputStreamManager",&,V_inStream
T@"NSMutableSet<UCStreamCoder>",&,V_coders
Tq,V_sendingCoderVersion
T@"NSProgress",&,V_fetchProgress
T@"NSTimer",&,V_showUITimer
T@"NSDate",&,V_dontHideUIBefore
TB,V_isUIVisible
T@"NSXPCConnection",&,V_osxUIConnection
T^{__CFUserNotification=},V_notificationRef
TQ,V_pasteFetchStartTime
TQ,V_localSendStartTime
TQ,V_streamOpenStartTime
TQ,V_streamXferStartTime
T@"UARemotePasteboardWasRequestedEvent",&,V_pasteInfo
T@"UARemotePasteboardDidSendLocalEvent",&,V_localInfo
T@"NSBundle",&,V_uaBundle
screenWatcherPresent
TB,GisScreenWatcherPresent,V_screenWatcherPresent
scheme
compare:options:
hasSuffix:
setInputState:
setOutputMode:
initWithCapacity:
setMessageQueue:
setInData:
setOutputStreamData:
setByteIndex:
setBytesRead:
setTotalBytesSent:
setTotalBytesReceived:
setInMessage:
setOutMessage:
setStreamError:
setShouldStop:
messageQueue
outMessage
scheduleInRunLoop:forMode:
initWithName:delta:queue:
setAssertionForRead:
setAssertionForWrite:
assertionForRead
releaseAssertion
assertionForWrite
tryStop
shouldStop
outputStreamData
_stop
delegate
streamError
outputMode
appendData:
hasSpaceAvailable
tryWriteRawData
shouldTryWrite
tryWriteMessage
handleOpenCompleted
handleBytesAvailable
handleSpaceAvailable
setShouldTryWrite:
inputState
bytesRead
inMessageLength
read:maxLength:
inData
dataHasMessage:
processHeader
handleMessageRead
setLength:
updateTimeUntilAssertionRelease:
setInMessageTag:
setInMessageLength:
inMessage
inMessageTag
write:maxLength:
trimFirstBytes:ofData:
setOutMessageTag:
byteIndex
outMessageTag
subdataWithRange:
dataWithData:
stream:handleEvent:
queueCount
writeRawData:
_shouldStop
_shouldTryWrite
_inMessageLength
_streamError
_delegate
_outputStreamData
_byteIndex
_outMessageTag
_outMessage
_messageQueue
_bytesRead
_inMessageTag
_inMessage
_inData
_inputState
_outputMode
_totalBytesSent
_totalBytesReceived
_assertionForRead
_assertionForWrite
T@"NSInputStream",&,V_inStream
T@"NSOutputStream",&,V_outStream
T@"NSError",&,V_streamError
T@"<UAStreamHandlerDelegate>",W,V_delegate
T@"NSMutableData",&,V_outputStreamData
Tq,V_byteIndex
Tq,V_outMessageTag
T@"NSMutableData",&,V_outMessage
T@"NSMutableArray",&,V_messageQueue
Tq,V_bytesRead
Tq,V_inMessageTag
TI,V_inMessageLength
T@"NSData",&,V_inMessage
T@"NSMutableData",&,V_inData
TQ,V_inputState
TQ,V_outputMode
Tq,V_totalBytesSent
Tq,V_totalBytesReceived
TB,V_shouldStop
TB,V_shouldTryWrite
T@"UATimedPowerAssertions",&,V_assertionForRead
T@"UATimedPowerAssertions",&,V_assertionForWrite
setHasBeenUsedAtLeastOnce:
hasBeenUsedAtLeastOnce
pushItem:
_items
_hasBeenUsedAtLeastOnce
_controller
TB,V_hasBeenUsedAtLeastOnce
T@"UAPingController",R,&,V_controller
setNeedToCallBlock:
timerSource
needToCallBlock
assertion
_releaseAssertion:
setTimerExpiration:
nextTimer
setNextTimer:
stringWithString:
objectEnumerator
timerExpiration
releaseAssertion:
_needToCallBlock
_assertion
_timerSource
_timerExpiration
_nextTimer
T@"NSObject<OS_dispatch_source>",R,&,V_timerSource
T@"NSDate",C,V_timerExpiration
TI,R,V_assertion
T@"NSObject<OS_dispatch_queue>",R,&,V_mainDispatchQ
TQ,V_nextTimer
TB,V_needToCallBlock
T@"NSString",R,C,V_name
strongToWeakObjectsMapTable
getBytes:length:
setDestURL:
setArchiveReadHandle:
destURL
archiveReadHandle
_destURL
_archiveReadHandle
T@"NSURL",&,V_destURL
T@"NSString",&,V_uuid
T@"NSFileHandle",&,V_archiveReadHandle
receiver
initWithManager:simulator:
sendEvent
packetData
setPacketData:
packetNumber
setPacketNumber:
_packetData
_packetNumber
T@"NSData",&,V_packetData
Tq,V_packetNumber
setFile:
setOptions:
setPacketSize:
setTotalPacketCount:
setCurrentPacketNumber:
setNextPacketNumber:
setNextPacketToDeliver:
setFetchQ:
setNextPacketReady:
setPacketPreLoadCount:
packetPreLoadCount
setQueuedPackets:
setReceiver:
checkShouldFetch
nextPacketToDeliver
nextPacketReady
queuedPackets
nextPacketNumber
fetchQ
file
packetSize
prepNextPacket
currentPacketNumber
_totalPacketCount
_tag
_receiver
_file
_options
_packetSize
_packetPreLoadCount
_queuedPackets
_nextPacketNumber
_nextPacketToDeliver
_currentPacketNumber
_fetchQ
_nextPacketReady
Tq,V_totalPacketCount
T@"<UCFilePacketReceiver>",W,V_receiver
T@"NSFileHandle",&,V_file
T@"NSDictionary",&,V_options
Tq,V_packetSize
Tq,V_packetPreLoadCount
T@"NSMutableArray",&,V_queuedPackets
Tq,V_nextPacketNumber
Tq,V_nextPacketToDeliver
Tq,V_currentPacketNumber
T@"NSObject<OS_dispatch_queue>",&,V_fetchQ
T@"NSObject<OS_dispatch_semaphore>",&,V_nextPacketReady
Tq,V_tag
setAdvertiser:
setClient:
setPairedPeer:
sharingAdvertiser
mockAdvertiser
sharingReceiver
mockScanner
pairedPeer
activityScanner:lostDeviceWithDevice:
removeSFActivityScanner:
removeSFActivityAdvertiser:
dataWithJSONObject:options:error:
initWithData:encoding:
sendResponse:
scanString:intoString:
setDevice:
setAdvertisementPayload:
setAdvertisementVersion:
isAtEnd
scanLocation
substringFromIndex:
JSONObjectWithData:options:error:
whitespaceCharacterSet
scanUpToCharactersFromSet:intoString:
scanInteger:
initWithType:string:dynamicType:teamID:webpageURL:options:isCurrent:when:
advertisementPayload
rangeOfString:
scannerWithString:
setCaseSensitive:
whitespaceAndNewlineCharacterSet
uppercaseString
scanDouble:
scanUpToString:intoString:
wasResumed
scanMockAdvertisement:
activityScanner:receivedAdvertisement:
device
null
activityAdvertiser:activityPayloadForAdvertisementPayload:command:requestedByDevice:withCompletionHandler:
processCommand:
lostDeviceWithUUID:
advertiser
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
activityAdvertiser:pairedDevicesChangedNotification:
activityAdvertiser:didSendPayloadForActivityIdentifier:toDevice:error:
activityScanner:foundDeviceWithDevice:
activityScanner:pairedDevicesChanged:
doAdvertiseAdvertisementPayload:options:
processCommands:completionHandler:
activityPayloadFromDevice:forAdvertisementPayload:command:timeout:withCompletionHandler:
_pendingPayloadFetches
_pairedPeer
_advertiser
_mockAdvertiser
_mockScanner
T@"UAActivityReplayAdvertiser",&,V_advertiser
T@"UAActivityReplayReceiver",&,V_receiver
T@"UAReplayClientController",&,V_client
T@"UAMockActivityAdvertiser",R,&,V_mockAdvertiser
T@"UAMockActivityScanner",R,&,V_mockScanner
T@"NSMutableDictionary",&,V_items
T@"SFPeerDevice",&,V_pairedPeer
characterSetWithCharactersInString:
scanCharactersFromSet:intoString:
_UABundle
localizations
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
pathForResource:ofType:inDirectory:forLocalization:
initWithContentsOfFile:
localizedStringForKey:comment:
pairedScanner
receiveAdvertisement:options:fromPeer:
advertiseAdvertisementPayload:options:
fetchSFPeerDevicesWithCompletionHandler:
fetchPeerForUUID:withCompletionHandler:
fetchLoginIDWithCompletionHandler:
payloadRequestFromPeer:advertisementPayload:command:completionHandler:
_pairedScanner
_peer
T@"SFPeerDevice",R,C,V_peer
T@"UAPairedSFActivityScanner",&,V_pairedScanner
T@"<SFActivityAdvertiserDelegate>",V_delegate
initWithAdvertisementVersion:advertisementPayload:options:device:
sendFoundDevice
setSendFoundDevice:
pairedAdvertiser
scanForTypes:
_sendFoundDevice
_pairedAdvertiser
TB,V_sendFoundDevice
T@"UAPairedSFActivityAdvertiser",&,V_pairedAdvertiser
T@"<SFActivityScannerDelegate>",V_delegate
numberWithUnsignedInt:
simulatorWithController:parentSimulatorPortName:
addSimulator:
simulators
simulatorControllerForCommandPort:
setSimulatorForCommandPort:controller:
removeSimulator:
simulatorStatus
dispatchQ
setDispatchQ:
simulatorPort
setSimulatorPort:
ourPeerDevice
setOurPeerDevice:
_simulators
_simulatorPort
_dispatchQ
_ourPeerDevice
TI,V_simulatorPort
T@"SFPeerDevice",&,V_ourPeerDevice
T@"NSObject<OS_dispatch_queue>",&,V_dispatchQ
T@"NSSet",R,&
simulatorWithController:pairedPort:childSimPid:childVersion:
setPeeredDevice:
commandPort
initRequiringSecureCoding:
encodeObject:forKey:
encodedData
TQ,V_payloadXferTime
Tq,V_errorCode
cornerActionItemDefaults
registerDefaults:
boolForKey:
integerForKey:
doubleForKey:
boolValueForKey:default:
activityContinuationAllowed
timeIntervalForKey:default:
integerValueForKey:default:
setBool:forKey:
dictionaryRepresentation
sortedArrayUsingSelector:
valueForKey:
mainBundle
setValue:forKey:
enableHandoffInPowerSaverMode
activityBTLESharingEnabled
loggingAdvertiserEnabled
minimumTimeForAnAdvertisementToLive
minimumTimeToLiveAfterRemovingAdvertisement
recentlyEligibleItemInterval
screenSaverDelayToRemovingAdvertisements
screenSaverDelayBeforeRemovingPasteboardAdvertisement
systemIdleDelayBeforeRemovingAdvertisements
maximumTimeoutAfterAdvertisingEndsThatActivityCanBeResumed
advertisedItemWhichIsWebBrowserIntervalToRememberEarlierActivities
cornerActionItemAdditionalTimeToLiveAfterValidIntervalExpires
cornerActionItemMaximumTimeForBTLEItemToLive
receivedBTLEItemTimeToLiveAfterDeviceLostIfPayloadIsQueued
activePayloadUpdateInterval
maximumTimeoutToWaitForClientProcessToUpdateActivityInformation
maximumActivityPayloadSizeInBytes
enableNetworkControlListener
enableAutomaticRendevousPairing
rendevousPairingType
networkControlListenerPort
activityPayloadWarningSizeInBytes
minimumIntervalBetweenAdvertisements
maximumAdvertisementsPerTimeInterval
maximumAdvertisementsTimeInterval
debugValidatePayloadFetchTimeInterval
debugAdditionalPayloadReceiveTimeInterval
debugValidateRetryPayloadFetchFailureInterval
debugValidateSampleResponseMinimumActivityPayloadSizeInBytes
debugValidateSampleResponseMaximumActivityPayloadSizeInBytes
debugUserActivityTimeOffset
debugForceNewPayloadEncoder
debugForceOldPayloadEncoder
dontSendActivityTitle
debugReadvertiseImmediately
debugEnablePrefetch
debugCrossoverAllActivities
debugIgnoreAppsUsedForDevelopment
enableSharingFramework
setEnableSharingFramework:
remotePasteboardAvailableTimeout
pasteboardTypeRequestTimeout
pasteboardPasteRequestTimeout
handoffPayloadRequestTimout
payloadFetchResponseDelay
shouldIgnoreBluetoothDisabled
ignoreLostDevice
lastActiveItemRemovalDelay
defaults:
setDefault:value:
clientIsActive:
initWithManager:controller:
T@"UAUserActivityClientProcessesController",R,&,V_controller
submitUserActivityBecameCurrent:withToken:
submitUserActivityWasDiscovered:
submitRemotePasteboardBecameAvailable
roundNum:to:
doInitializeWithClientVersion:clientInfo:completionHandler:
doFetchUserActivityInfoWithUUID:completionHandler:
doUpdateUserActivityInfo:makeCurrent:completionHandler:
doUpdateUserActivityWithUUID:setActive:
doDeleteUserActivityWithUUID:
doAddDynamicUserActivity:matching:
doRemoveDynamicUserActivity:matching:
doMarkUserActivityAsDirty:forceImmediate:webpageURL:expiration:hasiCloudDocument:hasUnsynchronizediCloudDoc:
doPinUserActivityInfo:completionHandler:
doGetCurrentUserActivityInfo:
doDetermineIfUserActivityIsCurrent:completionHandler:
doGetUserActivityProxiesWithOptions:predicate:completionHandler:
doGetLoggingFileForClient:options:completionHandler:
doRegisterAsProxyApplicationForPid:options:completionHandler:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
askClientUserActivityToSave:
askClientUserActivityToSave:completionHandler:
tellClientUserActivityItWasResumed:
tellClientDebuggingEnabled:logFileHandle:
writeLocalPasteboardToFile:itemDir:withCompletion:
setLogFileDirectoryPath:
logFileDirectoryPath
setLogFilePath:
logFilePath
fileHandleForUpdatingAtPath:
setOutputFile:
initWithFileDescriptor:closeOnDealloc:
log:format:
outputFile
shouldLog:
initWithFormat:arguments:
writeData:
log:format:args:
logItem:
_outputFile
_logFileDirectoryPath
_logFilePath
T@"NSFileHandle",&,V_outputFile
T@"NSString",&,V_logFileDirectoryPath
T@"NSString",&,V_logFilePath
lastUUID
setLastUUID:
_lastUUID
T@"NSUUID",&,V_lastUUID
isUIApplicationElement
hasKeyboardFocus
UIApplicationElement
TB,R,N,GisUIApplicationElement
T@"NSString",R,C,N
TB,R,N
frame
referenceFrame
level
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
Tq,R,N
mainDisplayLayoutMonitor
currentLayout
updateMainScreenLayout:
localReceiver
appStateMonitor
setAppStateMonitor:
handleAppStateMonitorUpdate:
configurationForDefaultMainDisplayMonitor
setNeedsUserInteractivePriority:
setTransitionHandler:
monitorWithConfiguration:
mainScreenBundleIdentifiersInOrder
ifLockScreenIsActive:visibleBundleIdentifiers:
determineVisibleOrderingForProcessesWithUserActivities:previousBundleIDOrdering:
carPlayScreenBundleIdentifiersInOrder
userActivityClientForBundleIdentifier:
elements
arrayWithArray:
currentAdvertisableActivity
proxiedBundleIdentifier
setLastFrontTime:
setIgnoreLockScreenUntil:
ignoreLockScreenUntil
layoutUpdateScheduler
UTF8String
numberWithLong:
isDefaultFrontmostApp
userActivityAdvertisableItemByUUID:
additionalUserActivityAdvertisableItems
uniqueIdentifiers
addAdditionalUserActivityAdvertisableItems:
proxiedClients
isEligibleAsExtension
frontBundleID
setFrontBundleID:
eligibleInBackground
sortDescriptorWithKey:ascending:
sortUsingDescriptors:
advertiseableItemForBundleIdentifier:
lastFrontTime
initWithController:connection:
DEBUG_lastEligibleItems
addUserActivityClient:
visibleUserActivityClients
userActivityClientForUUID:
userActivityClientForPID:
removeAdditionalUserActivityAdvertisableItems:
removeClientActivityClient:
registerAsProxyApplication:forPid:
setLocalReceiver:
carPlayDisplayLayoutMonitor
setMainScreenBundleIdentifiersInOrder:
setCarPlayScreenBundleIdentifiersInOrder:
_activityManagerListener
_userActivityClientsByPID
_additionalUserActivityAdvertisableItems
_proxiedClients
_userActivityClientsByBundleID
_visibleUserActivityClients
_mainDisplayLayoutMonitor
_appStateMonitor
_frontBundleID
_localReceiver
_carPlayDisplayLayoutMonitor
_layoutUpdateScheduler
_mainScreenBundleIdentifiersInOrder
_carPlayScreenBundleIdentifiersInOrder
_ignoreLockScreenUntil
_DEBUG_lastEligibleItems
T@"UALocalItemReceiver",&,V_localReceiver
T@"NSSet",R,C,D
T@"FBSDisplayLayoutMonitor",R,&,V_mainDisplayLayoutMonitor
T@"FBSDisplayLayoutMonitor",R,&,V_carPlayDisplayLayoutMonitor
T@"UADispatchScheduler",R,&,V_layoutUpdateScheduler
T@"NSArray",C,V_mainScreenBundleIdentifiersInOrder
T@"NSArray",C,V_carPlayScreenBundleIdentifiersInOrder
T@"NSString",C,V_frontBundleID
T@"NSDate",C,V_ignoreLockScreenUntil
T@"NSMutableDictionary",R,&,V_proxiedClients
T@"NSArray",R,C,V_DEBUG_lastEligibleItems
T@"NSArray",R,C,D
T@"BKSApplicationStateMonitor",&,V_appStateMonitor
scanner
setPeer:
setScanner:
_scanner
T@"SFPeerDevice",&,V_peer
T@"SFActivityScanner",&,V_scanner
attach
detach
localDevice
poweredOn
enumerateKeysAndObjectsUsingBlock:
attachSession:
detachSession:
terminateSession:
processCallbacks
session
handleSessionEvent:event:result:
handleLocalDeviceCallback:event:result:
_session
_localDevice
_sessionCallbacks
_localDeviceCallbacks
_attached
_poweredOn
_poweredOnValid
_callbacks
initWithObjects:forKeys:count:
dictionaryWithDictionary:
additionalItems
teamID
absoluteString
userInfoPayload
streamsData
init:title:date:userInfoPayload:teamID:activityType:
initWithNSError:
addAdditionalItem:forKey:
initWithData:
encodeAsData
uniqueIdentifier
setUniqueIdentifier:
title
setUserInfoPayload:
setStreamsData:
setTeamID:
_uniqueIdentifier
_title
_when
_userInfoPayload
_webpageURL
_streamsData
_teamID
_additionalItems
T@"NSUUID",C,V_uniqueIdentifier
T@"NSString",C,V_title
T@"NSDate",C,V_when
T@"NSData",C,V_userInfoPayload
T@"NSURL",C,V_webpageURL
T@"NSData",C,V_streamsData
T@"NSString",C,V_teamID
T@"NSDictionary",R,C
periodicCleanupFunc
sfActivityScanners
periodicCleanup
foundDevice:
activeDevices
isDefaultPairedDevice
lostDevice:
scheduledTimerWithTimeInterval:repeats:block:
removeAllFromDevice:
lastSeenPasteboardDevice
setLastSeenPasteboardDevice:
remotePboardTimer
setRemotePboardTimer:
stringByAppendingString:
removeAfter
setRemoveAfter:
currentUntilDate
setCurrentUntilDate:
resignCurrent
_addItem:scheduleUpdates:
isPayloadRequested
isPayloadAvailable
timeIntervalSinceReferenceDate
dateWithTimeInterval:sinceDate:
isEqualHashedPayloadBytes:
receiveAdvertisement:scanner:
substringToIndex:
containsString:
initWithSFActivityAdvertisement:
lastSeenPasteboardVersionBit
setLastSeenPasteboardVersionBit:
clearRemotePasteboardAvailable:
sharingBTLESuggestedItemForAdvertisementPayload:forDevice:
optionBits
compareOptionBits:
time
setDontPrefetchBefore:
clearPayload
updateFromSFAdvertisement:
advertisementKind
cornerActionBTLEItemWithSFAdvertisement:optionBits:scanner:receiver:
timeIntervalSince1970
addItem:scheduleUpdates:
fetchMoreAppSuggestionsFromDevice:
isCurrent
dontPrefetchBefore
sfActivityScanner
addNewItemsFromPayloads:device:scanner:force:
cornerActionBTLEItemWithPayload:device:options:optionBits:scanner:receiver:
dateByAddingTimeInterval:
forceScanning
setForceScanning:
_sfActivityScanners
_activeDevices
_lastAutoPullActivitiesRequesterId
_recentlyLostDeviceIDs
_forceScanning
_periodicCleanup
_lastSeenPasteboardDevice
_lastSeenPasteboardVersionBit
_remotePboardTimer
T@"UADispatchScheduler",R,&,V_periodicCleanup
TB,V_forceScanning
T@"SFPeerDevice",&,V_lastSeenPasteboardDevice
Tq,V_lastSeenPasteboardVersionBit
T@"NSTimer",&,V_remotePboardTimer
setStream:
setTypesToReceive:
stream
streamDoneWithInfo:error:
removeFromRunLoop:forMode:
setReceivedData:
setReceivedDelem:
receivedData
receivedDelem
setPbwrapper:
pbwrapper
dataWithBytesNoCopy:length:freeWhenDone:
initWithInputStream:outputStream:dataFile:
receiveTypes:withProgress:completionHandler:
typesToReceive
timeRemaining
setTimeRemaining:
_receivedDelem
_stream
_typesToReceive
_pbwrapper
_receivedData
_timeRemaining
T@"NSInputStream",&,V_stream
T@"NSSet",&,V_typesToReceive
T@"UASharedPasteboardInfoWrapper",&,V_pbwrapper
T@"NSMutableData",&,V_receivedData
TQ,V_timeRemaining
TB,V_receivedDelem
activityTypes
initWithPayload:device:options:optionBits:type:activityType:bundleIdentifier:teamIDs:advertisingOptions:scanner:receiver:dynamicIdentifier:
initWithPayload:device:options:optionBits:type:activityType:bundleIdentifier:teamIDs:advertisingOptions:scanner:receiver:
setDynamicActivityType:
initWithAdvertisedBytes:
mutableCopy
setPeerDevice:
setTeamIDs:
currentUntil
validUntil
payloadRequestedCompletions
setPayloadRequestedCompletions:
payloadBytes
setPayloadAvailable:
teamIDs
setPersistentIdentifier:
payloadAvailabilityDelay
setPayloadAvailabilityDelay:
setOptionBits:
_optionBits
_currentUntilDate
_advertisementPayload
_payloadAvailabilityDelay
_payloadRequestedCompletions
_teamIDs
_dontPrefetchBefore
_removeAfter
T@"NSMutableSet",&,V_payloadRequestedCompletions
T@"SFActivityScanner",R,&,V_scanner
T@"UASharingReceiver",R,&,V_receiver
BTLEPayloadData
T@"NSData",R,C,D
T@"SharingBTLEAdvertisementPayload",C,V_advertisementPayload
TI,V_optionBits
T@"NSDate",C,V_currentUntilDate
T@"NSSet",C,V_teamIDs
T@"NSDate",C,V_dontPrefetchBefore
T@"NSDate",C,V_removeAfter
Td,V_payloadAvailabilityDelay
entitlementValueForKey:ofClass:
pasteboardTypes
generation
_pasteboardTypes
_generation
T@"NSSet",&,V_pasteboardTypes
Tq,V_generation
setDataSent:
setTypesToSend:
headerForData:
setCurrentSendData:
currentSendData
shutdownTimerFired:
setBackupTimer:
backupTimer
shutdownStream
dataSent
initWithOutputStream:inputStream:pasteboard:
sendTypes:completionHandler:
typesToSend
infoSent
setInfoSent:
_dataFile
_typesToSend
_currentSendData
_infoSent
_dataSent
_backupTimer
T@"NSOutputStream",&,V_stream
T@"NSFileHandle",&,V_dataFile
T@"NSSet",&,V_typesToSend
T@"NSData",&,V_currentSendData
T^B,V_infoSent
TQ,V_dataSent
T@"NSTimer",&,V_backupTimer
setTeamIdentifier:
allowedToUseLSAlwaysPick
allowedToUseUAAlwaysAdvertise
allowedToUseEligibleEvenWhenInBackground
payloads
setPayloads:
expirationDate
setExpirationDate:
eligibleForSearch
setEligibleForSearch:
eligibleForPublicIndexing
setEligibleForPublicIndexing:
isEligibleToAdvertiseWithUUID:
isEligibleToAlwaysAdvertiseWithUUID:
isDirtyActivityWithUUID:
askSourceProcessToUpdateActivityWithUUID:evenIfClean:completionHandler:
didResumeUserActivityWithUUID:completionHandler:
initWithUserActivityInfo:client:
initWithUUID:type:options:client:
alwaysPickValue
alwaysEligible
update:
isDirty
needsUpdateBeforeAdvertising
wasResumedOnAnotherDeviceWithCompletionHandler:
T@"UAUserActivityClientProcess",W,V_client
referrerURL
_alwaysPick
_alwaysEligible
_alwaysPickValue
TB,R,V_alwaysPick
Tq,R,V_alwaysPickValue
TB,R,V_alwaysEligible
setController:
T@"UAActivityReplay",&,V_controller
advertisementVersion
encodeInt64:forKey:
decodeInt32ForKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
_advertisementVersion
_device
Tq,V_advertisementVersion
T@"NSData",C,V_advertisementPayload
T@"NSDictionary",C,V_options
T@"SFPeerDevice",&,V_device
setOs_transaction:
isSandboxed
applicationIdentifier
pluginKitProxyForIdentifier:
protocol
applicationInfoForPID:completion:
debugStateChanged:
addObserver:selector:name:object:
allowedToAccessAnyItem
removeUserActivityAdvertiseableItemByUUID:
allowedToUseLSAlwaysEligible
pendingUpdateTasks
targetWithPid:
attributeWithDomain:name:
initWithExplanation:target:attributes:
acquireWithError:
dispatchPendingTasksForUUID:error:
addIndex:
removeObjectsAtIndexes:
clientIsSandboxed
setApplicationIdentifier:
currentConnection
synchronize
allowedToGetCurrentActivityInfo
allowedToMatchUserActivities
initWithUUID:activityType:dynamicActivityType:bundleID:
domain
dictionaryWithObject:forKey:
addUserActivity:
auditTokenValue
dirtyUUIDs
removeUserActivity:
setManager:
setAllowedToAccessAnyItem:
frontmost
clientIsSigned
userActivityAdvertisableItemsByUUID
setUserActivityAdvertisableItemsByUUID:
os_transaction
setPendingUpdateTasks:
_pendingResumeActivityUUIDs
_clientIsSandboxed
_allowedToAccessAnyItem
_defaultFrontmostApp
_isEligibleAsExtension
_frontmost
_allowedToUseLSAlwaysEligible
_allowedToUseEligibleEvenWhenInBackground
_allowedToUseLSAlwaysPick
_allowedToUseUAAlwaysAdvertise
_allowedToGetCurrentActivityInfo
_allowedToMatchUserActivities
_clientIsSigned
_auditToken
_applicationIdentifier
_dirtyUUIDs
_currentAdvertisableActivity
_lastFrontTime
_teamIdentifier
_userActivityAdvertisableItemsByUUID
_os_transaction
_pendingUpdateTasks
T@"NSMutableSet",R,C,V_dirtyUUIDs
T@"NSMutableDictionary",&,V_userActivityAdvertisableItemsByUUID
T@"UACornerActionManager",W,V_manager
TC,V_allowedToAccessAnyItem
T@"NSObject<OS_os_transaction>",&,V_os_transaction
T@"NSMutableArray",&,V_pendingUpdateTasks
T@"NSArray",R
T@"NSXPCConnection",R,W,V_connection
T@"UAAuditToken",R,&,V_auditToken
T@"UAUserActivityAdvertisableItem",R,&,V_currentAdvertisableActivity
TB,R,V_frontmost
TB,R,V_allowedToUseLSAlwaysEligible
TB,R,V_allowedToUseEligibleEvenWhenInBackground
TB,R,V_allowedToUseLSAlwaysPick
TB,R,V_allowedToUseUAAlwaysAdvertise
TB,R,V_allowedToGetCurrentActivityInfo
TB,R,V_allowedToMatchUserActivities
T@"NSDate",C,V_lastFrontTime
defaultFrontmostApp
TB,R,GisDefaultFrontmostApp,V_defaultFrontmostApp
TB,R,GisEligibleAsExtension,V_isEligibleAsExtension
TB,R,V_clientIsSandboxed
TB,R,V_clientIsSigned
T@"NSString",C,V_applicationIdentifier
T@"NSString",R,C,V_teamIdentifier
browserLookup
setDomain:
setBrowserLookup:
searchForServicesOfType:inDomain:
scanForPeersOfType:domain:
listeningService
port
initWithManager:service:
setListeningService:
initWithDomain:type:name:port:
publishWithOptions:
initWithManager:inputStream:outputStream:name:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
listenForIncomingConnections:port:type:
_browserLookup
_type
_domain
_listeningService
T@"NSNetServiceBrowser",&,V_browserLookup
T@"NSString",C,Vname
T@"NSString",C,V_type
T@"NSString",C,V_domain
T@"NSNetService",&,V_listeningService
setPeerName:
setReadBuffer:
setInputStream:
setOutputStream:
getInputStream:outputStream:
inputStream
peerName
propertyForKey:
outputStream
peerUUID
readBuffer
writeBuffer
setWriteBuffer:
setPeerUUID:
getStreamsToHostWithName:port:inputStream:outputStream:
createConnection:host:port:
_inputStream
_outputStream
_readBuffer
_writeBuffer
_peerName
_peerUUID
T@"NSInputStream",&,V_inputStream
T@"NSOutputStream",&,V_outputStream
T@"NSMutableData",&,V_readBuffer
T@"NSMutableData",&,V_writeBuffer
T@"NSString",C,V_peerName
T@"NSUUID",C,V_peerUUID
substringWithRange:
replaceOccurrencesOfString:withString:options:range:
initWithURL:error:
bundleRecord
compatibilityObject
applicationProxyForIdentifier:
appState
isInstalled
setLeaf:
URLByDeletingLastPathComponent
setBaseURL:
baseURL
leaf
_baseURL
_leaf
T@"NSURL",&,V_baseURL
T@"NSString",&,V_leaf
isSendMode
receivedDataBack:
processReceivedData
sendNextChunk
setRecvHandler:
recvHandler
setRecvRap:
recvRap
setIsSendMode:
setSendRap:
sendRap
setTypes:
_isSendMode
_recvHandler
_recvRap
_sendRap
TB,V_isSendMode
T@?,C,V_recvHandler
T@"UASharedPasteboardInfoWrapper",&,V_recvRap
TQ,V_totalBytesReceived
T@"UASharedPasteboardInfoWrapper",&,V_sendRap
initWithType:string:dynamicType:teamID:webpageURL:options:isCurrent:when:versionFlags:
initWithItem:isCurrent:when:versionFlags:
dateEpochStart:
setEpochStart:
initWithAdvertisedBytes:options:
epochStart
timeOffset
initWithItem:isCurrent:when:
copyWithZone:
setPayloadBytes:
setCurrent:
setTimeOffset:
containsPasteboard
matchesItem:
epochEnd
activityUUID
_bytes
_activityUUID
_epochEnd
_epochStart
TC,D
T@"NSDate",C,V_epochStart
current
TB,GisCurrent
T@"NSDate",R,C,D
T@"NSDate",R,C,V_epochEnd
T@"NSData",C
Ti,R,D
T@"NSUUID",R,C,V_activityUUID
host
dateWithTimeIntervalSinceReferenceDate:
decodeIntegerForKey:
encodeInteger:forKey:
_pbinfo
_extraData
_extraDataType
_protocolVersion
T@"UASharedPasteboardInfo",&,V_pbinfo
T@"NSData",&,V_extraData
Tq,V_extraDataType
Tq,V_protocolVersion
initWithArchivedUserActivityInfo:
setSimulator:
getUUIDBytes:
initWithArchivedUserActivityInfo:peerDevice:simulator:
T@"UASimulator",&,V_simulator
pidVersion
euid
ruid
egid
rgid
asid
getValue:
objCType
_auditTokenValue
T{?=[8I]},R,V_auditTokenValue
TI,R,D
sandboxed
TB,R,D,GisSandboxed
setAdvertisementTimes:
_updateAdvertisement
_periodicIdleUpdate
setUserIsCurrent:
setLastUserActiveTime:
currentAdvertisedItem
shouldAdvertisePasteboard
scheduleAdvertisementUpdate
currentAdvertisementPayload
lastAdvertismentTime
preventIdleSleepAssertion
setPreventIdleSleepAssertion:
_advertisePayload:force:
updateAdvertisingPowerAssertion:
sfActivityAdvertisers
_advertisePayload:force:sfAdvertiser:
setCurrentAdvertisementPayload:
setLastAdvertismentTime:
scheduleAdvertisementUpdate:
setLastAdvertisementPayload:
shouldAdvertiseAutoPullActivityList
scheduleIOPowerManagerUserIdleNotifications
userIsCurrent
pasteboardAvailible
pasteboardBitValue
beginTimeForNonActiveAdvertisement
lastUserActiveTime
advertisementTimes
setCurrentAdvertisedItem:
currentAdvertisedItemOtherAdvertisedItems
setCurrentAdvertisedItemOtherAdvertisedItems:
periodicUpdate
nextScheduleUpdate
changeAdvertisementThreadSpinCount
setChangeAdvertisementThreadSpinCount:
removeAdvertisement
setBeginTimeForNonActiveAdvertisement:
shouldAdvertiseHandoff
advertiseItem:force:
moveAdvertisementToNonActive
advertisePayload:force:
removeIOPowerManagerUserIdleNotifications
_refreshPairedSFPeerDevices
setPairedDevices:
_updatePairedDeviceCapabilities
activityAdvertiser:activityPayloadForAdvertisementPayload:handoffCommand:requestedByDevice:withCompletionHandler:
dataForMoreAppSuggestions
dataWithCapacity:
increaseLengthBy:
peerDeviceCanAcceptNewerPayload:
encodedInfoToOldEncodedInfo:
encodedUserInfoError
persistentIdentifier
dictionaryWithObjectsAndKeys:
userIsCurrentIdleTracker
lastAdvertisedGeneration
setLastAdvertisedGeneration:
pboardBitToAdvertise
setPboardBitToAdvertise:
sfActivityAdvertiser
lastAdvertisementPayload
validKey
keyCounter
initWithManager:advertiser:
currentAdvertisedBytes
mostRecentAdvertisedBytesTime
_advertisePayload:
activityAdvertiser:activityPayloadForAdvertisementPayload:requestedByDevice:withCompletionHandler:
helpersDispatchGroup
dontAdvertiseAsCurrentUntil
setDontAdvertiseAsCurrentUntil:
setUserIsCurrentIdleTracker:
_sfAdvertisers
_needToRefreshPeerDevices
_shouldAdvertiseHandoff
_shouldAdvertisePasteboard
_userIsCurrent
_pboardBitToAdvertise
_pairedDevices
_currentAdvertisedItem
_nextScheduleUpdate
_periodicUpdate
_dontAdvertiseAsCurrentUntil
_currentAdvertisementPayload
_lastAdvertismentTime
_lastAdvertisementPayload
_currentAdvertisedItemOtherAdvertisedItems
_advertisementTimes
_changeAdvertisementThreadSpinCount
_preventIdleSleepAssertion
_userIsCurrentIdleTracker
_lastUserActiveTime
_lastAdvertisedGeneration
_beginTimeForNonActiveAdvertisement
T@"NSObject<OS_dispatch_group>",R,&,V_helpersDispatchGroup
T@"NSObject<OS_dispatch_queue>",R,&,V_dispatchQ
T@"UADispatchScheduler",R,&,V_nextScheduleUpdate
T@"UADispatchScheduler",R,&,V_periodicUpdate
T@"NSDate",&,V_dontAdvertiseAsCurrentUntil
T@"SharingBTLEAdvertisementPayload",&,V_currentAdvertisementPayload
T@"NSDate",&,V_lastAdvertismentTime
T@"SharingBTLEAdvertisementPayload",C,V_lastAdvertisementPayload
T@"UAUserActivityInfo",&,V_currentAdvertisedItem
T@"NSMutableDictionary",&,V_currentAdvertisedItemOtherAdvertisedItems
T@"NSMutableArray",&,V_advertisementTimes
TQ,V_changeAdvertisementThreadSpinCount
T@"UATimedPowerAssertions",&,V_preventIdleSleepAssertion
TB,V_userIsCurrent
T@"PowerManagerIdleTracker",&,V_userIsCurrentIdleTracker
T@"NSDate",C,V_lastUserActiveTime
TB,R,V_shouldAdvertiseHandoff
TB,R,V_shouldAdvertisePasteboard
Tq,V_lastAdvertisedGeneration
TB,V_pboardBitToAdvertise
T@"NSDate",&,N,V_beginTimeForNonActiveAdvertisement
T@"NSSet",C,V_pairedDevices
bootstrapName
reconnectToParentSimulator
ourDevice
creator
setSimulatorInFront:
setOurDevice:
_pairedClientPort
_notifyToken
_notifiedItems
_activitiesShouldCrossover
_commandPort
_ourDevice
_peeredDevice
_creator
_bootstrapName
T@"NSString",R,C,V_bootstrapName
T@"UASimulatorController",R,&,V_controller
T@"SFPeerDevice",&,V_ourDevice
T@"SFPeerDevice",&,V_peeredDevice
T@"UASimulatorAdvertiser",R,&,V_advertiser
T@"UASimulatorReceiver",R,&,V_receiver
T@"UASimulatorAdvertisementCreator",R,&,V_creator
TB,R,V_activitiesShouldCrossover
TI,R,V_commandPort
initWithUUIDBytes:
replayableAdvertisableItemWithAdvertisableItem:
initWithUUID:
_wasResumed
T@"NSObject<OS_dispatch_semaphore>",R,&,V_wasResumed
setStr:
initWithString:
_str
T@"NSString",C,V_str
componentsJoinedByString:
setRecentActionsStateHandler:
networkConnectionHandler
doSetDebugOption:value:
removeObjectsInRange:
initWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
setNetworkConnectionHandler:
disableAdminEntitlmentChecking
sharedAdvertiser
applicationIsInstalled:
lowercaseString
componentsSeparatedByString:
lastObject
replayManager
setReplayManager:
unarchivedObjectOfClasses:fromData:error:
doNOP:withCompletionHandler:
doFindMatchingUserActivityForString:withCompletionHandler:
doCopyAdvertisedUUIDWithCompletionHandler:
doCopyAllUUIDsOfType:withCompletionHandler:
doCopyEnabledUUIDsWithCompletionHandler:
doCopyDebuggingInfo:completionHandler:
doCopyRecentActions:completionHandler:
doCopyStatusString:options:completionHandler:
doFetchMoreAppSuggestions
doCopyDynamicUserActivitiesString:completionHandler:
doTerminateServer
doGetCurrentAdvertisedItemUUID:
doInjectBTLEItem:type:identifier:title:activityPayload:webPageURL:remoteModel:duration:payloadDelay:
doCopySimulatorStatusString:completionHandler:
doCopyDefaults:completionHandler:
doSetDefaults:archivedValue:
doWillSaveDelegate:completionHandler:
doSetupNetworkedPairs:port:
doSetupRendevous:domain:activate:
doReplayCommands:completionHandler:
doSetRemotePasteboardAvailable:
doSetLocalPasteboardReflection:
doGetSFActivityAdvertisement:completionHandler:
doGetPairedDevices:completionHandler:
doGetSysdiagnoseStringsIncludingPrivateData:completionHandler:
setDebugging:
supportNetworkPeers
receivePing:
doDidSaveDelegate:completionHandler:
startAdvertisingPingWithTimeInterval:
stopAdvertisingPing
fakeBTLEInjectedItem
setFakeBTLEInjectedItem:
listener
setListener:
ignoredRTimeVal
recentActionsStateHandler
_supportNetworkPeers
_disableAdminEntitlmentChecking
_replayManager
_networkConnectionHandler
_recentActionsStateHandler
_ignoredRTimeVal
T@"SharingBTLESuggestedItem",&,VfakeBTLEInjectedItem
T@"NSXPCListener",&,Vlistener
T@"UAActivityReplay",&,V_replayManager
T@"UANetworkReplayRendevousHandler",&,V_networkConnectionHandler
T{timeval=qi},R,V_ignoredRTimeVal
TQ,V_recentActionsStateHandler
T@"UACornerActionManager",&,Vmanager
TB,V_disableAdminEntitlmentChecking
TB,V_supportNetworkPeers
currentCalendar
components:fromDate:
hour
minute
_shouldAdvertiseAutoPullActivityList
T@"NSArray",C,D
T@"NSArray",R,C
TB,V_shouldAdvertiseAutoPullActivityList
0123456789abcdef
%c%c
com.apple.UserActivity.UniversalClipboard.Sent
clientWriteSize
clientWriteTime
clientWriteSpeed
usedStreams
streamOpenDelay
streamDataSize
streamTransferTime
streamTransferSpeed
totalTime
errorCode
PingNotifier
com.apple.ping
v16@?0@"NSError"8
PingNotifier: %ld outstanding PONG responses; %ld total pongs sent.
com.apple.private.coreservices.lsuseractivityd.bestappsuggestion
pasteboard-server
wasActive
 firstTime
Active
v8@?0
v24@?0Q8Q16
com.apple.private.handoff.ping
PING!
com.apple.private.handoff.pong
PONG!
%@: payloadSize=%ld
SimReceiver
%@:%@
UASimulatorReceiver: %@, %ld items %@
ACTIVE
supressionRec(%@ hard=%@ until=%@ (lastInterestingTime=%@)
(PID:%ld)
BestApp
bestApp
q24@?0@"UAUserActivityInfo"8@"UAUserActivityInfo"16
%@/%@ %@ %@ (and %lu more best app options)
%@/%ld:%@, next=%@/%lld
Diagnostic
com.apple.AppStore
signposts
-noDefaultHandlers
-sharingAdvertiser
-sharingScanner
-activityReceiver
-activityAdvertiser
-bestAppSuggestionNotifier
-userActivityClientProcessesController
-noSandbox
-loggingAdvertiser
-loopback
-enableNetworkUserActivity
-enableCoreSimulator
-disableEntitlmentChecking
-disableReconnectionNotification
-exitAfter
com.apple.useractivityd
Jan 29 2022
09:02:16
Logger
AppsActivityCreator
BestAppController
DarwinNotifier
PingController
com.apple.coreservices.useractivity.reconnection
%@%s
/System/Library/PrivateFrameworks/UserActivity.framework/
shared-pasteboard/
kLocalPasteboardBlobName
kRemotePasteboardBlobName
items/%@/
type-clone
archives
items
v16@?0@"NSURL"8
unknown
%@(%@ %@ browserFallback=%@ %ld/%.2fk/%.4f sec %@ %@ %lx w2n=%@ scs=%@)
:com.apple.
com.apple.
ProductName
ProductVersion
ProductBuildVersion
UA Test Peer
com.apple.ipod
v32@?0@"UTType"8Q16^B24
com.apple.ipod-touch
public.device
/System/Library/CoreServices/SystemVersion.plist
UAReceiverScanTypeUserActivity
UAReceiverScanTypeClipboard
UAReceiverScanTypeBoosted
%s: %@
suspended
resumed
(was already terminated)
%@: %@
com.apple.UserActivity.Handoff.BecameCurrent
activityType
bundleIdentifier
UC Stream Watchdog
error
uuid
public.file-url
data
Invalid message header
packetNum
totalNum
totalSize
supportsCompression
UCHB
numFiles
com.apple.security.sandbox-extension-dict
v16@?0q8
streamStart
streamWaiting
streamSendingRequest
streamWaitingResponse
streamHandleRequest
streamSendingResponse
streamSendingMultiResponse
streamHandleResponse
streamDone
ucStreamState:%d
tagStop
tagFeatureRequest
tagFeatureResponse
tagPasteboardInfoRequest
tagPasteboardInfoResponse
tagPasteboardDataRequest
tagPasteboardDataResponse
tagPasteboardFileRequest
tagPasteoboardFileResponse
tagPasteboardAuxInfo
tagHeartbeat
tag:%d
AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE
EEEEEEEE-DDDD-CCCC-BBBB-AAAAAAAAAAAA
com.apple.UserActivity.UniversalClipboard.Unavailable
reason
SimAdvertiser
### UASimulatorAdvertiser:
ReplayCreator
ReplayController: ITEM=%@
com.apple.UserActivity.UniversalClipboard.Requested
payloadSize
transferTime
transferSpeed
streamOpenTime
cancelled
underlyingErrorCode
numberOfItems
isFileCopy
isAsyncTransfer
remoteDeviceType
Unknown
cornerActionManagerQ
idleDetermination
updateAdvertisedItems
SuspendAdvertisingIdleTracker
v12@?0B8
q24@?0@"UAClientController"8@"UAClientController"16
because the item contains an unsynchronized cloud document item.
dimmed 
uilock 
alwaysPick 
v20@?0@"NSObject"8B16
com.apple.screensaver.didstart
com.apple.screensaver.didstop
com.apple.language.changed
v12@?0i8
com.apple.backboardd.backlight.changed
userInactivePowerAssertion
SCREEN: %s
DIMMED
active
screenDimmedPowerAssertion
DEVICELOCK: %s
LOCKED
unlocked
deviceUILockAssertion
kLSUserActivityDebuggingInfoCurrentAdvertisedItem
kLSUserActivityDebuggingInfoLastAdvertisedBytes
kLSUserActivityDebuggingInfoAdvertising
Dynamic User Activities: (domain=%@) %@
Manager status: pid=%lld, uid=%lld, uptime=%@ %@ (Version %s, built %s %s %s)
09:02:18
q24@?0@"UAAdvertiser"8@"UAAdvertiser"16
ADVERTISING:
*** No UAAdvertisers defined at present, so no advertising is taking place.
RECEIVING:
No UAReceivers defined at present, so no activities will be received.
Manager status: pid=%lld, uid=%lld, uptime=%@ %@ runtime=%@ (Version %s, built %s %s %s)
### ADVERTISERS (%ld total) %@ nextCheck=%@
(SUSPENDED)
### RECEIVERS (%ld total)
### AdvertiseableItems ( that might be broadcast to other machines/remind me later)
UAUserActivityAdvertiserHasMoreActivities
- %@%@%@
(advertised) 
(more items available) 
CornerActionItems (potential items to appear on this device as resumable from other devices)
- %@
Pinned Activity Info
### NOTIFIERS (%ld total) nextCheck=%@
### HANDLERS: (%ld total)
Idle determination:%s suspended=%s%s%s%s pick=%ld/%@ idle=%ld/%@ bestApp=%ld/%@
 userIdle
 dimmed:YES
 locked:YES
PERF:%@
 - %@
NSTemporaryDirectory=%@
PROJECT:UserActivity-
v24@?0@"NSString"8^B16
com.apple.UserActivity.Handoff.WasContinued
suggestedActionType
transferDurationSec
canceled
broweserFallback
webToNative
supportsContinuityStreams
interactionType
command-tab
dock
notification-center
lock-screen
multi-tasker
proxy-object
spotlight
com.apple.useractivity.remotegenerationresponse
pasteboard-fetch
Info Requested
Info Received
Data Requested
Data Received
Error
Canceled
v24@?0@"NSData"8@"NSError"16
v24@?0@"UASharedPasteboardInfo"8@"NSError"16
pasteboard-server-remote-gen
com.apple.coreservices.uauseractivitypasteboardclient.xpc
com.apple.private.coreservices.useractivityd.sharedpasteboard
com.apple.coreservices.uasharedpboardclientq
/System/Library/PrivateFrameworks/UserActivity.framework
com.apple.continuitypasteboard
UASharedPasteboard
v24@?0@"NSInputStream"8@"NSOutputStream"16
v24@?0@"UASharedPasteboardInfoWrapper"8@"NSError"16
v32@?0@"<UCStreamCoder>"8Q16@"NSError"24
v32@?0@"NSInputStream"8@"NSOutputStream"16@"NSError"24
main-label.title
Localizable
main-label.default-title
cancel-button.title
com.apple.UserActivity.UASharedPasteboardiOSUI
##### Screen Sharing session in progress, Universal Clipboard is disabled: %lu #####
##### Continuity Pasteboard: Remote Pasteboard:%@, Local generation=%ld, %@reflection:%@
Available
Unavailable
SCREENSHARING 
  %@
Item: %@ "%@"
file
clipboardReadStream
clipboardWriteStream
PingCreator
PingCreator:%@
%@.%@
FrameworkBundleID
AssertType
PreventUserIdleSystemSleep
AssertName
TimeoutSeconds
TimeoutAction
TimeoutActionTurnOff
-[UATimedPowerAssertions updateTimeUntilAssertionRelease:]
PowerAssertions:
 %@{%@/%@}
ACTIVE:
UATimedPowerAssertionsMapTableQueue
UATimedPowerAssertionsTimerQueue
SimCreator
(sim-rebroadcasted-item):%@ %@ %@
(inactive) 
com.apple.UserActivity.Handoff.WasSuggested
UCFilePackagerReadQ
Replay
ReplayAdvertiser
ReplayReceiver
iPhone5,1
Mac OS X
14A100
PEER
Orangeish
Greenish
BROADCAST $%@ %@
http://
HELP
COMMANDS: ...
 - ADVERTISEITEM:<tag> <activitytype> [<archivedUserActivityData>]
HANDOFF
VERSION
STARTUP
TERMINATE
ADVERTISEITEM
PAYLOAD
PULL
REMOVEITEM
PEERINFO
SF[$
RECEIVE
BROADCAST
REQUESTPAYLOAD
RETURNPAYLOADERROR $%@ %@
RETURNPAYLOAD $%@ [$%@]
v32@?0@"NSUUID"8@"NSData"16@"NSError"24
RETURNPAYLOAD
REQUESTPAYLOAD $%@
0123456789abcdefABCDEF$
0123456789abcdefABCDEF-
strings
Localization
PairedAdvertiser
dummy_account@me.com
simulator
iOSSimulator1,1
iOSSimulator
14A101
iOS Simulator
com.apple.coreservices.lsuseractivity.simulatorsupport
(ERROR %d/%s for simulator %@
com.apple.UserActivity.UniversalClipboard.TypesRequested
ActivityAdvertisingAllowed
ActivityReceivingAllowed
ClipboardSharingEnabled
MultiHandoffEnabled
UserIdleInterval
UserIdleRemovalDelay
MinimumTimeForAnAdvertisementToLive
MinimumTimeToLiveAfterRemovingAdvertisement
RecentlyEligibleItemInterval
LastActiveItemRemovalDelay
ScreenSaverRemovalDelay
ScreenSaverPasteboardAdvertisementDelay
ScreenDimRemovalDelay
ScreenDimPasteboardAdvertisementDelay
DeviceLockAdvertisementDelay
DeviceLockPasteboardAdvertisementDelay
CornerItemSupressionInternal
BestAppSuggestionSupressionIntervalForUnchangingItem
AdvertisedItemWhichIsWebBrowserIntervalToRememberEarlierActivities
IntervalToAskClientWithUnsynchronizedDocumentsToUpdate
MaximumTimeoutAfterAdvertisingEndsThatActivityCanBeResumed
CornerItemTimeout
UACornerActionItemAdditionalTimeToLiveAfterValidIntervalExpires
UACornerActionItemMaximumTimeForBTLEItemToLive
UAReceivedBTLEItemTimeToLiveAfterDeviceLostIfPayloadIsQueued
ActivePayloadUpdateInterval
MaximumTimeoutToWaitForClientProcessToUpdateActivityInformation
MaximumActivityPayloadSizeInBytes
ActivityPayloadWarningSizeInBytes
MinimumIntervalBetweenAdvertisements
MaximumAdvertisementsPerTimeInterval
MaximumAdvertisementsTimeInterval
EnableHandoffInPowerSaverMode
ActivityBTLESharingEnabled
LoggingAdvertiserEnabled
UASharedPboardLocalAdvertisementTime
UASharedPboardLocalClearedAdvertisementTime
UASharedPboardRemoteAvailableTimeout
UASharedPboardLocalReflection
UASharedPboardEmbeddedPayloadSizeLimitInBytes
UASharedPboardShowUIDelayInSec
UASharedPboardUIMinimumDurrationInSec
UASharedPboardHideUIDelayInSec
PayloadFetchResponseDelay
TypeRequestTimeout
PasteRequestTimeout
PasteboardStreamWatchdogTimeout
HandoffRequestTimeout
TimeRemainingDelay
IgnoreLostDevice
IgnoreBluetoothDisabled
DEBUGValidatePayloadFetchTimeInterval
DEBUGValidateRetryPayloadFetchFailureInterval
DEBUGValidateSampleResponseMinimumActivityPayloadSizeInBytes
DEBUGValidateSampleResponseMaximumActivityPayloadSizeInBytes
DEBUGAdditionalPayloadReceiveTimeInterval
DEBUGUserActivityTimeOffset
DEBUGForceNewPayloadEncoder
DEBUGForceOldPayloadEncoder
DEBUGDontSendActivityTitle
DEBUGReadvertiseImmediately
DEBUGEnablePinging
DEBUGEnablePrefetch
DEBUGCrossoverAllActivities
DEBUGIgnoreAppsUsedForDevelopment
EnableDebugging
EnableDebugLogFile
EnableSharingFramework
EnableNetworkControlListener
EnableAutomaticRendevousPairing
NetworkControlListenerPort
UserIdleRemoveDelay
SystemIdleRemovalDelay
RendevousPairingType
 %@=%@ (%@)
 %@=%@
Defaults: (domain=%@) %@
com.apple.system.lowpowermode
LocalReceiver
LocalItems:%@
_UALOGGINGCATEGORY
main
com.apple.useractivity
UAUserActivity
_UAUSERACTIVITYCREATION
com.apple.coreservices.lsuseractivitymanager.xpc
_UAUSERACTIVITYBESTAPP
com.apple.coreservices.lsbestappsuggestionmanager.xpc
_UAUSERACTIVITYPASTEBOARD
com.apple.coreservices.uasharedpasteboardmanager.xpc
_UAUSERACTIVITYPASTEBOARDAUX
com.apple.coreservices.uasharedpasteboardaux.xpc
com.apple.coreservices.uasharedpasteboardcontroll.xpc
Logging
%@/Logs/Handoff/
%@/UALoggingAdvertiserItems.log
Advertisable:%@
ITEM:%@ %@ [0x%@]
ActivityLogger: Logging to %@.
UALoggingAdvertiser: ADVERTISING RESUMED.
UALoggingAdvertiser: ADVERTISING SUSPENDED.
(%@, %@)
layoutUpdate
v16@?0@"NSDictionary"8
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
q24@?0@8@16
com.apple.lock-screen
LSLivePastProcessExit
 and possibly change advertisement.
APP:%@, %@ %s
(update)
APP:- %s
APP:- (was %@) %s
com.apple.coreservices.ping
options.%@
com.apple.Carousel
##### Client processes: %ld clients
 Layout:
 car:
main:
q24@?0@"UAUserActivityClientProcess"8@"UAUserActivityClientProcess"16
 - %s%@
FRONT 
v32@?0@"NSString"8Q16^B24
 Order:{
%@/%@ 
pbpaste
pbpaste2
pbtypes
userActivityBTStatus
v32@?0@"NSObject"8@?<v@?@"NSObject"B>16^B24
bluetoothStatusQ
com.apple.UserActivity.baseEvent
 => 
teamID
type
BTLEUserActivityDataEncoding: userInfo=%@ %@%@%@%@
stream=%@
webPageURL=<private>
 {teamID=%@ activityType=%@}
additional=%@
SharingReceiver
SharingReceiverPeriodic
SCANNING:%s%s%s%s
userActivity 
clipboard 
 SUSPENDED
SCANNING:Found device %@ %@%s
 defaultPaired
v16@?0@"NSTimer"8
SCANNING:Lost device %@ %@%s
v24@?0^v8^{__CFError=}16
v20@?0C8^v12
-[UASharingReceiver receiveAdvertisement:scanner:]
UASharingReceiver.m
advertisement
advertisement.device
iPhone
iPad
UAPasteboardAvailable
UAPasteboardVersionBit
SCANNING:Received %@ %@ %@ from %@/%@
SCANNING:Received %@ (no match) from %@/%@
handoff-more_items
SharingBTLE receiver %s%s%@%@ %@%@
SUSPENDED
DISABLED
 Clip
(NO SFActivityScanner) 
 (Bluetooth disabled)
%ld scanners
 - %@%@%@ app:%@ %@ data=%@, from %@ at %@ remove at %@%s%s
 (PayloadReq)
 (PayloadAv)
 ActiveDevices:
, pb
(%@,%@%@)
PBDONE
Invalid delimiter before pbinfo
Invalid delimiter before pb data
com.apple.private.isDefaultFrontmostApp
com.apple.private.canmodifyanyuseractivity
NOTIFICATION#
UAUserActivityItemIsNotActiveKey
com.apple.GameController
persistentID
BTLEItem:%@ %@%@ id=%@ when=%@ %@device="%@" modelCode=%@ deviceType=%@
%s%s%s%s/%lx
 webPage
 cloud
 autopull
remove:%@ 
 options=%@
 payload=$%@
 payloadRequested
 payload NA
UASharingBTLEItem:%@ %@/%@ %@
Last BTLE payload fetched for item %@, at %@, from %@
useractivity-team-identifier
com.apple.developer.team-identifier
application-identifier
0000000000
UAProxiedBundleIdentifier
%@ { type = %@; uuid = %@;  activityType = "%@"; userInfo = %@; %@%@ %@ eligible=%@}
 webPageURL=<private>
 referrerURL=<private>
!eligibleForHandoff
%@ %@ %@ .userInfo=%@ payloads=%ld
%@%@%@ %@ %@%@%@%s%s%s %@%@%@
 dirty*
 !handOff
 AlwaysPickPriority=%li 
 cloudDoc
 unSynchCloudDoc
 fileProv
 url=%@
url=<private>
 referrer=%@
referrer=<private>
com.apple.UserActivity.UniversalClipboard.Available
com.apple.UserActivity.Handoff.WasDiscovered
fakeAppleID@apple.com
version
payload
options
device
MockAdvertisement($%@/%@ from %@)
com.apple.private.coreservices.lsuseractivityd.LSAlwaysPick
com.apple.private.coreservices.canopenactivity
com.apple.private.coreservices.cangetcurrentactivityinfo
com.apple.private.coreservices.canalwaysadvertise
com.apple.private.coreservices.alwaysEligibleEvenWhenInBackground
com.apple.private.coreservices.allowedToMatchUserActivities
com.apple.private.coreserivces.allowedToMatchUserActivities
Application
com.apple.coreservices.useractivity.client-connection
com.apple.security.app-sandbox
com.apple.application-identifier
com.apple.watchkit
UAUserActivityDebugStateChanged
com.apple.coreservices.useractivityd
ActivityAdvertising
Allow process to update handoff payload
v28@?0@"UAUserActivityInfo"8B16@"NSError"20
v32@?0@"UAUserActivityClientPendingUpdateTask"8Q16^B24
UserActivityClient(pid=%d/%@ uuids=%@)
CFBundleIdentifier
com.apple.private.useractivity.allowedtosetbundleidentifier
%@:%@:%@
entitlement
stream=%@ 
NULL
(already current)
, and updating advertisment.
private
 iCloudDoc
 unSynchronizediCloudDoc
%@ pid=%d currentActive=%@%@%@%@
(dirty) 
proxyAs=%@ 
 lastFront=%@
%@%s 
 (dirty)
ReplayRendevousHandler
_handoff._tcp.
local
Network, %@  %@
listening, port=%ld
browsing for %@ in %@
Handoff:%@
NSNetServicesErrorDomain
NSNetServicesErrorCode
From %@
From host
__kCFStreamPropertyPeerAddress
HANDOFF v%g %@
PEERINFO SF[$%@]
VERSION v%g %@
# Terminating connection because we seem to already have a connection to this peer.
TERMINATE
NetworkReplay:%@%@ peer:%@/%@ %@
TERMINATED
%@/%ld
%@..(%ld)..%@
.. %ld ..
forever
%ld seconds
roughly %ld minutes
roughly %ld hours
roughly %ld days
a long time
%2.1g seconds
%2ld seconds
%3ld seconds
roughly %2ld minutes
roughly %2ld hours
UserActivity
NotificationType
HardCodedType 
HeroApp 
OpenURL 
UASuggestedActionType=%ld
NSUserActivityTypeBrowsingWeb
https:
com.apple.mobilesafari
pasteboard-streams
com.apple.finder.noderef
v24@?0Q8@"NSError"16
-[SharingBTLEAdvertisementPayload initWithType:string:dynamicType:teamID:webpageURL:options:isCurrent:when:versionFlags:]
SharingAdvertisementPayload.mm
[hashedActivityType length] == sizeof( _bytes.hashedAdvertisementBytes )
-[SharingBTLEAdvertisementPayload setPayloadBytes:]
[payloadBytes length] == sizeof( sizeof( _bytes.hashedAdvertisementBytes ) )
$%@/%@%d%@%@%s%s%s
 pb-1
 pb-0
%@#%@
NOTIFICATION
http
https
UASharedPasteboardInfoWrapperPBInfoKey
UASharedPasteboardInfoWrapperExtraDataKey
UASharedPasteboardInfoWrapperExtraTypeKey
UASharedPasteboardInfoWrapperErrorKey
UASharedPasteboardInfoWrapperProtocolVersionKey
%@: Extra Data Type: %ld, Error: %@, PBInfo: %@
<private>
{?=[8I]}
[pid=%d/%d uid=%d/%d gid=%d/%d asid=%d sb=%@]
<%@ %p> %@
SharingAdvertiser
UASharingAdvertiser
sharingUpdate
advertisingPeriodic
AdvertiserCurrent
BTLEAdvertisement
 FORCE
FORCE
ADVERTISING:%@ %@ %@/ %@
ADVERTISING:- (was %@/%@)%s
%ld%c%ld
iPhone OS
macOS
OS X
v24@?0@"NSSet"8@"NSError"16
Handoff
Pasteboard
PAIRED_DEVICES:Changed, now have %ld devices paired.
PAYLOAD_REQUESTED:%@, %@ from %@
com.apple.fetchsamplepayload
randomdata
Sample
NO-TEAM-ID
com.apple.fetchsamplepayloadactivity
EncodedPayloadSize
Sharing.framework Advertiser:
(No SFActivityAdvertiser) 
 ** Bluetooth is disabled but IgnoreBluetoothDisabled is set, so the activity will be advertised. **
 ** Bluetooth is disabled so no activity will be advertised. **
 ** LowPowerMode is enabled so no activity will be advertised. **
 ** Activity advertising is disabled on this device. **
** SUSPENDED:
%ld sfActivityAdvertisers
, run=%ld times/%@ periodic=%ld/%@ %@%@%@
(current) 
+ Advertising Local Pasteboard.
ClipboardSharingDisabled
 ADVERTISING: %@%@ %@ /, data=%@, at %@
 LAST:%@, at %@
 LAST: nil
 No AppleID, %@
 AppleID:%@, devices%s%s:
(no handoff)
(no pasteboard)
v24@?0@"NSString"8@"NSError"16
%@/%@-%@-%@:+%ld, 
[%@/%@-%@-%@], 
%@%@
%@/%@/%@/%@ 
Watch OS
watchOS
TVOS
tvOS
SimController
simQ
IN FRONT
not in front
 - SIMULATOR:%@
com.apple.private.coreservices.lsuseractivityd.admininterface
com.apple.private.useractivity.sysdiagnose
STARTING pid=%d
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
EnableLogging
en_US
HH:MM:ss.SSSS
%@ %@
(user=%.5gs/system=%.5gs)
com.apple.Preferences
sharing
screensaver
screendim
useractive
best
v24@?0@"UAUserActivityInfo"8^B16
status
simulatorStatus
This platform does not support the iOS simulator.
recentEligible
Client: %@ %@
Command %@ not recognized
clear
### STATUS
### RECENT ACTIONS ###
ReplayManager
%.1f seconds %s
from now
%ld seconds %s
%ld minutes %s
at %2.2ld:%2.2ld
(nil)
%4.1f seconds
%2ld minutes
%2.3f hours
%2ld days, %ld hours
%5ld days
UARemotePasteboardDidSendLocalEvent
UAPingNotifier
UABestAppSuggestionController
NSXPCListenerDelegate
NSObject
UASharedPasteboardFileProvider
NSFileProvider
PowerManagerIdleTracker
UAPingUserActivityInfo
UASimulatorReceiver
UADiagnosticUtils
UAActivityReplayAdvertiser
UAUserActivityAnalyticsInfo
UABestAppUserActivityInfoSuppressionRecord
UABestAppSuggestionNotifier
UABestAppSuggestionManagerProtocol
UASharedPasteboardDataManager
_LSUserActivityWasContinuedInfo
UAActivityReplayReceiver
UAUserActivityAdditions
UAReceiver
UACornerActionManagerHandler
UALocalCornerActionItem
UAActivityBecameCurrentEvent
UCStreamCoderV2
UAStreamHandlerDelegate
UCFilePacketReceiver
UCStreamCoder
UADebugAdvertisableItem
UADispatchWatchdog
UARemotePasteboardBecameUnavailableEvent
UASimulatorAdvertiser
UAReplayClientController
UARemotePasteboardWasRequestedEvent
UACornerActionManager
UACornerActionManagerDebugInterface
UAPingController
UAClientController
UAActivityWasContinuedEvent
UADispatchScheduler
UAActivityNotifier
UAActivityNotifierProtocol
UCRemotePasteboardGeneration
UAPasteboardClientProtocol
UASharedPasteboardClientController
UASharedPasteboardManagerProtocol
SFCompanionAdvertiserDelegate
UASharedPasteboardAUXProtocol
UASharedPasteboardControllProtocol
UAStreamHandler
NSStreamDelegate
UAPingClient
UATimedPowerAssertions
UCExtractor
UASimulatorAdvertisementCreator
UAActivityWasSuggestedEvent
UCFilePackagerPacket
UCFilePackager
UAActivityReplay
NSNetServiceDelegate
SFActivityAdvertiserDelegate
SFActivityScannerDelegate
UALocalizedString
UAPairedSFActivityAdvertiser
UAPairedSFActivityScanner
UASimulatorController
UAPeerDevice
UARemotePasteboardTypeInfoRequestedEvent
UAUserActivityDefaults
UALocalItemReceiver
UADiagnosticManager
UAUserActivityClientProtocol
UAUserActivityClientResponseProtocol
UABestAppSuggestionManagerResponseProtocol
UASharedPasteboardManagerResponseProtocol
UALoggingAdvertiser
UABestAppSuggestionDarwinNotifier
FBSDisplayLayoutElement
FBSUIApplicationLayoutElement
UAUserActivityClientProcessesController
UASharedPasteboardDataRequester
UABluetoothStatus
UAAnalyticsEvent
UserActivityToBTLEPayload
UASharingReceiver
UASharedPasteboardInputStreamManager
SharingBTLESuggestedItem
UASharedPasteboardActivityInfo
UASharedPasteboardOutputStreamManager
UAUserActivityAdvertisableItem
UAAdvertisableItem
UARemotePasteboardBecameAvailableEvent
UAActivityWasDiscoveredEvent
UAMockActivityAdvertiser
UAMockActivityScanner
UAMockActivityAdvertisement
NSSecureCoding
NSCoding
UAUserActivityClientPendingUpdateTask
UAUserActivityClientProcess
UANetworkReplayRendevousHandler
NSNetServiceBrowserDelegate
UANetworkReplayController
UCArchiver
UAPBStreamCoderV1
SharingBTLEAdvertisementPayload
NSCopying
UASharedPasteboardInfoWrapper
UASimulatorSuggestedItem
UAAuditToken
UASharingAdvertiser
UASimulator
UAReplayAdvertisableItem
UADispatchReceiver
ActivityManagerDebugRecentActionItem
ActivityManagerDebuggingManager
UAResumableActivitiesAdministrativeProtocol
UAResumableActivitiesSysdiagnoseSupportProtocol
UAAdvertiser
@16@0:8
Q16@0:8
v24@0:8Q16
B16@0:8
v20@0:8B16
q16@0:8
v24@0:8q16
@24@0:8@16
v24@0:8@16
v16@0:8
@"NSMutableSet"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
@"NSXPCListener"
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@16@24
v40@0:8@16@24@32
v32@0:8@"NSURL"16@?<v@?@"NSError">24
@"NSURL"16@0:8
@"NSOperationQueue"16@0:8
v40@0:8@"NSURL"16@24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@24
@"NSURL"24@0:8@"NSURL"16
v32@0:8@"NSURL"16@?<v@?@"NSURL">24
v32@0:8@16@"NSURL"24
v40@0:8@"NSURL"16@24@"NSURL"32
v40@0:8@"NSURL"16@"NSURL"24@?<v@?B>32
@"NSOperationQueue"
@"NSURL"
@"NSMutableDictionary"
@48@0:8@16@24d32@?40
Q32@0:8@16d24
d16@0:8
v24@0:8d16
@?16@0:8
v24@0:8@?16
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSDate"
@24@0:8Q16
B20@0:8B16
@"UASimulator"
@"NSArray"
Q24@0:8Q16
@"UAUserActivityInfo"
@"NSUUID"
@"NSError"
v32@0:8q16@?24
v36@0:8@16Q24B32
v24@0:8@?<v@?@"NSArray"@"NSDate"d>16
v32@0:8q16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSUUID"16@"NSDictionary"24
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v36@0:8@"NSUUID"16Q24B32
v24@0:8@?<v@?B>16
@"NSXPCConnection"
@"UADispatchScheduler"
@"NSSet"
@"UACornerActionManager"
@48@0:8@16Q24@32@40
@"UAUserActivityClientProcess"
v40@0:8@16@24q32
v32@0:8@16q24
v40@0:8@"UAStreamHandler"16@"NSData"24q32
v32@0:8@"UAStreamHandler"16q24
v32@0:8@"UAStreamHandler"16@"NSError"24
v32@0:8@"UAStreamHandler"16@"NSData"24
v24@0:8@"UAStreamHandler"16
v40@0:8@"UCFilePackager"16@"NSData"24q32
v24@0:8@"NSError"16
v52@0:8@16@24@?32@?40B48
v52@0:8@"NSFileHandle"16@"NSProgress"24@?<v@?@"UASharedPasteboardInfoWrapper"@"NSError">32@?<v@?@"<UCStreamCoder>"Q@"NSError">40B48
v32@0:8@"UASharedPasteboardInfoWrapper"16@?<v@?@"<UCStreamCoder>"Q@"NSError">24
@"UAStreamHandler"
@"NSDictionary"
@"NSMutableArray"
@"UADispatchWatchdog"
@"NSObject<OS_dispatch_source>"
@"UASharedPasteboardInfoWrapper"
@"NSFileHandle"
@"NSProgress"
@"NSObject<OS_dispatch_semaphore>"
@"UCFilePackager"
@32@0:8Q16@24
@40@0:8@16d24@?32
@20@0:8B16
B24@0:8d16
i16@0:8
v20@0:8i16
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_group>"
@"NSUserDefaults"
@"ActivityManagerDebuggingManager"
@"UASharedPasteboardClientController"
@"UAPingController"
@"UATimedPowerAssertions"
@"PowerManagerIdleTracker"
@"NSTimer"
@"UABluetoothStatus"
@"NSObject"
@"UAPingClient"
@"UAPingNotifier"
@24@0:8d16
d24@0:8@16
@"UAUserActivityAnalyticsInfo"
@48@0:8@16d24@32@?40
@32@0:8@"UACornerActionManager"16@"NSString"24
@"NSSet"16@0:8
v24@0:8@"NSSet"16
@"UASharedPasteboardDataRequester"
@"UASharedPasteboardInfo"
v24@0:8@?<v@?>16
v32@0:8@16Q24
v28@0:8i16@?20
v24@0:8@?<v@?@"NSString">16
v32@0:8@"UASharedPasteboardInfo"16Q24
v28@0:8i16@?<v@?@"UASharedPasteboardInfo"@"NSError">20
v40@0:8@"SFCompanionAdvertiser"16@"NSInputStream"24@"NSOutputStream"32
v28@0:8B16@20
v40@0:8@16q24@?32
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
@"SFCompanionAdvertiser"
@"UCRemotePasteboardGeneration"
@"UASharedPasteboardOutputStreamManager"
@"UASharedPasteboardInputStreamManager"
@"NSMutableSet<UCStreamCoder>"
^{__CFUserNotification=}
@"UARemotePasteboardWasRequestedEvent"
@"UARemotePasteboardDidSendLocalEvent"
@"NSBundle"
v32@0:8@"NSStream"16Q24
@40@0:8@16@24@32
B32@0:8@16q24
@"NSInputStream"
@"NSOutputStream"
@"<UAStreamHandlerDelegate>"
@"NSMutableData"
@"NSData"
@56@0:8@16d24@32@40@?48
@40@0:8@16d24@32
@56@0:8@16q24q32@40@48
@"<UCFilePacketReceiver>"
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@40
v56@0:8@"SFActivityAdvertiser"16@"NSData"24@"NSString"32@"SFPeerDevice"40@?<v@?@"NSUUID"@"NSData"@"NSError">48
v32@0:8@"SFActivityAdvertiser"16@"NSSet"24
v48@0:8@"SFActivityAdvertiser"16@"NSUUID"24@"SFPeerDevice"32@"NSError"40
v32@0:8@"SFActivityScanner"16@"SFActivityAdvertisement"24
v32@0:8@"SFActivityScanner"16@"SFPeerDevice"24
v32@0:8@"SFActivityScanner"16@"NSSet"24
B32@0:8@16@?24
v56@0:8@16@24@32Q40@?48
@"SFPeerDevice"
@"UAActivityReplayAdvertiser"
@"UAActivityReplayReceiver"
@"UAReplayClientController"
@"UAMockActivityAdvertiser"
@"UAMockActivityScanner"
v48@0:8@16@24@32@?40
@"UAPairedSFActivityScanner"
@"<SFActivityAdvertiserDelegate>"
@"UAPairedSFActivityAdvertiser"
@"<SFActivityScannerDelegate>"
@20@0:8I16
v28@0:8I16@20
B28@0:8@16B24
q32@0:8@16q24
d32@0:8@16d24
@"UAUserActivityClientProcessesController"
v32@0:8@16r^{?=[8I]}24
Q32@0:8Q16Q24
v40@0:8q16@24@?32
v36@0:8@16B24@?28
v28@0:8@16B24
v52@0:8@16B24@28@36B44B48
v36@0:8i16@20@?28
v40@0:8q16@"NSDictionary"24@?<v@?q@"NSDictionary"@"NSError">32
v32@0:8@"NSUUID"16@?<v@?@"UAUserActivityInfo"@"NSError">24
v36@0:8@"UAUserActivityInfo"16B24@?<v@?@"NSError">28
v28@0:8@"NSUUID"16B24
v24@0:8@"NSUUID"16
v32@0:8@"NSString"16@"NSString"24
v52@0:8@"NSUUID"16B24@"NSURL"28@"NSDate"36B44B48
v32@0:8@"UAUserActivityInfo"16@?<v@?@"NSUUID"@"NSError">24
v24@0:8@?<v@?@"NSUUID"@"NSString"@"NSString"@"NSString"@"NSError">16
v32@0:8@"NSUUID"16@?<v@?B@"NSString"i@"NSString"@"NSError">24
v40@0:8@"NSDictionary"16@"NSPredicate"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSFileHandle"@"NSError">32
v36@0:8i16@"NSDictionary"20@?<v@?@"NSError">28
v32@0:8@"NSUUID"16@?<v@?@"UAUserActivityInfo"B@"NSError">24
v28@0:8B16@"NSFileHandle"20
v40@0:8@16@24d32
v40@0:8@"NSArray"16@"NSDate"24d32
v48@0:8@"NSFileHandle"16@"NSURL"24@"NSData"32@?<v@?@"UASharedPasteboardInfo"@"NSError">40
v40@0:8@"NSFileHandle"16@"NSURL"24@?<v@?@"UASharedPasteboardInfo"@"NSError">32
B20@0:8i16
v36@0:8i16@20[1{__va_list_tag=II^v^v}]28
v28@0:8i16@20
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@20@0:8i16
B28@0:8@16i24
@"FBSDisplayLayoutMonitor"
@"BKSApplicationStateMonitor"
@"UALocalItemReceiver"
@"SFActivityScanner"
^{BTSessionImpl=}16@0:8
^{BTLocalDeviceImpl=}16@0:8
@24@0:8@?16
v32@0:8^{BTSessionImpl=}16i24i28
v24@0:8^{BTSessionImpl=}16
v32@0:8^{BTLocalDeviceImpl=}16i24i28
^{BTSessionImpl=}
^{BTLocalDeviceImpl=}
{?="sessionEvent"^?}
{?="statusEvent"^?"leTestStopped"^?"afhMapChanged"^?}
@64@0:8@16@24@32@40@48@56
v44@0:8@16@24@32B40
@44@0:8@16I24@28@36
@60@0:8@16@24@32I40@44@52
@108@0:8@16@24@32I40Q44@52@60@68@76@84@92@100
@100@0:8@16@24@32I40Q44@52@60@68@76@84@92
B24@0:8@?16
@"SharingBTLEAdvertisementPayload"
@"UASharingReceiver"
^B16@0:8
v24@0:8^B16
B28@0:8B16@?20
@"UAActivityReplay"
v56@0:8@16@24@32q40@?48
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B36@0:8@16B24@?28
C16@0:8
v20@0:8C16
@"UAAuditToken"
@"UAUserActivityAdvertisableItem"
@"NSObject<OS_os_transaction>"
v36@0:8@16@24B32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
B36@0:8@16i24@28
@"NSNetServiceBrowser"
@"NSNetService"
B40@0:8@16@24q32
@48@0:8@16@24@32@40
@24@0:8^{_NSZone=}16
@40@0:8@16B24@28C36
@36@0:8@16B24@28
@80@0:8Q16@24@32@40@48@56B64@68C76
@76@0:8Q16@24@32@40@48@56B64@68
B20@0:8C16
{?="hashedAdvertisementBytes"[7C]"optionBits"C"timeOffset"C}
@48@0:8{?=[8I]}16
v24@0:8^v16
r*16@0:8
{?=[8I]}16@0:8
{?="val"[8I]}
B36@0:8@16B24@28
@40@0:8@16I24i28Q32
@"UASimulatorController"
@"UASimulatorAdvertiser"
@"UASimulatorReceiver"
@"UASimulatorAdvertisementCreator"
@36@0:8q16d24B32
v32@0:8Q16@?24
v88@0:8@16Q24@32@40@48@56@64d72d80
v28@0:8B16@?20
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"NSString"16@24
v32@0:8@"NSString"16@?<v@?@"NSUUID">24
v24@0:8@?<v@?@"NSUUID">16
v32@0:8Q16@?<v@?@"NSArray">24
v24@0:8@?<v@?@"NSArray">16
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary">24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray">24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSString">32
v32@0:8@"NSDictionary"16@?<v@?@"NSString">24
v88@0:8@"NSUUID"16Q24@"NSString"32@"NSString"40@"NSData"48@"NSString"56@"NSString"64d72d80
v28@0:8B16@?<v@?@"NSDictionary"@"NSError">20
v32@0:8@"NSString"16@"NSData"24
v32@0:8@"NSString"16q24
v36@0:8@"NSString"16@"NSString"24B32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSData"@"NSDate"@"NSUUID"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSArray"@"NSError">24
v28@0:8B16@?<v@?@"NSArray">20
{timeval=qi}16@0:8
@"SharingBTLESuggestedItem"
@"UANetworkReplayRendevousHandler"
{timeval="tv_sec"q"tv_usec"i}
PING: Received payload for PING; creating PONG response. error=%{public}@
PING: Removing pong item %{public}@/%{private}@ because it was continued 
BESTAPP: Created controller to handle connections to Springboard/Dock
BESTAPP: suspend
BESTAPP: resume
BESTAPP: terminate
BESTAPP: received listener request from process %ld
BESTAPP: Creating listening notifier for process %ld
*** Attempt to access BestAppSuggestion xpc interface fror process %{public}@, which doesn't have the %{public}@ entitlement
Unlocking reader %@
providing item to reader %@
Currently locked, saving callback for when unlocked
_provideItemAtURL called without readerID, creating UUID to act as readerID
IdleTracker:alloc(%{public}@) interval=%{public}g
IdleTracker:dealloc(%{public}@
IdleTracker: %{public}@: mostSignificantLevel=%{public}@ %{public}s%{public}s weakSelf=%{public}p
IdleTracker: %{public}@, callingBlock, %{public}s, interval=%{public}@
SIMULATOR: Setting receivedItems to %{private}@
SIMULATOR: Items changed ( from %{private}@ ), so updating and signalling.
includePayload=%{public}s
SIMULATOR: Clearing current item, because it has been removed ( was %{public}@/%{private}@).
SIMULATOR: Updating existing item, %{public}@ %{private}@/%{private}@
SIMULATOR: Item %{public}@ seems to be different from %{public}@, so changing received item & updating lists.
SIMULATOR: Looking for %{private}@
SIMULATOR: Found bundle ID for item %{public}@/%{private}@, %{private}@
SIMULATOR: Unable to find application to handle typeIdentifier %{private}@:%{private}@ for item %{public}@
FAILED to decode %@ object for useractivityd <-> simulator connection, %@
Removing bestAppSuggestion notifier %{public}@
Invalidating bestAppSuggestion notifier
setItems(%{private}@)
BESTAPP: -- Ignoring supressed item, %{private}@ %{public}@ (until %{public}@, now=%{public}@)
BESTAPP: -- Ignoring supressed item, %{private}@ %{public}@ (until %{public}@, item.when=%{public}@, now=%{public}@)
BESTAPP: Ignoring item %{public}@/%{private}@ %{public}@, because it is earlier than %{public}@
BESTAPP: -- Ignoring item %{public}@/%{private}@, because it is not a local action
BESTAPP: Not notifying clients about new best app %{public}@/%{private}@ .when=%{public}@ (and %lu more best app options) because it matches last item.
Notifying clients about new best app: %{public}@/%{private}@ (and %lu more best app options)
BESTAPP: supressedUntil=%{private}@
BESTAPP: Setting .hardSupressedUntil for %{public}@ to nil, because that time has passed.
BESTAPP: Setting .supressUntil for %{public}@ to nil, because that time has passed.
BESTAPP: Setting .supressedUntil for %{public}@ to nil, because the .lastInterestingTime is earlier the last update for this item (%{public}@ vs %{public}@ (%{public}@ vs %{public}@), when=%{public}@).
doConnected, bestApp client connected. pid=%d
doDetermineBestAppSuggestionWithCompletionHandler, bestApp=%{public}@/%{private}@ (and %lu more app suggestions)
doDetermineBestAppSuggestionWithCompletionHandler, bestItem = nil
uuid=%{public}@ options=%{public}@
BESTAPP: Updating existing supression record for item %{public}@/%{private}@, %{public}@
BESTAPP: Setting supressedUntil for item %{public}@/%{private}@ item.when=%{public}@ to %{public}@/%{public}@ lastInterestingTime=%{public}@
doLaunchFollowUp cornerActionItem: %{private}@, interactionType: %lx, cancelled: %{public}@
Empty wasContinuedInfo, creating it
WasContinuedInfo scheduledForSubmission: %{public}@
-- Scheduling messagetracer info for submission: %{public}@, %{private}@
-- Sumbitting metric info for %{public}@, %{private}@
doRegisterForBestAppChangeNotification, clientPid=%{public}ld
doUnregisterForBestAppChangeNotification, clientPid=%{public}ld
Queuing fetch for bestAppUUID %{public}@
bestAppFetch
result=%{public}d enableTelemetry=YES 
### Auto-exiting after %g seconds; likely crashed during a unit test and want to clean up.
%{public}s: Starting up, %{public}s %{public}s %{public}s version %g built on %{public}s %{public}s.  args=%{public}@
*** terminateServerIfExecutableIsReplaced fd = %d
*** Detected a change to %{public}s, so terminating server in %f seconds.
*** Cancelling source.
[FILE MANAGER] ERROR creating shared pasteboard dir: %@
[FILE MANAGER] Shared Path: %@
[FILE MANAGER] Error creating subdir: %@
[FILE MANAGER] Path for file UUID: %@ -> '%@'
[FILE MANAGER] Created file at path: %@
[FILE MANAGER] Failed to create file at path: %@ / %s
[FILE MANAGER] Failed to create dir at path: %{public}@ / %{public}@
[FILE MANAGER] Created dir at path: %{public}@
[FILE MANAGER] Failed to remove item at path: %{public}@ / %{public}@
[FILE MANAGER] Removed item at path: %{public}@
[FILE MANAGER] Creating file for local pasteboard blob at path: %@
[FILE MANAGER] Created Handle: %@
[FILE MANAGER] Creating file for remote pasteboard blob at path: %@
[FILE MANAGER] Error creating clone items dir: %@
[File Manager] Error writting data for %{public}@: %{public}@
[File Manager] Releasing lock for item %@
[File Manager] Released lock for item %@
[File Manager] Canceling all file coordiation providers
Already have lock for file, deleting
Error deleting item: %{public}@
Deleted file for item: %{public}@
Obtaining write lock to delete file for item: %{public}@
Error getting coord write for deleting item: %{public}@
Attempting to deleta archive: %@
Error deleting archive: %{public}@
Attempting to delete item: %@
We have lock for the file, we are receiving the item and should not delete it at this time
Obtaining write lock to delete file
Deleting file for item: %@
Attempting to delete copied item: %{private}@
Deleted copied item: %{private}@
Failed to delete item: %{private}@
HANDLER: %{public}@ is being %{public}s
HANDLER: %{public}@ is being suspended ( was not )
HANDLER: %{public}@ is being resumed ( was suspended )
HANDLER: %{public}@ is being terminated %{public}@
Streams stalled, erroring out the paste operation.
[CODERV2] dealloc
[CODERV2] State: %@ -> %@
[CODERV2] Streams closed: %{public}@
[CODERV2] Reveived message for tag %{public}@
[CODERV2] Did write tag %{public}@
[CODERV2] Did write data chunk
[CODERV2] Done writting pasteboard data chunks
[CODERV2] Requesting delivery for %{public}@
[CODERV2] Req result: %d
[CODERV2] Done sending archive chunks
[CODERV2] Stopping
Received stop message with error: %@
[CODERV2] Archvie requested for UUID: %@
[CODERV2] File requested with invalid UUID: %{public}@
[CODERV2] Delivering file packets for UUID: %@
[CODERV2] Received pasteboard info, requesting data
[CODERV2] Error receiving pasteboard info: %{public}@
[CODERV2] Received pasteboard data response (%{public}@/%{public}@)
[CODERV2] Error writing data to file: %{public}@
[CODERV2] Received pasteboard file response %@ %ld%% (%{public}@/%{public}@)
[CODERV2] Received all data for archive: %@
[CODERV2] Total expected data length: %{public}@
[CODERV2] Sending heartbeat
[CODERV2] Sending pasteboard info
[CODERV2] Sending pasteboard data request
[CODERV2] Requesting archive for UUID: %{public}@
[CODERV2] Building file packager to send pasteboard data
[CODERV2] Requesting pasteboard info, will return info early: %{public}@
[CODERV2] Timout waiting for item lock sememphore
[CODERV2] Calling received info handler
[CODERV2] Skipping call to received info handler
[CODERV2] Calling pasteboard received handler
[CODERV2] Skipping call to pasteboard received handler
[CODERV2] Item %d has public.file-url with uuid: %@
[CODERV2] Error obtaining lock for item %d: %{public}@
[CODERV2] Setup to send pasteboard, waiting
[CODERV2] Sending pasteboard with files
[CODERV2] Archiving item in our clone dir, no need for sandbox ext
[CODERV2] Error getting sandbox info
[CODERV2] Got extension data: %@
[CODERV2] Got extension id: %lld
[CODERV2] Starting to archive %@
[CODERV2] Don't do anything with archives after stream is marked done
[CODERV2] Error creating archive for file: %@
[CODERV2] Created packager for archive: %@
[CODERV2] Done archiving all objects, total send size: %@
[CODERV2] No files to archive, total send size: %@
[CODERV2] Calling pasteboard sent handler
[CODERV2] Skipping call to pasteboard sent handler
[CODERV2] Got data from packager, packet #: %d, tag: %ld
[CODERV2] Finished sending packages: %ld / %{public}@
[CODERV2] Error from packager: %{public}@
Starting watchdog: %@ - %fs
Canceling watchdog: %@
Triggering watchdog: %@ - %fs - %@
Setting advertisable items to %{private}@
SIMULATOR: Telling paired client that the advertised item %{public}@/%{private}@ changed.
result=%{private}@/%ld items
-- signalling thread to determine what activity to advertise because one of our userActivityItems changed.
DETERMINE: Determining list of items to be advertised thread starting up: 
DETERMINE: Checking for recentlyEligible items because the screen is dimmed (includeRecentItems == YES).
DETERMINE: possible items to advertise:%{private}@
DETERMINE: Since this activityItem's .userInfo, %{public}@ type=%{private}@, has unsynchronized cloud documents, we can't actually advertise this item.
handoffFetchSpeculative enableTelemetry=YES 
success=%{public}d enableTelemetry=YES 
handoffFetchSpeculative
DETERMINE: Activity %{public}@/%{private}@ had unsynchronized documents, so we asked it to update and we've heard back.
DETERMINE: Activity %{public}@/%{private}@ had unsynchronized documents, so we asked it to update and we've heard back with an error %{public}@.
DETERMINE: %{public}@/%{private}@ as the current item-to-advertise.
DETERMINE: No item is being advertised, so removing any previously set of advertised items.
Determining idleDetermination, entering.
IDLE: Setting preventAdvertisingSuspensionBecauseOfAlwaysPickItem = YES for item %{public}@
IDLE: Setting self.userIsInactivePowerAssertion == nil because there are no items being advertised.
IDLE: Setting shouldSuspendAdvertising == YES because userInactivePowerAssertion == nil
IDLE: Setting self.screenDimmedPowerAssertion == nil because there are no items being advertised.
IDLE: Setting shouldSuspendAdvertising == YES because self.screenDimmedPowerAssertion == nil
IDLE: Setting shouldSuspendAdvertising == YES because the device is locked and our power assertion has expired.
IDLE: Setting shouldSuspendAdvertising to NO because one or more of our assertions still exists. (%s%s%s%s)
IDLE: Setting systemShouldNotBeAdvertising=NO because advertiser %{public}@ always wants to be advertised.
IDLE: Setting shouldSuspendAdvertising = YES because mustSuspendAdvertising == YES
IDLE: Determined that advertising should be suspended, removing any active advertisement and setting self.systemHasSuspendedAdvertisements = YES ( idle=%.2f seconds)
*** SUSPENDING ADVERTISER %{public}@
*** RESUMING ADVERTISER %{public}@
 -- there are listening clients, so firing the check-and-update-BestApplication thread.
Creating loop to check-for-and-update BestApplication
Candidate bestAppSuggestions: %{private}@
CornerActionManger:  suspend ( was suspended = %{public}@)
*** Suspending advertiser %{public}@
CornerActionManger:  resume
*** Resuming advertiser %{public}@
*** Resuming receiver %{public}@
UserActivity, received UAUserActivityManagerActivityContinuationIsEnabledChangedNotification notification, so spinning all threads.
Backlight %@
setUserIsActive: %{public}@ (was %{public}@)
setUserIsActive, setting to NO, so creating assertion if warranted.
setUserIsActive, creating assertion because we are advertising something
userInactivePowerAssertion, power assertion timed out and expired, so triggering user idle determination.
userInactivePowerAssertion, userInactivePowerAssertion power assertion removed.
setUserIsActive, no need for assertion, triggering updateAdvertisableItems
userInactivePowerAssertion, setting to NO, so removing power assertion & triggering idle determination.
updateScreenDimState: %{public}@ (was %{public}@)
updateScreenDimmedState, setting to YES, so creating assertion if needed.
updateScreenDimmedState, creating assertion
screenDimmedPowerAssertion, power assertion timed out and expired, so triggering user idle determination.
screenDimmedPowerAssertion, screenDimmedPowerAssertion power assertion removed.
updateScreenDimmedState, no need for assertion, triggering state updates
updateUIDeviceLockedState, setting to NO, so removing power assertion & triggering idle determination.
updateUIDeviceLockedState: %{public}@ (was %{public}@)
updateUIDeviceLockedState, setting to YES, so creating assertion if we have an advertisement.
Creating power assertion of %g seconds, to keep advertisement alive.
updateUIDeviceLockedState, power assertion timed out and expired, so triggering user idle determination.
updateUIDeviceLockedState, power assertion removed.
updateUIDeviceLockedState, no need for assertion, triggering state updates
updateUIDeviceLockedState, device is unlocked, so removing power assertion & triggering advertising & idle determination.
addAdvertiser(%{public}@)
removeAdvertiser(%{public}@)
## Received com.apple.location.changed so restarting deamon
No remote device type set
SCHEDULE:%{public}@, next=%{public}@ freq=%g
SCHEDULE:%{public}@ scheduleNext, interval=%g
SCHEDULE: Setting next time to DISPATCH_TIME_FOREVER because interval > anything reasonable
SCHEDULE:%{public}@, scheduling down to %f seconds ( _next=%{public}@ )
SCHEDULE:%{public}@, next=%{public}@/%lld ( was %{public}@/%lld )
SCHEDULE:%{public}@, next=NOW ( was %{public}@ ) freq=%g
SCHEDULE:%{public}@, run.  
SCHEDULE:%{public}@, DONE run, next=%{public}@
SCHEDULE:%{public}@, setFreq, next=%{public}@ freq=%g
SCHEDULE:%{public}@, RESET, next=FOREVER ( was %{public}@ ) freq=%g
Created remote generation %{public}@
Cannot update state from %@ to %@
Remote generation dealloc (type requested, data requested): %{public}@ %@
[REMOTE GEN] Responding to type Info request
[REMOTE GEN] Fetching remote type info
[REMOTE GEN] Type payload fetch error: %{public}@
[REMOTE GEN] Received type info
[REMOTE GEN] Setting protocol version: %d
[REMOTE GEN] Received extra data, saving for later
[REMOTE GEN] Type Fetch Info: %{private}@
[REMOTE GEN] Requesting types before PB data
[REMOTE GEN] Waiting on type results
[REMOTE GEN] Timeout requesting type info
[PBOARD CONTROLLER] Creating pboard client controller
[PBOARD CONTROLLER] Client Notification Connection interrupted ( pboardd crash? )
[PBOARD CONTROLLER] Client Notification Connection invalidated; remote copy/paste will no longer work.
[PBOARD CONTROLLER] Screen sharing session started, disabling universal clipboard
[PBOARD CONTROLLER] No more screen sharing sessions, enabling universal clipboard
Process %d requested for UC to disable
[PBOARD CONTROLLER] Return Client Items in Order: %@
[PBOARD CONTROLLER] Sending client xpc remote available update: %@
[PBOARD CONTROLLER] Error getting client connection: %@
[PBOARD CONTROLLER] Got type update from client, gen: %lu, %@
[PBOARD CONTROLLER] Ignoring type updates, screen sharing session in progress
[PBOARD CONTROLLER] Ignoring type updates, clipboard sharing disabled
[PBOARD CONTROLLER] Received pasteboard info: %@
[PBOARD CONTROLLER] Clear local pasteboard info: from client
[PBOARD CONTROLLER] Remove Local Types Fired
[PBOARD CONTROLLER] Remove Local Timer Fired
[PBOARD CONTROLLER] Pasteboard types fetch requested
[PBOARD CONTROLLER] Pasteboard data fetch requested for pid: %d
[PBOARD CONTROLLER] Already have remote data, using it: %@
[PBOARD CONTROLLER] Requesting data from remote device
[PBOARD CONTROLLER] Starting timer to show UI in %lf sec
[PBOARD CONTROLLER] Pasteboard Fetch Cancelled
[PBOARD CONTROLLER] Payload fetch error: %{public}@
[PBOARD CONTROLLER] PBData came with stream request, was a small pboard
[PBOARD CONTROLLER] Error creating remote data file
ERROR: Error writing pasteboard data blob: %@
[PBOARD CONTROLLER] Requesting to open streams with version: %@
[PBOARD CONTROLLER] Opened streams with error: %{public}@
[PBOARD CONTROLLER] Opened streams
[PBOARD CONTROLLER] Could not create data file for remote pasteboard
[PBOARD CONTROLLER] Error receiving pboard info: %{public}@
[PBOARD CONTROLLER] Received error from remote: %{public}@
[PBOARD CONTROLLER] Received pboard info: %@
URL on pasteboard: %@
Creating %@ as type %@
[PBOARD CONTROLLER] new URL for item: %@
[PBOARD CONTROLLER] Issuing sandbox extension
[PBOARD CONTROLLER] Got extension
[PBOARD CONTROLLER] Error issuing extension
[PBOARD CONTROLLER] Saving sandbox extension to dict
[PBOARD CONTROLLER] Corrupt file: url in stream, %{public}@
[PBOARD CONTROLLER] Non-file: url provide in stream, %{public}@
[PBOARD CONTROLLER] Sending extensions: %@
[PBOARD CONTROLLER] Paste Fetch Info: %@
[PBOARD CONTROLLER] Archiving pbinfo: %@
[PBOARD CONTROLLER] Pboard is small enough to send via BTLE payload
[PBOARD CONTROLLER] Pasteboard Sent Info: %{private}@
[PBOARD CONTROLLER] Starting pboard service for paste, version: %@
[PBOARD CONTROLLER] Pasteboard data alread fetched sending now
[PBOARD CONTROLLER] Failed to create local pasteboard data file
[PBOARD CONTROLLER] Error getting client object proxy: %{public}@
[PBOARD CONTROLLER] pbsize: %ld, payload size limit: %ld
[PBOARD CONTROLLER] Telling client pboard will be fetched
[PBOARD CONTROLLER] Error getting client connection for write notification: %@
[PBOARD CONTROLLER] Attempting to get local pasteboard data
[PBOARD CONTROLLER] Getting pboard written to file
[PBOARD CONTROLLER] Received streams, waiting for local data to be available
[PBOARD CONTROLLER] Local data available, starting out stream
[PBOARD CONTROLLER] Error sending types: %{public}@
[PBOARD CONTROLLER] Finished sending types: %@
[PBOARD CONTROLLER] Local Pasteboard Sent Info: %{private}@
[PBOARD CONTROLLER] Timeout getting local pasteboard
[PBOARD CONTROLLER] New client connection does not have correct entitlement: %@
[PBOARD CONTROLLER] Received new client connection: %@
[PBOARD CONTROLLER] Client interrupted
[PBOARD CONTROLLER] Client invalidated
[PBOARD CONTROLLER] Received new aux connection: %@
[PBOARD CONTROLLER] AUX interrupted
[PBOARD CONTROLLER] AUX invalidated
Controller Connection Invalidated
No more active controllers, Re-enabling UC
New Controller connection, disabling UC
[PBOARD CONTROLLER] show pbui, but already visible, skipping
[PBOARD CONTROLLER] Setting durration time for %lf sec
[PBOARD CONTROLLER] Setup progress UI: %@, %@, %@
[PBOARD CONTROLLER] Creating notification for progress ui with options: %@
[PBOARD CONTROLLER] Notification creation err: %d
[PBOARD CONTROLLER] Waiting for notification result
[PBOARD CONTROLLER] Response flags: %lu
[PBOARD CONTROLLER] User cancelled the paste
[PBOARD CONTROLLER] Paste was cancelled
[PBOARD CONTROLLER] Unexpected result from user notification
[PBOARD-CONTROLLER] User notification was no longer current at the time it was cancelled or completed, so ignoring. %{public}lu
[PBOARD CONTROLLER] Failed to created user notification ref, err=%{public}d
[PBOARD CONTROLLER] Adding hide delay of %lf sec
[PBOARD CONTROLLER] Hide progress in %lf sec with fail: %@
[PBOARD CONTROLLER] iOS needs a minimum delay of 1.25 sec, updating delay to 1.25
[PBOARD CONTROLLER] Canceling the user notification
[PBOARD CONTROLLER] No notification, must have already been canceled
[STREAM HAND] Starting Streams
[STREAM HAND] Starting Input Stream
[STREAM HAND] Starting Output Stream
[STREAM HAND] Call to stop streams
[STREAM HAND] Trying to stop streams
[STREAM HAND] Stoping streams
[STREAM HAND] Write raw data of length: %ld
[STREAM HAND] Cannot write raw data, in message mode
[STREAM HAND] Write message tagged %ld of length: %ld
[STREAM HAND] Cannot write message, in raw data mode
[STREAM HAND] Did not write anything, setting flag
[STREAM HAND] Received error on stream %{public}@: %{public}@
[STREAM HAND] Both Streams opened
[STREAM HAND] Wrote %ld raw bytes to output stream
[STREAM HAND] We should not be writting more data than we have!
[STREAM HAND] Error writing message: %{public}@
[STREAM HAND] Should not be writting 0 data to stream
-dealloc for power assertion %{public}@/%{public}@
ASSERTION: %{public}@ Calling block with NO, in -dealloc
ASSERTION: %{public}@ Releasing assertion %ld, in -dealloc
ASSERTION: %{public}@ Scheduling assertion for %g seconds.
ASSERTION: %{public}@ Rescheduling assertion for %g seconds (was %.2g seconds from now).
ASSERTION: %{public}@ No need to update assertion; request for %g seconds is less than current expiration, in %.2g seconds.
%s, IOPMAssertionCreateWithProperties returned %x
ASSERTION: %{public}@ Power assertion /%ld created.
ASSERTION: %{public}@ Power assertion %ld released.
ASSERTION: %{public}@ Updating needToCallBlock => NO
ASSERTION: %{public}@ Calling block with YES because assertion timed out
SIMULATOR: Returning received activities %{private}@ as eligibleItems
[Packager] Queuing delivery block %d/%d
[Packager] Delivery signaled
[Packager] Delivering packet %d/%d
[Packager] Reading packet data %d/%d
PROCESSCOMMAND:%{private}@
REPLAY: Destroying replay object because the peer's UUID %{public}@ matched our own.
REPLAY: Terminating UAActivityReplay because TERMINATE was received.
=== Forcing item into replay client: %{private}@
=== UPDATED PAYLOD FOR item %{private}@ 
=== WAITING FOR ACTIVITY %{private}@ to be resumed (for %g seconds)
=== REMOVING ACTIVITY %{private}@ to be resumed
NETWORK: Received broadcasted advertisement %{private}@
REPLAY: PULLPAYLOAD request, for advertisementPayload=%{private}@
REPLAY: PULLPAYLOAD request, got encodedData %{private}@ from creating application for advertisementPayload %{private}@, so returning that to paired client over the network.
REPLAY: RETURNPAYLOAD request, for advertisementPayload=%{private}@
REPLAY: RETURNPAYLOAD request, found existing payloadHandler in _pendingPayloadFetches for advertisementPayload=%{private}@
REPLAY: Didn't find handler for advertisement %{public}@/%{private}@, pendingPayloads=%{private}@
REPLAY: Sending encoded data %{private}@ to activity handler.
terminate
Looking for localized string for key: %@
Falling back to NSLocalizedString
SIMULATOR: Terminating all UASimulators.
SIMULATOR: RegisterWithParentWithVersion simulatorVersion=%llu, serverPort=%x pid=%d
SIMULATOR: Creating UASimulator to be parent simulator in OSX, uuid=%{public,posix:uuid}.16P port=%x
SIMULATOR: Failed to create simulator; simulated useractivityd client version %ld is unknown.
SIMULATOR: Detected death of child simulator, pid=%d, so terminating the UASimulator and removing it.
Submitted UAActivityBecameCurrentEvent: %{private}@
Submitted UAActivityWasDiscoveredEvent: %{private}@
Submitted UAActivityWasSuggestedEvent: %{private}@
Not reporting activity was continued becasuse payload was never requested.
Submitted UAActivityWasContinuedEvent for %@: %{private}@
Metric AT for %{private}@ is %{private}@
Submitted UARemotePasteboardWasRequestedEvent: %{private}@
Submitted UARemotePasteboardDidSendLocalEvent: %{private}@
Submitted UARemotePasteboardTypeInfoRequestedEvent: %{private}@
Submitted UARemotePasteboardBecameAvailableEvent: %{private}@
Submitted UARemotePasteboardBecameUnavailableEvent: %{private}@
AdvertisableItems:%{private}@
NOTIFY BEST CHANGE: %@ -> %@
LAYOUT: Updating advertisement because the list of main screen visible bundle identifiers changed
LAYOUT: Updating advertisement because the lock screen is present and there were previous main screen bundles.
determineVisibleOrderingForProcessesWithUserActivities, layout=%{private}@
LAYOUT: Found %{public}@/%{public}@ as active layout
LAYOUT: Found %{public}@/%{public}@ as proxy for active layout
LOCKSCREEN: Layout contains modal lock screen, %{private}@.
LOCKSCREEN: Ignoring lock-screen element because %{public}@ is at or above.
Adding client %{private}@, %{public}@, bundleID=%{private}@ to known userActivityClients.
Removing client %{private}@, application %{public}@, from known userActivityClients.
Moving 'LSLivePastProcessExit' activity %{public}@/%{private}@ from process %{public}@ into additionalUserActivityAdvertisableItems
Removing client %{public}@ from _userActivityClientsByPID
Removing client %{private}@ from _userActivityClientsByBundleIdentifier
MAKEFRONT: handleAppStateMonitorUpdate:%ld %{private}@
--- ignoring notification for pid %{public}@ because BKSApplicationStateExtensionKey == YES and isEligibleAsExtension == NO (is Client %@)
MAKEFRONT: %{public}@/%{public}@ %s
MAKEFRONT: - ( was %{public}@/%{public}s)
MAKEFRONT:- (was %@) %{public}s
registerAsProxyApplication, pid=%{public}d controller=%{public}@
registerAsProxyApplication, added, proxiedClients=%{public}@
registerAsProxyApplication, removed, proxiedClients=%{public}@
*** FORCING item %{private}@ as the most eligible item, since it's a ping
-- Adding in eligibleItemsWhenInBackground items, %{private}@. 
listener=%{private}@ newConnection=%{private}@
[DATA REQUESTER] Requesting payload from: %@, with timeout: %{public}@
[DATA REQUESTER] Requesting complete: %lu bytes, error: %@
[DATA REQUESTER] Adding %d delay for testing
[DATA REQUESTER] Requesting payload from: %@, with timeout: %{public}@, version: 2
[DATA REQUESTER] Requesting pbinfo from: %@, with timeout: %{public}@
BLUETOOTH: Setting powered status for device %{public}p to %{BOOL}d
BLUETOOTH: Failed to get device powered status, for local device %{public}p from BTSession %{public}p, result=%{public}d.
BLUETOOTH: Attached to BTSession, result=%{public}d, setting attached to %{BOOL}d.
BLUETOOTH: Detached from BTSession, result=%{public}d, setting attached to NO.
BLUETOOTH: Registering callback %{public}@ to %{public}p
BLUETOOTH: Unregistering callback %{public}@
BLUETOOTH: Letting callback %{public}@/%{public}p know that the power status is now %{BOOL}d
BLUETOOTH: Attached to BTSession %{public}p
BLUETOOTH: Local device %{public}p from BTSession %{public}p, result=%{public}d, setting attached to YES.
BLUETOOTH: Failed to add callbacks for local device %{public}p from BTSession %{public}p, result=%{public}d.
BLUETOOTH: Failed to get local device for session %{public}p, result=%{public}d
BLUETOOTH: Detached from BTSession %{public}p localDevice=%{public}p
BLUETOOTH: Terminated from BTSession %{public}p localDevice=%{public}p
BLUETOOTH: Setting powered status valitidy for device %{public}p to NO
*** ERROR: Received BTLEUserActivity error packet, but unable to de-archive it, so discarding it.
*** ERROR: Received BTLEUserActivity packet with unknown version, %ld, so discarding it.
-- Compressed data to %ld bytes (from %ld bytes) in data, ( %ld%% )
Using compressed data, because it is %ld bytes smaller than the uncompressed data.
setScanningForTypes:%{public}@
UASharingReceiver, adding activity scanner %{public}@.
UASharingReceiver, removing activity scanner %{public}@.
UASharingReceiver, suspending activity scanner %{public}@.
UASharingReceiver, resuming activity scanner %{public}@.
foundDevice, deviceIdentifier=%{private}@ scanner=%{public}@
foundDevice, deviceIdentifier=%{private}@
lostDevice, deviceIdentifier=%{private}@ scanner=%{public}@
lostDevice timer firing deviceIdentifier=%@; _recentlyLostDeviceIDs is %@, will remove is %d
lostDevice, deviceIdentifier=%{private}@
removing item %{public}@/%{private}@ because another item (%{public}@/%{private}@) with the same bundleID and deviceID is being added
Unable to determine nowPlaying client, error=%{public}@ for item %{public}@
NowPlaying item is %{public}@ for item %{public}@
Retaining %{public}@ in _receivedItems because it's .payloadRequested or .payloadAvailable, so that it remains available for a bit, until %{public}@.
REMOVING: %{public}@ because it's on device %{private}@
SharingBTLEReceiver: Running periodicCleanupFunc to check for received items whose .removeAfter has passed.
Removing %{public}@ from .receivedItems because .removeAfter, %{public}@ has expired.
activityScanner:receivedAdvertisement: %{private}@,%{public}@)
Received Ad: %{public}@ opts=%{public}@ from %{private}@/%{private}@
Ignoring received ActivityContinuation because the current profile disallows it, %{public}@ from %{private}@
SIMULATING foundDeviceForIdentifier: %{private}@
Received advertisement.advertisementPayload == nil
[PBOARD] Received pboard available advertisement
[PBOARD] Ad is from last seen device
[PBOARD] Pboard version bit flipped, notify client
[PBOARD] Ad is from new device, notify client
[PBOARD] Notify client of new remote pboard and reset timmer
[PBOARD] Recived add w/o remote pboard for last seen device, notify client and clear timmer
 -- Looking for activity matching advertisingPayload %{public}@, from %{private}@/%{private}@
 -- Found matching advertisingPayload to item already received from this device, %{public}@/%{private}@, so using it. %{public}@/%{private}@
 -- Clearing payload of item %{public}@/%{private}@ because the last active time from that device has changed.
 -- Because the optionBits in the packet changed, from %x%{public}@ to %x%{public}@, discarding current item and starting fresh, %{public}@ / %{private}@
 -- Matching dns- item to previously received one, mapping to %{private}@, for item already received from this device, %{public}@/%{private}@, so using it. %{private}@
 -- New advertisement of DNS type didn't seem to match to same app as  previous one, %{public}@ vs %{public}@, so can't use it. %{private}@
PING: Pong was sent, error=%{public}@
# RECEIVED advertisement, %{public}@ type=%{private}@ -> %{private}@, %{public}@, from %{private}@/%{private}@ options=%{public}@
received UAUserActivityAutoPullActivitiesListKey bit on, fetching more app suggestions
*** Checking whether to do a pre-emptive fetch of the payload for item %{public}@/%{private}@
*** Ignoring prefetch for item %{public}@/%{private}@ because dontPrefetchBefore=%{public}@
*** Scheduling a pre-emptive fetch of the payload for item %{public}@/%{private}@
*** Completed a pre-emptive fetch of the payload for item %{public}@/%{private}@
issuing handoff-more_items command for %lu devices
issuing handoff-more_items command for device %@
got back %lu items for handoff-more_items command from device %@
.scanForTypes=%{public}@
[IN STREAM] Starting to receive types: %@
[IN STREAM] Input stream canceled
[IN STREAM] Done with input stream
[IN STREAM] Paste cancelled, closing stream
[IN STREAM] Receiving Header Info
[IN STREAM] Error, malformed data received. Have not received message header.
[IN STREAM] Receiving Header
[IN STREAM] Started receiving header
[IN STREAM] Error, malformed data received. Did not receive correct delimiter
[IN STREAM] Received Header: %@
[IN STREAM] Started receiving data file
[IN STREAM] Received data file
[IN STREAM] Stream Event Error: %@
[IN STREAM] Stream End Encountered
** DISCARDING ADVERTISEMENT with hash %{public}@ because it contains a fileProvider (0x%lx), and this platform does not support it.
 -- Received a kLSAdvertisementStringUserActivityKind; finding application with advertising string %{public}@
 -- MATCHED, adverising bytes %{public}@ to activityType %{private}@, from application %{private}@
 -- Received a kLSAdvertisementStringDomainNameKind; no match for native application, so looking for browser
 -- Received a kLSAdvertisementStringPrivateSpaceKind; finding application with private space string %{public}@
 -- MATCHED, adverising bytes %{public}@ to privateType string %{private}@, from application %{private}@
 -- Found application %{private}@, with matching advertisingIdentifier %{private}@, from %{private}@ for payload %{public}@
Creating CornerActionBTLEItem, advertisementPayload=%{private}@ optionBit=%ld type=%{private}@ activityType=%{private}@ bundleID=%{private}@ teamID=%{private}@ advertisingOptions=%{public}@
Created wasContinuedInfo for BTLEAd: %{private}@
Unable to determine application on this device for advertisement %{public}@, so ignoring this received activity.
RECEIVED advertisement, %{public}@, matched against existing corner item %{public}@ so merely update it from the flags & options
for item %{public}@ requested=%{public}@ available=%{public}@
Requesting payload for item %{public}@ payload, but it is already present, so dispatching directly.
Requesting payload for item %{public}@ advertisementPayload=%{public}@ bundleIdentifier=%{private}@ with timeout: %{public}@
sharingFetch
*** DELAYING payload receive by an additional %f seconds for DEBUGAdditionalPayloadReceiveTimeInterval
*** FINISHED DELAYING payload receive by an additional %f seconds for DEBUGAdditionalPayloadReceiveTimeInterval
PAYLOAD:GOT payload for item %{public}@/%{public}@, dataSize=%ld/%{private}@ speed=%g/%{bitrate}ld error=%{public}@
Updated wasContinuedInfo with payload fetch results: %{private}@
Payload for item %{public}@/%{private}@ was received with error %{public}@
*** For activity %{public}@ of type NSUserActivityTypeBrowsingWeb, being reecived, since the teamID from received activity, %{private}@, and teamID associated with application targeted, %{private}@, do not match, setting the userInfoPayload to nil so we don't deliver an un-expected payload type to the target.
*** For activity %{public}@ of type NSUserActivityTypeBrowsingWeb, being received, since the teamID from received activity, %{private}@, and the target application has no teamID, setting the userInfoPayload to nil so we don't deliver an un-expected payload type to the target.
*** Mismatch for activity %{public}@  between teamID from received activity, %{private}@, and teamID associated with application targeted, %{private}@, so refusing to pass along activity to this target.  Error #%ld, UAContinuityUserActivityFailedValidation
*** Mismatch for activity %{public}@ between activityType from received activity, %{private}@, and activityType associated with application targeted, %{private}@, so refusing to pass along activity to this target, error #%ld.
Updating payload for item %{public}@ to %{private}@
Failed to fetch payload from sharingd for item %{public}@/%{private}@, with error %@
-- Calling %ld completionHandlers with payloadRequest information: error=%{public}@
PAYLOAD: clearing payload for activity %{public}@, self=%{private}@
--- item %{public}@ payload already present, so nil-ing it out.
[OUT STREAM] Sending pboard info: %@
[OUT STREAM] Starting to send types: %@
[OUT STREAM] Done sending pasteboard, waiting for end of stream
[OUT STREAM] Unexpected event code: %lu
[OUT STREAM] Got data back: %@
[OUT STREAM] Stream End Encountered, shutting down
[OUT STREAM] Stream Timer Fired, shutting down
-- item %{public}@/%{private}@ not eligible, because it has expired (on %{public}@)
requestPayload...:, %{public}@ from client application %{public}@
wasResumedOnAnotherDevice, %{public}@ to client pid=%ld
activityPayloadFromDevice:%{public}@ forAdvertisementPayload:%{public}@ command:%{public}@ timeout:%ld
--- invalidation on connection to client %{private}@ pid=%ld
About to fetch bundleIdentifier for process with pid %d. Has appStateMonitor: %{public}@
Failed to fetch bundleIdentifier for process with pid %ld after 10 seconds
CLIENT: Process info, for pid %d, is %{private}@
CLIENT: Process info, for pid %d, is %{private}@ (on queue)
CLIENT: Process info, for pid %d, doesn't include bundle identifier, so unable to locate this process 
except by pid. ( is %{public}@ )
UserActivityClient:%{public}@, teamID=%{private}@ applicationID=%{private}@ bundleID=%{private}@ accessAny=%{public,BOOL}d 
removing %{public}@ userActivityInfoItem
uuid=%{public}@
Removing item %{public}@/%{private}@ from additionalUserActivityAdvertisableItems
%{public}@ from client %ld
 - no need to call back to get updated info for activity %{public}@, because it is not dirty
 - A prepareToResume is already in progress for activity %{public}@, queuing callback for when fetch is complete
Error acquiring RBSAssertion: %@
Got error on connection back to client for %{public}@, error: %{public}@
Calling back to client to ask it to save activity %{public}@
FAILED: Calling back to client to ask it to save activity %{public}@ with error %{public}@.
Returned from back to client to ask it to save activity %{public}@, clean=%{public}s updatedInfo=%{private}@
Unable to call willSave for user activity %{public}@ for process %{private}@ because its owning process/connection seems to be gone.
error: %{public}@
Telling client that user activity %{public}@ was resumed (on another device).
 -- Called %lu pending fetch tasks for %{public}@, removing from queue
 -- No pending fetch tasks called for %{public}@
 -- %lu remaining queued tasks total
CLIENT: version=%ld, %{public}@ %{private}@ any=%{public}@ sandbox=%{public}@ clientInfo=%{private}@
deleteUserActivity %{public}@
%{private}@ %{private}@
doAddDynamicUserActivity(%{public}@, %{public}@) failed, nil for hash %{public}@ or teamID %{public}@.
doAddDynamicUserActivity(%{public}@, %{public}@) failed, nil for one param.
 - found %{public}@ activity, removing it.
doRemoveDynamicUserActivity(%{public}@), nil appActivity
Pinned Activity Info: %{public}@/%{private}@
*** Attempt to pin activity from process %{public}@, which doesn't have the %{public}@ entitlement.
*** Attempt to get current activity information from process %{public}@, which doesn't have the %{public}@ entitlement.
result=%{public}@ %{private}@ error=%{public}@
doGetUserActivityProxiesWithOptions:%{public}@ predicate=%{public}@
doDetermineIfUserActivityIsCurrent: uuid=%{public}@
doDetermineIfUserActivityIsCurrent: Found uuid=%{public}@, in client %{public}@ as %{private}@
*** Attempt to determineIfUserActivityIsCurrent from process %{public}@, which doesn't have the %{public}@ entitlement.
doFetchUserActivityInfoWithUUID:(%{public}@)
-- activity with uuid %{public}@, so fetching payload for it.
-- activity with uuid %{public}@, completed fetching payload, %{private}@ %{private}@ %{private}@%{private}@, for it. error=%{public}@
 -- Received error %{public}@ trying to fetch payload for item uuid %{public}@
 -- Sending userActivityInfo back to client, %{public}@/%{private}@
 -- Removing cornerActionItem payload %{public}@/%{private}@ because a client fetched it.
 -- Could not update activityInfo for fetch
 -- Sending Pinned userActivityInfo back to client: %{private}@
Activity with uuid %{public}@ fetch requested, but was neither a locally created item nor a corner action item, so returning error %{public}@
doUpdateUserActivityInfo: makeCurrent=%{public}@ newInfo = %{public}@/%{private}@
The application with pid %ld/%{private}@ didn't provide a activityType.
The application with pid %ld/%{private}@ doesn't have a team identifier in its application-identifier, or isn't from com.apple., and is sandboxed, so unable to proceed.
Application %{public}@ is registering an activity with teamID %{private}@ bundleID=%{private}@ activityType=%{private}@
Application item %{public}@/%{private}@ has a proxy %{public}@, so forcing an advertisement update.
Application item %{public}@/%{private}@ has changed .webPageURL, forcing an advertisement update.
Application item %{public}@/%{private}@ has changed proxy %{public}@, so forcing an advertisement update.
- Making %{public}@/%{private}@ into the currentItem from process %{private}@/%ld
refusing to register user activity from client, and returning error %{public}@ for item %{public}@ %{private}@
BECOMECURRENT: updating advertisement for %{public}@/%{private}@ because the becomeCurrent item changed or a DNS item changed its URL
BECOMECURRENT: updating notifiers for %{public}@/%{private}@ because the becomeCurrent item changed
doUpdateUserActivityWithUUID(%{public}@/%{private}@, current=%{public}@)
Checking if the current item for %{public}@ is changed, %{public}@/%{private}@ %{public}@%{public}@
Triggering the update of the advertisable items because the current status of our application, %{public}@, has changed.
Triggering the update of the advertisable items because uuid == nil, for application %{public}@, has changed.
doMarkUserActivityAsDirty(%{public}@) for app %{public}@ forceImmediate=%{public}@ webpageURL=%{public}@ expiration=%{public}@%{public}s%{public}s
 -- dirty activities for this client: (%{public}@) %{public}@
 -- Updating the user activity, because it's the currently advertised item, to let the server know it should (maybe) re-fetch the payload: %{public}@
Scheduling an advertising item update, for application %{public}@, because the   changed on a NSUserActivityTypeBrowsingWeb item, %{public}@/%{private}@
doRegisterAsProxyApplicationForPid, pid=%{public}d options=%{public}@
NETWORK:Starting browse for rendezous items for %{public}@ %{public}@.
NETWORK: browser=%@ service=%@/%@ more=%@
NETWORK: name=%{public}@ type=%{public}@ port=%ld
NETWORK: Setting up mDNS listener for connections, name=%{public}@ type=%{public}@ port=%ld
NETWORK: NSNetServicesErrorCode=%ld / %{public}@
NETWORK: netServicesDidStop, so terminating this listener, sender=%{private}@.
NETWORK: Sending initial packet to paired client %{private}@/%{public}@ from controllerUUID=%{public}@.
NETWORK: stream=%{private}@ have %ld/%{private}@ controllerUUID=%{public}@
NETWORK: stream=%{private}@ Remaining data, %ld/%{private}@
NETWORK: stream=%{private}@ error=%{public}@
NETWORK: stream=%{private}@ END ENCOUNTERED
COMMAND: %{private}@, from %{private}@/%{public}@
NETWORK: Responding to peer %{private}@/%{public}@ with our UUID, %{public}@, to establish connection from controllerUUID=%{public}@.
NETWORK: Destroying replay handler object because the peer's UUID %{public}@ matched our own, controllerUUID=%{public}@.
-- checking replayController %{public}@ against peerUUID=%{public}@
NETWORK: Destroying network replay object to %@ because we already have a different connection to that peerUUID %{public}@, controllerUUID=%{public}@
COMMANDRESPONSE: %{private}@ (controllerUUID=%{public}@ peerName=%{private}@)
controllerUUID=%{public}@
[CODER_V1] Starting to receive pasteboard
[CODER_V1] Input stream canceled
[CODER_V1] Done with input stream: %@, %@
[CODER_V1] Processing Received data with length: %ld
[CODER_V1] Receiving Header Info
[CODER_V1] Error, malformed data received. Have not received message header.
[CODER_V1] Receiving Header
[CODER_V1] Started receiving header
[CODER_V1] Received Header: %@
[CODER_V1] Started receiving data file
[CODER_V1] Error, malformed data received. Did not receive correct delimiter
[CODER_V1] Recived %ld of %ld
[CODER_V1] Received data file
[CODER_V1] Done queuing chunks, starting shutdown timer
[CODER_V1] Queuing next chunk to send: %ld
[OUT STREAM] Data sent: %ld - %ld
TIME: -- since timeOffsetByteInTicks == 0xff, storing maximum age time.
TIME: --- Guessing that their clock and our clock are in different epochs, ourOffset=%ld, theirs %ld, so falling back %ld seconds and setting delta to %ld. result=%{public}@/%{public}@
TIME: --- Guessing that their clock is somewhat ahead of our clock, and in the same epoch, ourOffset=%ld, theirs %ld, so setting result == no, result=%{public}@=%{public}@
TIME: --- Guessing that their clock is the same or behind of our clock, and in the same epoch, ourOffset=%ld, theirs %ld, so setting result to delta (%ld) + %ld seconds from epoch, result=%{public}@/%{public}@
TIME: result time = %{public}@ %{public}@
Calculated advertisingBytes for %ld / %{private}@, result=%{public}@
SIMULATOR: Requesting payload from paired client, uuid=%{public}@
SIMULATOR: Received payload from paired client, uuid=%{public}@, webPageURL=%{public}@ payload=%{private}@
SIMULATOR: Failed to get payload for activity %{public}@
SIMULATOR: Calling completion handler because activity %{public}@/%{private}@ was resumed, error=%{public}@
setAdvertisableItems:(%{public}@)
ADVERTISING: Scheduling an update to check the advertisement, because we've changed the list of advertised items.
--- Scheduling an update to check the advertisement, because we've cleared the list of advertisable items.
advertising %@, when = %@
ADVERTISING: %{public}@ (old=%{public}@)%{public}@
ADVERTISING: Matched current advertisement, so not updating ( %{public}@ vs %{public}@)
ADVERTISING: Changing advertisement to nil because it's been removed, %{public}@
itemToAdvertise is nil but we need to advertise an auto pull request, so choosing item %@ out of corner manager's possible advertiseable items to advertise
setting UAUserActivityItemIsNotActiveKey = 1 for item %@
setting UAUserActivityItemIsNotActiveKey = 0 for item %@
setting UAUserActivityAutoPullActivitiesListKey = 1 for item %@
ADVERTISING: Advertising new item or updating user-idle time in previous advertisement, %{public}@/%{private}@
lastAdvertismentTime is in the future, this is wrong and is probably because the system clock has changed
ADVERTISING: Time since last advertisement seems to have gone backwards, now=%{public}@ last=%{public}@
ADVERTISING: Setting supressAdvertisementChange = YES because the client attempted to change advertisement too quickly, %f since lastAdvertisementTime (now=%{public}@ last=%{public}@)
ADVERTISING: self.advertisementTimes=%ld %{public}@
ADVERTISING: Removing first item, %{public}@, becaues it is earlier than %{public}@
ADVERTISING: Setting supressAdvertisementChange = YES because the advertisement too quickly, %ld in last %f seconds (earliest=%{public}@ now=%{public}@)
ADVERTISING: Since supressAdvertisementChange == YES, not actually changing the active advertisement and relying on it happening again in the near future.
OLDWEB: Adding item %{private}@, date=%{public}@
ADVERTISING:%{public}@ %{public}@ type=%{private}@%{private}@ at %{public}@ opts=%{public}@
_updateAdvertisement, entering.
Removing .currentAdvertisedItem because Bluetooth is not enabled.
Not advertising because this device is in batterSaverModeEnabled == YES
ADVERTISING: Removing advertisement %{public}@ because advertising is suspended
We have a non-active advertisement, started at: %@, %@s till removal
Removing non-active advertisment
Rescheduling update to remove advertisment
self.advertisableItems is %@, itemToAdvertise is %@
UPDATEADVERTISEMENT: Removing current advertisement item, %{public}@/%{private}@, because its process is gone
UPDATEADVERTISEMENT: No item available to advertise, so switching to advertising existing advertisement nonactively.
UPDATEADVERTISEMENT: No item available to advertise, so
UPDATEADVERTISEMENT: Removing current advertisement item, %{public}@/%{private}@, because self.activityAdvertisingAllowed == NO
removeAdvertisement, currentAdvertisementPayload=%{private}@
OLDWEB: Checking expiration of %{public}@ of %{private}@, expireBefore=%{public}@
OLDWEB: Removing (old) NSUserActivityTypeBrowsingWeb item, %{private}@, because it is older than %{public}@ (expired at %{public}@
-- CHECKING %{public}@ version %{public}@, %{public}@ = %ld.%c.%ld
PEERS: %ld/%{public}@, advertiseHandoff=%{public}s pastboard=%{public}s
PEERS: Our peers ability to received handoff or pasteboard advertisements has changed; scheduling an check for our advertisement. %{public}s/%{public}s
Setting pairedDevices=%ld/%{private}@
dataForMoreAppSuggestions:
skipping %@ because its .when (%@) is older than %lum:
%@: %@
advertiserData=%{public}@ peer=%{private}@ %{public}@/%{public}@
[Sharing Advertiser] Payload request for ad: %{public}@, command: %{public}@, from: %{private}@
activityPayloadForAdvertisementPayload: got handoff-more_items command
payload: %@ (%lu bytes long)
[PBOARD] Paste Requested from remote %{public}@/%{private}@
[PBOARD] Paste V2 Requested from remote %{public}@/%{private}@
[PBOARD] Types Requested from remote %{public}@/%{private}@
Advertising: advertiserData=%{public}@ command=%{public}@ peer=%{private}@ %{public}@/%{public}@
-- advertiseable item %{private}@/%{public}@ matches the advertisingPayload requested %{public}@, so using it.
-- the advertisingPayload requested %{public}@ does not match any advertiseable item
OLDWEB: Checking against previous advertised NSUSerActivityTypeBrowsingWeb items, %{private}@
OLDWEB: the current advertised item, %{private}@/%{public}@, is a NSUserActivityTypeBrowsingWeb, and a previous advertisement %{public}@ from %{public}@ matches the requested payload.
SAMPLEPAYLOAD: Sending %ld bytes to device %{private}@
success=%d enableTelemetry=YES 
handoffFetch
-- received data from advertiseableItem delegate callback to client, uuid=%{public}@ activity=%{public}@/%{private}@
Failure updating userActivity information from client application for activity %{public}@/%{private}@  %{public}@, using (possibly stale) payload instead, status=%ld.
-- Forcing new payload encoder to peer %{private}@/%{public}@ %{public}@ because debugForceNewPayloadEncoder == YES
-- Falling back to 'old' format of payload to support pre Blacktail era device, %{private}@/%{public}@ %{public}@ (size=%ld vs %ld)
-- ENCODING error from client instead of payload, %{public}@ / %{public}@
** The payload for user activity item %{public}@/%{private}@ was %ld bytes, larger than the maximum %ld, and so this user activity cannot be sent to the requesting device.
*** The payload for the user activity item %{public}@/%{private}@ is %ld bytes, larger than the recommended maximum %ld, which may cause slow transfers.
PAYLOAD:Responding to SFAdvertiser with data for advertisement %{public}@ activity %{public}@ type=%{public}@, fetchTime=%g data=%ld/%{private}@
Failure after updating userActivity information from client application for activity %{public}@/%{private}@ %{public}@; the activity disappeared/is no longer current and so cannot be handedOff.
RESPONDING: Unable to locate a userActivity for the payloadData %{public}@ so returning nil/nil and an error as the payload for the requesting device.
Failing request because self.activityAdvertisingAllowed == NO
User activity %{public}@ was resumed on another device, so inform (if desired) the author of the activity on this device
Failing because self.activityAdvertisingAllowed == NO, ignoring notification.
PAIRED DEVICES CHANGED: Now is %ld/%{private}@
Adopting paired devices, PAIRED DEVICES CHANGED: Now is %ld/%@  (was %ld devices)
SIMULATOR: Received message from another simulator on port %ld, so dispatching.
SIMULATOR: Tearing down dispatch_source_t for messages from simulator port %ld
SIMULATOR: Creating UASimulator to talk to real useractivityd in OSX, portName=%{public}@
SIMULATOR: Received notification that parent simulator started up, so forcing a reconnect to re-establish state.
SIMULATOR: Looking up parent port in order to talk to useractivity in OSX
UASimRegisterWithParentWithVersion()=%ld parentVersion=%ld
SIMULATOR: Changing peer device info to %{private}@
SIMULATOR: Paired with parent simulator, commandPort=%ld pairedPort=%ld pairedPeer=%{public}@
SIMULATOR: Detected death of parent simulator port %ld.
SIMULATOR: *** Attempting to reconnect / relaunch parent simulator.
SIMULATOR: Cancelling parent simulator port death source, port %ld
SIMULATOR: Simulator application is %{public}@
SIMULATOR: Because advertising is suspended, returning 'no advertised item' information to paired simulator.
SIMULATOR: Requesting payload for item %{public}@
SIMULATOR: Retrieved payload for item %{public}@, error=%{public}@
SIMULATOR: Sending information on item %{public}@ to paired simulator
SIMULATOR: Returning 'no advertised item' information to paired simulator.
SIMULATOR: Asking receiver to fetch the advertisement.
SIMULATOR: Telling manager to determine the bestApp again
SIMULATOR: Also telling advertisers to determine the item to advertise, because activitiesShouldCrossover=YES
SIMULATOR: Setting received item to %{public}@/%{private}@
SIMULATOR: Found item to send; %{public}@/%{private}@.  Fetching payload.
SIMULATOR: Got payload for item %{public}@/%{private}@.  Returning this info:%{private}@
SIMULATOR: Waiting for payload fetch to complete for item %{public}@
SIMULATOR: Finished wait for payload fetch to complete for item %{public}@
SIMULATOR: Failed to find activity matching uuid %{public}@, items=%{private}@
SIMULATOR: Found item ; %{public}@/%{private}@.  Calling its wasContinued.
Allowing connection to admin interface in simulator from %{public}@
*** SENDING PING %{private}@ to clients.
- doNOP, str=%{private}@, so echoing that back to client.
### DEBUGGING: doSetDebugOption:%{public}@ => %{public}@
### DEBUGGING: Changing EnableSharingFramework to %{public}@
### Removing SFActivityAdvertiser from UASharingAdvertiser
### Adding SFActivityAdvertiser to UASharingAdvertiser.
### Removing SFActivityScanner from UASharingReceiver.
### Adding SFActivityScanner to UASharingReceiver.
str=%{private}@
-- Matching current best item %{public}@/%{private}@
Removing previous injected fake BTLE item %@
Injecting fake BTLE item, %{private}@ "%{private}@" %{private}@ payload=%{private}@
Removing injected fake BTLE item %@
Injecting nil BTLE item, so removing last item
About to call prepareToResumeActivityWithUUID for activityUUID %{public}@
Finished call prepareToResumeActivityWithUUID for activityUUID %{public}@, error=%{public}@
About to call didResumeUserActivityWithUUID for activityUUID %{public}@
Finished call didResumeUserActivityWithUUID for activityUUID %{public}@
Setting up network connection to other machine %{private}@ %ld
doGetPairedDevices(%{public}@)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241128</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleDisplayName</key>
<string>useractivityd</string>
<key>CFBundleExecutable</key>
<string>useractivityd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.coreservices.useractivityd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>useractivityd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>13E6049a</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>8.5</string>
<key>DTSDKBuild</key>
<string>19T220</string>
<key>DTSDKName</key>
<string>watchsimulator8.5.internal</string>
<key>DTXcode</key>
<string>1330</string>
<key>DTXcodeBuild</key>
<string>13E6049a</string>
<key>MinimumOSVersion</key>
<string>8.5</string>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.coreservices.useractivityd</string>
<key>com.apple.PowerManagement.control</key>
<true/>
<key>com.apple.backboardd.lastUserEventTime</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudDocuments</string>
<string>CloudKit</string>
</array>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.iokit.powerdxpc</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.librarian.container-proxy</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceUbiquity</string>
<string>kTCCServiceSystemPolicyAllFiles</string>
</array>
<key>com.apple.runningboard.assertions.useractivityd</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.sharing.handoff.advertising</string>
<string>com.apple.sharing.handoff.scanning</string>
<string>com.apple.CarPlayApp.non-launching-service</string>
<string>com.apple.server.bluetooth.general.xpc</string>
</array>
<key>com.apple.system.powermanagement.useractivity</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.SharedWebCredentials</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>lsuseractivityd</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
@(#)PROGRAM:useractivityd  PROJECT:UserActivity-511
"%(+
MbP?
pbpaste!
pbtypes!
string
bytes
length
stringWithFormat:
appendString:
copy
data
characterAtIndex:
appendBytes:length:
clientWriteSize
numberWithUnsignedLongLong:
clientWriteTime
clientWriteSpeed
usedStreams
numberWithBool:
streamOpenDelay
streamDataSize
streamDataXferTime
streamDataXferSpeed
totalTime
errorCode
numberWithLongLong:
dictionaryWithObjects:forKeys:count:
eventName
eventPayload
setClientWriteSize:
setClientWriteTime:
setClientWriteSpeed:
setUsedStreams:
setStreamOpenDelay:
setStreamDataSize:
setStreamDataXferTime:
setStreamDataXferSpeed:
setTotalTime:
setErrorCode:
_usedStreams
_clientWriteSize
_clientWriteTime
_clientWriteSpeed
_streamOpenDelay
_streamDataSize
_streamDataXferTime
_streamDataXferSpeed
_totalTime
_errorCode
TQ,N,V_clientWriteSize
TQ,N,V_clientWriteTime
TQ,N,V_clientWriteSpeed
TB,N,V_usedStreams
TQ,N,V_streamOpenDelay
TQ,N,V_streamDataSize
TQ,N,V_streamDataXferTime
TQ,N,V_streamDataXferSpeed
TQ,N,V_totalTime
Tq,N,V_errorCode
initWithManager:name:
sharedDefaults
debugEnablePinging
countByEnumeratingWithState:objects:count:
activityType
isEqual:
initFromPing:
uuid
UUIDString
pongCount
setPongCount:
pongItems
removeObject:
setWasContinuedBlock:
addObject:
manager
scheduleUpdatingAdvertisableItems
requestPayloadWithCompletionHandler:
count
initWithManager:
active
items
setItems:
statusString
.cxx_destruct
_pongItems
_pongCount
T@"NSMutableSet",R,C,V_pongItems
Tq,V_pongCount
initWithMachServiceName:
setDelegate:
setBestAppsListener:
suspend
bestAppsListener
resume
terminate
invalidate
auditToken
valueForEntitlement:
boolValue
effectiveUserIdentifier
disableEntitlementsCheck
initWithManager:connection:
addActivityNotifier:
suspended
setSuspended:
initWithAuditToken:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
setDisableEntitlementsCheck:
_disableEntitlementsCheck
_bestAppsListener
T@"NSXPCListener",&,V_bestAppsListener
TB,V_disableEntitlementsCheck
init
setProviderRequests:
setLocked:
providerRequests
allKeys
objectForKeyedSubscript:
locked
setObject:forKeyedSubscript:
UUID
_provideItemAtURL:toReaderWithID:completionHandler:
_provideItemAtURL:completionHandler:
_providedItemsURL
_providedItemsOperationQueue
_cancelProvidingItemAtURL:toReaderWithID:
_physicalURLForURL:
_getPhysicalURLForURL:completionHandler:
_writerWithID:didFinishWritingForURL:
_providedItemAtURL:didGainPresenterWithID:
_providedItemAtURL:didLosePresenterWithID:
_providedItemAtURL:withPresenterWithID:didMoveToURL:
_movingItemAtURL:requiresProvidingWithDestinationURL:completionHandler:
_fileReactorID
T@"NSURL",R,C
T@"NSOperationQueue",R
initWithURL:
unlockWithError:
_locked
_providerRequests
T@"NSMutableDictionary",&,V_providerRequests
TB,V_locked
T@"NSURL",R,C,V_providedItemsURL
T@"NSOperationQueue",R,V_providedItemsOperationQueue
init:queue:interval:block:
setup:interval:
setUserActivityNotificationRef:
userActivityNotificationRef
block
name
dealloc
queue
firstTime
setActive:
cStringUsingEncoding:
interval
enabled
startTime
timeIntervalSinceNow
setFirstTime:
date
idleTracker:queue:interval:block:
setEnabled:
setInterval:
setBlock:
setQueue:
setStartTime:
_active
_enabled
_firstTime
_interval
_name
_block
_queue
_userActivityNotificationRef
_startTime
TB,V_active
T@?,C,V_block
T@"NSObject<OS_dispatch_queue>",&,V_queue
TQ,V_userActivityNotificationRef
T@"NSDate",&,V_startTime
TB,V_firstTime
T@"NSString",R,V_name
TB,V_enabled
Td,V_interval
initWithUUID:type:options:
setActivityType:
setTitle:
setEligibleForHandoff:
dataWithLength:
mutableBytes
setPayload:identifier:
initWithUserActivityInfo:
setType:
payloadForIdentifier:
initWithPayloadSize:
wasContinuedBlock
_wasContinuedBlock
T@?,C,V_wasContinuedBlock
controller
firstObject
receivedItems
array
simulator
peeredDevice
initWithUserActivityInfo:peerDevice:simulator:
pairedClientPort
activitiesShouldCrossover
webpageURL
setWebpageURL:
dateWithTimeIntervalSinceNow:
setWhen:
defaultWorkspace
teamIdentifier
applicationForUserActivityType:
bundleIdentifier
setBundleIdentifier:
arrayWithObject:
scheduleBestAppDetermination
receiving
logString
appendFormat:
initWithSimulator:
doSetReceivedItems:
fetchAdvertisedItems:
_simulator
_receivedItems
T@"NSArray",R,C,V_receivedItems
T@"UASimulator",R,&,V_simulator
initWithBytes:length:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
decodeObjectForKey:
finishDecoding
absoluteToNSec:
advertising
advertisedItem
advertisableItems
setAdvertisedItem:
advertisingItems
setAdvertisableItems:
setItem:
_advertisableItems
_advertisedItem
T@"UAUserActivityInfo",&,V_advertisedItem
setUuid:
suggestedActionType
setSuggestedActionType:
isFromPairedDevice
setFromPairedDevice:
isBrowserFallback
setBrowserFallback:
payloadSize
setPayloadSize:
transferSpeed
setTransferSpeed:
transferDuration
setTransferDuration:
error
setError:
isCancelled
setCancelled:
interactionType
setInteractionType:
webToNative
setWebToNative:
supportsContinuityStreams
setSupportsContinuityStreams:
remoteDeviceType
setRemoteDeviceType:
scheduledForSubmission
setScheduledForSubmission:
payloadRequested
setPayloadRequested:
_fromPairedDevice
_browserFallback
_cancelled
_webToNative
_supportsContinuityStreams
_scheduledForSubmission
_payloadRequested
_uuid
_bundleIdentifier
_activityType
_suggestedActionType
_payloadSize
_transferSpeed
_transferDuration
_error
_interactionType
_remoteDeviceType
T@"NSUUID",C,V_uuid
T@"NSString",C,V_bundleIdentifier
T@"NSString",C,V_activityType
TQ,V_suggestedActionType
fromPairedDevice
TB,GisFromPairedDevice,V_fromPairedDevice
browserFallback
TB,GisBrowserFallback,V_browserFallback
TQ,V_payloadSize
Td,V_transferSpeed
Td,V_transferDuration
T@"NSError",C,V_error
cancelled
TB,GisCancelled,V_cancelled
TQ,V_interactionType
TB,V_webToNative
TB,V_supportsContinuityStreams
T@"NSString",C,V_remoteDeviceType
TB,V_scheduledForSubmission
TB,V_payloadRequested
itemUUID
hardSupressUntil
supressUntil
lastInterestingTime
setItemUUID:
setHardSupressUntil:
setSupressUntil:
setLastInterestingTime:
_itemUUID
_hardSupressUntil
_supressUntil
_lastInterestingTime
T@"NSUUID",C,V_itemUUID
T@"NSDate",C,V_hardSupressUntil
T@"NSDate",C,V_supressUntil
T@"NSDate",C,V_lastInterestingTime
initWithBytes:length:encoding:
setConnection:
dictionary
setSupressedUntil:
update
dispatchScheduler:frequency:queue:block:
setScheduler:
setExportedInterface:
setRemoteObjectInterface:
setExportedObject:
removeActivityNotifier:
connection
setInvalidationHandler:
setInterruptionHandler:
triggerUserIdleDetermination
possibleItems
allValues
setWithArray:
setPossibleItems:
bestCornerItemsFromItems:
notifyBestAppsChanged:atTime:
cornerActionItems
cornerActionItemTimeout
supressedUntil
objectForKey:
when
type
activityReceivingAllowed
dynamicActivityType
sortUsingComparator:
subarrayWithRange:
wantsBestAppChangedNotifications
lastItemUUIDs
lastItemWhens
objectAtIndex:
remoteObjectProxy
arrayWithCapacity:
setObject:atIndexedSubscript:
peerDevice
deviceType
setPeerDeviceType:
setLastItemUUIDs:
setLastItemWhens:
notifyBestAppsChanged:when:confidence:
setLastItemStr:
sharedManager
wasContinuedInfo
submitUserActivityWasSuggestedInfo:
removeObjectForKey:
scheduler
scheduleAt:
lastItemStr
nextTime
runCount
fetchMoreAppSuggestions
userActivityInfoForUUID:
cornerActionItemSupressionInterval
bestAppSuggestionSupressionIntervalForUnchangingItem
setObject:forKey:
scheduleNext:
cornerActionItemForUUID:
setWasContinuedInfo:
submitUserActivityWasContinuedInfo:
caseInsensitiveCompare:
initWithURL:resolvingAgainstBaseURL:
queryItems
value
defaultCenter
postNotificationName:object:userInfo:
setWantsBestAppChangedNotifications:
doConnected
doStartBestAppSuggestion:
doDetermineBestAppSuggestionWithCompletionHandler:
doDetermineBestAppSuggestions:completionHandler:
doRemoveBestAppSuggestion:options:
doRegisterForBestAppChangeNotification
doUnregisterForBestAppChangeNotification
doQueueFetchOfPayloadForBestAppSuggestion:completionHandler:
doLaunchFollowUp:interactionType:cancelled:
fetchAllNearbyAppSuggestions:
requiresBoosted
_wantsBestAppChangedNotifications
_connection
_supressedUntil
_scheduler
_possibleItems
_lastItemUUIDs
_lastItemWhens
_lastItemStr
T@"NSXPCConnection",&,V_connection
T@"NSMutableDictionary",&,V_supressedUntil
TB,V_wantsBestAppChangedNotifications
T@"UADispatchScheduler",&,V_scheduler
T@"NSMutableDictionary",&,V_possibleItems
T@"NSArray",C,V_lastItemUUIDs
T@"NSArray",C,V_lastItemWhens
T@"NSString",C,V_lastItemStr
standardUserDefaults
stringWithCString:encoding:
doubleValue
removeObjectAtIndex:
debugManager
setDisableAdminEntitlmentChecking:
setSupportNetworkPeers:
initWithDelegate:
setPairedScanner:
setPairedAdvertiser:
addSFActivityAdvertiser:
addSFActivityScanner:
addAdvertiser:
addReceiver:
addClient:
addHandler:
setPasteboardController:
pasteboardController
setPingController:
enableTransactions
currentRunLoop
createSharedDataDirectory
setTmpArchiveWriteFiles:
setLockTokens:
setProviders:
stringByAppendingPathComponent:
defaultManager
sharedDataPath
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileExistsAtPath:
createFileForUUID:inSubFolder:
directoryExistsAtPath:
createFolderAtPath:
createFileAtPath:contents:attributes:
fileExistsAtPath:isDirectory:
currentLocalBlobPath
stringForKey:
setCurrentLocalBlobPath:
removeItemAtPath:error:
createFileForUUID:
fileHandleForWritingAtPath:
fileHandleForReadingAtPath:
currentRemoteBlobPath
setCurrentRemoteBlobPath:
sharedInstance
fileURLWithPath:isDirectory:
URLByAppendingPathComponent:
path
subDirForItem:
URLWithString:
fileURLForArchiveWithUUID:
tmpArchiveWriteFiles
writeData:error:
synchronizeFile
closeFile
providers
_addFileProvider:completionHandler:
_removeFileProvider:
releaseLockForItem:withError:
errorWithDomain:code:userInfo:
removeAllObjects
initWithFilePresenter:
fileURLWithPath:
lockTokens
removeItemAtURL:error:
releaseLockForItem:
coordinateWritingItemAtURL:options:error:byAccessor:
contentsOfDirectoryAtPath:error:
URLWithString:relativeToURL:
initWithUUIDString:
fileURLForCloneItems
fileExistsForUUID:inSubFolder:
createFileForLocalPasteboardBlob
localPasteboardBlobForReading
createFileForRemotePasteboardBlob
remotePasteboardBlobForReading
fileURLForPasteboardItem:
readHandleForArchiveWithUUID:
createTmpArchiveFileWithUUID:
writeArchiveData:forItem:
finishWritingArchiveForUUID:
obtainLockForItem:completion:
cancelAllLocks
cleanupForItem:
cleanupArchiveDir
cleanupItemsDir
cleanupCloneDir
_currentLocalBlobPath
_currentRemoteBlobPath
_tmpArchiveWriteFiles
_lockTokens
_providers
T@"NSString",&,V_currentLocalBlobPath
T@"NSString",&,V_currentRemoteBlobPath
T@"NSMutableDictionary",&,V_tmpArchiveWriteFiles
T@"NSMutableDictionary",&,V_lockTokens
T@"NSMutableDictionary",&,V_providers
submitWasSuggestedInfo
submit
_submitted
hasPrefix:
setUniqueID:
setModelIdentifier:
setProductName:
setProductVersion:
setProductBuildVersion:
setName:
setDeviceColor:
setEnclosureColor:
uniqueID
modelIdentifier
productName
productVersion
productBuildVersion
deviceColor
enclosureColor
deviceTypeForModelIdentifier:
_typeWithDeviceModelCode:
typeWithIdentifier:
arrayWithObjects:count:
conformsToType:
identifier
enumerateObjectsUsingBlock:
isEqualToString:
peerForSelf
testPeerForModel:
T@"NSString",R,&
inputStreamWithFileAtPath:
open
propertyListWithStream:options:format:error:
close
removeReceiver:
scanningForTypes
setScanningForTypes:
TB,R,D
T@"NSSet",C,VscanningForTypes
terminated
priority
_suspended
_terminated
_manager
_priority
T@"NSUUID",R,&,V_uuid
T@"UACornerActionManager",R,&,V_manager
T@"NSString",C,V_name
Tq,R,V_priority
TB,R
TB,R,V_terminated
initWithUUID:type:options:originatingClient:
originatingClient
setOriginatingClient:
_originatingClient
T@"UAUserActivityClientProcess",W,V_originatingClient
reportedActivityType
firstPartyActivityTypeOrUnknown:
initWithInputStream:outputStream:delegate:
setStreamHandler:
setArchivePackagers:
setArchiveQueue:
setRequestedArchives:
setUuidItemMap:
setObjects:
streamHandler
start
setState:
pasteboardStreamWatchdogTimeout
receivedPasteboardInfo:withError:
completedReceivingPasteboardWithError:
sendCompletedWithError:
stop
initWithName:timeout:block:
setWatchdog:
objects
receivedInfo
watchdog
poke
handlePasteboardInfoRequest:
handlePasteboardInfoResponse:
handlePasteboardDataRequest:
handlePasteboardDataResponse:
handlePasteboardFileRequest:
handlePasteboardFileResponse:
handlePasteboardAuxInfoReceived:
handleHeartbeat:
state
filePackager
deliverNextPacket
archiveQueue
archivePackagers
numberWithInteger:
packMessage:
writeMessage:tag:
unpackMessage:
integerValue
initWithDomain:code:userInfo:
sendPasteboardInfoResponse
sendPasteboardDataResponse
containsObject:
sendingInfo
pbinfo
types
requestedArchives
setReceivedInfo:
progress
setCompletedUnitCount:
sendPasteboardDataRequest
processPasteboardInfo:
sendStopWithError:
bytesReceived
setBytesReceived:
calculateTimeRemaining
receivingDataFile
returnInfoEarly
remoteHasFiles
sendFileArchiveRequest
intValue
floatValue
initWithDestinationURL:forArchiveUUID:
storeObject:
uuidItemMap
extractArchiveWithCompletion:
setExpectedLength:
setTotalUnitCount:
archivedDataWithRootObject:requiringSecureCoding:error:
sendingDataFile
dataSize
initWithFile:fileSize:packetSize:options:receiver:
setFilePackager:
setTag:
totalSendSize
dataUsingEncoding:
setRemoteHasFiles:
setReturnInfoEarly:
setReceivingDataFile:
setProgress:
setInfoRecvHandler:
setFileRecvHandler:
setStreamStartTime:
setItemsLockedSem:
sendPasteboardInfoRequest
cancel
itemsLockedSem
infoRecvHandler
removeReceivedItems:
fileRecvHandler
totalBytesReceived
objectAtIndexedSubscript:
numberWithInt:
setUserInfoObject:forKey:
streamStartTime
numberWithDouble:
expectedLength
pasteboardUITimeRemainingDelay
setSendingInfo:
dataFile
setSendingDataFile:
setTotalSendSize:
setDataFile:
setSendErrorHandler:
setHeartBeatTrigger:
heartBeatTrigger
sendHeartbeat
fetchDataForType:
URLWithDataRepresentation:relativeToURL:
propertyListWithData:options:format:error:
initWithURL:typeUUID:
sendTotalSendSize
archiveURLWithCompletion:
sendErrorHandler
totalBytesSent
totalPacketCount
offset
unsignedLongLongValue
seekToFileOffset:
size
readDataOfLength:
streams:didReadMessage:withTag:
streams:didWriteMessageWithTag:
streamsDidClose:withError:
streams:didReadRawData:
streamsDidWriteRawDataBuffer:
packager:gotData:forPacket:
filePackagerError:
receivePasteboardToFile:withProgress:infoReceivedHandler:completionHandler:returnInfoEarly:
cancelReceive
sendPasteboard:withCompletion:
initWithInputStream:outputStream:
recvStop:
auxStateInfo
setAuxStateInfo:
_remoteHasFiles
_returnInfoEarly
_streamHandler
_state
_auxStateInfo
_objects
_watchdog
_heartBeatTrigger
_infoRecvHandler
_fileRecvHandler
_receivedInfo
_receivingDataFile
_progress
_bytesReceived
_itemsLockedSem
_uuidItemMap
_streamStartTime
_expectedLength
_sendErrorHandler
_sendingInfo
_sendingDataFile
_filePackager
_archivePackagers
_archiveQueue
_requestedArchives
_totalSendSize
T@"UAStreamHandler",&,V_streamHandler
Tq,N,V_state
T@"NSDictionary",&,V_auxStateInfo
T@"NSMutableArray",&,V_objects
T@"UADispatchWatchdog",&,V_watchdog
T@"NSObject<OS_dispatch_source>",&,V_heartBeatTrigger
T@?,C,V_infoRecvHandler
T@?,C,V_fileRecvHandler
T@"UASharedPasteboardInfoWrapper",&,V_receivedInfo
T@"NSFileHandle",&,V_receivingDataFile
T@"NSProgress",&,V_progress
Tq,V_bytesReceived
TB,V_remoteHasFiles
TB,V_returnInfoEarly
T@"NSObject<OS_dispatch_semaphore>",&,V_itemsLockedSem
T@"NSMutableDictionary",&,V_uuidItemMap
TQ,V_streamStartTime
Tq,V_expectedLength
T@?,C,V_sendErrorHandler
T@"UASharedPasteboardInfoWrapper",&,V_sendingInfo
T@"NSFileHandle",&,V_sendingDataFile
T@"UCFilePackager",&,V_filePackager
T@"NSMutableDictionary",&,V_archivePackagers
T@"NSMutableArray",&,V_archiveQueue
T@"NSMutableArray",&,V_requestedArchives
Tq,V_totalSendSize
setDebugType:
debugType
initWithType:manager:
advertisingBytes
_debugType
TQ,V_debugType
setTimeout:
setHandler:
setHasFired:
source
timeout
_triggerWatchdog
setSource:
hasFired
handler
_hasFired
_handler
_timeout
_source
T@?,C,V_handler
Td,V_timeout
T@"NSObject<OS_dispatch_source>",&,V_source
TB,V_hasFired
reason
numberWithUnsignedInteger:
setReason:
_reason
TQ,V_reason
eligibleForHandoff
updateItem:
setWithObject:
pairedDevices
scheduleUpdatingAdvertisableItems:
item
addItem:
removeItem:
eligibleAdvertiseableItemsInOrder
_item
T@"UAUserActivityInfo",&,V_item
payloadXferTime
payloadXferSpeed
streamOpenTime
underlyingErrorCode
numberOfItems
isFileCopy
isAsyncTransfer
setPayloadXferTime:
setPayloadXferSpeed:
setStreamOpenTime:
setUnderlyingErrorCode:
setNumberOfItems:
setIsFileCopy:
setIsAsyncTransfer:
_isFileCopy
_isAsyncTransfer
_payloadXferTime
_payloadXferSpeed
_streamOpenTime
_underlyingErrorCode
_numberOfItems
TQ,N,V_payloadSize
TQ,N,V_payloadXferTime
TQ,N,V_payloadXferSpeed
TQ,N,V_streamOpenTime
TB,N,V_cancelled
Tq,N,V_underlyingErrorCode
Tq,N,V_numberOfItems
TB,N,V_isFileCopy
TB,N,V_isAsyncTransfer
T@"NSString",&,N,V_remoteDeviceType
setMainDispatchQ:
mainDispatchQ
_determineWhenSystemGoesIdleThread
_determineItemToAdvertiseForHandoffThread
_checkIfBestApplicationChangedThread
userIdleInterval
updateUserActiveState:
setUserIdleTracker:
advertisers
clients
setByAddingObjectsFromSet:
userActivityClients
nextUpdateAdvertisedItemsScheduler
advertiseableItems
eligibleToAdvertise
uaAdvertisableItemsInOrder:
allObjects
sortedArrayUsingComparator:
addObjectsFromArray:
recentEligibleItemsInOrder:
screenDimmed
eligibleToAlwaysAdvertise
options
intervalToAskClientWithUnsynchronizedDocumentsToUpdate
lastTimePayloadWasRequestedForAdvertisedItem
setLastTimePayloadWasRequestedForAdvertisedItem:
requestPayloadWithCompletionHandlerEvenIfClean:withCompletionHandler:
itemsBeingAdvertised
advertisingSuspended
triggerUserIdleDetermination:
activityAdvertisingAllowed
nextUserIdleDeterminationScheduler
alwaysPick
userActive
weAreAdvertisingAtLeastOneItem
setUserInactivePowerAssertion:
userInactivePowerAssertion
setScreenDimmedPowerAssertion:
screenDimmedPowerAssertion
deviceUILocked
deviceUILockedPowerAssertion
okToSuspendAdvertising
systemHasSuspendedAdvertisements
setSystemHasSuspendedAdvertisements:
setSystemHasSuspendedScanning:
notifiers
receivers
debugCornerItem
anyObject
haveBestAppChangeNotificationClients
scheduleBestAppDetermination:
nextScheduleBestAppDeterminationScheduler
multiHandoffEnabled
setShouldAdvertiseAutoPullActivityList:
bluetoothStatusCallbackIdentifier
bluetoothStatus
unregisterCallback:
setBluetoothStatusCallbackIdentifier:
setBluetoothStatus:
triggerAll
registerCallback:
handlers
systemPreferenceChangedToken
removeObserver:name:object:
uiLockStatusToken
setUiLockStatusToken:
suspendListeningForBluetooth
userIdleTracker
updateUIDeviceLockedState:
backlightLevelToken
isBacklightOn
updateScreenDimStateState:
resumeListeningForBluetooth
reset
userIdleRemovalDelay
initWithName:delta:activityUUID:queue:runAtCompletion:
appendRecentAction:
screenDimDelayBeforeRemovingAdvertisements
screenDimDelayBeforeRemovingPasteboardAdvertisement
deviceLockDelayBeforeRemovingHandoffAdvertisement
deviceLockDelayBeforeRemovingPasteboardAdvertisement
setDeviceUILockedPowerAssertion:
weAreAdvertisingAnItem
uaAdvertisableItemsInOrder
dictionaryForAdvertisableItem:
initWithSuiteName:
timeIntervalSinceDate:
currentPerfTime
nextRunTimeString
compare:
insertObject:atIndex:
pinnedUserActivityInfoItem
perfSummaryString
actionStrs:maximumInternal:clear:
localPBStatus
receivingSuspended
unionSet:
cornerActionManager
sharedActivityManagerServer
updateScreenSaverActive:
shouldItemBeAdvertised:
activeAdvertiseableItemsUUIDs
userActivityItemsChanged
isBluetoothEnabled
setAdvertisingSuspended:
systemHasSuspendedScanning
bestCornerItem
bestCornerItem:
setDebugCornerItem:
checkIfBestCornerItemChanged:
processWasRemoved
setUserActive:
dictionaryForCornerActionItem:
debuggingInfo
dynamicUserActivitiesString
shortStatusString
removeAdvertiser:
removeClient:
removeHandler:
allHandlers
setBacklightOn:
activeDevicesIdentifiers
userDefaults
isBatterySaverModeEnabled
setPinnedUserActivityInfoItem:
setReceivingSuspended:
pingController
setDeviceUILocked:
setScreenDimmed:
setBacklightLevelToken:
holdPowerAssertionUntil
setHoldPowerAssertionUntil:
holdPowerAssertionSourceTimer
setHoldPowerAssertionSourceTimer:
holdPowerAssertion
setHoldPowerAssertion:
systemIsIdle
setSystemIsIdle:
setSystemPreferenceChangedToken:
pingMode
setPingMode:
avgPingTime
setAvgPingTime:
pingStart
setPingStart:
pongSem
setPongSem:
pongTimer
setPongTimer:
_advertisers
_receivers
_clients
_notifiers
_handlers
_creationTime
_itemsBeingAdvertised
_managedSettingsChangedNotificationToken
_helpersDispatchGroup
_systemIdlePreviousTimeSinceLastUserActivity
_advertisingSuspended
_lastNumAdvertiseableProcesses
_debugCornerItem
_backlightOn
_systemHasSuspendedAdvertisements
_systemHasSuspendedScanning
_userActive
_batterySaverModeEnabled
_receivingSuspended
_deviceUILocked
_screenDimmed
_systemIsIdle
_pingMode
_backlightLevelToken
_holdPowerAssertion
_systemPreferenceChangedToken
_uiLockStatusToken
_activeDevicesIdentifiers
_userDefaults
_debugManager
_pinnedUserActivityInfoItem
_pasteboardController
_pingController
_mainDispatchQ
_nextUserIdleDeterminationScheduler
_nextUpdateAdvertisedItemsScheduler
_nextScheduleBestAppDeterminationScheduler
_deviceUILockedPowerAssertion
_screenDimmedPowerAssertion
_holdPowerAssertionUntil
_holdPowerAssertionSourceTimer
_userIdleTracker
_userInactivePowerAssertion
_lastTimePayloadWasRequestedForAdvertisedItem
_avgPingTime
_pingStart
_pongSem
_pongTimer
_bluetoothStatus
_bluetoothStatusCallbackIdentifier
T@"NSArray",R,C,V_itemsBeingAdvertised
T@"UADispatchScheduler",R,&,V_nextUserIdleDeterminationScheduler
T@"UADispatchScheduler",R,&,V_nextUpdateAdvertisedItemsScheduler
T@"UADispatchScheduler",R,&,V_nextScheduleBestAppDeterminationScheduler
TB,V_systemHasSuspendedAdvertisements
TB,V_systemHasSuspendedScanning
TB,V_deviceUILocked
T@"UATimedPowerAssertions",&,V_deviceUILockedPowerAssertion
TB,V_screenDimmed
T@"UATimedPowerAssertions",&,V_screenDimmedPowerAssertion
Ti,V_backlightLevelToken
T@"NSDate",&,V_holdPowerAssertionUntil
T@"NSObject<OS_dispatch_source>",&,V_holdPowerAssertionSourceTimer
TI,V_holdPowerAssertion
T@"PowerManagerIdleTracker",&,V_userIdleTracker
TB,V_userActive
T@"UATimedPowerAssertions",&,V_userInactivePowerAssertion
TB,V_systemIsIdle
T@"NSDate",C,V_lastTimePayloadWasRequestedForAdvertisedItem
Ti,V_systemPreferenceChangedToken
Ti,V_uiLockStatusToken
TB,V_pingMode
Td,V_avgPingTime
T@"NSDate",&,V_pingStart
T@"NSObject<OS_dispatch_semaphore>",&,V_pongSem
T@"NSTimer",&,V_pongTimer
T@"UABluetoothStatus",&,V_bluetoothStatus
T@"NSObject",&,V_bluetoothStatusCallbackIdentifier
T@"NSUUID",R,C,V_uuid
T@"UAUserActivityInfo",&,N
T@"NSSet",R,V_activeDevicesIdentifiers
T@"NSUserDefaults",R,&,V_userDefaults
batterySaverModeEnabled
TB,R,GisBatterySaverModeEnabled,V_batterySaverModeEnabled
T@"ActivityManagerDebuggingManager",R,&,V_debugManager
T@"UAUserActivityInfo",&,V_pinnedUserActivityInfoItem
backlightOn
TB,GisBacklightOn,V_backlightOn
T@"NSSet",R,C
TB,V_receivingSuspended
T@"UASharedPasteboardClientController",&,V_pasteboardController
T@"UAPingController",&,V_pingController
T@"NSObject<OS_dispatch_queue>",&,V_mainDispatchQ
intervalToDelaySuspensionOfAdvertisingForItem:
enumerateLinesUsingBlock:
initWithController:
notifier
client
_client
_notifier
T@"UAPingClient",R,&,V_client
T@"UAPingNotifier",R,&,V_notifier
setInfo:
info
code
stringForInteraction
initWithAnalyticsInfo:
_info
T@"UAUserActivityAnalyticsInfo",&,V_info
setFrequency:
frequency
doIt
init:frequency:queue:block:
_doIt
executingGroup
updateFrequency:
waitUntilComplete
_frequency
_runCount
_nextTime
_executingGroup
T@"NSObject<OS_dispatch_source>",R,&,V_source
T@"NSObject<OS_dispatch_queue>",R,&,V_queue
T@"NSObject<OS_dispatch_group>",R,&,V_executingGroup
Td,V_frequency
T@?,R,&,V_block
TQ,R,V_runCount
TQ,R,V_nextTime
notifiedItems
setNotifiedItems:
T@"NSSet",C
T@"NSSet",C,D
setDataRequester:
setDataRequested:
setRespQueue:
stateAsString
respQueue
setPbInfo:
pbInfo
updateState:
dataRequester
submitRemotePasteboardBecameUnavailable:
submitRemotePasteboardTypeInfoRequested:
protocolVersion
setStreamProtocolVersion:
streamProtocolVersion
extraDataType
extraData
requestRemotePasteboardInfo:
requestRemoteTypeInfo:
requestStreamEndpointDataV2:
requestStreamEndpointData:
initWithRequester:
requestRemotePasteboardData:
returnEarly
setReturnEarly:
dataRequested
_returnEarly
_dataRequested
_dataRequester
_pbInfo
_streamProtocolVersion
_respQueue
TB,V_dataRequested
T@"NSUUID",&,V_uuid
T@"NSObject<OS_dispatch_queue>",&,V_respQueue
T@"NSError",&,V_error
T@"UASharedPasteboardDataRequester",&,V_dataRequester
T@"UASharedPasteboardInfo",&,V_pbInfo
TQ,V_state
TB,V_returnEarly
Tq,V_streamProtocolVersion
fileSystemRepresentation
dataWithBytes:length:
setClientq:
setXpclistener:
xpclistener
setAuxlistener:
auxlistener
setControlConnections:
setControlListener:
controlListener
initWithMachServiceName:options:
setClientNotificationConnection:
remotePasteboardAvailable:
pasteboardWillBeFetched:
interfaceWithProtocol:
clientNotificationConnection
setCoders:
setRemoteAvailable:
bundleWithPath:
setUaBundle:
uaBundle
load
clientConnection
localPasteboardRefection
setLocalPasteboardReflection:
setRemotePasteboardAvalibility:withDataRequester:
clearLocalPasteboardInformation
currentPasteboardActivityInfo
advertiseTypes
currentLocalTypes
currentLocalGeneration
setGeneration:
setPasteboardTypes:
isScreenWatcherPresent
setRemoteGeneration:
fetchProgress
remoteGeneration
remoteObjectProxyWithErrorHandler:
peer
clipboardSharingEnabled
setCurrentLocalTypes:
setCurrentLocalGeneration:
setHasFetchedLocalData:
localReflection
setCurrentLocalPasteboard:
setCurrentLocalPasteboardSize:
writeLocalPasteboardToFile:itemDir:extension:withCompletion:
setAdvertiseTypes:
localTimeout
localPasteboardAvalibilityTimeout
clearLocalPasteboardTypes:
timerWithTimeInterval:target:selector:userInfo:repeats:
setLocalTimeout:
mainRunLoop
addTimer:forMode:
submitLocalPasteboardInfoWasCleared
pasteAdvertiser
setPasteAdvertiser:
localInfo
setPboardInfoToSend:
localPasteboardAvalibilityClearedTimeout
removeLocalPasteboardFromAdvertisers:
currentLocalPasteboard
currentLocalPasteboardSize
setDataSize:
setPasteFetchStartTime:
setPasteInfo:
pasteInfo
pasteboardShowUIDelay
showProgressUI:
setShowUITimer:
showUITimer
currentProgress
initWithParent:userInfo:
setFetchProgress:
setKind:
setCancellable:
coders
hideProgressUI:
setCancellationHandler:
_publish
pasteFetchStartTime
receivePasteboardStreamData:version:withCompletion:
initWithServiceType:
setStreamOpenStartTime:
streamStatus
streamOpenStartTime
longLongValue
lastPathComponent
setSharedDataPath:
setSandboxExtensions:
streamXferStartTime
userInfo
submitRemotePasteboardWasRequested:
setStreamXferStartTime:
getContinuationStreamsWithEndpointData:completionHandler:
setLocalReflection:
setPbinfo:
setProtocolVersion:
setLocalSendStartTime:
setLocalInfo:
pboardInfoToSend
setExtraDataType:
readDataToEndOfFile
setExtraData:
localSendStartTime
submitDidSendLocalPasteboard:
setSupportsStreams:
serviceEndpointData
setSendingCoderVersion:
hasFetchedLocalData
pasteboardEmbeddedPayloadSizeLimitInBytes
pboardFetchSem
setPboardFetchSem:
clientq
sendingCoderVersion
setClientConnection:
setAuxConnection:
controlConnections
setScreenWatcherPresent:
isUIVisible
setIsUIVisible:
pasteboardUIMinimumDurration
setDontHideUIBefore:
localizedStringForKey:value:table:
notificationRef
dontHideUIBefore
pasteboardHideUIDelay
setNotificationRef:
_unpublish
fetchRemotePasteboardStatus:
fetchRemoteDeviceName:
localPasteboardTypesDidChange:forGeneration:
fetchRemotePasteboardTypesForProcess:withCompletion:
fetchRemotePasteboardForProcess:withCompletion:
setReturnPasteboardDataEarlyWithCompletion:
advertiser:didReceiveInputStream:outputStream:
startConnection:
getLocalPasteboardInfoData:
startServiceForPasteVersion:handler:
auxConnection
remoteAvailable
outStream
setOutStream:
inStream
setInStream:
osxUIConnection
setOsxUIConnection:
_screenWatcherPresent
_hasFetchedLocalData
_advertiseTypes
_remoteAvailable
_isUIVisible
_clientq
_xpclistener
_auxlistener
_controlListener
_auxConnection
_clientConnection
_clientNotificationConnection
_controlConnections
_currentLocalTypes
_currentLocalGeneration
_localTimeout
_currentLocalPasteboard
_currentLocalPasteboardSize
_pasteAdvertiser
_remoteGeneration
_pboardFetchSem
_pboardInfoToSend
_outStream
_inStream
_coders
_sendingCoderVersion
_fetchProgress
_showUITimer
_dontHideUIBefore
_osxUIConnection
_notificationRef
_pasteFetchStartTime
_localSendStartTime
_streamOpenStartTime
_streamXferStartTime
_pasteInfo
_localInfo
_uaBundle
T@"NSObject<OS_dispatch_queue>",&,V_clientq
T@"NSXPCListener",&,V_xpclistener
T@"NSXPCListener",&,V_auxlistener
T@"NSXPCListener",&,V_controlListener
T@"NSXPCConnection",&,V_auxConnection
T@"NSXPCConnection",&,V_clientConnection
T@"NSXPCConnection",&,V_clientNotificationConnection
T@"NSMutableSet",&,V_controlConnections
T@"UASharedPasteboardInfo",&,V_currentLocalTypes
TQ,V_currentLocalGeneration
T@"NSTimer",&,V_localTimeout
TB,V_hasFetchedLocalData
T@"NSArray",&,V_currentLocalPasteboard
Tq,V_currentLocalPasteboardSize
TB,V_advertiseTypes
TB,V_remoteAvailable
T@"SFCompanionAdvertiser",&,V_pasteAdvertiser
T@"UCRemotePasteboardGeneration",&,V_remoteGeneration
T@"NSObject<OS_dispatch_semaphore>",&,V_pboardFetchSem
T@"UASharedPasteboardInfoWrapper",&,V_pboardInfoToSend
T@"UASharedPasteboardOutputStreamManager",&,V_outStream
T@"UASharedPasteboardInputStreamManager",&,V_inStream
T@"NSMutableSet<UCStreamCoder>",&,V_coders
Tq,V_sendingCoderVersion
T@"NSProgress",&,V_fetchProgress
T@"NSTimer",&,V_showUITimer
T@"NSDate",&,V_dontHideUIBefore
TB,V_isUIVisible
T@"NSXPCConnection",&,V_osxUIConnection
T^{__CFUserNotification=},V_notificationRef
TQ,V_pasteFetchStartTime
TQ,V_localSendStartTime
TQ,V_streamOpenStartTime
TQ,V_streamXferStartTime
T@"UARemotePasteboardWasRequestedEvent",&,V_pasteInfo
T@"UARemotePasteboardDidSendLocalEvent",&,V_localInfo
T@"NSBundle",&,V_uaBundle
screenWatcherPresent
TB,GisScreenWatcherPresent,V_screenWatcherPresent
scheme
compare:options:
hasSuffix:
setInputState:
setOutputMode:
initWithCapacity:
setMessageQueue:
setInData:
setOutputStreamData:
setByteIndex:
setBytesRead:
setTotalBytesSent:
setTotalBytesReceived:
setInMessage:
setOutMessage:
setStreamError:
setShouldStop:
messageQueue
outMessage
scheduleInRunLoop:forMode:
initWithName:delta:queue:
setAssertionForRead:
setAssertionForWrite:
assertionForRead
releaseAssertion
assertionForWrite
tryStop
shouldStop
outputStreamData
_stop
delegate
streamError
outputMode
appendData:
hasSpaceAvailable
tryWriteRawData
shouldTryWrite
tryWriteMessage
handleOpenCompleted
handleBytesAvailable
handleSpaceAvailable
setShouldTryWrite:
inputState
bytesRead
inMessageLength
read:maxLength:
inData
dataHasMessage:
processHeader
handleMessageRead
setLength:
updateTimeUntilAssertionRelease:
setInMessageTag:
setInMessageLength:
inMessage
inMessageTag
write:maxLength:
trimFirstBytes:ofData:
setOutMessageTag:
byteIndex
outMessageTag
subdataWithRange:
dataWithData:
stream:handleEvent:
queueCount
writeRawData:
_shouldStop
_shouldTryWrite
_inMessageLength
_streamError
_delegate
_outputStreamData
_byteIndex
_outMessageTag
_outMessage
_messageQueue
_bytesRead
_inMessageTag
_inMessage
_inData
_inputState
_outputMode
_totalBytesSent
_totalBytesReceived
_assertionForRead
_assertionForWrite
T@"NSInputStream",&,V_inStream
T@"NSOutputStream",&,V_outStream
T@"NSError",&,V_streamError
T@"<UAStreamHandlerDelegate>",W,V_delegate
T@"NSMutableData",&,V_outputStreamData
Tq,V_byteIndex
Tq,V_outMessageTag
T@"NSMutableData",&,V_outMessage
T@"NSMutableArray",&,V_messageQueue
Tq,V_bytesRead
Tq,V_inMessageTag
TI,V_inMessageLength
T@"NSData",&,V_inMessage
T@"NSMutableData",&,V_inData
TQ,V_inputState
TQ,V_outputMode
Tq,V_totalBytesSent
Tq,V_totalBytesReceived
TB,V_shouldStop
TB,V_shouldTryWrite
T@"UATimedPowerAssertions",&,V_assertionForRead
T@"UATimedPowerAssertions",&,V_assertionForWrite
setHasBeenUsedAtLeastOnce:
hasBeenUsedAtLeastOnce
pushItem:
_items
_hasBeenUsedAtLeastOnce
_controller
TB,V_hasBeenUsedAtLeastOnce
T@"UAPingController",R,&,V_controller
setNeedToCallBlock:
timerSource
needToCallBlock
assertion
_releaseAssertion:
setTimerExpiration:
nextTimer
setNextTimer:
stringWithString:
objectEnumerator
timerExpiration
releaseAssertion:
_needToCallBlock
_assertion
_timerSource
_timerExpiration
_nextTimer
T@"NSObject<OS_dispatch_source>",R,&,V_timerSource
T@"NSDate",C,V_timerExpiration
TI,R,V_assertion
T@"NSObject<OS_dispatch_queue>",R,&,V_mainDispatchQ
TQ,V_nextTimer
TB,V_needToCallBlock
T@"NSString",R,C,V_name
strongToWeakObjectsMapTable
getBytes:length:
setDestURL:
setArchiveReadHandle:
destURL
archiveReadHandle
_destURL
_archiveReadHandle
T@"NSURL",&,V_destURL
T@"NSString",&,V_uuid
T@"NSFileHandle",&,V_archiveReadHandle
receiver
initWithManager:simulator:
sendEvent
packetData
setPacketData:
packetNumber
setPacketNumber:
_packetData
_packetNumber
T@"NSData",&,V_packetData
Tq,V_packetNumber
setFile:
setOptions:
setPacketSize:
setTotalPacketCount:
setCurrentPacketNumber:
setNextPacketNumber:
setNextPacketToDeliver:
setFetchQ:
setNextPacketReady:
setPacketPreLoadCount:
packetPreLoadCount
setQueuedPackets:
setReceiver:
checkShouldFetch
nextPacketToDeliver
nextPacketReady
queuedPackets
nextPacketNumber
fetchQ
file
packetSize
prepNextPacket
currentPacketNumber
_totalPacketCount
_tag
_receiver
_file
_options
_packetSize
_packetPreLoadCount
_queuedPackets
_nextPacketNumber
_nextPacketToDeliver
_currentPacketNumber
_fetchQ
_nextPacketReady
Tq,V_totalPacketCount
T@"<UCFilePacketReceiver>",W,V_receiver
T@"NSFileHandle",&,V_file
T@"NSDictionary",&,V_options
Tq,V_packetSize
Tq,V_packetPreLoadCount
T@"NSMutableArray",&,V_queuedPackets
Tq,V_nextPacketNumber
Tq,V_nextPacketToDeliver
Tq,V_currentPacketNumber
T@"NSObject<OS_dispatch_queue>",&,V_fetchQ
T@"NSObject<OS_dispatch_semaphore>",&,V_nextPacketReady
Tq,V_tag
setAdvertiser:
setClient:
setPairedPeer:
sharingAdvertiser
mockAdvertiser
sharingReceiver
mockScanner
pairedPeer
activityScanner:lostDeviceWithDevice:
removeSFActivityScanner:
removeSFActivityAdvertiser:
dataWithJSONObject:options:error:
initWithData:encoding:
sendResponse:
scanString:intoString:
setDevice:
setAdvertisementPayload:
setAdvertisementVersion:
isAtEnd
scanLocation
substringFromIndex:
JSONObjectWithData:options:error:
whitespaceCharacterSet
scanUpToCharactersFromSet:intoString:
scanInteger:
initWithType:string:dynamicType:teamID:webpageURL:options:isCurrent:when:
advertisementPayload
rangeOfString:
scannerWithString:
setCaseSensitive:
whitespaceAndNewlineCharacterSet
uppercaseString
scanDouble:
scanUpToString:intoString:
wasResumed
scanMockAdvertisement:
activityScanner:receivedAdvertisement:
device
null
activityAdvertiser:activityPayloadForAdvertisementPayload:command:requestedByDevice:withCompletionHandler:
processCommand:
lostDeviceWithUUID:
advertiser
netServiceWillPublish:
netServiceDidPublish:
netService:didNotPublish:
netServiceWillResolve:
netServiceDidResolveAddress:
netService:didNotResolve:
netServiceDidStop:
netService:didUpdateTXTRecordData:
netService:didAcceptConnectionWithInputStream:outputStream:
activityAdvertiser:pairedDevicesChangedNotification:
activityAdvertiser:didSendPayloadForActivityIdentifier:toDevice:error:
activityScanner:foundDeviceWithDevice:
activityScanner:pairedDevicesChanged:
doAdvertiseAdvertisementPayload:options:
processCommands:completionHandler:
activityPayloadFromDevice:forAdvertisementPayload:command:timeout:withCompletionHandler:
_pendingPayloadFetches
_pairedPeer
_advertiser
_mockAdvertiser
_mockScanner
T@"UAActivityReplayAdvertiser",&,V_advertiser
T@"UAActivityReplayReceiver",&,V_receiver
T@"UAReplayClientController",&,V_client
T@"UAMockActivityAdvertiser",R,&,V_mockAdvertiser
T@"UAMockActivityScanner",R,&,V_mockScanner
T@"NSMutableDictionary",&,V_items
T@"SFPeerDevice",&,V_pairedPeer
characterSetWithCharactersInString:
scanCharactersFromSet:intoString:
_UABundle
localizations
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
pathForResource:ofType:inDirectory:forLocalization:
initWithContentsOfFile:
localizedStringForKey:comment:
pairedScanner
receiveAdvertisement:options:fromPeer:
advertiseAdvertisementPayload:options:
fetchSFPeerDevicesWithCompletionHandler:
fetchPeerForUUID:withCompletionHandler:
fetchLoginIDWithCompletionHandler:
payloadRequestFromPeer:advertisementPayload:command:completionHandler:
_pairedScanner
_peer
T@"SFPeerDevice",R,C,V_peer
T@"UAPairedSFActivityScanner",&,V_pairedScanner
T@"<SFActivityAdvertiserDelegate>",V_delegate
initWithAdvertisementVersion:advertisementPayload:options:device:
sendFoundDevice
setSendFoundDevice:
pairedAdvertiser
scanForTypes:
_sendFoundDevice
_pairedAdvertiser
TB,V_sendFoundDevice
T@"UAPairedSFActivityAdvertiser",&,V_pairedAdvertiser
T@"<SFActivityScannerDelegate>",V_delegate
numberWithUnsignedInt:
simulatorWithController:parentSimulatorPortName:
addSimulator:
simulators
simulatorControllerForCommandPort:
setSimulatorForCommandPort:controller:
removeSimulator:
simulatorStatus
dispatchQ
setDispatchQ:
simulatorPort
setSimulatorPort:
ourPeerDevice
setOurPeerDevice:
_simulators
_simulatorPort
_dispatchQ
_ourPeerDevice
TI,V_simulatorPort
T@"SFPeerDevice",&,V_ourPeerDevice
T@"NSObject<OS_dispatch_queue>",&,V_dispatchQ
T@"NSSet",R,&
simulatorWithController:pairedPort:childSimPid:childVersion:
setPeeredDevice:
commandPort
initRequiringSecureCoding:
encodeObject:forKey:
encodedData
TQ,V_payloadXferTime
Tq,V_errorCode
cornerActionItemDefaults
registerDefaults:
boolForKey:
integerForKey:
doubleForKey:
boolValueForKey:default:
activityContinuationAllowed
timeIntervalForKey:default:
integerValueForKey:default:
setBool:forKey:
dictionaryRepresentation
sortedArrayUsingSelector:
valueForKey:
mainBundle
setValue:forKey:
enableHandoffInPowerSaverMode
activityBTLESharingEnabled
loggingAdvertiserEnabled
minimumTimeForAnAdvertisementToLive
minimumTimeToLiveAfterRemovingAdvertisement
recentlyEligibleItemInterval
screenSaverDelayToRemovingAdvertisements
screenSaverDelayBeforeRemovingPasteboardAdvertisement
systemIdleDelayBeforeRemovingAdvertisements
maximumTimeoutAfterAdvertisingEndsThatActivityCanBeResumed
advertisedItemWhichIsWebBrowserIntervalToRememberEarlierActivities
cornerActionItemAdditionalTimeToLiveAfterValidIntervalExpires
cornerActionItemMaximumTimeForBTLEItemToLive
receivedBTLEItemTimeToLiveAfterDeviceLostIfPayloadIsQueued
activePayloadUpdateInterval
maximumTimeoutToWaitForClientProcessToUpdateActivityInformation
maximumActivityPayloadSizeInBytes
enableNetworkControlListener
enableAutomaticRendevousPairing
rendevousPairingType
networkControlListenerPort
activityPayloadWarningSizeInBytes
minimumIntervalBetweenAdvertisements
maximumAdvertisementsPerTimeInterval
maximumAdvertisementsTimeInterval
debugValidatePayloadFetchTimeInterval
debugAdditionalPayloadReceiveTimeInterval
debugValidateRetryPayloadFetchFailureInterval
debugValidateSampleResponseMinimumActivityPayloadSizeInBytes
debugValidateSampleResponseMaximumActivityPayloadSizeInBytes
debugUserActivityTimeOffset
debugForceNewPayloadEncoder
debugForceOldPayloadEncoder
dontSendActivityTitle
debugReadvertiseImmediately
debugEnablePrefetch
debugCrossoverAllActivities
debugIgnoreAppsUsedForDevelopment
enableSharingFramework
setEnableSharingFramework:
remotePasteboardAvailableTimeout
pasteboardTypeRequestTimeout
pasteboardPasteRequestTimeout
handoffPayloadRequestTimout
payloadFetchResponseDelay
shouldIgnoreBluetoothDisabled
ignoreLostDevice
lastActiveItemRemovalDelay
defaults:
setDefault:value:
clientIsActive:
initWithManager:controller:
T@"UAUserActivityClientProcessesController",R,&,V_controller
submitUserActivityBecameCurrent:withToken:
submitUserActivityWasDiscovered:
submitRemotePasteboardBecameAvailable
roundNum:to:
doInitializeWithClientVersion:clientInfo:completionHandler:
doFetchUserActivityInfoWithUUID:completionHandler:
doUpdateUserActivityInfo:makeCurrent:completionHandler:
doUpdateUserActivityWithUUID:setActive:
doDeleteUserActivityWithUUID:
doAddDynamicUserActivity:matching:
doRemoveDynamicUserActivity:matching:
doMarkUserActivityAsDirty:forceImmediate:webpageURL:expiration:hasiCloudDocument:hasUnsynchronizediCloudDoc:
doPinUserActivityInfo:completionHandler:
doGetCurrentUserActivityInfo:
doDetermineIfUserActivityIsCurrent:completionHandler:
doGetUserActivityProxiesWithOptions:predicate:completionHandler:
doGetLoggingFileForClient:options:completionHandler:
doRegisterAsProxyApplicationForPid:options:completionHandler:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
askClientUserActivityToSave:
askClientUserActivityToSave:completionHandler:
tellClientUserActivityItWasResumed:
tellClientDebuggingEnabled:logFileHandle:
writeLocalPasteboardToFile:itemDir:withCompletion:
setLogFileDirectoryPath:
logFileDirectoryPath
setLogFilePath:
logFilePath
fileHandleForUpdatingAtPath:
setOutputFile:
initWithFileDescriptor:closeOnDealloc:
log:format:
outputFile
shouldLog:
initWithFormat:arguments:
writeData:
log:format:args:
logItem:
_outputFile
_logFileDirectoryPath
_logFilePath
T@"NSFileHandle",&,V_outputFile
T@"NSString",&,V_logFileDirectoryPath
T@"NSString",&,V_logFilePath
lastUUID
setLastUUID:
_lastUUID
T@"NSUUID",&,V_lastUUID
isUIApplicationElement
hasKeyboardFocus
UIApplicationElement
TB,R,N,GisUIApplicationElement
T@"NSString",R,C,N
TB,R,N
frame
referenceFrame
level
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
Tq,R,N
mainDisplayLayoutMonitor
currentLayout
updateMainScreenLayout:
localReceiver
appStateMonitor
setAppStateMonitor:
handleAppStateMonitorUpdate:
configurationForDefaultMainDisplayMonitor
setNeedsUserInteractivePriority:
setTransitionHandler:
monitorWithConfiguration:
mainScreenBundleIdentifiersInOrder
ifLockScreenIsActive:visibleBundleIdentifiers:
determineVisibleOrderingForProcessesWithUserActivities:previousBundleIDOrdering:
carPlayScreenBundleIdentifiersInOrder
userActivityClientForBundleIdentifier:
elements
arrayWithArray:
currentAdvertisableActivity
proxiedBundleIdentifier
setLastFrontTime:
setIgnoreLockScreenUntil:
ignoreLockScreenUntil
layoutUpdateScheduler
UTF8String
numberWithLong:
isDefaultFrontmostApp
userActivityAdvertisableItemByUUID:
additionalUserActivityAdvertisableItems
uniqueIdentifiers
addAdditionalUserActivityAdvertisableItems:
proxiedClients
isEligibleAsExtension
frontBundleID
setFrontBundleID:
eligibleInBackground
sortDescriptorWithKey:ascending:
sortUsingDescriptors:
advertiseableItemForBundleIdentifier:
lastFrontTime
initWithController:connection:
DEBUG_lastEligibleItems
addUserActivityClient:
visibleUserActivityClients
userActivityClientForUUID:
userActivityClientForPID:
removeAdditionalUserActivityAdvertisableItems:
removeClientActivityClient:
registerAsProxyApplication:forPid:
setLocalReceiver:
carPlayDisplayLayoutMonitor
setMainScreenBundleIdentifiersInOrder:
setCarPlayScreenBundleIdentifiersInOrder:
_activityManagerListener
_userActivityClientsByPID
_additionalUserActivityAdvertisableItems
_proxiedClients
_userActivityClientsByBundleID
_visibleUserActivityClients
_mainDisplayLayoutMonitor
_appStateMonitor
_frontBundleID
_localReceiver
_carPlayDisplayLayoutMonitor
_layoutUpdateScheduler
_mainScreenBundleIdentifiersInOrder
_carPlayScreenBundleIdentifiersInOrder
_ignoreLockScreenUntil
_DEBUG_lastEligibleItems
T@"UALocalItemReceiver",&,V_localReceiver
T@"NSSet",R,C,D
T@"FBSDisplayLayoutMonitor",R,&,V_mainDisplayLayoutMonitor
T@"FBSDisplayLayoutMonitor",R,&,V_carPlayDisplayLayoutMonitor
T@"UADispatchScheduler",R,&,V_layoutUpdateScheduler
T@"NSArray",C,V_mainScreenBundleIdentifiersInOrder
T@"NSArray",C,V_carPlayScreenBundleIdentifiersInOrder
T@"NSString",C,V_frontBundleID
T@"NSDate",C,V_ignoreLockScreenUntil
T@"NSMutableDictionary",R,&,V_proxiedClients
T@"NSArray",R,C,V_DEBUG_lastEligibleItems
T@"NSArray",R,C,D
T@"BKSApplicationStateMonitor",&,V_appStateMonitor
scanner
setPeer:
setScanner:
_scanner
T@"SFPeerDevice",&,V_peer
T@"SFActivityScanner",&,V_scanner
attach
detach
localDevice
poweredOn
enumerateKeysAndObjectsUsingBlock:
attachSession:
detachSession:
terminateSession:
processCallbacks
session
handleSessionEvent:event:result:
handleLocalDeviceCallback:event:result:
_session
_localDevice
_sessionCallbacks
_localDeviceCallbacks
_attached
_poweredOn
_poweredOnValid
_callbacks
initWithObjects:forKeys:count:
dictionaryWithDictionary:
additionalItems
teamID
absoluteString
userInfoPayload
streamsData
init:title:date:userInfoPayload:teamID:activityType:
initWithNSError:
addAdditionalItem:forKey:
initWithData:
encodeAsData
uniqueIdentifier
setUniqueIdentifier:
title
setUserInfoPayload:
setStreamsData:
setTeamID:
_uniqueIdentifier
_title
_when
_userInfoPayload
_webpageURL
_streamsData
_teamID
_additionalItems
T@"NSUUID",C,V_uniqueIdentifier
T@"NSString",C,V_title
T@"NSDate",C,V_when
T@"NSData",C,V_userInfoPayload
T@"NSURL",C,V_webpageURL
T@"NSData",C,V_streamsData
T@"NSString",C,V_teamID
T@"NSDictionary",R,C
periodicCleanupFunc
sfActivityScanners
periodicCleanup
foundDevice:
activeDevices
isDefaultPairedDevice
lostDevice:
scheduledTimerWithTimeInterval:repeats:block:
removeAllFromDevice:
lastSeenPasteboardDevice
setLastSeenPasteboardDevice:
remotePboardTimer
setRemotePboardTimer:
stringByAppendingString:
removeAfter
setRemoveAfter:
currentUntilDate
setCurrentUntilDate:
resignCurrent
_addItem:scheduleUpdates:
isPayloadRequested
isPayloadAvailable
timeIntervalSinceReferenceDate
dateWithTimeInterval:sinceDate:
isEqualHashedPayloadBytes:
receiveAdvertisement:scanner:
substringToIndex:
containsString:
initWithSFActivityAdvertisement:
lastSeenPasteboardVersionBit
setLastSeenPasteboardVersionBit:
clearRemotePasteboardAvailable:
sharingBTLESuggestedItemForAdvertisementPayload:forDevice:
optionBits
compareOptionBits:
time
setDontPrefetchBefore:
clearPayload
updateFromSFAdvertisement:
advertisementKind
cornerActionBTLEItemWithSFAdvertisement:optionBits:scanner:receiver:
timeIntervalSince1970
addItem:scheduleUpdates:
fetchMoreAppSuggestionsFromDevice:
isCurrent
dontPrefetchBefore
sfActivityScanner
addNewItemsFromPayloads:device:scanner:force:
cornerActionBTLEItemWithPayload:device:options:optionBits:scanner:receiver:
dateByAddingTimeInterval:
forceScanning
setForceScanning:
_sfActivityScanners
_activeDevices
_lastAutoPullActivitiesRequesterId
_recentlyLostDeviceIDs
_forceScanning
_periodicCleanup
_lastSeenPasteboardDevice
_lastSeenPasteboardVersionBit
_remotePboardTimer
T@"UADispatchScheduler",R,&,V_periodicCleanup
TB,V_forceScanning
T@"SFPeerDevice",&,V_lastSeenPasteboardDevice
Tq,V_lastSeenPasteboardVersionBit
T@"NSTimer",&,V_remotePboardTimer
setStream:
setTypesToReceive:
stream
streamDoneWithInfo:error:
removeFromRunLoop:forMode:
setReceivedData:
setReceivedDelem:
receivedData
receivedDelem
setPbwrapper:
pbwrapper
dataWithBytesNoCopy:length:freeWhenDone:
initWithInputStream:outputStream:dataFile:
receiveTypes:withProgress:completionHandler:
typesToReceive
timeRemaining
setTimeRemaining:
_receivedDelem
_stream
_typesToReceive
_pbwrapper
_receivedData
_timeRemaining
T@"NSInputStream",&,V_stream
T@"NSSet",&,V_typesToReceive
T@"UASharedPasteboardInfoWrapper",&,V_pbwrapper
T@"NSMutableData",&,V_receivedData
TQ,V_timeRemaining
TB,V_receivedDelem
activityTypes
initWithPayload:device:options:optionBits:type:activityType:bundleIdentifier:teamIDs:advertisingOptions:scanner:receiver:dynamicIdentifier:
initWithPayload:device:options:optionBits:type:activityType:bundleIdentifier:teamIDs:advertisingOptions:scanner:receiver:
setDynamicActivityType:
initWithAdvertisedBytes:
mutableCopy
setPeerDevice:
setTeamIDs:
currentUntil
validUntil
payloadRequestedCompletions
setPayloadRequestedCompletions:
payloadBytes
setPayloadAvailable:
teamIDs
setPersistentIdentifier:
payloadAvailabilityDelay
setPayloadAvailabilityDelay:
setOptionBits:
_optionBits
_currentUntilDate
_advertisementPayload
_payloadAvailabilityDelay
_payloadRequestedCompletions
_teamIDs
_dontPrefetchBefore
_removeAfter
T@"NSMutableSet",&,V_payloadRequestedCompletions
T@"SFActivityScanner",R,&,V_scanner
T@"UASharingReceiver",R,&,V_receiver
BTLEPayloadData
T@"NSData",R,C,D
T@"SharingBTLEAdvertisementPayload",C,V_advertisementPayload
TI,V_optionBits
T@"NSDate",C,V_currentUntilDate
T@"NSSet",C,V_teamIDs
T@"NSDate",C,V_dontPrefetchBefore
T@"NSDate",C,V_removeAfter
Td,V_payloadAvailabilityDelay
entitlementValueForKey:ofClass:
pasteboardTypes
generation
_pasteboardTypes
_generation
T@"NSSet",&,V_pasteboardTypes
Tq,V_generation
setDataSent:
setTypesToSend:
headerForData:
setCurrentSendData:
currentSendData
shutdownTimerFired:
setBackupTimer:
backupTimer
shutdownStream
dataSent
initWithOutputStream:inputStream:pasteboard:
sendTypes:completionHandler:
typesToSend
infoSent
setInfoSent:
_dataFile
_typesToSend
_currentSendData
_infoSent
_dataSent
_backupTimer
T@"NSOutputStream",&,V_stream
T@"NSFileHandle",&,V_dataFile
T@"NSSet",&,V_typesToSend
T@"NSData",&,V_currentSendData
T^B,V_infoSent
TQ,V_dataSent
T@"NSTimer",&,V_backupTimer
setTeamIdentifier:
allowedToUseLSAlwaysPick
allowedToUseUAAlwaysAdvertise
allowedToUseEligibleEvenWhenInBackground
payloads
setPayloads:
expirationDate
setExpirationDate:
eligibleForSearch
setEligibleForSearch:
eligibleForPublicIndexing
setEligibleForPublicIndexing:
isEligibleToAdvertiseWithUUID:
isEligibleToAlwaysAdvertiseWithUUID:
isDirtyActivityWithUUID:
askSourceProcessToUpdateActivityWithUUID:evenIfClean:completionHandler:
didResumeUserActivityWithUUID:completionHandler:
initWithUserActivityInfo:client:
initWithUUID:type:options:client:
alwaysPickValue
alwaysEligible
update:
isDirty
needsUpdateBeforeAdvertising
wasResumedOnAnotherDeviceWithCompletionHandler:
T@"UAUserActivityClientProcess",W,V_client
referrerURL
_alwaysPick
_alwaysEligible
_alwaysPickValue
TB,R,V_alwaysPick
Tq,R,V_alwaysPickValue
TB,R,V_alwaysEligible
setController:
T@"UAActivityReplay",&,V_controller
advertisementVersion
encodeInt64:forKey:
decodeInt32ForKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
_advertisementVersion
_device
Tq,V_advertisementVersion
T@"NSData",C,V_advertisementPayload
T@"NSDictionary",C,V_options
T@"SFPeerDevice",&,V_device
setOs_transaction:
isSandboxed
applicationIdentifier
pluginKitProxyForIdentifier:
protocol
applicationInfoForPID:completion:
debugStateChanged:
addObserver:selector:name:object:
allowedToAccessAnyItem
removeUserActivityAdvertiseableItemByUUID:
allowedToUseLSAlwaysEligible
pendingUpdateTasks
targetWithPid:
attributeWithDomain:name:
initWithExplanation:target:attributes:
acquireWithError:
dispatchPendingTasksForUUID:error:
addIndex:
removeObjectsAtIndexes:
clientIsSandboxed
setApplicationIdentifier:
currentConnection
synchronize
allowedToGetCurrentActivityInfo
allowedToMatchUserActivities
initWithUUID:activityType:dynamicActivityType:bundleID:
domain
dictionaryWithObject:forKey:
addUserActivity:
auditTokenValue
dirtyUUIDs
removeUserActivity:
setManager:
setAllowedToAccessAnyItem:
frontmost
clientIsSigned
userActivityAdvertisableItemsByUUID
setUserActivityAdvertisableItemsByUUID:
os_transaction
setPendingUpdateTasks:
_pendingResumeActivityUUIDs
_clientIsSandboxed
_allowedToAccessAnyItem
_defaultFrontmostApp
_isEligibleAsExtension
_frontmost
_allowedToUseLSAlwaysEligible
_allowedToUseEligibleEvenWhenInBackground
_allowedToUseLSAlwaysPick
_allowedToUseUAAlwaysAdvertise
_allowedToGetCurrentActivityInfo
_allowedToMatchUserActivities
_clientIsSigned
_auditToken
_applicationIdentifier
_dirtyUUIDs
_currentAdvertisableActivity
_lastFrontTime
_teamIdentifier
_userActivityAdvertisableItemsByUUID
_os_transaction
_pendingUpdateTasks
T@"NSMutableSet",R,C,V_dirtyUUIDs
T@"NSMutableDictionary",&,V_userActivityAdvertisableItemsByUUID
T@"UACornerActionManager",W,V_manager
TC,V_allowedToAccessAnyItem
T@"NSObject<OS_os_transaction>",&,V_os_transaction
T@"NSMutableArray",&,V_pendingUpdateTasks
T@"NSArray",R
T@"NSXPCConnection",R,W,V_connection
T@"UAAuditToken",R,&,V_auditToken
T@"UAUserActivityAdvertisableItem",R,&,V_currentAdvertisableActivity
TB,R,V_frontmost
TB,R,V_allowedToUseLSAlwaysEligible
TB,R,V_allowedToUseEligibleEvenWhenInBackground
TB,R,V_allowedToUseLSAlwaysPick
TB,R,V_allowedToUseUAAlwaysAdvertise
TB,R,V_allowedToGetCurrentActivityInfo
TB,R,V_allowedToMatchUserActivities
T@"NSDate",C,V_lastFrontTime
defaultFrontmostApp
TB,R,GisDefaultFrontmostApp,V_defaultFrontmostApp
TB,R,GisEligibleAsExtension,V_isEligibleAsExtension
TB,R,V_clientIsSandboxed
TB,R,V_clientIsSigned
T@"NSString",C,V_applicationIdentifier
T@"NSString",R,C,V_teamIdentifier
browserLookup
setDomain:
setBrowserLookup:
searchForServicesOfType:inDomain:
scanForPeersOfType:domain:
listeningService
port
initWithManager:service:
setListeningService:
initWithDomain:type:name:port:
publishWithOptions:
initWithManager:inputStream:outputStream:name:
netServiceBrowserWillSearch:
netServiceBrowserDidStopSearch:
netServiceBrowser:didNotSearch:
netServiceBrowser:didFindDomain:moreComing:
netServiceBrowser:didFindService:moreComing:
netServiceBrowser:didRemoveDomain:moreComing:
netServiceBrowser:didRemoveService:moreComing:
listenForIncomingConnections:port:type:
_browserLookup
_type
_domain
_listeningService
T@"NSNetServiceBrowser",&,V_browserLookup
T@"NSString",C,Vname
T@"NSString",C,V_type
T@"NSString",C,V_domain
T@"NSNetService",&,V_listeningService
setPeerName:
setReadBuffer:
setInputStream:
setOutputStream:
getInputStream:outputStream:
inputStream
peerName
propertyForKey:
outputStream
peerUUID
readBuffer
writeBuffer
setWriteBuffer:
setPeerUUID:
getStreamsToHostWithName:port:inputStream:outputStream:
createConnection:host:port:
_inputStream
_outputStream
_readBuffer
_writeBuffer
_peerName
_peerUUID
T@"NSInputStream",&,V_inputStream
T@"NSOutputStream",&,V_outputStream
T@"NSMutableData",&,V_readBuffer
T@"NSMutableData",&,V_writeBuffer
T@"NSString",C,V_peerName
T@"NSUUID",C,V_peerUUID
substringWithRange:
replaceOccurrencesOfString:withString:options:range:
initWithURL:error:
bundleRecord
compatibilityObject
applicationProxyForIdentifier:
appState
isInstalled
setLeaf:
URLByDeletingLastPathComponent
setBaseURL:
baseURL
leaf
_baseURL
_leaf
T@"NSURL",&,V_baseURL
T@"NSString",&,V_leaf
isSendMode
receivedDataBack:
processReceivedData
sendNextChunk
setRecvHandler:
recvHandler
setRecvRap:
recvRap
setIsSendMode:
setSendRap:
sendRap
setTypes:
_isSendMode
_recvHandler
_recvRap
_sendRap
TB,V_isSendMode
T@?,C,V_recvHandler
T@"UASharedPasteboardInfoWrapper",&,V_recvRap
TQ,V_totalBytesReceived
T@"UASharedPasteboardInfoWrapper",&,V_sendRap
initWithType:string:dynamicType:teamID:webpageURL:options:isCurrent:when:versionFlags:
initWithItem:isCurrent:when:versionFlags:
dateEpochStart:
setEpochStart:
initWithAdvertisedBytes:options:
epochStart
timeOffset
initWithItem:isCurrent:when:
copyWithZone:
setPayloadBytes:
setCurrent:
setTimeOffset:
containsPasteboard
matchesItem:
epochEnd
activityUUID
_bytes
_activityUUID
_epochEnd
_epochStart
TC,D
T@"NSDate",C,V_epochStart
current
TB,GisCurrent
T@"NSDate",R,C,D
T@"NSDate",R,C,V_epochEnd
T@"NSData",C
Ti,R,D
T@"NSUUID",R,C,V_activityUUID
host
dateWithTimeIntervalSinceReferenceDate:
decodeIntegerForKey:
encodeInteger:forKey:
_pbinfo
_extraData
_extraDataType
_protocolVersion
T@"UASharedPasteboardInfo",&,V_pbinfo
T@"NSData",&,V_extraData
Tq,V_extraDataType
Tq,V_protocolVersion
initWithArchivedUserActivityInfo:
setSimulator:
getUUIDBytes:
initWithArchivedUserActivityInfo:peerDevice:simulator:
T@"UASimulator",&,V_simulator
pidVersion
euid
ruid
egid
rgid
asid
getValue:
objCType
_auditTokenValue
T{?=[8I]},R,V_auditTokenValue
TI,R,D
sandboxed
TB,R,D,GisSandboxed
setAdvertisementTimes:
_updateAdvertisement
_periodicIdleUpdate
setUserIsCurrent:
setLastUserActiveTime:
currentAdvertisedItem
shouldAdvertisePasteboard
scheduleAdvertisementUpdate
currentAdvertisementPayload
lastAdvertismentTime
preventIdleSleepAssertion
setPreventIdleSleepAssertion:
_advertisePayload:force:
updateAdvertisingPowerAssertion:
sfActivityAdvertisers
_advertisePayload:force:sfAdvertiser:
setCurrentAdvertisementPayload:
setLastAdvertismentTime:
scheduleAdvertisementUpdate:
setLastAdvertisementPayload:
shouldAdvertiseAutoPullActivityList
scheduleIOPowerManagerUserIdleNotifications
userIsCurrent
pasteboardAvailible
pasteboardBitValue
beginTimeForNonActiveAdvertisement
lastUserActiveTime
advertisementTimes
setCurrentAdvertisedItem:
currentAdvertisedItemOtherAdvertisedItems
setCurrentAdvertisedItemOtherAdvertisedItems:
periodicUpdate
nextScheduleUpdate
changeAdvertisementThreadSpinCount
setChangeAdvertisementThreadSpinCount:
removeAdvertisement
setBeginTimeForNonActiveAdvertisement:
shouldAdvertiseHandoff
advertiseItem:force:
moveAdvertisementToNonActive
advertisePayload:force:
removeIOPowerManagerUserIdleNotifications
_refreshPairedSFPeerDevices
setPairedDevices:
_updatePairedDeviceCapabilities
activityAdvertiser:activityPayloadForAdvertisementPayload:handoffCommand:requestedByDevice:withCompletionHandler:
dataForMoreAppSuggestions
dataWithCapacity:
increaseLengthBy:
peerDeviceCanAcceptNewerPayload:
encodedInfoToOldEncodedInfo:
encodedUserInfoError
persistentIdentifier
dictionaryWithObjectsAndKeys:
userIsCurrentIdleTracker
lastAdvertisedGeneration
setLastAdvertisedGeneration:
pboardBitToAdvertise
setPboardBitToAdvertise:
sfActivityAdvertiser
lastAdvertisementPayload
validKey
keyCounter
initWithManager:advertiser:
currentAdvertisedBytes
mostRecentAdvertisedBytesTime
_advertisePayload:
activityAdvertiser:activityPayloadForAdvertisementPayload:requestedByDevice:withCompletionHandler:
helpersDispatchGroup
dontAdvertiseAsCurrentUntil
setDontAdvertiseAsCurrentUntil:
setUserIsCurrentIdleTracker:
_sfAdvertisers
_needToRefreshPeerDevices
_shouldAdvertiseHandoff
_shouldAdvertisePasteboard
_userIsCurrent
_pboardBitToAdvertise
_pairedDevices
_currentAdvertisedItem
_nextScheduleUpdate
_periodicUpdate
_dontAdvertiseAsCurrentUntil
_currentAdvertisementPayload
_lastAdvertismentTime
_lastAdvertisementPayload
_currentAdvertisedItemOtherAdvertisedItems
_advertisementTimes
_changeAdvertisementThreadSpinCount
_preventIdleSleepAssertion
_userIsCurrentIdleTracker
_lastUserActiveTime
_lastAdvertisedGeneration
_beginTimeForNonActiveAdvertisement
T@"NSObject<OS_dispatch_group>",R,&,V_helpersDispatchGroup
T@"NSObject<OS_dispatch_queue>",R,&,V_dispatchQ
T@"UADispatchScheduler",R,&,V_nextScheduleUpdate
T@"UADispatchScheduler",R,&,V_periodicUpdate
T@"NSDate",&,V_dontAdvertiseAsCurrentUntil
T@"SharingBTLEAdvertisementPayload",&,V_currentAdvertisementPayload
T@"NSDate",&,V_lastAdvertismentTime
T@"SharingBTLEAdvertisementPayload",C,V_lastAdvertisementPayload
T@"UAUserActivityInfo",&,V_currentAdvertisedItem
T@"NSMutableDictionary",&,V_currentAdvertisedItemOtherAdvertisedItems
T@"NSMutableArray",&,V_advertisementTimes
TQ,V_changeAdvertisementThreadSpinCount
T@"UATimedPowerAssertions",&,V_preventIdleSleepAssertion
TB,V_userIsCurrent
T@"PowerManagerIdleTracker",&,V_userIsCurrentIdleTracker
T@"NSDate",C,V_lastUserActiveTime
TB,R,V_shouldAdvertiseHandoff
TB,R,V_shouldAdvertisePasteboard
Tq,V_lastAdvertisedGeneration
TB,V_pboardBitToAdvertise
T@"NSDate",&,N,V_beginTimeForNonActiveAdvertisement
T@"NSSet",C,V_pairedDevices
bootstrapName
reconnectToParentSimulator
ourDevice
creator
setSimulatorInFront:
setOurDevice:
_pairedClientPort
_notifyToken
_notifiedItems
_activitiesShouldCrossover
_commandPort
_ourDevice
_peeredDevice
_creator
_bootstrapName
T@"NSString",R,C,V_bootstrapName
T@"UASimulatorController",R,&,V_controller
T@"SFPeerDevice",&,V_ourDevice
T@"SFPeerDevice",&,V_peeredDevice
T@"UASimulatorAdvertiser",R,&,V_advertiser
T@"UASimulatorReceiver",R,&,V_receiver
T@"UASimulatorAdvertisementCreator",R,&,V_creator
TB,R,V_activitiesShouldCrossover
TI,R,V_commandPort
initWithUUIDBytes:
replayableAdvertisableItemWithAdvertisableItem:
initWithUUID:
_wasResumed
T@"NSObject<OS_dispatch_semaphore>",R,&,V_wasResumed
setStr:
initWithString:
_str
T@"NSString",C,V_str
componentsJoinedByString:
setRecentActionsStateHandler:
networkConnectionHandler
doSetDebugOption:value:
removeObjectsInRange:
initWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
setNetworkConnectionHandler:
disableAdminEntitlmentChecking
sharedAdvertiser
applicationIsInstalled:
lowercaseString
componentsSeparatedByString:
lastObject
replayManager
setReplayManager:
unarchivedObjectOfClasses:fromData:error:
doNOP:withCompletionHandler:
doFindMatchingUserActivityForString:withCompletionHandler:
doCopyAdvertisedUUIDWithCompletionHandler:
doCopyAllUUIDsOfType:withCompletionHandler:
doCopyEnabledUUIDsWithCompletionHandler:
doCopyDebuggingInfo:completionHandler:
doCopyRecentActions:completionHandler:
doCopyStatusString:options:completionHandler:
doFetchMoreAppSuggestions
doCopyDynamicUserActivitiesString:completionHandler:
doTerminateServer
doGetCurrentAdvertisedItemUUID:
doInjectBTLEItem:type:identifier:title:activityPayload:webPageURL:remoteModel:duration:payloadDelay:
doCopySimulatorStatusString:completionHandler:
doCopyDefaults:completionHandler:
doSetDefaults:archivedValue:
doWillSaveDelegate:completionHandler:
doSetupNetworkedPairs:port:
doSetupRendevous:domain:activate:
doReplayCommands:completionHandler:
doSetRemotePasteboardAvailable:
doSetLocalPasteboardReflection:
doGetSFActivityAdvertisement:completionHandler:
doGetPairedDevices:completionHandler:
doGetSysdiagnoseStringsIncludingPrivateData:completionHandler:
setDebugging:
supportNetworkPeers
receivePing:
doDidSaveDelegate:completionHandler:
startAdvertisingPingWithTimeInterval:
stopAdvertisingPing
fakeBTLEInjectedItem
setFakeBTLEInjectedItem:
listener
setListener:
ignoredRTimeVal
recentActionsStateHandler
_supportNetworkPeers
_disableAdminEntitlmentChecking
_replayManager
_networkConnectionHandler
_recentActionsStateHandler
_ignoredRTimeVal
T@"SharingBTLESuggestedItem",&,VfakeBTLEInjectedItem
T@"NSXPCListener",&,Vlistener
T@"UAActivityReplay",&,V_replayManager
T@"UANetworkReplayRendevousHandler",&,V_networkConnectionHandler
T{timeval=qi},R,V_ignoredRTimeVal
TQ,V_recentActionsStateHandler
T@"UACornerActionManager",&,Vmanager
TB,V_disableAdminEntitlmentChecking
TB,V_supportNetworkPeers
currentCalendar
components:fromDate:
hour
minute
_shouldAdvertiseAutoPullActivityList
T@"NSArray",C,D
T@"NSArray",R,C
TB,V_shouldAdvertiseAutoPullActivityList
0123456789abcdef
%c%c
com.apple.UserActivity.UniversalClipboard.Sent
clientWriteSize
clientWriteTime
clientWriteSpeed
usedStreams
streamOpenDelay
streamDataSize
streamTransferTime
streamTransferSpeed
totalTime
errorCode
PingNotifier
com.apple.ping
v16@?0@"NSError"8
PingNotifier: %ld outstanding PONG responses; %ld total pongs sent.
com.apple.private.coreservices.lsuseractivityd.bestappsuggestion
pasteboard-server
wasActive
 firstTime
Active
v8@?0
v24@?0Q8Q16
com.apple.private.handoff.ping
PING!
com.apple.private.handoff.pong
PONG!
%@: payloadSize=%ld
SimReceiver
%@:%@
UASimulatorReceiver: %@, %ld items %@
ACTIVE
supressionRec(%@ hard=%@ until=%@ (lastInterestingTime=%@)
(PID:%ld)
BestApp
bestApp
q24@?0@"UAUserActivityInfo"8@"UAUserActivityInfo"16
%@/%@ %@ %@ (and %lu more best app options)
%@/%ld:%@, next=%@/%lld
Diagnostic
com.apple.AppStore
signposts
-noDefaultHandlers
-sharingAdvertiser
-sharingScanner
-activityReceiver
-activityAdvertiser
-bestAppSuggestionNotifier
-userActivityClientProcessesController
-noSandbox
-loggingAdvertiser
-loopback
-enableNetworkUserActivity
-enableCoreSimulator
-disableEntitlmentChecking
-disableReconnectionNotification
-exitAfter
com.apple.useractivityd
Jan 29 2022
09:02:28
Logger
AppsActivityCreator
BestAppController
DarwinNotifier
PingController
com.apple.coreservices.useractivity.reconnection
%@%s
/System/Library/PrivateFrameworks/UserActivity.framework/
shared-pasteboard/
kLocalPasteboardBlobName
kRemotePasteboardBlobName
items/%@/
type-clone
archives
items
v16@?0@"NSURL"8
unknown
%@(%@ %@ browserFallback=%@ %ld/%.2fk/%.4f sec %@ %@ %lx w2n=%@ scs=%@)
:com.apple.
com.apple.
ProductName
ProductVersion
ProductBuildVersion
UA Test Peer
com.apple.ipod
v32@?0@"UTType"8Q16^B24
com.apple.ipod-touch
public.device
/System/Library/CoreServices/SystemVersion.plist
UAReceiverScanTypeUserActivity
UAReceiverScanTypeClipboard
UAReceiverScanTypeBoosted
%s: %@
suspended
resumed
(was already terminated)
%@: %@
com.apple.UserActivity.Handoff.BecameCurrent
activityType
bundleIdentifier
UC Stream Watchdog
error
uuid
public.file-url
data
Invalid message header
packetNum
totalNum
totalSize
supportsCompression
UCHB
numFiles
com.apple.security.sandbox-extension-dict
v16@?0q8
streamStart
streamWaiting
streamSendingRequest
streamWaitingResponse
streamHandleRequest
streamSendingResponse
streamSendingMultiResponse
streamHandleResponse
streamDone
ucStreamState:%d
tagStop
tagFeatureRequest
tagFeatureResponse
tagPasteboardInfoRequest
tagPasteboardInfoResponse
tagPasteboardDataRequest
tagPasteboardDataResponse
tagPasteboardFileRequest
tagPasteoboardFileResponse
tagPasteboardAuxInfo
tagHeartbeat
tag:%d
AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE
EEEEEEEE-DDDD-CCCC-BBBB-AAAAAAAAAAAA
com.apple.UserActivity.UniversalClipboard.Unavailable
reason
SimAdvertiser
### UASimulatorAdvertiser:
ReplayCreator
ReplayController: ITEM=%@
com.apple.UserActivity.UniversalClipboard.Requested
payloadSize
transferTime
transferSpeed
streamOpenTime
cancelled
underlyingErrorCode
numberOfItems
isFileCopy
isAsyncTransfer
remoteDeviceType
Unknown
cornerActionManagerQ
idleDetermination
updateAdvertisedItems
SuspendAdvertisingIdleTracker
v12@?0B8
q24@?0@"UAClientController"8@"UAClientController"16
because the item contains an unsynchronized cloud document item.
dimmed 
uilock 
alwaysPick 
v20@?0@"NSObject"8B16
com.apple.screensaver.didstart
com.apple.screensaver.didstop
com.apple.language.changed
v12@?0i8
com.apple.backboardd.backlight.changed
userInactivePowerAssertion
SCREEN: %s
DIMMED
active
screenDimmedPowerAssertion
DEVICELOCK: %s
LOCKED
unlocked
deviceUILockAssertion
kLSUserActivityDebuggingInfoCurrentAdvertisedItem
kLSUserActivityDebuggingInfoLastAdvertisedBytes
kLSUserActivityDebuggingInfoAdvertising
Dynamic User Activities: (domain=%@) %@
Manager status: pid=%lld, uid=%lld, uptime=%@ %@ (Version %s, built %s %s %s)
09:02:33
q24@?0@"UAAdvertiser"8@"UAAdvertiser"16
ADVERTISING:
*** No UAAdvertisers defined at present, so no advertising is taking place.
RECEIVING:
No UAReceivers defined at present, so no activities will be received.
Manager status: pid=%lld, uid=%lld, uptime=%@ %@ runtime=%@ (Version %s, built %s %s %s)
### ADVERTISERS (%ld total) %@ nextCheck=%@
(SUSPENDED)
### RECEIVERS (%ld total)
### AdvertiseableItems ( that might be broadcast to other machines/remind me later)
UAUserActivityAdvertiserHasMoreActivities
- %@%@%@
(advertised) 
(more items available) 
CornerActionItems (potential items to appear on this device as resumable from other devices)
- %@
Pinned Activity Info
### NOTIFIERS (%ld total) nextCheck=%@
### HANDLERS: (%ld total)
Idle determination:%s suspended=%s%s%s%s pick=%ld/%@ idle=%ld/%@ bestApp=%ld/%@
 userIdle
 dimmed:YES
 locked:YES
PERF:%@
 - %@
NSTemporaryDirectory=%@
PROJECT:UserActivity-
v24@?0@"NSString"8^B16
com.apple.UserActivity.Handoff.WasContinued
suggestedActionType
transferDurationSec
canceled
broweserFallback
webToNative
supportsContinuityStreams
interactionType
command-tab
dock
notification-center
lock-screen
multi-tasker
proxy-object
spotlight
com.apple.useractivity.remotegenerationresponse
pasteboard-fetch
Info Requested
Info Received
Data Requested
Data Received
Error
Canceled
v24@?0@"NSData"8@"NSError"16
v24@?0@"UASharedPasteboardInfo"8@"NSError"16
pasteboard-server-remote-gen
com.apple.coreservices.uauseractivitypasteboardclient.xpc
com.apple.private.coreservices.useractivityd.sharedpasteboard
com.apple.coreservices.uasharedpboardclientq
/System/Library/PrivateFrameworks/UserActivity.framework
com.apple.continuitypasteboard
UASharedPasteboard
v24@?0@"NSInputStream"8@"NSOutputStream"16
v24@?0@"UASharedPasteboardInfoWrapper"8@"NSError"16
v32@?0@"<UCStreamCoder>"8Q16@"NSError"24
v32@?0@"NSInputStream"8@"NSOutputStream"16@"NSError"24
main-label.title
Localizable
main-label.default-title
cancel-button.title
com.apple.UserActivity.UASharedPasteboardiOSUI
##### Screen Sharing session in progress, Universal Clipboard is disabled: %lu #####
##### Continuity Pasteboard: Remote Pasteboard:%@, Local generation=%ld, %@reflection:%@
Available
Unavailable
SCREENSHARING 
  %@
Item: %@ "%@"
file
clipboardReadStream
clipboardWriteStream
PingCreator
PingCreator:%@
%@.%@
FrameworkBundleID
AssertType
PreventUserIdleSystemSleep
AssertName
TimeoutSeconds
TimeoutAction
TimeoutActionTurnOff
-[UATimedPowerAssertions updateTimeUntilAssertionRelease:]
PowerAssertions:
 %@{%@/%@}
ACTIVE:
UATimedPowerAssertionsMapTableQueue
UATimedPowerAssertionsTimerQueue
SimCreator
(sim-rebroadcasted-item):%@ %@ %@
(inactive) 
com.apple.UserActivity.Handoff.WasSuggested
UCFilePackagerReadQ
Replay
ReplayAdvertiser
ReplayReceiver
iPhone5,1
Mac OS X
14A100
PEER
Orangeish
Greenish
BROADCAST $%@ %@
http://
HELP
COMMANDS: ...
 - ADVERTISEITEM:<tag> <activitytype> [<archivedUserActivityData>]
HANDOFF
VERSION
STARTUP
TERMINATE
ADVERTISEITEM
PAYLOAD
PULL
REMOVEITEM
PEERINFO
SF[$
RECEIVE
BROADCAST
REQUESTPAYLOAD
RETURNPAYLOADERROR $%@ %@
RETURNPAYLOAD $%@ [$%@]
v32@?0@"NSUUID"8@"NSData"16@"NSError"24
RETURNPAYLOAD
REQUESTPAYLOAD $%@
0123456789abcdefABCDEF$
0123456789abcdefABCDEF-
strings
Localization
PairedAdvertiser
dummy_account@me.com
simulator
iOSSimulator1,1
iOSSimulator
14A101
iOS Simulator
com.apple.coreservices.lsuseractivity.simulatorsupport
(ERROR %d/%s for simulator %@
com.apple.UserActivity.UniversalClipboard.TypesRequested
ActivityAdvertisingAllowed
ActivityReceivingAllowed
ClipboardSharingEnabled
MultiHandoffEnabled
UserIdleInterval
UserIdleRemovalDelay
MinimumTimeForAnAdvertisementToLive
MinimumTimeToLiveAfterRemovingAdvertisement
RecentlyEligibleItemInterval
LastActiveItemRemovalDelay
ScreenSaverRemovalDelay
ScreenSaverPasteboardAdvertisementDelay
ScreenDimRemovalDelay
ScreenDimPasteboardAdvertisementDelay
DeviceLockAdvertisementDelay
DeviceLockPasteboardAdvertisementDelay
CornerItemSupressionInternal
BestAppSuggestionSupressionIntervalForUnchangingItem
AdvertisedItemWhichIsWebBrowserIntervalToRememberEarlierActivities
IntervalToAskClientWithUnsynchronizedDocumentsToUpdate
MaximumTimeoutAfterAdvertisingEndsThatActivityCanBeResumed
CornerItemTimeout
UACornerActionItemAdditionalTimeToLiveAfterValidIntervalExpires
UACornerActionItemMaximumTimeForBTLEItemToLive
UAReceivedBTLEItemTimeToLiveAfterDeviceLostIfPayloadIsQueued
ActivePayloadUpdateInterval
MaximumTimeoutToWaitForClientProcessToUpdateActivityInformation
MaximumActivityPayloadSizeInBytes
ActivityPayloadWarningSizeInBytes
MinimumIntervalBetweenAdvertisements
MaximumAdvertisementsPerTimeInterval
MaximumAdvertisementsTimeInterval
EnableHandoffInPowerSaverMode
ActivityBTLESharingEnabled
LoggingAdvertiserEnabled
UASharedPboardLocalAdvertisementTime
UASharedPboardLocalClearedAdvertisementTime
UASharedPboardRemoteAvailableTimeout
UASharedPboardLocalReflection
UASharedPboardEmbeddedPayloadSizeLimitInBytes
UASharedPboardShowUIDelayInSec
UASharedPboardUIMinimumDurrationInSec
UASharedPboardHideUIDelayInSec
PayloadFetchResponseDelay
TypeRequestTimeout
PasteRequestTimeout
PasteboardStreamWatchdogTimeout
HandoffRequestTimeout
TimeRemainingDelay
IgnoreLostDevice
IgnoreBluetoothDisabled
DEBUGValidatePayloadFetchTimeInterval
DEBUGValidateRetryPayloadFetchFailureInterval
DEBUGValidateSampleResponseMinimumActivityPayloadSizeInBytes
DEBUGValidateSampleResponseMaximumActivityPayloadSizeInBytes
DEBUGAdditionalPayloadReceiveTimeInterval
DEBUGUserActivityTimeOffset
DEBUGForceNewPayloadEncoder
DEBUGForceOldPayloadEncoder
DEBUGDontSendActivityTitle
DEBUGReadvertiseImmediately
DEBUGEnablePinging
DEBUGEnablePrefetch
DEBUGCrossoverAllActivities
DEBUGIgnoreAppsUsedForDevelopment
EnableDebugging
EnableDebugLogFile
EnableSharingFramework
EnableNetworkControlListener
EnableAutomaticRendevousPairing
NetworkControlListenerPort
UserIdleRemoveDelay
SystemIdleRemovalDelay
RendevousPairingType
 %@=%@ (%@)
 %@=%@
Defaults: (domain=%@) %@
com.apple.system.lowpowermode
LocalReceiver
LocalItems:%@
_UALOGGINGCATEGORY
main
com.apple.useractivity
UAUserActivity
NSUserActivityTypeBrowsingWeb
_UAUSERACTIVITYCREATION
com.apple.coreservices.lsuseractivitymanager.xpc
_UAUSERACTIVITYBESTAPP
com.apple.coreservices.lsbestappsuggestionmanager.xpc
_UAUSERACTIVITYPASTEBOARD
com.apple.coreservices.uasharedpasteboardmanager.xpc
_UAUSERACTIVITYPASTEBOARDAUX
com.apple.coreservices.uasharedpasteboardaux.xpc
com.apple.coreservices.uasharedpasteboardcontroll.xpc
Logging
%@/Logs/Handoff/
%@/UALoggingAdvertiserItems.log
Advertisable:%@
ITEM:%@ %@ [0x%@]
ActivityLogger: Logging to %@.
UALoggingAdvertiser: ADVERTISING RESUMED.
UALoggingAdvertiser: ADVERTISING SUSPENDED.
(%@, %@)
layoutUpdate
v16@?0@"NSDictionary"8
v32@?0@"FBSDisplayLayoutMonitor"8@"FBSDisplayLayout"16@"FBSDisplayLayoutTransitionContext"24
q24@?0@8@16
com.apple.lock-screen
LSLivePastProcessExit
 and possibly change advertisement.
APP:%@, %@ %s
(update)
APP:- %s
APP:- (was %@) %s
com.apple.coreservices.ping
options.%@
com.apple.Carousel
##### Client processes: %ld clients
 Layout:
 car:
main:
q24@?0@"UAUserActivityClientProcess"8@"UAUserActivityClientProcess"16
 - %s%@
FRONT 
v32@?0@"NSString"8Q16^B24
 Order:{
%@/%@ 
pbpaste
pbpaste!
pbpaste2
pbtypes!
pbtypes
userActivityBTStatus
v32@?0@"NSObject"8@?<v@?@"NSObject"B>16^B24
bluetoothStatusQ
com.apple.UserActivity.baseEvent
 => 
teamID
type
BTLEUserActivityDataEncoding: userInfo=%@ %@%@%@%@
stream=%@
webPageURL=<private>
 {teamID=%@ activityType=%@}
additional=%@
SharingReceiver
SharingReceiverPeriodic
SCANNING:%s%s%s%s
userActivity 
clipboard 
 SUSPENDED
SCANNING:Found device %@ %@%s
 defaultPaired
v16@?0@"NSTimer"8
SCANNING:Lost device %@ %@%s
v24@?0^v8^{__CFError=}16
v20@?0C8^v12
-[UASharingReceiver receiveAdvertisement:scanner:]
UASharingReceiver.m
advertisement
advertisement.device
iPhone
iPad
UAPasteboardAvailable
UAPasteboardVersionBit
SCANNING:Received %@ %@ %@ from %@/%@
SCANNING:Received %@ (no match) from %@/%@
handoff-more_items
SharingBTLE receiver %s%s%@%@ %@%@
SUSPENDED
DISABLED
 Clip
(NO SFActivityScanner) 
 (Bluetooth disabled)
%ld scanners
 - %@%@%@ app:%@ %@ data=%@, from %@ at %@ remove at %@%s%s
 (PayloadReq)
 (PayloadAv)
 ActiveDevices:
, pb
(%@,%@%@)
PBDONE
Invalid delimiter before pbinfo
Invalid delimiter before pb data
com.apple.private.isDefaultFrontmostApp
com.apple.private.canmodifyanyuseractivity
NOTIFICATION#
UAUserActivityItemIsNotActiveKey
com.apple.GameController
persistentID
BTLEItem:%@ %@%@ id=%@ when=%@ %@device="%@" modelCode=%@ deviceType=%@
%s%s%s%s/%lx
 webPage
 cloud
 autopull
remove:%@ 
 options=%@
 payload=$%@
 payloadRequested
 payload NA
UASharingBTLEItem:%@ %@/%@ %@
Last BTLE payload fetched for item %@, at %@, from %@
useractivity-team-identifier
com.apple.developer.team-identifier
application-identifier
0000000000
UAProxiedBundleIdentifier
%@ { type = %@; uuid = %@;  activityType = "%@"; userInfo = %@; %@%@ %@ eligible=%@}
 webPageURL=<private>
 referrerURL=<private>
!eligibleForHandoff
%@ %@ %@ .userInfo=%@ payloads=%ld
%@%@%@ %@ %@%@%@%s%s%s %@%@%@
 dirty*
 !handOff
 AlwaysPickPriority=%li 
 cloudDoc
 unSynchCloudDoc
 fileProv
 url=%@
url=<private>
 referrer=%@
referrer=<private>
com.apple.UserActivity.UniversalClipboard.Available
com.apple.UserActivity.Handoff.WasDiscovered
fakeAppleID@apple.com
version
payload
options
device
MockAdvertisement($%@/%@ from %@)
com.apple.private.coreservices.lsuseractivityd.LSAlwaysPick
com.apple.private.coreservices.canopenactivity
com.apple.private.coreservices.cangetcurrentactivityinfo
com.apple.private.coreservices.canalwaysadvertise
com.apple.private.coreservices.alwaysEligibleEvenWhenInBackground
com.apple.private.coreservices.allowedToMatchUserActivities
com.apple.private.coreserivces.allowedToMatchUserActivities
Application
com.apple.coreservices.useractivity.client-connection
com.apple.security.app-sandbox
com.apple.application-identifier
com.apple.watchkit
UAUserActivityDebugStateChanged
com.apple.coreservices.useractivityd
ActivityAdvertising
Allow process to update handoff payload
v28@?0@"UAUserActivityInfo"8B16@"NSError"20
v32@?0@"UAUserActivityClientPendingUpdateTask"8Q16^B24
UserActivityClient(pid=%d/%@ uuids=%@)
CFBundleIdentifier
com.apple.private.useractivity.allowedtosetbundleidentifier
%@:%@:%@
entitlement
stream=%@ 
NULL
(already current)
, and updating advertisment.
private
 iCloudDoc
 unSynchronizediCloudDoc
%@ pid=%d currentActive=%@%@%@%@
(dirty) 
proxyAs=%@ 
 lastFront=%@
%@%s 
 (dirty)
ReplayRendevousHandler
_handoff._tcp.
local
Network, %@  %@
listening, port=%ld
browsing for %@ in %@
Handoff:%@
NSNetServicesErrorDomain
NSNetServicesErrorCode
From %@
From host
__kCFStreamPropertyPeerAddress
HANDOFF v%g %@
PEERINFO SF[$%@]
VERSION v%g %@
# Terminating connection because we seem to already have a connection to this peer.
TERMINATE
NetworkReplay:%@%@ peer:%@/%@ %@
TERMINATED
%@/%ld
%@..(%ld)..%@
.. %ld ..
forever
%ld seconds
roughly %ld minutes
roughly %ld hours
roughly %ld days
a long time
%2.1g seconds
%2ld seconds
%3ld seconds
roughly %2ld minutes
roughly %2ld hours
UserActivity
NotificationType
HardCodedType 
HeroApp 
OpenURL 
UASuggestedActionType=%ld
https:
com.apple.mobilesafari
pasteboard-streams
com.apple.finder.noderef
v24@?0Q8@"NSError"16
-[SharingBTLEAdvertisementPayload initWithType:string:dynamicType:teamID:webpageURL:options:isCurrent:when:versionFlags:]
SharingAdvertisementPayload.mm
[hashedActivityType length] == sizeof( _bytes.hashedAdvertisementBytes )
-[SharingBTLEAdvertisementPayload setPayloadBytes:]
[payloadBytes length] == sizeof( sizeof( _bytes.hashedAdvertisementBytes ) )
$%@/%@%d%@%@%s%s%s
 pb-1
 pb-0
%@#%@
NOTIFICATION
http
https
UASharedPasteboardInfoWrapperPBInfoKey
UASharedPasteboardInfoWrapperExtraDataKey
UASharedPasteboardInfoWrapperExtraTypeKey
UASharedPasteboardInfoWrapperErrorKey
UASharedPasteboardInfoWrapperProtocolVersionKey
%@: Extra Data Type: %ld, Error: %@, PBInfo: %@
<private>
{?=[8I]}
[pid=%d/%d uid=%d/%d gid=%d/%d asid=%d sb=%@]
<%@ %p> %@
SharingAdvertiser
UASharingAdvertiser
sharingUpdate
advertisingPeriodic
AdvertiserCurrent
BTLEAdvertisement
 FORCE
FORCE
ADVERTISING:%@ %@ %@/ %@
ADVERTISING:- (was %@/%@)%s
%ld%c%ld
iPhone OS
macOS
OS X
v24@?0@"NSSet"8@"NSError"16
Handoff
Pasteboard
PAIRED_DEVICES:Changed, now have %ld devices paired.
PAYLOAD_REQUESTED:%@, %@ from %@
com.apple.fetchsamplepayload
randomdata
Sample
NO-TEAM-ID
com.apple.fetchsamplepayloadactivity
EncodedPayloadSize
Sharing.framework Advertiser:
(No SFActivityAdvertiser) 
 ** Bluetooth is disabled but IgnoreBluetoothDisabled is set, so the activity will be advertised. **
 ** Bluetooth is disabled so no activity will be advertised. **
 ** LowPowerMode is enabled so no activity will be advertised. **
 ** Activity advertising is disabled on this device. **
** SUSPENDED:
%ld sfActivityAdvertisers
, run=%ld times/%@ periodic=%ld/%@ %@%@%@
(current) 
+ Advertising Local Pasteboard.
ClipboardSharingDisabled
 ADVERTISING: %@%@ %@ /, data=%@, at %@
 LAST:%@, at %@
 LAST: nil
 No AppleID, %@
 AppleID:%@, devices%s%s:
(no handoff)
(no pasteboard)
v24@?0@"NSString"8@"NSError"16
%@/%@-%@-%@:+%ld, 
[%@/%@-%@-%@], 
%@%@
%@/%@/%@/%@ 
Watch OS
watchOS
TVOS
tvOS
SimController
simQ
IN FRONT
not in front
 - SIMULATOR:%@
com.apple.private.coreservices.lsuseractivityd.admininterface
com.apple.private.useractivity.sysdiagnose
STARTING pid=%d
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
EnableLogging
en_US
HH:MM:ss.SSSS
%@ %@
(user=%.5gs/system=%.5gs)
com.apple.Preferences
sharing
screensaver
screendim
useractive
best
v24@?0@"UAUserActivityInfo"8^B16
status
simulatorStatus
This platform does not support the iOS simulator.
recentEligible
Client: %@ %@
Command %@ not recognized
clear
### STATUS
### RECENT ACTIONS ###
ReplayManager
%.1f seconds %s
from now
%ld seconds %s
%ld minutes %s
at %2.2ld:%2.2ld
(nil)
%4.1f seconds
%2ld minutes
%2.3f hours
%2ld days, %ld hours
%5ld days
UARemotePasteboardDidSendLocalEvent
UAPingNotifier
UABestAppSuggestionController
NSXPCListenerDelegate
NSObject
UASharedPasteboardFileProvider
NSFileProvider
PowerManagerIdleTracker
UAPingUserActivityInfo
UASimulatorReceiver
UADiagnosticUtils
UAActivityReplayAdvertiser
UAUserActivityAnalyticsInfo
UABestAppUserActivityInfoSuppressionRecord
UABestAppSuggestionNotifier
UABestAppSuggestionManagerProtocol
UASharedPasteboardDataManager
_LSUserActivityWasContinuedInfo
UAActivityReplayReceiver
UAUserActivityAdditions
UAReceiver
UACornerActionManagerHandler
UALocalCornerActionItem
UAActivityBecameCurrentEvent
UCStreamCoderV2
UAStreamHandlerDelegate
UCFilePacketReceiver
UCStreamCoder
UADebugAdvertisableItem
UADispatchWatchdog
UARemotePasteboardBecameUnavailableEvent
UASimulatorAdvertiser
UAReplayClientController
UARemotePasteboardWasRequestedEvent
UACornerActionManager
UACornerActionManagerDebugInterface
UAPingController
UAClientController
UAActivityWasContinuedEvent
UADispatchScheduler
UAActivityNotifier
UAActivityNotifierProtocol
UCRemotePasteboardGeneration
UAPasteboardClientProtocol
UASharedPasteboardClientController
UASharedPasteboardManagerProtocol
SFCompanionAdvertiserDelegate
UASharedPasteboardAUXProtocol
UASharedPasteboardControllProtocol
UAStreamHandler
NSStreamDelegate
UAPingClient
UATimedPowerAssertions
UCExtractor
UASimulatorAdvertisementCreator
UAActivityWasSuggestedEvent
UCFilePackagerPacket
UCFilePackager
UAActivityReplay
NSNetServiceDelegate
SFActivityAdvertiserDelegate
SFActivityScannerDelegate
UALocalizedString
UAPairedSFActivityAdvertiser
UAPairedSFActivityScanner
UASimulatorController
UAPeerDevice
UARemotePasteboardTypeInfoRequestedEvent
UAUserActivityDefaults
UALocalItemReceiver
UADiagnosticManager
UAUserActivityClientProtocol
UAUserActivityClientResponseProtocol
UABestAppSuggestionManagerResponseProtocol
UASharedPasteboardManagerResponseProtocol
UALoggingAdvertiser
UABestAppSuggestionDarwinNotifier
FBSDisplayLayoutElement
FBSUIApplicationLayoutElement
UAUserActivityClientProcessesController
UASharedPasteboardDataRequester
UABluetoothStatus
UAAnalyticsEvent
UserActivityToBTLEPayload
UASharingReceiver
UASharedPasteboardInputStreamManager
SharingBTLESuggestedItem
UASharedPasteboardActivityInfo
UASharedPasteboardOutputStreamManager
UAUserActivityAdvertisableItem
UAAdvertisableItem
UARemotePasteboardBecameAvailableEvent
UAActivityWasDiscoveredEvent
UAMockActivityAdvertiser
UAMockActivityScanner
UAMockActivityAdvertisement
NSSecureCoding
NSCoding
UAUserActivityClientPendingUpdateTask
UAUserActivityClientProcess
UANetworkReplayRendevousHandler
NSNetServiceBrowserDelegate
UANetworkReplayController
UCArchiver
UAPBStreamCoderV1
SharingBTLEAdvertisementPayload
NSCopying
UASharedPasteboardInfoWrapper
UASimulatorSuggestedItem
UAAuditToken
UASharingAdvertiser
UASimulator
UAReplayAdvertisableItem
UADispatchReceiver
ActivityManagerDebugRecentActionItem
ActivityManagerDebuggingManager
UAResumableActivitiesAdministrativeProtocol
UAResumableActivitiesSysdiagnoseSupportProtocol
UAAdvertiser
@16@0:8
Q16@0:8
v24@0:8Q16
B16@0:8
v20@0:8B16
q16@0:8
v24@0:8q16
@24@0:8@16
v24@0:8@16
v16@0:8
@"NSMutableSet"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
@"NSXPCListener"
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@16@24
v40@0:8@16@24@32
v32@0:8@"NSURL"16@?<v@?@"NSError">24
@"NSURL"16@0:8
@"NSOperationQueue"16@0:8
v40@0:8@"NSURL"16@24@?<v@?@"NSError">32
v32@0:8@"NSURL"16@24
@"NSURL"24@0:8@"NSURL"16
v32@0:8@"NSURL"16@?<v@?@"NSURL">24
v32@0:8@16@"NSURL"24
v40@0:8@"NSURL"16@24@"NSURL"32
v40@0:8@"NSURL"16@"NSURL"24@?<v@?B>32
@"NSOperationQueue"
@"NSURL"
@"NSMutableDictionary"
@48@0:8@16@24d32@?40
Q32@0:8@16d24
d16@0:8
v24@0:8d16
@?16@0:8
v24@0:8@?16
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSDate"
@24@0:8Q16
B20@0:8B16
@"UASimulator"
@"NSArray"
Q24@0:8Q16
@"UAUserActivityInfo"
@"NSUUID"
@"NSError"
v32@0:8q16@?24
v36@0:8@16Q24B32
v24@0:8@?<v@?@"NSArray"@"NSDate"d>16
v32@0:8q16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSUUID"16@"NSDictionary"24
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v36@0:8@"NSUUID"16Q24B32
v24@0:8@?<v@?B>16
@"NSXPCConnection"
@"UADispatchScheduler"
@"NSSet"
@"UACornerActionManager"
@48@0:8@16Q24@32@40
@"UAUserActivityClientProcess"
v40@0:8@16@24q32
v32@0:8@16q24
v40@0:8@"UAStreamHandler"16@"NSData"24q32
v32@0:8@"UAStreamHandler"16q24
v32@0:8@"UAStreamHandler"16@"NSError"24
v32@0:8@"UAStreamHandler"16@"NSData"24
v24@0:8@"UAStreamHandler"16
v40@0:8@"UCFilePackager"16@"NSData"24q32
v24@0:8@"NSError"16
v52@0:8@16@24@?32@?40B48
v52@0:8@"NSFileHandle"16@"NSProgress"24@?<v@?@"UASharedPasteboardInfoWrapper"@"NSError">32@?<v@?@"<UCStreamCoder>"Q@"NSError">40B48
v32@0:8@"UASharedPasteboardInfoWrapper"16@?<v@?@"<UCStreamCoder>"Q@"NSError">24
@"UAStreamHandler"
@"NSDictionary"
@"NSMutableArray"
@"UADispatchWatchdog"
@"NSObject<OS_dispatch_source>"
@"UASharedPasteboardInfoWrapper"
@"NSFileHandle"
@"NSProgress"
@"NSObject<OS_dispatch_semaphore>"
@"UCFilePackager"
@32@0:8Q16@24
@40@0:8@16d24@?32
@20@0:8B16
B24@0:8d16
i16@0:8
v20@0:8i16
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_group>"
@"NSUserDefaults"
@"ActivityManagerDebuggingManager"
@"UASharedPasteboardClientController"
@"UAPingController"
@"UATimedPowerAssertions"
@"PowerManagerIdleTracker"
@"NSTimer"
@"UABluetoothStatus"
@"NSObject"
@"UAPingClient"
@"UAPingNotifier"
@24@0:8d16
d24@0:8@16
@"UAUserActivityAnalyticsInfo"
@48@0:8@16d24@32@?40
@32@0:8@"UACornerActionManager"16@"NSString"24
@"NSSet"16@0:8
v24@0:8@"NSSet"16
@"UASharedPasteboardDataRequester"
@"UASharedPasteboardInfo"
v24@0:8@?<v@?>16
v32@0:8@16Q24
v28@0:8i16@?20
v24@0:8@?<v@?@"NSString">16
v32@0:8@"UASharedPasteboardInfo"16Q24
v28@0:8i16@?<v@?@"UASharedPasteboardInfo"@"NSError">20
v40@0:8@"SFCompanionAdvertiser"16@"NSInputStream"24@"NSOutputStream"32
v28@0:8B16@20
v40@0:8@16q24@?32
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
@"SFCompanionAdvertiser"
@"UCRemotePasteboardGeneration"
@"UASharedPasteboardOutputStreamManager"
@"UASharedPasteboardInputStreamManager"
@"NSMutableSet<UCStreamCoder>"
^{__CFUserNotification=}
@"UARemotePasteboardWasRequestedEvent"
@"UARemotePasteboardDidSendLocalEvent"
@"NSBundle"
v32@0:8@"NSStream"16Q24
@40@0:8@16@24@32
B32@0:8@16q24
@"NSInputStream"
@"NSOutputStream"
@"<UAStreamHandlerDelegate>"
@"NSMutableData"
@"NSData"
@56@0:8@16d24@32@40@?48
@40@0:8@16d24@32
@56@0:8@16q24q32@40@48
@"<UCFilePacketReceiver>"
v24@0:8@"NSNetService"16
v32@0:8@"NSNetService"16@"NSDictionary"24
v32@0:8@"NSNetService"16@"NSData"24
v40@0:8@"NSNetService"16@"NSInputStream"24@"NSOutputStream"32
v56@0:8@16@24@32@40@?48
v48@0:8@16@24@32@40
v56@0:8@"SFActivityAdvertiser"16@"NSData"24@"NSString"32@"SFPeerDevice"40@?<v@?@"NSUUID"@"NSData"@"NSError">48
v32@0:8@"SFActivityAdvertiser"16@"NSSet"24
v48@0:8@"SFActivityAdvertiser"16@"NSUUID"24@"SFPeerDevice"32@"NSError"40
v32@0:8@"SFActivityScanner"16@"SFActivityAdvertisement"24
v32@0:8@"SFActivityScanner"16@"SFPeerDevice"24
v32@0:8@"SFActivityScanner"16@"NSSet"24
B32@0:8@16@?24
v56@0:8@16@24@32Q40@?48
@"SFPeerDevice"
@"UAActivityReplayAdvertiser"
@"UAActivityReplayReceiver"
@"UAReplayClientController"
@"UAMockActivityAdvertiser"
@"UAMockActivityScanner"
v48@0:8@16@24@32@?40
@"UAPairedSFActivityScanner"
@"<SFActivityAdvertiserDelegate>"
@"UAPairedSFActivityAdvertiser"
@"<SFActivityScannerDelegate>"
@20@0:8I16
v28@0:8I16@20
B28@0:8@16B24
q32@0:8@16q24
d32@0:8@16d24
@"UAUserActivityClientProcessesController"
v32@0:8@16r^{?=[8I]}24
Q32@0:8Q16Q24
v40@0:8q16@24@?32
v36@0:8@16B24@?28
v28@0:8@16B24
v52@0:8@16B24@28@36B44B48
v36@0:8i16@20@?28
v40@0:8q16@"NSDictionary"24@?<v@?q@"NSDictionary"@"NSError">32
v32@0:8@"NSUUID"16@?<v@?@"UAUserActivityInfo"@"NSError">24
v36@0:8@"UAUserActivityInfo"16B24@?<v@?@"NSError">28
v28@0:8@"NSUUID"16B24
v24@0:8@"NSUUID"16
v32@0:8@"NSString"16@"NSString"24
v52@0:8@"NSUUID"16B24@"NSURL"28@"NSDate"36B44B48
v32@0:8@"UAUserActivityInfo"16@?<v@?@"NSUUID"@"NSError">24
v24@0:8@?<v@?@"NSUUID"@"NSString"@"NSString"@"NSString"@"NSError">16
v32@0:8@"NSUUID"16@?<v@?B@"NSString"i@"NSString"@"NSError">24
v40@0:8@"NSDictionary"16@"NSPredicate"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSFileHandle"@"NSError">32
v36@0:8i16@"NSDictionary"20@?<v@?@"NSError">28
v32@0:8@"NSUUID"16@?<v@?@"UAUserActivityInfo"B@"NSError">24
v28@0:8B16@"NSFileHandle"20
v40@0:8@16@24d32
v40@0:8@"NSArray"16@"NSDate"24d32
v48@0:8@"NSFileHandle"16@"NSURL"24@"NSData"32@?<v@?@"UASharedPasteboardInfo"@"NSError">40
v40@0:8@"NSFileHandle"16@"NSURL"24@?<v@?@"UASharedPasteboardInfo"@"NSError">32
B20@0:8i16
v36@0:8i16@20*28
v28@0:8i16@20
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@20@0:8i16
B28@0:8@16i24
@"FBSDisplayLayoutMonitor"
@"BKSApplicationStateMonitor"
@"UALocalItemReceiver"
@"SFActivityScanner"
^{BTSessionImpl=}16@0:8
^{BTLocalDeviceImpl=}16@0:8
@24@0:8@?16
v32@0:8^{BTSessionImpl=}16i24i28
v24@0:8^{BTSessionImpl=}16
v32@0:8^{BTLocalDeviceImpl=}16i24i28
^{BTSessionImpl=}
^{BTLocalDeviceImpl=}
{?="sessionEvent"^?}
{?="statusEvent"^?"leTestStopped"^?"afhMapChanged"^?}
@64@0:8@16@24@32@40@48@56
v44@0:8@16@24@32B40
@44@0:8@16I24@28@36
@60@0:8@16@24@32I40@44@52
@108@0:8@16@24@32I40Q44@52@60@68@76@84@92@100
@100@0:8@16@24@32I40Q44@52@60@68@76@84@92
B24@0:8@?16
@"SharingBTLEAdvertisementPayload"
@"UASharingReceiver"
^B16@0:8
v24@0:8^B16
B28@0:8B16@?20
@"UAActivityReplay"
v56@0:8@16@24@32q40@?48
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B36@0:8@16B24@?28
C16@0:8
v20@0:8C16
@"UAAuditToken"
@"UAUserActivityAdvertisableItem"
@"NSObject<OS_os_transaction>"
v36@0:8@16@24B32
v24@0:8@"NSNetServiceBrowser"16
v32@0:8@"NSNetServiceBrowser"16@"NSDictionary"24
v36@0:8@"NSNetServiceBrowser"16@"NSString"24B32
v36@0:8@"NSNetServiceBrowser"16@"NSNetService"24B32
B36@0:8@16i24@28
@"NSNetServiceBrowser"
@"NSNetService"
B40@0:8@16@24q32
@48@0:8@16@24@32@40
@24@0:8^{_NSZone=}16
@40@0:8@16B24@28C36
@36@0:8@16B24@28
@80@0:8Q16@24@32@40@48@56B64@68C76
@76@0:8Q16@24@32@40@48@56B64@68
B20@0:8C16
{?="hashedAdvertisementBytes"[7C]"optionBits"C"timeOffset"C}
@48@0:8{?=[8I]}16
v24@0:8^v16
r*16@0:8
{?=[8I]}16@0:8
{?="val"[8I]}
B36@0:8@16B24@28
@40@0:8@16I24i28Q32
@"UASimulatorController"
@"UASimulatorAdvertiser"
@"UASimulatorReceiver"
@"UASimulatorAdvertisementCreator"
@36@0:8q16d24B32
v32@0:8Q16@?24
v88@0:8@16Q24@32@40@48@56@64d72d80
v28@0:8B16@?20
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"NSString"16@24
v32@0:8@"NSString"16@?<v@?@"NSUUID">24
v24@0:8@?<v@?@"NSUUID">16
v32@0:8Q16@?<v@?@"NSArray">24
v24@0:8@?<v@?@"NSArray">16
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary">24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray">24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSString">32
v32@0:8@"NSDictionary"16@?<v@?@"NSString">24
v88@0:8@"NSUUID"16Q24@"NSString"32@"NSString"40@"NSData"48@"NSString"56@"NSString"64d72d80
v28@0:8B16@?<v@?@"NSDictionary"@"NSError">20
v32@0:8@"NSString"16@"NSData"24
v32@0:8@"NSString"16q24
v36@0:8@"NSString"16@"NSString"24B32
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSData"@"NSDate"@"NSUUID"@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSArray"@"NSError">24
v28@0:8B16@?<v@?@"NSArray">20
{timeval=qi}16@0:8
@"SharingBTLESuggestedItem"
@"UANetworkReplayRendevousHandler"
{timeval="tv_sec"q"tv_usec"i}
PING: Received payload for PING; creating PONG response. error=%{public}@
PING: Removing pong item %{public}@/%{private}@ because it was continued 
BESTAPP: Created controller to handle connections to Springboard/Dock
BESTAPP: suspend
BESTAPP: resume
BESTAPP: terminate
BESTAPP: received listener request from process %ld
BESTAPP: Creating listening notifier for process %ld
*** Attempt to access BestAppSuggestion xpc interface fror process %{public}@, which doesn't have the %{public}@ entitlement
Unlocking reader %@
providing item to reader %@
Currently locked, saving callback for when unlocked
_provideItemAtURL called without readerID, creating UUID to act as readerID
IdleTracker:alloc(%{public}@) interval=%{public}g
IdleTracker:dealloc(%{public}@
IdleTracker: %{public}@: mostSignificantLevel=%{public}@ %{public}s%{public}s weakSelf=%{public}p
IdleTracker: %{public}@, callingBlock, %{public}s, interval=%{public}@
SIMULATOR: Setting receivedItems to %{private}@
SIMULATOR: Items changed ( from %{private}@ ), so updating and signalling.
includePayload=%{public}s
SIMULATOR: Clearing current item, because it has been removed ( was %{public}@/%{private}@).
SIMULATOR: Updating existing item, %{public}@ %{private}@/%{private}@
SIMULATOR: Item %{public}@ seems to be different from %{public}@, so changing received item & updating lists.
SIMULATOR: Looking for %{private}@
SIMULATOR: Found bundle ID for item %{public}@/%{private}@, %{private}@
SIMULATOR: Unable to find application to handle typeIdentifier %{private}@:%{private}@ for item %{public}@
FAILED to decode %@ object for useractivityd <-> simulator connection, %@
Removing bestAppSuggestion notifier %{public}@
Invalidating bestAppSuggestion notifier
setItems(%{private}@)
BESTAPP: -- Ignoring supressed item, %{private}@ %{public}@ (until %{public}@, now=%{public}@)
BESTAPP: -- Ignoring supressed item, %{private}@ %{public}@ (until %{public}@, item.when=%{public}@, now=%{public}@)
BESTAPP: Ignoring item %{public}@/%{private}@ %{public}@, because it is earlier than %{public}@
BESTAPP: -- Ignoring item %{public}@/%{private}@, because it is not a local action
BESTAPP: Not notifying clients about new best app %{public}@/%{private}@ .when=%{public}@ (and %lu more best app options) because it matches last item.
Notifying clients about new best app: %{public}@/%{private}@ (and %lu more best app options)
BESTAPP: supressedUntil=%{private}@
BESTAPP: Setting .hardSupressedUntil for %{public}@ to nil, because that time has passed.
BESTAPP: Setting .supressUntil for %{public}@ to nil, because that time has passed.
BESTAPP: Setting .supressedUntil for %{public}@ to nil, because the .lastInterestingTime is earlier the last update for this item (%{public}@ vs %{public}@ (%{public}@ vs %{public}@), when=%{public}@).
doConnected, bestApp client connected. pid=%d
doDetermineBestAppSuggestionWithCompletionHandler, bestApp=%{public}@/%{private}@ (and %lu more app suggestions)
doDetermineBestAppSuggestionWithCompletionHandler, bestItem = nil
uuid=%{public}@ options=%{public}@
BESTAPP: Updating existing supression record for item %{public}@/%{private}@, %{public}@
BESTAPP: Setting supressedUntil for item %{public}@/%{private}@ item.when=%{public}@ to %{public}@/%{public}@ lastInterestingTime=%{public}@
doLaunchFollowUp cornerActionItem: %{private}@, interactionType: %lx, cancelled: %{public}@
Empty wasContinuedInfo, creating it
WasContinuedInfo scheduledForSubmission: %{public}@
-- Scheduling messagetracer info for submission: %{public}@, %{private}@
-- Sumbitting metric info for %{public}@, %{private}@
doRegisterForBestAppChangeNotification, clientPid=%{public}ld
doUnregisterForBestAppChangeNotification, clientPid=%{public}ld
Queuing fetch for bestAppUUID %{public}@
bestAppFetch
result=%{public}d enableTelemetry=YES 
### Auto-exiting after %g seconds; likely crashed during a unit test and want to clean up.
%{public}s: Starting up, %{public}s %{public}s %{public}s version %g built on %{public}s %{public}s.  args=%{public}@
*** terminateServerIfExecutableIsReplaced fd = %d
*** Detected a change to %{public}s, so terminating server in %f seconds.
*** Cancelling source.
[FILE MANAGER] ERROR creating shared pasteboard dir: %@
[FILE MANAGER] Shared Path: %@
[FILE MANAGER] Error creating subdir: %@
[FILE MANAGER] Path for file UUID: %@ -> '%@'
[FILE MANAGER] Created file at path: %@
[FILE MANAGER] Failed to create file at path: %@ / %s
[FILE MANAGER] Failed to create dir at path: %{public}@ / %{public}@
[FILE MANAGER] Created dir at path: %{public}@
[FILE MANAGER] Failed to remove item at path: %{public}@ / %{public}@
[FILE MANAGER] Removed item at path: %{public}@
[FILE MANAGER] Creating file for local pasteboard blob at path: %@
[FILE MANAGER] Created Handle: %@
[FILE MANAGER] Creating file for remote pasteboard blob at path: %@
[FILE MANAGER] Error creating clone items dir: %@
[File Manager] Error writting data for %{public}@: %{public}@
[File Manager] Releasing lock for item %@
[File Manager] Released lock for item %@
[File Manager] Canceling all file coordiation providers
Already have lock for file, deleting
Error deleting item: %{public}@
Deleted file for item: %{public}@
Obtaining write lock to delete file for item: %{public}@
Error getting coord write for deleting item: %{public}@
Attempting to deleta archive: %@
Error deleting archive: %{public}@
Attempting to delete item: %@
We have lock for the file, we are receiving the item and should not delete it at this time
Obtaining write lock to delete file
Deleting file for item: %@
Attempting to delete copied item: %{private}@
Deleted copied item: %{private}@
Failed to delete item: %{private}@
HANDLER: %{public}@ is being %{public}s
HANDLER: %{public}@ is being suspended ( was not )
HANDLER: %{public}@ is being resumed ( was suspended )
HANDLER: %{public}@ is being terminated %{public}@
Streams stalled, erroring out the paste operation.
[CODERV2] dealloc
[CODERV2] State: %@ -> %@
[CODERV2] Streams closed: %{public}@
[CODERV2] Reveived message for tag %{public}@
[CODERV2] Did write tag %{public}@
[CODERV2] Did write data chunk
[CODERV2] Done writting pasteboard data chunks
[CODERV2] Requesting delivery for %{public}@
[CODERV2] Req result: %d
[CODERV2] Done sending archive chunks
[CODERV2] Stopping
Received stop message with error: %@
[CODERV2] Archvie requested for UUID: %@
[CODERV2] File requested with invalid UUID: %{public}@
[CODERV2] Delivering file packets for UUID: %@
[CODERV2] Received pasteboard info, requesting data
[CODERV2] Error receiving pasteboard info: %{public}@
[CODERV2] Received pasteboard data response (%{public}@/%{public}@)
[CODERV2] Error writing data to file: %{public}@
[CODERV2] Received pasteboard file response %@ %ld%% (%{public}@/%{public}@)
[CODERV2] Received all data for archive: %@
[CODERV2] Total expected data length: %{public}@
[CODERV2] Sending heartbeat
[CODERV2] Sending pasteboard info
[CODERV2] Sending pasteboard data request
[CODERV2] Requesting archive for UUID: %{public}@
[CODERV2] Building file packager to send pasteboard data
[CODERV2] Requesting pasteboard info, will return info early: %{public}@
[CODERV2] Timout waiting for item lock sememphore
[CODERV2] Calling received info handler
[CODERV2] Skipping call to received info handler
[CODERV2] Calling pasteboard received handler
[CODERV2] Skipping call to pasteboard received handler
[CODERV2] Item %d has public.file-url with uuid: %@
[CODERV2] Error obtaining lock for item %d: %{public}@
[CODERV2] Setup to send pasteboard, waiting
[CODERV2] Sending pasteboard with files
[CODERV2] Archiving item in our clone dir, no need for sandbox ext
[CODERV2] Error getting sandbox info
[CODERV2] Got extension data: %@
[CODERV2] Got extension id: %lld
[CODERV2] Starting to archive %@
[CODERV2] Don't do anything with archives after stream is marked done
[CODERV2] Error creating archive for file: %@
[CODERV2] Created packager for archive: %@
[CODERV2] Done archiving all objects, total send size: %@
[CODERV2] No files to archive, total send size: %@
[CODERV2] Calling pasteboard sent handler
[CODERV2] Skipping call to pasteboard sent handler
[CODERV2] Got data from packager, packet #: %d, tag: %ld
[CODERV2] Finished sending packages: %ld / %{public}@
[CODERV2] Error from packager: %{public}@
Starting watchdog: %@ - %fs
Canceling watchdog: %@
Triggering watchdog: %@ - %fs - %@
Setting advertisable items to %{private}@
SIMULATOR: Telling paired client that the advertised item %{public}@/%{private}@ changed.
result=%{private}@/%ld items
-- signalling thread to determine what activity to advertise because one of our userActivityItems changed.
DETERMINE: Determining list of items to be advertised thread starting up: 
DETERMINE: Checking for recentlyEligible items because the screen is dimmed (includeRecentItems == YES).
DETERMINE: possible items to advertise:%{private}@
DETERMINE: Since this activityItem's .userInfo, %{public}@ type=%{private}@, has unsynchronized cloud documents, we can't actually advertise this item.
handoffFetchSpeculative enableTelemetry=YES 
success=%{public}d enableTelemetry=YES 
handoffFetchSpeculative
DETERMINE: Activity %{public}@/%{private}@ had unsynchronized documents, so we asked it to update and we've heard back.
DETERMINE: Activity %{public}@/%{private}@ had unsynchronized documents, so we asked it to update and we've heard back with an error %{public}@.
DETERMINE: %{public}@/%{private}@ as the current item-to-advertise.
DETERMINE: No item is being advertised, so removing any previously set of advertised items.
Determining idleDetermination, entering.
IDLE: Setting preventAdvertisingSuspensionBecauseOfAlwaysPickItem = YES for item %{public}@
IDLE: Setting self.userIsInactivePowerAssertion == nil because there are no items being advertised.
IDLE: Setting shouldSuspendAdvertising == YES because userInactivePowerAssertion == nil
IDLE: Setting self.screenDimmedPowerAssertion == nil because there are no items being advertised.
IDLE: Setting shouldSuspendAdvertising == YES because self.screenDimmedPowerAssertion == nil
IDLE: Setting shouldSuspendAdvertising == YES because the device is locked and our power assertion has expired.
IDLE: Setting shouldSuspendAdvertising to NO because one or more of our assertions still exists. (%s%s%s%s)
IDLE: Setting systemShouldNotBeAdvertising=NO because advertiser %{public}@ always wants to be advertised.
IDLE: Setting shouldSuspendAdvertising = YES because mustSuspendAdvertising == YES
IDLE: Determined that advertising should be suspended, removing any active advertisement and setting self.systemHasSuspendedAdvertisements = YES ( idle=%.2f seconds)
*** SUSPENDING ADVERTISER %{public}@
*** RESUMING ADVERTISER %{public}@
 -- there are listening clients, so firing the check-and-update-BestApplication thread.
Creating loop to check-for-and-update BestApplication
Candidate bestAppSuggestions: %{private}@
CornerActionManger:  suspend ( was suspended = %{public}@)
*** Suspending advertiser %{public}@
CornerActionManger:  resume
*** Resuming advertiser %{public}@
*** Resuming receiver %{public}@
UserActivity, received UAUserActivityManagerActivityContinuationIsEnabledChangedNotification notification, so spinning all threads.
Backlight %@
setUserIsActive: %{public}@ (was %{public}@)
setUserIsActive, setting to NO, so creating assertion if warranted.
setUserIsActive, creating assertion because we are advertising something
userInactivePowerAssertion, power assertion timed out and expired, so triggering user idle determination.
userInactivePowerAssertion, userInactivePowerAssertion power assertion removed.
setUserIsActive, no need for assertion, triggering updateAdvertisableItems
userInactivePowerAssertion, setting to NO, so removing power assertion & triggering idle determination.
updateScreenDimState: %{public}@ (was %{public}@)
updateScreenDimmedState, setting to YES, so creating assertion if needed.
updateScreenDimmedState, creating assertion
screenDimmedPowerAssertion, power assertion timed out and expired, so triggering user idle determination.
screenDimmedPowerAssertion, screenDimmedPowerAssertion power assertion removed.
updateScreenDimmedState, no need for assertion, triggering state updates
updateUIDeviceLockedState, setting to NO, so removing power assertion & triggering idle determination.
updateUIDeviceLockedState: %{public}@ (was %{public}@)
updateUIDeviceLockedState, setting to YES, so creating assertion if we have an advertisement.
Creating power assertion of %g seconds, to keep advertisement alive.
updateUIDeviceLockedState, power assertion timed out and expired, so triggering user idle determination.
updateUIDeviceLockedState, power assertion removed.
updateUIDeviceLockedState, no need for assertion, triggering state updates
updateUIDeviceLockedState, device is unlocked, so removing power assertion & triggering advertising & idle determination.
addAdvertiser(%{public}@)
removeAdvertiser(%{public}@)
## Received com.apple.location.changed so restarting deamon
No remote device type set
SCHEDULE:%{public}@, next=%{public}@ freq=%g
SCHEDULE:%{public}@ scheduleNext, interval=%g
SCHEDULE: Setting next time to DISPATCH_TIME_FOREVER because interval > anything reasonable
SCHEDULE:%{public}@, scheduling down to %f seconds ( _next=%{public}@ )
SCHEDULE:%{public}@, next=%{public}@/%lld ( was %{public}@/%lld )
SCHEDULE:%{public}@, next=NOW ( was %{public}@ ) freq=%g
SCHEDULE:%{public}@, run.  
SCHEDULE:%{public}@, DONE run, next=%{public}@
SCHEDULE:%{public}@, setFreq, next=%{public}@ freq=%g
SCHEDULE:%{public}@, RESET, next=FOREVER ( was %{public}@ ) freq=%g
Created remote generation %{public}@
Cannot update state from %@ to %@
Remote generation dealloc (type requested, data requested): %{public}@ %@
[REMOTE GEN] Responding to type Info request
[REMOTE GEN] Fetching remote type info
[REMOTE GEN] Type payload fetch error: %{public}@
[REMOTE GEN] Received type info
[REMOTE GEN] Setting protocol version: %d
[REMOTE GEN] Received extra data, saving for later
[REMOTE GEN] Type Fetch Info: %{private}@
[REMOTE GEN] Requesting types before PB data
[REMOTE GEN] Waiting on type results
[REMOTE GEN] Timeout requesting type info
[PBOARD CONTROLLER] Creating pboard client controller
[PBOARD CONTROLLER] Client Notification Connection interrupted ( pboardd crash? )
[PBOARD CONTROLLER] Client Notification Connection invalidated; remote copy/paste will no longer work.
[PBOARD CONTROLLER] Screen sharing session started, disabling universal clipboard
[PBOARD CONTROLLER] No more screen sharing sessions, enabling universal clipboard
Process %d requested for UC to disable
[PBOARD CONTROLLER] Return Client Items in Order: %@
[PBOARD CONTROLLER] Sending client xpc remote available update: %@
[PBOARD CONTROLLER] Error getting client connection: %@
[PBOARD CONTROLLER] Got type update from client, gen: %lu, %@
[PBOARD CONTROLLER] Ignoring type updates, screen sharing session in progress
[PBOARD CONTROLLER] Ignoring type updates, clipboard sharing disabled
[PBOARD CONTROLLER] Received pasteboard info: %@
[PBOARD CONTROLLER] Clear local pasteboard info: from client
[PBOARD CONTROLLER] Remove Local Types Fired
[PBOARD CONTROLLER] Remove Local Timer Fired
[PBOARD CONTROLLER] Pasteboard types fetch requested
[PBOARD CONTROLLER] Pasteboard data fetch requested for pid: %d
[PBOARD CONTROLLER] Already have remote data, using it: %@
[PBOARD CONTROLLER] Requesting data from remote device
[PBOARD CONTROLLER] Starting timer to show UI in %lf sec
[PBOARD CONTROLLER] Pasteboard Fetch Cancelled
[PBOARD CONTROLLER] Payload fetch error: %{public}@
[PBOARD CONTROLLER] PBData came with stream request, was a small pboard
[PBOARD CONTROLLER] Error creating remote data file
ERROR: Error writing pasteboard data blob: %@
[PBOARD CONTROLLER] Requesting to open streams with version: %@
[PBOARD CONTROLLER] Opened streams with error: %{public}@
[PBOARD CONTROLLER] Opened streams
[PBOARD CONTROLLER] Could not create data file for remote pasteboard
[PBOARD CONTROLLER] Error receiving pboard info: %{public}@
[PBOARD CONTROLLER] Received error from remote: %{public}@
[PBOARD CONTROLLER] Received pboard info: %@
URL on pasteboard: %@
Creating %@ as type %@
[PBOARD CONTROLLER] new URL for item: %@
[PBOARD CONTROLLER] Issuing sandbox extension
[PBOARD CONTROLLER] Got extension
[PBOARD CONTROLLER] Error issuing extension
[PBOARD CONTROLLER] Saving sandbox extension to dict
[PBOARD CONTROLLER] Corrupt file: url in stream, %{public}@
[PBOARD CONTROLLER] Non-file: url provide in stream, %{public}@
[PBOARD CONTROLLER] Sending extensions: %@
[PBOARD CONTROLLER] Paste Fetch Info: %@
[PBOARD CONTROLLER] Archiving pbinfo: %@
[PBOARD CONTROLLER] Pboard is small enough to send via BTLE payload
[PBOARD CONTROLLER] Pasteboard Sent Info: %{private}@
[PBOARD CONTROLLER] Starting pboard service for paste, version: %@
[PBOARD CONTROLLER] Pasteboard data alread fetched sending now
[PBOARD CONTROLLER] Failed to create local pasteboard data file
[PBOARD CONTROLLER] Error getting client object proxy: %{public}@
[PBOARD CONTROLLER] pbsize: %ld, payload size limit: %ld
[PBOARD CONTROLLER] Telling client pboard will be fetched
[PBOARD CONTROLLER] Error getting client connection for write notification: %@
[PBOARD CONTROLLER] Attempting to get local pasteboard data
[PBOARD CONTROLLER] Getting pboard written to file
[PBOARD CONTROLLER] Received streams, waiting for local data to be available
[PBOARD CONTROLLER] Local data available, starting out stream
[PBOARD CONTROLLER] Error sending types: %{public}@
[PBOARD CONTROLLER] Finished sending types: %@
[PBOARD CONTROLLER] Local Pasteboard Sent Info: %{private}@
[PBOARD CONTROLLER] Timeout getting local pasteboard
[PBOARD CONTROLLER] New client connection does not have correct entitlement: %@
[PBOARD CONTROLLER] Received new client connection: %@
[PBOARD CONTROLLER] Client interrupted
[PBOARD CONTROLLER] Client invalidated
[PBOARD CONTROLLER] Received new aux connection: %@
[PBOARD CONTROLLER] AUX interrupted
[PBOARD CONTROLLER] AUX invalidated
Controller Connection Invalidated
No more active controllers, Re-enabling UC
New Controller connection, disabling UC
[PBOARD CONTROLLER] show pbui, but already visible, skipping
[PBOARD CONTROLLER] Setting durration time for %lf sec
[PBOARD CONTROLLER] Setup progress UI: %@, %@, %@
[PBOARD CONTROLLER] Creating notification for progress ui with options: %@
[PBOARD CONTROLLER] Notification creation err: %d
[PBOARD CONTROLLER] Waiting for notification result
[PBOARD CONTROLLER] Response flags: %lu
[PBOARD CONTROLLER] User cancelled the paste
[PBOARD CONTROLLER] Paste was cancelled
[PBOARD CONTROLLER] Unexpected result from user notification
[PBOARD-CONTROLLER] User notification was no longer current at the time it was cancelled or completed, so ignoring. %{public}lu
[PBOARD CONTROLLER] Failed to created user notification ref, err=%{public}d
[PBOARD CONTROLLER] Adding hide delay of %lf sec
[PBOARD CONTROLLER] Hide progress in %lf sec with fail: %@
[PBOARD CONTROLLER] iOS needs a minimum delay of 1.25 sec, updating delay to 1.25
[PBOARD CONTROLLER] Canceling the user notification
[PBOARD CONTROLLER] No notification, must have already been canceled
[STREAM HAND] Starting Streams
[STREAM HAND] Starting Input Stream
[STREAM HAND] Starting Output Stream
[STREAM HAND] Call to stop streams
[STREAM HAND] Trying to stop streams
[STREAM HAND] Stoping streams
[STREAM HAND] Write raw data of length: %ld
[STREAM HAND] Cannot write raw data, in message mode
[STREAM HAND] Write message tagged %ld of length: %ld
[STREAM HAND] Cannot write message, in raw data mode
[STREAM HAND] Did not write anything, setting flag
[STREAM HAND] Received error on stream %{public}@: %{public}@
[STREAM HAND] Both Streams opened
[STREAM HAND] Wrote %ld raw bytes to output stream
[STREAM HAND] We should not be writting more data than we have!
[STREAM HAND] Error writing message: %{public}@
[STREAM HAND] Should not be writting 0 data to stream
-dealloc for power assertion %{public}@/%{public}@
ASSERTION: %{public}@ Calling block with NO, in -dealloc
ASSERTION: %{public}@ Releasing assertion %ld, in -dealloc
ASSERTION: %{public}@ Scheduling assertion for %g seconds.
ASSERTION: %{public}@ Rescheduling assertion for %g seconds (was %.2g seconds from now).
ASSERTION: %{public}@ No need to update assertion; request for %g seconds is less than current expiration, in %.2g seconds.
%s, IOPMAssertionCreateWithProperties returned %x
ASSERTION: %{public}@ Power assertion /%ld created.
ASSERTION: %{public}@ Power assertion %ld released.
ASSERTION: %{public}@ Updating needToCallBlock => NO
ASSERTION: %{public}@ Calling block with YES because assertion timed out
SIMULATOR: Returning received activities %{private}@ as eligibleItems
[Packager] Queuing delivery block %d/%d
[Packager] Delivery signaled
[Packager] Delivering packet %d/%d
[Packager] Reading packet data %d/%d
PROCESSCOMMAND:%{private}@
REPLAY: Destroying replay object because the peer's UUID %{public}@ matched our own.
REPLAY: Terminating UAActivityReplay because TERMINATE was received.
=== Forcing item into replay client: %{private}@
=== UPDATED PAYLOD FOR item %{private}@ 
=== WAITING FOR ACTIVITY %{private}@ to be resumed (for %g seconds)
=== REMOVING ACTIVITY %{private}@ to be resumed
NETWORK: Received broadcasted advertisement %{private}@
REPLAY: PULLPAYLOAD request, for advertisementPayload=%{private}@
REPLAY: PULLPAYLOAD request, got encodedData %{private}@ from creating application for advertisementPayload %{private}@, so returning that to paired client over the network.
REPLAY: RETURNPAYLOAD request, for advertisementPayload=%{private}@
REPLAY: RETURNPAYLOAD request, found existing payloadHandler in _pendingPayloadFetches for advertisementPayload=%{private}@
REPLAY: Didn't find handler for advertisement %{public}@/%{private}@, pendingPayloads=%{private}@
REPLAY: Sending encoded data %{private}@ to activity handler.
terminate
Looking for localized string for key: %@
Falling back to NSLocalizedString
SIMULATOR: Terminating all UASimulators.
SIMULATOR: RegisterWithParentWithVersion simulatorVersion=%llu, serverPort=%x pid=%d
SIMULATOR: Creating UASimulator to be parent simulator in OSX, uuid=%{public,posix:uuid}.16P port=%x
SIMULATOR: Failed to create simulator; simulated useractivityd client version %ld is unknown.
SIMULATOR: Detected death of child simulator, pid=%d, so terminating the UASimulator and removing it.
Submitted UAActivityBecameCurrentEvent: %{private}@
Submitted UAActivityWasDiscoveredEvent: %{private}@
Submitted UAActivityWasSuggestedEvent: %{private}@
Not reporting activity was continued becasuse payload was never requested.
Submitted UAActivityWasContinuedEvent for %@: %{private}@
Metric AT for %{private}@ is %{private}@
Submitted UARemotePasteboardWasRequestedEvent: %{private}@
Submitted UARemotePasteboardDidSendLocalEvent: %{private}@
Submitted UARemotePasteboardTypeInfoRequestedEvent: %{private}@
Submitted UARemotePasteboardBecameAvailableEvent: %{private}@
Submitted UARemotePasteboardBecameUnavailableEvent: %{private}@
AdvertisableItems:%{private}@
NOTIFY BEST CHANGE: %@ -> %@
LAYOUT: Updating advertisement because the list of main screen visible bundle identifiers changed
LAYOUT: Updating advertisement because the lock screen is present and there were previous main screen bundles.
determineVisibleOrderingForProcessesWithUserActivities, layout=%{private}@
LAYOUT: Found %{public}@/%{public}@ as active layout
LAYOUT: Found %{public}@/%{public}@ as proxy for active layout
LOCKSCREEN: Layout contains modal lock screen, %{private}@.
LOCKSCREEN: Ignoring lock-screen element because %{public}@ is at or above.
Adding client %{private}@, %{public}@, bundleID=%{private}@ to known userActivityClients.
Removing client %{private}@, application %{public}@, from known userActivityClients.
Moving 'LSLivePastProcessExit' activity %{public}@/%{private}@ from process %{public}@ into additionalUserActivityAdvertisableItems
Removing client %{public}@ from _userActivityClientsByPID
Removing client %{private}@ from _userActivityClientsByBundleIdentifier
MAKEFRONT: handleAppStateMonitorUpdate:%ld %{private}@
--- ignoring notification for pid %{public}@ because BKSApplicationStateExtensionKey == YES and isEligibleAsExtension == NO (is Client %@)
MAKEFRONT: %{public}@/%{public}@ %s
MAKEFRONT: - ( was %{public}@/%{public}s)
MAKEFRONT:- (was %@) %{public}s
registerAsProxyApplication, pid=%{public}d controller=%{public}@
registerAsProxyApplication, added, proxiedClients=%{public}@
registerAsProxyApplication, removed, proxiedClients=%{public}@
*** FORCING item %{private}@ as the most eligible item, since it's a ping
-- Adding in eligibleItemsWhenInBackground items, %{private}@. 
listener=%{private}@ newConnection=%{private}@
[DATA REQUESTER] Requesting payload from: %@, with timeout: %{public}@
[DATA REQUESTER] Requesting complete: %lu bytes, error: %@
[DATA REQUESTER] Adding %d delay for testing
[DATA REQUESTER] Requesting payload from: %@, with timeout: %{public}@, version: 2
[DATA REQUESTER] Requesting pbinfo from: %@, with timeout: %{public}@
BLUETOOTH: Setting powered status for device %{public}p to %{BOOL}d
BLUETOOTH: Failed to get device powered status, for local device %{public}p from BTSession %{public}p, result=%{public}d.
BLUETOOTH: Attached to BTSession, result=%{public}d, setting attached to %{BOOL}d.
BLUETOOTH: Detached from BTSession, result=%{public}d, setting attached to NO.
BLUETOOTH: Registering callback %{public}@ to %{public}p
BLUETOOTH: Unregistering callback %{public}@
BLUETOOTH: Letting callback %{public}@/%{public}p know that the power status is now %{BOOL}d
BLUETOOTH: Attached to BTSession %{public}p
BLUETOOTH: Local device %{public}p from BTSession %{public}p, result=%{public}d, setting attached to YES.
BLUETOOTH: Failed to add callbacks for local device %{public}p from BTSession %{public}p, result=%{public}d.
BLUETOOTH: Failed to get local device for session %{public}p, result=%{public}d
BLUETOOTH: Detached from BTSession %{public}p localDevice=%{public}p
BLUETOOTH: Terminated from BTSession %{public}p localDevice=%{public}p
BLUETOOTH: Setting powered status valitidy for device %{public}p to NO
*** ERROR: Received BTLEUserActivity error packet, but unable to de-archive it, so discarding it.
*** ERROR: Received BTLEUserActivity packet with unknown version, %ld, so discarding it.
-- Compressed data to %ld bytes (from %ld bytes) in data, ( %ld%% )
Using compressed data, because it is %ld bytes smaller than the uncompressed data.
setScanningForTypes:%{public}@
UASharingReceiver, adding activity scanner %{public}@.
UASharingReceiver, removing activity scanner %{public}@.
UASharingReceiver, suspending activity scanner %{public}@.
UASharingReceiver, resuming activity scanner %{public}@.
foundDevice, deviceIdentifier=%{private}@ scanner=%{public}@
foundDevice, deviceIdentifier=%{private}@
lostDevice, deviceIdentifier=%{private}@ scanner=%{public}@
lostDevice timer firing deviceIdentifier=%@; _recentlyLostDeviceIDs is %@, will remove is %d
lostDevice, deviceIdentifier=%{private}@
removing item %{public}@/%{private}@ because another item (%{public}@/%{private}@) with the same bundleID and deviceID is being added
Unable to determine nowPlaying client, error=%{public}@ for item %{public}@
NowPlaying item is %{public}@ for item %{public}@
Retaining %{public}@ in _receivedItems because it's .payloadRequested or .payloadAvailable, so that it remains available for a bit, until %{public}@.
REMOVING: %{public}@ because it's on device %{private}@
SharingBTLEReceiver: Running periodicCleanupFunc to check for received items whose .removeAfter has passed.
Removing %{public}@ from .receivedItems because .removeAfter, %{public}@ has expired.
activityScanner:receivedAdvertisement: %{private}@,%{public}@)
Received Ad: %{public}@ opts=%{public}@ from %{private}@/%{private}@
Ignoring received ActivityContinuation because the current profile disallows it, %{public}@ from %{private}@
SIMULATING foundDeviceForIdentifier: %{private}@
Received advertisement.advertisementPayload == nil
[PBOARD] Received pboard available advertisement
[PBOARD] Ad is from last seen device
[PBOARD] Pboard version bit flipped, notify client
[PBOARD] Ad is from new device, notify client
[PBOARD] Notify client of new remote pboard and reset timmer
[PBOARD] Recived add w/o remote pboard for last seen device, notify client and clear timmer
 -- Looking for activity matching advertisingPayload %{public}@, from %{private}@/%{private}@
 -- Found matching advertisingPayload to item already received from this device, %{public}@/%{private}@, so using it. %{public}@/%{private}@
 -- Clearing payload of item %{public}@/%{private}@ because the last active time from that device has changed.
 -- Because the optionBits in the packet changed, from %x%{public}@ to %x%{public}@, discarding current item and starting fresh, %{public}@ / %{private}@
 -- Matching dns- item to previously received one, mapping to %{private}@, for item already received from this device, %{public}@/%{private}@, so using it. %{private}@
 -- New advertisement of DNS type didn't seem to match to same app as  previous one, %{public}@ vs %{public}@, so can't use it. %{private}@
PING: Pong was sent, error=%{public}@
# RECEIVED advertisement, %{public}@ type=%{private}@ -> %{private}@, %{public}@, from %{private}@/%{private}@ options=%{public}@
received UAUserActivityAutoPullActivitiesListKey bit on, fetching more app suggestions
*** Checking whether to do a pre-emptive fetch of the payload for item %{public}@/%{private}@
*** Ignoring prefetch for item %{public}@/%{private}@ because dontPrefetchBefore=%{public}@
*** Scheduling a pre-emptive fetch of the payload for item %{public}@/%{private}@
*** Completed a pre-emptive fetch of the payload for item %{public}@/%{private}@
issuing handoff-more_items command for %lu devices
issuing handoff-more_items command for device %@
got back %lu items for handoff-more_items command from device %@
.scanForTypes=%{public}@
[IN STREAM] Starting to receive types: %@
[IN STREAM] Input stream canceled
[IN STREAM] Done with input stream
[IN STREAM] Paste cancelled, closing stream
[IN STREAM] Receiving Header Info
[IN STREAM] Error, malformed data received. Have not received message header.
[IN STREAM] Receiving Header
[IN STREAM] Started receiving header
[IN STREAM] Error, malformed data received. Did not receive correct delimiter
[IN STREAM] Received Header: %@
[IN STREAM] Started receiving data file
[IN STREAM] Received data file
[IN STREAM] Stream Event Error: %@
[IN STREAM] Stream End Encountered
** DISCARDING ADVERTISEMENT with hash %{public}@ because it contains a fileProvider (0x%lx), and this platform does not support it.
 -- Received a kLSAdvertisementStringUserActivityKind; finding application with advertising string %{public}@
 -- MATCHED, adverising bytes %{public}@ to activityType %{private}@, from application %{private}@
 -- Received a kLSAdvertisementStringDomainNameKind; no match for native application, so looking for browser
 -- Received a kLSAdvertisementStringPrivateSpaceKind; finding application with private space string %{public}@
 -- MATCHED, adverising bytes %{public}@ to privateType string %{private}@, from application %{private}@
 -- Found application %{private}@, with matching advertisingIdentifier %{private}@, from %{private}@ for payload %{public}@
Creating CornerActionBTLEItem, advertisementPayload=%{private}@ optionBit=%ld type=%{private}@ activityType=%{private}@ bundleID=%{private}@ teamID=%{private}@ advertisingOptions=%{public}@
Created wasContinuedInfo for BTLEAd: %{private}@
Unable to determine application on this device for advertisement %{public}@, so ignoring this received activity.
RECEIVED advertisement, %{public}@, matched against existing corner item %{public}@ so merely update it from the flags & options
for item %{public}@ requested=%{public}@ available=%{public}@
Requesting payload for item %{public}@ payload, but it is already present, so dispatching directly.
Requesting payload for item %{public}@ advertisementPayload=%{public}@ bundleIdentifier=%{private}@ with timeout: %{public}@
sharingFetch
*** DELAYING payload receive by an additional %f seconds for DEBUGAdditionalPayloadReceiveTimeInterval
*** FINISHED DELAYING payload receive by an additional %f seconds for DEBUGAdditionalPayloadReceiveTimeInterval
PAYLOAD:GOT payload for item %{public}@/%{public}@, dataSize=%ld/%{private}@ speed=%g/%{bitrate}ld error=%{public}@
Updated wasContinuedInfo with payload fetch results: %{private}@
Payload for item %{public}@/%{private}@ was received with error %{public}@
*** For activity %{public}@ of type NSUserActivityTypeBrowsingWeb, being reecived, since the teamID from received activity, %{private}@, and teamID associated with application targeted, %{private}@, do not match, setting the userInfoPayload to nil so we don't deliver an un-expected payload type to the target.
*** For activity %{public}@ of type NSUserActivityTypeBrowsingWeb, being received, since the teamID from received activity, %{private}@, and the target application has no teamID, setting the userInfoPayload to nil so we don't deliver an un-expected payload type to the target.
*** Mismatch for activity %{public}@  between teamID from received activity, %{private}@, and teamID associated with application targeted, %{private}@, so refusing to pass along activity to this target.  Error #%ld, UAContinuityUserActivityFailedValidation
*** Mismatch for activity %{public}@ between activityType from received activity, %{private}@, and activityType associated with application targeted, %{private}@, so refusing to pass along activity to this target, error #%ld.
Updating payload for item %{public}@ to %{private}@
Failed to fetch payload from sharingd for item %{public}@/%{private}@, with error %@
-- Calling %ld completionHandlers with payloadRequest information: error=%{public}@
PAYLOAD: clearing payload for activity %{public}@, self=%{private}@
--- item %{public}@ payload already present, so nil-ing it out.
[OUT STREAM] Sending pboard info: %@
[OUT STREAM] Starting to send types: %@
[OUT STREAM] Done sending pasteboard, waiting for end of stream
[OUT STREAM] Unexpected event code: %lu
[OUT STREAM] Got data back: %@
[OUT STREAM] Stream End Encountered, shutting down
[OUT STREAM] Stream Timer Fired, shutting down
-- item %{public}@/%{private}@ not eligible, because it has expired (on %{public}@)
requestPayload...:, %{public}@ from client application %{public}@
wasResumedOnAnotherDevice, %{public}@ to client pid=%ld
activityPayloadFromDevice:%{public}@ forAdvertisementPayload:%{public}@ command:%{public}@ timeout:%ld
--- invalidation on connection to client %{private}@ pid=%ld
About to fetch bundleIdentifier for process with pid %d. Has appStateMonitor: %{public}@
Failed to fetch bundleIdentifier for process with pid %ld after 10 seconds
CLIENT: Process info, for pid %d, is %{private}@
CLIENT: Process info, for pid %d, is %{private}@ (on queue)
CLIENT: Process info, for pid %d, doesn't include bundle identifier, so unable to locate this process 
except by pid. ( is %{public}@ )
UserActivityClient:%{public}@, teamID=%{private}@ applicationID=%{private}@ bundleID=%{private}@ accessAny=%{public,BOOL}d 
removing %{public}@ userActivityInfoItem
uuid=%{public}@
Removing item %{public}@/%{private}@ from additionalUserActivityAdvertisableItems
%{public}@ from client %ld
 - no need to call back to get updated info for activity %{public}@, because it is not dirty
 - A prepareToResume is already in progress for activity %{public}@, queuing callback for when fetch is complete
Error acquiring RBSAssertion: %@
Got error on connection back to client for %{public}@, error: %{public}@
Calling back to client to ask it to save activity %{public}@
FAILED: Calling back to client to ask it to save activity %{public}@ with error %{public}@.
Returned from back to client to ask it to save activity %{public}@, clean=%{public}s updatedInfo=%{private}@
Unable to call willSave for user activity %{public}@ for process %{private}@ because its owning process/connection seems to be gone.
error: %{public}@
Telling client that user activity %{public}@ was resumed (on another device).
 -- Called %lu pending fetch tasks for %{public}@, removing from queue
 -- No pending fetch tasks called for %{public}@
 -- %lu remaining queued tasks total
CLIENT: version=%ld, %{public}@ %{private}@ any=%{public}@ sandbox=%{public}@ clientInfo=%{private}@
deleteUserActivity %{public}@
%{private}@ %{private}@
doAddDynamicUserActivity(%{public}@, %{public}@) failed, nil for hash %{public}@ or teamID %{public}@.
doAddDynamicUserActivity(%{public}@, %{public}@) failed, nil for one param.
 - found %{public}@ activity, removing it.
doRemoveDynamicUserActivity(%{public}@), nil appActivity
Pinned Activity Info: %{public}@/%{private}@
*** Attempt to pin activity from process %{public}@, which doesn't have the %{public}@ entitlement.
*** Attempt to get current activity information from process %{public}@, which doesn't have the %{public}@ entitlement.
result=%{public}@ %{private}@ error=%{public}@
doGetUserActivityProxiesWithOptions:%{public}@ predicate=%{public}@
doDetermineIfUserActivityIsCurrent: uuid=%{public}@
doDetermineIfUserActivityIsCurrent: Found uuid=%{public}@, in client %{public}@ as %{private}@
*** Attempt to determineIfUserActivityIsCurrent from process %{public}@, which doesn't have the %{public}@ entitlement.
doFetchUserActivityInfoWithUUID:(%{public}@)
-- activity with uuid %{public}@, so fetching payload for it.
-- activity with uuid %{public}@, completed fetching payload, %{private}@ %{private}@ %{private}@%{private}@, for it. error=%{public}@
 -- Received error %{public}@ trying to fetch payload for item uuid %{public}@
 -- Sending userActivityInfo back to client, %{public}@/%{private}@
 -- Removing cornerActionItem payload %{public}@/%{private}@ because a client fetched it.
 -- Could not update activityInfo for fetch
 -- Sending Pinned userActivityInfo back to client: %{private}@
Activity with uuid %{public}@ fetch requested, but was neither a locally created item nor a corner action item, so returning error %{public}@
doUpdateUserActivityInfo: makeCurrent=%{public}@ newInfo = %{public}@/%{private}@
The application with pid %ld/%{private}@ didn't provide a activityType.
The application with pid %ld/%{private}@ doesn't have a team identifier in its application-identifier, or isn't from com.apple., and is sandboxed, so unable to proceed.
Application %{public}@ is registering an activity with teamID %{private}@ bundleID=%{private}@ activityType=%{private}@
Application item %{public}@/%{private}@ has a proxy %{public}@, so forcing an advertisement update.
Application item %{public}@/%{private}@ has changed .webPageURL, forcing an advertisement update.
Application item %{public}@/%{private}@ has changed proxy %{public}@, so forcing an advertisement update.
- Making %{public}@/%{private}@ into the currentItem from process %{private}@/%ld
refusing to register user activity from client, and returning error %{public}@ for item %{public}@ %{private}@
BECOMECURRENT: updating advertisement for %{public}@/%{private}@ because the becomeCurrent item changed or a DNS item changed its URL
BECOMECURRENT: updating notifiers for %{public}@/%{private}@ because the becomeCurrent item changed
doUpdateUserActivityWithUUID(%{public}@/%{private}@, current=%{public}@)
Checking if the current item for %{public}@ is changed, %{public}@/%{private}@ %{public}@%{public}@
Triggering the update of the advertisable items because the current status of our application, %{public}@, has changed.
Triggering the update of the advertisable items because uuid == nil, for application %{public}@, has changed.
doMarkUserActivityAsDirty(%{public}@) for app %{public}@ forceImmediate=%{public}@ webpageURL=%{public}@ expiration=%{public}@%{public}s%{public}s
 -- dirty activities for this client: (%{public}@) %{public}@
 -- Updating the user activity, because it's the currently advertised item, to let the server know it should (maybe) re-fetch the payload: %{public}@
Scheduling an advertising item update, for application %{public}@, because the   changed on a NSUserActivityTypeBrowsingWeb item, %{public}@/%{private}@
doRegisterAsProxyApplicationForPid, pid=%{public}d options=%{public}@
NETWORK:Starting browse for rendezous items for %{public}@ %{public}@.
NETWORK: browser=%@ service=%@/%@ more=%@
NETWORK: name=%{public}@ type=%{public}@ port=%ld
NETWORK: Setting up mDNS listener for connections, name=%{public}@ type=%{public}@ port=%ld
NETWORK: NSNetServicesErrorCode=%ld / %{public}@
NETWORK: netServicesDidStop, so terminating this listener, sender=%{private}@.
NETWORK: Sending initial packet to paired client %{private}@/%{public}@ from controllerUUID=%{public}@.
NETWORK: stream=%{private}@ have %ld/%{private}@ controllerUUID=%{public}@
NETWORK: stream=%{private}@ Remaining data, %ld/%{private}@
NETWORK: stream=%{private}@ error=%{public}@
NETWORK: stream=%{private}@ END ENCOUNTERED
COMMAND: %{private}@, from %{private}@/%{public}@
NETWORK: Responding to peer %{private}@/%{public}@ with our UUID, %{public}@, to establish connection from controllerUUID=%{public}@.
NETWORK: Destroying replay handler object because the peer's UUID %{public}@ matched our own, controllerUUID=%{public}@.
-- checking replayController %{public}@ against peerUUID=%{public}@
NETWORK: Destroying network replay object to %@ because we already have a different connection to that peerUUID %{public}@, controllerUUID=%{public}@
COMMANDRESPONSE: %{private}@ (controllerUUID=%{public}@ peerName=%{private}@)
controllerUUID=%{public}@
[CODER_V1] Starting to receive pasteboard
[CODER_V1] Input stream canceled
[CODER_V1] Done with input stream: %@, %@
[CODER_V1] Processing Received data with length: %ld
[CODER_V1] Receiving Header Info
[CODER_V1] Error, malformed data received. Have not received message header.
[CODER_V1] Receiving Header
[CODER_V1] Started receiving header
[CODER_V1] Received Header: %@
[CODER_V1] Started receiving data file
[CODER_V1] Error, malformed data received. Did not receive correct delimiter
[CODER_V1] Recived %ld of %ld
[CODER_V1] Received data file
[CODER_V1] Done queuing chunks, starting shutdown timer
[CODER_V1] Queuing next chunk to send: %ld
[OUT STREAM] Data sent: %ld - %ld
TIME: -- since timeOffsetByteInTicks == 0xff, storing maximum age time.
TIME: --- Guessing that their clock and our clock are in different epochs, ourOffset=%ld, theirs %ld, so falling back %ld seconds and setting delta to %ld. result=%{public}@/%{public}@
TIME: --- Guessing that their clock is somewhat ahead of our clock, and in the same epoch, ourOffset=%ld, theirs %ld, so setting result == no, result=%{public}@=%{public}@
TIME: --- Guessing that their clock is the same or behind of our clock, and in the same epoch, ourOffset=%ld, theirs %ld, so setting result to delta (%ld) + %ld seconds from epoch, result=%{public}@/%{public}@
TIME: result time = %{public}@ %{public}@
Calculated advertisingBytes for %ld / %{private}@, result=%{public}@
SIMULATOR: Requesting payload from paired client, uuid=%{public}@
SIMULATOR: Received payload from paired client, uuid=%{public}@, webPageURL=%{public}@ payload=%{private}@
SIMULATOR: Failed to get payload for activity %{public}@
SIMULATOR: Calling completion handler because activity %{public}@/%{private}@ was resumed, error=%{public}@
setAdvertisableItems:(%{public}@)
ADVERTISING: Scheduling an update to check the advertisement, because we've changed the list of advertised items.
--- Scheduling an update to check the advertisement, because we've cleared the list of advertisable items.
advertising %@, when = %@
ADVERTISING: %{public}@ (old=%{public}@)%{public}@
ADVERTISING: Matched current advertisement, so not updating ( %{public}@ vs %{public}@)
ADVERTISING: Changing advertisement to nil because it's been removed, %{public}@
itemToAdvertise is nil but we need to advertise an auto pull request, so choosing item %@ out of corner manager's possible advertiseable items to advertise
setting UAUserActivityItemIsNotActiveKey = 1 for item %@
setting UAUserActivityItemIsNotActiveKey = 0 for item %@
setting UAUserActivityAutoPullActivitiesListKey = 1 for item %@
ADVERTISING: Advertising new item or updating user-idle time in previous advertisement, %{public}@/%{private}@
lastAdvertismentTime is in the future, this is wrong and is probably because the system clock has changed
ADVERTISING: Time since last advertisement seems to have gone backwards, now=%{public}@ last=%{public}@
ADVERTISING: Setting supressAdvertisementChange = YES because the client attempted to change advertisement too quickly, %f since lastAdvertisementTime (now=%{public}@ last=%{public}@)
ADVERTISING: self.advertisementTimes=%ld %{public}@
ADVERTISING: Removing first item, %{public}@, becaues it is earlier than %{public}@
ADVERTISING: Setting supressAdvertisementChange = YES because the advertisement too quickly, %ld in last %f seconds (earliest=%{public}@ now=%{public}@)
ADVERTISING: Since supressAdvertisementChange == YES, not actually changing the active advertisement and relying on it happening again in the near future.
OLDWEB: Adding item %{private}@, date=%{public}@
ADVERTISING:%{public}@ %{public}@ type=%{private}@%{private}@ at %{public}@ opts=%{public}@
_updateAdvertisement, entering.
Removing .currentAdvertisedItem because Bluetooth is not enabled.
Not advertising because this device is in batterSaverModeEnabled == YES
ADVERTISING: Removing advertisement %{public}@ because advertising is suspended
We have a non-active advertisement, started at: %@, %@s till removal
Removing non-active advertisment
Rescheduling update to remove advertisment
self.advertisableItems is %@, itemToAdvertise is %@
UPDATEADVERTISEMENT: Removing current advertisement item, %{public}@/%{private}@, because its process is gone
UPDATEADVERTISEMENT: No item available to advertise, so switching to advertising existing advertisement nonactively.
UPDATEADVERTISEMENT: No item available to advertise, so
UPDATEADVERTISEMENT: Removing current advertisement item, %{public}@/%{private}@, because self.activityAdvertisingAllowed == NO
removeAdvertisement, currentAdvertisementPayload=%{private}@
OLDWEB: Checking expiration of %{public}@ of %{private}@, expireBefore=%{public}@
OLDWEB: Removing (old) NSUserActivityTypeBrowsingWeb item, %{private}@, because it is older than %{public}@ (expired at %{public}@
-- CHECKING %{public}@ version %{public}@, %{public}@ = %ld.%c.%ld
PEERS: %ld/%{public}@, advertiseHandoff=%{public}s pastboard=%{public}s
PEERS: Our peers ability to received handoff or pasteboard advertisements has changed; scheduling an check for our advertisement. %{public}s/%{public}s
Setting pairedDevices=%ld/%{private}@
dataForMoreAppSuggestions:
skipping %@ because its .when (%@) is older than %lum:
%@: %@
advertiserData=%{public}@ peer=%{private}@ %{public}@/%{public}@
[Sharing Advertiser] Payload request for ad: %{public}@, command: %{public}@, from: %{private}@
activityPayloadForAdvertisementPayload: got handoff-more_items command
payload: %@ (%lu bytes long)
[PBOARD] Paste Requested from remote %{public}@/%{private}@
[PBOARD] Paste V2 Requested from remote %{public}@/%{private}@
[PBOARD] Types Requested from remote %{public}@/%{private}@
Advertising: advertiserData=%{public}@ command=%{public}@ peer=%{private}@ %{public}@/%{public}@
-- advertiseable item %{private}@/%{public}@ matches the advertisingPayload requested %{public}@, so using it.
-- the advertisingPayload requested %{public}@ does not match any advertiseable item
OLDWEB: Checking against previous advertised NSUSerActivityTypeBrowsingWeb items, %{private}@
OLDWEB: the current advertised item, %{private}@/%{public}@, is a NSUserActivityTypeBrowsingWeb, and a previous advertisement %{public}@ from %{public}@ matches the requested payload.
SAMPLEPAYLOAD: Sending %ld bytes to device %{private}@
handoffFetch
success=%d enableTelemetry=YES 
-- received data from advertiseableItem delegate callback to client, uuid=%{public}@ activity=%{public}@/%{private}@
Failure updating userActivity information from client application for activity %{public}@/%{private}@  %{public}@, using (possibly stale) payload instead, status=%ld.
-- Forcing new payload encoder to peer %{private}@/%{public}@ %{public}@ because debugForceNewPayloadEncoder == YES
-- Falling back to 'old' format of payload to support pre Blacktail era device, %{private}@/%{public}@ %{public}@ (size=%ld vs %ld)
-- ENCODING error from client instead of payload, %{public}@ / %{public}@
** The payload for user activity item %{public}@/%{private}@ was %ld bytes, larger than the maximum %ld, and so this user activity cannot be sent to the requesting device.
*** The payload for the user activity item %{public}@/%{private}@ is %ld bytes, larger than the recommended maximum %ld, which may cause slow transfers.
PAYLOAD:Responding to SFAdvertiser with data for advertisement %{public}@ activity %{public}@ type=%{public}@, fetchTime=%g data=%ld/%{private}@
Failure after updating userActivity information from client application for activity %{public}@/%{private}@ %{public}@; the activity disappeared/is no longer current and so cannot be handedOff.
RESPONDING: Unable to locate a userActivity for the payloadData %{public}@ so returning nil/nil and an error as the payload for the requesting device.
Failing request because self.activityAdvertisingAllowed == NO
User activity %{public}@ was resumed on another device, so inform (if desired) the author of the activity on this device
Failing because self.activityAdvertisingAllowed == NO, ignoring notification.
PAIRED DEVICES CHANGED: Now is %ld/%{private}@
Adopting paired devices, PAIRED DEVICES CHANGED: Now is %ld/%@  (was %ld devices)
SIMULATOR: Received message from another simulator on port %ld, so dispatching.
SIMULATOR: Tearing down dispatch_source_t for messages from simulator port %ld
SIMULATOR: Creating UASimulator to talk to real useractivityd in OSX, portName=%{public}@
SIMULATOR: Received notification that parent simulator started up, so forcing a reconnect to re-establish state.
SIMULATOR: Looking up parent port in order to talk to useractivity in OSX
UASimRegisterWithParentWithVersion()=%ld parentVersion=%ld
SIMULATOR: Changing peer device info to %{private}@
SIMULATOR: Paired with parent simulator, commandPort=%ld pairedPort=%ld pairedPeer=%{public}@
SIMULATOR: Detected death of parent simulator port %ld.
SIMULATOR: *** Attempting to reconnect / relaunch parent simulator.
SIMULATOR: Cancelling parent simulator port death source, port %ld
SIMULATOR: Simulator application is %{public}@
SIMULATOR: Because advertising is suspended, returning 'no advertised item' information to paired simulator.
SIMULATOR: Requesting payload for item %{public}@
SIMULATOR: Retrieved payload for item %{public}@, error=%{public}@
SIMULATOR: Sending information on item %{public}@ to paired simulator
SIMULATOR: Returning 'no advertised item' information to paired simulator.
SIMULATOR: Asking receiver to fetch the advertisement.
SIMULATOR: Telling manager to determine the bestApp again
SIMULATOR: Also telling advertisers to determine the item to advertise, because activitiesShouldCrossover=YES
SIMULATOR: Setting received item to %{public}@/%{private}@
SIMULATOR: Found item to send; %{public}@/%{private}@.  Fetching payload.
SIMULATOR: Got payload for item %{public}@/%{private}@.  Returning this info:%{private}@
SIMULATOR: Waiting for payload fetch to complete for item %{public}@
SIMULATOR: Finished wait for payload fetch to complete for item %{public}@
SIMULATOR: Failed to find activity matching uuid %{public}@, items=%{private}@
SIMULATOR: Found item ; %{public}@/%{private}@.  Calling its wasContinued.
Allowing connection to admin interface in simulator from %{public}@
*** SENDING PING %{private}@ to clients.
- doNOP, str=%{private}@, so echoing that back to client.
### DEBUGGING: doSetDebugOption:%{public}@ => %{public}@
### DEBUGGING: Changing EnableSharingFramework to %{public}@
### Removing SFActivityAdvertiser from UASharingAdvertiser
### Adding SFActivityAdvertiser to UASharingAdvertiser.
### Removing SFActivityScanner from UASharingReceiver.
### Adding SFActivityScanner to UASharingReceiver.
str=%{private}@
-- Matching current best item %{public}@/%{private}@
Removing previous injected fake BTLE item %@
Injecting fake BTLE item, %{private}@ "%{private}@" %{private}@ payload=%{private}@
Removing injected fake BTLE item %@
Injecting nil BTLE item, so removing last item
About to call prepareToResumeActivityWithUUID for activityUUID %{public}@
Finished call prepareToResumeActivityWithUUID for activityUUID %{public}@, error=%{public}@
About to call didResumeUserActivityWithUUID for activityUUID %{public}@
Finished call didResumeUserActivityWithUUID for activityUUID %{public}@
Setting up network connection to other machine %{private}@ %ld
doGetPairedDevices(%{public}@)
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241128</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleDisplayName</key>
<string>useractivityd</string>
<key>CFBundleExecutable</key>
<string>useractivityd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.coreservices.useractivityd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>useractivityd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>13E6049a</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>8.5</string>
<key>DTSDKBuild</key>
<string>19T220</string>
<key>DTSDKName</key>
<string>watchsimulator8.5.internal</string>
<key>DTXcode</key>
<string>1330</string>
<key>DTXcodeBuild</key>
<string>13E6049a</string>
<key>MinimumOSVersion</key>
<string>8.5</string>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.coreservices.useractivityd</string>
<key>com.apple.PowerManagement.control</key>
<true/>
<key>com.apple.backboardd.lastUserEventTime</key>
<true/>
<key>com.apple.bluetooth.system</key>
<true/>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudDocuments</string>
<string>CloudKit</string>
</array>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.iokit.powerdxpc</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.librarian.container-proxy</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceUbiquity</string>
<string>kTCCServiceSystemPolicyAllFiles</string>
</array>
<key>com.apple.runningboard.assertions.useractivityd</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.sharing.handoff.advertising</string>
<string>com.apple.sharing.handoff.scanning</string>
<string>com.apple.CarPlayApp.non-launching-service</string>
<string>com.apple.server.bluetooth.general.xpc</string>
</array>
<key>com.apple.system.powermanagement.useractivity</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.SharedWebCredentials</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>lsuseractivityd</string>
</array>
</dict>
</plist>
