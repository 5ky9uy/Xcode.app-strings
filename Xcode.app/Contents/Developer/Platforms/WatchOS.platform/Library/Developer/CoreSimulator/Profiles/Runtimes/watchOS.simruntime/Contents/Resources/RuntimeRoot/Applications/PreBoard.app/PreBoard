initWithMode:
sharedController
addObserver:
reset
viewDidAppear:
viewWillDisappear:
lockState
delegate
passcodeViewController:didComplete:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
idleSleepController:displayWillSleep:
keybagDidUnlockForTheFirstTime:
keybagWillBeginProcessingStateChange:
keybag:extendedStateDidChange:
keybagDidFinishProcessingStateChange:
sharedInstance
showLogo
hideLogo
init
stopListening
dealloc
hasService
initWithServiceUsagePage:usage:additionalMatchingCriteria:log:eventQueue:eventBlock:
waitForMatchedHIDService:
copyEventType:matchingEvent:options:
isListening
startListening
.cxx_destruct
_log
_listening
setIdleSleepController:
resetIdleTimerAndUndim:
presentObliterationControllerWithCanceledBlock:
initWithHeldBlock:notHeldBlock:callbackQueue:buttonCheckProvider:
numberWithBool:
dictionaryWithObjects:forKeys:count:
dimDisplay
updateBatteryState:
_lockButtonDown
_lockButtonUp
_menuButtonDown
_menuButtonUp
__handleHIDEvent:
_handleHIDEvent:
_hidEvent
isDisplayDim
_startLockButtonTimer
shutdownWithOptions:forSource:
_lockButtonLongPress
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setLockButtonTimer:
invalidate
lockButtonTimer
_cancelLockButtonTimer
shouldCheckInWithBackboard
registerAsSystemApp
_createStatusBarWithRequestedStyle:orientation:hidden:
_isSpringBoard
applicationWillOrderInContext:windowLevel:screen:
applicationDidOrderOutContext:screen:
batteryStatusDidChange:
_handlePhysicalButtonEvent:
idleSleepController
_buttonHeldCheck
_hidScreenCoverListener
_obliterationPresenter
_screenCovered
_lockButtonTimer
_idleSleepController
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
allocWithZone:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
setOnAC:
setHasOnAC:
hasOnAC
readFrom:
writeTo:
copyTo:
mergeFrom:
timestamp
onAC
_timestamp
_onAC
_has
mainScreen
bounds
initWithFrame:
useBlackBackground
blackColor
setBackgroundColor:
clearColor
addSubview:
systemFontOfSize:
mainBundle
localizedStringForKey:value:table:
setText:
setFont:
setNumberOfLines:
setLineBreakMode:
setBaselineAdjustment:
setAdjustsFontSizeToFitWidth:
setClipsToBounds:
whiteColor
setTextColor:
setTextAlignment:
boundingRectWithSize:options:attributes:context:
setFrame:
frame
buttonWithType:
imageNamed:
setImage:forState:
sizeToFit
performObliteration
addTarget:action:forControlEvents:
cancelObliteration
setView:
viewWillAppear:
defaultCenter
_powerStatusUpdated:
addObserver:selector:name:object:
removeObserver:
viewDidDisappear:
currentConditionsDoAllowObliteration
showObliterationDialog
center
setCenter:
setAnimating:
view
failSafeObliterate
activeDeviceSelectorBlock
getDevicesMatching:
firstObject
unpairWithDevice:shouldObliterate:operationHasBegun:
showResetFailureMessage
deactivateController:withCompletion:
systemOrangeColor
setAlpha:
removeFromSuperview
animateWithDuration:delay:options:animations:completion:
initWithForceSWUpdate:
loadView
ownerDelegate
setOwnerDelegate:
setDelegate:
setUseBlackBackground:
_spinner
_forceSWUpdate
_useBlackBackground
_ownerDelegate
_delegate
initWithMobileKeyBag:
state
recoveryRequired
recoveryPossible
_queue_performDataRecoveryWithPasscode:progressHandler:completion:
beginRecovery:error:
escrowCount
waitForUnlockWithTimeout:
errorWithDomain:code:userInfo:
requiresDataRecovery
dataRecoveryPossible
performDataRecoveryWithPasscode:progressHandler:completion:
_queue
_calloutQueue
_queue_mobileKeyBag
copy
buttonHoldTime
startupUsingEventQueue:withCompletion:
startListeningForEventsWithBlock:
stopListeningForEvents
isButtonDown
_hidEventListener
_hidKeyboardEventToMatch
_buttonEventBlock
_startListeningForEvents
_stopListeningForEvents
_performCallbackWasHeld:
setHeldBlock:notHeldBlock:
_provider
_heldBlock
_notHeldBlock
_callbackQueue
_keyWasDown
_keyWasReleased
_timerDidFire
_callbackPerformed
_eventQueue
initWithRadians:
attachDefaultTransform:forDisplayWithRootIdentity:
_sceneTransform
setTitle:forState:
titleLabel
sizeThatFits:
setTitleColor:forState:
colorWithRed:green:blue:alpha:
layer
setCornerRadius:
obliterateClicked
font
pointSize
setMinimumScaleFactor:
colorWithWhite:alpha:
cancelClicked
_statusUpdated:
_updateViews
showObliterationConfirmationDialog
_obliterateButton
_connectPowerLabel
_showObliterateButton
isViewLoaded
name
setName:
stringByAppendingFormat:
viewDidLoad
currentDevice
puic_deviceVariant
updateUIForKeyBagState:
presentDataRecovery
isEffectivelyLocked
presentDeviceUnlock
finishDeviceUnlock
willMoveToParentViewController:
removeFromParentViewController
addChildViewController:
didMoveToParentViewController:
setDataRecoveryEngine:
setMainViewController:
setShouldUseLockScreenAnimation:
mainViewController
window
_setActionControllerOrbGestureEnabled:inWindow:
domain
isEqualToString:
code
_resetConfirm:
actionItemWithImage:title:target:action:
setActionItemType:
_resetCancel:
arrayWithObjects:count:
initWithActionItems:actionStyle:
preferredFontForTextStyle:
setHeaderView:
initWithActionGroup:
dismissViewControllerAnimated:completion:
presentViewController:animated:completion:
setDataRecoveryController:
dataRecoveryViewController:requestDismissalWithCompletion:
dataRecoveryViewControllerRequestObliteration:
passcodeViewController:didVerifyPasscode:
passcodeViewController:didFailVerificationWithError:
errorMessageForPasscodeViewController:error:
_removePasscodeController
canProvideActionController
actionController
mainView
setMainView:
contentView
setContentView:
passcodeController
setPasscodeController:
dataRecoveryController
dataRecoveryEngine
isCompact
setIsCompact:
_obliterationConfirmationController
_isCompact
_mainView
_contentView
_mainViewController
_passcodeController
_dataRecoveryController
_dataRecoveryEngine
handlePasscodeCheck
actionWithTitle:style:actionHandler:
initWithActions:title:message:
setShouldDismissOnButtonPresses:
presentedViewController
showPasscodeEntry
setMessage:
dataUsingEncoding:
beginDataRecoveryWithPasscode:
showProgressUIWithValue:
hideProgressUI
updateProgress:
hideProgress
lockSkippingGracePeriod:
createStashBag:completion:
handleDataRecoveryRetry
handleDataRecoveryFailure
didCancelPasscodeEntryViewController:
didMismatchPasscodeEntryViewController:
passcodeEntryViewController:didCompleteWithPasscode:
setState:
progressUI
setProgressUI:
_alertSheet
_passcodeViewController
_passcode
_state
_progressUI
weakObjectsHashTable
setDisplayDim:
_undimDisplayForce
addObject:
_withLock:
removeObject:
allObjects
enumerateObjectsUsingBlock:
_callObservers:
_preventIdleSleep
_setHIDUILockedState:
_preventIdleSleepForNumberOfSeconds:
_allowIdleSleep
cancelPreviousPerformRequestsWithTarget:selector:object:
setPreventIdleSleep:forReason:
performSelector:withObject:afterDelay:inModes:
undimDisplay
_nextLockTimeDuration
powerMonitorSystemSleepRequested:
powerMonitorSystemSleepRequestAborted:
powerMonitorSystemWillSleep:
powerMonitorSystemWillWakeFromSleep:
powerMonitorSystemDidWakeFromSleep:
_userEventsDidIdle
_userEventOccurred
_userEventPresenceTimerExpired
_requestedUserEventNotificationOccurred
_startAllowingIdleTimer
idleSleepTimeout
setIdleSleepTimeout:
allowIdleTimerToBeReset
setAllowIdleTimerToBeReset:
_observers
_lock
_displayDim
_allowIdleTimerToBeReset
_idleSleepTimeout
objectForKey:
count
mutableCopy
addEntriesFromDictionary:
typeSafeObjectForKey:ofType:
dictionaryByAddingEntriesFromDictionary:
typeSafeSetObject:forKey:
descriptorWithPage:usage:
builtinDisplay
nullDisplay
setWithObjects:
defaultSystemPredicate
setDisplays:
descriptors
unionSet:
setDescriptors:
systemTarget
ruleForDispatchingDiscreteEventsMatchingPredicate:toTarget:
defaultFocusPredicate
minusSet:
keyboardFocusTarget
dispatchDiscreteEventsForReason:withRules:
setSystemAppControlsFocusOnMainDisplay:
startReceivingEvents
dispatchingAssertion
setDispatchingAssertion:
_dispatchingAssertion
_isSecure
setOrientationController:
makeKeyAndVisible
setRootViewController:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
setWindow:
rootViewController
orientationController
_window
_rootViewController
_orientationController
sharedConnection
unlockScreenTypeWithOutSimplePasscodeType:
setDataSource:
animateRejectionAndReset
reloadData
animateOutInputFieldWithStyle:andRepromptWithTitle:completion:
passcodeEntryView:didEnterPasscode:
didCancelPasscodeEntryView:
didBeginEnteringPasscodeInView:
didClearPasscodeEntryView:
passcodeStyleForPasscodeEntryView:
defaultLengthOfSimplePasscodeForPasscodeEntryView:
minimumLengthOfComplexPasscodeForPasscodeEntryView:
maximumLengthOfComplexPasscodeForPasscodeEntryView:
shouldShowCancelButtonInPasscodeEntryView:
titleForPasscodeEntryView:
shouldShowCharactersInPasscodeEntryView:
_currentPasscodeEntryStyle
_firstPasscode
_entryView
setStateForFullPower:
postFullPower
setStateForPluggedIn:
postPluggedIn
setStateForCurvedBatteryCapacity:
postCurvedBattery
_fullPowerToken
_pluggedInToken
_curvedBatteryCapacityToken
_fullPowerTokenRegistered
_pluggedInTokenRegistered
_curvedBatterCapacityTokenRegistered
_removePreferencesObserver
setHideACPower:
setLowBatteryLevel:
postNotificationName:object:userInfo:
postNotificationName:object:
_loadPreferences
_addPreferencesObserver
logAWDMetric
setIsConnectedToUnsupportedChargingAccessory:
batteryCapacityAsPercentage
isOnAC
setIsOnAC:
isOnACForUI
setIsOnACForUI:
isBatteryCharging
setIsBatteryCharging:
isConnectedToUnsupportedChargingAccessory
batteryCapacity
setBatteryCapacity:
batteryStatusLogger
setBatteryStatusLogger:
supportsDetailedBatteryCapacity
setSupportsDetailedBatteryCapacity:
isConnectedToChargeIncapablePowerSource
setIsConnectedToChargeIncapablePowerSource:
hideACPower
lowBatteryLevel
chargerFamilyKey
setChargerFamilyKey:
_notifySender
_isOnAC
_isOnACForUI
_isBatteryCharging
_isConnectedToUnsupportedChargingAccessory
_supportsDetailedBatteryCapacity
_isConnectedToChargeIncapablePowerSource
_hideACPower
_batteryCapacity
_chargerFamilyKey
_batteryStatusLogger
_lowBatteryLevel
setWindowLevel:
setHidden:
_obliterationController
_canceledBlock
v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
hasService
TB,R,N
listening
TB,R,N,GisListening
Built-In
v16@?0^{__IOHIDEvent=}8
lockButtonTimer
T@"NSTimer",&,N,V_lockButtonTimer
idleSleepController
T@"PBAIdleSleepController",&,N,V_idleSleepController
%@ %@
timestamp
onAC
hasTimestamp
TB,N
TQ,N,V_timestamp
hasOnAC
TB,N,V_onAC
ARE_YOU_SURE_YOU_WANT_TO_CONTINUE_LABEL
General
WARNING_LABEL
small_passlock_wipe_green_check
small_passlock_wipe_red_x
v16@?0@"NSError"8
RESET_FAILED_MESSAGE
v12@?0B8
ownerDelegate
T@"<CSLObliterationViewControllerOwnerDelegate>",W,N,V_ownerDelegate
delegate
T@"<CSLObliterationViewControllerDelegate>",W,N,V_delegate
useBlackBackground
TB,N,V_useBlackBackground
com.apple.preboard.dr
com.apple.preboard.datarecovery
com.apple.preboard.datarecovery.callout
Data recovery failed
requiresDataRecovery
dataRecoveryPossible
down
CSLStartupButtonHeldCheckQueue
invertUI
com.apple.nano
ERASE_ALL_CONTENT_AND_SETTINGS_LABEL
CONNECT_TO_POWER_BEFORE_ERASE_LABEL
CANCEL_LABEL
%@ %p
 (%@)
orb-reset
RESET_OKAY
PreBoard
orb-cancel
RESET_CANCEL
RESET_TITLE
RESET_MESSAGE
mainView
T@"UIView",&,N,V_mainView
contentView
T@"UIView",&,N,V_contentView
mainViewController
T@"UIViewController",&,N,V_mainViewController
passcodeController
T@"PBAPasscodeViewController",&,N,V_passcodeController
dataRecoveryController
T@"PBADataRecoveryViewController",&,N,V_dataRecoveryController
dataRecoveryEngine
T@"PBADataRecoveryEngine",&,N,V_dataRecoveryEngine
isCompact
TB,V_isCompact
DATA_RECOVERY_OKAY
v16@?0@"PUICActionSheetItem"8
DATA_RECOVERY_INSTRUCTION
DATA_RECOVERY_PASSCODE_MISMATCH
DATA_RECOVERY_FAILED_MSG_TRYAGAIN
DATA_RECOVERY_FAILED_MSG_RESTORE
v12@?0f8
state
TQ,N,V_state
progressUI
T@"PBADataRecoveryProgressUIManager",&,N,V_progressUI
T@"<PBADataRecoveryViewControllerDelegate>",W,N,V_delegate
backlight
v32@?0@"<PBAIdleSleepObserving>"8Q16^B24
 retroactively
allowIdleTimerToBeReset
TB,N,V_allowIdleTimerToBeReset
displayDim
TB,N,GisDisplayDim,V_displayDim
idleSleepTimeout
Td,N,V_idleSleepTimeout
PBAHIDEventController
dispatchingAssertion
T@"<BSInvalidatable>",&,N,V_dispatchingAssertion
window
T@"UIWindow",&,N
rootViewController
T@"PBARootViewController",&,N,V_rootViewController
orientationController
T@"PBAOrientationController",&,N,V_orientationController
T@"UIWindow",&,N,V_window
com.apple.system.prefs.changed
DATA_RECOVERY_ENTER_PASSCODE
DATA_RECOVERY_VERIFY_PASSCODE
T@"<PBADataRecoveryPasscodeEntryViewControllerDelegate>",W,N,V_delegate
kIOSSHLBatteryNotChargingStatusChangedNotification
kIOSSHLACStatusChangeNotification
kIOSSHLUnsupportedChargingAccessoryStatusChangedNotification
isOnAC
TB,N,V_isOnAC
isOnACForUI
TB,N,V_isOnACForUI
isBatteryCharging
TB,N,V_isBatteryCharging
batteryCapacity
Tf,N,V_batteryCapacity
supportsDetailedBatteryCapacity
TB,N,V_supportsDetailedBatteryCapacity
isConnectedToChargeIncapablePowerSource
TB,N,V_isConnectedToChargeIncapablePowerSource
isConnectedToUnsupportedChargingAccessory
TB,N,V_isConnectedToUnsupportedChargingAccessory
hideACPower
TB,V_hideACPower
lowBatteryLevel
Tq,V_lowBatteryLevel
chargerFamilyKey
Ti,N,V_chargerFamilyKey
batteryStatusLogger
T@"<CSLBatteryStatusLogger>",W,N,V_batteryStatusLogger
SBHideACPower
SBLowBatteryLevel
Should Obliterate Window
PBAPasscodeViewController
PBAIdleSleepObserving
NSObject
CSLSMobileKeyBagObserver
PBALogoManager
CSLHIDEventListener
PBAApplication
AWDCarouselBatteryACStatusChanged
NSCopying
CSLObliterationConfirmationViewController
PBADataRecoveryEngine
CSLHIDButtonCheckProvider
CSLButtonCheckProviderProtocol
CSLStartupButtonHeldCheck
PBAOrientationController
CSLObliterationViewController
PBARootViewController
CSLObliterationViewControllerOwnerDelegate
CSLObliterationViewControllerDelegate
PBADataRecoveryViewControllerDelegate
CUISPasscodeViewControllerDelegate
PBADataRecoveryViewController
PBADataRecoveryPasscodeEntryViewControllerDelegate
PBAIdleSleepController
BSPowerMonitorObserver
Typesafe
PBAHIDEventController
PBASecureWindow
PBAAppDelegate
UIApplicationDelegate
PBADataRecoveryProgressUIManager
PBADataRecoveryPasscodeEntryViewController
CUISPasscodeEntryViewDelegate
CUISPasscodeEntryViewDataSource
_IOSSHLBatteryNotifySender
IOSSHLBatteryStatus
CSLStartupObliterationSecureWindow
CSLStartupObliterationPresenter
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@16B24
v28@0:8@"PBAIdleSleepController"16B24
v24@0:8@16
v32@0:8@16@24
v24@0:8@"CSLSMobileKeyBag"16
v32@0:8@"CSLSMobileKeyBag"16@"CSLSMobileKeyBagState"24
@20@0:8i16
v20@0:8B16
v16@0:8
@64@0:8q16q24@32@40@48@?56
v24@0:8@?16
^{__IOHIDEvent=}32@0:8I16^{__IOHIDEvent=}20I28
@"NSObject<OS_os_log>"
v36@0:8q16q24B32
v36@0:8@16f24@28
B24@0:8^{__IOHIDEvent=}16
v24@0:8^{__IOHIDEvent=}16
@"CSLStartupButtonHeldCheck"
@"CSLHIDEventListener"
@"CSLStartupObliterationPresenter"
@"NSTimer"
@"PBAIdleSleepController"
@24@0:8^{_NSZone=}16
v24@0:8Q16
{?="timestamp"b1"onAC"b1}
@20@0:8B16
@"PUICActivityIndicatorView"
@"<CSLObliterationViewControllerOwnerDelegate>"
@"<CSLObliterationViewControllerDelegate>"
@24@0:8@16
v40@0:8@16@?24@?32
@"NSObject<OS_dispatch_queue>"
@"CSLSMobileKeyBag"
d16@0:8
v32@0:8@16@?24
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?>24
v24@0:8@?<v@?B>16
^{__IOHIDEvent=}
@48@0:8@?16@?24@32@40
v32@0:8@?16@?24
@"<CSLButtonCheckProviderProtocol>"
@"FBSceneTransform"
@"UIButton"
@"UILabel"
v28@0:8B16@?20
v28@0:8B16@?<v@?>20
v32@0:8@"PBADataRecoveryViewController"16@?<v@?>24
v24@0:8@"PBADataRecoveryViewController"16
B32@0:8@16@24
@32@0:8@16@24
v28@0:8@"CUISPasscodeViewController"16B24
v32@0:8@"CUISPasscodeViewController"16@"NSString"24
B32@0:8@"CUISPasscodeViewController"16@"NSError"24
@"NSString"32@0:8@"CUISPasscodeViewController"16@"NSError"24
@"CSLObliterationConfirmationViewController"
@"UIView"
@"UIViewController"
@"PBAPasscodeViewController"
@"PBADataRecoveryViewController"
@"PBADataRecoveryEngine"
v24@0:8@"PBADataRecoveryPasscodeEntryViewController"16
v32@0:8@"PBADataRecoveryPasscodeEntryViewController"16@"NSString"24
v20@0:8f16
@"CUISAlertSheetController"
@"PBADataRecoveryPasscodeEntryViewController"
@"NSString"
@"<PBADataRecoveryViewControllerDelegate>"
@"PBADataRecoveryProgressUIManager"
B24@0:8@"BSPowerMonitor"16
v24@0:8@"BSPowerMonitor"16
v28@0:8B16@20
v24@0:8d16
@"NSHashTable"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@32@0:8@16#24
@"<BSInvalidatable>"
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
@"PBARootViewController"
@"PBAOrientationController"
v32@0:8@"CUISPasscodeEntryView"16@"NSString"24
v24@0:8@"CUISPasscodeEntryView"16
Q24@0:8@16
Q24@0:8@"CUISPasscodeEntryView"16
B24@0:8@"CUISPasscodeEntryView"16
@"NSString"24@0:8@"CUISPasscodeEntryView"16
@"CUISPasscodeEntryView"
@"<PBADataRecoveryPasscodeEntryViewControllerDelegate>"
i16@0:8
f16@0:8
q16@0:8
v24@0:8q16
v20@0:8i16
@"_IOSSHLBatteryNotifySender"
@"<CSLBatteryStatusLogger>"
@"CSLObliterationViewController"
%p init
%p dealloc
already listening for events
was not listening for events
will bring up obliteration check
user canceled - will not obliterate
usagePage: 0x%x usage: 0x%x downEvent: %d
Lock button down
Shutting down device
Lock button up, lockButtonTimer = %@
Triggering fail safe obliteration
Triggering unpair with device %@
-unpairWithDevice returns Error %@
Obliteration failed to start: '%@'
Unpairing/Obliteration has begun
crown?(%d:%d) %s  [startup button held check]
unexpected hid event: %p (%d) [startup button held check]
cannot start listening, no listener
hidEventListener does not have a service
button is down at startup, waiting to see if down long enough
button no longer down, ignoring timer expiration
button held long enough
button no longer down, but did not see button up event
button held long enough and still held when callback changed
button no longer down, after callback changed, likely already canceled by user
button still down, waiting for timer to fire
button down again - will ignore
button released, not held long enough
button up again - will ignore
callback already made, ignoring second request (%{BOOL}u)
battery now charging, will confirm obliteration
battery not charging, will until it is before proceeding to confirm obliteration
PreBoard will not show passcode entry because device is already unlocked (state=%@)
unlocked, exiting...
try obliteration after data recovery failed
exiting as result of successful unlock
Data recovery failed with error %{public}@
Dimming display
Got kIOMessageCanSystemSleep
Got kIOMessageSystemWillNotSleep
Got kIOMessageSystemWillSleep
Got kIOMessageSystemWillPowerOn
Got kIOMessageSystemHasPoweredOn
disabling idle timer
Setting next autolock duration to %f%@
User Events Did Idle
User Events Did UnIdle
User Events Occurred
User Events Presence Timer Expired
User Event Notification fired
Got notification that backboardd is done doing setup work and is ready for the idle timer to be reset
########## DBG_CODE: (%d)
will ask to obliterate
will confirm obliteration
obliteration confirmation attempted before obliteration
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>com.apple.CommCenter.Preferences-delete</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.pairedunlock.userauthentication</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.ids.registration-reset</key>
<true/>
<key>com.apple.private.kernel.darkboot</key>
<true/>
<key>com.apple.private.security.no-sandbox</key>
<true/>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
