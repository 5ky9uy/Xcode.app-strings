@(#)PROGRAM:PreBoard  PROJECT:Carousel-1110.4.60
init
mainScreen
bounds
initWithFrame:
blackColor
setBackgroundColor:
center
setCenter:
setAnimating:
addSubview:
failSafeObliterate
sharedInstance
activeDeviceSelectorBlock
getDevicesMatching:
firstObject
unpairWithDevice:shouldObliterate:operationHasBegun:
showResetFailureMessage
mainBundle
localizedStringForKey:value:table:
setText:
setTextAlignment:
setNumberOfLines:
systemOrangeColor
setTextColor:
setAlpha:
removeFromSuperview
showObliterationAlert
animateWithDuration:delay:options:animations:completion:
isOnAC
isBatteryCharging
batteryCapacity
currentConditionsAllowObliteration:
initWithDelegate:
obliterateWithSpinnerInView:forceSWUpdate:
delegate
.cxx_destruct
_view
_forceSWUpdate
_spinner
_delegate
T@"<CSLObliterationAlertProviding>",R,W,N,V_delegate
initWithMode:
sharedController
addObserver:
reset
viewDidAppear:
viewWillDisappear:
lockState
passcodeViewController:didComplete:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
idleSleepController:displayWillSleep:
keybagDidUnlockForTheFirstTime:
keybagWillBeginProcessingStateChange:
keybag:extendedStateDidChange:
keybagDidFinishProcessingStateChange:
copy
isTouchLocked
setDigitizerEnabled:
setProximityDetectionMode:
isCoverGestureEnabled
addObject:
isInactiveTapGestureEnabled
isAlwaysOnSwipeGestureEnabled
isAlwaysOnHoldGestureEnabled
isAlwaysOnTapThroughEnabled
isAlwaysOnSwipeThroughEnabled
isAlwaysOnHoldThroughEnabled
setMultitouchHostStateKeys:
buildModeForReason:builder:
requestUISensorMode:
invalidate
sensorMode
T@"CSLHIDUISensorMode",R,N
updateSensorMode:
_lock
_sensorMode
_sensorModeAssertion
dismissActions
countByEnumeratingWithState:objects:count:
overlayDescriptor
isInterstitial
functionWithName:
settingsWithDuration:timingFunction:
dismissWithAnimation:
_performBlockAfterCATransactionCommits:
dismissRenderOverlay
showLogo
hideLogo
stopListening
dealloc
hasService
initWithServiceUsagePage:usage:additionalMatchingCriteria:log:eventQueue:eventBlock:
waitForMatchedHIDService:
copyEventType:matchingEvent:options:
isListening
startListening
_log
_listening
TB,R,N
listening
TB,R,N,GisListening
initWithUsagePage:usage:
resetIdleTimerAndUndim:
prepareForObliteration
obliterationCancelled
presentObliterationControllerWithCanceledBlock:
initWithHeldBlock:notHeldBlock:callbackQueue:buttonCheckProvider:
setIdleSleepController:
_performButtonHeldCheckIfNecessary:usage:
dimDisplay
updateBatteryState:
_lockButtonDown
_lockButtonUp
_menuButtonDown
_menuButtonUp
__handleHIDEvent:
_handleHIDEvent:
_hidEvent
isDisplayDim
_startLockButtonTimer
initWithReason:
setSource:
shutdownUsingOptions:
_lockButtonLongPress
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setLockButtonTimer:
lockButtonTimer
_cancelLockButtonTimer
shouldCheckInWithBackboard
registerAsSystemApp
_createStatusBarWithRequestedStyle:orientation:hidden:
_isSpringBoard
applicationWillOrderInContext:windowLevel:screen:
applicationDidOrderOutContext:screen:
batteryStatusDidChange:
_handlePhysicalButtonEvent:
idleSleepController
_buttonHeldCheck
_hidScreenCoverListener
_obliterationPresenter
_screenCovered
_lockButtonTimer
_idleSleepController
T@"NSTimer",&,N,V_lockButtonTimer
T@"PBAIdleSleepController",&,N,V_idleSleepController
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
numberWithBool:
allocWithZone:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
setOnAC:
setHasOnAC:
hasOnAC
readFrom:
writeTo:
copyTo:
mergeFrom:
timestamp
onAC
_timestamp
_onAC
_has
TB,N
TQ,N,V_timestamp
TB,N,V_onAC
initWithMobileKeyBag:
state
recoveryRequired
recoveryPossible
_queue_performDataRecoveryWithPasscode:progressHandler:completion:
beginRecovery:error:
escrowCount
waitForUnlockWithTimeout:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
requiresDataRecovery
dataRecoveryPossible
performDataRecoveryWithPasscode:progressHandler:completion:
_queue
_calloutQueue
_queue_mobileKeyBag
mainConfiguration
initWithDisplayConfiguration:
initWithIdentifier:priority:appearanceStyle:rootWindow:
raise:format:
_createInitialAppScene
sceneTransformer
definition
bundleIdentifier
identityForIdentifier:
setIdentity:
localIdentity
setClientIdentity:
specification
setSpecification:
parametersForSpecification:
setDisplayConfiguration:
_referenceBounds
setFrame:
setLevel:
setForeground:
setInterfaceOrientation:
isUISubclass
setDeviceOrientationEventsEnabled:
currentVariant
updateSettingsWithBlock:
settings
interfaceOrientation
setStatusBarStyle:
updateClientSettingsWithBlock:
createSceneWithDefinition:initialParameters:
presentationBinder
addScene:
activate
transformer
isActivated
setPresentationBinder:
rootWindow
setRootWindow:
_activated
_presentationBinder
_rootWindow
T@"UIRootWindowScenePresentationBinder",&,N,V_presentationBinder
T@"UIRootSceneWindow",&,N,V_rootWindow
T@"UIMutableTransformer",R,N
activated
TB,R,N,GisActivated,V_activated
buttonHoldTime
startupUsingEventQueue:withCompletion:
startListeningForEventsWithBlock:
stopListeningForEvents
isButtonDown
_hidEventListener
_hidKeyboardEventToMatch
_buttonEventBlock
_usagePage
_usage
_startListeningForEvents
_stopListeningForEvents
_performCallbackWasHeld:
setHeldBlock:notHeldBlock:
_provider
_heldBlock
_notHeldBlock
_callbackQueue
_keyWasDown
_keyWasReleased
_timerDidFire
_callbackPerformed
_eventQueue
rotationWithRadians:
addTransform:reason:
initWithTransformer:
_transformer
T@"UIMutableTransformer",R,N,V_transformer
defaultCenter
_batteryStatusChanged:
addObserver:selector:name:object:
initWithActions:title:message:
_configureObliterationControllerBasedOnConditions
setUseNonWindowPresentation:
setShowCancelButton:
setShouldTintCancelButton:
setDelegate:
presentViewController:animated:completion:
_conditionsChanged:
showObliterationConfirmationDialog
actionWithTitle:style:actionHandler:
setEnabled:
arrayWithObjects:count:
groupWithActions:title:
setGroups:
setTitle:
setMessage:
willMoveToParentViewController:
view
removeFromParentViewController
removeObserver:
dismissViewControllerAnimated:completion:
actionContentControllerCancel:
onCharger
offCharger
actionSheetController:willTapActionAtIndexPath:
actionSheetController:didTapActionAtIndexPath:
actionSheetController:willDismissWithActionAtIndexPath:
actionSheetController:didDismissWithActionAtIndexPath:
initWithViewController:allowObliterationOnBattery:cancelation:
providedViewController
allowObliterationOnBattery
cancelation
setCancelation:
_obliterationController
_resetAction
_obliterationConfirmationController
_eraseAction
_obliterator
_conditionsInitialized
_lastConditions
_allowObliterationOnBattery
_providedViewController
_cancelation
T@?,C,N,V_cancelation
T@"UIViewController",R,W,N,V_providedViewController
TB,R,N,V_allowObliterationOnBattery
isViewLoaded
layer
name
setName:
stringByAppendingFormat:
viewDidLoad
setClipsToBounds:
updateUIForKeyBagState:
presentDataRecovery
isEffectivelyLocked
presentDeviceUnlock
finishDeviceUnlock
addChildViewController:
didMoveToParentViewController:
setDataRecoveryEngine:
setMainViewController:
setShouldUseLockScreenAnimation:
mainViewController
domain
isEqualToString:
code
setDataRecoveryController:
showObliterationDialog
dataRecoveryController
dataRecoveryViewController:requestDismissalWithCompletion:
dataRecoveryViewControllerRequestObliteration:
passcodeViewController:didVerifyPasscode:
passcodeViewController:didFailVerificationWithError:
errorMessageForPasscodeViewController:error:
_removePasscodeController
mainView
setMainView:
contentView
setContentView:
passcodeController
setPasscodeController:
dataRecoveryEngine
obliterationPresenter
setObliterationPresenter:
_mainView
_contentView
_mainViewController
_passcodeController
_dataRecoveryController
_dataRecoveryEngine
T@"UIView",&,N,V_mainView
T@"UIView",&,N,V_contentView
T@"UIViewController",&,N,V_mainViewController
T@"PBAPasscodeViewController",&,N,V_passcodeController
T@"PBADataRecoveryViewController",&,N,V_dataRecoveryController
T@"PBADataRecoveryEngine",&,N,V_dataRecoveryEngine
T@"CSLStartupObliterationPresenter",&,N,V_obliterationPresenter
handlePasscodeCheck
setShouldDismissOnButtonPresses:
presentedViewController
showPasscodeEntry
dataUsingEncoding:
beginDataRecoveryWithPasscode:
showProgressUIWithValue:
hideProgressUI
unhideProgress
updateProgress:
resetProgress
hideProgress
lockSkippingGracePeriod:
createStashBag:completion:
handleDataRecoveryRetry
handleDataRecoveryFailure
didCancelPasscodeEntryViewController:
didMismatchPasscodeEntryViewController:
passcodeEntryViewController:didCompleteWithPasscode:
setState:
progressUI
setProgressUI:
progress
setProgress:
_alertSheet
_passcodeViewController
_passcode
_progressHidden
_progress
_state
_progressUI
TQ,N,V_state
T@"PBADataRecoveryProgressUIManager",&,N,V_progressUI
Tf,N,V_progress
T@"<PBADataRecoveryViewControllerDelegate>",W,N,V_delegate
weakObjectsHashTable
setDisplayDim:
_undimDisplayForce
_withLock:
removeObject:
allObjects
enumerateObjectsUsingBlock:
initWithCoverGestureEnabled:inactiveTapGestureEnabled:alwaysOnSwipeGestureEnabled:alwaysOnHoldGestureEnabled:alwaysOnTapThroughEnabled:alwaysOnSwipeThroughEnabled:alwaysOnHoldThroughEnabled:touchLocked:
_callObservers:
_preventIdleSleep
_setHIDUILockedState:
_preventIdleSleepForNumberOfSeconds:
_allowIdleSleep
cancelPreviousPerformRequestsWithTarget:selector:object:
setPreventIdleSleep:forReason:
performSelector:withObject:afterDelay:inModes:
undimDisplay
_nextLockTimeDuration
_userEventsDidIdle
_userEventOccurred
_userEventPresenceTimerExpired
_requestedUserEventNotificationOccurred
_startAllowingIdleTimer
idleSleepTimeout
setIdleSleepTimeout:
allowIdleTimerToBeReset
setAllowIdleTimerToBeReset:
_observers
_hidProvider
_displayDim
_allowIdleTimerToBeReset
_idleSleepTimeout
TB,N,V_allowIdleTimerToBeReset
displayDim
TB,N,GisDisplayDim,V_displayDim
Td,N,V_idleSleepTimeout
setShouldWaitForMigrator:
applicationProxyForIdentifier:
setRegisterAdditionalServicesBlock:
objectForKey:
count
mutableCopy
addEntriesFromDictionary:
typeSafeObjectForKey:ofType:
dictionaryByAddingEntriesFromDictionary:
typeSafeSetObject:forKey:
descriptorWithPage:usage:
builtinDisplay
nullDisplay
setWithObjects:
defaultSystemPredicate
setDisplays:
descriptors
unionSet:
setDescriptors:
systemTarget
ruleForDispatchingDiscreteEventsMatchingPredicate:toTarget:
defaultFocusPredicate
minusSet:
keyboardFocusTarget
dispatchDiscreteEventsForReason:withRules:
setSystemAppControlsFocusOnMainDisplay:
startReceivingEvents
dispatchingAssertion
setDispatchingAssertion:
_dispatchingAssertion
T@"<BSInvalidatable>",&,N,V_dispatchingAssertion
_isSecure
setOrientationController:
makeKeyAndVisible
setRootViewController:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
window
setWindow:
T@"UIWindow",&,N
rootViewController
orientationController
sceneManager
setSceneManager:
_window
_rootViewController
_orientationController
_sceneManager
T@"PBAOrientationController",&,N,V_orientationController
T@"CSLAlternateSystemAppSceneManager",&,N,V_sceneManager
T@"UIWindow",&,N,V_window
T@"PBARootViewController",&,N,V_rootViewController
defaultContext
newSceneIdentityTokenForIdentity:
setDefaultSceneToken:
_newApplicationInitializationContext
_hostsSystemStatusBar
disablesFrontBoardImplicitWindowScenes
sharedConnection
unlockScreenTypeWithOutSimplePasscodeType:
setDataSource:
animateRejectionAndReset
reloadData
animateOutInputFieldWithStyle:andRepromptWithTitle:completion:
didCancelPasscodeEntryView:
didBeginEnteringPasscodeInView:
didClearPasscodeEntryView:
passcodeEntryView:didEnterPasscode:
passcodeEntryView:didUpdatePasscode:
passcodeStyleForPasscodeEntryView:
defaultLengthOfSimplePasscodeForPasscodeEntryView:
minimumLengthOfComplexPasscodeForPasscodeEntryView:
maximumLengthOfComplexPasscodeForPasscodeEntryView:
shouldShowCancelButtonInPasscodeEntryView:
titleForPasscodeEntryView:
shouldShowOKButtonInPasscodeEntryView:
shouldShowCharactersInPasscodeEntryView:
_currentPasscodeEntryStyle
_firstPasscode
_entryView
_simplePasscodeLength
T@"<PBADataRecoveryPasscodeEntryViewControllerDelegate>",W,N,V_delegate
setStateForFullPower:
postFullPower
setStateForPluggedIn:
postPluggedIn
setStateForCurvedBatteryCapacity:
postCurvedBattery
_fullPowerToken
_pluggedInToken
_curvedBatteryCapacityToken
_fullPowerTokenRegistered
_pluggedInTokenRegistered
_curvedBatterCapacityTokenRegistered
_removePreferencesObserver
setHideACPower:
setLowBatteryLevel:
postNotificationName:object:userInfo:
postNotificationName:object:
isOnACForUI
isConnectedToUnsupportedChargingAccessory
Tf,R,N
_loadPreferences
_addPreferencesObserver
logAWDMetric
setIsConnectedToUnsupportedChargingAccessory:
batteryCapacityAsPercentage
setIsOnAC:
setIsOnACForUI:
setIsBatteryCharging:
setBatteryCapacity:
batteryStatusLogger
setBatteryStatusLogger:
supportsDetailedBatteryCapacity
setSupportsDetailedBatteryCapacity:
isConnectedToChargeIncapablePowerSource
setIsConnectedToChargeIncapablePowerSource:
hideACPower
lowBatteryLevel
chargerFamilyKey
setChargerFamilyKey:
_notifySender
_isOnAC
_isOnACForUI
_isBatteryCharging
_isConnectedToUnsupportedChargingAccessory
_supportsDetailedBatteryCapacity
_isConnectedToChargeIncapablePowerSource
_hideACPower
_batteryCapacity
_chargerFamilyKey
_batteryStatusLogger
_lowBatteryLevel
TB,N,V_isOnAC
TB,N,V_isOnACForUI
TB,N,V_isBatteryCharging
Tf,N,V_batteryCapacity
TB,N,V_supportsDetailedBatteryCapacity
TB,N,V_isConnectedToChargeIncapablePowerSource
TB,N,V_isConnectedToUnsupportedChargingAccessory
TB,V_hideACPower
Tq,V_lowBatteryLevel
Ti,N,V_chargerFamilyKey
T@"<CSLBatteryStatusLogger>",W,N,V_batteryStatusLogger
setHidden:
sharedApplication
connectedScenes
_getWindowScene
windows
initWithWindowScene:
initWithScreen:
setWindowLevel:
presentObliterationControllerFromViewController:withCanceledBlock:
_obliterationAlertProvider
builderWithObject:ofExpectedClass:
appendBool:counterpart:
isEqual
builder
appendBool:
builderWithObject:
appendBool:withName:ifEqualTo:
appendBool:withName:
build
mutableCopyWithZone:
_coverGestureEnabled
_inactiveTapGestureEnabled
_alwaysOnSwipeGestureEnabled
_alwaysOnHoldGestureEnabled
_alwaysOnTapThroughEnabled
_alwaysOnSwipeThroughEnabled
_alwaysOnHoldThroughEnabled
_touchLocked
coverGestureEnabled
TB,R,N,GisCoverGestureEnabled,V_coverGestureEnabled
inactiveTapGestureEnabled
TB,R,N,GisInactiveTapGestureEnabled,V_inactiveTapGestureEnabled
alwaysOnSwipeGestureEnabled
TB,R,N,GisAlwaysOnSwipeGestureEnabled,V_alwaysOnSwipeGestureEnabled
alwaysOnHoldGestureEnabled
TB,R,N,GisAlwaysOnHoldGestureEnabled,V_alwaysOnHoldGestureEnabled
alwaysOnTapThroughEnabled
TB,R,N,GisAlwaysOnTapThroughEnabled,V_alwaysOnTapThroughEnabled
alwaysOnSwipeThroughEnabled
TB,R,N,GisAlwaysOnSwipeThroughEnabled,V_alwaysOnSwipeThroughEnabled
alwaysOnHoldThroughEnabled
TB,R,N,GisAlwaysOnHoldThroughEnabled,V_alwaysOnHoldThroughEnabled
touchLocked
TB,R,N,GisTouchLocked,V_touchLocked
setCoverGestureEnabled:
setInactiveTapGestureEnabled:
setAlwaysOnSwipeGestureEnabled:
setAlwaysOnHoldGestureEnabled:
setAlwaysOnTapThroughEnabled:
setAlwaysOnSwipeThroughEnabled:
setAlwaysOnHoldThroughEnabled:
setTouchLocked:
TB,N,GisCoverGestureEnabled
TB,N,GisInactiveTapGestureEnabled
TB,N,GisAlwaysOnSwipeGestureEnabled
TB,N,GisAlwaysOnHoldGestureEnabled
TB,N,GisAlwaysOnTapThroughEnabled
TB,N,GisAlwaysOnSwipeThroughEnabled
TB,N,GisAlwaysOnHoldThroughEnabled
TB,N,GisTouchLocked
Triggering fail safe obliteration
Triggering unpair with device %@
-unpairWithDevice returns Error %@
Obliteration failed to start: '%@'
Unpairing/Obliteration has begun
updated sensor mode to %@
%p init
%p dealloc
already listening for events
was not listening for events
starting obliteration hold check (%0x:%0x)
%@ preparing for obliteration -- informing delegate
%@ obliteration cancelled -- informing delegate
button not held
button held check already running
usagePage: 0x%x usage: 0x%x downEvent: %d
Lock button down
Shutting down device
Lock button up, lockButtonTimer = %@
Menu button down
Menu button up
%@ dealloc'd
button ignored: (%d:%d) %s  [startup button held check]
unexpected hid event: %p (%d) [startup button held check]
cannot start listening, no listener
hidEventListener does not have a service
button is down, waiting to see if down long enough
button no longer down, ignoring timer expiration
button held long enough
button no longer down, but did not see button up event
no provider
button held long enough and still held when callback changed
button no longer down, after callback changed, likely already canceled by user
button still down, waiting for timer to fire
%@ starting to listen for events
%@ button down again - will ignore
%@ button released, not held long enough
%@ button up again - will ignore
%@ stop listening for events
button was held %{BOOL}u making callback %{BOOL}u _heldBlock %@, _notHeldBlock %@
callback already made, ignoring second request (%{BOOL}u)
presenting obliteration controller %@
presented obliteration controller %@
device on power, %@
device off power, %@
presenting obliteration confirmation controller %@
presented obliteration confirmation controller %@
actionContentControllerCancel
user took device off power while obliteration confirmation dialog is shown, canceling
PreBoard will not show passcode entry because device is already unlocked (state=%@)
unlocked, exiting...
obliteration canceled by user
try obliteration after data recovery failed
%@ preparing for obliteration -- informing data recovery
%@ preparing for obliteration -- nothing to do
%@ obliteration cancelled -- informing data recovery
%@ obliteration cancelled -- nothing to do
handling data recovery retry
handling data recovery failure
recovery progress %1.2f
exiting as result of successful unlock
Data recovery failed with error %{public}@
Data recovery is possible
Data recovery is not possible
%@ preparing for obliteration -- hiding progress
%@ preparing for obliteration -- no progress shown, nothing to do
%@ obliteration cancelled -- showing recovery progress
%@ obliteration cancelled -- recovery failed
%@ obliteration cancelled -- recovery retry
%@ obliteration cancelled -- returning to passcode
%@ obliteration cancelled -- recovery completed, ignoring
%@ obliteration cancelled -- no progress shown, nothing to do
Dimming display
disabling idle timer
Setting next autolock duration to %f%@
User Events Did Idle
User Events Did UnIdle
User Events Occurred
User Events Presence Timer Expired
User Event Notification fired
Got notification that backboardd is done doing setup work and is ready for the idle timer to be reset
%@ preparing for obliteration -- calling rootViewController
%@ obliteration cancelled -- calling rootViewController
########## DBG_CODE: (%d)
will ask to obliterate using %@
looking at scene %@
windowScene = %@
v16@?0@"NSError"8
RESET_FAILED_MESSAGE
General
v8@?0
v12@?0B8
CSLHIDUISensorMode
CoverGestureEnabled
WakeOnTapEnabled
WakeOnSwipeEnabled
WakeOnLongPressEnabled
WakeOnTapThroughEnabled
WakeOnSwipeThroughEnabled
WakeOnLongPressThroughEnabled
v16@?0@"BKSMutableHIDUISensorMode"8
Built-In
v16@?0^{__IOHIDEvent=}8
buttonLongPress
%@ %@
timestamp
onAC
com.apple.preboard.dr
com.apple.preboard.datarecovery
com.apple.preboard.datarecovery.callout
Data recovery failed
UIRootSceneWindow-%@-%p
-activate called on %@ that is already activated
v16@?0@"FBSMutableSceneSettings"8
v16@?0@"FBSMutableSceneClientSettings"8
down
CSLStartupButtonHeldCheckQueue
invertUI
com.apple.nano
Inverted UI
ERASE_ALL_CONFIRM_ACTION
v16@?0@"PUICActionSheetItem"8
ERASE_ALL_CONTENT_AND_SETTINGS_TITLE
ERASE_ALL_DETAIL
CONNECT_TO_POWER_BEFORE_ERASE
ARE_YOU_SURE_YOU_WANT_TO_CONTINUE_LABEL
ERASE_CONTINUE_WARNING_DETAIL
%@ %p
 (%@)
DATA_RECOVERY_OKAY
PreBoard
DATA_RECOVERY_INSTRUCTION
DATA_RECOVERY_PASSCODE_MISMATCH
DATA_RECOVERY_FAILED_MSG_TRYAGAIN
RESET_OKAY
DATA_RECOVERY_FAILED_MSG_RESTORE
v12@?0f8
backlight
v32@?0@"<PBAIdleSleepObserving>"8Q16^B24
 retroactively
v16@?0@"FBMutableSystemShellInitializationOptions"8
PBAHIDEventController
com.apple.system.prefs.changed
DATA_RECOVERY_ENTER_PASSCODE
DATA_RECOVERY_VERIFY_PASSCODE
kIOSSHLBatteryStatusChangedNotification
kIOSSHLUnsupportedChargingAccessoryStatusChangedNotification
SBHideACPower
SBLowBatteryLevel
v24@?0@"UIScene"8^B16
Should Obliterate Window
B8@?0
coverGestureEnabled
touchLocked
inactiveTapGestureEnabled
alwaysOnSwipeGestureEnabled
alwaysOnHoldGestureEnabled
alwaysOnTapThroughEnabled
alwaysOnSwipeThroughEnabled
CSLObliterator
PBAPasscodeViewController
PBAIdleSleepObserving
NSObject
CSLSMobileKeyBagObserver
CSLHIDUISensorModeProvider
CSLHIDUISensorModeProviding
PBALogoManager
CSLHIDEventListener
PBAApplication
AWDCarouselBatteryACStatusChanged
NSCopying
PBADataRecoveryEngine
CSLAlternateSystemAppSceneManager
CSLHIDButtonCheckProvider
CSLButtonCheckProviderProtocol
CSLStartupButtonHeldCheck
PBAOrientationController
CSLObliterationAlertProvider
PUICActionSheetControllerDelegate
PUICActionContentControllerDelegate
CSLObliterationAlertProviding
PBARootViewController
PBADataRecoveryViewControllerDelegate
CUISPasscodeViewControllerDelegate
PBAObliterationPreparing
PBADataRecoveryViewController
PBADataRecoveryPasscodeEntryViewControllerDelegate
PBAIdleSleepController
Typesafe
PBAHIDEventController
PBASecureWindow
PBAAppDelegate
UIApplicationDelegate
CSLAlternateSystemShellApplication
PBADataRecoveryProgressUIManager
PBADataRecoveryPasscodeEntryViewController
CUISPasscodeEntryViewDelegate
CUISPasscodeEntryViewDataSource
_IOSSHLBatteryNotifySender
IOSSHLBatteryStatus
IOSSHLBatteryStatusProviding
CSLStartupObliterationSecureRootWindow
CSLStartupObliterationSecureWindow
CSLStartupObliterationPresenter
CSLHIDUISensorMode
NSMutableCopying
CSLMutableHIDUISensorMode
B20@0:8B16
@24@0:8@16
v28@0:8@16B24
v16@0:8
@16@0:8
@"UIView"
@"PUICActivityIndicatorView"
@"<CSLObliterationAlertProviding>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@"PBAIdleSleepController"16B24
v24@0:8@16
v32@0:8@16@24
v24@0:8@"CSLSMobileKeyBag"16
v32@0:8@"CSLSMobileKeyBag"16@"CSLSMobileKeyBagState"24
@20@0:8i16
v20@0:8B16
@"CSLHIDUISensorMode"16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CSLHIDUISensorMode"
@"<BSInvalidatable>"
@64@0:8q16q24@32@40@48@?56
v24@0:8@?16
^{__IOHIDEvent=}32@0:8I16^{__IOHIDEvent=}20I28
@"NSObject<OS_os_log>"
v24@0:8I16I20
v36@0:8q16q24B32
v36@0:8@16f24@28
B24@0:8^{__IOHIDEvent=}16
v24@0:8^{__IOHIDEvent=}16
@"CSLStartupButtonHeldCheck"
@"CSLHIDEventListener"
@"CSLStartupObliterationPresenter"
@"NSTimer"
@"PBAIdleSleepController"
@24@0:8^{_NSZone=}16
v24@0:8Q16
{?="timestamp"b1"onAC"b1}
v40@0:8@16@?24@?32
@"NSObject<OS_dispatch_queue>"
@"CSLSMobileKeyBag"
@"UIRootWindowScenePresentationBinder"
@"UIRootSceneWindow"
d16@0:8
v32@0:8@16@?24
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?>24
v24@0:8@?<v@?B>16
@24@0:8I16I20
^{__IOHIDEvent=}
@48@0:8@?16@?24@32@40
v32@0:8@?16@?24
@"<CSLButtonCheckProviderProtocol>"
@"UIMutableTransformer"
v24@0:8@"PUICActionContentController"16
v32@0:8@"PUICActionSheetController"16@"NSIndexPath"24
@36@0:8@16B24@?28
@?16@0:8
@"CUISAlertSheetController"
@"PUICActionSheetItem"
@"CSLObliterator"
@"UIViewController"
v32@0:8@"PBADataRecoveryViewController"16@?<v@?>24
v24@0:8@"PBADataRecoveryViewController"16
B32@0:8@16@24
@32@0:8@16@24
v28@0:8@"CUISPasscodeViewController"16B24
v32@0:8@"CUISPasscodeViewController"16@"NSString"24
B32@0:8@"CUISPasscodeViewController"16@"NSError"24
@"NSString"32@0:8@"CUISPasscodeViewController"16@"NSError"24
@"PBAPasscodeViewController"
@"PBADataRecoveryViewController"
@"PBADataRecoveryEngine"
v24@0:8@"PBADataRecoveryPasscodeEntryViewController"16
v32@0:8@"PBADataRecoveryPasscodeEntryViewController"16@"NSString"24
v20@0:8f16
f16@0:8
@"PBADataRecoveryPasscodeEntryViewController"
@"NSString"
@"<PBADataRecoveryViewControllerDelegate>"
@"PBADataRecoveryProgressUIManager"
v28@0:8B16@20
v24@0:8d16
@"NSHashTable"
@"CSLHIDUISensorModeProvider"
@32@0:8@16#24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
@"PBARootViewController"
@"PBAOrientationController"
@"CSLAlternateSystemAppSceneManager"
v24@0:8@"CUISPasscodeEntryView"16
v32@0:8@"CUISPasscodeEntryView"16@"NSString"24
Q24@0:8@16
Q24@0:8@"CUISPasscodeEntryView"16
B24@0:8@"CUISPasscodeEntryView"16
@"NSString"24@0:8@"CUISPasscodeEntryView"16
@"CUISPasscodeEntryView"
@"<PBADataRecoveryPasscodeEntryViewControllerDelegate>"
i16@0:8
q16@0:8
v24@0:8q16
v20@0:8i16
@"_IOSSHLBatteryNotifySender"
@"<CSLBatteryStatusLogger>"
@"CSLObliterationAlertProvider"
@48@0:8B16B20B24B28B32B36B40B44
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>com.apple.CommCenter.Preferences-delete</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.stash.access</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.pairedunlock.userauthentication</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.ids.registration-reset</key>
<true/>
<key>com.apple.private.kernel.darkboot</key>
<true/>
<key>com.apple.private.security.no-sandbox</key>
<true/>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
@(#)PROGRAM:PreBoard  PROJECT:Carousel-1110.4.60
init
mainScreen
bounds
initWithFrame:
blackColor
setBackgroundColor:
center
setCenter:
setAnimating:
addSubview:
failSafeObliterate
sharedInstance
activeDeviceSelectorBlock
getDevicesMatching:
firstObject
unpairWithDevice:shouldObliterate:operationHasBegun:
showResetFailureMessage
mainBundle
localizedStringForKey:value:table:
setText:
setTextAlignment:
setNumberOfLines:
systemOrangeColor
setTextColor:
setAlpha:
removeFromSuperview
showObliterationAlert
animateWithDuration:delay:options:animations:completion:
isOnAC
isBatteryCharging
batteryCapacity
currentConditionsAllowObliteration:
initWithDelegate:
obliterateWithSpinnerInView:forceSWUpdate:
delegate
.cxx_destruct
_view
_forceSWUpdate
_spinner
_delegate
T@"<CSLObliterationAlertProviding>",R,W,N,V_delegate
initWithMode:
sharedController
addObserver:
reset
viewDidAppear:
viewWillDisappear:
lockState
passcodeViewController:didComplete:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
idleSleepController:displayWillSleep:
keybagDidUnlockForTheFirstTime:
keybagWillBeginProcessingStateChange:
keybag:extendedStateDidChange:
keybagDidFinishProcessingStateChange:
copy
isTouchLocked
setDigitizerEnabled:
setProximityDetectionMode:
isCoverGestureEnabled
addObject:
isInactiveTapGestureEnabled
isAlwaysOnSwipeGestureEnabled
isAlwaysOnHoldGestureEnabled
isAlwaysOnTapThroughEnabled
isAlwaysOnSwipeThroughEnabled
isAlwaysOnHoldThroughEnabled
setMultitouchHostStateKeys:
buildModeForReason:builder:
requestUISensorMode:
invalidate
sensorMode
T@"CSLHIDUISensorMode",R,N
updateSensorMode:
_lock
_sensorMode
_sensorModeAssertion
dismissActions
countByEnumeratingWithState:objects:count:
overlayDescriptor
isInterstitial
functionWithName:
settingsWithDuration:timingFunction:
dismissWithAnimation:
_performBlockAfterCATransactionCommits:
dismissRenderOverlay
showLogo
hideLogo
stopListening
dealloc
hasService
initWithServiceUsagePage:usage:additionalMatchingCriteria:log:eventQueue:eventBlock:
waitForMatchedHIDService:
copyEventType:matchingEvent:options:
isListening
startListening
_log
_listening
TB,R,N
listening
TB,R,N,GisListening
initWithUsagePage:usage:
resetIdleTimerAndUndim:
prepareForObliteration
obliterationCancelled
presentObliterationControllerWithCanceledBlock:
initWithHeldBlock:notHeldBlock:callbackQueue:buttonCheckProvider:
setIdleSleepController:
_performButtonHeldCheckIfNecessary:usage:
dimDisplay
updateBatteryState:
_lockButtonDown
_lockButtonUp
_menuButtonDown
_menuButtonUp
__handleHIDEvent:
_handleHIDEvent:
_hidEvent
isDisplayDim
_startLockButtonTimer
initWithReason:
setSource:
shutdownUsingOptions:
_lockButtonLongPress
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setLockButtonTimer:
lockButtonTimer
_cancelLockButtonTimer
shouldCheckInWithBackboard
registerAsSystemApp
_createStatusBarWithRequestedStyle:orientation:hidden:
_isSpringBoard
applicationWillOrderInContext:windowLevel:screen:
applicationDidOrderOutContext:screen:
batteryStatusDidChange:
_handlePhysicalButtonEvent:
idleSleepController
_buttonHeldCheck
_hidScreenCoverListener
_obliterationPresenter
_screenCovered
_lockButtonTimer
_idleSleepController
T@"NSTimer",&,N,V_lockButtonTimer
T@"PBAIdleSleepController",&,N,V_idleSleepController
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
numberWithBool:
allocWithZone:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
setOnAC:
setHasOnAC:
hasOnAC
readFrom:
writeTo:
copyTo:
mergeFrom:
timestamp
onAC
_timestamp
_onAC
_has
TB,N
TQ,N,V_timestamp
TB,N,V_onAC
initWithMobileKeyBag:
state
recoveryRequired
recoveryPossible
_queue_performDataRecoveryWithPasscode:progressHandler:completion:
beginRecovery:error:
escrowCount
waitForUnlockWithTimeout:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
requiresDataRecovery
dataRecoveryPossible
performDataRecoveryWithPasscode:progressHandler:completion:
_queue
_calloutQueue
_queue_mobileKeyBag
mainConfiguration
initWithDisplayConfiguration:
initWithIdentifier:priority:appearanceStyle:rootWindow:
raise:format:
_createInitialAppScene
sceneTransformer
definition
bundleIdentifier
identityForIdentifier:
setIdentity:
localIdentity
setClientIdentity:
specification
setSpecification:
parametersForSpecification:
setDisplayConfiguration:
_referenceBounds
setFrame:
setLevel:
setForeground:
setInterfaceOrientation:
isUISubclass
setDeviceOrientationEventsEnabled:
currentVariant
updateSettingsWithBlock:
settings
interfaceOrientation
setStatusBarStyle:
updateClientSettingsWithBlock:
createSceneWithDefinition:initialParameters:
presentationBinder
addScene:
activate
transformer
isActivated
setPresentationBinder:
rootWindow
setRootWindow:
_activated
_presentationBinder
_rootWindow
T@"UIRootWindowScenePresentationBinder",&,N,V_presentationBinder
T@"UIRootSceneWindow",&,N,V_rootWindow
T@"UIMutableTransformer",R,N
activated
TB,R,N,GisActivated,V_activated
buttonHoldTime
startupUsingEventQueue:withCompletion:
startListeningForEventsWithBlock:
stopListeningForEvents
isButtonDown
_hidEventListener
_hidKeyboardEventToMatch
_buttonEventBlock
_usagePage
_usage
_startListeningForEvents
_stopListeningForEvents
_performCallbackWasHeld:
setHeldBlock:notHeldBlock:
_provider
_heldBlock
_notHeldBlock
_callbackQueue
_keyWasDown
_keyWasReleased
_timerDidFire
_callbackPerformed
_eventQueue
rotationWithRadians:
addTransform:reason:
initWithTransformer:
_transformer
T@"UIMutableTransformer",R,N,V_transformer
defaultCenter
_batteryStatusChanged:
addObserver:selector:name:object:
initWithActions:title:message:
_configureObliterationControllerBasedOnConditions
setUseNonWindowPresentation:
setShowCancelButton:
setShouldTintCancelButton:
setDelegate:
presentViewController:animated:completion:
_conditionsChanged:
showObliterationConfirmationDialog
actionWithTitle:style:actionHandler:
setEnabled:
arrayWithObjects:count:
groupWithActions:title:
setGroups:
setTitle:
setMessage:
willMoveToParentViewController:
view
removeFromParentViewController
removeObserver:
dismissViewControllerAnimated:completion:
actionContentControllerCancel:
onCharger
offCharger
actionSheetController:willTapActionAtIndexPath:
actionSheetController:didTapActionAtIndexPath:
actionSheetController:willDismissWithActionAtIndexPath:
actionSheetController:didDismissWithActionAtIndexPath:
initWithViewController:allowObliterationOnBattery:cancelation:
providedViewController
allowObliterationOnBattery
cancelation
setCancelation:
_obliterationController
_resetAction
_obliterationConfirmationController
_eraseAction
_obliterator
_conditionsInitialized
_lastConditions
_allowObliterationOnBattery
_providedViewController
_cancelation
T@?,C,N,V_cancelation
T@"UIViewController",R,W,N,V_providedViewController
TB,R,N,V_allowObliterationOnBattery
isViewLoaded
layer
name
setName:
stringByAppendingFormat:
viewDidLoad
setClipsToBounds:
updateUIForKeyBagState:
presentDataRecovery
isEffectivelyLocked
presentDeviceUnlock
finishDeviceUnlock
addChildViewController:
didMoveToParentViewController:
setDataRecoveryEngine:
setMainViewController:
setShouldUseLockScreenAnimation:
mainViewController
domain
isEqualToString:
code
setDataRecoveryController:
showObliterationDialog
dataRecoveryController
dataRecoveryViewController:requestDismissalWithCompletion:
dataRecoveryViewControllerRequestObliteration:
passcodeViewController:didVerifyPasscode:
passcodeViewController:didFailVerificationWithError:
errorMessageForPasscodeViewController:error:
_removePasscodeController
mainView
setMainView:
contentView
setContentView:
passcodeController
setPasscodeController:
dataRecoveryEngine
obliterationPresenter
setObliterationPresenter:
_mainView
_contentView
_mainViewController
_passcodeController
_dataRecoveryController
_dataRecoveryEngine
T@"UIView",&,N,V_mainView
T@"UIView",&,N,V_contentView
T@"UIViewController",&,N,V_mainViewController
T@"PBAPasscodeViewController",&,N,V_passcodeController
T@"PBADataRecoveryViewController",&,N,V_dataRecoveryController
T@"PBADataRecoveryEngine",&,N,V_dataRecoveryEngine
T@"CSLStartupObliterationPresenter",&,N,V_obliterationPresenter
handlePasscodeCheck
setShouldDismissOnButtonPresses:
presentedViewController
showPasscodeEntry
dataUsingEncoding:
beginDataRecoveryWithPasscode:
showProgressUIWithValue:
hideProgressUI
unhideProgress
updateProgress:
resetProgress
hideProgress
lockSkippingGracePeriod:
createStashBag:completion:
handleDataRecoveryRetry
handleDataRecoveryFailure
didCancelPasscodeEntryViewController:
didMismatchPasscodeEntryViewController:
passcodeEntryViewController:didCompleteWithPasscode:
setState:
progressUI
setProgressUI:
progress
setProgress:
_alertSheet
_passcodeViewController
_passcode
_progressHidden
_progress
_state
_progressUI
TQ,N,V_state
T@"PBADataRecoveryProgressUIManager",&,N,V_progressUI
Tf,N,V_progress
T@"<PBADataRecoveryViewControllerDelegate>",W,N,V_delegate
weakObjectsHashTable
setDisplayDim:
_undimDisplayForce
_withLock:
removeObject:
allObjects
enumerateObjectsUsingBlock:
initWithCoverGestureEnabled:inactiveTapGestureEnabled:alwaysOnSwipeGestureEnabled:alwaysOnHoldGestureEnabled:alwaysOnTapThroughEnabled:alwaysOnSwipeThroughEnabled:alwaysOnHoldThroughEnabled:touchLocked:
_callObservers:
_preventIdleSleep
_setHIDUILockedState:
_preventIdleSleepForNumberOfSeconds:
_allowIdleSleep
cancelPreviousPerformRequestsWithTarget:selector:object:
setPreventIdleSleep:forReason:
performSelector:withObject:afterDelay:inModes:
undimDisplay
_nextLockTimeDuration
_userEventsDidIdle
_userEventOccurred
_userEventPresenceTimerExpired
_requestedUserEventNotificationOccurred
_startAllowingIdleTimer
idleSleepTimeout
setIdleSleepTimeout:
allowIdleTimerToBeReset
setAllowIdleTimerToBeReset:
_observers
_hidProvider
_displayDim
_allowIdleTimerToBeReset
_idleSleepTimeout
TB,N,V_allowIdleTimerToBeReset
displayDim
TB,N,GisDisplayDim,V_displayDim
Td,N,V_idleSleepTimeout
setShouldWaitForMigrator:
applicationProxyForIdentifier:
setRegisterAdditionalServicesBlock:
objectForKey:
count
mutableCopy
addEntriesFromDictionary:
typeSafeObjectForKey:ofType:
dictionaryByAddingEntriesFromDictionary:
typeSafeSetObject:forKey:
descriptorWithPage:usage:
builtinDisplay
nullDisplay
setWithObjects:
defaultSystemPredicate
setDisplays:
descriptors
unionSet:
setDescriptors:
systemTarget
ruleForDispatchingDiscreteEventsMatchingPredicate:toTarget:
defaultFocusPredicate
minusSet:
keyboardFocusTarget
dispatchDiscreteEventsForReason:withRules:
setSystemAppControlsFocusOnMainDisplay:
startReceivingEvents
dispatchingAssertion
setDispatchingAssertion:
_dispatchingAssertion
T@"<BSInvalidatable>",&,N,V_dispatchingAssertion
_isSecure
setOrientationController:
makeKeyAndVisible
setRootViewController:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
applicationShouldAutomaticallyLocalizeKeyCommands:
window
setWindow:
T@"UIWindow",&,N
rootViewController
orientationController
sceneManager
setSceneManager:
_window
_rootViewController
_orientationController
_sceneManager
T@"PBAOrientationController",&,N,V_orientationController
T@"CSLAlternateSystemAppSceneManager",&,N,V_sceneManager
T@"UIWindow",&,N,V_window
T@"PBARootViewController",&,N,V_rootViewController
defaultContext
newSceneIdentityTokenForIdentity:
setDefaultSceneToken:
_newApplicationInitializationContext
_hostsSystemStatusBar
disablesFrontBoardImplicitWindowScenes
sharedConnection
unlockScreenTypeWithOutSimplePasscodeType:
setDataSource:
animateRejectionAndReset
reloadData
animateOutInputFieldWithStyle:andRepromptWithTitle:completion:
didCancelPasscodeEntryView:
didBeginEnteringPasscodeInView:
didClearPasscodeEntryView:
passcodeEntryView:didEnterPasscode:
passcodeEntryView:didUpdatePasscode:
passcodeStyleForPasscodeEntryView:
defaultLengthOfSimplePasscodeForPasscodeEntryView:
minimumLengthOfComplexPasscodeForPasscodeEntryView:
maximumLengthOfComplexPasscodeForPasscodeEntryView:
shouldShowCancelButtonInPasscodeEntryView:
titleForPasscodeEntryView:
shouldShowOKButtonInPasscodeEntryView:
shouldShowCharactersInPasscodeEntryView:
_currentPasscodeEntryStyle
_firstPasscode
_entryView
_simplePasscodeLength
T@"<PBADataRecoveryPasscodeEntryViewControllerDelegate>",W,N,V_delegate
setStateForFullPower:
postFullPower
setStateForPluggedIn:
postPluggedIn
setStateForCurvedBatteryCapacity:
postCurvedBattery
_fullPowerToken
_pluggedInToken
_curvedBatteryCapacityToken
_fullPowerTokenRegistered
_pluggedInTokenRegistered
_curvedBatterCapacityTokenRegistered
_removePreferencesObserver
setHideACPower:
setLowBatteryLevel:
postNotificationName:object:userInfo:
postNotificationName:object:
isOnACForUI
isConnectedToUnsupportedChargingAccessory
Tf,R,N
_loadPreferences
_addPreferencesObserver
logAWDMetric
setIsConnectedToUnsupportedChargingAccessory:
batteryCapacityAsPercentage
setIsOnAC:
setIsOnACForUI:
setIsBatteryCharging:
setBatteryCapacity:
batteryStatusLogger
setBatteryStatusLogger:
supportsDetailedBatteryCapacity
setSupportsDetailedBatteryCapacity:
isConnectedToChargeIncapablePowerSource
setIsConnectedToChargeIncapablePowerSource:
hideACPower
lowBatteryLevel
chargerFamilyKey
setChargerFamilyKey:
_notifySender
_isOnAC
_isOnACForUI
_isBatteryCharging
_isConnectedToUnsupportedChargingAccessory
_supportsDetailedBatteryCapacity
_isConnectedToChargeIncapablePowerSource
_hideACPower
_batteryCapacity
_chargerFamilyKey
_batteryStatusLogger
_lowBatteryLevel
TB,N,V_isOnAC
TB,N,V_isOnACForUI
TB,N,V_isBatteryCharging
Tf,N,V_batteryCapacity
TB,N,V_supportsDetailedBatteryCapacity
TB,N,V_isConnectedToChargeIncapablePowerSource
TB,N,V_isConnectedToUnsupportedChargingAccessory
TB,V_hideACPower
Tq,V_lowBatteryLevel
Ti,N,V_chargerFamilyKey
T@"<CSLBatteryStatusLogger>",W,N,V_batteryStatusLogger
setHidden:
sharedApplication
connectedScenes
_getWindowScene
windows
initWithWindowScene:
initWithScreen:
setWindowLevel:
presentObliterationControllerFromViewController:withCanceledBlock:
_obliterationAlertProvider
builderWithObject:ofExpectedClass:
appendBool:counterpart:
isEqual
builder
appendBool:
builderWithObject:
appendBool:withName:ifEqualTo:
appendBool:withName:
build
mutableCopyWithZone:
_coverGestureEnabled
_inactiveTapGestureEnabled
_alwaysOnSwipeGestureEnabled
_alwaysOnHoldGestureEnabled
_alwaysOnTapThroughEnabled
_alwaysOnSwipeThroughEnabled
_alwaysOnHoldThroughEnabled
_touchLocked
coverGestureEnabled
TB,R,N,GisCoverGestureEnabled,V_coverGestureEnabled
inactiveTapGestureEnabled
TB,R,N,GisInactiveTapGestureEnabled,V_inactiveTapGestureEnabled
alwaysOnSwipeGestureEnabled
TB,R,N,GisAlwaysOnSwipeGestureEnabled,V_alwaysOnSwipeGestureEnabled
alwaysOnHoldGestureEnabled
TB,R,N,GisAlwaysOnHoldGestureEnabled,V_alwaysOnHoldGestureEnabled
alwaysOnTapThroughEnabled
TB,R,N,GisAlwaysOnTapThroughEnabled,V_alwaysOnTapThroughEnabled
alwaysOnSwipeThroughEnabled
TB,R,N,GisAlwaysOnSwipeThroughEnabled,V_alwaysOnSwipeThroughEnabled
alwaysOnHoldThroughEnabled
TB,R,N,GisAlwaysOnHoldThroughEnabled,V_alwaysOnHoldThroughEnabled
touchLocked
TB,R,N,GisTouchLocked,V_touchLocked
setCoverGestureEnabled:
setInactiveTapGestureEnabled:
setAlwaysOnSwipeGestureEnabled:
setAlwaysOnHoldGestureEnabled:
setAlwaysOnTapThroughEnabled:
setAlwaysOnSwipeThroughEnabled:
setAlwaysOnHoldThroughEnabled:
setTouchLocked:
TB,N,GisCoverGestureEnabled
TB,N,GisInactiveTapGestureEnabled
TB,N,GisAlwaysOnSwipeGestureEnabled
TB,N,GisAlwaysOnHoldGestureEnabled
TB,N,GisAlwaysOnTapThroughEnabled
TB,N,GisAlwaysOnSwipeThroughEnabled
TB,N,GisAlwaysOnHoldThroughEnabled
TB,N,GisTouchLocked
Triggering fail safe obliteration
Triggering unpair with device %@
-unpairWithDevice returns Error %@
Obliteration failed to start: '%@'
Unpairing/Obliteration has begun
updated sensor mode to %@
%p init
%p dealloc
already listening for events
was not listening for events
starting obliteration hold check (%0x:%0x)
%@ preparing for obliteration -- informing delegate
%@ obliteration cancelled -- informing delegate
button not held
button held check already running
usagePage: 0x%x usage: 0x%x downEvent: %d
Lock button down
Shutting down device
Lock button up, lockButtonTimer = %@
Menu button down
Menu button up
%@ dealloc'd
button ignored: (%d:%d) %s  [startup button held check]
unexpected hid event: %p (%d) [startup button held check]
cannot start listening, no listener
hidEventListener does not have a service
button is down, waiting to see if down long enough
button no longer down, ignoring timer expiration
button held long enough
button no longer down, but did not see button up event
no provider
button held long enough and still held when callback changed
button no longer down, after callback changed, likely already canceled by user
button still down, waiting for timer to fire
%@ starting to listen for events
%@ button down again - will ignore
%@ button released, not held long enough
%@ button up again - will ignore
%@ stop listening for events
button was held %{BOOL}u making callback %{BOOL}u _heldBlock %@, _notHeldBlock %@
callback already made, ignoring second request (%{BOOL}u)
presenting obliteration controller %@
presented obliteration controller %@
device on power, %@
device off power, %@
presenting obliteration confirmation controller %@
presented obliteration confirmation controller %@
actionContentControllerCancel
user took device off power while obliteration confirmation dialog is shown, canceling
PreBoard will not show passcode entry because device is already unlocked (state=%@)
unlocked, exiting...
obliteration canceled by user
try obliteration after data recovery failed
%@ preparing for obliteration -- informing data recovery
%@ preparing for obliteration -- nothing to do
%@ obliteration cancelled -- informing data recovery
%@ obliteration cancelled -- nothing to do
handling data recovery retry
handling data recovery failure
recovery progress %1.2f
exiting as result of successful unlock
Data recovery failed with error %{public}@
Data recovery is possible
Data recovery is not possible
%@ preparing for obliteration -- hiding progress
%@ preparing for obliteration -- no progress shown, nothing to do
%@ obliteration cancelled -- showing recovery progress
%@ obliteration cancelled -- recovery failed
%@ obliteration cancelled -- recovery retry
%@ obliteration cancelled -- returning to passcode
%@ obliteration cancelled -- recovery completed, ignoring
%@ obliteration cancelled -- no progress shown, nothing to do
Dimming display
disabling idle timer
Setting next autolock duration to %f%@
User Events Did Idle
User Events Did UnIdle
User Events Occurred
User Events Presence Timer Expired
User Event Notification fired
Got notification that backboardd is done doing setup work and is ready for the idle timer to be reset
%@ preparing for obliteration -- calling rootViewController
%@ obliteration cancelled -- calling rootViewController
########## DBG_CODE: (%d)
will ask to obliterate using %@
looking at scene %@
windowScene = %@
v16@?0@"NSError"8
RESET_FAILED_MESSAGE
General
v8@?0
v12@?0B8
CSLHIDUISensorMode
CoverGestureEnabled
WakeOnTapEnabled
WakeOnSwipeEnabled
WakeOnLongPressEnabled
WakeOnTapThroughEnabled
WakeOnSwipeThroughEnabled
WakeOnLongPressThroughEnabled
v16@?0@"BKSMutableHIDUISensorMode"8
Built-In
v16@?0^{__IOHIDEvent=}8
buttonLongPress
%@ %@
timestamp
onAC
com.apple.preboard.dr
com.apple.preboard.datarecovery
com.apple.preboard.datarecovery.callout
Data recovery failed
UIRootSceneWindow-%@-%p
-activate called on %@ that is already activated
v16@?0@"FBSMutableSceneSettings"8
v16@?0@"FBSMutableSceneClientSettings"8
down
CSLStartupButtonHeldCheckQueue
invertUI
com.apple.nano
Inverted UI
ERASE_ALL_CONFIRM_ACTION
v16@?0@"PUICActionSheetItem"8
ERASE_ALL_CONTENT_AND_SETTINGS_TITLE
ERASE_ALL_DETAIL
CONNECT_TO_POWER_BEFORE_ERASE
ARE_YOU_SURE_YOU_WANT_TO_CONTINUE_LABEL
ERASE_CONTINUE_WARNING_DETAIL
%@ %p
 (%@)
DATA_RECOVERY_OKAY
PreBoard
DATA_RECOVERY_INSTRUCTION
DATA_RECOVERY_PASSCODE_MISMATCH
DATA_RECOVERY_FAILED_MSG_TRYAGAIN
RESET_OKAY
DATA_RECOVERY_FAILED_MSG_RESTORE
v12@?0f8
backlight
v32@?0@"<PBAIdleSleepObserving>"8Q16^B24
 retroactively
v16@?0@"FBMutableSystemShellInitializationOptions"8
PBAHIDEventController
com.apple.system.prefs.changed
DATA_RECOVERY_ENTER_PASSCODE
DATA_RECOVERY_VERIFY_PASSCODE
kIOSSHLBatteryStatusChangedNotification
kIOSSHLUnsupportedChargingAccessoryStatusChangedNotification
SBHideACPower
SBLowBatteryLevel
v24@?0@"UIScene"8^B16
Should Obliterate Window
B8@?0
coverGestureEnabled
touchLocked
inactiveTapGestureEnabled
alwaysOnSwipeGestureEnabled
alwaysOnHoldGestureEnabled
alwaysOnTapThroughEnabled
alwaysOnSwipeThroughEnabled
CSLObliterator
PBAPasscodeViewController
PBAIdleSleepObserving
NSObject
CSLSMobileKeyBagObserver
CSLHIDUISensorModeProvider
CSLHIDUISensorModeProviding
PBALogoManager
CSLHIDEventListener
PBAApplication
AWDCarouselBatteryACStatusChanged
NSCopying
PBADataRecoveryEngine
CSLAlternateSystemAppSceneManager
CSLHIDButtonCheckProvider
CSLButtonCheckProviderProtocol
CSLStartupButtonHeldCheck
PBAOrientationController
CSLObliterationAlertProvider
PUICActionSheetControllerDelegate
PUICActionContentControllerDelegate
CSLObliterationAlertProviding
PBARootViewController
PBADataRecoveryViewControllerDelegate
CUISPasscodeViewControllerDelegate
PBAObliterationPreparing
PBADataRecoveryViewController
PBADataRecoveryPasscodeEntryViewControllerDelegate
PBAIdleSleepController
Typesafe
PBAHIDEventController
PBASecureWindow
PBAAppDelegate
UIApplicationDelegate
CSLAlternateSystemShellApplication
PBADataRecoveryProgressUIManager
PBADataRecoveryPasscodeEntryViewController
CUISPasscodeEntryViewDelegate
CUISPasscodeEntryViewDataSource
_IOSSHLBatteryNotifySender
IOSSHLBatteryStatus
IOSSHLBatteryStatusProviding
CSLStartupObliterationSecureRootWindow
CSLStartupObliterationSecureWindow
CSLStartupObliterationPresenter
CSLHIDUISensorMode
NSMutableCopying
CSLMutableHIDUISensorMode
B20@0:8B16
@24@0:8@16
v28@0:8@16B24
v16@0:8
@16@0:8
@"UIView"
@"PUICActivityIndicatorView"
@"<CSLObliterationAlertProviding>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v28@0:8@"PBAIdleSleepController"16B24
v24@0:8@16
v32@0:8@16@24
v24@0:8@"CSLSMobileKeyBag"16
v32@0:8@"CSLSMobileKeyBag"16@"CSLSMobileKeyBagState"24
@20@0:8i16
v20@0:8B16
@"CSLHIDUISensorMode"16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CSLHIDUISensorMode"
@"<BSInvalidatable>"
@64@0:8q16q24@32@40@48@?56
v24@0:8@?16
^{__IOHIDEvent=}32@0:8I16^{__IOHIDEvent=}20I28
@"NSObject<OS_os_log>"
v24@0:8I16I20
v36@0:8q16q24B32
v36@0:8@16f24@28
B24@0:8^{__IOHIDEvent=}16
v24@0:8^{__IOHIDEvent=}16
@"CSLStartupButtonHeldCheck"
@"CSLHIDEventListener"
@"CSLStartupObliterationPresenter"
@"NSTimer"
@"PBAIdleSleepController"
@24@0:8^{_NSZone=}16
v24@0:8Q16
{?="timestamp"b1"onAC"b1}
v40@0:8@16@?24@?32
@"NSObject<OS_dispatch_queue>"
@"CSLSMobileKeyBag"
@"UIRootWindowScenePresentationBinder"
@"UIRootSceneWindow"
d16@0:8
v32@0:8@16@?24
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?>24
v24@0:8@?<v@?B>16
@24@0:8I16I20
^{__IOHIDEvent=}
@48@0:8@?16@?24@32@40
v32@0:8@?16@?24
@"<CSLButtonCheckProviderProtocol>"
@"UIMutableTransformer"
v24@0:8@"PUICActionContentController"16
v32@0:8@"PUICActionSheetController"16@"NSIndexPath"24
@36@0:8@16B24@?28
@?16@0:8
@"CUISAlertSheetController"
@"PUICActionSheetItem"
@"CSLObliterator"
@"UIViewController"
v32@0:8@"PBADataRecoveryViewController"16@?<v@?>24
v24@0:8@"PBADataRecoveryViewController"16
B32@0:8@16@24
@32@0:8@16@24
v28@0:8@"CUISPasscodeViewController"16B24
v32@0:8@"CUISPasscodeViewController"16@"NSString"24
B32@0:8@"CUISPasscodeViewController"16@"NSError"24
@"NSString"32@0:8@"CUISPasscodeViewController"16@"NSError"24
@"PBAPasscodeViewController"
@"PBADataRecoveryViewController"
@"PBADataRecoveryEngine"
v24@0:8@"PBADataRecoveryPasscodeEntryViewController"16
v32@0:8@"PBADataRecoveryPasscodeEntryViewController"16@"NSString"24
v20@0:8f16
f16@0:8
@"PBADataRecoveryPasscodeEntryViewController"
@"NSString"
@"<PBADataRecoveryViewControllerDelegate>"
@"PBADataRecoveryProgressUIManager"
v28@0:8B16@20
v24@0:8d16
@"NSHashTable"
@"CSLHIDUISensorModeProvider"
@32@0:8@16#24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
B24@0:8@"UIApplication"16
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"UIWindow"
@"PBARootViewController"
@"PBAOrientationController"
@"CSLAlternateSystemAppSceneManager"
v24@0:8@"CUISPasscodeEntryView"16
v32@0:8@"CUISPasscodeEntryView"16@"NSString"24
Q24@0:8@16
Q24@0:8@"CUISPasscodeEntryView"16
B24@0:8@"CUISPasscodeEntryView"16
@"NSString"24@0:8@"CUISPasscodeEntryView"16
@"CUISPasscodeEntryView"
@"<PBADataRecoveryPasscodeEntryViewControllerDelegate>"
i16@0:8
q16@0:8
v24@0:8q16
v20@0:8i16
@"_IOSSHLBatteryNotifySender"
@"<CSLBatteryStatusLogger>"
@"CSLObliterationAlertProvider"
@48@0:8B16B20B24B28B32B36B40B44
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>com.apple.CommCenter.Preferences-delete</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.keystore.stash.access</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.pairedunlock.userauthentication</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.ids.registration-reset</key>
<true/>
<key>com.apple.private.kernel.darkboot</key>
<true/>
<key>com.apple.private.security.no-sandbox</key>
<true/>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
