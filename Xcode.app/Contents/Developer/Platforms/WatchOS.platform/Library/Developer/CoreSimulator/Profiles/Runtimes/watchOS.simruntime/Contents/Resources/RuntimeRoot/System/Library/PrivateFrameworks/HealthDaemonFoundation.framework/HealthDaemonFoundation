@(#)PROGRAM:HealthDaemonFoundation  PROJECT:HealthKit-1
HDAssertion.m
Invalid parameter not satisfying: %@
assertionIdentifier.length > 0
ownerIdentifier.length > 0
Assertion %@ must be invalidated prior to deallocation
Unable to set assertion budget: %@
Unable to set budget consumption interval start: %@
Unable to end budget consumption interval: %@
<%@ %@ %@ %@%@: %@>
 (%.3fs/%.3fs)
Assertion state '%@', but expected '%@'
Cannot give assertion a non-postive budget of %f
Budget interval already started with time (%f) cannot set to (%f)
Budget interval start (%f) must be positive
Cannot end budget time interval (%f) before starting it
Cannot end budget time interval (%f) before interval start (%f)
ready
active
invalidated
%@ for HDProfile:%@
HDXPCAlarm.m
_eventHandler == nil
<%@:%p eventName:%@>
eventHandler
v8@?0
HDXPCListener.m
listener != nil
[listener delegate] == nil
ServiceListener
%@ (%d)
shared
HDXPCClient.m
connection != nil
process != nil
 proc-bid=%@
<%@ %@(%d) app-id=%@%@>
======== %@ ==========
<%@:%p> %@
======== Overview ==========
Date: %@
Device: %@
Internal Model: %@
Build: %@ (%@)
Disk capacity: %.1f GB
Disk space available: %.3f GB
HDAssertionManagerAssertionTakenNotification
HDAssertionManagerAssertionReturnedNotification
HDAssertionManagerAssertionKey
notification
budget
v24@?0@"HDAssertion"8^B16
v16@?0@"<HDAssertionObserver>"8
v24@?0q8@"NSError"16
<%@:%p %@ %@>
ACTIVE
%0.2lfs
idle
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.watchkit
com.apple.widgetkit-extension
Unknown
Missing %@ entitlement.
Missing %@[%@] entitlement.
: "%@"
<%@ %@(%d)%@>
process-info-pidinfo
%@:%p
Alarms
Pending Events
<%@:%p name:%@ fireDate:%@ isUserVisible:%d>
com.apple.alarm
UserVisible
Date
HDUserNotification.m
!_responseHandler
default
other
cancel
%{public}@: Taken at %{public}@.
%{public}@: Invalidated.
%{public}@: New connection from pid %d
%{public}@: Rejecting connection %{public}@: delegate is nil
%{public}@: Failed to create client for connection %{public}@: %{public}@
%{public}@: Rejecting connection from %{public}@: %{public}@
%{public}@: Connection to %{public}@ (%d) invalidated
%{public}@: Unexpected interruption on connection to %{public}@ (%d)
%{public}@: Assertion %{public}@ already taken
%{public}@: Took assertion %{public}@
%{public}@: Cannot retake invalidated assertion %{public}@
%{public}@: Unexpected state for assertion %{public}@: %ld
%{public}@: Budget Consumption timer fired.
%{public}@: Released %{public}@
%{public}@: Released %{public}@ was not found
%{public}@: Requesting implicit run by setting waitingForTrigger = YES.
%{public}@: Run requested delayed because activity is already in progress.
%{public}@: Run requested with delay %lf, but next fire date is in  %lf, no need to re-register.
%{public}@: Requesting run with delay %lf
%{public}@ Checked in for gated scheduling
%{public}@ fired with activity %{public}@, but we're not currently waiting on a trigger.
%{public}@: Failed to update completion state.
%{public}@ fired with activity %{public}@
%{public}@: Finished activity successfully.
%{public}@: Failed to perform activity: %{public}@.
%{public}@: Requesting activity deferral.
%{public}@: Failed to defer activity.
%{public}@: Handler requested activity deferral but activity should not be deferred; failing activity.
%{public}@: Failed to continue activity %{public}@
Plugin bundle not found for process: %{public}@
Bundle extension point not found for process: %{public}@
Failed to retrieve extension bundle record for process: %{public}@
%{public}@: Retrieved plugin bundle info (%{public}@)
[%{public}@] Received XPC alarm event with name: %{public}s date: %{time_t}ld
[%{public}@] Ignoring XPC alarm event with NULL event name
[%{public}@] notifying alarm %{public}@ of event: %{public}@
[%{public}@] no registered alarm for event: %{public}@
[%{public}@] adding alarm %{public}@
[%{public}@] removing alarm %{public}@
[%{public}@] scheduling event: %{public}@
[%{public}@] unscheduling event: %{public}@
HDAssertion
HDXPCAlarm
HDXPCListener
NSXPCListenerDelegate
NSObject
HDXPCClient
HDDiagnosticManager
HDAssertionManager
_HDAssertionRecord
HDXPCGatedActivity
HDXPCProcess
HDXPCAlarmScheduler
HDDiagnosticObject
HDXPCAlarmEvent
HDUserNotification
length
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
init
UUID
copy
rawState
dealloc
_lock_description
_lock_cloneWithOwnerIdentifier:
_invalidateAndRelease:
_lock_state
_lock_setBudget:error:
raise:format:
_releaseAssertion:
_lock_setBudgetIntervalStartTime:
_lock_consumeBudgetThroughTime:error:
UUIDString
stringWithFormat:
initWithAssertionIdentifier:ownerIdentifier:
_lock_remainingBudget
hk_assignError:code:format:
hk_error:format:
description
cloneWithOwnerIdentifier:
invalidate
state
setBudget:
remainingBudget
_takeWithManager:
_setBudgetIntervalStartTime:
_consumeFromBudgetThroughTime:
assertionIdentifier
ownerIdentifier
budget
.cxx_destruct
_manager
_state
_remainingBudget
_budgetIntervalStartTime
_lock
_UUID
_assertionIdentifier
_ownerIdentifier
_budget
Tq,R
T@"NSUUID",R,C,N,V_UUID
T@"NSString",R,C,N,V_assertionIdentifier
T@"NSString",R,C,N,V_ownerIdentifier
Td,N,V_budget
Td,R
alarmScheduler
profileIdentifier
identifier
substringWithRange:
daemon
initWithDaemon:eventName:eventHandlerQueue:
addAlarm:
removeAlarm:
eventName
initWithName:fireDate:isUserVisible:
scheduler
scheduleEvent:
unitTest_schedulerObserver
unscheduleEventWithName:
eventHandler
eventHandlerQueue
fireDate
isUserVisible
unittest_fireEvent:
initWithProfile:eventName:eventHandlerQueue:
beginReceivingEventsWithHandler:
setNextFireDate:isUserVisible:
unschedule
eventDidFire:
unitTest_fireEventImmediatelyWithDate:isUserVisible:
setEventHandler:
setUnitTest_schedulerObserver:
_eventName
_scheduler
_eventHandlerQueue
_eventHandler
_unitTest_schedulerObserver
T@"HDXPCAlarmScheduler",R,N,V_scheduler
T@"NSObject<OS_dispatch_queue>",R,N,V_eventHandlerQueue
T@?,C,N,V_eventHandler
T@?,C,N,V_unitTest_schedulerObserver
T@"NSString",R,C,N,V_eventName
anonymousListener
initWithUnderlyingListener:label:
initWithMachServiceName:
delegate
setDelegate:
serviceListener
keyEnumerator
countByEnumeratingWithState:objects:count:
addObject:
_setQueue:
resume
endpoint
processIdentifier
clientProvider
clientForListener:connection:error:
clientWithConnection:error:
process
bundleIdentifier
exportObjectForListener:client:error:
remoteInterface
setRemoteObjectInterface:
exportedInterface
setExportedInterface:
setExportedObject:
_handleInvalidationWithClient:exportedObject:
setInvalidationHandler:
_handleInterruptionWithClient:exportedObject:
setInterruptionHandler:
strongToStrongObjectsMapTable
setObject:forKey:
connectionConfigured
connectionConfiguredForListener:client:exportedObject:
connectionInvalidated
_handleConnectionInvalidationForClient:exportedObject:
removeObjectForKey:
connectionInterrupted
connectionInvalidatedForListener:client:exportedObject:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
listener:shouldAcceptNewConnection:
initWithLabel:
allClients
setQueue:
setConnectionQueue:
setClientProvider:
label
_underlyingListener
_connectionQueue
_exportedObjectsByClient
_delegate
_clientProvider
_label
T@"NSArray",R,C
T@"<HDXPCListenerDelegate>",W,N,V_delegate
T@"<HDXPCListenerClientProvider>",W,N,V_clientProvider
T@"NSXPCListenerEndpoint",R
T@"NSString",R,C,V_label
processWithConnection:error:
_initWithConnection:process:
name
applicationIdentifier
isEqualToString:
initWithFormat:
initWithConnection:process:
initWithProcess:
connection
_process
_connection
T@"HDXPCProcess",R,V_process
T@"NSXPCConnection",R,V_connection
weakObjectsHashTable
removeObject:
_diagnosticsForKeys:shouldLog:
string
count
_diagnosticsOverview
allObjects
dictionary
containsObject:
objectForKeyedSubscript:
array
setObject:forKeyedSubscript:
allKeys
compare:
sortedArrayUsingSelector:
diagnosticDescription
stringWithString:
date
appendFormat:
currentDeviceProductType
isAppleInternalInstall
sharedBehavior
currentInternalDeviceModel
currentOSVersion
currentOSBuild
totalDiskCapacity
currentDiskSpaceAvailable
sharedDiagnosticManager
logAllDiagnostics
diagnosticsForKeys:
_objects
appendString:
setWithArray:
assertionManager:assertionTaken:
notifyObservers:
initWithName:loggingCategory:
registerObserver:queue:
unregisterObserver:
allValues
objectEnumerator
defaultCenter
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
assertionManager:assertionInvalidated:
hasActiveAssertionForIdentifier:
hasActiveAssertion:
activeAssertionsForIdentifier:
allAssertionsForIdentifier:
ownerIdentifiersForAssertionIdentifier:
takeAssertion:
resumeBudgetConsumption
suspendBudgetConsumption
addObserver:forAssertionIdentifier:queue:
removeObserver:forAssertionIdentifier:
removeObserver:
budgetTimerQueue
_notificationQueue
_assertionRecordsByIdentifier
_observerSetsByAssertionIdentifier
_invalidated
_consumeBudgets
_budgetConsumptionTimer
_budgetTimerQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_budgetTimerQueue
_assertions
standardUserDefaults
doubleForKey:
_registerActivityWithCriteria:
_lock_resetNextActivityFireDate
requestRunWithMaximumDelay:completion:
_lock_setNextScheduledFireDeadline:
_registerActivityWithCriteria:delay:
_performActivity:completion:
currentActivity
UTF8String
_handleXPCActivityCallback:
waitingForTrigger
_activityFinishedWithResult:error:
setDouble:forKey:
initWithName:criteria:loggingCategory:handler:
setWaitingForTrigger:
runUngatedWithCompletion:
shouldDefer
loggingCategory
setCurrentActivity:
rescheduleWhileInProgress
setRescheduleWhileInProgress:
_handler
_criteria
_nextScheduledFireDeadline
_inProgress
_pendingCompletions
_nextFireTime
_nextCompletions
_rescheduleWhileInProgress
_name
_loggingCategory
_currentActivity
T@"NSObject<OS_xpc_object>",&,V_currentActivity
T@"NSString",R,C,N,V_name
T@"NSObject<OS_os_log>",R,N,V_loggingCategory
TB,R
TB,V_rescheduleWhileInProgress
auditToken
signingIdentifierFromAuditToken:
_pluginBundleForCurrentProcess
hk_extensionPointIdentifier
defaultManager
informationForPlugInWithPid:
bundleRecordForAuditToken:error:
containingBundleRecord
extensionPointRecord
path
objectForKey:
fileURLWithPath:isDirectory:
bundleWithURL:
entitlementsWithConnection:error:
hk_isAppExtension
hk_appExtensionContainerBundleForConnection:
initWithAuditToken:
initWithAuditToken:entitlements:isExtension:containerAppBundleIdentifier:
entitlementsForCurrentTaskWithError:
entitlementsWithDictionary:
auditTokenForCurrentTask
valueForEntitlement:
boolValue
hasEntitlement:
hasArrayEntitlement:containing:
currentProcess
isWidgetKitExtension
hasRequiredEntitlement:error:
hasRequiredArrayEntitlement:containing:error:
dropEntitlement:
unitTest_copyProcessWithEntitlements:
restoreEntitlement:
isExtension
containerAppBundleIdentifier
entitlements
_droppedEntitlements
_isExtension
_auditToken
_bundleIdentifier
_containerAppBundleIdentifier
_entitlements
T@"_HKEntitlements",R,N,V_entitlements
Ti,R,N
T@"_HKXPCAuditToken",R,C,N,V_auditToken
T@"NSString",R,C,N
T@"NSString",R,C,N,V_bundleIdentifier
TB,R,N,V_isExtension
TB,R,N
T@"NSString",R,C,N,V_containerAppBundleIdentifier
initWithBytes:length:encoding:
lastPathComponent
strongToWeakObjectsMapTable
schedulesXPCAlarms
_queue_handleXPCEvent:
timeIntervalSince1970
stringWithUTF8String:
_queue_handleEvent:
hk_nanosecondsSince1970
_eventWithName:
_queue_notifyAlarmsOfPendingEvents
_queue_scheduleEvent:
_queue_unscheduleEventWithName:
componentsJoinedByString:
_alarms
_pendingEvents
_queue
_isUserVisible
_fireDate
T@"NSDate",R,C,N,V_fireDate
TB,R,N,V_isUserVisible
addEntriesFromDictionary:
alertLevel
userNotificationOptions
presentWithResponseHandler:
_handleResponse:
title
setTitle:
message
setMessage:
defaultButton
setDefaultButton:
cancelButton
setCancelButton:
otherButton
setOtherButton:
additionalDescriptors
setAdditionalDescriptors:
setAlertLevel:
setUserNotificationOptions:
responseHandler
setResponseHandler:
notification
setNotification:
_title
_message
_defaultButton
_cancelButton
_otherButton
_additionalDescriptors
_alertLevel
_userNotificationOptions
_responseHandler
_notification
T@?,C,N,V_responseHandler
T^{__CFUserNotification=},N,V_notification
T@"NSString",C,N,V_title
T@"NSString",C,N,V_message
T@"NSString",C,N,V_defaultButton
T@"NSString",C,N,V_cancelButton
T@"NSString",C,N,V_otherButton
T@"NSDictionary",C,N,V_additionalDescriptors
Tq,N,V_alertLevel
TQ,N,V_userNotificationOptions
@32@0:8@16@24
v16@0:8
@16@0:8
@24@0:8@16
q16@0:8
v24@0:8d16
d16@0:8
q24@0:8@16
v20@0:8B16
B24@0:8d16
B32@0:8d16^@24
@24@0:8d16
q32@0:8d16^@24
@"HDAssertionManager"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSUUID"
@"NSString"
@40@0:8@16@24@32
v24@0:8@?16
v28@0:8@16B24
v24@0:8@16
@?16@0:8
@"HDXPCAlarmScheduler"
@"NSObject<OS_dispatch_queue>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@16@24
@"NSXPCListener"
@"NSMapTable"
@"<HDXPCListenerDelegate>"
@"<HDXPCListenerClientProvider>"
@32@0:8@16^@24
@"HDXPCProcess"
@"NSXPCConnection"
@28@0:8@16B24
@"NSHashTable"
v40@0:8@16@24@32
@"NSMutableDictionary"
@"NSObject<OS_dispatch_source>"
@48@0:8@16@24@32@?40
v32@0:8d16@?24
v32@0:8@16d24
v32@0:8@16@?24
v32@0:8q16@24
@"NSObject<OS_xpc_object>"
@"NSMutableArray"
@"NSObject<OS_os_log>"
@44@0:8@16@24B32@36
i16@0:8
B32@0:8@16^@24
B40@0:8@16@24^@32
@"NSMutableSet"
@"_HKXPCAuditToken"
@"_HKEntitlements"
@36@0:8@16@24B32
@"NSDate"
v24@0:8Q16
v24@0:8q16
^{__CFUserNotification=}16@0:8
v24@0:8^{__CFUserNotification=}16
@"NSDictionary"
^{__CFUserNotification=}
