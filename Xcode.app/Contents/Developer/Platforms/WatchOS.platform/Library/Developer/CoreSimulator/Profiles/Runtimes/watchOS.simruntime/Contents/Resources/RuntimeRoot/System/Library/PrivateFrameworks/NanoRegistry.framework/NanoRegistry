DeviceRegistry.state
history.plist
MigrationRoutingSlip.archive
ClassAFile.txt
historySecureProperties.plist
UDIDChangeTracker.plist
recoveryManager-%@.plist
recoveryState.bin
DeviceRegistry
properties.bin
secureProperties.bin
DeviceRegistry.dontBackUp
deleteMeToUnpair2
com.apple.nanoregistry.termsacknowledgementregistry
termsDigest
termsCache
.termsText
Not Set
Accepted
Rejected
Displayed
Retrieved
Grandfathered
NRTermsEvent[%@] "%@": digest(%@) docID(%@) process(%@) displayDeviceName(%@) acknowlegedDeviceName(%@) presentationReason(%@)
nanoregistryd
pairtool
B16@?0@"NRDevice"8
DeviceName
SerialNumber
v8@?0
NRTermsAcknowledgementRegistryErrorCodeCommunicationsFailure
NRTermsAcknowledgementRegistryErrorCodeNotPaired
NRTermsAcknowledgementRegistryErrorCodeFailedToVerifyTerms
NRTermsAcknowledgementRegistryErrorCodeArchivingValidation
NRTermsAcknowledgementRegistryErrorCodeInternalError
NRTermsAcknowledgementRegistryErrorCodeNotWriteable
NRTermsAcknowledgementRegistryErrorCodeDeviceMetadataMismatch
NRTermsAcknowledgementRegistryErrorCodeStaleEvent
NRTermsAcknowledgementRegistryErrorCodeNotActiveDevice
NRTermsAcknowledgementRegistryErrorCodeWatchNotConnected
NRTermsAcknowledgementRegistryErrorCodeNoTermsText
(unknown)
v8@?0
com.apple.nanoregistry.mockxpc.stuff
PID_%ld
com.apple.nanoregistry.mockxpclistener.%@.serverservice%p
server
NSXPCConnectionInterrupted: Make sure mock server is running
client%ld
NSXPCConnectionInvalid: Did mock client stop running?
com.apple.nanoregistry.mockxpclistener.%@
com.apple.nanoregistry.pdq.reader%ld
com.apple.nanoregistry.pdq.writer
pairingID
isPaired
isActive
advertisedName
name
color
bluetoothMACAddress
WIFIMACAddress
totalStorage
systemVersion
serialNumber
productType
chipID
homeButtonType
systemName
marketingProductName
systemBuildVersion
localPairingDataStorePath
localizedModel
regionCode
regionInfo
modelNumber
hwModelStr
buildString
UDID
screenSize
class
enclosureColor
enclosureMaterial
SEID
supportedFeatureIdentifiers
additionalSEIDs
Dmin
marketingHardwareBehavior
marketingHardwareBehaviorSubBrand
greenTea
signingFuse
screenScale
pairingCompatibilityVersion
maxPairingCompatibilityVersion
minPairingCompatibilityVersion
deviceNameString
currentUserLocale
preferredLanguages
pairedDate
marketingVersion
IMEI
MEID
deviceInDemoMode
IMEI2
mainScreenWidth
mainScreenHeight
isInternalInstall
lastActiveDate
lastInactiveDate
pairedDeviceCount
hasSEP
hasSecureElement
deviceCoverGlassColor
deviceHousingColor
deviceBackingColor
isArchived
migrationConsent
migrationConsentDate
fractionCompleted
basebandRegionSKURadioTechnology
wifiAntennaSKUVersion
CPUType
CPUSubType
mainScreenClass
statusCode
compatibilityState
lastPairingError
bluetoothPaired
remoteUnpairingStarted
bogusDevice
capabilities
pairingSessionIdentifier
backgroundAtrialFibrillationVersion
backgroundAtrialFibrillationUDI
backgroundAtrialFibrillationManufactureDate
backgroundAtrialFibrillationReleaseYear
backgroundAtrialFibrillationAvailableRegions
electrocardiogramVersion
electrocardiogramUDI
electrocardiogramManufactureDate
electrocardiogramReleaseYear
electrocardiogramAvailableRegions
electrocardiogramV2AvailableRegions
menstrualCyclesAlgorithmsVersion
cardioFitnessVersion
sleepCoachingVersion
sleepTrackingVersion
sleepActionsVersion
oxygenSaturationRecordingVersion
oxygenSaturationAvailableRegions
cardioFitnessAvailableRegions
_RSSI
_bluetoothIdentifier
_migrationIDSCloudIdentifier
_advertisingIdentifierSeed
_migrationCount
_altAccountIdentifier
_pairingParentAccountIdentifier
_altAccountAltDSID
_pairingParentAltDSID
com.apple.nanoregistry.pairedsync.isokaytosync
gizmoPairingVersion
isAltAccountGizmo
obliterate
brick
store
_keychainOff
_lastRSSIUpdate
isCellularEnabled
compatibleDeviceFallback
isAltAccount
com.apple.nanoregistry.watchsetuppush
com.apple.nanoregistry.migrationconsentrequested
com.apple.nanoregistry.migrationshowfakesync
com.apple.nanoregistry.migrationconsentexpired
com.apple.nanoregistry.migrationdevicesnotfound
com.apple.nanoregistry.migrationdevicefound
com.apple.nanoregistry.NRDemoModeNotifyNotification
%@ %@
startIndex
history
switchRecords
lastSwitchIndex
pairingIDInitialSyncSet
pairingIDMigrationCountDictionary
com.apple.pairedsyncd
v24@?0@"NRMutableDeviceCollection"8@"NRSecureDevicePropertyStore"16
@"NRDeviceCollectionDiff"24@?0@"NRMutableDeviceCollection"8@"NRSecureDevicePropertyStore"16
v24@?0@"NRDeviceCollectionHistory"8@"NRSecureDevicePropertyStore"16
@"NRDeviceCollectionDiff"24@?0@"NRDeviceCollectionHistory"8@"NRSecureDevicePropertyStore"16
com.apple.nano.nanoregistry.paireddeviceregistry
com.apple.nano.nanoregistry.pairunpairobliterate
v16@?0@"NSError"8
v12@?0B8
reason=%@
ignoreSharingdRequestsToAbortPairing
com.apple.NanoRegistry
com.apple.sharingd.
deviceID=%@ options=%@
com.apple.nano.nanoregistry.unpairwithbrick
BDE85C67-0FDD-4A95-A9B9-3CB5DD0C06A2
com.apple.nanoregistry.BDE85C67-0FDD-4A95-A9B9-3CB5DD0C06A2
deviceID=%@
v24@?0@"NSError"8@"NSString"16
assertionID=%@
com.apple.nano.nanoregistry.internal
com.apple.nano.nanoregistry.submitrtcpairingmetric
v20@?0B8@"NSError"12
v16@?0@"NSDictionary"8
com.apple.nano.nanoregistry.ids.plugin
v16@?0@"NSData"8
v16@?0@"NSString"8
com.apple.nanoregistry.unlock.assertion.test.5FB2508F-9F17-42C2-90A4-03E7817791D9
v28@?0B8d12d20
mobile
-[NRPairingProxy xpcGetInitialSyncCompletedForPairingID:completion:]
v24@?0Q8@"NSError"16
com.apple.nanoregistry.NRDevicesUpdateCounterNotifyNotification
com.apple.demo-settings
StoreDemoMode
FProgramNumber
v12@?0i8
com.apple.nanoregistry.registryclient.clientupdatingregistry
v24@?0Q8Q16
v16@?0Q8
v32@?0@"NRMutableDeviceCollection"8@"NRSecureDevicePropertyStore"16Q24
v36@?0@"NRDeviceCollectionDiff"8@"NSDictionary"16B24Q28
v24@?0@"<NRDiffProtocol>"8@16
records
stringValue
numberValue
UUIDValue
dataValue
sizeValue
dictionaryKey
arrayValues
isSet
isSecurePropertyValue
isDate
isError
isMiniUUIDSet
deviceIDBytes
dateTimeInterval
switchIndex
XPC failure
already paired with device
multiple device pairing not supported
device not in idle state- check to make sure you are paired or unpaired as expected, and that NanoRegistry is not busy pairing or unpairing
unknown device
internal error
bluetooth connect timeout
bluetooth pairing failure
lost xpc connection to client
bluetooth turned off
xpc nano pairing request timeout
Nano Registry restarted
bluetooth pair complete timeout
IDS connect timeout
initial property exchange timeout
unpair request from peer via IDS
pair or unpair request via XPC
activation failed
daemon enable failure
pairing aborted by client
entitlement missing
busy pairing or unpairing
initial property send failure
timed out waiting to unpair bluetooth devices
gizmo state change request failed to send
companion version is too old for gizmo
pairing client suspended or terminated
disk full can't write state files
incorrect PIN entered on phone
abort pairing user requested
restriction
passcode entry timeout
bluetooth discovery timeout
IDS local pairing API failure
switch failed due to active assertion
configure state requested when devices are incompatible
paired device not compatible with quick switch
Error managing key
File error
Conditions unmet to allow for a MagicSwitch
Switch assertion canceled
error %ld missing error string
com.apple.nanoregistry.pairingerror
englishMessage
ProductName
ProductVersion
Watch OS
watchOS
iPhone OS
data
failure unarchiving %@
%@ is nil
%@ is class %@ expected one of %@
Mini Capabilities: 
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
width
height
int32Value
floatValue
doubleValue
boolValue
int64Value
isUnsigned
isShortOrChar
com.apple.nanoregistry.versionrequest
Minimum pairing compatibility version
minPairingCompatibilityVersionWithChipID
device
passcode
OOBKey
error
status
pairingStorePath
previousDevice
NRDeviceDiscoveryControllerDidDiscoverDevice
NRPairedDeviceRegistryDeviceDidBeginPairingNotification
NRPairedDeviceRegistryDeviceDidPairNotification
NRPairedDeviceRegistryDeviceDidFailToPairNotification
NRPairedDeviceRegistryDeviceDidUnpairNotification
NRPairedDeviceRegistryStatusDidChange
NRPairedDeviceRegistryDeviceNeedsPasscode
NRPairedDeviceRegistryDeviceOOBKeyDidChange
NRPairedDeviceRegistryDeviceDidBeginActivation
NRPairedDeviceRegistryRemoteUnpairingDidBeginNotification
NRPairedDeviceRegistryDeviceDidEnterCompatibilityStateNotification
NRPairedDeviceRegistryDevicesDidUpdateNotification
NRPairedDeviceRegistryDeviceDidReceiveBTPairingRequestNotification
NRPairedDeviceRegistryDeviceDidBecomeActive
NRPairedDeviceRegistryDeviceDidBecomeInactive
com.apple.nanoregistry.deviceispairinglinkisup
com.apple.nanoregistry.devicedidpair
com.apple.nanoregistry.devicedidunpair
com.apple.nanoregistry.remoteunpairingbeginning
com.apple.nanoregistry.restarted
com.apple.nanoregistry.paireddevicedidchangeversion
com.apple.nanoregistry.paireddevicedidchangecapabilities
com.apple.nanoregistry.watchdidbecomeactive
migrationKeyRevision
NRPairedDeviceRegistryLaunchedByNanoRegistry
NRPairedDeviceRegistryAbortPairingUserRequested
regulatoryModelNumber
com.apple.nanoregistry.pairedSync.initialSyncDidComplete
com.apple.nanoregistry.pairedSync.migrationSyncDidComplete
com.apple.nanoregistry.pairedSync.reunionSyncDidComplete
Setup
Bridge
magicswitchd
com.apple.nanoregistry.registry.deviceListQueue
com.apple.nanoregistry.getDevicesQueue
v48@?0@"NRDeviceCollectionDiff"8@"NRMutableDeviceCollection"16@"NRSecureDevicePropertyStore"24@32Q40
-[NRPairedDeviceRegistry initWithBoost:disconnected:]_block_invoke
v16@?0@"NRDeviceCollectionHistory"8
v16@?0@"NSArray"8
previousDeviceID
v32@?0@"NSUUID"8Q16@"<NSObject><NSCopying>"24
v32@?0@"NRMutableDeviceCollection"8@"NRSecureDevicePropertyStore"16@"NSDictionary"24
B16@?0@"NRMutableDeviceCollection"8
v24@?0@"NSString"8@"NSUUID"16
/var/mobile/Library/DeviceRegistry.state/ActiveDeviceMiniStore.plist
+[NRPairedDeviceRegistry getActiveDeviceMiniStore]_block_invoke
+[NRPairedDeviceRegistry isActiveDeviceAltAccount]
v12@?0I8
v24@?0@"NSUUID"8@"NSDate"16
v20@?0B8@"NRWatchPairingExtendedMetadata"12
q24@?0@8@16
UniqueDeviceID
119C9267-C24D-4FC3-8FE9-2D394943F2E6
_ShowInternalAutomationUI
com.apple.nanobuddy.automationhelper
NRPairedDeviceRegistryStatusCode UNKNOWN
NRPairedDeviceRegistryStatusCodeInvalid
NRPairedDeviceRegistryStatusCodeReady
NRPairedDeviceRegistryStatusCodeUnpairing
NRPairedDeviceRegistryStatusCodePairing
NRPairedDeviceRegistryStatusCodeSwitching
NRPairedDeviceRegistryStatusCodeMigrating
{ chipID = %ld pairingVersion = %ld productType = "%@" postFailsafeObliteration = "%s" isCellularEnabled = ]"%s" }
pairingVersion
postFailsafeObliteration
value
pairingIDs
devices
phoneUDIDHash
index
date
diff
switchRecordCollection
%06lld: %@ (switch=%u)
(null)
NRRegistryHistoryStoreShouldInitializeWithFirstUnlockStatus
v24@?0@"NRDeviceCollectionHistoryEntry"8@16
com.apple.bluetoothregistry
com.apple.nano.nanoregistry
com.apple.nano.nanoregistry.applydiff
com.apple.nanoregistry.registry
entitlement required
miniStoreNameKey
miniStoreIsAltAccountKey
miniStoreDeviceNameStringKey
miniStoreColorKey
miniStoreProductTypeKey
miniStoreProductNameKey
miniStoreLocalPairingDataStorePathKey
miniStoreMarketingVersionKey
miniStoreModelNumberKey
miniStoreHWModelStringKey
miniStoreBuildTypeKey
miniStoreEnclosureColorKey
miniStoreEnclosureMaterialKey
miniStoreIsInternalInstallKey
miniStoreRegulatoryModelNumberKey
miniStoreDeviceCoverGlassColorKey
miniStoreMainScreenWidthKey
miniStoreMainScreenHeightKey
miniStoreDeviceHousingColorKey
miniStoreDeviceBackingColorKey
miniStoreChipIDKey
miniStoreHasSecureElementKey
miniStoreGreenTeaDeviceKey
miniStoreStoreScreenScaleKey
miniStorePairedDateKey
miniStorePairingIDKey
miniStoreValuesKey
NRRegistryShouldCreateCollection
NRRegistryPlatformSupportsWatch
com.apple.nanoregistry.registry.managementqueue
IsUIBuild
DeviceClass
Watch
watch-companion
com.apple.nanoregistry.registry.updating
+[NRRegistry fixSecurePropertiesWithCollection:secureProperties:insecurePropertyNames:]
UUID
secure property UUID
Secure property ID: 
properties
com.apple.nanoregistry.nrsecuredevicepropertystore.dirtyqueue
NRSecureDevicePropertyStore property dictionary
%@: is %@
dirty
clean
%@ = %@
device property key
device property value
device properties dictionary
NRMutableDevice[%p]
com.apple.nanoregistry.activeDeviceAssertion.%p
<%@: %p; identifier = %@; pairingID = %@>
compressed
possiblyCompressedData
com.apple.NanoRegistry.NRActiveDeviceAssertion
com.apple.NanoRegistry.NRActiveDeviceAssertionMonitor
diffs
Watch1
Watch2
Watch3
Watch4
Watch5
Watch6
deviceDiff
changeType
[DELETED]
[CREATED]
[UPDATED]
device collection diff type key
device collection diff type value
device collection diff type
q24@?0@"NSUUID"8@"NSUUID"16
v40@?0@"NRDeviceCollectionDiff"8@"NRMutableDeviceCollection"16@"NRSecureDevicePropertyStore"24@32
v32@?0@"NRMutableDeviceCollection"8@"NRSecureDevicePropertyStore"16@24
NRDevice[%p]: 
%@="%@" 
v24@?0Q8@"<NSObject><NSCopying>"16
AdvertisingIdentifierSeed
property value
MM-dd-yyyy HH:mm:ss.SSS
%@ %ld
%@ 1
unknown
NRDiffTypeCreated
NRDiffTypeUpdated
NRDiffTypeDeleted
(unknown: %i)
device collection dictionary key
device collection dictionary value
device collection dictionary
processName
{CGSize=dd}
framework
daemon
root_daemon
pairing_reporter
magic_switch
link-monitor
com.apple.nanoregistry.dropoutcounter
names
eventType
termsText
documentationID
presentationReason
presentationLocation
acknowledgedDeviceName
acknowledgedDeviceSerialNumber
displayDeviceName
displayDeviceSerialNumber
eventDate
loggingProcessName
class=%@ code=%lld domain=%@
class=%@ name=%@ reason=%@
apple-internal-install
com.apple.nanoregistry.bypass.queue
com.apple.nanoregistry.suspendable.queue
propertyDiff
device property diff type
device property diff type key
device property diff type property
_acknowledgedDeviceName: %@ _acknowledgedDeviceSerialNumber: %@ _displayDeviceName:%@ _displayDeviceSerialNumber:%@
Terms saved with missing device info.  This is not fatal: %@
xpcSetWatchNeedsGraduation - framework
dispatch xpcSetWatchNeedsGraduation - framework
%{public}@ called abort pairing with reason %{public}@; Ignoring since flag is set to ignore sharingd failures
%{public}@ valueID=%@
%{public}@ needs entitlement %@ to enable %@
%{public}@ options again=%@
%s[%{public}@]: retrieved %{public}@ from %{public}@/%{public}@
%s[%{public}@]: returning hasCompleted=%s
_queryDataAsyncIfNeededWithBlock/finishQueryWithTokenValues: Failure to query daemon, backing off interval = %0.1f
Using synchronous remote object for xpcGetDeviceCollectionWithBlock
_queryDaemonWithStartingTokenValueSync/xpcGetDeviceCollectionWithBlock: XPC error %{public}@
_queryDaemonWithStartingTokenValue/xpcGetDeviceCollectionWithBlock: XPC error %{public}@
_queryDaemonWithStartingTokenValue/xpcRetrieveSecureProperties: XPC error %{public}@
_queryDaemonWithStartingTokenValue/xpcGetDiffSinceIndex: XPC error %{public}@
NRDevicePropertyIsAltAccount is a secure property, assuming altaccount until property can be repaired
connection called
return connection: %@
Send version request in framework
Error sending NRSystemVersionRequest : XPC error %@
NRSystemVersionRequest sendSystemVersionRequest exception %@
NanoRegistry APIs called 250 times
client was blocked on threadIsBlockedWaitingOn_nanoregistryd_syncGrabLegacyRegistryWithBlock for %lu milliseconds
setWatchNeedsGraduation
Suspending registry operation queue.
%{public}s: status(%lu) compatibilityState (%u)
Resuming registry operation queue.
overrideSignalStrengthLimit:%ld not implemented
Cached ministore %@ at location %@
mini-store at location %@ failed to unarchive with error: %@
%{public}s ministore %@ set with unarchived values
Ministore is present on device but altAccount property is nil, this should never happen
No ministore on device, will check using traditional NR calls
Active device is nil, there is likely something wrong with this pairing
%s : device is tinker: %{BOOL}d
%u %u
Received request for characteristic read data
isWatchSetupPushActive not implemented
NanoRegistry client: Failed to apply diff to registry because %@
NRDevice found
NRDevice supports migration
protobuf created
%d bytes of protobuf created
data compressed! It is now only %d bytes
data did not compress. Bummer.
devicesFromMigrationConsentRequestData called
migrationConsentRequestData called
migrationConsentRequestData called- could not squish protobuf data to %d bytes (it's %ld bytes). Not returning any data!
Generating pre-restore migration data blob for (%lu) devices
Failed to serialize with error (%@) device IDs: (%@)
Generated pre-restore migration data blob of length (%lu bytes)
Ingesting post-restore migration data blob of length (%lu bytes)
Failed to unserialize with error (%@) pre-restore data : (%@)
Unserialization returned nil object without error
Unserialized root object not an array (%@)
Unserialization deviceID not a string: (%@)
Failed to convert unserialized deviceID (%@) into a UUID
Failed with error: (%@) to apply consent for deviceID: %@
Ingesting post-restore migration data complete
Device collection migrated to most recent history entry %p
Clearing historical device collection %p
Can't create path %{public}@! error=%{public}@
client %{public}@ is missing the %@ entitlement
Internal functionality not available in customer builds
%{public}@ called %{public}@ %{public}@
No store found, will not return a deviceStore
No store found in ministore
No value found in ministore for key %@
Property %@ is not in allowlist and is stored as insecure, converting to secure property
%s: Updating some allowlisted properties
%s: Not updating any properties
Failed to register block and get notify token for %@
Failure loading history file %{public}@: Unarchiver threw exception %{public}@.
Failure loading history file %{public}@: File has incorrect object %{public}@.
Failure saving history file %{public}@: Archiver returned "nil"
Failure saving active state machine file %{public}@: writeToFile returned "NO" %{public}@
Failure saving history file %{public}@: Archiver threw exception %{public}@.
Failure saving secure properties file %{public}@: Archiver threw exception %{public}@.
Failure saving secure properties file %{public}@: Archiver returned "NO"
Failure loading secure properties file %{public}@: Unarchiver threw exception %{public}@.
Failure loading secure properties file %{public}@: File has incorrect object %{public}@.
Failed to register short lived token with status: (%u)
Failed to query token value with status: (%u)
Failed to unregister short lived token with status: (%u)
Failed to register observer with status: (%u)
Failed to unregister observer with status: (%u)
IMPORTANT! Unsupported ProductType (%@) falling back to generic size (which won't behave correctly in UI)!
Generated and persisted new companion seed: (%@); ret: (%u)
Cleared Advertising Identifier Seed; ret: (%u)
Caught exception (%{public}@) archiving (%@)
Got error (%{public}@) archiving (%@)
Error (%{public}@) creating directory (%{public}@) for (%@)
Error (%{public}@) writing encoded data for (%@)
Error (%{public}@) deleting file (%{public}@)
Failed to register block and get notify token for %s
Failed to read notify token in %@
Failed to read data from file %{public}@ with error %{public}@
Failed to unarchive data of type %{public}@ with exception %{public}@
Failed to unarchive data of type %{public}@ with error %{public}@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
NRDataFilePaths
NRTermsEvent
NSSecureCoding
NSCoding
NRTermsAcknowledgementRegistry
NSObject
NRMockXPCProxy
NRLoggingXPCProxy
NRMockXPCStuff
NRNSXPCConnection
NRNSXPCConnectionProtocol
NRNSXPCListener
NSXPCListenerDelegate
NRNSXPCListenerProtocol
NRMockClientNSXPCConnection
NRMockServerNSXPCConnection
NRMockNSXPCListener
NRReadWriteConcurrentQueue
NRPBDeviceCollectionHistory
NSCopying
sync
sync_history
NRPairedDeviceRegistryXPCDaemonDelegate
NRXPCRegistryDelegate
NRXPCPairingDelegate
NRPairedDeviceRegistryXPCFrameworkDelegate
NRPairingProxy
NRRegistryQueryCompletionBlockEntry
NRRegistryClient
NRMockRegistryClient
NRPBSwitchRecordCollection
NRPBPropertyValue
Diffs
NRPBSwitchRecord
NRMutableStateBaseObserverWrapper
NRMutableStateBase
NRMutableStateProtocol
NRMutableStateObserverProtocol
NRMutableStateParentProtocol
NRDiffBase
NRDiffProtocol
NRUnarchivedObjectVerifier
NRMiniUUIDSet
NRPBSize
NRPBNumber
NRSystemVersionRequest
NSError
NRBlockQueueWrapper
NRPairingCompatibilityVersionInfo
NRPairedDeviceRegistry
NRDeviceDiscoveryController
NRMigrator
migration
NRWatchPairingExtendedMetadata
NRServerRequestReporter
NRPBMutableDeviceProperty
NRPBMutableDeviceCollection
NRPBMigrationDevices
NRSwitchRecord
NRSwitchRecordCollection
NRDeviceCollectionHistoryEntry
NRDeviceCollectionHistoryObserverWrapper
NRDeviceCollectionHistory
NRMutableStateParentDelegate
NSFastEnumeration
InternalUtils
NRRegistryHistoryStore
NRRegistryProxy
NRDeviceMiniStore
NRPBDeviceCollectionHistoryEntry
NRRegistry
NRXPCProxy
NRDataFileHistoryHelpers
NRSecureDevicePropertyID
NRSecureDevicePropertyStore
NRUtils
NRMutableDevice
NRPBProperty
NRPBMigrationDeviceInfo
NRActiveDeviceAssertion
NRPBCompressedData
NRActiveDeviceAssertionMonitor
NRPBDeviceCollectionDiff
NRDeviceDiffType
NRDeviceCollectionDiff
NRKeyedUnarchiver
NRDevice
NRMagicSwitchHelper
NRMutableDeviceProperty
NRTextFormattingUtilities
NRPBDeviceDiffType
NRMutableDeviceCollection
NRClientInfo
NRPBDevicePropertyDiff
NRDevicePropertyDiff
NRSecure
NRConnectivitySubscriber
NRPBDeviceDiff
NRPBTermsEvent
NRSafeDescription
NRBypassQueue
NRDevicePropertyDiffType
NRDeviceDiff
NRPBMutableDevice
NRPBDevicePropertyDiffType
NRDeviceCapabilities
objectAtIndex:
stringByAppendingPathComponent:
pathToNanoRegistryStateDirectory
UUIDString
stringWithFormat:
_pathToNanoRegistryStateDirectory
_pathToNanoRegistryUnpairTriggerFileDirectory
pathToNanoRegistryHistoryFile
pathToNanoRegistryMigrationRoutingSlip
pathToNanoRegistryClassAFile
pathToNanoRegistryHistorySecurePropertiesFile
pathToNanoRegistryUDIDFile
pathToNanoRegistryHistoryRecoveryManagerFile:
_pathToNanoRegistryPairingStorePathDirectory
_pathToDevicePropertiesFile
_pathToSecureDevicePropertiesFile
_pathToRecoveryStateFile
_pathToUnpairTriggerFile
fileURLWithPath:
URLByAppendingPathComponent:
alphanumericCharacterSet
mutableCopy
addCharactersInString:
stringByAppendingString:
dateWithTimeIntervalSinceReferenceDate:
localizedStringFromDate:dateStyle:timeStyle:
termsText
digestFromData:
NRSHA256
base64EncodedStringWithOptions:
stringByAddingPercentEncodingWithAllowedCharacters:
defaultManager
path
fileExistsAtPath:
loadTermsWithPath:
isTermsAlreadyArchived
dictionaryWithObjects:forKeys:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToURL:options:error:
matchesDataAtFilePath:
errorWithEnum:
dataWithContentsOfURL:options:error:
isEqualToString:
initWithCoder:
decodeObjectOfClass:forKey:
setWritable:
mergeFrom:
hasTermsText
setTermsDigest:
saveTerms
init
sharedInstance
getAllDevicesWithArchivedAltAccountDevicesMatching:
countByEnumeratingWithState:objects:count:
valueForProperty:
isEqual:
timeIntervalSinceReferenceDate
setEventDate:
encodeObject:forKey:
encodeWithCoder:
setEventType:
setTermsText:
setDocumentationID:
setPresentationReason:
setPresentationLocation:
setAcknowledgedDeviceName:
setAcknowledgedDeviceSerialNumber:
setDisplayDeviceName:
setDisplayDeviceSerialNumber:
setLoggingProcessName:
supportsSecureCoding
eventWithProtobuf:
TB,R
description
saveEventTextToFileIfNeeded
initWithDeviceID:
_setEventType:
updateEventDate
_setLoggingProcessName:
termsDigest
flaggedForSend
setFlaggedForSend:
writable
.cxx_destruct
_flaggedForSend
_writable
_termsDigest
T@"NSString",&,N,V_termsDigest
TB,N,V_flaggedForSend
TB,N,V_writable
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
add:forDeviceID:withCompletion:
checkForAcknowledgement:forDeviceID:withCompletion:
interfaceWithProtocol:
initWithMachServiceName:options:
setRemoteObjectInterface:
resume
remoteObjectProxyWithErrorHandler:
errorStringWithEnum:
errorWithDomain:code:userInfo:
_proxy
stringWithUTF8String:
lastPathComponent
methodSignatureForSelector:
retainArguments
invokeWithTarget:
forwardInvocation:
_queue
_async
_target
dictionary
_mockListeners
processIdentifier
valueForEntitlement:
setExportedInterface:
exportedInterface
setExportedObject:
exportedObject
remoteObjectInterface
remoteObjectProxy
synchronousRemoteObjectProxyWithErrorHandler:
setInterruptionHandler:
interruptionHandler
setInvalidationHandler:
invalidationHandler
suspend
invalidate
_setQueue:
runCompletionBlock:
processName
T@"NSXPCInterface",&,N
T@,&,N
T@,R,&,N
T@?,C,N
Ti,R,N
T@"NSString",R,&,N
initWithConnection:
_connection
setDelegate:
listener:shouldAcceptNewConnection:
initWithMachServiceName:
delegate
T@"<NRNSXPCListenerDelegate>",&,N
_listenerDelegate
UTF8String
objectForKeyedSubscript:
serverConnection
copy
remoteObjectProxyAsync:
queue
_invalidate
invalidated
_name
_serverConnection
_synchronousRemoteObjectProxy
_remoteObjectProxy
_invalidated
_exportedInterface
_exportedObject
_invalidationHandler
_interruptionHandler
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NRMockServerNSXPCConnection",R,N
TB,R,N,V_invalidated
T@"NSXPCInterface",&,N,V_exportedInterface
T@,&,N,V_exportedObject
T@?,C,N,V_interruptionHandler
T@?,C,N,V_invalidationHandler
dealloc
initWithListener:clientConnection:
_clientConnection
_listener
setObject:forKeyedSubscript:
removeObjectForKey:
_suspended
_delegate
T@"<NRNSXPCListenerDelegate>",&,N,V_delegate
arrayWithCapacity:
addObject:
count
enqueueReadWithBlock:bypassSuspend:async:
objectAtIndexedSubscript:
array
initWithNumberOfReaders:
enqueueReadWithBlock:bypassSuspend:
enqueueReadWithBlockAsync:bypassSuspend:
enqueueWriteWithBlockAsync:bypassSuspend:
_readerQueues
_writerQueue
_nextReader
_suspendedReadRequests
_suspendedWriteRequests
_lock
removeAllObjects
dictionaryRepresentation
numberWithLongLong:
setObject:forKey:
initWithCapacity:
addHistory:
historysCount
clearHistorys
historyAtIndex:
setSwitchRecords:
allocWithZone:
copyWithZone:
historyType
setStartIndex:
setHasStartIndex:
hasStartIndex
hasSwitchRecords
readFrom:
writeTo:
copyTo:
startIndex
historys
setHistorys:
switchRecords
_startIndex
_historys
_switchRecords
_has
TB,N
Tq,N,V_startIndex
T@"NSMutableArray",&,N,V_historys
TB,R,N
T@"NRPBSwitchRecordCollection",&,N,V_switchRecords
grabRegistryWithReadBlockAsync:
applyDiff:
grabRegistryWithWriteBlockAsync:
syncGrabRegistryWithReadBlock:
syncGrabRegistryWithWriteBlock:
grabHistoryWithReadBlock:
grabHistoryWithWriteBlock:
syncGrabHistoryWithReadBlock:
syncGrabHistoryWithWriteBlock:
xpcGetDeviceCollectionWithBlock:
xpcGetDiffSinceTokenValue:getSecureProperties:withBlock:
xpcRetrieveSecureProperties:block:
xpcGetChangeHistoryWithBlock:
xpcSwitchIndex:
xpcDeviceIDAtSwitchIndex:withBlock:
xpcClientInfo:
xpcApplyDiff:withSecureProperties:block:
xpcSetMigrationConsented:forDeviceID:withBlock:
xpcBeginDiscoveryWithBlock:
xpcEndDiscoveryWithBlock:
xpcCompanionOOBDiscoverAndPairWithName:withOutOfBandPairingKey:withOptions:operationHasBegun:
xpcCompanionPasscodePairWithDeviceID:withOptions:operationHasBegun:
xpcGizmoOOBAdvertiseAndPairWithName:operationHasBegun:
xpcGizmoPasscodeAdvertiseAndPairWithName:operationHasBegun:
xpcAbortPairingReason:withBlock:
xpcEnterCompatibilityState:withDeviceID:
xpcNotifyActivationCompleted:withSuccess:
xpcNotifyPasscode:withDeviceID:
xpcUnpairWithDeviceID:withOptions:operationHasBegun:
xpcPairingShouldContinue
xpcSuspendPairingClientCrashMonitoring:
xpcResumePairingClientCrashMonitoring:
xpcRetriggerUnpairInfoDialogWithBlock:
xpcTriggerVersion4Workaround
xpcSubmitAlbertPairingReport:
xpcSubmitRTCPairingMetricForMetricID:withSuccess:
xpcPairingClientDidEnterPhase:withBlock:
xpcPairingClientSetAltAccountName:altDSID:forPairingID:completion:
xpcPairingClientSetPairingParentName:pairingParentAltDSID:forPairingID:completion:
xpcWatchNeedsGraduation:
xpcClearWatchNeedsGraduation:
xpcSetWatchNeedsGraduation:
xpcSwitchActiveDeviceWithDeviceID:isMagicSwitch:operationHasCompleted:
xpcSwitchActiveDeviceWithDeviceID:withAssertionHandler:
xpcInvalidateSwitchAssertionWithIdentifier:block:
xpcActiveDeviceAssertions:
xpcBeginMigrationWithDeviceID:completion:
xpcBeginMigrationWithCompletion:
xpcPairWithSimulator:withCompletion:
xpcUnpairWithSimulator:withCompletion:
xpcSwitchToSimulator:withCompletion:
xpcGetMigrationPairingCharacteristicReadDataWithCompletion:
xpcPutMigrationChallengeCharacteristicWriteData:completion:
xpcSubmitServerRequestReportWithRequestType:duration:errorCode:block:
xpcPingActiveGizmoWithPriority:withMessageSize:withBlock:
xpcStartWatchSetupPushWithBlock:
xpcStopWatchSetupPushWithBlock:
xpcScanForMigratableWatchesWithBlock:
xpcBeginMigrationWithDeviceID:passcode:withBlock:
xpcGetLastMigrationRequestPhoneNameWithCompletion:
xpcKeepPhoneUnlockedInternalTestSPI:
xpcWaitForWatchPairingExtendedMetadataForAdvertisedName:completion:
xpcCheckIfFlaggedForRecoveryWithCompletion:
xpcClearRecoveryFlagWithCompletion:
xpcFakePairedSyncIsCompleteWithCompletion:
xpcGetLastSwitchIndex:
xpcGetMigrationCountForPairingID:completion:
xpcGetInitialSyncCompletedForPairingID:completion:
xpcIsPhoneReadyToMigrateDevice:withCompletion:
xpcIsAssertionActive:withCompletion:
enclosedClassTypes
setClasses:forSelector:argumentIndex:ofReply:
arrayWithObjects:count:
setWithArray:
xpcDeviceID:needsPasscode:
xpcHasNewOOBKey:
target
pairingQueue
loudHasEntitlement:
proxyWillBeginPairing:
connection
logCaller:args:
hasPrefix:
appPath
proxyWillAbortPairing:
boolValue
numberWithBool:
proxyWillBeginUnpairing:
proxyWillTakeSwitchAssertion:
proxyWillInvalidateSwitchAssertion:
proxyWillBeginDiscovering:
proxyWillEndDiscovering:
setPairingClientCrashMonitoringCache:proxy:
proxyRequestsSuspensionOfCrashMonitoring:
proxyRequestsResumptionOfCrashMonitoring:
proxyWillBeginPushing:
proxyWillEndPushing:
unsignedIntValue
integerValue
machServiceName
serverExportedInterface
serverRemoteObjectInterface
clientExportedInterface
clientRemoteObjectInterface
_block
_updateCounter
initWithParameters:
managementQueue
_queryDataAsyncIfNeededWithBlock:
registerNotifyTokenWithName:withQueue:withBlock:
supportsWatch
_connectToDaemon
performUnderCollectionLock:
grabRegistryWithReadBlock:
rawConnection
proxyClass
xpcConnectionClass
collection
secureProperties
enqueueForReadUnlessSuspended:
_grabRegistryWithReadBlock:
enqueueForRead:
_grabRegistryWithWriteBlockAsync:
getReferencedSecureProperties:fromDiff:
enqueueForWriteAsync:
_nextToken
devicesUpdateCounter
setSecureProperties:
setCollection:
diffFrom:to:
enqueueForWriteAsync:bypassSuspend:
domain
code
nr_safeDescription
setParentDelegate:
forceImportSecureProperties:
addObserverQueue:withBlock:
setQueueCollection:
daemonIdle
addDiffIndexObserverWithWriteBlock:
removeDiffIndexObserver:
_diffIndexObservers
_optimizeGetState
_outstandingRegistryQuery
_devicesUpdateCounterNotifyToken_dispatch
_devicesUpdateCounterNotifyToken_check
_tokenValue
_lastDevicesUpdateCounterNotifyTokenValue
_backoffDuration
_registryQueryCompletionBlockEntries
T@"<NRNSXPCConnectionProtocol>",R,&,N
TQ,R,N
addRecords:
recordsCount
clearRecords
recordsAtIndex:
recordsType
records
setRecords:
_records
T@"NSMutableArray",&,N,V_records
addArrayValues:
setStringValue:
setNumberValue:
setUUIDValue:
setDataValue:
setSizeValue:
setDictionaryKey:
arrayValuesCount
clearArrayValues
arrayValuesAtIndex:
arrayValuesType
hasStringValue
hasNumberValue
hasUUIDValue
hasDataValue
hasSizeValue
hasDictionaryKey
setIsSet:
setHasIsSet:
hasIsSet
setIsSecurePropertyValue:
setHasIsSecurePropertyValue:
hasIsSecurePropertyValue
setIsDate:
setHasIsDate:
hasIsDate
setIsError:
setHasIsError:
hasIsError
setIsMiniUUIDSet:
setHasIsMiniUUIDSet:
hasIsMiniUUIDSet
stringValue
numberValue
uUIDValue
dataValue
sizeValue
dictionaryKey
arrayValues
setArrayValues:
isSet
isSecurePropertyValue
isDate
isError
isMiniUUIDSet
_arrayValues
_dataValue
_dictionaryKey
_numberValue
_sizeValue
_stringValue
_uUIDValue
_isDate
_isError
_isMiniUUIDSet
_isSecurePropertyValue
_isSet
T@"NSString",&,N,V_stringValue
T@"NRPBNumber",&,N,V_numberValue
T@"NSData",&,N,V_uUIDValue
T@"NSData",&,N,V_dataValue
T@"NRPBSize",&,N,V_sizeValue
T@"NRPBPropertyValue",&,N,V_dictionaryKey
T@"NSMutableArray",&,N,V_arrayValues
TB,N,V_isSet
TB,N,V_isSecurePropertyValue
TB,N,V_isDate
TB,N,V_isError
TB,N,V_isMiniUUIDSet
value
timeIntervalSinceNow
hasUUID:
containsObject:
initWithValue:
initWithDiff:andChangeType:
numberWithUnsignedInteger:
numberWithUnsignedShort:
changeType
diff
pairingID
isPaired
isActive
isArchived
isAltAccount
migratable
supportsCapability:
diffsToActivate:withDate:
diffsToPair:withDate:
diffsToSetStatusCode:andCompatibilityState:
diffsToSetStatusCode:
diffsToClearStatusCodeAndCompatibilityState
parseDiff:forPropertyChange:withBlock:
T@"NSUUID",R,N
numberWithDouble:
numberWithInt:
setDeviceIDBytes:
hasDeviceIDBytes
setDateTimeInterval:
setHasDateTimeInterval:
hasDateTimeInterval
setSwitchIndex:
setHasSwitchIndex:
hasSwitchIndex
deviceIDBytes
dateTimeInterval
switchIndex
_dateTimeInterval
_deviceIDBytes
_switchIndex
T@"NSData",&,N,V_deviceIDBytes
Td,N,V_dateTimeInterval
Ti,N,V_switchIndex
numberWithInteger:
initWithDomain:code:userInfo:
componentsSeparatedByString:
_observer
applyDiff:upOnly:notifyParent:unconditional:
setByAddingObject:
parentDelegate
child:didApplyDiff:
valueWithNonretainedObject:
nonretainedObjectValue
removeObject:
classTypes
removeObserver:
T@"<NRMutableStateParentDelegate>",W,N
notifyParentWithDiff:
notifyObserversWithDiff:
_observers
_parentDelegate
T@"<NRMutableStateParentDelegate>",W,N,V_parentDelegate
raise:format:
unarchivingVerifyObjectIsNotNil:name:owner:
unarchivingVerifyObjectClasses:name:classes:owner:
getUUIDBytes:
initWithData:
length
bytes
dataWithBytesNoCopy:length:
dataWithBytes:length:
appendString:
appendFormat:
initWithUUIDSet:
data
setData:
.cxx_construct
_miniUUIDs
_data
T@"NSData",&,N,V_data
numberWithFloat:
width
setWidth:
height
setHeight:
_height
_width
Tf,N,V_width
Tf,N,V_height
setInt32Value:
setHasInt32Value:
hasInt32Value
setFloatValue:
setHasFloatValue:
hasFloatValue
setDoubleValue:
setHasDoubleValue:
hasDoubleValue
setBoolValue:
setHasBoolValue:
hasBoolValue
setInt64Value:
setHasInt64Value:
hasInt64Value
setIsUnsigned:
setHasIsUnsigned:
hasIsUnsigned
setIsShortOrChar:
setHasIsShortOrChar:
hasIsShortOrChar
int32Value
floatValue
doubleValue
int64Value
isUnsigned
isShortOrChar
_doubleValue
_int64Value
_floatValue
_int32Value
_boolValue
_isShortOrChar
_isUnsigned
Ti,N,V_int32Value
Tf,N,V_floatValue
Td,N,V_doubleValue
TB,N,V_boolValue
Tq,N,V_int64Value
TB,N,V_isUnsigned
TB,N,V_isShortOrChar
sendVersionRequestToCompanion
minPairingCompatibilityVersionForChipID:
minQuickSwitchPairingCompatibilityVersionForChipID:
maxPairingCompatibilityVersion
minPairingCompatibilityVersionForChipID:name:defaultVersion:
stringByReplacingOccurrencesOfString:withString:
numberFromCFPrefs:
initInternal
stringFromCFPrefs:
systemVersions
minPairingCompatibilityVersion
minQuickSwitchCompatibilityVersion
minPairingCompatibilityVersionWithChipID
pairingCompatibilityVersion
isOverrideActive
isRevlockFeatureFlagActive
setPairingCompatibilityVersion:
setMaxPairingCompatibilityVersion:
setMinPairingCompatibilityVersion:
setMinPairingCompatibilityVersionWithChipID:
setMinQuickSwitchCompatibilityVersion:
setIsOverrideActive:
setIsRevlockFeatureFlagActive:
_isOverrideActive
_isRevlockFeatureFlagActive
_pairingCompatibilityVersion
_maxPairingCompatibilityVersion
_minPairingCompatibilityVersion
_minPairingCompatibilityVersionWithChipID
_minQuickSwitchCompatibilityVersion
Tq,N,V_pairingCompatibilityVersion
Tq,N,V_maxPairingCompatibilityVersion
Tq,N,V_minPairingCompatibilityVersion
Tq,N,V_minPairingCompatibilityVersionWithChipID
Tq,N,V_minQuickSwitchCompatibilityVersion
TB,N,V_isOverrideActive
TB,N,V_isRevlockFeatureFlagActive
logCallFrequency
maxPairedDeviceCount
maxTinkerPairedDeviceCount
setActivePairedDevice:isMagicSwitch:operationHasCompleted:
shouldBoostProcess
initWithBoost:
initWithBoost:disconnected:
_getStatusWithCollection:
sendDevicesUpdatedNotification
initWithRegistry:diff:pairingID:notify:
activeDevice
paired
allAltAccount
activeDeviceID
defaultCenter
postNotificationName:object:userInfo:
userInfo
initWithUUIDString:
allValues
threadIsBlockedWaitingOn_nanoregistryd_syncGrabLegacyRegistryWithBlock:
pairedDevicesSelectorBlock
getDevicesMatching:
activePairedDeviceSelectorBlock
firstObject
getAllDevicesWithArchivedDevicesMatching:
getDevicesWithBlock:
unpairWithDevice:withOptions:operationHasBegun:
getActivePairedDevice
activeDeviceSelectorBlock
pairingStorePathPairingID:
altAccountPairingStorePathPairingID:
waitForPairingStorePathPairingID:
waitForAltAccountPairingStorePathPairingID:
abortPairingWithReason:
getPairedDevices
initWithRequestType:
dataWithContentsOfFile:
unarchivedObjectOfClass:fromData:error:
getActiveDeviceMiniStore
objectForKey:
deviceForBluetoothID:
nonActiveDeviceForBluetoothID:
deviceIDForIDSDevice:
deviceForBTDeviceID:
nonActiveDeviceForBTDeviceID:
deviceIDForNRDevice:
nsuuid
pairingClientSetAltAccountName:altDSID:forDevice:completion:
_deviceIDAtSwitchIndex:date:
setMigrationConsented:forDeviceID:withBlock:
sharedMigrator
migrationConsentRequestData
devicesFromMigrationConsentRequestData:
isActiveDeviceAltAccount
_getLocalDeviceCollection
watchNeedsGraduation
clearWatchNeedsGraduation:
setWatchNeedsGraduation:
pairedDeviceCountIsLessThanMaxPairedDevices
pairedDeviceCountIsLessThanMaxTinkerPairedDevices
pairedDeviceSupportQuickSwitch
setActivePairedDevice:operationHasCompleted:
setActivePairedDevice:withActiveDeviceAssertionHandler:
_invalidateActiveDeviceAssertionWithIdentifier:
_getChangeHistory
_getSecureProperties:
_getClientInfo
status
compatibilityState
isKeychainEnabled
getDevices
getAllDevices
getAllDevicesWithArchivedDevices
companionOOBDiscoverAndPairWithName:withOutOfBandPairingKey:withOptions:operationHasBegun:
companionPasscodePairWithDevice:withOptions:operationHasBegun:
gizmoOOBAdvertiseAndPairWithName:operationHasBegun:
gizmoPasscodeAdvertiseAndPairWithName:operationHasBegun:
notifyActivationCompleted:withSuccess:
notifyPasscode:forDevice:
notifyPairingShouldContinue
unpairWithDevice:shouldObliterate:operationHasBegun:
pairWithSimulator:withQueue:withCompletion:
unpairWithSimulator:withQueue:withCompletion:
switchToSimulator:withQueue:withCompletion:
fakePairedSyncIsCompleteWithCompletion:
enterCompatibilityState:forDevice:
waitForActivePairedDevice
waitForActivePairedOrAltAccountDevice
waitForActiveOrAltAccountDevice
waitForActiveDevice
abortPairing
suspendPairingClientCrashMonitoring
resumePairingClientCrashMonitoring
pairingStorePath
blockAndQueryVersions
userIsCheckingForUpdate
retriggerUnpairInfoDialog
beginDiscovery
endDiscovery
overrideSignalStrengthLimit:
supportsPairedDevice
serverRequestReporterWithType:
_submitServerRequestReportWithRequestType:duration:errorCode:
_submitAlbertPairingReport
completeRTCPairingMetricForMetricID:withSuccess:
deviceForPairingID:
deviceForIDSDevice:
nonActiveDeviceForIDSDevice:
deviceForNRDevice:fromIDSDevices:
pairingClientDidEnterPhase:
pairingClientSetAltAccountName:forDevice:completion:
pairingClientSetPairingParentName:pairingParentAltDSID:forDevice:completion:
getSwitchEventsFromIndex:inlineCallback:
_getActiveDeviceAssertionsWithInlineBlock:
getMigrationPairingCharacteristicReadDataWithQueue:completion:
putMigrationChallengeCharacteristicWriteData:queue:completion:
_pingActiveGizmoWithPriority:withMessageSize:withBlock:
startWatchSetupPush
isWatchSetupPushActive
stopWatchSetupPush
waitForWatchPairingExtendedMetadataForAdvertisedName:completion:
setMigrationConsented:forDevice:withBlock:
beginMigrationWithDevice:passcode:withBlock:
beginMigrationWithDevice:withCompletion:
lastMigrationRequestPhoneName
keepPhoneUnlockedInternalTestSPI:
checkIfFlaggedForRecoveryWithCompletion:
clearRecoveryFlagWithCompletion:
lastSyncSwitchIndex
migrationCountForPairingID:
hasCompletedInitialSyncForPairingID:
isAssertionActive:
isPhoneReadyToMigrateDevice:withCompletion:
_disconnected
_lastCompatibilityState
_legacyDevices
_pairedDeviceRegistryDeviceListQueue
_pairedRegistryGetDevicesQueue
_lastStatus
_waitingForRegistryUpdateBlocks
_callCount
compare:
indexOfObject:inSortedRange:options:usingComparator:
insertObject:atIndex:
begin
devices
T@"NSArray",R,N
getCharacters:range:
stringWithCharacters:length:
canMigrate
setID:
setName:
setAdvertisedName:
addDevices:
setPhoneUDIDHash:
name
setCompressed:
setPossiblyCompressedData:
subdataWithRange:
dataUsingEncoding:
compressed
possiblyCompressedData
hasPhoneUDIDHash
phoneUDIDHash
advertisedName
getBytes:length:
initWithUUIDBytes:
devicesExpectedToBeMigratableAfterRestore
migratableDevices
minusSet:
allObjects
dataWithPropertyList:format:options:error:
propertyListWithData:options:format:error:
migrationDataPreRestoreForConsentedDevices:
ingestPostRestoreMigrationDataForConsentedDevices:
migrationIsAvailable
migratableDevicesRequiringConsent
enterPreMigrationMode
migratingDevice
_migrating
_migratingDevice
T@"NSArray",R,&,N
T@"NRDevice",R,&,N,V_migratingDevice
archived
migrationError
migrationConfirmed
decodeIntegerForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
chipID
setChipID:
pairingVersion
setPairingVersion:
productType
setProductType:
postFailsafeObliteration
setPostFailsafeObliteration:
isCellularEnabled
setIsCellularEnabled:
_postFailsafeObliteration
_isCellularEnabled
_chipID
_pairingVersion
_productType
Tq,N,V_chipID
Tq,N,V_pairingVersion
T@"NSString",&,N,V_productType
TB,N,V_postFailsafeObliteration
TB,N,V_isCellularEnabled
abs_to_seconds:
abs_to_nanos:
requestCompletedWithErrorCode:andDuration:
requestCompletedWithErrorCode:
requestTimedOut
_submitted
_requestType
_timebaseInfo
_startTime
setValue:
hasValue
_value
T@"NRPBPropertyValue",&,N,V_value
addPairingIDs:
pairingIDsCount
clearPairingIDs
pairingIDsAtIndex:
devicesCount
clearDevices
devicesAtIndex:
pairingIDsType
devicesType
pairingIDs
setPairingIDs:
setDevices:
_devices
_pairingIDs
T@"NSMutableArray",&,N,V_pairingIDs
T@"NSMutableArray",&,N,V_devices
_phoneUDIDHash
T@"NSData",&,N,V_phoneUDIDHash
state
initWithDeviceID:date:switchIndex:
fromUUID:
toUUID
lastObject
indexSetWithIndexesInRange:
removeObjectsAtIndexes:
truncateSwitchRecords
initWithProtobuf:
decodeInt64ForKey:
decodeInt32ForKey:
protobuf
index
date
setIndex:
setDate:
setDiff:
dateFormatter:
prefixLinesWithString:withText:
initWithHistory:index:date:diff:switchIndex:
_index
_date
_diff
_historyManager
T@"NSDate",R,N
T@"NRDeviceCollectionDiff",R,N
T@"NRMutableDeviceCollection",R,N
TI,R,N
T@"NRPBDeviceCollectionHistoryEntry",R,N
observer
setObserver:
setQueue:
T@?,C,N,V_observer
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
orderedSet
decodeObjectOfClasses:forKey:
_createIndex
_truncateHistory
numberWithUnsignedLongLong:
_mostRecentStateBefore:
longLongValue
_updateHistoryCachesWithIndex:
_findIndexInHistoryStateCache:type:
pruneStateCacheItems:
removeLastObject
timeIntervalSinceDate:
removeObjectsInRange:
switchDeviceIDFromDiff:
notifyHistoryObserversWithEntry:
historyEntryAtIndex:
isEqualToHistory:
mutableCopyWithZone:
dirty
nextIndex
deviceIDAtSwitchIndex:date:
deviceCollection
_maxHistoryDepth
_atomicDirty
_observerLock
_cacheLock
_deviceCollection
_history
_historyStateCache
_historyStateCacheMRU
_historyStateCacheIndex
T@"NRMutableDeviceCollection",R,N,V_deviceCollection
T@"NRPBDeviceCollectionHistory",R,N
fileHandleForReadingAtPath:
seekToOffset:error:
readDataOfLength:
isEqualToData:
unarchiveDeviceHistory
createMissingDates:
_startQueue
_notifyObserversSecurePropertiesAreAvailableWithCollection:secureProperties:
unarchiveSecureProperties
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
history
archiveSecureProperties:
archiveDeviceHistory:
allSecurePropertyIDs
removeSecureProperty:
_notifyDiffIndexObserversWithHistoryEntry:deviceCollection:secureProperties:
_notifyDiffObserversWithDiff:deviceCollection:secureProperties:
_keyBagStatusChangedNotificationToken
T@"NRDeviceCollectionHistory",R,N
hasEntitlement:
hasEntitlements
registryDelegate
_hasInternalEntitlement
entitlements
requireAnEntitlement
initWithStore:
fullStore
_store
setHasIndex:
hasIndex
setHasDate:
hasDate
hasDiff
Tq,N,V_index
Td,N,V_date
T@"NRPBDeviceCollectionDiff",&,N,V_diff
enqueueForReadAsync:
getReferencedSecurePropertyIDsFromDiff:
dictionaryWithCapacity:
securePropertyForID:
storeSecureProperty:
initWithDiffPropertyDiffs:
initWithDeviceCollectionDiffDeviceDiffs:
fixSecurePropertiesWithCollection:secureProperties:insecurePropertyNames:
readNotifyToken:
enqueueForRead:bypassSuspend:
enqueueForReadAsync:bypassSuspend:
addDiffObserverWithWriteBlock:
removeDiffObserver:
addSecurePropertiesObserverWithReadBlock:
removeSecurePropertiesObserver:
queueCollection
_registryDiffObservers
_registrySecurePropertyObservers
_collectionLock
_readerWriterDispatch
_queueRunning
_supportsWatch
_collection
_secureProperties
_managementQueue
_queueCollection
T@"NSObject<OS_dispatch_queue>",R,N,V_managementQueue
T@"NRMutableDeviceCollection",&,N,V_collection
T@"NRMutableDeviceCollection",&,N,V_queueCollection
T@"NRSecureDevicePropertyStore",&,N,V_secureProperties
hasEntitlement:withBitmask:
shouldMonitorProxy:forSuspension:
initWithConnection:delegate:xpcTarget:entitlementBitmask:
setMonitorClientForSuspension:
monitorClientForSuspension
_entitlementBitmask
_monitorClientForSuspension
_appPath
T@"NSString",R,N,V_appPath
T@,R,N,V_target
T@,R,N
T@"<NRNSXPCConnectionProtocol>",R,N,V_connection
TB,N,V_monitorClientForSuspension
setWithObject:
nr_secureUnarchiveObjectOfClasses:withFile:
nr_secureArchivedDataWithRootObject:
writeToFile:options:error:
nr_secureArchiveRootObject:toFile:
UUID
initWithPropertyString:
_uuid
allKeys
setByAddingObjectsFromSet:
forceWriteSecurePropertyID:withValue:
_IDToProperty
_propertyToID
_dirtyQueue
_dirty
TB,R,N,V_dirty
dataWithLength:
NRSHA256:
dataWithRandomBytesOfSize:
T@"NSData",R,N
_createIndex:
names
properties
unpackPropertyValue:
setNames:
setProperties:
compare:options:
sortedArrayUsingComparator:
stringByPaddingToLength:withString:startingAtIndex:
propertyForName:
setProperty:forName:
removePropertyForName:
allPropertyNames
setProtobuf:
_protobuf
_properties
T@"NRPBMutableDevice",&,N,V_protobuf
hasName
T@"NSString",&,N,V_name
hasID
hasAdvertisedName
_advertisedName
T@"NSData",&,N,V_iD
T@"NSString",&,N,V_advertisedName
device
_identifier
_device
T@"NRDevice",R,&,N
setHasCompressed:
hasCompressed
hasPossiblyCompressedData
_possiblyCompressedData
_compressed
TB,N,V_compressed
T@"NSData",&,N,V_possiblyCompressedData
weakObjectsHashTable
activeDeviceAssertionStateDidChange
hasActiveAssertion
addObserver:
_assertionToken
_workQueue
addDiffs:
diffsCount
clearDiffs
diffsAtIndex:
diffsType
diffs
setDiffs:
_diffs
T@"NSMutableArray",&,N,V_diffs
setChangeType:
_changeType
T@"NRDeviceDiff",R,N,V_diff
TQ,R,N,V_changeType
T@"NRPBDeviceDiffType",R,N
diffCollectionDiffForPairingID:
allPairingIDs
_diffDeviceDiffs
T@"NRPBDeviceCollectionDiff",R,N
weakObjectsPointerArray
propertyNames
addPointer:
removePointerAtIndex:
arrayByAddingObjectsFromArray:
device:propertyDidChange:fromValue:
_setValue:forProperty:
addPropertyObserver:forPropertyChanges:
removePropertyObserver:forPropertyChanges:
registerForPropertyChanges:withBlock:
unregisterForPropertyChanges:withBlock:
initWithQueue:
setValue:forProperty:
_pairingID
_registry
_oldPropertiesForChangeNotifications
_promiscuousObservers
_changeBlocks
_promiscuousChangeBlocks
companionSeed
clearCompanionSeed
setWithSet:
unionSet:
packPropertyValue:
setWithObjects:
T@"<NSObject><NSCopying>",R,&,N,V_value
T@"NRPBMutableDeviceProperty",&,N,V_protobuf
substringFromIndex:
setDateFormat:
stringFromDate:
componentsJoinedByString:
nameCounter:
setHasChangeType:
hasChangeType
changeTypeAsString:
StringAsChangeType:
Ti,N,V_changeType
T@"NRPBDeviceDiff",&,N,V_diff
setDevice:forPairingID:
removeDeviceForPairingID:
_childMap
T@"NRPBMutableDeviceCollection",&,N,V_protobuf
setProcessName:
_processName
T@"NSString",C,N,V_processName
_diffsToChangeActiveDeviceToDeviceID:
setActiveDeviceID:
T@"NRMutableDevice",R,N
T@"NSUUID",&,N
TB,R,N,Gpaired
isAllAltAccount
TB,R,N,GallAltAccount
nr_filteredError
objCType
intValue
unsignedLongLongValue
shortValue
unsignedShortValue
charValue
unsignedCharValue
unsignedIntegerValue
numberWithShort:
numberWithUnsignedChar:
numberWithChar:
numberWithUnsignedInt:
valueWithSize:
nr_secureUnarchiveObjectOfClasses:withData:
T@"<NSObject><NSCopying>",R,N,V_value
T@"NRPBDevicePropertyDiff",R,N
archivedDataWithRootObject:requiringSecureCoding:error:
nr_secureArchiveRootObject:toFile:withOptions:
stringByDeletingLastPathComponent
removeItemAtPath:error:
getDropoutCounter:
_connected
_dropoutCounter
addNames:
namesCount
clearNames
namesAtIndex:
namesType
_names
T@"NSMutableArray",&,N,V_names
dataWithContentsOfFile:options:error:
initForReadingFromData:error:
finishDecoding
setHasEventType:
hasEventType
hasDocumentationID
hasPresentationReason
setHasPresentationLocation:
hasPresentationLocation
hasAcknowledgedDeviceName
hasAcknowledgedDeviceSerialNumber
hasDisplayDeviceName
hasDisplayDeviceSerialNumber
setHasEventDate:
hasEventDate
hasLoggingProcessName
eventType
documentationID
presentationReason
presentationLocation
acknowledgedDeviceName
acknowledgedDeviceSerialNumber
displayDeviceName
displayDeviceSerialNumber
eventDate
loggingProcessName
_eventDate
_acknowledgedDeviceName
_acknowledgedDeviceSerialNumber
_displayDeviceName
_displayDeviceSerialNumber
_documentationID
_eventType
_loggingProcessName
_presentationLocation
_presentationReason
_termsText
Ti,N,V_eventType
T@"NSData",&,N,V_termsText
T@"NSString",&,N,V_documentationID
T@"NSString",&,N,V_presentationReason
Ti,N,V_presentationLocation
T@"NSString",&,N,V_acknowledgedDeviceName
T@"NSString",&,N,V_acknowledgedDeviceSerialNumber
T@"NSString",&,N,V_displayDeviceName
T@"NSString",&,N,V_displayDeviceSerialNumber
Td,N,V_eventDate
T@"NSString",&,N,V_loggingProcessName
reason
enqueueBlock:
enqueueBlockAsync:
enqueueBypassBlock:
enqueueBypassBlockAsync:
_suspendableQueue
_bypassQueue
T@"NRDevicePropertyDiff",R,N,V_diff
T@"NRPBDevicePropertyDiffType",R,N
diffPropertyDiffForName:
_diffPropertyDiffs
T@"NRPBDeviceDiff",R,N
addProperties:
propertiesCount
clearProperties
propertiesAtIndex:
propertiesType
T@"NSMutableArray",&,N,V_properties
T@"NRPBDevicePropertyDiff",&,N,V_diff
@16@0:8
@24@0:8@16
B16@0:8
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v16@0:8
v20@0:8i16
v24@0:8Q16
v24@0:8d16
v20@0:8B16
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v40@0:8@"NRTermsEvent"16@"NSUUID"24@?<v@?@"NSError">32
v40@0:8@"NRTermsEvent"16@"NSUUID"24@?<v@?B@"NSError">32
@24@0:8Q16
@"<NRTermsAcknowledgementRegistry>"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@32@0:8@16Q24
@24@0:8@?16
v24@0:8@?16
@?16@0:8
i16@0:8
@32@0:8@"NSString"16Q24
@24@0:8@?<v@?@"NSError">16
@24@0:8@"NSString"16
v24@0:8@"NSObject<OS_dispatch_queue>"16
v24@0:8@?<v@?>16
@"NSXPCInterface"16@0:8
v24@0:8@"NSXPCInterface"16
@?<v@?>16@0:8
@"NSXPCConnection"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"<NRNSXPCListenerProtocol>"24@0:8@"NSString"16
@"<NRNSXPCListenerDelegate>"16@0:8
v24@0:8@"<NRNSXPCListenerDelegate>"16
@"<NRNSXPCListenerDelegate>"
@20@0:8B16
@"NRMockServerNSXPCConnection"
@"NSXPCInterface"
@32@0:8@16@24
@"NRMockClientNSXPCConnection"
@"NRMockNSXPCListener"
v28@0:8@?16B24
v32@0:8@?16B24B28
@"NSMutableArray"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@24@0:8^{_NSZone=}16
v24@0:8q16
q16@0:8
@"NRPBSwitchRecordCollection"
{?="startIndex"b1}
v36@0:8Q16B24@?28
v32@0:8@16@?24
v28@0:8I16@?20
v36@0:8B16@20@?28
v24@0:8@?<v@?@"NRMutableDeviceCollection"@"NRSecureDevicePropertyStore"Q>16
v36@0:8Q16B24@?<v@?@"NRDeviceCollectionDiff"@"NSDictionary"BQ>28
v32@0:8@"NSSet"16@?<v@?@"NSDictionary">24
v24@0:8@?<v@?@"NRDeviceCollectionHistory">16
v24@0:8@?<v@?I>16
v28@0:8I16@?<v@?@"NSUUID"@"NSDate">20
v24@0:8@?<v@?@"NSArray">16
v40@0:8@"NRDeviceCollectionDiff"16@"NSDictionary"24@?<v@?@"NSError">32
v36@0:8B16@"NSUUID"20@?<v@?>28
v48@0:8@16@24@32@?40
v28@0:8S16@20
v28@0:8@16B24
v32@0:8@16@24
v36@0:8@16B24@?28
v44@0:8@16d24I32@?36
v36@0:8i16Q20@?28
v48@0:8@"NSString"16@"NSData"24@"NSDictionary"32@?<v@?@"NSError">40
v40@0:8@"NSUUID"16@"NSDictionary"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?>24
v28@0:8S16@"NSUUID"20
v28@0:8@"NSUUID"16B24
v32@0:8@"NSNumber"16@"NSUUID"24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v48@0:8@"NSString"16@"NSString"24@"NSUUID"32@?<v@?@"NSError">40
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"NSError">16
v36@0:8@"NSUUID"16B24@?<v@?@"NSError">28
v32@0:8@"NSUUID"16@?<v@?@"NSError"@"NSString">24
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSData">16
v32@0:8@"NSData"16@?<v@?B>24
v44@0:8@"NSString"16d24I32@?<v@?>36
v36@0:8i16Q20@?<v@?Bdd>28
v40@0:8@"NSUUID"16@"NSString"24@?<v@?>32
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSString"16@?<v@?B@"NRWatchPairingExtendedMetadata">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?Q@"NSError">16
v32@0:8@"NSUUID"16@?<v@?Q@"NSError">24
v32@0:8@"NSUUID"16@?<v@?B@"NSError">24
v32@0:8@"NSUUID"16@"NSNumber"24
v24@0:8@"NSData"16
@"<NRNSXPCConnectionProtocol>"
@"NSData"
@"NRPBPropertyValue"
@"NRPBNumber"
@"NRPBSize"
{?="isDate"b1"isError"b1"isMiniUUIDSet"b1"isSecurePropertyValue"b1"isSet"b1}
@28@0:8B16@20
@28@0:8Q16S24
d16@0:8
{?="dateTimeInterval"b1"switchIndex"b1}
@32@0:8@16@?24
@32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?@"<NRDiffProtocol>"@>24
@"<NRMutableStateParentDelegate>"16@0:8
v24@0:8@"<NRMutableStateParentDelegate>"16
@36@0:8@16B24B28B32
@"<NRDiffProtocol>"24@0:8@"<NRDiffProtocol>"16
@"<NRDiffProtocol>"36@0:8@"<NRDiffProtocol>"16B24B28B32
@"<NRDiffProtocol>"32@0:8@"<NRMutableStateProtocol>"16@"<NRMutableStateProtocol>"24
@"NSMutableSet"
@"<NRMutableStateParentDelegate>"
v40@0:8@16@24@32
v48@0:8@16@24@32@40
{vector<unsigned int, std::allocator<unsigned int> >="__begin_"^I"__end_"^I"__end_cap_"{__compressed_pair<unsigned int *, std::allocator<unsigned int> >="__value_"^I}}
f16@0:8
v20@0:8f16
{?="doubleValue"b1"int64Value"b1"floatValue"b1"int32Value"b1"boolValue"b1"isShortOrChar"b1"isUnsigned"b1}
q24@0:8@16
q40@0:8@16@24q32
@24@0:8B16B20
Q24@0:8@16
S16@0:8
v36@0:8@16d24I32
I16@0:8
@28@0:8I16^@20
v40@0:8q16Q24@?32
@"NRDevice"
Q24@0:8Q16
d24@0:8Q16
v20@0:8I16
v28@0:8I16d20
{mach_timebase_info="numer"I"denom"I}
@36@0:8@16@24I32
@52@0:8@16Q24@32@40I48
@"NSDate"
@"NRDeviceCollectionDiff"
@"NRDeviceCollectionHistory"
v32@0:8@"<NRMutableStateProtocol>"16@"<NRDiffProtocol>"24
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
Q32@0:8@16Q24
@"NSMutableOrderedSet"
@"NRMutableDeviceCollection"
@"NRSwitchRecordCollection"
v32@0:8:16@24
@"NSDictionary"
@"NRPBDeviceCollectionDiff"
{?="date"b1"index"b1}
Q20@0:8i16
i40@0:8@16@24@?32
B24@0:8@?16
@"NRReadWriteConcurrentQueue"
@"NRSecureDevicePropertyStore"
@44@0:8@16@24@32I40
@"<NRXPCProxyDelegate>"
@"NSUUID"
v24@0:8[32C]16
@"NRPBMutableDevice"
{?="compressed"b1}
@"NSHashTable"
@"NRDeviceDiff"
@44@0:8@16@24@32B40
@"NRRegistry"
@"NSPointerArray"
@"<NSObject><NSCopying>"
@"NRPBMutableDeviceProperty"
@20@0:8i16
i24@0:8@16
@"NRPBDeviceDiff"
{?="changeType"b1}
@"NRPBMutableDeviceCollection"
B40@0:8@16@24Q32
B24@0:8^Q16
{?="eventDate"b1"eventType"b1"presentationLocation"b1}
@"NRDevicePropertyDiff"
@"NRPBDevicePropertyDiff"
DeviceRegistry.state
history.plist
MigrationRoutingSlip.archive
ClassAFile.txt
historySecureProperties.plist
UDIDChangeTracker.plist
recoveryManager-%@.plist
recoveryState.bin
DeviceRegistry
properties.bin
secureProperties.bin
DeviceRegistry.dontBackUp
deleteMeToUnpair2
com.apple.nanoregistry.termsacknowledgementregistry
termsDigest
termsCache
.termsText
Not Set
Accepted
Rejected
Displayed
Retrieved
Grandfathered
NRTermsEvent[%@] "%@": digest(%@) docID(%@) process(%@) displayDeviceName(%@) acknowlegedDeviceName(%@) presentationReason(%@)
nanoregistryd
pairtool
B16@?0@"NRDevice"8
DeviceName
SerialNumber
v8@?0
NRTermsAcknowledgementRegistryErrorCodeCommunicationsFailure
NRTermsAcknowledgementRegistryErrorCodeNotPaired
NRTermsAcknowledgementRegistryErrorCodeFailedToVerifyTerms
NRTermsAcknowledgementRegistryErrorCodeArchivingValidation
NRTermsAcknowledgementRegistryErrorCodeInternalError
NRTermsAcknowledgementRegistryErrorCodeNotWriteable
NRTermsAcknowledgementRegistryErrorCodeDeviceMetadataMismatch
NRTermsAcknowledgementRegistryErrorCodeStaleEvent
NRTermsAcknowledgementRegistryErrorCodeNotActiveDevice
NRTermsAcknowledgementRegistryErrorCodeWatchNotConnected
NRTermsAcknowledgementRegistryErrorCodeNoTermsText
(unknown)
v8@?0
com.apple.nanoregistry.mockxpc.stuff
PID_%ld
com.apple.nanoregistry.mockxpclistener.%@.serverservice%p
server
NSXPCConnectionInterrupted: Make sure mock server is running
client%ld
NSXPCConnectionInvalid: Did mock client stop running?
com.apple.nanoregistry.mockxpclistener.%@
com.apple.nanoregistry.pdq.reader%ld
com.apple.nanoregistry.pdq.writer
pairingID
isPaired
isActive
advertisedName
name
color
bluetoothMACAddress
WIFIMACAddress
totalStorage
systemVersion
serialNumber
productType
chipID
homeButtonType
systemName
marketingProductName
systemBuildVersion
localPairingDataStorePath
localizedModel
regionCode
regionInfo
modelNumber
hwModelStr
buildString
UDID
screenSize
class
enclosureColor
enclosureMaterial
SEID
supportedFeatureIdentifiers
additionalSEIDs
Dmin
marketingHardwareBehavior
marketingHardwareBehaviorSubBrand
greenTea
signingFuse
screenScale
pairingCompatibilityVersion
maxPairingCompatibilityVersion
minPairingCompatibilityVersion
deviceNameString
currentUserLocale
preferredLanguages
pairedDate
marketingVersion
IMEI
MEID
deviceInDemoMode
IMEI2
mainScreenWidth
mainScreenHeight
isInternalInstall
lastActiveDate
lastInactiveDate
pairedDeviceCount
hasSEP
hasSecureElement
deviceCoverGlassColor
deviceHousingColor
deviceBackingColor
isArchived
migrationConsent
migrationConsentDate
fractionCompleted
basebandRegionSKURadioTechnology
wifiAntennaSKUVersion
CPUType
CPUSubType
mainScreenClass
statusCode
compatibilityState
lastPairingError
bluetoothPaired
remoteUnpairingStarted
bogusDevice
capabilities
pairingSessionIdentifier
backgroundAtrialFibrillationVersion
backgroundAtrialFibrillationUDI
backgroundAtrialFibrillationManufactureDate
backgroundAtrialFibrillationReleaseYear
backgroundAtrialFibrillationAvailableRegions
electrocardiogramVersion
electrocardiogramUDI
electrocardiogramManufactureDate
electrocardiogramReleaseYear
electrocardiogramAvailableRegions
electrocardiogramV2AvailableRegions
menstrualCyclesAlgorithmsVersion
cardioFitnessVersion
sleepCoachingVersion
sleepTrackingVersion
sleepActionsVersion
oxygenSaturationRecordingVersion
oxygenSaturationAvailableRegions
cardioFitnessAvailableRegions
_RSSI
_bluetoothIdentifier
_migrationIDSCloudIdentifier
_advertisingIdentifierSeed
_migrationCount
_altAccountIdentifier
_pairingParentAccountIdentifier
_altAccountAltDSID
_pairingParentAltDSID
com.apple.nanoregistry.pairedsync.isokaytosync
gizmoPairingVersion
isAltAccountGizmo
obliterate
brick
store
_keychainOff
_lastRSSIUpdate
isCellularEnabled
compatibleDeviceFallback
isAltAccount
com.apple.nanoregistry.watchsetuppush
com.apple.nanoregistry.migrationconsentrequested
com.apple.nanoregistry.migrationshowfakesync
com.apple.nanoregistry.migrationconsentexpired
com.apple.nanoregistry.migrationdevicesnotfound
com.apple.nanoregistry.migrationdevicefound
com.apple.nanoregistry.NRDemoModeNotifyNotification
%@ %@
startIndex
history
switchRecords
lastSwitchIndex
pairingIDInitialSyncSet
pairingIDMigrationCountDictionary
com.apple.pairedsyncd
v24@?0@"NRMutableDeviceCollection"8@"NRSecureDevicePropertyStore"16
@"NRDeviceCollectionDiff"24@?0@"NRMutableDeviceCollection"8@"NRSecureDevicePropertyStore"16
v24@?0@"NRDeviceCollectionHistory"8@"NRSecureDevicePropertyStore"16
@"NRDeviceCollectionDiff"24@?0@"NRDeviceCollectionHistory"8@"NRSecureDevicePropertyStore"16
com.apple.nano.nanoregistry.paireddeviceregistry
com.apple.nano.nanoregistry.pairunpairobliterate
v16@?0@"NSError"8
v12@?0B8
reason=%@
ignoreSharingdRequestsToAbortPairing
com.apple.NanoRegistry
com.apple.sharingd.
deviceID=%@ options=%@
com.apple.nano.nanoregistry.unpairwithbrick
BDE85C67-0FDD-4A95-A9B9-3CB5DD0C06A2
com.apple.nanoregistry.BDE85C67-0FDD-4A95-A9B9-3CB5DD0C06A2
deviceID=%@
v24@?0@"NSError"8@"NSString"16
assertionID=%@
com.apple.nano.nanoregistry.internal
com.apple.nano.nanoregistry.submitrtcpairingmetric
v20@?0B8@"NSError"12
v16@?0@"NSDictionary"8
com.apple.nano.nanoregistry.ids.plugin
v16@?0@"NSData"8
v16@?0@"NSString"8
com.apple.nanoregistry.unlock.assertion.test.5FB2508F-9F17-42C2-90A4-03E7817791D9
v28@?0B8d12d20
mobile
-[NRPairingProxy xpcGetInitialSyncCompletedForPairingID:completion:]
v24@?0Q8@"NSError"16
com.apple.nanoregistry.NRDevicesUpdateCounterNotifyNotification
com.apple.demo-settings
StoreDemoMode
FProgramNumber
v12@?0i8
com.apple.nanoregistry.registryclient.clientupdatingregistry
v24@?0Q8Q16
v16@?0Q8
v32@?0@"NRMutableDeviceCollection"8@"NRSecureDevicePropertyStore"16Q24
v36@?0@"NRDeviceCollectionDiff"8@"NSDictionary"16B24Q28
v24@?0@"<NRDiffProtocol>"8@16
records
stringValue
numberValue
UUIDValue
dataValue
sizeValue
dictionaryKey
arrayValues
isSet
isSecurePropertyValue
isDate
isError
isMiniUUIDSet
deviceIDBytes
dateTimeInterval
switchIndex
XPC failure
already paired with device
multiple device pairing not supported
device not in idle state- check to make sure you are paired or unpaired as expected, and that NanoRegistry is not busy pairing or unpairing
unknown device
internal error
bluetooth connect timeout
bluetooth pairing failure
lost xpc connection to client
bluetooth turned off
xpc nano pairing request timeout
Nano Registry restarted
bluetooth pair complete timeout
IDS connect timeout
initial property exchange timeout
unpair request from peer via IDS
pair or unpair request via XPC
activation failed
daemon enable failure
pairing aborted by client
entitlement missing
busy pairing or unpairing
initial property send failure
timed out waiting to unpair bluetooth devices
gizmo state change request failed to send
companion version is too old for gizmo
pairing client suspended or terminated
disk full can't write state files
incorrect PIN entered on phone
abort pairing user requested
restriction
passcode entry timeout
bluetooth discovery timeout
IDS local pairing API failure
switch failed due to active assertion
configure state requested when devices are incompatible
paired device not compatible with quick switch
Error managing key
File error
Conditions unmet to allow for a MagicSwitch
Switch assertion canceled
error %ld missing error string
com.apple.nanoregistry.pairingerror
englishMessage
ProductName
ProductVersion
Watch OS
watchOS
iPhone OS
data
failure unarchiving %@
%@ is nil
%@ is class %@ expected one of %@
Mini Capabilities: 
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
width
height
int32Value
floatValue
doubleValue
boolValue
int64Value
isUnsigned
isShortOrChar
com.apple.nanoregistry.versionrequest
Minimum pairing compatibility version
minPairingCompatibilityVersionWithChipID
device
passcode
OOBKey
error
status
pairingStorePath
previousDevice
NRDeviceDiscoveryControllerDidDiscoverDevice
NRPairedDeviceRegistryDeviceDidBeginPairingNotification
NRPairedDeviceRegistryDeviceDidPairNotification
NRPairedDeviceRegistryDeviceDidFailToPairNotification
NRPairedDeviceRegistryDeviceDidUnpairNotification
NRPairedDeviceRegistryStatusDidChange
NRPairedDeviceRegistryDeviceNeedsPasscode
NRPairedDeviceRegistryDeviceOOBKeyDidChange
NRPairedDeviceRegistryDeviceDidBeginActivation
NRPairedDeviceRegistryRemoteUnpairingDidBeginNotification
NRPairedDeviceRegistryDeviceDidEnterCompatibilityStateNotification
NRPairedDeviceRegistryDevicesDidUpdateNotification
NRPairedDeviceRegistryDeviceDidReceiveBTPairingRequestNotification
NRPairedDeviceRegistryDeviceDidBecomeActive
NRPairedDeviceRegistryDeviceDidBecomeInactive
com.apple.nanoregistry.deviceispairinglinkisup
com.apple.nanoregistry.devicedidpair
com.apple.nanoregistry.devicedidunpair
com.apple.nanoregistry.remoteunpairingbeginning
com.apple.nanoregistry.restarted
com.apple.nanoregistry.paireddevicedidchangeversion
com.apple.nanoregistry.paireddevicedidchangecapabilities
com.apple.nanoregistry.watchdidbecomeactive
migrationKeyRevision
NRPairedDeviceRegistryLaunchedByNanoRegistry
NRPairedDeviceRegistryAbortPairingUserRequested
regulatoryModelNumber
com.apple.nanoregistry.pairedSync.initialSyncDidComplete
com.apple.nanoregistry.pairedSync.migrationSyncDidComplete
com.apple.nanoregistry.pairedSync.reunionSyncDidComplete
Setup
Bridge
magicswitchd
com.apple.nanoregistry.registry.deviceListQueue
com.apple.nanoregistry.getDevicesQueue
v48@?0@"NRDeviceCollectionDiff"8@"NRMutableDeviceCollection"16@"NRSecureDevicePropertyStore"24@32Q40
-[NRPairedDeviceRegistry initWithBoost:disconnected:]_block_invoke
v16@?0@"NRDeviceCollectionHistory"8
v16@?0@"NSArray"8
previousDeviceID
v32@?0@"NSUUID"8Q16@"<NSObject><NSCopying>"24
v32@?0@"NRMutableDeviceCollection"8@"NRSecureDevicePropertyStore"16@"NSDictionary"24
B16@?0@"NRMutableDeviceCollection"8
v24@?0@"NSString"8@"NSUUID"16
/var/mobile/Library/DeviceRegistry.state/ActiveDeviceMiniStore.plist
+[NRPairedDeviceRegistry getActiveDeviceMiniStore]_block_invoke
+[NRPairedDeviceRegistry isActiveDeviceAltAccount]
v12@?0I8
v24@?0@"NSUUID"8@"NSDate"16
v20@?0B8@"NRWatchPairingExtendedMetadata"12
q24@?0@8@16
UniqueDeviceID
119C9267-C24D-4FC3-8FE9-2D394943F2E6
_ShowInternalAutomationUI
com.apple.nanobuddy.automationhelper
NRPairedDeviceRegistryStatusCode UNKNOWN
NRPairedDeviceRegistryStatusCodeInvalid
NRPairedDeviceRegistryStatusCodeReady
NRPairedDeviceRegistryStatusCodeUnpairing
NRPairedDeviceRegistryStatusCodePairing
NRPairedDeviceRegistryStatusCodeSwitching
NRPairedDeviceRegistryStatusCodeMigrating
{ chipID = %ld pairingVersion = %ld productType = "%@" postFailsafeObliteration = "%s" isCellularEnabled = ]"%s" }
pairingVersion
postFailsafeObliteration
value
pairingIDs
devices
phoneUDIDHash
index
date
diff
switchRecordCollection
%06lld: %@ (switch=%u)
(null)
NRRegistryHistoryStoreShouldInitializeWithFirstUnlockStatus
v24@?0@"NRDeviceCollectionHistoryEntry"8@16
com.apple.bluetoothregistry
com.apple.nano.nanoregistry
com.apple.nano.nanoregistry.applydiff
com.apple.nanoregistry.registry
entitlement required
miniStoreNameKey
miniStoreIsAltAccountKey
miniStoreDeviceNameStringKey
miniStoreColorKey
miniStoreProductTypeKey
miniStoreProductNameKey
miniStoreLocalPairingDataStorePathKey
miniStoreMarketingVersionKey
miniStoreModelNumberKey
miniStoreHWModelStringKey
miniStoreBuildTypeKey
miniStoreEnclosureColorKey
miniStoreEnclosureMaterialKey
miniStoreIsInternalInstallKey
miniStoreRegulatoryModelNumberKey
miniStoreDeviceCoverGlassColorKey
miniStoreMainScreenWidthKey
miniStoreMainScreenHeightKey
miniStoreDeviceHousingColorKey
miniStoreDeviceBackingColorKey
miniStoreChipIDKey
miniStoreHasSecureElementKey
miniStoreGreenTeaDeviceKey
miniStoreStoreScreenScaleKey
miniStorePairedDateKey
miniStorePairingIDKey
miniStoreValuesKey
NRRegistryShouldCreateCollection
NRRegistryPlatformSupportsWatch
com.apple.nanoregistry.registry.managementqueue
IsUIBuild
DeviceClass
Watch
watch-companion
com.apple.nanoregistry.registry.updating
+[NRRegistry fixSecurePropertiesWithCollection:secureProperties:insecurePropertyNames:]
UUID
secure property UUID
Secure property ID: 
properties
com.apple.nanoregistry.nrsecuredevicepropertystore.dirtyqueue
NRSecureDevicePropertyStore property dictionary
%@: is %@
dirty
clean
%@ = %@
device property key
device property value
device properties dictionary
NRMutableDevice[%p]
com.apple.nanoregistry.activeDeviceAssertion.%p
<%@: %p; identifier = %@; pairingID = %@>
compressed
possiblyCompressedData
com.apple.NanoRegistry.NRActiveDeviceAssertion
com.apple.NanoRegistry.NRActiveDeviceAssertionMonitor
diffs
Watch1
Watch2
Watch3
Watch4
Watch5
Watch6
deviceDiff
changeType
[DELETED]
[CREATED]
[UPDATED]
device collection diff type key
device collection diff type value
device collection diff type
q24@?0@"NSUUID"8@"NSUUID"16
v40@?0@"NRDeviceCollectionDiff"8@"NRMutableDeviceCollection"16@"NRSecureDevicePropertyStore"24@32
v32@?0@"NRMutableDeviceCollection"8@"NRSecureDevicePropertyStore"16@24
NRDevice[%p]: 
%@="%@" 
v24@?0Q8@"<NSObject><NSCopying>"16
AdvertisingIdentifierSeed
property value
MM-dd-yyyy HH:mm:ss.SSS
%@ %ld
%@ 1
unknown
NRDiffTypeCreated
NRDiffTypeUpdated
NRDiffTypeDeleted
(unknown: %i)
device collection dictionary key
device collection dictionary value
device collection dictionary
processName
{CGSize=dd}
framework
daemon
root_daemon
pairing_reporter
magic_switch
link-monitor
com.apple.nanoregistry.dropoutcounter
names
eventType
termsText
documentationID
presentationReason
presentationLocation
acknowledgedDeviceName
acknowledgedDeviceSerialNumber
displayDeviceName
displayDeviceSerialNumber
eventDate
loggingProcessName
class=%@ code=%lld domain=%@
class=%@ name=%@ reason=%@
apple-internal-install
com.apple.nanoregistry.bypass.queue
com.apple.nanoregistry.suspendable.queue
propertyDiff
device property diff type
device property diff type key
device property diff type property
~'8[
_acknowledgedDeviceName: %@ _acknowledgedDeviceSerialNumber: %@ _displayDeviceName:%@ _displayDeviceSerialNumber:%@
Terms saved with missing device info.  This is not fatal: %@
xpcSetWatchNeedsGraduation - framework
dispatch xpcSetWatchNeedsGraduation - framework
%{public}@ called abort pairing with reason %{public}@; Ignoring since flag is set to ignore sharingd failures
%{public}@ valueID=%@
%{public}@ needs entitlement %@ to enable %@
%{public}@ options again=%@
%s[%{public}@]: retrieved %{public}@ from %{public}@/%{public}@
%s[%{public}@]: returning hasCompleted=%s
_queryDataAsyncIfNeededWithBlock/finishQueryWithTokenValues: Failure to query daemon, backing off interval = %0.1f
Using synchronous remote object for xpcGetDeviceCollectionWithBlock
_queryDaemonWithStartingTokenValueSync/xpcGetDeviceCollectionWithBlock: XPC error %{public}@
_queryDaemonWithStartingTokenValue/xpcGetDeviceCollectionWithBlock: XPC error %{public}@
_queryDaemonWithStartingTokenValue/xpcRetrieveSecureProperties: XPC error %{public}@
_queryDaemonWithStartingTokenValue/xpcGetDiffSinceIndex: XPC error %{public}@
NRDevicePropertyIsAltAccount is a secure property, assuming altaccount until property can be repaired
connection called
return connection: %@
Send version request in framework
Error sending NRSystemVersionRequest : XPC error %@
NRSystemVersionRequest sendSystemVersionRequest exception %@
NanoRegistry APIs called 250 times
client was blocked on threadIsBlockedWaitingOn_nanoregistryd_syncGrabLegacyRegistryWithBlock for %lu milliseconds
setWatchNeedsGraduation
Suspending registry operation queue.
%{public}s: status(%lu) compatibilityState (%u)
Resuming registry operation queue.
overrideSignalStrengthLimit:%ld not implemented
Cached ministore %@ at location %@
mini-store at location %@ failed to unarchive with error: %@
%{public}s ministore %@ set with unarchived values
Ministore is present on device but altAccount property is nil, this should never happen
No ministore on device, will check using traditional NR calls
Active device is nil, there is likely something wrong with this pairing
%s : device is tinker: %{BOOL}d
%u %u
Received request for characteristic read data
isWatchSetupPushActive not implemented
NanoRegistry client: Failed to apply diff to registry because %@
NRDevice found
NRDevice supports migration
protobuf created
%d bytes of protobuf created
data compressed! It is now only %d bytes
data did not compress. Bummer.
devicesFromMigrationConsentRequestData called
migrationConsentRequestData called
migrationConsentRequestData called- could not squish protobuf data to %d bytes (it's %ld bytes). Not returning any data!
Generating pre-restore migration data blob for (%lu) devices
Failed to serialize with error (%@) device IDs: (%@)
Generated pre-restore migration data blob of length (%lu bytes)
Ingesting post-restore migration data blob of length (%lu bytes)
Failed to unserialize with error (%@) pre-restore data : (%@)
Unserialization returned nil object without error
Unserialized root object not an array (%@)
Unserialization deviceID not a string: (%@)
Failed to convert unserialized deviceID (%@) into a UUID
Failed with error: (%@) to apply consent for deviceID: %@
Ingesting post-restore migration data complete
Device collection migrated to most recent history entry %p
Clearing historical device collection %p
Can't create path %{public}@! error=%{public}@
client %{public}@ is missing the %@ entitlement
Internal functionality not available in customer builds
%{public}@ called %{public}@ %{public}@
No store found, will not return a deviceStore
No store found in ministore
No value found in ministore for key %@
Property %@ is not in allowlist and is stored as insecure, converting to secure property
%s: Updating some allowlisted properties
%s: Not updating any properties
Failed to register block and get notify token for %@
Failure loading history file %{public}@: Unarchiver threw exception %{public}@.
Failure loading history file %{public}@: File has incorrect object %{public}@.
Failure saving history file %{public}@: Archiver returned "nil"
Failure saving active state machine file %{public}@: writeToFile returned "NO" %{public}@
Failure saving history file %{public}@: Archiver threw exception %{public}@.
Failure saving secure properties file %{public}@: Archiver threw exception %{public}@.
Failure saving secure properties file %{public}@: Archiver returned "NO"
Failure loading secure properties file %{public}@: Unarchiver threw exception %{public}@.
Failure loading secure properties file %{public}@: File has incorrect object %{public}@.
Failed to register short lived token with status: (%u)
Failed to query token value with status: (%u)
Failed to unregister short lived token with status: (%u)
Failed to register observer with status: (%u)
Failed to unregister observer with status: (%u)
IMPORTANT! Unsupported ProductType (%@) falling back to generic size (which won't behave correctly in UI)!
Generated and persisted new companion seed: (%@); ret: (%u)
Cleared Advertising Identifier Seed; ret: (%u)
Caught exception (%{public}@) archiving (%@)
Got error (%{public}@) archiving (%@)
Error (%{public}@) creating directory (%{public}@) for (%@)
Error (%{public}@) writing encoded data for (%@)
Error (%{public}@) deleting file (%{public}@)
Failed to register block and get notify token for %s
Failed to read notify token in %@
Failed to read data from file %{public}@ with error %{public}@
Failed to unarchive data of type %{public}@ with exception %{public}@
Failed to unarchive data of type %{public}@ with error %{public}@
NRDataFilePaths
NRTermsEvent
NSSecureCoding
NSCoding
NRTermsAcknowledgementRegistry
NSObject
NRMockXPCProxy
NRLoggingXPCProxy
NRMockXPCStuff
NRNSXPCConnection
NRNSXPCConnectionProtocol
NRNSXPCListener
NSXPCListenerDelegate
NRNSXPCListenerProtocol
NRMockClientNSXPCConnection
NRMockServerNSXPCConnection
NRMockNSXPCListener
NRReadWriteConcurrentQueue
NRPBDeviceCollectionHistory
NSCopying
sync
sync_history
NRPairedDeviceRegistryXPCDaemonDelegate
NRXPCRegistryDelegate
NRXPCPairingDelegate
NRPairedDeviceRegistryXPCFrameworkDelegate
NRPairingProxy
NRRegistryQueryCompletionBlockEntry
NRRegistryClient
NRMockRegistryClient
NRPBSwitchRecordCollection
NRPBPropertyValue
Diffs
NRPBSwitchRecord
NRMutableStateBaseObserverWrapper
NRMutableStateBase
NRMutableStateProtocol
NRMutableStateObserverProtocol
NRMutableStateParentProtocol
NRDiffBase
NRDiffProtocol
NRUnarchivedObjectVerifier
NRMiniUUIDSet
NRPBSize
NRPBNumber
NRSystemVersionRequest
NSError
NRBlockQueueWrapper
NRPairingCompatibilityVersionInfo
NRPairedDeviceRegistry
NRDeviceDiscoveryController
NRMigrator
migration
NRWatchPairingExtendedMetadata
NRServerRequestReporter
NRPBMutableDeviceProperty
NRPBMutableDeviceCollection
NRPBMigrationDevices
NRSwitchRecord
NRSwitchRecordCollection
NRDeviceCollectionHistoryEntry
NRDeviceCollectionHistoryObserverWrapper
NRDeviceCollectionHistory
NRMutableStateParentDelegate
NSFastEnumeration
InternalUtils
NRRegistryHistoryStore
NRRegistryProxy
NRDeviceMiniStore
NRPBDeviceCollectionHistoryEntry
NRRegistry
NRXPCProxy
NRDataFileHistoryHelpers
NRSecureDevicePropertyID
NRSecureDevicePropertyStore
NRUtils
NRMutableDevice
NRPBProperty
NRPBMigrationDeviceInfo
NRActiveDeviceAssertion
NRPBCompressedData
NRActiveDeviceAssertionMonitor
NRPBDeviceCollectionDiff
NRDeviceDiffType
NRDeviceCollectionDiff
NRKeyedUnarchiver
NRDevice
NRMagicSwitchHelper
NRMutableDeviceProperty
NRTextFormattingUtilities
NRPBDeviceDiffType
NRMutableDeviceCollection
NRClientInfo
NRPBDevicePropertyDiff
NRDevicePropertyDiff
NRSecure
NRConnectivitySubscriber
NRPBDeviceDiff
NRPBTermsEvent
NRSafeDescription
NRBypassQueue
NRDevicePropertyDiffType
NRDeviceDiff
NRPBMutableDevice
NRPBDevicePropertyDiffType
NRDeviceCapabilities
objectAtIndex:
stringByAppendingPathComponent:
pathToNanoRegistryStateDirectory
UUIDString
stringWithFormat:
_pathToNanoRegistryStateDirectory
_pathToNanoRegistryUnpairTriggerFileDirectory
pathToNanoRegistryHistoryFile
pathToNanoRegistryMigrationRoutingSlip
pathToNanoRegistryClassAFile
pathToNanoRegistryHistorySecurePropertiesFile
pathToNanoRegistryUDIDFile
pathToNanoRegistryHistoryRecoveryManagerFile:
_pathToNanoRegistryPairingStorePathDirectory
_pathToDevicePropertiesFile
_pathToSecureDevicePropertiesFile
_pathToRecoveryStateFile
_pathToUnpairTriggerFile
fileURLWithPath:
URLByAppendingPathComponent:
alphanumericCharacterSet
mutableCopy
addCharactersInString:
stringByAppendingString:
dateWithTimeIntervalSinceReferenceDate:
localizedStringFromDate:dateStyle:timeStyle:
termsText
digestFromData:
NRSHA256
base64EncodedStringWithOptions:
stringByAddingPercentEncodingWithAllowedCharacters:
defaultManager
path
fileExistsAtPath:
loadTermsWithPath:
isTermsAlreadyArchived
dictionaryWithObjects:forKeys:count:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToURL:options:error:
matchesDataAtFilePath:
errorWithEnum:
dataWithContentsOfURL:options:error:
isEqualToString:
initWithCoder:
decodeObjectOfClass:forKey:
setWritable:
mergeFrom:
hasTermsText
setTermsDigest:
saveTerms
init
sharedInstance
getAllDevicesWithArchivedAltAccountDevicesMatching:
countByEnumeratingWithState:objects:count:
valueForProperty:
isEqual:
timeIntervalSinceReferenceDate
setEventDate:
encodeObject:forKey:
encodeWithCoder:
setEventType:
setTermsText:
setDocumentationID:
setPresentationReason:
setPresentationLocation:
setAcknowledgedDeviceName:
setAcknowledgedDeviceSerialNumber:
setDisplayDeviceName:
setDisplayDeviceSerialNumber:
setLoggingProcessName:
supportsSecureCoding
eventWithProtobuf:
TB,R
description
saveEventTextToFileIfNeeded
initWithDeviceID:
_setEventType:
updateEventDate
_setLoggingProcessName:
termsDigest
flaggedForSend
setFlaggedForSend:
writable
.cxx_destruct
_flaggedForSend
_writable
_termsDigest
T@"NSString",&,N,V_termsDigest
TB,N,V_flaggedForSend
TB,N,V_writable
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
add:forDeviceID:withCompletion:
checkForAcknowledgement:forDeviceID:withCompletion:
interfaceWithProtocol:
initWithMachServiceName:options:
setRemoteObjectInterface:
resume
remoteObjectProxyWithErrorHandler:
errorStringWithEnum:
errorWithDomain:code:userInfo:
_proxy
stringWithUTF8String:
lastPathComponent
methodSignatureForSelector:
retainArguments
invokeWithTarget:
forwardInvocation:
_queue
_async
_target
dictionary
_mockListeners
processIdentifier
valueForEntitlement:
setExportedInterface:
exportedInterface
setExportedObject:
exportedObject
remoteObjectInterface
remoteObjectProxy
synchronousRemoteObjectProxyWithErrorHandler:
setInterruptionHandler:
interruptionHandler
setInvalidationHandler:
invalidationHandler
suspend
invalidate
_setQueue:
runCompletionBlock:
processName
T@"NSXPCInterface",&,N
T@,&,N
T@,R,&,N
T@?,C,N
Ti,R,N
T@"NSString",R,&,N
initWithConnection:
_connection
setDelegate:
listener:shouldAcceptNewConnection:
initWithMachServiceName:
delegate
T@"<NRNSXPCListenerDelegate>",&,N
_listenerDelegate
UTF8String
objectForKeyedSubscript:
serverConnection
copy
remoteObjectProxyAsync:
queue
_invalidate
invalidated
_name
_serverConnection
_synchronousRemoteObjectProxy
_remoteObjectProxy
_invalidated
_exportedInterface
_exportedObject
_invalidationHandler
_interruptionHandler
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NRMockServerNSXPCConnection",R,N
TB,R,N,V_invalidated
T@"NSXPCInterface",&,N,V_exportedInterface
T@,&,N,V_exportedObject
T@?,C,N,V_interruptionHandler
T@?,C,N,V_invalidationHandler
dealloc
initWithListener:clientConnection:
_clientConnection
_listener
setObject:forKeyedSubscript:
removeObjectForKey:
_suspended
_delegate
T@"<NRNSXPCListenerDelegate>",&,N,V_delegate
arrayWithCapacity:
addObject:
count
enqueueReadWithBlock:bypassSuspend:async:
objectAtIndexedSubscript:
array
initWithNumberOfReaders:
enqueueReadWithBlock:bypassSuspend:
enqueueReadWithBlockAsync:bypassSuspend:
enqueueWriteWithBlockAsync:bypassSuspend:
_readerQueues
_writerQueue
_nextReader
_suspendedReadRequests
_suspendedWriteRequests
_lock
removeAllObjects
dictionaryRepresentation
numberWithLongLong:
setObject:forKey:
initWithCapacity:
addHistory:
historysCount
clearHistorys
historyAtIndex:
setSwitchRecords:
allocWithZone:
copyWithZone:
historyType
setStartIndex:
setHasStartIndex:
hasStartIndex
hasSwitchRecords
readFrom:
writeTo:
copyTo:
startIndex
historys
setHistorys:
switchRecords
_startIndex
_historys
_switchRecords
_has
TB,N
Tq,N,V_startIndex
T@"NSMutableArray",&,N,V_historys
TB,R,N
T@"NRPBSwitchRecordCollection",&,N,V_switchRecords
grabRegistryWithReadBlockAsync:
applyDiff:
grabRegistryWithWriteBlockAsync:
syncGrabRegistryWithReadBlock:
syncGrabRegistryWithWriteBlock:
grabHistoryWithReadBlock:
grabHistoryWithWriteBlock:
syncGrabHistoryWithReadBlock:
syncGrabHistoryWithWriteBlock:
xpcGetDeviceCollectionWithBlock:
xpcGetDiffSinceTokenValue:getSecureProperties:withBlock:
xpcRetrieveSecureProperties:block:
xpcGetChangeHistoryWithBlock:
xpcSwitchIndex:
xpcDeviceIDAtSwitchIndex:withBlock:
xpcClientInfo:
xpcApplyDiff:withSecureProperties:block:
xpcSetMigrationConsented:forDeviceID:withBlock:
xpcBeginDiscoveryWithBlock:
xpcEndDiscoveryWithBlock:
xpcCompanionOOBDiscoverAndPairWithName:withOutOfBandPairingKey:withOptions:operationHasBegun:
xpcCompanionPasscodePairWithDeviceID:withOptions:operationHasBegun:
xpcGizmoOOBAdvertiseAndPairWithName:operationHasBegun:
xpcGizmoPasscodeAdvertiseAndPairWithName:operationHasBegun:
xpcAbortPairingReason:withBlock:
xpcEnterCompatibilityState:withDeviceID:
xpcNotifyActivationCompleted:withSuccess:
xpcNotifyPasscode:withDeviceID:
xpcUnpairWithDeviceID:withOptions:operationHasBegun:
xpcPairingShouldContinue
xpcSuspendPairingClientCrashMonitoring:
xpcResumePairingClientCrashMonitoring:
xpcRetriggerUnpairInfoDialogWithBlock:
xpcTriggerVersion4Workaround
xpcSubmitAlbertPairingReport:
xpcSubmitRTCPairingMetricForMetricID:withSuccess:
xpcPairingClientDidEnterPhase:withBlock:
xpcPairingClientSetAltAccountName:altDSID:forPairingID:completion:
xpcPairingClientSetPairingParentName:pairingParentAltDSID:forPairingID:completion:
xpcWatchNeedsGraduation:
xpcClearWatchNeedsGraduation:
xpcSetWatchNeedsGraduation:
xpcSwitchActiveDeviceWithDeviceID:isMagicSwitch:operationHasCompleted:
xpcSwitchActiveDeviceWithDeviceID:withAssertionHandler:
xpcInvalidateSwitchAssertionWithIdentifier:block:
xpcActiveDeviceAssertions:
xpcBeginMigrationWithDeviceID:completion:
xpcBeginMigrationWithCompletion:
xpcPairWithSimulator:withCompletion:
xpcUnpairWithSimulator:withCompletion:
xpcSwitchToSimulator:withCompletion:
xpcGetMigrationPairingCharacteristicReadDataWithCompletion:
xpcPutMigrationChallengeCharacteristicWriteData:completion:
xpcSubmitServerRequestReportWithRequestType:duration:errorCode:block:
xpcPingActiveGizmoWithPriority:withMessageSize:withBlock:
xpcStartWatchSetupPushWithBlock:
xpcStopWatchSetupPushWithBlock:
xpcScanForMigratableWatchesWithBlock:
xpcBeginMigrationWithDeviceID:passcode:withBlock:
xpcGetLastMigrationRequestPhoneNameWithCompletion:
xpcKeepPhoneUnlockedInternalTestSPI:
xpcWaitForWatchPairingExtendedMetadataForAdvertisedName:completion:
xpcCheckIfFlaggedForRecoveryWithCompletion:
xpcClearRecoveryFlagWithCompletion:
xpcFakePairedSyncIsCompleteWithCompletion:
xpcGetLastSwitchIndex:
xpcGetMigrationCountForPairingID:completion:
xpcGetInitialSyncCompletedForPairingID:completion:
xpcIsPhoneReadyToMigrateDevice:withCompletion:
xpcIsAssertionActive:withCompletion:
enclosedClassTypes
setClasses:forSelector:argumentIndex:ofReply:
arrayWithObjects:count:
setWithArray:
xpcDeviceID:needsPasscode:
xpcHasNewOOBKey:
target
pairingQueue
loudHasEntitlement:
proxyWillBeginPairing:
connection
logCaller:args:
hasPrefix:
appPath
proxyWillAbortPairing:
boolValue
numberWithBool:
proxyWillBeginUnpairing:
proxyWillTakeSwitchAssertion:
proxyWillInvalidateSwitchAssertion:
proxyWillBeginDiscovering:
proxyWillEndDiscovering:
setPairingClientCrashMonitoringCache:proxy:
proxyRequestsSuspensionOfCrashMonitoring:
proxyRequestsResumptionOfCrashMonitoring:
proxyWillBeginPushing:
proxyWillEndPushing:
unsignedIntValue
integerValue
machServiceName
serverExportedInterface
serverRemoteObjectInterface
clientExportedInterface
clientRemoteObjectInterface
_block
_updateCounter
initWithParameters:
managementQueue
_queryDataAsyncIfNeededWithBlock:
registerNotifyTokenWithName:withQueue:withBlock:
supportsWatch
_connectToDaemon
performUnderCollectionLock:
grabRegistryWithReadBlock:
rawConnection
proxyClass
xpcConnectionClass
collection
secureProperties
enqueueForReadUnlessSuspended:
_grabRegistryWithReadBlock:
enqueueForRead:
_grabRegistryWithWriteBlockAsync:
getReferencedSecureProperties:fromDiff:
enqueueForWriteAsync:
_nextToken
devicesUpdateCounter
setSecureProperties:
setCollection:
diffFrom:to:
enqueueForWriteAsync:bypassSuspend:
domain
code
nr_safeDescription
setParentDelegate:
forceImportSecureProperties:
addObserverQueue:withBlock:
setQueueCollection:
daemonIdle
addDiffIndexObserverWithWriteBlock:
removeDiffIndexObserver:
_diffIndexObservers
_optimizeGetState
_outstandingRegistryQuery
_devicesUpdateCounterNotifyToken_dispatch
_devicesUpdateCounterNotifyToken_check
_tokenValue
_lastDevicesUpdateCounterNotifyTokenValue
_backoffDuration
_registryQueryCompletionBlockEntries
T@"<NRNSXPCConnectionProtocol>",R,&,N
TQ,R,N
addRecords:
recordsCount
clearRecords
recordsAtIndex:
recordsType
records
setRecords:
_records
T@"NSMutableArray",&,N,V_records
addArrayValues:
setStringValue:
setNumberValue:
setUUIDValue:
setDataValue:
setSizeValue:
setDictionaryKey:
arrayValuesCount
clearArrayValues
arrayValuesAtIndex:
arrayValuesType
hasStringValue
hasNumberValue
hasUUIDValue
hasDataValue
hasSizeValue
hasDictionaryKey
setIsSet:
setHasIsSet:
hasIsSet
setIsSecurePropertyValue:
setHasIsSecurePropertyValue:
hasIsSecurePropertyValue
setIsDate:
setHasIsDate:
hasIsDate
setIsError:
setHasIsError:
hasIsError
setIsMiniUUIDSet:
setHasIsMiniUUIDSet:
hasIsMiniUUIDSet
stringValue
numberValue
uUIDValue
dataValue
sizeValue
dictionaryKey
arrayValues
setArrayValues:
isSet
isSecurePropertyValue
isDate
isError
isMiniUUIDSet
_arrayValues
_dataValue
_dictionaryKey
_numberValue
_sizeValue
_stringValue
_uUIDValue
_isDate
_isError
_isMiniUUIDSet
_isSecurePropertyValue
_isSet
T@"NSString",&,N,V_stringValue
T@"NRPBNumber",&,N,V_numberValue
T@"NSData",&,N,V_uUIDValue
T@"NSData",&,N,V_dataValue
T@"NRPBSize",&,N,V_sizeValue
T@"NRPBPropertyValue",&,N,V_dictionaryKey
T@"NSMutableArray",&,N,V_arrayValues
TB,N,V_isSet
TB,N,V_isSecurePropertyValue
TB,N,V_isDate
TB,N,V_isError
TB,N,V_isMiniUUIDSet
value
timeIntervalSinceNow
hasUUID:
containsObject:
initWithValue:
initWithDiff:andChangeType:
numberWithUnsignedInteger:
numberWithUnsignedShort:
changeType
diff
pairingID
isPaired
isActive
isArchived
isAltAccount
migratable
supportsCapability:
diffsToActivate:withDate:
diffsToPair:withDate:
diffsToSetStatusCode:andCompatibilityState:
diffsToSetStatusCode:
diffsToClearStatusCodeAndCompatibilityState
parseDiff:forPropertyChange:withBlock:
T@"NSUUID",R,N
numberWithDouble:
numberWithInt:
setDeviceIDBytes:
hasDeviceIDBytes
setDateTimeInterval:
setHasDateTimeInterval:
hasDateTimeInterval
setSwitchIndex:
setHasSwitchIndex:
hasSwitchIndex
deviceIDBytes
dateTimeInterval
switchIndex
_dateTimeInterval
_deviceIDBytes
_switchIndex
T@"NSData",&,N,V_deviceIDBytes
Td,N,V_dateTimeInterval
Ti,N,V_switchIndex
numberWithInteger:
initWithDomain:code:userInfo:
componentsSeparatedByString:
_observer
applyDiff:upOnly:notifyParent:unconditional:
setByAddingObject:
parentDelegate
child:didApplyDiff:
valueWithNonretainedObject:
nonretainedObjectValue
removeObject:
classTypes
removeObserver:
T@"<NRMutableStateParentDelegate>",W,N
notifyParentWithDiff:
notifyObserversWithDiff:
_observers
_parentDelegate
T@"<NRMutableStateParentDelegate>",W,N,V_parentDelegate
raise:format:
unarchivingVerifyObjectIsNotNil:name:owner:
unarchivingVerifyObjectClasses:name:classes:owner:
getUUIDBytes:
initWithData:
length
bytes
dataWithBytesNoCopy:length:
dataWithBytes:length:
appendString:
appendFormat:
initWithUUIDSet:
data
setData:
.cxx_construct
_miniUUIDs
_data
T@"NSData",&,N,V_data
numberWithFloat:
width
setWidth:
height
setHeight:
_height
_width
Tf,N,V_width
Tf,N,V_height
setInt32Value:
setHasInt32Value:
hasInt32Value
setFloatValue:
setHasFloatValue:
hasFloatValue
setDoubleValue:
setHasDoubleValue:
hasDoubleValue
setBoolValue:
setHasBoolValue:
hasBoolValue
setInt64Value:
setHasInt64Value:
hasInt64Value
setIsUnsigned:
setHasIsUnsigned:
hasIsUnsigned
setIsShortOrChar:
setHasIsShortOrChar:
hasIsShortOrChar
int32Value
floatValue
doubleValue
int64Value
isUnsigned
isShortOrChar
_doubleValue
_int64Value
_floatValue
_int32Value
_boolValue
_isShortOrChar
_isUnsigned
Ti,N,V_int32Value
Tf,N,V_floatValue
Td,N,V_doubleValue
TB,N,V_boolValue
Tq,N,V_int64Value
TB,N,V_isUnsigned
TB,N,V_isShortOrChar
sendVersionRequestToCompanion
minPairingCompatibilityVersionForChipID:
minQuickSwitchPairingCompatibilityVersionForChipID:
maxPairingCompatibilityVersion
minPairingCompatibilityVersionForChipID:name:defaultVersion:
stringByReplacingOccurrencesOfString:withString:
numberFromCFPrefs:
initInternal
stringFromCFPrefs:
systemVersions
minPairingCompatibilityVersion
minQuickSwitchCompatibilityVersion
minPairingCompatibilityVersionWithChipID
pairingCompatibilityVersion
isOverrideActive
isRevlockFeatureFlagActive
setPairingCompatibilityVersion:
setMaxPairingCompatibilityVersion:
setMinPairingCompatibilityVersion:
setMinPairingCompatibilityVersionWithChipID:
setMinQuickSwitchCompatibilityVersion:
setIsOverrideActive:
setIsRevlockFeatureFlagActive:
_isOverrideActive
_isRevlockFeatureFlagActive
_pairingCompatibilityVersion
_maxPairingCompatibilityVersion
_minPairingCompatibilityVersion
_minPairingCompatibilityVersionWithChipID
_minQuickSwitchCompatibilityVersion
Tq,N,V_pairingCompatibilityVersion
Tq,N,V_maxPairingCompatibilityVersion
Tq,N,V_minPairingCompatibilityVersion
Tq,N,V_minPairingCompatibilityVersionWithChipID
Tq,N,V_minQuickSwitchCompatibilityVersion
TB,N,V_isOverrideActive
TB,N,V_isRevlockFeatureFlagActive
logCallFrequency
maxPairedDeviceCount
maxTinkerPairedDeviceCount
setActivePairedDevice:isMagicSwitch:operationHasCompleted:
shouldBoostProcess
initWithBoost:
initWithBoost:disconnected:
_getStatusWithCollection:
sendDevicesUpdatedNotification
initWithRegistry:diff:pairingID:notify:
activeDevice
paired
allAltAccount
activeDeviceID
defaultCenter
postNotificationName:object:userInfo:
userInfo
initWithUUIDString:
allValues
threadIsBlockedWaitingOn_nanoregistryd_syncGrabLegacyRegistryWithBlock:
pairedDevicesSelectorBlock
getDevicesMatching:
activePairedDeviceSelectorBlock
firstObject
getAllDevicesWithArchivedDevicesMatching:
getDevicesWithBlock:
unpairWithDevice:withOptions:operationHasBegun:
getActivePairedDevice
activeDeviceSelectorBlock
pairingStorePathPairingID:
altAccountPairingStorePathPairingID:
waitForPairingStorePathPairingID:
waitForAltAccountPairingStorePathPairingID:
abortPairingWithReason:
getPairedDevices
initWithRequestType:
dataWithContentsOfFile:
unarchivedObjectOfClass:fromData:error:
getActiveDeviceMiniStore
objectForKey:
deviceForBluetoothID:
nonActiveDeviceForBluetoothID:
deviceIDForIDSDevice:
deviceForBTDeviceID:
nonActiveDeviceForBTDeviceID:
deviceIDForNRDevice:
nsuuid
pairingClientSetAltAccountName:altDSID:forDevice:completion:
_deviceIDAtSwitchIndex:date:
setMigrationConsented:forDeviceID:withBlock:
sharedMigrator
migrationConsentRequestData
devicesFromMigrationConsentRequestData:
isActiveDeviceAltAccount
_getLocalDeviceCollection
watchNeedsGraduation
clearWatchNeedsGraduation:
setWatchNeedsGraduation:
pairedDeviceCountIsLessThanMaxPairedDevices
pairedDeviceCountIsLessThanMaxTinkerPairedDevices
pairedDeviceSupportQuickSwitch
setActivePairedDevice:operationHasCompleted:
setActivePairedDevice:withActiveDeviceAssertionHandler:
_invalidateActiveDeviceAssertionWithIdentifier:
_getChangeHistory
_getSecureProperties:
_getClientInfo
status
compatibilityState
isKeychainEnabled
getDevices
getAllDevices
getAllDevicesWithArchivedDevices
companionOOBDiscoverAndPairWithName:withOutOfBandPairingKey:withOptions:operationHasBegun:
companionPasscodePairWithDevice:withOptions:operationHasBegun:
gizmoOOBAdvertiseAndPairWithName:operationHasBegun:
gizmoPasscodeAdvertiseAndPairWithName:operationHasBegun:
notifyActivationCompleted:withSuccess:
notifyPasscode:forDevice:
notifyPairingShouldContinue
unpairWithDevice:shouldObliterate:operationHasBegun:
pairWithSimulator:withQueue:withCompletion:
unpairWithSimulator:withQueue:withCompletion:
switchToSimulator:withQueue:withCompletion:
fakePairedSyncIsCompleteWithCompletion:
enterCompatibilityState:forDevice:
waitForActivePairedDevice
waitForActivePairedOrAltAccountDevice
waitForActiveOrAltAccountDevice
waitForActiveDevice
abortPairing
suspendPairingClientCrashMonitoring
resumePairingClientCrashMonitoring
pairingStorePath
blockAndQueryVersions
userIsCheckingForUpdate
retriggerUnpairInfoDialog
beginDiscovery
endDiscovery
overrideSignalStrengthLimit:
supportsPairedDevice
serverRequestReporterWithType:
_submitServerRequestReportWithRequestType:duration:errorCode:
_submitAlbertPairingReport
completeRTCPairingMetricForMetricID:withSuccess:
deviceForPairingID:
deviceForIDSDevice:
nonActiveDeviceForIDSDevice:
deviceForNRDevice:fromIDSDevices:
pairingClientDidEnterPhase:
pairingClientSetAltAccountName:forDevice:completion:
pairingClientSetPairingParentName:pairingParentAltDSID:forDevice:completion:
getSwitchEventsFromIndex:inlineCallback:
_getActiveDeviceAssertionsWithInlineBlock:
getMigrationPairingCharacteristicReadDataWithQueue:completion:
putMigrationChallengeCharacteristicWriteData:queue:completion:
_pingActiveGizmoWithPriority:withMessageSize:withBlock:
startWatchSetupPush
isWatchSetupPushActive
stopWatchSetupPush
waitForWatchPairingExtendedMetadataForAdvertisedName:completion:
setMigrationConsented:forDevice:withBlock:
beginMigrationWithDevice:passcode:withBlock:
beginMigrationWithDevice:withCompletion:
lastMigrationRequestPhoneName
keepPhoneUnlockedInternalTestSPI:
checkIfFlaggedForRecoveryWithCompletion:
clearRecoveryFlagWithCompletion:
lastSyncSwitchIndex
migrationCountForPairingID:
hasCompletedInitialSyncForPairingID:
isAssertionActive:
isPhoneReadyToMigrateDevice:withCompletion:
_disconnected
_lastCompatibilityState
_legacyDevices
_pairedDeviceRegistryDeviceListQueue
_pairedRegistryGetDevicesQueue
_lastStatus
_waitingForRegistryUpdateBlocks
_callCount
compare:
indexOfObject:inSortedRange:options:usingComparator:
insertObject:atIndex:
begin
devices
T@"NSArray",R,N
getCharacters:range:
stringWithCharacters:length:
canMigrate
setID:
setName:
setAdvertisedName:
addDevices:
setPhoneUDIDHash:
name
setCompressed:
setPossiblyCompressedData:
subdataWithRange:
dataUsingEncoding:
compressed
possiblyCompressedData
hasPhoneUDIDHash
phoneUDIDHash
advertisedName
getBytes:length:
initWithUUIDBytes:
devicesExpectedToBeMigratableAfterRestore
migratableDevices
minusSet:
allObjects
dataWithPropertyList:format:options:error:
propertyListWithData:options:format:error:
migrationDataPreRestoreForConsentedDevices:
ingestPostRestoreMigrationDataForConsentedDevices:
migrationIsAvailable
migratableDevicesRequiringConsent
enterPreMigrationMode
migratingDevice
_migrating
_migratingDevice
T@"NSArray",R,&,N
T@"NRDevice",R,&,N,V_migratingDevice
archived
migrationError
migrationConfirmed
decodeIntegerForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
chipID
setChipID:
pairingVersion
setPairingVersion:
productType
setProductType:
postFailsafeObliteration
setPostFailsafeObliteration:
isCellularEnabled
setIsCellularEnabled:
_postFailsafeObliteration
_isCellularEnabled
_chipID
_pairingVersion
_productType
Tq,N,V_chipID
Tq,N,V_pairingVersion
T@"NSString",&,N,V_productType
TB,N,V_postFailsafeObliteration
TB,N,V_isCellularEnabled
abs_to_seconds:
abs_to_nanos:
requestCompletedWithErrorCode:andDuration:
requestCompletedWithErrorCode:
requestTimedOut
_submitted
_requestType
_timebaseInfo
_startTime
setValue:
hasValue
_value
T@"NRPBPropertyValue",&,N,V_value
addPairingIDs:
pairingIDsCount
clearPairingIDs
pairingIDsAtIndex:
devicesCount
clearDevices
devicesAtIndex:
pairingIDsType
devicesType
pairingIDs
setPairingIDs:
setDevices:
_devices
_pairingIDs
T@"NSMutableArray",&,N,V_pairingIDs
T@"NSMutableArray",&,N,V_devices
_phoneUDIDHash
T@"NSData",&,N,V_phoneUDIDHash
state
initWithDeviceID:date:switchIndex:
fromUUID:
toUUID
lastObject
indexSetWithIndexesInRange:
removeObjectsAtIndexes:
truncateSwitchRecords
initWithProtobuf:
decodeInt64ForKey:
decodeInt32ForKey:
protobuf
index
date
setIndex:
setDate:
setDiff:
dateFormatter:
prefixLinesWithString:withText:
initWithHistory:index:date:diff:switchIndex:
_index
_date
_diff
_historyManager
T@"NSDate",R,N
T@"NRDeviceCollectionDiff",R,N
T@"NRMutableDeviceCollection",R,N
TI,R,N
T@"NRPBDeviceCollectionHistoryEntry",R,N
observer
setObserver:
setQueue:
T@?,C,N,V_observer
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
orderedSet
decodeObjectOfClasses:forKey:
_createIndex
_truncateHistory
numberWithUnsignedLongLong:
_mostRecentStateBefore:
longLongValue
_updateHistoryCachesWithIndex:
_findIndexInHistoryStateCache:type:
pruneStateCacheItems:
removeLastObject
timeIntervalSinceDate:
removeObjectsInRange:
switchDeviceIDFromDiff:
notifyHistoryObserversWithEntry:
historyEntryAtIndex:
isEqualToHistory:
mutableCopyWithZone:
dirty
nextIndex
deviceIDAtSwitchIndex:date:
deviceCollection
_maxHistoryDepth
_atomicDirty
_observerLock
_cacheLock
_deviceCollection
_history
_historyStateCache
_historyStateCacheMRU
_historyStateCacheIndex
T@"NRMutableDeviceCollection",R,N,V_deviceCollection
T@"NRPBDeviceCollectionHistory",R,N
fileHandleForReadingAtPath:
seekToOffset:error:
readDataOfLength:
isEqualToData:
unarchiveDeviceHistory
createMissingDates:
_startQueue
_notifyObserversSecurePropertiesAreAvailableWithCollection:secureProperties:
unarchiveSecureProperties
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
history
archiveSecureProperties:
archiveDeviceHistory:
allSecurePropertyIDs
removeSecureProperty:
_notifyDiffIndexObserversWithHistoryEntry:deviceCollection:secureProperties:
_notifyDiffObserversWithDiff:deviceCollection:secureProperties:
_keyBagStatusChangedNotificationToken
T@"NRDeviceCollectionHistory",R,N
hasEntitlement:
hasEntitlements
registryDelegate
_hasInternalEntitlement
entitlements
requireAnEntitlement
initWithStore:
fullStore
_store
setHasIndex:
hasIndex
setHasDate:
hasDate
hasDiff
Tq,N,V_index
Td,N,V_date
T@"NRPBDeviceCollectionDiff",&,N,V_diff
enqueueForReadAsync:
getReferencedSecurePropertyIDsFromDiff:
dictionaryWithCapacity:
securePropertyForID:
storeSecureProperty:
initWithDiffPropertyDiffs:
initWithDeviceCollectionDiffDeviceDiffs:
fixSecurePropertiesWithCollection:secureProperties:insecurePropertyNames:
readNotifyToken:
enqueueForRead:bypassSuspend:
enqueueForReadAsync:bypassSuspend:
addDiffObserverWithWriteBlock:
removeDiffObserver:
addSecurePropertiesObserverWithReadBlock:
removeSecurePropertiesObserver:
queueCollection
_registryDiffObservers
_registrySecurePropertyObservers
_collectionLock
_readerWriterDispatch
_queueRunning
_supportsWatch
_collection
_secureProperties
_managementQueue
_queueCollection
T@"NSObject<OS_dispatch_queue>",R,N,V_managementQueue
T@"NRMutableDeviceCollection",&,N,V_collection
T@"NRMutableDeviceCollection",&,N,V_queueCollection
T@"NRSecureDevicePropertyStore",&,N,V_secureProperties
hasEntitlement:withBitmask:
shouldMonitorProxy:forSuspension:
initWithConnection:delegate:xpcTarget:entitlementBitmask:
setMonitorClientForSuspension:
monitorClientForSuspension
_entitlementBitmask
_monitorClientForSuspension
_appPath
T@"NSString",R,N,V_appPath
T@,R,N,V_target
T@,R,N
T@"<NRNSXPCConnectionProtocol>",R,N,V_connection
TB,N,V_monitorClientForSuspension
setWithObject:
nr_secureUnarchiveObjectOfClasses:withFile:
nr_secureArchivedDataWithRootObject:
writeToFile:options:error:
nr_secureArchiveRootObject:toFile:
UUID
initWithPropertyString:
_uuid
allKeys
setByAddingObjectsFromSet:
forceWriteSecurePropertyID:withValue:
_IDToProperty
_propertyToID
_dirtyQueue
_dirty
TB,R,N,V_dirty
dataWithLength:
NRSHA256:
dataWithRandomBytesOfSize:
T@"NSData",R,N
_createIndex:
names
properties
unpackPropertyValue:
setNames:
setProperties:
compare:options:
sortedArrayUsingComparator:
stringByPaddingToLength:withString:startingAtIndex:
propertyForName:
setProperty:forName:
removePropertyForName:
allPropertyNames
setProtobuf:
_protobuf
_properties
T@"NRPBMutableDevice",&,N,V_protobuf
hasName
T@"NSString",&,N,V_name
hasID
hasAdvertisedName
_advertisedName
T@"NSData",&,N,V_iD
T@"NSString",&,N,V_advertisedName
device
_identifier
_device
T@"NRDevice",R,&,N
setHasCompressed:
hasCompressed
hasPossiblyCompressedData
_possiblyCompressedData
_compressed
TB,N,V_compressed
T@"NSData",&,N,V_possiblyCompressedData
weakObjectsHashTable
activeDeviceAssertionStateDidChange
hasActiveAssertion
addObserver:
_assertionToken
_workQueue
addDiffs:
diffsCount
clearDiffs
diffsAtIndex:
diffsType
diffs
setDiffs:
_diffs
T@"NSMutableArray",&,N,V_diffs
setChangeType:
_changeType
T@"NRDeviceDiff",R,N,V_diff
TQ,R,N,V_changeType
T@"NRPBDeviceDiffType",R,N
diffCollectionDiffForPairingID:
allPairingIDs
_diffDeviceDiffs
T@"NRPBDeviceCollectionDiff",R,N
weakObjectsPointerArray
propertyNames
addPointer:
removePointerAtIndex:
arrayByAddingObjectsFromArray:
device:propertyDidChange:fromValue:
_setValue:forProperty:
addPropertyObserver:forPropertyChanges:
removePropertyObserver:forPropertyChanges:
registerForPropertyChanges:withBlock:
unregisterForPropertyChanges:withBlock:
initWithQueue:
setValue:forProperty:
_pairingID
_registry
_oldPropertiesForChangeNotifications
_promiscuousObservers
_changeBlocks
_promiscuousChangeBlocks
companionSeed
clearCompanionSeed
setWithSet:
unionSet:
packPropertyValue:
setWithObjects:
T@"<NSObject><NSCopying>",R,&,N,V_value
T@"NRPBMutableDeviceProperty",&,N,V_protobuf
substringFromIndex:
setDateFormat:
stringFromDate:
componentsJoinedByString:
nameCounter:
setHasChangeType:
hasChangeType
changeTypeAsString:
StringAsChangeType:
Ti,N,V_changeType
T@"NRPBDeviceDiff",&,N,V_diff
setDevice:forPairingID:
removeDeviceForPairingID:
_childMap
T@"NRPBMutableDeviceCollection",&,N,V_protobuf
setProcessName:
_processName
T@"NSString",C,N,V_processName
_diffsToChangeActiveDeviceToDeviceID:
setActiveDeviceID:
T@"NRMutableDevice",R,N
T@"NSUUID",&,N
TB,R,N,Gpaired
isAllAltAccount
TB,R,N,GallAltAccount
nr_filteredError
objCType
intValue
unsignedLongLongValue
shortValue
unsignedShortValue
charValue
unsignedCharValue
unsignedIntegerValue
numberWithShort:
numberWithUnsignedChar:
numberWithChar:
numberWithUnsignedInt:
valueWithSize:
nr_secureUnarchiveObjectOfClasses:withData:
T@"<NSObject><NSCopying>",R,N,V_value
T@"NRPBDevicePropertyDiff",R,N
archivedDataWithRootObject:requiringSecureCoding:error:
nr_secureArchiveRootObject:toFile:withOptions:
stringByDeletingLastPathComponent
removeItemAtPath:error:
getDropoutCounter:
_connected
_dropoutCounter
addNames:
namesCount
clearNames
namesAtIndex:
namesType
_names
T@"NSMutableArray",&,N,V_names
dataWithContentsOfFile:options:error:
initForReadingFromData:error:
finishDecoding
setHasEventType:
hasEventType
hasDocumentationID
hasPresentationReason
setHasPresentationLocation:
hasPresentationLocation
hasAcknowledgedDeviceName
hasAcknowledgedDeviceSerialNumber
hasDisplayDeviceName
hasDisplayDeviceSerialNumber
setHasEventDate:
hasEventDate
hasLoggingProcessName
eventType
documentationID
presentationReason
presentationLocation
acknowledgedDeviceName
acknowledgedDeviceSerialNumber
displayDeviceName
displayDeviceSerialNumber
eventDate
loggingProcessName
_eventDate
_acknowledgedDeviceName
_acknowledgedDeviceSerialNumber
_displayDeviceName
_displayDeviceSerialNumber
_documentationID
_eventType
_loggingProcessName
_presentationLocation
_presentationReason
_termsText
Ti,N,V_eventType
T@"NSData",&,N,V_termsText
T@"NSString",&,N,V_documentationID
T@"NSString",&,N,V_presentationReason
Ti,N,V_presentationLocation
T@"NSString",&,N,V_acknowledgedDeviceName
T@"NSString",&,N,V_acknowledgedDeviceSerialNumber
T@"NSString",&,N,V_displayDeviceName
T@"NSString",&,N,V_displayDeviceSerialNumber
Td,N,V_eventDate
T@"NSString",&,N,V_loggingProcessName
reason
enqueueBlock:
enqueueBlockAsync:
enqueueBypassBlock:
enqueueBypassBlockAsync:
_suspendableQueue
_bypassQueue
T@"NRDevicePropertyDiff",R,N,V_diff
T@"NRPBDevicePropertyDiffType",R,N
diffPropertyDiffForName:
_diffPropertyDiffs
T@"NRPBDeviceDiff",R,N
addProperties:
propertiesCount
clearProperties
propertiesAtIndex:
propertiesType
T@"NSMutableArray",&,N,V_properties
T@"NRPBDevicePropertyDiff",&,N,V_diff
@16@0:8
@24@0:8@16
B16@0:8
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v16@0:8
v20@0:8i16
v24@0:8Q16
v24@0:8d16
v20@0:8B16
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@?32
v40@0:8@"NRTermsEvent"16@"NSUUID"24@?<v@?@"NSError">32
v40@0:8@"NRTermsEvent"16@"NSUUID"24@?<v@?B@"NSError">32
@24@0:8Q16
@"<NRTermsAcknowledgementRegistry>"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@32@0:8@16Q24
@24@0:8@?16
v24@0:8@?16
@?16@0:8
i16@0:8
@32@0:8@"NSString"16Q24
@24@0:8@?<v@?@"NSError">16
@24@0:8@"NSString"16
v24@0:8@"NSObject<OS_dispatch_queue>"16
v24@0:8@?<v@?>16
@"NSXPCInterface"16@0:8
v24@0:8@"NSXPCInterface"16
@?<v@?>16@0:8
@"NSXPCConnection"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"<NRNSXPCListenerProtocol>"24@0:8@"NSString"16
@"<NRNSXPCListenerDelegate>"16@0:8
v24@0:8@"<NRNSXPCListenerDelegate>"16
@"<NRNSXPCListenerDelegate>"
@20@0:8B16
@"NRMockServerNSXPCConnection"
@"NSXPCInterface"
@32@0:8@16@24
@"NRMockClientNSXPCConnection"
@"NRMockNSXPCListener"
v28@0:8@?16B24
v32@0:8@?16B24B28
@"NSMutableArray"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@24@0:8^{_NSZone=}16
v24@0:8q16
q16@0:8
@"NRPBSwitchRecordCollection"
{?="startIndex"b1}
v36@0:8Q16B24@?28
v32@0:8@16@?24
v28@0:8I16@?20
v36@0:8B16@20@?28
v24@0:8@?<v@?@"NRMutableDeviceCollection"@"NRSecureDevicePropertyStore"Q>16
v36@0:8Q16B24@?<v@?@"NRDeviceCollectionDiff"@"NSDictionary"BQ>28
v32@0:8@"NSSet"16@?<v@?@"NSDictionary">24
v24@0:8@?<v@?@"NRDeviceCollectionHistory">16
v24@0:8@?<v@?I>16
v28@0:8I16@?<v@?@"NSUUID"@"NSDate">20
v24@0:8@?<v@?@"NSArray">16
v40@0:8@"NRDeviceCollectionDiff"16@"NSDictionary"24@?<v@?@"NSError">32
v36@0:8B16@"NSUUID"20@?<v@?>28
v48@0:8@16@24@32@?40
v28@0:8S16@20
v28@0:8@16B24
v32@0:8@16@24
v36@0:8@16B24@?28
v44@0:8@16d24I32@?36
v36@0:8i16Q20@?28
v48@0:8@"NSString"16@"NSData"24@"NSDictionary"32@?<v@?@"NSError">40
v40@0:8@"NSUUID"16@"NSDictionary"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?>24
v28@0:8S16@"NSUUID"20
v28@0:8@"NSUUID"16B24
v32@0:8@"NSNumber"16@"NSUUID"24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v48@0:8@"NSString"16@"NSString"24@"NSUUID"32@?<v@?@"NSError">40
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"NSError">16
v36@0:8@"NSUUID"16B24@?<v@?@"NSError">28
v32@0:8@"NSUUID"16@?<v@?@"NSError"@"NSString">24
v24@0:8@?<v@?@"NSDictionary">16
v32@0:8@"NSUUID"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSData">16
v32@0:8@"NSData"16@?<v@?B>24
v44@0:8@"NSString"16d24I32@?<v@?>36
v36@0:8i16Q20@?<v@?Bdd>28
v40@0:8@"NSUUID"16@"NSString"24@?<v@?>32
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSString"16@?<v@?B@"NRWatchPairingExtendedMetadata">24
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?Q@"NSError">16
v32@0:8@"NSUUID"16@?<v@?Q@"NSError">24
v32@0:8@"NSUUID"16@?<v@?B@"NSError">24
v32@0:8@"NSUUID"16@"NSNumber"24
v24@0:8@"NSData"16
@"<NRNSXPCConnectionProtocol>"
@"NSData"
@"NRPBPropertyValue"
@"NRPBNumber"
@"NRPBSize"
{?="isDate"b1"isError"b1"isMiniUUIDSet"b1"isSecurePropertyValue"b1"isSet"b1}
@28@0:8B16@20
@28@0:8Q16S24
d16@0:8
{?="dateTimeInterval"b1"switchIndex"b1}
@32@0:8@16@?24
@32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?@"<NRDiffProtocol>"@>24
@"<NRMutableStateParentDelegate>"16@0:8
v24@0:8@"<NRMutableStateParentDelegate>"16
@36@0:8@16B24B28B32
@"<NRDiffProtocol>"24@0:8@"<NRDiffProtocol>"16
@"<NRDiffProtocol>"36@0:8@"<NRDiffProtocol>"16B24B28B32
@"<NRDiffProtocol>"32@0:8@"<NRMutableStateProtocol>"16@"<NRMutableStateProtocol>"24
@"NSMutableSet"
@"<NRMutableStateParentDelegate>"
v40@0:8@16@24@32
v48@0:8@16@24@32@40
{vector<unsigned int, std::allocator<unsigned int> >="__begin_"^I"__end_"^I"__end_cap_"{__compressed_pair<unsigned int *, std::allocator<unsigned int> >="__value_"^I}}
f16@0:8
v20@0:8f16
{?="doubleValue"b1"int64Value"b1"floatValue"b1"int32Value"b1"boolValue"b1"isShortOrChar"b1"isUnsigned"b1}
q24@0:8@16
q40@0:8@16@24q32
@24@0:8B16B20
Q24@0:8@16
S16@0:8
v36@0:8@16d24I32
I16@0:8
@28@0:8I16^@20
v40@0:8q16Q24@?32
@"NRDevice"
Q24@0:8Q16
d24@0:8Q16
v20@0:8I16
v28@0:8I16d20
{mach_timebase_info="numer"I"denom"I}
@36@0:8@16@24I32
@52@0:8@16Q24@32@40I48
@"NSDate"
@"NRDeviceCollectionDiff"
@"NRDeviceCollectionHistory"
v32@0:8@"<NRMutableStateProtocol>"16@"<NRDiffProtocol>"24
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
Q32@0:8@16Q24
@"NSMutableOrderedSet"
@"NRMutableDeviceCollection"
@"NRSwitchRecordCollection"
v32@0:8:16@24
@"NSDictionary"
@"NRPBDeviceCollectionDiff"
{?="date"b1"index"b1}
Q20@0:8i16
i40@0:8@16@24@?32
B24@0:8@?16
@"NRReadWriteConcurrentQueue"
@"NRSecureDevicePropertyStore"
@44@0:8@16@24@32I40
@"<NRXPCProxyDelegate>"
@"NSUUID"
v24@0:8[32C]16
@"NRPBMutableDevice"
{?="compressed"b1}
@"NSHashTable"
@"NRDeviceDiff"
@44@0:8@16@24@32B40
@"NRRegistry"
@"NSPointerArray"
@"<NSObject><NSCopying>"
@"NRPBMutableDeviceProperty"
@20@0:8i16
i24@0:8@16
@"NRPBDeviceDiff"
{?="changeType"b1}
@"NRPBMutableDeviceCollection"
B40@0:8@16@24Q32
B24@0:8^Q16
{?="eventDate"b1"eventType"b1"presentationLocation"b1}
@"NRDevicePropertyDiff"
@"NRPBDevicePropertyDiff"
