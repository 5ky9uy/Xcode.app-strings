[%@] executeUpdateBlock
[%@] setting state to pending and bailing
[%@] setting state to updating
[%@] calling block
[%@] finished block
[%@] state is pending, will retry
[%@] setting state to idle, 
[PerformanceTesting] Selected origin: %@
No now playing info yet, returning unknown playback state.
Failed to archive error: %@ with error: %@
Failed to unarchive error with error: %@
Failed to get remote object proxy (%@).
Failed to get synchronous remote object proxy (%@).
Short-Circuited media remote command (%u) sent successfully
Short-Circuited media remote command (%u) failed to be sent due to error: (%u), statuses: (%{public}@)
Media remote command (%u) sent successfully
Media remote command (%u) failed to be sent due to error: (%u), statuses: (%{public}@)
%s command request %@ failed with error: %@
%{public}@ Begin observing
%{public}@ End observing
%{public}@ UpdateNowPlayingStateWithCompletion
%{public}@ Will update nowPlayingState...
%{public}@ Updated nowPlayingState: %@
%{public}@ Incremented consecutive MPCPlayerRequestErrorCodeFailedToResolve errors:%lu
%{public}@ Skipping RRC retry due to five consecutive MPCPlayerRequestErrorCodeFailedToResolve errors
%{public}@ _notifyObserverOfUpdatedNowPlayingInfo
%{public}@ _notifyObserverOfUpdatedNowPlayingApplicationBundleID
%{public}@ _notifyObserverOfUpdatedPlaybackState
%{public}@ _notifyObserverOfUpdatedSupportedCommands
%{public}@ _notifyObserverOfUpdatedElapsedTime
%{public}@ _notifyObserversOfUpdatedTimestamp
%{public}@ _notifyObserversOfUpdatedPlaybackQueue
Async block with UTIL priority.
Failed to serialize collection info with error: %@
Failed to parse collection info with error: %@
Failed to parse user info with error: %@
[NMROriginObserver] Waiting for an origin controller to be created for origin: %@
[NMROriginObserver] An origin controller has been created for origin %@. Updating now playing state.
[NMROriginObserver] Timed out waiting for an origin controller to be created for origin: %@
[NMROriginObserver] Adding an origin controller for origin: %@
[NMROriginObserver] Removing the origin controller for origin: %@
[NMROriginObserver] Now playing origins are updated: %@
[NMROriginObserver] Active now playing origin is updated: %@. %@
[NMROriginObserver] No origin controller for origin: %@
No route found for companion origin.
[Origin] Updated origin: %p, originChanged:%d, deviceInfoChanged:%d
[Origin] Updating connection state for route: %@ origin: %@ from: %lu to: %lu
[%@] Begin discovery
[Origin] Ignoring origin with no device info: %@.
[Origin] Ignoring AirPlay active origin: %@.
[Origin] Ignoring TVRemote origin: %@.
[Origin] Updated available origins: %@
[Origin] Trying to set invalid activeOrigin identifier: %@, falling back to: %@
[Origin] Update active origin: %@
[Origin] Fetching MediaRemote available origins and active origin.
[Origin] Failed to fetch any available origins
[Origin] Failed to get active origin from MR.
[%@] End discovery
[%@] Available routes did change: %@
[%@] Will connect to route %@...
[%@] Failed to connect to route %@ with error: %@
[%@] Connected to route %@ successfully!
Encountered unknown protobuf key (%@) while converting to a dictionary; skipping.
[NMROriginObserver] NMRNowPlayingClient is nil
Building delta queue from previous data
Previous data empty, serialize the full queue with all metadata
Location different, include new items in delta
Count different, include new items in delta
Found an item that didn't match up (index %lu), include new items in delta
Found an item missing metadata (index %lu)
Found an item with invalidated metadata (index %lu)
Nothing changed, delta queue is empty
Built delta queue: %@
Got a new queue item that didn't include metadata, and we don't have any cached metadata for this item, identifier: %@
Updated with new data, queue is now: %@
Requesting playback queue information for range: %ld -> %ld
No now playing info yet, returning nil queue representation.
Created queue: %@
Updated with new mediaRemote info, queue is now %@
No need to update content item (identifier: %@), not currently in queue
_PlaybackQueueDidChangeNotification for origin %@
_PlaybackQueueContentItemsDidChange for origin %@
[NMROriginObserver] Notifying nowPlayingInfo for %@
[NMROriginObserver] Notifying playbackState for %@
[NMROriginObserver] Notifying supportedCommands for %@
[NMROriginObserver] Notifying elapsedTime for %@
[NMROriginObserver] Notifying applicationBundleID for %@
[NMROriginObserver] Notifying timestamp for %@
[NMROriginObserver] Notifying playbackQueue for %@
Successfully requested delivery of %@ message (%@).
Failed to request delivery of %@ message (%@) with error "%@".
Received %@ %@ message (ID: %@, %lu byte payload).
Successfully sent message (ID: %@).
Failed to send message (ID: %@) with error "%@".
v8@?0
origin
watch
phone
homepod
B24@?0@"NMROrigin"8@"NSDictionary"16
%@ %@
identifier
metadata
<%@:%p playbackState: %d, playbackRate: %f, title: %@, artist: %@, appDisplayName: %@, appBundleID: %@>
com.apple.
timestamp
originIdentifier
com.apple.NanoMediaRemote
com.apple.NanoMusic
com.apple.Music
com.apple.NanoRadio
com.apple.podcasts
com.apple.NanoBooks
com.apple.iBooks
state
payload
digest
nowPlayingInfo
applicationInfo
supportedCommands
playbackQueue
com.apple.private.nanomediaremote
NMRCompanionNowPlayingApplicationIconDidChangeNotification
idx (%lu) is out of range (%lu)
command
enabled
active
preferredInterval
localizedTitle
localizedShortTitle
minimumRating
maximumRating
supportedPlaybackRate
repeatMode
shuffleMode
presentationStyle
preferredPlaybackRate
currentQueueEndAction
supportedQueueEndAction
Unknown
Play
Pause
TogglePlayPause
Stop
NextTrack
PreviousTrack
AdvanceShuffleMode
AdvanceRepeatMode
BeginFastForward
EndFastForward
BeginRewind
EndRewind
Rewind15Seconds
FastForward15Seconds
Rewind30Seconds
FastForward30Seconds
SkipForward
SkipBackward
ChangePlaybackRate
RateTrack
LikeTrack
DislikeTrack
BookmarkTrack
SeekToPlaybackPosition
ChangeRepeatMode
ChangeShuffleMode
NextChapter
PreviousChapter
NextAlbum
PreviousAlbum
NextPlaylist
PreviousPlaylist
BanTrack
AddTrackToWishList
RemoveTrackFromWishList
NextInContext
PreviousInContext
ResetPlaybackTimeout
SetPlaybackQueue
AddNowPlayingItemToLibrary
CreateRadioStation
AddItemToLibrary
InsertIntoPlaybackQueue
PlayItemInPlaybackQueue
ChangeQueueEndAction
(unknown: %i)
None
Albums
Songs
Clear
Reset
AutoPlay
jpegData
originalDigest
NanoNowPlaying
AutoLaunchMediaApps
com.apple.TVMusic
NanoMusic
RadioInMusic
v24@?0^v8^{__CFError=}16
com.apple.NanoMediaRemote.XPCQueue
v16@?0@"NSError"8
MediaRemote
nano_link_agent
v16@?0@"NSDictionary"8
v20@?0I8^{__CFArray=}12
v20@?0B8@"NSArray"12
supportedCommand
com.apple.NanoMediaRemote.MPRequestResponseController
com.apple.NanoMediaRemote.NowPlayingState
 (%@-%lu)
-[NMROriginMediaPlaybackCoreController sendMediaRemoteCommand:options:userInitiated:completion:]_block_invoke_2
v24@?0@8@"NSError"16
com.apple.Carousel
com.apple.clockface
NanoMusicCore
NanoMusicCore-Oversize
NanoMediaRemote
NanoMediaRemote-Oversize
NanoAudioControl
NanoMusicSync
NanoMusicSync-Oversize
NanoMediaUI
NanoMediaUI-Oversize
NanoMediaAPI
NanoMediaAPI-Oversize
NanoMediaTool
com.apple.nanomusic
@32@?0@"NSDictionary"8@"NSString"16@24
@32@?0@"PBCodable"8@"NSString"16@24
iconData
bundleID
NMRNowPlayingOriginControllerAddedNotification
com.apple.NanoMediaRemote.NowPlayingController
v16@?0@"NMROriginController"8
v16@?0@"NSNotification"8
com.apple.NanoNowPlaying
music
radio
podcasts
ibooks
nowplaying
now-playing
v16@?0@"<NMROriginObserverDelegate>"8
Active now playing origin defaulted to the local origin
Active now playing origin was decided by timestamp
Active now playing origin was decided by isPlaying
com.apple.SessionTrackerApp
guidedWalk
deviceUID
routeUID
playerID
error
title
artist
album
duration
isAutoPlayItem
width
height
origins
NMROriginManagerAvailableOriginsDidChangeNotification
NMROriginManagerActiveOriginDidChangeNotification
NMROriginConnectionStateDidChangeNotification
NMROriginDeviceInfoDidChangeNotification
com.apple.NanoMediaRemote.Origin
AudioAccessory5,
<%@:%p displayName: %@, deviceIdentifier: %@, originIdentifier: %@, type: %lu>
com.apple.NanoMediaRemote.OriginManager
CompanionDiscovery
com.apple.RemoteMediaServices
com.apple.TVRemote
q24@?0@"NMROrigin"8@"NMROrigin"16
v16@?0^{__CFArray=}8
v20@?0C8^v12
ProxiedDiscovery
CMPN
LOCAL
com.apple.NanoMediaRemote.sendCommand.failedWithTimeout
com.apple.NanoMediaRemote.sendCommand.failedToSend
count
@"NSDictionary"8@?0
sourceID
mediaType
externalPlayerCommand
skipInterval
playbackRate
rating
negative
playbackPosition
contextID
trackID
radioStationID
radioStationHash
systemAppPlaybackQueueData
destinationAppDisplayID
sendOptions
requestDefermentToPlaybackQueuePosition
shouldOverrideManuallyCuratedQueue
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
contentItemID
queueEndAction
location
contentItem
elapsedTime
uniqueIdentifier
isExplicitTrack
isMusicApp
radioStationIdentifier
radioStationName
artworkDataDigest
isAlwaysLive
isAdvertisement
storeSubscriptionAdamID
collectionInfoData
artworkURL
storeAdamID
userInfoData
has%@
@8@?0
v32@?0@"NSString"8@"NSString"16^B24
v32@?0@"NSString"8@16^B24
SessionTrackerApp
com.apple.NanoMediaRemote.PlaybackQueue
v16@?0@?<v@?>8
v32@?0@"_NMRContentItem"8Q16^B24
v32@?0@8Q16^B24
Playback queue with range %d -> %lu
  ContentItem identifier=%@, hasMetadata=%d, title=%@
options
knownDigest
nowPlayingInfoDigest
applicationInfoDigest
supportedCommandsDigest
playbackQueueDigest
<%@:%p identifier: %d, displayName: %@>
companionBundleIdentifier
localizedDisplayName
playbackState
watchBundleIdentifier
iconDigest
processID
%@.%@.idsQueue
com.apple.private.alloy.mediaremote
ID: %@, QueueOne: %@, BypassDuet: %@, FireAndForget: %@, ForceLocal: YES, %lu byte payload
an UNHANDLED
NMRIDSMessageTypeUnknown
NMRIDSMessageTypeMediaRemoteCommandRequest
NMRIDSMessageTypeMediaRemoteCommandResponse
NMRIDSMessageTypeMediaRemoteGetState
NMRIDSMessageTypeMediaRemoteSetState
NMRIDSMessageTypeMediaRemoteGetArtwork
NMRIDSMessageTypeMediaRemoteSetArtwork
NMRIDSMessageTypeMediaRemoteGetProxiedOrigins
NMRIDSMessageTypeMediaRemoteSetProxiedOrigins
NMRIDSMessageTypeMediaRemoteUpdateProxiedOrigins
NMRIDSMessageTypeDiscoverAndConnectEndpoints
NMRIDSMessageType(%hu)
errorCode
handlerReturnStatus
NMRAugmentedNowPlayingInfoArtworkDataDigest
displayName
deviceInfoData
request
playerPath
zPLR
zPLR
zPLR
zPLR
zPLR
NMRMediaRemoteUpdater
PerformanceTesting
_NMRContentItem
NSCopying
NMRNowPlayingState
_NMRMediaRemoteGetArtworkMessage
NanoMediaRemote
_NMRMediaRemoteSetStateMessageProfobuf
_NMRCommandInfoProtobuf
_NMRMediaRemoteSetArtworkMessage
NMRPlayerResponseNowPlayingState
NMRPlaybackQueueRequest
NMRMediaRemoteProtobufCodable
NSObject
NMRPlaybackQueueResponse
NMRNowPlayingApplicationInfo
NMRServiceInterface
_NMRClient
_NMRSupportedCommandsProtobuf
NMROriginMediaPlaybackCoreController
MPRequestResponseControllerDelegate
NMROriginObserver
NMROriginCommandHandler
_NMRMediaRemoteSetIconMessage
Validation
NMRNowPlayingController
NMROriginObserverDelegate
_NMRPlaybackQueueResponseProtobuf
_NMRContentItemMetadata
NMRSendCommandResultMessage
_NMRMediaRemoteGetIconMessage
_NMRProxiedOriginsProtobuf
NMROrigin
NMROriginManager
MPAVRoutingControllerDelegate
NMRSendCommandMessage
_NMRCommandOptionsProtobuf
_NMRPlaybackQueue
_NMRNowPlayingInfoProtobuf
NMRAdditions
NMRProtobufSerialization
NMRMediaRemoteSetStateMessage
NMRMediaRemoteSetArtworkMessage
NMRMediaRemoteSetIconMessage
NMRAppLaunchInfo
NMRMediaRemoteGetStateMessage
NMRMediaRemoteGetArtworkMessage
NMRMediaRemoteGetIconMessage
NMRNowPlayingClient
NMRPlaybackQueue
_NMRSendCommandMessageProtobuf
_NMRMediaRemoteGetStateMessageProfobuf
NMROriginController
NMROriginInfo
_NMRNowPlayingApplicationStateProtobuf
NMRIDSMessageCenter
IDSServiceDelegate
_NMRIDSMessageHandler
_NMRSendCommandResultMessageProtobuf
_NMROriginProtobuf
NMRPlaceholderNowPlayingState
_NMRPlaybackQueueRequestProtobuf
init
executeUpdateBlock
initWithQueue:updateBlock:
.cxx_destruct
_updateState
_updateBlock
_queue
objectForKeyedSubscript:
isEqualToString:
localOrigin
companionOrigin
availableOrigins
type
predicateWithBlock:
filteredArrayUsingPredicate:
firstObject
_originFromTestOptions:
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
setIdentifier:
setMetadata:
allocWithZone:
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
hasIdentifier
hasMetadata
readFrom:
writeTo:
copyTo:
identifier
metadata
_identifier
_metadata
TB,R,N
T@"NSString",&,N,V_identifier
T@"_NMRContentItemMetadata",&,N,V_metadata
playbackState
playbackRate
title
artist
applicationDisplayName
applicationBundleIdentifier
album
isExplicitTrack
isAlwaysLive
isAutoPlay
itemPersistentID
storeAdamID
itemCompanionPersistentID
itemAlbumPersistentID
artworkCatalog
radioStationName
radioStationIdentifier
radioStationHash
isAdvertisement
hasNowPlayingInfo
timestamp
duration
elapsedTimeAtLastUpdate
isPlaying
preferredPlaybackRate
applicationIconImageData
isRepeatModeCommandSupported
repeatMode
isShuffleModeCommandSupported
shuffleMode
isQueueEndActionCommandSupported
queueEndAction
isPlaybackRateCommandSupported
isLikeCommandSupported
isLikeCommandEnabled
isLikedActive
localizedLikeTitle
likeCommandPresentationStyle
isBanCommandSupported
isBanCommandEnabled
isBannedActive
localizedBanTitle
banCommandPresentationStyle
isBookmarkCommandSupported
isBookmarkCommandEnabled
isBookmarkedActive
localizedBookmarkTitle
isNextTrackCommandEnabled
isPreviousTrackCommandEnabled
isSkipForwardCommandEnabled
isSkipBackwardCommandEnabled
fastForwardTimeInterval
rewindTimeInterval
hasNowPlayingItem
hasUpNextQueue
date
timeIntervalSinceDate:
isFirstPartyApp
length
longLongValue
hasPrefix:
emptyNowPlayingState
compareWithNowPlayingState:
elapsedTime
isPlayingRadio
identifiers
collectionTitle
isQueueEndActionSupported:
_preferredPlaybackRate
T@"NSDate",R,N
Td,R,N
Tf,R,N
Tf,R,N,V_preferredPlaybackRate
TI,R,N
playing
TB,R,N,GisPlaying
T@"MPIdentifierSet",R,N
T@"NSNumber",R,N
T@"NSString",R,N
explicitTrack
TB,R,N,GisExplicitTrack
T@"MPArtworkCatalog",R,N
advertisement
TB,R,N,GisAdvertisement
alwaysLive
TB,R,N,GisAlwaysLive
autoPlay
TB,R,N,GisAutoPlay
playingRadio
TB,R,N,GisPlayingRadio
firstPartyApp
TB,R,N,GisFirstPartyApp
T@"NSData",R,N
repeatModeCommandSupported
TB,R,N,GisRepeatModeCommandSupported
Ti,R,N
shuffleModeCommandSupported
TB,R,N,GisShuffleModeCommandSupported
queueEndActionCommandSupported
TB,R,N,GisQueueEndActionCommandSupported
playbackRateCommandSupported
TB,R,N,GisPlaybackRateCommandSupported
likeCommandSupported
TB,R,N,GisLikeCommandSupported
likeCommandEnabled
TB,R,N,GisLikeCommandEnabled
likedActive
TB,R,N,GisLikedActive
Tq,R,N
banCommandSupported
TB,R,N,GisBanCommandSupported
banCommandEnabled
TB,R,N,GisBanCommandEnabled
bannedActive
TB,R,N,GisBannedActive
bookmarkCommandSupported
TB,R,N,GisBookmarkCommandSupported
bookmarkCommandEnabled
TB,R,N,GisBookmarkCommandEnabled
bookmarkedActive
TB,R,N,GisBookmarkedActive
nextTrackCommandEnabled
TB,R,N,GisNextTrackCommandEnabled
previousTrackCommandEnabled
TB,R,N,GisPreviousTrackCommandEnabled
skipForwardCommandEnabled
TB,R,N,GisSkipForwardCommandEnabled
skipBackwardCommandEnabled
TB,R,N,GisSkipBackwardCommandEnabled
numberWithDouble:
numberWithInt:
setTimestamp:
setHasTimestamp:
hasTimestamp
setOriginIdentifier:
setHasOriginIdentifier:
hasOriginIdentifier
originIdentifier
_timestamp
_originIdentifier
_has
TB,N
Td,N,V_timestamp
Ti,N,V_originIdentifier
bundleWithIdentifier:
bundleIdentifier
isLocal
allKeys
containsObject:
matchingPlaybackAppBundleIdentifierForOrigin:
nanoMediaRemoteBundle
setPayload:
setDigest:
setNowPlayingInfo:
setApplicationInfo:
setSupportedCommands:
setPlaybackQueue:
setState:
setHasState:
hasState
hasPayload
hasDigest
hasApplicationInfo
hasSupportedCommands
hasPlaybackQueue
state
payload
digest
nowPlayingInfo
applicationInfo
supportedCommands
playbackQueue
_applicationInfo
_digest
_nowPlayingInfo
_payload
_playbackQueue
_state
_supportedCommands
Ti,N,V_state
T@"NSData",&,N,V_payload
T@"NSData",&,N,V_digest
T@"NSData",&,N,V_nowPlayingInfo
T@"NSData",&,N,V_applicationInfo
T@"NSData",&,N,V_supportedCommands
T@"NSData",&,N,V_playbackQueue
dealloc
exceptionWithName:reason:userInfo:
raise
numberWithBool:
numberWithFloat:
arrayWithCapacity:
addObject:
preferredIntervalsCount
clearPreferredIntervals
preferredIntervalAtIndex:
addPreferredInterval:
setLocalizedTitle:
supportedPlaybackRatesCount
clearSupportedPlaybackRates
supportedPlaybackRateAtIndex:
addSupportedPlaybackRate:
setLocalizedShortTitle:
supportedQueueEndActionsCount
clearSupportedQueueEndActions
supportedQueueEndActionAtIndex:
addSupportedQueueEndAction:
command
setCommand:
setHasCommand:
hasCommand
commandAsString:
StringAsCommand:
setEnabled:
setHasEnabled:
hasEnabled
setActive:
setHasActive:
hasActive
preferredIntervals
setPreferredIntervals:count:
hasLocalizedTitle
hasLocalizedShortTitle
setMinimumRating:
setHasMinimumRating:
hasMinimumRating
setMaximumRating:
setHasMaximumRating:
hasMaximumRating
supportedPlaybackRates
setSupportedPlaybackRates:count:
setRepeatMode:
setHasRepeatMode:
hasRepeatMode
repeatModeAsString:
StringAsRepeatMode:
setShuffleMode:
setHasShuffleMode:
hasShuffleMode
shuffleModeAsString:
StringAsShuffleMode:
setPresentationStyle:
setHasPresentationStyle:
hasPresentationStyle
setPreferredPlaybackRate:
setHasPreferredPlaybackRate:
hasPreferredPlaybackRate
currentQueueEndAction
setCurrentQueueEndAction:
setHasCurrentQueueEndAction:
hasCurrentQueueEndAction
currentQueueEndActionAsString:
StringAsCurrentQueueEndAction:
supportedQueueEndActions
setSupportedQueueEndActions:count:
supportedQueueEndActionsAsString:
StringAsSupportedQueueEndActions:
enabled
active
localizedTitle
localizedShortTitle
minimumRating
maximumRating
presentationStyle
_preferredIntervals
_supportedPlaybackRates
_supportedQueueEndActions
_command
_currentQueueEndAction
_localizedShortTitle
_localizedTitle
_maximumRating
_minimumRating
_presentationStyle
_repeatMode
_shuffleMode
_active
_enabled
Ti,N,V_command
TB,N,V_enabled
TB,N,V_active
TQ,R,N
T^d,R,N
T@"NSString",&,N,V_localizedTitle
T@"NSString",&,N,V_localizedShortTitle
Tf,N,V_minimumRating
Tf,N,V_maximumRating
T^f,R,N
Ti,N,V_repeatMode
Ti,N,V_shuffleMode
Ti,N,V_presentationStyle
Tf,N,V_preferredPlaybackRate
Ti,N,V_currentQueueEndAction
T^i,R,N
setJpegData:
setOriginalDigest:
hasJpegData
hasOriginalDigest
jpegData
originalDigest
_jpegData
_originalDigest
T@"NSData",&,N,V_jpegData
T@"NSData",&,N,V_originalDigest
copy
initWithPlayerResponse:
tracklist
playingItem
dateWithTimeIntervalSinceReferenceDate:
playbackRateCommand
playerPath
representedBundleID
playingItemIndexPath
_nowPlayingSong
library
persistentID
numberWithLongLong:
syncID
universalStore
adamID
name
isExplicitSong
predicateWithValue:forProperty:
subscriptionAdamID
setWithObject:
initWithFilterPredicates:
setShouldIncludeNonLibraryEntities:
setEntityLimit:
items
section
sectionAtIndex:
metadataObject
playlist
podcast
radioStation
song
_nowPlayingRadioStation
radio
stationID
stationHash
representedBundleDisplayName
repeatCommand
repeatType
shuffleCommand
shuffleType
actionAtQueueEndCommand
actionAtQueueEnd
supportedActions
numberWithInteger:
count
likeCommand
value
dislikeCommand
wishlistCommand
changeItemCommand
nextItem
previousItem
seekCommand
jumpByInterval:
preferredForwardJumpIntervals
doubleValue
preferredBackwardJumpIntervals
playerResponse
_playerResponse
T@"MPCPlayerResponse",R,N,V_playerResponse
nmr_localApplicationBundleIdentifier
setRequest:
setPlayerPath:
request
initWithPlaybackQueue:error:
initWithData:
data
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithProtobufData:
protobufData
initWithRequest:playerPath:
performWithQueue:completion:
_protobuf
T^v,R,N
archivedDataWithRootObject:requiringSecureCoding:error:
setError:
hasError
classForKeyedUnarchiver
error
unarchivedObjectOfClasses:fromData:error:
invokeCompletion:
T^{__CFError=},R,N
companionBundleIdentifier
setCompanionBundleIdentifier:
watchBundleIdentifier
setWatchBundleIdentifier:
localizedDisplayName
setLocalizedDisplayName:
setPlaybackState:
iconDigest
setIconDigest:
setProcessID:
hasProcessID
processID
_getNextPlaceholderProcessID
_processID
T@"NSString",C,N
TI,N
T@"NSData",C,N
Ti,N
initWithMachServiceName:options:
refreshMediaRemoteStateIfNecessary
sendMediaRemoteCommand:withCommandOptions:toOriginWithUniqueIdentifier:commandResultHandler:
prewarmCompanionSystemMusicApp
discoverAndConnectEndpoints
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
resume
_proxyWithErrorHandler:
dictionaryWithObjects:forKeys:count:
localizedDescription
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
sharedClient
_synchronousProxyWithErrorHandler:
_serverConnection
_serverConnectionQueue
mutableCopy
setObject:forKeyedSubscript:
numberWithUnsignedInt:
unsignedIntValue
countByEnumeratingWithState:objects:count:
unsignedIntegerValue
dictionaryWithCapacity:
removeAllObjects
objectAtIndex:
initWithCapacity:
addSupportedCommand:
supportedCommandsCount
clearSupportedCommands
supportedCommandAtIndex:
supportedCommandType
T@"NSMutableArray",&,N,V_supportedCommands
route
_transientOriginWithEndpointRoute:
stringByAppendingFormat:
response
nmc_commandRequestWithMediaRemoteCommand:options:
performRequest:options:completion:
_requestResponseController
beginAutomaticResponseLoading
endAutomaticResponseLoading
performWithCompletion:
_updateIsEnforcingApplicationFilterWithNowPlayingState:
_notifyObserverOfUpdatedNowPlayingInfo
_notifyObserverOfUpdatedNowPlayingApplicationBundleID
_notifyObserverOfUpdatedPlaybackState
_notifyObserverOfUpdatedSupportedCommands
_notifyObserverOfUpdatedElapsedTime
_notifyObserversOfUpdatedTimestamp
_notifyObserversOfUpdatedPlaybackQueue
_asyncToSerialQueueCheckingProcessWithBlock:
arrayWithObjects:count:
userInfo
arrayByAddingObjectsFromArray:
domain
code
originObserver:didUpdateNowPlayingInfoForOrigin:
originObserver:didUpdateNowPlayingApplicationBundleIdentifierForOrigin:
originObserver:didUpdatePlaybackStateForOrigin:
originObserver:didUpdateSupportedCommandsForOrigin:
originObserver:didUpdateElapsedTimeForOrigin:
originObserver:didUpdateTimestampForOrigin:
originObserver:didUpdatePlaybackQueueForOrigin:
propertySetWithProperties:
initWithProperties:relationships:
propertySetByCombiningWithPropertySet:
requiredLibraryAddStatusObservationProperties
setLabel:
setQualityOfService:
setPlayingItemProperties:
setQueueSectionProperties:
setDelegate:
mainBundle
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
beginObserving
endObserving
updateNowPlayingStateWithCompletion:
origin
nowPlayingState
delegate
shouldObservePlaybackQueue
setShouldObservePlaybackQueue:
shouldObserveArtwork
setShouldObserveArtwork:
shouldObserveLibraryAddStatus
setShouldObserveLibraryAddStatus:
preparePlayerRequestForNewPlaybackIntent
T@"NMROrigin",R,N
T@"NMRNowPlayingState",R,N
T@"NMRPlaybackQueue",R,N
T@"<NMROriginObserverDelegate>",W,N
sendMediaRemoteCommand:options:userInitiated:completion:
initWithPlayerPath:options:
_serialQueue
_accessQueue
_isEnforcingApplicationFilter
_playerPath
_filteringOptions
_nowPlayingState
_numberOfConsecutiveFailuresToResolve
_shouldObserveLibraryAddStatus
_delegate
_origin
T@"NMROrigin",R,N,V_origin
T@"NMRPlaybackQueue",R,N,VplaybackQueue
T@"<NMROriginObserverDelegate>",W,N,V_delegate
TB,N,VshouldObservePlaybackQueue
TB,N,VshouldObserveArtwork
TB,N,V_shouldObserveLibraryAddStatus
boolValue
floatValue
intValue
protobufFromDictionary:
dictionaryFromProtobuf:
externalPlayerCommand
negative
mediaType
playbackPosition
skipInterval
sourceID
radioStationID
systemAppPlaybackQueueData
shouldOverrideManuallyCuratedQueue
trackID
contentItemID
destinationAppDisplayID
sendOptions
requestDefermentToPlaybackQueuePosition
rating
contextID
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
setDictionaryKeyToProtobufKeyMapping:
setProtobufClass:
setDictionaryValueToProtobufValueTransformer:
setProtobufValueToDictionaryValueTransformer:
setIconData:
setBundleID:
hasIconData
hasBundleID
iconData
bundleID
_bundleID
_iconData
T@"NSData",&,N,V_iconData
T@"NSString",&,N,V_bundleID
protobufDataFromDictionary:
dictionaryFromProtobufData:
uniqueIdentifier
collectionInfoData
userInfoData
artworkURL
isMusicApp
storeSubscriptionAdamID
artworkDataDigest
timeIntervalSinceReferenceDate
dataWithJSONObject:options:error:
JSONObjectWithData:options:error:
propertyListWithData:options:format:error:
unsignedLongLongValue
validateUniqueIdentifier:error:
weakObjectsHashTable
weakToStrongObjectsMapTable
_setupOriginControllers
defaultCenter
removeObserver:
_nowPlayingStateForOrigin:
_originControllerForOrigin:
_updateNowPlayingStateForOrigin:completion:
addObserverForName:object:queue:usingBlock:
keyEnumerator
allObjects
_evaluateNowPlayingOrigins
nowPlayingStateForOrigin:
isCompanion
launchBundleIdentifierForOrigin:
setScheme:
setHost:
stringValue
setPath:
removeObject:
objectEnumerator
objectForKey:
setOriginObserver:
setOriginCommandHandler:
_enumerateObserverDelegates:
_handleAvailableOriginsDidChangeNotification:
sharedManager
addObserver:selector:name:object:
_addOriginControllerWithOrigin:
setWithArray:
minusSet:
_shouldObserveOrigin:
_removeOriginControllerWithOrigin:
setWithObjects:
initWithOrigin:options:
postNotificationName:object:
removeObjectForKey:
_evaluateNowPlayingOriginsFromOrigins:
nowPlayingOriginsDidUpdateForController:
_evaluateActiveNowPlayingOriginForOrderedOrigins:
activeNowPlayingOriginDidUpdateForController:
distantPast
compare:
sendMediaRemoteCommand:toOrigin:options:launchApp:completion:
sendMediaRemoteCommand:options:userInitiated:toOrigin:completion:
initWithOptions:
activeNowPlayingOrigin
nowPlayingOrigins
playbackQueueForOrigin:
updateNowPlayingStateForOrigin:completion:
updateNowPlayingStateForAllOriginsWithCompletion:
launchNowPlayingURLForOrigin:
addObserverDelegate:
removeObserverDelegate:
beginObservingOrigins
endObservingOrigins
setOriginObserver:forOrigin:
setOriginCommandHandler:forOrigin:
sendMediaRemoteCommand:toOrigin:options:launchApp:
filteringOptions
_registeredObserversCount
_originControllers
_observerDelegates
_activeNowPlayingOrigin
_activeNowPlayingOriginExplanationLog
_nowPlayingOrigins
_shouldObserveArtwork
_shouldObservePlaybackQueue
_observerLock
T@"<NMRNowPlayingControllerDelegate>",W,N
T@"NSArray",R,N
TQ,R,N,V_filteringOptions
nmr_isSystemWorkoutPath
playerID
isSystemMusicPath
nmr_isSystemPodcastsPath
deviceUID
designatedGroupLeaderRouteUID
componentsWithURL:resolvingAgainstBaseURL:
path
lastPathComponent
integerValue
originWithUniqueIdentifier:
systemRoute
scheme
pathWithDeviceUID:bundleID:pid:playerID:
initWithDataSource:name:
setFetchAvailableRoutesSynchronously:
availableRoutes
queryItems
nmr_isSystemRadioPath
nmr_isSystemBooksPath
nmr_isSystemWorkoutGuidedWalkPath
nmr_isIdenticalToPath:
nmr_pathWithNowPlayingURL:
nmr_systemRadioPath
TB,R,N,Gnmr_isSystemRadioPath
nmr_systemPodcastsPath
TB,R,N,Gnmr_isSystemPodcastsPath
nmr_systemBooksPath
TB,R,N,Gnmr_isSystemBooksPath
nmr_systemWorkoutPath
TB,R,N,Gnmr_isSystemWorkoutPath
nmr_systemWorkoutGuidedWalkPath
TB,R,N,Gnmr_isSystemWorkoutGuidedWalkPath
_error
T@"NSData",&,N,V_error
setTitle:
setArtist:
setAlbum:
hasTitle
hasArtist
hasAlbum
setDuration:
setHasDuration:
hasDuration
setIsAutoPlayItem:
setHasIsAutoPlayItem:
hasIsAutoPlayItem
isAutoPlayItem
_duration
_album
_artist
_title
_isAutoPlayItem
T@"NSString",&,N,V_title
T@"NSString",&,N,V_artist
T@"NSString",&,N,V_album
Td,N,V_duration
TB,N,V_isAutoPlayItem
_initWithErrorCode:handlerReturnStatuses:originIdentifier:
setErrorCode:
addHandlerReturnStatus:
errorCode
array
handlerReturnStatusCount
handlerReturnStatusAtIndex:
messageWithErrorCode:handlerReturnStatuses:originIdentifier:
handlerReturnStatuses
serializationDate
setWidth:
setHasWidth:
hasWidth
setHeight:
setHasHeight:
hasHeight
width
height
_height
_width
Td,N,V_width
Td,N,V_height
addOrigins:
originsCount
clearOrigins
originsAtIndex:
originsType
origins
setOrigins:
_origins
T@"NSMutableArray",&,N,V_origins
_handleRouteConnectionDidConnectNotification:
_handleRouteConnectionDidInvalidateNotification:
_handleExternalDeviceConnectionStateDidChangeNotification:
_updateConnectionState
isDeviceRoute
isAppleTVRoute
isB520Route
isStereoPair
isHomePodRoute
modelID
designatedGroupLeaderName
routeName
routeNames
postNotificationName:object:userInfo:
displayName
deviceIdentifier
pathWithRoute:bundleID:playerID:
pathWithCustomOrigin:bundleID:playerID:
object
connection
externalDevice
initWithRoute:
isInvalidated
isConnected
initWithOrigin:deviceInfo:
mediaRemoteOrigin
connectionState
logicalDeviceCount
updateRoute:
updateOrigin:deviceInfo:
playerPathWithBundleID:playerID:
deviceInfo
_route
_mediaRemoteOrigin
_connectionState
_deviceInfo
_cachedDisplayName
T@"MPAVRoute",R,N
T^v,R,N,V_deviceInfo
_handleMediaRemoteActiveOriginDidChangeNotification:
_handleMediaRemoteAvailableOriginsDidChangeNotification:
_handleDeviceInfoDidChangeNotification:
_updateMediaRemoteLocalOrigin
_updateMediaRemoteAvailableAndActiveOrigins
setDiscoveryMode:
isPhoneRoute
routeUID
originWithDeviceIdentifier:
orderedSet
sortUsingComparator:
isEqualToNumber:
_onQueue_updateAvailableOrigins
_onQueue_updateActiveOriginIdentifier:
isConnecting
connectWithCompletion:
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
T@"NMROriginManager",R
activeOrigin
originForPlayerPath:
_beginProxiedEndpointDiscovery
_endProxiedEndpointDiscovery
_availableOrigins
_availableOriginsByDeviceIdentifier
_availableOriginsByOriginIdentifier
_activeOriginIdentifier
_localOriginIdentifier
_availableOriginRefs
_companionRoutingController
_proxiedEndpointRoutingController
initWithCommand:bundleID:options:originIdentifier:
setOptions:
options
messageWithCommand:bundleID:options:originIdentifier:
T@"NSDictionary",R,N
numberWithUnsignedLongLong:
setSourceID:
setMediaType:
setRadioStationHash:
setSystemAppPlaybackQueueData:
setDestinationAppDisplayID:
setContextID:
setStationURL:
setContentItemID:
hasSourceID
hasMediaType
setExternalPlayerCommand:
setHasExternalPlayerCommand:
hasExternalPlayerCommand
setSkipInterval:
setHasSkipInterval:
hasSkipInterval
setPlaybackRate:
setHasPlaybackRate:
hasPlaybackRate
setRating:
setHasRating:
hasRating
setNegative:
setHasNegative:
hasNegative
setPlaybackPosition:
setHasPlaybackPosition:
hasPlaybackPosition
hasContextID
setTrackID:
setHasTrackID:
hasTrackID
setRadioStationID:
setHasRadioStationID:
hasRadioStationID
hasRadioStationHash
hasSystemAppPlaybackQueueData
hasDestinationAppDisplayID
setSendOptions:
setHasSendOptions:
hasSendOptions
setRequestDefermentToPlaybackQueuePosition:
setHasRequestDefermentToPlaybackQueuePosition:
hasRequestDefermentToPlaybackQueuePosition
setShouldOverrideManuallyCuratedQueue:
setHasShouldOverrideManuallyCuratedQueue:
hasShouldOverrideManuallyCuratedQueue
hasStationURL
setShouldBeginRadioPlayback:
setHasShouldBeginRadioPlayback:
hasShouldBeginRadioPlayback
setPlaybackQueueInsertionPosition:
setHasPlaybackQueueInsertionPosition:
hasPlaybackQueueInsertionPosition
hasContentItemID
setQueueEndAction:
setHasQueueEndAction:
hasQueueEndAction
queueEndActionAsString:
StringAsQueueEndAction:
_playbackPosition
_radioStationID
_trackID
_contentItemID
_contextID
_destinationAppDisplayID
_mediaType
_playbackQueueInsertionPosition
_playbackRate
_queueEndAction
_radioStationHash
_rating
_sendOptions
_skipInterval
_sourceID
_stationURL
_systemAppPlaybackQueueData
_externalPlayerCommand
_negative
_requestDefermentToPlaybackQueuePosition
_shouldBeginRadioPlayback
_shouldOverrideManuallyCuratedQueue
T@"NSString",&,N,V_sourceID
T@"NSString",&,N,V_mediaType
TB,N,V_externalPlayerCommand
Tf,N,V_skipInterval
Tf,N,V_playbackRate
Tf,N,V_rating
TB,N,V_negative
Td,N,V_playbackPosition
T@"NSString",&,N,V_contextID
TQ,N,V_trackID
Tq,N,V_radioStationID
T@"NSString",&,N,V_radioStationHash
T@"NSData",&,N,V_systemAppPlaybackQueueData
T@"NSString",&,N,V_destinationAppDisplayID
TI,N,V_sendOptions
TB,N,V_requestDefermentToPlaybackQueuePosition
TB,N,V_shouldOverrideManuallyCuratedQueue
T@"NSString",&,N,V_stationURL
TB,N,V_shouldBeginRadioPlayback
Ti,N,V_playbackQueueInsertionPosition
T@"NSString",&,N,V_contentItemID
Ti,N,V_queueEndAction
addContentItem:
contentItemsCount
clearContentItems
contentItemAtIndex:
contentItemType
setLocation:
setHasLocation:
hasLocation
location
contentItems
setContentItems:
_contentItems
_location
Ti,N,V_location
T@"NSMutableArray",&,N,V_contentItems
setRadioStationName:
setArtworkDataDigest:
setCollectionInfoData:
setArtworkURL:
setUserInfoData:
setElapsedTime:
setHasElapsedTime:
hasElapsedTime
setUniqueIdentifier:
setHasUniqueIdentifier:
hasUniqueIdentifier
setIsExplicitTrack:
setHasIsExplicitTrack:
hasIsExplicitTrack
setIsMusicApp:
setHasIsMusicApp:
hasIsMusicApp
setRadioStationIdentifier:
setHasRadioStationIdentifier:
hasRadioStationIdentifier
hasRadioStationName
hasArtworkDataDigest
setIsAlwaysLive:
setHasIsAlwaysLive:
hasIsAlwaysLive
setIsAdvertisement:
setHasIsAdvertisement:
hasIsAdvertisement
setStoreSubscriptionAdamID:
setHasStoreSubscriptionAdamID:
hasStoreSubscriptionAdamID
hasCollectionInfoData
hasArtworkURL
setStoreAdamID:
setHasStoreAdamID:
hasStoreAdamID
hasUserInfoData
_elapsedTime
_radioStationIdentifier
_storeAdamID
_storeSubscriptionAdamID
_uniqueIdentifier
_artworkDataDigest
_artworkURL
_collectionInfoData
_radioStationName
_userInfoData
_isAdvertisement
_isAlwaysLive
_isExplicitTrack
_isMusicApp
Td,N,V_elapsedTime
TQ,N,V_uniqueIdentifier
TB,N,V_isExplicitTrack
TB,N,V_isMusicApp
Tq,N,V_radioStationIdentifier
T@"NSString",&,N,V_radioStationName
T@"NSData",&,N,V_artworkDataDigest
TB,N,V_isAlwaysLive
TB,N,V_isAdvertisement
Tq,N,V_storeSubscriptionAdamID
T@"NSData",&,N,V_collectionInfoData
T@"NSString",&,N,V_artworkURL
Tq,N,V_storeAdamID
T@"NSData",&,N,V_userInfoData
substringToIndex:
uppercaseString
stringByReplacingCharactersInRange:withString:
valueForKey:
methodForSelector:
nmr_valueForPotentiallyUndefinedKey:
enumerateKeysAndObjectsUsingBlock:
validateValue:forKey:error:
setValue:forKey:
dictionaryKeyToProtobufKeyMapping
protobufClass
dictionaryValueToProtobufValueTransformer
protobufValueToDictionaryValueTransformer
_protobufKeyToDictionaryKeyMapping
_dictionaryKeyToProtobufKeyMapping
_protobufClass
_dictionaryValueToProtobufValueTransformer
_protobufValueToDictionaryValueTransformer
T@"NSDictionary",C,N,V_dictionaryKeyToProtobufKeyMapping
T#,&,N,V_protobufClass
T@?,C,N,V_dictionaryValueToProtobufValueTransformer
T@?,C,N,V_protobufValueToDictionaryValueTransformer
_initWithNowPlayingInfo:applicationInfo:supportedCommands:playbackQueue:originIdentifier:
messageWithNowPlayingInfo:applicationInfo:supportedCommands:playbackQueue:originIdentifier:
nowPlayingInfoData
applicationInfoData
supportedCommandsData
playbackQueueData
_initWithJPEGArtwork:originalDigest:originIdentifier:
messageWithJPEGArtwork:originalDigest:originIdentifier:
jpegArtwork
_initWithIcon:originalDigest:bundleID:originIdentifier:
messageWithIcon:originalDigest:bundleID:originIdentifier:
icon
queryItemWithName:value:
setQueryItems:
initWithBundleID:URL:
nmr_preferredNowPlayingAppLaunchInfo
_URL
T@"NSString",R,N,V_bundleID
T@"NSURL",R,N,V_URL
_initWithNowPlayingInfoDigest:applicationInfoDigest:supportedCommandsDigest:playbackQueueDigest:originIdentifier:
setNowPlayingInfoDigest:
setApplicationInfoDigest:
setSupportedCommandsDigest:
setPlaybackQueueDigest:
nowPlayingInfoDigest
applicationInfoDigest
supportedCommandsDigest
playbackQueueDigest
messageWithNowPlayingInfoDigest:applicationInfoDigest:supportedCommandsDigest:playbackQueueDigest:originIdentifier:
_initWithOriginIdentifier:
messageWithOriginIdentifier:
_initWithIconWidth:height:bundleID:originIdentifier:
messageWithIconWidth:height:bundleID:originIdentifier:
mediaRemoteNowPlayingClient
initWithMRNowPlayingClient:
_mediaRemoteNowPlayingClient
_bundleIdentifier
_displayName
T^v,R,N,V_mediaRemoteNowPlayingClient
T@"NSString",R,N,V_bundleIdentifier
T@"NSString",R,N,V_displayName
_refreshCurrentPlaybackQueueFromMediaRemoteWithCompletion:
_mediaRemotePlaybackQueueWithRange:includeMetadata:
objectAtIndexedSubscript:
enumerateObjectsUsingBlock:
_metadataForItemWithIdentifier:
playbackQueueDidChange:
playbackQueue:contentItemsDidChange:
observedRange
_contentItemIdentifiers
_updateWithMediaRemoteQueue:
_itemWithIdentifier:
_needsMetadataForMediaRemoteItem:
beginObservingMediaRemotePlaybackQueueForOrigin:
fullPlaybackQueueData
copyFullMediaRemotePlaybackQueueIncludingMetadata:
copyMediaRemotePlaybackQueueWithRange:includeMetadata:
deltaPlaybackQueueDataFromPreviousData:invalidatedMetadataIdentifiers:
updateWithData:
_updateMetadataWithMediaRemoteItems:
_rangeOfItemsNeedingMetadataForMediaRemoteQueue:
_needsUpdateForMediaRemoteQueue:
setObservedRange:
setOrigin:
_upNextPlaybackQueue
_observingMediaRemote
_playbackQueueUpdater
_observedRange
T@"NMROrigin",&,N,V_origin
T@"<NMRPlaybackQueueDelegate>",W,N,V_delegate
T{?=qq},N,V_observedRange
appendString:
hasOptions
_options
T@"_NMRCommandOptionsProtobuf",&,N,V_options
setKnownDigest:
hasKnownDigest
hasNowPlayingInfoDigest
hasApplicationInfoDigest
hasSupportedCommandsDigest
hasPlaybackQueueDigest
knownDigest
_applicationInfoDigest
_knownDigest
_nowPlayingInfoDigest
_playbackQueueDigest
_supportedCommandsDigest
T@"NSData",&,N,V_knownDigest
T@"NSData",&,N,V_nowPlayingInfoDigest
T@"NSData",&,N,V_applicationInfoDigest
T@"NSData",&,N,V_supportedCommandsDigest
T@"NSData",&,N,V_playbackQueueDigest
bytes
dataWithBytes:length:
isEqualToData:
_notifyObserverOfUpdatedNowPlayingApplicationBundleIdentifier
_notifyObserverOfUpdatedTimestamp
_notifyObserverOfUpdatedPlaybackQueue
originCommandHandler
originObserver
_isObserving
_hasPendingNowPlayingInfoChange
_hasPendingElapsedTimeChange
_hasPendingPlaybackStateChange
_hasPendingSupportedCommandsChange
_hasPendingNowPlayingApplicationBundleIdentifierChange
_hasPendingTimestampChange
_hasPendingPlaybackQueueChange
_originObserver
_originCommandHandler
T@"<NMROriginObserver>",&,N,V_originObserver
T@"<NMROriginCommandHandler>",&,N,V_originCommandHandler
TB,N,V_shouldObservePlaybackQueue
TB,N,V_shouldObserveArtwork
setDisplayName:
deviceInfoData
setDeviceInfoData:
initWithProtobuf:
protobuf
T@"NSString",&,N
T@"NSData",&,N
hasCompanionBundleIdentifier
hasLocalizedDisplayName
setHasPlaybackState:
hasPlaybackState
hasWatchBundleIdentifier
hasIconDigest
setHasProcessID:
_companionBundleIdentifier
_iconDigest
_localizedDisplayName
_playbackState
_watchBundleIdentifier
T@"NSString",&,N,V_companionBundleIdentifier
T@"NSString",&,N,V_localizedDisplayName
TI,N,V_playbackState
T@"NSString",&,N,V_watchBundleIdentifier
T@"NSData",&,N,V_iconDigest
Ti,N,V_processID
setTarget:
setAction:
setMessageType:
numberWithUnsignedShort:
UTF8String
initWithService:
addDelegate:queue:
_sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:isResponse:additionalOptions:resultingMessageIdentifier:error:
context
outgoingResponseIdentifier
initWithProtobufData:type:isResponse:
sendProtobuf:toDestinations:priority:options:identifier:error:
target
action
messageCenter:messageWithIdentifier:didSendWithSuccess:error:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
setMessageHandlerTarget:action:forIncomingMessagesOfType:
startHandlingMessages
sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:expectReply:queueOneIdentifier:resultingMessageIdentifier:error:
sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:inReplyTo:resultingMessageIdentifier:error:
_idsQueue
_idsService
_messageHandlers
T@"<NMRIDSMessageCenterDelegate>",W,N,V_delegate
messageType
_messageType
_target
_action
TS,N,V_messageType
T@,W,N,V_target
T:,N,V_action
clearHandlerReturnStatus
setHasErrorCode:
hasErrorCode
handlerReturnStatus
setHandlerReturnStatus:count:
_handlerReturnStatus
_errorCode
TI,N,V_errorCode
T^I,R,N
hasDisplayName
hasDeviceInfoData
_deviceInfoData
Ti,N,V_uniqueIdentifier
T@"NSString",&,N,V_displayName
T@"NSData",&,N,V_deviceInfoData
setItemPersistentID:
setArtworkCatalog:
setCollectionTitle:
setExplicitTrack:
setAlwaysLive:
setPlaybackRateCommandSupported:
setNextTrackCommandEnabled:
setPreviousTrackCommandEnabled:
setSkipForwardCommandEnabled:
setSkipBackwardCommandEnabled:
setFastForwardTimeInterval:
setRewindTimeInterval:
T@"NSNumber",C,N,VitemPersistentID
T@"NSString",C,N,Vtitle
T@"NSString",C,N,Vartist
T@"NSString",C,N,Valbum
T@"MPArtworkCatalog",&,N,VartworkCatalog
T@"NSString",C,N,VcollectionTitle
Tf,N,VplaybackRate
Tf,N,VpreferredPlaybackRate
TI,N,VplaybackState
TB,N,GisExplicitTrack,VexplicitTrack
T@"NSString",&,N,VradioStationName
TB,N,GisAlwaysLive,ValwaysLive
TB,N,GisPlaybackRateCommandSupported,VplaybackRateCommandSupported
TB,N,GisNextTrackCommandEnabled,VnextTrackCommandEnabled
TB,N,GisPreviousTrackCommandEnabled,VpreviousTrackCommandEnabled
TB,N,GisSkipForwardCommandEnabled,VskipForwardCommandEnabled
TB,N,GisSkipBackwardCommandEnabled,VskipBackwardCommandEnabled
Td,N,VfastForwardTimeInterval
Td,N,VrewindTimeInterval
hasRequest
hasPlayerPath
_request
T@"NSData",&,N,V_request
T@"NSData",&,N,V_playerPath
@32@0:8@16@?24
v16@0:8
@"NSObject<OS_dispatch_queue>"
@24@0:8@16
@24@0:8^{_NSZone=}16
B16@0:8
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
@"NSString"
@"_NMRContentItemMetadata"
Q24@0:8@16
d16@0:8
f16@0:8
I16@0:8
i16@0:8
B20@0:8i16
q16@0:8
v24@0:8d16
v20@0:8B16
v20@0:8i16
{?="timestamp"b1"originIdentifier"b1}
@"NSData"
{?="timestamp"b1"originIdentifier"b1"state"b1}
@20@0:8i16
i24@0:8@16
^d16@0:8
d24@0:8Q16
v32@0:8^d16Q24
v20@0:8f16
^f16@0:8
f24@0:8Q16
v32@0:8^f16Q24
^i16@0:8
i24@0:8Q16
v32@0:8^i16Q24
{?="list"^d"count"Q"size"Q}
{?="list"^f"count"Q"size"Q}
{?="list"^i"count"Q"size"Q}
{?="command"b1"currentQueueEndAction"b1"maximumRating"b1"minimumRating"b1"preferredPlaybackRate"b1"presentationStyle"b1"repeatMode"b1"shuffleMode"b1"active"b1"enabled"b1}
@"MPCPlayerResponse"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@"NSData"16
@"NSData"16@0:8
@32@0:8^v16^v24
^v16@0:8
v32@0:8@16@?24
@"_NMRPlaybackQueueRequestProtobuf"
@32@0:8^v16^{__CFError=}24
^{__CFError=}16@0:8
v24@0:8@?16
@"_NMRPlaybackQueueResponseProtobuf"
v20@0:8I16
@"_NMRNowPlayingApplicationStateProtobuf"
v40@0:8I16@20i28@?32
v40@0:8I16@"NSDictionary"20i28@?<v@?@"NSDictionary">32
@24@0:8@?16
@"NSXPCConnection"
@24@0:8Q16
@"NSMutableArray"
B32@0:8@16@24
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
v24@0:8@?<v@?>16
@"NMROrigin"16@0:8
@"NMRNowPlayingState"16@0:8
@"NMRPlaybackQueue"16@0:8
@"<NMROriginObserverDelegate>"16@0:8
v24@0:8@"<NMROriginObserverDelegate>"16
v40@0:8I16@20B28@?32
v40@0:8I16@"NSDictionary"20B28@?<v@?@"NSError">32
@32@0:8@16Q24
@"MPCPlayerPath"
@"MPRequestResponseController"
@"NMRPlayerResponseNowPlayingState"
@"<NMROriginObserverDelegate>"
@"NMROrigin"
@"NMRPlaybackQueue"
B32@0:8^@16^@24
v32@0:8@16@24
v32@0:8@16@"NMROrigin"24
v48@0:8I16@20B28@32@?40
v40@0:8I16@20@28B36
v48@0:8I16@20@28B36@?40
@"NSMapTable"
@"NSHashTable"
@"NSArray"
@"<NMRNowPlayingControllerDelegate>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{?="duration"b1"isAutoPlayItem"b1}
@36@0:8I16@20@28
@"_NMRSendCommandResultMessageProtobuf"
{?="height"b1"timestamp"b1"width"b1"originIdentifier"b1}
v32@0:8^v16^v24
@32@0:8@16@24
@"MPAVRoute"
v64@0:8@16@24q32@40@48@?56
v28@0:8@16B24
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
@"NSOrderedSet"
@"NSDictionary"
@"NSNumber"
^{__CFArray=}
@"MPAVRoutingController"
@44@0:8I16@20@28@36
@"_NMRSendCommandMessageProtobuf"
v24@0:8Q16
v24@0:8q16
{?="playbackPosition"b1"radioStationID"b1"trackID"b1"playbackQueueInsertionPosition"b1"playbackRate"b1"queueEndAction"b1"rating"b1"repeatMode"b1"sendOptions"b1"shuffleMode"b1"skipInterval"b1"externalPlayerCommand"b1"negative"b1"requestDefermentToPlaybackQueuePosition"b1"shouldBeginRadioPlayback"b1"shouldOverrideManuallyCuratedQueue"b1}
{?="location"b1}
{?="duration"b1"elapsedTime"b1"radioStationIdentifier"b1"storeAdamID"b1"storeSubscriptionAdamID"b1"timestamp"b1"uniqueIdentifier"b1"playbackRate"b1"preferredPlaybackRate"b1"repeatMode"b1"shuffleMode"b1"isAdvertisement"b1"isAlwaysLive"b1"isExplicitTrack"b1"isMusicApp"b1}
v24@0:8#16
@?16@0:8
@56@0:8@16@24@32@40@48
@"_NMRMediaRemoteSetStateMessageProfobuf"
@40@0:8@16@24@32
@"_NMRMediaRemoteSetArtworkMessage"
@48@0:8@16@24@32@40
@"_NMRMediaRemoteSetIconMessage"
@"NSURL"
@"_NMRMediaRemoteGetStateMessageProfobuf"
@"_NMRMediaRemoteGetArtworkMessage"
@48@0:8d16d24@32@40
@"_NMRMediaRemoteGetIconMessage"
@24@0:8^v16
^v20@0:8B16
^v36@0:8{?=qq}16B32
v24@0:8^v16
{?=qq}24@0:8^v16
B24@0:8^v16
{?=qq}16@0:8
v32@0:8{?=qq}16
@"_NMRPlaybackQueue"
@"NMRMediaRemoteUpdater"
@"<NMRPlaybackQueueDelegate>"
{?="location"q"length"q}
@"_NMRCommandOptionsProtobuf"
{?="timestamp"b1"command"b1"originIdentifier"b1}
@"<NMROriginObserver>"
@"<NMROriginCommandHandler>"
@"_NMROriginProtobuf"
{?="playbackState"b1"processID"b1}
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v36@0:8@16:24S32
B80@0:8@16S24Q28d36B44B48B52@56^@64^@72
B76@0:8@16S24Q28d36B44B48@52^@60^@68
@"IDSService"
@"NSMutableDictionary"
@"<NMRIDSMessageCenterDelegate>"
S16@0:8
v20@0:8S16
:16@0:8
v24@0:8:16
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
{?="list"^I"count"Q"size"Q}
{?="timestamp"b1"errorCode"b1"originIdentifier"b1}
{?="uniqueIdentifier"b1}
@"MPArtworkCatalog"
!#%'Q)+-/13579;
2468:<>@BDFFFFFHFFFFJLFFNFPRFFTFFFV
$&(*,.02468:<>@BDF
JLNPRTVXZ
[%@] executeUpdateBlock
[%@] setting state to pending and bailing
[%@] setting state to updating
[%@] calling block
[%@] finished block
[%@] state is pending, will retry
[%@] setting state to idle, 
[PerformanceTesting] Selected origin: %@
No now playing info yet, returning unknown playback state.
Failed to archive error: %@ with error: %@
Failed to unarchive error with error: %@
Failed to get remote object proxy (%@).
Failed to get synchronous remote object proxy (%@).
Short-Circuited media remote command (%u) sent successfully
Short-Circuited media remote command (%u) failed to be sent due to error: (%u), statuses: (%{public}@)
Media remote command (%u) sent successfully
Media remote command (%u) failed to be sent due to error: (%u), statuses: (%{public}@)
%s command request %@ failed with error: %@
%{public}@ Begin observing
%{public}@ End observing
%{public}@ UpdateNowPlayingStateWithCompletion
%{public}@ Will update nowPlayingState...
%{public}@ Updated nowPlayingState: %@
%{public}@ Incremented consecutive MPCPlayerRequestErrorCodeFailedToResolve errors:%lu
%{public}@ Skipping RRC retry due to five consecutive MPCPlayerRequestErrorCodeFailedToResolve errors
%{public}@ _notifyObserverOfUpdatedNowPlayingInfo
%{public}@ _notifyObserverOfUpdatedNowPlayingApplicationBundleID
%{public}@ _notifyObserverOfUpdatedPlaybackState
%{public}@ _notifyObserverOfUpdatedSupportedCommands
%{public}@ _notifyObserverOfUpdatedElapsedTime
%{public}@ _notifyObserversOfUpdatedTimestamp
%{public}@ _notifyObserversOfUpdatedPlaybackQueue
Async block with UTIL priority.
Failed to serialize collection info with error: %@
Failed to parse collection info with error: %@
Failed to parse user info with error: %@
[NMROriginObserver] Waiting for an origin controller to be created for origin: %@
[NMROriginObserver] An origin controller has been created for origin %@. Updating now playing state.
[NMROriginObserver] Timed out waiting for an origin controller to be created for origin: %@
[NMROriginObserver] Adding an origin controller for origin: %@
[NMROriginObserver] Removing the origin controller for origin: %@
[NMROriginObserver] Now playing origins are updated: %@
[NMROriginObserver] Active now playing origin is updated: %@. %@
[NMROriginObserver] No origin controller for origin: %@
No route found for companion origin.
[Origin] Updated origin: %p, originChanged:%d, deviceInfoChanged:%d
[Origin] Updating connection state for route: %@ origin: %@ from: %lu to: %lu
[%@] Begin discovery
[Origin] Ignoring origin with no device info: %@.
[Origin] Ignoring AirPlay active origin: %@.
[Origin] Ignoring TVRemote origin: %@.
[Origin] Updated available origins: %@
[Origin] Trying to set invalid activeOrigin identifier: %@, falling back to: %@
[Origin] Update active origin: %@
[Origin] Fetching MediaRemote available origins and active origin.
[Origin] Failed to fetch any available origins
[Origin] Failed to get active origin from MR.
[%@] End discovery
[%@] Available routes did change: %@
[%@] Will connect to route %@...
[%@] Failed to connect to route %@ with error: %@
[%@] Connected to route %@ successfully!
Encountered unknown protobuf key (%@) while converting to a dictionary; skipping.
[NMROriginObserver] NMRNowPlayingClient is nil
Building delta queue from previous data
Previous data empty, serialize the full queue with all metadata
Location different, include new items in delta
Count different, include new items in delta
Found an item that didn't match up (index %lu), include new items in delta
Found an item missing metadata (index %lu)
Found an item with invalidated metadata (index %lu)
Nothing changed, delta queue is empty
Built delta queue: %@
Got a new queue item that didn't include metadata, and we don't have any cached metadata for this item, identifier: %@
Updated with new data, queue is now: %@
Requesting playback queue information for range: %ld -> %ld
No now playing info yet, returning nil queue representation.
Created queue: %@
Updated with new mediaRemote info, queue is now %@
No need to update content item (identifier: %@), not currently in queue
_PlaybackQueueDidChangeNotification for origin %@
_PlaybackQueueContentItemsDidChange for origin %@
[NMROriginObserver] Notifying nowPlayingInfo for %@
[NMROriginObserver] Notifying playbackState for %@
[NMROriginObserver] Notifying supportedCommands for %@
[NMROriginObserver] Notifying elapsedTime for %@
[NMROriginObserver] Notifying applicationBundleID for %@
[NMROriginObserver] Notifying timestamp for %@
[NMROriginObserver] Notifying playbackQueue for %@
Successfully requested delivery of %@ message (%@).
Failed to request delivery of %@ message (%@) with error "%@".
Received %@ %@ message (ID: %@, %lu byte payload).
Successfully sent message (ID: %@).
Failed to send message (ID: %@) with error "%@".
v8@?0
origin
watch
phone
homepod
B24@?0@"NMROrigin"8@"NSDictionary"16
%@ %@
identifier
metadata
<%@:%p playbackState: %d, playbackRate: %f, title: %@, artist: %@, appDisplayName: %@, appBundleID: %@>
com.apple.
timestamp
originIdentifier
com.apple.NanoMediaRemote
com.apple.NanoMusic
com.apple.Music
com.apple.NanoRadio
com.apple.podcasts
com.apple.NanoBooks
com.apple.iBooks
state
payload
digest
nowPlayingInfo
applicationInfo
supportedCommands
playbackQueue
com.apple.private.nanomediaremote
NMRCompanionNowPlayingApplicationIconDidChangeNotification
idx (%lu) is out of range (%lu)
command
enabled
active
preferredInterval
localizedTitle
localizedShortTitle
minimumRating
maximumRating
supportedPlaybackRate
repeatMode
shuffleMode
presentationStyle
preferredPlaybackRate
currentQueueEndAction
supportedQueueEndAction
Unknown
Play
Pause
TogglePlayPause
Stop
NextTrack
PreviousTrack
AdvanceShuffleMode
AdvanceRepeatMode
BeginFastForward
EndFastForward
BeginRewind
EndRewind
Rewind15Seconds
FastForward15Seconds
Rewind30Seconds
FastForward30Seconds
SkipForward
SkipBackward
ChangePlaybackRate
RateTrack
LikeTrack
DislikeTrack
BookmarkTrack
SeekToPlaybackPosition
ChangeRepeatMode
ChangeShuffleMode
NextChapter
PreviousChapter
NextAlbum
PreviousAlbum
NextPlaylist
PreviousPlaylist
BanTrack
AddTrackToWishList
RemoveTrackFromWishList
NextInContext
PreviousInContext
ResetPlaybackTimeout
SetPlaybackQueue
AddNowPlayingItemToLibrary
CreateRadioStation
AddItemToLibrary
InsertIntoPlaybackQueue
PlayItemInPlaybackQueue
ChangeQueueEndAction
(unknown: %i)
None
Albums
Songs
Clear
Reset
AutoPlay
jpegData
originalDigest
NanoNowPlaying
AutoLaunchMediaApps
com.apple.TVMusic
NanoMusic
RadioInMusic
v24@?0^v8^{__CFError=}16
com.apple.NanoMediaRemote.XPCQueue
v16@?0@"NSError"8
MediaRemote
nano_link_agent
v16@?0@"NSDictionary"8
v20@?0I8^{__CFArray=}12
v20@?0B8@"NSArray"12
supportedCommand
com.apple.NanoMediaRemote.MPRequestResponseController
com.apple.NanoMediaRemote.NowPlayingState
 (%@-%lu)
-[NMROriginMediaPlaybackCoreController sendMediaRemoteCommand:options:userInitiated:completion:]_block_invoke_2
v24@?0@8@"NSError"16
com.apple.Carousel
com.apple.clockface
NanoMusicCore
NanoMusicCore-Oversize
NanoMediaRemote
NanoMediaRemote-Oversize
NanoAudioControl
NanoMusicSync
NanoMusicSync-Oversize
NanoMediaUI
NanoMediaUI-Oversize
NanoMediaAPI
NanoMediaAPI-Oversize
NanoMediaTool
com.apple.nanomusic
@32@?0@"NSDictionary"8@"NSString"16@24
@32@?0@"PBCodable"8@"NSString"16@24
iconData
bundleID
NMRNowPlayingOriginControllerAddedNotification
com.apple.NanoMediaRemote.NowPlayingController
v16@?0@"NMROriginController"8
v16@?0@"NSNotification"8
com.apple.NanoNowPlaying
music
radio
podcasts
ibooks
nowplaying
now-playing
v16@?0@"<NMROriginObserverDelegate>"8
Active now playing origin defaulted to the local origin
Active now playing origin was decided by timestamp
Active now playing origin was decided by isPlaying
com.apple.SessionTrackerApp
guidedWalk
deviceUID
routeUID
playerID
error
title
artist
album
duration
isAutoPlayItem
width
height
origins
NMROriginManagerAvailableOriginsDidChangeNotification
NMROriginManagerActiveOriginDidChangeNotification
NMROriginConnectionStateDidChangeNotification
NMROriginDeviceInfoDidChangeNotification
com.apple.NanoMediaRemote.Origin
AudioAccessory5,
<%@:%p displayName: %@, deviceIdentifier: %@, originIdentifier: %@, type: %lu>
com.apple.NanoMediaRemote.OriginManager
CompanionDiscovery
com.apple.RemoteMediaServices
com.apple.TVRemote
q24@?0@"NMROrigin"8@"NMROrigin"16
v16@?0^{__CFArray=}8
v20@?0C8^v12
ProxiedDiscovery
CMPN
LOCAL
com.apple.NanoMediaRemote.sendCommand.failedWithTimeout
com.apple.NanoMediaRemote.sendCommand.failedToSend
count
@"NSDictionary"8@?0
sourceID
mediaType
externalPlayerCommand
skipInterval
playbackRate
rating
negative
playbackPosition
contextID
trackID
radioStationID
radioStationHash
systemAppPlaybackQueueData
destinationAppDisplayID
sendOptions
requestDefermentToPlaybackQueuePosition
shouldOverrideManuallyCuratedQueue
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
contentItemID
queueEndAction
location
contentItem
elapsedTime
uniqueIdentifier
isExplicitTrack
isMusicApp
radioStationIdentifier
radioStationName
artworkDataDigest
isAlwaysLive
isAdvertisement
storeSubscriptionAdamID
collectionInfoData
artworkURL
storeAdamID
userInfoData
has%@
@8@?0
v32@?0@"NSString"8@"NSString"16^B24
v32@?0@"NSString"8@16^B24
SessionTrackerApp
com.apple.NanoMediaRemote.PlaybackQueue
v16@?0@?<v@?>8
v32@?0@"_NMRContentItem"8Q16^B24
v32@?0@8Q16^B24
Playback queue with range %d -> %lu
  ContentItem identifier=%@, hasMetadata=%d, title=%@
options
knownDigest
nowPlayingInfoDigest
applicationInfoDigest
supportedCommandsDigest
playbackQueueDigest
<%@:%p identifier: %d, displayName: %@>
companionBundleIdentifier
localizedDisplayName
playbackState
watchBundleIdentifier
iconDigest
processID
%@.%@.idsQueue
com.apple.private.alloy.mediaremote
ID: %@, QueueOne: %@, BypassDuet: %@, FireAndForget: %@, ForceLocal: YES, %lu byte payload
an UNHANDLED
NMRIDSMessageTypeUnknown
NMRIDSMessageTypeMediaRemoteCommandRequest
NMRIDSMessageTypeMediaRemoteCommandResponse
NMRIDSMessageTypeMediaRemoteGetState
NMRIDSMessageTypeMediaRemoteSetState
NMRIDSMessageTypeMediaRemoteGetArtwork
NMRIDSMessageTypeMediaRemoteSetArtwork
NMRIDSMessageTypeMediaRemoteGetProxiedOrigins
NMRIDSMessageTypeMediaRemoteSetProxiedOrigins
NMRIDSMessageTypeMediaRemoteUpdateProxiedOrigins
NMRIDSMessageTypeDiscoverAndConnectEndpoints
NMRIDSMessageType(%hu)
errorCode
handlerReturnStatus
NMRAugmentedNowPlayingInfoArtworkDataDigest
displayName
deviceInfoData
request
playerPath
NMRMediaRemoteUpdater
PerformanceTesting
_NMRContentItem
NSCopying
NMRNowPlayingState
_NMRMediaRemoteGetArtworkMessage
NanoMediaRemote
_NMRMediaRemoteSetStateMessageProfobuf
_NMRCommandInfoProtobuf
_NMRMediaRemoteSetArtworkMessage
NMRPlayerResponseNowPlayingState
NMRPlaybackQueueRequest
NMRMediaRemoteProtobufCodable
NSObject
NMRPlaybackQueueResponse
NMRNowPlayingApplicationInfo
NMRServiceInterface
_NMRClient
_NMRSupportedCommandsProtobuf
NMROriginMediaPlaybackCoreController
MPRequestResponseControllerDelegate
NMROriginObserver
NMROriginCommandHandler
_NMRMediaRemoteSetIconMessage
Validation
NMRNowPlayingController
NMROriginObserverDelegate
_NMRPlaybackQueueResponseProtobuf
_NMRContentItemMetadata
NMRSendCommandResultMessage
_NMRMediaRemoteGetIconMessage
_NMRProxiedOriginsProtobuf
NMROrigin
NMROriginManager
MPAVRoutingControllerDelegate
NMRSendCommandMessage
_NMRCommandOptionsProtobuf
_NMRPlaybackQueue
_NMRNowPlayingInfoProtobuf
NMRAdditions
NMRProtobufSerialization
NMRMediaRemoteSetStateMessage
NMRMediaRemoteSetArtworkMessage
NMRMediaRemoteSetIconMessage
NMRAppLaunchInfo
NMRMediaRemoteGetStateMessage
NMRMediaRemoteGetArtworkMessage
NMRMediaRemoteGetIconMessage
NMRNowPlayingClient
NMRPlaybackQueue
_NMRSendCommandMessageProtobuf
_NMRMediaRemoteGetStateMessageProfobuf
NMROriginController
NMROriginInfo
_NMRNowPlayingApplicationStateProtobuf
NMRIDSMessageCenter
IDSServiceDelegate
_NMRIDSMessageHandler
_NMRSendCommandResultMessageProtobuf
_NMROriginProtobuf
NMRPlaceholderNowPlayingState
_NMRPlaybackQueueRequestProtobuf
init
executeUpdateBlock
initWithQueue:updateBlock:
.cxx_destruct
_updateState
_updateBlock
_queue
objectForKeyedSubscript:
isEqualToString:
localOrigin
companionOrigin
availableOrigins
type
predicateWithBlock:
filteredArrayUsingPredicate:
firstObject
_originFromTestOptions:
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
setIdentifier:
setMetadata:
allocWithZone:
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
hasIdentifier
hasMetadata
readFrom:
writeTo:
copyTo:
identifier
metadata
_identifier
_metadata
TB,R,N
T@"NSString",&,N,V_identifier
T@"_NMRContentItemMetadata",&,N,V_metadata
playbackState
playbackRate
title
artist
applicationDisplayName
applicationBundleIdentifier
album
isExplicitTrack
isAlwaysLive
isAutoPlay
itemPersistentID
storeAdamID
itemCompanionPersistentID
itemAlbumPersistentID
artworkCatalog
radioStationName
radioStationIdentifier
radioStationHash
isAdvertisement
hasNowPlayingInfo
timestamp
duration
elapsedTimeAtLastUpdate
isPlaying
preferredPlaybackRate
applicationIconImageData
isRepeatModeCommandSupported
repeatMode
isShuffleModeCommandSupported
shuffleMode
isQueueEndActionCommandSupported
queueEndAction
isPlaybackRateCommandSupported
isLikeCommandSupported
isLikeCommandEnabled
isLikedActive
localizedLikeTitle
likeCommandPresentationStyle
isBanCommandSupported
isBanCommandEnabled
isBannedActive
localizedBanTitle
banCommandPresentationStyle
isBookmarkCommandSupported
isBookmarkCommandEnabled
isBookmarkedActive
localizedBookmarkTitle
isNextTrackCommandEnabled
isPreviousTrackCommandEnabled
isSkipForwardCommandEnabled
isSkipBackwardCommandEnabled
fastForwardTimeInterval
rewindTimeInterval
hasNowPlayingItem
hasUpNextQueue
date
timeIntervalSinceDate:
isFirstPartyApp
length
longLongValue
hasPrefix:
emptyNowPlayingState
compareWithNowPlayingState:
elapsedTime
isPlayingRadio
identifiers
collectionTitle
isQueueEndActionSupported:
_preferredPlaybackRate
T@"NSDate",R,N
Td,R,N
Tf,R,N
Tf,R,N,V_preferredPlaybackRate
TI,R,N
playing
TB,R,N,GisPlaying
T@"MPIdentifierSet",R,N
T@"NSNumber",R,N
T@"NSString",R,N
explicitTrack
TB,R,N,GisExplicitTrack
T@"MPArtworkCatalog",R,N
advertisement
TB,R,N,GisAdvertisement
alwaysLive
TB,R,N,GisAlwaysLive
autoPlay
TB,R,N,GisAutoPlay
playingRadio
TB,R,N,GisPlayingRadio
firstPartyApp
TB,R,N,GisFirstPartyApp
T@"NSData",R,N
repeatModeCommandSupported
TB,R,N,GisRepeatModeCommandSupported
Ti,R,N
shuffleModeCommandSupported
TB,R,N,GisShuffleModeCommandSupported
queueEndActionCommandSupported
TB,R,N,GisQueueEndActionCommandSupported
playbackRateCommandSupported
TB,R,N,GisPlaybackRateCommandSupported
likeCommandSupported
TB,R,N,GisLikeCommandSupported
likeCommandEnabled
TB,R,N,GisLikeCommandEnabled
likedActive
TB,R,N,GisLikedActive
Tq,R,N
banCommandSupported
TB,R,N,GisBanCommandSupported
banCommandEnabled
TB,R,N,GisBanCommandEnabled
bannedActive
TB,R,N,GisBannedActive
bookmarkCommandSupported
TB,R,N,GisBookmarkCommandSupported
bookmarkCommandEnabled
TB,R,N,GisBookmarkCommandEnabled
bookmarkedActive
TB,R,N,GisBookmarkedActive
nextTrackCommandEnabled
TB,R,N,GisNextTrackCommandEnabled
previousTrackCommandEnabled
TB,R,N,GisPreviousTrackCommandEnabled
skipForwardCommandEnabled
TB,R,N,GisSkipForwardCommandEnabled
skipBackwardCommandEnabled
TB,R,N,GisSkipBackwardCommandEnabled
numberWithDouble:
numberWithInt:
setTimestamp:
setHasTimestamp:
hasTimestamp
setOriginIdentifier:
setHasOriginIdentifier:
hasOriginIdentifier
originIdentifier
_timestamp
_originIdentifier
_has
TB,N
Td,N,V_timestamp
Ti,N,V_originIdentifier
bundleWithIdentifier:
bundleIdentifier
isLocal
allKeys
containsObject:
matchingPlaybackAppBundleIdentifierForOrigin:
nanoMediaRemoteBundle
setPayload:
setDigest:
setNowPlayingInfo:
setApplicationInfo:
setSupportedCommands:
setPlaybackQueue:
setState:
setHasState:
hasState
hasPayload
hasDigest
hasApplicationInfo
hasSupportedCommands
hasPlaybackQueue
state
payload
digest
nowPlayingInfo
applicationInfo
supportedCommands
playbackQueue
_applicationInfo
_digest
_nowPlayingInfo
_payload
_playbackQueue
_state
_supportedCommands
Ti,N,V_state
T@"NSData",&,N,V_payload
T@"NSData",&,N,V_digest
T@"NSData",&,N,V_nowPlayingInfo
T@"NSData",&,N,V_applicationInfo
T@"NSData",&,N,V_supportedCommands
T@"NSData",&,N,V_playbackQueue
dealloc
exceptionWithName:reason:userInfo:
raise
numberWithBool:
numberWithFloat:
arrayWithCapacity:
addObject:
preferredIntervalsCount
clearPreferredIntervals
preferredIntervalAtIndex:
addPreferredInterval:
setLocalizedTitle:
supportedPlaybackRatesCount
clearSupportedPlaybackRates
supportedPlaybackRateAtIndex:
addSupportedPlaybackRate:
setLocalizedShortTitle:
supportedQueueEndActionsCount
clearSupportedQueueEndActions
supportedQueueEndActionAtIndex:
addSupportedQueueEndAction:
command
setCommand:
setHasCommand:
hasCommand
commandAsString:
StringAsCommand:
setEnabled:
setHasEnabled:
hasEnabled
setActive:
setHasActive:
hasActive
preferredIntervals
setPreferredIntervals:count:
hasLocalizedTitle
hasLocalizedShortTitle
setMinimumRating:
setHasMinimumRating:
hasMinimumRating
setMaximumRating:
setHasMaximumRating:
hasMaximumRating
supportedPlaybackRates
setSupportedPlaybackRates:count:
setRepeatMode:
setHasRepeatMode:
hasRepeatMode
repeatModeAsString:
StringAsRepeatMode:
setShuffleMode:
setHasShuffleMode:
hasShuffleMode
shuffleModeAsString:
StringAsShuffleMode:
setPresentationStyle:
setHasPresentationStyle:
hasPresentationStyle
setPreferredPlaybackRate:
setHasPreferredPlaybackRate:
hasPreferredPlaybackRate
currentQueueEndAction
setCurrentQueueEndAction:
setHasCurrentQueueEndAction:
hasCurrentQueueEndAction
currentQueueEndActionAsString:
StringAsCurrentQueueEndAction:
supportedQueueEndActions
setSupportedQueueEndActions:count:
supportedQueueEndActionsAsString:
StringAsSupportedQueueEndActions:
enabled
active
localizedTitle
localizedShortTitle
minimumRating
maximumRating
presentationStyle
_preferredIntervals
_supportedPlaybackRates
_supportedQueueEndActions
_command
_currentQueueEndAction
_localizedShortTitle
_localizedTitle
_maximumRating
_minimumRating
_presentationStyle
_repeatMode
_shuffleMode
_active
_enabled
Ti,N,V_command
TB,N,V_enabled
TB,N,V_active
TQ,R,N
T^d,R,N
T@"NSString",&,N,V_localizedTitle
T@"NSString",&,N,V_localizedShortTitle
Tf,N,V_minimumRating
Tf,N,V_maximumRating
T^f,R,N
Ti,N,V_repeatMode
Ti,N,V_shuffleMode
Ti,N,V_presentationStyle
Tf,N,V_preferredPlaybackRate
Ti,N,V_currentQueueEndAction
T^i,R,N
setJpegData:
setOriginalDigest:
hasJpegData
hasOriginalDigest
jpegData
originalDigest
_jpegData
_originalDigest
T@"NSData",&,N,V_jpegData
T@"NSData",&,N,V_originalDigest
copy
initWithPlayerResponse:
tracklist
playingItem
dateWithTimeIntervalSinceReferenceDate:
playbackRateCommand
playerPath
representedBundleID
playingItemIndexPath
_nowPlayingSong
library
persistentID
numberWithLongLong:
syncID
universalStore
adamID
name
isExplicitSong
predicateWithValue:forProperty:
subscriptionAdamID
setWithObject:
initWithFilterPredicates:
setShouldIncludeNonLibraryEntities:
setEntityLimit:
items
section
sectionAtIndex:
metadataObject
playlist
podcast
radioStation
song
_nowPlayingRadioStation
radio
stationID
stationHash
representedBundleDisplayName
repeatCommand
repeatType
shuffleCommand
shuffleType
actionAtQueueEndCommand
actionAtQueueEnd
supportedActions
numberWithInteger:
count
likeCommand
value
dislikeCommand
wishlistCommand
changeItemCommand
nextItem
previousItem
seekCommand
jumpByInterval:
preferredForwardJumpIntervals
doubleValue
preferredBackwardJumpIntervals
playerResponse
_playerResponse
T@"MPCPlayerResponse",R,N,V_playerResponse
nmr_localApplicationBundleIdentifier
setRequest:
setPlayerPath:
request
initWithPlaybackQueue:error:
initWithData:
data
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithProtobufData:
protobufData
initWithRequest:playerPath:
performWithQueue:completion:
_protobuf
T^v,R,N
archivedDataWithRootObject:requiringSecureCoding:error:
setError:
hasError
classForKeyedUnarchiver
error
unarchivedObjectOfClasses:fromData:error:
invokeCompletion:
T^{__CFError=},R,N
companionBundleIdentifier
setCompanionBundleIdentifier:
watchBundleIdentifier
setWatchBundleIdentifier:
localizedDisplayName
setLocalizedDisplayName:
setPlaybackState:
iconDigest
setIconDigest:
setProcessID:
hasProcessID
processID
_getNextPlaceholderProcessID
_processID
T@"NSString",C,N
TI,N
T@"NSData",C,N
Ti,N
initWithMachServiceName:options:
refreshMediaRemoteStateIfNecessary
sendMediaRemoteCommand:withCommandOptions:toOriginWithUniqueIdentifier:commandResultHandler:
prewarmCompanionSystemMusicApp
discoverAndConnectEndpoints
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
resume
_proxyWithErrorHandler:
dictionaryWithObjects:forKeys:count:
localizedDescription
remoteObjectProxyWithErrorHandler:
synchronousRemoteObjectProxyWithErrorHandler:
sharedClient
_synchronousProxyWithErrorHandler:
_serverConnection
_serverConnectionQueue
mutableCopy
setObject:forKeyedSubscript:
numberWithUnsignedInt:
unsignedIntValue
countByEnumeratingWithState:objects:count:
unsignedIntegerValue
dictionaryWithCapacity:
removeAllObjects
objectAtIndex:
initWithCapacity:
addSupportedCommand:
supportedCommandsCount
clearSupportedCommands
supportedCommandAtIndex:
supportedCommandType
T@"NSMutableArray",&,N,V_supportedCommands
route
_transientOriginWithEndpointRoute:
stringByAppendingFormat:
response
nmc_commandRequestWithMediaRemoteCommand:options:
performRequest:options:completion:
_requestResponseController
beginAutomaticResponseLoading
endAutomaticResponseLoading
performWithCompletion:
_updateIsEnforcingApplicationFilterWithNowPlayingState:
_notifyObserverOfUpdatedNowPlayingInfo
_notifyObserverOfUpdatedNowPlayingApplicationBundleID
_notifyObserverOfUpdatedPlaybackState
_notifyObserverOfUpdatedSupportedCommands
_notifyObserverOfUpdatedElapsedTime
_notifyObserversOfUpdatedTimestamp
_notifyObserversOfUpdatedPlaybackQueue
_asyncToSerialQueueCheckingProcessWithBlock:
arrayWithObjects:count:
userInfo
arrayByAddingObjectsFromArray:
domain
code
originObserver:didUpdateNowPlayingInfoForOrigin:
originObserver:didUpdateNowPlayingApplicationBundleIdentifierForOrigin:
originObserver:didUpdatePlaybackStateForOrigin:
originObserver:didUpdateSupportedCommandsForOrigin:
originObserver:didUpdateElapsedTimeForOrigin:
originObserver:didUpdateTimestampForOrigin:
originObserver:didUpdatePlaybackQueueForOrigin:
propertySetWithProperties:
initWithProperties:relationships:
propertySetByCombiningWithPropertySet:
requiredLibraryAddStatusObservationProperties
setLabel:
setQualityOfService:
setPlayingItemProperties:
setQueueSectionProperties:
setDelegate:
mainBundle
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
beginObserving
endObserving
updateNowPlayingStateWithCompletion:
origin
nowPlayingState
delegate
shouldObservePlaybackQueue
setShouldObservePlaybackQueue:
shouldObserveArtwork
setShouldObserveArtwork:
shouldObserveLibraryAddStatus
setShouldObserveLibraryAddStatus:
preparePlayerRequestForNewPlaybackIntent
T@"NMROrigin",R,N
T@"NMRNowPlayingState",R,N
T@"NMRPlaybackQueue",R,N
T@"<NMROriginObserverDelegate>",W,N
sendMediaRemoteCommand:options:userInitiated:completion:
initWithPlayerPath:options:
_serialQueue
_accessQueue
_isEnforcingApplicationFilter
_playerPath
_filteringOptions
_nowPlayingState
_numberOfConsecutiveFailuresToResolve
_shouldObserveLibraryAddStatus
_delegate
_origin
T@"NMROrigin",R,N,V_origin
T@"NMRPlaybackQueue",R,N,VplaybackQueue
T@"<NMROriginObserverDelegate>",W,N,V_delegate
TB,N,VshouldObservePlaybackQueue
TB,N,VshouldObserveArtwork
TB,N,V_shouldObserveLibraryAddStatus
boolValue
floatValue
intValue
protobufFromDictionary:
dictionaryFromProtobuf:
externalPlayerCommand
negative
mediaType
playbackPosition
skipInterval
sourceID
radioStationID
systemAppPlaybackQueueData
shouldOverrideManuallyCuratedQueue
trackID
contentItemID
destinationAppDisplayID
sendOptions
requestDefermentToPlaybackQueuePosition
rating
contextID
stationURL
shouldBeginRadioPlayback
playbackQueueInsertionPosition
setDictionaryKeyToProtobufKeyMapping:
setProtobufClass:
setDictionaryValueToProtobufValueTransformer:
setProtobufValueToDictionaryValueTransformer:
setIconData:
setBundleID:
hasIconData
hasBundleID
iconData
bundleID
_bundleID
_iconData
T@"NSData",&,N,V_iconData
T@"NSString",&,N,V_bundleID
protobufDataFromDictionary:
dictionaryFromProtobufData:
uniqueIdentifier
collectionInfoData
userInfoData
artworkURL
isMusicApp
storeSubscriptionAdamID
artworkDataDigest
timeIntervalSinceReferenceDate
dataWithJSONObject:options:error:
JSONObjectWithData:options:error:
propertyListWithData:options:format:error:
unsignedLongLongValue
validateUniqueIdentifier:error:
weakObjectsHashTable
weakToStrongObjectsMapTable
_setupOriginControllers
defaultCenter
removeObserver:
_nowPlayingStateForOrigin:
_originControllerForOrigin:
_updateNowPlayingStateForOrigin:completion:
addObserverForName:object:queue:usingBlock:
keyEnumerator
allObjects
_evaluateNowPlayingOrigins
nowPlayingStateForOrigin:
isCompanion
launchBundleIdentifierForOrigin:
setScheme:
setHost:
stringValue
setPath:
removeObject:
objectEnumerator
objectForKey:
setOriginObserver:
setOriginCommandHandler:
_enumerateObserverDelegates:
_handleAvailableOriginsDidChangeNotification:
sharedManager
addObserver:selector:name:object:
_addOriginControllerWithOrigin:
setWithArray:
minusSet:
_shouldObserveOrigin:
_removeOriginControllerWithOrigin:
setWithObjects:
initWithOrigin:options:
postNotificationName:object:
removeObjectForKey:
_evaluateNowPlayingOriginsFromOrigins:
nowPlayingOriginsDidUpdateForController:
_evaluateActiveNowPlayingOriginForOrderedOrigins:
activeNowPlayingOriginDidUpdateForController:
distantPast
compare:
sendMediaRemoteCommand:toOrigin:options:launchApp:completion:
sendMediaRemoteCommand:options:userInitiated:toOrigin:completion:
initWithOptions:
activeNowPlayingOrigin
nowPlayingOrigins
playbackQueueForOrigin:
updateNowPlayingStateForOrigin:completion:
updateNowPlayingStateForAllOriginsWithCompletion:
launchNowPlayingURLForOrigin:
addObserverDelegate:
removeObserverDelegate:
beginObservingOrigins
endObservingOrigins
setOriginObserver:forOrigin:
setOriginCommandHandler:forOrigin:
sendMediaRemoteCommand:toOrigin:options:launchApp:
filteringOptions
_registeredObserversCount
_originControllers
_observerDelegates
_activeNowPlayingOrigin
_activeNowPlayingOriginExplanationLog
_nowPlayingOrigins
_shouldObserveArtwork
_shouldObservePlaybackQueue
_observerLock
T@"<NMRNowPlayingControllerDelegate>",W,N
T@"NSArray",R,N
TQ,R,N,V_filteringOptions
nmr_isSystemWorkoutPath
playerID
isSystemMusicPath
nmr_isSystemPodcastsPath
deviceUID
designatedGroupLeaderRouteUID
componentsWithURL:resolvingAgainstBaseURL:
path
lastPathComponent
integerValue
originWithUniqueIdentifier:
systemRoute
scheme
pathWithDeviceUID:bundleID:pid:playerID:
initWithDataSource:name:
setFetchAvailableRoutesSynchronously:
availableRoutes
queryItems
nmr_isSystemRadioPath
nmr_isSystemBooksPath
nmr_isSystemWorkoutGuidedWalkPath
nmr_isIdenticalToPath:
nmr_pathWithNowPlayingURL:
nmr_systemRadioPath
TB,R,N,Gnmr_isSystemRadioPath
nmr_systemPodcastsPath
TB,R,N,Gnmr_isSystemPodcastsPath
nmr_systemBooksPath
TB,R,N,Gnmr_isSystemBooksPath
nmr_systemWorkoutPath
TB,R,N,Gnmr_isSystemWorkoutPath
nmr_systemWorkoutGuidedWalkPath
TB,R,N,Gnmr_isSystemWorkoutGuidedWalkPath
_error
T@"NSData",&,N,V_error
setTitle:
setArtist:
setAlbum:
hasTitle
hasArtist
hasAlbum
setDuration:
setHasDuration:
hasDuration
setIsAutoPlayItem:
setHasIsAutoPlayItem:
hasIsAutoPlayItem
isAutoPlayItem
_duration
_album
_artist
_title
_isAutoPlayItem
T@"NSString",&,N,V_title
T@"NSString",&,N,V_artist
T@"NSString",&,N,V_album
Td,N,V_duration
TB,N,V_isAutoPlayItem
_initWithErrorCode:handlerReturnStatuses:originIdentifier:
setErrorCode:
addHandlerReturnStatus:
errorCode
array
handlerReturnStatusCount
handlerReturnStatusAtIndex:
messageWithErrorCode:handlerReturnStatuses:originIdentifier:
handlerReturnStatuses
serializationDate
setWidth:
setHasWidth:
hasWidth
setHeight:
setHasHeight:
hasHeight
width
height
_height
_width
Td,N,V_width
Td,N,V_height
addOrigins:
originsCount
clearOrigins
originsAtIndex:
originsType
origins
setOrigins:
_origins
T@"NSMutableArray",&,N,V_origins
_handleRouteConnectionDidConnectNotification:
_handleRouteConnectionDidInvalidateNotification:
_handleExternalDeviceConnectionStateDidChangeNotification:
_updateConnectionState
isDeviceRoute
isAppleTVRoute
isB520Route
isStereoPair
isHomePodRoute
modelID
designatedGroupLeaderName
routeName
routeNames
postNotificationName:object:userInfo:
displayName
deviceIdentifier
pathWithRoute:bundleID:playerID:
pathWithCustomOrigin:bundleID:playerID:
object
connection
externalDevice
initWithRoute:
isInvalidated
isConnected
initWithOrigin:deviceInfo:
mediaRemoteOrigin
connectionState
logicalDeviceCount
updateRoute:
updateOrigin:deviceInfo:
playerPathWithBundleID:playerID:
deviceInfo
_route
_mediaRemoteOrigin
_connectionState
_deviceInfo
_cachedDisplayName
T@"MPAVRoute",R,N
T^v,R,N,V_deviceInfo
_handleMediaRemoteActiveOriginDidChangeNotification:
_handleMediaRemoteAvailableOriginsDidChangeNotification:
_handleDeviceInfoDidChangeNotification:
_updateMediaRemoteLocalOrigin
_updateMediaRemoteAvailableAndActiveOrigins
setDiscoveryMode:
isPhoneRoute
routeUID
originWithDeviceIdentifier:
orderedSet
sortUsingComparator:
isEqualToNumber:
_onQueue_updateAvailableOrigins
_onQueue_updateActiveOriginIdentifier:
isConnecting
connectWithCompletion:
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
T@"NMROriginManager",R
activeOrigin
originForPlayerPath:
_beginProxiedEndpointDiscovery
_endProxiedEndpointDiscovery
_availableOrigins
_availableOriginsByDeviceIdentifier
_availableOriginsByOriginIdentifier
_activeOriginIdentifier
_localOriginIdentifier
_availableOriginRefs
_companionRoutingController
_proxiedEndpointRoutingController
initWithCommand:bundleID:options:originIdentifier:
setOptions:
options
messageWithCommand:bundleID:options:originIdentifier:
T@"NSDictionary",R,N
numberWithUnsignedLongLong:
setSourceID:
setMediaType:
setRadioStationHash:
setSystemAppPlaybackQueueData:
setDestinationAppDisplayID:
setContextID:
setStationURL:
setContentItemID:
hasSourceID
hasMediaType
setExternalPlayerCommand:
setHasExternalPlayerCommand:
hasExternalPlayerCommand
setSkipInterval:
setHasSkipInterval:
hasSkipInterval
setPlaybackRate:
setHasPlaybackRate:
hasPlaybackRate
setRating:
setHasRating:
hasRating
setNegative:
setHasNegative:
hasNegative
setPlaybackPosition:
setHasPlaybackPosition:
hasPlaybackPosition
hasContextID
setTrackID:
setHasTrackID:
hasTrackID
setRadioStationID:
setHasRadioStationID:
hasRadioStationID
hasRadioStationHash
hasSystemAppPlaybackQueueData
hasDestinationAppDisplayID
setSendOptions:
setHasSendOptions:
hasSendOptions
setRequestDefermentToPlaybackQueuePosition:
setHasRequestDefermentToPlaybackQueuePosition:
hasRequestDefermentToPlaybackQueuePosition
setShouldOverrideManuallyCuratedQueue:
setHasShouldOverrideManuallyCuratedQueue:
hasShouldOverrideManuallyCuratedQueue
hasStationURL
setShouldBeginRadioPlayback:
setHasShouldBeginRadioPlayback:
hasShouldBeginRadioPlayback
setPlaybackQueueInsertionPosition:
setHasPlaybackQueueInsertionPosition:
hasPlaybackQueueInsertionPosition
hasContentItemID
setQueueEndAction:
setHasQueueEndAction:
hasQueueEndAction
queueEndActionAsString:
StringAsQueueEndAction:
_playbackPosition
_radioStationID
_trackID
_contentItemID
_contextID
_destinationAppDisplayID
_mediaType
_playbackQueueInsertionPosition
_playbackRate
_queueEndAction
_radioStationHash
_rating
_sendOptions
_skipInterval
_sourceID
_stationURL
_systemAppPlaybackQueueData
_externalPlayerCommand
_negative
_requestDefermentToPlaybackQueuePosition
_shouldBeginRadioPlayback
_shouldOverrideManuallyCuratedQueue
T@"NSString",&,N,V_sourceID
T@"NSString",&,N,V_mediaType
TB,N,V_externalPlayerCommand
Tf,N,V_skipInterval
Tf,N,V_playbackRate
Tf,N,V_rating
TB,N,V_negative
Td,N,V_playbackPosition
T@"NSString",&,N,V_contextID
TQ,N,V_trackID
Tq,N,V_radioStationID
T@"NSString",&,N,V_radioStationHash
T@"NSData",&,N,V_systemAppPlaybackQueueData
T@"NSString",&,N,V_destinationAppDisplayID
TI,N,V_sendOptions
TB,N,V_requestDefermentToPlaybackQueuePosition
TB,N,V_shouldOverrideManuallyCuratedQueue
T@"NSString",&,N,V_stationURL
TB,N,V_shouldBeginRadioPlayback
Ti,N,V_playbackQueueInsertionPosition
T@"NSString",&,N,V_contentItemID
Ti,N,V_queueEndAction
addContentItem:
contentItemsCount
clearContentItems
contentItemAtIndex:
contentItemType
setLocation:
setHasLocation:
hasLocation
location
contentItems
setContentItems:
_contentItems
_location
Ti,N,V_location
T@"NSMutableArray",&,N,V_contentItems
setRadioStationName:
setArtworkDataDigest:
setCollectionInfoData:
setArtworkURL:
setUserInfoData:
setElapsedTime:
setHasElapsedTime:
hasElapsedTime
setUniqueIdentifier:
setHasUniqueIdentifier:
hasUniqueIdentifier
setIsExplicitTrack:
setHasIsExplicitTrack:
hasIsExplicitTrack
setIsMusicApp:
setHasIsMusicApp:
hasIsMusicApp
setRadioStationIdentifier:
setHasRadioStationIdentifier:
hasRadioStationIdentifier
hasRadioStationName
hasArtworkDataDigest
setIsAlwaysLive:
setHasIsAlwaysLive:
hasIsAlwaysLive
setIsAdvertisement:
setHasIsAdvertisement:
hasIsAdvertisement
setStoreSubscriptionAdamID:
setHasStoreSubscriptionAdamID:
hasStoreSubscriptionAdamID
hasCollectionInfoData
hasArtworkURL
setStoreAdamID:
setHasStoreAdamID:
hasStoreAdamID
hasUserInfoData
_elapsedTime
_radioStationIdentifier
_storeAdamID
_storeSubscriptionAdamID
_uniqueIdentifier
_artworkDataDigest
_artworkURL
_collectionInfoData
_radioStationName
_userInfoData
_isAdvertisement
_isAlwaysLive
_isExplicitTrack
_isMusicApp
Td,N,V_elapsedTime
TQ,N,V_uniqueIdentifier
TB,N,V_isExplicitTrack
TB,N,V_isMusicApp
Tq,N,V_radioStationIdentifier
T@"NSString",&,N,V_radioStationName
T@"NSData",&,N,V_artworkDataDigest
TB,N,V_isAlwaysLive
TB,N,V_isAdvertisement
Tq,N,V_storeSubscriptionAdamID
T@"NSData",&,N,V_collectionInfoData
T@"NSString",&,N,V_artworkURL
Tq,N,V_storeAdamID
T@"NSData",&,N,V_userInfoData
substringToIndex:
uppercaseString
stringByReplacingCharactersInRange:withString:
valueForKey:
methodForSelector:
nmr_valueForPotentiallyUndefinedKey:
enumerateKeysAndObjectsUsingBlock:
validateValue:forKey:error:
setValue:forKey:
dictionaryKeyToProtobufKeyMapping
protobufClass
dictionaryValueToProtobufValueTransformer
protobufValueToDictionaryValueTransformer
_protobufKeyToDictionaryKeyMapping
_dictionaryKeyToProtobufKeyMapping
_protobufClass
_dictionaryValueToProtobufValueTransformer
_protobufValueToDictionaryValueTransformer
T@"NSDictionary",C,N,V_dictionaryKeyToProtobufKeyMapping
T#,&,N,V_protobufClass
T@?,C,N,V_dictionaryValueToProtobufValueTransformer
T@?,C,N,V_protobufValueToDictionaryValueTransformer
_initWithNowPlayingInfo:applicationInfo:supportedCommands:playbackQueue:originIdentifier:
messageWithNowPlayingInfo:applicationInfo:supportedCommands:playbackQueue:originIdentifier:
nowPlayingInfoData
applicationInfoData
supportedCommandsData
playbackQueueData
_initWithJPEGArtwork:originalDigest:originIdentifier:
messageWithJPEGArtwork:originalDigest:originIdentifier:
jpegArtwork
_initWithIcon:originalDigest:bundleID:originIdentifier:
messageWithIcon:originalDigest:bundleID:originIdentifier:
icon
queryItemWithName:value:
setQueryItems:
initWithBundleID:URL:
nmr_preferredNowPlayingAppLaunchInfo
_URL
T@"NSString",R,N,V_bundleID
T@"NSURL",R,N,V_URL
_initWithNowPlayingInfoDigest:applicationInfoDigest:supportedCommandsDigest:playbackQueueDigest:originIdentifier:
setNowPlayingInfoDigest:
setApplicationInfoDigest:
setSupportedCommandsDigest:
setPlaybackQueueDigest:
nowPlayingInfoDigest
applicationInfoDigest
supportedCommandsDigest
playbackQueueDigest
messageWithNowPlayingInfoDigest:applicationInfoDigest:supportedCommandsDigest:playbackQueueDigest:originIdentifier:
_initWithOriginIdentifier:
messageWithOriginIdentifier:
_initWithIconWidth:height:bundleID:originIdentifier:
messageWithIconWidth:height:bundleID:originIdentifier:
mediaRemoteNowPlayingClient
initWithMRNowPlayingClient:
_mediaRemoteNowPlayingClient
_bundleIdentifier
_displayName
T^v,R,N,V_mediaRemoteNowPlayingClient
T@"NSString",R,N,V_bundleIdentifier
T@"NSString",R,N,V_displayName
_refreshCurrentPlaybackQueueFromMediaRemoteWithCompletion:
_mediaRemotePlaybackQueueWithRange:includeMetadata:
objectAtIndexedSubscript:
enumerateObjectsUsingBlock:
_metadataForItemWithIdentifier:
playbackQueueDidChange:
playbackQueue:contentItemsDidChange:
observedRange
_contentItemIdentifiers
_updateWithMediaRemoteQueue:
_itemWithIdentifier:
_needsMetadataForMediaRemoteItem:
beginObservingMediaRemotePlaybackQueueForOrigin:
fullPlaybackQueueData
copyFullMediaRemotePlaybackQueueIncludingMetadata:
copyMediaRemotePlaybackQueueWithRange:includeMetadata:
deltaPlaybackQueueDataFromPreviousData:invalidatedMetadataIdentifiers:
updateWithData:
_updateMetadataWithMediaRemoteItems:
_rangeOfItemsNeedingMetadataForMediaRemoteQueue:
_needsUpdateForMediaRemoteQueue:
setObservedRange:
setOrigin:
_upNextPlaybackQueue
_observingMediaRemote
_playbackQueueUpdater
_observedRange
T@"NMROrigin",&,N,V_origin
T@"<NMRPlaybackQueueDelegate>",W,N,V_delegate
T{?=qq},N,V_observedRange
appendString:
hasOptions
_options
T@"_NMRCommandOptionsProtobuf",&,N,V_options
setKnownDigest:
hasKnownDigest
hasNowPlayingInfoDigest
hasApplicationInfoDigest
hasSupportedCommandsDigest
hasPlaybackQueueDigest
knownDigest
_applicationInfoDigest
_knownDigest
_nowPlayingInfoDigest
_playbackQueueDigest
_supportedCommandsDigest
T@"NSData",&,N,V_knownDigest
T@"NSData",&,N,V_nowPlayingInfoDigest
T@"NSData",&,N,V_applicationInfoDigest
T@"NSData",&,N,V_supportedCommandsDigest
T@"NSData",&,N,V_playbackQueueDigest
bytes
dataWithBytes:length:
isEqualToData:
_notifyObserverOfUpdatedNowPlayingApplicationBundleIdentifier
_notifyObserverOfUpdatedTimestamp
_notifyObserverOfUpdatedPlaybackQueue
originCommandHandler
originObserver
_isObserving
_hasPendingNowPlayingInfoChange
_hasPendingElapsedTimeChange
_hasPendingPlaybackStateChange
_hasPendingSupportedCommandsChange
_hasPendingNowPlayingApplicationBundleIdentifierChange
_hasPendingTimestampChange
_hasPendingPlaybackQueueChange
_originObserver
_originCommandHandler
T@"<NMROriginObserver>",&,N,V_originObserver
T@"<NMROriginCommandHandler>",&,N,V_originCommandHandler
TB,N,V_shouldObservePlaybackQueue
TB,N,V_shouldObserveArtwork
setDisplayName:
deviceInfoData
setDeviceInfoData:
initWithProtobuf:
protobuf
T@"NSString",&,N
T@"NSData",&,N
hasCompanionBundleIdentifier
hasLocalizedDisplayName
setHasPlaybackState:
hasPlaybackState
hasWatchBundleIdentifier
hasIconDigest
setHasProcessID:
_companionBundleIdentifier
_iconDigest
_localizedDisplayName
_playbackState
_watchBundleIdentifier
T@"NSString",&,N,V_companionBundleIdentifier
T@"NSString",&,N,V_localizedDisplayName
TI,N,V_playbackState
T@"NSString",&,N,V_watchBundleIdentifier
T@"NSData",&,N,V_iconDigest
Ti,N,V_processID
setTarget:
setAction:
setMessageType:
numberWithUnsignedShort:
UTF8String
initWithService:
addDelegate:queue:
_sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:isResponse:additionalOptions:resultingMessageIdentifier:error:
context
outgoingResponseIdentifier
initWithProtobufData:type:isResponse:
sendProtobuf:toDestinations:priority:options:identifier:error:
target
action
messageCenter:messageWithIdentifier:didSendWithSuccess:error:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
setMessageHandlerTarget:action:forIncomingMessagesOfType:
startHandlingMessages
sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:expectReply:queueOneIdentifier:resultingMessageIdentifier:error:
sendMessageWithProtobufData:messageType:priority:timeout:bypassDuet:skipStorage:inReplyTo:resultingMessageIdentifier:error:
_idsQueue
_idsService
_messageHandlers
T@"<NMRIDSMessageCenterDelegate>",W,N,V_delegate
messageType
_messageType
_target
_action
TS,N,V_messageType
T@,W,N,V_target
T:,N,V_action
clearHandlerReturnStatus
setHasErrorCode:
hasErrorCode
handlerReturnStatus
setHandlerReturnStatus:count:
_handlerReturnStatus
_errorCode
TI,N,V_errorCode
T^I,R,N
hasDisplayName
hasDeviceInfoData
_deviceInfoData
Ti,N,V_uniqueIdentifier
T@"NSString",&,N,V_displayName
T@"NSData",&,N,V_deviceInfoData
setItemPersistentID:
setArtworkCatalog:
setCollectionTitle:
setExplicitTrack:
setAlwaysLive:
setPlaybackRateCommandSupported:
setNextTrackCommandEnabled:
setPreviousTrackCommandEnabled:
setSkipForwardCommandEnabled:
setSkipBackwardCommandEnabled:
setFastForwardTimeInterval:
setRewindTimeInterval:
T@"NSNumber",C,N,VitemPersistentID
T@"NSString",C,N,Vtitle
T@"NSString",C,N,Vartist
T@"NSString",C,N,Valbum
T@"MPArtworkCatalog",&,N,VartworkCatalog
T@"NSString",C,N,VcollectionTitle
Tf,N,VplaybackRate
Tf,N,VpreferredPlaybackRate
TI,N,VplaybackState
TB,N,GisExplicitTrack,VexplicitTrack
T@"NSString",&,N,VradioStationName
TB,N,GisAlwaysLive,ValwaysLive
TB,N,GisPlaybackRateCommandSupported,VplaybackRateCommandSupported
TB,N,GisNextTrackCommandEnabled,VnextTrackCommandEnabled
TB,N,GisPreviousTrackCommandEnabled,VpreviousTrackCommandEnabled
TB,N,GisSkipForwardCommandEnabled,VskipForwardCommandEnabled
TB,N,GisSkipBackwardCommandEnabled,VskipBackwardCommandEnabled
Td,N,VfastForwardTimeInterval
Td,N,VrewindTimeInterval
hasRequest
hasPlayerPath
_request
T@"NSData",&,N,V_request
T@"NSData",&,N,V_playerPath
@32@0:8@16@?24
v16@0:8
@"NSObject<OS_dispatch_queue>"
@24@0:8@16
@24@0:8^{_NSZone=}16
B16@0:8
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
@"NSString"
@"_NMRContentItemMetadata"
Q24@0:8@16
d16@0:8
f16@0:8
I16@0:8
i16@0:8
B20@0:8i16
q16@0:8
v24@0:8d16
v20@0:8B16
v20@0:8i16
{?="timestamp"b1"originIdentifier"b1}
@"NSData"
{?="timestamp"b1"originIdentifier"b1"state"b1}
@20@0:8i16
i24@0:8@16
^d16@0:8
d24@0:8Q16
v32@0:8^d16Q24
v20@0:8f16
^f16@0:8
f24@0:8Q16
v32@0:8^f16Q24
^i16@0:8
i24@0:8Q16
v32@0:8^i16Q24
{?="list"^d"count"Q"size"Q}
{?="list"^f"count"Q"size"Q}
{?="list"^i"count"Q"size"Q}
{?="command"b1"currentQueueEndAction"b1"maximumRating"b1"minimumRating"b1"preferredPlaybackRate"b1"presentationStyle"b1"repeatMode"b1"shuffleMode"b1"active"b1"enabled"b1}
@"MPCPlayerResponse"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@"NSData"16
@"NSData"16@0:8
@32@0:8^v16^v24
^v16@0:8
v32@0:8@16@?24
@"_NMRPlaybackQueueRequestProtobuf"
@32@0:8^v16^{__CFError=}24
^{__CFError=}16@0:8
v24@0:8@?16
@"_NMRPlaybackQueueResponseProtobuf"
v20@0:8I16
@"_NMRNowPlayingApplicationStateProtobuf"
v40@0:8I16@20i28@?32
v40@0:8I16@"NSDictionary"20i28@?<v@?@"NSDictionary">32
@24@0:8@?16
@"NSXPCConnection"
@24@0:8Q16
@"NSMutableArray"
B32@0:8@16@24
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
v24@0:8@?<v@?>16
@"NMROrigin"16@0:8
@"NMRNowPlayingState"16@0:8
@"NMRPlaybackQueue"16@0:8
@"<NMROriginObserverDelegate>"16@0:8
v24@0:8@"<NMROriginObserverDelegate>"16
v40@0:8I16@20B28@?32
v40@0:8I16@"NSDictionary"20B28@?<v@?@"NSError">32
@32@0:8@16Q24
@"MPCPlayerPath"
@"MPRequestResponseController"
@"NMRPlayerResponseNowPlayingState"
@"<NMROriginObserverDelegate>"
@"NMROrigin"
@"NMRPlaybackQueue"
B32@0:8^@16^@24
v32@0:8@16@24
v32@0:8@16@"NMROrigin"24
v48@0:8I16@20B28@32@?40
v40@0:8I16@20@28B36
v48@0:8I16@20@28B36@?40
@"NSMapTable"
@"NSHashTable"
@"NSArray"
@"<NMRNowPlayingControllerDelegate>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{?="duration"b1"isAutoPlayItem"b1}
@36@0:8I16@20@28
@"_NMRSendCommandResultMessageProtobuf"
{?="height"b1"timestamp"b1"width"b1"originIdentifier"b1}
v32@0:8^v16^v24
@32@0:8@16@24
@"MPAVRoute"
v64@0:8@16@24q32@40@48@?56
v28@0:8@16B24
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
@"NSOrderedSet"
@"NSDictionary"
@"NSNumber"
^{__CFArray=}
@"MPAVRoutingController"
@44@0:8I16@20@28@36
@"_NMRSendCommandMessageProtobuf"
v24@0:8Q16
v24@0:8q16
{?="playbackPosition"b1"radioStationID"b1"trackID"b1"playbackQueueInsertionPosition"b1"playbackRate"b1"queueEndAction"b1"rating"b1"repeatMode"b1"sendOptions"b1"shuffleMode"b1"skipInterval"b1"externalPlayerCommand"b1"negative"b1"requestDefermentToPlaybackQueuePosition"b1"shouldBeginRadioPlayback"b1"shouldOverrideManuallyCuratedQueue"b1}
{?="location"b1}
{?="duration"b1"elapsedTime"b1"radioStationIdentifier"b1"storeAdamID"b1"storeSubscriptionAdamID"b1"timestamp"b1"uniqueIdentifier"b1"playbackRate"b1"preferredPlaybackRate"b1"repeatMode"b1"shuffleMode"b1"isAdvertisement"b1"isAlwaysLive"b1"isExplicitTrack"b1"isMusicApp"b1}
v24@0:8#16
@?16@0:8
@56@0:8@16@24@32@40@48
@"_NMRMediaRemoteSetStateMessageProfobuf"
@40@0:8@16@24@32
@"_NMRMediaRemoteSetArtworkMessage"
@48@0:8@16@24@32@40
@"_NMRMediaRemoteSetIconMessage"
@"NSURL"
@"_NMRMediaRemoteGetStateMessageProfobuf"
@"_NMRMediaRemoteGetArtworkMessage"
@48@0:8d16d24@32@40
@"_NMRMediaRemoteGetIconMessage"
@24@0:8^v16
^v20@0:8B16
^v36@0:8{?=qq}16B32
v24@0:8^v16
{?=qq}24@0:8^v16
B24@0:8^v16
{?=qq}16@0:8
v32@0:8{?=qq}16
@"_NMRPlaybackQueue"
@"NMRMediaRemoteUpdater"
@"<NMRPlaybackQueueDelegate>"
{?="location"q"length"q}
@"_NMRCommandOptionsProtobuf"
{?="timestamp"b1"command"b1"originIdentifier"b1}
@"<NMROriginObserver>"
@"<NMROriginCommandHandler>"
@"_NMROriginProtobuf"
{?="playbackState"b1"processID"b1}
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v36@0:8@16:24S32
B80@0:8@16S24Q28d36B44B48B52@56^@64^@72
B76@0:8@16S24Q28d36B44B48@52^@60^@68
@"IDSService"
@"NSMutableDictionary"
@"<NMRIDSMessageCenterDelegate>"
S16@0:8
v20@0:8S16
:16@0:8
v24@0:8:16
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
{?="list"^I"count"Q"size"Q}
{?="timestamp"b1"errorCode"b1"originIdentifier"b1}
{?="uniqueIdentifier"b1}
@"MPArtworkCatalog"
