@(#)PROGRAM:CoreServicesInternal  PROJECT:CoreServicesInternal-474.1
}@book
mark
com.apple.FileURL
default
scoped
bookmark
resolve
alias
__CFURLCreateBookmarkData
_CFURLCreateBookmarkData_block_invoke
v8@?0
v24@?0^{__CFString=}8^{__CFError=}16
/System/Library/PrivateFrameworks/FileProvider.framework/FileProvider
FPBookmarkableStringFromDocumentURL
file:///
file://
com.apple.ResourceFork
NSURLBookmarkAllPropertiesKey
NSURLBookmarkAllPropertyKeysKey
NSURLBookmarkDetailedDescription
NSURLBookmarkQuarantineMountedNetworkVolumesKey
Bookmark: dataRef=%p len=%d
  signature = 0x%x
  length = 0x%x
  version = 0x%x
  bookmarkDataSectionOffset = 0x%x
  bookmarkDataSectionFirstTOCOffset = 0x%x
 0x%5.5lx:
%2.2x
  | 
 toc @ offset:0x%x ( 0x%p ) level=%d count=%d next=0x%d
 %3d) itemType=0x%x flags=0x%x dataOffset=0x%x %s
pathComponents:
fileIDs:
pathComponentProps:
urlString:
fragmentString:
queryString:
tagStyle:
resourceProps:
fileName:
fileID:
creationDate:
accessDate:
modificationDate:
attrModificationDate:
relativeDirsUp:
relativeDirsDown:
relativeDirsUpMinusOne:
relativeDirsDownMinusOne:
createdWithRelativeURL
volInfoDepths:
volPath:
volPathComponents:
volURL:
volName:
volUUID:
volCapacity:
volCreationDate:
volProps:
volWasBoot:
volIDiskUserName:
bookmarkFileProviderString:
diskImageDepth:
volMountURL:
volAutomountPath:
volHomeDirRelativePathComponentCount:
userName:
userUID:
wasFileIDFormat:
creationOptions:
haseBaseURL:
baseURLComponentCount:
version:
shortVersion:
displayNamesDict:
displayName:
effectiveIconData:
effectiveFlattenedIconRef:
typeBindingData:
bookmarkCreationTime:
aliasData:
testKey1
testKey2
toc:
Props:[
%s%s 
file
!file
!dir
!sym
!vol
!pkg
sys-immut
sys-mut
user-immut
user-mut
ext-hid
ext-vis
!app
local
!local
auto
!auto
browse
!browse
eject
!eject
rmvbl
!rmvbl
internal
!internal
external
!external
diskimage
!diskimage
ipod
!ipod
file-ids
!file-ids
symlinks
!symlinks
hard-links
!hard-links
journal
!journal
isJournaling
!isJournaling
sparseFiles
!sparseFiles
zeroRuns
!zeroRuns
case-sens
!case-sens
case-presrv
!case-presrv
kCFURLBookmarkCreationAllowCreationIfResourceDoesNotExistMask
kCFURLBookmarkCreationDoNotIncludeSandboxExtensionsMask
kCFURLBookmarkCreationMinimalBookmarkMask
kCFURLBookmarkCreationSuitableForBookmarkFile
NULL
 %ld/0x%x 
 %lg 
 <number> 
 %2.2x
 %4.4d/%2.2d/%2.2d %2.2d:%2.2d:%-6.4f 
 true  
 false 
 Unknown encoded type, typeID=%d
_CFURLCreateByResolvingBookmarkData_block_invoke
_URLCreateByResolvingAliasFile_block_invoke
CFURLCreatedFromBookmark
createByResolvingBookmarkDataInternal
FPCreateDocumentURLFromBookmarkableString
kCFBookmarkResolutionWithoutMountingMask was passed and the volume needed wasn't available
copyVolumesArrayForBookmark
/System/Library/PrivateFrameworks/GenerationalStorage.framework/GenerationalStorage
GSLibraryResolveDocumentId2
com.apple.bookmarkresolution
v32@?0^{__CFURL=}8^{__CFError=}16@?<v@?>24
NSURLUnsetValueKeysKey
__kCFURLCheapVolumeInformationKey
_FSURLCreateWithPathAndAttributes: CFURLCreateFromFileSystemRepresentation failed; pathLen = %ld
NSURLKeys
_NSURLSecuritySandboxExtensionKey
_NSURLSecuritySandboxExtensionHandleKey
_NSURLSecuritySandboxExtensionRefCountKey
kern.osproductversion
_FileCache
MM/dd/yyyy HH:mm:ss.SSS
<_FileCacheRef %p>{
validSeed = %d
attributes = (
hasBase
NameIsHidden
!NameIsHidden
FaultLogicalFileIsHidden
!FaultLogicalFileIsHidden
IsMountPoint
!IsMountPoint
IsTrigger
!IsTrigger
HasPathFromID
!HasPathFromID
Has64BitObjectIDs
!Has64BitObjectIDs
HasExtendedSecurity
!HasExtendedSecurity
IsHFSStandard
!IsHFSStandard
HasDecmpFSCompression
!HasDecmpFSCompression
SupportsHardLinks
!SupportsHardLinks
SupportsHiddenFiles
!SupportsHiddenFiles
Name = <CFString %p> %@
AccessMask = 0%.4lo
Flags = %lu
DirFileLinkCount = %lu
GenCount = %lu
DocumentID = %lu
OwnerID = %d
GrpID = %d
extensionLength = %hu
DataProtectFlags = %lu
AccTime = %@
ModTime = %@
ChgTime = %@
CrTime  = %@
CrTime  = <n/a>
AddedTime = %@
AddedTime = <n/a>
IOBlockSize = %lu
hasDevice
FSID = {0x%.8x 0x%.8x}
VolumeID = %lu
hasFileIDs
InodeNumber = %llu
FileID = %llu
ParentID = %llu
hasUserAccess
userAccessExecuteOK
!userAccessExecuteOK
userAccessWriteOK
!userAccessWriteOK
userAccessReadOK
!userAccessReadOK
hasFinderInfo
finderInfo    = %.2x %.2x %.2x %.2x  %.2x %.2x %.2x %.2x  %.2x %.2x %.2x %.2x  %.2x %.2x %.2x %.2x
extFinderInfo = %.2x %.2x %.2x %.2x  %.2x %.2x %.2x %.2x  %.2x %.2x %.2x %.2x  %.2x %.2x %.2x %.2x
finderInfoZeros
!finderInfoZeros
hasRsrcInfo
rsrcLength = %llu
rsrcAllocSize = %llu
hasFileDataLength
FileDataLength = %llu
FileDataAllocSize = %llu
hasFileSecurity
hasFullPath
<CFString %p> %@
propertyValues = %@
temporaryPropertyValues = %@
permanentPropertyValues = %@
volumeInfo = %@
volumeInfo = (
volFileCount = %llu
volDirCount = %llu
volSize = %llu
volSpaceAvail = %llu
flags = 0x%llx
creationDate = %@
maxFileSize = %llu
uuid = %@
NSURLFileContentIdentifierKey
NSURLMayShareFileContentKey
NSURLMayHaveExtendedAttributesKey
NSURLIsPurgeableKey
NSURLIsSparseKey
parseAttributeBuffer: ATTR_CMN_NAME was returned with 0 attr_length
SetNameAndExtensionLengthFromCString: CFStringCreateWithBytes failed with kCFStringEncodingUTF8; retrying with kCFStringEncodingISOLatin1
SetNameAndExtensionLengthFromCString: CFStringCreateWithBytes failed with kCFStringEncodingISOLatin1; setting name to empty string
com.apple.metadata:com_apple_backup_excludeItem
com.apple.MobileBackup
com.apple.metadata:com_apple_cloudBackup_excludeItem
com.apple.metadata:com_apple_unencryptedBackup_excludeItem
/System/Volumes/Data
__kCFURLNoDependsVolumeInformationKey
__kCFURLExpensiveVolumeInformationKey
NSURLVolumeSupportsFileProtectionKey
/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
_LSRegisterFilePropertyProvider
/.file/id=%lld.%lld
0123456789ABCDEF
/.file/id=%lld.%lld/%s
CFURLEnumerator
<CFURLEnumerator %p>{enumeratorOptions = %ld, propertyKeys = %@
, directoryURL = %@, currentLevel = %ld
, currentURL = %@
, currentError = %@
/private/
NSURL
NSFileOriginalItemLocationKey
NSFileNewItemLocationKey
NSFileBackupItemLeftBehindLocationKey
NSUserStringVariant
Backup
GetattrlistRetry: realloc request too large (%d)
lifs
com.apple.coreservicesinternal.vfs_notifications
com.apple.system.kernel.unmount
v12@?0i8
com.apple.system.kernel.mountupdate
/System/Library/PrivateFrameworks/QuickLookThumbnailing.framework/QuickLookThumbnailing
_QLCopyResourcePropertyForKey
_QLSetResourcePropertyForKey
%s: NULL result with no real error
CFURLCreateBookmarkData
%s: <%p: %@> options=%#lx propertiesToInclude=%@ relativeToURL=%@
result=<%p %@>
_URLCreateByResolvingAliasFile: NULL result with no real error
CFURLResolveBookmarkData
%s: returning <%p %@>
bookmarkRef=<%p %@>  options=%#lx relativeToURL=%@ propertiesToInclude=%@ repIsStaleP=%p errorRefP=%p
%s: result=<%p: %@> error=%@
REMOVING %u from relative url=%@
 provisionalURL=%@
Adding %u from path components to relative URL
 - provisionalURL=%@
matched volume %@ by uuid %@
matched volume %@ by VolumeMountURL %@
matched volume %@ by name=%@ and capacity=%@ and creationDate=%@
(possible) matched volume %@ by capacity=%@ and creationDate=%@ (renamed volume case)
Discarding capacity & creation date match because we found more than one possibility.
STARTING RESOLUTION of a bookmark to a filesystem item.  originalItemPath=%@
-. Constructing array of potential volumes to be considered for items in this bookmark.
-. Pruning array of potential volumes based on information in the bookmark.
Mounting required volumes. %@
 -- got userCanceledErr from mount attempt, making further resolution for this bookmark fail.
VOLUME(S) IDENTIFIED; starting the attempt to find this item represented by this bookmark item at depth %u on one of these volumes.
1. Original item was in a home folder, so look for an item in the home directory.
Trying relative to current home directory: %@
Checking for home-directory match by relative path for current user 
Trying relative to bookmark user's home directory: %@
Bookmark was to home directory, so trying %@
Bookmark was homeDirectoryRelative, depth inside homeDirectory=%u
Checking for home-directory relative match by relative path
2. Bookmark was to a volume, so try to just find a matching volume.
3. Original item was on the boot drive, so looking for an item by relative path on the current boot drive.  path=%@
3. - Trying to match by relative path on current boot volume.
4. Trying to match by volume name + path components, maybeURL=%@ volumePathElements=%@ pathComponents=%@ volumeURL=%@
5. Trying to match by partial path across all of the volumes ( in case the volume it was on got renamed. )
5a.  Trying volume url=%@ with partial path %@ volumeDepth=%u
5b. Trying to find by partial paths on volume by mount path, partialPath=%@ maybeURL=%@
6. Trying to find target solely by fileID on matched volumes.
7. Trying to find target by fileID and partial paths, to deal with renamed parent items.
8. Trying to find target at depth 1 solely by documentID on matched volumes.
COMPLETED RESOLUTION of a bookmark to a filesystem item, depth=%u item=<%p: %@>
%s: (depth=%u bookmarkItemWasLocal=%{bool}d volumeUUID=%@
Bookmark was to an item on a local drive; checking if it's the boot drive and if the uuid matches.  onBoot=%{bool}d volMountPath=%@
Bookmark was to an item on the boot drive, which appears to match the current boot drive by UUID, so using that volume. uuid=%@
Bookmark was to an item on the boot drive, which does not appear to match the current boot drive by UUID.  Saved uuid=%@
Necessary matching props for volume from bookmark: wasLocal=%{bool}d wasNetwork=%{bool}d wasDevFS=%{bool}d/%{bool}d
Checking volume for match to bookmark, volumeURL=%@
ERROR-- two mounted volumes (%@,%@) have the same UUID %@
Pruning volume list to %@ because its UUID matches the one in the bookmark data.
-. Resolving url to disk image for volume at depth %u to determine image file to be mounted.
 -- Attempting to mount ( or find already mounted ) possible network filesystem item, at path %@ which is needed for bookmark resolution.
 -- Attempting to find already mounted URLMount volume item, at url %@ which is needed for bookmark resolution.
 -- Returning volumeURLRef=%@
match bookmark, depth=%u matchToURL=%@
 -- SUCCESS, bookmark, depth=%u is a matchToURL=%@ because the item properties matched those of the original item, and the item exists.
 -- SUCCESS, bookmark, depth=%u is a matchToURL=%@ because the bookmark doesn't contain any properties to match, and the item exists.
 -- Trying to match by targetFileID, depth=%u  options=%#lx fileID=%@ on volume %@
 --  on volume=%@ fileIDRefs=%@
 -- trying to match by relative path from fileIDsRef=%@ volumeURL=%@
 -- Trying to relative path from fileID, maybeURL=%@ depth=%u options=%#lx fileID=%@ fileIDURL=%@  partialPath=%@
 -- Trying to match by targetFileID from documentID, options=%#lx fileID=%@ on volume %@
_FSURLSetResourcePropertyForKey: false result with no real error
_FSURLSetResourcePropertiesForKeys: returning false without an error
_FSURLSetResourcePropertiesForKeys: false result with no real error
_FSURLResourceIsReachable: false result with no real error
_FSURLCopyResourcePropertyValuesAndFlags: false result with no real error
_FSURLGetResourcePropertyFlags: false result with no real error
_FSURLGetVolumePropertyFlags: false result with no real error
_FSCreatePathForFileID: NULL result with no real error
_FSGetFileSystemRepresentationForFileID: false result with no real error
_FSURLCacheResourcePropertyForKey: false result with no real error
_FSURLCacheResourcePropertiesForKeys: false result with no real error
_FSURLCreateStandardError: NULL result with no real error
_FileURLCreateDisplayPathComponentsArray(1): NULL result with no real error
_FileURLCreateDisplayPathComponentsArray(2): NULL result with no real error
%p: incrementing ref count for handle %{public}@ to %{public}@
%p: missing handle or ref count object: handle=%{public}@, count=%{public}@
%p: consuming extension: %s
%p: extension handle: %lld
%p: sandbox_extension_consume: %{errno}d
%p: releasing extension for handle %lld
%p: sandbox_extension_release for handle %lld: %{errno}d
%p: decrementing extension for handle %lld
%p: called stopAccessingSecurityScopedResource too many times for handle %{public}@
%p: called <StopAccessing> on URL that is not security-scoped: %@
%p: releasing extension by path for %s
ignoring unsupported value: kCFURLFileProtectionKey=%@ for %@
%@: error setting protection class: %{darwin.errno}d
kExcludedFromBackupXattrName set on path: %{private}s
kExcludedFromBackupXattrName removed from path: %{private}s
kExcludedFromCloudBackupName set on path: %{private}s
kExcludedFromCloudBackupName removed from path: %{private}s
kExcludedFromUnencryptedBackupName set on path: %{private}s
kExcludedFromUnencryptedBackupName removed from path: %{private}s
_FSURLCopyResourcePropertyForKeyInternal: false result with no real error
_FSURLCopyResourcePropertiesForKeysInternal: NULL result with no real error
_URLEnumeratorGetNextURL: NULL result with no real error
_URLEnumeratorGetURLsBulk: NULL result with no real error
_URLReplaceObject: false result with no real error
%p: attaching sandbox extension %{private}s
sandboxExtension to attach was not a CFData object
%p: removing sandbox extension
cannot attach security scope to a URL that is not a file URL: <%p %@>
