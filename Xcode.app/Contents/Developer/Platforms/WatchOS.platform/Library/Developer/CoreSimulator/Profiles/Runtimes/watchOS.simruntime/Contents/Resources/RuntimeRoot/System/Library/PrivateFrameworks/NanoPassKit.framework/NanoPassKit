%@ %@
requestUUIDString
assertionType
pending
-[NPKProtoAssertionRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoAssertionRequest.m
nil != self->_requestUUIDString
T@"NSString",&,N,V_requestUUIDString
hasAssertionType
TB,N
Ti,N,V_assertionType
hasPending
TB,N,V_pending
Unknown
Provisioning
ProvisioningRequiringUpgradedPasscode
(unknown: %i)
uniqueID
hasUniqueID
TB,R,N
T@"NSString",&,N,V_uniqueID
passRelevancyTuples
T@"NSMutableArray",&,N,V_passRelevancyTuples
termsURL
allowNonSecureHTTP
hasTermsURL
T@"NSString",&,N,V_termsURL
hasAllowNonSecureHTTP
TB,N,V_allowNonSecureHTTP
transactionsBytes
transactionPassIDs
T@"NSMutableArray",&,N,V_transactionsBytes
T@"NSMutableArray",&,N,V_transactionPassIDs
catalogData
-[NPKProtoCatalog writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoCatalog.m
nil != self->_catalogData
T@"NSData",&,N,V_catalogData
localizedProgressDescription
hasLocalizedProgressDescription
T@"NSString",&,N,V_localizedProgressDescription
NPKStandaloneProvisionSerivce
com.apple.private.alloy.passbook.standalone.provisioning
v8@?0
UseSimulatedFlowController
v16@?0@"NSError"8
v32@?0@"NPKPaymentProvisioningFlowPickerItem"8Q16^B24
v32@?0@"NPKPaymentProvisioningFlowPickerSection"8Q16^B24
v32@?0@"PKPaymentSetupProduct"8Q16^B24
v32@?0@"NSString"8Q16^B24
v32@?0@"NPKProtoStandalonePaymentSetupField"8Q16^B24
MM yyyy
v16@?0@"NSArray"8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
provisioningService
T@"IDSService",&,N,V_provisioningService
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
flowController
T@"NPKPaymentProvisioningFlowController",&,N,V_flowController
flowStepContext
T@"NPKPaymentProvisioningFlowStepContext",&,N,V_flowStepContext
flowStepToContext
T@"NSMutableDictionary",&,N,V_flowStepToContext
defaultProtocolVersion
Ti,N,V_defaultProtocolVersion
numericEntryCoordinator
T@"NPKStandaloneProvisioningNumericEntryCoordinator",&,N,V_numericEntryCoordinator
requestHeader
manualEntryFields
-[NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest.m
self->_requestHeader != nil
T@"NPKProtoStandaloneRequestHeader",&,N,V_requestHeader
T@"NSMutableArray",&,N,V_manualEntryFields
lastKnownOutgoingChange
T@"NPKPassSyncChange",&,N,V_lastKnownOutgoingChange
outgoingChangeDate
T@"NSDate",&,N,V_outgoingChangeDate
lastKnownIncomingChange
T@"NPKPassSyncChange",&,N,V_lastKnownIncomingChange
incomingChangeDate
T@"NSDate",&,N,V_incomingChangeDate
com.apple.nanopassd.passsync
com.apple.private.alloy.passbook.general
passSettings-%@
passCatalog
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/NPKPassSyncService.m
sync state changed
sync state changed, catalog
sync state change processed
proposed reconciled state
reconciled state accepted
pass settings changed
Catalog changed
v24@?0@"NPKProtoPassSyncStateChange"8@"NSString"16
passSyncStateChange-%u
v32@?0@"NSData"8Q16^B24
passSyncStateChange
passSyncStateChangeProcessed
passSyncReconciledStateUnrecognized
provide updated libray state
Archive timer
Sync now
passSyncEngine
T@"NPKPassSyncEngine",&,N,V_passSyncEngine
passSyncService
T@"IDSService",&,N,V_passSyncService
passSyncQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_passSyncQueue
passSyncEngineArchiveTimer
T@"NSObject<OS_dispatch_source>",&,N,V_passSyncEngineArchiveTimer
passSyncEngineSyncTimer
T@"NSObject<OS_dispatch_source>",&,N,V_passSyncEngineSyncTimer
passSyncStatus
T@"NPKPassSyncServiceSyncStatus",&,N,V_passSyncStatus
dropAllMessages
TB,N,V_dropAllMessages
needsRelevancyInformation
TB,N,V_needsRelevancyInformation
com.apple.NanoPassbook.NPKLibrary.NPKLibraryDisplayedRelevantPassesDidChangeNotification
numericEntryPending
hasNumericEntryPending
TB,N,V_numericEntryPending
success
actualExpressPassInformation
currentExpressPassesInformation
hasSuccess
TB,N,V_success
hasActualExpressPassInformation
T@"NSData",&,N,V_actualExpressPassInformation
currentExpressPassesInformations
T@"NSMutableArray",&,N,V_currentExpressPassesInformations
configurationDataBytes
hasConfigurationDataBytes
T@"NSData",&,N,V_configurationDataBytes
seid
command
infoDictionary
-[NPKProtoRemoteAdminPerformRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoRemoteAdminPerformRequest.m
nil != self->_url
nil != self->_seid
nil != self->_command
T@"NSData",&,N,V_url
T@"NSString",&,N,V_seid
T@"NSString",&,N,V_command
hasInfoDictionary
T@"NSData",&,N,V_infoDictionary
chosenFlowPickerItemIdentifier
-[NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest.m
hasChosenFlowPickerItemIdentifier
T@"NSString",&,N,V_chosenFlowPickerItemIdentifier
commutePlanBytes
hasCommutePlanBytes
T@"NSData",&,N,V_commutePlanBytes
availableProductsData
errorData
hasAvailableProductsData
T@"NSData",&,N,V_availableProductsData
hasErrorData
T@"NSData",&,N,V_errorData
type
metadata
hasType
T@"NSString",&,N,V_type
hasMetadata
T@"NPKProtoStandalonePaymentProvisioningMethodMetadata",&,N,V_metadata
TransitValuePending
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/PKPass+NanoPassKit.m
date
amount
balance
npkSupportsHidingAccessory
TB,R
npkWatchBarcode
T@"PKBarcode",R
npkExpired
npkCompleteHash
T@"NSData",R
hasLogoImageSet
npkHasValidNFCPayload
q24@?0@"PKPaymentApplication"8@"PKPaymentApplication"16
v24@?0@"PKPaymentApplication"8^B16
stepIdentifier
backStepIdentifier
allowsAddLater
welcomeStepContext
chooseFlowStepContext
chooseProductStepContext
chooseCredentialsStepContext
digitalIssuanceAmountStepContext
digitalIssuancePaymentStepContext
moreInformationStepContext
readerModeEntryStepContext
readerModeIngestionStepContext
manualEntryStepContext
secondaryManualEntryStepContext
localDeviceManualEntryStepContext
localDeviceManualEntryProgressStepContext
productDisambiguationStepContext
termsAndConditionsStepContext
provisioningProgressStepContext
provisioningResultStepContext
issuerVerificationChannelsStepContext
issuerVerificationFieldsStepContext
issuerVerificationCodeStepContext
-[NPKProtoStandalonePaymentProvisioningFlowStepContext writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowStepContext.m
nil != self->_stepIdentifier
T@"NSString",&,N,V_stepIdentifier
hasBackStepIdentifier
T@"NSString",&,N,V_backStepIdentifier
hasAllowsAddLater
TB,N,V_allowsAddLater
hasWelcomeStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext",&,N,V_welcomeStepContext
hasChooseFlowStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext",&,N,V_chooseFlowStepContext
hasChooseProductStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext",&,N,V_chooseProductStepContext
hasChooseCredentialsStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext",&,N,V_chooseCredentialsStepContext
hasDigitalIssuanceAmountStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext",&,N,V_digitalIssuanceAmountStepContext
hasDigitalIssuancePaymentStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext",&,N,V_digitalIssuancePaymentStepContext
hasMoreInformationStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext",&,N,V_moreInformationStepContext
hasReaderModeEntryStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext",&,N,V_readerModeEntryStepContext
hasReaderModeIngestionStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext",&,N,V_readerModeIngestionStepContext
hasManualEntryStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext",&,N,V_manualEntryStepContext
hasSecondaryManualEntryStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext",&,N,V_secondaryManualEntryStepContext
hasLocalDeviceManualEntryStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext",&,N,V_localDeviceManualEntryStepContext
hasLocalDeviceManualEntryProgressStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext",&,N,V_localDeviceManualEntryProgressStepContext
hasProductDisambiguationStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext",&,N,V_productDisambiguationStepContext
hasTermsAndConditionsStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext",&,N,V_termsAndConditionsStepContext
hasProvisioningProgressStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext",&,N,V_provisioningProgressStepContext
hasProvisioningResultStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext",&,N,V_provisioningResultStepContext
hasIssuerVerificationChannelsStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext",&,N,V_issuerVerificationChannelsStepContext
hasIssuerVerificationFieldsStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext",&,N,V_issuerVerificationFieldsStepContext
hasIssuerVerificationCodeStepContext
T@"NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext",&,N,V_issuerVerificationCodeStepContext
{length = %lu, bytes = 0x
... 
-[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest.m
peerPaymentWebServiceContextData
peerPaymentAccountData
hasPeerPaymentWebServiceContextData
T@"NSData",&,N,V_peerPaymentWebServiceContextData
hasPeerPaymentAccountData
T@"NSData",&,N,V_peerPaymentAccountData
reminderInterval
hasReminderInterval
Td,N,V_reminderInterval
state
hasState
Ti,N,V_state
PaymentApplicationStateUnknown
Personalized
Personalizing
RequiresVerification
PersonalizedRequiresVerification
VerificationTerminated
SuspendedByIssuer
SuspendedLostMode
SuspendedPasscodeDisabled
SuspendedCustom
RemovedByIssuer
pass
primaryAccountIdentifier
primaryAccountNumberSuffix
deviceAccountIdentifier
deviceAccountNumberSuffix
activationState
devicePrimaryPaymentApplication
-[NPKProtoStandalonePaymentPass writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentPass.m
self->_pass != nil
T@"NPKProtoStandalonePass",&,N,V_pass
hasPrimaryAccountIdentifier
T@"NSString",&,N,V_primaryAccountIdentifier
hasPrimaryAccountNumberSuffix
T@"NSString",&,N,V_primaryAccountNumberSuffix
hasDeviceAccountIdentifier
T@"NSString",&,N,V_deviceAccountIdentifier
hasDeviceAccountNumberSuffix
T@"NSString",&,N,V_deviceAccountNumberSuffix
hasActivationState
Ti,N,V_activationState
hasDevicePrimaryPaymentApplication
T@"NPKProtoStandalonePaymentApplication",&,N,V_devicePrimaryPaymentApplication
Activated
RequiresActivation
Activating
Suspended
Deactivated
UniqueID
RelevantText
NPKRelevantPassesRequestDistributedNotification
fakedUniqueIDs
NPKRelevantTransitNotificationsCheckDistributedNotification
NPKRelevantPassesDistributedNotification
tuples
npkRelevancyUniqueID
T@"NSString",R
npkRelevancyRelevantText
v32@?0@"NSDictionary"8Q16^B24
domain
code
userInfos
hasDomain
T@"NSString",&,N,V_domain
Tq,N,V_code
T@"NSMutableArray",&,N,V_userInfos
NPKPeerPaymentStatusUnknown
NPKPeerPaymentStatusExpired
NPKPeerPaymentStatusRejected
NPKPeerPaymentStatusComplete
NPKPeerPaymentStatusPending
NPKPeerPaymentStatusFailed
NPKPeerPaymentStatusAccepting
NPKPeerPaymentStatusCancelled
NPKPeerPaymentStatusCanceling
NPKPeerPaymentStatusNeedAccept
NPKPeerPaymentStatusDisabled
NPKUserPreferenceTransactionsStatus
kNPKIgnoreUserPreferenceTransactionsStatus
serviceURL
forceReRegistration
hasServiceURL
T@"NSString",&,N,V_serviceURL
hasForceReRegistration
TB,N,V_forceReRegistration
webServiceContextBytes
hasWebServiceContextBytes
T@"NSData",&,N,V_webServiceContextBytes
-[NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest.m
hasAmount
T@"NSString",&,N,V_amount
<%@: %p title "%@" products %@>
title
T@"NSString",C,N,V_title
products
T@"NSArray",&,N,V_products
identifier
T@"NSString",R,N,V_identifier
<%@: %p title "%@" footer "%@" items %@>
footer
T@"NSString",C,N,V_footer
items
T@"NSMutableArray",R,C,N,V_items
pushToken
hasPushToken
T@"NSString",&,N,V_pushToken
proposedReconciledState
hasProposedReconciledState
T@"NPKProtoPassSyncState",&,N,V_proposedReconciledState
Currency
CurrencyType
CurrencyValue
supportedCurrencyCodes
T@"NSSet",R,N,V_supportedCurrencyCodes
allowedPayloadIDs
T@"NSSet",R,N,V_allowedPayloadIDs
actualExpressPassInformations
T@"NSMutableArray",&,N,V_actualExpressPassInformations
responseHeader
fromStep
toStep
context
-[NPKProtoStandalonePaymentProvisioningFlowResponse writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowResponse.m
self->_responseHeader != nil
T@"NPKProtoStandaloneResponseHeader",&,N,V_responseHeader
Ti,N,V_fromStep
Ti,N,V_toStep
hasContext
T@"NPKProtoStandalonePaymentProvisioningFlowStepContext",&,N,V_context
Initialized
Preconditions
Welcome
ChooseFlow
ChooseProduct
ChooseCredentials
DigitalIssuanceAmount
DigitalIssuancePayment
MoreInformation
ReaderModeEntry
ReaderModeIngestion
ManualEntry
SecondaryManualEntry
LocalDeviceManualEntry
LocalDeviceManualEntryProgress
ProductDisambiguation
TermsAndConditions
ProvisioningProgress
ProvisioningResult
IssuerVerificationChannels
IssuerVerificationFields
IssuerVerificationCode
GetIssuerApplicationAddRequest
dataToSign
digestToSign
entanglementMode
hasDataToSign
T@"NSData",&,N,V_dataToSign
hasDigestToSign
T@"NSData",&,N,V_digestToSign
hasEntanglementMode
Ti,N,V_entanglementMode
hasAid
T@"NSString",&,N,V_aid
PlatformIdentifier
JCOPInfo
_internal
passTypeIdentifier
-[NPKProtoUpdatePaymentPassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoUpdatePaymentPassRequest.m
nil != self->_passTypeIdentifier
T@"NSString",&,N,V_passTypeIdentifier
isAvailable
hasIsAvailable
TB,N,V_isAvailable
com.apple.NanoPassbookDataUsageREsolver
cellular-data
green-tea
internalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
currentlyResolving
TB,N,V_currentlyResolving
passData
-[NPKProtoGizmoInitiatedAddPassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoGizmoInitiatedAddPassRequest.m
nil != self->_passData
T@"NSData",&,N,V_passData
NPKQuickPaymentSessionSource
com.apple.simulator-payment-activation
v12@?0i8
productsActionData
hasProductsActionData
T@"NSData",&,N,V_productsActionData
passSyncStateItems
T@"NSMutableArray",&,N,V_passSyncStateItems
sections
T@"NSMutableArray",&,N,V_sections
expectedHash
uniqueIDs
manifestHashes
fullResyncNeeded
resyncID
hasExpectedHash
T@"NPKProtoHash",&,N,V_expectedHash
T@"NSMutableArray",&,N,V_uniqueIDs
T@"NSMutableArray",&,N,V_manifestHashes
hasFullResyncNeeded
TB,N,V_fullResyncNeeded
hasResyncID
TI,N,V_resyncID
cryptogram
challengeResponse
hasCryptogram
T@"NSData",&,N,V_cryptogram
hasChallengeResponse
T@"NSData",&,N,V_challengeResponse
(%@ outgoingResponseIdentifier %@ incomingResponseIdentifier %@ expectsPeerResponse %d)
%@, <%p> type %d isResponse %d context %@ length %lu
serialNumber
-[NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest.m
hasSerialNumber
T@"NSString",&,N,V_serialNumber
hasPassTypeIdentifier
v16@?0@"NSNotification"8
v16@?0@"NSData"8
v24@?0@"PKPaymentIssuerProvisioningCertificatesResponse"8@"NSError"16
v20@?0B8@"NSError"12
v24@?0Q8@"NSError"16
v24@?0@"NSError"8@"NSData"16
v28@?0B8@"NSError"12@"NSArray"20
v24@?0@"PKAccountWebServicePassDetailsResponse"8@"NSError"16
v24@?0@"PKPaymentRequirementsResponse"8@"NSError"16
v24@?0@"PKPaymentEligibilityResponse"8@"NSError"16
User-requested Wallet pass provisioning
v24@?0@"PKPaymentPass"8@"NSError"16
v16@?0@"PKPaymentPass"8
v32@?0Q8@"PKVerificationRequestRecord"16@"NSError"24
v32@?0Q8@"PKPaymentPass"16@"NSError"24
v24@?0B8f12@"NSError"16
B24@?0@"PKPaymentCredential"8@"NSDictionary"16
<none>
B32@?0@"PKPaymentSetupField"8Q16^B24
UNLOCK_REQUIRED_ALERT_TITLE
NanoPassKit
UNLOCK_REQUIRED_ALERT_MESSAGE
v28@?0B8@"NSData"12@"NSData"20
inAppProvisioningRequestConfiguration
T@"PKAddPaymentPassRequestConfiguration",&,N,V_inAppProvisioningRequestConfiguration
inAppProvisioningRequest
T@"PKAddPaymentPassRequest",&,N,V_inAppProvisioningRequest
inAppProvisioningPublicKeyHash
T@"NSData",&,N,V_inAppProvisioningPublicKeyHash
inAppProvisioningNonce
T@"NSData",&,N,V_inAppProvisioningNonce
inAppProvisioningGetRequestTimer
T@"NSObject<OS_dispatch_source>",&,N,V_inAppProvisioningGetRequestTimer
webService
T@"PKPaymentWebService",&,N,V_webService
currentStep
Ti,N,V_currentStep
chooseCredentialsStepIdentifier
T@"NSString",&,N,V_chooseCredentialsStepIdentifier
immediatelyBeforeTermsStepIdentifier
T@"NSString",&,N,V_immediatelyBeforeTermsStepIdentifier
fieldsModel
T@"PKPaymentSetupFieldsModel",&,N,V_fieldsModel
progressNotificationToken
T@"<NSObject>",&,N,V_progressNotificationToken
provisioningProgressRequestContext
T@"NPKPaymentProvisioningFlowControllerRequestContext",&,N,V_provisioningProgressRequestContext
issuerVerificationPass
T@"PKPaymentPass",&,N,V_issuerVerificationPass
currentCredential
T@"PKPaymentCredential",&,N,V_currentCredential
currentProduct
T@"PKPaymentSetupProduct",&,N,V_currentProduct
termsReason
TQ,N,V_termsReason
termsAcceptedOutOfBand
TB,N,V_termsAcceptedOutOfBand
digitalIssuancePaymentRequest
T@"PKPaymentRequest",&,N,V_digitalIssuancePaymentRequest
digitalIssuanceAmount
T@"NSDecimalNumber",&,N,V_digitalIssuanceAmount
digitalIssuancePurchase
T@"PKServiceProviderPurchase",&,N,V_digitalIssuancePurchase
digitalIssuanceRequestContext
T@"NPKPaymentProvisioningFlowControllerRequestContext",&,N,V_digitalIssuanceRequestContext
authorizationController
T@"PKPaymentAuthorizationController",&,N,V_authorizationController
cardIngester
T@"PKContactlessCardIngester",&,N,V_cardIngester
internalIngestionState
TQ,N,V_internalIngestionState
flowIngestionState
TQ,N,V_flowIngestionState
ingestionProgress
Td,N,V_ingestionProgress
ingestionStateOnRetry
TQ,N,V_ingestionStateOnRetry
ingestionCardSessionToken
T@"NSString",&,N,V_ingestionCardSessionToken
ingestionCardNotFoundTimer
T@"NSObject<OS_dispatch_source>",&,N,V_ingestionCardNotFoundTimer
ingestionMethodMetadata
T@"PKPaymentProvisioningMethodMetadata",&,N,V_ingestionMethodMetadata
readerModeRequestContext
T@"NPKPaymentProvisioningFlowControllerRequestContext",&,N,V_readerModeRequestContext
delegate
T@"<NPKPaymentProvisioningFlowControllerDelegate>",W,N,V_delegate
provisioningController
T@"PKPaymentProvisioningController",R,N,V_provisioningController
setupContext
Tq,R,N,V_setupContext
readerModeProvisioningSupported
TB,N,GisReaderModeProvisioningSupported,V_readerModeProvisioningSupported
digitalIssuanceSupported
TB,N,GisDigitalIssuanceSupported,V_digitalIssuanceSupported
separateLocalDeviceEntryRequired
TB,N,GisSeparateLocalDeviceEntryRequired,V_separateLocalDeviceEntryRequired
unitTestingAuthorizationController
T@"PKPaymentAuthorizationController",&,N,V_unitTestingAuthorizationController
unitTestingCardIngester
T@"PKContactlessCardIngester",&,N,V_unitTestingCardIngester
service
T@"IDSService",&,N,V_service
pendingStatusProtobuf
T@"IDSProtobuf",&,N,V_pendingStatusProtobuf
messagePriority
Tq,N,V_messagePriority
responseIdentifier
T@"NSString",C,N,V_responseIdentifier
statusTimer
T@"NSObject<OS_dispatch_source>",&,N,V_statusTimer
sendOptions
T@"NSDictionary",&,N,V_sendOptions
updatesSent
TQ,N,V_updatesSent
maxUpdates
TQ,N,V_maxUpdates
balanceReminderBytes
hasBalanceReminderBytes
T@"NSData",&,N,V_balanceReminderBytes
authToken
hasAuthToken
T@"NSString",&,N,V_authToken
passID
preferredApplicationAID
hasPassID
T@"NSString",&,N,V_passID
hasPreferredApplicationAID
T@"NSString",&,N,V_preferredApplicationAID
useSimulatedFlowController
-[NPKProtoStandaloneInitializationRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandaloneInitializationRequest.m
hasUseSimulatedFlowController
TB,N,V_useSimulatedFlowController
hasSeparateLocalDeviceEntryRequired
TB,N,V_separateLocalDeviceEntryRequired
registrationDataBytes
hasRegistrationDataBytes
T@"NSData",&,N,V_registrationDataBytes
groupID
manifestHash
style
relevantDate
ingestionDate
logoText
backgroundColor
foregroundColor
labelColor
devicePaymentApplications
devicePrimaryContactlessPaymentApplication
devicePrimaryInAppPaymentApplication
preferredPaymentApplication
effectivePaymentApplicationState
privateLabel
cobranded
deletePending
hasUserSelectablePaymentApplications
logoImageEncoded
backgroundImageEncoded
localizedDescription
nfcPayload
completeHash
hasStoredValue
settings
issuerCountryCode
availableActions
organizationName
felicaTransitAppletState
frontFieldBuckets
backFieldBuckets
lastAddValueAmount
pendingAddValueDate
expressPassTypesMask
hasAssociatedPeerPaymentAccount
<%@> (uniqueID %@ groupID %@ passTypeIdentifier %@ manifestHash %@ style %d relevantDate %@ ingestionDate %@ logoText %@ logoImage %@ logoImageEncoded %p backgroundColor %@ foregroundColor %@ labelColor %@ backgroundImage %@ backgroundImageEncoded %p, localizedDescription %@, devicePaymentApplications (%@) devicePrimaryPaymentApplication (%@) devicePrimaryContactlessPaymentApplication (%@) devicePrimaryInAppPaymentApplication (%@) preferredPaymentApplication (%@) effectivePaymentApplicationState %d privateLabel %d cobranded %d deletePending %d hasUserSelectableContactlessPaymentApplications %d nfcPayload %@ completeHash %@ hasStoredValue %d settings %d issuerCountryCode %@ expressPassTypesMask %lu)
 (availableActions %@ organizationName %@ transitAppletState %@ frontFieldBuckets %@ backFieldBuckets %@ lastAddValueAmount %@ pendingAddValueDate %@  hasAssociatedPeerPaymentAccount %d)
B24@?0@"PKPaymentApplication"8@"NSDictionary"16
supportsSecureCoding
T@"NSData",&,N,V_logoImageEncoded
T@"NSData",&,N,V_backgroundImageEncoded
lazyLoadEncodedImages
TB,N,V_lazyLoadEncodedImages
T@"NSNumber",&,N,V_groupID
T@"NSData",&,N,V_manifestHash
Tq,N,V_style
T@"NSDate",&,N,V_relevantDate
T@"NSDate",&,N,V_ingestionDate
T@"PKNFCPayload",&,N,V_nfcPayload
TB,N,V_hasStoredValue
T@"NSData",&,N,V_completeHash
TQ,N,V_settings
T@"NSString",&,N,V_logoText
logoImage
T@"PKImage",&,N,V_logoImage
T@"PKColor",&,N,V_backgroundColor
T@"PKColor",&,N,V_foregroundColor
T@"PKColor",&,N,V_labelColor
backgroundImage
T@"PKImage",&,N,V_backgroundImage
T@"NSString",&,N,V_localizedDescription
T@"NSSet",&,N,V_devicePaymentApplications
T@"PKPaymentApplication",&,N,V_devicePrimaryPaymentApplication
T@"PKPaymentApplication",&,N,V_devicePrimaryContactlessPaymentApplication
T@"PKPaymentApplication",&,N,V_devicePrimaryInAppPaymentApplication
T@"PKPaymentApplication",&,N,V_preferredPaymentApplication
Tq,N,V_effectivePaymentApplicationState
TB,N,GisPrivateLabel,V_privateLabel
TB,N,GisCobranded,V_cobranded
TB,N,V_deletePending
hasUserSelectableContactlessPaymentApplications
TB,N,V_hasUserSelectableContactlessPaymentApplications
T@"NSString",&,N,V_issuerCountryCode
effectiveContactlessPaymentApplicationState
Tq,R,N
T@"NSArray",&,N,V_availableActions
T@"NSString",&,N,V_organizationName
transitAppletState
T@"PKTransitAppletState",&,N,V_transitAppletState
T@"NSArray",&,N,V_frontFieldBuckets
T@"NSArray",&,N,V_backFieldBuckets
T@"NSDecimalNumber",&,N,V_lastAddValueAmount
T@"NSDate",&,N,V_pendingAddValueDate
TB,N,V_hasAssociatedPeerPaymentAccount
TQ,N,V_expressPassTypesMask
v12@?0B8
configuration
T@"PKAddPaymentPassRequestConfiguration",&,N,V_configuration
remoteService
T@"PKXPCService",&,N,V_remoteService
didFinishCallbackSent
TB,N,V_didFinishCallbackSent
digitalCardImageUrl
thumbnailImageUrl
logoImageUrl
hasDigitalCardImageUrl
T@"NSString",&,N,V_digitalCardImageUrl
hasThumbnailImageUrl
T@"NSString",&,N,V_thumbnailImageUrl
hasLogoImageUrl
T@"NSString",&,N,V_logoImageUrl
remoteCredentials
credentials
allowsManualEntry
T@"NSMutableArray",&,N,V_remoteCredentials
T@"NSMutableArray",&,N,V_credentials
hasAllowsManualEntry
TB,N,V_allowsManualEntry
libraryHash
previousManifestHash
catalog
lastKnownResyncID
syncID
-[NPKProtoUpdatePassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoUpdatePassRequest.m
T@"NPKProtoPass",&,N,V_pass
hasLibraryHash
T@"NPKProtoHash",&,N,V_libraryHash
hasPreviousManifestHash
T@"NSData",&,N,V_previousManifestHash
hasCatalog
T@"NPKProtoCatalog",&,N,V_catalog
hasLastKnownResyncID
TI,N,V_lastKnownResyncID
hasSyncID
TI,N,V_syncID
NPKTapToRadarManagerErrorDomain
(internal Only)
 We appreciate if you file a radar to help us improve the product. Issue detected:%@
Wallet detect an issue
Tap-To-Radar
Cancel
v24@?0^{__CFUserNotification=}8Q16
requestURL
v24@?0@"NSDictionary"8@"NSError"16
protocolVersion
sessionIdentifier
Ti,N,V_protocolVersion
hasSessionIdentifier
T@"NSString",&,N,V_sessionIdentifier
Version1
com.apple.NPKAssertionErrorDomain
Assertion already taken. Cannot acquire an assertion more than once
Cannot invalidate an unaquired or invalid assertion
reason
T@"NSString",R,C,N,V_reason
acquired
TB,R,N,GisAcquired
TQ,R,N,V_type
TQ,R,V_state
-[NPKProtoStandalonePaymentPassListRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentPassListRequest.m
NPKCompanionAgentDeferredActionHandler
v24@?0@"PKPaymentPass"8^B16
v32@?0@"NSUUID"8@"PKPaymentWebServiceContext"16^B24
v32@?0@"NSUUID"8@"NSArray"16^B24
v32@?0@?<v@?@"NPKCompanionAgentConnection">8Q16^B24
v32@?0@"NRDevice"8Q16^B24
v24@?0@"NSUUID"8^B16
deferredActions
T@"NSMutableDictionary",&,N,V_deferredActions
deferredSharedPaymentWebServiceContexts
T@"NSMutableDictionary",&,N,V_deferredSharedPaymentWebServiceContexts
deferredAddedPaymentPasses
T@"NSMutableDictionary",&,N,V_deferredAddedPaymentPasses
chosenPaymentCredentialIdentifiers
-[NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest.m
T@"NSMutableArray",&,N,V_chosenPaymentCredentialIdentifiers
width
height
bitsPerComponent
bitsPerPixel
bytesPerRow
bitmapInfo
bitmapData
-[NPKProtoBitmap writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoBitmap.m
nil != self->_bitmapData
TQ,N,V_width
TQ,N,V_height
TQ,N,V_bitsPerComponent
TQ,N,V_bitsPerPixel
TQ,N,V_bytesPerRow
TI,N,V_bitmapInfo
T@"NSData",&,N,V_bitmapData
imageHash
imageData
-[NPKProtoStandalonePaymentHeroImage writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentHeroImage.m
nil != self->_identifier
T@"NSString",&,N,V_identifier
hasImageHash
T@"NSString",&,N,V_imageHash
hasImageData
T@"NSData",&,N,V_imageData
v32@?0@"PKPaymentPass"8Q16^B24
B24@?0@"PKPaymentPass"8@"NSDictionary"16
com.apple.private.alloy.passbook.maintenance
com.apple.private.alloy.passbook.provisioning
DEVICE_PROVISIONING_EXCEEDED_MESSAGE
DEVICE_PROVISIONING_EXCEEDED_TITLE
v16@?0@"NSSet"8
v28@?0B8B12B16@"NSError"20
com.apple.Carousel
DisableWristDetection
WRIST_DETECT_REQUIRED_ALERT_TITLE
WRIST_DETECT_REQUIRED_ALERT_MESSAGE
WRIST_DETECT_REQUIRED_ALERT_BUTTON
bridge:root=PASSCODE_ID
GIZMO_ACCOUNT_REQUIRED_ALERT_TITLE
GIZMO_ACCOUNT_REQUIRED_ALERT_MESSAGE
GIZMO_ACCOUNT_REQUIRED_ALERT_BUTTON
bridge:root=GENERAL_LINK&path=LINK_WITH_ICLOUD_LINK
PASSCODE_REQUIRED_ALERT_TITLE
PASSCODE_REQUIRED_ALERT_MESSAGE
PASSCODE_REQUIRED_ALERT_BUTTON
GIZMO_UNREACHABLE_ALERT_TITLE
GIZMO_UNREACHABLE_ALERT_MESSAGE
passcodeConnection
T@"PUConnection",&,N,V_passcodeConnection
systemSettingsManager
T@"NSSManager",&,N,V_systemSettingsManager
checkedWatchPasscodeAndUnlockedStatus
TB,N,V_checkedWatchPasscodeAndUnlockedStatus
checkedCompanioniCloudStatus
TB,N,V_checkedCompanioniCloudStatus
checkedWatchiCloudStatus
TB,N,V_checkedWatchiCloudStatus
checkedWristDetectionStatus
TB,N,V_checkedWristDetectionStatus
authRandomSetIfNecessary
TB,N,V_authRandomSetIfNecessary
watchConnected
TB,N,V_watchConnected
spaceAvailableOnSecureElement
TB,N,V_spaceAvailableOnSecureElement
needsPasscode
TB,N,V_needsPasscode
needsUnlock
TB,N,V_needsUnlock
needsCompanioniCloudAccount
TB,N,V_needsCompanioniCloudAccount
needsWatchiCloudAccount
TB,N,V_needsWatchiCloudAccount
needsWristDetection
TB,N,V_needsWristDetection
preflightCompletionHandler
T@?,C,N,V_preflightCompletionHandler
companionAgentConnection
T@"NPKCompanionAgentConnection",&,N,V_companionAgentConnection
preflighting
TB,N,GisPreflighting,V_preflighting
watchPasscodeAndUnlockedQueryDate
T@"NSDate",&,N,V_watchPasscodeAndUnlockedQueryDate
PUConnection
Unable to find class %s
/System/Library/PrivateFrameworks/PairedUnlock.framework/PairedUnlock
CARD_TYPE_TRANSIT
CARD_TYPE_EMONEY
CARD_TYPE_TRANSIT_SECTION_HEADER
CARD_TYPE_PAYMENT_SECTION_HEADER
@"NPKPaymentProvisioningFlowPickerSection"8@?0
displayName
CARD_TYPE_TRANSIT_SECTION_BETA_FOOTER
v32@?0@"NSNumber"8@"NSString"16^B24
CARD_TYPE_CREDIT_DEBIT
CARD_TYPE_CREDIT_PREPAID
regularPaymentCardProvisioning
B16@?0@"PKPaymentCredential"8
hashData
hasHashData
T@"NSData",&,N,V_hashData
-[NPKProtoNewLibraryHashRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoNewLibraryHashRequest.m
self->_libraryHash != nil
passType
localizedName
remotePass
deviceName
hasPassType
Ti,N,V_passType
hasLocalizedName
T@"NSString",&,N,V_localizedName
hasLocalizedDescription
hasOrganizationName
hasRemotePass
TB,N,V_remotePass
hasDeviceName
T@"NSString",&,N,V_deviceName
Barcode
Payment
NPKTransitAppletHistoryFetcher
aidToFetch
T@"NSString",&,N,V_aidToFetch
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"<NPKTransitAppletHistoryFetcherDelegate>",W,N,V_delegate
urlString
hasUrlString
T@"NSString",&,N,V_urlString
<%@:%p> {transitProperties:%@, balanceFields:%@
transitProperties
T@"PKTransitPassProperties",R,N,V_transitProperties
balanceFields
T@"NSArray",R,N,V_balanceFields
balanceBytes
T@"NSMutableArray",&,N,V_balanceBytes
resultCode
responseDictionary
httpStatus
TI,N,V_resultCode
hasResponseDictionary
T@"NSData",&,N,V_responseDictionary
hasHttpStatus
Ti,N,V_httpStatus
com.apple.NPKTransientPassServer
NPKTransientPassAssertionQueue
xpcConnection
T@"NSXPCConnection",&,N,V_xpcConnection
requestServiceMode
TB,N,V_requestServiceMode
disableCardSelection
TB,N,V_disableCardSelection
updateRequestData
cancelUpdate
requestAuthorization
shouldNotifyUser
-[NPKProtoRemotePassUpdateRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoRemotePassUpdateRequest.m
nil != self->_passID
hasUpdateRequestData
T@"NSData",&,N,V_updateRequestData
hasCancelUpdate
TB,N,V_cancelUpdate
hasPass
hasRequestAuthorization
TB,N,V_requestAuthorization
hasShouldNotifyUser
TB,N,V_shouldNotifyUser
-[NPKProtoCatalogChangedRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoCatalogChangedRequest.m
self->_catalog != nil
passAppletStates
T@"NSMutableArray",&,N,V_passAppletStates
expressPassInformation
referenceExpressPassesInformation
hasExpressPassInformation
T@"NSData",&,N,V_expressPassInformation
referenceExpressPassesInformations
T@"NSMutableArray",&,N,V_referenceExpressPassesInformations
authRandomSet
hasAuthRandomSet
TB,N,V_authRandomSet
verificationCode
-[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest.m
hasVerificationCode
T@"NSString",&,N,V_verificationCode
value
-[NPKProtoStandaloneUserInfo writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandaloneUserInfo.m
nil != self->_key
T@"NSString",&,N,V_key
hasValue
T@"NSString",&,N,V_value
%@: %p identifier %@ back step identifier %@
requestContext
T@"NPKPaymentProvisioningFlowControllerRequestContext",R,V_requestContext
T@"NPKProtoStandaloneRequestHeader",R,V_requestHeader
currentStepIdentifier
T@"NSString",R,N,V_currentStepIdentifier
<%@ images %@>
heroImages
T@"NSArray",&,N,V_heroImages
<%@ sections %@>
T@"NSArray",&,N,V_sections
<%@ products %@>
<%@ ordered flow identifiers %@ credentials %@ allows manual entry %d product %@>
flowIdentifierToCredential
T@"NSDictionary",&,N,V_flowIdentifierToCredential
flowIdentifiers
T@"NSArray",&,N,V_flowIdentifiers
T@"NSArray",C,N,V_credentials
product
T@"PKPaymentSetupProduct",&,N,V_product
<%@ allows reader mode entry %d product %@>
allowsReaderModeEntry
TB,N,V_allowsReaderModeEntry
<%@ title %@ subtitle %@ setup fields %@ product %@>
T@"NSString",&,N,V_title
subtitle
T@"NSString",&,N,V_subtitle
setupFields
T@"NSArray",&,N,V_setupFields
<%@ title %@ subtitle %@ ingestion state %ld ingestion progress %f>
physicalCardImageURL
T@"NSURL",&,N,V_physicalCardImageURL
ingestionState
TQ,N,V_ingestionState
<%@ camera first provisioning enabled %d setup fields %@>
cameraFirstProvisioningEnabled
TB,N,V_cameraFirstProvisioningEnabled
<%@ camera first provisioning enabled %d setup fields %@ credential %@>
credential
T@"PKPaymentCredential",&,N,V_credential
allowsAddingDifferentCard
TB,N,V_allowsAddingDifferentCard
<%@ terms URL %@ allow non-secure HTTP %d>
T@"NSURL",&,N,V_termsURL
<%@ pass unique ID %@ more info items %@>
moreInfoItems
T@"NSArray",&,N,V_moreInfoItems
paymentPass
T@"PKPaymentPass",&,N,V_paymentPass
<%@ card added %d error %@>
cardAdded
TB,N,V_cardAdded
provisionedPass
T@"PKPaymentPass",&,N,V_provisionedPass
error
T@"NSError",&,N,V_error
<%@ pass unique ID %@ channels %@>
verificationChannels
T@"NSArray",&,N,V_verificationChannels
<%@ pass unique ID %@ fields %@>
verificationFields
T@"NSArray",&,N,V_verificationFields
<%@ pass unique ID %@ channel %@>
verificationChannel
T@"PKVerificationChannel",&,N,V_verificationChannel
<%@ certificates %@ nonce %@ nonce signature %@>
certificates
T@"NSArray",&,N,V_certificates
nonce
T@"NSData",&,N,V_nonce
nonceSignature
T@"NSData",&,N,V_nonceSignature
incompatible
TB,N,GisIncompatible,V_incompatible
T@"NSDate",&,N,V_date
paymentApplication
T@"PKPaymentApplication",&,N,V_paymentApplication
transaction
T@"PKPaymentTransaction",&,N,V_transaction
valueAddedServicePasses
T@"NSArray",&,N,V_valueAddedServicePasses
valueAddedServiceTransactions
T@"NSArray",&,N,V_valueAddedServiceTransactions
transitHistory
T@"PKTransitAppletHistory",&,N,V_transitHistory
felicaHistory
T@"PKFelicaAppletHistory",R,N,V_felicaHistory
expressState
T@"PKExpressTransactionState",&,N,V_expressState
FakePaymentSessionInternal
com.apple.NPKFakePaymentSession.TransactionComplete
ourCurrentPass
T@"PKPass",&,N,V_ourCurrentPass
ourVasPasses
T@"NSDictionary",&,N,V_ourVasPasses
ourCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_ourCallbackQueue
ourInternalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_ourInternalQueue
ourConfirmed
TB,N,V_ourConfirmed
ourInServiceMode
TB,N,V_ourInServiceMode
timeoutTimer
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimer
fieldDetector
T@"PKFieldDetector",&,N,V_fieldDetector
invalidated
TB,N,V_invalidated
changeCardToken
TQ,N,V_changeCardToken
-[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest.m
T@"NSMutableArray",&,N,V_verificationFields
paymentWebServiceContextData
hasPaymentWebServiceContextData
T@"NSData",&,N,V_paymentWebServiceContextData
currencyCode
T@"NSString",C,N,V_currencyCode
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/NPKContinuityCoordinator.m
com.apple.NanoPassKit.NPKContinuityCoordinator
-[NPKContinuityCoordinator userViewingPassWithUniqueID:isPaymentPass:]
-[NPKContinuityCoordinator userNeedsToProvisionPassWithUniqueID:]
passUniqueID
com.apple.nano.passbook.provisioning
provisionPassUserActivity
T@"NSUserActivity",&,N,V_provisionPassUserActivity
getPaymentPassesUserActivity
T@"NSUserActivity",&,N,V_getPaymentPassesUserActivity
passListUserActivity
T@"NSUserActivity",&,N,V_passListUserActivity
individualPassUserActivity
T@"NSUserActivity",&,N,V_individualPassUserActivity
setUpPeerPaymentUserActivity
T@"NSUserActivity",&,N,V_setUpPeerPaymentUserActivity
viewPeerPaymentUserActivity
T@"NSUserActivity",&,N,V_viewPeerPaymentUserActivity
currentUserActivity
T@"NSUserActivity",W,N,V_currentUserActivity
IMChatRegistryContinuityActivityType
/System/Library/PrivateFrameworks/IMCore.framework/IMCore
com.apple.NPKAssertionManagerErrorDomain
com.apple.NanoPassKit.NPKAssertion
Assertion already taken
Assertion could not be created
Cannot invalidate an invalid assertion.
acquiredAssertions
T@"NSHashTable",&,V_acquiredAssertions
assertionUUID
T@"NSUUID",&,N,V_assertionUUID
assertType
Ti,N,V_assertType
com.apple.NanoPassKit.TargetDevice.AssertionManager
AssertRequest
outstandingAssertionStatusUpdaters
T@"NSMutableDictionary",&,N,V_outstandingAssertionStatusUpdaters
assertTypesUUIDsMap
T@"NSMutableDictionary",&,N,V_assertTypesUUIDsMap
transportationService
T@"IDSService",R,N,V_transportationService
v32@?0q8@"NSString"16@"NSError"24
SETUP_PURCHASE_TRANSFER_ITEM_LABEL
SETUP_PURCHASE_DEPOSIT_ITEM_LABEL
SETUP_PURCHASE_ADD_PAYMENT_METHOD_ALERT_TITLE
SETUP_PURCHASE_ADD_SPECIFIC_DEBIT_CARD_OR_TRANSFER_CARD_ALERT_MESSAGE
SETUP_PURCHASE_ADD_SPECIFIC_CARD_OR_TRANSFER_CARD_ALERT_MESSAGE
SETUP_PURCHASE_ADD_SPECIFIC_DEBIT_CARD_ALERT_MESSAGE
SETUP_PURCHASE_ADD_SPECIFIC_CARD_ALERT_MESSAGE
SETUP_PURCHASE_ADD_PAYMENT_METHOD_OR_TRANSFER_CARD_ALERT_MESSAGE
SETUP_PURCHASE_ADD_PAYMENT_METHOD_ALERT_MESSAGE
PKPaymentAuthorizationController
/System/Library/Frameworks/PassKit.framework/PassKit
v24@?0Q8@"PKPaymentPass"16
.GlobalPreferences
v36@?0B8@"NSError"12@"PKPeerPaymentWebServiceContext"20@"PKPeerPaymentAccount"28
globalDomainAccessor
T@"NPSDomainAccessor",&,N,V_globalDomainAccessor
preferencesSyncManager
T@"NPSManager",&,N,V_preferencesSyncManager
chosenProductIdentifier
-[NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest.m
hasChosenProductIdentifier
T@"NSString",&,N,V_chosenProductIdentifier
TQ,V_width
TQ,V_height
TQ,V_bitsPerComponent
TQ,V_bitsPerPixel
TQ,V_bytesPerRow
TI,V_bitmapInfo
T@"NSData",&,V_bitmapData
appDisplayName
hasAppDisplayName
T@"NSString",&,N,V_appDisplayName
cancelOutstandingRequests
hasCancelOutstandingRequests
TB,N,V_cancelOutstandingRequests
NPKQuickPaymentSessionInternalQueue
NPKQuickPaymentSessionQueue
v24@?0Q8Q16
v16@?0Q8
v16@?0@"PKContactlessInterfaceSession"8
v32@?0@"PKValueAddedServiceTransaction"8Q16^B24
v32@?0@?<v@?>8Q16^B24
paymentSessionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_paymentSessionQueue
contactlessSessionHandle
T@"PKPaymentSessionHandle",&,N,V_contactlessSessionHandle
contactlessSession
T@"PKContactlessInterfaceSession",&,N,V_contactlessSession
contactlessValidity
TQ,N,V_contactlessValidity
authorizationValidity
TQ,N,V_authorizationValidity
confirmed
TB,N,GisConfirmed,V_confirmed
deactivating
TB,N,GisDeactivating,V_deactivating
deactivated
TB,N,GisDeactivated,V_deactivated
deactivationCompletionBlocks
T@"NSMutableArray",&,N,V_deactivationCompletionBlocks
T@"<NPKQuickPaymentSessionDelegate>",W,N,V_delegate
currentPass
T@"PKPass",&,N,V_currentPass
vasPasses
T@"NSDictionary",&,N,V_vasPasses
deferAuthorization
TB,N,V_deferAuthorization
inServiceMode
TB,N,V_inServiceMode
deviceMetadata
hasDeviceMetadata
T@"NSData",&,N,V_deviceMetadata
accountData
hasAccountData
T@"NSData",&,N,V_accountData
Free Shipping
free
FedEx Ground
fedexg
Arrives in 5-7 days
8.95
UPS Next Day
upsnda
Arrives tomorrow
23.95
37.50
0.0875
Items
Sales Tax
Shipping
Target
mock-1
John
Appleseed
john@apple.com
(408) 577-1010
1 Infinite Loop
Cupertino
95014
United States
com.apple.nanopassbook.locationfetch
NanoPassKit one-shot fetcher requested location
completionHandler
T@?,C,N,V_completionHandler
locationFixTimeout
T@"NSObject<OS_dispatch_source>",&,N,V_locationFixTimeout
locationManager
T@"CLLocationManager",&,N,V_locationManager
inUseAssertion
T@"CLInUseAssertion",&,N,V_inUseAssertion
locationManagerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_locationManagerQueue
Watch
Companion
libraryState
reconciledState
backupState
candidateState
candidateChange
engineRole
v16@?0B8B12
v16@?0@?<v@?BB>8
T@"NPKPassSyncState",&,N,V_backupState
T@"<NPKPassSyncEngineDelegate>",W,N,V_delegate
dataSource
T@"<NPKPassSyncEngineDataSource>",W,N,V_dataSource
T@"NPKPassSyncState",&,N,V_libraryState
T@"NPKPassSyncState",&,N,V_reconciledState
T@"NPKPassSyncState",&,N,V_candidateState
T@"NPKPassSyncChange",&,N,V_candidateChange
processingChange
T@"NPKPassSyncChange",&,N,V_processingChange
engineName
T@"NSString",R,N
TQ,R,N,V_engineRole
accountInfoData
cloudStoreIsSetup
hasAccountInfoData
T@"NSData",&,N,V_accountInfoData
hasCloudStoreIsSetup
TB,N,V_cloudStoreIsSetup
json
SimulatorCard_%@
/System/Library/PrivateFrameworks/NanoPassKitUI.framework
manualEntryProvisioning
Manual Entry Provisioning
easyProvisioning
Easy Provisioning
https://nc-pod1-smp-device-asset.apple.com:443/broker/v1/assets/en_e1604103d8354ea3a69d9d9af961b042_v8
UIImage
/System/Library/Frameworks/UIKit.framework/UIKit
passAppletState
hasPassAppletState
T@"NSData",&,N,V_passAppletState
tsmRegionPushTopics
tsmRegionURLs
brokerRegionPushTopics
primaryRegionTopic
T@"NSMutableArray",&,N,V_tsmRegionPushTopics
T@"NSMutableArray",&,N,V_tsmRegionURLs
T@"NSMutableArray",&,N,V_brokerRegionPushTopics
hasPrimaryRegionTopic
T@"NSString",&,N,V_primaryRegionTopic
npkPassSync-%@-segment%u
npkPassSync-%@-fullPass
ELIGIBILITY_UNKNOWN_REQUIREMENTS_ERROR_TITLE
ELIGIBILITY_UNKNOWN_REQUIREMENTS_ERROR_MESSAGE
ELIGIBILITY_UNKNOWN_REQUIREMENTS_ERROR_MESSAGE_NO_URL
ELIGIBILITY_INELIGIBLE_ERROR_TITLE
ELIGIBILITY_INELIGIBLE_ERROR_MESSAGE
ELIGIBILITY_INELIGIBLE_ERROR_MESSAGE_NO_URL
ELIGIBILITY_UNAVAILABLE_ERROR_TITLE
ELIGIBILITY_UNAVAILABLE_ERROR_MESSAGE
ELIGIBILITY_ALREADY_PROVISIONED_ERROR_TITLE
ELIGIBILITY_NEWER_OS_VERSION_REQUIRED_ERROR_TITLE
ELIGIBILITY_NEWER_OS_VERSION_REQUIRED_ERROR_MESSAGE_WATCH
COULD_NOT_ADD_CARD_TITLE
COULD_NOT_ADD_CARD_MESSAGE
ELIGIBILITY_SOFTWARE_UPDATE_BUTTON_TITLE
bridge:root=GENERAL_LINK&path=SOFTWARE_UPDATE_LINK
ELIGIBILITY_LEARN_MORE_BUTTON_TITLE
ACTIVATION_NOT_AVAILABLE_TITLE
ACTIVATION_NOT_AVAILABLE_MESSAGE
COULD_NOT_CONNECT_TITLE
COULD_NOT_CONNECT_MESSAGE
-[NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest.m
kNPKPeerPaymentMessagesTransactionsManagerTransactionStatus
kNPKPeerPaymentMessagesTransactionsManagerAvailableActions
 (service identifier %@ payment status %@ available actions %@ transaction %@ actionFetchDate:%@)
serviceIdentifier
T@"NSString",&,N,V_serviceIdentifier
paymentStatus
TQ,N,V_paymentStatus
availableActionsFetchDate
T@"NSDate",&,N,V_availableActionsFetchDate
com.apple.nanopasskit.peerPaymentmessagesTransactionManager.transactions
com.apple.nanopasskit.peerPaymentmessagesTransactionManager.peerPaymentPass
v24@?0@"PKPeerPaymentStatusResponse"8@"NSError"16
v32@?0@"NSString"8@"NPKPeerPaymentTransactionDetails"16^B24
v24@?0@"PKPaymentTransaction"8^B16
paymentService
T@"PKPaymentService",R,N,V_paymentService
transactionDetails
T@"NSMutableDictionary",R,N,V_transactionDetails
currentLookupIdentifiers
T@"NSMutableSet",R,N,V_currentLookupIdentifiers
peerPaymentPassUniqueID
T@"NSString",C,V_peerPaymentPassUniqueID
defaultShippingAddress
defaultBillingAddresses
defaultContactEmail
defaultContactPhone
defaultContactName
hasDefaultShippingAddress
T@"NSData",&,N,V_defaultShippingAddress
hasDefaultBillingAddresses
T@"NSData",&,N,V_defaultBillingAddresses
hasDefaultContactEmail
T@"NSData",&,N,V_defaultContactEmail
hasDefaultContactPhone
T@"NSData",&,N,V_defaultContactPhone
hasDefaultContactName
T@"NSData",&,N,V_defaultContactName
pushTopic
hasPushTopic
T@"NSString",&,N,V_pushTopic
sanitizedPrimaryAccountNumber
expiration
longDescription
hasSanitizedPrimaryAccountNumber
T@"NSString",&,N,V_sanitizedPrimaryAccountNumber
hasExpiration
T@"NSString",&,N,V_expiration
hasLongDescription
T@"NSString",&,N,V_longDescription
hasTitle
hasFooter
T@"NSString",&,N,V_footer
T@"NSMutableArray",&,N,V_items
providedFields
T@"NSArray",&,N,V_providedFields
completedFields
T@"NSMutableArray",&,N,V_completedFields
currentIndex
TQ,N,V_currentIndex
passcodePrompt
T@"CSLSPasscodePrompt",&,N,V_passcodePrompt
CSLSPasscodePromptSettings
/System/Library/PrivateFrameworks/CarouselServices.framework/CarouselServices
CSLSPasscodePrompt
com.apple.NPKInAppPaymentServer
NPKRemoteInterfacePresenterQueue
T@"<NPKRemoteInterfacePresenterDelegate>",W,N,V_delegate
Update
Remove
<%@: %p change UUID %@ reconciled state hash %@ change type %@ unique ID %@ sync state item %@ pass data %@ base manifest hash for partial update %@>
changeUUID
reconciledStateHash
changeType
syncStateItem
baseManifestHashForPartialUpdate
remoteAssetsForPartialUpdate
T@"NSUUID",&,N,V_changeUUID
T@"NSData",&,N,V_reconciledStateHash
TQ,N,V_changeType
T@"NPKPassSyncStateItem",&,N,V_syncStateItem
T@"NSData",&,N,V_baseManifestHashForPartialUpdate
T@"NSDictionary",&,N,V_remoteAssetsForPartialUpdate
body
linkText
linkURL
imageURL
hasBody
T@"NSString",&,N,V_body
hasLinkText
T@"NSString",&,N,V_linkText
hasLinkURL
T@"NSString",&,N,V_linkURL
hasImageURL
T@"NSString",&,N,V_imageURL
NPKPeerPaymentAccountManagerAccountDidChangeNotification
v16@?0@"PKPeerPaymentAccount"8
account
T@"PKPeerPaymentAccount",&,V_account
peerPaymentService
T@"PKPeerPaymentService",R,N,V_peerPaymentService
enforcedPolicy
hasEnforcedPolicy
Ti,N,V_enforcedPolicy
China
com.apple.NPKStandaloneErrorDomain
v32@?0@"NSString"8@16^B24
v32@?0@"NPKProtoStandalonePaymentHeroImage"8Q16^B24
v32@?0@"PKVerificationChannel"8Q16^B24
v32@?0@"PKPaymentSetupMoreInfoItem"8Q16^B24
v32@?0@8@16^B24
%02x
v24@?0@"NSString"8^B16
v32@?0@"PKPaymentSetupField"8Q16^B24
v32@?0@"PKPaymentSetupProductPaymentOption"8Q16^B24
v32@?0@"NSDecimalNumber"8Q16^B24
public.png
-[NPKProtoGizmoInitiatedDeletePassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoGizmoInitiatedDeletePassRequest.m
hasReconciledStateHash
remoteCredential
-[NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext.m
self->_manualEntryStepContext != nil
hasRemoteCredential
T@"NPKProtoStandalonePaymentRemoteCredential",&,N,V_remoteCredential
hasCredential
T@"NPKProtoStandalonePaymentCredentialUnion",&,N,V_credential
hasAllowsAddingDifferentCard
typeDescriptionUnlocalized
typeDescription
requiresUserInteraction
contactPoint
sourceAddress
hasIdentifier
Ti,N,V_type
hasTypeDescriptionUnlocalized
T@"NSString",&,N,V_typeDescriptionUnlocalized
hasTypeDescription
T@"NSString",&,N,V_typeDescription
hasRequiresUserInteraction
TB,N,V_requiresUserInteraction
hasContactPoint
T@"NSString",&,N,V_contactPoint
hasSourceAddress
T@"NSString",&,N,V_sourceAddress
Email
InboundPhoneCall
OutboundPhoneCall
BankApp
Statement
Other
CREATE TABLE IF NOT EXISTS pass (unique_id TEXT NOT NULL, type_id TEXT NOT NULL, style INTEGER, hash BLOB NOT NULL, encoded_pass BLOB NOT NULL, encoded_diff BLOB, logo_text TEXT, logo_image BLOB, background_color BLOB, label_color BLOB, foreground_color BLOB, delete_pending INTEGER DEFAULT 0, background_image BLOB);
CREATE UNIQUE INDEX IF NOT EXISTS pass_unique_id_idx ON pass(unique_id)
CREATE TABLE IF NOT EXISTS key_value_store (key TEXT NOT NULL, value TEXT);
CREATE UNIQUE INDEX IF NOT EXISTS key_value_store_idx1 ON key_value_store(key)
ALTER TABLE pass ADD preferred_aid TEXT;
ALTER TABLE pass ADD nfc_payload BLOB;
ALTER TABLE pass ADD private_label INTEGER DEFAULT 0;
ALTER TABLE pass ADD cobranded INTEGER DEFAULT 0;
ALTER TABLE pass ADD device_primary_payment_application BLOB;
ALTER TABLE pass ADD preferred_payment_application BLOB;
ALTER TABLE pass ADD ingested_date INTEGER;
ALTER TABLE pass ADD complete_hash BLOB
ALTER TABLE pass ADD effective_payment_application_state INTEGER DEFAULT 0
ALTER TABLE pass ADD has_user_selectable_payment_applications INTEGER DEFAULT 0
ALTER TABLE pass ADD has_stored_value INTEGER DEFAULT 0
ALTER TABLE pass ADD settings INTEGER DEFAULT 0
ALTER TABLE pass ADD complete_hashes BLOB
ALTER TABLE pass ADD available_actions BLOB
CREATE TABLE IF NOT EXISTS transactions (pass_unique_id TEXT NOT NULL, transaction_id TEXT NOT NULL UNIQUE ON CONFLICT REPLACE, transaction_date INTEGER, transaction_sources INTEGER, encoded_transaction BLOB NOT NULL);
CREATE INDEX IF NOT EXISTS transactions_pass_unique_id_index ON transactions(pass_unique_id)
ALTER TABLE pass ADD organization_name TEXT
ALTER TABLE transactions ADD transaction_source INTEGER
ALTER TABLE transactions ADD has_notification_service_data INTEGER
ALTER TABLE pass ADD device_payment_applications BLOB
ALTER TABLE pass ADD felica_transit_applet_state BLOB
ALTER TABLE pass ADD front_field_buckets BLOB
ALTER TABLE pass ADD back_field_buckets BLOB
ALTER TABLE transactions ADD transaction_type INTEGER
ALTER TABLE pass ADD device_primary_contactless_payment_application BLOB;
ALTER TABLE pass ADD device_primary_in_app_payment_application BLOB;
CREATE TABLE IF NOT EXISTS ephemeral_transactions (pass_unique_id TEXT NOT NULL UNIQUE ON CONFLICT REPLACE, transaction_id TEXT NOT NULL);
CREATE INDEX IF NOT EXISTS ephemeral_transactions_pass_index ON ephemeral_transactions(pass_unique_id)
ALTER TABLE pass ADD last_add_value_amount TEXT
ALTER TABLE pass ADD localized_description TEXT
ALTER TABLE pass ADD pending_add_value_date INTEGER
ALTER TABLE pass ADD encoded_image_sets BLOB
ALTER TABLE pass ADD issuer_country_code BLOB
ALTER TABLE pass ADD express_pass_types_mask INTEGER DEFAULT 0
ALTER TABLE pass ADD complete_remote_hashes BLOB
ALTER TABLE transactions ADD cloudkit_archived INTEGER
ALTER TABLE pass ADD supports_pp INTEGER
ALTER TABLE transactions ADD service_identifier TEXT
ALTER TABLE pass ADD balances BLOB
nanopasses.sqlite3
(uniqueID %@ localHashes %@ remoteHashes %@)
localManifestHashes
T@"NSArray",&,N,V_localManifestHashes
remoteManifestHashes
T@"NSArray",&,N,V_remoteManifestHashes
NPKGizmoDatabaseMigrationDataSourceSetNotification
NPKGizmoDatabaseMigrationDelegateQueue
com.apple.NanoPassbook.NPKGizmoDatabase
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/NPKGizmoDatabase.m
PRAGMA journal_mode = WAL;
issuer_country_code
encodedPass
ingestedDate
completeLocalHashes
encodedImageSets
encodedPassWithoutImageSets
encodedLogoImageData
encodedBackgroundImageData
migrateCompleteHashes
v24@?0@"PKPass"8@"NSString"16
B24@?0q8q16
%@-shm
%@-wal
DELETE FROM pass WHERE unique_id = ?
INSERT INTO pass (unique_id, type_id, style, hash, encoded_pass, encoded_image_sets, encoded_diff, logo_text, logo_image, background_color, label_color, foreground_color, background_image, nfc_payload, private_label, cobranded, device_payment_applications, device_primary_payment_application, device_primary_contactless_payment_application, device_primary_in_app_payment_application, preferred_aid, preferred_payment_application, ingested_date, complete_hash, delete_pending, effective_payment_application_state, has_user_selectable_payment_applications, has_stored_value, settings, complete_hashes, issuer_country_code, available_actions, organization_name, felica_transit_applet_state, front_field_buckets, back_field_buckets, last_add_value_amount, localized_description, pending_add_value_date, express_pass_types_mask, complete_remote_hashes, supports_pp, balances) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
UPDATE pass SET encoded_diff = ? WHERE unique_id = ?
UPDATE pass SET delete_pending = ? WHERE unique_id = ?
SELECT delete_pending FROM pass WHERE unique_id = ?
UPDATE pass SET preferred_aid = ?, preferred_payment_application = ? WHERE unique_id = ?
SELECT preferred_aid FROM pass WHERE unique_id = ?
SELECT encoded_pass FROM pass WHERE unique_id = ?
SELECT encoded_pass, encoded_image_sets FROM pass WHERE unique_id = ?
SELECT encoded_diff FROM pass WHERE unique_id = ?
INSERT INTO transactions (pass_unique_id, transaction_id, transaction_date, transaction_source, transaction_type, has_notification_service_data, encoded_transaction, cloudkit_archived, service_identifier) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
DELETE FROM transactions  WHERE pass_unique_id = ? AND transaction_id = ?
DELETE FROM transactions  WHERE pass_unique_id = ? AND service_identifier = ?
SELECT encoded_transaction FROM transactions WHERE pass_unique_id = ? AND ((? OR has_notification_service_data == ?) OR ((? OR transaction_type == ?) AND (? OR transaction_type != ?))) AND transaction_date >= ? AND transaction_date <= ?
ORDER BY transaction_date ASC LIMIT ?
ORDER BY transaction_date DESC LIMIT ?
%@ AND transaction_source != 0 %@
%@ AND transaction_source == 0 %@
SELECT encoded_transaction FROM transactions WHERE transaction_id = ?
SELECT encoded_transaction FROM transactions WHERE service_identifier = ?
SELECT pass_unique_id FROM transactions WHERE transaction_id = ?
SELECT pass_unique_id FROM transactions WHERE service_identifier = ?
DELETE FROM transactions WHERE pass_unique_id = ?
DELETE FROM transactions WHERE pass_unique_id = ? AND transaction_id NOT IN (SELECT transaction_id FROM transactions WHERE pass_unique_id = ? ORDER BY transaction_date DESC LIMIT ?)
SELECT felica_transit_applet_state FROM pass WHERE unique_id = ?
UPDATE pass SET felica_transit_applet_state = ? WHERE unique_id = ?
INSERT INTO ephemeral_transactions (pass_unique_id, transaction_id) VALUES (?, ?)
DELETE FROM ephemeral_transactions WHERE pass_unique_id = ?
SELECT transaction_id FROM ephemeral_transactions WHERE pass_unique_id = ? LIMIT 1
SELECT last_add_value_amount FROM pass WHERE unique_id = ?
UPDATE pass SET last_add_value_amount = ? WHERE unique_id = ?
SELECT pending_add_value_date FROM pass WHERE unique_id = ?
UPDATE pass SET pending_add_value_date = ? WHERE unique_id = ?
SELECT encoded_transaction FROM transactions WHERE cloudkit_archived = ?
SELECT balances FROM pass WHERE unique_id = ?
UPDATE pass SET balances = ? WHERE unique_id = ?
SELECT unique_id, type_id, style, hash, logo_text, logo_image, background_color, label_color, foreground_color, delete_pending, background_image, nfc_payload, private_label, cobranded, device_payment_applications, device_primary_payment_application, device_primary_contactless_payment_application, device_primary_in_app_payment_application, preferred_payment_application, ingested_date, complete_hash, effective_payment_application_state, has_user_selectable_payment_applications, has_stored_value, settings, complete_hashes, issuer_country_code, available_actions, organization_name, felica_transit_applet_state, front_field_buckets, back_field_buckets, last_add_value_amount, localized_description, pending_add_value_date, express_pass_types_mask, complete_remote_hashes, supports_pp FROM pass
BEGIN IMMEDIATE TRANSACTION;
COMMIT;
ROLLBACK;
B8@?0
v32@?0@"NPKPassDescription"8Q16^B24
v32@?0@"PKPaymentTransaction"8Q16^B24
v16@?0@"NPKGizmoDatabase"8
-[NPKGizmoDatabase _setTransitAppletStateLocked:forPassWithUniqueID:]
-[NPKGizmoDatabase _setCurrentEphemeralTransactionIdentifier:forPassWithUniqueID:]
-[NPKGizmoDatabase _currentEphemeralTransactionIdentifierForPassWithUniqueID:]
-[NPKGizmoDatabase _setLastAddValueAmountLocked:forPassWithUniqueID:]
-[NPKGizmoDatabase _setPendingAddValueDateLocked:forPassWithUniqueID:]
-[NPKGizmoDatabase _setPaymentBalancesLocked:forPassWithUniqueID:]
SELECT encoded_pass, encoded_image_sets, preferred_aid FROM pass
v20@?0B8^{sqlite3_stmt=}12
UPDATE pass SET nfc_payload=? WHERE unique_id=?
UPDATE pass SET private_label=?, cobranded=? WHERE unique_id=?
UPDATE pass SET device_primary_payment_application=?, preferred_payment_application=? WHERE unique_id=?
UPDATE pass SET device_primary_contactless_payment_application=?, device_primary_in_app_payment_application=? WHERE unique_id=?
UPDATE pass SET encoded_pass=?, encoded_image_sets=? WHERE unique_id=?
UPDATE pass SET logo_image=? WHERE unique_id=?
UPDATE pass SET background_image=? WHERE unique_id=?
UPDATE pass SET issuer_country_code=? WHERE unique_id=?
UPDATE pass SET express_pass_types_mask=? WHERE unique_id=?
UPDATE pass SET device_payment_applications=? WHERE unique_id=?
UPDATE pass SET ingested_date=? WHERE unique_id=?
UPDATE pass SET complete_hash=?, complete_hashes=? WHERE unique_id=?
UPDATE pass SET front_field_buckets=?, back_field_buckets=? WHERE unique_id=?
UPDATE pass SET available_actions=? WHERE unique_id=?
UPDATE pass SET organization_name=? WHERE unique_id=?
UPDATE pass SET localized_description=? WHERE unique_id=?
UPDATE pass SET effective_payment_application_state=? WHERE unique_id=?
UPDATE pass SET has_user_selectable_payment_applications=? WHERE unique_id=?
UPDATE pass SET encoded_pass=? WHERE unique_id=?
UPDATE pass SET has_stored_value=? WHERE unique_id=?
UPDATE pass SET settings=? WHERE unique_id=?
UPDATE pass SET complete_remote_hashes=complete_hashes
-[NPKGizmoDatabase setPreferredPaymentApplication:forPaymentPass:]
-[NPKGizmoDatabase preferredPaymentApplicationForPaymentPass:]
@16@?0@"NSArray"8
v32@?0@"NSString"8@"NPKGizmoDatabaseManifestEntry"16^B24
v48@?0@"PKPass"8@"NPKPassDescription"16Q24Q32^B40
SELECT value FROM key_value_store WHERE KEY="version"
INSERT INTO key_value_store (key, value) VALUES ("version", "%ld")
UPDATE key_value_store SET value="%ld" WHERE key="version"
PRAGMA table_info('%@')
passDBIsAvailable
TB,N,V_passDBIsAvailable
database
T^{sqlite3=},R,D
deleteStatement
T^{sqlite3_stmt=},R,D
insertStatement
selectPassDataStatement
selectPassAndImageSetsDataStatement
selectPassDiffStatement
insertDiffStatement
T^{sqlite3_stmt=},R
updateDeletePendingStatement
updatePreferredAIDStatement
selectPreferredAIDStatement
selectTransactionWithIdentifierStatement
selectTransactionWithServiceIdentifierStatement
deleteTransactionsForPassStatement
trimTransactionsForPassStatement
selectTransitAppletStateForPassStatement
updateTransitAppletStateForPassStatement
insertEphemeralTransactionStatement
deleteEphemeralTransactionByPassUniqueIDStatement
currentEphemeralTransactionIdentifierStatement
selectLastAddValueAmountForPassStatement
updateLastAddValueAmountForPassStatement
selectPendingAddValueDateForPassStatement
updatePendingAddValueDateForPassStatement
selectCloudKitArchivedTransactionsStatement
T@"NSData",R,D
T@"NSDictionary",R,D
passDescriptions
T@"NSArray",R
numberOfPasses
TQ,R,N
NPKGizmoDatabaseChangedNotification
_NPKGizmoDatabaseExternallyChanged
WasNo-Op
WasFirstUnlock
NPKGizmoDatabasePassAddedNotification
NPKGizmoDatabasePassUpdatedNotification
NPKGizmoDatabasePassRemovedNotification
NPKGizmoDatabaseTransactionAddedOrUpdatedNotificationName
NPKGizmoDatabaseTransactionExplicitlyRemovedNotificationName
NPKGizmoDatabaseTransactionNotificationTransactionKey
NPKGimzoDatabaseTransactionNotificationPassUniqueIdentifierKey
Pass
PrimaryUsagePage
PrimaryUsage
NPSButtonListener
v40@?0^v8^v16^v24^{__IOHIDEvent=}32
buttonHandler
T@?,C,N,V_buttonHandler
hidSystemClient
T^{__IOHIDEventSystemClient=},N,V_hidSystemClient
hidSystemQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_hidSystemQueue
-[NPKProtoRemovePassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoRemovePassRequest.m
unrecognizedReconciledStateHash
libraryPassSyncState
hasUnrecognizedReconciledStateHash
T@"NSData",&,N,V_unrecognizedReconciledStateHash
hasLibraryPassSyncState
T@"NPKProtoPassSyncState",&,N,V_libraryPassSyncState
paymentCredential
passURL
summaryMetadataDescription
statusDescription
rank
productIdentifier
-[NPKProtoStandalonePaymentRemoteCredential writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentRemoteCredential.m
self->_paymentCredential != nil
T@"NPKProtoStandalonePaymentCredential",&,N,V_paymentCredential
hasPassURL
T@"NSString",&,N,V_passURL
hasSummaryMetadataDescription
T@"NSString",&,N,V_summaryMetadataDescription
hasStatusDescription
T@"NSString",&,N,V_statusDescription
hasPaymentPass
T@"NPKProtoStandalonePaymentPass",&,N,V_paymentPass
hasRank
TI,N,V_rank
hasProductIdentifier
T@"NSString",&,N,V_productIdentifier
T@"NSMutableArray",&,N,V_products
acadia
orbit
pioneer
cardPNO
T@"NSString",&,N,V_cardPNO
cardFlow
T@"NSString",&,N,V_cardFlow
cardID
T@"NSString",&,N,V_cardID
cardType
T@"NSString",&,N,V_cardType
cardIssuer
T@"NSString",&,N,V_cardIssuer
cardProduct
T@"NSString",&,N,V_cardProduct
cardEncryptionScheme
T@"NSString",&,N,V_cardEncryptionScheme
HalfpipeA
HalfpipeD
HalfpipeF
SUICA_COMMUTER_AD
SUICA_COMMUTER_BC
SUICA_COMMUTER_AC
SUICA_PERSONALIZED
SUICA_ANONYMOUS
Green
Slalom
%@_%@
Your Name Here (This isn't a bug)
0000
%@-flow %@ Card
card id %@
%@ : %@ Suica Card
Krypton
Krypton w/ %@
Pioneer card
BMAC
Orbit card
SPTCC
Neon
Argon
Helium
Xenon
Card
Flow
received certificates..fetching request
cardID=%@&nonce=%@&nonceSignature=%@&leaf=%@
flow=%@&pnoName=%@&type=%@&productName=%@&issuer=%@&nonce=%@&nonceSignature=%@&leaf=%@
flow=%@&pnoName=%@&issuer=%@&cardType=transit&nonce=%@&nonceSignature=%@&leaf=%@
flow=%@&pnoName=%@&nonce=%@&nonceSignature=%@&leaf=%@&issuer=Acadia
flow=%@&pnoName=%@&type=%@&nonce=%@&nonceSignature=%@&leaf=%@
flow=%@&pnoName=%@&nonce=%@&nonceSignature=%@&leaf=%@
String sent to passman: %@
https://passman.apple.com:81/index.php/getCardData/index
POST
application/x-www-form-urlencoded
Content-type
Error: %@
Kista response: %@
Error in Kista response dict: %@
Kista response:: %@
Called completion with nil
responseDict: %@
encryptedData: %@
encryptedData
activationData: %@
activationData
ephemeralKey
wrappedKey
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
NPKServiceModeRequestStateChanged
serviceModeRequested
TB,N,V_serviceModeRequested
provisioningDataBytes
hasProvisioningDataBytes
T@"NSData",&,N,V_provisioningDataBytes
paymentPasses
-[NPKProtoStandalonePaymentPassListResponse writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentPassListResponse.m
T@"NSMutableArray",&,N,V_paymentPasses
setAuthRandomIfNotPaired
hasSetAuthRandomIfNotPaired
TB,N,V_setAuthRandomIfNotPaired
currentBalance
creditLimit
-[NPKProtoStandaloneCreditAccountCredential writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandaloneCreditAccountCredential.m
hasCurrencyCode
T@"NSString",&,N,V_currencyCode
hasCurrentBalance
Td,N,V_currentBalance
hasCreditLimit
Td,N,V_creditLimit
v32@?0@"NPKWorkQueueItem"8Q16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/NPKWorkQueue.m
Work queue: %@ Item transaction
remainingWork
T@"NSMutableArray",&,N,V_remainingWork
performingWork
TB,N,V_performingWork
T@"NSObject<OS_dispatch_queue>",N,V_callbackQueue
takeOutTransactions
TB,N,V_takeOutTransactions
workQueueName
T@"NSString",&,N,V_workQueueName
T@"NPKOSTransaction",R,N,V_transaction
workBlock
T@?,R,N,V_workBlock
hasSubtitle
T@"NSMutableArray",&,N,V_setupFields
hasProduct
T@"NPKProtoStandalonePaymentSetupProduct",&,N,V_product
-[NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest.m
cardAIDs
T@"NSMutableArray",&,N,V_cardAIDs
com.apple.expressPassController
v32@?0@"NSString"8@"NSSet"16^B24
v24@?0@"PKExpressPassInformation"8^B16
currentTransactionPass
T@"PKPass",&,N,V_currentTransactionPass
passLibrary
T@"PKPassLibrary",R,W,N,V_passLibrary
expressPassesInformation
T@"NSSet",&,V_expressPassesInformation
expressPasses
T@"NSDictionary",&,V_expressPasses
distributedNotificationCenter
T@"NSDistributedNotificationCenter",R,W,N,V_distributedNotificationCenter
currentTransactionExpressPassInformation
T@"PKExpressPassInformation",&,N,V_currentTransactionExpressPassInformation
T@"<NPKExpressPassControllerDelegate>",W,V_delegate
NPKExpressPassControllerStatusWaitingForField
NPKExpressPassControllerStatusFieldDetected
NPKExpressPassControllerStatusTransactionStarted
NPKExpressPassControllerStatusTransactionCompleted
NPKExpressPassControllerStatusTransactionFailed
Unknown NPKExpressPassControllerStatus %lu
missing
hasMissing
TB,N,V_missing
applyRestrictions
hasApplyRestrictions
TB,N,V_applyRestrictions
hasBalanceBytes
T@"NSData",&,N,V_balanceBytes
-[NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext.m
self->_secondaryManualEntryStepContext != nil
com.apple.nanopassbook.lacoordinator
localAuthenticationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_localAuthenticationQueue
completedContext
T@"LAContext",&,N,V_completedContext
completedCredential
T@"NSData",&,N,V_completedCredential
completedError
T@"NSError",&,N,V_completedError
-[NPKProtoPass writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoPass.m
fieldType
currentValue
-[NPKProtoStandalonePaymentSetupField writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentSetupField.m
Ti,N,V_fieldType
hasCurrentValue
T@"NSString",&,N,V_currentValue
Text
Date
Label
Footer
Picker
-[NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest.m
unlockRequired
hasUnlockRequired
TB,N,V_unlockRequired
com.apple.NanoPassKit.AddPaymentPass
-[NPKProtoMarkPaymentPassForDeleteRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoMarkPaymentPassForDeleteRequest.m
relevantText
-[NPKProtoRelevantPassTuple writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoRelevantPassTuple.m
hasRelevantText
T@"NSString",&,N,V_relevantText
NPKEnforcedPasscodePolicyChina
Unexpected Enforced Passcode Policy:%lu
content
-[NPKProtoStandalonePingRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePingRequest.m
nil != self->_content
T@"NSString",&,N,V_content
NPKDoubleClickClientSuppressionChangedNotification
com.apple.nanopasskit.NPKDoubleClickClientSuppressor
Double click client suppression
suppressionAssertion
T@"NPKAssertion",&,N,V_suppressionAssertion
suppressionRequestTokens
T@"NSMutableIndexSet",&,V_suppressionRequestTokens
nextSuppressionRequestToken
TQ,N,V_nextSuppressionRequestToken
suppressorQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_suppressorQueue
readerModeFields
-[NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest.m
T@"NSMutableArray",&,N,V_readerModeFields
signedData
certsBytes
signatureInfoBytes
hasSignedData
T@"NSData",&,N,V_signedData
hasCertsBytes
T@"NSData",&,N,V_certsBytes
hasSignatureInfoBytes
T@"NSData",&,N,V_signatureInfoBytes
hasAllowsReaderModeEntry
hasCardType
T@"NSMutableArray",&,N,V_heroImages
v32@?0@"<NPKBalanceField>"8Q16^B24
com.apple.NanoPassKitUI
PASS_DETAILS_HEADER_TRANSIT_BALANCE
NanoPassKitUI-Transit
v24@?0@"PKPaymentBalance"8^B16
T@"PKPaymentPass",R,N,V_pass
transitBalanceFields
T@"NSArray",R,N,V_transitBalanceFields
transitPassProperties
T@"PKTransitPassProperties",&,N,V_transitPassProperties
serverBalances
T@"NSSet",C,N,V_serverBalances
passcodeChanged
hasPasscodeChanged
TB,N,V_passcodeChanged
com.apple.NanoPasskit.NPKAccountPassManager
v24@?0@"PKAccount"8@"NSError"16
header
ACCOUNTPASS_INFO_AVAILABLE_CREDIT
AccountPass
ACCOUNTPASS_INFO_ACCOUNT_BALANCE
ACCOUNTPASS_INFO_AVAILABLE_CREDIT_FORMAT
T@"PKAccount",&,N,V_account
lastAccountUpdateDate
T@"NSDate",&,N,V_lastAccountUpdateDate
accountDetails
T@"NSMutableArray",&,N,V_accountDetails
accountIdentifier
T@"NSString",R,N,V_accountIdentifier
T@"<NPKAccountPassManagerDelegate>",W,N,V_delegate
NPKSharedWebServiceActiveDeviceDidChangeNotification
NPKSharedWebServiceDidChangeNotification
NPKSharedPeerPaymentWebServiceDidChangeNotification
NPKSharedPeerPaymentAccountDidChangeNotification
peerPaymentWebService
T@"PKPeerPaymentWebService",&,N,V_peerPaymentWebService
peerPaymentAccount
T@"PKPeerPaymentAccount",&,N,V_peerPaymentAccount
targetDevice
T@"NPKPaymentWebServiceCompanionTargetDevice",&,N,V_targetDevice
peerPaymentTargetDevice
T@"NPKPeerPaymentWebServiceCompanionTargetDevice",&,N,V_peerPaymentTargetDevice
connection
T@"NPKCompanionAgentConnection",&,N,V_connection
applicationIdentifier
hasApplicationIdentifier
T@"NSString",&,N,V_applicationIdentifier
conflictingExpressPassIdentifiers
conflictingReferenceExpressPassIdentifiers
T@"NSMutableArray",&,N,V_conflictingExpressPassIdentifiers
T@"NSMutableArray",&,N,V_conflictingReferenceExpressPassIdentifiers
hasCameraFirstProvisioningEnabled
v32@?0@"NSString"8@"NSString"16^B24
com.apple.nanopasskit.ostransaction
com.apple.nanopasskit.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/NPKOSTransaction.m
name
T@"NSString",R,C,N,V_name
NPKPeerPaymentConversationManagerRecipientUpdatedNotification
kNPKPeerPaymentConversationManagerRecipientPhoneOrEmail
kNPKPeerPaymentConversationManagerRecipient
kNPKPeerPaymentConversationManagerError
NPKPeerPaymentConversationManagerErrorDomain
com.apple.passkit.peerpayment.conversationmanager
v36@?0B8@"MSConversation"12@"PKPeerPaymentPerformResponse"20@"NSError"28
v28@?0B8@"PKPeerPaymentQuote"12@"NSError"20
v28@?0B8@"PKPeerPaymentPerformResponse"12@"NSError"20
v32@?0Q8@"PKPeerPaymentRecipient"16@"NSError"24
PEER_PAYMENT_NEGATIVE_BALANCE_ERROR_BODY
PeerPayment
PEER_PAYMENT_NEGATIVE_BALANCE_ERROR_BODY_NO_VALUE
PEER_PAYMENT_NEGATIVE_BALANCE_ERROR_TITLE
PEER_PAYMENT_NEGATIVE_BALANCE_ERROR_COMPACT_BODY
PEER_PAYMENT_UNAVAILABLE_ERROR_TITLE
PEER_PAYMENT_SEND_ERROR_MESSAGE_AMBIGUOUS_SENDER_ADDRESS
PEER_PAYMENT_SEND_ERROR_TITLE_CLOSED_OR_LOCKED
PEER_PAYMENT_SEND_ERROR_MESSAGE_CLOSED_OR_LOCKED
PEER_PAYMENT_SEND_MONEY_GENERIC_ERROR_TITLE
PEER_PAYMENT_SEND_MONEY_GENERIC_ERROR_MESSAGE
currentBalanceCurrency
quoteItems
totalFees
totalReceiveAmount
totalReceiveAmountCurrency
countryCode
fees
feesCurrency
sendAmount
sendAmountCurrency
receiveAmount
receiveAmountCurrency
totalAmount
totalAmountCurrency
supportedNetworks
merchantIdentifier
merchantCapabilities
currentRecipientAddressLookup
T@"NSString",&,N,V_currentRecipientAddressLookup
currentPeerPaymentController
T@"PKPeerPaymentController",W,N,V_currentPeerPaymentController
activeConversation
T@"MSConversation",&,V_activeConversation
senderPhoneOrEmail
recipientPhoneOrEmail
recipientDisplayName
T@"NSString",R,C,N
recipientFoundInContacts
recipient
T@"PKPeerPaymentRecipient",R,V_recipient
conversationContext
T@"NPKPeerPaymentConversationContext",&,N,V_conversationContext
welcome
-[NPKPaymentProvisioningFlowController(ReaderMode) contactlessCardIngester:didFailToIngestCardWithError:resetProvisioning:isRecoverable:]_block_invoke
v16@?0@"NSString"8
localizedTitle
transferValue
transferring
notFound
commuteCardAdded
plasticCardImages
READER_MODE_PROVISIONING_TRANSFER_VALUE_TITLE
READER_MODE_PROVISIONING_CARD_NOT_FOUND_TITLE
READER_MODE_PROVISIONING_TRANSFERRING_TITLE
READER_MODE_PROVISIONING_CARD_ADDED_TITLE
READER_MODE_PROVISIONING_TRANSFER_VALUE_SUBTITLE_FORMAT
READER_MODE_PROVISIONING_CARD_NOT_FOUND_SUBTITLE
READER_MODE_PROVISIONING_TRANSFERRING_SUBTITLE
READER_MODE_PROVISIONING_CARD_ADDED_DEFAULT_SUBTITLE_FORMAT
READER_MODE_PROVISIONING_CARD_ADDED_COMMUTE_SUBTITLE_FORMAT
-[NPKProtoAddPassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoAddPassRequest.m
hasAccountIdentifier
T@"NSString",&,N,V_accountIdentifier
<%@: %p unique ID %@ manifest hash %@ manifest %@ (pass type identifier %@, serial number %@, sequence counter %@)>
%@ %@ %@ (hash %@ seq %@)
sequenceCounter
manifest
T@"NSNumber",&,N,V_sequenceCounter
T@"NSDictionary",&,N,V_manifest
v32@?0@"NSString"8@"NPKPassSyncStateItem"16^B24
<%@: %p sync state hash: %@, items: %@>
syncStateItems
T@"NSMutableDictionary",&,N,V_syncStateItems
syncStateHash
T@"NSData",R,N
passSettings
hasPassSettings
TQ,N,V_passSettings
hasPhysicalCardImageURL
T@"NSString",&,N,V_physicalCardImageURL
hasIngestionState
Ti,N,V_ingestionState
hasIngestionProgress
Tf,N,V_ingestionProgress
ReaderModeIngestionStateDefault
ReaderModeIngestionStateCardNotFound
ReaderModeIngestionStateTransferValue
ReaderModeIngestionStateTransferring
ReaderModeIngestionStateCardAdded
ReaderModeIngestionStateCommuteCardAdded
acceptedChangeUUID
changeAccepted
fullPassRequired
-[NPKProtoPassSyncStateChangeProcessed writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoPassSyncStateChangeProcessed.m
nil != self->_acceptedChangeUUID
T@"NSData",&,N,V_acceptedChangeUUID
hasChangeAccepted
TB,N,V_changeAccepted
hasFullPassRequired
TB,N,V_fullPassRequired
mobile
Press Enter to start Apple
Pay verification for %s (unique ID %s)
Unknown state %s
Encountered error: %s
%s (%s)
Section: %s
Unknown (%@)
Item: %s
Choose a provisioning flow
%@ (%@)
Choose a payment product
You have %lu cards on file.
%@ (balance %@, credit limit %@)
Do you want to provision %@
Provisioning %lu credentials.
Secondary manual entry for %s %s %s
Do you want to provision a different card?
B24@?0@"PKPaymentSetupField"8@"NSDictionary"16
Setup requires that you complete the following %lu fields:
Nik Bar
4002290000002111
01 2017
 (MM yyyy)
Picker not yet implemented (%s)
%s: %s
Footer: %s
Accepting terms and conditions at URL %s.%s
 (Non-secure HTTP allowed for terms URL.)
Progress: %s
More information for %s (%s):
%s (%s)
Image: %s
Image URL: %s
Error: %s
Choose a verification option
Here are the fields that it wants: %s
Enter the verification code that you received via %s (%s).
Code
DK9N2M2GK6
com.apple.syndrome
3.5.4
Calling handler with request: %s
v16@?0@"PKAddPaymentPassRequest"8
 [%s]
]%*c
 Type "%s" for %s
Choose an option
testContext
T@"NPKTestAddPaymentPassRequestContext",&,N,V_testContext
testConfiguration
T@"PKAddPaymentPassRequestConfiguration",&,N,V_testConfiguration
No payment passes available to verify.
*** Logged in as 'root'. Switching to 'mobile'.
*** Unable to switch to 'mobile'. Test may not run correctly.
Press Enter to start Apple
Pay provisioning
Starting Apple
Pay provisioning
Press Enter to start issuer app provisioning
Starting issuer app provisioning
Starting Apple
Pay verification
Checking preconditions
Apple
Pay. It's cool. You can pay with cards like these ones:
Press Enter to continue.
Here are the available provisioning flows:
No remote credentials selected. Choosing manual entry.
Enter your card details.
If a command-line interface had a camera, we'd fetch your details that way. But it doesn't.
no payment products were returned. Continuing.
Provisioning finished.
Card not added.
Card added.
Choose a verification option:
603609
IMPORTANT:
The attached logging may contain the time and location of recent transactions you've made with Apple Pay. These logs greatly assist diagnosing and resolving issues.
tap-to-radar
Title
Description
Attachments
v32@?0@"NSURLQueryItem"8Q16^B24
tap-to-radar://new
ComponentID
AutoDiagnostics
phone,watch
Classification
Serious Bug
Reproducibility
I Didn't Try
<%@:%p> title:%@ body:%@
T@"NSString",R,N,V_title
T@"NSString",R,N,V_body
attachmentsPaths
T@"NSSet",R,N,V_attachmentsPaths
tapToRadarURL
T@"NSURL",R,N
hasCardAdded
hasError
T@"NPKProtoStandaloneError",&,N,V_error
com.apple.NanoPasskit.TransitPassesInfoManager
v32@?0@"NSString"8@"NPKTransitPassBalanceModel"16^B24
B16@?0@"NPKTransitPassBalanceModel"8
v16@?0@"PKTransitAppletState"8
passes
T@"NSSet",C
T@"<NPKTransitPassesInfoManagerDelegate>",W,V_delegate
objectUniqueID
T@"NSString",&,N,V_objectUniqueID
accountsRequiringProvisioningData
accountsOnDeviceData
hasAccountsRequiringProvisioningData
T@"NSData",&,N,V_accountsRequiringProvisioningData
hasAccountsOnDeviceData
T@"NSData",&,N,V_accountsOnDeviceData
dismissalTimer
T@"NSObject<OS_dispatch_source>",&,N,V_dismissalTimer
appletHistoryFetcher
T@"NPKTransitAppletHistoryFetcher",&,N,V_appletHistoryFetcher
expressTransitPass
T@"PKPass",&,N,V_expressTransitPass
expressTransitPaymentApplication
T@"PKPaymentApplication",&,N,V_expressTransitPaymentApplication
expressPassController
T@"NPKExpressPassController",R,N,V_expressPassController
transactionStartAppletState
T@"PKTransitAppletState",&,N,V_transactionStartAppletState
T@"<NPKExpressTransitInterfaceControllerDelegate>",W,N,V_delegate
T@"<NPKExpressTransitInterfaceControllerDataSource>",W,N,V_dataSource
-[NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest.m
-[NPKProtoStandalonePingResponse writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePingResponse.m
lastKnownReconciledPassSyncStateHash
passSegmentIndex
passSegmentTotal
-[NPKProtoPassSyncStateChange writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoPassSyncStateChange.m
nil != self->_changeUUID
nil != self->_uniqueID
T@"NSData",&,N,V_changeUUID
hasLastKnownReconciledPassSyncStateHash
T@"NSData",&,N,V_lastKnownReconciledPassSyncStateHash
Ti,N,V_changeType
hasSyncStateItem
T@"NPKProtoPassSyncStateItem",&,N,V_syncStateItem
hasPassData
hasPassSegmentIndex
TI,N,V_passSegmentIndex
hasPassSegmentTotal
TI,N,V_passSegmentTotal
hasBaseManifestHashForPartialUpdate
remoteAssetsForPartialUpdates
T@"NSMutableArray",&,N,V_remoteAssetsForPartialUpdates
serviceProviderIdentifier
serviceProviderCountryCode
serviceProviderSupportedNetworks
serviceProviderCapabilities
serviceProviderDictJson
action
merchantID
defaultSuggestions
hasServiceProviderIdentifier
T@"NSString",&,N,V_serviceProviderIdentifier
hasServiceProviderCountryCode
T@"NSString",&,N,V_serviceProviderCountryCode
T@"NSMutableArray",&,N,V_serviceProviderSupportedNetworks
T@"NSMutableArray",&,N,V_serviceProviderCapabilities
hasServiceProviderDictJson
T@"NSString",&,N,V_serviceProviderDictJson
hasAction
T@"NSString",&,N,V_action
hasMerchantID
T@"NSString",&,N,V_merchantID
T@"NSMutableArray",&,N,V_defaultSuggestions
idx (%tu) is out of range (%tu)
lifecycleStates
activationStates
appletsBytes
lifecycleStatesCount
T^I,R,N
activationStatesCount
T@"NSMutableArray",&,N,V_appletsBytes
cachedHeroImages
hasStepIdentifier
T@"NSMutableArray",&,N,V_cachedHeroImages
NPKBalanceFieldValueTransitPropertiesIdentifier_c3d70481-6a87-4a4d-adb0-4d92e778ad5d
label
formattedValue
isPrimaryBalance
<%@:%p> {label:%@ formattedValue:%@ isPrimaryBalance:%@ ID:%@}
T@"NSString",R,N,V_label
T@"NSString",R,N,V_formattedValue
TB,R,N,V_isPrimaryBalance
true
false
currency
depositAmount
minLoadedBalance
maxLoadedBalance
requiredFields
readerModeMetadataJson
digitalIssuanceMetadata
readerModeResourcesJson
minimumReaderModeBalance
hasCurrency
T@"NSString",&,N,V_currency
hasDepositAmount
T@"NSString",&,N,V_depositAmount
hasMinLoadedBalance
T@"NSString",&,N,V_minLoadedBalance
hasMaxLoadedBalance
T@"NSString",&,N,V_maxLoadedBalance
T@"NSMutableArray",&,N,V_requiredFields
hasReaderModeMetadataJson
T@"NSString",&,N,V_readerModeMetadataJson
hasDigitalIssuanceMetadata
T@"NPKProtoStandalonePaymentDigitalIssuanceMetadata",&,N,V_digitalIssuanceMetadata
hasReaderModeResourcesJson
T@"NSString",&,N,V_readerModeResourcesJson
hasMinimumReaderModeBalance
T@"NSString",&,N,V_minimumReaderModeBalance
messageIdentifier
T@"NSString",C,N,V_messageIdentifier
T@,C,N,V_completionHandler
errorHandler
T@?,C,N,V_errorHandler
%@;%@;%@
%@/%@ (%@/%@)
<%@> <%@> <%@>
com.apple.NPKPaymentWebServiceCompanionTargetDevice
v24@?0@"NSError"8@"NRActiveDeviceAssertion"16
v36@?0B8@"NSData"12@"NSData"20@"NSError"28
v32@?0@"PKPaymentDeviceRegistrationData"8@"NSString"16@"NSError"24
v16@?0@"CLLocation"8
v24@?0@"PKPaymentDeviceProvisioningData"8@"NSError"16
not present
present
6BD289D4-EFF7-4E48-A3AD-776E924C8723
com.apple.seld
Configuration
passcode
wrist detection
retrieveTransactions-%@
SetExpressPassIdentifier-%@
v32@?0Q8@"NSString"16@"NSSet"24
RemoveExpressPasses-%@
RemoveExpressPass-%@
v24@?0@"NSSet"8@"NSSet"16
ConflictingPassIdentifiers-%@
SetBalanceReminder-%@
BalanceReminder-%@
SetCommutePlanReminder-%@
CommutePlanReminder-%@
EnableServiceModeIdentifier
remotePassUpdate
DC264F98-B0E2-4D96-9248-663A801E4FB1
v32@?0Q8@"PKPaymentAvailableProductsResponse"16@"NSError"24
B16@?0q8
v40@?0@"NSError"8@"PKPaymentPass"16@"NSSet"24q32
v24@?0Q8@"NSSet"16
NPKTransactionDefaultsQueueOne
NPKWebServiceContextQueueOne
NPKCompanionPeerPaymentRegistrationQueueOne
NPKCompanioniCloudSignoutQueueOne
B68E1DBD-8CE4-4684-8F65-FF0AF2040D4E
AB2653AC-2D55-4D7D-9BFB-7D99AA89708B
66A5B423-7CBE-423C-A13B-6389E27D63B9
TQ,N,V_context
outstandingRequests
T@"NSMutableDictionary",&,N,V_outstandingRequests
responseQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
provisioningActiveDeviceAssertion
T@"NRActiveDeviceAssertion",&,N,V_provisioningActiveDeviceAssertion
remoteDeviceAssertionManager
T@"NPKTargetDeviceAssertionManager",&,N,V_remoteDeviceAssertionManager
manager
T@"NPKTapToRadarManager",&,N,V_manager
T@"<NPKPaymentWebServiceCompanionTargetDeviceDelegate>",W,N,V_delegate
passcodeChangeDelegate
T@"<NPKPaymentWebServiceCompanionTargetDevicePasscodeChangeDelegate>",W,N,V_passcodeChangeDelegate
flowIdentifier
creditAccountCredential
hasFlowIdentifier
T@"NSString",&,N,V_flowIdentifier
hasCreditAccountCredential
T@"NPKProtoStandaloneCreditAccountCredential",&,N,V_creditAccountCredential
regions
partnerIdentifier
partnerName
supportedProtocols
supportedProvisioningMethods
flags
hsa2Requirement
imageAssetURLs
suppressPendingPurchases
paymentOptions
requestedProvisioningMethods
hasDisplayName
T@"NSString",&,N,V_displayName
T@"NSMutableArray",&,N,V_regions
hasPartnerIdentifier
T@"NSString",&,N,V_partnerIdentifier
hasPartnerName
T@"NSString",&,N,V_partnerName
T@"NSMutableArray",&,N,V_supportedProtocols
hasSupportedProvisioningMethods
Tq,N,V_supportedProvisioningMethods
hasFlags
Tq,N,V_flags
hasHsa2Requirement
Tq,N,V_hsa2Requirement
hasImageAssetURLs
T@"NPKProtoStandalonePaymentSetupProductImageAssetURLs",&,N,V_imageAssetURLs
hasSuppressPendingPurchases
TB,N,V_suppressPendingPurchases
T@"NSMutableArray",&,N,V_paymentOptions
T@"NSMutableArray",&,N,V_requestedProvisioningMethods
-[NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest.m
T@"NSMutableArray",&,N,V_verificationChannels
upgradeStatus
hasUpgradeStatus
Ti,N,V_upgradeStatus
expressPassInformations
T@"NSMutableArray",&,N,V_expressPassInformations
KeepAlive
UpgradeStarted
UpgradeCompleted
ExpressModeSetupCompleted
supportedServerVersions
clientInfoHTTPHeader
-[NPKProtoStandaloneInitializationResponse writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandaloneInitializationResponse.m
supportedServerVersionsCount
T^i,R,N
hasClientInfoHTTPHeader
T@"NSString",&,N,V_clientInfoHTTPHeader
com.apple.NPKCompanionServer.PaymentPassesChanged
com.apple.NPKCompanionServer.DefaultCardChanged
com.apple.NPKCompanionAgent.Server
priority
hasPriority
TQ,N,V_priority
Tq,N,V_cardType
hasSupportedProtocols
Tq,N,V_supportedProtocols
bridge:root=com.apple.NanoPassbookBridgeSettings&path=ADD_CARD
bridge:root=com.apple.NanoPassbookBridgeSettings&path=ADD_CARD&passTypeIdentifier=%@&passSerialNumber=%@
6C4614A2-1ECC-4405-9FEE-B5F0A5666961
v32@?0Q8Q16@"NSError"24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/NPKCompanionAgentConnection.m
v16@?0@"PKPaymentApplication"8
v16@?0@"PKPaymentWebServiceContext"8
v16@?0@"NPKCompanionAgentConnection"8
v16@?0@"PKPeerPaymentWebServiceContext"8
v16@?0@"PKPaymentBalanceReminder"8
v16@?0d8
Error connecting to target device.
v40@?0@"NSString"8Q16@"NSData"24@"NSError"32
cachedUniqueIDs
T@"NSMutableSet",&,V_cachedUniqueIDs
cachedPasses
T@"NSMutableDictionary",&,V_cachedPasses
connectionAvailableActions
T@"NSMutableDictionary",&,N,V_connectionAvailableActions
connectionUnavailableWebServiceContext
T@"PKPaymentWebServiceContext",&,N,V_connectionUnavailableWebServiceContext
queueAppropriateFailedActions
TB,N,V_queueAppropriateFailedActions
hasQueuedPaymentPasses
TB,N,V_hasQueuedPaymentPasses
T@"<NPKCompanionAgentConnectionDelegate>",W,N,V_delegate
com.apple.NanoPassKit.NPKCompanionAgentConnection.PassesChanged
com.apple.NanoPassKit.NPKCompanionAgentConnection.DefaultCardChanged
com.apple.NanoPassKit.NPKCompanionAgentConnection.ActiveWatchWebServiceChanged
selectedVerificationChannelIdentifier
-[NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest.m
hasSelectedVerificationChannelIdentifier
T@"NSString",&,N,V_selectedVerificationChannelIdentifier
metadataFields
TI,N,V_metadataFields
passcodeMeetsPolicy
hasPasscodeMeetsPolicy
TB,N,V_passcodeMeetsPolicy
manifestEntry
-[NPKProtoPassSyncStateItem writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoPassSyncStateItem.m
nil != self->_serialNumber
nil != self->_manifestHash
hasSequenceCounter
TI,N,V_sequenceCounter
manifestEntrys
T@"NSMutableArray",&,N,V_manifestEntrys
-[NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest.m
failedPrecondition
passIDs
Ti,N,V_failedPrecondition
T@"NSMutableArray",&,N,V_passIDs
Passcode
WristDetection
AppleAccount
-[NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse.m
T@"NSMutableArray",&,N,V_moreInfoItems
relativePath
fileHash
-[NPKProtoPassSyncStateManifestEntry writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/Generated/NPKProtoPassSyncStateManifestEntry.m
nil != self->_relativePath
nil != self->_fileHash
T@"NSString",&,N,V_relativePath
T@"NSString",&,N,V_fileHash
identifiers
T@"NSMutableArray",&,N,V_identifiers
com.apple.passkit
General
Relevance
Sync
cancelled
actualUniqueID
currentUniqueIDs
hasCancelled
TB,N,V_cancelled
hasNeedsUnlock
hasActualUniqueID
T@"NSString",&,N,V_actualUniqueID
T@"NSMutableArray",&,N,V_currentUniqueIDs
com.apple.mockPeerPaymentAccountManager
minimumTransferAmounts
maximumTransferAmounts
2000.0
active
com.apple.NanoPassbook.Relevancy
com.apple.Passbook.mirrored
com.apple.nanopassbook
DefaultPaymentPass
KnownPaymentPushTopics
IEFTPPUniqueID
IEFTPPApplicationIdentifier
NeedsPaymentOptions
com.apple.NPKErrorDomain
com.apple.NanoPassKit.NPKAppleAccountChanged
com.apple.NanoPassKit.NPKAppleAccountDeleted
com.apple.NanoPassKit.NPKSharedPaymentWebServiceChanged
com.apple.NanoPassKit.NPKSharedPeerPaymentWebServiceChanged
com.apple.NanoPassKit.NPKPeerPaymentAccountChangedDarwinNotification
com.apple.managedconfiguration.passcodechanged
NPKEndedServiceModeRequestDarwinNotification
NPKCancelledServiceModeRequestDarwinNotification
NPKPeerPaymentTermsAndConditionsAcceptanceNeededDarwinNotification
NPKProvisionAccountPassOnUnlock
NPKDeviceUnlockedForPendingProvisioningDarwinNotification
com.apple.NanoPassKit.PresentApplePaySetupAlert
AppName
NPKSandboxPresentationRequestNotification
NPKSandboxPassesUniqueIDsKey
NPKSandboxSelectedPassUniqueID
NPKTestApprovalConfirmationAlertDistributedNotification
com.apple.nanoPassKit.presentTapToRadarDistributedNotification
NPKTapToRadarTitleUserNotificationKey
NPKTapToRadarBodyUserNotificationKey
NPKTapToRadarAttachmentsPathsNotificationKey
v32@?0@8Q16^B24
npkHasContent
isAllCaps
NPKClassFromString
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-944.2/NanoPassKit/NPKUtilities.m
com.apple.NanoPassKit.LastReturnedDevice
B16@?0@"NRDevice"8
com.apple.private.alloy.connectivityindicator
CPSharedResourcesDirectory
AppSupport
/Library/NanoPasses/
PaymentCards
NanoPaymentWebServiceContext.archive
NanoPaymentWebServiceBackgroundContext.archive
NanoPeerPaymentWebServiceContext.archive
NanoPeerPaymentAccount.archive
RasterizedPasses
PassSyncEngine.archive
NPKInternalSyncedSettingsChangedRemotely
NPKInternalExpressPassesInformationChangedRemotely
NPKSyncedSettings
com.apple.nanopassbook.syncedsettingschanged
NPKExpressPassesInformation
com.apple.nanopassbook.expresspassesinformationchanged
~watch
main-screen-scale
NPSFixedPriorityRootQueue
did not set
/Library/Managed Preferences/mobile
plist
WatchOS
@"NSString"16@?0@"<NSObject>"8
self <> ''
NPKRemotePassUpgradeStatusUpgradeStarted
NPKRemotePassUpgradeStatusUpgradeCompleted
NPKRemotePassUpgradeStatusExpressModeSetupCompleted
unkown Pass Upgrade status:%ld
IDS_COMMUNICATION_ERROR
file
%@.%@
NPKRelevantTransitNotificationsCheckInterval
B16@?0@"NSDictionary"8
com.apple.nanopassbook.payment.field-detect-warning.outside-quick-pay
com.apple.nanopassbook.payment.field-detect-warning.in-quick-pay
com.apple.nanopassbook.payment.requested
com.apple.nanopassbook.payment.requested.no-passes
com.apple.nanopassbook.payment.requested.no-passcode
com.apple.nanopassbook.payment.requested.while-locked
com.apple.nanopassbook.payment.requested.while-busy
com.apple.nanopassbook.payment.requested.while-restricted
com.apple.NPKCompanionAgent.bulletins
com.apple.NPKCompanionAgent.started
com.apple.NPKCompanionAgent.WillSetExpressTransit
NPKDefaultExpressPassUniqueID
NPKDefaultApplicationIdentifier
ECFC47E2-4B1A-404F-ADA3-D23DF4B06A29
C9D5B8D6-68B4-4C31-9CB7-4CA5309D4C83
14EA79AF-4D88-460A-8900-04EA1EB9503C
D5C62ED0-2B9A-456C-A2B0-384475062313
4CAAF5A2-6DD3-43EE-B2D8-C3D8C4997856
en_US
DisablePassSync
MigrationReregisterNeeded
81603B90-6702-446B-A559-CBA22E92C0B8
%@:%ld
. %@
v24@?0@"PKAssertion"8@"NSError"16
NPKCompanionAgent
com.apple.NanoPassRenderingService
StoreDemoMode
com.apple.demo-settings
ENABLED
disabled
PKBarcodeFormat
PKBarcodeFormatUnknown, PKBarcodeFormatQR, PKBarcodeFormatPDF417, PKBarcodeFormatAztec, PKBarcodeFormatCode128
PartialPassCache
NPKExpressTransactionStatusInProgress
NPKExpressTransactionStatusFailed
NPKExpressTransactionStatusCompletedPendingDetails
NPKExpressTransactionStatusCompleted
Unexpected Express Transaction Status:%lu
Notice: Standalone: initialized IDS service in NPKStandaloneService
Notice: Standalone: Received Incoming NPKProtoStandalonePingRequest:  %@
Notice: Standalone: Sending  Outgoing NPKProtoStandalonePingResponse: %@
Error: Standalone: IDS failed to send NPKProtoStandalonePingResponse: %@, error:  %@
Notice: Standalone: Received Incoming NPKProtoStandaloneInitializationRequest:  %@
Notice: Standalone: Sending  Outgoing NPKProtoStandaloneInitializationResponse: %@
Error: Standalone: IDS failed to send NPKProtoStandaloneInitializationResponse: %@, error:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowChooseRemoteCredentialsRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest
Notice: Setup Required %lu Credit Cards Fields:
Notice: 
%@: length %lu
Notice: 
%@ (%@): length %lu
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentPassListRequest:  %@
Notice: Standalone: Sending  Outgoing NPKProtoStandalonePaymentPassListResponse: %@
Error: Standalone: IDS failed to send NPKProtoStandalonePaymentPassListResponse: %@, error:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest:  %@
Notice: Standalone: Received Incoming NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest:  %@
Error: service: %@, account: %@, incomingUnhandledProtobuf: %@, fromID: %@, context: %@
Error: Standalone: IDS failed to send NPKProtoStandalonePaymentProvisioningFlowResponse: %@, error:  %@
Error: Standalone: IDS failed to send NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse: %@, error:  %@
Notice: Fields requiring local device entry: %@
Notice: Pass sync service: Evaluating whether to sync now
Current incoming change: %@
Previous incoming change: %@
Previous incoming change date: %@
Current outgoing change: %@
Previous outgoing change: %@
Previous outgoing change date: %@
Notice: Pass sync service: Evaluated whether to sync now
Incoming change allows sync: %d
Outgoing change allows sync: %d
Notice: Pass sync service: starting
Notice: Pass sync service: pass library changed
Notice: Pass sync service: pass settings changed for pass with unique ID %@
Error: Failed to send pass settings: %@
Notice: Pass sync service: sent pass settings
Message ID: %@
Protobuf: %@
Notice: Pass sync service: catalog changed
Error: Failed to send catalog: %@
Notice: Pass sync service: sent catalog
Message ID: %@
Protobuf: %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Subclasses must override)
Notice: Pass sync service: storing large pass data segment
change UUID: %@
segment index: %u
total pass segments: %u
Notice: Pass sync service: this is the last segment of pass data
retrieved combined pass data: %@
Notice: Pass sync service: not providing state change to sync engine
change UUID: %@
Notice: Pass sync service: pass settings changed with protobuf %@
Warning: Pass sync service: No unique ID or no pass settings in protobuf
Notice: Pass sync service: catalog changed with protobuf %@
Warning: Dropping state change message
Error: Failed to send pass sync state change: %@
Notice: Pass sync service: sent state change IDS message
Message ID: %@
Protobuf: %@
Notice: Pass sync service: splitting state change into %u pieces
Notice: Pass sync service: sending state change IDS message for segment index %u (%u total segments)
Change UUID: %@
Warning: Dropping state change processed message
Error: Failed to send pass sync change accepted: %@
Notice: Pass sync service: sent state change processed IDS message
Message ID: %@
Protobuf: %@
Warning: Dropping reconciled state unrecognized message
Error: Failed to send pass sync reconciled state unrecognized: %@
Notice: Pass sync service: sent reconciled state unrecognized IDS message
Message ID: %@
Protobuf: %@
Warning: Dropping proposed reconciled state message
Error: Failed to send pass sync proposed reconciled state message: %@
Notice: Pass sync service: sent proposed reconciled state IDS message
Message ID: %@
Protobuf: %@
Warning: Dropping reconciled state accepted message
Error: Failed to send pass sync reconciled state accepted: %@
Notice: Pass sync service: sent reconciled state accepted IDS message
Message ID: %@
Protobuf: %@
Notice: Pass sync service: got pass sync engine state changed
Notice: Pass sync service: received state change processed delegate method invoked
Change: %@
Accepted: %d
Notice: Pass sync service: finished processing change delegate method invoked
Change: %@
Notice: Companion pass sync service: syncing when appropriate following change processed
Notice: Pass sync service: Providing updated library state
Sync state: %@
Will sync if necessary: %s
Notice: Pass sync service: Not syncing after providing updated library state, since change is already accounted for in reconciled state
Notice: Pass sync service: Not syncing after providing updated library state, since change is already accounted for in processing change on top of reconciled state
Notice: Pass sync service: requesting sync when appropriate following update to library state
Notice: Pass sync service: Archive timer fired; writing pass sync engine archive to disk
Error: Pass sync service: unable to write pass sync engine archive to disk
Error: %@
Notice: Pass sync service: Syncing immediately while appropriate
Notice: Pass sync service: Setting sync timer because syncing now is not appropriate
Notice: Pass sync service: Sync timer is already set
Notice: Pass sync service: Setting timer for %.2f seconds before syncing
Warning: Pass sync service: Unable to read pass sync engine archive. This is expected in the case of a fresh device install.
Error: %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot calculate npk complete hash for version %llu)
Notice: addValuePending: %@ for pass %@ time delta %f
Notice: addValuePending: npkHandleTransitValuePendingAmount %@ withBalance %@ forPassWithID %@
Notice: addValuePending: npkClearTransitValuePendingStateIfNecessaryForPassWithID %@ withBalance %@
Notice: addValuePending: Balance is greater than before pending top up, clearing value pending state
Error: Request create NPKPeerPaymentStatus with unexpected number:%@
Notice: Starting Parse payload for PayloadID:%@ payload:%@
Notice: found valid amount:%@
Warning: Not supported value from info:%@
Warning: Not supported currency code from info:%@
Warning: PayloadID:%@ Not allowed
Notice: Device may need data usage resolution
Notice: Currently resolving data usage
Notice: Session source received PMU button event
Notice: Session source is delegating button event
Notice: Outstanding payment sessions; ignoring
Notice: Session source initial precondition state is %d
Notice: No initial pass; session source reporting no cards
Notice: Session source providing session to delegate
Notice: Payment session failed to start; session source reporting busy
Notice: Service %@ sent protobuf (%@) destinations %@ priority %ld options %@: identifier %@ success %d error %@
Notice: Standalone: checking webService %s: 
Notice: Standalone: checking controller initialization %s: 
Notice: Standalone: starting provisioning flow
Error: Past initialization step; cannot start provisioning flow!
Notice: Provided credential %@ does not match current credential %@; going back to requirements
Notice: Manual entry fields %@ do not match required fields %@; going back to requirements
Notice: Standalone: Handling manual entry fields: %@ with fields model fields: %@
Notice: Standalone: Updating %@
Warning: Standalone: no model field with identifier %@ to update!
Notice: Standalone: Handling product selection: %@ (%@)
Notice: Standalone: id %@ state %lu response status %lu
Notice: Standalone: Start secondary manual entry with %lu fields following product disambiguation.
Error: Not on product disambiguation step; cannot choose product!
Error: Not on terms step; cannot accept terms!
Notice: Standalone: More information acknowledged
Notice: Standalone: starting issuer verification flow for pass %@
Error: Past initialization step; cannot start issuer verification flow!
Notice: Standalone: Handling issuer verification fields: %@ with fields model fields: %@
Notice: Standalone: Handling issuer verification code of length %lu
Error: Not on an issuer verification step; cannot skip issuer verification!
Notice: Standalone: starting in-app provisioning flow with configuration %@
Notice: Standalone: Handling issuer add request %@
Error: Not on get issuer add request step; cannot handle request!
Notice: Standalone: No response from issuer provisioning certificates endpoint: %@
Notice: In-app provisioning timed out waiting for response from client
Notice: Standalone: images %@
Notice: Standalone: 
downloading cached image %@
Notice: Standalone: 
downloaded cached image %@ error %@
Warning: Unable to download hero images. Using defaults.
Notice: Product chosen: %@
Notice: Standalone: Error occurred when setting up product for provisioning: %@
Notice: Credentials chosen: %@
Error: >1 credentials when not chosen by user!
Notice: Standalone: current State is %ld
Warning: Error: %{public}@ does not know how to handle provisioning state : %{public}@.
Notice: Forming payment requirements request from current credential %@
Notice: Forming payment requirements request from fields model
Notice: Forming payment eligibility request from in-app provisioning request %@
Notice: Forming payment eligibility request from current credential %@
Notice: Forming payment eligibility request from fields model
Notice: Standalone: performing requirements
Notice: Standalone: PKPaymentRequirementsStatusRequirementsAmbiguous is responded by server
Notice: Standalone: Start secondary manual entry with %lu fields.
Notice: Standalone: Moving directly to next provisioning step since all fields are complete (%@).
Notice: Standalone: PKPaymentRequirementsStatusUnknownRequirements or PKPaymentRequirementsStatusCardNotSupported is responded by server
Notice: Standalone: Error occurred when sending requirements request: %@
Notice: Standalone: No response or error from requirements!
Notice: Standalone: performing eligibility
Notice: Standalone: Error occurred when sending eligibility request: %@
Notice: Standalone: Error occurred when sending provision request: %@
Notice: Standalone: No response or error from provision!
Notice: Standalone: Provisioning is complete, but waiting for reader mode second tap
Notice: Standalone: Verification is necessary
Warning: Standalone verification status: unknown, showing error.
Warning: Standalone: requesting verification options failed (result %lu). Showing error: %@
Warning: Standalone: requesting verification fields failed (result %lu). Showing error: %@
Warning: Standalone: submitting verification code failed (result %lu). Showing error: %@
Notice: Standalone: TransitionToRemoteCredentials Step
Notice: Standalone: Single remote credential
Notice: Standalone: Have product with identifier %@ provisioning method types %@
Error: Error: No valid provisioning methods exist for product; transitioning to manual entry
Notice: Standalone: Enter Manual Entry, no credentials found
Notice: Standalone: There are %lu fields required in the Manual Entry
Notice: Standalone: Entered Local Device Manual Entry for credential %@. There are %lu incomplete fields.
Notice: Standalone: Entered Secondary Manual Entry for credential %@. There are %lu incomplete fields.
Notice: Standalone: Entered more information step. There are %lu more info items
Notice: Standalone: Entered verification options step. There are %lu channels
Notice: Standalone: Entered verification fields step. There are %lu fields required
Notice: Standalone: Entered verification code step with channel %s
Notice: Standalone: End of provisioning flow for current card
Notice: %d credentials remaining; moving to credential: %@
Notice: Flow controller change step from %@ to %@ with context: %@
Notice: Flow controller encountered error: %@
Notice: Filtered required fields based on local device entry requirement
Notice: Field %@ is incomplete requires local entry %d
Notice: Complete except for local fields %d local %d non local %d
Notice: Determining required fields for response status %ld and product identifier %@
Notice: Started providing periodic updates:
service: %@
message type: %u
response identifier: %@
Notice: Provisioning service agent status updater invalidating: %@
Notice: Provisioning service agent status updater sending status update: %@
Error: Not able to send status update:
service: %@
message type: %u
response identifier: %@
Warning: Reached limit of %lu updates for response identifier %@; will not send further updates.
Notice: Get PDF image from bundle: %@ prefix: %@ taragetSize:{%f,%f} scale:%f
Notice: Get PDF image from path: %@ taragetSize:{%f,%f}
Notice: unable to find resource at path %@
Notice: Could not find PDF document at path: %@
Notice: PDF document is empty
Notice: No target size provided we will not scale down the given PDF resource
Notice: target size to create PDF:{%fx%f}
Notice: returning PDF image %@
Notice: Resizing image %@ from %f x %f to %f x %f to fit/cover %f x %f
Notice: Resizing image %@ from %f x %f to fit/cover %f x %f would upscale, ignoring
Notice: Load PDF art from bundle: %@
Notice: decoding logo image from data on demand
Notice: decoding background image from data on demand
Error: Remote object proxy error handler for set configuration invoked: %@
Error: Remote object proxy error handler for present add payment pass invoked: %@
Error: Remote object proxy error handler for dismiss add payment pass invoked: %@
Notice: Forwarding generate request to delegate
Notice: Forwarding did finish to delegate
Notice: User accpeted to Open Tap-To-Radar
Notice: User rejected to Open Tap-To-Radar
Notice: Requested to Open Tap-To-Radar
Notice: Attempt to acquire assertion that has already been acquired: %@
Notice: Perform action when companion agent is available: %@
Error: Not performing action when companion agent is available because pairing ID is nil! Device: %@, action: %@
Notice: Fetched deferred shared web service context %@ for device %@
Notice: Setting deferred shared web service context: %@
Error: Not setting deferred shared web service context because pairing ID is nil! Device: %@, context: %@
Notice: Setting deferred added payment pass: %@ for device: %@
Notice: Returning deferred added payment passes: %@ for device: %@
Notice: Performing deferred actions
Notice: Pairing ID %@: shared web service context %@
Notice: Pairing ID %@: %u actions
Notice: Removing deferred data for pairing ID %@ (deferred action count %u deferred shared context %@)
Notice: Deferred action handler: companion agent started
Notice: Deferred action handler: device became active
Notice: Deferred action handler: device paired
Notice: Deferred action handler: device unpaired (pairing ID %@)
Notice: Deferred action handler: device pairing failure
Notice: Transfer to companion preflight: watch is connected
Notice: Transfer to companion preflight: watch is not connected
Notice: Checking watch connected state
Notice: gizmo connected
Notice: gizmo not connected
Notice: Checking companion iCloud account state
Notice: has companion account
Notice: does not have companion account
Notice: Checking watch iCloud account state
Notice: Device is pairing
Notice: Checking passcode enabled and unlocked state with query date: %@
Notice: passcode enabled %d device passcode locked %d error %@
Notice: Setting auth random if necessary
Notice: query date %@ now %@
Notice: Watch has SEP: %d; has required software version: %d
Notice: Setting auth random if necessary at the beginning of the provisioning flow
Notice: Auth random set if necessary (success %d)
Notice: Preflight complete!
success: %d
error: %@
preflighting: %d
checked passcode/unlocked: %d
checked companion iCloud account: %d
checked watch iCloud account: %d
checked wrist detect: %d
needsPasscode: %d
needsUnlock: %d
needsGizmoiCloudAccount: %d
needsWristDetection: %d
gizmo connected: %d
space available on SE: %d
auth random set if necessary: %d
Only one available product but no name for display. Using default for product type instead.
Product: %@ is not supported due to device OS version
Product: %@ is supported due to matching card on file, but manual entry is disabled (device/cellular region check)
Product: %@ is not supported in this device region
Product: %@ is supported only due to matching card on file; disallowing manual entry (local supported methods %lu, product supported methods %lu)
Product: %@ is not supported due to no matching provisioning methods and no card on file (local supported methods %lu, product supported methods %lu)
Product: %@ is supported due to matching card on file (type f support check)
Product: %@ is not supported due to lack of card on file and Type F support
Product: %@ is not supported on device
Product: %@ is not supported in setup context due to HSA requirement
Product: %@ (%@) is supported with provisioning types %@
Product: %@ is supported due to matching card but cannot be manually provisioned
Product: %@ is unsupported and will not be shown in the flow picker
Notice: History fetcher set AID to %@
Notice: History fetcher received fetch request
Notice: Transient pass assertion connection interrupted
Notice: Transient pass assertion: resyncing state
Error: Couldn't get remote object proxy
Notice: Fake payment session: setting current pass %@
Notice: Fake payment session: setting VAS passes %@
Notice: Fake payment session: detected field
Notice: Fake payment session: confirming session for pass %@
Notice: Fake payment session: renewing session for pass %@
Notice: Fake payment session: deactivating session
Notice: Fake payment session: setting timer
Notice: Fake payment session: handling timeout
Notice: Fake payment session: Got transaction complete Darwin notification
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Don't call -[NPKContinuityController init] but instead use singleton!)
Notice: Continuity: user is viewing pass list
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil uniqueID)
Notice: User viewing pass with unique ID %@ (payment pass: %d)
Notice: User needs to provision pass with unique ID %@
Notice: Continuity: user needs payment passes
Notice: Continuity: user needs to set up peer payment
Notice: Continuity: user needs to view peer payment
Notice: Saving user activity %@
Notice: Invalidating old activity %@
Notice: New activity was already current, calling -becomeCurrent again: %@
Notice: %@: Adding assertion:%@
Notice: %@: Removing assertion: %@
Notice: %@: Attempting to acquire assertion of type %lu for reason:%@ with completion:%@
Notice: %@: Attempting to invalidate assertion of type %lu with completion:%@
Notice: %@: Unable to acquire assertion due to error: %@
Notice: %@: Successfully acquired assertion
Notice: %@: Unable to invalidate assertion due to error: %@
Notice: %@: Successfully invalidated assertion
Notice: Remote Assertion - Request acquire assertion of type:%lu with UUID:%@
Error: Remote Assertion - Failed to send Assertion request type:%@
Error: Remote Assertion - Unknown assertion request type:%@
Notice: Remote Assertion - Request to invalidate assertion with UUID:%@
Notice: Remote Assertion - Sending assertion request of type:%@ UUID:%@
Error: Remote Assertion - Failed to sendAssertionrequest of type:%@ UUID:%@
Notice: Digital issuance terms accepted
Warning: Provided digital issuance amount %@ which is less than the minimum %@
Warning: Provided digital issuance amount %@ which is more than the maximum %@
Notice: Attempting to download peer payment pass following provisioning
Notice: Added payment pass following provisioning
Notice: Calling peerPaymentReRegisterWithURL:pushToken: completion with success %i error %@
Notice: session: %@ deactivated %d
Notice: Handling new contactless session: %@
Notice: Payment session: setting current pass to %@
Notice: Setting defer authorization on quick payment session: %@
Warning: Failed to enable service mode!
Warning: Cannot disable persistent card emulation on a session!
Notice: Quick payment session: confirming session
Notice: Confirm or renew quick payment session: session state is %u
Notice: Quick payment session: deactivating session
Notice: Deactivate quick payment session: deactivating %d deactivated %d
Notice: Deactivate quick payment session: underlying session deactivated
Notice: Internal queue: updating contactless session for pass %@ auto-select VAS passes %@
Notice: Internal queue update contactless session: success %d now activated %d session confirmed %d
Notice: Session queue update contactless session: pass %@ auto-select VAS passes %@ (session %@)
Notice: Using VAS passes when updating contactless session: %@
Notice: Session queue update contactless session: VAS success %d payment success %d session confirmed %d
Notice: Invoking callback for activation: success %d invokeOnSuccess %d contactlessValidity %u pass %@
Notice: Quick payment session: Starting contactless session on session queue
Notice: Was not first in queue; tearing down and invalidating session
Notice: No contactless session; marking as deactivated
Notice: Enabling persistent card emulation
Notice: No contactless session; not yet enabling persistent card emulation
Notice: Authorizing deferred authorization: %d use credential: %d credential: %@
Notice: Quick payment session: updating with current pass and loyalty state
Notice: Quick payment session: did enter field
Notice: Quick payment session: did exit field
Notice: Quick payment session: did fail transaction for AID %@ and pass with unique ID %@
Notice: Quick payment session: Session timed out for AID %@ and pass with unique ID %@
Notice: Ignoring timeout for service mode (should get persistent card emulation event instead)
Notice: Quick payment session: Session failed for AID %@ and pass with unique ID %@
Notice: Quick payment session: Received Start Transaction
Notice: In service mode; ignoring Start Transaction
Notice: Quick payment session: Received activity timeout
Notice: In service mode; ignoring activity timeout
Notice: Quick payment session: Received Finish Transaction
Notice: Handling mercury transaction
Notice: Handling transit transaction
Notice: Handling conventional
Notice: Quick payment session: ended persistent card emulation
Notice: Quick payment session: selected payment
Notice: Quick payment session: selected VAS
Notice: Quick payment session: failed deferred authorization
Notice: Quick payment session: has pending server request, sending timeout event
Notice: Transaction: %@ AID: %@ UniqueID: %@ valueAddedServiceTransactions: %@ valueAddedServicePasses: %@ success: %u
Notice: Quick payment session: Loyalty engine configuration changed
Notice: Can determine device location.
Notice: Start updating location
Notice: Event handler fired
Notice: Immediately retrieved location
Notice: Returning provisioning device data without location
Notice: Location did update
Notice: Found candidate location
Notice: Location did fail
Notice: Sync state engine (%@): Sync is necessary.
Notice: Sync engine (%@): No sync necessary.
Notice: Sync state engine (%@): Received state change
Change UUID: %@
Reconciled state hash: %@
Change type: %@
unique ID: %@
sync state item: %@
pass data: %@
base manifest hash for partial update: %@
 remote assets for partial update: %@
Warning: Sync state engine (%@): State change based on backup hash (%@), not reconciled hash (%@); moving backup to reconciled
Notice: Sync state engine (%@): State change processed
Change accepted: %d
Full pass required: %d
Change UUID: %@
New reconciled state: %@
Notice: Sync state engine (%@): Setting new backup and reconciled state
Backup state hash: %@
Reconciled state hash: %@
Notice: Sync state engine (%@): Applying change to pass library
Change UUID: %@
Warning: Sync state engine (%@): Not applying change to reconciled state because we failed to apply it to the pass library
Sync state item: %@
Notice: Sync state engine (%@): Applying change to reconciled state and accepting
Change UUID: %@
Notice: Sync state engine (%@): Not applying change to reconciled state and accepting
Change UUID: %@
Notice: Sync state engine (%@): Not applying change to pass library, but applying to reconciled state and accepting
Change UUID: %@
Notice: Sync state engine (%@): Rejecting change
Change UUID: %@
Warning: Sync state engine (%@): Unrecognized reconciled state hash %@
Notice: Sync state engine (%@): Received state change processed
Change UUID: %@
Accepted: %d
Full pass required: %@
Our candidate change: %@
Notice: Sync state engine (%@): Reconciled state after state change processed: %@
Notice: Sync state engine (%@): Resending change with full pass
Full pass change: %@
Notice: Sync state engine (%@): got request for full pass, but we sent the full pass last time
Notice: Sync state engine (%@): change not being accepted is expected because current library sync state item (%@) no longer matches change sync state item (%@)
Notice: Sync state engine (%@): change not being accepted is unexpected
Current library sync state item: %@
Change sync state item: %@
Error: Candidate change has no unique ID!
Warning: Sync state engine (%@): Did not recognize change UUID (%@) in change state accepted message; candidate change UUID is %@
Notice: Sync state engine (%@): Received reconciled state unrecognized
Reconciled state hash: %@
Pass sync state: %@
Notice: Sync state engine (%@): Received proposed reconciled state
Proposed pass sync state: %@
Notice: Sync state engine (%@): Received proposed reconciled state accepted
Reconciled state hash: %@
Warning: Sync state engine (%@): Did not recognize hash (%@) in reconciled state accepted message; reconciled state hash is %@
Notice: Sync state engine (%@): No state changes to send; settling on reconciled state hash %@.
Notice: Sync state engine (%@): Outgoing change is identical to candidate change except for UUID; changing UUID to match candidate change
Candidate change: %@
Outgoing change: %@
Notice: Sync state engine (%@): Ignoring request to apply pass update with unique ID %@ to local library since the pass is not in our library state: %@
Notice: Sync state engine (%@): Pass has been added/updated in local library also.
Reconciled sync state item: %@
Local library sync state item: %@
Change sync state item: %@
Notice: Sync state engine (%@): local pass has higher sequence counter (%@) than change (%@); not applying change to local library
Notice: Sync state engine (%@): Applying change in the absence of sync state counters
Notice: Sync state engine (%@): Not applying change in the absence of sync state counters
Notice: Sync state engine (%@): Applying change to reconciled state because it matches our library state
Local library sync state item: %@
Change sync state item: %@
Candidate change: %@
Notice: Sync state engine (%@): Not applying change to reconciled state since we are not applying it to the local library and have an outstanding candidate change for pass with unique ID %@: %@
Notice: Sync state engine (%@): Applying change to reconciled state even though we have an outstanding candidate change for pass with unique ID %@: %@
Notice: Sync state engine (%@): Sending state change
Change: %@
Notice: Sync state engine (%@): Sending state change processed
Change UUID: %@
Change accepted: %@
Full pass required: %@
Notice: Sync state engine (%@): Sending reconciled state unrecognized
Reconciled state hash: %@
Pass sync state: %@
Notice: Sync state engine (%@): Sending reconciled state accepted
Reconciled state hash: %@
Notice: Sync state engine (%@): Sending proposed reconciled state
Proposed pass sync state: %@
Notice: Sync state engine (%@): Requesting that delegate add pass to local pass library
Data: %@
Sync state item: %@
Notice: Sync state engine (%@): Delegate invoked add completion
sync state item: %@
added: %d
Notice: Sync state engine (%@): Requesting that delegate update pass in local pass library
Data: %@
Sync state item: %@
Base manifest hash for partial update: %@
Remote assets for partial update: %@
Notice: Sync state engine (%@): Delegate invoked update completion
sync state item: %@
updated: %d
Notice: Sync state engine (%@): Requesting that delegate remove pass in local pass library
unique ID: %@
Notice: Sync state engine (%@): Delegate invoked remove completion
unique ID: %@
removed: %d
Notice: Sync state engine (%@): encountered unexpected event
Notice: Sync state engine (%@): Engine state changed
Notice: Got background image %@ for %@
Notice: Wrote pass data segment
File path: %@
Change UUID: %@
segment index: %u
data: %@
Warning: Missing segment for large pass; unable to return full data
Change UUID: %@
segment index: %u
Warning: Unable to get file handle for large pass; unable to return full data
Change UUID: %@
path: %@
Warning: Returning data for large pass
Change UUID: %@
Number of segments: %u
data: %@
Notice: Splitting pass data into segments
Maximum segment length: %u
data: %@
Notice: Adding pass data segment
data: %@
Warning: No need to split pass data into segments
Maximum segment length: %u
data: %@
Warning: Unable to split nil pass data into segments!
Notice: Got pass data segment segment
File path: %@
Change UUID: %@
segment index: %u
data: %@
Notice: Returning status %@ (service identifier %@). We don't have a peer payment pass setup.
Notice: Using mock SURF server; will return status %@ for transaction with identifier %@
Notice: Returning status %@ for transaction details %@ (service identifier %@)
Notice: Setting new peer payment transaction status %@ for transaction with identifier: %@
Notice: Ignoring new peer payment transaction status %@ for transaction with identifier: %@ transaction: %@
Notice: We are currently looking up actions for transaction with service identifier: %@
Notice: Starting looking up actions for transaction with service identifier: %@
Notice: Finished looking up actions for transaction with service identifier %@: actions %@, status %@
Warning: Error when looking up actions for transaction with service identifier %@: %@
Notice: TransactionManager: paymentPassWithUniqueIdentifier:%@ didReceiveTransaction:%@
Notice: TransactionManager: did update transaction detail with service Identifier:%@
Notice: Start fetching all peer payment transactions With peer payment pass ID: %@
Notice: New peer payment pass identifier is nil. Removing existing transactions.
Notice: Received %ld transactions for peer payment pass with unique ID %@
Notice: Showing numeric entry for field at index %lu of %lu
Error: Failed to present passcode prompt
Notice: Numeric entry complete; invoking completion handler
Notice: Passcode prompt %@ did provide passcode
Error: Got unexpected bail for alphanumeric passcode for prompt %@!
Error: Passcode prompt was dismissed: %@
Notice: Remote interface presenter connection interrupted
Notice: Remote interface presenter connection invalidated
Notice: Request to present in-app payment interface for host application: %@ payment request: %@
Error: Remote object proxy error handler for present in-app payment interface invoked: %@
Notice: Request to present continuity payment interface for remote payment request: %@
Error: Remote object proxy error handler for present continuity payment interface invoked: %@
Notice: Request to present in-app interface for skeleton peer payment quote: %@
Error: Remote object proxy error handler for present in-app interface for skeleton peer payment quote invoked: %@
Notice: Request to clear skeleton peer payment quote: %@ error: %@
Error: Remote object proxy error handler for clear peer payment quote invoked: %@
Notice: Request to present set up Apple
Pay alert for %@
Error: %@: Could not execute SQL: %@: [%d, %s]
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "%@" statement)
Notice: Not opening database because we don't have what we need to migrate it
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Couldn't open %@ because of auth failure)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Couldn't open %@ (result %d))
Error: Couldn't set journal mode on database (result %d)
Notice: Solving DB corruption cause by DB v48
Notice: NPKGizmoDatabase: schema applied successfully: %d
Notice: Generating potentially-missing description fields
Error: Database is in a bad state; deleting and recreating
Notice: Gizmo database opened! Broadcasting database changed notification
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare deletion statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare pass insertion statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare diff insertion statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update delete pending" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pass diff" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pass data" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "insert transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "remove transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "remove transaction with service identifier" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transactions for pass" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transactions with source for pass" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transactions without source for pass" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transaction with service identifier" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pass unique ID for transaction identifier" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pass unique ID for transaction service identifier" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select delete transactions" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transit applet state" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update transit applet state" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "insert ephemeral transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "delete ephemeral transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select last add value amount" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update last add value amount" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pending add value date" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update pending add value date" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select balances state" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update balances state" statement)
Notice: Lazily loading initial manifest
Error: *** CORRUPTED / INVALID PASS DATABASE: Unable to prepare "select pass descriptions" statement; this most likely means you need to delete the database at "%@" and kill %@
Notice: Initial manifest encountered key %@ local %@ remote %@
Notice: Loaded initial manifest: %@
Warning: failed to unarchive: %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot save nil pass)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Pass %@ has nil unique ID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Pass %@ has nil complete hash)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Nil database handle; did you check passDBIsAvailable before calling?)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unique ID %@ is nil)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot remove pass with nil unique ID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Transaction is nil)
Error: Transaction does not have identifier; not inserting %@
Error: No pass unique ID; not inserting transaction %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Transaction Unique ID is nil)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: pass Unique ID cannot not be nil)
Notice: Fetching Volatile Pass Data from DB
Notice: Restoring Volatile Pass Data on DB
Error: Requested to notify for an add or update of a nil transaction
Error: Requested to notify for removal of a nil transaction
Notice: NPKGizmoDatabase already sending DB change, so coalescing
Notice: NPKGizmoDatabase alerting of DB change
Notice: Finished alerting of DB change, but a coalesced change was detected...rebroadcasting
Notice: Alerting external clients of DB change...
Notice: Saving diff %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Delete failed: %s; %s)
Notice: (PKPaymentBalance restore) restoring old balances for pass %@ %@
Notice: (PKPaymentBalance restore) archiving old balances for pass %@ %@ returned nil
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Insert failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Insert transaction failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Delete transaction failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Trim transactions failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil unique ID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Updating transit applet state failed: %s; %s)
Notice: Updating description %@ with new transit applet state %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil pass unique ID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Delete ephemeral transaction failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Setting last add value amount failed: %s; %s)
Notice: Updating description %@ with new last add value amount %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Setting pending add value date failed: %s; %s)
Notice: Updating description %@ with new pending add value date %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Updating balances failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Save diff failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: setDeletePending:forUniqueID: can't accept nil uniqueID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Update delete pending failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil payment pass)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ did not contain payment application %@ (has applications = %@))
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Update preferred AID failed: %s; %s)
Notice: Updating description %@ with new preferred payment application %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Received invalid watch OS version %lu)
Notice: Skipping pass with unique ID %@ because it has no remote manifest hashes
Warning: Skipping pass with unique ID %@ from manifest calculation because it is missing manifest hash for this version
Notice: Skipping pass with unique ID %@ from manifest calculation because it has no remote manifest hash
Notice: NPKGizmoDatabase: on-disk version %ld out of date, migrating to current version %ld
Notice: NPKGizmoDatabase: migration success = %d
Notice: NPKGizmoDatabase: on-disk version %ld matches current version
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Invalid pass DB version string: %@)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot save unsupported database version %ld)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to save version number to DB: %ld)
Notice: We were expecting a DB change, so suppressing DB reload
Notice: NPKGizmoDatabase DB changed externally, reloading
Notice: First unlock detected
Notice: Retrying opening database
Notice: Start search column:%@ in table:%@
Notice: found column:%@ in table:%@
Notice: Could not find column:%@ in table:%@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare statement to find column:%@ in table:%@)
Notice: initializing HID client
Error: ButtonController:IOHIDEventSystemClientCreate create failed
Notice: Sending default shipping address
Notice: Sending default contact email
Notice: Sending default contact phone
Notice: Sending default contact name
Notice: Sending %d default billing addresses
Notice: Decoded default shipping address
Notice: Decoded default contact email
Notice: Decoded default contact phone
Notice: Decoded default contact name
Notice: Decoded %d default billing addresses
Error: Unable to decode billing address: %@
Notice: deallocating NPKWorkQueueItem:%p, %@ has %lu remaining work items.
Notice: Work queue %@: ended work block
Notice: ending XPC transaction for work
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: NPKWorkQueue was performing work, but somehow self.performingWork was NO)
Notice: Work queue %@: starting next work block
Notice: taking out XPC transaction for work
Notice: Got express passes changed notification in express pass controller
Warning: Accepting new express status because express transit pass changed from %@ to %@.
Notice: Accepting new express status because it is greater than the previous express status.
Notice: Accepting reset of express status.
Notice: %@ transition from status %@ to %@
Notice: %@ Start listening for express notifications
Notice: %@ Stop listening for express notifications
Notice: Received Enter Near Field Notification for automatic selection technology type %d
Error: Received Enter Near Field Notification, but unexpected amount of express pass information: %@
Error: Received Enter Near Field Notification, but we have no express pass for matching express pass information %@. Will try to recover by updating the pass.
Notice: Technology type: %ld detected. Express passes information: %@
Warning: More than one express payment application identifier for a transit pass! This isn't supported.
Notice: Received Express Transaction Start Notification for application identifier %@
Notice: Received Express Transaction Time Out Notification for application identifier %@
Notice: Received Express Transaction End Notification for application identifier %@
Notice: Received Express Transaction Failed Notification for application identifier %@
Error: Received Express Transaction Started Notification for application identifier %@, but no pass.
Error: Received Express Transaction Ended Notification for application identifier %@, but no pass.
Error: Received Express Transaction Failed Notification for application identifier %@, but no pass.
Notice: Received Exit Near Field Notification for automatic selection technology type %d
Notice: Received Library Passes Changed Notification %@
Notice: Transaction application identifier: %@, express pass information %@, express pass unique ID %@
Notice: Updating current express passes with new information: %@ (previous: %@)
Notice: fetch pass %@ Unique Identifier %@ for express pass information %@
Error: Express pass controller could not find pass for express pass information: %@
Notice: Starting field detector for terminal-requested auth
Warning: Multiple express passes match TCIs for transient authentication required field detect event
Warning: Got on-device authentication required for unique ID %@, but no express pass!
Warning: No express passes match TCIs for transient authentication required field detect event
Notice: Using overridden peer payment service url '%@' for registration.
Notice: Local authentication coordinator: begin local authentication
Notice: Local authentication coordinator: existing completion handler
Notice: Local authentication coordinator: already-completed context
Notice: Local authentication coordinator: created new context
Notice: Local authentication coordinator: have completion handler for evaluate policy
Notice: Local authentication coordinator: no completion handler for evaluate policy
Notice: Cleanup delegate got session complete for reason %d with transaction %@ and transit history %@ for unique ID %@
Notice: Missing data from balance:%@ localizedTitle:%@ formattedValue:%@
Notice: Time since account refresh %f shouldRefresh %@
Notice: Forcing periodic update of account %@
Notice: Received PKAccountServiceAccountsChangedNotification
Error: Can't update pass account with a nil accountIdentifier
Notice: Setting account state %@
Error: Error getting account pass for identifier %@: %@
Notice: account-pass: account %@ collection notice state %@
Notice: Loading web service context
Notice: Loading peer payment web service context
Notice: Loading peer payment account
Notice: Device unpaired
Notice: Active watch changed
Notice: Shared web service provider loading web service
Notice: Shared web service provider instantiated web service
Notice: Shared web service provider updated web service context
Error: No web service context from daemon; starting fresh!
Error: No peer payment web service context from daemon; starting fresh!
Error: No peer payment web service account from daemon
Notice: Device failed to pair: %@
Error: Should not be receiving precondition not met messages from Bridge (%@)
Error: Should not be receiving payment transactions from Bridge (%@ %@ %@)
Error: Should not be receiving applet state from Bridge (%@ %@)
Error: Should not be receiving remove transactions from Bridge (%@)
Error: Should not be receiving balance update from Bridge (%@ %@)
Error: Should not be receiving update payment pass requests from Bridge (%@)
Error: Should not be receiving preferred AID updates from Bridge (%@)
Notice: Archive web service context: %@
Error: Should not be archiving web service background context from Bridge
Error: Should not be receiving web service context from watch from Bridge
Notice: Shared web service provider: Sending web service context to watch
Error: Should not be receiving show payment setup requests from Bridge
Error: Should not be receiving send payment options defaults requests from Bridge
Error: Should not be receiving updated peer payment web service context from Bridge
Error: Should not be receiving download all payment passes from Bridge
Error: Should not be receiving check companion peer payment registration state from Bridge
Notice: Telling daemon to archive peer payment web service context
Notice: %@: %@ begin
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %@: %@ was not invalidated prior to deallocation)
Notice: %@: %@ invalidated
Warning: %@: %@ was already invalidated
Notice: Set new conversation:%@ sender address:%@ recipient addresses:%@
Notice: Requested Lookup recipient Information if necessary
Notice: We already have a current peer payment controller. Resetting.
Notice: perform Payment with amount:%@ requestToken:%@, recipient:%@, sender:%@
Notice: Send and receive currencies match. Showing skeleton peer payment quote
Notice: Send and receive currencies differ (%@ vs %@). Not using skeleton peer payment quote.
Notice: Finish perform Payment with amount:%@ requestToken:%@, conversation:%@ response:%@, error:%@ success:%d
Notice: Not performing payment because we are no longer the current peer payment controller (current %@ vs ours %@)
Error: Error fetching quote: %@
Error: Could not identify recipient %@ with error %@
Notice: Currently performing a look up for given recipient address:%@
Notice: We already lookup for recipient with addres:%@ recipient:%@
Notice: Start lookup recipient information with with recipientAddress:%@ senderAddress:%@
Notice: Finish lookup information with recipient:%@ status:%@
Notice: Will not lookup recipient information with nil recipient Address
Notice: %@: post Recipient Updated Notification notification
Notice: Reader mode entry is disabled because transit product lacks reader mode provisioning method
Notice: Reader mode entry is disabled for typeF product as a local Felica secure element is not available
Notice: Reader mode terms accepted
Notice: Card ingestion status: %lu
Notice: %s:%@ (resetProvisioning: %d, isRecoverable: %d)
Warning: Warning! Attempted to ingestCard: while currently ingesting
Warning: Warning! attempting to ingestCardWithCardSessionToken: while currently ingesting
Notice: Malformed reader mode resources - missing card image urls
Notice: TransitPassInfoManager: setting Passes:%@ to:%@
Notice: TransitPassInfoManager: Ignore non-transit pass with uniqueID:%@ to:%@
Notice: TransitPassInfoManager: Adding pass with uniqueID:%@ to:%@
Notice: TransitPassInfoManager: Requested refresh all pass Balance
Notice: TransitPassInfoManager: Updating refresh balance for with uniqueID:%@
Notice: TransitPassInfoManager: transit pass info:%@ for pass with uniqueID:%@
Notice: TransitPassInfoManager: didReceiveBalanceUpdate:%@ for pass uniqueID:%@
Notice: TransitPassInfoManager: didUpdateWithTransitPassProperties:%@ for pass uniqueID:%@
Notice: TransitPassInfoManager: Requested fetch most recent Balances for pass with uniqueID:%@
Notice: TransitPassInfoManager: received most recent Balances:%@ for pass with uniqueID:%@
Notice: TransitPassInfoManager: Requested fetch most recent trasit psas properties for pass with uniqueID:%@ payment Application:%@
Notice: TransitPassInfoManager: Received most recent trasit psas properties:%@ for pass with uniqueID:%@ payment Application:%@ 
Notice: TransitPassInfoManager: Requested to update trasit balance model for pass uniqueID:%@
Notice: TransitPassInfoManager: Missing transit balance model for pass uniqieID:%@. Will not update it
Notice: NPKExpressTransitInterfaceController initializing
Notice: %@ Got transit express started for pass with unique ID %@
Notice: %@ Got transit express completed for unique ID %@
Warning: %@ No transaction start applet state; fetched %@ from data source
Notice: %@ Got transit express mode failed for unique ID %@
Notice: Updating express transit cards: %@
Notice: %@: Updating with pass with uniqueID:%@ payment application identifier:%@
Notice: Scheduling dismissal of express transit alert
Notice: Dismissing express transit alert
Notice: Transit history fetcher got updated applet history %@ for AID %@
Warning: %@ No transaction start applet state from data source; creating fresh
Warning: Got updated transit applet history for AID that is not the express transit AID
Error: No express transit pass for transit applet history!
Notice: %@: Couldn't find payment application with identfier:%@ for pass:%@
Notice: Active accounts changed: %@
Notice: Devices changed: %@
Error: Incoming unhandled protobuf: %@ %@ %@ %@ %@
Notice: Service sent with success: %@ %@ %@ %d %@
Notice: identifier %@ request %@ error handler %@
Notice: Noting that provisioning began
Notice: Noting that provisioning ended
Notice: Starting background verification observer for %@ with verification method %@
Notice: Noting foreground verification observer active: %d
Notice: Noting that the provisioning UI appeared
Notice: error %@ assertion %@
Notice: Noting that the provisioning UI disappeared
Notice: Archiving web service context: %@
Notice: Archiving web service background context: %@
Notice: Payment web service has passes of type %lu? %d
Notice: Can provision payment pass with primary account identifier %@
Warning: Web service configuration failed (%@). Continuing preflight anyway.
Notice: incoming protobuf %@
Warning: got response with no associated message handler
Error: No associated message ID in response
Warning: No response identifier for message with identifier %@
Error: No message identifier for protobuf %@
Notice: Pairing info response: set auth random %d
Notice: Device is pre-Daytona; not sending pairing info request
Warning: Device is not Fortune or later; falling back to previous auth random setting logic.
Notice: Setting auth random
Notice: Not necessary to set auth random; returning pairing state
Notice: currentlyPairing %d
Notice: Do not need to set auth random from PassKit request; returning pairing info
Notice: Got balance update for unique ID %@ with %u balances
Notice: Handling balance update %@ for unique ID %@
Notice: Push token from gizmo is %@
Error: Received nil SE registration data!
Notice: Fetcher %@ fetched location %@
Notice: Fetched provisioning data %@
Notice: Got provisioning error %@
Notice: Device provisioning data:
device name is %s
phone number is %s
location is %s
Notice: Requested Trusted Device Enrollment Info for WebService: %@
Notice: Request to sign data of length %lu with signature entanglement mode %d
Notice: Falling back to pre-Daytona signing method
Notice: Request to sign data of length %lu
Notice: did register with region map %@ (primary topic %@)
Notice: completed %d %@
Notice: error %@
Notice: Payment web service updated configuration: %@
Notice: region %@ support %d
Notice: Delete application with AID %@
Notice: Delete AID %@ completed %d %@
Notice: Add payment pass: %@
Notice: finished %d progress %f error %@
Notice: Redownloading all payment passes as requested by web service %@
Notice: Redownload of all payment passes complete as requested by web service %@
Error: Returned card protobuf does not have matching array lengths (%u %u %u)!
Notice: Handle pending removal of unique ID %@
Warning: No response expected for message with identifier %@
Notice: unique ID %@ AID %@
Notice: Handle preferred AID %@ for unique ID %@
Notice: Incoming update payment pass protobuf: %@
Notice: Incoming update push token protobuf: %@
Notice: Precondition not met: %d unique IDs %@ should unregister %d
Notice: %u transactions
Error: VAS transaction protobuf does not have matching array lengths (%u %u)!
Notice: pass %@ has valid payload %d
Notice: Scheduling automatic presentation notification for unique ID %@
Notice: Automatic presentation notification scheduled for unique ID %@: %d
Error: Payment transaction protobuf does not have matching array lengths (%u %u)!
Notice: Transaction: %@ for unique ID %@
Error: Applet state protobuf does not have matching array lengths (%u %u)!
Notice: Will handle Transactions: %@ appletStates: %@ for uniqueIDs:%@
Notice: Request to remove transactions with identfiers: %@
Notice: Retrieving transactions for unique ID %@
Error: IDS failed to send protobuf %@
Notice: Received updated applet state for pass with unique ID %@
Notice: Decoded applet state: %@
Notice: Target device: set express mode: %@ unique ID %@, AID %@, request authorization %d
Notice: remove express passes with card type: incoming protobuf %@
Notice: Target device: remove express passes with card type: %@
Notice: remove express pass with unique identifier: incoming protobuf %@
Notice: Target device: remove express pass with unique ID: %@
Notice: Target device: conflicting express pass identifiers with passInfo %@, referenceExpressPassesInformation:%@
Notice: conflicting express pass identifiers incoming protobuf %@
Notice: Target device: Received conflictingPassesUniqueIDs:%@ conflictingReferencePassIdentifier:%@
Notice: set balance reminder incoming protobuf %@
Notice: Target device: setting balance reminder %@ for balance %@ with passInfo %@
Notice: balance reminder incoming protobuf %@
Notice: Target device: getting balance reminder for balance %@ with passInfo %@
Notice: set commute plan reminder incoming protobuf %@
Notice: Target device: setting commute plan reminder %f for pass %@
Notice: commute plan reminder incoming protobuf %@
Notice: Target device: getting commute plan reminder for pass %@
Notice: Sending message to cancel outstanding set default express pass requests with mode: %@
Notice: Target device: enable service mode for unique ID %@
Notice: Ignoring set enable express transit request to pre-Daytona watch
Notice: Sending message to cancel outstanding service mode requests
Notice: Remote update pass. Received response:%@
Error: Remote update pass. No associated message ID in response
Warning: Remote update pass. Got response with no associated message handler
Notice: Remote update pass with uniqueID:%@. Sending message
Error: Remote update pass with uniqueID:%@. No message identifier for protobuf %@
Notice: Sending message to cancel outstanding remote pass Update Reques for pass UniqueID:%@
Notice: Peer payment register: incoming protobuf %@
Notice: Peer payment register with URL %@ forceReRegistration %i
Notice: Target device peer payment unregister: incoming protobuf %@
Notice: Target device peer payment unregister
Notice: Target device provision peer payment pass: incoming protobuf %@
Notice: Target device provision peer payment pass
Notice: Target device update peer payment account: incoming protobuf %@
Notice: Target device update peer payment account with completion
Notice: Requested to Open URL
Notice: Filed radar with request:%@  error:%@
Warning: Failed to open URL:%@
Notice: Companion received handlePeerPaymentTermsAndConditionsAcceptanceRequest: message
Notice: (account-pass-provisioning) Companion received handleDeviceUnlockedForPendingProvisioningRequest: message
Notice: Payment web service supports accounts = %d, hasAccount: %d, regionEnabled: %d, hasURL: %d
Notice: Payment web service supports accounts = %d, webService needs registration
Notice: Target update accounts for provisioning (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: accounts for provisioning
Notice: Target device updatedAccountsForProvisioningWithCompletion
Notice: Target deviceMetadataWithFields (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: deviceMetadataWithFields
Notice: Target device deviceMetadataWithFields: %lu
Notice: Target device supportedFeatureIdentifiersWithPaymentWebService
Notice: Payment web service supports apply service: %d, hasApplications: %d, hasAccounts: %d, regionEnabled: %d, hasURL: %d
Notice: Device supported feature identifiers: %@
Notice: NRDevicePropertySupportedFeatureIdentifiers returned a nil set
Notice: Config supported feature identifiers: %@
Notice: Final supported feature identifiers: %@
Notice: primary region: %@
Notice: (account-pass-provisioning) Target updateAccountWithIdentifier (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: updateAccountWithIdentifier
Notice: (account-pass-provisioning) Target device updateAccountWithIdentifier: %@
(account-pass-feature-check) watchOSVersion %@ does not support Apple card capability. Removing from features %@
(account-pass-feature-check) watchOSVersion %@ does support Apple card capability.
Notice: (account-pass-provisioning) Target performDeviceCheckInResponse (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: performDeviceCheckInResponse
Notice: (account-pass-provisioning) Target device performDeviceCheckInWithCompletion, Apple Card support %@
(account-pass-feature-check) watchOSVersion %@ does not support Apple card capability.
Notice: (account-pass-provisioning) Target availableProductsResponse (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: availableProductsResponse
Notice: (account-pass-provisioning) calling completion for availableProductsWithCompletion %@ (%@) %@
Notice: (account-pass-provisioning) Target device availableProductsWithCompletion, Apple Card support %@
(account-pass-feature-check) watchOSVersion %@ does not implement availableProductsWithCompletion, getting products from web service
Notice: (account-pass-provisioning) availableProductsWithRequest returned %@ %@
Notice: (account-pass-provisioning) Target performProductActionResponse (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: performProductActionResponse
Notice: (account-pass-provisioning) calling completion for performProductActionRequest %@ (%@) %@
Notice: (account-pass-provisioning) Target device performProductActionRequest %@
Notice: (account-pass-provisioning) Target device setDefaultPaymentPassUniqueIdentifier: %@
Notice: (account-pass-provisioning) completion of setDefaultCardUniqueID %@ resulted in success = %@
Notice: Target device initialize cloud store if necessary: incoming protobuf %@
Notice: Target device initialize cloud store if necessary
Notice: Target device initialize cloud store if necessary with handler: incoming protobuf %@
Notice: Target device initialize cloud store if necessary with handler
Notice: Target device check TLKs missing: incoming protobuf %@
Notice: Target device check TLK missing
Notice: Target device reset Apple Pay manetee view: incoming protobuf %@
Notice: Target device reset Apple Pay manatee view
Notice: Target device cloud store status: incoming protobuf %@
Notice: Target device cloud store status
Notice: Target device download all payment passes: incoming protobuf %@
Notice: Target device check companion peer payment registration state: incoming protobuf %@
Notice: Target device: handling potential express pass %@
Notice: Target device: missing complition block will not handling potential express pass %@
Notice: passupgrade request:%@ express pass information:%@ for uniqueID:%@
Notice: Not setting pass as express because of nil express pass information
Notice: Express passes information to use as reference:%@ from local DB
Notice: Cheking Conflicting reference passes
Notice: Found conflicting category:%@ for pass with unique ID:%@
Notice: Found peer payment pass with uniqueID:%@ conflicting with new pass. Will ignore it
Notice: Conflicting reference passes doesn't belong to the same express category:%@. Will handle potential express pass with unique ID %@
Notice: express pases setup in express mode:%@ conflict with givent pass. Will not set in express mode pass with uniqueID:%@
Notice: Not conflicting express passes found. Will handle potential express pass with unique ID %@
Notice: Target Device: handle potential express pass received Remote pass upgrade updated for  pass with uniqueID:%@ received, Status:%@ updatedPass:%@ error:%@
Notice: Expected to be able to get express pass from updated pass but fail. Using current express pass information:%@
Notice: did finish handle potential express pass with result %lu, current express passes information: %@
Notice: Target device: legacy handling potential express pass %@
Notice: Will handle potential express pass with unique ID %@
Notice: SPI not available. Can't create dummy express pass information for pass with uniqueID:%@
Notice: Sending updated payment options defaults to watch
Error: Failed to send updated payment options defaults to watch %@!
Notice: Sent updated payment options defaults to watch with message ID %@
Warning: Not sending unregistered web service context to watch (%@) while companion migration is needed
Warning: Not sending invalid web service context to watch (%@)
Notice: Sending web service context to watch: %@
Notice: (account-pass-context) sending web service context applyServiceURL %@ primaryRegion %@
Error: Failed to send web service context to watch %@!
Notice: Sent web service context to watch with message ID %@
Notice: Telling watch to handle companion migration
Notice: Sent companion migration event to watch with message ID %@
Notice: Sending companion peer payment registration event to watch
Error: Failed to send companion peer payment registration event to watch %@!
Notice: Sent companion peer payment registration event to watch with message ID %@
Notice: Sending companion iCloud signout event to watch
Error: Failed to send iCloud signout event to watch %@!
Notice: Sent companion iCloud signout event to watch with message ID %@
Notice: Got updated web service context from watch: %@
Notice: (account-pass-context) received updated web service context applyServiceURL %@ primaryRegion %@
Notice: Watch requested web service context
Notice: Watch requested that we show payment setup for app %@
Notice: Watch requested transaction defaults
Notice: Watch provided updated peer payment context and account
Warning: Got updated peer payment web service message, but could not decode context
Notice: Target Device: Received Remote pass upgrade updated for  pass with uniqueID:%@ received, Status:%@ updatedPass:%@ error:%@
Notice: Target device enforceUpgradedPasscodePolicyWithCompletion
Notice: Supports inline passcode policy enforcement: %@
Notice: Cannot enforce passcode policy on an unsupported OS. Advancing the flow by indicating that the device meets the policy.
Notice: Target enforceUpgradedPasscodePolicyWithCompletion: incoming protobuf %@
Notice: Target device applyPasscodeRestrictionsRequest
Notice: Cannot apply passcode restrictions on an unsupported OS. Advancing the flow by indicating that all is well.
Notice: Target applyPasscodeRestrictionsResponse: incoming protobuf %@
Notice: Calling completion with success: %@ error: %@
Notice: Target handlePasscodeUpgradeFlowShouldExitRequest: incoming protobuf %@
Notice: passcode changed: %@ error %@
Warning: Unable to exit passcode change flow; passcode change delegate not found.
Notice: Noting that provisioning did start requiring upgraded passcode
Notice: Noting that provisioning did end requiring upgraded passcode
Notice: Acquiring assertion of type:%lu
Notice: Invalidating assertion of type:%lu UUID:%@
Warning: We don't have any assertion to invalidate
Notice: Setting or resetting cleanup timer for message with identifier %@
Notice: Timed out waiting for response; invoking error handler for message %@
Notice: New NPKCompanionAgentConnection created: %@
Notice: NPKCompanionAgentConnection deallocating: %@
Notice: NPKCompanionAgentConnection (%@): Server payment passes changed
Notice: NPKCompanionAgentConnection (%@): default card changed
Notice: Card on Felica secure element cannot be transferred to non-Felica watch
Notice: NPKCompanionAgentConnection (%@): Request to determine if we should show the watch offer for %@ (have paired watch %d can be transferred %d)
Notice: Should show watch offer: supported in region %d hasPassOnWatch %d hasMaximumPassesOnWatch %d
Notice: NPKCompanionAgentConnection (%@): Note watch offer shown for %@
Notice: NPKCompanionAgentConnection (%@): Requesting that provisioning begin from watch offer for %@
Notice: NPKCompanionAgentConnection (%@): (account-pass-provisioning) handleDeviceUnlockedForPendingProvisioningRequestFromGizmo
Notice: NPKCompanionAgentConnection (account-pass-provisioning) (%@): provisionPassForAccountIdentifier %@ makeDefault %@
Notice: NPKCompanionAgentConnection (%@): Requesting registration of paired device
Notice: NPKCompanionAgentConnection (%@): Note provisioning preflight complete with success %d error %@
Notice: NPKCompanionAgentConnection (%@): Client requested payment pass unique IDs synchronous:%d
Notice: NPKCompanionAgentConnection (%@): Reply with unique IDs: %@
Notice: NPKCompanionAgentConnection (%@): found cached unique IDs
Notice: NPKCompanionAgentConnection (%@): No cached unique IDs available; requesting from daemon
Notice: NPKCompanionAgentConnection (%@): Requesting payment pass with unique ID %@ from daemon
Notice: NPKCompanionAgentConnection (%@): Reply with payment pass: %@
Notice: NPKCompanionAgentConnection (%@): found cached payment pass: %@
Notice: NPKCompanionAgentConnection (%@): Reply with newly-fetched payment pass: %@
Notice: NPKCompanionAgentConnection (%@): Requesting payment passes with FPANID %@
Notice: NPKCompanionAgentConnection (%@): Requesting payment pass with DPANID %@
Notice: NPKCompanionAgentConnection (%@): Requesting save of payment pass with unique ID %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ has data accessor %@)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ had nil file URL)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ had nil uniqueID)
Error: Unable to copy file from %@ to %@
Notice: Success, deleting temporary pass file %@
Notice: For current device; posting notification
Notice: Request to remove payment pass with unique ID %@
Notice: NPKCompanionAgentConnection (%@): Request to set default card with unique ID %@
Notice: NPKCompanionAgentConnection (%@): Fetching default card unique ID
Notice: NPKCompanionAgentConnection (%@): Fetching default payment application for pass with unique ID %@
Notice: NPKCompanionAgentConnection (%@): Setting default payment application for unique ID %@: %@
Notice: NPKCompanionAgentConnection (%@): Requesting consistency check
Notice: NPKCompanionAgentConnection (%@): Requesting redownload all payment passes
Notice: NPKCompanionAgentConnection (%@): Sending pending unpairing request
Notice: NPKCompanionAgentConnection (%@): Sending pending iCloud signout request
Notice: NPKCompanionAgentConnection (%@): handlePeerPaymentTermsAndConditionsRequestFromGizmo
Notice: Should show Apple Pay settings: %s (supported in region %d hasPaymentPasses %d)
Notice: NPKCompanionAgentConnection (%@): Request to delete from device with Pairing ID: %@ Transaction with Identifier: %@ for Pass Unique Identifier: %@
Notice: Error while creating connection to delete transaction with Identifier: %@ for Pass Unique Identifier: %@. Error: %@
Error: Error while creating connection to get balance reminder for Pass Unique Identifier: %@. Error: %@
Error: Error while creating connection to set balance reminder for Pass Unique Identifier: %@. Error: %@
Error: Error while creating connection to get commute plan reminder for Pass Unique Identifier: %@. Error: %@
Error: Error while creating connection to set commute plan reminder for Pass Unique Identifier: %@. Error: %@
Error: Error while creating connection to start background verification for pass unique identifier: %@. Error: %@
Error: Error while creating connection to note foreground verification observation active: %d. Error: %@
Warning: TrustedDeviceEnrollmentInfo ignore request. handler not provided
Notice: Requested gizmo trusted device enrollment signature
Error: TrustedDeviceEnrollmentInfo: Error connecting to gizmo target device.
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: -[NPKCompanionAgentConnection _remoteObjectProxySynchronise:withFailureHandler:] (synchronous:%d) would have returned nil)
Error: Error on NPKCompanionAgentConnection connection: %@
Notice: Setting screen scale for pass with unique ID %@ to %.2f
Notice: NPKCompanionAgentConnection (%@): Payment pass did enable transaction service: %@
Notice: NPKCompanionAgentConnection (%@): Payment pass did receive transaction: %@ transaction %@
Notice: NPKCompanionAgentConnection (%@): Payment pass did remove transaction: %@, transaction %@
Notice: NPKCompanionAgentConnection (%@): Payment pass did update transit pass properties: %@, properties %@
Notice: NPKCompanionAgentConnection (%@): Payment pass did update balances: %@, balances %@
Notice: NPKCompanionAgentConnection (%@): Payment pass with uniqueID:%@ did enable message service:%d
Notice: NPKCompanionAgentConnection (%@): XPC connection to daemon was interrupted
Error: Tried to access invalid object at index %lu in array %@ with %lu elements
Error: *** NPKAssertion failure in %{public}s, %{public}s:%ld (reason: Unable to find class for string %@)
Notice: Paired or pairing device has advertised name %@
Notice: Synced settings changed remotely
Notice: Express passes information changed remotely
Notice: Adding handler to runloop...
Notice: setting defaults for %@
Notice: 
%@ %@: old %@ new %@ (%@)
Notice: synchronizing and sending '%@' notification for domain %@
Notice: 
managed %@ %@: old %@ new %@ (%@)
Debug: countryCode %@ support %d
Debug: this device class 
 OS version 
 platform 
 supported regions %@
Debug: paired device class 
 OS version 
 platform 
 supported regions %@
Debug: Final supported regions: %@
Error: NPKCopyFileAtURL: one of the source URL (%@) or destination URL (%@) were invalid
Notice: Max payment cards is zero. Returning companion value of %u.
Notice: Applet state is %@
Notice: Transit properties are %@ (%@)
Notice: LaunchServices yielded localized app name '%@' for pid %d
Notice: proc_name yielded process name '%@' for pid %d
Notice: Supports express for technology type %d: %d
Notice: Paired device does not support peer payment; not allowing peer payment registration
Notice: Secure element is not available on local device; not allowing peer payment registration
Notice: Payment preconditions not satisfied; not allowing peer payment registration
Notice: Peer payment web service has account: %d region enabled: %d has URL: %d
Notice: Web service does not support peer payment; not allowing peer payment registration
Notice: Should allow peer payment registration? %d
Warning: failed to archive: %@
Notice: Secure Element Available: %{public}@
Notice: Passcode is enabled: %{public}@
Notice: Marking companion migration needed: %d
Notice: Device:%@ supports %u credential type:%lu (%@)
Notice: could not get device class from pairing/paired device:%@
Warning: Unexpected instance class:%@ for pairing/paired device DeviceClass property. Will drop it
Warning: could not create device version with deviceClass:%@ OSVersion:%@
Notice: Missing completion block. Could not acquire assertion with description:%@
Notice: Requesting provisioning assertion with reason:%@
Notice: Received provisioning assertion with reason:%@ assertion:%@ error:%@
Warning: No unique ID for pass %@ %@ %@!
Warning: Current manifest is %@
Warning: Base manifest is %@
Warning: Looking at URL %@
Notice: Illegal symlink: %@
Warning: Unable to get directory contents for URL %@
Notice: Removing empty directory at URL %@
Warning: Unable to find pass-relative path for absolute path %@
Warning: Current Manifest SHA1 %@
Warning: Base Manifest SHA1 %@
Notice: Unable to find pass-relative path for absolute path %@
Notice: Removing existing non-directory file at %@
Notice: Directory already exists at %@
Notice: Creating empty directory at %@
Notice: Copying file from %@ to %@
Notice: base pass manifest: %@ partial pass manifest: %@
Notice: keys only in base pass manifest: %@
Notice: Deleting file at URL %@ because it isn't in the new manifest
Warning: Base pass manifest (%@) or partial pass manifest (%@) is nil!
Warning: Hash for file at URL %@ does not match (expected %@ vs actual %@)
Warning: No remote asset at URL %@; rejecting partial pass update
Warning: Cannot validate web service context (%@) without paired device SEIDs
Warning: Web service context (%@) is invalid because the device ID (%@) does not match the watch's SEIDs (%@)
Notice: flush bundle at URL:%@
Notice: posting NPKPeerPaymentTermsAndConditionsAcceptanceNeededDarwinNotification from NPKInitiateTermsAndConditionsAcceptanceFlow()
Notice: Home directory is %@
Notice: Got device paired notification; updating home directory path
Notice: Got device active notification; updating home directory path
Notice: Demo mode values updated:
Store demo mode is %s
Hands-on demo mode is %s
UI-only demo mode is %s
Warning: manifest.json for unique ID %@ should map filenames to SHA1 hash strings. Found key of class %@
Warning: manifest.json for unique ID %@ should map filenames to SHA1 hash strings. Found object of class %@
Warning: manifest.json for unique ID %@ must be a dictionary -- instead found an object of class %@
Warning: Manifest JSON for unique ID %@ didn't parse: %@
Warning: Manifest for unique ID %@ is missing; expected at URL %@
Could not create download cache at %@: %@
Warning: Could not get relative path or hash for %@
Warning: Deleting remote asset at URL %@
Warning: Deleting file at URL %@
0Eq=
Q`4 
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
NPKProtoCheckTLKsMissingRequest
NSCopying
NPKProtoAssertionRequest
NPKProtoRemoveExpressPassWithUniqueIdentifierRequest
NPKProtoRelevantPassesRequest
NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext
NPKProtoRetrievePaymentTransactionsResponse
NPKProtoCatalog
NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext
NPKStandaloneService
IDSServiceDelegate
NSObject
NPKPaymentProvisioningFlowControllerDelegate
NPKProtoStandalonePaymentProvisioningFlowHandleManualEntryFieldsRequest
NPKPassSyncServiceSyncStatus
NPKPassSyncService
NPKPassSyncEngineDelegate
NPKPassSyncEngineDataSource
NPKProtoPerformDeviceCheckInRequest
NPKLibrary
NPKProtoCheckCompanionPeerPaymentRegistrationStateRequest
NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext
NPKProtoRemoveExpressPassWithUniqueIdentifierResponse
NPKProtoConfigurationDataResponse
NPKProtoRemoteAdminPerformRequest
NPKProtoStandalonePaymentProvisioningFlowChooseFlowRequest
NPKProtoCommutePlanReminderForCommutePlanAndPassRequest
NPKProtoAvailableProductsResponse
NPKProtoPerformDeviceCheckInResponse
NPKProtoStandalonePaymentProvisioningMethodMetadataDictionaryEntry
NanoPassKit
NPKProtoStandalonePaymentProvisioningFlowStepContext
NPKProtoStandalonePaymentProvisioningFlowAcknowledgeMoreInformationRequest
NPKProtoPeerPaymentWebServiceContextDidChangeRequest
NPKProtoSetCommutePlanReminderForCommutePlanAndPassRequest
NPKProtoStandalonePaymentApplication
NPKProtoStandalonePaymentPass
NPKRelevancy
NPKProtoConfigurationDataRequest
NPKProtoStandaloneError
NPKCatalogUtilities
NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest
NPKProtoPeerPaymentRegistrationRequest
NPKProtoWebServiceContextDidChangeRequest
NPKProtoHandleCompanionPeerPaymentRegistrationRequest
NPKProtoStandalonePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest
NPKPaymentProvisioningFlowPickerItem
NPKPaymentProvisioningFlowPickerSection
NPKProtoQueueTSMConnectionResponse
NPKProtoUpdatePushTokenRequest
NPKProtoPeerPaymentRegistrationResponse
NPKProtoPassSyncProposedReconciledState
NPKProtoSetCommutePlanReminderForCommutePlanAndPassResponse
NPKPeerPaymentQuickTypeParser
NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext
NPKProtoRemoveExpressPassesWithCardTypeResponse
NPKProtoStandalonePaymentProvisioningFlowResponse
NPKProtoCommutePlanReminderForCommutePlanAndPassResponse
NPKProtoSignDataRequest
WeakObservers
NPKProtoMarkAllAppletsForDeletionResponse
NPKProtoDeviceUnlockedForPendingProvisioningRequest
NPKProtoUpdatePaymentPassRequest
NPKProtoMarkPaymentPassForDeleteResponse
NPKProtoRemoteAdminAvailabilityChangeRequest
NPKGreenTeaDataUsageResolver
NPKProtoDumpLogsRequest
NPKProtoGizmoInitiatedAddPassRequest
NPKQuickPaymentSessionSource
NPKProtoPerformProductActionRequest
NPKProtoRelevantPassesPendingRequest
NPKProtoPassSyncState
NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext
NPKProtoResyncNeededRequest
NPKProtoSecureElementSetNewAuthRandomResponse
NPKProtoAdditions
NPKProtoStandalonePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest
NPKPaymentProvisioningFlowController
NPKProvisioningServiceAgentStatusUpdater
NPKProtoBalanceReminderForBalanceAndPassResponse
NPKProtoRegistrationDataRequest
NPKProtoSetPreferredPaymentApplicationResponse
NPKProtoStandaloneInitializationRequest
NPKProtoPeerPaymentUnregistrationResponse
NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext
NPKProtoRegistrationDataResponse
NPKProtoResetApplePayManateeViewRequest
NPKPassDescription
NSSecureCoding
NSCoding
NPKAddPaymentPassController
NPKAddPaymentPassControllerClientProtocol
PKXPCServiceDelegate
NPKProtoStandalonePaymentSetupProductImageAssetURLs
NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext
NPKProtoUpdatePassRequest
NPKTapToRadarManager
NPKProtoStandaloneResponseHeader
NPKAssertion
NPKProtoStandalonePaymentPassListRequest
NPKCompanionAgentConnectionDeferredActionHandler
NPKProtoRemoteAdminAvailabilityRequest
NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsRequest
NPKProtoBitmap
NPKProtoStandalonePaymentHeroImage
NPKPaymentPreflighter
NPKProtoRetrievePaymentTransactionsRequest
NPKProtoSecureElementGetAppletsRequest
FlowSelection
NPKProtoHash
NPKProtoNewLibraryHashReceivedRequest
NPKProtoPerformProductActionResponse
NPKProtoNewLibraryHashRequest
NPKProtoStandalonePass
NPKTransitAppletHistoryFetcher
NPKProtoOpenURLRequest
NPKTransitPassInfo
NPKProtoHandleBalanceChangeRequest
NPKProtoRemoteAdminPerformResponse
NPKProtoAvailableProductsRequest
NPKTransientPassAssertionServerProtocol
NPKTransientPassAssertion
NPKProtoRemotePassUpdateRequest
NPKProtoCatalogChangedRequest
NPKProtoHandlePaymentTransactionsRequest
NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest
NPKProtoSecureElementGetPairingInfoResponse
NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationCodeRequest
NPKProtoStandaloneUserInfo
NPKProtoDownloadAllPaymentPassesRequest
NPKPaymentProvisioningFlowStepContext
NPKPaymentProvisioningFlowControllerRequestContext
NPKPaymentProvisioningFlowControllerWelcomeStepContext
NPKPaymentProvisioningFlowControllerChooseFlowStepContext
NPKPaymentProvisioningFlowControllerChooseProductStepContext
NPKPaymentProvisioningFlowControllerChooseCredentialsStepContext
NPKPaymentProvisioningFlowControllerDigitalIssuanceAmountStepContext
NPKPaymentProvisioningFlowControllerDigitalIssuancePaymentStepContext
NPKPaymentProvisioningFlowControllerReaderModeEntryStepContext
NPKPaymentProvisioningFlowControllerReaderModeIngestionStepContext
NPKPaymentProvisioningFlowControllerManualEntryStepContext
NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext
NPKPaymentProvisioningFlowControllerLocalDeviceManualEntryStepContext
NPKPaymentProvisioningFlowControllerLocalDeviceManualEntryProgressStepContext
NPKPaymentProvisioningFlowControllerProductDisambiguationStepContext
NPKPaymentProvisioningFlowControllerTermsAndConditionsStepContext
NPKPaymentProvisioningFlowControllerProvisioningProgressStepContext
NPKPaymentProvisioningFlowControllerMoreInformationStepContext
NPKPaymentProvisioningFlowControllerProvisioningResultStepContext
NPKPaymentProvisioningFlowControllerIssuerVerificationChannelsStepContext
NPKPaymentProvisioningFlowControllerIssuerVerificationFieldsStepContext
NPKPaymentProvisioningFlowControllerIssuerVerificationCodeStepContext
NPKPaymentProvisioningFlowControllerGetIssuerApplicationAddRequestStepContext
NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsResponse
PKContactlessInterfaceTransactionContext
NPKFakePaymentSession
PKFieldDetectorObserver
NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest
NPKProtoCompanionMigratedResponse
NPKPeerPaymentNumberFormatter
WatchKitSupport
NPKContinuityCoordinator
NPKAssertionManager
NPKProtoProvisioningDataRequest
NPKOutstandingAssertionStatusUpdater
NPKTargetDeviceAssertionManager
NPKProtoRelevantPassesNeededRequest
DigitalIssuance
PKPaymentAuthorizationControllerDelegate
PKPaymentAuthorizationControllerPrivateDelegate
NPKPeerPaymentWebServiceCompanionTargetDevice
PKPeerPaymentWebServiceTargetDeviceProtocol
NPKProtoStandalonePaymentProvisioningFlowChooseProductRequest
NPKBitmapImage
NPKProtoShowPaymentSetupRequest
NPKProtoEnableServiceModeRequest
NPKQuickPaymentSession
PKContactlessInterfaceSessionDelegate
NPKProtoDeviceMetadataWithFieldsReponse
NPKProtoUpdateAccountWithIdentifierResponse
NPKOneShotLocationFetcher
CLLocationManagerDelegate
NPKPassSyncEngine
NPKProtoCloudStoreStatusResponse
NPKSimulatedPaymentProvisioningFlowController
NPKProtoRemoteAdminAvailabilityResponse
NPKProtoHandleAppletStateChangeRequest
NPKProtoDeviceDidRegisterRequest
Errors
NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext
NPKProtoStandalonePaymentProvisioningFlowStartProvisioningFlowRequest
NPKPeerPaymentTransactionDetails
NPKPeerPaymentMessagesTransactionsManager
PKPaymentServiceDelegate
NPKProtoDumpLogsResponse
NPKProtoSetTransactionDefaultsRequest
NPKProtoQueueTSMConnectionRequest
NPKProtoStandalonePaymentCredential
NPKProtoStandalonePaymentProvisioningFlowPickerSection
NPKStandaloneProvisioningNumericEntryCoordinator
CSLSPasscodePromptDelegate
NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext
NPKInAppPaymentInterfaceServerExportedInterface
NPKRemoteInterfacePresenter
NPKPassSyncChange
NPKProtoStandalonePaymentSetupMoreInfoItem
NPKProtoProvisionPeerPaymentPassRequest
NPKPeerPaymentAccountManager
NPKProtoPasscodeUpgradeFlowApplyPasscodeRestrictionsRequest
NPKProtoStandaloneHelper
NPKProtoGizmoInitiatedDeletePassRequest
NPKProtoPassSyncReconciledStateAccepted
NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext
NPKProtoStandaloneVerificationChannel
NPKGizmoDatabaseManifestEntry
NPKGizmoDatabase
NPKPMUButtonListener
NPKProtoRemovePassRequest
NPKProtoPassSyncReconciledStateUnrecognized
NPKProtoStandalonePaymentRemoteCredential
NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext
NPKProtoUpdatePeerPaymentAccountResponse
NPKTestAddPaymentPassRequestContext
NPKProtoPeerPaymentUnregistrationRequest
NPKServiceModeRequestController
NPKProtoProvisioningDataResponse
NPKProtoCloudStoreStatusRequest
NPKProtoStandalonePaymentPassListResponse
NPKProtoSecureElementGetPairingInfoRequest
NPKProtoStandaloneCreditAccountCredential
NPKPaymentOptionsSerialization
NPKWorkQueue
NPKWorkQueueItem
NPKProtoWebServiceContextNeededRequest
NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext
NPKProtoInitializeCloudStoreIfNecessaryRequest
NPKProtoStandalonePaymentProvisioningFlowChooseReaderModeRequest
NPKProtoSecureElementRemoveAppletsRequest
NPKExpressPassController
NPKProtoCheckTLKsMissingResponse
NPKProtoCheckPasscodePolicyComplianceRequest
NPKProtoBalanceReminderForBalanceAndPassRequest
NPKProtoStandalonePaymentProvisioningFlowPickerItem
NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext
NPKProtoSetPreferredPaymentApplicationRequest
NPKQuickPaymentSessionLocalAuthenticationCoordinator
NPKProtoPass
NPKProtoStandalonePaymentSetupField
NPKProtoStandalonePaymentProvisioningFlowAcknowledgeWelcomeRequest
NPKProtoEnableServiceModeResponse
NPKProtoRequestPeerAccountTermsAndConditionsAcceptance
NPKAddPaymentPassControllerServerProtocol
PDXPCServiceExportedInterface
NPKProtoMarkPaymentPassForDeleteRequest
NPKProtoRelevantPassTuple
NPKProtoStandalonePingRequest
NPKDoubleClickClientSuppressor
NPKProtoStandalonePaymentProvisioningFlowHandleReaderModeFieldsRequest
NPKProtoSignDataResponse
NPKQuickPaymentSessionCleanupDelegate
NPKQuickPaymentSessionDelegate
NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext
NPKProtoRemoveExpressPassesWithCardTypeRequest
NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext
NPKProtoMarkAllAppletsForDeletionRequest
NPKTransitPassBalanceModel
NPKProtoPasscodeUpgradeFlowShouldExitRequest
NPKAccountPassManager
NPKSharedWebServiceProvider
NPKPaymentWebServiceCompanionTargetDeviceDelegate
NPKSharedPeerPaymentWebServiceArchiver
PKPeerPaymentWebServiceArchiver
PKWebServiceArchiver
NPKProtoUpdatePeerPaymentAccountRequest
NPKProtoSetExpressPassRequest
NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse
NPKProtoTransactionDefaultsNeededRequest
NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext
ProtobufSupport
NPKProtoSetBalanceReminderForBalanceAndPassRequest
NPKOSTransaction
NPKPeerPaymentConversationManager
ReaderMode
PKContactlessCardIngesterDelegate
NPKProtoInitializeCloudStoreIfNecessaryResponse
NPKProtoAddPassRequest
NPKProtoUpdateAccountWithIdentifierRequest
NPKPassSyncStateItem
NPKPassSyncState
NPKProtoPassSettingsChangedRequest
NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext
NPKProtoPassSyncStateChangeProcessed
NPKPaymentProvisioningFlowTest
NPKTapToRadarRequest
NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext
NPKTransitPassesInfoManager
NPKSettingsPreservingFileDataAccessor
NPKProtoUpdatedAccountsForProvisioningResponse
NPKExpressTransitInterfaceController
NPKTransitAppletHistoryFetcherDelegate
NPKExpressPassControllerDelegate
NPKProtoStandalonePaymentProvisioningFlowChooseManualEntryRequest
NPKProtoSetBalanceReminderForBalanceAndPassResponse
NPKProtoStandalonePingResponse
NPKProtoPassSyncStateChange
NPKProtoStandalonePaymentDigitalIssuanceMetadata
NPKProtoUpdatedAccountsForProvisioningRequest
NPKProtoSecureElementGetAppletsResponse
NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse
NPKProtoResetApplePayManateeViewResponse
NPKProtoStandaloneRequestHeader
NPKBalanceField
NPKProtoStandalonePaymentProvisioningMethodMetadata
NPKPaymentWebServiceCompanionTargetDeviceOutstandingRequest
NPKPaymentWebServiceCompanionTargetDevice
PKPaymentWebServiceTargetDeviceProtocol
PKPaymentWebServiceArchiver
NPKProtoHandleValueAddedServiceTransactionsRequest
NPKProtoStandalonePaymentCredentialUnion
NPKProtoSecureElementSetNewAuthRandomRequest
NPKProtoStandalonePaymentSetupProduct
NPKProtoStandalonePaymentProvisioningFlowAcceptTermsRequest
NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext
NPKProtoDeviceDidRegisterResponse
NPKProtoRemotePassUpdateResponse
NPKProtoStandaloneInitializationResponse
NPKCompanionServerProtocol
NPKCompanionClientProtocol
NPKProtoStandalonePaymentSetupProductPaymentOption
NPKCompanionAgentConnection
NPKProtoStandalonePaymentProvisioningFlowHandleIssuerVerificationChannelRequest
NPKProtoDeviceMetadataWithFieldsRequest
NPKProtoCheckPasscodePolicyComplianceResponse
NPKProtoSecureElementRemoveAppletsResponse
NPKProtoPassSyncStateItem
NPKProtoProvisionPeerPaymentPassResponse
NPKProtoStandalonePaymentProvisioningFlowSkipProvisioningRequest
DescriptionSupport
NPKProtoPaymentPreconditionsNotMetRequest
NPKProtoStandalonePaymentProvisioningFlowDidEncounterErrorResponse
NPKProtoCompanionMigratedRequest
NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext
NPKProtoPassSyncStateManifestEntry
NPKProtoHandleRemoveTransactionsRequest
NPKProtoHandleCompanioniCloudSignoutRequest
NPKProtoSetExpressPassResponse
NPKMockPeerPaymentAccountManager
NPKSafeObjects
NilProtection
NPKMutableArrayAdditions
description
dictionaryRepresentation
stringWithFormat:
dictionary
allocWithZone:
init
isMemberOfClass:
copyWithZone:
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
setObject:forKey:
numberWithBool:
setRequestUUIDString:
assertionType
setAssertionType:
setHasAssertionType:
hasAssertionType
assertionTypeAsString:
StringAsAssertionType:
setPending:
setHasPending:
hasPending
.cxx_destruct
requestUUIDString
pending
_assertionType
_requestUUIDString
_pending
_has
isEqualToString:
setUniqueID:
hasUniqueID
uniqueID
_uniqueID
removeAllObjects
addObject:
count
objectAtIndex:
initWithCapacity:
countByEnumeratingWithState:objects:count:
addPassRelevancyTuples:
passRelevancyTuplesCount
clearPassRelevancyTuples
passRelevancyTuplesAtIndex:
passRelevancyTuplesType
passRelevancyTuples
setPassRelevancyTuples:
_passRelevancyTuples
setTermsURL:
hasTermsURL
setAllowNonSecureHTTP:
setHasAllowNonSecureHTTP:
hasAllowNonSecureHTTP
termsURL
allowNonSecureHTTP
_termsURL
_allowNonSecureHTTP
addTransactionsBytes:
addTransactionPassIDs:
transactionsBytesCount
clearTransactionsBytes
transactionsBytesAtIndex:
transactionPassIDsCount
clearTransactionPassIDs
transactionPassIDsAtIndex:
transactionsBytesType
transactionPassIDsType
transactionsBytes
setTransactionsBytes:
transactionPassIDs
setTransactionPassIDs:
_transactionPassIDs
_transactionsBytes
setCatalogData:
catalogData
_catalogData
setLocalizedProgressDescription:
hasLocalizedProgressDescription
localizedProgressDescription
_localizedProgressDescription
initWithService:
addDelegate:queue:
handlePingRequest:service:account:fromID:context:
setProtobufAction:forIncomingRequestsOfType:
handleInitializationRequest:service:account:fromID:context:
handlePaymentProvisioningFlowStartProvisioningFlowRequest:service:account:fromID:context:
handlePaymentProvisioningFlowAcknowledgeWelcomeRequest:service:account:fromID:context:
handlePaymentProvisioningFlowChooseFlowRequest:service:account:fromID:context:
handlePaymentProvisioningFlowChooseProductRequest:service:account:fromID:context:
handlePaymentProvisioningFlowChooseCredentialsRequest:service:account:fromID:context:
handlePaymentProvisioningFlowChooseManualEntryRequest:service:account:fromID:context:
handlePaymentProvisioningFlowHandleManualEntryFieldsRequest:service:account:fromID:context:
handlePaymentProvisioningFlowAcceptTermsRequest:service:account:fromID:context:
handlePaymentProvisioningFlowSkipProvisioningRequest:service:account:fromID:context:
handlePaymentProvisioningFlowHandleIssuerVerificationChannelRequest:service:account:fromID:context:
handlePaymentProvisioningFlowHandleIssuerVerificationFieldsRequest:service:account:fromID:context:
handlePaymentProvisioningFlowHandleIssuerVerificationCodeRequest:service:account:fromID:context:
handlePaymentPassListRequest:service:account:fromID:context:
handlePaymentProvisioningFlowStartIssuerVerificationFlowForPaymentPassRequest:service:account:fromID:context:
handlePaymentProvisioningFlowAcknowledgeMoreInformationRequest:service:account:fromID:context:
handlePaymentProvisioningFlowHandleDigitalIssuanceAmountRequest:service:account:fromID:context:
handlePaymentProvisioningFlowChooseReaderModeRequest:service:account:fromID:context:
handlePaymentProvisioningFlowHandleReaderModeFieldsRequest:service:account:fromID:context:
setProvisioningService:
_initFlowControllerWithSimulatedFlowController:separateLocalDeviceEntryRequired:
sharedService
initWithWebService:
initWithProvisioningController:setupContext:
setSeparateLocalDeviceEntryRequired:
setDigitalIssuanceSupported:
setDelegate:
data
initWithData:
sendPingResponse:
content
setContent:
initWithProtobufData:type:isResponse:
provisioningService
useSimulatedFlowController
separateLocalDeviceEntryRequired
sendInitializationResponse:
clientInfoHTTPHeader
setClientInfoHTTPHeader:
setResponseHeader:
addSupportedServerVersions:
requestHeader
protocolVersion
responseHeader
setProtocolVersion:
setError:
error
setDomain:
setCode:
sessionIdentifier
setSessionIdentifier:
initWithRequestHeader:
startProvisioningFlow:
acknowledgeWelcome:
numberWithInt:
objectForKey:
chooseFlowStepContext
sections
items
identifier
chosenFlowPickerItemIdentifier
enumerateObjectsUsingBlock:
chooseFlowForPickerItem:requestContext:
_didEncounterErrorUnexpectedError:
chooseProductStepContext
products
productIdentifier
chosenProductIdentifier
chooseProduct:requestContext:
chooseCredentialsStepContext
flowIdentifierToCredential
chosenPaymentCredentialIdentifiers
flowIdentifiers
chooseCredentials:requestContext:
chooseManualEntry:
secondaryManualEntryStepContext
manualEntryStepContext
manualEntryFields
setObject:forKeyedSubscript:
setupFields
objectForKeyedSubscript:
currentValue
setCurrentValue:
length
setDateFormat:
dateFromString:
localizedDisplayName
localizedPlaceholder
handleManualEntryFields:credential:requestContext:
acceptTerms:
skipProvisioning:
verificationChannelsStepContext
verificationChannels
selectedVerificationChannelIdentifier
handleIssuerVerificationChannel:requestContext:
verificationFieldsStepContext
verificationFields
handleIssuerVerificationFields:requestContext:
verificationCode
handleIssuerVerificationCode:requestContext:
passesOfType:
paymentPass
toNPKProtoStandalonePaymentPass:
addPaymentPasses:
passTypeIdentifier
serialNumber
passWithPassTypeIdentifier:serialNumber:
reset
startIssuerVerificationFlowForPaymentPass:requestContext:
acknowledgeMoreInformation:
amount
initWithString:
handleDigitalIssuanceAmount:requestContext:
chooseReaderMode:
readerModeFields
toPKPaymentSetupField:
handleReaderModeFields:requestContext:
requestContext
setFromStep:
setToStep:
toNPKProtoStandalonePaymentProvisioningFlowStepContext:fromStep:toStep:
setContext:
localDeviceManualEntryStepContext
_showCVVEntryUIWithLocalDeviceManualEntryContext:
invalidate
toNPKProtoStandaloneError:
array
requestNumericInputForFields:completion:
paymentProvisioningFlowController:didEncounterError:requestContext:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
paymentProvisioningFlowController:didTransitionFromStep:toStep:withContext:
queue
setQueue:
flowController
setFlowController:
flowStepContext
setFlowStepContext:
flowStepToContext
setFlowStepToContext:
defaultProtocolVersion
setDefaultProtocolVersion:
numericEntryCoordinator
setNumericEntryCoordinator:
_defaultProtocolVersion
_provisioningService
_queue
_flowController
_flowStepContext
_flowStepToContext
_numericEntryCoordinator
addManualEntryFields:
setRequestHeader:
manualEntryFieldsCount
clearManualEntryFields
manualEntryFieldsAtIndex:
manualEntryFieldsType
setManualEntryFields:
_manualEntryFields
_requestHeader
timeIntervalSinceDate:
shouldSyncWithCurrentIncomingChange:currentOutgoingChange:currentDate:
lastKnownOutgoingChange
setLastKnownOutgoingChange:
outgoingChangeDate
setOutgoingChangeDate:
lastKnownIncomingChange
setLastKnownIncomingChange:
incomingChangeDate
setIncomingChangeDate:
_lastKnownOutgoingChange
_outgoingChangeDate
_lastKnownIncomingChange
_incomingChangeDate
syncStateChanged:
syncStateChangeProcessed:
reconciledStateUnrecognized:
proposedReconciledState:
reconciledStateAccepted:
passSettingsChanged:
catalogChanged:
_archiveTimerFired
_archivedPassSyncEngine
initWithRole:
setDataSource:
_provideUpdatedLibraryStateToSyncEngineAndSyncIfNecessary:
setPassSettings:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
setCatalog:
_syncWhenAppropriate
transactionWithName:
initWithProtoPassSyncChange:
hasPassSegmentIndex
passSegmentIndex
changeUUID
passSegmentTotal
passData
hasPassSegmentTotal
npkDescription
setPassData:
handleStateChange:
hasCatalog
catalog
handleIncomingCatalog:
acceptedChangeUUID
bytes
initWithUUIDBytes:
hasChangeAccepted
changeAccepted
fullPassRequired
handleStateChangeProcessedWithUUID:changeAccepted:fullPassRequired:
unrecognizedReconciledStateHash
libraryPassSyncState
initWithProtoSyncState:
handleReconciledStateUnrecognizedWithHash:passSyncState:
proposedReconciledState
handleProposedReconciledState:
reconciledStateHash
handleReconciledStateAcceptedWithHash:
hasPassSettings
passSettings
handleIncomingPassSettings:forPassWithUniqueID:
protoPassSyncChange
catalogToSend
setPassSegmentIndex:
setPassSegmentTotal:
getUUIDBytes:
dataWithBytes:length:
setAcceptedChangeUUID:
setChangeAccepted:
setFullPassRequired:
setUnrecognizedReconciledStateHash:
protoSyncState
setLibraryPassSyncState:
setProposedReconciledState:
setReconciledStateHash:
changeType
settingsForPassWithUniqueID:
handleSettingsChanged:forPassWithUniqueID:
reconciledState
currentLibraryPassSyncStateWithReconciledState:
libraryState
setLibraryState:
diffWithBaselineState:representsMaterialDifferenceFromState:
processingChange
passSyncStateByApplyingChange:
writeToFile:options:error:
candidateChange
date
_syncNow
_ensureSyncTimerIsSet
syncIfNecessary
_syncTimerFired
dataWithContentsOfFile:options:error:
passSyncEngine:sendStateChange:
passSyncEngine:sendStateChangeProcessedWithUUID:changeAccepted:fullPassRequired:
passSyncEngine:sendReconciledStateUnrecognizedWithHash:currentPassSyncState:
passSyncEngine:sendProposedReconciledState:
passSyncEngine:sendReconciledStateAcceptedWithHash:
passSyncEngine:requestsAddPassData:forSyncStateItem:completion:
passSyncEngine:requestsUpdatePassData:forSyncStateItem:baseManifestHashForPartialUpdate:remoteAssetsForPartialUpdate:completion:
passSyncEngine:requestsRemovePassWithUniqueID:completion:
passSyncEngineStateChanged:
passSyncEngineEncounteredUnexpectedEvent:
passSyncEngine:receivedStateChangeProcessed:changeAccepted:
passSyncEngine:finishedProcessingChange:
passSyncEngine:partialDataForPassWithUniqueID:baseManifest:outRemoteAssets:
passSyncEngine:dataForPassWithUniqueID:
initWithPassSyncEngineRole:
start
handlePassLibraryChanged
handleCatalogChanged:
suggestSync
dropAllMessages
setDropAllMessages:
passSyncEngine
setPassSyncEngine:
passSyncService
setPassSyncService:
passSyncQueue
setPassSyncQueue:
passSyncEngineArchiveTimer
setPassSyncEngineArchiveTimer:
passSyncEngineSyncTimer
setPassSyncEngineSyncTimer:
passSyncStatus
setPassSyncStatus:
_dropAllMessages
_passSyncEngine
_passSyncService
_passSyncQueue
_passSyncEngineArchiveTimer
_passSyncEngineSyncTimer
_passSyncStatus
alloc
sharedInstance
addPassData:completion:
needsRelevancyInformation
setNeedsRelevancyInformation:
_needsRelevancyInformation
setNumericEntryPending:
setHasNumericEntryPending:
hasNumericEntryPending
numericEntryPending
_numericEntryPending
addCurrentExpressPassesInformation:
setActualExpressPassInformation:
currentExpressPassesInformationsCount
clearCurrentExpressPassesInformations
currentExpressPassesInformationAtIndex:
currentExpressPassesInformationType
setSuccess:
setHasSuccess:
hasSuccess
hasActualExpressPassInformation
success
actualExpressPassInformation
currentExpressPassesInformations
setCurrentExpressPassesInformations:
_actualExpressPassInformation
_currentExpressPassesInformations
_success
setConfigurationDataBytes:
hasConfigurationDataBytes
configurationDataBytes
_configurationDataBytes
setUrl:
setSeid:
setCommand:
setInfoDictionary:
hasInfoDictionary
seid
command
infoDictionary
_command
_infoDictionary
_seid
_url
setChosenFlowPickerItemIdentifier:
hasChosenFlowPickerItemIdentifier
_chosenFlowPickerItemIdentifier
setCommutePlanBytes:
hasCommutePlanBytes
commutePlanBytes
_commutePlanBytes
setAvailableProductsData:
setErrorData:
hasAvailableProductsData
hasErrorData
availableProductsData
errorData
_availableProductsData
_errorData
setType:
setMetadata:
hasType
hasMetadata
type
metadata
_metadata
_type
style
npkWatchBarcode
messageData
barcode
format
npkAccessoryType
nfcPayload
expirationDate
compare:
npkCompleteHashForWatchOSVersion:
manifestHash
dataWithData:
settings
appendBytes:length:
isImageSetLoaded:
message
encryptionPublicKeyData
initWithDomain:
timeIntervalSinceNow
mutableCopy
removeObjectForKey:
npkSupportsHidingAccessory
npkExpired
npkCompleteHash
hasLogoImageSet
npkHasValidNFCPayload
npkIsAddValuePending
npkLastAddValueAmount
npkHandleTransitValuePendingAmount:withBalance:forPassWithID:
npkClearTransitValuePendingStateIfNecessaryForPassWithID:withBalance:
isPaymentOptionSelectable
deviceContactlessPaymentApplications
allObjects
displayName
sortedArrayUsingComparator:
devicePaymentApplications
applicationIdentifier
devicePrimaryContactlessPaymentApplication
npkHasUserSelectableContactlessPaymentApplications
defaultPaymentApplicationForPassUniqueIdentifier:
containsObject:
setDefaultPaymentApplication:forPassUniqueIdentifier:completion:
npkSortedDeviceContactlessPaymentApplications
npkDevicePaymentApplicationForAID:
npkPreferredContactlessPaymentApplication
npkSetPreferredPaymentApplication:
setStepIdentifier:
setBackStepIdentifier:
setWelcomeStepContext:
setChooseFlowStepContext:
setChooseProductStepContext:
setChooseCredentialsStepContext:
setDigitalIssuanceAmountStepContext:
setDigitalIssuancePaymentStepContext:
setMoreInformationStepContext:
setReaderModeEntryStepContext:
setReaderModeIngestionStepContext:
setManualEntryStepContext:
setSecondaryManualEntryStepContext:
setLocalDeviceManualEntryStepContext:
setLocalDeviceManualEntryProgressStepContext:
setProductDisambiguationStepContext:
setTermsAndConditionsStepContext:
setProvisioningProgressStepContext:
setProvisioningResultStepContext:
setIssuerVerificationChannelsStepContext:
setIssuerVerificationFieldsStepContext:
setIssuerVerificationCodeStepContext:
hasBackStepIdentifier
setAllowsAddLater:
setHasAllowsAddLater:
hasAllowsAddLater
hasWelcomeStepContext
hasChooseFlowStepContext
hasChooseProductStepContext
hasChooseCredentialsStepContext
hasDigitalIssuanceAmountStepContext
hasDigitalIssuancePaymentStepContext
hasMoreInformationStepContext
hasReaderModeEntryStepContext
hasReaderModeIngestionStepContext
hasManualEntryStepContext
hasSecondaryManualEntryStepContext
hasLocalDeviceManualEntryStepContext
hasLocalDeviceManualEntryProgressStepContext
hasProductDisambiguationStepContext
hasTermsAndConditionsStepContext
hasProvisioningProgressStepContext
hasProvisioningResultStepContext
hasIssuerVerificationChannelsStepContext
hasIssuerVerificationFieldsStepContext
hasIssuerVerificationCodeStepContext
stepIdentifier
backStepIdentifier
allowsAddLater
welcomeStepContext
digitalIssuanceAmountStepContext
digitalIssuancePaymentStepContext
moreInformationStepContext
readerModeEntryStepContext
readerModeIngestionStepContext
localDeviceManualEntryProgressStepContext
productDisambiguationStepContext
termsAndConditionsStepContext
provisioningProgressStepContext
provisioningResultStepContext
issuerVerificationChannelsStepContext
issuerVerificationFieldsStepContext
issuerVerificationCodeStepContext
_backStepIdentifier
_chooseCredentialsStepContext
_chooseFlowStepContext
_chooseProductStepContext
_digitalIssuanceAmountStepContext
_digitalIssuancePaymentStepContext
_issuerVerificationChannelsStepContext
_issuerVerificationCodeStepContext
_issuerVerificationFieldsStepContext
_localDeviceManualEntryProgressStepContext
_localDeviceManualEntryStepContext
_manualEntryStepContext
_moreInformationStepContext
_productDisambiguationStepContext
_provisioningProgressStepContext
_provisioningResultStepContext
_readerModeEntryStepContext
_readerModeIngestionStepContext
_secondaryManualEntryStepContext
_stepIdentifier
_termsAndConditionsStepContext
_welcomeStepContext
_allowsAddLater
appendFormat:
appendString:
setPeerPaymentWebServiceContextData:
setPeerPaymentAccountData:
hasPeerPaymentWebServiceContextData
hasPeerPaymentAccountData
peerPaymentWebServiceContextData
peerPaymentAccountData
_peerPaymentAccountData
_peerPaymentWebServiceContextData
setReminderInterval:
setHasReminderInterval:
hasReminderInterval
reminderInterval
_reminderInterval
state
setState:
setHasState:
hasState
stateAsString:
StringAsState:
_state
setPass:
setPrimaryAccountIdentifier:
setPrimaryAccountNumberSuffix:
setDeviceAccountIdentifier:
setDeviceAccountNumberSuffix:
setDevicePrimaryPaymentApplication:
hasPrimaryAccountIdentifier
hasPrimaryAccountNumberSuffix
hasDeviceAccountIdentifier
hasDeviceAccountNumberSuffix
activationState
setActivationState:
setHasActivationState:
hasActivationState
activationStateAsString:
StringAsActivationState:
hasDevicePrimaryPaymentApplication
pass
primaryAccountIdentifier
primaryAccountNumberSuffix
deviceAccountIdentifier
deviceAccountNumberSuffix
devicePrimaryPaymentApplication
_activationState
_deviceAccountIdentifier
_deviceAccountNumberSuffix
_devicePrimaryPaymentApplication
_pass
_primaryAccountIdentifier
_primaryAccountNumberSuffix
dictionaryWithDictionary:
npkRelevancyUniqueID
npkRelevancyRelevantText
npkRelevancyTupleWithUniqueID:relevantText:
stringWithString:
numberWithLongLong:
addUserInfos:
userInfosCount
clearUserInfos
userInfosAtIndex:
userInfosType
hasDomain
domain
code
userInfos
setUserInfos:
_code
_domain
_userInfos
groups
uniqueIDs
passType
copy
minusSet:
setWithArray:
intersectSet:
anyObject
addObjectsFromArray:
catalogByMergingCompanionCatalog:intoWatchCatalog:watchPasses:
unsignedIntegerValue
setServiceURL:
hasServiceURL
setForceReRegistration:
setHasForceReRegistration:
hasForceReRegistration
serviceURL
forceReRegistration
_serviceURL
_forceReRegistration
setWebServiceContextBytes:
hasWebServiceContextBytes
webServiceContextBytes
_webServiceContextBytes
setAmount:
hasAmount
_amount
title
itemWithIdentifier:title:products:
itemWithIdentifier:products:
setTitle:
setProducts:
_title
_products
_identifier
sectionWithTitle:footer:
footer
sectionWithTitle:
setFooter:
_footer
_items
setPushToken:
hasPushToken
pushToken
_pushToken
hasProposedReconciledState
_proposedReconciledState
parsePayload:payloadID:maxCount:
allowedPayloadIDs
supportedCurrencyCodes
npk_objectForKey:class:
decimalNumberWithString:
notANumber
initWithSupportedCurrencyCodes:allowedPayloadIDs:
parsePayload:payloadID:
_supportedCurrencyCodes
_allowedPayloadIDs
userInfo
npk_errorWithDomain:code:
addEntriesFromDictionary:
errorWithDomain:code:userInfo:
addActualExpressPassInformation:
actualExpressPassInformationsCount
clearActualExpressPassInformations
actualExpressPassInformationAtIndex:
actualExpressPassInformationType
actualExpressPassInformations
setActualExpressPassInformations:
_actualExpressPassInformations
fromStepAsString:
StringAsFromStep:
toStepAsString:
StringAsToStep:
hasContext
fromStep
toStep
context
_context
_fromStep
_responseHeader
_toStep
setDataToSign:
setDigestToSign:
setAid:
hasDataToSign
hasDigestToSign
entanglementMode
setEntanglementMode:
setHasEntanglementMode:
hasEntanglementMode
entanglementModeAsString:
StringAsEntanglementMode:
hasAid
dataToSign
digestToSign
_aid
_dataToSign
_digestToSign
_entanglementMode
removeObserver:name:object:
_handleNotification:
addObserver:selector:name:object:
defaultCenter
_internalNameForNotificationName:
weak_removeObserver:name:object:
stringByAppendingString:
name
object
postNotificationName:object:userInfo:
weak_addObserver:selector:name:object:
weak_removeObserver:
setPassTypeIdentifier:
_passTypeIdentifier
setIsAvailable:
setHasIsAvailable:
hasIsAvailable
isAvailable
_isAvailable
resolveGreenTeaDataUsageIfNecessary
_resolveGreenTeaDataUsageIfNecessaryWithCompletion:
internalQueue
setInternalQueue:
currentlyResolving
setCurrentlyResolving:
_currentlyResolving
_internalQueue
_passData
_handlePMUButtonEvent
initWithHandler:
paymentSessionSourceReceivedDelegatedButtonEvent:
_performDelegateCallback:
hasOutstandingSessions
beginLocalAuthenticationWithCompletion:
initWithQueue:
setDeferAuthorization:
startSession
setCurrentPass:
setVasPasses:
paymentSessionSource:startedPaymentSession:dueToButtonEventAtDate:
invalidateLocalAuthenticationContexts
paymentSessionSource:declinedToStartPaymentSessionDueToPreconditionState:
initWithDelegate:callbackQueue:
setDelegateHandlingButtonEvents:
setPreconditionState:
setInitialPass:
setLocalAuthenticationCoordinator:
_delegate
_buttonListener
_sessionSourceQueue
_callbackQueue
_delegateHandlingButtonEvents
_deferAuthorization
_preconditionState
_initialPass
_vasPasses
_localAuthenticationCoordinator
setProductsActionData:
hasProductsActionData
productsActionData
_productsActionData
addPassSyncStateItems:
passSyncStateItemsCount
clearPassSyncStateItems
passSyncStateItemsAtIndex:
passSyncStateItemsType
passSyncStateItems
setPassSyncStateItems:
_passSyncStateItems
addSections:
sectionsCount
clearSections
sectionsAtIndex:
sectionsType
setSections:
_sections
numberWithUnsignedInt:
addUniqueIDs:
addManifestHashes:
setExpectedHash:
uniqueIDsCount
clearUniqueIDs
uniqueIDsAtIndex:
manifestHashesCount
clearManifestHashes
manifestHashesAtIndex:
uniqueIDsType
manifestHashesType
hasExpectedHash
setFullResyncNeeded:
setHasFullResyncNeeded:
hasFullResyncNeeded
setResyncID:
setHasResyncID:
hasResyncID
expectedHash
setUniqueIDs:
manifestHashes
setManifestHashes:
fullResyncNeeded
resyncID
_expectedHash
_manifestHashes
_resyncID
_uniqueIDs
_fullResyncNeeded
setCryptogram:
setChallengeResponse:
hasCryptogram
hasChallengeResponse
cryptogram
challengeResponse
_challengeResponse
_cryptogram
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
outgoingResponseIdentifier
incomingResponseIdentifier
expectsPeerResponse
isResponse
setSerialNumber:
hasSerialNumber
hasPassTypeIdentifier
_serialNumber
webService
UTF8String
_provisioningLocalizedProgressDescriptionDidChange:
addObserverForName:object:queue:usingBlock:
removeObserver:
dealloc
_handleProvisioningFlowStarted:
_performNextActionForProvisioningState:
_flowPickerSectionsWithContext:provisioningController:readerModeSupported:digitalIssuanceSupported:
_transitionToChooseFlowWithSections:requestContext:
associatedCredentialsForDefaultBehaviour
_transitionBasedOnCredentials:product:requestContext:
_transitionToChooseProductWithProducts:requestContext:
firstObject
_handleProductChosen:requestContext:
_startDigitalIssuancePaymentWithAmount:requestContext:
_transitionToReaderModeForProduct:requestContext:
_transitionToTermsForReason:URL:requestContext:
_handleProceedWithCredentials:chosenByUser:requestContext:
declineTerms
initWithRequestContext:
_performTransitionToStep:withContext:
requirementsResponse
requiredPaymentSetupFields
_localRequiredFieldsFromRequirementsResponse
_requiredFieldsFromRequirementsResponseExcludingLocalFields
defaultPaymentSetupProvisioningFields
resetForNewProvisioning
credentialProvisioningQueue
setCurrentCredential:
initWithPaymentSetupFields:
paymentSetupFields
paymentSetupFieldWithIdentifier:
isCurrentValueFromCameraCapture
setCurrentValueFromCameraCapture:
_fieldsModelCompleteExceptForLocalFields:
_transitionToSecondaryManualEntryWithFields:credential:requestContext:
rawDictionary
status
resolveAmbiguousRequirementsWithProductIdentifier:
acceptTerms
_handleReaderModeTermsAccepted:
_handleDigitalIssuanceTermsAccepted:
_handleEndOfProvisioningFlowForCurrentPass:requestContext:
provisionedPass
_performNextStepForProvisionedPass:moreInfoAcknowledged:requestContext:
_requestVerificationOptionsForPass:context:
_updateVerificationForPass:channel:context:
_handleVerificationFieldsForPass:context:
_handleVerificationCode:forPass:context:
setPublicKeyHash:
setNonce:
_endProvisioningFlowWithError:requestContext:
_performEligibility:
_fetchInAppProvisioningCertificates:
encryptionScheme
initWithEncryptionScheme:
nonce
setNonceSignature:
_fetchAddRequestWithCertificatesResponse:requestContext:
displayableErrorForProvisioningError:
_sendDidEncounterError:requestContext:
signNonce:withCompletion:
issuerProvisioningCertificatesForRequest:withCompletion:
publicKeyHash
certificates
setCertificates:
nonceSignature
_handlePreconditionsVerified:
validatePreconditionsAndRegister:
preflightWithCompletion:
_verifyPasscodeStateIfNecessaryWithCompletion:
_configureWebServiceIfNecessary:completion:
targetDevice
deviceRegion
manifestForRegion:
images
allValues
hasCachedImageWithScale:
sharedImageAssetDownloader
downloadImageWithScale:fileDownloader:completion:
setHeroImages:
heroImages
defaultImages
setupProductForProvisioning:includePurchases:withCompletionHandler:
setCredentialsToProvision:
nextCredentialToProvision
_startProvisioningForCredential:requestContext:
isAccountCredential
accountCredential
passDetailsResponse
account
creditDetails
termsAcceptanceRequired
setTermsAcceptedOutOfBand:
_requestRequirements:
_requestPassDetailsForAccountCredential:withCompletionHandler:
_noteProvisioningStateChangeForReaderMode:
_performRequirementsOrEligibilityForInAppProvisioning:
_performPasscodeUpgrade:
_performTerms:
_performProvision:
_handleFinished:
initWithPaymentCredential:
submissionString
initWithCardholderName:primaryAccountNumber:
initWithSource:
encryptionVersion
setEncryptionVersion:
encryptedPassData
setEncryptedCardData:
ephemeralPublicKey
setEphemeralPublicKey:
wrappedKey
setWrappedKey:
issuerIdentifier
setIssuerIdentifier:
hostApplicationIdentifier
setHostApplicationIdentifier:
hostApplicationVersion
setHostApplicationVersion:
FPInfo
setFPInfo:
hexEncoding
setCardholderName:
setCardholderNameInputMethod:
setPrimaryAccountNumber:
setPrimaryAccountNumberInputMethod:
setExpiration:
setExpirationInputMethod:
setProductIdentifier:
fieldsModel
submissionValuesForDestination:
setOverlayParameters:
secureSubmissionValuesForDestination:
setSecureOverlayParameters:
eligibilityResponse
initWithEligibilityResponse:
activationData
setActivationData:
setStyle:
setCardSecurityCode:
_newPaymentRequirementsRequest
possibleProducts
_transitionToProductDisambiguationWithProducts:requestContext:
updateWithPaymentSetupFields:
hasIncompletePaymentSetupFields
learnMoreURL
_displayableErrorWithIneligibilityReason:learnMoreURL:
requestRequirements:withCompletionHandler:
_newPaymentEligibilityRequest
eligibilityStatus
requestEligibility:withCompletionHandler:
passcodeUpgradeCompleted:
_transitionToProvisioningProgressWithRequestContext:
_newPaymentProvisioningRequest
newAssertionForBundle:withReason:
requestProvisioning:withCompletionHandler:
internalIngestionState
_performNextStepForProvisionedPass:requestContext:
secureElementIdentifiers
updateDevicePaymentApplicationsWithSecureElementIdentifiers:
moreInfoItems
_transitionToMoreInformationWithItems:pass:requestContext:
verificationRecordForPass:
verificationStatus
requiredVerificationFields
_transitionToVerificationFieldsWithPaymentPass:fields:requestContext:
channel
_transitionToVerificationCodeWithPaymentPass:channel:requestContext:
_downloadAndAddUpdatedPassForPaymentPass:completion:
allChannels
_transitionToVerificationChannelsWithPaymentPass:channels:requestContext:
requestWithPass:
_handleVerificationResponseForPass:context:
_displayableErrorWithUnderlyingVerificationError:
verificationOptionsForRequest:completion:
currentStepIdentifier
setChannel:
updateVerification:completion:
_downloadRemoteAssetsAndAddPaymentPass:completion:
submitVerificationCode:verificationData:forPass:completion:
passWithPassTypeIdentifier:serialNumber:completion:
dataAccessor
paymentWebService:addPaymentPass:withCompletionHandler:
downloadRemoteAssetsWithCloudStoreCoordinatorDelegate:completion:
devSigned
isRemoteCredential
remoteCredential
predicateWithBlock:
filteredArrayUsingPredicate:
_transitionToChooseCredentials:requestContext:
provisioningMethodTypes
provisioningMethodMetadataForType:
_transitionToDigitalIssuanceForProduct:requestContext:
_transitionToManualEntry:
UUID
UUIDString
setFlowIdentifiers:
setFlowIdentifierToCredential:
setAllowsManualEntry:
configuration
cameraFirstProvisioningEnabledForRegion:
setCameraFirstProvisioningEnabled:
setSetupFields:
incompletePaymentSetupFields
_filteredPaymentSetupFields:forLocalDeviceEntry:
setCredential:
setAllowsAddingDifferentCard:
setPaymentPass:
setMoreInfoItems:
setVerificationChannels:
setVerificationFields:
setVerificationChannel:
remaining
_endProvisioningFlowWithSuccessForPass:requestContext:
setCardAdded:
setProvisionedPass:
credential
_sendDidTransitionFromStep:toStep:withContext:
delegate
_requiredFieldsFromRequirementsResponse
_fieldRequiresLocalEntry:
pk_objectsPassingTest:
submissionStringMeetsAllRequirements
requiredFields
needsConfiguration
configurePaymentServiceWithCompletion:
bundleForClass:
localizedStringForKey:value:table:
paymentWebService:setNewAuthRandomIfNecessaryReturningPairingState:
setupAccountCredentialForProvisioning:completion:
handleProductSelection:requestContext:
skipIssuerVerification:
startInAppProvisioningFlowWithConfiguration:requestContext:
handleIssuerApplicationAddRequest:requestContext:
provisioningController
setupContext
isReaderModeProvisioningSupported
setReaderModeProvisioningSupported:
isDigitalIssuanceSupported
isSeparateLocalDeviceEntryRequired
unitTestingAuthorizationController
setUnitTestingAuthorizationController:
unitTestingCardIngester
setUnitTestingCardIngester:
inAppProvisioningRequestConfiguration
setInAppProvisioningRequestConfiguration:
inAppProvisioningRequest
setInAppProvisioningRequest:
inAppProvisioningPublicKeyHash
setInAppProvisioningPublicKeyHash:
inAppProvisioningNonce
setInAppProvisioningNonce:
inAppProvisioningGetRequestTimer
setInAppProvisioningGetRequestTimer:
setWebService:
currentStep
setCurrentStep:
chooseCredentialsStepIdentifier
setChooseCredentialsStepIdentifier:
immediatelyBeforeTermsStepIdentifier
setImmediatelyBeforeTermsStepIdentifier:
setFieldsModel:
progressNotificationToken
setProgressNotificationToken:
provisioningProgressRequestContext
setProvisioningProgressRequestContext:
issuerVerificationPass
setIssuerVerificationPass:
currentCredential
currentProduct
setCurrentProduct:
termsReason
setTermsReason:
termsAcceptedOutOfBand
digitalIssuancePaymentRequest
setDigitalIssuancePaymentRequest:
digitalIssuanceAmount
setDigitalIssuanceAmount:
digitalIssuancePurchase
setDigitalIssuancePurchase:
digitalIssuanceRequestContext
setDigitalIssuanceRequestContext:
authorizationController
setAuthorizationController:
cardIngester
setCardIngester:
setInternalIngestionState:
flowIngestionState
setFlowIngestionState:
ingestionProgress
setIngestionProgress:
ingestionStateOnRetry
setIngestionStateOnRetry:
ingestionCardSessionToken
setIngestionCardSessionToken:
ingestionCardNotFoundTimer
setIngestionCardNotFoundTimer:
ingestionMethodMetadata
setIngestionMethodMetadata:
readerModeRequestContext
setReaderModeRequestContext:
_readerModeProvisioningSupported
_digitalIssuanceSupported
_separateLocalDeviceEntryRequired
_termsAcceptedOutOfBand
_currentStep
_provisioningController
_setupContext
_unitTestingAuthorizationController
_unitTestingCardIngester
_inAppProvisioningRequestConfiguration
_inAppProvisioningRequest
_inAppProvisioningPublicKeyHash
_inAppProvisioningNonce
_inAppProvisioningGetRequestTimer
_webService
_chooseCredentialsStepIdentifier
_immediatelyBeforeTermsStepIdentifier
_fieldsModel
_progressNotificationToken
_provisioningProgressRequestContext
_issuerVerificationPass
_currentCredential
_currentProduct
_termsReason
_digitalIssuancePaymentRequest
_digitalIssuanceAmount
_digitalIssuancePurchase
_digitalIssuanceRequestContext
_authorizationController
_cardIngester
_internalIngestionState
_flowIngestionState
_ingestionProgress
_ingestionStateOnRetry
_ingestionCardSessionToken
_ingestionCardNotFoundTimer
_ingestionMethodMetadata
_readerModeRequestContext
initWithPendingStatusProtobuf:service:priority:maxUpdates:responseIdentifier:sendOptions:queue:updateInterval:
_sendStatusUpdate
service
pendingStatusProtobuf
responseIdentifier
statusTimer
setStatusTimer:
sendOptions
messagePriority
updatesSent
setUpdatesSent:
maxUpdates
initWithPendingStatusProtobuf:service:priority:maxUpdates:responseIdentifier:sendOptions:queue:
setService:
setPendingStatusProtobuf:
setMessagePriority:
setResponseIdentifier:
setSendOptions:
setMaxUpdates:
_service
_pendingStatusProtobuf
_messagePriority
_responseIdentifier
_statusTimer
_sendOptions
_updatesSent
_maxUpdates
setBalanceReminderBytes:
hasBalanceReminderBytes
balanceReminderBytes
_balanceReminderBytes
setAuthToken:
hasAuthToken
authToken
_authToken
setPassID:
setPreferredApplicationAID:
hasPassID
hasPreferredApplicationAID
passID
preferredApplicationAID
_passID
_preferredApplicationAID
setUseSimulatedFlowController:
setHasUseSimulatedFlowController:
hasUseSimulatedFlowController
setHasSeparateLocalDeviceEntryRequired:
hasSeparateLocalDeviceEntryRequired
_useSimulatedFlowController
pathForResource:ofType:
defaultManager
fileExistsAtPath:
fileURLWithPath:
initWithCGImage:scale:orientation:
resizedImageWithSize:shouldCover:
size
constraintsWithMaxSize:
resizedImage:
resizedImageToCover:
resizedImageToFit:
logoImage
setLogoImage:
backgroundImage
setBackgroundImage:
thumbnailImage
setThumbnailImage:
stripImage
setStripImage:
footerImage
setFooterImage:
bankLogoImage
setBankLogoImage:
networkLogoImage
setNetworkLogoImage:
cobrandLogoImage
setCobrandLogoImage:
cardBackgroundImage
setCardBackgroundImage:
cardBackgroundCombinedImage
setCardBackgroundCombinedImage:
loadPDFArtFromBundle:targetSize:scale:
resizeWithScreenSize:
loadPDFArtFromBundle:
npkHasValidPaymentCardAssets
setRegistrationDataBytes:
hasRegistrationDataBytes
registrationDataBytes
_registrationDataBytes
initWithPass:lazyLoadEncodedImages:
setLazyLoadEncodedImages:
setManifestHash:
relevantDate
setRelevantDate:
logoText
setLogoText:
displayProfile
backgroundColor
setBackgroundColor:
foregroundColor
setForegroundColor:
labelColor
setLabelColor:
ingestedDate
setIngestionDate:
setDevicePaymentApplications:
setDevicePrimaryContactlessPaymentApplication:
devicePrimaryInAppPaymentApplication
setDevicePrimaryInAppPaymentApplication:
isPrivateLabel
setPrivateLabel:
isCobranded
setCobranded:
setDeletePending:
constraintsWithFixedSize:
blurredImageWithRadius:constraints:
localizedDescription
setLocalizedDescription:
setNfcPayload:
setCompleteHash:
hasStoredValue
setHasStoredValue:
setSettings:
issuerCountryCode
setIssuerCountryCode:
availableActions
setAvailableActions:
organizationName
setOrganizationName:
setExpressPassTypesMask:
hasAssociatedPeerPaymentAccount
setHasAssociatedPeerPaymentAccount:
decodeObjectOfClass:forKey:
setGroupID:
decodeIntegerForKey:
setWithObjects:
decodeObjectOfClasses:forKey:
setPreferredPaymentApplication:
setEffectivePaymentApplicationState:
decodeBoolForKey:
setHasUserSelectableContactlessPaymentApplications:
setLogoImageEncoded:
setBackgroundImageEncoded:
setTransitAppletState:
setFrontFieldBuckets:
setBackFieldBuckets:
setLastAddValueAmount:
setPendingAddValueDate:
encodeObject:forKey:
groupID
encodeInteger:forKey:
ingestionDate
preferredPaymentApplication
effectivePaymentApplicationState
encodeBool:forKey:
deletePending
hasUserSelectableContactlessPaymentApplications
logoImageEncoded
backgroundImageEncoded
completeHash
numberWithUnsignedInteger:
transitAppletState
frontFieldBuckets
backFieldBuckets
lastAddValueAmount
pendingAddValueDate
expressPassTypesMask
isEqualToData:
isEqualToDate:
numberWithInteger:
arrayWithObjects:count:
stringByAppendingFormat:
encodeAsData:
lazyLoadEncodedImages
isCachingEnabled
supportsInAppPaymentOnNetworks:capabilities:issuerCountryCodes:paymentApplicationStates:
acceptedForNonWebPaymentWithSupportedNetworkIdentifiers:merchantCapabilities:paymentMode:
filteredSetUsingPredicate:
transitPassPropertiesWithPaymentApplication:
transitProperties
isInStation
felicaProperties
isInShinkansenStation
supportsSecureCoding
setCachingEnabled:
encodeWithCoder:
initWithCoder:
initWithPass:
encodeObject:asDataInCoder:withKey:
supportsInAppPaymentOnNetworks:issuerCountryCodes:
effectiveContactlessPaymentApplicationState
fieldForKey:
isAddValuePending
isEnroute
hasValidNFCPayload
_hasStoredValue
_privateLabel
_cobranded
_deletePending
_hasUserSelectableContactlessPaymentApplications
_hasAssociatedPeerPaymentAccount
_lazyLoadEncodedImages
_logoImage
_backgroundImage
_expressPassTypesMask
_backgroundImageEncoded
_logoImageEncoded
_groupID
_manifestHash
_style
_relevantDate
_ingestionDate
_nfcPayload
_completeHash
_settings
_logoText
_backgroundColor
_foregroundColor
_labelColor
_localizedDescription
_devicePaymentApplications
_devicePrimaryContactlessPaymentApplication
_devicePrimaryInAppPaymentApplication
_preferredPaymentApplication
_effectivePaymentApplicationState
_issuerCountryCode
_availableActions
_organizationName
_transitAppletState
_frontFieldBuckets
_backFieldBuckets
_lastAddValueAmount
_pendingAddValueDate
isTransitPass
isAccessPass
initWithRequestConfiguration:delegate:
initWithMachServiceName:remoteObjectInterface:exportedObjectInterface:exportedObject:
_remoteObjectProxyWithErrorHandler:
presentWithCompletion:
setConfiguration:completionHandler:
dismissWithCompletion:
_sendDidFinishWithPass:error:
addPaymentPassController:generateRequestWithCertificateChain:nonce:nonceSignature:completionHandler:
remoteObjectProxyWithErrorHandler:
addPaymentPassController:didFinishAddingPaymentPass:error:
canAddPaymentPass
generateRequestWithCertificateChain:nonce:nonceSignature:completionHandler:
didFinishWithPass:error:
remoteService:didEstablishConnection:
remoteService:didInterruptConnection:
remoteServiceDidResume:
remoteServiceDidSuspend:
setConfiguration:
remoteService
setRemoteService:
didFinishCallbackSent
setDidFinishCallbackSent:
_didFinishCallbackSent
_configuration
_remoteService
setDigitalCardImageUrl:
setThumbnailImageUrl:
setLogoImageUrl:
hasDigitalCardImageUrl
hasThumbnailImageUrl
hasLogoImageUrl
digitalCardImageUrl
thumbnailImageUrl
logoImageUrl
_digitalCardImageUrl
_logoImageUrl
_thumbnailImageUrl
addRemoteCredentials:
addCredentials:
remoteCredentialsCount
clearRemoteCredentials
remoteCredentialsAtIndex:
credentialsCount
clearCredentials
credentialsAtIndex:
remoteCredentialsType
credentialsType
setHasAllowsManualEntry:
hasAllowsManualEntry
remoteCredentials
setRemoteCredentials:
credentials
setCredentials:
allowsManualEntry
_credentials
_remoteCredentials
_allowsManualEntry
setLibraryHash:
setPreviousManifestHash:
hasLibraryHash
hasPreviousManifestHash
setLastKnownResyncID:
setHasLastKnownResyncID:
hasLastKnownResyncID
setSyncID:
setHasSyncID:
hasSyncID
libraryHash
previousManifestHash
lastKnownResyncID
syncID
_catalog
_lastKnownResyncID
_libraryHash
_previousManifestHash
_syncID
_openTapToRadarWithRequest:completion:
_requestUserPermisionToFileRadarWithRequest:completion:
_applicationWorkSpace
tapToRadarURL
openURL:configuration:completionHandler:
defaultWorkspace
fileRadarWithRequest:requestUserPermision:completion:
protocolVersionAsString:
StringAsProtocolVersion:
hasSessionIdentifier
_protocolVersion
_sessionIdentifier
_errorWithUnderlyingError:
initWithType:reason:
isAcquired
acquireWithCompletion:
invalidateWithCompletion:
reason
_reason
_handleDeviceUnpaired:
_handleDevicePaired:
_handleDeviceBecameActive:
_handleDevicePairingFailure:
_handleCompanionAgentStarted
valueForProperty:
deferredActions
deferredSharedPaymentWebServiceContexts
deferredAddedPaymentPasses
removeObject:
deferredPaymentPassesForDevice:
setQueueAppropriateFailedActions:
enumerateKeysAndObjectsUsingBlock:
_performDeferredActions
_cleanUpDeferredDataForPairingID:
getPairedDevices
allKeys
unionSet:
sharedDeferredActionHandler
performActionWhenCompanionAgentIsAvailable:forDevice:
deferredSharedPaymentWebServiceContextForDevice:
setDeferredSharedPaymentWebServiceContext:forDevice:
addDeferredPaymentPass:forDevice:
deferredPaymentPassUniqueIDsForDevice:
deferredPaymentPassWithUniqueID:forDevice:
setDeferredActions:
setDeferredSharedPaymentWebServiceContexts:
setDeferredAddedPaymentPasses:
_deferredActions
_deferredSharedPaymentWebServiceContexts
_deferredAddedPaymentPasses
addChosenPaymentCredentialIdentifiers:
chosenPaymentCredentialIdentifiersCount
clearChosenPaymentCredentialIdentifiers
chosenPaymentCredentialIdentifiersAtIndex:
chosenPaymentCredentialIdentifiersType
setChosenPaymentCredentialIdentifiers:
_chosenPaymentCredentialIdentifiers
numberWithUnsignedLongLong:
setBitmapData:
width
setWidth:
height
setHeight:
bitsPerComponent
setBitsPerComponent:
bitsPerPixel
setBitsPerPixel:
bytesPerRow
setBytesPerRow:
bitmapInfo
setBitmapInfo:
bitmapData
_bitsPerComponent
_bitsPerPixel
_bytesPerRow
_height
_width
_bitmapData
_bitmapInfo
setIdentifier:
setImageHash:
setImageData:
hasImageHash
hasImageData
imageHash
imageData
_imageData
_imageHash
acceptedPasses
deviceInAppPaymentApplications
beginUpdates
setPaymentApplication:
endUpdates
peerPaymentQuote
npkIsPeerPayment
paymentRequest
paymentSummaryItems
lastObject
firstQuoteItemOfType:
npkIsSplitPeerPayment
_hasNonPeerPaymentAcceptedPasses
requestType
npkSetPassAndPaymentApplicationForAID:
npkIsSkeletonPeerPayment
npkIsSplitPeerPaymentWithAnotherPaymentMethod
npkIsSplitPeerPaymentWithoutAnotherPaymentMethod
npkIsCardOnFilePayment
devices
deviceForNRDevice:fromIDSDevices:
isConnected
setPasscodeConnection:
setSystemSettingsManager:
setPreflighting:
setPreflightCompletionHandler:
_checkSpaceAvailableOnSecureElement
_checkWatchConnected
_checkCompanioniCloudAccount
_checkWatchiCloudAccount
_checkPasscodeEnabledAndUnlockedState
_checkWristDetectEnabledState
_finishPresentingSetupControllerIfReadyWithSuccess:error:
watchConnected
_errorForConnectionIssue
companionAgentConnection
setSpaceAvailableOnSecureElement:
localizedStringFromNumber:numberStyle:
paymentPassUniqueIDsSynchronous:reply:
setWatchConnected:
setNeedsCompanioniCloudAccount:
setCheckedCompanioniCloudStatus:
_errorForCompanionAccountNeeded
setNeedsWatchiCloudAccount:
setCheckedWatchiCloudStatus:
_currentlyPairing
setCheckedWatchPasscodeAndUnlockedStatus:
setNeedsPasscode:
setNeedsUnlock:
setAuthRandomSetIfNecessary:
setWatchPasscodeAndUnlockedQueryDate:
passcodeConnection
checkedWatchPasscodeAndUnlockedStatus
needsPasscode
needsUnlock
_setAuthRandomIfNecessary
getRemoteDeviceState:
watchPasscodeAndUnlockedQueryDate
boolValue
setNeedsWristDetection:
boolForKey:
setCheckedWristDetectionStatus:
_errorForGenericIssue
setNewAuthRandomIfNecessaryAtBeginningOfProvisioningFlow:
isPreflighting
checkedWristDetectionStatus
needsWristDetection
_errorForWristDetectNeeded
checkedCompanioniCloudStatus
needsCompanioniCloudAccount
checkedWatchiCloudStatus
needsWatchiCloudAccount
_errorForGizmoAccountNeeded
_errorForPasscodeNeeded
_errorForUnlockNeeded
spaceAvailableOnSecureElement
authRandomSetIfNecessary
preflightCompletionHandler
URLWithString:
getActivePairedDevice
initWithWebService:companionAgentConnection:
addCardPreflightWithCompletion:
transferToCompanionPreflightWithCompletion:
systemSettingsManager
setCompanionAgentConnection:
_checkedWatchPasscodeAndUnlockedStatus
_checkedCompanioniCloudStatus
_checkedWatchiCloudStatus
_checkedWristDetectionStatus
_authRandomSetIfNecessary
_watchConnected
_spaceAvailableOnSecureElement
_needsPasscode
_needsUnlock
_needsCompanioniCloudAccount
_needsWatchiCloudAccount
_needsWristDetection
_preflighting
_passcodeConnection
_systemSettingsManager
_preflightCompletionHandler
_companionAgentConnection
_watchPasscodeAndUnlockedQueryDate
associatedCredentials
paymentSetupBrowsableProductTypesForRegion:
paymentSetupProductModel
_filteredPaymentSetupProducts:localCredentials:setupContext:webService:mobileCarrierRegion:readerModeSupported:digitalIssuanceSupported:
setupProductsOfType:
betaPaymentNetworksForRegion:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
isEqualToNumber:
paymentOptions
cardType
insertObject:atIndex:
allSetupProducts
_localCredentials:containProduct:
supportsOSVersion:deviceClass:
regions
supportedProvisioningMethods
allSupportedProtocols
supportsCredentialType:
hsa2Requirement
_isHSA2Enabled
setSupportedProvisioningMethods:
setPaymentSetupProducts:
aa_primaryAppleAccount
altDSIDForAccount:
setAltDSID:
setSecurityUpgradeContext:
_authContext
altDSID
authKitAccountWithAltDSID:
securityLevelForAccount:
credentialType
pk_containsObjectPassingTest:
setHashData:
hasHashData
hashData
_hashData
setLocalizedName:
setDeviceName:
setPassType:
setHasPassType:
hasPassType
passTypeAsString:
StringAsPassType:
hasLocalizedName
hasLocalizedDescription
hasOrganizationName
setRemotePass:
setHasRemotePass:
hasRemotePass
hasDeviceName
localizedName
remotePass
deviceName
_deviceName
_localizedName
_passType
_remotePass
_performFakeTransitHistoryFetch
transitAppletHistoryFetcher:gotTransitAppletHistory:forAppletWithAID:
initWithCallbackQueue:
setAIDToFetch:
requestTransitHistoryFetch
aidToFetch
setAidToFetch:
callbackQueue
setCallbackQueue:
_aidToFetch
setUrlString:
hasUrlString
urlString
_urlString
initWithTransitProperties:balanceFields:
balanceFields
_transitProperties
_balanceFields
addBalanceBytes:
balanceBytesCount
clearBalanceBytes
balanceBytesAtIndex:
balanceBytesType
balanceBytes
setBalanceBytes:
_balanceBytes
setResponseDictionary:
hasResponseDictionary
setHttpStatus:
setHasHttpStatus:
hasHttpStatus
resultCode
setResultCode:
responseDictionary
httpStatus
_httpStatus
_responseDictionary
_resultCode
initWithMachServiceName:options:
setTransientPassUniqueID:
setServiceModeRequested:
setDisableCardSelection:
interfaceWithProtocol:
setRemoteObjectInterface:
_resyncState
setInterruptionHandler:
setXpcConnection:
setInvalidationHandler:
_setQueue:
resume
_remoteObjectProxy
initWithPassWithUniqueID:
setRequestServiceMode:
requestServiceMode
disableCardSelection
xpcConnection
_requestServiceMode
_disableCardSelection
_xpcConnection
setUpdateRequestData:
hasUpdateRequestData
setCancelUpdate:
setHasCancelUpdate:
hasCancelUpdate
hasPass
setRequestAuthorization:
setHasRequestAuthorization:
hasRequestAuthorization
setShouldNotifyUser:
setHasShouldNotifyUser:
hasShouldNotifyUser
updateRequestData
cancelUpdate
requestAuthorization
shouldNotifyUser
_updateRequestData
_cancelUpdate
_requestAuthorization
_shouldNotifyUser
addPassAppletStates:
passAppletStatesCount
clearPassAppletStates
passAppletStatesAtIndex:
passAppletStatesType
passAppletStates
setPassAppletStates:
_passAppletStates
addReferenceExpressPassesInformation:
setExpressPassInformation:
referenceExpressPassesInformationsCount
clearReferenceExpressPassesInformations
referenceExpressPassesInformationAtIndex:
referenceExpressPassesInformationType
hasExpressPassInformation
expressPassInformation
referenceExpressPassesInformations
setReferenceExpressPassesInformations:
_expressPassInformation
_referenceExpressPassesInformations
setAuthRandomSet:
setHasAuthRandomSet:
hasAuthRandomSet
authRandomSet
_authRandomSet
setVerificationCode:
hasVerificationCode
_verificationCode
setKey:
setValue:
hasValue
value
_key
_value
_baseFlowStepDescription
verificationCodeStepContext
getIssuerApplicationAddRequestStepContext
_requestContext
_currentStepIdentifier
_heroImages
product
setProduct:
_flowIdentifierToCredential
_flowIdentifiers
_product
allowsReaderModeEntry
setAllowsReaderModeEntry:
_allowsReaderModeEntry
subtitle
setSubtitle:
_subtitle
_setupFields
ingestionState
physicalCardImageURL
setPhysicalCardImageURL:
setIngestionState:
_physicalCardImageURL
_ingestionState
cameraFirstProvisioningEnabled
_cameraFirstProvisioningEnabled
allowsAddingDifferentCard
_allowsAddingDifferentCard
_credential
_moreInfoItems
_paymentPass
cardAdded
_cardAdded
_provisionedPass
_error
_verificationChannels
_verificationFields
verificationChannel
_verificationChannel
_certificates
_nonce
_nonceSignature
isIncompatible
setIncompatible:
setDate:
paymentApplication
transaction
setTransaction:
valueAddedServicePasses
setValueAddedServicePasses:
valueAddedServiceTransactions
setValueAddedServiceTransactions:
transitHistory
setTransitHistory:
felicaHistory
expressState
setExpressState:
_incompatible
_date
_paymentApplication
_transaction
_valueAddedServicePasses
_valueAddedServiceTransactions
_transitHistory
_felicaHistory
_expressState
registerObserver:
_handleTimeoutTimer
_setTimeoutTimer
_handleTransactionCompleteDarwinNotification
unregisterObserver:
ourInternalQueue
setOurCurrentPass:
invalidated
ourCallbackQueue
paymentSession:didMakePassCurrent:
paymentSession:willActivatePass:
_scheduleDidActivateEventForPass:
ourCurrentPass
setOurVasPasses:
ourVasPasses
setOurInServiceMode:
ourInServiceMode
paymentSession:didCompleteForReason:withTransactionContext:
ourConfirmed
setOurConfirmed:
paymentSessionDidReceiveCredential:
setInvalidated:
changeCardToken
setChangeCardToken:
paymentSession:didActivatePass:
timeoutTimer
fieldDetectorDidEnterField:withProperties:
fieldDetectorDidExitField:
currentPass
vasPasses
deferAuthorization
setInServiceMode:
inServiceMode
confirmOrRenewSession
renewSession
deactivateSessionWithCompletion:
setOurCallbackQueue:
setOurInternalQueue:
setTimeoutTimer:
fieldDetector
setFieldDetector:
_ourConfirmed
_ourInServiceMode
_invalidated
_ourCurrentPass
_ourVasPasses
_ourCallbackQueue
_ourInternalQueue
_timeoutTimer
_fieldDetector
_changeCardToken
addVerificationFields:
verificationFieldsCount
clearVerificationFields
verificationFieldsAtIndex:
verificationFieldsType
setPaymentWebServiceContextData:
hasPaymentWebServiceContextData
paymentWebServiceContextData
_paymentWebServiceContextData
initWithCurrencyCode:
setCurrencyCode:
stringFromNumber:
currencySymbol
currencyCode
_decimalNumberFormatter
_nonDecimalNumberFormatter
_currencyCode
archiveData
npkArchiveData
_init
currentUserActivity
passListUserActivity
initWithActivityType:
setPassListUserActivity:
_saveUserActivity:
provisionPassUserActivity
_skeletonBridgeUserActivity
setProvisionPassUserActivity:
individualPassUserActivity
setIndividualPassUserActivity:
addUserInfoEntriesFromDictionary:
getPaymentPassesUserActivity
setGetPaymentPassesUserActivity:
setUpPeerPaymentUserActivity
setSetUpPeerPaymentUserActivity:
viewPeerPaymentUserActivity
setViewPeerPaymentUserActivity:
setCurrentUserActivity:
becomeCurrent
sharedContinuityCoordinator
userViewingPassList
userViewingPassWithUniqueID:isPaymentPass:
userNeedsToProvisionPassWithUniqueID:
userNeedsPaymentPasses
userNeedsToSetUpPeerPayment
userNeedsToViewPeerPaymentForHandle:
userActivityForPassWithUniqueID:
invalidateAllActivities
_provisionPassUserActivity
_getPaymentPassesUserActivity
_passListUserActivity
_individualPassUserActivity
_setUpPeerPaymentUserActivity
_viewPeerPaymentUserActivity
_currentUserActivity
weakObjectsHashTable
acquiredAssertions
acquiredAssertionWithType:
_queue_acquireAssertionWithType:reason:completion:
_queue_invalidateAssertionWithType:completion:
addAssertion:
sharedManager
removeAssertion:
containsAssertionWithType:
acquireAssertionWithType:reason:completion:
invalidateAssertionWithType:completion:
setAcquiredAssertions:
_acquiredAssertions
assertionUUID
setAssertionUUID:
assertType
setAssertType:
_assertType
_assertionUUID
_sendAssertionRequest:
_outstandingAssertionStatusUpdaterWithRequest:assertionType:assertionUUID:
_addOutstandingAssertionStatusUpdater:withAssertType:
_removeOutstandingAssertionStatusUpdaterWithUUID:
assertTypesUUIDsMap
transportationService
_IDSSendOptions
outstandingAssertionStatusUpdaters
initWithTransportationService:
acquireAssertionOfType:
invalidateAssertionWithUUID:
assertionsUUIDsOfType:
setOutstandingAssertionStatusUpdaters:
setAssertTypesUUIDsMap:
_transportationService
_outstandingAssertionStatusUpdaters
_assertTypesUUIDsMap
_readerModeEntryAllowedForProduct:
initWithPaymentRequest:
setPrivateDelegate:
minLoadedBalance
maxLoadedBalance
_paymentRequestForAmount:
_addCardErrorForPaymentRequest:
canPresentPaymentRequest:completion:
depositAmount
zero
decimalNumberByAdding:
digitalIssuanceMetadata
action
setItemDescription:
serviceProviderDict
initWithDictionary:
setServiceProviderData:
serviceProviderIdentifier
setServiceProviderIdentifier:
initWithServiceProviderOrder:
serviceProviderSupportedNetworks
setSupportedNetworks:
serviceProviderCapabilities
setMerchantCapabilities:
serviceProviderCountryCode
setCountryCode:
currency
summaryItemWithLabel:amount:
setPaymentSummaryItems:
initWithAmount:currency:
initWithPaymentSetupProduct:purchase:balance:
resolveRequirementsUsingProvisioningMethodMetadata:
setRequirementsResponse:
isSupported
supportedNetworks
merchantCapabilities
objectAtIndexedSubscript:
paymentAuthorizationController:didAuthorizePayment:handler:
paymentAuthorizationControllerDidFinish:
paymentAuthorizationController:didAuthorizePurchase:completion:
paymentAuthorizationController:didAuthorizePayment:completion:
paymentAuthorizationControllerWillAuthorizePayment:
paymentAuthorizationController:didSelectShippingMethod:handler:
paymentAuthorizationController:didSelectShippingContact:handler:
paymentAuthorizationController:didSelectPaymentMethod:handler:
paymentAuthorizationController:didSelectShippingMethod:completion:
paymentAuthorizationController:didSelectShippingContact:completion:
paymentAuthorizationController:didSelectPaymentMethod:completion:
paymentAuthorizationController:didEncounterAuthorizationEvent:
paymentAuthorizationController:willFinishWithError:
paymentAuthorizationController:didRequestMerchantSession:
paymentAuthorizationController:didAuthorizePeerPaymentQuote:handler:
paymentAuthorizationController:didAuthorizeDisbursementVoucher:handler:
downloadRemoteAssetsWithCompletion:
passAtURL:completion:
_handleAccountChanged:
sharedWebServiceProvider
peerPaymentAccount
updatePeerPaymentAccountWithCompletion:
bridgedClientInfoHTTPHeader
globalDomainAccessor
setBool:forKey:
synchronize
preferencesSyncManager
synchronizeNanoDomain:keys:
associatedPassURL
attemptToDownloadPeerPaymentPassAtURL:withWebService:completion:
provisionPeerPaymentPassWithCompletion:
initializeCloudStoreIfNecessaryWithCompletion:
initializeCloudStoreIfNecessaryWithHandler:
checkTLKsMissingWithCompletion:
resetApplePayManateeViewWithCompletion:
cloudStoreStatusWithCompletion:
peerPaymentRegisterWithURL:forceReRegistration:completion:
appleAccountInformation
downloadPassIfNecessaryWithCompletion:
updateAccountWithCompletion:
bridgedClientInfo
userHasDisabledPeerPayment
setUserHasDisabledPeerPayment:
provisionPeerPaymentPassWithProvisioningController:credential:completion:
initalizeCloudStoreIfNecessaryWithHandler:
peerPaymentReRegisterWithURL:pushToken:peerPaymentWebService:completion:
peerPaymentReRegisterWithURL:pushToken:completion:
initalizeCloudStoreIfNecessaryWithCompletion:
renewAppleAccountWithCompletionHandler:
setGlobalDomainAccessor:
setPreferencesSyncManager:
_globalDomainAccessor
_preferencesSyncManager
setChosenProductIdentifier:
hasChosenProductIdentifier
_chosenProductIdentifier
dataWithBytesNoCopy:length:freeWhenDone:
initWithCGImageRef:
initWithEncodedImage:
encodedImage
createImageRef
enumerateAllPixels:
setAppDisplayName:
hasAppDisplayName
appDisplayName
_appDisplayName
transitBalance
npkIsEnroute
npkHasTransitBalance
setCancelOutstandingRequests:
setHasCancelOutstandingRequests:
hasCancelOutstandingRequests
cancelOutstandingRequests
_cancelOutstandingRequests
_outstandingSessionHashTable
isDeactivated
_handleNewContactlessSession:
_internalQueue_updateSessionWithCurrentPassAndLoyaltyState
_sessionQueue_enablePersistentCardEmulation
_sessionQueue_startContactlessSessionWithSuccessfulCompletionOnInternalQueue:
isConfirmed
setConfirmed:
contactlessSession
activatedPaymentApplication
_sessionQueue_authorizeWithDeferredAuthorization:useCredential:
_sessionQueue_invokeAppropriateCallbackForActivationWithSuccess:invokeOnSuccess:contactlessValidity:forPass:
_checkContactlessValidity:authorizationValidity:performWork:
_internalQueue_getContactlessAndAuthorizationValidityAndPerformWork:
isDeactivating
_internalQueue_deactivateSessionWithCompletion:
contactlessSessionHandle
deactivationCompletionBlocks
setDeactivationCompletionBlocks:
setDeactivating:
setDeactivated:
_internalQueue_invokeDeactivationCompletionBlocks
invalidateSessionWithCompletion:
setContactlessSessionHandle:
setContactlessSession:
_internalQueue_updateContactlessValidityAndPerformWork:
_sessionQueue_updateContactlessSessionForPass:paymentApplication:vasPasses:sessionConfirmed:deferAuthorization:
activatedValueAddedServicePasses
_checkContactlessValidity:performWork:
activateValueAddedServicePasses:
activatePaymentApplication:forPaymentPass:
startContactlessInterfaceSessionWithCompletion:targetQueue:
isFirstInQueue
invalidateSession
queuePersistentCardEmulation
authorizeAndStartCardEmulationWithCredential:deferAuthorization:
_updateAuthorizationValidity
_internalQueue_updateContactlessSessionForPass:vasPasses:
paymentSessionDidEnterField:
paymentSessionDidExitField:
paymentSessionDidReceiveStartTransaction:
paymentSessionDidReceiveActivityTimeout:
_handleTransitTransactionWithContext:
_handleConventionalTransactionWithContext:
contactlessInterfaceSession:didFinishTransactionWithContext:
paymentSessionDidSelectPayment:
paymentSessionDidSelectValueAddedService:
didSucceed
paymentSession:didFailTransactionForPass:withValueAddedServiceTransactions:forValueAddedServicePasses:
contactlessInterfaceSessionHasPendingServerRequest:
contactlessInterfaceSessionDidFailTransaction:forPaymentApplication:paymentPass:
contactlessInterfaceSessionDidTimeout:forPaymentApplication:paymentPass:valueAddedServicePasses:
contactlessInterfaceSessionDidFail:forPaymentApplication:paymentPass:valueAddedServicePasses:
contactlessInterfaceSessionDidTerminate:
contactlessInterfaceSessionDidStartTransaction:
contactlessInterfaceSessionDidReceiveActivityTimeout:
contactlessInterfaceSession:didEndPersistentCardEmulationWithContext:
contactlessInterfaceSession:didTransitionFromState:toState:
contactlessInterfaceSessionDidEnterField:withProperties:
contactlessInterfaceSession:didReceiveExpressState:
contactlessInterfaceSessionDidExitField:
contactlessInterfaceSessionDidSelectPayment:
contactlessInterfaceSessionDidSelectValueAddedService:
contactlessInterfaceSessionDidFailDeferredAuthorization:
_loyaltyEngineConfigurationChanged:
paymentSessionQueue
setPaymentSessionQueue:
contactlessValidity
setContactlessValidity:
authorizationValidity
setAuthorizationValidity:
_inServiceMode
_confirmed
_deactivating
_deactivated
_currentPass
_paymentSessionQueue
_contactlessSessionHandle
_contactlessSession
_contactlessValidity
_authorizationValidity
_deactivationCompletionBlocks
setDeviceMetadata:
hasDeviceMetadata
deviceMetadata
_deviceMetadata
setAccountData:
hasAccountData
accountData
_accountData
setLabel:
setDetail:
arrayWithObjects:
decimalNumberByMultiplyingBy:
setMerchantIdentifier:
setRequiredShippingContactFields:
setRequiredBillingContactFields:
setBillingContact:
setShippingContact:
setShippingMethods:
shippingMethods
setGivenName:
setFamilyName:
setName:
setEmailAddress:
phoneNumberWithStringValue:
setPhoneNumber:
setStreet:
setCity:
setPostalCode:
setCountry:
setISOCountryCode:
setPostalAddress:
stopUpdatingLocation
setCompletionHandler:
initWithEffectiveBundle:delegate:onQueue:
requestWhenInUseAuthorization
location
completionHandler
startUpdatingLocation
setLocationFixTimeout:
setLocationManager:
setInUseAssertion:
_finishLocationFixWithLocation:
locationManager
locationFixTimeout
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
fetchLocationWithCompletion:
inUseAssertion
locationManagerQueue
setLocationManagerQueue:
_completionHandler
_locationFixTimeout
_locationManager
_inUseAssertion
_locationManagerQueue
authorizationStatusForBundle:
locationServicesEnabled
horizontalAccuracy
timestamp
engineName
_sendNextStateChange
syncStateItem
baseManifestHashForPartialUpdate
remoteAssetsForPartialUpdate
backupState
syncStateHash
setReconciledState:
setBackupState:
_unexpectedEventOccurred
_sendStateChangeProcessedWithUUID:changeAccepted:fullPassRequired:
passSyncStateByAddingOrUpdatingSyncStateItem:
passSyncStateByRemovingPassWithUniqueID:
_requestAddPassData:forSyncStateItem:completion:
_requestUpdatePassData:forSyncStateItem:baseManifestHashForPartialUpdate:remoteAssetsForPartialUpdate:completion:
_requestRemovePassWithUniqueID:completion:
syncStateItems
_shouldProcessAddOrUpdateChangeOfType:changeSyncStateItem:librarySyncStateItem:reconciledSyncStateItem:candidateChange:shouldApplyToPassLibrary:shouldApplyToReconciledState:
setProcessingChange:
_finishedProcessingChange:
_sendReconciledStateUnrecognizedWithHash:currentPassSyncState:
setCandidateChange:
setBaseManifestHashForPartialUpdate:
setRemoteAssetsForPartialUpdate:
dataSource
_sendStateChange:
_receivedStateChangeProcessed:changeAccepted:
setCandidateState:
commonBaselinePassSyncStateWithState:
_sendProposedReconciledState:
candidateState
stateIsSubsetOfUnionOfPassSyncStates:
_sendReconciledStateAcceptedWithHash:
_engineStateChanged
compareWithBaselinePassSyncState:outAddedPassUniqueIDs:outUpdatedPassUniqueIDs:outRemovedPassUniqueIDs:
manifest
initWithChangeUUID:reconciledStateHash:changeType:uniqueID:syncStateItem:passData:baseManifestHashForPartialUpdate:remoteAssetsForPartialUpdate:
initWithChangeUUID:reconciledStateHash:changeType:uniqueID:syncStateItem:passData:
isEqualToChangeIgnoringUUID:
setChangeUUID:
sequenceCounter
engineRole
_libraryState
_backupState
_reconciledState
_candidateState
_engineRole
_dataSource
_candidateChange
_processingChange
setAccountInfoData:
hasAccountInfoData
setCloudStoreIsSetup:
setHasCloudStoreIsSetup:
hasCloudStoreIsSetup
accountInfoData
cloudStoreIsSetup
_accountInfoData
_cloudStoreIsSetup
dataWithContentsOfFile:
JSONObjectWithData:options:error:
initWithDictionary:bundle:
bundleWithPath:
imageNamed:inBundle:
CGImage
setImageSet:forImageSetType:
initWithIdentifier:status:credentialType:passURL:
_passWithDescription:credentialType:
setSanitizedPrimaryAccountNumber:
_broadwayCredential
_easyProvisioningCredentials
setPassAppletState:
hasPassAppletState
passAppletState
_passAppletState
addTsmRegionPushTopics:
addTsmRegionURLs:
addBrokerRegionPushTopics:
tsmRegionPushTopicsCount
clearTsmRegionPushTopics
tsmRegionPushTopicsAtIndex:
tsmRegionURLsCount
clearTsmRegionURLs
tsmRegionURLsAtIndex:
brokerRegionPushTopicsCount
clearBrokerRegionPushTopics
brokerRegionPushTopicsAtIndex:
setPrimaryRegionTopic:
tsmRegionPushTopicsType
tsmRegionURLsType
brokerRegionPushTopicsType
hasPrimaryRegionTopic
tsmRegionPushTopics
setTsmRegionPushTopics:
tsmRegionURLs
setTsmRegionURLs:
brokerRegionPushTopics
setBrokerRegionPushTopics:
primaryRegionTopic
_brokerRegionPushTopics
_primaryRegionTopic
_tsmRegionPushTopics
_tsmRegionURLs
writeToFile:atomically:
removeItemAtPath:error:
createFileAtPath:contents:attributes:
fileHandleForWritingAtPath:
writeData:
closeFile
stringByAppendingPathComponent:
localizedFailureReason
localizedRecoverySuggestion
_displayableCouldNotAddCardErrorWithUnderlyingError:
serviceIdentifier
paymentStatus
availableActionsFetchDate
setServiceIdentifier:
setPaymentStatus:
setAvailableActionsFetchDate:
_serviceIdentifier
_paymentStatus
_availableActionsFetchDate
peerPaymentPassUniqueID
initWithPeerPaymentPassUniqueID:
initWithPeerPaymentPassUniqueID:paymentService:
initWithDelegate:
_fetchAllPeerPaymentTransactionsWithPeerPaymentPassID:
_passLibraryChanged:
_applicationWillEnterForeground:
setPeerPaymentPassUniqueID:
_transactionQueue_statusOfPaymentTransactionWithServiceIdentifier:
transactionDetails
peerPaymentStatus
_transactionsQueue_setStatus:forPaymentTransactionWithServiceIdentifier:notifyUpdate:
_transactionsQueue_transactionDetailsCreatedIfNecessaryForServiceIdentifier:
_transactionsQueue_notifyStatusUpdateOfTransactionWithServiceIdentifier:
currentLookupIdentifiers
_sharedPeerPaymentWebService
actions
peerPaymentStatusWithPaymentIdentifier:completion:
paymentService
transactionsForPaymentPassWithUniqueIdentifier:withTransactionSource:withBackingData:limit:completion:
paymentServiceReceivedInterruption
paymentDeviceDidEnterFieldWithProperties:
paymentDeviceDidExitField
didUpdateDefaultPaymentPassWithUniqueIdentifier:
paymentPassWithUniqueIdentifier:didReceiveMessage:
paymentPassWithUniqueIdentifier:didReceiveTransaction:
paymentPassWithUniqueIdentifier:didRemoveTransactionWithIdentifier:
paymentPassWithUniqueIdentifier:didReceiveBalanceUpdate:
paymentPassWithUniqueIdentifier:didEnableMessageService:
paymentPassWithUniqueIdentifier:didEnableTransactionService:
passWithUniqueIdentifier:didReceiveValueAddedServiceTransaction:
paymentPassWithUniqueIdentifier:didUpdateWithTransitPassProperties:
paymentPassWithUniqueIdentifier:didUpdateCategoryVisualizationWithStyle:
featureApplicationAdded:
featureApplicationRemoved:
featureApplicationChanged:
statusOfPaymentTransactionWithServiceIdentifier:
availableActionsForPaymentTransactionWithServiceIdentifier:
setStatus:forPaymentTransactionWithServiceIdentifier:
peerPaymentTransactionWithServiceIdentifier:
lookupTransactionActionsIfNeededWithServiceIdentifier:
_transactionsQueue
_peerPaymentPassQueue
_peerPaymentPassUniqueID
_paymentService
_transactionDetails
_currentLookupIdentifiers
setDefaultShippingAddress:
setDefaultBillingAddresses:
setDefaultContactEmail:
setDefaultContactPhone:
setDefaultContactName:
hasDefaultShippingAddress
hasDefaultBillingAddresses
hasDefaultContactEmail
hasDefaultContactPhone
hasDefaultContactName
defaultShippingAddress
defaultBillingAddresses
defaultContactEmail
defaultContactPhone
defaultContactName
_defaultBillingAddresses
_defaultContactEmail
_defaultContactName
_defaultContactPhone
_defaultShippingAddress
setPushTopic:
hasPushTopic
pushTopic
_pushTopic
setLongDescription:
hasSanitizedPrimaryAccountNumber
hasExpiration
hasLongDescription
sanitizedPrimaryAccountNumber
expiration
longDescription
_expiration
_longDescription
_sanitizedPrimaryAccountNumber
addItems:
itemsCount
clearItems
itemsAtIndex:
itemsType
hasTitle
hasFooter
setItems:
_showCurrentPasscodePromptOrComplete
cancelPrompt
setDismissable:
setDisplaysWhileLocked:
setTransitionStyle:
setJustPinEntry:
setJustPinEntrySimpleCode:
minLength
setJustPinEntryCodeLength:
setJustPinEntryMinCodeLength:
maxLength
setJustPinEntryMaxCodeLength:
setJustPinEntryCodeTitle:
_invokeCompletionHandler
showPromptWithSettings:failureHandler:
_showNextPasscodePromptOrComplete
passcodePromptWasDismissed:
passcodePrompt:didProvidePasscode:
passcodePromptDidBailForUserHasAlphanumericPasscode:
providedFields
setProvidedFields:
completedFields
setCompletedFields:
currentIndex
setCurrentIndex:
passcodePrompt
setPasscodePrompt:
_providedFields
_completedFields
_currentIndex
_passcodePrompt
showInAppInterfaceWithPaymentRequest:forHostApplicationName:hostBundleIdentifier:hostProcessIdentifier:hostIdentifier:orientation:activationHandler:
showInAppInterfaceWithRemotePaymentRequest:activationHandler:
showInAppInterfaceWithSkeletonPeerPaymentQuote:activationHandler:
clearInAppInterfaceForSkeletonPeerPaymentQuote:withError:
remoteInterfacePresenterConnectionInterrupted:
presentInAppPaymentInterfaceWithPaymentRequest:forHostApplicationName:hostBundleIdentifier:hostProcessIdentifier:hostIdentifier:orientation:completion:
presentContinuityPaymentInterfaceWithRemotePaymentRequest:completion:
showInAppInterfaceWithSkeletonPeerPaymentQuote:completion:
presentSetupApplePayAlert:
isEqualToChange:
safelyAddObject:
setChangeType:
setSyncStateItem:
unsignedIntValue
_changeUUID
_reconciledStateHash
_changeType
_syncStateItem
_baseManifestHashForPartialUpdate
_remoteAssetsForPartialUpdate
setBody:
setLinkText:
setLinkURL:
setImageURL:
hasBody
hasLinkText
hasLinkURL
hasImageURL
body
linkText
linkURL
imageURL
_body
_imageURL
_linkText
_linkURL
peerPaymentService
setAccount:
_updateAccount
initWithPeerPaymentService:
postNotificationName:object:
accountWithCompletion:
_peerPaymentService
_account
enforcedPolicy
setEnforcedPolicy:
setHasEnforcedPolicy:
hasEnforcedPolicy
enforcedPolicyAsString:
StringAsEnforcedPolicy:
_enforcedPolicy
_convertWelcomeStepContext:protoContext:
_convertChooseFlowStepContext:protoContext:
_convertChooseProductStepContext:protoContext:
_convertChooseCredentialsStepContext:protoContext:
_convertManualEntryStepContext:protoContext:
_convertSecondaryManualEntryStepContext:protoContext:
_convertTermsAndConditionsStepContext:protoContext:
_convertProvisioningProgressStepContext:protoContext:
_convertProvisioningResultStepContext:protoContext:
_convertIssuerVerificationChannelsStepContext:protoContext:
_convertIssuerVerificationFieldsStepContext:protoContext:
_convertIssuerVerificationCodeStepContext:protoContext:
_convertMoreInformationStepContext:protoContext:
_convertLocalDeviceManualEntry:protoContext:
_convertLocalDeviceManualEntryProgress:protoContext:
_convertDigitalIssuanceAmountStepContext:protoContext:
_convertDigitalIssuancePaymentStepContext:protoContext:
_convertReaderModeEntryStepContext:protoContext:
_convertReaderModeIngestionStepContext:protoContext:
toStringValue:
absoluteString
stringValue
imageWithScale:
sha1hash:
cachedHeroImages
addHeroImages:
toNPKProtoStandalonePaymentProvisioningFlowPickerSection:
toNPKProtoStandalonePaymentSetupProduct:
addProducts:
toNPKProtoStandalonePaymentCredentialUnion:withFlowIdentifier:
toNPKProtoStandalonePaymentRemoteCredential:
toNPKProtoStandalonePaymentSetupField:
addSetupFields:
toNPKProtoStandaloneReaderModeIngestionState:
toNPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext:
fieldType
toNPKProtoStandalonePaymentSetupFieldType:
setFieldType:
setRemoteCredential:
toNPKProtoStandaloneVerificationChannel:
addVerificationChannels:
toNPKProtoStandalonePaymentSetupMoreInfoItem:
addMoreInfoItems:
toNPKProtoStandalonePassType:
imageSetLoadedIfNeeded:
imageRef
isRemotePass
stringWithCapacity:
toNPKProtoStandalonePass:
toNPKProtoStandalonePaymentPassActivationState:
toNPKProtoStandalonePaymentApplicationState:
toNPKProtoStandaloneVerificationChannelType:
typeDescriptionUnlocalized
setTypeDescriptionUnlocalized:
typeDescription
setTypeDescription:
requiresUserInteraction
setRequiresUserInteraction:
contactPoint
setContactPoint:
sourceAddress
setSourceAddress:
setFlowIdentifier:
toNPKProtoStandaloneCreditAccountCredential:
setCreditAccountCredential:
toNPKProtoStandalonePaymentCredential:
setPaymentCredential:
passURL
setPassURL:
summaryMetadataDescription
setSummaryMetadataDescription:
statusDescription
setStatusDescription:
rank
setRank:
accountSummary
currentBalance
doubleValue
setCurrentBalance:
creditLimit
setCreditLimit:
toNPKProtoStandalonePaymentProvisioningFlowPickerItem:
setDisplayName:
addRegions:
partnerIdentifier
setPartnerIdentifier:
partnerName
setPartnerName:
addRequiredFields:
supportedProtocols
addSupportedProtocols:
readerModeMetadata
toJsonString:
setReaderModeMetadataJson:
flags
setFlags:
setHsa2Requirement:
imageAssetURLs
toNPKProtoStandalonePaymentSetupProductImageAssetURLs:
setImageAssetURLs:
suppressPendingPurchases
setSuppressPendingPurchases:
toNPKProtoStandalonePaymentSetupProductPaymentOption:
addPaymentOptions:
toNPKProtoStandalonePaymentProvisioningMethodMetadata:
addRequestedProvisioningMethods:
setCurrency:
setDepositAmount:
setMinLoadedBalance:
setMaxLoadedBalance:
toNPKProtoStandalonePaymentDigitalIssuanceMetadata:
setDigitalIssuanceMetadata:
readerModeResources
setReaderModeResourcesJson:
minimumReaderModeBalance
setMinimumReaderModeBalance:
setServiceProviderCountryCode:
addServiceProviderSupportedNetworks:
addServiceProviderCapabilities:
setServiceProviderDictJson:
setAction:
merchantID
setMerchantID:
defaultSuggestions
addDefaultSuggestions:
priority
setPriority:
setCardType:
setSupportedProtocols:
dataWithJSONObject:options:error:
initWithData:encoding:
toPKPaymentSetupFieldType:
paymentSetupFieldWithIdentifier:type:
initWithLong:
initWithObjectsAndKeys:
hasReconciledStateHash
hasRemoteCredential
hasCredential
setHasAllowsAddingDifferentCard:
hasAllowsAddingDifferentCard
_remoteCredential
hasIdentifier
setHasType:
typeAsString:
StringAsType:
hasTypeDescriptionUnlocalized
hasTypeDescription
setHasRequiresUserInteraction:
hasRequiresUserInteraction
hasContactPoint
hasSourceAddress
_contactPoint
_sourceAddress
_typeDescription
_typeDescriptionUnlocalized
_requiresUserInteraction
localManifestHashes
remoteManifestHashes
setLocalManifestHashes:
setRemoteManifestHashes:
_localManifestHashes
_remoteManifestHashes
_migrationDelegateQueue
_handleHasMigrationDataSource
setPassDBIsAvailable:
database
_preconditionsMetForDatabaseOpen
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_executeSQL:
_table:containsColumn:
_migrationDataSource
latestWatchOSMajorVersion
setObject:atIndexedSubscript:
setMissingImageSetsFromObject:
flushLoadedImageSets
_enumerateAllPassesForMigration:
_updateNFCPayloadDuringMigration:
_updatePrivateLabelAndCobrandDuringMigration:
_updateDeviceAndPreferredPaymentApplicationsDuringMigration:
_updateIngestedDatesDuringMigration:
_updateEffectivePaymentApplicationStateDuringMigration:
_updateHasUserSelectableContactlessPaymentApplications:
_updateEncodedPaymentPassDuringMigration:
_updateHasStoredValueDuringMigration:
_updateSettingsDuringMigration:
_updateCompleteLocalHashesDuringMigration:
_updateAvailableActionsDuringMigration:
_updateOrganizationNamesDuringMigration:
_updateFrontAndBackFieldBucketsDuringMigration:
_updateLocalizedDescriptionDuringMigration:
_updateDevicePaymentApplicationsDuringMigration:
_updatePrimaryContactlessAndInAppPaymentApplicationsDuringMigration:
_updateEncodedImageSetsDuringMigration:
_repairEncodedImagesDuringMigration:
_updateIssuerCountryCodesDuringMigration:
_updateExpressPassTypesMaskDuringMigration:
_updateCompleteRemoteHashesDuringMigration
_migrateDatabase:
_notifyDatabaseChangedExternally
_notifyForFirstUnlock
stringWithUTF8String:
_decodeObjectOfClass:fromStatement:column:
_decodeObjectOfClasses:fromStatement:column:
dateWithTimeIntervalSinceReferenceDate:
initForReadingFromData:error:
_loadInitialManifestLocked
_savePassLocked:locallyAdded:wasUpdate:
_libraryHashLockedForWatchOSMajorVersion:
_notifyDatabaseChangedWithNoop:
_saveDiffLocked:forPassWithUniqueID:
_removePassWithUniqueIDLocked:
_performTransactionWithBlock:
_saveTransaction:forPassWithUniqueID:withPaymentCredentialType:shouldTrim:
paymentNetworkIdentifier
isCloudKitArchived
_removeTransactionWithServiceIdentifierLocked:forPassWithUniqueID:
_saveTransactionLocked:forPassWithUniqueID:
_trimTransactionsForPassWithUniqueIDLocked:withPaymentCredentialType:
_notifyTransactionAddedOrUpdated:forPassWithUniqueID:
_transactionWithIdentifierLocked:
_removeTransactionWithIdentifier:forPassWithUniqueID:
_notifyTransactionRemoved:forPassWithUniqueID:
_removeTransactionsForPassWithUniqueID:
_transactionsForUniqueIDLocked:withTransactionSource:withBackingData:startDate:endDate:orderByDate:limit:
_transactionWithServiceIdentifierLocked:
_passUniqueIDForTransactionWithIdentifier:
_passUniqueIDForTransactionWithServiceIdentifier:
_transitAppletStateForPassWithUniqueIDLocked:
_setTransitAppletStateLocked:forPassWithUniqueID:
_paymentBalancesForPassWithUniqueIDLocked:
_setPaymentBalancesLocked:forPassWithUniqueID:
_setCurrentEphemeralTransactionIdentifier:forPassWithUniqueID:
_currentEphemeralTransactionIdentifierForPassWithUniqueID:
_transactionsWithCloudKitArchivedState:
_setLastAddValueAmountLocked:forPassWithUniqueID:
_lastAddValueAmountForPassWithUniqueIDLocked:
_setPendingAddValueDateLocked:forPassWithUniqueID:
_pendingAddValueDateForPassWithUniqueIDLocked:
passDescriptions
transactionsForPassWithUniqueID:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:
currentEphemeralTransactionIdentifierForPassWithUniqueID:
paymentBalancesForPassWithUniqueID:
setTransitAppletState:forPassWithUniqueID:
setLastAddValueAmount:forPassWithUniqueID:
setPendingAddValueDate:forPassWithUniqueID:
sharedDatabase
passForUniqueID:
setPreferredPaymentApplication:forPaymentPass:
saveTransaction:forPassWithUniqueID:withPaymentCredentialType:
setCurrentEphemeralTransactionIdentifier:forPassWithUniqueID:
setPaymentBalances:forPassWithUniqueID:
_notifyDatabaseChangedWithNoop:firstUnlock:
_passDBIsAvailableLocked
_passForUniqueIDLocked:includeImageSets:
_getPreferredPaymentApplicationForPaymentPass:aid:
_getDeletePendingForUniqueID:
diff:
deleteStatement
insertStatement
setIngestedDate:
timeIntervalSinceReferenceDate
deleteTransactionsForPassStatement
insertTransactionStatement
transactionDate
transactionSource
transactionType
hasNotificationServiceData
removeTransactionWithServiceIdentifierStatement
removeTransactionStatement
trimTransactionsForPassStatement
selectTransactionsStatementWithTransactionSource:orderByDate:
distantPast
distantFuture
selectCloudKitArchivedTransactionsStatement
selectTransactionWithIdentifierStatement
selectTransactionWithServiceIdentifierStatement
selectPassUniqueIDAsssociateToTransactionWithIdentifierStatement
selectPassUniqueIDAsssociateToTransactionWithServiceIdentifierStatement
selectTransitAppletStateForPassStatement
updateTransitAppletStateForPassStatement
insertEphemeralTransactionStatement
deleteEphemeralTransactionByPassUniqueIDStatement
currentEphemeralTransactionIdentifierStatement
selectLastAddValueAmountForPassStatement
updateLastAddValueAmountForPassStatement
selectPendingAddValueDateForPassStatement
updatePendingAddValueDateForPassStatement
selectBalancesForPassStatement
updateBalancesForPassStatement
stringWithCString:encoding:
_executeSQLQuery:processResultsBlock:
integerValue
intValue
selectPassAndImageSetsDataStatement
selectPassDataStatement
selectPassDiffStatement
insertDiffStatement
passForUniqueID:includeImageSets:
_diffForUniqueIDLocked:
updateDeletePendingStatement
selectDeletePendingStatement
paymentApplications
updatePreferredAIDStatement
selectPreferredAIDStatement
arrayWithArray:
libraryHashForWatchOSMajorVersion:
caseInsensitiveCompare:
sortedArrayUsingSelector:
npkComprehension:
manifestHashesForWatchOSMajorVersion:
dictionaryWithCapacity:
enumerateAllPassesAndDescriptionsWithBlock:includeImageSets:
evaluateWithObject:
_databaseVersionExists:valid:
maxDatabaseVersion
_updateDatabaseVersionRow:
_insertDatabaseVersionRow:
_attemptDatabaseOpen
setMigrationDataSource:
savePass:isLocalPass:
saveDiff:forPassWithUniqueID:
removePassWithUniqueID:
rebuildDatabaseWithPasses:
saveTransaction:forPass:
removeTransactionWithIdentifier:forPassWithUniqueID:
removeTransactionsForPassWithUniqueID:
transactionWithIdentifier:
transactionWithServiceIdentifier:
passUniqueIDForTransactionWithIdentifier:
passUniqueIDForTransactionWithServiceIdentifier:
transitAppletStateForPassWithUniqueID:
transactionsWithCloudKitArchivedState:
lastAddValueAmountForPassWithUniqueID:
pendingAddValueDateForPassWithUniqueID:
restoreBlockForVolatilePassData
passDBIsAvailable
numberOfPasses
diffForUniqueID:
setDeletePending:forUniqueID:
preferredPaymentApplicationForPaymentPass:
enumerateAllPassesWithBlock:includeImageSets:
hasPassesMatchingPassDescriptionPredicate:
filteredPassesUsingPassDescriptionPredicate:includeImageSets:
_handleDatabaseChangedExternally
_handleFirstUnlock
_database
_deleteStatement
_insertStatement
_insertDiffStatement
_selectPassDataStatement
_selectPassAndImageSetsDataStatement
_selectPassDiffStatement
_updateDeletePendingStatment
_selectDeletePendingStatement
_updatePreferredAIDStatement
_selectPreferredAIDStatement
_insertTransactionStatement
_removeTransactionStatement
_removeTransactionWithServiceIdentifier
_selectTransactionsStatement
_selectTransactionsStatementWithSource
_selectTransactionsStatementWithoutSource
_selectTransactionWithIdentifierStatement
_selectTransactionWithServiceIdentifierStatement
_selectPassUniqueIDAsssociateToTransactionWithIdentifierStatement
_selectPassUniqueIDAsssociateToTransactionWithServiceIdentifierStatement
_deleteTransactionsForPassStatement
_trimTransactionsForPassStatement
_selectTransitAppletStateForPassStatement
_updateTransitAppletStateForPassStatement
_insertEphemeralTransactionStatement
_deleteEphemeralTransactionByPassUniqueIDStatement
_currentEphemeralTransactionIdentifierStatement
_selectLastAddValueAmountForPassStatement
_updateLastAddValueAmountForPassStatement
_selectPendingAddValueDateForPassStatement
_updatePendingAddValueDateForPassStatement
_selectCloudKitArchivedTransactionsStatement
_selectBalancesForPassStatement
_updateBalancesForPassStatement
_dbQueue
_isInTransaction
_manifest
_passDescriptions
_libraryHashes
_externallyChangedBroadcasts
_sendingLocalNotifyDatabaseChanged
_needsMoreLocalNotifyDatabaseChanged
_passDBIsAvailable
_initializeHIDClient
_handleButtonEvent:
setHidSystemClient:
setHidSystemQueue:
buttonHandler
setButtonHandler:
hidSystemClient
hidSystemQueue
_buttonHandler
_hidSystemClient
_hidSystemQueue
hasUnrecognizedReconciledStateHash
hasLibraryPassSyncState
_libraryPassSyncState
_unrecognizedReconciledStateHash
hasPassURL
hasSummaryMetadataDescription
hasStatusDescription
hasPaymentPass
setHasRank:
hasRank
hasProductIdentifier
paymentCredential
_passURL
_paymentCredential
_productIdentifier
_rank
_statusDescription
_summaryMetadataDescription
productsCount
clearProducts
productsAtIndex:
productsType
cardPNO
setCardPNO:
cardFlow
setCardFlow:
cardID
setCardID:
cardIssuer
setCardIssuer:
cardProduct
setCardProduct:
cardEncryptionScheme
setCardEncryptionScheme:
_cardPNO
_cardFlow
_cardID
_cardType
_cardIssuer
_cardProduct
_cardEncryptionScheme
substringFromIndex:
setRequiresFelicaSecureElement:
setPrimaryAccountSuffix:
setPaymentNetwork:
lowercaseString
initWithLabel:value:
setCardDetails:
base64EncodedStringWithOptions:
componentsJoinedByString:
capitalizedString
stringByReplacingOccurrencesOfString:withString:
initWithURL:
setHTTPMethod:
dataUsingEncoding:
setHTTPBody:
setValue:forHTTPHeaderField:
defaultSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
initWithBase64EncodedString:options:
setEncryptedPassData:
dataTaskWithRequest:completionHandler:
sharedServiceModeRequestController
serviceModeRequested
_serviceModeRequested
setProvisioningDataBytes:
hasProvisioningDataBytes
provisioningDataBytes
_provisioningDataBytes
paymentPassesCount
clearPaymentPasses
paymentPassesAtIndex:
paymentPassesType
paymentPasses
setPaymentPasses:
_paymentPasses
setSetAuthRandomIfNotPaired:
setHasSetAuthRandomIfNotPaired:
hasSetAuthRandomIfNotPaired
setAuthRandomIfNotPaired
_setAuthRandomIfNotPaired
hasCurrencyCode
setHasCurrentBalance:
hasCurrentBalance
setHasCreditLimit:
hasCreditLimit
_creditLimit
_currentBalance
_rawDefaultBillingAddresses
_contactFromEncodedData:
deleteDefaultShippingAddress
deleteDefaultContactEmail
deleteDefaultContactPhone
deleteDefaultContactName
_billingAddressDictionaryFromEncodedData:
_setRawDefaultBillingAddresses:
_deleteAllDefaultBillingAddresses:
setTransactionDefaultsRequest
handleSetTransactionDefaultsRequest:
initWithQueue:takeOutTransactions:
setRemainingWork:
setTakeOutTransactions:
performingWork
remainingWork
setPerformingWork:
removeObjectAtIndex:
workBlock
workQueueName
_onQueue_doWorkIfNecessary
takeOutTransactions
itemWithTransaction:work:
performWork:
setWorkQueueName:
_performingWork
_takeOutTransactions
_workQueueName
_remainingWork
initWithTransaction:work:
_workBlock
setupFieldsCount
clearSetupFields
setupFieldsAtIndex:
setupFieldsType
hasSubtitle
hasProduct
addCardAIDs:
cardAIDsCount
clearCardAIDs
cardAIDsAtIndex:
cardAIDsType
cardAIDs
setCardAIDs:
_cardAIDs
_queue_updateExpressPasses
updateExpressPasses
initWithPaymentService:passLibrary:distributedNotificationCenter:delegate:
_transitionToStatus:forExpressPass:paymentApplicationIdentifier:
expressPassController:didStartTransactionForPass:paymentApplicationIdentifier:
expressPassController:didCompleteTransactionForPass:
expressPassController:didFailTransactionForPass:
distributedNotificationCenter
_handleEnterNearFieldNotification:
_handleExpressTransactionStartNotification:
_handleExpressTransactionTimeOutNotification:
_handleExpressTransactionEndNotification:
_handleExpressTransactionFailedNotification:
_handleExitNearFieldNotification:
_handlePassesLibraryChangedNotification:
_expressPassesInformationWithAutomaticSelectionTechnologyType:
setCurrentTransactionExpressPassInformation:
passUniqueIdentifier
expressPasses
_hasNoTransactionStartOrEndNotificationForTechnologyType:
currentTransactionExpressPassInformation
paymentApplicationIdentifiers
_onqueue_transactionStartedWithApplicationIdentifier:
technologyType
enumerateCriteriaWithHandler:
_onqueue_transactionEndedWithApplicationIdentifier:
_onqueue_transactionFailedWithApplicationIdentifier:
_queue_expressPassForTransactionApplicationIdentifier:
_queue_paymentService
expressPassesInformation
_startListeningForExpressNotifications
passLibrary
passWithUniqueID:
_stopListeningForExpressNotifications
_startFieldDetector
_stopFieldDetector
setExpressPassesInformation:
setExpressPasses:
expressPassController:didUpdateExpressPasses:expressPassesInformation:
supportsExpress
TCIs
intersectsSet:
primaryTCIs
shouldIgnore
authenticationRequired
terminalType
_expressPassesInformationWithTCIs:
expressPassController:didReceiveAuthenticationRequestForPass:
currentTransactionPass
setCurrentTransactionPass:
_expressPassChangedNotifyToken
_transactionStatus
_currentTransactionPass
_expressPassesInformation
_passLibrary
_distributedNotificationCenter
_expressPasses
_currentTransactionExpressPassInformation
setMissing:
setHasMissing:
hasMissing
missing
_missing
setApplyRestrictions:
setHasApplyRestrictions:
hasApplyRestrictions
applyRestrictions
_applyRestrictions
hasBalanceBytes
peerPaymentServiceURL
npkPossiblyOverriddenPeerPaymentServiceURL
_invokeCompletionHandlerForInvalidation
evaluatePolicy:options:error:
externalizedContext
localAuthenticationQueue
setLocalAuthenticationQueue:
completedContext
setCompletedContext:
completedCredential
setCompletedCredential:
completedError
setCompletedError:
_localAuthenticationQueue
_completedContext
_completedCredential
_completedError
fieldTypeAsString:
StringAsFieldType:
hasCurrentValue
_currentValue
_fieldType
setUnlockRequired:
setHasUnlockRequired:
hasUnlockRequired
unlockRequired
_unlockRequired
serviceResumed
serviceSuspended
setClasses:forSelector:argumentIndex:ofReply:
setRelevantText:
hasRelevantText
relevantText
_relevantText
_content
suppressionAssertion
requestDoubleClickClientSuppressionWithResponseHandler:
endDoubleClickClientSuppressionWithRequestToken:
isSuppressingDoubleClickClients
suppressorQueue
nextSuppressionRequestToken
setNextSuppressionRequestToken:
addIndex:
_postSuppressionStateChanged
_acquireSuppressionAssertionIfNeededWithCompletion:
suppressionRequestTokens
removeIndex:
_acquireSuppressionAssertionWithCompletion:
setSuppressionAssertion:
setSuppressionRequestTokens:
setSuppressorQueue:
_suppressionAssertion
_suppressionRequestTokens
_nextSuppressionRequestToken
_suppressorQueue
addReaderModeFields:
readerModeFieldsCount
clearReaderModeFields
readerModeFieldsAtIndex:
readerModeFieldsType
setReaderModeFields:
_readerModeFields
setSignedData:
setCertsBytes:
setSignatureInfoBytes:
hasSignedData
hasCertsBytes
hasSignatureInfoBytes
signedData
certsBytes
signatureInfoBytes
_certsBytes
_signatureInfoBytes
_signedData
insertOrUpdatePaymentTransaction:forPassUniqueIdentifier:paymentApplication:completion:
processTransitTransactionEventWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:expressTransactionState:
setHasAllowsReaderModeEntry:
hasAllowsReaderModeEntry
hasCardType
heroImagesCount
clearHeroImages
heroImagesAtIndex:
heroImagesType
passPropertiesForPass:
_updateTransitBalanceFields
_balanceByIDWithBalances:
_primaryDisplayableBalanceFieldWithBalancesByID:
_backOfThePassBalanceFieldsWithBalancesByID:
displayableTransitBalance
bundleWithIdentifier:
initWithLabel:formattedValue:identifier:primaryBalance:
isContentLoaded
_balanceFieldsWithBalancesByID:passFields:maximumCount:
label
formattedValue
foreignReferenceType
foreignReferenceIdentifier
_fieldWithBalance:
localizedTitle
initWithLabel:formattedValue:identifier:
setTransitPassProperties:
setServerBalances:
transitBalanceFields
transitPassProperties
serverBalances
_transitBalanceFields
_transitPassProperties
_serverBalances
setPasscodeChanged:
setHasPasscodeChanged:
hasPasscodeChanged
passcodeChanged
_passcodeChanged
handleAccountsChangedNotification:
lastAccountUpdateDate
forceAccountRefresh
updateAccountWithIdentifier:completion:
accountDetails
setLastAccountUpdateDate:
_updateAccountDetailsWithAccount:
accountWithIdentifier:completion:
setAccountDetails:
requiresDebtCollectionNotices
availableCredit
balanceSummary
pendingPurchases
accountPassManager:didUpdateAccount:
initForAccountIdentifier:
refreshAccountIfNecessary
accountPassDetails
accountIdentifier
_delegateCallbackQueue
_accountIdentifier
_lastAccountUpdateDate
_accountDetails
initWithContext:responseQueue:
_webServiceContext
_peerPaymentWebServiceContext
peerPaymentWebService
_peerPaymentAccount
setPeerPaymentAccount:
_deviceFailedToPair:
secureElementID
setDeviceID:
initWithContext:targetDevice:archiver:
initWithCompanionAgentConnection:
peerPaymentTargetDevice
setPeerPaymentService:
setPeerPaymentWebService:
sharedPaymentWebServiceContextForDevice:
setTransactionServiceDisabled:
setMessageServiceDisabled:
setIgnoreProvisioningEnablementPercentage:
sharedPeerPaymentWebServiceContextForDevice:
peerPaymentAccountForDevice:
archiveContext:
archiver
setSharedPaymentWebServiceContext:forDevice:
sendWebServiceContextToWatch:
startBackgroundVerificationObserverForPass:verificationMethod:
noteForegroundVerificationObserverActive:
handlePreconditionNotMetWithUniqueIDs:preconditionDescription:shouldUnregister:
handlePushToken:
handleUpdatePaymentPassWithTypeIdentifier:
handlePreferredAID:forPassWithUniqueID:
handlePaymentTransactions:appletStates:forUniqueIDs:
handleAppletState:forUniqueID:
handleRemoveTransactionsWithIdentifiers:
handleBalanceUpdate:forUniqueID:
archiveWebServiceContext:
archiveWebServiceBackgroundContext:
setNewAuthRandom:
handlePaymentWebServiceContextFromWatch:
sendWebServiceContextToWatch
showPaymentSetupForAppDisplayName:
sendPaymentOptionsDefaultsToWatch
handleUpdatedPeerPaymentWebServiceContext:account:
handleDownloadAllPaymentPasses
checkCompanionPeerPaymentRegistrationState
loadWebService
setTargetDevice:
setPeerPaymentTargetDevice:
_targetDevice
_peerPaymentWebService
_peerPaymentTargetDevice
connection
setSharedPeerPaymentWebServiceContext:forDevice:
setConnection:
_connection
setApplicationIdentifier:
hasApplicationIdentifier
_applicationIdentifier
addConflictingExpressPassIdentifiers:
addConflictingReferenceExpressPassIdentifiers:
conflictingExpressPassIdentifiersCount
clearConflictingExpressPassIdentifiers
conflictingExpressPassIdentifiersAtIndex:
conflictingReferenceExpressPassIdentifiersCount
clearConflictingReferenceExpressPassIdentifiers
conflictingReferenceExpressPassIdentifiersAtIndex:
conflictingExpressPassIdentifiersType
conflictingReferenceExpressPassIdentifiersType
conflictingExpressPassIdentifiers
setConflictingExpressPassIdentifiers:
conflictingReferenceExpressPassIdentifiers
setConflictingReferenceExpressPassIdentifiers:
_conflictingExpressPassIdentifiers
_conflictingReferenceExpressPassIdentifiers
setHasCameraFirstProvisioningEnabled:
hasCameraFirstProvisioningEnabled
hasSequenceCounter
manifestEntrys
fileHash
relativePath
initWithPassTypeIdentifier:serialNumber:sequenceCounter:manifestHash:manifest:
setSequenceCounter:
setHasSequenceCounter:
setRelativePath:
setFileHash:
addManifestEntry:
initWithProtoSyncStateItem:
protoSyncStateItem
initWithSyncStateItems:
_initWithName:
_name
senderAddress
recipientAddresses
_internalQueue_lookupRecipientInformationWithAddress:senderAddress:
activeConversation
_newPeerPaymentController
recipientPhoneOrEmail
displayNameForRecipientAddress:
displayNameForRecipientAddress:foundInContacts:
_internalQueue_performPaymentWithAmount:requestToken:completion:
currentPeerPaymentController
setCurrentPeerPaymentController:
_displayableErrorWithError:
receiveCurrency
_skeletonPeerPaymentQuoteWithPeerPaymentController:selectedAmount:recipient:
selectMode:
quoteWithAmount:requestToken:completion:
performQuote:completion:
identifyRecipientWithAddress:senderAddress:completion:
currentRecipientAddressLookup
phoneOrEmail
setCurrentRecipientAddressLookup:
setPhoneOrEmail:
_postNotificationWithRecipient:error:
_negativeBalanceErrorWithUnderlyingError:
_ambiguousSenderAddressErrorWithUnderlyingError:
_lockedOrRestrictedAccountErrorWithUnderlyingError:
_unknownPaymentErrorWithUnderlyingError:
countryCode
sendToUserFeatureDescriptor
merchantIdentifier
decimalNumberBySubtracting:
setRecipient:
initWithPeerPaymentWebService:
setActiveConversation:
senderPhoneOrEmail
recipientDisplayName
recipientFoundInContacts
recipient
lookupRecipientInformationIfNecessary
performPaymentWithAmount:requestToken:completion:
lookupRecipientInformationWithAddress:senderAddress:
conversationContext
setConversationContext:
_activeConversation
_recipient
_conversationContext
_currentRecipientAddressLookup
_currentPeerPaymentController
resolveRequirementsUsingProduct:
_startReaderModeIngestion:
_startIngestion
_transitionToIngestionProgress:
_startTransferringCard
initWithPaymentSetupProduct:delegate:
_invalidateCardNotFoundTimer
_startCardNotFoundTimer
_transitionToFlowIngestionState:
_titleForState:
_subtitleForState:
_physicalCardURLFromMetadata:forScale:
_resetReaderModeProvisioningState
_transitionToFlowIngestionState:progress:
_setupCardIngester
_startReadingCard
initWithPaymentSetupProduct:cardSessionToken:
ingestCardWithSuccessHandler:
_tearDownCardIngester
ingestCardWithCardSessionToken:successHandler:
_removePassIfNecessary
removeProvisionedPass
_cardNotFoundTimerFired
_readerModeResources
contactlessCardIngester:didUpdateCardIngestionStatus:
contactlessCardIngester:didFailToIngestCardWithError:resetProvisioning:isRecoverable:
setAccountIdentifier:
hasAccountIdentifier
isEqualToPassSyncStateItem:
shortDescription
setManifest:
_sequenceCounter
arrayByAddingObjectsFromArray:
appendData:
SHA256Hash
isEqualToPassSyncState:
setSyncStateItems:
initWithPasses:
stateContainsSyncStateItem:
_syncStateItems
setHasPassSettings:
_passSettings
numberWithFloat:
hasPhysicalCardImageURL
setHasIngestionState:
hasIngestionState
ingestionStateAsString:
StringAsIngestionState:
setHasIngestionProgress:
hasIngestionProgress
setHasChangeAccepted:
setHasFullPassRequired:
hasFullPassRequired
_acceptedChangeUUID
_changeAccepted
_fullPassRequired
startVerificationTestForPass:
startInAppProvisioningTest
startProvisioningTest
_handlePreconditionsStep
_handleWelcomeStepWithContext:
_handleChooseFlowStepWithContext:
_handleChooseProductStepWithContext:
_handleChooseCredentialsStepWithContext:
_handleManualEntryStepWithContext:
_handleProductDisambiguationStepWithContext:
_handleTermsAndConditionsStepWithContext:
_handleProvisioningProgressStepWithContext:
_handleMoreInformationStepWithContext:
_handleProvisioningResultStepWithContext:
_handleIssuerVerificationChannelsStepWithContext:
_handleIssuerVerificationFieldsStepWithContext:
_handleIssuerVerificationCodeStepWithContext:
_handleGetIssuerApplicationAddRequestStepWithContext:
_haveUserChooseBetweenOptions:prompt:
_collectUserInputWithDescription:defaultValue:
defaultValue
testContext
setTestContext:
testConfiguration
setTestConfiguration:
_testContext
_testConfiguration
componentsWithURL:resolvingAgainstBaseURL:
scheme
queryItems
componentsSeparatedByString:
initWithTitle:body:attachmentPaths:
componentsWithString:
queryItemWithName:value:
containsString:
setQueryItems:
_attachmentURLs
attachmentsPaths
_tapToRadarURL
_attachmentsPaths
setHasCardAdded:
hasCardAdded
hasError
initWithPaymentService:delegate:
_transitPassBalanceModelWithPass:currentModel:
_loadPassContentIfNeeded:
_fetchMostRecentInfoForPass:
_notifyDelegateOfUpdatedTransitPassInfoForModel:
_updatePassTransitPassesInfoManagerForPassUiniqueID:updateBlock:
_fetchMostRecentTransitPropertiesForPass:
_fetchMostRecentBalancesForPass:
loadContentAsyncWithCompletion:
balancesForPaymentPassWithUniqueIdentifier:completion:
transitStateWithPassUniqueIdentifier:paymentApplication:completion:
transitPassesInfoManager:didUpdatePassInfo:withPassUniqueID:
setPasses:
passes
addPass:
refreshAllPasses
passInfoForForPassWithUniqueID:
_transitPassBalanceModelsByPassUniqueID
objectUniqueID
updateSettings:forPassWithUniqueID:
updateSettings:
setObjectUniqueID:
_objectUniqueID
setAccountsRequiringProvisioningData:
setAccountsOnDeviceData:
hasAccountsRequiringProvisioningData
hasAccountsOnDeviceData
accountsRequiringProvisioningData
accountsOnDeviceData
_accountsOnDeviceData
_accountsRequiringProvisioningData
_dismissExpressTransitAlert
_updateWithPass:paymentApplicationIdentifier:
expressTransitInterfaceController:transitAppletStateForUniqueID:
setTransactionStartAppletState:
expressTransitPass
expressTransitPaymentApplication
expressTransitInterfaceControllerRequestsInterfaceUpdate:concreteTransactions:ephemeralTransaction:transactionStatus:forPass:paymentApplication:withAppletState:presentIfNecessary:completion:
_scheduleDismissalOfExpressTransitAlertWithTimeout:
expressTransitInterfaceController:requestsPlayingOfSystemSoundID:
transactionStartAppletState
appletHistoryFetcher
setExpressTransitPass:
setExpressTransitPaymentApplication:
_paymentApplicationFromPass:applicationIdentifier:
dismissalTimer
expressTransitInterfaceControllerRequestsDismissalOfInterfaceForExpressTransitTransactionComplete:
processUpdateWithAppletHistory:concreteTransactions:ephemeralTransaction:
canHandleExpressEventsFromPass:
setDismissalTimer:
setAppletHistoryFetcher:
expressPassController
_dismissalTimer
_appletHistoryFetcher
_expressTransitPass
_expressTransitPaymentApplication
_expressPassController
_transactionStartAppletState
addRemoteAssetsForPartialUpdate:
setLastKnownReconciledPassSyncStateHash:
remoteAssetsForPartialUpdatesCount
clearRemoteAssetsForPartialUpdates
remoteAssetsForPartialUpdateAtIndex:
remoteAssetsForPartialUpdateType
hasLastKnownReconciledPassSyncStateHash
changeTypeAsString:
StringAsChangeType:
hasSyncStateItem
hasPassData
setHasPassSegmentIndex:
setHasPassSegmentTotal:
hasBaseManifestHashForPartialUpdate
lastKnownReconciledPassSyncStateHash
remoteAssetsForPartialUpdates
setRemoteAssetsForPartialUpdates:
_lastKnownReconciledPassSyncStateHash
_passSegmentIndex
_passSegmentTotal
_remoteAssetsForPartialUpdates
serviceProviderSupportedNetworksCount
clearServiceProviderSupportedNetworks
serviceProviderSupportedNetworksAtIndex:
serviceProviderCapabilitiesCount
clearServiceProviderCapabilities
serviceProviderCapabilitiesAtIndex:
defaultSuggestionsCount
clearDefaultSuggestions
defaultSuggestionsAtIndex:
serviceProviderSupportedNetworksType
serviceProviderCapabilitiesType
defaultSuggestionsType
hasServiceProviderIdentifier
hasServiceProviderCountryCode
hasServiceProviderDictJson
hasAction
hasMerchantID
setServiceProviderSupportedNetworks:
setServiceProviderCapabilities:
serviceProviderDictJson
setDefaultSuggestions:
_action
_defaultSuggestions
_merchantID
_serviceProviderCapabilities
_serviceProviderCountryCode
_serviceProviderDictJson
_serviceProviderIdentifier
_serviceProviderSupportedNetworks
exceptionWithName:reason:userInfo:
raise
addAppletsBytes:
lifecycleStatesCount
clearLifecycleStates
lifecycleStatesAtIndex:
addLifecycleStates:
activationStatesCount
clearActivationStates
activationStatesAtIndex:
addActivationStates:
appletsBytesCount
clearAppletsBytes
appletsBytesAtIndex:
appletsBytesType
lifecycleStates
setLifecycleStates:count:
activationStates
setActivationStates:count:
appletsBytes
setAppletsBytes:
_activationStates
_lifecycleStates
_appletsBytes
addCachedHeroImages:
cachedHeroImagesCount
clearCachedHeroImages
cachedHeroImagesAtIndex:
cachedHeroImagesType
hasStepIdentifier
setCachedHeroImages:
_cachedHeroImages
isPrimaryBalance
_isPrimaryBalance
_label
_formattedValue
requiredFieldsCount
clearRequiredFields
requiredFieldsAtIndex:
requiredFieldsType
hasCurrency
hasDepositAmount
hasMinLoadedBalance
hasMaxLoadedBalance
hasReaderModeMetadataJson
hasDigitalIssuanceMetadata
hasReaderModeResourcesJson
hasMinimumReaderModeBalance
setRequiredFields:
readerModeMetadataJson
readerModeResourcesJson
_currency
_depositAmount
_digitalIssuanceMetadata
_maxLoadedBalance
_minLoadedBalance
_minimumReaderModeBalance
_readerModeMetadataJson
_readerModeResourcesJson
_requiredFields
messageIdentifier
setMessageIdentifier:
errorHandler
setErrorHandler:
_messageIdentifier
_errorHandler
mainBundle
bundleIdentifier
setResponseQueue:
queueTSMConnectionResponse:
setProtobufAction:forIncomingResponsesOfType:
provisioningDataResponse:
registrationDataResponse:
configurationDataResponse:
signDataResponse:
secureElementGetAppletsResponse:
secureElementRemoveAppletsResponse:
setNewAuthRandomResponse:
didRegisterResponse:
dumpLogsResponse:
pendingRemovalResponse:
updatePaymentPass:
updatePushToken:
preconditionNotMet:
handleValueAddedServiceTransactions:
preferredAIDRequest:
preferredAIDResponse:
handleWebServiceContextDidChangeRequest:
handleWebServiceContextNeededRequest:
handlePaymentTransactions:
handleRemovedTransaction:
setExpressPassResponse:
removeExpressPassesWithCardTypeResponse:
removeExpressPassWithUniqueIdentifierResponse:
conflictingExpressPassIdentifiersForPassInformationResponse:
setBalanceReminderWithBalanceAndPassResponse:
setCommutePlanReminderWithCommutePlanAndPassResponse:
balanceReminderWithBalanceAndPassResponse:
commutePlanReminderWithCommutePlanAndPassResponse:
handleUpdatedAppletState:
getPairingInfoResponse:
handleShowPaymentSetupRequest:
enableServiceModeResponse:
handleTransactionDefaultsNeededRequest:
handleCompanionMigrationResponse:
peerPaymentRegisterResponse:
peerPaymentUnregisterResponse:
handleUpdatedPeerPaymentWebServiceContext:
provisionPeerPaymentPassResponse:
updatePeerPaymentAccountResponse:
openURLWithRequest:
handlePeerPaymentTermsAndConditionsAcceptanceRequest:
updatedAccountsForProvisioningResponse:
deviceMetadataResponse:
updateAccountWithIdentifierResponse:
handleDeviceUnlockedForPendingProvisioningRequest:
performDeviceCheckInResponse:
availableProductsResponse:
performProductActionResponse:
checkTLKsMissingResponse:
initializeCloudStoreIfNecessaryWithHandlerResponse:
resetApplePayManateeViewResponse:
downloadAllPaymentPasses:
checkCompanionPeerPaymentRegistrationState:
initializeCloudStoreIfNecessaryResponse:
cloudStoreStatusResponse:
markAllAppletsForDeletionResponse:
handleBalanceChange:
remotePassUpgradeResponse:
checkPasscodePolicyComplianceResponse:
handlePasscodeUpgradeFlowShouldExitRequest:
applyPasscodeRestrictionsResponse:
setOutstandingRequests:
outstandingRequests
_acquireAssertionOfType:
_invalidateAssertionOfType:
provisioningActiveDeviceAssertion
setProvisioningActiveDeviceAssertion:
setActivePairedDevice:withActiveDeviceAssertionHandler:
paymentPassWithUniqueID:synchronous:reply:
paymentPassesWithPrimaryAccountIdentifier:completion:
configureWebServiceIfNecessary:completion:
_setOrResetCleanupTimerForRequest:
_sendProtobuf:responseExpected:
_deviceIsDaytonaOrLater
_deviceIsFortuneOrLater
_getPairingInfoAndSetAuthRandomIfNotPaired:completion:
_setNewAuthRandomReturningPairingState:
_setNewAuthRandomIfNecessaryReturningPairingState:
authorizationHeader
_paymentWebService:registrationDataWithAuthToken:completionHandler:
responseQueue
setLocation:
phoneNumber
setDeviceSerialNumber:
setDeviceUDID:
setProductType:
setSecureElementIdentifier:
initWithUUIDString:
supportsCapability:
setSupportsAccessExpressMode:
paymentWebService:signData:withCompletionHandler:
paymentWebService:didRegisterWithRegionMap:primaryRegionTopic:
_supportedRegionsForWebService:
removeAIDsFromSecureElement:withCompletion:
savePaymentPass:forDevice:completion:
downloadRemoteAssetsWithScreenScale:suffix:completion:
removePaymentPassWithUniqueID:forDevice:waitForConfirmation:completion:
redownloadAllPaymentPassesWithCompletion:
initWithIdentifier:lifecycleState:
_sendProtobuf:responseExpected:extraOptions:
failedPrecondition
passIDs
insertOrUpdateValueAddedServiceTransaction:forPassUniqueIdentifier:paymentTransaction:completion:
scheduleAutomaticPresentationAvailableNotificationForPassWithUniqueIdentifier:handler:
identifiers
setIdentifiers:
setPassIDs:
actualUniqueID
_expressPassesInformationFromDataArray:
cancelled
expressMode
paymentApplicationIdentifier
initForExpressMode:withPassUniqueIdentifier:paymentApplicationIdentifier:
conflictingExpressPassIdentifiersForPassInformation:withReferenceExpressState:completion:
upgradeStatus
expressPassInformations
manager
handlePeerPaymentTermsAndConditionsRequestFromGizmo
handleDeviceUnlockedForPendingProvisioningRequestFromGizmo
needsRegistration
primaryRegion
accountServiceURL
hasAccounts
accountServiceEnabledForRegion:
setMetadataFields:
applyServiceURL
hasApplications
applyServiceEnabledForRegion:
applyServiceFeaturesForRegionMeetingEnablementThreshold:
_deviceSupportedFeatureIdentifiers
pk_setByRemovingObject:
availableProducts
initWithType:
watchPaymentWebService
availableProductsWithRequest:completion:
setDefaultCardUniqueID:completion:
supportsExpressForAutomaticSelectionTechnologyType:
initForPaymentPass:withTechologyTest:
_upgradeExpressAutomaticSelectionCriteriaRequestForPass:
_expressPassInformationWithPass:upgradeRequst:
deviceSupportMultipleExpressPasses
_multipleExpressTransitPassPaymentWebService:handlePotentialExpressPassInformation:upgradeRequest:pass:withCompletionHandler:
_singleExpressTransitPassPaymentWebService:handlePotentialExpressPassInformation:withCompletionHandler:
paymentWebService:passesOfType:
_categoryIdentifierForPass:
associatedAccountServiceAccountIdentifier
_expressModesFromExpressPassesInformation:
remotePassUpgradeWithRequest:pass:requireAuthorization:notifyUserOnPairedDevice:updateBlock:
setExpressWithPassInformation:requestAuthorization:completion:
initDummyExpressInfoForAutomaticSelectionCriteriaUpgradeRequest:paymentPass:withTechologyTest:
instancesRespondToSelector:
deviceClass
deviceVersion
_upgradeExpressAutomaticSelectionCriteriaRequestForPass:deviceClass:OSVersion:SEID:
upgradeRequests
minimumOSVersion
initWithMinimumVersion:maximumVersion:
versionMeetsRequirements:deviceClass:
secureElementIdentifier
technologyTypes
registrationDate
passcodeMeetsPolicy
passcodeChangeDelegate
paymentWebServiceTargetDevice:shouldExitPasscodeChangeFlowWithPasscodeChanged:error:
remoteDeviceAssertionManager
getAllDevices
paymentWebServiceDidUpdateConfiguration:
paymentWebService:queueConnectionToTrustedServiceManagerForPushTopic:withCompletion:
paymentWebService:configurationDataWithCompletionHandler:
paymentWebService:registrationDataWithCompletionHandler:
paymentWebService:signData:signatureEntanglementMode:withCompletionHandler:
paymentWebService:provisioningDataWithCompletionHandler:
paymentWebService:deleteApplicationWithAID:
paymentWebService:filterVerificationChannels:
paymentSupportedInCurrentRegionForWebService:
deviceDescriptionForPaymentWebService:
supportsAutomaticPassPresentation
noteProvisioningUserInterfaceDidAppear
noteProvisioningUserInterfaceDidDisappear
noteProvisioningDidBegin
noteProvisioningDidEnd
paymentWebService:setNewAuthRandom:
paymentWebService:hasPassesOfType:
paymentWebService:canProvisionPaymentPassWithPrimaryAccountIdentifier:
paymentWebService:validateAddPreconditionsWithCompletion:
downloadAllPaymentPassesForPaymentWebService:
paymentWebService:validateTransferPreconditionsWithCompletion:
paymentWebService:requestPassUpgrade:pass:completion:
claimSecureElementForCurrentUser
claimSecureElementForCurrentUserWithCompletion:
secureElementOwnershipStateForCurrentUser
paymentWebService:registrationDataWithAuthToken:completionHandler:
trustedDeviceEnrollmentInfoForWebService:
signatureForAuthToken:webService:completion:
applePayTrustKeyForIdentifier:completion:
createApplePayTrustKeyWithRequest:completion:
deleteApplePayTrustKeyWithIdentifier:completion:
cellularNetworkRegion
maximumPaymentCards
setMaximumPaymentCards:
paymentWebService:handlePotentialExpressPass:withCompletionHandler:
felicaSecureElementIsAvailable
secureElementIsAvailable
supportsExpressModeForExpressPassType:
supportsExpressMode:
paymentWebService:addPaymentPass:withCompletionHandlerV2:
paymentWebService:removePass:withCompletionHandler:
paymentWebServiceSupportsPeerPaymentRegistration:
paymentWebServiceSupportsAccounts:
supportedFeatureIdentifiersWithPaymentWebService:
updatedAccountsForProvisioningWithCompletion:
featureApplicationsForProvisioningWithCompletion:
paymentWebService:deviceMetadataWithFields:completion:
paymentWebService:updateAccountWithIdentifier:completion:
notePasscodeUpgradeFlowWillBeginWithCompletion:
notePasscodeUpgradeFlowDidEnd
enforceUpgradedPasscodePolicyWithCompletion:
startRequiringUpgradedPasscodeWithPasscodeMeetsPolicy:
endRequiringUpgradedPasscodeIfNecessary
paymentWebService:setDefaultPaymentPassUniqueIdentifier:
availableProductsWithCompletion:
performProductActionRequest:completion:
performDeviceCheckInWithCompletion:
paymentWebService:storePassOwnershipToken:withIdentifier:
paymentWebService:passOwnershipTokenWithIdentifier:completion:
archiveBackgroundContext:
markAllAppletsForDeletionWithCompletion:
paymentWebService:didRegisterWithRegionMap:
secureElementCardsWithCompletion:
dumpLogsWithCompletion:
handlePendingRemovalOfPassWithUniqueID:completion:
handlePreferredAID:forPassWithUniqueID:completion:
retrieveTransactionsForPassWithUniqueID:
handleDeletePaymentTransactionWithIdentifier:passUniqueIdentifier:
removeExpressPassesWithCardType:completion:
removeExpressPassWithUniqueIdentifier:completion:
conflictingExpressPassIdentifiersForPassInformation:completion:
setBalanceReminder:forBalance:pass:completion:
balanceReminderForBalance:pass:completion:
setCommutePlanReminderInterval:forCommutePlan:pass:completion:
commutePlanReminderIntervalForCommutePlan:pass:completion:
cancelOutstandingSetDefaultExpressPassRequestsWithExpressMode:
enableServiceModeForPassWithUniqueIdentifier:completion:
cancelOutstandingEnableServiceModeRequests
cancelOutstandingRemotePassUpdateRequest:pass:
peerPaymentUnregisterWithCompletion:
handleCompanionMigrationWithCompletion:
handleCompanionPeerPaymentRegistration
handleCompanioniCloudSignout
applyPasscodeRestrictionsRequestWithCompletion:
_serialNumbersOfAllPairedDevices
deviceSupportTransitReminderSetting
setPasscodeChangeDelegate:
setRemoteDeviceAssertionManager:
setManager:
_passcodeChangeDelegate
_outstandingRequests
_responseQueue
_provisioningActiveDeviceAssertion
_remoteDeviceAssertionManager
_manager
hasFlowIdentifier
hasCreditAccountCredential
flowIdentifier
creditAccountCredential
_creditAccountCredential
_flowIdentifier
regionsCount
clearRegions
regionsAtIndex:
supportedProtocolsCount
clearSupportedProtocols
supportedProtocolsAtIndex:
paymentOptionsCount
clearPaymentOptions
paymentOptionsAtIndex:
requestedProvisioningMethodsCount
clearRequestedProvisioningMethods
requestedProvisioningMethodsAtIndex:
regionsType
supportedProtocolsType
paymentOptionsType
requestedProvisioningMethodsType
hasDisplayName
hasPartnerIdentifier
hasPartnerName
setHasSupportedProvisioningMethods:
hasSupportedProvisioningMethods
setHasFlags:
hasFlags
setHasHsa2Requirement:
hasHsa2Requirement
hasImageAssetURLs
setHasSuppressPendingPurchases:
hasSuppressPendingPurchases
setRegions:
setPaymentOptions:
requestedProvisioningMethods
setRequestedProvisioningMethods:
_flags
_hsa2Requirement
_supportedProvisioningMethods
_displayName
_imageAssetURLs
_partnerIdentifier
_partnerName
_paymentOptions
_regions
_requestedProvisioningMethods
_supportedProtocols
_suppressPendingPurchases
verificationChannelsCount
clearVerificationChannels
verificationChannelsAtIndex:
verificationChannelsType
addExpressPassInformation:
expressPassInformationsCount
clearExpressPassInformations
expressPassInformationAtIndex:
expressPassInformationType
setUpgradeStatus:
setHasUpgradeStatus:
hasUpgradeStatus
upgradeStatusAsString:
StringAsUpgradeStatus:
setExpressPassInformations:
_expressPassInformations
_upgradeStatus
arrayWithCapacity:
supportedServerVersionsCount
clearSupportedServerVersions
supportedServerVersionsAtIndex:
supportedServerVersions
setSupportedServerVersions:count:
supportedServerVersionsAsString:
StringAsSupportedServerVersions:
hasClientInfoHTTPHeader
_supportedServerVersions
_clientInfoHTTPHeader
connect
noteWatchOfferDisplayedForPaymentPassWithUniqueID:
beginProvisioningFromWatchOfferForPaymentPass:withCompletion:
noteProvisioningPreflightCompleteWithSuccess:error:completion:
provisionPassForAccountIdentifier:makeDefault:completion:
registerDeviceWithCompletion:
paymentPassUniqueIDs:
paymentPassWithUniqueID:reply:
paymentPassWithDeviceAccountIdentifier:completion:
savePaymentPassAtURL:withUniqueID:forPairingID:completion:
removePaymentPassWithUniqueID:forPairingID:waitForConfirmation:completion:
setDefaultCard:completion:
defaultCard:
defaultPaymentApplicationForPassWithUniqueID:completion:
setDefaultPaymentApplication:forPassWithUniqueID:completion:
initiateConsistencyCheckWithCompletion:
handlePendingUnpairingWithCompletion:
handlePendingiCloudSignoutWithCompletion:
setSharedPaymentWebServiceContext:forPairingID:completion:
sharedPaymentWebServiceContextForPairingID:withCompletion:
setSharedPeerPaymentWebServiceContext:forPairingID:completion:
sharedPeerPaymentWebServiceContextForPairingID:withCompletion:
setPeerPaymentAccount:forPairingID:completion:
peerPaymentAccountForPairingID:withCompletion:
initiateLostModeExitAuthWithCompletion:
transactionsForPaymentPassWithUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:completion:
deletePaymentTransactionWithIdentifier:passUniqueIdentifier:fromDeviceWithPairingID:completion:
balanceReminderForBalance:pass:withCompletion:
commutePlanReminderIntervalForCommutePlan:pass:withCompletion:
trustedDeviceEnrollmentSignatureWithAccountDSID:sessionData:handler:
paymentPassWithUniqueIdentifier:didUpdateWithBalances:
setHasPriority:
hasPriority
setHasCardType:
setHasSupportedProtocols:
hasSupportedProtocols
_priority
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
mainQueue
_handleServerPaymentPassesChanged:
_handleDefaultCardChanged:
setForceConnectionOnResume:
_remoteObjectProxyWithFailureHandler:
_clearCaches
primarySecureElementIdentifier
_isApplePaySupportedInCurrentRegion
_cachedUniqueIDs
queueAppropriateFailedActions
_remoteObjectProxySynchronize:withFailureHandler:
_setCachedUniqueIDs:
_cachedPassForUniqueID:
_applyPropertiesToPass:
_addPassToCache:
_removePassWithUniqueIDFromCache:
fileURL
_savePaymentPass:atURL:forDevice:completion:
_sharedPaymentWebServiceContextForDevice:withCompletion:
_errorHandlerWithCompletion:
synchronousRemoteObjectProxyWithErrorHandler:
cachedUniqueIDs
setWithSet:
setCachedUniqueIDs:
cachedPasses
setCachedPasses:
initWithFileURL:error:
setDataAccessor:
setPreferredImageScale:
setPreferredImageSuffix:
_invalidateCachedPassWithUniqueID:
watchProvisioningURL
watchProvisioningURLForPaymentPass:
isSetupAssistantProvisioningSupported
isIssuerAppProvisioningSupported
watchPeerPaymentWebService
shouldShowWatchOfferForPaymentPass:withCompletion:
noteWatchOfferShownForPaymentPass:
defaultCardUniqueID:
consistencyCheckWithCompletion:
sharedPaymentWebServiceContext
setPeerPaymentAccount:forDevice:
shouldShowApplePaySettingsWithCompletion:
deletePaymentTransactionWithIdentifier:passUniqueIdentifier:fromDevice:completion:
hasQueuedPaymentPasses
setHasQueuedPaymentPasses:
connectionAvailableActions
setConnectionAvailableActions:
connectionUnavailableWebServiceContext
setConnectionUnavailableWebServiceContext:
_cacheQueue
_notifyToken
_queueAppropriateFailedActions
_hasQueuedPaymentPasses
_cachedPasses
_connectionAvailableActions
_connectionUnavailableWebServiceContext
setSelectedVerificationChannelIdentifier:
hasSelectedVerificationChannelIdentifier
_selectedVerificationChannelIdentifier
metadataFields
_metadataFields
setPasscodeMeetsPolicy:
setHasPasscodeMeetsPolicy:
hasPasscodeMeetsPolicy
_passcodeMeetsPolicy
manifestEntrysCount
clearManifestEntrys
manifestEntryAtIndex:
manifestEntryType
setManifestEntrys:
_manifestEntrys
addPassIDs:
passIDsCount
clearPassIDs
passIDsAtIndex:
passIDsType
failedPreconditionAsString:
StringAsFailedPrecondition:
setFailedPrecondition:
_failedPrecondition
_passIDs
moreInfoItemsCount
clearMoreInfoItems
moreInfoItemsAtIndex:
moreInfoItemsType
_fileHash
_relativePath
addIdentifiers:
identifiersCount
clearIdentifiers
identifiersAtIndex:
identifiersType
_identifiers
addCurrentUniqueIDs:
setActualUniqueID:
currentUniqueIDsCount
clearCurrentUniqueIDs
currentUniqueIDsAtIndex:
currentUniqueIDsType
setCancelled:
setHasCancelled:
hasCancelled
setHasNeedsUnlock:
hasNeedsUnlock
hasActualUniqueID
currentUniqueIDs
setCurrentUniqueIDs:
_actualUniqueID
_currentUniqueIDs
_cancelled
initWithDictionary:lastUpdated:
_updateMockBalance
_mockAccount
_accountQueue
_balanceOffset
npkSetObject:forKey:
_processArgumentWithMutableDictionary:object:key:
npkDictionaryWithObjectsAndKeys:
npkFindFirstObjectMatchingCondition:
npkSafeObjectAtIndex:
npkSafelyAddObject:
npkFakeArcRetain
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
uppercaseString
npkHasContent
isAllCaps
activeDeviceSelectorBlock
getDevicesMatching:
synchronizeUserDefaultsDomain:keys:
floatValue
valueWithPointer:
characterAtIndex:
isMainThread
stringByAppendingPathExtension:
dictionaryWithContentsOfFile:
currentLocale
initWithConfiguration:url:
componentsSeparatedByCharactersInSet:
predicateWithFormat:
supportedRegionsForOSVersion:deviceClass:platform:
path
copyItemAtPath:toPath:error:
setDPANSuffix:
setSupportsInAppPayment:
setSupportsContactlessPayment:
setDPANIdentifier:
setTransitProperties:
currentCalendar
component:fromDate:
locale
bundle
initWithPassDictionary:bundle:
bundleInfoValueForKey:PID:
applicationProxyForIdentifier:
localizedNameForContext:
pluginKitProxyForIdentifier:
containingBundle
hasPeerPaymentAccount
peerPaymentEnabledForRegion:
initWithLocaleIdentifier:
setAlwaysShowsDecimalSeparator:
setMinimumFractionDigits:
setMaximumFractionDigits:
setLocale:
decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:
decimalNumberByRoundingAccordingToBehavior:
supportsSerialNumberBasedProvisioning
requiresTransferSerialNumberBasedProvisioning
initRequiringSecureCoding:
finishEncoding
encodedData
watch
isSuicaPass
supportsTransitHistory
processInfo
processName
processIdentifier
setInvalidateWhenBackgrounded:
acquireAssertionOfType:withReason:completion:
URLByAppendingPathComponent:isDirectory:
initWithURL:options:error:
URLByAppendingPathComponent:
URLByAppendingPathExtension:
writeToURL:options:originalContentsURL:error:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
isEnumeratingDirectoryPostOrder
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
removeItemAtURL:error:
zippedDataForURL:
inputStreamWithData:
open
unzipStream:toPath:completionHandler:
pathComponents
pathWithComponents:
fileExistsAtPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
copyItemAtURL:toURL:error:
dataWithContentsOfURL:
SHA1Hash
deviceID
initWithBytes:length:
pathExtension
initWithFileURL:passURL:error:
remoteAssets
localURL
relativeLocalPath
sha1Hex
@24@0:8^{_NSZone=}16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
i16@0:8
v20@0:8i16
v20@0:8B16
B16@0:8
@20@0:8i16
i24@0:8@16
v16@0:8
@"NSString"
{?="assertionType"b1"pending"b1}
#16@0:8
@24@0:8Q16
@"NSMutableArray"
{?="allowNonSecureHTTP"b1}
@"NSData"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8@16i24i28@32
v40@0:8@"NPKPaymentProvisioningFlowController"16i24i28@"NPKPaymentProvisioningFlowStepContext"32
v40@0:8@"NPKPaymentProvisioningFlowController"16@"NSError"24@"NPKPaymentProvisioningFlowControllerRequestContext"32
v24@0:8B16B20
@"IDSService"
@"NSObject<OS_dispatch_queue>"
@"NPKPaymentProvisioningFlowController"
@"NPKPaymentProvisioningFlowStepContext"
@"NSMutableDictionary"
@"NPKStandaloneProvisioningNumericEntryCoordinator"
@"NPKProtoStandaloneRequestHeader"
B40@0:8@16@24@32
@"NPKPassSyncChange"
@"NSDate"
v40@0:8@16@24B32B36
v48@0:8@16@24@32@?40
v64@0:8@16@24@32@40@48@?56
v36@0:8@16@24B32
v32@0:8@"NPKPassSyncEngine"16@"NPKPassSyncChange"24
v40@0:8@"NPKPassSyncEngine"16@"NSUUID"24B32B36
v40@0:8@"NPKPassSyncEngine"16@"NSData"24@"NPKPassSyncState"32
v32@0:8@"NPKPassSyncEngine"16@"NPKPassSyncState"24
v32@0:8@"NPKPassSyncEngine"16@"NSData"24
v48@0:8@"NPKPassSyncEngine"16@"NSData"24@"NPKPassSyncStateItem"32@?<v@?B>40
v64@0:8@"NPKPassSyncEngine"16@"NSData"24@"NPKPassSyncStateItem"32@"NSData"40@"NSDictionary"48@?<v@?BB>56
v40@0:8@"NPKPassSyncEngine"16@"NSString"24@?<v@?B>32
v24@0:8@"NPKPassSyncEngine"16
v36@0:8@"NPKPassSyncEngine"16@"NPKPassSyncChange"24B32
@48@0:8@16@24@32^@40
@32@0:8@16@24
@"NSData"48@0:8@"NPKPassSyncEngine"16@"NSString"24@"NSDictionary"32^@40
@"NSData"32@0:8@"NPKPassSyncEngine"16@"NSString"24
v32@0:8Q16@24
@24@0:8@16
Q24@0:8@16
@"NPKPassSyncEngine"
@"NSObject<OS_dispatch_source>"
@"NPKPassSyncServiceSyncStatus"
v32@0:8@16@?24
{?="numericEntryPending"b1}
{?="pending"b1"success"b1}
{?="pending"b1}
@"NPKProtoStandalonePaymentProvisioningMethodMetadata"
q16@0:8
@"NPKProtoStandalonePaymentProvisioningFlowChooseCredentialsStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowChooseFlowStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowChooseProductStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowDigitalIssuanceAmountStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowDigitalIssuancePaymentStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationChannelsStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationCodeStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowIssuerVerificationFieldsStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryProgressStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowLocalDeviceManualEntryStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowManualEntryStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowMoreInformationStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowProductDisambiguationStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowProvisioningProgressStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowProvisioningResultStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowReaderModeEntryStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowReaderModeIngestionStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowSecondaryManualEntryStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowTermsAndConditionsStepContext"
@"NPKProtoStandalonePaymentProvisioningFlowWelcomeStepContext"
{?="allowsAddLater"b1}
v24@0:8d16
d16@0:8
{?="reminderInterval"b1}
{?="state"b1}
@"NPKProtoStandalonePaymentApplication"
@"NPKProtoStandalonePass"
{?="activationState"b1}
v24@0:8q16
@40@0:8@16@24@32
{?="forceReRegistration"b1}
@"NSArray"
@"NPKProtoPassSyncState"
@40@0:8@16@24Q32
@"NSSet"
@32@0:8@16q24
@"NPKProtoStandalonePaymentProvisioningFlowStepContext"
@"NPKProtoStandaloneResponseHeader"
{?="reminderInterval"b1"pending"b1}
{?="entanglementMode"b1}
v48@0:8@16:24@32@40
{?="isAvailable"b1}
v24@0:8@?16
v24@0:8Q16
@"<NPKQuickPaymentSessionSourceDelegate>"
@"NPKPMUButtonListener"
@"PKPass"
@"NSDictionary"
@"NPKQuickPaymentSessionLocalAuthenticationCoordinator"
v20@0:8I16
I16@0:8
@"NPKProtoHash"
{?="resyncID"b1"fullResyncNeeded"b1}
v36@0:8@16B24@28
v40@0:8Q16@24@32
v28@0:8i16@20
v32@0:8i16i20@24
@28@0:8@16B24
@"<NPKPaymentProvisioningFlowControllerDelegate>"
@"PKPaymentProvisioningController"
@"PKPaymentAuthorizationController"
@"PKContactlessCardIngester"
@"PKAddPaymentPassRequestConfiguration"
@"PKAddPaymentPassRequest"
@"PKPaymentWebService"
@"PKPaymentSetupFieldsModel"
@"<NSObject>"
@"NPKPaymentProvisioningFlowControllerRequestContext"
@"PKPaymentPass"
@"PKPaymentCredential"
@"PKPaymentSetupProduct"
@"PKPaymentRequest"
@"NSDecimalNumber"
@"PKServiceProviderPurchase"
@"PKPaymentProvisioningMethodMetadata"
@72@0:8@16@24q32Q40@48@56@64
@80@0:8@16@24q32Q40@48@56@64d72
@"IDSProtobuf"
{?="separateLocalDeviceEntryRequired"b1"useSimulatedFlowController"b1}
@32@0:8{CGSize=dd}16
@36@0:8{CGSize=dd}16B32
v32@0:8{CGSize=dd}16
v48@0:8@16{CGSize=dd}24d40
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B32@0:8@16@24
B48@0:8@16Q24@32@40
@"PKImage"
@"NSNumber"
@"PKNFCPayload"
@"PKColor"
@"PKPaymentApplication"
@"PKTransitAppletState"
v48@0:8@"NSArray"16@"NSData"24@"NSData"32@?<v@?@"PKAddPaymentPassRequest">40
v32@0:8@"PKPaymentPass"16@"NSError"24
v32@0:8@"PKXPCService"16@"NSXPCConnection"24
v24@0:8@"PKXPCService"16
@24@0:8@?16
@"PKXPCService"
{?="allowsManualEntry"b1}
@"NPKProtoCatalog"
@"NPKProtoPass"
{?="lastKnownResyncID"b1"resyncID"b1"syncID"b1}
v36@0:8@16B24@?28
@32@0:8Q16@24
v32@0:8@?16@24
v28@0:8B16@20
@?16@0:8
@"PUConnection"
@"NSSManager"
@"NPKCompanionAgentConnection"
@40@0:8q16@24B32B36
@64@0:8@16@24q32@40@48B56B60
{?="passType"b1"remotePass"b1}
@"<NPKTransitAppletHistoryFetcherDelegate>"
@"PKTransitPassProperties"
{?="httpStatus"b1}
v24@0:8@"NSString"16
@"NSXPCConnection"
{?="cancelUpdate"b1"requestAuthorization"b1"shouldNotifyUser"b1}
{?="authRandomSet"b1"pending"b1"success"b1}
@"NSURL"
@"NSError"
@"PKVerificationChannel"
{?="success"b1}
@"PKPaymentTransaction"
@"PKTransitAppletHistory"
@"PKFelicaAppletHistory"
@"PKExpressTransactionState"
v32@0:8@"PKFieldDetector"16@"PKFieldProperties"24
v24@0:8@"PKFieldDetector"16
@"PKFieldDetector"
@"NSNumberFormatter"
v28@0:8@16B24
@"NSUserActivity"
B24@0:8Q16
v40@0:8Q16@24@?32
v32@0:8Q16@?24
@"NSHashTable"
@"NSUUID"
@40@0:8@16Q24@32
v28@0:8@16i24
v24@0:8@"PKPaymentAuthorizationController"16
v40@0:8@"PKPaymentAuthorizationController"16@"PKPayment"24@?<v@?@"PKPaymentAuthorizationResult">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKPayment"24@?<v@?q>32
v40@0:8@"PKPaymentAuthorizationController"16@"PKShippingMethod"24@?<v@?@"PKPaymentRequestShippingMethodUpdate">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKContact"24@?<v@?@"PKPaymentRequestShippingContactUpdate">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKPaymentMethod"24@?<v@?@"PKPaymentRequestPaymentMethodUpdate">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKShippingMethod"24@?<v@?q@"NSArray">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKContact"24@?<v@?q@"NSArray"@"NSArray">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKPaymentMethod"24@?<v@?@"NSArray">32
v32@0:8@16Q24
v32@0:8@"PKPaymentAuthorizationController"16Q24
v32@0:8@"PKPaymentAuthorizationController"16@"NSError"24
v32@0:8@"PKPaymentAuthorizationController"16@?<v@?@"PKPaymentMerchantSession"@"NSError">24
v40@0:8@"PKPaymentAuthorizationController"16@"PKServiceProviderPurchase"24@?<v@?q>32
v40@0:8@"PKPaymentAuthorizationController"16@"PKAuthorizedPeerPaymentQuote"24@?<v@?@"PKPaymentAuthorizationResult">32
v40@0:8@"PKPaymentAuthorizationController"16@"PKDisbursementVoucher"24@?<v@?@"PKPaymentAuthorizationResult">32
v24@0:8@?<v@?B>16
@"PKPeerPaymentAccount"16@0:8
v24@0:8@?<v@?@"PKPeerPaymentAccount">16
@"NSArray"16@0:8
v40@0:8@"PKPaymentProvisioningController"16@"PKPeerPaymentCredential"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"CKAccountInfo"B@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v48@0:8@"NSURL"16@"NSString"24@"PKPeerPaymentWebService"32@?<v@?B@"NSError">40
v40@0:8@"NSURL"16@"NSString"24@?<v@?B@"NSError">32
@"PKAppleAccountInformation"16@0:8
v24@0:8@?<v@?q@"PKAppleAccountInformation">16
@"NPSDomainAccessor"
@"NPSManager"
@24@0:8^{CGImage=}16
^{CGImage=}16@0:8
{?="cancelOutstandingRequests"b1}
v40@0:8@16Q24Q32
v24@0:8@"PKContactlessInterfaceSession"16
v40@0:8@"PKContactlessInterfaceSession"16@"PKPaymentApplication"24@"PKPaymentPass"32
v48@0:8@"PKContactlessInterfaceSession"16@"PKPaymentApplication"24@"PKPaymentPass"32@"NSArray"40
v32@0:8@"PKContactlessInterfaceSession"16@"PKContactlessInterfaceTransactionContext"24
v40@0:8@"PKContactlessInterfaceSession"16Q24Q32
v32@0:8@"PKContactlessInterfaceSession"16@"PKFieldProperties"24
v32@0:8@"PKContactlessInterfaceSession"16Q24
B48@0:8@16@24@32B40B44
v40@0:8B16B20Q24@32
B24@0:8@?16
B24@0:8B16B20
v40@0:8Q16Q24@?32
@"<NPKQuickPaymentSessionDelegate>"
@"PKPaymentSessionHandle"
@"PKContactlessInterfaceSession"
v40@0:8@16q24@32
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
@"CLLocationManager"
@"CLInUseAssertion"
v32@0:8@16B24B28
v72@0:8Q16@24@32@40@48^B56^B64
v56@0:8@16@24@32@40@?48
@"NPKPassSyncState"
@"<NPKPassSyncEngineDelegate>"
@"<NPKPassSyncEngineDataSource>"
{?="cloudStoreIsSetup"b1"pending"b1}
@32@0:8q16@24
v32@0:8@16q24
v24@0:8@"PKFieldProperties"16
v32@0:8@"NSString"16@"PKPaymentMessage"24
v32@0:8@"NSString"16@"PKPaymentTransaction"24
v32@0:8@"NSString"16@"NSString"24
v32@0:8@"NSString"16@"NSSet"24
v28@0:8@"NSString"16B24
v32@0:8@"NSString"16@"PKValueAddedServiceTransaction"24
v32@0:8@"NSString"16@"PKTransitPassProperties"24
v32@0:8@"NSString"16q24
v24@0:8@"PKFeatureApplication"16
v36@0:8Q16@24B32
@"PKPaymentService"
@"NSMutableSet"
v24@0:8@"CSLSPasscodePrompt"16
v32@0:8@"CSLSPasscodePrompt"16@"NSString"24
@"CSLSPasscodePrompt"
v68@0:8@16@24@32i40@44@52@?60
v68@0:8@"PKPaymentRequest"16@"NSString"24@"NSString"32i40@"NSString"44@"NSNumber"52@?<v@?B@"NSError">60
v32@0:8@"PKRemotePaymentRequest"16@?<v@?B>24
v32@0:8@"PKPeerPaymentQuote"16@?<v@?B>24
v32@0:8@"PKPeerPaymentQuote"16@"NSError"24
@"<NPKRemoteInterfacePresenterDelegate>"
@80@0:8@16@24Q32@40@48@56@64@72
@64@0:8@16@24Q32@40@48@56
@"NPKPassSyncStateItem"
@"PKPeerPaymentService"
@"PKPeerPaymentAccount"
{?="enforcedPolicy"b1}
@32@0:8@16i24i28
i24@0:8Q16
i24@0:8q16
Q20@0:8i16
@"NPKProtoStandalonePaymentCredentialUnion"
@"NPKProtoStandalonePaymentRemoteCredential"
{?="allowsAddingDifferentCard"b1}
{?="type"b1"requiresUserInteraction"b1}
^{sqlite3=}16@0:8
^{sqlite3_stmt=}16@0:8
^{sqlite3_stmt=}32@0:8Q16q24
@36@0:8@16^{sqlite3_stmt=}24i32
@36@0:8#16^{sqlite3_stmt=}24i32
v40@0:8@16@24q32
v44@0:8@16@24q32B40
@72@0:8@16Q24Q32@40@48q56q64
@20@0:8B16
v36@0:8@16B24^B28
@72@0:8@16Q24Q32@40@48q56Q64
@32@0:8@16^@24
v28@0:8@?16B24
q32@0:8^B16^B24
^{sqlite3=}
^{sqlite3_stmt=}
v24@0:8^{__IOHIDEvent=}16
^{__IOHIDEventSystemClient=}16@0:8
v24@0:8^{__IOHIDEventSystemClient=}16
^{__IOHIDEventSystemClient=}
@"NPKProtoStandalonePaymentCredential"
@"NPKProtoStandalonePaymentPass"
{?="rank"b1}
{?="setAuthRandomIfNotPaired"b1}
{?="creditLimit"b1"currentBalance"b1}
@32@0:8@16@?24
@"NPKOSTransaction"
@"NPKProtoStandalonePaymentSetupProduct"
@48@0:8@16@24@32@40
B24@0:8q16
@24@0:8q16
@"PKPassLibrary"
@"NSDistributedNotificationCenter"
@"<NPKExpressPassControllerDelegate>"
@"PKExpressPassInformation"
{?="missing"b1"pending"b1}
{?="enforcedPolicy"b1"applyRestrictions"b1}
@"LAContext"
{?="pending"b1"unlockRequired"b1}
v24@0:8@?<v@?>16
v32@0:8@"PKAddPaymentPassRequestConfiguration"16@?<v@?>24
Q24@0:8@?16
@"NPKAssertion"
@"NSMutableIndexSet"
v40@0:8@16Q24@32
v32@0:8@"NPKQuickPaymentSession"16@"PKPass"24
v48@0:8@"NPKQuickPaymentSession"16@"PKPass"24@"NSArray"32@"NSArray"40
v40@0:8@"NPKQuickPaymentSession"16Q24@"PKContactlessInterfaceTransactionContext"32
v24@0:8@"NPKQuickPaymentSession"16
{?="allowsReaderModeEntry"b1}
{?="passcodeChanged"b1}
@"<NPKAccountPassManagerDelegate>"
@"PKAccount"
v36@0:8@"NSArray"16@"NSString"24B32
v40@0:8@"NSArray"16@"NSDictionary"24@"NSArray"32
v32@0:8@"PKTransitAppletState"16@"NSString"24
v24@0:8@"NSArray"16
v32@0:8@"NSSet"16@"NSString"24
v24@0:8@"PKPaymentWebServiceContext"16
v24@0:8@"PKPaymentWebServiceBackgroundContext"16
v32@0:8@"PKPeerPaymentWebServiceContext"16@"PKPeerPaymentAccount"24
v32@0:8@"PKPaymentPass"16@"PKVerificationChannel"24
@"NPKPaymentWebServiceCompanionTargetDevice"
@"PKPeerPaymentWebService"
@"NPKPeerPaymentWebServiceCompanionTargetDevice"
v24@0:8@"PKWebServiceContext"16
{?="cancelOutstandingRequests"b1"requestAuthorization"b1}
{?="cameraFirstProvisioningEnabled"b1}
@"NSObject<OS_os_transaction>"
@"MSConversation"
@"PKPeerPaymentRecipient"
@"NPKPeerPaymentConversationContext"
@"PKPeerPaymentController"
v32@0:8Q16d24
@32@0:8@16d24
v32@0:8@"PKContactlessCardIngester"16Q24
v40@0:8@"PKContactlessCardIngester"16@"NSError"24B32B36
@56@0:8@16@24@32@40@48
v48@0:8@16^@24^@32^@40
{?="passSettings"b1}
v20@0:8f16
f16@0:8
{?="ingestionProgress"b1"ingestionState"b1}
{?="changeAccepted"b1"fullPassRequired"b1}
@"NPKTestAddPaymentPassRequestContext"
@"NPKProtoStandaloneError"
{?="cardAdded"b1}
@"<NPKTransitPassesInfoManagerDelegate>"
v40@0:8@"NPKTransitAppletHistoryFetcher"16@"PKTransitAppletHistory"24@"NSString"32
v40@0:8@"NPKExpressPassController"16@"PKPass"24@"NSString"32
v32@0:8@"NPKExpressPassController"16@"PKPass"24
v40@0:8@"NPKExpressPassController"16@"NSSet"24@"NSSet"32
@"<NPKExpressTransitInterfaceControllerDelegate>"
@"<NPKExpressTransitInterfaceControllerDataSource>"
@"NPKTransitAppletHistoryFetcher"
@"NPKExpressPassController"
@"NPKProtoPassSyncStateItem"
{?="passSegmentIndex"b1"passSegmentTotal"b1}
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
{?="list"^I"count"Q"size"Q}
@44@0:8@16@24@32B40
@"NPKProtoStandalonePaymentDigitalIssuanceMetadata"
v48@0:8@16@24Q32@?40
B32@0:8@16Q24
@32@0:8@16Q24
v40@0:8@16Q24@?32
v24@0:8@"PKPaymentWebService"16
v40@0:8@"PKPaymentWebService"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"PKPaymentWebService"16@?<v@?@"PKPaymentDeviceConfigurationData"@"NSError">24
v32@0:8@"PKPaymentWebService"16@?<v@?@"PKPaymentDeviceRegistrationData"@"NSError">24
v48@0:8@"PKPaymentWebService"16@"NSData"24Q32@?<v@?@"NSData"@"PKSecureElementSignatureInfo"@"NSError">40
v32@0:8@"PKPaymentWebService"16@?<v@?@"PKPaymentDeviceProvisioningData"@"NSError">24
v32@0:8@"PKPaymentWebService"16@"NSString"24
v40@0:8@"PKPaymentWebService"16@"NSDictionary"24@"NSString"32
@"NSArray"32@0:8@"PKPaymentWebService"16@"NSArray"24
i24@0:8@"PKPaymentWebService"16
@"NSString"24@0:8@"PKPaymentWebService"16
@"PKOSVersionRequirement"16@0:8
v32@0:8@"PKPaymentWebService"16@?<v@?B@"NSData"@"NSData">24
v32@0:8@"PKPaymentWebService"16@?<v@?B>24
B32@0:8@"PKPaymentWebService"16Q24
B32@0:8@"PKPaymentWebService"16@"NSString"24
v32@0:8@"PKPaymentWebService"16@?<v@?B@"NSError">24
v40@0:8@"PKPaymentWebService"16@"PKPaymentPass"24@?<v@?>32
v48@0:8@"PKPaymentWebService"16@"PKPassUpgradeRequest"24@"PKPaymentPass"32@?<v@?@"NSError"@"PKPaymentPass">40
v40@0:8@"PKPaymentWebService"16@"NSString"24@?<v@?@"PKPaymentDeviceRegistrationData"@"NSError">32
@"PKTrustedDeviceEnrollmentInfo"24@0:8@"PKPaymentWebService"16
v40@0:8@"NSString"16@"PKPaymentWebService"24@?<v@?@"NSString"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"PKApplePayTrustKey">24
v32@0:8@"PKApplePayTrustKeyRequest"16@?<v@?@"PKApplePayTrustKey"@"NSError">24
v32@0:8@"NSString"16@?<v@?B>24
@"NSArray"32@0:8@"PKPaymentWebService"16Q24
v40@0:8@"PKPaymentWebService"16@"PKPaymentPass"24@?<v@?@"NSSet">32
B24@0:8@"NSString"16
v40@0:8@"PKPaymentWebService"16@"PKPaymentPass"24@?<v@?@"PKPaymentPass">32
v40@0:8@"PKPaymentWebService"16@"PKPass"24@?<v@?B@"NSError">32
B24@0:8@"PKPaymentWebService"16
@"NSSet"24@0:8@"PKPaymentWebService"16
v24@0:8@?<v@?@"NSArray"@"NSArray">16
v24@0:8@?<v@?@"NSArray">16
v40@0:8@"PKPaymentWebService"16Q24@?<v@?@"PKPaymentDeviceMetadata">32
v40@0:8@"PKPaymentWebService"16@"NSString"24@?<v@?@"PKAccount"@"NSError">32
v24@0:8@?<v@?@"PKPaymentAvailableProductsResponse"@"NSError">16
v32@0:8@"PKPaymentProductsActionRequest"16@?<v@?@"PKPaymentAvailableProductsResponse"@"NSError">24
v40@0:8@"PKPaymentWebService"16@"NSString"24@"NSString"32
v40@0:8@"PKPaymentWebService"16@"NSString"24@?<v@?@"NSString">32
v28@0:8B16@?20
v32@0:8q16@?24
v48@0:8d16@24@32@?40
v48@0:8@16@24B32B36@?40
@36@0:8@16B24@28
@"<NPKPaymentWebServiceCompanionTargetDeviceDelegate>"
@"<NPKPaymentWebServiceCompanionTargetDevicePasscodeChangeDelegate>"
@"NRActiveDeviceAssertion"
@"NPKTargetDeviceAssertionManager"
@"NPKTapToRadarManager"
@"NPKProtoStandaloneCreditAccountCredential"
@"NPKProtoStandalonePaymentSetupProductImageAssetURLs"
{?="flags"b1"hsa2Requirement"b1"supportedProvisioningMethods"b1"suppressPendingPurchases"b1}
{?="upgradeStatus"b1"pending"b1}
^i16@0:8
v32@0:8^i16Q24
{?="list"^i"count"Q"size"Q}
v36@0:8B16@20@?28
v44@0:8@16@24B32@?36
v80@0:8@16Q24Q32@40@48q56q64@?72
v32@0:8@"PKPaymentPass"16@?<v@?B@"NSError">24
v36@0:8B16@"NSError"20@?<v@?>28
v36@0:8@"NSString"16B24@?<v@?B@"NSError">28
v24@0:8@?<v@?QQ@"NSError">16
v24@0:8@?<v@?@"NSSet">16
v32@0:8@"NSString"16@?<v@?@"PKPaymentPass">24
v32@0:8@"NSString"16@?<v@?@"NSSet">24
v48@0:8@"NSURL"16@"NSString"24@"NSUUID"32@?<v@?B>40
v44@0:8@"NSString"16@"NSUUID"24B32@?<v@?B@"NSError">36
v24@0:8@?<v@?@"NSString">16
v32@0:8@"NSString"16@?<v@?@"PKPaymentApplication">24
v40@0:8@"PKPaymentApplication"16@"NSString"24@?<v@?@"PKPaymentPass">32
v40@0:8@"PKPaymentWebServiceContext"16@"NSUUID"24@?<v@?>32
v32@0:8@"NSUUID"16@?<v@?@"PKPaymentWebServiceContext">24
v32@0:8Q16@"NSString"24
v40@0:8@"PKPeerPaymentWebServiceContext"16@"NSUUID"24@?<v@?>32
v32@0:8@"NSUUID"16@?<v@?@"PKPeerPaymentWebServiceContext">24
v40@0:8@"PKPeerPaymentAccount"16@"NSUUID"24@?<v@?>32
v32@0:8@"NSUUID"16@?<v@?@"PKPeerPaymentAccount">24
v24@0:8@?<v@?@"NSError">16
v80@0:8@"NSString"16Q24Q32@"NSDate"40@"NSDate"48q56q64@?<v@?@"NSSet">72
v48@0:8@"NSString"16@"NSString"24@"NSUUID"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"PKPaymentApplication"24@?<v@?@"PKTransitAppletState">32
v40@0:8@"PKPaymentBalance"16@"PKPaymentPass"24@?<v@?@"PKPaymentBalanceReminder">32
v48@0:8@"PKPaymentBalanceReminder"16@"PKPaymentBalance"24@"PKPaymentPass"32@?<v@?B>40
v40@0:8@"PKCommutePlan"16@"PKPaymentPass"24@?<v@?d>32
v48@0:8d16@"PKCommutePlan"24@"PKPaymentPass"32@?<v@?B>40
v40@0:8@"NSString"16@"NSData"24@?<v@?@"NSString"Q@"NSData"@"NSError">32
{?="cardType"b1"priority"b1"supportedProtocols"b1}
@28@0:8B16@?20
@?24@0:8@?16
@"<NPKCompanionAgentConnectionDelegate>"
@"PKPaymentWebServiceContext"
{?="passcodeMeetsPolicy"b1}
{?="sequenceCounter"b1}
{?="cancelled"b1"needsUnlock"b1"pending"b1"success"b1}
@32@0:8@16#24
