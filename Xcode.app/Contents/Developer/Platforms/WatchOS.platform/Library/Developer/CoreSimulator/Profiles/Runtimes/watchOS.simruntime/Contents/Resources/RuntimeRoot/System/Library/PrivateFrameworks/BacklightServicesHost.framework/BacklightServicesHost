@(#)PROGRAM:BacklightServicesHost  PROJECT:BacklightServices-1
@333333
displayMode
transitioningToDisplayMode
lastSteadyStateDisplayMode
isFlipbookEnabled
showingBlankingWindow
backlightFactorOn
isCABlanked
displayIsOff
currentState
targetState
pendingEventToPerform
pendingUpdatePresentation
pendingUpdateToSpecifier
queuedEventToPerform
com.apple.Carousel
com.apple.clockface
com.apple.Carousel.defaultblanking
com.apple.carousel.lockscreen
com.apple.carousel.bulletin.alert
remoteContextView
alert:Legacy
com.apple.BacklightServices.BLSHBacklightTransitionStateMachine.watchdogtest
com.apple.BacklightServices.BLSHBacklightDisplayStateMachine.watchdogtest
Invalid condition not satisfying: %@
handler != nil
BLSHBacklightOSInterfaceProvider.m
!_caBlanked
v16@?0@"NSNotification"8
observeSignificantTimeChange
v16@?0@"BSSimpleAssertion"8
[BLSHBacklightIdleProvider createSharedProviderWithLocalAssertionService:] should not be called twice
BLSHBacklightIdleProvider.m
[BLSHBacklightIdleProvider sharedProvider] should not be called before createSharedProviderWithLocalAssertionService:
_lock_invalidated
cannot invoke [BLSHBacklightIdleProvider start] twice
must set idleTimeout to non-zero before calling [BLSHBacklightIdleProvider start]
backlightIdle
[attribute isKindOfClass:[BLSPreventBacklightIdleAttribute class]]
[attribute restartTimerOnInvalidation]
_active[type] == !isActivate
BLSPauseWhenSceneBackgroundAttribute not class for %@
BLSHPauseWhenSceneBackgroundAttributeHandler.m
v8@?0
%p must invalidate before dealloc: %@
scene invalidated
<%p:%@>
delegate
targetVisualState
updatingInitialState
updatingVisualState
animating
v16@?0@"<BSServiceConnectionListenerConfiguring>"8
v16@?0@"BSServiceConnection<BSServiceConnectionContext>"8
v16@?0@"<BSServiceConnectionInternalConfiguring>"8
BLSHAlwaysOnPresentationEngine.m
_lock_engineState == BLSHAlwaysOnPresentationEngineStateStopped
always on (live)
always on (live flipbook)
_lock_allowSleepBlock == nil
_lock_wantsToSleep
_lock_engineState != BLSHAlwaysOnPresentationEngineStateFlipbookRenderMinimal
 not
render minimal frames
renderSession != nil
v16@?0@8
AlwaysOnPresentationEngine
!_lock_begun
[_lock_pendingEnvironments count] > 0
v16@?0@"NSArray"8
@16@?0@"NSDate"8
v16@?0@"<BSTimerScheduleQuerying><BSCancellable><BSInvalidatable>"8
renderedCount
specifier != nil
_lock_preparingSpecifier == nil
renderedFrame != nil
v24@?0@"<BLSHRenderedFlipbookFrame>"8@"NSError"16
_lock_preparingSpecifier == specifier
_invalidated
BLSHPresentationUpdates.m
start
nextStart
updates
invalidated
nowDate != nil
BLSHDateSpecifierModel.m
distant future should not be now
presentation != nil
!isSkipUpdate
started
updatedInitialState
completed
triggerEvent
initialSpecifier
_ended
BLSHBacklightInactiveEnvironmentSession.m
v16@?0@"BLSHPresentationEntry"8
v16@?0@"<BLSHBacklightInactiveEnvironmentSessionObserving>"8
presentation
BLSHLocalAssertionService workloop
BLSHLocalAssertionService queue
BLSHLocalAssertionService
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
activeAssertions
v32@?0@"BLSAssertionIdentifier"8@"<BLSAssertionServiceResponding>"16^B24
pausedAssertions
v32@?0@"NSArray"8@"<BLSHAssertionAttributeHandler>"16^B24
cannot register handler for classes:%@ overlaps existing handler for classes:%@
B32@?0@"BLSAttribute"8Q16^B24
v16@?0@"<BLSHAssertionServiceObserving>"8
already acquired assertion
BLSLocalAssertionService does not support replacement with %@
expectedFidelity == BLSUpdateFidelitySeconds
BLSHInactiveProcessBudget.m
SecondsInvalidationBudgetExceeded
@"<BLSHInactiveProcessBudgeting>"24@?0@"<BLSHBacklightSceneHostEnvironment>"8@"<BLSHInactiveBudgetPolicing_Private>"16
v32@?0@"RBSProcessIdentity"8@"<BLSHInactiveProcessBudgeting>"16^B24
v24@?0@"BLSAlwaysOnDateSpecifier"8@"<BLSHBacklightSceneHostEnvironment>"16
presentationTime
frameId
specifier
BLSHBacklightEnvironmentStateMachine
updatingTransitionStates
transitionStates
updatingSpecifier
backlightState
pendingNotifyBeganUpdatingState
updatingState
updatingPresentation
@16@?0@"NSOrderedCollectionChange"8
v16@?0d8
@16@?0@"BLSHPresentationEntry"8
no more transitionStates but %u != %u
BLSHBacklightEnvironmentStateMachine.m
%@ must subclass BLSHLocalAssertionAttributeHandler and override %@
BLSHLocalAssertionAttributeHandler.m
service disconnected
v32@?0@"BLSAssertionIdentifier"8@"BLSHAssertionProxy"16^B24
isAcquired
descriptor
identifier
remoteTarget
sharedBacklightHost != nil
BLSHBacklightHostObserving.m
_sharedBacklightHost == nil
%@ must subclass BLSHLocalCountingAssertionAttributeHandler and override %@
BLSHLocalCountingAssertionAttributeHandler.m
attributeHandler:%@ is not a kindof BLSHLocalCountingAssertionAttributeHandler
attribute
assertion
service
invalid class (not BLSDurationAttribute subclass) of attribute:%@
invalidation duration expired
timeout duration expired
BLSHBacklightStateMachine.m
BacklightServices.performEvent:%p:%d
v28@?0B8@"NSError"12@"<SWSystemActivityAcquisitionDetails>"20
v16@?0@"<BLSHBacklightHostObserving>"8
BacklightServices.backlightActiveOn
alwaysOnEnabled
alwaysOnDisabled
count
isSecondsFidelity
BLSHWatchdogProvider.m
!_invalidated
v16@?0@"BSContinuousMachTimer"8
platformProvider != nil
BLSHService.m
[BLSHService startServiceWithPlatformProvider:] should not be called twice
[BLSHService sharedService] should not be called before startServiceWithPlatformProvider:
<nil scene>:%@
v16@?0@"FBSMutableSceneSettings"8
v16@?0@"<BLSHBacklightSceneHostEnvironmentObserver>"8
v16@?0@"BLSBacklightSceneVisualState"8
v16@?0@"NSDate"8
v16@?0@"<BLSHBacklightSceneHostEnvironmentObserver_Project>"8
scene
clientEnabled
clientActive
visualState
presentationDate
aOEnabledForEnv
liveUpdating
displayBlanked
@"NSObject"8@?0
@"NSString"8@?0
B8@?0
1FPSFlipbook
updateToSceneVisualState:%@
v16@?0@"BSActionResponse"8
v16@?0@"BLSBacklightSceneUpdateBacklightRampResponse"8
@"FBSSceneTransitionContext"16@?0@"FBSMutableSceneSettings"8
requestPresentationDatesForDateInterval:%@
v16@?0@"BLSFrameSpecifiersRequestResponse"8
updateTo:%@
_lock_renderSessionAssertion == nil
BLSHBacklightFBSceneHostEnvironment.m
RenderSession:%p
_lock_renderSessionAssertion != nil
@16@?0@"<BLSHBacklightSceneHostEnvironment>"8
presentationEntries
context
expirationDate
environment
<nil>
userObject
wantsTransform
inverted
^v8@?0
%@ (clientPid:%d) - force active
B32@?0@"BLSAlwaysOnDateSpecifier"8Q16^B24
q24@?0@"BLSAlwaysOnDateSpecifier"8@"BLSAlwaysOnDateSpecifier"16
v24@?0Q8^v16
clientPID
proxy is invalid for pid:%d
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
alwaysFillFlipbook
backlightWatchdogsDisabled
disableFlipbook
usePseudoFlipbook
transparentFlipbook
com.apple.BacklightServices
[self invalidated]
BLSHDefaultsObserver.m
%@ default set
BLSHBacklightTransitionStateMachine
BLSHBacklightTransitionStateMachine.m
Shouldn't be called
inactiveBacklight
%p transition to backlight state for event:%@
%u != %u - displaymodes should match at this point, current:%@ target:%@
_session != nil
v16@?0@"<BLSBacklightStateObserving>"8
fidelity
specifiers
@16@?0@"BLSHEnvironmentDateSpecifier"8
environments
startingWith
v32@?0@"BLSHEnvironmentDateSpecifier"8Q16^B24
presentationInterval
previousPresentationDate
shouldReset
com.apple.Carousel.BacklightServices.UserIdleProvider
zeroTimeout
idleTimeout
v16@?0@"AWAttentionEvent"8
v32@?0@"NSNumber"8@"NSString"16^B24
canceled due to backlight inactive
Flipbook
Live
Black
Normal
AlwaysOn
BLSHBacklightDisplayStateMachine
%p transition to displayMode:%@
BLSHAggregatedProcessAssertion.m
[_lock_aggregated objectForKey:assertion] == nil
expectedFidelity == BLSUpdateFidelityMinutes
BLSHInactiveProcessMinutesBudget.m
v24@?0@"BLSAlwaysOnDateSpecifier"8@"BLSHInactiveBudgetBucket"16
B32@?0@"BLSHInactiveBudgetBucket"8Q16^B24
v32@?0@"BLSHInactiveBudgetBucket"8Q16^B24
applied
MinutesInvalidationBudgetExceeded
%@ must subclass BLSHLocalCountingSceneAssertionAttributeHandler and override %@
BLSHLocalCountingSceneAssertionAttributeHandler.m
[attribute isKindOfClass:[BLSSceneAttribute class]]
[entry service] == service
v32@?0@"NSString"8@"<BLSHWatchdogDelegate>"16^B24
Test watchdog %@
BLSHAssertionService.m
B32@?0@"<BLSHRenderedFlipbookFrame>"8Q16^B24
[[self activeFrames] count] == 0
BLSHPseudoFlipbook.m
useAlwaysOnBrightnessCurve
v20@?0B8d12
v12@?0B8
failure in %{public}@ of <%{public}@:%p> (%{public}@:%i) : %{public}@
flipbook transparent, will not blank
set ca blanked:%{BOOL}u
set ca flipbook enabled:%{BOOL}u
isUsingAlwaysOnBrightnessCurve:%{BOOL}u
setUsingAlwaysOnBrightnessCurve:%{BOOL}u
(BKS) backlightFactor:%f on:%{BOOL}u lock_backlightFactorOn:%{BOOL}u
setBacklightFactorOn:%{BOOL}u fadeDuration:%lf
flipbook set transparent, will unblank
flipbook no longer transparent, will blank
%p invalidated:%{BOOL}u needUpdate:%{BOOL}u shouldBePaused:%{BOOL}u for scene:%{public}@ settings:%{public}@
%p: client is disabled for %{public}@, so considering updated to state:%{public}@
%p:%{public}@ will update to state:%{public}@ wasUpdating:%{BOOL}u visualState:%{public}@ presentationDate:%{public}@ animated:%{BOOL}u event:%{public}@ touchTarget:%{BOOL}u
%p:%{public}@ redundant update to state:%{public}@ wasUpdating:%{BOOL}u visualState:%{public}@ presentationDate:%{public}@ animated:%{BOOL}u event:%{public}@ touchTarget:%{BOOL}u
%p:%{public}@ scene contents updated to state:%{public}@ visualState:%{public}@ presentationDate:%{public}@ event:%{public}@ animated:%{BOOL}u isStale:%{BOOL}u
%p:%{public}@ animationComplete to state:%{public}@ visualState:%{public}@ presentationDate:%{public}@ event:%{public}@ isStale:%{BOOL}u
%p:%{public}@ update to dateSpecifier:%{public}@
%p:%{public}@ did update to dateSpecifier:%{public}@
did startServer:%{public}@ withLocalBacklightProxy:%{public}@
if we own the defaultShellMachName:%{public}@ then BacklightServices.assertions must be registered there not:%@
%{public}@ init with domain:%{public}@
%p did config
%p init with listener:%{public}@
%p did invalidate connection for interfaceTarget:%{public}@
%p did configure connection:%{public}@
%p did activate peer:%{public}@
%p:%d engine starting live from flipbook, will live update to:%{public}@
%p:%d engine starting live
%p:%d engine starting flipbook
%p:%d engine stopping currentSpecifier:%{public}@
%p:%d did complete request dates operation:%{public}@, specifiers:%{public}@
%p:%d did timeout render dates operation:%{public}@ pendingEnvironments:%{public}@
%p:%d invalidate flipbook for source:%{public}@ reason:%{public}@ environment:%{public}@ (%u->%u frames), on glass frame:%{public}@, newLastRenderedFrame:%{public}@ (should be null)
%p:%d invalidate flipbook (live flipbook) for source:%{public}@ reason:%{public}@ environment:%{public}@ (%u->%u frames), on glass frame:%{public}@, newLastRenderedFrame:%{public}@ (should be null)
%p:%d will ignore invalidate flipbook (rendering live) for source:%{public}@ reason:%{public}@ environment:%{public}@
%p:%d (live) hostEnvironment:%{public}@ hostDidSetUnrestrictedFramerateUpdates:%{BOOL}u
%p:%d sleepRequested wantsToSleep=YES previousAllowSleepBlock:%p
%p:%d prepareForSleep wantsToSleep was NO (will ensure fill) isPredictiveFlipbook=%{BOOL}u
%p:%d prepareForSleep wantsToSleep was YES (yay!)
%p:%d prepareForSleep while live updating
%p:%d timed out sleep request
%p:%d sleepRequestAborted (before allow sleep completed) wantsToSleep=%{BOOL}u
%p:%d sleepRequestAborted wantsToSleep=%{BOOL}u
%p:%d willWakeFromSleep (aborted before allow sleep completed) wantsToSleep=%{BOOL}u
%p:%d willWakeFromSleep wantsToSleep=%{BOOL}u
%p:%d did change flipbook render type:%u
will use pseudo-flipbook
will use CAFlipbook
%p:%d for presentation date:%{public}@ performing live updates:%{public}@
%p:%d requesting dates for interval:%{public}@ missingIntervals:%{public}@ shouldReset:%{BOOL}u
%p:%d will not render frames, empty presentation session:%{public}@
%p:%d will not render frames, waiting for request dates operation:%{public}@ isPredictiveFlipbook:%{BOOL}u timer:%{public}@
%p:%d will not render more frames, waiting for previous render:%{public}@
%p:%d live flipbook will not render frames, have scheduled timer:%{public}@
%p:%d now:%{public}@ is%s in updates:%{public}@
%p:%d requesting updates activeCount:%u lastRenderedFrame:%{public}@
%p:%d received updates:%{public}@
%p:%d no more updates, will not render more frames
%p:%d flipbook full (%u), will not render more frames
%p:%d will render frame:%@
%p:%d ending render session, rendered frames: %{public}@
%p:%d will use 30 seconds from now, nextsUpdateStart:%{public}@
%p:%d (nil next update) timer already scheduled in %lfs will not reschedule
%p:%d timer already scheduled but %lfs is more than %lfs in the future, will reschedule for %{public}@
%p:%d nil next update, will use 30 seconds from now, nextsUpdateStart:%{public}@
%p timerFired for %{public}@ nextsUpdateStart:%{public}@
%p:%d scheduling waking timer %{public}@ is too soon, using %lf seconds from now:%{public}@ nextsUpdateStart:%{public}@
%p:%d scheduling waking timer for %{public}@ nextsUpdateStart:%{public}@
%p:%d timer too soon (will just dispatch_async) for %{public}@ nextsUpdateStart:%{public}@
%p:%d scheduling timer for %{public}@ nextsUpdateStart:%{public}@
%p nil environment identifier for interval:%{public}@ environment:%{public}@
%p request dates operation did not complete after ~3 seconds (+leeway), (but it is being debugged), pending environments:%{public}@ 
%p request dates operation did not complete after ~3 seconds (+leeway), pending environments:%{public}@ 
%p failed to render:%{public}@ total:%u error:%{public}@
%p did render:%{public}@ total:%u
%p prepare frame operation did not complete after ~1 second (+leeway), (but it is being debugged), pending environments:%{public}@ 
%p prepare frame operation did not complete after ~1 second (+leeway), pending environments:%{public}@
%p dateInterval:%{public}@ extends past expirationDate:%{public}@ for presentation:%{public}@
%p updates (start) after:%{public}@ coalesceTo:%{public}@ gapDuration:%1.3lg epsilon:%.3lf max:%ld upTo:%{public}@ pres:%{public}@ filtered:%{BOOL}u
%p updates skipping env:%{public}@
%p updates env:%{public}@ specifiers:%{public}@
%p updates(%d) (skipping initial) valid:(%{public}@->%{public}@)
%p updates(%d) (loop) valid:(%{public}@->%{public}@) (skip:%{BOOL}u initial:%{BOOL}u)
%p updates(%d) (will coaelsce) specifier:%{public}@ nextSpecifier:%{public}@ valid:(%{public}@->%{public}@) gapDuration:%1.3lg env:%{public}@
%p updates(%d) (exceeded budget) specifier:%{public}@ nextSpecifier:%{public}@ valid:(%{public}@->%{public}@) gapDuration:%1.3lg env:%{public}@
%p updates(%d) (will not coaelsce) validSpecifier:%{public}@ specifier:%{public}@ nextSpecifier:%{public}@ valid:(%{public}@->%{public}@) gapDuration:%1.3lg env:%{public}@
%p updates(%d) (set enumerater) validSpecifier:%{public}@ nextSpecifier:%{public}@ valid:(%{public}@->%{public}@) gapDuration:%1.3lg env:%{public}@
%p updates(%d) (skip invalid - continuing) valid:(%{public}@->%{public}@)
%p updates(%d) (initial invalid - continuing) valid:(%{public}@->%{public}@)
%p updates(%d) (invalid - stopping) valid:(%{public}@->%{public}@)
%p updates(%d) (gap reached - stopping) previous:%{public}@ earliest:%@ latest:%@ valid:(%{public}@->%{public}@) (initial:%{BOOL}u) startingAtDate:%{public}@ gapDuration:%1.3lg
%p updates(%d) (add) update:%{public}@ valid:(%{public}@->%{public}@) (initial:%{BOOL}u) startingAtDate:%{public}@ gapDuration:%1.3lg
%p updates(%d) (skipping) previous=start valid:(%{public}@->%{public}@) (initial:%{BOOL}u) startingAtDate:%{public}@ gapDuration:%1.3lg
%p updates(%d) (no nextStart) - will use earliest of %u environment model end next:%{public}@ startingAtDate:%{public}@
%p updates(%d) (complete) after:%p coalesceTo:%{public}@ gapDuration:%1.3lg epsilon:%.3lf max:%ld upTo:%{public}@ pres:%p filtered:%{BOOL}u result:%{public}@ startingAtDate:%{public}@
%p registered handler for attributes:%{public}@
%p will now activate (registered handler:%{public}@) attributes:%{public}@ from assertion:%{public}@
%p paused cancelled assertion %{public}@
%p already paused assertion %{public}@
%p will pause assertion:%{public}@
%p handler:%{public}@ will deactivate (pause) attributes:%{public}@ from assertion:%{public}@
%p resumed cancelled assertion %{public}@
%p already resumed assertion %{public}@
%p will resume assertion:%{public}@
%p will activate (resume) attributes:%{public}@ from assertion:%{public}@
%p created identifer:%{public}@ for local assertion:%{public}@
%p already acquired assertion %{public}@
%p will acquire assertion:%{public}@
%p will activate (acquire) attributes:%{public}@ from assertion:%{public}@
%p (no handler) will delay activation of attributes:%{public}@ for assertion:%{public}@
%p already cancelled assertion %{public}@
%p will cancel assertion:%{public}@ wasPaused:%{BOOL}u
%p handler:%{public}@ will deactivate (cancel) attributes:%{public}@ from assertion:%{public}@
%p (still no handler) will not cancel attributes:%{public}@ for assertion:%{public}@
%p cannot restart timer without BLSTimeoutDurationAttribute for assertion %{public}@
%p cannot restart timer for unacquired assertion %{public}@
%p will restart timer:%{public}@ for assertion:%{public}@
%p (no handler) will not restart timeout:%{public}@ for assertion:%{public}@
%p expectedFidelity:BLSUpdateFidelityNever specifier:%{public}@ denied
%p expectedFidelity:BLSUpdateFidelitySeconds specifier:%{public}@ denied - previous:%{public}@ next:%{public}@ exempted:%{public}@
%p will ignore budgeted invalidation (BLSUpdateFidelitySeconds) requesteDate:%{public}@ already have scheduled invalidation in %.3lfs
%p will schedule budgeted invalidation (BLSUpdateFidelitySeconds) requesteDate:%{public}@ in %.0lfs  previous:%{public}@
%p will reset budget for process:%{public}@ reason:%{public}@
%p created %{public}@
%p (%u new environments will update backlight state) setPresentation:%{public}@
%p (no insertions) setPresentation:%{public}@
%p (empty diff) setPresentation:%{public}@
%p (finishing) setPresentation:%{public}@, shouldCompleteImmediatelyIfTransitionComplete=%{BOOL}u, isTransitionComplete=%{BOOL}u
%p (transitionState:didBeginUpdateToBacklightState:visualState:), _transitionStates:%{public}@, backlightState:%{public}@, _backlightState:%{public}@ _pendingNotifyBeganUpdatingState:%{BOOL}u, _updatingPresentation:%{BOOL}u, _updatingState:%{BOOL}u, transitionState:%{public}@, visualState:%{public}@
%p completedOperation:%{public}@ backlightState:%ld updatingState:%{BOOL}u shouldNotifyUpdatedPresentation:%{BOOL}u shouldNotifyBegan:%{BOOL}u shouldNotifyCompleted:%{BOOL}u
%p (transitionState:didCompleteUpdateToBacklightState:visualState:), _transitionStates:%{public}@, backlightState:%{public}@, _backlightState:%{public}@ _pendingNotifyBeganUpdatingState:%{BOOL}u, _updatingPresentation:%{BOOL}u, _updatingState:%{BOOL}u, transitionState:%{public}@, visualState:%{public}@
%p no identifier for assertion:%{pubic}@
%p cannot activate invalid attribute:%@ not of class:%@
%p (cannot re-activate) already have entry:%{public}@ for attribute:%{pubic}@ assertion:%{pubic}@
%p did re-activate entry:%{public}@ for attribute:%{pubic}@ assertion:%{pubic}@
%p did activate entry:%{pubic}@ for attribute:%{pubic}@ assertion:%{pubic}@
%p nil when activating attribute:%{pubic}@ entryClass:%{public}@ assertion:%{pubic}@
%p no entries for assertion:%{pubic}@
%p cannot deactivate invalid attribute:%@
%p (cannot deactivate) no entry for attribute:%{pubic}@ assertion:%{pubic}@
%p will deactive entry:%{pubic}@ for attribute:%{pubic}@ assertion:%{pubic}@
must invalidate before deallocating service
%p handler:%{public}@ increment count:%u->%u with entry:%{public}@
%p handler:%{public}@ decrement count:%u->%u for %p with entry:%{public}@
%p will restart timer:%{public}@ for attribute:%{pubic}@ assertion:%{pubic}@
%p will performRequest with event:%{public}@
%p didCompleteUpdateToState:%{public}@ forEvent:%{public}@ elapsed:%.4lfs
%p didCompleteUpdateToState:%{public}@ forEvent:<null>
%p changed alwaysOnEnabled:%{bool}u will re-perform request:%{public}@
%.2lfs watchdog fired:"%{public}@" elapsedTime:%.2lfs abortContext:%{public}@
%.2lfs watchdog fired:"%{public}@" after elapsed time:%.2lfs watchdogEnabled:%{BOOL}u isBeingDebugged:%{BOOL}u
%.2lfs watchdog invalidated:"%{public}@" elapsedTime:%.2lfs watchdogEnabled:%{BOOL}u isBeingDebugged:%{BOOL}u
did startServer:%{public}@ withLocalAssertionService:%{public}@
%p:%{public}@ create host environment:%{public}@ for scene:%{public}@
%p:%{public}@ sceneDelegate:%{public}@ does not respond to @selector(addActionHandler:) - cannot invalidate from client, scene:%{public}@
animated=%{BOOL}u but performBacklightRampBlock=%{public}@
animated=%{BOOL}u but animationCompleteBlock=%{public}@
%p:%{public}@ nil scene, will not update scene:%{public}@ to visualState:%{public}@ presentationDate:%{public}@ animated:%{BOOL}u event:%{public}@ touchTarget:%{BOOL}u
%p:%{public}@ couldn't get a client processIdentity for scene %p. cannot take CPU/GPU grant process assertion
%p:%{public}@ client update action failed error:%{public}@ response:%{public}@, will not update scene:%{public}@ to visualState:%{public}@ presentationDate:%{public}@, animated:%{BOOL}u touchTarget:%{BOOL}u event:%{public}@
%p:%{public}@ client did update scene:%{public}@ to visualState:%{public}@ presentationDate:%{public}@ animated:%{BOOL}u touchTarget:%{BOOL}u event:%{public}@
%p:%{public}@ client ramp action response:%{public}@ isKindBLSBacklightSceneUpdateBacklightRampResponse:%{BOOL}u for update to visualState:%{public}@
%p:%{public}@ client ramp action failed error:%{public}@ response:%{public}@, for update to visualState:%{public}@ presentationDate:%{public}@, animated:%{BOOL}u event:%{public}@
%p:%{public}@ client began ramp with duration:%lf for update to visualState:%{public}@ presentationDate:%{public}@, animated:%{BOOL}u event:%{public}@
%p:%{public}@ client animation action failed error:%{public}@ response:%{public}@, for update to visualState:%{public}@ presentationDate:%{public}@, animated:%{BOOL}u event:%{public}@
%p:%{public}@ client did complete animation to visualState:%{public}@ presentationDate:%{public}@, animated:%{BOOL}u event:%{public}@
%p:%{public}@ updateToVisualState:%{public}@ scene:%p to presentationDate:%{public}@ clientHasDelegate:%{BOOL}u with:%{public}@
%p:%{public}@ nil scene, will return only now date for interval:%{public}@ previous:%{public}@ reset:%{BOOL}u
%p:%{public}@ couldn't get a client processIdentity for scene %p. cannot take CPU grant process assertion
%p:%{public}@ date specifier request failed error:%{public}@ response:%{public}@, for interval:%{public}@ previous:%{public}@ reset:%{BOOL}u
%p:%{public}@ client dates:%{public}@ animation interval:%{public}@ previous:%{public}@ reset:%{BOOL}u
%p:%{public}@ request presentation dates for interval:%{public}@ previous:%{public}@ reset:%{BOOL}u clientHasDelegate:%{BOOL}u created action:%{public}@
%p:%{public}@ nil scene, will not update scene:%{public}@ to dateSpecifier:%{public}@
%p:%{public}@ scene:%{public}@ already at dateSpecifier:%{public}@
%p:%{public}@ client update action failed error:%{public}@ response:%{public}@ will not update scene:%{public}@ to dateSpecifier:%{public}@
%p:%{public}@ client did update to dateSpecifier:%{public}@
%p:%{public}@ request to update scene:%p to dateSpecifier:%{public}@ clientHasDelegate:%{BOOL}u action:%{public}@
%p:%{public}@ nil scene, will not update scene:%p to presentationDate nil
%p:%{public}@ scene:%{public}@ already at presentationDate nil
%p:%{public}@ update to presentationDate nil for scene:%{public}@
%p:%{public}@ scene:%p did invalidate
%p:%{public}@ already have all specifiers in interval:%{public}@, will skip
%p:%{public}@ truncating interval:%{public}@ due to current interval:%{public}@ - to new interval:%{public}@
%p:%{public}@ new interval:%{public}@ does not intersect current interval:%{public}@ - will invalidate %d old dates
%p:%{public}@ new interval:%{public}@ does not follow current interval:%{public}@ - will invalidate %d old specifiers
%p:%{public}@ will clear %d specifiers from interval:%{public}@
%p:%{public}@ did purge:%d dates (remaining:%d) before:%{public}@
%p:%{public}@ no dates to purge (remaining:%d) before:%{public}@
%p must invalidate before deallocating service for pid:%d
%p already observing from pid:%d
%p client now running pid:%d update to backlight state:%{public}@
%p was not observing from pid:%d
%p client not running pid:%d will not notify backlight update to state:%{public}@ event:%{public}@
%p createdSession:%p with presentation:%{public}@
%p destroy session:%p with current presentation:%{public}@
%p created target:%{public}@
%p will performEvent:%{public}@ currentState:%{public}@
%p (findNextOperation) pending:%{public}@
%p (findNextOperation) no environmentPerformUpdate operation needed isBeforeDisplayUpdate:%{BOOL}u (queuedEvent:%{public}@})
%p (findNextOperation) still pending:%{public}@
%p (findNextOperation) will discard specifier from presentation engine end:%{public}@ (no events, currentBacklightState:%u)
%p (findNextOperation) no updateSpecifier needed
%p (findNextOperation) will discard specifier from presentation engine end:%{public}@ (not needed for event:%{public}@)
%p (findNextOperation) replaced pending event:%{public}@ with new event:%{public}@
%p (findNextOperation) will start:%{public}@
%p (findNextOperation) [_pendingUpdatePresentation isCompleted] so setting to nil: %{public}@
%p (findNextOperation) returning existing updatePresentation operation: %{public}@
%p (findNextOperation) no updatePresentation operation needed
%p (findNextOperation) ok to proceed (live) - animated (not to off) and updated to initial state:%{public}@
%p (findNextOperation) ok to proceed - unanimated (not to off) and updated to initial state:%{public}@
%p (findNextOperation) animating:%{BOOL}u pending:%{public}@
%p (findNextOperation) no updateDisplayMode operation needed
%p no operation - currentDisplayMode:%{public}@ shouldStartEngine:%{BOOL}u shouldEndSession:%{BOOL}u finalEvent:%{public}@ session:%{public}@
%p got operation: %{public}@
%p waiting for operation to complete: %{public}@
%p operation has none type: %{public}@
%p: operation is nil (finalEvent:%{public}@). _pendingEventToPerform=%@, _pendingUpdatePresentation=%@, _pendingUpdateToSpecifier=%@, _pendingUpdateDisplayMode=%@, _queuedEventToPerform=%@
%p didBeginUpdateToState:%{public}@ matchesPendingEvent:%{BOOL}u pendingEvent:%{public}@
%p didCompleteUpdateToState:%{public}@ matchesPendingEvent:%{BOOL}u pendingEvent:%{public}@
%p didUpdateToPresentation:%{public}@ matchesPendingUpdate:%{BOOL}u pending:%{public}@
%p didUpdateToSpecifier:%{public}@ matchesPendingUpdate:%{BOOL}u pending:%{public}@
%p updateToPresentation:%{public}@ previousTarget:%{public}@
%p amend scene with visualState:%{public}@ willBeForeground:%{BOOL}u containsEnv:%{BOOL}u environment:%{public}@ presentation:%{public}@
%p will not amend scene willBeForeground:%{BOOL}u containsEnv:%{BOOL}u newVisualState:%{public}@ newPresentationDate:%{public}@ environment:%{public}@ presentation:%{public}@
%p didUpdateToMode:%{public}@ matchesPendingUpdate:%{BOOL}u pending:%{public}@
ignoring zero timeout idle
BLSHUserIdleProvider received user idle
BLSHUserIdleProvider received user unidle
BLSHUserIdleProvider updating timeout %lf shouldReset=%@
could not update idle timeout for user idle provider error=%@
error starting up attention awareness client %@
error resuming attention awareness client %@
could not reset user idle provider error=%@
error invalidating attention awareness client %@
%p didUpdateToMode:%{public}@ but has new transition
%p error:%{public}@ failed to acquire rb assertion:%{public}@
%p error:%{public}@ failed to reacquire rb assertion:%{public}@
%p specifier:%{public}@ fits in bucket:%{public}@
%p have budget, for specifier:%{public}@ created new bucket:%{public}@
%p specifier:%{public}@ %.3lfs after bucket:%{public}@
%p specifier:%{public}@ %.3lfs before nextSpecifier:%{public}@ bucket:%{public}@
%p specifier:%{public}@ %.3lfs before nextSpecifier:%{public}@ (will skip - out of budget)
%p rendered specifier:%{public}@ applied to bucket:%{public}@
%p rendered specifier:%{public}@ not found, applied to new bucket:%{public}@
%p will ignore budgeted invalidation specifier:%{public}@ already have scheduled invalidation in %.3lfs
%p will schedule budgeted invalidation specifier:%{public}@ in %.0lfs
%p budget full at date:%{public}@
%p budget available (%d) at date:%{public}@ buckets:%d
%p handler:%{public}@ will activate for:%{public}@
%p handler:%{public}@ will deactivate for:%{public}@
%p handler:%{public}@ will cancel assertion:%{public}@ due to invalidated scene:%{public}@
respondToActions: action: %@
respondToActions: matched action: %@
%p culling (%lu) frames
%p %@ initialValue:%{BOOL}u
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
BLSHBacklightDisplayStateMachineAbortContext
BLSHWatchdogAbortContext
NSObject
BLSHBacklightTransitionStateMachineAbortContext
BLSHBacklightService
BLSHBacklightOSInterfaceProvider
BLSHTransparentFlipbookProvider
BLSHBacklightOSInterfaceProviding
BLSHOSInterfaceProviding
BLSHBacklightIdleProvider
BLSBacklightStateObserving
BLSHUserIdleProvidingDelegate
BSInvalidatable
BLSHPreventBacklightIdleAttributeHandler
BLSHPauseWhenSceneBackgroundAttributeHandler
BLSHAssertionPausingSceneObserver
BLSHLocalAssertionAttributeHandlerEntry
FBSceneObserver
BLSHEnvironmentTransitionState
BLSHXPCBacklightProxyHostServer
BSServiceConnectionListenerDelegate
BLSHAlwaysOnPresentationEngine
BLSHEngineRequestDatesOperationDelegate
BLSHEngineRenderFlipbookSessionDelegate
BLSHBacklightInactiveEnvironmentSessionObserving
SWSystemSleepObserver
BLSHAlwaysFillFlipbookProvider
BLSHPseudoFlipbookProvider
BLSHBacklightSceneHostEnvironmentObserver
BLSHEngineRequestDatesOperation
BLSHEngineRenderFlipbookSession
BLSHPresentationUpdates
BLSHDateSpecifierModel
BLSHEnvironmentDatesEnumerator
BLSHPendingEventToPerform
BLSHPendingOperation
BLSHBacklightInactiveEnvironmentSession
BLSHBacklightAggregateState
BLSHBacklightTransitionStateMachineState
BLSHLocalAssertionService
BLSHAssertionAttributeHandlerService
BLSAssertionService
BLSHInactiveProcessBudget
BLSHInactiveProcessBudgeting
BLSHInactiveProcessSecondsBudget
BLSHDisableAlwaysOnAttributeHandler
BLSHInactiveBudgetPolicy
BLSHInactiveBudgetPolicing_Private
BLSHInactiveBudgetPolicing
BLSHNullInactiveProcessBudget
BLSHFlipbook
BacklightServicesHost
BLSHRenderedFlipbookFrame
BLSHBacklightEnvironmentStateMachine
BLSHEnvironmentTransitionStateDelegate
BLSHEnvironmentOperation
BLSHUpdateOperation
BLSHBegunUpdateOperation
BLSHCompletedUpdateOperation
BLSHDidSetPresentation
BLSHPseudoFlipbookAttributeHandler
BLSHLocalAssertionAttributeHandler
BLSHAssertionAttributeHandler
BLSHXPCAssertionServiceHost
BLSXPCAssertionServiceHostInterface
BLSHAssertionProxy
BLSAssertionServiceResponding
BLSAsserting
BLSHBacklightHost
BLSHTransparentFlipbookAttributeHandler
BLSHLocalCountingAssertionAttributeHandler
BLSHCountingAssertionAttributeEntry
BLSHDurationAttributeHandler
BLSHAssertionAttributeTimer
BLSHInvalidationTimer
BLSHWarningTimer
BLSHTimeoutTimer
BLSHBacklightStateMachine
BLSHBacklightPlatformProviderObserver
BLSHDisableAlwaysOnProvider
BLSBacklightProxy
BLSBacklightStateObservable
BLSHBacklightHostObservable
BLSHRequestUnrestrictedFramerateAttributeHandler
BLSHInactiveBudgetBucket
BLSHInactiveBudgetBucketEntryCount
NSCopying
BLSHPendingUpdateDisplayMode
BLSHWatchdogProvider
BSLHWatchdogTimer
BLSHDisableBacklightWatchdogsAttributeHandler
BLSHService
BLSHXPCAssertionServiceHostServer
BLSHBacklightFBSceneHostEnvironment
BLSHBacklightSceneHostEnvironment
BLSHBacklightEnvironmentPresentation
BLSHPresentationEntry
BLSHFlipbookContext
BLSHForceActiveAttributeHandler
BLSHForceActiveAttributeEntry
BLSHRequestLiveUpdatingAttributeHandler
BLSHEnvironmentDatesModel
BLSHDisableFlipbookAttributeHandler
BLSHBacklightSceneClientSettingsDiffInspector
BLSHGenericSceneDelegateWithActionHandlers
BLSSceneDelegateWithActionHandlers
FBSceneDelegate
BLSHXPCBacklightProxyHost
BLSXPCBacklightProxyHostInterface
BLSHDefaultsObserver
BLSHDefaultHandler
BLSHBacklightTransitionStateMachine
BLSHBacklightInactiveEnvironmentSessionUpdating
BLSHBacklightDisplayStateMachineDelegate
BLSHBacklightEnvironmentStateMachineDelegate
BLSHDisableFlipbookProvider
BLSHBacklightSceneHostEnvironmentObserver_Project
BLSHWatchdogDelegate
BLSHBacklightStateMachineEventPerforming
BLSHFlipbookSpecification
BLSHPendingUpdateToSpecifier
BLSHEnvironmentDateSpecifier
BLSHPresentationDateSpecifier
BLSHEnvironmentDateInterval
BLSHUserIdleProvider
BLSHUserIdleProviding
BLSHValidWhenBacklightInactiveAttributeHandler
BLSValidWhenBacklightInactiveAttributeEntry
BLSHCancelWhenBacklightInactivatesAttributeEntry
BLSHAlwaysFillFlipbookAttributeHandler
BLSHBacklightDisplayStateMachine
BLSHBacklightOSInterfaceStateMachineDelegate
BLSHAggregatedProcessAssertion
BLSHAggregateProcessAssertion
BLSHDurationCalculator
BLSHInactiveProcessMinutesBudget
BLSHBacklightMutableTargetState
BLSHLocalCountingSceneAssertionAttributeHandler
BLSHBacklightFBSceneEnvironmentActionHandler
BLSSceneActionHandler
BLSHWatchdogTester
BLSHAssertionService
BLSHPseudoFlipbook
BLSHPseudoFlipbookFrame
BLSHBacklightOSInterfaceStateMachine
BLSHBoolWithTimedTransition
BLSHPendingUpdatePresentation
init
_populatePayload
builderWithObject:
appendString:withName:
appendBool:withName:
build
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
abortReason
payload
payloadSize
TQ,R,N
Tr^v,R,N
TI,R,N
initWithDisplayMode:transitioningToDisplayMode:lastSteadyStateDisplayMode:isFlipbookEnabled:showingBlankingWindow:backlightFactorOn:isCABlanked:displayIsOff:
_displayMode
_transitioningToDisplayMode
_lastSteadyStateDisplayMode
_isFlipbookEnabled
_showingBlankingWindow
_backlightFactorOn
_isCABlanked
_displayIsOff
_payloadSize
_abortReason
_payload
TQ,R,N,V_abortReason
Tr^v,R,N,V_payload
TI,R,N,V_payloadSize
displayMode
presentation
appendObject:withName:
initWithCurrentState:targetState:pendingEventToPerform:pendingUpdatePresentation:pendingUpdateToSpecifier:pendingUpdateDisplayMode:queuedEventToPerform:
.cxx_destruct
_currentState
_targetState
_pendingEventToPerform
_pendingUpdatePresentation
_pendingUpdateToSpecifier
_pendingUpdateDisplayMode
_queuedEventToPerform
flipbookContext
isInverted
wantsTransform
presentationEntries
count
firstObject
environment
identifier
objectAtIndexedSubscript:
hasPrefix:
containsString:
didUpdateInitialState
triggerEvent
state
previousState
initialSpecifier
presentationDate
timeIntervalSinceReferenceDate
initForService:withPlatformProvider:osInterfaceProvider:inactiveBudgetPolicy:
initWithPlatformProvider:osInterfaceProvider:inactiveBudgetPolicy:
initWithPlatformProvider:eventPerformer:osInterfaceProvider:
registerSharedBacklightHost:
setDefaultBacklightProxy:
localAssertionService
registerHandlersForService:
serverWithLocalBacklightProxy:
displayStateMachine
dictionaryWithObjects:forKeys:count:
initWithWatchdogTestables:
serviceForService:withPlatformProvider:osInterfaceProvider:inactiveBudgetPolicy:
_stateMachine
_transitionStateMachine
_backlightXPCServer
_watchdogTester
registerHandlerForService:provider:
stringWithFormat:
UTF8String
isCAFlipbookEnabled
isUsingAlwaysOnBrightnessCurve
useAlwaysOnBrightnessCurve:withRampDuration:
isShowingBlankingWindow
showBlankingWindow:withFadeDuration:
setRestrictedFramerate:withRenderPeriod:explicitRenderTimes:
initWithIdentifier:
scheduleWithFireInterval:leewayInterval:queue:handler:
scheduleWatchdogWithDelegate:explanation:timeout:
acquireWithTimeout:handler:
createWithPlatformProvider:
monitorUsingMainQueue
defaultCenter
addObserverForName:object:queue:usingBlock:
initWithIdentifier:forReason:invalidationBlock:
isFlipbookTransparent
setFlipbookTransparent:
flipbookTransparent
TB,N,GisFlipbookTransparent
scheduledTimerWithIdentifier:interval:leewayInterval:handler:
scheduledWakingTimerWithIdentifier:interval:leewayInterval:handler:
acquirePowerAssertionWithIdentifier:timeout:
acquireSystemActivityAssertionWithIdentifier:timeout:handler:
createFlipbook
systemSleepMonitor
observeSignificantTimeChangeWithIdentifier:handler:
setUseAlwaysOnBrightnessCurve:rampDuration:
setBacklightFactorOn:fadeDuration:
setShowingBlankingWindow:fadeDuration:
willUnblank
isCABlanked
setCABlanked:
setCAFlipbookEnabled:
isKernelAlwaysOnMode
setKernelAlwaysOnMode:
isBacklightFactorOn
caBlanked
TB,N,GisCABlanked,SsetCABlanked:
caFlipbookEnabled
TB,N,GisCAFlipbookEnabled,SsetCAFlipbookEnabled:
kernelAlwaysOnMode
TB,N,GisKernelAlwaysOnMode
useAlwaysOnBrightnessCurve
TB,R,N,GisUsingAlwaysOnBrightnessCurve
backlightFactorOn
TB,R,N,GisBacklightFactorOn
showingBlankingWindow
TB,R,N,GisShowingBlankingWindow
initWithPlatformProvider:
_platformProvider
_watchdogProvider
_lock
_caBlanked
_flipbookTransparent
_lock_backlightFactorOn
initWithLocalAssertionService:idleProvider:
setDelegate:
addObserver:
backlightState
setIdleTimeout:shouldReset:
resume
setShouldNotifyOfUnidle:
invalidate
pause
setActive:
reset
backlightTurnedOnForEvent:
initWithRequestedActivityState:explanation:timestamp:sourceEvent:sourceEventMetadata:
performChangeRequest:
createSharedProviderWithLocalAssertionService:
sharedProvider
backlight:didCompleteUpdateToState:forEvent:
backlight:didChangeAlwaysOnEnabled:
idleProviderDidIdle:
idleProviderDidUnidle:
start
signalUserActivityOccurred
idleTimeout
setIdleTimeout:
nonInteractiveIdleTimeout
setNonInteractiveIdleTimeout:
isActive
isIdle
hasUserActivityOccured
setSuspended:
delegate
_lock_idleProvider
_backlight
_lock_idleTimeout
_lock_nonInteractiveIdleTimeout
_lock_backlightState
_lock_started
_lock_active
_lock_suspended
_lock_suppressed
_lock_idle
_lock_userActivityOccured
_lock_invalidated
_delegate
active
TB,N,GisActive
T@"<BLSHBacklightIdleProviderDelegate>",W,N,V_delegate
Td,N
idle
TB,R,N,GisIdle
userActivityOccured
TB,R,N,GhasUserActivityOccured
initForService:provider:
setupService
initForService:
arrayWithObjects:count:
attribute
clearUserInteraction
restartTimerOnInvalidation
typeForEntry:
preventIdle
preventIdleAndRestartTimerOnInvalidation
preventIdleClearUserInteractionAndRestartTimerOnInvalidation
activate:withEntry:
attributeClasses
attributeBaseClass
countingTargetForEntry:
activateWithFirstEntry:
deactivateWithFinalEntry:
provider
_active
_provider
T@"BLSHBacklightIdleProvider",R,W,N,V_provider
entryClass
initForAttribute:fromAssertion:forService:
sharedInstance
sceneIdentityToken
sceneFromIdentityToken:
removeObserver:
settings
isForeground
pauseAssertion:
resumeAssertion:
errorWithDomain:code:userInfo:
cancelAssertion:withError:
activateForAttribute:fromAssertion:forService:attributeHandler:
reactivateIfPossible
assertion
service
T@"BLSAttribute",R,W,N
T@"<BLSAssertionServiceResponding>",R,W,N
T@"<BLSHAssertionAttributeHandlerService>",R,W,N
sceneContentStateDidChange:
sceneDidActivate:
sceneWillDeactivate:withError:
sceneDidInvalidate:
scene:clientDidConnect:
scene:didPrepareUpdateWithContext:
scene:didApplyUpdateWithContext:
scene:didCompleteUpdateWithContext:error:
scene:didUpdateClientSettingsWithDiff:oldClientSettings:transitionContext:
_scene
_invalidated
_paused
_assertion
_service
_attribute
T@"BLSPauseWhenSceneBackgroundAttribute",R,W,N,V_attribute
T@"<BLSAssertionServiceResponding>",R,W,N,V_assertion
T@"<BLSHAssertionAttributeHandlerService>",R,W,N,V_service
clientHasDelegate
visualState
inactiveBudgetPolicy
isAnimatedTransition
isEqualToDate:
isAlwaysOnEnabledForEnvironment
updateToVisualState:presentationDate:animated:triggerEvent:touchTargetable:sceneContentsUpdated:performBacklightRamp:animationComplete:
transitionState:didBeginUpdateToBacklightState:visualState:
transitionState:didCompleteUpdateToBacklightState:visualState:
clearPresentationDate
updateToDateSpecifier:sceneContentsUpdated:
transitionState:didUpdateToDateSpecifier:
date
updateToPresentationDate:sceneContentsUpdated:
createStateForEnvironment:delegate:
isUpdatingInitialState
isUpdatingVisualState
isAnimating
isUpdatedToBacklightState:
updateToBacklightState:forEvent:touchTargetable:presentationDate:performBacklightRamp:
updateToDateSpecifier:
_targetVisualState
_updatingInitialState
_updatingVisualState
_animating
_environment
T@"<BLSHBacklightSceneHostEnvironment>",R,N,V_environment
updatingInitialState
TB,R,N,GisUpdatingInitialState
updatingVisualState
TB,R,N,GisUpdatingVisualState
animating
TB,R,N,GisAnimating
initWithLocalBacklightProxy:
bootstrapConfiguration
domainsContainingServiceIdentifier:
anyObject
defaultShellMachName
domainForMachName:
domainSpecification
serviceQuality
serial
serviceClass
relativePriority
serviceClass:relativePriority:
setDomain:
setService:
listenerWithConfigurator:
activate
initWithLocalBacklightProxy:peer:
setServiceQuality:
setTargetQueue:
interface
setInterface:
setInterfaceTarget:
setInvalidationHandler:
configureConnection:
listener:didReceiveConnection:withContext:
_localBacklightProxy
_serviceListener
_callbackQueue
flipbookSpecification
initWithFrameCapacity:framesPerSecond:minimumGapDuration:coaelscingEpsilon:minimumPrepareInterval:maximumRenderInterval:
initWithInactiveBudgetPolicy:
isLiveUpdating
cancelAllFrames
bls_specifier
collect
purgeStaleDataForNowDate:
registerSpecifiers:forDateInterval:environment:
bls_boundedDescription
requestInterval
chargeRenderedSpecifier:
mainBundle
bundleIdentifier
invalidateAtRequestDate:forEnvironment:invalidationBlock:
clearSpecifiersForEnvironment:
activeFrames
bls_shortLoggingString
stop
startFlipbook
isScheduled
purgeSpecifiersBefore:
coaelscingEpsilon
updatesAfterSpecifier:coalesceFirstUpdateToNowDate:plusRenderEarlyEpsilon:untilGapOverDuration:coaelscingEpsilon:maximumUpdates:lastValidDate:forPresentation:environmentFilter:
dequeueNextUpdate
specifiers
countByEnumeratingWithState:objects:count:
dateSpecifier
minimumPrepareInterval
maximumRenderInterval
initWithStartDate:duration:
missingAnySpecifiersInDateInterval:forPresentation:
initWithRequestInterval:delegate:osInterfaceProvider:
missingIntervalsForDateInterval:ofPresentation:
beginOperationWithIntervals:shouldReset:
resetFutureSpecifiers
main_prepareAndRenderNextFlipbookFrame
frameCapacity
isValidWithNowDate:
lastObject
minimumGapDuration
isCompleted
initWithDelegate:flipbook:presentation:osInterfaceProvider:
prepareAndRenderFrameSpecifier:
renderedFrames
bls_appendBoundedCollection:withName:maximumItems:itemBlock:
distantFuture
dateWithTimeIntervalSinceNow:
dateByAddingTimeInterval:
timeRemaining
initWithTimeIntervalSinceNow:
bls_loggingString
timeIntervalSinceNow
requestDatesOperation:environment:didProvideSpecifiers:forPresentationInterval:isComplete:
requestDatesOperation:didTimeoutPendingEnvironments:
renderFramesSession:didRenderSpecifier:timedOutEnvironments:
renderFramesSession:failedToRenderSpecifier:error:timedOutEnvironments:
inactiveEnvironmentSession:didUpdateToPresentation:
didEndInactiveEnvironmentSession:
systemSleepMonitor:sleepRequestedWithResult:
systemSleepMonitor:prepareForSleepWithCompletion:
systemSleepMonitorSleepRequestAborted:
systemSleepMonitorWillWakeFromSleep:
systemSleepMonitorDidWakeFromSleep:
alwaysFillFlipbook
setAlwaysFillFlipbook:
TB,N
isUsingPseudoFlipbook
setUsePseudoFlipbook:
usePseudoFlipbook
TB,N,GisUsingPseudoFlipbook
hostEnvironment:clientDidUpdateEnabled:
hostEnvironment:clientDidUpdateSupportsAlwaysOn:
hostEnvironment:invalidateContentForReason:
hostEnvironment:hostDidSetAlwaysOnEnabledForEnvironment:
hostEnvironment:hostDidSetLiveUpdating:
hostEnvironment:hostDidSetUnrestrictedFramerateUpdates:
engineState
inactiveSession
setInactiveSession:
startLiveUpdates
_osInterfaceProvider
_inactiveBudgetPolicy
_sleepMonitor
_flipbookSpecification
_lock_flipbook
_lock_presentationDatesModel
_lock_inactiveSession
_lock_requestDatesOperation
_lock_lastLiveSpecifier
_lock_lastRequestInterval
_lock_cachedFlipbookUpdates
_lock_renderingSpecifier
_lock_renderFlipbookSession
_lock_renderFlipbookSessionPowerAssertion
_lock_livePowerAssertion
_lock_timer
_lock_allowSleepBlock
_lock_renderingSpecifier_backoffTime
_lock_engineState
_lock_requestDatesOperationDidTimeout
_lock_alwaysFillFlipbook
_lock_usePseudoFlipbook
_lock_wantsToSleep
_lock_restrictedFramerate
Tq,R,N
T@"BLSHBacklightInactiveEnvironmentSession",&,N
addObject:
requestDateSpecifiersForDateInterval:previousPresentationDate:shouldReset:completion:
presentationInterval
previousPresentationDate
shouldReset
initWithDate:fidelity:
bs_compactMap:
requestPresentationDatesForDateInterval:previousPresentationDate:shouldReset:completion:
removeObject:
allObjects
isComplete
_lock_pendingEnvironments
_lock_timeoutTimer
_lock_delegate
_lock_begun
_complete
_requestInterval
T@"NSDateInterval",R,N,V_requestInterval
complete
TB,R,N,GisComplete,V_complete
array
willBeginRenderSession:
appendUnsignedInteger:withName:
copy
willEndRenderSession:
renderFrameSpecifier:timedOutEnvironments:
localizedDescription
renderFrameForPresentation:dateSpecifier:completion:
timeoutTimerFiredForSpecifier:
_flipbook
_presentation
_lock_preparingSpecifier
_lock_renderedFrames
T@"NSArray",R,N
mutableCopy
removeObjectAtIndex:
removeAllObjects
bls_isOnOrAfter:andOnOrBefore:
appendBool:withName:ifEqualTo:
initWithStartDate:updates:nextUpdatesStart:
dequeueAllUpdates
nextUpdatesStart
_startDate
_updates
_nextUpdatesStart
completed
TB,R,N,GisCompleted
T@"NSDate",R,N,V_nextUpdatesStart
initWithKeyOptions:valueOptions:capacity:
dateInterval
intersectionWithDateInterval:
expirationDate
endDate
compare:
missingIntervalForDateInterval:
bls_boundedDescriptionWithMax:
objectEnumerator
nextObject
createWithInitialSpecifier:enumerator:dateInterval:environment:sourceModel:
earlierDate:
laterDate:
distantPast
specifier
enumerator
validateAndChargeFutureSpecifier:nextSpecifier:forEnvironment:
setSpecifier:
fidelity
specifierWithPresentationDate:fidelity:environment:
timeIntervalSinceDate:
specifierWithPresentationDate:specifiers:
sourceModel
registerSpecifiers:forDateInterval:
clearAllSpecifiers
objectForKey:
initWithEnvironment:
setObject:forKey:
_environmentModels
_specifier
_enumerator
_dateInterval
_sourceModel
T@"BLSAlwaysOnDateSpecifier",&,N,V_specifier
T@"NSEnumerator",R,N,V_enumerator
T@"NSDateInterval",R,N,V_dateInterval
T@"BLSHEnvironmentDatesModel",R,N,V_sourceModel
appendObject:withName:skipIfNil:
type
isStarted
setStarted:
setCompleted:
Tq,R
started
TB,GisStarted
TB,GisCompleted
initWithTriggerEvent:withInitialSpecifier:
setUpdatedInitialState:
_started
_completed
_updatedInitialState
_triggerEvent
_initialSpecifier
T@"BLSBacklightChangeEvent",R,V_triggerEvent
T@"BLSHPresentationDateSpecifier",R,V_initialSpecifier
updatedInitialState
TB,GdidUpdateInitialState,V_updatedInitialState
TB,GisStarted,V_started
TB,GisCompleted,V_completed
initWithPresentation:
initWithOptions:capacity:
updater
inactiveEnvironmentSession:updateToPresentation:
differenceFromPresentation:forEachRemoval:forEachAddition:
sessionWithPresentation:
setUpdater:
setPresentation:
addEnvironmentsObserver:
removeEnvironmentsObserver:
updaterDidUpdateToPresentation:
sessionDidEnd
_observers
_environmentObservers
_updater
_ended
T@"<BLSHBacklightInactiveEnvironmentSessionUpdating>",&,N
T@"BLSHBacklightEnvironmentPresentation",&,N,V_presentation
presentationSource
isState:equalToObject:
stateHash:
stateDescription:
builder
appendInteger:
appendObject:
T@"BLSHBacklightEnvironmentPresentation",R
initWithDisplayModeSource:
setPresentationSource:
_displayModeSource
_presentationSource
T@"BLSHBacklightEnvironmentStateMachine",&,V_presentationSource
dictionary
containsObject:
enumerateKeysAndObjectsUsingBlock:
appendBodySectionWithName:openDelimiter:closeDelimiter:block:
firstObjectCommonWithArray:
descriptor
attributeOfClass:
attributesOfClasses:
raise:format:
allValues
canBePaused
indexesOfObjectsPassingTest:
objectsAtIndexes:
activateAttributes:fromAssertion:forService:
deactivateAttributes:fromAssertion:forService:
serviceDidPause
service:didPauseAssertion:
serviceDidResume
service:didResumeAssertion:
serviceWillCancel
service:willCancelAssertion:
nextCount
initWithClientPid:hostPid:count:
setIdentifier:
serviceFailedToAcquireWithError:
service:failedToAcquireAssertion:withError:
attributes
removeObjectsInArray:
serviceDidAcquire
service:didAcquireAssertion:
removeObjectForKey:
removeObjectsAtIndexes:
serviceDidCancelWithError:
service:didCancelAssertion:withError:
service:didRestartTimeoutTimerForAssertion:
acquireAssertion:
restartAssertionTimeoutTimer:
replaceWithService:
willCancelAssertion:
osInterfaceProvider
T@"<BLSHOSInterfaceProviding>",R,N
initWithOSInterfaceProvider:
registerAttributeHandler:forAttributeClasses:
_attributeHandlers
_activeAssertions
_pausedAssertions
_stateHandler
_rootWorkloop
_queue
T@"<BLSHOSInterfaceProviding>",R,N,V_osInterfaceProvider
allowedFidelityAtDate:expectedFidelity:
validateAndChargeFutureSpecifier:nextSpecifier:expectedFidelity:
chargeRenderedSpecifier:expectedFidelity:
performInvalidation
invalidateAtRequestDate:expectedFidelity:invalidationBlock:
stillTrackingAfterPurgingStaleDataForNowDate:
_secondsBudget
_minutesBudget
_lock_previousSecondsFutureSpecifier
_lock_exemptedSecondsFutureSpecifier
_lock_previousSecondsRenderedSpecifier
_lock_lastInvalidation
_lock_invalidationTimer
setAlwaysOnDisabledByAssertion:
initWithBudgetFactory:
enumerateDateSpecifiersUsingBlock:
budgetProcessIdentity
resetBudgetForProcess:reason:
allowedFidelityAtDate:forEnvironment:expectedFidelity:
_budgets
_budgetFactory
_nullBudget
mainDisplay
flipBookWithOptions:
setWantsTransform:
setInverted:
frameAtTime:
caContext
contextId
setContextId:
bls_machContinuousTime
renderForTime:options:userInfo:error:
cancel
purge
lastRenderedFrame
T@"<BLSHRenderedFlipbookFrame>",R,N
_wantsTransform
_inverted
userInfo
presentationTime
frameId
appendUInt64:withName:
T@"BLSHPresentationDateSpecifier",R,N
deactivateClient
differenceFromPresentation:
hasChanges
removals
object
insertions
bs_mapNoNulls:
bs_map:
dateSpecifierForEnvironment:
didCompleteUpdateToBacklightState:
environmentStateMachine:didUpdateToSpecifier:
didBeginUpdateToBacklightState:
completedOperation:
environmentStateMachine:didUpdateToPresentation:
environmentStateMachine:didBeginUpdateToState:
environmentStateMachine:didCompleteUpdateToState:
T@"<BLSHInactiveBudgetPolicing_Private>",R,N
initWithPresentation:backlightState:delegate:osInterface:inactiveBudgetPolicy:
performEvent:withInitialSpecifier:
updateEnvironment:
updateToSpecifier:
_osInterface
_transitionStates
_updatingTransitionStates
_updatingSpecifier
_backlightState
_previousBacklightState
_pendingNotifyBeganUpdatingState
_updatingState
_updatingPresentation
T@"BLSHBacklightEnvironmentPresentation",&,N
T@"<BLSHBacklightEnvironmentStateMachineDelegate>",R,W,N,V_delegate
T@"<BLSHInactiveBudgetPolicing_Private>",R,N,V_inactiveBudgetPolicy
appendInteger:withName:
initWithBacklightState:
Tq,R,N,V_backlightState
registerHandlerForService:
_entries
T@"BLSHLocalAssertionService",R,W,N,V_service
currentContext
remoteProcess
remoteTarget
initWithIdentifier:descriptor:remoteTarget:
acquireAssertionForDescriptor:error:
destroyAssertion:
initWithLocalService:
_localService
_assertionProxies
_valid
isAcquired
assertionAcquired:
assertion:failedToAcquireWithError:
assertionWillCancel:
assertionDidCancel:withError:
assertionPaused:
assertionResumed:
acquisitionState
acquired
TB,R,N,GisAcquired
T@"BLSAssertionDescriptor",R,N
T@"BLSAssertionIdentifier",&,N
_acquired
_identifier
_descriptor
_remoteTarget
T@"BLSAssertionIdentifier",&,N,V_identifier
T@"BLSAssertionDescriptor",R,N,V_descriptor
T@"<BLSXPCAssertionServiceClientInterface>",R,N,V_remoteTarget
TB,R,N,GisAcquired,V_acquired
sharedBacklightHost
null
entriesForCountingTarget:
_lock_entryDictionary
_countingDictionaryLock
initForAttribute:fromAssertion:forService:attributeHandler:
_attributeHandler
T@"BLSAttribute",R,W,N,V_attribute
duration
timerFired
_timer
T@"BLSDurationAttribute",R,W,N,V_attribute
restartTimer
backlightSceneHostEnvironment
initWithFBScene:
T@"BLSHBacklightFBSceneHostEnvironment",R
isAlwaysOnEnabled
isTransitioning
requestedActivityState
initWithEventID:state:previousState:changeRequest:
changeRequest
sourceEvent
backlightHost:willTransitionToState:forEvent:
performEvent:
timestamp
platformProvider:didChangeAlwaysOnSetting:
isAlwaysOnDisabledByAssertion
alwaysOnDisabledByAssertion
TB,N,GisAlwaysOnDisabledByAssertion
transitioning
TB,R,N,GisTransitioning
alwaysOnEnabled
TB,R,N,GisAlwaysOnEnabled
activeTransitionEvent
eventPerformer
_lock_transitioningEvent
_lock_activeOnAPAwakeAssertion
_lock_performEventAPAwakeAssertion
_lock_observers
_lock_nextEventID
_lock_alwaysOnEnabledResolved
_lock_alwaysOnEnabledByPlatform
_lock_alwaysOnDisabledByAssertion
_lock_notifyingObserversWillTransitionToState
_activeTransitionEvent
_eventPerformer
T@"BLSBacklightChangeEvent",R,N,V_activeTransitionEvent
T@"<BLSHBacklightStateMachineEventPerforming>",R,N,V_eventPerformer
setUnrestrictedFramerateUpdates:
activateForScene:
deactivateForScene:
setSecond:
autoupdatingCurrentCalendar
nextDateAfterDate:matchingComponents:options:
secondsFidelityThreshold
countSpecifier:hasSecondsBudget:
appendInt:withName:
isSecondsFidelity
timeIntervalFromLastEntryToDate:
isBeforeDate:
initWithFutureSpecifier:
initWithInvalidation:
addFutureSpecifier:hasSecondsBudget:
applyRenderedSpecifier:
addInvalidation:hasSecondsBudget:
resetFutureAndRenderedSpecifiers
validAtDate:
hasBeenRendered
containsInvalidation
_minuteBoundaryDate
_entryCount
_renderedEntryCount
_invalidatedEntryCount
_rendered
_containsInvalidation
secondsFidelity
TB,R,N,GisSecondsFidelity
rendered
TB,R,N,GhasBeenRendered,V_rendered
TB,R,N,V_containsInvalidation
animationCoalesceThreshold
copyWithZone:
_lastEntryInitialDate
_lastEntryFinalDate
_secondsFidelity
_count
Ti,R,N,V_count
TB,R,N,GisSecondsFidelity,V_secondsFidelity
initWithDisplayMode:
Tq,R,V_displayMode
initWithExplanation:delegate:provider:
scheduleWithTimeout:
isWatchdogEnabled
abortContext
fireWatchdogWithExplanation:delegate:timeout:elapsedTime:
clearWatchdogWithExplanation:timeout:elapsedTime:
setWatchdogEnabled:
_watchdogEnabled
watchdogEnabled
TB,GisWatchdogEnabled,V_watchdogEnabled
_explanation
_lock_timeout
_lock_watchdogStart
setIsHostProcess:
backlightPlatformProvider
serviceForService:withOSInterfaceProvider:
earlyInitialization
startServiceWithPlatformProvider:
sharedService
platformProvider
_assertionService
_backlightService
_defaultsObserver
T@"<BLSHServicePlatformProvider>",R,N,V_platformProvider
T@"BLSHLocalAssertionService",R,N
T@"<BLSHInactiveBudgetPolicing>",R,N,V_inactiveBudgetPolicy
initWithLocalAssertionService:
serverWithLocalAssertionService:
_localAssertionService
definition
clientIdentity
processIdentity
addActionHandler:forScene:
clientSettings
bls_hasDelegate
bls_isDelegateActive
bls_visualState
bls_presentationDate
bls_supportsAlwaysOn
bls_isBlanked
bls_isAlwaysOnEnabledForEnvironment
bls_setAlwaysOnEnabledForEnvironment:
updateSettingsWithBlock:
hostEnvironment:willBeForeground:newVisualState:newPresentationDate:amendWithVisualState:presentationDate:
bls_setVisualState:
bls_setRenderSeed:
bls_setPresentationDate:
bls_setBlanked:
bls_setDelegateActive:
invalidateContentForReason:
appendPointer:withName:
isClientActive
hasUnrestrictedFramerateUpdates
isDisplayBlanked
builderWithObject:ofExpectedClass:
appendObject:counterpart:
appendString:counterpart:
appendBool:counterpart:
isEqual
appendString:
appendBool:
adjustedLuminance
expectedFidelity
clientHandle
identity
initWithExplanation:processIdentity:duration:
acquireWithError:
error
initWithBacklightChangeEvent:animated:touchTargetable:completion:
arrayWithObject:
rampDuration
initWithCompletion:
specification
transitionContextClass
setWithArray:
setActions:
updateSettingsWithTransitionBlock:
dateSpecifiers
initWithDateInterval:previousPresentationDate:shouldReset:completion:
grantedFidelity
newVisualStateWithGrantedFidelity:
setWithObject:
inspectDiff:
clientSupportsAlwaysOn
clientDidRequestInvalidationForReason:
setAlwaysOnEnabledForEnvironment:
setLiveUpdating:
setDisplayBlanked:
T@"RBSProcessIdentity",R
TB,R
clientActive
TB,R,GisClientActive
T@"BLSBacklightSceneVisualState",R
T@"NSDate",R
alwaysOnEnabledForEnvironment
TB,GisAlwaysOnEnabledForEnvironment
liveUpdating
TB,GisLiveUpdating
unrestrictedFramerateUpdates
TB,GhasUnrestrictedFramerateUpdates
displayBlanked
TB,GisDisplayBlanked
amendSceneSettings:
_fbScene
_diffInspector
_nilSceneIdentifier
_lock_secondsFidelityAssertion
_lock_renderSessionAssertion
_budgetProcessIdentity
_renderSeed
_liveUpdating
_unrestrictedFramerateUpdates
TB,GisLiveUpdating,V_liveUpdating
TB,GhasUnrestrictedFramerateUpdates,V_unrestrictedFramerateUpdates
initWithCAContext:wantsTransform:inverted:
initWithPresentationEntries:flipbookContext:expirationDate:
initWithEnvironment:userObject:
initWithPresentationEntries:caContext:expirationDate:
appendArraySection:withName:skipIfEmpty:
appendString:withName:skipIfEmpty:
differenceFromArray:withOptions:
initWithEnvironments:caContext:expirationDate:
environments
containsEnvironment:
_presentationEntries
_flipbookContext
_expirationDate
T@"NSArray",R,C,N,V_presentationEntries
T@"NSArray",R,C,N
T@"CAContext",R,N
T@"BLSHFlipbookContext",R,N,V_flipbookContext
T@"NSDate",R,C,N,V_expirationDate
TB,R,GisLiveUpdating
TB,R,GhasUnrestrictedFramerateUpdates
userObject
setUserObject:
_userObject
T@,&,N,V_userObject
appendPointer:
appendPointer:counterpart:
_caContext
T@"CAContext",R,N,V_caContext
TB,R,N,V_wantsTransform
inverted
TB,R,N,GisInverted,V_inverted
explanation
clientPid
indexOfObjectWithOptions:passingTest:
objectAtIndex:
startDate
containsDate:
initWithStartDate:endDate:
specifierForDate:
intervalWithPresentationInterval:previousPresentationDate:shouldReset:environment:
addObjectsFromArray:
indexOfObject:inSortedRange:options:usingComparator:
removeObjectsInRange:
_specifiers
T@"<BLSHBacklightSceneHostEnvironment>",R,W,N,V_environment
T@"NSDateInterval",R,N
setFlipbookDisabled:
observeOtherSetting:withBlock:
inspectDiff:withContext:
respondToActions:forFBScene:
scene:didReceiveActions:
sceneDidDeactivate:withError:
removeActionHandler:forScene:
_actionHandlers
numberWithInteger:
taskState
targetWithPid:
setValues:
setStateDescriptor:
predicateMatchingTarget:
setPredicates:
setUpdateHandler:
monitorWithConfiguration:
didCompleteUpdateToState:forEvent:
numberWithBool:
didChangeAlwaysOnEnabled:
getBacklightState
beginObservation
endObservation
_observingClient
_processMonitor
_clientPid
_clientIsTaskScheduled
_stateIsStale
initWithSuiteName:
addHandlerForKey:attribute:
disableWatchdogs
disableFlipbook
transparentFlipbook
handlerForKey:attribute:
addObserver:forKeyPath:options:context:
invalidated
setInvalidated:
objectForKeyedSubscript:
boolValue
updateForNewValue:
observeValueForKeyPath:ofObject:change:context:
_observedDefaults
_handlers
TB,V_invalidated
initWithKey:attribute:
ignoreWhenBacklightInactivates
initWithExplanation:attributes:
acquireWithObserver:
_key
_lock_assertion
initWithDelegate:platformProvider:osInterfaceProvider:
osInterface
setDisplayMode:
touchLock
acquireWithExplanation:observer:attributes:
sessionProvider
createInactiveEnvironmentSession
initWithState:
initWithSpecifier:
onMain_performNextStepInTransition
displayState:didUpdateToMode:
displayState:didUpdateToBrightnessCurve:
isFlipbookDisabled
flipbookDisabled
TB,N,GisFlipbookDisabled
session
_environmentStateMachine
_alwaysOnPresentationEngine
_watchdogTimer
_touchLockAssertion
_stopEngineOnScreenSpecifier
_flipbookDisabled
_session
_displayStateMachine
T@"BLSHBacklightInactiveEnvironmentSession",R,N,V_session
T@"<BLSHBacklightPlatformProvider>",R,N,V_platformProvider
T@"BLSHBacklightOSInterfaceStateMachine",R,N
T@"BLSHBacklightDisplayStateMachine",R,N,V_displayStateMachine
framesPerSecond
_frameCapacity
_framesPerSecond
_minimumGapDuration
_coaelscingEpsilon
_minimumPrepareInterval
_maximumRenderInterval
Tq,R,N,V_frameCapacity
Td,R,N,V_framesPerSecond
Td,R,N,V_minimumGapDuration
Td,R,N,V_coaelscingEpsilon
Td,R,N,V_minimumPrepareInterval
Td,R,N,V_maximumRenderInterval
isAlwaysOnTransition
isSameRequestAsEvent:
alwaysOnTransition
TB,R,N,GisAlwaysOnTransition
animatedTransition
TB,R,N,GisAnimatedTransition
T@"BLSHPresentationDateSpecifier",R,V_specifier
initWithExpectedFidelity:grantedFidelity:adjustedLuminance:
initWithPresentationDate:fidelity:environment:
_dateSpecifier
T@"BLSAlwaysOnDateSpecifier",R,N,V_dateSpecifier
initWithPresentationDate:specifiers:
appendArraySection:withName:skipIfEmpty:objectTransformer:
enumerateObjectsUsingBlock:
isEqualToArray:
_presentationDate
T@"NSDate",R,N,V_presentationDate
T@"NSArray",R,N,V_specifiers
initWithPresentationInterval:previousPresentationDate:shouldReset:environment:
_shouldReset
_presentationInterval
_previousPresentationDate
T@"NSDateInterval",R,N,V_presentationInterval
T@"NSDate",R,N,V_previousPresentationDate
TB,R,N,V_shouldReset
setEventMask:
eventMask
associatedObject
isEqualToString:
shouldNotifyOfUnidle
setEventHandlerWithQueue:block:
_setIdleTimeout:shouldReset:
_setShouldNotifyOfUnidle:
_resume
_pause
_reset
_invalidate
numberWithDouble:
setAttentionLostTimeoutDictionary:
setConfiguration:shouldReset:error:
suspendWithError:
resumeWithError:
invalidateWithError:
T@"<BLSHUserIdleProvidingDelegate>",W,N
Td,R,N
attentionAwarenessClient
setAttentionAwarenessClient:
attentionAwarenessConfiguration
setAttentionAwarenessConfiguration:
attentionLostTimeoutDictionary
shouldNotifyOfUnidleChanged
setShouldNotifyOfUnidleChanged:
_shouldNotifyOfUnidle
_shouldNotifyOfUnidleChanged
_idleTimeout
_attentionAwarenessClient
_attentionAwarenessConfiguration
_attentionLostTimeoutDictionary
T@"AWAttentionAwarenessClient",&,N,V_attentionAwarenessClient
T@"AWAttentionAwarenessConfiguration",&,N,V_attentionAwarenessConfiguration
T@"NSMutableDictionary",&,N,V_attentionLostTimeoutDictionary
TB,N,V_shouldNotifyOfUnidleChanged
T@"<BLSHUserIdleProvidingDelegate>",W,N,V_delegate
Td,R,N,V_idleTimeout
TB,N,V_shouldNotifyOfUnidle
initWithProvider:delegate:
backlightFadeInDuration
backlightFadeOutDuration
osInterfaceStateMachine:didCompleteBrightnessRampToUseAlwaysOnCurve:
osInterfaceStateMachine:didCompleteBacklightFadeTo:
osInterfaceStateMachine:didCompleteBlankingWindowFadeTo:
lastSteadyStateDisplayMode
isTransitioningDisplayMode
brightnessCurve
setBrightnessCurve:withRampDuration:
setLastSteadyStateDisplayMode:
_backlightFadeInDuration
_backlightFadeOutDuration
T@"<BLSHBacklightDisplayStateMachineDelegate>",R,W,N,V_delegate
T@"BLSHBacklightOSInterfaceStateMachine",R,N,V_osInterface
Tq,N
Tq,N,V_lastSteadyStateDisplayMode
transitioningDisplayMode
TB,R,N,GisTransitioningDisplayMode
aggregateForProcessIdentity:
acquireAggregatedAssertion:error:
invalidateAggregatedAssertion:
targetWithProcessIdentity:
attributeWithDuration:warningDuration:startPolicy:endPolicy:
grant
grantUserInitiated
grantWithBackgroundPriority
initWithExplanation:target:attributes:
createRBSAssertion
_aggregate
_processIdentity
_duration
T@"RBSProcessIdentity",R,C,N,V_processIdentity
T@"NSString",R,C,N,V_explanation
Td,R,N,V_duration
aggregateForProcessIdentity:shouldCreate:
initWithProcessIdentity:
initWithDuration:
remainingDuration
purgeForProcessIdentity:
_lock_aggregated
_lock_rbsAssertion
_lock_acquiredAssertion
_lock_durationCalculator
_start
newSpecifierWithMaxFidelity:
enumerateObjectsWithOptions:usingBlock:
_lock_buckets
setToState:
Tq,V_displayMode
T@"BLSHBacklightEnvironmentPresentation",&,V_presentation
sceneIdentityTokenForEntry:
identityToken
reason
strongToWeakObjectsMapTable
_triggerTestWatchdog:
_testables
initWithService:osInterfaceProvider:
setDefaultService:
_server
T@"BLSHLocalAssertionService",R,N,V_localAssertionService
initWithPresentationTime:frameId:specifier:
_activeFrames
_nextframeID
_presentationTime
_frameId
_bls_specifier
TQ,R,N,V_presentationTime
TQ,R,N,V_frameId
T@"BLSHPresentationDateSpecifier",R,N,V_bls_specifier
isPerformingBrightnessRamp
isFadingBacklightFactor
isFadingBlankingWindow
_useAlwaysOnBrightnessCurve
_caFlipbookEnabled
_kernelAlwaysOnMode
performingBrightnessRamp
TB,R,N,GisPerformingBrightnessRamp
fadingBacklightFactor
TB,R,N,GisFadingBacklightFactor
fadingBlankingWindow
TB,R,N,GisFadingBlankingWindow
T@"<BLSHBacklightOSInterfaceProviding>",R,N,V_provider
T@"<BLSHBacklightOSInterfaceStateMachineDelegate>",R,W,N,V_delegate
TB,N,GisCABlanked,SsetCABlanked:,V_caBlanked
TB,N,GisCAFlipbookEnabled,SsetCAFlipbookEnabled:,V_caFlipbookEnabled
TB,N,GisKernelAlwaysOnMode,V_kernelAlwaysOnMode
onMain_setValue:withTransitionDuration:
transitionCompletedToValue:
_tolerance
_setter
_transitionCompleted
_transitionCompletionTime
_value
_transitioning
T@"BLSHBacklightEnvironmentPresentation",R,V_presentation
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
r^v16@0:8
I16@0:8
@60@0:8q16q24q32B40B44B48B52B56
v16@0:8
@72@0:8@16@24@32@40@48@56@64
@"BLSHBacklightAggregateState"
@"BLSHBacklightMutableTargetState"
@"BLSHPendingEventToPerform"
@"BLSHPendingUpdatePresentation"
@"BLSHPendingUpdateToSpecifier"
@"BLSHPendingUpdateDisplayMode"
@"BLSBacklightChangeEvent"
@48@0:8@16@24@32@40
@"BLSHBacklightStateMachine"
@"BLSHBacklightTransitionStateMachine"
@"BLSHXPCBacklightProxyHostServer"
@"BLSHWatchdogTester"
v20@0:8B16
@48@0:8@16d24d32@?40
@40@0:8@16@24d32
@32@0:8@16d24
@40@0:8@16d24@?32
v36@0:8B16d20@28
@32@0:8@16@?24
@"<BSTimerScheduleQuerying><BSCancellable><BSInvalidatable>"48@0:8@"NSString"16d24d32@?<v@?@"<BSTimerScheduleQuerying><BSCancellable><BSInvalidatable>">40
@"<BSInvalidatable>"40@0:8@"<BLSHWatchdogDelegate>"16@"NSString"24d32
@"<BSInvalidatable>"32@0:8@"NSString"16d24
@"<BSInvalidatable>"40@0:8@"NSString"16d24@?<v@?B@"NSError"@"<SWSystemActivityAcquisitionDetails>">32
v36@0:8B16d20@"NSArray"28
@"<BLSHFlipbook>"16@0:8
@"SWSystemSleepMonitor"16@0:8
@"<BSInvalidatable>"32@0:8@"NSString"16@?<v@?>24
v28@0:8B16d20
@24@0:8@16
v24@0:8@16
@"<BLSHBacklightPlatformProvider>"
@"BLSHWatchdogProvider"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v40@0:8@16q24@32
v28@0:8@16B24
v40@0:8@"<BLSBacklightStateObservable>"16q24@"BLSBacklightChangeEvent"32
v28@0:8@"<BLSBacklightStateObservable>"16B24
v24@0:8@"<BLSHUserIdleProviding>"16
@32@0:8@16@24
d16@0:8
v24@0:8d16
@"<BLSHUserIdleProviding>"
@"BLSBacklight"
@"<BLSHBacklightIdleProviderDelegate>"
q24@0:8@16
v28@0:8B16@20
[3B]
@"BLSHBacklightIdleProvider"
@"BLSAttribute"16@0:8
@"<BLSAssertionServiceResponding>"16@0:8
@"<BLSHAssertionAttributeHandlerService>"16@0:8
@48@0:8@"BLSAttribute"16@"<BLSAssertionServiceResponding>"24@"<BLSHAssertionAttributeHandlerService>"32@"<BLSHAssertionAttributeHandler>"40
v32@0:8@16@24
v40@0:8@16@24@32
v48@0:8@16@24@32@40
v24@0:8@"FBScene"16
v32@0:8@"FBScene"16@"NSError"24
v32@0:8@"FBScene"16@"FBSceneClientHandle"24
v32@0:8@"FBScene"16@"FBSceneUpdateContext"24
v40@0:8@"FBScene"16@"FBSceneUpdateContext"24@"NSError"32
v48@0:8@"FBScene"16@"FBSSceneClientSettingsDiff"24@"FBSSceneClientSettings"32@"FBSSceneTransitionContext"40
@"FBScene"
@"<BLSAssertionServiceResponding>"
@"<BLSHAssertionAttributeHandlerService>"
@"BLSPauseWhenSceneBackgroundAttribute"
B24@0:8q16
v52@0:8q16@24B32@36@?44
@"<BLSHEnvironmentTransitionStateDelegate>"
@"BLSBacklightSceneVisualState"
@"<BLSHBacklightSceneHostEnvironment>"
v40@0:8@"BSServiceConnectionListener"16@"BSServiceConnection<BSServiceConnectionHost>"24@"<BSXPCDecoding>"32
@"<BLSBacklightProxy>"
@"BSServiceConnectionListener"
@"NSObject<OS_dispatch_queue>"
v52@0:8@16@24@32@40B48
v52@0:8@"BLSHEngineRequestDatesOperation"16@"<BLSHBacklightSceneHostEnvironment>"24@"NSArray"32@"NSDateInterval"40B48
v32@0:8@"BLSHEngineRequestDatesOperation"16@"NSArray"24
v40@0:8@"BLSHEngineRenderFlipbookSession"16@"BLSHPresentationDateSpecifier"24@"NSArray"32
v48@0:8@"BLSHEngineRenderFlipbookSession"16@"BLSHPresentationDateSpecifier"24@"NSError"32@"NSArray"40
v32@0:8@"BLSHBacklightInactiveEnvironmentSession"16@"BLSHBacklightEnvironmentPresentation"24
v24@0:8@"BLSHBacklightInactiveEnvironmentSession"16
v32@0:8@16@?24
v32@0:8@"SWSystemSleepMonitor"16@?<@"SWPreventSystemSleepAssertion"@?B@"NSString">24
v32@0:8@"SWSystemSleepMonitor"16@?<v@?>24
v24@0:8@"SWSystemSleepMonitor"16
v28@0:8@"<BLSHBacklightSceneHostEnvironment>"16B24
v32@0:8@"<BLSHBacklightSceneHostEnvironment>"16@"NSString"24
@40@0:8@16@24@32
q16@0:8
@"<BLSHOSInterfaceProviding>"
@"<BLSHInactiveBudgetPolicing_Private>"
@"SWSystemSleepMonitor"
@"BLSHFlipbookSpecification"
@"<BLSHFlipbook>"
@"BLSHDateSpecifierModel"
@"BLSHBacklightInactiveEnvironmentSession"
@"BLSHEngineRequestDatesOperation"
@"BLSHPresentationDateSpecifier"
@"NSDateInterval"
@"BLSHPresentationUpdates"
@"BLSHEngineRenderFlipbookSession"
@"<BSInvalidatable>"
@"<BSTimerScheduleQuerying><BSInvalidatable>"
@"NSMutableSet"
@"<BSTimerScheduleQuerying><BSCancellable><BSInvalidatable>"
@"<BLSHEngineRequestDatesOperationDelegate>"
@"BLSHBacklightEnvironmentPresentation"
@"NSMutableArray"
@"<BLSHEngineRenderFlipbookSessionDelegate>"
@"NSDate"
B32@0:8@16@24
@88@0:8@16@24d32d40d48q56@64@72@?80
@"NSMapTable"
@56@0:8@16@24@32@40@48
@"BLSAlwaysOnDateSpecifier"
@"NSEnumerator"
@"BLSHEnvironmentDatesModel"
@"NSHashTable"
@"<BLSHBacklightInactiveEnvironmentSessionUpdating>"
Q24@0:8@16
@"BLSHBacklightEnvironmentPresentation"16@0:8
@"BLSHBacklightDisplayStateMachine"
@"BLSHBacklightEnvironmentStateMachine"
Vv24@0:8@16
Vv32@0:8@16@24
Vv24@0:8@"<BLSAssertionServiceResponding>"16
Vv32@0:8@"<BLSAssertionServiceResponding>"16@"NSError"24
v24@0:8@"<BLSAssertionService>"16
v24@0:8@"<BLSAssertionServiceResponding>"16
@"<BLSHOSInterfaceProviding>"16@0:8
@"NSMutableDictionary"
@"NSObject<OS_dispatch_workloop>"
q32@0:8@16q24
@40@0:8@16@24q32
v32@0:8@16q24
v40@0:8@16q24@?32
q32@0:8@"NSDate"16q24
@"BLSAlwaysOnDateSpecifier"40@0:8@"BLSAlwaysOnDateSpecifier"16@"BLSAlwaysOnDateSpecifier"24q32
v32@0:8@"BLSAlwaysOnDateSpecifier"16q24
v40@0:8@"NSDate"16q24@?<v@?>32
B24@0:8@"NSDate"16
@"BLSHInactiveProcessSecondsBudget"
@"BLSHInactiveProcessMinutesBudget"
@"<BLSHDisableAlwaysOnProvider>"
v32@0:8@"RBSProcessIdentity"16@"NSString"24
q40@0:8@16@24q32
v40@0:8@16@24@?32
q40@0:8@"NSDate"16@"<BLSHBacklightSceneHostEnvironment>"24q32
@"BLSAlwaysOnDateSpecifier"40@0:8@"BLSAlwaysOnDateSpecifier"16@"BLSAlwaysOnDateSpecifier"24@"<BLSHBacklightSceneHostEnvironment>"32
v24@0:8@"BLSHPresentationDateSpecifier"16
v40@0:8@"NSDate"16@"<BLSHBacklightSceneHostEnvironment>"24@?<v@?>32
v24@0:8@"NSDate"16
@24@0:8@?16
@"BLSHNullInactiveProcessBudget"
v40@0:8@"BLSHBacklightEnvironmentPresentation"16@"BLSHPresentationDateSpecifier"24@?<v@?@"<BLSHRenderedFlipbookFrame>"@"NSError">32
@"<BLSHRenderedFlipbookFrame>"16@0:8
@"NSArray"16@0:8
@"CAFlipBook"
@"BLSHPresentationDateSpecifier"16@0:8
v40@0:8@"BLSHEnvironmentTransitionState"16q24@"BLSBacklightSceneVisualState"32
v32@0:8@"BLSHEnvironmentTransitionState"16@"BLSAlwaysOnDateSpecifier"24
@"<BLSHInactiveBudgetPolicing_Private>"16@0:8
@56@0:8@16q24@32@40@48
@"BLSHBacklightOSInterfaceStateMachine"
@"<BLSHBacklightEnvironmentStateMachineDelegate>"
@24@0:8q16
@"<BLSHPseudoFlipbookProvider>"
v40@0:8@"NSArray"16@"<BLSAssertionServiceResponding>"24@"<BLSHAssertionAttributeHandlerService>"32
@"BLSHLocalAssertionService"
@32@0:8@16o^@24
@"BLSAssertionIdentifier"32@0:8@"BLSAssertionDescriptor"16o^@24
Vv24@0:8@"BLSAssertionIdentifier"16
Vv32@0:8@"BLSAssertionIdentifier"16@"NSError"24
@"<BLSAssertionService>"
@"BLSAssertionDescriptor"16@0:8
@"BLSAssertionIdentifier"16@0:8
v24@0:8@"BLSAssertionIdentifier"16
Vv24@0:8@"NSError"16
@"BLSAssertionIdentifier"
@"BLSAssertionDescriptor"
@"<BLSXPCAssertionServiceClientInterface>"
@"<BLSHTransparentFlipbookProvider>"
@"BLSHLocalCountingAssertionAttributeHandler"
@"BLSAttribute"
@"BLSDurationAttribute"
v28@0:8@"<BLSHBacklightPlatformProvider>"16B24
v24@0:8@"<BLSBacklightStateObserving>"16
@"NSError"24@0:8@"BLSBacklightChangeRequest"16
v24@0:8@"<BLSHBacklightHostObserving>"16
@"<BLSHBacklightStateMachineEventPerforming>"
d28@0:8@16B24
@"BLSHInactiveBudgetBucketEntryCount"
@24@0:8^{_NSZone=}16
B28@0:8@16B24
d24@0:8@16
i16@0:8
v48@0:8@16@24d32d40
v40@0:8@16d24d32
@"BSContinuousMachTimer"
@"NSString"
@"<BLSHWatchdogDelegate>"
@"BLSHAssertionService"
@"BLSHBacklightOSInterfaceProvider"
@"BLSHBacklightService"
@"BLSHDefaultsObserver"
@"<BLSHServicePlatformProvider>"
@"<BLSHInactiveBudgetPolicing>"
v72@0:8@16@24B32@36B44@?48@?56@?64
v44@0:8@16@24B32@?36
v24@0:8@"<BLSHBacklightSceneHostEnvironmentObserver>"16
v72@0:8@"BLSBacklightSceneVisualState"16@"NSDate"24B32@"BLSBacklightChangeEvent"36B44@?<v@?>48@?<v@?d>56@?<v@?>64
v44@0:8@"NSDateInterval"16@"NSDate"24B32@?<v@?@"NSArray">36
v32@0:8@"BLSAlwaysOnDateSpecifier"16@?<v@?>24
v24@0:8@"NSString"16
@"RBSProcessIdentity"16@0:8
@"BLSBacklightSceneVisualState"16@0:8
@"NSDate"16@0:8
v24@0:8@"<NSObject>"16
v32@0:8@"NSDate"16@?<v@?>24
@"BLSHBacklightSceneClientSettingsDiffInspector"
@"BLSHAggregatedProcessAssertion"
@"RBSProcessIdentity"
v40@0:8@16@?24@?32
@"NSArray"
@"BLSHFlipbookContext"
@32@0:8@16B24B28
@"CAContext"
@"<BLSHDisableFlipbookProvider>"
{?=b1b1}24@0:8@16
v32@0:8@"FBScene"16@"NSSet"24
v32@0:8@"<BLSSceneActionHandler>"16@"FBScene"24
@"NSNumber"16@0:8
@"<BLSXPCBacklightProxyClientInterface>"
@"RBSProcessMonitor"
v48@0:8@16@24@32^v40
@"NSUserDefaults"
@"BLSAssertion"
v32@0:8@"BLSHBacklightDisplayStateMachine"16q24
v32@0:8@"BLSHBacklightEnvironmentStateMachine"16q24
v32@0:8@"BLSHBacklightEnvironmentStateMachine"16@"BLSHBacklightEnvironmentPresentation"24
v32@0:8@"BLSHBacklightEnvironmentStateMachine"16@"BLSHPresentationDateSpecifier"24
v60@0:8@16B24@28@36@?44@?52
v60@0:8@"<BLSHBacklightSceneHostEnvironment>"16B24@"BLSBacklightSceneVisualState"28@"NSDate"36@?<v@?@"BLSBacklightSceneVisualState">44@?<v@?@"NSDate">52
@"<BLSHWatchdogAbortContext>"16@0:8
v24@0:8@"BLSBacklightChangeEvent"16
@"BLSHAlwaysOnPresentationEngine"
@64@0:8Q16d24d32d40d48d56
@40@0:8@16q24@32
v24@0:8@?16
@44@0:8@16@24B32@36
v28@0:8d16B24
@"<BLSHUserIdleProvidingDelegate>"16@0:8
v24@0:8@"<BLSHUserIdleProvidingDelegate>"16
@"<BLSHUserIdleProvidingDelegate>"
@"AWAttentionAwarenessClient"
@"AWAttentionAwarenessConfiguration"
@"<BLSHAlwaysFillFlipbookProvider>"
v28@0:8@"BLSHBacklightOSInterfaceStateMachine"16B24
v24@0:8q16
v32@0:8q16d24
@"<BLSHBacklightDisplayStateMachineDelegate>"
B24@0:8o^@16
@"BLSHAggregateProcessAssertion"
@28@0:8@16B24
B32@0:8@16o^@24
@"RBSAssertion"
@"BLSHDurationCalculator"
@24@0:8d16
@"NSSet"32@0:8@"NSSet"16@"FBScene"24
@"BLSHXPCAssertionServiceHostServer"
@40@0:8Q16Q24@32
@"BLSHBoolWithTimedTransition"
@"<BLSHBacklightOSInterfaceProviding>"
@"<BLSHBacklightOSInterfaceStateMachineDelegate>"
@"<NSObject>"
@"NSTimer"
