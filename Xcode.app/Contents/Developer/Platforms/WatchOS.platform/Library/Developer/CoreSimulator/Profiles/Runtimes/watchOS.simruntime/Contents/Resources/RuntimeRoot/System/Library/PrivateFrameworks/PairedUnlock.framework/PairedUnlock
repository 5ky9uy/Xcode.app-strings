kPURemoteDeviceState_Version
kPURemoteDeviceState_PasscodeSet
kPURemoteDeviceState_PasscodeLocked
kPURemoteDeviceState_UnlockOnly
kPURemoteDeviceState_WristDetectEnabled
version = %@, passcodeSet = %@, isUnlockOnly = %@, isPasscodeLocked = %@, wristDetectEnabled = %@
supportsSecureCoding
TB,R
version
TI,N,V_version
passcodeSet
TB,N,GhasPasscodeSet,V_passcodeSet
passcodeLocked
TB,N,GisPasscodeLocked,V_passcodeLocked
unlockOnly
TB,N,GisUnlockOnly,V_unlockOnly
wristDetectEnabled
TB,N,GisWristDetectEnabled,V_wristDetectEnabled
com.apple.pairedunlock
PasscodeCreate
PasscodeChange
PasscodeRemove
PairForUnlock
DisableWristDetection
EnableWristDetection
Cancel
com.apple.pairedunlock.removed-lockout
connection
delegate
%@-%@
com.apple.paired-unlock
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v8@?0
Unlock manager connection interrupted
Unlock manager connection INVALIDATED
PairedUnlock connection failed to check in, error = %@!
v16@?0@"NSError"8
v24@?0@"PURemoteDeviceState"8@"NSError"16
com.apple.nanosystemsettings
simple-passcode
remoteDeviceRemoveLockoutHandler
T@?,C,N,V_remoteDeviceRemoveLockoutHandler
T@"<PUConnectionDelegate>",W,V_delegate
T@"PUConnection",W,N,V_connection
com.apple.PairedUnlock
pairedunlock
connection requestDeviceSetWristDetectionDisabled: %@
zPLR
PURemoteDeviceState
NSSecureCoding
NSCoding
PUError
PUUnlockServer
NSObject
PUUnlockClient
PUConnection
PUConnectionUnlockClient
hash
hasPasscodeSet
isUnlockOnly
isPasscodeLocked
isWristDetectEnabled
numberWithUnsignedInt:
numberWithBool:
stringWithFormat:
init
decodeIntegerForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
isEqual:
description
version
setVersion:
setPasscodeSet:
setPasscodeLocked:
setUnlockOnly:
setWristDetectEnabled:
_passcodeSet
_passcodeLocked
_unlockOnly
_wristDetectEnabled
_version
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
errorWithCode:description:
queueNameWithSuffix:
initWithConnection:
initWithDelegate:
UTF8String
invalidate
dealloc
initWithMachServiceName:options:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
checkIn
pairForUnlockWithPasscode:
unpairForUnlock
enableOnlyRemoteUnlockWithPasscode:
disableOnlyRemoteUnlock
requestRemoteDeviceRemoteAction:type:
requestRemoteDeviceUnlockNotification
requestRemoteDeviceRemoveLockout
didCompleteRemoteAction:error:
queryRemoteDeviceState:
requestDeviceSetWristDetectionDisabled:completion:
interfaceWithProtocol:
setRemoteObjectInterface:
didPairForUnlock:error:
didUnpairForUnlock:error:
didEnableOnlyRemoteUnlock:error:
didDisableOnlyRemoteUnlock:error:
remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
remoteDeviceDidUnlock
remoteDeviceDidRemoveLockout:error:
didGetRemoteDeviceState:error:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
setServerConnection:
setInvalidationHandler:
resume
remoteObjectProxyWithErrorHandler:
serverConnection
remoteObjectProxy
copy
setRemoteDeviceRemoveLockoutHandler:
delegate
unlockConnection:didPairForUnlock:error:
delegateIfRespondsToSelector:
unlockConnection:didUnpairForUnlock:error:
unlockConnection:didEnableOnlyRemoteUnlock:error:
unlockConnection:didDisableOnlyRemoteUnlock:error:
unlockConnection:remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
unlockConnectionRemoteDeviceDidUnlock:
unlockConnection:remoteDeviceDidNotifyState:
remoteDeviceRemoveLockoutHandler
sharedConnection
unlockScreenTypeWithOutSimplePasscodeType:
isPasscodeSet
setWithObject:
synchronizeUserDefaultsDomain:keys:
syncPasscodeState
requestRemoteDeviceRemoveLockout:
getRemoteDeviceState:
.cxx_destruct
setDelegate:
_serverConnection
_serverConnectionQueue
_delegateQueue
_unlockClient
_delegate
_remoteDeviceRemoveLockoutHandler
connection
setConnection:
_connection
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B24@0:8@16
Q16@0:8
@16@0:8
I16@0:8
v20@0:8I16
v20@0:8B16
@32@0:8Q16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v16@0:8
v32@0:8q16q24
v28@0:8B16@20
v24@0:8@?16
v28@0:8B16@?20
v24@0:8@"NSString"16
v28@0:8B16@"NSError"20
v24@0:8@?<v@?@"PURemoteDeviceState"@"NSError">16
v28@0:8B16@?<v@?@"NSError">20
v36@0:8B16@20@28
v32@0:8@16@24
v36@0:8B16@"PURemoteDeviceState"20@"NSError"28
v32@0:8@"PURemoteDeviceState"16@"NSError"24
r*24@0:8@16
@?16@0:8
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"PUConnectionUnlockClient"
@"<PUConnectionDelegate>"
@"PUConnection"
