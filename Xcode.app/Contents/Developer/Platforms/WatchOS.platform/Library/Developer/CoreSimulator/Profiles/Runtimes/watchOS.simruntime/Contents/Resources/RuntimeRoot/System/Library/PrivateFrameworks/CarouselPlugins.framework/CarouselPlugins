unknown
v8@?0
com.apple.Carousel.CSLPIDuetSession
v32@?0@"NSArray"8@"NSArray"16^B24
CSLPIDockDidDockNotification
CSLPIDockDidUndockNotification
com.apple.Carousel.CSLPIPowerAssertionPriorityRootQueue
occluding
touchesDisabled
%@.systemSleepObserver
v16@?0@8
%@ sleepImminent:%u obs:
v16@?0@"<CSLPISystemSleepGlobalObserverObserver>"8
systemSleepGlobalObserver
v12@?0B8
%@ (%@) was not stopped before dealloc
(%@) canSleep
v16@?0@"CSLPIConnectionStateObserver"8
<%@: %@ %@ %@, int:%0.1fs leeway:%.1fs>
wallclock 
NoIdleSleepAssertion
clientChange
CSLPISharedWorkloop
v16@?0@"CSLPIWakeGestureMonitor"8
observers count
filteredObservers count
screenOffFilteredObservers count
observers
filteredObservers
screenOffFilteredObservers
Failed to call block: %@
CSLPIAssertionBlockTimeoutSentinel
v28@?0B8@"NSError"12@"NSString"20
CSLPIMedicalIDButtonPressed
CSLPIMedicalIDStayOnKey
AssertType
AssertName
TimeoutSeconds
TimeoutAction
TimeoutActionRelease
PowerAssertion_acquire
<CSLPIPowerAssertion %p name:'%@' type:%@ assertionID:%d isAsserted:%u>
isExecuting
isFinished
CSLPIScreenCoverChangedNotification
screenCovered
CSLPIBacklightWillTurnOn
CSLPIBacklightDidTurnOn
CSLPIBacklightWillTurnOff
CSLPIBacklightDidTurnOff
q24@?0@"CSLPIButtonHandlerOverrider"8@"CSLPIButtonHandlerOverrider"16
v32@?0@"CSLPIButtonHandlerOverrider"8Q16^B24
v32@?0@"<CSLPIButtonObserver>"8Q16^B24
B24@?0@"UIWindowScene"8@"NSDictionary"16
q24@?0@"UIWindow"8@"UIWindow"16
v32@?0@"UIWindow"8Q16^B24
<%@ : %p>
@"NSString"16@?0@8
success
FAILURE
@16@?0@"CSLPIFlipbookRenderedFrame"8
renderCancelled
en_US_POSIX
HH:mm:ss MM/dd
%@ (in %@)
screenOffAfterAlert
waitToEndAnimation
orientationSupported
nightstandEnabled
alertAndAnimate
willPerformVSH
options
stage
imageID
animationCompletionDate
iomfbPhase
v24@?0@"CSLPIChargingAlertOptions"8@?<v@?@"NSDate">16
v16@?0@"NSDate"8
nil viewController timeline
empty dates timeline
v16@?0@"NSArray"8
setDisabled
setEnabled
backgroundControl
bypassSessionRequirement
nil backlight assertion provider - assertion will fail to operate!!!
com.apple.ControlCenter
v116@?0B8{?=Q{?=Q{?=QQ}{?=QQ}B}{?=Q{?=QQ}{?=QQ}B}}12
%@ wake at %@ with %lds leeway
<%@: %@>
%llu (in %.3lfs)
machTime
cancelled
layout
render
%@ %p (%@ %p)
%@ %p
 (%@)
DebugFlipbookColorOverlay
DebugFlipbookLabelOverlay
flipbook
flipbookWake
flipbookTimer
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
AlwaysOn Offscreen Window
viewControllerChanged
v32@?0@"<NSObject>"8Q16@"NSDate"24
destroyFlipbookAndContext
destroyFlipbook
stateMachine
enabledState
client
debugFlipbookColorChanged
debugFlipbookLabelChanged
DEBUG
[%u/%u] %.2f%%
index:%u
%.3fs
%p request:%p frames complete callback timeout
canSleep called a second time without clearing the first one
com.apple.Carousel
flipbook deallocated
firstFrameRendered
 not
willDeactivate
com.apple.system.prefs
disableFlipbookCapacityWorkaround
CSLInternalSysdiagnoseDialog
** Metal crash detected **
** Metal crash detected ** == failed to get flipbook
FlipbookStateMachine
sleepState
operationsState
screenOn
enabled
active
firstFrameRenderedPending
allowSleepPending
deferredUntilPowerOnCount
model
operationsCount
operations
count
progress
screenOff
unblanked
alwaysOnDisabled
providerChanged
generationDisabled
willPowerOn
v24@?0Q8@"NSDate"16
invalidate flipbook
@"NSDate"24@?0Q8@"NSDate"16
contextChanged
timerFired
timeDiscontinuous(%@)
flipbook render minimal frames
Q8@?0
v28@?0B8@"CSLFlipbookRenderSession"12@"CSLFlipbookInvalidation"20
flipbook render to fill flipbook
v24@?0@"CSLFlipbookRenderSession"8@"CSLFlipbookInvalidation"16
lastRenderedPresentationEndDate
lastRenderedFrame
frame
hidden
v16@?0@"<CSLPIScrollCenterCoordinatedAnimator>"8
kCSLClockBecameVisibleNotification
kCSLControlCenterPresentedNotification
kCSLNotificationCenterPresentedNotification
timer[%p]: %@, %.2f-%.2f seconds
<%@:%p reason:%@:'%@' 2m:%d 3m:%d 4m:%d 5m:%d 6m:%d>
reason
reasonStr
frameCount
presentationDuration
partialMinuteCount
interval
layout_invalid
layout_wall
layout_process
layout_processUser
layout_thread
layout_threadUser
render_invalid
render_wall
render_process
render_processUser
render_thread
render_threadUser
Unknown
Invalidate
DisplayWake
ViewControllerChanged
FlipbookDisabled
FlipbookProviderChanged
TimeDiscontinuous
Dealloc
RenderCancelled
identifier
state
pendingCompletion
willNotSleep
systemWake
dealloc
renderedFrameCount
unrenderedSpecifierCount
onScreenFrame
lastPurgedOnScreenFrame
renderedFrames
presentation time
duration
unrenderedSpecifiers
@16@?0@"PUICAlwaysOnFrameSpecifier"8
time
B32@?0@"PUICAlwaysOnFrameSpecifier"8Q16^B24
@z@{
@ffffff
?ffffff
########## DBG_CODE: (%d)
system wake (%@)
sleep imminent (%@)
failed to start monitoring power
already monitoring power!
already stopped monitoring power!
%p duplicate kIOMessageSystem... (0x%X) received (may be <rdar://problem/58649759> Every AP wake, user space seems to get kIOMessageSystemWillPowerOn(0xE0000320) twice)
unexpected powerChangedMessage:%u notificationID:%p
__systemPowerCallback called on %@ after _isStopped=YES
%p:%@ attempting to schedule timer %.2f seconds into the future (too far)
scheduling %p:%@ %stimer at %@, leeway:%.1fs
canceling %p:%@ %stimer at %@, leeway:%.1fs
%p:%@ %stimer fired: scheduled %@, leeway:%.1fs
rescheduling %p:%@ timer at %@, leeway:%.1fs, was scheduled at %@
defering sleep: %p:%@ at %@, leeway:%.1fs
Not deferring sleep with fire imminent for %p:%@ because leeway is too big: %.1fs
Change Screen Wake Client
%p Changing backlight client from %{public}@ to %{public}@, active:%{BOOL}u screenOn:%{BOOL}u alwaysOnEnabled:%{BOOL}u
%p client changed ->%p, handle backlight request isOn:%{BOOL}u complete
%p handleBacklightRequest:%{public}@ animated:%{BOOL}d flags:0x%x
%p completed handleBacklightRequest:%{public}@ animated:%{BOOL}d flags:0x%x
%p Animation completed handleBacklightRequest:%{public}@ animated:%{BOOL}d flags:0x%x
%p started handleBacklightRequest:%{public}@ animated::%{BOOL}d flags:0x%x
updated observers now hasUnfilteredObservers:%d withScreenOff:%d
addObserver:%@ observeFilteredGestures:NO includingWhenScreenOff:YES is invalid, observeFilteredGestures must be YES if includingWhenScreenOff is YES
addObserver:%@ observeFilteredGestures:%d includingWhenScreenOff:%d
removeObserver:%@
wakeGestureRecognized:%d, notifying %d observers
Error (%ld) creating power assertion {name=%@; type=%@}
%@ %@ handled by %{public}@ (firstResponder = %{public}@; keyWindow = %{public}@)
%@ %@ NOT handled (firstResponder = %{public}@; keyWindow = %{public}@)
%@ %@ NOT handled (firstResponder = %{public}@; keyWindow = %{public}@); %@; checked:%@
nil key window, using main window: %@
WORKAROUND: nil firstResponder, attempted to set to %@ (%@)
%@: nil firstResponder, nil rootViewController
nil responder, using %@
Crown tapped
Button tapped
Chord tapped
Crown held
Button held
Chord held
Crown long-held
Button long-held
Chord long-held
Crown double-tapped
Button double-tapped
Chord double-tapped
Crown held and released
Button held and released
Chord held and released
Crown down
Button down
Rotate to wake scroll up
Rotate to wake scroll down
%@ handled %@ %@
%p renderID:%llu did render (%d) frames: %@
%p renderID:%llu render start:%@ after render end:%@ firstFrame:%@
there can be only one! (ChargingCoordinator): %@ will not be added, already have %@
presentChargingAlert:%@
CSLPIChargingCoordinatorBlockDelegate alloc (old SPI)
%p rounded up end:%{public}@ to end:%{public}@
%p renderID:%llu will not add unrendered specifiers at:%@, interval too small:%@
%p renderID:%llu generate specifiers interval:%{public}@ previous:%{public}@
%p renderID:%llu no timelines for interval:%@ provider:%@ will substitute emptyTimeline
%@ renderID:%llu no unrendered frames in model, nothing to render
%@ renderID:%llu will render:%@
%p renderID:%llu wasCancelled (after render start) : %@
scheduling system wake: %@
canceling system wake: %@
flipbook:%p created with frameCapacity:%d viewController:%p context:%p viewHeirarchy:%{public}@
%p destroying flipbook:%p isActiveProvider:%{BOOL}u isActive:%{BOOL}u renderedFrameCount:%u
%p timer fired at date:%{public}@ scheduledDate:%{public}@
%p showing debug color overlay
%p hiding debug color overlay
%p showing debug label overlay
%p hiding debug label overlay
%p willBecomeInactiveProvider called after canSleep, %{public}@
%p becoming inactive provider, didSetActive:NO : statemachine active:%{BOOL}u renderedFrameCount:%u)
%p didChangeActiveProvider:YES called after canSleep, %{public}@
%p old frames complete callback not called yet, combining, isActiveProvider:%{BOOL}u isActive:%{BOOL}u renderedFrameCount:%u
%p set framesCompleteCallback:%p
%p willPowerOn
%p canSleep called a second time without clearing the first one, stateMachine:%{public}@ timer:%{public}@
%p canSleep? stateMachine:%{public}@ timer:%{public}@
%p willNotSleep
%p abort sleep tasks
%p alwaysOnViewController returned from %@:%p was nil, this violates the contract
%p flipbook viewController updated:%p from:%p
alwaysOnViewController is nil, must be initialized sooner
asked to render nil frame specifier
%p failed to render:%{public}@ error:%{public}@
%p did render:%{public}@ for caMediaTime:%lf
%p cancelling all CA frames for reason:(%u:%{public}@) statemachine:%{public}@
%p inactive provider, not cancelling frames for reason:(%u:%{public}@) statemachine:%{public}@
%p schedule timer with date:%{public}@
%p (%@) will%s call framesCompleteCallback:%p
%p canSleep:YES stateMachine:%{public}@ timer:%{public}@
%p allowSleep invoked when not pending stateMachine:%{public}@ timer:%{public}@
%p canSleep:NO stateMachine:%{public}@ timer:%{public}@
%p will activate stateMachine:%{public}@ timer:%{public}@
%p will deactivate stateMachine:%{public}@ timer:%{public}@ (invalidation should follow)
workaround for <rdar://problem/49047367> - increasing flipbook capacity by one
failed to get flipbook
%p first frame rendered wasPending:%{BOOL}u
%p allowing sleep, setting state to sleeping
%p will not schedule timer, fireDate=%{public}@ now:%{public}@
%p flipbook invalidation (%d:%{public}@) after willSleep, will defer until wake and schedule immediate wake
%p flipbook invalidation (%d:%{public}@)
%p flipbook invalidation (%u:%{public}@) at:%{public}@, not discontinuous, will start interval at:%{public}@, frame:%{public}@
%p flipbook invalidation (%d:%{public}@) but disabled, will not render wasFirstFrameRenderedPending:%{BOOL}u
%p renderID:%llu marking render now pending previousRenderID:%llu
%p renderID:%llu does not match this renderID:%llu (will not begin this render)
%p renderID:%llu matches, but operations state is not pendingRender
%p renderID:%llu created new model:%p for context:%p
%p renderID:%llu render scheduling complete
%p renderID:%llu disabled but first frame rendered is still pending
%p renderID:%llu fetched context:%p but not enabled, will not render
%p flipbook timer fired at:%{public}@, after willSleep, will defer until wake and schedule immediate wake
%p flipbook timer fired at:%{public}@, shouldFillFlipbook:%{BOOL}u
%p flipbook %{public}@ at:%{public}@, not within presentation interval: will invalidate, frame:%{public}@
%u pending deferred blocks - state machine appears to be stuck in sleep state
%p updateEnabledState (%u:%{public}@) after willSleep, will defer until wake and schedule immediate wake
%p updateEnabledState (%u:%{public}@) enabledState:%u->%u sleepState=%u operationState=%u->%u needOperation=%{BOOL}u enabledChanged=%{BOOL}u
%p was idle but render pending, so reporting first frame rendered model:%{public}@
%p performing deferred actions(%u)
%p updateSleepState enabledState=%u sleepState=%u->%u operationState=%u
%p renderID:%llu will renderMinimalFrames at:%{public}@ modelUnrenderedCount:%u modelRenderedCount:%u shouldConstructStartSpecifier:%{BOOL}u previousSpecifier:%{public}@ lastRenderedFrame:%{public}@
%p renderID:%llu did renderMinimalFrames 
cancelled:%{BOOL}u count:%u 
layout:{%{public}@} 
render:{%{public}@} 
invalidated:%u modelUnrenderedCount:%u modelRenderedCount:%u 
lastRenderedFrame:%{public}@
%p renderID:%llu no more frames needed, flipbook full: %{public}@
%p renderID:%llu no more frames needed, flipbook already has %.2fs rendered: %{public}@
%p renderID:%llu will renderToFillFlipbook at:%{public}@ modelUnrenderedCount:%u modelRenderedCount:%u shouldConstructStartSpecifier:%{BOOL}u previousSpecifier:%{public}@ lastRenderedFrame:%{public}@
%p renderID:%llu did renderToFillFlipbook 
cancelled:%{BOOL}u count:%u 
layout:%{public}@ 
render:%{public}@ 
invalidated:%u modelUnrenderedCount:%u modelRenderedCount:%u isAllowSleepPending:%{BOOL}u 
lastRenderedFrame:%{public}@
%p renderID:%llu first frame was cancelled, ignoring render
%p %{public}s nil, will schedule timer to fire in 1 second fireTime:%{public}@
%p will not schedule timer, disabled
%p renderID:%llu will add %u operations
%p renderID:%llu will remove (1 of %u) operation: %{public}@
%p renderID:%llu will enqueue %u operations ->state:%u
%p renderID:%llu will cancel %u operations
Client didUpdateRevealPercent
%@ renderID:%llu will attempt to render %u frames
%p renderID:%llu first frame rendered wasCancelled:%{BOOL}u
%p renderID:%llu no first frame completion block, will not notify
%p system activity assertion not reliquished before dealloc; id:%@ state:%u
%p system activity assertion reliquished twice; id:%@ state:%u
%p system activity assertion reliquished; id:%@ state:%u hadUncalledCompletion:%{BOOL}u
%p system activity assertion timed out: %@
%p delloc called without first removing all specifiers: %{public}@
%p addUnrenderedSpecifiers:%{public}@ atDate:%{public}@
%p reducing addUnrenderedSpecifiers:%{public}@ atDate:%{public}@
%p cancelled render will be remembered as last purged frame: %{public}@
%p %{public}@, will forget on screen frame:%{public}@
%p invalidating frames reason:%u:%{public}@ total:%d >2m:%d >3m:%d >4m:%d >5m:%d 
replaced:%{public}@ 
undisplayed(%u):%{public}@...
CSLPIMinorDetentAssertion
CSLPIDuetSession
CSLPIDock
CSLPISystemStateNavigationController
CSLSButtonHandling
NSObject
CSLSOccluding
CSLPITimerProvider
CSLSTimerProviding
CSLPIStatusServer
CSLPIConnectionStateObserver
CSLPISystemSleepGlobalObserver
CSLPISystemSleepObserverDelegate
CSLPISystemSleepObserver
CSLPISystemSleepGlobalObserverObserver
CarouselPlugins
CSLPIRecursivePreventSleepAssertion
CSLPIScreenCaptureProvider
CUISScreenCaptureProviding
CSLPIStartupService
CSLPIConnectionStateServer
CSLPISuspendSystemGestureAssertion
CSLPITimer
CSLSTimer
CSLPIMultiClientScreenWakeProvider
CSLPIScreenWakeProviderWithClient
CSLSScreenWakeProvider
CSLPIScreenWakeSimpleStateProvider
CSLPIScreenWakeProviderStateProvider
CSLPISharedWorkloop
CSLPIWakeGestureMonitor
BSDescriptionProviding
CSLPIAssertionBlockSentinelBase
CSLPIAssertionBlockSentinel
CSLPIAssertionBlockHandlerSentinel
CSLPIAssertionBlockTimeoutSentinel
CSLPIScreenCapture
CSLPISoftWakeScheduler
CSLPISoftWakeSchedulerProtocol
CSLPIMedicalID
CSLPITimedPowerAssertion
CSLPIPowerAssertion
BSInvalidatable
CSLPIAsyncOperation
CSLPIBacklight
CSLPIButtonHandlerOverrider
CSLPIButtonHandler
CSLPIFlipbookRenderFramesOperation
CSLPIDidRenderFrameDelegate
CSLPIChargingAlertOptions
CSLPIChargingPresentation
Internal
CSLPIChargingCoordinating
CSLPIChargingCoordinatorBlockDelegate
CSLPIChargingCoordinatorDelegate
CSLPIChargingCoordinator
CSLPIChargingPresentationDelegate
CSLPIFlipbookGeneratePrerenderedSpecifiersOperation
CSLPIDetentManager
CSLPIBacklightAssertion
CSLPIFlipbookRenderOneFrameOperation
CSLPIScheduledSystemWake
CSLPIFlipbookRenderedFrame
NSCopying
CSLPIFlipbookProvider
CSLPIMultiClientScreenWakeProviderDelegate
CSLPIRootScreenWakeProviderWithClient
CSLPIRootScreenWakeProvider
CSLSFlipbookProviderModel
CSLPIFlipbookStateMachine
CSLPIFlipbookProviderDelegate
CSLPIFlipbook
CSLPISensorActivityIndicator
CSLPISensorActivityIndicatorState
CSLPILogoAssertion
CSLPIScrollCenterAnimationCoordinator
CSLPIScrollCenterCoordinatedAnimator
CSLPIDispatchTimer
CSLFlipbookInvalidation
NSSecureCoding
NSCoding
CSLFlipbookRenderSession
CSLPIFlipbookPrepareToRenderFramesOperation
CSLPISystemActivityAssertion
CSLPIFlipbookModel
init
detentProvider
takeMinorDetentAssertion:
initWithReason:
dealloc
reason
setReason:
.cxx_destruct
_reason
_wrappedAssertion
T@"NSString",&,N,V_reason
copy
_setFocusedBundleIDs:forClient:
addObjectsFromArray:
enumerateKeysAndObjectsUsingBlock:
clientDictionary
setObject:forKeyedSubscript:
removeObjectForKey:
carouselDuetSession
setFocusedBundleIDs:forClient:
_allFocusedBundleIDs
queue
setQueue:
setClientDictionary:
_queue
_clientDictionary
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSMutableDictionary",&,N,V_clientDictionary
isDocked
createDockStatusViewController
setProvider:
provider
initWithRootViewController:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
isEqualToString:
valueForKey:
boolValue
setOccluding:
setTouchesDisabled:
handleButton:eventType:
shouldAlertManagerPreHandleButtonEventType:
wantsWheelEvents
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
isOccluding
areTouchesDisabled
occluding
TB,R,N,GisOccluding
touchesDisabled
TB,R,N,GareTouchesDisabled
TB,R,N
observeValueForKeyPath:ofObject:change:context:
_rootViewController
_occluding
_touchesDisabled
TB,N,GisOccluding,V_occluding
TB,N,GareTouchesDisabled,V_touchesDisabled
initWithFireInterval:leewayInterval:shouldWakeDevice:serviceIdentifier:queue:handler:
scheduledTimerWithFireInterval:leewayInterval:serviceIdentifier:queue:handler:
sharedInstance
addObserver:
removeObserver:
_withLock:
state
setState:
observeStateWithBlock:
stateChangedBlock
_lock
_state
_stateChangedBlock
T@?,R,N,V_stateChangedBlock
T@"CSLSConnectionState",&,N,V_state
mainBundle
bundleIdentifier
stringWithFormat:
initWithServiceName:
_startObserving
_stopObserving
array
addObject:
enumerateObserversWithBlock:
isSleepImminent
componentsJoinedByString:
_observeWithAction:completion:
canSleep
sleepImminent
willNotSleep
systemWake
abortSleepTasks
initForGlobalObserver:withQueue:identifier:delegate:
stop
setAttemptingToSleep:
setSleepImminent:
systemSleepObserverWillPowerOn:
systemSleepObserverHasPoweredOn:
systemSleepObserver:canSleep:
systemSleepObserver:willSleepWithCompletion:
systemSleepObserverWillNotSleep:
systemSleepObserverAbortSleepTasks:
abortAllSleepTasks
isAttemptingToSleep
_systemSleepObserver
_observerStore
_attemptingToSleep
_sleepImminent
attemptingToSleep
TB,GisAttemptingToSleep,V_attemptingToSleep
TB,GisSleepImminent,V_sleepImminent
_startPowerMonitoring
raise:format:
_stopPowerMonitoring
initWithMessage:
setCalled:
initWithQueue:identifier:delegate:
_systemPowerChanged:notificationID:
_identifier
_delegate
_systemPowerConnection
_systemPowerPort
_systemPowerNotifier
_isStopped
_isGlobalObserver
_previousMessage
imageAsset
CSL_nonAssetCatalogCGImage
imageWithCGImage:
CGImage
CSL_nonAssetCatalogImage
initWithIdentifier:description:timeout:
releaseAssertion
isAsserted
takeAssertion
_description
_timeout
_count
asserted
TB,R,N,GisAsserted
generateCapture
image
generateScreenImage
sharedStartupService
isLaunchCompleted
markLaunchCompleted
isStartupCompleted
markStartupCompleted
_launchCompleted
_startupCompleted
launchCompleted
TB,R,N,GisLaunchCompleted
startupCompleted
TB,R,N,GisStartupCompleted
delegate
serverGetState:
notifyObserversOfUpdateToState:
setDelegate:
_observers
T@"<CSLPIConnectionStateServerDelegate>",W,N,V_delegate
ignoresForegroundStatus
TB,D,N
initWithFireInterval:leewayInterval:serviceIdentifier:queue:handler:
schedule
initWithIdentifier:leeway:
_fireTimer
cancel
_calculatedWallClockFireTime
scheduleInSeconds:
_scheduleWithFireTime:wallClockFireTime:rawScheduleTime:rawScheduleDelta:
timeIntervalSinceReferenceDate
timeIntervalSince1970
isScheduled
cancelWake
scheduleWithFireTime:
_relinquishPowerAssertion
_scheduleWake
_unschedule
_manuallyFireTimer
_rawTimeIntervalRemaining
_rawTimeRemaining
scheduleWake:
_rescheduleAfterSystemWake
initWithAssertionType:assertionName:
take
relinquish
_takePowerAssertion
fireImmediately
fireInterval
leewayInterval
Td,R,N
scheduled
TB,R,N,GisScheduled
scheduleWithDate:
timeRemaining
setFireInterval:
setLeewayInterval:
setScheduled:
shouldWakeDevice
serviceIdentifier
setServiceIdentifier:
handler
setHandler:
_dispatchTimer
_schedulingMutex
_scheduledWake
_powerAssertion
_wallClockFireTime
_rawScheduleTime
_rawScheduleDelta
_scheduledWithWallTime
_scheduled
_shouldWakeDevice
_fireInterval
_leewayInterval
_serviceIdentifier
_handler
Td,N,V_fireInterval
Td,N,V_leewayInterval
TB,R,N,V_shouldWakeDevice
T@"NSString",C,N,V_serviceIdentifier
T@?,C,N,V_handler
TB,N,GisScheduled,V_scheduled
setFlipbookProviderModel:
isActive
isScreenOn
isAlwaysOnEnabled
handleAOTEnabled:
didChangeActiveProvider:completion:
willBecomeInactiveProvider:
clientDidChange:
initIsOnOperation:identifier:source:hasPosition:position:direction:timestamp:
isOnOperation
handleBacklightRequest:animated:flags:brightnessRamp:completion:
client
handleScreenBlanked
setBlanked:
handleScreenUnblanked
willBeOn
setScreenOn:
setWillBeOn:
clientCompletedHandlingBacklightRequest:animated:flags:completion:
clientStartedHandlingBacklightRequest:animated:flags:
setClient:
T@"<CSLSAOTModeProvider>",&,N
initWithDelegate:initialClient:stateProvider:flipbookProviderModel:backlightProxy:
_client
_stateProvider
_flipbookProviderModel
_backlightProxy
screenOn
TB,R,N,GisScreenOn
active
TB,R,N,GisActive
alwaysOnEnabled
TB,R,N,GisAlwaysOnEnabled
setActive:
setAlwaysOnEnabled:
_screenOn
_active
_alwaysOnEnabled
TB,N,GisScreenOn
TB,N,GisActive
TB,N,GisAlwaysOnEnabled
workloop
dispatchWithQOSClass:block:
serialQueueWithQOSClass:label:
initWithOptions:capacity:
_withObserversMutex_hasUnfilteredObservers
_withObserversMutex_hasUnfilteredObserversWhenScreenOff
wakeGestureMonitor:nowHasUnfilteredObservers:includingWhenScreenOff:
addObserver:observeFilteredGestures:includingWhenScreenOff:
removeObject:
_updateObserversWithBlockWhileHoldingMutexLock:
count
willChangeBacklight
allObjects
backlightWasOn
gestureType
countByEnumeratingWithState:objects:count:
wakeGestureRecognized:
succinctDescription
descriptionWithMultilinePrefix:
succinctDescriptionBuilder
build
builderWithObject:
appendUnsignedInteger:withName:
descriptionBuilderWithMultilinePrefix:
appendArraySection:withName:skipIfEmpty:
addObserver:observeFilteredGestures:
hasUnfilteredObservers
hasUnfilteredObserversWhenScreenOff
_screenOffFilteredObservers
_filteredObservers
_observersMutex
mainScreen
scale
_imageOrientation
initWithCGImage:scale:orientation:
atomicTestAndSetCalled:
isCalled
_called
called
TB,N,GisCalled,V_called
message
setMessage:
_message
T@"NSString",C,N,V_message
initWithHandler:
initWithHandler:timeout:
timeout
_timer
_timerQueue
Td,R,N,V_timeout
initWithScreen:
snapshotViewAfterScreenUpdates:
createIOSurfaceFromScreen:
view
_screen
_view
_image
T@"UIImage",R,N
T@"UIView",R,N
scheduleSoftWake:
cancelSoftWake
sharedScheduler
initWithAssertionType:assertionName:timeout:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
_assertionID
_assertionType
_assertionName
globalPowerAssertionSerialQueue
invalidate
_assertionQueue
isCancelled
complete
willChangeValueForKey:
didChangeValueForKey:
isAsynchronous
checkStart
isFinished
isExecuting
_finished
_executing
backlightProviderIsScreenOn
backlightProviderWillScreenBeOn
backlightProviderIsScreenBlanked
onForIdentifier:reason:isUserInitiated:pid:timestamp:
offForIdentifier:reason:isUserInitiated:pid:timestamp:
invalidateAllFramesForReason:
screenBlanked
onForIdentifier:reason:isUserInitiated:
offForIdentifier:reason:isUserInitiated:
setOverride:
setPriority:
overriderWithOverride:andPriority:
priority
override
_priority
_override
Td,N,V_priority
T@"<CSLPIButtonHandlerOverride>",W,N,V_override
indexOfObject:inSortedRange:options:usingComparator:
insertObject:atIndex:
enumerateObjectsUsingBlock:
removeObjectAtIndex:
_buttonObservers
activityForButtonMask:event:
buttonWillPost:eventType:firstDownTime:lastUpTime:
reverseObjectEnumerator
preHandleButton:eventType:firstDownTime:lastUpTime:
keyWindow
_firstResponderForWindow:
walkResponderChainToHandleButton:eventType:firstDownTime:lastUpTime:handlersChecked:
windowScene
session
role
connectedScenes
predicateWithBlock:
filteredSetUsingPredicate:
anyObject
windows
windowLevel
compare:
sortedArrayUsingComparator:
isKeyWindow
_canBecomeKeyWindow
isHidden
enumerateObjectsWithOptions:usingBlock:
postHandleButton:eventType:firstDownTime:lastUpTime:
uiStateDescription
mainWindow
firstResponder
rootViewController
becomeFirstResponder
addButtonHandlerOverride:withPriority:
removeButtonHandlerOverride:
addButtonObserver:
removeButtonObserver:
postCSLButton:eventType:firstDownTime:lastUpTime:
handleButton:eventType:firstDownTime:lastUpTime:
nextResponder
specifier
presentationInterval
loggingStringForPresentationInterval:
bs_map:
components:fromDate:
second
nanosecond
dateByAddingUnit:value:toDate:options:
component:fromDate:
minute
firstObject
distantFuture
distantPast
calendarWithIdentifier:
startDate
earlierDate:
endDate
laterDate:
layoutProfile
renderingProfile
wasCancelled
machContinuousTime
initWithStartDate:endDate:
initWithPresentationInterval:frameCount:partialMinuteCount:layoutProfile:renderingProfile:
initWithReason:reasonStr:totalCount:moreThan2MinCount:moreThan3MinCount:moreThan4MinCount:moreThan5MinCount:
didRenderFrame:
initWithRenderID:
main
renderedFrameCount
generateTelemetryReportAtMachContinuousTime:completion:
_renderedFrames
_renderID
TQ,R,N
dateWithTimeIntervalSinceReferenceDate:
initWithLocaleIdentifier:
setLocale:
setDateFormat:
setUnitsStyle:
setAllowedUnits:
stringFromDate:
date
stringFromDate:toDate:
_buildDescriptionWithBuilder:
appendBool:withName:
initWithScreenOffAfterAlert:waitToEndAnimation:orientationSupported:nightstandEnabled:alertAndAnimate:willPerformVSH:
screenOffAfterAlert
waitToEndAnimation
orientationSupported
nightstandEnabled
alertAndAnimate
willPerformVSH
_screenOffAfterAlert
_waitToEndAnimation
_orientationSupported
_nightstandEnabled
_alertAndAnimate
_willPerformVSH
TB,R,N,V_screenOffAfterAlert
TB,R,N,V_waitToEndAnimation
TB,R,N,V_orientationSupported
TB,R,N,V_nightstandEnabled
TB,R,N,V_alertAndAnimate
TB,R,N,V_willPerformVSH
appendObject:withName:
appendUnsignedInt:withName:
appendObject:withName:skipIfNil:
chargingPresentation:didAdvanceToStage:
initWithOptions:
animationStartedWithCompletionDate:
showingBlack
animatingFromBlackToStaticImage
showingStaticImage:
animatingAfterStaticImage
finishingAnimation
dismissed
stage
options
imageID
animationCompletionDate
iomfbPhase
setIomfbPhase:
_imageID
_iomfbPhase
_stage
_options
_animationCompletionDate
T@"<CSLPIChargingPresentationDelegate>",W,N,V_delegate
Ti,N,V_iomfbPhase
TQ,R,N,V_stage
T@"CSLPIChargingAlertOptions",R,N,V_options
TI,R,N,V_imageID
T@"NSDate",R,N,V_animationCompletionDate
_withClassLock:
isRunningInStoreDemoMode
setActivePresentation:
chargingCoordinator:beginPresentation:
activePresentation
chargingCoordinator:dismissPresentation:
chargingCoordinator:endPresentationAnimation:
chargingCoordinator:nightstandEnabled:
presentChargingAlert:
dismissChargingAlert
endChargingAlertAnimation
nightstandChanged:
setManager:
getManager
addCoordinator:
removeCoordinator:
activeCoordinator
removeActiveCoordinator
T@"CSLPIChargingPresentation",&,N
dateWithTimeIntervalSinceNow:
initWithAlertPresentationHandler:alertDismissHandler:endAnimationHandler:nightstandChangeHandler:
alertPresentationHandler
setAlertPresentationHandler:
alertDismissHandler
setAlertDismissHandler:
endAnimationHandler
setEndAnimationHandler:
nightstandChangeHandler
setNightstandChangeHandler:
_alertPresentationHandler
_alertDismissHandler
_endAnimationHandler
_nightstandChangeHandler
T@?,C,N,V_alertPresentationHandler
T@?,C,N,V_alertDismissHandler
T@?,C,N,V_endAnimationHandler
T@?,C,N,V_nightstandChangeHandler
initWithDelegate:
turnBacklightOn:
turnBacklightOff
addAssertionForAlertPolicy:
_strongDelegate
_activePresentation
T@"CSLPIChargingPresentation",&,N,V_activePresentation
T@"<CSLPIChargingCoordinatorDelegate>",R,W,N,V_delegate
lastValidSpecifier
maximumRenderInterval
dateByAddingTimeInterval:
autoupdatingCurrentCalendar
setSecond:
nextDateAfterDate:matchingComponents:options:
loggingStringForPresentationTime:
duration
minimumRenderInterval
emptyTimelineWithIdentifier:
arrayWithObjects:count:
framesPerSecond
constructFrameSpecifiersForTimelines:dateInterval:fidelity:shouldConstructStartSpecifier:framesPerSecond:previousSpecifier:
addUnrenderedSpecifiers:atDate:
timelinesForDateInterval:previousSpecifier:shouldReset:completion:
initWithProvider:model:stateMachine:renderID:atDate:withStartDate:previousSpecifier:shouldConstructStartSpecifier:
start
_provider
_model
_stateMachine
_atDate
_startDate
_previousSpecifier
_shouldConstructStartSpecifier
__withDetentProviderLock:
setDetentProvider:
initWithIdentifier:reason:flags:timeoutSeconds:timeoutBlock:
takeAssertionWithCompletion:
takeAssertionWithIdentifier:reason:flags:timeoutSeconds:timeoutBlock:completion:
initWithSpecification:timeoutBlock:
logAction:ofType:
setAssertionProvider:
takeAssertionWithIdentifier:reason:flags:timeoutSeconds:timeoutBlock:
nextSpecifierToRender
initWithRenderedSpecifier:renderReport:cancelled:
addRenderedFrame:
renderFrameSpecifier:completion:
initWithProvider:model:renderID:
previousOperation
setPreviousOperation:
didRenderDelegate
setDidRenderDelegate:
_previousOperation
_didRenderDelegate
T@"NSOperation",W,N,V_previousOperation
T@"<CSLPIDidRenderFrameDelegate>",W,N,V_didRenderDelegate
_cancelWake
timeIntervalSinceDate:
identifier
setIdentifier:
leeway
setLeeway:
_wakeDate
_leeway
T@"NSString",C,N,V_identifier
Tq,N,V_leeway
appendString:withName:
appendBool:withName:ifEqualTo:
numberWithUnsignedLongLong:
copyWithZone:
_cancelled
_specifier
_machContinuousTime
_layoutProfile
_renderingProfile
T@"PUICAlwaysOnFrameSpecifier",R,N,V_specifier
TQ,R,N,V_machContinuousTime
T{?=Q{?=QQ}{?=QQ}B},R,N,V_layoutProfile
T{?=Q{?=QQ}{?=QQ}B},R,N,V_renderingProfile
cancelled
TB,R,N,GwasCancelled,V_cancelled
isViewLoaded
layer
name
setName:
stringByAppendingFormat:
initWithProvider:telemetryDelegate:frameCapacity:framesPerSecond:minimumRenderInterval:maximumRenderInterval:
initWithSuiteName:
frameCapacity
aotViewController
displayConfiguration
initWithDisplay:
setRootViewController:
setHidden:
blackColor
setBackgroundColor:
context
recursiveDescription
setContext:
defaultCenter
deviceOrientationChanged
addObserver:selector:name:object:
boolForKey:
invalidateAllSpecifiersForReason:reasonStr:atMachContinuousTime:date:completion:
fetchAlwaysOnContextAtMachContinuousTime:date:completion:
removeObserver:name:object:
model
appendPointer:withName:
enabledState
activeMultilinePrefix
appendBodySectionWithName:multilinePrefix:block:
sharedDeviceOrientation
isInverted
_rotation
setAdditionalRootLayerAffineTransform:
scheduledTimerFireDate
timerDidFireAtMachContinuousTime:date:
bounds
setBounds:
setPosition:
colorWithRed:green:blue:alpha:
CGColor
setBorderColor:
setBorderWidth:
removeFromSuperlayer
setForegroundColor:
setFontSize:
setRasterizationScale:
setContentsScale:
setAlignmentMode:
setString:
addSublayer:
entrySpecifiers
percentComplete
shortLoggingStringForPresentationTime:
disableFlipbookGeneration:atMachContinuousTime:date:completion:
handleEnabled:atMachContinuousTime:date:completion:
handleScreenUnblankedAtMachContinuousTime:date:
handleSetActive:atMachContinuousTime:date:completion:
handleScreenOnAtMachContinuousTime:date:completion:
flush
synchronize
handleScreenOffAtMachContinuousTime:date:completion:
isEnabled
handleWillPowerOnAtMachContinuousTime:date:
handleCanSleepAtMachContinuousTime:date:
handleWillSleepAtMachContinuousTime:date:
handleWillNotSleepAtMachContinuousTime:date:
handleAbortSleepTasksAtMachContinuousTime:date:
timelinesForDateInterval:previousSpecifier:
beginWithOptions:log:ariadneEvent:a:b:c:d:
begin
setDisableActions:
commit
endWithAriadneEvent:a:b:c:d:
timeProfile
timeIntervalSinceNow
renderForTime:options:error:
errorWithDomain:code:userInfo:
localizedDescription
updateToFrameSpecifier:completion:
updateToFrameSpecifier:
cancelAtTime:
willInvalidateSpecifiersForReason:
renderedFrameAtMachContinuousTime:
disableFlipbookGeneration:
usesFlipbook
cancelAllRenderedFramesForReason:reasonStr:
scheduleTimerWithDate:
scheduleImmediateSystemWake
firstFrameRendered
allowSleep
abortSleep
willActivate
willDeactivate
willInvalidateForReason:reasonStr:
takeIdleSleepPowerAssertionWithName:
T@"NSDate",R,N
frameSpecifierOnScreenNow
invalidateAllSpecifiersForReason:
initWithClient:telemetryDelegate:frameCapacity:backlightProxy:
_stateHandler
_multiClientProvider
_alwaysOnViewController
_flipbook
_framesCompleteCallback
_canSleepCallback
_showDebugColorOverlay
_debugOverlayColorVarient
_debugColorOverlayLayer
_showDebugLabelOverlay
_debugLabelOverlayLayer
_offscreenWindow
_scheduledTimerFireDate
_workQueue
_observedDefaults
_lastDebugSpecifier
_lastDebugMinuteCount
_isActiveProvider
mainDisplay
flipBookWithCapacity:
systemGreenColor
showDialogWithDescription:backgroundColor:exceptionCode:
hour
arrayWithCapacity:
setQualityOfService:
setMaxConcurrentOperationCount:
setUnderlyingQueue:
progress
forgetLastPurgedOnScreenFrameForReason:
isAllowSleepPending
addOperationWithBlock:
containsDate:
csl_earliestEntryPresentationDate
removeAllSpecifiersForReason:reasonStr:atMachContinuousTime:
initWithTelemetryDelegate:
removeAllObjects
purgeRenderedFramesUpToMachContinuousTime:
unrenderedSpecifierCount
lastValidRenderedFrame
countNextUnrenderedSpecifiersBeforeGapOfAtLeastDuration:
frameCount
totalCount
renderedFramesIntervalFromMachContinuousTime:
countUnrenderedSpecifiersToMaxRenderedDuration:
setCompletionBlock:
didRenderFlipbookSession:
didInvalidateFlipbook:
initWithProvider:model:queue:renderID:renderFramesOp:framesToRenderCalculator:didAddOperations:didCompleteFirstFrame:
addDependency:
completionBlock
addOperations:waitUntilFinished:
cancelAllOperations
isFlipbookGenerationDisabled
sleepState
operationsState
providerContext
_telemetryDelegate
_deferredUntilPowerOnBlocks
_operationQueue
_enqueuedOperations
_enabledState
_operationsState
_sleepState
_nextRenderID
_activeRenderID
_enabled
_flipbookGenerationDisabled
_firstFrameRenderedPending
_allowSleepPending
_frameCapacity
_framesPerSecond
_minimumRenderInterval
_maximumRenderInterval
_providerContext
TQ,R,N,V_frameCapacity
Td,R,N,V_framesPerSecond
Td,R,N,V_minimumRenderInterval
Td,R,N,V_maximumRenderInterval
enabled
TB,R,N,GisEnabled
flipbookGenerationDisabled
TB,R,N,GisFlipbookGenerationDisabled
allowSleepPending
TB,R,N,GisAllowSleepPending
T@"CSLPIFlipbookModel",R,N
T@"<NSObject>",R,N,V_providerContext
timelineEntry
presentationTime
_init
weakObjectsHashTable
frame
appendRect:withName:
observers
sensorActivityIndicatorDidUpdate:
mainDisplayIndicator
setFrame:
T{CGRect={CGPoint=dd}{CGSize=dd}},N
hidden
TB,N,GisHidden
performUpdatesWithBlock:
_hidden
_frame
T@"NSHashTable",R,N,V_observers
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_frame
TB,R,N,GisHidden,V_hidden
initWithName:
newOverlayAssertion:
setOverlayAssertionVendor:
assertionWithName:
_overlayAssertion
scrollCenterDidPeekOnEdge:
scrollCenterDidUpdateRevealPercent:onEdge:
scrollCenterWillPresentOnEdge:
scrollCenterDidPresentOnEdge:
scrollCenterWillDismissOnEdge:
scrollCenterDidDismiss
addCoordinatedAnimator:
removeCoordinatedAnimator:
_animators
navigateToClockAnimated:
_source
_didSuspend
reasonStr
moreThan2MinCount
moreThan3MinCount
moreThan4MinCount
moreThan5MinCount
numberWithInt:
decodeIntForKey:
decodeObjectOfClass:forKey:
encodeInt:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
_totalCount
_moreThan2MinCount
_moreThan3MinCount
_moreThan4MinCount
_moreThan5MinCount
_reasonStr
Ti,R,N,V_reason
T@"NSString",R,N,V_reasonStr
Ti,R,N,V_totalCount
Ti,R,N,V_moreThan2MinCount
Ti,R,N,V_moreThan3MinCount
Ti,R,N,V_moreThan4MinCount
Ti,R,N,V_moreThan5MinCount
appendDouble:withName:decimalPrecision:
partialMinuteCount
numberWithUnsignedInt:
decodeInt64ForKey:
containsValueForKey:
encodeBool:forKey:
encodeInt64:forKey:
_frameCount
_partialMinuteCount
_presentationInterval
T@"NSDateInterval",R,N,V_presentationInterval
TI,R,N,V_frameCount
TI,R,N,V_partialMinuteCount
addOperation:
_renderFramesOp
_framesToRenderCalculator
_didAddOperationsBlock
_didCompleteFirstFrameBlock
initWithIdentifier:timeout:
takeWithCompletion:
_timeoutAssertion
_checkIfCompleteForAction:
takeWithIdentifier:timeout:completion:
_timeoutTimer
_startMachTime
_startContinuousDeltaTime
_startKernelAPWakeTime
_wasAfterCanSleep
_wasAfterWillSleep
_didTimeout
_completion
appendArraySection:withName:skipIfEmpty:objectTransformer:
indexOfObjectPassingTest:
subarrayWithRange:
indexOfObjectWithOptions:passingTest:
removeObjectsInRange:
lastObject
timelineIdentifier
entrySpecifierForTimelineIdentifier:
setDidChange:
lastUnrenderedSpecifier
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
renderedFrameAtDate:
_unrenderedSpecifiers
_lastPurgedOnScreenFrame
_lastValidPurgedOnScreenFrame
@24@0:8@16
@16@0:8
v16@0:8
v24@0:8@16
@"NSString"
v32@0:8@16@24
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
B16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8Q16Q24
B24@0:8Q16
v48@0:8@16@24@32^v40
v20@0:8B16
@"UIViewController<CSLSButtonHandling><CSLSOccluding>"
@56@0:8d16d24@32@40@?48
@"<CSLSTimer>"56@0:8d16d24@"NSString"32@"NSObject<OS_dispatch_queue>"40@?<v@?>48
v24@0:8@?16
@?16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CSLSConnectionState"
v32@0:8@16@?24
v24@0:8@"CSLPISystemSleepObserver"16
v32@0:8@"CSLPISystemSleepObserver"16@?<v@?B>24
v32@0:8@"CSLPISystemSleepObserver"16@?<v@?>24
v32@0:8Q16@?24
@"CSLPISystemSleepObserver"
@"CSLSConcurrentObserverStore<CSLPISystemSleepGlobalObserverObserver>"
@40@0:8@16@24@32
@44@0:8B16@20@28@36
v28@0:8I16^v20
@"<CSLPISystemSleepObserverDelegate>"
^{IONotificationPort=}
^{CGImage=}16@0:8
@40@0:8@16@24d32
@"UIImage"16@0:8
@"CSLSConcurrentObserverStore"
@"<CSLPIConnectionStateServerDelegate>"
v24@0:8d16
d16@0:8
@60@0:8d16d24B32@36@44@?52
v48@0:8Q16d24Q32Q40
@"CSLPIDispatchTimer"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"CSLPIScheduledSystemWake"
@"CSLPIPowerAssertion"
v48@0:8@16B24I28@?32@?40
v28@0:8B16@?20
v48@0:8@"<CSLSBacklightRequest>"16B24I28@?<v@?d>32@?<v@?>40
v24@0:8@?<v@?>16
v28@0:8B16@?<v@?>20
@"<CSLSAOTModeProvider>"16@0:8
v24@0:8@"<CSLSAOTModeProvider>"16
@56@0:8@16@24@32@40@48
@"<CSLPIMultiClientScreenWakeProviderDelegate>"
@"<CSLSAOTModeProvider>"
@"<CSLPIScreenWakeProviderStateProvider>"
@"<CSLSFlipbookProviderModel>"
@"<CSLPIBacklightProxy>"
v28@0:8I16@?20
@28@0:8I16r*20
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
v28@0:8@16B24
v32@0:8@16B24B28
@"NSHashTable"
@"<CSLSWakeGestureMonitorDelegate>"
B20@0:8B16
@24@0:8@?16
@32@0:8@?16d24
@"NSObject<OS_dispatch_source>"
@"UIScreen"
@"UIView"
@"UIImage"
v24@0:8@"NSDate"16
@40@0:8^{__CFString=}16^{__CFString=}24d32
^{__CFString=}
@32@0:8^{__CFString=}16^{__CFString=}24
v32@0:8@16I24B28
@32@0:8@16d24
@"<CSLPIButtonHandlerOverride>"
v32@0:8@16d24
v48@0:8Q16Q24Q32Q40
@32@0:8Q16Q24
@56@0:8Q16Q24Q32Q40@48
v24@0:8@"CSLPIFlipbookRenderedFrame"16
@24@0:8Q16
@"NSMutableArray"
@40@0:8B16B20B24B28B32B36
v20@0:8I16
I16@0:8
i16@0:8
v20@0:8i16
@"CSLPIChargingAlertOptions"
@"NSDate"
@"<CSLPIChargingPresentationDelegate>"
v24@0:8@"CSLPIChargingAlertOptions"16
v32@0:8@"CSLPIChargingCoordinator"16@"CSLPIChargingPresentation"24
v28@0:8@"CSLPIChargingCoordinator"16B24
@48@0:8@?16@?24@?32@?40
v32@0:8@16Q24
v32@0:8@"CSLPIChargingPresentation"16Q24
@"<CSLPIChargingCoordinatorDelegate>"
@"CSLPIChargingPresentation"
@76@0:8@16@24@32Q40@48@56@64B72
@"<CSLPIFlipbookProvider>"
@"CSLPIFlipbookModel"
@"CSLPIFlipbookStateMachine"
@"PUICAlwaysOnFrameSpecifier"
@56@0:8@16I24I28d32@?40@?48
@48@0:8@16I24I28d32@?40
@32@0:8@16@?24
@40@0:8@16@24Q32
@"NSOperation"
@"<CSLPIDidRenderFrameDelegate>"
@32@0:8@16q24
q16@0:8
v24@0:8q16
@24@0:8^{_NSZone=}16
@132@0:8@16{?=Q{?=Q{?=QQ}{?=QQ}B}{?=Q{?=QQ}{?=QQ}B}}24B128
q24@0:8@16
{?=Q{?=QQ}{?=QQ}B}16@0:8
{?="wallclock
s"Q"processCPUProfile"{?="totalCPU
s"Q"userCPU
s"Q}"threadCPUProfile"{?="totalCPU
s"Q"userCPU
s"Q}"valid"B}
v32@0:8@16B24I28
v40@0:8@16B24I28@?32
v32@0:8@"<CSLSBacklightRequest>"16B24I28
v40@0:8@"<CSLSBacklightRequest>"16B24I28@?<v@?>32
v24@0:8@"NSString"16
v40@0:8Q16@24@?32
v44@0:8@16@24B32@?36
v28@0:8i16@20
v40@0:8Q16@"NSDate"24@?<v@?@"<NSObject>"Q@"NSDate">32
v44@0:8@"NSDateInterval"16@"PUICAlwaysOnFrameSpecifier"24B32@?<v@?@"NSArray">36
v32@0:8@"PUICAlwaysOnFrameSpecifier"16@?<v@?B{?=Q{?=Q{?=QQ}{?=QQ}B}{?=Q{?=QQ}{?=QQ}B}}>24
v28@0:8i16@"NSString"20
@"<BSInvalidatable>"24@0:8@"NSString"16
@"NSDate"16@0:8
@"PUICAlwaysOnFrameSpecifier"16@0:8
@48@0:8@16@24Q32@40
@"CSLPIMultiClientScreenWakeProvider"
@"UIViewController<CSLSAOTViewController>"
@"CADisplayFlipBook"
@"CALayer"
@"CATextLayer"
@"_UIWatchFlipbookRootWindow"
@"CSLPITimer"
@"NSUserDefaults"
v32@0:8Q16@24
v32@0:8Q16@"NSDate"24
@64@0:8@16@24Q32d40d48d56
v44@0:8B16Q20@28@?36
v52@0:8i16@20Q28@36@?44
@"<CSLFlipbookTelemetryDelegate>"
@"NSOperationQueue"
@"<NSObject>"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"CSLUIOverlayAssertion"
v24@0:8Q16
v32@0:8d16Q24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@48@0:8i16@20i28i32i36i40i44
@128@0:8@16I24I28{?=Q{?=QQ}{?=QQ}B}32{?=Q{?=QQ}{?=QQ}B}80
@"NSDateInterval"
@80@0:8@16@24@32Q40@48@?56@?64@?72
@"NSOperation<CSLPIDidRenderFrameDelegate>"
@40@0:8@16d24@?32
Q24@0:8d16
d24@0:8Q16
v36@0:8i16@20Q28
@"CSLPIFlipbookRenderedFrame"
