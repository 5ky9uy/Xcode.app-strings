@333333
?333333
333333
333333
ffffff
?ffffff
?333333
@(#)PROGRAM:PhotosPlayer  PROJECT:PhotosPlayer-440.0.170
filters.LivePhotoBlur.inputRadius
LivePhotoBlur
filters.LivePhotoBlur
inputRadius
inputHardEdges
medium
inputQuality
SpringBoard
PhotosPlayer.disablePrivatePlayerQueue
com.apple.mobileslideshow
PhotosPlayer.enablePixelBufferPoolSharing
com.apple.photosplayer.avplayerlayer.isolation
readyForDisplay
Photo: %@
Video: %@
v16@?0@"<ISBasePlayerOutput>"8
com.apple.ISLivePhotoUIView.audiosession
vitalityBlur
opacity
Idle
Playing
Hinting Vitality
Vitality
Hinting
Settling
Default
com.apple.photos.deferred-dealloc
com.apple.photosplayer.kvoproxyrecords
END HINT
SHOW VIDEO PLAYBACK
v16@?0@"ISLivePhotoVitalityFilter"8
v24@?0@8^B16
v24@?0@"ISLivePhotoPlaybackFilter"8^B16
PlayerNotReady
v16@?0@"ISLivePhotoPlayer"8
SEEK
SETTLE
ConfiguringAudioSession
Hint
Full
v12@?0B8
Show video for vitality
Vitality End
Continue Vitality
WALLPAPER PLAY
v16@?0^B8
WALLPAPER STOP
com.apple.livewallpaperplayer
v16@?0@"NSTimer"8
com.apple.PhotosPlayer
Generic
com.apple.photosplayer.observable.internal-queue
com.apple.photosplayer.observable.pending-change-queue
v32@?0@"<ISChangeObserver>"8^v16^B24
Trace Performance
shouldTracePerformance
Restore Defaults
Performance Diagnostics
None
Playback
com.apple.ISPlayerItem.state
com.apple.ISPlayerItem.work
v16@?0@"ISPlayerItem"8
v16@?0@8
The current client version of PhotosPlayer is %d, but the media in %@ requires version >= %@
com.apple.irisassetisolation
v52@?0B8@"AVPlayerItem"12{?=qiIq}20@"NSError"44
com.apple.playeritemchef
tracks
duration
metadata
v32@?0@"AVMutableCompositionTrack"8Q16^B24
 photo: %@, orientation: %d, video player: %@
duration:
Easing Enabled
easingEnabled
Long Exposure Vitality
longExposureVitality
Vitality Ease Duration
vitalityEaseDuration
easingEnabled == YES
Vitality Ease Min Rate
vitalityEaseMinRate
startBehavior
from the beginning
from the photo
Scale During Playback
scaleDuringPlayback
Looping Enabled
loopingEnabled
Crossfade Enabled
crossfadeEnabled
loopingEnabled == YES
Audio Enabled
audioEnabled
Sticky Play
playIsSticky
State Overlay
showStateOverlay
Live Hint
playDuringHint
Use Dedicated Queues
useDedicatedQueues
Preroll Before Playing
prerollBeforePlaying
Frame Blending
allowFrameBlending
Video Preroll
allowVideoPreRoll
Force Scrub Rewind Factor
forceScrubRewindFactor
Force Scrub Min Rate Change
forceScrubMinRateChange
Force Scrub Minimum Rate
forceScrubMinimumRate
Force Scrub Maximum Interactive Rate
forceScrubMaximumInteractiveRate
Player
label:
photo:
      b:%f
video:
a:%f, b:%f
SettingsArchiveKey
SettingsVersionKey
playerSettings
vitalitySettings
performanceDiagnosticsSettings
Restore All Defaults
PhotosPlayer
com.apple.Photos
v16@?0@"<ISVisibilityOffsetComputer>"8
v16@?0@"ISAnimatedImageTimer"8
transform.scale
ISTransitionApplierAnimationCompletionHandlerKey
_pagingFriction
com.apple.photosplayer.scrollviewvitalitycontroller
d24@?0{ISVisibilityRange=dd}8
Use Legacy Behavior
useLegacyBehavior
Preroll
shouldPreroll
One Up
oneUpSettings
Share View
shareViewSettings
Activity View
activityViewSettings
Specific Settings
useLegacyBehavior == 0
@"NSCompoundPredicate"16@?0@"NSArray"8
behavior == %@
Max Delay
maxVitalityDelay
Min. Photo Transition Duration
minimumPhotoTransitionDuration
Behavior
behavior
Legacy
Constant
Simple
Adaptive
Autoplay
Start Seek Tolerance
startSeekTolerance
Post Duration
postDuration
Pre Duration
preDuration
Playback Rate
playbackRate
End Time Offset
endTimeOffset
Minimum Visibility
minimumVisibilityFactor
Maximum Delay Before Playback
maximumDelayBeforePlayback
Settings
Vitality Behavior
<%@ %p; %@>
outputVolume
status
rate
error
currentItem
volume
videoComposition
forwardPlaybackEndTime
playbackLikelyToKeepUp
playbackBufferFull
playbackBufferEmpty
v8@?0
com.apple.photosplayer.avplayerwrapper.ivars
v16@?0@"ISWrappedAVPlayer"8
v16@?0@"NSNotification"8
com.apple.photosplayer.wrappedAVPlayer.stateDispatch
v32@?0@8@16^B24
avPlayerWrapperObserverID-%d
com.apple.photosplayer
@24@?0@8@16
ACTIVE BEHAVIOR: %@
%@: will apply scale %.2f
options: %@
%@: will apply output info: %@ - %@
options: %@
%@: will add video observer for will-end time: %f
%@: will add video observer for will-play-to-photo time: %f
Ignoring output from behavior that is not active: %@
%@: will set video rate: %@ - %f
%@: will seek video to time: %@ - %f
%@: did seek video to time: %@ - %f
%@: unable to seek video to time: %@ - %f
%@: will set video preroll rate: %@ - %f
%@: will set video end time: %@ - %f
%@: will set video volume: %@ - %f
Failed configuring AVAudioSession for Live Photo playback. Error: %@
ISAnimatedImagePlayer: Attempted to seek an empty PFAnimatedImage to the beginning
ISAnimatedImagePlayer: Reached end of loop. Stopping
ISAnimatedImagePlayer: Dropped a frame
Change depth limit almost reached
%@ did receive error: %@
Unable to read minimum client version from source video: %@. Error: %@
Unable to read playback style identifier from asset: %@. Error: %@
Unable to read vitality style identifier from asset: %@. Error: %@
Property loading status:%ld error:%@
Error inserting asset contents into composition: %@
Unable to configure Ambient audio session. Error: %@
Unable to configure Playback audio session. Error: %@
-[ISWrappedAVPlayer _initWithAVPlayer:] expected existing player to not have currentItem set
%@ is not supported on watchOS.
-[ISWrappedAVPlayer setActionAtItemEnd:] ignoring AVPlayerActionAtItemEndAdvance argument because the underlying player is not an AVQueuePlayer. This should not be necessary if you are setting loopingEnabled or loopTimeRange.
zPLR
PhotosPlayer
ISAVPlayer
ISRateCurveRequest
ISAVPlayerLayer
ISAsset
ISBasePlayer
ISChangeObserver
NSObject
ISWrappedAVPlayerDelegate
ISBasePlayerUIView
ISBasePlayerOutput
ISBehavior
ISDefaultBehavior
ISDeferredDealloc
ISDisplayLink
ISLivePhotoAutoplayVitalityFilter
ISKVOProxyManager
ISKVOProxy
ISKVOProxyRecord
ISLivePhotoPlaybackBehavior
ISLivePhotoPlaybackFilter
ISLivePhotoPlayer
ISLivePhotoSettleBehaviorDelegate
ISBehaviorDelegate
ISLivePhotoSeekBehavior
ISLivePhotoSettleBehavior
ISLivePhotoUIView
UIGestureRecognizerDelegate
ISLivePhotoVitalityBehavior
ISLivePhotoVitalityFilter
ISLiveWallpaperPlayer
ISLiveWallpaperUIView
ISAnimatedImagePlayer
ISObservable
ISPerformanceDiagnosticsSettings
ISPlayerContent
ISPlayerItem
ISPlayerItemChef
_ISPlayerItemChefOperation
ISPlayerOutputContent
ISPlayerOutputTransitionOptions
ISPlayerSettings
ISPlayerState
ISPlayerView
ISBasePlayerDelegate
ISAnimatedImage
ISRootSettings
ISScrollViewVitalityController
ISAnimatedImageView
ISAnimatedImagePlayerDestination
ISSettings
ISTouchLivePhotoPlaybackFilter
ISAnimatedImageTimer
_ISAnimatedImageTimerForwardingProxy
ISTouchingGestureRecognizer
ISTransitionApplier
CAAnimationDelegate
ISUIScrollViewVitalityController
UIScrollViewDelegate
ISUIVisibilityOffsetHelper
ISVideoPlayerUIView
ISAVPlayerUIView
ISVisibilityOffsetHelper
ISVisibilityOffsetComputer
ISVitalityConstantFilter
ISVitalityFilter
ISVitalitySettings
ISVitalitySpecificSettings
ISWrappedAVAudioSession
ISWrappedAVPlayer
ISKVOProxyDelegate
asset
tracksWithMediaType:
firstObject
nominalFrameRate
tracks
countByEnumeratingWithState:objects:count:
setDisableColorMatching:
is_isHighFramerate
is_enableColorMatching
is_highFramerate
TB,R,N,Gis_isHighFramerate
is_addBlurFilterIfNeeded
numberWithDouble:
setValue:forKeyPath:
valueForKeyPath:
floatValue
_is_blurFilter
filterWithType:
setName:
setCachesInputImage:
setValue:forKey:
_is_setBlurFilter:
arrayWithObjects:count:
filters
arrayByAddingObjectsFromArray:
setFilters:
containsObject:
mutableCopy
removeObject:
copy
is_setBlurRadius:
is_blurRadius
is_addFilter:
is_removeFilter:
_is_removeBlurFilterIfNeeded
Td,N,Sis_setBlurRadius:
processInfo
processName
isEqualToString:
_cancelRateCurveRequest
dealloc
init
isSpringBoard
isAppleInternal
initWithDispatchQueue:
setAllowsPixelBufferPoolSharing:
setClosedCaptionDisplayEnabled:
setActionAtItemEnd:
_setRate:
setRate:
initWithTargetTime:duration:initialRate:avPlayer:progressHandler:
start
cancel
dispatchQueue
playToTime:withInitialRate:overDuration:progressHandler:
actualDispatchQueue
.cxx_destruct
_currentRequest
_initializedDispatchQueue
_actualDispatchQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_actualDispatchQueue
avPlayer
currentTime
arrayWithCapacity:
valueWithCMTime:
addObject:
_stepDownRate
addBoundaryTimeObserverForTimes:queue:usingBlock:
progressHandler
sharedInstance
vitalityEaseMinRate
seekToTime:toleranceBefore:toleranceAfter:
_stopObservingPlayer
removeTimeObserver:
_didReachTargetTime
targetTime
duration
initialRate
_startTime
_startVideoTime
_cancelled
_boundaryObserver
_stepInterval
_stepIndex
_initialRate
_duration
_avPlayer
_progressHandler
_targetTime
T{?=qiIq},R,N,V_targetTime
Td,R,N,V_duration
Tf,R,N,V_initialRate
T@"ISAVPlayer",R,W,N,V_avPlayer
T@?,R,C,N,V_progressHandler
didChangeValueForKey:
readyForDisplayChangeHandler
player
_performDeferredDealloc:
bounds
setBounds:
setPlayer:
attachToPlayerLayerIfNeeded:
deferredDealloc
setWrappedPlayer:
setReadyForDisplayChangeHandler:
_isolationQueue
_readyForDisplayChangeHandler
T@?,C,N,V_readyForDisplayChangeHandler
description
stringWithString:
photo
appendFormat:
videoAsset
initWithVideoAsset:photo:photoTime:photoEXIFOrientation:options:
CGImage
photoTime
initWithBundleAtURL:
imagePath
videoPath
imageDisplayTime
initWithContentsOfFile:
fileURLWithPath:
assetWithURL:
imageOrientation
initWithVideoAsset:photo:photoTime:photoEXIFOrientation:
options
assetForURL:error:
initWithVideoAsset:photo:photoTime:options:
initWithVideoAsset:photo:photoTime:
initWithVideoAsset:UIImage:photoTime:photoEXIFOrientation:options:
photoCMTime
resetAVObjects
hasColorAdjustments
photoEXIFOrientation
_UIImage
_photoEXIFOrientation
_videoAsset
_photo
_photoTime
_options
T@"AVAsset",R,C,N,V_videoAsset
T^{CGImage=},R,N,V_photo
Td,R,N,V_photoTime
T{?=qiIq},R,N
Ti,R,N,V_photoEXIFOrientation
TQ,R,N,V_options
TB,R,N
initWithVideoPlayer:
weakObjectsHashTable
setActiveBehavior:
setDelegate:
cancelPendingPrerolls
_setVideoPlayer:
unregisterChangeObserver:context:
registerChangeObserver:context:
configurePlayerItem
_invalidateVideoPlayer
_invalidateContentFromPlayerItem
playerItemDidChange
performChanges:
_invalidateStatus
_invalidateWillPlayToEndObserver
_invalidateWillPlayToPhotoObserver
setVideoLayerReadyForDisplayChangeHandler:
_outputVideoReadyForDisplayDidChange:
didAddOutput:
willRemoveOutput:
activeBehavior
videoReadyForDisplayDidChange
isVideoReadyForDisplay
videoLayersReadyForDisplay
_configureNewOutput:
setContent:
videoDidPlayToEnd
videoWillPlayToPhoto
videoWillPlayToEnd
_invalidateVideoPlayerVolume
resignActive
becomeActive
activeBehaviorDidChange
_setLastAppliedScale:
applyScale:withTransitionOptions:completion:
enumerateOutputsWithBlock:
_setLastAppliedLayoutInfo:
applyOutputInfo:withTransitionOptions:completion:
_outputContent
lastAppliedLayoutInfo
playerItem
playerContent
photoIsOriginal
videoPlayer
videoPlayerItem
currentItem
apertureMode
setVideoApertureMode:
replaceCurrentItemWithPlayerItem:
initWithPhoto:photoIsOriginal:photoEXIFOrientation:videoPlayer:videoSize:
_setOutputContent:
_videoForwardPlaybackEndTime
videoDuration
_videoWillPlayToEndObserver
videoWillPlayToEndInterval
_videoWillPlayToEnd
_setVideoWillPlayToEndObserver:
_videoWillPlayToPhotoObserver
videoWillPlayToPhotoInterval
_videoWillPlayToPhoto
_setVideoWillPlayToPhotoObserver:
status
currentItemStatus
_handleErrorsIfNeeded
_setStatus:
statusDidChange
signalChange:
itemForwardPlaybackEndTime
setItemForwardEndPlaybackTime:
didPerformChanges
_updateIfNeeded
_needsUpdate
_updateVideoPlayerIfNeeded
_updateStatusIfNeeded
_updateVideoPlayerVolumeIfNeeded
_updateContentFromPlayerItemIfNeeded
_updateWillPlayToEndObserverIfNeeded
_updateWillPlayToPhotoObserverIfNeeded
isAudioEnabled
videoVolume
audioVolume
setVolume:
setAudioEnabled:
_initWithAVPlayer:
error
currentItemError
_setError:
domain
code
_mainQueue_handleMediaServicesReset
_mainQueue_resetAVObjectsWithResetCount:
delegate
videoPlayerForPlayer:
replaceCurrentItemWithPlayerItem:thenCall:
applyOutputInfo:fromBehavior:withTransitionOptions:completion:
rate
behavior:seekVideoPlayerToTime:toleranceBefore:toleranceAfter:completionHandler:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
prerollAtRate:completionHandler:
_setForwardPlaybackEndTime:
setVideoVolume:
_videoDidPlayToEnd
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
observable:didChange:context:
avPlayer:itemDidPlayToEnd:
mutableChangeObject
setPlayerItem:
addOutput:
removeOutput:
behaviorIsVideoReadyForDisplay:
setAudioVolume:
setApertureMode:
behavior:didSetOutputInfo:withTransitionOptions:completion:
behavior:setVideoPlayRate:
videoPlayRate
behavior:seekVideoPlayerToTime:completionHandler:
behavior:prerollVideoAtRate:completionHandler:
behavior:setVideoForwardPlaybackEndTime:
behavior:setVideoVolume:
behavior:addBoundaryTimeObserverForTimes:queue:usingBlock:
behavior:removeTimeObserver:
behavior:playVideoToTime:initialRate:overDuration:progressHandler:
lastAppliedScale
_setVideoForwardPlaybackEndTime:
_videoVolume
_providedAVPlayer
_outputQueue
_outputs
_apertureMode
_isValid
_mainQueue_mediaServicesResetCounter
_audioEnabled
_audioVolume
_playerItem
_status
_error
_delegate
_videoPlayer
_activeBehavior
__videoWillPlayToEndObserver
__videoWillPlayToPhotoObserver
_lastAppliedLayoutInfo
__outputContent
_lastAppliedScale
__videoForwardPlaybackEndTime
T@"ISBehavior",&,N,SsetActiveBehavior:,V_activeBehavior
T@,&,N,S_setVideoWillPlayToEndObserver:,V__videoWillPlayToEndObserver
T@,&,N,S_setVideoWillPlayToPhotoObserver:,V__videoWillPlayToPhotoObserver
T@"ISPlayerState",&,N,S_setLastAppliedLayoutInfo:,V_lastAppliedLayoutInfo
T@"ISPlayerOutputContent",&,N,S_setOutputContent:,V__outputContent
Td,N,S_setLastAppliedScale:,V_lastAppliedScale
Tq,N,S_setStatus:,V_status
T{?=qiIq},N,S_setVideoForwardPlaybackEndTime:,V__videoForwardPlaybackEndTime
T@"NSError",&,N,S_setError:,V_error
T@"ISPlayerItem",&,N,V_playerItem
Tf,N,V_audioVolume
audioEnabled
TB,N,GisAudioEnabled,V_audioEnabled
T@"<ISBasePlayerDelegate>",W,N,V_delegate
T@"ISWrappedAVPlayer",R,N,V_videoPlayer
initWithFrame:
_performCommonInitialization
initWithCoder:
auxiliarySession
setCategory:mode:routeSharingPolicy:options:error:
_setWrappedAudioSession:
setClipsToBounds:
addSubview:
layer
setContentsRect:
_videoViewReadyForDisplayDidChange
_changeObserver
_setChangeObserver:
basePlayerUIView:didChange:withAnimationDuration:
begin
disableActions
videoView
setMeshTransform:
mainScreen
scale
setRasterizationScale:
videoTransform
videoBlurView
setHidden:
commit
layoutSubviews
containerView
photoView
customPhotoView
videoContainerView
contentMode
image
size
setFrame:
setCenter:
setContentMode:
_updateVideoViewsFrameWithContainerBounds:
scaleAnchorOffset
setAnchorPoint:
center
setNeedsLayout
removeFromSuperview
_updatePhotoView
audioSessionDidChange
_updatePlayerAudioSession
videoLayerReadyForDisplay
videoLayerReadyForDisplayChangeHandler
playerDidChange
wrappedAudioSession
setWrappedAudioSession:
contentsRect
traitCollection
displayScale
layoutIfNeeded
defaultApplier
applyScale:withTransitionOptions:toPhotoLayer:videoLayer:completion:
isDisplayingPhoto
applyOutputInfo:withTransitionOptions:toPhotoLayer:videoLayer:completion:
videoAlpha
setValue:forKeyPath:ofLayer:withTransitionOptions:completion:
transitionDuration
_signalChange:withAnimationDuration:
overrideImage
setImage:
initWithCGImage:scale:orientation:
setVideoPlayer:
alpha
videoComposition
initWithAsset:
setMaximumSize:
setAppliesPreferredTrackTransform:
setRequestedTimeToleranceAfter:
setRequestedTimeToleranceBefore:
setVideoComposition:
copyCGImageAtTime:actualTime:error:
initWithCGImage:
superview
insertSubview:atIndex:
playerClass
T@?,C,N
registerChangeObserver:
unregisterChangeObserver:
setVideoTransform:
setVideoFilter:
setCustomPhotoView:
setScaleAnchorOffset:
generateSnapshotImage
setOverrideImage:
contentDidChange
videoFilter
_audioSessionQueue
_content
_changeObserverRespondsTo
_player
_customPhotoView
_overrideImage
_videoLayerReadyForDisplayChangeHandler
_videoTransform
_videoFilter
_containerView
_videoContainerView
_wrappedAudioSession
__changeObserver
_videoBlurView
_photoView
_videoView
_scaleAnchorOffset
_contentsRect
T@"UIView",R,N,V_containerView
T@"UIView",R,N,V_videoContainerView
T@"ISWrappedAVAudioSession",&,N,S_setWrappedAudioSession:,V_wrappedAudioSession
T@"<ISBasePlayerUIViewChangeObserver>",W,N,S_setChangeObserver:,V__changeObserver
T@"ISVideoPlayerUIView",R,N,V_videoBlurView
T@"UIImageView",R,N,V_photoView
T@"ISVideoPlayerUIView",R,N,V_videoView
T@"ISBasePlayer",&,N,V_player
T{CGPoint=dd},N,V_scaleAnchorOffset
T@"UIView",&,N,V_customPhotoView
T@"UIImage",&,N,V_overrideImage
displayingPhoto
TB,R,N,GisDisplayingPhoto
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_contentsRect
T@?,C,N,V_videoLayerReadyForDisplayChangeHandler
T@"CAMeshTransform",C,N,V_videoTransform
T@"CAFilter",&,N,V_videoFilter
activeDidChange
initWithInitialLayoutInfo:
behaviorType
videoPlayerItemDidChange
setOutputInfo:withTransitionOptions:completion:
setVideoPlayRate:
seekVideoPlayerToTime:completionHandler:
seekVideoPlayerToTime:toleranceBefore:toleranceAfter:completionHandler:
prerollVideoAtRate:completionHandler:
setVideoForwardPlaybackEndTime:
initialLayoutInfo
isActive
_active
_initialLayoutInfo
active
TB,R,N,GisActive,V_active
T@"<ISBehaviorDelegate>",W,N,V_delegate
T@"ISPlayerState",R,N,V_initialLayoutInfo
Tq,R,N
_showPhoto
initWithPhotoBlurRadius:videoAlpha:videoBlurRadius:label:
_performDeferredDealloc:withDelay:
_deferredDeallocQueue
setUpdateHandler:
setCompletionHandler:
_update:
displayLinkWithTarget:selector:
setDisplayLink:
displayLink
currentRunLoop
addToRunLoop:forMode:
setPreferredFramesPerSecond:
completionHandler
invalidate
updateHandler
stop
_callUpdateHandler
initWithUpdateHandler:completionHandler:
preferredFramesPerSecond
_preferredFramesPerSecond
_updateHandler
_completionHandler
_displayLink
T@?,C,N,V_updateHandler
T@?,C,N,V_completionHandler
T@"CADisplayLink",&,N,V_displayLink
Tq,N,V_preferredFramesPerSecond
invalidateOutput
updateOutput
isScrolling
isVisible
_setState:
isDecelerating
_state
hasTargetVisibilityOffset
targetVisibilityOffset
visibilityOffset
settings
minimumVisibilityFactor
setState:
setScrolling:
setEstimatedScrollEndDate:
setDecelerating:
setTargetVisibilityOffset:
setHasTargetVisibilityOffset:
setVisibilityOffset:
setVisible:
estimatedScrollEndDate
_isVisible
_hasTargetVisibilityOffset
_isScrolling
_isDecelerating
_visibilityOffset
_targetVisibilityOffset
_estimatedScrollEndDate
__state
Tq,N,S_setState:,V__state
TB,N,SsetVisible:,V_isVisible
Td,N,V_visibilityOffset
TB,N,V_hasTargetVisibilityOffset
Td,N,V_targetVisibilityOffset
T@"NSDate",&,N,V_estimatedScrollEndDate
TB,N,SsetScrolling:,V_isScrolling
TB,N,SsetDecelerating:,V_isDecelerating
UUID
UUIDString
initWithTarget:keyPaths:identifier:delegate:
initWithProxy:queue:
setObject:forKeyedSubscript:
startObservingTarget
objectForKeyedSubscript:
removeObjectForKey:
queue
proxy
stopObservingTarget
sharedManager
T@"ISKVOProxyManager",R,N
addProxyWithTarget:queue:keyPaths:delegate:
removeProxyWithIdentifier:
_recordsByIdentifier
_recordsQueue
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
observeChangeforKVOProxyIdentifier:keyPath:change:
observeValueForKeyPath:ofObject:change:context:
_target
_keyPaths
_identifier
T@"<ISKVOProxyDelegate>",W,N,V_delegate
_proxy
_queue
T@"ISKVOProxy",R,N,V_proxy
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
livePhotoPlaybackBehaviorDidFinish:
livePhotoPlaybackBehaviorDidBeginPlaying:
immediatelyShowsPhotoWhenPlaybackEnds
setTransitionDuration:
livePhotoPlaybackBehaviorWillTransitionToPhoto:
_handleDidFinish
_prepareVideoForPlaybackIfNeeded
_setPreparing:
_setVideoReadyToPlay:
_currentPlaybackID
_setCurrentPlaybackID:
_isVideoReadyToPlay
_startPlaybackWithPlaybackID:
_setReadyToPlayPlaybackID:
_isPreparing
playbackTimeRange
startBehavior
_handleDidSeekToBeginning
_handleDidFinishPreroll
_prerollWithCompletionHandler:
prerollBeforePlaying
_didFinishPreparing
_readyToPlayPlaybackID
_transitionToVideoWithPlaybackID:
_showVideoWithPlaybackID:
outputInfoWithPhotoBlurRadius:videoAlpha:videoBlurRadius:label:
initWithInitialLayoutInfo:keyTime:playbackTimeRange:photoTransitionDuration:immediatelyShowsPhotoWhenPlaybackEnds:hasBlurryTransition:
startPlayback
keyTime
photoTransitionDuration
hasBlurryTransition
isTransitioningToPhoto
_delegateFlags
_immediatelyShowsPhotoWhenPlaybackEnds
_hasBlurryTransition
_isTransitioningToPhoto
__videoReadyToPlay
__preparing
_photoTransitionDuration
__currentPlaybackID
__readyToPlayPlaybackID
_keyTime
_playbackTimeRange
Tq,N,S_setCurrentPlaybackID:,V__currentPlaybackID
Tq,N,S_setReadyToPlayPlaybackID:,V__readyToPlayPlaybackID
_videoReadyToPlay
TB,N,G_isVideoReadyToPlay,S_setVideoReadyToPlay:,V__videoReadyToPlay
_preparing
TB,N,G_isPreparing,S_setPreparing:,V__preparing
T{?=qiIq},R,N,V_keyTime
T{?={?=qiIq}{?=qiIq}},R,N,V_playbackTimeRange
Td,R,N,V_photoTransitionDuration
TB,R,N,V_immediatelyShowsPhotoWhenPlaybackEnds
TB,R,N,V_hasBlurryTransition
TB,R,N,V_isTransitioningToPhoto
T@"<ISLivePhotoPlaybackBehaviorDelegate>",W,D,N
_playbackDisabledReasons
count
playIsSticky
setPlaybackDisabled:forReason:
isPlaybackDisabled
setHintProgress:
reset
hintProgress
state
setPlayIsSticky:
isPerformingInputChanges
_setPerformingInputChanges:
_setPlaybackDisabled:
_playIsSticky
_isPerformingInputChanges
_playbackDisabled
_hintProgress
__playbackDisabledReasons
TB,N,S_setPerformingInputChanges:,V_isPerformingInputChanges
playbackDisabled
TB,N,GisPlaybackDisabled,S_setPlaybackDisabled:,V_playbackDisabled
T@"NSMutableSet",R,N,V__playbackDisabledReasons
Td,R,N,V_hintProgress
Tq,R,N,V_state
TB,N,V_playIsSticky
_updatePlayerItemLoadingTarget
vitalityFilter
_coalescedPlaybackFilterState
_setCurrentPlaybackStyle:
startPlaybackWithStyle:
prepareForVitality
playVitality
_configurePlaybackFilters
_prepareForVitalityIfNeeded
_playIfNeeded
variationIdentifier
integerValue
longExposureVitality
_updateHintingAndVitality
_invalidateScale
_invalidateApertureMode
startPlaybackWithStyleWhenReady:
_configurePlaybackFilter:
_handleVitalityFilterDidChange:
setOutputChangeHandler:
targetReadiness
currentPlaybackStyle
setLoadingTarget:
discardContentBelowLoadingTarget
_setStyleToPlayWhenReady:
_setSettleAutomaticallyWhenReady:
startPlaybackWithStyleWhenReady:settleAutomatically:
startPlaybackWithStyle:settleAutomatically:
_setShouldPrepareForVitalityWhenReady:
_setShouldPlayVitalityWhenReady:
minimumPhotoTransitionDuration
trimTimeRange
stopPlaybackAnimated:
isPlayingBeyondPhoto
settle:
isPlaybackAllowed
_canPlayVitality
maxVitalityDelay
dateWithTimeIntervalSinceNow:
_setVitalityTimeoutDate:
_resetPlaybackFilters
isPrepared
_createVitalityBehavior
isPlayingVitality
postDuration
preDuration
playbackRate
initWithInitialLayoutInfo:playbackEndTime:playDuration:playRate:photoTransitionDuration:pauseDuringTransition:assetOptions:
initWithInitialLayoutInfo:seekTime:
setSeekCompletionHandler:
setSeekTime:
supportsVitality
_styleToPlayWhenReady
_settleAutomaticallyWhenReady
_shouldPrepareForVitalityWhenReady
_shouldPlayVitalityWhenReady
_vitalityTimeoutDate
timeIntervalSinceNow
setIsAttemptingToPlayback:
cancelSettleToPhoto
stopPlayback
scaleDuringPlayback
playbackFilters
enumerateObjectsUsingBlock:
isPlaying
_setPlayingVitality:
_setHinting:
volume
_fadeInAudio
loopingEnabled
setLoopingEnabled:
_updateScaleIfNeeded
_updateApertureModeIfNeeded
_handlePlaybackFilterDidChange
livePhotoSettleBehaviorDidFinish:
prepareForHintWhenReady
playHintWhenReady
addPlaybackFilter:
removePlaybackFilter:
setVitalityFilter:
setTargetReadiness:
setPlaybackAllowed:
setSeekTime:completion:
_coalescedPlaybackFilterHintProgress
vitalityBehaviorDidBeginPlaying:
vitalityBehaviorDidEndPlaying:
vitalityBehaviorShouldEndPlayingAtPhoto:
isHinting
isAttemptingToPlayback
_setIsAttemptingToPlayback:
setImmediatelyShowsPhotoWhenPlaybackEnds:
seekTime
setTrimTimeRange:
_shouldPrepareForHintWhenReady
_setShouldPrepareForHintWhenReady:
_playbackFilters
_fadeInRequestID
_playingVitality
_hinting
_isAttemptingToPlayback
_playbackAllowed
__settleAutomaticallyWhenReady
__shouldPrepareForVitalityWhenReady
__shouldPlayVitalityWhenReady
__shouldPrepareForHintWhenReady
_vitalityFilter
_currentPlaybackStyle
_targetReadiness
__styleToPlayWhenReady
__vitalityTimeoutDate
_seekTime
_trimTimeRange
Tq,N,S_setCurrentPlaybackStyle:,V_currentPlaybackStyle
Tq,N,S_setStyleToPlayWhenReady:,V__styleToPlayWhenReady
TB,N,S_setIsAttemptingToPlayback:,V_isAttemptingToPlayback
TB,N,S_setSettleAutomaticallyWhenReady:,V__settleAutomaticallyWhenReady
TB,N,S_setShouldPrepareForVitalityWhenReady:,V__shouldPrepareForVitalityWhenReady
TB,N,S_setShouldPlayVitalityWhenReady:,V__shouldPlayVitalityWhenReady
TB,N,S_setShouldPrepareForHintWhenReady:,V__shouldPrepareForHintWhenReady
playingVitality
TB,N,GisPlayingVitality,S_setPlayingVitality:,V_playingVitality
hinting
TB,N,GisHinting,S_setHinting:,V_hinting
T@"NSDate",&,N,S_setVitalityTimeoutDate:,V__vitalityTimeoutDate
T@"NSSet",R,N
T@"ISLivePhotoVitalityFilter",&,N,V_vitalityFilter
TB,N,V_immediatelyShowsPhotoWhenPlaybackEnds
playbackAllowed
TB,N,GisPlaybackAllowed,V_playbackAllowed
Tq,N,V_targetReadiness
T{?=qiIq},R,N,V_seekTime
T{?={?=qiIq}{?=qiIq}},N,V_trimTimeRange
_seekIfNeeded
_callSeekCompletionHandler:
_handleDidSeekToSeekTime:
seekCompletionHandler
_isSeeking
_needsSeek
_needsTransitionToVideo
_seekCompletionHandler
T{?=qiIq},N,V_seekTime
T@?,C,N,V_seekCompletionHandler
_didFinish
T@"<ISLivePhotoSettleBehaviorDelegate>",W,D,N
_ISLivePhotoUIViewCommonInitialization
view
removeGestureRecognizer:
_playbackFilter
livePhotoViewCanBeginInteractivePlayback:
_updateVideoTransform
_updatePlaybackFilter
_handlePlaybackRecognizer:
initWithTarget:action:
setMinimumTouchDuration:
setCancelsTouchesInView:
setRequireSingleTouch:
addGestureRecognizer:
_updateGestureRecognizerParameters
_updatePlaybackFilterInput
playbackGestureRecognizer
distanceFromInitialPoint
setEnabled:
setTouchActive:
vitalityTransform
_setPlaybackFilter:
showStateOverlay
setAlpha:
whiteColor
setTextColor:
colorWithWhite:alpha:
setBackgroundColor:
setCornerRadius:
setMasksToBounds:
setTextAlignment:
setText:
sizeToFit
frame
_overlayDismissalID
_setOverlayDismissalID:
_dismissOverlayLabel:
_overlayLabel
animateWithDuration:animations:
setMaximumTouchMovement:
_showOverlayLabel
_playerDidChangePlaybackStyle
_playerDidChangeHinting
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
livePhotoPlayer
setVitalityTransform:
_delegateRespondsTo
__playingVitality
_playbackGestureRecognizer
_vitalityTransform
__playbackFilter
__overlayLabel
__overlayDismissalID
T@"ISTouchLivePhotoPlaybackFilter",&,N,S_setPlaybackFilter:,V__playbackFilter
TB,N,S_setPlayingVitality:,V__playingVitality
T@"UILabel",R,N,V__overlayLabel
Tq,N,S_setOverlayDismissalID:,V__overlayDismissalID
T@"ISLivePhotoPlayer",&,D,N
T@"UIGestureRecognizer",R,N,V_playbackGestureRecognizer
T@"CAMeshTransform",C,N,V_vitalityTransform
T@"<ISLivePhotoUIViewDelegate>",W,N,V_delegate
_setPrepared:
_startObservingVideo
_stopObservingVideo
playbackEndTime
playDuration
oneUpSettings
startSeekTolerance
_handleDidSeekToStartTime
vitalityEaseDuration
_didReachTransitionTime
_didReachTransitionToPhotoTime
shouldPreroll
playRate
_shouldPlayAfterPreparation
_startVideoPlayback
_setShouldPlayAfterPreparation:
easingEnabled
_setPlayingBeyondPhoto:
pauseDuringTransition
assetOptions
_easeOutObserver
_transitionToPhotoObserver
_pauseDuringTransition
_prepared
_playing
_playingBeyondPhoto
__shouldPlayAfterPreparation
_playRate
_assetOptions
_playbackEndTime
_playDuration
prepared
TB,N,GisPrepared,S_setPrepared:,V_prepared
preparing
TB,N,G_isPreparing,S_setPreparing:,V_preparing
playingBeyondPhoto
TB,N,GisPlayingBeyondPhoto,S_setPlayingBeyondPhoto:,V_playingBeyondPhoto
TB,N,S_setShouldPlayAfterPreparation:,V__shouldPlayAfterPreparation
T{?=qiIq},R,N,V_playbackEndTime
T{?=qiIq},R,N,V_playDuration
TB,R,N,V_pauseDuringTransition
TQ,R,N,V_assetOptions
Tf,R,N,V_playRate
playing
TB,R,N,GisPlaying,V_playing
T@"<ISLivePhotoVitalityBehaviorDelegate>",W,D,N
initWithSettings:
outputChangeHandler
_setShouldUpdateOutput:
performInputChanges:
_shouldUpdateOutput
__shouldUpdateOutput
_settings
_outputChangeHandler
TB,N,S_setShouldUpdateOutput:,V__shouldUpdateOutput
T@"<ISVitalitySettings>",R,N,V_settings
T@?,C,N,V_outputChangeHandler
setReversesMoreVideoFramesInMemory:
setAggressivelyCacheVideoFrames:
setDecodesAllFramesDuringOrdinaryPlayback:
_update
force
isTouching
forceScrubMaximumInteractiveRate
forceScrubRewindFactor
_setActive:
forceScrubMinimumRate
_setPlayRate:
_setDisplayLink:
_updatePlayer
forceScrubMinRateChange
_seekVideoToBeginning
_seekVideoToEnd
_setSeeking:
_handleDidFinishSeeking:
setTouching:
setForce:
_videoDuration
_smoothedVelocity
_touching
__active
__seeking
__playRate
_force
__displayLink
TB,N,S_setActive:,V__active
T@"ISDisplayLink",N,S_setDisplayLink:,V__displayLink
_seeking
TB,N,G_isSeeking,S_setSeeking:,V__seeking
Tf,N,S_setPlayRate:,V__playRate
touching
TB,N,GisTouching,V_touching
Td,N,V_force
TB,R,N,GisPlaying
_ISLiveWallpaperUIViewCommonInitialization
willMoveToWindow:
_handleUpdateTimer
scheduledTimerWithTimeInterval:repeats:block:
setUpdateTimer:
updateTimer
_updateTimer
TB,N,V_touching
T@"NSTimer",&,N,V_updateTimer
T@"ISLiveWallpaperPlayer",&,D,N
_seekToBeginning
frameDidChange
updateAnimation
didBeginAnimating
didEndAnimating
isReadyToDisplay
frameCount
frameCache
frameAtIndex:
_setCurrentFrame:
_resetAnimationState
_notifyDestinationsOfFrameChange
_anyDestinationIsReady
loopCount
_shouldAnimate
sharedTimer
_notifyDestinationsOfAnimationStart
_notifyDestinationsOfAnimationEnd
timestamp
animationTimerFired:
frameDelayAtIndex:
frameAtIndexIfReady:
initWithAnimatedImage:
animatedImage
registerDestination:
unregisterDestination:
currentImage
setPlaying:
setDisplayedFrameIndex:
displayedFrameIndex
allowFrameDrops
setAllowFrameDrops:
_weakDestinations
_image
_timer
_currentImage
_hasStartedAnimating
_hasFinishedAnimating
_timeAccumulator
_previousFrameTime
_infiniteLoop
_remainingLoopCount
_allowFrameDrops
_displayedFrameIndex
T@"PFAnimatedImage",R,N
TB,N,GisPlaying,V_playing
TQ,N,V_displayedFrameIndex
TB,N,V_allowFrameDrops
arrayWithObject:
_willChange
_didChange
_observersQueue_copyChangeObserversForWriteIfNeeded
objectForKey:
weakToStrongObjectsMapTable
initWithOptions:
addPointer:
setObject:forKey:
pointerAtIndex:
_setHasObservers:
removePointerAtIndex:
keyEnumerator
hasObserversDidChange
willPerformChanges
_publishChanges
didPublishChanges
_applyPendingChanges
enumerateObserversUsingBlock:
currentChanges
isPerformingChanges
hasObservers
_nestedChanges
_pendingChangesQueue_pendingChangeBlocks
_numAppliedPendingChanges
_currentChange
_isEnumeratingObservers
_observersQueue
_pendingChangesQueue
_observersQueue_shouldCopyChangeObserversOnWrite
_observersQueue_changeObserversWithContexts
_hasObservers
TB,R,N,V_hasObservers
standardUserDefaults
boolForKey:
performanceDiagnosticsSettings
setDefaultValues
setShouldTracePerformance:
rowWithTitle:valueKeyPath:
sectionWithRows:
actionWithSettingsKeyPath:
rowWithTitle:action:
moduleWithTitle:contents:
settingsControllerModule
shouldTracePerformance
_shouldTracePerformance
TB,N,V_shouldTracePerformance
photoHasColorAdjustments
initWithPhoto:photoIsOriginal:photoEXIFOrientation:photoTime:videoDuration:photoHasColorAdjustments:videoPlayerItem:variationIdentifier:supportsVitality:
_photoHasColorAdjustments
_photoIsOriginal
_supportsVitality
_videoPlayerItem
_variationIdentifier
T{?=qiIq},R,N,V_photoTime
T{?=qiIq},R,N,V_videoDuration
T@"AVPlayerItem",R,N,V_videoPlayerItem
TB,R,N,V_photoHasColorAdjustments
TB,R,N,V_photoIsOriginal
TB,R,N,V_supportsVitality
T@"NSNumber",R,N,V_variationIdentifier
initWithAsset:targetSize:
defaultChef
_videoPlayerItemRequestID
cancelPreparationOfIrisAssetWithRequestID:
numberWithInt:
_performWork:sync:
_performIvarRead:
loadingTarget
_performIvarWrite:
_cancelLoading
_invalidateVideoPlayerItem
_setVideoPlayerItem:videoDuration:
_reloadAllContent
_performWork:
aggressivelyCacheVideoFrames
setAggressivelyCachesVideoFrames:
reversesMoreVideoFramesInMemory
decodesAllFramesDuringOrdinaryPlayback
_updateMinimumClientVersionIfNeeded
_updatePlaybackStyleIdentifierIfNeeded
_updateContentSupportsVitalityIfNeeded
_updateVideoPlayerItemIfNeeded
_updatePlayerContentIfNeeded
_isMinimumClientVersionValid
readMetadataType:fromAVAsset:value:error:
_setMinimumClientVersion:
_minimumClientVersion
stringWithFormat:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
_isPlaybackStyleIdentifierValid
_setVariationIdentifier:
_invalidatePlayerContent
_isContentSupportsVitalityValid
boolValue
setContentSupportsVitality:
_isVideoPlayerItemValid
_handleVideoPlayerItemLoadResultWithSuccess:playerItem:videoDuration:error:
prepareIrisVideoWithAsset:photoTime:trimmedTimeRange:completion:
_setVideoPlayerItemRequestID:
setForwardPlaybackEndTime:
allowFrameBlending
setBlendsVideoFrames:
_isPlayerContentValid
_setPlayerContent:
_isStatusVaild
_isOnWorkQueue
_isOnIvarQueue
currentClientVersion
playerItemWithAsset:targetSize:
cancelLoading
_invalidateMinimumClientVersion
_invalidatePlaybackStyleIdentifier
_invalidateContentSupportsVitality
contentSupportsVitality
_assertOnWorkQueue
_assertOnIvarQueue
targetSize
_isLoadingCancelled
_setLoadingCancelled:
_ivarQueueIdentifier
_workQueueIdentifier
_ivarQueue
_workQueue
_ivarQueue_loadingTarget
_ivarQueue_videoComposition
_ivarQueue_videoPlayerItemRequestID
_ivarQueue_aggressivelyCacheVideoFrames
_ivarQueue_reversesMoreVideoFramesInMemory
_ivarQueue_decodesAllFramesDuringOrdinaryPlayback
_ivarQueue_contentSupportsVitality
_ivarQueue_playerItemPhotoTime
_ivarQueue_playerItemDuration
_ivarQueue_playerContent
_ivarQueue_status
_ivarQueue_videoPlayerItem
_ivarQueue_variationIdentifier
_ivarQueue_minimumClientVersion
_ivarQueue_error
_ivarQueue_isValid
_workQueue_imageGenerator
_workQueue_isGeneratingOffsetImage
__loadingCancelled
_asset
_targetSize
Tq,N,S_setStatus:
T@"NSError",&,N,S_setError:
T@"ISPlayerContent",&,N,S_setPlayerContent:
_loadingCancelled
TB,N,G_isLoadingCancelled,S_setLoadingCancelled:,V__loadingCancelled
Tq,N,S_setVideoPlayerItemRequestID:
T@"NSNumber",&,N,S_setVariationIdentifier:
T@"NSString",&,N,S_setMinimumClientVersion:
TB,N
T@"ISAsset",R,N,V_asset
T{CGSize=dd},R,N,V_targetSize
Tq,N
T@"AVVideoComposition",C,N
setMaxConcurrentOperationCount:
setQualityOfService:
prepareIrisPlayerItemWithAsset:trimmedTimeRange:photoTime:includeVideo:includeAudio:completion:
_currentRequestID
_setCurrentRequestID:
_operationsByRequestID
numberWithInteger:
initWithAsset:trimmedTimeRange:photoTime:includeAudio:includeVideo:resultHandler:
_operationQueue
addOperation:
T@"ISPlayerItemChef",R,N
__operationQueue
__isolationQueue
__operationsByRequestID
__currentRequestID
T@"NSOperationQueue",R,N,V__operationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V__isolationQueue
T@"NSMutableDictionary",R,N,V__operationsByRequestID
Tq,N,S_setCurrentRequestID:,V__currentRequestID
_handleValuesDidLoad
loadValuesAsynchronouslyForKeys:completionHandler:
isCancelled
_preparePlayerItem
includeAudio
resultHandler
statusOfValueForKey:error:
timeRange
insertTimeRange:ofAsset:atTime:error:
objectAtIndexedSubscript:
preferredTransform
setPreferredTransform:
playerItemWithAsset:
setSpeedThresholdForIFrameOnlyPlayback:
audioMixInputParametersWithTrack:
setVolumeRampFromStartVolume:toEndVolume:timeRange:
setInputParameters:
setAudioMix:
setImageQueueInterpolationCurve:
main
trimmedTimeRange
includeVideo
_includeVideo
_includeAudio
_resultHandler
_trimmedTimeRange
T@"AVAsset",R,N,V_asset
T{?={?=qiIq}{?=qiIq}},R,N,V_trimmedTimeRange
TB,R,N,V_includeVideo
TB,R,N,V_includeAudio
T@?,R,C,N,V_resultHandler
stringByAppendingFormat:
videoSize
_videoSize
T{CGSize=dd},R,N,V_videoSize
_transitionDuration
Td,N,V_transitionDuration
playerSettings
setVitalityEaseDuration:
setVitalityEaseMinRate:
setCrossfadeEnabled:
setPrerollBeforePlaying:
setUseDedicatedQueues:
setAllowFrameBlending:
setAllowVideoPreRoll:
setShowStateOverlay:
setForceScrubRewindFactor:
setForceScrubMinRateChange:
setForceScrubMinimumRate:
setForceScrubMaximumInteractiveRate:
setPlayDuringHint:
setScaleDuringPlayback:
setEasingEnabled:
setLongExposureVitality:
minValue:maxValue:
is_increment:
predicateWithFormat:
condition:
possibleValues:titles:
setStartBehavior:
crossfadeEnabled
playDuringHint
useDedicatedQueues
allowVideoPreRoll
_easingEnabled
_scaleDuringPlayback
_loopingEnabled
_crossfadeEnabled
_longExposureVitality
_playDuringHint
_showStateOverlay
_prerollBeforePlaying
_useDedicatedQueues
_allowFrameBlending
_allowVideoPreRoll
_vitalityEaseMinRate
_vitalityEaseDuration
_startBehavior
_forceScrubRewindFactor
_forceScrubMinRateChange
_forceScrubMinimumRate
_forceScrubMaximumInteractiveRate
TB,N,V_easingEnabled
Td,N,V_vitalityEaseDuration
Tf,N,V_vitalityEaseMinRate
Tq,N,V_startBehavior
TB,N,V_scaleDuringPlayback
TB,N,V_loopingEnabled
TB,N,V_crossfadeEnabled
TB,N,V_audioEnabled
TB,N,V_longExposureVitality
TB,N,V_playDuringHint
TB,N,V_showStateOverlay
TB,N,V_prerollBeforePlaying
TB,N,V_useDedicatedQueues
TB,N,V_allowFrameBlending
TB,N,V_allowVideoPreRoll
Td,N,V_forceScrubRewindFactor
Td,N,V_forceScrubMinRateChange
Td,N,V_forceScrubMinimumRate
Td,N,V_forceScrubMaximumInteractiveRate
diagnosticLabel
photoBlurRadius
videoBlurRadius
_diagnosticLabel
_photoBlurRadius
_videoAlpha
_videoBlurRadius
T@"NSString",R,N,V_diagnosticLabel
Td,R,N,V_photoBlurRadius
Td,R,N,V_videoAlpha
Td,R,N,V_videoBlurRadius
prepareWithPlayerItem:
_setPlayerItem:
_invalidatePlayerItemLoadingTarget
_invalidatePlayerView
_playerView
_invalidatePlayerMuted
playerViewPlaybackStateDidChange:
playerViewIsInteractingDidChange:
playerViewGestureRecognizerDidChange:
_invalidatePlayerPlayerItem
_invalidateReadyForDisplay
_activeGestures
_setInteracting:
gestureRecognizers
removeTarget:action:
_handleGesture:
addTarget:action:
_setGestureRecognizer:
_updatePlayerViewIfNeeded
_updatePlayerItemLoadingTargetIfNeeded
_updatePlayerPlayerItemIfNeeded
_updatePlayerMutedIfNeeded
_updatePlaybackStateIfNeeded
_updateReadyForDisplayIfNeeded
playbackStyle
setAutoresizingMask:
_setPlayerView:
audioMuted
_setPlaybackState:
_setReadyForDisplay:
_invalidatePlaybackState
videoPlayerForPlayerView:
setAllowPlayerReuse:
prepareWithPhoto:videoAsset:photoTime:photoEXIFOrientation:
setPlaybackStyle:
setAudioMuted:
gestureRecognizer
isReadyForDisplay
playbackState
isInteracting
_gestureRecognizer
readyForDisplay
dimensionsOfReservedVideoMemory
setDimensionsOfReservedVideoMemory:
_audioMuted
_isReadyForDisplay
_isInteracting
_readyForDisplay
_playbackState
__playerView
__videoPlayer
__playerItem
__gestureRecognizer
__activeGestures
_playbackStyle
_dimensionsOfReservedVideoMemory
T@"ISBasePlayerUIView",&,N,S_setPlayerView:,V__playerView
T@"ISWrappedAVPlayer",R,N,V__videoPlayer
T@"ISPlayerItem",&,N,S_setPlayerItem:,V__playerItem
T@"UIGestureRecognizer",&,N,S_setGestureRecognizer:,V__gestureRecognizer
Tq,N,S_setPlaybackState:,V_playbackState
TB,N,S_setReadyForDisplay:,V_readyForDisplay
T@"NSMutableSet",R,N,V__activeGestures
TQ,N,V_playbackStyle
T{CGSize=dd},N,V_dimensionsOfReservedVideoMemory
TB,N,V_audioMuted
TB,R,N,V_isReadyForDisplay
TB,R,N,V_isInteracting
T@"NSError",R,N,V_error
T@"UIGestureRecognizer",R,N
T@"<ISPlayerViewDelegate>",W,N,V_delegate
_defaultsKey
settingsFromArchiveDictionary:
initWithDefaultValues
vitalitySettings
archiveDictionary
rowWithTitle:childSettingsKeyPath:
save
setPlayerSettings:
setVitalitySettings:
setPerformanceDiagnosticsSettings:
_playerSettings
_vitalitySettings
_performanceDiagnosticsSettings
T@"ISPlayerSettings",&,N,V_playerSettings
T@"ISVitalitySettings",&,N,V_vitalitySettings
T@"ISPerformanceDiagnosticsSettings",&,N,V_performanceDiagnosticsSettings
_playerViews
_isPerformingChanges
_setPerformingChanges:
_updateVitalityFilters
_scrollView
targetContentOffset
hasTargetContentOffset
allObjects
canPerformVitality
isEnabled
visibilityOffsetHelper
setDirection:
getVisibility:offset:targetVisibilityOffset:forView:
_newVitalityFilter
computeVisibilityOffsetsInScrollView:withTargetContentOffset:usingBlock:
addPlayerView:
removePlayerView:
didLayoutPlayerViews
setHasTargetContentOffset:
setTargetContentOffset:
canPerformVitalityDidChange
_setScrollView:
_enabled
__isPerformingChanges
_scrolling
_decelerating
_hasTargetContentOffset
__scrollView
__playerViews
_visibilityOffsetHelper
_targetContentOffset
T@"UIScrollView",W,N,S_setScrollView:,V__scrollView
T@"NSHashTable",R,N,V__playerViews
TB,N,S_setPerformingChanges:,V__isPerformingChanges
scrolling
TB,N,GisScrolling,V_scrolling
decelerating
TB,N,GisDecelerating,V_decelerating
TB,N,V_hasTargetContentOffset
T{CGPoint=dd},N,V_targetContentOffset
T@"ISVisibilityOffsetHelper",R,N,V_visibilityOffsetHelper
enabled
TB,N,GisEnabled,V_enabled
initWithAnimatedImagePlayer:
pixelSize
didMoveToWindow
didMoveToSuperview
setNeedsDisplay
window
isHidden
setContents:
sizeThatFits:
setPlaceholderImageView:
displayLayer:
placeholderImageView
_placeholderImageView
T@"UIImageView",N,V_placeholderImageView
T@"ISAnimatedImagePlayer",&,N,V_player
T@"PFAnimatedImage",&,N
TB,N,GisPlaying
TQ,N
_playbackRequestID
_setPlaybackReaquestID:
_setPlaybackStartDate:
_handleDisplayLink
isTouchActive
_playbackStartDate
_nextPlaybackRequestID
_touchActive
__playbackRequestID
__playbackStartDate
Tq,N,S_setPlaybackReaquestID:,V__playbackRequestID
T@"NSDate",&,N,S_setPlaybackStartDate:,V__playbackStartDate
touchActive
TB,N,GisTouchActive,V_touchActive
_iosInitialization
_iosDealloc
_updateDisplayLink
_iosUpdateDisplayLink
isMainThread
_setTimestamp:
_setForwardingTarget:
_displayLinkFire:
mainRunLoop
_fireTimerWithInterval:
_iosAnimationTimerFired:
_displayLinkProxy
_timestamp
Td,N,S_setTimestamp:,V_timestamp
_forwardingTarget
__forwardingTarget
T@"ISAnimatedImageTimer",W,N,S_setForwardingTarget:,V__forwardingTarget
_touchCount
locationInView:
_setInitialPointInView:
_setTouchCount:
requireSingleTouch
_beginRequestID
_setBeginRequestID:
minimumTouchDuration
_beginWithRequestID:
_incrementTouchesBy:
_decrementTouchesBy:
touchesMoved:withEvent:
_updateDistanceFromInitialPoint
maximumTouchMovement
_initialPointInView
touchesBegan:withEvent:
touchesEnded:withEvent:
touchesCancelled:withEvent:
pressesBegan:withEvent:
pressesChanged:withEvent:
pressesEnded:withEvent:
pressesCancelled:withEvent:
_requireSingleTouch
_minimumTouchDuration
_maximumTouchMovement
_distanceFromInitialPoint
__touchCount
__beginRequestID
__initialPointInView
TQ,N,S_setTouchCount:,V__touchCount
TQ,N,S_setBeginRequestID:,V__beginRequestID
T{CGPoint=dd},N,S_setInitialPointInView:,V__initialPointInView
Td,N,V_minimumTouchDuration
TB,N,V_requireSingleTouch
Td,N,V_maximumTouchMovement
Td,R,N,V_distanceFromInitialPoint
_applyAlpha:blurRadius:toLayer:withTransitionOptions:completion:
setDisableActions:
_applyScale:toLayer:withTransitionOptions:completion:
presentationLayer
animationWithKeyPath:
setToValue:
setDuration:
setFromValue:
removeAnimationForKey:
addAnimation:forKey:
valueForKey:
animationDidStart:
animationDidStop:finished:
T@"ISTransitionApplier",R,N
defaultCenter
_reduceMotionDidChange:
addObserver:selector:name:object:
isPagingEnabled
doubleValue
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
is_vitalityControllerCreateIfNeeded:
is_vitalityController
is_didLayoutPlayerViews
is_scrollViewDelegate
T@"ISUIScrollViewVitalityController",R,N
convertRect:fromView:
visibleRectForScrollView:
boundsForView:inScrollView:
_ISVideoPlayerUIView_commonInitialization
CGColor
setBorderColor:
setBorderWidth:
playerLayer
_updateVideoGravity
setVideoGravity:
_videoLayerReadyForDisplay
T@"ISWrappedAVPlayer",&,N,V_videoPlayer
TB,R,N,V_videoLayerReadyForDisplay
layerClass
_setTargetContentOffset:
_updateDirectionIfNeeded
direction
contentSize
_visibilityRangeForRect:
maximumDistance
maximumDistanceLag
setMaximumDistance:
setMaximumDistanceLag:
_direction
_maximumDistance
_maximumDistanceLag
__targetContentOffset
T@"UIScrollView",&,N,S_setScrollView:,V__scrollView
T{CGPoint=dd},N,S_setTargetContentOffset:,V__targetContentOffset
Tq,N,V_direction
Td,N,V_maximumDistance
Td,N,V_maximumDistanceLag
isDescendantOfView:
inputDidChange
_isPerformingOutputChanges
_setPerformingOutputChanges:
_outputDidChange
_setOutputDidChange:
_invalidateOutput
performOutputChanges:
setScrubbing:
setScrubOffset:
setPlayRate:
isScrubbing
scrubOffset
_scrubbing
__isPerformingInputChanges
__isPerformingOutputChanges
__outputDidChange
_scrubOffset
TB,N,S_setPerformingInputChanges:,V__isPerformingInputChanges
TB,N,S_setPerformingOutputChanges:,V__isPerformingOutputChanges
TB,N,S_setOutputDidChange:,V__outputDidChange
scrubbing
TB,N,GisScrubbing,V_scrubbing
Td,N,V_scrubOffset
Td,N,V_playRate
setUseLegacyBehavior:
setShouldPreroll:
setMinimumVisibilityFactor:
shareViewSettings
activityViewSettings
setPreDuration:
orbPreviewSettings
setPlaybackRate:
sectionWithRows:title:conditionFormat:
useLegacyBehavior
_defaultSettings
behavior
endTimeOffset
maximumDelayBeforePlayback
setOneUpSettings:
setShareViewSettings:
setActivityViewSettings:
setOrbPreviewSettings:
_shouldPreroll
_useLegacyBehavior
_oneUpSettings
_shareViewSettings
_activityViewSettings
_orbPreviewSettings
TB,N,V_useLegacyBehavior
T@"ISVitalitySpecificSettings",&,N,V_oneUpSettings
T@"ISVitalitySpecificSettings",&,N,V_shareViewSettings
T@"ISVitalitySpecificSettings",&,N,V_activityViewSettings
T@"ISVitalitySpecificSettings",&,N,V_orbPreviewSettings
TB,N,V_shouldPreroll
doesNotRecognizeSelector:
setBehavior:
setEndTimeOffset:
setMaximumDelayBeforePlayback:
setPostDuration:
setStartSeekTolerance:
setMinimumPhotoTransitionDuration:
setMaxVitalityDelay:
array
orPredicateWithSubpredicates:
sectionWithRows:title:
_behavior
_preDuration
_postDuration
_startSeekTolerance
_playbackRate
_endTimeOffset
_minimumVisibilityFactor
_maximumDelayBeforePlayback
_maxVitalityDelay
_minimumPhotoTransitionDuration
Tq,N,V_behavior
Td,N,V_preDuration
Td,N,V_postDuration
Td,N,V_startSeekTolerance
Td,N,V_playbackRate
Td,N,V_endTimeOffset
Td,N,V_minimumVisibilityFactor
Td,N,V_maximumDelayBeforePlayback
Td,N,V_maxVitalityDelay
Td,N,V_minimumPhotoTransitionDuration
sharedAmbientInstance
sharedPlaybackInstance
sharedPhotosOneUpInstance
initWithAudioSession:
category
initWithFormat:
_beginObservingOutputVolumeIfNeeded
_endObservingOutputVolumeIfNeeded
outputVolume
setCategory:error:
setActive:error:
removeObserver:forKeyPath:context:
outputVolumeChangeHandler
sharedAmbientInstanceWithLoadHandler:
sharedPlaybackInstanceWithLoadHandler:
sharedPhotosOneUpInstanceWithLoadHandler:
T@"ISWrappedAVAudioSession",R,N
setOutputVolumeChangeHandler:
setCategory:options:error:
audioSession
_didBeginObservingOutputVolume
_outputVolumeChangeHandler
_audioSession
T@"AVAudioSession",R,N,V_audioSession
T@?,C,N,V_outputVolumeChangeHandler
T@"NSString",R,N
Tf,R,N
observedAVPlayerKeys
_playerQueue_avPlayer
setAllowsExternalPlayback:
_performPlayerTransaction:
_playerItemDidPlayToEnd:
addObserverForName:object:queue:usingBlock:
dictionaryWithCapacity:
enumerateKeysAndObjectsUsingBlock:
removeObserver:
_nextObserverUID
addPeriodicTimeObserverForInterval:queue:usingBlock:
observedAVPlayerItemKeys
object
null
_nilOrValue:
_playerQueue_startObservingPlayerItem:
CMTimeValue
_playerQueue_updatePlayerItemAudioTracksEnabled
suppressesAudioRendering
_setSuppressesAudioRendering:
assetTrack
mediaType
isLoopingEnabled
setLoopTimeRange:
setRate:time:atHostTime:
pause
loopTimeRange
_playerQueue_stopObservingPlayerItem:
setItemBlendsVideoFrames:
currentItemDuration
currentItemPlaybackBufferFull
currentItemPlaybackBufferEmpty
currentItemIsLikelyToKeepUp
currentItemVideoComposition
preventsSleepDuringVideoPlayback
setSuppressesAudioRendering:
setLoopingEnabled:withTemplateItem:
setPreventsSleepDuringVideoPlayback:
_avPlayerQueue
_delegateQueue
_playerQueue_wrappedAudioSession
_playerQueue_playerItemDidPlayToEndObserver
_ivarQueue_currentItem
_ivarQueue_rate
_ivarQueue_volume
_ivarQueue_loopTimeRange
_ivarQueue_loopingEnabled
_ivarQueue_audioEnabled
_ivarQueue_preventsSleepDuringVideoPlayback
_ivarQueue_suppressesAudioRendering
_ivarQueue_itemStatus
_ivarQueue_itemError
_ivarQueue_itemForwardPlaybackEndTime
_ivarQueue_itemDuration
_ivarQueue_itemPlaybackBufferFull
_ivarQueue_itemVideoComposition
_ivarQueue_itemIsLikelyToKeepUp
_ivarQueue_itemPlaybackBufferEmpty
_observersByID
_playerKVOIdentifier
_playerItemKVOIdentifier
TB,GisLoopingEnabled
T@"<ISWrappedAVPlayerDelegate>",W,V_delegate
setValueValidatator:
is_actionForKey:
B16@0:8
v16@0:8
v24@0:8d16
d16@0:8
v24@0:8@16
@16@0:8
@24@0:8@16
v20@0:8f16
v60@0:8{?=qiIq}16f40d44@?52
@"ISRateCurveRequest"
@"NSObject<OS_dispatch_queue>"
@68@0:8{?=qiIq}16d40f48@52@?60
{?=qiIq}16@0:8
f16@0:8
@?16@0:8
{?="value"q"timescale"i"flags"I"epoch"q}
@"ISAVPlayer"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8@?16
@32@0:8@16^@24
@48@0:8@16^{CGImage=}24d32Q40
@40@0:8@16^{CGImage=}24d32
@44@0:8@16^{CGImage=}24d32i40
@52@0:8@16^{CGImage=}24d32i40Q44
@52@0:8@16@24d32i40Q44
^{CGImage=}16@0:8
i16@0:8
Q16@0:8
@"AVAsset"
^{CGImage=}
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16Q24^v32
v40@0:8@"ISObservable"16Q24^v32
v32@0:8@16@24
v32@0:8@"ISWrappedAVPlayer"16@"AVPlayerItem"24
v20@0:8B16
v40@0:8d16@24@?32
v48@0:8@16@24@32@?40
v24@0:8q16
v40@0:8{?=qiIq}16
v28@0:8@16f24
B56@0:8@16{?=qiIq}24@?48
B104@0:8@16{?=qiIq}24{?=qiIq}48{?=qiIq}72@?96
B36@0:8@16f24@?28
v48@0:8@16{?=qiIq}24
@48@0:8@16@24@32@?40
v68@0:8@16{?=qiIq}24f48d52@?60
q16@0:8
@"AVPlayer"
@"NSHashTable"
@"NSString"
{?="videoPlayer"B"videoPlayerVolume"B"contentFromPlayerItem"B"willPlayToEndObserver"B"willPlayToPhotoObserver"B"status"B}
@"ISPlayerItem"
@"NSError"
@"<ISBasePlayerDelegate>"
@"ISWrappedAVPlayer"
@"ISBehavior"
@"ISPlayerState"
@"ISPlayerOutputContent"
v40@0:8@16@24@?32
v40@0:8d16@"ISPlayerOutputTransitionOptions"24@?<v@?B>32
v40@0:8@"ISPlayerState"16@"ISPlayerOutputTransitionOptions"24@?<v@?B>32
v24@0:8@"ISPlayerOutputContent"16
@?<v@?>16@0:8
v24@0:8@?<v@?>16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8{CGPoint=dd}16
v32@0:8Q16d24
{CGPoint=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{?="didChangeWithAnimationDuration"B}
@"ISBasePlayer"
@"UIView"
@"UIImage"
@"CAMeshTransform"
@"CAFilter"
@"ISWrappedAVAudioSession"
@"<ISBasePlayerUIViewChangeObserver>"
@"ISVideoPlayerUIView"
@"UIImageView"
{CGPoint="x"d"y"d}
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
B48@0:8{?=qiIq}16@?40
B96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@?88
B28@0:8f16@?20
@"<ISBehaviorDelegate>"
v32@0:8@16d24
@32@0:8@?16@?24
@"CADisplayLink"
@"NSDate"
@48@0:8@16@24@32@40
@"NSMutableDictionary"
v48@0:8@16@24@32^v40
@"NSArray"
@"<ISKVOProxyDelegate>"
@32@0:8@16@24
@"ISKVOProxy"
@112@0:8@16{?=qiIq}24{?={?=qiIq}{?=qiIq}}48d96B104B108
{?={?=qiIq}{?=qiIq}}16@0:8
{?="respondsToDidFinish"B"respondsToDidBeginPlaying"B}
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
v28@0:8B16@20
@"NSMutableSet"
v48@0:8@"ISBehavior"16@"ISPlayerState"24@"ISPlayerOutputTransitionOptions"32@?<v@?B>40
v28@0:8@"ISBehavior"16f24
B56@0:8@"ISBehavior"16{?=qiIq}24@?<v@?B>48
B104@0:8@"ISBehavior"16{?=qiIq}24{?=qiIq}48{?=qiIq}72@?<v@?B>96
B36@0:8@"ISBehavior"16f24@?<v@?B>28
v48@0:8@"ISBehavior"16{?=qiIq}24
v68@0:8@"ISBehavior"16{?=qiIq}24f48d52@?<v@?d{?=qiIq}>60
@48@0:8@"ISBehavior"16@"NSArray"24@"NSObject<OS_dispatch_queue>"32@?<v@?>40
v32@0:8@"ISBehavior"16@24
B24@0:8@"ISBehavior"16
v24@0:8@"ISLivePhotoSettleBehavior"16
v28@0:8q16B24
v48@0:8{?=qiIq}16@?40
v64@0:8{?={?=qiIq}{?=qiIq}}16
{?="scale"B"apertureMode"B}
@"ISLivePhotoVitalityFilter"
@48@0:8@16{?=qiIq}24
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
{?="canBeginInteractivePlayback"B}
@"UIGestureRecognizer"
@"<ISLivePhotoUIViewDelegate>"
@"ISTouchLivePhotoPlaybackFilter"
@"UILabel"
@96@0:8@16{?=qiIq}24{?=qiIq}48f72d76B84Q88
@"<ISVitalitySettings>"
@"ISDisplayLink"
@"NSTimer"
v24@0:8^{CGImage=}16
v24@0:8Q16
@"PFAnimatedImage"
@"ISAnimatedImageTimer"
v32@0:8@16^v24
@"NSMutableArray"
@"NSMapTable"
@104@0:8^{CGImage=}16B24i28{?=qiIq}32{?=qiIq}56B80@84@92B100
@"AVPlayerItem"
@"NSNumber"
@40@0:8@16{CGSize=dd}24
v60@0:8B16@20{?=qiIq}28@52
v28@0:8@?16B24
{CGSize=dd}16@0:8
@"AVVideoComposition"
@"ISPlayerContent"
{?="videoPlayerItem"B"status"B"content"B"minimumClientVersion"B"playbackStyleIdentifier"B"contentSupportsVitality"B}
@"AVAssetImageGenerator"
@"ISAsset"
{CGSize="width"d"height"d}
q104@0:8@16{?=qiIq}24{?={?=qiIq}{?=qiIq}}48@?96
q112@0:8@16{?={?=qiIq}{?=qiIq}}24{?=qiIq}72B96B100@?104
@"NSOperationQueue"
@112@0:8@16{?={?=qiIq}{?=qiIq}}24{?=qiIq}72B96B100@?104
@56@0:8^{CGImage=}16B24i28@32{CGSize=dd}40
@48@0:8d16d24d32@40
@"AVPlayer"24@0:8@"ISBasePlayer"16
v44@0:8^{CGImage=}16@24d32i40
v32@0:8{CGSize=dd}16
{?="playbackStateDidChange"B"interactingDidChange"B"gestureRecognizerDidChange"B}
{?="playerItemLoadingTarget"B"playerPlayerItem"B"playerView"B"playerMuted"B"status"B"readyForDisplay"B"playbackState"B}
@"<ISPlayerViewDelegate>"
@"ISBasePlayerUIView"
@"ISPlayerSettings"
@"ISVitalitySettings"
@"ISPerformanceDiagnosticsSettings"
@"UIScrollView"
@"ISVisibilityOffsetHelper"
{CGSize=dd}32@0:8{CGSize=dd}16
@"ISAnimatedImagePlayer"
@"_ISAnimatedImageTimerForwardingProxy"
@32@0:8@16:24
v28@0:8@16B24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
v56@0:8@16@24@32@40@?48
v56@0:8d16@24@32@40@?48
v56@0:8d16d24@32@40@?48
v48@0:8d16@24@32@?40
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
@"ISUIVisibilityOffsetHelper"
@20@0:8B16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
@"ISAVPlayerUIView"
v48@0:8^B16^d24^d32@40
v48@0:8^B16^d24^d32@"NSObject<ISAnonymousView>"40
v48@0:8@16{CGPoint=dd}24@?40
{ISVisibilityRange=dd}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"ISVitalitySpecificSettings"
B32@0:8@16^@24
B28@0:8B16^@20
B40@0:8@16Q24^@32
B56@0:8@16@24Q32Q40^@48
@"AVAudioSession"
v40@0:8@16@24@32
v40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
@56@0:8{?=qiIq}16@40@?48
@40@0:8@16@24@?32
v68@0:8f16{?=qiIq}20{?=qiIq}44
v32@0:8@16@?24
v96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@?88
v28@0:8f16@?20
@"<ISWrappedAVPlayerDelegate>"
@24@0:8d16
333333
333333
A333333
?333333
?333333
?333333
333333
ffffff
?ffffff
(@(#)PROGRAM:PhotosPlayer  PROJECT:PhotosPlayer-440.0.170
filters.LivePhotoBlur.inputRadius
LivePhotoBlur
filters.LivePhotoBlur
inputRadius
inputHardEdges
medium
inputQuality
SpringBoard
PhotosPlayer.disablePrivatePlayerQueue
com.apple.mobileslideshow
PhotosPlayer.enablePixelBufferPoolSharing
com.apple.photosplayer.avplayerlayer.isolation
readyForDisplay
Photo: %@
Video: %@
v16@?0@"<ISBasePlayerOutput>"8
com.apple.ISLivePhotoUIView.audiosession
vitalityBlur
opacity
Idle
Playing
Hinting Vitality
Vitality
Hinting
Settling
Default
com.apple.photos.deferred-dealloc
com.apple.photosplayer.kvoproxyrecords
END HINT
SHOW VIDEO PLAYBACK
v16@?0@"ISLivePhotoVitalityFilter"8
v24@?0@8^B16
v24@?0@"ISLivePhotoPlaybackFilter"8^B16
PlayerNotReady
v16@?0@"ISLivePhotoPlayer"8
SEEK
SETTLE
ConfiguringAudioSession
Hint
Full
v12@?0B8
Show video for vitality
Vitality End
Continue Vitality
WALLPAPER PLAY
v16@?0^B8
WALLPAPER STOP
com.apple.livewallpaperplayer
v16@?0@"NSTimer"8
com.apple.PhotosPlayer
Generic
com.apple.photosplayer.observable.internal-queue
com.apple.photosplayer.observable.pending-change-queue
v32@?0@"<ISChangeObserver>"8^v16^B24
Trace Performance
shouldTracePerformance
Restore Defaults
Performance Diagnostics
None
Playback
com.apple.ISPlayerItem.state
com.apple.ISPlayerItem.work
v16@?0@"ISPlayerItem"8
v16@?0@8
The current client version of PhotosPlayer is %d, but the media in %@ requires version >= %@
com.apple.irisassetisolation
v52@?0B8@"AVPlayerItem"12{?=qiIq}20@"NSError"44
com.apple.playeritemchef
tracks
duration
metadata
v32@?0@"AVMutableCompositionTrack"8Q16^B24
 photo: %@, orientation: %d, video player: %@
duration:
Easing Enabled
easingEnabled
Long Exposure Vitality
longExposureVitality
Vitality Ease Duration
vitalityEaseDuration
easingEnabled == YES
Vitality Ease Min Rate
vitalityEaseMinRate
startBehavior
from the beginning
from the photo
Scale During Playback
scaleDuringPlayback
Looping Enabled
loopingEnabled
Crossfade Enabled
crossfadeEnabled
loopingEnabled == YES
Audio Enabled
audioEnabled
Sticky Play
playIsSticky
State Overlay
showStateOverlay
Live Hint
playDuringHint
Use Dedicated Queues
useDedicatedQueues
Preroll Before Playing
prerollBeforePlaying
Frame Blending
allowFrameBlending
Video Preroll
allowVideoPreRoll
Force Scrub Rewind Factor
forceScrubRewindFactor
Force Scrub Min Rate Change
forceScrubMinRateChange
Force Scrub Minimum Rate
forceScrubMinimumRate
Force Scrub Maximum Interactive Rate
forceScrubMaximumInteractiveRate
Player
label:
photo:
      b:%f
video:
a:%f, b:%f
SettingsArchiveKey
SettingsVersionKey
playerSettings
vitalitySettings
performanceDiagnosticsSettings
Restore All Defaults
PhotosPlayer
com.apple.Photos
v16@?0@"<ISVisibilityOffsetComputer>"8
v16@?0@"ISAnimatedImageTimer"8
transform.scale
ISTransitionApplierAnimationCompletionHandlerKey
_pagingFriction
com.apple.photosplayer.scrollviewvitalitycontroller
d24@?0{ISVisibilityRange=dd}8
Use Legacy Behavior
useLegacyBehavior
Preroll
shouldPreroll
One Up
oneUpSettings
Share View
shareViewSettings
Activity View
activityViewSettings
Specific Settings
useLegacyBehavior == 0
@"NSCompoundPredicate"16@?0@"NSArray"8
behavior == %@
Max Delay
maxVitalityDelay
Min. Photo Transition Duration
minimumPhotoTransitionDuration
Behavior
behavior
Legacy
Constant
Simple
Adaptive
Autoplay
Start Seek Tolerance
startSeekTolerance
Post Duration
postDuration
Pre Duration
preDuration
Playback Rate
playbackRate
End Time Offset
endTimeOffset
Minimum Visibility
minimumVisibilityFactor
Maximum Delay Before Playback
maximumDelayBeforePlayback
Settings
Vitality Behavior
<%@ %p; %@>
outputVolume
status
rate
error
currentItem
volume
videoComposition
forwardPlaybackEndTime
playbackLikelyToKeepUp
playbackBufferFull
playbackBufferEmpty
v8@?0
com.apple.photosplayer.avplayerwrapper.ivars
v16@?0@"ISWrappedAVPlayer"8
v16@?0@"NSNotification"8
com.apple.photosplayer.wrappedAVPlayer.stateDispatch
v32@?0@8@16^B24
avPlayerWrapperObserverID-%d
com.apple.photosplayer
@24@?0@8@16
ACTIVE BEHAVIOR: %@
%@: will apply scale %.2f
options: %@
%@: will apply output info: %@ - %@
options: %@
%@: will add video observer for will-end time: %f
%@: will add video observer for will-play-to-photo time: %f
Ignoring output from behavior that is not active: %@
%@: will set video rate: %@ - %f
%@: will seek video to time: %@ - %f
%@: did seek video to time: %@ - %f
%@: unable to seek video to time: %@ - %f
%@: will set video preroll rate: %@ - %f
%@: will set video end time: %@ - %f
%@: will set video volume: %@ - %f
Failed configuring AVAudioSession for Live Photo playback. Error: %@
ISAnimatedImagePlayer: Attempted to seek an empty PFAnimatedImage to the beginning
ISAnimatedImagePlayer: Reached end of loop. Stopping
ISAnimatedImagePlayer: Dropped a frame
Change depth limit almost reached
%@ did receive error: %@
Unable to read minimum client version from source video: %@. Error: %@
Unable to read playback style identifier from asset: %@. Error: %@
Unable to read vitality style identifier from asset: %@. Error: %@
Property loading status:%ld error:%@
Error inserting asset contents into composition: %@
Unable to configure Ambient audio session. Error: %@
Unable to configure Playback audio session. Error: %@
-[ISWrappedAVPlayer _initWithAVPlayer:] expected existing player to not have currentItem set
%@ is not supported on watchOS.
-[ISWrappedAVPlayer setActionAtItemEnd:] ignoring AVPlayerActionAtItemEndAdvance argument because the underlying player is not an AVQueuePlayer. This should not be necessary if you are setting loopingEnabled or loopTimeRange.
PhotosPlayer
ISAVPlayer
ISRateCurveRequest
ISAVPlayerLayer
ISAsset
ISBasePlayer
ISChangeObserver
NSObject
ISWrappedAVPlayerDelegate
ISBasePlayerUIView
ISBasePlayerOutput
ISBehavior
ISDefaultBehavior
ISDeferredDealloc
ISDisplayLink
ISLivePhotoAutoplayVitalityFilter
ISKVOProxyManager
ISKVOProxy
ISKVOProxyRecord
ISLivePhotoPlaybackBehavior
ISLivePhotoPlaybackFilter
ISLivePhotoPlayer
ISLivePhotoSettleBehaviorDelegate
ISBehaviorDelegate
ISLivePhotoSeekBehavior
ISLivePhotoSettleBehavior
ISLivePhotoUIView
UIGestureRecognizerDelegate
ISLivePhotoVitalityBehavior
ISLivePhotoVitalityFilter
ISLiveWallpaperPlayer
ISLiveWallpaperUIView
ISAnimatedImagePlayer
ISObservable
ISPerformanceDiagnosticsSettings
ISPlayerContent
ISPlayerItem
ISPlayerItemChef
_ISPlayerItemChefOperation
ISPlayerOutputContent
ISPlayerOutputTransitionOptions
ISPlayerSettings
ISPlayerState
ISPlayerView
ISBasePlayerDelegate
ISAnimatedImage
ISRootSettings
ISScrollViewVitalityController
ISAnimatedImageView
ISAnimatedImagePlayerDestination
ISSettings
ISTouchLivePhotoPlaybackFilter
ISAnimatedImageTimer
_ISAnimatedImageTimerForwardingProxy
ISTouchingGestureRecognizer
ISTransitionApplier
CAAnimationDelegate
ISUIScrollViewVitalityController
UIScrollViewDelegate
ISUIVisibilityOffsetHelper
ISVideoPlayerUIView
ISAVPlayerUIView
ISVisibilityOffsetHelper
ISVisibilityOffsetComputer
ISVitalityConstantFilter
ISVitalityFilter
ISVitalitySettings
ISVitalitySpecificSettings
ISWrappedAVAudioSession
ISWrappedAVPlayer
ISKVOProxyDelegate
asset
tracksWithMediaType:
firstObject
nominalFrameRate
tracks
countByEnumeratingWithState:objects:count:
setDisableColorMatching:
is_isHighFramerate
is_enableColorMatching
is_highFramerate
TB,R,N,Gis_isHighFramerate
is_addBlurFilterIfNeeded
numberWithDouble:
setValue:forKeyPath:
valueForKeyPath:
floatValue
_is_blurFilter
filterWithType:
setName:
setCachesInputImage:
setValue:forKey:
_is_setBlurFilter:
arrayWithObjects:count:
filters
arrayByAddingObjectsFromArray:
setFilters:
containsObject:
mutableCopy
removeObject:
copy
is_setBlurRadius:
is_blurRadius
is_addFilter:
is_removeFilter:
_is_removeBlurFilterIfNeeded
Td,N,Sis_setBlurRadius:
processInfo
processName
isEqualToString:
_cancelRateCurveRequest
dealloc
init
isSpringBoard
isAppleInternal
initWithDispatchQueue:
setAllowsPixelBufferPoolSharing:
setClosedCaptionDisplayEnabled:
setActionAtItemEnd:
_setRate:
setRate:
initWithTargetTime:duration:initialRate:avPlayer:progressHandler:
start
cancel
dispatchQueue
playToTime:withInitialRate:overDuration:progressHandler:
actualDispatchQueue
.cxx_destruct
_currentRequest
_initializedDispatchQueue
_actualDispatchQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_actualDispatchQueue
avPlayer
currentTime
arrayWithCapacity:
valueWithCMTime:
addObject:
_stepDownRate
addBoundaryTimeObserverForTimes:queue:usingBlock:
progressHandler
sharedInstance
vitalityEaseMinRate
seekToTime:toleranceBefore:toleranceAfter:
_stopObservingPlayer
removeTimeObserver:
_didReachTargetTime
targetTime
duration
initialRate
_startTime
_startVideoTime
_cancelled
_boundaryObserver
_stepInterval
_stepIndex
_initialRate
_duration
_avPlayer
_progressHandler
_targetTime
T{?=qiIq},R,N,V_targetTime
Td,R,N,V_duration
Tf,R,N,V_initialRate
T@"ISAVPlayer",R,W,N,V_avPlayer
T@?,R,C,N,V_progressHandler
didChangeValueForKey:
readyForDisplayChangeHandler
player
_performDeferredDealloc:
bounds
setBounds:
setPlayer:
attachToPlayerLayerIfNeeded:
deferredDealloc
setWrappedPlayer:
setReadyForDisplayChangeHandler:
_isolationQueue
_readyForDisplayChangeHandler
T@?,C,N,V_readyForDisplayChangeHandler
description
stringWithString:
photo
appendFormat:
videoAsset
initWithVideoAsset:photo:photoTime:photoEXIFOrientation:options:
CGImage
photoTime
initWithBundleAtURL:
imagePath
videoPath
imageDisplayTime
initWithContentsOfFile:
fileURLWithPath:
assetWithURL:
imageOrientation
initWithVideoAsset:photo:photoTime:photoEXIFOrientation:
options
assetForURL:error:
initWithVideoAsset:photo:photoTime:options:
initWithVideoAsset:photo:photoTime:
initWithVideoAsset:UIImage:photoTime:photoEXIFOrientation:options:
photoCMTime
resetAVObjects
hasColorAdjustments
photoEXIFOrientation
_UIImage
_photoEXIFOrientation
_videoAsset
_photo
_photoTime
_options
T@"AVAsset",R,C,N,V_videoAsset
T^{CGImage=},R,N,V_photo
Td,R,N,V_photoTime
T{?=qiIq},R,N
Ti,R,N,V_photoEXIFOrientation
TQ,R,N,V_options
TB,R,N
initWithVideoPlayer:
weakObjectsHashTable
setActiveBehavior:
setDelegate:
cancelPendingPrerolls
_setVideoPlayer:
unregisterChangeObserver:context:
registerChangeObserver:context:
configurePlayerItem
_invalidateVideoPlayer
_invalidateContentFromPlayerItem
playerItemDidChange
performChanges:
_invalidateStatus
_invalidateWillPlayToEndObserver
_invalidateWillPlayToPhotoObserver
setVideoLayerReadyForDisplayChangeHandler:
_outputVideoReadyForDisplayDidChange:
didAddOutput:
willRemoveOutput:
activeBehavior
videoReadyForDisplayDidChange
isVideoReadyForDisplay
videoLayersReadyForDisplay
_configureNewOutput:
setContent:
videoDidPlayToEnd
videoWillPlayToPhoto
videoWillPlayToEnd
_invalidateVideoPlayerVolume
resignActive
becomeActive
activeBehaviorDidChange
_setLastAppliedScale:
applyScale:withTransitionOptions:completion:
enumerateOutputsWithBlock:
_setLastAppliedLayoutInfo:
applyOutputInfo:withTransitionOptions:completion:
_outputContent
lastAppliedLayoutInfo
playerItem
playerContent
photoIsOriginal
videoPlayer
videoPlayerItem
currentItem
apertureMode
setVideoApertureMode:
replaceCurrentItemWithPlayerItem:
initWithPhoto:photoIsOriginal:photoEXIFOrientation:videoPlayer:videoSize:
_setOutputContent:
_videoForwardPlaybackEndTime
videoDuration
_videoWillPlayToEndObserver
videoWillPlayToEndInterval
_videoWillPlayToEnd
_setVideoWillPlayToEndObserver:
_videoWillPlayToPhotoObserver
videoWillPlayToPhotoInterval
_videoWillPlayToPhoto
_setVideoWillPlayToPhotoObserver:
status
currentItemStatus
_handleErrorsIfNeeded
_setStatus:
statusDidChange
signalChange:
itemForwardPlaybackEndTime
setItemForwardEndPlaybackTime:
didPerformChanges
_updateIfNeeded
_needsUpdate
_updateVideoPlayerIfNeeded
_updateStatusIfNeeded
_updateVideoPlayerVolumeIfNeeded
_updateContentFromPlayerItemIfNeeded
_updateWillPlayToEndObserverIfNeeded
_updateWillPlayToPhotoObserverIfNeeded
isAudioEnabled
videoVolume
audioVolume
setVolume:
setAudioEnabled:
_initWithAVPlayer:
error
currentItemError
_setError:
domain
code
_mainQueue_handleMediaServicesReset
_mainQueue_resetAVObjectsWithResetCount:
delegate
videoPlayerForPlayer:
replaceCurrentItemWithPlayerItem:thenCall:
applyOutputInfo:fromBehavior:withTransitionOptions:completion:
rate
behavior:seekVideoPlayerToTime:toleranceBefore:toleranceAfter:completionHandler:
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
prerollAtRate:completionHandler:
_setForwardPlaybackEndTime:
setVideoVolume:
_videoDidPlayToEnd
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
observable:didChange:context:
avPlayer:itemDidPlayToEnd:
mutableChangeObject
setPlayerItem:
addOutput:
removeOutput:
behaviorIsVideoReadyForDisplay:
setAudioVolume:
setApertureMode:
behavior:didSetOutputInfo:withTransitionOptions:completion:
behavior:setVideoPlayRate:
videoPlayRate
behavior:seekVideoPlayerToTime:completionHandler:
behavior:prerollVideoAtRate:completionHandler:
behavior:setVideoForwardPlaybackEndTime:
behavior:setVideoVolume:
behavior:addBoundaryTimeObserverForTimes:queue:usingBlock:
behavior:removeTimeObserver:
behavior:playVideoToTime:initialRate:overDuration:progressHandler:
lastAppliedScale
_setVideoForwardPlaybackEndTime:
_videoVolume
_providedAVPlayer
_outputQueue
_outputs
_apertureMode
_isValid
_mainQueue_mediaServicesResetCounter
_audioEnabled
_audioVolume
_playerItem
_status
_error
_delegate
_videoPlayer
_activeBehavior
__videoWillPlayToEndObserver
__videoWillPlayToPhotoObserver
_lastAppliedLayoutInfo
__outputContent
_lastAppliedScale
__videoForwardPlaybackEndTime
T@"ISBehavior",&,N,SsetActiveBehavior:,V_activeBehavior
T@,&,N,S_setVideoWillPlayToEndObserver:,V__videoWillPlayToEndObserver
T@,&,N,S_setVideoWillPlayToPhotoObserver:,V__videoWillPlayToPhotoObserver
T@"ISPlayerState",&,N,S_setLastAppliedLayoutInfo:,V_lastAppliedLayoutInfo
T@"ISPlayerOutputContent",&,N,S_setOutputContent:,V__outputContent
Td,N,S_setLastAppliedScale:,V_lastAppliedScale
Tq,N,S_setStatus:,V_status
T{?=qiIq},N,S_setVideoForwardPlaybackEndTime:,V__videoForwardPlaybackEndTime
T@"NSError",&,N,S_setError:,V_error
T@"ISPlayerItem",&,N,V_playerItem
Tf,N,V_audioVolume
audioEnabled
TB,N,GisAudioEnabled,V_audioEnabled
T@"<ISBasePlayerDelegate>",W,N,V_delegate
T@"ISWrappedAVPlayer",R,N,V_videoPlayer
initWithFrame:
_performCommonInitialization
initWithCoder:
auxiliarySession
setCategory:mode:routeSharingPolicy:options:error:
_setWrappedAudioSession:
setClipsToBounds:
addSubview:
layer
setContentsRect:
_videoViewReadyForDisplayDidChange
_changeObserver
_setChangeObserver:
basePlayerUIView:didChange:withAnimationDuration:
begin
disableActions
videoView
setMeshTransform:
mainScreen
scale
setRasterizationScale:
videoTransform
videoBlurView
setHidden:
commit
layoutSubviews
containerView
photoView
customPhotoView
videoContainerView
contentMode
image
size
setFrame:
setCenter:
setContentMode:
_updateVideoViewsFrameWithContainerBounds:
scaleAnchorOffset
setAnchorPoint:
center
setNeedsLayout
removeFromSuperview
_updatePhotoView
audioSessionDidChange
_updatePlayerAudioSession
videoLayerReadyForDisplay
videoLayerReadyForDisplayChangeHandler
playerDidChange
wrappedAudioSession
setWrappedAudioSession:
contentsRect
traitCollection
displayScale
layoutIfNeeded
defaultApplier
applyScale:withTransitionOptions:toPhotoLayer:videoLayer:completion:
isDisplayingPhoto
applyOutputInfo:withTransitionOptions:toPhotoLayer:videoLayer:completion:
videoAlpha
setValue:forKeyPath:ofLayer:withTransitionOptions:completion:
transitionDuration
_signalChange:withAnimationDuration:
overrideImage
setImage:
initWithCGImage:scale:orientation:
setVideoPlayer:
alpha
videoComposition
initWithAsset:
setMaximumSize:
setAppliesPreferredTrackTransform:
setRequestedTimeToleranceAfter:
setRequestedTimeToleranceBefore:
setVideoComposition:
copyCGImageAtTime:actualTime:error:
initWithCGImage:
superview
insertSubview:atIndex:
playerClass
T@?,C,N
registerChangeObserver:
unregisterChangeObserver:
setVideoTransform:
setVideoFilter:
setCustomPhotoView:
setScaleAnchorOffset:
generateSnapshotImage
setOverrideImage:
contentDidChange
videoFilter
_audioSessionQueue
_content
_changeObserverRespondsTo
_player
_customPhotoView
_overrideImage
_videoLayerReadyForDisplayChangeHandler
_videoTransform
_videoFilter
_containerView
_videoContainerView
_wrappedAudioSession
__changeObserver
_videoBlurView
_photoView
_videoView
_scaleAnchorOffset
_contentsRect
T@"UIView",R,N,V_containerView
T@"UIView",R,N,V_videoContainerView
T@"ISWrappedAVAudioSession",&,N,S_setWrappedAudioSession:,V_wrappedAudioSession
T@"<ISBasePlayerUIViewChangeObserver>",W,N,S_setChangeObserver:,V__changeObserver
T@"ISVideoPlayerUIView",R,N,V_videoBlurView
T@"UIImageView",R,N,V_photoView
T@"ISVideoPlayerUIView",R,N,V_videoView
T@"ISBasePlayer",&,N,V_player
T{CGPoint=dd},N,V_scaleAnchorOffset
T@"UIView",&,N,V_customPhotoView
T@"UIImage",&,N,V_overrideImage
displayingPhoto
TB,R,N,GisDisplayingPhoto
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_contentsRect
T@?,C,N,V_videoLayerReadyForDisplayChangeHandler
T@"CAMeshTransform",C,N,V_videoTransform
T@"CAFilter",&,N,V_videoFilter
activeDidChange
initWithInitialLayoutInfo:
behaviorType
videoPlayerItemDidChange
setOutputInfo:withTransitionOptions:completion:
setVideoPlayRate:
seekVideoPlayerToTime:completionHandler:
seekVideoPlayerToTime:toleranceBefore:toleranceAfter:completionHandler:
prerollVideoAtRate:completionHandler:
setVideoForwardPlaybackEndTime:
initialLayoutInfo
isActive
_active
_initialLayoutInfo
active
TB,R,N,GisActive,V_active
T@"<ISBehaviorDelegate>",W,N,V_delegate
T@"ISPlayerState",R,N,V_initialLayoutInfo
Tq,R,N
_showPhoto
initWithPhotoBlurRadius:videoAlpha:videoBlurRadius:label:
_performDeferredDealloc:withDelay:
_deferredDeallocQueue
setUpdateHandler:
setCompletionHandler:
_update:
displayLinkWithTarget:selector:
setDisplayLink:
displayLink
currentRunLoop
addToRunLoop:forMode:
setPreferredFramesPerSecond:
completionHandler
invalidate
updateHandler
stop
_callUpdateHandler
initWithUpdateHandler:completionHandler:
preferredFramesPerSecond
_preferredFramesPerSecond
_updateHandler
_completionHandler
_displayLink
T@?,C,N,V_updateHandler
T@?,C,N,V_completionHandler
T@"CADisplayLink",&,N,V_displayLink
Tq,N,V_preferredFramesPerSecond
invalidateOutput
updateOutput
isScrolling
isVisible
_setState:
isDecelerating
_state
hasTargetVisibilityOffset
targetVisibilityOffset
visibilityOffset
settings
minimumVisibilityFactor
setState:
setScrolling:
setEstimatedScrollEndDate:
setDecelerating:
setTargetVisibilityOffset:
setHasTargetVisibilityOffset:
setVisibilityOffset:
setVisible:
estimatedScrollEndDate
_isVisible
_hasTargetVisibilityOffset
_isScrolling
_isDecelerating
_visibilityOffset
_targetVisibilityOffset
_estimatedScrollEndDate
__state
Tq,N,S_setState:,V__state
TB,N,SsetVisible:,V_isVisible
Td,N,V_visibilityOffset
TB,N,V_hasTargetVisibilityOffset
Td,N,V_targetVisibilityOffset
T@"NSDate",&,N,V_estimatedScrollEndDate
TB,N,SsetScrolling:,V_isScrolling
TB,N,SsetDecelerating:,V_isDecelerating
UUID
UUIDString
initWithTarget:keyPaths:identifier:delegate:
initWithProxy:queue:
setObject:forKeyedSubscript:
startObservingTarget
objectForKeyedSubscript:
removeObjectForKey:
queue
proxy
stopObservingTarget
sharedManager
T@"ISKVOProxyManager",R,N
addProxyWithTarget:queue:keyPaths:delegate:
removeProxyWithIdentifier:
_recordsByIdentifier
_recordsQueue
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
observeChangeforKVOProxyIdentifier:keyPath:change:
observeValueForKeyPath:ofObject:change:context:
_target
_keyPaths
_identifier
T@"<ISKVOProxyDelegate>",W,N,V_delegate
_proxy
_queue
T@"ISKVOProxy",R,N,V_proxy
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
livePhotoPlaybackBehaviorDidFinish:
livePhotoPlaybackBehaviorDidBeginPlaying:
immediatelyShowsPhotoWhenPlaybackEnds
setTransitionDuration:
livePhotoPlaybackBehaviorWillTransitionToPhoto:
_handleDidFinish
_prepareVideoForPlaybackIfNeeded
_setPreparing:
_setVideoReadyToPlay:
_currentPlaybackID
_setCurrentPlaybackID:
_isVideoReadyToPlay
_startPlaybackWithPlaybackID:
_setReadyToPlayPlaybackID:
_isPreparing
playbackTimeRange
startBehavior
_handleDidSeekToBeginning
_handleDidFinishPreroll
_prerollWithCompletionHandler:
prerollBeforePlaying
_didFinishPreparing
_readyToPlayPlaybackID
_transitionToVideoWithPlaybackID:
_showVideoWithPlaybackID:
outputInfoWithPhotoBlurRadius:videoAlpha:videoBlurRadius:label:
initWithInitialLayoutInfo:keyTime:playbackTimeRange:photoTransitionDuration:immediatelyShowsPhotoWhenPlaybackEnds:hasBlurryTransition:
startPlayback
keyTime
photoTransitionDuration
hasBlurryTransition
isTransitioningToPhoto
_delegateFlags
_immediatelyShowsPhotoWhenPlaybackEnds
_hasBlurryTransition
_isTransitioningToPhoto
__videoReadyToPlay
__preparing
_photoTransitionDuration
__currentPlaybackID
__readyToPlayPlaybackID
_keyTime
_playbackTimeRange
Tq,N,S_setCurrentPlaybackID:,V__currentPlaybackID
Tq,N,S_setReadyToPlayPlaybackID:,V__readyToPlayPlaybackID
_videoReadyToPlay
TB,N,G_isVideoReadyToPlay,S_setVideoReadyToPlay:,V__videoReadyToPlay
_preparing
TB,N,G_isPreparing,S_setPreparing:,V__preparing
T{?=qiIq},R,N,V_keyTime
T{?={?=qiIq}{?=qiIq}},R,N,V_playbackTimeRange
Td,R,N,V_photoTransitionDuration
TB,R,N,V_immediatelyShowsPhotoWhenPlaybackEnds
TB,R,N,V_hasBlurryTransition
TB,R,N,V_isTransitioningToPhoto
T@"<ISLivePhotoPlaybackBehaviorDelegate>",W,D,N
_playbackDisabledReasons
count
playIsSticky
setPlaybackDisabled:forReason:
isPlaybackDisabled
setHintProgress:
reset
hintProgress
state
setPlayIsSticky:
isPerformingInputChanges
_setPerformingInputChanges:
_setPlaybackDisabled:
_playIsSticky
_isPerformingInputChanges
_playbackDisabled
_hintProgress
__playbackDisabledReasons
TB,N,S_setPerformingInputChanges:,V_isPerformingInputChanges
playbackDisabled
TB,N,GisPlaybackDisabled,S_setPlaybackDisabled:,V_playbackDisabled
T@"NSMutableSet",R,N,V__playbackDisabledReasons
Td,R,N,V_hintProgress
Tq,R,N,V_state
TB,N,V_playIsSticky
_updatePlayerItemLoadingTarget
vitalityFilter
_coalescedPlaybackFilterState
_setCurrentPlaybackStyle:
startPlaybackWithStyle:
prepareForVitality
playVitality
_configurePlaybackFilters
_prepareForVitalityIfNeeded
_playIfNeeded
variationIdentifier
integerValue
longExposureVitality
_updateHintingAndVitality
_invalidateScale
_invalidateApertureMode
startPlaybackWithStyleWhenReady:
_configurePlaybackFilter:
_handleVitalityFilterDidChange:
setOutputChangeHandler:
targetReadiness
currentPlaybackStyle
setLoadingTarget:
discardContentBelowLoadingTarget
_setStyleToPlayWhenReady:
_setSettleAutomaticallyWhenReady:
startPlaybackWithStyleWhenReady:settleAutomatically:
startPlaybackWithStyle:settleAutomatically:
_setShouldPrepareForVitalityWhenReady:
_setShouldPlayVitalityWhenReady:
minimumPhotoTransitionDuration
trimTimeRange
stopPlaybackAnimated:
isPlayingBeyondPhoto
settle:
isPlaybackAllowed
_canPlayVitality
maxVitalityDelay
dateWithTimeIntervalSinceNow:
_setVitalityTimeoutDate:
_resetPlaybackFilters
isPrepared
_createVitalityBehavior
isPlayingVitality
postDuration
preDuration
playbackRate
initWithInitialLayoutInfo:playbackEndTime:playDuration:playRate:photoTransitionDuration:pauseDuringTransition:assetOptions:
initWithInitialLayoutInfo:seekTime:
setSeekCompletionHandler:
setSeekTime:
supportsVitality
_styleToPlayWhenReady
_settleAutomaticallyWhenReady
_shouldPrepareForVitalityWhenReady
_shouldPlayVitalityWhenReady
_vitalityTimeoutDate
timeIntervalSinceNow
setIsAttemptingToPlayback:
cancelSettleToPhoto
stopPlayback
scaleDuringPlayback
playbackFilters
enumerateObjectsUsingBlock:
isPlaying
_setPlayingVitality:
_setHinting:
volume
_fadeInAudio
loopingEnabled
setLoopingEnabled:
_updateScaleIfNeeded
_updateApertureModeIfNeeded
_handlePlaybackFilterDidChange
livePhotoSettleBehaviorDidFinish:
prepareForHintWhenReady
playHintWhenReady
addPlaybackFilter:
removePlaybackFilter:
setVitalityFilter:
setTargetReadiness:
setPlaybackAllowed:
setSeekTime:completion:
_coalescedPlaybackFilterHintProgress
vitalityBehaviorDidBeginPlaying:
vitalityBehaviorDidEndPlaying:
vitalityBehaviorShouldEndPlayingAtPhoto:
isHinting
isAttemptingToPlayback
_setIsAttemptingToPlayback:
setImmediatelyShowsPhotoWhenPlaybackEnds:
seekTime
setTrimTimeRange:
_shouldPrepareForHintWhenReady
_setShouldPrepareForHintWhenReady:
_playbackFilters
_fadeInRequestID
_playingVitality
_hinting
_isAttemptingToPlayback
_playbackAllowed
__settleAutomaticallyWhenReady
__shouldPrepareForVitalityWhenReady
__shouldPlayVitalityWhenReady
__shouldPrepareForHintWhenReady
_vitalityFilter
_currentPlaybackStyle
_targetReadiness
__styleToPlayWhenReady
__vitalityTimeoutDate
_seekTime
_trimTimeRange
Tq,N,S_setCurrentPlaybackStyle:,V_currentPlaybackStyle
Tq,N,S_setStyleToPlayWhenReady:,V__styleToPlayWhenReady
TB,N,S_setIsAttemptingToPlayback:,V_isAttemptingToPlayback
TB,N,S_setSettleAutomaticallyWhenReady:,V__settleAutomaticallyWhenReady
TB,N,S_setShouldPrepareForVitalityWhenReady:,V__shouldPrepareForVitalityWhenReady
TB,N,S_setShouldPlayVitalityWhenReady:,V__shouldPlayVitalityWhenReady
TB,N,S_setShouldPrepareForHintWhenReady:,V__shouldPrepareForHintWhenReady
playingVitality
TB,N,GisPlayingVitality,S_setPlayingVitality:,V_playingVitality
hinting
TB,N,GisHinting,S_setHinting:,V_hinting
T@"NSDate",&,N,S_setVitalityTimeoutDate:,V__vitalityTimeoutDate
T@"NSSet",R,N
T@"ISLivePhotoVitalityFilter",&,N,V_vitalityFilter
TB,N,V_immediatelyShowsPhotoWhenPlaybackEnds
playbackAllowed
TB,N,GisPlaybackAllowed,V_playbackAllowed
Tq,N,V_targetReadiness
T{?=qiIq},R,N,V_seekTime
T{?={?=qiIq}{?=qiIq}},N,V_trimTimeRange
_seekIfNeeded
_callSeekCompletionHandler:
_handleDidSeekToSeekTime:
seekCompletionHandler
_isSeeking
_needsSeek
_needsTransitionToVideo
_seekCompletionHandler
T{?=qiIq},N,V_seekTime
T@?,C,N,V_seekCompletionHandler
_didFinish
T@"<ISLivePhotoSettleBehaviorDelegate>",W,D,N
_ISLivePhotoUIViewCommonInitialization
view
removeGestureRecognizer:
_playbackFilter
livePhotoViewCanBeginInteractivePlayback:
_updateVideoTransform
_updatePlaybackFilter
_handlePlaybackRecognizer:
initWithTarget:action:
setMinimumTouchDuration:
setCancelsTouchesInView:
setRequireSingleTouch:
addGestureRecognizer:
_updateGestureRecognizerParameters
_updatePlaybackFilterInput
playbackGestureRecognizer
distanceFromInitialPoint
setEnabled:
setTouchActive:
vitalityTransform
_setPlaybackFilter:
showStateOverlay
setAlpha:
whiteColor
setTextColor:
colorWithWhite:alpha:
setBackgroundColor:
setCornerRadius:
setMasksToBounds:
setTextAlignment:
setText:
sizeToFit
frame
_overlayDismissalID
_setOverlayDismissalID:
_dismissOverlayLabel:
_overlayLabel
animateWithDuration:animations:
setMaximumTouchMovement:
_showOverlayLabel
_playerDidChangePlaybackStyle
_playerDidChangeHinting
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
livePhotoPlayer
setVitalityTransform:
_delegateRespondsTo
__playingVitality
_playbackGestureRecognizer
_vitalityTransform
__playbackFilter
__overlayLabel
__overlayDismissalID
T@"ISTouchLivePhotoPlaybackFilter",&,N,S_setPlaybackFilter:,V__playbackFilter
TB,N,S_setPlayingVitality:,V__playingVitality
T@"UILabel",R,N,V__overlayLabel
Tq,N,S_setOverlayDismissalID:,V__overlayDismissalID
T@"ISLivePhotoPlayer",&,D,N
T@"UIGestureRecognizer",R,N,V_playbackGestureRecognizer
T@"CAMeshTransform",C,N,V_vitalityTransform
T@"<ISLivePhotoUIViewDelegate>",W,N,V_delegate
_setPrepared:
_startObservingVideo
_stopObservingVideo
playbackEndTime
playDuration
oneUpSettings
startSeekTolerance
_handleDidSeekToStartTime
vitalityEaseDuration
_didReachTransitionTime
_didReachTransitionToPhotoTime
shouldPreroll
playRate
_shouldPlayAfterPreparation
_startVideoPlayback
_setShouldPlayAfterPreparation:
easingEnabled
_setPlayingBeyondPhoto:
pauseDuringTransition
assetOptions
_easeOutObserver
_transitionToPhotoObserver
_pauseDuringTransition
_prepared
_playing
_playingBeyondPhoto
__shouldPlayAfterPreparation
_playRate
_assetOptions
_playbackEndTime
_playDuration
prepared
TB,N,GisPrepared,S_setPrepared:,V_prepared
preparing
TB,N,G_isPreparing,S_setPreparing:,V_preparing
playingBeyondPhoto
TB,N,GisPlayingBeyondPhoto,S_setPlayingBeyondPhoto:,V_playingBeyondPhoto
TB,N,S_setShouldPlayAfterPreparation:,V__shouldPlayAfterPreparation
T{?=qiIq},R,N,V_playbackEndTime
T{?=qiIq},R,N,V_playDuration
TB,R,N,V_pauseDuringTransition
TQ,R,N,V_assetOptions
Tf,R,N,V_playRate
playing
TB,R,N,GisPlaying,V_playing
T@"<ISLivePhotoVitalityBehaviorDelegate>",W,D,N
initWithSettings:
outputChangeHandler
_setShouldUpdateOutput:
performInputChanges:
_shouldUpdateOutput
__shouldUpdateOutput
_settings
_outputChangeHandler
TB,N,S_setShouldUpdateOutput:,V__shouldUpdateOutput
T@"<ISVitalitySettings>",R,N,V_settings
T@?,C,N,V_outputChangeHandler
setReversesMoreVideoFramesInMemory:
setAggressivelyCacheVideoFrames:
setDecodesAllFramesDuringOrdinaryPlayback:
_update
force
isTouching
forceScrubMaximumInteractiveRate
forceScrubRewindFactor
_setActive:
forceScrubMinimumRate
_setPlayRate:
_setDisplayLink:
_updatePlayer
forceScrubMinRateChange
_seekVideoToBeginning
_seekVideoToEnd
_setSeeking:
_handleDidFinishSeeking:
setTouching:
setForce:
_videoDuration
_smoothedVelocity
_touching
__active
__seeking
__playRate
_force
__displayLink
TB,N,S_setActive:,V__active
T@"ISDisplayLink",N,S_setDisplayLink:,V__displayLink
_seeking
TB,N,G_isSeeking,S_setSeeking:,V__seeking
Tf,N,S_setPlayRate:,V__playRate
touching
TB,N,GisTouching,V_touching
Td,N,V_force
TB,R,N,GisPlaying
_ISLiveWallpaperUIViewCommonInitialization
willMoveToWindow:
_handleUpdateTimer
scheduledTimerWithTimeInterval:repeats:block:
setUpdateTimer:
updateTimer
_updateTimer
TB,N,V_touching
T@"NSTimer",&,N,V_updateTimer
T@"ISLiveWallpaperPlayer",&,D,N
_seekToBeginning
frameDidChange
updateAnimation
didBeginAnimating
didEndAnimating
isReadyToDisplay
frameCount
frameCache
frameAtIndex:
_setCurrentFrame:
_resetAnimationState
_notifyDestinationsOfFrameChange
_anyDestinationIsReady
loopCount
_shouldAnimate
sharedTimer
_notifyDestinationsOfAnimationStart
_notifyDestinationsOfAnimationEnd
timestamp
animationTimerFired:
frameDelayAtIndex:
frameAtIndexIfReady:
initWithAnimatedImage:
animatedImage
registerDestination:
unregisterDestination:
currentImage
setPlaying:
setDisplayedFrameIndex:
displayedFrameIndex
allowFrameDrops
setAllowFrameDrops:
_weakDestinations
_image
_timer
_currentImage
_hasStartedAnimating
_hasFinishedAnimating
_timeAccumulator
_previousFrameTime
_infiniteLoop
_remainingLoopCount
_allowFrameDrops
_displayedFrameIndex
T@"PFAnimatedImage",R,N
TB,N,GisPlaying,V_playing
TQ,N,V_displayedFrameIndex
TB,N,V_allowFrameDrops
arrayWithObject:
_willChange
_didChange
_observersQueue_copyChangeObserversForWriteIfNeeded
objectForKey:
weakToStrongObjectsMapTable
initWithOptions:
addPointer:
setObject:forKey:
pointerAtIndex:
_setHasObservers:
removePointerAtIndex:
keyEnumerator
hasObserversDidChange
willPerformChanges
_publishChanges
didPublishChanges
_applyPendingChanges
enumerateObserversUsingBlock:
currentChanges
isPerformingChanges
hasObservers
_nestedChanges
_pendingChangesQueue_pendingChangeBlocks
_numAppliedPendingChanges
_currentChange
_isEnumeratingObservers
_observersQueue
_pendingChangesQueue
_observersQueue_shouldCopyChangeObserversOnWrite
_observersQueue_changeObserversWithContexts
_hasObservers
TB,R,N,V_hasObservers
standardUserDefaults
boolForKey:
performanceDiagnosticsSettings
setDefaultValues
setShouldTracePerformance:
rowWithTitle:valueKeyPath:
sectionWithRows:
actionWithSettingsKeyPath:
rowWithTitle:action:
moduleWithTitle:contents:
settingsControllerModule
shouldTracePerformance
_shouldTracePerformance
TB,N,V_shouldTracePerformance
photoHasColorAdjustments
initWithPhoto:photoIsOriginal:photoEXIFOrientation:photoTime:videoDuration:photoHasColorAdjustments:videoPlayerItem:variationIdentifier:supportsVitality:
_photoHasColorAdjustments
_photoIsOriginal
_supportsVitality
_videoPlayerItem
_variationIdentifier
T{?=qiIq},R,N,V_photoTime
T{?=qiIq},R,N,V_videoDuration
T@"AVPlayerItem",R,N,V_videoPlayerItem
TB,R,N,V_photoHasColorAdjustments
TB,R,N,V_photoIsOriginal
TB,R,N,V_supportsVitality
T@"NSNumber",R,N,V_variationIdentifier
initWithAsset:targetSize:
defaultChef
_videoPlayerItemRequestID
cancelPreparationOfIrisAssetWithRequestID:
numberWithInt:
_performWork:sync:
_performIvarRead:
loadingTarget
_performIvarWrite:
_cancelLoading
_invalidateVideoPlayerItem
_setVideoPlayerItem:videoDuration:
_reloadAllContent
_performWork:
aggressivelyCacheVideoFrames
setAggressivelyCachesVideoFrames:
reversesMoreVideoFramesInMemory
decodesAllFramesDuringOrdinaryPlayback
_updateMinimumClientVersionIfNeeded
_updatePlaybackStyleIdentifierIfNeeded
_updateContentSupportsVitalityIfNeeded
_updateVideoPlayerItemIfNeeded
_updatePlayerContentIfNeeded
_isMinimumClientVersionValid
readMetadataType:fromAVAsset:value:error:
_setMinimumClientVersion:
_minimumClientVersion
stringWithFormat:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
_isPlaybackStyleIdentifierValid
_setVariationIdentifier:
_invalidatePlayerContent
_isContentSupportsVitalityValid
boolValue
setContentSupportsVitality:
_isVideoPlayerItemValid
_handleVideoPlayerItemLoadResultWithSuccess:playerItem:videoDuration:error:
prepareIrisVideoWithAsset:photoTime:trimmedTimeRange:completion:
_setVideoPlayerItemRequestID:
setForwardPlaybackEndTime:
allowFrameBlending
setBlendsVideoFrames:
_isPlayerContentValid
_setPlayerContent:
_isStatusVaild
_isOnWorkQueue
_isOnIvarQueue
currentClientVersion
playerItemWithAsset:targetSize:
cancelLoading
_invalidateMinimumClientVersion
_invalidatePlaybackStyleIdentifier
_invalidateContentSupportsVitality
contentSupportsVitality
_assertOnWorkQueue
_assertOnIvarQueue
targetSize
_isLoadingCancelled
_setLoadingCancelled:
_ivarQueueIdentifier
_workQueueIdentifier
_ivarQueue
_workQueue
_ivarQueue_loadingTarget
_ivarQueue_videoComposition
_ivarQueue_videoPlayerItemRequestID
_ivarQueue_aggressivelyCacheVideoFrames
_ivarQueue_reversesMoreVideoFramesInMemory
_ivarQueue_decodesAllFramesDuringOrdinaryPlayback
_ivarQueue_contentSupportsVitality
_ivarQueue_playerItemPhotoTime
_ivarQueue_playerItemDuration
_ivarQueue_playerContent
_ivarQueue_status
_ivarQueue_videoPlayerItem
_ivarQueue_variationIdentifier
_ivarQueue_minimumClientVersion
_ivarQueue_error
_ivarQueue_isValid
_workQueue_imageGenerator
_workQueue_isGeneratingOffsetImage
__loadingCancelled
_asset
_targetSize
Tq,N,S_setStatus:
T@"NSError",&,N,S_setError:
T@"ISPlayerContent",&,N,S_setPlayerContent:
_loadingCancelled
TB,N,G_isLoadingCancelled,S_setLoadingCancelled:,V__loadingCancelled
Tq,N,S_setVideoPlayerItemRequestID:
T@"NSNumber",&,N,S_setVariationIdentifier:
T@"NSString",&,N,S_setMinimumClientVersion:
TB,N
T@"ISAsset",R,N,V_asset
T{CGSize=dd},R,N,V_targetSize
Tq,N
T@"AVVideoComposition",C,N
setMaxConcurrentOperationCount:
setQualityOfService:
prepareIrisPlayerItemWithAsset:trimmedTimeRange:photoTime:includeVideo:includeAudio:completion:
_currentRequestID
_setCurrentRequestID:
_operationsByRequestID
numberWithInteger:
initWithAsset:trimmedTimeRange:photoTime:includeAudio:includeVideo:resultHandler:
_operationQueue
addOperation:
T@"ISPlayerItemChef",R,N
__operationQueue
__isolationQueue
__operationsByRequestID
__currentRequestID
T@"NSOperationQueue",R,N,V__operationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V__isolationQueue
T@"NSMutableDictionary",R,N,V__operationsByRequestID
Tq,N,S_setCurrentRequestID:,V__currentRequestID
_handleValuesDidLoad
loadValuesAsynchronouslyForKeys:completionHandler:
isCancelled
_preparePlayerItem
includeAudio
resultHandler
statusOfValueForKey:error:
timeRange
insertTimeRange:ofAsset:atTime:error:
objectAtIndexedSubscript:
preferredTransform
setPreferredTransform:
playerItemWithAsset:
setSpeedThresholdForIFrameOnlyPlayback:
audioMixInputParametersWithTrack:
setVolumeRampFromStartVolume:toEndVolume:timeRange:
setInputParameters:
setAudioMix:
setImageQueueInterpolationCurve:
main
trimmedTimeRange
includeVideo
_includeVideo
_includeAudio
_resultHandler
_trimmedTimeRange
T@"AVAsset",R,N,V_asset
T{?={?=qiIq}{?=qiIq}},R,N,V_trimmedTimeRange
TB,R,N,V_includeVideo
TB,R,N,V_includeAudio
T@?,R,C,N,V_resultHandler
stringByAppendingFormat:
videoSize
_videoSize
T{CGSize=dd},R,N,V_videoSize
_transitionDuration
Td,N,V_transitionDuration
playerSettings
setVitalityEaseDuration:
setVitalityEaseMinRate:
setCrossfadeEnabled:
setPrerollBeforePlaying:
setUseDedicatedQueues:
setAllowFrameBlending:
setAllowVideoPreRoll:
setShowStateOverlay:
setForceScrubRewindFactor:
setForceScrubMinRateChange:
setForceScrubMinimumRate:
setForceScrubMaximumInteractiveRate:
setPlayDuringHint:
setScaleDuringPlayback:
setEasingEnabled:
setLongExposureVitality:
minValue:maxValue:
is_increment:
predicateWithFormat:
condition:
possibleValues:titles:
setStartBehavior:
crossfadeEnabled
playDuringHint
useDedicatedQueues
allowVideoPreRoll
_easingEnabled
_scaleDuringPlayback
_loopingEnabled
_crossfadeEnabled
_longExposureVitality
_playDuringHint
_showStateOverlay
_prerollBeforePlaying
_useDedicatedQueues
_allowFrameBlending
_allowVideoPreRoll
_vitalityEaseMinRate
_vitalityEaseDuration
_startBehavior
_forceScrubRewindFactor
_forceScrubMinRateChange
_forceScrubMinimumRate
_forceScrubMaximumInteractiveRate
TB,N,V_easingEnabled
Td,N,V_vitalityEaseDuration
Tf,N,V_vitalityEaseMinRate
Tq,N,V_startBehavior
TB,N,V_scaleDuringPlayback
TB,N,V_loopingEnabled
TB,N,V_crossfadeEnabled
TB,N,V_audioEnabled
TB,N,V_longExposureVitality
TB,N,V_playDuringHint
TB,N,V_showStateOverlay
TB,N,V_prerollBeforePlaying
TB,N,V_useDedicatedQueues
TB,N,V_allowFrameBlending
TB,N,V_allowVideoPreRoll
Td,N,V_forceScrubRewindFactor
Td,N,V_forceScrubMinRateChange
Td,N,V_forceScrubMinimumRate
Td,N,V_forceScrubMaximumInteractiveRate
diagnosticLabel
photoBlurRadius
videoBlurRadius
_diagnosticLabel
_photoBlurRadius
_videoAlpha
_videoBlurRadius
T@"NSString",R,N,V_diagnosticLabel
Td,R,N,V_photoBlurRadius
Td,R,N,V_videoAlpha
Td,R,N,V_videoBlurRadius
prepareWithPlayerItem:
_setPlayerItem:
_invalidatePlayerItemLoadingTarget
_invalidatePlayerView
_playerView
_invalidatePlayerMuted
playerViewPlaybackStateDidChange:
playerViewIsInteractingDidChange:
playerViewGestureRecognizerDidChange:
_invalidatePlayerPlayerItem
_invalidateReadyForDisplay
_activeGestures
_setInteracting:
gestureRecognizers
removeTarget:action:
_handleGesture:
addTarget:action:
_setGestureRecognizer:
_updatePlayerViewIfNeeded
_updatePlayerItemLoadingTargetIfNeeded
_updatePlayerPlayerItemIfNeeded
_updatePlayerMutedIfNeeded
_updatePlaybackStateIfNeeded
_updateReadyForDisplayIfNeeded
playbackStyle
setAutoresizingMask:
_setPlayerView:
audioMuted
_setPlaybackState:
_setReadyForDisplay:
_invalidatePlaybackState
videoPlayerForPlayerView:
setAllowPlayerReuse:
prepareWithPhoto:videoAsset:photoTime:photoEXIFOrientation:
setPlaybackStyle:
setAudioMuted:
gestureRecognizer
isReadyForDisplay
playbackState
isInteracting
_gestureRecognizer
readyForDisplay
dimensionsOfReservedVideoMemory
setDimensionsOfReservedVideoMemory:
_audioMuted
_isReadyForDisplay
_isInteracting
_readyForDisplay
_playbackState
__playerView
__videoPlayer
__playerItem
__gestureRecognizer
__activeGestures
_playbackStyle
_dimensionsOfReservedVideoMemory
T@"ISBasePlayerUIView",&,N,S_setPlayerView:,V__playerView
T@"ISWrappedAVPlayer",R,N,V__videoPlayer
T@"ISPlayerItem",&,N,S_setPlayerItem:,V__playerItem
T@"UIGestureRecognizer",&,N,S_setGestureRecognizer:,V__gestureRecognizer
Tq,N,S_setPlaybackState:,V_playbackState
TB,N,S_setReadyForDisplay:,V_readyForDisplay
T@"NSMutableSet",R,N,V__activeGestures
TQ,N,V_playbackStyle
T{CGSize=dd},N,V_dimensionsOfReservedVideoMemory
TB,N,V_audioMuted
TB,R,N,V_isReadyForDisplay
TB,R,N,V_isInteracting
T@"NSError",R,N,V_error
T@"UIGestureRecognizer",R,N
T@"<ISPlayerViewDelegate>",W,N,V_delegate
_defaultsKey
settingsFromArchiveDictionary:
initWithDefaultValues
vitalitySettings
archiveDictionary
rowWithTitle:childSettingsKeyPath:
save
setPlayerSettings:
setVitalitySettings:
setPerformanceDiagnosticsSettings:
_playerSettings
_vitalitySettings
_performanceDiagnosticsSettings
T@"ISPlayerSettings",&,N,V_playerSettings
T@"ISVitalitySettings",&,N,V_vitalitySettings
T@"ISPerformanceDiagnosticsSettings",&,N,V_performanceDiagnosticsSettings
_playerViews
_isPerformingChanges
_setPerformingChanges:
_updateVitalityFilters
_scrollView
targetContentOffset
hasTargetContentOffset
allObjects
canPerformVitality
isEnabled
visibilityOffsetHelper
setDirection:
getVisibility:offset:targetVisibilityOffset:forView:
_newVitalityFilter
computeVisibilityOffsetsInScrollView:withTargetContentOffset:usingBlock:
addPlayerView:
removePlayerView:
didLayoutPlayerViews
setHasTargetContentOffset:
setTargetContentOffset:
canPerformVitalityDidChange
_setScrollView:
_enabled
__isPerformingChanges
_scrolling
_decelerating
_hasTargetContentOffset
__scrollView
__playerViews
_visibilityOffsetHelper
_targetContentOffset
T@"UIScrollView",W,N,S_setScrollView:,V__scrollView
T@"NSHashTable",R,N,V__playerViews
TB,N,S_setPerformingChanges:,V__isPerformingChanges
scrolling
TB,N,GisScrolling,V_scrolling
decelerating
TB,N,GisDecelerating,V_decelerating
TB,N,V_hasTargetContentOffset
T{CGPoint=dd},N,V_targetContentOffset
T@"ISVisibilityOffsetHelper",R,N,V_visibilityOffsetHelper
enabled
TB,N,GisEnabled,V_enabled
initWithAnimatedImagePlayer:
pixelSize
didMoveToWindow
didMoveToSuperview
setNeedsDisplay
window
isHidden
setContents:
sizeThatFits:
setPlaceholderImageView:
displayLayer:
placeholderImageView
_placeholderImageView
T@"UIImageView",N,V_placeholderImageView
T@"ISAnimatedImagePlayer",&,N,V_player
T@"PFAnimatedImage",&,N
TB,N,GisPlaying
TQ,N
_playbackRequestID
_setPlaybackReaquestID:
_setPlaybackStartDate:
_handleDisplayLink
isTouchActive
_playbackStartDate
_nextPlaybackRequestID
_touchActive
__playbackRequestID
__playbackStartDate
Tq,N,S_setPlaybackReaquestID:,V__playbackRequestID
T@"NSDate",&,N,S_setPlaybackStartDate:,V__playbackStartDate
touchActive
TB,N,GisTouchActive,V_touchActive
_iosInitialization
_iosDealloc
_updateDisplayLink
_iosUpdateDisplayLink
isMainThread
_setTimestamp:
_setForwardingTarget:
_displayLinkFire:
mainRunLoop
_fireTimerWithInterval:
_iosAnimationTimerFired:
_displayLinkProxy
_timestamp
Td,N,S_setTimestamp:,V_timestamp
_forwardingTarget
__forwardingTarget
T@"ISAnimatedImageTimer",W,N,S_setForwardingTarget:,V__forwardingTarget
_touchCount
locationInView:
_setInitialPointInView:
_setTouchCount:
requireSingleTouch
_beginRequestID
_setBeginRequestID:
minimumTouchDuration
_beginWithRequestID:
_incrementTouchesBy:
_decrementTouchesBy:
touchesMoved:withEvent:
_updateDistanceFromInitialPoint
maximumTouchMovement
_initialPointInView
touchesBegan:withEvent:
touchesEnded:withEvent:
touchesCancelled:withEvent:
pressesBegan:withEvent:
pressesChanged:withEvent:
pressesEnded:withEvent:
pressesCancelled:withEvent:
_requireSingleTouch
_minimumTouchDuration
_maximumTouchMovement
_distanceFromInitialPoint
__touchCount
__beginRequestID
__initialPointInView
TQ,N,S_setTouchCount:,V__touchCount
TQ,N,S_setBeginRequestID:,V__beginRequestID
T{CGPoint=dd},N,S_setInitialPointInView:,V__initialPointInView
Td,N,V_minimumTouchDuration
TB,N,V_requireSingleTouch
Td,N,V_maximumTouchMovement
Td,R,N,V_distanceFromInitialPoint
_applyAlpha:blurRadius:toLayer:withTransitionOptions:completion:
setDisableActions:
_applyScale:toLayer:withTransitionOptions:completion:
presentationLayer
animationWithKeyPath:
setToValue:
setDuration:
setFromValue:
removeAnimationForKey:
addAnimation:forKey:
valueForKey:
animationDidStart:
animationDidStop:finished:
T@"ISTransitionApplier",R,N
defaultCenter
_reduceMotionDidChange:
addObserver:selector:name:object:
isPagingEnabled
doubleValue
scrollViewDidScroll:
scrollViewDidZoom:
scrollViewWillBeginDragging:
scrollViewWillEndDragging:withVelocity:targetContentOffset:
scrollViewDidEndDragging:willDecelerate:
scrollViewWillBeginDecelerating:
scrollViewDidEndDecelerating:
scrollViewDidEndScrollingAnimation:
viewForZoomingInScrollView:
scrollViewWillBeginZooming:withView:
scrollViewDidEndZooming:withView:atScale:
scrollViewShouldScrollToTop:
scrollViewDidScrollToTop:
scrollViewDidChangeAdjustedContentInset:
is_vitalityControllerCreateIfNeeded:
is_vitalityController
is_didLayoutPlayerViews
is_scrollViewDelegate
T@"ISUIScrollViewVitalityController",R,N
convertRect:fromView:
visibleRectForScrollView:
boundsForView:inScrollView:
_ISVideoPlayerUIView_commonInitialization
CGColor
setBorderColor:
setBorderWidth:
playerLayer
_updateVideoGravity
setVideoGravity:
_videoLayerReadyForDisplay
T@"ISWrappedAVPlayer",&,N,V_videoPlayer
TB,R,N,V_videoLayerReadyForDisplay
layerClass
_setTargetContentOffset:
_updateDirectionIfNeeded
direction
contentSize
_visibilityRangeForRect:
maximumDistance
maximumDistanceLag
setMaximumDistance:
setMaximumDistanceLag:
_direction
_maximumDistance
_maximumDistanceLag
__targetContentOffset
T@"UIScrollView",&,N,S_setScrollView:,V__scrollView
T{CGPoint=dd},N,S_setTargetContentOffset:,V__targetContentOffset
Tq,N,V_direction
Td,N,V_maximumDistance
Td,N,V_maximumDistanceLag
isDescendantOfView:
inputDidChange
_isPerformingOutputChanges
_setPerformingOutputChanges:
_outputDidChange
_setOutputDidChange:
_invalidateOutput
performOutputChanges:
setScrubbing:
setScrubOffset:
setPlayRate:
isScrubbing
scrubOffset
_scrubbing
__isPerformingInputChanges
__isPerformingOutputChanges
__outputDidChange
_scrubOffset
TB,N,S_setPerformingInputChanges:,V__isPerformingInputChanges
TB,N,S_setPerformingOutputChanges:,V__isPerformingOutputChanges
TB,N,S_setOutputDidChange:,V__outputDidChange
scrubbing
TB,N,GisScrubbing,V_scrubbing
Td,N,V_scrubOffset
Td,N,V_playRate
setUseLegacyBehavior:
setShouldPreroll:
setMinimumVisibilityFactor:
shareViewSettings
activityViewSettings
setPreDuration:
orbPreviewSettings
setPlaybackRate:
sectionWithRows:title:conditionFormat:
useLegacyBehavior
_defaultSettings
behavior
endTimeOffset
maximumDelayBeforePlayback
setOneUpSettings:
setShareViewSettings:
setActivityViewSettings:
setOrbPreviewSettings:
_shouldPreroll
_useLegacyBehavior
_oneUpSettings
_shareViewSettings
_activityViewSettings
_orbPreviewSettings
TB,N,V_useLegacyBehavior
T@"ISVitalitySpecificSettings",&,N,V_oneUpSettings
T@"ISVitalitySpecificSettings",&,N,V_shareViewSettings
T@"ISVitalitySpecificSettings",&,N,V_activityViewSettings
T@"ISVitalitySpecificSettings",&,N,V_orbPreviewSettings
TB,N,V_shouldPreroll
doesNotRecognizeSelector:
setBehavior:
setEndTimeOffset:
setMaximumDelayBeforePlayback:
setPostDuration:
setStartSeekTolerance:
setMinimumPhotoTransitionDuration:
setMaxVitalityDelay:
array
orPredicateWithSubpredicates:
sectionWithRows:title:
_behavior
_preDuration
_postDuration
_startSeekTolerance
_playbackRate
_endTimeOffset
_minimumVisibilityFactor
_maximumDelayBeforePlayback
_maxVitalityDelay
_minimumPhotoTransitionDuration
Tq,N,V_behavior
Td,N,V_preDuration
Td,N,V_postDuration
Td,N,V_startSeekTolerance
Td,N,V_playbackRate
Td,N,V_endTimeOffset
Td,N,V_minimumVisibilityFactor
Td,N,V_maximumDelayBeforePlayback
Td,N,V_maxVitalityDelay
Td,N,V_minimumPhotoTransitionDuration
sharedAmbientInstance
sharedPlaybackInstance
sharedPhotosOneUpInstance
initWithAudioSession:
category
initWithFormat:
_beginObservingOutputVolumeIfNeeded
_endObservingOutputVolumeIfNeeded
outputVolume
setCategory:error:
setActive:error:
removeObserver:forKeyPath:context:
outputVolumeChangeHandler
sharedAmbientInstanceWithLoadHandler:
sharedPlaybackInstanceWithLoadHandler:
sharedPhotosOneUpInstanceWithLoadHandler:
T@"ISWrappedAVAudioSession",R,N
setOutputVolumeChangeHandler:
setCategory:options:error:
audioSession
_didBeginObservingOutputVolume
_outputVolumeChangeHandler
_audioSession
T@"AVAudioSession",R,N,V_audioSession
T@?,C,N,V_outputVolumeChangeHandler
T@"NSString",R,N
Tf,R,N
observedAVPlayerKeys
_playerQueue_avPlayer
setAllowsExternalPlayback:
_performPlayerTransaction:
_playerItemDidPlayToEnd:
addObserverForName:object:queue:usingBlock:
dictionaryWithCapacity:
enumerateKeysAndObjectsUsingBlock:
removeObserver:
_nextObserverUID
addPeriodicTimeObserverForInterval:queue:usingBlock:
observedAVPlayerItemKeys
object
null
_nilOrValue:
_playerQueue_startObservingPlayerItem:
CMTimeValue
_playerQueue_updatePlayerItemAudioTracksEnabled
suppressesAudioRendering
_setSuppressesAudioRendering:
assetTrack
mediaType
isLoopingEnabled
setLoopTimeRange:
setRate:time:atHostTime:
pause
loopTimeRange
_playerQueue_stopObservingPlayerItem:
setItemBlendsVideoFrames:
currentItemDuration
currentItemPlaybackBufferFull
currentItemPlaybackBufferEmpty
currentItemIsLikelyToKeepUp
currentItemVideoComposition
preventsSleepDuringVideoPlayback
setSuppressesAudioRendering:
setLoopingEnabled:withTemplateItem:
setPreventsSleepDuringVideoPlayback:
_avPlayerQueue
_delegateQueue
_playerQueue_wrappedAudioSession
_playerQueue_playerItemDidPlayToEndObserver
_ivarQueue_currentItem
_ivarQueue_rate
_ivarQueue_volume
_ivarQueue_loopTimeRange
_ivarQueue_loopingEnabled
_ivarQueue_audioEnabled
_ivarQueue_preventsSleepDuringVideoPlayback
_ivarQueue_suppressesAudioRendering
_ivarQueue_itemStatus
_ivarQueue_itemError
_ivarQueue_itemForwardPlaybackEndTime
_ivarQueue_itemDuration
_ivarQueue_itemPlaybackBufferFull
_ivarQueue_itemVideoComposition
_ivarQueue_itemIsLikelyToKeepUp
_ivarQueue_itemPlaybackBufferEmpty
_observersByID
_playerKVOIdentifier
_playerItemKVOIdentifier
TB,GisLoopingEnabled
T@"<ISWrappedAVPlayerDelegate>",W,V_delegate
setValueValidatator:
is_actionForKey:
B16@0:8
v16@0:8
v24@0:8d16
d16@0:8
v24@0:8@16
@16@0:8
@24@0:8@16
v20@0:8f16
v60@0:8{?=qiIq}16f40d44@?52
@"ISRateCurveRequest"
@"NSObject<OS_dispatch_queue>"
@68@0:8{?=qiIq}16d40f48@52@?60
{?=qiIq}16@0:8
f16@0:8
@?16@0:8
{?="value"q"timescale"i"flags"I"epoch"q}
@"ISAVPlayer"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8@?16
@32@0:8@16^@24
@48@0:8@16^{CGImage=}24d32Q40
@40@0:8@16^{CGImage=}24d32
@44@0:8@16^{CGImage=}24d32i40
@52@0:8@16^{CGImage=}24d32i40Q44
@52@0:8@16@24d32i40Q44
^{CGImage=}16@0:8
i16@0:8
Q16@0:8
@"AVAsset"
^{CGImage=}
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16Q24^v32
v40@0:8@"ISObservable"16Q24^v32
v32@0:8@16@24
v32@0:8@"ISWrappedAVPlayer"16@"AVPlayerItem"24
v20@0:8B16
v40@0:8d16@24@?32
v48@0:8@16@24@32@?40
v24@0:8q16
v40@0:8{?=qiIq}16
v28@0:8@16f24
B56@0:8@16{?=qiIq}24@?48
B104@0:8@16{?=qiIq}24{?=qiIq}48{?=qiIq}72@?96
B36@0:8@16f24@?28
v48@0:8@16{?=qiIq}24
@48@0:8@16@24@32@?40
v68@0:8@16{?=qiIq}24f48d52@?60
q16@0:8
@"AVPlayer"
@"NSHashTable"
@"NSString"
{?="videoPlayer"B"videoPlayerVolume"B"contentFromPlayerItem"B"willPlayToEndObserver"B"willPlayToPhotoObserver"B"status"B}
@"ISPlayerItem"
@"NSError"
@"<ISBasePlayerDelegate>"
@"ISWrappedAVPlayer"
@"ISBehavior"
@"ISPlayerState"
@"ISPlayerOutputContent"
v40@0:8@16@24@?32
v40@0:8d16@"ISPlayerOutputTransitionOptions"24@?<v@?B>32
v40@0:8@"ISPlayerState"16@"ISPlayerOutputTransitionOptions"24@?<v@?B>32
v24@0:8@"ISPlayerOutputContent"16
@?<v@?>16@0:8
v24@0:8@?<v@?>16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v32@0:8{CGPoint=dd}16
v32@0:8Q16d24
{CGPoint=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{?="didChangeWithAnimationDuration"B}
@"ISBasePlayer"
@"UIView"
@"UIImage"
@"CAMeshTransform"
@"CAFilter"
@"ISWrappedAVAudioSession"
@"<ISBasePlayerUIViewChangeObserver>"
@"ISVideoPlayerUIView"
@"UIImageView"
{CGPoint="x"d"y"d}
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
B48@0:8{?=qiIq}16@?40
B96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@?88
B28@0:8f16@?20
@"<ISBehaviorDelegate>"
v32@0:8@16d24
@32@0:8@?16@?24
@"CADisplayLink"
@"NSDate"
@48@0:8@16@24@32@40
@"NSMutableDictionary"
v48@0:8@16@24@32^v40
@"NSArray"
@"<ISKVOProxyDelegate>"
@32@0:8@16@24
@"ISKVOProxy"
@112@0:8@16{?=qiIq}24{?={?=qiIq}{?=qiIq}}48d96B104B108
{?={?=qiIq}{?=qiIq}}16@0:8
{?="respondsToDidFinish"B"respondsToDidBeginPlaying"B}
{?="start"{?="value"q"timescale"i"flags"I"epoch"q}"duration"{?="value"q"timescale"i"flags"I"epoch"q}}
v28@0:8B16@20
@"NSMutableSet"
v48@0:8@"ISBehavior"16@"ISPlayerState"24@"ISPlayerOutputTransitionOptions"32@?<v@?B>40
v28@0:8@"ISBehavior"16f24
B56@0:8@"ISBehavior"16{?=qiIq}24@?<v@?B>48
B104@0:8@"ISBehavior"16{?=qiIq}24{?=qiIq}48{?=qiIq}72@?<v@?B>96
B36@0:8@"ISBehavior"16f24@?<v@?B>28
v48@0:8@"ISBehavior"16{?=qiIq}24
v68@0:8@"ISBehavior"16{?=qiIq}24f48d52@?<v@?d{?=qiIq}>60
@48@0:8@"ISBehavior"16@"NSArray"24@"NSObject<OS_dispatch_queue>"32@?<v@?>40
v32@0:8@"ISBehavior"16@24
B24@0:8@"ISBehavior"16
v24@0:8@"ISLivePhotoSettleBehavior"16
v28@0:8q16B24
v48@0:8{?=qiIq}16@?40
v64@0:8{?={?=qiIq}{?=qiIq}}16
{?="scale"B"apertureMode"B}
@"ISLivePhotoVitalityFilter"
@48@0:8@16{?=qiIq}24
B32@0:8@16@24
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
{?="canBeginInteractivePlayback"B}
@"UIGestureRecognizer"
@"<ISLivePhotoUIViewDelegate>"
@"ISTouchLivePhotoPlaybackFilter"
@"UILabel"
@96@0:8@16{?=qiIq}24{?=qiIq}48f72d76B84Q88
@"<ISVitalitySettings>"
@"ISDisplayLink"
@"NSTimer"
v24@0:8^{CGImage=}16
v24@0:8Q16
@"PFAnimatedImage"
@"ISAnimatedImageTimer"
v32@0:8@16^v24
@"NSMutableArray"
@"NSMapTable"
@104@0:8^{CGImage=}16B24i28{?=qiIq}32{?=qiIq}56B80@84@92B100
@"AVPlayerItem"
@"NSNumber"
@40@0:8@16{CGSize=dd}24
v60@0:8B16@20{?=qiIq}28@52
v28@0:8@?16B24
{CGSize=dd}16@0:8
@"AVVideoComposition"
@"ISPlayerContent"
{?="videoPlayerItem"B"status"B"content"B"minimumClientVersion"B"playbackStyleIdentifier"B"contentSupportsVitality"B}
@"AVAssetImageGenerator"
@"ISAsset"
{CGSize="width"d"height"d}
q104@0:8@16{?=qiIq}24{?={?=qiIq}{?=qiIq}}48@?96
q112@0:8@16{?={?=qiIq}{?=qiIq}}24{?=qiIq}72B96B100@?104
@"NSOperationQueue"
@112@0:8@16{?={?=qiIq}{?=qiIq}}24{?=qiIq}72B96B100@?104
@56@0:8^{CGImage=}16B24i28@32{CGSize=dd}40
@48@0:8d16d24d32@40
@"AVPlayer"24@0:8@"ISBasePlayer"16
v44@0:8^{CGImage=}16@24d32i40
v32@0:8{CGSize=dd}16
{?="playbackStateDidChange"B"interactingDidChange"B"gestureRecognizerDidChange"B}
{?="playerItemLoadingTarget"B"playerPlayerItem"B"playerView"B"playerMuted"B"status"B"readyForDisplay"B"playbackState"B}
@"<ISPlayerViewDelegate>"
@"ISBasePlayerUIView"
@"ISPlayerSettings"
@"ISVitalitySettings"
@"ISPerformanceDiagnosticsSettings"
@"UIScrollView"
@"ISVisibilityOffsetHelper"
{CGSize=dd}32@0:8{CGSize=dd}16
@"ISAnimatedImagePlayer"
@"_ISAnimatedImageTimerForwardingProxy"
@32@0:8@16:24
v28@0:8@16B24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
v56@0:8@16@24@32@40@?48
v56@0:8d16@24@32@40@?48
v56@0:8d16d24@32@40@?48
v48@0:8d16@24@32@?40
v48@0:8@16{CGPoint=dd}24N^{CGPoint=dd}40
v40@0:8@16@24d32
v24@0:8@"UIScrollView"16
v48@0:8@"UIScrollView"16{CGPoint=dd}24N^{CGPoint=dd}40
v28@0:8@"UIScrollView"16B24
@"UIView"24@0:8@"UIScrollView"16
v32@0:8@"UIScrollView"16@"UIView"24
v40@0:8@"UIScrollView"16@"UIView"24d32
B24@0:8@"UIScrollView"16
@"ISUIVisibilityOffsetHelper"
@20@0:8B16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8@16@24
@"ISAVPlayerUIView"
v48@0:8^B16^d24^d32@40
v48@0:8^B16^d24^d32@"NSObject<ISAnonymousView>"40
v48@0:8@16{CGPoint=dd}24@?40
{ISVisibilityRange=dd}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"ISVitalitySpecificSettings"
B32@0:8@16^@24
B28@0:8B16^@20
B40@0:8@16Q24^@32
B56@0:8@16@24Q32Q40^@48
@"AVAudioSession"
v40@0:8@16@24@32
v40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
@56@0:8{?=qiIq}16@40@?48
@40@0:8@16@24@?32
v68@0:8f16{?=qiIq}20{?=qiIq}44
v32@0:8@16@?24
v96@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64@?88
v28@0:8f16@?20
@"<ISWrappedAVPlayerDelegate>"
@24@0:8d16
333333
333333
