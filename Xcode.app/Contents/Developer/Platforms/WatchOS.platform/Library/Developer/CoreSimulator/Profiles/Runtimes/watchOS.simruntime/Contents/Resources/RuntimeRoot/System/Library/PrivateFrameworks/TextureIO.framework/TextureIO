@(#)PROGRAM:TextureIO  PROJECT:TextureIO-3.10.9
)@)\
?333333
KTX 11
Unsupported filter
Mipmap Generation of 3D textures not suppoted
Cannot scale image with pixel format
newScaledImageWithLancosFilter
/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-3.10.9/Source/TXRDataScaler.m
!"Unrecognized scale filter"
!"VImage scale error"
newScaledImageWithBoxFilter
!"TODO:Box filter needs implementation"
TXRErrorDomain
TXRErrorKey
-[TXRTexture initWithData:bufferAllocator:options:error:]
/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-3.10.9/Source/TXRTexture.m
!"TODO: Must Implement"
TXRTexture can only export to the KTX texture fil format
Range Location must be an index of an existing mipmap level
-[TXRTexture copyWithPixelFormat:options:bufferAllocator:]
Could not find resource %@ at specified location.
com.apple.txrtextureloaderfileio
/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-3.10.9/Source/TXRFileDataSourceProvider.m
!"TODO: Must be able to return error to dipatching thread"
v8@?0
-[TXRFileDataSourceProvider initWithData:bufferAllocator:options:error:]_block_invoke
-[TXRFileDataSourceProvider _parseData:bufferAllocator:options:error:]
!"Unhandled fileType"
RGBFloat32ToShareExponent32
/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-3.10.9/Source/TXRFloatConvert.h
maxm <= MAX_RGB9E5_MANTISSA
rm <= MAX_RGB9E5_MANTISSA
gm <= MAX_RGB9E5_MANTISSA
bm <= MAX_RGB9E5_MANTISSA
info
properties
levels
fixed
level-mode
+[TXRAssetCatalogParser exportSetConfig:face:directoryPath:error:]
/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-3.10.9/Source/TXRAssetCatalogParser.m
!"TODO: Iterate through MipFileAttributes list"
!"TODO: Iterate through all mipmaps of given face output images and write stuff"
none
level-0
 face-%d
.png
.jpg
filename
mipmap-level
base
%@/%@
%@/%@.cubetextureset
%@/%@.textureset
%@/Contents.json
Unexpected format of Contents.json
Value of properties key is not an object
textures
Value of textures key is not an array
Could not create folder hierarchy for texture name
Could not create Content.json for hierarchy of texture name
interpretation
non-premultiplied-colors
+[TXRAssetCatalogParser exportSet:location:error:]
TXRAssetInterpretationData == set.interpretation
data
bottom-left
origin
Inconsistant set specifed.  Some mipmapsets specified are cubemap textures while other mipmapsets are 2D textures
Universal
universal
iPhone
iphone
iPad
ipad
Apple TV
CarPlay
Metal 1v2
metal1v2
Metal 2v2
metal2v2
Metal 3v1
metal3v1
Metal 3v2
metal3v2
1 GB
2 GB
3 GB
4 GB
sRGB
r-8-unorm
rg-8-unorm
rgba-8-unorm
rgba-8-unorm-sRGB
r-16-float
rg-16-float
rgba-16-float
rgb-10-extended-range-sRGB
astc-4x4
astc-4x4-sRGB
astc-8x8
astc-8x8-sRGB
idiom
!"Invalid face index"
cube-face
memory
graphics-feature-set
color-space
scale
pixel-format
.mipmapset
version
author
TextureIO
Image decoding failed
+[TXRParserImageIO determineColorSpaceClass:displayGamut:options:]
/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-3.10.9/Source/TXRParserImageIO.m
!"Unhandled color space handling option"
+[TXRParserImageIO decodeCGImageNonIndexed:desiredPixelFormat:bufferAllocator:options:error:]
!"Invalid TXROriginOperation"
Could retrieve image data from CGImageRef
!"Unhandled vertical flipping case for 1 component pixels"
!"Unhandled vertical flipping case for 2 component pixels"
!"TODO: must handle vertical flipping for 3 component pixels"
!"Unhandled vertical flipping case for 4 component pixels"
Unable to vertically flip image
!"Unhandled horizontal flipping case for 1 component pixels"
!"Unhandled horizontal flipping case for 2 component pixels"
!"TODO: must handle horizontal flipping for 3 component pixels"
!"Unhandled horizontal flipping case for 4 component pixels"
Unable to horizontally flip image
!"Unhandled rotation case for 1 component pixels"
!"Unhandled rotation case for 2 component pixels"
!"TODO: must handle rotation for 3 component pixels"
!"Unhandled rotation case for 4 component pixels"
Could not create CG Image with URL
Could not create CG Destination Image with URL
Cannot create CGImage with given colorSpace.  ColorModel of colorSpace must be Monochrome or RGB 
!"Unhandled or compressed format"
componentsPerPixel
!"Unhandled format"
The config being added is a cubemap but configs already in set are not.  The two types cannot be mixed
The config being added is a not a cubemap but configs already in set are.  The two types cannot be mixed
compressedFormatInfo
!"Unhandled compressed format"
Only little endian KTX files are supported
Could not determine format from KTX header
com.apple.txrtextureloaderparser
Apple TextureIO
TextureIO major verison
TextureIO minor verison
Cannot create file at %@
Invalid TXRTexture object: Level 0 has %d array elments but level %d has %d elements
/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-3.10.9/Source/TXRFormatInfoFuncs.h
pixelBytes
+[TXRDataConverter newImageFromSourceImage:newPixelFormat:bufferAllocator:multiplyAlpha:gammaDegamma:error:]
/Library/Caches/com.apple.xbs/Sources/TextureIO_Sim/TextureIO-3.10.9/Source/TXRDataConverter.m
!"No support for decompression"
!"No support for compression"
convertToFloat4Slow
!"Unhandled Format"
convertFromFloat4Slow
TXROptions
NSCopying
TXRDefaultBufferMap
TXRBufferMap
NSObject
TXRDefaultBuffer
TXRBuffer
TXRDefaultBufferAllocator
TXRBufferAllocator
TXRDataScaler
TXRImage
TXRArrayElement
TXRMipmapLevel
TXRTexture
TXRDeferredImageInfo
TXRDeferredElementInfo
TXRDeferredMipmapInfo
TXRDeferredTextureInfo
TXRFileDataSourceProvider
TXRDataSourceProvider
TXRAssetCatalogParser
TXRParserImageIO
TXRParser
TXRImageInfo
TXRTextureInfo
TXRAssetCatalogFileAttributes
TXRAssetCatalogMipFileAttributes
TXRAssetCatalogConfig
TXRAssetCatalogSet
TXRPixelFormatInfo
TXRParserKTX
TXRDataConverter
TXRImageIndependent
allocWithZone:
init
copyWithZone:
cubemapFromVerticallyStackedImage
setCubemapFromVerticallyStackedImage:
originOperation
setOriginOperation:
colorSpaceHandling
setColorSpaceHandling:
multiplyAlpha
setMultiplyAlpha:
_cubemapFromVerticallyStackedImage
_originOperation
_colorSpaceHandling
_multiplyAlpha
TB,N,V_cubemapFromVerticallyStackedImage
TQ,N,V_originOperation
TQ,N,V_colorSpaceHandling
TB,N,V_multiplyAlpha
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
bytes
T^v,R,N
initForBuffer:withBytes:
.cxx_destruct
_bytes
_buffer
initWithBytes:length:
dealloc
initWithData:zone:
initWithLength:
mutableBytes
_data
newBufferWithLength:
newBufferWithBytesNoCopy:length:deallocNotification:error:
dimensions
newImageFromSourceImage:scaledDimensions:bufferAllocattor:filter:error:
newImageFromSourceImage:bufferAllocattor:filter:error:
pixelFormat
isCompressed:
packedMemoryLayoutForFormat:dimensions:
buffer
offset
bytesPerRow
newImageFromSourceImage:newPixelFormat:bufferAllocator:multiplyAlpha:gammaDegamma:error:
alphaInfo
initWithDimensions:pixelFormat:alphaInfo:bytesPerRow:bytesPerImage:buffer:offset:
dictionaryWithObject:forKey:
initWithDomain:code:userInfo:
provideImageInfoAtLevel:element:face:
bytesPerImage
deferredProvide
initWithBytesPerRow:bytesPerImage:buffer:offset:
initAsLevel:element:face:dataSourceProvider:
error
_offset
_bytesPerImage
_bytesPerRow
_error
_face
_element
_level
_dataSourceProvider
TQ,R,V_offset
T@"<TXRBuffer>",R,V_buffer
T@"NSError",R,V_error
initWithCapacity:
addObject:
initWithDimensions:pixelFormat:alphaInfo:bufferAllocator:
count
countByEnumeratingWithState:objects:count:
setObject:atIndexedSubscript:
initAsLevel:element:cubemap:dataSourceProvider:
initAsLevel:element:dimensions:pixelFormat:alphaInfo:cubemap:bufferAllocator:
setImage:atFace:
faces
_faces
T@"NSArray",R,V_faces
objectAtIndexedSubscript:
elements
initAsLevel:arrayLength:cubemap:dataSourceProvider:
initAsLevel:dimensions:pixelFormat:alphaInfo:arrayLength:cubemap:bufferAllocator:
setImage:atElement:atFace:
_elements
T@"NSArray",R
provideTextureInfo
cubemap
mipmapLevelCount
arrayLength
initWithURL:bufferAllocator:options:error:
initWithDataSourceProvider:
initWithName:
exportAtLocation:error:
pathExtension
caseInsensitiveCompare:
exportTexture:url:error:
initWithImage:dimensions:pixelFormat:alphaInfo:
newImageFromSourceImage:newPixelFormat:bufferAllocator:gammaDegamma:error:
initWithContentsOfURL:bufferAllocator:options:error:
initWithDimensions:pixelFormat:alphaInfo:mipmapLevelCount:arrayLength:cubemap:bufferAllocator:
initWithData:bufferAllocator:options:error:
exportToAssetCatalogWithName:location:error:
exportToURL:error:
reformat:gammaDegamma:bufferAllocator:error:
generateMipmapsForRange:filter:error:
copyWithPixelFormat:options:bufferAllocator:
mipmapLevels
_bufferAllocator
_mipmapLevels
_dimensions
_cubemap
_pixelFormat
_alphaInfo
T,R,N,V_dimensions
TB,R,N,V_cubemap
TQ,R,N,V_pixelFormat
TQ,R,N,V_alphaInfo
T@"NSArray",R,N,V_mipmapLevels
signalLoaded
info
setInfo:
_infoLoaded
_info
T@"TXRImageInfo",&,N,V_info
initAsCubemap:
T@"NSMutableArray",R,N,V_faces
initWithArrayLength:cubemap:
T@"NSMutableArray",R,N,V_elements
initWithMipmapLevelCount:arrayLength:cubemap:
mipmaps
_mipmaps
T@"TXRTextureInfo",&,N,V_info
T@"NSMutableArray",R,N,V_mipmaps
checkResourceIsReachableAndReturnError:
lastPathComponent
stringWithFormat:
initWithContentsOfURL:options:error:
_parseData:bufferAllocator:options:error:
handlesData:
_determineFileType:
parseData:bufferAllocator:options:error:
textureInfo
parsedImageAtLevel:element:face:
_fileIOQueue
_parser
_textureInfo
dictionaryWithObjects:forKeys:count:
mipmapOption
setObject:forKeyedSubscript:
initWithString:
texture
initWithFormat:
appendString:
baseFileAttributes
fileFormat
initFileURLWithPath:isDirectory:
colorSpace
exifOrientation
exportImage:url:uttype:colorSpace:orientation:error:
configs
absoluteString
name
defaultManager
fileExistsAtPath:isDirectory:
initWithFileAtPath:
open
JSONObjectWithStream:options:error:
close
objectForKeyedSubscript:
componentsSeparatedByString:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initWithDictionary:
interpretation
removeObjectForKey:
origin
idiom
graphicsFeatureSet
memory
displayColorSpace
scaleFactor
setString:
exportSetConfig:face:directoryPath:error:
stringByReplacingOccurrencesOfString:withString:
fileURLWithPath:
exportSet:location:error:
initToFileAtPath:append:
writeJSONObject:toStream:options:error:
integerValue
decodeCGImage:desiredPixelFormat:bufferAllocator:options:error:
setBytesPerRow:
setBytesPerImage:
setBuffer:
setOffset:
setPixelFormat:
setAlphaInfo:
setDimensions:
setCubemap:
setMipmapLevelCount:
setArrayLength:
decodeCGImageNonIndexed:desiredPixelFormat:bufferAllocator:options:error:
determineColorSpaceClass:displayGamut:options:
newCGImageFromImage:colorSpace:error:
initWithUnsignedChar:
T@"TXRTextureInfo",R,N
_imageInfo
T@"TXRTextureInfo",R,N,V_textureInfo
setError:
TQ,N,V_offset
T@"<TXRBuffer>",&,N,V_buffer
TQ,N,V_bytesPerRow
TQ,N,V_bytesPerImage
T@"NSError",&,V_error
_mipmapLevelCount
_arrayLength
TQ,N,V_alphaInfo
TQ,N,V_pixelFormat
T,N,V_dimensions
TQ,N,V_mipmapLevelCount
TQ,N,V_arrayLength
TB,N,V_cubemap
setColorSpace:
setExifOrientation:
setFileFormat:
_colorSpace
_exifOrientation
_fileFormat
T^{CGColorSpace=},N
TC,N,V_exifOrientation
TQ,N,V_fileFormat
specifyAllFaces
setFace:
face
doesSpecifyAllFaces
level
setLevel:
TQ,N,V_level
TQ,N
objectEnumerator
nextObject
removeObject:
initWithTexture:
addFileAttributesForLevel:
addFileAttributesForLevel:face:
addFileAttributesForLevel:fileFormat:colorSpace:exifOrientation:
addFileAttributesForLevel:face:fileFormat:colorSpace:exifOrientation:
setBaseFileAttributes:
fileAttributesList
setMipmapOption:
setMemory:
setGraphicsFeatureSet:
setIdiom:
setDisplayColorSpace:
setScaleFactor:
_texture
_baseFileAttributes
_fileAttributesList
_mipmapOption
_memory
_graphicsFeatureSet
_idiom
_displayColorSpace
_scaleFactor
T@"TXRAssetCatalogFileAttributes",&,N,V_baseFileAttributes
T@"NSSet",R,N,V_fileAttributesList
T@"TXRTexture",R,N,V_texture
TQ,N,V_mipmapOption
TQ,N,V_memory
TQ,N,V_graphicsFeatureSet
TQ,N,V_idiom
TQ,N,V_displayColorSpace
TQ,N,V_scaleFactor
addConfig:error:
setInterpretation:
setOrigin:
setName:
_interpretation
_origin
_name
_configs
T@"NSString",C,N,V_name
TQ,N,V_interpretation
TQ,N,V_origin
T@"NSArray",R,V_configs
pixelBytes:
isInteger:
isFloat:
isSRGB:
isBC1to5:
isBC6to7:
isPVRTC:
isETC2:
isASTC:
hasAlpha:
isGammaEncoded:
componentsPerPixel:
getBytes:length:
determineFormatFromType:format:internalFormat:baseInternalFormat:
parseImageData:WithOptions:bufferAllocator:
fileSystemRepresentation
_bytesOfKeyValueData
_isCompressed
_internalSizedFormatLookup
_deferredTextureInfo
_parserQueue
_shouldFlipVertically
numberWithUnsignedInteger:
newPixelFormatSetForCGImage:displayGamut:options:
initWithImage:dimensions:pixelFormat:
initWithCGImage:bufferAllocator:options:error:
initWithCGImage:pixelFormat:bufferAllocator:options:error:
exportToURL:uttype:error:
newCGImageWithColorSpace:error:
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8B16
Q16@0:8
v24@0:8Q16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
^v16@0:8
@32@0:8@16^v24
v16@0:8
@"TXRDefaultBuffer"
@"<TXRBufferMap>"16@0:8
@32@0:8@16^{_NSZone=}24
@32@0:8^v16Q24
@24@0:8Q16
@"NSMutableData"
@48@0:8^v16Q24@?32^@40
@"<TXRBuffer>"24@0:8Q16
@"<TXRBuffer>"48@0:8^v16Q24@?<v@?^vQ>32^@40
@48@0:8@16@24Q32^@40
@64@0:8@1624@40Q48^@56
@48@0:8Q16Q24@32Q40
@48@0:8Q16Q24Q32@40
@"<TXRBuffer>"
@"NSError"
@"<TXRDataSourceProvider>"
@44@0:8Q16Q24B32@36
@76@0:8Q16Q2432Q48Q56B64@68
v32@0:8@16Q24
@"NSMutableArray"
@76@0:8Q1624Q40Q48Q56B64@68
v40@0:8@16Q24Q32
@24@0:8@16
@48@0:8@16@24@32^@40
@76@0:816Q32Q40Q48Q56B64@68
@40@0:8@16@24^@32
B32@0:8@16^@24
v44@0:8Q16B24@28^@36
v48@0:8{_NSRange=QQ}16Q32^@40
@40@0:8Q16@24@32
16@0:8
@"<TXRBufferAllocator>"
v24@0:8@16
@"NSObject<OS_dispatch_semaphore>"
@"TXRImageInfo"
@20@0:8B16
@28@0:8Q16B24
@36@0:8Q16Q24B32
@"TXRTextureInfo"
@40@0:8Q16Q24Q32
@"TXRImageInfo"40@0:8Q16Q24Q32
@"TXRTextureInfo"16@0:8
Q24@0:8@16
v48@0:8@16@24@32^@40
@"NSObject<OS_dispatch_queue>"
@"<TXRParser>"
B44@0:8@16I24@28^@36
i40@0:8^{CGImage=}16Q24@32
@56@0:8^{CGImage=}16Q24@32@40^@48
B40@0:8@16@24^@32
B60@0:8@16@24r^{__CFString=}32^{CGColorSpace=}40C48^@52
^{CGImage=}40@0:8@16^{CGColorSpace=}24^@32
B48@0:8@16@24@32^@40
B48@0:8@"NSData"16@"<TXRBufferAllocator>"24@"TXROptions"32^@40
B24@0:8@"NSData"16
v32@0:816
v24@0:8^{CGColorSpace=}16
^{CGColorSpace=}16@0:8
C16@0:8
v20@0:8C16
^{CGColorSpace=}
v32@0:8Q16Q24
v44@0:8Q16Q24^{CGColorSpace=}32C40
v52@0:8Q16Q24Q32^{CGColorSpace=}40C48
@"TXRTexture"
@"TXRAssetCatalogFileAttributes"
@"NSMutableSet"
@32@0:8@16^@24
@"NSString"
C24@0:8Q16
B24@0:8Q16
{TXRImageMemoryLayout=QQ}40@0:8Q1624
v40@0:8@16@24@32
Q32@0:8I16I20I24I28
@"NSDictionary"
@"TXRDeferredTextureInfo"
@56@0:8@16Q24@32B40B44^@48
@52@0:8@16Q24@32B40^@44
@40@0:8^{CGImage=}16Q24@32
@56@0:8@1624Q40Q48
@48@0:8@1624Q40
@80@0:816Q32Q40Q48Q56@64Q72
@48@0:8^{CGImage=}16@24@32^@40
@56@0:816Q32Q40@48
B40@0:8@16r^{__CFString=}24^@32
^{CGImage=}32@0:8^{CGColorSpace=}16^@24
