@(#)PROGRAM:BiomeStorage  PROJECT:BiomeStorage-18.1
SEGB
BiomeStorage
Failed to decode key %@
classString
com.apple.Biome.BMStoreEvent
eventBody
eventDataVersion
timestamp
storeError
supportsSecureCoding
TB,R
frame
T@"BMFrame",R,N,V_frame
dataType
T#,&,N,V_dataType
Td,R,N
T@"<BMStoreData>",R,N
error
TC,R,N,V_error
v24@?0@"BMFrame"8@"BMFrameStore"16
bookmark
T@"BMStoreBookmark",R,N
Potentially overwriting whatever data is currently there
B24@?0(?=Qd)8(?=Qd)16
-[BMFrameStore appendFrameHeader:offset:]
-[BMFrameStore writeFrameForBytes:length:dataVersion:timestamp:]
segmentName
T@"NSString",C,N,V_segmentName
backingFile
T@"NSFileHandle",&,N,V_backingFile
BMStoreBookmark.m
Invalid parameter not satisfying: %@
streamId != nil
[streamId length] != 0
segmentName != nil
[segmentName length] != 0
streamId
iterationStartTime
%@ - %@
data
offset
T@"NSString",R,N,V_streamId
T@"NSString",R,N,V_segmentName
Td,R,N,V_iterationStartTime
TQ,R,N,V_offset
%@ %@
hasStreamId
TB,R,N
T@"NSString",&,N,V_streamId
hasSegmentName
T@"NSString",&,N,V_segmentName
hasIterationStartTime
TB,N
Td,N,V_iterationStartTime
hasOffset
TI,N,V_offset
pathname
T@"NSString",R,N
datastoreVersion
TQ,R,N,V_datastoreVersion
datastorePath
T@"NSString",R,N,V_datastorePath
segmentSize
TQ,R,N,V_segmentSize
%llu
q24@?0@"NSString"8@"NSString"16
B24@?0@"NSURL"8@"NSError"16
local
B16@?0@"BMStoreEvent"8
v24@?0@"BMFrame"8^B16
B16@?0@"BMFrameStore"8
v24@?0@"BMStoreEvent"8@"BMFrameStore"16
BMStreamDatastore.m
start <= end
metadata
framesStore
T@"BMFrameStore",&,N,V_framesStore
BMFrameStorePermissionReading
BMFrameStorePermissionWriting
BMFrameStorePermissionPruning
v8@?0
BMStoreDirectory.m
failed to construct the root path
Biome
streams
public
SIMULATOR_SHARED_RESOURCES_DIRECTORY
Library
com.apple.biome.BMStreamMetadata
eventDataClass
T#,R,N,V_eventDataClass
eventType
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
dataVersion
TI,R,N
framePtr
T^v,R,N,V_framePtr
frameHeader
T{?=(?={?=II}Q){?=ddII}},R,N,V_frameHeader
storePath
T@"NSString",R,N,V_storePath
T@"NSData",R,N,V_data
nextOffset
TQ,R,N,V_nextOffset
creationTimestamp
modifiedTimestamp
Event class is missing. We can't deserialize
Event class - %@ doesn't - conform to BMStoreData protocol or Maybe the framework containing the event class isn't linked. We can't deserialize
Failed to deserialize event with event class - %@
Can't get class from class string - %@
Data store streamId is %{public}@ while bookmark streamId is %{public}@
Frames file %{public}@ is invalid because the current size is less than a valid segment header. Potentially overwriting whatever data is currently there.
Unable to read frames file segment header %{public}@. Received data of %{public}lu length. Potentially overwriting whatever data is currently there
Segment header magic number %{public}.4s doesn't match %{public}.4s in file %{public}@. Potentially overwriting whatever data is currently there
Segment header in %{public}@ says file size is %llu but that is larger than the max size (%{public}lu) we can support.
Attempted to open %{public}@ for writing but the file is already full.
Not mapping an empty file %{public}@
Segment versions of %{public}@ don't match. Received %{public}d, expected %{public}d.%s
Failed to resize backing file
The Frame Header should never be nil when initializing with write permissions
Failed to map header for %{public}@ with permission %lu
Failed to map frames for %{public}@ with permission %lu
Removing frame store: %{public}@
Unable to unlink frame store (%{public}@). Error: %{public, darwin.errno}d
Exception when truncating file. %{public}@
Attempting to resize a non-writable file
Checksums don't match. Header: %u, Generated checksum: %{public}u. Skipping frame.
Attempting to read data from framestore out of bounds. Cannot read data of length %{public}lu at offset %{public}u.File size: %{public}lu
%@ - exception during %@: %@. Data length: %i
[%s] Frame should come in chronological order. Input %f < last %f
Attempted to move cursor beyond end of file. This shouldn't be possible
No space left to write to the mapped region
Failed to find a segment header while writing. Dropping incoming data
Sample too large %{public}zu but only %u supported
Unable to write frame for reason: %d
Unable to update status to written, someone else seems to have overwritten the value. We expect to see %llu, but instead are seeing %llu. The write status is %d
Unable to mark frame as pre-delete
Failed to zero out memory. %{public, darwin.errno}d
Unable to mark frame as deleted
Segment name is too large to store in the segment header. Truncating the segment name of %{public}zu to %{public}lu
No segment name provided for the segment header
Attempt to map zero bytes, size:%zu offset:%lld file:%{public}@
Failed to get file descriptor for NSFileHandle. %{public}@
Unable to mmap storage file %{public}@ because %{public, darwin.errno}d
Failed to madvise() because %{public, darwin.errno}d
Successfully mapped file: %{public}@
Unable to unmap %{public}p size %zu because %{public, darwin.errno}d
Failed to msync because %{public, darwin.errno}d
Unable to write because nothing is mapped
%{public}zu is too large to write
Cannot atomically access bytes if offset isn't 8 byte aligned. Given offset: %ld
Unable to read data at offset: %ld with length: %ld
Unable to read/write data at offset: %ld with length: %ld
Attempted to move cursor beyond end of file. Setting to End of File instead
Stream directory doesn't exist at path: %@
Fail to get segment files at URL: %@ error: %@
Failed to get file size for %{public}@. %{public}@
Can't create stream folder at %@ with error %@
Unable to open framestore with error: %@
event data class unavailable
Attempt to write nil event
Incoming event is of type: %@, while stream - %@ only accepts events of type: %@
Fail to create enumerator for stream: %@ startTime: %f
Failed to create enumerator with bookmark for stream: %@
Fail to write event due to nil event data
Not enough free space to write. Attempting to create new segment
Failed to write frames
Start date (%lf) is greater than end date (%lf)
Received an index beyond _segmentNames in enumerateSegmentsFrom:to:withBlock:
No more events and on last segment
Unable to getNextSegment. Error: %@
Failed to create new segment without error code
Failed to create new segment with error code %ld, %@
Failed to create new framestore filehandle with permission: %@, error: %@, path: %@
Received an index beyond _segmentNames in newEnumeratorFromStartTime:
Metadata doesn't exist
Unable to decode metadata. Err: %@
Unable to encode metadata. Err: %@
Error excluding %@ from backup: %@
Can't get class string
zPLR
zPLR
zPLR
zPLR
BMStoreEvent
NSSecureCoding
NSCoding
Testing
BMStoreEnumerator
BMFrameStore
BMMemoryMapping
BMStoreBookmark
BMProtoBufWrapper
BMPBStoreBookmark
NSCopying
BMSegmentName
BMStoreConfig
BMStreamDatastore
BMStoreDirectory
BMStreamMetadata
BMStreamDatastoreWriter
BMPrivateTesting
BMStreamDatastoreReader
BMStreamDatastorePruner
BMStoreData
NSObject
BMFrame
creationTimestamp
eventWithData:dataVersion:
data
dataVersion
init
dealloc
error
containsValueForKey:
stringWithFormat:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
failWithError:
decodeObjectOfClass:forKey:
checkAndReportDecodingFailureIfNeededForid:key:coder:errorDomain:errorCode:
unsignedIntValue
eventWithEventType:eventData:dataVersion:
initWithFrame:error:
doubleValue
encodeObject:forKey:
numberWithUnsignedInt:
timestamp
numberWithDouble:
numberWithUnsignedChar:
eventBody
isEqual:
hash
supportsSecureCoding
encodeWithCoder:
initWithCoder:
frame
dataType
setDataType:
_eventBody
_timestamp
_error
_frame
_dataType
initWithEventBody:timestamp:
streamId
isEqualToString:
segmentName
copySegmentWithFilename:error:
offset
iterationStartTime
initWithStreamDatastore:currentFrameStore:frameStoreOffset:iterationStartTime:
newFrameStoreOfSegmentContainingEventTime:
copyPeekUntypedEvent
copyNextUntypedEvent
tryToAddTypeInfoToStoreEvent:
copyNextEventAndMoveBookmark:
copyNextEvent
nextEventFromFrameStore:withOffset:withBlock:
modifiedTimestamp
nextOffset
initWithStream:segment:iterationStartTime:offset:
initWithStreamDatastore:bookmark:
initWithStreamDatastore:startTime:
nextEventWithContext:
copyPeekEvent
bookmark
_currentFrameStore
_frameStoreOffset
_iterationStartTime
seekToEndOfFile
seekToFileOffset:
pathname
readDataOfLength:
length
bytes
segmentHeaderFromFile:withVersion:
setSegmentName:
resizeBackingFileTo:
lastObject
count
firstObject
backingFile
UTF8String
sync
setBackingFile:
truncateFileAtOffset:
initWithBytes:length:
initWithHeader:storePath:data:framePtr:offset:nextOffset:
appendFrameHeader:offset:
updateHeader
framePtr
initWithFileHandle:maxSize:permission:datastoreVersion:
removeFrameStoreFile
enumerateFromOffset:withCallback:
writeFrameForBytes:length:dataVersion:timestamp:
markFrameAsRemoved:
_datastoreVersion
_frames
_header
_permission
_lastAbsoluteTimestamp
_segmentName
_backingFile
arrayWithObjects:count:
fileDescriptor
dataWithBytes:length:
dataWithBytesNoCopy:length:freeWhenDone:
canAtomicallyAccessOffset:
_protection
_advice
_start
_currentOffset
_size
_offset
_mappedAddress
_pageAlignedSize
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_descriptionDict
description
numberWithUnsignedLong:
proto
initWithData:
initWithProto:
setStreamId:
setIterationStartTime:
setOffset:
encodeAsProto
initWithProtoData:
decodeDoubleForKey:
checkAndReportDecodingFailureIfNeededFordouble:key:coder:errorDomain:errorCode:
_streamId
dictionaryRepresentation
dictionary
setObject:forKey:
allocWithZone:
copyWithZone:
isMemberOfClass:
hasStreamId
hasSegmentName
setHasIterationStartTime:
hasIterationStartTime
setHasOffset:
hasOffset
readFrom:
writeTo:
copyTo:
mergeFrom:
_has
stringWithUTF8String:
lastPathComponent
localStreamStoreDirectoryForPublicStream:
initWithStoreVersion:storeBasePath:segmentSize:
newStreamDefaultConfigurationForPublicStream:
initWithStoreBasePath:segmentSize:
datastorePath
datastoreVersion
segmentSize
numberWithUnsignedInteger:
sharedStreamConfigurationWithVersion:
newPublicStreamDefaultConfiguration
newPrivateStreamDefaultConfigurationWithStoreBasePath:
initWithStoreVersion:datastorePath:maxAllowedMappedPages:segmentSize:segmentResizeFactor:segmentPaddingFactor:
_datastorePath
_segmentSize
initWithFormat:
longLongValue
newFileNameWithTimestamp:
timestampWithFilename:
compare:
indexOfObject:inSortedRange:options:usingComparator:
objectAtIndexedSubscript:
defaultManager
fileExistsAtPath:
initFileURLWithPath:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
countByEnumeratingWithState:objects:count:
fileSizeOfURL:
addObject:
numberWithLongLong:
sortUsingComparator:
getResourceValue:forKey:error:
initWithStream:permission:config:
stringByAppendingPathComponent:
initWithStream:streamPath:permission:config:
_localStreamPath
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
orderedSegmentsInDirectory:includeZeroSizeSegments:
setFramesStore:
framesStore
loadMetadata
eventDataClass
writeEventWithEventBody:timestamp:
writeEventClass:
serialize
writeEventData:dataVersion:timestamp:
fetchEventsFrom:to:callback:
updateWithNewSegmentNames
shouldRemoveEmptyFrameStore:
enumerateSegmentsFrom:to:withBlock:
enumerateEventsFrom:to:withBlock:
newEnumeratorFromStartTime:
writeEventBytes:length:dataVersion:timestamp:
copySegmentAfterFrameStore:createNewSegment:
indexOfSegmentContainingEventTime:fromSegments:
indexOfObject:
indexForFrameStoreAfterFrameStore:
copyNextSegmentAfterIndex:
newFramestoreWithTime:
code
fileSystemRepresentation
initWithDomain:code:userInfo:
initWithFileDescriptor:closeOnDealloc:
initWithEventType:
saveMetadata:
metadataPath
dataWithContentsOfFile:
unarchivedObjectOfClass:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToFile:atomically:
initForReadingWithStream:config:
initForWritingWithStream:config:
initForPruningWithStream:config:
syncMappedFiles
segmentNames
eventClass
writeEventWithEventBody:
fetchEventsFrom:to:
removeEventsFrom:to:callback:
eventsFrom:to:shouldDelete:
newEnumeratorFromBookmark:
maxFileSize
_maxFileSize
_streamPath
_segmentNames
_metadata
_framesStore
_localStreamStoreDirectoryForPublicStream
_localStreamStoreDirectoryForPrivateStream
_localStreamStoreDirectoryForPublicStream:
copy
_simRootDirectoryForPublicStream:
initWithUTF8String:
UUIDString
fileURLWithPath:
setResourceValue:forKey:error:
path
_unitTestsRootDirectoryForPublicStream:
_macOSConfigPath:
isEqualStreamMetadata:
_eventDataClass
initWithStream:config:
streamIdentifier
_inner
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
json
frameHeader
storePath
_framePtr
_storePath
_data
_nextOffset
_frameHeader
B16@0:8
@36@0:8#16@24I32
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
d16@0:8
@28@0:8@16C24
v16@0:8
B56@0:8@16@24@32@40q48
B24@0:8@16
Q16@0:8
C16@0:8
#16@0:8
v24@0:8#16
@"<BMStoreData>"
@"BMFrame"
@32@0:8@16d24
@32@0:8@16@24
@48@0:8@16@24Q32d40
v24@0:8@?16
@20@0:8B16
@"BMStreamDatastore"
@"BMFrameStore"
{?=QdI[32c][4c]}28@0:8@16I24
@48@0:8@16Q24Q32Q40
B24@0:8Q16
v32@0:8Q16@?24
C32@0:8^{?=(?={?=II}Q){?=ddII}}16^Q24
C44@0:8r^v16Q24I32d36
@"BMMemoryMapping"
@"NSString"
@"NSFileHandle"
@24@0:8@"NSData"16
@"NSData"16@0:8
@24@0:8@"PBCodable"16
@"PBCodable"16@0:8
@48@0:8@16@24d32Q40
B56@0:8d16@24@32@40q48
@24@0:8^{_NSZone=}16
v24@0:8d16
v20@0:8B16
v20@0:8I16
I16@0:8
{?="iterationStartTime"b1"offset"b1}
@24@0:8Q16
@40@0:8Q16@24Q32
@56@0:8Q16@24Q32Q40f48f52
@32@0:8@16Q24
@24@0:8d16
d24@0:8@16
Q32@0:8d16@24
@28@0:8@16B24
q24@0:8@16
@40@0:8@16Q24@32
@48@0:8@16@24Q32@40
B32@0:8@16d24
@32@0:8d16d24
v40@0:8d16d24@?32
B36@0:8@16I24d28
B44@0:8r^v16Q24I32d36
v40@0:8@16Q24@?32
@24@0:8^q16
@32@0:8@16^@24
B24@0:8#16
@"NSMutableOrderedSet"
@"BMStreamMetadata"
@24@0:8#16
@28@0:8@16I24
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@28@0:8@"NSData"16I24
@88@0:8{?=(?={?=II}Q){?=ddII}}16@48@56^v64Q72Q80
^v16@0:8
{?=(?={?=II}Q){?=ddII}}16@0:8
@"NSData"
{?=""(?="frameStatus"{?="size"I"state"I}"frameStatusData"Q)"otherInfo"{?="creationTimestamp"d"modifiedTimestamp"d"checksum"I"dataVersion"I}}
