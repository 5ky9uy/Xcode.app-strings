viewDidLoad
makeViewServiceViewController
addChildViewController:
view
bounds
setFrame:
addSubview:
didMoveToParentViewController:
isLinkedOnOrAfterJupiter
frame
classicModeXScale
classicModeYScale
layer
setSublayerTransform:
_hostAuditToken
bundleRecordForAuditToken:error:
defaultWorkspace
SDKVersion
isVersion:greaterThanOrEqualToVersion:
currentVariant
_willAppearInRemoteViewController
.cxx_destruct
_wakingNowPlayingNotificationsController
initWithOptions:
initWithNowPlayingController:viewStyle:
setNowPlayingController:
nowPlayingController
setDelegate:
activeNowPlayingOrigin
setCurrentOrigin:
viewWillAppear:
beginObservingOrigins
viewDidDisappear:
endObservingOrigins
actionsForNowPlayingView:
type
predicateWithBlock:
filteredSetUsingPredicate:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
nowPlayingOriginsDidUpdateForController:
activeNowPlayingOriginDidUpdateForController:
init
_shouldRemoveViewFromHierarchyOnDisappear
preferredSmartRoutingMode
_nowPlayingController
T@"NMRNowPlayingController",&,N,V_nowPlayingController
NanoNowPlaying
SwiftUI
15.0
B24@?0@"NMUNowPlayingViewAction"8@"NSDictionary"16
NNPVSNowPlayingViewController
NNPVSNowPlayingViewController_Legacy
NMRNowPlayingControllerDelegate
NSObject
v16@0:8
B16@0:8
d16@0:8
@"NMUWakingNowPlayingNotificationsController"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"NMRNowPlayingController"16
v20@0:8B16
@24@0:8@16
@"NMRNowPlayingController"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.mediaremote.waking-now-playing-notifications</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/Applications/NanoNowPlayingViewService.app/NanoNowPlayingViewService</string>
</dict>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.audiocontrol.music</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.audiocontrol.music</string>
</array>
<key>com.apple.private.nanomediaremote</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Media/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.symptom_diagnostics</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.NanoMediaRemote</string>
<string>com.apple.NanoAudioControl</string>
<string>com.apple.BluetoothServices</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preferences.read-write</key>
<array>
<string>com.apple.mediaremote</string>
</array>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
viewDidLoad
makeViewServiceViewController
addChildViewController:
view
bounds
setFrame:
addSubview:
didMoveToParentViewController:
isLinkedOnOrAfterJupiter
frame
classicModeXScale
classicModeYScale
layer
setSublayerTransform:
_hostAuditToken
bundleRecordForAuditToken:error:
defaultWorkspace
SDKVersion
isVersion:greaterThanOrEqualToVersion:
currentVariant
_willAppearInRemoteViewController
.cxx_destruct
_wakingNowPlayingNotificationsController
initWithOptions:
initWithNowPlayingController:viewStyle:
setNowPlayingController:
nowPlayingController
setDelegate:
activeNowPlayingOrigin
setCurrentOrigin:
viewWillAppear:
beginObservingOrigins
viewDidDisappear:
endObservingOrigins
actionsForNowPlayingView:
type
predicateWithBlock:
filteredSetUsingPredicate:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
nowPlayingOriginsDidUpdateForController:
activeNowPlayingOriginDidUpdateForController:
init
_shouldRemoveViewFromHierarchyOnDisappear
preferredSmartRoutingMode
_nowPlayingController
T@"NMRNowPlayingController",&,N,V_nowPlayingController
NanoNowPlaying
SwiftUI
15.0
B24@?0@"NMUNowPlayingViewAction"8@"NSDictionary"16
NNPVSNowPlayingViewController
NNPVSNowPlayingViewController_Legacy
NMRNowPlayingControllerDelegate
NSObject
v16@0:8
B16@0:8
d16@0:8
@"NMUWakingNowPlayingNotificationsController"
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@16
v24@0:8@"NMRNowPlayingController"16
v20@0:8B16
@24@0:8@16
@"NMRNowPlayingController"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.UIKit.vends-view-services</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.avfoundation.allow-system-wide-context</key>
<true/>
<key>com.apple.mediaremote.waking-now-playing-notifications</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>path</string>
<key>value</key>
<string>/Applications/NanoNowPlayingViewService.app/NanoNowPlayingViewService</string>
</dict>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.private.dmd.policy</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.audiocontrol.music</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.audiocontrol.music</string>
</array>
<key>com.apple.private.nanomediaremote</key>
<true/>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>/Media/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.symptom_diagnostics</string>
<string>com.apple.identityservicesd.embedded.auth</string>
<string>com.apple.NanoMediaRemote</string>
<string>com.apple.NanoAudioControl</string>
<string>com.apple.BluetoothServices</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>com.apple.security.exception.shared-preferences.read-write</key>
<array>
<string>com.apple.mediaremote</string>
</array>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
