@(#)PROGRAM:HearingUtilities  PROJECT:Hearing-1
hu_device_updates_queue
UPDATING %@ - %@
%s:%d %@
-[HUDeviceController device:didUpdateProperty:]
v32@?0@8@"NSMutableDictionary"16^B24
v32@?0@?<v@?@"NSDictionary">8Q16^B24
v8@?0
Stopping Updates
-[HUDeviceController stopPropertyUpdates]
initWithDeviceType fake PSAP
-[AXFakePSAPDevice initWithDeviceType:]
Nathan's PSAP Device
AppleLeft-%d
AppleRight-%d
New PSAP Company
DEMO
PL3FT
PR1G4T
PB0TH
PDEMO
Default
Concert
v32@?0@"AXHearingAidMode"8Q16^B24
v32@?0@"NSNumber"8@"CBUUID"16^B24
WRITING %d for %@
-[AXFakePSAPDevice writeInt:toEar:forProperty:]
ax_hearing_device_fake_type_key
ax_psap_is_psap_key
T1111
Hello World
0x4C74BF03-0ED7-41B4-AB6F-D19A18BD15BF
0x4DE76FB3-819F-49B7-9738-C829B8E922FF
0x7B82D5C7-2516-4D68-A252-090A032F6CFE
0x0B80499D-B3F5-4815-818C-AFD793232BC4
0x75C8FA23-0E92-4762-9733-40AA89E98CBC
0x7C7260EC-A345-4C7D-A04F-CDC2F36DDD08
0x8E7A6FB6-C418-41F4-A550-AA8AEA223ADD
0x248B0918-5225-445E-BBEF-50A983BF39AF
0xED387E9D-1994-4E1A-B212-5B2CF23BCC48
ax_hearing_should_register_client_key
v32@?0@"NSNumber"8@"NSArray"16^B24
Handle incoming messsage ID: %llu %@
-[AXHAServer handleMessageWithPayload:forIdentifier:]
Unexpect messsage ID: %llu
Availability %@
v32@?0@"NSString"8@16^B24
v32@?0@"NSNumber"8@16^B24
B32@?0@"AXRemoteHearingAidDevice"8Q16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSArray"8Q16^B24
B32@?0@"NSArray"8Q16^B24
ax_hearing_should_begin_searching_key
Sending payload %@
-[AXHAServer writeValue:forProperty:andDeviceID:]
controller
reason
0x24E1DFF3-AE90-41BF-BFBD-2CF8DF42BF87
0x8D17AC2F-1D54-4742-A49A-EF4B20784EB3
0xC97D21D3-D79D-4DF8-9230-BB33FA805F4E
0x497EEB9E-B194-4F35-BC82-36FD300482A6
0xF3F594F9-E210-48F3-85E2-4B0CF235A9D3
0x6AC46200-24EA-46D8-A136-81133C65840A
0x21FF4275-C41D-4486-A0E3-DC11138BCDE6
0xA391C6F1-20BB-495A-ABBF-2017098FBC61
0xA28B6BE1-2FA4-42F8-AEB2-B15A1DBD837A
0x7BE94A55-8D91-4592-BC0F-EA3664CCD3A9
0x9C12A3DB-9CE8-4865-A217-D394B3BC9311
0xADC3023D-BFD2-43FD-86F6-7AE05A619092
0x16438C66-E95A-4C6F-8117-A6B745BD86FC
0xAEA12A32-60ED-43BA-BE6F-BA6092000FDB
0xEAF6FB18-090C-4EF7-AAB8-06518E16D502
0x76B3DB1F-44C4-46CC-A7B5-E9CE7DFBEF50
0x98924A39-6559-40A8-B302-3C8E40DBF834
0x066E7E7F-93E9-4D26-89AC-AECCDBAFA825
0x4656D3AC-C2DF-4096-96E7-713580B69CCD
0xF6E6AC8D-248E-433F-BC2C-E51E47DF3ECA
0xC60E7C73-203B-4B7C-AFC5-2FE79C5F2F01
0x4603580D-3C15-4FEC-93BE-B86B243ADA64
0xE893C687-7C43-4999-8FD0-6CB11D0F88CD
%@_%@
HearingAidLabel
v32@?0@"CBCharacteristic"8Q16^B24
v32@?0@"CBService"8Q16^B24
ax_hearing_device_man_key
ax_hearing_device_model_key
ax_hearing_device_man_model_key
ax_hearing_device_name_key
ax_hearing_device_lr_key
ax_hearing_device_left_peripheral_key
ax_hearing_device_right_peripheral_key
ax_hearing_device_isleft_key
ax_hearing_device_hiid_key
ax_hearing_device_hiidother_key
ax_hearing_device_uuid_key
v32@?0@8@16^B24
Found device IDs %@
-[AXHearingAidDevice initWithPersistentRepresentation:]
Missing left peripheral UUID %@
-[AXHearingAidDevice initWithLeftDevice:andRightDevice:]
Missing right peripheral UUID %@
Left HA
Right HA
Connection state: (%d, %d)
-[AXHearingAidDevice connectionDidChange]
Paired: %@ - %@
-[AXHearingAidDevice connectionDidChange]_block_invoke
v16@?0B8B12
Hearing aid isn't paired, but we're changing streaming prefs %@
Checking %@
-[AXHearingAidDevice didLoadOptionalBasicProperties]_block_invoke
Adding available %@ - %@
v32@?0@8Q16^B24
No optional properties on left
-[AXHearingAidDevice didLoadOptionalBasicProperties]
No optional properties on right
{%d} LEFT [%d, %d] RIGHT [%d, %d]
{%d} LEFT [%d]: (%d, %d, %d) RIGHT [%d]: (%d, %d, %d)
-[AXHearingAidDevice didLoadBasicProperties]
{%d} LEFT [%d]: (%d, %d, %d, %d, %d) RIGHT [%d]: (%d, %d, %d, %d, %d)
-[AXHearingAidDevice didLoadRequiredProperties]
MATE: self: %@ other %@
-[AXHearingAidDevice mateWithDevice:]
q24@?0@"AXHearingAidMode"8@"AXHearingAidMode"16
Setting notify %d for peripheral: %@ - %@
-[AXHearingAidDevice setNotify:forPeripheral:]
Not completely loaded, trying again
-[AXHearingAidDevice setKeepInSync:]
Loading %@ for %@
-[AXHearingAidDevice loadProperties:forPeripheral:withRetryPeriod:]
Not loading %@, %d, %d - %@ = %@
-[AXHearingAidDevice loadProperties:forPeripheral:withRetryPeriod:]_block_invoke_2
Skipping properties %d, %d, %d
-[AXHearingAidDevice loadRequiredProperties]
Loading required properties for %@ - (%d, %d, %d, %d, %d, %d)
-[AXHearingAidDevice loadRequiredProperties]_block_invoke
v12@?0B8
(%@ - %@)
-[AXHearingAidDevice loadFailedProperties]
New name: %@
-[AXHearingAidDevice updateNameWithAdvertisingData:]
FAILED left write response check %lld
-[AXHearingAidDevice writeValueForProperty:]
FAILED right write response check %lld
Left %lld - Right %lld
-[AXHearingAidDevice _sendDelayedWrites]
Not paired
Not writing because peripheral isn't paired
-[AXHearingAidDevice delayWriteProperty:forPeripheral:]_block_invoke
[%d] %lld - %@
Writing %d for %@ - %@
-[AXHearingAidDevice writeInt:toEar:forProperty:]
-[AXHearingAidDevice writeSignedInt:toEar:forProperty:]
Reading %@ from %@
-[AXHearingAidDevice readValueForCharacteristic:fromPeripheral:]
Reading nil characteristic
B32@?0@8Q16^B24
Attempting to set readonly property: %ld
-[AXHearingAidDevice setValue:forProperty:]
Unknown property: %ld
Reading component property %@
-[AXHearingAidDevice valueForProperty:]
Compound property: %ld
Ignored property without characteristic: %ld
DeviceUUID NULL %@
-[AXHearingAidDevice deviceDescription]
v32@?0@"NSNumber"8Q16^B24
Reloading services %@, %@
-[AXHearingAidDevice peripheral:didModifyServices:]
EMPTY SERVICES
-[AXHearingAidDevice peripheral:didDiscoverServices:]
%@ - %@
v32@?0@8@"CBUUID"16^B24
Unknown service: %@ - %@
-[AXHearingAidDevice peripheral:didDiscoverServices:]_block_invoke
Error discovering services (%@): %@
EMPTY CHARACTERISTICS %@
-[AXHearingAidDevice peripheral:didDiscoverCharacteristicsForService:error:]
Loaded auth service characteristics
Unknown service: (%d) %@ - %@
IsMFiAuthenticated_CertClass0B
Error discovering characteristics (%@): %@
Error reading characteristic value (%@)(%@): %@
-[AXHearingAidDevice peripheral:didUpdateValueForCharacteristic:error:]
Manufacturer found: |%@|
-[AXHearingAidDevice peripheral:didUpdateCharacteristic:]
Hearing aid Manufacturer found: %@
Model Number found: |%@|
Hearing aid Model Number found: %@
Firmware version found: %@
Hearing aid right firmware version found: %@
Hearing aid left firmware version found: %@
Hardware version found: %@
Hearing aid right hardware version found: %@
Hearing aid left hardware version found: %@
Getting property: %@ (%@) for %@ - %@
Left
Right
B32@?0@"AXHearingAidMode"8Q16^B24
DefaultProgramName
Not reading presets, already reading
Not setting category
Hearing aid out of spec: %d
DisableLEA
Resetting connection to disable streaming %@
%@ peripheral %@, services %@
-[AXHearingAidDevice peripheral:didInvalidateServices:]
-[AXHearingAidDevice peripheral:didWriteValueForCharacteristic:error:]
Error writing characteristic value (%@): %@
Did pair with result %d - %@
-[AXHearingAidDevice pairingDidCompleteForPeripheral:]_block_invoke
Did Unpair: %@
-[AXHearingAidDevice peripheralDidUnpair:]
AXHearingAidDevice:%p:[%@] [%@, %@, %@, %@] L:%d R:%d,  l-uuid: %@ r-uuid: %@ - [%@, %@] [%@, %@]
LOADED
NOT LOADED
PAIRED
NOT PAIRED
PERSISTENT
NOT PERSISTENT
Available
NOT Available
Adding periperal %@ - %@
-[AXHearingAidDevice addPeripheral:]
-[AXHearingAidDevice addPeripheral:asLeft:]
Current controller is device %d, %d, %d - %@
-[AXHAController currentDeviceController]
Current controller is nearby
Checking paired %d
-[AXHAController hearingAidsPaired]
Changing pairing %@ - %@
-[AXHAController setListenForAvailableDeviceUpdates:]_block_invoke_2
Missing info %@
-[AXHAController setListenForAvailableDeviceUpdates:]_block_invoke
v32@?0@"AXHearingAidDevice"8Q16^B24
No_HA_Devices
Available Devices: %@
v16@?0@"NSArray"8
%d, %d, %d - %@ - %@ == %d, %@
-[AXHAController setPairedHearingAid:]
HearingAidPairing
Skipping nearby because no hearing aids paired.
UPDATE %@
-[AXHAController setPairedHearingAid:]_block_invoke
v16@?0@"NSDictionary"8
Starting connection handoff
-[AXHAController connectToPairedDevice]
v20@?0B8@"HUNearbyDevice"12
com.apple.BTServer.le
Registing for device availability %d, %d, %lf
-[AXHAController registerForAvailableDevicesUpdates:]_block_invoke
Setting active scan %d, %d
-[AXHAController registerForAvailableDevicesUpdates:]_block_invoke_2
Found more than one matching hearing aid %@
-[AXHAController writeDeviceProperty:]
_AXNotification_
PairedHearingUUIDsPreference
KnownPeripheralUUIDsPreference
WatchSyncPairedUUIDsPreference
CloudHearingAidsPreference
CloudHearingDevicesPreference
HearingAidEarIndependencePreference
HearingAidControlAvailableOnLockScreen
HearingAidStreamToLeft
HearingAidStreamToRight
HearingAidsCallAudioRoute
HearingAidsMediaAudioRoute
HearingAidsCloudBlacklist
HearingAidMultideviceSettings
HearingAidMultideviceAudio
HearingAidSystemSoundsStream
HearingAidComplicationPreferredDisplayMode
HearingFeatureUsagePreference
HearingAidsLiveListenExport
hearing-icloud-initialization
Skipping iCloud setup. Device is locked
-[AXHASettings init]
NanoHearingDevicesDefaultsChanged
Account: %d
-[AXHASettings _initializeICloudSetup]
ax_hearing_device_version_key
application-identifier
Unable to get entitlements for client task. Error: %@
-[AXHASettings shouldUseiCloud]
com.apple.accessibility.heard
New iCloud %d
-[AXHASettings iCloudAccountDidChange:]_block_invoke
Should we push local aids to cloud? should use cloud: %d, should local aids be pushed: %d, fake hearing aids %d
-[AXHASettings pushLocalHearingAidsToiCloud]
Pushing local aids to iCloud %@
Removing from iCloud
%@%@
UnknownKey
Changing paired hearing aids %@
-[AXHASettings setPairedHearingAids:]
B32@?0@"NSString"8Q16^B24
Settings changed on companions %@
void AccessibilitySettingsChangedOnCompanion(CFNotificationCenterRef, void *, CFStringRef, void *, CFDictionaryRef)
Skipping update
/System/Library/ControlCenter/Bundles/HearingAidsModule.bundle
com.apple.accessibility.controlcenter.hearingdevices
com.apple.accessibility.hearing.setup.ready
com.apple.accessibility.hearing.ui.availability
com.apple.accessibility.hearing.audio.transfer.availability
com.apple.accessibility.hearing.audio.transfer
com.apple.accessibility.hearing.audio.transfer.complete
com.apple.accessibility.hearingaid.audio.route.changed
com.apple.accessibility.hearingaid.nearby.devices.changed
com.apple.accessibility.hearingaid.trustchain
7D74F4BD-C74A-4431-862C-CCE884371592
180a
8341F2B4-C013-4F04-8197-C4CDB42E26DC
EBC9A4A0-44FB-4D20-8B4C-4808AFDBCEE8
9FBF120D-6301-42D9-8C58-25E699A21DBD
2a29
2a27
2a26
2a24
HearingAidPresentAlertNotificationName
HUEDSlowLeqIdentifier
HUEDFastLeqIdentifier
HUEDEnabledIdentifier
HUEDThresholdCrossedIdentifier
com.apple.noise.onboarding
com.apple.noise.threshold
hu_nearby_media
Media server died.
-[HUNearbyController mediaServerDied]
Bluetooth isn't available. Not requesting connection.
-[HUNearbyController shouldRequestAudioConnectionForCall:withCompletion:]
Should request audio %d, %d, %d, %d, %d, %d
-[HUNearbyController shouldRequestAudioConnectionForCall:withCompletion:]_block_invoke
Requesting connection from %ld - %@
-[HUNearbyController requestConnectionForReason:]_block_invoke
v16@?0@"HUNearbyDevice"8
B32@?0@"HUNearbyDevice"8Q16^B24
B16@?0@"TUCall"8
Reliquishing for reason %ld
-[HUNearbyController relinquishConnectionForReason:]
Updating state to %ld
-[HUNearbyController updateStateOnDeviceQueue]
Already searching
-[HUNearbyController start]
Starting search
Discovery interrupted
-[HUNearbyController start]_block_invoke
Discovery invalidated
Link failed to activate %@
Companion link is active
com.apple.accessibility.hearing.nearby
v32@?0@"RPCompanionLinkDevice"8Q16^B24
Received request %@ = %@ - %@ - %@
Wrong queue %@ - %@
v32@?0@"NSDictionary"8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSDictionary"@"NSError">24
Companion link device found %@
v16@?0@"RPCompanionLinkDevice"8
Companion link device lost %@
Companion link device changed %@
v20@?0@"RPCompanionLinkDevice"8I16
v16@?0@"NSError"8
Stopping
-[HUNearbyController stop]
v32@?0@"HUNearbyDevice"8Q16^B24
Checking connection %@
-[HUNearbyController checkConnectionPeers:]_block_invoke
Checking connection %@ - %@
-[HUNearbyController checkConnectionToHearingDevice:]_block_invoke
-[HUNearbyController hasConnectionToHearingDevice]
Sending %@ to %@ - %@
-[HUNearbyController sendMessage:toDevices:]
B32@?0@"RPCompanionLinkDevice"8Q16^B24
Added device %@
-[HUNearbyController addDeviceWithIdentifier:]
No active device with identifier found %@ - %@ - %@
%ld== %@ - %@
-[HUNearbyController deviceWithIdentifier:didReceiveMessage:]
We shouldn't be connected
-[HUNearbyController deviceWithIdentifier:didReceiveMessage:]_block_invoke
Relinquishing connection %d
We shouldn't be connecting
Asking for device property read but device is nil
Unknown device ID %@ - %@
Updating controller %@
Nearby connection status %@ - iswatch: %d= connected peer: %@
-[HUNearbyController currentConnectionStatus]
Requesting %@
-[HUNearbyController updateProperty:forDeviceID:]_block_invoke
User requested handoff
void UserRequestedAudioTransferNotification(CFNotificationCenterRef, void *, CFStringRef, void *, CFDictionaryRef)
com.apple.ax.hearingaids
ha_updates_queue
Device stopped advertising. Removing %@
-[AXHearingAidDeviceController clearMissingHearingAids]_block_invoke_3
v32@?0@8@"NSDate"16^B24
Starting scan %@
-[AXHearingAidDeviceController searchForAvailableDevices]_block_invoke_2
Already scanning
-[AXHearingAidDeviceController searchForAvailableDevices]
Resetting connection to %@
-[AXHearingAidDeviceController resetConnectionToPeripheral:]
Requesting connection [%ld] to %@
-[AXHearingAidDeviceController connectToPeripheral:]_block_invoke
Enabling streaming to LEFT %@
Disabling streaming to LEFT %@
Enabling streaming to RIGHT %@
Disabling streaming to RIGHT %@
Requesting disconnect: %@
-[AXHearingAidDeviceController disconnectFromPeripheral:]_block_invoke
Disconnection from %@
-[AXHearingAidDeviceController disconnectFromHearingAidWithDeviceUUID:]
Cancelling connections
-[AXHearingAidDeviceController cancelPendingConnections]
Stopping scan
-[AXHearingAidDeviceController stopSearching]
B32@?0@"AXHearingAidDevice"8Q16^B24
Should relinquish %d, %d, %d, %d
-[AXHearingAidDeviceController shouldRelinquishForPartialConnection:]
Wrong number of paired devices %@
Partial pair %d = %@
-[AXHearingAidDeviceController checkPartiallyPairedWithCompletion:]_block_invoke_2
-[AXHearingAidDeviceController checkPartiallyPairedWithCompletion:]
Found connected device %@
-[AXHearingAidDeviceController isConnected]_block_invoke
v32@?0@?<v@?@"NSArray">8Q16^B24
Replacing %@ with %@
-[AXHearingAidDeviceController replaceDevice:withDevice:]
Device %@ did merge with: %@
-[AXHearingAidDeviceController mergeDevice:withDevice:]
Device finished loading %@
-[AXHearingAidDeviceController deviceDidFinishLoading:]
BT not available. Caching [%ld, %d]
-[AXHearingAidDeviceController sendRequestToCentralManager:]
Central state (%ld) %d = %d
-[AXHearingAidDeviceController centralManagerDidUpdateState:]
centralManager ON
centralManager OFF
-[AXHearingAidDeviceController centralManager:didRetrievePeripherals:]
v32@?0@"NSString"8Q16^B24
v32@?0@"CBPeripheral"8Q16^B24
-[AXHearingAidDeviceController centralManager:didRetrieveConnectedPeripherals:]
%@ - %@ - %@ - %@
-[AXHearingAidDeviceController centralManager:didDiscoverPeripheral:advertisementData:RSSI:]
v32@?0@"CBUUID"8Q16^B24
Connecting %d = [%d, %d, %d, %d]
%@ in %@
-[AXHearingAidDeviceController centralManager:didConnectPeripheral:]
More than one valid hearing device %@
No device for peripheral %@
IsHearingAid
-[AXHearingAidDeviceController centralManager:didFailToConnectPeripheral:error:]
Non fatal error. Attempting reconnect
Fatal error
%@ - %@ - %@
-[AXHearingAidDeviceController centralManager:didDisconnectPeripheral:error:]
Pairing completed %@ - %@
-[AXHearingAidDeviceController pairingAgent:peerDidCompletePairing:]
Found easy paired peripheral %@ - %@
Creating new easy pairing device %@
Peripheral missing tag %@
Not iCloud paired. Storing UUIDs %@
Skipping pairing becuase not a hearing device %@
-[AXHearingAidDeviceController pairingAgent:peerDidFailToCompletePairing:error:]
Did Unpair %@ in device %@
-[AXHearingAidDeviceController pairingAgent:peerDidUnpair:]
Unpairing [%d] %@
-[AXHearingAidDeviceController unpairPeripheralWithUUID:]_block_invoke
Not unpairing %@
Not Unpairing %@
-[AXHearingAidDeviceController unpairPeripheralWithUUID:]
New aids: %@
-[AXHearingAidDeviceController pairedHearingAidsDidChange]
Persistent device %@, %@
No BT peripherals with identifiers, unpairing %@
-[AXHearingAidDeviceController pairedHearingAidsDidChange]_block_invoke
Adding peripheral to device [%d] %@
No BT identifiers %@, unpairing rep %@
HAFakeSearch
Unknown: %@
Battery
Left/Right
HA ID
Other HA ID
Mic Attenuation
Stream Attenuation
Available Programs
Active Program
Program Name Selector
Program Name
Program Category
Services
Characteristics
Program Update
Name
Manufacturer
Model
Connection Status
Firmware
Hardware
Device ID
Device Description
Paired Status
Battery Low
Spec Version
Bluetooth Pairing
Substantially Different
Sensitivity
Stream Step Size
Microphone Step Size
Sensitivity Step Size
Active Streaming Program
Treble
Bass
Mixed Volume
Mixed Volume Step Size
Properties %@
 and 
HearingUtilities_Noise
HearingAidSupport
HearingAidInputOptionsLeft
HearingAidInputOptionsNeither
HearingAidInputOptionsRight
HearingAidInputOptionsAutomatic
Unknown
Relaying
Connected
Proxy Connected
hw.model
complication.preferred.display.mic.volume
complication.preferred.display.program
v12@?0I8
Retried media pause, %@
success
fail
-[HUUtilities pauseNowPlaying:withQueue:andCompletion:]_block_invoke_3
Media Pause command %@
-[HUUtilities pauseNowPlaying:withQueue:andCompletion:]_block_invoke
Retried media play, %@
-[HUUtilities pauseNowPlaying:withQueue:andCompletion:]_block_invoke_2
Media Play command %@
hai.%@
hai.
Selecting program %@ - %@
-[NSArray(_AX_HA_PROGRAMS_ARRAY_) setProgram:withOtherSidePrograms:selected:]
q24@?0@8@16
Skipping tag %@ - %@
-[CBPeripheral(_AX_HA_) axTag:]
Skipping untag %@ - %@
-[CBPeripheral(_AX_HA_) axUntag:]
Requesting connect: %@
-[AXRemoteHearingAidDevice connect]
-[AXRemoteHearingAidDevice disconnectAndUnpair:]
Haven't loaded %@
-[AXRemoteHearingAidDevice checkDidLoadProperties:]
-[AXRemoteHearingAidDevice _updateSelectedProgramsProperties]
AXHearingPropertyStreamingProgramActive not available
-[AXRemoteHearingAidDevice _writeAllProgramSelectionsToPeripheral]
-[AXRemoteHearingAidDevice setKeepInSync:]
%p = property:%@ - value:%@
-[AXRemoteHearingAidDevice setValue:forProperty:]
AXHearingPropertyProgramsAvailable %@
v32@?0@"NSDictionary"8Q16^B24
Unknown property: %lld
-[AXRemoteHearingAidDevice _valueForProperty:]
AXRemoteHearingAidDevice:%p:[%@] [%@, %@] [%d] {%@}
com.apple.Noise
NoiseEnabled
OnboardingCompleted
NotificationsEnabled
NotificationsThreshold
NotificationsMuteDate
CurrentLeq
LeqTimestamp
LeqDuration
ThresholdMigration
ThresholdVersion
NanoNoiseSettingsChanged
com.apple.noise
enabled
@"NSDictionary"8@?0
ENABLE_NOISE
ENVIRONMENTAL_TITLE
ENVIRONMENTAL_MEASUREMENT_FOOTER
NOISE_NOTIFICATIONS
NOISE_THRESHOLD
NSLink
NOISE_THRESHOLD_FOOTER
NOISE_THRESHOLD_FOOTER_LINK
https://support.apple.com/HT209593
DECIBELS
NO_NOTIFICATIONS
LIMIT_PER_DAY
THRESHOLD_DESCRIPTION_FOOTER
THRESHOLD_DESCRIPTION_FOOTER_NO_DECIBELS
name
category
index
isSelected
%@ - %@ (%@) - %d: Category: %ld Ear: %d
selected
not selected
com.apple.private.tty.database
com.apple.private.contactsui
com.apple.Contacts.database-allow
com.apple.CoreTelephony.CommCenterHelper.allow
com.apple.private.tty.settings
com.apple.accessibility.automation.client
com.apple.accessibility.AccessibilityUIServer
com.apple.CoreRoutine.preferences
com.apple.private.kernel.jetsam
com.apple.private.accessibility.security.canAuthorize
com.apple.accessibility.environmentaldosimetry
com.apple.carousel.clockfacestatusview
personal_audio_access_queue
@"HCXPCMessage"16@?0@"HCXPCMessage"8
v16@?0@"NSObject<OS_xpc_object>"8
XPC error: %s
-[AXHeardController startServer]_block_invoke_17
Error in client connection event handler
-[AXHeardController handleNewConnection:]_block_invoke
Message missing entitlement %d - %llu - %s: %@
Malformed message %@
Error: %@
-[AXHeardController sendMessage:withError:]_block_invoke
-[AXHeardController sendUpdateMessage:forIdentifier:]_block_invoke_2
Client doesn't want update for: %d
-[AXHeardController sendUpdateMessage:forIdentifier:]_block_invoke
v32@?0@"HCXPCClient"8Q16^B24
-[AXHeardController sendClientsMessageWithPayload:excluding:]_block_invoke_2
B32@?0@"HCXPCClient"8Q16^B24
Found clients %llu = %@
-[AXHeardController countOfClientsListeningForIdentifier:]
%llu - %@
-[AXHeardController handleMessage:forIdentifier:]
User level setup available
void UserLevelHearingSetupAvailable(CFNotificationCenterRef, void *, CFStringRef, void *, CFDictionaryRef)
SaW+DA+cbiqDHrex8MTABA
Initializing HUNoiseController
-[HUNoiseController init]
com.apple.HearingUtilities.HUNoiseController.DataQueue
Notification mute date changed: %@
-[HUNoiseController init]_block_invoke
NoiseAlertTitle
NoiseAlertLevelContent80
NoiseAlertLevelDetailedContent80
NoiseAlertLevelContent85
NoiseAlertLevelDetailedContent85
NoiseAlertLevelContent90
NoiseAlertLevelDetailedContent90
NoiseAlertLevelContent95
NoiseAlertLevelDetailedContent95
NoiseAlertLevelContent100
NoiseAlertLevelDetailedContent100
NoiseAlertDamageWarning
Notification request failed to add to notification center with error: %@
-[HUNoiseController showNotificationForAlertType:]_block_invoke
Notification request added to notification center: %@
-[HUNoiseController showNotificationForAlertType:]
Didn't receive measurements from ADAM.
-[HUNoiseController restartADAMTimer]_block_invoke
stop receiving audio dosage samples. clearing cached values
-[HUNoiseController _stopReceivingAudioDosageSamples]
Resetting notifications since it has past the notification mute date of %@
-[HUNoiseController applyNotificationLogicForSPL:withDuration:]
Failed while checking to reset notifications because buffer is empty.
-[HUNoiseController checkToResetNotificationsForSPL:withDuration:andBuffer:forTime:]
Resetting notifications for Leq %0.1f dB being under %i dB threshold for minimum reset time
Resetting notifications since it has been more than general reset time
Failed while checking to surface notification because buffer is empty.
-[HUNoiseController checkToSurfaceNotificationForSPL:withDuration:andBuffer:forTime:]
Sample is above threshold of %i dB and buffered more than %i ms
Leq buffer gating date: %@
Sample is beyond gate date: %0.1f, %@
-[HUNoiseController checkToSurfaceNotificationForSPL:withDuration:andBuffer:forTime:]_block_invoke
v32@?0@"HUNoiseSample"8Q16^B24
Total count of samples beyond gate date: %i
Count of samples beyond gate date and above threshold: %i
Checking to surface notification: %i percent of last %i seconds of samples are above %i dB set threshold - calculating leq
Calculated Leq: %0.1f dB
Leq over last 3 minutes is %0.0f dB, which is over set threshold of %i dB.
Completed surfacing notification at %@ for Leq %0.1f dB and writing sample to HK
com.apple.noise.notification
timeNotified
notificationThreshold
[Analytics]: Failed while checking to reset notifications because buffer is empty.
-[HUNoiseController checkToResetAnalyticsNotificationsForSPL:withDuration:andBuffer:forTime:andThreshold:]
[Analytics]: Resetting notifications for Leq %0.1f dB being under %i dB threshold for minimum reset time
[Analytics] Resetting notifications since it has been more than general reset time for %i dB threshold
[Analytics] Failed while checking to surface notification because buffer is empty.
-[HUNoiseController checkToSurfaceAnalyticsNotificationForSPL:withDuration:andBuffer:forTime:andThreshold:]
[Analytics] Sample is above threshold of %i dB and buffered more than %i ms
[Analytics] Leq buffer gating date for %i dB threshold: %@
[Analytics] Sample is beyond gate date for %i dB threshold: %0.1f, %@
-[HUNoiseController checkToSurfaceAnalyticsNotificationForSPL:withDuration:andBuffer:forTime:andThreshold:]_block_invoke
[Analytics] Total count of samples beyond gate date for %i dB threshold: %i
[Analytics] Count of samples beyond gate date and above %i dB threshold: %i
[Analytics] Checking to surface notification: %i percent of last %i seconds of samples are above %i dB set threshold - calculating leq
[Analytics] Leq over last 3 minutes is %0.0f dB, which is over set threshold of %i dB.
com.apple.noise.alertCount
decibel
[Analytics] Analytics notification surfaced for Leq %0.1f dB and analytics threshold %i dB
Failed to maintain circular buffer because buffer is empty.
-[HUNoiseController maintainCircularBuffer:forTime:]
Failed to calculate Leq for buffer because buffer is empty.
-[HUNoiseController calculateLeqForBuffer:]
Nathan's Hearing Aid
Carbondale
That Fruit Company
L3FT
R1G4T
B0TH
T0B1AS
IL5440
Theater
Restaurant
Television streamer
Mixing streamer
Mixing streamer 2
Park
Bowling
Skydiving
Parking lot
Baseball game
Space Station Ring Toss Jacuzzi
-[AXFakeHearingAidDevice writeInt:toEar:forProperty:]
T66574jhsgjd
LadyBug Whisperer
Watch
%@ - %@ [%@] %@ - %@
Resetting %@
-[HUNearbyDevice reset]
Stopping %@
-[HUNearbyDevice stop]
Device did become active %@
-[HUNearbyDevice setupSessionIfNecessary]_block_invoke
Client terminated %@
Received request outside %@ - %@
Received request %@ - %@ - %@
Purging message cache
-[HUNearbyDevice purgeMessageCache]
Sending %@ - %@
-[HUNearbyDevice sendMessage:]
Removing key %@
Received send response %@ - %@ - %@ - %@
-[HUNearbyDevice sendMessage:]_block_invoke
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
Set current Connection Status - %@ for %@
-[HUNearbyDevice setConnectionStatus:]
%{public}s
Device paired but doesn't contain peripheral %@
Message missing entitlement %d - %s, message: %llu: %@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
HUDeviceController
AXHARemoteUpdateProtocol
NSObject
AXFakePSAPDevice
HUNoiseSample
AXPSAPDevice
AXHAServer
AXHAListenerHelper
AXHearingAidDevice
CBPeripheralDelegate
AXHADeviceProtocol
2y,dB
AXHAController
AXHASettingsListenerHelper
AXHASettings
HANanoSettings
HUNearbyController
HUNearbyDeviceDelegate
AXHearingAidDeviceController
CBCentralManagerDelegate
AXHADeviceControllerProtocol
HUUtilities
_AX_HA_
_AX_HA_PROGRAMS_ARRAY_
_AX_HA_DEPENDENT_ENUMERATION_
HUFakeXPCClient
AXRemoteHearingAidDevice
HUNoiseSettingsListenerHelper
HUNoiseSettings
AXHearingAidMode
NSSecureCoding
NSCoding
AXHAMessageHandlerContext
AXHeardController
HCHeardControllerProtocol
UNUserNotificationCenterDelegate
AXHAUltronController
HUNoiseController
AXFakeHearingAidDevice
HUNearbyDevice
init
setDeviceUpdatesQueue:
array
setUpdateDeviceBlocks:
updateDeviceBlocks
stringWithFormat:
UTF8String
deviceUUID
copy
deviceUpdatesDescription
deviceUpdatesQueue
hearingAidForDeviceID:
representsLocalDevices
valueForProperty:
setObject:forKey:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
setDeviceUpdatesDescription:
objectForKey:
dictionary
addEntriesFromDictionary:
numberWithUnsignedLongLong:
addObject:
removeAllObjects
device:didUpdateProperty:
setValue:forProperty:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
updateProperty:forDeviceID:
writeValue:forProperty:andDeviceID:
registerForPropertyUpdates:
stopPropertyUpdates
.cxx_destruct
_deviceUpdatesQueue
_deviceUpdatesDescription
_updateDeviceBlocks
T@"NSObject<OS_dispatch_queue>",&,N,V_deviceUpdatesQueue
T@"NSMutableDictionary",&,N,V_deviceUpdatesDescription
T@"NSMutableArray",&,N,V_updateDeviceBlocks
initWithPeripheral:
setType:
setName:
manufacturerForType
arrayWithObjects:count:
setManufacturer:
modelForType
setModel:
setLeftUUID:
setRightUUID:
leftAvailable
setLeftMicrophoneVolume:
setLeftStreamVolume:
setLeftFirmwareVersion:
setLeftHardwareVersion:
availableEars
setAvailableEars:
rightAvailable
setRightMicrophoneVolume:
setRightFirmwareVersion:
setRightHardwareVersion:
createPrograms
programs
firstObject
selectProgram:forEar:
setDeviceType:
connect
dealloc
type
setConnected:
sharedController
connected
setCategory:
setIndex:
setEar:
index
setLeftPresetBitmask:
setRightPresetBitmask:
arrayWithArray:
characteristicsUUIDs
unsignedLongLongValue
excludedProperties
availablePropertiesForPeripheral:
supportsCombinedPresets
sharedInstance
independentHearingAidSettings
programsListsAreEqual
leftPrograms
count
rightPrograms
objectAtIndex:
leftSelectedProgram
rightSelectedProgram
leftSelectedStreamingProgram
rightSelectedStreamingProgram
numberWithUnsignedChar:
numberWithChar:
persistentRepresentation
dictionaryWithDictionary:
numberWithBool:
isConnected
numberWithUnsignedInt:
arrayWithObjects:
dictionaryWithObjects:forKeys:count:
setPairedHearingAids:
initWithDeviceType:
disconnect
isLeftConnected
isRightConnected
hasConnection
isPersistent
deviceSupportsProperty:
propertyIsAvailable:forEar:
showCombinedPrograms
writeInt:toEar:forProperty:
writeSignedInt:toEar:forProperty:
didLoadBasicProperties
didLoadRequiredProperties
persist
registerWriteBlock:
setNewName:
isFakeDevice
deviceType
name
manufacturer
model
leftUUID
rightUUID
isConnecting
setIsConnecting:
leftFirmwareVersion
rightFirmwareVersion
leftHardwareVersion
rightHardwareVersion
leftPeripheral
setLeftPeripheral:
rightPeripheral
setRightPeripheral:
setExcludedProperties:
_leftFakePrograms
_rightFakePrograms
_writeBlock
_isConnecting
_connected
_deviceType
_name
_manufacturer
_model
_leftUUID
_rightUUID
_leftFirmwareVersion
_rightFirmwareVersion
_leftHardwareVersion
_rightHardwareVersion
_type
_excludedProperties
TB,N,V_connected
T@"NSString",&,N,V_name
T@"NSArray",&,N,V_manufacturer
T@"NSArray",&,N,V_model
T@"NSString",&,N,V_leftUUID
T@"NSString",&,N,V_rightUUID
TB,N,V_isConnecting
T@"NSString",&,N,V_leftFirmwareVersion
T@"NSString",&,N,V_rightFirmwareVersion
T@"NSString",&,N,V_leftHardwareVersion
T@"NSString",&,N,V_rightHardwareVersion
TQ,N,V_deviceType
TQ,N,V_type
TQ,N,V_excludedProperties
T@"CBPeripheral",&,N,VleftPeripheral
T@"CBPeripheral",&,N,VrightPeripheral
setSampleDate:
setSplValue:
setSampleDuration:
initWithSampleDate:splValue:andDuration:
sampleDate
splValue
sampleDuration
_splValue
_sampleDuration
_sampleDate
T@"NSDate",&,N,V_sampleDate
Tf,N,V_splValue
Tf,N,V_sampleDuration
UUIDWithString:
initWithObjectsAndKeys:
serviceUUID
requiredProperties
setUpdates:
pairedHearingAids
sendMessageWithPayload:andIdentifier:
startServerWithDelegate:
resetConnection
updates
availableHearingAids
lastObject
availableDevicesDidUpdate:
deviceDidUpdateProperty:
liveListenDidUpdate:
setAvailableControllers:
boolValue
length
setHearingDeviceName:
setHearingAidReachableForAudioTransfer:
hearingAidConnectedOrReachable
defaultCenter
postNotificationName:object:
setConnectedDeviceName:
setHearingAidConnectedOrReachable:
environmentalDosimetryDidUpdate:
delegate
hearingAidConnectionDidChange:
allKeys
integerValue
intValue
containsPeripheralWithUUID:
indexOfObjectPassingTest:
initWithRemoteRepresentation:andDeviceID:
setAvailableHearingAids:
doubleValue
registerUpdateBlock:forIdentier:withListener:
objectAtIndexedSubscript:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
initWithListenerAddress:
connectionQueue
_registerListener:forAvailableDeviceHandler:beginSearching:
dictionaryWithObjectsAndKeys:
null
numberWithInteger:
floatValue
unsignedIntegerValue
shouldRestartOnInterruption
handleMessageWithPayload:forIdentifier:
unregisterUpdateListener:
registerResponseBlock:forUUID:
registerListener:forAvailableDeviceHandler:
registerPassiveListener:forAvailableDeviceHandler:
registerListener:forPropertyUpdateHandler:
connectToControllerWithID:
requestHearingAidConnectionWithReason:
cancelHearingAidConnectionRequest
hearingAidReachable
registerListener:forLiveListenLevelsHandler:
startLiveListen
stopLiveListen
registerListener:forLiveDosimetryUpdates:withDoseHandler:
unregisterDoseHandler:
availableControllers
hearingAidReachableForAudioTransfer
hearingDeviceName
connectedDeviceName
_responseBlocks
_hearingAidReachableForAudioTransfer
_hearingAidConnectedOrReachable
_availableHearingAids
_availableControllers
_hearingDeviceName
_connectedDeviceName
_updates
T@"NSArray",C,N,V_availableHearingAids
T@"NSArray",&,N,V_availableControllers
TB,N,V_hearingAidConnectedOrReachable
TB,N,V_hearingAidReachableForAudioTransfer
T@"NSString",&,N,V_hearingDeviceName
T@"NSString",&,N,V_connectedDeviceName
T@"NSMutableDictionary",&,N,V_updates
TB,R,N
T@"<AXHAServerDelegate>",W,D,N
_listenerAddress
setRightPrograms:
setLeftPrograms:
setLeftPropertiesLoadCount:
setRightPropertiesLoadCount:
setCurrentLeftProgram:
setCurrentRightProgram:
setCurrentLeftStreamingProgram:
setCurrentRightStreamingProgram:
setSupportsBinauralStreaming:
setSupportsCombinedPresets:
setSupportsCombinedVolumes:
setLeftMicrophoneVolumeSteps:
setLeftSensitivitySteps:
setLeftStreamVolumeSteps:
setLeftMixedVolumeSteps:
setRightMicrophoneVolumeSteps:
setRightSensitivitySteps:
setRightStreamVolumeSteps:
setRightMixedVolumeSteps:
_init
setDelegate:
identifier
UUIDString
setLeftPeripheralUUID:
updateName
services
characteristics
peripheral:didUpdateCharacteristic:
isEqualToString:
replaceObjectAtIndex:withObject:
setArray:
stringValue
hasPrefix:
setRightPeripheralUUID:
leftPeripheralUUID
rightPeripheralUUID
knownPeripheralUUIDs
valueForKey:
setIsPersistent:
setIsPaired:
leftMicrophoneVolume
leftBatteryLevel
setLeftBatteryLevel:
currentLeftProgram
leftLoadedProperties
setLeftLoadedProperties:
leftStreamVolumeSteps
leftSensitivitySteps
leftSensitivity
setLeftSensitivity:
leftMicrophoneVolumeSteps
leftTreble
setLeftTreble:
leftBass
setLeftBass:
leftMixedVolume
setLeftMixedVolume:
leftMixedVolumeSteps
rightMicrophoneVolume
rightBatteryLevel
setRightBatteryLevel:
currentRightProgram
rightLoadedProperties
setRightLoadedProperties:
rightStreamVolumeSteps
rightSensitivitySteps
rightSensitivity
setRightSensitivity:
rightMicrophoneVolumeSteps
rightTreble
setRightTreble:
rightBass
setRightBass:
rightMixedVolume
setRightMixedVolume:
rightMixedVolumeSteps
currentRightStreamingProgram
currentLeftStreamingProgram
isPaired
supportsBinauralStreaming
supportsCombinedVolumes
tag:
isiCloudPaired
disconnectAndUnpair:
loadRequiredProperties
setLeftBatteryLowDate:
setRightBatteryLowDate:
shouldStreamToLeftAid
shouldStreamToRightAid
setShouldStreamToLeftAid:
connectToPeripheral:
disconnectFromPeripheral:
unpairPeripheralWithUUID:
rightPropertiesLoadCount
removeObjectForKey:
leftPropertiesLoadCount
setNotify:forPeripheral:
loadProperties:forPeripheral:withRetryPeriod:
loadBasicProperties
checkPairingStatusWithCompletion:
resetConnectionToPeripheral:
registerUpdateBlock:forRetrieveSelector:withListener:
deviceIDFromLeftID:andRightID:
peripheral:characteristicForProperty:
peripheral:didLoadProperty:
didLoadOptionalBasicProperties
mergeDevice:withDevice:
replaceDevice:withDevice:
state
arrayByAddingObjectsFromArray:
sortedArrayUsingComparator:
UUID
peripheral:propertyForCharacteristic:
setNotifyValue:forCharacteristic:
loadFailedProperties
numberWithInt:
readValueForCharacteristic:fromPeripheral:
watchSupportsPairingHearingAids
availableInputEars
earsSupportingWatch
checkPeripheralPaired:withCompletion:
updateNameWithAdvertisingData:
newlineCharacterSet
stringByTrimmingCharactersInSet:
volumeValueForProperty:andPeripheral:
signedValueForProperty:andPeripheral:
writeValueForProperty:
keepInSync
cancel
_sendDelayedWrites
afterDelay:processBlock:
isPending
dataWithBytes:length:
writeValue:forCharacteristic:type:
leftWriteResponseProperties
setLeftWriteResponseProperties:
rightWriteResponseProperties
setRightWriteResponseProperties:
readValueForCharacteristic:
isStreamOrMixingStream
setLeftSelectedStreamingProgram:
setLeftSelectedProgram:
category
setRightSelectedStreamingProgram:
setRightSelectedProgram:
isSelected
delayWriteProperty:forPeripheral:
setRightStreamVolume:
setMixedVolume:forLeft:
countByEnumeratingWithState:objects:count:
initWithRepresentation:
setIsSelected:
shortValue
charValue
setTreble:forLeft:
setBass:forLeft:
numberWithDouble:
leftStreamVolume
rightStreamVolume
transportRepresentation
leftBatteryLowDate
rightBatteryLowDate
numberWithShort:
numberWithUnsignedInteger:
dictionaryWithObject:forKey:
discoverServices:
discoverCharacteristics:forService:
hasTag:
service
value
initWithData:encoding:
whitespaceAndNewlineCharacterSet
containsObject:
getBytes:length:
dateWithTimeIntervalSinceNow:
isEqualToDate:
updateBatteryServiceForPeripheral:
bytes
controlCharacterSet
hearingAidsForUUID:
mateWithDevice:
rightPresetBitmask
leftPresetBitmask
localizedStringFromNumber:numberStyle:
readProperty:fromPeripheral:
syncAttempts
initWithBytes:length:encoding:
setSyncAttempts:
rightProgramVersion
leftProgramVersion
deviceDidFinishLoading:
isInternalInstall
setLeftPeripheralPaired:
setRightPeripheralPaired:
peripheral:characteristicForUUID:
pairingDidCompleteForPeripheral:
peripheralDidUpdateName:
peripheral:didModifyServices:
peripheralDidUpdateRSSI:error:
peripheral:didReadRSSI:error:
peripheral:didDiscoverServices:
peripheral:didDiscoverIncludedServicesForService:error:
peripheral:didDiscoverCharacteristicsForService:error:
peripheral:didUpdateValueForCharacteristic:error:
peripheral:didWriteValueForCharacteristic:error:
peripheral:didUpdateNotificationStateForCharacteristic:error:
peripheral:didDiscoverDescriptorsForCharacteristic:error:
peripheral:didUpdateValueForDescriptor:error:
peripheral:didWriteValueForDescriptor:error:
peripheralIsReadyToSendWriteWithoutResponse:
peripheral:didOpenL2CAPChannel:error:
initWithPersistentRepresentation:
selectedPrograms
selectedProgramIndexes
setKeepInSync:
TB,N
T@"NSString",R,&,N
T@"NSMutableArray",R,&,N
Ti,N
Td,N
Tc,N
Td,R,N
T@"NSDate",R,&,N
Ts,R,N
T@"NSArray",R,C,N
T@"AXHearingAidMode",R,&,N
initWithLeftDevice:andRightDevice:
connectionDidChange
didLoadPersistentProperties
connectedEars
deviceDescription
readsWatchSupportCharacteristic
peripheral:didInvalidateServices:
peripheral:didFinishPairingWithResult:
peripheralDidUnpair:
addPeripheral:
addPeripheral:asLeft:
leftWriteRequestProperties
setLeftWriteRequestProperties:
rightWriteRequestProperties
setRightWriteRequestProperties:
setLeftProgramVersion:
setRightProgramVersion:
setAvailableInputEars:
setEarsSupportingWatch:
leftPeripheralPaired
rightPeripheralPaired
_leftVolume
_rightVolume
_leftMicrophoneVolume
_rightMicrophoneVolume
_leftStreamVolume
_rightStreamVolume
_leftTreble
_rightTreble
_leftBass
_rightBass
_keepInSync
_finishedLoading
initialLoadToken
_propertyWriteTimer
_isListeningForStreamingChanges
_leftPowerSouceID
_rightPowerSourceID
_leftPowerSouceDictionary
_rightPowerSourceDictionary
_supportsBinauralStreaming
_supportsCombinedPresets
_supportsCombinedVolumes
_leftPeripheralPaired
_rightPeripheralPaired
_leftMicrophoneVolumeSteps
_rightMicrophoneVolumeSteps
_leftStreamVolumeSteps
_rightStreamVolumeSteps
_leftSensitivitySteps
_rightSensitivitySteps
_leftMixedVolumeSteps
_rightMixedVolumeSteps
_availableEars
_leftPresetBitmask
_rightPresetBitmask
_availableInputEars
_earsSupportingWatch
_leftSelectedProgram
_rightSelectedProgram
_leftSelectedStreamingProgram
_rightSelectedStreamingProgram
_leftSensitivity
_rightSensitivity
_leftMixedVolume
_rightMixedVolume
_leftWriteResponseProperties
_rightWriteResponseProperties
_leftBatteryLowDate
_rightBatteryLowDate
T@"NSString",&,N,Vname
T@"NSMutableArray",&,N,Vmanufacturer
T@"NSMutableArray",&,N,Vmodel
T@"NSString",&,N,VleftFirmwareVersion
T@"NSString",&,N,VrightFirmwareVersion
T@"NSString",&,N,VleftHardwareVersion
T@"NSString",&,N,VrightHardwareVersion
T@"NSString",&,N,VleftUUID
T@"NSString",&,N,VrightUUID
T@"NSString",&,N,VleftPeripheralUUID
T@"NSString",&,N,VrightPeripheralUUID
Td,N,VrightBatteryLevel
Td,N,VleftBatteryLevel
T@"NSArray",C,N,VrightPrograms
T@"NSArray",C,N,VleftPrograms
Ts,N,V_leftMicrophoneVolumeSteps
Ts,N,V_rightMicrophoneVolumeSteps
Ts,N,V_leftStreamVolumeSteps
Ts,N,V_rightStreamVolumeSteps
Ts,N,V_leftSensitivitySteps
Ts,N,V_rightSensitivitySteps
Ts,N,V_leftMixedVolumeSteps
Ts,N,V_rightMixedVolumeSteps
TB,N,V_supportsBinauralStreaming
TB,N,V_supportsCombinedPresets
TB,N,V_supportsCombinedVolumes
T@"AXHearingAidMode",&,N,VcurrentRightStreamingProgram
T@"AXHearingAidMode",&,N,VcurrentLeftStreamingProgram
T@"AXHearingAidMode",&,N,VcurrentRightProgram
T@"AXHearingAidMode",&,N,VcurrentLeftProgram
TB,N,VisConnecting
TQ,N,VleftLoadedProperties
TQ,N,VrightLoadedProperties
TQ,N,VleftWriteRequestProperties
TQ,N,VrightWriteRequestProperties
TQ,N,V_leftWriteResponseProperties
TQ,N,V_rightWriteResponseProperties
T@"NSMutableDictionary",&,N,VleftPropertiesLoadCount
T@"NSMutableDictionary",&,N,VrightPropertiesLoadCount
TI,N,VleftProgramVersion
TI,N,VrightProgramVersion
T@"NSDate",&,N,V_leftBatteryLowDate
T@"NSDate",&,N,V_rightBatteryLowDate
Ti,N,V_availableInputEars
Ti,N,V_earsSupportingWatch
TB,N,V_leftPeripheralPaired
TB,N,V_rightPeripheralPaired
TB,N,VisPaired
TB,N,V_keepInSync
TB,N,VisPersistent
Td,N,V_rightMicrophoneVolume
Td,N,V_leftMicrophoneVolume
Td,N,V_rightStreamVolume
Td,N,V_leftStreamVolume
T@"AXHearingAidMode",&,N,V_leftSelectedProgram
T@"AXHearingAidMode",&,N,V_rightSelectedProgram
T@"AXHearingAidMode",&,N,V_leftSelectedStreamingProgram
T@"AXHearingAidMode",&,N,V_rightSelectedStreamingProgram
TI,N,V_leftPresetBitmask
TI,N,V_rightPresetBitmask
Ti,N,V_availableEars
Td,N,V_rightSensitivity
Td,N,V_leftSensitivity
Td,N,V_rightMixedVolume
Td,N,V_leftMixedVolume
Tc,N,V_rightTreble
Tc,N,V_leftTreble
Tc,N,V_rightBass
Tc,N,V_leftBass
setPairedHearingAid:
start
checkPartiallyPairedWithCompletion:
hearingAidsPaired
setListenForAvailableDeviceUpdates:
setPairedDeviceUUID:
setAvailableDevicesDescription:
removeObserver:
pairedDeviceUUID
sharedServer
messagePayloadFromDictionary:andIdentifier:
messageWithPayload:
sendUpdateMessage:forIdentifier:
setDictionary:
searchForAvailableDevicesWithCompletion:
stopSearching
currentDeviceController
setTransaction:
sendConnectionUpdateToPeers
availableRemoteControllersDidChange
sendWriteToAllDevices:
forgetDevice:
stop
setState:
disconnectFromHearingAidWithDeviceUUID:
checkConnectionToHearingDevice:
checkConnectionPeers:
updateNearbyDeviceAvailability
payload
hasEntitlement:
shouldActiveScan
setShouldActiveScan:
client
setWantsUpdates:forIdentifier:
availableDevicesDescription
replyMessageWithPayload:
longLongValue
valueForProperty:forDeviceID:
sendClientsMessageWithPayload:excluding:
sendUpdatesForProperties:excludingClient:
isPartiallyConnected
multideviceSettingsEnabled
multideviceAudioEnabled
connectionStatus
requestHandoffForMedia
sendMessageToAllDevices:
connectToPairedDevice
transitionToPeer
willSwitchUser
registerForAvailableDevicesUpdates:
registerForDeviceUpdates:
readDeviceProperty:
writeDeviceProperty:
readAvailableDevices:
readAvailableControllers:
disconnectAndForceSlave:
transaction
liveListenMessage
setLiveListenMessage:
_isListening
_pairedDeviceUUID
_transaction
_availableDevicesDescription
_liveListenMessage
T@"NSObject<OS_os_transaction>",&,N,V_transaction
T@"NSString",&,N,V_pairedDeviceUUID
T@"NSDictionary",&,N,V_availableDevicesDescription
T@"HCXPCMessage",&,N,V_liveListenMessage
addSelectorKey:
_selectorKeys
setIcloudInitializationQueue:
isProtectedDataAvailable
icloudInitializationQueue
_initializeICloudSetup
currentProcessIsHeard
shouldUseiCloud
icloudHearingSettingsDidChange:
defaultStore
addObserver:selector:name:object:
synchronize
pushLocalHearingAidsToiCloud
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
iCloudAccountDidChange:
isPairedWithFakeHearingAids
dictionaryForKey:
setLocalHearingAidsFromiCloud:
convertPersistentRepresentation:fromVersion:toVersion:
deviceIDForPairingInformation:
isDeviceIDOnCloudBlacklist:
deviceIsWatch
shouldPushLocalAidsToiCloud
setDictionary:forKey:
stringByReplacingOccurrencesOfString:withString:
synchronizePreferences
updateBlocks
allowHearingAidControlOnLockScreen
callAudioRoute
mediaAudioRoute
exportsLiveListenToFile
shouldStreamSystemSounds
complicationPreferredDisplayMode
usedHearingFeatures
registeredNotifications
_notificationForPreferenceKey:
performSynchronousWritingBlock:
_preferenceKeyForSelector:
_registerForNotification:
domainNameForPreferenceKey:
removeObject:
_synchronizeIfNecessary:
_valueForPreferenceKey:
addDeviceIDToCloudBlacklist:
_setValue:forPreferenceKey:
removeDeviceIDFromCloudBlacklist:
removeObjectAtIndex:
initialize
isPairedWithRealHearingAids
_handlePreferenceChanged:
setKnownPeripheralUUIDs:
setIndependentHearingAidSettings:
setAllowHearingAidControlOnLockScreen:
setShouldStreamToRightAid:
setCallAudioRoute:
setMediaAudioRoute:
setExportsLiveListenToFile:
setMultideviceSettingsEnabled:
setMultideviceAudioEnabled:
setShouldStreamSystemSounds:
setComplicationPreferredDisplayMode:
setUsedHearingFeatures:
setRegisteredNotifications:
setSynchronizePreferences:
setUpdateBlocks:
_accountStore
_contentProtectionNotifyToken
_finishediCloudSetup
_syncLock
_registeredNotifications
_synchronizePreferences
_updateBlocks
_icloudInitializationQueue
T@"NSMutableSet",&,N,V_registeredNotifications
T@"NSMutableSet",&,N,V_synchronizePreferences
T@"NSMutableDictionary",&,N,V_updateBlocks
T@"NSObject<OS_dispatch_queue>",&,N,V_icloudInitializationQueue
T@"NSDictionary",&,N
Tq,N
TQ,N
persistPairedHearingAids
setMediaQueue:
callStatusDidChange:
routesDidChange:
mediaQueue
initWithTargetSerialQueue:
setSendConnectionToCompanionTimer:
unregisterMediaNotifications
registerMediaNotifications
isBluetoothAvailable
hasConnectionToHearingDevice
sendConnectionToCompanionIfPossible:
sendConnectionToCompanionTimer
sendMessage:toDevices:
availableDevices
getConnectedPeer:
sharedCallCenter
anyCallIsEndpointOnCurrentDevice
callsWithStatus:
status
callsPassingTest:
performCallCenterTask:
shouldRelinquishConnectionForReason:
updateStateOnDeviceQueue
isSearching
connectedPeer
cancelPendingConnections
localDevice
setUpdateDelegate:
setLocalDevice:
setControlFlags:
setPairVerifyFlags:
setDispatchQueue:
setInterruptionHandler:
setInvalidationHandler:
setAvailableDevices:
setSearching:
nearbyDeviceWithIdentifier:
reset
activeDevices
nearbyDeviceWithPeerDevice:
arrayByAddingObject:
deviceWithIdentifier:didReceiveMessage:
registerRequestID:options:handler:
setDeviceFoundHandler:
representsPeerDevice:
ax_filteredArrayUsingBlock:
setDeviceLostHandler:
currentConnectionStatus
sendMessage:
setDeviceChangedHandler:
activateWithCompletion:
relinquishConnectionForReason:
invalidate
device
idsDeviceIdentifier
sendConnectionToCompanionIfPossible
sendWrite:toDevices:
activePersonalCompanion
addDeviceWithIdentifier:
purgeMessageCache
setConnectionStatus:
shouldRelinquishForPartialConnection:
hearingDevice
didLoadRequiredPeerProperties
writeValue:forProperty:andDeviceID:toDevices:
representsAWatch
mediaServerDied
shouldRequestAudioConnectionForCall:withCompletion:
mediaPlaybackDidChange:
requestConnectionForReason:
checkPairedPeerExists:
updateState
deviceDiscovery
setDeviceDiscovery:
setClient:
holdingMediaForConnection
setHoldingMediaForConnection:
holdingPhoneForConnection
setHoldingPhoneForConnection:
_searching
_holdingMediaForConnection
_holdingPhoneForConnection
_availableDevices
_state
_delegate
_deviceDiscovery
_client
_localDevice
_mediaQueue
_sendConnectionToCompanionTimer
T@"NSArray",C,N,V_availableDevices
T@"SFDeviceDiscovery",&,N,V_deviceDiscovery
T@"RPCompanionLinkClient",&,N,V_client
T@"AXRemoteHearingAidDevice",&,N,V_localDevice
searching
TB,N,GisSearching,V_searching
T@"NSObject<OS_dispatch_queue>",&,N,V_mediaQueue
T@"AXDispatchTimer",&,N,V_sendConnectionToCompanionTimer
TB,N,V_holdingMediaForConnection
TB,N,V_holdingPhoneForConnection
Tq,N,V_state
T@"<HUNearbyControllerDelegate>",W,N,V_delegate
connectedDevices
persistentDevices
availablePeripherals
loadedDevices
objectsAtIndexes:
availableSearchBlocks
connectedSearchBlocks
searchForAvailableDevices
setAvailablePeripherals:
setLoadedDevices:
setConnectedDevices:
setCentralRequestBlocks:
setPersistentDevices:
initWithDelegate:queue:options:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
pairedHearingAidsDidChange
setAvailableSearchBlocks:
setConnectedSearchBlocks:
date
timeIntervalSinceDate:
removeLoadedDevice:
removeAvailableDevice:
isScanning
clearMissingHearingAids
initWithUUIDString:
retrievePeripheralsWithIdentifiers:
scanForPeripheralsWithServices:options:
centralManager:didRetrievePeripherals:
sendRequestToCentralManager:
loadedDevicesDidChange
retrieveConnectedPeripheralsWithServices:
centralManager:didRetrieveConnectedPeripherals:
hearingAidForPeripheral:
axUntag:
axTag:
connectPeripheral:options:
cancelPeripheralConnection:options:
centralRequestBlocks
stopScan
firstIndex
isActive
afterDelay:processBlock:cancelBlock:
removeConnectedDevice:
addConnectedDevice:
addLoadedDevice:
addAvailableDevice:
clearAvailableDevices
clearConnectedDevices
clearLoadedDevices
indexOfObject:
hearingAidsForPeripheral:
enumerateObjectsAtIndexes:options:usingBlock:
code
setValue:forKey:
sharedPairingAgent
isPeerPaired:
unpairPeer:
centralManagerDidUpdateState:
centralManager:willRestoreState:
centralManager:didDiscoverPeripheral:advertisementData:RSSI:
centralManager:didConnectPeripheral:
centralManager:didFailToConnectPeripheral:error:
centralManager:didDisconnectPeripheral:error:
centralManager:connectionEventDidOccur:forPeripheral:
centralManager:didUpdateANCSAuthorizationForPeripheral:
searchForConnectedDevices
pairingAgent:peerDidCompletePairing:
pairingAgent:peerDidFailToCompletePairing:error:
pairingAgent:peerDidUnpair:
_bluetoothManager
_centralRequestsLock
_isScanning
_centralIsOn
_bluetoothCentralQueue
_availableSearchBlocks
_connectedSearchBlocks
_advertisingTimeoutTimer
_advertisingTimestamps
_availableDeviceTimer
_shouldActiveScan
_availablePeripherals
_loadedDevices
_connectedDevices
_persistentDevices
T@"NSMutableArray",&,N,V_availablePeripherals
T@"NSMutableArray",&,V_loadedDevices
T@"NSMutableArray",&,N,V_connectedDevices
T@"NSMutableArray",&,N,V_persistentDevices
T@"NSMutableArray",&,N,VcentralRequestBlocks
T@"NSMutableArray",&,N,V_availableSearchBlocks
T@"NSMutableArray",&,N,V_connectedSearchBlocks
TB,N,V_shouldActiveScan
bundleForClass:
componentsJoinedByString:
localizedStringForKey:value:table:
stringWithUTF8String:
lowercaseString
checkAudioPlayingWithQueue:andCompletion:
TTYHardwareEnabled
TTYSoftwareEnabled
XDCObjectFromObject:
objectFromXDCObject:
componentsSeparatedByString:
sharedUtilities
pauseNowPlaying:withQueue:andCompletion:
addHearingFeatureUsage:
updateHearingFeatureUsage
routingQueue
_routingQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_routingQueue
programThatMatchesProgram:
isMixingStream
isStream
setProgram:withOtherSidePrograms:selected:
objectForKeyedSubscript:
enumerateKeysAndObjectsInDependentOrderUsingBlock:
untag:
wantsUpdatesForIdentifier:
registerMessageBlock:
sendMessage:errorBlock:
_updateBlock
setRequiredProperties:
setDeviceUUID:
updateDelegate
leftConnected
rightConnected
rangeOfString:
loadedProperties
checkDidLoadProperties:
didLoadProperty:
leftAvailableProperties
rightAvailableProperties
pendingPropertyWrites
setPendingPropertyWrites:
_delayWriteProperties
writeVolumesForProperty:
supportsCombinedVolumesForProperty:
_updateSelectedProgramsProperties
_writeAllProgramSelectionsToPeripheral
setLoadedProperties:
setLeftConnected:
setRightConnected:
setIsBluetoothPaired:
setLeftAvailableProperties:
setRightAvailableProperties:
isBluetoothPaired
_valueForProperty:
allValues
programAtIndex:forEar:
shouldDisplayCombinedVolume
shouldOnlyShowIndividualVolumesForProperty:
combinedPrograms
combinedVolumeForProperty:
_delayWritePending
_isBluetoothPaired
_isPaired
_leftConnected
_rightConnected
_updateDelegate
_leftPeripheralUUID
_rightPeripheralUUID
_rightBatteryLevel
_leftBatteryLevel
_rightPrograms
_leftPrograms
_deviceUUID
_requiredProperties
_loadedProperties
_pendingPropertyWrites
_leftAvailableProperties
_rightAvailableProperties
TB,N,V_isPaired
TB,N,V_leftConnected
TB,N,V_rightConnected
T@"NSMutableArray",&,N,V_manufacturer
T@"NSMutableArray",&,N,V_model
T@"NSString",&,N,V_leftPeripheralUUID
T@"NSString",&,N,V_rightPeripheralUUID
Td,N,V_rightBatteryLevel
Td,N,V_leftBatteryLevel
T@"NSArray",C,N,V_rightPrograms
T@"NSArray",C,N,V_leftPrograms
T@"NSString",&,N,V_deviceUUID
TQ,N,V_requiredProperties
TQ,N,V_loadedProperties
TQ,N,V_pendingPropertyWrites
TQ,N,V_leftAvailableProperties
TQ,N,V_rightAvailableProperties
TB,N,V_isBluetoothPaired
T@"<AXHARemoteUpdateProtocol>",W,N,V_updateDelegate
Ti,N,VavailableEars
lock
unlock
noiseEnabled
onboardingCompleted
notificationsEnabled
notificationThreshold
notificationMuteDate
currentLeq
leqTimestamp
leqDuration
migratedThreshold
thresholdVersion
notificationForPreferenceKey:
setWithArray:
synchronizeNanoDomain:keys:
sharedConnection
isHealthDataSubmissionAllowed
notificationsEnabledOverride
notificationsThreshholdOverride
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceReferenceDate
noiseThresholdFooterDescription
initWithString:
noiseThresholdFooterLinkURL
noiseThresholdFooterLinkTitle
setAttributes:range:
URLWithString:
localizedStringWithFormat:
setHour:
setMinute:
localizedStringFromDateComponents:unitsStyle:
noiseThresholdCurrentValue
noiseThresholdMinutesThreshold
preferenceIsSetForRetrieveSelector:
setNoiseEnabled:
setOnboardingCompleted:
setNotificationsEnabled:
setNotificationThreshold:
setNotificationMuteDate:
setCurrentLeq:
setLeqTimestamp:
setLeqDuration:
setMigratedThreshold:
setThresholdVersion:
launchNoiseOnboardingTitle
environmentalMeasurementsTitleDescription
environmentalMeasurementsFooterDescription
noiseThresholdSectionTitle
noiseThresholdTitleDescription
noiseThresholdFooterDescriptionWithLink
noiseThresholdOptions
localizedNoiseThresholdValue:
localizedNoiseThresholdDetailValue:
noiseThresholdValueFooterDescription
setNotificationsEnabledOverride:
setNotificationsThreshholdOverride:
_synchronizeDomainsLock
_notificationsEnabledOverride
_notificationsThreshholdOverride
T@"NSDate",&,N
T@"NSString",R,N
T@"NSAttributedString",R,N
T@"NSURL",R,N
Tq,R,N
T@"NSArray",R,N
T@"NSNumber",&,N,V_notificationsEnabledOverride
T@"NSNumber",&,N,V_notificationsThreshholdOverride
decodeObjectOfClass:forKey:
decodeIntegerForKey:
decodeIntForKey:
decodeBoolForKey:
encodeObject:forKey:
encodeInteger:forKey:
encodeInt:forKey:
encodeBool:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
_index
_isSelected
_ear
_category
T@"NSString",C,N,V_name
Tq,N,V_category
TC,N,V_index
TB,N,V_isSelected
Ti,N,V_ear
Ti,N,VsyncAttempts
initWithTarget:block:
target
block
_target
_block
T@,R,N,V_target
T@?,R,N,V_block
setClients:
setHandlers:
continueSetup
deviceSupportsEnvironmentalDosimetry
addHandler:andBlock:forMessageIdentifier:
registerForEnvironmentalDosimetryUpdates:
displayCallPrompt:
handleDatabaseRequest:
handleDictionaryRequest:
handleSettingsRequest:
handleIncomingNotificationSuppressionChange:
handleMediaAction:
clientWithConnection:
clients
mutableCopy
clientRemoved:
teardownConnection
dictionaryFromXPCMessage:error:
connection:hasEntitlementForMessage:
messageWithPayload:xpcMessage:andClient:
handleMessage:forIdentifier:
handlers
sendMessage:withError:
entitlementsForMessageID:
countOfClientsListeningForIdentifier:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
updatePersonalAudioSettingsOnAccessories
startServer
handleNewConnection:
registerFakeClient:
personalAudioQueue
setPersonalAudioQueue:
_transparencyHysteresisTimer
_service
_finishedSetup
_clients
_handlers
_personalAudioQueue
T@"NSArray",&,N,V_clients
T@"NSDictionary",&,N,V_handlers
T@"NSObject<OS_dispatch_queue>",&,N,V_personalAudioQueue
setSafeObject:forKey:
setDataQueue:
_clearCachedValues
initWithBundleIdentifier:
timeIntervalSinceNow
setMuted:
stringByAppendingFormat:
categoryWithIdentifier:actions:intentIdentifiers:options:
setWithObject:
setNotificationCategories:
setCategoryIdentifier:
setThreadIdentifier:
setExpirationDate:
setTitle:
setSubtitle:
setBody:
defaultSound
setSound:
requestWithIdentifier:content:trigger:destinations:
addNotificationRequest:withCompletionHandler:
setMeasurementEnabled:
dataQueue
_sendUpdateMessageForCurrentValues
slowLeq
setSlowLeq:
fastLeq
setFastLeq:
setThresholdLevel:
readEnvironmentalDosimetryLevels
isMeasurementEnabled
numberWithFloat:
thresholdLevel
isNotified
isMuted
setNotified:
checkToResetNotificationsForSPL:withDuration:andBuffer:forTime:
checkToSurfaceNotificationForSPL:withDuration:andBuffer:forTime:
maintainCircularBuffer:forTime:
calculateLeqForBuffer:
dateByAddingTimeInterval:
compare:
alertTypeFromLevel:
showNotificationForAlertType:
setTimeNotified:
localizedStringFromDate:dateStyle:timeStyle:
isNotified80
checkToResetAnalyticsNotificationsForSPL:withDuration:andBuffer:forTime:andThreshold:
checkToSurfaceAnalyticsNotificationForSPL:withDuration:andBuffer:forTime:andThreshold:
isNotified85
isNotified90
setNotified80:
setNotified85:
setNotified90:
setTimeNotified80:
setTimeNotified85:
setTimeNotified90:
removeObjectsInArray:
restartADAMTimer
_stopReceivingAudioDosageSamples
applyNotificationLogicForSPL:withDuration:
applyAnalyticsNotificationLogicForSPL:withDuration:
edDummyDataTimer
setEdDummyDataTimer:
adamSuspendedTimer
setAdamSuspendedTimer:
leqBuffer
setLeqBuffer:
timeNotified
leqBuffer80Threshold
setLeqBuffer80Threshold:
leqBuffer85Threshold
setLeqBuffer85Threshold:
leqBuffer90Threshold
setLeqBuffer90Threshold:
timeNotified80
timeNotified85
timeNotified90
userNotificationCenter
_measurementSuspensionNotifyToken
_measurementEnabled
_notified
_muted
_notified80
_notified85
_notified90
_slowLeq
_fastLeq
_edDummyDataTimer
_adamSuspendedTimer
_leqBuffer
_thresholdLevel
_timeNotified
_leqBuffer80Threshold
_leqBuffer85Threshold
_leqBuffer90Threshold
_timeNotified80
_timeNotified85
_timeNotified90
_dataQueue
_userNotificationCenter
T@"AXDispatchTimer",&,N,V_edDummyDataTimer
T@"AXDispatchTimer",&,N,V_adamSuspendedTimer
T@"NSMutableArray",&,N,V_leqBuffer
Tf,N,V_slowLeq
Tf,N,V_fastLeq
measurementEnabled
TB,N,GisMeasurementEnabled,V_measurementEnabled
TQ,N,V_thresholdLevel
T@"NSDate",&,N,V_timeNotified
notified
TB,N,GisNotified,V_notified
muted
TB,N,GisMuted,V_muted
T@"NSMutableArray",&,N,V_leqBuffer80Threshold
T@"NSMutableArray",&,N,V_leqBuffer85Threshold
T@"NSMutableArray",&,N,V_leqBuffer90Threshold
notified80
TB,N,GisNotified80,V_notified80
notified85
TB,N,GisNotified85,V_notified85
notified90
TB,N,GisNotified90,V_notified90
T@"NSDate",&,N,V_timeNotified80
T@"NSDate",&,N,V_timeNotified85
T@"NSDate",&,N,V_timeNotified90
T@"NSObject<OS_dispatch_queue>",&,N,V_dataQueue
T@"UNUserNotificationCenter",R,N,V_userNotificationCenter
Ti,N,V_type
initWithPeerDevice:
setShouldTrack:
setDevice:
setupSessionIfNecessary
setWithObjects:
setCachableKeys:
containsString:
setActivating:
isActivating
shouldTrack
setDestinationDevice:
cachableKeys
sendRequestID:request:destinationID:options:responseHandler:
previousMessageCache
setPreviousMessageCache:
_activating
_shouldTrack
_device
_connectionStatus
_previousMessageCache
_cachableKeys
T@"RPCompanionLinkClient",&,V_client
activating
TB,N,GisActivating,V_activating
TB,N,V_shouldTrack
T@"NSMutableDictionary",&,N,V_previousMessageCache
T@"NSSet",&,N,V_cachableKeys
T@"RPCompanionLinkDevice",&,N,V_device
TQ,N,V_connectionStatus
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8Q16@24
v40@0:8@16Q24@32
v32@0:8Q16@"NSString"24
v40@0:8@16Q24@"NSString"32
@24@0:8@16
v32@0:8@16Q24
v24@0:8@?16
v16@0:8
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@"NSMutableArray"
@24@0:8Q16
Q24@0:8@16
B24@0:8Q16
B28@0:8Q16i24
v32@0:8C16i20Q24
v32@0:8c16i20Q24
v24@0:8Q16
v20@0:8B16
@"NSString"
@"NSArray"
@"CBPeripheral"
@32@0:8@16f24f28
f16@0:8
v20@0:8f16
@"NSDate"
v32@0:8@?16@24
v32@0:8@16@?24
v36@0:8@16@?24B32
v24@0:8q16
v36@0:8@16B24@?28
@32@0:8@16@24
v32@0:8@16@24
v40@0:8@16@24@32
v24@0:8@"CBPeripheral"16
v32@0:8@"CBPeripheral"16@"NSArray"24
v32@0:8@"CBPeripheral"16@"NSError"24
v40@0:8@"CBPeripheral"16@"NSNumber"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBService"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBCharacteristic"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBDescriptor"24@"NSError"32
v40@0:8@"CBPeripheral"16@"CBL2CAPChannel"24@"NSError"32
v28@0:8@16i24
i16@0:8
v20@0:8i16
d16@0:8
v24@0:8d16
c16@0:8
v20@0:8c16
s16@0:8
@24@0:8@"NSDictionary"16
B24@0:8@"NSString"16
@"NSArray"16@0:8
v28@0:8@"AXHearingAidMode"16i24
@"NSIndexSet"16@0:8
@"NSMutableArray"16@0:8
@"NSDate"16@0:8
@"AXHearingAidMode"16@0:8
B32@0:8@16Q24
Q32@0:8@16@24
@32@0:8@16Q24
v28@0:8B16@20
v40@0:8Q16@24d32
c32@0:8Q16@24
C32@0:8Q16@24
v24@0:8c16B20
v28@0:8d16B24
B28@0:8@16B24
I16@0:8
v20@0:8I16
v20@0:8s16
@"AXDispatchTimer"
^{OpaqueIOPSPowerSourceID=}
@"AXHearingAidMode"
@"NSObject<OS_os_transaction>"
@"NSDictionary"
@"HCXPCMessage"
v24@0:8:16
v40@0:8@?16:24@32
^{__CFString=}24@0:8@16
q16@0:8
@"ACAccountStore"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableSet"
@"NSDictionary"32@0:8@"NSString"16@"NSDictionary"24
v28@0:8B16@?20
B24@0:8q16
v48@0:8@16Q24@32@40
@"<HUNearbyControllerDelegate>"
@"SFDeviceDiscovery"
@"RPCompanionLinkClient"
@"AXRemoteHearingAidDevice"
v48@0:8@16@24@32@40
v40@0:8@16q24@32
v24@0:8@"CBCentralManager"16
v32@0:8@"CBCentralManager"16@"NSDictionary"24
v48@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSDictionary"32@"NSNumber"40
v32@0:8@"CBCentralManager"16@"CBPeripheral"24
v40@0:8@"CBCentralManager"16@"CBPeripheral"24@"NSError"32
v40@0:8@"CBCentralManager"16q24@"CBPeripheral"32
v32@0:8@"<AXHADeviceProtocol>"16Q24
v24@0:8@?<v@?@"NSDictionary">16
@32@0:8Q16@24
@"CBCentralManager"
@"NSLock"
v36@0:8B16@20@?28
v36@0:8@16@24B32
B32@0:8@16@?24
@24@0:8C16i20
d24@0:8Q16
@"<AXHARemoteUpdateProtocol>"
@24@0:8q16
@"NSNumber"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
C16@0:8
v20@0:8C16
@32@0:8@16@?24
@?16@0:8
B32@0:8@16^@24
Q24@0:8Q16
B32@0:8@"HCXPCMessage"16^@24
v32@0:8@"HCXPCMessage"16Q24
v32@0:8@"NSDictionary"16@"HCXPCClient"24
v40@0:8@16@24@?32
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
v40@0:8@16@?24Q32
@"NSObject<OS_xpc_object>"
Q20@0:8f16
v24@0:8f16f20
v36@0:8f16f20@24f32
v44@0:8f16f20@24f32q36
v28@0:8@16f24
f24@0:8@16
@"UNUserNotificationCenter"
@20@0:8i16
@"RPCompanionLinkDevice"
@"NSSet"
