@(#)PROGRAM:DoNotDisturbIntents  PROJECT:DoNotDisturb-1
com.apple.DoNotDisturb.Intents
v8@?0
com.apple.donotdisturb
Intents
v16@?0@"DNDToggleDoNotDisturbIntentResponse"8
Handling intent: %{public}@
Error getting available modes: %@
Requested mode is not configured.
Error while getting assertion mode: %@.
Requested mode is active.
Requested mode is not active.
Activating mode: %{public}@ (%{public}@) with lifetime: %@
Intent: %{public}@ could not take mode assertion due to error: %{public}@
Intent: %{public}@ has an invalid lifetime, will ignore
Deactivating mode: %@ (%{public}@)
Could not invalidate %@ (%{public}@): %{public}@
Could not invalidate %@ (%{public}@) because the current active mode didn't match the requested mode.
Toggling mode: %{public}@ (%{public}@) without lifetime
Deactivating all modes
Could not invalidate all active mode assertions due to error: %@
Cannot activate mode because it isn't available.
Activating mode: %{public}@ (%{public}@) without lifetime
Unknown state for intent: %{public}@
focus
serviceForClientIdentifier:
availableModesWithError:
countByEnumeratingWithState:objects:count:
modeIdentifier
identifier
isEqualToString:
activeModeAssertionWithError:
details
initialize
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
handleGetFocusState:completion:
confirmGetFocusState:completion:
initWithCode:userActivity:
setState:
handlerForIntent:
mode
state
duration
doubleValue
lifetimeWithDuration:
event
lifetimeUntilEndOfCalendarEventWithUniqueID:occurrenceDate:
location
lifetimeWithCurrentLocation
lifetimeUntilEndOfScheduleWithIdentifier:
setIdentifier:
setModeIdentifier:
setLifetime:
displayString
activateModeWithDetails:error:
UUID
invalidateModeAssertionWithUUID:error:
handleToggleDoNotDisturb:completion:
confirmToggleDoNotDisturb:completion:
queryCurrentStateWithError:
isActive
toDNDIntent
code
binaryValue
setUpdatedValue:
setOldValue:
settingMetadata
initWithSettingMetadata:numericValue:boundedValue:binaryValue:labeledValue:
arrayWithObjects:count:
setSettingResponseDatas:
handleSetBinarySetting:completion:
confirmSetBinarySetting:completion:
resolveSettingMetadataForSetBinarySetting:withCompletion:
resolveBinaryValueForSetBinarySetting:withCompletion:
resolveTemporalEventTriggerForSetBinarySetting:withCompletion:
handleGetSetting:completion:
confirmGetSetting:completion:
resolveSettingMetadataForGetSetting:withCompletion:
resolveConfirmationValueForGetSetting:withCompletion:
Tq,D,N
T@"NSNumber",C,D,N
T@"INObject",C,D,N
init
setUserActivity:
setCode:
_code
Tq,N,V_code
successWithResolvedValue:
confirmationRequiredWithValueToConfirm:
successWithResolvedIntentState:
confirmationRequiredWithIntentStateToConfirm:
DNDGetFocusStateIntentHandler
DNDGetFocusStateIntentHandling
NSObject
DNDIntentExtension
DNDIntentHandler
DNDToggleDoNotDisturbIntentHandling
DNDBinarySettingIntentHandler
INSetBinarySettingIntentHandling
INGetSettingIntentHandling
Conversion
DNDToggleDoNotDisturbIntent
DNDToggleDoNotDisturbIntentResponse
DNDGetFocusStateIntent
DNDGetFocusStateIntentResponse
DNDIntentStateResolutionResult
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"DNDGetFocusStateIntent"16@?<v@?@"DNDGetFocusStateIntentResponse">24
@24@0:8@16
v32@0:8@"DNDToggleDoNotDisturbIntent"16@?<v@?@"DNDToggleDoNotDisturbIntentResponse">24
v32@0:8@"INSetBinarySettingIntent"16@?<v@?@"INSetBinarySettingIntentResponse">24
v32@0:8@"INSetBinarySettingIntent"16@?<v@?@"INSettingMetadataResolutionResult">24
v32@0:8@"INSetBinarySettingIntent"16@?<v@?@"INBinarySettingValueResolutionResult">24
v32@0:8@"INSetBinarySettingIntent"16@?<v@?@"INTemporalEventTriggerResolutionResult">24
v32@0:8@"INGetSettingIntent"16@?<v@?@"INGetSettingIntentResponse">24
v32@0:8@"INGetSettingIntent"16@?<v@?@"INSettingMetadataResolutionResult">24
v32@0:8@"INGetSettingIntent"16@?<v@?@"INBinarySettingValueResolutionResult">24
@32@0:8q16@24
q16@0:8
v24@0:8q16
@24@0:8q16
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.donotdisturb.mode.assertion.client-identifiers</key>
<string>com.apple.DoNotDisturb.Intents</string>
<key>com.apple.private.donotdisturb.mode.assertion.user-requested.client-identifiers</key>
<string>com.apple.DoNotDisturb.Intents</string>
<key>com.apple.private.donotdisturb.settings.request.client-identifiers</key>
<string>com.apple.DoNotDisturb.Intents</string>
<key>com.apple.private.donotdisturb.state.request.client-identifiers</key>
<string>com.apple.DoNotDisturb.Intents</string>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.donotdisturb.service</string>
</array>
</dict>
</plist>
@(#)PROGRAM:DoNotDisturbIntents  PROJECT:DoNotDisturb-1
com.apple.DoNotDisturb.Intents
v8@?0
com.apple.donotdisturb
Intents
v16@?0@"DNDToggleDoNotDisturbIntentResponse"8
Handling intent: %{public}@
Error getting available modes: %@
Requested mode is not configured.
Error while getting assertion mode: %@.
Requested mode is active.
Requested mode is not active.
Activating mode: %{public}@ (%{public}@) with lifetime: %@
Intent: %{public}@ could not take mode assertion due to error: %{public}@
Intent: %{public}@ has an invalid lifetime, will ignore
Deactivating mode: %@ (%{public}@)
Could not invalidate %@ (%{public}@): %{public}@
Could not invalidate %@ (%{public}@) because the current active mode didn't match the requested mode.
Toggling mode: %{public}@ (%{public}@) without lifetime
Deactivating all modes
Could not invalidate all active mode assertions due to error: %@
Cannot activate mode because it isn't available.
Activating mode: %{public}@ (%{public}@) without lifetime
Unknown state for intent: %{public}@
focus
serviceForClientIdentifier:
availableModesWithError:
countByEnumeratingWithState:objects:count:
modeIdentifier
identifier
isEqualToString:
activeModeAssertionWithError:
details
initialize
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
handleGetFocusState:completion:
confirmGetFocusState:completion:
initWithCode:userActivity:
setState:
handlerForIntent:
mode
state
duration
doubleValue
lifetimeWithDuration:
event
lifetimeUntilEndOfCalendarEventWithUniqueID:occurrenceDate:
location
lifetimeWithCurrentLocation
lifetimeUntilEndOfScheduleWithIdentifier:
setIdentifier:
setModeIdentifier:
setLifetime:
displayString
activateModeWithDetails:error:
UUID
invalidateModeAssertionWithUUID:error:
handleToggleDoNotDisturb:completion:
confirmToggleDoNotDisturb:completion:
queryCurrentStateWithError:
isActive
toDNDIntent
code
binaryValue
setUpdatedValue:
setOldValue:
settingMetadata
initWithSettingMetadata:numericValue:boundedValue:binaryValue:labeledValue:
arrayWithObjects:count:
setSettingResponseDatas:
handleSetBinarySetting:completion:
confirmSetBinarySetting:completion:
resolveSettingMetadataForSetBinarySetting:withCompletion:
resolveBinaryValueForSetBinarySetting:withCompletion:
resolveTemporalEventTriggerForSetBinarySetting:withCompletion:
handleGetSetting:completion:
confirmGetSetting:completion:
resolveSettingMetadataForGetSetting:withCompletion:
resolveConfirmationValueForGetSetting:withCompletion:
Tq,D,N
T@"NSNumber",C,D,N
T@"INObject",C,D,N
init
setUserActivity:
setCode:
_code
Tq,N,V_code
successWithResolvedValue:
confirmationRequiredWithValueToConfirm:
successWithResolvedIntentState:
confirmationRequiredWithIntentStateToConfirm:
DNDGetFocusStateIntentHandler
DNDGetFocusStateIntentHandling
NSObject
DNDIntentExtension
DNDIntentHandler
DNDToggleDoNotDisturbIntentHandling
DNDBinarySettingIntentHandler
INSetBinarySettingIntentHandling
INGetSettingIntentHandling
Conversion
DNDToggleDoNotDisturbIntent
DNDToggleDoNotDisturbIntentResponse
DNDGetFocusStateIntent
DNDGetFocusStateIntentResponse
DNDIntentStateResolutionResult
v16@0:8
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
v32@0:8@"DNDGetFocusStateIntent"16@?<v@?@"DNDGetFocusStateIntentResponse">24
@24@0:8@16
v32@0:8@"DNDToggleDoNotDisturbIntent"16@?<v@?@"DNDToggleDoNotDisturbIntentResponse">24
v32@0:8@"INSetBinarySettingIntent"16@?<v@?@"INSetBinarySettingIntentResponse">24
v32@0:8@"INSetBinarySettingIntent"16@?<v@?@"INSettingMetadataResolutionResult">24
v32@0:8@"INSetBinarySettingIntent"16@?<v@?@"INBinarySettingValueResolutionResult">24
v32@0:8@"INSetBinarySettingIntent"16@?<v@?@"INTemporalEventTriggerResolutionResult">24
v32@0:8@"INGetSettingIntent"16@?<v@?@"INGetSettingIntentResponse">24
v32@0:8@"INGetSettingIntent"16@?<v@?@"INSettingMetadataResolutionResult">24
v32@0:8@"INGetSettingIntent"16@?<v@?@"INBinarySettingValueResolutionResult">24
@32@0:8q16@24
q16@0:8
v24@0:8q16
@24@0:8q16
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.donotdisturb.mode.assertion.client-identifiers</key>
<string>com.apple.DoNotDisturb.Intents</string>
<key>com.apple.private.donotdisturb.mode.assertion.user-requested.client-identifiers</key>
<string>com.apple.DoNotDisturb.Intents</string>
<key>com.apple.private.donotdisturb.settings.request.client-identifiers</key>
<string>com.apple.DoNotDisturb.Intents</string>
<key>com.apple.private.donotdisturb.state.request.client-identifiers</key>
<string>com.apple.DoNotDisturb.Intents</string>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.donotdisturb.service</string>
</array>
</dict>
</plist>
