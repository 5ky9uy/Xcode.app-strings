init
setUpdateCalendarProperties:
setClearChanges:
_setSpinning:
dealloc
backgroundActor
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
sourceExternalId
calendarExternalId
migrateCalendarExternalID
changeTrackingId
removeAlarms
removeAttachments
forceRefresh
clearChanges
initWithSourceId:calendarId:migrateCalendarExternalID:changeTrackingID:removeAlarms:removeAttachments:forcedRefresh:clearChanges:callbackTarget:
setBackgroundActor:
eventStoreWithClientId:
initializeSourceWithExternalId:inStore:needsSave:error:
dictionaryWithObject:forKey:
errorWithDomain:code:userInfo:
calendarWithExternalIdentifier:
initializeCalendarWithExternalId:inSource:needsSave:error:
updateCalendarProperties
unlocalizedTitle
calendarName
isEqualToString:
setTitle:
colorStringRaw
colorString
setColorStringRaw:
setForceRefresh:
isSubscribedHolidayCalendar
isHolidaySubscribedCalendar
setSubscribedHolidayCalendar:
stripAlarms
setStripAlarms:
stripAttachments
setStripAttachments:
subcalURL
subscriptionURL
absoluteString
setSubcalURL:
subcalAccountID
accountId
setSubcalAccountID:
externalModificationTag
doubleValue
setTimestamp:
saveSource:commit:error:
saveCalendar:commit:error:
_initializeCalendarDatabase
finishWithError:
transactionId
sharedGateKeeper
setWaitingForGateKeeper:
setHoldingGateKeeperLock:
finished
_lockedPrepareToPerformBlock:
sharedBabysitter
unregisterAccount:forOperationWithName:
relinquishLocksForWaiter:dataclasses:moreComing:
registerWaiter:forDataclassLocks:completionHandler:
_processICSDataHoldingGatekeeperLock:
_acquireGatekeeperLockAndPerformBlock:
_makeBackgroundActor
processICSData:
processICSDataAtPath:removeFileWhenDone:
setUsingTmpICSData:
setTmpICSData:
allowInsecureConnection
scheme
compare:options:
shouldForceHTTPS
componentsWithURL:resolvingAgainstBaseURL:
setScheme:
subscriptionURLToUse
taskManager
account
wasUserInitiated
initWithURL:wasUserRequested:
setRequest:
request
statusReport
setStatusReport:
setDelegate:
setUseFileCache:
username
setUsername:
password
setPassword:
timestamp
startConnection
cancel
synchronouslyCancel
unregisterWaiterForDataclassLocks:
_syncEndedWithError:
delegate
subCalRefreshTask:finishedWithError:
registerAccount:forOperationWithName:
_syncStarted
tmpICSData
_updateSubscribedCalendarWithTmpICSData:
_dropGateKeeperAndUpdateSubscribedCalendarWithDataFromNetwork
subCalRefreshTask:needsUsernamePasswordForHost:continuation:
handleTrustChallenge:forTask:
handleTrustChallenge:forTask:completionHandler:
subCalRefreshTask:didRedirectToURL:
length
_processICSData:
filePath
_processICSDataFromFile:
_finishWithErrorAfterLoadingURL:
usingTmpICSData
accountID
isSpinning
arrayWithObjects:count:
countByEnumeratingWithState:objects:count:
setIsSpinning:
syncStartedForCalendarWithExternalID:
syncEndedForCalendarWithExternalID:withError:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
handleTrustChallenge:forSubCalURLRequest:
handleTrustChallenge:forSubCalURLRequest:completionHandler:
subCalURLRequest:finishedWithData:error:
subCalURLRequest:updatedData:
subCalURLRequestNeedsUsernameAndPasswordForHost:continuation:
subCalURLRequest:didRedirectToURL:
subCalICSDataActor:completedWithError:
waiterID
willFinish
performDelegateCallbackWithError:
performTask
setSubscriptionURL:
setSourceExternalId:
setCalendarExternalId:
setChangeTrackingId:
setCalendarName:
setAccountId:
setRemoveAlarms:
setRemoveAttachments:
setColorString:
setIsHolidaySubscribedCalendar:
setAllowInsecureConnection:
setMigrateCalendarExternalID:
waitingForGateKeeper
holdingGateKeeperLock
.cxx_destruct
_removeAlarms
_removeAttachments
_forceRefresh
_clearChanges
_isHolidaySubscribedCalendar
_allowInsecureConnection
_updateCalendarProperties
_waitingForGateKeeper
_holdingGateKeeperLock
_usingTmpICSData
_isSpinning
_delegate
_subscriptionURL
_sourceExternalId
_calendarExternalId
_changeTrackingId
_calendarName
_accountId
_username
_password
_tmpICSData
_colorString
_migrateCalendarExternalID
_backgroundActor
_request
_timestamp
T@"SubCalICSDataActor",&,N,V_backgroundActor
T@"SubCalURLRequest",&,N,V_request
Td,N,V_timestamp
TB,N,V_waitingForGateKeeper
TB,N,V_holdingGateKeeperLock
TB,N,V_usingTmpICSData
TB,N,V_isSpinning
T@"<SubCalRefreshTaskDelegate>",&,N,V_delegate
T@"NSURL",&,N,V_subscriptionURL
T@"NSString",&,N,V_sourceExternalId
T@"NSString",&,N,V_calendarExternalId
T@"NSString",&,N,V_changeTrackingId
T@"NSString",&,N,V_calendarName
T@"NSString",&,N,V_accountId
T@"NSString",&,N,V_username
T@"NSString",&,N,V_password
T@"NSData",&,N,V_tmpICSData
TB,N,V_removeAlarms
TB,N,V_removeAttachments
TB,N,V_forceRefresh
TB,N,V_clearChanges
T@"NSString",&,N,V_colorString
TB,N,V_isHolidaySubscribedCalendar
TB,N,V_allowInsecureConnection
T@"NSString",&,N,V_migrateCalendarExternalID
TB,N,V_updateCalendarProperties
subCalHandlers
setSubCalHandlers:
addObject:
handleWebcalURLString:withConsumer:
removeObject:
handleWebcalURL:
subCalWebcalHandlerFinishedSetup:
setIsMonitoring:
monitorFoldersWithIDs:
sharedManager
registerDelegate:
stopMonitoringFolders
stopObservingReachability
unregisterDelegate:
isMonitoring
isManagedCalendar
setWasUserInitiated:
shouldFailAllTasks
accountDescription
publicDescription
refreshAllCalendars:
isSubCalReachabilityError
setSyncWhenReachable:
syncFolderIDs:forDataclasses:isUserRequested:
observeReachabilityWithBlock:
delegateDidCompleteRefresh:
allObjects
scheduleIdentifier
onBehalfOfBundleIdentifier
refreshCollections:withReason:
watchedCollections
getDAAccount
saveXpcActivity:
trustHandler
serverTokenRegistrationURL
interfaceWentUp
interfaceWentDown
fetchInterval
pushDisabled
T@"DATrustHandler",R,N
accountDidCompleteRefresh:withError:
startMonitoring
requestAgentStopMonitoringWithCompletionBlock:
backingAccountInfo
parentAccount
identifier
stringWithFormat:
changeTrackingID
CalDAVSubscribedCalendarsKey
objectForKeyedSubscript:
allKeys
calDAVURLString
allTasks
count
isShutdown
_calendarExistsOnParent
shouldRemoveAlarms
shouldRemoveAttachments
useSSL
clearTmpICSData
submitQueuedTask:
domain
code
setEnabled:forDADataclass:
saveAccountProperties
isBadPasswordError:
setAuthenticated:
setUseSSL:
isAuthenticated
setHost:
_refresh:
cancelAllTasks
dropAssertionsAndRenewCredentialsInQueue:withHandler:
T@"<SubCalDaemonAccountDelegate>",W,N,V_delegate
copy
callbackTarget
shouldCancel
setCallbackTarget:
_gatherExistingEventsInCalendar:uidToEventMap:uidToExternalIDs:
_gatherAddedEventsFromDocument:existingEventExternalIDs:existingEventUIDs:eventsToRemove:
eventStore
title
claimedOwnershipOfDataclasses:
importEventsWithExternalIDs:fromICSData:intoCalendars:options:batchSize:
removeEvent:span:commit:error:
externalID
uniqueID
commit:
setExternalModificationTag:
setDigest:
markChangedObjectIDsConsumedUpToToken:
predicateForMasterEventsInCalendar:
arrayByAddingObjectsFromArray:
setDefaultPropertiesToLoad:
eventsMatchingPredicate:
initWithCapacity:
originalItem
setObject:forKeyedSubscript:
initWithArray:
calendar
componentKeys
componentForKey:
componentOccurrencesForKey:
externalIDForICSEvent:
isEqualToSet:
recurrence_id
value
icsString
_updateSubCalWithICSDocument:data:calendar:digest:error:
initWithData:options:error:
_processICSDocument:icsData:calendar:digest:
digestForSubCal
sourceWithExternalID:
forcedRefresh
isEqualToData:
date
numberWithUnsignedInteger:
_reallyProcessICSData:withCalendar:withDigest:
timeIntervalSinceDate:
numberWithDouble:
setExternalID:
actorQueue
_internalProcessICSData:
_sendResultToCallbackActor:
initWithContentsOfMappedFile:
defaultManager
removeItemAtPath:error:
setShouldCancel:
ICSStringWithOptions:
modTagForSubCal
numProgressCallbacks
setNumProgressCallbacks:
_shouldCancel
_forcedRefresh
_numProgressCallbacks
_actorQueue
_callbackTarget
_eventStore
_calendar
TB,N,V_shouldCancel
T@"NSObject<OS_dispatch_queue>",R,N,V_actorQueue
T@"<SubCalICSDataCallbackActor>",W,N,V_callbackTarget
T@"NSString",C,N,V_sourceExternalId
T@"NSString",C,N,V_calendarExternalId
T@"NSString",C,N,V_migrateCalendarExternalID
T@"EKEventStore",R,N,V_eventStore
T@"EKCalendar",R,N,V_calendar
TB,R,N,V_removeAlarms
TB,R,N,V_removeAttachments
TB,R,N,V_forcedRefresh
TB,R,N,V_clearChanges
TI,N,V_numProgressCallbacks
setCalendarId:
removePendingAccountSetup
consumer
outstandingSetupRequests
urlString
timeIntervalSinceReferenceDate
initWithFormat:
initWithString:
defaultWorkspace
openSensitiveURL:withOptions:
_tellConsumerWereFinished
sharedRunLoop
_receiveWhereTo:
showUserNotification:groupIdentifier:callbackQueue:sourceRunLoop:completionBlock:
saveTmpICSData
saveAccountPropertiesWithCompletionHandler:
_showWhereTo
setAccount:
initWithEKOptions:
_createCalendarInStore:needsCommit:
_saveAccount
performSelector:withObject:afterDelay:inModes:
objectID
rowID
_createCalendar
_prepareForSave
checkValidityOnAccountStore:withConsumer:inQueue:
_receiveSubscribeAccount:
_receiveInvalidAccount:
quickValidate:
host
_receiveAuthPrompt:notification:
haveShownSubscribeAlert
setHaveShownSubscribeAlert:
_showSubscribeAccount
isSubCalAuthError
_showAuthPrompt
haveTriedHTTP
canTryHTTP
_showSSLFailureAlert
_showInvalidAccount
_sslFailureAlertReceived:
setHaveTriedHTTP:
da_loadDAAccountsWithAccountTypeIdentifiers:withCompletion:
hasSubscribedCalendarAtURL:
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
initWithBackingAccountInfo:
compare:options:range:
setCanTryHTTP:
_newAccountWithHost:
_existingAccountLikeAccount:
_showMatchingAccountAlertForAccount:
containsObject:
stringByReplacingPercentEscapesUsingEncoding:
isSubCalURLString
shouldSubscribeThroughMobileCal
appendString:
URLWithString:
operationToOpenResource:usingApplication:userInfo:
start
setUrlString:
addPendingAccountSetup
setConsumer:
_beginAccountSetupWithSubscriptionAtHost:
account:isValid:validationError:
calendarId
_haveShownSubscribeAlert
_canTryHTTP
_haveTriedHTTP
_calendarId
_account
_consumer
_urlString
T@"SubCalAccount",&,N,V_account
T@"<SubCalWebcalHandlerConsumer>",W,N,V_consumer
T@"NSString",C,N,V_urlString
Ti,N,V_calendarId
TB,N,V_haveShownSubscribeAlert
TB,N,V_canTryHTTP
TB,N,V_haveTriedHTTP
defaultCenter
removeObserver:name:object:
invalidate
_unregisterForNotifications
_tearDownRefreshTimer
setSearchTask:
preferredLanguages
objectAtIndex:
autoupdatingCurrentLocale
objectForKey:
externalRepresentation
dictionaryWithExternalRepresentationData:
lastHolidayLanguageFromDictionary:
lastHolidayRegionFromDictionary:
language
region
_holidayCalendarInEventStore:
removeCalendar:commit:error:
_reallyRemoveHolidaySubscribedCalendar
mutableCopy
array
payloadAsString
removeObjectsInArray:
lowercaseString
rank
intValue
calendarDescription
hasPrefix:
rangeOfString:
port
setPort:
relativePath
setPrincipalPath:
setAccountDescription:
_removeHolidaySubscribedCalendar
holidayCalendarURL
initWithLanguages:location:calendarType:url:
setAccountInfoProvider:
error
urlsToResults
_handleCalendarSearchResults:
setCompletionBlock:
submitIndependentTask:
_lastRefreshDateInCalendar:
_hasCorrectLocaleInCalendar:
holidayCalendarRefreshInterval
_fetchUpdatedSubscriptionURL
initWithAccount:
_reallyRefresh:
distantPast
dateWithTimeIntervalSinceReferenceDate:
setLastHolidayLanguage:inDictionary:
setLastHolidayRegion:inDictionary:
externalRepresentationDataWithDictionary:
setExternalRepresentation:
_setLastRefreshDate:inCalendar:
_setCurrentLanguageAndLocaleInCalendar:
_refreshTimerFired:
timerWithTimeInterval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
_saveHolidayCalMetadata
_localeDidChange:
addObserver:selector:name:object:
serverRoot
user
identityPersist
principalURL
serverComplianceClasses
userAgentHeader
promptUserForNewCoreDAVPasswordWithCompletionBlock:
handleCertificateError:
additionalHeaderValues
customConnectionProperties
clientCertificateInfoProvider
oauthInfoProvider
handleTrustChallenge:completionHandler:
handleAuthenticateAgainstProtectionSpace:
shouldRetryUnauthorizedTask:
handleShouldUseCredentialStorage
noteHomeSetOnDifferentHost:
shouldHandleHTTPCookiesForURL:
shouldSendClientInfoHeaderForURL:
shouldTurnModalOnBadPassword
shouldTryRenewingCredential
renewCredential
noteSuccessfulRequestWithNumDownloadedElements:forTask:
noteFailedNetworkRequestForTask:
noteFailedProtocolRequestForTask:
noteTimeSpentInNetworking:forTask:
noteSuccessfulRequestWithNumDownloadedElements:
noteFailedNetworkRequest
noteFailedProtocolRequest
noteTimeSpentInNetworking:
copyStorageSession
shouldUseOpportunisticSockets
shouldCompressRequests
clientTokenRequestedByServer
clientToken
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
getAppleIDSession
refreshTimer
setRefreshTimer:
searchTask
_lastRefreshDate
_refreshTimer
_searchTask
T@"NSTimer",&,N,V_refreshTimer
T@"CalDAVCalendarSearchTask",&,N,V_searchTask
T@"NSString",R,N
SubCalRefreshTask.m
We should never process ICS Data while waiting on a previous processICSData call
Error Code
SubCalRefresh
v20@?0q8B16
v8@?0
https
WTF? don't try and make a new request before cleaning up the old one
com.apple.dataaccessd-%@
v24@?0q8@"NSError"16
SubCalICSDataActorErrorDomain
com.apple.dataaccess.subcal.actor
originalItem
externalID
uniqueID
%@/%@
calshow:%d?calendarid=%d
v24@?0^{__CFUserNotification=}8Q16
v20@?0B8@"NSError"12
Validated
Could not validate
v24@?0@"NSArray"8@"NSError"16
calsubcal:
Holiday
Can't find source with id %@: %@
Migrated calendar already exists when migrating from external ID %@ to external ID %@. Using the existing migrated calendar
Updating calendar properties for calendar with id %@ even though we weren't asked to because we created the calendar.
Failed to save source to event store with error: %@
Failed to save calendar to event store with error: %@
Failed to initialize the calendar database: %@
DATransaction starting, ID: %@
Grabbing gatekeeper lock before processing the data for the subscribed calendar at %@
%@ (%@) got my lock for dataclasses 0x%lx
Got lock for %ld something other than events?!
%@ Aborting processing subcal data because this task is already finished
Relinquishing locks now
%@ aborted locks for dataclasses 0x%lx
New account! attempting to create calendar from tmp ics data
Refresh failed using https; replacing error %@ with kSubCalInsecureConnectionNotAllowed.
Waiting for ICS data actor to tear down...
Data actor queue is clean. Continuing with teardown
The babysitter put us in timeout. Failing this sync
Error processing tmp ics data %@
Telling springboard to set the spinner to %@ for identifier %@
Finished telling springboard to set the spinner to %@ for identifier %@
%@ asked to start monitoring
%@ asked to stop monitoring
Ignoring refresh for calendar %@ because it is managed by a CalDAV server
Account "%@" (%{public}@) thinks it should fail all tasks.  Doing so
Account %@ couldn't reach the server. Monitoring for reachability.
Ignoring request, already refreshing account with ID %@
The parent account doesn't know about the subscribed calendar at %@ (account %@). Skipping refresh.
Refreshing Subscribed Calendar account with ID %{public}@
Refresh completed for account with ID %{public}@ with error %@
The server for account "%@" (%{public}@) returned a 410 status code, which means this calendar is gone gone gone. Disabling calendars for this account.
Got a bad password error; marking account ad unauthenticated: "%@" (%{public}@)
Refresh completed for account with ID %{public}@
Account "%@" (%{public}@) successfully refreshed using https; updating the account
Account "%@" (%{public}@) was marked as unauthenticated but refreshed successfully. Marking it as authenticated.
Account "%@" (%{public}@) was redirected to "%@"
Refreshing all calendars
%@ asked to monitor these folders: %@
%@ asked to stop monitoring folders
Beginning import into calendar %@ (%{public}@). Will add/update %lu events and delete %lu events.
Importing subscribed calendar events failed
Error removing event (summary=%@, externalID=%{public}@ uniqueID=%{public}@): %@
Error committing removal batch: %@
Saving timestamp %@ as external tag
Dropping detached occurrence of %{public}@ without recurrence id
Failed to init ICS document with given data. Error: %@
Processing ics calendar
Did not get a valid ics calendar
Done processing ics data, error: %@
%@ processing data of length %lu
Can't find source with id %@
Empty digest for calendar with id %@
Can't find calendar with external id %@
Digests are the same, not saving to db
==== SubCal: Starting processing ICS Data. Size of Data %{public}@ Bytes ====
==== SubCal: Finished processing ICS Data. CPU Time - [%{public}@secs] Size of Data %{public}@ Bytes ====
Migrating calendar externalID from %@ to %@
Error updating external ID
Initiating EKEvent Store commit
Error committing the event store.
EKEventStore commit success.
Empty icsData passed to SubCalICSDataActor
Processing mmapped file %@
Error cleaning up file at %@
Actor queue is clear
Finished Out of band setup
User chose to go to mobile cal
User chose to stay here
%@ saving account
Failed to save subscribed calendar account: %@
Error committing EKEventStore: %@
Error initializing the EKSource with externalId: %@. Error: %@
Error saving source: %@
Error initializing the EKCalendar with externalId: %@. Error: %@
Error saving calendar: %@
Why was SubCalWebcalHandler given locks for 0x%lx ?
User chose to subscribe to new account
User chose not to subscribe to new account
User responded to invalid account alert
User chose not to input auth for account
%@ account for host %@ %@
User chose to try connecting without SSL
User chose not to try connecting without SSL
Ignoring webcal setup of outstanding URL %@
Could not retrieve Language or Region for the Holiday Calendar AccountID %@ with Subscription-URL %@
Removing nil calendar in _reallyRemoveHolidaySubscribedCalendar
Could not remove calendar from store. Error: %@
Couldn't get a gatekeeper lock in order to remove the holiday subscribed calendar.
Found the following holiday calendars: %@.
Searching for a calendar that matches %@/%@
Removing %@, since our locale is %@
Matching subscription URL found at %@
Couldn't find any matching subscription calendars. Removing the one we have
Couldn't find a holiday calendar URL. Cleaning up.
Fetching an updated subscription URL from %@. Current locale is %@ and language is %@. Request is %@
Error fetching subscribed holiday calendars. Giving up for now. %@
The existing calendar has the correct locale. Continuing with our refresh
Skipping holiday calendar refresh because we last refreshed it at %@, less than our refresh interval of %f
Couldn't get a gatekeeper lock in order to refresh the holiday subscribed calendar.
Setting last holiday calendar refresh time to %@
Saving current locale (%@) and language (%@)
Holiday Calendar not found in _saveHolidayCalMetadata:
Event Store commit failed with error: %@
Couldn't get a gatekeeper lock in order to save the last holiday calendar refresh date.
Refresh timer fired.
The current locale changed. Refreshing our holiday calendar
SubCalRefreshTask
SubCalURLRequestDelegate
NSObject
SubCalICSDataCallbackActor
DADataclassLockWatcher
DABabysittable
SubCalExtras
SubCalAgent
DARefreshManagerDelegate
SubCalDaemonAccountDelegate
SubCalDaemonAccount
SubCalICSDataActor
SubCalWebcalHandler
DAValidityCheckConsumer
HolidayCalDaemonAccount
CoreDAVAccountInfoProvider
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v40@0:8@16@24@?32
v40@0:8@16@24@32
v32@0:8@16@?24
v32@0:8@"NSURLAuthenticationChallenge"16@"SubCalURLRequest"24
v40@0:8@"NSURLAuthenticationChallenge"16@"SubCalURLRequest"24@?<v@?q@"NSURLCredential">32
v40@0:8@"SubCalURLRequest"16@"NSData"24@"NSError"32
v32@0:8@"SubCalURLRequest"16@"NSData"24
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSString">24
v32@0:8@"SubCalURLRequest"16@"NSURL"24
v32@0:8@"SubCalICSDataActor"16@"NSError"24
v16@0:8
v24@0:8@?16
v24@0:8@16
v20@0:8B16
d16@0:8
v24@0:8d16
@"<SubCalRefreshTaskDelegate>"
@"NSURL"
@"NSString"
@"NSData"
@"SubCalICSDataActor"
@"SubCalURLRequest"
v28@0:8@16i24
q16@0:8
v28@0:8@"NSSet"16i24
@"NSSet"16@0:8
@"DAAccount"16@0:8
v24@0:8@"NSObject<OS_xpc_object>"16
@"DATrustHandler"16@0:8
@"NSURL"16@0:8
v32@0:8@"SubCalDaemonAccount"16@"NSError"24
v36@0:8@16q24B32
@"<SubCalDaemonAccountDelegate>"
@24@0:8@16
@72@0:8@16@24@32@40B48B52B56B60@64
B56@0:8@16@24@32@40^@48
v40@0:8@16^@24^@32
@48@0:8@16@24@32^@40
@48@0:8@16@24@32@40
@40@0:8@16@24@32
v28@0:8@16B24
I16@0:8
v20@0:8I16
@"NSObject<OS_dispatch_queue>"
@"<SubCalICSDataCallbackActor>"
@"EKEventStore"
@"EKCalendar"
v36@0:8@16B24@28
v36@0:8@"DAAccount"16B24@"NSError"28
v24@0:8Q16
v32@0:8@16^B24
v32@0:8Q16^{__CFUserNotification=}24
i16@0:8
v20@0:8i16
@"SubCalAccount"
@"<SubCalWebcalHandlerConsumer>"
B32@0:8@16@?24
v32@0:8q16@24
v32@0:8d16@24
v24@0:8q16
^{__CFURLStorageSession=}16@0:8
v48@0:8@16@24@32@?40
@"NSData"16@0:8
v24@0:8@?<v@?i>16
B24@0:8@"NSError"16
@"NSDictionary"16@0:8
@"<CoreDAVClientCertificateInfoProvider>"16@0:8
@"<CoreDAVOAuthInfoProvider>"16@0:8
B32@0:8@"NSURLAuthenticationChallenge"16@?<v@?q@"NSURLCredential">24
B24@0:8@"NSURLProtectionSpace"16
B24@0:8@"NSURLSessionTask"16
v24@0:8@"NSURL"16
B24@0:8@"NSURL"16
v32@0:8q16@"CoreDAVTask"24
v24@0:8@"CoreDAVTask"16
v32@0:8d16@"CoreDAVTask"24
v48@0:8@"NSURL"16@"NSString"24@"NSObject<OS_dispatch_queue>"32@?<v@?i>40
@"AKAppleIDSession"16@0:8
@"NSDate"
@"NSTimer"
@"CalDAVCalendarSearchTask"
zPLR
zPLR
zPLR
