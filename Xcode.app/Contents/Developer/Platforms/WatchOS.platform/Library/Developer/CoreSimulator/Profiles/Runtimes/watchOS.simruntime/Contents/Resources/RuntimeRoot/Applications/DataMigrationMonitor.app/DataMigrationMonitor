com.apple.system.prefs.changed
down
v16@?0^{__IOHIDEvent=}8
v8@?0
CSLStartupButtonHeldCheckQueue
v12@?0B8
shouldDismissOnButtonPresses
TB,N,V_shouldDismissOnButtonPresses
Should Obliterate Window
hasService
TB,R,N
listening
TB,R,N,GisListening
ARE_YOU_SURE_YOU_WANT_TO_CONTINUE_LABEL
General
WARNING_LABEL
small_passlock_wipe_green_check
small_passlock_wipe_red_x
v16@?0@"NSError"8
RESET_FAILED_MESSAGE
ownerDelegate
T@"<CSLObliterationViewControllerOwnerDelegate>",W,N,V_ownerDelegate
delegate
T@"<CSLObliterationViewControllerDelegate>",W,N,V_delegate
useBlackBackground
TB,N,V_useBlackBackground
%@ %p
 (%@)
PBAHIDEventController
dispatchingAssertion
T@"<BSInvalidatable>",&,N,V_dispatchingAssertion
invertUI
com.apple.nano
lockButtonTimer
T@"NSTimer",&,N,V_lockButtonTimer
ERASE_ALL_CONTENT_AND_SETTINGS_LABEL
CONNECT_TO_POWER_BEFORE_ERASE_LABEL
CANCEL_LABEL
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
window
T@"UIWindow",&,N
orientationController
T@"PBAOrientationController",&,N,V_orientationController
%@ %@
timestamp
onAC
hasTimestamp
TB,N
TQ,N,V_timestamp
hasOnAC
TB,N,V_onAC
com.apple.DataMigrationMonitor.terminate
kIOSSHLBatteryNotChargingStatusChangedNotification
kIOSSHLACStatusChangeNotification
kIOSSHLUnsupportedChargingAccessoryStatusChangedNotification
isOnAC
TB,N,V_isOnAC
isOnACForUI
TB,N,V_isOnACForUI
isBatteryCharging
TB,N,V_isBatteryCharging
batteryCapacity
Tf,N,V_batteryCapacity
supportsDetailedBatteryCapacity
TB,N,V_supportsDetailedBatteryCapacity
isConnectedToChargeIncapablePowerSource
TB,N,V_isConnectedToChargeIncapablePowerSource
isConnectedToUnsupportedChargingAccessory
TB,N,V_isConnectedToUnsupportedChargingAccessory
hideACPower
TB,V_hideACPower
lowBatteryLevel
Tq,V_lowBatteryLevel
chargerFamilyKey
Ti,N,V_chargerFamilyKey
batteryStatusLogger
T@"<CSLBatteryStatusLogger>",W,N,V_batteryStatusLogger
SBHideACPower
SBLowBatteryLevel
init
dealloc
initWithServiceUsagePage:usage:additionalMatchingCriteria:log:eventQueue:eventBlock:
waitForMatchedHIDService:
copy
startListening
stopListening
hasService
copyEventType:matchingEvent:options:
buttonHoldTime
startupUsingEventQueue:withCompletion:
startListeningForEventsWithBlock:
stopListeningForEvents
isButtonDown
.cxx_destruct
_hidEventListener
_hidKeyboardEventToMatch
_buttonEventBlock
_startListeningForEvents
_stopListeningForEvents
_performCallbackWasHeld:
initWithHeldBlock:notHeldBlock:callbackQueue:buttonCheckProvider:
setHeldBlock:notHeldBlock:
_provider
_heldBlock
_notHeldBlock
_callbackQueue
_keyWasDown
_keyWasReleased
_timerDidFire
_callbackPerformed
_eventQueue
initWithActions:title:message:presentOverAlertEnabled:
initWithActions:title:message:attributedMessage:presentOverAlertEnabled:
setMessage:
setAttributedMessage:
setTitle:
groupWithActions:title:
arrayWithObjects:count:
setGroups:
setUseNonWindowPresentation:
setModalPresentationStyle:
numberWithDouble:
setMessageLabelHyphenationFactor:
presentingViewController
dismissViewControllerAnimated:completion:
delegate
actionContentControllerCancel:
initWithActions:title:message:
handleButton:eventType:
shouldDismissOnButtonPresses
setShouldDismissOnButtonPresses:
_shouldDismissOnButtonPresses
_isSecure
showObliterationDialog
mainScreen
bounds
initWithFrame:
setRootViewController:
setWindowLevel:
makeKeyAndVisible
setDelegate:
setOwnerDelegate:
setUseBlackBackground:
rootViewController
presentViewController:animated:completion:
initWithForceSWUpdate:
sharedInstance
isOnAC
isBatteryCharging
batteryCapacity
setHidden:
deactivateController:withCompletion:
showObliterationConfirmationDialog
currentConditionsDoAllowObliteration
presentObliterationControllerWithCanceledBlock:
_window
_obliterationController
_obliterationConfirmationController
_canceledBlock
isListening
_log
_listening
useBlackBackground
blackColor
setBackgroundColor:
clearColor
addSubview:
systemFontOfSize:
mainBundle
localizedStringForKey:value:table:
setText:
setFont:
setNumberOfLines:
setLineBreakMode:
setBaselineAdjustment:
setAdjustsFontSizeToFitWidth:
setClipsToBounds:
whiteColor
setTextColor:
setTextAlignment:
dictionaryWithObjects:forKeys:count:
boundingRectWithSize:options:attributes:context:
setFrame:
frame
buttonWithType:
imageNamed:
setImage:forState:
sizeToFit
performObliteration
addTarget:action:forControlEvents:
cancelObliteration
setView:
viewWillAppear:
defaultCenter
_powerStatusUpdated:
addObserver:selector:name:object:
removeObserver:
viewDidDisappear:
center
setCenter:
setAnimating:
view
failSafeObliterate
activeDeviceSelectorBlock
getDevicesMatching:
firstObject
unpairWithDevice:shouldObliterate:operationHasBegun:
showResetFailureMessage
systemOrangeColor
setAlpha:
removeFromSuperview
animateWithDuration:delay:options:animations:completion:
loadView
ownerDelegate
_spinner
_forceSWUpdate
_useBlackBackground
_ownerDelegate
_delegate
showLogo
hideLogo
isViewLoaded
layer
name
stringWithFormat:
setName:
stringByAppendingFormat:
descriptorWithPage:usage:
addObject:
builtinDisplay
nullDisplay
setWithObjects:
defaultSystemPredicate
setDisplays:
mutableCopy
descriptors
unionSet:
setDescriptors:
systemTarget
ruleForDispatchingDiscreteEventsMatchingPredicate:toTarget:
defaultFocusPredicate
minusSet:
keyboardFocusTarget
dispatchDiscreteEventsForReason:withRules:
setSystemAppControlsFocusOnMainDisplay:
sharedController
startReceivingEvents
dispatchingAssertion
setDispatchingAssertion:
_dispatchingAssertion
initWithRadians:
attachDefaultTransform:forDisplayWithRootIdentity:
_sceneTransform
updateBatteryState:
_lockButtonDown
_lockButtonUp
_menuButtonDown
_menuButtonUp
__handleHIDEvent:
_handleHIDEvent:
_hidEvent
_startLockButtonTimer
setLockButtonTimer:
_lockButtonLongPress
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
invalidate
_cancelLockButtonTimer
shouldCheckInWithBackboard
registerAsSystemApp
_createStatusBarWithRequestedStyle:orientation:hidden:
_isSpringBoard
applicationWillOrderInContext:windowLevel:screen:
applicationDidOrderOutContext:screen:
batteryStatusDidChange:
ensureBacklightOn
ensureBacklightOff
_handlePhysicalButtonEvent:
lockButtonTimer
_buttonHeldCheck
_obliterationPresenter
_screenCovered
_lockButtonTimer
setTitle:forState:
titleLabel
sizeThatFits:
setTitleColor:forState:
colorWithRed:green:blue:alpha:
setCornerRadius:
obliterateClicked
font
pointSize
setMinimumScaleFactor:
colorWithWhite:alpha:
cancelClicked
_statusUpdated:
_updateViews
_obliterateButton
_connectPowerLabel
_showObliterateButton
setOrientationController:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
window
setWindow:
orientationController
_orientationController
dictionaryRepresentation
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
numberWithBool:
allocWithZone:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
setOnAC:
setHasOnAC:
hasOnAC
readFrom:
writeTo:
copyTo:
mergeFrom:
timestamp
onAC
_timestamp
_onAC
_has
setStateForFullPower:
postFullPower
setStateForPluggedIn:
postPluggedIn
setStateForCurvedBatteryCapacity:
postCurvedBattery
_queue
_fullPowerToken
_pluggedInToken
_curvedBatteryCapacityToken
_fullPowerTokenRegistered
_pluggedInTokenRegistered
_curvedBatterCapacityTokenRegistered
_removePreferencesObserver
setHideACPower:
setLowBatteryLevel:
postNotificationName:object:userInfo:
postNotificationName:object:
_loadPreferences
_addPreferencesObserver
logAWDMetric
setIsConnectedToUnsupportedChargingAccessory:
batteryCapacityAsPercentage
setIsOnAC:
isOnACForUI
setIsOnACForUI:
setIsBatteryCharging:
isConnectedToUnsupportedChargingAccessory
setBatteryCapacity:
batteryStatusLogger
setBatteryStatusLogger:
supportsDetailedBatteryCapacity
setSupportsDetailedBatteryCapacity:
isConnectedToChargeIncapablePowerSource
setIsConnectedToChargeIncapablePowerSource:
hideACPower
lowBatteryLevel
chargerFamilyKey
setChargerFamilyKey:
_notifySender
_isOnAC
_isOnACForUI
_isBatteryCharging
_isConnectedToUnsupportedChargingAccessory
_supportsDetailedBatteryCapacity
_isConnectedToChargeIncapablePowerSource
_hideACPower
_batteryCapacity
_chargerFamilyKey
_batteryStatusLogger
_lowBatteryLevel
objectForKey:
count
addEntriesFromDictionary:
typeSafeObjectForKey:ofType:
dictionaryByAddingEntriesFromDictionary:
typeSafeSetObject:forKey:
crown?(%d:%d) %s  [startup button held check]
unexpected hid event: %p (%d) [startup button held check]
cannot start listening, no listener
hidEventListener does not have a service
button is down at startup, waiting to see if down long enough
button no longer down, ignoring timer expiration
button held long enough
button no longer down, but did not see button up event
button held long enough and still held when callback changed
button no longer down, after callback changed, likely already canceled by user
button still down, waiting for timer to fire
button down again - will ignore
button released, not held long enough
button up again - will ignore
callback already made, ignoring second request (%{BOOL}u)
will ask to obliterate
will confirm obliteration
obliteration confirmation attempted before obliteration
%p init
%p dealloc
already listening for events
was not listening for events
Triggering fail safe obliteration
Triggering unpair with device %@
-unpairWithDevice returns Error %@
Obliteration failed to start: '%@'
Unpairing/Obliteration has begun
battery now charging, will confirm obliteration
battery not charging, will until it is before proceeding to confirm obliteration
migration app started
########## DBG_CODE: (%d)
CSLHIDButtonCheckProvider
CSLButtonCheckProviderProtocol
CSLStartupButtonHeldCheck
CUISAlertSheetController
CSLStartupObliterationSecureWindow
CSLStartupObliterationPresenter
CSLObliterationViewControllerOwnerDelegate
CSLObliterationViewControllerDelegate
CSLHIDEventListener
CSLObliterationConfirmationViewController
PBALogoManager
PBAHIDEventController
PBAOrientationController
DMMApplication
CSLObliterationViewController
DMMAppDelegate
UIApplicationDelegate
NSObject
AWDCarouselBatteryACStatusChanged
NSCopying
_IOSSHLBatteryNotifySender
IOSSHLBatteryStatus
Typesafe
d16@0:8
v32@0:8@16@?24
v24@0:8@?16
v16@0:8
B16@0:8
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?>24
v24@0:8@?<v@?B>16
@16@0:8
@"CSLHIDEventListener"
^{__IOHIDEvent=}
@48@0:8@?16@?24@32@40
v32@0:8@?16@?24
v20@0:8B16
@"<CSLButtonCheckProviderProtocol>"
@"NSObject<OS_dispatch_queue>"
@40@0:8@16@24@32
@44@0:8@16@24@32B40
@52@0:8@16@24@32@40B48
B32@0:8Q16Q24
v28@0:8B16@?20
v28@0:8B16@?<v@?>20
@"UIWindow"
@"CSLObliterationViewController"
@"CSLObliterationConfirmationViewController"
@64@0:8q16q24@32@40@48@?56
^{__IOHIDEvent=}32@0:8I16^{__IOHIDEvent=}20I28
@"NSObject<OS_os_log>"
@20@0:8B16
v24@0:8@16
@"PUICActivityIndicatorView"
@"<CSLObliterationViewControllerOwnerDelegate>"
@"<CSLObliterationViewControllerDelegate>"
@"<BSInvalidatable>"
@"FBSceneTransform"
v36@0:8q16q24B32
v36@0:8@16f24@28
v32@0:8@16@24
B24@0:8^{__IOHIDEvent=}16
v24@0:8^{__IOHIDEvent=}16
B24@0:8@16
@"CSLStartupButtonHeldCheck"
@"CSLStartupObliterationPresenter"
@"NSTimer"
@"UIButton"
@"UILabel"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
Q32@0:8@16@24
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
@"PBAOrientationController"
@24@0:8^{_NSZone=}16
v24@0:8Q16
{?="timestamp"b1"onAC"b1}
i16@0:8
f16@0:8
v20@0:8f16
q16@0:8
v24@0:8q16
v20@0:8i16
@"_IOSSHLBatteryNotifySender"
@"<CSLBatteryStatusLogger>"
@32@0:8@16#24
@24@0:8@16
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>com.apple.CommCenter.Preferences-delete</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.datamigrator</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.ids.registration-reset</key>
<true/>
<key>com.apple.private.kernel.darkboot</key>
<true/>
<key>com.apple.private.security.no-sandbox</key>
<true/>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
