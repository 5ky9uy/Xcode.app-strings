@(#)PROGRAM:MobileAsset  PROJECT:MobileAsset-658
v8@?0
com.apple.MobileAsset.client.state
com.apple.mobileassetd.v2
commsManager is nil, all xpc communication will fail
Asset types is not an array
Asset type in array is not a string
Preserved IDs type is not an dictionary
Preserved IDs key is not a string
Preserved IDs value is not an array for: %@
Preserved ID is not a string: %@ %@
AssetType
MobileAsset sendAction %lld (%@) given a non-NSString assetType
messageAction
Result
com.apple.MobileAsset.client.callback
purgeAssetTypeListLength
purgeAssetTypeList
purgeAssetTypePreservingListLength
purgeAssetTypePreservingList
could not encode query params: %@
QueryParams
returnAssetTypes
doNotBlockBeforeFirstUnlock
pallasAudience
pallasUrl
AssetId
assetState
downloadConfigLength
downloadConfig
localAssetPath
true
getLocalPath asset %@ %@ failure updating last access time due to XPC
, unable to update last access time %ld (%@)
assetDataExistsPosNeg
, exists: YES
, exists: NO
getLocalPath asset %@ %@%@%@
getLocalPath asset %@ %@ local path is '%@'%@%@
getLocalPath Could not create xpc message
MobileAsset addObjectToMessage has nil parameter
downloadOptionsLength
downloadOptions
Bad options for asset type: %@ not sending message
Bad asset meta data, cannot download: %@ %@ %@ %@
BaseUrlKey
RelativeUrlKey
szExtractor
szExtractorLength
No extractor specified
startingRange
lengthOfRange
The download size is: %lld the start is: %@, the length is %@
downloadSize
notificationInterval
Attempting to get sandbox extension for a nil asset type
clientName
Extension failure due to XPC
Extension failure server side
sandboxExtensionKey
unable to consume sandbox extension
Consumed extension
extension present
NSUrlState
serverOverrideUrl
MobileAsset _MAclientSendServerUrlOverride passed invalid NSString
TQ,N,V_notificationInterval
callBackArray
T@"NSMutableArray",R,N,V_callBackArray
com.apple.MobileAsset.SoftwareUpdate
com.apple.MobileAsset.MobileSoftwareUpdate.UpdateBrain
com.apple.MobileAsset.SoftwareUpdateDocumentation
com.apple.MobileAsset.WatchSoftwareUpdateDocumentation
com.apple.MobileAsset.RecoveryOSUpdateBrain
com.apple.MobileAsset.RecoveryOSUpdate
com.apple.MobileAsset.MacSoftwareUpdate
com.apple.MobileAsset.MobileSoftwareUpdate.MacUpdateBrain
com.apple.MobileAsset.SFRSoftwareUpdate
_UnarchivedSize
normalizedAssetType
Could not create normalized asset type
%@%@%@
%@.%@
asset
getLocalUrlFromTypeAndIdGivenDefaultRepo
Attempting to get local url with nil asset type or asset id
/System/Library/AssetsV2/PreinstalledAssetsV2/InstallWithOs
/System/Library/AssetsV2/PreinstalledAssetsV2/RequiredByOs
Attempting to get local url with nil default repo for a non preinstalled asset
AssetData
MAQuerySuccessful
MAQueryXpcError
MAQueryCatalogNotDownloaded
MAQueryFailed
MAQueryDaemonExit
MAQueryNotEntitled
MAQueryCannotCreateMessage
MAQueryNilAssetType
MAQueryParamsEncodeFailure
MAQueryBeforeFirstUnlock
MAQueryCouldNotEncodeResults
MAQueryXpcLengthError
MAQueryUnknownResult
MAQueryTooManyResults
MAQueryHasAllowedDifferences
MAQueryResult%llu
MACatalogOnly
MAInstalledOnly
MAUnionOfCatalogInstalled
MAPreinstalledOnly
MACatalogButNotInstalledOnly
MAStrictlyCatalogOnly
MAStrictlyObsoleteOnly
MAQueryReturnTypes%llu
MAUnknown
MANotPresent
MAInstalled
MAInstalledNotInCatalog
MADownloading
MARequiredByOs
MAInstalledWithOs
MAAssetState%llu
MA_INVALID_MESSAGE
MA_QUERY_ASSET_TYPE
MA_DOWNLOAD_METADATA
MA_DOWNLOAD_ASSET
MA_NSURL_STATE_DUMP
MA_PURGE_ASSET
MA_CANCEL_DOWNLOAD
MA_GET_SANDBOX_EXTENSION
MA_REFRESH_ASSET_STATE
MA_SET_PALLAS_URL
MA_SET_PALLAS_AUDIENCE
MA_UPDATE_DOWNLOAD_PROGRESS
MA_DUMP_CODE_COVERAGE
MA_SERVER_URL_OVERRIDE
MA_REPAIR_STATE
MA_MIGRATE_ASSETS
MA_CLEAN_V1_ASSETS
MA_SPACE_CHECK
MA_QUERY_INSTALLED_IDS
MA_CONFIG_DOWNLOAD
MA_GET_PALLAS_AUDIENCE
MA_UPDATE_CLIENT_USAGE
MA_DUMP_CLIENT_USAGE
MA_GARBAGE_COLLECT
MA_PURGE_ALL
MA_OVERRIDE_GC
MA_PURGE_CATALOGS
MA_LOAD_ASSET_BY_ID
MA_CANCEL_CATALOG_DOWNLOAD
MAXpcCommand%llu
MAXpcErrorNone
MAXpcErrorParamMissing
MAXpcErrorLengthZero
MAXpcErrorLengthMissing
MAXpcErrorLengthMismatch
MAXpcErrorDataMismatch
MAXpcErrorEmptyData
MAXpcErrorConnectionTerminated
MAXpcError%llu
MAOperationSuccessful
MAOperationXpcError
MAOperationFailed
MAOperationNotEntitled
MAInvalidOperation
MAOperationUnknownResult
MAOperationResult%llu
MADownloadSuccessful
MADownloadXpcError
MADownloadConnectionInterupted
MADownloadStagingFailed
MADownloadMetaDataProcessFailed
MADownloadUnzipFailed
MADownloadMoveFailed
MADownloadInstallFailed
MADownloadDaemonExit
MADownloadAssetAlreadyInstalled
MAInvalidSZExtractor
MADownloadNotEntitled
MADownloadDaemonNotReady
MADownloadNoChange
MADownloadNotApplicableForRequireByOs
MADownloadNoExtractorFailure
MADownloadTransformFailure
MADownloadNoMatchFound
MADownloadNilAssetType
MADownloadNilAssetId
MADownloadStreamingZipNotSupported
MADownloadBadOptions
MADownloadAssetBadMetaData
MADownloadUnableToCreateMessage
MADownloadFailedNoStandardUrl
MADownloadFailedNoFallBackUrl
MADownloadFailedNoPallasUrl
MADownloadLostTask
MADownloadNotApplicableForInstalledWithOs
MADownloadNoValidSession
MADownloadResponseDeferred
MADownloadIncomplete
MACannotGetPathToStagingDir
MADownloadsNotAllowed
MADownloadUnknownResult
MADownloadAssetNoLongerInCatalog
MADownloadFailedNoFallbackAllowed
MADownloadLiveServerDisabledNoFallback
MADownloadResult%llu
MACancelSucceeded
MSCancelXpcError
MACancelConnectionInterupted
MACancelWasNotDownloading
MACancelFailed
MACancelNotEntitled
MACancelNotApplicableForRequireByOs
MACancelNotApplicableForInstalledWithOs
MACancelDownloadResult%llu
MAPurgeSucceeded
MAPurgeXpcError
MAPurgeConnectionInterrupted
MAPurgeAssetDidntExist
MAPurgeAssetCouldntPurge
MAPurgeFailed
MAPurgeNotEntitled
MAPurgeNotApplicableForRequireByOs
MAPurgeCouldNotCancelAllDownloads
MAPurgeCannotCreateMessage
MAPurgeEncodingFailure
MAPurgeFailedBeforeFirstUnlock
MAPurgePartiallyComplete
MAPurgeResult%llu
Purge attempt failed due to daemon jetsam/crash.
Purge failed as the asset was not present locally.
Purge failed as the attempt to delete the directory failed.
Purge failed due to the calling process not being entitled.
RequiredByOS assets are in the system partition and cannot be collected.
Purge failed as all inflight downloads could not be cancelled.
Purge failed as the device is before first unlock.
Purge failed due to error %llu
Query successful.
Query failed due to XPC error.
Query may be incomplete as there was no catalog.
Query failed.
Query failed due to mobileassetd exiting, the system may be under load.
Query failed due to the client not having a required entitlement.
Query failed due to being unable to create an XPC message.
Query failed due to the asset type being invalid.
Query failed due to not being able to encode the parameters provided by the client.
Query failed due to the device not yet providing access to user data, usually due to the device being locked.
Query failed due to not being able to encode the results to give to the client.
Query failed due an XPC failure confirming the length of the field.
Query failed unexpectedly.
Query failed due to having too many results.
Query found a matching item, but the asset found has some differences from the request which were allowable by the client.
Query failed due to Error %lld (%@).
Download successful.
Download request had XPC error.
Download request sent but XPC connection interrupted.
Download failed.
Download finished but could not be moved to staging location.
Download finished but the metadata in the download was corrupted.
Download unzip failed.
Download finished but could not be moved into repository.
Download finished but could not be installed.
Download request sent but mobileassetd exited.
Download not allowed as the asset already appears to be in the repository.
Download not allowed as the given extractor is invalid.
Download is not allowed as the requesting client is not entitled.
Download is not allowed as mobileassetd was starting up.
Download was not needed as the server indicated the file was unchanged.
Download is not needed for preinstalled asset (required by OS).
Download failed due to not having an extractor.
Download failed due to the live asset server providing invalid transforms.
Download from live asset server could not get an asset matching the requested one.
Download not possible for invalid asset type.
Download not possible for invalid asset identifier.
Download not possible as the asset doesn't support streaming zip.
Download not possible due to invalid options.
Download failed due to bad metadata on asset.
Download failed due to XPC message creation failure.
Download failed due to no XML server URL being configured.
Download failed due to no XML server URL being provided for fallback.
Download failed due to no live asset server URL being configured.
Download tracking was abandoned as the task was no longer found in NSURLSession.
Download is not needed for preinstalled asset (installed with OS).
Download is not possible as the task could not be created for the session.
Download request was sent and while processing a failure happened.
Download request had gotten a response but it was incomplete.
Download failed due to not being able to determine a staging directory.
Downloads not allowed at this time.
Download failure due to unknown result.
Download failed as the asset is no longer in the catalog. A requery is likely needed.
Download failed due to being out of space. Check for storage space before retrying download.
Download failed due to being unable to replace the existing asset.
Download failed due to the asset type being invalid and not being well-formed.
Download failed as the server said it was a bad request.
Download failed as the server said authentication failed.
Download failed as the server said it encountered an error.
Download failed as the server said the file was not found (or access was denied).
Download failed as the server said the file was not found.
Download failed as the server said it had an internal error.
Download failed as the downloaded asset was not well-formed.
Download failed due to a general networking error.
Download was cancelled.
Download failed due to a bad URL.
Download failed due to a bad server response.
Download failed due to the download taking longer than the time allowed.
Download failed due to not getting a response within the time allowed.
Download failed due to not being scheduled or the whole resource download being able to complete in the time allowed.
Download failed due to the server not responding during the time allowed for the stream watchdog.
Download failed due to a connection not being established for a request attempt in the time NSURLSession allows.
Download failed due to not being able to get a TCP connection in the time NSURLSession allows.
Download failed due to not being able to load from network.
Download failed due to an unsupported URL.
Download failed due to not being able to find the host.
Download failed due to not being able to connect to the host.
Download failed due to losing the network connection.
Download failed due to a DNS lookup failure.
Download failed due to too many HTTP redirects.
Download failed due to the resource being unavailable.
Download failed due to there being no Internet connection.
Downlaod failed due to a server redirect to a nonexistent location.
Download failed due to international roaming being off.
Downlaod failed due to there being an active call.
Downlaod failed due to Data not being allowed.
Download failed due to a secure connection not being established. A common cause is the device time not being set correctly.
Download failed due to client requesting Live Asset only, but the live asset server gave an error. No XML fallback was allowed.
Download failed due to client requesting Live Asset only, but the device was configured to disable Live Asset server. No XML fallback was allowed.
Download failed due to Error %lld (%@).
usableDownload
checkClockAndCerts
checkSpaceNeeded
requeryIsHelpful
checkServer
checkTimeoutConditions
checkNetwork
checkClient
checkFilesystemState
tryAgainLater
retryWithBackoff
generic
com.apple.MobileAssetError.Download
assetType
assetId
anyAttribute
assetIdAttributes
nonAssetIdAttributes
downloadContent
downloadUrl
downloadPolicy
pallasDynamicAssetId
none
some
unknown
_ContentVersion
_CompatibilityVersion
_MasteredVersion
Ramp
_DownloadSize
_Measurement
_MeasurementAlgorithmn
__BaseURL
__RelativePath
__CanUseLocalCacheServer
_CompressionAlgorithm
_IsZipStreamable
__AssetDefaultGarbageCollectionBehavior
%@%ld
(from newer)
(from newer, subset)
(from older)
%0lx/%0lx %@%@%@
attributesHash
assetIdHash
nonIdHash
contentHash
urlHash
policyHash
pallasDynamicAssetIdHash
%@:%@
%@:%@(+)
(%@=%@ %@=%@ %@=%@ %@=%@ %@=%@ %@=%@ %@=%@ %@=%@ %@=%@)
supportsSecureCoding
TB,R
T@"NSString",&,N,V_assetId
T@"NSString",&,N,V_assetType
AssetProperties
AssetAddedProperties
AssetState
xmlData
load rawData is null skipping
load data is null skipping
load allData is null skipping
load allData is not a dictionary
assetsToFrameWork
attributes is nil
loadAssetIdLength
loadAssetId
allowedDifferencesLength
allowedDifferences
Asset load failed due to XPC
com.apple.MobileAssetError.Query
Asset load failed due to an XPC error
nothing
Asset load result for %@: %ld (MAQuerySuccessful). Found %@.
Asset load result for %@: %ld (MAQueryHasAllowedDifferences). Found match %@ within allowed differences %@ (actual differences were %@)
Asset load result for %@: %ld (%@)
assetType: "%@"; assetId: %@ State: %ld
assetId: %@ State: %ld attributes: %@
The asset is installed at: %@
v24@?0q8@"NSError"16
_LengthOfDataRange
%02x
NIL on constructor call
_StartOfDataRange
Cannot download %@ %@ unless the download is user-initiated (non-discretionary) as the user has turned off background system file updates (check first if nonUserInitiatedDownloadsAllowed).
The cache server is: %d
Error on the download asset reply for %@, response: %ld (%@)
Got the download asset reply for %@, response: %ld (%@)
Error on the download asset reply for %@, response: %ld (%@) due to no xpc message
v16@?0@"NSObject<OS_xpc_object>"8
Error on the download meta data reply for %@, response: %ld (%@)
Got the download meta data reply for %@, response: %ld (%@)
Error on the download meta data reply for %@, response: %ld (%@) due to not having an xpc message
Will retry download meta data for %@, after %ld seconds
%@ (Catalog download for %@)
Error on the retry download meta data reply for %@, response: %ld (%@) due to not having an xpc message
Error on the retry download meta data reply for %@, response: %ld (%@)
Got the retry download meta data reply for %@, response: %ld (%@)
com.apple.MobileAssetError.Purge
Error on the purge asset reply for %@, response: %ld (%@) due to XPC_TYPE_ERROR
Got the purge asset reply for %@, response: %ld (%@)
Purge failure due to XPC
Result from purge sync: %ld (%@)
Purge sync check failure server side
Error on the cancel catalog asset reply
Got the cancel catalog reply for %@, response: %ld
the current state is: %ld
Error on the cancel download asset reply for %@, response: %ld (%@)
Got the cancel download asset reply for %@, response: %ld (%@)
Cancel failure due to XPC
Result from cancel sync: %ld (%@)
Cancel sync check failure server side
Error on the cancel download asset reply
Got the config download reply for %@, response: %ld (%@)
Config download failure due to XPC
Result from config download sync: %ld (%@)
Config download sync check failure server side
GCOverrideDays
overrideGarbageCollectionThreshold failure due to XPC
Result from overrideGarbageCollectionThreshold: %ld (%@)
overrideGarbageCollectionThreshold failure server side
%lld
Result from space check: %ld (%@)
Space check failure server side
Extension failure due to XPC. Error %ld (%@)
State refresh failure server side: %ld (%@)
StateResult
Could not determine state for %@ asset %@; leaving state the same %ld (%@).
Old state: %ld (%@) --> new state: %lld (%@)
attributes
T@"NSDictionary",R,N,V_attributes
T@"NSString",R,N,V_assetType
T@"NSString",R,N,V_assetId
state
Tq,R,V_state
com.apple.MobileAsset.retryXpcDelay
Skipping due to bad value in array
queryValue
queryKey
Got the query meta data reply for: %@, response: %ld
rawData is null skipping
data is null, skipping
allData is not a dictionary, skipping
metaToFrameWork
lastTimeChecked
postedDate
catalogInfoToFrameWork
isLiveServer
%@ due to XPC_TYPE_ERROR
Could not create message for queryInstalledAssetIds
queryInstalledAssetIds failure due to nil asset type
queryInstalledAssetIds failure due to XPC
queryInstalledAssetIds failure server side: %ld
QueryAssetIdsResponse
queryInstalledAssetIds rawData is null skipping
queryInstalledAssetIds data is null skipping
queryInstalledAssetIds allData is null skipping
queryInstalledAssetIds allData is not a dictionary skipping
QueryAssetIds
Discarding params as they could not be encoded: %@
Query failure due to XPC
query returnTypes: %ld (%@) result: %ld (%@) count: %ld (%@%@)
queryParams
T@"NSMutableArray",R,N,V_queryParams
TB,N,V_doNotBlockBeforeFirstUnlock
results
T@"NSArray",R,N,V_results
resultCode
Tq,R,N,V_resultCode
isDone
TB,R,N,V_isDone
assetIds
T@"NSSet",R,N,V_assetIds
returnTypes
Tq,R,N,V_returnTypes
lastFetchDate
T@"NSDate",R,N,V_lastFetchDate
T@"NSDate",R,N,V_postedDate
Asset type: %@
Asset attributes: %@
LocalURL
NotDownloaded
Downloaded
Paused
Stalled
Downloading
Verifying
Unarchiving
__DownloadState
-[ASAsset garbageCollectionBehavior]
Could not get local attributes: %@
-[ASAsset setGarbageCollectionBehavior:]
Could not send garbage collection behavior message: %@
__PausedOperation
no download state for asset in state %ld
-[ASAsset requiredDiskSpaceIsAvailableForDownloadOptions:requiredBytes:error:]
[%@:%d] %@
Insufficient free space
Failed to determine if there is enough free space
DownloadOptionAllowWiFi
DownloadOptionAllow2G
DownloadOptionAllow3G
DownloadOptionAllow4G
DownloadOptionAllowBatteryPower
DownloadOptionAllowRoaming
DownloadPriorityHigh
DownloadPriorityLow
DownloadOptionPriority
v32@?0@8@16^B24
Operation
OperationProgress
EstimatedTimeRemaining
PausedOperation
StallReason
-[ASAsset _downloadWithOptions:shouldFireCallback:]_block_invoke
encountered exception decoding stall reason: %@
v32@?0^{__MobileAsset={__CFRuntimeBase=QAQ}^{__CFString}^{__CFDictionary}^{__MobileAssetQuery}^{__MobileAssetQuery}C}8^{__CFDictionary=}16^{__CFError=}24
-[ASAsset pauseDownloadAndReturnError:]
Could not pause asset download: %@
-[ASAsset resumeDownloadAndReturnError:]
Could not resume asset download: %@
-[ASAsset cancelDownloadAndReturnError:]
Could not cancel asset download: %@
-[ASAsset purgeAndReturnError:]
Could not purge asset: %@
-[ASAsset _getLocalAttribute:]
Could not get attribute '%@': %@
T@"NSDictionary",&,N,V_downloadOptions
T@"NSDictionary",R,N
Tq,R,N
installDate
T@"NSDate",R,N
localURL
T@"NSURL",R,N
garbageCollectionBehavior
Tq,N
progressHandler
T@?,C,N,V_progressHandler
userInitiatedDownload
TB,N,V_userInitiatedDownload
-[ASAsset(ASAssetInternal) fullAttributes]
Could not get asset attributes: %@
T@"NSString",&,N
fullAttributes
_AutomaticUpdateDisabled
_EventRecordingServiceURL
StallError
WaitingToDownload
DownloadingAsset
DownloadPaused
VerifyingAsset
UnarchivingAsset
DownloadQueued
OperationCompleted
ASError
__InstallDate
__GarbageCollectionBehavior
Backgrounded
Queued
DownloadOptionPauseBeforeUnarchiving
AssetVersionString
UseStreamingZip
SecondaryIdentifier
DownloadPriorityNormal
DownloadPriorityBackground
Metadata
Assets
ReleaseDate
%K == %@
v32@?0@"NSString"8@16^B24
T@"NSString",C,N,V_assetType
sessionIdentifier
T@"NSString",C,N,V_sessionIdentifier
T@"NSArray",&,N,V_results
predicate
T@"NSPredicate",&,N,V_predicate
queriesLocalAssetInformationOnly
TB,N,V_queriesLocalAssetInformationOnly
networkTimeout
Td,N,V_networkTimeout
Connection invalid, connection already nil so ignoring
Connection invalid, checking connection
connectionIdentifier
connection cleared: %@
Creating client/daemon connection: %@
Could not ensure maConnection, xpc communication will fail
Retrying message
xpc error that can be ignored
The client got a connection request
termination imminent
MobileAsset XPC connection interrupted
Unknown Error
Client connection handler received unknown
TotalExpected
totalWritten
taskDescriptor
Skipping progress notification for empty task descriptor char
Skipping progress notification for empty task descriptor
Notified of progress while not having any registered progress handlers
Skipping progress notification for empty callBack array
Skipping progress notification as object could not be allocated
TimeEstimate
IsStalled
%@%@
.maxpcmanager.state
.maxpcmanager.progress
MobileAssetDownload
Could not allocate callback parameters
Could not add download: %d
MobileAssetPauseDownload
Could not pause asset download: %d
MobileAssetError
MobileAssetResumeDownload
Could not resume asset download: %d
MobileAssetPurge
Could not purge asset: %d
MobileAssetCancelDownload
Could not cancel download: %d
ASSetAssetServerURLForAssetType
Could not set server URL in daemon: %@ for url: %@
ASSetDefaultAssetServerURLForAssetType
Could not set default server URL in daemon: %@ for url: %@
ServerURL
NonUserInitiatedDownloadsAllowed
ASNonUserInitiatedDownloadsAllowed
Could not get daemon configuration: %@
Could not get daemon configuration
Cannot create data vault for an invalid asset type
ASEnsureDataVault
EnsureDataVaultForAssetType
Could not make directory into data vault for: %@, %@
LogLevel
ASSetLogLevel
Could not set log level: %@
_IPC_TYPE
Unable to convert dictionary to XPC object: %@
_MobileAssetSendDaemonConfigurationCommand
Dictionary
Daemon configuration reply:
XPC error: %s
_MobileAssetSendDownloadRemoteAssetMessage
Couldn't find asset in data store
Could not store asset in XPC dictionary
DownloadOptions
Couldn't store download options in xpc dict
request download, %@
Download listener handler: 
_MobileAssetSendDownloadRemoteAssetMessage_block_invoke
Could not get remote connection for XPC event %p
Daemon connection interrupted: %s
Callback message is not an xpc dictionary
Progress
Could not extract progress info from XPC dict
Could not extract error from XPC dictionary
Unknown IPC type (%llu) in callback message
Could not store download options in XPC dictionary
_MobileAssetSendAdjustDownloadOptionsMessage
Adjust download options, %@
Got XPC error %s
Could not adjust download options
_MobileAssetSendCancelDownloadMessage
Could not store asset in XPC dict
Request cancel download, %@
Cancel reply:
Got xpc error: %s
_MobileAssetSendPauseDownloadMessage
Request pause download, %@
Pause reply: 
_MobileAssetSendResumeDownloadMessage
Request resume download, %@
Resume reply: 
_MobileAssetSendPurgeMessage
Couldn't store asset in xpc dict
Purge reply:
Could not store asset type %@ in xpc dictionary
_MobileAssetSendGetInstalledAssetsCommand
Get installed assets reply:
Unable to copy asset information
ServerURLAssetType
ServerURLDefault
Sending predicate: %@
Predicate
Predicate encoding error: %@
Could not create archive for predicate '%@'
_MobileAssetSendCopyMatchingAssetsCommand
SessionIdentifier
Could not store session identifier %@ in xpc dictionary
Timeout
Local Cache Only
Unable to copy asset information from %@ for asset type %@
BlockUntilInstalled
ForceOperation
Migrate assets reply:
_MobileAssetSendMigrateAssetsCommand
Unable to trigger asset migration: %lld
Could not store asset in xpc message: %lld
_MobileAssetSendSetGarbageCollectionBehaviorComand
GarbageCollectionBehavior
Could not set garbage collection behavior: %lld
No value for key '%s' in reply
Could not convert XPC dictionary to NSDictionary
Unexpected non-dictionary '%@' value for key '%s'
AssetServerUrl
Nil base url for system app
Could not store asset in XPC message
_MobileAssetSendCopyAssetAttributesCommand
Attributes
Unable to convert requested attribute array '%@' to XPC object
Copy assets attributes reply:
Unable to copy asset attributes
Unable to create unarchive for attributes from message
Unable to unarchive attributes from message
Returned attributes '%@' were not a dictionary
Attempt to copy attributes returned success but no attributes
SandboxExtension
unexpected sandbox extension in simulator
Could not convert array '%@' to XPC object
_MobileAssetSendDaemonConfigurationQuery
DaemonConfigKeys
Could not store string '%@' in XPC dictionary
Daemon configuration query reply:
Got xpc error %s
Could not query daemon configuration: %lld
_ForceMetadataUpdate
Could not perform metadata update
__StartBackgroundedDownloads
Could not start backgrounded downloads
__RetryQueuedDownloads
Could not retry queued downloads
__DiscardDownloadQueueToken
Could not discard download queue token
ClientName
_createEmptyMessage
Could not store client name in xpc message
com.apple.mobileassetd
Synchronous IPC handler: 
_createDaemonConnection_block_invoke_2
Daemon connection invalid: %s
Unknown daemon connection error: %s
Unhandled event on daemon connection: %s
com.apple.MobileAsset.handlerqueue
com.apple.MobileAsset.asynchandler
_doSynchronousIPCAndRetry
Daemon connection interrupted! Retrying...
_storeAssetInXPCDict
Couldn't store asset type in XPC dict
Couldn't store asset properties in XPC dict
_doAsynchronousIPCAndRetry
retries = %d
_doAsynchronousIPCAndRetry_block_invoke
Daemon connection interrupted! Re-establishing...
NO REMOTE CONNECTION!
Unable to create unarchiver for assets from message
_unarchiveAssetsFromMessage
Unable to unarchive assets from message
Returned assets '%@' were not an array
Attempt to copy assets returned success but no assets
AssetXMLMetadata
Unable to create unarchiver
_unarchiveMetadataFromMessage
Unable to unarchive metadata from message
Returned metadata '%@' was not a dictionary
Attempt to copy metadata returned success but no metadata
Idle
MobileAssetQueryCreateArrayOfKnownAssets
No matching assets on disk
Could not get assets from repository
MobileAssetQueryRefreshKnownAssets
Could not construct assets for map entries: %d
MobileAssetQueryGetMatchingAsset
No such asset exists
Query is not specific enough
MobileAssetQuery
_MobileAssetAugmentWithRefreshedAsset
No matching asset in regular query
No specific matching asset in query: %d
MobileAssetQueryRefreshAssetsAgainstLocalCache
_MobileAssetQueryCopyMatchingMapEntries
Couldn't get matching map results
Couldn't get matching map entries
Couldn't allocate array
No matching assets found
_MobileAssetQueryBuildAssetsFromMapEntries
Could not allocate array for assets
Could not allocate MobileAssetRef
diffBits
diffMask
_MobileAssetCopyLocalAttributes
Could not get matching assets
No matching entries found
Multiple matching entries found
Only matching entry is NULL?
_MobileAssetCopyLocalValueForKey
Could not load local info
_MobileAssetCopyMatchingAssetsFromRepository
Could not get assets from repository: %@
Could not allocate assets array
Could not allocate entries array
Could not create asset
_MobileAssetAugmentWithLocalProperties
Couldn't get matching assets: %@
Couldn't get matching asset
_MobileAssetCreateAssetFromRepositoryEntry
SessionId
AdditionalServerParams
Invalid additionalServerParams; not a dictionary. Leaving as nil.
allowsCellularAccess
allowsExpensive
requiresPowerPluggedIn
prefersInfraWiFi
timeoutIntervalForResource
canUseLocalCacheServer
discretionary
LiveServerOnly
LiveServerOnlyIsOverridden
MADownloadOptions allowsCellular: %d resourceTimeout: %ld canUseCacheServer: %d discretionary: %d sessionId: %@ additionalServerParams:%@ allowsExpensiveAccess:%d requiresPowerPluggedIn: %d prefersInfraWiFi: %d liveServerOnly: %d
The download options are %@
TB,N,V_allowsCellularAccess
Tq,N,V_timeoutIntervalForResource
TB,N,V_discretionary
allowsExpensiveAccess
TB,N,V_allowsExpensiveAccess
TB,N,V_requiresPowerPluggedIn
TB,N,V_canUseLocalCacheServer
TB,N,V_prefersInfraWiFi
sessionId
T@"NSString",&,N,V_sessionId
additionalServerParams
T@"NSMutableDictionary",&,N,V_additionalServerParams
liveServerCatalogOnly
TB,N,V_liveServerCatalogOnly
liveServerCatalogOnlyIsOverridden
TB,N,V_liveServerCatalogOnlyIsOverridden
RequestedProductVersion
DelayPeriod
Supervised
AllowSameVersion
PrerequisiteBuildVersion
PrerequisiteProductVersion
PrerequisiteReleaseType
PrerequisiteReleaseTypeIsOverridden
DownloadAuthorizationHeader
%@  + MAMsuDownloadOptions reqProdVersion: %@ delayPeriod: %ld managedDevice: %d allowSameVersion: %d prereqBuild: %@ prereqVersion: %@ prereqReleaseType: %@
(default)
requestedProductVersion
T@"NSString",&,N,V_requestedProductVersion
delayPeriod
Tq,N,V_delayPeriod
supervised
TB,N,V_supervised
allowSameVersion
TB,N,V_allowSameVersion
prerequisiteBuildVersion
T@"NSString",&,N,V_prerequisiteBuildVersion
prerequisiteProductVersion
T@"NSString",&,N,V_prerequisiteProductVersion
prerequisiteReleaseType
T@"NSString",&,N,V_prerequisiteReleaseType
prerequisiteReleaseTypeIsOverridden
TB,N,V_prerequisiteReleaseTypeIsOverridden
downloadAuthorizationHeader
T@"NSString",&,N,V_downloadAuthorizationHeader
_MobileAssetMapEntryMatchesProperties
Could not allocate array for keys
The config is discretionary: %d
Notice
Error
Debug
Fault
totalExpected
Tq,N,V_totalExpected
Tq,N,V_totalWritten
isStalled
TB,N,V_isStalled
expectedTimeRemaining
Td,N,V_expectedTimeRemaining
createErrorFromMessage
createErrorFromMessage: data is nil 
createErrorFromMessage: errorInMessage is nil 
createErrorFromMessage: unarchiver cannot be created: %@
createErrorFromMessage: created object was not an error
createErrorFromMessage: Successfully created error: %@
XPC_TYPE_CONNECTION
XPC_TYPE_NULL
XPC_TYPE_BOOL
XPC_TYPE_INT64
XPC_TYPE_UINT64
XPC_TYPE_DOUBLE
XPC_TYPE_DATE
XPC_TYPE_DATA
XPC_TYPE_STRING
XPC_TYPE_UUID
XPC_TYPE_FD
XPC_TYPE_SHMEM
XPC_TYPE_ARRAY
XPC_TYPE_DICTIONARY
XPC_TYPE_ERROR
Unknown type
logEvent
%p %s %s %s %s
com.apple.MobileAsset.DictionaryServices.dictionaryOSX
com.apple.MobileAsset.DictionaryServices.dictionary2
com.apple.MobileAsset.DictionaryServices.availableDictionaries
com.apple.MobileAsset.Font3
com.apple.MobileAsset.Font4
com.apple.MobileAsset.Font5
com.apple.MobileAsset.Font6
com.apple.MobileAsset.TextInput.SpellChecker
com.apple.MobileAsset.TextInput.Dictionary
com.apple.MobileAsset.WebKitBlocklist
com.apple.MobileAsset.MacinTalkVoiceAssets
com.apple.MobileAsset.LinguisticData
com.apple.MobileAsset.VoiceServices.CustomVoice
com.apple.MobileAsset.VoiceServices.CombinedVocalizerVoices
com.apple.MobileAsset.VoiceServicesVocalizerVoice
com.apple.MobileAsset.VoiceServices.VoiceResources
com.apple.MobileAsset.Avatar
com.apple.MobileAsset.RawCamera.Camera
com.apple.MobileAsset.VoiceServices.GryphonVoice
_fireErrorCallback
Firing error callback with NULL error!
_MobileAssetVerifyDiskSpacePriv
Could not get required space from asset in memory
Could not get download size from asset repository
Got download size in repo
Could not get unarchived size from asset repository
Got unarchive size in repo
Could not get isZipStreamable from asset repository
Got isZipStreamable in repo
Could not get download and/or unarchived size anywhere
Could not convert CFNumber to integer
BAD ASSET XML: We have downloaded more bytes (%llu) than appear to exist in the asset (%llu)
BAD ASSET XML: We have unarchived more bytes (%llu) than appear to exist in the asset (%llu)
_MobileAssetVerifyDiskSpacePriv_block_invoke
Failed to check for free disk space: %@
Not enough space to download and unarchive asset: need %llu for download, %llu for extraction; %llu available
v28@?0C8Q12^{__CFError=}20
DownloadStalled
asset version: %@, download size: %@
_fireCallback
No callback parameters on which to fire
No callback to fire?
com.apple.MobileAsset.callback
connection
T@"NSObject<OS_xpc_object>",R,N,V_connection
connectionId
T@"NSString",R,N,V_connectionId
MobileAssetCreateForType
Could not allocate query
Could not allocate local query
MobileAsset
_MobileAssetReplaceProperties
Asset or new asset properties are NULL?
Default
Precious
NeverCollected
CollectImmediately
<MobileAssetAsset %p assetType="%@" assetProperties=%@>
Received a request to hash a value that is too large, possible malicious behavior - aborting
Received a request to hash a multibyte value that is too large, possible malicious behavior - aborting
Received a request to hash a value but could not get a C string. Possible malicious behavior - aborting
dictionary
%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
NULL
Failing to hash due to duplicate array entries
array
%{public}s: %{public}@
zPLR
zPLR
zPLR
zPLR
zPLR
MAProgressHandler
MAAbsoluteAssetId
NSSecureCoding
NSCoding
MAAsset
MAAssetQuery
ASAsset
ASAssetInternal
ASAssetQuery
MAXpcManager
MAAssetDiff
MADownloadOptions
MAMsuDownloadOptions
MADownloadConfig
MAProgressNotification
MAXpcConnection
stringWithUTF8String:
initWithServiceName:callbackQueue:
countByEnumeratingWithState:objects:count:
objectForKey:
UTF8String
sendSync:
sendAsync:clientHandler:taskDescriptor:
queryParams
archivedDataWithRootObject:requiringSecureCoding:error:
bytes
length
returnTypes
doNotBlockBeforeFirstUnlock
absoluteString
stringWithFormat:
initRequiringSecureCoding:
encodeObject:forKey:
encodedData
valueWithBytes:objCType:
setValue:forKey:
init
addCallBack:
copy
addObject:
dealloc
initWithCallBack:
notificationInterval
setNotificationInterval:
callBackArray
_notificationInterval
_callBackArray
arrayWithObjects:count:
initWithArray:
dataWithBytes:length:
initForReadingFromData:error:
decodeObjectOfClasses:forKey:
finishDecoding
integerValue
setObject:forKey:
longLongValue
longValue
initWithLong:
pathExtension
isEqualToString:
numberWithInt:
rangeOfString:
substringWithRange:
intValue
stringWithString:
replaceOccurrencesOfString:withString:options:range:
stringByAppendingPathComponent:
URLWithString:
URLByAppendingPathComponent:
string
appendString:
containsObject:
errorWithDomain:code:userInfo:
initWithFormat:arguments:
stringByReplacingOccurrencesOfString:withString:
setObject:forKeyedSubscript:
hasPrefix:
dictionaryWithCapacity:
keyEnumerator
nextObject
initWithCapacity:
initWithString:
initWithAssetId:forAssetType:attributes:
decodeObjectOfClass:forKey:
assetId
assetType
allowEverythingDifferent
isEqual:
allAttributesHash
assetIdHash
nonIdHash
contentHash
urlHash
policyHash
pallasDynamicAssetIdHash
initDifferentAssetType:assetId:attributes:assetIdAttributes:dynamicAssetId:nonIdAttributes:content:url:policy:
absoluteAssetId
diffFrom:
hasOnlyAssetTypeAndId
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithAssetId:forAssetType:
diffFromAsset:
diffFromAssetId:assetType:attributes:
summary
description
setAssetId:
setAssetType:
_allAttributesHash
_assetIdHash
_nonAssetIdHash
_downloadContentHash
_downloadUrlHash
_downloadPolicyHash
_pallasAssetIdHash
_assetId
_assetType
dataWithBytesNoCopy:length:freeWhenDone:
decodePropertyListForKey:
initWithAttributes:
loadSync:allowingDifferences:error:
getLoadResultFromMessage:
hash
attachProgressHandler:assetId:callBack:
path
getLocalFilePath
fileURLWithPath:isDirectory:
getLocalFileUrl
getLocalUrl
attributes
startDownloadWithExtractor:options:completion:
startDownloadWithExtractor:options:completionWithError:
hashToString:
invokeClientDownloadCompletion:completionBlockWithError:
commonAssetDownload:options:then:
appendFormat:
unsignedLongLongValue
numberWithLongLong:
dictionaryWithObjects:forKeys:count:
initWithOptions:
startDownload:then:
startDownload:completionWithError:
createExtractor
invokeClientDownloadCompletionAlreadyOnQueue:completionBlockWithError:
assetProperty:
discretionary
nonUserInitiatedDownloadsAllowed
timeoutIntervalForResource
calculateTimeout
setTimeoutIntervalForResource:
boolValue
setCanUseLocalCacheServer:
canUseLocalCacheServer
startCatalogDownload:options:then:
startCatalogDownload:options:completionWithError:
purgeWithError:
loadSync:error:
startCatalogDownload:then:
cancelCatalogDownload:then:
wasLocal
wasPreinstalled
wasPurgeable
wasInCatalog
wasDownloadable
assetServerUrl
attachProgressCallBack:
logAsset
startDownloadWithExtractor:completion:
startDownload:
purge:
purgeSync
cancelDownload:
cancelDownloadSync
configDownload:completion:
configDownloadSync:
overrideGarbageCollectionThreshold:
spaceCheck:
refreshState
state
_attributes
_state
null
addKeyValueArray:with:
queryMetaDataWithError:
getResultsFromMessage:
currentCalendar
date
components:fromDate:toDate:options:
anyObject
count
initWithType:
augmentResultsWithState:
returnTypes:
addKeyValueNull:
addKeyValuePair:with:
queryMetaData:
queryInstalledAssetIds
queryMetaDataSync
isCatalogFetchedWithinThePastFewDays:
isCatalogFetchedFromLiveServer
isDone
resultCode
postedDate
setDoNotBlockBeforeFirstUnlock:
results
assetIds
lastFetchDate
_isPallasResult
_isDone
_doNotBlockBeforeFirstUnlock
_resultCode
_postedDate
_queryParams
_results
_assetIds
_returnTypes
_lastFetchDate
identifier
_getLocalAttribute:
allKeys
assetStateForStateString:
mobileAsset
requiredDiskSpaceIsAvailableForDownloadOptions:requiredBytes:error:
setDownloadOptions:
enumerateKeysAndObjectsUsingBlock:
userInitiatedDownload
dictionary
progressHandler
_downloadWithOptions:shouldFireCallback:
pauseDownloadAndReturnError:
resumeDownloadAndReturnError:
cancelDownloadAndReturnError:
purgeAndReturnError:
systemAppServerUrl
localURL
garbageCollectionBehavior
setGarbageCollectionBehavior:
installDate
requiredDiskSpaceIsAvailable:error:
adjustDownloadOptions:completion:
beginDownloadWithOptions:
pauseDownload:
resumeDownload:
setProgressHandler:
downloadOptions
setUserInitiatedDownload:
_downloadOptions
_clientName
_identifier
_progressHandler
_cfAsset
_userInitiatedDownload
initWithAssetType:attributes:
clientName
setClientName:
fullAttributes
isPresentOnDisk
array
predicateWithFormat:
andPredicateWithSubpredicates:
initWithAssetType:sessionIdentifier:
setResults:
runQueryForInfoReturnError:
runQueryAndReturnError:
queryPredicateForProperties:
initWithAssetType:
startQuery:
stopQuery
predicate
setPredicate:
queriesLocalAssetInformationOnly
setQueriesLocalAssetInformationOnly:
networkTimeout
setNetworkTimeout:
sessionIdentifier
setSessionIdentifier:
_queriesLocalAssetInformationOnly
_predicate
_networkTimeout
_sessionIdentifier
notValid
connectionId
initWithServiceName:
setClientConnectionHandler
connection
ensureConnection
clearConnection:
removeObjectForKey:
removeAllObjects
setTotalWritten:
setTotalExpected:
setExpectedTimeRemaining:
setIsStalled:
numberWithBool:
dictionaryWithObject:forKey:
numberWithUnsignedInt:
filteredArrayUsingPredicate:
numberWithUnsignedInteger:
finishEncoding
unsignedIntegerValue
initFromDiff:
category
requireSameAssetTypeAndAssetId
requireSameAssetTypeAndDownloadContent
requireSameAssetTypeAndAllAttributes
initFromInverseOfCategories:
isAnythingDifferent
isSameAssetType
isSameForAllAttributes
isSameAssetId
isSameForNonAssetIdAttributes
isSameDownloadContent
isSameDownloadUrl
isSameDownloadPolicy
hasOnlyAllowedDifferences:
_diffRaw
_diff
_mask
_description
_assessment
fileSystemRepresentation
defaultManager
fileExistsAtPath:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
setAttribute:forKey:onAsset:ofAssetType:error:
code
directoryURLForAssetsOfAssetType:
writeAssetIntoInstalledAssetMetadata:assetType:error:
enumerateInstalledAssetsUsingBlock:
enumerateInstalledAssetsOfAssetType:usingBlock:
setSessionId:
setAdditionalServerParams:
numberWithLong:
allowsCellularAccess
sessionId
additionalServerParams
allowsExpensiveAccess
requiresPowerPluggedIn
prefersInfraWiFi
setLiveServerCatalogOnly:
logOptions
setAllowsCellularAccess:
setDiscretionary:
setAllowsExpensiveAccess:
setRequiresPowerPluggedIn:
setPrefersInfraWiFi:
liveServerCatalogOnly
liveServerCatalogOnlyIsOverridden
setLiveServerCatalogOnlyIsOverridden:
_allowsCellularAccess
_canUseLocalCacheServer
_discretionary
_allowsExpensiveAccess
_requiresPowerPluggedIn
_prefersInfraWiFi
_liveServerCatalogOnly
_liveServerCatalogOnlyIsOverridden
_timeoutIntervalForResource
_additionalServerParams
_sessionId
setRequestedProductVersion:
setPrerequisiteBuildVersion:
setPrerequisiteProductVersion:
setPrerequisiteReleaseType:
setDownloadAuthorizationHeader:
downloadAuthorizationHeader
requestedProductVersion
delayPeriod
supervised
allowSameVersion
prerequisiteBuildVersion
prerequisiteProductVersion
setDelayPeriod:
setSupervised:
setAllowSameVersion:
prerequisiteReleaseType
prerequisiteReleaseTypeIsOverridden
setPrerequisiteReleaseTypeIsOverridden:
_supervised
_allowSameVersion
_prerequisiteReleaseTypeIsOverridden
_requestedProductVersion
_delayPeriod
_prerequisiteBuildVersion
_prerequisiteProductVersion
_prerequisiteReleaseType
_downloadAuthorizationHeader
logConfig
totalExpected
totalWritten
isStalled
expectedTimeRemaining
_isStalled
_totalExpected
_totalWritten
_expectedTimeRemaining
initWithDomain:code:userInfo:
removeItemAtURL:error:
userInfo
UUID
UUIDString
_connection
_connectionId
drain
@24@0:8@?16
v24@0:8@?16
v16@0:8
Q16@0:8
v24@0:8Q16
@16@0:8
@"NSMutableArray"
B16@0:8
v24@0:8@16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16@24
@40@0:8@16@24@32
B24@0:8@16
@"NSString"
@32@0:8@16^@24
@40@0:8@16@24^@32
v32@0:8@16@?24
v40@0:8@16@24@?32
v32@0:8@?16@?24
v40@0:8@?16@24@?32
q16@0:8
v32@0:8q16@?24
q24@0:8@16
B24@0:8Q16
B24@0:8^q16
@"NSDictionary"
v20@0:8B16
v24@0:8q16
q32@0:8@16@24
B20@0:8i16
@"NSDate"
@"NSArray"
@"NSSet"
B32@0:8^q16^@24
B40@0:8@16^q24^@32
v28@0:8@16B24
B24@0:8^@16
^{__MobileAsset={__CFRuntimeBase=QAQ}^{__CFString}^{__CFDictionary}^{__MobileAssetQuery}^{__MobileAssetQuery}C}16@0:8
@?16@0:8
^{__MobileAsset={__CFRuntimeBase=QAQ}^{__CFString}^{__CFDictionary}^{__MobileAssetQuery}^{__MobileAssetQuery}C}
@24@0:8^@16
d16@0:8
v24@0:8d16
@"NSPredicate"
v40@0:8@16@?24@32
@52@0:8B16B20B24B28B32B36B40B44B48
@24@0:8Q16
@"NSMutableDictionary"
@"NSObject<OS_xpc_object>"
