CSJarvisTriggerModeMonitor
CSUtteranceMetadataManager
CSAESKeyManager
CoreSpeechXPCProtocol
ServiceDelegate
NSXPCListenerDelegate
NSObject
CoreSpeechXPC
ResourcePathHash
CSEventMonitor
CSAsset
CSAssetController
CSEventMonitorDelegate
Utils
CSPreferences
CSVoiceTriggerRTModel
NSSecureCoding
NSCoding
LanguageCode
CSLanguageCodeUpdateMonitor
RTModel
NSXPC
CSUtils
CSFirstUnlockMonitor
CSSpeechEndpointAssetMetaUpdateMonitor
CSConfig
CSVoiceTriggerAssetMetaUpdateMonitor
CSVoiceProfileContext
sharedInstance
init
_startMonitoringWithQueue:
_stopMonitoring
setTriggerMode:
getTriggerMode
_getBaseMetaDictionaryForUtterancePath:
dictionaryWithDictionary:
setObject:forKeyedSubscript:
numberWithUnsignedInteger:
timeStampWithSaltGrain
numberWithBool:
_writeMetaDict:forUtterancePath:
deviceProductType
deviceProductVersion
dictionaryWithObjects:forKeys:count:
dataWithJSONObject:options:error:
localizedDescription
stringByReplacingOccurrencesOfString:withString:
writeToFile:atomically:
URLByAppendingPathComponent:
_saveMetaVersionFileAtPath:
defaultManager
arrayWithObjects:count:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
countByEnumeratingWithState:objects:count:
getResourceValue:forKey:error:
boolValue
_upgradeLocaleDirectoryIfNecessary:
writeToURL:atomically:
lastPathComponent
spIdSATAudioDirForLocale:spidType:
fileURLWithPath:
_audioDirectoryNeedsUpgrade:
absoluteString
isEqualToString:
path
pathExtension
fileExistsAtPath:
_upgradeUtteranceMeta:
dataWithContentsOfURL:
JSONObjectWithData:options:error:
objectForKeyedSubscript:
unsignedIntegerValue
dictionary
dataWithContentsOfFile:
URLByDeletingPathExtension
URLByAppendingPathExtension:
stringByDeletingPathExtension
stringByAppendingPathExtension:
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
dateFromString:
saveUtteranceMetadataForUtterance:enrollmentType:isHandheldEnrollment:triggerSource:audioInput:otherBiometricResult:containsPayload:
saveMetaVersionFileAtSATAudioDirectory:
upgradeMetaFilesIfNecessaaryAtSATRoot:
isUtteranceImplicitlyTrained:
getUtteranceEnrollmentType:
recordedTimeStampOfFile:
getVoiceTriggerProfilesAESKey
generateIfNecessaryVoiceTriggerProfilesAESKey
generateIfNecessaryAESKeyWithKeySizeInBits:applicationTag:keyLabel:shouldGenerateIfNecessary:
generateAESKeyWithKeySizeInBits:
storeAESKeyInKeychain:applicationTag:keyLabel:
getAESKeyFromKeychainWithApplicationTag:keyLabel:
deleteAESKeyWithApplicationTag:keyLabel:
getKeychainAttributesForAESKeyWithApplicationTag:keyLabel:
installedVoiceTriggerAssetForLanguageCode:completion:
fetchRemoteVoiceTriggerAssetForLanguageCode:completion:
voiceTriggerRTModelForVersion:minorVersion:locale:downloadedModels:preinstalledModels:completion:
voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:
interfaceWithProtocol:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
xpcConnection:hasEntitlement:
invalidate
setExportedObject:
resume
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
listener:shouldAcceptNewConnection:
serviceListener
setDelegate:
errorWithDomain:code:userInfo:
stringByAppendingPathComponent:
array
assetForAssetType:resourcePath:configVersion:
hearstRTModelWithMajorVersion:minorVersion:locale:
addObject:
count
modelHash
objectAtIndex:
sharedPreferences
setHearstFirstPassModelVersion:
setHearstSecondPassModelVersion:
getSiriLanguageWithFallback:
fakeHearstModelPath
_handleFakeHearstModelRequest:majorVersion:minorVersion:downloadedModels:preinstalledModels:completion:
sharedController
hearstRTModelLocaleMap
getAccessoryFallbackLocalTable
selectFallbackModelForLocale:downloadedModels:preinstalledModels:rtLocaleMap:
installedAssetOfType:language:completion:
getAccessoryFallbackFamilyLocal:fromLocaleMap:
modelLocale
regularExpressionWithPattern:options:error:
length
firstMatchInString:options:range:
numberOfRanges
rangeAtIndex:
substringWithRange:
assetHashInResourcePath:
weakObjectsHashTable
dealloc
removeObject:
enumerateObservers:
CSEventMonitorDidReceiveEvent:
addObserver:
removeObserver:
enumerateObserversInQueue:
notifyObserver:
.cxx_destruct
_observers
_queue
hybridEndpointerAssetFilename
initWithResourcePath:configFile:configVersion:
fallBackAssetResourcePath
_decodeJson:
getNumberForKey:category:default:
resourcePath
stringWithFormat:
defaultFallBackAssetForSmartSiriVolume
defaultFallBackAssetForHearst
getBoolForKey:category:default:
getStringForKey:category:default:
containsKey:category:
containsCategory:
hashFromResourcePath
isEqualAsset:
configVersion
_decodedInfo
_path
_resourcePath
_configVersion
getVoiceTriggerAssetTypeString
getEndpointAssetTypeString
getLanguageDetectorAssetTypeString
_cleanUpMobileAssetV1Directory
_isReadyToUse
installedAssetOfType:withLanguage:
_fetchRemoteAssetOfType:withLanguage:completion:
installedAssetOfType:withLanguage:completion:
_installedAssetOfType:withLanguage:
getCSAssetOfType:
_installedAssetOfType:withLanguage:completion:
_assetQueryForAssetType:
queryMetaDataSync
results
filteredAssetsForAssets:assetType:language:
queryParams
_findLatestInstalledAsset:
_installedAssetWithoutMetaDataForType:withLanguage:
_installedAssetWithoutMetaDataForType:withLanguage:completion:
queryMetaData:
returnTypes:
state
isLatestCompareTo:
attributes
initWithType:
addKeyValuePairForQuery:assetType:
isFirstUnlocked
_runAssetQuery:completion:
_downloadAssetCatalogForAssetType:complete:
_updateFromRemoteToLocalAssets:forAssetType:completion:
_defaultDownloadOptions
startCatalogDownload:options:then:
isCSAssetInstalled
isDownloading
cancelDownloadSync
canBePurged
purgeSync
CSAssetController:didDownloadNewAssetForType:
_downloadAsset:withComplete:
setAllowsCellularAccess:
setCanUseLocalCacheServer:
assetServerUrl
_startDownloadingAsset:progress:completion:
expectedTimeRemaining
totalWritten
totalExpected
attachProgressCallBack:
spaceCheck:
startDownload:then:
assetOfType:language:
assetOfType:language:completion:
installedAssetOfType:language:
fetchRemoteMetaOfType:
addObserver:forAssetType:
removeObserver:forAssetType:
_csAssetsDictionary
_assetsMigrationQueue
valueForKey:
containsObject:
supportPremiumAssets
objectForKey:
getVoiceTriggerAssetCurrentCompatibilityVersion
getEndpointAssetCurrentCompatibilityVersion
getLanguageDetectorCurrentCompatibilityVersion
addKeyValuePair:with:
filteredAssetsForFetchRemoteMetaDataForAssets:assetType:
_storeModeEnabled
numberWithInt:
setFileLoggingLevel:
fileLoggingLevel
intValue
baseDir
assistantLogDirectory
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
numberWithInteger:
integerValue
fileExistsAtPath:isDirectory:
date
stringFromDate:
floatValue
interstitialRelativeDirForLevel:
enumerateObjectsUsingBlock:
voiceTriggerEnabled
phraseSpotterEnabled
isAttentiveSiriEnabled
isAttentiveSiriAudioLoggingEnabled
voiceTriggerInCoreSpeech
corespeechDaemonEnabled
twoShotNotificationEnabled
setFileLoggingIsEnabled:
fileLoggingIsEnabled
voiceTriggerAudioLogDirectory
assistantAudioFileLogDirectory
secondPassAudioLoggingEnabled
jarvisAudioLoggingEnabled
setJarvisTriggerMode:
getJarvisTriggerMode
startOfSpeechAudioLoggingEnabled
getStartOfSpeechAudioLogFilePath
_isDirectory:
remoteVoiceTriggerDelayTime
remoteVoiceTriggerEndpointTimeoutWithDefault:
interstitialAbsoluteDirForLevel:
myriadFileLoggingEnabled
enableAudioInjection:
audioInjectionEnabled
setAudioInjectionFilePath:
audioInjectionFilePath
speakerIdEnabled
speakerIdiTunesAccountSigninEnabled
speakerIdScoreReportingType
smartSiriVolumeSoftVolumeEnabled
audioSessionActivationDelay
maxNumLoggingFiles
useSiriActivationSPIForHomePod
useSiriActivationSPIForwatchOS
iOSBargeInPowerSavingEnabled
iOSBargeInSupportEnabled
shouldOverwriteRemoteVADScore
overwritingRemoteVADScore
companionSyncVoiceTriggerUtterancesEnabled
containsValueForKey:
decodeObjectForKey:
encodeObject:forKey:
stringByAppendingString:
string
base64EncodedStringWithOptions:
substringToIndex:
appendFormat:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithData:hash:locale:digest:signature:certificate:
initWithHash:locale:
initWithData:hash:locale:
builtInRTModelDictionary
modelData
digest
signature
certificate
_modelData
_modelLocale
_modelHash
_digest
_signature
_certificate
_notifyObserver:withLanguageCode:
CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:
_didReceiveLanguageCodeUpdate
_notifyToken
unsignedIntValue
_sha1:
_sha256:
bytes
stringWithCapacity:
dataWithLength:
mutableBytes
RTModelWithFallbackLanguage:
latestHearstRTModelForLocale:
valueForEntitlement:
supportRaiseToSpeak
supportHearstVoiceTrigger
shouldRunVTOnCS
inputRecordingNumberOfChannels
supportTTS
supportJarvisVoiceTrigger
supportBluetoothDeviceVoiceTrigger
UTF8String
rootQueueWithFixedPriority:
csAudioProcessingQueuePriority
dateWithTimeIntervalSinceNow:
supportContinuousVoiceTrigger
supportKeywordDetector
supportOpportunisticZLL
supportSelfTriggerSuppression
supportCSTwoShotDecision
supportHybridEndpointer
supportSmartVolume
supportImplicitTraining
supportSAT
supportPremiumModel
supportPhatic
shouldDelayPhaticForMyriadDecision
supportSessionActivateDelay
supportLanguageDetector
supportTdsrOnCS
shouldDownloadVTAssetsOnDaemon
hasRemoteCoreSpeech
shouldDeinterleaveAudioOnCS
supportCircularBuffer
supportBeepCanceller
supportZeroFilter
getFixedPrioritySerialQueueWithLabel:fixedPriority:
getFixedHighPrioritySerialQueueWithLabel:
systemUpTime
deviceUserAssignedName
deviceBuildVersion
_checkFirstUnlocked
_notifyObserver:withUnlocked:
CSFirstUnlockMonitor:didReceiveFirstUnlock:
_didReceiveFirstUnlockInQueue:
_didReceiveFirstUnlock:
_firstUnlocked
_didReceiveNewSpeechEndpointAssetMetaData
_notifyObserver:
CSSpeechEndpointAssetMetaUpdateMonitor:didReceiveNewSpeechEndpointAssetMetaData:
getLocalUrl
_compatibilityVersion
stringValue
appendString:
_version
_footprint
isPremium
inputRecordingSampleByteDepth
inputRecordingFramesPerPacket
supportIOSBargeIn
inputRecordingSampleRate
inputRecordingSampleRateNarrowBand
inputRecordingBytesPerFrame
inputRecordingBytesPerPacket
inputRecordingDurationInSecs
inputRecordingSampleBitDepth
EncryptionAudioSampleByteDepth
inputRecordingEncoderAudioQuality
inputRecordingSampleRateConverterAlgorithm
inputRecordingBufferDuration
audioConverterBitrate
channelForOutputReference
channelForProcessedInput
zeroFilterWindowSizeInMs
zeroFilterApproxAbsSpeechThreshold
daysBeforeRemovingLogFiles
remoteVADDuration
serverLoggingChannelBitset
_asssetMetaUpdatedKey
_didReceiveNewVoiceTriggerAssetMetaData
CSVoiceTriggerAssetMetaUpdateMonitor:didReceiveNewVoiceTriggerAssetMetaData:
initWithSharedSiriId:languageCode:productCategory:version:sharedHomeId:userName:
profileId
setProfileId:
languageCode
setLanguageCode:
productCategory
setProductCategory:
version
setVersion:
onboardType
setOnboardType:
homeId
setHomeId:
userName
setUserName:
baseVersion
setBaseVersion:
implicitVersion
setImplicitVersion:
siriDebugProfileId
setSiriDebugProfileId:
_profileId
_languageCode
_productCategory
_onboardType
_homeId
_userName
_baseVersion
_implicitVersion
_siriDebugProfileId
@16@0:8
v24@0:8@16
v16@0:8
v24@0:8q16
q16@0:8
v64@0:8@16@24B32@36@44Q52B60
@24@0:8@16
v32@0:8@16@24
B24@0:8@16
@44@0:8Q16@24@32B40
@24@0:8Q16
B40@0:8@16@24@32
@32@0:8@16@24
B32@0:8@16@24
v32@0:8@16@?24
v64@0:8Q16Q24@32@40@48@?56
v40@0:8@16@24@?32
v32@0:8@"NSString"16@?<v@?@"NSString"@"NSString"@"NSError">24
v64@0:8Q16Q24@"NSString"32@"NSArray"40@"NSArray"48@?<v@?@"CSVoiceTriggerRTModel"@"CSVoiceTriggerRTModel"@"NSError">56
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSString"@"NSError">32
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v64@0:8@16Q24Q32@40@48@?56
@48@0:8@16@24@32@40
v24@0:8@?16
@"NSHashTable"
@"NSObject<OS_dispatch_queue>"
@40@0:8Q16@24@32
@40@0:8@16@24@32
B36@0:8@16@24B32
@"NSDictionary"
@"NSString"
@32@0:8Q16@24
v40@0:8Q16@24@?32
v24@0:8Q16
v32@0:8Q16@?24
v40@0:8@16Q24@?32
v40@0:8@16@?24@?32
v32@0:8@16Q24
@"NSMutableDictionary"
@32@0:8@16Q24
@40@0:8@16Q24@32
v32@0:8^@16Q24
v20@0:8B16
d16@0:8
d24@0:8d16
@24@0:8q16
B20@0:8B16
f16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@64@0:8@16@24@32@40@48@56
@"NSData"
@40@0:8Q16Q24@32
@20@0:8i16
@28@0:8@16i24
v28@0:8@16B24
I16@0:8
S16@0:8
i16@0:8
r*16@0:8
@"NSNumber"
meta_version.json
meta_version
trainingType
explicit
implicit
handheld
near-field
far-field
utteranceWav
productVersion
productType
triggerSource
audioInputSource
otherSourceProfileMatch
containsPayload
grainedDate
+[CSUtteranceMetadataManager saveUtteranceMetadataForUtterance:enrollmentType:isHandheldEnrollment:triggerSource:audioInput:otherBiometricResult:containsPayload:]
+[CSUtteranceMetadataManager _getBaseMetaDictionaryForUtterancePath:]
+[CSUtteranceMetadataManager _writeMetaDict:forUtterancePath:]
.wav
.json
+[CSUtteranceMetadataManager upgradeMetaFilesIfNecessaaryAtSATRoot:]
+[CSUtteranceMetadataManager _saveMetaVersionFileAtPath:]
+[CSUtteranceMetadataManager _upgradeLocaleDirectoryIfNecessary:]
enrollment_completed
json
+[CSUtteranceMetadataManager _audioDirectoryNeedsUpgrade:]
+[CSUtteranceMetadataManager _upgradeUtteranceMeta:]
+[CSUtteranceMetadataManager isUtteranceImplicitlyTrained:]
+[CSUtteranceMetadataManager getUtteranceEnrollmentType:]
+[CSUtteranceMetadataManager recordedTimeStampOfFile:]
en_US_POSIX
yyyyMMdd
corespeech.xpc
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
-[CoreSpeechXPC installedVoiceTriggerAssetForLanguageCode:completion:]
-[CoreSpeechXPC fetchRemoteVoiceTriggerAssetForLanguageCode:completion:]
-[CoreSpeechXPC _handleFakeHearstModelRequest:majorVersion:minorVersion:downloadedModels:preinstalledModels:completion:]
fakeModel.json
en-US
fakeModel
-[CoreSpeechXPC voiceTriggerRTModelForVersion:minorVersion:locale:downloadedModels:preinstalledModels:completion:]
v40@?0@"CSVoiceTriggerRTModel"8@"CSVoiceTriggerRTModel"16@"NSString"24@"NSError"32
-[CoreSpeechXPC voiceTriggerRTModelForVersion:minorVersion:locale:downloadedModels:preinstalledModels:completion:]_block_invoke
v24@?0@"CSAsset"8@"NSError"16
-[CoreSpeechXPC voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:]_block_invoke
v24@?0@"NSString"8@"NSError"16
-[CoreSpeechXPC voiceTriggerJarvisLanguageList:jarvisSelectedLanguage:completion:]
v8@?0
de-AT
de-DE
en-IE
en-IN
en-NZ
it-IT
ja-JP
zh-CN
zh-TW
nb-NO
nl-BE
nl-NL
sv-SE
tr-TR
fi-FI
he-IL
es-ES
es-US
es-CL
es-MX
fr-FR
fr-BE
fr-CA
fr-CH
ko-KR
zh-HK
yue-CN
da-DK
ms-MY
pt-BR
ru-RU
th-TH
ar-AE
ar-SA
nohash
((?:[a-z]|[0-9])*)\.asset
+[CSUtils(ResourcePathHash) assetHashInResourcePath:]
Serial CSEventMonitor queue
corespeech.json
assets.json
hybridendpointer.json
hybridendpointer_marsh.json
/System/Library/PrivateFrameworks/CoreSpeech.framework
+[CSAsset fallBackAssetResourcePath]
defaultFallbackHearst
-[CSAsset initWithResourcePath:configFile:configVersion:]
-[CSAsset _decodeJson:]
-[CSAsset getNumberForKey:category:default:]
-[CSAsset getStringForKey:category:default:]
configVersion:%@ resourcePath:%@ path:%@
path
T@"NSString",R,N,V_path
resourcePath
T@"NSString",R,N,V_resourcePath
dictionary
T@"NSDictionary",R,N
hashFromResourcePath
T@"NSString",R,N
configVersion
T@"NSString",R,N,V_configVersion
com.apple.MobileAsset.VoiceTriggerAssets
com.apple.MobileAsset.VoiceTriggerAssetsWatch
com.apple.MobileAsset.VoiceTriggerAssetsMarsh
com.apple.MobileAsset.VoiceTriggerAssetsMac
com.apple.MobileAsset.SpeechEndpointAssets
com.apple.MobileAsset.LanguageDetectorAssets
-[CSAssetController init]
Serial CSAssetController queue
V1 Assets Clean-up queue
-[CSAssetController _cleanUpMobileAssetV1Directory]
-[CSAssetController assetOfType:language:]
-[CSAssetController assetOfType:language:completion:]
-[CSAssetController installedAssetOfType:language:]
-[CSAssetController installedAssetOfType:language:completion:]
v24@?0@"MAAsset"8@"NSError"16
-[CSAssetController _installedAssetOfType:withLanguage:]
-[CSAssetController _installedAssetOfType:withLanguage:completion:]_block_invoke
v16@?0q8
-[CSAssetController _installedAssetWithoutMetaDataForType:withLanguage:completion:]_block_invoke
-[CSAssetController _installedAssetWithoutMetaDataForType:withLanguage:]
-[CSAssetController _findLatestInstalledAsset:]
-[CSAssetController _assetQueryForAssetType:]
-[CSAssetController _runAssetQuery:completion:]
-[CSAssetController _runAssetQuery:completion:]_block_invoke
-[CSAssetController fetchRemoteMetaOfType:]
v16@?0@"NSError"8
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]_block_invoke_2
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]_block_invoke
-[CSAssetController _downloadAssetCatalogForAssetType:complete:]_block_invoke
-[CSAssetController _updateFromRemoteToLocalAssets:forAssetType:completion:]
-[CSAssetController _downloadAsset:withComplete:]
v16@?0d8
-[CSAssetController _downloadAsset:withComplete:]_block_invoke
-[CSAssetController _startDownloadingAsset:progress:completion:]
v16@?0@"MAProgressNotification"8
+[CSAssetController(Utils) addKeyValuePairForQuery:assetType:]
com.apple.voicetrigger
com.apple.voicetrigger.notbackedup
kCSPreferencesJarvisTriggerModeDidChangeDarwinNotification
Phrase Detector Enabled
AttentiveSiri Enabled
AttentiveSiri AudioLogging Enabled
VoiceTrigger CoreSpeech Enabled
-[CSPreferences voiceTriggerInCoreSpeech]_block_invoke
CoreSpeech Daemon Enabled
-[CSPreferences corespeechDaemonEnabled]_block_invoke
Enable Two Shot Notification
com.apple.demo-settings
StoreDemoMode
File Logging Level
Library
Logs/CrashReporter/VoiceTrigger/audio/
/Logs/CrashReporter/Assistant/
SpeechLogs
-[CSPreferences assistantAudioFileLogDirectory]
Second Pass Audio Logging Enabled
Jarvis Audio Logging Enabled
Jarvis Trigger Mode
Enable SoS Audio Logging
mobile
Logs/CrashReporter/CoreSpeech/sos/
-[CSPreferences getStartOfSpeechAudioLogFilePath]
/tmp
yyyyMMdd_HHmmss.SSS
%@/%@
Remote VoiceTrigger Delay
Remote VoiceTrigger Endpoint Timeout
VoiceTrigger/interstitial
Myriad File Logging Enabled
-[CSPreferences enableAudioInjection:]
Audio Injection Enabled
-[CSPreferences setAudioInjectionFilePath:]
Audio Injection File Path
-[CSPreferences audioInjectionFilePath]
-[CSPreferences audioInjectionFilePath]_block_invoke
v32@?0@8Q16^B24
SpeakerId Enabled
iTunes Account Signin Enabled
SpeakerId Score Type
SmartSiriVolume SoftVolume Enabled
Audio Session Activation Delay
Max Number Logging Files
Enable SiriActivation HomePod
Enable SiriActivation watchOS
IOS Barge-in Power Saving Enabled
-[CSPreferences iOSBargeInPowerSavingEnabled]_block_invoke
-[CSPreferences iOSBargeInPowerSavingEnabled]
IOS Support Barge-in
-[CSPreferences iOSBargeInSupportEnabled]_block_invoke
-[CSPreferences iOSBargeInSupportEnabled]
Overwrite Remote VAD Score
Hearst First Pass Model Version
Hearst Second Pass Model Version
Hearst Fake Model Path
VoiceTrigger Companion Sync Enabled
RTModelData
RTModelHash
RTModelLocale
RTModelDigest
RTModelSignature
RTModelCertificate
RT Model for 
 from asset 
CorealisRTModel
CorealisRTModelVersion
dataSize(%d), hash(%@), locale(%@), digest(%@), cert(%@), signature(%@)
supportsSecureCoding
TB,R
modelData
T@"NSData",R,N,V_modelData
modelLocale
T@"NSString",R,N,V_modelLocale
modelHash
T@"NSString",R,N,V_modelHash
digest
T@"NSData",R,N,V_digest
signature
T@"NSData",R,N,V_signature
certificate
T@"NSData",R,N,V_certificate
+[CSUtils(LanguageCode) getSiriLanguageWithFallback:]
-[CSLanguageCodeUpdateMonitor _startMonitoringWithQueue:]
-[CSLanguageCodeUpdateMonitor _stopMonitoring]
-[CSLanguageCodeUpdateMonitor _didReceiveLanguageCodeUpdate]
v16@?0@8
com.apple.corespeech
Framework
::: Initializing CoreSpeech logging...
yyyyMMdd-HHmmss
CSLogInitIfNeeded_block_invoke
gitrelno_unavailable
rtblobs
blob
majorVersion
minorVersion
cert
rtlocalemap
-[CSAsset(RTModel) RTModelWithFallbackLanguage:]
-[CSAsset(RTModel) latestHearstRTModelForLocale:]
-[CSAsset(RTModel) hearstRTModelWithMajorVersion:minorVersion:locale:]
-[CSAsset(RTModel) hearstRTModelLocaleMap]
%02x
com.apple.
com.apple.private.
InternalBuild
PTQ+ABwag03BwO/CKvIK/A
4D8XW4YwJI7QvyPhv1TEdw
-[CSFirstUnlockMonitor _stopMonitoring]
v12@?0i8
-[CSSpeechEndpointAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSSpeechEndpointAssetMetaUpdateMonitor _stopMonitoring]
-[CSSpeechEndpointAssetMetaUpdateMonitor _didReceiveNewSpeechEndpointAssetMetaData]
com.apple.MobileAsset.SpeechEndpointAssets.ma.cached-metadata-updated
Languages
Footprint
Premium
-[CSVoiceTriggerAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerAssetMetaUpdateMonitor _stopMonitoring]
-[CSVoiceTriggerAssetMetaUpdateMonitor _didReceiveNewVoiceTriggerAssetMetaData]
com.apple.MobileAsset.VoiceTriggerAssets.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsWatch.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMarsh.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMac.ma.cached-metadata-updated
[profileId: %@, language: %@, product: %@, version: %@, homeId: %@, name: %@]
profileId
T@"NSString",&,N,V_profileId
languageCode
T@"NSString",&,N,V_languageCode
productCategory
T@"NSString",&,N,V_productCategory
version
T@"NSNumber",&,N,V_version
onboardType
TQ,N,V_onboardType
homeId
T@"NSString",&,N,V_homeId
userName
T@"NSString",&,N,V_userName
baseVersion
T@"NSNumber",&,N,V_baseVersion
implicitVersion
T@"NSNumber",&,N,V_implicitVersion
siriDebugProfileId
T@"NSString",&,N,V_siriDebugProfileId
%s ERR: uttPath is nil -  Bailing out
%s ERR: uttPath is nil - Bailing out
%s ERR: uttMeta is nil - Bailing out
%s ::: Error creating json Metadata: %{public}@
%s Error reading contents of SAT root: %{public}@: err: %{public}@
%s Error determining if file is dir-entry: url=%{public}@, err=%{public}@
%s ERROR creating meta-version json-data from dict: ERR: %{public}@
%s Error reading contents of audioDir: %{public}@, err: %{public}@
%s Missing meta-file: Creating new Meta file for audio file: %{public}@
%s ERR: Unexpected. metaVersionFileData is empty while the file exists at: %{public}@
%s Json-Err reading metaVersionFile: %{public}@: err: %{public}@
%s ERR: uttMetaURL is nil
%s ERR: Unexpected. metaData is nil while the uttMetaPath exists at: %{public}@
%s error reading meta-file: %{public}@
%s ERR: uttMetaURL is nil, defaulting to NO
%s ERR: metaData is nil, defaulting to NO for %{public}@
%s ERR: read metafile %{public}@ failed with %{public}@ - defaulting to NO
%s ERR: missing %{public}@ key in %{public}@ - defaulting to NO
%s ERR: uttMetaURL is nil - Bailing out
%s ERR: metaData is nil for %{public}@ - Bailing out
%s ERR: read metafile %{public}@ failed with %{public}@ - Bailing out
%s ERR: missing %{public}@ key in %{public}@ - Bailing out
%s ERR: %{public}@ is not present
%s Received a request for VoiceTrigger Asset for language code : %{public}@
%s Fake Model Path does not exist : %{public}@
%s fake model meta json does not exist : %{public}@
%s Unable to read fake model meta json : %{public}@
%s Unable to parse fake model meta json : %{public}@
%s Loading FakeModel : %{public}@
%s Cannot create RTModel from %{public}@
%s fake model number(%{public}d) is less than minimum fake model number((%{public}d)
%s %{public}@ fake model is selected for download
%s %{public}@ model is selected for fallback
%s Received a request for VoiceTriggerRTModel for Firmware Version : %{public}d.%{public}d
%s Asking mobile asset with currentLanguageCode = %{public}@
%s DownloadModel : 
%s %{public}@
%s preinstalledModels : 
%s Hearst Fake Model request switch turned on, executing stress test mode with fakeModelPath : %{public}@
%s VoiceTriggerAsset is not available : %{public}@
%s rtLocaleMap is nil fallback to embedded locale map
%s accessoryRTBlobs are not available for the version(%{public}d.%{public}d) and locale:%{public}@, returning fallback model : %{public}@
%s Hash matched with downloadedModel : %{public}@, accessory will select this model
%s Hash matched with preinstalledModel : %{public}@, accessory will select this model
%s Ask for download : %{public}@, and use %{public}@ as fallback
%s Select keyword language as %{public}@, error : %{public}@
%s Language list and jarvis language not provided
%s current Siri language code : %{public}@
%s Failed to create regular expression : %{public}@
%s Fallback asset resource path : %{public}@
%s Cannot find corespeech asset from resourcePath : %{public}@
%s Configuration file is not exists : %{public}@
%s Cannot read configuration file : %{public}@
%s Cannot decode configuration json file : %{public}@
%s Configuration json file is not expected format
%s Cannot access to %{public}@ %{public}@ using default value
%s _csAssetsDictionary = %{public}@
%s CSAssetController cannot query for nil language
%s ::: found %{public}lu assets for assetType=%{public}lu, matching query: %{public}@
%s ::: Meta data not available, query again with returnType MAUnionOfCatalogInstalled
%s Error running asset-query for assetType:%{public}lu, query: %{public}@, error: %{public}lu
%s Meta data not available, query again with returnType MAUnionOfCatalogInstalled
%s Asset state : %{public}ld
%s ::: %{public}s
%s ::: %{public}s; query: %{public}@
%s Found %{public}lu assets
%s Error running asset query: error %{public}lu, or result is empty
%s ::: Request Fetching RemoteMetaData : assetType : %{public}d
%s ::: Request fetching remote asset
%s ::: found %{public}lu assets for assetType %{public}lu
%s Failed to finish query for assetType %{public}lu with error %{public}lu
%s Meta data downloaded successfully for assetType %{public}lu
%s Failed to download meta data for assetType %{public}lu with error %{public}lu
%s ::: Fetching remote asset
%s ::: Purging installed asset : %{public}@
%s ::: Request downloading remote asset for assetType %{public}lu
%s ::: Start downloading asset
%s ::: download progress: %{public}3.0f%%
%s ::: Error downloading from %{public}@ with error %{public}@
%s ::: download completed successfully from %{public}@.
%s Attempting to download asset %{public}@, asset state : %{public}ld
%s ERR: Unknown AssetType: %{public}lu
%s value = %{public}d
%s Couldn't create speech log directory at path %{public}@ %{public}@
%s Couldn't create SoS log directory at path %{public}@ %{public}@
%s enableAudioInection: is only available on internal builds
%s setAudioInjectionFilePath: is only available on internal builds
%s kCSAudioInjectionFilePathKey is not array type
%s kCSAudioInjectionFilePathKey array size = %d
%s kCSAudioInjectionFilePathKey doesn't have NSString as an array entry
%s Device on power saving mode ? %{public}@
%s Shouldn't be called on non-iOS platform
%s Device support barge-in? %{public}@
%s Siri language is nil, falling back to %@
%s Start monitoring : Siri language code
%s Stop monitoring : Siri language code
%s Siri language changed to : %{public}@
%s Ignore notifying change of language code, since it is nil
%s ::: CoreSpeech logging initialized (%s)
%s CS doesn't have ndblobbuilder!
%s latestMajorVersion = %d, LatestMinorVersion = %d
%s corespeech.json doesn't contains rtblobs
%s blob file name is not exists
%s blob file is not exists at %{public}@
%s Reading blob from : %{public}@
%s Blob is nil : %{public}@
%s RTLocaleMap is not available on asset
%s Stop monitoring : First unlock
%s Start monitoring : speech endpoint asset meta update
%s Stop monitoring : speech endpoint asset meta update
%s New speech endpoint asset is available
%s Start monitoring : VoiceTrigger Asset meta update
%s Stop monitoring : VoiceTrigger Asset meta update
%s New VoiceTrigger asset metadata is available
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.VoiceTriggerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsWatch</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMarsh</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMac</string>
</array>
</dict>
</plist>
zPLR
zPLR
