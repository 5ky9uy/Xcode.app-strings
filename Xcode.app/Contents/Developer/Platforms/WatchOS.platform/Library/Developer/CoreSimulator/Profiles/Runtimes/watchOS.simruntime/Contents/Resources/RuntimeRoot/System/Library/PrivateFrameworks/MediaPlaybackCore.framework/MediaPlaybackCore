MbP?
---------'*--
!!$!!!'*-03
6!!!9<
$;@(#)PROGRAM:MediaPlaybackCore  PROJECT:MediaPlayerFramework-1
%{public}@ _transitionToLiveLinkState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToLiveLinkState %{public}@ -> %{public}@
%{public}@ _transitionToSourceState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToSourceState %{public}@ -> %{public}@
source:getPlaybackContext
error=%{public}@
%{public}@ _transitionToBuildState [ignoring] %{public}@ -> %{public}@
%{public}@ _transitionToBuildState %{public}@ -> %{public}@
build:replace
%{public}@: calling completion intent=%{public}@ status=%{public}@
intent=%{public}@ status=%{public}@
%{public}@ didUpdateQueue:
link:start
build
Unexpected assetLoadingDidStartForItem: without a SIL pair ID: %{public}@ %{public}@
Unexpected assetLoadingDidCompleteForItem: without a SIL pair ID: %{public}@ %{public}@
%{public}@ - relativeVolumeDidChangeTo: - volume=%{public}f - timeStamp:%{public}@
%{public}@ - firstVideoFrameWasRenderedForItem: - item=%{public}@ - timeStamp:%{public}@
Unexpected firstVideoFrameWasRenderedForItem: without a SIL pair ID: %{public}@ %{public}@
%{public}@ - Playback stuck on non-playable item: %{public}@
%{public}@ - Media Services were restored - timeStamp:%{public}@
%{public}@ - Media Services were interrupted - item:%{public}@ - time:%.3fs - timeStamp:%{public}@
%{public}@ - Media Services were interrupted - no item at death - timeStamp:%{public}@
%{public}@ - end of queue reached [%{public}@]
 Enforcing policy due to screen recording. setMuted/setHidden: %{BOOL}u - timeStamp:%{public}@
%{public}@ - tracksDidChange: - item=%{public}@ - timeStamp:%{public}@
Unexpected playbackIsLikelyToKeepUp:forItem: without a SIL pair ID: %{public}@ %{public}@
%{public}@ - playbackIsLikelyToKeepUp: - Likely - item=%{public}@ - timeStamp:%{public}@
%{public}@ - playbackIsLikelyToKeepUp: - Unlikely - item=%{public}@ - timeStamp:%{public}@
Unexpected playbackBufferStateDidChangeToState:forItem: without a SIL pair ID: %{public}@ %{public}@
%{public}@ - playbackBufferStateDidChangeToState: - state=Full - item=%{public}@ - timeStamp:%{public}@
%{public}@ - playbackBufferStateDidChangeToState: - state=Empty - item=%{public}@ - timeStamp:%{public}@
%{public}@ - interruptionDidFinishForInterruptor:shouldResume: - interruptor=%{public}@ - shouldResume=%{BOOL}u - timeStamp:%{public}@
%{public}@ - interruptionDidBeginWithInterruptor - interruptor=%{public}@ - timeStamp:%{public}@
%{public}@ - stateDidChange - [%{public}@/MP:%ld/NP:%ld -> %{public}@/MP:%ld/NP:%ld] - timeStamp:%{public}@
%{public}@ - routeDidChange - shouldPause=%{BOOL}u - route:%{public}@ - isAirplay=%{BOOL}u - timeStamp:%{public}@
%{public}@ - playbackWaitingToPlayFor - item=%{public}@ - reason:%{public}@ - timeStamp:%{public}@
%{public}@ - playbackRateDidChangeToRate - item=%{public}@ - rate:%1.2f - timeStamp:%{public}@
%{public}@ - playbackDidStopForItem - item=%{public}@ - time:%.3fs - timeStamp:%{public}@
%{public}@ - playbackDidStartForItem:rate: - item=%{public}@ - rate:%1.2f - from stalling:%{BOOL}u - timeStamp:%{public}@
PSP: Setting hasPlayedSuccessfully: [playbackDidStartForItem] playerID=%{public}@ item=%{public}@
Unexpected playbackDidStartForItem: without a SIL pair ID: %{public}@ %{public}@
Event %{public}@: startup time: %lfs - bitrates: [observed:%lf, indicated:%lf, average audio:%lf, switch:%lf] - entry reason:%ld
%{public}@ - No existing formats on item
%{public}@ - active audio format from AV: %{public}@
%{public}@ - [AF] - Updating active format : %{public}@
%{public}@ - itemIsReadyToPlay - item=%{public}@ - timeStamp:%{public}@
%{public}@ - itemDidPlayToEnd - item=%{public}@ - timeStamp:%{public}@
%{public}@ - itemDidFailToPlayToEnd - item=%{public}@ - error=%{public}@ - timeStamp:%{public}@
Unexpected itemDidFailToPlayToEnd: without a SIL pair ID: %{public}@ %{public}@
%{public}@ - itemDidFailToLoad - item=%{public}@ - error=%{public}@ - timeStamp:%{public}@
%{public}@ - userSeekCompletedForItem - item=%{public}@ - [%.2fs -> %.2fs]- timeStamp:%{public}@
%{public}@ - playbackTimeDidChangeTo - Live item [ignoring time change] - time:%.2fs - item=%{public}@ - timeStamp:%{public}@
%{public}@ - playbackTimeDidChangeTo - Regular item [processing time change] - time:%.2fs - rate: %.2f - effectiveRate: %2f - state: %{public}@ - item=%{public}@ - reason:%{public}@ - timeStamp:%{public}@
%{public}@ - playbackDidReachQueueEnd - timeStamp:%{public}@
%{public}@ - itemDidResignCurrent - %{public}@ [Source: %{public}@] - timeStamp:%{public}@
%{public}@ - itemDidBecomeCurrent - %{public}@ [Source: %{public}@] - timeStamp:%{public}@
WaitForReadyToPlay
format=%{public}@
%{public}@ - currentItemWillChangeFromItem - %{public}@ -> %{public}@ [Source: %{public}@] - timeStamp:%{public}@
Playback paused [asset loading error] - item:%{public}@ - error:%{public}@
Unexpected _playbackDidStopForItem: without a SIL pair ID: %{public}@ %{public}@
Unexpected _logTimeJumpForItem: without a SIL pair ID: %{public}@ %{public}@
Set current time command %{public}@ completed - time=%f - error=%{public}@
Set rate command %{public}@ completed - rate=%f - error=%{public}@
End seek command %{public}@ completed - error=%{public}@
Begin seek command %{public}@ completed - direction=%ld - error=%{public}@
MPCPlaybackEngineImplementation: %p - skipWithDirection:identifier:completion: - direction:%ld - currentTime:%3.2fs
Skip [jumped to %{public}@ track] command %{public}@ completed - error=%{public}@
Play command %{public}@ completed - error=%{public}@
Pause command %{public}@ completed - error=%{public}@
Pause for lease prevention %{public}@ completed - error=%{public}@
endPlaybackWithIdentifier %{public}@ - Received: clearing all playback queue
PSP: Resetting hasPlayedSuccessfully: [endPlayback] playerID=%{public}@
MPCPlaybackEngineImplementation: %p - changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error: - delta:%ld - currentTime:%3.2fs
Skip forward [jumped to next track] command %{public}@ completed - error=%{public}@
Skip backward [jumped to start of track] command %{public}@ completed - error=%{public}@
Skip backward [jumped to previous track] command %{public}@ completed - error=%{public}@
MPCPlaybackEngineImplementation: %p - Set audio session active failed - error: %{public}@
MPCPlaybackEngineImplementation: %p - Set audio session active succeeded
PrepareForRate
MPCPlaybackEngineImplementation: %p - calling setQueueWithInitialItem on playback stack - item: %{public}@ - play: %{BOOL}u - mode: %{public}@
InitialItem
shouldPlay=%{BOOL}u
MPCPlaybackEngineImplementation: %p - reloadWithPlaybackContext failed [no queue item] - error: %{public}@ - resolution: %ld
MPCPlaybackEngineImplementation: %p - loadSessionWithQueueController - Load session failed - error: %{public}@
QueueControllerInsert
MPCPlaybackEngineImplementation: %p - 
replaceCurrentItemWithPlaybackContext failed with error: %{public}@
commandID=%{public}@
PlaybackStackSetup
 enableTelemetry=YES 
PSP: Resetting hasPlayedSuccessfully: [reloadWithPlaybackContext] playerID=%{public}@
QueueControllerReload
MPCPlaybackEngineImplementation: %p - 
reloadWithPlaybackContext failed - error: %{public}@ - resolution: %ld
INVALIDATE: %p: Invalidated before returning a response. Re-requesting items.
%{public}@: [Lease] - _updatePreventionStatusWithLeaseSession - updating prevention status - lease status: %{public}@
%{public}@: [Lease] Lease playback prevention state did change to: %li [status: %{public}@
BackgroundTask: End assertion (%lli) at %{public}s:%d
%{public}@: [Lease] Loading subscription lease session...
%{public}@: [Lease] Finished loading subscription lease session: %{public}@
%{public}@: [Lease] Failed to load subscription lease session with error: %{public}@
%{public}@: [Lease] Loading subscription status...
%{public}@: [Lease] Finished loading subscription status: %{public}@
%{public}@: [Lease] Skipping subscription lease load since the subscription status indicated it shouldn't be used
%{public}@: [Lease] Finished loading subscription status: %{public}@ with error: %{public}@
%{public}@: Set preferredMaximumResolution=%{public}@ lastKnownNetwork=%{public}@ (%ld) prefersHighQualityContent=%{BOOL}u
%{public}@: Set preferredPeakBitRate=%f lastKnownNetwork=%{public}@ (%ld) prefersHighQualityContent=%{BOOL}u
%{public}@: Enabling album loudness on player item %{public}@
%{public}@: Setting loudness info %{public}@ on player item %{public}@
%{public}@ - Timeout values [Network likely reachable: %{BOOL}u]: Local file=%lds - subscription lease session=%lds - home sharing=%lds - cloud streaming=%lds - cloud redownload=%lds - fairplay status=%lds - fairplay lease=%lds - suze lease=%lds
Unable to provide lyrics for contentItemID %{public}@, modelObject: %{public}@
No lyrics available. Error: %{public}@, modelObject: %{public}@
%{public}@ - Unable to report track information [serialization error] - track-info=%{public}@ - error=%{public}@
BackgroundTask: Took assertion (%lli) at %{public}s:%d
%{public}@ Using start time: %f
%{public}@ Using stop time: %f
%{public}@ Using bookmark start time: %f
[LeaseRatePreparation] - %{public}@: Preparing for rate: %f.
[LeaseRatePreparation] - %{public}@: Getting subscription lease session
[LeaseRatePreparation] - %{public}@: Early completion [Playback keys not required ]
[LeaseRatePreparation] - %{public}@: Early completion [No subscription lease session available]
[LeaseRatePreparation] - %{public}@: Early completion [Subscription lease not required]
[LeaseRatePreparation] - %{public}@: Sending subscription lease request
[LeaseRatePreparation] - %{public}@: Finished subscription lease request for rate preparation with response: %{public}@ - status:%{public}@ error: %{public}@
[LeaseRatePreparation] - %{public}@: Finished subscription lease request for rate preparation with response: %{public}@ - status:%{public}@
[LeaseRatePreparation] - %{public}@: Finished preparing for rate: %f.
%{public}@: Player item has not connected to internet error, current network type is %li, cellular allowed is %{public}@ 
%{public}@: Transforming error to cellular restricted error instead of original: %{public}@
%{public}@: (Watch) Transforming error to cellular restricted error instead of original: %{public}@
%{public}@: Transforming error network unavailable instead of original: %{public}@
%{public}@: [AF] - Updating active audio format: %{public}@ -> %{public}@ - Justification: %ld
%{public}@: [AF] - Updating preferred audio format: %{public}@ -> %{public}@
[AL] - %{public}@: Starting asset load...
[AL] - %{public}@: Returning asset load early with error: %{public}@
[AL] - %{public}@: Asset is %{public}@ - Preferred audio: %{private}@
[AL] - %{public}@: Using local file asset at path: %{public}@.
[AL] - %{public}@: Timed out while attempting to load local file of specified quality [request aborted after %lds].
LoadAssetLocalFileLoadOperation
[AL] - %{public}@: Using home sharing asset.
[AL] - %{public}@: Timed out while attempting to load home sharing asset [request aborted after %lds].
LoadAssetHomeSharingLoadOperation
[AL] - %{public}@: Using existing Radio cached playback response: %{public}@
[AL] - %{public}@: No cached Radio playback response found.
LoadAssetAssetInfoCacheRequest
[AL] - %{public}@: No local file of appropriate quality, using cloud streaming.
[AL] - %{public}@: Subscription is required, and the user does not have subscription playback capability, setting error to subscription required.
[AL] - %{public}@: Subscription is required, and we failed to load the subscription status.
[AL] - %{public}@: Timed out while attempting to load subscription asset [request aborted after %lds].
LoadAssetSubscriptionAssetLoadOperation
[AL] - %{public}@: Timed out while attempting to load media redownload asset [request aborted after %lds].
LoadAssetMediaRedownloadOperation
[AL] - %{public}@: No valid endpoint type (%ld), skipping streaming redownload.
[AL] - %{public}@: Timed out while attempting to load low quality local file [request aborted after %lds].
LoadAssetLowQualityFileLoadOperation
[AL] - %{public}@: Ready to process asset load result: %{public}@
[AL] - not enabling AVURLAssetOptimizeAccessForLinearMoviePlaybackKey because its disabled in settings
[AL] - %{public}@: Non HLS Asset - Reloading playback keys if required
[AL] - %{public}@: Radio station does not require a subscription, skipping subscription key check.
[AL] - %{public}@: Protection type is %li, skipping subscription key check.
[AL] - %{public}@: Not subscription content, skipping playback key check.
[AL] - %{public}@: [Lease] Lease session invalid, skipping key loading.
[AL] - %{public}@: [Lease] Reloading FairPlay key status to ensure the latest value is known...
[AL] - %{public}@: [Lease] Timed out reloading FairPlay key status; using the last known status [request aborted after %lds].
LoadAssetLoadFairPlayKeyStatus
[AL] - %{public}@: [Lease] Already have playback keys from lease status: %{public}@, no need to do another request.
[AL] - %{public}@: [Lease] Requesting playback keys because the asset requires online keys
[AL] - %{public}@: [Lease] Requesting playback keys because the lease status indicates none available: %{public}@
[AL] - %{public}@: [Lease] Timed out while attempting to acquire lease for playback keys [request aborted after %lds].
LoadAssetLeaseSessionPlaybackRequest
[AL] - %{public}@: AVURLAsset %{public}@ - options: %{public}@
[AL] - %{public}@: Initiating full online key retrieval and caching [Non HLS Asset]
[AL] - %{public}@: Using purchase bundle: %{public}@
[AL] - %{public}@: Attempting to load full subscription asset [first asset requires online keys]
LoadAssetCRABSAssetDownload
[AL] - %{public}@: Failed to fetch FairPlayKeyStatus for offline key determination error: %{public}@
[AL] - %{public}@: Not requesting offline keys because Fairplay does not have offline subscription keys
[AL] - %{public}@: Using ContentKeySession for SKD [New HLS audio tracks] %{public}@
[AL] - %{public}@: [HLS streaming cache] Initiating download to destination file %{public}@
[AL] - %{public}@: [HLS streaming cache] Failed to create download url session for HLS asset
[AL] - %{public}@: [HLS streaming cache] Attempting to cache asset of type %{public}@ using HLS caching logic
LoadAssetHLSAssetDownload
[AL] - %{public}@: Using legacy SKD [Legacy HLS audio (streaming radios, videos)]
%{public}@: Setting gapless info: %{public}@
LoadAssetCreateAVPlayerItem
[AL] - %{public}@: Starting Suze lease session...
[AL] - %{public}@: Failed to create suze lease with error: %{public}@.
[AL] - %{public}@: Timed out creating Suze lease session: %{public}@ [request aborted after %lds].
LoadAssetSuzeLeaseSession
LoadAsset
 enableTelemetry=YES format=%{public}@
[AL] - %{public}@: Asset load finished.
[AL] - %{public}@: [HLS streaming cache] Asset download complete. err=%{public}@
[AL] - %{public}@: [HLS streaming cache] Downloaded asset won't be added to the cache [fatal download error]. Error=%{public}@
[AL] - %{public}@: [HLS streaming cache] Attempting to cache asset of type %{public}@ using HLS caching logic [fatal]
[AL] - %{public}@: [HLS streaming cache] Downloaded asset won't be added to the cache [asset is corrupted]. Error=%{public}@
[AL] - %{public}@: [HLS streaming cache] Downloaded asset will be added to the cache
[AL] - %{public}@: [HLS streaming cache] Failed to update cache properties. err=%{public}@
[AL] - %{public}@: [HLS streaming cache] Caching of HLS asset completed successfully
[AL] - %{public}@: [HLS streaming cache] Caching of HLS asset with traits: %{public}@
[AL] - %{public}@: Asset download completed successfully.
[AL] - %{public}@: Writing placeholder purchase bundle at path: %{public}@
[AL] - %{public}@: Asset download completed with error: %{public}@
[AL] - %{public}@: Loaded full subscription asset, updated purchaseBundle = %@
[AL] - %{public}@: Ignoring full subscription asset purchase bundle [%{public}@] expected=%{public}@ loaded=%{public}@
[AL] - %{public}@: Failed to load full subscription asset: %{public}@.
[AL] - %{public}@: Writing purchase bundle at path: %{public}@
[AL] - %{public}@: Not writing purchase bundle [asset no longer on disk] assetPath = %{public}@ purchaseBundlePath = %{public}@
[AL] - %{public}@: Removed incomplete download at URL: %{public}@
[AL] - %{public}@: Failed to remove incomplete downloaded file at URL: %{public}@ error: %{public}@.
[AL] - %{public}@: Error caching file asset: %{public}@.
[AL] - %{public}@: Finished caching file asset.
[AL] - %{public}@: [Lease] Finished subscription lease request for playback keys with error: %{public}@.
[AL] - %{public}@: [Lease] Finished reload of FairPlay key status: %{public}@ with error: %{public}@
[AL] - %{public}@: [Lease] Finished reload of FairPlay key status: %{public}@
[AL] - %{public}@: [Lease] Subscription lease properties already loaded.
[AL] - %{public}@: [Lease] Loading subscription lease properties.
[AL] - %{public}@: [Lease] Finished loading subscription lease properties.
[AL] - %{public}@: [Lease] Timed out loading subscription lease properties.
LoadAssetGetSubscriptionLeaseProperties
[AL] - %{public}@: Preferred audio: %{public}@ - allowsHLSContent: %{BOOL}u - Selector: %{public}@, playbackAuthorizationToken=%{public}@
%{public}@: Based on network type of %li and last known network type of %li, we are%{public}@ preferring high quality content.
%{public}@: Missing DSID in delegated identity properties - skipping playback
[AL] - %{public}@: [HLS streaming cache] Cancelling download request [dealloc] - request:%{public}@
Audio session category failed: %{public}@ (AirPlay devices may be missed)
Timed out with partial discovery. Found endpoints: %{public}@
Timed out with no devices discovered
Failed to discover output devices error: %{public}@
Found %lu endpoints, %lu devices.
%{public}@: Failed to load user identity properties. err=%{public}@
%{public}@: Failed to load delegated user identity properties. err: %{public}@
Not reporting non store lyrics event for <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Beginning report for <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
Reported <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f> with playActivityEvent: %p
Did not report <%{public}@: %p, (subscriptionAdamId=%lld, adamId=%lld) tsl=%{BOOL}u, dur=%f>
[MPCAssistantSetVolume] completion %{public}@
[MPCAssistantSetVolume] volume: %f endpoint %{public}@
[MPCAssistantSetVolume] set volume: %f outputDeviceUID %{public}@
[MPCAssistantSetVolume] increase volume: %f outputDeviceUID %{public}@
[MPCAssistantSetVolume] decrease volume: %f outputDeviceUID %{public}@
volume: %f error: %{public}@
volume: %f
[MPCAssistantSetVolume] new volume for uid: %{public}@: %f
[MPCAssistantSetVolume] volume set failed with error: %{public}@
|%{public}@ %p %{public}@
 ACCOUNT BEGIN              %{public}@
|%{public}@ %p %{public}@
 ACCOUNT UPDATE             %{public}@
|%{public}@ %p %{public}@ 
 store-id: %{private}llu; storefront: %{public}@; delegated: %{BOOL}u
|%{public}@ %p %{public}@  
 household-id: %{public}@
|%{public}@ %p %{public}@  
 subscription: %{public}@
|%{public}@ %p %{public}@  
 private-listening: %{BOOL}u
|%{public}@ %p  
 STREAM START 
 %{public}@ [%d] 
|%{public}@ %p %{public}@
 SHARED SESSION SYNC END    %{public}@
|%{public}@ %p %{public}@
 SHARED SESSION SYNC BEGIN  %{public}@
|%{public}@ %p %{public}@ 
 participant %lld: { identifier: %{public}@; externalIdentifier: %{public}@ }
|%{public}@ %p %{public}@
 PARTICIPANTS CHANGED       %{public}@
|%{public}@ %p %{public}@ 
 localUserIdentifier: %{public}@
|%{public}@ %p %{public}@  
 participant %lld: { identifier: %{public}@; externalIdentifier: %{public}@ }
|%{public}@ %p %{public}@  
 participants.count: %ld
|%{public}@ %p %{public}@
 SHARED SESSION BEGIN      %{public}@
|%{public}@ %p %{public}@
 ROUTE CHANGED              %{public}@
|%{public}@ %p %{public}@ 
 %{public}@
|%{public}@ %p %{public}@  
 %{public}@
|%{public}@ %p %{public}@  
 isAirPlay: %{BOOL}u
|%{public}@ %p %{public}@  
 shouldPause: %{BOOL}u
|%{public}@ %p %{public}@
MEDIASERVICES RESET      %{public}@
|%{public}@ %p %{public}@
MEDIASERVICES LOST       %{public}@
|%{public}@ %p %{public}@
 BEHAVIOR CHANGED           %{public}@
|%{public}@ %p %{public}@ 
 shuffle:  %{public}@
|%{public}@ %p %{public}@  
 repeat:   %{public}@
|%{public}@ %p %{public}@  
 autoplay: %{public}@
|%{public}@ %p %{public}@
 POLICY END
|%{public}@ %p %{public}@
 POLICY BEGIN
|%{public}@ %p %{public}@
 INTERRUPT END              %{public}@
|%{public}@ %p %{public}@ 
 resume: %{BOOL}u
|%{public}@ %p %{public}@
 INTERRUPT BEGIN            %{public}@
|%{public}@ %p %{public}@
 TIMED METADATA END         %{public}@
|%{public}@ %p %{public}@
 TIMED METADATA BEGIN       %{public}@
|%{public}@ %p %{public}@
 HLS END                    %{public}@ %{public}@ %{public}@
|%{public}@ %p %{public}@
 HLS BEGIN                  %{public}@ %{public}@ %{public}@
|%{public}@ %p %{public}@ 
 hasIndeterminateDuration: %{BOOL}u
|%{public}@ %p %{public}@
 PLACEHOLDER END            %{public}@ %{public}@
|%{public}@ %p %{public}@
 PLACEHOLDER BEGIN          %{public}@ %{public}@
|%{public}@ %p %{public}@
 ITEM FAILED                %{public}@ %{public}@
|%{public}@ %p %{public}@
 ITEM ASSET END             %{public}@ %{public}@ [%.3fs]
|%{public}@ %p %{public}@
 ITEM ASSET BEGIN           %{public}@ %{public}@
|%{public}@ %p %{public}@
 AUDIO CHANGE               %{public}@ %{public}@
|%{public}@ %p %{public}@ 
 activeFormat: %{public}@
|%{public}@ %p %{public}@  
 targetFormat: %{public}@
|%{public}@ %p %{public}@  
 justification: %{public}@; preferences: %{public}@
|%{public}@ %p %{public}@  
 alternate: %{public}@
|%{public}@ %p %{public}@  
 audioRoute: %{public}@
|%{public}@ %p %{public}@
 ITEM END                   %{public}@ %{public}@
|%{public}@ %p %{public}@  
 didPlayToEnd: %{BOOL}u
|%{public}@ %p %{public}@
 ITEM METADATA PING          %{public}@ %{public}@
|%{public}@ %p %{public}@ 
 data: %{public}@
|%{public}@ %p %{public}@
 ITEM SECKEY END            %{public}@ %{public}@ [%.3fs]
|%{public}@ %p %{public}@
 ITEM SECKEY BEGIN          %{public}@ %{public}@
|%{public}@ %p %{public}@ 
 skd: %{public}@
|%{public}@ %p %{public}@
 ITEM BUFFER FINISH         %{public}@ %{public}@
|%{public}@ %p %{public}@
 ITEM BUFFER STALL          %{public}@ %{public}@
|%{public}@ %p %{public}@
 ITEM BUFFER READY          %{public}@ %{public}@
|%{public}@ %p %{public}@
 ITEM RESUME                %{public}@ %{public}@ 
|%{public}@ %p %{public}@ 
 start: %0.2f
|%{public}@ %p %{public}@
 ITEM PAUSE                 %{public}@ %{public}@ 
|%{public}@ %p %{public}@ 
 end: %0.2f
|%{public}@ %p %{public}@
 ITEM JUMP                  %{public}@ %{public}@ 
|%{public}@ %p %{public}@ 
 start: %0.2f; end: %0.2f
|%{public}@ %p %{public}@  
 userInitiated: %{BOOL}u
|%{public}@ %p %{public}@
 ITEM UPDATE                %{public}@ %{public}@
|%{public}@ %p %{public}@ 
 identifiers: %{public}@
|%{public}@ %p %{public}@
 ITEM BEGIN                 %{public}@ %{public}@
|%{public}@ %p %{public}@  
 duration: %0.2f; initialPosition: %0.2f; startBoundary: %0.2f; endBoundary: %0.2f
|%{public}@ %p %{public}@  
 requiresPAF: %{BOOL}u; video: %{BOOL}u; artistUploaded: %{BOOL}u
|%{public}@ %p %{public}@
 CONTAINER END              %{public}@
|%{public}@ %p %{public}@
 CONTAINER BEGIN            %{public}@
|%{public}@ %p %{public}@ 
 title: %{public}@
|%{public}@ %p %{public}@  
 playlistVersionHash: %{public}@
|%{public}@ %p %{public}@  
 stationType: %{public}@; stationSubtype: %{public}@
|%{public}@ %p %{public}@  
 identifiers: %{public}@
|%{public}@ %p %{public}@
 QUEUE LOAD END             %{public}@ [%.3fs]
|%{public}@ %p %{public}@ 
 error: 
 %{public}@
|%{public}@ %p %{public}@  
           %{public}@
|%{public}@ %p %{public}@  
           %{public}@
|%{public}@ %p %{public}@
 QUEUE LOAD BEGIN           %{public}@
|%{public}@ %p %{public}@
 QUEUE ITEM REORDER         %{public}@ %{public}@
|%{public}@ %p %{public}@
 QUEUE ITEM REMOVE          %{public}@ %{public}@
|%{public}@ %p %{public}@
 QUEUE ITEM ADD             %{public}@ %{public}@
|%{public}@ %p %{public}@
 QUEUE ADD                  %{public}@
|%{public}@ %p %{public}@ 
 queue: %{public}@
|%{public}@ %p %{public}@  
 feature: %{public}@
|%{public}@ %p %{public}@  
 queue-grouping-id: %{public}@
|%{public}@ %p %{public}@  
 account: %{public}@
|%{public}@ %p %{public}@  
 requesting-application: %{public}@/%{public}@
|%{public}@ %p %{public}@  
 delegatedAccount: %{public}@; delegatedDeviceName: %{public}@
|%{public}@ %p %{public}@  
 delegatedDeviceOSVariant: %{public}@; delegatedDeviceUserAgent: %{public}@
|%{public}@ %p %{public}@  
 delegated-private-listening: %{BOOL}u
|%{public}@ %p %{public}@  
 private-listening-source: %{public}@; private-listening-override: %{public}@
|%{public}@ %p %{public}@
 COMMAND END                %{public}@ [%.3fs]
|%{public}@ %p %{public}@ 
 command: %{public}@  %{public}@
|%{public}@ %p %{public}@  
 dialog.title: "%{public}@"; dialog.message: "%{public}@"
|%{public}@ %p %{public}@  
 dialog-action: %{public}@
|%{public}@ %p %{public}@  
  status: %{public}@ %{public}@; internalStatus: %{public}@
|%{public}@ %p %{public}@  
  status: %{public}@ %{public}@
|%{public}@ %p %{public}@  
  status: %{public}@ %{public}@; internalStatus: %{public}@
|%{public}@ %p %{public}@  
  status: %{public}@ %{public}@
|%{public}@ %p %{public}@  
   error: 
 %{public}@
|%{public}@ %p %{public}@  
             %{public}@
|%{public}@ %p %{public}@  
             %{public}@
|%{public}@ %p %{public}@
 COMMAND TIMEOUT            %{public}@ [%.3fs]
|%{public}@ %p %{public}@ 
 command: %{public}@  %{public}@ 
|%{public}@ %p %{public}@
 COMMAND BEGIN              %{public}@ 
|%{public}@ %p %{public}@ 
  source: %{public}@
|%{public}@ %p %{public}@  
 nowPlayingContentItemID: %{public}@
|%{public}@ %p %{public}@  
 options: %{public}@
|%{public}@ %p %{public}@  
 command: %{public}@  %{public}@
Unexpected signalStrength values: %{public}@
|%{public}@ %p %{public}@
 NETWORK TYPE CHANGED       %{public}@
|%{public}@ %p %{public}@ 
 strength: %{public}@
|%{public}@ %p %{public}@  
 constrained: %{BOOL}u; high quality: %{BOOL}u; expensive: %{BOOL}u
|%{public}@ %p %{public}@
 NET REACHABILITY CHANGED   %{public}@
|%{public}@ %p %{public}@
 DEVICE CHANGED
|%{public}@ %p %{public}@ 
 name: %{private}@; model: %{public}@
|%{public}@ %p %{public}@  
 application: %{public}@/%{public}@; bundleID: %{public}@; sourceVersion: %{public}@; uuid: %{public}@
|%{public}@ %p %{public}@  
 private-listening: %{BOOL}u
|%{public}@ %p %{public}@  
 root: %{public}@; uuid: %{public}@; debug: %{BOOL}u
|%{public}@ %p %{public}@  
 os: %{public}@ [%{public}@]/%{public}@ %{public}@; internalCarry: %{BOOL}u
|%{public}@ %p %{public}@
 APPLICATION BACKGROUND
|%{public}@ %p %{public}@
 APPLICATION FOREGROUND
|%{public}@ %p %{public}@
 APPLICATION TERMINATION
|%{public}@ %p %{public}@
 SESSION RESET [BOUNDARY]   %{public}@
|%{public}@ %p %{public}@
 SESSION RESTORE END        %{public}@ [%.3fs]
|%{public}@ %p %{public}@
 SESSION RESTORE BEGIN      %{public}@
|%{public}@ %p %{public}@
 SESSION END                %{public}@
|%{public}@ %p %{public}@
 SESSION BEGIN              %{public}@
[PIA] %p using UUID [section object is not a section type] uuid=%{public}@ section=%{public}@
[PIA] %p skipping item [store lookup failed] itemID=%{public}@
[PIA] %p using UUID [section object has no preferred storeID] uuid=%{public}@ section=%{public}@
[PIA] %p using UUID [item object has no preferred storeID] uuid=%{public}@ item=%{public}@
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackStart %lld %{public}@
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackAssetLoad
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackSummary
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackReady
MPCAssistantAnalyticsEventConsumer: AFAnalyticsEventTypeMusicPlaybackQueueReceived
MPMusicPlayerControllerServer: acceptNewConnection: delaying connection [%ds] %{public}@
MPMusicPlayerControllerServer: acceptNewConnection: %{public}@
MPMusicPlayerControllerServer: connection invalidated: pid=%u
engine:didChangeToItem: - %{public}@ - reloading:%{BOOL}u
setUserQueueModificationsDisabled
getUserQueueModificationsDisabled
setPlaybackRate
MPCMusicPlayerControllerServer: changePlaybackRate: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
setElapsedTime
MPCMusicPlayerControllerServer: changePlaybackPosition: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
getShuffleMode
setShuffleMode
MPCMusicPlayerControllerServer: changeShuffleMode: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
getRepeatMode
setRepeatMode
MPCMusicPlayerControllerServer: changeRepeatMode: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
endSeek
MPCMusicPlayerControllerServer: seekForward: endSeeking: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
beginSeekWithDirection
MPCMusicPlayerControllerServer: seekForward: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
MPCMusicPlayerControllerServer: seekBackward: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
reshuffle
MPCMusicPlayerControllerServer: reshuffle: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
skipWithBehavior
MPCMusicPlayerControllerServer: nextTrack: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
MPCMusicPlayerControllerServer: previousTrack: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
pauseWithFadeDuration
MPCMusicPlayerControllerServer: pause: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
play
MPCMusicPlayerControllerServer: play: dropping command [not enabled or not ready] enabled=%{BOOL}u, supported=%{BOOL}u, commandHandlersRegistered=%{BOOL}u
getTimeSnapshot
setNowPlayingItem
getNowPlayingAtIndex
getNowPlaying
MPMusicPlayerControllerServer: stopServer
MPMusicPlayerControllerServer: startServer: resummed systemMusicApplication=%{BOOL}u
MPMusicPlayerControllerServer: startServer: deferred resume waiting for canBeNowPlaying systemMusicApplication=%{BOOL}u
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: received MRMediaRemoteCommand type=%{public}@ id=%{public}@ interface=%{public}@
PerformCommandSetPlaybackQueue
PerformCommandPlay
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: mediaserverd unavailable [allowing command] type=%{public}@ id=%{public}@ interface=%{public}@
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: mediaserverd unavailable [failing command] type=%{public}@ id=%{public}@ interface=%{public}@
Cannot skip current item: %{public}@
[Skipping PrepareForSetQueue] No playback account found for user identity: %@
[Publisher] performCommandEvent: setPlaybackQueue forcing replaceIntent=KeepUpNext [in shared listening]
Cannot override manually curated queue.
Play queue verification failed with error: %{public}@
EndPlayback
MPCMediaRemotePublisher: failed to decode queue controller from set playback session: %{public}@ error: %{public}@
Unsupported sessionType [SetPlaybackSession] type=%{public}@
MPCMediaRemotePublisher: failed to decode queue controller from preload playback session: %{public}@ error: %{public}@
Unsupported sessionType [PreloadPlaybackSession] type=%{public}@
MPCMediaRemotePublisher: SetPriorityForPlaybackSession [ignoring non-Immediate priority]
shareQueue:getTracklist
Unsupported command: %{public}@ id=%{public}@
shareQueue:buildIntent
status=%{public}@
Change rate failed. (error = %{public}@)
SkipBackward failed. Could not skip to the specified time. (error = %{public}@)
SkipForward failed. Could not skip to the specified time. (error = %{public}@)
MPCMediaRemotePublisher: no current item after commit playback session: %{public}@
MPCMediaRemotePublisher: unexpected current item after set playback session: %{public}@ expectedContentItemID=%{public}@ currentContentItemID=%{public}@
MPCMediaRemotePublisher: failed to finalize queue controller from preload playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: cannot preload playback session with immediate priority, please send followup MRMediaRemoteCommandSetPriorityForPlaybackSession command.
MPCMediaRemotePublisher: failed to finalize queue controller from set playback session: %{public}@ error: %{public}@
MPCMediaRemotePublisher: no current item after set playback session: %{public}@
Add to playback context failed: %{public}@
Radio station getPlaybackContext failed with error: %{public}@
Reload with playback context failed with error: %{public}@
Create playback context failed with error: %{public}@
[Publisher] performCommandEvent: account rectification [%{public}@] context: %{public}@
AccountRectification
type=replaceCurrentItem
 SetPlaybackQueue (keeping up next with no current item) recovered
SetQueue
type=reload
InsertIntoPlaybackQueue failed. Could not create playback context. (error = %{public}@)
Insert playback context failed. Specific insertion position, but no content item ID provided.
Insert playback context failed. error: %{public}@
SeekToPlaybackPosition failed. Could not jump to the specified time. (error = %{public}@)
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: type=%{public}@ id=%{public}@ interface=%{public}@ status=%{public}@
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]: type=%{public}@ id=%{public}@ interface=%{public}@ status=%{public}@
[Publisher] _updateSupportedCommands sessionIdentifier=%{public}@ currentItem=%{public}@
[Publisher] _updateSupportedCommands canSeek=%{BOOL}u canSkip=%{BOOL}u prefersSeekOverSkip=%{BOOL}u
[Publisher] _updateSupportedCommands allowsQueueModifications=%{BOOL}u supportsCreateRadioStation=%{BOOL}u (activeAccountAllowsSubscriptionPlayback=%{BOOL}u, currentItemPlaceholder=%{BOOL}u)
[Publisher] _updateSupportedCommands canRepeatShuffle=%{BOOL}u shuffleType=%ld repeatType=%ld queueEndAction=%ld supportedActions=[%{public}@]
[Publisher] _updateSupportedCommands allowsQueueModifications=%{BOOL}u supportedPositions=[%{public}@]
[Publisher] _updateSupportedCommands disableQHO=%{BOOL}u supportedSessionTypes=%{public}@ exportableSessionTypes=%{public}@
UpdateSupportedCommands
[Publisher] _exportableSessionTypes empty [queueController is nil]
[Publisher] _exportableSessionTypes empty [queueController: %p is in shared listening mode]
[Publisher] _exportableSessionTypes empty [queueController: %p currentItem is nil]
[Publisher] _exportableSessionTypes empty [queueController: %p currentItem is tv-episode/movie]
[Publisher] _exportableSessionTypes empty [queueController: %p does not contain transportable content]
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent not using fallback intent [contextID does not match queueControllerUniqueID]
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent not using fallback intent [command option to disable]
[Publisher] _enqueueFallbackIntentIfNeededForCommandEvent attempting reload with fallback playback context
Failed to generate fallback playback context: %{public}@ %{public}@
Failed to load fallback playback context: %{public}@ %{public}@
SessionActivation
_MPCMediaRemotePublisher: Activated audio session [become active]
_MPCMediaRemotePublisher: Audio session was not activated error=%{public}@
_MPCMediaRemotePublisher: Failed to bless application
publisher:bless
success=%{BOOL}u
_MPCMediaRemotePublisher: Delaying audio activation [internal setting]: %gs
_MPCMediaRemotePublisher: Finished delaying audio activation [internal setting]
Lyrics end event: %{public}@ - %{public}@, ID = %{public}@, Info = %{public}@
Lyrics end event: invalid duration for reporting. Duration = %{public}g
Lyrics end event: no song found for contentItemID %{public}@
Lyrics end event: missing lyrics identifier. Token = %{public}@
Lyrics begin event: %{public}@, Lyrics ID = %{public}@, Info = %{public}@
[Publisher] Updating active account storefront: %{public}@
[Publisher] Updating active account subscription capabilities: %{BOOL}u
Invalidating playback queue because %{public}@
[Publisher] getShouldRestoreState: %{BOOL}u pendingCommands=%{public}@
MPCMediaRemotePublisher: %p -  [Lease] - Session migration did end with error [Stealing the lease back] - identifier:%{public}@ - error:%{public}@
MPCMediaRemotePublisher: %p -  [Lease] - Session migration did end - identifier:%{public}@
MPCMediaRemotePublisher: %p - [Lease] - Session migration will begin - identifier:%{public}@
[AL] - %{public}@: %{public}@ file is CRABS
[AL] - %{public}@:  %{public}@ file is HLS file - Traits: %{public}@
[AL] - %{public}@: Downloaded file quality overrides preferred file quality - File: %{public}@ > Preference: %{public}@
[AL] - %{public}@: Downloaded file quality matches preferred file quality 
[AL] - %{public}@: Cached HLS file quality determination: audioAssetTypesMatch=%{BOOL}u - fileAssetHasKeyServerData:%{BOOL}u - shouldUseHLSAsset: %{BOOL}u -> matchesQuality=%{BOOL}u
[AL] - %{public}@: Cached file quality determination: isHLSAsset=%{BOOL}u - shouldUseHLSAsset: %{BOOL}u -> matchesQuality=NO
[AL] - %{public}@: Skipping local asset [invalid purchase bundle] purchaseBundlePath=%{public}@
[AL] - %{public}@: Skipping purchase bundle [data at path has length zero] purchaseBundlePath=%{public}@
%{public}@: File asset missing file path, finishing.
[AL] - %{public}@: File traits translation from MPFileAsset to MPMediaItem: %{public}@ -> %{public}@ - Existing file traits: %{public}@
%{public}@: Writing path %{public}@ for media item: %{public}@
MPPlaybackArchive containsAppleMusicRadioContent failed [decode failure] archive=%{public}@ error=%{public}@
MPCPlaybackHistoryController %p - Ignoring track change [missing previous and current track]
MPCPlaybackHistoryController %p - Processing track change [transitioning from a track to none] - previous:%{public}@
MPCPlaybackHistoryController %p - Processing track change [transitioning from one track to the next] - previous:%{public}@ - next:%{public}@
MPCPlaybackHistoryController %p - Committing previous track to history - previous:%{public}@
MPCPlaybackHistoryController %p - Previous track does not meet playback history threshold - previous:%{public}@
ConfigureItem
item=%{public}@
Using cached availability: %{BOOL}u
Radio availability: %{public}@
Error fetching radio availability: %{public}@
Using fetched availability: %{BOOL}u
Device supports streaming
Network type: %ld
Wifi: %{BOOL}u Wired: %{BOOL}u Cellular: %{BOOL}u Allowed: %{BOOL}u
Network streaming available: %{BOOL}u
Network connection is available
No network connection available
watchOS: Will send request to companion
watchOS: Will ask for companion
Device does not support streaming
watchOS: Will direct playback to the companion
PlayerChangeRequest
MPCRTCEventConsumer: Can't send RTC message. session=nil. category=%{public}@
MPCRTCEventConsumer: Sent RTC message. category=%{public}@ type=%{public}@
MPCRTCEventConsumer: RTC Message send failed. category=%{public}@ error=%{public}@
MPCRTCEventConsumer: [RTCReporting startConfigurationWithCompletionHandler:] failed with no backends
MPCRTCEventConsumer: _perceivedItemStartTime: itemStartEvent=nil
MPCRTCEventConsumer: _perceivedItemStartTime: sessionStartEvent=nil
MPCRTCEventConsumer: _payloadForItemAssetLoad: firstItemResumeEvent=nil
MPCRTCEventConsumer: _payloadForSessionSummary: sessionStartItemEvent=nil event.type=%{public}@ event.date=%{public}@
MPCRTCEventConsumer: _payloadForSessionStart: Invalid item start event. type=%{public}@ date=%{public}@
MPCRTCEventConsumer: _payloadForSessionStart: No QueueLoadEndEvent type=%{public}@ date=%{public}@
MPCRTCEventConsumer: No itemBeginEvent type=%{public}@ date=%{public}@
MPCRTCEventConsumer: Missing MPCPlaybackEngineEventPayloadKeyItemRTCHierarchyToken for MPCPlaybackEngineEventTypeItemBegin with time=%@
MPCRTCEventConsumer: Generated new RTC session. category=%@ serviceName=%@
MPCRTCEventConsumer: Cannot send RTC message. Missing queueAddEvent for event=%@ with time=%@
MPCRTCEventConsumer: testingDelegate set. RTC messages will not be sent.
MPCScriptedLooper %p: Cancelled preloading metadata.
MPCScriptedLooper %p: metadataStatus was %ld.
MPCScriptedLooper %p: Cancelled preloading playable.
MPCScriptedLooper %p: playableStatus was %ld.
MPCScriptedLooper %p: Failed to preload duration. error=%{public}@
MPCScriptedLooper %p: Cancelled preloading duration.
SeekToTime
seekToTime: %{public}@ currentTime: %{public}@ currentSceneIndex: %ld currentLoopCount: %ld URL: %{public}@ signpostID: %llu
finished: %{BOOL}d
Unable to convert timebase to host time - timebase=%{public}@ - hostTimeFromTimeBase=%{public}@
[AL] Error retrieving HLS session metadata - Asset:%{public}@ - Error:%{public}@
[AL] Time-out while retrieving HLS session metadata - Asset:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Failed to queue any items] error=%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Queue item failure - nil item] error=%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Specified first item failure] error=%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Notifying delegate [Queue item failure] error=%{public}@
MPCErrorControllerImplementation %p <%{public}@> - nil item received [Queue failure] error=%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Ending playback [Entire queue failure]
MPCErrorControllerImplementation %p <%{public}@> - Playback has not yet succeeded [Adding to queue failure set]
MPCErrorControllerImplementation %p <%{public}@> - Playback has succeeded for at least one item [Ignoring queue failure]
MPCErrorControllerImplementation %p <%{public}@> - Stopping playback for a first item or unrecoverable asset loading error. error=%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Attempting to recover from error [using item resolution] - item:%{public}@ - error:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Unable resolve error [determining final resolution] - item:%{public}@ - error:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Final error resolution reached [%{public}@] - item:%{public}@ - error:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Item error resolution failed [proposed resolution: %{public}@]- item:%{public}@ - error: %{public}@ - resolutionError:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Item error resolution succeeded [proposed resolution: %{public}@] - item:%{public}@ - error:%{public}@ - resolutionError:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Processing fatal playback error - item:%{public}@ - error:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Starting error resolution - item:%{public}@ - error:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable AirPlay failure [airPlayVideoEnded] - Actual resolution:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Unrecoverable AirPlay failure [rental requires download] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Potentialy recoverable AirPlay failure [streaming not supported on device] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
MPCErrorControllerImplementation %p <%{public}@> - Potentialy recoverable failure [general error] - Proposed resolution:%{public}@ - canResolve:%{BOOL}u - errorForResolution:%{public}@
[AL] - %{public}@: Found an asset with no sinf, skipping assets in server object database
[AL] - %{public}@: Skipping assets in the server object database [delegated lease]
[AL] - %{public}@: Skipping assets in the server object database [no online lease]
[AL] - %{public}@: Skipping assets in the server object database [no assets found]
[AL] - %{public}@: Skipping assets in the server object database [skipped due to asset load policy]
[AL] - %{public}@: Using subscription playback endpoint with operation type: %li
[AL] - %{public}@: Loading subscription lease session...
[AL] - %{public}@: Failed loading subscription asset due to missing lease session.
[AL] - %{public}@: [Lease] Has subscription lease session, using it. Lease status: %{public}@
[AL] - %{public}@: Loading %{public}@ asset from Mini Sinf...
[AL] %{public}@: MPCModelGenericAVItemSubscriptionAssetLoadOperation execute [loading asset from cache] prefersVideoContent=%{BOOL}u preferredAudio=%{private}@
[AL] - %{public}@: Loading %{public}@ asset - Preferred audio: %{private}@
[AL] - %{public}@: Using existing cached playback response: %{public}@
[AL] - %{public}@: Skipping subscription asset request [offline]
[AL] - %{public}@: Performing subscription playback request...
[AL] - %{public}@: Performing subscription accountless playback request...
[AL] - %{public}@: Skipping accountless playback request [offline]
[AL] - %{public}@: Finished subscription accountless playback request with response: %{public}@, error: %{public}@
[AL] - %{public}@: Finished subscription playback request with response: %{public}@, error: %{public}@
[BackgroundTasks] %{public}@ End [%lu]
[BackgroundTasks] %{public}@ Background Task Failed to Start.
[BackgroundTasks] %{public}@ Start [%lu]
[BackgroundTasks] %{public}@ Expired.
%{public}@ itemForItem:inSection: returning nil [no index for item in registry] item=%{public}@
%{public}@: Siri asset info: %@
MQF - loadPlaybackContext - Mismatch between request and context's user identities [self correcting] - request PRE=%{public}@ - context PRE=%{public}@
%{public}@ Failed to load identity properties. error: %{public}@
MQF %p - Supplemental playback context created: %{public}@ - reason: %ld
%{public}@ setting override start time: %{public}@ for item: %{public}@
%{public}@ setting override stop time: %{public}@ for item: %{public}@
dataSourceState %p: reloadSection:completion: loading playback context [dataSource %p] playbackContext=%{public}@ 
dataSourceState %p: reloadSection:completion: load playback context failed [dataSource %p] error=%{public}@ 
dataSourceState %p: reloadSection:completion: reload section failed [dataSource %p] error=%{public}@ 
dataSourceState %p: reloadSection:completion: reload section succeeded [dataSource %p]
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading skipped [data source loading or frozen] - _frozen=%{BOOL}u _state=%{public}ld
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading skipped [data source can't load more]
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading completed [error] error=%{public}@
dataSourceState %p: loadAdditionalItemsIfNeededWithCompletion: additional loading completed [success]
[MPCPlayActivityFeedEventConsumer] Failed to record play activity events.
[MPCPlayActivityFeedEventConsumer] Failed to fetch the bag.
[MPCPlayActivityFeedEventConsumer] Failed to flush play activity events.
MPCPlayActivityFeedEventConsumer %p - Unable to update PAF event [missing account identifier for delegated playback] - event:%{public}@ - cursor:%{public}@
MPCPlayActivityFeedEventConsumer %p - Unable to update PAF event [missing account identifier] - event:%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _updatePafEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _updatePafEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType: - could not find accountIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _getStartTimeForMostRecentPlaybackStart:withItemBeginEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _generateAggregateNoncatalogEndEventForCursor: - could not find queueItemIdentifier - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _generateAggregateNoncatalogEndEventForCursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleApplicationTerminationEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemEndEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemPauseEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemPositionJumpEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
PlayActivityFeedEventConsumer %p: _handleItemResumeEvent:cursor: - could not find queueSectionIdentifier/itemIdentifier event=%{public}@ - cursor:%{public}@
MPCDebugOverlayArtworkDataSource:loadRepresentation
MPCDebugOverlayArtworkDataSource:loadRepresentation:requestImageWithCompletion
MPCDebugOverlayArtworkDataSource:loadRepresentation:_MPCDebugOverlayView
_MPCDebugOverlayView:layout
size=%@
_MPCDebugOverlayView:imageWithActions
_MPCDebugOverlayView:render
[MPCReportingController] Recording reporting events: %{public}@
Reporting event not recorded due to it being invalid: %{public}@
Deallocating future that wasn't finalized or invalidated: %{public}@
MPCPlayerItemConfigurator %p - [AF] - No configuration possible [no player item]
MPCPlayerItemConfigurator %p - [AF] - Preferred audio format changed [configuring player item] - item:%{public}@ - downloaded:%{BOOL}u - audio format: %@ -> %@
MPCPlayerItemConfigurator %p - [AF] - AVPlayerItem setup: %{public}@ - item:%{public}@
MPCPlayerItemConfigurator %p - [AF] - Route changed to %{public}@
MPCPlayerItemConfigurator %p - [AL] - Error decoding HLS metadata [Clearing audioFormatsDictionary] - Error:%{public}@
MPCPlayerItemConfigurator %p - [AL] - Error retrieving HLS metadata - Error:%{public}@
MPCPlayerItemConfigurator %p - [AL] - Error retrieving audio formats - item:%{public}@ - error:%{public}@
MPCPlayerItemConfigurator %p - [AL] - No audio formats in HLS session data [Setting up player item using preferred audio asset type] - item:%{public}@
MPCPlayerItemConfigurator %p - [AL] - Audio formats available in HLS session data [Setting up player item] - item:%{public}@ - Preferred format:%{public}@
MPCPlayerItemConfigurator %p - [AL] - AVPlayerItem setup:%{public}@ - item:%{public}@
MPCPlayerItemConfigurator %p - [AF] - AVPlayer setup: %{public}@ - currentItem: %{public}@
MPCPlayerItemConfigurator %p - [AF] - Preferred audio quality change ignored [playing asset is downloaded] - item:%{public}@
MPCPlayerItemConfigurator %p - [AF] - Preferred asset type changed [reloading current item] - item:%{public}@
MPCPlayerItemConfigurator %p - Processing user default audio quality change
MPCPlayerItemConfigurator %p - Setting EQ to %{public}@
MPCPlayerItemConfigurator %p - Setting up EQ for %{public}@
MPCPlayerItemConfigurator %p - Configuring player item %{public}@ 
MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - Picked route does not support external display - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - Screen mirroring is on for an audio item - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
MPCExternalPlaybackControllerImplementation %p - External playback configuration [Overriding isExternalPlaybackPossible to NO] - We prefer buffered audio over url flinging for audio items - pickedRoute:%{public}@ - item:%{public}@ - reason:%{public}@
MPCExternalPlaybackControllerImplementation %p - External playback configuration [diagnosis] - input: %{public}@ -> output: %{public}@
MPCExternalPlaybackControllerImplementation %p - External playback configuration [Updating player] - usesExternalPlaybackWhileExternalScreenIsActive:%{BOOL}u, usesAudioOnlyMode:%{BOOL}u, wantsExternalPlayback:%{BOOL}u
MPCExternalPlaybackControllerImplementation %p - External playback configuration [Updating item] - queueItem:%{public}@ - externalDisplay:%{BOOL}u
Sending command: %{public}@ endpoint %{public}@...
Sending command to remote origin %@...
Searching for output devices matching UIDs: %{public}@
Send to external destination: No devices found.
Send to external destination: Not remote controllable.
No remote controllable device found among devices: %{public}@
Sending pause to future group leader at: %{public}@
Send to external destination: No matching account.
Sent %{public}@ to %{public}@
Sent %{public}@ to %{public}@: %{public}@
Sent %{public}@ to %{public}@ informational: %{public}@
Sent %{public}@ to %{public}@ error: %{public}@
The remote group leader went silent. Logs on the external device should be checked.
Got error when grouping devices: %{public}@
Cannot decode active identity
Command %{public}@ to destination: %{public}@
Cannot send command: no output devices specified in destination: %{public}@
Send to originating device: Not remote controllable.
Command %{public}@ all %lu endpoints: %{public}@
To endpoint: %{public}@
Dispatching %{public}@ command to destination: %{public}@
queueController %p: _transitionToAutoPlayState from=%{public}@ to=%{public}@
queueController %p: autoplay loading [triggered]
queueController %p: AutoPlay disabled in bag
queueController %p: failed to enable AutoPlay error: %{public}@
queueController %p: _transitionToAutoPlayState: reloading items [failed to load AutoPlay]
queueController %p: _removeContentItemID: load items if needed [preloading] section=%{public}@
queueController %p: _removeContentItemID: reloading items [finished preloading] keepCurrentItem=%{BOOL}u
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [tailPlaceholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [placeholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@ [datasource specified placeholder]
[ITFIT] queueController %p: _itemForPair: returning %{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [item from previous SIL] missingContentItemID=%{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [item not from current nor previous SIL] missingContentItemID=%{public}@
[ITFIT] queueController %p: _itemForPair: returning nil [failed to create item] missingContentItemID=%{public}@
MPCQueueController %p: _itemForContentItemID returning nil [unknown section ID] contentItemID=%{public}@
MPCQueueController %p: _itemForContentItemID returning nil [unknown section ID] contentItemID=%{public}@ identifierListSection=%{public}@
MPCQueueController %p - _itemForContentItemID:allowReuse: - Item found does not match contentItemID - item.contentItemID=%{public}@ - contentItemID=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: previousItem=%{public}@ currentItem=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: updating saved time [item changed] currentItem=%{public}@ lastSavedTime=%f
queueController %p: _currentItemDidChangeFrom:toItem: clearing deferred next content item anchor [item changed]
queueController %p: evaluating autoPlayIsTriggered [currentItem is autoPlayPlaceholder] triggered=YES
queueController %p: _currentItemDidChangeFrom:toItem: setting deferred next content item anchor [item changed to placeholder] section=%{public}@ deferredNextContentItemAnchorID=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: load items if needed [current item placeholder] section=%{public}@
queueController %p: evaluating autoPlayIsTriggered currentIndex/totalItemCount=%ld/%ld threshold=%ld triggered=%{BOOL}u
queueController %p: _currentItemDidChangeFrom:toItem: load items if needed [preloading] section=%{public}@
queueController %p: _currentItemDidChangeFrom:toItem: reloading items [finished preloading] keepCurrentItem=%{BOOL}u
queueController %p: _currentItemDidChangeFrom:toItem: reloading items [finished loading] keepCurrentItem=%{BOOL}u
queueController %p: _addAutoPlayPlaybackContext: converting PositionHead to PositionSpecified after deferredNextContentItem [head (current item was placeholder)]
queueController %p: _addAutoPlayPlaybackContext: failed to convert to deferredNextContentItem PositionSpecified [deferredNextContentItemID is nil]
queueController %p: _addAutoPlayPlaybackContext: converting PositionSpecified item to deferredNextContentItem [specified placeholder item]
queueController %p: _addAutoPlayPlaybackContext: adding data source [head] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [last] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [specified] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [after section] section=%{public}@ afterSection=%{public}@
queueController %p: _addAutoPlayPlaybackContext: adding data source [at start] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: failed adding data source [tail, not implemented] section=%{public}@
queueController %p: _addAutoPlayPlaybackContext: setting nextContentItemID [preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addAutoPlayPlaybackContext: setting nextContentItemID [no preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addAutoPlayPlaybackContext: state change [state: ready]
queueController %p: _addAutoPlayPlaybackContext: reloading items [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addAutoPlayPlaybackContext: calling completion after completed reload [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: setting SIL shuffle type [first data source] shuffleType=%{public}@
queueController %p: _addPlaybackContext: disabling auto play [data source unsupported]
queueController %p: _addPlaybackContext: [entering shared listening mode] SLQF=<%{public}@ %p>
queueController %p: _addPlaybackContext: converting PositionHead to PositionSpecified after deferredNextContentItem [head (current item was placeholder)]
queueController %p: _addPlaybackContext: failed to convert to deferredNextContentItem PositionSpecified [deferredNextContentItemID is nil]
queueController %p: _addPlaybackContext: converting PositionSpecified item to deferredNextContentItem [specified placeholder item]
queueController %p: _addPlaybackContext: adding data source [head] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [last] section=%{public}@
queueController %p: _addPlaybackContext: adding data source [specified] section=%{public}@ afterItem=%{public}@ inSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [after section] section=%{public}@ afterSection=%{public}@
queueController %p: _addPlaybackContext: adding data source [at start] section=%{public}@
queueController %p: _addPlaybackContext: failed adding data source [tail, not implemented] section=%{public}@
queueController %p: _addPlaybackContext: setting shuffle type [first data source] shuffleType=%{public}@
queueController %p: _addPlaybackContext: setting SIL shuffle type [no current item] shuffleType=%{public}@ startItem=%{public}@ startSection=%{public}@
queueController %p: _addPlaybackContext: setting nextContentItemID [preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addPlaybackContext: setting nextContentItemID [no preferred start item, no current item] nextContentItemID=%{public}@
queueController %p: _addPlaybackContext: state change [state: ready]
queueController %p: _addPlaybackContext: reloading items [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: calling completion after completed reload [added data source] keepCurrentItem=%{BOOL}u
queueController %p: _addPlaybackContext: freezing section [play later] section=%{public}@
queueController %p: _identifierListIDPairForQueueIDPair: failed to convert to identifierListID [invalid container ID (queueSectionID)] inSharedListeningMode=YES queueIDSection=%{public}@ queueIDItem=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [defered to queueCoordinator:itemToFollowItem:] item=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [rootItem for offset zero] item=%{public}@
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [returning nil] contentItemID=%{public}@ jumpToItem=%{BOOL}u reachedEnd=%{BOOL}u
[ITFIT] queueController %p: itemToFollowItem:direction:distance:jumpToItem: [defered to _contentItemIDWithOffset:%ld] item=%{public}@
queueController %p: jumpToItem:inSection: ignoring request to jump to item that is already current [InterposingHost] currentContentItemID=%{public}@
queueController %p: jumpToItem:inSection: setting nextContentItemID [InterposingHost] nextContentItemID=%{public}@
queueController %p: jumpToItem:inSection: reloading items [jump to item]
queueController %p: jumpToItem:inSection: failed [content item not in SIL] contentItemID=%{public}@
queueController %p: sessionDidEnd: [InterposingHost] calling publisher.leaveSharedSession commandID=%{public}@
queueController %p: sessionDidEnd: [InterposingHost] publisher.leaveSharedSession complete status=%{public}@
queueController %p: didDequeueShuffledItemsInSectionedIdentifierList: ignoring SIL change [state: loading]
queueController %p: dataSourceDidChangeItems: ignoring SIL change [state: loading]
queueController %p: dataSourceDidChangeItems:inSection: ignoring SIL change [dataSourceState: loading]
queueController %p: dataSourceDidChangeItems:inSection setting nextContentItemID [current item no longer exists] nextContentItemID=%{public}@
queueController %p: dataSourceDidChangeItems:inSection: reloading items [SIL changed] keepCurrentItem=%{BOOL}u
queueController %p: autoplay waiting for trigger [finished waitingForItems]
queueController %p: autoplay unsupported [no queue references]
queueController %p: autoplay disabled [finished waitingForItems]
queueController %p: dataSourceDidAddItems: ignoring SIL change [state: loading]
queueController %p: engine:didChangeItemElapsedTime:rate: updating saved time [engine time changed] currentItem=%{public}@ lastSavedTime=%f
queueController %p: engine:didChangeToState: updating saved time [changed to state %{public}@] currentItem=%{public}@ lastSavedTime=%f
queueController %p: itemToFollowItem: previousContentItemID=%{public}@
queueController %p: itemToFollowItem: enumerating [deferredNextContentItem] anchorID=%{public}@
queueController %p: itemToFollowItem: recursing [deferredNextContentItem] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [deferredNextContentItem - still loading]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [deferredNextContentItem - still loading - shuffled] loadingSectionIdentifier=%{public}@
queueController %p: itemToFollowItem: recursing [deferredNextContentItem - no new items]
[ITFIT] queueController %p: itemToFollowItem: returning nil [invalid nextContentItemID] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [invalid nextContentItemID] nextContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [nextContentItemID]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [nextContentItemID mismatch] nextContentItemID=%{public}@
queueController %p: itemToFollowItem: [missingIDSet intersects nextItemIDSet] missingIDSet=%{public}@ nextItemIDSet=%{public}@
queueController %p: itemToFollowItem: [missingIDSet does not intersect nextItemIDSet] missingIDSet=%{public}@ nextItemIDSet=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning nil [previous item is placeholder]
[ITFIT] queueController %p: itemToFollowItem: returning nil [repeat one item no longer exists] previousContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [repeat one item no longer exists] previousContentItemID=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [repeat one]
queueController %p: itemToFollowItem: enumerating [next item search]
queueController %p: itemToFollowItem: enumeration starting at beginning
queueController %p: itemToFollowItem: enumeration starting at %{public}@ 
 %{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ [enumerated next item]
queueController %p: itemToFollowItem: enumeration encountered tail of section %{public}@
queueController %p: itemToFollowItem: load items if needed [enumerated to tail] section=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [started loading]
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [still loading]
[ITFIT] queueController %p: itemToFollowItem: unexpected state found state=%ld section=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning %{public}@ placeholder [still loading - shuffled] loadingSectionIdentifier=%{public}@
[ITFIT] queueController %p: itemToFollowItem: returning nil [no enumerated items]
queueController %p: itemToFollowItem: reloading items [loading finished, same placeholder] section=%{public}@ keepCurrentItem=%{BOOL}u
queueController %p: reloadWithPlaybackContext: reloading items [first data source]
queueController %p: reloadWithPlaybackContext: completed [first data source] - error=%{public}@
queueController %p: autoplay waiting for trigger [new supported content]
queueController %p: setShuffleType: setting SIL shuffle type [setShuffleType] shuffleType=%{public}@ startItem=%{public}@ startSection=%{public}@
queueController %p: reshuffle: setting SIL shuffle type [reshuffle] shuffleType=MPShuffleTypeSongs
queueController %p: reset
queueController %p: reset: setting SIL shuffle type [reset] shuffleType=%{public}@
queueController %p: _addPlaybackContext: state change [state: loading]
queueController %p: setRepeatType: reloading items [setRepeatType]
queueController %p: setQueueCoordinator: reloading items [queue coordinator changed]
queueController %p: jumpToFirstContentItem: setting nextContentItemID [jumpToFirstContentItem] nextContentItemID=%{public}@
queueController %p: jumpToFirstContentItem: reloading items [jump to item]
queueController %p: jumpToContentItemID:userInitiated: setting nextContentItemID [jumpToContentItemID] nextContentItemID=%{public}@ - userInitiated=%{BOOL}u
queueController %p: jumpToContentItemID:userInitiated: reloading items [jump to item]
queueController %p: jumpToContentItemID:userInitiated: failed [content item not in SIL] contentItemID=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: processing data source %{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: skipping unknown section - section=%{public}@
QC-FinalizeDataSource
section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [%{public}@] section: %{public}@
QC-FinalizeDataSource-Rectify
QC-FinalizeDataSource-Replace
MPCQueueController %p - finalizeStateRestorationWithAccountManager: account rectification [%{public}@] section: %{public}@ - originalPlaybackContext
QC-FinalizeDataSource-Original-Rectify
reasons=%{public}@
QC-FinalizeDataSource-Add
MPCQueueController %p - finalizeStateRestorationWithAccountManager: adding playback context failed (autoplay) - dataSource=%{public}@ section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: adding playback context failed - dataSource=%{public}@ section=%{public}@
MPCQueueController %p - finalizeStateRestorationWithAccountManager: replacing SIL data source failed - dataSource=%{public}@ section=%{public}@
queueController %p: evaluating autoPlayIsTriggered [loading artwork for autoPlayPlaceholder] triggered=YES
MPCQueueController %p - initWithCoder: setting autoPlayIsTriggered = YES [decoded non-nil autoPlayIdentifierList]
MPCQueueController %p - initWithCoder: skipping unknown nextContentItemID - nextContentItemID=%{public}@
MPCQueueController %p - initWithCoder: skipping unknown deferredNextContentItemAnchorID - deferredNextContentItemAnchorID=%{public}@
queueController %p: containsTransportableContent: NO [no items]
queueController %p: containsTransportableContent: NO [items greater than maximum queue size] itemCount=%ld maximumSize=%ld
[SLQF] %p _transitionToState: from=%{public}@ to=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentAdded item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentReordered item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=ContentReplaced item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [missing AVItem for SIL Item ID] event=Reaction item=%{public}@
[SLQF] %p _mpcSharedListeningEventForICLiveLinkEvent: [unknown item] event=Reaction itemIdentifier=%{public}@
[SLQF] %p _MPSILItemIdentifierForICSharedListeningItemIdentifier [unknown SharedListening ID] id=%{public}@
[SLQF] %p _ICSharedListeningForMPSILItemIdentifier [unknown SIL ItemID] id=%{public}@ IDRegistry=%{public}@
[SLQF] %p _enqueuePendingActionWithLabel: enqueuing action=%{public}@
[SLQF] %p _dequeuePendingActions: calling action [expired] action=%{public}@
[SLQF] %p _dequeuePendingActions: stopping [no such item] missingItemID=%{public}@
[SLQF] %p _dequeuePendingActions: stopping [placeholder item] idSet=%{public}@
[SLQF] %p _dequeuePendingActions: calling action [satisfied] action=%{public}@
[SLQF] %p playbackCoordinator:identifierForPlayerItem: [ignoring unknown itemID] itemID=%{public}@ avPlayerItem=%{public}@
[SLQF] %p liveLink:didReceiveEvent: [converted to MPCSharedListeningEvent] icEvent=%{public}@ mpcEvent=%{public}@
[SLQF] %p liveLink:didReceiveEvent: dropping event  [state not Active] state=%{public}@ event=%{public}@
[SLQF] %p liveLink:didReceiveDirectCurrentItemChanged:fromParticipant: [setting shouldRefreshBeforeActive] state=%{public}@ deferredCurrentItemID=%{public}@ participant=%{publich}@
[SLQF] %p liveLink:didUpdateQueue: setting shouldRefreshBeforeActive [state not Active] state=%{public}@
[SLQF] %p liveLink:didUpdateParticipants: setting shouldRefreshBeforeActive [state not Active] state=%{public}@
[SLQF] %p liveLink:didEncounterError: [attempting retry] error=%{public}@
[SLQF] %p liveLink:didEncounterError: [not attempting retry] error=%{public}@
[SLQF] %p didJumpToItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p addPlaybackContext:afterItem: [ignoring unknown itemID, adding to beginning] afterItemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown afterItemID] afterItemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p moveItem:beforeItem: [ignoring unknown beforeItemID] beforeItemID=%{public}@
[SLQF] %p removeItem: [ignoring unknown itemID] itemID=%{public}@
[SLQF] %p loadPlaybackContext:completion [allocating live link] liveLink=%p sessionID=%{public}@
[SLQF] %p loadPlaybackContext:completion [reusing live link] liveLink=%p sessionID=%{public}@
AVController: queue boundary, restarting queue [%{public}@]
MPCPlaybackEngine: -[AVAudioSession setCategory:%{public}@ mode:%{public}@]
MPCPlaybackEngine: Unable to set audio session category to %{public}@: %{public}@. Retrying in 1s.
_MPCAVController %p - playbackHasStartedForItem: [marking play as successful] item=%{public}@
PSP: Setting hasPlayedSuccessfully: [playbackHasStartedForItem] playerID=%{public}@ item=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: nil item received [Queue failure] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Failed to queue any items] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Queue item failure - nil item] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Ending playback [Entire queue failure]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: playback has not yet succeeded [Adding to queue failure set]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: playback has succeeded for at least one item [Ignoring queue failure set]
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate and ending playback [Specified first item failure] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Notifying delegate [Queue item failure] error=%{public}@
_MPCAVController %p - handlePlaybackErrorWithUserInfo: Stopping playback for a first item or unrecoverable error. error=%{public}@
Setting %{public}@ EQ to %{public}@}
Setting up EQ for %{public}@
MPCPrivateListeningStateSource %p - Setting override - overrideValue=%{BOOL}u
MPCPrivateListeningStateSource %p - Removing override
%{public}@ Failed to load private listenting value from account. err=%{public}@
MPCPrivateListeningStateSource %p - Value from override - overrideValue=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from user identity %{public}@ - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from init - value=%{BOOL}u
MPCPrivateListeningStateSource %p - Value from defaults - value=%{BOOL}u
Failed to set output devices on primary endpoint: %{public}@
Searching for endpoint, pilot %{public}@
Not being airplayed to
Not a stereo pair
Searching endpoint for leader: %{public}@
Pair is not group leader. Endpoint: %{public}@
No discoverable pair
Using local endpoint.
Not a home theater.
Local endpoint: %{public}@
Breakaway from endpoint: %{public}@
Discovered primary endpoint: %{public}@
Takeover legacy endpoint: %{public}@
No discovered endpoint, use local
Discover logical devices: %{public}@
Discover devices of group: %{public}@
Discover devices: %{public}@
Modify context: slow error: %{public}@
Modify context: slow
[MPCReportingPlaybackObserver] ItemDidChangeWhenReloadingPlaybackContextNotification _isReloadingWithPlaybackContext=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification playbackState=%d
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification _isReloadingWithPlaybackContext (was=%{BOOL}u, is=%{BOOL}u), _hasPendingContainerChange=%{BOOL}u, shouldPostPlayEndEvent=%{BOOL}u
[MPCReportingPlaybackObserver] ReloadWithPlaybackContextNotification ignoring notification - playback state=%d, _isReloadingWithPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification _isReloadingWithPlaybackContext=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u - returning
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification oldPlaybackState == playbackState (%d) - returning
[MPCReportingPlaybackObserver] PlaybackStateDidChangeNotification currentItem: %p, _hasPendingContainerChange=%{BOOL}u, _isReloadingWithPlaybackContext=%{BOOL}u, oldPlaybackState=%d, playbackState=%d
[MPCReportingPlaybackObserver] ItemWillChangeNotification Item will change from: %p to: %p, _hasPendingContainerChange=%{BOOL}u, _isReloadingWithPlaybackContext=%{BOOL}u, playbackState=%d, updatedPlaybackState=%d, willIgnoreItemChangeNotification=%{BOOL}u, _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
[MPCReportingPlaybackObserver] ItemWillChangeNotification did not find valid end reason to post event
[MPCReportingPlaybackObserver] DidReloadWithPlaybackContextNotification _isReloadingWithPlaybackContext (was=%{BOOL}u, is=%{BOOL}u), _itemDidChangeWhenReloadingPlaybackContext=%{BOOL}u
Audio tap reported samples before we had an appropriately sized buffer
sharedListeningTracklist:modelRequest:perform
items=%lld; error=%{public}@
sharedListeningTracklist:modelRequest:enumerate
items=%lld
[SLQF] %p getSharedListeningTracklist failed [invalid start item IDs] startItemIdentifiers=%{public}@
[SLQF] %p getSharedListeningTracklist [dropping unsupported IDs] unsupportedIDs=%{public}@
section=%ld
sharedListeningTracklist:modelRequest:scramble
[AL] - MPCAudioAssetTypeSelector - Audio format selection [from audio asset type & route]: %{public}@
[AL] - MPCAudioAssetTypeSelector - Starting audio format selection [from preferences & route] - item:%{public}@
[AL] - MPCAudioAssetTypeSelector - Audio format selection [from preferences & route]: %{public}@
[AL] - MPCAudioAssetTypeSelector - No enhanced audio available on this store front
[AL] - MPCAudioAssetTypeSelector - Audio type selection [from preferences]: %{public}@
[AL] - MPCAudioAssetTypeSelector - Starting Audio type selection [from preferences] - item:%{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been denied by client for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been granted by client for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content is allowed for: %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content playback is not allowed for any item - %{public}@
MPCExplicitContentAuthorizationManager %p - Explicit content is not allowed and failing silently in accordance with business rules for: %{public}@
MRC %{public}@: Undo optimistic state [failed] command=%{public}@ status=%{public}@
MRC %{public}@: Undo optimistic state [timeout] command=%{public}@
SendCommand:groupDevicesAndSendCommand
SendCommand:sendCommandToPlayer
MRC: Resolving player path %@
MRC: Resolved player path %@ (resolved = %@)
[MPCModelStorePlaybackItemsRequest] Siri asset info present, starting URL bag load...
[MPCModelStorePlaybackItemsRequest] Failed to load URL bag for Siri asset info due to error: %{public}@
[MPCModelStorePlaybackItemsRequest] Successfully loaded URL bag for Siri asset info, loading identity properties...
[MPCModelStorePlaybackItemsRequest] Failed to load identity properties for Siri asset info. error=%{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info expected to be dictionary, was another type: %{public}@
[MPCModelStorePlaybackItemsRequest] Could not find metadata dictionary in the payload. Will default to store platform response
[MPCModelStorePlaybackItemsRequest] Found metadata dictionary (%{public}@), but unexpected format
[MPCModelStorePlaybackItemsRequest] Siri asset info has payload type=%d.
Siri asset info expected to have results dictionary, found %{public}@ instead.
Siri asset info has results dictionary key, but no objects inside.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no metadata.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu metadata entities.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info resulting in preferred shuffled starting subscription adam ID %llu
Failed to import payload - error=%{public}@.
Siri asset info contained no assets.
Siri asset info contains %lu assets.
Siri asset info resulting in preferred shuffled starting with identifier=%{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info has results dictionary with invalid key or value format.
[MPCModelStorePlaybackItemsRequest] Siri asset info relevant to HLS playback: item %ld - audioTraits: %{public}@ - assetURLs keys: %{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info - Updating response for item %ld with HLS info: %{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info %{public}@ HLS asset info
No device for %{public}@
Successfully connected to external device.
No origin for %{public}@
Connection failed %{public}@: %{public}@
EVC: json decode error: %{public}@
EVS: emitEventType time=%{time_t}zd continuousTime=%ldns id=%{public}@: type=%{public}@
EVS: emitEventType id=%{public}@ payload=%{public}@
EVS: emitEventType failed [json bind failure] eventType=%{public}@ error: %{public}@
EVS: emitEventType failed [insert statement failed] eventType=%{public}@ error: %{public}@
EVS: emitEventType fault [subscriber ahead of event] eventType=%{public}@ consumer=%{public}@
EVC: statement error %{public}@ : %{public}@
EVC: step error: %{public}@
EVS: eventDeliveryDeferralAssertionForReason reason=%{public}@
EVS: _invalidateAssertion reason=%{public}@
EVS: removeConsumer %{public}@:%p
EVS: addConsumer consumer=%{public}@:%p
EVS: _onQueue_flush query lastEventSuccessTimestamp=%llu consumer=%{public}@
EVS: _onQueue_flush: event time jumped a large amount: %lluns consumer=%{public}@
EVS: _onQueue_flush updating lastEventSuccessTimestamp=%llu consumer=%{public}@
EVS: subscribeToEventType consumer=%{public}@:%p options=%llu eventType=%{public}@
EVS: flushEvents consumer=%{public}@:%p
EVS: cancelSubscription consumer=%{public}@:%p
EVS: dealloc: Removing database at url=%{public}@ error: %{public}@
EVS: dealloc: Removing database at url=%{public}@
EVS: databasePath: %{public}@
EVS: Unable to create events database at path: %{public}@. error:%{public}@
EVS: Unable to retrieve contents of directory. url=%{private}@ error=%{public}@
EVS: Removing database package at url=%{public}@ error: %{public}@
EVS: Removing database package at url=%{public}@
EVS: Executing create database statement: %{public}@
EVS: Unable to create events table. statement: '%{public}@' error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p - Validation succeeded [no identity on request - using local active account]
MPCModelStorePlaybackItemsRequestOperation %p  - Starting identity validation - playbackRequestEnvironment=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p - Validation failed [Request user identity has no DSID] - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [Error retrieving local user identities for validation] - error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - Validation succeeded [local account]
MPCModelStorePlaybackItemsRequestOperation %p  - Validation succeeded [delegated account]
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [no local or delegated identities match found]
MPCModelStorePlaybackItemsRequestOperation %p Failed to get subscription status for identity: %{public}@ error: %{public}@
MPCModelStorePlaybackItemsRequestOperation %p  - user is a subscriber, assuming valid
MPCModelStorePlaybackItemsRequestOperation %p  - Validation failed [no local or delegated identities match found, and user not a subscriber]
MPCModelStorePlaybackItemsRequestOperation %p  - Request doesn't contain any storeIDs nor sectionedModelObjects, completing with an empty response.
MPCModelStorePlaybackItemsRequestOperation %p completing without using store metadata controller [no remaining IDs to request]
MPCModelStorePlaybackItemsRequestOperation %p first batch complete without using store metadata controller [prioritized IDs initially loaded]
MPCModelStorePlaybackItemsRequestOperation %p requesting metadata for %ld items itemIDs=%{public}@
MPCModelStorePlaybackItemsRequestOperation %p - Falling back to existing previous response from errors: %{public}@, current item count: %li, previous item count: %li
MPCModelStorePlaybackItemsRequestOperation %p - Unable to retrieve the request user identity - requestUserIdentity:%@ - error: %{public}@
[AL] - %{public}@: Using existing subscription cached playback response despite redownload request: %{public}@
[AL] - %{public}@: Skipping redownload asset request [offline]
[AL] - %{public}@: Performing media redownload request...
[AL] - %{public}@: Missing redownload parameters.
[AL] - %{public}@: Missing store request context.
[AL] - %{public}@: Finished media redownload request with response: %{public}@, error: %{public}@
[AL] - %{public}@: Unable to extract valid load result from extracted media redownload asset response - Response:%{public}@ - Error:%{public}@
[AL] - %{public}@: Missing response item in media redownload request response
[AL] - %{public}@: Missing asset URL in media redownload request response
RQF %p [GTO %p]: _runStep: [performWithCompletionHandler] step=%{public}@
RQF %p [GTO %p]: _runStep: [completed] step=%{public}@ nextStep=%{public}@ nextStepIsFinished=%{BOOL}u
_MPCProtoDelegateInfo %p - Retrieving dsid from base identity failed - userIdentity=%{public}@ - error=%{public}@
_MPCProtoDelegateInfo %p - Received account info for potential delegation - UUID=%{private}@ - DSID=%{private}lld
_MPCProtoDelegateInfo %p - Getting delegated playback request environment failed [no valid delegation info]
_MPCProtoDelegateInfo %p - Skipping delegated playback [local identity found - different from base] - error=%{public}@
_MPCProtoDelegateInfo %p - Skipping delegated playback [local identity found - idential to base] - error=%{public}@
_MPCProtoDelegateInfo %p - Attempting delegated playback [no local identity found] - error=%{public}@
_MPCProtoDelegateInfo %p - Device does not support delegation - error=%{public}@
_MPCProtoDelegateInfo %p - Creating delegated identity failed [uuid addition failed] - error=%{public}@
_MPCProtoDelegateInfo %p - Delegation supported - properties=%{public}@
_MPCProtoDelegateInfo %p - Creating delegated identity failed [property insertion failed] - error=%{public}@
_MPCProtoDelegateInfo %p - Retrieving supported user identities failed - error=%{public}@
_MPCProtoDelegateInfo %p - Retrieving dsid from local identity failed - userIdentity=%{public}@ - error=%{public}@
[RemotePlaybackQueue] Could not set playback queue. Missing both station string ID and station ID queue %{public}@
[RemotePlaybackQueue] Could not set playback queue. Media query is nil for queue %{public}@
[RemotePlaybackQueue] Attempting to prepare Genius Playlist for store item %{public}@
[RemotePlaybackQueue] Could not set PlaybackContext for GeniusPlaybackQueue. %{public}@. <%{public}@>
[RemotePlaybackQueue] using originalPlaybackContext
[RemotePlaybackQueue] originalPlaybackContext is not supported, using supplementalPlaybackContext
[RemotePlaybackQueue] Neither the originalPlaybackContext nor the supplementalPlaybackContext are supported.
[RemotePlaybackQueue] originalPlaybackContext is not supported and no supplementalPlaybackContext was provided.
[FPPC] _prewarmSAPSigningForAccount: skipping account=%{public}@ [delegated]
[FPPC] _prewarmSAPSigningForAccount: ignoring account=%{public}@ [already prewarmed]
[FPPC] _prewarmSAPSigningForAccount: skipping account=%{public}@ [already prewarming]
fppc:prewarmSAP
fppc:prewarmSAP:bag
account=%{public}@ error=%{public}@
fppc:prewarmSAP:buildURL
fppc:prewarmSAP:signData
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [delegated]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [account doesn't use lease]
[FPPC] _prewarmMiniSINFEndpointForAccount: skipping account=%{public}@ [account already loading]
fppc:prewarmMiniSINF
fppc:prewarmMiniSINF:bag
[FPPC] _prewarmMiniSINFEndpointForAccount: ignoring account=%{public}@ [account removed while loading]
account=%{public}@ [removed]
[FPPC] _prewarmMiniSINFEndpointForAccount: ignoring account=%{public}@ [missing endpointURL or batch size] endpointURL=%{public}@ batchSize=%lld
account=%{public}@ [failed]
fppc:fetchMiniSINFs
hasMoreAssets=%{BOOL}u
fppc:fetchMiniSINFs:account:enumerateAsset
accountID=%{public}@ flavors=%d assets=%d hasMoreAssets=%{BOOL}u
fppc:fetchMiniSINFs:account
accountID=%{public}@
fppc:fetchMiniSINFs:account:request
[FPPC] _fetchMiniSINFs: failed [network failure] error=%{public}@
[FPPC] _fetchMiniSINFs: failed [import failure] error=%{public}@
accountID=%{public}@ error=%{public}@
[FPPC] _fetchMiniSINFs: finished importing sinfs for %d identifiers
fppc:fetchMiniSINFs:account:import
[FPPC] _optimisticallyFetchLeaseForAccount: skipping [account doesn't use lease] account=%{public}@
fppc:_optimisticallyFetchLeaseForAccount
fppc:_optimisticallyFetchLeaseForAccount:getHasPreparedLease
account=%{public}@
fppc:_optimisticallyFetchLeaseForAccount:prepareLease
already had lease
fetched lease
[FPPC] engine:didChangeAccounts: removing account=%{public}@
watchOS: companion connection status = %s
watchOS: audio routing info = {
    hasPickedVirtualAudioRoute = %{BOOL}u
    hasAvailableW1Route = %{BOOL}u
    speakerRouteEnabled = %{BOOL}u
watchOS: Using local origin
watchOS: Companion origin not connected. Returning no origin.
watchOS: Attempting to fetch companion origin for dispatch
watchOS: Found companion origin: %{public}@
watchOS: Companion origin not found. Returning no origin.
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Received request to authorize explicit item - item=%{public}@ - reason=%{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Explicit content not allowed [request failed] - item=%{public}@ - error=%{public}@
PlaybackEngine %p: requestAuthorizationForExplicitItem:reason:completion: - Explicit content %{public}@ [request succeeded] - item=%{public}@
PlaybackEngine %p: _updateUISnapshotIfNeeded: brightness=%f
Using new playback engine
Using legacy playback engine
PSP: _detectCrashLoopForSessionIdentifier: identifier=%{public}@ attempt=%ld
PlaybackEngine %p: _screenBrightnessDidChangeNotification: brightness=%f
PSP: Scheduling playback state preservation for player: %{public}@
PSP: Skipping playback state preservation for player: %{public}@ [not supported by client]
PSP: Skipping playback state preservation for player: %{public}@ [playback has not begun]
PSP: Saved playback state preservation for player: %{public}@
PSP: Unable to playback state preserve for player: %{public}@ [ignoring] error: %{public}@
PSP: Archiving playback state for player: %{public}@ failed with error: %{public}@
StateRestore
PSP: Requested playback state preservation for player: %{public}@
StateRestore-WaitingForAccounts
PSP: Skipping attempt to restore due to too many failed attempts: %{public}@ identifier=%{public}@
didRestore=NO
StateRestore-MRCheck
shouldRestore=%{BOOL}u
PSP: Skipping playback state preservation for player: %{public}@ [MediaRemote commands pending]
StateRestore-Load
PSP: Beginning playback state preservation for player: %{public}@
didRestore=%{BOOL}u
PSP: Finished playback state preservation for player: %{public}@ didRestore=%{BOOL}u error: %{public}@
PSP: Finished playback state preservation for player: %{public}@ didRestore=%{BOOL}u
PSP: Clearing state restoration identifier for player: %{public}@ [state restoration failed]
Starting playback preheating...
MRCPPC: Registering for endpoint topology changes with unresolved player path %@
MRCPPC: Received change for endpoint %@ (associated player path: %@). Output device no longer exists on endpoint.
MRCPPC: Registering for invalidation with player path %@ (unresolved %@)
MRCPPC: Received invalidation for player path %@ (future player path: %@)
MPCLeaseManager: %p - [Lease] - State for lease playback prevention [evaluation] - item:%{public}@ - shouldPreventPlayback:%{BOOL}u - playbackState:%ld - isPlaying:%{BOOL}u
MPCLeaseManager: %p - [Lease] - Ignoring lease playback prevention [pending reasons %{public}@]
MPCLeaseManager: %p - [Lease] - Pausing [current item (%{public}@) requested playback prevention]
MPCLeaseManager: %p - [Lease] - engine:didChangeToState: - Received user interaction event - state:%lu
MPCLeaseManager: %p - [Lease] - Can steal lease if needed
MPCLeaseManager: %p - [Lease] - prepareForPlayback: Ignoring request to prepare lease for account: %@ hasCatalogPlayback=%{BOOL}u usesLease=%{BOOL}u
MPCLeaseManager: %p - [Lease] - prepareForPlayback: preparing lease account: %@
MPCLeaseManager: %p - [Lease] - prepareForPlayback: finished [no subscription lease session] error: %{public}@
MPCLeaseManager: %p - [Lease] - prepareForPlayback: failed [failed to reload FairPlay key status] error: %{public}@
MPCLeaseManager: %p - [Lease] - prepareForPlayback: finished [already had lease with playback keys]. status: %{public}@
MPCLeaseManager: %p - [Lease] - prepareForPlayback: renewing lease account: %@
MPCLeaseManager: %p - [Lease] - prepareForPlayback: finished error: %{public}@
MPCLeaseManager: %p - [Lease] - prepareForPlayback: finished
[AccountManager] Unable to get user identities: %{public}@
[AccountManager] - Manageable user identities: %{public}@
[AccountManager] - Delegated user identities: %{public}@
[AccountManager] Unable to get DSID for delegated identity: %{public}@
[AccountManager] Failed to get URL bag for identity: %{public}@ error: %{public}@
[AccountManager] URL bag timed out. identity=%{public}@
[AccountManager] Unable to get properties for delegated identity: %{public}@ error:%{public}@
[AccountManager] Unable to get DSID for identity: %{public}@ error: %{public}@
[AccountManager] Unable to get DSID for active identity error: %{public}@
[AccountManager] - DSID found for %{public}@ [%{public}@]
[AccountManager] Failed to get subscription status for identity: %{public}@ error: %{public}@
[AccountManager] Subscription status timed out. identity=%{public}@ firstLoad=%{BOOL}u
[AccountManager] Unable to get properties for identity: %{public}@ error: %{public}@
UpdateAccounts
[AccountManager] - Updated accounts: %{public}@
[AccountManager] - Updated accounts [silent]: %{public}@
[AccountManager] - Refreshing due to previous timeout
<%{public}@: %p> isSupported: NO [user default override]
<%{public}@: %p> isSupported: %{BOOL}u [encodedMediaLibraryUniqueID] deviceLibraryUniqueID=%{public}@ encodedMediaLibraryUniqueID=%{public}@
<%{public}@: %p> isSupported: %{BOOL}u [requestLibraryUniqueID] deviceLibraryUniqueID=%{public}@ requestLibraryUniqueID=%{public}@
<%{public}@: %p> isSupported: YES [non-library request] requestClass=%{public}@
Error serializing JSONObject with scriptData. error=%{public}@ scriptData=%{public}@
MPCScriptedSceneCollectionParser: sceneCollectionForScriptData: Well-formatted V1 scene script not found [returning nil] JSONObject=%{public}@
MPCScriptedSceneCollectionParser: sceneCollectionForMetadataItems: Well-defined string script data corresponding to %{public}@ not found [returning nil] metadataItems=%{public}@
Cannot decode override user identity. Using active account.
MPCLeaseController: %p -  [Lease] - Relinquishing lease for %{public}@
MPCLeaseController: %p -  [Lease] - Requesting lease for %{public}@
MPCMediaFoundationTranslator %p - itemToFollow:%{public}@ - direction:%ld - distance:%ld - reason:%ld
[ITFIT] MPCMediaFoundationTranslator %p - queueController %p -  Discarding returned item and requesting a new one [item cannot be reused] - Discarded item:%{public}@
[ITFIT] MPCMediaFoundationTranslator %p - queueController %p - itemToFollow:direction:distance: -> next item found %{public}@ 
[MPCModelRadioGetTracksStep] Using Siri Asset Info as side-packed getTracks response.
[MPCModelRadioGetTracksStep] Siri Asset Info provided with invalid content: %{public}@
[MPCModelRadioGetTracksStep] Siri Asset Info failed to deserialize with error: %{public}@.
[MPCModelRadioGetTracksStep] Siri Asset Info expected to be a dictionary, but is %{public}@ instead.
[MPCModelRadioGetTracksStep] Failed to convert Siri Asset Info into UTF-8 data.
%@_END (%x) CANCELLED: %.3fs %@
%@_END (%x): %.3fs %@
%@_BEGIN (%x): %@
%@ (%x): %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Account Manager accounts: %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Base account for DSID %@: %@
rectifiedPlaybackRequestEnvironmentForAccountManager - Base account missing & replaced by activeAccount with DSID %@
Unexpected LOCAL_DEVICE identifier.
MPCAssistantEncodings (decode): route UID decoding table
MPCAssistantEncodings (decode): could not decrypt: %{public}@
MPCAssistantEncodings (decode): hashed %{public}@ = decoded %{public}@
Error decoding route UID: %{public}@
Error encoding route UID: %{public}@
Setting output devices on the shared audio presentation context: %{public}@
Failed to set output devices on the shared audio presentation context: %{public}@
%{public}@
discovering UIDs: %{public}@
force remove for output devices: %{public}@
completed error: %{public}@
completed
result: %{public}@
discovered: %{public}@
no origin from endpoint: %{public}@
connected to origin %{public}@ on endpoint %{public}@
origin %{public}@ leader %{public}@
origin %{public}@ assumed leader %{public}@
origin %{public}@ contains %{public}@
origin %{public}@ will remove %{public}@
sending pause to origin %{public}@
removing devices from origin %{public}@
remove failed with error: %{public}@
no application on target
Originating device destination: %{public}@
Found Default Destination: Proxy Promotion
Found Default Destination: Group Leader %{public}@
Group leader endpoint is: %{public}@ error: %{public}@
Group leader endpoint is: %{public}@
Found Default Destination: WHA Group ID %{public}@
Send Playback Archive: %@
Failed to create external representation from %@ with error %@ and status %@
Send Queue: %{public}@
Send Queue (User Identity): %{public}@ error: %{public}@
Send Queue (User Identity): %{public}@
Send Command: %{public}@
No valid destination provided.
No identifiers requested, processing locally.
Existing group ID requested, processing locally.
Local identifier requested, processing locally.
Send to destination: %{public}@
Attempting local device system music context modification to prepare for local playback.
Send to destination: LOCAL
Command completed
Send Command Result: %{public}@, [%{public}@] informational: %{public}@
Send Command Result: %{public}@, [%{public}@] error: %{public}@
Send Command Result: %{public}@, [%{public}@]
[MPCAssistantGetVolume] Completing with error: %{public}@
[MPCAssistantGetVolume] Completing with volume: %f
Unbalanced call `_setupBoormarkingTimerForItem/`tearDownBookmarkingTimer` [Check the logs] - Item %{public}@
MPCItemBookmarker %p - Unexpected rate change to %.1f received [Should be handled by playbackDidStart/Stop] - item=%{public}@
MPCItemBookmarker %p - playbackDidStopForItem - item=%{public}@ - time:%.2fs
MPCItemBookmarker %p - playbackDidStartForItem - item=%{public}@ - time:%.2fs
MPCItemBookmarker %p - Current loaded item bookmark data updated %{public}@
MPCItemBookmarker %p - Previous loaded item bookmark data updated %{public}@ - PlaybackStoppedTime:%.2fs
RQF %p: Removing %ld restricted tracks from section
rqf:_removeRestrictedTracks:diff
changes=%{public}@
rqf:_removeRestrictedTracks:apply
applying
RQF %p: personalization response is invalid
RQF %p: adding get tracks operation operationCount=%lld
rqf:_handlePersonalizationResponse
rqf:_handlePersonalizationResponse:diff
rqf:_handlePersonalizationResponse:apply
final tracklist loading completion startItemIdentifier=%{public}@
numberOfItems=%lld
RQF %p: _handleGetTracksResponse: failed [no track response] error=%{public}@
RQF %p: _handleGetTracksResponse: merging playback queue: currentIndex=%lld
rqf:_handleGetTracksResponse:merge
rqf:_handleGetTracksResponse:personalize
 error=%{public}@
RQF %p: _errorForRequest:withError: - Received not connected to internet error - current network type: %li - cellular data allowed: %{BOOL}u
RQF %p: _errorForRequest:withError: - Transforming error to cellular restricted error instead of: %{public}@
RQF %p: _errorForRequest:withError: - (Watch) Transforming error to cellular restricted error instead of: %{public}@
RQF %p: _errorForRequest:withError: - Transforming error to radio queue feeder network unavailable instead of: %{public}@
rqf:detectSignOut:getUserIdentityProperties
didSignOut=%{BOOL}u error=%{public}@
didSignOut=%{BOOL}u
RQF %p: _detectSignOutForIdentityStore: freezing tracklist [nil active account]
[BackgroundTasks] %{public}@ Expired [%lu]
RQF %p: _updateAdditionalLoadingSupport: loading additional items enabled
RQF %p: _updateAdditionalLoadingSupport: loading additional items disabled [cellular streaming restricted]
rqf:reloadSection
rqf:reloadSection:diff
rqf:reloadSection:apply
RQF %p: loadAdditionalItemsForSection: section=%{public}@ preferredItemCount=%ld
rqf:loadAdditionalItems:loadTracks
RQF %p: loadAdditionalItemsForSection: section=%{public}@ error: %{public}@
RQF %p: loadAdditionalItemsForSection: section=%{public}@
rqf:loadPlaybackContext
RQF %p: loadPlaybackContext: context=%{public}@
rqf:loadPlaybackContext:loadIdentityProperties
RQF %p: loadPlaybackContext: finished loading identity properties error: %{public}@
RQF %p: loadPlaybackContext: finished loading identity properties
rqf:loadPlaybackContext:getTracks
reasonType=%d
rqf:loadPlaybackContext:getHistory
reasonType=%d error=%{public}@
MPCModelRadioQueueFeeder %p: containsTransportableContent: NO [station subtype is Episode]
RQF %p: didSignificantlyChangeItem: %{public}@ before=%{public}@ after=%{public}@
RQF %p - Supplemental playback context created: %{public}@ - reason: %ld
RQF %p: Updating current item: %{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [unexpected command]
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [remove from playback queue] error=%{public}@
_MPCPlaybackEngineSessionManager %p - _performCommandEvent:completion: - failed [item in playback queue] error=%{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [before first unlock] skipping save
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion - failed with error=%{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion [out of disk space] deleting archive: %{public}@ error: %{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion [out of disk space] deleting archive: %{public}@
_MPCPlaybackEngineSessionManager %p - saveSessionWithCompletion: [out of disk space] deleted old archives attempting to save again
LoadSession
identifier: %{public}@
LoadSession-QCDecode
decodeError=%{public}@
failed to decode queue controller
LoadSession-Finalize
timeout
Unexpected state transition %@ -> %@
MPCSharedListeningPlaybackIntentDataSource.m
Unknown
Connecting
Failed
WaitingForFirstQueueUpdate
WaitingToSendQueue
Unknown/state=%ld
Missing required parameters (tracklist) [error == nil]
Content type is not supported in live link
Loading
FailedToLoad
Loaded
WaitingOnSourceAndLinkToSendQueue
SourceFailed
LiveLinkFailed
InitialQueueSending
InitialQueueFailed
BuildSucceeded
BuildTimedOut
Canceling intent loading because live link already had content %@
Live link connection failed
Build shared intent timeout
Deallocated without calling live link completion
currentPlayer
MFPlayerControllerAVPlayerDidChange
excludeFromShuffle
identifierSet
mediaType
%@ %@
%0.9fs
queueItem != nil
Invalid parameter not satisfying: %@
_MPCPlaybackEngineMediaFoundationImplementation.m
source == MFItemChangeSourceQueue
current == nil || [(MPAVItem *)current isKindOfClass:[MPAVItem class]]
previous == nil || [(MPAVItem *)previous isKindOfClass:[MPAVItem class]]
Error resolution paused
Queue Controller Contents Changed
item == nil || [(MPAVItem *)item isKindOfClass:[MPAVItem class]]
MediaFoundationStack
targetRate
currentTime
currentRate
currentItem
playbackState
_setupPlaybackStackWithPlaybackEngine failed to create a new MFPlaybackStackController
-[_MPCPlaybackEngineMediaFoundationImplementation jumpToTime:identifier:completion:]
Playback engine stack has not been setup yet. Set a playback queue first before calling %s.
-[_MPCPlaybackEngineMediaFoundationImplementation setRate:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation endScanningWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation beginScanningWithDirection:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation skipWithDirection:identifier:completion:]
previous
next
-[_MPCPlaybackEngineMediaFoundationImplementation togglePlaybackWithIdentifier:completion:]
Attemping to toggle playback with incompatible state - CurrentState:%@
-[_MPCPlaybackEngineMediaFoundationImplementation pauseForLeasePreventionWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation pauseWithFadeout:identifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation pauseWithIdentifier:completion:]
-[_MPCPlaybackEngineMediaFoundationImplementation playWithRate:identifier:completion:]
InternalEndPlayback_%@
MPCPlaybackEngine: AVAudioSessionCategory cannot be nil.
MFAudioSessionConfiguration
InternalPauseWithFadeout_%@
Playback engine implementation no longer exist
Unable to find a start item in the playback context %@
-[_MPCPlaybackEngineMediaFoundationImplementation replaceCurrentItemWithPlaybackContext:identifier:completionHandler:]
Playback engine implementation no longer exists
Q8@?0
_MPCPlaybackEngineMediaFrameworkImplementation
^v24@?0^{os_state_hints_s=I*II}8@?<^v@?@"NSDictionary">16
playQueueIdentifiersFuture=%@ playingIdentifierFuture=%@ playerPathObserver=%@
Queue Identifier Changed
v16@?0@"MPNowPlayingContentItem"8
Failed to get playing identifier
Playing Identifier Changed
Failed to get play queue identifers
v32@?0@"NSString"8Q16^B24
v24@?0@"MPNowPlayingContentItem"8@"NSError"16
Content item completed without error or value: %@
Item Changed: 
Play Queue Identifiers Changed
sampleRate
layout
channelCount
bitDepth
codec
bitrate
contentType
CRABS
com.apple.radio.ping.jingle
info
v24@?0@"ICMusicSubscriptionLeaseSession"8@"MPSubscriptionStatusPlaybackInformation"16
.cloud
app.music.match
app.music.purchase
app.music.subscription
app.music.synced
app.music.uploaded-content
app.music.tilt.track
app.music.tilt.stream-track
/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-4019.120.118.1/MediaPlaybackCore/Engine/Implementation/Model/Generic AV Item/_ios_tvos_watchos/MPCModelGenericAVItem.m
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseLoadCalloutQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseSessionLoadQueue
v16@?0@"ICMusicSubscriptionLeaseSession"8
Cellular
Bluetooth
WiFi
Bridged WiFi
Wired Ethernet
Other
/bfa1LxXd7G1WqHujpjsdA
v24@?0@"MPModelSong"8@"NSError"16
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.LyricsOperationQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.timedMetadataOperationQueue
v24@?0@"ICSecureKeyDeliveryResponse"8@"NSError"16
stream-provider-id
q24@?0@"MPCPlayerAudioFormat"8@"MPCPlayerAudioFormat"16
v24@?0@"MPCSuzeLeaseSession"8@"NSError"16
availableMediaCharacteristicsWithMediaSelectionOptions
v16@?0@"MPModelFileAsset"8
None
surround
atmos
spatial
high-res lossless
lossless
@"ICURLSession"8@?0
wifi.
com.apple.MediaPlayer.MPCModelGenericAVItem.streaming_playback.
[AL] - %@: Attempting to cache asset of type %@ using HLS caching logic [fatal]
MPCModelGenericAVItem.m
path mismatch
host mismatch
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.sCompletionSerialQueue
isPlaceholder
com.apple.mobileipod
DisableOptimizeAccessForLinearMoviePlayback
com.apple.MediaPlayer.MPCModelGenericAVItem.assetLoadOperationQueue
Unspecified
Progressive
HLS [stereo]
HLS [spatial]
HLS [lossless]
HLS [hr lossless
audio
video
tvshow
movie
music
musicvideo
uploadedaudio
uploadedvideo
 not
%@: Missing DSID in delegated identity properties - skipping playback
%lli
%@ [repeatIteration=%ld] %@
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.accessQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.utilitySerialQueue
AlwaysUse256kbpsQuality
AlwaysUse64kbpsQuality
v32@?0^{__CFArray=}8^{__CFArray=}16^{__CFError=}24
itemIndex
containerIndex
v28@?0^v8@"NSString"16f24
com.apple.MediaPlaybackCore/logging
Unsupported
Device
Account
Queue
kMRMediaRemote
<unknown>
Unreachable
Likely Reachable
Reachable
q24@?0@"MSVFrameworkDescription"8@"MSVFrameworkDescription"16
## PlaybackStack
# Player: %@
Unexpected implementation class found: %@
No player found for %@
v24@?0Q8^B16
Found unplayable object in SOD: %@
Attempting to populate items for non model object: %@
MPCModelStorePlaybackItemsRequestAccumulator.m
@32@?0@8@"NSIndexPath"16^B24
@32@?0@8q16^B24
Unknown playlist entry: %@
v32@?0@"NSIndexPath"8Q16^B24
storeContentReference
libraryItemContentReference
libraryArtistContentReference
libraryAlbumContentReference
endTimeReciever
refId
Duration
PerceivedTotalStartupTime
TracklistLoadDuration
SecureKeyBlockingLoadDuration
B24@?0@"MPCPlaybackEngineEvent"8@"<MPCPlaybackEngineEventStreamCursor>"16
com.apple.MediaPlayer.MPAssistantAnalyticsReportingController.eventQueue
com.apple.MediaPlaybackCore/Siri
 playerPath=%@
cloudUniversalLibraryID
purchaseHistoryID
cloudID
storeSubscriptionAdamID
storeAdamID
contentItemID
delegateInfoID
DelayMusicServerConnection
Queue was interrupted by another queue
Prepare queue failed with unexpected start item
Failed to apply queue modifications
v32@?0@"NSString"8@"MPMusicPlayerQueueDescriptor"16^B24
performQueueModifications is not supported for the system music application
_MPCMusicPlayerControllerServer.m
InsertIntoPlaybackQueue is currently not enabled or the playback engine is not ready
Failed to prepare queue for append
Queue descriptor was not provided.
MusicKit
Failed to prepare queue for prepend
SetPlaybackQueue is currently not enabled or the playback engine is not ready
Failed to prepare to play
iapd
Preparing queue timed out
%@:%@ does not support artwork.
%@:%@ did not provide image data.
PlayItemInQueue is currently not enabled or the playback engine is not ready
Unable to play item %@
No item provided to setNowPlayingItem
MPCMusicPlayerControllerServer
Playback response has no valid file asset: %@
q24@?0@"MPStoreFileAssetInfo"8@"MPStoreFileAssetInfo"16
q24@?0@"MPStoreRadioStreamAssetInfo"8@"MPStoreRadioStreamAssetInfo"16
flavor IN %@ AND streamURL != nil
new key server URL
new key certificate URL
alt. HLS key server URL
alt. HLS key certificate URL
key server URL
key certificate URL
URLs
protected content support storage URL
alt. HLS playlist URL
assetURL
Purchase bundle dictionary
Overview
downloaded: %@
audio asset type: %@
path extension: %@
online keys required: %@
cloud streaming: %@
HLS: %@
allows caching: %@
<%@: %p %@>
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.serialWorkQueue
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.calloutQueue
tracks
app.music.media-clip
@"MPArtworkCatalog"16@?0d8
Unsupported command event: %@
v24@?0@"MPCPlaybackIntent"8@"MPCPlayerCommandStatus"16
com.apple.music.shared-session-url-components
?id=%@&key=%@
Failed to build shared queue intent from current queue.
com.apple.music.live-link-identity-json
Unable to build shared queue tracklist from current queue.
Failed to share queue [no current item]
Failed to setRate:%g
Failed to jumpToTime:%g
Cannot find session with identifier: %@
unexpected current item after set playback session: expectedContentItemID=%@ currentContentItemID=%@
No current item or session load failure: %@
ignoring unimplemented non-immediate priority: %ld
session does not exist for identifier: %@
Command did not contain queue data.
Failed to finalize queue controller
Unsupported sessionType %@
Failed to decode queue data
com.apple.MediaPlaybackCore.playbackSession-v4.opack
com.apple.MediaPlaybackCore.playbackSession-v3.opack
Cannot create station with seed item without current item
Failed to get radio intent from song: %@
Failed to add radio station to queue: %@
Failed to build intent into playbackContext: %@
now_playing
Failed to activate audio session
Failed to load playback context: %@
Failed to build radio context from playback intent: %@
siri
Failed to reload playback context: %@
Failed to build playback context from queue: %@
SharedQueue feature requires a subscription
Failed to end playback
Failed to verify play queue: %@
Cannot override mutated queue without override.
Account failed to prepareToPlay: %@
Account is not authenticated: %@
Cannot find item to remove: %@
Failed to remove item: %@
Failed to move item: %@
Insert operation indicated specific insertion position type, but no content item ID provided.
Failed to insert playback context: %@
Cannot modify queue due to iAP lockout
Cannot jumpToTime without a current item.
Failed to end scanning
Attempting to stop scanning without scanning
Failed to begin fast-forwarding
Failed to begin rewinding
nextTrack
endOfQueuePause_%@
Failed jumpToTime:0.0
newPlaybackImplementation must implement skipWithDirectionShouldJumpToItemStart:
_MPCMediaRemotePublisher.m
Cannot find item by trackID: %lld
Current item forbids skipping: %@
v20@?0B8@"MPRemoteCommandStatus"12
Failed to toggle playback
Cannot toggle play/pause because audio session activation failed.
Cannot pause because there is no current item.
Failed to pauseWithFadeout:%g
Failed to playWithRate:1.0
mediaserverd not available to perform command
kMRMediaRemoteOptionSenderID
 (%@)
v16@?0@"MPRemoteCommandCenter"8
storeFront
subscription
cloudLibrary
Failing due to no content in the player and no fallback intent.
Failed to load fallback playback context %@
Failed to build fallback playback context from intent %@
v16@?0@?<v@?B@"NSError">8
Playback engine implementation is nil
v32@?0@"NSError"8@?<v@?>16@?<v@?@"NSError">24
v24@?0@?<v@?>8@?<v@?@"NSError">16
Delegate failed to call completion for prepareForActivationWithCompletion:
Unable to restore state [no state restoration session ID]
Failed to load previous session
LeaveSharedSession is not supported in the legacy engine
Cannot leave shared session [not in shared session] queueController=%@
_MPCSkipNextStateRestoration
REMOTE_CONTROL_DISLIKE_TRACK_SHORT
REMOTE_CONTROL_DISLIKE_TRACK_RADIO
REMOTE_CONTROL_LIKE_TRACK_SHORT
Radio
REMOTE_CONTROL_LIKE_TRACK_RADIO
Session contains non-transportable content
Transportable representations only available for queue controller.
requestImageWithCompletionHandler: called with nil image.
v16@?0@"MPModelPlaybackPosition"8
Cached
Downloaded
v24@?0@"MPCModelGenericAVItemAssetLoadResult"8@"NSError"16
unable to find MediaPlaybackCore framework
NSBundle+MediaPlaybackCore.m
com.apple.MediaPlaybackCore
com.apple.amp.mediaplaybackcore
Default
Default_Oversize
Artwork
Assistant
MediaRemote
Middleware
Playback
Playback_Oversize
PlaybackEvents
PlaybackEvents_Oversize
PlaybackEventStream
PlaybackEventStream_Oversize
Reporting
QueueController
QueueController_Oversize
SDKPlayback
Session
Delegation
Video
SharedSession
Analytics
Sharedlistening playback context cannot be used for remote set queue.
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackContext.MPCPlaybackQueue.serialQueue
com.apple.MediaPlaybackCore.MPCModelPlaybackContext.MPCPlaybackQueue.serialQueue
Tracklist token missing model request (nil).
com.apple.MediaPlaybackCore.MPCModelPlaybackIntentDataSource.remotePlaybackQueueResolution
### State
## AutoPlay Queue
## Queue <%p> [%@]
Unexpected queueController class found: %@
MPCMediaLibraryPlaybackAssetCacheProviderErrorDomain
lossy stereo
plist
timeZone
systemReleaseType
requestUserAgent
privateListeningStateSource
deviceName
deviceGUID
storeAccountID
Cannot handle unknown playlist entry when capturing metadata.
Cannot handle unknown generic object metadata.
MPCPlaybackIntent.m
SEASON_DISPLAY_FORMAT_%@
com.apple.MediaPlayer
Expected a flattened generic object.
v24@?0@"MPModelGenericObject"8@"NSError"16
v16@?0@"<MPMutablePlaybackArchive>"8
v16@?0@"<MPMutablePlaybackArchiveDisplayProperties>"8
<ARCHIVE LOADER>
supplemental
sessionID
original
Metadata Object did not produce nowPlayingInfo: metadataObject=%@ contentItem=%@
No matching properties for reprentative object: %@
modelObject
%@ did not produce representative model object or error
com.apple.amp.MPCPlaybackIntent.MediaSuggestion
completion
 source=%@
<%@ %p: sessionID=%@>
skey
playActivityQueueGroupingID
playActivityFeatureName
accountInfo
nowPlayingContentReference
seedContentReference
radioStationURLString
radioStationID
@"MPArtworkCatalog"16@?0@"MPModelRadioStation"8
v16@?0@"<MPMutablePersonalStoreIdentifiers>"8
PlaybackEngine.implementation.currentItem.type didChange
com.apple.MediaPlaybackCore.MPCPlaybackHistoryController.operationQueue
playbackStateFuture=%@
Failed to get playback state
v16@?0@?<I@?>8
Playback State Changed
MPCAssetLoadingOperation - Asset loading failed [AVPlayerItem status failed] - Item:%@
MPCAssetLoadingOperation - Asset loading failed [No AVPlayerItem] - Item:%@
MPCAssetLoadingOperation - Asset loading cancelled - Item:%@
MPCAssetLoadingOperation - Item has no asset to load - Item:%@
isFinished
isExecuting
v32@?0@"MPAVItem"8q16@"NSError"24
Attempting to load an item which has no loadable asset: %@
MPCAssetLoader must have a configurator set to work properly
MPCAssetLoader.m
com.apple.amp.mediaplaybackcore.MPCAssetLoader
MPCAssistantStreamingAvailabilityNone
MPCAssistantStreamingAvailabilityOnNetwork
MPCAssistantStreamingAvailabilityOnCompanion
MPCAssistantStreamingAvailabilityOnDevice
MPCAssistantStreamingAvailabilityNeedsCompanion
RadioAvailabilityController
/System/Library/PrivateFrameworks/Radio.framework/Radio
v16@?0@"CSLSConnectionState"8
CSLSConnectionStateObserver
/System/Library/PrivateFrameworks/CarouselServices.framework/CarouselServices
Store Front Local Equivalency Metadata Response Finished
v16@?0@"MPModelTVSeason"8
v16@?0@"MPModelTVEpisode"8
v16@?0@"MPModelPlaylistEntry"8
v16@?0@"MPModelMovie"8
v16@?0@"MPModelGenericObject"8
MPCPlayerCommandRequestMediaRemoteOptionPlaybackContext
MPCPlayerCommandRequestMediaRemoteOptionPlaybackIntent
MPCPlayerCommandRequestMediaRemoteOptionReplaceIntent
MPCPlayerCommandRequestMediaRemoteOptionDevices
PlayerPath did not resolve route to origin: %@
MPCPlayerCommandRequest player path resolution completion not called
Failed to perform command %@
Unsupported content type
Feature requires active subscription
Queue is user curated and requires override
Either Controller or PlayerPath is required to perform a change request.
Did not attempt command because dependent command failed.
Command was cancelled before it was performed.
@16@?0@"MPCMediaRemoteCommandOperation"8
All requests must have the same player path.
Cannot perform command request without a player path [not on request, or fallback from controller] request=%@
MPCPlayerChangeRequest.m
No commands provided.
B16@?0@"MPCPlayerCommandStatus"8
<%@: %p commands=(%@)>
v16@?0@"MPCPlayerCommandStatus"8
<%@: %p command=%@>
com.apple.music.playbackqueue.tracklist
com.apple.music.playbackqueue.radio
com.apple.music.playbackqueue.sharedlistening
com.apple.mediaplayer.playbackcontext
com.apple.MediaPlaybackCore.playbackContextArchive-v1.opack
InProcess-com.apple.mediaplayer.playbackcontext
playerPath
tracklist
state
MPCPlayerStateUnknown
MPCPlayerStateStopped
MPCPlayerStatePlaying
MPCPlayerStateBuffering
MPCPlayerStatePaused
MPCPlayerStateSeeking
MPCPlayerStateInterrupted
@"MPRemoteCommandStatus"16@?0@"MPRemoteCommandStatus"8
B16@?0@"NSURLQueryItem"8
v16@?0@"ICLiveLinkIdentity<ICMutableLiveLinkIdentity>"8
playingItemProperties
tracklistRange
{-%ld, +%ld}
stationURL
stationName
stationID
seed
nowPlaying
continueListening
queueEndAction
repeat/shuffle
playbackRequestEnvironment
PlaybackRequestEnvironment
SeedContentReference
NowPlayingContentReference
StationURL
ContinueListening
Station
CL_PrefetchThreshold
CL_MaxQueueReferences
errorDomain
errorCode
event
queueLoadDuration
queueEndpoint
initialQueue
items
queueType
createAssetDuration
assetType
queueStartItem
networkChangeCount
endReason
initialItemLoadDuration
initialQueueType
initialQueueLoadDuration
initialQueueFeatureName
initialNetworkType
isHLS
perceivedPlayStartTime
networkType
finalNetworkType
stateRestoration
queuesAdded
queuesFailed
itemsPlayed
itemsFailed
unknown
natural
skip
select-song
endSession
fail
radio
library
typeUnknown
song
musicVideo
tvEpisode
playlistEntry
error
nominal
NetworkInterfaceChange
SecureKeyLoad
SessionStart
SessionSummary
QueueLoad
ItemAssetLoad
ItemSummary
UnexpectedCategory:%d
v16@?0@"RTCReporting"8
app.music.unknown
migrationPlaybackSession
com.apple.MediaPlayer.MPCRTCEventConsumer
com.apple.MediaPlaybackCore/RTC
YYYY-MM-dd HH:mm:ss.SSSXX
MPCScriptedLooperErrorDomain
Scene collection frame rate cannot be 0.
MPCScriptedLooper.m
duration
playable
metadata
status
com.apple.Music
MPCModelStorePlaybackItemsRequestSectionedModelObjects
MPCModelStorePlaybackItemsRequestShouldBatchResultsWithPlaceholderObjects
MPCModelStorePlaybackItemsRequestStoreIDs
MPCModelStorePlaybackItemsRequestWantsDetailedKeepLocalRequestableResponse
MPCModelStorePlaybackItemsRequestPlaybackRequestEnvironment
MPCModelStorePlaybackItemsRequestClientIdentifier
MPCModelStorePlaybackItemsRequestAllowLocalEquivalencies
Cannot encode MPCModelStorePlaybackItemsRequest that contains a SharedListeningQueue
MPCModelStorePlaybackItemsRequest.m
MPCModelStorePlaybackItemsRequestSectionedModelObjectsSecureCoding
app.music.queue-source.catalog
  ... (%ld remaining sections)
    ... (%ld remaining items)
  %2ld,%2ld %@
  %2ld <%ld items> %@: [
 sectionedModelObjects=[ <%ld sections>
 storeIDs=[ %@ ]
playbackRequestEnvironment=%@
<NULL>
playbackEngine
<%@:%p>
_obj
DialogAction:%@
<%@: %p title="%@" type=%@ commandRequest=%@>
<%@: %p title="%@" message="%@" actions=%@>
<%@: %p status=%@ unknown/type=%ld>
<%@: %p status=%@ customData=%@/%lu bytes
<%@: %p status=%@ error=%@>
<%@: %p status=%@ dialog=%@>
<%@: %p status=%@>
<%@: %p status=%@ unknown>
MPCErrorUserInfoKeyStoreDialogDictionary
MPCErrorUserInfoKeyLeaseStatus
MPCErrorUserInfoKeyMetricsDictionary
OutOfMemory
SessionNotRunning
DeviceAlreadyUsedByAnotherSession
NoDataCaptured
SessionConfigurationChanged
DiskFull
DeviceWasDisconnected
MediaChanged
MaximumDurationReached
MaximumFileSizeReached
MediaDiscontinuity
MaximumNumberOfSamplesForFileFormatReached
DeviceNotConnected
DeviceInUseByAnotherApplication
DeviceLockedForConfigurationByAnotherProcess
SessionWasInterrupted
MediaServicesWereReset
ExportFailed
DecodeFailed
InvalidSourceMedia
FileAlreadyExists
CompositionTrackSegmentsNotContiguous
InvalidCompositionTrackSegmentDuration
InvalidCompositionTrackSegmentSourceStartTime
InvalidCompositionTrackSegmentSourceDuration
FileFormatNotRecognized
FileFailedToParse
MaximumStillImageCaptureRequestsExceeded
ContentIsProtected
NoImageAtTime
DecoderNotFound
EncoderNotFound
ContentIsNotAuthorized
ApplicationIsNotAuthorized
OperationNotSupportedForAsset
DecoderTemporarilyUnavailable
EncoderTemporarilyUnavailable
InvalidVideoComposition
ReferenceForbiddenByReferencePolicy
InvalidOutputURLPathExtension
ScreenCaptureFailed
DisplayWasDisabled
TorchLevelUnavailable
OperationInterrupted
IncompatibleAsset
FailedToLoadMediaData
ServerIncorrectlyConfigured
ApplicationIsNotAuthorizedToUseDevice
FailedToParse
FileTypeDoesNotSupportSampleReferences
UndecodableMediaData
AirPlayControllerRequiresInternet
AirPlayReceiverRequiresInternet
VideoCompositorFailed
RecordingAlreadyInProgress
UnsupportedOutputSettings
OperationNotAllowed
ContentIsUnavailable
FormatUnsupported
MalformedDepth
ContentNotUpdated
NoLongerPlayable
NoCompatibleAlternatesForExternalDisplay
NoSourceTrack
ExternalPlaybackNotSupportedForAsset
OperationNotSupportedForPreset
IncorrectlyConfigured
SegmentStartedWithNonSyncSample
RosettaNotInstalled
OperationCancelled
ContentKeyRequestCancelled
UnknownAVError/code=%lld
LIVE_LINK_UNABLE_TO_SHAREPLAY_ALERT_ACTION
MediaPlaybackCore
LIVE_LINK_UNABLE_TO_SHAREPLAY_ALERT_TITLE
MPAssistantErrorDomain
MPCAssistantMediaRemoteSendCommandErrorDomain
MediaRemoteSendCommandErrorCode
An unknown error occurred.
The requested output device(s) were not able to be discovered.
The requested AV endpoint is not remote controllable.
Failed to establish remote control connection to the remote endpoint.
The output context was unable to be prepared for playback.
MediaRemote failed to send the remote control command to the player.
Command required stopping playback on a primary device.
Command required stopping playback on a silent primary device.
Output devices specified were not valid
A safety timeout expired
An external representation of a playback session could not be created.
controllerFuture=%@
v16@?0@"MPCMediaRemoteController"8
Controller Invalidated
account-begin
account-rectification
account-update
application-termination
application-foreground
application-background
audio-route-changed
media-server-died
media-server-reset
container-begin
container-end
device-changed
interrupt-begin
interrupt-end
audio-format-changed
asset-load-begin
asset-load-end
item-begin
item-update
item-buffer-finish
item-buffer-ready
item-buffer-stall
item-end
item-failed
item-first-audio-frame
item-first-video-frame
item-hls-stream-begin
item-hls-stream-end
item-hls-timed-metadata-begin
item-hls-timed-metadata-end
item-pause
item-placeholder-begin
item-placeholder-end
item-position-jump
item-resume
item-timed-metadata-ping
item-key-request-begin
item-key-request-end
network-reachability-changed
network-type-changed
playback-behavior-changed
policy-begin
policy-end
queue-add
queue-item-add
queue-item-remove
queue-item-reorder
queue-load-begin
queue-load-end
remote-control-begin
remote-control-timeout
remote-control-end
session-begin
session-will-begin
session-end
session-migrate-begin
session-migrate-end
session-restore-begin
session-restore-end
session-reset
shared-session-begin
shared-session-participants-changed
shared-session-synchronization-begin
shared-session-synchronization-end
account-id
account-metadata
previous-account-id
rectification-section-id
rectification-reason
route-metadata
route-should-pause
container-ids
container-kind
container-indeterminate-duration
container-metadata
private-listening-source
queue-section-id
interrupt-name
interrupt-should-resume
asset-load-error
asset-skd
key-request-error
item-did-play-to-end
item-end-position
item-ids
item-kind
item-metadata
item-jump-user-initiated
item-audio-format-metadata
queue-item-id
radio-track-info
item-rtc-hierarchy-token
rtc-service-id
item-start-position
item-start-item-id
item-end-item-id
item-stream-id
item-timed-metadata
playback-behavior-metadata
network-constrained
network-expensive
network-high-quality
network-reachability
network-type
network-signal-strength
network-signal-info
queue-load-error
queue-reporting-metadata
queue-rtc-hierarchy-token
queue-rtc-service-id
remote-control-id
remote-control-options
remote-control-source
remote-control-status
remote-control-internal-status
remote-control-type
device-metadata
session-id
session-migration-error
session-restoration-error
session-rtc-hierarchy-token
queue-account-id
queue-description
queue-delegated-account-id
queue-delegated-account-metadata
active
delegated
household-id
subscription-status
private-listening-enabled
store-account-id
store-front-id
route-description
route-is-airplay
container-title
container-playlist-version-hash
container-radio-type
container-radio-subtype
application-bundle-id
application-name
application-version
device-model
device-name
device-software-variant
system-name
system-version
system-build
application-source-version
application-uuid
device-guid
internal-carry
media-frameworks
user-agent
queue-grouping-id
feature-name
reco-data
siri-ref-id
siri-wha-metrics
item-duration
item-has-video
item-initial-position
item-start-boundary
item-end-boundary
item-artist-uploaded
item-title
item-is-start-item
item-is-placeholder
requires-mpaf
active-format
active-format-justification
alternate-formats
target-format
preferred-tiers
route
repeat-type
shuffle-type
autoplay-mode
shared-session-id
local-user-identifier
participants
originating-participant
shared-sync-error
<MPCPlaybackEngineEvent: %@ %@ [%llu] %@>
identifier
payload
type
MPCPlaybackEngineEvent.m
MPCPlaybackEngineEventMonotonicTimeWithHostTime
time.machAbsoluteTime > machAbsoluteTime
supportedCommandsFuture=%@
Failed to get supported commands
v16@?0@"<MPCSupportedCommands>"8
Supported Commands Changed
com.apple.hls.audioAssetMetadata
controller
_skippedMetadata
Could not find content item at indexPath: %@
MPCMediaRemoteMiddleware.m
MPCError
MPCSharedListeningError
MPCPlayerRequestError
MPCPlayerEnqueueError
MPCPlaybackEngineInternalError
UnableToPerformRequest
UnsupportedCommand
MissingBag
UnknownCustomQueueIdentifier
MissingTracklistData
MissingModelRequest
DelegatedAccountCreationFailure
MissingCreationPropertiesData
InvalidSuzeLeaseSessionToken
CellularRestricted
NetworkUnavailable
ExceededBagFileSizeLimit
FailedToDecodePlaylistManagerArchive
RequestTimeout
InvalidResponse
InvalidDelegatedIdentity
SubscriptionRequired
MissingSubscriptionAdamID
MissingLeaseSession
MissingLocalFilePath
AssetQualityTooLow
InvalidCachedAsset
InvalidAssetURL
AssetUnavailable
MissingRedownloadParameters
MissingStoreRequestContext
SubscriptionRequiredForSharedQueue
Cancelled
MissingArtwork
SubscriptionLeaseTaken
ExplicitContentRequiresAgeVerification
ExplicitContentIsNotAllowed
ExplicitContentAgeVerificationFailed
ExplicitContentAgeGatingFailed
InvalidPlaybackSessionMetadataForEncoding
PlaybackSessionDoesNotExist
PlaybackSessionFailedToSaveBeforeFirstUnlock
DroppedCompletion
SubscriptionAssetResponseMissingItem
FailedToResolveStartItem
NoNetworkConnection
UserIdentityNotSupported
UnsupportedPlaybackContext
UnrestorableArchive
UninitializedPlaybackStack
UnknownCode/%lld
ConnectionFailure
ContentUnavailable
ContentFailedToResolve
ContentFailedToAdd
UnableToSendCommand
CommandFailed
FailedToLoadMetadata
FailedToLoadArtwork
FailedToLoadSupportedCommands
FailedToResolve
FailedToPlaybackState
HasUserCuratedQueue
ContentNotSupportedForSharePlay
NoContentToPlay
NoCurrentItem
CannotFindReferencedItem
FeatureDisabled
CommandInvalid
CommandRequiresOverride
AccountMissing
AccountMissingSubscription
AccountMissingAuthentication
AccountNotPrepared
MediaServicesUnavailable
AudioSessionActivationFailed
FailedToPlayRate
FailedToPauseRate
FailedToToggleRate
FailedToChangeRate
FailedToJumpToTime
FailedToBeginScanning
FailedToStopScanning
FailedToEndPlayback
CannotStopScanningIfNotScanning
CannotSkipUnskippableItem
FailedToBuildPlaybackContext
FailedToLoadPlaybackContext
FailedToMoveItem
FailedToRemoveItem
FailedToLoadSession
FailedToDecodeSession
FailedToFinalizeSession
SessionRestoredUnexpectedCurrentItem
MFDescription
/System/Library/PrivateFrameworks/MediaFoundation.framework/MediaFoundation
v24@?0q8@"NSError"16
MFPlaybackStackControllerImplementation
Response did not contain asset for item identifiers: %@
vacToken
sinfs
fileExtension
LWHQ
flavor
assets.count > 0
MPCModelGenericAVItemSubscriptionAssetLoadOperation.m
sinf2
Invalid operation type: %li
-[MPCModelGenericAVItemSubscriptionAssetLoadOperation execute]_block_invoke
An error is expected for the failure to create a loadResult
Failed to send subscription playback request (accountless stream)
Failed to send subscription playback request (lease)
<%@: %p followUp>
com.apple.MediaPlaybackCore.MPCModelGenericAVItemSubscriptionAssetLoadOperation.accessQueue
Music
v32@?0@"MPModelObject"8q16^B24
B24@?0q8q16
IndexPath was not an item index path with globalIndex from registry: %ld
IndexPath not found for globalIndex from registry: %ld
MPCModelQueueFeeder.m
q16@?0@"MPQueueFeederIdentifierRegistry"8
v16@?0@"MPIdentifierSet"8
com.apple.MediaPlayer.MPCModelQueueFeeder: 
<missing request label>
Invalid request item class: %@ for %@
Request class (%@) must conform to MPCModelPlaybackRequest
Failed to resolve startItemIdentifiers: %@ for %@
Unable to apply changes [missing identifier set in new collection] index=%ld/%ld newCollection=%@
Response class (%@) must conform to MPCModelPlaybackResponse
Could not convert startItem into metadata: %@
<REPRESENTATIVE ITEM LOADER>
No start item was found for playback context: %@
Unable to obtain metadata for shuffled context: %@
v32@?0@"MPIdentifierSet"8@"NSNumber"16^B24
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.accessQueue
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.diffQueue
Could not discern required properties for %@
v32@?0@"ICRadioStationTrack"8q16^B24
UpdatedPlaybackContext is not compatible: reason = %@
_MPCQueueControllerDataSourceState.m
showInternalSections
spcb
No active context for datasoure state for section: %@
<_MPCQueueControllerDataSourceState %p> playbackContext: %@ - originalContext: %@ - supplementalContext: %@
SHARED_LISTENING
MPCJinglePlayActivityReportingControllerDidFlushEventsNotification
MPCJinglePlayActivityReportingControllerUserInfoKeyDidIncludeContainerChangeEvent
MPCJinglePlayActivityReportingControllerUserInfoDidIncludeRadioStationStartEvent
play-activity-feed-post-all-play-starts
Internal
Beta
Carrier
DEBUG
ROOTS
9999.99.99
9100
9000
CARRY
SEED
ENGINE_V2
v24@?0@"MPCPlaybackEngineEvent"8^B16
com.apple.MediaPlaybackCore/PAF
cloudCollectionID
storePlaylistVersionHash
storePlaylistGlobalID
%@ query=%@
%@ station=%@
%@ collection=%@ identifiers=%@
%@ seed=%@
%@ identifier=%@
%@ did not have connection
external device %@ did not have an origin. (connection %@, isConnected:%d isInvalidated:%d)
MPCPlayerPath
v20@?0C8^v12
Could not get active origin.
Could not discover endpoint for device UID (%@).
Missing external device for endpoint %@.
resolved player path %@ did not have an origin. (unresolved player path %@)
PlayerPathDisplayName
playerID
bundleID
 local active
 playerID=%@
 pid=%@
 bundleID=%@
 [system media app]
 playerID[MR]=%@
 pid[MR]=%@
 bundleID[MR]=%@
 origin[MR]=%@-%d
 deviceUID=%@
 route=%@
<%@:
Unsupported route type %@
MPCPlayerPath.m
+[MPCPlayerPath pathWithCustomOrigin:bundleID:playerID:]
%s is only for use with custom origins.
v24@?0@"MPArtworkRepresentation"8@"NSError"16
%@-%@
v16@?0@"UIGraphicsImageRendererContext"8
{CGSize=dd}
: %@
MPCDebugOverlayArtwork Render Window
com.apple.MediaPlaybackCore/MPCDebugOverlayArtwork
CFBundleVersion
ReleaseType
Updating Device
Updating NetworkType
Updating NetworkReachability
Updating Accounts
com.apple.MediaPlaybackCore/environment
MPCModelPlaybackIntentTracklistTokenStartItemIdentifiers
MPCModelPlaybackIntentTracklistTokenRequest
Reporting controller (%@) does not have correct parent (%@ expected, %@ actual)
reportingController != nil
MPCReportingController.m
com.apple.MediaPlayer.MPCReportingController.accessQueue
 error=%@
 invalid=YES
 finalized=YES
 debugLabel=%@
<%@ %p:
Finish with error on already finalized future.
MPCFuture.m
Finish with value on already finalized future.
com.apple.MediaPlaybackCore/MPCFuture.accessQueue
v16@?0@"NSNotification"8
Personalization response did invalidate
tshlp
queueItem.isAssetLoaded
MPCPlayerItemConfigurator.m
Stereo
Multichannel
Attempting to configure a non-loaded player item.
privateListeningEnabled
timeZoneName
uuid
accountID
usesAudioOnlyMode
isExternalPlaybackAllowed
usesExternalPlaybackWhileExternalScreenIsActive
Picked route has no restrictions
Picked route can't play encrypted local files via progressive download
Picked route can't play local file from a sending device
Picked route doesn't have a UI to nicely present audio-only items
Picked route can't play non-cloud item
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
canFetchMediaDataFromSender
canPlayEncryptedProgressiveDownloadAssets
routeSubtype
isAppleTVRoute
AirPlay
TVOut
externalScreenType
File
Streaming
itemPlaybackMode
Audio
Undefined
itemType
itemHasProtectedContent
itemAllowsExternalPlayback
itemAllowsAirPlayFromCloud
_useAirPlayMusicMode
MPCPlayActivityUtilitiesPlayStartNotification
MPCPlayActivityUtilitiesPlayEndNotification
MPCPlayActivityUtilitiesPlayEndEventStartTimeKey
MPCPlayActivityUtilitiesPlayEndEventEndTimeKey
representativeItemCloudID
artistName
com.apple.MPCFoundation.MPCJinglePlayActivityReportingController.accessSerialQueue
v32@?0@"<NSCopying><NSObject>"8@"MPArtworkRepresentation"16^B24
v32@?0@"NSData"8@"NSString"16@"NSError"24
image/jpeg
com.apple.MediaPlaybackCore.MPCRadioArtworkDataSouce.cachedArtworkRepresentationsAccessQueue
<MPCSharedListeningEvent: %p unknown/eventType=%ld>
<MPCSharedListeningEvent: %p participant=%@ customEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ reactionEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ queueEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ playbackEvent=%@>
<MPCSharedListeningEvent: %p participant=%@ sessionEvent=%@>
<MPCSharedListeningEvent: %p unknown/invalid>
<MPCSharedListeningEventParticipant: %p id=%@ externalID=%@>
<MPCSharedListeningCustomEvent: %p localizedMessage="%@">
<MPCSharedListeningPlaybackEvent: %p kind=%@>
Play
Pause
Scrub
Skip
Unknown/kind=%ld
<MPCSharedListeningQueueEvent: %p unknown/kind=%ld>
<MPCSharedListeningQueueEvent: %p playbackMode=%@>
<MPCSharedListeningQueueEvent: %p replacedContent=%@>
<MPCSharedListeningQueueEvent: %p reorderedContent=%@>
<MPCSharedListeningQueueEvent: %p removedContent=%@>
<MPCSharedListeningQueueEvent: %p playedNowContent=%@>
<MPCSharedListeningQueueEvent: %p addedContent=%@>
<MPCSharedListeningQueueEvent: %p unknown/invalid>
<MPCSharedListeningQueueEventContentAdded: %p items=%@>
<MPCSharedListeningQueueEventContentAdded: %p container=%@ items=%@>
<MPCSharedListeningQueueEventContentPlayedNow: %p startItem=%@ items=%@>
<MPCSharedListeningQueueEventContentPlayedNow: %p container=%@ startItem=%@ items=%@>
<MPCSharedListeningQueueEventContentRemoved: %p item=%@>
<MPCSharedListeningQueueEventContentReordered: %p item=%@>
<MPCSharedListeningQueueEventContentReplaced: %p startItem=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p unknown/kind=%ld>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p autoPlayEnabled=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p repeatType=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p shuffleType=%@>
<MPCSharedListeningQueueEventPlaybackModeChanged: %p unknown/invalid>
B8@?0
q8@?0
<MPCSharedListeningReactionEvent: %p reaction="%@" reactionID=%@ item=%@>
<MPCSharedListeningSessionEvent: %p kind=%@>
Join
Connect
Disconnect
Leave
com.apple.mediaplayer.assistant.callback
v24@?0@"MRCommandResult"8@"NSError"16
com.apple.mediaplayer.assistant.grouping
v24@?0^{__CFError=}8^{__CFString=}16
Cannot obtain digest from unknown hasher algorithm
Cannot finalize unknown hasher algorithm
Cannot append to unknown hasher algorithm
MSVHasher+Algorithms.h
com.apple.assistant.SendCommand
v32@?0@"MRCommandResult"8@"NSError"16Q24
app.music.queue-source.library
MPCPlayerResponseTracklistDisplaySectionPreviousItems
MPCPlayerResponseTracklistDisplaySectionPlayingItem
MPCPlayerResponseTracklistDisplaySectionNextItems
MPCPlayerResponseTracklistDisplaySectionAutoPlayItems
Potluck
presumptuous command
<NONE>
playingItem
MPCPlayerDirectionReverseJump
MPCPlayerDirectionReverse
MPCPlayerDirectionStationary
MPCPlayerDirectionForward
MPCPlayerDirectionForwardJump
MPCPlayerDirectionQueueBoundary
lastChangeDirection
uniqueID
Invalid section collection (2).
MPCPlayerResponseTracklist.m
Could not find a displayIndexPath for structuredIndexPath: %@
structureIndexPath did not produce a valid global index: %@
Provided display index path is out of bounds for this collection: %@ (item count %@)
Provided display index path is out of bounds for this collection: %@ (section count %@)
sectionRangeMap does not include all items: sectionRangesCount=%ld / items.totalItemCount=%ld
Non-contiguous range detected: location=%ld expectedLocation=%ld
Missing section range for section: %@
Count mismatch: sections=%@ sectionRangeMap=%@
v32@?0@"MPCPlayerResponseSection"8q16^B24
<missing queue identifier>
_PLACEHOLDER_TAIL_
Failed to create AutoPlay playbackContext: %@
queueStructures
Unexpected state transition from: %@ to: %@
MPCQueueController.m
UnsupportedPendingEnable
Disabled
WaitingForItemsToEnable
WaitingForItemsToDisable
WaitingForTriggerToEnable
LoadingAutoPlay
Enabled
EnabledPendingDisable
UnexpectedState:%ld
_autoPlayIdentifierList
_identifierList
_inSharedListeningMode
_autoPlayEndPosition
_autoPlayState
_currentItem
_hasUserMutations
_shuffleType
_repeatType
_allowsQueueModifications
_deferredNextContentItemAnchorID
_nextContentItemID
Cannot find valid identifier for an item not in this list: %@
_PLACEHOLDER_
_PLACEHOLDER_AUTOPLAY_
v32@?0q8@"NSString"16@"_MPCQueueControllerDataSourceState"24
v16@?0B8B12
AutoPlayPlaceholder
Invalid shared listening state [dataSource must conform to MPCQueueControllerCommandInterposing]
Invalid shared listening state [too many datasources]
Failed to find the current item in the shared queue tracklist.
Cannot create shared queue tracklist from infinite datasource (radio).
Current item was found multiple times while building shared queue tracklist.
Current item was missing a media identifier while building shared queue tracklist: currentItem=%@ identifiers=%@
Cannot get a shared queue tracklist from an existing shared queue.
v32@?0@"NSString"8@"_MPCQueueControllerDataSourceState"16^B24
Restore
Unexpected inSharedListeningMode=YES in contentItemIDWithOffset: [returning tail placeholder with SIL ID]
-[MPCQueueController _addAutoPlayPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:]
Unsupported insertion type for %s
The specified insertion position [specified] was unsupported because the specified item is a placeholder and there is no deferredNextContentItemAnchorID.
The specified insertion position [head] was unsupported because the current item is a placeholder and there is no deferredNextContentItemAnchorID.
The autoplay identifierList changed before the data source finished loading.
dataSources
Attempting to add datasource for an already existing section.
Cannot modify auto play in shared listening mode
-[MPCQueueController _addPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:]
The identifierList changed before the data source finished loading.
_addPlaybackContext unsupported insertion position for CommandInterposing data source: %ld
jumpToItem:inSection: failed [content item not in SIL] contentItemID=%@
Unexpected sharedCurrentItemChange not in shared listening
InterposingHost-%@
emitEventsForAddedSharedListeningContainerInfo can only be called inSharedListeningMode
emitEventsForParticipants can only be called inSharedListeningMode
 %@=%@
NSString * _Nonnull NSStringFromMPNowPlayingPlaybackState(MPNowPlayingPlaybackState)
Paused
Stopped
Interrupted
Unknown MPNowPlayingPlaybackState value %ld
MPNowPlayingInfoCenter_Private.h
Unknown asset failure reason
@"MPAVItem"16@?0@"<MPSectionedIdentifierListIdentifierPair>"8
Unexpected inSharedListeningMode=YES in itemToFollowItem: [enumerating to tail section - still loading - shuffled]
Unexpected inSharedListeningMode=YES in itemToFollowItem: [deferredNext tail section - still loading - shuffled]
Both previous and next item are set. Did you mean reloadItemsKeepingCurrentItem:NO?
Requested removing content item that is not in the queue.
User default should be resolved before setting on queue controller.
queue=%@&dataSources=%@
Unexpected entry type when reverse enumerating for before item: %d
Received a move command but the source and target lists are not the same. Moving items between auto play and the queue is not supported.
Received a move command but the target is not available in the queue.
Received a move command but the source is not available in the queue.
ContentItemID was nil [loading placeholder]
Unexpected inSharedListeningMode=YES in contentItemIDsFromOffset:toOffset: [returning tail placeholder - state loading]
ContentItemID was nil [tail placeholder]
Unexpected inSharedListeningMode=YES in contentItemIDsFromOffset:toOffset: [returning tail placeholder - state ready]
ContentItemID was nil [forward enumeration]
ContentItemID was nil [current item]
ContentItemID was nil [reverse enumeration]
Cannot insert at Last position in AutoPlay.
AutoPlayPlaceholderArtworkVisualIdenticality
AutoPlayArtwork - Trigger is not needed
AutoPlayArtwork - AutoPlay triggered
apil
apit
apep
dncia
MPCQueueController
com.apple.PlayActivitySync
PASShouldReportPlayActivityEvents
live_link
MPCSharedListeningQueueFeeder.m
LiveLinkConnecting
LiveLinkWaitingForFirstQueue
CallingSuper
SuperCompleted
SuperFailed
LiveLinkRetrying
LiveLinkActive
LiveLinkDisconnected
v32@?0@"ICSharedListeningContainer"8q16^B24
v32@?0@"ICSharedListeningItem"8q16^B24
B32@?0@"_MPCSLQFPendingAction"8Q16^B24
@16@?0@"MPQueueFeederIdentifierRegistry"8
v16@?0@"MPModelRequest"8
Unexpected request type: %@
Pending action flushed but item was still not found: %@
ChangeCurrentItem
<%@: %p label="%@" itemID=%@ expiration=%@>
v32@?0@"MSVSectionedCollection"8@"NSIndexPath"16@"NSError"24
addPlaybackContext:afterItem:
Pending action expired [startItemIdentifier not found in live link queue] startItemIdentifier=%@
Pending action expired [startItem not found in IDRegistry] startItemIdentifier=%@
LiveLink.queue.tracklist does not contain item: %@
v32@?0@"ICSharedListeningItem"8@"NSIndexPath"16^B24
B16@?0@"ICSharedListeningContainer"8
containerIdentifier
Unexpected shared listening request: %@
_MPCAVController.m
userIdentity
com.apple.mediaplaybackcore._MPCPrivateListeningStateUserIdentitySource.accessQueue
value
Home
cce7c4ecef404121ae8971
MPCAssistantEndpointContext
B16@?0@"MRAVOutputDevice"8
v16@?0@"MRAVEndpoint"8
v16@?0@"NSArray"8
languageOptionGroups
localizedDurationString
explicitBadge
indexPath
metadataObject
_calculatedElapsedTime
isLoading
isLiveContent
defaultRate
rate
elapsedDuration
endTime
startTime
snapshotTime
revision
MPCReportingPlaybackObserverPlayStartNotification
MPCReportingPlaybackObserverPlayEndNotification
MPCReportingPlaybackObserverPlayEndEventStartTimeKey
MPCReportingPlaybackObserverPlayEndEventEndTimeKey
v24@?0@"MPCReportingIdentityProperties"8@"NSError"16
com.apple.MediaPlaybackCore.MPCReportingPlaybackObserver.recordEventOperationQueue
year
trackNumber
albumTrackCount
title
isCompilation
genreName
fileSize
discNumber
albumDiscCount
copyrightText
composerName
albumName
albumArtistName
Unsupported content (unknown subclass %@)
Unsupported content [Shared Listening Session] %@
Unsupported content [Radio] %@
@16@?0@"MPIdentifierSet"8
Intent did not produce start item for identifiers: %@
Intent did not produce any store items: %@ %@
v32@?0@8q16^B24
v32@?0q8@"MPIdentifierSet"16^B24
Intent produced unsupported section (genericObject.type=%@) %@
Request did not produce any items: %@
Failed to load request: %@
Cancelled while performing request: %@
item
containerType
HighBandwidth: %@
Constrained: %@
Expensive: %@
Network: %@
Spatial: %@
Always On
Automatic
Unknown preference:%ld
HRLossless: %@
Lossless: %@
HQStereo: %@
LQStereo: %@
HighResLossless: %@
%@ <%p>: %@
5.Outcome
4.Matched tier
3.Route
2.Audio type
1.Formats
0.Environment
B16@?0@"MPCPlayerAudioFormat"8
4.Outcome
2.Preferences
3.Outcome
1.Traits
MPCExplicitContentAuthorizationManager %p - Explicit content playback authorization has been denied by client for: %@
MPCGenericAVItem authorization handler was released and not called.
MPCExplicitContentAuthorizationManager.m
At this stage the age verification state should never be `unknown`
v16@?0@"ICAgeVerificationState"8
MPCExplicitContentAuthorizationManager %p - Explicit content playback is not allowed for any item - %@
variantPreferences
[%@]
UnconstrainedAudioSampleRate
ScalabilityToLosslessAudio
BinauralAudioForUnknownAudioDeviceTypes
GaplessAudioTransitions
preferredForwardBufferDuration
preferredMaximumAudioSampleRate
prefersOfflinePlayableVariants
<MPCItemIdentifierImplementation:%p _contentItemID=%@ Rindex=%ld>
playingItemIdentifier [restored state / optimistic failure]
playingItemIdentifier [optimistic state]
playbackState [restored state / optimistic failure]
I8@?0
playbackState [optimistic state]
playingItemIdentifier
requestedRange
loadedRange
supportedCommands
optimisticStateContentItems
queueIdentifier
<EMPTY>
contentItemChanges:keys
contentItemIDs
resolvedPlayerPath
Alternate Formats
v32@?0@"NSString"8@"NSArray"16^B24
%@: %@
spatialized
%@ch
Active Format
; Justification: %@
Content Item ID
playbackState [from notification]
Got invalid image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got no image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got a different artwork identifier from remote artwork loading than whan we requested %@ -> %@
Got zero items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got nil items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got error from MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Requested content item %@ state does not exist.
{_MSVSignedRange=qq}
PlaybackQueue Response failed to include now playing item
<MPCMediaRemoteController: %p>
v16@?0@"MPRemoteCommandStatus"8
v24@?0^{__CFArray=}8^{__CFError=}16
supportedCommands [was nil before]
v12@?0I8
playbackState [was nil before]
com.apple.MediaPlaybackCore/MPCMediaRemoteController
com.apple.MediaPlaybackCore/MPCMediaRemoteController.callout
MPCMediaRemoteController
v24@?0@"MPRemotePlaybackQueue"8@"NSError"16
com.apple.MediaPlaybackCore.performRemoteQueueCommand-
Failed to create external representation from playback queue %@
Failed to create playback queue from playback intent %@
playbackIntent
MPCMediaRemoteController.m
Failed to create playback context from playback intent %@
v16@?0@"MRCommandResult"8
v32@?0@"MRCommandResult"8@"NSError"16@"NSString"24
v28@?0I8@"NSError"12@"MRSendCommandResultStatus"20
Failed to send command %ld
future controller
com.apple.MPCMediaRemoteController.playerPathControllersQueue/access
com.apple.MPCMediaRemoteController.playerPathControllersQueue/callout
com.apple.MediaPlaybackCore/MediaRemoteReplyQueue
%@ (%d)
<DEFAULT>
options
enabled
v32@?0@8@16^B24
station
continue-listening
MPCSiriPlaybackAdditionsMetadataCountFromResponseKey
MPCSiriPlaybackAdditionsMetadataOrderedPlaybackCacheRequestsKey
MPCSiriPlaybackAdditionsMetadataOrderedPlayableAssetIdentifiersKey
v16@?0@"<MPMutableUniversalStoreIdentifiers>"8
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"MPStoreAssetInfoPlaybackCacheRequest"8@"MPStoreAssetPlaybackResponse"16^B24
children
childrenIds
v32@?0@"NSDictionary"8Q16^B24
contains
does not contain
downloadAssets
offers
hls-key-server-url
hls-key-cert-url
hls-playlist-url
enhancedHls
assetUrls
audioTraits
kind
results
format.resources
meta.api
com.apple.mediaplayer.assistant.connectToEndpoint
MPCAssistantConnection
v20@?0I8^{__CFError=}12
@count
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events ORDER BY _ns LIMIT @count
@endNS
v32@?0@"NSString"8@16^B24
Unknown payload value type for query: %@
Unable to convert payload value to JSON: %@
@payload_value_%d
@payload_key_%d
@startNS
 LIMIT %lld
 ORDER BY _ns DESC
 AND 
 WHERE 
_ns > @endNS
_ns < @startNS
@type_%d
events.type IN (
events.type = @type
(payload_%d.value = @payload_value_%d)
, json_tree(events.payload, @payload_key_%d) AS payload_%d
SELECT %@ FROM events
Query too large
MPCPlaybackEngineEventStream.m
DISTINCT events.identifier, events.type, events.monoAbsolute, events.monoContinuous, events.monoTimebaseNS, events.userNS, events.payload
Must provide event types to enumerate.
eventType
COUNT(DISTINCT events.identifier)
Start event must be chronologically AFTER the limiting event.
startEvent
<%@: %p %@ -> %@>
@payload
@userNS
@monoTimebaseNS
@monoContinuous
@monoAbsolute
@type
@identifier
INSERT INTO events (identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload) VALUES (@identifier, @type, @monoAbsolute, @monoContinuous, @monoTimebaseNS, @userNS, @payload)
void _MPCPlaybackEngineEventStreamValidateSystemTime(MPCPlaybackEngineEventType  _Nonnull __strong, uint64_t)
Event %@ time overflows int64 size: %llu < %lld
Event %@ time out of bounds: %llu < %llu < %llu
<%@: %p reason=%@>
reason
@maximumNS
@lastNS
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events WHERE _ns > @lastNS && _ns < @maximumNS ORDER BY _ns
SELECT identifier, type, monoAbsolute, monoContinuous, monoTimebaseNS, userNS, payload, _ns FROM events WHERE _ns > @lastNS ORDER BY _ns
Consumer %@ already has a subscription to %@
Consumer %@ already has an immediate subscription to %@
Consumer %@ already has a mutating subscription to %@
<%@: %p consumer=%@ events=%@>
 - Subscriptions: %@
 - Assertions: %@
 - Database: %@
@"MSVSQLDatabase"8@?0
Database
_MPC_CLEAR_EVS
%@-%@.sqlpkg
PlaybackEventStreams
com.apple.MediaPlaybackCore.MPCPlaybackEngineEventStream/access
CREATE INDEX IF NOT EXISTS events_type ON events (type, _ns)
CREATE UNIQUE INDEX IF NOT EXISTS events_ns ON events (_ns)
CREATE TABLE IF NOT EXISTS events(identifier BLOB PRIMARY KEY, type TEXT, monoAbsolute INT, monoContinuous INT, monoTimebaseNS INT, userNS INT, payload TEXT, _ns INT UNIQUE GENERATED ALWAYS AS (monoTimebaseNS + monoContinuous) STORED) WITHOUT ROWID
B16@?0@"NSString"8
EVS: Unable to generate SQL statement: %@ error:%@
v24@?0@"MPStoreItemMetadataResponse"8@"NSError"16
v36@?0@"MPSectionedCollection"8B16@"NSDate"20@"NSDictionary"28
v24@?0@"MPStoreLibraryPersonalizationResponse"8@"NSError"16
Request must contain either storeIDs or sectionedModelObjects
com.apple.MediaPlayer.MPCModelStorePlaybackItemsRequestOperation.operationQueue
com.apple.MediaPlaybackCore/%@.activeprogress
Missing store request context
Missing redownload parameters
v24@?0@"ICMediaRedownloadResponse"8@"NSError"16
-[MPCModelGenericAVItemMediaRedownloadOperation execute]_block_invoke
Missing asset URL in media redownload request response
MPCModelGenericAVItemMediaRedownloadOperation.m
No network connection
com.apple.MediaPlaybackCore.MPCModelGenericAVItemMediaRedownloadOperation.accessQueue
v16@?0@"MPCModelRadioGetTracksStep"8
v16@?0@"MPModelRadioStation"8
v32@?0@"MPCModelRadioGetTracksStep"8@"MPCModelRadioGetTracksResponse"16@"NSError"24
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksOperation
v24@?0@"ICUserIdentity"8@"NSError"16
unknown-guid
Failed to add delegation uuid.
Delegation is unsupported on this device.
v20@?0@"ICMutableUserIdentityProperties"8B16
Failed to create delegated account.
v16@?0@?<v@?@"ICUserIdentity"@"NSError">8
v24@?0@"MPPlaybackContext"8@"NSError"16
v16@?0@"MPIdentifierSet<MPMutableIdentifierSet>"8
v16@?0@"<MPMutableRadioIdentifiers>"8
Genius is Disabled
Genius is not avialable for this item
Cannot play fuse content
Unknown queue identifier: %@
originalPlaybackContext is not supported and no supplementalPlaybackContext was provided.
Neither the originalPlaybackContext nor the supplementalPlaybackContext are supported.
Missing creation properties data in playback queue.
v24@?0@"MPCPlaybackRequestEnvironment"8@"NSError"16
Missing tracklist data in playback queue.
v24@?0@"ICMusicSubscriptionStatus"8@"NSError"16
v32@?0@"_MPCProtoContainer"8Q16^B24
v32@?0@"_MPCProtoItem"8Q16^B24
MPIdentifierSet *__MPIdentifierSetWithMPCProtoItem(_MPCProtoItem *__strong, _MPCProtoTracklist *__strong)_block_invoke
Attempted to decode container identifier set without personID
MPRemotePlaybackQueue+MPCAdditions.m
%llu
MPIdentifierSet *__MPIdentifierSetWithMPCProtoContainer(_MPCProtoContainer *__strong, _MPCProtoTracklist *__strong)_block_invoke
MPCRemoteCommandEventOptionPauseFadeoutDurationKey
MPCRemoteCommandEventOptionSkipImmediatelyKey
shareQueueCommand
clearUpNextQueueCommand
disableQueueModificationsCommand
DisableQueueModifications [MPC]
ClearUpNext [MPC]
ShareQueue [MPC]
v24@?0@"NSURLRequest"8@"NSError"16
https://itunes.apple.com/
max-mini-sinf-batch-size
v32@?0@"NSString"8@"_MPCMiniSINFEndpointInfo"16^B24
v24@?0@"ICURLResponse"8@"NSError"16
application/json
vacTokens
adamIds
flavors
guid
POST
v32@?0@"NSString"8@"NSString"16^B24
v32@?0@"MPServerObjectDatabaseAsset"8@"NSString"16^B24
com.apple.MediaPlaybackCore/MPCFairPlayPerformance-miniSinf
com.apple.iBooks
com.apple.podcasts
com.apple.NanoBooks
v16@?0^{__CFArray=}8
 Companion connected
 Companion disconnected
v16@?0@"NSDictionary"8
<%@ %p bundleID = "%@", playerID = "%@", origin = "%@", outputDeviceUIDs = %@, outputGroups = %@, outputGroupID = %@, originatingOutputDeviceUID = %@, singleGroup = %@, originatingControl = %@>
not allowed
allowed
Explicit content not allowed [unable to handle request] - item=%@ - reason=%@
Age Gating
Age Verification
attempts
stateRestoration-%@
audioSessionCategory
MPCPlaybackEngine.m
v20@?0B8@?<v@?>12
Unable to restore state. Too many failed attempts.
MPCPlaybackEngine API must be called on the main thread. %@
MediaPlayer
new_playback_engine
MPNowPlayingInfoCenter_MPCPlaybackEngine
@"MPCPlaybackEngine"8@?0
v16@?0^v8
B32@?0@8Q16^B24
v24@?0@"MPCPlayerPath"8@"NSError"16
resolvedPlayerPath and error was nil
v16@?0@"MPCPlayerPath"8
com.apple.MediaPlaybackCore/MPCPlayerPathCache
com.apple.MediaPlaybackCore/MPCPlayerPathCache.callout
com.apple.MediaPlaybackCore/MRNowPlayingNotificationQueue
Mono
Binaural
5.1.2
5.1.4
7.1.2
7.1.4
9.1.6
BINAURAL
CHANNEL-USAGE
ORIGIN-IS-ATMOS
ORIGIN-CHANNEL-COUNT
CHANNEL-COUNT
IS-ATMOS
%c%c%c%c
%ldkhz
%d-bit
%ldkbps
LowBandwidthStereo
HighQualityStereo
Lossless
HighResolutionLossless
Spatial
Unknown-%ld
stableVariantID: %@
multichannel
origin channels: %@
origin channels: %@ [%@]
layout: %@
channels: %@
codec: %@
sampleRate: %@
bitDepth: %@
groupID: %@
bitrate: %@
tier: %@
chlayd
ochlay
chlay
tier
BIT-DEPTH
SAMPLE-RATE
BIT-RATE
GROUP-ID
AUDIO-FORMAT-ID
VERSION
canStreamSpatialAudio
canRenderSpatialAudio
spatializationIsEnabled
supportsSpatialization
name: %@
type: %@
DeviceSpeaker
LineOut
Headphones
BluetoothHeadphones
BluetoothSpeaker
USBAudio
CarAudio
HDMI
spze
spzs
name
Unavailable
UserPreference
UserDownload
RouteIncompatible
RouteUnknownCompatibility
BandwidthInsufficient
ReplacementContext is unsupported type %@ != MPCModelPlaybackContext
identity
properties
MPCSuzeLeaseSessionControllerLeaseSessionRenewDidFailNotification
MPCSuzeLeaseControllerUserInfoKeySession
MPCSuzeLeaseControllerUserInfoKeyError
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.accessQueue
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.calloutQueue
nick
suffix
family
middle
given
prefix
id<MPCPlaybackEngineEventPayloadJSONValue>  _Nullable _coerceJSONValueFromValue(__strong id<MPCPlaybackEngineEventPayloadValue> _Nonnull, BOOL)
Attempt to JSON coerce unsupported value type: %@ %@
MPCPlaybackEngineEventPayload.m
v32@?0@"NSString"8@"<MPCPlaybackEngineEventPayloadValue>"16^B24
id<MPCPlaybackEngineEventPayloadJSONValue>  _Nullable _coerceJSONValueFromValue(__strong id<MPCPlaybackEngineEventPayloadValue> _Nonnull, BOOL)_block_invoke
Unexpected type for key: %@ actual=%@ expected=%@
userInfo
code
domain
root
debug
dataType
data
dialog
actions
@16@?0@"MPRemoteCommandHandlerDialogAction"8
message
mrCommand
modelClass
_empty
station-id
station-hash
station-string
universal
reporting-adam-id
static-asset
media-clip
social-profile
purchased
ulid
former-ids
adam
global-playlist
personal
reco-id
cloud-album
cloud
person-id
sync
contained-pid
db-id
imageURL
nameComponents
externalID
serverID
v16@?0@"<MPMutableLocalLibraryIdentifiers>"8
v16@?0@"<_ICMutableLiveLinkIdentityPrivate>"8
v32@?0@"NSString"8@"<MPCPlaybackEngineEventPayloadJSONValue>"16^B24
id<MPCPlaybackEngineEventPayloadValue>  _Nullable _coercePayloadFromJSONValue(__strong id<MPCPlaybackEngineEventPayloadJSONValue> _Nonnull, NSString *__strong _Nonnull)
Unexpected type for element in array for key %@ actual=%@ expected=%@
Unexpected type for key %@ actual=%@ expected=%@
LeasePreventionPause_%@
v24@?0@"ICMusicSubscriptionLeaseSession"8@"NSError"16
v24@?0@"ICMusicSubscriptionLeaseStatus"8@"NSError"16
v24@?0@"ICMusicSubscriptionPlaybackResponse"8@"NSError"16
artwork
contentItem.protobuf.gz
artworkHash
compressionAlgorithm
contentItem
com.apple.mediaplaybackcore.sessionArchive
<MPCPlaybackAccount:%p hashedDSID=%@ identity=%@ isActiveAccount=%@ isDelegated=%@ cloudLibraryEnabled=%@ privateListeningEnabled=%@ canAutoPlay=%@ storeFront=%@ subscriptionStatus=%@ bag=%@>
v32@?0@"ICDelegateToken"8@"ICUserIdentity"16^B24
void _MSVHasherAppendBytes(MSVHasher * _Nonnull, const void * _Nonnull, size_t)
MSVHash _MSVHasherFinalize(MSVHasher * _Nonnull)
0123456789abcdef
NSString * _Nonnull _MSVHashGetDigest(MSVHash)
v24@?0@"ICURLBag"8@"NSError"16
v24@?0@"ICMusicSubscriptionStatusResponse"8@"NSError"16
v16@?0@"MPCPlaybackAccount"8
q24@?0@"MPCPlaybackAccount"8@"MPCPlaybackAccount"16
MPCModelPlaybackContextMediaLibraryUniqueID
semlUID
MPCModelPlaybackContextFallbackSectionRepresentation
MPCModelPlaybackContextAssetStoreFronts
MPCModelPlaybackContextEndTimeModifications
MPCModelPlaybackContextStartTimeModifications
MPCModelPlaybackContextStartItemIdentifiers
MPCModelPlaybackContextPlaybackRequestEnvironment
MPCModelPlaybackContextRequest
MPCModelPlaybackContextUserIdentity
startItemIdentifiers
request
request.playbackRequestEnvironment
<%@ %p shouldReportToStore:%@ playActivityEvent:%@>
v24@?0@"NSArray"8@"NSError"16
Unsupported request type: %ld
MPCPlaybackHistoryRecordChangeRequestOperation.m
v12@?0B8
com.apple.MediaPlaybackCore.MPCPlaybackHistoryRecordChangeRequestOperation.operationQueue
overridePlayingItem
iterations
end_frame
start_frame
scenes
version
versions
motion-timeline
com.apple.music.scenes
@"NSString"16@?0q8
No item lookups allowed for _MPCNullQueueFeeder.
_MPCNullPlaybackContext.m
No identifier set lookups allowed for _MPCNullQueueFeeder.
label
actionAfterQueueLoad
MPCNullPlaybackContextCodingKeyLabel
LANGUAGE_OPTIONS_AUTO_SELECTION_TITLE
LANGUAGE_OPTIONS_EMPTY_SELECTION_TITLE
LANGUAGE_OPTIONS_SUBTITLE_SECTION_TITLE
LANGUAGE_OPTIONS_AUDIO_SECTION_TITLE
B32@?0@"MPNowPlayingInfoLanguageOption"8Q16^B24
shuffleMode
startingItemIndexPath
container
[(MPAVItem *)queueItem isKindOfClass:[MPAVItem class]]
MPCMediaFoundationTranslator.m
queueItem == nil || [(MPAVItem *)queueItem isKindOfClass:[MPAVItem class]]
MPCAVItemReportingJingleTimedMetadataDidChangeNotification
v32@?0@"MPUserNotification"8Q16@"NSDictionary"24
v16@?0@"ICStoreDialogResponseButtonAction"8
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksPrepareIdentityStep
Unable to get radio tracks [invalid user identity] - userIdentity=%@ - properties%@
v32@?0@"NSArray"8Q16@"NSError"24
v24@?0@"ICRadioGetTracksResponse"8@"NSError"16
additionalData
getTracks
v32@?0@"ICStoreDialogResponseButton"8Q16^B24
[base account is delegated]
[base account missing]
[delegated account missing]
[promoting delegated account]
v16@?0@"ICStoreRequestContext"8
requestingBundleVersion
requestingBundleIdentifier
delegationProperties
clientVersion
clientIdentifier
<MPCPlaybackRequestEnvironment: %p identity=%@>
AirMusic
sessionIdentifier must not be nil
MPCSharedListeningLiveLinkReusePool.m
DecodeSerialQueue
v24@?0@"NSData"8@"NSError"16
AFSecurityConnection
/System/Library/PrivateFrameworks/AssistantServices.framework/AssistantServices
LOCAL_DEVICE
EncodeSerialQueue
v32@?0@"ICRadioStationTrack"8@"NSIndexPath"16^B24
v20@?0B8@"NSError"12
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue
v32@?0@"MPModelRadioStation"8q16^B24
v32@?0@"MPModelGenericObject"8q16^B24
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue.accessQueue.StationTracksSection
MPCRadioPlaybackErrorCategoryKey
ADD_STATION_FAILED_ALERT_TITLE
ADD_STATION_FAILED_TEMPORARY_ALERT_MESSAGE
PLAYBACK_FAILURE_LOCATION_RESTRICTION_TITLE
prefs:root=SCREEN_TIME&path=CONTENT_PRIVACY
EXPLICIT_CONTENT_NOT_ALLOWED_SETTINGS_BUTTON_TITLE
EXPLICIT_CONTENT_NOT_ALLOWED_TITLE
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_%@
ADD_STATION_FAILED_ALERT_MESSAGE
ADD_STATION_FAILED_ARTIST_ALERT_MESSAGE
ADD_STATION_FAILED_ALBUM_ALERT_MESSAGE
com.apple.mediaplaybackcore.assistant.pause
v16@?0^{__CFError=}8
forceRemoveDeviceCount
homepodsAffected
appleTVsAffected
pausedEndpointCount
removedEndpointCount
pausedDeviceCount
removedDeviceCount
v24@?0@"NSArray"8@"NSArray"16
MPCAssistantPause
v24@?0@"NSError"8@"NSArray"16
no origin for endpoint
@"NSDictionary"8@?0
errorMessage
success
no UIDs provided
com.apple.MediaAssistant.siri
source
requestDeviceCount
com.apple.MediaAssistant
errorString
v16@?0^{__CFString=}8
v24@?0^v8^{__CFError=}16
group leader
proxy promotion
actualDestination
v16@?0@"MPCAssistantRemoteControlDestination"8
v16@?0@"MPCAssistantSendCommandResult"8
v24@?0@"MPCAssistantRemoteControlDestination"8@"MRCommandResult"16
com.apple.mediaplayer.assistant.MPCAssistantCommand.sendCommandQueue
actualDeviceCount
remote
formGroup
outputGroupIDPresent
outputGroups
requestedUIDs
When processing %@ if we are the group leader, pause our now-playing app if we have one
v24@?0@"MRAVEndpoint"8@"NSError"16
local
com.apple.mediaplayer.assistant.command
resultCodes
appBundleID
command
v32@?0^{__CFArray=}8^v16^{__CFError=}24
v32@?0^v8^v16@"NSError"24
v20@?0f8^{__CFError=}12
MPCItemBookmarker.m
toItem == nil || [(MPAVItem *)toItem isKindOfClass:[MPAVItem class]]
fromItem == nil || [(MPAVItem *)fromItem isKindOfClass:[MPAVItem class]]
MPCModelRadioQueueFeederErrorDomain
v16@?0@"ICMutableRadioPlaybackHistory"8
v24@?0@"MPCModelRadioPersonalizationResponse"8@"NSError"16
@"MPIdentifierSet"16@?0q8
v16@?0@"MPQueueFeederIdentifierRegistry"8
v32@?0@"NSIndexPath"8@"MPIdentifierSet"16^B24
v24@?0@"MPCModelRadioGetTracksResponse"8@"NSError"16
v24@?0@"ICUserIdentityProperties"8@"NSError"16
RadioStationID
app.music.queue-source.tilt
v16@?0@"MPModelPlayEvent"8
RADIO_LABEL
LOADING_AUDIO_LABEL
Provided section identifier did not match stored section identifier: %@ != %@
MPCModelRadioQueueFeeder.m
v24@?0@"MPCModelGenericAVItemUserIdentityPropertySet"8@"NSError"16
v24@?0@"ICRadioPlaybackHistory"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
Could not convert station into metadata: %@
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.diffQueue
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.loadingOperationQueue
-sessions
PlaybackSessions
Session management only available with MPCQueueController
_MPCPlaybackEngineSessionManager.m
queueController
playbackSessionIdentifier-v3
Playback engine doesn't support state restoration
v16@?0@"UIImage"8
v8@?0
playbackSessionArchive
Opting not to save an archive with a placeholder content item.
Can't save an archive without a now playing content item.
Opting not to save an archive for a shared listening session
Can't save an archive before first unlock (cannot write to container data).
v16@?0@"NSError"8
v16@?0@?<v@?@"NSError">8
v16@?0q8
Failed to load session due to timeout.
Failed to decode queue controller for identifier: %@
Archive is missing for identifier: %@
com.apple.MediaPlaybackCore._MPCPlaybackEngineSessionManager/serialQueue
q24@?0@"_MPCPlaybackSessionArchive"8@"_MPCPlaybackSessionArchive"16
v24@?0@"UIImage"8@"NSError"16
v16@?0@"MPAsyncBlockOperation"8
v24@?0@"ICRadioFetchMetadataResponse"8@"NSError"16
v16@?0@"MPSectionedCollection"8
v24@?0@"MPModelResponse"8@"NSError"16
v24@?0@"MPCModelGenericAVItemTimedMetadataResponse"8@"NSError"16
v16@?0@"MPModelObject"8
MPCModelGenericAVItemTimedMetadataRequest: unexepected genericObject type: %ld
MPCModelGenericAVItemTimedMetadataRequest.m
v16@?0@"MPModelSong"8
v16@?0@"MPModelAlbum"8
@"MPArtworkCatalog"16@?0@"MPModelObject"8
v16@?0@"MPModelArtist"8
height
width
artworkURL_
com.apple.radio.adamid
com.apple.radio.explicit
NSObject
ICLiveLinkDelegate
MPCPlaybackIntentDataSource
MPCSharedListeningPlaybackIntentDataSource
_MPCSharedListeningTracklistPlaybackContext
MPCSharedListeningAVPlayerObserver
_MPCProtoItem
NSCopying
MPMiddleware
MPCStoreLibraryPersonalizationMiddleware
MPCResponseMediaRemoteControllerChaining
MPCPlayerResponseBuilder
_MPCPlaybackEngineMediaFoundationImplementation
MPCPlaybackEngineImplementation
MPCAssetLoaderDelegate
MPAVQueueControllerDelegate
MFPlaybackStackControllerDelegate
ICErrorProcessing
MPCMediaRemoteMiddlewareMetadataOperation
MPMiddlewareAutomaticDependencyOperation
MPMiddlewareOperation
MPCMediaRemoteMiddlewareModelObjectsProviding
ModelObjectsProviding
MPCModelGenericAVItem
MPRTCReportingItemSessionCreating
ICEnvironmentMonitorObserver
AVPlayerItemMetadataOutputPushDelegate
AVPlayerItemOutputPushDelegate
AVAssetResourceLoaderDelegate
ICStoreResponseProtocol
_MPCURLAssetDownloadCompletionObserver
MPCModelPlaybackAssetCacheProvidingInternalAdditions
MPCAssistantDiscovery
MPCModelGenericAVItemUserIdentityPropertySet
MPCLyricsReportingController
_MPCProtoTracklistIndexPath
MPCAssistantSetVolume
MPCPlaybackEngineEventConsumer
MPCPlaybackEngineLoggingConsumer
Debugging
MPCModelStorePlaybackItemsRequestAccumulator
_MPCProtoRadioContentReference
MPCModelGenericAVItemTimedMetadataResponse
MPCModelGenericAVItemTimedMetadataStreamFields
MPCAssistantAnalyticsEventConsumer
MPCPlayerSessionResponse
MPCPlayerSessionResponseBuilder
MPCPlayerSessionRequest
MPCMediaRemoteMiddlewareMetadataOperationConfiguration
_MPCProtoItemIdentifierSet
_MPCMusicPlayerControllerServer
MPCPlaybackEngineEventObserving
NSXPCListenerDelegate
MPMusicPlayerControllerApplicationServer
MPMusicPlayerControllerServer
MPMusicPlayerControllerServerActions
MPMusicPlayerControllerSystemServer
MPMusicPlayerControllerClient
MPCMusicPlayerControllerServer
MPCModelGenericAVItemAssetLoadResult
MPCReportingDeviceIdentityPropertiesLoader
MPCReportingIdentityPropertiesLoading
MPCModelMediaClipAVItem
_MPCMediaRemotePublisher
MPCPlaybackContextPrivateListeningOverridable
MPCModelPlaybackRequestEnvironmentConsuming
MPNowPlayingPlaybackQueueDataSource
MPNowPlayingPlaybackQueueDataSourcePrivate
PlaybackQueue
MPCModelRadioStationTrackGenericObjectBuilder
MPCModelGenericAVItemLocalFileLoadOperation
MediaPlayerCore
MPCPlaybackQueue
MPCModelPlaybackIntentDataSourceAdditions
MPCMediaLibraryPlaybackAssetCacheProvider
MPCModelPlaybackAssetCacheProviding
MPCPlaybackDelegationProperties
NSSecureCoding
NSCoding
NSMutableCopying
MPCMutablePlaybackDelegationProperties
MPCPlaybackIntent
MPCQueueControllerDataSource
MPShuffleableSectionedIdentifierListDataSource
MPSectionedIdentifierListDataSource
_MPCPlaybackContextPlaybackIntentDataSource
MPCPlaybackSharedListeningProperties
ForShortcutsOnly
_MPCProtoRadioCreationProperties
MPCModelRadioStationBuilder
MPCPlaybackEngineMiddlewareOperation
MPCMediaRemoteMiddlewareControllerProviding
MPCPlaybackHistoryController
MPCMediaRemoteMiddlewarePlaybackStateOperation
MPCAssetLoadingOperation
MPCAssetLoader
MFAssetLoading
MPNowPlayingContentItemRemoteArtworkToken
MPArtworkDataSourceVisualIdenticality
MPCRemotePlayerArtworkDataSource
MPCAssistantAvailability
MPCStoreFrontLocalEquivalencyMiddlewareOperation
MPCStoreFrontLocalEquivalencyMiddlewarePlayingItemProviding
MPCStoreFrontLocalEquivalencyMiddlewareAdditions
MPCPlayerChangeRequest
MPCMediaRemoteCommandOperation
MPCPlayerCommandRequest
MPCPlayerResponse
MPCPlayerRequest
_MPCPlayerCommand
MPCModelRadioPlaybackContext
MPCPlaybackContextUserIdentityConsuming
MPCRTCEventConsumer
MPCScene
MPCSceneCollection
MPCScriptedLooper
MPCModelStorePlaybackItemsRequest
MPCModelStorePreviousRequestStoring
MPCModelRequestRTCReporting
MPModelRequestDetailedKeepLocalStatusRequesting
MPCModelPlaybackRequest
MPCPlaybackEngineMiddleware
MPCPlayerCommandDialogAction
MPCPlayerCommandDialog
MPCPlayerCommandStatus
MPCDialogs
MPCModelStorePlaybackItemsResponse
MPCModelPlaybackResponse
MPModelResponseDetailedKeepLocalStatusRequesting
MPModelStoreEquivalencyMapping
MPCModelGenericAVItemAssetLoadProperties
MPCMediaRemoteMiddlewareControllerOperation
ControllerProviding
MPCPlaybackEngineEvent
MPCMediaRemoteMiddlewareCommandsOperation
MPCHLSSessionData
MPCMediaRemoteMiddleware
MPCErrorControllerImplementation
MFErrorController
MFResettable
MPCErrorController
MPCModelGenericAVItemSubscriptionAssetLoadOperation
MPCModelPlaybackAdditions
MPCModelQueueFeeder
MPRequestResponseControllerDelegate
MPRTCReportingItemSessionContaining
MPCModelQueueFeederAdditions
MPCModelRadioPersonalizationRequest
MPCModelRadioPersonalizationResponse
_MPCQueueControllerDataSourceState
MPCPlayActivityFeedEventConsumer
_MPCProtoContainerIdentifierSet
_MPCMediaRemoteNullController
MPCQueueDescriptorPlaybackIntentDataSource
MPCAssistantPlaybackQueue
MPCAssistantQueryPlaybackQueue
MPCAssistantRadioPlaybackQueue
MPCAssistantStoreTracklistPlaybackQueue
MPCAssistantGeniusPlaybackQueue
MPCAssistantCustomDataPlaybackQueue
MPCPlayerResponseSection
MPCPlayerPath
MPCDebugOverlayArtworkDataSource
MPArtworkDataSource
_MPCDebugOverlayView
_MPCDebugOverlayItemView
MPCDebugOverlayItemDisplay
MPCDebugOverlayItem
MPCDebugOverlayArtworkToken
MPCPlaybackEngineEnvironmentConsumer
MPCModelPlaybackIntentTracklistToken
ICRadioContentReferenceContainable
MPCModelRadioContentReference
ICRadioContentReference
MPCReportingController
MPCFutureInvalidationToken
MPCFuture
MPCStoreLibraryPersonalizationMiddlewareOperation
MPCSharedListeningPlaybackIntentTracklistToken
MPCPlayerItemConfigurator
MPAVRoutingControllerDelegate
_MPCProtoDelegateInfo
MPCExternalPlaybackControllerImplementation
MPCExternalPlaybackRouter
MFExternalPlaybackController
_MPCProtoRadioContentReferenceLibraryArtistContentReference
MPCJinglePlayActivityReportingController
MPCRadioArtworkDataSource
MPCSharedListeningEvent
MPCSharedListeningEventParticipant
MPCSharedListeningCustomEvent
MPCSharedListeningPlaybackEvent
MPCSharedListeningQueueEvent
MPCSharedListeningQueueEventContentAdded
MPCSharedListeningQueueEventContentPlayedNow
MPCSharedListeningQueueEventContentRemoved
MPCSharedListeningQueueEventContentReordered
MPCSharedListeningQueueEventContentReplaced
MPCSharedListeningQueueEventPlaybackModeChanged
MPCSharedListeningReactionEvent
MPCSharedListeningSessionEvent
MPCAssistantSendCommand
MPCAssistantSendCommandResult
MPCAdditions
_MPCPlayerResetTracklistCommand
MPCPlayerResetTracklistCommand
MPCPlayerCommand
_MPCPlayerInsertItemsCommand
MPCPlayerInsertItemsCommand
MPCPlayerResponseTracklist
_MPCPlayerDisableModificationsCommand
MPCPlayerDisableModificationsCommand
_MPCPlayerChangeItemCommand
MPCPlayerChangeItemCommand
_MPCPlayerActionAtQueueEndCommand
MPCPlayerActionAtQueueEndCommand
_MPCPlayerShuffleCommand
MPCPlayerShuffleCommand
_MPCPlayerRepeatCommand
MPCPlayerRepeatCommand
_MPCPlayerReorderItemsCommand
MPCPlayerReorderItemsCommand
_MPCPlayerResponseTracklistDisplayDataSource
MPLazySectionedCollectionDataSource
_MPCPlayerResponseTracklistDataSource
MPCQueueController
MPCQueueControllerCommandInterposingHost
MSVSegmentedCoding
MPAVQueueController
MPAVQueueCoordinatingDataSource
MPCQueueItemProviding
MPCContinueListeningRadioQueueProviding
MPSectionedIdentifierListAnnotationDelegate
MPShuffleableSectionedIdentifierListDelegate
MPSectionedIdentifierListDelegate
_MPCQueueControllerEnumerator
_MPCAutoPlayEnumerationResult
MPSectionedIdentifierListEnumerationItem
MPSectionedIdentifierListEnumerationResult
MPCQueueControllerDataSourceLoadRequest
MPCQueueControllerCommandInterposing
MPCReportingPlaybackEnvironmentPropertiesLoader
MPCSharedListeningQueueFeeder
AVPlayerPlaybackCoordinatorDelegate
_MPCSLQFPendingAction
MPCSharedListeningContainerInfo
_MPCProtoRadioContentReferenceStoreContentReference
_MPCAVController
MPCPrivateListeningStateSource
_MPCPrivateListeningStateUserIdentitySource
_MPCPrivateListeningStateStaticSource
_MPCPrivateListeningStateLocalDeviceSource
MPCAssistantEndpointContext
MPCPlayerResponseItem
MPCPlayerResponseItemMusicAudio
_MPCPlayerFeedbackCommand
MPCPlayerFeedbackCommand
_MPCPlayerItemCommand
_MPCPlayerRateCommand
MPCPlayerRateCommand
_MPCPlayerPlaybackRateCommand
MPCPlayerPlaybackRateCommand
_MPCPlayerSeekCommand
MPCPlayerSeekCommand
MPCReportingPlaybackObserver
MPCReportingPlaybackEventSource
_MPCProtoRadioContentReferenceLibraryItemContentReference
MPCAudioSpectrumAnalyzer
_MPCAudioSpectrumAnalyzerStorage
MPCAudioSpectrumObserver
MPCSharedListening
_MPCProtoContainer
MPCAudioAssetTypeSelector
MPCExplicitContentAuthorizationManager
MediaPlaybackCore
MPCItemIdentifierImplementation
MPCItemIdentifier
MFPlayerItem
MFQueuePlayerItem
MPCMediaRemoteController
MPMediaRemoteEntityArtworkGenerator
MSVLRUDictionaryDelegate
MPCSupportedCommands
_MPCSupportedCommands
MPCRadioPlaybackIntentTracklistToken
MPCSiriPlaybackAdditions
MPCAssistantConnection
MPCPlaybackEngineEventStream
_MPCPlaybackEngineEventStreamCursor
MPCPlaybackEngineEventStreamCursor
_MPCPlaybackEngineEventStreamDeferralAssertion
MPCPlaybackEngineEventStreamDeferralAssertion
_MPCPlaybackEngineEventStreamSubscription
MPCPlaybackEngineEventStreamSubscription
MPCModelStorePlaybackItemsRequestOperation
MPCModelGenericAVItemMediaRedownloadOperation
MPCModelRadioGetTracksOperation
MPCModelRadioGetTracksResponse
MPCRemoteQueueAdditions
MPCCustomCommands
_MPCFairPlayPerformanceController
MPServerObjectDatabaseObserver
_MPCMiniSINFEndpointInfo
MPCModelPlaybackIntentDataSource
MPCAssistantRemoteControlDestination
MPCAssistantMutableRemoteControlDestination
_MPCPlaybackEnginePlayerIDInitializationParameters
MPCPlaybackEngineInitializationParameters
MPCPlaybackEngine
MPCExplicitContentAuthorizationDelegate
MPCPlaybackEngineEventStreamInitializationParameters
MPCPlayerPathCache
MPCPlayerAudioFormat
MPCPlayerAudioRoute
MPCSharedListeningPlaybackContext
MPCSuzeLeaseSessionController
ICSuzeLeaseSessionDelegate
_MPCSuzeLeaseSessionInfo
MPCPlaybackEngineEventPayloadJSONValue
MPCPlaybackEngineEventPayloadValueJSONConvertible
MPCPlaybackEngineEventPayload
_MPCProtoRadioContentReferenceLibraryAlbumContentReference
MPCReportingLyricsViewEvent
MPCSuzeLeaseSession
_MPCLeaseManager
MPCReportingIdentityProperties
_MPCPlaybackSessionArchive
MPCPlaybackAccount
_MPCPlaybackAccountManager
MPCPlayerSessionResponseItem
MPCModelPlaybackContext
MPCReportingEvent
MPCReportingPlaybackActivityEvent
MPCPlaybackHistoryRecordChangeRequestOperation
MPCStoreFrontLocalEquivalencyMiddleware
MPCScriptedSceneCollectionParser
_MPCNullQueueFeeder
_MPCNullPlaybackContext
_MPCReportingController
MPCRadioPlaybackIntentDataSource
MPCLeaseController
MFLeaseControlling
MPCPlayerLanguageOptionGroup
_MPCProtoTracklist
MPCMediaFoundationTranslator
MFQueueControlling
MPCReportingAdditions
MPCModelRadioGetTracksStep
MPCModelRadioGetTracksPrepareIdentityStep
MPCModelRadioGetTracksPreparePlayActivityStep
MPCModelRadioGetTracksRequestStep
MPCModelRadioGetTracksRetryDialogStep
MPCModelRadioGetTracksEstablishAccountStep
MPCAVItemTrace
MPCModelGenericAVItemHomeSharingLoadOperation
MPCMutablePlaybackRequestEnvironment
MPCPlaybackRequestEnvironment
MPCSharedListeningLiveLinkReusePool
MPCAssistantEncodings
MPCAssistantContext
MPCModelRadioPlaybackQueue
_MPCModelRadioPlaybackQueueStationTracksCollection
MPCAssistantPause
MPCAssistantCommand
MPCPlaybackHistoryRecordChangeRequest
MPCAssistantGetVolume
MPCMediaFoundationQueueCoordinator
MPAVQueueCoordinating
MPCItemBookmarker
MPCModelRadioQueueFeeder
MPAVItemObserver
_MPCPlaybackEngineSessionManager
MPCPlayerResponseParticipant
MPNowPlayingContentItemArtworkToken
MPCMediaRemoteArtworkRemoteDataSource
MPCModelGenericAVItemTimedMetadataRequest
TQ,R
T#,R
T@"NSString",R,C
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
didStartLiveLink:
liveLink:didEncounterError:willRetry:
didStopLiveLink:
liveLink:didUpdateParticipants:
liveLink:didUpdateQueue:
liveLink:didReceiveDirectCurrentItemChanged:fromParticipant:
liveLink:didReceiveEvent:
liveLink:didReceiveDirectCurrentItemChanged:
getPlaybackContextForIntent:withCompletion:
T@"MSVBlockGuard",&,N,V_guard
Tq,N,V_shuffleMode
T@,&,N,V_strongSelf
T@?,C,N,V_completion
T{os_unfair_lock_s=I},N,V_lock
Tq,N,V_buildState
Tq,N,V_sourceState
T@"MPCPlaybackIntent",&,N,V_initialIntent
T@"NSIndexPath",C,N,V_startIndexPath
T@"MSVSectionedCollection",&,N,V_initialTracklist
Tq,N,V_linkState
T@"ICLiveLink",&,N,V_liveLink
T@"ICLiveLinkIdentity",&,N,V_identity
_lock
_guard
_shuffleMode
_strongSelf
_completion
_buildState
_sourceState
_initialIntent
_startIndexPath
_initialTracklist
_linkState
_liveLink
_identity
buildSharedSessionIntentWithIntent:identity:completion:
_transitionToBuildState:
_transitionToBuildState:intent:error:
_transitionToSourceState:
_transitionToSourceState:error:
_transitionToLiveLinkState:
_transitionToLiveLinkState:error:
guard
setGuard:
shuffleMode
setShuffleMode:
strongSelf
setStrongSelf:
completion
setCompletion:
lock
setLock:
buildState
setBuildState:
sourceState
setSourceState:
initialIntent
setInitialIntent:
startIndexPath
setStartIndexPath:
initialTracklist
setInitialTracklist:
linkState
setLinkState:
liveLink
setLiveLink:
identity
setIdentity:
.cxx_destruct
linkWithIdentity:
handleFailureInMethod:object:file:lineNumber:description:
currentHandler
stringWithFormat:
msv_errorWithDomain:code:underlyingError:debugDescription:
disarm
replaceTracklist:preferredStartIndexPath:completion:
queue
msv_errorWithDomain:code:debugDescription:
count
initWithTimeout:interruptionHandler:
T@"MSVSectionedCollection",&,N,V_tracklist
T@"NSIndexPath",&,N,V_startItemIndexPath
_tracklist
_startItemIndexPath
tracklist
setTracklist:
startItemIndexPath
setStartItemIndexPath:
T@"AVQueuePlayer",R,N,V_currentPlayer
_currentPlayer
init
_playerDidChangeNotification:
currentPlayer
didChangeValueForKey:
willChangeValueForKey:
object
addObserver:selector:name:object:
defaultCenter
T@"MPCSharedListeningAVPlayerObserver",R,N
sharedPlayerObserver
_identifierSet
_mediaType
_excludeFromShuffle
_has
copyWithZone:
dictionaryRepresentation
readFrom:
writeTo:
allocWithZone:
numberWithBool:
setObject:forKey:
numberWithInt:
dictionary
T@"NSArray",&,N
operationsForRequest:
invalidationObservers
setInvalidationObservers:
T@"MPSectionedCollection",&,N,V_personalizedModelObjects
T@"NSArray",&,N,V_invalidationObservers
_invalidationObservers
_personalizedModelObjects
operationsForPlayerRequest:
personalizedModelObjects
setPersonalizedModelObjects:
arrayWithObjects:count:
controller:chain:
playerState:chain:
tracklistUniqueIdentifier:chain:
playerRepeatType:chain:
playerShuffleType:chain:
playerQueueEndAction:chain:
playerLastChangeDirection:chain:
playerUpNextItemCount:chain:
playerExplicitContentState:chain:
playerNumberOfSections:chain:
playerNumberOfItems:inSection:chain:
playerItemDuration:atIndexPath:chain:
playerItemLocalizedDurationString:atIndexPath:chain:
playerItemExplicitBadge:atIndexPath:chain:
playerItemEditingStyleFlags:atIndexPath:chain:
playerItemIsPlaceholder:atIndexPath:chain:
playerModelObject:propertySet:atIndexPath:chain:
playerPlayingItemIndexPath:chain:
playerPlayingItemGlobalIndex:chain:
playerGlobalItemCount:chain:
sectionIsAutoPlaySection:atIndex:chain:
playerIsSharedListeningSession:chain:
preferredAudioFormat:chain:
activeAudioFormat:chain:
activeAudioFormatJustification:chain:
audioFormatPreference:chain:
audioRoute:chain:
alternateAudioFormats:chain:
playerItemLanguageOptionGroups:atIndexPath:chain:
playerItemCurrentLanguageOptions:atIndexPath:chain:
playerCommandSupported:command:chain:
playerCommandEnabled:command:chain:
playerCommandOptionValue:forKey:command:chain:
playerVideoView:chain:
videoOutput:chain:
length
section
T@"<MFPlaybackStackController><MFQueueManagement>",&,N,V_playbackStackController
T@"MPCItemBookmarker",&,N,V_bookmarker
T@"MPCMediaFoundationTranslator",&,N,V_translator
T@"MPCErrorControllerImplementation",&,N,V_errorController
T@"MPCExternalPlaybackControllerImplementation",&,N,V_externalPlaybackController
T@"<MFAssetLoading>",&,N,V_assetLoader
T@"MPCLeaseController",&,N,V_leaseController
T@"MPCPlayerItemConfigurator",&,N,V_configurator
TQ,N,V_stateHandle
T@"MPCAVItemTrace",&,N,V_playbackStartTrace
TB,N,V_loadingInitialItem
TQ,N,V_pendingWaitForReadyToPlaySignpostIdentifier
T@"AVPlayerViewController",R,N
T@"NSDictionary",R,N
T@"MPCPlaybackEngine",R,W,N,V_playbackEngine
T@"<MPAVQueueController>",&,N,V_queueController
T@"MPAVItem",R,N
T@"MPQueuePlayer",R,N,V_queuePlayer
Td,R,N
Tf,R,N
Tq,R,N
TB,R,N
TB,N,V_autoPlayWhenLikelyToKeepUp
Tq,N,V_actionAtQueueEnd
reloadingPlaybackContext
TB,R,N,GisReloadingPlaybackContext,V_reloadingPlaybackContext
_autoPlayWhenLikelyToKeepUp
_reloadingPlaybackContext
_loadingInitialItem
_playbackEngine
_queueController
_queuePlayer
_actionAtQueueEnd
_playbackStackController
_bookmarker
_translator
_errorController
_externalPlaybackController
_assetLoader
_leaseController
_configurator
_stateHandle
_playbackStartTrace
_pendingWaitForReadyToPlaySignpostIdentifier
T@"MPCPlaybackEngine",R,W,N
T@"<MPAVQueueController>",&,N
T@"MPQueuePlayer",R,N
TB,N
Tq,N
TB,R,N,GisReloadingPlaybackContext
changePlaybackIndexBy:deltaType:ignoreElapsedTime:force:error:
play
playWithOptions:
pause
pauseWithFadeout:
togglePlayback
setRate:completion:
beginSeek:
endSeek
setCurrentTime:
endPlayback
beginUsingVideoLayer
endUsingVideoLayer
setQueueWithPlaybackContext:identifier:completionHandler:
endPlaybackWithIdentifier:completion:
playWithRate:identifier:completion:
pauseWithIdentifier:completion:
pauseWithFadeout:identifier:completion:
pauseForLeasePreventionWithIdentifier:completion:
togglePlaybackWithIdentifier:completion:
skipWithDirectionShouldJumpToItemStart:
skipWithDirection:identifier:completion:
beginScanningWithDirection:identifier:completion:
endScanningWithIdentifier:completion:
setRate:identifier:completion:
jumpToTime:identifier:completion:
setRelativeVolume:
didReachEndOfQueueWithReason:
initWithPlaybackEngine:
reloadWithPlaybackContext:identifier:completionHandler:
replaceCurrentItemWithPlaybackContext:identifier:completionHandler:
loadSessionWithQueueController:completionHandler:
becomeActiveWithCompletion:
updateAudioSession
playbackEngine
queueController
setQueueController:
currentItem
queuePlayer
currentTime
currentRate
state
stateBeforeInterruption
hasPlayedSuccessfully
autoPlayWhenLikelyToKeepUp
setAutoPlayWhenLikelyToKeepUp:
actionAtQueueEnd
setActionAtQueueEnd:
isReloadingPlaybackContext
assetLoadingDidStartForItem:
assetLoadingDidCompleteForItem:error:
queueControllerDidChangeContents:
queueController:failedToLoadItem:
queueController:didChangeContentsWithReplacementPlaybackContext:
queueController:didChangeRepeatType:
queueController:didChangeShuffleType:
queueController:didChangeActionAtQueueEnd:
queueController:didIncrementVersionForSegment:
currentItemWillChangeFromItem:toItem:source:timeStamp:
itemIsReadyToPlay:timeStamp:
itemDidFailToLoad:error:timeStamp:
itemDidFailToPlayToEnd:error:timeStamp:
itemDidBecomeCurrent:source:timeStamp:
itemDidResignCurrent:source:timeStamp:
playbackDidStartForItem:rate:fromStalling:timeStamp:
playbackDidStopForItem:timeStamp:
playbackWaitingToPlayForItem:reason:timeStamp:
itemDidPlayToEnd:timeStamp:
playbackTimeDidChangeTo:forItem:reason:timeStamp:
playbackRateDidChangeToRate:forItem:timeStamp:
relativeVolumeDidChangeTo:timeStamp:
playbackIsLikelyToKeepUp:forItem:timeStamp:
playbackBufferStateDidChangeToState:forItem:timeStamp:
tracksDidChangeForItem:timeStamp:
interruptionDidBeginWithInterruptor:timeStamp:
interruptionDidFinishForInterruptor:shouldResume:timeStamp:
routeDidChange:metadata:timeStamp:
stateDidChangeFromState:toState:timeStamp:
screenRecordingDidChange:timeStamp:
userActionDidBegin:
userActionDidEnd:error:
mediaServicesInterruptionDidBeginWithItemAtDeath:timeAtDeath:timeStamp:
mediaServicesInterruptionDidEndWithTimeStamp:
playbackIsBlockedOnNonPlayableItem:
userSeekCompletedForItem:fromTime:toTime:timeStamp:
didReportSignpostWithType:
dealloc
playerViewController
_resetPlaybackStack
_setupPlaybackStackWithPlaybackEngine:queueController:
_stateDictionary
_logTimeJumpForItem:fromTime:toTime:userInitiated:timeStamp:
_MPAVItemForMFQueuePlayerItem:
_playbackDidStopForItem:time:
playbackDidReachQueueEndWithTimeStamp:
_updateActiveFormatForQueueItem:
_logPlayerEventsForQueueItem:
firstVideoFrameWasRenderedForItem:timeStamp:
playbackStackController
setPlaybackStackController:
bookmarker
setBookmarker:
translator
setTranslator:
errorController
setErrorController:
externalPlaybackController
setExternalPlaybackController:
assetLoader
setAssetLoader:
leaseController
setLeaseController:
configurator
setConfigurator:
stateHandle
setStateHandle:
playbackStartTrace
setPlaybackStartTrace:
loadingInitialItem
setLoadingInitialItem:
pendingWaitForReadyToPlaySignpostIdentifier
setPendingWaitForReadyToPlaySignpostIdentifier:
dictionaryWithObjects:forKeys:count:
isStartItem
initialPlaybackStartTime
numberWithDouble:
modelKind
isArtistUploadedContent
song
identifiers
anyObject
null
hostTime
userSecondsSinceReferenceDate
statusWithCode:error:
successStatus
source
sourceID
numberWithUnsignedInt:
timeStamp
isModeShared
rate
currentQueueItem
forPlayerState:
isAirplay
routeDescription
doubleValue
entryReasonCode
switchBitrate
averageAudioBitrate
indicatedBitrate
observedBitrate
startupTime
countByEnumeratingWithState:objects:count:
events
accessLog
reevaluateHasProtectedContent
effectiveRate
calculatedElapsedTime
elapsedTimeTimestamp
forPlaybackTimeChangeReason:
currentState
forItemChangeSource:
targetRate
errorWithDomain:code:userInfo:
itemError
setObject:forKeyedSubscript:
currentItemTransition
stateDictionary
numberWithFloat:
numberWithInteger:
setupForManagedSessionWithAudioSession:
setMaximumPlayerQueueLength:
initWithPlayerID:queueController:assetLoader:errorController:externalPlaybackController:leaseController:queue:
jumpTo:identifier:completion:
_setCurrentPlaybackRate:
shouldSkipJumpToItemStart:
pauseWithFadeOut:identifier:completion:
UUIDString
interruptedState
updateAudioSessionWithConfiguration:
initWithCategory:routeSharingPolicy:options:
activateAudioSessionWithCompletion:
canReusePlayerItem
setQueueWithInitialItem:andPlay:identifier:completion:
modeDescription
setupForSolo
setupForShared
isModeSolo
restoreQueue:
domain
responseDictionary
_isAgeVerificationError:
errorForICError:response:
code
userInfo
mutableCopy
T@"MPCMediaRemoteMiddleware",&,N,V_middleware
T@"MPRequest<MPCMediaRemoteMiddlewareMetadataOperationConfiguration>",&,N,V_request
T@"MPCFuture",&,N,V_playQueueIdentifiersFuture
T@"MPCFuture",&,N,V_playingIdentifierFuture
T@"MPCFuture",&,N,V_queueIdentifierFuture
T@"NSArray",R,N
T@"NSMapTable",&,N,V_inputOperations
error
T@"NSError",R,N
T@?,C,N,V_invalidationHandler
T@"NSArray",R,N,V_invalidationObservers
_invalidationHandler
_inputOperations
_middleware
_request
_playQueueIdentifiersFuture
_playingIdentifierFuture
_queueIdentifierFuture
T@"NSMapTable",&,N
inputProtocols
outputProtocols
inputOperations
setInputOperations:
T@?,C,N
timeoutDescription
invalidationHandler
setInvalidationHandler:
initWithMiddleware:request:
_loadItemsWithCompletion:
_loadPlayingIdentifierWithCompletion:
execute
rangeFromTracklistRange:
_genericObjectPropertySetForContentItem:preferredRelationships:propertySet:
_itemGenericObjectPropertySetForContentItem:propertySet:
middleware
setMiddleware:
request
setRequest:
playQueueIdentifiersFuture
setPlayQueueIdentifiersFuture:
playingIdentifierFuture
setPlayingIdentifierFuture:
queueIdentifierFuture
setQueueIdentifierFuture:
arrayByAddingObject:
initWithProperties:relationships:
relationships
objectForKeyedSubscript:
deviceSpecificUserInfo
propertySetByCombiningWithPropertySet:
emptyPropertySet
dictionaryWithCapacity:
requiredStoreLibraryPersonalizationProperties
T@"MPSectionedCollection",R,N
T@"NSIndexPath",R,C,N
sourceContentItems
modelObjects
playingIndexPath
appendItem:
objectForPropertySet:contentItem:context:
indexPathForItem:inSection:
isEqualToDictionary:
collectionInfo
isEqualToString:
collectionIdentifier
objectAtIndexedSubscript:
firstObject
initWithIdentifiers:block:
emptyIdentifierSet
sectionObjectForPropertySet:contentItem:context:
appendSection:
setArtworkGenerator:
translatorForMPModelClass:
isCancelled
finish
qualityOfService
enumerateObjectsUsingBlock:
replaceObjectAtIndex:withObject:
stringByAppendingString:
addObject:
arrayWithCapacity:
T@"NSDictionary",C,N,V_audioFormatsDictionary
T@"NSArray",&,N,V_availableSortedFormats
T@"<MPCModelPlaybackAssetCacheProviding>",&,N,V_assetCacheProvider
T@"NSString",C,N,V_assetSourceStoreFrontID
Tq,N,V_equivalencySourceAdamID
T@"MPModelGenericObject",&,N,V_genericObject
T@"NSData",R,C,N,V_jingleTimedMetadata
T@"MPMediaLibrary",&,N,V_mediaLibrary
siriInitiated
T@"NSNumber",C,N,GisSiriInitiated,V_siriInitiated
radioPlayback
TB,N,GisRadioPlayback,V_radioPlayback
radioStreamPlayback
TB,N,GisRadioStreamPlayback,V_radioStreamPlayback
subscriptionRequired
TB,N,GisSubscriptionRequired,V_subscriptionRequired
T@"MPCPlaybackRequestEnvironment",R,C,N,V_playbackRequestEnvironment
Tq,N,V_stationItemLikedState
T@"NSDictionary",&,N,V_trackInfo
T@"MPCPlaybackEngineEventStream",W,N,V_eventStream
T@"MPCPlayerAudioFormat",&,N,V_preferredFormat
T@"MPCPlayerAudioFormat",&,N,V_activeFormat
Tq,N,V_activeFormatJustification
T@"NSArray",&,N,V_alternateFormats
T@"MPCPlayerAudioRoute",&,N,V_audioRoute
Tq,R,N,V_preferredAudioAssetType
Tq,R,N,V_loadedAudioAssetType
hlsAsset
TB,R,N,GisHLSAsset,V_hlsAsset
downloadedAsset
TB,R,N,GisDownloadedAsset,V_downloadedAsset
rtcReportingParentHierarchyToken
T@,R,N
T@"NSString",R,C,N
_accessQueue
_allowsAirPlayFromCloud
_bookmarkTime
_hasLoadedSubscriptionLeaseSession
_subscriptionLeaseSessionLoadQueue
_subscriptionLeaseSession
_hasLoadedSubscriptionPlaybackInformation
_subscriptionPlaybackInformation
_subscriptionPlaybackInformationLoadQueue
_shouldAutomaticallyRefreshSubscriptionLease
_isAssetSubscriptionProtectionType
_isSubscriptionPolicyContent
_lastPreparedForNonZeroRate
_subscriptionLeaseRequestCount
_didDeferPreventionStatusUpdate
_suzeLeaseSession
_isAutomaticallyRefreshingSuzeLeaseSession
_firstBecomeActivePlayerItemBlock
_currentGlobalTimedMetadataGroups
_flattenedGenericObject
_flattenedMetadataGenericObject
_metadataGenericObject
_itemProperties
_identityPropertiesLoader
_timedMetadataRequest
_timedMetadataResponse
_timedMetadataOperationQueue
_isMusicCellularStreamingAllowed
_didReceiveHLSTimedMetadata
_hlsStreamIdentifier
_isiTunesStoreStream
_storeRequestContext
_streamingKeyCertificateURL
_streamingKeyServerURL
_rtcReportingServiceIdentifier
_identityPropertySet
_contentKeySession
_hlsDownloadURLSession
_hlsDownloadURLRequest
_genericObjectLock
_radioPlayback
_radioStreamPlayback
_subscriptionRequired
_hlsAsset
_downloadedAsset
_leasePlaybackPreventionState
_leaseStatus
_audioFormatsDictionary
_preferredAudioAssetType
_assetCacheProvider
_assetSourceStoreFrontID
_equivalencySourceAdamID
_genericObject
_jingleTimedMetadata
_mediaLibrary
_siriInitiated
_playbackRequestEnvironment
_stationItemLikedState
_trackInfo
_eventStream
_preferredFormat
_activeFormat
_activeFormatJustification
_alternateFormats
_availableSortedFormats
_audioRoute
_loadedAudioAssetType
rtcReportingServiceIdentifier
rtcReportingAssetType
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeBatteryLevel:
environmentMonitorDidChangeTelephonyStatus:
environmentMonitorDidChangeThermalLevel:
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
outputSequenceWasFlushed:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
initWithGenericObject:itemProperties:playbackRequestEnvironment:identityPropertySet:
album
albumYear
albumArtist
albumStoreID
artistStoreID
albumTrackNumber
albumTrackCount
allowsEQ
applyVolumeNormalizationWithSoundCheckEnabled:
artist
artworkTimeMarkers
composer
chapterTimeMarkers
copyrightText
durationFromExternalMetadata
externalContentIdentifier
genre
isAlwaysLive
isAssetURLValid
isExplicitTrack
explicitBadge
isLikedStateEnabled
isRadioItem
isStreamable
isValidPlayerSubstituteForItem:
_delegatedUserIdentityProperties:
_prefersHighQualityContent
hasVideo
_assetLoadPropertiesWithUserIdentityProperties:delegatedUserIdentityProperties:
_suzeLeaseMediaType
_iTunesStorePurchasedMediaKind
_gaplessInfo
_loudnessInfoMediaKind
_volumeAdjustment
loadAssetAndPlayerItem
currentPlayerAudioFormat
audioFormatForStableVariantID:
updateAudioFormatsDictionary:
updatePreferredFormat:
updateActiveFormat:justification:
configureAVPlayerItemWithAudioFormat:forceSpatial:
_updateActiveFormatJustification:
_emitAudioFormatChangeEvent
alternateAudioFormatsKnowingActiveFormat:
updatePlayerItemMetadata
mainTitle
mediaItem
modelGenericObject
mediaType
persistentID
databaseID
cloudID
personID
cloudUniversalLibraryID
cloudAlbumID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
storePurchasedAdamID
notePlaybackFinishedByHittingEnd
playbackError
shouldShowComposer
prefersSeekOverSkip
prepareForRate:completionHandler:
reevaluateType
setRating:
shouldReportPlayEventsToStore
stationID
stationHash
stationName
stationStringID
stationProviderID
storeItemInt64ID
storeSubscriptionAdamID
supportsLikedState
libraryLyrics
hasStoreLyrics
hasTimeSyncedLyrics
containerUniqueID
playbackInfo
type
urlTimeMarkers
useEmbeddedChapterData
userRating
_updateAudioFormatInfoForContentItem:
_contentItemUserInfo
canUseLoadedAsset
allowsAirPlayFromCloud
allowsExternalPlayback
bookmarkTime
requiresLoadedAssetForAirPlayProperties
resolvePlaybackError:withCompletion:
setPlaybackCheckpointCurrentTime:
setPlaybackFinishedTime:
setPlaybackStoppedTime:
shouldPreventPlayback
storeAccountID
storeFrontIdentifier
useListeningHistory
usesSubscriptionLease
_currentPlaybackRateDidChange:
_handleUpdatedLikedState:forUserIdentity:completion:
_persistedLikedState
_willBecomeActivePlayerItem
_willResignActivePlayerItem
_didResignActivePlayerItem
_didBecomeActivePlayerItem
_keyServerAdamID
artworkCatalogBlock
mpcReporting_equivalencySourceAdamID
mpcReporting_itemType
mpcReporting_identityPropertiesLoader
mpcReporting_jingleTimedMetadata
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_privateListeningEnabled
mpcReporting_siriInitiated
mpcReporting_trackInfo
_reloadTimedMetadataRequest
nowPlayingInfoCenter:lyricsForContentItem:completion:
mediaLibrary
setGenericObject:
_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:
_ageVerificationStateDidChangeNotification:
_contentTasteControllerDidChangeNotification:
_subscriptionLeaseStatusDidChangeNotification:
_suzeLeaseSessionRenewDidFailNotification:
_timedMetadataResponseDidInvalidateNotification:
_timeoutValues
_allowsAssetCaching
_allowsStreamingPlayback
_applyLoudnessInfo
_applyPreferredPeakBitRateToPlayerItem:withItemType:
_audioFormatPreference
_getSubscriptionLeasePropertiesWithCompletion:
_getUnverifiedSubscriptionLeaseSessionWithCompletion:
_handlePlaybackFinishedTime:didFinishByHittingEnd:
_updateHasBeenPlayedWithElapsedTime:completion:
_invalidateContentItem
_isPrivateListeningEnabled
_modelPlaybackPosition
_postInvalidationNotifications
_radioStation
_rtcReportingServiceIdentifierWithAssetURL:
_shouldRememberBookmarkTime
_startTime
_stopTime
_storeUbiquitousIdentifier
_updateAutomaticSubscriptionLeaseRefresh
_updateBookmarkTime:isCheckpoint:
_updateJingleTimedMetadata
_updatePreventionStatusWithLeaseSession:
analyticsFormatName
analyticsFormatInfo
leasePlaybackPreventionState
leaseStatus
audioFormatsDictionary
setAudioFormatsDictionary:
preferredAudioAssetType
assetCacheProvider
setAssetCacheProvider:
assetSourceStoreFrontID
setAssetSourceStoreFrontID:
equivalencySourceAdamID
setEquivalencySourceAdamID:
genericObject
jingleTimedMetadata
setMediaLibrary:
isSiriInitiated
setSiriInitiated:
isRadioPlayback
setRadioPlayback:
isRadioStreamPlayback
setRadioStreamPlayback:
isSubscriptionRequired
setSubscriptionRequired:
playbackRequestEnvironment
stationItemLikedState
setStationItemLikedState:
trackInfo
setTrackInfo:
eventStream
setEventStream:
preferredFormat
setPreferredFormat:
activeFormat
setActiveFormat:
activeFormatJustification
setActiveFormatJustification:
alternateFormats
setAlternateFormats:
availableSortedFormats
setAvailableSortedFormats:
audioRoute
setAudioRoute:
loadedAudioAssetType
isHLSAsset
isDownloadedAsset
postNotificationName:object:
copy
hasOnlinePlaybackKeys
shouldPlaybackRequireOnlineKeys
leaseState
hasPendingLeaseAcquisition
objectForKey:
extraAttributes
keySpace
dataValue
_expectedStopTimeWithPlaybackInfo:
userSkippedPlayback
shouldUseLease
_currentPlaybackRate
storeUbiquitousIdentifier
stopTime
startTime
shouldRememberBookmarkTime
isFileURL
isNonPurgeable
filePath
endpointType
isRedownloadable
movie
tvEpisode
localFileAsset
itemType
playbackPosition
addOperation:
_utilitySerialQueue
initWithModel:
boolValue
setMeetsPlaybackHistoryThresholdForElapsedTime:startTime:
beginBackgroundTaskWithExpirationHandler:
sharedApplication
endBackgroundTask:
setUserSkippedPlayback:
getLeaseSessionWithRequestContext:completionHandler:
performSubscriptionStatusRequest:withCompletionHandler:
initWithICSubscriptionStatus:
sharedStatusController
setAllowsFallbackToStatusNeedingReload:
setAllowsFallbackToExpiredStatus:
setShouldIgnoreCache:
initWithStoreRequestContext:
setPreferredPeakBitRate:
preferredPeakBitRate
_prefersHighQualityAudioContentForNetworkType:
setPreferredMaximumResolution:
preferredMaximumResolution
_prefersHighQualityVideoContentForNetworkType:
lastKnownNetworkType
sharedMonitor
loudnessInfoVolumeNormalization
mediaKind
setLoudnessInfo:
playerItem
disableAssetCaching
standardUserDefaults
isAudioAccessory
currentDeviceInfo
isWatch
isRemoteServerLikelyReachable
setItemError:
_setNeedsPersistedLikedStateUpdate
setExplicitBadge:
invalidateContentItemDeviceSpecificUserInfo
flattenedGenericObject
deviceMediaLibraryWithUserIdentity:
initWithLyrics:userProvided:token:
initWithIdentifier:userInfo:
lyrics
setQualityOfService:
setSong:
setMaxConcurrentOperationCount:
_updateDurationSnapshotWithElapsedTime:playbackRate:
removeObserver:name:object:
setItemProperties:
observer
setLastMetadataChangeTime:
getBagForRequestContext:withCompletionHandler:
urlForBagKey:
sharedBagProvider
performWithResponseHandler:
postNotificationName:object:userInfo:
finishAssetResourceLoadingRequest:withError:
initWithObjectsAndKeys:
contentURI
setSkippedRentalCheckout:
setRentalID:
setITunesStoreRequest:
configureUsingAssetResourceLoadingRequest:
setLeaseActionType:
setKeyServerURL:
setCertificateURL:
setShouldIncludeDeviceGUID:
didAttemptToLoadAsset
dataWithPropertyList:format:options:error:
performWithoutEnforcement:
artworkCatalog
reportingAdamID
adamID
subscriptionAdamID
universalStore
tasteTypeForModel:
setTasteType:forModel:withCompletionHandler:
controllerWithUserIdentity:
includeContentItemDebugFields
storefrontIdentifier
DSID
addEntriesFromDictionary:
purchasedAdamID
longLongValue
radio
shouldReportPlayEvents
personalizedStore
setValue:forProperty:withCompletionBlock:
supportsRating
performPlaybackRequest:completionHandler:
T@"NSError",R,C,N
T@"ICStoreDialogResponse",R,C,N
serverError
dialog
setShouldRequireLeaseAcquisition:
initWithRequestContext:
hasOfflinePlaybackKeys
subtype
networkType
durationIfAvailable
library
show
season
universalCloudLibraryID
itemFromModelObject:
itemWithPersistentID:verifyExistence:
msv_filter:
numberWithUnsignedInteger:
invalidateContentItemUserInfo
invalidateContentItemAudioFormatInfo
sortedArrayUsingComparator:
allValues
currentStableVariantID
initWithRequestContext:leaseID:mediaType:
setPlayerItem:
addOutput:
initWithIdentifiers:
setGaplessInfo:
lastPacketsResync
durationInFrames
encodingDrainInFrames
encodingDelayInFrames
heuristicInfo
setMediaKind:
setPlaybackLikelyToKeepUpTrigger:
setAudioTimePitchAlgorithm:
setVolumeAdjustment:
playerItemWithAsset:
setDelegate:queue:
resourceLoader
enqueueAggregateAssetDownloadRequest:toDestination:withAVURLAsset:options:completionHandler:
loadValuesAsynchronouslyForKeys:completionHandler:
statusOfValueForKey:error:
initWithURL:options:
setHLSKeyCertificateURL:
absoluteString
setHLSKeyServerURL:
setTraits:
setProtectionType:
setNonPurgeable:
setQualityType:
setFilePath:
relativePath
componentsJoinedByString:
initWithCapacity:
initWithModelKind:block:
identityKind
initWithURLRequest:requestContext:
setTimeoutInterval:
requestWithURL:
numberWithLong:
preferredMusicHighBandwidthResolution
sessionWithIdentifier:creationBlock:
initWithConfiguration:
setRequestCachePolicy:
setHTTPShouldUsePipelining:
setHTTPShouldSetCookies:
setHTTPCookieAcceptPolicy:
setDiscretionary:
setAllowsCellularAccess:
backgroundSessionConfigurationWithIdentifier:
sharedSessionManager
appendString:
stringWithString:
addAsset:shouldPreloadKeys:
setRequestOfflineKeys:
getKeyStatusForAccountUniqueIdentifier:error:
setKeyCertificateURL:
setAdamID:
initWithRequestContext:keyStore:
initWithPath:
path
isAppleTV
mpc_addDownloadCompletionHandler:
removeItemAtURL:error:
setPurchaseBundleFilePath:
fileExistsAtPath:
defaultManager
host
writeToURL:options:error:
URLAssetWithURL:options:
preferredMusicLowBandwidthResolution
reloadFairPlayKeyStatusWithCompletionHandler:
numberWithLongLong:
numberWithUnsignedLongLong:
userAgent
shouldUseAccountLessStreaming
hasPlaybackCapability
cachedResponseForRequest:
setStoreRadioAdamID:
setRequestType:
newHierarchyTokenFromParentToken:
volumeAdjustment
gaplessInfo
unsignedLongLongValue
playbackAuthorizationTokenForEntityMatchingIdentifierSet:
sharedServerObjectDatabase
delegatedIdentity
treatment
ageVerificationStateForUserIdentity:
isExplicitSong
_playerItemDurationIfAvailable
setLoudnessInfoVolumeNormalization:
setSoundCheckVolumeNormalization:
volumeNormalization
trackCount
trackNumber
year
cancelRequest:
isCurrentNetworkLinkExpensive
preferredVideoLowBandwidthResolution
preferredVideoHighBandwidthResolution
isNetworkConstrained
T@"AVURLAsset",R,W,N,V_asset
T@?,C,N,V_completionHandler
_asset
_completionHandler
initWithAsset:
_downloadCompleteSuccessNotification:
_downloadCompleteFailedNotification:
_notifyCompletionHandlerWithSuccess:error:
asset
completionHandler
setCompletionHandler:
TB,N,V_waitForCompleteClusters
_reconSession
_waitForCompleteClusters
discoverAirplayDevicesMatchingGroupID:completion:
discoverAirplayDevicesMatchingLogicalDeviceIDs:expectedCount:completion:
discoverAirplayDevicesMatchingUIDs:completion:
discoverRemoteControlEndpointsMatchingUIDs:completion:
stopDiscovery
_discoverAirplayDevices:
waitForCompleteClusters
setWaitForCompleteClusters:
opaqueSessionID
setCategory:error:
auxiliarySession
T@"ICUserIdentityProperties",C,N,V_identityProperties
T@"ICUserIdentityProperties",C,N,V_delegatedIdentityProperties
_identityProperties
_delegatedIdentityProperties
initWithIdentityProperties:delegatedIdentityProperties:
identityProperties
setIdentityProperties:
delegatedIdentityProperties
setDelegatedIdentityProperties:
identityPropertySetFromRequestContext:completion:
getPropertiesForUserIdentity:completionHandler:
identityStore
T@"MPCJinglePlayActivityReportingController",&,N,V_jinglePlayActivityReportingController
T@"MPCReportingPlaybackObserver",&,N,V_reportingPlaybackObserver
_jinglePlayActivityReportingController
_reportingPlaybackObserver
recordLyricsViewEvent:
jinglePlayActivityReportingController
setJinglePlayActivityReportingController:
reportingPlaybackObserver
setReportingPlaybackObserver:
setLyricsLanguage:
setLyricsDisplayedCharacterCount:
setItemEndTime:
setEventType:
_containerIndex
_itemIndex
setVolume:withUIDs:completion:
increaseVolumeBy:withUIDs:completion:
decreaseVolumeBy:withUIDs:completion:
executeWithUIDs:action:volumeValue:completion:
containsUID:
identifier
subscribeToEventStream:
unsubscribeFromEventStream:
T@"<MPCPlaybackEngineEventStreamSubscription>",R,N,V_subscription
_subscription
_logAccountEvent:subscription:cursor:
subscription
stringFromDate:
componentsSeparatedByString:
msv_description
serverID
integerValue
msv_compactDescription
unsignedIntValue
enumerateKeysAndObjectsUsingBlock:
stringByReplacingOccurrencesOfString:withString:
stringWithCapacity:
isDebug
uuid
stringByPaddingToLength:withString:startingAtIndex:
isRoot
compare:
infoDictionary
mainBundle
dateWithTimeIntervalSince1970:
infoCenterForPlayerID:
playbackQueueDataSource
string
appendFormat:
describePlayer:
T@"NSDictionary",R,C,N,V_equivalencyMapping
T{MPCModelStorePlaybackItemsRequestAccumulatorResult=BB},R,N
_requestUsesSectionedModelObjects
_sod
_personID
_requestPropertySet
_importResults
_allowsExplicitContent
_defaultLibraryPersonalizationStyle
_unknownEndpointLibraryPersonalizationStyle
_equivalencyMapping
_pendingStoreIDs
_failedStoreIDs
_storePersonalizationStyle
_progressiveContentDescriptors
initWithRequest:
initWithRequest:serverObjectDatabase:
unpersonalizedContentDescriptors
accumulatorResult
handleResponse:
newStoreItemMetadataRequest
_addEquivalencyForMetadata:requestStoreIdentifier:
_eligibilityForItem:
_playlistEntryForObject:containerUniqueID:
_resolveContentDescriptorsUsingServerObjectDatabase
_serverObjectFromPlaceholderContentDescriptor:propertySet:
_mergedObjectWithRequestedObjectIfNeeded:forIndexPath:
_userIdentityWithRequest:
equivalencyMapping
identityAllowingDelegation:
specificAccountWithDSID:
mergeWithObject:
playlistEntry
genericObjectWithModelObject:
indexAtPosition:
modelObjectMatchingIdentifierSet:propertySet:
setPersonalStoreIdentifiersWithPersonID:block:
setUniversalStoreIdentifiersWithBlock:
setUniversalCloudLibraryID:
setGlobalPlaylistID:
minusSet:
enumerateIndexesUsingBlock:
insertItem:atIndexPath:
removeObject:
relatedIdentifierSetsForParentIdentifierSet:childKey:
moveItemFromIndexPath:toIndexPath:
addIndex:
shiftIndexesStartingAtIndex:by:
UUID
replaceSectionAtIndex:withObject:
removeItemAtIndexPath:
preferredStoreStringIdentifierForPersonID:
insertSection:atIndex:
replaceItemsUsingBlock:
replaceSectionsUsingBlock:
indexPathWithIndex:
orderedSet
array
indexSet
setTvEpisode:
setMovie:
copyWithBlock:
setContainerUniqueID:
setUserIdentityStore:
setDelegatedUserIdentity:
setClientInfo:
clientInfo
addObjectsFromArray:
removeObjectAtIndex:
objectAtIndex:
indexOfObject:
enumerateSectionsUsingBlock:
setPersonalizationStyle:
setRetryDelay:
setReason:
removeAllObjects
storeItemMetadataForItemIdentifier:
lastBatchItemIdentifiers
importObjectsFromRequest:options:error:
initWithPayload:
allStoreItemDictionaries
totalItemCount
enumerateItemsInSectionAtIndex:usingBlock:
countForObject:
setPlaceholder:
containsObject:
setWithCapacity:
initWithModel:personalizationStyle:
copyWithIdentifiers:propertySet:
copyWithPropertySet:
needsPersonalization
allowsExplicitContent
sharedRestrictionsMonitor
propertySetWithProperties:
itemProperties
requiredKeepLocalStatusObservationProperties
supportsKeepLocalStatusObservation
modelClass
sectionKind
sectionProperties
DSIDForUserIdentity:outError:
defaultIdentityStore
_libraryAlbumContentReference
_libraryArtistContentReference
_libraryItemContentReference
_storeContentReference
firstResponse
TB,N,GisFirstResponse,V_firstResponse
finalResponse
TB,N,GisFinalResponse,V_finalResponse
T@"NSData",C,N,V_adamIDData
T@"MPCModelGenericAVItemTimedMetadataStreamFields",&,N,V_streamFields
T@"MPSectionedCollection",C,N,V_unpersonalizedContentDescriptors
_personalizationResponse
_firstResponse
_finalResponse
_adamIDData
_streamFields
_unpersonalizedContentDescriptors
initWithRequest:personalizationResponse:firstResponse:finalResponse:
_personalizationResponseDidInvalidateNotification:
isFirstResponse
setFirstResponse:
isFinalResponse
setFinalResponse:
adamIDData
setAdamIDData:
streamFields
setStreamFields:
setUnpersonalizedContentDescriptors:
isValid
setResults:
T@"NSString",C,N,V_title
T@"NSString",C,N,V_artist
T@"NSString",C,N,V_album
explicitContent
TB,N,GisExplicitContent,V_explicitContent
T@"NSArray",C,N,V_artworkDictionaries
_explicitContent
_title
_artist
_album
_artworkDictionaries
title
setTitle:
setArtist:
setAlbum:
isExplicitContent
setExplicitContent:
artworkDictionaries
setArtworkDictionaries:
_eventQueue
_lastSiriReferenceIdentifierForPlaybackStart
_observedTimebase
_handleAssetLoadEnd:cursor:
_contextWithEvent:
_itemTimebaseDidChangeNotification:
_attemptPlaybackStartReportingEventWithItem:
_createContextDictionaryWithSiriReferenceIdentifier:siriWHAMetricsInfo:formatInfo:
_timebaseEffectiveRateChangedNotification
timeIntervalSinceReferenceDate
logEventWithType:machAbsoluteTime:context:
sharedAnalytics
timebase
feeder
builder
T@"<MPCPlayerSessionResponseBuilder>",R,D,N
T@"MPCMediaRemoteController",R,N,V_controller
T@"MPSectionedCollection",R,N,V_items
_items
_controller
initWithRequest:middleware:
items
controller
sessionMetadataObject:atIndexPath:chain:
sessionNumberOfSessions:forPlayerPathAtIndex:chain:
sessionPlayerPath:atIndex:chain:
sessionNumberOfPlayerPaths:chain:
chain
builderProtocol
T@"MPCPlayerPath",&,N,V_playerPath
T@"MPPropertySet",C,N,V_sessionProperties
T{?=qq},R
T@"MPPropertySet",R,N
preferredFallbackItemRelationship
T@"NSString",R,N
_playerPath
_sessionProperties
T@"MPCPlayerPath",R,N
playerPath
tracklistRange
playingItemProperties
queueItemProperties
queueSectionProperties
setPlayerPath:
middlewareClasses
sessionProperties
setSessionProperties:
stringByReplacingCharactersInRange:withString:
responseClass
_cloudID
_delegateInfoID
_purchaseHistoryID
_storeAdamID
_storeSubscriptionAdamID
_cloudUniversalLibraryID
_contentItemID
T@"MPMusicPlayerControllerSystemCache",R,N,V_systemCache
T@"NSXPCListener",R,N,V_listener
T@"NSMutableArray",R,N,V_activeConnections
T@"NSXPCListenerEndpoint",R,N
running
TB,R,N,GisRunning
_queueDescriptor
_preparingDescriptor
_prepareCompletionHandler
_skipWaitingForLikelyToKeepUp
_resumed
_systemCache
_listener
_activeConnections
engine:didChangeToState:
engine:willChangeToItem:fromItem:
engine:didChangeToItem:
engine:didAchieveLikelyToKeepUpWithItem:
engine:didEndPlaybackOfItem:
engine:didChangeItemElapsedTime:rate:
engine:didResetQueueWithPlaybackContext:error:
engine:didChangeQueueWithReason:
engine:didReachEndOfQueueWithReason:
engine:didChangeShuffleType:
engine:didChangeRepeatType:
engine:didChangeActionAtQueueEnd:
engine:didChangeAccounts:
engine:didChangeCurrentItemVariantID:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
engineDidLoseMediaServices:
engineDidResetMediaServices:
listener:shouldAcceptNewConnection:
performQueueModifications:completion:
getNowPlayingWithReply:
getNowPlayingAtIndex:reply:
setNowPlayingItem:itemIdentifier:completion:
getImageForArtworkIdentifier:itemIdentifier:atSize:reply:
getTimeSnapshotWithReply:
getDescriptorWithReply:
setDescriptor:completion:
prependDescriptor:completion:
appendDescriptor:completion:
pauseWithFadeDuration:
stop
skipWithBehavior:
reshuffle
beginSeekWithDirection:
setRepeatMode:
getRepeatModeWithReply:
getShuffleModeWithReply:
setElapsedTime:completion:
setPlaybackRate:completion:
getUserQueueModificationsDisabledWithReply:
setUserQueueModificationsDisabled:
isRunning
startServer
resumeIfNeeded
stopServer
endpoint
_nowPlayingWithItem:
_timeSnapshotWithElapsedTime:rate:
_handleCommandHandlersRegistered:
_registerForCommandHandlersRegisteredNotification
systemCache
listener
activeConnections
resume
integerForKey:
setRemoteObjectInterface:
setServerQueueDescriptor:
setServerNowPlaying:
setServerTimeSnapshot:
serverPlaybackModeDidChangeAffectingQueue:
serverItemDidEnd
serverQueueDidEnd
setExportedObject:
proxyWithObject:protocol:
protocol
exportedInterface
setExportedInterface:
interfaceWithProtocol:
processIdentifier
remoteObjectProxy
setQueueDescriptor:
queueDescriptor
setNowPlaying:
insertedDescriptors
removedItemIdentifiers
commandHandlersRegistered
isEnabled
invokeCommandWithEvent:completion:
serverCopy
newCommandEventWithPlaybackRate:
changePlaybackRateCommand
newCommandEventWithPositionTime:
isSupportedAndEnabled
changePlaybackPositionCommand
changeShuffleModeCommand
newCommandEventWithType:
changeRepeatModeCommand
newSeekCommandEventWithType:
seekForwardCommand
seekBackwardCommand
newCommandEvent
reshuffleCommand
previousTrackCommand
newCommandEventWithCommandType:options:
nextTrackCommand
pauseCommand
playCommand
initWithCommand:playbackQueue:options:
setReplaceIntent:
insertIntoPlaybackQueueCommand
initWithCommand:playbackQueue:
setPlaybackQueueCommand
hasSuffix:
auditToken
currentConnection
snapshotWithElapsedTime:duration:rate:atTimestamp:state:
liveSnapshotWithRate:state:
requestImageWithCompletion:
setFittingSize:
playItemInQueueCommand
nowPlayingWithItem:itemIdentifier:artworkIdentifier:index:count:
initWithModelObject:
copyWithIdentifiers:block:
anonymousListener
initWithMachServiceName:
mediaRemoteOptions
mediaRemoteCommandType
initWithCommand:mediaRemoteType:options:
assetLoadResultWithStoreAssetPlaybackResponse:assetLoadProperties:error:
setAudioAssetType:
setWillBecomeActivePlayerItemHandler:
updateForPlaybackOfFileAsset:fromResponse:
setPlaybackAuthorizationToken:
playbackAuthorizationToken
setSuzeLeaseID:
suzeLeaseID
setAssetProtectionType:
protectionType
setPurchaseBundleDictionary:
purchaseBundleSinfDictionary
fairPlayInfoList
setOnlineSubscriptionKeysRequired:
onlineSubscriptionKeysRequired
fileExtension
flavorType
assetURL
fileAssetInfoList
setEnhancedAudioKeyServerURL:
enhancedAudioKeyServerURL
setEnhancedAudioKeyCertificateURL:
enhancedAudioKeyCertificateURL
setAssetQualityType:
setAssetPathExtension:
setAllowsAssetCaching:
setAlternateHLSKeyCertificateURL:
alternateKeyCertificateURL
setAlternateHLSKeyServerURL:
alternateKeyServerURL
setAlternateHLSPlaylistURL:
alternatePlaylistURL
playlistURL
hlsAssetInfo
setIsHLSAsset:
streamProtocol
setIsCloudStreamingAsset:
setAllowsAssetInfoCaching:
setITunesStoreStream:
isiTunesStoreStream
setStreamingKeyCertificateURL:
keyCertificateURL
setStreamingKeyServerURL:
keyServerURL
setAssetURL:
streamURL
sortUsingComparator:
flavor
filteredArrayUsingPredicate:
radioStreamAssetInfoList
predicateWithFormat:
isLiveRadioStream
TB,N,V_allowsAssetCaching
TB,N,V_allowsAssetInfoCaching
T@"NSString",C,N,V_assetPathExtension
Tq,N,V_assetProtectionType
Tq,N,V_assetQualityType
T@"NSURL",C,N,V_assetURL
TB,N,V_isHomeSharingAsset
TB,N,V_isHLSAsset
TB,N,V_isCloudStreamingAsset
TB,N,V_onlineSubscriptionKeysRequired
T@"NSURL",C,N,V_protectedContentSupportStorageFileURL
T@"NSDictionary",C,N,V_purchaseBundleDictionary
T@"NSURL",C,N,V_streamingKeyCertificateURL
T@"NSURL",C,N,V_streamingKeyServerURL
T@"NSURL",C,N,V_alternateHLSPlaylistURL
T@"NSURL",C,N,V_alternateHLSKeyServerURL
T@"NSURL",C,N,V_alternateHLSKeyCertificateURL
T@,&,N,V_suzeLeaseID
iTunesStoreStream
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
T@?,C,N,V_willBecomeActivePlayerItemHandler
T@"NSURL",C,N,V_enhancedAudioKeyCertificateURL
T@"NSURL",C,N,V_enhancedAudioKeyServerURL
T@"NSString",C,N,V_playbackAuthorizationToken
Tq,N,V_audioAssetType
TB,N,GisDownloadedAsset,V_downloadedAsset
_allowsAssetInfoCaching
_isHomeSharingAsset
_isHLSAsset
_isCloudStreamingAsset
_onlineSubscriptionKeysRequired
_iTunesStoreStream
_assetPathExtension
_assetProtectionType
_assetQualityType
_assetURL
_protectedContentSupportStorageFileURL
_purchaseBundleDictionary
_alternateHLSPlaylistURL
_alternateHLSKeyServerURL
_alternateHLSKeyCertificateURL
_suzeLeaseID
_willBecomeActivePlayerItemHandler
_enhancedAudioKeyCertificateURL
_enhancedAudioKeyServerURL
_playbackAuthorizationToken
_audioAssetType
hasValidAsset
isEnhancedAudioHLSAsset
descriptionDictionary
allowsAssetCaching
allowsAssetInfoCaching
assetPathExtension
assetProtectionType
assetQualityType
isHomeSharingAsset
setIsHomeSharingAsset:
isCloudStreamingAsset
protectedContentSupportStorageFileURL
setProtectedContentSupportStorageFileURL:
purchaseBundleDictionary
streamingKeyCertificateURL
streamingKeyServerURL
alternateHLSPlaylistURL
alternateHLSKeyServerURL
alternateHLSKeyCertificateURL
willBecomeActivePlayerItemHandler
audioAssetType
setDownloadedAsset:
_calloutQueue
_serialWorkQueue
loadReportingIdentityPropertiesWithCompletionHandler:
hasCapability:
musicSubscriptionStatus
cloudServiceStatusControllerWithUserIdentity:
localStoreAccountProperties
T@"MPCReportingDeviceIdentityPropertiesLoader",R,N
sharedLoader
T@"MPModelMediaClip",R,N,V_mediaClip
_modelGenericObject
_mediaClip
initWithMediaClip:
_allowsCellularPlayback
_currentPreferredStaticAsset
_isVideoAsset
mediaClip
staticAssets
effectiveNetworkTypeForPlayback
sharedNetworkPlayabilityMonitor
previewArtworkCatalog
setMediaClip:
requiredMediaClipProperties
initializedSupportedCommands
TB,N,GhasInitializedSupportedCommands,V_initializedSupportedCommands
engineRestoringState
TB,N,GisEngineRestoringState,V_engineRestoringState
mediaServerAvailable
TB,N,GisMediaServerAvailable,V_mediaServerAvailable
T@"MPNowPlayingInfoCenter",R,N,V_infoCenter
T@"MPRemoteCommandCenter",R,N,V_commandCenter
_libraryAddStatusObserver
_libraryAddStatusObserverLock
_accounts
_activeAccountAllowsSubscriptionPlayback
_activeAccountStoreFrontIdentifier
_ipodDefaults
_hasBeganFastForward
_hasBeganRewind
_nextPreviousTrackCooldownTimer
_deferredTrackChangeDelta
_initializedSupportedCommands
_engineRestoringState
_mediaServerAvailable
_infoCenter
_commandCenter
becomeActive
publishIfNeeded
reportUserBackgroundedApplication
getShouldRestoreStateWithCompletion:
leaveSharedSessionWithCommandID:completion:
nowPlayingInfoCenter:didBeginLyricsEvent:
nowPlayingInfoCenter:didEndLyricsEvent:
_commandEventDidTimeoutNotification:
_disableQueueModificationsChangedNotification:
_durationAvailableNotification:
_likedStateChangedNotification:
_becomeActiveIfNeededWithCompletion:
_enqueueFallbackIntentIfNeededForCommandEvent:play:completion:
_exportableSessionTypes
_supportedSessionTypes
_updateLaunchCommands
_playbackStateIsIdle:
_updateSupportedCommands
_performCommandEvent:completion:
hasInitializedSupportedCommands
setInitializedSupportedCommands:
infoCenter
commandCenter
isEngineRestoringState
setEngineRestoringState:
isMediaServerAvailable
setMediaServerAvailable:
statusWithCode:customData:type:
dataUsingEncoding:
playbackRate
rating
setLikedState:forUserIdentity:
likedState
interval
durationInSeconds
durationIsValid
invalidatePlaybackQueueWithCompletion:
priority
dataWithContentsOfURL:
playbackSessionDataFilePath
decodedObjectOfClass:fromData:error:
playbackSessionData
setPrivateListeningOverride:
privateListeningOverride
T@"NSNumber",C,N
shouldBecomeActive
isRequestingPlaybackInitialization
setSessionIdentifier:
setPlaybackRequestEnvironment:
T@"MPCPlaybackRequestEnvironment",C,N
supportsAccountRectification
verifyWithError:
replaceIntent
setAutoPlayEnabled:forUserIdentity:
preservesQueueEndAction
setMusicShuffleType:
preservesShuffleMode
setMusicRepeatType:
preservesRepeatMode
insertAfterContextItemID
insertBeforeContextItemID
insertAfterContentItemID
insertionPosition
playbackQueue
positionTime
setUserChangedItemsDuringPlayback:
setUserAdvancedDuringPlayback:
isRequestingDefermentToPlaybackQueuePosition
setLibraryIdentifiersWithDatabaseID:block:
setContainedPersistentID:
defaultMediaLibrary
setPersistentID:
interfaceID
stringByAppendingFormat:
isNegative
commandID
leaveSharedPlaybackSessionCommand
ratingCommand
setActive:
stationAllowsItemLiking
discardPlaybackSessionCommand
setPreloadedSessions:
setPriorityForPlaybackSessionCommand
commandInfoWithIdentifier:revision:priority:
setSkipSerializedEventDelivery:
preloadPlaybackSessionCommand
setExportableSessionTypes:
setSupportedSessionTypes:
disableQHO
removeFromPlaybackQueueCommand
reorderQueueCommand
setSupportedQueueEndActions:
setCurrentQueueEndAction:
changeQueueEndActionCommand
advanceShuffleModeCommand
advanceRepeatModeCommand
createRadioStationCommand
isTailPlaceholder
setEnabled:
skipBackwardCommand
skipForwardCommand
setCanBeControlledByScrubbing:
supportsRewind
supportsFastForward
addTarget:action:usingExtendedStatus:
removeTarget:action:
hasTargets
setCurrentPlaybackSessionIdentifier:
setPlaybackSessionCommand
updateLaunchCommandsWithConfigurationHandler:
registerSupportedCustomQueueIdentifier:
registerSupportedQueueType:
prepareForSetPlaybackQueueCommand
substringToIndex:
activationDelay
initWithDeallocHandler:
engine:didFailToActivateWithError:resolution:
engine:prepareForActivationWithCompletion:
containsCommand:
timeIntervalSinceDate:
startDate
endDate
isEqualToArray:
invalidatePlaybackQueue
setPlaybackState:
getPendingCommandTypesWithCompletion:
removeObjectForKey:
boolForKey:
localizedStringForKey:value:table:
setPreferredIntervals:
setTimeout:
togglePlayPauseCommand
stopCommand
systemRoute
initWithSuiteName:
setPlaybackQueueDataSource:
setWantsSerializedEventDelivery:
playbackQueueIdentifierForNowPlayingInfoCenter:
nowPlayingInfoCenter:artworkForContentItem:size:completion:
nowPlayingInfoCenter:infoForContentItem:completion:
nowPlayingInfoCenter:availableLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:currentLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:contentItemIDsFromOffset:toOffset:nowPlayingIndex:
nowPlayingInfoCenter:childContentItemIDAtIndex:ofItem:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationWithCompletion:
nowPlayingInfoCenter:getTransportablePlaybackSessionRepresentationForRequest:completion:
nowPlayingInfoCenter:willBeginSessionMigrationWithIdentifier:
nowPlayingInfoCenter:didEndMigrationWithIdentifier:error:
contentItemForOffset:
nowPlayingInfoCenter:contentItemIDForOffset:
nowPlayingInfoCenter:contentItemForID:
nowPlayingInfoCenter:artworkCatalogForContentItem:
progressWithTotalUnitCount:
setCompletedUnitCount:
artworkCatalogForPlaybackTime:
encodedDataWithRootObject:userInfo:error:
responseWithIdentifier:sessionType:data:
T@"MPPropertySet",R,C,N,V_requestedProperties
_storePlatformBuilder
_requestedSongProperties
_requestedProperties
initWithRequestedProperties:
genericObjectForRadioStationTrack:containerUniqueID:userIdentity:
requestedProperties
setPlaybackPosition:
setStoreUbiquitousIdentifier:
setStopTime:
setStartTime:
setUserPlayCount:
setShouldRememberBookmarkTime:
setHasBeenPlayed:
setBookmarkTime:
setTrackCount:
setTrackNumber:
setSubscriptionAdamID:
offerWithType:
setFormerAdamIDs:
formerStoreAdamIDs
storeAdamID
genericObjectForStorePlatformMetadata:userIdentity:
storePlatformMetadata
properties
T@"MPCModelGenericAVItemAssetLoadProperties",&,N,V_assetLoadProperties
TB,N,V_requirePreferredAssetQuality
T@?,C,N,V_responseHandler
_requirePreferredAssetQuality
_assetLoadProperties
_responseHandler
_loadedAudioAssetTypeForFileAsset:
isHLSFileAsset:
assetLoadProperties
setAssetLoadProperties:
requirePreferredAssetQuality
setRequirePreferredAssetQuality:
responseHandler
setResponseHandler:
pathExtension
traits
URLWithString:
fileURLWithPath:isDirectory:
propertyListWithData:options:format:error:
initWithContentsOfFile:
purchaseBundleFilePath
fileExistsAtPath:isDirectory:
setSourceItemIdentifiers:
initWithFileAsset:sourceItemIdentifiers:
hlsKeyCertificateURL
hlsKeyServerURL
qualityType
bundleWithIdentifier:
mediaPlaybackCoreBundle
getRemotePlaybackQueueRepresentationWithCompletion:
addDelegationUUIDs:forUserIdentity:completionHandler:
getDelegationUUIDsForUserIdentity:completionHandler:
data
initWithIdentifier:data:
setRequestingImmediatePlayback:
initWithData:encoding:
setSiriRecommendationIdentifier:
originalIdentifierSet
globalPlaylistID
cloudVersionHash
shouldExcludeFromShuffle
musicShuffleType
itemKind
mpc_remotePlaybackQueueRequiredProperties
setSectionProperties:
playActivityQueueGroupingID
mpc_protoContainerRepresentation
intersectsSet:
mpc_protoItemRepresentation
clearPlaybackAssetCacheFileAssetForGenericObject:withCompletionHandler:
getPlaybackAssetCacheDestinationURL:purchaseBundleDestinationURL:forGenericObject:assetQualityType:pathExtension:
setPlaybackAssetCacheFileAsset:forGenericObject:withCompletionHandler:
_initWithMediaLibrary:
_persistentIDForModelObject:
setModelObjects:
setShouldLibraryAdd:
populateLocationPropertiesWithPath:assetProtectionType:completionBlock:
setValue:forProperty:
valuesForProperties:
setWithObjects:
stringByAppendingPathExtension:
stringByAppendingPathComponent:
lowercaseString
_lowQualityCachedAssetDestinationDirectoryForMediaLibrary:
_highQualityCachedAssetDestinationDirectoryForMediaLibrary:
deviceLibraryProviderWithUserIdentity:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
pathForResourceFileOrFolder:
autoupdatingSharedLibrary
ml3Library
TQ,R,N,V_storeAccountID
T@"NSString",R,C,N,V_deviceGUID
T@"NSString",R,C,N,V_deviceName
T@"MPCPrivateListeningStateSource",R,C,N,V_privateListeningStateSource
Tq,R,N,V_systemReleaseType
T@"NSString",R,C,N,V_requestUserAgent
T@"NSTimeZone",R,C,N,V_timeZone
_deviceGUID
_deviceName
_privateListeningStateSource
_systemReleaseType
_requestUserAgent
_storeAccountID
_timeZone
TB,R
supportsSecureCoding
encodeWithCoder:
initWithCoder:
mutableCopyWithZone:
initWithStoreAccountID:deviceGUID:privateListeningStateSource:
_copyWithClass:zone:
deviceGUID
deviceName
privateListeningStateSource
systemReleaseType
requestUserAgent
timeZone
TQ,D,N
T@"NSString",C,D,N
T@"MPCPrivateListeningStateSource",C,D,N
Tq,D,N
T@"NSTimeZone",C,D,N
setStoreAccountID:
setDeviceGUID:
setDeviceName:
setPrivateListeningStateSource:
setRequestUserAgent:
setSystemReleaseType:
setTimeZone:
encodeInteger:forKey:
encodeObject:forKey:
encodeInt64:forKey:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeInt64ForKey:
T@"<MPCPlaybackIntentDataSource>",R,N
T@"NSString",C,N,V_localizedTitle
Tq,N,V_tracklistSource
T@"<NSSecureCoding>",&,N,V_tracklistToken
Tq,N,V_actionAfterQueueLoad
Tq,N,V_repeatMode
TB,N,V_prefersEnqueuingUsingAirPlay
T@"NSString",C,N,V_queueGroupingID
T@"NSString",C,N,V_playActivityFeatureName
T@"NSData",C,N,V_playActivityRecommendationData
T@"NSString",C,N,V_siriAssetInfo
T@"NSString",C,N,V_siriReferenceIdentifier
T@"MPCPlaybackSharedListeningProperties",R,N
T@"NSDictionary",C,N,V_startTimeModifications
T@"NSDictionary",C,N,V_endTimeModifications
_resolvedTracklistDataSource
_prefersEnqueuingUsingAirPlay
_localizedTitle
_startTimeModifications
_endTimeModifications
_tracklistSource
_tracklistToken
_actionAfterQueueLoad
_repeatMode
_queueGroupingID
_playActivityFeatureName
_playActivityRecommendationData
_siriAssetInfo
_siriReferenceIdentifier
tracklistDataSource
getPlaybackContextWithCompletion:
getRemotePlaybackQueueRepresentationWithPlayerPath:completion:
getRemotePlaybackQueueDataWithCompletion:
getRepresentativeObjectWithProperties:completion:
getNowPlayingInfoWithArtworkCatalogConfiguration:artworkHandler:completion:
getArchiveWithConfiguration:completion:
sharedListeningProperties
generateNowPlayingContentItemWithMetadataObject:
artworkCatalogForMetadataModelObject:
localizedTitle
setLocalizedTitle:
startTimeModifications
setStartTimeModifications:
endTimeModifications
setEndTimeModifications:
tracklistSource
setTracklistSource:
tracklistToken
setTracklistToken:
actionAfterQueueLoad
setActionAfterQueueLoad:
repeatMode
prefersEnqueuingUsingAirPlay
setPrefersEnqueuingUsingAirPlay:
queueGroupingID
setQueueGroupingID:
playActivityFeatureName
setPlayActivityFeatureName:
playActivityRecommendationData
setPlayActivityRecommendationData:
siriAssetInfo
setSiriAssetInfo:
siriReferenceIdentifier
setSiriReferenceIdentifier:
recordLabel
socialPerson
editorialArtworkCatalog
curator
radioStationEvent
podcastEpisode
podcast
tracksTiledArtworkCatalogWithRows:columns:
playlist
group
author
stringValue
number
setSubtitle:
initWithBlock:
setDisplayProperties:
setArtworkImageData:
subtitle
setFallbackStoreIdentifier:
setSupportedOptions:
setBundleIdentifier:
bundleIdentifier
setSessionIdentifier:type:data:
section:supportsShuffleType:
itemDidBeginPlayback:
canSkipItem:
shouldRequestAdditionalItemsWhenReachingTailOfSection:
prefetchThresholdForSection:
shouldUsePlaceholderForItem:inSection:
loadAdditionalItemsWithRequest:forSection:completion:
placeholderItemForLoadingAdditionalItemsInSection:
firstItemIntersectingIdentifierSet:
loadPlaybackContext:completion:
modelPlayEventForItem:inSection:
identifiersForItem:inSection:
itemForItem:inSection:
supportsAutoPlayForItem:inSection:
containsLiveStream
containsTransportableContent
section:shouldShuffleExcludeItem:
reloadSection:completion:
encodedDataWithRootObject:error:
preferredArtworkSize
genericObjectRepresentation
nowPlayingInfo
msv_errorWithDomain:code:userInfo:debugDescription:
addAssertion:
sharedService
dateWithTimeIntervalSinceNow:
initWithName:
_mediaRemotePlaybackQueue
archivedDataWithRootObject:requiringSecureCoding:error:
isDeviceRoute
setPlayActivityQueueGroupingID:
tracklistDataSourceForSource:
insertString:atIndex:
intentFromQueueDescriptor:
continueListeningRadioPlaybackIntent
radioPlaybackIntentFromReference:
radioPlaybackIntentFromAlbum:
radioPlaybackIntentFromArtist:
radioPlaybackIntentFromSong:
radioPlaybackIntentWithStation:
radioPlaybackIntentWithStationStringID:
radioPlaybackIntentWithStationURL:
buildSharedSessionIntentWithIntent:identity:extendedStatusCompletion:
sharedSessionIntentWithProperties:identity:
setRadioIdentifiersWithBlock:
setStationStringID:
T@"NSString",R,N,V_sessionIdentifier
T@"NSString",R,N,V_sessionKey
_sessionIdentifier
_sessionKey
sessionIdentifier
sessionKey
propertiesWithSessionIdentifier:sessionKey:
playbackSessionType
decodedObjectOfClasses:fromData:error:
containsAppleMusicRadioContent
_accountInfo
_nowPlayingContentReference
_playActivityQueueGroupingID
_radioStationID
_radioStationURLString
_seedContentReference
_requestedRadioStationProperties
modelRadioStationForMetadata:userIdentity:
setProviderBundleIdentifier:
setProviderUniversalLink:
providerResource
setSubtype:
setAttributionLabel:
attributionLabel
setAllowsItemLiking:
allowsItemLiking
setArtworkCatalogBlock:
initWithToken:dataSource:
sharedStoreArtworkDataSource
artworkRequestTokenForStorePlatformArtworkValue:
artworkURL
responseArray
artworkInfo
setHasExplicitContent:
setShortEditorNotes:
setEditorNotes:
descriptionText
setBeats1:
setStationID:
setStationHash:
accountDSID
T@"MPCPlaybackEngineMiddleware",&,N,V_middleware
T@"MPCPlayerRequest",&,N,V_playerRequest
_playerRequest
initWithMiddleware:playerRequest:
playerRequest
setPlayerRequest:
T@"MPCFuture",R,N
T@"MPCMediaRemoteController",R,N
controllerFuture
initWithName:object:handler:
T@"NSOperationQueue",&,N,V_operationQueue
T@"MPModelPlayEvent",&,N,V_lastRecordedPlayEvent
_operationQueue
_lastRecordedPlayEvent
operationQueue
setOperationQueue:
lastRecordedPlayEvent
setLastRecordedPlayEvent:
meetsPlaybackHistoryThreshold
T@"MPCFuture",&,N,V_playbackStateFuture
_playbackStateFuture
initWithMiddleware:
playbackStateFuture
setPlaybackStateFuture:
T@"MPAVItem",R,C,N,V_item
T@"<MPCAssetLoaderDelegate>",W,N,V_delegate
Tq,R,N,V_token
T@?,R,C,N,V_completion
T@"NSObject<OS_dispatch_queue>",R,&,N,V_callbackQueue
T@"NSError",&,N,V_error
_isExecuting
_isFinished
_item
_delegate
_token
_callbackQueue
_error
initWithPlayerItem:configurator:delegate:token:callbackQueue:completion:
start
isExecuting
isFinished
main
_configureItem:error:
item
delegate
setDelegate:
token
callbackQueue
setError:
T@"NSOperationQueue",R,N,V_loadingQueue
_loadingQueue
loadAssetFor:token:completion:
cancelLoading
initWithDelegate:
loadingQueue
cancelAllOperations
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_artworkIdentifier
T@"MPExportableArtworkProperties",R,C,N,V_artworkProperties
_identifier
_artworkIdentifier
_artworkProperties
stringRepresentation
initWithIdentifier:artworkProperties:artworkIdentifier:
artworkIdentifier
artworkProperties
areRepresentationsAvailableForCatalog:
supportedSizesForCatalog:
_urlForCatalog:size:
requestForCatalog:size:
getExportableArtworkPropertiesForCatalog:completionHandler:
cacheKeyForCatalog:size:
requestWithURL:cachePolicy:timeoutInterval:
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
supportedSizes
CGSizeValue
maxSupportedSize
allObjects
supportedSizesForMediaType:artworkType:
mediaLibraryArtworkType
systemConfiguration
hasMaxSupportedSize
bestArtworkSizes
sizeInfo
T@"MPCRemotePlayerArtworkDataSource",R,N
sharedDataSource
valueWithCGSize:
assistantStreamingGetAvailability
assistantStreamingGetAvailability:
assistantRadioGetAvailability:
assistantRadioGetAvailability:completion:
getRadioAvailabilityWithCompletionHandler:
isRadioAvailable
hasLoadedRadioAvailability
pairedDeviceConnected
companionState
observeStateWithBlock:
T@"MPCStoreFrontLocalEquivalencyMiddleware",&,N,V_middleware
T@"MPModelGenericObject",R,N
T@"NSIndexPath",R,N
overridePlayingItem
playingItemIndexPath
getStoreItemMetadataForRequest:responseHandler:
MPC_modelObjectWithStoreFrontLocalEquivalentModelObject:
modelObjectWithStoreItemMetadata:userIdentity:
setShouldUsePlaylistEntry:
initWithRequestedPropertySet:
cacheMissItemIdentifiers
sharedStoreItemMetadataRequestController
setShouldIgnoreExpiration:
defaultInfo
setShouldRequireCachedResults:
MPC_storeFrontIdentifierKey
bundleVersion
shortVersionString
applicationProxyForIdentifier:
objectForInfoDictionaryKey:
setPurchasedAdamID:
setCloudAlbumID:
hasLoadedValueForKey:
isLibraryAddEligible
setLibraryAddEligible:
setPlaylistEntry:
setSeason:
rangeOfString:
T@"NSArray",&,N,V_commands
TQ,N,V_options
_options
_commands
initWithCommandRequests:
performWithCompletion:
performWithExtendedStatusCompletion:
options
setOptions:
commands
setCommands:
T@"MPCPlayerCommandRequest",R,N,V_request
TQ,R,N,V_options
T@"MPCPlayerCommandStatus",R,N,V_status
_status
initWithCommandRequest:options:
status
statusTransformer
msv_errorByUnwrappingDomain:code:
command
userInitiatedOptions
label
dependencies
addDependency:
blockOperationWithBlock:
msv_map:
msv_firstWhere:
performRequest:completion:
performRequest:options:completion:
performRequest:extendedStatusCompletion:
performRequest:options:extendedStatusCompletion:
requestWithCommandRequests:
T@"NSString",R,C,N,V_originalLabel
TI,R,N,V_command
T@"NSDictionary",R,C,N,V_options
T@"NSDictionary",C,N,V_userInitiatedOptions
T@"MPCPlayerPath",R,N,V_playerPath
T@?,C,N,V_statusTransformer
T@"NSString",C,N,V_label
_command
_label
_originalLabel
_userInitiatedOptions
_statusTransformer
initWithMediaRemoteCommand:options:controller:label:
initWithMediaRemoteCommand:options:playerPath:label:
setCommandOptionValue:forKey:
setLabel:
originalLabel
setUserInitiatedOptions:
setStatusTransformer:
T@"<MPCPlayerResponseBuilder>",R,D,N
T@"UIView<MPCVideoView>",&,N,V_videoView
T@"<MPCVideoOutput>",&,N,V_videoOutput
T@"MPCPlayerResponseTracklist",R,N,V_tracklist
Tq,R,N,V_state
T@"NSArray",R,N,V_participants
sharedListeningSession
TB,R,N,GisSharedListeningSession,V_sharedListeningSession
_sharedListeningSession
_state
_participants
_videoView
_videoOutput
createSharedSessionWithIntentHandler:
createSharedSessionWithIdentity:intentHandler:
leaveSession
_stateDumpObject
_commandRequestForMediaRemoteCommand:
participants
isSharedListeningSession
videoView
setVideoView:
videoOutput
setVideoOutput:
queryItems
componentsWithString:
disablePlaybackStateValidation
initWithResponse:
T@"MPPropertySet",C,N,V_playingItemProperties
T@"MPPropertySet",C,N,V_queueSectionProperties
T@"MPPropertySet",C,N,V_queueItemProperties
TB,N,V_disablePlaybackStateValidation
TB,N,V_disablePlaybackRateValidation
T@"NSString",C,N,V_preferredFallbackItemRelationship
T{?=qq},N,V_tracklistRange
_disablePlaybackStateValidation
_disablePlaybackRateValidation
_playingItemProperties
_queueSectionProperties
_queueItemProperties
_preferredFallbackItemRelationship
_tracklistRange
setTracklistRange:
setPlayingItemProperties:
setQueueSectionProperties:
setQueueItemProperties:
setDisablePlaybackStateValidation:
disablePlaybackRateValidation
setDisablePlaybackRateValidation:
setPreferredFallbackItemRelationship:
arrayByAddingObjectsFromArray:
isEmpty
propertySetByIntersectingWithPropertySet:
lightweightPersonalizationPropertiesForModelClass:
T@"MPCPlayerResponse",R,N,V_response
T@"MPCPlayerPath",R,C,N,V_playerPath
_response
initWithPlayerPath:
response
T@"MPCPlaybackRequestEnvironment",C,N,V_playbackRequestEnvironment
TB,N,V_continueListeningStation
T@"<MPCContinueListeningRadioQueueProviding>",W,N,V_continueListeningQueueProvider
Tq,N,V_continueListeningMaxQueueReferences
Tq,N,V_continueListeningPrefetchThreshold
T@"MPCModelRadioContentReference",C,N,V_nowPlayingContentReference
T@"MPCModelRadioContentReference",C,N,V_seedContentReference
T@"MPModelRadioStation",&,N,V_radioStation
T@"NSURL",C,N,V_stationURL
T@"ICUserIdentity",C,N
_continueListeningStation
_continueListeningQueueProvider
_continueListeningMaxQueueReferences
_continueListeningPrefetchThreshold
_stationURL
userIdentity
setUserIdentity:
shuffleType
repeatType
queueEndAction
descriptionComponents
continueListeningStation
setContinueListeningStation:
continueListeningQueueProvider
setContinueListeningQueueProvider:
continueListeningMaxQueueReferences
setContinueListeningMaxQueueReferences:
continueListeningPrefetchThreshold
setContinueListeningPrefetchThreshold:
nowPlayingContentReference
setNowPlayingContentReference:
seedContentReference
setSeedContentReference:
radioStation
setRadioStation:
stationURL
setStationURL:
encodeBool:forKey:
decodeBoolForKey:
queueFeederClass
T@"RTCReporting",&,V_playbackSessionRTCSession
T@"RTCReporting",&,V_playbackQueueRTCSession
T@"RTCReporting",&,V_playbackItemRTCSession
T@"<MPCRTCEventConsumerTestingDelegate>",W,N,V_testingDelegate
_rtcGroup
_rtcQueue
_testingDelegate
_playbackSessionRTCSession
_playbackQueueRTCSession
_playbackItemRTCSession
setTestingDelegate:
_handleReportingForItemStartEvent:event:
_sendReportForSessionSummary:event:withType:
_sendSessionStartIfNeeded:forItemEvent:
_sendReportForSessionStart:event:withType:
_sendQueueLoadEventIfNeeded:forItemEvent:
_sendReportForItemAssetLoad:event:
_sendReportForItemSummary:event:
_sendReportForItemSummaryWithEndReason:cursor:event:
_payloadForSessionStart:fromEvent:
_payloadForSessionSummary:fromEvent:
_payloadForQueueLoad:fromQueueLoadEndEvent:
_payloadForItemAssetLoad:fromItemEvent:
_payloadForItemSummary:fromEvent:
_payloadForItemSummary:fromItemEvent:
_perceivedItemStartTime:fromItemStartEvent:
_generateConfiguredReportingSessionWithToken:serviceName:completion:
_rtcSessionInfoWithToken:
_rtcUserInfoWithServiceName:
_sendReportWithSession:category:type:payload:
testingDelegate
playbackSessionRTCSession
setPlaybackSessionRTCSession:
playbackQueueRTCSession
setPlaybackQueueRTCSession:
playbackItemRTCSession
setPlaybackItemRTCSession:
sendMessageWithCategory:type:payload:error:
performOnPayload:withCategory:type:
processName
processInfo
startConfigurationWithCompletionHandler:
initWithSessionInfo:userInfo:frameworksToCheck:
intValue
dataWithJSONObject:options:error:
isValidJSONObject:
arrayWithObjects:
dateFormatter
insertObject:atIndex:
containsString:
NSStringFromMPCRTCReportingEventCategory:
setDateFormat:
Tq,N,V_startFrame
Tq,N,V_endFrame
Tq,N,V_iterations
_startFrame
_endFrame
_iterations
startFrame
setStartFrame:
endFrame
setEndFrame:
iterations
setIterations:
T@"NSString",C,N,V_version
Td,N,V_frameRate
T@"NSArray",C,N,V_scenes
_version
_frameRate
_scenes
version
setVersion:
frameRate
setFrameRate:
scenes
setScenes:
Tq,N,V_status
T@?,C,N,V_pauseFinishedBlock
T@"MPCSceneCollection",&,N,V_sceneCollection
T@,&,N,V_timeObserver
T@"MPNotificationObserver",&,N,V_itemDidPlayToEndObserver
Tq,N,V_currentSceneIndex
Tq,N,V_currentLoopCount
executingPauseScene
TB,N,GisExecutingPauseScene,V_executingPauseScene
sceneExecutionPaused
TB,N,GisSceneExecutionPaused,V_sceneExecutionPaused
T@"AVPlayer",R,N,V_player
_executingPauseScene
_sceneExecutionPaused
_player
_pauseFinishedBlock
_sceneCollection
_timeObserver
_itemDidPlayToEndObserver
_currentSceneIndex
_currentLoopCount
initWithURL:sceneCollection:
initWithAsset:sceneCollection:
_sharedInitWithItem:
restartScenes
playScenes
pauseScenes
observeValueForKeyPath:ofObject:change:context:
currentScene
setTimeObserver:
seekToFrameIfNeeded:completionHandler:
frameForCMTime:
_createSceneCollectionForAssetWithPreloadedKeys:
_CMTimeForFrame:
_executeSceneCollection
_executeCurrentScene
_loopIfNeeded
_advanceScene
_pause
_updateRateIfNeeded
player
setStatus:
pauseFinishedBlock
setPauseFinishedBlock:
sceneCollection
setSceneCollection:
timeObserver
itemDidPlayToEndObserver
setItemDidPlayToEndObserver:
currentSceneIndex
setCurrentSceneIndex:
currentLoopCount
setCurrentLoopCount:
isExecutingPauseScene
setExecutingPauseScene:
isSceneExecutionPaused
setSceneExecutionPaused:
addBoundaryTimeObserverForTimes:queue:usingBlock:
valueWithCMTime:
isScriptedLoopingDisabled
metadata
isPlayable
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
removeTimeObserver:
removeObserver:forKeyPath:
addObserver:forKeyPath:options:context:
setActionAtItemEnd:
playerWithPlayerItem:
assetWithURL:
scriptedLoopingDisabled
TB,N,GisScriptedLoopingDisabled
setScriptedLoopingDisabled:
T@"NSArray",C,N,V_playbackPrioritizedIndexPaths
T@"ICSharedListeningQueue",&,N,V_sharedListeningQueue
T@"MPModelResponse",&,N,V_previousResponse
TB,N,V_shouldBatchResultsWithPlaceholderObjects
TB,N,V_wantsDetailedKeepLocalRequestableResponse
TB,N,V_allowLocalEquivalencies
T@"NSString",C,N,V_clientIdentifier
T@"MPSectionedCollection",C,N,V_sectionedModelObjects
T@"NSArray",C,N,V_storeIDs
_shouldBatchResultsWithPlaceholderObjects
_wantsDetailedKeepLocalRequestableResponse
_allowLocalEquivalencies
_previousResponse
_clientIdentifier
_sectionedModelObjects
_storeIDs
_playbackPrioritizedIndexPaths
_sharedListeningQueue
T@"MPModelResponse",&,N
previousResponse
setPreviousResponse:
rtcReportingPlayQueueSourceIdentifier
wantsDetailedKeepLocalRequestableResponse
setWantsDetailedKeepLocalRequestableResponse:
shouldBatchResultsWithPlaceholderObjects
setShouldBatchResultsWithPlaceholderObjects:
clientIdentifier
newOperationWithResponseHandler:
allowLocalEquivalencies
setAllowLocalEquivalencies:
setClientIdentifier:
sectionedModelObjects
setSectionedModelObjects:
storeIDs
setStoreIDs:
playbackPrioritizedIndexPaths
setPlaybackPrioritizedIndexPaths:
sharedListeningQueue
setSharedListeningQueue:
isSubclassOfClass:
decodeObjectOfClasses:forKey:
deleteCharactersInRange:
setSectionKind:
setItemKind:
kindWithRelationshipKinds:
kindWithVariants:playlistEntryKind:options:
kindWithKinds:
kindWithSongKind:
kindWithVariants:
requiresNetwork
T@"MPCPlaybackEngine",&,N,V_playbackEngine
setPlaybackEngine:
_action
initWithMPAction:request:
commandRequest
event
T@"NSArray",R,N,V_actions
_dialog
_actions
initWithMPDialog:request:
localizedMessage
actions
T@"MPRemoteCommandStatus",R,N,V_status
T@"MPCPlayerCommandDialog",R,N,V_dialog
T@"NSData",R,N
initWithMPStatus:request:
statusCode
customData
customDataType
mediaRemoteType
mpc_remoteCommandDialog
statusWithCode:dialog:
localizedDescription
dialogWithTitle:message:
actionWithTitle:type:commandEvent:
addAction:
mpc_remoteCommandStatus
msv_errorByUnwrappingDomain:
T@"MPRemoteCommandStatus",R,N
invalidForPersonalization
TB,R,N,GisInvalidForPersonalization,V_invalidForPersonalization
T@"NSDictionary",C,N,V_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
T@"MPStoreLibraryPersonalizationResponse",R,N,V_personalizationResponse
T@"NSDate",C,N,V_invalidationDate
_invalidationTimer
_invalidForPersonalization
_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
_invalidationDate
TB,R,N,GisFinalResponse
newOperationForDetailedKeepLocalStatusConfigurationForSectionAtIndex:responseHandler:
equivalencySourceStoreAdamIDForLocalStoreAdamID:
initWithRequest:personalizationResponse:
_invalidate
_allowsExplicitContentDidChangeNotification:
_activeUserDidChangeNotification:
setInvalidationDate:
isInvalidForPersonalization
localStoreAdamIDToEquivalencySourceStoreAdamIDMap
setLocalStoreAdamIDToEquivalencySourceStoreAdamIDMap:
invalidationDate
timeIntervalSinceNow
initWithDomain:code:userInfo:
TB,N,V_allowsHLSContent
T@"NSString",C,N,V_assetSourceStorefrontID
TB,N,V_prefersVideoContent
T@"MPModelFileAsset",&,N,V_fileAsset
T@"MPModelHomeSharingAsset",&,N,V_homeSharingAsset
T@"MPIdentifierSet",&,N,V_itemIdentifiers
TB,N,V_prefersHighQualityContent
T@"MPModelStoreAsset",&,N,V_storeAsset
followUp
TB,N,GisFollowUp,V_followUp
TQ,N,V_accountID
TQ,N,V_delegatedAccountID
T@"NSString",C,N,V_householdID
T@"NSString",C,N,V_storefrontID
Tq,N,V_preferredAudioAssetType
_allowsHLSContent
_prefersVideoContent
_followUp
_assetSourceStorefrontID
_fileAsset
_homeSharingAsset
_itemIdentifiers
_storeAsset
_accountID
_delegatedAccountID
_householdID
_storefrontID
allowsHLSContent
setAllowsHLSContent:
assetSourceStorefrontID
setAssetSourceStorefrontID:
prefersVideoContent
setPrefersVideoContent:
fileAsset
setFileAsset:
homeSharingAsset
setHomeSharingAsset:
itemIdentifiers
setItemIdentifiers:
prefersHighQualityContent
setPrefersHighQualityContent:
storeAsset
setStoreAsset:
isFollowUp
setFollowUp:
accountID
setAccountID:
delegatedAccountID
setDelegatedAccountID:
householdID
setHouseholdID:
storefrontID
setStorefrontID:
setPreferredAudioAssetType:
T@"MPCFuture",&,N,V_controllerFuture
_controllerFuture
initWithMiddleware:playerPath:
setControllerFuture:
T{?=QQQQd},R,N,V_monotonicTime
TQ,R,N,V_machAbsoluteTime
TQ,R,N
T@"NSUUID",R,C,N,V_identifier
T@"NSString",R,C,N,V_type
T@"NSDictionary",R,C,N,V_payload
T@"NSDate",R,N
_type
_payload
_machAbsoluteTime
_monotonicTime
initWithType:payload:monotonicTime:identifier:
date
monotonicDate
monotonicTimeNanoSeconds
durationSinceEvent:
payload
monotonicTime
machAbsoluteTime
dateWithTimeIntervalSinceReferenceDate:
MSVBase64UUIDString
stringFromDate:timeZone:formatOptions:
defaultTimeZone
T@"MPCFuture",&,N,V_supportedCommandsFuture
_supportedCommandsFuture
supportedCommandsFuture
setSupportedCommandsFuture:
metadataForFormat:
mpc_synchronousHLSSessionDataWithTimeout:error:
mpc_HLSAVMetadataItemInMetadata:
TB,R,N,V_skippedMetadata
T@"MPCMediaRemoteController",&,N,V_controller
T@"MPSectionedCollection",&,N,V_queueContentItems
T@"MPSectionedCollection",&,N,V_queueModelObjects
T@"<MPCSupportedCommands>",&,N,V_supportedCommands
T@"NSIndexPath",C,N,V_playingIndexPath
T@"NSString",C,N,V_queueIdentifier
Tq,N,V_playerState
_skippedMetadata
_queueContentItems
_queueModelObjects
_supportedCommands
_playingIndexPath
_queueIdentifier
_playerState
operationsForSessionRequest:
setController:
queueContentItems
setQueueContentItems:
queueModelObjects
setQueueModelObjects:
supportedCommands
setSupportedCommands:
setPlayingIndexPath:
queueIdentifier
setQueueIdentifier:
playerState
setPlayerState:
skippedMetadata
_supportedCommands:infoValueForKey:
unsignedIntegerValue
isLoading
elapsedTime
_playbackRateForContentItem:
defaultPlaybackRate
isAlwaysLiveItem
editingStyleFlags
auxiliaryNowPlayingInfo
availableLanguageOptions
currentLanguageOptions
_mediaRemoteContentItem
T@"MPCPlaybackEngine",W,N,V_playbackEngine
T@"MPCMediaFoundationTranslator",R,N,V_translator
T@"NSMutableSet",&,N,V_failedItemsIdentifiers
T@"<MPCExternalPlaybackRouter>",&,N,V_externalPlaybackRouter
T@"MPAVItem",&,N,V_lastItemUsedForErrorResolution
T@"NSString",C,N,VpreferredFirstContentItemID
TB,N,VitemsHavePlayed
itemsHavePlayed
preferredFirstContentItemID
_failedItemsIdentifiers
_externalPlaybackRouter
_lastItemUsedForErrorResolution
resolveError:forItem:completion:
reportCriticalError:forItem:
reset
initWithPlaybackEngine:translator:externalPlaybackRouter:
_playbackFailedWithError:item:canResolve:proposedResolution:completion:
_resolutionForPlaybackError:item:
_notifyObserversForError:item:
canHandleFirstItemFailure
isFirstItemFailure:item:
isQueueLoadingFailure:
isUnrecoverableAssetLoadingError:
isAssetUnavailableFailure:
shouldHandleFirstItemFailure:item:
setPreferredFirstContentItemID:
setItemsHavePlayed:
failedItemsIdentifiers
setFailedItemsIdentifiers:
externalPlaybackRouter
setExternalPlaybackRouter:
lastItemUsedForErrorResolution
setLastItemUsedForErrorResolution:
mpc_isAssetUnavailableFailure
mpc_isUnrecoverableAssetLoadingError
mpc_isQueueLoadingFailure
engine:didFailToPlayFirstItem:withError:
engine:didFailToPlayItem:withError:
forErrorResolution:
setHasPerformedErrorResolution:
hasPerformedErrorResolution
errorDomain
mpc_isAirplayStreamingNotSupportedError
mpc_isRentalContentRequiresDownloadError
mpc_isAirplayDeviceBusyError
Tq,N,V_operationType
T@"ICStoreRequestContext",C,N,V_requestContext
T@"ICMusicSubscriptionLeaseSession",&,N,V_subscriptionLeaseSession
_cancellationHandler
_operationType
_requestContext
cancel
_canRetrieveLoadResultsFromMiniSinf
_canRetrieveLoadResultsFromServerObjectDatabase
_playbackAuthorizationTokenFromSOD
_loadResultsFromMiniSinf
_loadResultsFromLocalAssetCache
_handlePlaybackResponse:withPlaybackCacheRequest:error:
cancellationHandler
setCancellationHandler:
operationType
setOperationType:
requestContext
setRequestContext:
subscriptionLeaseSession
setSubscriptionLeaseSession:
addCachedResponse:forRequest:
setHlsAssetInfo:
initWithiTunesCloudStoreHLSAssetInfo:
setFileAssetInfoList:
initWithiTunesCloudStoreFileAssetInfo:
fileAssets
setDialogDictionary:
assetExpirationDate
setExpectedProtectionType:
initWithFileAssetResponseDictionary:
sinfs
assetsMatchingIdentifierSet:
miniSINF
assetsWithMiniSINFsMatchingIdentifierSet:
disableMiniSINF
isDelegatedLeaseSession
handleFailureInFunction:file:lineNumber:description:
stringWithUTF8String:
initWithRequestContext:storeSubscriptionAdamID:
setCloudUniversalLibraryID:
setStorePurchasedAdamID:
setStoreCloudID:
setStoreSubscriptionAdamID:
matchesStartItem:
storeItemID
playParametersQueue
isLibraryContent
catalogID
startItemPlayParameters
setLegacyMediaQuery:
localizedName
playbackArchive
isPlaylistItemsQuery
_playlistItemPersistentIDForItemPersistentID:
startTimes
endTimes
playbackContext
_addRequestingBundleIdentifierToPlaybackRequestEnvironment:
isPrivate
startItemID
T@"MPModelGenericObject",C,N,V_fallbackSectionRepresentation
T@"MPModelResponse<MPCModelPlaybackResponse>",R,N,V_response
rtcReportingSessionAdditionalUserInfo
T@"NSDictionary",R,C,N
_diffQueue
_diffLock
_activeModelGenericAVItems
_assetStoreFronts
_backgroundTaskIdentifier
_backgroundTasks
_loadingCompletionHandler
_requestController
_rtcReportingPlayQueueSourceIdentifier
_isSiriInitiated
_startItemIdentifiers
_section
_currentItem
_playbackContext
_representativeMetadataPropertySet
_fallbackSectionRepresentation
controller:defersResponseReplacement:
controller:shouldRetryFailedRequestWithError:
willBeginLoadingRequestForController:
didFinishLoadingRequestForController:
applyVolumeNormalizationForItem:
playbackInfoForItem:
supplementalPlaybackContextBehavior
supplementalPlaybackContextWithReason:
updatedPlaybackContext
uniqueIdentifier
firstModelPlayEvent
getRepresentativeMetadataForPlaybackContext:properties:completion:
_performRequestUpdate:
_didUpdateToResponse:
_beginBackgroundTaskAssertion
_endBackgroundTaskAssertion
_equivalencySourceAdamIDForIdentifierSet:
_sectionedModelObjectsRepresentationForSectionedCollection:
_supplementalLibraryRequest
fallbackSectionRepresentation
setFallbackSectionRepresentation:
setScopedContainers:
setCloudID:
scopedContainers
setAllowedItemIdentifiers:
allowedItemIdentifiers
setAllowedSectionIdentifiers:
allowedSectionIdentifiers
enumerateItemIdentifiersInSectionAtIndex:usingBlock:
beginBackgroundTaskWithName:expirationHandler:
setNeedsReload
identifierRegistryWithExclusiveAccessReturningObject:
identifierSetForItem:
applyChanges:itemLookupBlock:
itemAtIndex:
changeDetailsWithPreviousCount:finalCount:isEqualBlock:isUpdatedBlock:
setPlaybackInfo:
setFeeder:
weakObjectsHashTable
indexPathForGlobalIndex:
identifierRegistryWithExclusiveAccessReturningInteger:
indexForItem:
identifierSetAtIndex:
beginAutomaticResponseLoading
globalIndexForIndexPath:
enumerateItemIdentifiersUsingBlock:
setModelRequest:
isEqualToIdentity:inStore:
mqf_requiredSectionPlaybackProperties
relationshipKeyForGenericObjectType:
genericObjectType
mqf_requiredItemPlaybackProperties
unlock
updateSection
applyChanges:identifierSetLookupBlock:
identifierRegistryWithExclusiveAccess:
modelResponse
firstSection
playEventWithModelObject:featureName:
enumerateSectionIdentifiersUsingBlock:
forceLibrarySupplementalContexts
soundCheckEnabled
requiredPropertiesForStaticMediaClips
mqf_newPlaybackItemMetadata
mqf_configurePlaybackItemMetadata:
mqf_playbackItemMetadataModelObject
requiredProperties
setEpisode:
episode
_radioStationTracks
initWithRadioStationTracks:
initWithStartHandler:
T@"MPSectionedCollection",C,N,V_radioStationTracks
results
T@"MPSectionedCollection",R,C,D,N
radioStationTracks
setRadioStationTracks:
representedObjectResults
setRepresentedObjects:
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
T{os_unfair_lock_s=I},R,N,V_stateLock
Tq,R,N,V_supplementalPlaybackContextBehavior
T@"MPPlaybackContext",R,N,V_supplementalPlaybackContext
T@"<MPCQueueControllerDataSource><MPCQueueControllerDataSourceStateRestoring><MPRTCReportingItemSessionContaining>",R,N,V_dataSource
T@"MPPlaybackContext",R,N,V_playbackContext
T@"MPPlaybackContext",R,N,V_originalPlaybackContext
Tq,N,V_state
frozen
TB,N,GisFrozen,V_frozen
T@"NSString",R,N,V_sectionIdentifier
T@"NSString",R,N,V_preferredStartItemIdentifier
T@"MPPlaceholderAVItem",R,N,V_tailPlaceholderItem
T@,&,N,V_rtcSectionHierarchyToken
_supportedMethods
_frozen
_stateLock
_tailPlaceholderItem
_dataSource
_originalPlaybackContext
_sectionIdentifier
_preferredStartItemIdentifier
_rtcSectionHierarchyToken
_supplementalPlaybackContextBehavior
_supplementalPlaybackContext
initWithPlaybackContext:
shouldAddOriginalPlaybackContextAfterReplacement
shouldRequestAdditionalItemsAtTail
prefetchThreshold
shouldShowPlaceholderAtTail
loadAdditionalItemsIfNeededWithRequest:completion:
tailPlaceholderItem
updatePlaybackContext
_buildPlaceholder
_inLock_buildPlaceholder
dataSource
originalPlaybackContext
setState:
isFrozen
setFrozen:
sectionIdentifier
preferredStartItemIdentifier
rtcSectionHierarchyToken
setRtcSectionHierarchyToken:
stateLock
supplementalPlaybackContext
setTailPlaceholder:
msv_userInfo
replaceIdentifierRegistry:
T@"NSMutableArray",R,N,V_radioPlayActivityEvents
T@"ICPlayActivityController",R,N,V_playActivityController
_radioPlayActivityEvents
_playActivityController
_handleItemResumeEvent:cursor:
_handleItemPositionJumpEvent:cursor:
_handleItemPauseEvent:cursor:
_handleItemEndEvent:cursor:
_generatePlaybackEndEventFromEvent:withQueueSectionIdentifier:itemIdentifier:cursor:
_handleApplicationTerminationEvent:cursor:
_generateAggregateNoncatalogEndEventForCursor:
_findRecentPlaybackStartFromTypes:matchingPayload:cursor:
_getStartTimeForMostRecentPlaybackStart:withItemBeginEvent:containerBeginEvent:cursor:
_getPlaybackDurationForHLSStreamFromStartEvent:toEndEvent:withLimitedCursor:
_updatePAFEvent:withQueueAddEvent:queueSectionIdentifier:cursor:
_updatePAFEvent:withItemBeginEvent:containerBeginPayload:cursor:forEventType:
_updatePAFEvent:withAccountIdentifier:cursor:
_updatePAFEvent:withEnqueuerAccountIdentifier:queueAddEvent:cursor:
_updatePAFEvent:withDeviceInfoFromCursor:
_updatePAFEvent:withAudioChangeEvent:
_updatePAFEvent:withSharedListeningInfoFromCursor:
_clampTimeValuesForPAFEvent:withDuration:
_finalizePAFEvents:
radioPlayActivityEvents
playActivityController
recordPlayActivityEvents:withCompletionHandler:
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
endReasonType
containerType
reasonHintType
eventType
valueForBagKey:
initWithIdentity:
setItemStartTime:
itemEndTime
itemStartTime
setSharedActivityGroupSizeMax:
setSharedActivityGroupSizeCurrent:
setPlaybackFormatPreference:
setAudioQualityPreference:
setProvidedAudioQuality:
setTargetedAudioQuality:
setSpatialized:
setCodec:
setChannelLayoutDescription:
setBitRate:
setBitDepth:
setEventTimeZone:
systemTimeZone
setAutoPlayMode:
setShufflePlayMode:
setRepeatPlayMode:
setBuildVersion:
setBuildFeatures:
setItemType:
setItemIDs:
setReportingAdamID:
radioAdamID
setRadioAdamID:
setContainerIDs:
setPlaylistVersionHash:
setCloudPlaylistID:
setContainerType:
setMediaType:
setItemDuration:
timeZoneWithAbbreviation:
setEventDate:
setTimedMetadata:
setEndReasonType:
setReasonHintType:
_cloudCollectionID
_storePlaylistGlobalID
_storePlaylistVersionHash
_contentItemForIdentifierFuture
_contentItemArtworkForIdentifierFuture
_init
playbackStateCacheState
playbackState
supportedCommandsCacheState
sendCommand:options:completion:
playQueueIdentifiersCacheStateForRange:
playQueueIdentifiersForRange:
playQueueIdentifiersForRequest:
playingIdentifierCacheState
playingIdentifier
contentItemCacheStateForIdentifier:
contentItemForIdentifier:
contentItemArtworkCacheStateForIdentifier:size:
contentItemArtworkForContentItemIdentifier:artworkIdentifier:size:
invalidateAllTokens
_shouldRegisterForNotifications
T@"NSString",R,C,N,V_contextID
TB,N,V_shouldOverrideManuallyCuratedQueue
TB,N,V_shouldImmediatelyStartPlayback
T@"NSString",C,N,V_siriRecommendationID
T@"NSString",C,N,V_featureName
T@"NSDictionary",C,N,V_siriWHAMetricsInfo
T@"ICUserIdentity",C,N,V_userIdentity
T@"NSString",C,N,V_homeKitUserIdentifier
_shouldOverrideManuallyCuratedQueue
_shouldImmediatelyStartPlayback
_contextID
_siriRecommendationID
_featureName
_siriWHAMetricsInfo
_userIdentity
_homeKitUserIdentifier
initWithContextID:
createRemotePlaybackQueue
supportedOnCurrentPlatform
contextID
shouldOverrideManuallyCuratedQueue
setShouldOverrideManuallyCuratedQueue:
shouldImmediatelyStartPlayback
setShouldImmediatelyStartPlayback:
siriRecommendationID
setSiriRecommendationID:
featureName
setFeatureName:
siriWHAMetricsInfo
setSiriWHAMetricsInfo:
homeKitUserIdentifier
setHomeKitUserIdentifier:
T@"MPMediaQuery",R,N,V_query
T@"MPMediaItem",&,N,V_firstItem
Tq,N,V_shuffleType
_query
_firstItem
_shuffleType
initWithContextID:query:
query
firstItem
setFirstItem:
setShuffleType:
multiverseIdentifier
protobufferEncodableObjectFromLibrary:
queryQueueWithContextID:query:
T@"NSString",R,N,V_stationStringID
_stationStringID
initWithContextID:stationStringID:
radioQueueWithContextID:stationStringID:
T@"NSArray",R,N,V_storeItemIDs
T@"MPIdentifierSet",R,N,V_collectionIdentifierSet
_storeItemIDs
_collectionIdentifierSet
initWithContextID:storeItemIDs:collectionIdentifierSet:
storeItemIDs
collectionIdentifierSet
storeTracklistQueueWithContextID:storeItemIDs:collectionIdentifierSet:
T@"NSURL",R,N,V_seedTrack
_seedTrack
initWithContextID:seedTrack:
seedTrack
geniusQueueWithContextID:seedTrack:
T@"NSString",R,N,V_identifier
T@"NSData",R,N,V_customData
_customData
initWithContextID:identifier:customData:
customDataQueueWithContextID:identifier:customData:
autoPlaySection
TB,R,N,GisAutoPlaySection,V_autoPlaySection
T@"MPCPlayerResponse",R,W,N,V_response
T@"MPModelGenericObject",R,N,V_metadataObject
_autoPlaySection
_metadataObject
initWithModelGenericObject:sectionIndex:response:
remove
isAutoPlaySection
metadataObject
T^v,R,N,V_mediaRemotePlayerPath
T@"MPAVRoute",R,N,V_route
systemMusicPath
TB,R,N,GisSystemMusicPath
resolved
TB,R,N,GisResolved,V_resolved
fullyResolved
TB,R,N,GisFullyResolved
T^v,R,N
T@"NSString",R,N,V_deviceUID
T@"NSString",R,C,N,V_bundleID
T@"NSString",R,C,N,V_playerID
inProcess
TB,R,N,GisInProcess
_pid
_resolved
_bundleID
_playerID
_mediaRemotePlayerPath
_route
_deviceUID
initWithRoute:bundleID:playerID:
initWithRoute:bundleID:pid:playerID:
initWithDeviceUID:bundleID:pid:playerID:
isFullyResolved
isInProcess
isSystemMusicPath
representedBundleDisplayName
representedBundleID
resolveWithCompletion:
resolveWithRouteResolvedHandler:completion:
origin
pathByAppendingPlayerIDSuffix:
bundleID
playerID
mediaRemotePlayerPath
route
isResolved
deviceUID
pathWithRoute:mediaRemotePlayerPath:isResolved:
connectWithUserInfo:completion:
isInvalidated
isConnected
externalDevice
connection
sharedLocalEndpoint
localDeviceUID
setConnection:
initWithExternalDevice:
initWithEndpoint:
lastObject
encodeInt32:forKey:
decodeInt32ForKey:
deviceActivePlayerPath
systemMusicPathWithRoute:playerID:
pathWithRoute:bundleID:playerID:
pathWithDeviceUIDs:bundleID:pid:playerID:
pathWithDeviceUID:bundleID:pid:playerID:
pathWithCustomOrigin:bundleID:playerID:
_fallbackCache
_renderWindow
_renderQueue
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
hasExistingRepresentationOnDiskForArtworkCatalog:
areRepresentationsOfKind:availableForCatalog:
existingRepresentationOfKind:forArtworkCatalog:
loadRepresentationOfKind:forArtworkCatalog:completionHandler:
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
getImageRepresentationWithSize:scale:completion:
removeFromSuperview
cache
representationForVisualIdentity:withSize:image:
visualIdenticalityIdentifier
destinationScale
fittingSize
addSubview:
setRenderQueue:
initWithImage:overlayItems:
overlayItems
image
T@"NSArray",R,C,N,V_overlayItems
T@"NSObject<OS_dispatch_queue>",&,N,V_renderQueue
_imageView
_containerBackground
_container
_itemViews
_overlayItems
layoutSubviews
renderQueue
imageWithActions:
commit
renderInContext:
CGContext
layer
begin
initWithSize:format:
flush
layoutIfNeeded
setFrame:
setScale:
setOpaque:
setObject:atIndexedSubscript:
valueWithBytes:objCType:
sizeThatFits:
T@"MPCDebugOverlayItem",R,N,V_item
_text
_image
initWithOverlayItem:
frame
sizeToFit
icon
setNumberOfLines:
secondaryLabelColor
text
setTextColor:
labelColor
setFont:
preferredFontForTextStyle:
setText:
fullDisplay
_setLocalOverrideTraitCollection:
traitCollectionWithUserInterfaceStyle:
setContentMode:
_applyBackdropViewStyle:includeTints:includeBlur:graphicsQuality:allowImageResizing:
setClipsToBounds:
setImage:
initWithFrame:
setBackgroundColor:
blackColor
setHidden:
_setLayoutDebuggingIdentifier:
initWithSize:
bounds
mainScreen
setDestinationScale:
setCacheIdentifier:forRequestingContext:
requestingContext
cacheIdentifier
baseArtworkCatalog
scaledFittingSize
visualIdenticalityStringRepresentation
representationSize
setCountLimit:
T@"MPCDebugOverlayArtworkDataSource",R,N
T@"NSString",R,C,N,V_label
T@"NSString",R,C,N,V_text
T@"UIImage",R,C,N,V_icon
_icon
displayWithLabel:text:icon:
T@"MPCDebugOverlayItemDisplay",R,N,V_shortDisplay
T@"MPCDebugOverlayItemDisplay",R,N,V_fullDisplay
_shortDisplay
_fullDisplay
shortDisplay
itemWithShortDisplay:
itemWithFullDisplay:
itemWithShortDisplay:fullDisplay:
T@"MPArtworkCatalog",R,N,V_baseArtworkCatalog
_baseArtworkCatalog
tokenWithCatalog:overlayItems:
_reachability
_applicationWillEnterForeground:
_applicationDidEnterBackground:
_applicationWillTerminate:
_devicePrivateListeningDidChange:
_addEventForAccountIdentifier:cursor:event:nudge:
_snapshotAccount:eventType:event:nudge:
_snapshotAccount:eventType:atTime:
_snapshotDeviceWithEvent:nudge:
_snapshotDeviceAtTime:
_snapshotNetworkReachabilityWithEvent:nudge:
_snapshotNetworkReachabilityAtTime:force:
_snapshotNetworkTypeWithEvent:nudge:
_snapshotNetworkTypeAtTime:
isCurrentNetworkLinkHighQuality
signalStrength
signalInfo
isRemoteServerReachable
buildVersion
productVersion
productPlatform
deviceModel
isDevicePrivateListeningEnabled
lastKnownHouseholdID
T@"MPModelRequest",C,N,V_request
T@"MPIdentifierSet",C,N,V_startItemIdentifiers
startItemIdentifiers
setStartItemIdentifiers:
T@"NSString",C,N
containerID
setContainerID:
T@"ICRadioContentReference",R,N,V_ICRadioContentReference
T@"MPIdentifierSet",R,N,V_referenceModelObjectIdentifiers
_ICRadioContentReference
_referenceModelObjectIdentifiers
initWithICRadioContentReference:
ICRadioContentReference
referenceModelObjectIdentifiers
referenceWithMPModelObject:
referenceWithMPModelObject:containerModelPlayEvent:
referenceWithStoreIdentifier:trackInfo:
initWithStoreIdentifier:trackInfo:
mpc_radioContentReference
setAlbumName:
setRepresentativeCloudIdentifier:
setStoreIdentifier:
setArtistName:
setKind:
setAlbumArtistName:
discCount
setDiscCount:
isCompilation
setCompilation:
setYear:
setComposerName:
setCopyright:
discNumber
setDiscNumber:
fileSize
setFileSize:
setGenreName:
setDuration:
setStoreAdamIdentifier:
setStoreCloudIdentifier:
playbackIntentWithStartItemIdentifiers:
T@"MPCReportingController",W,N
T@"NSArray",R,C,N
_childReportingControllers
_parentReportingController
childReportingControllers
parentReportingController
addChildReportingController:
recordReportingEvents:
removeChildReportingController:
_recordReportingEvents:
setParentReportingController:
T@"MPCFuture",&,N,V_future
_future
future
setFuture:
T@"NSObject<OS_dispatch_queue>",R,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
T@"NSMutableArray",R,N,V_successBlocks
T@"NSMutableArray",R,N,V_failureBlocks
T@"NSMutableArray",R,N,V_completionBlocks
T@"NSMapTable",R,N,V_invalidBlocks
T@,R,N,V_result
T@"NSError",R,N,V_error
finalized
TB,R,N,GisFinalized,V_finalized
invalid
TB,R,N,GisInvalid,V_invalid
T@"NSString",C,N,V_debugLabel
_finalized
_invalid
_result
_debugLabel
_successBlocks
_failureBlocks
_completionBlocks
_invalidBlocks
initWithQueue:
onSuccess:
onFailure:
onCompletion:
onInvalid:
finishWithValue:
finishWithError:
invalidate
_onQueue_finalize
result
isFinalized
isInvalid
debugLabel
setDebugLabel:
accessQueue
calloutQueue
successBlocks
failureBlocks
completionBlocks
invalidBlocks
objectEnumerator
weakToStrongObjectsMapTable
T@"MPCStoreLibraryPersonalizationMiddleware",&,N,V_middleware
setProperties:forItemAtIndexPath:
initWithUnpersonalizedContentDescriptors:
T@"MPCPlaybackSharedListeningProperties",C,N,V_sharedListeningProperties
T@"ICLiveLinkIdentity",C,N,V_identity
_sharedListeningProperties
setSharedListeningProperties:
Tq,N,V_defaultEQPresetType
T@"MPCMediaFoundationTranslator",R,W,N,V_translator
T@"<MFPlaybackStackController><MFQueueManagement>",R,W,N,V_stackController
T@"NSObject<OS_dispatch_source>",&,N,V_userDefaultsDebouncer
T@"MPAVRoutingController",R,N,V_routingController
T@"MPCPlayerAudioRoute",R,N
T@"MPCModelGenericAVItem",R,W,N,V_currenItem
_routingController
_defaultEQPresetType
_stackController
_userDefaultsDebouncer
_currenItem
routingControllerAvailableRoutesDidChange:
routingController:didFailToPickRouteWithError:
routingController:pickedRoutesDidChange:
routingController:pickedRouteDidChange:
routingController:shouldHijackRoute:alertStyle:busyRouteName:presentingAppName:completion:
routingController:volumeControlAvailabilityDidChange:
routingControllerExternalScreenTypeDidChange:
routingControllerDidPauseFromActiveRouteChange:
initWithPlaybackEngine:stackController:translator:
configureQueuePlayerItem:error:
updatePlayerConfiguration
_setupRoutingController
_setupSpatialAudioController
_setupNotifications
_playbackUserDefaultsEQPresetDidChangeNotification:
_preferredResolutionDidChange:
setupDefaultsDebouncer
tearDownDefaultsDebouncer
processAudioQualityChanges
_setupPlayer
_setupQueueItemForHLSPlayback:error:
_audioFormatsDictionaryWithHLSMetadataFromAsset:error:
_HLSMetadataForAsset:error:
_audioFormatsDictionaryWithHLSMetadata:
currentAudioRoute
_updatePreferredAudioFormatIfRequiredForItem:route:
routingController
defaultEQPresetType
setDefaultEQPresetType:
stackController
userDefaultsDebouncer
setUserDefaultsDebouncer:
currenItem
pickedRoute
msv_dictionaryWithContentsOfBase64EncodedJSONString:error:
setSpatializationFormat:
reloadCurrentItemWithReason:completion:
setupEQPresetWithDefaultPreset:
avPreset
musicEQSetting
setFetchAvailableRoutesSynchronously:
setupPlaybackInfo
resetBookkeeping
setPrefersSeekOverSkip:
_timeZoneName
_uuid
_privateListeningEnabled
pickBestDeviceRoute
configureExternalPlaybackForPlayer:queueItem:
initWithPlaybackEngine:translator:
isExternalPlaybackAllowedForItem:
playerShouldUseAudiOnlyMode:item:externalScreenType:
exernalPlaybackRouteRestrictionForItem:route:isScreenMirroringActive:
canAccessRemoteAssets
presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets
canFetchMediaDataFromSender
hasProtectedContent
canPlayEncryptedProgressiveDownloadAssets
setExternalDisplay:
setAllowsExternalPlayback:
setUsesExternalPlaybackWhileExternalScreenIsActive:
setUsesAudioOnlyModeForExternalPlayback:
usesAudioOnlyModeForExternalPlayback
routeSubtype
isAppleTVRoute
externalScreenType
_representativeItemCloudID
_artistName
TB,N,V_shouldReportPlayActivityEvents
_accessSerialQueue
_nonCatalogAggregatePlayDuration
_nonCatalogAggregateStartTime
_nonCatalogDeviceName
_nonCatalogOffline
_nonCatalogSBEnabled
_nonCatalogStoreAccountID
_nonCatalogBuildVersion
_nonCatalogStoreFrontID
_nonCatalogSourceType
_shouldReportPlayActivityEvents
initWithWritingStyle:
setShouldReportPlayActivityEvents:
acquirePendingPlayActivityEventsForStoreAccountID:completionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
_applicationWillTerminateNotification:
_captureNonCatalogAggregatePlayActivityEventWithNonCatalogAggregateEndTime:
_clearNonCatalogAggregatePlayActivityEventData
shouldReportPlayActivityEvents
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
eventDate
_backgroundCacheSize
_cacheSize
_cachedArtworkRepresentations
_cachedArtworkRepresentationsAccessQueue
_resumeToForegroundCacheSize
_handleDidEnterBackgroundNotification:
_handleDidReceiveMemoryWarningNotification:
_handleWillEnterForegroundNotification:
_cacheArtworkRepresentation:forKey:
_clearCache
_setCacheSize:preserveExisting:
initWithMaximumCapacity:
allKeys
isSuspendedUnderLock
loadImageForRadioArtwork:withCompletionHandler:
imageWithData:scale:
CGImage
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:cache:
pixelSize
scale
bestArtworkForPixelSize:
cachedImageDataForRadioArtwork:MIMEType:
artworks
sharedRadioArtworkDataSource
T@"MPCSharedListeningEventParticipant",R,N,V_participant
Tq,R,N,V_type
T@"MPCSharedListeningSessionEvent",R,N,V_sessionEvent
T@"MPCSharedListeningPlaybackEvent",R,N,V_playbackEvent
T@"MPCSharedListeningQueueEvent",R,N,V_queueEvent
T@"MPCSharedListeningReactionEvent",R,N,V_reactionEvent
T@"MPCSharedListeningCustomEvent",R,N,V_customEvent
_participant
_sessionEvent
_playbackEvent
_queueEvent
_reactionEvent
_customEvent
_initWithType:participant:
participant
sessionEvent
playbackEvent
queueEvent
reactionEvent
customEvent
eventWithSessionEvent:participant:
eventWithPlaybackEvent:participant:
eventWithQueueEvent:participant:
eventWithReactionEvent:participant:
eventWithCustomEvent:participant:
T@"NSUUID",R,C,N,V_sharedListeningIdentifier
T@"NSString",R,C,N,V_externalIdentifier
_sharedListeningIdentifier
_externalIdentifier
sharedListeningIdentifier
externalIdentifier
participantWithSharedListeningIdentifier:externalIdentifier:
T@"NSString",R,C,N,V_localizedMessage
_localizedMessage
initWithLocalizedMessage:
Tq,R,N,V_kind
T@"MPModelGenericObject",R,N,V_item
_kind
initWithKind:
initWithKind:item:
kind
T@"MPCSharedListeningQueueEventContentAdded",R,N,V_addedContent
T@"MPCSharedListeningQueueEventContentRemoved",R,N,V_removedContent
T@"MPCSharedListeningQueueEventContentReordered",R,N,V_reorderedContent
T@"MPCSharedListeningQueueEventContentReplaced",R,N,V_replacedContent
T@"MPCSharedListeningQueueEventContentPlayedNow",R,N,V_playedNowContent
T@"MPCSharedListeningQueueEventPlaybackModeChanged",R,N,V_playbackMode
_addedContent
_removedContent
_reorderedContent
_replacedContent
_playedNowContent
_playbackMode
addedContent
removedContent
reorderedContent
replacedContent
playedNowContent
playbackMode
queueEventWithAddedContent:
queueEventWithPlayedNowContent:
queueEventWithRemovedContent:
queueEventWithReorderedContent:
queueEventWithReplacedContent:
queueEventWithPlaybackModeChanged:
T@"MPModelGenericObject",R,N,V_container
T@"NSArray",R,C,N,V_items
initWithItems:container:
container
T@"MPModelGenericObject",R,C,N,V_startItem
_startItem
initWithItems:container:startItem:
startItem
T@"MPModelGenericObject",R,C,N,V_item
initWithItem:
initWithStartItem:
T@?,R,N,V_shuffleType
T@?,R,N,V_repeatType
T@?,R,N,V_autoPlayEnabled
_repeatType
_autoPlayEnabled
initWithUpdatedShuffleType:
initWithUpdatedRepeatType:
initWithUpdatedAutoPlayEnabled:
autoPlayEnabled
T@"NSString",R,C,N,V_reactionIdentifier
T@"NSString",R,C,N,V_reaction
_reactionIdentifier
_reaction
initWithReaction:reactionIdentifier:item:
reactionIdentifier
reaction
_connection
_discovery
sendMediaRemoteCommand:withOptions:toLocalDestination:completion:
sendMediaRemoteCommand:withOptions:toEndpointDestination:completion:
sendCommand:withOptions:toEndpoint:toDestination:completion:
_checkForAccount:destination:origin:queue:completion:
_formGroupAndSendCommand:withOptions:toExternalDestination:completion:
_sendCommand:withOptions:toEndpoint:toDestination:completion:
_sendCommand:path:options:queue:completion:
_isAnyDeviceControllable:
_findEndpointFromEndpoints:byGroupLeader:
initWithOrigin:client:player:
client
unsignedShortValue
dictionaryWithDictionary:
initWithBytesNoCopy:length:encoding:freeWhenDone:
UTF8String
unarchivedObjectOfClass:fromData:error:
valueForKey:
localOrigin
isLocallyHosted
initWithCommandResult:error:
T@"NSArray",R,N,V_returnStatuses
T@"MRCommandResult",R,N,V_commandResult
T@"NSNumber",C,N,V_devicesControlled
_returnStatuses
_commandResult
_devicesControlled
initWithReturnStatuses:error:
returnStatuses
commandResult
devicesControlled
setDevicesControlled:
handlerReturnStatuses
sendError
initWithClientInfo:
currentDeviceDelegateInfo
deviceInfo
T@"NSArray",C,N,V_devices
T@"NSDictionary",&,N,V_supportedSpecializedQueues
TB,N,V_supportsSetQueueCommand
T@"NSSet",&,N,V_supportedQueueTypes
T@"NSSet",&,N,V_supportedCustomDataQueueIdentifiers
_supportsSetQueueCommand
_devices
_supportedSpecializedQueues
_supportedQueueTypes
_supportedCustomDataQueueIdentifiers
clear
clearUpNextItems
replaceWithPlaybackIntent:
replaceWithPlaybackIntent:replaceIntent:
specializedIntents
devices
setDevices:
supportedSpecializedQueues
setSupportedSpecializedQueues:
supportsSetQueueCommand
setSupportsSetQueueCommand:
supportedQueueTypes
setSupportedQueueTypes:
supportedCustomDataQueueIdentifiers
setSupportedCustomDataQueueIdentifiers:
TB,N,V_supportsCreateStation
T@"NSSet",&,N,V_supportedInsertionPositions
_supportsCreateStation
_supportedInsertionPositions
insertAfterPlayingItemWithPlaybackIntent:
insertPlaybackIntent:afterItem:
insertAtEndOfTracklistWithPlaybackIntent:
_insertWithOptions:
_createRadioStationCommandRequest
_isSupportedPlaybackIntent:forRemotePlayer:atInsertionPosition:
supportsCreateStation
setSupportsCreateStation:
supportedInsertionPositions
setSupportedInsertionPositions:
playingItem
T@"MPSectionedCollection",R,C,N,V_items
T@"NSIndexPath",R,C,N,V_playingItemIndexPath
T@"MPSectionedCollection",R,C,N,V_displayItems
Tq,R,N,V_playingItemGlobalIndex
Tq,R,N,V_globalItemCount
T@"NSString",R,N,V_uniqueIdentifier
Tq,R,N,V_lastChangeDirection
Tq,R,N,V_upNextItemCount
Tq,R,N,V_explicitContentState
T@"MPCPlayerResponseItem",R,N
Tq,R,N,V_repeatType
Tq,R,N,V_shuffleType
Tq,R,N,V_actionAtQueueEnd
_changeItemSupport
_uniqueIdentifier
_lastChangeDirection
_upNextItemCount
_explicitContentState
_playingItemIndexPath
_displayItems
_playingItemGlobalIndex
_globalItemCount
structuredIndexPathForDisplayIndexPath:
displayIndexPathForStructuredIndexPath:
resetCommand
insertCommand
reorderCommand
repeatCommand
shuffleCommand
actionAtQueueEndCommand
changeItemCommand
disableModificationsCommand
_determineChangeItemSupport
lastChangeDirection
upNextItemCount
explicitContentState
displayItems
playingItemGlobalIndex
globalItemCount
_setDisabled:
disabled
TB,N,GisDisabled,S_setDisabled:,V_disabled
_disabled
TB,R,N,GisDisabled
setDisabled:
isDisabled
initWithResponse:changeItemSupport:
TQ,R,N,V_changeItemSupport
previousItem
previousItemDeferringToPlaybackQueuePosition
previousSection
previousChapter
nextItem
nextSection
nextChapter
changeToSection:
changeToItem:
changeItemSupport
setSupportedActions:
T@"NSArray",&,N,V_supportedActions
_supportedActions
setQueueEndAction:
supportedActions
setSupportedShuffleTypes:
setSupportsAdvanceShuffle:
setSupportsChangeShuffle:
setCurrentShuffleType:
Tq,N,V_currentShuffleType
T@"NSArray",&,N,V_supportedShuffleTypes
TB,N,V_supportsChangeShuffle
TB,N,V_supportsAdvanceShuffle
_supportsChangeShuffle
_supportsAdvanceShuffle
_currentShuffleType
_supportedShuffleTypes
advance
supportedShuffleTypes
currentShuffleType
supportsChangeShuffle
supportsAdvanceShuffle
setSupportedRepeatTypes:
setSupportsAdvanceRepeat:
setSupportsChangeRepeat:
setCurrentRepeatType:
Tq,N,V_currentRepeatType
T@"NSArray",&,N,V_supportedRepeatTypes
TB,N,V_supportsChangeRepeat
TB,N,V_supportsAdvanceRepeat
_supportsChangeRepeat
_supportsAdvanceRepeat
_currentRepeatType
_supportedRepeatTypes
setRepeatType:
supportedRepeatTypes
currentRepeatType
supportsChangeRepeat
supportsAdvanceRepeat
canMoveItem:
moveItem:afterItem:
moveItem:beforeItem:
limitedIndexPathForMovingIndexPath:toProprosedIndexPath:
limitedDisplayIndexPathForMovingIndexPath:toProprosedIndexPath:
itemAtIndexPath:
setWithArray:
initWithTracklistItems:playingItemIndexPath:
T@"NSArray",R,N,V_sections
T@"NSDictionary",R,N,V_sectionRanges
_sections
_sectionRanges
identifiersForItemAtIndexPath:
identifiersForSectionAtIndex:
indexPathForItemWithIdentifiersIntersectingSet:
sectionIndexTitles
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
numberOfSections
sectionAtIndex:
numberOfItemsInSection:
sections
sectionRanges
signedRangeValue
initWithDataSource:
initWithResponse:playingItemIndexPath:
T@"NSIndexPath",&,N,V_playingItemIndexPath
setPlayingItemIndexPath:
resetCommandForPlayerPath:devices:
insertCommandForPlayerPath:devices:
T@"NSString",C,N,V_nextContentItemID
T@"NSString",C,N,V_deferredNextContentItemAnchorID
T@"NSError",C,N,V_restorationError
T@"NSMutableDictionary",&,N,V_coderVersions
Tq,N,V_nextContentItemIDReason
Tq,N,V_autoPlayState
T@"MPSectionedIdentifierListPosition",&,N,V_autoPlayEndPosition
TB,N,V_autoPlayIsTriggered
T@"NSString",C,N,V_restoreLastStartTimePositionToContentItemID
Td,R,N,V_lastSavedTime
T@"MPIdentifierSet",C,N,V_missingIdentifierSetForDebugging
T@"NSArray",C,N,V_previousSectionIDsForDebugging
inSharedListeningMode
TB,N,GisInSharedListeningMode,V_inSharedListeningMode
T@,&,N,V_rtcSessionHierarchyToken
T@"MPShuffleableSectionedIdentifierList",&,N,V_identifierList
T@"MPSectionedIdentifierList",&,N,V_autoPlayIdentifierList
T@"NSMutableDictionary",&,N,V_dataSources
autoplayMode
Tq,R,N,G_autoplayMode
currentItemFromAutoPlay
TB,R,N,GisCurrentItemFromAutoPlay
T@"MPAVItem",&,N,V_currentItem
TB,R,N,V_hasUserMutations
T@"<MPAVQueueControllerDelegate>",W,N,V_delegate
T@"<MPAVQueueCoordinating>",&,N,V_queueCoordinator
Tq,N,V_repeatType
TB,N,V_allowsQueueModifications
T@"NSString",R,C,N,V_preferredFirstContentItemID
_hasUserMutations
_allowsQueueModifications
_autoPlayIsTriggered
_inSharedListeningMode
_preferredFirstContentItemID
_queueCoordinator
_nextContentItemID
_deferredNextContentItemAnchorID
_restorationError
_coderVersions
_nextContentItemIDReason
_autoPlayState
_autoPlayEndPosition
_restoreLastStartTimePositionToContentItemID
_lastSavedTime
_missingIdentifierSetForDebugging
_previousSectionIDsForDebugging
_rtcSessionHierarchyToken
_identifierList
_autoPlayIdentifierList
_dataSources
emitEventsForParticipants:localUserIdentifier:
emitEventsForAddedSharedListeningContainerInfo:
emitSharedListeningEvent:
explicitContentStateDidChange:
requestedPropertySetForEvents
sessionDidEnd
sharedCurrentItemChangedToItem:inSection:byParticipant:
segmentForCodingKey:
versionForSegment:
didRestoreVersion:forSegment:
T@"<MPAVQueueControllerDelegate>",W,N
T@"<MPAVQueueCoordinating>",&,N
contentItemIDsFromOffset:toOffset:nowPlayingIndex:
displayIndexForContentItemID:
reloadWithPlaybackContext:completionHandler:
addPlaybackContext:afterContentItemID:completion:
addPlaybackContext:atPosition:completion:
addPlaybackContext:atPosition:jumpToIt:completion:
addPlaybackContext:atPosition:jumpToIt:userModification:completion:
moveContentItemID:beforeContentItemID:completion:
moveContentItemID:afterContentItemID:completion:
removeContentItemID:completion:
player:currentItemDidChangeFromItem:toItem:
clearUpNext
jumpToFirstContentItem
jumpToContentItemID:
jumpToContentItemID:userInitiated:
contentItemIDAtIndex:
contentItemIDWithCurrentItemOffset:mode:didReachEnd:
itemForContentItemID:
isPlaceholderItemForContentItemID:
updateLocationDependentPropertiesForItem:
hasUserMutations
queueCoordinator
setQueueCoordinator:
displayCount
setAutoPlayEnabled:
userCanChangeShuffleAndRepeatType
allowsQueueModifications
setAllowsQueueModifications:
userCanEnableAutoPlay
queueCoordinator:willLoadItem:
queueCoordinator:didLoadItem:
queueCoordinator:failedToLoadItem:
queueCoordinator:willInsertItem:afterItem:
queueCoordinatorDidChangeItems:
queueCoordinator:itemToFollowItem:
T@"MPAVItem",&,N
itemForContentItemID:allowReuse:
itemToFollowItem:direction:distance:jumpToItem:allowReuse:
playerItemDidResignCurrent:
playerItemDidBecomeCurrent:
canSkipInDirection:fromQueueItem:
setCurrentItem:
queueReferencesWithMaxCount:
debugDescriptionForItem:inSection:
debugDescriptionForSection:
didDequeueShuffledItemsInSectionedIdentifierList:
sectionedIdentifierList:dataSourceDidChangeItems:inSection:
sectionedIdentifierList:dataSourceDidAddItems:toSection:
sectionedIdentifierList:dataSourceDidMoveItems:inSection:
sectionedIdentifierList:dataSourceDidRemoveItems:fromSection:
sectionedIdentifierList:dataSourceDidUpdateItems:inSection:
sectionedIdentifierList:dataSourceDidUpdateSection:
isCurrentItemFromAutoPlay
incrementVersionForSegment:
finalizeStateRestorationWithCompletion:
resetWithIdentifier:
revisionString
reloadItemsKeepingCurrentItem:
firstContentItemIDForItemIntersectingIdentifierSet:
_queueIDPairForIdentifierListIDPair:
_identifierListIDPairForQueueIDPair:
_accountForAutoPlay
_loadAdditionalItemsIfNeededForDataSourceState:withCount:withCompletion:
_addPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:
_addAutoPlayPlaybackContext:atPosition:afterContentItemID:sectionIdentifier:actions:completion:
_applyVolumeNormalizationForQueuedItems
_allDataSourcesSupportInsertionPositionLast
_contentItemIDWithOffset:fromItem:mode:didReachEnd:
_currentItemDidChangeFromItem:toItem:
_emitEventsForAddingPlaybackContext:sectionIdentifier:sharedListeningContainerInfo:
_emitEventsForItemChangeFromItem:toCurrentItem:
_autoplayMode
_emitEventsForPlaybackBehaviorChange
_findDataSourceToLoadItemsAfterItem:sectionIdentifier:withLoadingBlock:
_findDataSourceToLoadItemsAfterItem:deletedItemsCount:sectionIdentifier:withLoadingBlock:
_firstContentItemID
_firstContentItemIDInSection:
_getSharedQueueTracklistWithCompletion:
_highQualityMusicStreamingOnCellularDidChange:
_isAutoPlayItem:inSection:
_identifierListForSection:
_itemForContentItemID:allowReuse:
_itemForPair:
_loadAdditionalItemsIfNeededForDataSourceState:preferredItemCount:completion:
_loadItemsAfterItemsDeletedIfNeededDeletedItemsCount:
_nextValidIdentifierPairStartingAtContentItemID:wasInvalid:
_privateListeningSourceForContext:
_soundCheckEnabledChangedNotification:
_stateDictionaryIncludingIdentifierList:
_transitionToAutoPlayState:
nextContentItemID
setNextContentItemID:
deferredNextContentItemAnchorID
setDeferredNextContentItemAnchorID:
restorationError
setRestorationError:
coderVersions
setCoderVersions:
nextContentItemIDReason
setNextContentItemIDReason:
autoPlayState
setAutoPlayState:
autoPlayEndPosition
setAutoPlayEndPosition:
autoPlayIsTriggered
setAutoPlayIsTriggered:
restoreLastStartTimePositionToContentItemID
setRestoreLastStartTimePositionToContentItemID:
lastSavedTime
missingIdentifierSetForDebugging
setMissingIdentifierSetForDebugging:
previousSectionIDsForDebugging
setPreviousSectionIDsForDebugging:
isInSharedListeningMode
setInSharedListeningMode:
rtcSessionHierarchyToken
setRtcSessionHierarchyToken:
identifierList
setIdentifierList:
autoPlayIdentifierList
setAutoPlayIdentifierList:
dataSources
setDataSources:
performChangeImmediately:
continueListeningMaxUpcomingTracksSizeToMaintain
continueListeningMaxQueueSizeInRequest
isContinueListeningAvailable
radioConfiguration
setAnnotationDelegate:
itemResult
trackingEntryResult
entryType
nextObject
enumeratorWithQueueController:mode:options:startPosition:endPosition:
positionForItem:inSection:
T@"MPCQueueController",R,W,N,V_queueController
Tq,R,N,V_mode
T@"NSEnumerator",R,N,V_enumerator
T@"MPSectionedIdentifierListPosition",R,N,V_startPosition
T@"MPSectionedIdentifierListPosition",R,N,V_endPosition
_nextEnumerator
_isEnumeratingFromRepeatAllBase
_hasEmittedItemFromRepeatAllBase
_mode
_enumerator
_startPosition
_endPosition
_buildEnumerator
mode
enumerator
startPosition
endPosition
enumeratorWithOptions:startPosition:endPosition:
hasSection:
initWithSectionIdentifier:
removed
TB,R,N,GisRemoved
itemIdentifier
isRemoved
branchDepth
isDeletedItem:inSection:
hasItem:inSection:
hasPrefix:
setPreferredItemCount:
Tq,N,V_preferredItemCount
_preferredItemCount
preferredItemCount
setInitialPlaybackStartTimeOverride:
setRtcReportingParentHierarchyToken:
setExplicitContentState:
setAutoPlayItem:
setSharedListeningItem:
queueExplicitContentState
T@"<MPCQueueControllerCommandInterposingHost>",W,N
isValidContainerIdentifier:
containerInfoForItem:
removeItem:
addPlaybackContext:afterItem:actions:completion:
didJumpToItem:
interposingHost
setInterposingHost:
sharedSessionIdentifier
substringFromIndex:
disableItemReuse
msv_indexPathForItem:inSection:
itemWithMediaIdentifier:
groupWithFeatureName:
playlistContainerWithMediaIdentifier:featureName:
albumContainerWithMediaIdentifier:featureName:
enumeratorWithOptions:
_expectedStartTimeWithPlaybackInfo:
didReachEnd
lastMetadataChangeTime
previousContentItemID
continueListeningLoadStationThreshold
positionForTailOfSection:
allSectionIdentifiers
addDataSourceAtStart:section:completion:
addDataSource:section:afterTailOfSection:completion:
addDataSourceAtEnd:section:completion:
addDataSource:section:afterItem:inSection:completion:
addDataSource:section:sequentially:afterTailOfSection:completion:
addDataSourceAtEnd:section:sequentially:completion:
addDataSource:section:sequentially:afterItem:inSection:completion:
setShuffleType:startingItem:inSection:
autoPlayEnabledForUserIdentity:
musicRepeatType
requestedPropertySetForEngine:
engine:didReceiveSharedListeningEvent:
sortedArrayUsingSelector:
localizedCaseInsensitiveCompare:
disablePeriodicStateRestore
setStartItem:
removeItem:fromSection:
initWithUUIDString:
initWithIdentifier:
moveItem:fromSection:afterTailOfSection:
moveItem:fromSection:afterItem:inSection:
moveItem:fromSection:afterHeadOfSection:
setNowPlayingInfo:
replaceDataSource:forSection:completion:
setAutomaticallyReversesNonDestructiveDataSourceEdits:
encodeDouble:forKey:
decodeDoubleForKey:
maximumQueueHandOffSize
initWithPlaybackRequestEnvironment:
_getHasSubscriptionPlaybackCapabilityForUserIdentity:completion:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
setDelegatedIdentity:
storefrontHeaderSuffix
getLastKnownHouseholdIDWithCompletion:
jaliscoAccountID
musicLibraryForUserAccount:
T@"NSError",&,N,V_completionError
T@?,R,C,N,V_initialQueueCompletion
T@"MPCPlaybackRequestEnvironment",&,N,V_playbackRequestEnvironment
T@"MPPropertySet",C,N,V_requestedPropertySet
T@"NSMutableArray",&,N,V_pendingActions
T@"NSMutableSet",&,N,V_knownContainerIDs
Tq,N,V_lastKnownExplicitContentState
TB,N,V_shouldRefreshBeforeActive
T@"NSString",C,N,V_deferredDirectCurrentItemIdentifier
T@"ICLiveLinkIdentity",&,N,V_deferredDirectCurrentItemParticipant
T@"<MPCQueueControllerCommandInterposingHost>",W,N,V_interposingHost
_shouldRefreshBeforeActive
_interposingHost
_completionError
_initialQueueCompletion
_requestedPropertySet
_pendingActions
_knownContainerIDs
_lastKnownExplicitContentState
_deferredDirectCurrentItemIdentifier
_deferredDirectCurrentItemParticipant
playbackCoordinator:identifierForPlayerItem:
_responseQueue
_dequeuePendingActions
_emitNewContainerIfNeededForResponse:
_enqueuePendingActionWithLabel:itemIdentifier:block:
_handleDirectCurrentItemChangedToItemIdentifier:participant:
_handleUpdatedSharedListeningQueue:
_ICSharedListeningForMPSILItemIdentifier:
_MPSILItemIdentifierForICSharedListeningItemIdentifier:
_mpcSharedListeningEventForICLiveLinkEvent:
_playbackItemsRequestForQueue:
_purgePendingActionsWithLabel:
_sectionedCollectionForQueue:
_updatePlayerLiveLinkConnection
_transitionToState:
completionError
setCompletionError:
initialQueueCompletion
requestedPropertySet
setRequestedPropertySet:
pendingActions
setPendingActions:
knownContainerIDs
setKnownContainerIDs:
lastKnownExplicitContentState
setLastKnownExplicitContentState:
shouldRefreshBeforeActive
setShouldRefreshBeforeActive:
deferredDirectCurrentItemIdentifier
setDeferredDirectCurrentItemIdentifier:
deferredDirectCurrentItemParticipant
setDeferredDirectCurrentItemParticipant:
endSynchronizedPlayback
beginSynchronizedPlaybackWithAVPlaybackCoordinator:
playbackCoordinator
mediaIdentifier
setVendorID:
removeObjectsAtIndexes:
indexesOfObjectsPassingTest:
playbackModeChanged
contentReplaced
contentReordered
contentRemoved
startItemIdentifier
contentPlayedNow
contentAdded
itemForIdentifierSet:
vendorID
setBlock:
setExpirationDate:
setItemIdentifier:
T@"NSString",C,N,V_itemIdentifier
T@"NSDate",C,N,V_expirationDate
T@?,C,N,V_block
_itemIdentifier
_expirationDate
_block
expirationDate
block
containerForIdentifier:
setModelObject:
setIdentifier:
T@"NSString",C,N,V_identifier
T@"MPModelGenericObject",&,N,V_modelObject
_modelObject
modelObject
removeObjectsInRange:
laterDate:
broadcastDirectCurrentItemChangedToItemIdentifier:
insertTracklist:afterItemIdentifier:completion:
insertTracklist:afterItemIdentifier:playNowWithPreferredStartIndexPath:completion:
itemForIdentifier:
moveItemIdentifier:afterItemIdentifier:
moveItemIdentifier:beforeItemIdentifier:
removeItemIdentifier:
msv_section
enumerateItemsUsingBlock:
allSections
isStarted
linkWithSessionIdentifier:identity:
removeObserver:forKeyPath:context:
T@"NSString",C,N,V_firstPlaybackItemIdentifier
T@"AVPlayerLayer",R,N,V_playerLayer
TB,R,N,V_hasPlayedSuccessfully
_hasPlayedSuccessfully
_playerLayer
_firstPlaybackItemIdentifier
_setQueueController:deferItemLoading:
togglePlaybackWithOptions:
_networkPolicyItemCellularRestrictedNotification:
handlePlaybackErrorWithUserInfo:
playbackHasStartedForItem:
_configureAudioSession
_connectAVPlayerDeferringItemLoading:
_connectAVPlayer
_contentsChanged
_expectedAssetTypesForPlaybackMode:
_itemWillChange:
_enforcingPolicy:
_itemDidSignificantlyChangeElapsedTime:rate:
_itemDidChange:
_setState:
_queueDidEndWithReason:lastItem:
_itemPlaybackDidEndNotification:
_streamLikelyToKeepUp:
_streamBufferFull:
_updateStateForPlaybackPrevention
playerLayer
firstPlaybackItemIdentifier
setFirstPlaybackItemIdentifier:
MPAVItem
_setEQPreset:
avPlayer
setCategory:mode:routeSharingPolicy:options:error:
sharedInstance
defaultItemEQPresetType
changePlaybackIndexBy:deltaType:
isReloadingForPlaybackContextChange
prefersApplicationAudioSession
T@"NSNumber",R,C,N,V_currentValue
T@"NSNumber",C,N,V_overrideValue
_overrideValue
_currentValue
setOverrideValue:
overrideValue
sourceType
currentValue
localDeviceSource
staticSourceWithValue:
sourceWithUserIdentity:
_initWithUserIdentity:
_cachedValue
_loadCurrentValueFromIdentityProperties
_handleUserIdentityStoreDidChangeNotification:
sharedAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N
_initWithValue:
_value
T@"NSObject<OS_dispatch_group>",&,N,V_modificationInProgress
_discoveryLogical
_discoveryAudio
_discoveryEndpoint
_modificationInProgress
modifySystemMusicContextForDestination:completion:
modifySystemMusicContextForEndpointDestination:completion:
_updateDiscoverableDeviceList:deviceInfo:completion:
_discoverLocalEndpointFromDeviceInfo:completion:
_discoverLocalEndpointFromStereoPairUsingDeviceInfo:completion:
_modifyOutputDevices:onEndpoint:completion:
shouldSearchForLogicalDevices
modificationInProgress
setModificationInProgress:
setOutputDevices:initiator:withReplyQueue:completion:
clusterComposition
isGroupLeader
outputDevices
isAirPlayActive
clusterType
groupContainsGroupLeader
designatedGroupLeader
outputDevicesMatchingPredicate:
valueForKeyPath:
tightSyncUID
T@"NSIndexPath",R,N,V_indexPath
T@"MPCPlayerResponseParticipant",R,N,V_enqueueingParticipant
placeholder
TB,R,N,GisPlaceholder,V_placeholder
autoPlay
TB,R,N,GisAutoPlay,V_autoPlay
T@"NSString",R,C,N,V_contentItemIdentifier
Tq,R,N,V_revision
T{?=dddddffBB},R,N,V_duration
T@"NSString",R,C,N,V_localizedDurationString
T@"NSString",R,C,N,V_explicitBadge
T@"NSArray",R,N,V_languageOptionGroups
T@"<MPCPlayerResponseItemMusicAudio>",R,N
T@"MPCPlayerAudioFormat",R,N,V_preferredFormat
T@"MPCPlayerAudioFormat",R,N,V_activeFormat
TQ,R,N,V_preferredTiers
Tq,R,N,V_activeFormatJustification
T@"NSArray",R,N,V_alternateFormats
T@"MPCPlayerAudioRoute",R,N,V_audioRoute
_seekSupport
_placeholder
_autoPlay
_preferredTiers
_contentItemIdentifier
_revision
_localizedDurationString
_explicitBadge
_languageOptionGroups
_indexPath
_enqueueingParticipant
_duration
T@"MPCPlayerAudioFormat",R,N
switchToAlternativeFormat:
preferredTiers
initWithModelGenericObject:indexPath:response:
seekCommand
playbackRateCommand
likeCommand
dislikeCommand
wishlistCommand
rateCommand
musicAudio
_determineSeekSupport
_buildLanguageOptionGroups:currentLanguageOptions:
_feedbackCommandWithMediaRemoteCommand:
contentItemIdentifier
revision
duration
localizedDurationString
languageOptionGroups
indexPath
enqueueingParticipant
isPlaceholder
isAutoPlay
setValue:
setLocalizedShortTitle:
setPresentationStyle:
setContentItemID:
initWithResponse:mediaRemoteCommand:
T@"NSString",C,N,V_localizedShortTitle
Tq,N,V_presentationStyle
TB,N,V_value
_localizedShortTitle
_presentationStyle
changeValue:
localizedShortTitle
presentationStyle
value
contentItemID
T@"NSString",C,N,V_contentItemID
setMaximumValue:
setMinimumValue:
floatValue
Tf,N,V_minimumValue
Tf,N,V_maximumValue
_minimumValue
_maximumValue
minimumValue
maximumValue
setPreferredPlaybackRate:
setSupportedPlaybackRates:
T@"NSArray",C,N,V_supportedPlaybackRates
Tf,N,V_preferredPlaybackRate
_preferredPlaybackRate
_supportedPlaybackRates
setPlaybackRate:
supportedPlaybackRates
preferredPlaybackRate
setPrefersNegativeBackwardSkipIntervals:
preferredBackwardJumpIntervals
setPreferredBackwardJumpIntervals:
setPreferredForwardJumpIntervals:
seekSupport
initWithResponse:seekSupport:
TQ,R,N,V_seekSupport
TB,N,V_prefersNegativeBackwardSkipIntervals
T@"NSArray",C,N,V_preferredBackwardJumpIntervals
T@"NSArray",C,N,V_preferredForwardJumpIntervals
_prefersNegativeBackwardSkipIntervals
_preferredBackwardJumpIntervals
_preferredForwardJumpIntervals
jumpByInterval:
changePositionToElapsedInterval:
preferredForwardJumpIntervals
_seekCommandWithMediaRemoteCommand:options:
prefersNegativeBackwardSkipIntervals
T@"MPAVController",R,N,V_player
offline
TB,N,GisOffline,V_offline
T@"MPCReportingController",R,N,V_reportingController
SBEnabled
TB,N,GisSBEnabled,V_SBEnabled
TQ,N,V_storeAccountID
T@"NSString",C,N,V_storeFrontID
_currentJingleReportingTimedMetadata
_hasPendingContainerChange
_hasSetLastPlayEventTimeStamp
_isReloadingWithPlaybackContext
_itemDidChangeWhenReloadingPlaybackContext
_isScrubbing
_currentItemIsHLS
_itemForCurrentTimeChange
_recordEventOperationQueue
_itemContentItemIDForLastPlayEventEndTime
_lastPlayEventEndTimeForCurrentItem
_lastPlayEventTimeStamp
_shouldReportAsPlaying
_startTimeForCurrentTimeChange
_offline
_SBEnabled
_reportingController
_storeFrontID
initWithPlayer:reportingController:
newPlayActivityEvent
didHitPlaybackTimeoutEndingPlayback:withCurrentItem:
didTransitionItemForBan:
recordPlayActivityEvents:forEventSource:
recordUserSeekFromTime:toTime:forItem:
willHitPlaybackTimeoutEndingPlayback:withCurrentItem:
willTransitionItemForBan:
_itemReportingJingleTimedMetadataDidChangeNotification:
_playerDidReloadWithPlaybackContextNotification:
_playerDidSetCurrentTimeNotification:
_playerItemDidChangeNotification:
_playerItemWillChangeNotification:
_playerPlaybackStateDidChangeNotification:
_playerWillReloadWithPlaybackContextNotification:
_playerWillSetCurrentTimeNotification:
_playerItemDidChangeWhenReloadingPlaybackContextNotification:
_newReportingPlaybackActivityEventForPlayActivityEvent:eventSource:
_reportPlaybackEndedForTimeoutWithItem:
_sendPlaybackStartNotification
_sendPlaybackEndNotification:endTime:
_setLastPlayEventEndTime:forItemContentItemID:
_itemEndTimeForItem:withProposedEndTime:
_itemStartTimeForItem:
isOffline
setOffline:
reportingController
isSBEnabled
setSBEnabled:
storeFrontID
setStoreFrontID:
postNotification:
notificationWithName:object:userInfo:
notificationWithName:object:
initWithAVItem:
T@"<MPCReportingIdentityPropertiesLoading>",&,N,V_identityPropertiesLoader
Td,N,V_eventDuration
TQ,N,V_overrideItemType
T@"NSString",C,N,V_lyricsID
T@"MPModelGenericObject",&,N,V_itemGenericObject
privateListeningEnabled
T@"NSNumber",C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
TB,N,V_shouldReportPlayEventsToStore
T@"NSData",C,N,V_trackInfo
T@"MPModelPlayEvent",&,N,V_modelPlayEvent
T@"NSData",C,N,V_jingleTimedMetadata
T@"NSData",C,N,V_recommendationData
T@"NSString",C,N,V_requestingBundleIdentifier
T@"NSString",C,N,V_requestingBundleVersion
_shouldReportPlayEventsToStore
_eventDuration
_overrideItemType
_lyricsID
_itemGenericObject
_modelPlayEvent
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
identityPropertiesLoader
setIdentityPropertiesLoader:
eventDuration
setEventDuration:
overrideItemType
setOverrideItemType:
lyricsID
setLyricsID:
itemGenericObject
setItemGenericObject:
isPrivateListeningEnabled
setPrivateListeningEnabled:
setShouldReportPlayEventsToStore:
modelPlayEvent
setModelPlayEvent:
setJingleTimedMetadata:
recommendationData
setRecommendationData:
requestingBundleIdentifier
setRequestingBundleIdentifier:
requestingBundleVersion
setRequestingBundleVersion:
lastDirection
userChangedItemsDuringPlayback
isEqualToData:
timedMetadata
_fileSize
_albumArtistName
_albumDiscCount
_albumName
_albumTrackCount
_composerName
_contentType
_copyrightText
_discNumber
_genreName
_trackNumber
_year
_isCompilation
T@"_MPCAudioSpectrumAnalyzerStorage",&,N,V_storage
T@"NSMutableArray",&,N,V_observers
T@"MPCAudioSpectrumAnalyzer",&,N,V_selfRef
_audioProcessingTap
_storage
_observers
_selfRef
configurePlayerItem:
addObserver:
removeObserver:
_itemInsertedNotification:
_shouldAttachAudioTap
_createAudioTap
_destroyAudioTap
_analyzeSamples:numberFrames:timeRange:
_prepareTap:maxFrames:processingFormat:
storage
setStorage:
observers
setObservers:
selfRef
setSelfRef:
initWithMaximumNumberOfFrames:sampleRate:
Tf,N,V_sampleRate
TQ,N,V_maxNumberOfFrames
_intermediateBuffer
_window
_windowSize
_fftBuffer
_fftSetup
_processing
_sampleRate
_maxNumberOfFrames
_prepareBuffers
_destroyFFTSetup
_freeBuffers
analyzeFrequencies:numberFrames:timeRange:observers:
sampleRate
setSampleRate:
maxNumberOfFrames
setMaxNumberOfFrames:
finishReport
setPowerLevel:
beginReport
isAirPlayingToDevice
setAudioTapProcessor:
Tf,N,V_powerLevel
Tq,R,N,V_numberOfBands
T@?,C,N,V_onUpdate
_bands
_bandsStorageSize
_powerLevel
_numberOfBands
_onUpdate
numberOfBands
addAnalysisBand:
averagePowerOfBandAtIndex:band:
_resizeBandStorage
powerLevel
onUpdate
setOnUpdate:
defaultObserver
preferredQueue
getSharedListeningTracklistWithCompletion:
initWithRandomSource:lowestValue:highestValue:
msv_item
nextIntWithUpperBound:
appendItems:
_containerType
T@"MPPlaybackUserDefaults",&,N,V_defaults
T@"ICEnvironmentMonitor",&,N,V_environmentMonitor
T@"MSVABTestGenerator",R,N,V_outcomeGenerator
_defaults
_environmentMonitor
_outcomeGenerator
initWithPlaybackUsersDefaults:environmentMonitor:probabilityOfProgressiveDownloadAssets:
updateProbabilityOfProgressiveDownloadAssets:
userPrefersMultichannelAudioOverStereo:
audioFormatPreference
preferredAudioAssetTypeForItem:
preferredAudioAssetTypeForSongWithTrait:
preferredAudioFormatForAudioFormats:route:
preferredPlayerAudioFormatForItem:route:
audioFormatMatchingAudioAssetType:formats:route:
spatialIsAutomatic
spatialIsAlwaysOn
spatialIsOff
prefersSpatialOverStereo:
prefersSpatialOverLossless
prefersHighResolutionLossless
prefersLossless
prefersHighQualityStereo
prefersLowQualityStereo
networkBandwidthIsHigh
descriptionForTraits:
descriptionForTiers:
preferencesDescription
environmentDescription
tierMatchingAudioAssetType:
defaults
setDefaults:
environmentMonitor
setEnvironmentMonitor:
outcomeGenerator
spatialAudioPreference
isEnhancedAudioAvailable
sharedCloudController
nextOutcome
updateProbabilityForOutcomeA:
initWithProbabilityForOutcomeA:
T@"MPCAudioAssetTypeSelector",R,N
sharedSelector
T@"NSError",C,N,V_authorizationError
T@"ICAgeVerificationState",C,N,V_lastKnownAgeVerificationState
T@"<MPCExplicitContentAuthorizationDelegate>",W,N,V_delegate
_authorizationError
_lastKnownAgeVerificationState
isItemAuthorized:
isItemAuthorized:shouldAskForAuthorization:
authorizationReason
_retrieveAgeVerificationStateForUserIdentity:
_updateAuthorizationStatusWithAuthorizationState:forItem:
_setupWithAgeGateForItem:
_setupWithAgeVerificationState:
_shouldAskPlaybackAuthorizationForItem:reason:
_askPlaybackAuthorizationForItem:reason:
_explicitContentErrorWithUnderlyingError:message:
authorizationError
setAuthorizationError:
lastKnownAgeVerificationState
setLastKnownAgeVerificationState:
isExplicitContentAllowed
getAgeVerificationStateWithCompletion:
T@"MPCExplicitContentAuthorizationManager",R,N
sharedManager
mpc_updateAVAudioSpatializationFormatsForAudioAssetType:
mpc_updateAVVariantPreferenceForAudioAssetType:forceSpatial:
mpc_updatePreferredMaximumAudioSampleRateForPlayerAudioFormat:
mpc_updatePrefersOfflinePlayableVariantForPlayerAudioFormat:isDownloadedAsset:
mpc_updatePreferredForwardBufferDurationForPlayerAudioFormat:
setVariantPreferences:
setPreferredMaximumAudioSampleRate:
setPreferredForwardBufferDuration:
setPrefersOfflinePlayableVariants:
mpc_updatePreferredMaximumAudioSampleRateForAudioAssetType:
prefersOfflinePlayableVariants
preferredMaximumAudioSampleRate
preferredForwardBufferDuration
variantPreferences
mpc_updatePreferredForwardBufferDurationForAudioAssetType:
mpc_updateAVAudioSpatializationFormatsForPlayerAudioFormat:
mpc_setupWithAudioAssetType:forceSpatial:
mpc_setupWithPlayerAudioFormat:forceSpatial:downloadedAsset:
mpc_setupDescription
mpc_updateAVVariantPreferenceForPlayerAudioFormat:forceSpatial:
Tq,N,V_repeatIndex
_repeatIndex
repeatIndex
setRepeatIndex:
initWithContentItemID:repeatIndex:
identifierForMFQueuePlayerItem:
T@"AVPlayerItem",R,N
T@"NSURL",R,C,N
avPlayerItem
isVideoContent
setIsVideoContent:
hasLoadableAsset
isAssetLoaded
isFullyDownloaded
time
Td,N
isMovieOrTVShow
playbackStartTimeOverride
setPlaybackStartTimeOverride:
initialPlaybackStartTimeOverride
setLastChangeDirection:
_clearAssetNow
setCurrentItemTransition:
itemID
setItemID:
T@"<MPCItemIdentifier>",R,C,N
T@"MPCPlayerPath",&,N,V_resolvedPlayerPath
T@"<MPArtworkDataSource>",R,N,V_mediaRemoteArtworkDataSource
T@"<MPArtworkDataSource>",R,N
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_calloutQueue
T@,&,N,V_invalidationToken
Tq,R,N,V_playbackStateCacheState
Tq,R,N,V_supportedCommandsCacheState
Tq,R,N,V_playingIdentifierCacheState
Tq,R,N,V_queueIdentifierCacheState
_playbackStateCacheState
_supportedCommandsCacheState
_playingItemIdentifierFuture
_playingIdentifierCacheState
_playingItemIdentifier
_queueIdentifierCacheState
_loadedContentItemsRange
_requestedContentItemsRange
_contentItemIDs
_contentItems
_optimisticStateContentItems
_contentItemChanges
_contentItemArtwork
_contentItemArtworkIdentifiers
_contentItemIDsFutures
_contentItemFutures
_contentItemArtworkFutures
_mediaRemoteArtworkDataSource
_resolvedPlayerPath
_invalidationToken
artworkCatalogBlockForContentItem:
dictionary:willRemoveObject:forKey:
remotePlayerArtworkDataSource
mediaRemoteArtworkDataSource
contentItemArtworkCacheStateForArtworkIdentifier:size:
_playbackQueueChangedNotification:
_playbackQueueContentItemsChangedNotification:
_playbackStateDidChangeNotification:
_supportedCommandsDidChangedNotification:
_contentItemArtworkChangedNotification:
_debugOverlayItemsForContentItem:
_artworkCatalogBlockForContentItem:
_createExportableArtworkPropertiesForContentItem:
_legacyCommands
_onQueue_identifiersForRange:
_onQueue_mergeContentItems:queueRange:requestRange:
_onQueue_purgeArtworkForContentItemIdentifier:artworkIdentifier:
_onQueue_purgeArtworkForContentItemIdentifier:
_onQueue_invalidateArtworkFuturesForContentItemID:
_onQueue_stateDictionary
queueIdentifierCacheState
_onQueue_updateOptimisticStateForCommand:options:
_onQueue_setOptimisticElapsedTimeForContentItem:elapsedTime:rate:
_onQueue_setOptimisticPlaybackState:withOptions:
_onQueue_setOptimisticPlayingItemIdentifier:
_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:afterContentItemIdentifier:
_onQueue_setOptimisticReorderedPlaybackQueueWithMovingContentItemIdentifier:beforeContentItemIdentifier:
setAccessQueue:
setCalloutQueue:
resolvedPlayerPath
setResolvedPlayerPath:
invalidationToken
setInvalidationToken:
performSuppressingChangeNotifications:
setElapsedTime:
_allCommandInfos
replaceObjectsInRange:withObjectsFromArray:
performTransaction:
_initWithMediaRemoteContentItem:
pokeKey:
setMaximumCapacity:
maximumCapacity
subarrayWithRange:
setMediaLibraryArtworkType:
setResolvedURLString:
setArtworkTemplateItems:
artworkURLTemplates
_artworkCatalogForContentItem:
supportsArtworkCatalogLoading
msv_enumerateKeysAndObjectsOrderedByKeySelector:usingBlock:
arrayWithObject:
staticArtworkCatalogWithImage:
showResolutionDebugUI
imageWithData:
strongToWeakObjectsMapTable
_mergeContentItem:
endTransaction
beginTransaction
sendCommand:options:toPlayerPath:completion:
initWithKeyOptions:valueOptions:capacity:
mediaRemoteReplyQueue
controllerForPlayerPath:
_sendCommand:options:appOptions:toPlayerPath:completion:
_sendLocalCommand:playbackIntent:options:toPlayerPath:completion:
_sendRemoteCommand:playbackIntent:options:toPlayerPath:completion:
resultStatuses
commandInfoForCommand:
T@"NSURL",C,N,V_radioStationURL
_radioStationURL
radioStationURL
setRadioStationURL:
MPC_consumeSiriAssetInfo:withCompletion:
enhancedAudioConfiguration
certificateURL
initWithItemResponseDictionary:urlBag:
getPropertiesForUserIdentity:error:
playableAssetIdentifiers
JSONObjectWithData:options:error:
initWithStorePlatformDictionary:expirationDate:
addStoreItemMetadata:
connectToEndpoint:completion:
connectWithOptions:userInfo:
setConnectionStateCallback:withQueue:
customOrigin
T@"<MPCPlabackEngineEventStreamTestingDelegate>",W,N,V_testingDelegate
T@"MPCPlaybackEngineEvent",R,N
TQ,N
_maximumEventDeliveryTimestamp
_subscriptions
_deferralAssertions
_database
_queue
_scheduledFlushes
initWithDatabaseCreationBlock:
initWithParameters:
addConsumer:
removeConsumer:
eventDeliveryDeferralAssertionForReason:
emitEventType:payload:
emitEventType:payload:atTime:
flushEvents
lastEvent
lastEventsWithCount:
maximumEventDeliveryTimestamp
setMaximumEventDeliveryTimestamp:
resetConsumerEventDeliveryToTimestamp:
setLastEventSuccessTimestamp:
jsonValueAtColumnIndex:error:
uint64ValueAtColumnIndex:
stringValueAtColumnIndex:
msv_UUIDWithData:
dataValueAtColumnIndex:
resultsForStatement:
bindInt64Value:toParameterNamed:
statementWithString:error:
_onQueue_flush
T@"MPCPlaybackEngineEventStream",R,N,V_eventStream
T@"MPCPlaybackEngineEvent",R,N,V_startEvent
T@"MPCPlaybackEngineEvent",R,N,V_endEvent
_startNS
_endNS
_startEvent
_endEvent
enumeratePreviousEventsWithType:usingBlock:
enumeratePreviousEventsWithType:matchingPayload:usingBlock:
enumeratePreviousEventsWithTypes:usingBlock:
enumeratePreviousEventsWithTypes:matchingPayload:usingBlock:
findPreviousEventWithType:matchingPayload:
findPreviousEventWithTypes:matchingPayload:
countOfPreviousEventsWithType:matchingPayload:
countOfPreviousEventsWithTypes:matchingPayload:
cursorUntilEvent:
cursorFromEvent:untilEvent:
startEvent
endEvent
initWithEventStream:startEvent:endEvent:
nextObjectWithError:
bindNullValueToParameterNamed:
_statementForColumnsExpression:eventTypes:payload:limit:
int64ValueAtColumnIndex:
earlierDate:
immediateEventHandlers
mutatingEventHandlers
consumer
lastEventSuccessTimestamp
executeStatement:error:
eventStream:didFailToEmitEvent:error:
bindJSONValue:toParameterNamed:error:
bindUInt64Value:toParameterNamed:
bindStringValue:toParameterNamed:
bindDataValue:toParameterNamed:
msv_UUIDData
timeIntervalSince1970
initWithEventStream:reason:
T@"MPCPlaybackEngineEventStream",R,W,N,V_eventStream
T@"NSString",R,C,N,V_reason
TB,R,N,V_invalidated
_invalidated
_reason
reason
invalidated
initWithConsumer:eventStream:
T@"<MPCPlaybackEngineEventConsumer>",R,W,N,V_consumer
TQ,N,V_lastEventSuccessTimestamp
T@"NSMutableDictionary",R,N,V_mutatingEventHandlers
T@"NSMutableDictionary",R,N,V_immediateEventHandlers
T@"NSMutableDictionary",R,N,V_eventHandlers
_consumer
_lastEventSuccessTimestamp
_mutatingEventHandlers
_immediateEventHandlers
_eventHandlers
subscribeToEventType:handler:
subscribeToEventType:options:handler:
flushEventsWithCompletion:
cancelSubscription
eventHandlers
databaseURL
initWithMemory
initWithURL:error:
setBool:forKey:
getResourceValue:forKey:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
URLByAppendingPathComponent:isDirectory:
URLsForDirectory:inDomains:
hashTableWithOptions:
T@"MPCModelStorePlaybackItemsRequest",R,C,N,V_request
T@?,R,C,N,V_responseHandler
_activeProgress
_activeProgressQueue
initWithRequest:responseHandler:
_executeWithUserIdentity:
_validateUserIdentityForRequestWithCompletion:
enumerateDelegateTokensWithType:usingBlock:completionHandler:
setAuthenticationProvider:
initWithUserInteractionLevel:
setAllowsExpiredBags:
setIdentityStore:
userIdentitiesForManageableAccountsWithError:
currentThread
_mediaDownloadRequest
performRequestWithResponseHandler:
setPlaybackRequest:
setRedownloadParameters:
setUsePrioritizedURLSession:
initWithRequestContext:redownloadParametersString:
redownloadParameters
_radioQueueFeederPointerForLogging
initWithGetTracksRequest:siriAssetInfo:playActivityController:radioQueueFeeder:
_cacheTracksForStep:
_runStep:withFinishHandler:
initWithTracks:tracklistAction:
Tq,R,N,V_tracklistAction
T@"MPSectionedCollection",R,C,N,V_tracks
_tracklistAction
_tracks
tracklistAction
tracks
stationMetadata
tracklistActionType
initWithiTunesCloudStoreRadioStreamAssetInfo:
setRadioStreamAssetInfoList:
radioStreamAssets
setLiveRadioStream:
trackType
flattenedTracksWithTracks:
playActivityEvents
reasonType
_getPlaybackRequestEnvironmentWithBaseEnvironment:completion:
setSupportsAccountRectification:
mediaQuery
initWithData:
trackIdentifiers
firstTrackIdentifier
_getPlaybackContextWithRecommendedContentWithSeedAdamID:completion:
isHomeSharingLibrary
stringByRemovingPercentEncoding
initWithBase64EncodedString:options:
initWithMultiverseIdentifier:library:
itemWithPersistentID:
valueForProperty:
isGeniusEnabled
_getPlaybackContextFromCloudControllerWithSeedItem:completion:
_getPlaybackContextFromMediaLibraryWithSeedItem:completion:
fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:
songsQuery
predicateWithPersistentIDs:count:shouldContain:
addFilterPredicate:
geniusItemsForSeedItem:completion:
predicateWithProperty:values:
loadGeniusItemsForSagaID:completionHandler:
setDelegated:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
timeZoneWithName:
kindWithModelClass:
setCloudVersionHash:
isRequestingImmediatePlayback
getRemoteRepresentationForPlayerPath:completion:
siriRecommendationIdentifier
createPlaybackContextWithCompletion:
_createRemoteCommandWithConcreteClass:mediaRemoteType:
shareQueueCommand
disableQueueModificationsCommand
clearUpNextQueueCommand
T@"MPRemoteCommand",R,N
_SAPSignPrewarmingAccounts
_SAPSignPrewarmedAccounts
_miniQueue
_miniSINFEndpointLoadingAccounts
_miniSINFAccounts
_scheduledMiniSINFs
database:didFailImportRequest:withErrror:
database:didFinishImportRequest:
_applicationWillEnterForegroundNotification:
_optimisticallyFetchLeaseForAccount:
scheduleMiniSINFFetch
_fetchMiniSINFsWithCompletion:
_prewarmMiniSINFEndpointForAccount:
_prewarmSAPSigningForAccount:
buildURLRequestWithCompletionHandler:
signData:withCompletionHandler:
sharedSAPSessionWithVersion:URLBag:requestContext:
initWithURL:requestContext:
initWithEndpointURL:maximumBatchSize:requestContext:
T@"NSURL",R,C,N,V_endpointURL
Tq,R,N,V_maximumBatchSize
T@"ICStoreRequestContext",R,N,V_requestContext
_endpointURL
_maximumBatchSize
endpointURL
maximumBatchSize
int64ValueForBagKey:
enqueueDataRequest:withCompletionHandler:
importAssetsFromRequest:error:
initWithPayload:requestPayload:hashedPersonID:
parsedBodyDictionary
defaultSession
addValue:forHTTPHeaderField:
setHTTPBody:
setHTTPMethod:
enumerateAssetsMissingSINFsForHashedPersonID:usingBlock:
applicationState
T@"NSString",R,N,V_appBundleID
T@"NSString",R,N,V_playerID
T^v,R,N,V_origin
T@"NSArray",R,N,V_outputDeviceUIDs
T@"NSArray",R,N,V_hashedOutputDeviceUIDs
T@"NSArray",R,N,V_outputGroups
T@"NSString",R,N,V_outputGroupID
T@"NSString",R,N,V_originatingOutputDeviceUID
TB,R,N,V_singleGroup
TB,R,N,V_originatingDeviceControl
_appBundleID
_origin
_outputDeviceUIDs
_hashedOutputDeviceUIDs
_outputGroups
_outputGroupID
_originatingOutputDeviceUID
_singleGroup
_originatingDeviceControl
initWithAppBundleID:playerID:origin:
initWithAppBundleID:
createPlayerPath
resolveWithHashedRouteIdentifiers:completion:
resolveWithHashedRouteIdentifiers:audioRoutingInfo:completion:
resolveWithRouteIdentifiers:completion:
resolveWithRouteIdentifiers:audioRoutingInfo:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:completion:
resolveWithQueue:hashedRouteIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
resolveWithQueue:routeIdentifiers:localPlaybackPermitted:completion:
resolveWithQueue:routeIdentifiers:localPlaybackPermitted:audioRoutingInfo:completion:
_copyWithZone:usingConcreteClass:
_getCompanionOrigin:
appBundleID
outputDeviceUIDs
hashedOutputDeviceUIDs
outputGroups
outputGroupID
originatingOutputDeviceUID
singleGroup
originatingDeviceControl
T^v,D,N
T@"NSArray",C,D,N
TB,D,N
setAppBundleID:
setPlayerID:
setOrigin:
setOutputDeviceUIDs:
setHashedOutputDeviceUIDs:
setOutputGroups:
setOutputGroupID:
setOriginatingOutputDeviceUID:
setSingleGroup:
setOriginatingDeviceControl:
systemMediaApplicationDestination
watchRadioApplicationDestination
podcastsApplicationDestination
iBooksApplicationDestination
nowPlayingApplicationDestination
T@"MPNowPlayingInfoCenter",R,N,V_nowPlayingInfoCenter
T@"MPRemoteCommandCenter",R,N,V_remoteCommandCenter
T@"AVAudioSession",R,N,V_audioSession
_nowPlayingInfoCenter
_remoteCommandCenter
_audioSession
T@"MPNowPlayingInfoCenter",R,N
T@"MPRemoteCommandCenter",R,N
T@"AVAudioSession",R,N
nowPlayingInfoCenter
remoteCommandCenter
audioSession
initWithPlayerID:
scheduledPlaybackStatePreservation
TB,N,GhasScheduledPlaybackStatePreservation,V_scheduledPlaybackStatePreservation
TB,N,V_needsUISnapshot
T@"MPProtocolProxy<MPCPlaybackEngineEventObserving>",R,N,V_eventObserver
T@"<MPCPlaybackEngineImplementation>",R,N,V_implementation
T@"_MPCMediaRemotePublisher",R,N,V_mediaRemotePublisher
T@"_MPCMusicPlayerControllerServer",R,N,V_musicPlayerControllerServer
T@"_MPCReportingController",R,N,V_reportingController
T@"_MPCPlaybackEngineSessionManager",R,N,V_sessionManager
T@"_MPCLeaseManager",R,N,V_leaseManager
T@"_MPCPlaybackAccountManager",R,N,V_accountManager
T@"_MPCFairPlayPerformanceController",R,N,V_fairPlayPerformanceController
T@"<MPCVideoOutput>",R,N,V_videoOutput
T@"<MPCPlaybackEngineInitializationParameters>",R,N,V_initializationParameters
systemMusicApplication
TB,N,GisSystemMusicApplication,V_systemMusicApplication
T@"NSString",C,N,V_audioSessionCategory
TQ,N,V_audioSessionOptions
audioAnalyzerEnabled
TB,N,GisAudioAnalyzerEnabled,V_audioAnalyzerEnabled
T@"MPCAudioSpectrumAnalyzer",R,N,V_audioAnalyzer
T@"<MPCPlaybackEngineDelegate>",W,N,V_delegate
pictureInPictureSupported
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
videoSupported
TB,N,GisVideoSupported,V_videoSupported
T@"MPCPlaybackIntent",&,N,V_fallbackPlaybackIntent
stateRestorationSupported
TB,N,GisStateRestorationSupported,V_stateRestorationSupported
queueHandoffSupported
TB,N,GisQueueHandoffSupported,V_queueHandoffSupported
_pictureInPictureSupported
_videoSupported
_stateRestorationSupported
_queueHandoffSupported
_scheduledPlaybackStatePreservation
_needsUISnapshot
_systemMusicApplication
_audioAnalyzerEnabled
_fallbackPlaybackIntent
_eventObserver
_implementation
_mediaRemotePublisher
_musicPlayerControllerServer
_sessionManager
_leaseManager
_accountManager
_fairPlayPerformanceController
_initializationParameters
_audioSessionCategory
_audioSessionOptions
_audioAnalyzer
requestAuthorizationForExplicitItem:reason:completion:
restoreStateWithCompletion:
setQueueHandoffSupported:
setAudioSessionCategory:
setAudioSessionOptions:
addEngineObserver:
removeEngineObserver:
reportUserSeekFromTime:toTime:
setStateRestorationSupported:
setSystemMusicApplication:
setAudioAnalyzerEnabled:
serverEndpoint
schedulePlaybackStatePreservation
_screenBrightnessDidChangeNotification:
_detectCrashLoopForSessionIdentifier:block:
_initializePlaybackStack
_shouldIgnorePlaybackSessionError:
_updateUISnapshotIfNeeded
isPictureInPictureSupported
setPictureInPictureSupported:
isVideoSupported
setVideoSupported:
fallbackPlaybackIntent
setFallbackPlaybackIntent:
isStateRestorationSupported
isQueueHandoffSupported
hasScheduledPlaybackStatePreservation
setScheduledPlaybackStatePreservation:
needsUISnapshot
setNeedsUISnapshot:
eventObserver
implementation
mediaRemotePublisher
musicPlayerControllerServer
sessionManager
leaseManager
accountManager
fairPlayPerformanceController
initializationParameters
isSystemMusicApplication
audioSessionCategory
audioSessionOptions
isAudioAnalyzerEnabled
audioAnalyzer
engine:requiresAuthorizationToPlayItem:reason:authorizationHandler:
_updateSnapshotForBackgroundApplication:
brightness
progressiveDownloadAssetRatio
proxyForObjects:protocol:
usesNewPlaybackImplementation
dictionaryForKey:
disableAudioAnalysis
objects
preheatPlayback
callStackSymbols
isMainThread
requiresMainThread
originID
T@"MPCPlaybackEngine",W,N
T@"NSMutableDictionary",R,N,V_playerPathResolutions
T@"NSMutableDictionary",R,N,V_playerPathObservers
T@"NSMutableDictionary",R,N,V_endpointObservers
_playerPathResolutions
_playerPathObservers
_endpointObservers
observationTokenDescriptionForPlayerPath:
resolvedPlayerPathForPlayerPath:
_onQueue_registerForInvalidationWithUnresolvedPlayerPath:invalidationPlayerPath:
_onQueue_registerForEndpointChangeWithUnresolvedPlayerPath:
playerPathResolutions
playerPathObservers
endpointObservers
indexOfObjectPassingTest:
T@"MPCPlayerPathCache",R,N
sharedCache
TI,N,V_originChannelLayout
T@"MPNowPlayingInfoAudioFormat",R,N
T@"NSString",R,C,N,V_groupID
T@"NSString",R,C,N,V_stableVariantID
Tq,R,N,V_tier
Tq,R,N,V_bitrate
Tq,R,N,V_sampleRate
Tq,R,N,V_bitDepth
TI,R,N,V_codec
spatialized
TB,R,N,GisSpatialized,V_spatialized
multiChannel
TB,R,N,GisMultiChannel,V_multiChannel
TI,R,N,V_channelLayout
T@"NSString",R,N,V_audioChannelLayoutDescription
_spatialized
_multiChannel
_codec
_channelLayout
_originChannelLayout
_tier
_bitrate
_bitDepth
_audioChannelLayoutDescription
_groupID
_stableVariantID
initWithJSONDictionaryRepresentation:stableVariantID:
initWithNowPlayingInfoAudioFormat:
nowPlayingAudioFormat
initWithDictionaryRepresentation:
humanDescription
debugTierDescription
debugBitRateDescription
debugBitDepthDescription
debugSampleRateDescription
debugCodecDescription
debugChannelCountDescription
debugOriginChannelCountDescription
debugChannelLayoutDescription
debugOriginChannelLayoutDescription
_isSpatialFormat:
_isMultichannelFormat:
_isSpatialDownmixFormat:
_isBinauralFormat:
_computedTierFromHLSDataWithChannelCount:
_computedChannelLayoutTagFromHLSData:channelCount:
_isHLSVersion:greatherThanOrEqualTo:
_descriptionForChannelLayoutTag:
tier
bitrate
bitDepth
codec
isSpatialized
isMultiChannel
channelLayout
audioChannelLayoutDescription
originChannelLayout
setOriginChannelLayout:
groupID
stableVariantID
stringByTrimmingCharactersInSet:
whitespaceCharacterSet
setStableVariantID:
setGroupID:
setAudioChannelLayoutDescription:
setChannelLayout:
setMultiChannel:
setBitrate:
setTier:
T@"MPNowPlayingInfoAudioRoute",R,N,V_nowPlayingAudioRoute
TB,R,N,V_canStreamSpatial
TB,R,N,V_canRenderSpatial
T@"NSString",R,C,N,V_name
TB,R,N,V_supportsSpatialization
TB,R,N,V_isSpatializationEnabled
_supportsSpatialization
_isSpatializationEnabled
_canStreamSpatial
_canRenderSpatial
_name
_nowPlayingAudioRoute
initWithNowPlayingInfoAudioRoute:
initWithRoute:headTrackedSpatialAudioEnabled:
isDeviceSpeaker
name
supportsSpatialization
isSpatializationEnabled
nowPlayingAudioRoute
canStreamSpatial
canRenderSpatial
isAirPlayRoute
isCarplayRoute
isDeviceSpeakerRoute
routeName
isCompatibleWithReplacementContext:incompatibleReason:
supportsAutoPlay
_leaseIDToLeaseSessionInfo
suzeLeaseSession:leaseRenewalDidFailWithError:
startLeaseSessionWithConfiguration:completion:
stopLeaseSession:completion:
mpcLeaseSession
icLeaseSession
stopLeaseSessionWithCompletionHandler:
setClientCount:
clientCount
leaseID
configuration
startLeaseSessionWithCompletionHandler:
strongToStrongObjectsMapTable
initWithICLeaseSession:
Tq,N,V_clientCount
T@"ICSuzeLeaseSession",R,N,V_icLeaseSession
T@"MPCSuzeLeaseSession",R,N,V_mpcLeaseSession
TB,N,V_shouldStopWhenFinished
_shouldStopWhenFinished
_clientCount
_icLeaseSession
_mpcLeaseSession
shouldStopWhenFinished
setShouldStopWhenFinished:
T@"MPCSuzeLeaseSessionController",R,N
sharedController
payloadValueFromJSONValue:
mpc_jsonValue
setFamilyName:
setNameSuffix:
setNickname:
namePrefix
givenName
middleName
familyName
nameSuffix
nickname
setSyncID:
setRecommendationID:
setSocialProfileID:
setInformalMediaClipID:
setInformalStaticAssetID:
containedPersistentID
syncID
recommendationID
formerAdamIDs
socialProfileID
informalMediaClipID
informalStaticAssetID
setServerID:
setExternalIdentifier:
setNameComponents:
setImageURL:
_initWithBlock:
nameComponents
imageURL
initWithResponseDictionary:
initWithName:uuid:root:debug:
statusWithCode:
initWithMediaRemoteCommandType:
eventWithCommand:mediaRemoteType:options:
base64EncodedStringWithOptions:
setNamePrefix:
setGivenName:
setMiddleName:
T@"MPModelSong",&,N,V_modelSong
T@"NSString",&,N,V_lyricsID
Td,N,V_visibleDuration
Tq,N,V_displayType
Tq,N,V_displayedCharacterCount
T@"NSString",C,N,V_language
Tq,N,V_sourceType
_modelSong
_visibleDuration
_displayType
_displayedCharacterCount
_language
_sourceType
modelSong
setModelSong:
visibleDuration
setVisibleDuration:
displayType
setDisplayType:
displayedCharacterCount
setDisplayedCharacterCount:
language
setLanguage:
setSourceType:
T@"ICSuzeLeaseSession",R,N,V_icSuzeLeaseSession
_icSuzeLeaseSession
initWithICSuzeLeaseSession:
beginAutomaticallyRefreshingLease
endAutomaticallyRefreshingLease
icSuzeLeaseSession
T@"NSMutableSet",&,N,V_leaseEndIgnoreReasons
T@"NSMutableDictionary",&,N,V_prepareCompletions
_leaseEndIgnoreReasons
_prepareCompletions
getHasPreparedLeaseForAccount:completion:
prepareForPlaybackWithAccount:completion:
beginIgnoringLeaseEndEventsForReason:
endIgnoringLeaseEndEventsForReason:
prepareForCurrentItemPlayback
setCanStealLeaseIfNeeded
_itemShouldPreventPlaybackDidChangeNotification:
leaseEndIgnoreReasons
setLeaseEndIgnoreReasons:
prepareCompletions
setPrepareCompletions:
engineDidPauseForLeaseEnd:
stateReasonDialogMetricsDictionary
stateReasonDialog
engine:didPauseForLeaseEndWithError:
receivedUserInteractionEvent
setShouldPreventLeaseAcquisition:
TB,N,V_hasSubscriptionPlaybackCapability
T@"ICPlayActivityEnqueuerProperties",C,N,V_enqueuerProperties
_hasSubscriptionPlaybackCapability
_enqueuerProperties
hasSubscriptionPlaybackCapability
setHasSubscriptionPlaybackCapability:
enqueuerProperties
setEnqueuerProperties:
T@"MPNowPlayingContentItem",C,N,V_contentItem
T@"UIImage",C,N,V_artworkImage
T@"NSDate",R,C,N,V_lastModifiedDate
_contentItem
_artworkImage
_lastModifiedDate
initWithURL:
initWithURL:identifier:
saveWithError:
writeWithError:
contentItem
artworkImage
setContentItem:
setArtworkImage:
lastModifiedDate
imageWithContentsOfFile:
packageURL
initWithExternalRepresentation:
bytes
setNeedsInfoDictionaryUpdate
createExternalRepresentation
deleteWithError:
packageTypeIdentifier
T@"NSString",C,N,V_hashedDSID
TB,N,V_hasCloudLibraryEnabled
T@"NSString",C,N,V_storeFrontIdentifier
activeAccount
TB,N,GisActiveAccount,V_activeAccount
TB,N,GisPrivateListeningEnabled,V_privateListeningEnabled
T@"ICURLBag",&,N,V_bag
T@"ICUserIdentity",R,N,V_userIdentity
T@"ICMusicSubscriptionStatus",R,N,V_subscriptionStatus
delegated
TB,R,N,GisDelegated,V_delegated
_hasCloudLibraryEnabled
_delegated
_activeAccount
_subscriptionStatus
_hashedDSID
_storeFrontIdentifier
_bag
initWithUserIdentity:subscriptionStatus:
initWithDelegatedUserIdentity:
canAutoPlay
hasCatalogPlaybackCapability
usesLease
subscriptionStatus
hashedDSID
setHashedDSID:
hasCloudLibraryEnabled
setHasCloudLibraryEnabled:
setStoreFrontIdentifier:
isDelegated
isActiveAccount
setActiveAccount:
setBag:
hashInStore:
T@"MPCPlaybackAccount",R,N
_needsRefreshDueToTimeout
_initialAccountGroup
accounts
hasLoadedInitialAccounts
performAfterLoadingAccounts:
accountForDSID:
accountForHashedDSID:
accountForUserIdentity:
_subscriptionStatusChangedNotification:
_userIdentityStoreChangedNotification:
_updateAccounts
_buildAccountFromLocalIdentity:completion:
_buildAccountFromDelegatedIdentity:completion:
_enumerateIdentitiesWithCompletion:
shouldReturnLastKnownStatusOnly
setShouldReturnLastKnownStatusOnly:
isActiveLocker
T@"MPCPlayerSessionResponse",R,W,N,V_response
T@"NSString",R,N,V_contentItemIdentifier
playOnPlayerPath:
T@"NSString",R,C,N,V_encodedMediaLibraryUniqueID
TB,N,V_skipEncodingMediaLibraryUniqueID
T@"NSDictionary",C,N,V_assetStoreFronts
_skipEncodingMediaLibraryUniqueID
_encodedMediaLibraryUniqueID
containsRestorableContent
isSupported
clearStartItem
updateRequestPlaybackEnvironment
assetStoreFronts
setAssetStoreFronts:
encodedMediaLibraryUniqueID
skipEncodingMediaLibraryUniqueID
setSkipEncodingMediaLibraryUniqueID:
isValidReportingEvent
reportingEventType
T@"ICPlayActivityEvent",C,N,V_playActivityEvent
TB,N,V_shouldReportToStore
_shouldReportToStore
_playActivityEvent
playActivityEvent
setPlayActivityEvent:
shouldReportToStore
setShouldReportToStore:
T@"MPCPlaybackHistoryRecordChangeRequest",C,N,V_request
_finishChangeRequestOperationWithError:
recordPlayEventForPlaylistPersistentID:
recordPlayEventForAlbumPersistentID:
appendItems:completion:
removeItems:atFilteredIndexes:completionBlock:
indexSetWithIndexesInRange:
playbackHistoryPlaylist
itemExistsInDatabaseWithPersistentID:
T@"MPModelGenericObject",&,N,V_overridePlayingItem
T@"NSIndexPath",C,N,V_playingItemIndexPath
_overridePlayingItem
setOverridePlayingItem:
albumName
artistName
albumArtistName
composerName
copyright
genreName
storeAdamIdentifier
storeCloudIdentifier
representativeCloudIdentifier
storeItemWithIdentifier:
storeIdentifier
sceneCollectionForMetadataItems:
sceneCollectionForScriptData:
_instructionsForSceneDictionaries:
T@"ICUserIdentity",R,N
T@"MPAssistantAnalyticsReportingController",&,N,V_assistantAnalyticsController
T@"MPRTCReportingController",&,N,V_rtcReportingController
T@"MPCPlaybackHistoryController",&,N,V_playbackHistoryController
T@"MPCLyricsReportingController",&,N,V_lyricsReportingController
_assistantAnalyticsController
_rtcReportingController
_playbackHistoryController
_lyricsReportingController
assistantAnalyticsController
setAssistantAnalyticsController:
rtcReportingController
setRtcReportingController:
playbackHistoryController
setPlaybackHistoryController:
lyricsReportingController
setLyricsReportingController:
initWithPlayer:clientName:clientType:clientVersion:
defaultClientVersion
registerPlayer:
requestLeaseForItem:completion:
relinquishLeaseForItem:completion:
initWithTranslator:leaseManager:
T@"NSArray",R,N,V_options
T@"MPNowPlayingInfoLanguageOption",R,N
TB,R,N,V_allowEmptySelection
_currentIndex
_allowEmptySelection
initWithLanguageOptionGroups:currentLanguageOptions:response:
numberOfOptions
indexOfSelectedOption
selectedOption
localizedTitleForOptionAtIndex:
changeRequestForOptionAtIndex:
allowEmptySelection
copyExternalRepresentation
isAutomaticAudibleLanguageOption
isAutomaticLegibleLanguageOption
displayName
languageOptionType
isEqualToLanguageOption:
languageOptions
_accountInfos
_containers
_startingItemIndexPath
T@"NSMutableDictionary",R,C,N,V_mapping
T@"<MPCQueueItemProviding>",R,N,V_queueController
_mapping
itemToFollowItem:direction:distance:reason:
queueItemForPlayerItem:allowReuse:
canSkipInDirection:fromItem:
initWithQueueController:
MPAVItemForMFPlayerItem:
setMPAVItem:forMFPlayerItem:
resetMapping
_MPAVItemForMFPlayerItem:allowReuse:
mapping
mpcReporting_isValidReportingItem
T@"<MPCReportingIdentityPropertiesLoading>",R,N
T@"NSData",R,C,N
T@"NSNumber",R,C,N
T@"ICUserIdentityProperties",R,C,N,V_delegatedIdentityProperties
T@"NSError",R,C,N,V_error
finished
TB,R,N,GisFinished,V_finished
T@"ICUserIdentityProperties",R,C,N,V_identityProperties
T@"ICPlayActivityController",R,C,N,V_playActivityController
TQ,R,N,V_playActitySessionToken
T@"ICRadioGetTracksRequest",R,C,N,V_request
T@"ICRadioGetTracksResponse",R,C,N,V_response
T@"ICRadioGetTracksResponse",R,N,V_siriAssetInfoGetTracksResponse
_finished
_playActivitySessionToken
_siriAssetInfoGetTracksResponse
_playActitySessionToken
initWithGetTracksRequest:siriAssetInfo:playActivityController:
initWithPreviousStep:
nextStepWithError:
performWithCompletionHandler:
_fireAndForgetServerDialog:
_performDefaultHandlingForButtonAction:
_presentServerDialog:completionHandler:
playActitySessionToken
siriAssetInfoGetTracksResponse
showWithCompletionHandler:
initWithCFUserNotification:
action
createCFUserNotification
setAllowInCar:
initWithStoreDialog:
handleButtonAction:usingRequestContext:withCompletionHandler:
initWithResponseDictionary:expirationDate:
nextStepWithIdentityProperties:delegatedIdentityProperties:
setPlayActivityEvents:
nextStepWithResponse:error:
nextStepByPerformingButtonAction:
setAdditionalRequestParameters:
actionDictionary
buttons
initWithVerificationContext:
setInteractionLevel:
getVerificationContextForUserIdentity:error:
T@"NSString",&,N,V_name
T@"MPAVItem",W,N,V_item
TI,N,V_endEvent
Td,N,V_started
Td,N,V_ended
_started
_ended
endInterval
setItem:
setName:
setEndEvent:
started
setStarted:
ended
setEnded:
traceWithName:item:event:
traceIntervalWithName:item:beginEvent:endEvent:
isAvailable
clientVersion
delegationProperties
T@"MPCPlaybackDelegationProperties",C,D,N
T@"ICUserIdentity",&,D,N
setClientVersion:
setDelegationProperties:
_copyWithPlaybackRequestEnvironmentClass:
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_clientVersion
T@"NSString",R,C,N,V_requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleVersion
T@"MPCPlaybackDelegationProperties",R,C,N,V_delegationProperties
_clientVersion
_delegationProperties
initWithUserIdentity:
_createStoreRequestContext
rectifiedPlaybackRequestEnvironmentForAccountManager:reasons:
setStoreDialogResponseHandler:
setAllowsHandlingNonAuthenticationDialogs:
T@"MPCPlaybackRequestEnvironment",R,N
activeAccountRequestEnvironment
requestEnvironmentWithUserIdentity:
_sessionIDLiveLinkMap
liveLinkForSessionID:
storeLiveLink:forSessionID:
T@"MPCSharedListeningLiveLinkReusePool",R,N
sharedReusePool
encodeURLData:
decodeURLData:
encodeHashedRouteUIDs:completion:
decodeHashedRouteUIDs:completion:
processData:usingProcedure:completion:
stringByAddingPercentEncodingWithAllowedCharacters:
URLPathAllowedCharacterSet
T@"MPCModelGenericAVItemUserIdentityPropertySet",&,N
T@"ICRadioPlaybackHistory",R,C,N
_playbackHistoryStore
_stationTracks
identityPropertySet
setIdentityPropertySet:
AVItemAtIndex:
isExplicitItemAtIndex:
numberOfItems
playbackHistory
removeExplicitItems
savePlaybackHistoryWithUpdates:
savePlaybackHistoryWithUpdates:completionHandler:
trackModels
trackForItemAtIndex:
tracksByApplyingTracksResponse:currentIndex:
updateWithPersonalizedResponse:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:completionHandler:
setTracks:
setNumberOfSkips:
numberOfSkips
setCurrentTrack:
currentTrack
stationIdentifier
initWithIdentityStore:
T@"ICMutableRadioPlaybackHistory",R,N
T@"MPSectionedCollection",R,C,N,V_trackModels
T@"MPCModelGenericAVItemUserIdentityPropertySet",&,N,V_identityPropertySet
_playbackHistory
_trackModels
removeTracksAtIndexes:
parentTrack
likeState
serverTrackInfo
addTrack:
initWithTrack:
initWithIndexesInRange:
initWithStationIdentifier:
mediaPlayerBundle
contentType
currentDevice
model
initWithInteger:
deviceUIDsQueue
pauseDevicesByUID:withRefId:audioRoutingInfo:completion:
pauseDevicesByUID:withRefId:audioRoutingInfo:source:completion:
localizedFailureReason
removeObjectsForKeys:
removeOutputDevices:initiator:withReplyQueue:completion:
isLocalDevice
isLocalEndpoint
_sendCommand
_context
_sendCommandQueue
_analytics
_analyticsQueue
_analyticsGroup
_startDate
sendCommand:toDestination:withOptions:completion:
sendCommandWithResult:toDestination:withOptions:completion:
sendPlaybackQueue:toDestination:completion:
sendPlaybackQueueWithResult:toDestination:completion:
sendPlaybackQueue:toDestination:withOptions:completion:
sendPlaybackQueueWithResult:toDestination:withOptions:completion:
sendPlaybackArchive:toDestination:completion:
sendPlaybackArchiveWithResult:toDestination:completion:
_findOutputDevicesForDestination:completion:
_setAnalyticsKey:value:
_setAnalyticsError:
supportedOptions
boolValueForOption:
playbackSessionIdentifier
initWithFormat:
TB,N,V_allowsStoreContainerImport
T@"MPModelPlayEvent",&,N,V_playEvent
Tq,N,V_type
_allowsStoreContainerImport
_playEvent
allowsStoreContainerImport
setAllowsStoreContainerImport:
playEvent
setPlayEvent:
setType:
getVolumeLevelForUID:completion:
T@"<MFPlaybackStackController><MFQueueManagement>",R,W,N,V_playbackStackController
shouldExpectEmptyQueue
setShouldExpectEmptyQueue:
shouldDeferItemLoading
setShouldDeferItemLoading:
initWithStackController:
clearPlaybackQueue
T@"NSObject<OS_dispatch_source>",&,N,V_bookmarkingTimer
_bookmarkingTimer
initWithTranslator:
userDidSkipDuringPlaybackFromItem:direction:
currentItemWillChangeFromItem:toItem:time:
itemDidBecomeCurrent:time:
itemDidResignCurrent:time:
itemDidPlayToEnd:time:
playbackDidStartForItem:time:rate:
playbackDidStopForItem:time:
playbackRateDidChangeToRate:forItem:time:
playbackStateDidChangeFromState:toState:forItem:time:rate:
updateDurationSnapshotWithTime:forItem:rate:
_setupBookmarkingTimerForItem:
_teardownBookmarkingTimer
bookmarkingTimer
setBookmarkingTimer:
setHasPlayedThisSession:
adjustEffectiveNetworkTypeUsingPreviouslyPlayedItem:
_playbackQueue
_needsSectionUpdate
_hasReachedTracklistEnd
_supportsLoadingAdditionalItems
_lastCleanPlayedIdentifier
_lastPlayedIdentifier
_lastResponse
_mayHaveRestrictedContent
_queueGeneration
_observedIdentityStore
_finalTracklistLoadingCompletionHandler
didSignificantlyChangeItem:
itemCount
_updateAdditionalLoadingSupport
_allowCellularStreamingDidChangeNotification:
_detectSignOutForIdentityStoreChangeNotification:
_responseDidInvalidateNotification:
_beginObservingIdentityStoreForSignOut
_defaultGetTracksRequestWithContext:radioStation:
_detectSignOutForIdentityStore:
_endObservingIdentityStoreForSignOut
_errorForRequest:withError:
_handleGetTracksResponse:getTracksError:fromRequest:completion:
_handlePersonalizationResponse:personalizationError:fromRequest:completion:
_isTransientLoadingError:
_loadTracksWithRequest:completion:
_observePersonalizationResponse:
_removeRestrictedTracks
_responseDidInvalidate
_repersonalizeCurrentTracks
_savePlaybackHistoryWithCurrentIndex:
second
first
pairWithFirst:second:
operationCount
sharedQueue
autoupdatingActiveAccount
setStationPlaybackAuthorizationToken:
setDelegatedPrivateListeningEnabled:
setShouldResponseContainStationMetadata:
setAllowsExplicitContent:
setMainTitle:
setRequestedTrackCount:
setReasonType:
setPlaybackContext:
getHistoryForStationWithIdentifier:userIdentity:completionHandler:
setPreservingCurrentlyPlayingItem:
setQueueContentReferences:
allItems
insertItems:afterItem:
setPreviousContentItemID:
replaceItemAndIdentifierSet:atIndex:
isSkippable
replaceTrackAtIndex:withTrack:
setSkipDate:
setObserver:
userAdvancedDuringPlayback
hasCellularDataCapability
T@"NSObject<OS_dispatch_queue>",R,N,V_serialQueue
T@"NSMutableArray",R,N,V_sessionArchives
T@"NSMutableDictionary",R,N,V_sessionIdentifierArchiveMap
T@"NSMutableDictionary",R,N,V_stagedQueueControllers
T@"NSString",&,N
_serialQueue
_sessionArchives
_sessionIdentifierArchiveMap
_stagedQueueControllers
loadSessionWithIdentifier:completion:
saveSessionWithCompletion:
deleteSessionWithIdentifier:completion:
stateRestorationSessionIdentifier
setStateRestorationSessionIdentifier:
unstageQueueControllerForIdentifier:
stageQueueController:forIdentifier:
queueControllerForIdentifier:
stagedQueueControllerIdentifiers
_cachesDirectory
_playbackSessionsDirectory
serialQueue
sessionArchives
sessionIdentifierArchiveMap
stagedQueueControllers
copyWithNewIdentifier:
writeToURL:atomically:encoding:error:
stringWithContentsOfURL:encoding:error:
removeObjectIdenticalTo:
removeLastObject
encodeRootObject:
initWithCodingPackage:userInfo:
imageByPreparingForDisplay
nowPlayingContentItem
isDeviceClassCUnlocked
isContentProtectionEnabled
sharedSecurityInfo
decodeRootObjectOfClasses:error:
setWithObject:
initWithCodingPackage:error:
removeTarget:
addTarget:action:
setDisableAutomaticCanBeNowPlaying:
setDataSourceQueue:
archivesAtURL:
distantPast
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
T@"MPModelSharedListeningParticipant",R,N,V_modelObject
initWithModelObject:response:
T@"NSString",C,N,V_artworkIdentifier
initWithIdentifier:artworkIdentifier:
setArtworkIdentifier:
T@"MPCMediaRemoteController",R,W,N,V_controller
initWithController:
T@"MPCModelGenericAVItemTimedMetadataResponse",&,N,V_previousResponse
T@"MPModelGenericObject",R,N,V_genericObject
T@"ICStoreRequestContext",R,C,N,V_storeRequestContext
T@"NSArray",R,C,N,V_timedMetadataGroups
_timedMetadataGroups
initWithGenericObject:timedMetadataGroups:storeRequestContext:
storeRequestContext
timedMetadataGroups
allStorePlatformMetadata
setStoreRequestContext:
setTimedMetadataData:
setExplicitSong:
tokenWithImageArtworkInfo:
initWithArtworkResponseArray:
getBytes:length:
charValue
isAtEnd
scanUpToString:intoString:
scanString:intoString:
scannerWithString:
metadataIdentifiers
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
v24@0:8@"ICLiveLink"16
v36@0:8@"ICLiveLink"16@"NSError"24B32
v32@0:8@"ICLiveLink"16@"NSArray"24
v32@0:8@"ICLiveLink"16@"ICSharedListeningQueue"24
v40@0:8@"ICLiveLink"16@"ICSharedListeningItem"24@"ICLiveLinkIdentity"32
v32@0:8@"ICLiveLink"16@"ICLiveLinkEvent"24
v32@0:8@"ICLiveLink"16@"ICSharedListeningItem"24
v24@0:8@16
v36@0:8@16@24B32
v32@0:8@16@24
v40@0:8@16@24@32
v32@0:8@"MPCPlaybackIntent"16@?<v@?@"MPPlaybackContext"@"NSError">24
v32@0:8@16@?24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"MSVBlockGuard"
@"MPCPlaybackIntent"
@"NSIndexPath"
@"MSVSectionedCollection"
@"ICLiveLink"
@"ICLiveLinkIdentity"
v40@0:8@16@24@?32
v24@0:8q16
v40@0:8q16@24@32
v32@0:8q16@24
q16@0:8
@?16@0:8
v24@0:8@?16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
v16@0:8
@"AVQueuePlayer"
@"_MPCProtoItemIdentifierSet"
{?="mediaType"b1"excludeFromShuffle"b1}
@24@0:8^{_NSZone=}16
@"NSArray"24@0:8@"MPRequest"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
@24@0:8@16
@"NSArray"
@"MPSectionedCollection"
@"MPCMediaRemoteController"32@0:8@"MPCMediaRemoteController"16@"MPMiddlewareChain"24
@32@0:8@16@24
q32@0:8q16@"MPMiddlewareChain"24
@"NSString"32@0:8@"NSString"16@"MPMiddlewareChain"24
Q32@0:8Q16@"MPMiddlewareChain"24
Q40@0:8Q16Q24@"MPMiddlewareChain"32
{?=dddddffBB}88@0:8{?=dddddffBB}16@"NSIndexPath"72@"MPMiddlewareChain"80
@"NSString"40@0:8@"NSString"16@"NSIndexPath"24@"MPMiddlewareChain"32
q40@0:8q16@"NSIndexPath"24@"MPMiddlewareChain"32
B36@0:8B16@"NSIndexPath"20@"MPMiddlewareChain"28
@"MPModelGenericObject"48@0:8@"MPModelGenericObject"16@"MPPropertySet"24@"NSIndexPath"32@"MPMiddlewareChain"40
@"NSIndexPath"32@0:8@"NSIndexPath"16@"MPMiddlewareChain"24
B36@0:8B16q20@"MPMiddlewareChain"28
B28@0:8B16@"MPMiddlewareChain"20
@"MPCPlayerAudioFormat"32@0:8@"MPCPlayerAudioFormat"16@"MPMiddlewareChain"24
@"MPCPlayerAudioRoute"32@0:8@"MPCPlayerAudioRoute"16@"MPMiddlewareChain"24
@"NSArray"32@0:8@"NSArray"16@"MPMiddlewareChain"24
@"NSArray"40@0:8@"NSArray"16@"NSIndexPath"24@"MPMiddlewareChain"32
B32@0:8B16I20@"MPMiddlewareChain"24
@44@0:8@16@"NSString"24I32@"MPMiddlewareChain"36
@"UIView<MPCVideoView>"32@0:8@"UIView<MPCVideoView>"16@"MPMiddlewareChain"24
@"<MPCVideoOutput>"32@0:8@"<MPCVideoOutput>"16@"MPMiddlewareChain"24
q32@0:8q16@24
Q32@0:8Q16@24
Q40@0:8Q16Q24@32
{?=dddddffBB}88@0:8{?=dddddffBB}16@72@80
@40@0:8@16@24@32
q40@0:8q16@24@32
B36@0:8B16@20@28
@48@0:8@16@24@32@40
B36@0:8B16q20@28
B28@0:8B16@20
B32@0:8B16I20@24
@44@0:8@16@24I32@36
@"MPCPlaybackEngine"
@"<MPAVQueueController>"
@"MPQueuePlayer"
@"<MFPlaybackStackController><MFQueueManagement>"
@"MPCItemBookmarker"
@"MPCMediaFoundationTranslator"
@"MPCErrorControllerImplementation"
@"MPCExternalPlaybackControllerImplementation"
@"<MFAssetLoading>"
@"MPCLeaseController"
@"MPCPlayerItemConfigurator"
@"MPCAVItemTrace"
@24@0:8@"MPCPlaybackEngine"16
v40@0:8@"MPPlaybackContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"<MPAVQueueController>"16@?<v@?@"NSError">24
v24@0:8@?<v@?B@"NSError">16
@"MPCPlaybackEngine"16@0:8
@"<MPAVQueueController>"16@0:8
v24@0:8@"<MPAVQueueController>"16
@"MPAVItem"16@0:8
@"MPQueuePlayer"16@0:8
d16@0:8
f16@0:8
v20@0:8B16
B48@0:8q16q24B32B36^@40
v24@0:8Q16
v20@0:8f16
B28@0:8f16@?<v@?>20
v20@0:8i16
v24@0:8d16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v36@0:8f16@"NSString"20@?<v@?@"NSError">28
v40@0:8d16@"NSString"24@?<v@?@"NSError">32
B24@0:8q16
v40@0:8q16@"NSString"24@?<v@?@"NSError">32
v24@0:8@"NSString"16
B28@0:8f16@?20
v36@0:8f16@20@?28
v40@0:8d16@24@?32
v40@0:8q16@24@?32
v24@0:8@"<MFQueuePlayerItem>"16
v32@0:8@"<MFQueuePlayerItem>"16@"NSError"24
v32@0:8@"<MPAVQueueController>"16@"MPAVItem"24
v32@0:8@"<MPAVQueueController>"16@"MPPlaybackContext"24
v32@0:8@"<MPAVQueueController>"16q24
v32@0:8@"<MPAVQueueController>"16@"NSString"24
v32@0:8@16q24
v48@0:8@"<MFQueuePlayerItem>"16@"<MFQueuePlayerItem>"24q32@"<MFTimeStamp>"40
v32@0:8@"<MFQueuePlayerItem>"16@"<MFTimeStamp>"24
v40@0:8@"<MFQueuePlayerItem>"16@"NSError"24@"<MFTimeStamp>"32
v40@0:8@"<MFQueuePlayerItem>"16q24@"<MFTimeStamp>"32
v40@0:8@"<MFQueuePlayerItem>"16f24B28@"<MFTimeStamp>"32
v40@0:8@"<MFQueuePlayerItem>"16@"NSString"24@"<MFTimeStamp>"32
v48@0:8d16@"<MFQueuePlayerItem>"24q32@"<MFTimeStamp>"40
v36@0:8f16@"<MFQueuePlayerItem>"20@"<MFTimeStamp>"28
v28@0:8f16@"<MFTimeStamp>"20
v36@0:8B16@"<MFQueuePlayerItem>"20@"<MFTimeStamp>"28
v40@0:8q16@"<MFQueuePlayerItem>"24@"<MFTimeStamp>"32
v32@0:8@"NSString"16@"<MFTimeStamp>"24
v36@0:8@"NSString"16B24@"<MFTimeStamp>"28
v36@0:8B16@"<MFRouteChangeMetadata>"20@"<MFTimeStamp>"28
v40@0:8q16q24@"<MFTimeStamp>"32
v28@0:8B16@"<MFTimeStamp>"20
v24@0:8@"<MFUserAction>"16
v32@0:8@"<MFUserAction>"16@"NSError"24
v40@0:8@"<MFQueuePlayerItem>"16d24@"<MFTimeStamp>"32
v24@0:8@"<MFTimeStamp>"16
v48@0:8@"<MFQueuePlayerItem>"16d24d32@"<MFTimeStamp>"40
v48@0:8@16@24q32@40
v40@0:8@16q24@32
v40@0:8@16f24B28@32
v48@0:8d16@24q32@40
v36@0:8f16@20@28
v28@0:8f16@20
v36@0:8B16@20@28
v36@0:8@16B24@28
v40@0:8q16q24@32
v28@0:8B16@20
v40@0:8@16d24@32
v48@0:8@16d24d32@40
v52@0:8@16d24d32B40@44
v32@0:8@16d24
@"NSMapTable"
@"MPCMediaRemoteMiddleware"
@"MPRequest<MPCMediaRemoteMiddlewareMetadataOperationConfiguration>"
@"MPCFuture"
@"NSMapTable"16@0:8
v24@0:8@"NSMapTable"16
@"NSError"16@0:8
@?<v@?@"NSString">16@0:8
v24@0:8@?<v@?@"NSString">16
{_MSVSignedRange=qq}32@0:8{?=qq}16
@"MPSectionedCollection"16@0:8
@"NSIndexPath"16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSNumber"
@"ICMusicSubscriptionLeaseSession"
@"MPSubscriptionStatusPlaybackInformation"
@"MPCSuzeLeaseSession"
@"MPModelGenericObject"
@"MPPropertySet"
@"<MPCReportingIdentityPropertiesLoading>"
@"MPCModelGenericAVItemTimedMetadataRequest"
@"MPCModelGenericAVItemTimedMetadataResponse"
@"NSOperationQueue"
@"NSString"
@"ICStoreRequestContext"
@"NSURL"
@"MPCModelGenericAVItemUserIdentityPropertySet"
@"ICContentKeySession"
@"ICAVAssetDownloadURLSession"
@"ICURLRequest"
@"ICMusicSubscriptionLeaseStatus"
@"NSDictionary"
@"<MPCModelPlaybackAssetCacheProviding>"
@"NSData"
@"MPMediaLibrary"
@"MPCPlaybackRequestEnvironment"
@"MPCPlaybackEngineEventStream"
@"MPCPlayerAudioFormat"
@"MPCPlayerAudioRoute"
v24@0:8@"ICEnvironmentMonitor"16
v40@0:8@"AVPlayerItemMetadataOutput"16@"NSArray"24@"AVPlayerItemTrack"32
v24@0:8@"AVPlayerItemOutput"16
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceRenewalRequest"24
v32@0:8@"AVAssetResourceLoader"16@"AVAssetResourceLoadingRequest"24
B32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
v32@0:8@"AVAssetResourceLoader"16@"NSURLAuthenticationChallenge"24
B32@0:8@16@24
@24@0:8^@16
B32@0:8@16q24
v28@0:8@16B24
v28@0:8f16@?20
{?=qqqqqqqq}16@0:8
v28@0:8d16B24
v32@0:8d16@?24
@"ICStoreDialogResponse"16@0:8
@"AVURLAsset"
v40@0:8@16Q24@?32
@"ICUserIdentityProperties"
@"MPCJinglePlayActivityReportingController"
@"MPCReportingPlaybackObserver"
{?="containerIndex"b1"itemIndex"b1}
v44@0:8@16Q24f32@?36
v24@0:8@"<MPCPlaybackEngineEventStreamSubscription>"16
@"<MPCPlaybackEngineEventStreamSubscription>"
B40@0:8@16@24@32
@"MPCModelStorePlaybackItemsRequest"
@"MPServerObjectDatabase"
@"NSMutableArray"
@"NSMutableDictionary"
@"NSMutableOrderedSet"
@"NSMutableSet"
@"MPMutableSectionedCollection"
{MPCModelStorePlaybackItemsRequestAccumulatorResult=BB}16@0:8
{MPCModelStorePlaybackItemsRequestAccumulatorResult=BB}24@0:8@16
{_MPCModelStorePlaybackItemEligibility=Bq}24@0:8@16
@"_MPCProtoRadioContentReferenceLibraryAlbumContentReference"
@"_MPCProtoRadioContentReferenceLibraryArtistContentReference"
@"_MPCProtoRadioContentReferenceLibraryItemContentReference"
@"_MPCProtoRadioContentReferenceStoreContentReference"
@"MPModelResponse"
@"MPCModelGenericAVItemTimedMetadataStreamFields"
@40@0:8@16@24B32B36
^{OpaqueCMTimebase=}
@"MPCMediaRemoteController"
q40@0:8q16q24@"MPMiddlewareChain"32
@"MPCPlayerPath"40@0:8@"MPCPlayerPath"16q24@"MPMiddlewareChain"32
@"MPModelGenericObject"40@0:8@"MPModelGenericObject"16@"NSIndexPath"24@"MPMiddlewareChain"32
q40@0:8q16q24@32
@40@0:8@16q24@32
@"MPCPlayerPath"
@"MPCPlayerPath"16@0:8
{?=qq}16@0:8
@"MPPropertySet"16@0:8
{?="cloudID"b1"delegateInfoID"b1"purchaseHistoryID"b1"storeAdamID"b1"storeSubscriptionAdamID"b1}
@"MPMusicPlayerQueueDescriptor"
@"MPMusicPlayerControllerSystemCache"
@"NSXPCListener"
v32@0:8@"MPCPlaybackEngine"16Q24
v40@0:8@"MPCPlaybackEngine"16@"MPAVItem"24@"MPAVItem"32
v32@0:8@"MPCPlaybackEngine"16@"MPAVItem"24
v36@0:8@"MPCPlaybackEngine"16d24f32
v40@0:8@"MPCPlaybackEngine"16@"MPPlaybackContext"24@"NSError"32
v32@0:8@"MPCPlaybackEngine"16@"NSString"24
v32@0:8@"MPCPlaybackEngine"16q24
v32@0:8@"MPCPlaybackEngine"16@"NSArray"24
v24@0:8@"MPCPlaybackEngine"16
v32@0:8@16Q24
v36@0:8@16d24f32
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v32@0:8@"MPMusicPlayerControllerApplicationQueueModifications"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">16
v32@0:8q16@?<v@?@"MPMusicPlayerControllerNowPlaying"@"NSError">24
v40@0:8@"MPMediaItem"16@"NSString"24@?<v@?@"NSError">32
v56@0:8@"NSString"16@"NSString"24{CGSize=dd}32@?<v@?@"NSData"@"NSError">48
v24@0:8@?<v@?@"MPMusicPlayerControllerNowPlayingTimeSnapshot">16
v24@0:8@?<v@?@"MPMusicPlayerQueueDescriptor"@"NSError">16
v32@0:8@"MPMusicPlayerQueueDescriptor"16@?<v@?@"NSError">24
v32@0:8q16@?24
v56@0:8@16@24{CGSize=dd}32@?48
v24@0:8@?<v@?q>16
v32@0:8d16@?<v@?>24
v28@0:8f16@?<v@?>20
v24@0:8@?<v@?B>16
@28@0:8d16f24
v24@0:8@"MPMusicPlayerQueueDescriptor"16
v24@0:8@"MPMusicPlayerControllerNowPlaying"16
v24@0:8@"MPMusicPlayerControllerNowPlayingTimeSnapshot"16
@40@0:8@16@24^@32
v24@0:8@?<v@?@"MPCReportingIdentityProperties"@"NSError">16
@"MPModelMediaClip"
@"MPLibraryAddStatusObserver"
@"NSUserDefaults"
@"NSObject<OS_dispatch_source>"
@"MPNowPlayingInfoCenter"
@"MPRemoteCommandCenter"
v36@0:8@16B24@?28
@"NSNumber"16@0:8
v24@0:8@"NSNumber"16
@"MPCPlaybackRequestEnvironment"16@0:8
v24@0:8@"MPCPlaybackRequestEnvironment"16
@"NSString"32@0:8@"MPNowPlayingInfoCenter"16q24
@"MPNowPlayingContentItem"32@0:8@"MPNowPlayingInfoCenter"16@"NSString"24
@"NSString"24@0:8@"MPNowPlayingInfoCenter"16
@"NSProgress"56@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24{CGSize=dd}32@?<v@?@"UIImage"@"NSError">48
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"MPNowPlayingInfoLyricsItem"@"NSError">32
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"NSString"@"NSError">32
@"NSProgress"40@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24@?<v@?@"NSArray"@"NSError">32
@"NSArray"48@0:8@"MPNowPlayingInfoCenter"16q24q32^q40
@"NSString"40@0:8@"MPNowPlayingInfoCenter"16q24@"MPNowPlayingContentItem"32
v32@0:8@"MPNowPlayingInfoCenter"16@?<v@?@"NSData"@"NSError">24
v40@0:8@"MPNowPlayingInfoCenter"16@"<MPNowPlayingInfoTransportableSessionRequest>"24@?<v@?@"MPNowPlayingInfoTransportableSessionResponse"@"NSError">32
v32@0:8@"MPNowPlayingInfoCenter"16@"NSString"24
v40@0:8@"MPNowPlayingInfoCenter"16@"NSString"24@"NSError"32
@"MPNowPlayingContentItem"24@0:8q16
@56@0:8@16@24{CGSize=dd}32@?48
@40@0:8@16@24@?32
@48@0:8@16q24q32^q40
@24@0:8q16
@32@0:8@16q24
@"MPArtworkCatalog"32@0:8@"MPNowPlayingInfoCenter"16@"MPNowPlayingContentItem"24
@"MPModelStorePlatformMetadataGenericObjectBuilder"
{?="initialized"b1"trackNumber"b1"trackCount"b1"playbackPosition"{?="identifiers"b1"bookmarkTime"b1"shouldRememberBookmarkTime"b1"hasBeenPlayed"b1"startTime"b1"stopTime"b1"storeUbiquitousIdentifier"b1"userPlayCount"b1}}
@"MPCModelGenericAVItemAssetLoadProperties"
q24@0:8@16
v32@0:8@"MPModelGenericObject"16@?<v@?@"NSError">24
v56@0:8^@16^@24@"MPModelGenericObject"32q40@"NSString"48
v40@0:8@"MPModelFileAsset"16@"MPModelGenericObject"24@?<v@?@"NSError">32
v56@0:8^@16^@24@32q40@48
@"MPCPrivateListeningStateSource"
@"NSTimeZone"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@32@0:8#16^{_NSZone=}24
@"<MPCPlaybackIntentDataSource>"
@"<NSSecureCoding>"
v40@0:8@?16@?24@?32
v32@0:8@"MPPlaybackContext"16@?<v@?@"NSString"@"NSError">24
@"MPModelPlayEvent"32@0:8@"NSString"16@"NSString"24
@"MPIdentifierSet"32@0:8@"NSString"16@"NSString"24
@"MPAVItem"32@0:8@"NSString"16@"NSString"24
B32@0:8@"NSString"16@"NSString"24
v24@0:8@"MPAVItem"16
B24@0:8@"NSString"16
q24@0:8@"NSString"16
v40@0:8@"MPCQueueControllerDataSourceLoadRequest"16@"NSString"24@?<v@?@"NSError">32
@"MPPlaceholderAVItem"24@0:8@"NSString"16
@"NSString"24@0:8@"MPIdentifierSet"16
B32@0:8@"NSString"16q24
v32@0:8@"<MPMutableIdentifierListSection>"16@?<v@?@"NSError">24
@"_MPCProtoDelegateInfo"
@"_MPCProtoRadioContentReference"
{?="initialized"b1"beats1"b1"name"b1"editorNotes"b1"shortEditorNotes"b1"explicit"I"artwork"b1"allowsItemLiking"b1"attributionLabel"b1"type"b1"subtype"b1"subscriptionRequired"b1"providerUniversalLink"b1"providerBundleIdentifier"b1}
@"MPCPlaybackEngineMiddleware"
@"MPCPlayerRequest"
@"MPCFuture"16@0:8
@"MPCMediaRemoteController"16@0:8
@"MPModelPlayEvent"
@"MPAVItem"
@"<MPCAssetLoaderDelegate>"
@"NSError"
@64@0:8@16@24@32q40@48@?56
B32@0:8@16^@24
v40@0:8@"<MFQueuePlayerItem>"16q24@?<v@?@"<MFQueuePlayerItem>"q@"NSError">32
v40@0:8@16q24@?32
@"MPExportableArtworkProperties"
@40@0:8@16{CGSize=dd}24
q20@0:8{?=BBBB}16
v28@0:8{?=BBBB}16@?20
@"MPCStoreFrontLocalEquivalencyMiddleware"
@"MPModelGenericObject"16@0:8
@"MPCPlayerCommandRequest"
@"MPCPlayerCommandStatus"
@32@0:8@16Q24
@44@0:8I16@20@28@36
I16@0:8
@"MPCPlayerResponseTracklist"
@"UIView<MPCVideoView>"
@"<MPCVideoOutput>"
@24@0:8@?16
@32@0:8@16@?24
@20@0:8I16
{?="reverseCount"q"forwardCount"q}
v32@0:8{?=qq}16
@"MPCPlayerResponse"
@"<MPCContinueListeningRadioQueueProviding>"
@"MPCModelRadioContentReference"
@"MPModelRadioStation"
@"ICUserIdentity"16@0:8
v24@0:8@"ICUserIdentity"16
@"NSObject<OS_dispatch_group>"
@"<MPCRTCEventConsumerTestingDelegate>"
@"RTCReporting"
v40@0:8@16@24q32
v48@0:8@16q24q32@40
@"AVPlayer"
@"MPCSceneCollection"
@"MPNotificationObserver"
v48@0:8@16@24@32^v40
q40@0:8{?=qiIq}16
{?=qiIq}24@0:8q16
@"ICSharedListeningQueue"
@"MPModelResponse"16@0:8
v24@0:8@"MPModelResponse"16
@"MPRemoteCommandHandlerDialogAction"
@"MPRemoteCommandHandlerDialog"
@"MPCPlayerCommandDialog"
@"MPRemoteCommandStatus"
@"MPStoreLibraryPersonalizationResponse"
@"NSDate"
@"NSOperation"32@0:8q16@?<v@?@"MPLibraryKeepLocalStatusObserverConfiguration"@"NSError">24
@32@0:8q16@?24
@"NSNumber"24@0:8q16
@"MPModelFileAsset"
@"MPModelHomeSharingAsset"
@"MPIdentifierSet"
@"MPModelStoreAsset"
@"NSUUID"
{?="flags"Q"machAbsoluteTime"Q"rawNanoSeconds"Q"timebase"Q"userSecondsSinceReferenceDate"d}
@80@0:8@16@24{?=QQQQd}32@72
d24@0:8@16
{?=QQQQd}16@0:8
@32@0:8q16^@24
@"<MPCSupportedCommands>"
@28@0:8I16@20
f24@0:8@16
@"<MPCExternalPlaybackRouter>"
v40@0:8@"NSError"16@"<MFPlayerItem>"24@?<v@?q>32
v32@0:8@"NSError"16@"<MFPlayerItem>"24
v52@0:8@16@24B32q36@?44
q32@0:8@16@24
@"NSLock"
@"NSHashTable"
@"MPRequestResponseController"
@"MPModelRequest<MPCModelPlaybackRequest>"
@"<MPMutableIdentifierListSection>"
@"MPCModelPlaybackContext"
@"MPModelResponse<MPCModelPlaybackResponse>"
v32@0:8@"MPRequestResponseController"16@?<v@?>24
B32@0:8@"MPRequestResponseController"16@"NSError"24
v24@0:8@"MPRequestResponseController"16
@"NSDictionary"16@0:8
{?="dataSourcePlaceholderItemForLoadingAdditionalItemsInSection"b1"dataSourceSupplementalPlaybackContextWithReason"b1"dataSourceSupplementalPlaybackContextBehavior"b1"dataSourceCanSkipItem"b1"dataSourceFirstItemIntersectingIdentifierSet"b1"dataSourceItemDidBeginPlayback"b1"dataSourceShouldRequestAdditionalItemsWhenReachingTailOfSection"b1"dataSourcePrefetchThresholdForSection"b1"dataSourceShouldUsePlaceholderForItemInSection"b1"dataSourceSectionShouldShuffleExcludeItem"b1"dataSourceUpdatedPlaybackContext"b1}
@"MPPlaceholderAVItem"
@"<MPCQueueControllerDataSource><MPCQueueControllerDataSourceStateRestoring><MPRTCReportingItemSessionContaining>"
@"MPPlaybackContext"
@"ICPlayActivityController"
d48@0:8@16@24@32@40
d40@0:8@16@24@32
v48@0:8@16@24@32@40
v56@0:8@16@24@32@40@48
{?="cloudID"b1"delegateInfoID"b1"storeAdamID"b1}
v36@0:8I16@20@?28
q32@0:8{_MSVSignedRange=qq}16
@32@0:8{_MSVSignedRange=qq}16
@24@0:8^v16
q40@0:8@16{CGSize=dd}24
@48@0:8@16@24{CGSize=dd}32
@"ICUserIdentity"
^{_MRSystemAppPlaybackQueue=}16@0:8
@"MPMediaQuery"
@"MPMediaItem"
@"MPAVRoute"
@44@0:8@16@24i32@36
v32@0:8@?16@?24
^v16@0:8
@36@0:8@16^v24B32
@40@0:8^v16@24@32
@"NSCache"
@"UIWindow"
B24@0:8@"MPArtworkCatalog"16
B32@0:8@"MPArtworkRepresentation"16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"24@0:8@"MPArtworkCatalog"16
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPArtworkRepresentation"@"NSError">24
v24@0:8@"MPArtworkCatalog"16
@"<MPArtworkDataSourceVisualIdenticality>"24@0:8@"MPArtworkCatalog"16
@40@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32
v56@0:8q16@"MPArtworkCatalog"24@"NSDictionary"32@?<v@?@?<v@?@@"NSError">>40@?<v@?@@"NSError">48
v32@0:8@"MPArtworkCatalog"16@?<v@?@"MPExportableArtworkProperties"@"NSError">24
B32@0:8q16@"MPArtworkCatalog"24
@"MPArtworkRepresentation"32@0:8q16@"MPArtworkCatalog"24
v40@0:8q16@"MPArtworkCatalog"24@?<v@?@"MPArtworkRepresentation"@"NSError">32
@40@0:8q16@24@32
v56@0:8q16@24@32@?40@?48
B32@0:8q16@24
@32@0:8q16@24
@"UIImageView"
@"UIView"
v48@0:8{CGSize=dd}16d32@?40
@"UILabel"
@"MPCDebugOverlayItem"
{CGSize=dd}32@0:8{CGSize=dd}16
@"UIImage"
@"MPCDebugOverlayItemDisplay"
@"MPArtworkCatalog"
v44@0:8@16@24@32i40
v72@0:8@16@24{?=QQQQd}32
v28@0:8@16i24
v56@0:8{?=QQQQd}16
v60@0:8{?=QQQQd}16B56
@"MPModelRequest"
@"ICRadioContentReference"
@"MPCReportingController"
@"MPCStoreLibraryPersonalizationMiddleware"
@"MPCPlaybackSharedListeningProperties"
@"MPAVRoutingController"
@"MPCModelGenericAVItem"
v24@0:8@"MPAVRoutingController"16
v32@0:8@"MPAVRoutingController"16@"NSError"24
v32@0:8@"MPAVRoutingController"16@"NSArray"24
v32@0:8@"MPAVRoutingController"16@"MPAVRoute"24
v64@0:8@"MPAVRoutingController"16@"MPAVRoute"24q32@"NSString"40@"NSString"48@?<v@?B>56
v28@0:8@"MPAVRoutingController"16B24
v64@0:8@16@24q32@40@48@?56
@32@0:8@16^@24
{?="accountID"b1"delegateInfoID"b1"systemReleaseType"b1"privateListeningEnabled"b1}
v32@0:8@"<MFExternalPlaybackConfigurable>"16@"<MFQueuePlayerItem>"24
B40@0:8@16@24q32
q36@0:8@16@24B32
{?="representativeItemCloudID"b1"storeAdamID"b1}
@24@0:8Q16
v32@0:8Q16@?24
v48@0:8@16Q24Q32@?40
@24@0:8d16
@"CPLRUDictionary"
v28@0:8Q16B24
@"MPCSharedListeningEventParticipant"
@"MPCSharedListeningSessionEvent"
@"MPCSharedListeningPlaybackEvent"
@"MPCSharedListeningQueueEvent"
@"MPCSharedListeningReactionEvent"
@"MPCSharedListeningCustomEvent"
@"MPCSharedListeningQueueEventContentAdded"
@"MPCSharedListeningQueueEventContentRemoved"
@"MPCSharedListeningQueueEventContentReordered"
@"MPCSharedListeningQueueEventContentReplaced"
@"MPCSharedListeningQueueEventContentPlayedNow"
@"MPCSharedListeningQueueEventPlaybackModeChanged"
@20@0:8B16
@"MPCAssistantConnection"
@"MPCAssistantDiscovery"
v44@0:8I16@20@28@?36
v52@0:8I16@20@28@36@?44
v56@0:8@16@24@32@40@?48
v52@0:8I16@20^v28@36@?44
^v32@0:8@16@24
@"MRCommandResult"
@"NSSet"
@"MPCPlayerCommandRequest"16@0:8
@"MPCPlayerCommandRequest"24@0:8@"MPCPlaybackIntent"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16q24
@"MPCPlayerCommandRequest"32@0:8@"MPCPlaybackIntent"16@"MPCPlayerResponseItem"24
B32@0:8@16B24i28
@"MPCPlayerCommandRequest"20@0:8B16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseSection"16
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerResponseItem"16
@"MPCPlayerCommandRequest"24@0:8q16
B24@0:8@"MPCPlayerResponseItem"16
@"MPCPlayerCommandRequest"32@0:8@"MPCPlayerResponseItem"16@"MPCPlayerResponseItem"24
@"NSIndexPath"32@0:8@"NSIndexPath"16@"NSIndexPath"24
Q24@0:8Q16
@24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8@"NSIndexPath"16
@"MPIdentifierSet"24@0:8q16
@"NSIndexPath"24@0:8@"MPIdentifierSet"16
{_NSRange=QQ}16@0:8
q24@0:8q16
B24@0:8@"<MPLazySectionedCollectionDataSource>"16
@"<MPAVQueueControllerDelegate>"
@"<MPAVQueueCoordinating>"
@"MPSectionedIdentifierListPosition"
@"MPShuffleableSectionedIdentifierList"
@"MPSectionedIdentifierList"
v32@0:8@"NSArray"16@"NSString"24
v24@0:8@"MPCSharedListeningContainerInfo"16
v24@0:8@"MPCSharedListeningEvent"16
v40@0:8@"NSString"16@"NSString"24@"ICLiveLinkIdentity"32
@"NSString"24@0:8@"NSString"16
v32@0:8q16@"NSString"24
B24@0:8@"MPAVItem"16
v32@0:8@"MPPlaybackContext"16@?<v@?@"NSError">24
v40@0:8@"MPPlaybackContext"16q24@?<v@?@"NSError">32
v44@0:8@"MPPlaybackContext"16q24B32@?<v@?@"NSError">36
v48@0:8@"MPPlaybackContext"16q24B32B36@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"MPAVController"16@"MPAVItem"24@"MPAVItem"32
v28@0:8@"NSString"16B24
@"NSString"24@0:8q16
@"NSString"40@0:8q16q24^B32
@"MPAVItem"24@0:8@"NSString"16
@"<MPAVQueueControllerDelegate>"16@0:8
v24@0:8@"<MPAVQueueControllerDelegate>"16
@"<MPAVQueueCoordinating>"16@0:8
v24@0:8@"<MPAVQueueCoordinating>"16
@"NSArray"40@0:8q16q24^q32
@40@0:8q16q24^q32
v44@0:8@16q24B32@?36
v48@0:8@16q24B32B36@?40
@40@0:8q16q24^B32
@"MPAVItem"32@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24
v32@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24
v40@0:8@"<MPAVQueueCoordinating>"16@"MPAVItem"24@"MPAVItem"32
@"MPAVItem"28@0:8@"NSString"16B24
@"MPAVItem"48@0:8@"MPAVItem"16q24q32B40B44
B32@0:8q16@"MPAVItem"24
@28@0:8@16B24
@48@0:8@16q24q32B40B44
@"NSArray"24@0:8q16
@"NSString"32@0:8@"NSString"16@"NSString"24
v24@0:8@"MPShuffleableSectionedIdentifierList"16
v40@0:8@"MPSectionedIdentifierList"16@"NSArray"24@"NSString"32
v32@0:8@"MPSectionedIdentifierList"16@"NSString"24
v64@0:8@16q24@32@40Q48@?56
@48@0:8q16@24q32^B40
v48@0:8@16@24@32@?40
@32@0:8@16^B24
@"MPCQueueController"
@"NSEnumerator"
@"<MPSectionedIdentifierListEnumerationItem>"16@0:8
@"<MPSectionedIdentifierListEnumerationTrackingEntry>"16@0:8
@56@0:8@16q24Q32@40@48
@"MPCSharedListeningContainerInfo"24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSString"24
v48@0:8@"MPPlaybackContext"16@"NSString"24Q32@?<v@?@"NSError">40
@"<MPCQueueControllerCommandInterposingHost>"16@0:8
v24@0:8@"<MPCQueueControllerCommandInterposingHost>"16
v48@0:8@16@24Q32@?40
@"<MPCQueueControllerCommandInterposingHost>"
@"NSString"32@0:8@"AVPlayerPlaybackCoordinator"16@"AVPlayerItem"24
{?="storeAdamID"b1}
@"AVPlayerLayer"
v28@0:8d16f24
@"MPCPlayerResponseParticipant"
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B"isLoading"B}
@"MPCPlayerCommandRequest"24@0:8@"MPCPlayerAudioFormat"16
@"MPCPlayerAudioFormat"16@0:8
@"MPCPlayerAudioRoute"16@0:8
{?=dddddffBB}16@0:8
@28@0:8@16I24
@"MPCPlayerCommandRequest"20@0:8f16
@20@0:8f16
@"MPCPlayerCommandRequest"24@0:8d16
@"MPAVController"
v40@0:8d16d24@32
v32@0:8d16d24
v32@0:8d16@24
d32@0:8@16d24
{?="cloudID"b1"duration"b1"fileSize"b1"storeAdamID"b1"albumDiscCount"b1"albumTrackCount"b1"contentType"b1"discNumber"b1"trackNumber"b1"year"b1"isCompilation"b1}
^{opaqueMTAudioProcessingTap=}
@"_MPCAudioSpectrumAnalyzerStorage"
@"MPCAudioSpectrumAnalyzer"
v80@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16q24{?={?=qiIq}{?=qiIq}}32
v40@0:8^{opaqueMTAudioProcessingTap=}16q24r^{AudioStreamBasicDescription=dIIIIIIII}32
{DSPSplitComplex="realp"^f"imagp"^f}
^{OpaqueFFTSetup=}
@28@0:8Q16f24
v88@0:8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16Q24{?={?=qiIq}{?=qiIq}}32@80
^{_MPCAudioSpectrumAnalyzerBandInternal={MPCAudioSpectrumAnalyzerBand=ff}fffQ}
q24@0:8{MPCAudioSpectrumAnalyzerBand=ff}16
f32@0:8q16o^{MPCAudioSpectrumAnalyzerBand=ff}24
@"_MPCProtoContainerIdentifierSet"
{?="containerType"b1}
@"MPPlaybackUserDefaults"
@"ICEnvironmentMonitor"
@"MSVABTestGenerator"
@36@0:8@16@24f32
q24@0:8Q16
@"<MPCExplicitContentAuthorizationDelegate>"
@"ICAgeVerificationState"
B28@0:8@16B24
v28@0:8q16B24
v32@0:8@16B24B28
@"AVPlayerItem"16@0:8
@"NSURL"16@0:8
{_MSVSignedRange="location"q"length"q}
@"MSVLRUDictionary"
@"<MPArtworkDataSource>"
@?<@"MPArtworkCatalog"@?@"MPModelObject">24@0:8@"MPNowPlayingContentItem"16
@?24@0:8@16
v40@0:8@"MSVLRUDictionary"16@24@32
v56@0:8@16{_MSVSignedRange=qq}24{_MSVSignedRange=qq}40
@?28@0:8I16@20
@?36@0:8@16d24f32
v48@0:8I16@20I28@32@?40
^v20@0:8I16
v32@0:8^v16@?24
@"MSVSQLDatabase"
@"<MPCPlabackEngineEventStreamTestingDelegate>"
@"MPCPlaybackEngineEvent"
v32@0:8@"NSString"16@?<v@?@"MPCPlaybackEngineEvent"^B>24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"MPCPlaybackEngineEvent"^B>32
v32@0:8@"NSArray"16@?<v@?@"MPCPlaybackEngineEvent"^B>24
v40@0:8@"NSArray"16@"NSDictionary"24@?<v@?@"MPCPlaybackEngineEvent"^B>32
@"MPCPlaybackEngineEvent"32@0:8@"NSString"16@"NSDictionary"24
@"MPCPlaybackEngineEvent"32@0:8@"NSArray"16@"NSDictionary"24
q32@0:8@"NSString"16@"NSDictionary"24
q32@0:8@"NSArray"16@"NSDictionary"24
@"<MPCPlaybackEngineEventStreamCursor>"24@0:8@"MPCPlaybackEngineEvent"16
@"<MPCPlaybackEngineEventStreamCursor>"32@0:8@"MPCPlaybackEngineEvent"16@"MPCPlaybackEngineEvent"24
@"MPCPlaybackEngineEvent"16@0:8
@"<MPCPlaybackEngineEventConsumer>"
v32@0:8@"NSString"16@?<B@?@"MPCPlaybackEngineEvent"@"<MPCPlaybackEngineEventStreamCursor>">24
v40@0:8@"NSString"16Q24@?<B@?@"MPCPlaybackEngineEvent"@"<MPCPlaybackEngineEventStreamCursor>">32
v24@0:8@?<v@?>16
@"NSProgress"
@"ICMediaRedownloadRequest"
@"ICRadioGetTracksRequest"
v40@0:8@"MPServerObjectDatabase"16@"MPServerObjectDatabaseImportRequest"24@"NSError"32
v32@0:8@"MPServerObjectDatabase"16@"MPServerObjectDatabaseImportRequest"24
@40@0:8@16@24^v32
v36@0:8@16{?=BBBB}24@?28
v44@0:8@16@24B32@?36
v48@0:8@16@24B32{?=BBBB}36@?40
@32@0:8^{_NSZone=}16#24
v24@0:8^v16
@"AVAudioSession"
@"MPNowPlayingInfoCenter"16@0:8
@"MPRemoteCommandCenter"16@0:8
@"AVAudioSession"16@0:8
@"<MPCPlaybackEngineDelegate>"
@"MPProtocolProxy<MPCPlaybackEngineEventObserving>"
@"<MPCPlaybackEngineImplementation>"
@"_MPCMediaRemotePublisher"
@"_MPCMusicPlayerControllerServer"
@"_MPCReportingController"
@"_MPCPlaybackEngineSessionManager"
@"_MPCLeaseManager"
@"_MPCPlaybackAccountManager"
@"_MPCFairPlayPerformanceController"
@"<MPCPlaybackEngineInitializationParameters>"
v40@0:8@"MPAVItem"16q24@?<v@?B@"NSError">32
v32@0:8@16^v24
I32@0:8@16q24
v20@0:8I16
@"MPNowPlayingInfoAudioRoute"
v32@0:8@"ICSuzeLeaseSession"16@"NSError"24
@"ICSuzeLeaseSession"
@"<MPCPlaybackEngineEventPayloadJSONValue>"16@0:8
@24@0:8@"<MPCPlaybackEngineEventPayloadJSONValue>"16
@"MPModelSong"
@"ICPlayActivityEnqueuerProperties"
@"MPNowPlayingContentItem"
B24@0:8^@16
@"ICMusicSubscriptionStatus"
@"ICURLBag"
@"MPCPlayerSessionResponse"
@"ICPlayActivityEvent"
@"MPCPlaybackHistoryRecordChangeRequest"
@"MPAssistantAnalyticsReportingController"
@"MPRTCReportingController"
@"MPCPlaybackHistoryController"
@"MPCLyricsReportingController"
v32@0:8@"<MFPlayerItem>"16@?<v@?>24
@"_MPCProtoTracklistIndexPath"
{?="shuffleMode"b1}
@"<MPCQueueItemProviding>"
@"<MFQueuePlayerItem>"48@0:8@"<MFQueuePlayerItem>"16q24q32q40
@"<MFQueuePlayerItem>"28@0:8@"<MFPlayerItem>"16B24
B32@0:8q16@"<MFQueuePlayerItem>"24
@48@0:8@16q24q32q40
@"ICRadioGetTracksResponse"
v36@0:8@16@24I32
@40@0:8@16@24I32I36
@"MPCPlaybackDelegationProperties"
@24@0:8#16
@"ICRadioPlaybackHistoryStore"
@"_MPCModelRadioPlaybackQueueStationTracksCollection"
@"ICMutableRadioPlaybackHistory"
v44@0:8@16@24{?=BBBB}32@?36
v52@0:8@16@24{?=BBBB}32@36@?44
@"MPCAssistantSendCommand"
@"MPCAssistantEndpointContext"
v40@0:8@16@24d32
v36@0:8f16@20d28
v52@0:8q16q24@32d40f48
v36@0:8d16@24f32
@"MPCModelRadioPlaybackQueue"
@"MPCModelRadioPlaybackContext"
@"MPCModelRadioPersonalizationResponse"
@"ICUserIdentityStore"
@"MPModelSharedListeningParticipant"
