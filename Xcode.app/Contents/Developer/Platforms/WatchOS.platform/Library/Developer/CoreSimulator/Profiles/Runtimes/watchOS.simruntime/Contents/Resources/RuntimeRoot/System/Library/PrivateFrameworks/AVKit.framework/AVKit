.AUUUUUU
interval
Td,R,V_interval
%@ is not a valid initializer. You must call -[%@ initWithTimeInterval:queue:block:repeats:].
com.apple.avkit.AVTimer.timer %p
com.apple.avkit.AVTimer.manage %p
playerController
T@"AVPlayerController",&,N
playerViewController
T@"AVPlayerViewController",W,N,V_playerViewController
showsDoneButton
TB,N,V_showsDoneButton
playing
TB,N,GisPlaying,V_playing
playPauseButtonEnabled
TB,N,GisPlayPauseButtonEnabled,V_playPauseButtonEnabled
showsStreamingControls
TB,N,V_showsStreamingControls
showsLiveStreamScrubber
TB,N,V_showsLiveStreamScrubber
showsScaleButton
TB,N,V_showsScaleButton
scaleButtonType
Tq,N,V_scaleButtonType
showsLoadingIndicator
TB,N,V_showsLoadingIndicator
showsMediaSelectionButton
TB,N,V_showsMediaSelectionButton
showsExitFullScreenButton
TB,N,V_showsExitFullScreenButton
showsPictureInPictureButton
TB,N,V_showsPictureInPictureButton
pictureInPictureButtonEnabled
TB,N,GisPictureInPictureButtonEnabled,V_pictureInPictureButtonEnabled
showsVolumeSlider
TB,N,V_showsVolumeSlider
metadata
T@"NSDictionary",&,N,V_metadata
playerController.volume
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_LABEL_TEXT
contentDuration
playerController.metadata
playerController.hasMediaSelectionOptions
playerController.hasSeekableLiveStreamingContent
playerController.hasLiveStreamingContent
playerController.canScanForward
playerController.canTogglePlayback
playerController.canScanBackward
playerController.playing
playerController.contentDurationWithinEndTimes
playerController.canSeek
com.apple.avkit
AVKit
%@ (%p) %@
hasContent
-[AVNowPlayingInfoController dealloc]
-[AVNowPlayingInfoController init]
audioOnlyContent
TB,N,GisAudioOnlyContent
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
playerController.atMaxTime
playerController.atMinTime
V:[volumeSlider]-(%f)-|
volumeSlider
H:|-(%f)-[volumeSlider]-(%f)-|
H:|-(4)-[metadataLabel]-(4)-|
metadataLabel
V:|-(margin)-[playbackProgressView]
margin
H:|-(1)-[playbackProgressView]-(1)-|
playbackProgressView
remainingTimeLabel
H:[remainingTimeLabel]-(%f)-|
doneButton
H:|-(%f)-[doneButton]
V:[vignetteLowerGradientView]|
H:|[vignetteLowerGradientView]|
vignetteLowerGradientView
V:|[vignetteUpperGradientView]
H:|[vignetteUpperGradientView]|
vignetteUpperGradientView
control-forward
control-rewind
PLAYBACK_CONTROLS_VIEW_CONTROLLER_DONE_BUTTON_TITLE
VignetteLowerGradient
VignetteUpperGradient
%@: %@
artist
-[AVWatchPlaybackControlsViewController dealloc]
-[AVWatchPlaybackControlsViewController initWithNibName:bundle:]
AVKitErrorDomain
AVKIT_ERROR_RECORDING_FAILED
v16@?0@"NSNotification"8
v32@?0@8@16@24
v48@?0@8@"NSString"16@24@32@"NSString"40
value
T@,R,N,V_value
oldValue
T@,R,N,V_oldValue
keyPath
T@"NSString",R,N,V_keyPath
observationToken
T@,R,N,V_observationToken
token
T@"NSString",R,N,V_token
includeInitialValue
TB,R,N,V_includeInitialValue
includeChanges
TB,R,N,V_includeChanges
keyPaths
T@"NSSet",R,N,V_keyPaths
changesBlock
T@?,R,N,V_changesBlock
-[AVDoneButton dealloc]
-[AVDoneButton initWithFrame:]
T@"AVPlayerViewController",R,W,N,V_playerViewController
T@"AVPlayerViewController",R,W,N
AVKitOwner
T@,W,N,V_AVKitOwner
behaviorsAndBehaviorContexts
T@"NSMapTable",R,N,V_behaviorsAndBehaviorContexts
v16@?0@8
v16@?0@"<AVBehaviorContext>"8
v16@?0@"<AVBehavior>"8
behaviorContext
T@,W,N
behavior
behaviors
T@"NSArray",R,N
-[AVButton dealloc]
-[AVButton initWithFrame:]
AV_compact
TB,R,N,GAV_isCompact
AVRemoteCommandControllerDidReceiveStopCommandEventNotification
canPause
canPlay
canTogglePlayback
canSeekChapterForward
canSeekChapterBackward
canSeek
canScanForward
canScanBackward
-[AVRemoteCommandController dealloc]
-[AVRemoteCommandController init]
startTime
Td,R,V_startTime
duration
Td,R,V_duration
number
TQ,R,V_number
title
T@"NSString",R,C,V_title
image
T@"UIImage",R,V_image
com.apple.AVKit.ChapterImageQueue
minTime
Td,V_minTime
maxTime
Td,V_maxTime
T@"<AVTimeControlling>",&
resolution
currentTime
AVResolution
AVInterval
AVPlayerController
playerController.minTime
playerController.minTiming
playerController.maxTime
playerController.maxTiming
playerController.timing
targetTime
targetTimeWithinEndTimes
remainingTargetTimeWithinEndTimes
Td,R
currentTimeWithinEndTimes
remainingTime
remainingTimeWithinEndTimes
seekableTimeRangeDuration
thirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
TB,R,GisThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
currentTimeAtEndOfSeekableTimeRanges
TB,R,GisCurrentTimeAtEndOfSeekableTimeRanges
playerController.seekableTimeRanges
playerController.contentDuration
playerController.seekToTime
playerController.seeking
playbackProgress
Td,N
-[AVPlaybackProgressIndicator dealloc]
-[AVPlaybackProgressIndicator initWithFrame:]
V:|[progressView]|
H:|[progressView]
progressView
V:|[trackView]|
H:|[trackView]|
trackView
V:|-(>=10)-[imageView]-(>=10)-|
H:|-(>=10)-[imageView]-(>=10)-|
imageView
UnsupportedContentIndicator
_behaviorStorage
T@"AVBehaviorStorage",R,N,V__behaviorStorage
readyForDisplay
TB,R,N,GisReadyForDisplay
delegate
T@"<AVPlayerViewControllerDelegate>",W,N
player
T@"AVPlayer",&,N
videoGravity
T@"NSString",C,N
_showsPlaybackControlsView
_playerLayerView
playerController.hasEnabledAudio
playerController.hasEnabledVideo
playerController.status
V:|[playbackControlsView]|
H:|[playbackControlsView]|
playbackControlsView
V:|[playerLayerView]|
H:|[playerLayerView]|
playerLayerView
V:|[unsupportedContentIndicatorView]|
H:|[unsupportedContentIndicatorView]|
unsupportedContentIndicatorView
%@ only supports AVPlayer instances that have been initialized with the main queue as the dispatch queue for serializing key-value observations.
-[AVPlayerViewController encodeWithCoder:]
AVVideoGravity
-[AVPlayerViewController initWithCoder:]
AVPlayerShouldAutoplay
AVPlayerAssetFilename
-[AVPlayerViewController dealloc]
-[AVPlayerViewController initWithNibName:bundle:]
_playerLayerView.readyForDisplay
_playerLayerView.videoGravity
playerController.player
playerLayer
T@"AVPlayerLayer",R,N
Tq,N
videoRect
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
videoScaled
TB,N,GisVideoScaled
-[__AVPlayerLayerView dealloc]
-[__AVPlayerLayerView initWithFrame:]
layer.videoRect
layer.readyForDisplay
layer.videoGravity
layer
anchorValue
Td,R,N
anchorTimeStamp
rate
*** -%@ only defined for abstract class.  Define %c[%@ %@]!
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
time stamp
Td,D,N
currentValue
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
-[AVVolumeSlider dealloc]
%@ is not a valid initializer. You must call -[%@ initWithFrame:].
-[AVVolumeSlider initWithFrame:]
VolumeDown
VolumeUp
state
outputURL
T@"NSURL",R,N,V_outputURL
actionTitle
T@"NSString",R,C,N,V_actionTitle
autorecord
TB,R,N,V_autorecord
alwaysShowActionTitle
TB,R,N,V_alwaysShowActionTitle
maximumDuration
Td,R,N,V_maximumDuration
settings
T@"NSDictionary",C,N,V_settings
T@"<AVAudioRecorderViewControllerDelegate>",W,N,V_delegate
PauseAuditionButton
PlayAuditionButton
StopRecordingButton
StartRecordingButton
AUDIO_RECORDER_VIEW_CONTROLLER_CANCEL_BUTTON_TITLE
-[AVAudioRecorderViewController dealloc]
-[AVAudioRecorderViewController initWithOutputURL:settings:autorecord:maximumRecordingDuration:actionTitle:alwaysShowActionTitle:]
AUDIO_RECORDER_VIEW_CONTROLLER_SAVE_BUTTON_TITLE
%@ does not support unarchiving from a nib.
%@ is not a valid initializer. You must call -[%@ initWithOutputURL:settings:maximumRecordingDuration:finishString:].
AVKit is playing audiovisual content. That prevents backlight dim and screen off.
-[AVTimeLabel dealloc]
-[AVTimeLabel initWithFrame:]
AC3Only
TB,R,GisAC3Only
main
TB,R,GisMain
TB,R,GisSDH
TB,R,GisCC
easyReader
TB,R,GisEasyReader
auxiliary
TB,R,GisAuxiliary
-[AVPlayerController(AVMediaSelection) _enableAutoMediaSelection:shouldUpdateUserPreference:]
-[AVPlayerController(AVMediaSelection) _disableLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) legibleOptions]
q24@?0@8@16
-[AVPlayerController(AVMediaSelection) audioOptions]
player.appliesMediaSelectionCriteriaAutomatically
-[AVPlayerController(AVMediaSelection) setLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) setAudioMediaSelectionOptions:]
legibleMediaSelectionOptions
audioMediaSelectionOptions
hasLegibleMediaSelectionOptions
hasAudioMediaSelectionOptions
-[AVLabel dealloc]
-[AVLabel initWithFrame:]
TB,N,GisPlaying
PlayButton
PauseButton
-[AVPlayPauseButton dealloc]
-[AVPlayPauseButton initWithFrame:]
localizedDisplayName
T@"NSString",R,N
shortLocalizedDisplayName
mediaRemoteIdentifier
avkit_offOption
T@"AVMediaSelectionOption",R
avkit_autoOption
%@-%@-%@
MEDIA_SELECTION_OPTION_AUTO_TITLE
MEDIA_SELECTION_OPTION_OFF_TITLE
Td,N,V_currentTime
recording
TB,N,GisRecording,V_recording
dataSource
T@"<AVWaveformViewDataSource>",W,N,V_dataSource
AVPlayerControllerCurrentTimeJumpedNotification
AVPlayerControllerPlaybackDidEndNotification
AVPlayerControllerContentDimensionsChangedNotification
AVPlayerControllerSelectedMediaOptionDidChangeNotification
AVPlayerControllerDidSeekChapterNotification
AVPlayerControllerDidSeekChapterChapterKey
atMaxTime
TB,N,GisAtMaxTime,V_atMaxTime
atMinTime
TB,N,GisAtMinTime,V_atMinTime
scrubbing
TB,N,GisScrubbing,V_scrubbing
T@"AVPlayer",&,N,V_player
status
Tq,N,V_status
observationController
T@"AVObservationController",R,N,V_observationController
presentationSize
T{CGSize=dd},N,V_presentationSize
currentAssetIfReady
T@"AVAsset",&,N,V_currentAssetIfReady
assetInspectionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assetInspectionQueue
assetBeingPrepared
T@"AVAsset",&,N,V_assetBeingPrepared
pictureInPictureSupported
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
readyToPlay
TB,R,N,GisReadyToPlay
timing
T@"AVValueTiming",&,N,V_timing
minTiming
T@"AVValueTiming",&,N,V_minTiming
maxTiming
T@"AVValueTiming",&,N,V_maxTiming
currentAudioTrack
T@"AVAssetTrack",&,N,V_currentAudioTrack
seekingInternal
TB,GisSeekingInternal,V_seekingInternal
seeking
TB,N,GisSeeking,V_seeking
seekToTimeInternal
T{?=qiIq},V_seekToTimeInternal
seekToTime
Td,N,V_seekToTime
contentChapters
T@"NSArray",&,N,V_contentChapters
composable
TB,N,GisComposable,V_composable
hasProtectedContent
TB,N,V_hasProtectedContent
availableMetadataFormats
T@"NSArray",&,N,V_availableMetadataFormats
compatibleWithAirPlayVideo
TB,N,GisCompatibleWithAirPlayVideo,V_compatibleWithAirPlayVideo
rateBeforeScrubBegan
Td,N,V_rateBeforeScrubBegan
preventingIdleSystemSleep
TB,N,GisPreventingIdleSystemSleep,V_preventingIdleSystemSleep
preventingIdleDisplaySleep
TB,N,GisPreventingIdleDisplaySleep,V_preventingIdleDisplaySleep
disablingAutomaticTermination
TB,N,GisDisablingAutomaticTermination,V_disablingAutomaticTermination
allowsPictureInPicturePlayback
TB,N,V_allowsPictureInPicturePlayback
pictureInPictureActive
TB,N,GisPictureInPictureActive,V_pictureInPictureActive
canTogglePictureInPicture
TB,N,V_canTogglePictureInPicture
hasBegunInspection
TB,N,V_hasBegunInspection
deviceBatteryChargingOrFull
TB,N,GisDeviceBatteryChargingOrFull,V_deviceBatteryChargingOrFull
shouldPreventIdleDisplaySleep
TB,R,N
seekTimer
T@"NSObject<OS_dispatch_source>",R,N,V_seekTimer
currentDate
T@"NSDate",R,N
currentOrEstimatedDate
defaultPlaybackRate
Td,N,V_defaultPlaybackRate
touchBarRequiresLinearPlayback
TB,N,V_touchBarRequiresLinearPlayback
error
T@"NSError",R,N
v8@?0
availableTrackAssociationTypes
mediaCharacteristics
extendedLanguageTag
mediaType
languageCode
enabled
nominalFrameRate
assetCache
tracks
availableVideoDynamicRanges
availableChapterLocales
availableMediaCharacteristicsWithMediaSelectionOptions
streaming
commonMetadata
-[AVPlayerController _updateRateForScrubbingAndSeeking]
-[AVPlayerController updateMinMaxTiming]
-[AVPlayerController seekOrStepByFrameCount:]
-[AVPlayerController actuallySeekToTime]
v12@?0B8
com.apple.motion.notserializable
-[AVPlayerController setVolume:]
-[AVPlayerController setPlaying:]
v16@?0d8
-[AVPlayerController setRate:]_block_invoke
player.externalPlaybackActive
player.rate
player.currentItem.loadedTimeRanges
player.currentItem.playbackBufferEmpty
player.currentItem.playbackLikelyToKeepUp
timeControlStatus
hasLiveStreamingContent
player.currentItem.seekableTimeRanges
q24@?0@"AVChapter"8@"AVChapter"16
player.currentItem
-[AVPlayerController _queuePlayer]
v32@?0@"AVPlayerController"8@16@"AVKeyValueChange"24
player.currentItem.status
player.status
v16@?0@"AVPlayerController"8
currentAudioMediaSelectionOption
hasEnabledAudio
player.currentItem.duration
player.currentItem.asset
contentDimensions
player.currentItem.presentationSize
-[AVPlayerController dealloc]
v32@?0@"AVPlayerController"8@16@"NSNotification"24
B8@?0
v32@?0{?=qiIq}8
-[AVPlayerController initWithPlayer:]
com.apple.avkit.playerControllerAssetInspectionQueue
com.apple.avkit.seekQueue
playingOnExternalScreen
hasEnabledVideo
hasVideo
externalPlaybackType
player.airPlayVideoActive
externalPlaybackActive
player.allowsExternalPlayback
player.currentItem.canPlayFastReverse
player.currentItem.canPlayFastForward
hasSeekableLiveStreamingContent
seekableTimeRanges
player.timeControlStatus
completelySeekable
player.currentItem.seekableTimeRangesLastModifiedTime
player.currentItem.liveUpdateInterval
player.currentItem.hasEnabledVideo
player.currentItem.hasVideo
player.currentItem.hasEnabledAudio
player.currentItem.forwardPlaybackEndTime
forwardPlaybackEndTime
player.currentItem.reversePlaybackEndTime
reversePlaybackEndTime
player.muted
player.volume
player.error
playingOnSecondScreen
TB,N,GisPlayingOnSecondScreen
usesExternalPlaybackWhileExternalScreenIsActive
maximumVideoResolution
T{CGSize=dd},R,N
TB,N
-[AVPlayerController(AVPlayerControllerExternalPlaybackSupportInternal) setHandlesAudioSessionInterruptions:]
handlesAudioSessionInterruptions
player.usesExternalPlaybackWhileExternalScreenIsActive
PlayerController has live streaming content changed: %d
PlayerController has seekable live streaming content changed: %d
PlayerController has media selection options changed: %d
You must call -[AVObservationController stopAllObservation] before destroying it, perhaps in its owner's dealloc. %@
%s %d %p
Selected option: %{public}@ forMediaCharacteristic: %@
mediaOption: %{public}@ mediaCharacteristic: %{public}@
%s %d
%s legibleOptions: %{public}@
%s filtereLegibleList: %{public}@
%s audibleOptions: %{public}@
%s filteredOptions: %{public}@
%s LegibleMediaSelectionOptions: %{public}@
%s AudioMediaSelectionOptions: %{public}@
*** %s must be called on main thread. ***
Calls to -[AVPlayerController stopUsingNetworkResourcesForLiveStreamingWhilePaused] must be counterbalanced with calls to -[AVPlayerController startUsingNetworkResourcesForLiveStreamingWhilePaused].
Modifying seekableTimeRange by: %f
segmentDuration: %f
minTimingNeedsUpdate: %d, new minTiming with minTime: %f, rate: %f, old minTime: %f, delta: %f
maxTimingNeedsUpdate: %d, new maxTiming with maxTime: %f old maxTime: %f, delta: %f
%s stepByCount: %ld
%s sampleBasedSeekTarget: %f
%s skipInterval: %f
%s time: %f toleranceBefore: %f toleranceAfter: %f
Seek completed: %s
Scrubbing Ended
Scrubbing Started
%s %f
Can play immediately: %d
Retrying play immediately.
Calling playImmediatelyAtRate: %f
Could not play immediately, setting a play immediately retry block.
%s %.1f on %p
%s immediately %.1f on %p
PlayerItemDidChange
New playerItem: <%{public}@: %p>
New asset: <%{public}@: %p>
SeekableTimeRanges changed {%f, %f} -> {%f, %f}.
liveStreamEventModePossible: %d
Time control status = %ld
Playback likely to keep up changed to: %@
isPlaybackBufferEmpty: %d
Rate changed to: %f
Setting prevent idle display sleep to YES
Setting prevent idle display sleep to NO
Failed to handle %@ %@
%s queuePlayer: %d
AVAudioSessionInterruptionTypeBegan: %f
AVAudioSessionInterruptionTypeEnded: %f
%s player: %p
%s %s %s
zPLR
AVTimer
AVPlaybackControlsViewController
AVNowPlayingInfoController
AVAdditions
AVWatchPlaybackControlsViewController
PUICSliderDelegate
NSObject
AVObservationController
AVKeyValueChange
AVProxyKVOObserver
AVDoneButton
AVDefaultBehaviorContext
AVBehaviorContext
AVBehaviorStorage
AVBehaviorInternal
AVBehavior
AVBehaviorContextInternal
AVBehaviorSupport
AVButton
AVRemoteCommandController
AVChapter
NSCopying
AVPlayerControllerTimeResolver
NSCoding
TimeObserverAdditions
AVPlaybackProgressIndicator
AVUnsupportedContentIndicatorView
AVPlayerViewController
AVPlaybackControlsViewControllerVisibility
AVPlaybackControlsViewControllerActions
AVPlayerViewController_WebKitOnly
__AVPlayerLayerView
AVValueTiming
NSMutableCopying
AVMutableValueTiming
AVConcreteMutableValueTiming
AVConcreteValueTiming
AVValueTimingCreation
AVExtendedValueTiming
AVExtendedMutableValueTiming
AVVolumeSlider
AVAudioRecorderViewController
AVWaveformViewDataSource
AVAudioRecorderDelegate
AVAudioPlayerDelegate
_AVBacklightAssertion
AVTimeLabel
AVMediaSelection
AVPlayerController
_AVBundle
AVLabel
AVPlayPauseButton
AVWaveformView
AVPlayerControllerExternalPlaybackSupportInternal
_queue
_timer
_invalidated
_interval
initWithTimeInterval:queue:block:repeats:
init
dealloc
invalidate
.cxx_destruct
interval
raise:format:
UTF8String
stringWithFormat:
_playerController
_intervalTimeResolver
_resolutionTimeResolver
_elapsedTimeFormatter
_remainingTimeFormatter
_AVSystemControllerCurrentRouteHasVolumeControlDidChangeObserver
_viewAppeared
_showsDoneButton
_playing
_playPauseButtonEnabled
_showsStreamingControls
_showsLiveStreamScrubber
_showsScaleButton
_showsLoadingIndicator
_showsMediaSelectionButton
_showsExitFullScreenButton
_showsPictureInPictureButton
_pictureInPictureButtonEnabled
_showsVolumeSlider
_playerViewController
_scaleButtonType
_metadata
initWithNibName:bundle:
playerController
setPlayerController:
viewDidLoad
viewDidAppear:
viewDidDisappear:
observeValueForKeyPath:ofObject:change:context:
_updateElapsedTimeLabel
_updateRemainingTimeLabel
_updatePlaybackProgress
_updateVolumeSliderVisibility
_userInteractionObservationControlTouchDown:
_userInteractionObservationControlTouchUp:
updatePlaybackControlsEnabledStates
updateElapsedTimeLabel:
updateRemainingTimeLabel:
updatePlaybackProgress:
updateVolumeSliderValue:
addControlForUserInteractionObservation:
removeControlForUserInteractionObservation:
doneButtonTapped:
scaleButtonTapped:
volumeSliderValueChanged:
skipBackwardThirtySeconds:
seekChapterBackward:
beginScanningBackward:
endScanningBackward:
togglePlayback:
beginScanningForward:
endScanningForward:
seekChapterForward:
gotoEndOfSeekableRanges:
mediaSelectionButtonTapped:
fullScreenButtonTapped:
pictureInPictureButtonTapped:
playerViewController
setPlayerViewController:
showsDoneButton
setShowsDoneButton:
isPlaying
setPlaying:
isPlayPauseButtonEnabled
setPlayPauseButtonEnabled:
showsStreamingControls
setShowsStreamingControls:
showsLiveStreamScrubber
setShowsLiveStreamScrubber:
showsScaleButton
setShowsScaleButton:
scaleButtonType
setScaleButtonType:
showsLoadingIndicator
setShowsLoadingIndicator:
showsMediaSelectionButton
setShowsMediaSelectionButton:
showsExitFullScreenButton
setShowsExitFullScreenButton:
showsPictureInPictureButton
setShowsPictureInPictureButton:
isPictureInPictureButtonEnabled
setPictureInPictureButtonEnabled:
showsVolumeSlider
setShowsVolumeSlider:
metadata
setMetadata:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
isViewLoaded
removeTarget:action:forControlEvents:
addTarget:action:forControlEvents:
stringFromSeconds:
setFormatTemplate:
setStyle:
count
addObserverForName:object:queue:usingBlock:
mainQueue
sharedAVSystemController
defaultCenter
removeObserver:
rangeOfString:
substringFromIndex:
substringToIndex:
_playerControllerCurrentTimeJumpedObserver
_nowPlayingInfoNeedsUpdate
_setNowPlayingInfoNeedsUpdate
_updateNowPlayingInfoIfNeeded
_updateNowPlayingInfo
setNowPlayingInfo:
numberWithDouble:
initWithImage:
setObject:forKeyedSubscript:
objectForKeyedSubscript:
dictionary
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
object
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setPriority:
AV_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:
setActive:
AV_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:active:
layer
setMasksToBounds:
setShadowPathIsBounds:
setShadowRadius:
setCornerRadius:
AV_setBackgroundBackgroundColor:
AV_setCornerRadius:
CGColor
setShadowColor:
setShadowOffset:
setShadowOpacity:
_metadataLabelText
_audioOnlyContent
_remainingTimeLabelText
_playbackProgress
_volumeSliderValue
_doneButton
_remainingTimeLabel
_playbackProgressIndicator
_seekBackwardButton
_playPauseButton
_seekForwardButton
_metadataLabel
_volumeSlider
_playPauseButtonAudioOnlyContentLayoutConstraint
slider:didTapTouchTarget:
sliderDidBeginCrownInteraction:
sliderDidEndCrownInteraction:
sliderDidRequestFocus:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
isAudioOnlyContent
setAudioOnlyContent:
loadView
prefersStatusBarHidden
viewWillAppear:
viewWillDisappear:
willMoveToParentViewController:
didMoveToParentViewController:
_seekBackwardButtonTapped:
_seekForwardButtonTapped:
_volumeSliderValueChanged:
setEnabled:
presentingViewController
resignFirstResponder
becomeFirstResponder
defaultPUICStatusBarFontBaseLine
dictionaryWithObjects:forKeys:count:
activateConstraints:
constraintsWithVisualFormat:options:metrics:views:
setValue:
setTextAlignment:
setImage:forState:
transportControlsAddTimeIntervalForSkipImage:
setHidden:
setText:
setTitle:forState:
addSubview:
setTranslatesAutoresizingMaskIntoConstraints:
setImage:
imageNamed:inBundle:compatibleWithTraitCollection:
setView:
setValue:animated:
transitionWithView:duration:options:animations:completion:
view
setEnabled:animated:
_setupLayoutSpec
drawAtPoint:withAttributes:
sizeWithAttributes:
localizedStringFromNumber:numberStyle:
numberWithInt:
colorWithWhite:alpha:
systemFontOfSize:weight:
drawAtPoint:
size
puic_deviceVariant
currentDevice
errorWithDomain:code:userInfo:
_unfairLock
_proxyObserversByTokens
_notificationObservers
_notificationCenters
_owner
initWithOwner:
startObserving:keyPaths:includeInitialValue:includeChanges:observationHandler:
startObserving:keyPath:includeInitialValue:observationHandler:
startObserving:keyPaths:observationHandler:
startObserving:keyPath:observationHandler:
startObserving:keyPaths:includeInitialValue:observationHandler:
startObservingNotificationForName:object:notificationCenter:observationHandler:
stopObserving:
stopAllObservation
_stopAllObservation
allKeys
stopObserving
countByEnumeratingWithState:objects:count:
removeAllObjects
allValues
removeObjectForKey:
initWithName:object:userInfo:
userInfo
name
isMainThread
copy
arrayWithObjects:count:
token
startObserving:completion:
initWithObservedObject:observer:keyPaths:retainingObservedObject:includeInitialValue:includeChanges:changesBlock:
initWithValue:oldValue:keyPath:observationToken:
_value
_oldValue
_keyPath
_observationToken
value
oldValue
keyPath
observationToken
null
_retainedObservedObject
_unsafeUnretainedObservedObject
_canHandleChanges
_includeInitialValue
_includeChanges
_token
_keyPaths
_changesBlock
_handleValueChangeForKeyPath:ofObject:oldValue:newValue:context:
includeInitialValue
includeChanges
keyPaths
changesBlock
valueForKeyPath:
anyObject
globallyUniqueString
processInfo
setWithArray:
initWithFrame:
_titleBaselineOffsetFromBoundsTop
_firstLineBaselineOffsetFromBoundsTop
frame
titleLabel
setFont:
defaultPUICStatusBarFont
systemGrayTextColor
setTitleColor:forState:
whiteColor
colorWithRed:green:blue:alpha:
systemGrayColor
AV_indicatorBackgroundColor
AV_indicatorForegroundColor
initWithAVKitOwner:
_AVKitOwner
_behaviorsAndBehaviorContexts
behaviors
addBehavior:
removeBehavior:
enumerateAllBehaviorsUsingBlock:
enumerateAllBehaviorsConformingToProtocol:usingBlock:
behaviorOfClass:
enumerateAllBehaviorContextsUsingBlock:
enumerateAllBehaviorContextsConformingToProtocol:usingBlock:
enumerateAllBehaviorContextsImplementingSelector:forProtocol:usingBlock:
behaviorContextOfClass:
AVKitOwner
setAVKitOwner:
behaviorsAndBehaviorContexts
objectEnumerator
keyEnumerator
didRemoveBehavior:
setBehaviorContext:
behaviorContextClass
behaviorContext
willMoveToContext:
setBehavior:
willRemoveBehavior:
willAddBehavior:
didAddBehavior:
behavior
objectForKey:
setObject:forKey:
alloc
allObjects
strongToStrongObjectsMapTable
buttonWithType:
setHighlighted:
alignmentRectInsets
animateWithDuration:animations:
setTransform:
setAlpha:
isHighlighted
setAdjustsImageWhenHighlighted:
setAdjustsImageWhenDisabled:
AV_isCompact
_handleRemoteCommandEvent:
_updateRegisteredRemoteCommandEnabledStates
changePlaybackPositionCommand
changePlaybackRateCommand
seekBackwardCommand
seekForwardCommand
skipBackwardCommand
skipForwardCommand
previousTrackCommand
nextTrackCommand
togglePlayPauseCommand
stopCommand
playCommand
pauseCommand
sharedCommandCenter
positionTime
playbackRate
type
postNotificationName:object:
command
removeTarget:action:
addTarget:action:
_image
_imageBlock
_startTime
_duration
_number
_title
copyWithZone:
initWithStartTime:duration:number:title:imageFaultBlock:
startTime
duration
number
title
image
isEqualToString:
didChangeValueForKey:
initWithCGImage:
willChangeValueForKey:
initialize
playbackChapterWithStartTime:duration:number:title:imageFaultBlock:
chapterAtTime:inChapters:
objectAtIndexedSubscript:
_resolution
_currentTime
_minTime
_maxTime
encodeWithCoder:
initWithCoder:
setInterval:
resolution
setResolution:
currentTime
setCurrentTime:
minTime
setMinTime:
maxTime
setMaxTime:
seekableTimeRangeDuration
encodeDouble:forKey:
encodeObject:forKey:
decodeDoubleForKey:
decodeObjectForKey:
automaticallyNotifiesObserversOfCurrentTime
CMTimeRangeValue
targetTimeWithinEndTimes
setTargetTimeWithinEndTimes:
remainingTargetTimeWithinEndTimes
currentTimeWithinEndTimes
setCurrentTimeWithinEndTimes:
remainingTime
remainingTimeWithinEndTimes
isThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
isCurrentTimeAtEndOfSeekableTimeRanges
keyPathsForValuesAffectingTargetTime
keyPathsForValuesAffectingTargetTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTargetTimeWithinEndTimes
keyPathsForValuesAffectingCurrentTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTime
keyPathsForValuesAffectingRemainingTimeWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRangeDuration
keyPathsForValuesAffectingThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
keyPathsForValuesAffectingCurrentTimeAtEndOfSeekableTimeRanges
setWithObjects:
targetTime
setTargetTime:
URLForResource:withExtension:
stringByDeletingPathExtension
checkResourceIsReachableAndReturnError:
imageForResource:size:
URLForMovieResource:
dataWithContentsOfURL:
imageWithData:
pathExtension
length
_progressViewWidthLayoutConstraint
playbackProgress
setPlaybackProgress:
setPlaybackProgress:animated:
setBounds:
updateConstraints
intrinsicContentSize
_updateProgressViewWidthLayoutConstraintWithPlaybackProgress:animated:
setConstant:
constant
bounds
setNeedsUpdateConstraints
setBackgroundColor:
_imageView
addConstraints:
addConstraint:
_flatImageWithColor:
imageNamed:inBundle:
setContentMode:
_playerShouldAutoplay
_videoGravity
_nowPlayingInfoController
_remoteCommandController
_unsupportedContentIndicatorView
_playerLayerView
_playbackControlsViewController
_playbackControlsViewVisibilityNeedsUpdate
_playbackControlsViewVisibilityCounter
_playbackControlsViewVisibilityTimer
_isShowingPlaybackControlsViewForUserInteraction
_isShowingPlaybackControlsViewAfterUserInteraction
_isShowingPlaybackControlsViewForUnsupportedContent
_isShowingPlaybackControlsViewForAudioOnlyContent
_showsPlaybackControlsView
_delegate
_delegateRespondsTo
__behaviorStorage
player
setPlayer:
videoGravity
setVideoGravity:
isReadyForDisplay
delegate
setDelegate:
_ensureBehaviorStorage
childViewControllerForStatusBarHidden
canBecomeFirstResponder
_isUnsupportedContent
_updateUnsupportedContentIndicatorView
_isAudioOnlyContent
_updatePlaybackControlsViewVisibilityForUnsupportedContent
_updatePlaybackControlsViewVisibilityForAudioOnlyContent
_handleDoubleTapGesture:
_handleSingleTapGesture:
_showPlaybackControlsViewIfNeeded
_hidePlaybackControlsViewIfPossible
_hidePlaybackControlsViewIfPossibleAfterDelayIfPlaying
_hidePlaybackControlsViewIfPossibleAfterDelayIfPlayingWithDelay:
_showPlaybackControlsViewIfNeededAndHideIfPossibleAfterDelayIfPlaying
_showPlaybackControlsViewIfNeededAndHideIfPossibleAfterDelayIfPlayingWithDelay:
_firePlaybackControlsViewVisibilityTimer:
_hidePlaybackControlsViewIfPossibleUntilFurtherUserInteraction
_setPlaybackControlsViewVisibilityNeedsUpdate
_updatePlaybackControlsViewVisibilityIfNeeded
_showOrHidePlaybackControlsView
_behaviorStorage
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
boolValue
setNeedsStatusBarAppearanceUpdate
requireGestureRecognizerToFail:
addGestureRecognizer:
setNumberOfTapsRequired:
initWithTarget:action:
addChildViewController:
setClipsToBounds:
blackColor
playerViewControllerShouldHandleDoneButtonTap:
dispatchQueue
encodeInteger:forKey:
decodeIntegerForKey:
decodeBoolForKey:
playerWithURL:
mainBundle
containsValueForKey:
keyPathsForValuesAffectingPlayer
keyPathsForValuesAffectingVideoGravity
keyPathsForValuesAffectingReadyForDisplay
setWithObject:
showPlaybackControlsViewForTouchDown
hidePlaybackControlsViewForTouchUp
showPlaybackControlsViewForVolumeChange
dismissViewControllerAnimated:completion:
initWithPlayerLayerView:
playerLayer
videoRect
isVideoScaled
setVideoScaled:
layerClass
keyPathsForValuesAffectingPlayerLayer
keyPathsForValuesAffectingVideoRect
keyPathsForValuesAffectingVideoScaled
mutableCopyWithZone:
classForCoder
_timing
anchorValue
anchorTimeStamp
rate
initWithAnchorValue:anchorTimeStamp:rate:
initWithValueTiming:
allocWithZone:
setAnchorValue:
setAnchorTimeStamp:
setRate:
_timeStamp
_rate
isEqualToValueTiming:
valueTimingWithAnchorValue:anchorTimeStamp:rate:
systemUptime
currentTimeStamp
valueForTimeStamp:
currentValue
timeStampForValue:
setValueTiming:
initWithSliderStyle:
gestureRecognizerShouldBegin:
setTintColor:
systemOrangeColor
setShouldFadeAccessoryImages:
setNumberOfSteps:
setMinimumValueImage:
setMaximumValueImage:
_audioRecorder
_audioPlayer
_waveformView
_timeLabel
_cancelButton
_saveButton
_recorderButton
_timeFormatter
_displayedTime
_state
_stateToSetAfterInterruption
_audioSessionInterruptionObserver
_applicationWillResignActiveObserver
_autorecord
_alwaysShowActionTitle
_outputURL
_actionTitle
_maximumDuration
_settings
waveformViewPowerForCurrentTime:
audioRecorderDidFinishRecording:successfully:
audioRecorderEncodeErrorDidOccur:error:
audioRecorderBeginInterruption:
audioRecorderEndInterruption:withOptions:
audioRecorderEndInterruption:withFlags:
audioRecorderEndInterruption:
audioPlayerDidFinishPlaying:successfully:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerBeginInterruption:
audioPlayerEndInterruption:withOptions:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:
initWithOutputURL:settings:autorecord:maximumRecordingDuration:actionTitle:alwaysShowActionTitle:
initWithOutputURL:settings:
initWithOutputURL:settings:maximumRecordingDuration:finishString:
viewWillLayoutSubviews
recorderButtonPressed
state
setState:
cancel
save
_startRecording
_recordingDidStop
_failureWithError:
_disableUserIdleDisplaySleep
_enableUserIdleDisplaySleep
outputURL
actionTitle
autorecord
alwaysShowActionTitle
maximumDuration
settings
setSettings:
averagePowerForChannel:
updateMeters
audioRecorderViewControllerRequestsBacklightAssertionRelease:
audioRecorderViewControllerRequestsBacklightAssertionCreate:
audioRecorderViewController:didFailWithError:
initWithContentsOfURL:error:
audioRecorderViewControllerDidStart:
record
setMeteringEnabled:
setInstantaneousMetering:
initWithURL:settings:error:
audioRecorderViewControllerDidFinish:
audioRecorderViewControllerDidCancel:
stop
play
pause
setActive:error:
setCategory:error:
setFrame:
sizeThatFits:
userInterfaceLayoutDirectionForSemanticContentAttribute:
semanticContentAttribute
setTextColor:
pointSize
font
unsignedIntegerValue
setFullWidth:
fontDescriptor
fontAttributes
floatValue
fontWithDescriptor:size:
fontWithName:size:
timeFontWithFont:
systemFontOfSize:
boldSystemFontOfSize:
italicSystemFontOfSize:
monospacedDigitSystemFontOfSize:weight:
timeFontWithName:size:
timeFontOfSize:
boldTimeFontOfSize:
italicTimeFontOfSize:
monospacedTimeFontOfSize:
fontDescriptorByAddingAttributes:
_backlightAssertion
_takeAssertion
_releaseAssertion
tickle
initWithReason:forDisplay:willPreventScreenOff:willPreventGestures:timeoutSeconds:timeoutBlock:
sharedInstance
takeAssertion
releaseAssertion
hasAudioMediaSelectionOptions
hasLegibleMediaSelectionOptions
isAC3Only
addObject:
arrayWithArray:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
arrayByAddingObjectsFromArray:
isCC
extendedLanguageTag
isAuxiliary
isEasyReader
isSDH
isMain
selectMediaOptionAutomaticallyInMediaSelectionGroup:
selectMediaOption:inMediaSelectionGroup:
hasMediaSelectionOptions
keyPathsForValuesAffectingCurrentAudioMediaSelectionOption
keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption
toggleCaptions
enableAutomaticCaptionDisplayTypeIfNeeded
selectedMediaOptionMayHaveChanged
_selectedMediaOptionWithMediaCharacteristic:
reloadOptions
reloadAudioOptions
reloadLegibleOptions
keyPathsForValuesAffectingHasMediaSelectionOptions
keyPathsForValuesAffectingHasAudioMediaSelectionOptions
keyPathsForValuesAffectingHasLegibleMediaSelectionOptions
mediaSubTypes
unsignedIntValue
mediaType
autoupdatingCurrentLocale
localeIdentifier
containsObject:
canonicalLanguageIdentifierFromString:
locale
displayName
localizedCaseInsensitiveCompare:
audioFormats
integerValue
_setMediaOption:mediaCharacteristic:
legibleMediaSelectionOptions
hasMediaCharacteristic:
appliesMediaSelectionCriteriaAutomatically
currentItem
mediaSelectionGroupForMediaCharacteristic:
currentMediaSelection
selectedMediaOptionInMediaSelectionGroup:
_disableLegibleMediaSelectionOptions:
_enableAutoMediaSelection:
setSavedCaptionAppearanceDisplayType:
savedCaptionAppearanceDisplayType
currentLegibleMediaSelectionOption
options
propertyList
setCurrentLegibleMediaSelectionOption:
setCurrentAudioMediaSelectionOption:
audioMediaSelectionOptions
audioOptions
legibleOptions
setAudioMediaSelectionOptions:
setLegibleMediaSelectionOptions:
_enableAutoMediaSelection:shouldUpdateUserPreference:
currentAudioMediaSelectionOption
_optionsForGroup:
playableMediaSelectionOptionsFromArray:
languageCompare:
sortedArrayUsingComparator:
array
bundle
bundleForClass:
localizedStringForKey:value:table:
setImageEdgeInsets:
avkit_title
commonMetadata
metadataItemsFromArray:filteredByIdentifier:
firstObject
stringValue
shortLocalizedDisplayName
mediaRemoteIdentifier
avkit_offOption
avkit_autoOption
localizedDisplayName
_isCompact
_samples
_timeOfLastSample
_recording
_dataSource
reset
setRecording:
drawRect:
_originForTime:
_offsetForTime:
_pointsPerSecond
_numberOfSamplesForWidth:
isRecording
dataSource
setDataSource:
setNeedsDisplay
numberWithFloat:
_jKeyDown
_kKeyDown
_lKeyDown
_audioMediaSelectionOptions
_legibleMediaSelectionOptions
_cachedSelectedAudioMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOption
_savedCaptionAppearanceDisplayType
_alwaysWantsAutomaticMediaOptionSelection
_seekQueue
_ignoreRateKeyValueChange
_observationInfo
_inspectionSuspended
_updateAtMinMaxTimePeriodicObserverToken
_timecodePeriodicObserverToken
_pictureInPictureInterrupted
_handlesAudioSessionInterruptions
_isDeallocating
_rateToRestoreAfterAudioSessionInterruptionEnds
_retryPlayingImmediatelyBlock
_shouldPlayImmediately
_looping
_actionAtItemEnd
_pendingSeek
_toleranceBefore
_toleranceAfter
_isScanningForward
_isScanningBackward
_scanningCount
_preScanningRate
_liveStreamMinTiming
_liveStreamMaxTiming
_liveStreamEventModePossible
_canUseNetworkResourcesForLiveStreamingWhilePausedCount
_previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused
_shouldPlayWhenLikelyToKeepUp
_deviceBatteryStateDidChangeObserver
_deviceBatteryMonitoringWasEnabled
_playingOnSecondScreen
_atMaxTime
_atMinTime
_scrubbing
_pictureInPictureSupported
_seekingInternal
_seeking
_composable
_hasProtectedContent
_compatibleWithAirPlayVideo
_preventingIdleSystemSleep
_preventingIdleDisplaySleep
_disablingAutomaticTermination
_allowsPictureInPicturePlayback
_pictureInPictureActive
_canTogglePictureInPicture
_hasBegunInspection
_deviceBatteryChargingOrFull
_touchBarRequiresLinearPlayback
_player
_status
_observationController
_currentAssetIfReady
_assetInspectionQueue
_assetBeingPrepared
_minTiming
_maxTiming
_currentAudioTrack
_seekToTime
_contentChapters
_availableMetadataFormats
_rateBeforeScrubBegan
_seekTimer
_defaultPlaybackRate
_presentationSize
_seekToTimeInternal
initWithPlayer:
startInspectionIfNeeded
startKVO
observationInfo
setObservationInfo:
_queuePlayer
_updateStatus
isReadyToPlay
error
isCompletelySeekable
shouldPreventIdleDisplaySleep
_observeValueForKeyPath:oldValue:newValue:
_retryPlayImmediatelyIfNeeded
canPlayImmediately
canPlay
play:
autoplay:
canPause
pause:
canTogglePlayback
togglePlaybackEvenWhenInBackground:
setTouchBarRequiresLinearPlayback:
isLooping
setLooping:
updateAtMinMaxTime
volume
setVolume:
increaseVolume:
decreaseVolume:
changeVolumeToMinimum:
changeVolumeToMaximum:
isMuted
setMuted:
toggleMuted:
isInspectionSuspended
setInspectionSuspended:
hasContent
contentDuration
nominalFrameRate
contentDimensions
reversePlaybackEndTime
setReversePlaybackEndTime:
forwardPlaybackEndTime
setForwardPlaybackEndTime:
_setMinTiming:maxTiming:
contentDurationWithinEndTimes
currentDate
currentOrEstimatedDate
seekableTimeRanges
loadedTimeRanges
hasEnabledAudio
hasVideo
hasEnabledVideo
hasContentChapters
isStreaming
hasLiveStreamingContent
hasSeekableLiveStreamingContent
hasTrimmableContent
hasShareableContent
_assetIsRestrictedFromSaving:
audioWaveform
_assetIsMarkedNotSerializable:
_assetContainsProResRaw:
_updateCurrentAudioTrackIfNeeded
timeControlStatus
canSeek
seekToTime:
beginScrubbing
endScrubbing
seekToTime:toleranceBefore:toleranceAfter:
seekToCMTime:toleranceBefore:toleranceAfter:
throttledSeekToTime:toleranceBefore:toleranceAfter:
actuallySeekToTime
seekByTimeInterval:
seekByTimeInterval:toleranceBefore:toleranceAfter:
canScanForward
scanForward:
_updateScanningForwardRate
canScanBackward
scanBackward:
_updateScanningBackwardRate
canSeekToBeginning
seekToBeginning:
canSeekToEnd
seekToEnd:
canSeekFrameForward
seekFrameForward:
canSeekFrameBackward
seekFrameBackward:
seekOrStepByFrameCount:
beginScrubbing:
endScrubbing:
seekToChapter:
canSeekChapterForward
canSeekChapterBackward
updateTiming
updateMinMaxTiming
allowsExternalPlayback
setAllowsExternalPlayback:
isPlayingOnExternalScreen
isPlayingOnSecondScreen
isExternalPlaybackActive
externalPlaybackType
externalPlaybackAirPlayDeviceLocalizedName
isPictureInPicturePossible
isPictureInPictureInterrupted
setPictureInPictureInterrupted:
togglePictureInPicture:
startUsingNetworkResourcesForLiveStreamingWhilePaused
stopUsingNetworkResourcesForLiveStreamingWhilePaused
canUseNetworkResourcesForLiveStreamingWhilePaused
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
_timecodeTrack
_cancelPendingSeeksIfNeeded
_updateRateForScrubbingAndSeeking
scanningDelays
_prepareAssetForInspectionIfNeeded
status
setStatus:
isAtMaxTime
setAtMaxTime:
isAtMinTime
setAtMinTime:
isScrubbing
setScrubbing:
observationController
presentationSize
setPresentationSize:
currentAssetIfReady
setCurrentAssetIfReady:
assetInspectionQueue
setAssetInspectionQueue:
assetBeingPrepared
setAssetBeingPrepared:
isPictureInPictureSupported
setPictureInPictureSupported:
timing
setTiming:
minTiming
setMinTiming:
maxTiming
setMaxTiming:
currentAudioTrack
setCurrentAudioTrack:
isSeekingInternal
setSeekingInternal:
isSeeking
setSeeking:
seekToTimeInternal
setSeekToTimeInternal:
seekToTime
setSeekToTime:
contentChapters
setContentChapters:
isComposable
setComposable:
hasProtectedContent
setHasProtectedContent:
availableMetadataFormats
setAvailableMetadataFormats:
isCompatibleWithAirPlayVideo
setCompatibleWithAirPlayVideo:
rateBeforeScrubBegan
setRateBeforeScrubBegan:
isPreventingIdleSystemSleep
setPreventingIdleSystemSleep:
isPreventingIdleDisplaySleep
setPreventingIdleDisplaySleep:
isDisablingAutomaticTermination
setDisablingAutomaticTermination:
allowsPictureInPicturePlayback
setAllowsPictureInPicturePlayback:
isPictureInPictureActive
setPictureInPictureActive:
canTogglePictureInPicture
setCanTogglePictureInPicture:
hasBegunInspection
setHasBegunInspection:
isDeviceBatteryChargingOrFull
setDeviceBatteryChargingOrFull:
seekTimer
defaultPlaybackRate
setDefaultPlaybackRate:
touchBarRequiresLinearPlayback
loadValuesAsynchronouslyForKeys:completionHandler:
tracksWithMediaType:
asset
cancelPendingSeeks
associatedTracksOfType:
deviceName
componentsJoinedByString:
outputDevices
supportsMultipleOutputDevices
sharedAudioPresentationOutputContext
liveUpdateInterval
seekableTimeRangesLastModifiedTime
timebase
postNotificationName:object:userInfo:
reverseObjectEnumerator
isEnabled
assetTrack
tracks
stepByCount:
canStepBackward
canStepForward
doubleValue
canPlayFastReverse
canPlayFastForward
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
track
formatDescriptions
getBytes:length:
dataValue
objectAtIndex:
numberWithUnsignedInt:
metadataItemsFromArray:withKey:keySpace:
metadataForFormat:
availableVideoDynamicRanges
valueForKey:
currentEstimatedDate
timeRange
setActionAtItemEnd:
actionAtItemEnd
isPlaybackLikelyToKeepUp
items
isPlaybackBufferEmpty
playImmediatelyAtRate:
setAttribute:forKey:error:
bundleIdentifier
applicationState
sharedApplication
sortUsingComparator:
lastObject
arrayWithCapacity:
chapterMetadataGroupsBestMatchingPreferredLanguages:
arrayByAddingObject:
preferredLanguages
statusOfValueForKey:error:
dictionaryWithDictionary:
CGSizeValue
removeTimeObserver:
setBatteryMonitoringEnabled:
batteryState
isBatteryMonitoringEnabled
handlesAudioSessionInterruptions
addPeriodicTimeObserverForInterval:queue:usingBlock:
keyPathsForValuesAffectingReadyToPlay
keyPathsForValuesAffectingError
keyPathsForValuesAffectingCompletelySeekable
keyPathsForValuesAffectingShouldPreventIdleDisplaySleep
keyPathsForValuesAffectingRate
keyPathsForValuesAffectingCanPlay
keyPathsForValuesAffectingPlaying
keyPathsForValuesAffectingCanPause
keyPathsForValuesAffectingCanTogglePlayback
keyPathsForValuesAffectingVolume
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingHasContent
keyPathsForValuesAffectingContentDuration
keyPathsForValuesAffectingContentDimensions
keyPathsForValuesAffectingCurrentTime
keyPathsForValuesAffectingMinTime
keyPathsForValuesAffectingReversePlaybackEndTime
keyPathsForValuesAffectingMaxTime
keyPathsForValuesAffectingForwardPlaybackEndTime
keyPathsForValuesAffectingContentDurationWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRanges
keyPathsForValuesAffectingLoadedTimeRanges
keyPathsForValuesAffectingHasEnabledAudio
keyPathsForValuesAffectingHasVideo
keyPathsForValuesAffectingHasEnabledVideo
keyPathsForValuesAffectingHasContentChapters
keyPathsForValuesAffectingStreaming
keyPathsForValuesAffectingHasLiveStreamingContent
keyPathsForValuesAffectingHasSeekableLiveStreamingContent
keyPathsForValuesAffectingHasTrimmableContent
keyPathsForValuesAffectingHasShareableContent
keyPathsForValuesAffectingTimeControlStatus
keyPathsForValuesAffectingCanSeek
keyPathsForValuesAffectingCanScanForward
keyPathsForValuesAffectingCanScanBackward
keyPathsForValuesAffectingCanSeekToBeginning
keyPathsForValuesAffectingCanSeekToEnd
keyPathsForValuesAffectingCanSeekFrameForward
keyPathsForValuesAffectingCanSeekFrameBackward
keyPathsForValuesAffectingCanSeekChapterForward
keyPathsForValuesAffectingCanSeekChapterBackward
keyPathsForValuesAffectingAllowsExternalPlayback
keyPathsForValuesAffectingPlayingOnExternalScreen
keyPathsForValuesAffectingExternalPlaybackActive
keyPathsForValuesAffectingExternalPlaybackType
keyPathsForValuesAffectingExternalPlaybackAirPlayDeviceLocalizedName
keyPathsForValuesAffectingPictureInPicturePossible
usesExternalPlaybackWhileExternalScreenIsActive
maximumVideoResolution
setPlayingOnSecondScreen:
setHandlesAudioSessionInterruptions:
keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive
keyPathsForValuesAffectingMaximumVideoResolution
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@44@0:8d16@24@?32B40
@16@0:8
v16@0:8
d16@0:8
@"AVPlayerController"
@"AVPlayerControllerTimeResolver"
@"AVTimeFormatter"
@"AVPlayerViewController"
@"NSDictionary"
@32@0:8@16@24
v24@0:8@16
v20@0:8B16
v48@0:8@16@24@32^v40
v20@0:8f16
B16@0:8
q16@0:8
v24@0:8q16
@76@0:8@16q24q32@40q48d56d64f72
@80@0:8@16q24q32@40q48d56d64f72B76
v24@0:8d16
@"NSString"
@"AVDoneButton"
@"AVLabel"
@"AVPlaybackProgressIndicator"
@"UIButton"
@"AVPlayPauseButton"
@"UILabel"
@"AVVolumeSlider"
@"NSLayoutConstraint"
v32@0:8@"PUICSlider"16q24
v24@0:8@"PUICSlider"16
v32@0:8@16q24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@48@0:8@16@24B32B36@?40
@44@0:8@16@24B32@?36
@40@0:8@16@24@?32
v48@0:8@16@24@32@?40
@48@0:8@16@24@32@40
@"NSSet"
@60@0:8@16@24@32B40B44B48@?52
v32@0:8@16@?24
v56@0:8@16@24@32@40^v48
@?16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"AVPlayerViewController"16@0:8
@"NSMapTable"
v24@0:8@?16
@24@0:8#16
v40@0:8:16@24@?32
v24@0:8@"<AVBehaviorContext>"16
v24@0:8@"<AVBehavior>"16
@24@0:8q16
{UIEdgeInsets=dddd}16@0:8
q24@0:8@16
@"UIImage"
@24@0:8^{_NSZone=}16
@56@0:8d16d24Q32@40@?48
@32@0:8d16@24
@"<AVTimeControlling>"
@"AVTimer"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8@16{CGSize=dd}24
v28@0:8d16B24
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}16@0:8
@"UIImageView"
@"AVNowPlayingInfoController"
@"AVRemoteCommandController"
@"AVUnsupportedContentIndicatorView"
@"__AVPlayerLayerView"
@"AVWatchPlaybackControlsViewController"
@"NSTimer"
@"<AVPlayerViewControllerDelegate>"
{?="playerViewControllerShouldHandleDoneButtonTap"B}
@"AVBehaviorStorage"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{?=dd}16@0:8
@40@0:8d16d24d32
d24@0:8d16
@"AVAudioRecorder"
@"AVAudioPlayer"
@"AVWaveformView"
@"NSURL"
@"<AVAudioRecorderViewControllerDelegate>"
f24@0:8@"AVWaveformView"16
f24@0:8@16
v28@0:8@"AVAudioRecorder"16B24
v32@0:8@"AVAudioRecorder"16@"NSError"24
v24@0:8@"AVAudioRecorder"16
v32@0:8@"AVAudioRecorder"16Q24
v28@0:8@16B24
v32@0:8@16@24
v32@0:8@16Q24
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
@56@0:8@16@24B32d36@44B52
@48@0:8@16@24d32@40
@32@0:8@16d24
@24@0:8d16
@"CSLSBacklightAssertion"
@"NSMutableArray"
@"<AVWaveformViewDataSource>"
q24@0:8d16
@"NSArray"
@"AVMediaSelectionOption"
@"NSNumber"
{?="value"q"timescale"i"flags"I"epoch"q}
@"AVValueTiming"
@"AVPlayer"
@"AVObservationController"
@"AVAsset"
@"AVAssetTrack"
{CGSize="width"d"height"d}
^v16@0:8
v24@0:8^v16
v40@0:8@16@24@32
f16@0:8
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
v40@0:8d16d24d32
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v32@0:8{CGSize=dd}16
