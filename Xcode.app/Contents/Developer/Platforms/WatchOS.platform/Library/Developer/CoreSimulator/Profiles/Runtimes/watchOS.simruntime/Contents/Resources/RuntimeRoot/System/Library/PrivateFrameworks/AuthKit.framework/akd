@(#)PROGRAM:akd  PROJECT:AuthKit-1
init
authorizationRequest
clientID
_proxiedClientBundleID
_iconScale
_iconSize
_isWebLogin
_iconData
_startFetchingIconForBundleID:size:scale:
_setDataBlock:forKey:
credentialRequestContext
_isFetchingIconWithRequestContext:
_dataBlockForKey:
_removeDataBlockForKey:
setCompletion:
ak_errorWithCode:
setFetchIconBlock:
setScale:
archivedDataWithRootObject:requiringSecureCoding:error:
appIconForBundleID:size:completion:
startCoordinatingBlock:
objectForKey:
dictionary
setObject:forKey:
removeObjectForKey:
sharedManager
startFetchingIconWithRequestContext:
setFetchIconBlockForPresenter:withContext:
continueFetchingIconWithRequestContext:completion:
.cxx_destruct
_dataBlocksLock
_dataBlocks
command
altDSID
sharedInstance
iCloudAccountForAltDSID:
isPrimaryiCloudAccount:
setAltDSID:
userInfo
objectForKeyedSubscript:
_refreshFollowUpsWithIdmsInfo:context:completion:
_refreshFollowUpsWithIdmsInfo:context:authHandler:completion:
_processFetchCompletionForAltDSID:items:fetchError:completion:
serviceControllerForContext:
setAuthenticationDelegate:
ak_arrayWithJSONResponseData:
executeRequestWithCompletion:
_synchronizeLocalFollowUpsWithServerPayload:altDSID:error:
pendingFollowUpItems:
itemsForAltDSID:fromIDMSPayload:
ak_mapNullable:
setWithArray:
uniqueIdentifier
containsObject:
ak_filter:
count
removeFollowUpItems:error:
itemIdentifiersRequiringNotificationClearFromPayload:
countByEnumeratingWithState:objects:count:
clearNotificationsForItem:error:
_alignedInsertionCandidates:withExistingItems:
addFollowUpItems:error:
actions
informativeText
setObject:forKeyedSubscript:
enumerateObjectsUsingBlock:
notification
setInformativeText:
title
setTitle:
frequency
setFrequency:
options
setOptions:
setNotification:
IsFollowUpItemNotificationForced:
allValues
arrayByAddingObjectsFromArray:
itemIdentifier
akAction
isEqualToString:
arrayWithObjects:count:
removeFollowUpItemsWithIdentifiers:error:
_notifyServerOfTeardownWithContext:completion:
dictionaryWithObjects:forKeys:count:
mutableCopy
sharedService
authKitAccountWithAltDSID:
ackWithPayload:account:completion:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
processPushMessage:
shouldSuppressPushMessage:
didRespondToMessage:withResult:
didRespondToMessage:result:payload:
didReceiveNewPublicToken:
initWithFollowUpFactory:provider:
synchronizeFollowUpItemsForContext:authHandler:completion:
teardownFollowUpWithContext:completion:
serviceProvider
setServiceProvider:
_factory
_provider
_serviceProvider
T@"<AKFollowUpControllerServiceProvider>",&,N,V_serviceProvider
initWithPath:
stringByAppendingString:
initWithDatabasePath:migrationController:
wipeDatabase:
queryWithString:
privateEmailAddress
errorWithDomain:code:userInfo:
bindParameters:error:
executor
performQuery:error:
performBlockAndWait:
removePrivateEmailForKey:keyAlreadyHashed:error:
_hashKeyIfNecessary:
bindParameter:error:
stringFromColumn:inStatement:
setRowHandler:
initWithAddress:forKey:
currentProtocolVersion
UTF8String
appendFormat:
copy
privateEmailListVersion
addedPrivateEmails
setPrivateEmail:error:
removedPrivateEmails
protocolVersion
setCurrentEmailListVersion:error:
setProtocolVersion:error:
intValue
numberWithInteger:
initWithExecutor:
clearDatabase:
removePrivateEmailForKey:error:
emailForExactKey:error:
currentEmailListVersion
commitChangesToCacheWithInformation:error:
setExecutor:
_executor
T@"AKSQLiteExecutor",&,N,V_executor
initWithResponseBody:
array
primaryEmailAddress
vettedPrimaryEmail
boolValue
phoneAsAppleID
addObject:
accountAliases
addObjectsFromArray:
appleIDSecurityLevel
numberWithUnsignedInteger:
authMode
isUnderage
isLegacyStudent
masterKeyID
repairState
forwardingEmail
reachableEmails
familyName
givenName
previouslySelectedEmail
previouslyWantedPrivateEmail
additionalInfo
allAccountNames
dictionaryRepresentation
userInformationRepresentation
setUserInformationRepresentation:
_allAccountNames
_userInformationRepresentation
T@"AKUserInformation",C,N,V_userInformationRepresentation
T@"NSArray",R,C,V_allAccountNames
T@"NSDictionary",R,C
_parseDevicesFromResponseBody:
initWithInfo:
ak_map:
deviceMap
_deviceMap
T@"NSDictionary",R,C,N,V_deviceMap
initWithConnection:
name
stringWithFormat:
localizedAppName
_proxiedClientAppName
_proxiedClientAppID
_proxiedClientTeamID
initWithCredentialRequest:
hasInternalAccess
hasPrivateAccess
hasPrivateSignedAccess
hasPublicAccess
hasWriteAccess
hasOwnerAccess
bundleID
appID
teamID
_credentialRequest
applicationStateForApplication:
invalidate
tokenFromAuditToken:
hasInternalPrivateEntitlementAccess
_boolValueForEntitlement:
_isAppleBinary
_hasApprovedSigningIdentifier
_codeSigningIdentifier
_approvedCodeSigningIdentifiers
auditToken
setWithObjects:
_permitedProcessNamesToProxyWhiteList
_permitedProcessNamesToProxyInitialAuthWhiteList
_permittedProcessNamesForInteractiveAuthOnLimitedContext
_exemptedBundleIDsFromMandatoryUISecurityUpgrade
processIdentifier
stringWithUTF8String:
_bundle
objectForInfoDictionaryKey:
pluginKitProxyForIdentifier:
containingBundle
applicationProxyForIdentifier:
localizedNameForContext:
localizedName
initWithBytes:length:encoding:
fileURLWithPath:
bundleWithURL:
_bundleNonPluginKit
numberWithInt:
remoteObjectProxyWithErrorHandler:
bundleIdentifier
_appIDForIOS
length
_appIDForMacOS
_stringValueForEntitlement:
_arrayValueForEntitlement:
firstObject
valueForEntitlement:
isAppWithBundleIDForeground:
initWithAuditToken:
xpcConnection
hasInternalPrivateAccess
hasInternalEntitledAccess
_isOnInternalBuild
isPermittedToProxy
isPermittedToProxyInitialAuth
isPermittedForInteractiveAuthOnLimitedContext
isExemptedFromMandatoryUISecurityUpgrade
isPermittedToProxyAuthorizationBundleIdentifier
fullName
proxyWithErrorHandler:
authorizationAccessLevel
authorizationRequiresRapport
authorizationClientProvidesUI
_connection
_name
_fullName
_description
_bundleID
_auditToken
T@"NSXPCConnection",R,N
TB,R,N
T@"NSString",R,N
generateLoginCode:
domain
integerValue
_handleInvalidMasterTokenWithSubErrorCode:
_revokeDeviceTrust
context
setDeviceTrustRevoked:forAccount:
saveAccount:error:
initWithContext:
handleResponseError:
setContext:
_context
T@"AKAppleIDAuthenticationContext",&,N,V_context
payload
bagForAltDSID:
circleURL
clientInfo
base64EncodedStringWithOptions:
pushToken
serverInfo
transactionId
clientErrorCode
circleStep
identityTokenValue
initWithAltDSID:identityToken:
heartbeatTokenValue
setHeartbeatToken:
currentConnection
setClientAppName:
signRequestWithCommonHeaders:
initWithCircleContext:
requestURL
authKitBody
signRequest:error:
_circleContext
initWithBase64EncodedString:options:
propertyListWithData:options:format:error:
encodeWithCoder:
initWithCoder:
supportsSecureCoding
TB,R
ak_mapObjectsNullable:
serverProvidedData
status
_updateAccountInformationWithResultsDictionary:
masterToken
tokenWithValue:lifetime:
_federatedPayloadFromInfo:
stringValue
ak_urlQueryString
dataUsingEncoding:
updateWithSecondaryAuthenticationResponse:
allHeaderFields
_updateDSIDWithRawValue:
initWithAppleID:altDSID:
ak_acceptedTermsInfo
unsignedIntegerValue
_harvestCommonFieldsFromBody:
decodedConfigurationInfo:
initWithUUIDString:
updateWithSecondaryAuthenticationResponse:shouldUpdateDSID:
_harvestCommonFieldsFromResponse:
updateWithHTTPURLResponse:
tokenWithBase64String:
_setPasswordEquivalentToken:
_setHeartbeatToken:
componentsSeparatedByString:
_decodeBase64String:
statusCode
_numberFormatter
numberFromString:
initWithData:encoding:
initWithSRPContext:
initWithServerResponse:forAppleID:
initWithServerResponse:responseBody:
passwordEquivalentToken
heartbeatToken
inheritanceBeneficiarySetupToken
isUpdateable
updateWithSecondaryAuthenticationBody:
appleID
dsid
aliases
continuationToken
passwordResetToken
shortLivedToken
custodianSetupToken
serviceTokens
isRetryRequired
isSecondaryActionRequired
secondaryActionURLKey
isSecondaryActionURLGSEndpoint
secondaryActionMessage
isURLSwitchingRequired
urlSwitchingData
isAnisetteResyncRequired
anisetteResyncData
isAnisetteReprovisioningRequired
shouldProxyAnisetteAction
errorCode
errorMessage
acceptedTermsInfo
isManagedAppleID
isAuditLogin
isServerUIRequired
isPasscodeResetRequired
requireSigningHeaders
configurationInfo
acceptedDeviceTermsVersion
allowPiggybacking
isUnderAgeOfMajority
ageOfMajority
isFirstPartyApp
privateEmail
primaryEmail
primaryEmailVetted
nativeActionURLKey
canHaveCustodian
canBeCustodian
custodianEnabled
custodianSessionID
canHaveBeneficiary
canBeBeneficiary
beneficiaryIdentifier
beneficiaryWrappedKey
appleIDCountryCode
hasMDM
firstName
lastName
imageURLString
isDemoAccount
federatedAuthURL
federatedAuthRequestPayload
federatedAuthSamlRequest
federatedAuthURLWhiteList
authorizationUsed
_serviceTokens
_isRetryRequired
_isSecondaryActionRequired
_secondaryActionURLGSEndpoint
_isURLSwitchingRequired
_isAnisetteResyncRequired
_isAnisetteReprovisioningRequired
_shouldProxyAnisetteAction
_isManagedAppleID
_isAuditLogin
_isServerUIRequired
_isPasscodeResetRequired
_requireSigningHeaders
_allowPiggybacking
_isUnderAgeOfMajority
_isFirstPartyApp
_primaryEmailVetted
_isDemoAccount
_authorizationUsed
_phoneAsAppleID
_serverProvidedData
_appleID
_dsid
_altDSID
_aliases
_appleIDSecurityLevel
_authMode
_masterToken
_continuationToken
_passwordResetToken
_shortLivedToken
_custodianSetupToken
_secondaryActionURLKey
_secondaryActionMessage
_urlSwitchingData
_anisetteResyncData
_errorCode
_errorMessage
_acceptedTermsInfo
_configurationInfo
_acceptedDeviceTermsVersion
_transactionId
_serverInfo
_ageOfMajority
_privateEmail
_primaryEmail
_additionalInfo
_nativeActionURLKey
_canHaveCustodian
_canBeCustodian
_custodianEnabled
_custodianSessionID
_canHaveBeneficiary
_canBeBeneficiary
_beneficiaryIdentifier
_beneficiaryWrappedKey
_appleIDCountryCode
_hasMDM
_firstName
_lastName
_imageURLString
_federatedAuthURL
_federatedAuthRequestPayload
_federatedAuthSamlRequest
_federatedAuthURLWhiteList
T@"NSDictionary",R,N,V_serverProvidedData
T@"NSString",R,N,V_appleID
T@"NSNumber",R,N,V_dsid
T@"NSString",R,N,V_altDSID
T@"NSArray",R,N,V_aliases
TQ,R,N,V_appleIDSecurityLevel
TQ,R,N,V_authMode
T@"AKMasterToken",R,N,V_masterToken
T@"AKToken",R,N
T@"AKToken",R,N,V_continuationToken
T@"AKToken",R,N,V_passwordResetToken
T@"AKToken",R,N,V_shortLivedToken
T@"AKToken",R,N,V_custodianSetupToken
T@"NSDictionary",R,N,V_serviceTokens
TB,R,N,V_isRetryRequired
TB,R,N,V_isSecondaryActionRequired
T@"NSString",R,N,V_secondaryActionURLKey
secondaryActionURLGSEndpoint
TB,R,N,GisSecondaryActionURLGSEndpoint,V_secondaryActionURLGSEndpoint
T@"NSString",R,N,V_secondaryActionMessage
TB,R,N,V_isURLSwitchingRequired
T@"NSString",R,N,V_urlSwitchingData
TB,R,N,V_isAnisetteResyncRequired
T@"NSData",R,N,V_anisetteResyncData
TB,R,N,V_isAnisetteReprovisioningRequired
TB,R,N,V_shouldProxyAnisetteAction
Tq,R,N,V_errorCode
T@"NSString",R,N,V_errorMessage
T@"NSDictionary",R,N,V_acceptedTermsInfo
TB,R,N,V_isManagedAppleID
TB,R,N,V_isAuditLogin
TB,R,N,V_isServerUIRequired
TB,R,N,V_isPasscodeResetRequired
TB,R,N,V_requireSigningHeaders
T@"NSDictionary",R,N,V_configurationInfo
T@"NSNumber",R,N,V_acceptedDeviceTermsVersion
T@"NSString",R,N,V_transactionId
T@"NSString",R,N,V_serverInfo
TB,R,N,V_allowPiggybacking
TB,R,N,V_isUnderAgeOfMajority
T@"NSNumber",R,N,V_ageOfMajority
TB,R,N,V_isFirstPartyApp
T@"NSString",R,N,V_privateEmail
T@"NSString",R,N,V_primaryEmail
TB,R,N,V_primaryEmailVetted
T@"NSDictionary",R,N,V_additionalInfo
T@"NSString",R,N,V_nativeActionURLKey
T@"NSNumber",R,N,V_canHaveCustodian
T@"NSNumber",R,N,V_canBeCustodian
T@"NSNumber",R,N,V_custodianEnabled
T@"NSString",R,N,V_custodianSessionID
T@"NSNumber",R,N,V_canHaveBeneficiary
T@"NSNumber",R,N,V_canBeBeneficiary
T@"NSString",R,N,V_beneficiaryIdentifier
T@"NSString",R,N,V_beneficiaryWrappedKey
T@"NSString",R,N,V_appleIDCountryCode
T@"NSNumber",R,N,V_hasMDM
T@"NSString",R,N,V_firstName
T@"NSString",R,N,V_lastName
T@"NSString",R,N,V_imageURLString
TB,R,N,V_isDemoAccount
T@"NSString",R,N,V_federatedAuthURL
T@"NSData",R,N,V_federatedAuthRequestPayload
T@"NSDictionary",R,N,V_federatedAuthSamlRequest
T@"NSArray",R,N,V_federatedAuthURLWhiteList
TB,R,N,V_authorizationUsed
TB,R,N,V_phoneAsAppleID
replyContextWithPayload:
_acceptSessionForPayload:error:
code
processMessage:error:
setClientInfo:
setClientErrorCode:
setWaitForReply:
_releaseAssertion
isDone
didFinishAccepting
sharedController
processPushPayload:completion:
performCircleRequestWithContext:completion:
_authKitAccountForPayload:
accountPropertyForKey:
unsignedLongLongValue
sessionWithInitialMessage:secretDelegate:circleDelegate:dsid:error:
replyPayload
setPayload:
setWaitForReplyTimeout:
publicAPSTokenString
setPushToken:
hearbeatTokenForAccount:
setHeartbeatTokenValue:
currentDevice
isInCircle
_grabLockAssertion
_generateSecret
longLongValue
numberWithLongLong:
responseMessage
showPigCode:withIncomingMessage:
secret
accountCode
verificationFailed:
initWithPiggybackReporter:
acceptSession
setAcceptSession:
_lastPayload
_initiatingPayload
_verificationAttempts
_circleDelegate
_verificationFailed
_piggybackReporter
_acceptSession
T@"KCJoiningAcceptSession",&,N,V_acceptSession
setInitiatingServerResponse:
setAuthContext:
initWithRequest:requestType:
setRequestConfiguration:
serverUIContextFromResponse:authContext:urlRequest:
shouldPreventDismissAfterUserSkip
setShouldPreventDismissAfterUserSkip:
authContext
initiatingServerResponse
requestConfiguration
_shouldPreventDismissAfterUserSkip
_authContext
_initiatingServerResponse
_requestConfiguration
TB,N,V_shouldPreventDismissAfterUserSkip
T@"AKAppleIDAuthenticationContext",&,N,V_authContext
T@"AKAuthenticationServerResponse",&,N,V_initiatingServerResponse
T@"AKServerRequestConfiguration",&,N,V_requestConfiguration
authorizedAppListVersion
_shouldUpdateDatabaseToListVersion:
_fetchAllAuthorizedClientIDs
teams
apps
allKeys
removeObject:
_storeDeveloperTeam:listVersion:
_handleRevokedApplicationsForVersion:
setListVersionToVersion:
allObjects
authorizedRequest
credential
setTeamID:
userIdentifier
setUserIdentifier:
setClientID:
requestedScopes
setScopes:
setApps:
_addTemporaryDeveloperTeam:
_fetchApplicationsForTeamID:
fetchDeveloperTeamWithTeamID:completion:
arrayWithObjects:
performInsertQuery:error:
fetchAuthorizationListVersion
_storeConsentedApplication:teamID:listVersion:
enumerateKeysAndObjectsUsingBlock:
scopes
componentsJoinedByString:
_optionalValueWithString:
transferState
primaryClientID
origin
setState:
setTransferState:
setPrimaryClientID:
setOrigin:
performQuery:rowHandler:
setBindHandler:
updateAuthorizationListWithMetadataInfo:completion:
storeAuthorization:forClient:
fetchDeveloperTeamWithClientID:completion:
performUnsafeVerificationWithUserID:completion:
revokeAuthorizationForApplicationWithClientID:completion:
removeApplicationWithClientID:completion:
revokeAuthorizationForAllApplicationsWithCompletion:
_setDatabaseVersionToVersion:
initWithContext:urlBagKey:shouldCacheResource:
_setRequestURL
urlAtKey:
initWithURL:
authKitBodyData
setHTTPMethod:
requestBodyType
ak_addJSONRequestHeader
ak_setJSONBodyWithParameters:
serverCompatibleRequestBodyWithPayload:
ak_setBodyWithParameters:
setHTTPBody:
allHTTPHeaderFields
_validateDataExists:
_validateResponseBodyFormat
ak_dictionaryWithResponseData:
_validateErrorCode:withKey:
initWithDictionary:
ak_errorWithCode:userInfo:
expectedResponseType
addEntriesFromDictionary:
absoluteString
initWithString:
queryItems
queryItemWithName:value:
setQueryItems:
buildRequest:
validateResponseData:error:
shouldCacheResource
T@"AKAppleIDAuthenticationContext",R,N
initWithContext:urlBagKey:
serverCompatibleRequestBody
appendRequestUrlQueryParameterNamed:value:
setAuthKitBody:
client
setClient:
urlBagKey
setRequestURL:
setShouldCacheResource:
setAuthKitBodyData:
dataCenterIdentifier
setDataCenterIdentifier:
_shouldCacheResource
_client
_urlBagKey
_requestURL
_authKitBodyData
_dataCenterIdentifier
T@"AKClient",&,N,V_client
T@"NSString",R,C,N,V_urlBagKey
T@"NSURL",C,N,V_requestURL
TB,N,V_shouldCacheResource
T@"NSDictionary",C,N,VauthKitBody
T@"NSData",C,N,V_authKitBodyData
T@"NSDictionary",R,C,N
T@"NSString",C,N,V_dataCenterIdentifier
username
ak_addAppleIDHeaderWithValue:
isMultiUserMode
ak_addAppleIDUserModeHeaderWithValue:
appProvidedContext
ak_addAppProvidedContext:
isContextRequestingReauthForExistingService
ak_addReAuthenticationHeader
getIDMSRoutingInfo:forDSID:
setIDMSRoutingInfo:forDSID:
requestOTPForDSID:outMID:outMIDSize:outOTP:outOTPSize:
dispose:
isMachineProvisioned:
startProvisioningWithDSID:SPIM:SPIMLength:outCPIM:outCPIMLength:outSession:
endProvisioningWithSession:PTM:PTMLength:TK:TKLength:
destroyProvisioningSession:
synchronizeWithDSID:SIM:SIMLength:outMID:outMIDLength:outSRM:outSRMLength:
eraseProvisioningForDSID:
_recoveryContextFromServerInfo:error:
shouldSendServerResponseForRecoveredInfo:withRecoveryError:
requestForRecoveryCompletionWithContext:recoveredInfo:recoveryError:
resourceLoadDelegate
setResourceLoadDelegate:
initWithLiaison:client:delegate:
showServerUIWithContext:completion:
ac_secureCodingError
ak_errorWithCode:underlyingError:
dismissServerProvidedUIForContext:client:completion:
dismissNativeRecoveryUIForContext:client:completion:
presentNativeRecoveryUIForContext:recoveryContext:client:completion:
recoveryContextWithServerInfo:
isValid
decodedRecoveryIdentityTokenString
renewRecoveryTokenURL
ak_addClientInfoHeader
ak_addDeviceUDIDHeader
ak_addInternalBuildHeader
ak_addFeatureMaskHeader
ak_addAuthorizationHeaderWithIdentityToken:forAltDSID:
sharedURLSession
beginDataTaskWithRequest:completionHandler:
setAccountRecoveryMasterKey:
setDecodedRecoveryIdentityToken:
decodedRecoveryPETString
setDecodedRecoveryPET:
setIgnoreInternalTokens:
configureWithParameters:
basicAuthURL
performWithURL:SRPContext:error:
authenticationParametersWithCompletion:
initWithRequestProvider:
shouldProcessServerUIRequest:
initWithUILiaison:client:
retrieveRecoveryDataForServerContext:recoveryInfo:completion:
renewRecoveryTokenWithContext:completion:
verifyMasterKey:withContext:completion:
persistMasterKeyVerifier:withContext:completion:
_authUILiaison
UUID
generateCheckinID
initWithClient:
warmUpVerificationSessionWithCompletionHandler:
fetchRealUserLikelihoodForRequest:withCompletionHandler:
analyticsReport
setAnalyticsReport:
_analyticsReport
T@"AKCASatoriReporter",&,N,V_analyticsReport
initWithEvent:
numberWithBool:
initWithRequestID:
didSelectAppleID:didCancel:
fetchFollowUps
set_shouldSendIdentityTokenForRemoteUI:
resourceLoadDelegateWithContext:
setValue:forHTTPHeaderField:
signRequest:
ak_addPRKRequestHeader
securityUpgradeContext
initWithAttributes:
descriptor
attributes
initWithDescriptor:value:
itemAttributes
value
setValue:
setDescriptor:
_value
_descriptor
T@"NSData",&,N,V_value
T@"AKKeychainItemDescriptor",&,N,V_descriptor
proxiedDevice
initWithClient:context:
attestationHeaders
attestationDataForDevice:withRequest:completion:
_authenticationParameters:
authenticationType
_identifier
UUIDString
supportsPiggybacking
sharedConfiguration
shouldDisablePiggybacking
isEphemeral
shouldPromptForPasswordOnly
shouldRequestShortLivedToken
shouldRequestRecoveryPET
shouldOfferSecurityUpgrade
canPresentRemoteUI
authKitAccount:
isAppleIDLoginEnabled
_localUserHasEmptyPassword
desiredInternalTokens
password
companionDevice
_passwordResetBackupToken
setAnticipateEscrowAttempt:
shouldRequestConfigurationInfo
companionDeviceAnisetteData
ak_anisetteHeadersWithCompanionData:
machineID
uniqueDeviceIdentifier
anisetteDataForDevice:provisionIfNecessary:
proxiedDeviceAnisetteData
ak_proxiedAnisetteHeadersWithData:
clientProvidedDataHelper:
appProvidedData
verifyCredentialReason
serverFriendlyDescription
_identityAuthorizationPayload
_masterKey
_proxiedAppBundleID
_masterKeyAsSecondFactor
_identityToken
currentDeviceAuthenticationModeForAuthContext:
_capabilityForUIDisplay
_performUIOutOfProcess
ignoreInternalTokens
authKitAccount
passwordResetTokenBackupForAccount:
altDSIDforPrimaryiCloudAccount
masterTokenForAccount:
_setMasterKeyAsSecondFactor:
__masterKeyAsSecondFactor
TB,N,S_setMasterKeyAsSecondFactor:,V__masterKeyAsSecondFactor
isFirstTimeLogin
securityLevelForAccount:
reason
reportPromptByClient:withContext:
surrogateContext
setSurrogateContext:
surrogateClient
setSurrogateClient:
surrogateRegistrationID
setSurrogateRegistrationID:
pendingBGContext
setPendingBGContext:
pendingClientUIWork
setPendingClientUIWork:
pendingClientBundle
setPendingClientBundle:
hasCheckedIn
setHasCheckedIn:
surrogateCompletion
setSurrogateCompletion:
_hasCheckedIn
_surrogateContext
_surrogateClient
_surrogateRegistrationID
_pendingBGContext
_pendingClientUIWork
_pendingClientBundle
_surrogateCompletion
T@"AKAppleIDAuthenticationContext",&,N,V_surrogateContext
T@"AKClient",&,N,V_surrogateClient
T@"NSUUID",&,N,V_surrogateRegistrationID
T@"AKAppleIDAuthenticationContext",&,N,V_pendingBGContext
T@?,C,N,V_pendingClientUIWork
T@"NSString",&,N,V_pendingClientBundle
TB,N,V_hasCheckedIn
T@?,C,N,V_surrogateCompletion
_fetchSurrogateForClient:
_isClientWaitingForSurrogateAuth:
_handleError:logMessage:withUIWorkBlock:
surrogateIDGenerator
_waitForSurrogateCheckInWithContext:withUIWorkBlock:client:andCheckInID:
_stopWaitingForCheckInWithContext:andError:
launchOutOfProcessAuthentication:surrogateID:withErrorHandler:
_launchAppleIDSettingsForContext:withCheckinID:
promptForAppleIDSettingsRedirectWithContext:client:needFullUI:completion:
inProgressSurrogates
_updateWithValuesFromContext:
uiWorkQueue
_fetchSurrogateWithRegistrationID:
_clearSurrogate:
lock
unlock
allKeysForObject:
launchSettingsForContext:withCheckinID:
initWithDelegate:
hasRegisteredSurrogateForContext:
isSurrogateAuthInProgressForClient:
isWaitingForSettingsSurrogateAuth
waitForRemoteViewServiceWithContext:client:uiWorkBlock:
waitForSettingsWithContext:client:requireFullUICapability:allowRedirectToSettings:uiWorkBlock:
performUIWorkWithSurrogateContext:uiWorkBlock:
registerUISurrogateContext:client:completion:
unregisterUISurrogateForContext:
setSurrogateIDGenerator:
surrogateQueue
setSurrogateQueue:
setInProgressSurrogates:
_delegate
_settingsLauncher
_surrogateCheckinIDLock
_accountManager
_settingsSurrogationInProgress
_surrogateIDGenerator
_surrogateQueue
_inProgressSurrogates
T@"NSObject<OS_dispatch_queue>",&,N,V_surrogateQueue
T@"NSMutableDictionary",&,N,V_inProgressSurrogates
T@"AKSurrogateAuthenticationIDGenerator",&,N,V_surrogateIDGenerator
isBuddyFinished
_bodyForBeneficiaryEndpoint
set_shouldSendGrandSlamTokensForRemoteUI:
setInitialURLRequestKey:
beneficiarySetupToken
setServiceToken:
accessKey
claimTokenString
wrappedKeyData
manifest
parsableRepresentation
T@"AKInheritanceContext",R,N,V_context
storeName
_buildSchemaVersion1
_upgradeToSchemaVersion2
_upgradeToSchemaVersion3
_upgradeToSchemaVersion4
performQuery:
performInsertQuery:
migrateSchemaIfNecessary
migrateSchemaFromVersion:
currentSchemaVersion
_createV1Database
_createV2Database
_createV3Database
didCompleteWithAuthorization:error:
expiryDate
compare:
initWithObject:expiryDate:
cacheObject
isExpired
_cacheObject
_expiryDate
T@,R
T@"NSDate",R
dateWithTimeIntervalSinceNow:
_flushCache
setObject:forKey:expiresIn:
_internalCache
_lock
lastKnownActiveAnisetteDSID
_unsafe_anisetteDataWithRoutingInfoForDSID:withError:
_unsafe_provisionAnisetteWithCompletion:
scannerWithString:
scanUnsignedLongLong:
_unsafe_anisetteDataForDSID:withError:
ak_wrappedAnisetteError:
setRoutingInfo:
numberWithUnsignedLongLong:
initWithBytesNoCopy:length:freeWhenDone:
localUserUUID
ak_truncatedCopy
setMachineID:
setOneTimePassword:
sharedBagService
clearSessionCache
IDMSEnvironment
activeAnisetteDSIDWithEnvironment:
_createProvisioningStartURLRequest
sharedAnisetteFreeURLSession
bytes
dataWithBytes:length:
_createProvisioningEndURLRequestWithCPIM:
_createSyncURLRequestWithMID:SRM:routingInfo:
startProvisioningURL
requestWithURL:
_signRequestWithProvisioningHeaders:
endProvisioningURL
syncAnisetteURL
ak_addClientTimeHeader
ak_addDeviceMLBHeader
ak_addDeviceROMHeader
ak_addDeviceSerialNumberHeader
ak_addLocalUserUUIDHashHeader
ak_addClientApp:
lastKnownIDMSEnvironment
initialize
provisionAnisetteWithCompletion:
syncAnisetteWithSIMData:completion:
eraseAnisetteWithCompletion:
fetchAnisetteDataAndProvisionIfNecessary:withCompletion:
legacyAnisetteDataForDSID:withCompletion:
fetchPeerAttestationDataForRequest:completion:
setIdentityToken:
_cliMode
setCliMode:
authenticatedRequest
custodianRecoveryToken
setCustodianRecoveryToken:
signRequestWithBasicHeaders:
_bodyForRecoveryCircle
_bodyForAddAndRevokeCustodianRequest
_bodyForFinalizeCustodianRequest
_bodyForCustodianUpdateRecoveryKeyRequest
embargoEndFeedback
_bodyForEmbargoEndFeedback
_bodyForPerformTrustedContactsDataSync
recoverySessionID
recoveryStep
ownerAppleID
ownerCustodianAltDSID
custodianUUID
idmsData
aaData
encryptedPRKC
wrappingKeyRKC
transactionID
notificationAction
custodianUUIDs
beneficiaryUUIDs
lastDataSyncTimestamp
timeIntervalSince1970
numberWithDouble:
setAuthenticatedRequest:
_authenticatedRequest
T@"AKCustodianContext",&,D,N
TB,N,V_authenticatedRequest
_clearMutuallyExclusiveProperties:
setPasswordCredentialCount:
didShowAppleID:
didSelectAnonymousEmail:
didSelectAppleID:
didSelectPasswordCredential:
didModifyName:
didComplete:
_classWithKeychainClass:
_accessibleWithKeychainAccessible:
_keychainClassWithClass:
_keychainAccessibleWithAccessible:
copyWithZone:
isInvisible
setInvisible:
isSynchronizable
setSynchronizable:
shouldUseDataProtection
setUseDataProtection:
itemClass
setItemClass:
itemAccessible
setItemAccessible:
account
setAccount:
service
setService:
server
setServer:
securityDomain
setSecurityDomain:
label
setLabel:
accessGroup
setAccessGroup:
_invisible
_synchronizable
_useDataProtection
_itemClass
_itemAccessible
_account
_service
_server
_securityDomain
_label
_accessGroup
TQ,N,V_itemClass
TQ,N,V_itemAccessible
T@"NSString",C,N,V_account
T@"NSString",C,N,V_service
T@"NSString",C,N,V_server
T@"NSString",C,N,V_securityDomain
T@"NSString",C,N,V_label
T@"NSString",C,N,V_accessGroup
invisible
TB,N,GisInvisible
synchronizable
TB,N,GisSynchronizable
useDataProtection
TB,N,GshouldUseDataProtection
requestIdentifier
passwordRequest
_isRapportLogin
_isFirstPartyLogin
existingStatus
_isEligibleForUpgradeFromPassword
initWithRequestContext:
_performPostInstallWithCompletion:
numberWithLong:
start
machAbsoluteTimeToTimeInterval:
sendReport
_eventName
_reportData
_initTime
_clock_timebase
deviceRequestContext
initWithURL:resolvingAgainstBaseURL:
includeUntrustedDevices
includeFamilyDevices
services
operatingSystems
setDeviceRequestContext:
_deviceRequestContext
T@"AKDeviceListRequestContext",&,N,V_deviceRequestContext
clearanceHandler
setClearanceHandler:
clientBundleID
setClientBundleID:
_clearanceHandler
_clientBundleID
T@"AKCredentialRequestContext",&,N,V_context
T@?,C,N,V_clearanceHandler
T@"NSString",&,N,V_clientBundleID
_proxiedClientServiceID
_shouldClearRequest:
_addRequestToAuthorizingBundles:
_hasAuthorizingBundlesForRequest:
_hasValuesInMap:forRequest:
arrayWithObject:
beginAuthorizationWithContext:client:withCompletion:
endAuthorizationForContext:client:clearanceHandler:
_pendingTrafficRequests
_authorizingBundles
_clearanceQueue
_trafficQueue
typeForMessageWithTransportRepresentation:
messageFromTransportRepresentation:
identifier
type
transportRepresentation
_properties
TQ,R,N
argument
setCommand:
setArgument:
TQ,N
T@"NSObject",C,N
setWithObject:
_strictlyUnarchivedObjectOfClasses:fromData:error:
replyToID
didSucceed
error
setReplyToID:
setDidSucceed:
setError:
returnData
setReturnData:
T@"NSString",C,N
TB,N
T@"NSError",C,N
T@"NSData",C,N
initWithService:
addDelegate:queue:
_performRemoteCommand:argument:completion:
_activePairedTinkerDevice
sendMessage:toDestinations:priority:options:identifier:error:
_mhq_handleIncomingReplyMessage:
_replyToCommandMessageWithInternalID:didSucceed:returnData:error:completion:
_handleIncomingCommandMessage:completion:
setIsProxy:
signingHeadersForRequest:completion:
removeAllObjects
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
startListeningForMessagesFromPairedDevice
_messageSendingService
_messageHandlingQueue
_completionsByInternalMessageID
_internalMessageIDsByTransportID
mainRunLoop
_migrateToSchemaVersion2
initWithMessage:
isValidMessage
message
messageId
setMessageId:
previousMessageId
serverMachineId
alertInfo
alertTitle
setAlertTitle:
alertBody
defaultButtonTitle
alternateButtonTitle
secondaryTitle
secondaryBody
isSilent
requiresPasscode
eventDetails
latitude
longitude
deviceClass
deviceColor
deviceEnclosureColor
_isSilent
_requiresPasscode
_message
_command
_messageId
_previousMessageId
_serverMachineId
_userInfo
_alertInfo
_alertTitle
_alertBody
_defaultButtonTitle
_alternateButtonTitle
_secondaryTitle
_secondaryBody
_eventDetails
_latitude
_longitude
_deviceClass
_deviceColor
_deviceEnclosureColor
T@"APSIncomingMessage",R,N,V_message
TQ,N,V_command
T@"NSString",&,N,V_messageId
T@"NSString",&,N,V_altDSID
T@"NSString",R,N,V_previousMessageId
T@"NSString",R,N,V_serverMachineId
T@"NSDictionary",R,N,V_userInfo
T@"NSDictionary",R,N,V_alertInfo
T@"NSString",C,N,V_alertTitle
T@"NSString",R,N,V_alertBody
T@"NSString",R,N,V_defaultButtonTitle
T@"NSString",R,N,V_alternateButtonTitle
T@"NSString",R,N,V_secondaryTitle
T@"NSString",R,N,V_secondaryBody
TB,R,N,V_isSilent
TB,R,N,V_requiresPasscode
T@"NSDictionary",R,N,V_eventDetails
T@"NSNumber",R,N,V_latitude
T@"NSNumber",R,N,V_longitude
T@"NSString",R,N,V_deviceClass
T@"NSString",R,N,V_deviceColor
T@"NSString",R,N,V_deviceEnclosureColor
sharedAuthKitFollowupProvider
setExtensionIdentifier:
sharedAuthKitFollowupManager
sharedAuthKitFollowupPushDelegate
initWithBundleIdentifier:
initWithNotificationCenter:
_notificationCategories
setNotificationCategories:
_notificationContent:
requestWithIdentifier:content:trigger:
addNotificationRequest:withCompletionHandler:
bundleForClass:
titleKey
localizedStringForKey:value:table:
localizedAppsNameList
bodyKey
setBody:
setCategoryIdentifier:
defaultSound
setSound:
setInterruptionLevel:
date
setDate:
initWithCapacity:
actionWithIdentifier:title:options:
categoryWithIdentifier:actions:intentIdentifiers:options:
postUserNotification:
_notificationCenter
dealloc
tokenWithExternalizedVersion:lifetime:
underlyingContext
configurationParameters
_underlyingContext
_configurationParameters
T@"NSDictionary",R,N
T@"AKMasterToken",R,N
T^{__AppleIDAuthSupportData=},R,N,V_underlyingContext
T@"NSDictionary",R,N,V_configurationParameters
phoneCertificate
setPhoneCertificate:
slotID
setSlotID:
_phoneCertificate
_slotID
T@"NSString",&,N,V_phoneCertificate
Tq,N,V_slotID
initWithQueue:
setDelegate:
getSubscriptionInfoWithError:
subscriptionsInUse
subscriptions
uuid
indexOfObjectPassingTest:
userDataPreferred
userDefaultVoice
getMobileSubscriberHomeCountryList:error:
phoneNumber
_formattedValueForPhoneNumber:countryCode:
T@"AKCarrierBundleUtilities",R
phoneBundleInfoWithAdditionalInfo:error:
_telephonyClient
_carrierUtilitiesQueue
initWithProxy:
surrogateManager
setSurrogateManager:
URLWithString:
host
reachabilityWithHostName:
fetchUserInformationForAltDSID:client:completion:
fetchURLBagForAltDSID:completion:
urlBagFromCache:altDSID:error:
forceURLBagUpdateForAltDSID:urlSwitchData:completion:
_verificationQueue
_setAuthKitAccount:inUse:forService:completion:
authKitAccountWithDSID:
servicesUsingAccount:
setAccount:inUse:byService:
store
removeAccount:withCompletionHandler:
reportFinalSignOutEventForAccount:completion:
reportSignOutEventForService:account:completion:
updateUserInformationForAltDSID:userInformation:completion:
_showAlertForLoginError:context:completion:
fetchAuthModeWithContext:client:completion:
ak_jsonDictionaryWithResponseData:
fetchAppInformationWithAltDSID:client:completion:
configurationInfoURL
dataWithPropertyList:format:options:error:
ak_addAuthorizationHeaderWithHeartbeatToken:forAltDSID:
fetchConfigDataURL
isProtectedWithPasscode
activeCode
getServerUILoadDelegateWithContext:completion:
setUsername:
updateStateWithExternalAuthenticationResponse:forContext:completion:
signalFromServerResponse:
authKitAccountWithAppleID:
_updateAuthKitAccount:withServerResponse:context:error:
_persistGrandSlamServiceTokens:forAltDSID:DSID:appleID:forContext:error:
altDSIDForAccount:
credentialForAccount:error:
performWithinPersonaForAccount:withBlock:
token
tokenWithExternalizedVersionString:
_validateLoginCode:forAltDSID:masterToken:idmsData:authContext:completion:
validateCodeURL
ak_addEphemeralAuthHeader
ak_addDeviceConfigurationModeHeaderForAuthContext:
anticipateEscrowAttempt
ak_addICSCIntentHeader
ak_addProxiedDeviceUDIDHeader:
ak_addProxiedClientInfoHeader:
ak_addProxiedAnisetteHeaders:
validateVettingTokenURL
dictionaryWithObject:forKey:
allAuthKitAccounts
ak_firstObjectMatchingFilter:
performLivenessCheckInForAccount:completion:
serviceType
isContextEligibleForSilentAuthCoercion
shouldAllowExperimentalMode
setAuthenticationType:
_password
endAuthenticationForAppleID:password:error:context:client:clearanceHandler:
_authenticateWithContext:completion:
beginAuthenticationWithContext:client:clearanceHandler:
needsRepair
_repairAppleIDWithContext:completion:
needsCredentialRecovery
_recoverCredentialsAndAuthenticateWithContext:completion:
needsNewAppleID
needsNewChildAccount
_createNewAppleIDAndAuthenticateWithContext:completion:
needsPasswordChange
_changePasswordAndAuthenticateWithContext:completion:
needsSecurityUpgradeUI
_upgradeSecurityLevelWithContext:completion:
_performAuthenticationWithContext:completion:
sharedBag
upgradeUIURL
_handleSuccessfulVerificationForContext:withResults:serverResponse:completion:
_shouldContinueAuthenticatingForUsername:password:serverResponse:didShowServerUI:continuationData:error:context:completion:
_showServerUIWithURLRequest:context:completion:
_isInteractiveAuthRequiredForContext:
_attemptBiometricOrPasscodeAuthWithContext:completion:
ak_isServiceError
_handlePasswordlessAuthResults:context:error:completion:
_attemptPasswordlessAuthOptionsWithContext:completion:
ak_isIncompatibleDevicesError
_attemptInteractiveAuthWithContext:completion:
serviceIdentifiers
authenticationModeForAccount:
_correlateContext:withAuthMode:
isContextEligibleForBiometricOrPasscodeAuth
_showBiometricOrPasscodeAuthWithContext:completion:
_attemptPasswordlessAuthAfterBiometricOrPasscodeValidationWithContext:promptType:completion:
_setPassword:
presentBiometricOrPasscodeValidationForContext:client:completion:
initWithContext:client:
ak_errorByAppendingUserInfo:
_handleVerificationCompletionForUsername:password:serverResponse:didShowServerUI:continuationData:error:context:completion:
_performSecondaryActionWithServerResponse:context:completion:
attemptTokenUpgradeWithCompletionHandler:
_attemptPasswordlessAuthWithContext:completion:
ak_isUserCancelError
_performSilentServiceTokenAuthWithContext:completion:
_performPasswordlessSRPAuthWithContext:completion:
_performPasswordlessSRPAuthWithAccount:context:completion:
_accountForContinuationWithContext:completion:
_accountForContinuationWithContext:error:
isUsernameEditable
_showContinueUsingUIWithContext:completion:
isAccountsFrameworkAvailable
mostRecentlyUsedAuthKitAccount
continuationTokenForAccount:
dismissKeepUsingUIForContext:client:withCompletion:
presentKeepUsingUIForContext:client:appleID:completion:
continuationTokenForAccount:error:
_handleVerificationError:forContext:completion:
_verifyUsername:password:context:completion:
_performInteractiveAuthWithContext:completion:
_refreshAuthModeIfNecessaryForContext:completion:
_refreshLocalAccountAndUpdateContext:completion:
_handleBasicLoginUICompletionWithUsername:password:context:additionalData:collectionError:completion:
presentBasicLoginUIForContext:client:completion:
refreshAuthMetadataWithContext:completion:
setAuthenticationMode:
DSID
_proxiedAppName
_shouldRefreshAccountAndUpdateContext
_updateAltDSIDAndUsername:
previousAccountInfoRefreshDate
timeIntervalSinceDate:
accountName
shouldUpdateAuthModeForAccount:
_refreshAuthModeForContext:completion:
authenticationMode
fetchAuthModeWithContext:completion:
dismissBasicLoginUIForContext:client:completion:
_showAlertForVerificationError:context:completion:
ak_isUnableToPromptError
ak_isSurrogateAuthAlreadyInProgressError
_keepAlive
_keepLoginAliveWithContext:error:andCompletion:
ak_isUserTryAgainError
_handleMissingUsernameOrPasswordForContext:password:username:completion:
_incrementAttemptsForContext:error:
_attemptIndex
set_attemptIndex:
maximumLoginAttempts
presentLoginAlertForContext:client:withError:title:message:completion:
_titleAndMessageForError:context:completion:
_srpAuthContextHelperWithContext:
setPassword:
_setMessage:
_performGrandslamEndpointActionWithContext:serverResponse:completion:
reportAuthEventOfType:success:error:
_checkFreshnessAndVerifyWithPassword:serverResponse:additionalData:secondaryActionError:context:newServerResponse:username:completion:
_performSRPAuthenticationWithContext:completion:
setAuthKitAccount:
shouldFakeAuthSuccess
_performSafeSRPAuthenticationWithContext:completion:
isContextSecretValidForSRP
performSRPContractWithContext:completion:
shouldDisablePETs
shouldContinueWithAuthenticationResults:error:forContextID:completion:
_authKitAccountFromContext:
_shouldSkipAccountUpdatesForAuthWithContext:
_provideServiceTokensIfRequiredForContext:authenticationResults:serverResponse:completion:
authKitAccountType
initWithAccountType:
personaIDIfCurrentPersonaIsDataSeparated
shouldUpdatePersistentServiceTokens
_completeAuthenticationWithServiceTokens:tokenFetchError:altDSID:authenticationResults:context:completion:
setValuesForKeysWithDictionary:
_fetchTokensForServiceIDs:withUsername:altDSID:masterToken:context:completion:
appleIDAccountWithAltDSID:
serviceIdentifier
_persistGrandSlamServiceTokensHelper:forAltDSID:DSID:appleID:appleIDAuthAccount:error:
appleIDAccountWithAppleID:
appleIDAccountType
setCredential:
setAuthenticated:
setAltDSID:forAccount:
setAccountProperty:forKey:
_updateCredentialForSavedAIDAAccount:withNewTokens:
setToken:
_isTouchIDRequiredForGrandSlamServiceTokenWithID:
setRequiresTouchID:
setCredential:forAccount:serviceID:error:
_beginServerDrivenSecondaryActionWithURLKey:context:initialAuthResponse:completion:
_setIdentityToken:
_beginNativeSecondaryActionWithContext:initialAuthResponse:completion:
keyForEscapeHatchURL
dismissSecondFactorUIForContext:client:completion:
_handleSecondFactorUICompletionWithCode:error:idmsData:initialAuthResponse:context:completion:
presentSecondFactorUIForContext:client:completion:
_handleSecondFactorUICompletionWithCode:error:idmsData:piggybacking:initialAuthResponse:context:completion:
_showAlertForLoginCodeValidationError:context:completion:
_processValidationCodeSuccessResponse:authResponse:results:completion:
presentSecondFactorAlertForContext:client:withError:title:message:completion:
setPasscodeAuth:
setBiometricAuth:
_urlAtKey:
_handleGrandslamResponse:data:error:serverResponse:completion:
looksLikeiForgotURLKey:
_addAccountNameParameterToURL:withContext:
_showServerUIWithURLRequest:context:initialAuthResponse:completion:
_showServerUIWithContext:completion:
authKitAccountForSilentServiceToken:
externalizedVersion
appleIDAuthSupportTokenCreateWithExternalizedVersion:error:
_authenticationParametersForUsername:altDSID:context:
appleIDAuthSupportCopyAppTokensWithMasterToken:authURL:serviceIds:authParams:error:
removeMasterTokenForAccount:
_handleRecoverCredentialsError:withContext:andCompletion:
_beginiForgotFlowWithContext:completion:
setNeedsCredentialRecovery:
isTriggeredByNotification
iForgotContinuationURL
iForgotURL
setShouldOfferSecurityUpgrade:
ak_urlEncoded
stringByAppendingFormat:
repairURL
_handleCreateNewAppleIDError:withContext:andCompletion:
_beginAppleIDCreationFlowWithContext:completion:
setNeedsNewAppleID:
setNeedsNewChildAccount:
createChildAccountURL
createAppleIDURL
_beginChangePasswordFlowWithAccount:context:completion:
changePasswordURL
setNeedsPasswordChange:
initiatingContext
initialAuthResponse
initiatingPassword
setServiceType:
escapeHatchURL
ak_isUserSkippedError
setDSID:forAccount:
setAliases:forAccount:
setAdditionalInfo:forAccount:
demoAccountForAccount:
setDemoAccount:forAccount:
setSecurityLevel:forAccount:
setAuthenticationMode:forAccount:
setAuthorizationUsed:forAccount:
setPhoneAsAppleID:forAccount:
setPrimaryEmailAddress:forAccount:
setVerifiedPrimaryEmail:forAccount:
setUserUnderage:forAccount:
setAgeOfMajority:forAccount:
setCanBeCustodian:forAccount:
setCanHaveCustodian:forAccount:
setCustodianEnabled:forAccount:
setBeneficiary:forAccount:
setCanBeBeneficiary:forAccount:
setCanHaveBeneficiary:forAccount:
setAppleIDCountryCode:forAccount:
setHasMDM:forAccount:
setGivenName:forAccount:
setFamilyName:forAccount:
externalizedVersionString
setCredentialItem:forKey:
sendUserInfoChangeNotificationWithPayload:
piggyback:promptForRandomCodeWithCompletion:
piggyback:handleVerificationWithError:completion:
piggyback:validateSecurityCode:completion:
piggyback:shouldContinueWithCompletion:
piggyback:handleEscapeHatchError:completion:
shouldProcessAdditionalServerUIData:
serverUIContext:processAdditionalData:completion:
authenticateWithContext:completion:
checkSecurityUpgradeEligibilityForContext:completion:
generateLoginCodeWithCompletion:
validateLoginCode:forAppleID:withCompletion:
updateStateWithExternalAuthenticationResponse:forAppleID:completion:
getServerUILoadDelegateForAltDSID:completion:
setAppleIDWithAltDSID:inUse:forService:completion:
setAppleIDWithDSID:inUse:forService:completion:
getUserInformationForAltDSID:completion:
fetchDeviceMapWithContext:completion:
fetchAppListWithAltDSID:completion:
deleteAuthorizationDatabaseWithCompletion:
warmUpVerificationSessionWithCompletion:
setConfigurationInfo:forIdentifier:forAltDSID:completion:
configurationInfoWithIdentifiers:forAltDSID:completion:
checkInWithAuthenticationServerForAppleID:completion:
reportSignOutForAppleID:service:completion:
reportSignOutForAllAppleIDsWithCompletion:
validateVettingToken:forAltDSID:completion:
isCreateAppleIDAllowedWithCompletion:
synchronizeFollowUpItemsForContext:completion:
isDevicePasscodeProtected:
activeLoginCode:
accountNamesForAltDSID:completion:
fetchURLBagFromCache:altDSID:completion:
fetchUserInformationForAltDSID:completion:
_authProxy
_authTrafficController
_reachability
deactivate
initWithDeviceID:
startAuthorization
authorizationEndorserRapportClientDidFinish:
activateWithError:
_handleFoundDevice:
didDeactivateBlock
setDidDeactivateBlock:
deviceDiscovery
setDeviceDiscovery:
authorizationEndorser
setAuthorizationEndorser:
_didDeactivateBlock
_deviceDiscovery
_authorizationEndorser
T@"RPCompanionLinkClient",&,N,V_deviceDiscovery
T@"AKAuthorizationEndorserRapportClient",&,N,V_authorizationEndorser
T@?,C,N,V_didDeactivateBlock
_initiatePiggybackingWithCleanSession:withCompletion:
_clearSessionState
requestSession
initialMessage:
setTransactionId:
contextWithIncomingPayload:
signal
_promptForSecretWithContext:completion:
set_notifyOfTimeout:
wait
cancel
_processHandshakeWithContext:handshakeReply:andHandshakeError:withCompletion:
_handleVerificationError:withContext:completion:
_clearCaptureState
_deliverPushPayload:completion:
_shouldContinueProcessing:
session
setServerInfo:
replyWithContext:withCompletion:
didCancelRequesting
setIdentityTokenValue:
sessionWithSecretDelegate:dsid:error:
_capturedCodeString
_cacheSecondFactor:codeCaptureError:
_processCachedUserInputWithContext:completion:
_processCodeEntryErrorWithContext:completion:
_sendDeviceCancelledReplyWithContext:
didEscapeRequesting
processAccountCode:error:
initWithServerResponse:andDelegate:piggybackReporter:
initiatePiggybackingWithCompletion:
delegate
setInitiatingContext:
setInitiatingPassword:
setRequestSession:
capturedCode
setCapturedCode:
escapeHatchTrigger
setEscapeHatchTrigger:
escapeHatchError
setEscapeHatchError:
authResults
setAuthResults:
unitTestContext
setUnitTestContext:
initialHandshakeTimeout
setInitialHandshakeTimeout:
_latestIDMSData
_currentReplyContext
_retryCount
_unitTestContext
_initiatingContext
_initiatingPassword
_initialAuthResponse
_requestSession
_capturedCode
_escapeHatchTrigger
_escapeHatchError
_authResults
_initialHandshakeTimeout
T@"KCJoiningRequestSecretSession",&,N,V_requestSession
T@"NSNumber",&,N,V_capturedCode
T@"NSError",&,N,V_escapeHatchTrigger
T@"NSError",&,N,V_escapeHatchError
T@"NSDictionary",&,N,V_authResults
TB,N,V_unitTestContext
Td,N,V_initialHandshakeTimeout
T@"<AKPiggybackRequestingControllerDelegate>",W,N,V_delegate
T@"AKAppleIDAuthenticationContext",&,N,V_initiatingContext
T@"NSString",&,N,V_initiatingPassword
T@"AKAuthenticationServerResponse",R,N,V_initialAuthResponse
_callCompletionBlockWithEmail:error:
XPCInterface
setExportedInterface:
setExportedObject:
resume
privateEmailCompletion
setPrivateEmailCompletion:
listener:shouldAcceptNewConnection:
privateEmailFetchCompletedWith:error:completion:
presentPrivateEmailWithAltDSID:client:key:completion:
remoteListener
setRemoteListener:
_remoteListener
_privateEmailCompletion
T@"NSXPCListener",&,N,V_remoteListener
T@?,C,N,V_privateEmailCompletion
_settingsPaneIDForContext:
iCloudAccountForAppleID:
defaultWorkspace
openSensitiveURL:withOptions:
doesNotRecognizeSelector:
_verifyEntitlements
canPerformRequestWithAccount:error:
showAlertForError:withCompletion:
_performRequestForAltDSID:key:completion:
presentPrivateEmailUIForContext:completion:
lookupPrivateEmailForAltDSID:withKey:completion:
fetchPrivateEmailForAltDSID:withKey:completion:
getContextForRequestContext:completion:
deletePrivateEmailDatabaseWithCompletion:
privateEmailListVersionWithCompletion:
removePrivateEmailKey:completion:
_cacheFetchedPrivateEmail:error:completion:
T@"AKClient",R,N,V_client
sharedSigner
fetchAnisetteDataAndProvisionIfNecessary:device:completion:
linkType
_pairedDeviceAnisetteService
_fetchAnisetteDataAndProvisionIfNecessary:device:completion:
_helperServiceForDevice:
_nativeAnisetteService
_clientAnisetteService
provisionAnisetteForDevice:completion:
syncAnisetteWithSIMData:device:completion:
eraseAnisetteForDevice:completion:
legacyAnisetteDataForDSID:device:completion:
initWithClient:authenticationContext:
absintheSigner
setAbsintheSigner:
attestationSigner
setAttestationSigner:
_absintheSigner
_attestationSigner
T@"AKAbsintheSigner",&,N,V_absintheSigner
T@"AKAttestationSigner",&,N,V_attestationSigner
signatureForURLRequest:completionHandler:
signaturesForData:options:completion:
absintheSignatureForData:completion:
_fetchUserInformationForAltDSID:client:dataCenter:completion:
_setLastEmailListRequestDate:
_processIncomingUserInformationForAltDSID:userInformation:
_syncPrivateEmailsForAltDSID:client:userInformation:completion:
beginTransaction
endTransaction
_processHideMyEmailForAltDSID:userInfo:response:
refreshAccountUsernamesForAltDSID:dataCenter:
primaryAuthKitAccount
setShouldSyncWithServer:
shouldSyncWithServer
_updatePrivateEmailsWithInformation:
refreshAccountUsernamesForAltDSID:withUserInformation:
initWithClient:altDSID:
executeFetchHmeListRequestWithCompletion:
_userInfoChangeNotificationDictionaryForAltDSID:userInformation:
setRepairState:forAccount:
_authorizationPropertiesChangedForAccount:userInformation:
_additionalInfoChangedForAccount:userInformation:
_trustedContactPropertiesChangedForAccount:userInformation:
repairStateForAccount:
verifiedPrimaryEmailForAccount:
phoneAsAppleIDForAccount:
selectedPrivateEmailForAccount:
setSelectedPrivateEmail:forAccount:
primaryEmailAddressForAccount:
givenNameForAccount:
familyNameForAccount:
forwardingEmailForAccount:
setForwardingEmail:forAccount:
selectedAuthorizationEmailForAccount:
setSelectedAuthorizationEmail:forAccount:
reachableEmailAddressesForAccount:
isEqualToSet:
setReachableEmailAddresses:forAccount:
hasUsedAuthorization
authorizationUsedForAccount:
userUnderAgeForAccount:
ageOfMajorityForAccount:
appleIDCountryCodeForAccount:
authorizedApplicationsListVersion
revokeAuthorizationForAllApplications:
currentAuthorizationListVersion
_refreshApplicationInformationForAltDSID:
canHaveCustodianForAccount:
canBeCustodianForAccount:
custodianEnabledForAccount:
canHaveBeneficiaryForAccount:
canBeBeneficiaryForAccount:
updateAuthorizationListWithMetadataInfo:
_updateAccount:withUserInformationResponse:modifyAliases:
_broadcastEmailChangeNotification
standardUserDefaults
aliasesForAccount:
defaultCenter
postNotificationName:object:
_sendNotification:withUserInfo:
postNotificationName:object:userInfo:deliverImmediately:
postNotificationName:object:userInfo:
authkitAccount
setGivenName:
setFamilyName:
setHasUsedAuthorization:
formattedUsernameFromUsername:
setAccountName:
setPrimaryEmailAddress:
setIsUnderage:
setAgeOfMajority:
combinedAliasesAndReachableEmailsForAccount:
setPreviouslyWantedPrivateEmail:
setPreviouslySelectedEmail:
setReachableEmails:
setForwardingEmail:
insertObject:atIndex:
additionalInfoForAccount:
isEqualToDictionary:
hasMDMForAccount:
authorizationUserInformationForRequest:shouldRequestUpdate:error:
encodeObject:forKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
initWithBundleIdentifier:bundleName:bundleDescription:bundleType:otherInfo:
bundleName
bundleDescription
bundleType
otherInfo
_bundleIdentifier
_bundleName
_bundleDescription
_bundleType
_otherInfo
T@"NSString",R,C,N,V_bundleIdentifier
T@"NSString",R,C,N,V_bundleName
T@"NSString",R,C,N,V_bundleDescription
TQ,R,N,V_bundleType
T@"NSDictionary",R,C,N,V_otherInfo
dictionaryWithDictionary:
serialNumber
_handleCurrentDeviceTrustStatusChangedWithPayload:
_sendTrustedDeviceListChangeNotificationWithPayload:
operation
removeContinuationTokenForAccount:
_processDictionary:addedPrivateEmails:removedPrivateEmails:
invalidListVersionSupplied
_invalidListVersionSupplied
_shouldSyncWithServer
_protocolVersion
_privateEmailListVersion
_addedPrivateEmails
_removedPrivateEmails
T@"NSString",R,C,N,V_privateEmailListVersion
TB,R,N,V_invalidListVersionSupplied
T@"NSArray",R,C,N,V_addedPrivateEmails
T@"NSArray",R,C,N,V_removedPrivateEmails
TB,N,V_shouldSyncWithServer
Ti,R,N,V_protocolVersion
_constructRequestProviderForClient:altDSID:
setIsSecondCall:
setExpectedResponseType:
isSecondCall
_isSecondCall
TB,N,V_isSecondCall
anonymousListener
setPresentationCompletion:
endpoint
sharedConnection
_callCompletionBlockWithAuthorization:error:
presentAlertWithDictionary:completion:
authorizationResponseValidator
fetchIconBlock
presentationCompletion
authorizationRequestInitiatedWithUserProvidedInformation:completion:
authorizationRequestFinishedWithAuthorization:error:completion:
continueFetchingIconWithCompletion:
presentAuthorizationWithContext:client:completion:
setAuthorizationResponseValidator:
_authorizationResponseValidator
_fetchIconBlock
_presentationCompletion
T@?,C,N,V_presentationCompletion
T@?,C,V_authorizationResponseValidator
T@?,C,V_fetchIconBlock
buildReauthenticationContextFromContext:error:
_executeRequest:completion:
reauthenticateWithContext:completion:
sharedCacheEnabledURLSession
beginAuthenticationDataTaskWithRequest:completionHandler:
_requestProvider
_reauthHandler
_continueSRPContractWithAuthURL:context:completion:
_parseFailedServerResponse:withError:context:completion:
_resyncAnisetteWithServerResponse:context:completion:
_reprovisionAnisetteWithServerResponse:context:completion:
_doURLSwitchWithServerResponse:context:completion:
retryAuth
setRetryAuth:
_handleError:withServerResponse:context:andCompletion:
_anisetteActionTargetForServerResponse:andContext:
forceUpdateBagWithUrlSwitchData:completion:
_shouldClearCKForFailedMagicAuthWithError:authContextHelper:
clearContinuationTokenIfSupported
_demoModeEnabled
setShouldIgnoreUserID:
setShouldIgnoreTeamID:
_isDeviceTrustedForRequest:
_verifyClientInformationForRequest:completion:
setUserID:
_internalCredentialStateForUserState:error:
shouldIgnoreTeamID
_getCredentialStateWithStateRequest:completion:
ak_isAuthenticationErrorWithCode:
_fetchDeveloperTeamWithClientID:
_fetchDeveloperTeamWithTeamID:
state
userID
_verifyUserID:
shouldIgnoreUserID
shouldAllowDemoMode
deviceTrustRevokedForAccount:
getCredentialStateForRequest:completion:
getInternalCredentialStateForCredentialRequestContext:
getCredentialStateForClientID:completion:
_handleResult:forAccount:
_locationNameWithLatitude:longitude:completion:
stringByReplacingOccurrencesOfString:withString:
_loginAlertOptionsForAccount:latitude:longitude:message:resolvedBody:
createUserNotificationOptionsWithTitle:body:defaultButtonTitle:alternateButtonTitle:makeNoise:
_isPasswordPromptNecessaryForCommand:
_promptForAuthenticationPasswordForAccount:completion:
_presentWatchOSNotificationWithOptions:responseHandler:
_promptForChangePasswordForAccount:
isInternalBuild
_showCode:body:notificationTitle:completionHandler:
setLatitude:
setLongitude:
setReason:
setDeviceClass:
setDeviceColor:
setDeviceEnclosureColor:
_loginNotificationOptionsWithContext:isSilent:defaultButtonTitle:alternateButtonTitle:
_presenterQueue
_notificationResultFromCarouselAlertResponse:
doubleValue
initWithLatitude:longitude:
locality
administrativeArea
reverseGeocodeLocation:completionHandler:
_interpolatedReason
populateNotificationOptionsWithCommonKeys:makeNoise:
dismissAlert:
numberWithUnsignedLong:
_notificationResultFromButtonPressed:
passwordResetTokenForAccount:
_startChangePasswordFlowForAccount:
setShouldPromptForPasswordOnly:
setIsEphemeral:
setIsUsernameEditable:
setShouldSkipSettingsLaunchAlert:
setMaximumLoginAttempts:
set_performUIOutOfProcess:
set_forceEligibleForForegroundAuthentication:
createUserNotificationWithTitle:body:defaultButtonTitle:alternateButtonTitle:makeNoise:
presentMessageWithAccount:completionHandler:
presentLoginNotificationWithCode:piggy:completionHandler:
_loginAlertForAccount:latitude:longitude:message:resolvedBody:
tearDown
_receiveResponseFromNotification:handler:
_pendingNotificationId
_expectedResponseType
TQ,N,V_expectedResponseType
setIdentifier:
startAuthorizationWithCompanionLinkClient:
setDestinationDevice:
_deactivate
_sendStartAuthorizationRequest
activateWithCompletion:
_sendDidStartServerAuthorizationEvent
_handleStartAuthorizationWithResponse:
sendRequestID:request:destinationID:options:responseHandler:
unarchivedObjectOfClass:fromData:error:
_sendAuthorizationDidFinishRequestWithError:
set_isRapportLogin:
_requirePassword
set_requirePassword:
_sendAuthorizationDidFinishRequestWithAuthorization:
performAuthorization:completion:
endorseeDevice
sendEventID:event:destinationID:options:completion:
authorizationDaemonServiceWillProcessUserResponse:
endorseeClient
setEndorseeClient:
setEndorseeDevice:
authorizationService
setAuthorizationService:
_endorseeClient
_endorseeDevice
_authorizationService
T@"RPCompanionLinkClient",&,N,V_endorseeClient
T@"RPCompanionLinkDevice",&,N,V_endorseeDevice
T@"AKAuthorizationDaemonService",&,N,V_authorizationService
T@"<AKAuthorizationEndorserRapportClientDelegate>",W,N,V_delegate
presentKeepUsingUIForContext:appleID:completion:
_performBlockWithClient:context:requireFullUICapability:allowRedirectToSettings:block:
dismissKeepUsingUIForContext:withCompletion:
shouldCapturePromptBugForContext:
userInfoFromContext:
triggerAutoBugCaptureWithSubType:andBundleID:userInfo:
presentBasicLoginUIForContext:completion:
dismissBasicLoginUIForContext:completion:
presentLoginAlertForContext:withError:title:message:completion:
_isFullUICapabilityRequiredFor2FA
presentSecondFactorUIForContext:completion:
dismissSecondFactorUIForContext:completion:
presentSecondFactorAlertForContext:withError:title:message:completion:
presentServerProvidedUIForContext:withConfiguration:completion:
dismissServerProvidedUIForContext:completion:
presentNativeRecoveryUIForContext:recoveryContext:completion:
dismissNativeRecoveryUIForContext:completion:
presentBiometricOrPasscodeValidationForContext:completion:
_isBackgroundClient:eligibleForForegroundAuthenticationWithContext:
effectiveBoolValueForSetting:
_isForcedEligibleForForegroundAuthentication
_isProxyingForApp
deviceSpecificLocalizedStringWithKey:
_stringByAppendingBlameIfNecessary:withContext:client:
_optionsForCreatingUserNotificationWithTitle:message:defaultButton:alternateButton:serviceType:
notificationDictionaryWithTitle:message:defaultButton:alternateButton:
shouldSkipSettingsLaunchAlert
_notificationDictionaryForClient:context:needFullUI:
showAlert:primaryAction:altAction:cancelAction:
presentServerProvidedUIForContext:client:withConfiguration:completion:
_surrogateManager
_clientUIWorkQueue
T@"AKAuthenticationSurrogateManager",R,N
_setCheckInAllowedToValue:forAccount:
_validateMachineID:
anisetteDataWithError:
ackWithPayload:account:
_performHeartbeatCheckInIfNecessaryWithToken:completion:
_serviceControllerWithProvider:
performHeartbeatCheckInIfNecessaryWithCompletionHandler:
performLivenessCheckInForAccounts:withPushToken:completion:
removeUnusedAndDuplicateAuthKitAccountsWithCompletion:
_postCheckInDataToIDMSWithAccount:pushToken:event:completion:
stringRepresentationForService:
setFollowUpProvider:
setEvent:
setCheckInAllowedForAllAccountsToValue:
performHeartbeatCheckIn
_checkInQueue
initWithStoreManager:
_processCredentialStateChanges:
_credentialStateDidChange:forApplicationWithClientID:
_notifyCredentialStateChange:forApplicationWithClientID:
_broadcastCredentialStateChange:forApplicationWithClientID:
activate
credentialStateDidChange:completion:
remoteObjectProxyWithProtocol:forBundleID:errorHandler:
bundleIDs
_broadcastCredentialStateChange:forApplicationWithClientID:withHandlerBundleID:
credentialStateDidChange:forApplicationWithClientID:
removeAuthorizationForApplicationWithClientID:completion:
_storeManager
didCompleteWithSuccess:authorizationAlreadyComplete:
didPerformVerificationWithSuccess:duration:
didCompleteVerificationWithSuccess:duration:
_databaseQueue
openTransaction
commitTransaction
_executeQuery:
rollbackTransaction
_unsafe_openDatabase:
_prepareStatementForQuery:error:
bindHandler
bindingFailure
_printStatement:
_stepThroughRowsWithQuery:statement:
_finalizeStatement:error:
rowHandler
queryString
_handleDatabaseFailureError:
_currentDataBaseError
_unsafe_closeDatabase
_unsafe_wipeDatabase:
_unsafe_createDataBase
stringByDeletingLastPathComponent
defaultManager
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
removeItemAtPath:error:
performBlock:
database
databasePath
performTransactionBlockAndWait:
openDatabase:
closeDatabase
shouldAutomaticallyMigrate
setShouldAutomaticallyMigrate:
migrator
setMigrator:
_database
_databasePath
_shouldAutomaticallyMigrate
_migrator
T^{sqlite3=},R,N
T@"<AKSQLiteMigration>",&,N,V_migrator
_setConnection:forBundleID:
_connectionWithProtocol:forBundleID:
remoteObjectProxy
synchronousRemoteObjectProxyWithErrorHandler:
remoteObjectInterface
protocol
_removeConnectionWithProtocol:forBundleID:
setInvalidationHandler:
addConnectionForClient:
addConnection:forBundleID:
remoteObjectProxyWithProtocol:forBundleID:
synchronousRemoteObjectProxyWithProtocol:forBundleID:errorHandler:
_connectionsByBundleID
setEncryptedPRKC:
setOwnerCustodianAltDSID:
verifyRecoveryTransactionWithContext:verifySessionID:error:
custodianCodeConfiguration
ownerDevice
setOrphanedCustodianUUIDs:
setCustodianListVersion:
custodianListVersion
setCustodianListVersion:forAccount:
setOrphanedBeneficiaryUUIDs:
setBeneficiaryListVersion:
beneficiaryListVersion
setBeneficiaryListVersion:forAccount:
initiateCustodianSetupWithContext:completion:
finalizeCustodianSetupWithContext:completion:
revokeCustodianWithContext:completion:
updateCustodianRecoveryKeyWithContext:completion:
startCustodianRecoveryRequestWithContext:completion:
fetchCustodianRecoveryCodeConfigurationWithCompletion:
startCustodianRecoveryTransactionWithContext:completion:
fetchCustodianRecoveryTokenWithContext:completion:
fetchCustodianDataRecoveryKeyWithContext:completion:
sendEmbargoEndNotificationFeedbackWithContext:urlKey:completion:
performTrustedContactsDataSync:completion:
fetchManifestOptionsWithInheritanceContext:completion:
setupBeneficiaryWithInheritanceContext:completion:
updateBeneficiaryWithInheritanceContext:completion:
removeBeneficiaryWithInheritanceContext:completion:
setClasses:forSelector:argumentIndex:ofReply:
_executeRequestWithContext:urlBagKey:completion:
serviceName
exportedObject
exportedProtocol
configureExportedInterface:
null
numberOfRowsForTable:withExecutor:
tableInfoForTable:withExecutor:
clearSerializedMemoryCache
removeAllCachedResponses
_cachedURLBagForAltDSID:
_updateURLBagIfNecessaryFromCache:altDSID:urlSwitchData:completion:
_updateURLBagIfNecessaryFromCache:altDSID:error:
timeIntervalSinceNow
newBagURLRequestForAltDSID:urlSwitchData:
sharedCacheReliantAnisetteFreeSession
sharedCacheEnabledAnisetteFreeSession
_unsafe_updateCacheWithData:forAltDSID:
cancelDataTask:
IDMSEnvironmentFromBag:
setLastKnownIDMSEnvironment:
bagURLForAltDSID:
componentsWithURL:resolvingAgainstBaseURL:
initWithName:value:
ak_addCountryHeader
ak_addLocaleHeader
ak_addTimeZoneHeaders
ak_addSKUCountryHeader
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
urlBagForAltDSID:error:
clearCache
_bagFetchQueue
_lastUpdated
_cachedBags
piggybackResultString:
didCircleTimeout
_shouldSkipAuthorizationUI
_sanitizedCopy
setAuthorizedRequest:
_createAndPerformRequest:completion:
appleIDAuthorizationURLs
appleOwnedDomains
revokeUpgradeWithContext:client:completion:
fetchPrimaryApplicationInformationForAltDSID:appInformation:client:completion:
initWithListenerEndpoint:
setRemoteObjectInterface:
setAuthkitAccount:
_getPresentationContextForRequestContext:completion:
_verifyEntitlementsForRequest:
_checkCredentialForRequestContext:
_isSilentAppTransfer
set_shouldSkipAuthorizationUI:
_determineUIAndPerformRequest:completion:
_performSilentRequest:withCompletion:
_performRequest:completion:
_shouldForceUI
_initiateAuthorizationWithRequestContext:completion:
setSelectedRequest:
setUserSelection:
_shouldForcePrivateEmail
userSelection
setMakePrivateEmail:
_safePerformSRPWithUserResponse:completion:
_shouldSkipBiometrics
_iconName
_informativeText
_upgradeContext
_initiateRapportAuthorizationWithRequestContext:completion:
presentAuthorizationUIForContext:completion:
_requestUserAuthorizationForContext:completion:
canPerformCredentialRequest:error:
_credentialStateForRequestContext:
setRequestedScopes:
presentationContextForRequestContext:client:
canPerformAuthorizationRequest:error:
setAuthorizationRequest:
setUserInformation:
_setupLoginChoicesForPresentationContext:
loginChoices
setPasswordRequest:
_proxiedAssociatedDomains
_fetchCredentialsForAssociatedDomains:completion:
_fetchSafariCredentialsWithCompletion:
set_isSilentAppTransfer:
setExistingStatus:
userInformation
initWithUser:site:
setAppleIDAuth:
user
site
setCreateAppleID:
setLoginChoices:
getCredentialsForAppWithAppID:completionHandler:
getCredentialsForAppWithAppID:externallyVerifiedAndApprovedSharedWebCredentialDomains:completionHandler:
_validateAndProcessUserResponse:completion:
selectedRequest
_performSRPAuthorizationForUserResponse:completion:
authorizationContextWithRequest:
authorizationContextHelperWithContext:
rawAccountPassword
_completeAuthorizationWithServerResponse:userResponse:completion:
initWithServerResponse:
makePrivateEmail
selectedEmail
setSelectedEmail:
isEligibleForUpgradeFromPassword
initWithRequest:
setAppProvidedContext:
setRealUserVerificationData:
setAppProvidedData:
shouldContinueWithResponse:error:
_processUserResponse:completion:
loginChoice
objectAtIndexedSubscript:
initWithUser:password:
performAuthorizationWithContext:withUserProvidedInformation:completion:
getPresentationContextForRequestContext:completion:
fetchAppleIDAuthorizationURLSetWithCompletion:
fetchAppleOwnedDomainSetWithCompletion:
revokeUpgradeWithContext:completion:
fetchAppleIDAuthorizeHTMLResponseTemplateWithCompletion:
fetchPrimaryApplicationInformationForWebServiceWithInfo:completion:
continueFetchingIconForRequestContext:completion:
establishConnectionWithNotificationHandlerEndpoint:completion:
establishConnectionWithStateBroadcastHandlerEndpoint:completion:
startDiscoveryWithCompletion:
storeAuthorization:forProxiedRequest:completion:
_shouldStartSatoriVerificationForRequestContext:
rapportClient
setRapportClient:
endorserRapportDiscovery
setEndorserRapportDiscovery:
credentials
setCredentials:
originalRequestContext
setOriginalRequestContext:
_authorizationRealUserLock
_clientProxy
_realUserVerificationResults
_rapportClient
_endorserRapportDiscovery
_credentials
_originalRequestContext
T@"AKAuthorizationRapportClient",&,N,V_rapportClient
T@"AKAuthorizationEndorserRapportDiscovery",&,N,V_endorserRapportDiscovery
T@"NSArray",&,V_credentials
T@"AKCredentialRequestContext",&,N,V_originalRequestContext
T@"<AKAuthorizationDaemonServiceDelegate>",W,N,V_delegate
request
realUserVerificationData
nonce
T@"AKAuthorizationContext",&,N,V_authContext
initWithPushMessage:
setTitleKey:
subTitleKey
setSubTitleKey:
setBodyKey:
actionButtonText
setActionButtonText:
otherButtonText
setOtherButtonText:
setLocalizedAppsNameList:
_titleKey
_subTitleKey
_bodyKey
_actionButtonText
_otherButtonText
_localizedAppsNameList
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_titleKey
T@"NSString",C,N,V_subTitleKey
T@"NSString",C,N,V_bodyKey
T@"NSString",C,N,V_actionButtonText
T@"NSString",C,N,V_otherButtonText
T@"NSString",C,N,V_localizedAppsNameList
getServerUILoadDelegateWithServerContext:completion:
requestType
_errorFromServerResponse:
resourceLoadDelegateWithContext:authResponse:
setPhoneNumberCertificate:
_fetchPhoneInformationWithAdditionalInfo:error:
setPhoneInformation:
_fetchIDSCertificateWithCompletionHandler:
_decorateLoadDelegate:withContext:
setProxiedAltDSID:
setProxiedIdentityToken:
setShouldSendSigningHeaders:
decorateWithContext:
_shouldSendGrandSlamTokensForRemoteUI
activeServiceNamesForAccount:
setLoggedInServices:
_shouldSendIdentityTokenForRemoteUI
identityToken
setContinuationToken:
setPasswordResetToken:
_AKIDSCertificateFetchQueue
fetchAnisetteDataForContext:provisionIfNecessary:withCompletion:
syncAnisetteForContext:withSIMData:completion:
eraseAnisetteForContext:withCompletion:
provisionAnisetteForContext:withCompletion:
legacyAnisetteDataForContext:DSID:withCompletion:
_schemaVersion
_stopObservingLanguageChangeNotification
initWithMachServiceName:
enableTransactions
setBagProvider:
_startMonitoringPushEvents
_setupServices
_startListeningForMessagesFromPairedDevice
_monitorXPCEvents
_beginObservingLanguageChangeNotfication
_exitForSIGTERM
shouldAllowClient:logging:
startWithDelegates:
isUnlocked
startForTesting
_isPasscodeChangeNotification:
_isDeviceScreenUnlockNotification:
_checkScreenUnlockStateFromNotificationDictionary:
_checkKeybagUnlockState
anisetteServiceListener
setAnisetteServiceListener:
authServiceListener
setAuthServiceListener:
authorizationServiceListener
setAuthorizationServiceListener:
custodianServiceListener
setCustodianServiceListener:
privateEmailServiceListener
setPrivateEmailServiceListener:
authorizationEndorserRapportClient
setAuthorizationEndorserRapportClient:
inheritanceDaemonService
setInheritanceDaemonService:
_anisetteServiceListener
_authServiceListener
_authorizationServiceListener
_custodianServiceListener
_privateEmailServiceListener
_authorizationEndorserRapportClient
_inheritanceDaemonService
T@"NSXPCListener",&,N,V_anisetteServiceListener
T@"NSXPCListener",&,N,V_authServiceListener
T@"NSXPCListener",&,N,V_authorizationServiceListener
T@"NSXPCListener",&,N,V_custodianServiceListener
T@"NSXPCListener",&,N,V_privateEmailServiceListener
T@"AKAuthorizationEndorserRapportClient",&,N,V_authorizationEndorserRapportClient
T@"AAFService",&,N,V_inheritanceDaemonService
_authenticationContextForRevokingUpgrade
_requestBodyForUpgradeRevokeContext:
_addCachedPasswordInContext:
_shouldClearRequest:withClient:
_tq_invokeTrafficRequest:
_hasActiveAppAuths
_hasActiveDaemonAuths
_hasValuesInMap:
_newZStringWithString:
_updateContext:withPassword:forAppleID:
removeObjectAtIndex:
isContextEligibleForSilentAuth
_authenticatingApps
_authenticatingDaemons
_expiringCache
T@"AKAuthenticationSurrogateManager",&,N,V_surrogateManager
performAuthorizationCheckInWithCompletion:
_unsafe_addKeychainItem:shouldAttemptUpdate:error:
_unsafe_updateKeychainItemWithDescriptor:newItem:error:
_unsafe_fetchKeychainItemWithDescriptor:error:
_unsafe_fetchKeychainItemsWithDescriptor:error:
_unsafe_deleteKeychainItemWithDescriptor:error:
addKeychainItem:completion:
addOrUpdateKeychainItem:completion:
updateKeychainItem:completion:
fetchKeychainItemWithDescriptor:completion:
fetchKeychainItemsWithDescriptor:completion:
deleteKeychainItemWithDescriptor:completion:
_keychainQueue
APSEnvironment
isValidEnvironment:
initWithEnvironmentName:namedDelegatePort:queue:
_setEnabledTopics:
setDelegates:
shutdown
ak_hexString
_publicAPSToken
_ensureDesiredAPSEnvironmentIsInUse
publicToken
topic
isTracingEnabled
confirmReceiptForMessage:
_unsafe_processPushMessage:
_shouldProcessPushMessage:withAccount:
_unsafe_tearDownNotificationWithID:
_messageSupportsAlerts:
_queryDelegatesForSuppressAction:
_unsafe_teardownCurrentLoginNotification
_unsafe_presentMessage:forAccount:
_processMessageWithDelegates:
_notifyDelegatesOfMessageActivation:result:
_performCommandForMessage:forAccount:
_unsafe_showNotificationForMessage:account:responseHandler:
_generateLoginCodeForAccount:withIncomingMessage:
_startPasswordResetFlowForAccount:
localizedDescription
_unsafe_showLoginNotificationWithCode:incomingMessage:piggy:
unsignedIntValue
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
_notifyDelegatesOfMessageActivation:result:payload:
tearDownLoginNotifications
setEnableCriticalReliability:
setActiveCode:
_apsConnection
_activeAPSEnvironment
_apsTokenSemaphore
_pushServiceQueue
_loginCodeNotificationID
_appleCareNotificationID
_notificationsByPushID
_pushDelegates
_pushTopics
_pcsAuthPushHandler
_activeCode
T@"NSString",C,N,V_activeCode
storeModernRecoveryURL
setQueryString:
_bindStatement:withParameter:atPosition:
setBindingFailure:
_bindingFailure
_queryString
_bindHandler
_rowHandler
T@"NSString",C,N,V_queryString
TB,N,V_bindingFailure
T@?,C,N,V_bindHandler
T@?,C,N,V_rowHandler
condition
setCondition:
_condition
_payload
T@"NSCondition",&,N,V_condition
T@"AKCircleRequestPayload",&,N,V_payload
setQualityOfService:
cancelAllOperations
payloadWithMessage:
isAcceptingPayload
_hasPrimaryiCloudAccountForPayload:
isRequestingPayload
_processPiggybackPayload:
_processPendingCompletionsForPayload:
_acceptingControllerForTransactionId:
_removeAcceptingControllerForTransaction:
hasPrimaryiCloudAccountForAltDSID:
waitForReply
waitForReplyTimeout
_processingTimeOut
isCancelled
waitUntilDate:
_notifyOfTimeout
addExecutionBlock:
addOperation:
startRequestSessionWithController:completion:
_acceptingControllers
_pendingReplies
_requestingController
_piggybackingRequestQueue
_circleRequestProcessingQueue
_requiresHSA2Repair
event
internationalMobileEquipmentIdentity
internationalMobileEquipmentIdentity2
userChosenName
mobileEquipmentIdentifier
integratedCircuitCardIdentifier
color
enclosureColor
coverGlassColor
housingColor
backingColor
modelNumber
currentLocale
localeIdentifier
followUpProvider
pendingAuthKitFollowUpPayload:
userInfoFromAccount:
cdpAccountIsICDPEnabledForDSID:
_event
_pushToken
_followUpProvider
T@"NSString",C,N,V_event
T@"NSString",C,N,V_pushToken
T@"<AKFollowUpProvider>",&,N,V_followUpProvider
setModifiedName
didSelectAnonymousEmail:didCancel:
initWithResponseInfo:
MLBSerialNumber
ROMAddress
locale
uppercaseString
_addExperimentalFeaturesInfoToClientProvidedData:
requestedCloudPartition
shouldEnableTestAccountMode
shouldHideInternalBuildHeader
ak_serverFriendlyString
decodedRecoveryPET
decodedRecoveryIdentityToken
ak_anisetteHeadersWithData:
internalFeaturesMaskValue
accountRecoveryMasterKey
biometricAuth
passcodeAuth
_ignoreInternalTokens
_biometricAuth
_passcodeAuth
_retryAuth
_username
_accountRecoveryMasterKey
_decodedRecoveryPET
_decodedRecoveryIdentityToken
_authKitAccount
T@"NSString",C,N,V_username
T@"NSString",C,N,V_password
T@"NSString",C,N,V_accountRecoveryMasterKey
T@"NSString",C,N,V_altDSID
T@"NSString",C,N,V_decodedRecoveryPET
T@"NSString",C,N,V_decodedRecoveryIdentityToken
T@"ACAccount",&,N,V_authKitAccount
TB,N,V_ignoreInternalTokens
contextSecretValidForSRP
TB,R,N,GisContextSecretValidForSRP
T@"<AKAuthenticationContext>",&,N,V_authContext
TB,N,V_biometricAuth
TB,N,V_passcodeAuth
TB,N,V_retryAuth
openApplicationWithBundleID:
_dismissUI
_invalidate
_callCompletionWithAuthorization:error:
_presentUIWithControllerClassName:extraOptions:presentationServiceCompletion:
_fetchTVAppIcon
_sendDidTapNotificationMessage
set_proxiedClientAppName:
set_proxiedClientBundleID:
set_proxiedClientAppID:
set_proxiedClientTeamID:
set_iconData:
set_iconScale:
set_proxiedAssociatedDomains:
_fetchAssociatedDomainsWithCompletionHandler:
getApprovedSharedWebCredentialsEntriesSortedByHighestValueForAppWithAppID:completionHandler:
_verifyAccountTrustWithRequestContext:completion:
_presentUI
_handleStartAuthorizingWithRequest:options:responseHandler:
_handleAuthorizationDidFinishWithRequest:options:responseHandler:
_handleDidStartServerAuthorizationWithEvent:options:
linkClient
setLinkClient:
authorizationCompletion
setAuthorizationCompletion:
companionServicePresenter
setCompanionServicePresenter:
hasEndorserAuthorizing
setHasEndorserAuthorizing:
setCredentialRequestContext:
tvAppIconData
setTvAppIconData:
tvAppIconScale
setTvAppIconScale:
_hasEndorserAuthorizing
_linkClient
_authorizationCompletion
_companionServicePresenter
_credentialRequestContext
_tvAppIconData
_tvAppIconScale
T@"RPCompanionLinkClient",&,N,V_linkClient
T@?,C,N,V_authorizationCompletion
T@"AKAuthorizationTVServicePresenter",&,N,V_companionServicePresenter
TB,N,V_hasEndorserAuthorizing
T@"AKCredentialRequestContext",&,N,V_credentialRequestContext
T@"NSData",&,N,V_tvAppIconData
T@"NSNumber",&,N,V_tvAppIconScale
requestTapToRadarWithTitle:message:componentName:componentVersion:componentID:
requestTapToRadarWithTitle:message:
ak_addShortLivedTokenHeaderWithIdentityToken:forAltDSID:
_performTokenUpgradeWithContext:completion:
setPresentationType:
_showIdentityProviderUIFromResponse:completion:
setHTTPContentType:
setRequestType:
setWhitelistedPathURLs:
_handleIdentityProviderResponsePayload:completion:
beginFederatedAuthWithInitialResponse:completionHandler:
v8@?0
v24@?0@"NSData"8@"NSError"16
v16@?0@?<v@?@"NSData"@"NSError">8
v24@?0@"AKIconContext"8@"NSError"16
@"AKCoordinatedDataBlock"8@?0
items
v32@?0@"NSHTTPURLResponse"8@"NSData"16@"NSError"24
@32@?0@"NSDictionary"8Q16^B24
B32@?0@"FLFollowUpItem"8Q16^B24
v32@?0@"FLFollowUpItem"8Q16^B24
/Library/Application Support/com.apple.akd/privateEmails.db
INSERT OR REPLACE INTO emails (client_key, email) VALUES (?, ?)
DELETE FROM emails WHERE client_key = ?
SELECT email FROM emails WHERE client_key=?
v24@?0^{sqlite3_stmt=}8^B16
%02x
SELECT privateEmailListVersion FROM version
UPDATE version SET privateEmailListVersion = ?
SELECT protocol_version FROM version
UPDATE version SET protocol_version = ?
accountInfo
devices
adsid
@32@?0@8Q16^B24
v32@?0@"NSDictionary"8Q16^B24
/System/Library/Frameworks/BaseBoard.framework/BaseBoard
/System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
/AppleInternal/Library/Frameworks/BaseBoard.framework/BaseBoard
BSAuditToken
Unable to find class %s
com.apple.authkit.client
com.apple.authkit.client.private
com.apple.authkit.client.internal
com.apple.authkit.client.owner
com.apple.authkit.writer.internal
com.apple.dt.Xcode
com.apple.dt.xcodebuild
com.apple.dt.xcscontrol
application-identifier
com.apple.application-identifier
com.apple.developer.team-identifier
com.apple.developer.applesignin
com.apple.authkit.authorization-bundle-identifier-proxy
AKOwnerProxyClient: %@
akd [on behalf of %@]
com.apple.akd
accountsd
backupd
aktool
askpermissiond
itunesstored
Preferences
StoreKitUIService
appstored
Carousel
com.apple.aktool
com.apple.internal.appleAccountSetupTool
exited?
%@ (%@)
ptkn
autype
acname
DsPrsId
uireq
com.apple.gs.idms.pet
com.apple.gs.idms.hb
X-Apple-GS-Token
X-Apple-HB-Token
X-Apple-AK-Auth-Type
X-Apple-I-CK
X-Apple-I-PRK
X-Apple-SL-Token
X-Apple-I-MD-DATA
X-Apple-I-Recovery-Session-Id
com.apple.gs.idms.beneficiary.add
X-Apple-I-AURL
X-Apple-I-AURL-Type
X-Apple-I-Device-Terms
X-Apple-I-MD-Cmd-Target
underAge
ageOfMajority
firstPartyApp
privateEmail
X-Apple-I-Data
additionalInfo
appleIdSignInEnabled
phoneAsAppleId
primaryEmail
primaryEmailVetted
naurl
X-Apple-I-NAURL
canHaveCustodian
canBeCustodian
custodianEnabled
canHaveBeneficiary
canBeBeneficiary
buuid
beneficiaryWrappedKey
countryCode
appleManagedAccount
@"<NSSecureCoding>"32@?0@"NSString"8@"NSString"16^B24
atxid
alias
token
duration
demoAccount
params
paired
alternateDsid
hsa2
hsa1
managed
v24@?0@"AKCircleRequestPayload"8@"NSError"16
DSID
%06u
/Library/Application Support/com.apple.akd/authorization.db
v32@?0@"NSString"8Q16^B24
v32@?0@"AKDeveloperTeam"8Q16^B24
SELECT team_id, uid FROM authorized_teams WHERE team_id = ?
SELECT team_id FROM authorized_applications WHERE client_id = ?
SELECT team_id FROM authorized_teams WHERE uid = ?
UPDATE authorized_applications SET credential_state = ? WHERE client_id = ?
DELETE FROM authorized_applications WHERE client_id = ?
UPDATE authorized_applications SET credential_state = ?, authorizedAppListVersion = 'TEMPORARY'
TEMPORARY
INSERT OR REPLACE INTO authorized_teams (team_id, uid) VALUES (?, ?)
v32@?0@"NSString"8@"AKConsentedApplication"16^B24
INSERT OR REPLACE INTO authorized_applications (client_id, team_id, scopes, origin, credential_state, transfer_state, primary_client_id, authorizedAppListVersion) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
SELECT client_id FROM authorized_applications WHERE authorizedAppListVersion != ? AND authorizedAppListVersion != 'TEMPORARY'
UPDATE authorized_applications SET credential_state = ?, authorizedAppListVersion = ? WHERE authorizedAppListVersion != ?
SELECT client_id, scopes, credential_state, transfer_state, primary_client_id, origin FROM authorized_applications WHERE team_id = ?
'%@'
NULL
SELECT client_id FROM authorized_applications WHERE credential_state = ?
SELECT authorizedAppListVersion FROM version;
v16@?0^{sqlite3_stmt=}8
UPDATE version SET authorizedAppListVersion = ?
UPDATE version SET db_version = ?
POST
com.apple.gs.idms.mrk
v20@?0B8@"NSError"12
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
com.apple.AuthKit.TiburonPasswordUI
useAppleID
application/json
Content-Type
Accept
X-Apple-Password-Only
X-Apple-Offer-Security-Upgrade
X-Apple-Ephemeral-Auth
ckgen
icscrec
rpet
X-Apple-I-App-Provided-Context
X-Apple-I-Proxied-ICSCREC
X-Apple-I-Proxied-PRK-Gen
X-MMe-Proxied-Client-Info
X-Apple-Identity-Token
X-Apple-I-Device-Configuration-Mode
X-Apple-I-Proxied-MD-M
X-Apple-I-Companion-MD-M
mk2fa
pbid
X-Apple-I-Request-UUID
X-Apple-I-ReAuth
addBeneficiaryToken
addCustodianToken
v24@?0@"AKAttestationData"8@"NSError"16
v24@?0@"NSMutableDictionary"8@"NSError"16
true
%@:%@
com.apple.AuthKit.PromptEvent
clientId
proxiedClientId
hasUsername
proxyingForPairedDevice
accountSecurityLevel
authenticationType
authReason
__OSINSTALL_ENVIRONMENT
__AKSYNCBUBBLE
No Bundle ID
No Proxied Client ID
AKUISurrogateQueue
Out-of-process surrogate auth is already in progress for client %@.
XPC Error launching out-of-process authentication for client %@ with surrogate ID %@.
v16@?0@"NSError"8
Failed to launch out-of-process authentication for client %@ with surrogate ID %@.
Settings surrogate auth is already in progress for client %@
Redirecting to Settings for client %@ is not permitted for this call.
Failed to prompt for Settings redirect for client %@.
User canceled Settings redirect for client %@.
Unable to launch Settings for client %@.
UI surrogate %@ not registered. Unable to do UI work.
 AKAuthenticationSurrogateManager Error: %@
beneficiaryUUID
claimId
selections
Authorization
CREATE TABLE IF NOT EXISTS authorized_teams (team_id TEXT PRIMARY KEY, uid TEXT, authorizedAppListVersion TEXT);
CREATE TABLE IF NOT EXISTS authorized_applications (client_id TEXT PRIMARY KEY, team_id TEXT, scopes TEXT, credential_state INTEGER);
CREATE TABLE IF NOT EXISTS version (authorizedAppListVersion TEXT PRIMARY KEY);
ALTER TABLE version ADD COLUMN db_version INTEGER;
ALTER TABLE authorized_applications ADD COLUMN authorizedAppListVersion TEXT
UPDATE version SET authorizedAppListVersion = 'TEMPORARY';
INSERT OR REPLACE INTO version (authorizedAppListVersion, db_version) values ('TEMPORARY', '%i');
ALTER TABLE authorized_applications ADD COLUMN transfer_state TEXT
ALTER TABLE authorized_applications ADD COLUMN primary_client_id TEXT
ALTER TABLE authorized_applications ADD COLUMN origin TEXT;
DROP TABLE IF EXISTS version;
CREATE TABLE IF NOT EXISTS version (authorizedAppListVersion TEXT PRIMARY KEY, db_version INTEGER);
com.apple.AuthKit.TiburonAttempt
/System/Library/Frameworks/KeychainCircle.framework/KeychainCircle
/System/Library/PrivateFrameworks/KeychainCircle.framework/KeychainCircle
/AppleInternal/Library/Frameworks/KeychainCircle.framework/KeychainCircle
KCJoiningAcceptAccountCircleDelegate
KCJoiningAcceptSession
KCJoiningRequestSecretSession
<%@: %p> Value: %@, Expiry (%@)
@"NSString"8@?0
@"NSArray"8@?0
@"_AKExpiringCacheValue"8@?0
Response
spim
cpim
X-Apple-I-MD-RINFO
X-Apple-I-MD-M
Status
com.apple.akd.anisette
ownerAppleId
recoverySessionId
ownerCustodianAltDSID
custodianUUID
idmsdata
aadata
encryptedPRKC
nextStep
wrappingKeyRKC
txnid
action
recoveryAlternateDsId
custodianUUIDs
beneficiaryUUIDs
timestampOnCK
com.apple.AuthKit.TiburonAuthorizationUI
passwordCredentialCount
didShowAppleID
useAnonymous
usePasswordCredential
modifiedName
com.apple.AuthKit.TiburonRequest
originClientType
apple
appleweb
includesAuthorizationRequest
includesPasswordRequest
clientID
appID
teamID
isFirstTimeAuth
<akredacted>
isUpgradeFromPassword
com.apple.authkit.post-install
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.ak.postinstall
com.apple.AuthKit.StartAuthorization
CredentialRequest
com.apple.AuthKit.AuthorizationDidFinish
Error
com.apple.AuthKit.DidStartServerAuthorization
requestID
didCancel
passwordRequestSuccess
authorizationRequestSuccess
errorDomain
errorCode
underlyingErrorDomain
underlyingErrorCode
allDevices
includeFamily
oses
services
Authorization Traffic Request - <%@: %p context %@, requested by %@>
AKAuthorizationClearanceQueue
AKAuthorizationTrafficQueue
com.apple.ak.unknown
/System/Library/Frameworks/IDS.framework/IDS
/System/Library/PrivateFrameworks/IDS.framework/IDS
/AppleInternal/Library/Frameworks/IDS.framework/IDS
IDSService
IDSDefaultPairedDevice
IDSSendMessageOptionBypassDuetKey
IDSSendMessageOptionEnforceRemoteTimeoutsKey
IDSSendMessageOptionTimeoutKey
com.apple.private.alloy.anisette
akcmd
akarg
akid
aktyp
akrid
akret
aksuc
akerd
AKCommandMessage <%p> {
Internal ID: %@,
Command: %@,
Argument: %@ }
NSData <%@ bytes>
(none)
AKReplyMessage <%p> {
Internal ID: %@,
Reply-To: %@,
Success: %@,
Error: %@,
RD: %@ }
com.apple.ak.idsq
v28@?0B8@"NSData"12@"NSError"20
-[AKPeerIDSAnisetteService syncAnisetteWithSIMData:completion:]
-[AKPeerIDSAnisetteService eraseAnisetteWithCompletion:]
-[AKPeerIDSAnisetteService provisionAnisetteWithCompletion:]
-[AKPeerIDSAnisetteService legacyAnisetteDataForDSID:withCompletion:]
com.apple.authkit.peer-as.txn
v24@?0@"AKAnisetteData"8@"NSError"16
-[AKPeerIDSAnisetteService _mhq_handleIncomingReplyMessage:]
-[AKPeerIDSAnisetteService service:didSwitchActivePairedDevice:acknowledgementBlock:]
PrivateEmail
CREATE TABLE IF NOT EXISTS emails (client_key TEXT PRIMARY KEY, email TEXT);
CREATE TABLE IF NOT EXISTS version (privateEmailListVersion TEXT PRIMARY KEY, db_version INTEGER);
INSERT OR REPLACE INTO version (privateEmailListVersion, db_version) VALUES('%@', '%i')
ALTER TABLE version ADD COLUMN protocol_version INTEGER
UPDATE version SET protocol_version = %i,db_version = %i
defbtn
albtn
none
prevtxnid
alert
title
body
stitle
sbdy
silent
akdata
pedr
<%@:%p> command: %lu, identifier: %@
com.apple.Preferences
com.apple.akd.default
Localizable
ALERT_DEFAULT_CANCEL
number
slotID
label
dataPreferred
defaultVoice
physicalSim
inUse
PhoneCertificate
B32@?0@"CTXPCServiceSubscriptionContext"8Q16^B24
com.apple.accounts.carrierUtilities.queue
Request
Header
isHSA2Eligible
AKAuthVerificationQueue
v24@?0@"AKAppleIDUserInformationResponse"8@"NSError"16
v40@?0@"NSString"8@"NSString"16@"NSDictionary"24@"NSError"32
v24@?0Q8@"NSError"16
cdks
v36@?0B8@"NSDictionary"12@"NSHTTPURLResponse"20@"NSError"28
%llu
security-code
X-Apple-I-Vetting-Token
IDMS
B24@?0@"ACAccount"8Q16
v28@?0B8@"NSDictionary"12@"NSError"20
v32@?0@"AKAuthenticationServerResponse"8@"NSDictionary"16@"NSError"24
v24@?0@"AKAuthenticationServerResponse"8@"NSError"16
v24@?0@"ACAccount"8@"NSError"16
-[AKAppleIDAuthenticationService _refreshLocalAccountAndUpdateContext:completion:]
WRONG_PASSWORD_ALERT_TITLE
WRONG_PASSWORD_ALERT_MESSAGE
MISSING_INPUT_ALERT_TITLE
MISSING_INPUT_ALERT_MESSAGE
BAD_NETWORK_ALERT_TITLE
BAD_NETWORK_ALERT_MESSAGE
CODE_INVALID_TITLE
CODE_INVALID_MESSAGE
UNDERAGE_ALERT_TITLE
UNDERAGE_ALERT_MESSAGE
APPLE_MANAGED_ACCOUNT_SIGN_IN_PROHIBITED_TITLE
APPLE_MANAGED_ACCOUNT_SIGN_IN_PROHIBITED_MESSAGE
APPLE_MANAGED_ACCOUNT_NEEDS_SETTINGS_REDIRECT_TITLE
APPLE_MANAGED_ACCOUNT_NEEDS_SETTINGS_REDIRECT_MESSAGE
SRP_VERIFICATION_ERROR_TITLE
UNKNOWN_ERROR_ALERT_TITLE
UNKNOWN_ERROR_ALERT_MESSAGE
v24@?0@"NSString"8@"NSString"16
ENTER_VERIFICATION_CODE_PIG
v20@?0B8@"NSDictionary"12
com.apple.gs.icloud.storage.buy
v24@?0@"NSNumber"8@"NSError"16
?%@=%@
%@-%lu
-[AKPiggybackRequestingController _initiatePiggybackingWithCleanSession:withCompletion:]
AKPiggybackRequestingController.m
completion
-[AKPiggybackRequestingController processPushPayload:completion:]
%06lu
APPLE_ACCOUNT
STORE
GAMECENTER
FACETIME
MESSAGES
prefs:notifyAuthKit=true&authKitContextID=%@
ACCOUNTS_AND_PASSWORDS&path=%@
&root=%@
HME_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_TITLE
HME_ERROR_ALERT_INSUFFICIENT_SECURITY_LEVEL_MESSAGE
HME_ERROR_ALERT_BUTTON_CONTINUE
HME_ERROR_ALERT_BUTTON_CLOSE
-[AKPrivateEmailDaemonService presentPrivateEmailUIForContext:completion:]
https://www.apple.com
AKLastEmailListRequestDateKey
userinfodata
dataCenter
com.apple.authkit.sync-private-emails
com.apple.authkit.authorization-list-update
v24@?0@"AKApplicationMetadataInfo"8@"NSError"16
-[AKUserInfoController _setLastEmailListRequestDate:]
-[AKUserInfoController _broadcastEmailChangeNotification]
_bundleIdentifier
_bundleName
_bundleDescription
_bundleType
_otherInfo
tddelta
mids
v32@?0@8Q16^B24
invalidListVersion
hmeMappings
hmeProtocolVersion
Hide My Email info {added=%@, removed=%@, invalid=%d, shouldSync=%d}
/System/Library/Frameworks/SafariFoundation.framework/SafariFoundation
/System/Library/PrivateFrameworks/SafariFoundation.framework/SafariFoundation
/AppleInternal/Library/Frameworks/SafariFoundation.framework/SafariFoundation
SFSafariCredentialStore
com.apple.AuthKit.AuthorizeAlert
context
xpcEndpoint
userInfo
v24@?0q8@"NSError"16
v24@?0@"AKDeveloperTeam"8@"NSError"16
v12@?0B8
/System/Library/Frameworks/CoreLocation.framework/CoreLocation
/System/Library/PrivateFrameworks/CoreLocation.framework/CoreLocation
/AppleInternal/Library/Frameworks/CoreLocation.framework/CoreLocation
CLGeocoder
CLLocation
AKNotificationNameTornDown
com.apple.authkit.pushPresenterQueue
v16@?0Q8
v16@?0@"NSString"8
%loc%
LOGIN_CODE_ALERT_TITLE_DEFAULT
LOGIN_CODE_ALERT_MESSAGE_DEFAULT
(internal:piggy)
APPLE_ID_SIGN_IN_HEADER
APPLE_ID_UNABLE_TO_RESOLVE_LOCATION_FOR_REASON
APPLE_ID_LOCALE_AND_ADMINISTRATIVE_AREA_FORMAT
v24@?0@"NSArray"8@"NSError"16
LOGIN_CODE_ALERT_OK_BUTTON
ALERT_DEFAULT_BUTTON
CHANGE_PASSWORD_ALERT_TITLE
CHANGE_PASSWORD_ALERT_BODY
CHANGE_PASSWORD_ALERT_DEF_BTN
CHANGE_PASSWORD_ALERT_ALT_BTN
prefs:root=ACCOUNTS_AND_PASSWORDS&path=%@&aaaction=changePassword
prefs:root=APPLE_ACCOUNT&aaaction=changePassword
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
v24@?0@"AKAuthorization"8@"NSError"16
AKUIWorkQueue
v32@?0@"AKClient"8@"AKAppleIDAuthenticationContext"16@"NSError"24
v32@?0@"NSHTTPURLResponse"8@"NSDictionary"16@"NSError"24
FORGOT_PASSWORD_ALERT_RESET_BUTTON
FORGOT_PASSWORD_ALERT_MESSAGE
FORGOT_PASSWORD_ALERT_CANCEL_BUTTON
FORGOT_PASSWORD_ALERT_TITLE
PASSWORD_ALERT_SETTINGS_BUTTON
PASSWORD_ALERT_CANCEL_BUTTON
PASSCODE_ALERT_TITLE_WITH_USERNAME
PASSWORD_ALERT_TITLE_WITH_USERNAME
PASSWORD_ALERT_MESSAGE_WITH_USERNAME
CONTINUE_AUTH_ALERT_TITLE
CONTINUE_AUTH_ALERT_MESSAGE
PASSWORD_ALERT_TITLE
PASSWORD_ALERT_MESSAGE
PASSWORD_ALERT_MESSAGE_PROXY_INTERNAL_BLAME
PASSWORD_ALERT_MESSAGE_INTERNAL_BLAME
com.apple.ak.checkin-allowed
v32@?0@"ACAccount"8Q16^B24
AKCheckInQueue
com.apple.authkit.heartbeat-aps-token
com.apple.authkit.ack
com.apple.authkit.heartbeat-as-needed
com.apple.authkit.heartbeat-all
B32@?0@"ACAccount"8Q16^B24
com.apple.authkit.liveness-event
com.apple.authkit.global-signout-event
com.apple.authkit.service-signout-event
com.apple.ak.hb
v32@?0@"NSNumber"8@"NSArray"16^B24
com.apple.AuthKit.TiburonSatori
wasSuccess
availableLateAfterAuthComplete
performVerificationSuccess
performVerificationDuration
verificationResults
verificationResultsDuration
com.apple.AuthKit.AuthEvent
eventType
wasSuccessful
No Auth Type
AKSQLErrorCode
com.apple.authkit.itemstorequeue
BEGIN EXCLUSIVE TRANSACTION
COMMIT TRANSACTION
ROLLBACK TRANSACTION
pragma foreign_keys=on
@"NSXPCConnection"8@?0
custodianListVersion
beneficiaryListVersion
SELECT COUNT(*) FROM %@
PRAGMA table_info('%@')
https://gsa.apple.com/grandslam/GsService2/lookup
AKSharedBag
idata
AKBagFetchQueue
%@/%@
com.apple.AuthKit.Piggyback
piggybackResult
circleTimeout
acceptingDone
requestingCancelled
requestingEscapedThroughHatch
Unknown Result
Default
v24@?0@"AKAuthorizationPresentationContext"8@"NSError"16
v16@?0@"NSArray"8
-[AKAuthorizationDaemonService _setupLoginChoicesForPresentationContext:]
create
v24@?0@"AKAuthorizationUserResponse"8@?<v@?@"AKAuthorization"@"NSError">16
AuthorizationServices
-[AKAuthorizationDaemonService presentAuthorizationUIForContext:completion:]
team_id
state
nonce
silent_app_transfer
client_id
origin
claim
selectedEmail
scopes
<%@ - identifier: %@, title: %@, subTitle: %@, body: %@, action button: %@, other button: %@, apps:%@>
com.apple.authkit.IDSFetchQueue
v24@?0@"AKAppleIDServerResourceLoadDelegate"8@"NSError"16
v32@?0@"NSString"8@"NSDictionary"16@"NSError"24
-[AKClientAnisetteService fetchAnisetteDataAndProvisionIfNecessary:withCompletion:]
-[AKClientAnisetteService syncAnisetteWithSIMData:completion:]
-[AKClientAnisetteService eraseAnisetteWithCompletion:]
-[AKClientAnisetteService provisionAnisetteWithCompletion:]
-[AKClientAnisetteService legacyAnisetteDataForDSID:withCompletion:]
/System/Library/Frameworks/Rapport.framework/Rapport
/System/Library/PrivateFrameworks/Rapport.framework/Rapport
/AppleInternal/Library/Frameworks/Rapport.framework/Rapport
RPCompanionLinkClient
RPCompanionLinkDevice
RPDestinationIdentifierDirectPeer
<undefined>
SELECT db_version FROM version;
com.apple.language.changed
New connection from client %@ with the AK write entitlment.
New connection from client %@ (internal).
New connection from client %@ (private).
New connection from client %@ (public).
New connection from client %@ (beleverde).
New connection from client %@ because of internal code signing.
Rejecting connection from client %@ because it is not entitled.
_State
<%@: %p context %@, requested by %@>
AKATCClearanceQueue
AKAuthTrafficQueue
v32@?0@"NSString"8@"NSMutableArray"16^B24
com.apple.authkit.authorization-fetch-user-information
com.apple.ak.listupdate
com.apple.authkit.keychain
/System/Library/Frameworks/ApplePushService.framework/ApplePushService
/System/Library/PrivateFrameworks/ApplePushService.framework/ApplePushService
/AppleInternal/Library/Frameworks/ApplePushService.framework/ApplePushService
APSConnection
APSEnvironmentProduction
com.apple.ak.aps.sim
com.apple.idmsauth
com.apple.authkit.pushServiceQueue
LOGIN_CODE_ALERT_TITLE_FAILED
prefs:root=APPLE_ACCOUNT&aaaction=resetPassword
prefs:root=ACCOUNTS_AND_PASSWORDS&path=%@&aaaction=resetPassword
com.apple.authkit.piggybacking-request
liveness
signout-all
signout-
noptkn
imei
imei2
clcg
clhs
clbg
prtn
iccid
meid
event
circleStatus
cdpStatus
phones
X-Apple-I-Client-Time
X-Mme-Device-Id
X-Apple-I-MLB
X-Apple-I-ROM
X-Apple-I-SRL-NO
X-Mme-Companion-Device-Id
X-Mme-Proxied-Device-Id
bootstrap
ckauth
mrkauth
pdec
ploc
papp
capp
svct
biopet
passcodepet
retry
AKAuthorizationRemoteViewController
v24@?0@"<NSSecureCoding>"8@"NSError"16
ttrinfo
IDMS has triggered TTR for a failure in %@ | %@ (%@) 
 Title: %@ 
 Message: %@
AuthKit
621449
RelayState
X-Apple-I-FA-Relay-State
v28@?0B8@"NSHTTPURLResponse"12@"NSError"20
application/x-www-form-urlencoded
authkit/icon-fetching
Follow up push message is for an altDSID not signed in to iCloud: %@
Suppressing repair push for non-primary account
Refreshing follow ups for %@ with info %@
No body parameters in Follow Up response!
Failed to synchronize local follow up state: %@
Synchronizing local follow up state
Deleting: %@
Failed to clear existing follow ups: %@
Clearing Notifications: %@
Inserting: %@
Detected an item without an identifier, invalid payload
Updating existing item with identifier: %@
Existing item notification was previously dismissed, ignoring incoming notification
Incoming notification was forced, keeping it!
Found incoming sparse followups: %@
Found incoming full followups: %@
Unknown action, ignoring...
Sending tear down payload: %@
Hide My Email: Converting key to hashed value
Cannot convert %@ to a non-nil string
Hide My Email: added:%@
Failed to persist private email with key:%@ error: %@
Hide My Email: remove:%@
Failed to remove private email with key:%@ error: %@
Failed to persist private emails list version with error: %@
Failed to persist private emails protocol version with error: %@
Hide My Email: tried to commit without listVersion. Info:%@
State of app %@: %d.
Unable to determine bundle ID of client %@ using NSBundle API. Falling back to CF.
Missing client info for circle request
Missing push token for circle request
Got malformed "%@" configuration info!
Got insecure "%@" configuration info!
Invalid/missing value for key alias: %@
Invalid value type for key: %@
Successfully obtained new CK from SRP
Successfully obtained new PRK from SRP
Encoded payload for federated auth: %@
No altDSID for auth server response. Could be bad.
No DSID for auth server response. Could be bad.
Invalid/missing value for key acname: %@
Invalid value for key ut: %@
Invalid value for key authType: %@
Invalid value for key Age of Majority: %@
Invalid value for key primary email vetted: %@
Updating with secondary auth response: %@
Trying to update an auth response without an existing _masterToken. Trouble waiting down the line.
Unable to update master token
Successfully obtained a new master token.
Successfully obtained a new PET.
Successfully obtained a new HB token.
Invalid format for service token in header %@
Updating token for service ID %@.
Successfully obtained new SLT from secondary auth
Successfully obtained new CK from secondary auth
Value for %@ is missing/invalid!
Successfully obtained new PRK from secondary auth.
No value for %@ header.
Invalid value value for %@ header: %@
Value for %@ is: %@
Invalid type for DSID value: %@
Will tear down an existing piggybacking session
Starting a piggybacking session
BEGIN [%lld]: PiggyAcceptSessionForAcceptController  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
PiggyAcceptSessionForAcceptController
END [%lld] %fs:PiggyAcceptSessionForAcceptController  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Approving device could not accept piggybacking session: %@
Will process message using session: %@ - %@
 CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
BEGIN [%lld]: PiggyClientInfoForAcceptController  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
 CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
PiggyClientInfoForAcceptController
END [%lld] %fs:PiggyClientInfoForAcceptController  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Did process message using session: %@ - %@
Failed to process data with error: %@
Approver is reporting as done...
Initializing accept session for DSID: %@
Failed to verify requesting secret, attempts: %@
Authorization List version matches the local authorization list version, skipping update
Attempted to store incorrect authorization type
Cannot store an authorization credential with nil teamID/bundleID
Attempting to delete application with clientID: %@ from DB
Deleting application with clientID: %@ failed with error: %@
Application with clientID: %@ removed from database successfully
Revoking all applications failed with error: %@
Storing developer team failed with error: %@
Storing consented applications failed with error: %@
Failed to fetch applications to be revoked with error: %@
Failed to revoke applications with error: %@
Failed to fetch applications with error: %@, continuing with fetched applications if any...
Failed to fetch authorized client IDs with error: %@, continuing with the fetched clients if any...
Encountered error setting app list version: %@
Failed to update database version with error: %@
Attempting to build request without a URL, bad things to come...
Failed to sign the request with error: %@
Request: %@
Request Headers: %@
Request Body: %@
Server returned no response, treating as success
No body parameters in fetch user info response!
An error occurred performing request. Server message: %@
Response Body: %@
Can't validate response for type: %lu
Invalid key %@ in server response: %@
Failed to retrieve recovery data with error. %@
Native recovery flow completed
Attempting to process native recovery response
Failed to fetch idMS completion url from provided info
We determined that we should not be resuming server UI flow at this point.  There is nothing else for us to do here.
Invalid native recovery server response detected
Internal or private access entitlement required but missing!
Missing identity token
Recovery token renewal will start.
Request to renew recovery token failed! Error: %@
Renewal of recovery token came back with HTTP status code: %@
Unexpected HTTP response code: %@
AKSRPContext configureWithParameters returned error: %@
No basic auth URL!
MK was accepted
MK was accepted, but we did not get expected data... failing
Attempting to persist verifier
Failed to persist verifier with error: %@
Verifier persisted
Context eligibility for piggybacking: %@
Piggybacking forced disabled
Skipping piggybacking, already in circle
Skipping piggybacking, missing push token
Client is eligible for piggybacking: %@
Client has requested password-only auth.
Client has requested a short-lived token.
Client has request a recovery PET.
Client is exempt from mandatory UI security upgrade.
Client is requesting password only auth. Security upgrade will not be offered.
Client is requesting ephemeral auth. Security upgrade will not be offered.
Client logging in for first time is using full AuthKit UI, security upgrade should be offered.
Cannot offer HSA2 upgrade on device with Apple ID login enabled.
Client has indicated that we should offer HSA 2.0 upgrade.
Performing ephemeral auth. Will not ask for ckgen or prkgen.
Sending prkgen: %@
The client indicated support for ckgen: %@
ckgen supported: %@
Will ask for ckgen.
Will ask to stash escrow PRK
Context has provided Anisette data for companion device.
Looking to set companion Anisette data in CPD.
Context has provided Anisette data for proxied device.
Grabbing Anisette data from proxied device.
Client has request a custodian setup token.
Client has request a beneficiary setup token.
Context has masterKey set! Setting masterKeyIsEligible
Context has set masterKeyAsSecondFactor
Context indicates we are performing reauth for existing service
Surrogate has been registered for ID %@: %@
Begin out-of-process authentication with surrogate ID %@
Taking user to Settings/System Preferences for auth UI...
UI surrogate %@ registered.
Whoa! UI surrogate is checking in with an unexpected identifier %@.
UI surrogate with ID %@ has already checked in.
UI surrogate client %@ with surrogate ID %@ is checking in.
Context with identifier %@ has no registered UI surrogate.
UI surrogate for client %@ with surrogate ID %@ is checking out.
Waiting for UI surrogate for client %@ with surrogate ID %@ to check in...
Stop waiting for UI surrogate for client %@ with surrogate ID %@!
Error: Attempted to clear surrogate that is no longer in progress with ID %@.
Settings redirect not supported by context
Could not find heartbeat token for account %@
%@ Database Migration requested from version: %i
Building database with schema version: 1
Upgrading database to schema version: 2
Upgrading database to schema version: 3
Upgrading database to schema version: 4
Client requested that we attempt provisioning...
Provisioning succeeded!
Unable to get Anisette data even after provisioning was attempted. Error: %@
Provisioning failed. No Anisette for you today! Error: %@
Skipping Anisette provisioning, per client request.
ADIGetIDMSRouting failed! Error: %@
Looking for Anisette data...
The DSID %@ is not provisioned for Anisette.
ADIOTPRequest failed. Error: %@
Anisette Info: mid - %@ otp - %@ euid - %d localUserUUID %@
Kicking off Anisette provisioning....
Anisette is already provisioned!
Unable to create start-provisioning URL request!
Starting provisioning with headers: %@
Start provisioning request failed! Error: %@
Unexpected response class! %@
Start provisioning response code: %@
Start provisioning response body: %@
No response body for start provisioning request!
No SPIM!
Destroying provisioning context.
ADIProvisioningStart failed. Error: %@
ADIProvisioningStart succeeded!
Unable to create end-provisioning URL request!
End provisioning request failed! Error: %@
End provisioning response code: %@
End provisioning response body: %@
No response body for end provisioning request!
No PTM!
No TK!
No routing info!
ADISetIDMSRouting failed! Error: %@
ADIProvisioningEnd failed. Error: %@
ADIProvisioningEnd succeeded!
Client did not provide SIM data!
Resyncing Anisette provisioning data...
Cleaning up ADI session objects...
ADISynchronize failed. Error: %@
ADISynchronize succeeded!
ADIGetIDMSRouting failed with error code: %@
Unable to create sync-provisioning URL request!
Sync provisioning request failed! Error: %@
Sync provisioning response code: %@
No response body for sync request!
Response status details: %@
Unexpected response format under Status key!
Server sync failed! Error Code: %@
Server sync looks like it succeeded.
We've been given new R-Info.
Anisette sync is complete!
Erasing Anisette provisioning data...
Erase failed! Error: %@
Erasing Anisette data succeeded!
Nil value for startProvisioningURL!
Nil value for endProvisioningURL!
Nil value for syncAnisetteURL!
Using QA Anisette DSID.
Using QA2 Anisette DSID.
Using some other non-prod Anisette DSID.
Custodian Recovery request is being created without a push token
There was no custodian recovery session ID. This should only happen on Start CLI
Custodian Recovery body for request: %{private}@
Custodian Initiation / Revocation request is being created without a custodian UUID
Finalize custodian setup request is being created without a custodian UUID
Update recovery key request is being created without a custodian UUID
Update recovery key request is being created without a wrappingKeyRKC
There was no custodian recovery session ID for embargo end feedback call, request will probably fail
There is no altDSID in recovery feedback call, request will probably fail
Perform Data sync request is being created without a lastDataSyncTimestamp
Registering for XPC activity: %s...
XPC activity says os got upgraded, running Post Install Job
XPC activity for post install complete
XPC activity registration complete. State: %@.
Satori Warmup for Post Install complete with result: %i
Already sent AKCA event: %@
Sending Report: %@ (time: %f)
Authorization Traffic - Client %@ lacks a bundle ID!
Authorization Traffic - Processing clearance request: %@
Authorization Traffic - should clear request: %@
Authorization Traffic - Denying clearance due to authorizing bundles: %@
Authorization Traffic - Adding %@ to list of authenticating apps
Authorization Traffic - Queued end authentication block for %@
Authorization Traffic - Queued end authentication clearance block for %@
Authorization Traffic - Executing end authentication clearance block for %@
Authorization Traffic - Removing %@ from authenticating list
Listening for messages from paired device...
Looing for Anisette data on IDS-paired device...
Paired device Anisette info: %@
Unable to obtain Anisette data from IDS-paired device: %@
Error archiving request %@
Peer attestation fetch didSucceed:%d data:%@ error:%@
Error deserializing attestation data: %@
Proxied attestation fetch - %@
Unable to obtain Attestation data from IDS-paired device: %@
%s (%d) called
Preparing message with command %@...
Command message ready for sending to to paired device: %@
Setting paired device.
IDSService sendMessage method failed. Error: %@
Message is on its way to paired device with transport ID: %@
Preparing reply to %@...
Will send reply message to paired device: %@
IDSService sendMessage method failed to send reply. Error: %@
IDS callback did not provide a message identifier!
Message with transport ID %@ could not be sent! %@
No internal message ID exists for transport ID %@, so we're ignoring the send failure.
Success sending message with Transport ID %@!
Received reply message from paired device: %@
Received command message from paired device: %@
Incoming message lacks a valid AuthKit-assigned UUID. Replying to paired device will not be possible.
Handling command from paired device: %@
Incoming message lacks a valid command.
Error unarchiving request %@
Error while serializing attestation data %@
Unknown command received %@!
Reply message lacks reply-to field.
Unable to find pending completion block under ID: %@
Calling out to pending completion handler for ID %@...
Paired device changed while %@ remote commands were pending.
Acknowledged!
akd is starting up...
akd is shutting down...
Building %@ database with schema version: 1
Migrating %@ database to schema version: 2
Invalid value for key %@ in push message: %@
alert parameters are not valid: %@
Push message has invalid command %@. Ignoring!
Push message is missing a transaction ID. Ignoring!
Can't post notification without an identifier.
User notification to be posted - %@
Adding notification request.
Failed to post notification with error: %@
Notification requeste added successfully.
Populating results with bundle info: %@
Failed to fetch subscription info with error: %@
Internal access entitlement required but missing!
No altDSID was provided.
No existing IDMS account for altDSID %@
No DSID was provided.
No existing IDMS account for DSID %@
Internal/Private/Write access entitlement required but missing!
Service type %@ is not valid.
Told to mark service %@ as not using account, but already not using!
Marking service %@ as %@ using account %@.
Global signout.
Removing unusued IDMS account %@...
Failed to remove account %@. Error: %@
Successfully removed account %@.
Exception caught: %@
Internal/Private access entitlement required but missing!
Internal/Owner access entitlement required but missing!
Failed to fetch devices with error: %@
Fetched device list for %@
Owner access entitlement required but missing!
Owner/Internal access entitlement required but missing!
Starting WarmUp verification ...
Invalid configurationInfo identifier provided: %@
Missing parameter altDSID!
Could not find configurationInfoURL in URL bag!
Could not find IdMS account with altDSID %@
Failed to serialize configuration info: %@
Failed to encode configuration info!
Set configuration info request failed: %@
Set configuration info response not of expected class!
Set configuration info completed with HTTP status code: %@
Invalid configurationInfo identifiers type provided: %@
Invalid configurationInfo identifiers provided: %@
Could not find fetchConfigDataURL in URL bag!
Fetch configuration info request failed: %@
Fetch configuration info response not of expected class!
Fetch configuration info completed with HTTP status code: %@
No body parameters in fetch configuration info response!
An error occurred fetching configuration info. Server message: %@
Fetch configuration info completed with keys: %@
Fetching login code
 enableTelemetry=YES 
BEGIN [%lld]: UpdateStateWithAuthResponse  enableTelemetry=YES 
Write access entitlement required but missing!
The provided URL response is not formatted as a final auth response.
No Apple ID was provided.
No existing IDMS account for Apple ID: %@
 Error=%{public,signpost.telemetry:number2,name=Error}d 
UpdateStateWithAuthResponse
END [%lld] %fs:UpdateStateWithAuthResponse  Error=%{public,signpost.telemetry:number2,name=Error}d 
Updating IDMS account %@ with external server auth response...
Unable to update IDMS account %@. Error: %@
Successfully updated IDMS account %@
No GS service tokens to update. Done.
External auth response contains GS service tokens. Will persist those...
Asked to validated code: %llu
AuthKit master token is missing! Error: %@
AuthKit account altDSID is missing.
Unable to get master token string value!
Attaching proxied device Anisette data: %@
Attaching proxied device Anisette data.
Validate-code request failed! Error: %@
Vetting validation completed with HTTP status code: %@
No body parameters in code validation response!
Missing key %@ in server response.
Code is valid!
Code is invalid!
An error occurred validating the code. Server message: %@
A vetting token was not provided.
altDSID was not provided.
Vetting-token validation request is ready to go.
Request to validate vetting token failed! Error: %@
Code validation completed with HTTP status code: %@
Seems like our master token has expired.
Unusual ACAccount with nil username encountered: %@
Server says vetting token is valid.
Server says vetting token is invalid.
altDSID required but missing!
Failed to fetch eligibility with error: %@
Fetched eligibility state for %@
Asked for check in with IDMS for Apple ID: %@
No IDMS account for Apple ID: %@
Asked to report signout from service %@ for Apple ID: %@
Asked to report signout for all Apple IDs
Internal write access entitlement required but missing!
No IDMS accounts to sign out
Sign out failed for account %@ with error: %@
Sign out succeeded for account %@
The UI Surrogate is finally here!
Overriding limited UI context into silent preferred auth
Overriding full UI context into silent preferred auth, silent is not supported...
Requesting clearance to begin auth with context %@...
Cleared to begin auth with context %@!
Nothing to do, since the authenticating context was a UI Surrogate.
Cleared to end auth with context %@.
Starting security upgrade flow
Security upgrade flow completed with error - %@
Should not continue. Calling completion with just error.
Should continue with results. Update account with results and proceed.
Current context requires interactive auth. Trying biometric/passcode first.
Current context permits passwordless auth.
Passwordless authentication failed due to service error, bailing...
Passwordless authentication failed due to proxy failure, bailing...
Passwordless authentication resulted in a failed interactive flow, bailing...
Passwordless authentication force failed by client, bailing...
Silent auth did not provide results. Interactive auth not allowed. Stopping right now.
Canceling auth attempt because credential access is unavailable.
All non-interactive auth options failed. Trying interactive auth.
Biometric/Passcode validation not possible for current context.
Collecting biometric/passcode validation...
Biometric/Passcode Validation failed with error %@. We need password auth flow...
Upgrade token found on context, will attempt token upgrade.
Token upgrade requires secondary action.
Will attempt silent auth since the context is asking for service tokens.
Silent auth not allowed due to username being editable
Accounts not available, skipping IDMS account lookup...
Looking for IDMS accounts to suggest using...
Nothing found.
Telling client to ask the user about using Apple ID: %@
Client decision to keep using: %@. Error: %@
Rejecting CK auth because username is marked as editable
No existing IDMS account for %@
Found an existing IDMS account %@
We don't have a CK for %@ (Error: %@), so that's that.
Username and password already provided by context. One shot at non-interactive auth.
One shot at non-interactive failed, handling failure...
Context did not provide a username and/or password or interaction requested.
Failed to refresh context locally with error: %@
Failed to refresh context remotely with error: %@
Client is asking for username only auth and provided a username... lets see how this goes
One shot at passwordless auth failed, handling failure...
Collecting user credentials...
AuthMode is federated, but we are running in shared environment, forcing interactinve auth to collect the PIN
AuthMode is federated, forcing username only interaction
Silent auth was requested for a federated account, moving on...
Username only authentication requested for non-federated account
Unknown authmode detected... there be dragons ahead!
No altDSID found on context. Checking DSID..
Context provided username is different %@(context) vs %@(account) for client %@. Trusting AuthKit account username.
No altDSID on context. Nothing to validate.
Last account info validation was less than 24 hours ago. Skipping.
Account info fetch failed. Skipping validation.
No account names came back from IDMS for altDSID: %@
Username %@ is valid for altDSID: %@
Username %@ is not valid for altDSID: %@. Setting username to %@
More than 24 hours since the last authentication mode was obtained, fetching authentication mode...
Less than 24 hours since the last authentication mode was obtained, using last known authentication mode
No AuthKit account and authentication mode is unknown, fetching authentication mode...
Skipping refresh, authmode is known: %@
Unable to dismiss UI on client side! Error: %@
User forgot their credentials.
User requested a new Apple ID.
User canceled. Aborting auth.
User has incompatible devices. Aborting auth.
Unable to show prompt. Aborting auth.
User request client alternate action. Aborting auth.
User chose to try again, aka retry auth.
Something bad happened! %@
Successfully obtained password. Time for SRP auth.
Asking client to dismiss basic login UI. SRP Passthrough.
Initiating credential recovery
Unable to dismiss UI on client side even though auth is complete! Error: %@
Asking client to dismiss basic login UI. SRP Success.
Prompt should be kept alive, retry auth.
Username was not valid for passwordless auth, requesting more information
Username was not entered.
Password was not entered.
Another attempt at getting basic login info has completed!
Auth attempt %@ has failed. Incrementing counter...
Maximum password auth attempts have been reached.
Attempting to show login error: %@
Starting piggybacking session
Looks like we're dealing with an HSA account.
Attempting passwordless auth with IDMS account %@...
Passwordless auth failed: %@
No continuation capable IDMS account found for Apple ID: %@
Faking IDMS auth success!
SRP auth attempted with an invalid context: %@ - %@ - %@
Secondary action not supported
Using server provided Apple ID.
Using client provided Apple ID.
No username provided, this can't be good...
Disabling PETs because internal setting is on.
Providing short-lived token
Providing identity token
Providing beneficiary setup token
Providing raw password to an internal client.
Providing PRK to an internal client.
Unable to reach client to call shouldContinueWithAuthenticationResults
Asking %@ should continue?
Force-failing auth, because client says to.
Will continue handling successful auth...
Unable to auth with IDMS but client says to suppress error and continue.
Updating AK account...
Will check in with IDMS about push registration...
Failed to check in with IDMS! Error: %@
Successfully checked in with IDMS.
Creating a new authkit account <%{private}@><%{private}@>
Fetched existing AK account: %{private}@
No service IDs were provided, so AKAuthenticationIDMSTokenKey will be left empty.
Fetching tokens for service IDs %@ failed. Error: %@
Fetching tokens for service IDs %@ succeeded!
We have no token for these services: %@. This can't be good.
Context not appropriate for updating persistent tokens. All done then!
BEGIN [%lld]: PersistGrandslamTokens  enableTelemetry=YES 
No AIDA account for altDSID %@ was found. Searching by Apple ID: %@
Creating new AIDA account for Apple ID: %@
Updating AIDA account %@ with properties and tokens.
Successfully saved AIDA account.
Failed to save AIDA account! Error: %@
PersistGrandslamTokens
END [%lld] %fs:PersistGrandslamTokens  Error=%{public,signpost.telemetry:number2,name=Error}d 
Updating token for service with ID %@...
GS service token with ID %@ marked as requiring TouchID.
Failed to update token for %@ in keychain. Error: %@
Cannot perform secondary auth action for non-interactive context.
Secondary action is GS endpoint. Returning the response as-is so that handler can perform the action.
Trying to show server UI for the response.
Context has masterKeyEligible set and server response indicates secondary action is required
Attempting second SRP for masterKeyAsSecondFactor
Secondary action server URL is missing
Asking client to show native second-factor UI...
Escape hatch requested! Dismissing second-factor UI...
Unable to dismiss client-side second-factor UI. Error: %@
Asking client to show escape-hatch server UI...
Done handling second-factor login code. Asking client to dismiss that UI...
Failed to get second-factor. Error: %@
Successfully obtained second-factor code: %@.
Asking client to show alert for error: %@
Login code successfully validated! Updating auth tokens...
Unsupported prompt type encountered: %d
There was no URL in the bag for key: %@
Request response is not of expected class! %@
Server says to show UI at URL key: %@
 ActionKey=%{public,signpost.telemetry:string1,name=ActionKey}@  enableTelemetry=YES 
ServerDrivenSecondaryAction
BEGIN [%lld]: ServerDrivenSecondaryAction  ActionKey=%{public,signpost.telemetry:string1,name=ActionKey}@  enableTelemetry=YES 
END [%lld] %fs:ServerDrivenSecondaryAction  Error=%{public,signpost.telemetry:number2,name=Error}d 
Asking client to start showing native UI
No usable IDMS account for Apple ID: %@
Attempting silent service-token auth with IDMS account %@...
No master token available for silent auth on account %@.
Fetching tokens for service IDs %@ failed! Error: %@
Fetching tokens for service IDs %@ succeeded.
Asked to fetch service token without a serviceID!
Asked to fetch service token without any master token data!
BEGIN [%lld]: FetchGrandslamTokens  enableTelemetry=YES 
Failed to create AppleIDAuthSupportTokenRef from exteral form. Error: %@
FetchGrandslamTokens
END [%lld] %fs:FetchGrandslamTokens  Error=%{public,signpost.telemetry:number2,name=Error}d 
AppleIDAuthSupportCopyAppTokensOptions failed with error: %@
Unable to find info for token with ID: %@
END [%lld] %fs:FetchGrandslamTokens 
User does not have all their credentials, so we're going to iForgot...
iForgot
BEGIN [%lld]: iForgot  enableTelemetry=YES 
END [%lld] %fs:iForgot  Error=%{public,signpost.telemetry:number2,name=Error}d 
iForgot reported success, but no username came back to akd.
iForgot reported success, but no password came back to akd.
iForgot succeeded, and we have a new auth server response!
iForgot succeeded, but we do not have a new auth server response. Doing SRP auth...
iForgot flow failed! Error: %@
Starting iForgot flow...
iForgot flow was triggered by push notification. Will try to use dedicated URL.
There was no iForgot URL in the bag!
Starting repair...
Failed to find matching account for context! Error: %@
There was no repair URL in the bag!
Repair flow reported success, but no auth response came back to akd.
Repair flow succeeded, and we have a new auth server response!
User wants a new Apple ID to auth with...
CreateNewAppleID
BEGIN [%lld]: CreateNewAppleID  enableTelemetry=YES 
END [%lld] %fs:CreateNewAppleID  Error=%{public,signpost.telemetry:number2,name=Error}d 
New Apple ID flow reported success, but no username came back to akd.
New Apple ID flow reported success, but no password came back to akd.
New Apple ID flow reported success, but no auth response came back to akd.
New Apple ID creation succeeded, and we have a new auth server response!
New Apple ID flow failed! Error: %@
Starting Child Account creation flow...
Starting Apple ID creation flow...
There was no creation URL in the bag!
Change password flow failed! Error: %@
Change password flow reported success, but no username came back to akd.
Change password flow reported success, but no password came back to akd.
Change password flow succeeded, and we have a new auth server response!
Change password flow succeeded, but we do not have a new auth server response. Doing SRP auth...
Starting password change flow...
Change password flow started without account!
Could not find URL for changePassword!
Password change flow authentication failed with error, but we'll try anyways: %@
Prompting for piggybacking code
Failed to dismiss second factor UI %@
Piggybacking session failed with error: %@
Server UI came back with error: %@
Piggybacking escape hatch server UI finished, with error: %@
Detected a piggy service type, alias for iCloud
Setting serviceType %@ inUse for account %@
Server auth response did not contain HB token!
Server auth response did not contain CK.
Server auth response did not contain PRK.
Stashing the PRK away for escrowing for account: %@
We got a PRK from the server, but we have no passcode... discarding
Failed to update AuthKit account! Error: %@
We are running in recovery. Skip ACAccount update.
This auth is ephemeral. Skip ACAccount update.
This is a proxy auth. Skip ACAccount update.
This is a child account creation flow. Skip ACAccount update.
Starting to teardown follow ups
This device cannot be an authorization endorser discovery.
Authorization Endorser discovery deactivated.
Authorization Endorser already in progress, ignoring device found. {device=%@}
Initiating a piggybacking flow for transaction id: %@
BEGIN [%lld]: PiggyInitialMessageData  enableTelemetry=YES 
 Error=%{public,signpost.telemetry:number1,name=Error}d 
PiggyInitialMessageData
END [%lld] %fs:PiggyInitialMessageData  Error=%{public,signpost.telemetry:number1,name=Error}d 
Handshake code prompt finished
Handshake request failed with error: %@
Handshake request finished
Waiting for handshake condition with state: %@ - %@ - %d - %d
Finished waiting for handshake condition with state: %@ - %@ - %d - %d
Code entered, but no handshake has been completed
Starting to process handshake results
We got results, finish the flow
User elected to escape before handshake completed
We did not capture a code, completing with escape results
Handshake failed with error: %@
Code collected, starting to wait for: %@
Piggybacking completion with final process response: %@ - %@
Clearing requesting controller state
User entered a new code after verificaiton failure
User succesfully escaped after verification failure
User escaped with erro after verification failure
We failed to handle verification, passing through the failure
Starting to process request message
BEGIN [%lld]: PiggyClientInfoForRequestController  enableTelemetry=YES 
PiggyClientInfoForRequestController
END [%lld] %fs:PiggyClientInfoForRequestController  Error=%{public,signpost.telemetry:number1,name=Error}d 
Requesting session indicated that we are DONE
Passing duplex session
Duplex session creation failure
Requesting session processing failure: %@
Attempting to determine whether we should continue.
Should continue came back with error: %@
Should continue: %d
Initializing requesting session: %@
Using a previously cached code or error: %@ - %@
Validating Code: %@
Login code validated
Code validated with result: %d - %@
PiggyCodeCollect
BEGIN [%lld]: PiggyCodeCollect  enableTelemetry=YES 
Prompting user for piggybacking code
END [%lld] %fs:PiggyCodeCollect  Error=%{public,signpost.telemetry:number1,name=Error}d 
Secret collection failed with error: %@
User wants to continue using current piggybacking session
Captured code: %@ - %@
hide my email: received: %@ (%@)
Overriding Settings landing spot because the Apple ID %@ is used for iCloud.
Opening internal URL: %@
Invalid Apple ID service type %@. Falling back to iCloud.
%@ deallocated
No account found with given altDSID: %@, failing private email lookup
No match found with given altDSID: %@ for key %@
Email found for %@: %@
Insufficient entitlement for altDSID: %@, failing hme fetch
No valid account fount for altDSID: %@, failing hme fetch
Hme [ios] requesting for %@
Insufficient entitlement for context: %@, failing hme context fetch
No valid account found for context: %@, failing hme context fetch
No altDSID in context: %@, failing hme context fetch
Updated context is nil for: %@, failing hme context fetch
Unable to call back to client! Error: %@
Owner/Private access entitlement required but missing for removePrivateEmailKey!
Owner/Private access entitlement present for removePrivateEmailKey!
Owner/Private access entitlement for removePrivateEmailKey error %@
Owner/Private access entitlement for removePrivateEmailKey SUCCESS
Failed to store fetched email (%@) error:%@
hide my email: Owner detected!
Internal request made by internal client? %@
Unable to get Anisette data for %@! Error: %@
Unable to grab attestation for non IDS linkType
Denied access to Anisette data to non-internal client.
Invalid target %@ for fetching Anisette data.
Invalid target %@ for fetching legacy Anisette data.
Client lacks entitlement to provision Anisette!
Invalid target %@ for provisioning Anisette data.
Client lacks entitlement to resync Anisette info!
Invalid target %@ for resyncing Anisette data.
Client lacks entitlement to erase Anisette provisioning!
Invalid target %@ for erasing Anisette data.
Denied access to Signing data to non-entitled client.
Starting to fetch user info for %@
Failed to fetch info with error: %@
Fetched user info for %@
Fetch user info returned apple managed account fetchError: %@
Fetched authMode for %@
Handling push with command AKPushMessageCommandAccountInfoChanged...
Not updating Hide My Email, since primary account does not match
Hide My Email: failed to clear DB on protocol change - %@
Hide My Email: Couldn't upgrade the stored protocol version - %@
Starting to sync private emails list for %@
Hide My Email: Could not create service controller
Hide My Email: update passedVersion=[%@]
Hide My Email: update currentVersion=[%@]
HideMyEmail: Failed to update from push notification, error=%@
IDMS sent reset key to revoke authorization Database
Encountered error while revoking authorization database: %@
Authorization database revoked successfully
We got an appListVersion with the user info new version: %@ 
old version: %@
Unable to fetch authorized application list with error: %@
Unable to refresh because Nil altDSID
Unable to refresh because account name list is nil/empty.
Updating cached properties for Apple ID accounts with altDSID: %@
Username of account %@ is no longer a valid
Updating full list of account names for %@ to: %@
Posting %@ with payload: %@
Authorization requesting user information for request: %@
The Given/Family Name for the current user was not found in the AuthKit account
Application is not requesting email for this authorization early return with userInfo:
Application is requesting email for this authorization fetching email properties from account
This is a Mako Account, Ignoring primary email address verification
Mako account has reachable email addresses
Completed getting UserInformation for Mako account with UserInfo:
Missing primary email verification state.
Completed getting UserInformation for account with UserInfo:
Handling push with command AKPushMessageCommandNotifyTrustedDeviceListChanged...
AKPushMessageCommandNotifyTrustedDeviceListChanged message contained single-operation delta.
AKPushMessageCommandNotifyTrustedDeviceListChanged message contained no delta. Listener should fetch device list.
Hide My Email: got unexpected combination, mappings=%@, hmeListVersion=%@
Failed to fetch private emails list with error: %@
Deleting Hide My Email database
Failed to clear Hide My Email database. Error: %@
Failed to unpack private emails list. Got:%@
Hide My Email: Detected that we must sync with server
Got a bad private-email fetch URL from the bag: %@
Unable to fetch private email. The URL is missing from the URL bag
Context data is nil: %@
received response with error: %@
request completed
Remote view sent a finish event
Remote view sent a user response event: %@
%@ deallocated.
Failed to generate request (%@) with error: %@
Failed to execute request due to authentication error, attempting to refresh tokens and retrying
Failed to generate a Follow Up request with error: %@
Executing request: %@
Successful SRP!
Authentication with server failed! Error: %@
Server told us to retry. Retrying auth...
Auth failed but the server says to try a secondary auth action anyway. Let's how this goes...
Need Anisette resync...
Anisette resync was successful. Retrying auth...
Anisette resync failed. Error: %@
Need Anisette reprovisioning...
Anisette erase was successful. Retrying auth...
Anisette erase failed. Error: %@
URLSwitching needed...
Server requested to switch URL but no URLSwitch data is available, Ignoring URL switch
URLSwitching was successfull retrying SRP With new url
URLSwitching failed with error: %@
Invalid PRK returned from server and we're doing a companion auth. We should clear CK
This is an internal build with Demo mode for Authorization activated, returning 'NOT FOUND' credential state
Credential state request does not contain clientID, reverting to XPC client information.
Setting clientID to %@
Credential state does not contain teamID, reverting to XPC client information.
Setting teamID to %@
AltDSID is included in the State Request,this should only be happening in testing
This device is not trusted, returning 'REVOKED' credential state
Attempting private call to fetch credential state for clientID: %@
Client did not have a teamID and it is not an internal client
Client has internal entitlements and does not have a teamID
Client did not have a application identifier
No applications were found with the provided Client ID: %@
Credential State Request has an ignore flag on the TeamID returning Credential State
No developer teams were found with the Team ID: %@
Application database has been compromised.
Transfer state stored in database with clientID: %@, teamID: %@
Application has a credential, directly returning application's credential state.
Application has a credential but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application has a credential, failed user identifier validation.
Application in transferred state with unsafe matching user identifier (to be verified by IdMS).
Application in transferred state with no matching user identifier.
Application in expired state with unsafe matching user identifier.
Application in expired state with no matching user identifier.
Application in transfered state with strongly matching alternate user identifier.
Application in expired state with strongly matching alternate user identifier.
Application in transferred state with strongly matching user identifier. Directly returning application's credential state.
Application in expired state with strongly matching user identifier. Directly returning application's credential state.
Application in expired state with no matching user identifier but user identifier match is being ignored (for internal credential state) and No match for Team Identifier, directly returning application's credential state.
Application in expired state with no matching user identifier but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application in transferred state with no matching user identifier but user identifier match is being ignored (for internal credential state) and No match for Team Identifier, directly returning application's credential state.
Application in transferred state with no matching user identifier but user identifier match is being ignored (for internal credential state), directly returning application's credential state.
Application state cannot be securely determined.
Fetching developer team with id: %@
Encountered error while fetching developer team: %@
Fetching developer team for client with ID: %@
Unsafe verification failed due to nil User ID.
Performing unsafe verification with User ID: %@
Notification requires authentication prompt.
received response: %@ error: %@
Carousel alert response: %d
Beginning reverse geocode...
Reverse geocode callback called
Reverse geocode results: (Locality: %@ - Administrative Area: %@)
locationName = "%@"
Will display user notification...
Attempted to tear down notification, but it was not found for identifier on watch... %@
Notification responded: %@
Prompting user if if they want to change their password
Suppressing password change prompt due to missing PRK
Will take user to change password flow in Settings...
Using the following URL for change password redirect: %@
Got authentication results back based on the prompt for notification: %@
Authorization Endorser already in progress, ignoring startAuthorization.
Authorization Endorser Started.
Authorization Endorser client failed to activate. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Sending StartAuthorizationRequest. {device=%@, device_ptr=%p}
Ignoring StartAuthorization another endorser is already handling it.
StartAuthorization failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Handling StartAuthorizationResponse. {response=%@}
Failed to unarchive the credential request context. {error=%@, data=%@}
_requirePassword property received as %i, setting to NO
StartAuthorization presenting authorization UI for Rapport request. {credentialRequestContext=%@}
Sending AuthorizationDidFinish. {authorization=%@, device=%@, device_ptr=%p}
Failed to archive AKAuthorization object, failing authorization. {archiveError=%@}
Received AuthorizationDidFinish response. {response=%@, error=%@, device=%@, device_ptr=%p}
Rapport endorser authorization failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Error object won't be sent, failed to archive. {archiveError=%@}
Sending AuthorizationDidFinish. {error=%@, device=%@, device_ptr=%p}
Sending DidStartServerAuthorization event. {device=%@, device_ptr=%p}
Error sending DidStartServerAuthorization Rapport event. {errorDomain=%{public}@, errorCode=%ld, error=%@, device=%@, device_ptr=%p}
Could not dismiss UI! Error: %@
Request to show server UI came back with error: %@
Unable to tear down server UI! Error: %@
Native recovery failed! Error: %@
Unable to tear down native recovery UI! Error: %@
In Sync Bubble. UI is not supported.
Context %@ has AKAppleIDAuthenticationUICapabilityUnknown.
Context cannot display full UI.
Context requires out-of-process UI.
Allowing BG process %@ to perform proxied FG auth.
Client is capable of displaying UI, no surrogate required...
Out-of-process auth, no registered UI surrogate yet...
Background auth, no registered UI surrogate yet...
Client %@ is being permitted to run FG auth, because iCloud settings are inaccessible.
Client %@ is not permitted to use _isProxyingForApp. Falling back to BG behavior.
Client %@ cannot proxy without specifying an immutable Apple ID.
Ignoring FG proxying request because %@ is not currently foreground.
Client %{public}@ requested authentication (via %{public}@).
Client %{public}@ requested authentication.
Will not prompt user about redirect per auth context configuration.
Showing alert failed, user notification is nil!. Error: %d
Unable to reset check in bit due to Accounts error: %@
Unable to respond to message with invalid id
Unable to respond to message without AK account for altDSID %@
Will notify IDMS about teardown response...
XPC activity says that it's time run the liveness check-ins!
XPC activity for liveness check-ins completed!
Done with removeUnusedAndDuplicateAuthKitAccounts
authkit/check-in
We do not have any IDMS accounts to check in with.
Performing liveness check-in with account: %@
Liveness check-in failed for account %@ with error: %@
Liveness check-in succeeded for account %@.
authkit/sign-out
Reporting global signout to IDMS for %@
Reporting signout for service %@ with account %@
Invalid service %@ for reporting
Unable to call back to notification handler! Error: %@
Notifying client (%@) of credential state change %d.
Client (%@) was notified %@ with error %@
Unable to call back to state broadcast handler! Error: %@
Notifying client (%@) of credential state change (%d) for client ID (%@).
Executing query: %@
SQL Exec %@ failed with error %s.
Executing query: %s
Rows changed: %d
Database error detected: %@
Database corruption detected: %@
Wanted to migrate database, but migrator is nil!
Attempting to open database at path: %@
Creating path for database...
%@: Failed to open file at path %@
Database opened at path: %@
Attempting to wipe database at path: %@
Failed to wipe database with error: %@
Database %@ wiped...
Closing database at path: %@
Closed database with result: %d
AuthKit Private entitlement needed to start a custodian initiation request, but calling process doesn't have it
There is no custodian UUID to start a custodian initiation request failing operation
Missing custodian setup token, abandoning idMS custodian setup.
Failed to initiate custodian setup with error: %@
response: %@
Successfully initiated custodian setup for custodianUUID %@
response: %@
data: %@
AuthKit Private entitlement needed to finish a finalize custodianship request, but calling process doesn't have it
Missing custodian UUID, abandoning custodian finalization.
Missing altDSID, abandoning custodian finalization.
Missing identity token, abandoning custodian finalization.
Failed to finalize custodianship with error: %@
Successfully finalize custodianship for custodianUUID %@, response: %@
AuthKit Private entitlement needed to abort a custodian setup request, but calling process doesn't have it
There is no custodian UUID to abort a setup request failing operation
Failed to abort custodian setup with error: %@
Successfully aborted custodian setup for custodianUUID %@, response: %@
AuthKit Private entitlement needed to finish a custodian recovery key update request, but calling process doesn't have it
Missing custodian UUID, abandoning custodian recovery key update.
Missing altDSID, abandoning custodian recovery key update.
Missing wrappingKeyRKC, abandoning custodian recovery key update.
Missing identity token, abandoning custodian recovery key update.
Failed to update recovery key with error: %@
response: %@
Successfully updated recovery key for custodianUUID %@, response: %@
Starting recovery request with context %@
We have an authKit account, request needs to be authenticated
Failed to start custodian account recovery with error: %@
Successfully started an account recovery for account %@, response: %@
AuthKit Private entitlement needed to continue fetching the custodian configuration , but calling process doesn't have it
Failed to start custodian recovery transaction with error: %@
Successfully started an account recovery transaction, response: %@
Failed to verify custodian recovery key with error: %@
Call to fetch custodian recovery token returned with response: %@
Server request failed with error code: %i
AuthKit Private entitlement needed to continue fetching the data recovery key , but calling process doesn't have it
Cannot fetch data recovery key without a session ID or recovery token, failing operation
Cannot fetch data recovery key without an authenticated account, failing operation
Missing identity token, abandoning DataRecoveryKey fetch.
Successfully fetched data recovery key for account with altDSID %@, response: %@
AuthKit Private entitlement needed but calling process doesn't have it
There is no altdsid to send embargo end transaction, failing operation
Cannot send embargo end transaction without a session ID, failing operation
Sending embargo end notification feedback with to urlKey: %@ context: %@
Failed to send embargo end feedback with error: %@
Embargo end feedback call returned with response: %@
Embargo end feedback completed with HTTP status code: %@
There is no owner or custodian information to start a transaction, failing operation
Custodian context does not provide a pushToken, fetching pushToken...
Something really really bad happened, we don't have a push token to start a custodian request
Cannot fetch data recovery key without a session ID, failing operation
There is no url for key AKURLBagKeyTrustedContactsDataSync in the URLBag. No op.
Missing lastDataSyncTimestamp, abandoning idMS performTrustedContactsDataSync.
Missing altDSID, abandoning idMS performTrustedContactsDataSync.
Missing heartbeat token, abandoning idMS performTrustedContactsDataSync.
Failed to performTrustedContactsDataSync with error: %@
response: %@
Successfully performed TrustedContactsDataSync
response: %@
data: %@
Response has orphanedCustodianUUIDs
Response has orphanedBeneficiaryUUIDs
Failed to fetch dataclass rules with error: %@
Missing beneficiary setup short-lived token.
Failed to setup beneficiary (%@) with error: %@
Failed to remove beneficiary (%@) with error: %@
Failed to update beneficiary (%@) with error: %@
Failed to execute request with error: %@
Successfully executed the request with response: %@
Cleared session bag caches
Cleared serialized bag cache
Starting to fetch URL bag... if necessary
FetchURLBag
BEGIN [%lld]: FetchURLBag  enableTelemetry=YES 
END [%lld] %fs:FetchURLBag 
Fetching URL bag...
Bag fetch response code: %@
Bag fetch failed! Error: %@
Bag fetch either timed out or was successful but there was no bag data!
URL bag fetch timed out, cancelling task: %@
There was an error parsing the URL bag! %@
The URL bag was not in dictionary format!
URL bag fetched! %@
Proxied bundle detected (%@), proxying...
Requesting clearance to authorize with context %@...
Authorization cannot proceed because of error: %@
Attempting to authorize request: %@
Completion was called with nil authorization and no error thrown, setting Error Unknown
Error performing auth request (%@): %@
Authorization ended for requestContext: %@
Attempting to get credential state for User identifier: %@
Authorization Credential state not found with error:%@
Failed to revoke upgrade with error: %@
Revoke upgrade completed successfully.
Starting to fetch appleIDAuthorizeHTMLResponseURL
Request for appleIDAuthorizeHTMLResponseURL failed. Error: %@
appleIDAuthorizeHTMLResponseURL response code: %@
Failed to fetch appleIDAuthorizeHTMLResponseURL %@
Cannot fetch primary bundleID for nil primary account
Owner entitlement needed to continue fetching icon, but calling process doesn't have it
Establishing connection with notification center for client (%@).
Establishing connection with state broadcast handler for client (%@).
Handling request with missing account, default to primary AuthKit account
Client owner detected, checking for proxied bundle
Will attempt to perform silent authorization using provided user ID.
Requested to skip auth UI...
Requesting interactive authorization...
Attempting safe SRP for first object...
Silent auth requested with an invalid context... bailing
Requesting password only: %@
Owner detected!
Handling a client with authorization level: %@
Rapport authorization is required for request %@
Rapport request is not eligible for authorization
Proxied bundle identifier entitlement needed to continue saving authorization.
Authorization request missing proxied bundle identifier.
Storing authorization for proxied request (%@).
_getPresentationContextForRequestContext canPerformCredentialRequest returned %@ (with error %@)
AKAuthorizationValidator returned we cannot perform credential request but threw no error, setting error unknown
User information updated
No login choices available and we have a password request in credential requests.
No credential requests.
Checking for genesis event!
Previous credential for client %@ is authorized
Resetting scopes %@ for upgrade from keychain
Previous credential for client %@ is in transfer state
%s Credential state is not authorized
Fetching credentials with: %@
getCredentials returned with %lu credentials
Fetching credentials for proxied associated domains. {proxiedAssociatedDomains=%@}
presenting authorization UI for request %@
Attempting authorization with response %@
Attempted to authorize request of unsupported type %@
Client has special access, populating context with overrides...
Applying request client ID override
Applying request team ID override
Authorization is for an internal application without teamID
shouldContinueWithRequest returning result %@ and error %@
Authorization presentation failed with error: %@
Got a response from user: %@
Got a response from user: %@, userSelection: %@
Processing of user response failed with an unknown error, likely invalid response...
Asking client to show server UI with %@...
Showing server UI with request: %@, %@
Server UI has been skipped.
Server UI did not complete auth successfully! Error: %@
Looks like we're done with server UI!
We do not have an initial auth response to update. Creating one now!
Successfully handled server UI response!
Asking client to dismiss any presented server UI...
Server UI-based authentication has been canceled.
User elected to try again
Unknown action signal from server UI final response!
Creating resource load delegate with auth response
Failed fetching phone information for server UI delegate: %@
Failed to fetch IDS cert info: %@
Fetching resource load delegate
Auth response recieved is for proxy, initializing resource load delegate accordingly
Could not find an existing AuthKit account, so we can't attach account specific headers: %@
Context explicitly does not want GS tokens for server UI, moving on...
Error communicating with client anisette service: %@
Current %@ database version: %i
Migration logic not present (from: %i)
Current schema version undefined!
Current store name undefined!
Resuming XPC listener for Mach service %@...
Fatal error! Unknown XPC listener: %@
Lockscreen state: %@ 
Checking lock state
We are running in recovery. Leaving IDS alone.
We are running in the sync bubble. Leaving IDS alone.
akd is exiting due to SIGTERM
Notified of language change. Will exit when all clear.
Sending request to revoke upgrade txID %@ for teamID/bundleID: %@/%@
Revoke request came back with error: %@
Client %@ lacks a bundle ID!
Processing clearance request: %@
Adding request as pending...
Processing clearance request for Surrogate with ID %@
Denying clearance to client %@ due to pending surrogate auth...
Clearing silent authentication
No authentication in progress, all clear!
Attempting to clear in-app request: %@
Allowing clearance despite pending interactive auths: %@
Denying clearance due to pending daemons: %@
Attempting to determine foreground state for apps: %@
Denying clearance due to another foreground app performing authentication...
Queued end authentication block for %@
Queued end authentication clearance block for %@
Executing end authentication clearance block for %@
Removing %@ from authenticating list
Surrogate context is done
Surrogate auth flow is complete!
Found a pending request: %@
Auth has ended with an error. Skipping queued context update.
End authentication called without any queued clearance handler, we are done
Adding %@ to list of authenticating apps
Adding %@ to list of authenticating daemons
Passing password down to next queued client.
Password populated from cache.
XPC activity says that it's time to update user information
XPC activity for fetch user information complete
No Primary AuthKit account found skipping user information fetch
Succesfully fetched user information for altDSID: %@
Encountered error while fetching user information: %@
We are running in recovery. Leaving APS alone.
We are running in the sync bubble. Leaving APS alone.
Push service starting...
Server did not provide a valid APS environment. Falling back to prod.
Push service started
Updating push delegates: %@
Will notify delegates of notification action: %@
Will query delegates of intent to show notification
Did notify delegates of intent to show notification, suppression elected: %@
Will ask delegates to process push payload
Did ask delegates to process push payload
Server is not providing an APS env override.
Current APS env matches server preference. %@
Active APS env (%@) does not match server-requested env (%@).
The server requested env (%@) is not valid!
Shutting down APS connection with env %@...
Starting new APS connection with env %@...
Shutting down APS connection...
APNS status changed: %d
APNS reconnected
APS says we have a new public token! %@
BEGIN [%lld]: APSTokenEnvironment  enableTelemetry=YES 
APSTokenEnvironment
END [%lld] %fs:APSTokenEnvironment 
BEGIN [%lld]: APSTokenPopulate  enableTelemetry=YES 
APSTokenPopulate
END [%lld] %fs:APSTokenPopulate 
akd/received-push-message
Received push message: %@. Contents: %@
Push message is not for the IDMS topic. Ignoring!
All queued push messages processed, we're done!
Attempting to process %@
Received push command to refresh AKURLBag
Processing a supressed command, tearing down previous HSA2 alerts
Incoming message alert suppressed
Discarding message as ineligible: %@
Push message is not intended for the primary iCloud account, suppressing...
Push message required a passcode, but current device does not have one...
Push message is for an unknown altDSID: %@
Showing alert for message %@.
Notification torn down by server!
User dimissed notification. Nothing further to do.
No action to be done for push command %@.
Processed all known commands, notifying delegates
Trying to generate login code now for %@...
Failed to generate login code. Error: %@
Will display login code notification...
Will display piggy notification...
Tearing down login notification: %@
Will tear down current notification, with ID: %@
Will tear down notification with ID: %@
Will take user to password-reset flow in Settings for %@...
Matched an iCloud account %@ to deliver push
Using the following URL for iForgot redirect: %@
Active login notification id: %@
AKSQLiteQuerry deallocated, not binding parameters
Error binding sql statement with parameter: %@
Parameter type not handled, failing binding statement.
HSA2 repair required: %@
Suppressing piggybacking for non-primary iCloud accounts
Suppressed payload: %@
Suppressing the circle error payload
We received a reply: %@
Processed a pending reply with payload: %@
Starting an accepting session with payload: %@
Failed to get a controller
Accepting session is finished, with error: %@
Orphaned payload: %@
Processing pending reply!
authkit/circle-request
Starting circle request with context: %@
Populating push token
Failed to populate push token
Circle request failed with error: %@
Waiting for reply with timeout: %f
PiggyCircleRequest
BEGIN [%lld]: PiggyCircleRequest  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
authkit/circle-operation
Starting circle operation with context: %@
Waiting... %@ - (%@) - %@
Cancelled piggybacking request: %@
Timeout for piggybacking request: %@
Notifying the other side that we're really done
END [%lld] %fs:PiggyCircleRequest  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
Circle request (%@) completed with response: %@
PiggyExecuteRequest
BEGIN [%lld]: PiggyExecuteRequest  CircleStep=%{public,signpost.telemetry:string1,name=CircleStep}@  enableTelemetry=YES 
END [%lld] %fs:PiggyExecuteRequest  CircleStep=%{public,signpost.telemetry:string2,name=CircleStep}@  Error=%{public,signpost.telemetry:number2,name=Error}d 
No push token available for check-in!
Error getting phone bundle information: %@
Failed to fetch follow up identifiers: %@
Posting active services as: %@
Check-in to server without any active services for account: %@
Starting to fetch app info for %@
Failed to fetch app info with error: %@
Fetched app info for %@
Starting to fetch bundle id for Primary application for serviceID: %@, altDSID: %@
Failed to fetch Primary application with error: %@
Fetched Primary application bundle id for %@
bio metric PET requested.
passcode PET requested.
altDSID is available for auth: %@
Opting into Experimental Mode through SRP
Sending requested cloud partition: %@
Test Account Header Attached
Password available. Will ask for bootstrap password-based auth.
No password, but CK is available. Will ask for ck-based auth.
Master Key avalable.  Will ask for mk-based auth.
Context has provieded UDID for proxied device.
Sending experimental features as %lu
Rapport authorization called with no completion callback. {authorization=%@, errorDomain=%{public}@, errorCode=%ld, error=%@}
AuthorizationRapportClient present UI failed. {errorDomain=%{public}@, errorCode=%ld, error=%@}
Received StartAuthorization. {request=%@, options=%@}
Ignoring StartAuthorization, one is already in progress.
Failed to archive the credential request context. {archiveError=%@}
Received AuthorizationDidFinish. {request=%@, options=%@}
Failed to unarchive error. {unarchiveError=%@}
Failed to unarchive authorization. {unarchiveError=%@}
AKD received push request to create TTR with title: %@
The TTR request was missing a title - message was: %@
AKD received request for TTR on non-internal build, ignoring.
Attempt to perform authentication without an upgrade token!
Attempt to perform authentication without altDSID!
Current context requires interactive auth for Apple ID: %@
Token upgrade requested without a username
Server requests remote UI
Short-lived token upgrade failed: %@
Attempting token upgrade with altDSID %@...
Missing URL bag entry for federated account, attempting IDP flow...
Server says to show UI at IDP URL: %@
Handling IDP response: %@
AKAuthorizationIconManager
AKFollowUpManager
AKAppleIDPushHelperServiceDelegate
NSObject
AKPrivateEmailStoreManager
AKAppleIDUserInformationResponse
AKDeviceListResponse
AKOwnerProxyClient
AKClient
AKAppleIDCodeGenerator
AKGrandSlamResponseHandler
AKPiggybackingRequestProvider
NSSecureCoding
NSCoding
AKAuthenticationServerResponse
AKPiggybackAcceptingController
KCJoiningAcceptSecretDelegate
AKDServerUIContext
AKAuthorizationStoreManager
AKURLRequestProviderImpl
AKURLRequestProvider
AKAuthModeRequestProvider
AKADIProxy
AKAccountRecoveryController
AKSurrogateAuthenticationIDGenerator
AKSatoriController
AKCATiburonPasswordUIReporter
AKFollowUpRequestProvider
AKSecurityUpgradeEligibilityRequestProvider
AKKeychainItem
AKSRPAuthenticationContextHelper
AKCAAuthPromptReporter
AKAuthenticationSurrogateModel
AKAuthenticationSurrogateManager
AKInheritanceRequestProvider
AKAuthorizationStoreMigrator
AKSQLiteMigration
AKCATiburonRequestAttemptReporter
_AKExpiringCacheValue
AKExpiringCache
AKNativeAnisetteService
AKAnisetteServiceProtocol
AKCustodianRequestProvider
AKCATiburonInputUIReporter
AKKeychainItemDescriptor
AKCATiburonRequestReporter
AKPostInstallService
AKCAReporter
AKDeviceListRequestProvider
AKAuthorizationTrafficClearanceRequest
AKAuthorizationTrafficController
_AKMessage
AKCommandMessage
AKReplyMessage
AKPeerIDSAnisetteService
IDSServiceDelegate
AKPrivateEmailStoreMigrator
AKPushMessage
AKFollowUpManagerFactory
AKUserNotificationManager
AKSRPContext
AKCarrierBundlePhoneCertificate
AKCarrierBundleUtilities
AKAppleIDAuthenticationService
AKPiggybackRequestingControllerDelegate
AKDServerUIDelegate
AKAppleIDAuthenticationDaemonProtocol
AKAuthorizationEndorserRapportDiscovery
AKAuthorizationEndorserRapportClientDelegate
AKPiggybackRequestingController
KCJoiningRequestSecretDelegate
AKPrivateEmailPresenter
NSXPCListenerDelegate
AKPrivateEmailPresenterHostProtocol
AKFollowUpControllerServiceProviderImpl
AKFollowUpControllerServiceProvider
AKAuthenticationSettingsLauncher
AKPrivateEmailDaemonService
AKPrivateEmailDaemonProtocol
AKAnisetteProvisioningService
AKAnisetteProvisioningDaemonProtocol
AppleIDSigning
AKAppleIDSigningDaemonProtocol
AKUserInfoController
AKBundleInformation
NSCopying
AKDeviceListController
AKPrivateEmailInformation
AKPrivateEmailServiceController
AKAuthorizationPresenter
AKAuthorizationPresenterHostProtocol
AKServiceControllerImpl
AKServiceController
AKSRPService
AKAuthorizationCredentialStateController
AKPushMessageNotificationPresenter
AKGrandSlamRequestProvider
AKAuthorizationEndorserRapportClient
AKAuthorizationDaemonServiceDelegate
AKAuthenticationUILiaison
AKAuthenticationSurrogateManagerDelegate
AKAppleIDCheckInHelperService
AKAuthorizationNotificationHandler
AKAdaptiveServiceInterface
AKAuthorizationStateBroadcastHandler
AKApplicationAuthorizationController
AKCASatoriReporter
AKCAAuthEventReporter
AKSQLiteExecutor
AKAuthorizationConnectionManager
AKCustodianDaemonService
AKCustodianDaemonProtocol
AKInheritanceInterface
AKInheritanceDaemonService
AKSQLiteHelper
AKURLBagService
NSURLSessionDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
AKURLBagDictionaryProvider
AKCAPiggybackReporter
AKAuthorizationDaemonService
AKAuthorizationDaemonProtocol
AKSRPAuthorizationContextHelper
AKUserNotification
AKDServerUIController
AKClientAnisetteService
AKStoreMigrator
AKDaemonConnectionManager
AKAuthorizationRevokeUpgradeController
AKTrafficClearenceRequest
AKAuthenticationTrafficController
AKAuthorizationListUpdateService
AKAppleIDAuthSupportProxyImpl
AKAppleIDAuthSupportProxy
AKKeychainManager
AKAppleIDPushHelperService
APSConnectionDelegate
AKMasterKeyVerifierRequestProvider
AKSQLiteQuery
AKSRPOperation
AKPiggybackReplyWaiter
AKPiggybackController
AKLivenessRequestProvider
AKCATiburonAuthorizationUIReporter
AKApplicationInformationController
AKSRPContextHelper
AKAuthorizationRapportClient
AKTTRController
AKTokenUpgradeRequestProvider
AKEducationEnterpriseController
@16@0:8
v24@0:8@16
v32@0:8@16@24
v32@0:8@16@?24
@40@0:8@16@24@32
B24@0:8@16
@24@0:8@16
v16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16Q24
v40@0:8@16Q24@32
v24@0:8@"AKPushMessage"16
B24@0:8@"AKPushMessage"16
v32@0:8@"AKPushMessage"16Q24
v40@0:8@"AKPushMessage"16Q24@"NSDictionary"32
v24@0:8@"NSString"16
@32@0:8@16@24
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
B40@0:8@16@24^@32
@"<AKFollowUpItemFactory>"
@"<AKFollowUpProvider>"
@"<AKFollowUpControllerServiceProvider>"
v24@0:8^@16
B32@0:8@16^@24
B36@0:8@16B24^@28
@32@0:8@16^@24
i16@0:8
B28@0:8i16^@20
@"AKSQLiteExecutor"
@"NSArray"
@"AKUserInformation"
@"NSDictionary"
@"AKCredentialRequestContext"
@48@0:8{?=[8I]}16
@24@0:8@?16
@"NSXPCConnection"
@"NSString"
@"BSAuditToken"
@24@0:8^@16
v24@0:8q16
@"AKAppleIDAuthenticationContext"
@"AKCircleRequestContext"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
B28@0:8@16B24
q16@0:8
@"NSNumber"
@"AKMasterToken"
@"AKToken"
@"NSData"
i24@0:8^@16
@"AKCircleRequestPayload"
@"KCJoiningAcceptAccountCircleDelegate"
@"AKCAPiggybackReporter"
@"KCJoiningAcceptSession"
v20@0:8B16
@"AKAuthenticationServerResponse"
@"AKServerRequestConfiguration"
v24@0:8@?16
v40@0:8@16@24@32
@"NSURLRequest"24@0:8^@16
B32@0:8@"NSData"16^@24
@"AKAppleIDAuthenticationContext"16@0:8
@36@0:8@16@24B32
B32@0:8@16@24
@"AKClient"
@"NSURL"
i32@0:8^Q16Q24
i32@0:8Q16Q24
i56@0:8Q16^*24^I32^*40^I48
i24@0:8^v16
i24@0:8Q16
i60@0:8Q16r*24I32^*36^I44^I52
i44@0:8I16r*20I28r*32I40
i20@0:8I16
i68@0:8Q16r*24I32^*36^I44^*52^I60
@"AKAuthenticationUILiaison"
@"AKCASatoriReporter"
v24@0:8B16B20
@"AKKeychainItemDescriptor"
@?16@0:8
@"NSUUID"
v48@0:8@16@24B32B36@?40
v48@0:8@16@?24@32@40
@"<AKAuthenticationSurrogateManagerDelegate>"
@"AKAuthenticationSettingsLauncher"
@"NSLock"
@"AKAccountManager"
@"AKSurrogateAuthenticationIDGenerator"
@"NSObject<OS_dispatch_queue>"
@"AKInheritanceContext"
v24@0:8Q16
v24@0:8@"AKSQLiteExecutor"16
@"NSDate"
v40@0:8@16@24d32
Q24@0:8Q16
v28@0:8B16@?20
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"NSData"16@?<v@?B@"NSError">24
v28@0:8B16@?<v@?@"AKAnisetteData"@"NSError">20
v32@0:8@"NSString"16@?<v@?@"AKAnisetteData"@"NSError">24
v32@0:8@"NSURLRequest"16@?<v@?@"AKAttestationData"@"NSError">24
@32@0:8Q16^@24
@40@0:8@16@24Q32
@24@0:8^{_NSZone=}16
@24@0:8Q16
Q24@0:8@16
d24@0:8Q16
{mach_timebase_info="numer"I"denom"I}
@"AKDeviceListRequestContext"
@"NSMutableArray"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8Q16@24@?32
v52@0:8@16B24@28@36@?44
@"IDSService"
@"APSIncomingMessage"
@"UNUserNotificationCenter"
^{__AppleIDAuthSupportData=}16@0:8
^{__AppleIDAuthSupportData=}
@"CoreTelephonyClient"
v32@0:8@"AKPiggybackRequestingController"16@?<v@?@"NSNumber"@"NSError">24
v40@0:8@"AKPiggybackRequestingController"16@"NSError"24@?<v@?@"NSNumber"@"NSError">32
v40@0:8@"AKPiggybackRequestingController"16@"NSNumber"24@?<v@?@"AKAuthenticationServerResponse"@"NSError">32
v32@0:8@"AKPiggybackRequestingController"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"AKPiggybackRequestingController"16@"NSError"24@?<v@?@"NSDictionary"@"NSError">32
B24@0:8@"NSDictionary"16
v40@0:8@"AKDServerUIContext"16@"NSDictionary"24@?<v@?@"AKAuthenticationServerResponse"@"NSDictionary"@"NSError">32
v44@0:8@16B24q28@?36
v40@0:8@16q24@?32
Vv24@0:8@?16
v36@0:8B16@20@?28
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
v40@0:8Q16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"NSString"24@?<v@?B@"NSError">32
v40@0:8@"NSHTTPURLResponse"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?@"AKAppleIDServerResourceLoadDelegate"@"NSError">24
v44@0:8@"NSString"16B24q28@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v32@0:8@"NSString"16@?<v@?@"AKUserInformation"@"NSError">24
v40@0:8@"NSString"16@"AKUserInformation"24@?<v@?B@"NSError">32
v32@0:8@"AKAppleIDAuthenticationContext"16@?<v@?Q@"NSError">24
v32@0:8@"AKDeviceListRequestContext"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"AKApplicationMetadataInfo"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v48@0:8@"<NSSecureCoding>"16@"NSString"24@"NSString"32@?<v@?B@"NSError">40
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
Vv24@0:8@?<v@?B@"NSError">16
v32@0:8@"AKCircleRequestContext"16@?<v@?@"AKCircleRequestPayload"@"NSError">24
v32@0:8@"AKAccountRecoveryContext"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"NSString"16@"AKAccountRecoveryContext"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSDictionary"16@"AKAppleIDAuthenticationContext"24@?<v@?B@"NSError">32
v32@0:8@"AKFollowUpTearDownContext"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v36@0:8B16@"NSString"20@?<v@?@"NSDictionary"@"NSError">28
v64@0:8Q16@24@32@40@48@?56
v64@0:8@16@24@32@40@48@?56
v80@0:8@16@24@32@40@48@56@64@?72
v76@0:8@16@24@32B40@44@52@60@?68
v64@0:8@16@24@32@40@48^@56
B64@0:8@16@24@32@40@48^@56
v68@0:8@16@24@32B40@44@52@?60
v40@0:8@16Q24@?32
v56@0:8@16@24@32@40@?48
B48@0:8@16@24@32^@40
@"NSObject<AKAppleIDAuthSupportProxy>"
@"AKAuthenticationTrafficController"
@"CUTReachability"
v24@0:8@"AKAuthorizationEndorserRapportClient"16
B24@0:8^@16
@"RPCompanionLinkClient"
@"AKAuthorizationEndorserRapportClient"
@20@0:8B16
@"NSString"20@0:8B16
B32@0:8@"NSString"16^@24
d16@0:8
v24@0:8d16
@"<AKPiggybackRequestingControllerDelegate>"
@"KCJoiningRequestSecretSession"
@"NSError"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v40@0:8@"AKPrivateEmail"16@"NSError"24@?<v@?B@"NSError">32
@"NSXPCListener"
@"<AKServiceController>"24@0:8@"AKAppleIDAuthenticationContext"16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"AKPrivateEmail"@"NSError">32
v32@0:8@"AKPrivateEmailContext"16@?<v@?@"AKPrivateEmailContext"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"AKDevice"16@?<v@?B@"NSError">24
v40@0:8@"NSData"16@"AKDevice"24@?<v@?B@"NSError">32
v36@0:8B16@"AKDevice"20@?<v@?@"AKAnisetteData"@"NSError">28
v40@0:8@"NSString"16@"AKDevice"24@?<v@?@"AKAnisetteData"@"NSError">32
v40@0:8@"AKDevice"16@"NSURLRequest"24@?<v@?@"AKAttestationData"@"NSError">32
@28@0:8@16B24
@"AKNativeAnisetteService"
@"AKAbsintheSigner"
@"AKAttestationSigner"
v32@0:8@"NSData"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSDictionary"@"NSData"@"NSError">32
B36@0:8@16@24B32
@40@0:8@16^B24^@32
@56@0:8@16@24@32Q40@48
v40@0:8@16^@24^@32
v32@0:8@"AKAuthorizationUserResponse"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKAuthorization"16@"NSError"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSData"@"NSError">16
@24@0:8@"<AKURLRequestProvider>"16
v24@0:8@"<AKAuthHandler>"16
v24@0:8@?<v@?@"NSHTTPURLResponse"@"NSData"@"NSError">16
@"<AKURLRequestProvider>"
@"<AKAuthHandler>"
v48@0:8@16^{__CFError=}24@32@?40
v48@0:8^{__CFError=}16@24@32@?40
B32@0:8q16@24
q24@0:8@16
q32@0:8q16@24
@52@0:8@16@24@32@40B48
^{__CFUserNotification=}52@0:8@16@24@32@40B48
v28@0:8@16B24
v32@0:8Q16@24
v36@0:8@16B24@?28
@56@0:8@16@24@32@40@48
^{__CFUserNotification=}56@0:8@16@24@32@40@48
@44@0:8@16B24@28@36
v32@0:8^{__CFUserNotification=}16@?24
B24@0:8Q16
@"AKPushMessage"
v24@0:8@"AKAuthorizationDaemonService"16
@"<AKAuthorizationEndorserRapportClientDelegate>"
@"RPCompanionLinkDevice"
@"AKAuthorizationDaemonService"
v44@0:8@16@24B32@?36
@"NSObject<OS_dispatch_queue>"16@0:8
v44@0:8@"AKAppleIDAuthenticationContext"16@"AKClient"24B32@?<v@?B@"NSError">36
@56@0:8@16@24@32@40q48
@"AKAuthenticationSurrogateManager"
v28@0:8B16@20
v40@0:8q16@24@?32
v32@0:8q16@?24
v32@0:8q16@?<v@?B@"NSError">24
v32@0:8q16@24
v32@0:8q16@"NSString"24
v40@0:8q16@24@32
@"AKAuthorizationStoreManager"
v28@0:8B16Q20
v36@0:8@16B24@28
^{sqlite3=}16@0:8
i24@0:8@16
B32@0:8@16@?24
q32@0:8@16^@24
v24@0:8^{sqlite3_stmt=}16
v32@0:8@16^{sqlite3_stmt=}24
^{sqlite3_stmt=}32@0:8@16^@24
B32@0:8^{sqlite3_stmt=}16^@24
^{sqlite3=}
@"<AKSQLiteMigration>"
@40@0:8@16@24@?32
v32@0:8@"AKCustodianContext"16@?<v@?@"AKCustodianSetupResult"@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"AKCustodianContext"16@?<v@?B@"NSError">24
v32@0:8@"AKCustodianContext"16@?<v@?@"NSString"@"NSError">24
v40@0:8@"AKCustodianContext"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"AKCustodianContext"16@?<v@?@"AKTrustedContactsSyncResult"@"NSError">24
v32@0:8@"AKInheritanceContext"16@?<v@?@"AKBeneficiaryManifest"@"NSError">24
v32@0:8@"AKInheritanceContext"16@?<v@?@"NSError">24
@32@0:8q16^{sqlite3_stmt=}24
i32@0:8@16@24
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@36@0:8B16@20^@28
@"NSDictionary"32@0:8@"NSString"16^@24
@"NSDictionary"36@0:8B16@"NSString"20^@28
v44@0:8B16@20@28@?36
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorization"@"NSError">24
v40@0:8@"AKCredentialRequestContext"16@"AKAuthorizationUserResponse"24@?<v@?@"AKAuthorization"@"NSError">32
v32@0:8@"AKAuthorizationCredentialStateRequest"16@?<v@?q@"NSError">24
v32@0:8@"NSString"16@?<v@?q@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"AKAuthorizationPresentationContext"@"NSError">24
v24@0:8@?<v@?@"NSSet"@"NSError">16
v32@0:8@"AKAuthorizationRevokeUpgradeContext"16@?<v@?B@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"AKCredentialRequestContext"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v40@0:8@"AKAuthorization"16@"AKCredentialRequestContext"24@?<v@?B@"NSError">32
@"<AKAuthorizationClientProtocol>"
@"AKAuthorizationTrafficController"
@"<AKAuthorizationDaemonServiceDelegate>"
@"AKAuthorizationRapportClient"
@"AKAuthorizationEndorserRapportDiscovery"
@"AKAuthorizationContext"
@"<AKDServerUIDelegate>"
@"<AKAnisetteProvisioningClientProtocol>"
@"AAFService"
@"AKExpiringCache"
^{__AppleIDAuthSupportTokenData=}32@0:8@16^@24
@56@0:8^{__AppleIDAuthSupportTokenData=}16@24@32@40^@48
^{__AppleIDAuthSupportTokenData=}32@0:8@"NSData"16^@24
@"NSDictionary"56@0:8^{__AppleIDAuthSupportTokenData=}16@"NSURL"24@"NSArray"32@"NSDictionary"40^@48
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v36@0:8@16@24B32
@"APSConnection"
@"NSObject<OS_dispatch_semaphore>"
@"NSSet"
@"AKPCSAuthPushHandler"
v32@0:8@16^@24
B36@0:8^{sqlite3_stmt=}16@24i32
B40@0:8@16@24^^{__CFError}32
@"NSCondition"
@32@0:8@16@?24
@"AKPiggybackRequestingController"
@"NSOperationQueue"
@"ACAccount"
@"<AKAuthenticationContext>"
@"AKAuthorizationTVServicePresenter"
softlink:r:fw:BaseBoard
softlink:o:fw:CoreFollowUp
softlink:o:fw:KeychainCircle
softlink:r:fw:IDS
softlink:o:fw:SafariFoundation
softlink:o:fw:CoreLocation
softlink:o:fw:Rapport
softlink:o:fw:ApplePushService
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241115</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>akd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.akd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>akd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>13A191</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>8.0</string>
<key>DTSDKBuild</key>
<string>19R327</string>
<key>DTSDKName</key>
<string>watchsimulator8.0.internal</string>
<key>DTXcode</key>
<string>1300</string>
<key>DTXcodeBuild</key>
<string>13A191</string>
<key>MinimumOSVersion</key>
<string>8.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>abs-client</key>
<string>143531244</string>
<key>adi-client</key>
<string>572356293</string>
<key>application-identifier</key>
<string>com.apple.akd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
<string>identity</string>
</array>
<key>com.apple.CompanionLink</key>
<true/>
<key>com.apple.accounts.idms.fullaccess</key>
<true/>
<key>com.apple.appletv.pbs.user-presentation-service-access</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.cdp.walrus</key>
<true/>
<key>com.apple.coreidvd.spi</key>
<true/>
<key>com.apple.keystore.lockassertion</key>
<true/>
<key>com.apple.keystore.sik.access</key>
<true/>
<key>com.apple.mobileactivationd.device-identifiers</key>
<true/>
<key>com.apple.mobileactivationd.spi</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.MobileActivation</key>
<array>
<string>RequestActivationState</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.adid</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.associated-domains</key>
<true/>
<key>com.apple.private.followup</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.anisette</string>
</array>
<key>com.apple.private.ids.phone-number-authentication</key>
<true/>
<key>com.apple.private.ids.remotecredentials</key>
<true/>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.keychain.circle.join</key>
<true/>
<key>com.apple.private.notificationcenter-system</key>
<array>
<dict>
<key>identifier</key>
<string>com.apple.AuthKit</string>
</dict>
</array>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.security.storage.Safari</key>
<true/>
<key>com.apple.private.storagekitd.info</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.Preferences</string>
</array>
<key>com.apple.security.attestation.access</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.SharedWebCredentials</string>
<string>com.apple.fairplayd.versioned</string>
<string>com.apple.mobile.keybagd.xpc</string>
<string>com.apple.mobileactivationd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.nanobuddy</string>
<string>com.apple.pairedsync</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.sharing.Services</key>
<true/>
<key>com.apple.springboard.CFUserNotification</key>
<true/>
<key>com.apple.springboard.activateRemoteAlert</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>com.apple.usermanagerd.persona.background</key>
<true/>
<key>com.apple.usermanagerd.persona.fetch</key>
<true/>
<key>fairplay-client</key>
<string>508119322</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.akd</string>
<string>com.apple.cfnetwork</string>
<string>com.apple.akd.pcsauth</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>akd</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
