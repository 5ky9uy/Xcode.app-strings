GetPixelSizeInBytes
PixelBufferUtils.m
(pixelSizeInBytes % 8) == 0
B56@?0*8Q16Q24Q32Q40Q48
P5 %d %d 255
P5 %lu %lu 255
VISProcessorV%d
VISConfigurationV%d
%@/VideoStabilizationV%d.bundle
/System/Library/VideoProcessors/
v8@?0
waitForIdle
waitForSchedule
prewarmInternal
mtlintercept.waitUntilCompleted
com.apple.coremedia
mtlintercept.waitUntilScheduled
(Error) %@
v16@?0@"<MTLCommandBuffer>"8
%@_%@
FigMetalAllocatorTypeNoAliasing
FigMetalAllocatorTypeBuffer
FigMetalAllocatorTypeHeap
subAllocator ID: %i
mtlallocator.overrideStorageMode
VISIBPProvider
FigMetalExecutionStatus
FigMetalContext
InterceptConfig
CMMTLDevice
MTLDeviceSPI
MTLDevice
NSObject
CMMTLCommandQueue
MTLCommandQueueSPI
MTLCommandQueue
CMMTLCommandBuffer
MTLCommandBufferSPI
MTLCommandBuffer
FigMetalAllocatorMetadata
MTLTexture
MTLResource
FigMetalUtils
FigMetalAllocatorDescriptor
FigMetalTextureDescriptor
FigMetalBufferDescriptor
FigMetalNoAliasingAllocator
FigMetalAllocatorImpl
FigMetalBufferAllocator
FigMetalHeapAllocator
FigMetalAllocator
FigMetalTextureStub
dictionary
setObject:forKeyedSubscript:
numberWithInt:
numberWithUnsignedInt:
stringWithCString:encoding:
pathExtension
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
stringWithUTF8String:
dataWithContentsOfFile:options:error:
initWithDictionary:
numberWithInteger:
length
bytes
_loadVISBundleForVersion:
stringWithFormat:
classNamed:
bundleWithPath:
loadAndReturnError:
VISProcessorForVersion:
VISConfigurationForVersion:
init
failedCommandBuffers
setFailedCommandBuffers:
status
setStatus:
completedCommandBuffersCount
setCompletedCommandBuffersCount:
.cxx_destruct
_completedCommandBuffersCount
_failedCommandBuffers
_status
T@"NSMutableArray",&,N,V_failedCommandBuffers
TQ,N,V_status
Ti,N,V_completedCommandBuffersCount
initWithLevel:
commonInitWithOptionalCommandQueue:
newDefaultLibrary
newDefaultLibraryWithBundle:error:
newLibraryWithData:error:
device
createMetalDevice
newCommandQueue
setBackgroundGPUPriority:
initRangeVertex
executionStatus
setExecutionStatus:
newBufferWithBytes:length:options:
attributes
objectAtIndexedSubscript:
setFormat:
setBufferIndex:
setOffset:
layouts
setStride:
setStepFunction:
commandBuffer
forceCommit
commit
waitUntilCompleted
setLabel:
commitAndWait
waitUntilScheduled
setPipelineLibrary:
newFunctionWithName:constantValues:error:
newFunctionWithName:
newComputePipelineStateWithFunction:error:
insertDebugCaptureBoundary
setGPUPriority:
WriteMetalTextureToFile:texture:mipmapLevel:
mipmapLevelCount
pixelFormat
width
height
getBytes:bytesPerRow:fromRegion:mipmapLevel:
ReadMetalTextureFromFile:texture:mipmapLevel:
replaceRegion:mipmapLevel:withBytes:bytesPerRow:
texture2DDescriptorWithPixelFormat:width:height:mipmapped:
setUsage:
newTextureWithDescriptor:
setPixelFormat:
setWidth:
setHeight:
newTextureWithDescriptor:iosurface:plane:
bindIOSurfaceToMTL2DTexture:pixelFormat:usage:width:height:plane:
buffer
resourceOptions
setResourceOptions:
bufferOffset
bufferBytesPerRow
newLinearTextureWithDescriptor:offset:bytesPerRow:bytesPerImage:
iosurface
iosurfacePlane
setSize:
newHeapWithDescriptor:
countByEnumeratingWithState:objects:count:
intValue
makeAliasable
colorAttachments
setTexture:
renderCommandEncoderWithDescriptor:
endEncoding
newTextureWithDescriptor:offset:bytesPerRow:
initWithbundle:andOptionalCommandQueue:
initWithLibraryData:ofSize:andOptionalCommandQueue:
commandQueue
waitForIdle
waitForSchedule
computePipelineStateFor:constants:
setQueuePriority:
WriteMetalTextureToFile:texture:
ReadMetalTextureFromFile:texture:
CreateMetalTextureFromFile:pixelFormat:usage:width:height:
getPixelSizeInBytes:
bindPixelBufferToMTL2DTexture:pixelFormat:usage:plane:alignmentFactor:
bindPixelBufferToMTL2DTexture:pixelFormat:usage:plane:
bindPixelBufferToMTL2DTexture:pixelFormat:usage:textureSize:plane:
rebindTex:format:usage:plane:xFactor:
prewarmInternalMetalShadersForFormatsList:
create2DTextureFromBuffer:offset:width:height:format:usage:
setDevice:
setCommandQueue:
library
setLibrary:
setCommandBuffer:
pipelineLibrary
allocator
setAllocator:
allowCommandBufferCommitsOnlyByForceCommit
setAllowCommandBufferCommitsOnlyByForceCommit:
fullRangeVertexBuf
setFullRangeVertexBuf:
fullRangeVertexDesc
setFullRangeVertexDesc:
_allowCommandBufferCommitsOnlyByForceCommit
_device
_commandQueue
_library
_commandBuffer
_pipelineLibrary
_allocator
_fullRangeVertexBuf
_fullRangeVertexDesc
T@"<MTLDevice>",&,N,V_device
T@"<MTLCommandQueue>",&,N,V_commandQueue
T@"<MTLLibrary>",&,N,V_library
T@"<MTLCommandBuffer>",&,N,V_commandBuffer
T@"<MTLPipelineLibrarySPI>",&,N,V_pipelineLibrary
T@"FigMetalAllocator",&,N,V_allocator
T@"FigMetalExecutionStatus",&,N
TB,N,V_allowCommandBufferCommitsOnlyByForceCommit
T@"<MTLBuffer>",&,N,V_fullRangeVertexBuf
T@"MTLVertexDescriptor",&,N,V_fullRangeVertexDesc
setWaitUntilCompleted:
setWaitUntilScheduled:
loadExperimentsConfig
interceptLevel
setInterceptLevel:
_waitUntilCompleted
_waitUntilScheduled
_interceptLevel
_executionStatus
Ti,N,V_interceptLevel
T@"FigMetalExecutionStatus",&,N,V_executionStatus
TB,N,V_waitUntilCompleted
TB,N,V_waitUntilScheduled
initWithCMMTLDevice:
initWithCMMTLDevice:maxCommandBufferCount:
initWithCMMTLDevice:descriptor:
respondsToSelector:
selector
invokeWithTarget:
forwardInvocation:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
newCommandQueueWithMaxCommandBufferCount:
heapTextureSizeAndAlignWithDescriptor:
heapBufferSizeAndAlignWithLength:options:
newBufferWithLength:options:
newBufferWithBytesNoCopy:length:options:deallocator:
newDepthStencilStateWithDescriptor:
newSamplerStateWithDescriptor:
newLibraryWithFile:error:
newLibraryWithURL:error:
newLibraryWithSource:options:error:
newLibraryWithSource:options:completionHandler:
newLibraryWithDescriptor:error:
newLibraryWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:error:
newRenderPipelineStateWithDescriptor:options:reflection:error:
newRenderPipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithDescriptor:options:completionHandler:
newComputePipelineStateWithFunction:options:reflection:error:
newComputePipelineStateWithFunction:completionHandler:
newComputePipelineStateWithFunction:options:completionHandler:
newComputePipelineStateWithDescriptor:options:reflection:error:
newComputePipelineStateWithDescriptor:options:completionHandler:
newFence
supportsFeatureSet:
supportsFamily:
supportsTextureSampleCount:
minimumLinearTextureAlignmentForPixelFormat:
minimumTextureBufferAlignmentForPixelFormat:
newRenderPipelineStateWithTileDescriptor:options:reflection:error:
newRenderPipelineStateWithTileDescriptor:options:completionHandler:
getDefaultSamplePositions:count:
newArgumentEncoderWithArguments:
newIndirectCommandBufferWithDescriptor:maxCommandCount:options:
newEvent
newSharedEvent
newSharedEventWithHandle:
newCounterSampleBufferWithDescriptor:error:
sampleTimestamps:gpuTimestamp:
supportsCounterSampling:
newDynamicLibrary:error:
newDynamicLibraryWithURL:error:
newBinaryArchiveWithDescriptor:error:
name
registryID
maxThreadsPerThreadgroup
isLowPower
isHeadless
isRemovable
hasUnifiedMemory
recommendedMaxWorkingSetSize
isDepth24Stencil8PixelFormatSupported
readWriteTextureSupport
argumentBuffersSupport
areRasterOrderGroupsSupported
supports32BitFloatFiltering
supports32BitMSAA
supportsBCTextureCompression
supportsPullModelInterpolation
currentAllocatedSize
maxThreadgroupMemoryLength
maxArgumentBufferSamplerCount
areProgrammableSamplePositionsSupported
maxBufferLength
counterSets
supportsDynamicLibraries
supportsRenderDynamicLibraries
T@"NSString",R
T{?=QQQ},R
lowPower
TB,R,GisLowPower
headless
TB,R,GisHeadless
removable
TB,R,GisRemovable
TB,R
depth24Stencil8PixelFormatSupported
TB,R,GisDepth24Stencil8PixelFormatSupported
rasterOrderGroupsSupported
TB,R,GareRasterOrderGroupsSupported
programmableSamplePositionsSupported
TB,R,GareProgrammableSamplePositionsSupported
T@"NSArray",R
reportLeaks
allowLibrariesFromOtherPlatforms
vendorName
familyName
productName
compilerPropagatesThreadPriority:
_setDeviceWrapper:
_deviceWrapper
deviceSupportsFeatureSet:
deviceOrFeatureProfileSupportsFeatureSet:
minLinearTextureAlignmentForPixelFormat:
newBufferWithIOSurface:
unloadShaderCaches
libraryCacheStats
pipelineCacheStats
copyShaderCacheToPath:
supportsSampleCount:
newCommandQueueWithDescriptor:
newIndirectArgumentBufferLayoutWithStructType:
newArgumentEncoderWithLayout:
supportsTextureWriteRoundingMode:
newIndirectCommandBufferWithDescriptor:maxCount:options:
newIndirectRenderCommandEncoderWithBuffer:
newIndirectComputeCommandEncoderWithBuffer:
newSharedEventWithMachPort:
setResourcesPurgeableState:newState:oldState:count:
newDynamicLibrary:computeDescriptor:error:
newDynamicLibraryWithURL:options:error:
newDynamicLibraryFromURL:error:
loadDynamicLibrariesForComputeDescriptor:error:
loadDynamicLibrariesForComputeDescriptor:options:error:
loadDynamicLibrariesForFunction:insertLibraries:error:
loadDynamicLibrariesForFunction:insertLibraries:options:error:
validateDynamicLibrary:state:error:
validateDynamicLibraryURL:error:
newBinaryLibraryWithOptions:url:error:
supportsBufferlessClientStorageTexture
supportsComputeMemoryBarrier
supportsRenderMemoryBarrier
supportsArgumentBuffersTier2
supportsReadWriteTextureArgumentsTier2
supportsStreamingCodecSignaling
supportsProgrammableSamplePositions
supportsLargeFramebufferConfigs
supportsCustomBorderColor
supports3DBCTextures
supportsPrimitiveRestartOverride
supportsGlobalVariableRelocation
supportsGlobalVariableRelocationRender
supportsGlobalVariableRelocationCompute
supportsTLS
supports32bpcMSAATextures
supportsPlacementHeaps
supportsOpenCLTextureWriteSwizzles
supportsInt64
supportsLateEvalEvent
supportsNonZeroTextureWriteLOD
supportsSharedTextureHandles
supportsBufferPrefetchStatistics
supportsLimitedYUVFormats
supportsNonPrivateDepthStencilTextures
supportsNonPrivateMSAATextures
supportsSharedStorageHeapResources
supportsSharedStorageTextures
supportsLinearTextureFromSharedBuffer
supportsPipelineLibraries
supportsFragmentOnlyEncoders
supportsBufferWithIOSurface
supportsProgrammableBlending
supportsRenderToLinearTextures
supportsMemorylessRenderTargets
supportsFastMathInfNaNPropagation
supportsInvariantVertexPosition
supportsShaderLODAverage
supportsRelaxedTextureViewRequirements
supportsSeparateDepthStencil
supportsGPUStatistics
supportsCompressedTextureViewSPI
supportsRenderTargetTextureRotation
supportsDynamicControlPointCount
supportsIABHashForTools
supportsBinaryArchives
supportsBinaryLibraries
supportsASTCTextureCompression
supportsExtendedYUVFormats
supportsPublicXR10Formats
supportsSRGBwrites
supportsDepthClipMode
supportsPacked32TextureBufferWrites
supports3DASTCTextures
supportsExtendedXR10Formats
supportsFragmentBufferWrites
supportsCountingOcclusionQuery
supportsBaseVertexInstanceDrawing
supportsIndirectDrawAndDispatch
supportsTessellation
supportsReadWriteBufferArguments
supportsArrayOfTextures
supportsArrayOfSamplers
supportsCombinedMSAAStoreAndResolveAction
supportsMutableTier1ArgumentBuffers
supportsSamplerCompareFunction
supportsMSAADepthResolve
supportsMSAAStencilResolve
supportsMSAADepthResolveFilter
supportsGFXIndirectCommandBuffers
supportsCMPIndirectCommandBuffers
supportsIndirectStageInRegion
supportsIndirectTextures
supportsNorm16BCubicFiltering
supportsTextureOutOfBoundsReads
supportsTextureSwizzle
supportsAlphaYUVFormats
supportsMemoryOrderAtomics
supportsQuadGroup
supportsRenderTextureWrites
supportsImageBlocks
supportsTileShaders
supportsImageBlockSampleCoverageControl
supportsNativeHardwareFP16
supportsPostDepthCoverage
supportsMipLevelsSmallerThanBlockSize
supportsNonUniformThreadgroupSize
supportsReadWriteTextureArguments
supportsReadWriteTextureCubeArguments
supportsTextureCubeArray
supportsQuadShufflesAndBroadcast
supportsConcurrentComputeDispatch
supportsRenderPassWithoutRenderTarget
supportsRasterOrderGroups
supportsRasterOrderGroupsColorAttachment
supportsLinearTexture2DArray
supportsNonSquareTileShaders
supportsSeparateVisibilityAndShadingRate
supports2DLinearTexArraySPI
supportsLayeredRendering
supportsViewportAndScissorArray
supportsIndirectTessellation
supportsMSAAStencilResolveFilter
supportsStencilFeedback
supportsFP32TessFactors
supportsUnalignedVertexFetch
supportsSIMDGroup
supportsShaderMinLODClamp
supportsSIMDShufflesAndBroadcast
supportsWritableArrayOfTextures
supportsIndirectWritableTextures
supportsStatefulDynamicLibraries
supportsBlackOrWhiteSamplerBorderColors
supportsMirrorClampToEdgeSamplerMode
supportsSIMDReduction
supportsDepthClipModeClampExtended
supportsTexture2DMultisampleArray
supportsForceSeamsOnCubemaps
supportsFloat16BCubicFiltering
supportsFloat16InfNanFiltering
supportsCommandBufferJump
supportsStackOverflowErrorCode
deviceCreationFlags
areGPUAssertionsEnabled
setGPUAssertionsEnabled:
commandBufferErrorOptions
setCommandBufferErrorOptions:
targetDeviceInfo
targetDeviceArchitecture
halfFPConfig
singleFPConfig
doubleFPConfig
metalAssertionsEnabled
setMetalAssertionsEnabled:
featureProfile
limits
maxFramebufferStorageBits
linearTextureArrayAlignmentBytes
linearTextureArrayAlignmentSlice
maxTileBuffers
maxTileTextures
maxTileSamplers
maxTileInlineDataSize
minTilePixels
maxColorAttachments
maxVertexAttributes
maxVertexBuffers
maxVertexTextures
maxVertexSamplers
maxVertexInlineDataSize
maxInterpolants
maxFragmentBuffers
maxFragmentTextures
maxFragmentSamplers
maxFragmentInlineDataSize
maxComputeBuffers
maxComputeTextures
maxComputeSamplers
maxComputeInlineDataSize
maxComputeLocalMemorySizes
maxTotalComputeThreadsPerThreadgroup
maxComputeThreadgroupMemory
maxLineWidth
maxPointSize
maxVisibilityQueryOffset
minConstantBufferAlignmentBytes
minBufferNoCopyAlignmentBytes
maxTextureWidth1D
maxTextureWidth2D
maxTextureHeight2D
maxTextureWidth3D
maxTextureHeight3D
maxTextureDepth3D
maxTextureDimensionCube
maxTextureLayers
linearTextureAlignmentBytes
iosurfaceTextureAlignmentBytes
iosurfaceReadOnlyTextureAlignmentBytes
deviceLinearTextureAlignmentBytes
deviceLinearReadOnlyTextureAlignmentBytes
maxFunctionConstantIndices
maxComputeThreadgroupMemoryAlignmentBytes
maxInterpolatedComponents
maxTessellationFactor
maxIndirectBuffers
maxIndirectTextures
maxIndirectSamplers
maxIndirectSamplersPerDevice
maxFenceInstances
maxViewportCount
maxCustomSamplePositions
maxTextureBufferWidth
maxComputeAttributes
maxPredicatedNestingDepth
maxConstantBufferArguments
supportPriorityBand
sharedMemorySize
dedicatedMemorySize
indirectArgumentBufferCapabilities
isFloat32FilteringSupported
isMsaa32bSupported
defaultTextureWriteRoundingMode
isPlacementHeapSupported
pluginData
setPluginData:
registerDevices
supportsPrimitiveType:
indirectArgumentBufferDecodingData
setIndirectArgumentBufferDecodingData:
setupMPSFunctionTable:
resourcePatchingTypeForResourceType:
reserveResourceIndicesForResourceType:indices:indexCount:
reserveGPUAddressRange:
newBufferWithLength:options:gpuAddress:
newBufferWithBytes:length:options:gpuAddress:
newBufferWithBytesNoCopy:length:options:gpuAddress:deallocator:
newBufferWithDescriptor:
newLateEvalEvent
mapShaderSampleBufferWithBuffer:capacity:size:
unmapShaderSampleBuffer
newComputePipelineStateWithDescriptor:error:
newComputePipelineStateWithDescriptor:completionHandler:
newRenderPipelineStateWithTileDescriptor:error:
newRenderPipelineStateWithTileDescriptor:completionHandler:
newFunctionWithGLCoreIR:functionType:
newFunctionWithGLCoreIR:inputsDescription:functionType:
newFunctionWithGLESIR:functionType:
newFunctionWithGLESIR:inputsDescription:functionType:
newFunctionWithGLIR:functionType:
newFunctionWithGLIR:inputsDescription:functionType:
getShaderCacheKeys
newIndirectArgumentEncoderWithArguments:
newComputePipelineStateWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithDAG:functions:error:
newLibraryWithGraphs:functions:error:
newLibraryWithGraphsSPI:functions:error:
newLibraryWithDescriptorSPI:error:
newDagStringWithGraphs:
newLibraryWithImageFilterFunctionsSPI:imageFilterFunctionInfo:error:
newLibraryWithCIFilters:imageFilterFunctionInfo:error:
newLibraryWithCIFiltersForComputePipeline:imageFilterFunctionInfo:error:
newPipelineLibraryWithFilePath:error:
startCollectingPipelineDescriptors
startCollectingPipelineDescriptorsUsingPrefixForNames:
endCollectingPipelineDescriptors
serializeRenderPipelineDescriptor:
serializeComputePipelineDescriptor:
newRenderPipelineDescriptorWithSerializedData:deserializationContext:
newComputePipelineDescriptorWithSerializedData:deserializationContext:
serializeStructType:
serializeStructType:version:
newTextureWithBytesNoCopy:length:descriptor:deallocator:
newTextureLayoutWithDescriptor:isHeapOrBufferBacked:
newIndirectArgumentEncoderWithLayout:
newResourceGroupFromResources:count:
deserializeCompileTimeStats:addToDictionary:
shaderDebugInfoCaching
setShaderDebugInfoCaching:
isQuadDataSharingSupported
TB,R,N
gpuAssertionsEnabled
TB,GareGPUAssertionsEnabled,SsetGPUAssertionsEnabled:
TQ,N
Tr^{MTLTargetDeviceArch=QI*},R
T@"MTLTargetDeviceArchitecture",R
TB,N
Tr^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ},R
Tf,R
T{IndirectArgumentBufferCapabilities=b1b1b1b29},R
quadDataSharingSupported
TB,R,GisQuadDataSharingSupported
float32FilteringSupported
TB,R,GisFloat32FilteringSupported
msaa32bSupported
TB,R,GisMsaa32bSupported
Tq,R
placementHeapSupported
TB,R,GisPlacementHeapSupported
T@"NSDictionary",C,N
forwardingTargetForSelector:
interceptConfig
setInterceptConfig:
_interceptConfig
T@"InterceptConfig",&,N,V_interceptConfig
initWithCMMTLCommandQueue:unretained:
commandBufferWithDescriptor:
commandBufferWithUnretainedReferences
label
T@"NSString",C
T@"<MTLDevice>",R
getGPUPriority
setGPUPriority:offset:
getBackgroundGPUPriority
setBackgroundGPUPriority:offset:
setSubmissionQueue:
setCompletionQueue:
finish
backgroundTrackingPID
setBackgroundTrackingPID:
maxCommandBufferCount
qosLevel
commitQueue
commitSynchronously
completionQueue
disableCrossQueueHazardTracking
skipRender
setSkipRender:
executionEnabled
setExecutionEnabled:
isOpenGLQueue
isProfilingEnabled
setProfilingEnabled:
availableCounters
availableCountersAndDict
requestCounters:
requestCounters:withIndex:
getRequestedCounters
subdivideCounterList:
addPerfSampleHandler:
counterInfo
isStatEnabled
setStatEnabled:
getStatOptions
setStatOptions:
getStatLocations
setStatLocations:
T@"NSObject<OS_dispatch_queue>",R
profilingEnabled
TB,GisProfilingEnabled
StatEnabled
TB,N,GisStatEnabled
StatOptions
TQ,N,GgetStatOptions
StatLocations
TQ,N,GgetStatLocations
_cmDevice
addObject:
error
localizedDescription
addCompletedHandler:
enqueue
addScheduledHandler:
presentDrawable:
presentDrawable:atTime:
blitCommandEncoder
computeCommandEncoderWithDescriptor:
blitCommandEncoderWithDescriptor:
computeCommandEncoder
computeCommandEncoderWithDispatchType:
encodeWaitForEvent:value:
encodeSignalEvent:value:
parallelRenderCommandEncoderWithDescriptor:
pushDebugGroup:
popDebugGroup
retainedReferences
errorOptions
kernelStartTime
kernelEndTime
logs
GPUStartTime
GPUEndTime
T@"<MTLCommandQueue>",R
Td,R
T@"<MTLLogContainer>",R
T@"NSError",R
encodeDashboardTagForResourceGroup:
encodeDashboardFinalizeForResourceGroup:dashboard:value:forIndex:
encodeDashboardFinalizeForResourceGroup:dashboard:values:indices:count:
addPurgedResource:
addPurgedHeap:
profilingResults
userDictionary
debugBufferContentsWithLength:
sampledRenderCommandEncoderWithDescriptor:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithProgramInfoBuffer:capacity:
sampledComputeCommandEncoderWithDispatchType:programInfoBuffer:capacity:
sampledComputeCommandEncoderWithDescriptor:programInfoBuffer:capacity:
debugCommandEncoder
commitAndHold
commitAndWaitUntilSubmitted
setProtectionOptions:
protectionOptions
encodeWaitForEvent:value:timeout:
setResourceGroups:count:
dropResourceGroups:count:
encodeCacheHintTag:resourceGroups:count:
encodeCacheHintFinalize:resourceGroups:count:
getListIndex
globalTraceObjectID
listIndex
TQ,R,N,GgetListIndex
T@"NSDictionary",R
T@"NSMutableDictionary",R,N
_cmLabel
_cmCommandQueue
_unretained
substringToIndex:
initWithFigMetalAllocator:
_refCount
_size
setPurgeableState:
isAliasable
cpuCacheMode
storageMode
hazardTrackingMode
heap
heapOffset
allocatedSize
T@"<MTLHeap>",R
getBytes:bytesPerRow:bytesPerImage:fromRegion:mipmapLevel:slice:
replaceRegion:mipmapLevel:slice:withBytes:bytesPerRow:bytesPerImage:
newTextureViewWithPixelFormat:
newTextureViewWithPixelFormat:textureType:levels:slices:
newTextureViewWithPixelFormat:textureType:levels:slices:swizzle:
rootResource
parentTexture
parentRelativeLevel
parentRelativeSlice
textureType
depth
sampleCount
arrayLength
usage
isFramebufferOnly
allowGPUOptimizedContents
swizzle
T@"<MTLResource>",R
T@"<MTLTexture>",R
T@"<MTLBuffer>",R
T^{__IOSurface=},R
framebufferOnly
TB,R,GisFramebufferOnly
T{?=CCCC},R,N
makeTextureAliasable:
makeBufferAliasable:
computeLinearTextureStride:format:
initWithDevice:
texture2DFromBuffer:width:height:format:offset:usage:
T@"<MTLDevice>",R,N,V_device
memSize
setMemSize:
wireMemory
setWireMemory:
allowFallback
setAllowFallback:
compressionLevel
setCompressionLevel:
externalBuffer
setExternalBuffer:
_wireMemory
_allowFallback
_compressionLevel
_label
_memSize
_resourceOptions
_externalBuffer
T@"<MTLBuffer>",&,N,V_externalBuffer
T@"NSString",&,N,V_label
TQ,N,V_memSize
TQ,N,V_resourceOptions
TB,N,V_wireMemory
TB,N,V_allowFallback
Ti,N,V_compressionLevel
desc
setDepth:
setTextureType:
setArrayLength:
setSampleCount:
setMipmapLevelCount:
compressionMode
setCompressionMode:
isLinear
setIsLinear:
initFromDescriptor:
setDesc:
_isLinear
_desc
TB,N,V_isLinear
T@"MTLTextureDescriptor",&,N,V_desc
setLength:
options
setOptions:
_length
_options
TQ,N,V_length
TQ,N,V_options
initWithMetalUtils:
setupWithDescriptor:
getSizeAndAlignForDescriptor:
getSizeAndAlignForBufferDescriptor:
newBufferWithDescriptor:offset:
newTextureWithDescriptor:offset:
textureOffset:
bufferOffset:
purgeResources
hasCreatedTexture:
alignment
utils
TQ,R,N
T@"FigMetalUtils",R,N
_alignment
_utils
TQ,R,N,V_alignment
TQ,R,N,V_memSize
T@"FigMetalUtils",R,N,V_utils
numberWithUnsignedLong:
dictionaryWithObjects:forKeys:count:
_buffer
setType:
newBufferWithLength:options:offset:
_heap
reset
dealloc
newTextureDescriptor
newBufferDescriptor
compressionFeedback
initWithDevice:allocatorType:
maxContiguousFreeSize
usedSize
largestOccupiedOffset
newTextureDescriptor:
newBufferDescriptor:
addExternalMetalBuffer:atSubAllocatorID:
newTextureWithDescriptor:subAllocatorID:
newBufferWithDescriptor:subAllocatorID:
usedSize:
largestOccupiedOffset:
memSize:
reset:
purgeResources:
usedSizeAll
allocatorType
_storage
_rangeAllocator
_texDesc
_bufDesc
_isExternalMemory
subAllocator
_allowFallBack
_allocatorType
_largestOccupiedOffset
TQ,R,N,VusedSize
TQ,R,N,V_largestOccupiedOffset
Ti,R,N,V_allocatorType
TQ,R,N,V_resourceOptions
Ti,R,N,V_compressionLevel
initWithDescriptor:
offset
_offset
_width
_height
_depth
_usage
_textureType
_pixelFormat
_sampleCount
_arrayLength
_mipmapLevelCount
T@"NSString",C,V_label
TQ,N,V_offset
TQ,N,V_width
TQ,N,V_height
TQ,N,V_pixelFormat
TQ,N,V_usage
TQ,R,V_textureType
TQ,R,V_depth
TQ,R,V_mipmapLevelCount
TQ,R,V_sampleCount
TQ,R,V_arrayLength
@20@0:8I16
@16@0:8
v24@0:8@16
Q16@0:8
v24@0:8Q16
i16@0:8
v20@0:8i16
v16@0:8
@"NSMutableArray"
@32@0:8@16@24
@40@0:8*16Q24@32
i24@0:8@16
i20@0:8i16
B32@0:8r*16@24
B36@0:8r*16@24i32
@56@0:8r*16Q24Q32Q40Q48
Q24@0:8Q16
@56@0:8^{__CVBuffer=}16Q24Q32Q40Q48
@48@0:8^{__CVBuffer=}16Q24Q32Q40
@64@0:8^{__CVBuffer=}16Q24Q32{CGSize=dd}40Q56
@64@0:8^{__IOSurface=}16Q24Q32Q40Q48Q56
@48@0:8@16Q24Q32i40i44
@56@0:8@16Q24i32i36Q40Q48
B16@0:8
v20@0:8B16
@"<MTLDevice>"
@"<MTLCommandQueue>"
@"<MTLLibrary>"
@"<MTLCommandBuffer>"
@"<MTLPipelineLibrarySPI>"
@"FigMetalAllocator"
@"<MTLBuffer>"
@"MTLVertexDescriptor"
@20@0:8i16
@"FigMetalExecutionStatus"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8Q16
{?=QQ}24@0:8@16
{?=QQ}32@0:8Q16Q24
@24@0:8@16
@32@0:8Q16Q24
@40@0:8r^v16Q24Q32
@48@0:8^v16Q24Q32@?40
@40@0:8@16^{__IOSurface=}24Q32
@32@0:8@16^@24
@40@0:8@16@24^@32
v40@0:8@16@24@?32
v32@0:8@16@?24
@48@0:8@16Q24^@32^@40
v40@0:8@16Q24@?32
B24@0:8Q16
B24@0:8q16
v32@0:8^{?=ff}16Q24
@40@0:8@16Q24Q32
v32@0:8^Q16^Q24
{?=QQQ}16@0:8
@"<MTLCommandQueue>"16@0:8
@"<MTLCommandQueue>"24@0:8Q16
{?=QQ}24@0:8@"MTLTextureDescriptor"16
@"<MTLHeap>"24@0:8@"MTLHeapDescriptor"16
@"<MTLBuffer>"32@0:8Q16Q24
@"<MTLBuffer>"40@0:8r^v16Q24Q32
@"<MTLBuffer>"48@0:8^v16Q24Q32@?<v@?^vQ>40
@"<MTLDepthStencilState>"24@0:8@"MTLDepthStencilDescriptor"16
@"<MTLTexture>"24@0:8@"MTLTextureDescriptor"16
@"<MTLTexture>"40@0:8@"MTLTextureDescriptor"16^{__IOSurface=}24Q32
@"<MTLSamplerState>"24@0:8@"MTLSamplerDescriptor"16
@"<MTLLibrary>"16@0:8
@"<MTLLibrary>"32@0:8@"NSBundle"16^@24
@"<MTLLibrary>"32@0:8@"NSString"16^@24
@"<MTLLibrary>"32@0:8@"NSURL"16^@24
@"<MTLLibrary>"32@0:8@"NSObject<OS_dispatch_data>"16^@24
@"<MTLLibrary>"40@0:8@"NSString"16@"MTLCompileOptions"24^@32
v40@0:8@"NSString"16@"MTLCompileOptions"24@?<v@?@"<MTLLibrary>"@"NSError">32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptor"16^@24
v32@0:8@"MTLStitchedLibraryDescriptor"16@?<v@?@"<MTLLibrary>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLRenderPipelineDescriptor"16^@24
@"<MTLRenderPipelineState>"48@0:8@"MTLRenderPipelineDescriptor"16Q24^@32^@40
v32@0:8@"MTLRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
v40@0:8@"MTLRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"32@0:8@"<MTLFunction>"16^@24
@"<MTLComputePipelineState>"48@0:8@"<MTLFunction>"16Q24^@32^@40
v32@0:8@"<MTLFunction>"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
v40@0:8@"<MTLFunction>"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLComputePipelineState>"48@0:8@"MTLComputePipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLComputePipelineDescriptor"16Q24@?<v@?@"<MTLComputePipelineState>"@"MTLComputePipelineReflection"@"NSError">32
@"<MTLFence>"16@0:8
@"<MTLRenderPipelineState>"48@0:8@"MTLTileRenderPipelineDescriptor"16Q24^@32^@40
v40@0:8@"MTLTileRenderPipelineDescriptor"16Q24@?<v@?@"<MTLRenderPipelineState>"@"MTLRenderPipelineReflection"@"NSError">32
@"<MTLArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLIndirectCommandBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLEvent>"16@0:8
@"<MTLSharedEvent>"16@0:8
@"<MTLSharedEvent>"24@0:8@"MTLSharedEventHandle"16
@"<MTLCounterSampleBuffer>"32@0:8@"MTLCounterSampleBufferDescriptor"16^@24
@"<MTLDynamicLibrary>"32@0:8@"<MTLLibrary>"16^@24
@"<MTLDynamicLibrary>"32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"32@0:8@"MTLBinaryArchiveDescriptor"16^@24
@"NSArray"16@0:8
@24@0:8^{__IOSurface=}16
{?=II}16@0:8
B44@0:8^@16Q24^Q32i40
@40@0:8@16Q24^@32
@48@0:8@16@24Q32^@40
B36@0:8@16B24^@28
B32@0:8@16^@24
@40@0:8Q16@24^@32
r^{MTLTargetDeviceArch=QI*}16@0:8
r^{?=IIIIIIIIIIIIIIIIIIIIIIIIIIffIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIQ}16@0:8
f16@0:8
{IndirectArgumentBufferCapabilities=b1b1b1b29}16@0:8
q16@0:8
v24@0:8^{MPSFunctionTable=}16
v40@0:8Q16^Q24Q32
B32@0:8{_NSRange=QQ}16
@40@0:8Q16Q24Q32
@48@0:8r^v16Q24Q32Q40
@56@0:8^v16Q24Q32Q40@?48
B40@0:8^{?=III}16Q24Q32
@32@0:8^v16Q24
@40@0:8^v16@24Q32
^v16@0:8
@40@0:8@16r^{?=BQ^{?}}24^@32
@28@0:8@16I24
@48@0:8^v16Q24@32@?40
@28@0:8@16B24
@32@0:8r^@16Q24
v32@0:8@16@24
v24@0:8@"<MTLDeviceSPI>"16
@"<MTLDevice>"16@0:8
@"<MTLBuffer>"24@0:8^{__IOSurface=}16
B24@0:8@"NSString"16
@"<MTLCommandQueue>"24@0:8@"MTLCommandQueueDescriptor"16
@"_MTLIndirectArgumentBufferLayout"24@0:8@"MTLStructType"16
@"<MTLArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLBuffer>"40@0:8@"MTLIndirectCommandBufferDescriptor"16Q24Q32
@"<MTLIndirectRenderCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLIndirectComputeCommandEncoder>"24@0:8@"<MTLBuffer>"16
@"<MTLSharedEvent>"20@0:8I16
@"<MTLDynamicLibrary>"40@0:8@"<MTLLibrary>"16@"MTLComputePipelineDescriptor"24^@32
@"<MTLDynamicLibrary>"40@0:8@"NSURL"16Q24^@32
@"NSArray"32@0:8@"MTLComputePipelineDescriptor"16^@24
@"NSArray"40@0:8@"MTLComputePipelineDescriptor"16Q24^@32
@"NSArray"40@0:8@"MTLFunction"16@"NSArray"24^@32
@"NSArray"48@0:8@"MTLFunction"16@"NSArray"24Q32^@40
B36@0:8@"<MTLLibrary>"16B24^@28
B32@0:8@"NSURL"16^@24
@"<MTLBinaryArchive>"40@0:8Q16@"NSURL"24^@32
@"MTLTargetDeviceArchitecture"16@0:8
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
@"NSObject<OS_dispatch_data>"16@0:8
v24@0:8@"NSObject<OS_dispatch_data>"16
@"<MTLBuffer>"40@0:8Q16Q24Q32
@"<MTLBuffer>"48@0:8r^v16Q24Q32Q40
@"<MTLBuffer>"56@0:8^v16Q24Q32Q40@?<v@?^vQ>48
@"<MTLBuffer>"24@0:8@"MTLBufferDescriptor"16
@"<MTLLateEvalEvent>"16@0:8
@"<MTLComputePipelineState>"32@0:8@"MTLComputePipelineDescriptor"16^@24
v32@0:8@"MTLComputePipelineDescriptor"16@?<v@?@"<MTLComputePipelineState>"@"NSError">24
@"<MTLRenderPipelineState>"32@0:8@"MTLTileRenderPipelineDescriptor"16^@24
v32@0:8@"MTLTileRenderPipelineDescriptor"16@?<v@?@"<MTLRenderPipelineState>"@"NSError">24
@"<MTLFunction>"32@0:8^v16Q24
@"<MTLFunction>"40@0:8^v16@"NSObject<OS_dispatch_data>"24Q32
@"<MTLIndirectArgumentEncoder>"24@0:8@"NSArray"16
@"<MTLComputePipelineState>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLLibrary>"40@0:8@"NSString"16@"NSArray"24^@32
@"<MTLLibrary>"40@0:8@"NSArray"16@"NSArray"24^@32
@"<MTLLibrary>"32@0:8@"MTLStitchedLibraryDescriptorSPI"16^@24
@"NSString"24@0:8@"NSArray"16
@"<MTLLibrary>"40@0:8@"NSArray"16r^{?=BQ^{?}}24^@32
@"<MTLPipelineLibrarySPI>"32@0:8@"NSString"16^@24
v24@0:8@"NSString"16
@"NSData"16@0:8
@"NSObject<OS_dispatch_data>"24@0:8@"MTLRenderPipelineDescriptor"16
@"NSObject<OS_dispatch_data>"24@0:8@"MTLComputePipelineDescriptor"16
@"MTLRenderPipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"MTLComputePipelineDescriptor"32@0:8@"NSObject<OS_dispatch_data>"16@"<MTLDeserializationContext>"24
@"NSObject<OS_dispatch_data>"24@0:8@"MTLStructType"16
@"NSObject<OS_dispatch_data>"28@0:8@"MTLStructType"16I24
@"<MTLTexture>"48@0:8^v16Q24@"MTLTextureDescriptor"32@?<v@?^vQ>40
@"<MTLTextureLayout>"28@0:8@"MTLTextureDescriptor"16B24
@"<MTLIndirectArgumentEncoder>"24@0:8@"_MTLIndirectArgumentBufferLayout"16
@"<MTLResourceGroupSPI>"32@0:8r^@16Q24
v32@0:8@"NSObject<OS_dispatch_data>"16@"NSMutableDictionary"24
@"<MTLDeviceSPI>"
@"InterceptConfig"
@"<MTLCommandBuffer>"16@0:8
@"<MTLCommandBuffer>"24@0:8@"MTLCommandBufferDescriptor"16
B28@0:8Q16S24
i32@0:8@16Q24
v24@0:8@?16
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"NSObject<OS_dispatch_queue>"16@0:8
i24@0:8@"NSArray"16
i32@0:8@"NSArray"16Q24
@"NSArray"24@0:8@"NSArray"16
v24@0:8@?<v@?@"<MTLCommandBuffer>"@"NSData"Q>16
@32@0:8@16Q24
@"CMMTLDevice"
v32@0:8@16d24
v32@0:8@16Q24
d16@0:8
v24@0:8@?<v@?@"<MTLCommandBuffer>">16
v24@0:8@"<MTLDrawable>"16
v32@0:8@"<MTLDrawable>"16d24
@"<MTLBlitCommandEncoder>"16@0:8
@"<MTLRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLComputeCommandEncoder>"24@0:8@"MTLComputePassDescriptor"16
@"<MTLBlitCommandEncoder>"24@0:8@"MTLBlitPassDescriptor"16
@"<MTLComputeCommandEncoder>"16@0:8
@"<MTLComputeCommandEncoder>"24@0:8Q16
v32@0:8@"<MTLEvent>"16Q24
@"<MTLParallelRenderCommandEncoder>"24@0:8@"MTLRenderPassDescriptor"16
@"<MTLLogContainer>"16@0:8
@"NSError"16@0:8
v48@0:8@16Q24Q32Q40
v56@0:8@16Q24r^Q32r^Q40Q48
^v24@0:8^Q16
@40@0:8@16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
v36@0:8@16Q24I32
v32@0:8r^@16Q24
v40@0:8Q16r^@24Q32
v24@0:8@"<MTLResourceGroupSPI>"16
v48@0:8@"<MTLResourceGroupSPI>"16Q24Q32Q40
v56@0:8@"<MTLResourceGroupSPI>"16Q24r^Q32r^Q40Q48
v24@0:8@"<MTLResource>"16
v24@0:8@"<MTLHeap>"16
@"NSMutableDictionary"16@0:8
@"<MTLRenderCommandEncoder>"40@0:8@"MTLRenderPassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"32@0:8^(?={?=b8b24IQQ}{?=b8b24IQQ})16Q24
@"<MTLComputeCommandEncoder>"40@0:8Q16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLComputeCommandEncoder>"40@0:8@"MTLComputePassDescriptor"16^(?={?=b8b24IQQ}{?=b8b24IQQ})24Q32
@"<MTLDebugCommandEncoder>"16@0:8
v36@0:8@"<MTLEvent>"16Q24I32
@"NSMutableString"
@"CMMTLCommandQueue"
@"<MTLHeap>"16@0:8
v104@0:8^v16Q24Q32{?={?=QQQ}{?=QQQ}}40Q88Q96
v104@0:8{?={?=QQQ}{?=QQQ}}16Q64Q72r^v80Q88Q96
v88@0:8^v16Q24{?={?=QQQ}{?=QQQ}}32Q80
v88@0:8{?={?=QQQ}{?=QQQ}}16Q64r^v72Q80
@64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
^{__IOSurface=}16@0:8
{?=CCCC}16@0:8
@"<MTLTexture>"24@0:8Q16
@"<MTLTexture>"64@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48
@"<MTLTexture>"68@0:8Q16Q24{_NSRange=QQ}32{_NSRange=QQ}48{?=CCCC}64
@"<MTLResource>"16@0:8
@"<MTLTexture>"16@0:8
@"<MTLBuffer>"16@0:8
Q32@0:8Q16Q24
@64@0:8@16Q24Q32Q40Q48Q56
@"NSString"
@"MTLTextureDescriptor"
Q24@0:8@16
@24@0:8@"FigMetalUtils"16
i24@0:8@"FigMetalAllocatorDescriptor"16
{?=QQ}24@0:8@"FigMetalTextureDescriptor"16
{?=QQ}24@0:8@"FigMetalBufferDescriptor"16
@"<MTLBuffer>"32@0:8@"FigMetalBufferDescriptor"16Q24
@"<MTLTexture>"32@0:8@"FigMetalTextureDescriptor"16Q24
Q24@0:8@"<MTLTexture>"16
Q24@0:8@"<MTLBuffer>"16
B24@0:8@"<MTLTexture>"16
@"FigMetalUtils"16@0:8
@"FigMetalUtils"
@"<MTLHeap>"
@28@0:8@16i24
v24@0:8^@16
i28@0:8@16I24
Q20@0:8I16
v20@0:8I16
@"<FigMetalAllocatorImpl>"
{MTLRangeAllocator="elements"^{MTLRangeAllocatorElement}"numElements"I"capacity"Q"capacityIncrement"Q"defaultAlignmentMask"Q}
@"FigMetalTextureDescriptor"
@"FigMetalBufferDescriptor"
[5@"FigMetalAllocator"]
