s
N5realm5_impl18CollectionNotifierE
NSt3__110__function6__funcIZN5realm5_impl18CollectionNotifier24get_modification_checkerERKNS3_21TransactionChangeInfoERKNS2_5TableEE3$_1NS_9allocatorISB_EEFbmEEE
NSt3__110__function6__baseIFbmEEE
ZN5realm5_impl18CollectionNotifier24get_modification_checkerERKNS0_21TransactionChangeInfoERKNS_5TableEE3$_1
NSt3__110__function6__funcIN5realm5_impl17DeepChangeCheckerENS_9allocatorIS4_EEFbmEEE
N5realm5_impl17DeepChangeCheckerE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__119__async_assoc_stateIvNS_12__async_funcIZN5realm5_impl20ExternalCommitHelperC1ERNS3_16RealmCoordinatorEE3$_0JEEEEE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
N5realm4List25OutOfBoundsIndexExceptionE
N5realm4List20InvalidatedExceptionE
N5realm27InvalidTransactionExceptionE
NSt3__120__shared_ptr_emplaceIN5realm5_impl12ListNotifierENS_9allocatorIS3_EEEE
N5realm5_impl12ListNotifierE
NSt3__120__shared_ptr_emplaceIN5realm5_impl14ObjectNotifierENS_9allocatorIS3_EEEE
N5realm5_impl14ObjectNotifierE
N5realm11SharedGroup10BadVersionE
class_
N5realm11ArrayParentE
N5realm10RowIndexesE
N5realm13TableViewBaseE
N5realm29InvalidSchemaVersionExceptionE
N5realm33DuplicatePrimaryKeyValueExceptionE
N5realm25SchemaValidationExceptionE
N5realm23SchemaMismatchExceptionE
N5realm28InvalidSchemaChangeExceptionE
N5realm31ObjectSchemaValidationExceptionE
N5realm6BpTreeIxE14SetNullHandlerE
N5realm10BpTreeNode13UpdateHandlerE
N5realm6BpTreeIxE13UpdateHandlerE
N5realm10BpTreeNodeE
N5realm10BpTreeNode12EraseHandlerE
N5realm10BpTreeBase12SliceHandlerE
N5realm29InvalidEncryptionKeyExceptionE
N5realm25MismatchedConfigExceptionE
N5realm18RealmFileExceptionE
NSt3__120__shared_ptr_emplaceIZN5realm5Realm17make_shared_realmENS2_6ConfigENS_10shared_ptrINS1_5_impl16RealmCoordinatorEEEE19make_shared_enablerNS_9allocatorIS8_EEEE
NSt3__120__shared_ptr_emplaceIN5realm5_impl16RealmCoordinatorENS_9allocatorIS3_EEEE
N5realm7Results20InvalidatedExceptionE
N5realm7Results25OutOfBoundsIndexExceptionE
N5realm7Results26DetatchedAccessorExceptionE
N5realm7Results23IncorrectTableExceptionE
N5realm7Results30UnsupportedColumnTypeExceptionE
N5realm6ColumnIxE13CreateHandlerE
N5realm10ColumnBase13CreateHandlerE
NSt3__120__shared_ptr_emplaceIN5realm5_impl15ResultsNotifierENS_9allocatorIS3_EEEE
N5realm24CollectionChangeCallback4BaseE
N5realm5_impl15ResultsNotifierE
RLM:
N5realm24IncorrectThreadExceptionE
N5realm19ThreadSafeReferenceINS_4ListEEE
NSt3__120__shared_ptr_emplaceIbNS_9allocatorIbEEEE
NSt3__120__shared_ptr_emplaceIN5realm24CollectionChangeCallback4ImplIZ23RLMAddNotificationBlockINS1_4ListEEP20RLMNotificationTokenP11objc_objectRT_U13block_pointerFvS9_P19RLMCollectionChangeP7NSErrorEbEUlRKNS1_19CollectionChangeSetESt13exception_ptrE_EENS_9allocatorISN_EEEE
N5realm24CollectionChangeCallback4ImplIZ23RLMAddNotificationBlockINS_4ListEEP20RLMNotificationTokenP11objc_objectRT_U13block_pointerFvS7_P19RLMCollectionChangeP7NSErrorEbEUlRKNS_19CollectionChangeSetESt13exception_ptrE_EE
NSt3__120__shared_ptr_emplaceIN5realm24CollectionChangeCallback4ImplIZ23RLMAddNotificationBlockINS1_7ResultsEEP20RLMNotificationTokenP11objc_objectRT_U13block_pointerFvS9_P19RLMCollectionChangeP7NSErrorEbEUlRKNS1_19CollectionChangeSetESt13exception_ptrE_EENS_9allocatorISN_EEEE
N5realm24CollectionChangeCallback4ImplIZ23RLMAddNotificationBlockINS_7ResultsEEP20RLMNotificationTokenP11objc_objectRT_U13block_pointerFvS7_P19RLMCollectionChangeP7NSErrorEbEUlRKNS_19CollectionChangeSetESt13exception_ptrE_EE
NSt3__120__shared_ptr_emplaceIN5realm24CollectionChangeCallback5Impl2IZ29RLMObjectAddNotificationBlockE3$_0EENS_9allocatorIS5_EEEE
N5realm24CollectionChangeCallback5Impl2IZ29RLMObjectAddNotificationBlockE3$_0EE
RLM:Managed
N5realm19ThreadSafeReferenceINS_6ObjectEEE
RLM:Managed 
N5realm12ArrayIntegerE
NSt3__110__function6__funcIZ17RLMTrackDeletionsP8RLMRealmU13block_pointerFvvEE3$_5NS_9allocatorIS6_EEFvRKN5realm5Group19CascadeNotificationEEEE
NSt3__110__function6__baseIFvRKN5realm5Group19CascadeNotificationEEEE
Z17RLMTrackDeletionsP8RLMRealmU13block_pointerFvvEE3$_5
@"RLMArray<
@"NSNumber<
@"RLMLinkingObjects
?N5realm12ArrayIntNullE
N12_GLOBAL__N_114TrueExpressionE
N5realm10ExpressionE
N5realm8Subexpr2IxEE
N5realm7SubexprE
N5realm9OverloadsIxPKcEE
N5realm9OverloadsIxiEE
N5realm9OverloadsIxfEE
N5realm9OverloadsIxdEE
N5realm9OverloadsIxxEE
N5realm9OverloadsIxNS_10StringDataEEE
N5realm9OverloadsIxbEE
N5realm9OverloadsIxNS_9TimestampEEE
N5realm9OverloadsIxNS_11OldDateTimeEEE
N5realm9OverloadsIxNS_4nullEEE
N5realm7ColumnsIxEE
N5realm7CompareINS_4LessExNS_7SubexprES2_EE
N5realm5ValueIxEE
N5realm9ValueBaseE
N5realm7CompareINS_9LessEqualExNS_7SubexprES2_EE
N5realm7CompareINS_7GreaterExNS_7SubexprES2_EE
N5realm7CompareINS_12GreaterEqualExNS_7SubexprES2_EE
N5realm7CompareINS_5EqualExNS_7SubexprES2_EE
N5realm7CompareINS_8NotEqualExNS_7SubexprES2_EE
N5realm8Subexpr2INS_4LinkEEE
N5realm9LinkCountE
N5realm10CountLinksE
N5realm15LinkMapFunctionE
N5realm20SequentialGetterBaseE
N5realm14MakeLinkVectorE
N5realm10SubColumnsIxEE
N5realm18SubColumnAggregateIxNS_20aggregate_operations7MinimumIxEEEE
N5realm5ValueINS_4nullEEE
N5realm8Subexpr2INS_4nullEEE
N5realm9OverloadsINS_4nullEPKcEE
N5realm9OverloadsINS_4nullEiEE
N5realm9OverloadsINS_4nullEfEE
N5realm9OverloadsINS_4nullEdEE
N5realm9OverloadsINS_4nullExEE
N5realm9OverloadsINS_4nullENS_10StringDataEEE
N5realm9OverloadsINS_4nullEbEE
N5realm9OverloadsINS_4nullENS_9TimestampEEE
N5realm9OverloadsINS_4nullENS_11OldDateTimeEEE
N5realm9OverloadsINS_4nullES1_EE
N5realm8Subexpr2IfEE
N5realm9OverloadsIfPKcEE
N5realm9OverloadsIfiEE
N5realm9OverloadsIffEE
N5realm9OverloadsIfdEE
N5realm9OverloadsIfxEE
N5realm9OverloadsIfNS_10StringDataEEE
N5realm9OverloadsIfbEE
N5realm9OverloadsIfNS_9TimestampEEE
N5realm9OverloadsIfNS_11OldDateTimeEEE
N5realm9OverloadsIfNS_4nullEEE
N5realm7ColumnsIfEE
N5realm7CompareINS_4LessEfNS_7SubexprES2_EE
N5realm5ValueIfEE
N5realm7CompareINS_9LessEqualEfNS_7SubexprES2_EE
N5realm7CompareINS_7GreaterEfNS_7SubexprES2_EE
N5realm7CompareINS_12GreaterEqualEfNS_7SubexprES2_EE
N5realm7CompareINS_5EqualEfNS_7SubexprES2_EE
N5realm7CompareINS_8NotEqualEfNS_7SubexprES2_EE
N5realm10SubColumnsIfEE
N5realm18SubColumnAggregateIfNS_20aggregate_operations7MinimumIfEEEE
N5realm8Subexpr2IdEE
N5realm9OverloadsIdPKcEE
N5realm9OverloadsIdiEE
N5realm9OverloadsIdfEE
N5realm9OverloadsIddEE
N5realm9OverloadsIdxEE
N5realm9OverloadsIdNS_10StringDataEEE
N5realm9OverloadsIdbEE
N5realm9OverloadsIdNS_9TimestampEEE
N5realm9OverloadsIdNS_11OldDateTimeEEE
N5realm9OverloadsIdNS_4nullEEE
N5realm7ColumnsIdEE
N5realm7CompareINS_4LessEdNS_7SubexprES2_EE
N5realm5ValueIdEE
N5realm7CompareINS_9LessEqualEdNS_7SubexprES2_EE
N5realm7CompareINS_7GreaterEdNS_7SubexprES2_EE
N5realm7CompareINS_12GreaterEqualEdNS_7SubexprES2_EE
N5realm7CompareINS_5EqualEdNS_7SubexprES2_EE
N5realm7CompareINS_8NotEqualEdNS_7SubexprES2_EE
N5realm16SequentialGetterINS_6ColumnIdEEEE
N5realm10SubColumnsIdEE
N5realm18SubColumnAggregateIdNS_20aggregate_operations7MinimumIdEEEE
N5realm18SubColumnAggregateIxNS_20aggregate_operations7MaximumIxEEEE
N5realm18SubColumnAggregateIfNS_20aggregate_operations7MaximumIfEEEE
N5realm18SubColumnAggregateIdNS_20aggregate_operations7MaximumIdEEEE
N5realm18SubColumnAggregateIxNS_20aggregate_operations3SumIxEEEE
N5realm18SubColumnAggregateIfNS_20aggregate_operations3SumIfEEEE
N5realm18SubColumnAggregateIdNS_20aggregate_operations3SumIdEEEE
N5realm18SubColumnAggregateIxNS_20aggregate_operations7AverageIxEEEE
N5realm18SubColumnAggregateIfNS_20aggregate_operations7AverageIfEEEE
N5realm18SubColumnAggregateIdNS_20aggregate_operations7AverageIdEEEE
N5realm8Subexpr2IbEE
N5realm9OverloadsIbPKcEE
N5realm9OverloadsIbiEE
N5realm9OverloadsIbfEE
N5realm9OverloadsIbdEE
N5realm9OverloadsIbxEE
N5realm9OverloadsIbNS_10StringDataEEE
N5realm9OverloadsIbbEE
N5realm9OverloadsIbNS_9TimestampEEE
N5realm9OverloadsIbNS_11OldDateTimeEEE
N5realm9OverloadsIbNS_4nullEEE
N5realm7ColumnsIbEE
N5realm7CompareINS_5EqualEbNS_7SubexprES2_EE
N5realm5ValueIbEE
N5realm7CompareINS_8NotEqualEbNS_7SubexprES2_EE
N5realm8Subexpr2INS_9TimestampEEE
N5realm9OverloadsINS_9TimestampEPKcEE
N5realm9OverloadsINS_9TimestampEiEE
N5realm9OverloadsINS_9TimestampEfEE
N5realm9OverloadsINS_9TimestampEdEE
N5realm9OverloadsINS_9TimestampExEE
N5realm9OverloadsINS_9TimestampENS_10StringDataEEE
N5realm9OverloadsINS_9TimestampEbEE
N5realm9OverloadsINS_9TimestampES1_EE
N5realm9OverloadsINS_9TimestampENS_11OldDateTimeEEE
N5realm9OverloadsINS_9TimestampENS_4nullEEE
N5realm7ColumnsINS_9TimestampEEE
N5realm18SimpleQuerySupportINS_9TimestampEEE
N5realm7CompareINS_7GreaterENS_9TimestampENS_7SubexprES3_EE
N5realm5ValueINS_9TimestampEEE
N5realm7CompareINS_12GreaterEqualENS_9TimestampENS_7SubexprES3_EE
N5realm7CompareINS_4LessENS_9TimestampENS_7SubexprES3_EE
N5realm7CompareINS_9LessEqualENS_9TimestampENS_7SubexprES3_EE
N5realm7CompareINS_5EqualENS_9TimestampENS_7SubexprES3_EE
N5realm7CompareINS_8NotEqualENS_9TimestampENS_7SubexprES3_EE
N5realm8Subexpr2INS_10StringDataEEE
N5realm9OverloadsINS_10StringDataEPKcEE
N5realm9OverloadsINS_10StringDataEiEE
N5realm9OverloadsINS_10StringDataEfEE
N5realm9OverloadsINS_10StringDataEdEE
N5realm9OverloadsINS_10StringDataExEE
N5realm9OverloadsINS_10StringDataES1_EE
N5realm9OverloadsINS_10StringDataEbEE
N5realm9OverloadsINS_10StringDataENS_9TimestampEEE
N5realm9OverloadsINS_10StringDataENS_11OldDateTimeEEE
N5realm9OverloadsINS_10StringDataENS_4nullEEE
N5realm7ColumnsINS_10StringDataEEE
N5realm18SimpleQuerySupportINS_10StringDataEEE
N5realm7CompareINS_10BeginsWithENS_10StringDataENS_7SubexprES3_EE
N5realm5ValueINS_10StringDataEEE
N5realm19ConstantStringValueE
N5realm7CompareINS_13BeginsWithInsENS_10StringDataENS_7SubexprES3_EE
N5realm7CompareINS_8EndsWithENS_10StringDataENS_7SubexprES3_EE
N5realm7CompareINS_11EndsWithInsENS_10StringDataENS_7SubexprES3_EE
N5realm7CompareINS_8ContainsENS_10StringDataENS_7SubexprES3_EE
N5realm7CompareINS_11ContainsInsENS_10StringDataENS_7SubexprES3_EE
N5realm7CompareINS_5EqualENS_10StringDataENS_7SubexprES3_EE
N5realm7CompareINS_8EqualInsENS_10StringDataENS_7SubexprES3_EE
N5realm7CompareINS_8NotEqualENS_10StringDataENS_7SubexprES3_EE
N5realm7CompareINS_11NotEqualInsENS_10StringDataENS_7SubexprES3_EE
N5realm7CompareINS_4LikeENS_10StringDataENS_7SubexprES3_EE
N5realm7CompareINS_7LikeInsENS_10StringDataENS_7SubexprES3_EE
N5realm7CompareIN12_GLOBAL__N_117ContainsSubstringILm136EEENS_10StringDataENS_7SubexprES5_EE
N5realm7CompareIN12_GLOBAL__N_117ContainsSubstringILm137EEENS_10StringDataENS_7SubexprES5_EE
N5realm7CompareIN12_GLOBAL__N_117ContainsSubstringILm140EEENS_10StringDataENS_7SubexprES5_EE
N5realm7CompareIN12_GLOBAL__N_117ContainsSubstringILm141EEENS_10StringDataENS_7SubexprES5_EE
N5realm7CompareIN12_GLOBAL__N_117ContainsSubstringILm128EEENS_10StringDataENS_7SubexprES5_EE
N5realm7CompareIN12_GLOBAL__N_117ContainsSubstringILm129EEENS_10StringDataENS_7SubexprES5_EE
N5realm7CompareIN12_GLOBAL__N_15EqualILm128EEENS_10StringDataENS_7SubexprES5_EE
N5realm7CompareIN12_GLOBAL__N_15EqualILm129EEENS_10StringDataENS_7SubexprES5_EE
N5realm7CompareINS_5EqualENS_8RowIndexENS_7SubexprES3_EE
N5realm5ValueINS_8RowIndexEEE
N5realm8Subexpr2INS_8RowIndexEEE
N5realm9OverloadsINS_8RowIndexEPKcEE
N5realm9OverloadsINS_8RowIndexEiEE
N5realm9OverloadsINS_8RowIndexEfEE
N5realm9OverloadsINS_8RowIndexEdEE
N5realm9OverloadsINS_8RowIndexExEE
N5realm9OverloadsINS_8RowIndexENS_10StringDataEEE
N5realm9OverloadsINS_8RowIndexEbEE
N5realm9OverloadsINS_8RowIndexENS_9TimestampEEE
N5realm9OverloadsINS_8RowIndexENS_11OldDateTimeEEE
N5realm9OverloadsINS_8RowIndexENS_4nullEEE
N5realm7CompareINS_8NotEqualENS_8RowIndexENS_7SubexprES3_EE
N5realm13SubQueryCountE
N5realm26SubQueryCountHandoverPatchE
N5realm22QueryNodeHandoverPatchE
N5realm5ValueIiEE
N5realm8Subexpr2IiEE
N5realm9OverloadsIiPKcEE
N5realm9OverloadsIiiEE
N5realm9OverloadsIifEE
N5realm9OverloadsIidEE
N5realm9OverloadsIixEE
N5realm9OverloadsIiNS_10StringDataEEE
N5realm9OverloadsIibEE
N5realm9OverloadsIiNS_9TimestampEEE
N5realm9OverloadsIiNS_11OldDateTimeEEE
N5realm9OverloadsIiNS_4nullEEE
N5realm16ConstantRowValueE
N5realm29ConstantRowValueHandoverPatchE
N5realm7CompareINS_5EqualEiNS_7SubexprES2_EE
N5realm7CompareINS_8NotEqualEiNS_7SubexprES2_EE
NSt3__110__function6__funcIPFP12NSExpressionS3_ENS_9allocatorIS5_EES4_EE
NSt3__110__function6__baseIFP12NSExpressionS3_EEE
PFP12NSExpressionS0_E
FP12NSExpressionS0_E
N12_GLOBAL__N_115FalseExpressionE
N5realm21AddressSpaceExhaustedE
N5realm4util4File16PermissionDeniedE
N5realm4util4File11AccessErrorE
NSt3__110__function6__funcIZ41+[RLMRealm realmWithConfiguration:error:]E3$_0NS_9allocatorIS2_EEFvNS_10shared_ptrIN5realm5RealmEEES8_RNS6_6SchemaEEEE
NSt3__110__function6__baseIFvNS_10shared_ptrIN5realm5RealmEEES5_RNS3_6SchemaEEEE
Z41+[RLMRealm realmWithConfiguration:error:]E3$_0
N5realm14BindingContextE
N12_GLOBAL__N_121RLMNotificationHelperE
N5realm19ThreadSafeReferenceINS_7ResultsEEE
GN5realm25FileFormatUpgradeRequiredE
N5realm20ClosedRealmExceptionE
N5realm24MismatchedRealmExceptionE
N5realm4util4File6ExistsE
N5realm4util4File8NotFoundE
N5realm20IncompatibleLockFileE
NSt3__110__function6__funcIZN5realm5Realm16open_with_configERKNS3_6ConfigERNS_10unique_ptrINS2_11ReplicationENS_14default_deleteIS8_EEEERNS7_INS2_11SharedGroupENS9_ISD_EEEERNS7_INS2_5GroupENS9_ISH_EEEEPS3_E3$_0NS_9allocatorISM_EEFviiEEE
NSt3__110__function6__baseIFviiEEE
ZN5realm5Realm16open_with_configERKNS0_6ConfigERNSt3__110unique_ptrINS_11ReplicationENS4_14default_deleteIS6_EEEERNS5_INS_11SharedGroupENS7_ISB_EEEERNS5_INS_5GroupENS7_ISF_EEEEPS0_E3$_0
NSt3__110__function6__funcIZN5realm5Realm13update_schemaENS2_6SchemaEyNS_8functionIFvNS_10shared_ptrIS3_EES7_RS4_EEEbE3$_2NS_9allocatorISB_EEFvvEEE
NSt3__110__function6__baseIFvvEEE
NSt3__120__shared_ptr_pointerIPN5realm5RealmENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN5realm5RealmEEE
ZN5realm5Realm13update_schemaENS_6SchemaEyNSt3__18functionIFvNS2_10shared_ptrIS0_EES5_RS1_EEEbE3$_2
NSt3__110__function6__funcIZN5realm5Realm25add_schema_change_handlerEvE3$_4NS_9allocatorIS4_EEFvvEEE
ZN5realm5Realm25add_schema_change_handlerEvE3$_4
N5realm23ThreadSafeReferenceBaseE
N5realm5_impl23TransactLogBufferStreamE
N5realm5_impl17TransactLogStreamE
N5realm5_impl20ChangesetInputStreamE
N5realm5_impl17NoCopyInputStreamE
N5realm5_impl17TransactLogParser14BadTransactLogE
N5realm5_impl17SimpleInputStreamE
N5realm5_impl11InputStreamE
N5realm5_impl24NoCopyInputStreamAdaptorE
N5realm5_impl25ReversedNoCopyInputStreamE
N5realm4util18BufferSizeOverflowE
NSt3__120__shared_ptr_emplaceIN5realm4util15EventLoopSignalINS1_5_impl17WeakRealmNotifier8CallbackEEENS_9allocatorIS7_EEEE
N12_GLOBAL__N_116DefaultAllocatorE
T-DB
N12_GLOBAL__N_116InvalidFreeSpaceE
N5realm15InvalidDatabaseE
N5realm4util16DecryptionFailedE
N5realm9AllocatorE
N5realm9SlabAllocE
NSt3__120__shared_ptr_emplaceIN5realm9SlabAlloc10MappedFileENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIKN5realm4util4File3MapIcEENS_9allocatorIS6_EEEE
N5realm5ArrayE
N5realm4util17BadOptionalAccessE
N5realm10QueryStateIxEE
N5realm14QueryStateBaseE
N5realm11ArrayStringE
N12_GLOBAL__N_115system_categoryE
N12_GLOBAL__N_112ArrayOffsetsE
N5realm10BpTreeBase17WriteSliceHandlerE
N5realm10BpTreeNode12VisitHandlerE
N5realm10ColumnBaseE
N5realm16ColumnBaseSimpleE
N5realm19ColumnBaseWithIndexE
N5realm10IndexArrayE
N5realm6BpTreeINS_4util8OptionalIxEEE14SetNullHandlerE
N5realm14BacklinkColumnE
N5realm9ArrayBlobE
N5realm12BinaryColumnE
N5realm11ArrayBinaryE
N5realm13ArrayBigBlobsE
N12_GLOBAL__N_111SetLeafElemE
N5realm12BinaryColumn13EraseLeafElemE
N5realm12BinaryColumn13CreateHandlerE
N5realm12BinaryColumn12SliceHandlerE
N5realm18SubtableColumnBaseE
N5realm11MixedColumnE
N5realm11MixedColumn10RefsColumnE
N5realm12StringColumnE
N5realm15ArrayStringLongE
N12_GLOBAL__N_111SetLeafElemE
N5realm12StringColumn13EraseLeafElemE
N5realm12StringColumn13CreateHandlerE
N5realm12StringColumn12SliceHandlerE
N5realm16StringEnumColumnE
N5realm14SubtableColumnE
N5realm15TimestampColumnE
N5realm15TimestampColumn13CreateHandlerINS_6BpTreeINS_4util8OptionalIxEEEEEE
N5realm15TimestampColumn13CreateHandlerINS_6BpTreeIxEEEE
N5realm10LogicErrorE
N5realm18DescriptorMismatchE
N5realm20CrossTableLinkTargetE
N5realm4util4File9StreambufE
N5realm5_impl12OutputStreamE
N5realm5_impl15ArrayWriterBaseE
N5realm5GroupE
N5realm5Group18DefaultTableWriterE
N5realm5Group11TableWriterE
N12_GLOBAL__N_119InsertColumnUpdaterE
N5realm5Table15AccessorUpdaterE
N12_GLOBAL__N_118EraseColumnUpdaterE
N12_GLOBAL__N_117MoveColumnUpdaterE
N12_GLOBAL__N_116MarkDirtyUpdaterE
N5realm9SlabAlloc5RetryE
N5realm21IncompatibleHistoriesE
N5realm18MultipleSyncAgentsE
NSt3__120__shared_ptr_emplaceIN5realm4util17InterprocessMutex8LockInfoENS_9allocatorIS4_EEEE
N5realm11GroupWriterE
N5realm5_impl28TransactLogConvenientEncoderE
N5realm11ReplicationE
N12_GLOBAL__N_118InRealmHistoryImplE
N12_GLOBAL__N_114InRealmHistoryE
N5realm5_impl7HistoryE
N5realm6BpTreeIxE15AdjustGEHandlerE
NSt3__120__shared_ptr_emplaceIN5realm8LinkViewENS_9allocatorIS2_EEEE
MbP?
<N5realm6OrNodeE
N5realm14ExpressionNodeE
N5realm11LinksToNodeE
N5realm24LinksToNodeHandoverPatchE
N5realm14ConstTableViewE
N5realm10BinaryNodeINS_5EqualEEE
N5realm10BinaryNodeINS_8NotEqualEEE
N5realm10BinaryNodeINS_10BeginsWithEEE
N5realm10BinaryNodeINS_8EndsWithEEE
N5realm10BinaryNodeINS_8ContainsEEE
N5realm14TwoColumnsNodeINS_6ColumnIxEENS_5EqualEEE
N5realm14TwoColumnsNodeINS_6ColumnIxEENS_8NotEqualEEE
N5realm14TwoColumnsNodeINS_6ColumnIxEENS_4LessEEE
N5realm14TwoColumnsNodeINS_6ColumnIxEENS_12GreaterEqualEEE
N5realm14TwoColumnsNodeINS_6ColumnIxEENS_9LessEqualEEE
N5realm14TwoColumnsNodeINS_6ColumnIxEENS_7GreaterEEE
N5realm14TwoColumnsNodeINS_6ColumnIfEENS_8NotEqualEEE
N5realm14TwoColumnsNodeINS_6ColumnIfEENS_4LessEEE
N5realm14TwoColumnsNodeINS_6ColumnIfEENS_7GreaterEEE
N5realm14TwoColumnsNodeINS_6ColumnIfEENS_12GreaterEqualEEE
N5realm14TwoColumnsNodeINS_6ColumnIfEENS_9LessEqualEEE
N5realm14TwoColumnsNodeINS_6ColumnIfEENS_5EqualEEE
N5realm14TwoColumnsNodeINS_6ColumnIdEENS_5EqualEEE
N5realm14TwoColumnsNodeINS_6ColumnIdEENS_9LessEqualEEE
N5realm14TwoColumnsNodeINS_6ColumnIdEENS_12GreaterEqualEEE
N5realm14TwoColumnsNodeINS_6ColumnIdEENS_7GreaterEEE
N5realm14TwoColumnsNodeINS_6ColumnIdEENS_4LessEEE
N5realm14TwoColumnsNodeINS_6ColumnIdEENS_8NotEqualEEE
N5realm11IntegerNodeINS_6ColumnINS_4util8OptionalIxEEEENS_5EqualEEE
N5realm15IntegerNodeBaseINS_6ColumnINS_4util8OptionalIxEEEEEE
N5realm14ColumnNodeBaseE
N5realm15FloatDoubleNodeINS_6ColumnIfEENS_5EqualEEE
N5realm15FloatDoubleNodeINS_6ColumnIdEENS_5EqualEEE
N5realm10StringNodeINS_5EqualEEE
N5realm14StringNodeBaseE
N5realm16SequentialGetterINS_16StringEnumColumnEEE
N5realm13TimestampNodeINS_5EqualEEE
N5realm11IntegerNodeINS_6ColumnINS_4util8OptionalIxEEEENS_8NotEqualEEE
N5realm15FloatDoubleNodeINS_6ColumnIfEENS_8NotEqualEEE
N5realm15FloatDoubleNodeINS_6ColumnIdEENS_8NotEqualEEE
N5realm10StringNodeINS_8NotEqualEEE
N5realm13TimestampNodeINS_8NotEqualEEE
N5realm11IntegerNodeINS_6ColumnIxEENS_5EqualEEE
N5realm15IntegerNodeBaseINS_6ColumnIxEEEE
N5realm11IntegerNodeINS_6ColumnIxEENS_8NotEqualEEE
N5realm11IntegerNodeINS_6ColumnINS_4util8OptionalIxEEEENS_7GreaterEEE
N5realm11IntegerNodeINS_6ColumnIxEENS_7GreaterEEE
N5realm11IntegerNodeINS_6ColumnINS_4util8OptionalIxEEEENS_4LessEEE
N5realm11IntegerNodeINS_6ColumnIxEENS_4LessEEE
N5realm15FloatDoubleNodeINS_6ColumnIfEENS_7GreaterEEE
N5realm15FloatDoubleNodeINS_6ColumnIfEENS_12GreaterEqualEEE
N5realm15FloatDoubleNodeINS_6ColumnIfEENS_9LessEqualEEE
N5realm15FloatDoubleNodeINS_6ColumnIfEENS_4LessEEE
N5realm15FloatDoubleNodeINS_6ColumnIdEENS_7GreaterEEE
N5realm15FloatDoubleNodeINS_6ColumnIdEENS_12GreaterEqualEEE
N5realm15FloatDoubleNodeINS_6ColumnIdEENS_9LessEqualEEE
N5realm15FloatDoubleNodeINS_6ColumnIdEENS_4LessEEE
N5realm13TimestampNodeINS_7GreaterEEE
N5realm13TimestampNodeINS_12GreaterEqualEEE
N5realm13TimestampNodeINS_9LessEqualEEE
N5realm13TimestampNodeINS_4LessEEE
N5realm10StringNodeINS_8EqualInsEEE
N5realm10StringNodeINS_10BeginsWithEEE
N5realm10StringNodeINS_13BeginsWithInsEEE
N5realm10StringNodeINS_8EndsWithEEE
N5realm10StringNodeINS_11EndsWithInsEEE
N5realm10StringNodeINS_8ContainsEEE
N5realm10StringNodeINS_11ContainsInsEEE
N5realm10StringNodeINS_11NotEqualInsEEE
N5realm10StringNodeINS_4LikeEEE
N5realm10StringNodeINS_7LikeInsEEE
?N5realm10ParentNodeE
N5realm7NotNodeE
N5realm7ColumnsINS_4LinkEEE
N5realm18TrivialReplicationE
N5realm10LogicError9ErrorKindE
N5realm5Table6ParentE
N5realm6ColumnIxEE
N5realm10LinkColumnE
N5realm14LinkListColumnE
NSt3__120__shared_ptr_emplaceIN5realm10DescriptorENS_9allocatorIS2_EEEE
N5realm5Table21InsertSubtableColumnsE
N5realm5Table15SubtableUpdaterE
N5realm5Table20EraseSubtableColumnsE
N5realm5Table21RenameSubtableColumnsE
N5realm9TableViewE
N5realm6ColumnINS_4util8OptionalIxEEEE
N5realm6BpTreeINS_4util8OptionalIxEEE12EraseHandlerE
N5realm6BpTreeINS_4util8OptionalIxEEE13UpdateHandlerE
N5realm6BpTreeINS_4util8OptionalIxEEE12SliceHandlerE
N5realm6BpTreeIxE12EraseHandlerE
N5realm6ColumnIfEE
N5realm10BasicArrayIfEE
N5realm6BpTreeIfE14SetNullHandlerE
N5realm6BpTreeIfE12EraseHandlerE
N5realm6BpTreeIfE13UpdateHandlerE
N5realm6BpTreeIfE12SliceHandlerE
N5realm6ColumnIdEE
N5realm10BasicArrayIdEE
N5realm6BpTreeIdE14SetNullHandlerE
N5realm6BpTreeIdE12EraseHandlerE
N5realm6BpTreeIdE13UpdateHandlerE
N5realm6BpTreeIdE12SliceHandlerE
N5realm6ColumnINS_4util8OptionalIxEEE13CreateHandlerE
N5realm6ColumnIfE13CreateHandlerE
N5realm6ColumnIdE13CreateHandlerE
N5realm16SequentialGetterINS_6ColumnIxEEEE
N5realm16SequentialGetterINS_6ColumnIfEEEE
N5realm16SequentialGetterINS_6ColumnINS_4util8OptionalIxEEEEEE
N5realm6BpTreeIxE12SliceHandlerE
N5realm8LinkViewE
NSt3__123enable_shared_from_thisIN5realm8LinkViewEEE
NSt3__117bad_function_callE
N5realm14LinkColumnBaseE
Assertion failed: from != to
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/ObjectStore/src/impl/collection_change_builder.cpp
Assertion failed: !updated_existing_move
Assertion failed: row_ndx <= last_row
Assertion failed: insertions.empty() || prev(insertions.end())->second - 1 <= last_row
Assertion failed: modifications.empty() || prev(modifications.end())->second - 1 <= last_row
Assertion failed: ndx_1 != ndx_2
Assertion failed: old_ndx != new_ndx
bad optional access
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
Assertion failed: it != end(b) && it->row_index == ai
Assertion failed: best.i >= begin1 && best.i + best.size <= end1
Assertion failed: best.j >= begin2 && best.j + best.size <= end2
Assertion failed: m_realm
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/ObjectStore/src/impl/collection_notifier.cpp
Assertion failed: m_error || m_callbacks.size() > 0
Assertion failed: m_error || it != end(m_callbacks)
Assertion failed: m_sg
Assertion failed: !m_sg
Assertion failed: m_version || m_notifiers.empty()
Assertion failed: is_attached()
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/table.hpp
Assertion failed: ndx < m_spec.get_column_count()
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/link_view.hpp
Assertion failed: m_row_indexes.is_attached()
Assertion failed: link_ndx < m_row_indexes.size()
Assertion failed: row_ndx < size()
unique_lock::unlock: not locked
unique_lock::lock: references null mutex
unique_lock::lock: already locked
.note
TMPDIR
realm_
RLMRealm notification listener
listen
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/ObjectStore/src/impl/apple/external_commit_helper.cpp
ret == 0
ret >= 0
event.ident == (uint32_t)m_notify_fd
notify_fd
ret == -1 && errno == EAGAIN
uncaught exception in notifier thread
uncaught exception in notifier thread
uncaught exception in notifier thread: %s: %s
uncaught exception in notifier thread: %s: %s
thread constructor failed
true
false
Assertion failed: *next
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/ObjectStore/src/util/format.cpp
Assertion failed: isdigit(*next)
Assertion failed: index < values.size()
Assertion failed: range.end <= value.first
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/ObjectStore/src/index_set.cpp
Assertion failed: index >= new_shift
Assertion failed: count > 0
Assertion failed: !more_before || index >= std::prev(it)->second
Must be in a write transaction
Requested index %1 greater than max %2
Assertion failed: dynamic_cast<Parent*>(parent)
Access to invalidated List object
Assertion failed: target_row_ndx < m_origin_column->get_target_table().size()
Assertion failed: start <= size()
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/column.hpp
Assertion failed: m_lv_handover
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/ObjectStore/src/impl/list_notifier.cpp
Assertion failed: !m_lv
Assertion failed: !m_lv_handover
Assertion failed: col_ndx != not_found
Assertion failed: row.get_table()
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/ObjectStore/src/impl/object_notifier.cpp
Assertion failed: m_handover
Assertion failed: !m_row
Assertion failed: !m_handover
Specified primary key '%1.%2' does not exist.
Assertion failed: ndx < get_column_count()
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/spec.hpp
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/array_string.hpp
Assertion failed: data[array_size] == 0
(data[array_size], array_size)
Property '%1.%2' of type '%3' cannot be nullable.
Property '%1.%2' of type 'Object' must be nullable.
Property '%1.%2' of type '%3' cannot be made the primary key.
Properties'%1' and '%2' are both marked as the primary key of '%3'.
Property '%1.%2' of type '%3' cannot be indexed.
Property '%1.%2' of type '%3' cannot have an origin property name.
Property '%1.%2' of type '%3' must have an origin property name.
Property '%1.%2' of type '%3' cannot have an object type.
Property '%1.%2' of type '%3' has unknown object type '%4'
Property '%1.%2' declared as origin of linking objects property '%3.%4' does not exist
Property '%1.%2' declared as origin of linking objects property '%3.%4' is not a link
Property '%1.%2' declared as origin of linking objects property '%3.%4' links to type '%5'
string
bool
date
data
double
float
object
array
linking objects
metadata
Cannot rename properties for type '%1' because it does not exist.
Cannot rename properties for type '%1' because it has been removed from the Realm.
Cannot rename property '%1.%2' to '%3' because the source property still exists.
Cannot rename property '%1.%2' because it does not exist.
Cannot rename property '%1.%2' to '%3' because it would change from type '%4' to '%5'.
Cannot rename property '%1.%2' to '%3' because it would change from optional to required.
Provided schema version %1 is less than last set version %2.
Primary key property '%1.%2' has duplicate values after migration.
version
pk_table
pk_property
Assertion failed: property.type != PropertyType::LinkingObjects
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/ObjectStore/src/object_store.cpp
Cannot index property '%1.%2': indexing properties of type '%3' is not yet implemented.
Assertion failed: m_current_table
Property '%1.%2' has been added.
Property '%1.%2' has been removed.
Property '%1.%2' has been changed from '%3' to '%4'.
Property '%1.%2' has been made optional.
Property '%1.%2' has been made required.
Primary Key for class '%1 has changed from '%2' to '%3'.
Primary Key for class '%1 has been added.
Primary Key for class '%1 has been removed.
Renamed property '%1.%2' does not exist.
array<
linking objects<
Schema validation failed due to the following errors:
Migration is required due to the following errors:
The following changes cannot be made in additive-only schema mode:
Assertion failed: false
Assertion failed: row_ndx <= prior_num_rows
Assertion failed: row_ndx < prior_num_rows
Assertion failed: m_array->size() > 1
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/index_string.hpp
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/bptree.hpp
Assertion failed: row_ndx_1 < size()
Assertion failed: row_ndx_2 < size()
Assertion failed: row_ndx != npos
Assertion failed: has_search_index()
Class '%1' has been added.
Property '%1.%2' has been made indexed.
Property '%1.%2' has been made unindexed.
Assertion failed: !is_null
Assertion failed: ndx <= m_size
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/array.hpp
Assertion failed: size() >= 1 + 1 + 1
Assertion failed: child_ndx < size() - 2
Assertion failed: elem_ndx_in_child <= REALM_MAX_BPNODE_SIZE
Assertion failed: value <= max_array_payload
Assertion failed: m_leaf.size() >= 1
Assertion failed: row_ndx <= last_row_ndx
Synchronized Realms cannot be opened in read-only mode
Realms opened in Additive-only schema mode do not use a migration function
Realms opened in read-only mode do not use a migration function
A schema version must be specified when the schema is specified
In-memory realms initialized from memory buffers can only be opened in read-only mode
Specifying both memory buffer and path is invalid
Memory buffers do not support encryption
Realm at path '%1' already opened with different read permissions.
Realm at path '%1' already opened with different inMemory settings.
Realm at path '%1' already opened with a different encryption key.
Realm at path '%1' already opened with a different schema mode.
Realm at path '%1' already opened with different schema version.
Realm at path '%1' already opened on current thread with different schema.
Assertion failed: previous <= m_schema_transaction_version_max
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/ObjectStore/src/impl/realm_coordinator.cpp
Assertion failed: !m_config.read_only()
Assertion failed: realm.is_in_transaction()
Assertion failed: !read_only_group
Assertion failed: m_advancer_sg->get_transact_stage() == SharedGroup::transact_Ready
Assertion failed: m_advancer_sg->get_transact_stage() == SharedGroup::transact_Reading
Assertion failed: m_notifier_sg->get_transact_stage() == SharedGroup::transact_Reading
Assertion failed: m_advancer_sg->get_version_of_current_transaction().version <= new_notifiers.front()->version().version
Assertion failed: !notifiers.empty()
Assertion failed: version >= skip_version
Assertion failed: !realm.is_in_transaction()
Encryption key must be 64 bytes.
Unreachable code
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/ObjectStore/src/results.cpp
Assertion failed: m_update_policy == UpdatePolicy::Auto
Assertion failed: m_mode == Mode::TableView
Attempting to get the index of a Row of the wrong type
average
Cannot create asynchronous query for read-only Realms
Cannot create asynchronous query while in a write transaction
Cannot create asynchronous query for snapshotted Results.
Assertion failed: results.m_update_policy != UpdatePolicy::Never
Assertion failed: results.m_table_view.is_in_sync()
Assertion failed: results.m_table_view.is_attached()
Cannot %1 property '%2': operation not supported for '%3' properties
Assertion failed: r == 0
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/util/thread.hpp
Access to invalidated Results objects
Assertion failed: m_table
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/table_view.hpp
Assertion failed: row_ndx < m_row_indexes.size()
Assertion failed: real_ndx != detached_ref
Atempting to access an invalid object
Assertion failed: source_ndx < m_table->size()
Assertion failed: m_target_results == &old_target
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/ObjectStore/src/impl/results_notifier.cpp
Assertion failed: m_query
Assertion failed: m_info
Assertion failed: !m_tv.is_attached()
Assertion failed: m_tv.is_in_sync()
Assertion failed: m_changes.empty()
Assertion failed: !m_query_handover
Assertion failed: !m_tv_to_deliver
Assertion failed: m_query_handover
@"NSString"16@?0#8
@"RLMObjectSchema"16@?0#8
RLM:Unmanaged 
Invalid property name '%@' for class '%@'.
Primary key can't be changed to '%@' after an object is inserted.
Invalid property value '%@' for property '%@' of class '%@'
@"NSNumber"16@?0@"RLMObjectBase"8
c16@?0@"RLMObjectBase"8
s16@?0@"RLMObjectBase"8
i16@?0@"RLMObjectBase"8
q16@?0@"RLMObjectBase"8
Unexpected property type for Objective-C type code
f16@?0@"RLMObjectBase"8
d16@?0@"RLMObjectBase"8
B16@?0@"RLMObjectBase"8
@"NSString"16@?0@"RLMObjectBase"8
@"NSDate"16@?0@"RLMObjectBase"8
@"NSData"16@?0@"RLMObjectBase"8
@16@?0@"RLMObjectBase"8
@"RLMArray"16@?0@"RLMObjectBase"8
Cannot create accessor class for schema with Mixed properties
@"RLMLinkingObjects"16@?0@"RLMObjectBase"8
Object has been deleted or invalidated.
v24@?0@"RLMObjectBase"8@"NSNumber<RLMInt>"16
Primary key can't be changed after an object is inserted.
Attempting to modify object outside of a write transaction - call beginWriteTransaction on an RLMRealm instance first.
v20@?0@"RLMObjectBase"8c16
v20@?0@"RLMObjectBase"8s16
v20@?0@"RLMObjectBase"8i16
v24@?0@"RLMObjectBase"8q16
v24@?0@"RLMObjectBase"8@"NSNumber<RLMFloat>"16
v20@?0@"RLMObjectBase"8f16
v24@?0@"RLMObjectBase"8@"NSNumber<RLMDouble>"16
v24@?0@"RLMObjectBase"8d16
v24@?0@"RLMObjectBase"8@"NSNumber<RLMBool>"16
v20@?0@"RLMObjectBase"8B16
v24@?0@"RLMObjectBase"8@"NSString"16
v24@?0@"RLMObjectBase"8@"NSDate"16
Assertion failed: -nanoseconds_per_second < nanoseconds && nanoseconds < nanoseconds_per_second
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/timestamp.hpp
(nanoseconds)
Assertion failed: both_non_negative || both_non_positive
(both_non_negative, both_non_positive)
v24@?0@"RLMObjectBase"8@"NSData"16
v24@?0@"RLMObjectBase"8@"RLMObjectBase"16
Can't set object of type '%@' to property of type '%@'
Adding a deleted or invalidated object to a Realm is not permitted
Can not add objects from a different Realm
v24@?0@"RLMObjectBase"8@"RLMArray"16
v24@?0@"RLMObjectBase"8@16
Modifying Mixed properties is not supported
@"RLMResults"16@?0@"RLMObjectBase"8
v24@?0@"RLMObjectBase"8@"<NSFastEnumeration>"16
Linking objects properties are read-only
v8@?0
Nested key paths are not supported yet for KVC collection operators.
B32@?0@8Q16^B24
This method may only be called on RLMArray instances retrieved from an RLMRealm
RLMArray
Unexpected handover of unmanaged `RLMArray`
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/RLMArray.mm
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
objectiveCMetadata
T@,R,N
realm
T@"RLMRealm",R,N
invalidated
TB,R,N,GisInvalidated
count
TQ,R,N
objectClassName
T@"NSString",R,C,N
T@"NSString",R,C,N,V_objectClassName
keyPath
T@"NSString",R,N,V_keyPath
ascending
TB,R,N,V_ascending
property
T@"NSString",R,N
Index %llu is out of bounds (must be less than %llu).
Object must not be nil
Object cannot be inserted unless the schema is initialized. This can happen if you try to insert objects into a RLMArray / List from a default value or from an overriden unmanaged initializer (`init()`).
Object type '%@' does not match RLMArray type '%@'.
parentClassName
T@"NSString",&,N,V_parentClassName
T@"NSString",&,N,V_key
Assertion failed: list.get_realm() == realm->_realm
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/RLMArrayLinkView.mm
[<%@ %p> addObserver:forKeyPath:options:context:] is not supported. Key path: %@
v24@?0Q8^B16
Object has been deleted or invalidated
Object of type (%@) does not match RLMArray type (%@)
objectInfo
T^{RLMClassInfo=@@^{ObjectSchema}{vector<RLMObservationInfo *, std::__1::allocator<RLMObservationInfo *> >=^^{RLMObservationInfo}^^{RLMObservationInfo}{__compressed_pair<RLMObservationInfo **, std::__1::allocator<RLMObservationInfo *> >=^^{RLMObservationInfo}}}^{Table}{vector<RLMClassInfo *, std::__1::allocator<RLMClassInfo *> >=^^{RLMClassInfo}^^{RLMClassInfo}{__compressed_pair<RLMClassInfo **, std::__1::allocator<RLMClassInfo *> >=^^{RLMClassInfo}}}},R,N
Index %zu is out of bounds (must be less than %zu)
RLMArray has been invalidated or the containing object has been deleted
Realm accessed from incorrect thread
Cannot modify managed RLMArray outside of a write transaction
Cannot add `nil` to RLMArray<%@>
Cannot add object of type '%@' to RLMArray<%@>
Object type '%@' is not managed by the Realm. If using a custom `objectClasses` / `objectTypes` array in your configuration, add `%@` to the list of `objectClasses` / `objectTypes`.
Assertion failed: rlmSchema.objectSchema.count == schema.size()
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/RLMClassInfo.mm
Collection is no longer valid
self
<Maximum depth exceeded>
%@ <%p> (
[%zu] %@,
... %zu objects skipped.
deletions
T@"NSArray",R,N
insertions
modifications
RLMRealmRefreshRequiredNotification
RLMRealmDidChangeNotification
io.realm
io.realm.unknown
RLMException
RLMRealmVersion
RLMRealmCoreVersion
_rlmArray
T@"RLMArray",&,N,V__rlmArray
Cannot modify the source Realm in a migration
oldRealm
T@"RLMRealm",&,N,V_oldRealm
T@"RLMRealm",&,N,V_realm
oldSchema
T@"RLMSchema",R,N
newSchema
'%@' does not have a primary key and can not be updated
RLMExecption
v40@?0@"NSArray"8@"NSArray"16@"NSArray"24@"NSError"32
T@"RLMRealm",R,D,N
objectSchema
T@"RLMObjectSchema",R,D,N
TB,R,D,N,GisInvalidated
T@"RLMObjectBase",R,N
Only objects which are managed by a Realm support change notifications
name
T@"NSString",&,N,V_name
previousValue
T@,&,N,V_previousValue
value
T@,&,N,V_value
Must provide a non-nil value.
Invalid array input: more values (%llu) than properties (%llu).
[invalid object]
%@ {
%@ = %@;
Can only compare objects of class RLMObjectBase
Invalid value '%@' to initialize object of type '%@': missing key '%@'
RealmSwiftObjectUtil
B24@?0@"RLMProperty"8@"NSDictionary"16
B24@?0@8@"NSDictionary"16
Property '%@' is declared multiple times in the class hierarchy of '%@'
Object '%@' has properties that are declared multiple times in its class hierarchy: '%@'
', '
Primary key property '%@' does not exist on object '%@'
Property '%@' cannot be made the primary key of '%@' because it is not a 'string' or 'int' property.
Property '%@.%@' cannot be made optional because optional '%@' properties are not supported.
.storage
B32@?0@"RLMProperty"8Q16^B24
class
Lazy managed property '%@' is not allowed on a Realm Swift object class. Either add the property to the ignored properties list or make it non-lazy.
v32@?0@"NSString"8@"NSNumber"16^B24
Object properties cannot be made required, but '+[%@ requiredProperties]' included '%@'
The `%@.%@` property must be marked as being optional.
%@ {
No property matching primary key '%@'
RealmSwiftObject
allPropertiesByName
T@"NSDictionary",&,N,V_allPropertiesByName
className
T@"NSString",&,N,V_className
objectName
properties
T@"NSArray",C,N,V_properties
isSwiftClass
TB,N,V_isSwiftClass
objectClass
T#,N,V_objectClass
accessorClass
T#,N,V_accessorClass
unmanagedClass
T#,N,V_unmanagedClass
primaryKeyProperty
T@"RLMProperty",&,N,V_primaryKeyProperty
computedProperties
T@"NSArray",C,N,V_computedProperties
swiftGenericProperties
Unknown
%llu %s
Object is already managed by another Realm. Use create instead to copy it into this Realm.
Cannot add an object with observers to a Realm
Nil value specified for required property '%@' in '%@'
@16@?0@"RLMProperty"8
Property '%@' of object of type '%@' cannot be nil.
Can only delete an object from the Realm it belongs to.
%@ does not have a primary key
Invalid null value for non-nullable primary key.
Invalid value '%@' of type '%@' for string primary key.
Invalid value '%@' of type '%@' for int primary key.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/RLMObjectStore.mm
Can only add, remove, or create objects in a Realm in a write transaction - call beginWriteTransaction on an RLMRealm instance first.
Realm must not be nil
Can't create object with existing primary key value '%@'.
Invalid array input: primary key must be present.
unmanagedValue
T@,&,N,V_unmanagedValue
T@"RLMObjectBase",W,N,V_object
T@"RLMProperty",N,V_property
underlyingValue
T@,&,N
Assertion failed: [collection isKindOfClass:[NSExpression class]]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/RLMPredicateUtil.mm
alloc
copy
mutableCopy
Property names beginning with '%s' are not supported. Swift follows ARC's ownership rules for methods based on their name, which results in memory leaks when accessing properties which return retained values via KVC.
set%@%@:
@"NSString"
@"NSDate"
@"NSData"
Property '%@' is of type 'RLMArray<%@>' which is not a supported RLMArray object type. RLMArrays can only contain instances of RLMObject subclasses. See https://realm.io/docs/objc/latest/#to-many for more information.
RLMInt
RLMFloat
RLMDouble
RLMBool
Property '%@' is of type 'NSNumber<%@>' which is not a supported NSNumber object type. NSNumbers can only be RLMInt, RLMFloat, RLMDouble, and RLMBool at the moment. See https://realm.io/docs/objc/latest for more information.
Property '%@' is of type RLMLinkingObjects but +linkingObjectsProperties did not specify the class or property that is the origin of the link.
Property '%@' was declared with type RLMLinkingObjects<%@>, but a conflicting class name of '%@' was returned by +linkingObjectsProperties.
@"NSNumber"
Property '%@' requires a protocol defining the contained type - example: NSNumber<RLMInt>.
@"RLMArray"
Property '%@' requires a protocol defining the contained type - example: RLMArray<Person>.
Property '%@' is declared as '%@', which is not a supported RLMObject property type. All properties must be primitives, NSString, NSDate, NSData, NSNumber, RLMArray, RLMLinkingObjects, or subclasses of RLMObject. See https://realm.io/docs/objc/latest/api/Classes/RLMObject.html for more information.
@"%@"
@"RLMLinkingObjects"
@"RLMArray<%@>"
Can't persist NSNumber without default value: use a Swift-native number type or provide a default value.
@"NSNumber<RLMInt>"
@"NSNumber<RLMFloat>"
@"NSNumber<RLMDouble>"
@"NSNumber<RLMBool>"
Can't persist NSNumber of type '%s': only integers, floats, doubles, and bools are currently supported.
v16@?0@"NSString"8
Can't persist property '%@' with incompatible type. Add to Object.ignoredProperties() class method to ignore.
Can't persist property '%@' with incompatible type. Add to ignoredPropertyNames: method to ignore.
Property '%@' must be declared as readonly as %@ properties cannot be written to.
%@ {
type = %@;
objectClassName = %@;
linkOriginPropertyName = %@;
indexed = %@;
isPrimary = %@;
optional = %@;
type
Ti,N,V_type
indexed
TB,N,V_indexed
optional
TB,N,V_optional
T@"NSString",C,N,V_objectClassName
index
TQ,N,V_index
isPrimary
TB,N,V_isPrimary
swiftIvar
T^{objc_ivar=},N,V_swiftIvar
getterName
T@"NSString",C,N,V_getterName
setterName
T@"NSString",C,N,V_setterName
getterSel
T:,N,V_getterSel
setterSel
T:,N,V_setterSel
linkOriginPropertyName
T@"NSString",R,C,N,V_linkOriginPropertyName
T#,R,N,V_objectClass
propertyName
T@"NSString",R,N,V_propertyName
@"RLMLinkingObjects<
RLMPropertiesComparisonTypeMismatchException
Property type mismatch between %@ and %@
Invalid property name
Property '%@' not found in object of type '%@'
Invalid query
%.*s
Invalid compound predicate type
Only support AND, OR and NOT predicate types
Invalid predicate
ALL modifier not supported
Predicate with ANY modifier must compare a KeyPath with RLMArray with a value
Predicate with BETWEEN operator must compare a KeyPath with an aggregate with two values
Predicate with IN operator must compare a KeyPath with an aggregate
Invalid predicate expression
SUBQUERY is only supported when immediately followed by .@count.
Invalid predicate expressions
Predicate expressions must compare a keypath and another keypath or a constant value
Only support compound, comparison, and constant predicates
Invalid value
IN clause requires an array of items
Unsupported predicate
Key paths including aggregate operations cannot be compared with other aggregate operations.
Invalid key path
Right side of collection operator may only have a single level key
'%@' is not a valid key path'
@count
@min
@max
@sum
@avg
Unsupported collection operation '%@'
Collection operation can only be applied to a property of type RLMArray.
Result of @count does not have any properties.
%@ can only be applied to a numeric property.
Aggregate operations can only be used on key paths that include an array property
Key paths that include an array property must use aggregate operations
Property '%@' is not a link in object of type '%@'
Assertion failed: property.objectClassName
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/RLMQueryUtil.mm
Invalid operand
%@ can only be compared with a numeric value.
%@ on a property of type %@ cannot be compared with property of type '%@'
Invalid operator type
Operator '%@' not supported for type %@
Assertion failed: index < m_size
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/query_expression.hpp
Assertion failed: l == nullptr || r == nullptr || l == r
MATCHES
LIKE
BEGINSWITH
ENDSWITH
CONTAINS
BETWEEN
custom selector
unknown operator %lu
convert
operation.type() == CollectionOperation::Count
Assertion failed: Table::is_link_type(type) || type == col_type_BackLink
Assertion failed: !m_tables.empty()
Assertion failed: column != nullptr
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/impl/sequential_getter.hpp
Assertion failed: size <= 1
Assertion failed: false && "Only numeric property types should hit this path."
Assertion failed: operation.type() == CollectionOperation::Minimum
Assertion failed: operation.type() == CollectionOperation::Maximum
Assertion failed: operation.type() == CollectionOperation::Sum
Assertion failed: operation.type() == CollectionOperation::Average
Unsupported operator
Nil is only supported on the right side of operators
Unsupported predicate value type
Object type %@ not supported
Operator '%@' not supported for bool type
Assertion failed: !is_null()
Assertion failed: !rhs.is_null()
Operator '%@' not supported for string type
Operator 'LIKE' not supported with diacritic-insensitive modifier.
NSData properties cannot be queried over an object link.
Operator '%@' not supported for binary type
Only 'Equal' and 'Not Equal' operators supported for object comparison
Comparisons between two NSData properties are not supported
Comparisons between two RLMArray properties are not supported
Expected object of type %@ for property '%@' on object of type '%@', but received: %@
%@ on a property of type %@ cannot be compared with '%@'
Assertion failed: !m_links.empty()
Assertion failed: m_link_map.target_table() == m_query.get_table()
Assertion failed: patches.size()
Assertion failed: patch
object must be of type NSArray for BETWEEN operations
NSArray object must contain exactly two objects for BETWEEN operations
NSArray objects must be of type %@ for BETWEEN operations
Expressions within predicate aggregates must be constant values
Expected object of type %@ in IN clause for property '%@' on object of type '%@', but received: %@
Invalid value origin
Object must be from the Realm being queried
Assertion failed: link_map.target_table() == row.get_table() || !row.is_attached()
Operator '%@' is not supported for string type with key path on right side of operator
Operator '%@' is not supported for binary type with key path on right side of operator
The '%@' function is not supported.
valueForKeyPath:
The '%@' function is not supported on the result of a SUBQUERY.
SUBQUERY is only supported when immediately followed by .@count that is compared with a constant number.
Invalid key path for sort
Cannot sort on '%@': sorting on key paths that include collection operators is not supported.
Cannot sort on '%@': sorting on key paths that include a to-many relationship is not supported.
Invalid sort property type
Cannot sort on key path '%@' on object of type '%s': sorting is only supported on bool, date, double, float, integer, and string properties, but property is of type %@.
v24@?0@"NSString"8@"RLMRealm"16
RLMNotificationToken released without unregistering a notification. You must hold on to the RLMNotificationToken returned from addNotificationBlock and call -[RLMNotificationToken stop] when you no longer wish to receive RLMRealm notifications.
block
T@?,C,N,V_block
Encryption key must be exactly 64 bytes long
Cannot open an encrypted Realm on watchOS.
Realm file is currently open in another process which cannot share access with this process. All processes sharing a single file must be the same architecture. For sharing files between the Realm Browser and an iOS simulator, this means that you must use a 64-bit simulator.
Realm file's history format is incompatible with the settings in the configuration object being used to open the Realm. Note that Realms configured for sync cannot be opened as non-synced Realms, and vice versa. Otherwise, the file may be corrupt.
Realm at path '%s' already opened with different read permissions
Realm at path '%s' already opened with different inMemory settings
Realm at path '%s' already opened with different dynamic settings
Realm at path '%s' already opened with different encryption key
Read-only Realms do not change and do not have change notifications
Can only add notification blocks from within runloops.
The notification block should not be nil
Incorrect Realm: only notifications for the Realm being modified can be skipped.
WARNING: An RLMRealm instance was invalidated during a write transaction and all pending changes have been rolled back.
WARNING: An RLMRealm instance was deallocated during a write transaction and all pending changes have been rolled back. Make sure to retain a reference to the RLMRealm for the duration of the write transaction.
Cannot insert objects of type %@ with addObjects:. Only RLMObjects are supported.
Can only delete objects from the Realm they belong to.
Invalid array type - container must be an RLMArray, RLMArray, or NSArray of RLMObjects
Cannot open an uninitialized realm in read-only mode
Cannot migrate Realms that are already open.
notificationHandlers
T@"NSHashTable",&,N,V_notificationHandlers
group
T^{Group=^^?{SlabAlloc=^^?Q^{Replication}iQ{atomic<unsigned long long>=AQ}{shared_ptr<realm::SlabAlloc::MappedFile>=^{MappedFile}^{__shared_weak_count}}{unique_ptr<std::__1::shared_ptr<const realm::util::File::Map<char> > [], std::__1::default_delete<std::__1::shared_ptr<const realm::util::File::Map<char> > []> >={__compressed_pair<std::__1::shared_ptr<const realm::util::File::Map<char> > *, std::__1::default_delete<std::__1::shared_ptr<const realm::util::File::Map<char> > []> >=^{shared_ptr<const realm::util::File::Map<char> >}}}Q*QQi{unique_ptr<unsigned long [], std::__1::default_delete<unsigned long []> >={__compressed_pair<unsigned long *, std::__1::default_delete<unsigned long []> >=^Q}}QiBi{vector<realm::SlabAlloc::Slab, std::__1::allocator<realm::SlabAlloc::Slab> >=^{Slab}^{Slab}{__compressed_pair<realm::SlabAlloc::Slab *, std::__1::allocator<realm::SlabAlloc::Slab> >=^{Slab}}}{vector<realm::SlabAlloc::Chunk, std::__1::allocator<realm::SlabAlloc::Chunk> >=^{Chunk}^{Chunk}{__compressed_pair<realm::SlabAlloc::Chunk *, std::__1::allocator<realm::SlabAlloc::Chunk> >=^{Chunk}}}{vector<realm::SlabAlloc::Chunk, std::__1::allocator<realm::SlabAlloc::Chunk> >=^{Chunk}^{Chunk}{__compressed_pair<realm::SlabAlloc::Chunk *, std::__1::allocator<realm::SlabAlloc::Chunk> >=^{Chunk}}}B[256{hash_entry=Q*Q}]Q}{Array=^^?^{VTable}*qqQQ^{Allocator}Q^{ArrayParent}QCBBB}{ArrayInteger=^^?^{VTable}*qqQQ^{Allocator}Q^{ArrayParent}QCBBB}{ArrayString=^^?^{VTable}*qqQQ^{Allocator}Q^{ArrayParent}QCBBBB}{vector<realm::Table *, std::__1::allocator<realm::Table *> >=^^{Table}^^{Table}{__compressed_pair<realm::Table **, std::__1::allocator<realm::Table *> >=^^{Table}}}BB{function<void (const realm::Group::CascadeNotification &)>={__value_func<void (const realm::Group::CascadeNotification &)>={type=[32C]}^{__base<void (const realm::Group::CascadeNotification &)>}}}{function<void ()>={__value_func<void ()>={type=[32C]}^{__base<void ()>}}}},R,N
dynamic
TB,R,N,V_dynamic
schema
T@"RLMSchema",&,N,V_schema
inWriteTransaction
TB,R,N
configuration
T@"RLMRealmConfiguration",R,N
isEmpty
autorefresh
TB,N
REALM_DISABLE_ENCRYPTION
fileURL
inMemoryIdentifier
encryptionKey
readOnly
schemaVersion
migrationBlock
deleteRealmIfMigrationNeeded
customSchema
default.realm
Cannot set the default configuration to nil.
Realm path must not be empty
In-memory identifier must not be empty
Cannot set `readOnly` when `deleteRealmIfMigrationNeeded` is set.
Cannot set schema version to %llu (RLMNotVersioned())
Cannot set `deleteRealmIfMigrationNeeded` when `readOnly` is set.
cache
TB,N,V_cache
TB,N,V_dynamic
disableFormatUpgrade
T@"RLMSchema",C,N,V_customSchema
pathOnDisk
T@"NSString",C,N,V_pathOnDisk
T@"NSURL",C,N
T@"NSString",C,N
T@"NSData",C,N
TQ,N
T@?,C,N,V_migrationBlock
objectClasses
T@"NSArray",C,N
_%@ForKeyPath:
Unsupported KVC collection operator found in key path '%@'
Missing key path for KVC collection operator %@ in key path '%@'
self is not a valid key-path for a KVC array collection operator as 'unionOfArrays'.
minOfProperty
maxOfProperty
sumOfProperty
averageOfProperty
RLMResults
attached
TB,R,N,GisAttached
T@"RLMRealm",R,N,V_realm
%@ is not supported for %@ property '%s'
Object type '%s' does not match RLMResults type '%s'.
Object has been invalidated
RLMResults has been invalidated
Cannot modify Results outside of a write transaction
Object type '%@' not managed by the Realm
Can't add non-Object type '%@' to a schema.
- '%@.%@' links to class '%@', which is missing from the list of classes managed by the Realm
v32@?0@8@"RLMObjectSchema"16^B24
Invalid class subset list:
Illegal recursive call of +[%@ %@]. Note: Properties of Swift `Object` classes must not be prepopulated with queried results from a Realm.
v32@?0@"NSString"8#16^B24
@"RLMSchema"8@?0
v32@?0@"NSString"8@"RLMObjectSchema"16^B24
Schema {
objectSchemaByName
T@"NSMutableDictionary",&,N,V_objectSchemaByName
RLM:
_TtC
RLMObject subclasses cannot be nested within other declarations. Please move %@ to global scope.
RLMObject subclasses with the same name cannot be included twice in the same target. Please make sure '%@' is only linked once to your current target.
Illegal custom conformance to `RLMThreadConfined` by `%@`
Cannot construct reference to invalidated object
Cannot construct reference to unmanaged object, which can be passed across threads directly
Can only resolve a thread safe reference once.
Invalid RLMPropertyType specified
Invalid value '%@' for property '%@'
Array property value (%@) is not enumerable.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/RLMUtil.mm
Error Code
Underlying
Category
%@: %@
FakeObject
Invalid data type for RLMPropertyTypeAny property.
2.5.1
Realm was not built with sync enabled
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/ObjectStore/src/shared_realm.cpp
Assertion failed: !m_group
Assertion failed: !m_read_only_group
Assertion failed: m_dynamic_schema
Assertion failed: m_schema_version != ObjectStore::NotVersioned
Cannot modify managed objects outside of a write transaction.
The Realm is already in a write transaction
Can't commit a non-existing write transaction
Can't cancel a non-existing write transaction
Can't compact a read-only Realm
Can't compact a Realm within a write transaction
Cannot obtain thread safe reference during a write transaction.
Cannot resolve thread safe reference during a write transaction.
Cannot resolve thread safe reference more than once.
Cannot resolve thread safe reference in Realm with different configuration than the source Realm.
The Realm file format must be allowed to be upgraded in order to proceed.
Realm file is currently open in another process which cannot share access with this process. All processes sharing a single file must be the same architecture.
Bad or incompatible history type
Unable to open a realm at path '%1': %2.
Directory at path '%1' does not exist.
File at path '%1' already exists.
Unable to open a realm at path '%1'. Please use a path where your app has %2 permissions.
read
read-write
Realm accessed from incorrect thread.
Cannot access realm that has been closed.
Can't perform transactions on read-only Realms.
Assertion failed: !is_attached()
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/group_shared.hpp
Assertion failed: *inout_new_begin >= data
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/impl/transact_log.hpp
Assertion failed: *inout_new_begin <= (data + m_buffer.size())
Assertion failed: !util::is_negative(value)
Assertion failed: repl
Assertion failed: new_read_lock.m_version >= m_read_lock.m_version
Bad transaction log
(variant)
Assertion failed: m_encoder.write_position() >= m_buffer.transact_log_data()
Assertion failed: variant == instr_Set || variant == instr_SetDefault
Assertion failed: !m_is_null
Assertion failed: from_link_ndx != to_link_ndx
Assertion failed: from_table_ndx != to_table_ndx
Assertion failed: row_ndx_1 < row_ndx_2
Buffer size overflow
Schema mismatch detected: another process has modified the Realm file's schema in an incompatible way
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/Realm/ObjectStore/src/impl/transact_log_handler.cpp
Assertion failed: list.col < list.observer->changes.size()
Assertion failed: !builder.deletions.empty()
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/alloc_slab.cpp
Realm file too large
Read-only access to empty Realm file
Realm file decryption failed
Realm file has bad size
Not a Realm file
Realm file in streaming form has bad size
Bad Realm file header (#1)
Bad Realm file header (#2)
Bad Realm file header (#3)
Unsupported Realm file format version
Free space tracking was lost due to out-of-memory
Byte size overflow
realm.basic_system
Overflow in number of elements per child
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/column_binary.hpp
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/column_mixed.hpp
String too big
Binary too big
Table name too long
Column name too long
Table index out of range
Row index out of range
Column index out of range
String position out of range
Link index out of range
Bad version number
Illegal data type
Illegal combination
Data type mismatch
Tables are in different groups
Wrong kind of descriptor
Wrong kind of table
Detached accessor
Target table row index out of range
Column has no search index
Unique constraint violation
Attempted to insert null into non-nullable column
Wrong state or group accessor (already attached, or managed by a SharedGroup object)
Wrong transactional state (no active transaction, wrong type of transaction, or transaction already in progress)
Continuous transaction through SharedGroup object without history information
Durability setting (as passed to the SharedGroup constructor) was not consistent across the session
History type (as specified by the Replication implementation passed to the SharedGroup constructor) was not consistent across the session
History schema version (as specified by the Replication implementation passed to the SharedGroup constructor) was not consistent across the session
Table has no columns
Column does not exist
Unknown error
make_dir() failed: 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/util/file.cpp
open("
") failed: 
Assertion failed: size_t(r) <= n
Assertion failed: r != 0
write(): failed: 
File size overflow
fstat() failed
ftruncate() failed: 
lseek() failed
fcntl() with F_FULLFSYNC failed: 
flock() failed: 
remove() failed: 
unlink() failed: 
rename() failed: 
fstat() failed: 
Encryption not enabled
mmap() failed: 
 size: 
 offset: 
size: 
offset: 
munmap() failed: 
msync() failed: 
Table is target of cross-table link columns
Table descriptor mismatch
Database upgrade required but prohibited
Multiple sync agents attempted to join the same session
Async mode not yet supported on Windows, iOS and watchOS
.management
.lock
/access_control
Info size doesn't match, 
Shared info version doesn't match, 
Mutex size doesn't match: 
Condtion var size doesn't match: 
write
control
Expected a Realm without history
Expected a Realm with no or in-realm history
Expected an empty Realm or a Realm written by Realm Mobile Platform
Expected a Realm containining a server-side history
Nonupgradable history schema
: Encrypted interprocess sharing is currently unsupported.
SharedGroup has been opened by pid: 
. Current pid is 
File format version deosn't match: 
new_commit
pick_writer
: compact must be done on an open/attached SharedGroup
: compact is not supported whithin a transaction
.tmp_compaction_space
Crash of other process detected, session restart required
Incompatible lock file. 
Incompatible histories. 
Assertion failed: prev_ref + prev_size <= ref
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/group_writer.cpp
Assertion failed: ref + size <= after_ref
src/realm/impl/transact_log.hpp
 exists and it is not a fifo.
Stream size overflow
Unbalanced group
Syntax error
Missing left-hand side of OR
Missing right-hand side of OR
Malformed UTF-8: 
Missing argument to Not
Too many subdescriptor nesting levels
Table handover failed: only first level subtables supported
Table handover failed: not a group level table
: [realm-core-2.5.1] 
 with 
IMPORTANT: if you see this error, please send this log to help@realm.io.
CLSLog
pthread_mutex_init() failed
Destruction of mutex in use
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Shortcuts_Sim/Shortcuts-977.3.1/WorkflowKit/External/Realm/realm-core/src/realm/util/thread.cpp
pthread_mutex_destroy() failed
pthread_mutex_lock() failed: Recursive locking of mutex (deadlock)
pthread_mutex_lock() failed: Invalid mutex object provided
pthread_mutex_lock() failed: Maximum number of recursive locks exceeded
pthread_mutex_lock() failed
Too many subtable nesting levels
Too many table type descriptor nesting levels
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
RLMArrayHolder
RLMArray
RLMThreadConfined_Private
NSObject
RLMCollection
NSFastEnumeration
RLMThreadConfined
RLMSortDescriptor
RLMArrayLinkViewHandoverMetadata
RLMArrayLinkView
RLMFastEnumerable
RLMFastEnumerator
RLMCancellationToken
RLMCollectionChange
RLMListBase
RLMMigrationRealm
RLMMigration
RLMObject
RLMDynamicObject
RLMWeakObjectHandle
NSCopying
RLMObjectNotificationToken
RLMPropertyChange
RLMObjectBase
RLMObjectUtil
1 0`
RLMObjectSchema
RLMOptionalBase
RLMProperty
RLMPropertyDescriptor
RLMRealmNotificationToken
RLMRealm
RLMRealmConfiguration
RLMNotificationToken
RLMResults
RLMLinkingObjects
RLMSchema
RLMSwiftSupport
RLMThreadSafeReference
className
sharedSchemaForClass:
sharedSchema
stringByAppendingString:
UTF8String
objectForKeyedSubscript:
isPrimary
name
index
type
swiftIvar
_rlmArray
set_rlmArray:
properties
countByEnumeratingWithState:objects:count:
computedProperties
getterSel
setterSel
optional
verifyThread
longLongValue
inWriteTransaction
floatValue
doubleValue
boolValue
lengthOfBytesUsingEncoding:
timeIntervalSinceReferenceDate
bytes
length
objectClassName
isEqualToString:
isInvalidated
initWithObjectClassName:
emptyDetachedResults
instanceMethodForSelector:
addObjects:
initWithBytes:length:encoding:
initWithTimeIntervalSinceReferenceDate:
dataWithBytes:length:
objectAtIndexedSubscript:
initWithParent:property:
linkOriginPropertyName
resultsWithObjectInfo:results:
numberWithLongLong:
numberWithFloat:
numberWithDouble:
numberWithBool:
null
underlyingValue
array
addObject:
.cxx_destruct
.cxx_construct
items
init
count
objectAtIndex:
insertObject:atIndex:
removeObjectAtIndex:
replaceObjectAtIndex:withObject:
addObjectsFromArray:
firstIndex
indexGreaterThanIndex:
removeObjectsAtIndexes:
exchangeObjectAtIndex:withObjectAtIndex:
removeAllObjects
objectsWhere:args:
predicateWithFormat:arguments:
objectsWithPredicate:
valueForKeyPath:
characterAtIndex:
rangeOfString:options:
substringFromIndex:
rangeOfString:
valueForKey:
setValue:forKey:
evaluateWithObject:
indexOfObjectPassingTest:
objectsAtIndexes:
addObserver:forKeyPath:options:context:
sortDescriptorWithKeyPath:ascending:
arrayWithObjects:count:
sortedResultsUsingDescriptors:
sortedResultsUsingKeyPath:ascending:
indexOfObjectWhere:args:
indexOfObjectWithPredicate:
descriptionWithMaxDepth:
objectWithThreadSafeReference:metadata:realm:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
makeThreadSafeReference
objectiveCMetadata
realm
firstObject
lastObject
indexOfObject:
indexOfObjectWhere:
objectsWhere:
sortedResultsUsingProperty:ascending:
addNotificationBlock:
removeLastObject
setObject:atIndexedSubscript:
insertObjects:atIndexes:
moveObjectAtIndex:toIndex:
_objectClassName
_key
_parentObject
_backingArray
sortDescriptorWithProperty:ascending:
reversedSortDescriptor
property
keyPath
ascending
_ascending
_keyPath
willChange:valuesAtIndexes:forKey:
didChange:valuesAtIndexes:forKey:
indexSetWithIndexesInRange:
indexSetWithIndex:
initWithIndex:
addIndex:
parentClassName
setParentClassName:
setKey:
_parentClassName
initWithList:realm:parentInfo:property:
initWithCollection:objectSchema:
countByEnumeratingWithState:count:
enumerateIndexesWithOptions:usingBlock:
hasPrefix:
schema
group
verifyNotificationsAreSupported
indexInSource:
tableView
objectInfo
deleteObjectsFromRealm
_backingList
_realm
_objectInfo
_ownerInfo
_observationInfo
primaryKeyProperty
objectSchema
objectName
registerEnumerator:
unregisterEnumerator:
dealloc
accessorClass
detach
_strongBuffer
_info
_collection
_tableView
arrayWithCapacity:
stringWithFormat:
stringByReplacingOccurrencesOfString:withString:
appendFormat:
deleteCharactersInRange:
initWithToken:realm:
suppressNextNotification
stop
_token
initWithChanges:
insertions
deletions
modifications
deletionsInSection:
insertionsInSection:
modificationsInSection:
_indices
numberWithUnsignedLong:
indexPathWithIndexes:length:
initWithArray:
__rlmArray
readonly
beginWriteTransaction
oldRealm
schemaForClassName:
allObjects:
setAccessorClass:
setIsPrimary:
createObject:withValue:
deleteObject:
initWithRealm:oldRealm:schema:
oldSchema
newSchema
enumerateObjects:block:
execute:
createObject:withObject:
deleteDataForClassName:
renamePropertyForClass:oldName:newName:
setOldRealm:
setRealm:
_schema
_oldRealm
initWithValue:schema:
initWithRealm:schema:
partialSharedSchema
defaultRealm
createOrUpdateInRealm:withValue:
exceptionWithName:reason:userInfo:
objectsInRealm:where:args:
objectsInRealm:withPredicate:
setName:
setPreviousValue:
setValue:
createInDefaultRealmWithValue:
createInRealm:withValue:
createOrUpdateInDefaultRealmWithValue:
allObjects
allObjectsInRealm:
objectsInRealm:where:
objectForPrimaryKey:
objectInRealm:forPrimaryKey:
indexedProperties
linkingObjectsProperties
defaultPropertyValues
primaryKey
ignoredProperties
requiredProperties
initWithValue:
setObject:forKeyedSubscript:
isEqualToObject:
shouldIncludeInDefaultSchema
valueForUndefinedKey:
setValue:forUndefinedKey:
copyWithZone:
initWithObject:
object
_row
_objectClass
_object
previousValue
value
_name
_previousValue
_value
alloc
setUnderlyingValue:
isSwiftClassName:
demangleClassName:
substringWithRange:
appendString:
stringWithString:
mutableArrayValueForKey:
removeObserver:forKeyPath:
automaticallyNotifiesObserversForKey:
stringWithUTF8String:
objectUtilClass:
_realmObjectName
_objectSchema
ignoredPropertiesForClass:
indexedPropertiesForClass:
linkingObjectsPropertiesForClass:
linkingObjectProperties:
getGenericListPropertyNames:
getLinkingObjectsProperties:
getOptionalProperties:
requiredPropertiesForClass:
isSwiftClass
unmanagedClass
objectClass
setClassName:
setProperties:
setObjectClass:
setUnmanagedClass:
_propertiesDidChange
dictionaryWithCapacity:
setIndex:
setPrimaryKeyProperty:
setIsSwiftClass:
propertiesForClass:isSwift:
arrayByAddingObjectsFromArray:
predicateWithBlock:
filteredArrayUsingPredicate:
setComputedProperties:
setWithArray:
countForObject:
filteredSetUsingPredicate:
componentsJoinedByString:
setIndexed:
hasSuffix:
substringToIndex:
containsObject:
initSwiftPropertyWithName:indexed:linkPropertyDescriptor:property:instance:
initWithName:indexed:linkPropertyDescriptor:property:
initSwiftListPropertyWithName:ivar:objectClassName:
initSwiftLinkingObjectsPropertyWithName:ivar:objectClassName:linkOriginPropertyName:
setOptional:
baseNameForLazySwiftProperty:
intValue
initSwiftOptionalPropertyWithName:indexed:ivar:propertyType:
setType:
enumerateKeysAndObjectsUsingBlock:
allocWithZone:
initWithArray:copyItems:
isEqualToArray:
string
objectStoreCopy
propertyForObjectStoreProperty:
isSubclassOfClass:
schemaForObjectClass:
objectSchemaForObjectStoreSchema:
initWithClassName:objectClass:properties:
isEqualToObjectSchema:
swiftGenericProperties
allPropertiesByName
setAllPropertiesByName:
_isSwiftClass
_swiftGenericProperties
_properties
_className
_primaryKeyProperty
_allPropertiesByName
_accessorClass
_unmanagedClass
_computedProperties
setObject:
setProperty:
getterName
methodForSelector:
removeObjectForKey:
willChangeValueForKey:
didChangeValueForKey:
removeAllIndexes
addIndexesInRange:
methodSignatureForSelector:
invokeWithTarget:
doesNotRecognizeSelector:
forwardInvocation:
forwardingTargetForSelector:
unmanagedValue
setUnmanagedValue:
_property
_unmanagedValue
subpredicates
compoundPredicateType
initWithType:subpredicates:
leftExpression
rightExpression
comparisonPredicateModifier
predicateOperatorType
options
predicateWithLeftExpression:rightExpression:modifier:type:options:
expressionType
arguments
operand
function
expressionForFunction:selectorName:arguments:
expressionForFunction:arguments:
expressionForUnionSet:with:
expressionForIntersectSet:with:
expressionForMinusSet:with:
collection
variable
predicate
expressionForSubquery:usingIteratorVariable:predicate:
expressionForAggregate:
trueExpression
falseExpression
expressionForConditional:trueExpression:falseExpression:
initWithName:type:objectClassName:linkOriginPropertyName:indexed:optional:
updateAccessors
uppercaseString
classForString:
propertyName
parseObjcProperty:readOnly:rawType:
objCType
setTypeFromRawType:
numberWithInt:
copy
isEqualToProperty:
indexed
copyWithNewName:
setObjectClassName:
setSwiftIvar:
setGetterName:
setterName
setSetterName:
setGetterSel:
setSetterSel:
_type
_swiftIvar
_indexed
_optional
_isPrimary
_linkOriginPropertyName
_index
_getterName
_setterName
_getterSel
_setterSel
descriptorWithClass:propertyName:
_propertyName
initWithFormat:arguments:
constantValue
predicateWithValue:
stringByAppendingFormat:
rangeOfString:options:range:locale:
rangeOfString:options:range:
integerValue
expressionForEvaluatedObject
dictionaryWithObjects:forKeys:count:
predicateWithSubstitutionVariables:
expressionForKeyPath:
notificationHandlers
removeObject:
block
setBlock:
_block
rawDefaultConfiguration
realmWithConfiguration:error:
defaultConfiguration
setFileURL:
initPrivate
dynamic
cache
readOnly
config
dynamicSchemaFromObjectStoreSchema:
customSchema
migrationBlock
schemaVersion
invalidate
resetRealmConfigurationState
hashTableWithOptions:
anyObject
setDynamic:
setCustomSchema:
commitWriteTransaction:
transactionWithBlock:error:
detachAllEnumerators
resolveReferenceInRealm:
cancelWriteTransaction
addOrUpdateObject:
objects:where:args:
objects:withPredicate:
setEncryptionKey:
errorWithDomain:code:userInfo:
performMigrationForConfiguration:error:
path
isCoreDebug
realmWithURL:
realmWithSharedRealm:schema:
resetRealmState
schemaVersionAtURL:encryptionKey:error:
migrateRealm:
isEmpty
autorefresh
setAutorefresh:
sendNotifications:
configuration
commitWriteTransaction
commitWriteTransactionWithoutNotifying:error:
transactionWithBlock:
resolveThreadSafeReference:
compact
refresh
addOrUpdateObjectsFromArray:
deleteObjects:
deleteAllObjects
objects:where:
objectWithClassName:forPrimaryKey:
writeCopyToURL:encryptionKey:error:
setSchema:
setNotificationHandlers:
_collectionEnumerators
_sendingNotifications
_dynamic
_notificationHandlers
stringByAppendingPathComponent:
fileURLWithPath:
setSchemaVersion:
setCache:
lastPathComponent
deleteRealmIfMigrationNeeded
schemaWithObjectClasses:
setDefaultConfiguration:
fileURL
inMemoryIdentifier
setInMemoryIdentifier:
encryptionKey
setReadOnly:
setDeleteRealmIfMigrationNeeded:
objectClasses
setObjectClasses:
disableFormatUpgrade
setDisableFormatUpgrade:
schemaMode
setSchemaMode:
pathOnDisk
setMigrationBlock:
setPathOnDisk:
_config
_cache
_migrationBlock
_customSchema
_pathOnDisk
maximumLengthOfBytesUsingEncoding:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
mapTableWithKeyOptions:valueOptions:
setObject:forKey:
objectEnumerator
nextObject
objectForKey:
isMainThread
numberWithUnsignedInteger:
aggregate:method:methodName:returnNilForEmpty:
_aggregateForKeyPath:method:methodName:returnNilForEmpty:
_unionOfObjectsForKeyPath:
_unionOfArraysForKeyPath:
_minForKeyPath:
_maxForKeyPath:
_sumForKeyPath:
_avgForKeyPath:
_distinctUnionOfObjectsForKeyPath:
_distinctUnionOfArraysForKeyPath:
minOfProperty:
maxOfProperty:
sumOfProperty:
averageOfProperty:
isAttached
_results
allValues
getObjects:range:
setObjectSchema:
initWithDictionary:copyItems:
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
isEqualToSchema:
objectSchemaByName
setObjectSchemaByName:
_objectStoreSchema
_objectSchemaByName
initWithThreadConfined:
referenceWithThreadConfined:
_reference
_metadata
statusCode
initWithData:encoding:
sharedSession
URLWithString:
dataTaskWithURL:completionHandler:
resume
dictionaryWithDictionary:
dictionary
numberWithInteger:
reason
localizedDescription
userInfo
mainBundle
bundleIdentifier
mutableCopy
addEntriesFromDictionary:
v16@0:8
@16@0:8
{unique_ptr<id [], std::__1::default_delete<id []> >="__ptr_"{__compressed_pair<__strong id *, std::__1::default_delete<id []> >="__value_"^@}}
@40@0:8{unique_ptr<realm::ThreadSafeReferenceBase, std::__1::default_delete<realm::ThreadSafeReferenceBase> >={__compressed_pair<realm::ThreadSafeReferenceBase *, std::__1::default_delete<realm::ThreadSafeReferenceBase> >=^{ThreadSafeReferenceBase}}}16@24@32
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
{unique_ptr<realm::ThreadSafeReferenceBase, std::__1::default_delete<realm::ThreadSafeReferenceBase> >={__compressed_pair<realm::ThreadSafeReferenceBase *, std::__1::default_delete<realm::ThreadSafeReferenceBase> >=^{ThreadSafeReferenceBase}}}16@0:8
@40@0:8{unique_ptr<realm::ThreadSafeReferenceBase, std::__1::default_delete<realm::ThreadSafeReferenceBase> >={__compressed_pair<realm::ThreadSafeReferenceBase *, std::__1::default_delete<realm::ThreadSafeReferenceBase> >=^{ThreadSafeReferenceBase}}}16@24@"RLMRealm"32
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"RLMRealm"16@0:8
@24@0:8Q16
Q24@0:8@16
Q32@0:8@16[1{__va_list_tag=II^v^v}]24
@24@0:8@16
@32@0:8@16[1{__va_list_tag=II^v^v}]24
@28@0:8@16B24
v32@0:8@16@24
@24@0:8@?16
Q24@0:8@"RLMObject"16
Q24@0:8@"NSString"16
Q32@0:8@"NSString"16[1{__va_list_tag=II^v^v}]24
Q24@0:8@"NSPredicate"16
@"RLMResults"24@0:8@"NSString"16
@"RLMResults"32@0:8@"NSString"16[1{__va_list_tag=II^v^v}]24
@"RLMResults"24@0:8@"NSPredicate"16
@"RLMResults"28@0:8@"NSString"16B24
@"RLMResults"24@0:8@"NSArray"16
@24@0:8@"NSString"16
v32@0:8@16@"NSString"24
@"RLMNotificationToken"24@0:8@?<v@?@"<RLMCollection>"@"RLMCollectionChange"@"NSError">16
v24@0:8@16
v32@0:8@16Q24
v24@0:8Q16
v32@0:8Q16@24
v32@0:8Q16Q24
v48@0:8@16@24Q32^v40
@"NSString"
@"RLMObjectBase"
@"NSMutableArray"
Q24@0:8Q16
{TableView=^^?{Column<long long>=^^?Q{unique_ptr<realm::StringIndex, std::__1::default_delete<realm::StringIndex> >={__compressed_pair<realm::StringIndex *, std::__1::default_delete<realm::StringIndex> >=^{StringIndex}}}{BpTree<long long>={unique_ptr<realm::Array, std::__1::default_delete<realm::Array> >={__compressed_pair<realm::Array *, std::__1::default_delete<realm::Array> >=^{Array}}}}}Q{BasicTableRef<realm::Table>=^{Table}}^{BacklinkColumn}{BasicRow<const realm::Table>={BasicTableRef<realm::Table>=^{Table}}Q^{RowBase}^{RowBase}}{shared_ptr<const realm::LinkView>=^{LinkView}^{__shared_weak_count}}Q{SortDescriptor={vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >=^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}{__compressed_pair<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > *, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >=^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}}{SortDescriptor={vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >=^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}{__compressed_pair<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > *, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >=^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}}{Query={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup> >=^{QueryGroup}^{QueryGroup}{__compressed_pair<realm::QueryGroup *, std::__1::allocator<realm::QueryGroup> >=^{QueryGroup}}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{shared_ptr<const realm::Descriptor>=^{Descriptor}^{__shared_weak_count}}{BasicTableRef<realm::Table>=^{Table}}^{RowIndexes}{shared_ptr<realm::LinkView>=^{LinkView}^{__shared_weak_count}}^{TableViewBase}{unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase> >={__compressed_pair<realm::TableViewBase *, std::__1::default_delete<realm::TableViewBase> >=^{TableViewBase}}}}QQQ{Optional<unsigned long long>=(?=Qc)B}Q}16@0:8
^{RLMClassInfo=@@^{ObjectSchema}{vector<RLMObservationInfo *, std::__1::allocator<RLMObservationInfo *> >=^^{RLMObservationInfo}^^{RLMObservationInfo}{__compressed_pair<RLMObservationInfo **, std::__1::allocator<RLMObservationInfo *> >=^^{RLMObservationInfo}}}^{Table}{vector<RLMClassInfo *, std::__1::allocator<RLMClassInfo *> >=^^{RLMClassInfo}^^{RLMClassInfo}{__compressed_pair<RLMClassInfo **, std::__1::allocator<RLMClassInfo *> >=^^{RLMClassInfo}}}}16@0:8
@96@0:8{List={shared_ptr<realm::Realm>=^{Realm}^{__shared_weak_count}}^{ObjectSchema}{shared_ptr<realm::LinkView>=^{LinkView}^{__shared_weak_count}}{Handle<realm::_impl::ListNotifier>=^{ListNotifier}^{__shared_weak_count}}}16@72^{RLMClassInfo=@@^{ObjectSchema}{vector<RLMObservationInfo *, std::__1::allocator<RLMObservationInfo *> >=^^{RLMObservationInfo}^^{RLMObservationInfo}{__compressed_pair<RLMObservationInfo **, std::__1::allocator<RLMObservationInfo *> >=^^{RLMObservationInfo}}}^{Table}{vector<RLMClassInfo *, std::__1::allocator<RLMClassInfo *> >=^^{RLMClassInfo}^^{RLMClassInfo}{__compressed_pair<RLMClassInfo **, std::__1::allocator<RLMClassInfo *> >=^^{RLMClassInfo}}}}80@88
@32@0:8@16@24
{List="m_realm"{shared_ptr<realm::Realm>="__ptr_"^{Realm}"__cntrl_"^{__shared_weak_count}}"m_object_schema"^{ObjectSchema}"m_link_view"{shared_ptr<realm::LinkView>="__ptr_"^{LinkView}"__cntrl_"^{__shared_weak_count}}"m_notifier"{Handle<realm::_impl::ListNotifier>="__ptr_"^{ListNotifier}"__cntrl_"^{__shared_weak_count}}}
@"RLMRealm"
^{RLMClassInfo=@@^{ObjectSchema}{vector<RLMObservationInfo *, std::__1::allocator<RLMObservationInfo *> >=^^{RLMObservationInfo}^^{RLMObservationInfo}{__compressed_pair<RLMObservationInfo **, std::__1::allocator<RLMObservationInfo *> >=^^{RLMObservationInfo}}}^{Table}{vector<RLMClassInfo *, std::__1::allocator<RLMClassInfo *> >=^^{RLMClassInfo}^^{RLMClassInfo}{__compressed_pair<RLMClassInfo **, std::__1::allocator<RLMClassInfo *> >=^^{RLMClassInfo}}}}
{unique_ptr<RLMObservationInfo, std::__1::default_delete<RLMObservationInfo> >="__ptr_"{__compressed_pair<RLMObservationInfo *, std::__1::default_delete<RLMObservationInfo> >="__value_"^{RLMObservationInfo}}}
@32@0:8@16^{RLMClassInfo=@@^{ObjectSchema}{vector<RLMObservationInfo *, std::__1::allocator<RLMObservationInfo *> >=^^{RLMObservationInfo}^^{RLMObservationInfo}{__compressed_pair<RLMObservationInfo **, std::__1::allocator<RLMObservationInfo *> >=^^{RLMObservationInfo}}}^{Table}{vector<RLMClassInfo *, std::__1::allocator<RLMClassInfo *> >=^^{RLMClassInfo}^^{RLMClassInfo}{__compressed_pair<RLMClassInfo **, std::__1::allocator<RLMClassInfo *> >=^^{RLMClassInfo}}}}24
Q32@0:8^{?=Q^@^Q[5Q]}16Q24
[16@]
@"<RLMFastEnumerable>"
{TableView="_vptr$RowIndexes"^^?"m_row_indexes"{Column<long long>="_vptr$ColumnBase"^^?"m_column_ndx"Q"m_search_index"{unique_ptr<realm::StringIndex, std::__1::default_delete<realm::StringIndex> >="__ptr_"{__compressed_pair<realm::StringIndex *, std::__1::default_delete<realm::StringIndex> >="__value_"^{StringIndex}}}"m_tree"{BpTree<long long>="m_root"{unique_ptr<realm::Array, std::__1::default_delete<realm::Array> >="__ptr_"{__compressed_pair<realm::Array *, std::__1::default_delete<realm::Array> >="__value_"^{Array}}}}}"m_debug_cookie"Q"m_table"{BasicTableRef<realm::Table>="m_ptr"^{Table}}"m_linked_column"^{BacklinkColumn}"m_linked_row"{BasicRow<const realm::Table>="m_table"{BasicTableRef<realm::Table>="m_ptr"^{Table}}"m_row_ndx"Q"m_prev"^{RowBase}"m_next"^{RowBase}}"m_linkview_source"{shared_ptr<const realm::LinkView>="__ptr_"^{LinkView}"__cntrl_"^{__shared_weak_count}}"m_distinct_column_source"Q"m_distinct_predicate"{SortDescriptor="m_columns"{vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >="__begin_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}"__end_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}"__end_cap_"{__compressed_pair<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > *, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >="__value_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}}}"m_ascending"{vector<bool, std::__1::allocator<bool> >="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >="__value_"Q}}}"m_sorting_predicate"{SortDescriptor="m_columns"{vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >="__begin_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}"__end_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}"__end_cap_"{__compressed_pair<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > *, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >="__value_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}}}"m_ascending"{vector<bool, std::__1::allocator<bool> >="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >="__value_"Q}}}"m_query"{Query="error_code"{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >="__r_"{__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}"m_groups"{vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup> >="__begin_"^{QueryGroup}"__end_"^{QueryGroup}"__end_cap_"{__compressed_pair<realm::QueryGroup *, std::__1::allocator<realm::QueryGroup> >="__value_"^{QueryGroup}}}"m_subtable_path"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}"m_current_descriptor"{shared_ptr<const realm::Descriptor>="__ptr_"^{Descriptor}"__cntrl_"^{__shared_weak_count}}"m_table"{BasicTableRef<realm::Table>="m_ptr"^{Table}}"m_view"^{RowIndexes}"m_source_link_view"{shared_ptr<realm::LinkView>="__ptr_"^{LinkView}"__cntrl_"^{__shared_weak_count}}"m_source_table_view"^{TableViewBase}"m_owned_source_table_view"{unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase> >="__ptr_"{__compressed_pair<realm::TableViewBase *, std::__1::default_delete<realm::TableViewBase> >="__value_"^{TableViewBase}}}}"m_start"Q"m_end"Q"m_limit"Q"m_last_seen_version"{Optional<unsigned long long>=""(?="m_value"Q"m_null_state"c)"m_engaged"B}"m_num_detached_refs"Q}
@48@0:8{NotificationToken={AtomicSharedPtr<realm::_impl::CollectionNotifier, true>={shared_ptr<realm::_impl::CollectionNotifier>=^{CollectionNotifier}^{__shared_weak_count}}}Q}16@40
{NotificationToken="m_notifier"{AtomicSharedPtr<realm::_impl::CollectionNotifier, true>="m_ptr"{shared_ptr<realm::_impl::CollectionNotifier>="__ptr_"^{CollectionNotifier}"__cntrl_"^{__shared_weak_count}}}"m_token"Q}
@160@0:8{CollectionChangeSet={IndexSet={vector<realm::_impl::ChunkedRangeVector::Chunk, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >=^{Chunk}^{Chunk}{__compressed_pair<realm::_impl::ChunkedRangeVector::Chunk *, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >=^{Chunk}}}}{IndexSet={vector<realm::_impl::ChunkedRangeVector::Chunk, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >=^{Chunk}^{Chunk}{__compressed_pair<realm::_impl::ChunkedRangeVector::Chunk *, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >=^{Chunk}}}}{IndexSet={vector<realm::_impl::ChunkedRangeVector::Chunk, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >=^{Chunk}^{Chunk}{__compressed_pair<realm::_impl::ChunkedRangeVector::Chunk *, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >=^{Chunk}}}}{IndexSet={vector<realm::_impl::ChunkedRangeVector::Chunk, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >=^{Chunk}^{Chunk}{__compressed_pair<realm::_impl::ChunkedRangeVector::Chunk *, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >=^{Chunk}}}}{vector<realm::CollectionChangeSet::Move, std::__1::allocator<realm::CollectionChangeSet::Move> >=^{Move}^{Move}{__compressed_pair<realm::CollectionChangeSet::Move *, std::__1::allocator<realm::CollectionChangeSet::Move> >=^{Move}}}{vector<realm::IndexSet, std::__1::allocator<realm::IndexSet> >=^{IndexSet}^{IndexSet}{__compressed_pair<realm::IndexSet *, std::__1::allocator<realm::IndexSet> >=^{IndexSet}}}}16
{CollectionChangeSet="deletions"{IndexSet="m_data"{vector<realm::_impl::ChunkedRangeVector::Chunk, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >="__begin_"^{Chunk}"__end_"^{Chunk}"__end_cap_"{__compressed_pair<realm::_impl::ChunkedRangeVector::Chunk *, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >="__value_"^{Chunk}}}}"insertions"{IndexSet="m_data"{vector<realm::_impl::ChunkedRangeVector::Chunk, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >="__begin_"^{Chunk}"__end_"^{Chunk}"__end_cap_"{__compressed_pair<realm::_impl::ChunkedRangeVector::Chunk *, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >="__value_"^{Chunk}}}}"modifications"{IndexSet="m_data"{vector<realm::_impl::ChunkedRangeVector::Chunk, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >="__begin_"^{Chunk}"__end_"^{Chunk}"__end_cap_"{__compressed_pair<realm::_impl::ChunkedRangeVector::Chunk *, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >="__value_"^{Chunk}}}}"modifications_new"{IndexSet="m_data"{vector<realm::_impl::ChunkedRangeVector::Chunk, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >="__begin_"^{Chunk}"__end_"^{Chunk}"__end_cap_"{__compressed_pair<realm::_impl::ChunkedRangeVector::Chunk *, std::__1::allocator<realm::_impl::ChunkedRangeVector::Chunk> >="__value_"^{Chunk}}}}"moves"{vector<realm::CollectionChangeSet::Move, std::__1::allocator<realm::CollectionChangeSet::Move> >="__begin_"^{Move}"__end_"^{Move}"__end_cap_"{__compressed_pair<realm::CollectionChangeSet::Move *, std::__1::allocator<realm::CollectionChangeSet::Move> >="__value_"^{Move}}}"columns"{vector<realm::IndexSet, std::__1::allocator<realm::IndexSet> >="__begin_"^{IndexSet}"__end_"^{IndexSet}"__end_cap_"{__compressed_pair<realm::IndexSet *, std::__1::allocator<realm::IndexSet> >="__value_"^{IndexSet}}}}
@"RLMArray"
@40@0:8@16@24^{Schema=^{ObjectSchema}^{ObjectSchema}{__compressed_pair<realm::ObjectSchema *, std::__1::allocator<realm::ObjectSchema> >=^{ObjectSchema}}}32
v32@0:8@16@?24
v24@0:8@?16
v40@0:8@16@24@32
^{Schema=^{ObjectSchema}^{ObjectSchema}{__compressed_pair<realm::ObjectSchema *, std::__1::allocator<realm::ObjectSchema> >=^{ObjectSchema}}}
@40@0:8@16@24[1{__va_list_tag=II^v^v}]32
@24@0:8^{_NSZone=}16
{BasicRow<realm::Table>="m_table"{BasicTableRef<realm::Table>="m_ptr"^{Table}}"m_row_ndx"Q"m_prev"^{RowBase}"m_next"^{RowBase}}
{Object="m_realm"{shared_ptr<realm::Realm>="__ptr_"^{Realm}"__cntrl_"^{__shared_weak_count}}"m_object_schema"^{ObjectSchema}"m_row"{BasicRow<realm::Table>="m_table"{BasicTableRef<realm::Table>="m_ptr"^{Table}}"m_row_ndx"Q"m_prev"^{RowBase}"m_next"^{RowBase}}"m_notifier"{Handle<realm::_impl::ObjectNotifier>="__ptr_"^{ObjectNotifier}"__cntrl_"^{__shared_weak_count}}}
#20@0:8B16
^{RLMObservationInfo=^{RLMObservationInfo}^{RLMObservationInfo}{BasicRow<realm::Table>={BasicTableRef<realm::Table>=^{Table}}Q^{RowBase}^{RowBase}}^{RLMClassInfo}@BQ@@@}
@"RLMObjectSchema"
@24@0:8#16
@28@0:8#16B24
@24@0:8r^{ObjectSchema={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{vector<realm::Property, std::__1::allocator<realm::Property> >=^{Property}^{Property}{__compressed_pair<realm::Property *, std::__1::allocator<realm::Property> >=^{Property}}}{vector<realm::Property, std::__1::allocator<realm::Property> >=^{Property}^{Property}{__compressed_pair<realm::Property *, std::__1::allocator<realm::Property> >=^{Property}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}16
@40@0:8@16#24@32
{ObjectSchema={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{vector<realm::Property, std::__1::allocator<realm::Property> >=^{Property}^{Property}{__compressed_pair<realm::Property *, std::__1::allocator<realm::Property> >=^{Property}}}{vector<realm::Property, std::__1::allocator<realm::Property> >=^{Property}^{Property}{__compressed_pair<realm::Property *, std::__1::allocator<realm::Property> >=^{Property}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}}16@0:8
v20@0:8B16
v24@0:8#16
@"NSArray"
@"RLMProperty"
@"NSDictionary"
v24@0:8:16
@24@0:8r^{Property={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}C{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}BBBQ}16
@52@0:8@16i24@28@36B44B48
v40@0:8^{objc_property=}16^B24^@32
@52@0:8@16B24@28^{objc_property=}36@44
@44@0:8@16B24@28^{objc_property=}36
@40@0:8@16^{objc_ivar=}24@32
@40@0:8@16B24^{objc_ivar=}28i36
@48@0:8@16^{objc_ivar=}24@32@40
{Property={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}C{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}BBBQ}16@0:8
i16@0:8
v20@0:8i16
^{objc_ivar=}16@0:8
v24@0:8^{objc_ivar=}16
:16@0:8
^{objc_ivar=}
@32@0:8#16@24
@?16@0:8
@40@0:8{shared_ptr<realm::Realm>=^{Realm}^{__shared_weak_count}}16@32
@32@0:8@16^@24
Q40@0:8@16@24^@32
B32@0:8@16^@24
^{Group=^^?{SlabAlloc=^^?Q^{Replication}iQ{atomic<unsigned long long>=AQ}{shared_ptr<realm::SlabAlloc::MappedFile>=^{MappedFile}^{__shared_weak_count}}{unique_ptr<std::__1::shared_ptr<const realm::util::File::Map<char> > [], std::__1::default_delete<std::__1::shared_ptr<const realm::util::File::Map<char> > []> >={__compressed_pair<std::__1::shared_ptr<const realm::util::File::Map<char> > *, std::__1::default_delete<std::__1::shared_ptr<const realm::util::File::Map<char> > []> >=^{shared_ptr<const realm::util::File::Map<char> >}}}Q*QQi{unique_ptr<unsigned long [], std::__1::default_delete<unsigned long []> >={__compressed_pair<unsigned long *, std::__1::default_delete<unsigned long []> >=^Q}}QiBi{vector<realm::SlabAlloc::Slab, std::__1::allocator<realm::SlabAlloc::Slab> >=^{Slab}^{Slab}{__compressed_pair<realm::SlabAlloc::Slab *, std::__1::allocator<realm::SlabAlloc::Slab> >=^{Slab}}}{vector<realm::SlabAlloc::Chunk, std::__1::allocator<realm::SlabAlloc::Chunk> >=^{Chunk}^{Chunk}{__compressed_pair<realm::SlabAlloc::Chunk *, std::__1::allocator<realm::SlabAlloc::Chunk> >=^{Chunk}}}{vector<realm::SlabAlloc::Chunk, std::__1::allocator<realm::SlabAlloc::Chunk> >=^{Chunk}^{Chunk}{__compressed_pair<realm::SlabAlloc::Chunk *, std::__1::allocator<realm::SlabAlloc::Chunk> >=^{Chunk}}}B[256{hash_entry=Q*Q}]Q}{Array=^^?^{VTable}*qqQQ^{Allocator}Q^{ArrayParent}QCBBB}{ArrayInteger=^^?^{VTable}*qqQQ^{Allocator}Q^{ArrayParent}QCBBB}{ArrayString=^^?^{VTable}*qqQQ^{Allocator}Q^{ArrayParent}QCBBBB}{vector<realm::Table *, std::__1::allocator<realm::Table *> >=^^{Table}^^{Table}{__compressed_pair<realm::Table **, std::__1::allocator<realm::Table *> >=^^{Table}}}BB{function<void (const realm::Group::CascadeNotification &)>={__value_func<void (const realm::Group::CascadeNotification &)>={type=[32C]}^{__base<void (const realm::Group::CascadeNotification &)>}}}{function<void ()>={__value_func<void ()>={type=[32C]}^{__base<void ()>}}}}16@0:8
B24@0:8^@16
B32@0:8@?16^@24
B40@0:8@16@24^@32
{shared_ptr<realm::Realm>="__ptr_"^{Realm}"__cntrl_"^{__shared_weak_count}}
{RLMSchemaInfo="m_objects"{unordered_map<NSString *, RLMClassInfo, std::__1::hash<NSString *>, std::__1::equal_to<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, RLMClassInfo> > >="__table_"{__hash_table<std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::hash<NSString *>, true>, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::equal_to<NSString *>, true>, std::__1::allocator<std::__1::__hash_value_type<NSString *, RLMClassInfo> > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *> *> *> > >="__value_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *> *>}"__value_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *> *> *> >="__value_"Q}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *> > >="__value_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<NSString *, RLMClassInfo>, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<NSString *, std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::hash<NSString *>, true> >="__value_"Q}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<NSString *, std::__1::__hash_value_type<NSString *, RLMClassInfo>, std::__1::equal_to<NSString *>, true> >="__value_"f}}}}
@"NSHashTable"
@"RLMSchema"
^{Config={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{BinaryData=*Q}{vector<char, std::__1::allocator<char> >=**{__compressed_pair<char *, std::__1::allocator<char> >=*}}BC{Optional<realm::Schema>=(?={Schema=^{ObjectSchema}^{ObjectSchema}{__compressed_pair<realm::ObjectSchema *, std::__1::allocator<realm::ObjectSchema> >=^{ObjectSchema}}}c)B}Q{function<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)>={__value_func<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)>={type=[32C]}^{__base<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)>}}}BBB{Optional<unsigned long>=(?=Qc)B}{shared_ptr<realm::SyncConfig>=^{SyncConfig}^{__shared_weak_count}}B}16@0:8
C16@0:8
v20@0:8C16
{Config="path"{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >="__r_"{__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}"realm_data"{BinaryData="m_data"*"m_size"Q}"encryption_key"{vector<char, std::__1::allocator<char> >="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<char *, std::__1::allocator<char> >="__value_"*}}"in_memory"B"schema_mode"C"schema"{Optional<realm::Schema>=""(?="m_value"{Schema="__begin_"^{ObjectSchema}"__end_"^{ObjectSchema}"__end_cap_"{__compressed_pair<realm::ObjectSchema *, std::__1::allocator<realm::ObjectSchema> >="__value_"^{ObjectSchema}}}"m_null_state"c)"m_engaged"B}"schema_version"Q"migration_function"{function<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)>="__f_"{__value_func<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)>="__buf_"{type="__lx"[32C]}"__f_"^{__base<void (std::__1::shared_ptr<realm::Realm>, std::__1::shared_ptr<realm::Realm>, realm::Schema &)>}}}"cache"B"disable_format_upgrade"B"automatic_change_notifications"B"execution_context"{Optional<unsigned long>=""(?="m_value"Q"m_null_state"c)"m_engaged"B}"sync_config"{shared_ptr<realm::SyncConfig>="__ptr_"^{SyncConfig}"__cntrl_"^{__shared_weak_count}}"force_sync_history"B}
@736@0:8^{RLMClassInfo=@@^{ObjectSchema}{vector<RLMObservationInfo *, std::__1::allocator<RLMObservationInfo *> >=^^{RLMObservationInfo}^^{RLMObservationInfo}{__compressed_pair<RLMObservationInfo **, std::__1::allocator<RLMObservationInfo *> >=^^{RLMObservationInfo}}}^{Table}{vector<RLMClassInfo *, std::__1::allocator<RLMClassInfo *> >=^^{RLMClassInfo}^^{RLMClassInfo}{__compressed_pair<RLMClassInfo **, std::__1::allocator<RLMClassInfo *> >=^^{RLMClassInfo}}}}16{Results={shared_ptr<realm::Realm>=^{Realm}^{__shared_weak_count}}^{ObjectSchema}{Query={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup> >=^{QueryGroup}^{QueryGroup}{__compressed_pair<realm::QueryGroup *, std::__1::allocator<realm::QueryGroup> >=^{QueryGroup}}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{shared_ptr<const realm::Descriptor>=^{Descriptor}^{__shared_weak_count}}{BasicTableRef<realm::Table>=^{Table}}^{RowIndexes}{shared_ptr<realm::LinkView>=^{LinkView}^{__shared_weak_count}}^{TableViewBase}{unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase> >={__compressed_pair<realm::TableViewBase *, std::__1::default_delete<realm::TableViewBase> >=^{TableViewBase}}}}{TableView=^^?{Column<long long>=^^?Q{unique_ptr<realm::StringIndex, std::__1::default_delete<realm::StringIndex> >={__compressed_pair<realm::StringIndex *, std::__1::default_delete<realm::StringIndex> >=^{StringIndex}}}{BpTree<long long>={unique_ptr<realm::Array, std::__1::default_delete<realm::Array> >={__compressed_pair<realm::Array *, std::__1::default_delete<realm::Array> >=^{Array}}}}}Q{BasicTableRef<realm::Table>=^{Table}}^{BacklinkColumn}{BasicRow<const realm::Table>={BasicTableRef<realm::Table>=^{Table}}Q^{RowBase}^{RowBase}}{shared_ptr<const realm::LinkView>=^{LinkView}^{__shared_weak_count}}Q{SortDescriptor={vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >=^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}{__compressed_pair<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > *, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >=^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}}{SortDescriptor={vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >=^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}{__compressed_pair<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > *, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >=^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}}{Query={basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=QQ*}{__short=(?=Cc)[23c]}{__raw=[3Q]})}}}{vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup> >=^{QueryGroup}^{QueryGroup}{__compressed_pair<realm::QueryGroup *, std::__1::allocator<realm::QueryGroup> >=^{QueryGroup}}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^Q^Q{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^Q}}{shared_ptr<const realm::Descriptor>=^{Descriptor}^{__shared_weak_count}}{BasicTableRef<realm::Table>=^{Table}}^{RowIndexes}{shared_ptr<realm::LinkView>=^{LinkView}^{__shared_weak_count}}^{TableViewBase}{unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase> >={__compressed_pair<realm::TableViewBase *, std::__1::default_delete<realm::TableViewBase> >=^{TableViewBase}}}}QQQ{Optional<unsigned long long>=(?=Qc)B}Q}{shared_ptr<realm::LinkView>=^{LinkView}^{__shared_weak_count}}{BasicTableRef<realm::Table>=^{Table}}{SortDescriptor={vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >=^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}{__compressed_pair<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > *, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >=^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}}{SortDescriptor={vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >=^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}{__compressed_pair<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > *, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >=^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}}}{vector<bool, std::__1::allocator<bool> >=^QQ{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=Q}}}{Handle<realm::_impl::ResultsNotifier>=^{ResultsNotifier}^{__shared_weak_count}}iiBB}24
@52@0:8@1624@40B48
{Results="m_realm"{shared_ptr<realm::Realm>="__ptr_"^{Realm}"__cntrl_"^{__shared_weak_count}}"m_object_schema"^{ObjectSchema}"m_query"{Query="error_code"{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >="__r_"{__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}"m_groups"{vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup> >="__begin_"^{QueryGroup}"__end_"^{QueryGroup}"__end_cap_"{__compressed_pair<realm::QueryGroup *, std::__1::allocator<realm::QueryGroup> >="__value_"^{QueryGroup}}}"m_subtable_path"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}"m_current_descriptor"{shared_ptr<const realm::Descriptor>="__ptr_"^{Descriptor}"__cntrl_"^{__shared_weak_count}}"m_table"{BasicTableRef<realm::Table>="m_ptr"^{Table}}"m_view"^{RowIndexes}"m_source_link_view"{shared_ptr<realm::LinkView>="__ptr_"^{LinkView}"__cntrl_"^{__shared_weak_count}}"m_source_table_view"^{TableViewBase}"m_owned_source_table_view"{unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase> >="__ptr_"{__compressed_pair<realm::TableViewBase *, std::__1::default_delete<realm::TableViewBase> >="__value_"^{TableViewBase}}}}"m_table_view"{TableView="_vptr$RowIndexes"^^?"m_row_indexes"{Column<long long>="_vptr$ColumnBase"^^?"m_column_ndx"Q"m_search_index"{unique_ptr<realm::StringIndex, std::__1::default_delete<realm::StringIndex> >="__ptr_"{__compressed_pair<realm::StringIndex *, std::__1::default_delete<realm::StringIndex> >="__value_"^{StringIndex}}}"m_tree"{BpTree<long long>="m_root"{unique_ptr<realm::Array, std::__1::default_delete<realm::Array> >="__ptr_"{__compressed_pair<realm::Array *, std::__1::default_delete<realm::Array> >="__value_"^{Array}}}}}"m_debug_cookie"Q"m_table"{BasicTableRef<realm::Table>="m_ptr"^{Table}}"m_linked_column"^{BacklinkColumn}"m_linked_row"{BasicRow<const realm::Table>="m_table"{BasicTableRef<realm::Table>="m_ptr"^{Table}}"m_row_ndx"Q"m_prev"^{RowBase}"m_next"^{RowBase}}"m_linkview_source"{shared_ptr<const realm::LinkView>="__ptr_"^{LinkView}"__cntrl_"^{__shared_weak_count}}"m_distinct_column_source"Q"m_distinct_predicate"{SortDescriptor="m_columns"{vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >="__begin_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}"__end_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}"__end_cap_"{__compressed_pair<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > *, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >="__value_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}}}"m_ascending"{vector<bool, std::__1::allocator<bool> >="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >="__value_"Q}}}"m_sorting_predicate"{SortDescriptor="m_columns"{vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >="__begin_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}"__end_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}"__end_cap_"{__compressed_pair<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > *, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >="__value_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}}}"m_ascending"{vector<bool, std::__1::allocator<bool> >="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >="__value_"Q}}}"m_query"{Query="error_code"{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >="__r_"{__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >="__value_"{__rep=""(?="__l"{__long="__cap_"Q"__size_"Q"__data_"*}"__s"{__short=""(?="__size_"C"__lx"c)"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}"m_groups"{vector<realm::QueryGroup, std::__1::allocator<realm::QueryGroup> >="__begin_"^{QueryGroup}"__end_"^{QueryGroup}"__end_cap_"{__compressed_pair<realm::QueryGroup *, std::__1::allocator<realm::QueryGroup> >="__value_"^{QueryGroup}}}"m_subtable_path"{vector<unsigned long, std::__1::allocator<unsigned long> >="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >="__value_"^Q}}"m_current_descriptor"{shared_ptr<const realm::Descriptor>="__ptr_"^{Descriptor}"__cntrl_"^{__shared_weak_count}}"m_table"{BasicTableRef<realm::Table>="m_ptr"^{Table}}"m_view"^{RowIndexes}"m_source_link_view"{shared_ptr<realm::LinkView>="__ptr_"^{LinkView}"__cntrl_"^{__shared_weak_count}}"m_source_table_view"^{TableViewBase}"m_owned_source_table_view"{unique_ptr<realm::TableViewBase, std::__1::default_delete<realm::TableViewBase> >="__ptr_"{__compressed_pair<realm::TableViewBase *, std::__1::default_delete<realm::TableViewBase> >="__value_"^{TableViewBase}}}}"m_start"Q"m_end"Q"m_limit"Q"m_last_seen_version"{Optional<unsigned long long>=""(?="m_value"Q"m_null_state"c)"m_engaged"B}"m_num_detached_refs"Q}"m_link_view"{shared_ptr<realm::LinkView>="__ptr_"^{LinkView}"__cntrl_"^{__shared_weak_count}}"m_table"{BasicTableRef<realm::Table>="m_ptr"^{Table}}"m_sort"{SortDescriptor="m_columns"{vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >="__begin_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}"__end_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}"__end_cap_"{__compressed_pair<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > *, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >="__value_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}}}"m_ascending"{vector<bool, std::__1::allocator<bool> >="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >="__value_"Q}}}"m_distinct"{SortDescriptor="m_columns"{vector<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >="__begin_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}"__end_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}"__end_cap_"{__compressed_pair<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > *, std::__1::allocator<std::__1::vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> > > >="__value_"^{vector<const realm::ColumnBase *, std::__1::allocator<const realm::ColumnBase *> >}}}"m_ascending"{vector<bool, std::__1::allocator<bool> >="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >="__value_"Q}}}"m_notifier"{Handle<realm::_impl::ResultsNotifier>="__ptr_"^{ResultsNotifier}"__cntrl_"^{__shared_weak_count}}"m_mode"i"m_update_policy"i"m_has_used_table_view"B"m_wants_background_updates"B}
@24@0:8r^{Schema=^{ObjectSchema}^{ObjectSchema}{__compressed_pair<realm::ObjectSchema *, std::__1::allocator<realm::ObjectSchema> >=^{ObjectSchema}}}16
#24@0:8@16
{Schema=^{ObjectSchema}^{ObjectSchema}{__compressed_pair<realm::ObjectSchema *, std::__1::allocator<realm::ObjectSchema> >=^{ObjectSchema}}}16@0:8
{Schema="__begin_"^{ObjectSchema}"__end_"^{ObjectSchema}"__end_cap_"{__compressed_pair<realm::ObjectSchema *, std::__1::allocator<realm::ObjectSchema> >="__value_"^{ObjectSchema}}}
@"NSMutableDictionary"
{unique_ptr<realm::ThreadSafeReferenceBase, std::__1::default_delete<realm::ThreadSafeReferenceBase> >="__ptr_"{__compressed_pair<realm::ThreadSafeReferenceBase *, std::__1::default_delete<realm::ThreadSafeReferenceBase> >="__value_"^{ThreadSafeReferenceBase}}}
