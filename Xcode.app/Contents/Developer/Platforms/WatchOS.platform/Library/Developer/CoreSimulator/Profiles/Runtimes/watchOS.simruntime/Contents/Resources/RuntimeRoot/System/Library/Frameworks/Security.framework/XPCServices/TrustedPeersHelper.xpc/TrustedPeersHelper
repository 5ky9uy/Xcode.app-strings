TrustedPeersHelper
ServiceDelegate
Scope
NCKDatabaseScope
TPPeerStatus
CuttlefishResetReason
CFString
NCFStringRef
TPPBPeerStableInfo_UserControllableViewStatus
CoreFoundation
SetValueTransformer
RecoveryKey
Error
Decrypter
RecoveryKeySet
RecoveryKeySetError
RawPolicy
TrustedPeersHelper
OctagonSelfPeerKeys
OctagonSelfPeerKeysError
RetryingInvocable
MyCodeConnection
ContainerNameToCuttlefishInvocable
CKCodeCuttlefishInvocableCreator
ContainerMap
SignedPeerPermanentInfo
SignedPeerStableInfo
SignedPeerDynamicInfo
SignedRecoveryVoucher
PolicyDocumentKey
PolicyDocumentMapEntry
ValidationTLKShare
ValidateOctagonPeer
ValidationOctagon
ValidateEscrowRecord
ValidationEscrowRecord
ValidationResult
EstablishRequest
EstablishResponse
JoinWithVoucherRequest
JoinWithVoucherResponse
UpdateTrustRequest
UpdateTrustResponse
SetRecoveryKeyRequest
SetRecoveryKeyResponse
FetchChangesRequest
FetchChangesResponse
FetchViableBottlesRequest
FetchViableBottlesResponse
FetchPolicyDocumentsRequest
FetchPolicyDocumentsResponse
ValidatePeersRequest
ValidatePeersResponse
ReportHealthRequest
ReportHealthResponse
PushHealthInquiryRequest
PushHealthInquiryResponse
GetRepairActionRequest
EscrowProxyFederationMoveRecordRequest
GetRepairActionResponse
SupportAppDevice
GetSupportAppInfoRequest
GetSupportAppInfoResponse
GetClubCertificatesRequest
GetClubCertificatesResponse
EscrowInformation
FetchSOSiCloudIdentityRequest
FetchSOSiCloudIdentityResponse
ViewKeyClass
ResetReason
RepairAction
SupportAppDeviceStatus
RecordStatus
SOSViability
SignedVoucher
Peer
PeerDifference
OneOf_Operation
TLKShare
ViewKey
ViewKeys
Bottle
EscrowPair
Changes
ValidateSOSPeer
ValidationSOS
OneOf_Result
ResetRequest
ResetResponse
SupportAppView
Federation
ClubCertificate
Metadata
ClientMetadata
CuttlefishAPIAsyncClient
CuttlefishAPIAsync
TrustedPeersHelper
ContainerError
Container
ContainerName
StableChanges
Client
EscrowKeys
EscrowKeysError
BottledPeer
Error
BottleMO
ContainerMO
EscrowClientMetadataMO
EscrowMetadataMO
EscrowRecordMO
MachineMO
PeerMO
PolicyMO
RecoveryVoucherMO
VoucherMO
@(#)PROGRAM:TrustedPeersHelper  PROJECT:Security-59754.40.51
Starting up
_TtC18TrustedPeersHelper15ServiceDelegate
B32@0:8@16@24
@16@0:8
com.apple.private.trustedpeershelper.client
Received a new client: %{public}@
client(%{public}@) is missing entitlement '%{public}@', rejecting
client(%{public}@) has wrong boolean value for '%{public}@' (%d), rejecting
client(%{public}@) has wrong integer value for '%{public}@' (%d), rejecting
client has entitlement '%{public}@'
com.apple.security.TrustedPeersHelper.ContainerMap
NSXPCListenerDelegate
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
TrustedPeersHelperProtocol
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v48@0:8@16@24q32@?40
v52@0:8@16@24@32B40@?44
v140@0:8@16@24Q32@40@48@56@64@72@80@88@96@104i112@116@124@?132
v64@0:8@16@24@32@40@48@?56
v88@0:8@16@24@32@40@48@56@64@72@?80
v72@0:8@16@24@32@40@48@56@?64
v56@0:8@16@24@32@40@?48
v80@0:8@16@24@32@40@48@56@64@?72
v44@0:8@16@24B32@?36
v24@0:8@?<v@?>16
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSSet"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"TrustedPeersHelperEgoPeerStatus"@"NSError">32
v48@0:8@"NSString"16@"NSString"24q32@?<v@?@"NSError">40
v52@0:8@"NSString"16@"NSString"24@"NSSet"32B40@?<v@?B@"NSError">44
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@?<v@?@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSSet"@"NSError">32
v40@0:8@"NSString"16@"NSString"24@?<v@?Q@"NSError">32
v140@0:8@"NSString"16@"NSString"24Q32@"NSString"40@"NSString"48@"NSString"56@"NSString"64@"NSString"72@"NSString"80@"NSString"88@"TPPolicyVersion"96@"NSDictionary"104i112@"NSData"116@"NSData"124@?<v@?@"NSString"@"NSData"@"NSData"@"NSData"@"NSData"@"TPSyncingPolicy"@"NSError">132
v64@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@"NSArray"48@?<v@?@"NSString"@"NSArray"@"TPSyncingPolicy"@"NSError">56
v88@0:8@"NSString"16@"NSString"24@"NSString"32@"NSData"40@"NSData"48@"NSData"56@"NSData"64@"NSArray"72@?<v@?@"NSData"@"NSData"@"NSError">80
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"NSString"@"TPSyncingPolicy"B@"NSError">40
v72@0:8@"NSString"16@"NSString"24@"NSString"32@"NSData"40@"NSString"48@"NSArray"56@?<v@?@"NSData"@"NSData"qq@"NSError">64
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSString"@"TPSyncingPolicy"@"NSError">48
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@?<v@?@"NSData"@"NSData"@"NSError">56
v80@0:8@"NSString"16@"NSString"24@"NSData"32@"NSData"40@"NSArray"48@"NSArray"56@"NSArray"64@?<v@?@"NSString"@"NSArray"@"TPSyncingPolicy"@"NSError">72
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@?<v@?B@"NSError">40
v88@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSString"48@"NSNumber"56@"NSDictionary"64@"NSNumber"72@?<v@?@"TrustedPeersHelperPeerState"@"TPSyncingPolicy"@"NSError">80
v48@0:8@"NSString"16@"NSString"24@"NSArray"32@?<v@?@"TrustedPeersHelperPeerState"@"NSError">40
v56@0:8@"NSString"16@"NSString"24@"NSArray"32@"NSArray"40@?<v@?@"NSArray"@"NSError">48
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSArray"@"NSArray"@"NSError">32
v44@0:8@"NSString"16@"NSString"24B32@?<v@?@"NSArray"@"NSError">36
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData"@"NSString"@"NSData"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSSet"32@?<v@?@"NSDictionary"@"NSError">40
v48@0:8@"NSString"16@"NSString"24@"NSString"32@?<v@?@"TPSyncingPolicy"i@"NSError">40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"TrustedPeersHelperPeerState"@"NSArray"@"NSError">32
v64@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@?<v@?@"NSArray"@"NSError">56
v56@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@?<v@?@"NSError">48
v44@0:8@"NSString"16@"NSString"24B32@?<v@?BBBB@"NSError">36
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSData"@"NSError">32
NSObject
B24@0:8@16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
Tq,N,R
superclass
T#,N,R
description
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
#16@0:8
B16@0:8
@24@0:8@16
Failed to deserialize a purported Set: %@
Failed to serialize a Set: %@
_TtC18TrustedPeersHelper11RecoveryKey
recoveryKeys
secret
peerKeys
keys generated by the entropy+salt do not match the Recovery contents
failed to create entropy
failed to create recovery keys
failed to create private key
failed to create authenticated ciphertext
failed to create Recovery
public and private peer signing keys do not match
Failed to instantiate octagon peer keys
could not decrypt Recovery contents
Failed to deserialize Recovery peer
TrustedPeersHelper.RecoveryKey
_TtC18TrustedPeersHelper9Decrypter
@40@0:8@16@24^@32
TPDecrypter
@"NSData"40@0:8@"NSData"16@"NSData"24^@32
_TtC18TrustedPeersHelper14RecoveryKeySet
signingKey
recoverySalt
Key generation crypto failed 
Unsupported Key Type 
Failed to save item to keychain: 
Item does not exist
Key generation failed
com.apple.security.trustedpeers.RecoveryKeySetError
com.apple.security.octagon
Recoveryed Encryption Key-%@
Recoveryed Signing Key-%@
Recovery Signing Private Key
Recovery Encryption Private Key
TrustedPeersHelper.RecoveryKeySet
init()
SHA256:TLXrcQmY4ue3oP5pCX1pwsi9BF8cKfohlJBilCroeBs=
SafariCreditCards
TrustedPeersHelper/Policy.swift
CAESDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSCwoDTWFjEgRmdWxsEgwKBGlNYWMSBGZ1bGwSDQoHQXBwbGVUVhICdHYSDgoFV2F0Y2gSBXdhdGNoGhEKCVBDU0VzY3JvdxIEZnVsbBoXCgRXaUZpEgRmdWxsEgJ0dhIFd2F0Y2gaGQoRU2FmYXJpQ3JlZGl0Q2FyZHMSBGZ1bGwiDAoEZnVsbBIEZnVsbCIUCgV3YXRjaBIEZnVsbBIFd2F0Y2giDgoCdHYSBGZ1bGwSAnR2
SHA256:ZL1WBUCyO155rHBJQeghomCCKGmfjtS0jvsK+UEvx5o=
CAISDgoGaUN5Y2xlEgRmdWxsEg4KBmlQaG9uZRIEZnVsbBIMCgRpUGFkEgRmdWxsEgsKA01hYxIEZnVsbBIMCgRpTWFjEgRmdWxsEg0KB0FwcGxlVFYSAnR2Eg4KBVdhdGNoEgV3YXRjaBoRCglQQ1NFc2Nyb3cSBGZ1bGwaFwoEV2lGaRIEZnVsbBICdHYSBXdhdGNoGhkKEVNhZmFyaUNyZWRpdENhcmRzEgRmdWxsIgwKBGZ1bGwSBGZ1bGwiFAoFd2F0Y2gSBGZ1bGwSBXdhdGNoIg4KAnR2EgRmdWxsEgJ0dg==
SHA256:JZzazSuHXrUhiOfSgElsg6vYKpnvvEPVpciR8FewRWg=
LimitedPeersAllowed
SecureObjectSync
ProtectedCloudStorage
^LimitedPeersAllowed$
^ContinuityUnlock$
^com.apple.security.sos$
^iCloudIdentity$
^PCSiCloudBackup$
^PCSiCloudDrive$
^com.apple.safari.credit-cards$
^com.apple.cfnetwork$
^AccessoryPairing$
^WatchMigration$
CAMSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSCwoDTWFjEgRmdWxsEgwKBGlNYWMSBGZ1bGwSDQoHQXBwbGVUVhICdHYSDgoFV2F0Y2gSBXdhdGNoEhcKDkF1ZGlvQWNjZXNzb3J5EgVhdWRpbxocCg1EZXZpY2VQYWlyaW5nEgRmdWxsEgV3YXRjaBoXCghBcHBsZVBheRIEZnVsbBIFd2F0Y2gaJAoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgRmdWxsEgV3YXRjaBoXCghCYWNrc3RvcBIEZnVsbBIFd2F0Y2gaGQoKQXV0b1VubG9jaxIEZnVsbBIFd2F0Y2gaHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaIAoRU2FmYXJpQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoGhMKBEhvbWUSBGZ1bGwSBXdhdGNoGh4KD1NhZmFyaVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gaGwoMQXBwbGljYXRpb25zEgRmdWxsEgV3YXRjaBoVCgZFbmdyYW0SBGZ1bGwSBXdhdGNoGi0KE0xpbWl0ZWRQZWVyc0FsbG93ZWQSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aFgoHTWFuYXRlZRIEZnVsbBIFd2F0Y2gaHgoEV2lGaRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoIhMKBGZ1bGwSBGZ1bGwSBXdhdGNoIhsKBWF1ZGlvEgRmdWxsEgV3YXRjaBIFYXVkaW8iFAoFd2F0Y2gSBGZ1bGwSBXdhdGNoIhUKAnR2EgRmdWxsEgV3YXRjaBICdHYyIgoWAAQiEgIEdndodAoKXkFwcGxlUGF5JBIIQXBwbGVQYXkyJgoYAAQiFAIEdndodAoMXkF1dG9VbmxvY2skEgpBdXRvVW5sb2NrMh4KFAAEIhACBHZ3aHQKCF5FbmdyYW0kEgZFbmdyYW0yHgoUAAQiEAIEdndodAoIXkhlYWx0aCQSBkhlYWx0aDIaChIABCIOAgR2d2h0CgZeSG9tZSQSBEhvbWUyIAoVAAQiEQIEdndodAoJXk1hbmF0ZWUkEgdNYW5hdGVlMjgKIQAEIh0CBHZ3aHQKFV5MaW1pdGVkUGVlcnNBbGxvd2VkJBITTGltaXRlZFBlZXJzQWxsb3dlZDJdClAAAhIeAAQiGgIEdndodAoSXkNvbnRpbnVpdHlVbmxvY2skEhUABCIRAgR2d2h0CgleSG9tZUtpdCQSFQAEIhECBHZ3aHQKCV5BcHBsZVRWJBIJTm90U3luY2VkMisKGwAEIhcCBGFncnAKD15bMC05QS1aXXsxMH1cLhIMQXBwbGljYXRpb25zMsUBCrABAAISNAABChMABCIPAgVjbGFzcwoGXmdlbnAkChsABCIXAgRhZ3JwCg9eY29tLmFwcGxlLnNiZCQSPQABChMABCIPAgVjbGFzcwoGXmtleXMkCiQABCIgAgRhZ3JwChheY29tLmFwcGxlLnNlY3VyaXR5LnNvcyQSGQAEIhUCBHZ3aHQKDV5CYWNrdXBCYWdWMCQSHAAEIhgCBHZ3aHQKEF5pQ2xvdWRJZGVudGl0eSQSEFNlY3VyZU9iamVjdFN5bmMyYwpbAAISEgAEIg4CBHZ3aHQKBl5XaUZpJBJDAAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKEwAEIg8CBGFncnAKB15hcHBsZSQKFQAEIhECBHN2Y2UKCV5BaXJQb3J0JBIEV2lGaTLbAgrBAgACEhkABCIVAgR2d2h0Cg1eUENTQ2xvdWRLaXQkEhcABCITAgR2d2h0CgteUENTRXNjcm93JBIUAAQiEAIEdndodAoIXlBDU0ZERSQSGQAEIhUCBHZ3aHQKDV5QQ1NGZWxkc3BhciQSGQAEIhUCBHZ3aHQKDV5QQ1NNYWlsRHJvcCQSGgAEIhYCBHZ3aHQKDl5QQ1NNYXN0ZXJLZXkkEhYABCISAgR2d2h0CgpeUENTTm90ZXMkEhcABCITAgR2d2h0CgteUENTUGhvdG9zJBIYAAQiFAIEdndodAoMXlBDU1NoYXJpbmckEh0ABCIZAgR2d2h0ChFeUENTaUNsb3VkQmFja3VwJBIcAAQiGAIEdndodAoQXlBDU2lDbG91ZERyaXZlJBIZAAQiFQIEdndodAoNXlBDU2lNZXNzYWdlJBIVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlMkAKKwAEIicCBGFncnAKH15jb20uYXBwbGUuc2FmYXJpLmNyZWRpdC1jYXJkcyQSEVNhZmFyaUNyZWRpdENhcmRzMjQKIQAEIh0CBGFncnAKFV5jb20uYXBwbGUuY2ZuZXR3b3JrJBIPU2FmYXJpUGFzc3dvcmRzMm0KXAACEh4ABCIaAgR2d2h0ChJeQWNjZXNzb3J5UGFpcmluZyQSGgAEIhYCBHZ3aHQKDl5OYW5vUmVnaXN0cnkkEhwABCIYAgR2d2h0ChBeV2F0Y2hNaWdyYXRpb24kEg1EZXZpY2VQYWlyaW5nMi0KIQAEIh0CBGFncnAKFV5jb20uYXBwbGUuY2ZuZXR3b3JrJBIIQmFja3N0b3A=
SHA256:Tjdu5QrWGvKWMx7k3VWFrEWSsBDPZAwCql9ybDkvFs8=
^PCS-iCloudBackup$
^PCS-iCloudDrive$
CAQSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSCwoDTWFjEgRmdWxsEgwKBGlNYWMSBGZ1bGwSDQoHQXBwbGVUVhICdHYSDgoFV2F0Y2gSBXdhdGNoEhcKDkF1ZGlvQWNjZXNzb3J5EgVhdWRpbxoTCgRIb21lEgRmdWxsEgV3YXRjaBobCgxBcHBsaWNhdGlvbnMSBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aGQoKQXV0b1VubG9jaxIEZnVsbBIFd2F0Y2gaFwoIQXBwbGVQYXkSBGZ1bGwSBXdhdGNoGhUKBkhlYWx0aBIEZnVsbBIFd2F0Y2gaFgoHTWFuYXRlZRIEZnVsbBIFd2F0Y2gaLQoTTGltaXRlZFBlZXJzQWxsb3dlZBIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxokChVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2USBGZ1bGwSBXdhdGNoGhgKCVBhc3N3b3JkcxIEZnVsbBIFd2F0Y2gaHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaFQoGRW5ncmFtEgRmdWxsEgV3YXRjaBoaCgtDcmVkaXRDYXJkcxIEZnVsbBIFd2F0Y2giGwoFYXVkaW8SBGZ1bGwSBXdhdGNoEgVhdWRpbyITCgRmdWxsEgRmdWxsEgV3YXRjaCIUCgV3YXRjaBIEZnVsbBIFd2F0Y2giFQoCdHYSBGZ1bGwSBXdhdGNoEgJ0djIiChYABCISAgR2d2h0CgpeQXBwbGVQYXkkEghBcHBsZVBheTImChgABCIUAgR2d2h0CgxeQXV0b1VubG9jayQSCkF1dG9VbmxvY2syHgoUAAQiEAIEdndodAoIXkVuZ3JhbSQSBkVuZ3JhbTIeChQABCIQAgR2d2h0CgheSGVhbHRoJBIGSGVhbHRoMhoKEgAEIg4CBHZ3aHQKBl5Ib21lJBIESG9tZTIgChUABCIRAgR2d2h0CgleTWFuYXRlZSQSB01hbmF0ZWUyOAohAAQiHQIEdndodAoVXkxpbWl0ZWRQZWVyc0FsbG93ZWQkEhNMaW1pdGVkUGVlcnNBbGxvd2VkMl0KUAACEh4ABCIaAgR2d2h0ChJeQ29udGludWl0eVVubG9jayQSFQAEIhECBHZ3aHQKCV5Ib21lS2l0JBIVAAQiEQIEdndodAoJXkFwcGxlVFYkEglOb3RTeW5jZWQyKwobAAQiFwIEYWdycAoPXlswLTlBLVpdezEwfVwuEgxBcHBsaWNhdGlvbnMyxQEKsAEAAhI0AAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKGwAEIhcCBGFncnAKD15jb20uYXBwbGUuc2JkJBI9AAEKEwAEIg8CBWNsYXNzCgZea2V5cyQKJAAEIiACBGFncnAKGF5jb20uYXBwbGUuc2VjdXJpdHkuc29zJBIZAAQiFQIEdndodAoNXkJhY2t1cEJhZ1YwJBIcAAQiGAIEdndodAoQXmlDbG91ZElkZW50aXR5JBIQU2VjdXJlT2JqZWN0U3luYzJjClsAAhISAAQiDgIEdndodAoGXldpRmkkEkMAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAoTAAQiDwIEYWdycAoHXmFwcGxlJAoVAAQiEQIEc3ZjZQoJXkFpclBvcnQkEgRXaUZpMucCCs0CAAISGgAEIhYCBHZ3aHQKDl5QQ1MtQ2xvdWRLaXQkEhgABCIUAgR2d2h0CgxeUENTLUVzY3JvdyQSFQAEIhECBHZ3aHQKCV5QQ1MtRkRFJBIaAAQiFgIEdndodAoOXlBDUy1GZWxkc3BhciQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbERyb3AkEhsABCIXAgR2d2h0Cg9eUENTLU1hc3RlcktleSQSFwAEIhMCBHZ3aHQKC15QQ1MtTm90ZXMkEhgABCIUAgR2d2h0CgxeUENTLVBob3RvcyQSGQAEIhUCBHZ3aHQKDV5QQ1MtU2hhcmluZyQSHgAEIhoCBHZ3aHQKEl5QQ1MtaUNsb3VkQmFja3VwJBIdAAQiGQIEdndodAoRXlBDUy1pQ2xvdWREcml2ZSQSGgAEIhYCBHZ3aHQKDl5QQ1MtaU1lc3NhZ2UkEhVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2UyOgorAAQiJwIEYWdycAofXmNvbS5hcHBsZS5zYWZhcmkuY3JlZGl0LWNhcmRzJBILQ3JlZGl0Q2FyZHMyLgohAAQiHQIEYWdycAoVXmNvbS5hcHBsZS5jZm5ldHdvcmskEglQYXNzd29yZHMybQpcAAISHgAEIhoCBHZ3aHQKEl5BY2Nlc3NvcnlQYWlyaW5nJBIaAAQiFgIEdndodAoOXk5hbm9SZWdpc3RyeSQSHAAEIhgCBHZ3aHQKEF5XYXRjaE1pZ3JhdGlvbiQSDURldmljZVBhaXJpbmc=
SHA256:O/ECQlWhvNlLmlDNh2+nal/yekUC87bXpV3k+6kznSo=
CAUSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvGhsKDEFwcGxpY2F0aW9ucxIEZnVsbBIFd2F0Y2gaHwoQU2VjdXJlT2JqZWN0U3luYxIEZnVsbBIFd2F0Y2gaHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaGgoLQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoGhUKBkhlYWx0aBIEZnVsbBIFd2F0Y2gaLQoTTGltaXRlZFBlZXJzQWxsb3dlZBIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxokChVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2USBGZ1bGwSBXdhdGNoGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBoZCgpBdXRvVW5sb2NrEgRmdWxsEgV3YXRjaBoWCgdNYW5hdGVlEgRmdWxsEgV3YXRjaBoYCglQYXNzd29yZHMSBGZ1bGwSBXdhdGNoGhUKBkVuZ3JhbRIEZnVsbBIFd2F0Y2gaHgoEV2lGaRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxoTCgRIb21lEgRmdWxsEgV3YXRjaCIbCgVhdWRpbxIEZnVsbBIFd2F0Y2gSBWF1ZGlvIhMKBGZ1bGwSBGZ1bGwSBXdhdGNoIhUKAnR2EgRmdWxsEgV3YXRjaBICdHYiFAoFd2F0Y2gSBGZ1bGwSBXdhdGNoMiIKFgAEIhICBHZ3aHQKCl5BcHBsZVBheSQSCEFwcGxlUGF5MiYKGAAEIhQCBHZ3aHQKDF5BdXRvVW5sb2NrJBIKQXV0b1VubG9jazIeChQABCIQAgR2d2h0CgheRW5ncmFtJBIGRW5ncmFtMh4KFAAEIhACBHZ3aHQKCF5IZWFsdGgkEgZIZWFsdGgyGgoSAAQiDgIEdndodAoGXkhvbWUkEgRIb21lMiAKFQAEIhECBHZ3aHQKCV5NYW5hdGVlJBIHTWFuYXRlZTI4CiEABCIdAgR2d2h0ChVeTGltaXRlZFBlZXJzQWxsb3dlZCQSE0xpbWl0ZWRQZWVyc0FsbG93ZWQyXQpQAAISHgAEIhoCBHZ3aHQKEl5Db250aW51aXR5VW5sb2NrJBIVAAQiEQIEdndodAoJXkhvbWVLaXQkEhUABCIRAgR2d2h0CgleQXBwbGVUViQSCU5vdFN5bmNlZDIrChsABCIXAgRhZ3JwCg9eWzAtOUEtWl17MTB9XC4SDEFwcGxpY2F0aW9uczLFAQqwAQACEjQAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAobAAQiFwIEYWdycAoPXmNvbS5hcHBsZS5zYmQkEj0AAQoTAAQiDwIFY2xhc3MKBl5rZXlzJAokAAQiIAIEYWdycAoYXmNvbS5hcHBsZS5zZWN1cml0eS5zb3MkEhkABCIVAgR2d2h0Cg1eQmFja3VwQmFnVjAkEhwABCIYAgR2d2h0ChBeaUNsb3VkSWRlbnRpdHkkEhBTZWN1cmVPYmplY3RTeW5jMmMKWwACEhIABCIOAgR2d2h0CgZeV2lGaSQSQwABChMABCIPAgVjbGFzcwoGXmdlbnAkChMABCIPAgRhZ3JwCgdeYXBwbGUkChUABCIRAgRzdmNlCgleQWlyUG9ydCQSBFdpRmkynQMKgwMAAhIYAAQiFAIEdndodAoMXlBDUy1CYWNrdXAkEhoABCIWAgR2d2h0Cg5eUENTLUNsb3VkS2l0JBIYAAQiFAIEdndodAoMXlBDUy1Fc2Nyb3ckEhUABCIRAgR2d2h0CgleUENTLUZERSQSGgAEIhYCBHZ3aHQKDl5QQ1MtRmVsZHNwYXIkEhoABCIWAgR2d2h0Cg5eUENTLU1haWxEcm9wJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsZHJvcCQSGwAEIhcCBHZ3aHQKD15QQ1MtTWFzdGVyS2V5JBIXAAQiEwIEdndodAoLXlBDUy1Ob3RlcyQSGAAEIhQCBHZ3aHQKDF5QQ1MtUGhvdG9zJBIZAAQiFQIEdndodAoNXlBDUy1TaGFyaW5nJBIeAAQiGgIEdndodAoSXlBDUy1pQ2xvdWRCYWNrdXAkEh0ABCIZAgR2d2h0ChFeUENTLWlDbG91ZERyaXZlJBIaAAQiFgIEdndodAoOXlBDUy1pTWVzc2FnZSQSFVByb3RlY3RlZENsb3VkU3RvcmFnZTI6CisABCInAgRhZ3JwCh9eY29tLmFwcGxlLnNhZmFyaS5jcmVkaXQtY2FyZHMkEgtDcmVkaXRDYXJkczIuCiEABCIdAgRhZ3JwChVeY29tLmFwcGxlLmNmbmV0d29yayQSCVBhc3N3b3JkczJtClwAAhIeAAQiGgIEdndodAoSXkFjY2Vzc29yeVBhaXJpbmckEhoABCIWAgR2d2h0Cg5eTmFub1JlZ2lzdHJ5JBIcAAQiGAIEdndodAoQXldhdGNoTWlncmF0aW9uJBINRGV2aWNlUGFpcmluZzIOCgIABhIIQmFja3N0b3A=
SHA256:L2Px1aYyR1tgChe8dIyTBSmCHCWEFJirZ3ELMFXz2PY=
^com\.apple\.sbd$
^com\.apple\.security\.sos$
^com\.apple\.safari\.credit-cards$
^com\.apple\.cfnetwork$
CAYSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvGhoKC0NyZWRpdENhcmRzEgRmdWxsEgV3YXRjaBofChBTZWN1cmVPYmplY3RTeW5jEgRmdWxsEgV3YXRjaBoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aHgoESG9tZRIEZnVsbBIFd2F0Y2gSAnR2EgVhdWRpbxokChVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2USBGZ1bGwSBXdhdGNoGi0KE0xpbWl0ZWRQZWVyc0FsbG93ZWQSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aGAoJUGFzc3dvcmRzEgRmdWxsEgV3YXRjaBobCgxBcHBsaWNhdGlvbnMSBGZ1bGwSBXdhdGNoGhwKDURldmljZVBhaXJpbmcSBGZ1bGwSBXdhdGNoGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBoWCgdNYW5hdGVlEgRmdWxsEgV3YXRjaBoVCgZFbmdyYW0SBGZ1bGwSBXdhdGNoIhsKBWF1ZGlvEgRmdWxsEgV3YXRjaBIFYXVkaW8iFQoCdHYSBGZ1bGwSBXdhdGNoEgJ0diIUCgV3YXRjaBIEZnVsbBIFd2F0Y2giEwoEZnVsbBIEZnVsbBIFd2F0Y2gyIgoWAAQiEgIEdndodAoKXkFwcGxlUGF5JBIIQXBwbGVQYXkyJgoYAAQiFAIEdndodAoMXkF1dG9VbmxvY2skEgpBdXRvVW5sb2NrMh4KFAAEIhACBHZ3aHQKCF5FbmdyYW0kEgZFbmdyYW0yHgoUAAQiEAIEdndodAoIXkhlYWx0aCQSBkhlYWx0aDIaChIABCIOAgR2d2h0CgZeSG9tZSQSBEhvbWUyIAoVAAQiEQIEdndodAoJXk1hbmF0ZWUkEgdNYW5hdGVlMjgKIQAEIh0CBHZ3aHQKFV5MaW1pdGVkUGVlcnNBbGxvd2VkJBITTGltaXRlZFBlZXJzQWxsb3dlZDJdClAAAhIeAAQiGgIEdndodAoSXkNvbnRpbnVpdHlVbmxvY2skEhUABCIRAgR2d2h0CgleSG9tZUtpdCQSFQAEIhECBHZ3aHQKCV5BcHBsZVRWJBIJTm90U3luY2VkMisKGwAEIhcCBGFncnAKD15bMC05QS1aXXsxMH1cLhIMQXBwbGljYXRpb25zMsoBCrUBAAISNgABChMABCIPAgVjbGFzcwoGXmdlbnAkCh0ABCIZAgRhZ3JwChFeY29tXC5hcHBsZVwuc2JkJBJAAAEKEwAEIg8CBWNsYXNzCgZea2V5cyQKJwAEIiMCBGFncnAKG15jb21cLmFwcGxlXC5zZWN1cml0eVwuc29zJBIZAAQiFQIEdndodAoNXkJhY2t1cEJhZ1YwJBIcAAQiGAIEdndodAoQXmlDbG91ZElkZW50aXR5JBIQU2VjdXJlT2JqZWN0U3luYzJjClsAAhISAAQiDgIEdndodAoGXldpRmkkEkMAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAoTAAQiDwIEYWdycAoHXmFwcGxlJAoVAAQiEQIEc3ZjZQoJXkFpclBvcnQkEgRXaUZpMp0DCoMDAAISGAAEIhQCBHZ3aHQKDF5QQ1MtQmFja3VwJBIaAAQiFgIEdndodAoOXlBDUy1DbG91ZEtpdCQSGAAEIhQCBHZ3aHQKDF5QQ1MtRXNjcm93JBIVAAQiEQIEdndodAoJXlBDUy1GREUkEhoABCIWAgR2d2h0Cg5eUENTLUZlbGRzcGFyJBIaAAQiFgIEdndodAoOXlBDUy1NYWlsRHJvcCQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbGRyb3AkEhsABCIXAgR2d2h0Cg9eUENTLU1hc3RlcktleSQSFwAEIhMCBHZ3aHQKC15QQ1MtTm90ZXMkEhgABCIUAgR2d2h0CgxeUENTLVBob3RvcyQSGQAEIhUCBHZ3aHQKDV5QQ1MtU2hhcmluZyQSHgAEIhoCBHZ3aHQKEl5QQ1MtaUNsb3VkQmFja3VwJBIdAAQiGQIEdndodAoRXlBDUy1pQ2xvdWREcml2ZSQSGgAEIhYCBHZ3aHQKDl5QQ1MtaU1lc3NhZ2UkEhVQcm90ZWN0ZWRDbG91ZFN0b3JhZ2UyPQouAAQiKgIEYWdycAoiXmNvbVwuYXBwbGVcLnNhZmFyaVwuY3JlZGl0LWNhcmRzJBILQ3JlZGl0Q2FyZHMyMAojAAQiHwIEYWdycAoXXmNvbVwuYXBwbGVcLmNmbmV0d29yayQSCVBhc3N3b3JkczJtClwAAhIeAAQiGgIEdndodAoSXkFjY2Vzc29yeVBhaXJpbmckEhoABCIWAgR2d2h0Cg5eTmFub1JlZ2lzdHJ5JBIcAAQiGAIEdndodAoQXldhdGNoTWlncmF0aW9uJBINRGV2aWNlUGFpcmluZzIOCgIABhIIQmFja3N0b3A=
SHA256:dL8Qujqzprhp6FdH5GzNMtPlnZtLWMwfiiF7aykr8WU=
CAcSDgoGaVBob25lEgRmdWxsEgwKBGlQYWQSBGZ1bGwSDAoEaVBvZBIEZnVsbBILCgNNYWMSBGZ1bGwSDAoEaU1hYxIEZnVsbBINCgdBcHBsZVRWEgJ0dhIOCgVXYXRjaBIFd2F0Y2gSFwoOQXVkaW9BY2Nlc3NvcnkSBWF1ZGlvGh4KBEhvbWUSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aJAoVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlEgRmdWxsEgV3YXRjaBoYCglQYXNzd29yZHMSBGZ1bGwSBXdhdGNoGh8KEFNlY3VyZU9iamVjdFN5bmMSBGZ1bGwSBXdhdGNoGh4KBFdpRmkSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aGgoLQ3JlZGl0Q2FyZHMSBGZ1bGwSBXdhdGNoGhcKCEFwcGxlUGF5EgRmdWxsEgV3YXRjaBoVCgZIZWFsdGgSBGZ1bGwSBXdhdGNoGhkKCkF1dG9VbmxvY2sSBGZ1bGwSBXdhdGNoGi0KE0xpbWl0ZWRQZWVyc0FsbG93ZWQSBGZ1bGwSBXdhdGNoEgJ0dhIFYXVkaW8aHAoNRGV2aWNlUGFpcmluZxIEZnVsbBIFd2F0Y2gaFgoHTWFuYXRlZRIEZnVsbBIFd2F0Y2gaFQoGRW5ncmFtEgRmdWxsEgV3YXRjaBoXCghCYWNrc3RvcBIEZnVsbBIFd2F0Y2gaGwoMQXBwbGljYXRpb25zEgRmdWxsEgV3YXRjaCITCgRmdWxsEgRmdWxsEgV3YXRjaCIVCgJ0dhIEZnVsbBIFd2F0Y2gSAnR2IhQKBXdhdGNoEgRmdWxsEgV3YXRjaCIbCgVhdWRpbxIEZnVsbBIFd2F0Y2gSBWF1ZGlvMiIKFgAEIhICBHZ3aHQKCl5BcHBsZVBheSQSCEFwcGxlUGF5MiYKGAAEIhQCBHZ3aHQKDF5BdXRvVW5sb2NrJBIKQXV0b1VubG9jazIeChQABCIQAgR2d2h0CgheRW5ncmFtJBIGRW5ncmFtMh4KFAAEIhACBHZ3aHQKCF5IZWFsdGgkEgZIZWFsdGgyGgoSAAQiDgIEdndodAoGXkhvbWUkEgRIb21lMiAKFQAEIhECBHZ3aHQKCV5NYW5hdGVlJBIHTWFuYXRlZTI4CiEABCIdAgR2d2h0ChVeTGltaXRlZFBlZXJzQWxsb3dlZCQSE0xpbWl0ZWRQZWVyc0FsbG93ZWQyXQpQAAISHgAEIhoCBHZ3aHQKEl5Db250aW51aXR5VW5sb2NrJBIVAAQiEQIEdndodAoJXkhvbWVLaXQkEhUABCIRAgR2d2h0CgleQXBwbGVUViQSCU5vdFN5bmNlZDIrChsABCIXAgRhZ3JwCg9eWzAtOUEtWl17MTB9XC4SDEFwcGxpY2F0aW9uczLKAQq1AQACEjYAAQoTAAQiDwIFY2xhc3MKBl5nZW5wJAodAAQiGQIEYWdycAoRXmNvbVwuYXBwbGVcLnNiZCQSQAABChMABCIPAgVjbGFzcwoGXmtleXMkCicABCIjAgRhZ3JwChteY29tXC5hcHBsZVwuc2VjdXJpdHlcLnNvcyQSGQAEIhUCBHZ3aHQKDV5CYWNrdXBCYWdWMCQSHAAEIhgCBHZ3aHQKEF5pQ2xvdWRJZGVudGl0eSQSEFNlY3VyZU9iamVjdFN5bmMyYwpbAAISEgAEIg4CBHZ3aHQKBl5XaUZpJBJDAAEKEwAEIg8CBWNsYXNzCgZeZ2VucCQKEwAEIg8CBGFncnAKB15hcHBsZSQKFQAEIhECBHN2Y2UKCV5BaXJQb3J0JBIEV2lGaTKdAwqDAwACEhgABCIUAgR2d2h0CgxeUENTLUJhY2t1cCQSGgAEIhYCBHZ3aHQKDl5QQ1MtQ2xvdWRLaXQkEhgABCIUAgR2d2h0CgxeUENTLUVzY3JvdyQSFQAEIhECBHZ3aHQKCV5QQ1MtRkRFJBIaAAQiFgIEdndodAoOXlBDUy1GZWxkc3BhciQSGgAEIhYCBHZ3aHQKDl5QQ1MtTWFpbERyb3AkEhoABCIWAgR2d2h0Cg5eUENTLU1haWxkcm9wJBIbAAQiFwIEdndodAoPXlBDUy1NYXN0ZXJLZXkkEhcABCITAgR2d2h0CgteUENTLU5vdGVzJBIYAAQiFAIEdndodAoMXlBDUy1QaG90b3MkEhkABCIVAgR2d2h0Cg1eUENTLVNoYXJpbmckEh4ABCIaAgR2d2h0ChJeUENTLWlDbG91ZEJhY2t1cCQSHQAEIhkCBHZ3aHQKEV5QQ1MtaUNsb3VkRHJpdmUkEhoABCIWAgR2d2h0Cg5eUENTLWlNZXNzYWdlJBIVUHJvdGVjdGVkQ2xvdWRTdG9yYWdlMj0KLgAEIioCBGFncnAKIl5jb21cLmFwcGxlXC5zYWZhcmlcLmNyZWRpdC1jYXJkcyQSC0NyZWRpdENhcmRzMjAKIwAEIh8CBGFncnAKF15jb21cLmFwcGxlXC5jZm5ldHdvcmskEglQYXNzd29yZHMybQpcAAISHgAEIhoCBHZ3aHQKEl5BY2Nlc3NvcnlQYWlyaW5nJBIaAAQiFgIEdndodAoOXk5hbm9SZWdpc3RyeSQSHAAEIhgCBHZ3aHQKEF5XYXRjaE1pZ3JhdGlvbiQSDURldmljZVBhaXJpbmcyDgoCAAYSCEJhY2tzdG9w
raw policy doesn't match encoded bytes, new hash would be: %{public}@ new data: %{public}@
v8@?0
preflightVouchWithBottle failed; forcing refetch and retrying: %{public}@
preflightVouchWithBottle unable to fetch current peers: %{public}@
preflightVouchWithBottle unable to fetch viable bottles: %{public}@
preflightVouchWithBottle failed after refetches; failing: %{public}@
preflightVouchWithBottle unable to fetch policy documents: %{public}@
fetchCurrentPolicy failed to find ego peer information
fetchCurrentPolicy failed to create TPPeerPermanentInfo
preflightVouchWithBottle found no peer to match bottle
no peer ID given
preflightVouchWithBottle sponsor peer has no stable info
preflightVouchWithBottle complete: %{public}@
_TtC18TrustedPeersHelper19OctagonSelfPeerKeys
v24@0:8@16
v16@0:8
encryptionKey
publicEncryptionKey
publicSigningKey
encryptionVerificationKey
signingVerificationKey
T@"_SFECKeyPair",N,&,VencryptionKey
T@"_SFECKeyPair",N,&,VsigningKey
T@"NSString",N,C
T@"_SFECPublicKey",N,&,VpublicEncryptionKey
T@"_SFECPublicKey",N,&,VpublicSigningKey
T@"_SFECPublicKey",N,R
TrustedPeersHelper.OctagonSelfPeerKeys
<OctagonSelfPeerKeys: 
CKKSSelfPeer
T@"_SFECKeyPair",N,R
@"_SFECKeyPair"16@0:8
CKKSPeer
@"_SFECPublicKey"16@0:8
B24@0:8@"<CKKSPeer>"16
q16@0:8
@24@0:8:16
preflightRecoveryKey unable to fetch current peers: %{public}@
preflightRecoveryKey: no ego peer ID
preflightRecoveryKey: failed to create recovery keys: %{public}@
preflightRecoveryKey: recovery Key is not enrolled
preflightRecoveryKey Untrusted recovery key set
preflightRecoveryKey Failed to find peer with ID
preflightRecoveryKey: error fetching policy: %{public}@
preflightRecoveryKey unable to fetch policy documents: %{public}@
preflightRecoveryKey complete: %{public}@
com.apple.security.cuttlefish
_TtC18TrustedPeersHelper17RetryingInvocable
underlyingInvocable
_TtC18TrustedPeersHelper16MyCodeConnection
serviceName
databaseScope
local
queue
_TtC18TrustedPeersHelper32CKCodeCuttlefishInvocableCreator
_TtC18TrustedPeersHelper12ContainerMap
invocableCreator
containers
.TrustedPeersHelper.db
v16@?0@"CKRequestInfo"8
%{public}@(%{public}@): %{public}@, error: %{public}@
ckoperation request finished: %{public}@ %{public}@
%{public}@ error: %{public}@ (retrying, now=%{public}@, deadline=%{public}@)
fetchViableBottles
fetchPolicyDocuments
pushHealthInquiry
getSupportAppInfo
getClubCertificates
fetchSOSiCloudIdentity
_TtC18TrustedPeersHelper24CuttlefishAPIAsyncClient
invocable
cloud_identity
secure_backup_metadata_timestamp
secure_backup_numeric_passphrase_length
secure_backup_uses_complex_passphrase
secure_backup_uses_numeric_passphrase
device_color
device_enclosure_color
device_mid
device_model
device_model_class
device_model_version
device_name
device_platform
backup_keybag_digest
client_metadata
secure_backup_uses_multiple_icscs
bottle_id
secure_backup_timestamp
escrowed_spki
peer_info
serial
creation_date
remaining_attempts
escrow_information_metadata
label
silent_attempt_allowed
record_status
viability_status
certificates
certdata
federations
trusted_root_cert_versions
devices
octagon
escrow
serial_number
views
last_health_report
model_id
last_report
enabled
repair_action
escrow_record_move_request
escrow_record_label
current_federation
intended_federation
peer_id
requires_escrow_check
state_machine_state
octagon_ego_identity
octagon_trust_state
device_machine_id
octagon_peer_id
sos_trust_state
sos_peer_id
validators_health
results
entries
keys
viable_bottles
partial_bottles
legacy_records
changes
change_token
zone_key_hierarchy_records
recovery_signing_pub_key
recovery_encryption_pub_key
stable_info_and_sig
tlk_shares
dynamic_info_and_sig
view_keys
peer
bottle
reset_reason
success
account_health
failure_description
tlk_share
escrow_records
peers
graph_valid
graph_validation_error
peer_graph
trusted_peers
peer_name
machine_id
os_version
octagon_signing_key
octagon_encryption_key
escrow_record_id
included
excluded
preapprovals
valid_peer
all_peers_count
invalid_peers_count
missing_peers
value
version
hash
differences
more
record
escrowed_signing_spki
signature_using_escrow_key
signature_using_peer_key
view
new_tlk
new_class_a
new_class_c
old_tlk
uuid
parentkey_uuid
keyclass
wrappedkey_base64
upload_os_version
curve
epoch
key_uuid
poisoned
receiver
receiver_public_encryption_key
sender
wrappedkey
remove
update
permanent_info_and_sig
recovery_voucher
voucher
peer_dynamic_info
peer_stable_info
peer_permanent_info
SOS_VIABLE_UNKNOWN
SOS_VIABLE
SOS_NOT_VIABLE
RECORD_STATUS_VALID
RECORD_STATUS_INVALID
SUPPORT_APP_DEVICE_STATUS_HEALTHY
SUPPORT_APP_DEVICE_STATUS_BROKEN
REPAIR_ACTION_NO_ACTION
REPAIR_ACTION_POST_REPAIR_ACCOUNT
REPAIR_ACTION_POST_REPAIR_ESCROW
REPAIR_ACTION_RESET_OCTAGON
REPAIR_ACTION_LEAVE_TRUST
RESET_REASON_UNKNOWN
RESET_REASON_USER_INITIATED_RESET
RESET_REASON_HEALTH_CHECK
RESET_REASON_NO_BOTTLE_DURING_ESCROW_RECOVERY
RESET_REASON_LEGACY_JOIN_CIRCLE
RESET_REASON_RECOVERY_KEY
RESET_REASON_TEST_GENERATED
VIEW_KEY_CLASS_TLK
VIEW_KEY_CLASS_CLASS_A
VIEW_KEY_CLASS_CLASS_C
 not found in database
No peers preapproved by the local peer
Unknown syncUserControllableViews number: 
Internal code failed, but didn't return error
Failed to encode protobuf data
SecurityFoundation returned an unknown type
failed to store the secret in the keychain 
peerID is invalid
failed to assemble bottle for peer
Failed to load secret due to type mismatch (value was not dictionary)
failed to load secret: 
Response missing from CloudKit
unknown error from cloudkit
The peer that created the bottle was not found
recovery key is not enrolled with octagon
no bottle present
untrusted recovery keys
failed to fetch escrow contents
bottle does not contain escrowed key spki
failed to verify signature
failed to create a bottled peer
bottle does not contain peer id
bottle does not contain peer signature
bottle does not contain escrow signature
bottle does not contain encrypted contents
0 bottles exist for escrow record id
failed to restore bottle
no bottle exists for peer
too many bottles exist for peer
policy document from server doesn't validate
no peers preapprove prepared identity
could not load allowed machineID list
prepared identity (
) not on allowed machineID list
unknown policy version: 
sponsor not registered: 
invalid voucher or signature
invalid stable info or signature
invalid permanent info or signature
missing dynamic info
missing stable info
needs authentication
failed to stored identity
no prepared identity
unable to create key pair
com.apple.security.trustedpeers.container
com.apple.security.egoIdentities
_TtC18TrustedPeersHelper9Container
cuttlefish
semaphore
persistentContainer
containerMO
model
escrowCacheTimeout
policyVersionOverride
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
ensureEgoConsistency failed to find ego peer information
ensureEgoConsistency failed to create TPPeerStableInfo from container
ensureEgoConsistency failed to create TPPeerStableInfo from model
loadModel: loaded %{public}d vouchers
loadModel: allowedMachineIDs: %{public}@
loadModel: disallowedMachineIDs: %{public}@
loadModel: no allowedMachineIDs?
loadModel: recovery key not set in model, but is set on ego peer
loadModel: peer %{public}@ has no stable info
loadModel: peer %{public}@ has no dynamic info
loadModel: peer %{public}@ has unparseable dynamic info
loadModel unable to update dynamic info for peer(%{public}@): %{public}@
loadModel: peer %{public}@ has unparseable stable info
loadModel unable to update stable info for peer(%{public}@): %{public}@
com.apple.security.TrustedPeersHelper.nsObjectModels
getSupportAppInfo failed: %{public}@
getSupportAppInfo complete: %{public}@
com.apple.security.trustedpeers
validatePeers failed: %{public}@
validatePeers complete %{public}@
fetchPolicyDocuments complete: %{public}@
FetchPolicyDocuments failed: %{public}@
Can't make policy document with hash %{public}@ and data %{public}@
Received a policy version we didn't request: %d
Requested hash %{public}@ does not match fetched hash %{public}@
fetchViableBottles complete: %{public}@
fetchChangesAndUpdateTrustIfNeeded: fetching failed: %{public}@
update complete: %{public}@
preapprovedJoin unable to fetch changes: %{public}@
preapprovedJoin: no prepared identity
preapprovedJoin: self machineID %{public}@ (me) not on list
Device not IDMS trusted
preapprovedJoin but no existing peers, attempting establish
v16@?0@"_SFKeychainIdentityFetchResult"8
Unable to load signing key: %{public}@
Unable to load encryption key: %{public}@
preapprovedJoin: Don't have my own keys: can't join
preapprovedJoin: no peers preapprove our key
Unable to create peer for joining: %{public}@
Unable to create new peer stable info for joining
Unable to process keys before joining: %{public}@
Beginning preapprovedJoin for peer %{public}@
preapprovedJoin permanentInfo: %{public}@
preapprovedJoin permanentInfoSig: %{public}@
preapprovedJoin stableInfo: %{public}@
preapprovedJoin stableInfoSig: %{public}@
preapprovedJoin dynamicInfo: %{public}@
preapprovedJoin dynamicInfoSig: %{public}@
preapprovedJoin vouchers: %{public}@
preapprovedJoin voucher signatures: %{public}@
preapprovedJoin: uploading %d tlk shares
preapprovedJoin unable to encode peer: %{public}@
preapprovedJoin peer: %{public}@
preapprovedJoin failed: %{public}@
preapprovedJoin succeeded
preapprovedJoin complete: %{public}@
preflightPreapprovedJoin unable to fetch changes: %{public}@
preflightPreapprovedJoin: no prepared identity
preflightPreapprovedJoin: invalid permanent info
preflightPreapprovedJoin: no peers preapprove our key
preflightPreapprovedJoin: no reciprocal trust for existing peers
preflightPreapprovedJoin: error fetching all requested policies (continuing anyway): %{public}@
preflightPreapprovedJoin complete: %{public}@
join: self machineID %{public}@ not on list
Don't have my own peer keys; can't join: %{public}@
Error checking introduction: %{public}@
Beginning join for peer %{public}@
Join permanentInfo: %{public}@
Join permanentInfoSig: %{public}@
Join stableInfo: %{public}@
Join stableInfoSig: %{public}@
Join dynamicInfo: %{public}@
Join dynamicInfoSig: %{public}@
Join vouchers: %{public}@
Join voucher signatures: %{public}@
Uploading %d tlk shares
Join unable to encode peer: %{public}@
Join peer: %{public}@
joinWithVoucher failed: %{public}@
JoinWithVoucher failed: %{public}@
JoinWithVoucher succeeded
join: error fetching all requested policies (continuing anyway): %{public}@
join complete: %{public}@
prepare complete peerID: %{public}@ %{public}@
bottle creation failed: %{public}@
v20@?0B8@"NSError"12
Unable to save signing key: %{public}@
Unable to save encryption key: %{public}@
fetchPolicyDocument: didn't return policy of version: %{public}@
Unable to fetch policy: %{public}@
Unable to save identity: %{public}@
reportHealth complete %{public}@
Intending to set user-controllable views to %{public}@
peerID == %@ && container == %@
Deleting all CloudKit data
Local delete failed: %{public}@
Saved model with %d peers
escrow cache and viable bottles are no longer valid
persist: Received %d peer differences, more: %d
persist: New change token: %{public}@
updateTrustIfNeeded: No identity.
updateTrustIfNeeded: no signing key pair: %{public}@
not yet preapproved
updateTrustIfNeeded: ego peer is not in model, is %{public}@
updateTrustIfNeeded: couldn't calculate dynamic info: %{public}@
updateTrustIfNeeded: produced a stableInfo: %{public}@
updateTrustIfNeeded: produced a dynamicInfo: %{public}@
updateTrustIfNeeded: attempting updateTrust for %{public}@ with: %{public}@
updateTrustIfNeeded: complete.
updateTrustIfNeeded: unable to remove untrusted MachineIDs: %{public}@
updateTrustIfNeeded: unable to compute a new syncing policy: %{public}@
UpdateTrust failed: %{public}@
updateTrustIfNeeded: error fetching all requested policies (continuing anyway): %{public}@
Fetching with change token: %{public}@
Fetch error is an unknown error: %{public}@
Could not fetch changes: %{public}@
change token is expired; resetting local CK storage
Could not persist changes: %{public}@
persist: no more changes!
persist: More changes indicated. Fetching...
Failed to reset local data: %{public}@
Have no self identity, can't make tlk shares
Couldn't parse self identity
Don't have my own peer keys; can't upload new TLKs: %@
Unable to fetch dynamic info for self
Unable to process keys before uploading: %{public}@
Recevied %d CKRecords back
Uploading some new TLKs: %@
updateTLKs complete: %{public}@
setPreapprovedKeys: %@
setPreapprovedKeys: No identity.
setPreapprovedKeys: no signing key pair: %{public}@
setPreapprovedKeys: couldn't calculate dynamic info: %{public}@
setPreapprovedKeys: produced a dynamicInfo: %{public}@
setPreapprovedKeys: attempting updateTrust for %{public}@ with: %{public}@
setPreapprovedKeys: no change; nothing to do.
setPreapprovedKeys: updateTrust succeeded
setPreapprovedKeys: failed: %{public}@
setPreapprovedKeys complete: %{public}@
requestHealthCheck requiring escrow check: %d
requestHealthCheck: No identity.
repair response is empty, returning false
health check complete: %{public}@
join: setting 'user view sync' control as: %{public}@
Unable to create TLKShares for keyset %@: %{public}@
Planning to share %@ with peers %{public}@
Making TLKShare for %@ for key %@
No TLK contents for %@, no TLK share possible
best policy is missing?
Ignoring policy version from pre-CKKS4All peer
no model ID override; returning error
prevailing policy is missing?
fetchCurrentPolicy failed to prevailing policy: %{public}@
returning a policy for model ID %{public}@
fetchCurrentPolicy failed to create TPPeerStableInfo
Fetching the syncing policy failed: %{public}@
fetchCurrentPolicy with no dynamic info
fetchCurrentPolicy complete: %{public}@
beginning a fetchEscrowRecords
fetchEscrowRecords: force fetch flag is off
returning from fetchEscrowRecords, using cached escrow records
escrow cache no longer valid
escrow cache still valid
fetchEscrowRecords: force fetch flag is on, removing escrow cache
fetchViableBottles unable to save bottles and records: %{public}@
fetchViableBottles saved bottles and records
fetchViableBottles failed: %{public}@
fetchViableBottles returned no viable bottles
beginning a removeEscrowCache
removeEscrowCache complete %{public}@
beginning a fetchViableBottles
returning from fetchViableBottles, using cached bottles
fetchViableBottles returned no partially viable bottles, but that's ok
fetchViableBottles returned viable bottles: %{public}@
fetchViableBottles returned partial bottles: %{public}@
fetchViableBottles unable to save bottles: %{public}@
fetchViableBottles saved bottles
fetchViableBottles returned no legacy escrow records
fetchViableBottles already knows about legacy record %@, re-adding entry
ignoring double enrollment record %@
fetchViableBottles saving new bottle: %{public}@
fetchViableBottles already knows about bottle
fetchViableBottles already knows about record, re-adding entry
beginning a fetchEscrowContents
fetchEscrowContents failed
fetchEscrowContents failed to load entropy: %{public}@
fetchEscrowContents failed to load entropy
fetchEscrowContents no escrow signing spki
fetchEscrowContents no bottle matches peerID
fetchEscrowContents complete: %{public}@
No dynamic info for self?
No longer have signing key pair; can't sign distrust: %{public}@
Error preparing dynamic info: %{public}@
attempting distrust for %{public}@ with: %{public}@
updateTrust failed: %{public}@
distrust handling failed: %{public}@
distrust succeeded
Self-distrust via peerID not allowed
distrust complete: %{public}@
departByDistrustingSelf complete: %{public}@
As a nonmember, can't vouch for someone else
Invalid permenent info or signature; can't vouch for them
Invalid stableinfo or signature; van't vouch for them
Don't have my own keys: can't vouch for %{public}@(%{public}@): %{public}@
Unknown policy for beneficiary: %{public}@
Error creating voucher: %{public}@
Unable to make TLKShares for beneficiary %{public}@(%{public}@): %{public}@
No TLKShares to upload for new peer, returning voucher
Unable to upload new tlkshares: %{public}@
Uploaded new tlkshares: %@
vouch complete: %{public}@
beginning a vouchWithRecoveryKey
permanentInfo does not exist
permanentInfoSig does not exist
stableInfo does not exist
stableInfoSig does not exist
failed to create recovery keys: %{public}@
vouchWithRecoveryKey signingPubKey: %@
vouchWithRecoveryKey encryptionPubKey: %@
Recovery Key is not enrolled
Untrusted recovery key set
Error creating voucher using recovery key set: %{public}@
Skipping %@ (wrong peerID)
No ego peer in model; no trusted peers
Failed to recover share %@: %{public}@
Recovered %@ (from %@)
No peer for trusted ID %{public}@
vouchWithRecoveryKey complete: %{public}@
vouchWithBottle failed preflight: %{public}@
vouchWithBottle: Unable to find peer that created the bottle
vouchWithBottle: Unable to create a sponsor public key
vouchWithBottle: Verification of bottled signature failed: %{public}@
Creation of Bottled Peer failed with bottle salt: %@,
Attempting with empty bottle salt
Creation of Bottled Peer failed: %{public}@
Have a bottle for peer %{public}@
Attempting to recover %d TLK shares for peer %{public}@
Error creating voucher with bottle: %{public}@
vouchWithBottle complete: %{public}@
beginning a setRecoveryKey
no prepared identity, cannot set recovery key
setRecoveryKey signingPubKey: %@
setRecoveryKey encryptionPubKey: %@
permInfoSig does not exist
cannot create TPPeerStableInfo
cannot create TPPeerPermanentInfo
handle: no signing key pair: %{public}@
setRecoveryKey failed: %{public}@
setRecoveryKey handling failed: %{public}@
setRecoveryKey succeeded
setRecoveryKey complete: %{public}@
establish: self machineID %{public}@ not on list
Don't have my own peer keys; can't establish: %{public}@
Unable to make TLKShares for self: %{public}@
dynamic info: %{public}@
Beginning establish for peer %{public}@
Establish permanentInfo: %{public}@
Establish permanentInfoSig: %{public}@
Establish stableInfo: %{public}@
Establish stableInfoSig: %{public}@
Establish dynamicInfo: %{public}@
Establish dynamicInfoSig: %{public}@
Establish introducing %d key sets, %d tlk shares
Establish unable to encode bottle/peer: %{public}@
Establish bottle: %{public}@
Establish peer: %{public}@
Establish: viewKeys: %{public}@
establish failed: %{public}@
establish returned failed, trying fetch
Establish returned changes, but they can't be serialized
establish handling failed: %{public}@
establish succeeded
establish succeeded, but more changes need fetching...
Establish returned changes: %{public}@
fetch-after-establish succeeded
fetch-after-establish failed: %{public}@
fetchAfterEstablish failed to reset local data: %{public}@
fetchAfterEstablish failed to fetch changes: %{public}@
fetchAfterEstablish: failed to fetch egoPeerID
fetchAfterEstablish: did not find peer %{public}@ in model
fetchAfterEstablish failed: %{public}@
fetchAfterEstablish succeeded
fetchAfterEstablish failed to update TLKs: %{public}@
establish complete peer: %{public}@ %{public}@
getEgoEpoch complete: %d %{public}@
localReset complete %{public}@
reset failed: %{public}@
reset persist failed: %{public}@
reset succeded
TrustedPeersHelper/Container.swift
Fatal error
unknown reset reason: 
reset complete %{public}@
machineIDsAllowed
machineIDsDisallowed
modelRecoverySigningPublicKey
modelRecoveryEncryptionPublicKey
signatureUsingPeerKey
signatureUsingSPKI
dump complete: %{public}@
No peer ID => no trusted peers
fetchTrustState failed to create TPPeerPermanentInfo
fetchTrustState: ego peer is %{public}@
Returning trust state: %{public}@ %@
Unable to add RK as a trusted peer: %{public}@
fetch trust state complete: %{public}@ %{public}@
Unable to fetch changes, trust status is unknown: %{public}@
trustStatus complete: %{public}@ %{public}@
Existing peers in account, but we don't have a peer ID. We are excluded.
No existing peers in account
trust status: No error but Ego Peer Keys are nil
trust status: Unable to load ego keys: %{public}@
trust status: Lost the ego key pair, returning 'excluded' in hopes of fixing up the identity
TrustedPeersHelper.Container
UNKNOWN
DISABLED
ENABLED
FOLLOWING
(unknown: %i)
_TtC18TrustedPeersHelper6Client
v24@0:8@?16
endpoint
containerMap
removeEscrowCache for %{public}@
removeEscrowCache failed for (%{public}@, %{public}@): %{public}@
getSupportAppInfo for %{public}@
getSupportInfo failed for (%{public}@, %{public}@): %{public}@
Health Check! requiring escrow check? %d for %{public}@
Health Check! failed for (%{public}@, %{public}@): %{public}@
PushHealthInquiry for %{public}@
PushHealthInquiry failed for (%{public}@, %{public}@): %{public}@
%{public}@ finished for %{public}@
%{public}@ errored for %{public}@: %{public}@
ReportHealth for %{public}@
ReportHealth failed for (%{public}@, %{public}@): %{public}@
SetRecoveryKey for %{public}@
SetRecoveryKey failed for (%{public}@, %{public}@): %{public}@
ValidatePeers for %{public}@
ValidatePeers failed for (%{public}@, %{public}@): %{public}@
Fetching policy documents %{public}@ with versions: %{public}@
fetchPolicyDocuments failed for (%{public}@, %{public}@): %{public}@
Fetching policy+views for %{public}@
fetchCurrentPolicy failed for (%{public}@, %{public}@): %{public}@
fetchEscrowContents in %{public}@
fetchEscrowContents failed for (%{public}@, %{public}@): %{public}@
fetchViableEscrowRecords in %@
fetchViableBottles in %{public}@
fetchViableBottles failed for (%{public}@, %{public}@): %{public}@
Distrusting %{public}@ in %{public}@
distrustPeerIDs failed for (%{public}@, %{public}@): %{public}@
Departing %{public}@
departByDistrustingSelf failed for (%{public}@, %{public}@): %{public}@
Updating TLKs for %{public}@
updateTLKs failed for (%{public}@, %{public}@): %{public}@
setPreapprovedKeysWithContainer %{public}@
setPreapprovedKeysWithContainer failed for (%{public}@, %{public}@): %{public}@
Updating %{public}@
update failed for (%{public}@, %{public}@): %{public}@
Attempting a preapproved join for %{public}@
attemptPreapprovedJoin failed for (%{public}@, %{public}@): %{public}@
Attempting to preflight a preapproved join for %{public}@
preflightPreapprovedJoin failed for (%{public}@, %{public}@): %{public}@
Joining %{public}@
Joining failed for (%{public}@, %{public}@): %{public}@
Vouching With Recovery Key %{public}@
Vouching with Recovery Key failed for (%{public}@, %{public}@): %{public}@
Vouching With Recovery Key
Preflight Vouch With RecoveryKey %{public}@
Preflighting Vouch With RecoveryKey failed for (%{public}@, %{public}@): %{public}@
Preflight Vouch With RecoveryKey
Vouching With Bottle %{public}@
Vouching with Bottle failed for (%{public}@, %{public}@): %{public}@
Vouching With Bottle
Preflight Vouch With Bottle %{public}@
Preflighting Vouch With Bottle failed for (%{public}@, %{public}@): %{public}@
Preflight Vouch With Bottle
Vouching %{public}@
Vouching failed for (%{public}@, %{public}@): %{public}@
Establishing %{public}@
Establishing failed for (%{public}@, %{public}@): %{public}@
Preparing new identity for %{public}@
Prepare failed for (%{public}@, %{public}@): %{public}@
retrieving epoch for %{public}@
Epoch retrieval failed for (%{public}@, %{public}@): %{public}@
Fetching allowed machineIDs for %{public}@
Fetching allowed machineIDs failed for (%{public}@, %{public}@): %{public}@
Fetched allowed machineIDs
Removing allowed machineIDs for %{public}@: %{public}@
Removing allowed machineID failed for (%{public}@, %{public}@): %{public}@
Removing allowed machineIDs
Adding allowed machineIDs for %{public}@: %{public}@
Adding allowed machineID failed for (%{public}@, %{public}@): %{public}@
Adding allowed machineIDs
Setting allowed machineIDs for %{public}@ to %{public}@
Setting allowed machineIDs failed for (%{public}@, %{public}@): %{public}@
Setting allowed machineIDs
Performing local reset for %{public}@
Local reset failed for (%{public}@, %{public}@): %{public}@
Resetting for %{public}@
Resetting failed for (%{public}@, %{public}@): %{public}@
Fetch Trust State for %{public}@
Fetch Trust State failed for (%{public}@, %{public}@): %{public}@
Trust status failed for (%{public}@, %{public}@): %{public}@
Dumping for %{public}@
Dumping failed for (%{public}@, %{public}@): %{public}@
not enforcing idms list changes; allowing %{public}@
machineID %{public}@ not found on list
machineID %{public}@ not explicitly allowed: %{public}@
Fetching allowed machine IDs
fetchAllowedMachineIDs complete: %{public}@
Removing allowed machine IDs: %{public}@
Suspicious of new machine ID: %{public}@
Now suspicious of machine ID: %{public}@
removeAllow complete: %{public}@
Adding allowed machine IDs: %{public}@
Newly trusted machine ID: %{public}@
Continue to trust machine ID: %{public}@
addAllow complete: %{public}@
Setting allowed machine IDs: %{public}@
Believe we're in a demo account, not enforcing IDMS list
Error setting machine ID list: %{public}@
Peer machineID is unknown, beginning grace period: %{public}@
Machine has no ID: %{public}@
Unknown machine ID last modified %{public}@; distrusting: %{public}@
Unknown machine ID last modified %{public}@; leaving unknown: %{public}@
Allowed-but-unseen machine ID isn't on full list, last modified %{public}@, distrusting: %{public}@
Allowed-but-unseen machine ID isn't on full list, last modified %{public}@, ignoring: %{public}@
Newly distrusted machine ID: %{public}@
Machine ID newly retrusted: %{public}@
Machine ID still trusted: %{public}@
setAllowedMachineIDs complete: %{public}@
Not enforcing IDMS list changes
Dropping knowledge of machineID %{public}@
_TtC18TrustedPeersHelper10EscrowKeys
symmetricKey
bottleSalt
Key generation error 
com.apple.security.trustedpeers.EscrowKeys
TrustedPeersHelper.EscrowKeys
Escrowed Symmetric Key-%@
Escrowed Encryption Key-%@
Escrowed Signing Key-%@
Escrow Signing Private Key
Escrow Encryption Private Key
Escrow Symmetric Key
fetchEscrowRecords complete: %@
setEscrowRecord saving new escrow record: %@
_TtC18TrustedPeersHelper11BottledPeer
escrowKeys
bottleID
signatureUsingEscrowKey
escrowSigningPublicKey
escrowSigningSPKI
peersigningSPKI
contents
keys generated by the entropy+salt do not match the bottle contents
failed to create escrow keys
failed to create bottle
could not decrypt bottle contents
Failed to deserialize bottle peer
TrustedPeersHelper.BottledPeer
escrow key not an SFECPublicKey?
Unable to deserialize bottle
Bottled SPKI does not match re-created SPKI
@32@0:8@16@24
TrustedPeersHelper
T@"NSString",N,D,C
T@"NSData",N,D,C
escrowedSigningSPKI
peerID
container
T@"ContainerMO",N,D,&
accountDSID
allowedMachineIDs
T@"NSSet",N,D,&
changeToken
egoPeerID
egoPeerPermanentInfo
egoPeerPermanentInfoSig
egoPeerStableInfo
egoPeerStableInfoSig
escrowFetchDate
T@"NSDate",N,D,C
honorIDMSListChanges
moreChanges
name
recoveryKeyEncryptionSPKI
recoveryKeySigningSPKI
bottles
fullyViableEscrowRecords
legacyEscrowRecords
machines
partiallyViableEscrowRecords
policies
TrustedPeersHelper1
TrustedPeersHelper2
TrustedPeersHelper3
TrustedPeersHelper4
TrustedPeersHelper5
TrustedPeersHelper6
TrustedPeersHelper7
EscrowClientMetadata
deviceColor
deviceEnclosureColor
deviceMid
deviceModel
deviceModelClass
deviceModelVersion
deviceName
devicePlatform
secureBackupMetadataTimestamp
secureBackupNumericPassphraseLength
secureBackupUsesComplexPassphrase
secureBackupUsesNumericPassphrase
escrowMetadata
T@"EscrowMetadataMO",N,D,&
backupKeybagDigest
escrowedSPKI
peerInfo
secureBackupTimestamp
secureBackupUsesMultipleiCSCS
clientMetadata
T@"EscrowClientMetadataMO",N,D,&
escrowRecord
T@"EscrowRecordMO",N,D,&
creationDate
recordStatus
Tq,N,D
remainingAttempts
silentAttemptAllowed
sosViability
allowed
machineID
modified
seenOnFullList
status
dynamicInfo
dynamicInfoSig
isEgoPeer
TB,N,D
permanentInfo
permanentInfoSig
stableInfo
stableInfoSig
recoveryVoucher
T@"RecoveryVoucherMO",N,D,&
vouchers
policyData
policyHash
recoverySigningPubKey
recoveryVoucherInfo
signature
T@"PeerMO",N,D,&
voucherInfo
voucherInfoSig
beneficiary
hasBackupKeybagDigest
TB,R,N
T@"NSData",&,N,V_backupKeybagDigest
hasClientMetadata
T@"OTEscrowRecordMetadataClientMetadata",&,N,V_clientMetadata
hasSecureBackupUsesMultipleIcscs
TB,N
secureBackupUsesMultipleIcscs
TQ,N,V_secureBackupUsesMultipleIcscs
hasBottleId
bottleId
T@"NSString",&,N,V_bottleId
hasSecureBackupTimestamp
TQ,N,V_secureBackupTimestamp
hasEscrowedSpki
escrowedSpki
T@"NSData",&,N,V_escrowedSpki
hasPeerInfo
T@"NSData",&,N,V_peerInfo
hasBottleValidity
bottleValidity
T@"NSString",&,N,V_bottleValidity
hasSerial
T@"NSString",&,N,V_serial
bottle_validity
%@ %@
hasPeerID
peerID
T@"NSString",&,N,V_peerID
hasSigningSPKI
signingSPKI
T@"NSData",&,N,V_signingSPKI
hasEncryptionSPKI
encryptionSPKI
T@"NSData",&,N,V_encryptionSPKI
supportsSecureCoding
TB,R
WrongKeySizeException
length (%lu) was not %d
could not ccsiv_crypt
could not ccsiv_aad
could not ccsiv_set_nonce
corecrypto
could not ccsiv_init
no mode given
ciphertext too short
CommonCrypto
IV generation failed
unwrapped key size does not match key size
wrapped key size does not match key size
No key given
CCRandomGenerateBytes failed with %d
hasCreationDate
TQ,N,V_creationDate
hasRemainingAttempts
TQ,N,V_remainingAttempts
hasEscrowInformationMetadata
escrowInformationMetadata
T@"OTEscrowRecordMetadata",&,N,V_escrowInformationMetadata
hasLabel
T@"NSString",&,N,V_label
hasSilentAttemptAllowed
TQ,N,V_silentAttemptAllowed
hasRecordStatus
Ti,N,V_recordStatus
hasRecordId
recordId
T@"NSString",&,N,V_recordId
hasRecoveryStatus
recoveryStatus
Ti,N,V_recoveryStatus
hasCoolOffEnd
coolOffEnd
TQ,N,V_coolOffEnd
hasSerialNumber
serialNumber
T@"NSString",&,N,V_serialNumber
hasRecordViability
recordViability
Ti,N,V_recordViability
hasViabilityStatus
viabilityStatus
Ti,N,V_viabilityStatus
record_viability
RECORD_VIABILITY_FULLY_VIABLE
RECORD_VIABILITY_PARTIALLY_VIABLE
RECORD_VIABILITY_LEGACY
cool_off_end
recovery_status
RECOVERY_STATUS_VALID
RECOVERY_STATUS_SOFT_LIMIT_REACHED
RECOVERY_STATUS_HARD_LIMIT_REACHED
record_id
ciphertext
T@"NSData",&,N,V_ciphertext
authenticationCode
T@"NSData",&,N,V_authenticationCode
initializationVector
T@"NSData",&,N,V_initializationVector
T@"NSString",&,V_peerID
identityIsPreapproved
TB,V_identityIsPreapproved
peerStatus
TQ,V_peerStatus
memberChanges
TB,V_memberChanges
unknownMachineIDsPresent
TB,V_unknownMachineIDsPresent
osVersion
T@"NSString",&,V_osVersion
unknownMachineIDs
<TPHPeerState: %@ preapproved:%d status:%@ memberChanges: %@ unk. mIDs: %@ osVersion: %@>
unknown
T@"NSData",&,V_signingSPKI
T@"NSData",&,V_encryptionSPKI
viewList
T@"NSSet",&,V_viewList
<TPHPeer: %@ %@ %@ (%lu views)>
egoStatus
TQ,V_egoStatus
T@"NSString",&,V_egoPeerID
numberOfPeersInOctagon
TQ,V_numberOfPeersInOctagon
viablePeerCountsByModelID
T@"NSDictionary",&,V_viablePeerCountsByModelID
peerCountsByMachineID
T@"NSDictionary",&,V_peerCountsByMachineID
isExcluded
TB,V_isExcluded
isLocked
TB,V_isLocked
<TPHEgoPeerState: %@>
SecError
Tq,V_curve
TQ,V_version
tlkUUID
T@"NSString",&,V_tlkUUID
receiverPeerID
T@"NSString",&,V_receiverPeerID
receiverPublicEncryptionKeySPKI
T@"NSData",&,V_receiverPublicEncryptionKeySPKI
senderPeerID
T@"NSString",&,V_senderPeerID
Tq,V_epoch
Tq,V_poisoned
wrappedTLK
T@"NSData",&,V_wrappedTLK
signature
T@"NSData",&,V_signature
zoneID
T@"CKRecordZoneID",&,V_zoneID
Signed UUID doesn't match unsigned UUID for %@
No trusted peer signed %@
receiverSPKI
No TLK share from %@
ckksshare
Peer(%@) has no signing key
server_
<CKKSTLKShareCore(%@): recv:%@ send:%@>
parentkeyref
receiverPublicEncryptionKey
CKKSErrorDomain
kern.osrelease
kern.osversion
Version
%s (%s)
watch(sim)
keyType
Ti,N,V_keyType
keyData
T@"NSData",&,N,V_keyData
EC_NIST_CURVES
CloudkitKeychainService
<CKAccountInfo: %@>
hasBottleID
T@"NSString",&,N,V_bottleID
hasReserved3
reserved3
T@"NSData",&,N,V_reserved3
hasReserved4
reserved4
T@"NSData",&,N,V_reserved4
hasReserved5
reserved5
T@"NSData",&,N,V_reserved5
hasReserved6
reserved6
T@"NSData",&,N,V_reserved6
hasEscrowedSigningSPKI
T@"NSData",&,N,V_escrowedSigningSPKI
hasEscrowedEncryptionSPKI
escrowedEncryptionSPKI
T@"NSData",&,N,V_escrowedEncryptionSPKI
hasPeerSigningSPKI
peerSigningSPKI
T@"NSData",&,N,V_peerSigningSPKI
hasPeerEncryptionSPKI
peerEncryptionSPKI
T@"NSData",&,N,V_peerEncryptionSPKI
hasReserved7
reserved7
T@"NSData",&,N,V_reserved7
hasContents
contents
T@"OTAuthenticatedCiphertext",&,N,V_contents
com.apple.security.ckks
ckks-logger
hasSecureBackupMetadataTimestamp
TQ,N,V_secureBackupMetadataTimestamp
hasSecureBackupNumericPassphraseLength
TQ,N,V_secureBackupNumericPassphraseLength
hasSecureBackupUsesComplexPassphrase
TQ,N,V_secureBackupUsesComplexPassphrase
hasSecureBackupUsesNumericPassphrase
TQ,N,V_secureBackupUsesNumericPassphrase
hasDeviceColor
T@"NSString",&,N,V_deviceColor
hasDeviceEnclosureColor
T@"NSString",&,N,V_deviceEnclosureColor
hasDeviceMid
T@"NSString",&,N,V_deviceMid
hasDeviceModel
T@"NSString",&,N,V_deviceModel
hasDeviceModelClass
T@"NSString",&,N,V_deviceModelClass
hasDeviceModelVersion
T@"NSString",&,N,V_deviceModelVersion
hasDeviceName
T@"NSString",&,N,V_deviceName
hasDevicePlatform
TQ,N,V_devicePlatform
spid-
currentSelf
T@"<CKKSSelfPeer>",&,V_currentSelf
allSelves
T@"NSSet",&,V_allSelves
<CKKSSelves: %@ %@>
(no past selves)
T@"NSString",R,V_peerID
T@"_SFECPublicKey",R,V_publicEncryptionKey
T@"_SFECPublicKey",R,V_publicSigningKey
T@"NSSet",R,V_viewList
hash
TQ,R
T#,R
T@"NSString",R,C
T@"NSString",R
T@"_SFECPublicKey",R
<CKKSActualPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
spid
T@"NSString",&,V_spid
%@%@
<CKKSSOSPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
encryptionKey
T@"_SFECKeyPair",&,V_encryptionKey
T@"_SFECKeyPair",&,V_signingKey
T@"_SFECKeyPair",R
<CKKSSOSSelfPeer(%@): pubEnc:%@ pubSign:%@ views:%d>
T@"NSString",&,V_uuid
parentKeyUUID
T@"NSString",&,V_parentKeyUUID
T@"NSString<SecCKKSKeyClass>",&,V_keyclass
T@"CKKSWrappedAESSIVKey",&,V_wrappedkey
aessivkey
T@"CKKSAESSIVKey",&,V_aessivkey
<%@(%@): %@ (%@)>
securityd
Couldn't delete %@ from keychain: %d
unable to unbase64 key: %@
ckkskey
-nonsync
Couldn't save %@ to keychain: %d
%@ is not self-wrapped
Data failed to parse as a CKKSSerializedKey
%@-piggy
-piggy
Couldn't load %@ from keychain: %d
SecItemCopyMatching: %d
SecItemAdd: %d
SecItemUpdate: %d
T@"CKKSKeychainBackedKey",&,V_tlk
classA
T@"CKKSKeychainBackedKey",&,V_classA
classC
T@"CKKSKeychainBackedKey",&,V_classC
newUpload
TB,V_newUpload
<CKKSKeychainBackedKeySet: tlk:%@, classA:%@, classC:%@, newUpload:%d>
hasReserved1
reserved1
T@"NSData",&,N,V_reserved1
hasReserved2
reserved2
T@"NSData",&,N,V_reserved2
hasPeerSigningPrivKey
peerSigningPrivKey
T@"OTPrivateKey",&,N,V_peerSigningPrivKey
hasPeerEncryptionPrivKey
peerEncryptionPrivKey
T@"OTPrivateKey",&,N,V_peerEncryptionPrivKey
T@"NSString",&,N,V_uuid
zoneName
T@"NSString",&,N,V_zoneName
T@"NSString",&,N,V_keyclass
T@"NSData",&,N,V_key
%@/%@
Library/Keychains
alert
T@"NSString",&,V_alert
radarDescription
T@"NSString",&,V_radarDescription
radarnumber
T@"NSString",&,V_radarnumber
T@"NSObject<OS_dispatch_queue>",&,V_queue
componentID
T@"NSString",&,V_componentID
componentName
T@"NSString",&,V_componentName
componentVersion
T@"NSString",&,V_componentVersion
SecTTR
com.apple.security
com.apple.security.diagnostic-queue
606179
Security
secttr
NextTTRDate
%@-%@
init
setValueTransformer:forName:
serviceListener
setDelegate:
resume
listener:shouldAcceptNewConnection:
valueForEntitlement:
interfaceWithProtocol:
setExportedInterface:
endpoint
setExportedObject:
dealloc
pingWithReply:
dumpWithContainer:context:reply:
departByDistrustingSelfWithContainer:context:reply:
distrustPeerIDsWithContainer:context:peerIDs:reply:
trustStatusWithContainer:context:reply:
resetWithContainer:context:resetReason:reply:
localResetWithContainer:context:reply:
setAllowedMachineIDsWithContainer:context:allowedMachineIDs:honorIDMSListChanges:reply:
addAllowedMachineIDsWithContainer:context:machineIDs:reply:
removeAllowedMachineIDsWithContainer:context:machineIDs:reply:
fetchAllowedMachineIDsWithContainer:context:reply:
fetchEgoEpochWithContainer:context:reply:
prepareWithContainer:context:epoch:machineID:bottleSalt:bottleID:modelID:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:signingPrivKeyPersistentRef:encPrivKeyPersistentRef:reply:
establishWithContainer:context:ckksKeys:tlkShares:preapprovedKeys:reply:
vouchWithContainer:context:peerID:permanentInfo:permanentInfoSig:stableInfo:stableInfoSig:ckksKeys:reply:
preflightVouchWithBottleWithContainer:context:bottleID:reply:
vouchWithBottleWithContainer:context:bottleID:entropy:bottleSalt:tlkShares:reply:
preflightVouchWithRecoveryKeyWithContainer:context:recoveryKey:salt:reply:
vouchWithRecoveryKeyWithContainer:context:recoveryKey:salt:tlkShares:reply:
joinWithContainer:context:voucherData:voucherSig:ckksKeys:tlkShares:preapprovedKeys:reply:
preflightPreapprovedJoinWithContainer:context:preapprovedKeys:reply:
attemptPreapprovedJoinWithContainer:context:ckksKeys:tlkShares:preapprovedKeys:reply:
updateWithContainer:context:deviceName:serialNumber:osVersion:policyVersion:policySecrets:syncUserControllableViews:reply:
setPreapprovedKeysWithContainer:context:preapprovedKeys:reply:
updateTLKsWithContainer:context:ckksKeys:tlkShares:reply:
fetchViableBottlesWithContainer:context:reply:
fetchViableEscrowRecordsWithContainer:context:forceFetch:reply:
fetchEscrowContentsWithContainer:context:reply:
fetchPolicyDocumentsWithContainer:context:versions:reply:
fetchCurrentPolicyWithContainer:context:modelIDOverride:reply:
validatePeersWithContainer:context:reply:
fetchTrustStateWithContainer:context:reply:
setRecoveryKeyWithContainer:context:recoveryKey:salt:ckksKeys:reply:
reportHealthWithContainer:context:stateMachineState:trustState:reply:
pushHealthInquiryWithContainer:context:reply:
requestHealthCheckWithContainer:context:requiresEscrowCheck:reply:
getSupportAppInfoWithContainer:context:reply:
removeEscrowCacheWithContainer:context:reply:
isEqual:
hash
superclass
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
description
debugDescription
transformedValueClass
allowsReverseTransformation
transformedValue:
reverseTransformedValue:
.cxx_destruct
initForReadingFromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
publicKey
keyData
ccsha384_diSize
signingKeyData
initWithCurve:
encodeSubjectPublicKeyInfo
encryptionKeyData
initWithPeerID:signingSPKI:encryptionSPKI:viewList:
initWithData:specifier:error:
decryptData:withKey:error:
initWithDomain:code:userInfo:
initWithSecKey:
spki
UUIDString
ccec384Context
contextFree:
initWithVersion:hash:
fieldMatch:fieldRegex:
TPPBPolicyKeyViewMappingWithView:matchingRule:
orMatch:
andMatch:
trueMatch
initWithBase64EncodedString:options:
policyHash
policyDocWithHash:data:
isEqualToPolicyDocument:
protobuf
hashWithAlgo:ofData:
versionNumber
initWithBytesNoCopy:length:freeWhenDone:
base64EncodedStringWithOptions:
policyDocumentWithVersion:modelToCategory:categoriesByView:introducersByCategory:redactions:keyViewMapping:userControllableViewList:piggybackViews:hashAlgo:error:
performBlockAndWait:
allPolicyVersions
egoPeerID
egoPeerPermanentInfo
egoPeerPermanentInfoSig
permanentInfoWithPeerID:data:sig:keyFactory:
peerID
peerWithID:
stableInfo
modelID
bottles
bottleID
encryptionPubKey
signingPubKey
encryptionKey
setEncryptionKey:
signingKey
setSigningKey:
setPeerID:
publicEncryptionKey
setPublicEncryptionKey:
publicSigningKey
setPublicSigningKey:
matchesPeer:
zoneID
zoneName
curve
epoch
tlkUUID
poisoned
receiverPeerID
receiverPublicEncryptionKeySPKI
senderPeerID
signature
version
wrappedTLK
classA
classC
keyclass
uuid
parentKeyUUID
wrappedkey
base64WrappedKey
isRecoveryKeyEnrolled
initWithSigningKeyData:encryptionKeyData:
peerIDThatTrustsRecoveryKeys:
dynamicInfo
policyForPeerIDs:candidatePeerID:candidateStableInfo:error:
syncingPolicyForModel:syncUserControllableViews:error:
syncUserControllableViews
includedPeerIDs
initWithURL:
containerWithIdentifier:
options
setApplicationBundleIdentifierOverride:
privateCloudDatabase
databaseScope
setRequestCompletedBlock:
setQueuePriority:
setQualityOfService:
configuration
setDiscretionaryNetworkBehavior:
setAutomaticallyRetryNetworkFailures:
setIsCloudKitSupportOperation:
databaseWithDatabaseScope:
addOperation:
requestUUID
cuttlefishRetryAfter
sleepForTimeInterval:
isCuttlefishError:
domain
code
userInfo
bundleForClass:
URLForResource:withExtension:
initWithName:managedObjectModel:
setPersistentStoreDescriptions:
loadPersistentStoresWithCompletionHandler:
newBackgroundContext
mergeByPropertyStoreTrumpMergePolicy
setMergePolicy:
initWithEntityName:
setPredicate:
executeFetchRequest:error:
initWithContext:
setName:
save:
egoPeerStableInfo
egoPeerStableInfoSig
initWithData:sig:
getStableInfoForPeerWithID:
clock
data
setEgoPeerStableInfo:
setEgoPeerStableInfoSig:
initWithDecrypter:
peers
allVouchers
recoveryKeySigningSPKI
policies
registerPolicyDocument:
machines
recoverySigningPublicKey
recoveryEncryptionPublicKey
setRecoveryKeys:
recoveryKeyEncryptionSPKI
permanentInfo
permanentInfoSig
registerPeerWithPermanentInfo:
vouchers
voucherInfo
voucherInfoSig
voucherInfoWithData:sig:
registerVoucher:
dynamicInfoSig
dynamicInfoWithData:sig:
updateDynamicInfo:forPeerWithID:error:
stableInfoSig
updateStableInfo:forPeerWithID:error:
policyData
machineID
status
initWithContentsOfURL:
JSONObjectWithData:options:error:
policyWithVersion:
allPeerIDs
initTapToRadar:description:radar:
trigger
defaultManager
identityForIdentifier:resultHandler:
resultType
error
value
keyPair
hasPotentiallyTrustedPeerPreapprovingKey:
changeToken
hasPotentiallyTrustedPeerWithSigningKey:
sponsorID
checkIntroductionForCandidate:stableInfo:withSponsorID:error:
initWithKeyPair:
initWithAccessibility:sharingPolicy:
setAccessGroup:
setIdentity:forIdentifier:accessPolicy:resultHandler:
setEgoPeerID:
setEgoPeerPermanentInfo:
setEgoPeerPermanentInfoSig:
setBottleID:
setEscrowedSigningSPKI:
setSignatureUsingEscrowKey:
setSignatureUsingPeerKey:
setContents:
addBottlesObject:
initWithClock:frozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:error:
permanentInfoWithMachineID:modelID:epoch:signingKeyPair:encryptionKeyPair:peerIDHashAlgo:error:
initRandomKeyPairWithSpecifier:
fetchKeyPairWithPrivateKeyPersistentRef:error:
contents
escrowedSigningSPKI
signatureUsingEscrowKey
signatureUsingPeerKey
bestRecoveryKeyForStableInfo:dynamicInfo:
createStableInfoWithFrozenPolicyVersion:flexiblePolicyVersion:policySecrets:syncUserControllableViews:deviceName:serialNumber:osVersion:signingKeyPair:recoverySigningPubKey:recoveryEncryptionPubKey:error:
osVersion
serialNumber
deviceName
policySecrets
bestPolicyVersion
hasPeerWithID:
setVoucherInfo:
setVoucherInfoSig:
addVouchersObject:
setDynamicInfo:
setDynamicInfoSig:
setStableInfo:
setStableInfoSig:
setRecoveryKeySigningSPKI:
setRecoveryKeyEncryptionSPKI:
initWithFetchRequest:
executeRequest:error:
setBottles:
setPeers:
setChangeToken:
setMoreChanges:
initWithArray:
removeBottles:
clearViableBottles
deletePeerWithID:
deleteObject:
initWithPeerID:isPreapproved:status:memberChanges:unknownMachineIDs:osVersion:
calculateDynamicInfoForPeerWithID:addingPeerIDs:removingPeerIDs:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
statusOfPeerWithID:
excludedPeerIDs
preapprovals
getDynamicInfoForPeerWithID:
dynamicInfoForJoiningPeerID:peerPermanentInfo:peerStableInfo:sponsorID:preapprovedKeys:signingKeyPair:currentMachineIDs:error:
userViewSyncabilityConsensusAmongTrustedPeers:
newUpload
getPeerIDsTrustedByPeerWithDynamicInfo:toAccessView:error:
share:as:to:epoch:poisoned:error:
setPermanentInfo:
setPermanentInfoSig:
setIsEgoPeer:
addPeersObject:
policyWithSecrets:decrypter:error:
escrowFetchDate
setEscrowFetchDate:
fullyViableEscrowRecords
partiallyViableEscrowRecords
legacyEscrowRecords
removeLegacyEscrowRecords:
removePartiallyViableEscrowRecords:
removeFullyViableEscrowRecords:
initWithViableBottles:partialBottles:
currentCachedViableBottlesSet
viableBottles
partialBottles
setViableBottles:
label
escrowMetadata
createVoucherForCandidate:stableInfo:withSponsorID:reason:signingKeyPair:error:
getViewsForPeer:stableInfo:error:
recoverTLK:trustedPeers:ckrecord:error:
saveKeyMaterialToKeychain:
trustedPeerIDs
initWithPeerID:encryptionPublicKey:signingPublicKey:viewList:
allPeers
machineIDsInStatus:
dictionaryRepresentation
initWithStableInfo:
initWithEgoPeerID:status:viablePeerCountsByModelID:peerCountsByMachineID:isExcluded:isLocked:
egoStatus
viablePeerCountsByModelID
peerCountsByMachineID
stringWithFormat:
unsignedLongLongValue
intValue
allowed
setStatus:
setAllowed:
allowedMachineIDs
setMachineID:
setSeenOnFullList:
setModified:
addMachinesObject:
setAllowedMachineIDs:
honorIDMSListChanges
setContainer:
setHonorIDMSListChanges:
allMachineIDs
seenOnFullList
modified
stringFromDate:
removeMachinesObject:
initWithEntries:
initWithMachineID:status:modified:
aes256BitSize
initWithBitSize:
creationDate
setLabel:
remainingAttempts
setRemainingAttempts:
silentAttemptAllowed
setSilentAttemptAllowed:
recordStatus
setRecordStatus:
setRecordViability:
sosViability
setViabilityStatus:
setEscrowInformationMetadata:
backupKeybagDigest
setBackupKeybagDigest:
secureBackupTimestamp
secureBackupUsesMultipleiCSCS
setSecureBackupUsesMultipleIcscs:
setBottleId:
escrowedSPKI
setEscrowedSpki:
peerInfo
setPeerInfo:
serial
setSerial:
setClientMetadata:
clientMetadata
deviceMid
setDeviceMid:
deviceColor
setDeviceColor:
deviceModel
setDeviceModel:
setDeviceName:
devicePlatform
setDevicePlatform:
deviceModelClass
setDeviceModelClass:
deviceModelVersion
setDeviceModelVersion:
deviceEnclosureColor
setDeviceEnclosureColor:
secureBackupMetadataTimestamp
secureBackupUsesComplexPassphrase
setSecureBackupUsesComplexPassphrase:
secureBackupUsesNumericPassphrase
setSecureBackupUsesNumericPassphrase:
secureBackupNumericPassphraseLength
setSecureBackupNumericPassphraseLength:
setSecureBackupMetadataTimestamp:
setSecureBackupTimestamp:
setCreationDate:
setSosViability:
setSecureBackupUsesMultipleiCSCS:
setEscrowedSPKI:
setEscrowMetadata:
addLegacyEscrowRecordsObject:
addPartiallyViableEscrowRecordsObject:
addFullyViableEscrowRecordsObject:
setKeyType:
setKeyData:
setPeerSigningPrivKey:
setPeerEncryptionPrivKey:
initWithKeySpecifier:
encrypt:withKey:error:
setEscrowedEncryptionSPKI:
setPeerSigningSPKI:
setPeerEncryptionSPKI:
ciphertext
setCiphertext:
authenticationCode
setAuthenticationCode:
initializationVector
setInitializationVector:
initWithKeySpecifier:digestOperation:
sign:withKey:error:
initWithData:
initWithData:signature:
verify:withKey:error:
initWithCiphertext:authenticationCode:initializationVector:
decrypt:withKey:error:
peerSigningPrivKey
asECKeyPair:
peerEncryptionPrivKey
peerSigningSPKI
keyWithSubjectPublicKeyInfo:
peerEncryptionSPKI
removePeersObject:
removeVouchersObject:
initWithEntity:insertIntoManagedObjectContext:
_secureBackupTimestamp
_secureBackupUsesMultipleIcscs
_backupKeybagDigest
_bottleId
_bottleValidity
_clientMetadata
_escrowedSpki
_peerInfo
_serial
_has
copyWithZone:
hasBackupKeybagDigest
hasClientMetadata
setHasSecureBackupUsesMultipleIcscs:
hasSecureBackupUsesMultipleIcscs
hasBottleId
setHasSecureBackupTimestamp:
hasSecureBackupTimestamp
hasEscrowedSpki
hasPeerInfo
hasBottleValidity
hasSerial
readFrom:
writeTo:
copyTo:
mergeFrom:
secureBackupUsesMultipleIcscs
bottleId
escrowedSpki
bottleValidity
setBottleValidity:
allocWithZone:
numberWithUnsignedLongLong:
setObject:forKey:
dictionary
_encryptionSPKI
_peerID
_signingSPKI
hasPeerID
hasSigningSPKI
hasEncryptionSPKI
signingSPKI
setSigningSPKI:
encryptionSPKI
setEncryptionSPKI:
size
initWithBytes:len:
initWithBase64:
zeroKey
bytes
length
supportsSecureCoding
encodeWithCoder:
initWithCoder:
wrappedData
decodeBytesForKey:returnedLength:
encodeBytes:length:forKey:
initWithBytes:length:
exceptionWithName:reason:userInfo:
zeroedKey
dataWithLength:
wrapAESKey:error:
unwrapAESKey:error:
encryptData:authenticatedData:error:
decryptData:authenticatedData:error:
doSIV:nonce:text:buffer:bufferLength:authenticatedData:error:
keyMaterial
_newZeroingDataWithBytes:length:
objectForKey:
countByEnumeratingWithState:objects:count:
sortedArrayUsingSelector:
compare:
allKeys
errorWithDomain:code:userInfo:
dictionaryWithObjects:forKeys:count:
mutableBytes
initWithLength:
appendData:
errorWithDomain:code:description:
randomKey:
createSecKey:
fromECKeyPair:
_coolOffEnd
_creationDate
_remainingAttempts
_silentAttemptAllowed
_escrowInformationMetadata
_label
_recordId
_recordStatus
_recordViability
_recoveryStatus
_serialNumber
_viabilityStatus
setHasCreationDate:
hasCreationDate
setHasRemainingAttempts:
hasRemainingAttempts
hasEscrowInformationMetadata
hasLabel
setHasSilentAttemptAllowed:
hasSilentAttemptAllowed
setHasRecordStatus:
hasRecordStatus
recordStatusAsString:
StringAsRecordStatus:
hasRecordId
recoveryStatus
setRecoveryStatus:
setHasRecoveryStatus:
hasRecoveryStatus
recoveryStatusAsString:
StringAsRecoveryStatus:
setCoolOffEnd:
setHasCoolOffEnd:
hasCoolOffEnd
hasSerialNumber
recordViability
setHasRecordViability:
hasRecordViability
recordViabilityAsString:
StringAsRecordViability:
viabilityStatus
setHasViabilityStatus:
hasViabilityStatus
viabilityStatusAsString:
StringAsViabilityStatus:
escrowInformationMetadata
recordId
setRecordId:
coolOffEnd
setSerialNumber:
isEqualToString:
_authenticationCode
_ciphertext
_initializationVector
_identityIsPreapproved
_memberChanges
_unknownMachineIDsPresent
_peerStatus
_osVersion
identityIsPreapproved
setIdentityIsPreapproved:
peerStatus
setPeerStatus:
memberChanges
setMemberChanges:
unknownMachineIDsPresent
setUnknownMachineIDsPresent:
setOsVersion:
encodeInt64:forKey:
encodeBool:forKey:
encodeObject:forKey:
decodeInt64ForKey:
decodeBoolForKey:
decodeObjectOfClass:forKey:
_viewList
viewList
setViewList:
decodeObjectOfClasses:forKey:
setWithArray:
arrayWithObjects:count:
count
_isExcluded
_isLocked
_egoStatus
_egoPeerID
_numberOfPeersInOctagon
_viablePeerCountsByModelID
_peerCountsByMachineID
setEgoStatus:
numberOfPeersInOctagon
setNumberOfPeersInOctagon:
setViablePeerCountsByModelID:
setPeerCountsByMachineID:
isExcluded
setIsExcluded:
isLocked
setIsLocked:
unsignedIntegerValue
allValues
setWithSet:
setWithObject:
safeErrorClasses
setClasses:forSelector:argumentIndex:ofReply:
unionSet:
_curve
_version
_tlkUUID
_receiverPeerID
_receiverPublicEncryptionKeySPKI
_senderPeerID
_epoch
_poisoned
_wrappedTLK
_signature
_zoneID
init:sender:receiver:curve:version:epoch:poisoned:zoneID:
initForKey:senderPeerID:recieverPeerID:receiverEncPublicKeySPKI:curve:version:epoch:poisoned:wrappedKey:signature:zoneID:
wrap:publicKey:error:
unwrapUsing:error:
dataForSigning:
signRecord:ckrecord:error:
verifySignature:verifyingPeer:ckrecord:error:
signatureVerifiesWithPeerSet:ckrecord:error:
setCurve:
setVersion:
setTlkUUID:
setReceiverPeerID:
setReceiverPublicEncryptionKeySPKI:
setSenderPeerID:
setEpoch:
setPoisoned:
setWrappedTLK:
setSignature:
setZoneID:
copy
stringForObjectValue:
setObject:forKeyedSubscript:
objectForKeyedSubscript:
hasPrefix:
dataUsingEncoding:
appendBytes:length:
finishDecoding
encodedData
initRequiringSecureCoding:
processInfo
operatingSystemVersionString
stringByReplacingOccurrencesOfString:withString:
_keyData
_keyType
keyTypeAsString:
StringAsKeyType:
keyType
setExpectedSendSize:
setExpectedReceiveSize:
objectEnumerator
doubleValue
ckksIsCKErrorRecordChangedError
isCKKSServerPluginError:
CKPropertiesDescription
CKKSGroupWithName:
_bottleID
_contents
_escrowedEncryptionSPKI
_escrowedSigningSPKI
_peerEncryptionSPKI
_peerSigningSPKI
_reserved3
_reserved4
_reserved5
_reserved6
_reserved7
hasBottleID
hasReserved3
hasReserved4
hasReserved5
hasReserved6
hasEscrowedSigningSPKI
hasEscrowedEncryptionSPKI
hasPeerSigningSPKI
hasPeerEncryptionSPKI
hasReserved7
hasContents
reserved3
setReserved3:
reserved4
setReserved4:
reserved5
setReserved5:
reserved6
setReserved6:
escrowedEncryptionSPKI
reserved7
setReserved7:
stringByAppendingFormat:
cStringUsingEncoding:
digestUsingSha384:
asSFAuthenticatedCiphertext
fromSFAuthenticatedCiphertext:
_devicePlatform
_secureBackupMetadataTimestamp
_secureBackupNumericPassphraseLength
_secureBackupUsesComplexPassphrase
_secureBackupUsesNumericPassphrase
_deviceColor
_deviceEnclosureColor
_deviceMid
_deviceModel
_deviceModelClass
_deviceModelVersion
_deviceName
setHasSecureBackupMetadataTimestamp:
hasSecureBackupMetadataTimestamp
setHasSecureBackupNumericPassphraseLength:
hasSecureBackupNumericPassphraseLength
setHasSecureBackupUsesComplexPassphrase:
hasSecureBackupUsesComplexPassphrase
setHasSecureBackupUsesNumericPassphrase:
hasSecureBackupUsesNumericPassphrase
hasDeviceColor
hasDeviceEnclosureColor
hasDeviceMid
hasDeviceModel
hasDeviceModelClass
hasDeviceModelVersion
hasDeviceName
setHasDevicePlatform:
hasDevicePlatform
_currentSelf
_allSelves
initWithCurrent:allSelves:
currentSelf
setCurrentSelf:
allSelves
setAllSelves:
removeObject:
mutableCopy
setByAddingObject:
_publicEncryptionKey
_publicSigningKey
shouldHaveView:
containsObject:
subdataWithRange:
_spid
initWithSOSPeerID:encryptionPublicKey:signingPublicKey:viewList:
spid
setSpid:
substringFromIndex:
_encryptionKey
_signingKey
initWithSOSPeerID:encryptionKey:signingKey:viewList:
_uuid
_parentKeyUUID
_keyclass
_wrappedkey
_aessivkey
initSelfWrappedWithAESKey:uuid:keyclass:zoneID:
initWrappedBy:AESKey:uuid:keyclass:zoneID:
initWithWrappedAESKey:uuid:parentKeyUUID:keyclass:zoneID:
wrapsSelf
wrapUnder:error:
unwrapSelfWithAESKey:error:
ensureKeyLoaded:
trySelfWrappedKeyCandidate:error:
saveKeyMaterialToKeychain:error:
loadKeyMaterialFromKeychain:
deleteKeyMaterialFromKeychain:
serializeAsProtobuf:
setUuid:
setParentKeyUUID:
setKeyclass:
setWrappedkey:
aessivkey
setAessivkey:
initWithBase64EncodedData:options:
fetchKeyMaterialItemFromKeychain:resave:error:
stringByAppendingString:
setKeyMaterialInKeychain:error:
base64EncodedDataWithOptions:
randomKeyWrappedByParent:error:
randomKeyWrappedByParent:keyclass:error:
randomKeyWrappedBySelf:error:
queryKeyMaterialInKeychain:error:
keyFromKeychain:parentKeyUUID:keyclass:zoneID:error:
loadFromProtobuf:error:
initWithZoneName:ownerName:
errorWithDomain:code:description:underlying:
UUID
_newUpload
_tlk
_classA
_classC
initWithTLK:classA:classC:newUpload:
setTlk:
setClassA:
setClassC:
setNewUpload:
_peerEncryptionPrivKey
_peerSigningPrivKey
_reserved1
_reserved2
hasReserved1
hasReserved2
hasPeerSigningPrivKey
hasPeerEncryptionPrivKey
reserved1
setReserved1:
reserved2
setReserved2:
_key
_zoneName
setZoneName:
setKey:
_componentID
_componentName
_componentVersion
_alert
_radarDescription
_radarnumber
_queue
isRateLimited
updateRetryTimestamp
clearRetryTimestamp
componentID
setComponentID:
componentName
setComponentName:
componentVersion
setComponentVersion:
alert
setAlert:
radarDescription
setRadarDescription:
radarnumber
setRadarnumber:
queue
setQueue:
triggerTapToRadar:
askUserIfTTR:
isRateLimited:
removeObjectForKey:
keyname:
initWithSuiteName:
dateByAddingTimeInterval:
date
valueForKey:
disableTTRsEntirely
So8NSObjectC
ypSg
$sSY
So18NSValueTransformerC
yyXlXpG
ySSG
So12_SFECKeyPairC
ySSypG
SS_ypt
ySSSaySSGG
yS2SG
_So20NSManagedObjectModelCtSg
So20NSManagedObjectModelCG
_So20NSManagedObjectModelCt
_ypt
ySo15TPPolicyVersionCSo0A8DocumentCG
_yptG
_ypt
_ABtG
_AAt
ySSSo8NSNumberCG
9errorCode_t
SS7keyType_t
15corecryptoError_t
ySDyS2SGG
ySS_SStG
ySS_SaySSGtG
SS_SaySSGt
ySo24TPPBPolicyKeyViewMappingCG
ySo26TPPBDictionaryMatchingRuleCG
ySo16TPPolicyDocumentCG
SDyS2SG
SaySSG
ySSG
yypG
ySo11TPMachineIDCG
ySo24CKKSKeychainBackedKeySetCG
ySo21CKKSKeychainBackedKeyCG
ySo8CKRecordCSgG
So8CKRecordCSg
ySDySSypGG
SDySSypG
ySo6TPPeerCG
So15TPPolicyVersionC
So16TPPolicyDocumentC
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
_AAt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
Sg_ABt
SSSgSo15TPSyncingPolicyCSgSb
_pSgIegggyg_
_pSg
_pSg
So14_SFECPublicKeyCSg
So14_SFECPublicKeyC
SSSgSo15TPSyncingPolicyCSg
_pSgIegggg_
q_Sg
_pSgIegng_
So11CKContainerC
So17OS_dispatch_queueC
$s18TrustedPeersHelper34ContainerNameToCuttlefishInvocableP
$s18TrustedPeersHelper18CuttlefishAPIAsyncP
ySi_
_AAt
$ss12CaseIterableP
Si9errorCode_t
5value_t
So21OS_dispatch_semaphoreC
So22NSManagedObjectContextC
So21NSPersistentContainerC
So7TPModelC
So15TPPolicyVersionCSg
ySo28NSPersistentStoreDescriptionCG
So7TPModelCSg
ShySSG
SDySo15TPPolicyVersionC
_pSgIeggg_
ShySo15TPPolicyVersionCG
SDySo15TPPolicyVersionCSo0A8DocumentCG
SDySo15TPPolicyVersionCSo0A8DocumentCGSg
_pSgIeggg_
ShySo15TPPolicyVersionCGz_Xx
SDySo15TPPolicyVersionCSo0A8DocumentCGz_Xx
ySo15TPPolicyVersionC
ySo15TPPolicyVersionCG
ySo15TPPolicyVersionC_G
SaySo24CKKSKeychainBackedKeySetCG
SaySo12CKKSTLKShareCG
SSSgSaySo8CKRecordCGSo15TPSyncingPolicyCSg
_pSgIeggggg_
So19TPPeerPermanentInfoC
So16TPPeerStableInfoC
_pSgIeggg_
So12_SFECKeyPairCSg
_pSgIeggg_
ySo8CKRecordCG
_pSgIegyg_
So6TPPeerC
So9TPVoucherC
So8NSStringCSgSo6NSDataCSgA3FSo15TPSyncingPolicyCSgSo7NSErrorCSgIeyByyyyyyy_
SSSg
SgA3CSo15TPSyncingPolicyCSg
_pSgIegggggggg_
SDySS
SSSg
ySo15TPPolicyVersionCG
So16TPPolicyDocumentCSg
_pSgIeggg_
_pSgIegg_
ySo9TPVoucherCG
So27TrustedPeersHelperPeerStateCSgSo15TPSyncingPolicyCSg
_pSgIegggg_
So16TPPeerStableInfoCSg
SaySo8CKRecordCGSg
_pSgIeggg_
So27TrustedPeersHelperPeerStateCSg
_pSgIeggg_
_pSgIegyyyyg_
SgSg
ySo9TPVoucherCG
So15TPSyncingPolicyCSg
_pSgIeggyg_
_pSgIeggg_
ySo14OTEscrowRecordCG
SaySSGSgAB
_pSgIegggg_
SgSSSgAB
_pSgIeggggg_
SgAB
_pSgIegggg_
SaySo8CKRecordCSgG
SgAB
_pSgIegggyyg_
z_Xx
SaySo8CKRecordCG
So15TPSyncingPolicyC
_pSgIegyg_
ypGSg
_pSgIeggg_
SaySDySSypGG
SayypG
SS_SSt
ySnySiGG
ySo9TPVoucherC_G
ySS_yptG
So27TrustedPeersHelperPeerStateCSgSaySo0abcD0CGSg
_pSgIegggg_
SaySo22TrustedPeersHelperPeerCG
ySo22TrustedPeersHelperPeerCG
So27TrustedPeersHelperPeerStateCSg
So31TrustedPeersHelperEgoPeerStatusC
_pSgIeggg_
Sbz_Xx
z_Xx
SDySSSo8NSNumberCG
So21NSXPCListenerEndpointCSg
So7NSErrorCSgIeyBy_
ySS_
SS3key_
5valuet
SS3key_yp5valuetSg
SS_yptSg
So6NSDataCSgSo7NSErrorCSgIeyByy_
_pSgIeggg_
A3ASo7NSErrorCSgIeyByyyyy_
So7NSArrayCSgSo7NSErrorCSgIeyByy_
So12NSDictionaryCSgSo7NSErrorCSgIeyByy_
So15TPSyncingPolicyCSg
So7NSErrorCSgIeyByyy_
So6NSDataCSgSo8NSStringCSgACSo7NSErrorCSgIeyByyyy_
So7NSArrayCSgACSo7NSErrorCSgIeyByyy_
So27TrustedPeersHelperPeerStateCSgSo7NSErrorCSgIeyByy_
So27TrustedPeersHelperPeerStateCSgSo15TPSyncingPolicyCSgSo7NSErrorCSgIeyByyy_
So8NSStringCSgSo7NSArrayCSgSo15TPSyncingPolicyCSgSo7NSErrorCSgIeyByyyy_
SSSgSaySo8CKRecordCGSgSo15TPSyncingPolicyCSg
_pSgIeggggg_
So7NSErrorCSgIeyByy_
So6NSDataCSgACSo7NSErrorCSgIeyByyy_
So8NSStringCSgSo15TPSyncingPolicyCSgSo7NSErrorCSgIeyByyy_
So6NSDataCSgAC
ADSo7NSErrorCSgIeyByyyyy_
So8NSStringCSgSo15TPSyncingPolicyCSg
So7NSErrorCSgIeyByyyy_
So7NSErrorCSgIeyByy_
So5NSSetCSgSo7NSErrorCSgIeyByy_
ShySSGSg
_pSgIeggg_
So27TrustedPeersHelperPeerStateCSgSo7NSArrayCSgSo7NSErrorCSgIeyByyy_
So31TrustedPeersHelperEgoPeerStatusCSo7NSErrorCSgIeyByy_
3key_yp5valuetSg
_yptSg
So9_SFAESKeyC
So15NSManagedObjectC
$ss12IdentifiableP
rawValue
RawValue
recoveryKeys
secret
peerKeys
OTErrorDeserializationFailure
OTErrorDecryptionFailure
OTErrorKeyInstantiation
OTErrorKeyMismatch
OTErrorRecoveryCreation
OTErrorAuthCipherTextCreation
OTErrorPrivateKeyCreation
OTErrorRecoveryKeyCreation
OTErrorEntropyCreation
OTErrorEntropyKeyMismatch
encryptionKey
signingKey
secret
recoverySalt
failedToSaveToKeychain
unsupportedKeyType
corecryptoKeyGeneration
keyGeneration
itemDoesNotExist
version
policyData
plaintextPolicy
encryptionKey
signingKey
peerID
publicEncryptionKey
publicSigningKey
encryptionVerificationKey
signingVerificationKey
noPublicKeys
underlyingInvocable
serviceName
container
databaseScope
local
queue
invocableCreator
containers
UNRECOGNIZED
classA
classC
unknown
userInitiatedReset
healthCheck
noBottleDuringEscrowRecovery
legacyJoinCircle
recoveryKey
testGenerated
noAction
postRepairAccount
postRepairEscrow
resetOctagon
leaveTrust
healthy
broken
valid
invalid
sosViableUnknown
sosViable
sosNotViable
peerPermanentInfo
unknownFields
peerStableInfo
peerDynamicInfo
voucher
recoveryVoucher
peerID
vouchers
_permanentInfoAndSig
_stableInfoAndSig
_dynamicInfoAndSig
_recoveryVoucher
operation
remove
update
view
curve
epoch
keyUuid
poisoned
receiver
receiverPublicEncryptionKey
sender
signature
version
wrappedkey
uuid
parentkeyUuid
keyclass
wrappedkeyBase64
uploadOsVersion
_newTlk
_newClassA
_newClassC
_oldTlk
contents
escrowedSigningSpki
signatureUsingEscrowKey
signatureUsingPeerKey
bottleID
escrowRecordID
_bottle
_record
changeToken
differences
recoverySigningPubKey
recoveryEncryptionPubKey
more
hash
value
_key
allPeersCount
invalidPeersCount
missingPeers
peerName
views
serialNumber
machineID
octagonSigningKey
octagonEncryptionKey
validPeer
osVersion
peers
included
excluded
preapprovals
graphValid
graphValidationError
peerGraph
trustedPeers
label
deviceMid
deviceName
remainingAttempts
escrowRecords
name
success
accountHealth
failureDescription
result
tlkShare
octagon
escrow
resetReason
_changes
viewKeys
tlkShares
_peer
zoneKeyHierarchyRecords
viableBottles
partialBottles
legacyRecords
keys
entries
validatorsHealth
results
stateMachineState
octagonEgoIdentity
octagonTrustState
deviceMachineID
octagonPeerID
sosTrustState
sosPeerID
requiresEscrowCheck
escrowRecordLabel
currentFederation
intendedFederation
repairAction
_escrowRecordMoveRequest
enabled
_lastReport
status
modelID
_lastHealthReport
devices
trustedRootCertVersions
federations
certdata
certificates
silentAttemptAllowed
recordStatus
viabilityStatus
_creationDate
_escrowInformationMetadata
backupKeybagDigest
secureBackupUsesMultipleIcscs
escrowedSpki
peerInfo
serial
_clientMetadata
_secureBackupTimestamp
secureBackupNumericPassphraseLength
secureBackupUsesComplexPassphrase
secureBackupUsesNumericPassphrase
deviceColor
deviceEnclosureColor
deviceModel
deviceModelClass
deviceModelVersion
devicePlatform
_secureBackupMetadataTimestamp
cloudIdentity
invocable
RawValue
AllCases
sponsorNotRegistered
unknownPolicyVersion
preparedIdentityNotOnAllowedList
failedToLoadSecret
failedToStoreSecret
unknownSyncUserControllableViewsValue
peerRegisteredButNotStored
unableToCreateKeyPair
noPreparedIdentity
failedToStoreIdentity
needsAuthentication
missingStableInfo
missingDynamicInfo
nonMember
invalidPermanentInfoOrSig
invalidStableInfoOrSig
invalidVoucherOrSig
couldNotLoadAllowedList
noPeersPreapprovePreparedIdentity
policyDocumentDoesNotValidate
tooManyBottlesForPeer
noBottleForPeer
restoreBottleFailed
noBottlesForEscrowRecordID
bottleDoesNotContainContents
bottleDoesNotContainEscrowKeySignature
bottleDoesNotContainerPeerKeySignature
bottleDoesNotContainPeerID
failedToCreateBottledPeer
signatureVerificationFailed
bottleDoesNotContainerEscrowKeySPKI
failedToFetchEscrowContents
failedToCreateRecoveryKey
untrustedRecoveryKeys
noBottlesPresent
recoveryKeysNotEnrolled
bottleCreatingPeerNotFound
unknownCloudKitError
cloudkitResponseMissing
failedToLoadSecretDueToType
failedToAssembleBottle
invalidPeerID
unknownSecurityFoundationError
failedToSerializeData
unknownInternalError
noPeersPreapprovedBySelf
name
cuttlefish
semaphore
persistentContainer
containerMO
model
escrowCacheTimeout
policyVersionOverride
container
context
deviceName
serialNumber
osVersion
policyVersion
policySecrets
setSyncUserControllableViews
endpoint
containerMap
encryptionKey
signingKey
symmetricKey
secret
bottleSalt
failedToSaveToKeychain
unsupportedKeyType
corecryptoKeyGeneration
keyGeneration
itemDoesNotExist
escrowKeys
secret
peerID
bottleID
peerKeys
signatureUsingEscrowKey
signatureUsingPeerKey
escrowSigningPublicKey
escrowSigningSPKI
peersigningSPKI
contents
OTErrorDeserializationFailure
OTErrorDecryptionFailure
OTErrorKeyInstantiation
OTErrorKeyMismatch
OTErrorBottleCreation
OTErrorAuthCipherTextCreation
OTErrorPrivateKeyCreation
OTErrorEscrowKeyCreation
OTErrorEntropyCreation
OTErrorEntropyKeyMismatch
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.TrustedPeersHelper</string>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.application-identifier</key>
<string>com.apple.TrustedPeersHelper</string>
<key>com.apple.developer.aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.private.appleaccount.app-hidden-from-icloud-settings</key>
<true/>
<key>com.apple.private.cloudkit.allowUnverifiedAccount</key>
<true/>
<key>com.apple.private.cloudkit.buddyAccess</key>
<true/>
<key>com.apple.private.cloudkit.prefix</key>
<string>com.apple.security.cuttlefish</string>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.cloudkit.supportservice</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/Keychains/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.securityd</string>
<string>com.apple.security.sfkeychainserver</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.TrustedPeersHelper</string>
</array>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.security.sos</string>
<string>com.apple.security.ckks</string>
<string>com.apple.security.octagon</string>
<string>com.apple.security.egoIdentities</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
OTEscrowRecordMetadata
NSCopying
Recovery
CKKSBaseAESSIVKey
CKKSWrappedAESSIVKey
NSSecureCoding
NSCoding
CKKSAESSIVKey
SecurityFoundation
OTEscrowRecord
OTAuthenticatedCiphertext
TrustedPeersHelperPeerState
TrustedPeersHelperPeer
TrustedPeersHelperEgoPeerStatus
CKKSTLKShare
OTPrivateKey
CKKS
OTBottle
TPHObjectiveC
OTEscrowRecordMetadataClientMetadata
OTRecovery
CKKSSelves
CKKSActualPeer
CKKSRemotePeerProtocol
CKKSPeer
NSObject
CKKSSOSPeer
CKKSSOSPeerProtocol
CKKSSOSSelfPeer
CKKSSelfPeer
CKKSKeychainBackedKey
CKKSKeychainBackedKeySet
OTBottleContents
CKKSSerializedKey
SecTapToRadar
@"NSData"
@"NSString"
@"OTEscrowRecordMetadataClientMetadata"
{?="secureBackupTimestamp"b1"secureBackupUsesMultipleIcscs"b1}
@24@0:8^{_NSZone=}16
B16@0:8
v24@0:8Q16
v20@0:8B16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
v16@0:8
[80C]
@32@0:8*16Q24
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8@16^@24
@40@0:8@16@24^@32
B72@0:8r^{ccmode_siv=QQ^?^?^?^?^?^{ccmode_cbc}^{ccmode_ctr}}16@24@32*40Q48@56^@64
@24@0:8^@16
^{__SecKey=}24@0:8@16
@"OTEscrowRecordMetadata"
{?="coolOffEnd"b1"creationDate"b1"remainingAttempts"b1"silentAttemptAllowed"b1"recordStatus"b1"recordViability"b1"recoveryStatus"b1"viabilityStatus"b1}
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@52@0:8@16B24Q28B36B40@44
@"NSSet"
@48@0:8@16@24@32@40
@"NSDictionary"
@56@0:8@16Q24@32@40B48B52
@"CKRecordZoneID"
@80@0:8@16@24@32q40Q48q56q64@72
@104@0:8@16@24@32@40q48Q56q64q72@80@88@96
B48@0:8@16@24@32^@40
B40@0:8@16@24^@32
@48@0:8@16@24@32^@40
q16@0:8
v24@0:8q16
@64@0:8@16@24@32q40q48^@56
B24@0:8q16
d16@0:8
@"OTAuthenticatedCiphertext"
^{ccec_full_ctx=^{ccec_cp}[8C][0{ccec_projective_point=[1Q]}]}16@0:8
v24@0:8^v16
{?="devicePlatform"b1"secureBackupMetadataTimestamp"b1"secureBackupNumericPassphraseLength"b1"secureBackupUsesComplexPassphrase"b1"secureBackupUsesNumericPassphrase"b1}
@"<CKKSSelfPeer>"
@32@0:8@16@24
@"_SFECPublicKey"
B24@0:8@"NSString"16
B24@0:8@"<CKKSPeer>"16
@"NSString"16@0:8
@"_SFECPublicKey"16@0:8
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"_SFECKeyPair"
@"_SFECKeyPair"16@0:8
@"NSString<SecCKKSKeyClass>"
@"CKKSWrappedAESSIVKey"
@"CKKSAESSIVKey"
@56@0:8@16@24@32@40@48
B32@0:8@16^@24
B24@0:8^@16
B28@0:8B16^@20
@40@0:8@16^B24^@32
@56@0:8@16@24@32@40^@48
@"CKKSKeychainBackedKey"
@44@0:8@16@24@32B40
@"OTPrivateKey"
@"NSObject<OS_dispatch_queue>"
@40@0:8@16@24@32
TrustedPeersHelperSetupProtocol failed, continuing, but you might crash later: %@
signature didn't verify for %@ %@: %@
no signing key for peer: %@
couldn't share %@ (wrap failed): %@
couldn't share %@ (signing failed): %@
Unable to unbase64 key: %@
Resaving %@ as per request
Resaving %@ failed: %@
couldn't wrap key: %@
Couldn't wrap key with key: %@
Couldn't self-wrap key: %@
loaded a piggy TLK (%@)
loaded a stashed TLK (%@)
Not showing ttr due to ratelimiting: %@
Triggering TTR: %@
zPLR
prefix
iPhone
category
full
prefix
iPad
category
full
prefix
category
full
prefix
iMac
category
full
prefix
AppleTV
category
prefix
Watch
category
watch
full
full
watch
full
full
full
watch
full
prefix
iCycle
category
full
prefix
iPhone
category
full
prefix
iPad
category
full
prefix
category
full
prefix
iMac
category
full
prefix
AppleTV
category
prefix
Watch
category
watch
full
full
watch
full
full
full
full
watch
prefix
iPhone
category
full
prefix
iPad
category
full
prefix
category
full
prefix
iMac
category
full
prefix
AppleTV
category
prefix
Watch
category
watch
prefix
AudioAccessory
category
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
prefix
iPhone
category
full
prefix
iPad
category
full
prefix
iPod
category
full
prefix
category
full
prefix
iMac
category
full
prefix
AppleTV
category
prefix
Watch
category
watch
prefix
AudioAccessory
category
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
prefix
iPhone
category
full
prefix
iPad
category
full
prefix
iPod
category
full
prefix
category
full
prefix
iMac
category
full
prefix
AppleTV
category
prefix
Watch
category
watch
prefix
AudioAccessory
category
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
prefix
iPhone
category
full
prefix
iPad
category
full
prefix
iPod
category
full
prefix
category
full
prefix
iMac
category
full
prefix
AppleTV
category
prefix
Watch
category
watch
prefix
AudioAccessory
category
audio
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
prefix
iPhone
category
full
prefix
iPad
category
full
prefix
category
full
prefix
iMac
category
full
prefix
AppleTV
category
prefix
Watch
category
watch
prefix
AudioAccessory
category
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
audio
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
full
watch
audio
SignedVoucher
Peer
PeerDifference
TLKShare
ViewKey
ViewKeys
Bottle
EscrowPair
Changes
ValidateSOSPeer
ValidationSOS
ResetRequest
ResetResponse
SupportAppView
Federation
ClubCertificate
