@(#)PROGRAM:CarouselServices  PROJECT:Carousel-1110.4.57
MbP?
N@(knN
v8@?0
Left
Bottom
Right
None
com.apple.carousel.uitrigger
v16@?0@"NSError"8
PhoneOnly
AppPrivateDuringAOTForApp
AppPrivateDuringAOTForNotification
B8@?0
supportsAOT
chorded
crown
button
power
go_home
arrow_up
arrow_down
rotate2wake_up
rotate2wake_down
siri
swipe_left
swipe_right
swipe_up
swipe_down
unknown
held
heldAndReleased
longHeld
tapped
doubleTapped
tripleTapped
quadOrMoreTapped
down
com.apple.carousel.notificationservice
v16@?0@"<CSLSNotificationServiceServerExportedInterface>"8
com.apple.Carousel.thermaltrap
enable
requestState
v16@?0@"NSObject<OS_xpc_object>"8
companionState
radioState
telephonyState
wifiState
@"<NSObject>"8@?0
HAEmbeddedHapticsLoaderServiceIsAvailableNotification
HAEmbeddedHapticsLoaderSimulated
service not available
AOPHapticsGainKey
AOPHapticsPreSilenceDurationKey
AOPHapticsOutputTypeKey
AOPHapticsSlotIndexKey
AOPHapticsActionKey
AOPHapticsPriorityKey
AOPHapticsRequestTimestampKey
CSLSSimulatorHaptics
not activated
not implemented
B24@?0@"LSApplicationExtensionRecord"8^B16
com.apple.watchkit
LSApplicationRecord
Unable to find class %s
/System/Library/Frameworks/CoreServices.framework/CoreServices
/System/Library/Frameworks/CoreServices.framework/Contents/MacOS/CoreServices
pairedDeviceNearby
pairedDeviceConnected
pairedDeviceCloudConnected
com.apple.carousel.screenshot
type
time
will
could
HH:mm:ss.SSS
en_US_POSIX
%@ : %s (%@) %s %s %s
wake
sleep
wasOn
wasOff
willChange
willNotChange
couldChange
couldNotChange
applicationBundleID
supportsAutoLaunch
isTracked
com.apple.Carousel.CSLSApplicationServiceInfo
v12@?0B8
v16@?0@"CSLSApplicationInfo"8
<unknown>
com.apple.CarouselServices.SessionErrorDomain
invalid arguments
only single session allowed
session not started
connection lost
connection invalidated
session timed out
not eligible
client not approved
client can not schedule sessions
user dismissed session
unrecognized type
exceeded cpu limits
app not in required app state
client not entitled and bundleIDs don't match
app upgraded
app removed
operation not permitted
sessions are suppressed
an internal error has occurred
session restart is not allowed
airplaneModeEnabled
bluetoothEnabled
telephonyEnabled
com.apple.carousel.unblankingsynchronization
CSLSBulletinContextCoalescingSentinelIdentifier
CSLSBulletinContextPendingAlertingForSentinel
com.apple.carousel.carouselecomoded
v32@?0@8@16^B24
%@ %d entries
com.apple.Carousel.CSLSDockAllowLaunchAssertionService
CSLSPrivilegedBackgroundPriorityUnknown
CSLSPrivilegedBackgroundPriorityUtility
CSLSPrivilegedBackgroundPriorityDefault
CSLSPrivilegedBackgroundPriorityUserInitiated
utility
default
user
kIOSSHLOpenApplicationOptionLaunchIntentBackgroundUtility
kIOSSHLOpenApplicationOptionLaunchIntentForegroundComplication
kIOSSHLOpenApplicationOptionLaunchIntentForegroundSupergreenComplication
kIOSSHLOpenApplicationOptionLaunchIntentForegroundRemoteWorkout
CSLOpenApplicationOptionLaunchNonAnimated
CSLSOpenApplicationOptionPreventAlertDismissal
CSLOpenApplicationOptionForClockKit
CSLSOpenApplicationOptionAllowSuspendedLaunchBeforeFirstUnlock
CSLSOpenApplicationOptionTerminateRunningProcess
v32@?0@"NSString"8@"CSLSSuspendSystemGestureAssertionConfiguration"16^B24
v16@?0@8
com.apple.Carousel.statusOverlayServer
com.apple.Carousel.statusOverlay
CSLStatusOverlayAssertionQueue
com.apple.dictation.assertion
com.apple.camera.assertion
com.apple.passbook.assertion
com.apple.mediaplayback.assertion
com.apple.hummingbird.assertion
com.apple.scribble.assertion
com.apple.tincan.assertion
com.apple.cinnamon.assertion
com.apple.heart-rate.assertion
com.apple.waterlock.assertion
com.apple.scandium.assertion
v32@?0@"NSString"8Q16^B24
v24@?0@"CSLSAlertSuppressionToken"8^B16
com.apple.Carousel.alertSuppression
kCSLSSnapshotcontext_StaleDate
kCSLSSnapshotcontext_UUID
kCSLSSnapshotContext_UserInfo
kCSLSSnapshotContext_AtGlanceableUI
kCSLSSnapshotContext_SnapshotContext
userInfo
staleDate
uuid
atGlanceableUI
<nil title>
no descriptive state data or state data is not in property list format, please file a radar, description = %@
Not in background, cannot perform background request
com.apple.Carousel.backgroundrequest
API not implemented by app
CSLSSnapshotReasonUnknown
CSLSSnapshotReasonAppRequested
CSLSSnapshotReasonNotification
CSLSSnapshotReasonReturnToPrimaryUI
CSLSSnapshotReasonComplicationUpdate
CSLSSnapshotReasonAppBackgrounded
CSLSSnapshotReasonPrelaunchNotification
CSLSSnapshotReasonPrelaunch
CSLSSnapshotReasonTest
CSLSSnapshotReasonDevTools
Unknown
AppRequest
Notification
PrimaryUI
Complication
Background
NotificationPrelaunch
Prelaunch
Test
DevTools
ReturnToAppTimeout
SessionCapable
AlwaysReturnToAppInSession
d8@?0
com.apple.Carousel.carouseltool
csl_messageID
csl_flag1
csl_flag2
csl_flag3
csl_date
csl_string
csl_time1
csl_time2
csl_options
ApplicationLaunch
IdleScreenOff
UserActivity
UnlockingUI
UnlockingStartUp
UnlockingWakeGesture
UnlockingPowerButtonPressed
UnlockingCrownPressed
NightstandWakeGesture
WristRaiseRejected
NormalBlanking
WakeToAppBlanking
UnlockingLeftAndRightButtonPressed
UnlockingLisaButton1Pressed
SoftWake
SystemLockTouchlock
SiriButton
UnlockingBacklightStateWillChange
LockingUI
LockingCoverGesture
LockingPowerButtonPressed
LockingSleepGesture
LockingSyncDeviceStateChanged
LockingBacklightStateChanged
LockPPTTest
ACPowerChangedUndim
UnsupportedChargingAccessoryUndim
SpringboardServicesUndim
StealthModeEnabled
StealthModeDisabled
WaterLockIdle
OnForPPTTest
OnForDictation
OnForAVPlayback
UnlockingCrownSwipedUp
UnlockingCrownSwipedDown
CarouselTool
LockingCommandLineTool
UnlockingCommandLineTool
OnForAlertPresentation
SceneIdleTimerDisabled
StartUpScreenOn
StartUpDelayedIdleAssertion
UserDefaultsDisableAutoOffAssertion
InternalBookkeeping
LisaEventAssertion
LanguageChanged
UnlockingByRemoteSource
Unpairing
LauncherSettingUpdateAssertion
UnlockingWakeOnTouchGesture
Docked
LanguageChangeFromSetupApp
LockingCrownSwiped
offWrist
sleepMode
theaterMode
sceneDisablesWristLowerGesture
walkieTalkie
swipeLeft
swipeRight
swipeUp
swipeDown
alwaysOnSwipesAsTapToWake
configChanged
idleTimerServices
systemLockInteractionLock
longPress
disabledByUI
waterEjection
HomeCameraStream
HomeWaitForIdle
HomeAnnouncePlayback
HomeAnnounceRecording
PendingNotification
BlurIsActiveAlwaysOnProvider
Accessibility
GenericExternalReason
WatchFaceExtension
Unknown-%u
bottom
both
com.apple.nano
viewOnWakeDisabled
OnWakeTimeoutSeconds
AllowReturnToAppUntilCrownPress
com.apple.carousel.wakegesturemonitor
v12@?0i8
v16@?0@"<CSLSWakeGestureObserver>"8
Cannot perform reentrant update to state on %@
%@ cannot transition from %@ to %@
Should not have intermediate transition flag for transition from %@ to %@
(unknown)
inactive
activating
active
deactivating
q8@?0
Cannot have intermediate transition from %@ to %@
allow
deny
performIntermediateTransition
logError
raiseException
com.apple.Carousel.CSLSBackgroundTaskRequestService
v24@?0@"CSLSBackgroundTaskRequest"8@"NSError"16
%@~%@
v20@?0B8@"NSError"12
com.apple.Carousel.CSLSDockStatusService
SBTestingConfigureNextVoiceRecognitionAudioInputPathsNotification
SBTestingConfigureNextAssistantRecognitionStrings
CSLSUserNotificationTint
CSLSUserNotificationAlertServiceName
CSLSUserNotificationNeverDeny
CSLSUserNotificationBypassDND
CSLSUserNotificationSystemSoundID
CSLSUserNotificationToneLibraryAlertType
CSLSUserNotificationToneLibraryAlertTopic
CSLSUserNotificationHeaderImagePath
CSLSUserNotificationHeaderImageAssetCatalogPathKey
CSLSUserNotificationHeaderImageAssetCatalogImageKey
CSLSUserNotificationDismissForReplyPortInvalidation
CSLSUserNotificationExtensionIdentifierKey
CSLSUserNotificationExtensionItemsKey
%02x%02x%02x
com.apple.Carousel.activatingUIAssertion
kCSLActivatingUIAssertionMessageTypeKey
kCSLSActivatingUIAssertionBundleIDKey
kCSLSActivatingUIAssertionUUIDKey
kCSLSActivatingUIAssertionBoolResultKey
Passcode Lock
Water Lock
School Mode
Sleep Lock
Theater Mode
Tour Mode
INVALID
v32@?0@"NSString"8@"CSLSModalAppServicePresentationOptions"16^B24
Cannot start modal app without bundleID: %@
(INVALID) 
bundleIdentifier
presentationContext
animated
suppressesLaunchUI
wantsAlertSuppresion
allowedAlertServices
wifiActive
signalStrengthBars
associatedToIOSHotspot
currentNetworkName
Q8@?0
@"NSString"8@?0
com.apple.carousel.cslsduetlaunchtestingservice
com.apple.carousel.powertestservice
com.apple.Carousel
ReturnToAppSettings
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSString"8@"CSLSReturnToAppSettings"16^B24
v16@?0@"<CSLSReturnToAppSettingsObserver>"8
com.apple.Carousel.CSLSDetentService
v28@?0B8B12B16@"NSArray"20
CSLSDuetActivationServiceReasons
CSLSDuetActivationAllowlistedKey
CSLSDuetActivationSnapshotItemsKey
v24@?0@"BSProcessHandle"8@"NSError"16
autoEnd
duration
schedule
WKBackgroundModes
alarm
physical-therapy
self-care
mindfulness
com.apple.developer.watchkit.extended-runtime-session
com.apple.developer.watchkit.extended-runtime-session.health
com.apple.developer.watchkit.extended-runtime-session.schedule
com.apple.developer.watchkit.extended-runtime-session.runinbackground
com.apple.developer.watchkit.extended-runtime-session.rununtilcrownout
com.apple.developer.watchkit.extended-runtime-session.timelimit
unlimited
com.apple.ReBoard
CSLSMigrationAppOperationQueue
CSLSMigrationAppQueue
v16@?0@"CSLSMigrationAppBlockOperation"8
isExecuting
isFinished
v16@?0@"BSActionResponse"8
com.apple.carouselservices.mkb
com.apple.carousel.keybag.observers
com.apple.carousel.keybag
v16@?0@"CSLSMobileKeyBagState"8
connectionStateOverridesSettings
wifi-signalStrengthBars
supportsLTE
simActive
singalStrengthBars
maxSignalStrengthBars
serviceState
flag
object
<invalid data type>
v32@?0Q8q16^B24
v32@?0Q8@16^B24
settings
; currentState: %@>
State Machine
timestamp
date
forceOnWristEnabled
deviceOnCharger
wristDetectDisabled
sensorOnWristStateKey
confidence
effectiveWristState
sensorOnWristState
none
high
iphone.slash
xmark
iphone.homebutton.slash
v16@?0@"<CSLSDisconnectedAssetNameObserver>"8
identifier
reason
flags
timeout
<%@:%p %@ reason:%d [0x%x]%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s timeout:%.2f>
 willKeepScreenOn
 willForceScreenOn
 willDisableWristLowerGestures
 willDisableWristRaiseGestures
 shouldEnableCoverGesture
 shouldIgnoreCoverGesture
 willDisableLongCoverGesture
 shouldRestartUserIdleTimer
 isUserInitiated
 doesNotTimeoutWhenDisplayOff
 clearsUserHasInteracted
 willPreventUnblank
 shouldBlankScreen
 willPreventAOT
 willPreventAlwaysOnGestures
 shouldTreatAlwaysOnSwipesAsTapToWake
 shouldDisableAlwaysOnTapPosition
 isTouchlock
 disableCommitMeasurement
com.apple.carousel.complicationservice
B24@?0Q8Q16
Q24@?0Q8Q16
com.apple.carousel.modalappservice
CSLSSessionNavigationHint
v32@?0@"NSString"8@"<CSLSSessionServiceObserver>"16^B24
v24@?0@"<CSLSSessionServiceObserver>"8^B16
v32@?0@"NSNumber"8@"NSMutableSet"16^B24
v32@?0@"NSUUID"8@"CSLSSession"16^B24
restartSession
v32@?0@"<CSLSSessionServiceXPCInterface>"8@"NSError"16@?<v@?>24
v24@?0@"NSDate"8@"NSError"16
startSession cannot be called on a scheduled session
startSession
endSession
scheduleSession
scheduleSession cannot be called on session
cancelScheduledSession
v32@?0@"CSLSSession"8Q16^B24
fetchAllRunningSessionsOfType
v24@?0@"NSArray"8@"NSError"16
existingRunningSessionsForBundleID
existingScheduledSessionsForBundleID
_addSessionServiceObserver
Attempted to add a second session observer from the same process. this isn't supported
removeSessionServiceObserver
_addSessionTypeObserver
_stopObservingSessionType
fetchStickyCapableApps
v24@?0@"NSSet"8@"NSError"16
v32@?0@"<CSLSSessionServiceObserver>"8Q16^B24
%@-activeSession
previously unknown
known scheduled
LSBundleRecord
interruption
invalidation
startConnection
CSLSBulletinContextIsRemoteNotification
SendAll
<CSLSAlwaysOnTapThroughEvent:%p x:%.0lf y:%.0lf timestamp:%llx (%lld ms ago)>
com.apple.Carousel.URLSessionPolicy
v16@?0Q8
com.apple.private.alloy.screenshotter
dismissable
displaysWhileLocked
transitionStyle
justPinEntryIsSimplePassCode
justPinEntryCodeLength
justPinEntryMinCodeLength
justPinEntryMaxCodeLength
justPinEntryCodeTitle
justPinEntry
WristRaise
WristLower
ButtonPress
CrownRotation
DisplayTap
DisplaySwipe
Application
Assertion
LongPress
Down
operation
source
position
direction
secondsAgo
isOn
hasPos
CSLLinkedList created
Please use a subclass instead
CSLSConnectionStatusConnectedNotification
CSLSConnectionStatusStartup
CSLSConnectionStatusDisconnected
CSLSConnectionStatusConnected
CSLSConnectionStatusConnectedWiFi
CSLSConnectionStatusConnectedLTE
CSLSConnectionStatusDisconnectedCloudReachable
CSLSConnectionStatusDisconnectedLTE
Registering
Registered
Emergency only
Not registered
com.apple.carousel.connectionstatusservice
v16@?0@"CSLSConnectionState"8
v16@?0@"<CSLSConnectionStatusObserver>"8
kCSLSDetent_Type
kCSLSDetent_AudioSlot
kCSLSDetent_AudioGain
kCSLSDetent_StrongAudioGain
kCSLSDetent_HapticSlot
kCSLSDetent_HapticGain
kCSLSDetent_StrongHapticGain
v32@?0@"NSNumber"8Q16^B24
kCSLSDetent_Detent
audioSlot
audioGain
strongAudioGain
hapticSlot
hapticGain
strongHapticGain
com.apple.Carousel.ButtonTapAssertion
kCSLSBackgroundTaskRequest_PreferredDate
kCSLSBackgroundTaskRequest_UserString
kCSLSBackgroundTaskRequest_UUID
kCSLSBackgroundTaskRequest_Leeway
kCSLSBackgroundTaskRequest_SchedulingOptions
preferredDate
persist
leeway
schedulingOptions
userString
bundleID
navigationType
sessionID
running
expirationDate
startDate
lastStartWasScheduled
remote
errorCode
Generated-%@
now playing
workout
recording
timer
stopwatch
directions
remote control
phone call
tin can
entitled health
physical therapy
self care
scheduled
stream init
entitlement
fallDetection
other
meditation
v32@?0@"NSNumber"8@"NSString"16^B24
LSApplicationExtensionRecord
LSPlugInKitProxy
LSApplicationProxy
SecTaskCreateFromSelf
/System/Library/Frameworks/Security.framework/Security
/System/Library/Frameworks/Security.framework/Contents/MacOS/Security
SecTaskCreateWithAuditToken
SecTaskCopySigningIdentifier
SecTaskCopyValueForEntitlement
com.apple.carousel.snapshotservice
v16@?0@"CSLSSnapshotContext"8
CSLSUserNotificationsUserInfoCoalescingSentinelIdentifierKey
CSLSUserNotificationsUserInfoPendingAlertingForSentinelKey
com.apple.carousel.notificationcenterservice
com.apple.carousel.buddyservices
com.apple.reboard
kCSLSUserActivityAfterWake
com.apple.Carousel.appLaunchSuppression
com.apple.carousel.launchsupressaccess
kCSLSMainDisplayBacklight
com.apple.carousel.backlightxpc
cslShouldCrash
v32@?0@"NSString"8@"_CSLSBacklightOnRequest"16^B24
v32@?0@"NSString"8@"_CSLSBackLightAssertionContainer"16^B24
backlight xpc request failed: %@
assertionID
edge
ignoresForegroundStatus
Hunter
Jupiter
BeforeJupiterRC
49BD7609-9BBF-467B-8448-FFA7DD016D94
EAA0B0A3-5289-469A-97E3-8CD4EFDA06DA
36D83DE2-6804-4FBB-891D-1FBCAAF8A6D7
InternalTest
com.apple.system.prefs
sensitiveUIVersion
sensitive UI has changed, enabled %@ for %@, overriding and not exiting by request %@
sensitive UI has changed, enabled %@ for %@, exiting by default %@
cannot pass a nil delegate to CSLSSensitiveUIMonitor from within this process
com.apple.carousel.storedemosupportxpc
com.apple.carousel.navigationservice
No budget or no remaining budget, cannot snapshot
com.apple.Carousel.snapshotservice
In foreground, cannot perform background snapshot
App is already snapshotting
NanoPhotosCore
LocalLibrary
IDSService
/System/Library/PrivateFrameworks/IDS.framework/IDS
/System/Library/PrivateFrameworks/IDS.framework/Contents/MacOS/IDS
IDSSendMessageOptionTimeoutKey
IDSSendMessageOptionBypassDuetKey
IDSDefaultPairedDevice
/System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation
/System/Library/PrivateFrameworks/IDSFoundation.framework/Contents/MacOS/IDSFoundation
PHPhotoLibrary
/System/Library/Frameworks/Photos.framework/Photos
/System/Library/Frameworks/Photos.framework/Contents/MacOS/Photos
PHAssetCreationRequest
com.apple.Carousel.deviceOrientation
message
setInvertUI
invertUI
com.apple.nano.invertUIChangedNotification
CSLSDeviceOrientationInvertedDidChangeNotification
com.apple.nano.wristOrientationChangedNotification
CSLSDeviceOrientationWristOrientationDidChangeNotification
wornOnRightArm
moon.fill
com.apple.CSLSDNDModeAssetNameProvider.queue
v16@?0@"<CSLSDNDModeAssetNameObserver>"8
v32@?0@"NSString"8@"NSMutableSet"16^B24
v24@?0@"NSString"8^B16
v32@?0@"NSString"8@"NSSet"16^B24
com.apple.Carousel.notifications
bb_pipeline
accessibility
action_metrics
alerts
analytics
application_install
app_event
app_sessions
app_switcher
ariadne
background_refresh
backlight
battery
bedtime
brightness
budget
cache_delete
clock
connection_status
control_center
data_migration
demo_mode
developer
detents
diagnostics
dock
duet_metering
eclipse
eco_mode
flipbook
fluidui
gesture
haptic
icon
icon_field
midnight_timer
migration_app
notification_center
notification_management
notification_alerting
now_playing
passcode
preboard
prelaunch
process_assertions
qlll
responder
scene_alerts
scene_presentation
school_mode
screenshot
scroll_center
sessions
shutdown
snapshot
startup
statusbar
systemstate
testing
thermal
transaction
uitrigger
usage_metering
user_idle
view_service
xpc_barrier
wake_gesture
waterlock
watchkit
workspace
com.apple.private.pairedunlock.userAuthentication
com.apple.private.authentication.mkb
com.apple.carousel.home-screen
com.apple.carousel.app-switcher
com.apple.carousel.clock
com.apple.carousel.alert
alertIdentifier
com.apple.Carousel.AppViewImageService
v24@?0@"NSData"8@"NSError"16
no connection
AppBacklightPrivacySettings
v32@?0@"NSString"8@"CSLSAppBacklightPrivacySettings"16^B24
-[CSLSAppBacklightPrivacySettingsModel saveAppSettings]
com.apple.Carousel.AllApps
v16@?0@"<CSLSAppBacklightPrivacySettingsObserver>"8
CSLSFormatTimeIntervalCacheInvalidateNotification
HH%@
%1$@
%2$@
%3$@
%4$@
HHmm
HHmmssSS
HHmmss
mmssSS
mmss
CSLSUserAuthenticationQueue
com.apple.Carousel.eligibilityservice
com.apple.carousel.uitriggerserver
com.apple.carousel.uitriggerserverrestarted
CSLSCarouselDidLaunchNotification
CSLSCarouselLaunchDidHideLogoNotification
CSLSApplicationStateRestoredNotification
com.apple.carousel.appstatsservice
Activation FG
Activation BG
Activation Forecast
Exit
Snap Requested
Snap Taken
Snap Fail
Snap Scheduled
Return To Primary UI
Background Fetch
BAR Fail
Crash
Duet Forecast
From Complication
From Supergreen Complication
From Glance
From Launcher
From Notification
Jetsam
Last Used
Open URL
Siri
Sticky
Idle Navigation
Already In Progress
No Scene
No App
App Requested
Fulfilling Request
App Backgrounded
System Snapshot
Remote Workout
Return to Primary UI
DemoMode
Setup
Walltime
SystemLoad
BackgroundLaunch
Signal
From dock
Date: %@, type: %@, reason: %lu
Launch
Resume
Type: %@, favorite: %s, count: %lu
Memory: %lu, events: %@, transitions: %@
v16@?0@"NSDictionary"8
v32@?0@"NSString"8@"CSLSPrivilegedBackgroundPriorityState"16^B24
com.apple.carousel.sessionservice
com.apple.Carousel.wristmonitor
com.apple.Carousel.wristStateChanged
CSLOnWristStateOff
CSLOnWristStateOn
CSLOnWristStateUnknown
com.apple.carousel.onwristmonitor.%p
v16@?0@"CSLSOnWristState"8
Cannot set queue after monitor has been activated.
kCSLSWristDetectionDisabledChangedNotification
kCSLSSnapshotScheduleItem_Date
kCSLSSnapshotScheduleItem_UserInfo
kCSLSSnapshotScheduleItem_UUID
kCSLSSnapshotScheduleItem_SystemScheduled
kCSLSSnapshotScheduleItem_ReturnToPrimaryUI
kCSLSSnapshotScheduleItem_Freebee
kCSLSSnapshotScheduleItem_Reason
systemScheduled
returnToPrimaryUI
scheduleFreebee
CSLSDuetActivationReasonUnspecified
CSLSDuetActivationReasonNSURLSession
CSLSDuetActivationReasonWatchConnectivity
CSLSDuetActivationReasonDock
CSLSDuetActivationReasonComplication
CSLSDuetActivationReasonSnapshot
CSLSDuetActivationReasonSignificantLocationChange
CSLSDuetActivationReasonRelevantActions
CSLSDuetActivationReasonIntentDidRun
CSLSDuetActivationReasonPrelaunch
CSLSDuetActivationReasonHealthKitQuery
payload
UIApplicationLaunchOptionsURLSessionKey
com.apple.Carousel.CSLSNightstandSuspensionService
no service
searching
has service
emergency only
com.apple.Carousel.CSLSUITriggerService
v20@?0B8@"NSString"12
UI provider not found
v24@?0@"CSLSConnectionState"8@"CSLSConnectionStateOverrides"16
weakCount
standardCount
strongCount
totalCount
rotationCount
durationEnabledMS
minorDetentsEnabled
V9pLLbPQhyb75bbdTioZVw
%@-callout
%@-metrics
CSLSDetentService
no detent for type
v16@?0@"<CSLSDetentPreferencesObserver>"8
boff
state
countdown
lockState
isEffectivelyLocked
permanentlyBlocked
recoveryRequired
recoveryPossible
shouldWipe
backOffTime
failedAttemptCount
escrowCount
Unlocked
Locked
Locking
Disabled
UnlockInProgress
InGracePeriod
InAssertDelay
InBioUnlock
com.apple.carousel.ecomodeshutdownxpc
kCSLSEcoModeUserShutdownKey
kCSLSEcoModeThermalKey
v16@?0@"NSString"8
kCSLSUIProviderRemoteWrapperAssociatedProviderKey
CSLSPowerTestLaunchApp
CSLSPowerTestSnapshot
CSLSPowerTestInterOperationDelay
CSLSPowerTestUnknown
launch
delay
kCSLPowerTestBundleID
kCSLPowerTestInterOperationDelay
kCSLPowerTestOperations
%@ bundleID = %@, interDelay = %@, number of operations = %@, firstOperation = %@
kCSLSDockAllowLaunchAssertion_BundleID
kCSLSDockAllowLaunchAssertion_Reason
com.apple.Carousel.buttonlistener
com.apple.carousel.button-listener
v40@?0Q8Q16@?<Q@?QQQQ>24^B32
Q40@?0Q8Q16Q24Q32
CSLSPasscodePromptErrorDomain
com.apple.Carousel.passcodelistener
com.apple.carousel.request-passcode
com.apple.Carousel.passcode.%p
v40@?0@"NSString"8@"NSNumber"16@"NSNumber"24@"NSError"32
com.apple.Carousel.contextuallock
InLockout
CSLSUserAuthenticationClientBlockedStateChangedNotification
v32@?0@"NSString"8@"NSString"16^B24
com.apple.Carousel.suspendSystemGestureAssertion
kCSLSSuspendSystemGestureAssertionMessageTypeKey
kCSLSSuspendSystemGestureAssertionPIDKey
kCSLSSuspendSystemGestureAssertionIDKey
kCSLSSuspendSystemGestureAssertionEdgesKey
release assertion (dealloc)
nil backlight assertion provider - assertion will fail to operate!!!
release assertion
release assertion (not asserted)
%@:%@ %@ pid:%d asserted:%u %.2lf seconds ago
Returning connected due to paired device being nearby
Paired device is connected or cloud connected
Returning connected wifi due to internet being detected on wifi route
Returning connected lte due to internet being detected on cellular route
Cannot reach paired device
Returning disconnected cloud reachable due to internet being detected on wifi route
Returning disconnected lte due to internet being detected on cellular route
Returning disconnected
CSLSUITriggerRemoteService interruptionHandler called
CSLSUITriggerRemoteService invalidationHandler called
sending request for %@ with %@
Error %@ sending carouseluitrigger request
%{public}@ connection interrupted, will retry
Notification service connection error: %@
%@: connection interrupted
%@: connection invalidated
CSLSScreenshotter takeScreenshotWithOptions
cannot take screenshot %@
%@: service %@ invalidated
%@: service %@ interrupted
%@: service %@ connected
%@: service %@ could not connect
%@ asynchronous remote proxy failed with error %@
%@ synchronous remote proxy failed with error %@
applicationInfoForApplicationIdentifier:%@ connection %@
applicationInfoForApplicationIdentifier returned %@
########## DBG_CODE: (%d)
Error establishing %@ connection: %@
########## DBG_CODE: (%d) [%lld, %lld, %lld, %lld]
add unblankingSychronizer:%p pendingUnblankID:%u (%u)
remove unblankingSychronizer:%p pendingUnblankID:%u (%u)
unblankingSychronizer:%p readyForUnblank unblankID:%u pending:%{BOOL}u(%u), pendingUnblankID:%u
unblankingSynchronization prepareForUnblank unblankID:%u still pending(%u), new unblankID:%u
unblankingSynchronization prepareForUnblankBlock nil unblankID:%u synchronizer:%@
unblankingSynchronization synchronizer not enabled unblankID:%u synchronizer:%@
unblankingSynchronization unblankTimedOut unblankID:%u still pending(%u), local pendingUnblankID:%u
%@: service %@ became invalid
%@ could not communicate with server %@
CSLSDockAllowLaunchAssertionConnection takeDockLaunchAssertion
takeDockLaunchAssertion encountered error %@
CSLSDockAllowLaunchAssertionConnection releaseDockLaunchAssertion
releaseDockLaunchAssertion encountered error %@
CSLSDockAllowLaunchAssertionConnection connect
%{public}@ encountered error %{public}@
%{public}@ interrupted, retrying
connection interrupted
CSLSAlertSuppressionAssertion requested by process pid=%d
Error activating alert suppression buddy assertion: %@
Error activating alert suppression assertion for %@: %@
Error activating alert suppression assertion: %@
Error deactivating alert suppression assertion: %@
CSLSAlertSuppressionAssertion released by process pid=%d
userInfo length (%@) is greater than allowed length (%@)
setting returnToAppTimeout to %d
_hasCustomReturnToAppTimeout = %{BOOL}u
BacklightChangedReason not found for %u
__canControlReturnToAppUntilCrownPress = %{BOOL}u, allowReturnToAppUntilCrownPress = %{BOOL}u
addObserver:%@ observeFilteredGestures:NO includingWhenScreenOff:YES is invalid, observeFilteredGestures must be YES if includingWhenScreenOff is YES
%{public}@ error with transition from %{public}@ to %{public}@
%{public}@ implicit intermediate transition from %{public}@ to %{public}@
%{public}@ transition from %{public}@ to %{public}@
CSLSBackgroundTaskRequestService submitBackgroundTaskRequest async
%{public}@: default completion handler received error -- %{public}@
CSLSBackgroundTaskRequestService cancelBackgroundTaskRequestForBundleID sync
could not cancel request for %@ %{public}@
CSLSBackgroundTaskRequestService cancelBackgroundTaskRequestForBundleID async
CSLSBackgroundTaskRequestService cancelBackgroundTaskRequestWithUUID async
could not cancel request for %@ %@ %{public}@
CSLSBackgroundTaskRequestService submittedRequestsForBundleID async
could not get submitted requests for %@ %{public}@
CSLSBackgroundTaskRequestService registerPrivilegedBackgroundClient async
CSLSBackgroundTaskRequestService completeBackgroundHealthKitQueryForBundleID async
could not complete HK request for %@ %{public}@
Error starting modal app: %@, error: %@
Start Modal App
Terminate Modal App
Error terminating modal app: %@, error: %@
failed to get process cpu seconds with error %{errno}d
Failed to get thread cpu seconds with error %{errno}d count:%u
measuring thread CPU seconds, but ending thread:%p is different than initial thread:%p
failed to get thread cpu seconds with error %{errno}d count:%u
Failed to get process cpu seconds with error %{errno}d
measured time profile:%llu
s threadCost:%llu
s processCost:%llu
%{public}@: service %{public}@ became invalid
%{public}@: service %{public}@ was interrupted
CSLSBackgroundServiceConnection connect
could not connect %{public}@
CSLSBackgroundServiceConnection reconnect
%{public}@: service %{public}@ was interrupted, attempting reconnection
could not reconnect %{public}@
%{public}@: service %{public}@ was interrupted, connect succeeded, will attempt to call %@ for reconnection
%{public}@: service %{public}@ was interrupted, calling didReconnect
%{public}@: service %{public}@ was interrupted, connect succeeded, delegate does not respond to didReconnect
%{public}@ connection interrupted with server %{public}@
%{public}@ could not communicate with server %{public}@
%{public}@ could not synchronously communicate with server %{public}@
%@ became invalid
%@ could not synchronously communicate with server %@
CSLSDuetLaunchTestingService injectError sync
CSLSDuetLaunchTestingService clearError sync
%@ could not execute request, error = %@
com.apple.Carousel.CSLSDetentService-takeDetentAssertion
takeDetentAssertion encountered error %@
com.apple.Carousel.CSLSDetentService-releaseDetentAssertion
releaseDetentAssertion encountered error %@
com.apple.Carousel.CSLSDetentService-getPreferences
received preferences
detents changed %@
com.apple.Carousel.CSLSDetentService-recordMetrics
%{public}@: processing activation option reason %@
%{public}@: zero length reason passed to activateApplication:options:withResult:
%{public}@: %{public}@ adding payload %{public}@
%{public}@: %{public}@ adding scheduleItem, now %{public}@
CSLSTileNavigationService navigateToClockAnimated
@"%{public}@" key in %{public}@ contains no session type value: %{public}@
@"%{public}@" key in %{public}@ contains more than one session type value: %{public}@
Entitlements have values, but we couldn't find a valid combination. All values: %{public}@
Got sessionType %{public}@ with config %{public}@
CSLSMigrationApp activate
Cannot activate an already-active app
Activating migration app
CSLSMigrationApp terminate
Cannot terminate  migration app (isActive=%d, isTerminating=%d)
Terminating migration app
Starting termination operation
Error requesting ReBoard dismissal: %@
Calling termination completion
alternateSystemAppDidLaunch:
alternateSystemAppDidExitWithStatus: %d
alternateSystemAppDidTerminateWithSignal: %d
alternateSystemAppDidFailToLaunchWithError: %@
starting launch operation
Unable to send restart for migration action: %@
completing launch operation
validating passcode with MKBUnlockDevice
First unlock occurred
Keybag state changed: %{public}@
Could not generate key for override: %lu
[%@] Will enter state %@ with previous state %@
[%@] Did enter state %@ with previous state %@
Error connecting to complication service: %{public}@
%@ is setting button handler for %@ %@
%@ is removing button handler for %@ %@
CSLSSessionService connection interrupted, previous sessions = %@
Restoring service observer %@ for %@
Restored observer for %@
Could not restore observer %@ for %@ %@
attempting to restart previously running session %@
cannot restart session %@ %@
restarted session %@
not restarting session because it was not previously running %@
CSLSSessionService startSession
CSLSSessionService startSession %@
encountered error %@
released activeSessionsTransaction %@
CSLSSessionService endSession
CSLSSessionService endSession %@
CSLSSessionService scheduleSession:startDate:options:completion:
CSLSSessionService scheduleSession:%@ startDate:%@ options:%d completion: %@
scheduleSession encountered query error %@
scheduleSession encountered error %@
scheduleSession cannot be called on session of type %@
CSLSSessionService cancelScheduledSession:completion:
CSLSSessionService cancelScheduledSession %@
cancelScheduledSession encountered query error %@
cancelScheduledSession encountered error %@
%@ already running, substituting
scheduled session returned incorrectly %@
CSLSSessionService fetchAllRunningSessionsOfType:
CSLSSessionService fetchAllRunningSessionsOfType %@
fetchAllRunningSessionsOfType encountered query error %@
fetchAllRunningSessionsOfType encountered server error %@
fetchAllRunningSessionsOfType returned %@
CSLSSessionService existingSessionsForBundleID:
CSLSSessionService existingRunningSessionsForBundleID %@
existingSessionsForBundleID encountered query error %@
existingSessionsForBundleID encountered server error %@
existingSessionsForBundleID returned %@
CSLSSessionService existingScheduledSessionsForBundleID:
CSLSSessionService existingScheduledSessionsForBundleID %@
existingScheduledSessionsForBundleID encountered query error %@
existingScheduledSessionsForBundleID encountered server error %@
existingScheduledSessionsForBundleID returned %@
CSLSSessionService addSessionServiceObserver:
CSLSSessionService addSessionServiceObserver:%@ bundle:%@
addSessionServiceObserver: encountered query error %@
addSessionServiceObserver for %@ encountered server error %@
addSessionServiceObserver for %@ succeeded
CSLSSessionService removeSessionServiceObserver:
CSLSSessionService removeSessionServiceObserver:%@ bundle:%@
removeSessionServiceObserver: encountered query error %@
removeSessionServiceObserver for %@ encountered server error %@
removeSessionServiceObserver for %@ succeeded
CSLSSessionService addSessionTypeObserver:
CSLSSessionService addSessionTypeObserver:%@ type:%@
addSessionTypeObserver: encountered query error %@
addSessionTypeObserver for %@ encountered server error %@
addSessionTypeObserver for %@ succeeded
_stopObservingSessionType: encountered query error %@
_stopObservingSessionType for %@ encountered server error %@
_stopObservingSessionType for %@ succeeded
CSLSSessionService fetchStickyCapableApps:
CSLSSessionService fetchStickyCapableApps:%@
fetchStickyCapableApps: encountered query error %@
fetchStikcyCapableApps: returned apps %@
CSLSSessionService takeSessionSuppressionAssertion:
CSLSSessionService takeSessionSuppressionAssertion:%@
takeSessionSuppressionAssertion: encountered query error %@
takeSessionSuppressionAssertion: succeeded
CSLSSessionService releaseSessionSuppressionAssertion:
CSLSSessionService releaseSessionSuppressionAssertion:%@
releaseSessionSuppressionAssertion: encountered query error %@
releaseSessionSuppressionAssertion: succeeded
sessionWithUUIDEnded:%@ error:%@
sessionEnded:%@ error:%@
created activeSessionsTransaction %@
%{public}@ sessionStarted:%@ error:%@
using bundle record for _appBundleID %@
using main build for _appBundleID %@
using entitlement for _appBundleID %@
scheduling server block for %@
completing server block for %@ with lock %@
preparing to execute server block for %@
remoteObjectProxyWithErrorHandler: %@
executing server block for %@ with lock %@
%@ connection interrupted
%@ connection invalidated
CSLSSessionService connect
could not create session service connection, %@
calling connect with %@ %@
could not connect to session service for %@ %@
connected to session service %@
%{public}@: added new known %{public}@ with type %{public}@
%{public}@: %{public}@ is waiting for a send. waiting to send msg with type %{public}@
%{public}@: will send next outstanding message for %{public}@
%{public}@: passed a nil connection to %{public}@
%{public}@: %{public}@ is already waiting for a send. shouldn't be asked again
%{public}@: no more oustanding messages for %{public}@
%{public}@: calling sendBlock for %{public}@
connectionStatusDidChange: %@
Error establishing button listener connection: %@
decoded %@
encoding %@
could not intialize unarchiver for %@
retrieved bundleID %@ for %d %@ %@ %@
could not retrieve bundleID from record %@
could not retrieve bundle record for %@: %{public}@
%{public}@ could not retrieve bundleID for %d %@ %@ %@
using bundleID %@ for watchKit extension %@
could not get signing identifier %@, using generated value %@
using bundleID %@ from signingID
could not create a SecTaskRef. Unable to proceed
SecureBackup failed prepare escrow record (%@)
CSLSSnapshotService setSnapshotContext sync
setting snapshotContext sync %{public}@
could not setSnapshotContext for %@ %@
snapshot context set %@
CSLSSnapshotService setSnapshotContext async
setting snapshotContext %{public}@
could not setSnapshotContext for %@ %{public}@
could not get snapshot context for %@ %{public}@
CSLSSnapshotService snapshotWhenBackgroundProcessingCompletes
cannot snapshot when background processing complete %@ %{public}@
CSLSSnapshotService snapshotAppWithBundleID
cannot snapshot %@ %{public}@
F5 connection error: %@
Connection error: %@
connection interrupted, retaking assertion
Error activating application launch assertion: %@
cannot release assertion, %@ has no uuid
backlightDidChange previous:%d, current:%d, reason:%d
xpc request failed: %@
%{public}@
CSLSSensitiveUIMonitor shouldPreventExit set to %{BOOL}u
%{public}@ nil delegate passed, providing default delegate %@
%{public}@: initialized, sensitiveUI %{BOOL}u for %@
%{public}@: dealloc'd
%{public}@: %@ = %@
%{public}@: value = %@ setting version to nil
%{public}@: updated, calling %@ with sensitiveUI %{BOOL}u for %@
%{public}@: not updating, sensitiveUI still %{BOOL}u for %@
%{public}@: enabled, setting %@ to %@
%{public}@: not enabled, removing value for %@
%{public}@: cannot change sensitiveUI status for a shipping version %@
%{public}@ error connecting to navigation service: %@
%{public}@: connection interrupted
%{public}@: connection invalidate, disconnecting
%@ sendImageData:imageDate: is not supported with the photos feature flag enabled
Sent screenshot to IDS, received GUID: %@
IDS Failed to send screenshot with error: %@
Sending screen recording to Photo Library: %@
created %@ from %@
Finished sending video to photo library success: %{BOOL}u and error: %@
Sending screen recording to IDS: %@
Sent screen recording to IDS, received GUID: %@
IDS Failed to send screen recording with error: %@
CSLSDNDModeAssetNameProvider init with id %@
CSLSDNDModeAssetNameProvider add DND state listener failed with error: %@
CSLSDNDModeAssetNameProvider querying DND state error occurred: %@
Updating assetName: %@
Updating tintColorName: %@
CSLSDNDModeAssetNameProvider didReceiveDoNotDisturbStateUpdate %@
Unable to get configuration for mode %@ (error: %@)
New asset name is empty. Use default symbol instead.
New tint color name is empty. Use default color %@ instead.
Retaking ActivatingUIAssertion %@
Error retaking ActivatingUIAssertion %@
ActivatingUIAssertion connection was interrupted
Took ActivatingUIAssertion %@
Error taking ActivatingUIAssertion %@
Releasing ActivatingUIAssertion %@
Create activate UI assertion
Release activate UI assertion
%{public}@ connection invalidated
%{public}@ connection interrupted, will allow retry
CSLSAppViewImageService provideAppViewListImageDataForWidth
%{public}@ provideAppViewListImageDataForWidth:%f height:%f scale:%f
%@ could not provide app view list image %{public}@
%@ providing app view list image %ld bytes
%s: saving settings %@ to key %@
Error dismissing buddy with image data: %@
Error restarting carousel for language change: %@
passcode unlock failed with error %@
Refreshing state from MKB state %@.
isUserRequestedEraseAllowed = %{BOOL}u
mobile key bag max attempt count = %ld, profile max = %d
Will begin erasing data
No more unlock attempt is accepted
CSLSBackgroundEligibilityService isBundleIDEligibleForBackgroundWork
CSLSBackgroundEligibilityService isBundleIDEligibleForBackgroundHealthKitWork
Error connecting to app stats service: %@
%@ didReconnect after interruption
re-established priority snapshots for %{public}@
could not re-establish priority service for %{public}@, error %{public}@
re-established priority requests for %{public}@
%{public}@ could not register as privileged client with server %{public}@, error = %{public}@
connection interrupted %@
connection invalidated %@
Client get wrist state
Ignoring update state because the updated state %@ is not newer than last known state %@
Error getting wrist state: %@
CSLSNightstandSuspensionServiceConnection takeNightstandSuspensionAssertion
takeNightstandSuspensionAssertion encountered error %@
CSLSNightstandSuspensionServiceConnection releaseNightstandSuspensionAssertion
releaseNightstandSuspensionAssertion encountered error %@
CSLSNightstandSuspensionServiceConnection connect
connected
adding remote provider for %@ %@
removing remote provider for %@ %@
handling triggger %@
%@ found provider %@
%@ returned success %{BOOL}u %@
%@ UI provider not found
detents not supported on this device, CSLSDetentService inactive
calling activate on %@
%@ ready
received detents, mapped by type %@
playing detent of type %ld, with strong %{BOOL}u using %@
could not play detent %{BOOL}u, %ld, %@, %@
played detent with %@
no detent for type %ld
recording metrics %@
%{public}@: %{public}@
%@ adding remote client for %@
%@ removing remote client for %@
%@ calling remotely for %@
startup failure, many rabbits were lost and never found again
startup failure, many rabbits were lost and never found again - chances are someone called [CSLSUITriggerRegistration sharedInstance] in Carousel process too early in startup before [CSLUIUITriggerController sharedInstance]
Setting up UI trigger registration for out of process.
%@ calling inProcess for %@
%@ calling outOfProcess for %@
self: (%p); Connection interrupted
self: (%p); Connection invalidated
self: (%p); error: (%{public}@)
self: (%p); dismissed: (%d); isAlphanumeric: (%d); error: (%@)
%@ setEnabled:completion: client error %@
CSLSUserAuthenticationClient notePasscodeEntryForUnlockDidBegin
CSLSUserAuthenticationClient notePasscodeEntryForUnlockDidCancel
CSLSUserAuthenticationClient notePasscodeUnlockDidSucceed
Secure backup is not required
CSLSUserAuthenticationClient notePasscodeUnlockDidFailWithError
CSLSUserAuthenticationClient requestClearBlockedState
blockStateMayHaveChanged received. in lockout=%{BOOL}u
trigger added: %@
trigger removed: %@
No mach service name supplied for remote UI trigger client. Not starting xpc listener
dealloc - removeUnblankingSychronizer:%@
unblankingSychronizer setEnabled:YES prepareForUnblankBlock must not be nil : %@
<assertion %p:%{public}@> %{public}s <reason:%d [0x%x]%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s timeout:%.2fs pid:%d asserted:%u %.2lf sec ago>
willPreventScreenOff should always be YES, ignoring assertion
display other than the main display not supported (%@)
no timeout specified, using default timeout: %.2f
softlink:r:path:/System/Library/Frameworks/CoreServices.framework/CoreServices
softlink:r:path:/System/Library/Frameworks/Security.framework/Security
softlink:r:path:/System/Library/Frameworks/CoreServices.framework/CoreServices
softlink:r:path:/System/Library/Frameworks/CoreServices.framework/CoreServices
softlink:r:path:/System/Library/Frameworks/Security.framework/Security
softlink:r:path:/System/Library/Frameworks/CoreServices.framework/CoreServices
softlink:r:path:/System/Library/Frameworks/Security.framework/Security
softlink:r:path:/System/Library/PrivateFrameworks/IDS.framework/IDS
softlink:r:path:/System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation
softlink:r:path:/System/Library/Frameworks/Photos.framework/Photos
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
CSLSafeMutableSet
CSLSRestartForMigrationAction
EvaluateStatus
CSLUIUITriggerXPCProtocol
CSLSUITriggerRemoteService
CSLSAppBacklightPrivacySettings
CSLSNotificationServiceServerExportedInterface
NSObject
CSLSNotificationService
CSLSThermalTrapXPCClient
CSLSDecoderUtility
CSLSConnectionState
NSCopying
NSMutableCopying
NSSecureCoding
NSCoding
BSDescriptionProviding
CSLSMutableConnectionState
HAEmbeddedHapticsLoader
Test
AOPHapticsController
CSLSLaunchServicesUtlities
CSLSNightstandSuspensionAssertion
CSLSThermalTrap
CSLSThermalTrapXPCClientDelegate
CSLSCompanionConnectionState
CSLSMutableCompanionConnectionState
CSLSScreenshotTaker
CSLSScreenshotter
CSLSafeMutableArray
CSLSWakeGesture
CSLSApplicationInfo
CSLSApplicationInfoServiceXPCServer
CSLSApplicationInfoService
CSLSWaterLock
CSLSSessionError
CSLSRadioConnectionState
CSLSMutableRadioConnectionState
CSLUnblankingSynchronizationServerInterface
CSLUnblankingSynchronizationClientInterface
CSLUnblankingSynchronizationClient
CSLEcoModeDaemonXPCDelegate
CSLSEcoModeClient
CSLSPrivilegedBackgroundPriorityState
CSLSPrivilegedBackgroundPriorityStateCache
CSLSButtonListenerCache
CSLSDockAllowLaunchAssertionService
CSLSDockAllowLaunchAssertionConnection
CSLSXPCSuspendSystemGestureAssertionProvider
CSLSSuspendSystemGestureAssertionProvider
CSLSConcurrentObserverStore
CSLSConnectionStateObserver
CSLSBuddyAlertSuppressionAssertion
CSLSStatusOverlayAssertionProtocol
CSLSStatusOverlayAssertion
CSLSAlertSuppressionToken
CSLSModalAppAlertSuppressionToken
CSLSAlertSuppressionWithReasonToken
CSLSAlertSuppressionWithAlertServiceNamesToken
CSLSAlertSuppressionServiceInterface
CSLSAlertSuppressionClient
CSLSAlertSuppressionAssertion
CSLSSnapshotContext
BSXPCCoding
CSLSSoftwareUpdateStashHelper
CSLSBackgroundTaskRequestError
CSLSReturnToAppSettings
CSLToolXPCClient
CSLSSuspendSystemGestureAssertion
CSLSWakeGestureMonitor
CSLSWakeGestureObserver
CSLSWakeGestureServer
CSLSModalAppAlertSuppressionAssertion
CSLSBinaryTransitionStateMachine
CSLSBinaryTransitionStateMachineConfiguration
CSLSBinaryTransitionStateMachineBlockDelegate
CSLSBinaryTransitionStateMachineDelegate
CSLSBackgroundTaskRequestServiceXPC
CSLSBackgroundTaskRequestServiceProtocol
CSLSPrivilegedBackgroundServicing
CSLSBackgroundServiceAutoConnecting
CSLSBackgroundTaskRequestServiceHealthKitProtocol
CSLSBackgroundTaskRequestService
CSLSBackgroundServiceDelegate
CSLSDockStatusServiceXPC
CSLSDockStatusService
CSLSModalAppServiceInterface
CSLSModalAppService
CSLSTimeProfiler
CSLSModalAppServicePresentationOptions
CSLSWifiConnectionState
CSLSMutableWifiConnectionState
CSLSBackgroundServiceConnection
CSLSBackgroundServiceConnectionProviding
CSLSDuetLaunchTesting
CSLSDuetLaunchTestingService
CSLSPowerTester
CSLSPowerTestDelegate
CSLSPowerTestService
CSLSReturnToAppSettingsModel
CSLSDetentService
CSLSDetentClient
CSLSDetentServiceConnection
CSLSDuetActivationService
CSLSTileNavigationService
CSLSDetentsAssertion
CSLSafeMutableDictionary
CSLSReBoardServiceInterface
CSLSMigrationApp
BKSAlternateSystemAppDelegate
CSLSMigrationAppBlockOperation
CSLSLaunchAlternateSystemAppOperation
CSLSMobileKeyBag
CSLSConnectionStateOverrides
BSSettingDescriptionProvider
CSLSMutableConnectionStateOverrides
CSLSStateMachine
CSLSOnWristState
CSLSDisconnectedAssetNameProvider
CSLSBacklightAssertionSpecification
CSLSComplicationServerExportedInterface
CSLSComplicationService
CSLSButtonHandlerBridge
CSLSButtonHandler
CSLSSessionService
CSLSSessionServiceClientInterface
CSLSSessionServerConnectionDelegate
CSLSSessionServiceInterface
CSLSSessionSuppressionAssertion
CSLSSessionServerConnection
CSLSSessionServiceXPCInterface
CSLSTheaterMode
CSLSSystemStateInterfaceProvider
CSLSSystemStateInterfaceProviding
CSLSWeakXPCConnectionWrapper
CSLSXPCBarrierBlockManager
CSLSAlwaysOnTapToWakeEvent
CSLSViewOnWakeItem
CSLSURLSessionPolicyServerInterface
CSLSURLSessionPolicy
CSLSPasscodePromptSettings
CSLSBacklightRequest
CSLLinkedListNode
CSLStrongLinkedListNode
CSLLinkedListNodeEnumeration
CSLWeakLinkedListNode
CSLLinkedListStrongStorageAllocator
CSLLinkedListStorageAllocator
CSLLinkedList
NSFastEnumeration
CSLStrongLinkedList
CSLLinkedListWeakStorageAllocator
CSLWeakLinkedList
CSLWeakTrackerDelegate
CSLSConnectionStatusService
CSLSConnectionStatusObserver
CSLSDetent
CSLSButtonTapAssertionServerInterface
CSLSButtonTapAssertionClientInterface
CSLSButtonTapAssertion
CSLSButtonTapAssertionExportedObject
CSLSBackgroundTaskRequest
CSLSSession
CSLSSecureBackupHelper
CSLSSnapshotServiceServerProtocol
CSLSSnapshotServiceProtocol
CSLSPrivilegedSnapshotServicing
CSLSSnapshotService
CSLSNotificationCenterServiceServerExportedInterface
CSLSNotificationCenterService
CSLSApplicationLaunchSuppressionServiceInterface
CSLSApplicationLaunchSuppressionAssertion
_CSLSBackLightAssertionContainer
_CSLSBacklightOnRequest
CSLSBacklight
CSLSBacklightXPCClient
CSLSBacklightObserver
CSLSBacklightAssertionProvider
CSLSBacklightXPCServer
CSLSSuspendSystemGestureAssertionConfiguration
CSLSSensitiveUIMonitorExitingDelegate
CSLSSensitiveUIMonitoring
CSLSSensitiveUIMonitor
CSLSStoreDemoSupportServerInterface
CSLSSystemNavigating
CSLSNavigationService
CSLSUITriggerRemoteClientFactory
CSLSSnapshotServiceError
CSLSScreenshotSyncer
CSLSDeviceOrientation
CSLSStateMachineState
CSLSDNDModeAssetNameProvider
DNDStateUpdateListener
Overrides
CSLSXPCActivatingUIAssertionProvider
CSLSActivatingUIAssertionProvider
CSLSActivatingUIAssertion
CSLSDisplayLayoutElement
CSLSAppViewImageProviding
CSLSAppViewImageService
CSLSAppBacklightPrivacySettingsModel
_CSLSTimeFormatSentinel
CSLSBuddyServiceInterface
CSLSBuddyService
CSLSBuddyButtonRegistration
CSLSUserAuthenticationModel
CSLSBackgroundEligibilityServerProtocol
CSLSBackgroundEligibilityServiceProtocol
CSLSBackgroundEligibilityService
CSLSAppEvent
CSLSAppStateTransition
CSLSAppStats
CSLSAppStatsServerExportedInterface
CSLSAppStatsService
CSLSPrivilegedBackgroundServiceConnection
CSLOnWristServerExportedInterface
CSLOnWristClientExportedInterface
CSLSOnWristMonitor
CSLOnWristClientExportedObject
CSLObservable
CSLSSnapshotScheduleItem
CSLSDuetActivationOptions
Convenience
CSLSNightstandSuspensionService
CSLSNightstandSuspensionServiceConnection
CSLSTelephonyConnectionState
CSLSMutableTelephonyConnectionState
CSLSUITriggerClientExportedInterface
CSLSUITriggerRemoteClient
CSLSUITriggerRemoteClientServiceDelegate
CSLSConnectionStateXPCClientInterface
CSLSConnectionStateXPCServerInterface
CSLSConnectionStateXPCClient
CSLSConnectionStateOverrider
CSLSMobileKeyBagState
CSLSMutableMobileKeyBagState
CSLSEcoModeShutdownServer
CSLSShutdownForEcoModeClient
CSLSRawButtonEventListener
CSLSRawButtonEventListenerBridge
CSLSUITriggerRegistrationInProcess
CSLSUITriggerRegistration
CSLSUIProviderRemoteWrapper
CSLSUITriggerRemoteProvider
CSLSUITriggerRegistrationOutOfProcess
CSLSUIProviderRemoteWrapperDelegate
CSLSPowerTest
CSLSDockAllowLaunchAssertion
CSLWeakTracker
CSLSDisableInstantButtonTapAssertion
BSInvalidatable
CSLSButtonListenerServerInterface
CSLSButtonListenerClientInterface
CSLSButtonListener
CSLSDisableInstantButtonTapAssertionDelegate
CSLSButtonListenerExportedObject
CSLSPasscodePromptServerProtocol
CSLSPasscodePrompt
CSLSSystemStateXPCServerInterface
CSLSSystemStateXPCClientInterface
CSLSSystemStateXPCInterfaceProxy
CSLSSystemStateInterface
CSLSUserAuthenticationClient
CSLSUserAuthenticationModelDelegate
CSLSMobileKeyBagObserver
CSLSUITriggerServerExportedInterface
CSLSUITriggerRemoteClientService
NSXPCListenerDelegate
CSLSUITriggerRemoteClientServiceProtocol
CSLSUnblankingSynchronizer
CSLSBacklightAssertionBase
Internal
CSLSInvalidatableBacklightAssertion
CSLSBacklightAssertion
Deprecated
init
dealloc
count
_withLock:
addObject:
containsObject:
removeObject:
removeAllObjects
copy
enumerateObjectsUsingBlock:
description
addNewObject:
removeExistingObject:
enumerateObjectsWithBlock:
.cxx_destruct
_objects
_lock
TQ,R
string
appendString:
telephonyState
radioState
serviceState
supportsLTE
simActive
telephonyEnabled
airplaneModeEnabled
companionState
pairedDeviceNearby
pairedDeviceConnected
pairedDeviceCloudConnected
wifiState
wifiActive
isCellularConnected
evaluateStatus
initWithMachServiceName:options:
xpcRequestUITriggerWithName:withDictionary:withReason:withCompletion:
xpcUIProvidersWithCompletion:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
resume
remoteObjectProxyWithErrorHandler:
remoteService
requestUITriggerWithName:withDictionary:withReason:withCompletion:
uiProvidersWithCompletion:
_connection
objectForKeyedSubscript:
boolValue
initForPhoneOnlyApp
initForWatchApp:
dictionary
numberWithBool:
setObject:forKeyedSubscript:
builder
appendBool:
hash
builderWithObject:ofExpectedClass:
privacyDuringAOTForApp
appendBool:counterpart:
privacyDuringAOTForNotification
supportsAOT
phoneOnly
isEqual
builderWithObject:
appendBool:withName:
build
initForWatchApp
initWithDictionary:
hasCustomSetting
setPrivacyDuringAOTForApp:
toDictionary
isEqual:
setPrivacyDuringAOTForNotification:
setSupportsAOT:
setPhoneOnly:
_privacyDuringAOTForApp
_privacyDuringAOTForNotification
_supportsAOT
_phoneOnly
TB,N,V_privacyDuringAOTForApp
TB,N,V_privacyDuringAOTForNotification
TB,N,V_supportsAOT
TB,N,V_phoneOnly
TB,R,N
_connectIfNecessary
_disconnect
addNotificationWithTitle:subtitle:message:delayLocal:delayMirrored:clearable:completion:
_performServerQuery:
getLockedNotificationsInPipelineStepActorWithClassName:completion:
removeNotificationWithSectionID:publisherMatchID:completion:
clearNotificationWithSectionID:publisherMatchID:feed:completion:
clearAllNotificationsWithCompletion:
removeSectionWithSectionID:completion:
setNotificationsLevel:sectionID:mirror:completion:
getNotificationSettings:
_performServerQuery:retryQueryOnInterruption:
code
invalidate
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
T#,R
T@"NSString",R,C
sharedNotificationService
initWithServiceName:endpoint:
reconnectIfNecessary
_sendMessage:withReplyHandler:waitForReply:waitDuration:
didChangeState:
initWithDelegate:
isTrapped
queue_handleMessage:
setTrapped:
_delegate
_trapped
trapped
TB,N,GisTrapped,V_trapped
decodeObjectOfClass:forKey:
classForCoder
setWithObjects:
decodeObjectOfClasses:forKey:
decodeDate:forKey:
decodeUserInfo:forKey:
activeMultilinePrefix
descriptionWithMultilinePrefix:
appendString:withName:
appendBodySectionWithName:multilinePrefix:block:
descriptionBuilderWithMultilinePrefix:
succinctDescription
succinctDescriptionBuilder
appendObject:
appendObject:counterpart:
allocWithZone:
initWithState:
encodeObject:forKey:
supportsSecureCoding
copyWithZone:
mutableCopyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
_companionState
_radioState
_telephonyState
_wifiState
T@"CSLSCompanionConnectionState",R,N,V_companionState
T@"CSLSRadioConnectionState",R,N,V_radioState
T@"CSLSTelephonyConnectionState",R,N,V_telephonyState
T@"CSLSWifiConnectionState",R,N,V_wifiState
mutableCopy
setCompanionState:
setRadioState:
setTelephonyState:
setWifiState:
T@"CSLSMutableCompanionConnectionState",&,D,N
T@"CSLSMutableRadioConnectionState",&,D,N
T@"CSLSMutableTelephonyConnectionState",&,D,N
T@"CSLSMutableWifiConnectionState",&,D,N
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
sharedInstance
loadEmbeddedHapticAssetOfType:withAssetID:error:
loadAPTriggeredHapticAssetOfType:withAssetID:error:
maxNumberOfAssets
serviceAvailable
getDefaultGainForAOPType:
getDefaultGainForAPTriggeredType:
setServiceAvailable:
_loadCalled
_serviceAvailable
TB,N,V_serviceAvailable
Tq,R,N
defaultCenter
postNotificationName:object:
makeServiceAvailable
setLoadCalled:
loadCalled
TB,N
readyHandler
cancelHandler
activate
cancel
setMappings:error:
setMappingsCalled
setSetMappingsCalled:
playSlotIndices:error:
setCancelHandler:
setReadyHandler:
dispatchQueue
setDispatchQueue:
activated
setActivated:
_setMappingsCalled
_activated
_cancelHandler
_readyHandler
_dispatchQueue
TB,N,V_activated
T@?,C,N,V_cancelHandler
T@?,C,N,V_readyHandler
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
watchKitApplicationType
applicationExtensionRecords
extensionPointRecord
identifier
isEqualToString:
objectsPassingTest:
anyObject
bundleRecordWithEntitlementsForBundleRecord:
sharedConnection
takeNightstandSuspensionAssertion:
releaseNightstandSuspensionAssertion:
delegate
thermalTrapDidChange:
setDelegate:
_xpcClient
TB,R,N,GisTrapped
T@"<CSLSThermalTrapDelegate>",W,N,V_delegate
appendCompanionConnectionState:
decodeBoolForKey:
encodeBool:forKey:
_pairedDeviceNearby
_pairedDeviceConnected
_pairedDeviceCloudConnected
TB,R,N,V_pairedDeviceNearby
TB,R,N,V_pairedDeviceConnected
TB,R,N,V_pairedDeviceCloudConnected
setPairedDeviceNearby:
setPairedDeviceConnected:
setPairedDeviceCloudConnected:
TB,D,N
takeScreenshotWithOptions:completion:
serverInterface
_array
decodeIntegerForKey:
initWithGestureType:timestamp:backlightWasOn:willChangeBacklight:couldChangeBacklight:
encodeInteger:forKey:
setDateFormat:
localeWithLocaleIdentifier:
setLocale:
cachedDateFormatter
stringFromDate:
stringWithFormat:
gestureType
timestamp
backlightWasOn
willChangeBacklight
couldChangeBacklight
_backlightWasOn
_willChangeBacklight
_couldChangeBacklight
_gestureType
_timestamp
TQ,R,N,V_gestureType
T@"NSDate",R,N,V_timestamp
TB,R,N,V_backlightWasOn
TB,R,N,V_willChangeBacklight
TB,R,N,V_couldChangeBacklight
applicationBundleID
appendObject:withName:
supportsAutoLaunch
isTracked
initWithApplicationBundleID:supportsAutoLaunch:isTracked:
_supportsAutoLaunch
_isTracked
_applicationBundleID
T@"NSString",R,N,V_applicationBundleID
TB,R,N,V_supportsAutoLaunch
TB,R,N,V_isTracked
serviceName
applicationInfoForCompanionBundleIdentifier:completion:
applicationInfoForApplicationIdentifier:completion:
connect:
setExportedObject:
_remoteObjectProxy
connection
synchronousRemoteObjectProxyWithErrorHandler:
_synchronousRemoteObjectProxy
applicationInfoForCompanionBundleIdentifier:
applicationInfoForApplicationIdentifier:
T@"NSXPCConnection",R,N,V_connection
initWithIdentifier:delegate:callbackQueue:
sharedProvider
interfaceForType:
_waterLockDidUpdate
setDidUpdate:
initWithIdentifier:
setEnabled:completion:
enabled
waterLockDidChange:
lock
unlock
isLocked
_waterLockInterface
_callbackQueue
_identifier
locked
TB,R,N,GisLocked
T@"NSString",R,N,V_identifier
T@"<CSLSWaterLockDelegate>",W,N,V_delegate
domain
isCSLSSessionErrorDomain
errorWithCode:description:
errorWithCode:
error:matches:
isSessionError:
bluetoothEnabled
appendRadioConnectionState:
_airplaneModeEnabled
_bluetoothEnabled
_telephonyEnabled
TB,R,N,V_airplaneModeEnabled
TB,R,N,V_bluetoothEnabled
TB,R,N,V_telephonyEnabled
setAirplaneModeEnabled:
setBluetoothEnabled:
setTelephonyEnabled:
enableUnblankingSynchronization:
readyForUnblank:completion:
prepareForUnblank:
unblankTimedOut:
initWithOptions:capacity:
CSLUnblankingSynchronizationServerInterface
CSLUnblankingSynchronizationClientInterface
setExportedInterface:
readyForUnblank:
remoteObjectProxy
withLock_enableUnblankingSynchronization:
allObjects
countByEnumeratingWithState:objects:count:
prepareForUnblankBlock
addUnblankingSychronizer:
removeUnblankingSychronizer:
unblankingSychronizer:readyForUnblank:
_syncronizers
_pendingUnblankSyncronizers
_pendingUnblankID
_isUnblankPending
xpcSetEcoMode:thermalTrap:completion:
xpcSetInfo24hMode:deviceRotatedUp:utcOffset:completion:
xpcSet24hMode:
xpcSetDeviceRotatedUp:
xpcSetUtcOffset:
xpcObliterateSettings:
xpcAddScreenOnDuration:
xpcUpdatePowerSettingsForDemoModeWithChargeThrottling:chargeLimitVoltage:
setEcoMode:thermalTrap:completion:
remoteObjectProxyWithRetryHandler:errorHandler:
setInfo24hMode:deviceRotatedUp:utcOffset:completion:
set24hMode:
setDeviceRotatedUp:
setUtcOffset:
obliterateSettings:
addScreenOnDuration:
updatePowerSettingsForDemoModeWithChargeThrottling:chargeLimitVoltage:
xpcEcoModeDConnection
setXpcEcoModeDConnection:
_xpcEcoModeDConnection
T@"NSXPCConnection",&,N,V_xpcEcoModeDConnection
setPriority:
setLeeway:
setUsesBudget:
setSimultaneousRequests:
setReturnToPrimaryUIInterval:
priorityState:leeway:usesBudget:simultaneousRequests:returnToPrimaryUIInterval:
priority
leeway
usesBudget
returnToPrimaryUIInterval
simultaneousRequests
_usesBudget
_priority
_leeway
_returnToPrimaryUIInterval
_simultaneousRequests
TQ,N,V_priority
Td,N,V_leeway
TB,N,V_usesBudget
Td,N,V_returnToPrimaryUIInterval
Tq,N,V_simultaneousRequests
setObject:forKey:
_addPrivilegedClient:priority:leeway:usesBudget:simultaneousRequests:returnToPrimaryUIInterval:
enumerateKeysAndObjectsUsingBlock:
addPrivilegedClient:priority:leeway:usesBudget:returnToPrimaryUIInterval:
addPrivilegedClient:priority:leeway:usesBudget:simultaneousRequests:
enumeratePrivilegedClients:
stateCache
setStateCache:
_stateCache
T@"CSLSafeMutableDictionary",&,N,V_stateCache
numberWithUnsignedLong:
_makeKeyForMask:event:
removeObjectForKey:
unsignedIntegerValue
setEntryForButtons:event:entry:
entryForButtons:event:
removeEntryForButtons:event:
enumerateEntries:
clear
entries
setEntries:
_entries
T@"NSMutableDictionary",&,V_entries
_init
takeDockLaunchAssertion:completion:
releaseDockLaunchAssertion:completion:
_retakeAssertionIfNecessary
_remoteObjectProxy:
_currentAssertion
initWithServiceName:
dictionaryWithCapacity:
takeSuspendSystemGestureAssertionWithConfiguration:
assertionID
edge
_sendMessage:
releaseSuspendSystemGestureAssertionWithConfiguration:
queue_connectionWasInterrupted
_activeAssertions
weakObjectsPointerArray
compact
addPointer:
pointerAtIndex:
replacePointerAtIndex:withPointer:
performSelectorOnMainThread:withObject:waitUntilDone:
enumerateObserversWithBlock:
addObserver:
removeObserver:
performSelectorOnMainThreadWithRespondingObservers:object:waitUntilDone:
observersLock
setObserversLock:
observers
setObservers:
_observersLock
_observers
T{os_unfair_lock_s=I},N,V_observersLock
T@"NSPointerArray",&,N,V_observers
TQ,R,N
connectWithObserver:
state
setState:
observeStateWithBlock:
stateChangedBlock
_state
_stateChangedBlock
T@?,R,N,V_stateChangedBlock
T@"CSLSConnectionState",&,N,V_state
processInfo
globallyUniqueString
initWithIdentifier:allowingServices:
initWithToken:
buddyAlertSuppressionAssertion
buddyAlertSuppressionAssertionAllowingServices:
setStatusString:
acquireWithStatusString:completion:
acquireWithHandler:invalidationHandler:
statusString
_queue
_statusString
T@"NSString",C,N,V_statusString
setIdentifier:
T@"NSString",&,N,V_identifier
allowingServices
objectAtIndexedSubscript:
setAllowingServices:
_allowingServices
T@"NSArray",&,N,V_allowingServices
initWithIdentifier:reason:
reason
setReason:
_reason
TQ,N,V_reason
initWithIdentifier:alertServiceNames:
alertServiceNames
setAlertServiceNames:
_alertServiceNames
T@"NSArray",C,N,V_alertServiceNames
activateAssertion:forProcess:
activateAssertion:forProcess:reasonIdentifier:
activateModalAppAssertion:forProcess:allowingServices:
activateAssertion:forProcess:disallowingServices:
deactivateAssertion:forProcess:
_reactivateAssertions
_activateRemoteAssertion:
numberWithUnsignedInteger:
objectForKey:
processIdentifier
_serviceWithErrorHandler:
identifierForReason:
initialize
activateAssertionWithToken:
deactivateAssertionWithToken:
_outstandingTokens
alertSuppressionAssertion
alertSuppressionAssertionAllowingServices:
alertSuppressionAssertionWithReason:
alertSuppressionAssertionWithAlertServiceNames:
_token
UUID
UUIDString
initWithStaleDate:uuid:userInfo:atGlanceableUI:
checkUserInfoSize:
distantFuture
snapshotContextWithStaleDate:userInfo:atGlanceableUI:
distantPast
objectForSetting:
archivedDataWithRootObject:requiringSecureCoding:error:
length
maxUserInfoSize
staleDate
uuid
userInfo
isAtGlanceableUI
appendDictionarySection:withName:skipIfEmpty:
snapshotContextWithStaleDate:uuid:userInfo:atGlanceableUI:
alwaysValidSnapshotContext
invalidSnapshotContext
fromSettings:
defaultStaleDate
initWithXPCDictionary:
encodeWithXPCDictionary:
fallbackXPCEncodableClass
initWithStaleDate:userInfo:atGlanceableUI:
_atGlanceableUI
_staleDate
_uuid
_userInfo
T@"NSDate",R,N,V_staleDate
T@"NSString",R,N,V_uuid
T@"NSDictionary",R,N,V_userInfo
atGlanceableUI
TB,R,N,GisAtGlanceableUI,V_atGlanceableUI
propertyList:isValidForFormat:
dataWithPropertyList:format:options:error:
UTF8String
bytes
createKeyBagStashIfNecessary:
notInBackground
isNotInBackgroundError:
notImplemented
floatValue
numberWithDouble:
appendDouble:
hasCustomReturnToAppTimeout
returnToAppTimeout
appendDouble:counterpart:
sessionCapable
alwaysReturnToAppInSession
appendFloat:withName:
setReturnToAppTimeout:
setSessionCapable:
setAlwaysReturnToAppInSession:
_returnToAppTimeout
_hasCustomReturnToAppTimeout
_sessionCapable
_alwaysReturnToAppInSession
Td,N
TB,R,N,V_hasCustomReturnToAppTimeout
TB,N,V_sessionCapable
TB,N,V_alwaysReturnToAppInSession
_sendBlockingMessage:reply:
timeIntervalSince1970
stringWithUTF8String:
sendSimpleMessage:
sendMessage:withFlag1:flag2:
sendMessage:withFlag1:flag2:withReply:
sendMessage:withString:
sendMessage:withString:flag:
sendMessage:withDate:flag:string:
sendMessage:withTimeInterval:string:flag:
sendMessage:withOptions:
sendMessage:withTimeInterval:options:
sendMessage:withReply:
sendMessage:withStringReply:
serviceWithDefaultShellEndpoint
_takeAssertion
setAssertionID:
setPid:
setEdge:
setIgnoresForegroundStatus:
setAssertionProvider:
assertionProvider
ignoresForegroundStatus
_configuration
_ignoresForegroundStatus
_edge
TB,N,V_ignoresForegroundStatus
Tq,N,V_edge
_queue_attemptConnection
_attemptConnection
_invalidateConnection
_updateWantsUnfilteredGesturesForced:
_queue_updateWantsUnfilteredGesturesForced:
setWantsUnfilteredGestures:includingWhenScreenOff:
addObserver:observeFilteredGestures:includingWhenScreenOff:
wakeGestureRecognized:
wakeGestureRecognized:date:
addObserver:observeFilteredGestures:
filteredObservers
setFilteredObservers:
screenOffFilteredObservers
setScreenOffFilteredObservers:
_notifyToken
_wantsUnfilteredGestures
_wantsUnfilteredGesturesWithScreenOff
_connectionQueue
_filteredObservers
_screenOffFilteredObservers
T@"CSLSConcurrentObserverStore",&,N,V_observers
T@"CSLSConcurrentObserverStore",&,N,V_filteredObservers
T@"CSLSConcurrentObserverStore",&,N,V_screenOffFilteredObservers
setClass:forSelector:argumentIndex:ofReply:
modalAppAlertSuppressionAssertion
modalAppAlertSuppressionAssertionAllowingServices:
initWithInitialState:configuration:
loggingName
setStateMachineState:
_transitionToState:
raise:format:
behaviorForTransitionFromState:toState:
logHandle
errorLogType
descriptionForState:
logType
_notifyDelegateWithState:
stateMachine:didEnterState:
beginTransitionToState:
endTransition
endTransitionWithState:
_isInCallout
T@"<CSLSBinaryTransitionStateMachineDelegate>",W,N,V_delegate
TQ,R,N,V_state
applyDefaultTransitionBehaviorsToConfiguration:
initWithConfiguration:
appendInteger:
appendInt64:
appendInteger:counterpart:
appendEqualsBlocks:
_indexForTransitionFromState:toState:
setBehavior:forTransitionFromState:toState:
setDescription:forState:
setLogHandle:
setLogType:
setErrorLogType:
setLoggingName:
_stateDescriptions
_behaviors
_logType
_errorLogType
_logHandle
_loggingName
T@"NSObject<OS_os_log>",&,N,V_logHandle
TC,N,V_logType
TC,N,V_errorLogType
T@"NSString",C,N,V_loggingName
array
componentsJoinedByString:
initWithBlock:
_block
submitBackgroundTaskRequest:forBundleID:
submitBackgroundTaskRequest:forBundleID:completion:
submitBackgroundTaskRequest:forBundleID:completionWithError:
cancelBackgroundTaskRequestForBundleID:
cancelBackgroundTaskRequestForBundleID:completion:
cancelBackgroundTaskRequestForBundleID:withUUID:completion:
submittedRequestsForBundleID:completion:
registerPrivilegedBackgroundClient:withPriority:leeway:usesBudget:completion:
registerPrivilegedBackgroundClient:withPriority:leeway:usesBudget:simultaneousRequests:completion:
reconnect:
completeBackgroundHealthKitQueryForBundleID:completion:
setClasses:forSelector:argumentIndex:ofReply:
CSLSBackgroundTaskRequestServiceXPC
asynchronousRemoteObjectProxyWithRetryHandler:errorHandler:
_completePendingHealthKitAction
_withLock:block:
remoteInterface
didConnect
didReconnect
T@"NSString",R,N
T@"NSXPCInterface",R,N
T@"NSObject<OS_os_log>",R,N
handleBackgroundHealthKitQueryAction:
setConnection:
healthKitAction
setHealthKitAction:
_healthKitLock
_healthKitAction
T@"CSLSPrivilegedBackgroundServiceConnection",&,N,V_connection
T@"BSAction",&,N,V_healthKitAction
retrieveDockStatusForBundleID:completion:
connect
isDocked:
T@"NSXPCConnection",&,N,V_connection
cStringUsingEncoding:
setBundleIdentifier:
setPresentationContext:
setWantsAlertSuppression:
setAnimated:
startModalAppWithOptions:
terminateModalAppWithBundleIdentifier:
_restartModalApps
bundleIdentifier
startModalAppWithBundleIdentifer:
_activeModalApps
beginWithOptions:log:
beginWithOptions:log:ariadneEvent:a:b:c:d:
endWithAriadneEvent:a:b:c:d:
isValid
timeProfile
_startValues
_timeProfile
_log
_options
_kernelError
_ended
valid
TB,R,N,GisValid
T{?=Q{?=QQ}{?=QQ}B},R,N
numberWithUnsignedLongLong:
isAnimated
suppressesLaunchUI
setSuppressesLaunchUI:
presentationContext
wantsAlertSuppression
allowedAlertServices
setAllowedAlertServices:
_animated
_suppressesLaunchUI
_wantsAlertSuppression
_bundleIdentifier
_presentationContext
_allowedAlertServices
T@"NSString",C,N,V_bundleIdentifier
animated
TB,N,GisAnimated,V_animated
TB,N,V_suppressesLaunchUI
Tq,N,V_presentationContext
TB,N,V_wantsAlertSuppression
T@"NSSet",C,N,V_allowedAlertServices
signalStrengthBars
appendUnsignedInteger:withName:
associatedToIOSHotspot
currentNetworkName
appendString:withName:skipIfEmpty:
appendWifiConnectionState:
appendUnsignedInteger:
appendUnsignedInteger:counterpart:
appendString:counterpart:
_wifiActive
_signalStrengthBars
_associatedToIOSHotspot
_currentNetworkName
TB,R,N,V_wifiActive
TQ,R,N,V_signalStrengthBars
TB,R,N,V_associatedToIOSHotspot
T@"NSString",R,N,V_currentNetworkName
setWifiActive:
setSignalStrengthBars:
setAssociatedToIOSHotspot:
setCurrentNetworkName:
TQ,D,N
T@"NSString",&,D,N
_attemptReconnect
_attemptConnect
T@"<CSLSBackgroundServiceDelegate>",W,N,V_delegate
injectError:errorCode:completion:
clearError:completion:
synchronousRemoteObjectProxy
connectionQueue
startTest:
testStarted:error:
setConnectionQueue:
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
T@"NSObject<CSLSPowerTestDelegate>",W,N,V_delegate
initWithDomain:
reloadAppSettings
synchronize
returnToAppSettingsToDictionary:
setWithObject:
synchronizeNanoDomain:keys:
settingsChanged:forBundleID:
saveAppSettings
settingsForBundleID:
setSettings:forBundleID:
_returnToAppSettingsByBundleID
_npsDomainAccessor
_npsManager
takeDetentAssertion:
releaseDetentAssertion:
getPreferences:
recordMetrics:
detentsDisabledChanged:
detentsDebugChanged:
flashDetentsChanged:
detentsChanged:
CSLSDetentService
CSLSDetentClient
_setQueue:
assertionTaken
setAssertionTaken:
initWithQueue:delegate:
_assertionTaken
T@"<CSLSDetentClient>",R,W,N,V_delegate
TB,N,V_assertionTaken
fbsOptionsForActivationOptions:bundleID:
optionsWithDictionary:
openApplication:withOptions:completion:
orderedSet
payload
addEntriesFromDictionary:
sharedService
canActivateApplication:forReasons:
activateApplication:options:withResult:
_openApplicationService
sharedNavigationService
navigateToLocation:animated:withCompletion:
sharedTileNavigationService
navigateToClockAnimated:completion:
sharedDetentService
takeAssertion:
releaseAssertion:
setLock:
setDictionary:
_dictionary
T{_opaque_pthread_mutex_t=q[56c]},N,V_lock
T@"NSMutableDictionary",&,N,V_dictionary
allKeys
setWithArray:
WKBackgroundModes
intersectSet:
integerValue
tokenFromNSXPCConnection:
valueForEntitlement:
entitlements
objectForKey:ofClass:
setUnderlyingQueue:
setName:
setMaxConcurrentOperationCount:
isActive
setIsActive:
initWithBundleId:
initWithAlternateSystemApp:
setActivity:
blockOperationWithBlock:
arrayWithObjects:count:
addOperations:waitUntilFinished:
isTerminating
setIsTerminating:
prepareForDismissalWithCompletion:
complete
terminate
alternateSystemAppDidLaunch:
alternateSystemApp:didFailToLaunchWithError:
alternateSystemApp:didExitWithStatus:
alternateSystemApp:didTerminateWithSignal:
terminateWithCompletion:
_alternateSystemApp
_dispatch_queue
_launchOperation
_isActive
_isTerminating
TB,V_isActive
TB,V_isTerminating
isCancelled
willChangeValueForKey:
didChangeValueForKey:
start
isAsynchronous
isExecuting
isFinished
block
_executing
_finished
T@?,R,C,N,V_block
currentQueue
underlyingQueue
activity
initWithInfo:timeout:forResponseOnQueue:withHandler:
sendActions:withResult:
alternateSystemApp
_activity
T@"BKSAlternateSystemApp",R,N,V_alternateSystemApp
T@"NSObject<OS_os_activity>",&,N,V_activity
_queue_lockStateExtended:
_queue_setHasPasscodeIfNecessary:
_queue_createStashBag:
createStashBag:completion:completionQueue:
isEffectivelyLocked
initWithCapacity:
weakObjectsHashTable
keybagDidUnlockForTheFirstTime:
publicDescription
keybagWillBeginProcessingStateChange:
keybag:extendedStateDidChange:
keybagDidFinishProcessingStateChange:
setLockState:
setBackOffTime:
setFailedAttemptCount:
setPermanentlyBlocked:
setShouldWipe:
setRecoveryRequired:
setRecoveryPossible:
setEscrowCount:
lockState
lockSkippingGracePeriod:
unlockWithPasscode:error:
hasPasscodeSet
maxUnlockAttempts
createStashBag:completion:
hasBeenUnlockedSinceBoot
extendedState
beginRecovery:error:
waitForUnlockWithTimeout:
_queue_firstUnlockOccurred
_queue_handleKeybagStatusChanged
_calloutQueue
_queue_observerStateChangedCallbackBlocks
_queue_observers
_queue_hasPasscodeSet
_queue_hasUnlockedSinceBoot
_stateChangedNotifyToken
_firstUnlockNotification
T@"CSLSMobileKeyBagState",R,C,N
initWithSettings:
setDescriptionProvider:
containsValueForKey:
setFlag:forSetting:
decodeObjectForKey:
setObject:forSetting:
enumerateFlagsWithBlock:
settings
applySettings:
isEmpty
flagForSetting:
keyDescriptionForSetting:
settings:appendDescriptionToBuilder:forFlag:object:ofSetting:
settings:keyDescriptionForSetting:
settings:valueDescriptionForFlag:object:ofSetting:
appendDescriptionToBuilder:forFlag:object:ofSetting:
valueDescriptionForFlag:object:ofSetting:
flagForStateOverride:
objectForStateOverride:
setSettings:
_settings
T@"BSMutableSettings",&,N,V_settings
setFlag:forStateOverride:
setObject:forStateOverride:
deleteCharactersInRange:
currentState
appendFormat:
stateMachineLog
stateMachineName
willExitWithNextState:
willEnterWithPreviousState:
setCurrentState:
didExitWithNextState:
didEnterWithPreviousState:
enterState:
_currentState
decodeInt64ForKey:
encodeInt64:forKey:
effectiveOnWristState
sensorOnWristState
isWristDetectDisabled
isForceOnWristEnabled
isDeviceOnCharger
appendUInt64:withName:
date
confidence
setWristDetectDisabled:
setDate:
setTimestamp:
setDeviceOnCharger:
setForceOnWristEnabled:
setSensorOnWristState:
setConfidence:
_wristDetectDisabled
_forceOnWristEnabled
_deviceOnCharger
_date
_sensorOnWristState
_confidence
TQ,R,N,V_timestamp
T@"NSDate",R,N,V_date
Tq,R,N,V_sensorOnWristState
wristDetectDisabled
TB,R,N,GisWristDetectDisabled,V_wristDetectDisabled
forceOnWristEnabled
TB,R,N,GisForceOnWristEnabled,V_forceOnWristEnabled
deviceOnCharger
TB,R,N,GisDeviceOnCharger,V_deviceOnCharger
Tq,R,N,V_confidence
_setupDeviceRegistry
getActivePairedDevice
_deviceDidPair:
addObserver:selector:name:object:
_updateImageName
valueForProperty:
setAssetName:
disconnectedAssetNameProvider:updatedAssetName:
assetName
_deviceRegistry
_pairedDevice
_assetName
T@"NSString",R,N,V_assetName
initWithIdentifier:reason:flags:timeoutSeconds:
flags
timeoutSeconds
willKeepScreenOn
willForceDisplayOn
willDisableWristLowerGestures
willDisableWristRaiseGestures
shouldEnableCoverGesture
shouldIgnoreCoverGesture
willDisableLongCoverGesture
shouldRestartUserIdleTimer
isUserInitiated
doesTimeoutWhenDisplayOff
clearsUserHasInteracted
willPreventUnblank
shouldBlankScreen
willPreventAOT
willPreventAlwaysOnGestures
shouldTreatAlwaysOnSwipesAsTapToWake
shouldDisableAlwaysOnTapPosition
shouldTouchlock
willDisableCommitOnWakeMeasurement
decodeInt32ForKey:
decodeDoubleForKey:
encodeInt32:forKey:
encodeDouble:forKey:
willEnableDynamicWristRaise
_flags
_timeoutSeconds
T@"NSString",R,C,N,V_identifier
TI,R,N,V_reason
TI,R,N,V_flags
Td,R,N,V_timeoutSeconds
keepDisplayOn
TB,R,N,GwillKeepScreenOn
forceDisplayOn
TB,R,N,GwillForceDisplayOn
disableWristLowerGestures
TB,R,N,GwillDisableWristLowerGestures
disableWristRaiseGestures
TB,R,N,GwillDisableWristRaiseGestures
restartUserIdleTimer
TB,R,N,GshouldRestartUserIdleTimer
userInitiated
TB,R,N,GisUserInitiated
preventUnblank
TB,R,N,GwillPreventUnblank
blankScreen
TB,R,N,GshouldBlankScreen
preventAOT
TB,R,N,GwillPreventAOT
preventAlwaysOnGestures
TB,R,N,GwillPreventAlwaysOnGestures
treatAlwaysOnSwipesAsTapToWake
TB,R,N,GshouldTreatAlwaysOnSwipesAsTapToWake
disableAlwaysOnTapPosition
TB,R,N,GshouldDisableAlwaysOnTapPosition
touchlock
TB,R,N,GshouldTouchlock
enableCoverGesture
TB,R,N,GshouldEnableCoverGesture
ignoreCoverGesture
TB,R,N,GshouldIgnoreCoverGesture
disableLongCoverGesture
TB,R,N,GwillDisableLongCoverGesture
enableDynamicWristRaise
TB,R,N,GwillEnableDynamicWristRaise
disableCommitOnWakeMeasurement
TB,R,N,GwillDisableCommitOnWakeMeasurement
activeComplicationBundleIDsWithCompletion:
isComplicationBundleIDActive:withCompletion:
sharedComplicationService
setHandlerForButton:buttonAction:handler:
removeHandlerForButton:buttonAction:handlerToken:
disableInstantButtonTapsWithIdentifier:
setHandlerForButtons:event:handler:
removeHandlerForButtons:event:token:
T@"<CSLSButtonHandlerDelegate>",W,N,V_delegate
_removeAllHandlers
setHandlerForButtons:event:handlerWithTimestamps:
setHandlerForButtons:event:serviceIdentifier:handlerWithTimestamps:
removeHandlerForButtons:event:serviceIdentifier:
removeHandlerForButtons:event:
_buttonMaskTohandlerTokenDictionary
initWithServiceServerDelegate:
allValues
_withRecursiveLock:
setRunning:error:
_addSessionServiceObserver:bundleID:completion:
_addSessionTypeObserver:type:completion:
isRunning
isNearOrPastExpiration
sessionID
restartSession:completion:
executeOrQueueForReason:serverBlock:
startSession:completionWithExpirationDate:
type
setExpirationDate:
_addActiveSession:
endSession:options:completion:
_sessionEnded:error:
setErrorCode:
setStartDate:
scheduleSession:startDate:options:completion:
cancelScheduledSession:completion:
arrayWithCapacity:
replaceLocalRunningSessions:
fetchAllRunningSessionsOfType:completion:
existingRunningSessionsForBundleID:completion:
existingSessionsForBundleID:completion:
existingScheduledSessionsForBundleID:completion:
addSessionServiceObserverForBundleID:completion:
removeSessionServiceObserverForBundleID:completion:
_addSessionTypeObserver:type:
startObservingSessionType:completion:
numberWithInteger:
_stopObservingSessionType:completion:
stopObservingSessionType:completion:
bundleRecordForCurrentProcess
sessionForBundleID:type:
fetchStickyCapableApps:
takeSessionSuppressionAssertion:
releaseSessionSuppressionAssertion:
bundleID
addObjectsFromArray:
sessionDidStop:error:completion:
sessionDidStopRunningForAppBundleID:scheduled:error:completion:
sessionDidStopRunningForAppBundleID:scheduled:completion:
sessionDidStopRunningForAppBundleID:scheduled:
_findSession:
_observersForSession:mask:
_sessionEnded:uuid:bundleID:startWasScheduled:observers:error:completion:
lastStartWasScheduled
expirationDate
setLastStartWasScheduled:
startDate
sessionDidStart:error:completion:
sessionDidStartRunningForAppBundleID:scheduled:completion:
sessionDidStartRunningForAppBundleID:scheduled:
sessionWithUUIDEnded:bundleID:startWasScheduled:error:completion:
sessionStarted:error:completion:
sessionEnded:error:completion:
handleInvalidation
handleInterruption
appBundleIDForCurrentProcess
startSession:completion:
endSession:completion:
defaultSession:
existingRunningSessions:
existingScheduledSessions:
addSessionServiceObserver:bundleID:completion:
removeSessionServiceObserver:bundleID:completion:
addSessionTypeObserver:type:completion:
removeSessionTypeObserver:type:completion:
_activeSessions
_scheduledSessions
_serviceObserversPerAppBundleID
_sessionObserversBySessionType
_sessionServerConnection
_recursiveLock
_activeSessionsTransaction
mainBundle
null
initWithServiceServerDelegate:connection:
initWithName:onQueue:
_handleInvalidation
_executeServerBlock:reason:
eventWithName:handler:
executeOrInsertEvent:atPosition:
relinquish
initWithEventQueue:reason:
_releaseEventQueueLock:
_handleInterruption
_startConnection
connect:completion:
_eventQueue
_eventQueueQueue
_eventQueueLock
_invalidated
T@"<CSLSSessionServerConnectionDelegate>",W,N,V_delegate
theaterModeDidChange:
setEnabled:
isEnabled
_theaterModeInterface
TB,N,GisEnabled
T@"<CSLSTheaterModeDelegate>",W,N,V_delegate
initWithType:
firstObject
removeObjectAtIndex:
addNonTypedOutstandingSendBlock:
dequeueNextNonTypedOutstandingSendBlock
setOutstandingSendBlock:forType:
dequeueOutstandingSendBlockForAnyType
waitingForSend
setWaitingForSend:
_nonTypedOutstandingSendBlocks
_outstandingSendBlocksByType
_waitingForSend
T@"NSXPCConnection",W,N,V_connection
TB,N,V_waitingForSend
weakToStrongObjectsMapTable
sendMessageOnConnection:msgTypeID:messageSendBlock:
_sendNextMessageForConnection:
keyEnumerator
scheduleSendBarrierBlock:
sendMessageOnConnection:messageSendBlock:
stopTrackingConnection:
purgeClosedConnections
_weakConnections
initWithPosition:timestamp:
position
_position
T{CGPoint=dd},R,N,V_position
viewIdentifier
setViewIdentifier:
uniqueIdentifier
setUniqueIdentifier:
whileActiveOnly
setWhileActiveOnly:
_whileActiveOnly
_viewIdentifier
_uniqueIdentifier
T@"NSString",&,N,V_viewIdentifier
T@"NSString",&,N,V_uniqueIdentifier
TB,N,V_whileActiveOnly
requestDefaultURLSessionPolicyForPID:completion:
defaultURLSessionPolicyForPID:
isDismissable
displaysWhileLocked
transitionStyle
isjustPinEntry
justPinEntryIsSimpleCode
justPinEntryCodeLength
appendInteger:withName:
justPinEntryMinCodeLength
justPinEntryMaxCodeLength
justPinEntryCodeTitle
setDismissable:
setDisplaysWhileLocked:
setTransitionStyle:
setJustPinEntry:
setJustPinEntrySimpleCode:
setJustPinEntryCodeLength:
setJustPinEntryCodeTitle:
setJustPinEntryMinCodeLength:
setJustPinEntryMaxCodeLength:
_dismissable
_displaysWhileLocked
_justPinEntry
_justPinEntrySimpleCode
_transitionStyle
_justPinEntryCodeLength
_justPinEntryMinCodeLength
_justPinEntryMaxCodeLength
_justPinEntryCodeTitle
dismissable
TB,N,GisDismissable,V_dismissable
TB,N,V_displaysWhileLocked
TQ,N,V_transitionStyle
justPinEntry
TB,N,GisjustPinEntry,V_justPinEntry
justPinEntrySimpleCode
TB,N,GjustPinEntryIsSimpleCode,V_justPinEntrySimpleCode
TQ,N,V_justPinEntryCodeLength
TQ,N,V_justPinEntryMinCodeLength
TQ,N,V_justPinEntryMaxCodeLength
T@"NSString",C,N,V_justPinEntryCodeTitle
isOnOperation
source
hasPosition
direction
initIsOnOperation:identifier:source:hasPosition:position:direction:timestamp:
appendPoint:withName:
hasDirection
appendInt64:withName:
appendTimeInterval:withName:decomposeUnits:
initWithBacklightRequest:
T{CGPoint=dd},R,N
_isOnOperation
_hasPosition
_source
_direction
TB,R,N,V_isOnOperation
TQ,R,N,V_source
TB,R,N,V_hasPosition
TQ,R,N,V_direction
previous
next
setNext:
setPrevious:
unlink
_next
_previous
T@"CSLLinkedListNode",&,N,V_next
T@"CSLLinkedListNode",&,N,V_previous
object
unsafe_Object
initWithObject:
_object
allocateForObject:
_removeNode:
initWithStorageAllocator:
begin
rbegin
rend
erase:
_head
_tail
_mutationsCtr
_allocator
_count
TQ,R,N,V_count
trackObject:delegate:userInfo:
noteWeakDealloc:
setConnectionState:
status
connectionStatusDidChange:
wifiSignalStrengthBarsDidChange:
wifiSignalStrengthBars
registrationStatusDidChange:
registrationStatus
simActiveDidChange:
setWifiSignalStrengthBars:
setRegistrationStatus:
setCellularSignalStrengthBars:
setSimActive:
setStatus:
_informObserversOfChangeInStatus:
_informObserversOfChangeInWifiSignalStrength:
_informObserversOfChangeInRegistration:
_informObserversOfChangeInCellularSignalStrength:
_informObserversOfChangeInSimActive:
cellularSignalStrengthBarsDidChange:
lastKnownCountryCodeDidChange:
overrideSatus:
overrideWifiSignalStrengthBars:
overrideCellularSignalStrengthBars:
overrideRegistrationStatus:
isCompanionConnected
cellularSignalStrengthBars
lastConnectedDate
setLastConnectedDate:
lastKnownCountryCode
connectionState
setIsCompanionConnected:
_connectionStateObserver
_simActive
_isCompanionConnected
_wifiSignalStrengthBars
_cellularSignalStrengthBars
_status
_registrationStatus
_lastConnectedDate
_lastKnownCountryCode
_connectionState
T@"CSLSConnectionState",&,N,V_connectionState
TQ,N,V_status
TB,N,V_isCompanionConnected
Ti,N,V_wifiSignalStrengthBars
Tq,N,V_registrationStatus
Ti,N,V_cellularSignalStrengthBars
TB,N,V_simActive
T@"NSDate",&,V_lastConnectedDate
T@"NSString",R,V_lastKnownCountryCode
audioSlot
hapticSlot
numberWithInt:
audioGain
hapticGain
strongAudioGain
strongHapticGain
decodeIntForKey:
setType:
setAudioSlot:
setAudioGain:
setStrongAudioGain:
setHapticSlot:
setHapticGain:
setStrongHapticGain:
encodeInt:forKey:
_buildDescriptionWithBuilder:
appendInt:withName:
toAOPDictionaries
toAPIndexDictionariesWithStrength:
_audioSlot
_hapticSlot
_type
_audioGain
_strongAudioGain
_hapticGain
_strongHapticGain
Tq,N,V_type
TS,N,V_audioSlot
Td,N,V_audioGain
Td,N,V_strongAudioGain
TS,N,V_hapticSlot
Td,N,V_hapticGain
Td,N,V_strongHapticGain
setRealClient:
initializeWithButtons:
deactivate
deactivate:
_reinitializeAndActivateIfNecessary
initWithButtons:completion:
buttons
active
setActive:
completion
_active
_completion
_buttons
T@?,R,C,N,V_completion
TQ,R,N,V_buttons
TB,N,V_active
realClient
_realClient
T@"<CSLSButtonTapAssertionClientInterface>",W,N,V_realClient
initWithPreferredDate:userString:uuid:
initWithPreferredDate:userString:uuid:leeway:
initWithPreferredDate:userString:uuid:leeway:schedulingOptions:
decodeDictionaryWithKeysOfClass:objectsOfClass:forKey:
doubleValue
_buildDescriptionWithBuilder:verbose:
initWithPreferredDate:userString:
setPersist:
persist
preferredDate
setPreferredDate:
userString
setUserString:
schedulingOptions
setSchedulingOptions:
_persist
_preferredDate
_userString
_schedulingOptions
T@"NSDictionary",&,N,V_schedulingOptions
T@"NSDate",&,N,V_preferredDate
T@"NSString",&,N,V_userString
sessionForBundleID:withURL:type:
sessionWithURL:type:
initForBundleID:url:type:
initRequiringSecureCoding:
finishEncoding
encodedData
initForReadingFromData:error:
coder
sessionWithSession:
sessionDidStart:
sessionDidStop:error:
dateWithTimeIntervalSinceNow:
compare:
initWithUUIDString:
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceReferenceDate
sessionOfType:
sessionTypeIsExtendedRuntime:
errorCode
appShouldBeAskedToHandle
setBundleID:
setUrl:
isRemote
setRemote:
setSessionID:
isDismissible
setDismissible:
isLaunchable
setLaunchable:
_running
_errorCode
_lastStartWasScheduled
_remote
_dismissible
_launchable
_bundleID
_url
_sessionID
_expirationDate
_startDate
T@"NSUUID",C,N,V_sessionID
dismissible
TB,GisDismissible,V_dismissible
launchable
TB,GisLaunchable,V_launchable
T@"NSDate",&,N,V_expirationDate
T@"NSDate",&,N,V_startDate
T@"<CSLSSessionDelegate>",W,N,V_delegate
T@"NSString",C,N,V_bundleID
T@"NSURL",C,N,V_url
running
TB,R,N,GisRunning
TB,N,V_lastStartWasScheduled
remote
TB,N,GisRemote,V_remote
identifierWithPid:
predicateMatchingIdentifier:
handleForPredicate:error:
bundle
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
containingBundleRecord
protocol
containingBundle
auditToken
needPasscodeForHSA2EscrowRecordUpdate:
unlockScreenType
setPassphrase:
prepareHSA2EscrowRecordContents:reply:
requirePasscode
noteAuthenticationSucceededWithPasscode:
setSnapshotContext:forBundleID:
setSnapshotContext:forBundleID:completion:
snapshotContextForBundleID:completion:
snapshotWhenBackgroundProcessingCompletes:completion:
registerPrivilegedSnapshotClient:withPriority:leeway:usesBudget:returnToPrimaryUIInterval:completion:
snapshotAppWithBundleID:completion:
clientExtendedData
fromDictionary:
_getSnapshotScheduleItemFromAction:
getMutableSettingsFromContext:
setClientExtendedData:
getReasonFromAction:
extendFBSnapshotContext:withCSLSSnapshotContext:
getUserInfoFromAction:
restoreToDefaultF5StateWithDisabledAlerts:completion:
restoreToStateInPList:withDisabledAlerts:completion:
_reestablishState
sharedNotificationCenterService
restoreToDefaultF5StateWithCompletion:
restoreToStateInPList:completion:
_plistPath
_disableAlerts
activateAssertionWithIdentifier:
applicationLaunchSupressionAssertion
_uid
assertion
setAssertion:
_assertion
T@,W,N,V_assertion
setUserInitiated:
requestWithReason:userInitiated:
_userInitiated
TI,N,V_reason
TB,N,GisUserInitiated,V_userInitiated
_createConnectionIfNecessary
beginObserving
observersNeedingInitialState
removePointerAtIndex:
currentBacklightState
_informObserver:oldState:newState:reason:
endObserving
onForIdentifier:reason:isUserInitiated:
offForIdentifier:reason:isUserInitiated:
setUuid:
specification
takeAssertion:withUUID:completion:
takeAssertion:withUUID:
releaseAssertion:completion:
_dropConnection
backlightDidChange:from:to:
backlightDidTurnOn:forReason:
backlightDidTurnOff:forReason:
performTimeout
localizedDescription
assertionTimedOut:
backlightDidChangeFrom:to:forReason:
requestRejectedForError:shouldRaiseException:
takeBacklightAssertion:completion:
releaseBacklightAssertion:completion:
setCurrentBacklightState:
setObserversNeedingInitialState:
_assertionsDictionary
_backlightOnRequests
_currentBacklightState
_observersNeedingInitialState
Tq,N,V_currentBacklightState
T@"NSPointerArray",&,N,V_observersNeedingInitialState
_pid
_assertionID
T@"NSString",&,N,V_assertionID
Ti,N,V_pid
version
shouldPreventExit
sensitiveUIMonitor:sensitiveUIChanged:
initWithSuiteName:
_defaultDefaults
initForVersion:withDelegate:userDefaults:
_isSensitiveUIEnabledForVersion:withDefaults:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
_versionChanged:
_isSensitiveUIEnabledForBuild
_isSensitiveUIEnabledForInternalTest
stringForKey:
_isSensitiveUIEnabledForInternalTest:
setShouldPreventExit:
isSensitiveUIEnabledForVersion:
initForVersion:withDelegate:
observeValueForKeyPath:ofObject:change:context:
setSensitiveUIEnabled:forVersion:
isSensitiveUIEnabled
_exitingDelegate
_enabled
_userDefaults
_version
T@"<CSLSSensitiveUIMonitoring>",R,W,N,V_delegate
T@"NSString",R,C,N,V_version
isRunningInStoreDemoMode:
navigateToLocation:dockBundleID:activateDockApp:withCompletion:
initWithService:
connectWithMachServiceName:
_remoteClientWithMachServiceName:
remoteClientWithMachServiceName:
remoteClient
noBudget
inForeground
snapshotting
sendData:toDestinations:priority:options:identifier:error:
sharedPhotoLibrary
fileURLWithPath:
creationRequestForAssetFromVideoAtFileURL:
performChanges:completionHandler:
defaultManager
attributesOfItemAtPath:error:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendImageData:imageDate:forType:
sendScreenRecording:
_idsService
_updateInvertedValue
_updateWristOrientation
setInverted:animated:
sharedDeviceOrientation
isInverted
wristOrientation
_isInverted
_wristOrientation
_invertUINotifyToken
_wristOrientationNotifyToken
initWithStateMachine:
stateMachine
_stateMachine
defaultTintColorName
serial
serviceClass:
serviceForClientIdentifier:
addStateUpdateListener:withCompletionHandler:
queryCurrentStateWithError:
_updateAssetNameWithDNDState:
removeStateUpdateListener:
dndModeAssetNameProvider:updatedAssetName:tintColorName:
activeModeIdentifier
modeConfigurationForModeIdentifier:error:
mode
symbolImageName
tintColorName
setAssetName:tintColorName:
stateService:didReceiveDoNotDisturbStateUpdate:
initWithDNDClientIdentifier:
queue
setQueue:
stateService
setStateService:
modeConfigurationService
setModeConfigurationService:
_tintColorName
_stateService
_modeConfigurationService
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"DNDStateService",&,N,V_stateService
T@"DNDModeConfigurationService",&,N,V_modeConfigurationService
T{os_unfair_lock_s=I},N,V_lock
T@"NSString",R,N,V_tintColorName
setSupportsLTE:
setMaxSignalStrengthBars:
setServiceState:
byApplyingOverrides:
_lock_deepCopyTakenAssertions
_takeRemoteAssertion:uuidString:
_retakeAssertions
_sendMessageType:withMessage:withReplyHandler:waitForReply:
takeActivatingUIAssertion:forUUID:
releaseActivatingUIAssertionForUUID:
_takenAssertions
_assertionUUID
setLayoutRole:
otherSettings
isAlertElement
alertIdentifier
appendObject:withName:skipIfNil:
initWithIdentifier:layoutRole:
isCarouselElement
layoutRole
setAlertIdentifier:
_layoutRole
carouselElement
TB,R,N,GisCarouselElement
alertElement
TB,R,N,GisAlertElement
T@"NSString",R,C,N
provideAppViewListImageDataForWidth:height:scale:completion:
xpcServerInterface
T@"NSXPCConnection",&,V_connection
appBacklightPrivacySettingsToDictionary:
settingsForAllApps
setSettingsForAllApps:
_appBacklightPrivacySettingsByBundleID
_appBacklightPrivacySettingsForAllApps
listenForLocaleChangesIfNecessary
stringByReplacingOccurrencesOfString:withString:
_handleLocaleChange
stringFromNumber:
dateFormatFromTemplate:options:locale:
localeIdentifier
hasPrefix:
substringFromIndex:
setNumberStyle:
setPositiveFormat:
currentLocale
initWithLocaleIdentifier:
requestRestartForLanguageChange
requestDismissalWithImageData:
checkin
initWithMask:event:
mask
event
dismissBuddyWithImageData:
restartForLanguageChange
registerForButtons:event:handler:
removeRegistration:
_buttonRegistrations
_buttonListener
matchesMask:event:
_mask
_event
TQ,R,N,V_mask
TQ,R,N,V_event
_refreshStateAndNotify:
_refreshKeyBagState:shouldNotify:
timeUntilUnblockedSinceReferenceDate
_withReadLockSync:
deviceLockModelRequestsDeviceWipe:
_withWriteLockAsync:
effectiveBoolValueForSetting:
valueRestrictionForFeature:
intValue
_isDeviceWipePreferenceEnabled
failedAttemptCount
backOffTime
_withWriteLockSync:
deviceLockStateMayHaveChangedForModel:
notePasscodeUnlockSucceeded
notePasscodeUnlockFailedWithError:
performPasswordTest:
clearBlockedState
refreshBlockedState
handleKeyBagStateChanged:
isTemporarilyBlocked
isPermanentlyBlocked
pendingWipe
_unblockTime
_permanentlyBlocked
_pendingWipe
T@"<CSLSUserAuthenticationModelDelegate>",W,N,V_delegate
temporarilyBlocked
TB,R,N,GisTemporarilyBlocked
permanentlyBlocked
TB,R,N,GisPermanentlyBlocked
Td,R,N
isBundleIDEligibleForBackgroundWork:completion:
isBundleIDEligibleForBackgroundHealthKitWork:completion:
sharedEligibilityService
T@"CSLSBackgroundServiceConnection",R,N,V_connection
eventTypeName:
isEqualToDate:
eventType
reasonName:
isEqualToAppEvent:
setEventType:
_eventType
T@"NSDate",&,N,V_date
TQ,N,V_eventType
transitionTypeName:
transitionType
setTransitionType:
isFavorite
setIsFavorite:
setCount:
_isFavorite
_transitionType
TQ,N,V_transitionType
TB,N,V_isFavorite
TQ,N,V_count
addAppEvent:
recentEvents
addStateTransition:
stateTransitions
displayName
memoryUsage
setMemoryUsage:
setIsRunning:
dockIndex
setDockIndex:
isComplication
setIsComplication:
setRecentEvents:
setStateTransitions:
setDisplayName:
_isRunning
_isComplication
_memoryUsage
_dockIndex
_recentEvents
_stateTransitions
_displayName
T@"NSMutableArray",&,N,V_recentEvents
T@"NSMutableArray",&,N,V_stateTransitions
TQ,N,V_memoryUsage
TB,N,V_isRunning
TQ,N,V_dockIndex
TB,N,V_isComplication
T@"NSString",C,N,V_displayName
currentAppStatsWithCompletion:
sharedAppStatsService
_resendPriorities
priorityStateCache
setPriorityStateCache:
_priorityStateCache
T@"CSLSBackgroundServiceConnection",&,N,V_connection
T@"CSLSPrivilegedBackgroundPriorityStateCache",&,N,V_priorityStateCache
getOnWristState:
forceOnWristUpdate
requestWristDetectionDisabledStatusWithCompletion:
onWristStateChanged:
initWithConnection:
initWithListenerEndpoint:
CSLOnWristServerExportedInterface
CSLOnWristClientExportedInterface
_getCSLSWristState:notify:
_activate
isActivated
_queue_onWristStateChanged:
lastState
setLastState:
onWristMonitor:didUpdateOnWristState:fromState:
_queue_didGetOnWristState:notify:completion:
_queue_updateState:notify:
setChangeHandler:
getWristState:
changeHandler
exportedObject
_lastState
_changeHandler
_exportedObject
T@"CSLOnWristClientExportedObject",&,N,V_exportedObject
T@"CSLSOnWristState",&,V_lastState
TB,GisActivated,V_activated
T@?,C,N,V_changeHandler
T@"<CSLSOnWristMonitorDelegate>",W,N,V_delegate
T@"<CSLOnWristClientExportedInterface>",W,N,V_delegate
observerList
setObserverList:
observedChanged:what:
updateObservers:what:
_observerList
T@"CSLWeakLinkedList",&,N,V_observerList
initWithDate:uuid:userInfo:
setScheduleFreebee:
setSystemScheduled:
setReturnToPrimaryUI:
isEqualToDictionary:
systemScheduled
returnToPrimaryUI
scheduleFreebee
scheduleItemWithDate:uuid:userInfo:
_boolFromDictionary:forKey:
_reasonFromDictionary:forKey:
_plistClasses
earlierDate:
scheduleItemWithDate:userInfo:
scheduleSystemItemWithDate:reason:
coalesce:
isEqualToScheduleItem:
rescheduleWithDate:
amendWithHigherPriorityFlagsAndReason:
_systemScheduled
_returnToPrimaryUI
_scheduleFreebee
T@"NSDate",R,C,N,V_date
T@"NSDictionary",R,C,N,V_userInfo
appendDictionarySection:withName:multilinePrefix:skipIfEmpty:
initWithReason:payload:
_payload
T@"NSString",R,N,V_reason
T@"NSDictionary",R,N,V_payload
activationOptionsForNSURLSessionWithIdentifier:
maxSignalStrengthBars
appendTelephonyConnectionState:
_supportsLTE
_maxSignalStrengthBars
_serviceState
TB,R,N,V_supportsLTE
TB,R,N,V_simActive
TQ,R,N,V_maxSignalStrengthBars
TQ,R,N,V_serviceState
handleUITriggerWithName:dictionary:reason:completion:
addUITriggerName:usage:
removeUITriggerName:
CSLSUITriggerClientExportedInterface
usagesByTriggerName
addUITriggerRemoteProvider:forUITriggerName:englishUsage:
removeUITriggerRemoteProvider:forUITriggerName:
_providersByName
_usagesByName
_service
connectionStateDidChange:
overridesDidChange:
connectWithCompletion:
setOverrides:
clientInterface
connectWithOverrider:
observer
overrider
updateOverrides:
configureOverrides:
setObserver:
setOverrider:
_observer
_overrider
T@"CSLSConnectionStateObserver",W,N,V_observer
T@"CSLSConnectionStateOverrider",W,N,V_overrider
overrides
observeOverridesWithBlock:
overridesChangedBlock
_overrides
_overridesChangedBlock
T@?,R,N,V_overridesChangedBlock
T@"CSLSConnectionStateOverrides",R,N,V_overrides
initWithConnection:hapticsController:
aopHapticsController
detentService:detentsDisabledChanged:
detentsDisabled
_callObserver:selector:value:
detentService:detentsDebugChanged:
detentsDebug
detentService:flashDetentsChanged:
flashDetents
detents
detentService:detentsChanged:
setDetentsDisabled:
_preferencesQueue_callObserversWithSelector:value:
setDetentsDebug:
setFlashDetents:
_queue_detentsChanged:
setDetentsByType:
setDetents:
playDetentOfType:strong:completion:
_queue_playDetentOfType:strong:completion:
_queue_takeAssertion:
_queue_releaseAssertion:
isTest
addPreferencesObserver:
removePreferencesObserver:
playDetentOfType:completion:
setTest:
setAopHapticsController:
detentsByType
_updateQueue
_preferencesQueue
_metricsQueue
_assertionCount
_preferenceObservers
_test
_detentsDisabled
_detentsDebug
_flashDetents
_aopHapticsController
_detents
_detentsByType
T@"AOPHapticsController",&,N,V_aopHapticsController
TB,V_detentsDisabled
TB,V_detentsDebug
TB,V_flashDetents
T@"NSArray",&,V_detents
T@"NSDictionary",&,N,V_detentsByType
initWithMKBLockStateInfo:
longLongValue
recoveryRequired
recoveryPossible
shouldWipe
escrowCount
numberWithLongLong:
recoveryEnabled
T@"NSDictionary",R,N,V_state
_mutableState
setRecoveryEnabled:
T@"NSDictionary",&,D,N
Tq,D,N
Td,D,N
shutdownForEcoMode:
addEventListener:
removeEventListener:
buttonEventListener:didObserveEvent:forButton:
_sendEvent:forButton:
T@"<CSLSRawButtonEventListenerDelegate>",R,W,N,V_delegate
service
setService:
T@"<CSLSRawButtonEventListenerService>",W,N,V_service
addUIProvider:forUITriggerName:englishUsage:
removeUIProvider:withUITriggerName:
_controller
requestUITriggerWithProvider:UITriggerName:withDictionary:withReason:withCompletion:
wrapperFromProvider:
initWithProvider:delegate:
_provider
initWithDelegate:machServiceName:
_remoteClient
_remoteService
initWithNullableMachServiceName:
requestUITriggerWithRegistration:UITriggerName:withDictionary:withReason:withCompletion:
initWithMachServiceName:
_registration
caseInsensitiveCompare:
initWithBundleID:interDelay:operations:
setInterDelay:
setOperations:
decodeFloatForKey:
interDelay
encodeFloat:forKey:
operations
parseStringOperations:
powerTestWithBundleID:interDelay:operations:
_interDelay
_operations
T@"NSString",&,N,V_bundleID
Td,N,V_interDelay
T@"NSArray",C,N,V_operations
initWithBundleID:reason:
take
taken
_taken
TB,R,N,V_taken
T@"NSString",R,N,V_bundleID
invalidateAssertion:
checkIn
handledButtonEventWithStatus:
registerForButtons:event:
unregisterForButtons:event:
setInstantButtonTapGesturesEnabled:
handleButtons:event:firstDownTime:lastUpTime:
_resendButtonHandlersFromCache
disableInstantButtonTaps
handlerCache
setHandlerCache:
_assertions
_handlerCache
T@"CSLSButtonListenerCache",&,V_handlerCache
T@"<CSLSButtonListenerClientInterface>",W,N,V_realClient
unsafe_invalidate
presentWithSettings:withReply:
cancelPrompt
internalQueue
setXpcConnection:
showPromptWithSettings:failureHandler:
passcodePromptWasDismissed:
passcodePromptDidBailForUserHasAlphanumericPasscode:
passcodePrompt:didProvidePasscode:
showDismissablePrompt:withFailureHandler:
setInternalQueue:
xpcConnection
_internalQueue
_xpcConnection
T@"<CSLSPasscodePromptDelegate>",W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
T@"NSXPCConnection",&,N,V_xpcConnection
connectType:completion:
setType:enabled:completion:
updateEnabled:
CSLSSystemStateXPCServerInterface
CSLSSystemStateXPCClientInterface
condition
setFirstValueReceived:
signal
wait
didUpdate
T@?,C,N
setCondition:
firstValueReceived
_firstValueReceived
_didUpdate
_condition
TB,N,V_enabled
T@"NSCondition",&,N,V_condition
TB,N,V_firstValueReceived
TQ,R,N,V_type
T@?,C,N,V_didUpdate
unpairWithDevice:shouldObliterate:operationHasBegun:
notePasscodeEntryForUnlockDidBegin
notePasscodeEntryForUnlockDidCancel
notePasscodeUnlockDidSucceedWithPasscode:
notePasscodeUnlockDidFailWithError:
requestClearBlockedState
isBlocked
model
setModel:
secureBackupHelper
setSecureBackupHelper:
suStashHelper
setSuStashHelper:
_model
_secureBackupHelper
_suStashHelper
T@"CSLSUserAuthenticationModel",&,N,V_model
T@"CSLSSecureBackupHelper",&,N,V_secureBackupHelper
T@"CSLSSoftwareUpdateStashHelper",&,N,V_suStashHelper
CSLSUITriggerServerExportedInterface
_invalidateConnectionFromServer
_reestablishTriggersWithServer
_connect
_createXPCService
listener:shouldAcceptNewConnection:
T@"<CSLSUITriggerRemoteClientServiceDelegate>",W,N
connectionToServer
setConnectionToServer:
connectionFromServer
setConnectionFromServer:
listener
setListener:
machServiceName
setMachServiceName:
_connectionToServer
_connectionFromServer
_listener
_machServiceName
_serviceRestartedNotificationToken
_activeTriggers
T@"NSXPCConnection",&,N,V_connectionToServer
T@"NSXPCConnection",&,N,V_connectionFromServer
T@"NSXPCListener",&,N,V_listener
T@"NSString",C,N,V_machServiceName
T@"<CSLSUITriggerRemoteClientServiceDelegate>",W,N,V_delegate
setPrepareForUnblankBlock:
_prepareForUnblankBlock
T@?,C,N,V_prepareForUnblankBlock
initWithSpecification:timeoutBlock:
initWithIdentifier:reason:flags:timeoutSeconds:timeoutBlock:
_releaseAssertionCompletion:logAction:logIfNotAsserted:
takeAssertionWithCompletion:
logAction:ofType:
releaseAssertionCompletion:
isAsserted
secondsSinceTaken
takeAssertion
releaseAssertion
timeoutBlock
_asserted
_assertionProvider
_ownedObject
_takenMachTime
_specification
_timeoutBlock
T@"CSLSBacklightAssertionSpecification",R,N,V_specification
T@?,R,N,V_timeoutBlock
asserted
TB,R,N,GisAsserted
initWithIdentifier:reason:flags:pid:timeoutSeconds:timeoutBlock:
ownedObject
setOwnedObject:
T@"NSObject<CSLSBacklightAssertionProvider>",W,N
T@"NSString",&,N
Ti,N
T@,&,N
initWithBacklightAssertion:
takeWithAssertion:
_backlightAssertion
takeAssertionWithIdentifier:reason:flags:timeoutSeconds:timeoutBlock:completion:
takeAssertionWithIdentifier:reason:flags:timeoutSeconds:timeoutBlock:
initWithReason:forDisplay:willPreventScreenOff:willPreventGestures:timeoutSeconds:timeoutBlock:
initWithReason:forDisplay:willPreventDim:willPrevenScreenOff:timeoutSeconds:timeoutBlock:
initWithReason:forDisplay:willPreventDim:willPreventScreenOff:willPreventGestures:timeoutSeconds:timeoutBlock:
tickle
display
willPreventDim
willPreventScreenOff
willPreventGestures
@16@0:8
v16@0:8
v24@0:8@?16
Q16@0:8
v24@0:8@16
B24@0:8@16
@"NSMutableSet"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
B16@0:8
v48@0:8@16@24q32@?40
v48@0:8@"NSString"16@"NSDictionary"24q32@?<v@?B@"NSString">40
v24@0:8@?<v@?@"NSDictionary">16
@"NSXPCConnection"
@20@0:8B16
@24@0:8@16
v20@0:8B16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v68@0:8@16@24@32Q40Q48B56@?60
v32@0:8@16@?24
v40@0:8@16@24@?32
v48@0:8@16@24Q32@?40
v44@0:8q16@24B32@?36
v68@0:8@"NSString"16@"NSString"24@"NSString"32Q40Q48B56@?<v@?>60
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v40@0:8@"NSString"16@"NSString"24@?<v@?>32
v48@0:8@"NSString"16@"NSString"24Q32@?<v@?>40
v24@0:8@?<v@?>16
v32@0:8@"NSString"16@?<v@?>24
v44@0:8q16@"NSString"24B32@?<v@?>36
v24@0:8@?<v@?@"NSArray">16
v28@0:8@?16B24
@"<CSLSThermalTrapXPCClientDelegate>"
@32@0:8@16@24
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@"CSLSCompanionConnectionState"
@"CSLSRadioConnectionState"
@"CSLSTelephonyConnectionState"
@"CSLSWifiConnectionState"
B32@0:8i16S20^@24
q16@0:8
f20@0:8i16
B32@0:8@16^@24
@?16@0:8
@"NSObject<OS_dispatch_queue>"
@"CSLSThermalTrapXPCClient"
@"<CSLSThermalTrapDelegate>"
v32@0:8Q16@?24
v32@0:8Q16@?<v@?@"NSError"@"NSString">24
@"NSMutableArray"
@44@0:8Q16@24B32B36B40
@"NSDate"
@32@0:8@16B24B28
@"NSString"
v32@0:8@"NSString"16@?<v@?@"CSLSApplicationInfo">24
v24@0:8@?<v@?B>16
@40@0:8@16@24@32
@"<CSLSSystemStateInterface>"
@"<CSLSWaterLockDelegate>"
@32@0:8q16@24
@24@0:8q16
B32@0:8@16q24
v32@0:8Q16@?<v@?>24
v24@0:8Q16
v32@0:8@16Q24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSHashTable"
v32@0:8B16B20@?24
v40@0:8B16B20q24@?32
v24@0:8q16
v28@0:8B16q20
v32@0:8B16B20@?<v@?@"NSError">24
v40@0:8B16B20q24@?<v@?@"NSError">32
@32@0:8@?16@?24
@52@0:8Q16d24B32q36d44
d16@0:8
v24@0:8d16
v60@0:8@16Q24d32B40q44d52
v52@0:8@16Q24d32B40d44
v52@0:8@16Q24d32B40q44
@"CSLSafeMutableDictionary"
@32@0:8Q16Q24
v40@0:8Q16Q24@32
v32@0:8Q16Q24
@"NSMutableDictionary"
v32@0:8@"CSLSDockAllowLaunchAssertion"16@?<v@?@"NSError">24
@24@0:8@?16
@"CSLSDockAllowLaunchAssertion"
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
v24@0:8@"CSLSSuspendSystemGestureAssertionConfiguration"16
v36@0:8:16@24B32
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSPointerArray"
@"CSLSConnectionStateXPCClient"
@"CSLSConnectionState"
Vv32@0:8@16@?24
Vv24@0:8@16
Vv32@0:8@"NSString"16@?<v@?B>24
Vv24@0:8@"NSString"16
v32@0:8@?16@?24
@"NSArray"
@32@0:8@16Q24
v28@0:8@16i24
v36@0:8@16i24@28
v28@0:8@"NSString"16i24
v36@0:8@"NSString"16i24@"NSString"28
v36@0:8@"NSString"16i24@"NSArray"28
@24@0:8Q16
@"CSLSAlertSuppressionToken"
@36@0:8@16@24B32
@44@0:8@16@24@32B40
@24@0:8@"NSObject<OS_xpc_object>"16
v24@0:8@"NSObject<OS_xpc_object>"16
@"NSDictionary"
v20@0:8i16
v28@0:8i16B20B24
v36@0:8i16B20B24@?28
v28@0:8i16r*20
v32@0:8i16r*20B28
v40@0:8i16@20B28r*32
v40@0:8i16d20r*28B36
v28@0:8i16@20
v36@0:8i16d20@28
v28@0:8i16@?20
@"CSLSSuspendSystemGestureAssertionConfiguration"
v32@0:8Q16@24
v24@0:8@"CSLSWakeGesture"16
v32@0:8Q16@"NSDate"24
v28@0:8@16B24
v32@0:8@16B24B28
@"CSLSConcurrentObserverStore"
v24@0:8B16B20
@32@0:8Q16@24
@"CSLSBinaryTransitionStateMachineConfiguration"
@"<CSLSBinaryTransitionStateMachineDelegate>"
Q32@0:8Q16Q24
v40@0:8Q16Q24Q32
C32@0:8Q16Q24
C16@0:8
v20@0:8C16
[16Q]
@"NSObject<OS_os_log>"
v32@0:8@"CSLSBinaryTransitionStateMachine"16Q24
v32@0:8@16@24
v32@0:8@"CSLSBackgroundTaskRequest"16@"NSString"24
v40@0:8@"CSLSBackgroundTaskRequest"16@"NSString"24@?<v@?@"CSLSBackgroundTaskRequest">32
v40@0:8@"CSLSBackgroundTaskRequest"16@"NSString"24@?<v@?@"CSLSBackgroundTaskRequest"@"NSError">32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSSet">24
v52@0:8@16Q24d32B40@?44
v60@0:8@16Q24d32B40Q44@?52
v52@0:8@"NSString"16Q24d32B40@?<v@?B@"NSError">44
v60@0:8@"NSString"16Q24d32B40Q44@?<v@?B@"NSError">52
v32@0:8@"NSString"16@?<v@?@"NSError">24
@"NSXPCInterface"16@0:8
@"NSObject<OS_os_log>"16@0:8
v28@0:8{os_unfair_lock_s=I}16@?20
@"CSLSPrivilegedBackgroundServiceConnection"
@"BSAction"
v32@0:8@"NSString"16@?<v@?B>24
Vv24@0:8@"CSLSModalAppServicePresentationOptions"16
@28@0:8I16@20
@64@0:8I16@20I28Q32Q40Q48Q56
v52@0:8I16Q20Q28Q36Q44
{?=Q{?=QQ}{?=QQ}B}16@0:8
{?="timestamp"Q"rusage"{rusage_info_v5="ri_uuid"[16C]"ri_user_time"Q"ri_system_time"Q"ri_pkg_idle_wkups"Q"ri_interrupt_wkups"Q"ri_pageins"Q"ri_wired_size"Q"ri_resident_size"Q"ri_phys_footprint"Q"ri_proc_start_abstime"Q"ri_proc_exit_abstime"Q"ri_child_user_time"Q"ri_child_system_time"Q"ri_child_pkg_idle_wkups"Q"ri_child_interrupt_wkups"Q"ri_child_pageins"Q"ri_child_elapsed_abstime"Q"ri_diskio_bytesread"Q"ri_diskio_byteswritten"Q"ri_cpu_time_qos_default"Q"ri_cpu_time_qos_maintenance"Q"ri_cpu_time_qos_background"Q"ri_cpu_time_qos_utility"Q"ri_cpu_time_qos_legacy"Q"ri_cpu_time_qos_user_initiated"Q"ri_cpu_time_qos_user_interactive"Q"ri_billed_system_time"Q"ri_serviced_system_time"Q"ri_logical_writes"Q"ri_lifetime_max_phys_footprint"Q"ri_instructions"Q"ri_cycles"Q"ri_billed_energy"Q"ri_serviced_energy"Q"ri_interval_max_phys_footprint"Q"ri_runnable_time"Q"ri_flags"Q}"threadInfo"{thread_basic_info="user_time"{time_value="seconds"i"microseconds"i}"system_time"{time_value="seconds"i"microseconds"i}"cpu_usage"i"policy"i"run_state"i"flags"i"suspend_count"i"sleep_time"i}"thread"^{_opaque_pthread_t}}
{?="wallclock
s"Q"processCPUProfile"{?="totalCPU
s"Q"userCPU
s"Q}"threadCPUProfile"{?="totalCPU
s"Q"userCPU
s"Q}"valid"B}
@"NSSet"
@24@0:8@"<CSLSBackgroundServiceDelegate>"16
@32@0:8@?<v@?>16@?<v@?@"NSError">24
@24@0:8@?<v@?@"NSError">16
@"<CSLSBackgroundServiceDelegate>"
v40@0:8@16q24@?32
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@"CSLSPowerTest"16
v32@0:8@"CSLSPowerTest"16@"NSError"24
@"NSObject<CSLSPowerTestDelegate>"
@"NPSDomainAccessor"
@"NPSManager"
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?BBB@"NSArray">16
v24@0:8@"NSDictionary"16
v24@0:8@"NSArray"16
@"<CSLSDetentClient>"
B32@0:8@16@24
@"FBSOpenApplicationService"
v28@0:8B16@?20
{_opaque_pthread_mutex_t=q[56c]}16@0:8
v80@0:8{_opaque_pthread_mutex_t=q[56c]}16
Vv24@0:8@?16
Vv24@0:8@?<v@?>16
v24@0:8@"BKSAlternateSystemApp"16
v28@0:8@"BKSAlternateSystemApp"16i24
v32@0:8@"BKSAlternateSystemApp"16@"NSError"24
@"BKSAlternateSystemApp"
@"NSOperationQueue"
@"CSLSLaunchAlternateSystemAppOperation"
@"NSObject<OS_os_activity>"
v40@0:8@16@?24@32
v20@0:8f16
B56@0:8@16@24q32@40Q48
@48@0:8@16q24@32Q40
B48@0:8@16q24@32Q40
@40@0:8q16@24Q32
B56@0:8@"BSSettings"16@"BSDescriptionBuilder"24q32@40Q48
@"NSString"32@0:8@"BSSettings"16Q24
@"NSString"48@0:8@"BSSettings"16q24@32Q40
B48@0:8@"BSDescriptionBuilder"16q24@32Q40
@"NSString"24@0:8Q16
@"NSString"40@0:8q16@24Q32
q24@0:8Q16
@"BSMutableSettings"
v32@0:8q16Q24
@"CSLSStateMachineState"
@"NRPairedDeviceRegistry"
@"NRDevice"
@40@0:8@16I24I28d32
I16@0:8
@40@0:8Q16Q24@?32
@"<CSLSButtonHandlerDelegate>"
v40@0:8Q16Q24@?32
v48@0:8Q16Q24@32@?40
v52@0:8@16@24B32@36@?44
v52@0:8@"NSUUID"16@"NSString"24B32@"NSError"36@?<v@?>44
v40@0:8@"CSLSSession"16@"NSError"24@?<v@?>32
v32@0:8q16@?24
v32@0:8@"CSLSSession"16@?<v@?@"NSError">24
v32@0:8@"CSLSSession"16@?<v@?@"NSDate"@"NSError">24
v40@0:8@"CSLSSession"16@"NSDictionary"24@?<v@?@"NSError">32
v48@0:8@"CSLSSession"16@"NSDate"24Q32@?<v@?@"NSError">40
v24@0:8@?<v@?@"NSSet"@"NSError">16
v32@0:8q16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?@"CSLSSession"@"NSError">16
v32@0:8@16q24
v68@0:8@16@24@32B40@44@52@?60
@"CSLSSessionServerConnection"
@"NSObject<OS_os_transaction>"
v32@0:8@?16@24
@"BSEventQueue"
@"BSEventQueueLock"
@"<CSLSSessionServerConnectionDelegate>"
v32@0:8q16@?<v@?@"NSError">24
@"<CSLSTheaterModeDelegate>"
@"<CSLSSystemStateInterface>"24@0:8Q16
@"NSMapTable"
@40@0:8{CGPoint=dd}16Q32
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
v28@0:8i16@?<v@?Q>20
Q20@0:8i16
@24@0:8@"<CSLSBacklightRequest>"16
@72@0:8B16@20Q28B36{CGPoint=dd}40Q56Q64
@"CSLLinkedListNode"
@"CSLLinkedListNode<CSLLinkedListNode><CSLLinkedListNodeEnumeration>"24@0:8@16
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"CSLLinkedListNode<CSLLinkedListNode><CSLLinkedListNodeEnumeration>"
@"<CSLLinkedListStorageAllocator>"
i16@0:8
@"CSLSConnectionStateObserver"
S16@0:8
v20@0:8S16
@32@0:8Q16@?24
@"<CSLSButtonTapAssertionClientInterface>"
@48@0:8@16@24@32d40
@56@0:8@16@24@32d40@48
@32@0:8@16q24
@40@0:8@16@24q32
B24@0:8q16
v28@0:8B16@20
@"<CSLSSessionDelegate>"
@"NSURL"
@"NSUUID"
v32@0:8@"CSLSSnapshotContext"16@"NSString"24
v40@0:8@"CSLSSnapshotContext"16@"NSString"24@?<v@?@"CSLSSnapshotContext">32
v32@0:8@"NSString"16@?<v@?@"CSLSSnapshotContext">24
v60@0:8@16Q24d32B40d44@?52
v60@0:8@"NSString"16Q24d32B40d44@?<v@?B@"NSError">52
Q24@0:8@16
v36@0:8@16B24@?28
v28@0:8B16@?<v@?>20
v36@0:8@"NSString"16B24@?<v@?>28
@24@0:8I16B20
v20@0:8I16
v40@0:8@16q24q32
v40@0:8@"NSString"16q24q32
v32@0:8@"NSString"16Q24
v40@0:8q16q24Q32
v28@0:8@"NSError"16B24
v32@0:8@"CSLSBacklightAssertionBase"16@?<v@?>24
v32@0:8@16I24B28
v48@0:8@16q24q32Q40
v32@0:8@"NSString"16I24B28
v32@0:8@"CSLSBacklightAssertionSpecification"16@"NSString"24
v40@0:8@"CSLSBacklightAssertionSpecification"16@"NSString"24@?<v@?>32
v28@0:8@"CSLSSensitiveUIMonitor"16B24
v48@0:8@16@24@32^v40
@"<CSLSSensitiveUIMonitoring>"
@"NSUserDefaults"
v36@0:8Q16B24@?28
v44@0:8Q16@24B32@?36
v36@0:8Q16B24@?<v@?>28
v44@0:8Q16@"NSString"24B32@?<v@?>36
v40@0:8@16@24Q32
@"IDSService"
@"CSLSStateMachine"
v32@0:8@"DNDStateService"16@"DNDStateUpdate"24
@"DNDStateService"
@"DNDModeConfigurationService"
B32@0:8@16^{__CFUUID=}24
v24@0:8^{__CFUUID=}16
B32@0:8@"NSString"16^{__CFUUID=}24
v44@0:8q16@?24@?32B40
^{__CFUUID=}
v48@0:8d16d24d32@?40
v48@0:8d16d24d32@?<v@?@"NSData"@"NSError">40
@"CSLSAppBacklightPrivacySettings"
Vv24@0:8@"NSData"16
@"CSLSButtonListener"
B32@0:8Q16Q24
@"<CSLSUserAuthenticationModelDelegate>"
@"CSLSBackgroundServiceConnection"
@"CSLSPrivilegedBackgroundPriorityStateCache"
v24@0:8@?<v@?@"CSLSOnWristState">16
v24@0:8@?<v@?B@"NSError">16
v24@0:8@"CSLSOnWristState"16
@"CSLSOnWristState"
@"<CSLSOnWristMonitorDelegate>"
@"CSLOnWristClientExportedObject"
@"<CSLOnWristClientExportedInterface>"
v24@0:8@"<CSLObserver>"16
@"CSLWeakLinkedList"
Q32@0:8@16@24
@"NSDictionary"16@0:8
v40@0:8@16@24@32
@"<CSLSUITriggerRemoteClientServiceProtocol>"
v24@0:8@"CSLSConnectionState"16
v24@0:8@"CSLSConnectionStateOverrides"16
v24@0:8@?<v@?@"CSLSConnectionState"@"CSLSConnectionStateOverrides">16
@"CSLSConnectionStateOverrider"
@"CSLSConnectionStateOverrides"
v36@0:8q16B24@?28
v40@0:8@16:24@32
v32@0:8:16@24
@"CSLSDetentServiceConnection"
@"AOPHapticsController"
@"<CSLSRawButtonEventListenerDelegate>"
@"<CSLSRawButtonEventListenerService>"
v40@0:8@"<CSLSUIProvider>"16@"NSString"24@"NSString"32
v32@0:8@"<CSLSUIProvider>"16@"NSString"24
@"<CSLSUITriggerControllerDelegate>"
@"<CSLSUIProvider>"
@"<CSLSUIProviderRemoteWrapperDelegate>"
@"CSLSUITriggerRemoteClient"
@"CSLSUITriggerRemoteService"
v56@0:8@16@24@32q40@?48
v56@0:8@"<CSLSUIProvider>"16@"NSString"24@"NSDictionary"32q40@?<v@?B@"NSString">48
@"<CSLSUITriggerRegistration>"
@40@0:8@16d24@32
@"<CSLWeakTrackerDelegate>"
@"<CSLSDisableInstantButtonTapAssertionDelegate>"
v48@0:8Q16Q24Q32Q40
v24@0:8@"CSLSDisableInstantButtonTapAssertion"16
@"CSLSButtonListenerCache"
@"<CSLSButtonListenerClientInterface>"
v32@0:8@"CSLSPasscodePromptSettings"16@?<v@?@"NSString"@"NSNumber"@"NSNumber"@"NSError">24
@"<CSLSPasscodePromptDelegate>"
v32@0:8Q16@?<v@?B>24
v36@0:8Q16B24@?<v@?B@"NSError">28
v28@0:8B16@?<v@?B@"NSError">20
@?<v@?B>16@0:8
@"NSCondition"
v24@0:8@"CSLSUserAuthenticationModel"16
v24@0:8@"CSLSMobileKeyBag"16
v32@0:8@"CSLSMobileKeyBag"16@"CSLSMobileKeyBagState"24
@"CSLSUserAuthenticationModel"
@"CSLSSecureBackupHelper"
@"CSLSSoftwareUpdateStashHelper"
v32@0:8@"NSString"16@"NSString"24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"<CSLSUITriggerRemoteClientServiceDelegate>"16@0:8
v24@0:8@"<CSLSUITriggerRemoteClientServiceDelegate>"16
@"NSXPCListener"
@"<CSLSUITriggerRemoteClientServiceDelegate>"
@48@0:8@16I24I28d32@?40
@32@0:8@16@?24
v36@0:8@?16r*24B32
@"NSObject<CSLSBacklightAssertionProvider>"
@"CSLSBacklightAssertionSpecification"
@52@0:8@16I24I28i32d36@?44
v28@0:8r*16C24
@"CSLSBacklightAssertionBase"
@56@0:8@16I24I28d32@?40@?48
@56@0:8@16@24B32B36d40@?48
@60@0:8@16@24B32B36B40d44@?52
@(#)PROGRAM:CarouselServices  PROJECT:Carousel-1110.4.57
 &,28>DJPV\bhnt
MbP?
(knN
 #&)
b!$'*-0369<?BEHKNQTWZ]`
v8@?0
Left
Bottom
Right
None
com.apple.carousel.uitrigger
v16@?0@"NSError"8
PhoneOnly
AppPrivateDuringAOTForApp
AppPrivateDuringAOTForNotification
B8@?0
supportsAOT
chorded
crown
button
power
go_home
arrow_up
arrow_down
rotate2wake_up
rotate2wake_down
siri
swipe_left
swipe_right
swipe_up
swipe_down
unknown
held
heldAndReleased
longHeld
tapped
doubleTapped
tripleTapped
quadOrMoreTapped
down
com.apple.carousel.notificationservice
v16@?0@"<CSLSNotificationServiceServerExportedInterface>"8
com.apple.Carousel.thermaltrap
enable
requestState
v16@?0@"NSObject<OS_xpc_object>"8
companionState
radioState
telephonyState
wifiState
@"<NSObject>"8@?0
HAEmbeddedHapticsLoaderServiceIsAvailableNotification
HAEmbeddedHapticsLoaderSimulated
service not available
AOPHapticsGainKey
AOPHapticsPreSilenceDurationKey
AOPHapticsOutputTypeKey
AOPHapticsSlotIndexKey
AOPHapticsActionKey
AOPHapticsPriorityKey
AOPHapticsRequestTimestampKey
CSLSSimulatorHaptics
not activated
not implemented
B24@?0@"LSApplicationExtensionRecord"8^B16
com.apple.watchkit
LSApplicationRecord
Unable to find class %s
/System/Library/Frameworks/CoreServices.framework/CoreServices
/System/Library/Frameworks/CoreServices.framework/Contents/MacOS/CoreServices
pairedDeviceNearby
pairedDeviceConnected
pairedDeviceCloudConnected
com.apple.carousel.screenshot
type
time
will
could
HH:mm:ss.SSS
en_US_POSIX
%@ : %s (%@) %s %s %s
wake
sleep
wasOn
wasOff
willChange
willNotChange
couldChange
couldNotChange
applicationBundleID
supportsAutoLaunch
isTracked
com.apple.Carousel.CSLSApplicationServiceInfo
v12@?0B8
v16@?0@"CSLSApplicationInfo"8
<unknown>
com.apple.CarouselServices.SessionErrorDomain
invalid arguments
only single session allowed
session not started
connection lost
connection invalidated
session timed out
not eligible
client not approved
client can not schedule sessions
user dismissed session
unrecognized type
exceeded cpu limits
app not in required app state
client not entitled and bundleIDs don't match
app upgraded
app removed
operation not permitted
sessions are suppressed
an internal error has occurred
session restart is not allowed
airplaneModeEnabled
bluetoothEnabled
telephonyEnabled
com.apple.carousel.unblankingsynchronization
CSLSBulletinContextCoalescingSentinelIdentifier
CSLSBulletinContextPendingAlertingForSentinel
com.apple.carousel.carouselecomoded
v32@?0@8@16^B24
%@ %d entries
com.apple.Carousel.CSLSDockAllowLaunchAssertionService
CSLSPrivilegedBackgroundPriorityUnknown
CSLSPrivilegedBackgroundPriorityUtility
CSLSPrivilegedBackgroundPriorityDefault
CSLSPrivilegedBackgroundPriorityUserInitiated
utility
default
user
kIOSSHLOpenApplicationOptionLaunchIntentBackgroundUtility
kIOSSHLOpenApplicationOptionLaunchIntentForegroundComplication
kIOSSHLOpenApplicationOptionLaunchIntentForegroundSupergreenComplication
kIOSSHLOpenApplicationOptionLaunchIntentForegroundRemoteWorkout
CSLOpenApplicationOptionLaunchNonAnimated
CSLSOpenApplicationOptionPreventAlertDismissal
CSLOpenApplicationOptionForClockKit
CSLSOpenApplicationOptionAllowSuspendedLaunchBeforeFirstUnlock
CSLSOpenApplicationOptionTerminateRunningProcess
v32@?0@"NSString"8@"CSLSSuspendSystemGestureAssertionConfiguration"16^B24
v16@?0@8
com.apple.Carousel.statusOverlayServer
com.apple.Carousel.statusOverlay
CSLStatusOverlayAssertionQueue
com.apple.dictation.assertion
com.apple.camera.assertion
com.apple.passbook.assertion
com.apple.mediaplayback.assertion
com.apple.hummingbird.assertion
com.apple.scribble.assertion
com.apple.tincan.assertion
com.apple.cinnamon.assertion
com.apple.heart-rate.assertion
com.apple.waterlock.assertion
com.apple.scandium.assertion
v32@?0@"NSString"8Q16^B24
v24@?0@"CSLSAlertSuppressionToken"8^B16
com.apple.Carousel.alertSuppression
kCSLSSnapshotcontext_StaleDate
kCSLSSnapshotcontext_UUID
kCSLSSnapshotContext_UserInfo
kCSLSSnapshotContext_AtGlanceableUI
kCSLSSnapshotContext_SnapshotContext
userInfo
staleDate
uuid
atGlanceableUI
<nil title>
no descriptive state data or state data is not in property list format, please file a radar, description = %@
Not in background, cannot perform background request
com.apple.Carousel.backgroundrequest
API not implemented by app
CSLSSnapshotReasonUnknown
CSLSSnapshotReasonAppRequested
CSLSSnapshotReasonNotification
CSLSSnapshotReasonReturnToPrimaryUI
CSLSSnapshotReasonComplicationUpdate
CSLSSnapshotReasonAppBackgrounded
CSLSSnapshotReasonPrelaunchNotification
CSLSSnapshotReasonPrelaunch
CSLSSnapshotReasonTest
CSLSSnapshotReasonDevTools
Unknown
AppRequest
Notification
PrimaryUI
Complication
Background
NotificationPrelaunch
Prelaunch
Test
DevTools
ReturnToAppTimeout
SessionCapable
AlwaysReturnToAppInSession
d8@?0
com.apple.Carousel.carouseltool
csl_messageID
csl_flag1
csl_flag2
csl_flag3
csl_date
csl_string
csl_time1
csl_time2
csl_options
ApplicationLaunch
IdleScreenOff
UserActivity
UnlockingUI
UnlockingStartUp
UnlockingWakeGesture
UnlockingPowerButtonPressed
UnlockingCrownPressed
NightstandWakeGesture
WristRaiseRejected
NormalBlanking
WakeToAppBlanking
UnlockingLeftAndRightButtonPressed
UnlockingLisaButton1Pressed
SoftWake
SystemLockTouchlock
SiriButton
UnlockingBacklightStateWillChange
LockingUI
LockingCoverGesture
LockingPowerButtonPressed
LockingSleepGesture
LockingSyncDeviceStateChanged
LockingBacklightStateChanged
LockPPTTest
ACPowerChangedUndim
UnsupportedChargingAccessoryUndim
SpringboardServicesUndim
StealthModeEnabled
StealthModeDisabled
WaterLockIdle
OnForPPTTest
OnForDictation
OnForAVPlayback
UnlockingCrownSwipedUp
UnlockingCrownSwipedDown
CarouselTool
LockingCommandLineTool
UnlockingCommandLineTool
OnForAlertPresentation
SceneIdleTimerDisabled
StartUpScreenOn
StartUpDelayedIdleAssertion
UserDefaultsDisableAutoOffAssertion
InternalBookkeeping
LisaEventAssertion
LanguageChanged
UnlockingByRemoteSource
Unpairing
LauncherSettingUpdateAssertion
UnlockingWakeOnTouchGesture
Docked
LanguageChangeFromSetupApp
LockingCrownSwiped
offWrist
sleepMode
theaterMode
sceneDisablesWristLowerGesture
walkieTalkie
swipeLeft
swipeRight
swipeUp
swipeDown
alwaysOnSwipesAsTapToWake
configChanged
idleTimerServices
systemLockInteractionLock
longPress
disabledByUI
waterEjection
HomeCameraStream
HomeWaitForIdle
HomeAnnouncePlayback
HomeAnnounceRecording
PendingNotification
BlurIsActiveAlwaysOnProvider
Accessibility
GenericExternalReason
WatchFaceExtension
Unknown-%u
bottom
both
com.apple.nano
viewOnWakeDisabled
OnWakeTimeoutSeconds
AllowReturnToAppUntilCrownPress
com.apple.carousel.wakegesturemonitor
v12@?0i8
v16@?0@"<CSLSWakeGestureObserver>"8
Cannot perform reentrant update to state on %@
%@ cannot transition from %@ to %@
Should not have intermediate transition flag for transition from %@ to %@
(unknown)
inactive
activating
active
deactivating
q8@?0
Cannot have intermediate transition from %@ to %@
allow
deny
performIntermediateTransition
logError
raiseException
com.apple.Carousel.CSLSBackgroundTaskRequestService
v24@?0@"CSLSBackgroundTaskRequest"8@"NSError"16
%@~%@
v20@?0B8@"NSError"12
com.apple.Carousel.CSLSDockStatusService
SBTestingConfigureNextVoiceRecognitionAudioInputPathsNotification
SBTestingConfigureNextAssistantRecognitionStrings
CSLSUserNotificationTint
CSLSUserNotificationAlertServiceName
CSLSUserNotificationNeverDeny
CSLSUserNotificationBypassDND
CSLSUserNotificationSystemSoundID
CSLSUserNotificationToneLibraryAlertType
CSLSUserNotificationToneLibraryAlertTopic
CSLSUserNotificationHeaderImagePath
CSLSUserNotificationHeaderImageAssetCatalogPathKey
CSLSUserNotificationHeaderImageAssetCatalogImageKey
CSLSUserNotificationDismissForReplyPortInvalidation
CSLSUserNotificationExtensionIdentifierKey
CSLSUserNotificationExtensionItemsKey
%02x%02x%02x
com.apple.Carousel.activatingUIAssertion
kCSLActivatingUIAssertionMessageTypeKey
kCSLSActivatingUIAssertionBundleIDKey
kCSLSActivatingUIAssertionUUIDKey
kCSLSActivatingUIAssertionBoolResultKey
Passcode Lock
Water Lock
School Mode
Sleep Lock
Theater Mode
Tour Mode
INVALID
v32@?0@"NSString"8@"CSLSModalAppServicePresentationOptions"16^B24
Cannot start modal app without bundleID: %@
(INVALID) 
bundleIdentifier
presentationContext
animated
suppressesLaunchUI
wantsAlertSuppresion
allowedAlertServices
wifiActive
signalStrengthBars
associatedToIOSHotspot
currentNetworkName
Q8@?0
@"NSString"8@?0
com.apple.carousel.cslsduetlaunchtestingservice
com.apple.carousel.powertestservice
com.apple.Carousel
ReturnToAppSettings
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSString"8@"CSLSReturnToAppSettings"16^B24
v16@?0@"<CSLSReturnToAppSettingsObserver>"8
com.apple.Carousel.CSLSDetentService
v28@?0B8B12B16@"NSArray"20
CSLSDuetActivationServiceReasons
CSLSDuetActivationAllowlistedKey
CSLSDuetActivationSnapshotItemsKey
v24@?0@"BSProcessHandle"8@"NSError"16
autoEnd
duration
schedule
WKBackgroundModes
alarm
physical-therapy
self-care
mindfulness
com.apple.developer.watchkit.extended-runtime-session
com.apple.developer.watchkit.extended-runtime-session.health
com.apple.developer.watchkit.extended-runtime-session.schedule
com.apple.developer.watchkit.extended-runtime-session.runinbackground
com.apple.developer.watchkit.extended-runtime-session.rununtilcrownout
com.apple.developer.watchkit.extended-runtime-session.timelimit
unlimited
com.apple.ReBoard
CSLSMigrationAppOperationQueue
CSLSMigrationAppQueue
v16@?0@"CSLSMigrationAppBlockOperation"8
isExecuting
isFinished
v16@?0@"BSActionResponse"8
com.apple.carouselservices.mkb
com.apple.carousel.keybag.observers
com.apple.carousel.keybag
v16@?0@"CSLSMobileKeyBagState"8
connectionStateOverridesSettings
wifi-signalStrengthBars
supportsLTE
simActive
singalStrengthBars
maxSignalStrengthBars
serviceState
flag
object
<invalid data type>
v32@?0Q8q16^B24
v32@?0Q8@16^B24
settings
; currentState: %@>
State Machine
timestamp
date
forceOnWristEnabled
deviceOnCharger
wristDetectDisabled
sensorOnWristStateKey
confidence
effectiveWristState
sensorOnWristState
none
high
iphone.slash
xmark
iphone.homebutton.slash
v16@?0@"<CSLSDisconnectedAssetNameObserver>"8
identifier
reason
flags
timeout
<%@:%p %@ reason:%d [0x%x]%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s timeout:%.2f>
 willKeepScreenOn
 willForceScreenOn
 willDisableWristLowerGestures
 willDisableWristRaiseGestures
 shouldEnableCoverGesture
 shouldIgnoreCoverGesture
 willDisableLongCoverGesture
 shouldRestartUserIdleTimer
 isUserInitiated
 doesNotTimeoutWhenDisplayOff
 clearsUserHasInteracted
 willPreventUnblank
 shouldBlankScreen
 willPreventAOT
 willPreventAlwaysOnGestures
 shouldTreatAlwaysOnSwipesAsTapToWake
 shouldDisableAlwaysOnTapPosition
 isTouchlock
 disableCommitMeasurement
com.apple.carousel.complicationservice
B24@?0Q8Q16
Q24@?0Q8Q16
com.apple.carousel.modalappservice
CSLSSessionNavigationHint
v32@?0@"NSString"8@"<CSLSSessionServiceObserver>"16^B24
v24@?0@"<CSLSSessionServiceObserver>"8^B16
v32@?0@"NSNumber"8@"NSMutableSet"16^B24
v32@?0@"NSUUID"8@"CSLSSession"16^B24
restartSession
v32@?0@"<CSLSSessionServiceXPCInterface>"8@"NSError"16@?<v@?>24
v24@?0@"NSDate"8@"NSError"16
startSession cannot be called on a scheduled session
startSession
endSession
scheduleSession
scheduleSession cannot be called on session
cancelScheduledSession
v32@?0@"CSLSSession"8Q16^B24
fetchAllRunningSessionsOfType
v24@?0@"NSArray"8@"NSError"16
existingRunningSessionsForBundleID
existingScheduledSessionsForBundleID
_addSessionServiceObserver
Attempted to add a second session observer from the same process. this isn't supported
removeSessionServiceObserver
_addSessionTypeObserver
_stopObservingSessionType
fetchStickyCapableApps
v24@?0@"NSSet"8@"NSError"16
v32@?0@"<CSLSSessionServiceObserver>"8Q16^B24
%@-activeSession
previously unknown
known scheduled
LSBundleRecord
interruption
invalidation
startConnection
CSLSBulletinContextIsRemoteNotification
SendAll
<CSLSAlwaysOnTapThroughEvent:%p x:%.0lf y:%.0lf timestamp:%llx (%lld ms ago)>
com.apple.Carousel.URLSessionPolicy
v16@?0Q8
com.apple.private.alloy.screenshotter
dismissable
displaysWhileLocked
transitionStyle
justPinEntryIsSimplePassCode
justPinEntryCodeLength
justPinEntryMinCodeLength
justPinEntryMaxCodeLength
justPinEntryCodeTitle
justPinEntry
WristRaise
WristLower
ButtonPress
CrownRotation
DisplayTap
DisplaySwipe
Application
Assertion
LongPress
Down
operation
source
position
direction
secondsAgo
isOn
hasPos
CSLLinkedList created
Please use a subclass instead
CSLSConnectionStatusConnectedNotification
CSLSConnectionStatusStartup
CSLSConnectionStatusDisconnected
CSLSConnectionStatusConnected
CSLSConnectionStatusConnectedWiFi
CSLSConnectionStatusConnectedLTE
CSLSConnectionStatusDisconnectedCloudReachable
CSLSConnectionStatusDisconnectedLTE
Registering
Registered
Emergency only
Not registered
com.apple.carousel.connectionstatusservice
v16@?0@"CSLSConnectionState"8
v16@?0@"<CSLSConnectionStatusObserver>"8
kCSLSDetent_Type
kCSLSDetent_AudioSlot
kCSLSDetent_AudioGain
kCSLSDetent_StrongAudioGain
kCSLSDetent_HapticSlot
kCSLSDetent_HapticGain
kCSLSDetent_StrongHapticGain
v32@?0@"NSNumber"8Q16^B24
kCSLSDetent_Detent
audioSlot
audioGain
strongAudioGain
hapticSlot
hapticGain
strongHapticGain
com.apple.Carousel.ButtonTapAssertion
kCSLSBackgroundTaskRequest_PreferredDate
kCSLSBackgroundTaskRequest_UserString
kCSLSBackgroundTaskRequest_UUID
kCSLSBackgroundTaskRequest_Leeway
kCSLSBackgroundTaskRequest_SchedulingOptions
preferredDate
persist
leeway
schedulingOptions
userString
bundleID
navigationType
sessionID
running
expirationDate
startDate
lastStartWasScheduled
remote
errorCode
Generated-%@
now playing
workout
recording
timer
stopwatch
directions
remote control
phone call
tin can
entitled health
physical therapy
self care
scheduled
stream init
entitlement
fallDetection
other
meditation
v32@?0@"NSNumber"8@"NSString"16^B24
LSApplicationExtensionRecord
LSPlugInKitProxy
LSApplicationProxy
SecTaskCreateFromSelf
/System/Library/Frameworks/Security.framework/Security
/System/Library/Frameworks/Security.framework/Contents/MacOS/Security
SecTaskCreateWithAuditToken
SecTaskCopySigningIdentifier
SecTaskCopyValueForEntitlement
com.apple.carousel.snapshotservice
v16@?0@"CSLSSnapshotContext"8
CSLSUserNotificationsUserInfoCoalescingSentinelIdentifierKey
CSLSUserNotificationsUserInfoPendingAlertingForSentinelKey
com.apple.carousel.notificationcenterservice
com.apple.carousel.buddyservices
com.apple.reboard
kCSLSUserActivityAfterWake
com.apple.Carousel.appLaunchSuppression
com.apple.carousel.launchsupressaccess
kCSLSMainDisplayBacklight
com.apple.carousel.backlightxpc
cslShouldCrash
v32@?0@"NSString"8@"_CSLSBacklightOnRequest"16^B24
v32@?0@"NSString"8@"_CSLSBackLightAssertionContainer"16^B24
backlight xpc request failed: %@
assertionID
edge
ignoresForegroundStatus
Hunter
Jupiter
BeforeJupiterRC
49BD7609-9BBF-467B-8448-FFA7DD016D94
EAA0B0A3-5289-469A-97E3-8CD4EFDA06DA
36D83DE2-6804-4FBB-891D-1FBCAAF8A6D7
InternalTest
com.apple.system.prefs
sensitiveUIVersion
sensitive UI has changed, enabled %@ for %@, overriding and not exiting by request %@
sensitive UI has changed, enabled %@ for %@, exiting by default %@
cannot pass a nil delegate to CSLSSensitiveUIMonitor from within this process
com.apple.carousel.storedemosupportxpc
com.apple.carousel.navigationservice
No budget or no remaining budget, cannot snapshot
com.apple.Carousel.snapshotservice
In foreground, cannot perform background snapshot
App is already snapshotting
NanoPhotosCore
LocalLibrary
IDSService
/System/Library/PrivateFrameworks/IDS.framework/IDS
/System/Library/PrivateFrameworks/IDS.framework/Contents/MacOS/IDS
IDSSendMessageOptionTimeoutKey
IDSSendMessageOptionBypassDuetKey
IDSDefaultPairedDevice
/System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation
/System/Library/PrivateFrameworks/IDSFoundation.framework/Contents/MacOS/IDSFoundation
PHPhotoLibrary
/System/Library/Frameworks/Photos.framework/Photos
/System/Library/Frameworks/Photos.framework/Contents/MacOS/Photos
PHAssetCreationRequest
com.apple.Carousel.deviceOrientation
message
setInvertUI
invertUI
com.apple.nano.invertUIChangedNotification
CSLSDeviceOrientationInvertedDidChangeNotification
com.apple.nano.wristOrientationChangedNotification
CSLSDeviceOrientationWristOrientationDidChangeNotification
wornOnRightArm
moon.fill
com.apple.CSLSDNDModeAssetNameProvider.queue
v16@?0@"<CSLSDNDModeAssetNameObserver>"8
v32@?0@"NSString"8@"NSMutableSet"16^B24
v24@?0@"NSString"8^B16
v32@?0@"NSString"8@"NSSet"16^B24
com.apple.Carousel.notifications
bb_pipeline
accessibility
action_metrics
alerts
analytics
application_install
app_event
app_sessions
app_switcher
ariadne
background_refresh
backlight
battery
bedtime
brightness
budget
cache_delete
clock
connection_status
control_center
data_migration
demo_mode
developer
detents
diagnostics
dock
duet_metering
eclipse
eco_mode
flipbook
fluidui
gesture
haptic
icon
icon_field
midnight_timer
migration_app
notification_center
notification_management
notification_alerting
now_playing
passcode
preboard
prelaunch
process_assertions
qlll
responder
scene_alerts
scene_presentation
school_mode
screenshot
scroll_center
sessions
shutdown
snapshot
startup
statusbar
systemstate
testing
thermal
transaction
uitrigger
usage_metering
user_idle
view_service
xpc_barrier
wake_gesture
waterlock
watchkit
workspace
com.apple.private.pairedunlock.userAuthentication
com.apple.private.authentication.mkb
com.apple.carousel.home-screen
com.apple.carousel.app-switcher
com.apple.carousel.clock
com.apple.carousel.alert
alertIdentifier
com.apple.Carousel.AppViewImageService
v24@?0@"NSData"8@"NSError"16
no connection
AppBacklightPrivacySettings
v32@?0@"NSString"8@"CSLSAppBacklightPrivacySettings"16^B24
-[CSLSAppBacklightPrivacySettingsModel saveAppSettings]
com.apple.Carousel.AllApps
v16@?0@"<CSLSAppBacklightPrivacySettingsObserver>"8
CSLSFormatTimeIntervalCacheInvalidateNotification
HH%@
%1$@
%2$@
%3$@
%4$@
HHmm
HHmmssSS
HHmmss
mmssSS
mmss
CSLSUserAuthenticationQueue
com.apple.Carousel.eligibilityservice
com.apple.carousel.uitriggerserver
com.apple.carousel.uitriggerserverrestarted
CSLSCarouselDidLaunchNotification
CSLSCarouselLaunchDidHideLogoNotification
CSLSApplicationStateRestoredNotification
com.apple.carousel.appstatsservice
Activation FG
Activation BG
Activation Forecast
Exit
Snap Requested
Snap Taken
Snap Fail
Snap Scheduled
Return To Primary UI
Background Fetch
BAR Fail
Crash
Duet Forecast
From Complication
From Supergreen Complication
From Glance
From Launcher
From Notification
Jetsam
Last Used
Open URL
Siri
Sticky
Idle Navigation
Already In Progress
No Scene
No App
App Requested
Fulfilling Request
App Backgrounded
System Snapshot
Remote Workout
Return to Primary UI
DemoMode
Setup
Walltime
SystemLoad
BackgroundLaunch
Signal
From dock
Date: %@, type: %@, reason: %lu
Launch
Resume
Type: %@, favorite: %s, count: %lu
Memory: %lu, events: %@, transitions: %@
v16@?0@"NSDictionary"8
v32@?0@"NSString"8@"CSLSPrivilegedBackgroundPriorityState"16^B24
com.apple.carousel.sessionservice
com.apple.Carousel.wristmonitor
com.apple.Carousel.wristStateChanged
CSLOnWristStateOff
CSLOnWristStateOn
CSLOnWristStateUnknown
com.apple.carousel.onwristmonitor.%p
v16@?0@"CSLSOnWristState"8
Cannot set queue after monitor has been activated.
kCSLSWristDetectionDisabledChangedNotification
kCSLSSnapshotScheduleItem_Date
kCSLSSnapshotScheduleItem_UserInfo
kCSLSSnapshotScheduleItem_UUID
kCSLSSnapshotScheduleItem_SystemScheduled
kCSLSSnapshotScheduleItem_ReturnToPrimaryUI
kCSLSSnapshotScheduleItem_Freebee
kCSLSSnapshotScheduleItem_Reason
systemScheduled
returnToPrimaryUI
scheduleFreebee
CSLSDuetActivationReasonUnspecified
CSLSDuetActivationReasonNSURLSession
CSLSDuetActivationReasonWatchConnectivity
CSLSDuetActivationReasonDock
CSLSDuetActivationReasonComplication
CSLSDuetActivationReasonSnapshot
CSLSDuetActivationReasonSignificantLocationChange
CSLSDuetActivationReasonRelevantActions
CSLSDuetActivationReasonIntentDidRun
CSLSDuetActivationReasonPrelaunch
CSLSDuetActivationReasonHealthKitQuery
payload
UIApplicationLaunchOptionsURLSessionKey
com.apple.Carousel.CSLSNightstandSuspensionService
no service
searching
has service
emergency only
com.apple.Carousel.CSLSUITriggerService
v20@?0B8@"NSString"12
UI provider not found
v24@?0@"CSLSConnectionState"8@"CSLSConnectionStateOverrides"16
weakCount
standardCount
strongCount
totalCount
rotationCount
durationEnabledMS
minorDetentsEnabled
V9pLLbPQhyb75bbdTioZVw
%@-callout
%@-metrics
CSLSDetentService
no detent for type
v16@?0@"<CSLSDetentPreferencesObserver>"8
boff
state
countdown
lockState
isEffectivelyLocked
permanentlyBlocked
recoveryRequired
recoveryPossible
shouldWipe
backOffTime
failedAttemptCount
escrowCount
Unlocked
Locked
Locking
Disabled
UnlockInProgress
InGracePeriod
InAssertDelay
InBioUnlock
com.apple.carousel.ecomodeshutdownxpc
kCSLSEcoModeUserShutdownKey
kCSLSEcoModeThermalKey
v16@?0@"NSString"8
kCSLSUIProviderRemoteWrapperAssociatedProviderKey
CSLSPowerTestLaunchApp
CSLSPowerTestSnapshot
CSLSPowerTestInterOperationDelay
CSLSPowerTestUnknown
launch
delay
kCSLPowerTestBundleID
kCSLPowerTestInterOperationDelay
kCSLPowerTestOperations
%@ bundleID = %@, interDelay = %@, number of operations = %@, firstOperation = %@
kCSLSDockAllowLaunchAssertion_BundleID
kCSLSDockAllowLaunchAssertion_Reason
com.apple.Carousel.buttonlistener
com.apple.carousel.button-listener
v40@?0Q8Q16@?<Q@?QQQQ>24^B32
Q40@?0Q8Q16Q24Q32
CSLSPasscodePromptErrorDomain
com.apple.Carousel.passcodelistener
com.apple.carousel.request-passcode
com.apple.Carousel.passcode.%p
v40@?0@"NSString"8@"NSNumber"16@"NSNumber"24@"NSError"32
com.apple.Carousel.contextuallock
InLockout
CSLSUserAuthenticationClientBlockedStateChangedNotification
v32@?0@"NSString"8@"NSString"16^B24
com.apple.Carousel.suspendSystemGestureAssertion
kCSLSSuspendSystemGestureAssertionMessageTypeKey
kCSLSSuspendSystemGestureAssertionPIDKey
kCSLSSuspendSystemGestureAssertionIDKey
kCSLSSuspendSystemGestureAssertionEdgesKey
release assertion (dealloc)
nil backlight assertion provider - assertion will fail to operate!!!
release assertion
release assertion (not asserted)
%@:%@ %@ pid:%d asserted:%u %.2lf seconds ago
Returning connected due to paired device being nearby
Paired device is connected or cloud connected
Returning connected wifi due to internet being detected on wifi route
Returning connected lte due to internet being detected on cellular route
Cannot reach paired device
Returning disconnected cloud reachable due to internet being detected on wifi route
Returning disconnected lte due to internet being detected on cellular route
Returning disconnected
CSLSUITriggerRemoteService interruptionHandler called
CSLSUITriggerRemoteService invalidationHandler called
sending request for %@ with %@
Error %@ sending carouseluitrigger request
%{public}@ connection interrupted, will retry
Notification service connection error: %@
%@: connection interrupted
%@: connection invalidated
CSLSScreenshotter takeScreenshotWithOptions
cannot take screenshot %@
%@: service %@ invalidated
%@: service %@ interrupted
%@: service %@ connected
%@: service %@ could not connect
%@ asynchronous remote proxy failed with error %@
%@ synchronous remote proxy failed with error %@
applicationInfoForApplicationIdentifier:%@ connection %@
applicationInfoForApplicationIdentifier returned %@
########## DBG_CODE: (%d)
Error establishing %@ connection: %@
########## DBG_CODE: (%d) [%lld, %lld, %lld, %lld]
add unblankingSychronizer:%p pendingUnblankID:%u (%u)
remove unblankingSychronizer:%p pendingUnblankID:%u (%u)
unblankingSychronizer:%p readyForUnblank unblankID:%u pending:%{BOOL}u(%u), pendingUnblankID:%u
unblankingSynchronization prepareForUnblank unblankID:%u still pending(%u), new unblankID:%u
unblankingSynchronization prepareForUnblankBlock nil unblankID:%u synchronizer:%@
unblankingSynchronization synchronizer not enabled unblankID:%u synchronizer:%@
unblankingSynchronization unblankTimedOut unblankID:%u still pending(%u), local pendingUnblankID:%u
%@: service %@ became invalid
%@ could not communicate with server %@
CSLSDockAllowLaunchAssertionConnection takeDockLaunchAssertion
takeDockLaunchAssertion encountered error %@
CSLSDockAllowLaunchAssertionConnection releaseDockLaunchAssertion
releaseDockLaunchAssertion encountered error %@
CSLSDockAllowLaunchAssertionConnection connect
connected
%{public}@ encountered error %{public}@
%{public}@ interrupted, retrying
connection interrupted
CSLSAlertSuppressionAssertion requested by process pid=%d
Error activating alert suppression buddy assertion: %@
Error activating alert suppression assertion for %@: %@
Error activating alert suppression assertion: %@
Error deactivating alert suppression assertion: %@
CSLSAlertSuppressionAssertion released by process pid=%d
userInfo length (%@) is greater than allowed length (%@)
setting returnToAppTimeout to %d
_hasCustomReturnToAppTimeout = %{BOOL}u
BacklightChangedReason not found for %u
__canControlReturnToAppUntilCrownPress = %{BOOL}u, allowReturnToAppUntilCrownPress = %{BOOL}u
addObserver:%@ observeFilteredGestures:NO includingWhenScreenOff:YES is invalid, observeFilteredGestures must be YES if includingWhenScreenOff is YES
%{public}@ error with transition from %{public}@ to %{public}@
%{public}@ implicit intermediate transition from %{public}@ to %{public}@
%{public}@ transition from %{public}@ to %{public}@
CSLSBackgroundTaskRequestService submitBackgroundTaskRequest async
%{public}@: default completion handler received error -- %{public}@
CSLSBackgroundTaskRequestService cancelBackgroundTaskRequestForBundleID sync
could not cancel request for %@ %{public}@
CSLSBackgroundTaskRequestService cancelBackgroundTaskRequestForBundleID async
CSLSBackgroundTaskRequestService cancelBackgroundTaskRequestWithUUID async
could not cancel request for %@ %@ %{public}@
CSLSBackgroundTaskRequestService submittedRequestsForBundleID async
could not get submitted requests for %@ %{public}@
CSLSBackgroundTaskRequestService registerPrivilegedBackgroundClient async
CSLSBackgroundTaskRequestService completeBackgroundHealthKitQueryForBundleID async
could not complete HK request for %@ %{public}@
Error starting modal app: %@, error: %@
Start Modal App
Terminate Modal App
Error terminating modal app: %@, error: %@
failed to get process cpu seconds with error %{errno}d
Failed to get thread cpu seconds with error %{errno}d count:%u
measuring thread CPU seconds, but ending thread:%p is different than initial thread:%p
failed to get thread cpu seconds with error %{errno}d count:%u
Failed to get process cpu seconds with error %{errno}d
measured time profile:%llu
s threadCost:%llu
s processCost:%llu
%{public}@: service %{public}@ became invalid
%{public}@: service %{public}@ was interrupted
CSLSBackgroundServiceConnection connect
could not connect %{public}@
CSLSBackgroundServiceConnection reconnect
%{public}@: service %{public}@ was interrupted, attempting reconnection
could not reconnect %{public}@
%{public}@: service %{public}@ was interrupted, connect succeeded, will attempt to call %@ for reconnection
%{public}@: service %{public}@ was interrupted, calling didReconnect
%{public}@: service %{public}@ was interrupted, connect succeeded, delegate does not respond to didReconnect
%{public}@ connection interrupted with server %{public}@
%{public}@ could not communicate with server %{public}@
%{public}@ could not synchronously communicate with server %{public}@
%@ became invalid
%@ could not synchronously communicate with server %@
CSLSDuetLaunchTestingService injectError sync
CSLSDuetLaunchTestingService clearError sync
%@ could not execute request, error = %@
com.apple.Carousel.CSLSDetentService-takeDetentAssertion
takeDetentAssertion encountered error %@
com.apple.Carousel.CSLSDetentService-releaseDetentAssertion
releaseDetentAssertion encountered error %@
com.apple.Carousel.CSLSDetentService-getPreferences
received preferences
detents changed %@
com.apple.Carousel.CSLSDetentService-recordMetrics
%{public}@: processing activation option reason %@
%{public}@: zero length reason passed to activateApplication:options:withResult:
%{public}@: %{public}@ adding payload %{public}@
%{public}@: %{public}@ adding scheduleItem, now %{public}@
CSLSTileNavigationService navigateToClockAnimated
@"%{public}@" key in %{public}@ contains no session type value: %{public}@
@"%{public}@" key in %{public}@ contains more than one session type value: %{public}@
Entitlements have values, but we couldn't find a valid combination. All values: %{public}@
Got sessionType %{public}@ with config %{public}@
CSLSMigrationApp activate
Cannot activate an already-active app
Activating migration app
CSLSMigrationApp terminate
Cannot terminate  migration app (isActive=%d, isTerminating=%d)
Terminating migration app
Starting termination operation
Error requesting ReBoard dismissal: %@
Calling termination completion
alternateSystemAppDidLaunch:
alternateSystemAppDidExitWithStatus: %d
alternateSystemAppDidTerminateWithSignal: %d
alternateSystemAppDidFailToLaunchWithError: %@
starting launch operation
Unable to send restart for migration action: %@
completing launch operation
validating passcode with MKBUnlockDevice
First unlock occurred
Keybag state changed: %{public}@
Could not generate key for override: %lu
[%@] Will enter state %@ with previous state %@
[%@] Did enter state %@ with previous state %@
Error connecting to complication service: %{public}@
%@ is setting button handler for %@ %@
%@ is removing button handler for %@ %@
CSLSSessionService connection interrupted, previous sessions = %@
Restoring service observer %@ for %@
Restored observer for %@
Could not restore observer %@ for %@ %@
attempting to restart previously running session %@
cannot restart session %@ %@
restarted session %@
not restarting session because it was not previously running %@
CSLSSessionService startSession
CSLSSessionService startSession %@
encountered error %@
released activeSessionsTransaction %@
CSLSSessionService endSession
CSLSSessionService endSession %@
CSLSSessionService scheduleSession:startDate:options:completion:
CSLSSessionService scheduleSession:%@ startDate:%@ options:%d completion: %@
scheduleSession encountered query error %@
scheduleSession encountered error %@
scheduleSession cannot be called on session of type %@
CSLSSessionService cancelScheduledSession:completion:
CSLSSessionService cancelScheduledSession %@
cancelScheduledSession encountered query error %@
cancelScheduledSession encountered error %@
%@ already running, substituting
scheduled session returned incorrectly %@
CSLSSessionService fetchAllRunningSessionsOfType:
CSLSSessionService fetchAllRunningSessionsOfType %@
fetchAllRunningSessionsOfType encountered query error %@
fetchAllRunningSessionsOfType encountered server error %@
fetchAllRunningSessionsOfType returned %@
CSLSSessionService existingSessionsForBundleID:
CSLSSessionService existingRunningSessionsForBundleID %@
existingSessionsForBundleID encountered query error %@
existingSessionsForBundleID encountered server error %@
existingSessionsForBundleID returned %@
CSLSSessionService existingScheduledSessionsForBundleID:
CSLSSessionService existingScheduledSessionsForBundleID %@
existingScheduledSessionsForBundleID encountered query error %@
existingScheduledSessionsForBundleID encountered server error %@
existingScheduledSessionsForBundleID returned %@
CSLSSessionService addSessionServiceObserver:
CSLSSessionService addSessionServiceObserver:%@ bundle:%@
addSessionServiceObserver: encountered query error %@
addSessionServiceObserver for %@ encountered server error %@
addSessionServiceObserver for %@ succeeded
CSLSSessionService removeSessionServiceObserver:
CSLSSessionService removeSessionServiceObserver:%@ bundle:%@
removeSessionServiceObserver: encountered query error %@
removeSessionServiceObserver for %@ encountered server error %@
removeSessionServiceObserver for %@ succeeded
CSLSSessionService addSessionTypeObserver:
CSLSSessionService addSessionTypeObserver:%@ type:%@
addSessionTypeObserver: encountered query error %@
addSessionTypeObserver for %@ encountered server error %@
addSessionTypeObserver for %@ succeeded
_stopObservingSessionType: encountered query error %@
_stopObservingSessionType for %@ encountered server error %@
_stopObservingSessionType for %@ succeeded
CSLSSessionService fetchStickyCapableApps:
CSLSSessionService fetchStickyCapableApps:%@
fetchStickyCapableApps: encountered query error %@
fetchStikcyCapableApps: returned apps %@
CSLSSessionService takeSessionSuppressionAssertion:
CSLSSessionService takeSessionSuppressionAssertion:%@
takeSessionSuppressionAssertion: encountered query error %@
takeSessionSuppressionAssertion: succeeded
CSLSSessionService releaseSessionSuppressionAssertion:
CSLSSessionService releaseSessionSuppressionAssertion:%@
releaseSessionSuppressionAssertion: encountered query error %@
releaseSessionSuppressionAssertion: succeeded
sessionWithUUIDEnded:%@ error:%@
sessionEnded:%@ error:%@
created activeSessionsTransaction %@
%{public}@ sessionStarted:%@ error:%@
using bundle record for _appBundleID %@
using main build for _appBundleID %@
using entitlement for _appBundleID %@
scheduling server block for %@
completing server block for %@ with lock %@
preparing to execute server block for %@
remoteObjectProxyWithErrorHandler: %@
executing server block for %@ with lock %@
%@ connection interrupted
%@ connection invalidated
CSLSSessionService connect
could not create session service connection, %@
calling connect with %@ %@
could not connect to session service for %@ %@
connected to session service %@
%{public}@: added new known %{public}@ with type %{public}@
%{public}@: %{public}@ is waiting for a send. waiting to send msg with type %{public}@
%{public}@: will send next outstanding message for %{public}@
%{public}@: passed a nil connection to %{public}@
%{public}@: %{public}@ is already waiting for a send. shouldn't be asked again
%{public}@: no more oustanding messages for %{public}@
%{public}@: calling sendBlock for %{public}@
connectionStatusDidChange: %@
Error establishing button listener connection: %@
decoded %@
encoding %@
could not intialize unarchiver for %@
retrieved bundleID %@ for %d %@ %@ %@
could not retrieve bundleID from record %@
could not retrieve bundle record for %@: %{public}@
%{public}@ could not retrieve bundleID for %d %@ %@ %@
using bundleID %@ for watchKit extension %@
could not get signing identifier %@, using generated value %@
using bundleID %@ from signingID
could not create a SecTaskRef. Unable to proceed
SecureBackup failed prepare escrow record (%@)
CSLSSnapshotService setSnapshotContext sync
setting snapshotContext sync %{public}@
could not setSnapshotContext for %@ %@
snapshot context set %@
CSLSSnapshotService setSnapshotContext async
setting snapshotContext %{public}@
could not setSnapshotContext for %@ %{public}@
could not get snapshot context for %@ %{public}@
CSLSSnapshotService snapshotWhenBackgroundProcessingCompletes
cannot snapshot when background processing complete %@ %{public}@
CSLSSnapshotService snapshotAppWithBundleID
cannot snapshot %@ %{public}@
F5 connection error: %@
Connection error: %@
connection interrupted, retaking assertion
Error activating application launch assertion: %@
cannot release assertion, %@ has no uuid
backlightDidChange previous:%d, current:%d, reason:%d
xpc request failed: %@
%{public}@
CSLSSensitiveUIMonitor shouldPreventExit set to %{BOOL}u
%{public}@ nil delegate passed, providing default delegate %@
%{public}@: initialized, sensitiveUI %{BOOL}u for %@
%{public}@: dealloc'd
%{public}@: %@ = %@
%{public}@: value = %@ setting version to nil
%{public}@: updated, calling %@ with sensitiveUI %{BOOL}u for %@
%{public}@: not updating, sensitiveUI still %{BOOL}u for %@
%{public}@: enabled, setting %@ to %@
%{public}@: not enabled, removing value for %@
%{public}@: cannot change sensitiveUI status for a shipping version %@
%{public}@ error connecting to navigation service: %@
%{public}@: connection interrupted
%{public}@: connection invalidate, disconnecting
%@ sendImageData:imageDate: is not supported with the photos feature flag enabled
Sent screenshot to IDS, received GUID: %@
IDS Failed to send screenshot with error: %@
Sending screen recording to Photo Library: %@
created %@ from %@
Finished sending video to photo library success: %{BOOL}u and error: %@
Sending screen recording to IDS: %@
Sent screen recording to IDS, received GUID: %@
IDS Failed to send screen recording with error: %@
CSLSDNDModeAssetNameProvider init with id %@
CSLSDNDModeAssetNameProvider add DND state listener failed with error: %@
CSLSDNDModeAssetNameProvider querying DND state error occurred: %@
Updating assetName: %@
Updating tintColorName: %@
CSLSDNDModeAssetNameProvider didReceiveDoNotDisturbStateUpdate %@
Unable to get configuration for mode %@ (error: %@)
New asset name is empty. Use default symbol instead.
New tint color name is empty. Use default color %@ instead.
Retaking ActivatingUIAssertion %@
Error retaking ActivatingUIAssertion %@
ActivatingUIAssertion connection was interrupted
Took ActivatingUIAssertion %@
Error taking ActivatingUIAssertion %@
Releasing ActivatingUIAssertion %@
Create activate UI assertion
Release activate UI assertion
%{public}@ connection invalidated
%{public}@ connection interrupted, will allow retry
CSLSAppViewImageService provideAppViewListImageDataForWidth
%{public}@ provideAppViewListImageDataForWidth:%f height:%f scale:%f
%@ could not provide app view list image %{public}@
%@ providing app view list image %ld bytes
%s: saving settings %@ to key %@
Error dismissing buddy with image data: %@
Error restarting carousel for language change: %@
passcode unlock failed with error %@
Refreshing state from MKB state %@.
isUserRequestedEraseAllowed = %{BOOL}u
mobile key bag max attempt count = %ld, profile max = %d
Will begin erasing data
No more unlock attempt is accepted
CSLSBackgroundEligibilityService isBundleIDEligibleForBackgroundWork
CSLSBackgroundEligibilityService isBundleIDEligibleForBackgroundHealthKitWork
Error connecting to app stats service: %@
%@ didReconnect after interruption
re-established priority snapshots for %{public}@
could not re-establish priority service for %{public}@, error %{public}@
re-established priority requests for %{public}@
%{public}@ could not register as privileged client with server %{public}@, error = %{public}@
connection interrupted %@
connection invalidated %@
Client get wrist state
Ignoring update state because the updated state %@ is not newer than last known state %@
Error getting wrist state: %@
CSLSNightstandSuspensionServiceConnection takeNightstandSuspensionAssertion
takeNightstandSuspensionAssertion encountered error %@
CSLSNightstandSuspensionServiceConnection releaseNightstandSuspensionAssertion
releaseNightstandSuspensionAssertion encountered error %@
CSLSNightstandSuspensionServiceConnection connect
adding remote provider for %@ %@
removing remote provider for %@ %@
handling triggger %@
%@ found provider %@
%@ returned success %{BOOL}u %@
%@ UI provider not found
detents not supported on this device, CSLSDetentService inactive
calling activate on %@
%@ ready
received detents, mapped by type %@
playing detent of type %ld, with strong %{BOOL}u using %@
could not play detent %{BOOL}u, %ld, %@, %@
played detent with %@
no detent for type %ld
recording metrics %@
%{public}@: %{public}@
%@ adding remote client for %@
%@ removing remote client for %@
%@ calling remotely for %@
startup failure, many rabbits were lost and never found again
startup failure, many rabbits were lost and never found again - chances are someone called [CSLSUITriggerRegistration sharedInstance] in Carousel process too early in startup before [CSLUIUITriggerController sharedInstance]
Setting up UI trigger registration for out of process.
%@ calling inProcess for %@
%@ calling outOfProcess for %@
self: (%p); Connection interrupted
self: (%p); Connection invalidated
self: (%p); error: (%{public}@)
self: (%p); dismissed: (%d); isAlphanumeric: (%d); error: (%@)
%@ setEnabled:completion: client error %@
CSLSUserAuthenticationClient notePasscodeEntryForUnlockDidBegin
CSLSUserAuthenticationClient notePasscodeEntryForUnlockDidCancel
CSLSUserAuthenticationClient notePasscodeUnlockDidSucceed
Secure backup is not required
CSLSUserAuthenticationClient notePasscodeUnlockDidFailWithError
CSLSUserAuthenticationClient requestClearBlockedState
blockStateMayHaveChanged received. in lockout=%{BOOL}u
trigger added: %@
trigger removed: %@
No mach service name supplied for remote UI trigger client. Not starting xpc listener
dealloc - removeUnblankingSychronizer:%@
unblankingSychronizer setEnabled:YES prepareForUnblankBlock must not be nil : %@
<assertion %p:%{public}@> %{public}s <reason:%d [0x%x]%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s%s timeout:%.2fs pid:%d asserted:%u %.2lf sec ago>
willPreventScreenOff should always be YES, ignoring assertion
display other than the main display not supported (%@)
no timeout specified, using default timeout: %.2f
softlink:r:path:/System/Library/Frameworks/CoreServices.framework/CoreServices
softlink:r:path:/System/Library/Frameworks/Security.framework/Security
softlink:r:path:/System/Library/Frameworks/CoreServices.framework/CoreServices
softlink:r:path:/System/Library/Frameworks/CoreServices.framework/CoreServices
softlink:r:path:/System/Library/Frameworks/Security.framework/Security
softlink:r:path:/System/Library/Frameworks/CoreServices.framework/CoreServices
softlink:r:path:/System/Library/Frameworks/Security.framework/Security
softlink:r:path:/System/Library/PrivateFrameworks/IDS.framework/IDS
softlink:r:path:/System/Library/PrivateFrameworks/IDSFoundation.framework/IDSFoundation
softlink:r:path:/System/Library/Frameworks/Photos.framework/Photos
CSLSafeMutableSet
CSLSRestartForMigrationAction
EvaluateStatus
CSLUIUITriggerXPCProtocol
CSLSUITriggerRemoteService
CSLSAppBacklightPrivacySettings
CSLSNotificationServiceServerExportedInterface
NSObject
CSLSNotificationService
CSLSThermalTrapXPCClient
CSLSDecoderUtility
CSLSConnectionState
NSCopying
NSMutableCopying
NSSecureCoding
NSCoding
BSDescriptionProviding
CSLSMutableConnectionState
HAEmbeddedHapticsLoader
Test
AOPHapticsController
CSLSLaunchServicesUtlities
CSLSNightstandSuspensionAssertion
CSLSThermalTrap
CSLSThermalTrapXPCClientDelegate
CSLSCompanionConnectionState
CSLSMutableCompanionConnectionState
CSLSScreenshotTaker
CSLSScreenshotter
CSLSafeMutableArray
CSLSWakeGesture
CSLSApplicationInfo
CSLSApplicationInfoServiceXPCServer
CSLSApplicationInfoService
CSLSWaterLock
CSLSSessionError
CSLSRadioConnectionState
CSLSMutableRadioConnectionState
CSLUnblankingSynchronizationServerInterface
CSLUnblankingSynchronizationClientInterface
CSLUnblankingSynchronizationClient
CSLEcoModeDaemonXPCDelegate
CSLSEcoModeClient
CSLSPrivilegedBackgroundPriorityState
CSLSPrivilegedBackgroundPriorityStateCache
CSLSButtonListenerCache
CSLSDockAllowLaunchAssertionService
CSLSDockAllowLaunchAssertionConnection
CSLSXPCSuspendSystemGestureAssertionProvider
CSLSSuspendSystemGestureAssertionProvider
CSLSConcurrentObserverStore
CSLSConnectionStateObserver
CSLSBuddyAlertSuppressionAssertion
CSLSStatusOverlayAssertionProtocol
CSLSStatusOverlayAssertion
CSLSAlertSuppressionToken
CSLSModalAppAlertSuppressionToken
CSLSAlertSuppressionWithReasonToken
CSLSAlertSuppressionWithAlertServiceNamesToken
CSLSAlertSuppressionServiceInterface
CSLSAlertSuppressionClient
CSLSAlertSuppressionAssertion
CSLSSnapshotContext
BSXPCCoding
CSLSSoftwareUpdateStashHelper
CSLSBackgroundTaskRequestError
CSLSReturnToAppSettings
CSLToolXPCClient
CSLSSuspendSystemGestureAssertion
CSLSWakeGestureMonitor
CSLSWakeGestureObserver
CSLSWakeGestureServer
CSLSModalAppAlertSuppressionAssertion
CSLSBinaryTransitionStateMachine
CSLSBinaryTransitionStateMachineConfiguration
CSLSBinaryTransitionStateMachineBlockDelegate
CSLSBinaryTransitionStateMachineDelegate
CSLSBackgroundTaskRequestServiceXPC
CSLSBackgroundTaskRequestServiceProtocol
CSLSPrivilegedBackgroundServicing
CSLSBackgroundServiceAutoConnecting
CSLSBackgroundTaskRequestServiceHealthKitProtocol
CSLSBackgroundTaskRequestService
CSLSBackgroundServiceDelegate
CSLSDockStatusServiceXPC
CSLSDockStatusService
CSLSModalAppServiceInterface
CSLSModalAppService
CSLSTimeProfiler
CSLSModalAppServicePresentationOptions
CSLSWifiConnectionState
CSLSMutableWifiConnectionState
CSLSBackgroundServiceConnection
CSLSBackgroundServiceConnectionProviding
CSLSDuetLaunchTesting
CSLSDuetLaunchTestingService
CSLSPowerTester
CSLSPowerTestDelegate
CSLSPowerTestService
CSLSReturnToAppSettingsModel
CSLSDetentService
CSLSDetentClient
CSLSDetentServiceConnection
CSLSDuetActivationService
CSLSTileNavigationService
CSLSDetentsAssertion
CSLSafeMutableDictionary
CSLSReBoardServiceInterface
CSLSMigrationApp
BKSAlternateSystemAppDelegate
CSLSMigrationAppBlockOperation
CSLSLaunchAlternateSystemAppOperation
CSLSMobileKeyBag
CSLSConnectionStateOverrides
BSSettingDescriptionProvider
CSLSMutableConnectionStateOverrides
CSLSStateMachine
CSLSOnWristState
CSLSDisconnectedAssetNameProvider
CSLSBacklightAssertionSpecification
CSLSComplicationServerExportedInterface
CSLSComplicationService
CSLSButtonHandlerBridge
CSLSButtonHandler
CSLSSessionService
CSLSSessionServiceClientInterface
CSLSSessionServerConnectionDelegate
CSLSSessionServiceInterface
CSLSSessionSuppressionAssertion
CSLSSessionServerConnection
CSLSSessionServiceXPCInterface
CSLSTheaterMode
CSLSSystemStateInterfaceProvider
CSLSSystemStateInterfaceProviding
CSLSWeakXPCConnectionWrapper
CSLSXPCBarrierBlockManager
CSLSAlwaysOnTapToWakeEvent
CSLSViewOnWakeItem
CSLSURLSessionPolicyServerInterface
CSLSURLSessionPolicy
CSLSPasscodePromptSettings
CSLSBacklightRequest
CSLLinkedListNode
CSLStrongLinkedListNode
CSLLinkedListNodeEnumeration
CSLWeakLinkedListNode
CSLLinkedListStrongStorageAllocator
CSLLinkedListStorageAllocator
CSLLinkedList
NSFastEnumeration
CSLStrongLinkedList
CSLLinkedListWeakStorageAllocator
CSLWeakLinkedList
CSLWeakTrackerDelegate
CSLSConnectionStatusService
CSLSConnectionStatusObserver
CSLSDetent
CSLSButtonTapAssertionServerInterface
CSLSButtonTapAssertionClientInterface
CSLSButtonTapAssertion
CSLSButtonTapAssertionExportedObject
CSLSBackgroundTaskRequest
CSLSSession
CSLSSecureBackupHelper
CSLSSnapshotServiceServerProtocol
CSLSSnapshotServiceProtocol
CSLSPrivilegedSnapshotServicing
CSLSSnapshotService
CSLSNotificationCenterServiceServerExportedInterface
CSLSNotificationCenterService
CSLSApplicationLaunchSuppressionServiceInterface
CSLSApplicationLaunchSuppressionAssertion
_CSLSBackLightAssertionContainer
_CSLSBacklightOnRequest
CSLSBacklight
CSLSBacklightXPCClient
CSLSBacklightObserver
CSLSBacklightAssertionProvider
CSLSBacklightXPCServer
CSLSSuspendSystemGestureAssertionConfiguration
CSLSSensitiveUIMonitorExitingDelegate
CSLSSensitiveUIMonitoring
CSLSSensitiveUIMonitor
CSLSStoreDemoSupportServerInterface
CSLSSystemNavigating
CSLSNavigationService
CSLSUITriggerRemoteClientFactory
CSLSSnapshotServiceError
CSLSScreenshotSyncer
CSLSDeviceOrientation
CSLSStateMachineState
CSLSDNDModeAssetNameProvider
DNDStateUpdateListener
Overrides
CSLSXPCActivatingUIAssertionProvider
CSLSActivatingUIAssertionProvider
CSLSActivatingUIAssertion
CSLSDisplayLayoutElement
CSLSAppViewImageProviding
CSLSAppViewImageService
CSLSAppBacklightPrivacySettingsModel
_CSLSTimeFormatSentinel
CSLSBuddyServiceInterface
CSLSBuddyService
CSLSBuddyButtonRegistration
CSLSUserAuthenticationModel
CSLSBackgroundEligibilityServerProtocol
CSLSBackgroundEligibilityServiceProtocol
CSLSBackgroundEligibilityService
CSLSAppEvent
CSLSAppStateTransition
CSLSAppStats
CSLSAppStatsServerExportedInterface
CSLSAppStatsService
CSLSPrivilegedBackgroundServiceConnection
CSLOnWristServerExportedInterface
CSLOnWristClientExportedInterface
CSLSOnWristMonitor
CSLOnWristClientExportedObject
CSLObservable
CSLSSnapshotScheduleItem
CSLSDuetActivationOptions
Convenience
CSLSNightstandSuspensionService
CSLSNightstandSuspensionServiceConnection
CSLSTelephonyConnectionState
CSLSMutableTelephonyConnectionState
CSLSUITriggerClientExportedInterface
CSLSUITriggerRemoteClient
CSLSUITriggerRemoteClientServiceDelegate
CSLSConnectionStateXPCClientInterface
CSLSConnectionStateXPCServerInterface
CSLSConnectionStateXPCClient
CSLSConnectionStateOverrider
CSLSMobileKeyBagState
CSLSMutableMobileKeyBagState
CSLSEcoModeShutdownServer
CSLSShutdownForEcoModeClient
CSLSRawButtonEventListener
CSLSRawButtonEventListenerBridge
CSLSUITriggerRegistrationInProcess
CSLSUITriggerRegistration
CSLSUIProviderRemoteWrapper
CSLSUITriggerRemoteProvider
CSLSUITriggerRegistrationOutOfProcess
CSLSUIProviderRemoteWrapperDelegate
CSLSPowerTest
CSLSDockAllowLaunchAssertion
CSLWeakTracker
CSLSDisableInstantButtonTapAssertion
BSInvalidatable
CSLSButtonListenerServerInterface
CSLSButtonListenerClientInterface
CSLSButtonListener
CSLSDisableInstantButtonTapAssertionDelegate
CSLSButtonListenerExportedObject
CSLSPasscodePromptServerProtocol
CSLSPasscodePrompt
CSLSSystemStateXPCServerInterface
CSLSSystemStateXPCClientInterface
CSLSSystemStateXPCInterfaceProxy
CSLSSystemStateInterface
CSLSUserAuthenticationClient
CSLSUserAuthenticationModelDelegate
CSLSMobileKeyBagObserver
CSLSUITriggerServerExportedInterface
CSLSUITriggerRemoteClientService
NSXPCListenerDelegate
CSLSUITriggerRemoteClientServiceProtocol
CSLSUnblankingSynchronizer
CSLSBacklightAssertionBase
Internal
CSLSInvalidatableBacklightAssertion
CSLSBacklightAssertion
Deprecated
init
dealloc
count
_withLock:
addObject:
containsObject:
removeObject:
removeAllObjects
copy
enumerateObjectsUsingBlock:
description
addNewObject:
removeExistingObject:
enumerateObjectsWithBlock:
.cxx_destruct
_objects
_lock
TQ,R
string
appendString:
telephonyState
radioState
serviceState
supportsLTE
simActive
telephonyEnabled
airplaneModeEnabled
companionState
pairedDeviceNearby
pairedDeviceConnected
pairedDeviceCloudConnected
wifiState
wifiActive
isCellularConnected
evaluateStatus
initWithMachServiceName:options:
xpcRequestUITriggerWithName:withDictionary:withReason:withCompletion:
xpcUIProvidersWithCompletion:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
resume
remoteObjectProxyWithErrorHandler:
remoteService
requestUITriggerWithName:withDictionary:withReason:withCompletion:
uiProvidersWithCompletion:
_connection
objectForKeyedSubscript:
boolValue
initForPhoneOnlyApp
initForWatchApp:
dictionary
numberWithBool:
setObject:forKeyedSubscript:
builder
appendBool:
hash
builderWithObject:ofExpectedClass:
privacyDuringAOTForApp
appendBool:counterpart:
privacyDuringAOTForNotification
supportsAOT
phoneOnly
isEqual
builderWithObject:
appendBool:withName:
build
initForWatchApp
initWithDictionary:
hasCustomSetting
setPrivacyDuringAOTForApp:
toDictionary
isEqual:
setPrivacyDuringAOTForNotification:
setSupportsAOT:
setPhoneOnly:
_privacyDuringAOTForApp
_privacyDuringAOTForNotification
_supportsAOT
_phoneOnly
TB,N,V_privacyDuringAOTForApp
TB,N,V_privacyDuringAOTForNotification
TB,N,V_supportsAOT
TB,N,V_phoneOnly
TB,R,N
_connectIfNecessary
_disconnect
addNotificationWithTitle:subtitle:message:delayLocal:delayMirrored:clearable:completion:
_performServerQuery:
getLockedNotificationsInPipelineStepActorWithClassName:completion:
removeNotificationWithSectionID:publisherMatchID:completion:
clearNotificationWithSectionID:publisherMatchID:feed:completion:
clearAllNotificationsWithCompletion:
removeSectionWithSectionID:completion:
setNotificationsLevel:sectionID:mirror:completion:
getNotificationSettings:
_performServerQuery:retryQueryOnInterruption:
code
invalidate
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
T#,R
T@"NSString",R,C
sharedNotificationService
initWithServiceName:endpoint:
reconnectIfNecessary
_sendMessage:withReplyHandler:waitForReply:waitDuration:
didChangeState:
initWithDelegate:
isTrapped
queue_handleMessage:
setTrapped:
_delegate
_trapped
trapped
TB,N,GisTrapped,V_trapped
decodeObjectOfClass:forKey:
classForCoder
setWithObjects:
decodeObjectOfClasses:forKey:
decodeDate:forKey:
decodeUserInfo:forKey:
activeMultilinePrefix
descriptionWithMultilinePrefix:
appendString:withName:
appendBodySectionWithName:multilinePrefix:block:
descriptionBuilderWithMultilinePrefix:
succinctDescription
succinctDescriptionBuilder
appendObject:
appendObject:counterpart:
allocWithZone:
initWithState:
encodeObject:forKey:
supportsSecureCoding
copyWithZone:
mutableCopyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
_companionState
_radioState
_telephonyState
_wifiState
T@"CSLSCompanionConnectionState",R,N,V_companionState
T@"CSLSRadioConnectionState",R,N,V_radioState
T@"CSLSTelephonyConnectionState",R,N,V_telephonyState
T@"CSLSWifiConnectionState",R,N,V_wifiState
mutableCopy
setCompanionState:
setRadioState:
setTelephonyState:
setWifiState:
T@"CSLSMutableCompanionConnectionState",&,D,N
T@"CSLSMutableRadioConnectionState",&,D,N
T@"CSLSMutableTelephonyConnectionState",&,D,N
T@"CSLSMutableWifiConnectionState",&,D,N
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
sharedInstance
loadEmbeddedHapticAssetOfType:withAssetID:error:
loadAPTriggeredHapticAssetOfType:withAssetID:error:
maxNumberOfAssets
serviceAvailable
getDefaultGainForAOPType:
getDefaultGainForAPTriggeredType:
setServiceAvailable:
_loadCalled
_serviceAvailable
TB,N,V_serviceAvailable
Tq,R,N
defaultCenter
postNotificationName:object:
makeServiceAvailable
setLoadCalled:
loadCalled
TB,N
readyHandler
cancelHandler
activate
cancel
setMappings:error:
setMappingsCalled
setSetMappingsCalled:
playSlotIndices:error:
setCancelHandler:
setReadyHandler:
dispatchQueue
setDispatchQueue:
activated
setActivated:
_setMappingsCalled
_activated
_cancelHandler
_readyHandler
_dispatchQueue
TB,N,V_activated
T@?,C,N,V_cancelHandler
T@?,C,N,V_readyHandler
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
watchKitApplicationType
applicationExtensionRecords
extensionPointRecord
identifier
isEqualToString:
objectsPassingTest:
anyObject
bundleRecordWithEntitlementsForBundleRecord:
sharedConnection
takeNightstandSuspensionAssertion:
releaseNightstandSuspensionAssertion:
delegate
thermalTrapDidChange:
setDelegate:
_xpcClient
TB,R,N,GisTrapped
T@"<CSLSThermalTrapDelegate>",W,N,V_delegate
appendCompanionConnectionState:
decodeBoolForKey:
encodeBool:forKey:
_pairedDeviceNearby
_pairedDeviceConnected
_pairedDeviceCloudConnected
TB,R,N,V_pairedDeviceNearby
TB,R,N,V_pairedDeviceConnected
TB,R,N,V_pairedDeviceCloudConnected
setPairedDeviceNearby:
setPairedDeviceConnected:
setPairedDeviceCloudConnected:
TB,D,N
takeScreenshotWithOptions:completion:
serverInterface
_array
decodeIntegerForKey:
initWithGestureType:timestamp:backlightWasOn:willChangeBacklight:couldChangeBacklight:
encodeInteger:forKey:
setDateFormat:
localeWithLocaleIdentifier:
setLocale:
cachedDateFormatter
stringFromDate:
stringWithFormat:
gestureType
timestamp
backlightWasOn
willChangeBacklight
couldChangeBacklight
_backlightWasOn
_willChangeBacklight
_couldChangeBacklight
_gestureType
_timestamp
TQ,R,N,V_gestureType
T@"NSDate",R,N,V_timestamp
TB,R,N,V_backlightWasOn
TB,R,N,V_willChangeBacklight
TB,R,N,V_couldChangeBacklight
applicationBundleID
appendObject:withName:
supportsAutoLaunch
isTracked
initWithApplicationBundleID:supportsAutoLaunch:isTracked:
_supportsAutoLaunch
_isTracked
_applicationBundleID
T@"NSString",R,N,V_applicationBundleID
TB,R,N,V_supportsAutoLaunch
TB,R,N,V_isTracked
serviceName
applicationInfoForCompanionBundleIdentifier:completion:
applicationInfoForApplicationIdentifier:completion:
connect:
setExportedObject:
_remoteObjectProxy
connection
synchronousRemoteObjectProxyWithErrorHandler:
_synchronousRemoteObjectProxy
applicationInfoForCompanionBundleIdentifier:
applicationInfoForApplicationIdentifier:
T@"NSXPCConnection",R,N,V_connection
initWithIdentifier:delegate:callbackQueue:
sharedProvider
interfaceForType:
_waterLockDidUpdate
setDidUpdate:
initWithIdentifier:
setEnabled:completion:
enabled
waterLockDidChange:
lock
unlock
isLocked
_waterLockInterface
_callbackQueue
_identifier
locked
TB,R,N,GisLocked
T@"NSString",R,N,V_identifier
T@"<CSLSWaterLockDelegate>",W,N,V_delegate
domain
isCSLSSessionErrorDomain
errorWithCode:description:
errorWithCode:
error:matches:
isSessionError:
bluetoothEnabled
appendRadioConnectionState:
_airplaneModeEnabled
_bluetoothEnabled
_telephonyEnabled
TB,R,N,V_airplaneModeEnabled
TB,R,N,V_bluetoothEnabled
TB,R,N,V_telephonyEnabled
setAirplaneModeEnabled:
setBluetoothEnabled:
setTelephonyEnabled:
enableUnblankingSynchronization:
readyForUnblank:completion:
prepareForUnblank:
unblankTimedOut:
initWithOptions:capacity:
CSLUnblankingSynchronizationServerInterface
CSLUnblankingSynchronizationClientInterface
setExportedInterface:
readyForUnblank:
remoteObjectProxy
withLock_enableUnblankingSynchronization:
allObjects
countByEnumeratingWithState:objects:count:
prepareForUnblankBlock
addUnblankingSychronizer:
removeUnblankingSychronizer:
unblankingSychronizer:readyForUnblank:
_syncronizers
_pendingUnblankSyncronizers
_pendingUnblankID
_isUnblankPending
xpcSetEcoMode:thermalTrap:completion:
xpcSetInfo24hMode:deviceRotatedUp:utcOffset:completion:
xpcSet24hMode:
xpcSetDeviceRotatedUp:
xpcSetUtcOffset:
xpcObliterateSettings:
xpcAddScreenOnDuration:
xpcUpdatePowerSettingsForDemoModeWithChargeThrottling:chargeLimitVoltage:
setEcoMode:thermalTrap:completion:
remoteObjectProxyWithRetryHandler:errorHandler:
setInfo24hMode:deviceRotatedUp:utcOffset:completion:
set24hMode:
setDeviceRotatedUp:
setUtcOffset:
obliterateSettings:
addScreenOnDuration:
updatePowerSettingsForDemoModeWithChargeThrottling:chargeLimitVoltage:
xpcEcoModeDConnection
setXpcEcoModeDConnection:
_xpcEcoModeDConnection
T@"NSXPCConnection",&,N,V_xpcEcoModeDConnection
setPriority:
setLeeway:
setUsesBudget:
setSimultaneousRequests:
setReturnToPrimaryUIInterval:
priorityState:leeway:usesBudget:simultaneousRequests:returnToPrimaryUIInterval:
priority
leeway
usesBudget
returnToPrimaryUIInterval
simultaneousRequests
_usesBudget
_priority
_leeway
_returnToPrimaryUIInterval
_simultaneousRequests
TQ,N,V_priority
Td,N,V_leeway
TB,N,V_usesBudget
Td,N,V_returnToPrimaryUIInterval
Tq,N,V_simultaneousRequests
setObject:forKey:
_addPrivilegedClient:priority:leeway:usesBudget:simultaneousRequests:returnToPrimaryUIInterval:
enumerateKeysAndObjectsUsingBlock:
addPrivilegedClient:priority:leeway:usesBudget:returnToPrimaryUIInterval:
addPrivilegedClient:priority:leeway:usesBudget:simultaneousRequests:
enumeratePrivilegedClients:
stateCache
setStateCache:
_stateCache
T@"CSLSafeMutableDictionary",&,N,V_stateCache
numberWithUnsignedLong:
_makeKeyForMask:event:
removeObjectForKey:
unsignedIntegerValue
setEntryForButtons:event:entry:
entryForButtons:event:
removeEntryForButtons:event:
enumerateEntries:
clear
entries
setEntries:
_entries
T@"NSMutableDictionary",&,V_entries
_init
takeDockLaunchAssertion:completion:
releaseDockLaunchAssertion:completion:
_retakeAssertionIfNecessary
_remoteObjectProxy:
_currentAssertion
initWithServiceName:
dictionaryWithCapacity:
takeSuspendSystemGestureAssertionWithConfiguration:
assertionID
edge
_sendMessage:
releaseSuspendSystemGestureAssertionWithConfiguration:
queue_connectionWasInterrupted
_activeAssertions
weakObjectsPointerArray
compact
addPointer:
pointerAtIndex:
replacePointerAtIndex:withPointer:
performSelectorOnMainThread:withObject:waitUntilDone:
enumerateObserversWithBlock:
addObserver:
removeObserver:
performSelectorOnMainThreadWithRespondingObservers:object:waitUntilDone:
observersLock
setObserversLock:
observers
setObservers:
_observersLock
_observers
T{os_unfair_lock_s=I},N,V_observersLock
T@"NSPointerArray",&,N,V_observers
TQ,R,N
connectWithObserver:
state
setState:
observeStateWithBlock:
stateChangedBlock
_state
_stateChangedBlock
T@?,R,N,V_stateChangedBlock
T@"CSLSConnectionState",&,N,V_state
processInfo
globallyUniqueString
initWithIdentifier:allowingServices:
initWithToken:
buddyAlertSuppressionAssertion
buddyAlertSuppressionAssertionAllowingServices:
setStatusString:
acquireWithStatusString:completion:
acquireWithHandler:invalidationHandler:
statusString
_queue
_statusString
T@"NSString",C,N,V_statusString
setIdentifier:
T@"NSString",&,N,V_identifier
allowingServices
objectAtIndexedSubscript:
setAllowingServices:
_allowingServices
T@"NSArray",&,N,V_allowingServices
initWithIdentifier:reason:
reason
setReason:
_reason
TQ,N,V_reason
initWithIdentifier:alertServiceNames:
alertServiceNames
setAlertServiceNames:
_alertServiceNames
T@"NSArray",C,N,V_alertServiceNames
activateAssertion:forProcess:
activateAssertion:forProcess:reasonIdentifier:
activateModalAppAssertion:forProcess:allowingServices:
activateAssertion:forProcess:disallowingServices:
deactivateAssertion:forProcess:
_reactivateAssertions
_activateRemoteAssertion:
numberWithUnsignedInteger:
objectForKey:
processIdentifier
_serviceWithErrorHandler:
identifierForReason:
initialize
activateAssertionWithToken:
deactivateAssertionWithToken:
_outstandingTokens
alertSuppressionAssertion
alertSuppressionAssertionAllowingServices:
alertSuppressionAssertionWithReason:
alertSuppressionAssertionWithAlertServiceNames:
_token
UUID
UUIDString
initWithStaleDate:uuid:userInfo:atGlanceableUI:
checkUserInfoSize:
distantFuture
snapshotContextWithStaleDate:userInfo:atGlanceableUI:
distantPast
objectForSetting:
archivedDataWithRootObject:requiringSecureCoding:error:
length
maxUserInfoSize
staleDate
uuid
userInfo
isAtGlanceableUI
appendDictionarySection:withName:skipIfEmpty:
snapshotContextWithStaleDate:uuid:userInfo:atGlanceableUI:
alwaysValidSnapshotContext
invalidSnapshotContext
fromSettings:
defaultStaleDate
initWithXPCDictionary:
encodeWithXPCDictionary:
fallbackXPCEncodableClass
initWithStaleDate:userInfo:atGlanceableUI:
_atGlanceableUI
_staleDate
_uuid
_userInfo
T@"NSDate",R,N,V_staleDate
T@"NSString",R,N,V_uuid
T@"NSDictionary",R,N,V_userInfo
atGlanceableUI
TB,R,N,GisAtGlanceableUI,V_atGlanceableUI
propertyList:isValidForFormat:
dataWithPropertyList:format:options:error:
UTF8String
bytes
createKeyBagStashIfNecessary:
notInBackground
isNotInBackgroundError:
notImplemented
floatValue
numberWithDouble:
appendDouble:
hasCustomReturnToAppTimeout
returnToAppTimeout
appendDouble:counterpart:
sessionCapable
alwaysReturnToAppInSession
appendFloat:withName:
setReturnToAppTimeout:
setSessionCapable:
setAlwaysReturnToAppInSession:
_returnToAppTimeout
_hasCustomReturnToAppTimeout
_sessionCapable
_alwaysReturnToAppInSession
Td,N
TB,R,N,V_hasCustomReturnToAppTimeout
TB,N,V_sessionCapable
TB,N,V_alwaysReturnToAppInSession
_sendBlockingMessage:reply:
timeIntervalSince1970
stringWithUTF8String:
sendSimpleMessage:
sendMessage:withFlag1:flag2:
sendMessage:withFlag1:flag2:withReply:
sendMessage:withString:
sendMessage:withString:flag:
sendMessage:withDate:flag:string:
sendMessage:withTimeInterval:string:flag:
sendMessage:withOptions:
sendMessage:withTimeInterval:options:
sendMessage:withReply:
sendMessage:withStringReply:
serviceWithDefaultShellEndpoint
_takeAssertion
setAssertionID:
setPid:
setEdge:
setIgnoresForegroundStatus:
setAssertionProvider:
assertionProvider
ignoresForegroundStatus
_configuration
_ignoresForegroundStatus
_edge
TB,N,V_ignoresForegroundStatus
Tq,N,V_edge
_queue_attemptConnection
_attemptConnection
_invalidateConnection
_updateWantsUnfilteredGesturesForced:
_queue_updateWantsUnfilteredGesturesForced:
setWantsUnfilteredGestures:includingWhenScreenOff:
addObserver:observeFilteredGestures:includingWhenScreenOff:
wakeGestureRecognized:
wakeGestureRecognized:date:
addObserver:observeFilteredGestures:
filteredObservers
setFilteredObservers:
screenOffFilteredObservers
setScreenOffFilteredObservers:
_notifyToken
_wantsUnfilteredGestures
_wantsUnfilteredGesturesWithScreenOff
_connectionQueue
_filteredObservers
_screenOffFilteredObservers
T@"CSLSConcurrentObserverStore",&,N,V_observers
T@"CSLSConcurrentObserverStore",&,N,V_filteredObservers
T@"CSLSConcurrentObserverStore",&,N,V_screenOffFilteredObservers
setClass:forSelector:argumentIndex:ofReply:
modalAppAlertSuppressionAssertion
modalAppAlertSuppressionAssertionAllowingServices:
initWithInitialState:configuration:
loggingName
setStateMachineState:
_transitionToState:
raise:format:
behaviorForTransitionFromState:toState:
logHandle
errorLogType
descriptionForState:
logType
_notifyDelegateWithState:
stateMachine:didEnterState:
beginTransitionToState:
endTransition
endTransitionWithState:
_isInCallout
T@"<CSLSBinaryTransitionStateMachineDelegate>",W,N,V_delegate
TQ,R,N,V_state
applyDefaultTransitionBehaviorsToConfiguration:
initWithConfiguration:
appendInteger:
appendInt64:
appendInteger:counterpart:
appendEqualsBlocks:
_indexForTransitionFromState:toState:
setBehavior:forTransitionFromState:toState:
setDescription:forState:
setLogHandle:
setLogType:
setErrorLogType:
setLoggingName:
_stateDescriptions
_behaviors
_logType
_errorLogType
_logHandle
_loggingName
T@"NSObject<OS_os_log>",&,N,V_logHandle
TC,N,V_logType
TC,N,V_errorLogType
T@"NSString",C,N,V_loggingName
array
componentsJoinedByString:
initWithBlock:
_block
submitBackgroundTaskRequest:forBundleID:
submitBackgroundTaskRequest:forBundleID:completion:
submitBackgroundTaskRequest:forBundleID:completionWithError:
cancelBackgroundTaskRequestForBundleID:
cancelBackgroundTaskRequestForBundleID:completion:
cancelBackgroundTaskRequestForBundleID:withUUID:completion:
submittedRequestsForBundleID:completion:
registerPrivilegedBackgroundClient:withPriority:leeway:usesBudget:completion:
registerPrivilegedBackgroundClient:withPriority:leeway:usesBudget:simultaneousRequests:completion:
reconnect:
completeBackgroundHealthKitQueryForBundleID:completion:
setClasses:forSelector:argumentIndex:ofReply:
CSLSBackgroundTaskRequestServiceXPC
asynchronousRemoteObjectProxyWithRetryHandler:errorHandler:
_completePendingHealthKitAction
_withLock:block:
remoteInterface
didConnect
didReconnect
T@"NSString",R,N
T@"NSXPCInterface",R,N
T@"NSObject<OS_os_log>",R,N
handleBackgroundHealthKitQueryAction:
setConnection:
healthKitAction
setHealthKitAction:
_healthKitLock
_healthKitAction
T@"CSLSPrivilegedBackgroundServiceConnection",&,N,V_connection
T@"BSAction",&,N,V_healthKitAction
retrieveDockStatusForBundleID:completion:
connect
isDocked:
T@"NSXPCConnection",&,N,V_connection
cStringUsingEncoding:
setBundleIdentifier:
setPresentationContext:
setWantsAlertSuppression:
setAnimated:
startModalAppWithOptions:
terminateModalAppWithBundleIdentifier:
_restartModalApps
bundleIdentifier
startModalAppWithBundleIdentifer:
_activeModalApps
beginWithOptions:log:
beginWithOptions:log:ariadneEvent:a:b:c:d:
endWithAriadneEvent:a:b:c:d:
isValid
timeProfile
_startValues
_timeProfile
_log
_options
_kernelError
_ended
valid
TB,R,N,GisValid
T{?=Q{?=QQ}{?=QQ}B},R,N
numberWithUnsignedLongLong:
isAnimated
suppressesLaunchUI
setSuppressesLaunchUI:
presentationContext
wantsAlertSuppression
allowedAlertServices
setAllowedAlertServices:
_animated
_suppressesLaunchUI
_wantsAlertSuppression
_bundleIdentifier
_presentationContext
_allowedAlertServices
T@"NSString",C,N,V_bundleIdentifier
animated
TB,N,GisAnimated,V_animated
TB,N,V_suppressesLaunchUI
Tq,N,V_presentationContext
TB,N,V_wantsAlertSuppression
T@"NSSet",C,N,V_allowedAlertServices
signalStrengthBars
appendUnsignedInteger:withName:
associatedToIOSHotspot
currentNetworkName
appendString:withName:skipIfEmpty:
appendWifiConnectionState:
appendUnsignedInteger:
appendUnsignedInteger:counterpart:
appendString:counterpart:
_wifiActive
_signalStrengthBars
_associatedToIOSHotspot
_currentNetworkName
TB,R,N,V_wifiActive
TQ,R,N,V_signalStrengthBars
TB,R,N,V_associatedToIOSHotspot
T@"NSString",R,N,V_currentNetworkName
setWifiActive:
setSignalStrengthBars:
setAssociatedToIOSHotspot:
setCurrentNetworkName:
TQ,D,N
T@"NSString",&,D,N
_attemptReconnect
_attemptConnect
T@"<CSLSBackgroundServiceDelegate>",W,N,V_delegate
injectError:errorCode:completion:
clearError:completion:
synchronousRemoteObjectProxy
connectionQueue
startTest:
testStarted:error:
setConnectionQueue:
T@"NSObject<OS_dispatch_queue>",&,N,V_connectionQueue
T@"NSObject<CSLSPowerTestDelegate>",W,N,V_delegate
initWithDomain:
reloadAppSettings
synchronize
returnToAppSettingsToDictionary:
setWithObject:
synchronizeNanoDomain:keys:
settingsChanged:forBundleID:
saveAppSettings
settingsForBundleID:
setSettings:forBundleID:
_returnToAppSettingsByBundleID
_npsDomainAccessor
_npsManager
takeDetentAssertion:
releaseDetentAssertion:
getPreferences:
recordMetrics:
detentsDisabledChanged:
detentsDebugChanged:
flashDetentsChanged:
detentsChanged:
CSLSDetentService
CSLSDetentClient
_setQueue:
assertionTaken
setAssertionTaken:
initWithQueue:delegate:
_assertionTaken
T@"<CSLSDetentClient>",R,W,N,V_delegate
TB,N,V_assertionTaken
fbsOptionsForActivationOptions:bundleID:
optionsWithDictionary:
openApplication:withOptions:completion:
orderedSet
payload
addEntriesFromDictionary:
sharedService
canActivateApplication:forReasons:
activateApplication:options:withResult:
_openApplicationService
sharedNavigationService
navigateToLocation:animated:withCompletion:
sharedTileNavigationService
navigateToClockAnimated:completion:
sharedDetentService
takeAssertion:
releaseAssertion:
setLock:
setDictionary:
_dictionary
T{_opaque_pthread_mutex_t=q[56c]},N,V_lock
T@"NSMutableDictionary",&,N,V_dictionary
allKeys
setWithArray:
WKBackgroundModes
intersectSet:
integerValue
tokenFromNSXPCConnection:
valueForEntitlement:
entitlements
objectForKey:ofClass:
setUnderlyingQueue:
setName:
setMaxConcurrentOperationCount:
isActive
setIsActive:
initWithBundleId:
initWithAlternateSystemApp:
setActivity:
blockOperationWithBlock:
arrayWithObjects:count:
addOperations:waitUntilFinished:
isTerminating
setIsTerminating:
prepareForDismissalWithCompletion:
complete
terminate
alternateSystemAppDidLaunch:
alternateSystemApp:didFailToLaunchWithError:
alternateSystemApp:didExitWithStatus:
alternateSystemApp:didTerminateWithSignal:
terminateWithCompletion:
_alternateSystemApp
_dispatch_queue
_launchOperation
_isActive
_isTerminating
TB,V_isActive
TB,V_isTerminating
isCancelled
willChangeValueForKey:
didChangeValueForKey:
start
isAsynchronous
isExecuting
isFinished
block
_executing
_finished
T@?,R,C,N,V_block
currentQueue
underlyingQueue
activity
initWithInfo:timeout:forResponseOnQueue:withHandler:
sendActions:withResult:
alternateSystemApp
_activity
T@"BKSAlternateSystemApp",R,N,V_alternateSystemApp
T@"NSObject<OS_os_activity>",&,N,V_activity
_queue_lockStateExtended:
_queue_setHasPasscodeIfNecessary:
_queue_createStashBag:
createStashBag:completion:completionQueue:
isEffectivelyLocked
initWithCapacity:
weakObjectsHashTable
keybagDidUnlockForTheFirstTime:
publicDescription
keybagWillBeginProcessingStateChange:
keybag:extendedStateDidChange:
keybagDidFinishProcessingStateChange:
setLockState:
setBackOffTime:
setFailedAttemptCount:
setPermanentlyBlocked:
setShouldWipe:
setRecoveryRequired:
setRecoveryPossible:
setEscrowCount:
lockState
lockSkippingGracePeriod:
unlockWithPasscode:error:
hasPasscodeSet
maxUnlockAttempts
createStashBag:completion:
hasBeenUnlockedSinceBoot
extendedState
beginRecovery:error:
waitForUnlockWithTimeout:
_queue_firstUnlockOccurred
_queue_handleKeybagStatusChanged
_calloutQueue
_queue_observerStateChangedCallbackBlocks
_queue_observers
_queue_hasPasscodeSet
_queue_hasUnlockedSinceBoot
_stateChangedNotifyToken
_firstUnlockNotification
T@"CSLSMobileKeyBagState",R,C,N
initWithSettings:
setDescriptionProvider:
containsValueForKey:
setFlag:forSetting:
decodeObjectForKey:
setObject:forSetting:
enumerateFlagsWithBlock:
settings
applySettings:
isEmpty
flagForSetting:
keyDescriptionForSetting:
settings:appendDescriptionToBuilder:forFlag:object:ofSetting:
settings:keyDescriptionForSetting:
settings:valueDescriptionForFlag:object:ofSetting:
appendDescriptionToBuilder:forFlag:object:ofSetting:
valueDescriptionForFlag:object:ofSetting:
flagForStateOverride:
objectForStateOverride:
setSettings:
_settings
T@"BSMutableSettings",&,N,V_settings
setFlag:forStateOverride:
setObject:forStateOverride:
deleteCharactersInRange:
currentState
appendFormat:
stateMachineLog
stateMachineName
willExitWithNextState:
willEnterWithPreviousState:
setCurrentState:
didExitWithNextState:
didEnterWithPreviousState:
enterState:
_currentState
decodeInt64ForKey:
encodeInt64:forKey:
effectiveOnWristState
sensorOnWristState
isWristDetectDisabled
isForceOnWristEnabled
isDeviceOnCharger
appendUInt64:withName:
date
confidence
setWristDetectDisabled:
setDate:
setTimestamp:
setDeviceOnCharger:
setForceOnWristEnabled:
setSensorOnWristState:
setConfidence:
_wristDetectDisabled
_forceOnWristEnabled
_deviceOnCharger
_date
_sensorOnWristState
_confidence
TQ,R,N,V_timestamp
T@"NSDate",R,N,V_date
Tq,R,N,V_sensorOnWristState
wristDetectDisabled
TB,R,N,GisWristDetectDisabled,V_wristDetectDisabled
forceOnWristEnabled
TB,R,N,GisForceOnWristEnabled,V_forceOnWristEnabled
deviceOnCharger
TB,R,N,GisDeviceOnCharger,V_deviceOnCharger
Tq,R,N,V_confidence
_setupDeviceRegistry
getActivePairedDevice
_deviceDidPair:
addObserver:selector:name:object:
_updateImageName
valueForProperty:
setAssetName:
disconnectedAssetNameProvider:updatedAssetName:
assetName
_deviceRegistry
_pairedDevice
_assetName
T@"NSString",R,N,V_assetName
initWithIdentifier:reason:flags:timeoutSeconds:
flags
timeoutSeconds
willKeepScreenOn
willForceDisplayOn
willDisableWristLowerGestures
willDisableWristRaiseGestures
shouldEnableCoverGesture
shouldIgnoreCoverGesture
willDisableLongCoverGesture
shouldRestartUserIdleTimer
isUserInitiated
doesTimeoutWhenDisplayOff
clearsUserHasInteracted
willPreventUnblank
shouldBlankScreen
willPreventAOT
willPreventAlwaysOnGestures
shouldTreatAlwaysOnSwipesAsTapToWake
shouldDisableAlwaysOnTapPosition
shouldTouchlock
willDisableCommitOnWakeMeasurement
decodeInt32ForKey:
decodeDoubleForKey:
encodeInt32:forKey:
encodeDouble:forKey:
willEnableDynamicWristRaise
_flags
_timeoutSeconds
T@"NSString",R,C,N,V_identifier
TI,R,N,V_reason
TI,R,N,V_flags
Td,R,N,V_timeoutSeconds
keepDisplayOn
TB,R,N,GwillKeepScreenOn
forceDisplayOn
TB,R,N,GwillForceDisplayOn
disableWristLowerGestures
TB,R,N,GwillDisableWristLowerGestures
disableWristRaiseGestures
TB,R,N,GwillDisableWristRaiseGestures
restartUserIdleTimer
TB,R,N,GshouldRestartUserIdleTimer
userInitiated
TB,R,N,GisUserInitiated
preventUnblank
TB,R,N,GwillPreventUnblank
blankScreen
TB,R,N,GshouldBlankScreen
preventAOT
TB,R,N,GwillPreventAOT
preventAlwaysOnGestures
TB,R,N,GwillPreventAlwaysOnGestures
treatAlwaysOnSwipesAsTapToWake
TB,R,N,GshouldTreatAlwaysOnSwipesAsTapToWake
disableAlwaysOnTapPosition
TB,R,N,GshouldDisableAlwaysOnTapPosition
touchlock
TB,R,N,GshouldTouchlock
enableCoverGesture
TB,R,N,GshouldEnableCoverGesture
ignoreCoverGesture
TB,R,N,GshouldIgnoreCoverGesture
disableLongCoverGesture
TB,R,N,GwillDisableLongCoverGesture
enableDynamicWristRaise
TB,R,N,GwillEnableDynamicWristRaise
disableCommitOnWakeMeasurement
TB,R,N,GwillDisableCommitOnWakeMeasurement
activeComplicationBundleIDsWithCompletion:
isComplicationBundleIDActive:withCompletion:
sharedComplicationService
setHandlerForButton:buttonAction:handler:
removeHandlerForButton:buttonAction:handlerToken:
disableInstantButtonTapsWithIdentifier:
setHandlerForButtons:event:handler:
removeHandlerForButtons:event:token:
T@"<CSLSButtonHandlerDelegate>",W,N,V_delegate
_removeAllHandlers
setHandlerForButtons:event:handlerWithTimestamps:
setHandlerForButtons:event:serviceIdentifier:handlerWithTimestamps:
removeHandlerForButtons:event:serviceIdentifier:
removeHandlerForButtons:event:
_buttonMaskTohandlerTokenDictionary
initWithServiceServerDelegate:
allValues
_withRecursiveLock:
setRunning:error:
_addSessionServiceObserver:bundleID:completion:
_addSessionTypeObserver:type:completion:
isRunning
isNearOrPastExpiration
sessionID
restartSession:completion:
executeOrQueueForReason:serverBlock:
startSession:completionWithExpirationDate:
type
setExpirationDate:
_addActiveSession:
endSession:options:completion:
_sessionEnded:error:
setErrorCode:
setStartDate:
scheduleSession:startDate:options:completion:
cancelScheduledSession:completion:
arrayWithCapacity:
replaceLocalRunningSessions:
fetchAllRunningSessionsOfType:completion:
existingRunningSessionsForBundleID:completion:
existingSessionsForBundleID:completion:
existingScheduledSessionsForBundleID:completion:
addSessionServiceObserverForBundleID:completion:
removeSessionServiceObserverForBundleID:completion:
_addSessionTypeObserver:type:
startObservingSessionType:completion:
numberWithInteger:
_stopObservingSessionType:completion:
stopObservingSessionType:completion:
bundleRecordForCurrentProcess
sessionForBundleID:type:
fetchStickyCapableApps:
takeSessionSuppressionAssertion:
releaseSessionSuppressionAssertion:
bundleID
addObjectsFromArray:
sessionDidStop:error:completion:
sessionDidStopRunningForAppBundleID:scheduled:error:completion:
sessionDidStopRunningForAppBundleID:scheduled:completion:
sessionDidStopRunningForAppBundleID:scheduled:
_findSession:
_observersForSession:mask:
_sessionEnded:uuid:bundleID:startWasScheduled:observers:error:completion:
lastStartWasScheduled
expirationDate
setLastStartWasScheduled:
startDate
sessionDidStart:error:completion:
sessionDidStartRunningForAppBundleID:scheduled:completion:
sessionDidStartRunningForAppBundleID:scheduled:
sessionWithUUIDEnded:bundleID:startWasScheduled:error:completion:
sessionStarted:error:completion:
sessionEnded:error:completion:
handleInvalidation
handleInterruption
appBundleIDForCurrentProcess
startSession:completion:
endSession:completion:
defaultSession:
existingRunningSessions:
existingScheduledSessions:
addSessionServiceObserver:bundleID:completion:
removeSessionServiceObserver:bundleID:completion:
addSessionTypeObserver:type:completion:
removeSessionTypeObserver:type:completion:
_activeSessions
_scheduledSessions
_serviceObserversPerAppBundleID
_sessionObserversBySessionType
_sessionServerConnection
_recursiveLock
_activeSessionsTransaction
mainBundle
null
initWithServiceServerDelegate:connection:
initWithName:onQueue:
_handleInvalidation
_executeServerBlock:reason:
eventWithName:handler:
executeOrInsertEvent:atPosition:
relinquish
initWithEventQueue:reason:
_releaseEventQueueLock:
_handleInterruption
_startConnection
connect:completion:
_eventQueue
_eventQueueQueue
_eventQueueLock
_invalidated
T@"<CSLSSessionServerConnectionDelegate>",W,N,V_delegate
theaterModeDidChange:
setEnabled:
isEnabled
_theaterModeInterface
TB,N,GisEnabled
T@"<CSLSTheaterModeDelegate>",W,N,V_delegate
initWithType:
firstObject
removeObjectAtIndex:
addNonTypedOutstandingSendBlock:
dequeueNextNonTypedOutstandingSendBlock
setOutstandingSendBlock:forType:
dequeueOutstandingSendBlockForAnyType
waitingForSend
setWaitingForSend:
_nonTypedOutstandingSendBlocks
_outstandingSendBlocksByType
_waitingForSend
T@"NSXPCConnection",W,N,V_connection
TB,N,V_waitingForSend
weakToStrongObjectsMapTable
sendMessageOnConnection:msgTypeID:messageSendBlock:
_sendNextMessageForConnection:
keyEnumerator
scheduleSendBarrierBlock:
sendMessageOnConnection:messageSendBlock:
stopTrackingConnection:
purgeClosedConnections
_weakConnections
initWithPosition:timestamp:
position
_position
T{CGPoint=dd},R,N,V_position
viewIdentifier
setViewIdentifier:
uniqueIdentifier
setUniqueIdentifier:
whileActiveOnly
setWhileActiveOnly:
_whileActiveOnly
_viewIdentifier
_uniqueIdentifier
T@"NSString",&,N,V_viewIdentifier
T@"NSString",&,N,V_uniqueIdentifier
TB,N,V_whileActiveOnly
requestDefaultURLSessionPolicyForPID:completion:
defaultURLSessionPolicyForPID:
isDismissable
displaysWhileLocked
transitionStyle
isjustPinEntry
justPinEntryIsSimpleCode
justPinEntryCodeLength
appendInteger:withName:
justPinEntryMinCodeLength
justPinEntryMaxCodeLength
justPinEntryCodeTitle
setDismissable:
setDisplaysWhileLocked:
setTransitionStyle:
setJustPinEntry:
setJustPinEntrySimpleCode:
setJustPinEntryCodeLength:
setJustPinEntryCodeTitle:
setJustPinEntryMinCodeLength:
setJustPinEntryMaxCodeLength:
_dismissable
_displaysWhileLocked
_justPinEntry
_justPinEntrySimpleCode
_transitionStyle
_justPinEntryCodeLength
_justPinEntryMinCodeLength
_justPinEntryMaxCodeLength
_justPinEntryCodeTitle
dismissable
TB,N,GisDismissable,V_dismissable
TB,N,V_displaysWhileLocked
TQ,N,V_transitionStyle
justPinEntry
TB,N,GisjustPinEntry,V_justPinEntry
justPinEntrySimpleCode
TB,N,GjustPinEntryIsSimpleCode,V_justPinEntrySimpleCode
TQ,N,V_justPinEntryCodeLength
TQ,N,V_justPinEntryMinCodeLength
TQ,N,V_justPinEntryMaxCodeLength
T@"NSString",C,N,V_justPinEntryCodeTitle
isOnOperation
source
hasPosition
direction
initIsOnOperation:identifier:source:hasPosition:position:direction:timestamp:
appendPoint:withName:
hasDirection
appendInt64:withName:
appendTimeInterval:withName:decomposeUnits:
initWithBacklightRequest:
T{CGPoint=dd},R,N
_isOnOperation
_hasPosition
_source
_direction
TB,R,N,V_isOnOperation
TQ,R,N,V_source
TB,R,N,V_hasPosition
TQ,R,N,V_direction
previous
next
setNext:
setPrevious:
unlink
_next
_previous
T@"CSLLinkedListNode",&,N,V_next
T@"CSLLinkedListNode",&,N,V_previous
object
unsafe_Object
initWithObject:
_object
allocateForObject:
_removeNode:
initWithStorageAllocator:
begin
rbegin
rend
erase:
_head
_tail
_mutationsCtr
_allocator
_count
TQ,R,N,V_count
trackObject:delegate:userInfo:
noteWeakDealloc:
setConnectionState:
status
connectionStatusDidChange:
wifiSignalStrengthBarsDidChange:
wifiSignalStrengthBars
registrationStatusDidChange:
registrationStatus
simActiveDidChange:
setWifiSignalStrengthBars:
setRegistrationStatus:
setCellularSignalStrengthBars:
setSimActive:
setStatus:
_informObserversOfChangeInStatus:
_informObserversOfChangeInWifiSignalStrength:
_informObserversOfChangeInRegistration:
_informObserversOfChangeInCellularSignalStrength:
_informObserversOfChangeInSimActive:
cellularSignalStrengthBarsDidChange:
lastKnownCountryCodeDidChange:
overrideSatus:
overrideWifiSignalStrengthBars:
overrideCellularSignalStrengthBars:
overrideRegistrationStatus:
isCompanionConnected
cellularSignalStrengthBars
lastConnectedDate
setLastConnectedDate:
lastKnownCountryCode
connectionState
setIsCompanionConnected:
_connectionStateObserver
_simActive
_isCompanionConnected
_wifiSignalStrengthBars
_cellularSignalStrengthBars
_status
_registrationStatus
_lastConnectedDate
_lastKnownCountryCode
_connectionState
T@"CSLSConnectionState",&,N,V_connectionState
TQ,N,V_status
TB,N,V_isCompanionConnected
Ti,N,V_wifiSignalStrengthBars
Tq,N,V_registrationStatus
Ti,N,V_cellularSignalStrengthBars
TB,N,V_simActive
T@"NSDate",&,V_lastConnectedDate
T@"NSString",R,V_lastKnownCountryCode
audioSlot
hapticSlot
numberWithInt:
audioGain
hapticGain
strongAudioGain
strongHapticGain
decodeIntForKey:
setType:
setAudioSlot:
setAudioGain:
setStrongAudioGain:
setHapticSlot:
setHapticGain:
setStrongHapticGain:
encodeInt:forKey:
_buildDescriptionWithBuilder:
appendInt:withName:
toAOPDictionaries
toAPIndexDictionariesWithStrength:
_audioSlot
_hapticSlot
_type
_audioGain
_strongAudioGain
_hapticGain
_strongHapticGain
Tq,N,V_type
TS,N,V_audioSlot
Td,N,V_audioGain
Td,N,V_strongAudioGain
TS,N,V_hapticSlot
Td,N,V_hapticGain
Td,N,V_strongHapticGain
setRealClient:
initializeWithButtons:
deactivate
deactivate:
_reinitializeAndActivateIfNecessary
initWithButtons:completion:
buttons
active
setActive:
completion
_active
_completion
_buttons
T@?,R,C,N,V_completion
TQ,R,N,V_buttons
TB,N,V_active
realClient
_realClient
T@"<CSLSButtonTapAssertionClientInterface>",W,N,V_realClient
initWithPreferredDate:userString:uuid:
initWithPreferredDate:userString:uuid:leeway:
initWithPreferredDate:userString:uuid:leeway:schedulingOptions:
decodeDictionaryWithKeysOfClass:objectsOfClass:forKey:
doubleValue
_buildDescriptionWithBuilder:verbose:
initWithPreferredDate:userString:
setPersist:
persist
preferredDate
setPreferredDate:
userString
setUserString:
schedulingOptions
setSchedulingOptions:
_persist
_preferredDate
_userString
_schedulingOptions
T@"NSDictionary",&,N,V_schedulingOptions
T@"NSDate",&,N,V_preferredDate
T@"NSString",&,N,V_userString
sessionForBundleID:withURL:type:
sessionWithURL:type:
initForBundleID:url:type:
initRequiringSecureCoding:
finishEncoding
encodedData
initForReadingFromData:error:
coder
sessionWithSession:
sessionDidStart:
sessionDidStop:error:
dateWithTimeIntervalSinceNow:
compare:
initWithUUIDString:
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceReferenceDate
sessionOfType:
sessionTypeIsExtendedRuntime:
errorCode
appShouldBeAskedToHandle
setBundleID:
setUrl:
isRemote
setRemote:
setSessionID:
isDismissible
setDismissible:
isLaunchable
setLaunchable:
_running
_errorCode
_lastStartWasScheduled
_remote
_dismissible
_launchable
_bundleID
_url
_sessionID
_expirationDate
_startDate
T@"NSUUID",C,N,V_sessionID
dismissible
TB,GisDismissible,V_dismissible
launchable
TB,GisLaunchable,V_launchable
T@"NSDate",&,N,V_expirationDate
T@"NSDate",&,N,V_startDate
T@"<CSLSSessionDelegate>",W,N,V_delegate
T@"NSString",C,N,V_bundleID
T@"NSURL",C,N,V_url
running
TB,R,N,GisRunning
TB,N,V_lastStartWasScheduled
remote
TB,N,GisRemote,V_remote
identifierWithPid:
predicateMatchingIdentifier:
handleForPredicate:error:
bundle
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
containingBundleRecord
protocol
containingBundle
auditToken
needPasscodeForHSA2EscrowRecordUpdate:
unlockScreenType
setPassphrase:
prepareHSA2EscrowRecordContents:reply:
requirePasscode
noteAuthenticationSucceededWithPasscode:
setSnapshotContext:forBundleID:
setSnapshotContext:forBundleID:completion:
snapshotContextForBundleID:completion:
snapshotWhenBackgroundProcessingCompletes:completion:
registerPrivilegedSnapshotClient:withPriority:leeway:usesBudget:returnToPrimaryUIInterval:completion:
snapshotAppWithBundleID:completion:
clientExtendedData
fromDictionary:
_getSnapshotScheduleItemFromAction:
getMutableSettingsFromContext:
setClientExtendedData:
getReasonFromAction:
extendFBSnapshotContext:withCSLSSnapshotContext:
getUserInfoFromAction:
restoreToDefaultF5StateWithDisabledAlerts:completion:
restoreToStateInPList:withDisabledAlerts:completion:
_reestablishState
sharedNotificationCenterService
restoreToDefaultF5StateWithCompletion:
restoreToStateInPList:completion:
_plistPath
_disableAlerts
activateAssertionWithIdentifier:
applicationLaunchSupressionAssertion
_uid
assertion
setAssertion:
_assertion
T@,W,N,V_assertion
setUserInitiated:
requestWithReason:userInitiated:
_userInitiated
TI,N,V_reason
TB,N,GisUserInitiated,V_userInitiated
_createConnectionIfNecessary
beginObserving
observersNeedingInitialState
removePointerAtIndex:
currentBacklightState
_informObserver:oldState:newState:reason:
endObserving
onForIdentifier:reason:isUserInitiated:
offForIdentifier:reason:isUserInitiated:
setUuid:
specification
takeAssertion:withUUID:completion:
takeAssertion:withUUID:
releaseAssertion:completion:
_dropConnection
backlightDidChange:from:to:
backlightDidTurnOn:forReason:
backlightDidTurnOff:forReason:
performTimeout
localizedDescription
assertionTimedOut:
backlightDidChangeFrom:to:forReason:
requestRejectedForError:shouldRaiseException:
takeBacklightAssertion:completion:
releaseBacklightAssertion:completion:
setCurrentBacklightState:
setObserversNeedingInitialState:
_assertionsDictionary
_backlightOnRequests
_currentBacklightState
_observersNeedingInitialState
Tq,N,V_currentBacklightState
T@"NSPointerArray",&,N,V_observersNeedingInitialState
_pid
_assertionID
T@"NSString",&,N,V_assertionID
Ti,N,V_pid
version
shouldPreventExit
sensitiveUIMonitor:sensitiveUIChanged:
initWithSuiteName:
_defaultDefaults
initForVersion:withDelegate:userDefaults:
_isSensitiveUIEnabledForVersion:withDefaults:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
_versionChanged:
_isSensitiveUIEnabledForBuild
_isSensitiveUIEnabledForInternalTest
stringForKey:
_isSensitiveUIEnabledForInternalTest:
setShouldPreventExit:
isSensitiveUIEnabledForVersion:
initForVersion:withDelegate:
observeValueForKeyPath:ofObject:change:context:
setSensitiveUIEnabled:forVersion:
isSensitiveUIEnabled
_exitingDelegate
_enabled
_userDefaults
_version
T@"<CSLSSensitiveUIMonitoring>",R,W,N,V_delegate
T@"NSString",R,C,N,V_version
isRunningInStoreDemoMode:
navigateToLocation:dockBundleID:activateDockApp:withCompletion:
initWithService:
connectWithMachServiceName:
_remoteClientWithMachServiceName:
remoteClientWithMachServiceName:
remoteClient
noBudget
inForeground
snapshotting
sendData:toDestinations:priority:options:identifier:error:
sharedPhotoLibrary
fileURLWithPath:
creationRequestForAssetFromVideoAtFileURL:
performChanges:completionHandler:
defaultManager
attributesOfItemAtPath:error:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendImageData:imageDate:forType:
sendScreenRecording:
_idsService
_updateInvertedValue
_updateWristOrientation
setInverted:animated:
sharedDeviceOrientation
isInverted
wristOrientation
_isInverted
_wristOrientation
_invertUINotifyToken
_wristOrientationNotifyToken
initWithStateMachine:
stateMachine
_stateMachine
defaultTintColorName
serial
serviceClass:
serviceForClientIdentifier:
addStateUpdateListener:withCompletionHandler:
queryCurrentStateWithError:
_updateAssetNameWithDNDState:
removeStateUpdateListener:
dndModeAssetNameProvider:updatedAssetName:tintColorName:
activeModeIdentifier
modeConfigurationForModeIdentifier:error:
mode
symbolImageName
tintColorName
setAssetName:tintColorName:
stateService:didReceiveDoNotDisturbStateUpdate:
initWithDNDClientIdentifier:
queue
setQueue:
stateService
setStateService:
modeConfigurationService
setModeConfigurationService:
_tintColorName
_stateService
_modeConfigurationService
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"DNDStateService",&,N,V_stateService
T@"DNDModeConfigurationService",&,N,V_modeConfigurationService
T{os_unfair_lock_s=I},N,V_lock
T@"NSString",R,N,V_tintColorName
setSupportsLTE:
setMaxSignalStrengthBars:
setServiceState:
byApplyingOverrides:
_lock_deepCopyTakenAssertions
_takeRemoteAssertion:uuidString:
_retakeAssertions
_sendMessageType:withMessage:withReplyHandler:waitForReply:
takeActivatingUIAssertion:forUUID:
releaseActivatingUIAssertionForUUID:
_takenAssertions
_assertionUUID
setLayoutRole:
otherSettings
isAlertElement
alertIdentifier
appendObject:withName:skipIfNil:
initWithIdentifier:layoutRole:
isCarouselElement
layoutRole
setAlertIdentifier:
_layoutRole
carouselElement
TB,R,N,GisCarouselElement
alertElement
TB,R,N,GisAlertElement
T@"NSString",R,C,N
provideAppViewListImageDataForWidth:height:scale:completion:
xpcServerInterface
T@"NSXPCConnection",&,V_connection
appBacklightPrivacySettingsToDictionary:
settingsForAllApps
setSettingsForAllApps:
_appBacklightPrivacySettingsByBundleID
_appBacklightPrivacySettingsForAllApps
listenForLocaleChangesIfNecessary
stringByReplacingOccurrencesOfString:withString:
_handleLocaleChange
stringFromNumber:
dateFormatFromTemplate:options:locale:
localeIdentifier
hasPrefix:
substringFromIndex:
setNumberStyle:
setPositiveFormat:
currentLocale
initWithLocaleIdentifier:
requestRestartForLanguageChange
requestDismissalWithImageData:
checkin
initWithMask:event:
mask
event
dismissBuddyWithImageData:
restartForLanguageChange
registerForButtons:event:handler:
removeRegistration:
_buttonRegistrations
_buttonListener
matchesMask:event:
_mask
_event
TQ,R,N,V_mask
TQ,R,N,V_event
_refreshStateAndNotify:
_refreshKeyBagState:shouldNotify:
timeUntilUnblockedSinceReferenceDate
_withReadLockSync:
deviceLockModelRequestsDeviceWipe:
_withWriteLockAsync:
effectiveBoolValueForSetting:
valueRestrictionForFeature:
intValue
_isDeviceWipePreferenceEnabled
failedAttemptCount
backOffTime
_withWriteLockSync:
deviceLockStateMayHaveChangedForModel:
notePasscodeUnlockSucceeded
notePasscodeUnlockFailedWithError:
performPasswordTest:
clearBlockedState
refreshBlockedState
handleKeyBagStateChanged:
isTemporarilyBlocked
isPermanentlyBlocked
pendingWipe
_unblockTime
_permanentlyBlocked
_pendingWipe
T@"<CSLSUserAuthenticationModelDelegate>",W,N,V_delegate
temporarilyBlocked
TB,R,N,GisTemporarilyBlocked
permanentlyBlocked
TB,R,N,GisPermanentlyBlocked
Td,R,N
isBundleIDEligibleForBackgroundWork:completion:
isBundleIDEligibleForBackgroundHealthKitWork:completion:
sharedEligibilityService
T@"CSLSBackgroundServiceConnection",R,N,V_connection
eventTypeName:
isEqualToDate:
eventType
reasonName:
isEqualToAppEvent:
setEventType:
_eventType
T@"NSDate",&,N,V_date
TQ,N,V_eventType
transitionTypeName:
transitionType
setTransitionType:
isFavorite
setIsFavorite:
setCount:
_isFavorite
_transitionType
TQ,N,V_transitionType
TB,N,V_isFavorite
TQ,N,V_count
addAppEvent:
recentEvents
addStateTransition:
stateTransitions
displayName
memoryUsage
setMemoryUsage:
setIsRunning:
dockIndex
setDockIndex:
isComplication
setIsComplication:
setRecentEvents:
setStateTransitions:
setDisplayName:
_isRunning
_isComplication
_memoryUsage
_dockIndex
_recentEvents
_stateTransitions
_displayName
T@"NSMutableArray",&,N,V_recentEvents
T@"NSMutableArray",&,N,V_stateTransitions
TQ,N,V_memoryUsage
TB,N,V_isRunning
TQ,N,V_dockIndex
TB,N,V_isComplication
T@"NSString",C,N,V_displayName
currentAppStatsWithCompletion:
sharedAppStatsService
_resendPriorities
priorityStateCache
setPriorityStateCache:
_priorityStateCache
T@"CSLSBackgroundServiceConnection",&,N,V_connection
T@"CSLSPrivilegedBackgroundPriorityStateCache",&,N,V_priorityStateCache
getOnWristState:
forceOnWristUpdate
requestWristDetectionDisabledStatusWithCompletion:
onWristStateChanged:
initWithConnection:
initWithListenerEndpoint:
CSLOnWristServerExportedInterface
CSLOnWristClientExportedInterface
_getCSLSWristState:notify:
_activate
isActivated
_queue_onWristStateChanged:
lastState
setLastState:
onWristMonitor:didUpdateOnWristState:fromState:
_queue_didGetOnWristState:notify:completion:
_queue_updateState:notify:
setChangeHandler:
getWristState:
changeHandler
exportedObject
_lastState
_changeHandler
_exportedObject
T@"CSLOnWristClientExportedObject",&,N,V_exportedObject
T@"CSLSOnWristState",&,V_lastState
TB,GisActivated,V_activated
T@?,C,N,V_changeHandler
T@"<CSLSOnWristMonitorDelegate>",W,N,V_delegate
T@"<CSLOnWristClientExportedInterface>",W,N,V_delegate
observerList
setObserverList:
observedChanged:what:
updateObservers:what:
_observerList
T@"CSLWeakLinkedList",&,N,V_observerList
initWithDate:uuid:userInfo:
setScheduleFreebee:
setSystemScheduled:
setReturnToPrimaryUI:
isEqualToDictionary:
systemScheduled
returnToPrimaryUI
scheduleFreebee
scheduleItemWithDate:uuid:userInfo:
_boolFromDictionary:forKey:
_reasonFromDictionary:forKey:
_plistClasses
earlierDate:
scheduleItemWithDate:userInfo:
scheduleSystemItemWithDate:reason:
coalesce:
isEqualToScheduleItem:
rescheduleWithDate:
amendWithHigherPriorityFlagsAndReason:
_systemScheduled
_returnToPrimaryUI
_scheduleFreebee
T@"NSDate",R,C,N,V_date
T@"NSDictionary",R,C,N,V_userInfo
appendDictionarySection:withName:multilinePrefix:skipIfEmpty:
initWithReason:payload:
_payload
T@"NSString",R,N,V_reason
T@"NSDictionary",R,N,V_payload
activationOptionsForNSURLSessionWithIdentifier:
maxSignalStrengthBars
appendTelephonyConnectionState:
_supportsLTE
_maxSignalStrengthBars
_serviceState
TB,R,N,V_supportsLTE
TB,R,N,V_simActive
TQ,R,N,V_maxSignalStrengthBars
TQ,R,N,V_serviceState
handleUITriggerWithName:dictionary:reason:completion:
addUITriggerName:usage:
removeUITriggerName:
CSLSUITriggerClientExportedInterface
usagesByTriggerName
addUITriggerRemoteProvider:forUITriggerName:englishUsage:
removeUITriggerRemoteProvider:forUITriggerName:
_providersByName
_usagesByName
_service
connectionStateDidChange:
overridesDidChange:
connectWithCompletion:
setOverrides:
clientInterface
connectWithOverrider:
observer
overrider
updateOverrides:
configureOverrides:
setObserver:
setOverrider:
_observer
_overrider
T@"CSLSConnectionStateObserver",W,N,V_observer
T@"CSLSConnectionStateOverrider",W,N,V_overrider
overrides
observeOverridesWithBlock:
overridesChangedBlock
_overrides
_overridesChangedBlock
T@?,R,N,V_overridesChangedBlock
T@"CSLSConnectionStateOverrides",R,N,V_overrides
initWithConnection:hapticsController:
aopHapticsController
detentService:detentsDisabledChanged:
detentsDisabled
_callObserver:selector:value:
detentService:detentsDebugChanged:
detentsDebug
detentService:flashDetentsChanged:
flashDetents
detents
detentService:detentsChanged:
setDetentsDisabled:
_preferencesQueue_callObserversWithSelector:value:
setDetentsDebug:
setFlashDetents:
_queue_detentsChanged:
setDetentsByType:
setDetents:
playDetentOfType:strong:completion:
_queue_playDetentOfType:strong:completion:
_queue_takeAssertion:
_queue_releaseAssertion:
isTest
addPreferencesObserver:
removePreferencesObserver:
playDetentOfType:completion:
setTest:
setAopHapticsController:
detentsByType
_updateQueue
_preferencesQueue
_metricsQueue
_assertionCount
_preferenceObservers
_test
_detentsDisabled
_detentsDebug
_flashDetents
_aopHapticsController
_detents
_detentsByType
T@"AOPHapticsController",&,N,V_aopHapticsController
TB,V_detentsDisabled
TB,V_detentsDebug
TB,V_flashDetents
T@"NSArray",&,V_detents
T@"NSDictionary",&,N,V_detentsByType
initWithMKBLockStateInfo:
longLongValue
recoveryRequired
recoveryPossible
shouldWipe
escrowCount
numberWithLongLong:
recoveryEnabled
T@"NSDictionary",R,N,V_state
_mutableState
setRecoveryEnabled:
T@"NSDictionary",&,D,N
Tq,D,N
Td,D,N
shutdownForEcoMode:
addEventListener:
removeEventListener:
buttonEventListener:didObserveEvent:forButton:
_sendEvent:forButton:
T@"<CSLSRawButtonEventListenerDelegate>",R,W,N,V_delegate
service
setService:
T@"<CSLSRawButtonEventListenerService>",W,N,V_service
addUIProvider:forUITriggerName:englishUsage:
removeUIProvider:withUITriggerName:
_controller
requestUITriggerWithProvider:UITriggerName:withDictionary:withReason:withCompletion:
wrapperFromProvider:
initWithProvider:delegate:
_provider
initWithDelegate:machServiceName:
_remoteClient
_remoteService
initWithNullableMachServiceName:
requestUITriggerWithRegistration:UITriggerName:withDictionary:withReason:withCompletion:
initWithMachServiceName:
_registration
caseInsensitiveCompare:
initWithBundleID:interDelay:operations:
setInterDelay:
setOperations:
decodeFloatForKey:
interDelay
encodeFloat:forKey:
operations
parseStringOperations:
powerTestWithBundleID:interDelay:operations:
_interDelay
_operations
T@"NSString",&,N,V_bundleID
Td,N,V_interDelay
T@"NSArray",C,N,V_operations
initWithBundleID:reason:
take
taken
_taken
TB,R,N,V_taken
T@"NSString",R,N,V_bundleID
invalidateAssertion:
checkIn
handledButtonEventWithStatus:
registerForButtons:event:
unregisterForButtons:event:
setInstantButtonTapGesturesEnabled:
handleButtons:event:firstDownTime:lastUpTime:
_resendButtonHandlersFromCache
disableInstantButtonTaps
handlerCache
setHandlerCache:
_assertions
_handlerCache
T@"CSLSButtonListenerCache",&,V_handlerCache
T@"<CSLSButtonListenerClientInterface>",W,N,V_realClient
unsafe_invalidate
presentWithSettings:withReply:
cancelPrompt
internalQueue
setXpcConnection:
showPromptWithSettings:failureHandler:
passcodePromptWasDismissed:
passcodePromptDidBailForUserHasAlphanumericPasscode:
passcodePrompt:didProvidePasscode:
showDismissablePrompt:withFailureHandler:
setInternalQueue:
xpcConnection
_internalQueue
_xpcConnection
T@"<CSLSPasscodePromptDelegate>",W,N,V_delegate
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
T@"NSXPCConnection",&,N,V_xpcConnection
connectType:completion:
setType:enabled:completion:
updateEnabled:
CSLSSystemStateXPCServerInterface
CSLSSystemStateXPCClientInterface
condition
setFirstValueReceived:
signal
wait
didUpdate
T@?,C,N
setCondition:
firstValueReceived
_firstValueReceived
_didUpdate
_condition
TB,N,V_enabled
T@"NSCondition",&,N,V_condition
TB,N,V_firstValueReceived
TQ,R,N,V_type
T@?,C,N,V_didUpdate
unpairWithDevice:shouldObliterate:operationHasBegun:
notePasscodeEntryForUnlockDidBegin
notePasscodeEntryForUnlockDidCancel
notePasscodeUnlockDidSucceedWithPasscode:
notePasscodeUnlockDidFailWithError:
requestClearBlockedState
isBlocked
model
setModel:
secureBackupHelper
setSecureBackupHelper:
suStashHelper
setSuStashHelper:
_model
_secureBackupHelper
_suStashHelper
T@"CSLSUserAuthenticationModel",&,N,V_model
T@"CSLSSecureBackupHelper",&,N,V_secureBackupHelper
T@"CSLSSoftwareUpdateStashHelper",&,N,V_suStashHelper
CSLSUITriggerServerExportedInterface
_invalidateConnectionFromServer
_reestablishTriggersWithServer
_connect
_createXPCService
listener:shouldAcceptNewConnection:
T@"<CSLSUITriggerRemoteClientServiceDelegate>",W,N
connectionToServer
setConnectionToServer:
connectionFromServer
setConnectionFromServer:
listener
setListener:
machServiceName
setMachServiceName:
_connectionToServer
_connectionFromServer
_listener
_machServiceName
_serviceRestartedNotificationToken
_activeTriggers
T@"NSXPCConnection",&,N,V_connectionToServer
T@"NSXPCConnection",&,N,V_connectionFromServer
T@"NSXPCListener",&,N,V_listener
T@"NSString",C,N,V_machServiceName
T@"<CSLSUITriggerRemoteClientServiceDelegate>",W,N,V_delegate
setPrepareForUnblankBlock:
_prepareForUnblankBlock
T@?,C,N,V_prepareForUnblankBlock
initWithSpecification:timeoutBlock:
initWithIdentifier:reason:flags:timeoutSeconds:timeoutBlock:
_releaseAssertionCompletion:logAction:logIfNotAsserted:
takeAssertionWithCompletion:
logAction:ofType:
releaseAssertionCompletion:
isAsserted
secondsSinceTaken
takeAssertion
releaseAssertion
timeoutBlock
_asserted
_assertionProvider
_ownedObject
_takenMachTime
_specification
_timeoutBlock
T@"CSLSBacklightAssertionSpecification",R,N,V_specification
T@?,R,N,V_timeoutBlock
asserted
TB,R,N,GisAsserted
initWithIdentifier:reason:flags:pid:timeoutSeconds:timeoutBlock:
ownedObject
setOwnedObject:
T@"NSObject<CSLSBacklightAssertionProvider>",W,N
T@"NSString",&,N
Ti,N
T@,&,N
initWithBacklightAssertion:
takeWithAssertion:
_backlightAssertion
takeAssertionWithIdentifier:reason:flags:timeoutSeconds:timeoutBlock:completion:
takeAssertionWithIdentifier:reason:flags:timeoutSeconds:timeoutBlock:
initWithReason:forDisplay:willPreventScreenOff:willPreventGestures:timeoutSeconds:timeoutBlock:
initWithReason:forDisplay:willPreventDim:willPrevenScreenOff:timeoutSeconds:timeoutBlock:
initWithReason:forDisplay:willPreventDim:willPreventScreenOff:willPreventGestures:timeoutSeconds:timeoutBlock:
tickle
display
willPreventDim
willPreventScreenOff
willPreventGestures
@16@0:8
v16@0:8
v24@0:8@?16
Q16@0:8
v24@0:8@16
B24@0:8@16
@"NSMutableSet"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
B16@0:8
v48@0:8@16@24q32@?40
v48@0:8@"NSString"16@"NSDictionary"24q32@?<v@?B@"NSString">40
v24@0:8@?<v@?@"NSDictionary">16
@"NSXPCConnection"
@20@0:8B16
@24@0:8@16
v20@0:8B16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v68@0:8@16@24@32Q40Q48B56@?60
v32@0:8@16@?24
v40@0:8@16@24@?32
v48@0:8@16@24Q32@?40
v44@0:8q16@24B32@?36
v68@0:8@"NSString"16@"NSString"24@"NSString"32Q40Q48B56@?<v@?>60
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v40@0:8@"NSString"16@"NSString"24@?<v@?>32
v48@0:8@"NSString"16@"NSString"24Q32@?<v@?>40
v24@0:8@?<v@?>16
v32@0:8@"NSString"16@?<v@?>24
v44@0:8q16@"NSString"24B32@?<v@?>36
v24@0:8@?<v@?@"NSArray">16
v28@0:8@?16B24
@"<CSLSThermalTrapXPCClientDelegate>"
@32@0:8@16@24
@24@0:8^{_NSZone=}16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@"CSLSCompanionConnectionState"
@"CSLSRadioConnectionState"
@"CSLSTelephonyConnectionState"
@"CSLSWifiConnectionState"
B32@0:8i16S20^@24
q16@0:8
f20@0:8i16
B32@0:8@16^@24
@?16@0:8
@"NSObject<OS_dispatch_queue>"
@"CSLSThermalTrapXPCClient"
@"<CSLSThermalTrapDelegate>"
v32@0:8Q16@?24
v32@0:8Q16@?<v@?@"NSError"@"NSString">24
@"NSMutableArray"
@44@0:8Q16@24B32B36B40
@"NSDate"
@32@0:8@16B24B28
@"NSString"
v32@0:8@"NSString"16@?<v@?@"CSLSApplicationInfo">24
v24@0:8@?<v@?B>16
@40@0:8@16@24@32
@"<CSLSSystemStateInterface>"
@"<CSLSWaterLockDelegate>"
@32@0:8q16@24
@24@0:8q16
B32@0:8@16q24
v32@0:8Q16@?<v@?>24
v24@0:8Q16
v32@0:8@16Q24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSHashTable"
v32@0:8B16B20@?24
v40@0:8B16B20q24@?32
v24@0:8q16
v28@0:8B16q20
v32@0:8B16B20@?<v@?@"NSError">24
v40@0:8B16B20q24@?<v@?@"NSError">32
@32@0:8@?16@?24
@52@0:8Q16d24B32q36d44
d16@0:8
v24@0:8d16
v60@0:8@16Q24d32B40q44d52
v52@0:8@16Q24d32B40d44
v52@0:8@16Q24d32B40q44
@"CSLSafeMutableDictionary"
@32@0:8Q16Q24
v40@0:8Q16Q24@32
v32@0:8Q16Q24
@"NSMutableDictionary"
v32@0:8@"CSLSDockAllowLaunchAssertion"16@?<v@?@"NSError">24
@24@0:8@?16
@"CSLSDockAllowLaunchAssertion"
{os_unfair_recursive_lock_s="ourl_lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"ourl_count"I}
v24@0:8@"CSLSSuspendSystemGestureAssertionConfiguration"16
v36@0:8:16@24B32
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSPointerArray"
@"CSLSConnectionStateXPCClient"
@"CSLSConnectionState"
Vv32@0:8@16@?24
Vv24@0:8@16
Vv32@0:8@"NSString"16@?<v@?B>24
Vv24@0:8@"NSString"16
v32@0:8@?16@?24
@"NSArray"
@32@0:8@16Q24
v28@0:8@16i24
v36@0:8@16i24@28
v28@0:8@"NSString"16i24
v36@0:8@"NSString"16i24@"NSString"28
v36@0:8@"NSString"16i24@"NSArray"28
@24@0:8Q16
@"CSLSAlertSuppressionToken"
@36@0:8@16@24B32
@44@0:8@16@24@32B40
@24@0:8@"NSObject<OS_xpc_object>"16
v24@0:8@"NSObject<OS_xpc_object>"16
@"NSDictionary"
v20@0:8i16
v28@0:8i16B20B24
v36@0:8i16B20B24@?28
v28@0:8i16r*20
v32@0:8i16r*20B28
v40@0:8i16@20B28r*32
v40@0:8i16d20r*28B36
v28@0:8i16@20
v36@0:8i16d20@28
v28@0:8i16@?20
@"CSLSSuspendSystemGestureAssertionConfiguration"
v32@0:8Q16@24
v24@0:8@"CSLSWakeGesture"16
v32@0:8Q16@"NSDate"24
v28@0:8@16B24
v32@0:8@16B24B28
@"CSLSConcurrentObserverStore"
v24@0:8B16B20
@32@0:8Q16@24
@"CSLSBinaryTransitionStateMachineConfiguration"
@"<CSLSBinaryTransitionStateMachineDelegate>"
Q32@0:8Q16Q24
v40@0:8Q16Q24Q32
C32@0:8Q16Q24
C16@0:8
v20@0:8C16
[16Q]
@"NSObject<OS_os_log>"
v32@0:8@"CSLSBinaryTransitionStateMachine"16Q24
v32@0:8@16@24
v32@0:8@"CSLSBackgroundTaskRequest"16@"NSString"24
v40@0:8@"CSLSBackgroundTaskRequest"16@"NSString"24@?<v@?@"CSLSBackgroundTaskRequest">32
v40@0:8@"CSLSBackgroundTaskRequest"16@"NSString"24@?<v@?@"CSLSBackgroundTaskRequest"@"NSError">32
v24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSSet">24
v52@0:8@16Q24d32B40@?44
v60@0:8@16Q24d32B40Q44@?52
v52@0:8@"NSString"16Q24d32B40@?<v@?B@"NSError">44
v60@0:8@"NSString"16Q24d32B40Q44@?<v@?B@"NSError">52
v32@0:8@"NSString"16@?<v@?@"NSError">24
@"NSXPCInterface"16@0:8
@"NSObject<OS_os_log>"16@0:8
v28@0:8{os_unfair_lock_s=I}16@?20
@"CSLSPrivilegedBackgroundServiceConnection"
@"BSAction"
v32@0:8@"NSString"16@?<v@?B>24
Vv24@0:8@"CSLSModalAppServicePresentationOptions"16
@28@0:8I16@20
@64@0:8I16@20I28Q32Q40Q48Q56
v52@0:8I16Q20Q28Q36Q44
{?=Q{?=QQ}{?=QQ}B}16@0:8
{?="timestamp"Q"rusage"{rusage_info_v5="ri_uuid"[16C]"ri_user_time"Q"ri_system_time"Q"ri_pkg_idle_wkups"Q"ri_interrupt_wkups"Q"ri_pageins"Q"ri_wired_size"Q"ri_resident_size"Q"ri_phys_footprint"Q"ri_proc_start_abstime"Q"ri_proc_exit_abstime"Q"ri_child_user_time"Q"ri_child_system_time"Q"ri_child_pkg_idle_wkups"Q"ri_child_interrupt_wkups"Q"ri_child_pageins"Q"ri_child_elapsed_abstime"Q"ri_diskio_bytesread"Q"ri_diskio_byteswritten"Q"ri_cpu_time_qos_default"Q"ri_cpu_time_qos_maintenance"Q"ri_cpu_time_qos_background"Q"ri_cpu_time_qos_utility"Q"ri_cpu_time_qos_legacy"Q"ri_cpu_time_qos_user_initiated"Q"ri_cpu_time_qos_user_interactive"Q"ri_billed_system_time"Q"ri_serviced_system_time"Q"ri_logical_writes"Q"ri_lifetime_max_phys_footprint"Q"ri_instructions"Q"ri_cycles"Q"ri_billed_energy"Q"ri_serviced_energy"Q"ri_interval_max_phys_footprint"Q"ri_runnable_time"Q"ri_flags"Q}"threadInfo"{thread_basic_info="user_time"{time_value="seconds"i"microseconds"i}"system_time"{time_value="seconds"i"microseconds"i}"cpu_usage"i"policy"i"run_state"i"flags"i"suspend_count"i"sleep_time"i}"thread"^{_opaque_pthread_t}}
{?="wallclock
s"Q"processCPUProfile"{?="totalCPU
s"Q"userCPU
s"Q}"threadCPUProfile"{?="totalCPU
s"Q"userCPU
s"Q}"valid"B}
@"NSSet"
@24@0:8@"<CSLSBackgroundServiceDelegate>"16
@32@0:8@?<v@?>16@?<v@?@"NSError">24
@24@0:8@?<v@?@"NSError">16
@"<CSLSBackgroundServiceDelegate>"
v40@0:8@16q24@?32
v40@0:8@"NSString"16q24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v24@0:8@"CSLSPowerTest"16
v32@0:8@"CSLSPowerTest"16@"NSError"24
@"NSObject<CSLSPowerTestDelegate>"
@"NPSDomainAccessor"
@"NPSManager"
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?BBB@"NSArray">16
v24@0:8@"NSDictionary"16
v24@0:8@"NSArray"16
@"<CSLSDetentClient>"
B32@0:8@16@24
@"FBSOpenApplicationService"
v28@0:8B16@?20
{_opaque_pthread_mutex_t=q[56c]}16@0:8
v80@0:8{_opaque_pthread_mutex_t=q[56c]}16
Vv24@0:8@?16
Vv24@0:8@?<v@?>16
v24@0:8@"BKSAlternateSystemApp"16
v28@0:8@"BKSAlternateSystemApp"16i24
v32@0:8@"BKSAlternateSystemApp"16@"NSError"24
@"BKSAlternateSystemApp"
@"NSOperationQueue"
@"CSLSLaunchAlternateSystemAppOperation"
@"NSObject<OS_os_activity>"
v40@0:8@16@?24@32
v20@0:8f16
B56@0:8@16@24q32@40Q48
@48@0:8@16q24@32Q40
B48@0:8@16q24@32Q40
@40@0:8q16@24Q32
B56@0:8@"BSSettings"16@"BSDescriptionBuilder"24q32@40Q48
@"NSString"32@0:8@"BSSettings"16Q24
@"NSString"48@0:8@"BSSettings"16q24@32Q40
B48@0:8@"BSDescriptionBuilder"16q24@32Q40
@"NSString"24@0:8Q16
@"NSString"40@0:8q16@24Q32
q24@0:8Q16
@"BSMutableSettings"
v32@0:8q16Q24
@"CSLSStateMachineState"
@"NRPairedDeviceRegistry"
@"NRDevice"
@40@0:8@16I24I28d32
I16@0:8
@40@0:8Q16Q24@?32
@"<CSLSButtonHandlerDelegate>"
v40@0:8Q16Q24@?32
v48@0:8Q16Q24@32@?40
v52@0:8@16@24B32@36@?44
v52@0:8@"NSUUID"16@"NSString"24B32@"NSError"36@?<v@?>44
v40@0:8@"CSLSSession"16@"NSError"24@?<v@?>32
v32@0:8q16@?24
v32@0:8@"CSLSSession"16@?<v@?@"NSError">24
v32@0:8@"CSLSSession"16@?<v@?@"NSDate"@"NSError">24
v40@0:8@"CSLSSession"16@"NSDictionary"24@?<v@?@"NSError">32
v48@0:8@"CSLSSession"16@"NSDate"24Q32@?<v@?@"NSError">40
v24@0:8@?<v@?@"NSSet"@"NSError">16
v32@0:8q16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?@"CSLSSession"@"NSError">16
v32@0:8@16q24
v68@0:8@16@24@32B40@44@52@?60
@"CSLSSessionServerConnection"
@"NSObject<OS_os_transaction>"
v32@0:8@?16@24
@"BSEventQueue"
@"BSEventQueueLock"
@"<CSLSSessionServerConnectionDelegate>"
v32@0:8q16@?<v@?@"NSError">24
@"<CSLSTheaterModeDelegate>"
@"<CSLSSystemStateInterface>"24@0:8Q16
@"NSMapTable"
@40@0:8{CGPoint=dd}16Q32
{CGPoint=dd}16@0:8
{CGPoint="x"d"y"d}
v28@0:8i16@?<v@?Q>20
Q20@0:8i16
@24@0:8@"<CSLSBacklightRequest>"16
@72@0:8B16@20Q28B36{CGPoint=dd}40Q56Q64
@"CSLLinkedListNode"
@"CSLLinkedListNode<CSLLinkedListNode><CSLLinkedListNodeEnumeration>"24@0:8@16
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@"CSLLinkedListNode<CSLLinkedListNode><CSLLinkedListNodeEnumeration>"
@"<CSLLinkedListStorageAllocator>"
i16@0:8
@"CSLSConnectionStateObserver"
S16@0:8
v20@0:8S16
@32@0:8Q16@?24
@"<CSLSButtonTapAssertionClientInterface>"
@48@0:8@16@24@32d40
@56@0:8@16@24@32d40@48
@32@0:8@16q24
@40@0:8@16@24q32
B24@0:8q16
v28@0:8B16@20
@"<CSLSSessionDelegate>"
@"NSURL"
@"NSUUID"
v32@0:8@"CSLSSnapshotContext"16@"NSString"24
v40@0:8@"CSLSSnapshotContext"16@"NSString"24@?<v@?@"CSLSSnapshotContext">32
v32@0:8@"NSString"16@?<v@?@"CSLSSnapshotContext">24
v60@0:8@16Q24d32B40d44@?52
v60@0:8@"NSString"16Q24d32B40d44@?<v@?B@"NSError">52
Q24@0:8@16
v36@0:8@16B24@?28
v28@0:8B16@?<v@?>20
v36@0:8@"NSString"16B24@?<v@?>28
@24@0:8I16B20
v20@0:8I16
v40@0:8@16q24q32
v40@0:8@"NSString"16q24q32
v32@0:8@"NSString"16Q24
v40@0:8q16q24Q32
v28@0:8@"NSError"16B24
v32@0:8@"CSLSBacklightAssertionBase"16@?<v@?>24
v32@0:8@16I24B28
v48@0:8@16q24q32Q40
v32@0:8@"NSString"16I24B28
v32@0:8@"CSLSBacklightAssertionSpecification"16@"NSString"24
v40@0:8@"CSLSBacklightAssertionSpecification"16@"NSString"24@?<v@?>32
v28@0:8@"CSLSSensitiveUIMonitor"16B24
v48@0:8@16@24@32^v40
@"<CSLSSensitiveUIMonitoring>"
@"NSUserDefaults"
v36@0:8Q16B24@?28
v44@0:8Q16@24B32@?36
v36@0:8Q16B24@?<v@?>28
v44@0:8Q16@"NSString"24B32@?<v@?>36
v40@0:8@16@24Q32
@"IDSService"
@"CSLSStateMachine"
v32@0:8@"DNDStateService"16@"DNDStateUpdate"24
@"DNDStateService"
@"DNDModeConfigurationService"
B32@0:8@16^{__CFUUID=}24
v24@0:8^{__CFUUID=}16
B32@0:8@"NSString"16^{__CFUUID=}24
v44@0:8q16@?24@?32B40
^{__CFUUID=}
v48@0:8d16d24d32@?40
v48@0:8d16d24d32@?<v@?@"NSData"@"NSError">40
@"CSLSAppBacklightPrivacySettings"
Vv24@0:8@"NSData"16
@"CSLSButtonListener"
B32@0:8Q16Q24
@"<CSLSUserAuthenticationModelDelegate>"
@"CSLSBackgroundServiceConnection"
@"CSLSPrivilegedBackgroundPriorityStateCache"
v24@0:8@?<v@?@"CSLSOnWristState">16
v24@0:8@?<v@?B@"NSError">16
v24@0:8@"CSLSOnWristState"16
@"CSLSOnWristState"
@"<CSLSOnWristMonitorDelegate>"
@"CSLOnWristClientExportedObject"
@"<CSLOnWristClientExportedInterface>"
v24@0:8@"<CSLObserver>"16
@"CSLWeakLinkedList"
Q32@0:8@16@24
@"NSDictionary"16@0:8
v40@0:8@16@24@32
@"<CSLSUITriggerRemoteClientServiceProtocol>"
v24@0:8@"CSLSConnectionState"16
v24@0:8@"CSLSConnectionStateOverrides"16
v24@0:8@?<v@?@"CSLSConnectionState"@"CSLSConnectionStateOverrides">16
@"CSLSConnectionStateOverrider"
@"CSLSConnectionStateOverrides"
v36@0:8q16B24@?28
v40@0:8@16:24@32
v32@0:8:16@24
@"CSLSDetentServiceConnection"
@"AOPHapticsController"
@"<CSLSRawButtonEventListenerDelegate>"
@"<CSLSRawButtonEventListenerService>"
v40@0:8@"<CSLSUIProvider>"16@"NSString"24@"NSString"32
v32@0:8@"<CSLSUIProvider>"16@"NSString"24
@"<CSLSUITriggerControllerDelegate>"
@"<CSLSUIProvider>"
@"<CSLSUIProviderRemoteWrapperDelegate>"
@"CSLSUITriggerRemoteClient"
@"CSLSUITriggerRemoteService"
v56@0:8@16@24@32q40@?48
v56@0:8@"<CSLSUIProvider>"16@"NSString"24@"NSDictionary"32q40@?<v@?B@"NSString">48
@"<CSLSUITriggerRegistration>"
@40@0:8@16d24@32
@"<CSLWeakTrackerDelegate>"
@"<CSLSDisableInstantButtonTapAssertionDelegate>"
v48@0:8Q16Q24Q32Q40
v24@0:8@"CSLSDisableInstantButtonTapAssertion"16
@"CSLSButtonListenerCache"
@"<CSLSButtonListenerClientInterface>"
v32@0:8@"CSLSPasscodePromptSettings"16@?<v@?@"NSString"@"NSNumber"@"NSNumber"@"NSError">24
@"<CSLSPasscodePromptDelegate>"
v32@0:8Q16@?<v@?B>24
v36@0:8Q16B24@?<v@?B@"NSError">28
v28@0:8B16@?<v@?B@"NSError">20
@?<v@?B>16@0:8
@"NSCondition"
v24@0:8@"CSLSUserAuthenticationModel"16
v24@0:8@"CSLSMobileKeyBag"16
v32@0:8@"CSLSMobileKeyBag"16@"CSLSMobileKeyBagState"24
@"CSLSUserAuthenticationModel"
@"CSLSSecureBackupHelper"
@"CSLSSoftwareUpdateStashHelper"
v32@0:8@"NSString"16@"NSString"24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"<CSLSUITriggerRemoteClientServiceDelegate>"16@0:8
v24@0:8@"<CSLSUITriggerRemoteClientServiceDelegate>"16
@"NSXPCListener"
@"<CSLSUITriggerRemoteClientServiceDelegate>"
@48@0:8@16I24I28d32@?40
@32@0:8@16@?24
v36@0:8@?16r*24B32
@"NSObject<CSLSBacklightAssertionProvider>"
@"CSLSBacklightAssertionSpecification"
@52@0:8@16I24I28i32d36@?44
v28@0:8r*16C24
@"CSLSBacklightAssertionBase"
@56@0:8@16I24I28d32@?40@?48
@56@0:8@16@24B32B36d40@?48
@60@0:8@16@24B32B36B40d44@?52
