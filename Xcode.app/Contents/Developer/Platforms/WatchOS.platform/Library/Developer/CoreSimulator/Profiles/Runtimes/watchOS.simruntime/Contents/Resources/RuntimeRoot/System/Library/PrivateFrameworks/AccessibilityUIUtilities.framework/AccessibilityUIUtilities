v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v16@?0@"NSError"8
v16@?0@"NSXPCListenerEndpoint"8
completionBlock
T@?,C,N,V_completionBlock
@"CABasicAnimation"24@?0@8:16
gradientLayer
T@"CAGradientLayer",R,N
com.apple.
maccatalyst.com.apple.
unspec
light
dark
TVViewElement
com.apple.TVAppStore
Accessibility
com.apple.HeadBoard
name.for.bundle.headboard
resource
tomato-splat
RTRotten
tv.freshness.rotten
tv.tomato.rating.format
tomato-fresh
RTFresh
tv.freshness.fresh
tomato-certified
RTCertified
tv.freshness.certified.fresh
common-sense
tv.common.sense
overlay-checkmark
tv.played
mpaa-g
tv-g
g_mask
axid.icon.rating.g
pg13
axid.icon.rating.pg13
mpaa-pg
tv-pg
pg_mask
axid.icon.rating.pg
tv-ma
tvma_mask
axid.icon.rating.tvma
tv-nr
nr_mask
axid.icon.rating.nr
mpaa-r
tv-r
r_mask
axid.icon.rating.r
unrated
axid.icon.rating.unrated
nc17
axid.icon.rating.nc17
y7fv
axid.icon.rating.tvy7fv
tv-y7
tvy7_mask
axid.icon.rating.tvy7
tv-y
tvy_mask
axid.icon.rating.tvy
tvpg_mask
axid.icon.rating.tvpg
tvg_mask
axid.icon.rating.tvg
tv-14
tv14_mask
axid.icon.rating.tv14
4k-hdr
axid.icon.4k-hdr
axid.icon.hdr
axid.icon.hd
axid.icon.closed.captions
tv.tomato.rating
metadata-ad
axid.icon.ad
axid.icon.4k
metadata-sdh
axid.icon.sdh
dolby-vision
dolbyvision_mask
axid.icon.dolby-vision
atmos
axid.icon.dolby-atmos
itunes-extras-badge
axid.icon.itunes-extras
focusedView
v16@?0@"FBSOrientationUpdate"8
window
T@"UIWindow",&,N
loggingFacility
T@"NSObject<OS_os_log>",R,N
debugFeatureName
T@"NSString",R,N
isFeatureEnabled
TB,R,N
featureEnabledStatusDidChangeNotification
T@"UIWindow",&,N,Vwindow
PAIR
PAIRING_PROMPT
cancelled
PIN-ended
entered
bt-device
PASSWORD
Text range: %{private}@, string: %{private}@
Sentence range: %{private}@
BuildVersion
Library
Caches
com.apple.keyboards
ax_buddyObservedTableViews
T@"NSMutableArray",&,N,Sax_setBuddyObservedTableViews:
ax_buddyDynamicHeightConstraints
T@"NSMutableArray",&,N,Sax_setBuddyDynamicHeightConstraints:
v16@?0@"NSNotification"8
ChoosePointNavControllerTitle
CustomGesturesNavControllerTitle
v12@?0B8
CustomGesturesHideControls
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2872.3/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXGestureRecorderMainViewController.m
-[AXGestureRecorderMainViewController viewDidLoad]
Should not have shown controls if just choosing a point
AST Gesture Recorder
-[AXGestureRecorderMainViewController _saveButtonTapped:]
Should not have been able to tap a save button. Type: %ld
CustomHideChromeInstructionsFormat
Record
Stop
Play
SaveAlertTitle
CANCEL
v16@?0@"UIAlertAction"8
SAVE
name.in.use
GestureNamePlaceholder
v16@?0@"UITextField"8
CustomInstructions
CustomRealTimeInstructions
CustomPointInstructions
styleProvider
T@"AXGestureRecorderStyleProvider",&,N,V_styleProvider
gestureRecorderViewController
T@"AXGestureRecorderViewController",&,N,V_gestureRecorderViewController
controlsView
T@"AXGestureRecorderControlsView",&,N,V_controlsView
instructionsLabel
T@"UILabel",&,N,V_instructionsLabel
saveButton
T@"UIBarButtonItem",&,N,V_saveButton
leftButtonIdentifier
TQ,N,V_leftButtonIdentifier
rightButtonIdentifier
TQ,N,V_rightButtonIdentifier
gestureRecordingDidStartTimeInterval
Td,N,V_gestureRecordingDidStartTimeInterval
inReplayMode
TB,N,GisInReplayMode,V_inReplayMode
disableSystemGesturesAssertion
T@"AXAssertion",&,N,V_disableSystemGesturesAssertion
appDidResignActiveNotificationHandlerToken
T@,W,N,V_appDidResignActiveNotificationHandlerToken
recorderType
Tq,N,V_recorderType
isDisplayLinkInEffect
TB,N,V_isDisplayLinkInEffect
delegate
T@"<AXGestureRecorderMainViewControllerDelegate>",W,N,V_delegate
axProgramaticState
Tq,N,V_axProgramaticState
BRAILLE_USBRM_QUERY_TITLE
BRAILLE_USBRM_QUERY_MESSAGE
BRAILLE_USBRM_TURN_OFF
BRAILLE_USBRM_ALLOW_CONNECTIONS
PairCon: %{public}@ received %{public}@ for device %{public}@
BluetoothDeviceConfig
FORGET_BUTTON
FORGET_ALERT_TITLE
FORGET_ALERT_BODY
FORGET_SHEET_TITLE
device
T@"<VOSBluetoothConnectableDevice>",&,N,V_device
B16@?0@"AXValidationManager"8
AVTAvatarRecord
puppetName
avatarData
isEditable
AXUIAvatarUtilities
memoji.video.description
__AXStringForVariablesSentinel
starfish.avatar
Failed to load Memoji with error: %@
animoji.video.description
Cannot get animoji description. AVTAnimojiSoft unexpectedly nil
animoji.name.%@
Cannot get memoji description. ACTColorPresetSoft unexpectedly nil
Cannot get memoji description. AVTPresetSoft unexpectedly nil
Cannot get memoji description. AVTMemojiSoft unexpectedly nil
Cannot get memoji description. AVTAnimojiSoft unexpectedly nil
none
memoji.description.basic
memoji.description.no.hair
memoji.description.facialhair
memoji.description.headwear
memoji.description.facewear
AVTAnimoji
Unable to find class %s
/System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit
/System/Library/PrivateFrameworks/AvatarKit.framework/Contents/MacOS/AvatarKit
AVTPreset
AVTColorPreset
AVTAvatarPuppetRecord
/System/Library/PrivateFrameworks/AvatarUI.framework/AvatarUI
/System/Library/PrivateFrameworks/AvatarUI.framework/Contents/MacOS/AvatarUI
AVTMemoji
fontMetrics
T@"UIFontMetrics",&,N,V_fontMetrics
minimumContentSizeCategory
T@"NSString",C,N,V_minimumContentSizeCategory
maximumContentSizeCategory
T@"NSString",C,N,V_maximumContentSizeCategory
defaultDisplayEdgeInfo
_transformLayer
Name
Points
Forces
Times
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2872.3/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXGestureRecorderFingerPathCollection.m
-[AXGestureRecorderFingerPathCollection referenceTimesArray]
Should not have tried to get the reference times array if we were recording a real time gesture.
v32@?0@"NSNumber"8@"NSNumber"16^B24
-[AXGestureRecorderFingerPathCollection _realTimeFingerPathToAppendForIndex:upToPositionForTimestampAtIndex:]
Unexpected format for replayable gesture
Could not find a matching event for this particular timestamp: %f
v24@?0Q8^B16
maximumFingerPathsCount
TQ,N,V_maximumFingerPathsCount
referenceTimesArrayIndex
TQ,N,V_referenceTimesArrayIndex
referenceTimesArray
T@"NSMutableArray",R,N
fingerPaths
T@"NSMutableArray",&,N,V_fingerPaths
pointsArrays
T@"NSMutableArray",&,N,V_pointsArrays
forcesArrays
T@"NSMutableArray",&,N,V_forcesArrays
touchPathIndicesToFingerPathIndices
T@"NSMutableDictionary",&,N,V_touchPathIndicesToFingerPathIndices
timesArrays
T@"NSMutableArray",&,N,V_timesArrays
replayableGesture
T@"AXMutableReplayableGesture",&,N,V_replayableGesture
T@"<AXGestureRecorderFingerPathCollectionDelegate>",W,N,V_delegate
fingerPathsCount
TQ,R,N
timestampsCount
shouldRecordRealTimeGesture
TB,N,V_shouldRecordRealTimeGesture
minimumFingerLineWidth
Td,N,V_minimumFingerLineWidth
maximumFingerLineWidth
Td,N,V_maximumFingerLineWidth
PAIRED_AND_CONNECTED
SearchResultsCheckmarkClear.png
UIPreferencesBlueCheck.png
UIPreferencesWhiteCheck.png
NOT_PAIRED
PAIRING
PAIRED
VALIDATING
%@, 
CustomGestureVoiceOverLabel
CustomGesturesShowControls
fillColor
GrayTransition
AnimationName
HasExistingStaticFingers
AnimatingLayers
TransitionLayers
Change
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2872.3/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXGestureRecorderView.m
-[AXGestureRecorderView freezeAllDynamicFingerPathsWithInstantReplayOffset:]
If we were freezing dynamic finger paths during recording, we needed to instantly replay them, but we got no info for this
v32@?0@"CALayer"8Q16^B24
dynamicFingerPathsContainerView
T@"UIView",&,N,V_dynamicFingerPathsContainerView
dynamicFingerPathBackgroundGradientPatternColor
T@"UIColor",&,N,V_dynamicFingerPathBackgroundGradientPatternColor
constrainedBoundsForDrawing
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_constrainedBoundsForDrawing
hideControlsAction
T@"UIAccessibilityCustomAction",&,N,V_hideControlsAction
showControlsAction
T@"UIAccessibilityCustomAction",&,N,V_showControlsAction
previouslyActiveLayersByInstantReplayFingerIndex
T@"NSMutableDictionary",&,N,V_previouslyActiveLayersByInstantReplayFingerIndex
dataSource
T@"<AXGestureRecorderViewDelegate>",W,N,V_dataSource
replayMode
TB,N,V_replayMode
_interfaceOrientation
preferredWindowLevel
Td,R,N
%@, label=%@, boundingRect=%@
label
T@"NSString",R,N,V_label
boundingRect
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_boundingRect
-?(centered|day|night|mostly|partly|severe)-?+
Weather image extract regex failed with error: %@
now.precipitation.rain
now.precipitation.snow
precipitation.rain
precipitation.snow
thunderstorm
flurry-snow-snow-shower
drizzle
hail
rain
flurry
blowingsnow
sunny
breezy
cloudy
clear
suncloud
heavy-rain
No weather description key found for icon: %@
weather.condition.light.snow.showers
weather.condition.rain
weather.condition.tornado
weather.condition.tropical.storm
weather.condition.hurricane
weather.condition.severe.thunderstorm
weather.condition.thunderstorm
weather.condition.rain.and.snow
weather.condition.rain.and.sleet
weather.condition.snow.and.sleet
weather.condition.freezing.drizzle
weather.condition.drizzle
weather.condition.freezing.rain
weather.condition.showers
weather.condition.snow.flurries
weather.condition.snow.showers
weather.condition.blowing.snow
weather.condition.snow
weather.condition.hail
weather.condition.sleet
weather.condition.dust.haze
weather.condition.foggy
weather.condition.haze
weather.condition.smoky
weather.condition.blustery
weather.condition.windy
weather.condition.cold
weather.condition.clouds
weather.condition.mostly.cloudy
weather.condition.partly.cloudy
weather.condition.clear
weather.condition.mostly.clear
weather.condition.rain.and.hail
weather.condition.hot
weather.condition.isolated.thunderstorms
weather.condition.scattered.thunderstorms
weather.condition.scattered.showers
weather.condition.heavy.snow
weather.condition.blizzard
weather.condition.heavy.rain
weather.condition.isolated.thundershowers
weather.condition.unavailable
AX: UNHANDLED WEATHER CASE!
Reason to enable SW Keyboard because: %{public}@ [%d]
Reason to enable SW Keyboard removed because: %{public}@ [%d]
Reason to disable SW Keyboard because: %{public}@ [%d]
Reason to remove disable SW Keyboard because: %{public}@ [%d]
T@"<AXUISoftwareKeyboardManagerDelegate>",W,N,V_delegate
VoiceOverTextSpinnerView
VoiceOverTextSpinnerViewEnabled
boundsForLastReload
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_boundsForLastReload
didUpdateItems
TB,N,V_didUpdateItems
items
T@"NSArray",&,N,V_items
T@"NSObject<OS_os_log>",&,N,V_loggingFacility
T@"AXElementNamesStyleProvider",&,N,V_styleProvider
containers
T@"NSMutableArray",R,N,V_containers
AXUIDaemonOrientationDidUpdateNotification
Duration
T@"<AXDragEndpointRequestSatisfierDelegate>",W,N,V_delegate
T@"<AXDragEndpointVendorDelegate>",W,N,V_delegate
cycleIndex
TQ,N,V_cycleIndex
isMakingNextViewVisible
TB,N,V_isMakingNextViewVisible
shouldSkipMakingNextViewVisible
TB,N,V_shouldSkipMakingNextViewVisible
viewsInCycle
T@"NSArray",R,N
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2872.3/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXGestureRecorderViewController.m
-[AXGestureRecorderViewController _advanceReplay]
Should not have called _advanceReplay after end of gesture.
-[AXGestureRecorderViewController _advanceInstantReplayForStaticFingerAtIndex:]
Should not have been able to increment the timestamp beyond this point.
-[AXGestureRecorderViewController touchesBegan:withEvent:]
Should have had at least one touch
fingerPathCollection
T@"AXGestureRecorderFingerPathCollection",&,N,V_fingerPathCollection
dynamicFingerPathCollection
T@"AXGestureRecorderFingerPathCollection",&,N,V_dynamicFingerPathCollection
shouldPreventFurtherRecording
TB,N,V_shouldPreventFurtherRecording
trackingTouches
TB,N,GisTrackingTouches,V_trackingTouches
trackingTouchesDidStartTimeInterval
Td,N,V_trackingTouchesDidStartTimeInterval
replayTimestampIndex
TQ,N,V_replayTimestampIndex
replayTimestampsCount
TQ,N,V_replayTimestampsCount
replayDynamicFingerPaths
T@"NSMutableArray",&,N,V_replayDynamicFingerPaths
instantReplayTimestampIndexes
T@"NSMutableDictionary",&,N,V_instantReplayTimestampIndexes
instantReplayPartialFingerPaths
T@"NSMutableDictionary",&,N,V_instantReplayPartialFingerPaths
T@"<AXGestureRecorderViewControllerDelegate>",W,N,V_delegate
gestureRecorderView
T@"AXGestureRecorderView",R,N
empty
TB,R,N,GisEmpty
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2872.3/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXAssistiveTouchLayoutView.m
-[AXAssistiveTouchLayoutView layoutItemsByLocation:positions:rows:columns:clockwiseOctagonalLocations:horizontallyCenteredLocation:]
Should have picked a horizontally centered location that existed for this layout.
v24@?0@"UIView<AXAssistiveTouchLayoutItem>"8@"UIView<AXAssistiveTouchLayoutItem>"16
-[AXAssistiveTouchLayoutView _setUpConstraintsToAvoidCollisions:rows:columns:clockwiseOctagonalLocations:]
Should have had exactly eight specified locations to handle complex collisions.
T@"UIFontMetrics",R,N
labelMinimumContentSizeCategory
labelMaximumContentSizeCategory
imageMinimumContentSizeCategory
imageMaximumContentSizeCategory
traitCollectionForLabelPreferredContentSizeCategory
T@"UITraitCollection",R,N
traitCollectionForImagePreferredContentSizeCategory
labelFont
T@"UIFont",R,N
defaultSideLength
minimumOuterPadding
itemConstraints
T@"NSArray",&,N,V_itemConstraints
positioningLayoutGuides
T@"NSMutableArray",&,N,V_positioningLayoutGuides
Asked to make touch for view, but view's window was nil. view: %@
labelContainerSize
T{CGSize=dd},N,V_labelContainerSize
arrowTipLocation
T{CGPoint=dd},N,V_arrowTipLocation
name
elementFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_elementFrame
availableBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N,V_availableBounds
labelPosition
Tq,N,V_labelPosition
hasExtendedArrow
labelContainerFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_labelContainerFrame
forcedLabelContainerSize
T{CGSize=dd},N,V_forcedLabelContainerSize
UNNAMED_DRAG
UNNAMED_DRAG_ORDINAL
UNNAMED_DROP
UNNAMED_DROP_ORDINAL
HelveticaNeue Thin
leftButton
T@"UIButton",&,N,V_leftButton
rightButton
T@"UIButton",&,N,V_rightButton
T@"<AXGestureRecorderControlsViewDelegate>",W,N,V_delegate
progress
Tf,N
leftButtonEnabled
TB,N,GisLeftButtonEnabled
rightButtonEnabled
TB,N,GisRightButtonEnabled
middleButton
T@"UIButton",&,N,V_middleButton
B24@?0@"UIView"8^B16
_atvaccessibilityITMLAccessibilityContent
itemBackgroundViewCreationHandler
T@?,C,N,V_itemBackgroundViewCreationHandler
/System/Library/PreferenceBundles/AccessibilitySettings.bundle
com.apple.accessibility.AccessibilityUIUtilities
AXUILocalizedStrings
ZOOM_LENS_EFFECT_NONE
ZOOM_LENS_EFFECT_BLACK_AND_WHITE
ZOOM_LENS_EFFECT_LOW_LIGHT
ZOOM_LENS_EFFECT_BLACK_AND_WHITE_INVERTED
ZOOM_LENS_EFFECT_INVERTED
ZOOM_LENS_EFFECT_HUE_ADJUST
/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2872.3/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUIUtilities/Source/AXUIUtilitiesCommon.m
NSString *AXUILocalizedTitleForZoomLensEffect(NSString *__strong)
zoomLensEffect key not recognized: %@
ZOOM_LENS_MODE_FULLSCREEN
ZOOM_LENS_MODE_WINDOW
ZOOM_LENS_MODE_DOCKED
NSString *AXUILocalizedTitleForZoomLensMode(NSString *__strong)
zoomMode key not recognized: %@
DOCK_POSITION_TOP
DOCK_POSITION_LEFT
DOCK_POSITION_RIGHT
DOCK_POSITION_BOTTOM
NSString *AXUILocalizedTitleForDockPosition(NSString *__strong)
dockPosition key not recognized: %@
System/Library/CoreServices/AssistiveTouch.app
HOME
NOTIFICATION_CENTER
CUSTOM
DEVICE
SIRI
CONTROL_CENTER
LOCK
ORIENTATION
VOLUME_UP_ASSISTIVE_TOUCH
VOLUME_DOWN_ASSISTIVE_TOUCH
MUTE
GESTURES
TRIPLE_CLICK
SHAKE
APP_SWITCHER
SCREENSHOT
ORIENTATION_LOCKED
VOICE_CONTROL
COMMAND_AND_CONTROL
PINCH
ROTATE
PINCH_ROTATE
FORCE_TAP
DOUBLE_TAP
LONG_PRESS
HOLD_AND_DRAG
MOVE_MENU
SPOTLIGHT
SYSDIAGNOSE
REACHABILITY
REBOOT_DEVICE
DOCK
APPLE_PAY
SPEAK_SCREEN
OPEN_MENU
PASS_THROUGH
MOUSE_PRIMARY_CLICK
SIDE_APP
DWELL
DWELL_RESUME
DWELL_PAUSE
DWELL_PAUSE_TOGGLE
DWELL_LOCK
DWELL_UNLOCK
DWELL_LOCK_TOGGLE
DWELL_TIME_INCREASE
DWELL_TIME_DECREASE
SCROLL
Scroll-Up
Scroll-Down
Scroll-Left
Scroll-Right
SCROLL_TO_TOP
SCROLL_TO_BOTTOM
ASSSISTIVETOUCH
VOICEOVER
CLASSIC_INVERT
SMART_INVERT
ZOOM
MAGNIFIER
SWITCH_CONTROL
FULL_KEYBOARD_ACCESS
CustomGesture-
FORCE_TOUCH
_FULL_WIDTH
LocalizedStrings
%@%@
_NHB_IPAD
_NHB
BackArrow
AT_LaunchFloatFromDock
AT_pinned_narrow
AT_pinned_narrow_for_flipping
AT_promote_sideapp_half
AT_dismiss_pinned_half
AT_PinFloatAppLeft
AT_PinFloatAppRight
AT_UnpinAppLeft
AT_UnpinAppRight
AT_SlideOpenFloatApp
AT_dismiss_overlay
AT_MoveFloatAppLeft
AT_MoveFloatAppRight
AT_Multitask
SCATIcon_device_volumeDown
SCATIcon_device_volumeUp
IconHome
IconNotificationCenter
IconFavorites
SCATIcon_siri_shortcuts
IconDevice
IconSiri
IconControlCenter
IconLock
IconRotate
IconVolumeUp
IconVolumeDown
IconMuted
IconTripleClick
IconGestures
IconShake
IconAppSwitcher
IconScreenshot
IconRotationLock
IconVoiceControl
IconCommandAndControl
IconPinch
SCATIcon_gestures_rotateClockwise
IconOrb
SCATIcon_gestures_tap
IconDoubleTap
SCATIcon_gestures_holdAndDrag
SCATIcon_device_spotlightSearch
IconSOS
IconDiagnostics
IconReachability
IconRebootDevice
IconDock
IconApplePay
IconSpeakScreen
IconDwell
SCATIcon_mediacontrols_play
IconDwellPause
IconDwellFallbackDisable
IconDwellFallbackEnable
SCATIcon_settings_increaseScanSpeed
SCATIcon_settings_decreaseScanSpeed
SCATIcon_action_scroll
SCATIcon_action_scrollUp
SCATIcon_action_scrollDown
SCATIcon_action_scrollLeft
SCATIcon_action_scrollRight
SCATIcon_action_scrollToTop
SCATIcon_action_scrollToBottom
-tall
tortoise
hare
frame
unable to get drag endpoint: %@
Launched %@.
Will terminate %@.
Update orientation to %ld with duration %g
Exiting %@.
Restarting because SpringBoard just became active.
Unable to set keep alive to %i.
Unpair device: %@
Device removed: %@, current device: %@
SPEC: %@ / %@
setting hardware keyboard attached state: %d [existing %d]
%{public}@
-[AXElementNamesView %@] called off the main thread!
Found element with no name: %@
Could not find a non-colliding position for label for %@
Unable to find any content size category >= Large that would fit the AssistiveTouch menu. Device width: %f
MbP?
?333333
?SSSSSS
softlink:r:path:/System/Library/PrivateFrameworks/AvatarKit.framework/AvatarKit
softlink:r:path:/System/Library/PrivateFrameworks/AvatarUI.framework/AvatarUI
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
AXEndpointVending
NSObject
AXDragEndpointClient
AXUIVoiceOverBluetoothPairSetup
AXGestureRecorderGradientViewAnimationDelegate
CAAnimationDelegate
AXGestureRecorderGradientView
AXATVUtils
AXUIDaemonApplicationDelegate
UIApplicationDelegate
AXUIVoiceOverBluetoothPairController
UITextFieldDelegate
AXUISettingsWelcomeControllerCommon
AXGestureRecorderMainViewController
AXGestureRecorderViewControllerDelegate
AXGestureRecorderControlsViewDelegate
AXConstraintExtensions
AXConstraintBasedLayout
AXATV_Extras
AXProgramaticUITapGestureRecognizer
AXGestureRecorderStyleProvider
AXUIVoiceOverBluetoothDeviceConfigController
AXUIAvatarUtilities
AXDynamicTypeImageView
AXITMLUtilities
AXGestureRecorderFingerPathCollection
AXUIVoiceOverBluetoothDeviceTableCell
AXGestureRecorderView
AXUIDaemonApplication
AXUIContextDrawingAnnotation
AXWeatherUtilities
AXUISoftwareKeyboardManager
AXUIVoiceOverTextSpinnerView
PSHeaderFooterView
AXElementNamesView
AXUIDaemonNonInteractiveWindow
AXUIDaemonWindow
AXUIVoiceOverBluetoothDevicePlaceholderCell
AXDragEndpointRequestSatisfier
AXDragEndpointVendor
NSXPCListenerDelegate
AXDragEndpointRequestSatisfierDelegate
AXCyclingView
AXGestureRecorderViewController
AXGestureRecorderViewDelegate
AXGestureRecorderFingerPathCollectionDelegate
AXAssistiveTouchLayoutView
AXElementNamesItemView
ASTBiggerProgressView
AXGestureRecorderControlsView
AXExtensions
AXElementNamesStyleProvider
arrayWithObjects:count:
setWithArray:
containsObject:
init
isValidServiceName:
initWithMachServiceName:options:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
requestDragEndpoint:
interfaceWithProtocol:
setRemoteObjectInterface:
resume
invalidate
dealloc
remoteObjectProxyWithErrorHandler:
initWithServiceName:
getDragEndpoint:
.cxx_destruct
_connection
isOverlay
completionBlock
animationDidStart:
animationDidStop:finished:
setCompletionBlock:
_completionBlock
layer
gradientLayer
_copyColorsArrayWithTopColor:bottomColor:
setKeyPath:
setFromValue:
setToValue:
colors
locations
initWithObjects:
setAnimations:
setDuration:
setDelegate:
addAnimation:forKey:
setColors:
setLocations:
_configureGradientWithTopColor:bottomColor:locations:animated:duration:completion:
_copyLocationsArrayWithTopColorLocation:bottomColorLocation:
CGColor
initWithFloat:
layerClass
configureGradientWithTopColor:bottomColor:
configureGradientWithTopColor:bottomColor:topColorLocation:bottomColorLocation:
configureGradientAnimatedWithTopColor:bottomColor:duration:completion:
configureGradientAnimatedWithTopColor:bottomColor:topColorLocation:bottomColorLocation:duration:completion:
mainBundle
bundleIdentifier
bundleProxyForCurrentProcess
bundleType
isEqualToString:
hasPrefix:
bundleForClass:
localizedStringForKey:value:table:
atvaccessibilityLocalizedString:
scheme
host
path
stringByAppendingString:
stringWithFormat:
axContainsString:
accessibilityIdentifierForResourceURL:
accessibilityLabelForID:
mainScreen
safeValueForKey:
sharedInstance
isTVMLKitLoaded
isProcessTVAppStore
atvaccessibilityLocalizedNameForBundleID:
accessibilityLabelForResourceURL:
currentFocusedView
_exitIfNotEnabled
_setKeepAlive:
defaultCenter
_enabledPreferenceDidChange:
featureEnabledStatusDidChangeNotification
addObserver:selector:name:object:
removeObserver:name:object:
loggingFacility
debugFeatureName
didFinishLaunching
orientation
duration
_didUpdateToOrientation:duration:
setHandler:
activeInterfaceOrientation
willTerminate
_setInterfaceOrientation:
currentDevice
setOrientation:animated:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
didUpdateOrientation
isFeatureEnabled
sharedApplication
terminateWithSuccess
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handlerForIntent:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveSecureApplicationState:
application:shouldRestoreSecureApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
application:configurationForConnectingSceneSession:options:
application:didDiscardSceneSessions:
window
setWindow:
_systemAppDidBecomeReady
_orientationObserver
deviceUpdated:
keyboardWillShow:
loadView
cancelButtonClicked:
initWithBarButtonSystemItem:target:action:
doneButtonClicked:
initWithTitle:style:target:action:
navigationItem
setLeftBarButtonItem:
setRightBarButtonItem:
updatePrompt:
tableView
viewWillAppear:
rightBarButtonItem
setEnabled:
internalTableView
indexPathForIndex:
cellForRowAtIndexPath:
becomeFirstResponder
removeObserver:
name
setPrompt:
specifier
userInfo
setObject:forKey:
setPIN:
dismissViewControllerAnimated:completion:
tableView:cellForRowAtIndexPath:
value
length
object
address
setTitle:
isFirstResponder
activeKeyboard
setReturnKeyEnabled:
text
editableTextField
setKeyboardType:
setReturnKeyType:
setAutocapitalizationType:
textDidChange:
addTarget:action:forControlEvents:
delegate
objectForKey:
emptySetter:specifier:
preferenceSpecifierNamed:target:set:get:detail:cell:edit:
addObject:
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldDidChangeSelection:
textFieldShouldClear:
textFieldShouldReturn:
specifiers
_device
_promptFormat
_dismissed
rangeEnclosingPosition:withGranularity:inDirection:
start
beginningOfDocument
endOfDocument
textRangeFromPosition:toPosition:
textInRange:
ignoreLogging
identifier
offsetFromPosition:toPosition:
ax_sentenceFromPosition:inDirection:
positionFromPosition:offset:
arrayWithObjects:
pathWithComponents:
initWithPath:version:
purge
mutableCopy
numberWithUnsignedInteger:
localizedStringFromNumber:numberStyle:
appendFormat:
stringWithString:
getRed:green:blue:alpha:
colorWithRed:green:blue:alpha:
getHue:saturation:brightness:alpha:
colorWithHue:saturation:brightness:alpha:
blackColor
getWhite:alpha:
colorWithWhite:alpha:
ax_buddyObservedTableViews
ax_setBuddyObservedTableViews:
ax_buddyDynamicHeightConstraints
ax_setBuddyDynamicHeightConstraints:
contentSize
indexOfObject:
objectAtIndexedSubscript:
setConstant:
countByEnumeratingWithState:objects:count:
removeObserver:forKeyPath:
setStyleProvider:
recorderType
setRecorderType:
addChildViewController:
setGestureRecorderViewController:
mainQueue
setDisableSystemGesturesAssertion:
addObserverForName:object:queue:usingBlock:
setAppDidResignActiveNotificationHandlerToken:
initWithType:
_commonInit
appDidResignActiveNotificationHandlerToken
_releaseOutlets
bounds
initWithFrame:
setAutoresizingMask:
setAutoresizesSubviews:
setView:
defaultHeight
addSubview:
setControlsView:
gestureRecorderViewController
gestureRecorderView
setFrame:
insertSubview:atIndex:
_defaultInstructionalText
styleProvider
instructionsLabelFont
instructionsLabelTextColor
instructionsLabelBackgroundColor
instructionsLabelShadowColor
instructionsLabelShadowOffset
setTranslatesAutoresizingMaskIntoConstraints:
setFont:
setAdjustsFontSizeToFitWidth:
setColor:
setBackgroundColor:
setShadowColor:
setShadowOffset:
setText:
setTextAlignment:
setLineBreakMode:
setNumberOfLines:
setUserInteractionEnabled:
setAdjustsFontForContentSizeCategory:
setIsAccessibilityElement:
setInstructionsLabel:
instructionsLabelHorizontalInset
safeAreaLayoutGuide
leadingAnchor
constraintEqualToAnchor:constant:
trailingAnchor
topAnchor
constraintEqualToAnchor:
bottomAnchor
controlsView
activateConstraints:
viewDidLoad
_cancelButtonTapped:
_saveButtonTapped:
setSaveButton:
_setLeftButtonIdentifier:enabled:rightButtonIdentifier:enabled:animate:completion:
makeButton
setTitle:forState:
_hideChromeButtonTapped:
setMiddleButton:
assertionWithType:identifier:
_reset
view
layoutSubviews
viewDidDisappear:
viewWillTransitionToSize:withTransitionCoordinator:
_saveWithMessage:
_saveReplayableGesture
_hide
_unhideChrome
cancelPreviousPerformRequestsWithTarget:selector:object:
navigationController
setNavigationBarHidden:animated:
setAlpha:
animateWithDuration:animations:
instructionsLabel
localizedStringWithFormat:
alpha
_hideChrome
performSelector:withObject:afterDelay:
setLeftButtonIdentifier:
setRightButtonIdentifier:
_getButtonPropertiesForIdentifier:enabled:color:title:
setLeftButtonColor:title:enabled:rightButtonColor:title:enabled:animationDuration:completion:
gestureRecordingDidStartTimeInterval
_manageDisplayLinkManager:
_isForRealTimeGesture
freezeAllDynamicFingerPaths
preventFurtherRecording
setProgress:
_clearProgressView
setInReplayMode:
setGestureRecordingDidStartTimeInterval:
replayRecordedGesture
saveButton
deleteAllFingerPaths
hideStaticView
setNeedsLayout
alertControllerWithTitle:message:preferredStyle:
actionWithTitle:style:handler:
addAction:
textFields
_canSaveGestureWithName:
_didSaveGestureWithName:
setPlaceholder:
setAutocorrectionType:
setEnablesReturnKeyAutomatically:
addTextFieldWithConfigurationHandler:
presentViewController:animated:completion:
gestureRecorder:canSaveGestureWithName:
recordedReplayableGestureRepresentation
setName:
addPointsFromReplayableGesture:
gestureRecorder:saveNamedReplayableGesture:
recordedGesturePropertyListRepresentationWithName:
gestureRecorder:saveGestureWithPropertyListRepresentation:
gestureRecorder:saveReplayableGesture:
gestureRecorder:savePoint:
isDisplayLinkInEffect
currentDisplayLinkManager
_updateProgressView:
addTarget:selector:
setIsDisplayLinkInEffect:
removeTarget:selector:
_savePoint:
_enterWaitingMode
rightButtonIdentifier
isPaused
isNavigationBarHidden
leftButtonIdentifier
_enterReplayMode
_shouldForwardViewWillTransitionToSize
maximumDurationOfRecordedGestureForGestureRecorderViewController:
gestureRecorderViewController:didStartRecordingAtomicFingerPathAtPoint:
gestureRecorderViewControllerDidStopRecordingAtomicFingerPath:
gestureRecorderViewControllerDidFinishReplayingRecordedGesture:
isChromeVisibleForGestureRecorderViewController:
gestureRecorderViewController:setChromeVisible:
gestureRecorderControlsView:buttonTappedAtIndex:
shouldAutorotate
supportedInterfaceOrientations
isInReplayMode
disableSystemGesturesAssertion
_inReplayMode
_isDisplayLinkInEffect
_styleProvider
_gestureRecorderViewController
_controlsView
_instructionsLabel
_saveButton
_leftButtonIdentifier
_rightButtonIdentifier
_gestureRecordingDidStartTimeInterval
_delegate
_disableSystemGesturesAssertion
_appDidResignActiveNotificationHandlerToken
_recorderType
firstItem
firstAttribute
relation
secondItem
secondAttribute
multiplier
constant
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setPriority:
ax_copyWithPriority:
ax_addedConstraintForLayoutAttribute:asEqualToConstant:
ax_addedConstraintForLayoutAttribute:asEqualToConstant:priority:
ax_addedConstraintForLayoutAttribute:asEqualToValueOfView:
ax_addedConstraintForLayoutAttribute:asEqualToValueOfView:priority:
ax_addedConstraintForLayoutAttribute:asEqualToValueOfView:withOffset:
ax_addedConstraintForLayoutAttribute:asEqualToValueOfView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofView:
ax_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:
ax_addedConstraintForLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
ax_addedConstraintForLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:priority:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToConstant:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToConstant:priority:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToValueOfView:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToLayoutAttribute:ofView:withOffset:
ax_addedConstraintForLayoutAttribute:asLessThanOrEqualToLayoutAttribute:ofView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToConstant:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToConstant:priority:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToValueOfView:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:priority:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToLayoutAttribute:ofView:withOffset:
ax_addedConstraintForLayoutAttribute:asGreaterThanOrEqualToLayoutAttribute:ofView:withOffset:priority:
ax_firstCommonAncestorWithView:
addConstraint:
superview
_ax_depth
arrayWithCapacity:
setContentHuggingPriority:forAxis:
setContentCompressionResistancePriority:forAxis:
ax_constrainLayoutAttribute:asEqualToConstant:
ax_constrainLayoutAttribute:asEqualToConstant:priority:
ax_constrainLayoutAttribute:asEqualToValueOfView:
ax_constrainLayoutAttribute:asEqualToValueOfView:priority:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:priority:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:priority:
ax_constrainLayoutAttribute:asLessThanOrEqualToConstant:
ax_constrainLayoutAttribute:asLessThanOrEqualToConstant:priority:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:priority:
ax_constrainLayoutAttribute:asLessThanOrEqualToLayoutAttribute:ofView:withOffset:
ax_constrainLayoutAttribute:asLessThanOrEqualToLayoutAttribute:ofView:withOffset:priority:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToConstant:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToConstant:priority:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:priority:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToLayoutAttribute:ofView:withOffset:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToLayoutAttribute:ofView:withOffset:priority:
ax_constrainLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
ax_constrainLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:priority:
ax_pinConstraintsInAllDimensionsToView:
ax_setContentHuggingAndCompressionResistance:
_atvaccessibilityAlphaComponent
axProgramaticState
state
setAxProgramaticState:
_axProgramaticState
preferredFontForTextStyle:
secondaryLabelColor
clearColor
systemGroupedBackgroundColor
userInterfaceIdiom
gestureRecorderViewBackgroundGradientTopColor
minimumFingerLineWidth
systemTealColor
colorWithAlphaComponent:
systemBlueColor
systemGray2Color
fingerLineGradientTopColorLocation
fingerLineGradientBottomColorLocation
whiteColor
fingerLineOuterBevelColor
fingerLineDropDownShadowOffset
gestureRecorderViewBackgroundColor
gestureRecorderViewBackgroundGradientBottomColor
maximumFingerLineWidth
tracingDynamicFingerColor
finalDynamicFingerColor
staticFingerColor
fingerLineGradientTopColor
fingerLineGradientBottomColor
dynamicFingerLineGradientTopColor
dynamicFingerLineGradientBottomColor
dynamicFingerLineGradientTopColorLocation
dynamicFingerLineGradientBottomColorLocation
fingerLineOuterBevelWidth
dynamicFingerLineOuterBevelColor
dynamicFingerLineOuterBevelWidth
fingerLineDropDownShadowColor
fingerLineDropDownShadowRadius
fingerLineDropDownShadowOpacity
dynamicFingerLineDropDownShadowColor
dynamicFingerLineDropDownShadowOffset
dynamicFingerLineDropDownShadowRadius
dynamicFingerLineDropDownShadowOpacity
CGImage
deviceRemoved:
deviceConnectedHandler:
initWithDelegate:
setKeepConnectionAlive:
setDisplayDescriptorCallbackEnabled:
unpair
popViewControllerAnimated:
driverConfiguration
unsignedIntegerValue
_allowUSBRM
_clearVOUSBRMDisabler
_doReallyForgetDevice
objectAtIndex:
setProperty:forKey:
reloadSpecifier:
loadSpecifiersFromPlistName:target:
arrayWithArray:
propertyForKey:
dictionaryWithObjectsAndKeys:
addEntriesFromDictionary:
setupWithDictionary:
addObjectsFromArray:
forgetDevice:
device
setDevice:
_forgetGroupSpecifiers
_additionalConfigGroupSpecifiers
_brailleClient
validateClass:
validateClass:conformsToProtocol:
validateClass:hasInstanceMethod:withFullSignature:
validateProtocol:hasRequiredInstanceMethod:
setValidationTargetName:
setOverrideProcessName:
setDebugBuild:
performValidations:withPreValidationHandler:postValidationHandler:
safeBoolForKey:
avatarWithDataRepresentation:error:
descriptionForMemoji:
safeStringForKey:
animojiNamed:
descriptionForAnimoji:
colorPresetForCategory:
localizedName
presetForCategory:
hasComponent
performValidations
descriptionForAvatarWithRecord:includeVideoPrefix:
defaultMetrics
initWithImage:
initWithImage:highlightedImage:
traitCollection
preferredContentSizeCategory
maximumContentSizeCategory
minimumContentSizeCategory
traitCollectionWithPreferredContentSizeCategory:
fontMetrics
scaledValueForValue:compatibleWithTraitCollection:
intrinsicContentSize
_scaledSizeForSize:
sizeThatFits:
traitCollectionDidChange:
invalidateIntrinsicContentSize
setMinimumContentSizeCategory:
setMaximumContentSizeCategory:
setFontMetrics:
_fontMetrics
_minimumContentSizeCategory
_maximumContentSizeCategory
localizedCaseInsensitiveContainsString:
textByReconcilingClientText:withServerText:
homeAffordanceOverlayAllowance
doubleValue
convertPoint:toLayer:
convertRect:toLayer:
convertPoint:fromLayer:
convertRect:fromLayer:
safeAreaInsetsPortrait
safeAreaInsetsLandscapeLeft
safeAreaInsetsLandscapeRight
safeAreaInsetsPortraitUpsideDown
setMaximumFingerPathsCount:
_referenceTimesArrayIndexNeedsRefresh
reset
fingerPaths
count
shouldRecordRealTimeGesture
timesArrays
referenceTimesArray
referenceTimesArrayIndex
setReferenceTimesArrayIndex:
_realTimeFingerPathToAppendForIndex:upToPositionForTimestampAtIndex:
_nonRealTimeFingerPathToAppendForIndex:upToPositionForTimestampAtIndex:
timestampsCount
pointsArrays
forcesArrays
bezierPath
CGPointValue
_bezierPathToAppendForTouchLocation:unnamedValue:optionalPreviousTouchLocation:optionalPreviousForce:
appendBezierPath:
timestampAtIndex:
touchPathIndicesToFingerPathIndices
enumerateKeysAndObjectsUsingBlock:
replayableGesture
numberOfEvents
timeAtEventIndex:
fingerIdentifiersAtEventIndex:
pointForFingerIdentifier:atEventIndex:
forceForFingerIdentifier:atEventIndex:
valueWithCGPoint:
removeObjectAtIndex:
convertPoint:toView:
convertPoint:toWindow:
bezierPathWithArcCenter:radius:startAngle:endAngle:clockwise:
appendPath:
moveToPoint:
addLineToPoint:
closePath
maximumFingerPathsCount
setTimesArrays:
lastObject
initWithDouble:
initWithIndexesInRange:
_pathIndex
numberWithUnsignedInt:
locationInView:
_pressure
setObject:forKeyedSubscript:
_interfaceOrientedScreenPointForPoint:view:
setFingerPaths:
setPointsArrays:
setForcesArrays:
setTouchPathIndicesToFingerPathIndices:
initWithUnsignedInteger:
_didInsertFingerPathAtIndex:
removeIndex:
_didUpdateFingerPathAtIndex:
enumerateIndexesUsingBlock:
_addPointsToReplayableGesture:forces:time:
setWithCapacity:
numberWithUnsignedChar:
numberWithFloat:
dictionary
addPointsByFingerIdentifier:forces:atTime:
objectForKeyedSubscript:
numberWithUnsignedLong:
setReplayableGesture:
gestureRecorderFingerPathCollection:didInsertFingerPathAtIndex:
gestureRecorderFingerPathCollection:didUpdateFingerPathAtIndex:
initWithMaximumFingerPathsCount:
fingerPathsCount
fingerPathAtIndex:
fingerPathToAppendForIndex:forTimestampAtIndex:
propertyListRepresentationWithName:
replayableGestureRepresentation
appendPointsForTouches:referenceView:time:
handleLiftForTouches:referenceView:time:
appendFingerPathsFromFingerPathCollection:
setShouldRecordRealTimeGesture:
setMinimumFingerLineWidth:
setMaximumFingerLineWidth:
_shouldRecordRealTimeGesture
_maximumFingerPathsCount
_referenceTimesArrayIndex
_fingerPaths
_pointsArrays
_forcesArrays
_touchPathIndicesToFingerPathIndices
_timesArrays
_minimumFingerLineWidth
_maximumFingerLineWidth
_replayableGesture
initWithStyle:reuseIdentifier:specifier:
initWithActivityIndicatorStyle:
setHidesWhenStopped:
contentView
_updateCheckMarkIcon
removeFromSuperview
setAccessoryType:
detailTextLabel
setDeviceState:
titleLabel
frame
iconImageView
startAnimating
stopAnimating
tableCellValue1BlueColor
_labelColor
refreshCellContentsWithSpecifier:
checkedImage
setImage:
selectedCheckedImage
setHighlightedImage:
spacerImage
imageNamed:
kitImageNamed:
imageWithTintColor:renderingMode:
string
appendString:
title
textForBTPairedState:
setChecked:
setDeviceStatePaired:andConnected:
accessibilityTableViewCellText
_spinner
_state
setMultipleTouchEnabled:
setNeedsDisplay
initWithCoder:
numberOfDynamicFingerPathsInGestureRecorderView:
insertDynamicFingerPathAtIndex:
screen
scale
initWithPatternImage:
layoutFrame
dataSource
gestureRecorderView:setChromeVisible:
canToggleChromeForGestureRecorderView:
isChromeVisibleForGestureRecorderView:
hideControlsAction
_hideControls
initWithName:target:selector:
setHideControlsAction:
showControlsAction
_showControls
setShowControlsAction:
didMoveToWindow
_dynamicFingerPathAtIndex:
replayMode
setFillColor:
addSublayer:
CGPath
setPath:
gestureRecorderView:dynamicFingerPathAtIndex:
fingerPathDidChange:
previouslyActiveLayersByInstantReplayFingerIndex
removeFromSuperlayer
insertSublayer:atIndex:
_performTransitionToStaticFingers:transitionLayers:hasExistingStaticFingers:
removeObjectForKey:
allValues
removeAllObjects
animationWithKeyPath:
setValue:forKey:
numberWithBool:
valueForKey:
boolValue
freezeAllDynamicFingerPathsWithInstantReplayOffset:
copy
setPreviouslyActiveLayersByInstantReplayFingerIndex:
removeAllAnimations
sublayers
enumerateObjectsUsingBlock:
clearInstantReplayFingerPaths
drawRect:
setDataSource:
dynamicFingerPathBackgroundGradientPatternColor
isAccessibilityElement
accessibilityFrame
accessibilityLabel
accessibilityHint
accessibilityTraits
accessibilityCustomActions
reloadDynamicFingerPathAtIndex:
updateInstantReplayAtIndex:withPartialPath:
finishInstantReplayAtIndex:
gestureRecognizerShouldBegin:
dynamicFingerPathsContainerView
setDynamicFingerPathsContainerView:
setDynamicFingerPathBackgroundGradientPatternColor:
constrainedBoundsForDrawing
setConstrainedBoundsForDrawing:
setReplayMode:
_freezeDryStartTime
_freezeDryDrawPercentage
_freezeDryStartIndex
_freezedDynamicPaths
_activeLayers
_instantReplayViews
_staticLayers
_transitionLayers
_replayMode
_dataSource
_dynamicFingerPathsContainerView
_dynamicFingerPathBackgroundGradientPatternColor
_hideControlsAction
_showControlsAction
_previouslyActiveLayersByInstantReplayFingerIndex
_constrainedBoundsForDrawing
settings
preferredWindowLevel
setPreferredLevel:
safeIntegerForKey:
_isSystemUIService
_systemUIServiceClientSettings
_systemUIServiceIdentifier
_frontMostAppOrientation
valueWithPointer:
initWithLabel:boundingRect:
contextAnnotationMap
array
removeObject:
label
boundingRect
addLabel:boundingRect:withContext:
annotationsForContext:
_label
_boundingRect
stringByDeletingPathExtension
regularExpressionWithPattern:options:error:
localizedDescription
stringByReplacingMatchesInString:options:range:withTemplate:
_weatherCodeForGenericIconName:
descriptionForWeatherWFConditionCode:
floatValue
descriptionForWeatherConditionImageName:
descriptionForPrecipitation:weatherConditionCode:
stringWithUTF8String:
updateKeyboardHardwareState
softwareKeyboardManagerWillUpdateKeyboardState:
softwareKeyboardManager:didSetHardwareKeyboardAttached:
_wst_setIsHardwareKeyboardAttached:
_setIsHardwareKeyboardAttached:
softwareKeyboardManagerShouldSetHardwareKeyboardAttached:hardwareKeyboardIsCurrentlyAttached:newHardwareKeyboardAttachedValue:
_updateHardwareKeyboardState
isHardwareKeyboardAttached
_overrideSetHardwareKeyboardAttached:
addReasonToEnableSoftwareKeyboard:
removeReasonToEnableSoftwareKeyboard:
addReasonToDisableSoftwareKeyboard:
removeReasonToDisableSoftwareKeyboard:
_reasonsToDisableSoftwareKeyboard
_reasonsToEnableSoftwareKeyboard
systemGrayColor
setTextColor:
localizedUppercaseString
constraintLessThanOrEqualToAnchor:constant:
centerYAnchor
initWithSpecifier:
preferredHeightForWidth:
preferredHeightForWidth:inTableView:
showSpinner
hideSpinner
_text
isMainThread
setDidUpdateItems:
boundsForLastReload
didUpdateItems
setBoundsForLastReload:
_reloadViews
containers
endCycling
items
elementName
elementFrame
fixedCoordinateSpace
convertRect:fromCoordinateSpace:
safeAreaInsets
initWithName:elementFrame:availableBounds:styleProvider:
elementLabelContainerSize
setForcedLabelContainerSize:
_arrangeNameViews:withinContainer:
subviews
removeObjectsInArray:
beginCycling
labelContainerFrame
collidesWithView:
labelPosition
setLabelPosition:
_adjustLabelPositionForView:toAvoidCollidingWithView:
hasExtendedArrow
setItems:
viewsInCycle
setLoggingFacility:
_didUpdateItems
_items
_loggingFacility
_containers
_boundsForLastReload
_ignoresHitTest
setClipsToBounds:
_didUpdateOrientation:
_updateInterfaceOrientationFromDeviceOrientation:
_sceneSettingsSafeAreaInsetsDidChange
interfaceOrientation
_isSecure
_normalizedSafeAreaInsets
userInterfaceLayoutDirection
setExportedInterface:
setExportedObject:
endpointRequestSatisfierDidDisconnect:
setInvalidationHandler:
endpointForConnection:forEndpointRequestSatisfier:
initWithConnection:
endpointForRequestingConnection:fromEndpointVendor:
listener:shouldAcceptNewConnection:
initWithXPCListener:
_listener
_activeConnections
_updateForCycleIndex
_makeNextViewVisible
setCycleIndex:
isMakingNextViewVisible
setShouldSkipMakingNextViewVisible:
cycleIndex
setIsMakingNextViewVisible:
shouldSkipMakingNextViewVisible
animateWithDuration:animations:completion:
_isMakingNextViewVisible
_shouldSkipMakingNextViewVisible
_cycleIndex
fingerPathCollection
dynamicFingerPathCollection
setFingerPathCollection:
setDynamicFingerPathCollection:
setShouldPreventFurtherRecording:
setTrackingTouches:
_endInstantReplay
_exitReplayMode
setReplayTimestampIndex:
setReplayTimestampsCount:
_advanceReplay
_freezeAllDynamicFingerPaths
replayTimestampIndex
replayTimestampsCount
replayDynamicFingerPaths
setReplayDynamicFingerPaths:
_didFinishReplayingRecordedGesture
instantReplayTimestampIndexes
setInstantReplayTimestampIndexes:
instantReplayPartialFingerPaths
setInstantReplayPartialFingerPaths:
isEmpty
_endInstantReplayForStaticFingerAtIndex:
_advanceInstantReplayForStaticFingerAtIndex:
isViewLoaded
_clearWeakReferencesWithOutlets
reloadAllFingerPaths
_startInstantReplayForStaticFingerAtIndex:
shouldPreventFurtherRecording
isTrackingTouches
anyObject
setWithObject:
_didStartRecordingAtomicFingerPathAtPoint:
setTrackingTouchesDidStartTimeInterval:
_updateDynamicFingerPathsWithTouches:touchesDidEnd:
trackingTouchesDidStartTimeInterval
_maximumDurationOfRecordedGesture
touchesForView:
_didStopRecordingAtomicFingerPath
touchesEnded:withEvent:
touchesBegan:withEvent:
touchesMoved:withEvent:
touchesCancelled:withEvent:
_shouldPreventFurtherRecording
_trackingTouches
_fingerPathCollection
_dynamicFingerPathCollection
_trackingTouchesDidStartTimeInterval
_replayTimestampIndex
_replayTimestampsCount
_replayDynamicFingerPaths
_instantReplayTimestampIndexes
_instantReplayPartialFingerPaths
labelMinimumContentSizeCategory
labelMaximumContentSizeCategory
_preferredContentSizeCategoryCappedByMinimumContentSizeCategory:maximumContentSizeCategory:
_layoutViewSideLengthScaledFromDefaultLength:labelContentSizeCategory:
_imageMaximumContentSizeCategoryIndependentOfLabel
minimumOuterPadding
defaultSideLength
_traitCollectionForMinimumContentSizeCategory:maximumContentSizeCategory:
imageMinimumContentSizeCategory
imageMaximumContentSizeCategory
systemFontOfSize:
_lightSystemFontOfSize:
traitCollectionForLabelPreferredContentSizeCategory
scaledFontForFont:compatibleWithTraitCollection:
layoutItemsByLocation:positions:rows:columns:clockwiseOctagonalLocations:horizontallyCenteredLocation:
_enableAutoLayoutForAllItems:
itemConstraints
deactivateConstraints:
setItemConstraints:
_setUpConstraintsForPreferredPositionsForItems:positions:
_setUpConstraintsToAlignItems:rows:columns:
_setUpConstraintsToAvoidCollisions:rows:columns:clockwiseOctagonalLocations:
centerXAnchor
positioningLayoutGuides
removeLayoutGuide:
setPositioningLayoutGuides:
addLayoutGuide:
widthAnchor
constraintEqualToAnchor:multiplier:
heightAnchor
imageView
leftAnchor
rightAnchor
_enumerateListsOfLocations:items:withBlock:
constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:
constraintGreaterThanOrEqualToSystemSpacingBelowAnchor:multiplier:
constraintGreaterThanOrEqualToAnchor:constant:
lastBaselineAnchor
imageViewContainerView
constraintGreaterThanOrEqualToAnchor:
constraintLessThanOrEqualToAnchor:
centerItems:withView:
layoutViewSideLengthScaledFromDefaultLength:
traitCollectionForImagePreferredContentSizeCategory
labelFont
layoutItemsByLocation:hasBackButton:
centerItems:
_itemConstraints
_positioningLayoutGuides
convertPoint:fromView:
touchRepresentationWithHandType:location:
newGSEventRef
_createTouchesWithGSEvent:phase:view:
itemBackgroundViewCreationHandler
effectWithStyle:
initWithEffect:
_updateLabelContainerSize
_updateFromMainProperties
_usesExtendedArrow
_updateFromLabelContainerFrame
_collisionFrameForArrow
_usesArrow
arrowTipLocation
_arrowPointsDown
availableBounds
forcedLabelContainerSize
sizeToFit
setLabelContainerSize:
_shouldAllowLongArrows
_elementFrameAdjustedForBounds
labelContainerSize
_arrowHeight
setArrowTipLocation:
_validateLabelContainerFrame:
setLabelContainerFrame:
_outlineWidth
metricsForTextStyle:
scaledValueForValue:
_newBackgroundImage
setMaskView:
_cornerRadius
bezierPathWithRoundedRect:cornerRadius:
setLineWidth:
addQuadCurveToPoint:controlPoint:
stroke
fill
_backgroundView
_backgroundMaskView
_labelPosition
_forcedLabelContainerSize
_labelContainerSize
_arrowTipLocation
_elementFrame
_availableBounds
_labelContainerFrame
_systemGroupBackgroundCellColor
tableSeparatorColor
initWithProgressViewStyle:
_quaternaryLabelColor
setTrackTintColor:
progress
setProgress:animated:
size
fontWithName:size:
buttonWithType:
_secondaryLabelColor
setTitleColor:forState:
leftButton
rightButton
setRightButton:
setLeftButton:
_buttonTapped:
addTarget:action:forEvents:
isEnabled
isLeftButtonEnabled
setLeftButtonEnabled:
isRightButtonEnabled
setRightButtonEnabled:
middleButton
_leftButton
_rightButton
_progressView
_middleButton
_accessibilityAncestorIsKindOf:
_accessibilityFindUnsortedSubviewDescendantsPassingTest:
_atvaccessibilityClosestElementAbove:
accessibilityIdentifier
accessibilityContainer
_atvaccessibilityGeometricNearestHeader
_atvaccessibilityAncestorHasAXID:
_atvaccessibilityITMLAccessibilityContent
_atvaccessibilityITMLClass
ax_constraintsToMakeItem:sameDimensionsAsItem:
integerValue
constraints
removeConstraint:
ax_removeFromContainer
ax_constraintsToMakeView:sameDimensionsAsView:
setItemBackgroundViewCreationHandler:
_itemBackgroundViewCreationHandler
stringByAppendingPathComponent:
bundleWithPath:
bundleWithIdentifier:
rangeOfString:
substringFromIndex:
stringByAppendingFormat:
_referenceBounds
_deviceSpecificImageNamed:inBundle:
systemImageNamed:
systemWhiteColor
systemGreenColor
systemYellowColor
systemRedColor
systemOrangeColor
zoomShouldFollowFocus
convertRect:toWindow:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"NSXPCListenerEndpoint">16
@24@0:8@16
v16@0:8
@"NSXPCConnection"
v24@0:8@16
v28@0:8@16B24
v24@0:8@"CAAnimation"16
v28@0:8@"CAAnimation"16B24
@?16@0:8
v60@0:8@16@24@32B40d44@?52
v32@0:8@16@24
v40@0:8@16@24f32f36
v48@0:8@16@24d32@?40
v56@0:8@16@24f32f36d40@?48
@32@0:8@16@24
@24@0:8f16f20
B32@0:8@16@24
B48@0:8@16@24@32@40
B40@0:8@16@24@32
v40@0:8@16q24d32
v32@0:8@16q24
v56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v40@0:8@16@24@?32
v32@0:8@16@?24
Q32@0:8@16@24
@40@0:8@16@24@32
B40@0:8@16@24@?32
v40@0:8@16@24@32
v24@0:8@"UIApplication"16
B32@0:8@"UIApplication"16@"NSDictionary"24
B32@0:8@"UIApplication"16@"NSURL"24
B48@0:8@"UIApplication"16@"NSURL"24@"NSString"32@40
B40@0:8@"UIApplication"16@"NSURL"24@"NSDictionary"32
v40@0:8@"UIApplication"16q24d32
v32@0:8@"UIApplication"16q24
v56@0:8@"UIApplication"16{CGRect={CGPoint=dd}{CGSize=dd}}24
v32@0:8@"UIApplication"16@"UIUserNotificationSettings"24
v32@0:8@"UIApplication"16@"NSData"24
v32@0:8@"UIApplication"16@"NSError"24
v32@0:8@"UIApplication"16@"NSDictionary"24
v32@0:8@"UIApplication"16@"UILocalNotification"24
v48@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@"NSDictionary"40@?<v@?>48
v48@0:8@"UIApplication"16@"NSString"24@"NSDictionary"32@?<v@?>40
v56@0:8@"UIApplication"16@"NSString"24@"UILocalNotification"32@"NSDictionary"40@?<v@?>48
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?Q>32
v32@0:8@"UIApplication"16@?<v@?Q>24
v40@0:8@"UIApplication"16@"UIApplicationShortcutItem"24@?<v@?B>32
v40@0:8@"UIApplication"16@"NSString"24@?<v@?>32
v40@0:8@"UIApplication"16@"NSDictionary"24@?<v@?@"NSDictionary">32
@32@0:8@"UIApplication"16@"INIntent"24
v40@0:8@"UIApplication"16@"INIntent"24@?<v@?@"INIntentResponse">32
Q32@0:8@"UIApplication"16@"UIWindow"24
B32@0:8@"UIApplication"16@"NSString"24
@"UIViewController"40@0:8@"UIApplication"16@"NSArray"24@"NSCoder"32
B32@0:8@"UIApplication"16@"NSCoder"24
v32@0:8@"UIApplication"16@"NSCoder"24
B40@0:8@"UIApplication"16@"NSUserActivity"24@?<v@?@"NSArray">32
v40@0:8@"UIApplication"16@"NSString"24@"NSError"32
v32@0:8@"UIApplication"16@"NSUserActivity"24
v32@0:8@"UIApplication"16@"CKShareMetadata"24
@"UISceneConfiguration"40@0:8@"UIApplication"16@"UISceneSession"24@"UISceneConnectionOptions"32
v32@0:8@"UIApplication"16@"NSSet"24
@"UIWindow"16@0:8
v24@0:8@"UIWindow"16
v32@0:8q16d24
v20@0:8B16
@"FBSOrientationObserver"
@"UIWindow"
B48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
@"VOSBluetoothDevice"
@"NSString"
d24@0:8@16
v40@0:8@16{CGPoint=dd}24
d24@0:8@"AXGestureRecorderViewController"16
v40@0:8@"AXGestureRecorderViewController"16{CGPoint=dd}24
v24@0:8@"AXGestureRecorderViewController"16
B24@0:8@"AXGestureRecorderViewController"16
v28@0:8@"AXGestureRecorderViewController"16B24
v32@0:8@16Q24
v32@0:8@"AXGestureRecorderControlsView"16Q24
@24@0:8q16
v40@0:8{CGSize=dd}16@32
v52@0:8Q16B24Q28B36B40@?44
v44@0:8Q16B24^i28^@36
v32@0:8{CGPoint=dd}16
v24@0:8Q16
d16@0:8
v24@0:8d16
q16@0:8
v24@0:8q16
@"AXGestureRecorderStyleProvider"
@"AXGestureRecorderViewController"
@"AXGestureRecorderControlsView"
@"UILabel"
@"UIBarButtonItem"
@"<AXGestureRecorderMainViewControllerDelegate>"
@"AXAssertion"
@20@0:8f16
v36@0:8q16d24f32
v32@0:8q16@24
v36@0:8q16@24f32
v40@0:8q16@24d32
v44@0:8q16@24d32f40
v40@0:8q16q24@32
v48@0:8q16q24@32d40
v52@0:8q16q24@32d40f48
@32@0:8q16d24
@36@0:8q16d24f32
@32@0:8q16@24
@36@0:8q16@24f32
@40@0:8q16@24d32
@44@0:8q16@24d32f40
@40@0:8q16q24@32
@48@0:8q16q24@32d40
@52@0:8q16q24@32d40f48
v64@0:8q16q24@32q40d48d56
v68@0:8q16q24@32q40d48d56f64
@64@0:8q16q24@32q40d48d56
@68@0:8q16q24@32q40d48d56f64
v32@0:8{?=ffff}16
{CGSize=dd}16@0:8
f16@0:8
@"NSArray"
@"SCROBrailleClient"
@"<VOSBluetoothConnectableDevice>"
@28@0:8@16B24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGSize=dd}32@0:8{CGSize=dd}16
@"UIFontMetrics"
@24@0:8Q16
@32@0:8Q16Q24
d24@0:8Q16
{CGPoint=dd}40@0:8{CGPoint=dd}16@32
@56@0:8{CGPoint=dd}16d32@40@48
v40@0:8@16@24d32
@"<AXGestureRecorderFingerPathCollectionDelegate>"
@"NSMutableArray"
@"NSMutableDictionary"
@"AXMutableReplayableGesture"
@20@0:8i16
@40@0:8q16@24@32
v20@0:8i16
v24@0:8B16B20
@"UIActivityIndicatorView"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v32@0:8Q16@24
v36@0:8@16@24B32
@"<AXGestureRecorderViewDelegate>"
@"UIView"
@"UIColor"
@"UIAccessibilityCustomAction"
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGContext=}56
@24@0:8^{CGContext=}16
@56@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24
@32@0:8@16Q24
Q24@0:8@16
@"NSMutableSet"
@"<AXUISoftwareKeyboardManagerDelegate>"
d24@0:8d16
d32@0:8d16@24
@"UIView<PSHeaderFooterView>"24@0:8@"PSSpecifier"16
d32@0:8d16@"UITableView"24
@"NSObject<OS_os_log>"
@"AXElementNamesStyleProvider"
{UIEdgeInsets=dddd}16@0:8
@"<AXDragEndpointRequestSatisfierDelegate>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListenerEndpoint"32@0:8@"NSXPCConnection"16@"AXDragEndpointRequestSatisfier"24
v24@0:8@"AXDragEndpointRequestSatisfier"16
@"NSXPCListener"
@"<AXDragEndpointVendorDelegate>"
Q24@0:8@"AXGestureRecorderView"16
@"UIBezierPath"32@0:8@"AXGestureRecorderView"16Q24
B24@0:8@"AXGestureRecorderView"16
v28@0:8@"AXGestureRecorderView"16B24
v32@0:8@"AXGestureRecorderFingerPathCollection"16Q24
@"<AXGestureRecorderViewControllerDelegate>"
@"AXGestureRecorderFingerPathCollection"
v64@0:8@16@24@32@40@48@56
@48@0:8@16@24@32@40
@96@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24{CGRect={CGPoint=dd}{CGSize=dd}}56@88
v32@0:8{CGSize=dd}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGPoint=dd}16@0:8
@"UIImageView"
{CGSize="width"d"height"d}
{CGPoint="x"d"y"d}
v20@0:8f16
v64@0:8i16@20B28i32@36B44d48@?56
@"UIButton"
@"ASTBiggerProgressView"
@"<AXGestureRecorderControlsViewDelegate>"
