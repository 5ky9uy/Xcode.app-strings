@"NSArray"8@?0
v8@?0
-[DAAccountNotifier _disableLocalStoreIfNeedForAccount:]
com.apple.dataaccessd.account.contactSearchAccountChanged
dataaccessd
remindd
CalendarMigrationTool
calaccessd
DAAccountNotifier.m
account should not be nil for a change type of modify
oldAccount should not be nil for a change type of modify
username
active
authenticated
creationDate
credential
accountDescription
enabledDataclasses
identifier
owningBundleID
parentAccountIdentifier
provisionedDataclasses
supportsAuthentication
accountType
visible
MCAccountIsManaged
CalAccountPropertyCalDAVAttachmentDownloadHasTakenPlace
kCalDAVCollectionSetName
CalAccountPropertyCalDAVLocalDataMigrationHasTakenPlace
kCalDAVPrincipalIsManuallyConfigured
kCalDAVPrincipalPathKey
CalAccountPropertyCalDAVSkipCredentialVerification
CalAccountPropertyCalDAVSyncHasTakenPlace
kCalDAVUseKerberos
kCalDAVWebServicesRecordGUID
kCalDAVDelegatePrincipalIsWriteableKey
kCalDAVDelegatePrincipalTitleKey
CalAccountPropertyExchangeUseExternalURL
kCalDAVMainPrincipalUIDKey
kCalDAVPrincipalIsDelegate
kCalDAVPrincipalsKey
kCalDAVPushDisabled
kCalDAVRefreshIntervalKey
DAAccountValidationDomain
CalDAVAccountVersion
CalDAVHostKey
CalDAVMainPrincipalUID
CalDAVMobileAccountCollectionSetName
CalDAVMobileAccountIsWritable
CalDAVMobileAccountOverriddenPort
CalDAVMobileAccountOverriddenScheme
CalDAVMobileAccountOverriddenServer
CalDAVMobileAccountSearchPropertySet
CalDAVMobileAccountSearchPropertySetKey_CoreDAV
CalDAVMobileAccountServerVersion
WasUpgradedFromLegacy
CalDAVPortKey
CalDAVPrincipals
CalDAVSchemeKey
DAAccountEmailAddress
DAAccountHost
DAOldKeychainURLs
DAAccountPersistentUUID
DAAccountPort
ACUIDisplayUsername
DAAccountUseSSL
DAAccountUseTrustedSSLCertificate
DAAccountVersion2
DAAcountWasUpgradedFromLegacyAccount
DAAccountDidAutodiscover
DAEASEndPointFQDN
DAEncryptionIdentityPersistentReference
DAExchangeOAuthSupportedKey
DAExchangeOAuthURI
DAExchangeOAuthTokenRequestURI
DAIdentityPersist
DAIdentityPersistIsManagedByProfile
DASigningIdentityPersistentReference
DATrustSettingsExceptions
SubCalCalDAVURL
SubCalExtRep
FilterAttachments
com.apple.ical.urlsubscribe.filtertasks
isManagedByServer
RefreshInterval
SubCalShouldRemoveAlarms
SubCalSyncId
URLSanitized
Refusing to save account because DAAccountDoNotSave is set to "%@"
Stopping daemon monitoring agents for account with identifier %{public}@
Got stopMonitoringAgentsToken of %d for account with identifier %{public}@
No outstanding stopMonitoringAgentsTokens for account with identifier %{public}@
Unexpected empty token array in stopMonitoringAgentsTokens for account with identifier %{public}@
Starting daemon monitoring agents for account with identifier %{public}@
Starting daemon monitoring agents with token %d for account with identifier %{public}@
Failed to get NSDevice to determine if this watch is standalone. Will assume it is not.
Failed to get device property to determine if this watch is standalone. Will assume it is not.
Got device standalone status: %{public}@
Paired device registry status changed to %{public}@. Clearing isDeviceStandalone cache.
Ignoring account change because device should not process account changes
Ignoring account change of type %d
Got willChange notification of type %d for account with no identifier: %@
DAAccountNotifier: Account added
Error disabling tasks and events in tinker mode: %@
Successfully disabled tasks and events in local store for tinker mode.
DAAccountNotifier: nil local source
DAAccountNotifier: Added account was not interesting
Got didChange notification of type %d for account with no identifier: %@
Not restarting agents for failed save of account %{public}@ because DataAccess made the change
Restarting agents for failed save of account %{public}@
Handling account change because it is an add
Handling account change because it is a delete
Handling account change because the save failed and it was inferred to have been an add
Handling account change because the save failed and it was inferred to have been a delete
Unexpected change type (%d). We will assume we should handle this.
Handling account change because the property %{public}@ changed
Handling account change because the account property %{public}@ changed
Handling account change because the data class %{public}@ changed its enabled state to %{public}@
Handling account change because the data class %{public}@ changed its provisioned state to %{public}@
Handling account change because the properties for data class %{public}@ changed
Not handling account change because we don't see a relevant change
DAAccountNotifier
ACDAccountNotificationPlugin
NSObject
DAAccountChangeUpdaterACDAccountStoreWrapper
DAAccountChangeHandlerAccountStoreUpdater
init
defaultCenter
_pairingStatusChanged:
addObserver:selector:name:object:
DAAccountSavePreflighted
objectForKeyedSubscript:
accountType
identifier
leafAccountTypesToCheckForEquality
containsObject:
daAccountSubclassWithBackingAccountInfo:
accountsWithAccountTypeIdentifier:
count
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
isEqualToString:
accountTypeWithIdentifier:
setAccountType:
addObject:
canSaveWithAccountProvider:
leafAccountTypes
DAAccountDoNotSaveReason
enabledDataclasses
mutableCopy
minusSet:
unionSet:
_dataclassesWeCareAbout
intersectSet:
sharedConnection
requestDaemonStopMonitoringAgents
stopMonitoringAgentsTokens
setObject:forKeyedSubscript:
numberWithUnsignedInteger:
lastObject
removeObjectForKey:
removeLastObject
_popMonitoringAgentsTokenForAccountWithIdentifier:
unsignedIntegerValue
requestDaemonStartMonitoringAgentsWithToken:
_fetchIsDeviceStandalone:
sharedInstance
activeDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
firstObject
valueForProperty:
boolValue
userInfo
shouldProcessAccountChanges
_isStoreFromRemindd:
_isStoreFromCalendarMigrationTool:
_isStoreFromCalaccessd:
_daAccountChangeType:forACAccountChangeType:
_isStoreFromDataAccess:
parentAccountTypes
_shouldRefreshForChangeOfType:forAccount:oldAccount:
_stopMonitoringAgentsForAccountWithIdentifier:
_modifiedDataclassesForAccount:oldAccount:
accountProperties
username
credential
password
client
name
initWithChangeType:accountIdentifier:accountTypeIdentifier:oldAccountProperties:username:password:oldUsername:oldPassword:modifiedDataClasses:clientName:
initWithAccount:store:
handleAccountWillChange:withChangeInfo:store:accountUpdater:
parentAccount
initWithEKOptions:
localSource
setAllowsTasks:
setAllowsEvents:
saveSource:commit:error:
_disableLocalStoreIfNeedForAccount:
_startMonitoringAgentsIfNeededForAccountWithIdentifier:
isEnabledForDataclass:
handleAccountDidChange:withChangeInfo:store:
_isStore:fromClient:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_propertiesThatTriggerRefresh
valueForKey:
isEqual:
_accountPropertiesThatTriggerRefresh
accountPropertyForKey:
isProvisionedForDataclass:
propertiesForDataclass:
arrayWithObjects:count:
setWithArray:
CalDAVSubscribedCalendarsKey
DAAccountIdentifiersToIgnoreForUniquenessCheck
DAAccountPrincipalPath
SubCalFilterAlarmsKey
SubCalSubscriptionURLKey
SubCalTitleKey
SubCalInsecureConnectionApproved
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
canSaveAccount:inStore:
canSaveAccount:inStore:error:
canRemoveAccount:inStore:
canRemoveAccount:inStore:error:
account:willChangeWithType:inStore:oldAccount:
account:didChangeWithType:inStore:oldAccount:
account:willPerformActionsForDataclasses:
account:didPerformActionsForDataclasses:
.cxx_destruct
_isDeviceStandalone
_isDeviceStandaloneValid
_isDeviceStandaloneLock
_stopMonitoringAgentsTokensLock
_stopMonitoringAgentsTokens
T@"NSMutableDictionary",R,N,V_stopMonitoringAgentsTokens
TB,R,N
addAccountNoSave:error:
updateAccountNoSave:error:
deleteAccountNoSave:error:
addAccount:withCompletionHandler:
updateAccount:withCompletionHandler:
removeAccount:completion:
_account
_store
@16@0:8
B28@0:8^Q16i24
B24@0:8@16
B32@0:8@16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B40@0:8@16@24^@32
B44@0:8@16i24@28@36
v44@0:8@16i24@28@36
v32@0:8@16@24
B32@0:8@"ACAccount"16@"ACDAccountStore"24
B40@0:8@"ACAccount"16@"ACDAccountStore"24^@32
B44@0:8@"ACAccount"16i24@"ACDAccountStore"28@"ACAccount"36
v44@0:8@"ACAccount"16i24@"ACDAccountStore"28@"ACAccount"36
v32@0:8@"ACAccount"16@"NSArray"24
@32@0:8@16@24
v24@0:8@16
@24@0:8@16
B24@0:8^B16
B36@0:8i16@20@28
v16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
v32@0:8@16@?24
v32@0:8@"ACAccount"16@?<v@?B@"NSError">24
@"ACAccount"
@"ACDAccountStore"
@"NSArray"8@?0
v8@?0
-[DAAccountNotifier _disableLocalStoreIfNeedForAccount:]
com.apple.dataaccessd.account.contactSearchAccountChanged
dataaccessd
remindd
CalendarMigrationTool
calaccessd
DAAccountNotifier.m
account should not be nil for a change type of modify
oldAccount should not be nil for a change type of modify
username
active
authenticated
creationDate
credential
accountDescription
enabledDataclasses
identifier
owningBundleID
parentAccountIdentifier
provisionedDataclasses
supportsAuthentication
accountType
visible
MCAccountIsManaged
CalAccountPropertyCalDAVAttachmentDownloadHasTakenPlace
kCalDAVCollectionSetName
CalAccountPropertyCalDAVLocalDataMigrationHasTakenPlace
kCalDAVPrincipalIsManuallyConfigured
kCalDAVPrincipalPathKey
CalAccountPropertyCalDAVSkipCredentialVerification
CalAccountPropertyCalDAVSyncHasTakenPlace
kCalDAVUseKerberos
kCalDAVWebServicesRecordGUID
kCalDAVDelegatePrincipalIsWriteableKey
kCalDAVDelegatePrincipalTitleKey
CalAccountPropertyExchangeUseExternalURL
kCalDAVMainPrincipalUIDKey
kCalDAVPrincipalIsDelegate
kCalDAVPrincipalsKey
kCalDAVPushDisabled
kCalDAVRefreshIntervalKey
DAAccountValidationDomain
CalDAVAccountVersion
CalDAVHostKey
CalDAVMainPrincipalUID
CalDAVMobileAccountCollectionSetName
CalDAVMobileAccountIsWritable
CalDAVMobileAccountOverriddenPort
CalDAVMobileAccountOverriddenScheme
CalDAVMobileAccountOverriddenServer
CalDAVMobileAccountSearchPropertySet
CalDAVMobileAccountSearchPropertySetKey_CoreDAV
CalDAVMobileAccountServerVersion
WasUpgradedFromLegacy
CalDAVPortKey
CalDAVPrincipals
CalDAVSchemeKey
DAAccountEmailAddress
DAAccountHost
DAOldKeychainURLs
DAAccountPersistentUUID
DAAccountPort
ACUIDisplayUsername
DAAccountUseSSL
DAAccountUseTrustedSSLCertificate
DAAccountVersion2
DAAcountWasUpgradedFromLegacyAccount
DAAccountDidAutodiscover
DAEASEndPointFQDN
DAEncryptionIdentityPersistentReference
DAExchangeOAuthSupportedKey
DAExchangeOAuthURI
DAExchangeOAuthTokenRequestURI
DAIdentityPersist
DAIdentityPersistIsManagedByProfile
DASigningIdentityPersistentReference
DATrustSettingsExceptions
SubCalCalDAVURL
SubCalExtRep
FilterAttachments
com.apple.ical.urlsubscribe.filtertasks
isManagedByServer
RefreshInterval
SubCalShouldRemoveAlarms
SubCalSyncId
URLSanitized
Refusing to save account because DAAccountDoNotSave is set to "%@"
Stopping daemon monitoring agents for account with identifier %{public}@
Got stopMonitoringAgentsToken of %d for account with identifier %{public}@
No outstanding stopMonitoringAgentsTokens for account with identifier %{public}@
Unexpected empty token array in stopMonitoringAgentsTokens for account with identifier %{public}@
Starting daemon monitoring agents for account with identifier %{public}@
Starting daemon monitoring agents with token %d for account with identifier %{public}@
Failed to get NSDevice to determine if this watch is standalone. Will assume it is not.
Failed to get device property to determine if this watch is standalone. Will assume it is not.
Got device standalone status: %{public}@
Paired device registry status changed to %{public}@. Clearing isDeviceStandalone cache.
Ignoring account change because device should not process account changes
Ignoring account change of type %d
Got willChange notification of type %d for account with no identifier: %@
DAAccountNotifier: Account added
Error disabling tasks and events in tinker mode: %@
Successfully disabled tasks and events in local store for tinker mode.
DAAccountNotifier: nil local source
DAAccountNotifier: Added account was not interesting
Got didChange notification of type %d for account with no identifier: %@
Not restarting agents for failed save of account %{public}@ because DataAccess made the change
Restarting agents for failed save of account %{public}@
Handling account change because it is an add
Handling account change because it is a delete
Handling account change because the save failed and it was inferred to have been an add
Handling account change because the save failed and it was inferred to have been a delete
Unexpected change type (%d). We will assume we should handle this.
Handling account change because the property %{public}@ changed
Handling account change because the account property %{public}@ changed
Handling account change because the data class %{public}@ changed its enabled state to %{public}@
Handling account change because the data class %{public}@ changed its provisioned state to %{public}@
Handling account change because the properties for data class %{public}@ changed
Not handling account change because we don't see a relevant change
DAAccountNotifier
ACDAccountNotificationPlugin
NSObject
DAAccountChangeUpdaterACDAccountStoreWrapper
DAAccountChangeHandlerAccountStoreUpdater
init
defaultCenter
_pairingStatusChanged:
addObserver:selector:name:object:
DAAccountSavePreflighted
objectForKeyedSubscript:
accountType
identifier
leafAccountTypesToCheckForEquality
containsObject:
daAccountSubclassWithBackingAccountInfo:
accountsWithAccountTypeIdentifier:
count
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
isEqualToString:
accountTypeWithIdentifier:
setAccountType:
addObject:
canSaveWithAccountProvider:
leafAccountTypes
DAAccountDoNotSaveReason
enabledDataclasses
mutableCopy
minusSet:
unionSet:
_dataclassesWeCareAbout
intersectSet:
sharedConnection
requestDaemonStopMonitoringAgents
stopMonitoringAgentsTokens
setObject:forKeyedSubscript:
numberWithUnsignedInteger:
lastObject
removeObjectForKey:
removeLastObject
_popMonitoringAgentsTokenForAccountWithIdentifier:
unsignedIntegerValue
requestDaemonStartMonitoringAgentsWithToken:
_fetchIsDeviceStandalone:
sharedInstance
activeDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
firstObject
valueForProperty:
boolValue
userInfo
shouldProcessAccountChanges
_isStoreFromRemindd:
_isStoreFromCalendarMigrationTool:
_isStoreFromCalaccessd:
_daAccountChangeType:forACAccountChangeType:
_isStoreFromDataAccess:
parentAccountTypes
_shouldRefreshForChangeOfType:forAccount:oldAccount:
_stopMonitoringAgentsForAccountWithIdentifier:
_modifiedDataclassesForAccount:oldAccount:
accountProperties
username
credential
password
client
name
initWithChangeType:accountIdentifier:accountTypeIdentifier:oldAccountProperties:username:password:oldUsername:oldPassword:modifiedDataClasses:clientName:
initWithAccount:store:
handleAccountWillChange:withChangeInfo:store:accountUpdater:
parentAccount
initWithEKOptions:
localSource
setAllowsTasks:
setAllowsEvents:
saveSource:commit:error:
_disableLocalStoreIfNeedForAccount:
_startMonitoringAgentsIfNeededForAccountWithIdentifier:
isEnabledForDataclass:
handleAccountDidChange:withChangeInfo:store:
_isStore:fromClient:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
_propertiesThatTriggerRefresh
valueForKey:
isEqual:
_accountPropertiesThatTriggerRefresh
accountPropertyForKey:
isProvisionedForDataclass:
propertiesForDataclass:
arrayWithObjects:count:
setWithArray:
CalDAVSubscribedCalendarsKey
DAAccountIdentifiersToIgnoreForUniquenessCheck
DAAccountPrincipalPath
SubCalFilterAlarmsKey
SubCalSubscriptionURLKey
SubCalTitleKey
SubCalInsecureConnectionApproved
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
canSaveAccount:inStore:
canSaveAccount:inStore:error:
canRemoveAccount:inStore:
canRemoveAccount:inStore:error:
account:willChangeWithType:inStore:oldAccount:
account:didChangeWithType:inStore:oldAccount:
account:willPerformActionsForDataclasses:
account:didPerformActionsForDataclasses:
.cxx_destruct
_isDeviceStandalone
_isDeviceStandaloneValid
_isDeviceStandaloneLock
_stopMonitoringAgentsTokensLock
_stopMonitoringAgentsTokens
T@"NSMutableDictionary",R,N,V_stopMonitoringAgentsTokens
TB,R,N
addAccountNoSave:error:
updateAccountNoSave:error:
deleteAccountNoSave:error:
addAccount:withCompletionHandler:
updateAccount:withCompletionHandler:
removeAccount:completion:
_account
_store
@16@0:8
B28@0:8^Q16i24
B24@0:8@16
B32@0:8@16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B40@0:8@16@24^@32
B44@0:8@16i24@28@36
v44@0:8@16i24@28@36
v32@0:8@16@24
B32@0:8@"ACAccount"16@"ACDAccountStore"24
B40@0:8@"ACAccount"16@"ACDAccountStore"24^@32
B44@0:8@"ACAccount"16i24@"ACDAccountStore"28@"ACAccount"36
v44@0:8@"ACAccount"16i24@"ACDAccountStore"28@"ACAccount"36
v32@0:8@"ACAccount"16@"NSArray"24
@32@0:8@16@24
v24@0:8@16
@24@0:8@16
B24@0:8^B16
B36@0:8i16@20@28
v16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
v32@0:8@16@?24
v32@0:8@"ACAccount"16@?<v@?B@"NSError">24
@"ACAccount"
@"ACDAccountStore"
