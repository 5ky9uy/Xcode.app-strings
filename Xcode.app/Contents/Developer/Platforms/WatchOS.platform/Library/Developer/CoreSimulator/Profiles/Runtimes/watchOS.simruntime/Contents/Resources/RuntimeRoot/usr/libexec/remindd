setActionsMenuTitle:
actionsMenuTitle
setAlternateAction:
alternateAction
options
setOptions:
setRem_actionsMenuTitle:
rem_actionsMenuTitle
setRem_alternateAction:
rem_alternateAction
addPrivateOptions:
rem_supportsAlternateAction
objectForKeyedSubscript:
integerValue
migrateStore:
numberWithInteger:
setObject:forKeyedSubscript:
initWithConcurrencyType:
persistentStoreCoordinator
setPersistentStoreCoordinator:
setTransactionAuthor:
fetchRequest
arrayWithObjects:count:
setPropertiesToFetch:
setAffectedStores:
setFetchBatchSize:
predicateWithFormat:
setPredicate:
initWithFetchRequest:
setResultType:
executeRequest:error:
save:
performBlockAndWait:
result
unsignedIntegerValue
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
migrateStoreIfNeeded:metadata:
container
init
appendString:
stringByAppendingString:
ic_prettyDescriptionWithTabLevel:
appendFormat:
enumerateKeysAndObjectsUsingBlock:
ic_setNonNilObject:forKey:
ic_addKey:forNonNilObject:
isConnectedToAccountObject:
fetchRequestWithEntityName:
setTarget:
setSelector:
setDelay:
setWaitToFireUntilRequestsStop:
setCallOnMainThread:
setRequestQueue:
requestQueue
_cancelFireRequests
dealloc
waitToFireUntilRequestsStop
fireBlock
setFireBlock:
callTargetSelector
callOnMainThread
delay
isMainThread
target
selector
methodForSelector:
initWithTarget:selector:delay:waitToFireUntilRequestsStop:callOnMainThread:
requestFire
fireImmediately
isScheduledToFire
cancelPreviousFireRequests
.cxx_destruct
_waitToFireUntilRequestsStop
_callOnMainThread
_target
_selector
_delay
_requestQueue
_fireBlock
cloudkit
isDataLocalStoreURL:
migrateStore:metadata:
setFetchLimit:
executeFetchRequest:error:
count
firstObject
identifier
UUIDString
setThrottlingLevels:
setResetInterval:
loadSavedPolicyState
policyStartDate
timeIntervalSinceNow
resetInterval
resetPolicy
startPolicyResetTimer
policyResetTimer
invalidate
setPolicyResetTimer:
defaultCenter
removeObserver:
currentBatchCount
setCurrentBatchCount:
currentLevel
numberOfBatches
numberWithUnsignedInteger:
stringValue
currentLevelIndex
throttlingLevels
changeLevelIfNecessary
savePolicyState
setCurrentLevelIndex:
postNotificationName:object:
batchInterval
objectAtIndexedSubscript:
date
setPolicyStartDate:
isValid
dateByAddingTimeInterval:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
sharedUserDefaults
removeObjectForKey:
objectForKey:
doubleForKey:
dateWithTimeIntervalSinceReferenceDate:
setObject:forKey:
timeIntervalSinceReferenceDate
setDouble:forKey:
resetSavedPolicyState
initWithThrottlingLevels:resetInterval:
incrementBatchCount
_throttlingLevels
_resetInterval
_currentBatchCount
_currentLevelIndex
_policyStartDate
_policyResetTimer
cdEntityName
entityName
entityForName:inManagedObjectContext:
initWithEntity:insertIntoManagedObjectContext:
objectID
uuid
setIdentifier:
trigger
objectInManagedObjectContext:
setTrigger:
setAlarm:
setOperationQueue:
operationQueue
setMaxConcurrentOperationCount:
utilityQueue
setProcessingQueue:
setObjectIDsToProcess:
setZoneIDsNeedingToBeSaved:
setObjectIDsToRetry:
dictionary
setRetryCountsByOperationType:
setDiscretionaryNetwork:
setHasRetryTimer:
isInternetReachable
setWasInternetReachable:
setLastSyncSinceInternetReachable:
sharedSettings
hasOptions:
supportsSyncingToCloudKit
setDisabled:
setDisabledInternal:
setQualityOfService:
setDiscretionaryNetworkBehavior:
discretionaryNetwork
setAutomaticallyRetryNetworkFailures:
setTimeoutIntervalForResource:
setFetchingEnabled:
setDidCheckForLongLivedOperations:
processingQueue
initWithDebouncingInterval:queue:handler:
setApsNotificationHandlingDebouncer:
loadZoneFetchState
contextDidSave:
addObserver:selector:name:object:
setRecognizedCloudObjectClasses:
sharedInstance
setAppleAccountUtilities:
defaultCloudContainer
setContainer:
setSourceApplicationBundleIdentifier:
reachabilityChanged:
sharedReachabilityForInternetConnection
cloudKitAccountChanged:
setIsSystemAvailableForSyncing:
loadSubscribedSubscriptionIDs
setupAPSConnection
adjustAPSNotificationDebouncerInterval
updateCloudContextStateWithReason:
waitForSyncEngineSystemAvailabilityBlockingQueue:completionQueue:completionBlock:
updateConfiguration
updateSelectorDelayers
handleUnrecoverableError
addObserver:forKeyPath:options:context:
setDidAddObservers:
addStateHandler
setBuddyStateObserver:
setHasPassedBuddy:
hasPassedBuddy
registerForBuddy
initWithQueue:
buddyStateObserver
setBuddyDidFinishHandler:
start
stop
context
cloudKitAccountsInContext:
countByEnumeratingWithState:objects:count:
newCloudContainerForAccountID:
copy
length
containersByAccountID
mutableCopy
unregisterForBuddy
didAddObservers
removeObserver:forKeyPath:
cancelPreviousPerformRequestsWithTarget:
retryTimer
processingSelectorDelayer
pollingSelectorDelayer
masterStore
newBackgroundContextWithAuthor:
newBackgroundContextWithAuthor:enableQueryGenerationToken:
contextWithQueryGenerationTokenEnabled:
isSystemAvailableForSyncing
appleAccountUtilities
primaryCloudKitAccountInContext:appleAccountUtilities:
accountStatus
syncDisabledByServer
isCloudKitAccountAvailable
stringWithFormat:
isDisabled
isCloudKitAccountAvailableAndActive:
isReadyToSyncWithActiveAccountAvailable:
_isCloudKitAccountAvailableAndActive:managedObjectContext:
primaryCloudKitAccountInContext:
inactive
sharedConfiguration
minimumClientVersion
componentsSeparatedByString:
intValue
processInfo
isOperatingSystemAtLeastVersion:
setSyncDisabledByServer:
operatingSystemVersionString
disableCloudSyncingIfCurrentVersionNotSuppported
throttlingPolicy
processPendingCloudObjects
setProcessingSelectorDelayer:
pollingInterval
deleteAllServerChangeTokens
syncWithReason:discretionary:completionHandler:
recordTypes
_cloudObjectClassesByRecordType
array
addObjectsFromArray:
initWithZoneName:ownerName:
wasInternetReachable
lastSyncSinceInternetReachable
reachabilityChangeSyncThrottleInterval
updateCloudContextStateWithSyncOption:syncReason:withCompletionHandler:
updateAccountStatusWithCompletionHandler:
operationCount
string
operations
ic_loggingDescription
dataWithPropertyList:format:options:error:
bytes
ic_loggingIdentifier
ic_loggingValues
addStateHandlerWithName:stateBlock:
appZoneID
metadataZoneID
ic_isOwnedByCurrentUser
zoneIDsNeedingToBeSaved
addObject:
cloudContextDelegate
cloudContext:receivedZoneNotFound:
zoneIDsNeedingFetchChanges
removeObject:
cloudContext:sharedZoneWasDeleted:
saveZoneFetchState
database
databaseScope
deleteServerChangeTokenForRecordZoneID:databaseScope:
allCloudObjectsOfClassesPassingTest:inContext:
allValues
ic_objectsPassingTest:
allCloudObjectsInContext:
allCloudObjectIDsOfClassesPassingTest:inContext:
allCloudObjectIDsInContext:
allDirtyCloudObjectIDsInContext:
cStringUsingEncoding:
isReadyToSync
readinessLoggingDescription
errorForDisabledCloudSyncing
sync
_existingCloudDirtyToken
isFetchingEnabled
errorFromErrors:
timeIntervalSinceDate:
processAllDirtyCloudObjectsWithCompletionHandler:
sharedBabysitter
tokenByRegisteringAccount:forOperationWithName:
babySatErrorWithOperationName:
dictionaryWithObjects:forKeys:count:
postEventWithName:payload:error:performAutoBugCaptureOnError:
_clearCloudDirtyForToken:
_syncWithReason:completionHandler:
fetchRecordZoneChangesWithReason:completionHandler:
fetchDatabaseChangesWithReason:completionHandler:
ic_removeAllCKCompletionBlocksButNotTheNSOperationCompletionBlock_50200031
clearPendingActivity
cancelAllOperations
numberWithBool:
boolValue
UTF8String
waitUntilAllOperationsAreFinished
qualityOfService
discretionaryNetworkBehavior
configuration
automaticallyRetryNetworkFailures
timeoutIntervalForResource
initWithRecordZonesToSave:recordZoneIDsToDelete:
configureOperation:
privateCloudDatabase
setDatabase:
setMarkZonesAsUserPurged:
clearServerRecord
ic_saveWithLogDescription:
setModifyRecordZonesCompletionBlock:
setName:
setQuantity:
setExpectedSendSize:
setExpectedReceiveSize:
setGroup:
addOperation:
errorWithDomain:code:userInfo:
error
userInfo
doubleValue
code
domain
isEqualToString:
canRetryImmediatelyAfterError:
blockOperationWithBlock:
recordIDsToDelete
containsObject:
recordsToSave
recordID
recordIDs
addDependency:
integerForKey:
setInteger:forKey:
synchronize
setAccountStatus:
clearSubscribedSubscriptionIDs
clearZoneFetchState
accountStatusWithCompletionHandler:
fetchCurrentUserRecordOperation
setPerRecordCompletionBlock:
setFetchRecordsCompletionBlock:
fetchUserRecordOperationWithContainer:completionHandler:
fetchUserRecordWithContainer:completionHandler:
containerForAccountID:
fetchUserRecordOperationWithCompletionHandler:
initWithRecordsToSave:recordIDsToDelete:
setModifyRecordsCompletionBlock:
recordType
existingCloudObjectForRecordID:recordType:context:
cloudObjectClassesByRecordType
existingCloudObjectForRecordID:context:
newCloudObjectForRecord:context:
newPlaceholderObjectForRecordID:account:context:
addFetchOperationsForRecordIDs:operationGroupName:completionHandler:
operationsToFetchRecordIDs:operationGroupName:
addOperations:waitUntilFinished:
errorFromOperations:
objectsByDatabaseScope:
databaseWithDatabaseScope:
operationsToFetchRecordIDs:database:
ic_arrayByGroupingIntoArraysWithMaxCount:
operationToFetchRecordIDs:database:
initWithRecordIDs:
fetchOperation:progressWithRecordID:progress:
setPerRecordProgressBlock:
fetchOperation:fetchedRecord:recordID:error:
fetchOperation:didCompleteWithRecordsByRecordID:error:
objectWasFetchedButDoesNotExistInCloud
zoneID
receivedZoneNotFound:operation:
objectIDsToRetry
didFetchShare:context:
objectWasFetchedFromCloudWithRecord:
operationID
startRetryTimerIfNecessaryWithError:
rootRecordID
setZoneID:
newPlaceholderObjectForRecordID:account:recordType:context:
setServerShareIfNewer:
addModifyRecordsOperationsWithCloudObjectsToSave:delete:operationGroupName:waitForDependencies:completionHandler:
isSharedRootObject
shortLoggingDescription
enumerateObjectsUsingBlock:
operationsToModifyRecordsForCloudObjectsToSave:delete:deleteShares:operationGroupName:addDependencies:
newBackgroundContext
ic_objectsFromObjectIDs:context:
ic_save
allObjects
ckServerShare
ic_containsObjectPassingTest:
fetchRecordZoneChangesForZoneIDs:reason:completionHandler:
ic_objectIDsFromObjects:
_addModifyRecordsOperationsWithCloudObjectsToSave:delete:operationGroupName:waitForDependencies:completionHandler:
deduplicatedRecordsForCloudObjects:
ckServerRecord
operationsToModifyRecordsToSave:delete:rootRecordIDsByShareID:database:
operationToSaveZonesIfNecessary
objectWillBePushedToCloudWithOperation:
size
addDependenciesForModifyRecordsOperation:
sortedRecords:
reverseObjectEnumerator
arrayWithCapacity:
removeObjectAtIndex:
operationToModifyRecordsToSave:delete:rootRecordIDsByShareID:database:
addCallbackBlocksToModifyRecordsOperation:rootRecordIDsByShareID:
modifyRecordsOperation:perSaveRecordCompletion:error:
modifyRecordsOperation:didCompleteWithSavedRecords:deletedRecordIDs:rootRecordIDsByShareID:error:
existingCloudObjectForRecord:context:
objectFailedToBePushedToCloudWithOperation:record:error:
incrementFailureCounts
internalContext
objectWasPushedToCloudWithOperation:serverRecord:
shouldBeIgnoredForSync
decrementFailureCounts
recordName
setCkServerShare:
isOwnedByCurrentUser
markedForDeletion
deleteFromLocalDatabase
objectWasDeletedFromCloud
fixBrokenReferences
incrementOrClearRetryCountForOperationType:error:
modifyRecordsOperation:perDeleteRecordIDCompletion:rootRecordIDsByShareID:error:
recursiveCancelDependentOperations:
handleGenericPartialFailuresForError:operation:
didFailPushingExceededStorageQuotaForContext:
cloudContext:userDidDeleteRecordZoneWithID:
topologicallySortRecords:withError:
newlyCreatedRecord
errorsFromError:
dependencies
isCancelled
cancel
ownerName
recordZonesToSave
operationToSaveZonesForZoneIDs:
initWithZoneID:
isDisabledInternal
unionSet:
setWithSet:
minusSet:
objectIDsToProcess
hasRetryTimer
fireDate
ic_isEarlierThanDate:
addExecutionBlock:
needsToProcessAllDirtyObjects
setNeedsToProcessAllDirtyObjects:
processPendingCloudObjectsWithLabel:withCompletionHandler:
_addOperationToProcessBlock:
addOperationToProcessObjectsWithLabel:withCompletionHandler:
uploadSuspended
daWasMigrated
processObjectIDs:operationQueue:completionHandler:
mergeLocalObjectsFetchContext
isSubclassOfClass:
shouldAttemptLocalObjectMerge
_objectIDsThatShouldAttemptLocalObjectMergeWithCloudObjects:
setWithArray:
processPendingToMergeObjectIDs:operationQueue:completionHandler:
isInCloud
numberWithInt:
mergeLocalObjectsWriteContext
_performLocalObjectMergeWithFetchedCloudObjectIDs:primaryCloudKitAccount:managedObjectContext:error:
_processFetchedCloudObjectsWithObjectIDs:withManagedObjectContext:usingBlock:
setDaWasMigrated:
ckIdentifier
objectWithID:
existingLocalObjectToMergeWithPredicate:
mergeWithLocalObject:
refreshObject:mergeChanges:
cleanUpAfterLocalObjectMerge
addOperationToMergeLocalObjectsWithCompletionHandler:
_processCloudObjectIDs:operationQueue:completionHandler:
_processFetchedCloudObjectsWithObjectIDs:usingBlock:
entity
name
initWithArray:
ic_objectsFromObjectIDs:relationshipKeyPathsForPrefetching:context:
object
recognizedCloudObjectClasses
addOperationWithBlock:
existingObjectWithID:error:
_isRecognizedCloudObjectClass:
isInICloudAccount
ckNeedsToBeFetchedFromCloud
canBeRootShareObject
share
needsToBePushedToCloud
hasAllMandatoryFields
loggingDescription
needsToBeDeletedFromCloud
needsToDeleteShare
reset
subscriptionID
notificationType
notificationID
apsNotificationHandlingDebouncer
setWithObject:
_handleDatabaseNotificationWithScope:notificationID:completionHandler:
fire:completion:
localizedDescription
fetchDatabaseChangesForDatabases:reason:completionHandler:
componentsJoinedByString:
addOperationsToFetchRecordZoneChangesForZoneIDs:reason:completionHandler:
operationsToFetchRecordZoneChangesForZoneIDs:
setSuspended:
isFinished
isExecuting
ckUserRecordName
initWithCapacity:
zoneIDsFetchingChanges
operationToFetchRecordZoneChangesForZoneIDs:database:
group
quantity
zoneName
serverChangeTokenForRecordZoneID:databaseScope:
setPreviousServerChangeToken:
resultsLimitPerSyncOperation
setResultsLimit:
configurationsByRecordZoneID
isZoneConfigurations:subsetOfZoneConfigurations:
newOperationToFetchRecordZoneChangesWithZoneConfigurations:database:
allKeys
previousServerChangeToken
initWithRecordZoneIDs:configurationsByRecordZoneID:
setFetchAllChanges:
setShouldSortChildrenAfterFetching:
setRecordIDsToSortChildrenAfterFetching:
_performSortingChildrenObjectsAfterFetchingInBlockOfManagedObjectContext:fetchHasFullyCompleted:
fetchRecordZoneChangesOperation:recordChanged:context:
setRecordChangedBlock:
fetchRecordZoneChangesOperation:recordWasDeletedWithRecordID:recordType:context:
setRecordWithIDWasDeletedBlock:
fetchRecordZoneChangesOperation:zoneID:changeTokenUpdated:
setRecordZoneChangeTokensUpdatedBlock:
fetchRecordZoneChangesOperation:completedFetchForZoneID:serverChangeToken:error:
setRecordZoneFetchCompletionBlock:
fetchRecordZoneChangesOperationDidComplete:error:
setFetchRecordZoneChangesCompletionBlock:
saveServerChangeToken:forRecordZoneID:databaseScope:
recordZoneIDs
ic_shortLoggingDescription
objectWasDeletedFromCloudByAnotherDevice
shouldSortChildrenAfterFetching
recordIDsToSortChildrenAfterFetching
_recordTypesToSortChildrenAfterFetch
setWithCapacity:
sortChildrenObjects
sharedCloudDatabase
stringByAppendingFormat:
operationToFetchDatabaseChangesForDatabase:completionHandler:
serverChangeTokenForChangedZonesInDatabase:
initWithPreviousServerChangeToken:
fetchDatabaseChangesOperation:recordZoneWithIDChanged:
setRecordZoneWithIDChangedBlock:
fetchDatabaseChangesOperation:recordZoneWithIDWasDeleted:
setRecordZoneWithIDWasDeletedBlock:
fetchDatabaseChangesOperation:changeTokenUpdated:
setChangeTokenUpdatedBlock:
fetchDatabaseChangesOperation:finishedWithServerChangeToken:error:completionHandler:
setFetchDatabaseChangesCompletionBlock:
ic_objectsMatchingPredicate:context:
sharedZoneWasDeleted:
saveServerChangeToken:forChangedZonesInDatabase:
deleteServerChangeTokenForChangedZonesInDatabase:
zoneIDsFromZoneInfos:
setZoneIDsNeedingFetchChanges:
setZoneIDsFetchingChanges:
zoneInfosFromZoneIDs:
initWithSubscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
apsConnection
isSandboxEnvironment
initWithEnvironmentName:namedDelegatePort:queue:
setApsTopic:
apsTopic
setEnabledTopics:
setDelegate:
setApsConnection:
setNeedsToUpdateSubscriptions:
primaryICloudACAccount
rem_isRemindersMigrated
subscriptionForDatabase:
subscribedSubscriptionIDs
saveSubscriptionsForDatabase:completionHandler:
fetchAllSubscriptionsOperation
addSubscribedSubscriptionIDs:
setFetchSubscriptionCompletionBlock:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
subscriptionsToSave
setModifySubscriptionsCompletionBlock:
setSubscribedSubscriptionIDsLastModifiedDate:
distantPast
persistedSubscriptionIDsValidityPeriod
numberWithDouble:
subscribedSubscriptionIDsLastModifiedDate
stringArrayForKey:
setSubscribedSubscriptionIDs:
setByAddingObject:
isInForeground
didCheckForLongLivedOperations
checkForLongLivedOperations
needsToUpdateSubscriptions
updateSubscriptionsWithCompletionHandler:
didFinishMigration
ckServerChangeTokens
cloudContext:didFetchUserRecord:
operationQueueFetchUserRecordWithCompletionHandler:
fetchLongLivedOperationWithID:completionHandler:
fetchAllLongLivedOperationIDsWithCompletionHandler:
retryCountsByOperationType
shouldIgnoreErrorForBackoffTimer:operationType:
incrementRetryCountForOperationType:
clearRetryCountForOperationType:
setWithObjects:
errorCodesToIgnoreForBackoffTimer
timeIntervalToRetryAfterFromError:
retryOperationsIfNecessary
setRetryTimer:
allICloudAccountsWithCloudKitEnabled
accountDescription
aa_accountClass
serverChangeTokenForAccount:zoneID:databaseScope:context:
setServerChangeToken:
addServerChangeTokenForAccount:ckServerChangeToken:zoneID:databaseScope:context:
serverChangeToken
deleteObject:
removeCkServerChangeTokensObject:
clearUserRecord:
migrationZoneID
deleteRecordZonesWithZoneIDs:markZonesAsUserPurged:completionHandler:
updateUserRecordWithUpdateFunction:completionHandler:
cancelEverythingWithCompletionHandler:
postNotificationName:object:userInfo:
printOperationQueue
observeValueForKeyPath:ofObject:change:context:
registerDefaults:
boolForKey:
clearContainers
topic
notificationFromRemoteNotificationDictionary:
_markCloudAsDirtyAndReturnToken
handleNotification:completionHandler:
initWithRecordName:zoneID:
arrayWithObject:
writeMigrationStateTo:didChooseToMigrate:didFinishMigration:
adjustAPSNotificationDebouncerIntervalWithMigrationState:
setUploadSuspended:
didChooseToMigrate
apsDebouncerWatchMigrationInProgressInterval
apsDebouncerMigrationInProgressInterval
apsDebouncerWatchDefaultInterval
apsDebouncerDefaultInterval
setDebouncingInterval:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
waiterID
initWithMasterStore:
hasPendingOperations
allZoneIDs
isFetchingAllRecordZones
finishOperationsForRecordID:completionHandler:
fetchUserRecordWithCompletionHandler:
fetchUserRecordWithAccountID:completionHandler:
fetchRecordIDs:operationGroupName:completionHandler:
pushCloudObjects:operationGroupName:completionHandler:
deleteSharesForObjects:completionHandler:
deleteCloudObjects:operationGroupName:completionHandler:
partialError:containsErrorCode:
retryProcessingCloudObjects
firePollingSyncRequest
fetchSubscriptionsForDatabase:completionHandler:
deleteAllApplicationDataFromServerWithCompletion:
shouldPollCloudKitWhenLaunchingAndBackgrounding
accountsDidChange
applicationDidEnterBackground
applicationWillTerminate
applicationWillEnterForeground
setMigrationStateToDidChooseToMigrate:didFinishMigration:completionHandler:
migrationStateDidChange:didFinishMigration:
setCloudContextDelegate:
fetchOperationsPending
setPollingSelectorDelayer:
setContainersByAccountID:
containersByAccountIDLock
setContainersByAccountIDLock:
_fetchOperationsPending
_needsToUpdateSubscriptions
_disabled
_hasRetryTimer
_disabledInternal
_needsToProcessAllDirtyObjects
_didAddObservers
_fetchingEnabled
_syncDisabledByServer
_uploadSuspended
_didCheckForLongLivedOperations
_discretionaryNetwork
_automaticallyRetryNetworkFailures
_wasInternetReachable
_hasPassedBuddy
_isSystemAvailableForSyncing
_containersByAccountIDLock
_masterStore
_container
_cloudContextDelegate
_qualityOfService
_discretionaryNetworkBehavior
_operationQueue
_processingQueue
_appleAccountUtilities
_objectIDsToRetry
_retryTimer
_retryCountsByOperationType
_objectIDsToProcess
_processingSelectorDelayer
_pollingSelectorDelayer
_containersByAccountID
_zoneIDsNeedingFetchChanges
_zoneIDsFetchingChanges
_zoneIDsNeedingToBeSaved
_subscribedSubscriptionIDs
_subscribedSubscriptionIDsLastModifiedDate
_timeoutIntervalForResource
_apsTopic
_apsConnection
_apsNotificationHandlingDebouncer
_lastSyncSinceInternetReachable
_buddyStateObserver
_recognizedCloudObjectClasses
willChangeValueForKey:
setPrimitiveValue:forKey:
didChangeValueForKey:
alarm
reminder
updateDisplayDate
ic_loggingDescriptionIncludingBrackets:
defaultSessionConfiguration
setDiscretionary:
sessionWithConfiguration:
loadLocalConfigurationFile
downloadRemoteConfiguration:
setDownloadTimer:
downloadTimer
stringForKey:
fileURLWithPath:
checkResourceIsReachableAndReturnError:
availableConfigurationURLs
lastPathComponent
ic_objectPassingTest:
setDefaultConfigurationURL:
containsString:
path
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
URLByAppendingPathExtension:
bundleForClass:
resourceURL
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
cachedConfigurationURL
dictionaryWithContentsOfURL:
isConfigurationValid:
setConfigurationFromDictionary:
defaultConfigurationURL
loadConfigurationFromURL:
URLWithString:
downloadConfigurationFromRemoteURL:completionHandler:
session
statusCode
propertyListWithData:options:format:error:
writeToURL:error:
localizedStringForStatusCode:
dataTaskWithURL:completionHandler:
resume
setMinimumClientVersion:
initWithBatchInterval:numberOfBatches:
setThrottlingPolicy:
setMaxInlineAssetSizeBytes:
setMaxAttachmentsPerNote:
setMaxSubAttachmentsPerAttachment:
setPollingInterval:
setMaximumAttachmentSizeMB:
numberWithUnsignedLongLong:
setResultsLimitPerSyncOperation:
daemonUserDefaults
cloudKitResultsLimitPerSyncOperation
setReachabilityChangeSyncThrottleInterval:
setLaunchAndSignificantTimeChangePollThrottleInterval:
setPersistedSubscriptionIDsValidityPeriod:
setApsDebouncerDefaultInterval:
setApsDebouncerMigrationInProgressInterval:
setApsDebouncerWatchDefaultInterval:
setApsDebouncerWatchMigrationInProgressInterval:
maxInlineAssetSizeBytes
maxAttachmentsPerNote
maxSubAttachmentsPerAttachment
maximumAttachmentSizeMB
launchAndSignificantTimeChangePollThrottleInterval
setSession:
_throttlingPolicy
_pollingInterval
_maxInlineAssetSizeBytes
_maxAttachmentsPerNote
_maxSubAttachmentsPerAttachment
_resultsLimitPerSyncOperation
_maximumAttachmentSizeMB
_minimumClientVersion
_reachabilityChangeSyncThrottleInterval
_launchAndSignificantTimeChangePollThrottleInterval
_persistedSubscriptionIDsValidityPeriod
_apsDebouncerDefaultInterval
_apsDebouncerMigrationInProgressInterval
_apsDebouncerWatchDefaultInterval
_apsDebouncerWatchMigrationInProgressInterval
_downloadTimer
_session
primitiveValueForKey:
setPreviousList:
validateForInsert:
_validateForReminderTreeConsistency:
validateForUpdate:
_validateMoveAcrossLists:
_validateMoveAcrossSharedToMeLists:
account
type
initWithAccountType:
supportsMoveAcrossLists
previousList
list
remObjectID
validationErrorMoveReminderFromList:toList:inAccount:
supportsMoveAcrossSharedToMeLists
isSharedToMe
parentReminder
children
validationErrorNestedSubtask:parentReminderID:
ckNeedsInitialFetchFromCloud
validationErrorSubtaskAndParentNotOnSameList:parentReminderID:
displayDateDate
displayDateTimeZone
timeZoneWithName:
displayDateIsAllDay
initWithDate:allDay:timeZone:
displayDate
setDisplayDateDate:
isAllDay
setDisplayDateIsAllDay:
timeZone
setDisplayDateTimeZone:
defaultTimeZone
secondsFromGMT
setDisplayDateUpdatedForSecondsFromGMT:
willSave
willSave_handledUpdateDisplayDate
setWillSave_handledUpdateDisplayDate:
changedValues
dueDateComponents
alarms
initWithDueDateComponents:alarms:
setDisplayDate:
keyPathsForValuesAffectingDisplayDate
setList:
didSave
write
raise:format:
_objectInManagedObjectContext:
timeInterval
setTimeInterval:
initRequiringSecureCoding:
dateComponents
encodeObject:forKey:
finishEncoding
encodedData
setDateComponentsData:
structuredLocation
title
setTitle:
latitude
setLatitude:
longitude
setLongitude:
radius
setRadius:
proximity
setProximity:
referenceFrameString
setReferenceFrameString:
willAccessValueForKey:
didAccessValueForKey:
compare:
validationErrorListHasNoAccount:
sharees
sharingStatus
isSharedWithShareeCount:sharingStatus:
reminderIDsMergeableOrdering
setReminderIDsMergeableOrdering:
isShared
dueDate
timeZoneFromName:
allDay
rem_dateComponentsWithDateUsingArchivingTimeZone:isAllDay:
rem_dateComponentsWithDate:timeZone:isAllDay:
setDueDate:
rem_isAllDayDateComponents
setAllDay:
setTimeZone:
rem_dateWithDateComponentsUsingArchivingTimeZone:
rem_dateWithDateComponents:timeZone:
startDate
setStartDate:
alarmStorage
isDeleted
modelObject
orderedSetWithCapacity:
managedObjectContext
setReminder:
setAlarmStorage:
icsDisplayOrder
creationDate
setIcsDisplayOrder:
setDueDateComponents:
startDateComponents
setStartDateComponents:
setAlarms:
displayOrder
setDisplayOrder:
data
base64EncodedStringWithOptions:
encodeSystemFieldsWithCoder:
initForReadingFromData:error:
initWithCoder:
transformedValueClass
transformedValue:
reverseTransformedValue:
callStackSymbols
setIncludesSubentities:
setRelationshipKeyPathsForPrefetching:
isTemporaryID
obtainPermanentIDsForObjects:error:
ic_obtainPermanentObjectIDIfNecessary
ic_permanentObjectID
performBlock:
addObserverForName:object:queue:usingBlock:
setSortDescriptors:
ic_objectsMatchingPredicate:sortDescriptors:relationshipKeyPathsForPrefetching:context:
ic_resultsMatchingPredicate:sortDescriptors:resultType:relationshipKeyPathsForPrefetching:context:
ic_objectsMatchingPredicate:sortDescriptors:context:
ic_objectIDsMatchingPredicate:sortDescriptors:context:
ic_postNotificationOnMainThreadWithName:
ic_postNotificationOnMainThreadAfterSaveWithName:
ic_objectFromObjectID:context:
ic_permanentObjectIDsFromObjects:
ic_objectIDsMatchingPredicate:context:
setPreviousAccount:
setHack_resolutionTokenMapCopy:
hack_resolutionTokenMapCopy
hack_willSaveHandled
setHack_willSaveHandled:
setResolutionTokenMap:
previousAccount
validationErrorMoveFromAccount:toAccout:
shouldMarkAsDeletedInsteadOfDeletingImmediately
isSharedViaICloud
markForDeletion
deleteAllChildrenFromLocalDatabase
recursiveMarkForDeletion:usingVisitedMap:
relationshipsByName
deleteRule
objectIDsForRelationshipNamed:
shouldCascadeMarkAsDeleteInto:forRelationship:
traverseObjectTreeUsingVisitedMap:handler:
unmarkForDeletion
externalIdentifier
encodeExternalIdentifierForMarkedForDeletionObject:
setValue:forKey:
attributesByName
attributeType
className
decodeExternalIdentifierForMarkedForDeletionObject:
objectIDWithUUID:entityName:
internalErrorWithDebugDescription:
UUID
objectIDWithUUID:
resolutionTokenMap
newObjectID
remObjectIDWithError:
masterStoreManagedObjectContext
setAccount:
updateDeletedFlagAccordingToOrphanState:
allChildObjects
fixValueBeforeMarkingForDeletionForKey:
fixValueBeforeUnmarkingForDeletionForKey:
createResolutionTokenMapIfNecessary
isPlaceholder
_ckServerRecord
_ckServerShare
_mergeDataRefusedToMergeMarkedForDeletion
_mergeDataRevertedLocallyMarkedForDeletion
owner
shouldSyncToCloud
initWithDomain:code:userInfo:
currentReachabilityStatus
initWithTimeInterval:
storageFrom:accountID:alarmID:
initWithStructuredLocation:proximity:
event
initWithEvent:
userDefaults
currentCalendar
components:fromDate:
dateFromComponents:
isEqualToDate:
setDay:
dateByAddingComponents:toDate:options:
setTimeStyle:
setDateStyle:
stringFromDate:
ic_isToday
ic_isYesterday
setDoesRelativeDateFormatting:
distantFuture
dateByAddingUnit:value:toDate:options:
currentLocale
dateFormatFromTemplate:options:locale:
setDateFormat:
ic_localDateWithSeconds
ic_shortFormattedDate
ic_briefFormattedDate
ic_isLaterThanDate:
initWithTrigger:objectID:
parentAccount
didTurnIntoFault
awakeFromInsert
insertNewObjectForEntityForName:inManagedObjectContext:
setCkCloudState:
awakeFromFetch
ckCloudState
setObject:
parentCloudObject
cloudAccount
ckDirtyFlags
numberWithShort:
setCkIdentifier:
_isInICloudAccount
_setCKIdentifierIfNecessary
currentLocalVersion
setCurrentLocalVersion:
setLatestVersionSyncedToCloud:
setLocalVersionDate:
setCkDirtyFlags:
setCkServerRecord:
rangeOfString:
substringFromIndex:
ckIdentifierFromRecordName:
failureCountQueue
failedToSyncCountsByCKIdentifier
numberOfPushAttemptsToWaitByCKIdentifier
numberOfPushAttemptsToWaitCount
setNumberOfPushAttemptsToWaitCount:
failedToSyncCount
setFailedToSyncCount:
deleteChangeTokensAndReSync
removeAllObjects
primitiveCkZoneOwnerName
ckZoneOwnerName
recordZoneName
supportsDeletionByTTL
newCloudObjectForRecord:account:context:
newObjectWithCKIdentifier:context:
managedObjectModel
entitiesByName
alloc
initWithUUIDString:
setDaCalendarItemUniqueIdentifier:
daCalendarItemUniqueIdentifier
newObjectWithCKRecordName:context:
setCkNeedsInitialFetchFromCloud:
setInCloud:
lastObject
allCloudObjectsPredicate
allDirtyCloudObjectsPredicate
initWithRecordType:recordID:
setParent:
initWithRecordID:action:
standardUserDefaults
currentAppVersion
minimumSupportedAppVersion
numberWithLongLong:
objc_toJSONString
hasSuccessfullyPushedLatestVersionToCloud
setMarkedForDeletion:
localVersionDate
modificationDate
setMinimumSupportedAppVersion:
latestVersionSyncedToCloud
isPushingSameOrLaterThanVersion:
isSharedReadOnly
setCkNeedsToBeFetchedFromCloud:
updateChangeCount
needsToReFetchServerRecordValue:
fileURL
shouldBeDeletedFromLocalDatabaseUnlessByThisDevice:
setVersion:forOperation:
needsToFetchAfterServerRecordChanged:
deleteTemporaryAssetFilesForOperation:
versionForOperation:
resetFailureCounts
recordChangeTag
mergeDataFromRecord:
updateParentReferenceIfNecessary
temporaryAssets
temporaryAssetDirectoryURL
writeToURL:options:error:
initWithFileURL:
mainBundle
bundleIdentifier
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
deleteTemporaryFilesForAsset:
removeItemAtURL:error:
isDeletable
deletedByThisDevice
objectsToBeDeletedBeforeThisObject
uniquenessConstraints
setDeletedByThisDevice:
serverShareCheckingParent
participants
permission
childCloudObjects
updateMinimumSupportedAppVersion
parent
updateChangeCountsForUnsavedParentReferences
currentUserParticipant
cloudkitCollaboration
restoreParentReferenceAfterUnmarkingForDeletion
weakToStrongObjectsMapTable
versionsByOperationQueue
versionsByRecordIDByOperation
longLongValue
objectEnumerator
deletedByThisDeviceOperationQueue
deletedByThisDeviceSet
recordSystemFieldsTransformer
setCkServerRecordData:
setCkZoneOwnerName:
ckServerRecordData
setObjectIdentifier:
setOwnerName:
removeCkSharedObjectOwnerNamesObject:
updateObjectWithShare:
shareSystemFieldsTransformer
setCkServerShareData:
ckServerShareData
inCloud
objc_newObjectFromJSONString:
updateForKey:
clearChangeCount
isValidObject
forcePushToCloud
unmarkForDeletionIncludingParentHierarchy
canBeSharedViaICloud
shareTitle
shareType
didAcceptShare:
isUnsupported
updateSharedObjectOwnerName:
resetUniqueIdentifier
cloudKitReferenceWithRecordIDAndValidateAction:
getResolutionTokenMapFromRecord:
generateReolutionTokenMapForTestingWithKeys:
mergeDataRefusedToMergeMarkedForDeletion
mergeDataRevertedLocallyMarkedForDeletion
keyPathsForValuesAffectingCloudAccount
objectWithRecordID:context:
keyPathsForValuesAffectingCkZoneOwnerName
cloudObjectWithCKIdentifier:context:
keyPathsForValuesAffectingNeedsToBePushedToCloud
assetForData:
deleteAllTemporaryAssetFilesForAllObjects
keyPathsForValuesAffectingNeedsToBeDeletedFromCloud
keyPathsForValuesAffectingCanBeSharedViaICloud
keyPathsForValuesAffectingIsSharedViaICloud
keyPathsForValuesAffectingIsSharedReadOnly
keyPathsForValuesAffectingServerShareCheckingParent
resetAllDeletedByThisDeviceProperties
utility
listIDsMergeableOrdering
setListIDsMergeableOrdering:
parentList
token
initWithPersistentHistoryToken:
setToken:
setChanges:
timestamp
setTimestamp:
transactionNumber
setTransactionNumber:
storeID
setStoreID:
bundleID
setBundleID:
processID
setProcessID:
contextName
setContextName:
author
setAuthor:
initWithStorage:
entityNamesToIncludeFromTrackingWithOptionProvider:
changes
changedObjectID
isKindOfEntity:
initWithPersistentHistoryChange:
setInternal_ChangeTransaction:
storage
initWithPersistentHistoryTransaction:
totalMigratedCount
setTotalMigratedCount:
migrateTokenResolutionMapInObject:
migrateCRDTsInObject:
updatedObjects
totalListCount
migratedAccount
migratedListsCount
migrateCRDTsInAccount:
migrateCRDTsInList:
initWithAccountID:objectID:property:
initWithReplicaIDSource:serializedData:error:
orderedSet
initWithReplicaIDSource:orderedSet:
serializedData
setMigratedAccount:
setTotalListCount:
reminderIDsMergeableOrderingReplicaIDSourceWithAccountID:listID:
reminderIDUUIDStringsJSONDataFromReminderIDsMergeableOrdering:error:
setMigratedListsCount:
_migratedAccount
_totalMigratedCount
_totalListCount
_migratedListsCount
exceptionWithName:reason:userInfo:
persistentStores
_currentREMChangeTokenFromNSPersistentStores:persistentStoreCoordinator:
withManagedObjectContext:
_persistenceStoreIDsForAccountTypes:
persistentStoreForIdentifier:
_persistenceStoreIDForAccountID:
_changeTokenFromCDTrackingState:error:
setLastConsumedChangeToken:
lastConsumedDate
setLastConsumedDate:
_fetchCDTrackingStateWithClientID:andPerformBlock:
lastConsumedChangeToken
archivedDataWithRootObject:requiringSecureCoding:error:
errorWithREMChangeErrorCode:underlyingError:
accountIdentifier
_persistenceStoreForAccountID:
errorWithREMChangeErrorCode:
assignObject:toPersistentStore:
clientName
setClientName:
setAccountIdentifier:
setLastConsumedChangeTokenData:
fetchHistoryAfterDate:
_resultChangeSetByExecutingRequest:error:
_errorChangeSetWithError:
dateWithTimeIntervalSince1970:
fetchHistoryAfterToken:
deleteHistoryBeforeDate:
_executeDeleteHistoryRequest:
deleteHistoryBeforeToken:
_fetchCDAuxiliaryChangeInfosWithObjectID:inManagedObjectContext:error:
propertiesByName
valueForKey:
_accountTypeMaskWithBitMask:
_persistenceStoresForAccountTypes:
_accountIdentifierForPersistenceStoreID:
currentPersistentHistoryTokenFromStores:
errorChangeSetWithError:
_accountIDForPersistenceStoreID:
_resolveAccountID:
_resolveObjectIDsInChanges:deletedObjectsIDMap:inManagedObjectContext:
initWithChangeTransactions:
changedManagedObjectID
resolveWithObjectID:
tombstone
objectIdentifier
lastConsumedChangeTokenData
unarchivedObjectOfClass:fromData:error:
currentChangeToken
currentChangeTokenForAccountTypes:
currentChangeTokenForAccountID:
getTrackingStateWithClientID:completionHandler:
saveTrackingState:withClientID:completionHandler:
fetchHistoryAfterDate:completionHandler:
fetchHistoryAfterToken:completionHandler:
deleteHistoryBeforeDate:completionHandler:
deleteHistoryBeforeToken:completionHandler:
fetchAuxiliaryChangeInfos:completionHandler:
changeTracking
metrics
cloudKitMetrics
duration
initWithOptions:
initSharedSettingsWithOptions:
hasAnyOptions:
_options
indexOfObjectPassingTest:
objectAtIndex:
indexesOfObjectsPassingTest:
objectsAtIndexes:
indexOfObject:inSortedRange:options:usingComparator:
ic_objectBefore:wrap:
ic_objectAfter:wrap:
indexOfObject:
arrayByAddingObject:
arrayByAddingObjectsFromArray:
ic_randomObject
ic_objectsOfClass:
ic_indexOfSortedObject:insertionIndex:usingComparator:
ic_indexIsValid:
ic_objectBefore:
ic_objectAfter:
ic_arrayByAddingNonNilObject:
ic_arrayByAddingObjectsFromNonNilArray:
insertObject:atIndex:
ic_addNonNilObject:
ic_addObjectsFromNonNilArray:
ic_insertNonNilObject:atIndex:
ic_loggingDescriptionFromLoggable:isPretty:
ic_prettyLoggingDescription
serverChangeTokenData
initWithData:
setServerChangeTokenData:
addCkServerChangeTokensObject:
setZoneName:
setDatabaseScope:
andPredicateWithSubpredicates:
serverChangeTokensMatchingPredicate:inContext:
_serverChangeToken
setCloudContext:
cloudContext
existingShareForObject:
newShareForObject:
prepareShare:forObject:completionHandler:
rootRecordForObject:
initWithRootRecord:shareID:
initWithRootRecord:
populateShare:withObject:
setObjectContext:
saveShare:forObject:completionHandler:
saveShare:withRootRecord:object:completionHandler:
setQueuePriority:
saveServerShare:completionHandler:
objectForShare:context:
acceptShareWithMetadata:andFetchObjectWithCompletionHandler:
initWithShareMetadatas:
setPerShareCompletionBlock:
setAcceptSharesCompletionBlock:
initWithCloudContext:
fetchShareForObjectWithManagedObjectID:
createShareForObjectWithManagedObjectID:queue:completionHandler:
fetchShareIfNecessaryForObject:completionHandler:
didSaveShare:queue:completionHandler:
didStopSharing:queue:completionHandler:
acceptShareWithMetadata:queue:completionHandler:
objectContext
_cloudContext
_objectContext
search
initWithIsolated:coordinator:
validateIndexVersionWithCompletionHandler:
createAndAttachCoreSpotlightDelegateForStoreWithDescription:
deleteIndicesForStore:
activateCoreSpotlightDelegates
stopCoreSpotlightDelegatesForStores:
reindexAllSearchableItems
reindexSearchableItemsWithIdentifiers:
enableCoreSpotlightIndexing
isActivated
setIsActivated:
pendingReindexAll
setPendingReindexAll:
pendingReindexIdentifiers
earlyStoppedStoreIdentifiers
_enableCoreSpotlightIndexing
_isActivated
_pendingReindexAll
_persistentStoreCoordinator
_pendingReindexIdentifiers
_earlyStoppedStoreIdentifiers
existingOperationToDeleteRecordID:
existingOperationToFetchRecordID:
existingOperationToSaveRecordID:
containsOperationToDeleteRecordID:
containsOperationToFetchRecordID:
containsOperationToSaveRecordID:
mergedModelFromBundles:
initWithIsolated:containerURL:
mainContainerURL
defaultMergePolicy
_makePersistentStoreCoordinator
strongToWeakObjectsMapTable
setL_accountStoreMap:
l_loadAccountStoresFromDiskDeletingFilesMarkedDeleted:error:
supportsCoreSpotlightIndexing
l_activateCoreSpotlightDelegates
cloudContextHasPendingOperationsDidChange:
managedObjectContextDidSave:
startNotifier
containerURL
URLByAppendingPathComponent:
databaseDirectoryURL
storeFileNameWithStoreName:
stringByDeletingPathExtension
initWithManagedObjectModel:
createDirectoryIfNecessary:
l_loadPPTStoreStatus
_discoverAccountStoreURLsFromFilesOnDiskDeletingFilesMarkedDeleted:error:
l_createOrLoadAccountStoresWithURLs:error:
l_loadDataLocalStoreIfNeeded
l_validateAccountStoresAndConstructAccountStoreMap
l_performManualStoreMigrations:
l_accountStoreMap
keyEnumerator
pptSentinelURLInContainerURL:
fileExistsAtPath:
setIsPPTStore:
isPPTStore
absoluteString
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
persistentStoreOptions
pathExtension
lowercaseString
hasPrefix:
getResourceValue:forKey:error:
metadataForPersistentStoreOfType:URL:options:error:
supportsLocalInternalAccount
localInternalAccountID
URLByResolvingSymlinksInPath
storeURLWithName:
persistentStoreForURL:
predicateWithValue:
l_markAccountStoreDeletedAndDeleteData:deletedObjectIDs:error:
metadata
isEqualToDictionary:
setMetadata:
setReturnsDistinctResults:
fileExistsAtPath:isDirectory:
l_createAccountStoresWithIdentifiers:didAddNewStores:error:
dictionaryWithCapacity:
persistentStoreDescriptionWithURL:
setType:
setShouldMigrateStoreAutomatically:
setShouldInferMappingModelAutomatically:
setConfiguration:
setOption:forKey:
setShouldAddStoreAsynchronously:
addPersistentStoreWithDescription:completionHandler:
coreSpotlightDelegateManager
l_removeAccountStoresWithIdentifiers:deletedObjectIDs:error:
_postDidRemoveAccountStoresNotificationWithDeletedObjectIDs:
entities
superentity
initWithEntityName:
filesDirectoryURL
URLForAttachmentDirectory:accountID:
startAccessingSecurityScopedResource
copyItemAtURL:toURL:error:
stopAccessingSecurityScopedResource
_removeAllPersistentStores:
isolated
setMasterStore:
mergePolicy
setMergePolicy:
currentQueryGenerationToken
setQueryGenerationFromToken:error:
read
cloudKitNetworkActivityObservers
_notifyCloudKitNetworkActivityObservers:
isObsolete
_cleanUpCloudKitNetworkActivityObservers
updateNetworkActivityWithValue:
mergeMigrationStateFromRecord:
deleteCloudObjectIfFullyPushed:
hasChanges
invalidatePrimaryICloudACAccount
clearAppleCloudKitTable
entityNamesToIncludeFromTracking
accountIdentifierForStoreID:
storeForAccountIdentifier:
storesForAccountTypes:
createAccountStoresWithIdentifiers:didAddNewStores:error:
removeAccountStoresWithIdentifiers:error:
URLForAttachmentFile:accountID:fileName:
updateAttachmentFile:accountID:fileName:data:uti:error:
updateAttachmentFile:accountID:fileName:fileURL:error:
nukeDataWithError:
invalidateStoreConnectionsWithError:
purgeDeletedObjectsWithCompletionHandler:
startObservingCloudKitNetworkActivityWithObserver:
_getCloudKitAccountInContext:
handleCloudAccountsDidChange
logStoresDirectoryContents
supportsAccountUtils
supportsAlarmEngine
supportsApplicationShortcuts
setContainerURL:
accountUtils
setAccountUtils:
setSupportsLocalInternalAccount:
ivarLock
setIvarLock:
setIsolated:
setCloudKitNetworkActivityObservers:
_supportsLocalInternalAccount
_isolated
_isPPTStore
_ivarLock
_containerURL
_accountUtils
_mergePolicy
_l_accountStoreMap
_coreSpotlightDelegateManager
_cloudKitNetworkActivityObservers
insertedObjects
deletedObjects
hasPendingListNameRelatedChanges
transactionAuthor
recordSaveWith:
affectedStores
recordFetchWith:
countForFetchRequest:error:
containerShouldSortChildrenAfterFetchingWithRecordID:
_shouldSortChildrenAfterFetching
_affectedStores
_recordIDsToSortChildrenAfterFetching
initWithData:encoding:
ic_stringValue
setBatchInterval:
setNumberOfBatches:
_batchInterval
_numberOfBatches
isOptional
defaultValue
initWithEntity:
setPropertiesToUpdate:
executeRequest:withContext:error:
resultType
reachabilityWithAddress:
reachabilityForInternetConnection
stopNotifier
localWiFiStatusForFlags:
networkStatusForFlags:
reachabilityWithHostName:
reachabilityForLocalWiFi
connectionRequired
_alwaysReturnLocalWiFiStatus
_reachabilityRef
initWithFormat:arguments:
ic_debugName
setIc_debugName:
ic_performBlock:andPerformBlockOnMainThread:
ic_performBlockAndWait:andPerformBlockAndWaitOnMainThread:
expressionForKeyPath:
_fetchCloudKitAccountsInContext:
initialize
dataUsingEncoding:
allowsReverseTransformation
updateDisplayDatesIn:
processIdentifier
isSetupUser
initWithBundleIdentifier:
migrateUserDefaults
initWithDaemonController:
setWantsNotificationResponsesDelivered
setNotificationCategories:
URIRepresentation
sortWithOptions:usingComparator:
replicaIDSource
initWithUUID:entityName:
initWithCenter:radius:identifier:
setReferenceFrame:
debouncingInterval
supportsSecureCoding
initWithFetchResultTokenToDiffAgainst:
getAppLinkWithURL:completionHandler:
_applicationIconImageForBundleIdentifier:format:scale:
defaultWorkspace
applicationsAvailableForOpeningURL:
URLOverrideForURL:
targetApplicationProxy
activityType
_determineMatchingApplicationBundleIdentifierWithOptions:
daemonVersion:
nukeDatabase:
fireDebugNotificationWithText:identifier:categoryIdentifier:reference:isRemove:completion:
fetchGeofencesWithCompletion:
removeGeofenceWithUUID:completion:
addGeofenceWithLatitude:longitude:radius:uuid:completion:
simulateCoreLocationEnterRegionWithIdentifier:completion:
simulateCoreLocationExitRegionWithIdentifier:completion:
persistenceStoreIDForAccountID:completion:
crashDaemonWithMessage:
fetchContactsMatching:completion:
createIsolatedStoreContainerWithCompletion:
destroyIsolatedStoreContainerWithToken:completion:
dataAccessStatusReports:
resetBabysitterWithRestrictedAccountID:completion:
downloadContainerToOutputDir:completion:
urlForIsolatedContainerWithIdentifier:
sharedManager
accountWithAccountID:
_debug_resetBabysitterWithRestrictedAccountID:
stateString
initWithIdentifier:
descriptorForRequiredKeysForStyle:
initWithKeysToFetch:
setStyle:
enumerateContactsWithFetchRequest:error:usingBlock:
predicateForContactsMatchingName:
stringFromContact:
phoneNumbers
value
emailAddresses
setNotifyOnEntry:
setNotifyOnExit:
setBody:
requestAuthorizationWithOptions:completionHandler:
retainNotificationWithIdentifier:reference:content:skipBanner:completion:
releaseNotificationWithIdentifier:reference:completion:
setCategoryIdentifier:
errorSanitizedForXPCFromError:
copyWithZone:
encodeWithCoder:
resultFromPerformingSwiftInvocation:parametersData:storages:error:
resultStorages
resultData
latestFetchResultToken
listener:shouldAcceptNewConnection:
initWithMachServiceName:
_setQueue:
syncCloudKitWithReason:discretionary:completion:
restartCloudKitSyncWithReason:completion:
syncDataAccessAccountsWithAccountIDs:bypassThrottler:completion:
deleteApplicationDataFromCloudKitWithCompletion:
migrateICloudCalDavToCloudKitForAccountID:disableCache:completion:
debugDownloadMigrationCacheWithCompletion:
fetchUserRecordWithCompletion:
setMigrationStateToDidChooseToMigrate:didFinishMigration:completion:
fetchServerRecordFor:completion:
observeCloudKitNetworkActivityChanges
noSuchObjectErrorWithObjectID:
performQuery:inZoneWithID:completionHandler:
setOriginalAlarmUID:
setAlarmUID:
setAcknowledgedDate:
originalAlarmUID
alarmUID
acknowledgedDate
locationUID
setLocationUID:
address
setAddress:
routing
setRouting:
contactLabel
setContactLabel:
mapKitHandle
setMapKitHandle:
dateComponentsData
unexpectedNilPropertyWithClass:property:
initWithObjectID:dateComponents:
initWithObjectID:event:
initWithTitle:locationUID:
initWithObjectID:structuredLocation:proximity:
initWithObjectID:timeInterval:
preferredDefaultListID
initWithAccountStorages:listStorages:objectIDs:
accountObjectID
setEntity:
externalIdentifiers
objectIDs
keepDefaultOnly
groupObjectID
allowsKeyedCoding
encodeInt:forKey:
encodeInteger:forKey:
encodeDouble:forKey:
JSONObjectWithData:options:error:
dataWithJSONObject:options:error:
isConsideredEmptyWithResultPtr:withError:
phones
emails
initWithPhones:emails:
siriFoundInAppsListID
hack_overrideReminderIDsOrderingWithOrderedObjectIDs:
matchesContactRepresentation:
contactHandles
getDeliveredNotificationsWithCompletionHandler:
initWithStore:
updateReminder:
setLastBannerPresentationDate:
saveWithQueue:completion:
capabilities
supportsEventKitSync
isCompleted
lastBannerPresentationDate
request
initWithObjectID:listID:accountID:
setParentReminderID:
setExternalIdentifier:
externalModificationTag
setExternalModificationTag:
daSyncToken
setDaSyncToken:
daPushKey
setDaPushKey:
titleDocument
setTitleDocumentData:
completed
setCompleted:
completionDate
setCompletionDate:
priority
setPriority:
flagged
setFlagged:
lastModifiedDate
setCreationDate:
setLastModifiedDate:
recurrenceRules
setRecurrenceRules:
notesDocument
setNotesDocumentData:
attachments
setAttachments:
importedICSData
setImportedICSData:
userActivity
siriFoundInAppsData
setSiriFoundInAppsData:
userActivityWithDictionaryData:error:
setUserActivity:
representationFromData:
setContactHandles:
mergeWithMap:forKey:
parentReminderID
setParentReminder:
listID
isInserted
subtaskIDsToUndelete
accountID
setOldExternalIdentifier:
setOldListIdentifier:
setReminderIdentifier:
attributedString
mergedWithDocument:error:
archivedDictionaryData
archivedData
setNotesDocument:
setNotes:
setTitleDocument:
defaultSound
setSound:
soundWithAlertType:
legacyNotificationIdentifier
setThreadIdentifier:
setShouldPreventNotificationDismissalAfterDefaultAction:
globallyUniqueString
attachmentWithIdentifier:URL:options:error:
setDate:
setShouldHideTime:
setExpirationDate:
hourForNextThirdsFromHour:
rem_isWeekendDateComponents
categoryWithIdentifier:actions:intentIdentifiers:options:
setHiddenPreviewsBodyPlaceholder:
actionWithIdentifier:title:options:
setActions:
setCategorySummaryFormat:
listIDsMergeableOrderingReplicaIDSourceWithAccountID:
initWithObjectID:type:name:listIDsMergeableOrdering:
daConstraintsDescriptionPath
setDaConstraintsDescriptionPath:
daAllowsCalendarAddDeleteModify
setDaAllowsCalendarAddDeleteModify:
daSupportsSharedCalendars
setDaSupportsSharedCalendars:
setInactive:
setDidChooseToMigrate:
setDidFinishMigration:
listIDsToUndelete
setParentAccount:
mergedOrderedSetWithOrderedSet:error:
listsDADisplayOrderChanged
setListsDADisplayOrderChanged:
listIDsMergeableOrderingReplicaIDSource
localAccountID
sortedArrayWithOptions:usingComparator:
daIsNotificationsCollection
daDisplayOrder
setDaDisplayOrder:
actionIdentifier
lastPresentAlarmDate
nextScheduledAlarmDate
setNextScheduledAlarmDate:
setLastPresentAlarmDate:
content
initWithStorages:
purpose
reachabilityChangedWithNotification:
accountStore
accountWithIdentifier:
displayAccount
state
retryCount
failureCount
isTerminated
primaryICloudAccountCalDavService
firstMatchInString:options:range:
numberOfRanges
rangeAtIndex:
cloudKitMigrationDelayAfterError
initWithState:IsObserver:timeElapsed:listsMigrated:remindersMigrated:log:
cloudKitMigrationObserverPollingInterval
remindersMigrated
listsMigrated
isObserver
timeElapsed
cloudKitMigrationMaxNumInvocations
cloudKitMigrationMaxNumFailures
cloudKitMigrationSimulatedError
cloudKitMigrationDisableCleanUp
initWithPattern:options:error:
defaultCloudContainerName
requestUUID
initWithContext:
setState:
setRetryCount:
setFailureCount:
setIsTerminated:
cloudKitNetworkActivityDidUpdate:
isReady
isAsynchronous
keyPathsForValuesAffectingIsReady
keyPathsForValuesAffectingIsExecuting
keyPathsForValuesAffectingIsFinished
stopObserving
isGroup
setIsGroup:
encryptedValuesByKey
color
lastUserAccessDate
badgeEmblem
setSharingStatus:
setSharedOwner:
setSharees:
participantID
addShareesObject:
userIdentity
nameComponents
lookupInfo
emailAddress
phoneNumber
setAccessLevel:
acceptanceStatus
setStatus:
rem_addingTel
rem_addingMailto
setFirstName:
setMiddleName:
setLastName:
setNamePrefix:
setNameSuffix:
setNickname:
initWithType:subpredicates:
reminders
removeListsObject:
reminderIDsMergeableOrderingFromReminderIDUUIDStringsJSONData:error:
getTokenForKey:
update
removeRemindersObject:
addRemindersObject:
childLists
mutableOrderedSetValueForKey:
setReminders:
setLastUserAccessDate:
setColor:
setBadgeEmblem:
setParentList:
addAlarmStorageObject:
addRecurrenceRulesObject:
removeRecurrenceRules:
removeAlarmStorage:
notes
mutableDocument
initWithString:
wipeAndReplaceWithString:
ckParentReminderIdentifier
setCkParentReminderIdentifier:
predicateWithFormat:argumentArray:
orPredicateWithSubpredicates:
frequency
interval
firstDayOfTheWeek
daysOfTheWeek
daysOfTheMonth
monthsOfTheYear
weeksOfTheYear
daysOfTheYear
setPositions
endDate
occurrenceCount
recurrenceEndWithOccurrenceCount:
recurrenceEndWithEndDate:
initRecurrenceRuleWithObjectID:accountID:reminderID:frequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
dayOfWeek:weekNumber:
setSetPositions:
setMonthsOfTheYear:
setWeeksOfTheYear:
setDaysOfTheYear:
setDaysOfTheMonth:
setDaysOfTheWeek:
dayOfTheWeek
weekNumber
setFirstDayOfTheWeek:
setInterval:
setFrequency:
recurrenceEnd
setEndDate:
setOccurrenceCount:
setUti:
width
height
fileSize
fileName
setHeight:
setWidth:
setFileSize:
setFileName:
setUrl:
currentChangeToken:
currentChangeTokenForAccountTypes:completion:
currentChangeTokenForAccountID:completion:
getTrackingStateWithClientID:completion:
setOwningListIdentifier:
unauthorizedErrorWithMissingEntitlement:requestedAccessLevel:currentAccesslevel:
setOwner:
hostURL
setHostURL:
uuidString
setUuidString:
isOrdered
unauthorizedErrorWithMissingEntitlement:
reminderID
setEvent:
universalLink
siriFoundInAppsUserConfirmation
daIsEventOnlyContainer
setChildren:
setDaIsNotificationsCollection:
setDaIsEventOnlyContainer:
setFetchOffset:
initWithStore:storage:
fetchRemindersWithObjectIDs:error:
initWithContactRepresentation:
initWithTrigger:
disableAlarmEngineDataSourcePrefetching
initWithStringValue:
isLikePhoneNumber:
listIDs
getTokenKeys
setToken:forKey:
initCalDAVNotificationWithObjectID:accountID:listID:uuidString:hostURL:externalIdentifier:externalModificationTag:
handleNotification:
currentThread
undateify
__swift_objectForKeyedSubscript:
__swift_setObject:forKeyedSubscript:
fetchAllRecordZonesOperation
setFetchRecordZonesCompletionBlock:
setCompletionBlock:
isDefaultRecordZoneID
CKDescriptionPropertiesWithPublic:private:shouldExpand:
containsAssetValues
valueStore
databaseBasePath
moveItemAtURL:toURL:error:
addEntriesFromDictionary:
initWithContentsOfURL:options:error:
userInteractionsData
setUserInteractionsData:
updateAccount:
saveSynchronouslyWithError:
fetchAccountWithObjectID:error:
fetchAccountsWithError:
removeFromStore
acAccountIdentifierToMergeLocalDataIntoSyncData
setAcAccountIdentifierToMergeLocalDataIntoSyncData:
isEnabledForDataclass:
_addAccountWithType:name:accountObjectID:
fetchListsWithError:
localAccountDefaultListID
fetchListWithObjectID:error:
addListWithName:toAccountChangeItem:listObjectID:
displayName
firstName
middleName
lastName
namePrefix
nameSuffix
nickname
status
accessLevel
initShareeWithObjectID:accountID:listID:displayName:firstName:middleName:lastName:namePrefix:nameSuffix:nickname:address:status:accessLevel:
setDisplayName:
initWithAccountStorages:listStorages:reminderStorages:objectIDs:
initWithInteger:
storeProperty:forKey:
daCalendarItemUniqueIdentifiers
listObjectID
showMarkedForDeleteObjects
parentReminderIDs
includingSubtasks
center
initWithLatitude:longitude:
distanceFromLocation:
initWithMergeType:
resolveConflicts:error:
sourceObject
persistedSnapshot
cachedSnapshot
constraint
constraintValues
databaseObject
constraintConflictWithIdentifier:constraint:
conflictingObjects
supportsCRDTs
documentFromSerializedData:replicaIDSource:forKey:ofObjectID:
notesReplicaIDSourceWithAccountID:reminderID:
titleReplicaIDSourceWithAccountID:reminderID:
showRemindersAsOverdue
fetchResultTokenToDiffAgainst
isDate:overdueAtReferenceDate:allDay:showAllDayRemindersAsOverdue:
changeType
attachmentRepresentationAndReturnError:
initWithObjectID:accountID:reminderID:UTI:fileSize:fileURL:data:
initWithObjectID:accountID:reminderID:UTI:fileSize:fileURL:data:width:height:
initWithObjectID:accountID:reminderID:url:metadata:
failWithError:
decodeIntegerForKey:
changeTrackingPerformerWithStoreContainerToken:reason:completion:
debugPerformerWithReason:completion:
storePerformerWithProcessName:storeContainerToken:reason:completion:
syncInterfacePerformerWithReason:completion:
indexingPerformerWithReason:completion:
remoteObjectProxyWithErrorHandler:
xpcPerformerUnavailableErrorWithDescription:
serviceName
setExportedObject:
interface
setExportedInterface:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
throttledErrorWithRemainingTimeInterval:
initTokenWithDefaultValueIfNecessaryForKey:
compareAndMergeWithMap:forKey:
testIndexDummyItemWithCompletion:
reindexAllSearchableItemsWithAcknowledgementHandler:
reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
deleteAllSearchableItemsWithCompletionHandler:
initWithName:protectionClass:bundleIdentifier:
initWithItemContentType:
localizedStringFromDate:dateStyle:timeStyle:
setContentDescription:
setProviderDataTypeIdentifiers:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
indexSearchableItems:completionHandler:
fetchDefaultListWithError:
store
initWithStore:account:storage:
saveRequest
updateReminderChangeItem:fromICSTodo:icsCalendar:isNew:withOptions:
exportICSCalendarFromReminders:
components
_trackedListChangeItemForObjectID:
titleAsString
addReminderWithTitle:toListChangeItem:
setRemindersICSDisplayOrderChanged:
trackedReminderChangeItems
updateList:
removeFromParent
trackedListChangeItems
fetchRemindersWithError:
removeFromList
supportsGroups
addListWithName:toAccountChangeItem:
copyListDataFrom:
initWithIncompleteReminderCounts:scheduledCount:
initWithMetadata:
predicateDescriptor
sortDescriptors
ascending
sortDescriptorSortingByOrderingInAccountAscending:
initWithCount:
initWithListStorages:
initWithAccountStorages:listStorages:reminderStorages:requestedObjectIDs:metadata:
initWithRequestedObjectIDs:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didDetermineState:forRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
setOnBehalfOfBundleId:
authorizationStatusForBundle:
startMonitoringForRegion:
minimumRegionMonitoringDistance
referenceFrame
locationBundleURL
initWithURL:
monitoredRegions
stopMonitoringForRegion:
initWithEffectiveBundle:delegate:onQueue:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
updatedProperties
initWithDASymbolicColorName:daHexString:
green
blue
alpha
colorRGBSpace
initWithRed:green:blue:alpha:colorSpace:daSymbolicColorName:daHexString:ckSymbolicColorName:
notification
initWithQueue:notificationCenter:
userNotificationCenter:willPresentNotification:withCompletionHandler:
userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler:
userNotificationCenter:openSettingsForNotification:
requestWithIdentifier:content:trigger:destinations:
addNotificationRequest:withCompletionHandler:
replaceContentForRequestWithIdentifier:replacementContent:completionHandler:
subtitle
body
categoryIdentifier
setUserInfo:
requestWithIdentifier:content:trigger:
removeDeliveredNotificationsWithIdentifiers:
expressionForFunction:arguments:
setExpression:
setExpressionResultType:
setReturnsObjectsAsFaults:
setPropertiesToGroupBy:
evaluateWithObject:
alarmEngine
siriKit
migration
analytics
applicationShortcut
dataAccess
managerData
setManagerData:
version
setVersion:
initWithManagerData:version:
initWithAccountID:calendarID:
setRemXPCCompletion:
sharedMain
addToOperationsQueueDisabledCheckAndGoBlock:wrappedBlock:
transactionId
respondToShareRequestWithResponse:
rem_storeProvider
activeAgents
syncChangeTrackingPerformerWithReason:errorHandler:
syncDebugPerformerWithReason:errorHandler:
syncDebugPerformerWithErrorHandler:
syncStorePerformerWithReason:errorHandler:
asyncStorePerformerWithReason:loadHandler:errorHandler:
syncSyncInterfacePerformerWithReason:errorHandler:
asyncSyncInterfacePerformerWithReason:loadHandler:errorHandler:
syncIndexingPerformerWithReason:errorHandler:
asyncIndexingPerformerWithReason:loadHandler:errorHandler:
executeFetchRequest:completion:
performInvocation:completion:
performSwiftInvocation:withParametersData:storages:completion:
fetchReplicaManagerForAccountID:completion:
fetchReplicaManagersForAccountID:bundleID:completion:
saveAccountStorages:listStorages:reminderStorages:changedKeys:replicaManagers:author:mode:synchronously:completion:
fetchShareForObjectWithID:completion:
createShareForObjectWithID:completion:
updateShare:completion:
stopShare:completion:
acceptShareWithMetadata:completion:
acceptCalDAVShareWithCalendarURL:acAccountID:completion:
rejectCalDAVShareWithCalendarURL:acAccountID:completion:
notifyOfInteractionWithPeople:completion:
notifyOfUserInterestInSiriSuggestedReminder:completion:
updateAccountsAndFetchMigrationState:completion:
updateAccountWithACAccountID:restartDA:completion:
removeOrphanedAccountWithCompletion:
requestToMergeLocalDataIntoSyncDataWithAccountIdentifier:completion:
requestToDeleteSyncDataWithAccountIdentifier:completion:
requestToDeleteLocalDataWithCompletion:
personHandle
aliases
contactIdentifier
saveErrorWithCoreDataError:
initWithResultData:storages:latestFetchResultToken:
fetchExecutor
fetchReminderWithObjectID:error:
fetchReminderWithDACalendarItemUniqueIdentifier:inList:error:
setLastSyncPoll:
lastSyncPoll
triggerThrottledSyncWithReason:discretionary:WithCompletion:
notifyOnExit
notifyOnEntry
initWithStore:list:storage:
initWithRed:green:blue:alpha:
initWithRed:green:blue:alpha:colorSpace:
initWithHexString:
initWithCKSymbolicColorName:hexString:
initWithTitle:locationUID:latitude:longitude:radius:address:routing:referenceFrameString:contactLabel:mapKitHandle:
initWithTitle:
daSymbolicColorName
daHexString
ckSymbolicColorName
parentListID
persistentStore
persistentHistoryTokens
initWithPersistentHistoryTokens:
displayDateUpdatedForSecondsFromGMT
formattedStringValue
stringFromContact:style:
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
predicateForContactsMatchingEmailAddress:
unifiedContactsMatchingPredicate:keysToFetch:error:
predicateForContactsMatchingPhoneNumber:
initWithObjectID:accountID:name:isGroup:reminderIDsMergeableOrderingData:
daExternalIdentificationTag
setDaExternalIdentificationTag:
daIsReadOnly
setDaIsReadOnly:
daIsImmutable
setDaIsImmutable:
sharedOwnerName
setSharedOwnerName:
sharedOwnerAddress
setSharedOwnerAddress:
sharedOwner
setSharedOwnerID:
calDAVNotifications
showingLargeAttachments
setShowingLargeAttachments:
setParentAccountID:
setParentListID:
daBulkRequests
setIsPlaceholder:
setDaBulkRequests:
setCalDAVNotifications:
remindersICSDisplayOrderChanged
setReminderIDsMergeableOrderingData:
reminderIDsMergeableOrderingData
sharedOwnerID
reminderIDsToUndelete
parentAccountID
setMode:
accountType
childAccountsWithAccountTypeIdentifier:
enabledDataclasses
accountPropertyForKey:
rem_isManagedAppleID
accountDescriptionWithACAccount:
aa_isAccountClass:
saveDidChooseToMigrate:didFinishMigration:toACAccount:inStore:completionHandler:
_addAccountWithType:name:
setObjectID:
changedKeys
disableMonitoringAgents
aa_accountsEnabledForDataclass:
isActive
fetchAccountsIncludingInactive:error:
enableMonitoringAgentsWithToken:
accountsWithAccountTypeIdentifiers:error:
saveAccount:withCompletionHandler:
setAccountProperty:forKey:
rem_didChooseToMigrate
setPreferredDefaultListID:
initWithDueDateCounts:
initWithSubtaskCounts:
sortDescriptorSortingByOrderingInListAscending:
descriptors
startingDueDate
endingDueDate
initWithDueDate:count:
initWithReminderStorages:
compareObject:toObject:
dueAfter
dueBefore
hasLocation
location
postSummaryFor:
setCkUserRecordName:
lists
mutableOrderedSet
immutableOrderedSet
indexOfEqualObject:
ckSharedObjectOwnerNames
setReplicaManagerProvider:
setLists:
isInternalInstall
auditToken
valueForEntitlement:
newObjectFromJSONObject:
initWithMap:
counter
modificationTime
replicaID
initWithCounter:modificationTime:replicaID:
setReplicaID:
setModificationTime:
setCounter:
setMap:
todayNotificationFireTime
setBadge:
isOverdue
streamTodayNotificationFireTime:
supportsSubtasks
snoozeFromDueDateForFutureIntegralMultipleOfTimeInterval:
snoozeToNextThirds
snoozeFromNowForTimeInterval:
snoozeForever
markedForRemoval
rem_storeForDataAccess
rem_supportsClearingOrphanedStores
rem_saveRequestForDataAccess
rem_notificationPresentingForDataAccess
showNotificationWithIdentifier:content:completion:
calDAVSharedListNotificationContentWithList:
remindersDatabaseDidChange
vendDaemons:
waitForSystemAvailabilityWithCompletionBlock:completionQueue:
setRem_storeProvider:
sharedDBWatcher
setRem_localDBWatcher:
setRem_userNotificationPresentingProvider:
setRem_xpcEventHandler:
_loadAndStartMonitoringAgents:
rem_localDBWatcher
updateContentsOfAllFoldersForAccountIDs:
defaultContainer
containerIdentifier
sharedSession
uploadTaskWithRequest:fromData:completionHandler:
fetchUserRecordIDWithCompletionHandler:
initWithAPIToken:
setFetchWebAuthTokenCompletionBlock:
initWithServiceName:functionName:serializedRequest:
setFunctionInvokeCompletionBlock:
containerWithIdentifier:
organizationCloudDatabase
setRequestCompletedBlock:
publicCloudDatabase
ReminderKitAdditions
RDMasterStoreMigrator_RemoveOrphanedLists
RDMasterStoreMigrator
NSObject
ModelObjectConversions
REMCDAuxiliaryChangeInfo
CoreDataProperties
ICSelectorDelayer
REMCDAuxiliaryReminderChangeMoveInfo
RDMasterStoreMigrator_AccountIdentifierMetadata
ICCloudThrottlingPolicy
REMCKSharedObjectOwnerName
REMCDImageAttachment
SaveExtension
ICCloudContext
APSConnectionDelegate
DABabysittable
ICLoggable
REMCDAlarmTrigger
ICHasDatabaseScope
ICCloudConfiguration
REMCDReminder
REMCDAuxiliaryReminderChangeInfo
REMCDAlarmVehicleTrigger
REMCDList
CKRecordSystemFieldsTransformer
CKShareSystemFieldsTransformer
REMCDAlarmTimeIntervalTrigger
REMCDAlarmLocationTrigger
REMCDMigrationState
REMCDReplicaManager
REMCDObject
REMThrowingObjectIDProviding
REMNullableObjectIDProviding
REMCDCalDAVNotification
ICUtilities
ICUserDefaults
REMCDAlarm
CloudKit
ICCloudObject
REMCDAudioAttachment
REMCDAccount
REMCDAuxiliaryReminderChangeDeleteInfo
CoreDataProcessingAdditions
RDMasterStoreMigrator_JSONProperties
_REMNSPersistentHistoryTrackingAbstract
REMCKCloudState
REMCDRecurrenceRule
ICSyncSettings
REMCDFileAttachment
REMCDSharee
REMCKServerChangeToken
REMCDAlarmDateTrigger
ICCollaborationController
RDCoreSpotlightDelegateManager
REMCDChangeTrackingState
REMCDURLAttachment
REMCDAttachment
RDMasterStore
ICCloudContextDelegate
REMChangeTrackingOptionsProviding
RDMasterStoreManagedObjectContext
ICDataExtensions
ICCloudThrottlingLevel
RDMasterStoreMigrator_PopulateDefaultValues
ICReachability
RDMasterStoreMigrator_CKParentReminderIdentifier
CloudKitUtils
NSValueTransformer_JSON_REMResoutionTokenMap
NSSecureUnarchiveFromDataTransformer_REMResolutionTokenMap
NSSecureUnarchiveFromDataTransformer_REMColor
RDMasterStoreMigrator_DisplayDate
v24@0:8@16
@16@0:8
v24@0:8Q16
B16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"NSPersistentStore"16@"NSMutableDictionary"24
@24@0:8Q16
@48@0:8@16:24d32B40B44
v16@0:8
:16@0:8
v24@0:8:16
d16@0:8
v24@0:8d16
v20@0:8B16
@?16@0:8
v24@0:8@?16
@"NSObject<OS_dispatch_queue>"
@32@0:8@16d24
@"NSArray"
@"NSDate"
@"NSTimer"
@24@0:8@16
@32@0:8@?16@24
B48@0:8@16@24@32^@40
B32@0:8@16@24
v48@0:8@16@24@32@40
v40@0:8@16@24@32
v28@0:8@16B24
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@20@0:8B16
B20@0:8B16
B28@0:8B16@20
v32@0:8r*16@?24
v36@0:8@16B24@?28
v32@0:8@16@?24
d24@0:8@16
q16@0:8
v24@0:8q16
@32@0:8@16@?24
@24@0:8@?16
v32@0:8@?16@?24
@32@0:8@16@24
@40@0:8@16@24@32
@48@0:8@16@24@32@40
v40@0:8@16@24@?32
v40@0:8@16@24d32
v52@0:8@16@24@32B40@?44
@52@0:8@16@24@32@40B48
v56@0:8@16@24@32@40@48
B32@0:8@16q24
v40@0:8q16@24@?32
v48@0:8@16@24@32@?40
v40@0:8@16@24q32
@32@0:8@16q24
v32@0:8@16q24
v48@0:8@16@24@32^v40
v32@0:8B16B20@?24
v24@0:8B16B20
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"RDMasterStore"
@"CKContainer"
@"<ICCloudContextDelegate>"
@"NSOperationQueue"
@"REMAppleAccountUtilities"
@"NSMutableSet"
@"NSMutableDictionary"
@"ICSelectorDelayer"
@"NSDictionary"
@"NSSet"
@"NSString"
@"APSConnection"
@"_TtC7remindd21RDDebouncerWithNumber"
@"DADBuddyStateObserver"
@"NSDictionary"16@0:8
@"ICCloudThrottlingPolicy"
@"NSNumber"
@"NSURLSession"
B24@0:8^@16
@"REMCDList"
q24@0:8@16
@56@0:8@16@24Q32@40@48
@"REMObjectID"16@0:8
@"REMObjectID"24@0:8@"NSUUID"16
@24@0:8^@16
@"REMObjectID"24@0:8^@16
v28@0:8B16@20
@"CKRecord"
@"CKShare"
@"REMCDAccount"
@"REMResolutionTokenMap"
v32@0:8q16@24
q24@0:8q16
@"CKRecordID"16@0:8
@"CKRecord"16@0:8
v24@0:8@"CKRecord"16
@"NSArray"16@0:8
v24@0:8@"CKModifyRecordsOperation"16
v32@0:8@"CKModifyRecordsOperation"16@"CKRecord"24
v40@0:8@"CKModifyRecordsOperation"16@"CKRecord"24@"NSError"32
@"NSManagedObjectID"16@0:8
@32@0:8@"CKRecordID"16@"NSManagedObjectContext"24
@32@0:8@"CKRecord"16@"NSManagedObjectContext"24
@40@0:8@"CKRecord"16@"REMCDAccount"24@"NSManagedObjectContext"32
@40@0:8@"CKRecordID"16@"REMCDAccount"24@"NSManagedObjectContext"32
@"NSArray"24@0:8@"NSManagedObjectContext"16
@24@0:8q16
@32@0:8@16^@24
@40@0:8@16@24^@32
B24@0:8Q16
B24@0:8@?16
@24@0:8#16
Q40@0:8@16o^Q24@?32
B24@0:8q16
@28@0:8@16B24
@56@0:8@16@24@32q40@48
@48@0:8@16@24q32@40
@"CKServerChangeToken"
@"ICCloudContext"
@"NSManagedObjectContext"
@28@0:8B16@20
@"NSPersistentStoreCoordinator"
v32@0:8@"ICCloudContext"16@"CKRecordZoneID"24
v32@0:8@"ICCloudContext"16@"CKRecord"24
v24@0:8@"ICCloudContext"16
B28@0:8B16^@20
@28@0:8B16^@20
B40@0:8@16^B24^@32
B32@0:8@16^@24
B40@0:8@16^@24^@32
B64@0:8@16@24@32@40@48^@56
B56@0:8@16@24@32@40^@48
@"NSURL"
@"RDAccountUtils"
@"NSMergePolicy"
@"NSMapTable"
@"RDCoreSpotlightDelegateManager"
Q32@0:8@16^@24
@32@0:8d16Q24
@24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
q20@0:8I16
^{__SCNetworkReachability=}
rem_alternateAction
T@"UNNotificationAction",C,N
rem_actionsMenuTitle
T@"NSString",C,N
RDMasterStoreMigrator_RemoveUnparentedObjects
account
account == NULL
hash
TQ,R
superclass
T#,R
T@"NSString",R,C
%@%@ = %@
v32@?0@8@16^B24
REMCKServerChangeToken
databaseScope
Ts,D,N
ownerName
T@"NSString",C,D,N
serverChangeTokenData
T@"NSData",&,D,N
zoneName
T@"REMCDAccount",&,D,N
com.apple.reminders.coalescer.requests
T@,W,N,V_target
selector
T:,N,V_selector
waitToFireUntilRequestsStop
TB,N,V_waitToFireUntilRequestsStop
callOnMainThread
TB,N,V_callOnMainThread
requestQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_requestQueue
fireBlock
T@?,C,N,V_fireBlock
delay
Td,V_delay
isScheduledToFire
TB,R,N
ICCloudBatchIntervalDidChangeNotification
ThrottlingPolicyCurrentBatchCount
ThrottlingPolicyCurrentLevelIndex
ThrottlingPolicyStartTime
unlimited
currentBatchCount
TQ,N,V_currentBatchCount
throttlingLevels
T@"NSArray",&,N,V_throttlingLevels
currentLevelIndex
TQ,N,V_currentLevelIndex
currentLevel
T@"ICCloudThrottlingLevel",R,N
resetInterval
Td,V_resetInterval
policyStartDate
T@"NSDate",&,V_policyStartDate
policyResetTimer
T@"NSTimer",&,V_policyResetTimer
batchInterval
Td,R,N
com.apple.reminderkit
default
REMCDAlarm
com.apple.remindd.cloudkit.sync.crashDetected
com.apple.reminders.cloud.waiting
Reminders
RemindersMigration
Metadata
CloudKitAccountStatus
CloudKitZonesNeedingFetchChanges
CloudDirtyUUIDKey
ZoneName
OwnerName
SubscriptionIDs
SubscriptionIDsLastModifiedDate
CloudKitLastSyncSinceInternetReachable
RootRecord
RootRecordType
ICCloudContextFetchRecordChangeOperationDidFinishNotification
ICCloudContextHasPendingOperationsDidChangeNotification
operationCount
ICCloudContextUnrecoverableErrorNotification
com.apple.reminders.cloud
Errors
com.apple.icloud-container.
com.apple.remindd.ICCloudContext
com.apple.remindd.ICCloudContext.mergeLocalObjects
CloudKitUpdateCloudContextState
SYNC[FULL]
SYNC[APS]
SYNC[COREDATA]
v16@?0@"NSSet"8
initWithMasterStore
accountStatus=%@ syncDisabledByServer=%d accountAvailable=%d masterStoreSupportCloudKitSyncing=%d
UnrecoverableError
reachabilityChanged
cloudKitAccountChanged
v24@?0q8@"NSError"16
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
Cloud Context
%@ %@
operations
@"NSDictionary"8@?0
com.apple.remindd.cloudkit.sync.full[%@]
deleteRecordZonesWithZoneIDs
deleting record zones
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
DeleteRecordZones
Cloud syncing is not enabled.
v32@?0@"CKRecordID"8@"NSError"16^B24
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
FetchUserRecord
FetchCompletion
v32@?0@"NSNumber"8@"NSArray"16^B24
FetchIndividualRecords
v24@?0@"CKRecordID"8d16
fetch records operation %@
v32@?0@"REMCDObject"8Q16^B24
DeleteShares
SyncAfterDeleteShare
B32@?0@"REMCDObject"8Q16^B24
deleteSharesForObjectsFetchAndCompletion
ModifyCompletion
ModifyRecords
v32@?0@"CKOperation"8Q16^B24
v24@?0@"CKRecord"8d16
pushing record %@
finished modify operation
v32@?0@8@"NSError"16^B24
SaveRecordZones
ProcessObjects
requestFire
com.apple.remindd.cloudkit.sync.coredata
B32@?0#8Q16^B24
com.apple.remindd.cloudkit.merge.local.coredata
v24@?0@"NSArray"8@"NSManagedObjectContext"16
needsToProcessAllDirtyObjects
REMCKCloudState
object
SaveChangedObjects
ProcessCompletion
v20@?0B8@"NSSet"12
PushNotification
CreateFetchZoneChanges
FetchZoneChangesCompletion
FetchRecordZoneChanges
record changed
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
Poll
FetchDatabaseChanges
FetchDatabaseChangesCompletion
v16@?0@"CKRecordZoneID"8
v16@?0@"CKServerChangeToken"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
ckZoneOwnerName == %@
DatabaseSubscription-%@
v24@?0@"CKDatabase"8@"NSError"16
SaveSubscriptions
Foreground
Background
reachable
not reachable
com.apple.remindd.cloudkit.updateCloudContextState
UpdateContextState
v24@?0@"CKOperation"8@"NSError"16
B32@?0@"NSError"8Q16^B24
v32@?0@"NSString"8@"NSNumber"16^B24
Subscriptions
Retrying
zone changes
(name: %@, id: %@, inactive: %d)
(name: %@, id: %@, class: %@)
(name: %@, id: %@)
saving server change token
deleting server change token
deleting all server change tokens
PollCloudKitWhenLaunchingAndBackgrounding
accountsDidChange_cancelEverything
accountsDidChange
applicationWillEnterForeground
com.apple.remindd.cloudkit.sync.aps
Account/%@
ICCloudContext
operationQueue
T@"NSOperationQueue",&,N,V_operationQueue
processingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_processingQueue
appleAccountUtilities
T@"REMAppleAccountUtilities",&,N,V_appleAccountUtilities
objectIDsToRetry
T@"NSMutableSet",&,N,V_objectIDsToRetry
hasRetryTimer
TB,V_hasRetryTimer
retryTimer
T@"NSTimer",&,V_retryTimer
retryCountsByOperationType
T@"NSMutableDictionary",&,N,V_retryCountsByOperationType
accountStatus
Tq,N
disabledInternal
TB,GisDisabledInternal,V_disabledInternal
cloudObjectClassesByRecordType
T@"NSDictionary",R,N
TB,N,V_needsToProcessAllDirtyObjects
objectIDsToProcess
T@"NSMutableSet",&,N,V_objectIDsToProcess
processingSelectorDelayer
T@"ICSelectorDelayer",&,V_processingSelectorDelayer
pollingSelectorDelayer
T@"ICSelectorDelayer",&,V_pollingSelectorDelayer
didAddObservers
TB,N,V_didAddObservers
fetchingEnabled
TB,N,GisFetchingEnabled,V_fetchingEnabled
syncDisabledByServer
TB,N,V_syncDisabledByServer
uploadSuspended
TB,N,V_uploadSuspended
containersByAccountID
T@"NSDictionary",&,N,V_containersByAccountID
containersByAccountIDLock
T{os_unfair_lock_s=I},N,V_containersByAccountIDLock
zoneIDsNeedingFetchChanges
T@"NSMutableSet",&,N,V_zoneIDsNeedingFetchChanges
zoneIDsFetchingChanges
T@"NSMutableSet",&,N,V_zoneIDsFetchingChanges
zoneIDsNeedingToBeSaved
T@"NSMutableSet",&,N,V_zoneIDsNeedingToBeSaved
subscribedSubscriptionIDs
T@"NSSet",&,V_subscribedSubscriptionIDs
subscribedSubscriptionIDsLastModifiedDate
T@"NSDate",&,V_subscribedSubscriptionIDsLastModifiedDate
didCheckForLongLivedOperations
TB,N,V_didCheckForLongLivedOperations
discretionaryNetwork
TB,N,V_discretionaryNetwork
automaticallyRetryNetworkFailures
TB,N,V_automaticallyRetryNetworkFailures
timeoutIntervalForResource
Td,N,V_timeoutIntervalForResource
apsTopic
T@"NSString",&,N,V_apsTopic
apsConnection
T@"APSConnection",&,N,V_apsConnection
apsNotificationHandlingDebouncer
T@"_TtC7remindd21RDDebouncerWithNumber",&,N,V_apsNotificationHandlingDebouncer
wasInternetReachable
TB,N,V_wasInternetReachable
lastSyncSinceInternetReachable
Td,N,V_lastSyncSinceInternetReachable
hasPassedBuddy
TB,N,V_hasPassedBuddy
buddyStateObserver
T@"DADBuddyStateObserver",&,N,V_buddyStateObserver
isSystemAvailableForSyncing
TB,N,V_isSystemAvailableForSyncing
recognizedCloudObjectClasses
T@"NSMutableDictionary",&,N,V_recognizedCloudObjectClasses
T@"RDMasterStore",R,N,V_masterStore
T@"CKContainer",&,N,V_container
cloudContextDelegate
T@"<ICCloudContextDelegate>",W,N,V_cloudContextDelegate
fetchOperationsPending
TB,R,N,V_fetchOperationsPending
needsToUpdateSubscriptions
TB,V_needsToUpdateSubscriptions
Tq,N,V_qualityOfService
discretionaryNetworkBehavior
TQ,N,V_discretionaryNetworkBehavior
disabled
TB,GisDisabled,V_disabled
REMCDReminder
allDay
TB,D,N
ckParentReminderIdentifier
T@"NSDate",C,D,N
contactHandles
creationDate
dueDate
Tq,D,N
notes
priority
T@"NSOrderedSet",&,D,N
children
T@"NSSet",&,D,N
T@"REMCDList",&,D,N
parentReminder
T@"REMCDReminder",&,D,N
recurrenceRules
displayDateDate
displayDateTimeZone
displayDateUpdatedForSecondsFromGMT
isExecuting
isFinished
alarm
REMCDFileAttachment
fileSize
CloudConfigurationPath
ICCloudConfigurationChangedNotification
throttlingPolicy
throttlingPolicyResetIntervalSeconds
intervalSeconds
maxInlineAssetSizeBytes
maxAttachmentsPerNote
maxSubAttachmentsPerAttachment
pollingIntervalSeconds
resultsLimitPerSyncOperation
maximumAttachmentSizeMB
minimumClientVersions
persistedSubscriptionIDsValidityPeriod
configurationVersion
reachabilityChangeSyncThrottleInterval
launchAndSignificantTimeChangePollThrottleIntervalV2
apsDebouncerDefaultInterval
apsDebouncerMigrationInProgressInterval
apsDebouncerWatchDefaultInterval
apsDebouncerWatchMigrationInProgressInterval
WATCH
5,0,0
https://configuration.apple.com/configurations/internetservices/cloudkit/reminders-1.0.plist
B32@?0@"NSURL"8Q16^B24
Normal
RemoteConfiguration
plist
CloudConfigurations
v12@?0B8
T@"ICCloudThrottlingPolicy",&,V_throttlingPolicy
pollingInterval
Td,V_pollingInterval
TQ,V_maxInlineAssetSizeBytes
T@"NSNumber",&,V_maximumAttachmentSizeMB
TQ,V_maxAttachmentsPerNote
TQ,V_maxSubAttachmentsPerAttachment
TQ,V_resultsLimitPerSyncOperation
downloadTimer
T@"NSTimer",&,V_downloadTimer
session
T@"NSURLSession",&,V_session
Td,V_reachabilityChangeSyncThrottleInterval
launchAndSignificantTimeChangePollThrottleInterval
Td,V_launchAndSignificantTimeChangePollThrottleInterval
Td,V_persistedSubscriptionIDsValidityPeriod
Td,V_apsDebouncerDefaultInterval
Td,V_apsDebouncerMigrationInProgressInterval
Td,V_apsDebouncerWatchDefaultInterval
Td,V_apsDebouncerWatchMigrationInProgressInterval
minimumClientVersion
T@"NSString",C,V_minimumClientVersion
REMCKSharedObjectOwnerName
objectIdentifier
previousList
T@"REMCDList",&,N,VpreviousList
displayDate
T@"REMDisplayDate",&,N
willSave_handledUpdateDisplayDate
TB,N,VwillSave_handledUpdateDisplayDate
REMCDCalDAVNotification
uuidString
T@"NSURL",C,D,N
<%@>
<%@ %@>
REMCDRecurrenceRule
daysOfTheYear
weeksOfTheYear
reminder
Abstract method called -[%@ %@]
Cannot find entity description for alarm {alarmTrigger: %@, entityName: %@}
REMCDAlarmTimeIntervalTrigger
REMCDAlarmDateTrigger
REMCDAlarmLocationTrigger
reminderIDsOrdering
reminderIDsMergeableOrdering_v2_JSON
T@"NSDateComponents",C,N
T@"NSArray",C,N
displayOrder
TQ,N
<ServerChangeToken %@>
timeInterval
Td,D,N
REMCDChangeTrackingState
accountIdentifier
clientName
lastConsumedChangeTokenData
lastConsumedDate
REMCDAuxiliaryReminderChangeInfo
reminderIdentifier
REMCDAuxiliaryReminderChangeMoveInfo
oldExternalIdentifier
oldListIdentifier
REMCDReplicaManager
managerData
SELF in %@
B32@?0@"NSManagedObject"8Q16^B24
v16@?0@"NSNotification"8
resolutionTokenMap
resolutionTokenMap_v2_JSON
markedForDeletion
B16@?0@"REMCDObject"8
Failed to create REMObjectID: REMCDObject.identifier or REMCDObject.entity.name is nil.
REMCDObject
T@"REMObjectID",R,N
T@"NSString",R,N
previousAccount
T@"REMCDAccount",&,N,VpreviousAccount
hack_resolutionTokenMapCopy
T@"REMResolutionTokenMap",&,N,Vhack_resolutionTokenMapCopy
hack_willSaveHandled
TB,N,Vhack_willSaveHandled
masterStoreManagedObjectContext
T@"RDMasterStoreManagedObjectContext",R,N
T@"REMResolutionTokenMap",&,N
isPlaceholder
com.apple.reminders
cccc
ic_isToday
ic_isYesterday
ic_shortFormattedDate
ic_briefFormattedDate
ic_localDateWithSeconds
Deleted
Imported
MinimumSupportedAppVersion
ResolutionTokenMap
TestUnsupportedRecords
parentCloudObject.cloudAccount
ckNeedsToBeFetchedFromCloud
ckDirtyFlags
ckIdentifier == %@
com.apple.reminders.cloud.failure-counts
%@/%@
parentCloudObject
ckZoneOwnerName
account.type == %@
ckDirtyFlags > 0
ckNeedsInitialFetchFromCloud
%@-%@
TemporaryAssetFiles
B24@?0@"NSURL"8@"NSError"16
B32@?0@"CKShareParticipant"8Q16^B24
isSharedViaICloud
cloudAccount.accountType
ckServerShare
ckServerRecord
parentCloudObject.isSharedViaICloud
serverShareCheckingParent
serverShare
com.apple.reminders.cloud.versions-by-operation
com.apple.reminders.cloud.deleted-by-this-device
objectIdentifier == %@
inCloud
needsToBePushedToCloud
needsToBeDeletedFromCloud
latestVersionSyncedToCloud
currentLocalVersion
localVersionDate
hasAllMandatoryFields
failedToSyncCount
numberOfPushAttemptsToWaitCount
minimumSupportedAppVersion
isUnsupported
needsToDeleteShare
TB,R
TB,N,GisInCloud
deletedByThisDevice
TB,N
T@"CKRecord",&,N
T@"CKShare",&,N
primitiveCkZoneOwnerName
T@"NSString",&,D,N
shouldBeIgnoredForSync
mergeDataRefusedToMergeMarkedForDeletion
mergeDataRevertedLocallyMarkedForDeletion
REMCDAudioAttachment
REMCDAttachment
REMCDImageAttachment
width
RDMasterStoreMigrator_JSONProperties
totalMigratedCount
TQ,N,V_totalMigratedCount
totalListCount
TQ,N,V_totalListCount
migratedAccount
TB,N,V_migratedAccount
migratedListsCount
TQ,N,V_migratedListsCount
You must override %@ in a subclass
v16@?0@"RDMasterStoreManagedObjectContext"8
v32@?0@"NSManagedObjectContext"8@"REMCDChangeTrackingState"16^@24
clientName == %@ AND accountIdentifier == %@
identifier == %@
REMCDAuxiliaryReminderChangeDeleteInfo
REMCDAuxiliaryChangeInfo
duration
(none)
v32@?0@"CKRecordZoneID"8@"CKFetchRecordZoneChangesConfiguration"16^B24
serverChangeToken
TQ,N,V_options
dateComponentsData
ckIdentifier
ckServerRecordData
ckServerShareData
T@"NSUUID",C,D,N
ckCloudState
T@"REMCKCloudState",&,D,N
T@"REMResolutionTokenMap",&,D,N
alarmUID
trigger
T@"REMCDAlarmTrigger",&,D,N
B32@?0@8Q16^B24
ic_randomObject
T@,R,N
T@"REMCDObject",&,D,N
<%@ 
UNKNOWN_IDENTIFIER
%@ = %@
 %@=%@
v32@?0@"NSString"8@16^B24
address
contactLabel
longitude
proximity
radius
account == %@
zoneName == %@
ownerName == %@
databaseScope == %ld
T@"CKServerChangeToken",&,N,V_serverChangeToken
REMCDAlarmVehicleTrigger
event
REMCDMigrationState
failureCount
retryCount
timeElapsed
isTerminated
The object we want to share is not found (objectID: %@}
Failed to create share for object {object: %@}
Saving Share
SaveShare
FetchShare
shareURL
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
FetchRecordForAcceptedShare
SyncAfterAcceptShare
AcceptShare
cloudContext
T@"ICCloudContext",&,N,V_cloudContext
objectContext
T@"NSManagedObjectContext",&,N,V_objectContext
persistentStoreCoordinator
T@"NSPersistentStoreCoordinator",R,N,V_persistentStoreCoordinator
isActivated
TB,N,V_isActivated
pendingReindexAll
TB,N,V_pendingReindexAll
pendingReindexIdentifiers
T@"NSMutableSet",R,N,V_pendingReindexIdentifiers
earlyStoppedStoreIdentifiers
T@"NSMutableSet",R,N,V_earlyStoppedStoreIdentifiers
enableCoreSpotlightIndexing
TB,R,N,V_enableCoreSpotlightIndexing
REMCDAccount
ckUserRecordName
inactive
ckServerChangeTokens
ckSharedObjectOwnerNames
REMCDSharee
lastName
nameSuffix
owningListIdentifier
status
B32@?0@"CKRecord"8Q16^B24
RDMasterStoreDidRemoveAccountStoresNotification
RDMasterStoreAccountIdentifier
local
Data-
Stores/
Files/
RDMarkedForDeletion
%@%@.sqlite
sqlite
com.apple.remindd.RDMasterStore.validateAccounts
UUIDString
type IN %@
com.apple.remindd.RDMasterStore.storesForAccounts
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
Account-
Attachment-
(nil)
com.apple.RDMasterStore.purgeDeleted
markedForDeletion == YES
type == %d
com.apple.RDMasterStore.ckFetchUser
merged migration state from user record
com.apple.RDMasterStore.ckZoneNotFound
cleared server records for all cloud objects
com.apple.RDMasterStore.ckSharedZoneWasDeleted
deleted all local database objects after shared zone was deleted
com.apple.RDMasterStore.ckDeleteZone
ivarLock
T{os_unfair_lock_s=I},N,V_ivarLock
mergePolicy
T@"NSMergePolicy",&,N,V_mergePolicy
containerURL
T@"NSURL",&,N,V_containerURL
databaseDirectoryURL
T@"NSURL",R,N
filesDirectoryURL
l_accountStoreMap
T@"NSMapTable",&,N,V_l_accountStoreMap
isolated
TB,N,V_isolated
coreSpotlightDelegateManager
T@"RDCoreSpotlightDelegateManager",R,N,V_coreSpotlightDelegateManager
isPPTStore
TB,N,V_isPPTStore
supportsLocalInternalAccount
TB,N,V_supportsLocalInternalAccount
cloudKitNetworkActivityObservers
T@"NSMutableSet",&,N,V_cloudKitNetworkActivityObservers
accountUtils
T@"RDAccountUtils",&,N,V_accountUtils
supportsAccountUtils
supportsAlarmEngine
supportsCoreSpotlightIndexing
supportsSyncingToCloudKit
supportsApplicationShortcuts
com.apple.reminder.list.name.siri_data_changed
nil author
T@"RDMasterStore",W,N,V_masterStore
affectedStores
T@"NSArray",&,N,V_affectedStores
shouldSortChildrenAfterFetching
TB,N,V_shouldSortChildrenAfterFetching
recordIDsToSortChildrenAfterFetching
T@"NSMutableSet",&,N,V_recordIDsToSortChildrenAfterFetching
length
transcribedText
<%@ %@
 changeTag=%@
 share=%@
REMCDURLAttachment
metadata
REMCDList
badgeEmblem
color
T@"REMColor",&,D,N
daDisplayOrder
daIsReadOnly
sharedOwnerName
sharingStatus
childLists
sharees
sharedOwner
T@"REMCDSharee",&,D,N
<batchInterval=%d numberOfBatches=%d>
Td,N,V_batchInterval
numberOfBatches
TQ,N,V_numberOfBatches
RDMasterStoreMigrator_PopulateDefaultValues
%K == NULL
%@.%@(%@)
kNetworkReachabilityChangedNotification
REMCDAlarmTrigger
T@"REMCDAlarm",&,D,N
ic_debugName
T@"NSString",&,N
RDMasterStoreMigrator_CKParentReminderIdentifier
%K != NULL
%@.%@
RDMasterStoreMigrator_DisplayDate
LAUNCH remindd {pid: %d}
acknowledgedDate
originalAlarmUID
triggerID
alarmID
objectID
dateComponents
structuredLocation
base
arg0
arg1
arg2
itemTypes
listID
textualField
isCompleted
hasLocation
location
hasDueDate
modifiedDate
isRecurrent
isFlagged
spotlightItemIdentifier
SignificantTimeChangeNotification
com.apple.mobile.keybagd.first_unlock
daCalendarItemUniqueIdentifier
externalIdentifier
externalModificationTag
daSyncToken
daPushKey
titleDocumentData
titleDocument
completed
completionDate
flagged
lastModifiedDate
startDateComponents
dueDateComponents
timeZone
notesDocumentData
notesDocument
attachments
alarms
icsDisplayOrder
importedICSData
userActivity
siriFoundInAppsData
lastBannerPresentationDate
parentReminderID
subtaskIDsToUndelete
siriFoundInAppsUserConfirmation
type
listIDsMergeableOrdering
listsDADisplayOrderChanged
markedForRemoval
didChooseToMigrate
didFinishMigration
daConstraintsDescriptionPath
daAllowsCalendarAddDeleteModify
daSupportsSharedCalendars
daWasMigrated
listIDsToUndelete
parentAccountID
parentListID
reminderIDsToUndelete
sharedOwnerID
reminderIDsMergeableOrdering
remindersICSDisplayOrderChanged
daExternalIdentificationTag
daBulkRequests
daIsEventOnlyContainer
daIsImmutable
daIsNotificationsCollection
isGroup
lastUserAccessDate
showingLargeAttachments
reminderIDsMergeableOrderingData
sharedOwnerAddress
calDAVNotifications
contentType
payload
lists
parentAccount
parentList
reminderIDsMergeableOrderingAsset
reminderIDs
reminderIDsAsset
alarmIDs
attachmentIDs
list
notesDocumentAsset
recurrenceRuleIDs
startDate
titleDocumentAsset
listIDsMergeableOrderingAsset
sharedListIDsToOwnerNames
recurrenceEnd
frequency
interval
firstDayOfTheWeek
daysOfTheWeek
daysOfTheMonth
monthsOfTheYear
setPositions
File
Image
fileName
height
metadataAsset
alarmStorage
alarm.reminder.identifier
endDate
occurrenceCount
nonExistentRelationship
nonExistentValue
hostURL
displayName
firstName
middleName
namePrefix
nickname
accessLevel
data
com.apple.UNNotificationDismissActionIdentifier
com.apple.remindd.reminderAlarm.debugDismiss
com.apple.remindd.reminderAlarm.markAsCompleted
com.apple.remindd.reminderAlarm.snoozeOneHour
com.apple.remindd.reminderAlarm.snoozeOneDay
com.apple.remindd.reminderAlarm.snoozeToNextThirds
com.apple.remindd.reminderAlarm.snoozeToNextWeekend
com.apple.remindd.reminderAlarm.ignore
com.apple.remindd.siriFoundInApps.addToReminders
com.apple.remindd.reminderAlarm
com.apple.remindd.todayNotification
com.apple.remindd.todayNotificationBadge
com.apple.remindd.siriSuggestedReminder
com.apple.remindd.dataaccess.caldav.sharedList
com.apple.remindd.beforeFirstUnlock
latitude
uuid
entityName
green
blue
alpha
colorSpace
daSymbolicColorName
daHexString
ckSymbolicColorName
title
locationUID
routing
referenceFrameString
mapKitHandle
objectIDUUID
reminders
Date
Location
TimeInterval
Vehicle
after
manual
none
initial
updatedInserted
afterDate
sortDirection
count
Remindd Launch
OS_dispatch_queue
DataAccess SyncRequest
DataAccess.Requests.Channel
Not Running DataAccess
com.apple.notifyd.matching
v16@?0@"<OS_xpc_object>"8
Running DataAccess
DataAccess.Requests.Queue
Running in the buddy setup user. Going to run a barebones daemon.
os_transaction INIT {name: com.apple.remindd.xpcEvents}
com.apple.remindd.xpcEvents
Reminder barebones daemon started
os_transaction RELEASE {name: com.apple.remindd.xpcEvents}
Reminder daemon started
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/remindd/Utilities/EventStreams/RDXPCEventStream.swift
There must be exactly one XPCEventStream instance per run
Notifying stores did change
remindd is now exiting in response to first unlock
_set_user_dir_suffix() failed %d (%@)
Configured TEMP_DIR=%@
confstr() failed %d (%@)
os_transaction INIT {name: com.apple.remindd.launch}
com.apple.remindd.launch
os_transaction RELEASE {name: com.apple.remindd.launch}
Unexpected CD object in ordered set {object: %@}
Objects are already in correct order. Will skip sorting
q24@?0@8@16
relationship contains non-REMCDObject objects
could not get a sorting order from object
Invalid UUID found in REMCRMergeableOrderedSet<NSString> when converting it to REMCRMergeableOrderedSet<REMObjectID> {uuidString: %@}
submitAllHubbleKPIs
_TtC7remindd29TantorMigrationAPIAsyncClient
invocable
_TtCV7remindd21StartMigrationRequestP33_482F8E23FC1B6897A29C6FDC02F90B4F13_StorageClass
_source
_disableCache
_TtCV7remindd22StartMigrationResponseP33_482F8E23FC1B6897A29C6FDC02F90B4F13_StorageClass
_state
_result
_log
_TtCV7remindd14MigrateRequestP33_482F8E23FC1B6897A29C6FDC02F90B4F13_StorageClass
_options
_userInitiated
_simulatedError
_TtCV7remindd15MigrateResponseP33_482F8E23FC1B6897A29C6FDC02F90B4F13_StorageClass
_nextStep
_logs
_TtCV7remindd17UnmigrateResponseP33_482F8E23FC1B6897A29C6FDC02F90B4F13_StorageClass
message
success
error
time_elapsed
logs
NONE
defined
is_terminated
next_invocation_in_seconds
invocation_count
failure_count
retry_count
is_observer
lists_migrated
reminders_migrated
next_step
dsID
partition
DRY_RUN
DISABLE_SHARING
SAVE_ORIGINAL_JSON
USER_INITIATED
NO_CLEANUP
archivePath
embeddedTestData
user_initiated
simulated_error
baseURL
hostname
mmeAuthToken
credential
_TtC7remindd29RDApplicationShortcutAssembly
@16@0:8
queue
_debouncingInterval
handler
isEnabled
pendingWorkItem
pendingValues
pendingCompletionBlocks
coalescedUpdates
_TtC7remindd21RDDebouncerWithNumber
d16@0:8
v24@0:8d16
@40@0:8d16@24@?32
v32@0:8@16@?24
debouncer
debouncingInterval
Td,N
Firing latest value after delay {coallescedUpdates: %d, value: %@, completionBlocks: %d, debouncer: %@}
Cancelling pending work item {debouncer: %@}
os_transaction INIT {name: com.apple.remindd.rddebouncer}
com.apple.remindd.rddebouncer
os_transaction RELEASE {name: com.apple.remindd.rddebouncer}
remindd.RDDebouncerWithNumber
remindd.RDDebouncer
_TtC7remindd21REMListPickerDataView
REMListPickerDataView_FlaggedInvocation
supportsSecureCoding
v24@?0@"LSAppLink"8@"NSError"16
com.apple.facetime
Unexpected macOS enum case encountered in UIKit code
com.apple.mobilephone
com.apple.mobilesafari
Attempting to get appIcon for potential bundleID {bundleID: %@}
Unable to retrieve appIcon for userActivity. Maybe it is not installed? {activityType: %@, userActivity: %@}
Got appIcon for bundleID {bundleID: %@, uiImage: %@}
com.apple.Safari
_TtC7remindd19RDXPCDebugPerformer
notificationCenter
masterStoreByContainerURL
v24@0:8@?16
v60@0:8@16@24@32@40B48@?52
v56@0:8d16d24d32@40@?48
CloudContext is nil -- can't sync to cloudKit
nil RDMasterStore.cloudContext
Request to destroy isolated container {token: %@, masterStores: %@}
Failed to delete isolated container {error: %@, token: %@}
Destroyed isolated container {token: %@, url: %@}
Failed to destroy isolated store container becuase there still are live references to it {token: %@, masterStores: %@}
Failed to destroy isolated store container becuase there are still live references to it {token: 
Created isolated store {token: %@}
v24@?0@"CNContact"8^B16
RDXPCDebugPerformer called crash {message: %@}
v16@?0@"NSError"8
persistenceStoreID for {accountID: %@}
Debug: addGeofence {center=(%.4lf,%.4lf), r=%.4lf, UUID=%@}
Debug: removeGeofence {UUID=%@}
Debug: fetchGeofences
fireDebugNotification initiated with text: %@
v20@?0B8@"NSError"12
nukeDatabase initiated
Failed to nuke database {error: %@}
remindd.RDXPCDebugPerformer
REMXPCDebugPerformer
v24@0:8@?<v@?@"NSString">16
v24@0:8@?<v@?@"NSError">16
v60@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40B48@?<v@?@"NSError">52
v32@0:8@"REMObjectID"16@?<v@?@"NSString">24
v24@0:8@?<v@?@"NSArray">16
v56@0:8d16d24d32@"NSUUID"40@?<v@?>48
v32@0:8@"NSUUID"16@?<v@?>24
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@"NSString"16
v32@0:8@"NSString"16@?<v@?@"NSArray">24
v24@0:8@?<v@?@"REMStoreContainerToken"@"NSError">16
v32@0:8@"REMStoreContainerToken"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSURL"16@?<v@?@"NSError">24
CNKeyDescriptor
^@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
^v16@0:8
Tq,N,R
T#,N,R
T@"NSString",N,R
debugDescription
B24@0:8@"Protocol"16
@"NSString"16@0:8
NSSecureCoding
NSCopying
@24@0:8^v16
NSCoding
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
_TtC7remindd26RDClientConnectionListener
xpcListener
xpcListenerUserInteractive
listenerQueue
clientConnections
B32@0:8@16@24
New client connection {connection: %{public}@, queue: %{public}@}
Connection count: %lu
Connection requested as UserInteractive but is missing the entitlement. Using xpc Queue {connection: %@}
clientConnection.accessLevel has no read/write access {clientConnection: %{public}@}
clientConnection.accessLevel == .none. Rejecting connection {clientConnection: %{public}@}
Client connection closed: %@
remindd.RDClientConnectionListener
NSXPCListenerDelegate
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
_TtC7remindd20SGSuggestionsService
_TtCC7remindd20SGSuggestionsService20EmptyReminderService
_TtC7remindd10SGRecordId
_TtC7remindd18SGReminderMetadata
recordId
_TtC7remindd10SGReminder
Error trying to unarchive SGReminderMetadata from data. {data.count: %d, error: %@}
Unable to unarchive SGReminderMetadata from data. {data.count: %d}
remindd.SGReminderMetadata
_TtC7remindd31RDSiriSuggestedReminderProducer
Starting siriFoundInApps alarm producer {producer: %@}
remindd.RDSiriSuggestedReminderProducer
Producing active alarms for Siri suggested reminder {reminders: %@}
_TtC7remindd34RDXPCSyncInterfacePerformerFactory
discretionaryCloudKitThrottler
cloudKitThrottler
dataAccessThrottler
dataAccessSyncRequestWriter
_TtC7remindd27RDXPCSyncInterfacePerformer
v36@0:8@16B24@?28
v32@0:8B16B20@?24
clientConnection
remindd.RDXPCSyncInterfacePerformer
Perform has no clientConnection. Is this really an XPC call? Without a real XPC call, I cannot ask the masterStore to actively notify anything.
Received request to observe CloudKit traffic {clientConnection: %@}
Failed to fetch object. {objectID: %@, error: %@}
Tried to fetch non-existent object {remObjectID: %@}
Force set migration state
CloudContext is nil -- can't set migration state
Can't set migration state
AccountUtils is nil -- can't clear migration state cache
Can't clear migration state cache
Failed to set migration state {error: %@, didChooseToMigrate: %@, didFinishMigration: %@
Manual fetch user record
CloudContext is nil -- can't fetch user record
Can't fetch user record
v24@?0@"CKRecord"8@"NSError"16
v24@?0@"NSArray"8@"NSError"16
Can't fetch migration cache records: 
Reset migration state
No primary account found! Try to delete application data anyway
Primary account found - calling unmigration service for the account
Failed to unmigrate account - server returned error
Unknown unmigration error
Server unmigration succeed {timeElapsed: %f}
Delete Application data from CloudKit
CloudContext is nil -- can't delete server data
Missing account utils -- can't purge migration state cache
nil RDMasterStore.accountUtils
Failed to delete application data from server {error: %@}
Failed to purge migration state cache {error: %@}
(daemon) Requested trigger DataAccess sync {accountIDs: %@}
(daemon) Trigger DataAccess sync {accountIDs: %@}
Requested Restart CloudKit sync
Restart CloudKit sync
CloudContext is nil -- can't restart cloudkit sync
Requested Trigger CloudKit sync {discretionary: %d}
Dropping CloudKit sync Request {discretionary: %d}
Trigger CloudKit sync {discretionary: %d}
CloudKit Sync did finish
Sync interface cloudkit sync finished with error {error: %@}
CloudKit Sync - Discretionary
REMXPCSyncInterfacePerformer
v36@0:8@"NSString"16B24@?<v@?@"NSError">28
v36@0:8@"NSArray"16B24@?<v@?@"NSError">28
v36@0:8@"REMObjectID"16B24@?<v@?@"REMMigrationResult"@"NSError">28
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v24@0:8@?<v@?@"CKRecord"@"NSError">16
v32@0:8B16B20@?<v@?@"NSError">24
v32@0:8@"REMObjectID"16@?<v@?@"CKRecord"@"NSError">24
Failed to get entity for CDObject {remObjectID: %@, CDObject: %@}
Failed to get entity for CDObject {remObjectID: 
cdEntity.name != entityName. Performing lookup {remObjectID: %@, CDObject: %@}
CoreData entity not found for remObjectID.entity {remObjectID: %@, CDObject: %@, momEntityNames: %@}
CoreData entity not found for remObjectID.entity {remObjectID: 
, momEntityNames: 
ObjectID entity is not a subentity of the requested CDObject's entity {remObjectID: %@, CDObject: %@}
ObjectID entity is not a subentity of the requested CDObject's entity {remObjectID: 
OriginalAlarmUID
AcknowledgedDate
Trying to merge CKRecord to an object without MOC
MERGE.LOCAL: Perhaps you should not try to call merge(withLocalObject:) for %@.
MERGE.LOCAL: Perhaps you should not try to call cleanUpAfterLocalObjectMerge() for %@.
Fixing broken references for alarm {alarmID: %@, reminderID: %@}
Reminder is marked for deletion but alarm is not {alarmID: %@, reminderID: %@}
v16@0:8
@32@0:8@16@24
@40@0:8@16@24@32
MERGE.LOCAL: Perhaps you should not try to call existingLocalObjectToMerge() for %@.
_TtC7remindd25REMAlarmTriggerCDIngestor
accountID
_TtC7remindd37REMAlarmTimeIntervalTriggerCDIngestor
_TtC7remindd34REMAlarmDateTriggerCDIngestor_ObjC
_TtC7remindd29REMAlarmDateTriggerCDIngestor
_TtC7remindd33REMAlarmLocationTriggerCDIngestor
_TtC7remindd32REMAlarmVehicleTriggerCDIngestor
Failed to code cdAlarmTrigger {error: %{public}@}
REMAlarmDateTriggerCDIngestor: cdAlarmDateTrigger.dateComponentsData is nil {cdAlarmDateTrigger.remObjectID: %@}
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/remindd/Store/TypedPredicate.swift
Failed to create cdPropertyKey for keyPath: 
Failed to decode Trigger date components data
Error occured when mapping object from %@ to %@ {error: %@}
index element 
index oldElement newElement 
_TtC7reminddP33_673FACCCF2F505342EF4BC86AF8BFBA711RDJSONCoder
v28@0:8i16@20
v32@0:8q16@24
v32@0:8d16@24
v32@0:8@16@24
dicts
arrays
allowsKeyedCoding
TB,N,R
RDJSONDecoding can't encode input string as utf8 data {class: %@}
RDJSONDecoding can't decode JSON {class: %@, error: %@}
Invalid JSONSerialization.jsonObject return value {class: %@}
RDJSONCoder failed to encode object as JSON {class: %@, error: %@}
JSON encode error: expected at least one dict
JSON encode error: expected at least one array
RDJSONEncoder can't encode output string as utf8 data
_TtC7remindd18REMAlarmCDIngestor
reminderID
Unhandled trigger type {trigger: 
REMAlarmCDIngestor: cdAlarm.trigger is nil {cdAlarm.remObjectID: %@}
Trigger is not AlarmTriggerRepresentable {cdTrigger: 
_TtC7remindd21REMSiriSearchDataView
REMSiriSearchDataView_RemindersByCriteriaInvocation
REMSiriSearchDataView_ListsByCriteriaInvocation
_TtC7remindd28REMListStableSortingDataView
REMListStableSortingDataView_Invocation
workBlock
remindd.AsyncBlockOperation
_TtC7remindd17RDDARequestsQueue
identifier
dispatchQueue
requestChannelReader
pendingRequests
RDDARequestsQueue: Draining {identifier: %@, count: %d, hasDelegate: %d}.
RDDARequestsQueue: Appending new request {identifier: %@, request: %@, hasDelegate: %d}.
RDDataAccess: Did add pending request {from: %{public}@}.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/remindd/Utilities/JSON/RDJSONCodable.swift
Failed to create propertyKey for keyPath: 
Can't construct REMContactRepresentation from invalid JSON
_TtC7remindd20RDDispatchQueue_ObjC
utilityQueue
T@"OS_dispatch_queue",N,R
com.apple.remindd.background
com.apple.remindd.discretionary
com.apple.remindd.xpc.listener
com.apple.remindd.xpc.default
com.apple.remindd.save
com.apple.remindd.xpc.ui.
com.apple.remindd.utility
com.apple.remindd.xpc.notification
_TtC7remindd30RDAlarmCoreSuggestionsConsumer
coreSuggestionHandler
RDAlarmCoreSuggestionsConsumer consume %ld producerAlarms
_TtC7remindd42RDSiriSuggestedReminderNotificationHandler
daemonController
This is no longer supported
coreSuggestionsController
com.apple.remindd.today-notification
_TtC7remindd27RDTodayNotificationAssembly
Starting RDTodayNotificationAssembly
_TtC7remindd16RDXPCEventStream
alarmHandlers
eventInterface
_TtCC7remindd16RDXPCEventStreamP33_42BD93B4E4BDBF740267D11659A1191423SystemXPCEventInterface
<XPCEventStream.Token: 
Not scheduling alarm because timeIntervalInSeconds > Int64.max
Setting xpc event {xpc_event: %@, date: %@}
Not scheduling alarm becuase dateInNanoSeconds > Int64.max
Starting XPC Event Stream
Tried to start XPCEventStream twice. Crashing...
Received xpc event {xpc_event: %@}
Received xpc_event missing name {xpc_event: %@}
Unsetting alarm {eventName: %@}
Delivering xpc_event to handlers {handlers.count: %ld}
os_transaction INIT {name: com.apple.remindd.xpcalarm}
com.apple.remindd.xpcalarm
os_transaction RELEASE {name: com.apple.remindd.xpcalarm}
Received xpc_event with no handlers -- Dropping {xpc_event: %@}
Failed to convert REMCDList to REMList {objectID: 
_TtC7remindd20RDNotifydEventStream
notificationName
notifyToken
Deallocating notifyd stream {notificationName: %@}
Failed to register for notifyd notification {notificationName: %@, status: %d}
Received notifyd notification after event stream was deallocated {name: %@}
notifydEventStream
Received notifyd notification {name: %@}
Dropped notification becuase we don't have an event handler {notificationName: %@}
_TtC7remindd33RDContactInteractionAlarmProducer
dataSource
delegate
userInteractionSessionManager
shouldNotifyOfInteractionWithPeopleNotifyToken
shouldNotifyOfInteractionWithPeople
shouldNotifyOfInteractionWithPeople value changed. Updating state {previousValue: %d, value: %d}
shouldNotifyOfInteractionWithPeopleNotifyToken is invalid. Failed to update state {token: %d, value: %d}
Failed to update or post update to _REMStoreShouldNotifyOfInteractionWithPeopleNotificationName {notifySetStateStatus: %d,  notifyPostStatus: %d, value: %d}
Starting people interaction alarm producer {producer: %@}
remindd.RDContactInteractionAlarmProducer
Failed to register notify token for _REMStoreShouldNotifyOfInteractionWithPeopleNotificationName {status: %d}
received contact event
DataSource returned alarms for contact interaction. {count: %ld}
RDContactInteractionAlarmProducer.REMContactsProvider
Resolving contact names for newlySeenContactReps {newlySeenContactReps: %@}
DataSource returned no alarms for contact interaction. Done {contacts: %@}
All contactReps interacted with are recently-checkedIn already. Not producing anything. {contactRepresentation: %@}
didInteract.contacts is empty. Skipping
Producing alarms for contact interaction {activeCount: %ld, totalCount: %ld}
dataSource returned alarms that don't match any input contactReps {reminderID: %@, newlySeenContactReps: %@}
_TtC7remindd20RDFirstUnlockManager
RDFirstUnlockManager: Device is in unlocked state (MobileKeyBag not available on this platform). Executing unlockHandler.
_TtC7remindd27RDAlarmNotificationConsumer
beforeFirstUnlockNotificationEngine
RDAlarmNotificationConsumer %@ allowedSet = %@
RDAlarmNotificationConsumer %@ createSet = %@
v16@?0@"NSArray"8
Updating lastBannerPresentationDate {reminderIDs: %@, lastBannerPresentationDate: %@}
notificationCenter.showNotification %@
notificationCenter.retainNotification {reminderID: %@, skipBanner: %@}
bannerBehavior determined {bannerBehavior: %@, reminderID: %@}
notificationCenter.retainNotification will not be called because lastBannerPresentationDate is too recent {reminderID: %@}
Not presenting reminderAlarm banner for SiriFoundInApps reminders. {reminderID: %@}
Unable to determine alarmDate. How did it get to here in the first place? {alarm: %@, reminder: %@}
allowBanner? {lastBannerPresentationDate: %@, alarmDate: %@, now: %@}
Updated lastBannerPresentationDate {reminderIDs: %@, lastBannerPresentationDate: %@}
Unable to update lastBannerPresentationDate {reminderIDs: %@, error: %@}
RDAlarmNotificationConsumer %@ currentSet = %@
RDAlarmNotificationConsumer %@ removeSet = %@
notificationCenter.releaseNotification {identifier: %@}
notificationConsumer
_TtC7remindd30REMNSPersistentHistoryTracking
remindd.REMNSPersistentHistoryTracking
com.apple.remindd.historyTracking
_TtC7remindd28REMReminderStorageCDIngestor
REMReminderStorageCDIngestor: cdReminder.account is nil {cdReminder.remObjectID: %@}
Updating reminder.list {reminder: %@, list: %@}
XXX: Reminder has no oldList, is this an undo-delete?? {reminder: %@, newList: %@}
Adding an anxiliary reminder change DELETE info {reminder: %@, oldList: %@, newList: %@}
Adding an auxiliary reminder change MOVE info {reminder: %@, oldList: %@, newList: %@}
Unknown ingestable key {key: %@}
Updating reminder.account {reminder: %@, account: %@}
Can't merge documents for reminder because remObjectID is nil {reminder.objectID: %@, key: %@}
Failed to merge documents for reminder {reminder.objectID: %@, key: %@}: %@
Can't merge recurrence rule for reminder because cdRecurrenceRule.remObjectID is nil {cdReminder.objectID: %@, cdRecurrenceRule.objectID: %@}
Removing recurrenceRule from reminder {reminder.objectID: %@, recurrenceRule.objectID: %@}
Can't merge attachment for reminder because cdAttachment.remObjectID is nil {cdReminder.objectID: %@, cdAttachment.objectID: %@}
Removing attachment from reminder {reminder.objectID: %@, attachment.objectID: %@}
Removing alarm from reminder {reminder.objectID: %@, alarm.objectID: %@}
_TtC7remindd23REMAccountsListDataView
REMAccountsListDataView_Invocation
incompleteRemindersCount
overdueRemindersCount
scheduledRemindersCount
scheduledOverdueRemindersCount
flaggedRemindersCount
flaggedOverdueRemindersCount
allRemindersCount
allOverdueRemindersCount
todayRemindersCount
todayOverdueRemindersCount
siriFoundInAppsRemindersCount
updatedAccountObjectIDs
updatedListObjectIDs
_TtC7remindd9Analytics
v44@0:8@16@24@32B40
Posting analytics {name: %{public}@, payload: %{public}@}
Posting analytics error {name: %@, payload: %@}
errorDebugDescription
Trying to create a notificationContent with a list whose objectID doesn't match with the listID in the enum. Returning empty content. {list.objectID: %@, enum.listID: %@}
Trying to create a notificationContent without a reminder. Returning empty content. {notificationIdentifier: %@}
Error creating UNNotificationAttachment from UIImage {error: %@}
unknown thirds
_TtC7remindd27REMAccountStorageCDIngestor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1100.2.274.2/swift/stdlib/public/core/Dictionary.swift
/BuildRoot/Library/Caches/com.apple.xbs/Sources/swiftlang/swiftlang-1100.2.274.2/swift/stdlib/public/core/NativeDictionary.swift
Duplicate values for key: '
Can't merge list ordering for account because remObjectID is nil {account.objectID: %@, key: %@}
Failed to merge ordered set for {objectID: %@, key: %@, error: %@}
sorting ordered set account.lists - before - {account: %@, lists: %@}
v32@?0@"REMObjectID"8Q16^B24
sorting ordered set account.lists - after - {account: %@, lists: %@}
Some lists have changes in .daDisplayOrder so DA display orders is taking precedence as the true sort hint - {account: %@}
Cannot get any REMCDAccount from the ordered set of lists in the account.
Actually really doing nothing for a merge on .listsDADisplayOrderChanged
NSManagedObjectContext missing author when updating account.type {storage: %@}
com.apple.xctest
Creating Extraneous Local Account {author: %@}
Going to back propagate ordering changes to CD lists {listsCount: %ld}
Back propagated ordering changes to CD lists - {changes: %@}
Unexpected nil mergeable ordering data {objectID: %@, key: %@}
Failed to deserialize CR ordered set {objectID: %@, key: %@}: %@
_TtC7remindd37RDBeforeFirstUnlockNotificationEngine
RDBeforeFirstUnlockNotificationEngine didn't expect to receive actions of this type. {type: %@, response: %@}
Completing action handler by calling completionHandler now.
Processing notification response {actionIdentifier: %@, action: %@}
Unexpected action for notification type .beforeFirstUnlock {action: %@}
Handled dismissal of before first unlock notification successfully.
RDBeforeFirstUnlockNotificationEngine: Updating nextScheduledAlarmDate as we got a new future alarm date.
Failed to present before first unlock notification {error: %@}
RDBeforeFirstUnlockNotificationEngine: Not going to presenting before first unlock notification as we don't have a due date.
RDBeforeFirstUnlockNotificationEngine: Scheduling to present before first unlock notification at a future time.
OS_dispatch_source
RDBeforeFirstUnlockNotificationEngine: Presenting before first unlock notification now because we have already passed the due date.
RDBeforeFirstUnlockNotificationEngine: Presenting before first unlock notification as we're now due.
RDBeforeFirstUnlockNotificationEngine: Going to update lastPresentAlarmDate based on delivered notifications.
RDUserNotificationFiresBeforeFirstUnlockKey
RDBeforeFirstUnlockNotificationEngine: Found %ld delivered notifications, %ld considered for lastPresentAlarmDate.
Failed to get name from xpc event. Not posting analytics for notifyd notification
_TtC7remindd17RDLaunchAnalytics
lock
alreadyPosted
LAUNCH EVENT {client: %{public}@, reason: %{public}@}
unknown purpose
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/remindd/SharedWithApps/Differ/ExtendedDiff.swift
Fatal error
reminders-migration
_TtC7remindd17RDMigrationClient
v24@0:8@16
completionHandlers
migrationResult
migrationError
invocationCount
stateRestored
dismissed
disableCache
waitingForReachability
wasUserInitiated
Migration: account ID not found in the ACAccount store, will try to migrate anyway but expect failure {accountID: %{public}@}
Creating new migration client {accountID: %{public}@}
com.apple.remindd.migration-fetchState
Internet is not available. Will resume when we have reachability
migration-resume
No primary account with Reminders enabled, or the account ID doesn't match this migration client {accountID: 
, primaryAccountID: 
Completing migration {result: %{public}@, error: %{public}@}
Setting up migration service call
^https?://p([0-9]+)
Failed to determine user CalDAV partition
Making request to inverness for migration
Invalid response from migrate request
Migration service response received {json: %{public}@)
Migration server error {error: %{public}@}
We are an observer and will poll again in a %{public}d seconds
Migrate request failed {error: %{public}@}
Migration client is told to dismiss. Ignore server response.
com.apple.remindd.cloudKitMigration.finished
remindersMigrated
No next-step info from Server. Client will fallback to handle retry by itself
Client will retry migration {delay: %{public}f, invocationCount: %{public}d, failureCount: %{public}d}
Client terminated migration after too many retries {invocationCount: %{public}d, failureCount: %{public}d}
Client terminated migration after 
 invocations and 
 failures. Migration terminated.
Server instructed to retry migration {delay: %{public}d, invocationCount: %{public}d, failureCount: %{public}d}
Server terminated migration after too many retries {invocationCount: %{public}d, failureCount: %{public}d}
Server terminated migration after 
re-enable CloudKit account object and delete CalDAV account
RDAccountUtils will %{public}@
No RDAccountUtils is found. Unable to %{public}@
re-create CalDAV account object and hide CloudKit account
com.apple.remindd.cloudKitMigration.revertToCalDAV
Reloaded accounts succesfully
Failed to %{public}@ {error: %{public}@}
Retry migration after delay {delay: %{public}f}
Cancel delayed retry becaue migration client was dismissed
Creating Inverness client
Completed Inverness request {requestUUID: %{public}@, accountID: %{public}@}
Can't find CoreData store for saving CloudKit account migration state {accountID: %{public}@}
Failed saving migration state {error: %{public}@}
Migration failed
Setting up unmigration service call
Making request to inverness for unmigration
No response from unmigration service
Invalid unmigration response
Unmigration service returned error: 
Purge all migration clients' states
com.apple.remindd.migration-purge
Failed to delete migration state entities from the database {error: %{public}@}
Notify all migration clients to dismiss
com.apple.remindd.migration-client
Resume all uncompleted migration processes
com.apple.remindd.migration-resume-all
Failed to fetch migration states. Assume no active migration sessions
Wake up migration client {accountID: %{public}@}
_TtC7remindd44RDMasterStoreCloudKitNetworkActivityObserver
isObsolete
remindd.RDMasterStoreCloudKitNetworkActivityObserver
operationID
completion
state
asynchronous
ready
executing
finished
ABCDEF0123456789
v8@?0
Failed to perform managedObjectContext operation {error: %@, managedObjectContext: %@}
_TtC7remindd42RDDataStoreApplicationShortcutListProvider
applicationShortcutLists
masterStoreNotificationCenter
masterStoreObservationToken
preferredDefaultListIDObservationToken
dataView
isStarted
Removing RDDataStoreApplicationShortcutListProvider observer on master store
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/remindd/CloudKit/CoreData/REMCDList+CloudKit.swift
Can not instantiate REMCDList, should never happen
LastUserAccessDate
ReminderIDsMergeableOrdering
ReminderIDsMergeableOrderingAsset
ReminderIDsAsset
IsLinkedToAccount
com.apple.reminders.list
Update list's sharing information and sharees with new CKShare {list: %@, share: %@}
Failed to update REMCDList with CKShare: managed object context is nil {list: %@, CKShare: %@}
Share stopped, clear sharing information and sharees
Removing sharees {count: %d}
unknown permission
unknown acceptanceStatus
(ckCloudState.inCloud == NULL OR ckCloudState.inCloud == 0)
MERGE.LOCAL: ...REMCDList.existingLocalObjectToMerge found a matching local REMCDList! {self: %@, matched: %@}
MERGE.LOCAL: ...done merging local list to the cloud list, now delete the local object {local.list: %@, cloud.list: %@}
MERGE.LOCAL: Error decoding reminder IDs ordered set and thus not able to add local reminders and sort child reminders {error : %@}
MERGE.LOCAL: ...updating reminderIDs ordering and re-sorting with added reminders {list: %@}
MERGE.LOCAL: ...this local reminder is not matched/merged so we're adding it to the list {local.reminder: %@, local.list: %@, cloud.list: %@}
MERGE.LOCAL: ...deleting markedForDeletion local reminder permanently {reminder: %@}
MERGE.LOCAL: ...childReminders is unexpectedly nil {self: %@}
MERGE.LOCAL: ...this REMCDList should not try to merge with itself! {self: %@, local: %@}
B24@0:8@16
Not sorting child reminders becuase REMCDList.mutableOrderedSetValue(forKey: reminders) is nil
Sorting child reminders deferred {listRecordID: %{public}@}
MERGE.LOCAL: ...no matching local reminder found for cloud reminder {reminder: %@, list: %@}
MERGE.LOCAL: ...BEFORE merging local reminder to cloud reminder {cloud: %@, local: %@, list: %@}
MERGE.LOCAL: ...AFTER merging local reminder to cloud reminder (success: %@, cloud: %@, local: %@, list: %@}
Failed to create replicaIDSource when decoding mergeable ordered set for reminder IDS {cdList: %@}
Failed to decode mergeable ordered set for reminder IDS {error: %@, cdList: %@}
Failed to parse UUID strings JSON data {error: %@}
Error decoding reminder IDs ordered set and thus not able to sort child reminders {error : %@}
Tried to update listIDsMergableOrdering after fetching share / undeleting list but list has no parent account {listID: %{public}@}
TitleDocumentAsset
RecurrenceRuleIDs
NotesDocumentAsset
LastModifiedDate
MERGE.LOCAL: ......REMCDReminder.existingLocalObjectToMerge found a matching local REMCDReminder! {self: %@, matched: %@}
MERGE.LOCAL: ......adding local alarms to the cloud reminder {local.alarms.count: %d}.
MERGE.LOCAL: ......adding local recurrence rules to the cloud reminder {local.rrules.count: %d}.
MERGE.LOCAL: ...done merging local reminder to the cloud reminder, now delete the local object {local.reminder: %@, cloud.reminder: %@}
MERGE.LOCAL: ......removing original recurrence rules of the cloud reminder {cloud.rrules.count: %d}.
merge(withLocalObject): We do actually expect recurrence-rules to support markForDeletion.
MERGE.LOCAL: ......removing original alarms of the cloud reminder {cloud.alarms.count: %d}.
MERGE.LOCAL: ......merge(withLocalObject): We expect alarms to support markForDeletion.
MERGE.LOCAL: ......server copy is newer, keep server data and delete local. {cloud: %@, local: %@, cloud.lastmod: %@, local.lastmod: %@}
MERGE.LOCAL: ......should not try to merge with itself! {self: %@, local: %@}
Fixing broken references for reminder {reminderID: %@, list: %@, parentReminder: %@}
Parent reminder is marked for deletion but this reminer is not {reminderID: %@, parentReminder: %@}
List is marked for deletion but this reminer is not {reminderID: %@, list: %@}
T@"CKRecord",N,&
validateAndFixupReminderTree BEGIN {objectID: %@, parentID: %@, listID: %@}
validateAndFixupReminderTree: Reminder is detached from lists. Nothing needs to be done.
validateAndFixupReminderTree: Reminder has parent but no list. Assuming self.list = parent.list.
validateAndFixupReminderTree: Neither parent nor list is changed. Nothing needs to be done.
validateAndFixupReminderTree {potentiallyConnectedReminders: %{public}@}
validateAndFixupReminderTree {rootMap: %{public}@}
validateAndFixupReminderTree: Can't resolve the root of the reminder tree. {ckIdentifier: %{public}@}
validateAndFixupReminderTree: {allConnectedReminders: %{public}@}
validateAndFixupReminderTree {resolvedRoot: %@, childReminders: %{public}@}
validateAndFixupReminderTree: Going to update root. {objectID: %@}
validateAndFixupReminderTree: ...Updated {root.list: %@}
validateAndFixupReminderTree: Going to update newly computed children.
validateAndFixupReminderTree: Going to update mismatched lists of remaining children attached to root.
validateAndFixupReminderTree: Going to update old children.
validateAndFixupReminderTree: ...Updated {root.parent: nil}
validateAndFixupReminderTree: Detected a loop in reminder tree in CK server data. Selecting a stable root.
validateAndFixupReminderTree: Reminder has new root.
validateAndFixupReminderTree: Reminder has old root.
validateAndFixupReminderTree: There seems to be a multi-layer subtask tree in the database because the current reminder had both parent and children. Totally unexpected because the save request should have been rejected. {objectID: %@}
validateAndFixupReminderTree: There seems to be a multi-layer subtask tree in the database because the new root had both parent and children. Totally unexpected because the save request should have been rejected. {rootID: %@}
validateAndFixupReminderTree: Detected a loop in the new reminder tree. Multiple client may have raced. Going to fix the tree locally.
validateAndFixupReminderTree: Current reminder tree looks good. Skipping the fixup.
validateAndFixupReminderTree: ...Going to update child. {objectID: %@}
validateAndFixupReminderTree: ......Updated {child.parent: %@}
validateAndFixupReminderTree: ......Updated {child.list: %@}
findReminderRoot BEGIN {id: %{public}@}
findReminderRoot: This reminder has no parent. The root is self. {%{public}@ => %{public}@}
findReminderRoot END {id: %{public}@}
findReminderRoot: Recursively found the root. {%{public}@ => %{public}@}
findReminderRoot: Already visited this reminder. There is a loop. Assuming root is self. {%{public}@ => %{public}@}
findReminderRoot: Root already computed. {%{public}@ => %{public}@}
addSubtree: ckIdentifier is nil {objectID: %@}
canSkipFixupReminderTree: Moving across parent. We can't skip the validation because self's children may have been flattened to siblings in previous saves.
canSkipFixupReminderTree: List changed and has children. Need to validate children.
canSkipFixupReminderTree: Child list mismatch. Need to fixup.
canSkipFixupReminderTree: Multiple layers of subtasks. Need to flatten.
canSkipFixupReminderTree: Parent changed list. Need to validate siblings.
canSkipFixupReminderTree: Sibling list mismatch. Need to fixup.
validateAndFixupReminderTree END {objectID: %@, parentID: %@, listID: %@}
_TtC7remindd28RDXPCActivityTimeEventStream
xpcEventStream
xpcEventStreamToken
eventHandler
Registering Time Event Handler
XPCActivityTimeEventStream received event {xpc_event: %@}
Unregistering xpcEventStreamToken {xpcEventStreamToken: %@}
Adding XPC time event {date: %@}
_TtC7remindd27REMRecurrenceRuleCDIngestor
REMRecurrenceRuleCDIngestor: cdRecurrenceRule.account is nil {cdRecurrenceRule.remObjectID: %@}
REMRecurrenceRuleCDIngestor: cdRecurrenceRule.reminder is nil {cdRecurrenceRule.remObjectID: %@}
Unknown attachment type {type: %@}
Fixing broken references for attachment {attachmentID: %@, reminderID: %@}
Reminder is marked for deletion but attachment is not {attachmentID: %@, reminderID: %@}
Not a file attachment {Type: %@}
No master store for updating file attachment {record: %@}
File attachment has no remObjectID {record: %@}
File attachment has no account {record: %@}
Record.type is image but this is not an image attachment {type: %@}
Record.type is file but this is not a file attachment object {type: %@}
Filename is not a string {value: %@}
File asset missing for file attachment {record: %@}
Failed to update attachment file {error: %@, record: %@}
Record.type is url but this is not a URL attachment {type: %@}
_TtC7remindd28RDXPCChangeTrackingPerformer
v32@0:8q16@?24
v40@0:8@16@24@?32
implementation
fetchAuxiliaryChangeInfos with {auxiliaryChangeInfoObjectIDs: %@}
v24@?0@"NSDictionary"8@"NSError"16
fetchHistory after {date: %@}
fetchHistory after {token: %@}
v24@?0@"REMChangeSet"8@"NSError"16
saveTrackingState with {clientID: %@, trackingState: %@}
getTrackingState with {clientID: %@}
v24@?0@"REMChangeTrackingState"8@"NSError"16
remindd.RDXPCChangeTrackingPerformer
currentChangeToken for {accountID: %@}
currentChangeToken for {accountTypes: %ld}
currentChangeToken initiated
REMXPCChangeTrackingPerformer
v24@0:8@?<v@?@"REMChangeToken">16
v32@0:8q16@?<v@?@"REMChangeToken">24
v32@0:8@"NSString"16@?<v@?@"REMChangeToken">24
v32@0:8@"<REMChangeTrackingClientIdentifying>"16@?<v@?@"REMChangeTrackingState"@"NSError">24
v40@0:8@"REMChangeTrackingState"16@"<REMChangeTrackingClientIdentifying>"24@?<v@?@"NSError">32
v32@0:8@"REMChangeToken"16@?<v@?@"REMChangeSet"@"NSError">24
v32@0:8@"NSDate"16@?<v@?@"REMChangeSet"@"NSError">24
v32@0:8@"REMChangeToken"16@?<v@?@"NSError">24
v32@0:8@"NSDate"16@?<v@?@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
_TtC7remindd22CDIngestionCoordinator
applyCRDTsWithoutMerging
noSideEffectChanges
clientIdentity
changedKeys
managedObjectContext
mode
upsertBlocks
establishRelationshipBlocks
mutateRelationshipOrderingBlocks
fetchedObjectsMap
insertedObjectsMap
Tried to mutate ordering in relationships with non-existent target object -- bail {author: %@, cdObjectID: %@}
Tried to mutate ordering in relationships with non-existent target object -- bail {author: 
Fetching pending objects from database {cdPendingObjectIDs.count: %d}
Tried to establish relationship with non-existing object -- skipping {author: %@, cdObjectID: %@}
Tried to establish relationship with non-existing object -- skipping {author: 
UPDATE RELATIONSHIPS {cdObjectID: %@, changedRelationshipKeys: %@}
Tried to establish realtionship with non-existent target object -- bail {author: %@, cdObjectID: %@, relationshipObjectID: %@}
Tried to establish realtionship with non-existent target object -- bail {author: 
, relationshipObjectID: 
No relationships to establish for mappable -- skipping {CDType: %@}
Performing fetch during upsert {CDType: %@}
Persistent store is not found for this object, which means the store is removed before the object gets saved. We will drop this object. {objectID: %{public}@}
INSERT {objectID: %{public}@, managedObjectID: %@}
Client doesn't have permission to write key {changedValueKey: %{public}@}
Operation denied {requestedAccessLevel: %{public}@, currentAccesslevel: %{public}@}
com.apple.private.remindd
UPDATE VALUES {objectID: %{public}@, managedObjectID: %@, changedKeys: %{public}@}
Skipping fetch during upsert {CDType: %@}
unknown mode
.daPushKey should not be practically used in REMCalDAVNotification
.daSyncToken should not be practically used in REMCalDAVNotification
Tried to insert an auxiliary change info before the related CD object is unlinked from its account. Bailing {author: %@, cdType: %@}.
Tried to insert an auxiliary change info before the related CD object is unlinked from its account. Bailing {author: 
Inserted %@ {author: %@}
Tried to mutate ordering of a non-existing relationship -- bail {author: %@, cdObjectID: %@, orderableRelationhipKey: %@}
Tried to mutate ordering of a non-existing relationship -- bail {author: 
, orderableRelationhipKey:
Tried to mutate a relationship that is not ordered -- bail {author: %@, cdObjectID: %@, orderableRelationhipKey: %@}
Tried to mutate a relationship that is not ordered -- bail {author: 
Updating relationship ordering of %@ {author: %@, changedValueKey: %@, orderableRelationshipKey: %@}
Not mutating ordering because mutableOrderedSet for relationship is nil {orderableRelationshipKey: %@}
_TtC7remindd19RDTimeAlarmProducer
timeEventStream
started
Alarm trigger did change for time alarm producer
RDTimeAlarmProducer.reload
RDAlarmProducerDataSource.fetchAllTimeDataSourceAlarms
RDTimeAlarmProducer.start() must be called before setupTimers
RDTimeAlarmProducer.addNextAlarmTimeEvent
RDTimeAlarmProducer is setting up the timers
Not alarm set in the future -- Done
Next alarm cannot provide fire data. Fail
Failed to get fireDate from alarm. {alarm: %@}
Next alarm is in the past -- Not adding event {fireDate: %@}
Scheduling next alarm {fileDate: %{public}@, nextAlarm: %@}
RDTimeAlarmProducer.start() must be called before fireExpiredAlarms
RDTimeAlarmProducer.produceExpiredAlarms
RDTimeAlarmProducer is firing expired alarms
RDTimeAlarmProducer is firing expired alarms, count = %d
Starting time alarm producer {producer: %@}
RDTimeAlarmProducer.start() must be called exactly once
Received RDTimeEventHandler event on deallocated RDTimeAlarmProducer
remindd.RDTimeAlarmProducer
Tried to fire timeInterval alarm with nil dueDate {reminder: %@}
unknown user activity type
_TtC7remindd11RDXPCDaemon
debugPerformer
syncInterfacePerformerFactory
dataAccessRequestsWriter
indexingPerformer
contactInteractionWriter
siriSuggestedReminderWriter
coreSuggestionsHandler
Tried to create REMStore after RDXPCDaemon was deallocated
remindd.RDXPCDaemon
_TtC7remindd27RDCoreSuggestionsController
service
Processing %ld expiredReminders {reminders: %@}
Unable to find siriFoundInAppsData. {reminderID: %@}
Done processing expiredReminders, counts {expire: %ld, error: %ld}
Reminder is not in SiriFoundInApps list {reminderID: %@, listID: %@}
Unable to get SGRecordId from siriFoundInAppsData. {reminderID: %@, siriFoundInAppsData.count: %d}
CoreSuggestions reminderAlarmTriggered(for:) completed
Processing %ld reminderStorages {reminderStorages: %@}
Done processing reminderStorages, counts {confirm: %ld, reject: %ld, none: %ld, error: %ld, irrelevant: %ld}
unknown siriFoundInAppsUserConfirmation
CoreSuggestions rejectReminder sent {sgRecordID: %@}
CoreSuggestions rejectReminder completed
CoreSuggestions confirmReminder sent {sgRecordID: %@}
CoreSuggestions confirmReminder completed
Searching by spotlightItemIdentifier in CoreData is unsupported
Searching REMCDReminder by location is unsupported. {criteria: %@}
alarmStorage.trigger
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/remindd/Store/REMCDReminder+Fetching.swift
Failed to pre-fetch reminders to mutate ordering; This save will be slow
Pre-fetching {result.count: %ld}
_TtC7remindd26REMStoreInvocationKeySpace
_TtC7remindd25RDAlarmProducerDataSource
Did hit error while producing alarms. Returning empty array {error: %@}
Fetched reminder is missing contact handle. Skipping {remReminder: %@}
Failed to get REMReminder, REMAlarm or triggerEvent from cdTrigger -- skipping {cdTrigger: %@}
Failed to get cdAlarm from trigger. {cdTrigger: %@}
Failed to get reminderID from cdAlarm.reminder. {cdAlarm: %@}
Failed to get remReminder from dataView result {reminderID: %@}
Failed to get remAlarm from remReminder.alarms {alarmID: %@}
remAlarm.trigger is not a RDCLRegionSource (REMAlarmLocationTrigger) {remAlarm.trigger: %@}
Unable to get CLRegion from remAlarm.trigger {remAlarm.trigger: %@, remReminder: %@}
_os_activity_none
_os_activity_current
OS_os_activity
q16@0:8
#16@0:8
^@24@0:8:16
FirstDayOfTheWeek
Fixing broken references for recurrence rule {recurrenceRuleID: %@, reminderID: %@}
Reminder is marked for deletion but recurrence rule is not {recurrenceRuleID: %@, reminderID: %@}
first second third 
first second 
index value 
index error 
Token is missing from coredata resolution token map, skipping {key: %@}
Unknown coredata key {key: %@}
Missing relationship {key: %@, objectID: %@}
Missing relationship {key: 
Mismatching class for relationship {key: %@, expectedType: %@, found: %@}
Mismatching class for relationship {key: 
, expectedType: 
Tried to created CDIngestableKey array without changedKeys
_TtC7remindd31REMCalDAVNotificationCDIngestor
REMCalDAVNotificationCDIngestor: cdCalDAVNotification.account is nil {cdCalDAVNotification.remObjectID: %@}
REMCalDAVNotificationCDIngestor: cdCalDAVNotification.owner is nil {cdCalDAVNotification.remObjectID: %@}
_TtC7remindd31RDMasterStoreNotificationCenter
observers
os_transaction INIT {name: com.apple.remindd.masterStoreNotificationCenter}
com.apple.remindd.masterStoreNotificationCenter
unknown qualityOfService
os_transaction RELEASE {name: com.apple.remindd.masterStoreNotificationCenter}
Failed to cast userInfo[%{public}@] to Set<NSManagedObjectID>
Received store did change notification but observer is deallocated
Observing change for entity not recognized in managedObjectContext {entityName: %@, managedObjectContext: %@}
_TtC7remindd22RDBogusCalendarCleaner
remindd
Downloading records in zone %@
v16@?0@"CKRecord"8
Failed to serialize record {record: %@, error: %@}
Not pulling in CKPackage, the db of which lives at %@
ListIDsMergeableOrderingAsset
ListIDsMergeableOrdering
DecodedListIDsMergeableOrdering
Error fetching record zones {error: %@}
_TtC7remindd31RDUserInteractionSessionManager
userDefaults
No checked-in -- Checking in {interaction: %@}
timeout expired -- reset check-in {interaction: %@}
timeout hasn't expired -- don't check-in {interaction: %@}
CheckIn not found -- Adding new one {interaction: %@, date: %@}
Failed to encode stored for checkIns {error: %{public}@, interaction: %@}
Replacing existing checkIn {interaction: %@, date: %@}
Failed to encode checkIns -- encodging empty array {error: %{public}@}
No stored checkIns -- returning empty array
Failed to decode stored checkIns -- returning empty array {error: %{public}@}
Failed to decoded encoded CheckIns -- return empty array {error: %{public}@}
Unexpected count for checkIn {count: %ld}
_TtC7remindd20RDAccountInitializer
RDAccountInitializer: Setting account inactive value {accountID: %{public}@, inactive: %{public}@}
RDAccountInitializer: unknown account type
RDAccountInitializer: updateLocalAccountActiveStatus: Let's ensure local account is active as there's no cloud account signed in.
RDAccountInitializer: updateLocalAccountActiveStatus: Let's ensure local account is inactive (if empty) as we have some cloud accounts.
Removing Extraneous Local Accounts {candidateAccounts.count: %ld}
Failed to query whether Extraneous Local Account is empty. Skipping {accountObjID: %{public}@, account: %@}
Extraneous Local Account is not empty. Not Removing {accountObjID: %{public}@, account: %@}
Extraneous Local Account is empty. Removing {accountObjID: %{public}@, account: %@}
com.apple.remindd.extraneousLocalAccountRemoved
RDAccountInitializer: moveLocalDataToCloudAccountIfNeeded: Data move not needed as no merge action flag was not set by the DCO.
RDAccountInitializer: moveLocalDataToCloudAccountIfNeeded: DCO has set the merge action flag asking us to move data to cloud, let's move on... {flagged: %{public}@}
RDAccountInitializer: moveLocalDataToCloudAccountIfNeeded: Not signed in to iCloud or not enabled Reminders, something went wrong or we've found a race condition, don't move data {flagged: %{public}@}.
RDAccountInitializer: moveLocalDataToCloudAccountIfNeeded: The DCO flagged identifier is not the same as that of the current primary iCloud account. Something went wrong or we've found a race condition, don't move data {flagged: %{public}@, primary: %{public}@}.
RDAccountInitializer: moveLocalDataToCloudAccountIfNeeded: Error occurred when trying to move data from local to iCloud {flagged: %{public}@ error: %{public}@}
RDAccountInitializer: moveLocalDataToCloudAccountIfNeeded: No iCloud REM account found in database, we can't move data. {flagged: %{public}@}.
RDAccountInitializer: moveLocalDataToCloudAccountIfNeeded: Local account is empty, we won't move local data to cloud {flagged: %{public}@}.
RDAccountInitializer: Creating local account {changeItem: %@}
RDAccountInitializer: No local account is found or created
RDAccountInitializer: Creating default list for local account {accountID: %{public}@}
RDAccountInitializer: This should never happen: the store told us there's no lists in this account but we did find a list with the default list ID {listID: %{public}@}
MasterStore not supportsLocalInternalAccount. Skipping initializeLocalInternalAccountIfNeeded
RDAccountInitializer: Creating localInternal account {accountChangeItem: %@}
RDAccountInitializer: Creating SiriFoundInApps list {listChangeItem: %@}
RDAccountInitializer: Error occured trying to initialize local accounts {error: %{public}@}
_TtC7remindd19REMShareeCDIngestor
REMShareeCDIngestor: cdSharee.account is nil {cdSharee.remObjectID: %@}
REMShareeCDIngestor: cdSharee.list is nil {cdSharee.remObjectID: %@}
target
reader
Putting event {identifier: %@, reader: %@}
Unexpected eventHandler queue {self.queue: %@, queue: %@}
Replacing existing eventHandler in Reader. This is usually a programmer error. {identifier: %@}
Dropping reader message because target has been deallocated {identifier: %@}
REMObjectIDProviding
T@"REMObjectID",N,R
@"REMObjectID"16@0:8
REMNullableObjectIDProviding
@"REMObjectID"24@0:8@"NSUUID"16
cdEntityName
.castFailed(value: 
_TtC7remindd22PromiseDisposableToken
seal
Failed cast {value: %@, value.Type: %@, target: %@}
OS_os_log
performOperation
operationDidFinish
operationStateByID
_TtC7remindd13RDMergePolicy
@24@0:8Q16
B32@0:8@16^@24
RDMergePolicy: Unknown conflict or non-REMCDObject merge conflict is not handled by remindd {conflict: %@}
RDMergePolicy: Neither persisted or cached snapshot is defined {conflict: %@}
RDMergePolicy: Resolution token map missing from the CDObject, don't know how to resolve conflict {conflict: %@
RDMergePolicy: skip merging key because it does not exist in the snapshot {key: %@, remObjectID: %@}
RDMergePolicy: let's check if we need to merge this key: {key: %@, remObjectID: %@}
RDMergePolicy: Resolution token map says we shouldn't merge key: {key: %@, remObjectID: %@}
RDMergePolicy: Going to merge key: {key: %@, remObjectID: %@}
RDMergePolicy: Missing managed object context for resolving merge conflict {key: %@, remObjectID: %@}
listIDsMergeableOrdering_v2
RDMergePolicy: Error occured while trying to merge ordered set for: {key: %@, remObjectID: %@}
RDMergePolicy: Constraint conflict is not handled by remindd, and expect some confusing error message from CoreData {constraint: %@, constraintValues: %@}
<not-remcdobject>
RDMergePolicy: Missing managed object context for resolving constraint conflict {conflict: %@}
RDMergePolicy: cdReminder has no remObjectID {key: %@, cdReminder.objectID: %@}
RDMergePolicy: Could not get a replicaIDSource for reminder for key {key: %@, remObjectID: %@}
RDMergePolicy: Store snapshot document data is nil for the mergeable string document key {key: %@, remObjectID: %@}
RDMergePolicy: Failed to get the reminder remObjectID from the CDReminder {cdReminder: %@}
RDMergePolicy: Failed to get the account remObjectID from the CDReminder {cdReminder: %@}
RDMergePolicy: Unexpected reminder property key to get a replicaIDSource for it {key: %@}
RDMergePolicy: Store snapshot reminderIDs ordering data is nil for key {key: %@, remObjectID: %@}
RDMergePolicy: cdAccount has no remObjectID {key: %@, cdAccount.objectID: %@}
RDMergePolicy: Could not get a replicaIDSource for account for key {key: %@, remObjectID: %@}
RDMergePolicy: Store snapshot listIDs ordering data is nil for key {key: %@, remObjectID: %@}
RDMergePolicy: Failed to get the account remObjectID from the CDAccount {cdAccount: %@}
RDMergePolicy: Unexpected account property key to get a replicaIDSource for it {key: %@}
RDMergePolicy: Merge policy type is not compatible with this merge policy, please use defaultMergePolicy() instead.
displayDateIsAllDay
Reminder dictionary missing list identifier. Skipping {reminder.identifier: %{public}@}
Skipping transaction becuase it contains no changes {transaction: %@}
Skipping change becuase it's not update {change: %@}
Skipping change unhandled type {objectID: %@}
Failed to cast managedObject to REMCDReminder {objectID: %@}
Updated reminder has no list -- skipping {reminder: %@}
Failed to cast managedObject to REMCDList {objectID: %@}
Failed to get remObjectID from REMCDList {objectID: %@}
Failed to cast managedObject to REMCDAccount {objectID: %@}
Failed to get remObjectID from REMCDAccount {objectID: %@}
Ignorning account change becuase it didn't update the name
unknown accountType
Unexpected .count in AccountsListDataView
Unexpected .localInternal in AccountsListDataView
_TtC7remindd27RDApplicationShortcutEngine
listProvider
shortcutUpdater
@24@0:8^@16
_TtC7remindd23REMAttachmentCDIngestor
_TtC7remindd27REMFileAttachmentCDIngestor
_TtC7remindd28REMImageAttachmentCDIngestor
_TtC7remindd26REMURLAttachmentCDIngestor
REMFileAttachmentCDIngestor: cdFileAttachment.account is nil {cdFileAttachment.remObjectID: %@}
REMFileAttachmentCDIngestor: cdFileAttachment.reminder is nil {cdFileAttachment.remObjectID: %@}
REMFileAttachmentCDIngestor: cdFileAttachment.uti is nil {cdFileAttachment.remObjectID: %@}
REMImageAttachmentCDIngestor: cdImageAttachment.account is nil {cdImageAttachment.remObjectID: %@}
REMImageAttachmentCDIngestor: cdImageAttachment.reminder is nil {cdImageAttachment.remObjectID: %@}
REMImageAttachmentCDIngestor: cdImageAttachment.uti is nil {cdImageAttachment.remObjectID: %@}
REMURLAttachmentCDIngestor: cdURLAttachment.account is nil {cdURLAttachment.remObjectID: %@}
REMURLAttachmentCDIngestor: cdURLAttachment.reminder is nil {cdURLAttachment.remObjectID: %@}
REMURLAttachmentCDIngestor: cdURLAttachment.uti is nil {cdURLAttachment.remObjectID: %@}
Failed cast {value: %@, target: %@}
Failed cast {value: 
Failed cast {value: (nil), target: %@}
Failed cast {value: (nil), target: 
Value is unexpectedly nil {source: 
remObjectID
_TtC7remindd17REMWidgetDataView
store
REMWidgetDataViewFetchModelInvocation
reminderFetchLimit
REMWidgetDataViewFetchModelInvocationResult
accountStorages
listStorages
reminderStorages
additionalReminderCount
remindd.Result
Failed to get required values while decoding invocation
remindd.FetchModelInvocation
_TtC7remindd18RDClientConnection
xpcDaemon
xpcConnection
keepAliveTransaction
v48@0:8@16@24@32@?40
No clientProxy obtained.
Unable to get remoteObjectProxy for the app from the daemon. Maybe the client is gone? {error: %@}
Failed to create XPC performer. Is this a barebones daemon / before first unlock?
remindd.RDClientConnection
 clientIdentity=
] xpcConnection=
os_transaction RELEASE {name: %@}
com.apple.remindd.keepAlive[
os_transaction INIT {name: %{public}@}
Connection was interrupted unexpectedly {clientIdentity: %{public}@}
REMXPCDaemon
v40@0:8@"REMStoreContainerToken"16@"NSString"24@?<v@?@"<REMXPCChangeTrackingPerformer>"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"<REMXPCDebugPerformer>"@"NSError">24
v48@0:8@"NSString"16@"REMStoreContainerToken"24@"NSString"32@?<v@?@"<REMXPCStorePerformer>"@"NSError">40
v32@0:8@"NSString"16@?<v@?@"<REMXPCSyncInterfacePerformer>"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"<REMXPCIndexingPerformer>"@"NSError">24
REMXPCClient
v24@0:8@"NSNumber"16
_TtC7remindd11RDThrottler
allowedOperationsCount
throttleInterval
throttleResetDate
currentIntervalAllowedOperationsCount
Throttler denied operation {identifier: %@, remainingTimeInterval: %.4f, throttleResetDate: %@}
handlers
resolution
_TtC7remindd22RDVehicleAlarmProducer
connectedToken
disconnectedToken
description
Unable to get infer RDProducerAlarmTrigger enum from trigger {trigger: %@}
This is an incorrect use of API. peopleInteraction origin takes an additional parameter that cannot be deduced solely by the REMAlarm. You need to create the origin enum manually
Starting RDVehicleAlarmProducer
com.apple.locationd.vehicle.connected
com.apple.locationd.vehicle.disconnected
RDVehicleAlarmProducer.start() must be called exactly once
Did receive vehicle disconnected notification
v12@?0i8
Failed to register notify handler. {status: %ld}
VehicleConnectionDidChange
Received vehicle change notification with nil producer
Did receive vehicle connected notification
remindd.RDVehicleAlarmProducer
remObjectID is not defined for cdObject {cdObject: %@}
accountID is not defined for cdObject {cdObject: %@}
CKRecord's resolution token map is undefined or corrupted {type: %@}, will try to create a new one
Failed to create a new resolution token map when trying to fix a corrupted CK record
Key in CKRecord's resolution token map is unrecognized {key: %@, recordType: %@}
DidFinishMigration
DidChooseToMigrate
Unable to merge CR property from CKRecord into coredata object because replicaIDSource isn't available {key: %@, cdObject: %@}
Unable to merge CR property from CKRecord into coredata object {key: %@, cdObject: %@, error: %@}
Error reading from asset URL {key: %{public}@, url: %{public}@, error: %{public}@}
Unable to deserialize CR property from CKRecord because replicaIDSource isn't available {key: %@, cdObject: %@}
Failed to deserialize CRDT property {objectID: %@, key: %@}
Can't create data from object and not able to save it as asset {object: %@}
CKRecordValue
NSObject
^@32@0:8:16@24
_TtC7remindd22RDXPCIndexingPerformer
masterStore
remindd.RDXPCIndexingPerformer
Daemon receives reindexSearchableItems {identifiers: %@}
Daemon receives reindexAllSearchableItems
Created by remindd on 
REMXPCIndexingPerformer
v24@0:8@?<v@?>16
v32@0:8@"NSArray"16@?<v@?>24
_TtC7remindd29RDApplicationShortcutDataView
RDIApplicationShortcutDataView_FetchInvocation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/remindd/SharedWithApps/Differ/GenericPatch.swift
_TtC7remindd18RDAccountDataMover
remindersBatchSize
accountDataMoverSaveRequestAuthorString
statistics
currentSaveRequest
_TtC7remindd23RDReminderDataICSCopier
_TtC7remindd28RDReminderDataCloudKitCopier
_TtC7remindd28RDReminderDataExchangeCopier
RDAccountDataMover: RDReminderDataICSCopier: source reminder exported as ICS {objectID: %{public}@, icsTodo: %@}
RDAccountDataMover: RDReminderDataICSCopier: imported ICS into as reminder {objectID: %{public}@, storage: %@}
Failed to export reminder as ICSTodo and ICSCalendar {reminderID: 
RDAccountDataMover: Attempted to save with a current save request.
RDAccountDataMover: _copySliceOfReminders: Cannot copy reminders because list change item is not tracked and is nil {targetListID: %{public}@}
RDAccountDataMover: Processed copying source reminders {count: %d}
REMReminder.dataCopierFactory: Could not create data copier for account data move because account type is not supported for now {type: %d, reminderID: %@}.
RDAccountDataMover: removeData: given account is not empty, now remove its lists and reminders {objectID: %{public}@}
default-list-absent
RDAccountDataMover: removeData: done removing data from account {objectID: %{public}@, lists.count: %d, remindersFromDefaultList: %d}
RDAccountDataMover: removeData: given account is already empty (no reminder or list count < 2) so we stopped {objectID: %{public}@}
RDAccountDataMover: Failed to create save request.
RDAccountDataMover: Processing source list to consider... {objectID: %{public}@}
RDAccountDataMover: Done copying source list {sourceList: %{public}@, targetList: %{public}@}
RDAccountDataMover: Source lists processed {count: %d}
RDAccountDataMover: Can't find target list change item with {objectID: %{public}@}
RDAccountDataMover: Processing target list to copy reminders into {objectID: %{public}@}
RDAccountDataMover: The copy-from account is not a local account {%{public}@}.
RDAccountDataMover: The copy-to account is not a cloud account type {%{public}@}.
RDAccountDataMover: Saved all changes and set .daWasMigrated=YES to cloud account {cloudAccount: %{public}@}
List Fetch Metadata
Created list fetchRequest {fetchRequest: %@}
List Fetch Count
List Fetch Storages
List Fetch Storages And Parents
List missing account {error: 
_TtC7remindd42RDDynamicSignificantTimeNotificationEngine
xpcEventSetter
currentStatus
dynamicSignificantTimeChangeNotificationEngine
Error updating significantTimeChageNotification {error: %{public}@}
DISABLE significantTimeChageNotification XPC event
DISABLE significantTimeChageNotification XPC event. Skipping because values match
ENABLE significantTimeChageNotification XPC event
ENABLE significantTimeChageNotification XPC event. Skipping because values match
_TtC7remindd17RDLocationManager
q_locationManager
v40@0:8@16q24@32
v40@0:8@16@24@32
v28@0:8@16i24
startMonitoring: %@, auth: %d
daemonLocationBundle() cannot locate bundle at %@, using Bundle.main instead. Location services will not work. This is expected for simulator.
daemonLocationBundle() successfully obtained from from %@
didChangeAuthorization: %@
monitoringDidFailFor: {region=%@, error=%@}
didFailWithError: %@
didDetermineState: {state=%@, region=%@}
didExitRegion: %@
didEnterRegion: %@
stopMonitoring: %@
remindd.RDLocationManager
CLLocationManagerDelegate
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
Can't construct REMColor from invalid JSON
_TtC7remindd20RDXPCBarebonesDaemon
com.apple.promise.zalgoIfMain
com.apple.promise.zalgo
remindd.RDUserNotificationCenter
userNotificationCenter willPresent
Unknown notification action. {actionIdentifier: %@}
Unknown notification type from content. {content: %@}
Forwarding .beforeFirstUnlock notification response to beforeFirstUnlockReminderDelegate
remindd didn't expect to receive actions from .caldavSharedList. {response: %@}
Forwarding .siriSuggestedReminder notification response to siriSuggestedReminderDelegate
remindd didn't expect to receive actions from .todayNotificationBadge. {response: %@}
remindd didn't expect to receive actions from .todayNotification. {response: %@}
Forwarding .reminderAlarm notification response to reminderAlarmDelegate
userNotificationCenter openSettingsForNotification, but we don't have any settings pane yet so bye ;)
RDUserNotificationRetainingReferences
_TtC7remindd24RDUserNotificationCenter
reminderAlarmDelegate
siriSuggestedReminderDelegate
beforeFirstUnlockReminderDelegate
v52@0:8@16@24@32B40@?44
remindd1
Determine useReplaceInsteadOfAdd {identifier: %@, deliveredNotifications: %@}
Strategy: no existing notification {identifier: %@, useReplaceInsteadOfAdd: false}
Issuing: notificationCenter.add(request) {identifier: %@, skipBanner: %@, userInfo: %@}
Unable to get UNMutableNotificationContent from UNNotificationContent {notification: %@}
Strategy: !alreadyRetained {identifier: %@, useReplaceInsteadOfAdd: false}
Strategy: alreadyRetained && contentChanged {identifier: %@, useReplaceInsteadOfAdd: true}
Issuing: replaceContentForRequest() {identifier: %@}
Strategy: alreadyRetained && !contentChanged, nothing to do {identifier: %@}
retainNotification content replaced {error: %@}
retainNotification request added {error: %@}
Issuing: showNotification notificationCenter.add(request) {identifier: %@}
showNotification request added {error: %@}
User denied notification from Settings.
Unable to requestAuthorization from UNUserNotificationCenter, error = %@
Unable to create UNMutableNotificationContent from UNNotificationContent
releaseNotification: %@, userInfo = %@
Issuing: replaceContentForRequest {identifier: %@}
Issuing: removeDeliveredNotifications since retain count is zero {identifier: %@}
releaseNotification: replaced content {identifier: %@, error: %@}
UNUserNotificationCenterDelegate
v40@0:8@"UNUserNotificationCenter"16@"UNNotification"24@?<v@?Q>32
v40@0:8@"UNUserNotificationCenter"16@"UNNotificationResponse"24@?<v@?>32
v32@0:8@"UNUserNotificationCenter"16@"UNNotification"24
reminders %ld updated %ld inserted %ld
Failed to fetch reminders from reminderLites. Not returning initial reminder {error: %{public}@}
Failed to get remObjectID from REMCDReminder {objectID: %@}
Evaluating TypedPredicate with nil NSPredicate against object {object: %@}
%K == nil || %K == NO
Failed to group reminders by due date
_TtC7remindd25RDReplicaManagerUtilities
Skipping replica manager update. Version in database is newer {inputVersion: %llu, currentVersion: %llu}
com.apple.remindd.
REMCDList's parentList is unexpectedly deleted {identifier: %@}
Dropping unsupported criterion for searching REMCDList. {criterion: %@}
_TtC7remindd29RDDACalDAVShareRequestHandler
RDDACalDAVShareRequestHandler: Creating a DADREMShareResponseDelegate to call onto respondToShareRequest() {DATransaction.id: %@, accountID: %@, calendarURL: %@}
DADREMShareResponseDelegate has completed, but DATransaction was nil?! {error: %@}
DADREMShareResponseDelegate has completed with DATransaction {transactionId: %@, error: %@}
DADREMShareResponseDelegate has done calling XPC completion, but DATransaction was nil?! {error: %@}
DADREMShareResponseDelegate has done calling XPC completion with DATransaction {transactionId: %@, error: %@}
RDDACalDAVShareRequestHandler: Attempted to call DADREMShareResponseDelegate when DataAccess is disabled, aborting...
RDDACalDAVShareRequestHandler: Trying to call DADREMShareResponseDelegate when DataAccess is not yet up and running, aborting...
RDDACalDAVShareRequestHandler: Trying to call DADREMShareResponseDelegate when DADAgentManager is not yet set up properly, aborting...
RDDACalDAVShareRequestHandler: Trying to call DADREMShareResponseDelegate when DADAgentManager has no active accounts, aborting...
_TtC7remindd18RDDaemonController
@32@0:8@16@?24
@24@0:8@?16
v40@0:8@16@?24@?32
storeContainerToken
remindd.RDDaemonController
REMDaemonController
@"<REMXPCChangeTrackingPerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
@"<REMXPCDebugPerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
@"<REMXPCDebugPerformer>"24@0:8@?<v@?@"NSError">16
@"<REMXPCStorePerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@?<v@?@"<REMXPCStorePerformer>">24@?<v@?@"NSError">32
@"<REMXPCSyncInterfacePerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@?<v@?@"<REMXPCSyncInterfacePerformer>">24@?<v@?@"NSError">32
@"<REMXPCIndexingPerformer>"32@0:8@"NSString"16@?<v@?@"NSError">24
v40@0:8@"NSString"16@?<v@?@"<REMXPCIndexingPerformer>">24@?<v@?@"NSError">32
{shareResponse: declinded, calendarURL: 
{shareResponse: accepted, calendarURL: 
_TtC7remindd19RDXPCStorePerformer
storeProvider
v84@0:8@16@24@32@40@48@56Q64B72@?76
v28@0:8B16@?20
Missing account utils for requesting to delete local data.
Missing account utils for requesting to initiate merging local data into sync data {acAccountIdentifier: 
Missing account utils for removing orphaned accounts
Missing account utils for updating account {acAccountID: 
Missing account utils for updating account database
notifyOfInteraction: {personHandle: %@, aliases: %@, contactIdentifier: %@}
INPerson has no phone numbers or emails. Skipping {person: %@}
INPerson alias has missing value. Skipping {person: %@, handle: %@}
INPerson has unknown alias type. Skipping {person: %@, handle: %@}
Cloud Context is not intialized
v20@?0@"NSError"8B16
Failed to create share. {error: %@}
Fetching object with ID {objectID: %@}
v24@?0@"CKShare"8@"NSError"16
Failed to fetch share object. {error: %@}
(daemon) SAVE START {author: %@, accountStorage.count: %lu, listStorage.count: %lu, reminderStorage.count: %lu, changedKeys.count: %lu, replicaManagers.count: %lu
mergePolicyTestSaveQueue
Will not save replica managers. Bundle ID is missing
Converted saveError to remError {saveError: %@, remError: %@}
(daemon) SAVE FAIL {saveError: %@}
(daemon) SAVE END {author: %@, accountStorages.count: %lu, listStorages.count: %lu, reminderStorages.count: %lu, replicaManagers.count: %lu}
Error performing invocation {invocation.name: %@}
Invocation does not conform to RDInvocable {invocation: %@}
Invocation does not confrom to RDInvocable {invocation: 
Performing invocation {invocation: %@}
Error performing invocation {invocation: %@}
Finished performing {invocation: %@}
Executing fetch request {fetchRequest: %@}
Failed to perform fetch {error: %@}
Performing query in daemon {fetchRequest: %@}
Finished performing query in daemon {fetchRequest: %@, result: %@}
remindd.RDXPCStorePerformer
Deallocating RDXPCStorePerformer
REMXPCStorePerformer
v32@0:8@16@?<v@?@"REMFetchResult"@"NSError">24
v32@0:8@"REMStoreInvocation"16@?<v@?@"REMStoreInvocationResult"@"NSError">24
v48@0:8@"REMStoreSwiftInvocation"16@"NSData"24@"NSDictionary"32@?<v@?@"REMStoreSwiftInvocationResult"@"NSError">40
v32@0:8@"REMObjectID"16@?<v@?@"REMReplicaManagerSerializedData"@"NSError">24
v40@0:8@"REMObjectID"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v84@0:8@"NSArray"16@"NSArray"24@"NSArray"32@"NSDictionary"40@"NSDictionary"48@"NSString"56Q64B72@?<v@?@"NSError">76
v32@0:8@"REMObjectID"16@?<v@?@"CKShare"@"NSError">24
v32@0:8@"CKShare"16@?<v@?@"NSError">24
v32@0:8@"CKShareMetadata"16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v32@0:8@"REMObjectID"16@?<v@?@"NSError">24
v28@0:8B16@?<v@?BB@"NSError">20
v36@0:8@"NSString"16B24@?<v@?BB@"NSError">28
v24@0:8@?<v@?B@"NSError">16
RDUserNotificationReminderIDKey
RDUserNotificationDACalendarItemUniqueIdentifierKey
RDUserNotificationListIDKey
Unhandled notification content category {category: %@}
No notificationIdentifier found in notification content {categoryID: %@, userInfo: %@}
No listID found in notification content. {categoryIdentifier: %@, userInfo: %@}
unknown type
_TtC7remindd12RDSyncPoller
pollBlock
eventStream
configuration
nil lastSyncPoll. Polling
lastSyncPoll < throttingInterval. Not Polling {lastSyncPoll: %{public}@, throttingInterval: %.3f}
lastSyncPoll > configurationInterval. Polling {lastSyncPoll: %{public}@, throttingInterval: %.3f}
SignificantTimeChange
Polling sync did finish {error: %{public}@}
_TtC7remindd19RDObjectDescription
diffElement deletion insertion 
diffElement patchElement 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/remindd/SharedWithApps/Differ/ExtendedPatch.swift
_TtC7remindd23RDLocationAlarmProducer
locationManager
alarmDatabaseDidChange, reconciling all geofences
Reminder has no displayDate, firing geofence as active
Reminder has displayDate that's in the past or same day, firing geofence as active as usual {displayDate.date: %@}
Reminder has displayDate that's in the future, firing geofence as passive instead of active. {displayDate.date: %@}
locationManager hasn't started. Not reconciling geofences.
reconcileAllGeofences desiredSet = %@
reconcileAllGeofences existingSet = %@
reconcileAllGeofences setToRemove = %@
reconcileAllGeofences setToAdd = %@
Starting location alarm producer {producer: %@}
locationManagerBecomesReady
remindd.RDLocationAlarmProducer
init()
RDLocationAlarmProducer didExitRegion: %@
RDLocationAlarmProducer didEnterRegion: %@
locationManagerDidStart, reconciling all geofences
unknown proximity
_TtCE7reminddV10Foundation3URLP33_045995AF5C1A960F0C440AD4D8C7B80623SecurityScopedURLHolder
fileURL
B16@0:8
@80@0:8d16d24d32d40Q48@56@64@72
@48@0:8d16d24d32d40
@56@0:8d16d24d32d40Q48
@96@0:8@16@24d32d40d48@56@64@72@80@88
_TtC7remindd24REMStoreObjectsContainer
remStore
storages
decodedObjectsCache
remStoragesContainer
remindd.REMStructuredLocation_Codable
init(title:locationUID:)
init(title:)
remindd.REMColor_Codable
init(ckSymbolicColorName:hexString:)
init(daSymbolicColorName:daHexString:)
init(hexString:)
init(red:green:blue:alpha:colorSpace:)
init(red:green:blue:alpha:)
Found multiple instances of object with identifier: 
Failed to fetch object with ID {moc: %@, objectID: %@, error: %@}
The objectID's store does not exist in the PSC of MOC. This is an account store just got removed? {moc: %@, psc: %@, storeID: %@, objectID: %@, error: %@}
Tried to fetch transactions from managedObjectContext without persistentStoreCoordinator {managedObjectContext: %@}
Tried to fetch transactions from managedObjectContext without persistentStoreCoordinator {managedObjectContext: 
Failed to get transaction from CoreData. No error. {invocation: %@}
Failed to get transaction from CoreData. No error. {invocation: 
Fetched transactions for store {transactions.count: %ld, store.identifier: %@, store.url: %@, historyToken: %@}
Fetched all transactions {allTransactions.count: %ld, sourceToken: %@}
ManagedObjectContext missing persistentStoreCoordinator -- Can't get REMFetchResultToken {managedObjectContext: %@}
ManagedObjectContext missing persistentStoreCoordinator -- Can't get REMFetchResultToken {managedObjectContext: 
Store has no transactions. Not getting tokens {store: %@}
_TtC7remindd20RDDisplayDateUpdater
significantTimeNotificationStream
remindd.RDDisplayDateUpdater
UpdateDisplayDates BEGIN {store: %@}
UpdateDisplayDates END {store: %@}
Failed to update display dates {error: %@}
Not saving since there are no changes {totalUpdatedCount: %ld}
Saving last objects {updatedObjectsCount: %ld, totalUpdatedCount: %ld}
Saving batch {updatedObjectsCount: %ld, totalUpdatedCount: %ld}
Updating display dates in all stores due to significant time change
_TtC7remindd19REMContactsProvider
contactStore
backgroundQueue
contactFetchOperationManager
_TtC7remindd8RDDaemon
xpcClientConnectionListener
alarmEngine
todayEngine
applicationShortcutEngine
coreSuggestionController
coreSuggestionNotificationHandler
_TtC7remindd17RDBarebonesDaemon
remindd.RDDaemon
Contact Interaction
Siri Suggested Reminder
Alarm and today engines are disabled because master store does not support them
Application shortcut engine is disabled because master store does not support application shortcuts
applicationShortcut
_TtC7remindd24REMListStorageCDIngestor
REMListStorageCDIngestor: cdList.account is nil {cdList.remObjectID: %@}
Some reminders have changes in .icsDisplayOrder so ICS display orders is taking precedence as the true sort hint - {list: %@}
Cannot get any REMCDList from the ordered set of reminders in the list.
Actually really doing nothing for a merge on .remindersICSDisplayOrderChanged
Failed to merge ordered set for list {list.objectID: %@, key: %@}: %@
Removing sharee from list {list.objectID: %@, shareeobjectID: %@}
Removing calDAVNotification from list {list.objectID: %@, calDAVNotificationobjectID: %@}
Going to back propagate ordering changes to CD reminders {remindersCount: %ld, startIndexToKeepUntouched: %ld, maxDisplayOrder: %lu}
Back propagated ordering changes to CD reminders - {changes: %@}
Back propagating ordering changes: display order has gone too large in first try. Going to reset from 1 {maxDisplayOrder: %lu, largestDisplayOrder: %lu}
Updating list.parentList {list: %@, parentList: %@}
Updating list.parentAccount {list: %@, account: %@}
Updating list.account {list: %@, account: %@}
_TtC7remindd10UnfairLock
unfairLock
_TtC7remindd9MutexLock
mutex
_TtC7remindd14RDAccountUtils
_TtCC7remindd14RDAccountUtils22LocalDataToICloudMover
com.apple.remindd.accountUtils.accountDataMover
RDAccountUtils.LocalDataToICloudMover: Completed moving data from local to iCloud {target: %{public}@, acAccountIdentifier: %{public}@, stats: %{public}@}
RDAccountUtils.LocalDataToICloudMover: Local account emptied {stats: %{public}@}.
RDAccountUtils.fetchAccountWithAppleAccount: Failed to get the display account {accountIdentifier: %{public}@}.
RDAccountUtils.fetchAccountWithAppleAccount: Given ACAccount is not Apple account {accountIdentifier: %{public}@}.
RDAccountUtils.fetchAccountWithAppleAccount: Reminders is not enabled for the given ACAccount {accountIdentifier: %{public}@}.
RDAccountUtils.fetchAccountWithAppleAccount: Found an active .calDav REMAccount {objectID: %{public}@, accountIdentifier: %{public}@}.
RDAccountUtils.fetchAccountWithAppleAccount: Found an .calDav REMAccount but it is inactive {objectID: %{public}@, accountIdentifier: %{public}@}
RDAccountUtils.fetchAccountWithAppleAccount: Found an active .cloudKit REMAccount {objectID: %{public}@, accountIdentifier: %{public}@}.
RDAccountUtils: Not an UUID {uuidString: %{public}@}
Failed to create store because the XPC daemon is gone
Failed to create store because masterStore does not support accountUtils
ACAccount type is not supported or reminders dataclass is not enabled {accountType: %@}
Try to update account object {accountID: %@}
Can't figure out REMAccountType for ACAccountType {acAccountType: %@}
Will process account {displayAccountID: %@, accountType: %d}
Resolved account object ID from displayACAccount: {resolved: %@, displayACAccount: %@}.
Will process non-primary iCloud CalDAV account {accountID: %@}
Will not fetch migration state {accountID: %@}
Will process CloudKit account {accountID: %@, didChooseToMigrate: %d, shouldShowCloudKitAccount: %d}
Will process iCloud CalDAV account {accountID: %@, didChooseToMigrate: %d}
Master store missing for checking whether migration has failed
Display ACAccount ID is not an UUID {displayACAccountID: %@}
Got a Managed Apple ID. Will only process iCloud CalDAV account for it {accountID: %@}
Will process iCloud CalDAV account {accountID: %@}
Missing cloud context for fetching migration state {accountID: %@}
Missing Cloud Context and not be able to fetch migration state
Failed to fetch migration status. Assume the account is un-migrated {error: %@, accountID: %@}
Fetch migration state from user record {accountID: %@}
Received migration state from user record {accountID: %@}
Failed to fetch user record. Let's assume the account is not migrated {accountID: %@}
Cache migration state in ACAccount object {accountID: %@}
Error updating migration flags for ACAccount {acAccount: %@, error: %@}
Migration state cache saved {accountID: %@}
Migration state fetched {accountID: %@}
UpdateAccountsWithAccountInfos: Updating account object {accountID: %@}
UpdateAccountsWithAccountInfos: Failed to create UUID object, account ignored {accountID: %@}
UpdateAccountsWithAccountInfos: Saving account object changes
UpdateAccountsWithAccountInfos is creating account object {name: %@, accountID: %@, type: %d}
UpdateAccountsWithAccountInfos: Unexpected account type, account ignored. {accountName: %@, accountID: %@, expectedType: %d, actualType: %d}
UpdateAccountsWithAccountInfos is updating existing account object {name: %@, accountID: %@, type: %d}
UpdateAccountsWithAccountInfos is going to delete account {accountName: %@, accountID: %@, type: %d}.
UpdateAccountsWithAccountInfos: Account object changes saved
UpdateAccountsWithAccountInfos: Error saving context after adding account {error: %@}
Found ACAccount without identifier
ACAccount type not whitelisted, assume it's CalDAV {typeIdentifier: %@}
Failed to create REMStore for requestToMergeLocalDataIntoSyncData
RDAccountUtils: requestToDeleteLocalData: Error occurred when trying to delete local data {error: %{public}@}
Error occurred when trying to delete local data {error: 
RDAccountUtils: requestToDeleteLocalData: Local account emptied {stats: %{public}@}.
RDAccountUtils: requestToMergeLocalDataIntoSyncData {acAccountIdentifier: %{public}@}
RDAccountUtils: requestToMergeLocalDataIntoSyncData: Could not find an Apple ACAccount for {acAccountIdentifier: %{public}@}
RDAccountUtils: requestToMergeLocalDataIntoSyncData: Error occurred when trying to move data from local to iCloud {acAccountIdentifier: %{public}@ error: %{public}@}
Error occurred when trying to move data from local to iCloud {acAccountIdentifier: 
RDAccountUtils: requestToMergeLocalDataIntoSyncData: Local account is empty, we won't move local data to cloud {acAccountIdentifier: %{public}@}.
Local account is empty error occurred when trying to move data from local to iCloud {acAccountIdentifier: 
RDAccountUtils: Remove orphaned accounts
Failed to create REMStore for removing orphaned accounts
RDAccountUtils: Trying to remove orphaned accounts
RDAccountUtils: Couldn't fetch accounts from ACAccountStore. Not able to determine orphaned accounts.
Couldn't fetch accounts from ACAccountStore.
Failed to fetch accounts which are no longer signed-in {error: %@}
Failed to remove accounts which are no longer signed-in
Removing orphaned accounts {accounts: %@}
No orphaned accounts to remove.
Orphaned accounts removed
DADMain is disabled after we stop monitoring agents. Will not try re-starting agents.
RDAccountUtils: Updating account {accountID: %@}
No ACAccount is found for updating account object {acAccountID: 
Failed to create REMStore for updating account object {acAccountID: 
RDAccountUtils: Updating system accounts
Failed to create REMStore for updating account database
No reminders accounts is found
Finished updating account {accountID: %@}
Failed to update some or all of the system accounts {error: %@}
Failed to restart DA monitoring agents
Purge ACAccount migration state cache
Failed to fetch account from account store for resetting migration state {error: %@}
Error saving ACAccount {error: %@}
RDAccountUtils: Process migration state change
No ACAccount is found for updating migration state {acAccountID: %@}
Failed to create REMStore for migrating preferred default list
Can't migrate default list ID {error: %@}
Default list is CalDAV but has no external identifer
Default list with unrecognized external identifier (missing slash) {externalIdentifier: 
Default list with unrecognized external identifier (invalid UUID) {externalIdentifier: 
Failed to create REMStore for process migration state change
Created reminder fetchRequest {fetchRequest: %@}
Predicate missing parameter: descriptors
Predicate missing parameter: startingDueDate and/or endingDueDate
Predicate missing parameter: endingDueDate
Predicate missing parameter: startingDueDate
Predicate missing parameter: parentReminderID
Predicate missing parameter: objectIDs
Predicate missing parameter: listID
Due date sorting missing due date
Given cdReminders should not contain any element that is not a REMCDReminder.
Reminder missing account {error: 
Unknown trigger type {type: %@}
Record.type is vehicle but this is not a vehicle trigger {type: %@}
Record.type is time interval but this is not a time interval trigger {type: %@}
ReferenceFrameString
DateComponentsData
Fixing broken references for alarmTrigger {alarmTriggerID: %@, alarmID: %@}
Alarm is marked for deletion but alarm trigger is not {alarmTriggerID: %@, alarmID: %@}
Record.type is date but this is not a date trigger {type: %@}
Record.type is location but this is not a location trigger {type: %@}
Unknown alarm trigger type {type: %@}
_TtC7remindd22RDMasterStoreAnalytics
q_fetchCounts
q_saveCounts
q_postEventWorkItem
enabled
masterStoreReadWriteEventName
remindd.RDMasterStoreAnalytics
com.apple.remindd.masterstore.readwrite
_TtC7remindd24REMRemindersListDataView
REMRemindersListDataView_ListInvocation
REMRemindersListDataView_FlaggedInvocation
REMRemindersListDataView_AllInvocation
REMRemindersListDataView_TodayInvocation
REMRemindersListDataView_ScheduledInvocation
REMRemindersListDataView_SearchInvocation
REMRemindersListDataView_SiriFoundInAppsInvocation
REMRemindersListDataView_TodayNotificationInvocation
remindersPrefetch
prefetchedReminders
updatedReminderObjectIDs
insertedReminderObjectIDs
completedRemindersCount
Migration state did change {accountID: %@, didChooseMigration: %d, didFinishMigration: %d}
Missing master store for processing migration state change {accountID: %@}
Missing cloud context for processing migration state change {accountID: %@}
Missing account utils for processing migration state change {accountID: %@}
MERGE.LOCAL: cleanUpAfterLocalObjectMerge: This REMCDAccount has no remObjectID (ckIdentifier: %{public}@, externalIdentifier: %{public}@).
MERGE.LOCAL: cleanUpAfterLocalObjectMerge: This REMCDAccount has no listIDsMergeableOrdering (accountID: %{public}@).
MERGE.LOCAL: Clean up account.listIDsOrdering {listIDs.to.remove: %@}
MERGE.LOCAL: cleanUpAfterLocalObjectMerge: This REMCDAccount has nil lists (accountID: %{public}@).
B20@0:8B16
v32@0:8@16B24B28
SharedListIDsToOwnerNames
Failed to encode ckSharedObjectOwnerNames in JSON {error: %@}
Invalid ckSharedObjectOwnerName entry {objectIdentifier: %@, ownerName: %@}
Failed to create a new listIDsMergeableOrdering when trying to update listIDsMergableOrdering for missing list(s)
Tried to update listIDsMergableOrdering for missing list but list has no identifier {list: %@}
Unable to create new listIDsMergeableOrdering because replicaIDSource isn't available {key: %{public}@, cdObject: %@}
Succesfully processed migration state change after merging CK user record
Failed to process migration state change after merging CK user record {error: %@}
Not sorting child lists becuase REMCDAccount.mutableOrderedSetValue(forKey: lists) is nil
Sort ordered set account.lists - before - {lists: %@, ordering: %@}
Sort ordered set account.lists - after - {lists: %@}
com.apple.security.exception.shared-preference.read-only
com.apple.security.temporary-exception.shared-preference.read-only
com.apple.security.exception.shared-preference.read-write
com.apple.security.temporary-exception.shared-preference.read-write
com.apple.private.calendar.syncclient
com.apple.private.systemmigration.daemonclient
com.apple.private.accounts.allaccounts
com.apple.symptom_diagnostics.report
com.apple.private.tcc.manager
com.apple.private.tcc.allow.overridable
com.apple.private.tcc.allow
com.apple.security.exception.mach-lookup.global-name
com.apple.security.temporary-exception.mach-lookup.global-name
application-identifier
com.apple.application-identifier
.internalTestTool
.peopleInteraction
.userInteractive
.readWriteLocalInternal
.readWritePublic
AAACCOUNTS.com.apple.accountsd
com.apple.suggestd
com.apple.CoreSuggestions.suggest_tool
com.apple.exchangesync.exchangesyncd
Device is running a non-internal Install. Not providing remindtool access level
Unexpected privateRemindd entitlement format {reminddEntitlements: %{public}@}
Unexpected type for remindd entitlement {entitlement: %{public}@, value: %{public}@, type: %{public}@}
peopleInteraction
com.apple.suggestd.reminders
com.apple.remindd.userInteractive
com.apple.remindd
com.apple.analyticsd
@24@0:8@16
Can't construct REMResolutionTokenMap from invalid JSON
Can't construct REMResolutionToken from invalid JSON
_TtC7remindd25RDTodayNotificationEngine
bannerTimeEventStream
badgeEventStream
userNotificationCenter
dynamicSignificantTimeNotificationEngine
todayNotificationTimeObserver
Failed to fetch reminder count. Failed to update today badge {error: %@}
Updating application badge. {todayCount: %ld}
Posted today badge notification. {count: %ld}
Unable to post today badge notification. {error: %@}
User doesn't want today notifications at all. Not adding next time event.
Error fetching scheduled reminders when getting nextReminderDueDateMidnight {error: %@}
Deciding when to wake up for the next TodayNotification {todayTimeCandidates: %@, now: %@}
No time in todayTimeCandidates is in the future. Not adding next time event. {todayTimeCandidates: %@}
Scheduled next todayNotification fire date {nextFireDate: %@}
User doesn't want today notifications at all. Not posting today notification.
Unable to find last fire date. Not firing Today Notification. {todayNotificationFireTime: %@, now: %@}
Current time is >60s after desired fire time. Not firing Today Notification {lastFireDate: %@, now: %@}
Unable to fetch REMTodayDataView. Not posting any todayNotification. {error: %@}
REMRemindersListDataView.fetchTodayNotification fetched reminders. {count: %ld}
No all-day reminder whose lastBannerPresentationDate is before their own dueDate (at TodayNotificationFireTime). Not posting TodayNotification.
No reminderIDs found in Today smart list. Not posting TodayNotification.
Evaluating whether to trigger TodayNotification {reminderID: %@, lastPresentationTime: %@, fireTime: %@
No reminders in Today view. Not showing today notification.
Posted today notification. {body: %@}
Unable to post today notification. {error: %@}
Starting RDTodayNotificationEngine
os_transaction INIT {name: com.apple.remindd.todayEngine.start}
com.apple.remindd.todayEngine.start
v16@?0@"NSDateComponents"8
RDTodayNotificationEngine.start() must be called exactly once
os_transaction RELEASE {name: com.apple.remindd.todayEngine.start}
Received masterStore changed notification after RDTodayNotificationEngine was deallocated
os_transaction INIT {name: com.apple.remindd.todayEngine.masterStoreChange}
com.apple.remindd.todayEngine.masterStoreChange
os_transaction RELEASE {name: com.apple.remindd.todayEngine.masterStoreChange}
Received RDTimeEventHandler event on deallocated RDTodayNotificationEngine
todayNotificationBadge event triggered
os_transaction INIT {name: com.apple.remindd.todayEngine.badgeEventStream}
com.apple.remindd.todayEngine.badgeEventStream
os_transaction RELEASE {name: com.apple.remindd.todayEngine.badgeEventStream}
streamTodayNotificationFireTime: %@
Received streamTodayNotificationFireTime callback on deallocated RDTodayNotificationEngine
os_transaction INIT {name: com.apple.remindd.todayEngine.todayNotificationTimeObserver}
com.apple.remindd.todayEngine.todayNotificationTimeObserver
os_transaction RELEASE {name: com.apple.remindd.todayEngine.todayNotificationTimeObserver}
todayNotification XPC Event triggered
os_transaction INIT {name: com.apple.remindd.todayEngine.bannerTimeEventStream}
com.apple.remindd.todayEngine.bannerTimeEventStream
os_transaction RELEASE {name: com.apple.remindd.todayEngine.bannerTimeEventStream}
todayNotificationEngine
_TtC7remindd13RDAlarmEngine
producers
consumers
masterStorNotificationCenterToken
Producer did produce alarms {producer: %@, alarms.count: %d}
AlarmEngine didn't expect to receive actions of this type. {type: %@, response: %@}
Processing notification response {actionIdentifier:%@, notificationIdentifier: %@}
Error trying to retrieve reminder {notificationIdentifier: %@, error: %@}
Handle notification action for reminder {reminderID: %@, action: %@}
Unexpected .addToReminders action for notification type .reminderAlarm
Updated reminder successfully. {actionIdentifier: %@, reminderID: %@}
Save error. Failed to save updates from notification response {error: %@ , reminderID: %@, actionIdentifier: %@}
Starting alarmEngine {engine: %@, producers.count: %ld, consumers.count: %ld}
Finished starting alarmEngine {engine: %@, producers.count: %ld}
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/remindd/AlarmEngine/RDAlarmEngine.swift
Started RDAlarmEngine twice -- Crashing
Received store changes with deallocated alarm engine
Trigger did change. Notifying producers
com.apple.remindd.time-alarm
Starting alarm engine assembly
_TtC7remindd15RDDatabaseSaver
SAVE END {transactionAuthor: %@, containerURL: %@}
RDDatabaseSaver: These accounts are marked for removal {clientIdentity: %@, accountIdentifiers: %@}
RDDatabaseSaver: Error performing save when trying to remove account stores. {error: %@}
RDDatabaseSaver: Removed account stores {clientIdentity: %@, accountIdentifiers: %@}
next
previous
DADREMUserNotificationPresenting: content must be kind of UNMutableNotificationContent
DADREMUserNotificationPresenting: show notification for DA {identifier: %{public}@, category: %{public}@, content.userInfo: %@}
_TtC7remindd12RDDataAccess
dataAccessRequestsQueue
remStoreProvider
userNotificationCenterProvider
_TtC7reminddP33_9540E3B410C6F96B6B224FD2AED82F7B28RDDataAccessREMStoreProvider
rdDaemonController
_TtC7reminddP33_9540E3B410C6F96B6B224FD2AED82F7B46RDDataAccessUserNotificationPresentingProvider
remindd2
You should set up a RDMasterStoreNotificationCenter and work queue before starting RDDataAccess in order to observe reminders database.
Received store changes with deallocated RDDataAccess!
RDDataAccess: Received master store changes!
Platform does not support DataAccess {dataAccessEnabled: false}
RDDataAccess is starting...
os_transaction INIT {name: com.apple.remindd.dataaccess.launch}
com.apple.remindd.dataaccess.launch
RDDataAccess has done waitForSystemAvailability, now adding to operation queue to bootstrap DADAgentManager
os_transaction INIT {name: com.apple.remindd.dataaccess.agentManager.load}
com.apple.remindd.dataaccess.agentManager.load
RDDataAccess finished starting (note that DADAgentManager may not have done loading up yet)
os_transaction RELEASE {name: com.apple.remindd.dataaccess.launch}
RDDataAccess has done _loadAndStartMonitoringAgents on DADAgentManager
os_transaction RELEASE {name: com.apple.remindd.dataaccess.agentManager.load}
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/remindd/DataAccessAdditions/RDDataAccess.swift
You must first call RDDataAccess.setup(...) to set up a RDDaemonController before accessing RDDataAccess.shared
You must first call RDDataAccess.setup(...) to set up a rdUserNotificationCenter that conforms to DADREMUserNotificationPresenting before accessing RDDataAccess.shared
You must first call RDDataAccess.setup(...) to set up a rdMasterStoreNotificationCenter before accessing RDDataAccess.shared
DADREMStoreProvider
@"REMStore"16@0:8
@"REMSaveRequest"16@0:8
DADREMUserNotificationPresentingProvider
@"<DADREMUserNotificationPresenting>"16@0:8
DADREMUserNotificationPresenting
v40@0:8@"NSString"16@"<DADREMUserNotificationContent>"24@?<v@?@"NSError">32
@"<DADREMUserNotificationContent>"24@0:8@"REMList"16
DADREMUserNotificationContent
T@"NSString",N,C
body
_TtC7remindd23REMComplicationDataView
REMComplicationDataViewFetchModelInvocation
REMComplicationDataViewFetchModelInvocationResult
Failed to get required values when decoding invocation
development
production
_TtC15InvernessClient20InvernessClientLocal
apiToken
localServer
Failed to extract host name from database URL: 
Failed to extract port from database URL: 
application/protobuf
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
http://127.0.0.1:31234
v24@?0@"CKRecordID"8@"NSError"16
v24@?0@"NSString"8@"NSError"16
Bad header line: 
_TtCV15InvernessClient28Codeagent_CodeServiceRequestP33_DA494235803A0FD6629E2250EBE90E6613_StorageClass
_serviceName
_functionName
_serializedParameters
_serializationFormat
_clientConfig
_accountConfig
_requestContext
_TtCVV15InvernessClient28Codeagent_CodeServiceRequest12ClientConfigP33_DA494235803A0FD6629E2250EBE90E6613_StorageClass
_serviceType
_config
_TtCV15InvernessClient29Codeagent_CodeServiceResponseP33_DA494235803A0FD6629E2250EBE90E6613_StorageClass
_serializedResult
_error
path
code
serializedResult
userId
databaseEnvironment
databaseType
deviceId
applicationBundleId
databasePartition
clientInfo
dsid
userAgent
corporateSharingEnabled
serviceType
config
host
port
useTls
privateDatabase
publicDatabase
sharedDatabase
orgDatabase
sandbox
PUSH
DATABASE
functionName
serializedParameters
serializationFormat
clientConfig
accountConfig
requestContext
FUNCTION_TIMEOUT
FUNCTION_ERROR
INTERNAL_ERROR
.CheckContainerHealthResponse
.CheckContainerHealthRequest
.StopAllContainerResponse
.StopAllContainerRequest
.StopContainerResponse
.StopContainerRequest
.InitializeContainerResponse
.InitializeContainerRequest
.CodeServiceResponse
.ServiceClientConfig
.CodeServiceRequest
_TtCV15InvernessClient27Ckdbcore_CKDBRequestContextP33_96D6BEFA65B5400CAC0737F27CB51BDE13_StorageClass
_container
_database
_databasePartition
_owner
_user
_deviceID
_applicationBundleID
_synchronousMode
privateDB
publicDB
sharedDB
ckUserId
environment
version
container
database
owner
user
synchronousMode
.RequestOperation
.ResolvedContainer
.CKDBRequestContext
PROTO
JSON
v24@?0@"NSData"8@"NSError"16
v16@?0@"CKRequestInfo"8
_TtC15InvernessClient15InvernessClient
serviceName
containerName
qualityOfService
sourceApplicationBundleIdentifier
requestCompletedBlock
_TtC15InvernessClient10CloudKitWS
credentials
/code/databaseContext
application/json
unable to percent encode webAuthToken
&ckWebAuthToken=
url is malformed: 
https://api.apple-cloudkit.com/database/1/
-inf
_TtCV13SwiftProtobuf20Google_Protobuf_TypeP33_6F98CA5B40D5770487A5728B8BE8E47F13_StorageClass
_name
_fields
_oneofs
_sourceContext
_TtCV13SwiftProtobuf20Google_Protobuf_EnumP33_6F98CA5B40D5770487A5728B8BE8E47F13_StorageClass
_enumvalue
_TtCV13SwiftProtobuf22Google_Protobuf_OptionP33_6F98CA5B40D5770487A5728B8BE8E47F13_StorageClass
_value
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/InvernessClient/swift-protobuf/Sources/SwiftProtobuf/TextFormatEncodingVisitor.swift
name
number
options
enumvalue
source_context
syntax
CARDINALITY_UNKNOWN
CARDINALITY_OPTIONAL
CARDINALITY_REQUIRED
CARDINALITY_REPEATED
TYPE_UNKNOWN
TYPE_DOUBLE
TYPE_FLOAT
TYPE_INT64
TYPE_UINT64
TYPE_INT32
TYPE_FIXED64
TYPE_FIXED32
TYPE_BOOL
TYPE_STRING
TYPE_GROUP
TYPE_MESSAGE
TYPE_BYTES
TYPE_UINT32
TYPE_ENUM
TYPE_SFIXED32
TYPE_SFIXED64
TYPE_SINT32
TYPE_SINT64
kind
cardinality
type_url
oneof_index
packed
json_name
default_value
oneofs
SYNTAX_PROTO2
SYNTAX_PROTO3
_TtC13SwiftProtobuf15DoubleFormatter
doubleFormatString
work
fieldNumber
fieldName
messageType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/InvernessClient/swift-protobuf/Sources/SwiftProtobuf/BinaryDecoder.swift
Somehow BinaryDecoding unwound more objects than it started
google.protobuf.Any
google.protobuf.BoolValue
google.protobuf.BytesValue
google.protobuf.DoubleValue
google.protobuf.Duration
google.protobuf.Empty
google.protobuf.FieldMask
google.protobuf.FloatValue
google.protobuf.Int32Value
google.protobuf.Int64Value
google.protobuf.ListValue
google.protobuf.StringValue
google.protobuf.Struct
google.protobuf.Timestamp
google.protobuf.UInt32Value
google.protobuf.UInt64Value
google.protobuf.Value
org.swift.protobuf.typeRegistry
null
seconds
nanos
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/InvernessClient/swift-protobuf/Sources/SwiftProtobuf/Message+TextFormatAdditions.swift
file_name
_TtCV13SwiftProtobuf19Google_Protobuf_ApiP33_CEA2A4FA6D1C07D784D5EE9B6CE9521113_StorageClass
_methods
_version
_mixins
_syntax
root
request_type_url
request_streaming
response_type_url
response_streaming
methods
mixins
\u00
"NaN"
"Infinity"
"-Infinity"
_TtC13SwiftProtobuf17AnyMessageStorage
_typeURL
type.googleapis.com
v16@?0^{?=^vQB}8
#json: 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/InvernessClient/swift-protobuf/Sources/SwiftProtobuf/JSONScanner.swift
Somehow JSONDecoding unwound more objects than it started
key value 
paths
value
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ReminderKit_Support_Sim/ReminderKit-176.41/InvernessClient/swift-protobuf/Sources/SwiftProtobuf/Google_Protobuf_Any+Extensions.swift
false
true
_TtC13SwiftProtobufP33_ACE262E8B2F1F7C26CC1ADDF6C99D01E10InternPool
interned
_TtCV13SwiftProtobuf21Google_Protobuf_ValueP33_D700BA243E574A08E6B851AAC52D261C13_StorageClass
_kind
values
null_value
number_value
string_value
bool_value
struct_value
list_value
fields
NULL_VALUE
UnparentedObjectsMigration BEGIN {store: %@}
Failed to save delete batch. Migration error {deleteError: %@}
UnparentedObjectsMigration End {store: %@, countDeleted: %ld}
Could not get method for selector %@ on target %@
Store missing url. Failed to populate RDMasterStoreAccountIdentifier {store: %{public}@}
Error fetching accounts. Failed to populate RDMasterStoreAccountIdentifier {error: %{public}@}
No account found in store {store: %{public}@}
Account has nil identifier. Failed to populate RDMasterStoreAccountIdentifier {account: %{public}@}
Populating RDMasterStoreAccountIdentifier {store: %{public}@, identifier: %{public}@}
Processing cloud batch (%d of %@) in throttling level (%d of %d): %@
Switching to cloud throttling level (%d of %d): %@
Resetting cloud throttling policy to the first level: %@
Cannot find entity description for name %@
ICCloudContext INIT {supportsCloudKitSyncing: %ld, syncSettingsSupportsCloudKitSyncing: %ld, masterStoreSupportsCloudKitSyncing: %ld}
Register for buddy
Received buddy finished notification.
Clearing cloud containers.
OS version sent from server is in the incorrect format. Should be majorVersion,minorVersion,patchVersion
Current version of the OS (%{public}@) is not supported for sync. Needs at least (%{public}@)
Re-gain internet connection after losing it for a short time. Not going to sync. (throttled)
Cloud context found an internet connection.
Cloud context lost an internet connection.
Reachability sync finished {error: %{public}@}
CloudKit account status may have changed
Operation queue has 0 operations
Operation queue has %d operation(s):%{public}@
Adding os_state handler: %{public}s
Processing os_state handler: %{public}s
Error serializing state data for "%{public}s": %{public}@
Error serializing state data for "%{public}s": data size greater than UINT32_MAX
Zone not found %{public}@ %{public}@
Shared zone not found %{public}@ %{public}@
SYNC[FULL] START {reason: %{public}@}
os_transaction INIT {name: %{public}@}
os_transaction RELEASE {name: %{public}@}
SYNC[FULL] FAIL - master store syncing disabled
SYNC[FULL] FAIL - no CloudKit account
SYNC[FULL] FAIL - not ready {readinessDescription: %{public}@}
SYNC[FULL] FAIL - no network connection
cloudkit.full
SYNC[FULL] CONTINUE - Trying to sync with fetching disabled, so only pushing. {isFetchingEnabled: %d, discretionary: %d, cloudDirtyToken: %{public}@}
SYNC[FULL] FAIL {error: %{public}@}
SYNC[FULL] {duration: %.4f}
SYNC[FULL] CONTINUE - Performing full sync {discretionary: %d, cloudDirtyToken: %{public}@}
Babysitting SYNC[FULL] because it failed too many times
SYNC[FULL] END {duration: %.4f}
_syncWithReason: Error fetching database changes during full sync {fetchDatabaseChangesError: %{public}@}
_syncWithReason: Fetched database changes for full sync
_syncWithReason: Error fetching record zone changes during full sync {fetchRecordZoneChangesError: %{public}@}
_syncWithReason: Fetched record zone changes for full sync
_syncWithReason: Error while processing for full sync {processingErrors.first: %{public}@}
_syncWithReason: Processed everything for full sync
Cancelling all CloudKit operations
Timed out when cancelling the cloud operations. Performing cleanup anyway.
Deleting record zones (markZonesAsUserPurged=%d): %{public}@
Error deleting zones {operationError: %{public}@}
Deleted record zones {deletedRecordZoneIDs: %{public}@}
Finishing operations for record ID %{public}@
All operations finished for record ID %{public}@
Waiting on operation %{public}@ for record ID %{public}@
Updating CloudKit account status
Error updating account status {error: %{public}@}
CloudKit account status changed {accountStatus: %{public}@}
No change in CloudKit account status {accountStatus: %{public}@}
Fetching user record in cloud context {operation: %{public}@}
Fetched user record in cloud context {userRecord: %{private}@}
Per-record error fetching user record {userRecordError: %{public}@}
Fetch user record operation completed: %{public}@
Error fetching user record: %{public}@
Trying to fetchUserRecordWithAccountID with empty accountID.
Adding operations to fetch %ld records
Fetching records with operation group %{public}@
Grouping fetch requests for %d %{public}@ records into %d batches
Creating %{public}@
Will fetch %{public}@ %{public}@
Progress fetching %{public}@: %d%% %{public}@
Tried to fetch record that doesn't exist: %{public}@ %{public}@
Failed to fetch %{public}@ %{public}@: %{public}@
Fetched %@ %{public}@
Error fetching {operation: %{public}@, error: %@{public}}
Finished {operatin: %{public}@}
No root record type in share %@ for %{public}@
Received share %{public}@ for %{public}@ %{public}@
Received share for unknown object: %{public}@
Received a share with no root record ID: %{public}@
Will Delete Shares for %lu Objects:
Will delete share for %@
Creating operations to push %ld records
Creating operations to delete %ld records
Creating operations to delete %ld share records
Record to delete share from doesn't have a server share %@
No root record ID when trying to delete share for %@
Grouping modify operations into %ld batches
Modifying records with operation group %{public}@
About to create modify operation for database: %{public}@
Creating modify operation %{public}@
Will push %@ %{public}@
Will delete %{public}@ %{public}@
Progress pushing %@: %d%%
Pushed %@ %{public}@
Deleted share %{public}@ %{public}@
Deleted record %{public}@ %{public}@
Unknown item deleting share %{public}@ for %@ %{public}@
Zone not found deleting share %{public}@ for %@ %{public}@
Error deleting share %{public}@ for %@ %{public}@: %{public}@
No record on server to delete %{public}@ %{public}@
Reference violation for %{public}@ %{public}@
Batch request failed for deleting %{public}@ %{public}@
Error deleting record %{public}@ %{public}@: %{public}@
Error modifying records, canceling dependent operations: %{public}@
Partial error for modify operation %{public}@: %{public}@
Error modifying records %{public}@: %{public}@
Finished modify operation %{public}@
Unexpected item id %{public}@
User exceeded iCloud quota
User deleted zone %{public}@
Error topologically sorting records: %{public}@
No record ID when trying to modify record
Trying to modify two instances of the same object %{public}@
rem_log_fault_if(partialError.code != CKErrorPartialFailure) -- Called -partialFailure:containsError with a non-partialFailure.
Canceling operation: %{public}@
Will save zone %{public}@ %{public}@
Error saving zones %{public}@: %{public}@
Saved record zones %{public}@
Saved record zone %{public}@ %{public}@
Enqueued %ld object IDs because of coredata changes
Processing objects with operation %{public}p
Adding process objects operation %{public}p. allDirtyObjects=%d
Process operation %{public}p waiting on %ld other operations
Running process all dirty objects operation.
SYNC[COREDATA] START {label: %@}
os_transaction INIT {name: com.apple.remindd.cloudkit.sync.coredata}
os_transaction RELEASE {name: com.apple.remindd.cloudkit.sync.coredata}
SYNC[COREDATA] ERROR - no CloudKit account
SYNC[COREDATA] ERROR - not ready {readinessDescription: %{public}@}
SYNC[COREDATA] ERROR - network isn't reachable
SYNC[COREDATA] ERROR - upload is suspended
SYNC[COREDATA] FAIL
cloudkit.coredata
Babysitting processPendingCloudObjects because it failed too many times
SYNC[COREDATA] END(DEFERRED due to MERGE.LOCAL needs to happen before we can processObjectIDs) {label: %@, duration: %.4f, numIDsToProcessAddingToRetry: %ld}
SYNC[COREDATA] CONTINUE {label: %{public}@, objectIDsToProcess.count: %ld, retryIDsCount: %ld}
SYNC[COREDATA] FAIL {duration: %.4f, errors.first: %{public}@, errors.count: %ld}
SYNC[COREDATA] END {label: %{public}@, duration: %.4f}
MERGE.LOCAL: Gathering all cloud objectIDs that should run attempt merging local objects.
MERGE.LOCAL: No need to merge local objects or no objectIDsInCloud (accountNeedsToMergeLocalObjects: %@).
MERGE.LOCAL: ...found an REMCDObject that isInCloud && shouldAttemptLocalObjectMerge. (objectID=%{public}@, hasServerRecord=%{public}@)
MERGE.LOCAL: ...this REMCDObject is NOT isInCloud (objectID=%{public}@, hasServerRecord=%{public}@
rem_log_fault_if(cloudObject != nil) -- MERGE.LOCAL: Unexpected ICCloudObject type: %{public}@
MERGE.LOCAL: _objectIDsThatShouldAttemptLocalObjectMerge: summary (objectsInCloudThatShouldMerge=%{public}@, objectsNotInCloud=%{public}@).
MERGE.LOCAL[COREDATA] START
os_transaction INIT {name: com.apple.remindd.cloudkit.merge.local.coredata}
os_transaction RELEASE {name: com.apple.remindd.cloudkit.merge.local.coredata}
MERGE.LOCAL[COREDATA] CONTINUE {in-cloud-objectIDs.count: %ld}
MERGE.LOCAL: processPendingToMergeObjectIDs: here's the objectIDs to fetch and process (objectIDs: %{public}@).
MERGE.LOCAL[COREDATA] MERGE SAVE FAILED!
MERGE.LOCAL[COREDATA] MERGE LOCAL SAVED.
MERGE.LOCAL[COREDATA] END {duration: %.4f}
MERGE.LOCAL: Unsetting .daWasMigrated (accountIdentifier=%@, flagSaved=%@)
MERGE.LOCAL: ...found an existingLocalObjectToMerge (objectMID=%{public}@, localObjectMID=%{public}@)
MERGE.LOCAL: ...mergeWithLocalObject (didMerge=%{public}@)
MERGE.LOCAL: ...no matching existingLocalObjectToMerge (objectMID=%{public}@)
MERGE.LOCAL: final step to clean up account and lists, then save... (accountIdentifier=%{public}@)
MERGE.LOCAL: Collected error upon merge local objects completion: {error: %{public}@}.
Retrying to process %d cloud objects
Processing %lu cloud objects, now going to fetch from CD and submit items to operation queue
Failed to fault-in object while processing cloudObjectIDs {error: %{public}@, cloudObjectID: %{public}@}
Found non-REMCDObject to process. Skipping {objectID: %{public}@}
Unrecognized subclass of REMCDObject. We don't save this object to the cloud {class: %{public}@}
Not syncing object because it's missing mandatory fields: %@
_processCloudObjects adding fetch&/modify cloud objects operation to operation queue: %{public}@
SYNC[APS] ERROR - Disabled or not ready {readinessDescription: %{public}@}
SYNC[APS] CONTINUE {notification.class: %{public}@, subscriptionID: %{public}@}
SYNC[APS] CONTINUE - Received CloudKit database notification {scope: %{public}@, notificationID: %{public}@}
SYNC[APS] SKIP - Skip handling CloudKit database notification because debouncer has already {scope: %{public}@, notificationID: %{public}@}
SYNC[APS] FAULT - Received database notificiation (%{public}@), but expected %{public}@
SYNC[APS] NOOP - Not handling CloudKit database notification %{public}@
...SYNC[APS] Handling CloudKit database notification, with potential debounced scopes from other notifications {scope: %{public}@, notificationID: %{public}@}
...SYNC[APS] ERROR fetching database changes during aps notification sync {error: %{public}@}
...SYNC[APS] Fetched database changes for aps notification sync
...SYNC[APS] ERROR fetching record zone changes during aps notification sync {error: %{public}@}
...SYNC[APS] Fetched record zone changes for aps notification zone
...SYNC[APS] ERROR processing for aps notification sync {processingErrors.first: %{public}@}
...SYNC[APS] Handled CloudKit database notification {scope: %{public}@, notificationID: %{public}@}
Asking to fetch changes for zone IDs %{public}@
Waiting for previous fetch zone changes operation to finish %{public}@
Not adding operation to queue. isFinished=%d isExecuting=%d isCancelled=%d %{public}@
Filtered the current users zone from being fetched from the shared db.
Fetching record zone changes with operation group %{public}@
Not trying to sync the default record zone.
Found existing operation with identical zone options %{public}@
Creating fetch changes operation %{public}@
Fetched changes for record zone %{public}@ %{public}@
Server change token expired for zone %{public}@ %{public}@
User deleted zone %{public}@ %{public}@
Non-fatal error fetching zone changes for zone %{public}@ %{public}@: %{public}@
Error fetching zone changes %{public}@ %{public}@: %{public}@
Fetched zone changes %{public}@
Fetch changes operation had partial failure %{public}@
Non-fatal error fetching zone changes %{public}@: %{public}@
Error fetching zone changes %{public}@: %{public}@
Record changed %@ %{public}@
No account after record changed %{public}@
Share was deleted %{public}@ %{public}@
Record was deleted %{public}@ %{public}@
Zone change token updated %{public}@ %{public}@ %{public}@
Sorted chilren objects after fetching RecordZoneChanges {sortedRecordIDs: %{public}@}
rem_log_fault_if(ckRecordIDs.count > 0) -- Some record IDs marked as needing to sort children are left not sorted {ckRecordIDs: %{public}@}
ICCloudContext Polling Timer Fired
Polling timer fired
Fetching database changes with operation group %{public}@
Creating fetch database changes operation %{public}@
Database changes operation %{public}@ will wait for %{public}@
Zone changed %{public}@ %{public}@
Shared zone was deleted: %{public}@
Deleting shared %@ for zoneID %{public}@
Not deleting shared %@ in wrong zone %{public}@ for zone ID %{public}@
Zone was deleted %{public}@ %{public}@
Callback for operation in shared database says private zone was deleted %{public}@: %{public}@
Database change token updated %{public}@ %{public}@
Fetched database changes %{public}@
Database changes server change token expired %{public}@
Operation to fetch database changes was cancelled %{public}@
Operation to fetch database changes failed with no network connection %{public}@
Error fetching database changes %{public}@: %{public}@
Error fetching database changes, canceling dependent operations: %{public}@
Loaded zone fetch state. zonesNeedingFetchChanges=%ld
Saving zone fetch state. zonesNeedingFetchChanges=%ld
Updating subscriptions
Not fetching subscriptions for %{public}@, already subscribed to %{public}@
Not sure if subscribed to %{public}@
Fetching subscriptions %{public}@
Fetched subscription %{public}@ %{public}@
Error fetching subscriptions %{public}@: %{public}@
Fetched subscriptions %{public}@
Not saving subscriptions for %{public}@, already subscribed to %{public}@
Saving subscription %{public}@ %{public}@
Error saving subscriptions %{public}@: %{public}@
Saved subscriptions %{public}@
Saved subscription %{public}@ %{public}@
Loaded subscribed subscription IDs last updated time from user defaults {timestamp: %{public}@, date: %{public}@, validityPeriod: %{public}@}
Loaded subscribed subscription IDs from user defaults: %@
Persisting subscribed subscription ID to user defaults {subscriptionID: %{public}@}
Clearing subscribed subscription IDs
Not updating cloud context state because it's disabled
Updating cloud context state. %{public}@ and internet %{public}@.
os_transaction INIT {name: com.apple.remindd.cloudkit.updateCloudContextState}
Babysitting updateCloudContextState because it failed too many times
os_transaction RELEASE {name: com.apple.remindd.cloudkit.updateCloudContextState}
No longer in foreground after updating cloud context state
No longer reachable after updating cloud context state
Not ready to sync after updating cloud context state: %{public}@
Syncing enabled after updating account status
Going to fetch user record before sync {syncReason: %@}
Fetched user record %{private}@
error fetching all long lived operation IDs: %{public}@
error fetching long lived operation, ID: %{public}@ error: %{public}@
Not adding long-lived operation because it's finished: %{public}@
Not adding long-lived operation because it's cancelled: %{public}@
Adding long-lived operation back to the queue: %{public}@
Marking cloud as dirty {newToken: %{public}@}
Clearing cloud dirty {currentToken: %{public}@, cloudDirtyToken: %{public}@}
NOT clearing cloud dirty {currentToken: %{public}@, cloudDirtyToken: %{public}@}
Incrementing retry count for %{public}@ from %d to %d
Clearing retry count for %{public}@
Not retrying because we have no internet connection
Not retrying because we're not ready: %{public}@
Starting a retry timer if necessary for error: %{public}@
Using backoff time for retry (%.0fs)
Retrying operations after %ds
CloudKit Retry
Retry timer fired, but we have no internet connection
Retry timer fired, but we're not ready to sync: %{public}@
Retrying operations
Retrying to update subscriptions
Retrying to save record zones
Retrying to fetch record zone changes
Retrying to process changes
Saving server change token for %{public}@ %{public}@: %{public}@
Trying to save server change token without an account {accounts: [%@], primaryACAccount: %@, acAccounts: [%@], isReadyToSync: %d}
Deleting server change token for %{public}@ %{public}@
Deleting all server change tokens
Deleting all server data
Failed to fetch user record for updating
Failed to update user record for resetting migration state {error: %{public}@}
Successfully cleaned user record
Stopping all CloudKit operations after deleting CloudKit account
Updating cloud context state after accounts changed
Cloud context received application will enter foreground notification
Push connection established with iCloud
Failed to get push token: %{public}@
SYNC[APS]
SYNC[APS] START {topic: %{public}@}
os_transaction INIT {name: com.apple.remindd.cloudkit.sync.aps}
os_transaction RELEASE {name: com.apple.remindd.cloudkit.sync.aps}
SYNC[APS] FAIL - unexpected aps topic {topic: %{public}@}
SYNC[APS] FAIL - CKNotification failed to parse APS message {apsTopic: %{public}@}
cloudkit.aps
Babysitting APS's didReceiveIncomingMessage because it failed too many times
SYNC[APS] PUSH FAIL {error: %{public}@}
SYNC[APS] END {duration: %.4f}
Force set migration state {didChooseToMigrate: %d, didFinishMigration: %d}
Fetched user record for force-setting migration state {record: %@}
Fetched account record for force-setting migration state {record: %@}
Timeout fetching user / account record for force-setting migration state
Completed modify records operation for force-setting migration state
Failed to modify records operation for force-setting migration state {error: %{public}@}
Suspend upload
Resume upload
Adjust APS debouncer interval according to migration state {didChooseToMigrate: %d, didFinishMigration: %d}
Setting APS debouncer interval to %f
Configuration has no version
Configuration version (%ld) is not the expected version (%ld)
Checking cached configuration
Using cached remote configuration
Cache directory is unavailable for reading configuration cache
Using default configuration
Unable to download remote configuration.
Received remote configuration
Using remote configuration
Not able to write remote configuration to cache. {writeError: %{public}@}
Cache directory is unavailable for writing configuration cache
Error serializing plist data to dictionary: %@
Connected to remote configuration plist server but got back non 200 response: %{public}@
Error downloading remote configuration plist: %{public}@
Loading cloud configuration {configurationURL: %{public}@}
Failed to load cloud configuration dictionary {configurationURL: %{public}@}
Trying to create a cloud configuration with no minimum client version
Trying to create a cloud configuration with no throttling levels
Trying to create a cloud configuration with no max inline asset size
Trying to create a cloud configuration with no max attachments per note
Trying to create a cloud configuration with no max sub attachments per attachment
Trying to create a cloud configuration with no max attachment size
Validation Failure: Tried to move reminders accross lists in an unsupported account {fromList.identifier: %@, toList.identifier: %@, account.identifier: %@}
Validation Failure: Tried to move reminders accross shared-to-me lists in an unsupported account {fromList.identifier: %@, toList.identifier: %@, account.identifier: %@}
Validation Failure: Tried to create nested subtasks {list.identifier: %@, parentReminder.identifier: %@, reminder.identifier: %@}
Validation Failure: Tried to set a subtask on a different list to its parent reminder {parentList.identifier: %@, list.identifier: %@, parentReminder.identifier: %@, reminder.identifier: %@}
Validation Failure: Subtasks are left on a different list to its parent reminder {subtask.list.identifier: %@, list.identifier: %@, subtask.identifier: %@, reminder.identifier: %@}
Error creating unarchiver: %@
Error creating unarchiver: %{public}@
Trying to get an object from a nil object ID: %{public}@
Unable to find object from objectID: %{public}@
Error finding object from objectID: %{public}@, %{public}@
rem_log_fault_if(!entityName) -- Unexpected error: found entity with no name
Error fetching objects from (%ld) object IDs: %{public}@
Error obtaining permanent object ID for objects with error: %{public}@
Error obtaining permanent object ID for %{public}@: %{public}@
Error fetching %{public}@ (predicate=%@ sortDescriptors=%{public}@): %{public}@
Nil objects array fetching %{public}@ (predicate=%@ sortDescriptors=%{public}@ context=%{public}@)
SET %@ <- %@
Validation Failure: We have a REMCDObject that is not a REMCDAccount and is missing an account relationship {entity: %{public}@}
Validation Failure: Tried to move lists accross accounts {fromAccount.identifier: %@, toAccount.identifier: %@}
Mark shared-to-me root %@ for deletion and recursively deleted all child objects from local database
Begin recursiveMarkForDeletion:%@ from %@
Not recursiveMarkForDeletion because isDelete == self.markedForDeletion
Unexpected nil remObjectID when recursively traversing object tree. {self.objectID = %@, visitedMap = %@}
Unexpected cyclic graph when recursively traversing object tree. {self.remObjectID = %@, visitedMap = %@}
Failed to fetch objects in {relationship: %{public}@} of object {type: %{public}@}
Skipped traverseObjectTreeUsingVisitedMap for %@
Continue recursiveMarkForDeletion:%@ from %@
Stopping recurssion because isDeleted == self.markedForDeletion
Don't know how to handle property %{public}@ of entity %{public}@ to avoid constraint violation before marking for deletion
Called cdEntityName on REMCDObject. This is an abstract core data model super class.
Missing requirements to get alarmDateTrigger {accountID: %{public}@, alarmID: %{public}@}
rem_log_fault_if(!context) -- Expected non-nil value for managedObjectContext
Nil cloud state for %@. Sorry. Fixing now.
Failed to find cloud account for %@ %@
_setCKIdentifierIfNecessary: .identifier.UUIDString is nil %{public}@ %{public}@ %{public}@
_setCKIdentifierIfNecessary: .ckIdentifier is still nil %{public}@ %{public}@ %{public}@
Missing ckIdentifier. Failed to get failedToSyncCount
Missing ckIdentifier. Failed to set failedToSyncCount
Missing ckIdentifier. Failed to get numberOfPushAttemptstoWaitCount
Missing ckIdentifier. Failed to set numberOfPushAttemptstoWaitCount
%@ failed to be pushed. Incrementing failedToSyncCount, failure (%d/%d) before being temporarily ignored. (%d/%d) before deleting change tokens and full re-sync. %@
Decrementing failure counts for %@, %d push attempts before it is retried. %@
Failed to sync %@ %d times. Now resetting failure counts, deleting change tokens, and trying full re-sync. %@
%@ failed to be pushed %d times. Max number of retries is %d. It will now be ignored for %d push attempts. %@
CKIdentifier is undefined. This should not happen since [_setCKIdentifierIfNecessary] should set it already { class: %{public}@, objectID: %{public}@, identifier: %{public}@}
Trying to get recordID with no context %@ %@
Trying to get recordID with no record name %@ %@
Trying to get recordID with no zone name %@ %@
rem_log_fault_if(!entityName) -- Unexpected error: entity name not defined
Entity from context %p does not equal entity from class %p
Unable to decode UUID string %@, will generate a random one. Expect something not working.
Creating REMCDObject for CloudKit: %{public}@ .identifier=%{public}@ .ckIdentifier=%{public}@ .daCalendarItemUniqueIdentifier=%{public}@
Trying to create record without record ID for %@
Not creating cross-zone parent record relationship from %@ %@ to parent %@ %@
Error encoding resolution token map of CDObject {CDObject: %@}
Setting %@ marked for deletion when merging data from record
Shared object was deleted %@
Marking %@ for deletion after being deleted from cloud by another device
Invalid cached server record %@ %@: %@
Server record changed (needs refetch) %@ %@: %@
Server record changed %@ %@: %@
Server record changed with no server record in the error %@ %@: %@
Reference violation for server record in: %@ %{public}@: %{public}@
Error pushing %@ %@: %@
Tried to cache a record that is older than or equal to our current version: %@
Object fetched is older or equal to then our current record: %@
Object fetched does not have a share removing our severShare: %@
Not merging fetched record with same change tag %@
Deleting shared %@ because it no longer exists in cloud
Error writing temporary asset file: %@
Error creating temporary assets directory: %@
Error deleting file for temporary asset: %@
Error while enumerating all temporary asset files: %@
Error deleting temporary asset file: %@
Trying to purge CDObject with a read only persistent store {CDObject: %@}
Marking %@ for deletion
Unmarking %@ for deletion
Setting markedForDeletion %d on %@
Updating minimum supported version if necessary for %@ current minimumSupportedAppVersion=%lld
Share %@ for %@ has read-only participant
Updating minimum supported version for %@ from %lld to %lld
updateParentReferenceIfNecessary: self.parentCloudObject.recordID is nil %{public}@ %{public}@ %{public}@ %{public}@ %{public}@
Server record for %@ has no parent, but expects one. Re-saving record.
Server record for %@ parent %@ is different from expected parent %@. Re-saving record.
Updating sharees for %@ is not supported
No server share for %@, setting to %@
Existing server share for %@ %@ has the same change tag as %@
Existing server share for %@ %@ is newer than %@
Replacing old server share for %@ %@ with %@
Undeleting shared %@
Update shared object's owner names {class: %@, ownerName: %@}
Missing managed object context for updating owner name for %@ %@
Missing account for updating owner name for %@ %@
Error decoding resolution token map of CDObject {CDObject: %@}
Called cdEntityName on REMCDAudioAttachment. We don't have a way to create these from the API. How did we get here?
Non-REMCDObject in NS changes, do we want to exclude this entity from change tracking? (%@)
Not an REM change tracking whitelisted entity, excluding this entity from change tracking? (%@)
JSONPropertiesMigration BEGIN {store: %@}
Failed to fetch objects. Migration failed {error: %@}
Saving batch {updatedObjectsCount: %ld, totalMigratedCount: %ld}
Failed to save batch. Migration error {error: %@}
Failed to save last object. Migration error {error: %@}
JSONPropertiesMigration END {totalMigratedCount: %ld, totalListCount: %ld, migratedAccount: %d. migratedListsCount: %ld, store: %@}
Unable to create REMCRMergeableOrderedSet. Skipipng listIDsMergeableOrdering migration {error: %@, cdAccount: %@}
Failed to create NSUUID from item in legacyOrderedSet. Skipping {item: %@}
Unable to migrate legacyOrderedSet. Skipping listIDsMergeableOrdering migration {error: %@, cdAccount: %@}
cdList missing account. Skipping reminderListOrdering migration {cdList: %@}
Unable to create REMCRMergeableOrderedSet. Skipipng reminderListOrdering migration {error: %@, cdList: %@}
Unable to migrate legacyOrderedSet. Skipping reminderListOrdering migration {error: %@, cdList: %@}
CT Implementation: getTrackingStateWithClientID:%@
CT Implementation: saveTrackingState {state: %@, clientID: %@}
Couldn't archive REMChangeToken to save tracking state for {clientID: %@, encodeError: %@}
Couldn't get a persistence store to save tracking state for {clientID: %@}
Failed to save tracking state to CoreData with error %@
Could not encode CD object into plist data {objectID: %@, error: %@, dictionary: %@}
rem_log_fault_if(!error) -- Attempting to get errorChangeSet with nil error.
rem_log_fault_if(!historyResult) -- Failed to get HistoryResult from request {request: %@}
Failed to get account objectID from storeID {storeID: %@}
Failed to get entity name from persistent history change {change: %@}
Non-REMCDObjects (non-REMNullableObjectIDProviding objects) or objects with nil remObjectID in changes {managedObject: %@}
We may have found a race condition where object got deleted in context before we could fetch a deletion change history! {mID: %@}
nil REMObjectID in persistent history change {mID: %@, change: %@}
rem_log_fault_if(!res) -- nil persistent history result {request: %@}
Failed fetch request to get REMCDTrackingState for {clientID: %@, error: %@}
rem_log_fault_if(cdTrackingStates.count > 1) -- Unexpectedly found more than 1 entry of REMCDTrackingState for {clientID: %@}
Unexpected nil lastConsumedChangeTokenData from the fetched REMCDTrackingState entry for {clientName: %@, accountIdentifier: %@}
Couldn't unarchive REMChangeToken from an REMCDTrackingState for {clientName: %@, accountIdentifier: %@, decodeError: %@}
Failed fetch request to get REMCDAuxiliaryChangeInfo {identifier: %@, error: %@}
Could not find REMCDAuxiliaryChangeInfo with {identifier: %@}
rem_log_fault_if(sharedSettings != nil) -- Sync settings have already been initialized. {sharedSettings: %@}
Trying to insert object in mutableArray at negative index %ld
Trying to insert object in mutableArray at index (%ld) greater than count (%ld)
rem_log_fault_if(!entityName) -- Nil NSManagedObject.entity.name {mangedObject: %@}
Error fetching server change tokens: %@
Using existing share for %@
No existing share for %@
Trying to get root record for %@, but we don't have a server record. This likely won't work.
Created share %@ with existing share reference for %@
Created share %@ for %@
Trying to populate share %@ with no record ID for %@
Trying to populate share %@ with no record type for %@
Checking for an existing share for %@
Checking for share on %@ serverShare=%@ serverRecord.share=%@
Have a share that wasn't persisted for %@
Not checking parent object %@ for %@ because it's not in the same zone (object in %@ and parent in %@)
Preparing share %@ for %@
Finished waiting for operations before preparing share for %@
rem_log_fault_if(!object) -- invalid nil value for '%s'
No root record for %@
Retrying to save share for %@
Using saved server share when retrying %@
Saving Share: %@ with root record: %@ %@
Partial failure saving share for %@ %@
Error saving share for %@ when saving record ID %@ %@: %@
Saving server record %@ for %@ %@
Saving server share %@ for %@ %@
Server record %@ is not a share %@
No server record from error saving share for %@ %@ %@
Error saving share %@ for %@ %@: %@
Saved share %@ %@
No CKShare or error returned for %@ %@
Need to fetch share %@ for %@
Fetching share %@ with %@
Fetched share %@ %@
Error fetching share %@ %@: %@
Setting server share on %@ %@ %@
Couldn't find cloud object for share %@
No record type in share %@
No root record reference for share %@
User stopped sharing %@ %@
User removed themselves from shared %@ %@
Accepting share for metadata %@
Found existing object %@ for share metadata %@
No existing object for share metadata %@
rem_log_fault_if(!shareURL) -- invalid nil value for '%s'
Accepting shared object at URL: %@
Error accepting share at URL %@ %@: %@
Share accepted for URL %@ %@
Fetching record from share %@
Error fetching record from share %@: %@
Fetched record from share %@
Using share from per-share completion block %@: %@
Falling back to share from metadata %@: %@
No root record when accepting share: %@
Accepting %@ with %@
%@ called on unsupported platform.
Called cdEntityName on REMCDAttachment. This is an abstract core data model super class.
Error occured when loading accounts from disk {error: %{public}@}
Error occured trying to delete all spotlight indices. Will not enable CoreSpotlight delegates {error: %{public}@}
Deallocating RDMasterStore {pointer: %p, containerURL: %{private}@}
Loaded accounts from disk {accountIdentifiers: %{public}@}
Failed to load accountStoreFromDisk. {error: %{public}@}
Failed to discover account identifiers on disk. {error: %{public}@}
Found ppt sentinel. Marking as PPTStore {pptSentinelURL: %{private}@}
Store was marked as PPT but sentinel is gone. Marking a non-PPTStore {pptSentinelURL: %{private}@}
Before getting files from URL {url: %{private}@}
Done getting files from URL {url: %{private}@, count: %ld}
Failed to get file size {file: %{public}@, error: %{public}@}
Failed to fetch store metadata for sqlite file {file: %{public}@, error: %{public}@}
The store sqlite file is neither initialized or marked as deleted. The file is probably corrupted. Will delete the file if <= 4096 bytes (i.e. empty) {file: %{public}@}
Unsupported storeURL. DELETING {store: %{public}@, identifier: %{public}@}
Found sqlite file in RDMasterStore.databaseDirectoryURL doesn't have prefix RDPathComponentStoreFilePrefix {file: %{public}@}
Failed to get filename from sqlite file in RDMasterStore.databaseDirectoryURL {file: %{public}@}
Removed store file marked deleted {file: %{public}@}
Failed to remove store file marked deleted {file: %{public}@, error: %{public}@}
Finished discovering account identifiers on disk {file.count: %ld, storeURLs.count: %ld, deletedStores.count: %ld}
Failed to enumerate files in RDMasterStore.databaseDirectoryURL - Failed to load accounts from disk {error: %{public}@, databaseDirectoryURL: %{private}@}
[RDMasterStore validateAccountStores] Local store is not loaded to the PSC. Probably it's corrupted and failed to load. Going to delete the file and reload again. {error: %{public}@}
[RDMasterStore validateAccountStores] Failed to delete local store file {error: %{public}@}
[RDMasterStore validateAccountStores] Failed to load local store {error: %{public}@}
[RDMasterStore validateAccountStores] Re-created and loaded local store {store: %{public}@}
[RDMasterStore validateAccountStores] Still unable to load local store after deleting and reloading.
[RDMasterStore validateAccountStores] Found corrupted store with unkwown account type {accountID: %{public}@, store: %@}
[RDMasterStore validateAccountStores] Unexpectedly having 2 stores for the same account {accountID: %{public}@, store1: %@, store2: %@}
[RDMasterStore validateAccountStores] Found store with no REMCDAccount. Going to disconnect and destroy {store: %@}
[RDMasterStore validateAccountStores] Found corrupted store with %ld REMCDAccount objects {accountIDs: %{public}@, store: %@}
[RDMasterStore validateAccountStores] Error fetching account ID from store {error: %{public}@, store: %@}
MIGRATE STORES BEGIN {stores.count: %ld}
MIGRATE STORE BEGIN {store: %@}
MIGRATE STORE END {store: %@}
Did update stores metadata
MIGRATE STORE ERROR. Failed to flush stores metadata {error: %{public}@, updatedStores: %@}
MIGRATE STORES END {updatedStores: %@}
Error fetching stores from account types {error: %{public}@, types: %{public}@}
Failed to create directory %@: %{public}@
File %@ already exists and is not a directory!
Identifier already loaded -- skipping {identifier: %{public}@}
No account is missing. No need to load missing accounts
Add persistentStores BEGIN {identifiers.count: %ld, accountStoreMap.count: %ld}
Add persistentStores END {accountStoreMap.count: %ld, newStores.count: %ld, lastError: %{public}@}
[RDMasterStore createOrLoad] Will add store {storeURL: %@}
[RDMasterStore createOrLoad] didAdd store {fileName: %{public}@, addedStoreDescription: %@}
[RDMasterStore createOrLoad] Failed to add store {error: %@, fileName: %{public}@}
Tried to remove store for unknown account -- skipping {accountIdentifier: %{public}@}
Going to remove store for account {accountIdentifier: %{public}@, store: %@}
DeleteAccountStore: Marking account store as deleted {store: %@}
DeleteAccountStore: Failed to mark account store as deleted {store: %@, error: %{public}@}
DeleteAccountStore: Deleting spotlight indices {store: %@}
DeleteAccountStore: Going to delete objects for entity {entity: %@, store: %@}
DeleteAccountStore: Failed to delete objects for entity {entity: %@, store: %@, error: %{public}@}
RDMasterStore nukeData. *** NOTE *** This will only mark database files as deleted without actually deleting the files, as deleting database files while remindd is running is likely to cause a CoreData crash. The files will be deleted the next time remindd launches, or you can run `remindtool nuke`, or manually kill remindd and delete the whole container directory. {containerURL: %@, accountIDToDatabaseFileNameMap: %@}
RDMasterStore nukeData completed {allSuccess: %ld, error: %{public}@}
Failed to set query generation token to current {error: %{public}@}
Deleting object from database because it's marked for deletion and its deletion has synced: %@
Error purging deleted objects: %{public}@
Error fetching REMCDExtendedAccount: %{public}@
didFetchUserRecord: %@
Received an error that a zone (%@) wasn't found. Re-uploading everything for that zone.
Shared zone was deleted: %@
Deleting shared %@
Not deleting shared %@ in wrong zone %@
userDidDeleteRecordZoneWithID: %@
Error saving after notes zone deleted by user: %@
%@ (%@) hasn't been fully pushed to the cloud. Not deleting.
didFailPushingExceededStorageQuotaForContext: %@
Released the cached CloudKit account
Inserted object {managedObjectID: %@}
Failed to list contents of store directory {error: %{public}@}
Existing contents of stores diretory:
Store %d: %@
SAVE COREDATA ERROR {author: %{public}@, insert.count: %ld, update.count: %ld, delete.count: %ld, error: %{public}@}
SAVE COREDATA {author: %{public}@, insert.count: %ld, update.count: %ld, delete.count: %ld}
Performed save with nil author
COREDATA REQUEST {author: %{public}@, request: %@}
COREDATA REQUEST ERROR {author: %{public}@, request: %{public}@, error: %{public}@}
FETCH COREDATA REQUEST {author: %{public}@, request: %@}
FETCH COREDATA ERROR {author: %{public}@, entityName: %{public}@, error: %{public}@}
FETCH COREDATA {author: %{public}@, entityName: %{public}@, result.count: %ld, affectedStores.count: %ld}
Performed fetch with nil author
FETCH COUNT COREDATA REQUEST {author: %{public}@, request: %@}
FETCH COUNT COREDATA ERROR {author: %{public}@, entityName: %{public}@, error: %{public}@}
FETCH COUNT COREDATA {author: %{public}@, entityName: %{public}@, count: %ld, affectedStores.count: %ld}
PopulateDefaultValuesMigration BEGIN {store: %@}
Non-optional attribute has no default value. Skipping {entityName: %@, attributeName: %@}
Attribute belongs to super entity. Skipping {entityName: %@, attributeName: %@}
PopulateDefaultValues BEGIN {entity: %@, attributeName: %@}
PopulateDefaultValues END {entity: %@, attributeName: %@, updated.count: %@}
PopulateDefaultValues ERROR {updateError: %@, entity: %@, attributeName: %@}
PopulateDefaultValuesMigration END {store: %@, populateAttributeNames: %@}
Error saving context (%{public}@): %{public}@
Error saving context: %{public}@
Saved context: %{public}@
CKParentReminderIdentifierMigration BEGIN {store: %@}
CKParentReminderIdentifierMigration ERROR {updateError: %{public}@}
CKParentReminderIdentifierMigration END {store: %@, updated.count: %ld}
Failed to fetch CD accounts: %@
Found extended account without CK user record name: %@
Trying to get the primary CK account but can't find any
DisplayDateMigration BEGIN {store: %@}
DisplayDateMigration END {store: %@}
Y@ffffff
main
barebonesDaemon
os_unfair_lock_options_t
os_activity_scope_state_s
REMStoreMode
_opaque_pthread_mutex_t
os_unfair_lock_s
UNNotificationCategoryOptionsPrivate
UNNotificationCategoryOptions
REMReminderNextThirdsHour
REMColorRGBSpace
Scope
NCKDatabaseScope
UNNotificationDestinations
REMAccountType
REMAlarmVehicleTriggerEvent
CloudKit
@StartMigrationRequest
StartMigrationResponse
UnmigrateRequest
UnmigrateResponse
remindd
OneOf_Source
Credential
OneOf_Result
Details
Error
MigrateRequest
Option
User
MigrateResponse
NextStep
EmptyRequest
BasicResponse
PingRequest
PingResponse
TantorMigrationAPIAsyncClient
TantorMigrationAPIAsync
_StorageClass
RDApplicationShortcutAssembly
RDDebouncer
RDDebouncerWithNumber
REMListPickerDataView
Invocation
Account
Model
CodingKeys
Result
Parameters
h"lx
remindd
RDXPCDebugPerformer
REMSwiftInvocableProtocol
Parameters Result
CodingKeys
VoidParameters
remindd
RDClientConnectionListener
Result
RDEventStream
RDTimeEventStream
SGSuggestionsServiceRemindersProtocol
SGSuggestionsService
EmptyReminderService
SGRecordId
SGReminderMetadata
SGReminder
RDSiriSuggestedReminderProducerDataSource
RDSiriSuggestedReminderProducer
>@DataAccessSyncPerformer
RDXPCSyncInterfacePerformerFactory
RDXPCSyncInterfacePerformer
CDObjectID
DiffProtocol
DiffElementType
Diff
Element
RemainingIndex
Point
Trace
Aremindd
Fields
Identifiable
REMAlarmTriggerCDIngestor
REMAlarmTimeIntervalTriggerCDIngestor
REMAlarmDateTriggerCDIngestor_ObjC
REMAlarmDateTriggerCDIngestor
REMAlarmLocationTriggerCDIngestor
REMAlarmVehicleTriggerCDIngestor
dateComponentsData
ValueKey
RelationshipKey
RDClientIdentity
DeferredPromise
identifier
account
parentAccount
REMListsDataViewInvocation_fetchListsInAccount
REMListsDataViewInvocation_fetchListsInGroup
REMListsDataViewInvocation_fetchByObjectIDs
REMListsDataViewInvocation_fetchDefaultList
REMListsDataViewInvocation_dataAccessFetchListsInAccount
REMListsDataViewInvocation_dataAccessFetchByObjectID
REMListsDataViewInvocation_dataAccessFetchByObjectIDIncludingMarkedForDelete
REMListsDataViewInvocation_dataAccessFetchByExternalIdentifier
REMListsDataViewInvocation_userActivityFetchByExternalIdentifier
RDJSONCodable
RDJSONCoder
REMAlarmCDIngestor
AlarmTriggerRepresentable
trigger
RelationshipKey
ValueKey
REMCDAlarmTimeIntervalTrigger
REMCDAlarmDateTrigger
REMCDAlarmLocationTrigger
REMCDAlarmVehicleTrigger
REMSiriSearchDataView
RemindersByCriteriaInvocation
ListsByCriteriaInvocation
Base
CodingKeys
Parameters
base
arg0
arg1
arg2
REMListStableSortingDataView
Invocation
AsyncBlockOperation
RDDARequestsQueueDelegate
RDDARequestsQueue
phones
emails
REMContactRepresentation
RDDispatchQueue_ObjC
RDAlarmCoreSuggestionsConsumer
RDApplicationShortcutUpdater
RDSiriSuggestedReminderNotificationHandler
RDTodayNotificationAssembly
xpc_event
RDXPCEventInterface
RDXPCEventStream
SystemXPCEventInterface
Token
AlarmHandler
Alarm
identifier
RDNotifydEventStream
NotificationName
RDContactInteractionAlarmProducerDataSource
RDContactInteractionAlarmProducerSessionManager
RDContactInteractionAlarmProducer
RDFirstUnlockManager
RDAlarmNotificationConsumer
BannerBehavior
REMNSPersistentHistoryTracking
REMReminderStorageCDIngestor
CDAuxiliaryReminderChangeInfo
account
RelationshipKey
ValueKey
REMAccountsListDataView
Invocation
Account
Diff
Model
CodingKeys
List
Group
ContentType
AccountChild
Result
Analytics
REMAccountStorageCDIngestor
RelationshipOrderingValueKey
OrderableRelationshipKey
RelationshipKey
ValueKey
RDBeforeFirstUnlockNotificationEngine
notifyd
RDLaunchAnalytics
REMAccountsDataViewInvocation_fetchAll
REMAccountsDataViewInvocation_fetchByObjectID
REMAccountsDataViewInvocation_fetchByExternalIdentifier
ExtendedDiff
Element
state
isTerminated
RDMigrationClient
State
accountIdentifier
RDMasterStoreCloudKitNetworkActivityObserver
AsyncOperationError
AsyncOperation
State
RDDataStoreApplicationShortcutListProvider
account.identifier
name
markedForDeletion
remindd
identifier
parentReminder
reminders
Fields
account.identifier
title
dueDate
allDay
timeZone
markedForDeletion
remindd
Fields
StringType
TypedPredicateStringMatchingOptions
TypedPredicate
RDXPCActivityTimeEventStream
Name
Patch
REMRecurrenceRuleCDIngestor
account
reminder
DayOfWeek
RelationshipKey
ValueKey
CodingKeys
remindd
BaseFields
URLFields
FileFields
ImageFields
title
markedForDeletion
RDXPCChangeTrackingPerformer
CDIngestionCoordinator
CDAuxiliaryChangeInfo
CoreDataType
RDTimeAlarmProducerDataSource
RDFireDateSource
RDTimeAlarmProducer
REMAlarmTimeIntervalTrigger
REMAlarmDateTrigger
RDXPCDaemonProtocol
RDXPCDaemon
RDCoreSuggestionsHandling
RDCoreSuggestionsController
list
displayDateDate
markedForDeletion
parentReminder
completed
completionDate
account.identifier
account.inactive
list.daIsEventOnlyContainer
list.daIsNotificationsCollection
children
flagged
recurrenceRules
creationDate
lastModifiedDate
title
list.identifier
identifier
allDay
contactHandles
dueDate
daCalendarItemUniqueIdentifier
externalIdentifier
parentReminder.identifier
remObjectID
self
priority
RelationshipKey
Predicates
REMInvocableProtocol
XPCResult ClientResult
REMStoreInvocationValue
StorageType
REMStoreInvocationKeySpace
REMObjectID
REMAccountStorage
REMListStorage
REMReminder
REMStoreInvocationValueStorage
REMFetchResultToken
NSArray
NSDictionary
NSString
NSNumber
NSSet
NSNull
NSData
NSDate
markedForDeletion
type
identifier
inactive
externalIdentifier
title
markedForDeletion
alarm.reminder.markedForDeletion
alarm.reminder.list.daIsEventOnlyContainer
alarm.reminder.list.daIsNotificationsCollection
account.inactive
alarm.reminder.completed
alarm.acknowledgedDate
account.identifier
alarmProducer
RDAlarmProducerDataSource
identifier
REMEventKitBridgingDataViewInvocation_fetchLists
REMEventKitBridgingDataViewInvocation_fetchReminders
REMEventKitBridgingDataViewInvocation_fetchIncompleteRemindersWithDueDate
REMEventKitBridgingDataViewInvocation_fetchCompletedRemindersWithCompletionDate
REM_os_activity
Options
Scope
remindd
Fields
WhenError
CDIngestableKey
CDIngestor
CDIngestableStorageType CDIngestableCoreDataType CDIngestableValueKey CDIngestableRelationshipKey CDIngestableOrderableRelationshipKey CDIngestableRelationshipOrderingValueKey
NoRelationshipOrderingValueKey
CDIngestorPredefinedIngestableKey
NoOrderableRelationshipKey
REMCalDAVNotificationCDIngestor
account
owner
RelationshipKey
ValueKey
RDMasterStoreNotificationCenter
Observer
Token
RDBogusCalendarCleaner
RDUserInteractionSessionManagerUserDefaults
RDUserInteractionSessionManager
REMDaemonUserDefaults
RDAccountInitializer
REMShareeCDIngestor
account
list
RelationshipKey
ValueKey
Reader
Writer
RDChannel
REMRemindersDataViewInvocation_fetchByListID
REMRemindersDataViewInvocation_fetchByParentReminderID
REMRemindersDataViewInvocation_fetchByParentReminderIDs
REMRemindersDataViewInvocation_fetchByObjectID
REMRemindersDataViewInvocation_fetchByExternalIdentifier
REMRemindersDataViewInvocation_fetchByDACalendarItemUniqueIdentifier
REMRemindersDataViewInvocation_fetchRemindersCountByListID
REMSearchableItem
REMSearchableItemType
REMStringMatchingStyle
REMSearchCriterion
REMReminder
REMList
PromiseError
PromiseDisposableToken
Promise
FirstBlockRunner
REMAsyncOperationManager
InternalOperationState
OperationFinishState
RDMergePolicy
name
RDApplicationShortcutEngineInterface
RDApplicationShortcutEngine
remindd
REMAttachmentRepresentable
REMAttachmentCDIngestor
REMFileAttachmentCDIngestor
REMImageAttachmentCDIngestor
REMURLAttachmentCDIngestor
account
reminder
RelationshipKey
ValueKey
REMCDURLAttachment
REMCDFileAttachment
REMWidgetDataView
FetchModelInvocation
Result
Model
remindd
RDClientConnection
RDClientConnectionDelegate
RDThrottler
Seal
State
Resolution
RDApplicationShortcutListProvider
RDApplicationShortcutListProviderDelegate
RDVehicleAlarmProducerDataSource
RDVehicleAlarmProducer
REMCDObjectFields
REMCDObjectResolutionTokenFields
REMCRSerializable
REMCRMergeableOrderedSet
REMCRMergeableStringDocument
RDXPCIndexingPerformer
RDApplicationShortcutDataView
FetchInvocation
lastUserAccessDate
name
CodingKeys
Result
Parameters
SortedPatchElement
RDAccountDataMover
RDReminderDataCopier
RDReminderDataICSCopier
RDReminderDataCloudKitCopier
RDReminderDataExchangeCopier
Statistics
list
parentAccount
name
REMListFetchExecutor
RDDynamicSignificantTimeNotificationEngineEventSetter
RDDynamicSignificantTimeNotificationEngine
XPCEventSetter
CDFetching
locationManager
remindd
RDLocationManagerDelegate
RDLocationManagerType
RDLocationManager
green
blue
alpha
colorRGBSpace
REMColor
RDXPCBarebonesDaemon
remindd
RDUserNotificationPresenting
RDUserNotificationCenterDelegate
RDUserNotificationCenter
completed
children
identifier
alarm.reminder.completed
alarm.reminder.completionDate
alarm.reminder.markedForDeletion
name
ListKey
Utilities
RDReplicaManagerUtilities
identifier
RDReplicaManagerPayload
remObjectID
self
parentAccount
markedForDeletion
sharees
sharingStatus
isGroup
parentList
account.identifier
account.inactive
daIsEventOnlyContainer
daIsNotificationsCollection
name
identifier
parentAccount.identifier
externalIdentifier
parentList.identifier
RDDACalDAVShareRequestHandler
RDDaemonController
RDDARequest
remindd
RDXPCStorePerformer
RDUserNotificationCategory
REMNotificationIdentifier
RDUserNotificationType
RDSyncPollerUserDefaults
RDSyncPollerConfiguration
RDSyncPoller
REMDaemonUserDefaults
ICCloudConfiguration
RDObjectDescription
ExtendedPatch
BoxedDiffAndPatchElement
RDLocationAlarmProducerDataSource
RDCLRegionSource
RDLocationAlarmProducer
REMAlarmLocationTrigger
SecurityScopedURLHolder
REMObjectID_Codable
REMAccount_Codable
REMList_Codable
REMReminder_Codable
REMColor_Codable
REMStructuredLocation_Codable
REMStoreObjectsContainer
CodingKeys
REMObjectCodingKey
identifier
RDDisplayDateUpdater
displayDateTimeZone
displayDateUpdatedForSecondsFromGMT
REMContactsProviderType
REMContactsProvider
OperationParams
ContactFetchError
KeysToFetch
dueDate
RDDaemonProtocol
RDDaemon
RDBarebonesDaemon
REMListStorageCDIngestor
account
creationDate
icsDisplayOrder
identifier
parentReminder
RelationshipOrderingValueKey
OrderableRelationshipKey
RelationshipKey
ValueKey
Lock
UnfairLock
Options
MutexLock
accountUtils
RDAccountUtils
LocalDataToICloudMover
AccountInfo
ACAccountProperty
LocalAccountIsEmptyError
TargetAccountIsNonEmptyError
NoICloudREMAccountError
dueDate
list
priority
creationDate
completed
parentReminder
identifier
markedForDeletion
REMReminderFetchExecutor
REMSiriSearchLimitedDataViewInvocation_fetchReminders
remindd
LocationFields
RDMasterStoreAnalytics
REMRemindersListDataView
ListInvocation
FlaggedInvocation
AllInvocation
TodayInvocation
ScheduledInvocation
SearchInvocation
SiriFoundInAppsInvocation
TodayNotificationInvocation
Base
CodingKeys
DatesModel
TodayModel
ListsModel
Diff
FlatModel
SortOrder
Group
ReminderLite
ShowCompleted
Result
Parameters
RemindersPrefetch
CountByCompleted
SortDirection
RDInvocable
RDSwiftInvocableProtocol
AnyRDSwiftInvocableProtocol
displayDateDate
type
remindd
lists
Fields
RDClientAccessLevelTruthSource
RDClientAccessLevel
NSXPCConnection
counter
modificationTime
replicaID
REMResolutionToken
REMResolutionTokenMap
RDTodayNotificationEngine
alarmEngine
RDAlarmProducing
RDAlarmConsuming
RDAlarmProducerDelegate
RDAlarmEngine
RDDataSourceAlarm
RDProducerAlarm
RDProducerAlarmType
RDProducerAlarmOrigin
RDDatabaseSaver
LinkedList
DoublyLinkedList
dataaccess
remindd
RDDataAccess
RDDataAccessREMStoreProvider
RDDataAccessUserNotificationPresentingProvider
REMComplicationDataView
FetchModelInvocation
Result
Model
@(#)PROGRAM:remindd  PROJECT:ReminderKit-
InvernessClientLocal
QualityOfService
NNSQualityOfService
HTTPClient
HTTPError
Codeagent_ErrorCode
Codeagent_CodeServiceRequest
ServiceType
ContainerType
DatabaseType
ServiceClientConfig
ClientConfig
AccountConfig
RequestContext
Codeagent_CodeServiceResponse
Codeagent_Error
Codeagent_InitializeContainerRequest
Codeagent_InitializeContainerResponse
Codeagent_StopContainerRequest
Codeagent_StopContainerResponse
Codeagent_StopAllContainerRequest
Codeagent_StopAllContainerResponse
Codeagent_CheckContainerHealthRequest
Codeagent_CheckContainerHealthResponse
_StorageClass
InvernessClientError
Ckdbcore_CKDBRequestContext
Ckdbcore_ResolvedContainer
Ckdbcore_ResolvedUser
Ckdbcore_RequestOperation
Header
Database
_StorageClass
Ckcode_SerializationFormat
InvernessClient
Invocable
organization
CloudKitWS
CloudKitWSError
Environment
Error
Credentials
TextFormatEncoder
AnyExtensionField
ExtensionField
ValueType
OptionalExtensionField
RepeatedExtensionField
PackedExtensionField
OptionalEnumExtensionField
RepeatedEnumExtensionField
PackedEnumExtensionField
OptionalMessageExtensionField
RepeatedMessageExtensionField
OptionalGroupExtensionField
RepeatedGroupExtensionField
JSONEncodingOptions
SelectiveVisitor
BinaryDecodingError
JSONScanner
BinaryDecodingOptions
Google_Protobuf_Duration
SwiftProtobuf
_ProtoNameProviding
JSONEncodingError
UnknownStorage
JSONDecodingError
JSONDecoder
Google_Protobuf_Syntax
Google_Protobuf_Type
Google_Protobuf_Field
Kind
Cardinality
Google_Protobuf_Enum
Google_Protobuf_EnumValue
Google_Protobuf_Option
_StorageClass
DoubleFormatter
Google_Protobuf_Empty
Message
_MessageImplementationBase
JSONMapEncodingVisitor
BinaryEncodingVisitor
BinaryEncodingMessageSetVisitor
AnyUnpackError
TextFormatDecoder
WireFormat
ExtensionFieldValueSet
Decoder
AnyMessageExtension
MessageExtension
Google_Protobuf_DoubleValue
Google_Protobuf_FloatValue
Google_Protobuf_Int64Value
Google_Protobuf_UInt64Value
Google_Protobuf_Int32Value
Google_Protobuf_UInt32Value
Google_Protobuf_BoolValue
Google_Protobuf_StringValue
Google_Protobuf_BytesValue
BinaryDecoder
TextFormatDecodingError
HashVisitor
BinaryEncodingError
Internal
FieldType
BaseType
MapKeyType
MapValueType
ProtobufFloat
ProtobufDouble
ProtobufInt32
ProtobufInt64
ProtobufUInt32
ProtobufUInt64
ProtobufSInt32
ProtobufSInt64
ProtobufFixed32
ProtobufFixed64
ProtobufSFixed32
ProtobufSFixed64
ProtobufBool
ProtobufString
ProtobufBytes
Visitor
Google_Protobuf_Timestamp
_CustomJSONCodable
Google_Protobuf_SourceContext
Google_Protobuf_Api
Google_Protobuf_Method
Google_Protobuf_Mixin
_StorageClass
JSONEncoder
AnyMessageStorage
InternalState
JSONEncodingVisitor
Google_Protobuf_FieldMask
Enum
TextFormatScanner
ExtensibleMessage
TextFormatEncodingVisitor
BinaryEncodingSizeVisitor
BinaryEncodingMessageSetSizeVisitor
InternPool
_NameMap
NameDescription
Name
Names
NameString
Google_Protobuf_NullValue
Google_Protobuf_Struct
Google_Protobuf_Value
OneOf_Kind
Google_Protobuf_ListValue
_StorageClass
BinaryEncoder
Google_Protobuf_Any
So16os_unfair_lock_sV
s6UInt32V
So23_opaque_pthread_mutex_tV
s4Int8V_A55Bt
So12REMStoreModeV
So25os_activity_scope_state_sV
s6UInt64V_ABt
So24os_unfair_lock_options_ta
7remindd24RDUserNotificationCenterC
So17OS_os_transaction_pSg
7remindd12RDSyncPollerC
7remindd16RDXPCEventStreamC
7remindd17RDLocationManagerC
7remindd20RDNotifydEventStreamC
7remindd12RDSyncPollerCSgXw
So14REMAccountTypeV
So26UNNotificationDestinationsV
So15CKDatabaseScopeV
So16REMColorRGBSpaceV
So25REMReminderNextThirdsHourV
So29UNNotificationCategoryOptionsV
So36UNNotificationCategoryOptionsPrivateV
So23DACalendarShareResponseV
So18NSComparisonResultV
So27REMAlarmVehicleTriggerEventV
$sSY
$ss25ExpressibleByArrayLiteralP
$ss10SetAlgebraP
$ss9OptionSetP
SDy10Foundation3URLVs6UInt64VG
ypypSo18NSComparisonResultVIgnnd_
7remindd12PingResponseVSgs5Error_pSgIeggg_
7remindd13BasicResponseVSgs5Error_pSgIegng_
7remindd22StartMigrationResponseVSgs5Error_pSgIeggg_
7remindd15MigrateResponseVSgs5Error_pSgIeggg_
7remindd17UnmigrateResponseVSgs5Error_pSgIeggg_
Say7remindd14MigrateRequestV6OptionOG
Say7remindd16UnmigrateRequestV6OptionOG
13SwiftProtobuf14UnknownStorageV
s5Int32V
s6UInt64V
15InvernessClient9Invocable_p
$s7remindd23TantorMigrationAPIAsyncP
7remindd14MigrateRequestV6OptionO
$ss12CaseIterableP
7remindd16UnmigrateRequestV6OptionO
So8NSObjectC
So17OS_dispatch_queueC
yShyxGc
8Dispatch0A8WorkItemCSg
ShyxG
SayySb_ShyxGtcG
ySo8NSNumberCG
7remindd11RDDebouncerCySo19NSEntityDescriptionCGSgXw
7remindd11RDDebouncerCyxGSgXwz_So19NSEntityDescriptionC_SHRzlXX
SbShySo19NSEntityDescriptionCGIegyg_
10ObjectiveC8ObjCBoolVSo5NSSetCIeyByy_
7remindd11RDDebouncerCySo8NSNumberCGSgXw
7remindd11RDDebouncerCyxGSgXwz_So8NSNumberC_SHRzlXX
SbShySo8NSNumberCGIegyg_
So5NSSetCIeyBy_
So23REMStoreSwiftInvocationC
7remindd21REMListPickerDataViewC10InvocationC10ParametersV
7remindd21REMListPickerDataViewC10InvocationC6ResultV
7remindd21REMListPickerDataViewC5ModelV
Say7remindd21REMListPickerDataViewC5ModelV7AccountVG
7remindd21REMListPickerDataViewC5ModelV7AccountV
7remindd18REMAccount_CodableC
Say7remindd15REMList_CodableCG
7remindd21REMListPickerDataViewC10InvocationC
$s7remindd25REMSwiftInvocableProtocolP
So7UIImageCSg
So17OS_dispatch_groupC
10Foundation3URLVz_Xx
So7UIImageCSgz_Xx
7remindd24REMApplicationIconFormatO
12CoreGraphics7CGFloatV
So13RDMasterStoreC
7remindd28RDUserNotificationPresenting_p
7remindd21RDLocationManagerType_p
7remindd19RDXPCDaemonProtocol_pSgXw
So10NSMapTableCySo5NSURLCSo13RDMasterStoreCG
So7NSErrorCSgIeyBy_
s5Error_pSgIegg_
So7NSArrayCSgSo7NSErrorCSgIeyByy_
SayypGSgs5Error_pSgIeggg_
SaySSG
So18CNContactFormatterC
SaySSGz_Xx
IeyB_
7remindd19RDXPCDebugPerformerC
So16CLCircularRegionC
Ieg_
10Foundation4UUIDVz_Xx
So7NSArrayCIeyBy_
SaySSGIegg_
s5Error_pSgIegg_Sg
So21UNNotificationContentC
So24UNUserNotificationCenterCSgIegg_
10Parameters
6Result
7remindd14VoidParametersV
So13NSXPCListenerC
7remindd19RDXPCDaemonProtocol_p
Shy7remindd18RDClientConnectionCG
s5Error_p
$s7remindd13RDEventStreamP
$s7remindd17RDTimeEventStreamP
$s7remindd37SGSuggestionsServiceRemindersProtocolP
$s7remindd41RDSiriSuggestedReminderProducerDataSourceP
7remindd23RDAlarmProducerDelegate_pXo
$s7remindd23DataAccessSyncPerformerP
7remindd11RDThrottlerC
7remindd9RDChannelO6WriterCySaySSG_G
7remindd16RDClientIdentityO
7remindd18RDClientConnectionCSgXw
So8CKRecordCSgSo7NSErrorCSgIeyByy_
7remindd27RDXPCSyncInterfacePerformerC
So11REMObjectIDC
So8CKRecordCSgs5Error_pSgIeggg_
7remindd14RDAccountUtilsC
So12NSDictionaryCSgSo7NSErrorCSgIeyByy_
SDySS10Foundation4DataVGSgs5Error_pSgIeggg_
So18REMMigrationResultCSgSo7NSErrorCSgIeyByy_
So18REMMigrationResultCSgs5Error_pSgIeggg_
So14ICCloudContextC
So11REMCDObjectC
7remindd10CDObjectIDV
7remindd4DiffV7ElementO
s5SliceVy7remindd4DiffVG
SIy7remindd4DiffVG
s16IndexingIteratorVy7remindd4DiffVG
$s7remindd12DiffProtocolP
Si2at_t
Si2at_Si5usingt
7remindd4DiffV
$sSl
$sST
So10REMCDAlarmC
So10REMCDAlarmC7reminddE6FieldsO
SaySo10REMCDAlarmC7reminddE6FieldsOG
$s7remindd12IdentifiableP
So22REMAlarmVehicleTriggerC
So24REMCDAlarmVehicleTriggerC
7remindd32REMAlarmVehicleTriggerCDIngestorC8ValueKeyO
7remindd25REMAlarmTriggerCDIngestorC15RelationshipKeyO
7remindd33CDIngestorPredefinedIngestableKeyO023NoOrderableRelationshipE0O
7remindd33CDIngestorPredefinedIngestableKeyO027NoRelationshipOrderingValueE0O
So23REMAlarmLocationTriggerC
7remindd33REMAlarmLocationTriggerCDIngestorC8ValueKeyO
So19REMAlarmDateTriggerC
So21REMCDAlarmDateTriggerC
7remindd29REMAlarmDateTriggerCDIngestorC8ValueKeyO
So27REMAlarmTimeIntervalTriggerC
So29REMCDAlarmTimeIntervalTriggerC
7remindd37REMAlarmTimeIntervalTriggerCDIngestorC8ValueKeyO
10Foundation4DataVSg
Say7remindd32REMAlarmVehicleTriggerCDIngestorC8ValueKeyOG
Say7remindd25REMAlarmTriggerCDIngestorC15RelationshipKeyOG
Say7remindd33REMAlarmLocationTriggerCDIngestorC8ValueKeyOG
Say7remindd29REMAlarmDateTriggerCDIngestorC8ValueKeyOG
Say7remindd37REMAlarmTimeIntervalTriggerCDIngestorC8ValueKeyOG
7remindd32REMAlarmVehicleTriggerCDIngestorC
$s7remindd10CDIngestorP
7remindd33REMAlarmLocationTriggerCDIngestorC
7remindd29REMAlarmDateTriggerCDIngestorC
7remindd37REMAlarmTimeIntervalTriggerCDIngestorC
SS10identifier_t
s5Int32V3pid_SSSg16bundleIdentifierAD11processName7remindd19RDClientAccessLevelV06accessJ0t
7remindd7PromiseCyxGSg
yxcSg
ys5Error_pcSg
So9REMCDListC
$s7remindd13RDJSONCodableP
So7NSCoderC
SaySDySSypGG
SaySayypGG
$s7remindd25AlarmTriggerRepresentableP
So8REMAlarmC
7remindd18REMAlarmCDIngestorC8ValueKeyO
7remindd18REMAlarmCDIngestorC15RelationshipKeyO
7remindd22CDIngestionCoordinatorC
SaySo22REMAlarmVehicleTriggerCG
q_z_So22REMAlarmVehicleTriggerC_7remindd0abC10CDIngestorCSo20REMObjectIDProvidingRz23CDIngestableStorageTypeAC0E0PQy_RszAcHR_r0_lXX
s5Error_pIegzo_
SaySo23REMAlarmLocationTriggerCG
q_z_So23REMAlarmLocationTriggerC_7remindd0abC10CDIngestorCSo20REMObjectIDProvidingRz23CDIngestableStorageTypeAC0E0PQy_RszAcHR_r0_lXX
SaySo19REMAlarmDateTriggerCG
q_z_So19REMAlarmDateTriggerC_7remindd0abC10CDIngestorCSo20REMObjectIDProvidingRz23CDIngestableStorageTypeAC0E0PQy_RszAcHR_r0_lXX
SaySo27REMAlarmTimeIntervalTriggerCG
q_z_So27REMAlarmTimeIntervalTriggerC_7remindd0abcD10CDIngestorCSo20REMObjectIDProvidingRz23CDIngestableStorageTypeAC0F0PQy_RszAcHR_r0_lXX
So17REMCDAlarmTriggerCSg
Say7remindd18REMAlarmCDIngestorC8ValueKeyOG
Say7remindd18REMAlarmCDIngestorC15RelationshipKeyOG
7remindd18REMAlarmCDIngestorC
7remindd21REMSiriSearchDataViewC25ListsByCriteriaInvocationC10ParametersV
7remindd21REMSiriSearchDataViewC29RemindersByCriteriaInvocationC10ParametersV
Say7remindd19REMReminder_CodableCG
Say7remindd18REMSearchCriterionOG
SiSg
7remindd21REMSiriSearchDataViewC25ListsByCriteriaInvocationC
7remindd21REMSiriSearchDataViewC29RemindersByCriteriaInvocationC
7remindd19REMObjectID_CodableC
7remindd15REMList_CodableC
7remindd28REMListStableSortingDataViewC10InvocationC
7remindd6ResultOyxGIegn_
xs5Error_pIegnzo_
7remindd14AsyncOperationCyxG
7remindd7PromiseCyxGyc
$s7remindd25RDDARequestsQueueDelegateP
_pSgXw
7remindd9RDChannelO6ReaderCyAA11RDDARequestO_G
Say7remindd11RDDARequestOG
So24REMContactRepresentationC
7remindd25RDCoreSuggestionsHandling_p
$s7remindd28RDApplicationShortcutUpdaterP
7remindd18RDDaemonControllerC
$s7remindd19RDXPCEventInterfaceP
7remindd16RDXPCEventStreamC5TokenV
ySS_So13OS_xpc_object_ptc
10Foundation4UUIDV
7remindd16RDXPCEventStreamCSgXw
7remindd16RDXPCEventStreamC5AlarmV
10Foundation4DateV
yycSg
7remindd20RDNotifydEventStreamC16NotificationNameO
7remindd20RDNotifydEventStreamCSgXw
7remindd20RDNotifydEventStreamCSgXwz_Xx
IyB_
$s7remindd43RDContactInteractionAlarmProducerDataSourceP
$s7remindd47RDContactInteractionAlarmProducerSessionManagerP
7remindd19REMContactsProviderC
So9CNContactCSg7remindd7PromiseCySSGs5Error_pIeggozo_
SSSgIegn_
SSs5Error_pIegnzo_
SaySo24REMContactRepresentationCG
Say7remindd17RDDataSourceAlarmV_So24REMContactRepresentationCtG
7remindd33RDContactInteractionAlarmProducerC
10Foundation4DateVz_Xx
SaySSSgGs5Error_pIeggzo_
7remindd11UnlockStateOIegy_
7remindd11UnlockStateO
7remindd37RDBeforeFirstUnlockNotificationEngineCSg
So17OS_dispatch_groupCSg
7remindd16RDAlarmProducing_p
ShySSG
7remindd16RDAlarmProducing_pz_Xx
So17OS_dispatch_groupCSgz_Xx
Sbz_Xx
7remindd27RDAlarmNotificationConsumerC
SaySo14UNNotificationCGIegg_
SaySo11REMReminderCG
7remindd37RDBeforeFirstUnlockNotificationEngineC
7remindd27RDAlarmNotificationConsumerC14BannerBehaviorO
So39_REMNSPersistentHistoryTrackingAbstractC
So33RDMasterStoreManagedObjectContextCIeyBy_
So33RDMasterStoreManagedObjectContextCIegg_
So33RDMasterStoreManagedObjectContextC
$s7remindd29CDAuxiliaryReminderChangeInfoP
So18REMReminderStorageC
7remindd28REMReminderStorageCDIngestorC8ValueKeyO
7remindd28REMReminderStorageCDIngestorC15RelationshipKeyO
Say7remindd28REMReminderStorageCDIngestorC8ValueKeyOG
Say7remindd28REMReminderStorageCDIngestorC15RelationshipKeyOG
7remindd28REMReminderStorageCDIngestorC
7remindd23REMAccountsListDataViewC10InvocationC6ResultV
7remindd23REMAccountsListDataViewC5ModelV
7remindd23REMAccountsListDataViewC4DiffV
7remindd23REMAccountsListDataViewC5ModelV12AccountChildO
7remindd23REMAccountsListDataViewC5ModelV0C0V
7remindd23REMAccountsListDataViewC5ModelV5GroupV
7remindd23REMAccountsListDataViewC5ModelV12AccountChildO10CodingKeysO
7remindd23REMAccountsListDataViewC5ModelV12AccountChildO11ContentTypeO
Say7remindd23REMAccountsListDataViewC5ModelV0C0VG
Say7remindd23REMAccountsListDataViewC5ModelV7AccountVG
7remindd15REMList_CodableCSg
Shy7remindd19REMObjectID_CodableCG
7remindd23REMAccountsListDataViewC5ModelV7AccountV
Say7remindd23REMAccountsListDataViewC5ModelV12AccountChildOG
7remindd23REMAccountsListDataViewC10InvocationC
So17REMAccountStorageC
7remindd27REMAccountStorageCDIngestorC8ValueKeyO
7remindd27REMAccountStorageCDIngestorC15RelationshipKeyO
7remindd27REMAccountStorageCDIngestorC24OrderableRelationshipKeyO
7remindd27REMAccountStorageCDIngestorC28RelationshipOrderingValueKeyO
SDySo11REMObjectIDCs6UInt32VG
SDySo11REMObjectIDCSuG
Say7remindd27REMAccountStorageCDIngestorC8ValueKeyOG
Say7remindd27REMAccountStorageCDIngestorC15RelationshipKeyOG
Say7remindd27REMAccountStorageCDIngestorC24OrderableRelationshipKeyOG
Say7remindd27REMAccountStorageCDIngestorC28RelationshipOrderingValueKeyOG
7remindd27REMAccountStorageCDIngestorC
7remindd37RDBeforeFirstUnlockNotificationEngineCSgXw
7remindd37RDBeforeFirstUnlockNotificationEngineCSgXwz_Xx
So24OS_dispatch_source_timer_p
7remindd10UnfairLockC
7remindd12ExtendedDiffV7ElementO
s5SliceVy7remindd12ExtendedDiffVG
SIy7remindd12ExtendedDiffVG
s16IndexingIteratorVy7remindd12ExtendedDiffVG
SaySiG
ShySiG
Si4from_Si2tot
7remindd12ExtendedDiffV
SayySo18REMMigrationResultCSg_s5Error_pSgtcG
SpySo16os_unfair_lock_sVG
So18REMMigrationResultCSg
s5Error_pSg
s5Int16V
So19REMCDMigrationStateC
7remindd14TypedPredicateVySo19REMCDMigrationStateCG
So22NSManagedObjectContextCSo19REMCDMigrationStateCSgIggg_
7remindd17RDMigrationClientC
SbSds5Error_pSgIegyyg_
7remindd17RDMigrationClientCXMT
G0R1_
So11NSOperationC
y7remindd6ResultOyxGcSg
yx_G
Say7remindd17RDDataSourceAlarmV_So24REMContactRepresentationCtGSg
So33RDMasterStoreManagedObjectContextCSay7remindd17RDDataSourceAlarmV_So24REMContactRepresentationCtGs5Error_pIggrzo_
Say7remindd17RDDataSourceAlarmV_10Foundation4DateVtGSg
So33RDMasterStoreManagedObjectContextCSay7remindd17RDDataSourceAlarmV_10Foundation4DateVtGs5Error_pIggrzo_
Say7remindd17RDDataSourceAlarmV_So27REMAlarmVehicleTriggerEventVtGSg
So33RDMasterStoreManagedObjectContextCSay7remindd17RDDataSourceAlarmV_So27REMAlarmVehicleTriggerEventVtGs5Error_pIggrzo_
Say7remindd17RDDataSourceAlarmV_So8CLRegionCtGSg
So33RDMasterStoreManagedObjectContextCSay7remindd17RDDataSourceAlarmV_So8CLRegionCtGs5Error_pIggrzo_
So33RDMasterStoreManagedObjectContextCSbs5Error_pIggrzo_
ytSg
So33RDMasterStoreManagedObjectContextCyts5Error_pIggrzo_
SDySSSo31REMReplicaManagerSerializedDataCGSg
So33RDMasterStoreManagedObjectContextCSDySSSo31REMReplicaManagerSerializedDataCGs5Error_pIggrzo_
10Foundation4DataV_SDySo11REMObjectIDCypGtSg
So33RDMasterStoreManagedObjectContextC10Foundation4DataV_SDySo11REMObjectIDCypGts5Error_pIggrzo_
So24REMStoreInvocationResultCSg
So33RDMasterStoreManagedObjectContextCSo24REMStoreInvocationResultCs5Error_pIggrzo_
So14REMFetchResultCSg
So33RDMasterStoreManagedObjectContextCSo14REMFetchResultCs5Error_pIggrzo_
So11REMObjectIDCSgSg
So33RDMasterStoreManagedObjectContextCSo11REMObjectIDCSgs5Error_pIggrzo_
SaySo7REMListCG
7remindd41RDApplicationShortcutListProviderDelegate_pSgXw
7remindd31RDMasterStoreNotificationCenterC
7remindd31RDMasterStoreNotificationCenterC5TokenVSg
So27REMUserDefaultsObserveToken_pSg
7remindd29RDApplicationShortcutDataViewC
So13REMCDReminderCSg
So12NSOrderedSetCSg
So9REMCDListC7reminddE6FieldsO
SaySo9REMCDListC7reminddE6FieldsOG
10Foundation4DateVSg
So13REMCDReminderC7reminddE6FieldsO
SaySo13REMCDReminderC7reminddE6FieldsOG
$s7remindd10StringTypeP
7remindd35TypedPredicateStringMatchingOptionsV
So15NSManagedObjectC
7remindd14TypedPredicateV
So11NSPredicateCSg
7remindd16RDXPCEventStreamC5TokenVSg
7remindd28RDXPCActivityTimeEventStreamC4NameV
7remindd16RDXPCEventStreamC5TokenVz_Xx
Si5index_x7elementt
Si5index_t
Si5index_x10oldElementx03newC0t
So17REMRecurrenceRuleC
So19REMCDRecurrenceRuleC
7remindd27REMRecurrenceRuleCDIngestorC8ValueKeyO
7remindd27REMRecurrenceRuleCDIngestorC15RelationshipKeyO
7remindd27REMRecurrenceRuleCDIngestorC9DayOfWeekV
Say7remindd27REMRecurrenceRuleCDIngestorC8ValueKeyOG
Say7remindd27REMRecurrenceRuleCDIngestorC15RelationshipKeyOG
7remindd27REMRecurrenceRuleCDIngestorC
So15REMCDAttachmentC
So15REMCDAttachmentC7reminddE10BaseFieldsO
SaySo15REMCDAttachmentC7reminddE10BaseFieldsOG
So15REMCDAttachmentC7reminddE11ImageFieldsO
So15REMCDAttachmentC7reminddE10FileFieldsO
So15REMCDAttachmentC7reminddE9URLFieldsO
SaySo15REMCDAttachmentC7reminddE11ImageFieldsOG
SaySo15REMCDAttachmentC7reminddE10FileFieldsOG
SaySo15REMCDAttachmentC7reminddE9URLFieldsOG
7remindd30REMNSPersistentHistoryTrackingC
SDySo11REMObjectIDC10Foundation4DataVGs5Error_pSgIeggg_
So12REMChangeSetCs5Error_pSgIeggg_
So22REMChangeTrackingStateCSgs5Error_pSgIeggg_
So12NSDictionaryCSo7NSErrorCSgIeyByy_
So12REMChangeSetCSo7NSErrorCSgIeyByy_
So22REMChangeTrackingStateCSgSo7NSErrorCSgIeyByy_
SDySo11REMObjectIDCShySSGG
So22NSManagedObjectContextC
SayyyKcG
SDySo11REMObjectIDCSo15NSManagedObjectCG
$s7remindd21CDAuxiliaryChangeInfoP
7remindd19REMShareeCDIngestorC
SaySo9REMShareeCG
q_z_So9REMShareeC_7remindd0A10CDIngestorCSo20REMObjectIDProvidingRz23CDIngestableStorageTypeAC0C0PQy_RszAcHR_r0_lXX
7remindd31REMCalDAVNotificationCDIngestorC
SaySo21REMCalDAVNotificationCG
q_z_So21REMCalDAVNotificationC_7remindd0aB10CDIngestorCSo20REMObjectIDProvidingRz23CDIngestableStorageTypeAC0D0PQy_RszAcHR_r0_lXX
SaySo18REMReminderStorageCG
q_z_So18REMReminderStorageC_7remindd0aB10CDIngestorCSo20REMObjectIDProvidingRz012CDIngestableB4TypeAC0D0PQy_RszAcHR_r0_lXX
7remindd24REMListStorageCDIngestorC
SaySo14REMListStorageCG
q_z_So14REMListStorageC_7remindd0aB10CDIngestorCSo20REMObjectIDProvidingRz012CDIngestableB4TypeAC0D0PQy_RszAcHR_r0_lXX
SaySo17REMAccountStorageCG
q_z_So17REMAccountStorageC_7remindd0aB10CDIngestorCSo20REMObjectIDProvidingRz012CDIngestableB4TypeAC0D0PQy_RszAcHR_r0_lXX
SaySo17REMRecurrenceRuleCG
q_z_So17REMRecurrenceRuleC_7remindd0aB10CDIngestorCSo20REMObjectIDProvidingRz23CDIngestableStorageTypeAC0D0PQy_RszAcHR_r0_lXX
7remindd26REMURLAttachmentCDIngestorC
SaySo16REMURLAttachmentCG
q_z_So16REMURLAttachmentC_7remindd0A10CDIngestorCSo20REMObjectIDProvidingRz23CDIngestableStorageTypeAC0C0PQy_RszAcHR_r0_lXX
7remindd28REMImageAttachmentCDIngestorC
SaySo18REMImageAttachmentCG
q_z_So18REMImageAttachmentC_7remindd0aB10CDIngestorCSo20REMObjectIDProvidingRz23CDIngestableStorageTypeAC0D0PQy_RszAcHR_r0_lXX
7remindd27REMFileAttachmentCDIngestorC
SaySo17REMFileAttachmentCG
q_z_So17REMFileAttachmentC_7remindd0aB10CDIngestorCSo20REMObjectIDProvidingRz23CDIngestableStorageTypeAC0D0PQy_RszAcHR_r0_lXX
SaySo8REMAlarmCG
q_z_So8REMAlarmC_7remindd0A10CDIngestorCSo20REMObjectIDProvidingRz23CDIngestableStorageTypeAC0C0PQy_RszAcHR_r0_lXX
$s7remindd29RDTimeAlarmProducerDataSourceP
$s7remindd16RDFireDateSourceP
7remindd17RDTimeEventStream_p
7remindd19RDTimeAlarmProducerCSgXw
$s7remindd19RDXPCDaemonProtocolP
7remindd34RDXPCSyncInterfacePerformerFactoryC
7remindd9RDChannelO6WriterCyAA11RDDARequestO_G
7remindd22RDXPCIndexingPerformerC
7remindd9RDChannelO6WriterCySaySo24REMContactRepresentationCG_G
7remindd9RDChannelO6WriterCySo11REMObjectIDC_G
7remindd11RDXPCDaemonCSgXw
7remindd11RDXPCDaemonCSgXwz_Xx
$s7remindd25RDCoreSuggestionsHandlingP
7remindd37SGSuggestionsServiceRemindersProtocol_p
So9REMCDListCSg
ShySo13REMCDReminderCGSg
s5Int64V
So14REMListStorageC
So13REMCDReminderC7reminddE10PredicatesO
SaySo11REMObjectIDCG_Sbt
So11REMObjectIDC04listB0_Sb17includingSubtaskst
SaySo11REMObjectIDCG
So11REMObjectIDC04listB0_t
So11REMObjectIDC04listB0_7remindd24REMRemindersListDataViewC13ShowCompletedO04showJ0t
So11REMObjectIDC08reminderB0_7remindd24REMRemindersListDataViewC13ShowCompletedO04showJ0t
7remindd24REMRemindersListDataViewC13ShowCompletedO04showG0_t
SaySo11REMObjectIDCG_7remindd24REMRemindersListDataViewC13ShowCompletedOt
SaySSG_So11REMObjectIDCSgt
SaySo11REMObjectIDCG_10Foundation4DateVSgAGt
So11REMReminderC
So30REMStoreInvocationValueStorageC
So19REMFetchResultTokenC
So7NSArrayC
So12NSDictionaryC
So8NSStringC
So8NSNumberC
So5NSSetC
So6NSNullC
So6NSDataC
So6NSDateC
s4Int8V
s5UInt8V
s6UInt16V
SayxG
SDyxq_G
$s7remindd20REMInvocableProtocolP
So24REMStoreInvocationResultC
9XPCResult
$s7remindd23REMStoreInvocationValueP
So25REMCDAlarmLocationTriggerC
SSSg
So17REMCDAlarmTriggerC
So10REMCDAlarmCSg
So13REMCDReminderC
SbSg
So12REMCDAccountCSg
So12REMCDAccountC
10Foundation4UUIDVSg
7remindd15REM_os_activityV7OptionsV
So14OS_os_activity_pSg
So19REMCDRecurrenceRuleC7reminddE6FieldsO
SaySo19REMCDRecurrenceRuleC7reminddE6FieldsOG
Says5Error_pG
x_q_q0_tIegn_
s5Error_pSg5first_AB6secondAB5thirdt
xSg5first_q_Sg6secondq0_Sg5thirdtz_x_q_q0_r1_lXX
q_s5Error_pIegnzo_
q0_s5Error_pIegnzo_
xq_q0_Iegnnn_
s5Error_pSg5first_AB6secondAB5thirdtz_Xx
s5Error_pIegg_
x_q_SgtIegn_
xSgz_x_q_r0_lXX
q_Sgz_x_q_r0_lXX
xq_SgIegnn_
s5Error_pSgz_Xx
xSg_q_SgtIegn_
s5Error_pSg5first_AB6secondt
xSg5first_q_Sg6secondtz_x_q_r0_lXX
xSgq_SgIegnn_
s5Error_pSg5first_AB6secondtz_Xx
x_q_tIegn_
xq_Iegnn_
SayxGIegn_
SaySi5index_x5valuetG
SaySi5index_s5Error_p5errortG
SaySi5index_s5Error_p5errortGz_Xx
SaySi5index_x5valuetGz_x_lXX
SayxGIegg_
ytIegn_
$s7remindd15CDIngestableKeyP
24CDIngestableCoreDataType
36CDIngestableOrderableRelationshipKey
27CDIngestableRelationshipKey
40CDIngestableRelationshipOrderingValueKey
20CDIngestableValueKey
7remindd33CDIngestorPredefinedIngestableKeyO
Say7remindd33CDIngestorPredefinedIngestableKeyO023NoOrderableRelationshipE0OG
Say7remindd33CDIngestorPredefinedIngestableKeyO027NoRelationshipOrderingValueE0OG
So21REMCalDAVNotificationC
So23REMCDCalDAVNotificationC
7remindd31REMCalDAVNotificationCDIngestorC8ValueKeyO
7remindd31REMCalDAVNotificationCDIngestorC15RelationshipKeyO
Say7remindd31REMCalDAVNotificationCDIngestorC8ValueKeyOG
Say7remindd31REMCalDAVNotificationCDIngestorC15RelationshipKeyOG
7remindd11RDDebouncerCySo19NSEntityDescriptionCGSg
7remindd31RDMasterStoreNotificationCenterC5TokenV
ShySSGSg
ShySo19NSEntityDescriptionCG
7remindd31RDMasterStoreNotificationCenterCSgXw
So12EKEventStoreC
SaySo14CKRecordZoneIDCG
So13NSFileManagerC
$s7remindd43RDUserInteractionSessionManagerUserDefaultsP
So8REMStoreC
So9REMShareeC
So11REMCDShareeC
7remindd19REMShareeCDIngestorC8ValueKeyO
7remindd19REMShareeCDIngestorC15RelationshipKeyO
Say7remindd19REMShareeCDIngestorC8ValueKeyOG
Say7remindd19REMShareeCDIngestorC15RelationshipKeyOG
yXlSgXw
yx_G
7remindd9RDChannelO
7remindd12RDDataAccessCSgXw
qd__SgXwz_SaySSG_7remindd12RDDataAccessCRld__Cr__lXX
7remindd12RDDataAccessCSaySSGIeggn_
7remindd17RDDARequestsQueueCSgXw
qd__SgXwz_7remindd11RDDARequestO_AB17RDDARequestsQueueCRld__Cr__lXX
7remindd17RDDARequestsQueueCAA11RDDARequestOIeggn_
7remindd31RDSiriSuggestedReminderProducerCSgXw
qd__SgXwz_So11REMObjectIDC_7remindd31RDSiriSuggestedReminderProducerCRld__Cr__lXX
7remindd31RDSiriSuggestedReminderProducerCSo11REMObjectIDCIeggn_
7remindd9RDChannelO6ReaderCySo11REMObjectIDC_G
xz_So11REMObjectIDC_lXX
7remindd33RDContactInteractionAlarmProducerCSgXw
qd__SgXwz_SaySo24REMContactRepresentationCG_7remindd33RDContactInteractionAlarmProducerCRld__Cr__lXX
7remindd33RDContactInteractionAlarmProducerCSaySo24REMContactRepresentationCGIeggn_
7remindd9RDChannelO6ReaderCySaySo24REMContactRepresentationCG_G
xz_SaySo24REMContactRepresentationCG_lXX
$s7remindd17REMSearchableItemP
7remindd18REMSearchCriterionO
Say7remindd21REMSearchableItemTypeOG
SS_7remindd22REMStringMatchingStyleOt
10Foundation4DateVSg_ADt
7remindd22REMStringMatchingStyleO
7remindd21REMSearchableItemTypeO
qd__z_x_qd__SlRd__7remindd7PromiseCyxG7ElementSTRtd__r__lXX
qd__
qd_0_SgXw
qd__SgXw
qd__SgXwz_x_qd__Rld__Cr__lXX
s5Error_pqd__Ieggg_
qd__Iegg_
qd__XMT
7remindd7PromiseCyqd_0_G
qd_0_
7remindd7PromiseCyqd_1_G
qd_1_
G0R2_
7remindd7PromiseCyqd_2_G
qd_2_
G0R3_
qd__z_x_qd__SKRd__7remindd7PromiseCyxSgGyc7ElementSTRtd__r__lXX
yp5value_yp6targett
7remindd4SealCyxG
qd__z_qd___qd_0_qd_1_qd_2_t_qd__qd_0_qd_1_qd_2_qd___qd_0_qd_1_qd_2_tRszr_2_lXX
qd_0_z_qd___qd_0_qd_1_qd_2_t_qd__qd_0_qd_1_qd_2_qd___qd_0_qd_1_qd_2_tRszr_2_lXX
qd_1_z_qd___qd_0_qd_1_qd_2_t_qd__qd_0_qd_1_qd_2_qd___qd_0_qd_1_qd_2_tRszr_2_lXX
qd_2_qd__qd_0_qd_1_qd_2_s5Error_pIegnrrrrzo_
qd__z_qd___qd_0_qd_1_t_qd__qd_0_qd_1_qd___qd_0_qd_1_tRszr_1_lXX
qd_0_z_qd___qd_0_qd_1_t_qd__qd_0_qd_1_qd___qd_0_qd_1_tRszr_1_lXX
qd_1_qd__qd_0_qd_1_s5Error_pIegnrrrzo_
qd__z_qd___qd_0_t_qd__qd_0_qd___qd_0_tRszr_0_lXX
qd_0_qd__qd_0_s5Error_pIegnrrzo_
yx_G
yx_Gz_x_qd__SlRd__7remindd7PromiseCyxG7ElementSTRtd__r__lXX
xIegn_
Say7ElementSTQzGIegn_
Say7ElementSTQzGIegg_
7ElementSTQzqd__s5Error_pIegnrzo_
qd__Iegn_
qd__z_x_qd__STRzr__lXX
qd__7ElementSTQzs5Error_pIeglnzo_
qd__7ElementSTQzqd__s5Error_pIegnnrzo_
Sayqd__GIegg_
7ElementSTQzqd__Sgs5Error_pIegnrzo_
Sayqd__GIegn_
qd_0_SgXwz_x_qd__qd_0_Rld_0_Cr_0_lXX
xqd_0_7remindd7PromiseCyqd__Gs5Error_pIegngozo_
x7remindd7PromiseCyqd__Gs5Error_pIegnozo_
xqd_0_qd__s5Error_pIegngrzo_
xqd__s5Error_pIegnrzo_
xz_x_qd__SlRd__7remindd7PromiseCyxG7ElementSTRtd__r__lXX
SayxG7remindd7PromiseCyAAGs5Error_pIeggozo_
xSgIegn_
SaySSSgGyts5Error_pIegnrzo_
Say7remindd7PromiseCySSSgGG
SSSg7remindd7PromiseCySayAAGGs5Error_pIegnozo_
SaySSSgGIegn_
SaySSSgG7remindd7PromiseCyABGs5Error_pIeggozo_
SaySSSgG7remindd7PromiseCyABGs5Error_pIegnozo_
s10ArraySliceVy7remindd7PromiseCySSSgGG
SSyts5Error_pIegnrzo_
So9CNContactCSg7remindd7PromiseCySSGs5Error_pIegnozo_
SSIegn_
So9CNContactCSgIegn_
So9CNContactCs5Error_pIegnzo_
So9CNContactCyts5Error_pIegnrzo_
7remindd22PromiseDisposableTokenCSgXw
qd_0_SgXwz_So9CNContactC_yt7remindd22PromiseDisposableTokenCRld_0_Cr_0_lXX
So9CNContactC7remindd22PromiseDisposableTokenCyts5Error_pIegngrzo_
7remindd7PromiseCyq_Gxc
yxq__GtcSg
SDyx
yxq__GG
7remindd24REMAsyncOperationManagerC0C11FinishStateO
7remindd7PromiseCyq_G_AA0B15DisposableTokenCt
7remindd24REMAsyncOperationManagerCy
So9CNContactCGSgXw
7remindd24REMAsyncOperationManagerCyxq_GSgXwz_
_So9CNContactCSHRzr0_lXX
_So9CNContactCSHRzr0_lXX
So9CNContactCIegn_
So9CNContactC7remindd22PromiseDisposableTokenCs5Error_pIegngzo_
qd__SgXwz_yt_7remindd22PromiseDisposableTokenCRld__Cr__lXX
s5Error_p7remindd22PromiseDisposableTokenCIeggg_
So13NSMergePolicyC
$s7remindd36RDApplicationShortcutEngineInterfaceP
7remindd33RDApplicationShortcutListProvider_pSg
7remindd28RDApplicationShortcutUpdater_pSg
$s7remindd26REMAttachmentRepresentableP
So16REMURLAttachmentC
So18REMCDURLAttachmentC
7remindd26REMURLAttachmentCDIngestorC8ValueKeyO
7remindd26REMURLAttachmentCDIngestorC15RelationshipKeyO
So18REMImageAttachmentC
So20REMCDImageAttachmentC
7remindd28REMImageAttachmentCDIngestorC8ValueKeyO
7remindd28REMImageAttachmentCDIngestorC15RelationshipKeyO
So17REMFileAttachmentC
So19REMCDFileAttachmentC
7remindd27REMFileAttachmentCDIngestorC8ValueKeyO
7remindd27REMFileAttachmentCDIngestorC15RelationshipKeyO
Say7remindd26REMURLAttachmentCDIngestorC8ValueKeyOG
Say7remindd26REMURLAttachmentCDIngestorC15RelationshipKeyOG
Say7remindd28REMImageAttachmentCDIngestorC8ValueKeyOG
Say7remindd28REMImageAttachmentCDIngestorC15RelationshipKeyOG
Say7remindd27REMFileAttachmentCDIngestorC8ValueKeyOG
Say7remindd27REMFileAttachmentCDIngestorC15RelationshipKeyOG
So18REMStoreInvocationC
7remindd17REMWidgetDataViewC20FetchModelInvocationC6ResultC
7remindd17REMWidgetDataViewC5ModelV_ytt
7remindd17REMWidgetDataViewC5ModelV
7remindd17REMWidgetDataViewC20FetchModelInvocationC
_pSgXw
So15NSXPCConnectionC
$s7remindd26RDClientConnectionDelegateP
So23REMXPCIndexingPerformer_pSgSo7NSErrorCSgIeyByy_
So28REMXPCSyncInterfacePerformer_pSgSo7NSErrorCSgIeyByy_
So20REMXPCStorePerformer_pSgSo7NSErrorCSgIeyByy_
So20REMXPCDebugPerformer_pSgSo7NSErrorCSgIeyByy_
So29REMXPCChangeTrackingPerformer_pSgSo7NSErrorCSgIeyByy_
7remindd18RDClientConnectionC
7remindd26RDClientConnectionListenerC
yx_G
Sayy
yx_xGcG
yx_xGSg
yyt_ytG
Sayy
yyt_ytGcG
yx_xGz_yt_lXX
yx_xGz_x_lXX
yx_xGIegn_
xz_x_lXX
yyt_ytGIegn_
xz_yt_lXX
ySaySSSgG_ACG
ySaySSSgG_ACGIegn_
yx_xGz_SaySSSgG_lXX
SaySSSgG
xz_SaySSSgG_lXX
ySSSg_ABG
ySSSg_ABGIegn_
yx_xGz_SSSg_lXX
xz_SSSg_lXX
Sayy
ySaySSSgG_ACGcG
ySS_SSG
ySS_SSGIegn_
yx_xGz_SS_lXX
xz_SS_lXX
Sayy
ySSSg_ABGcG
ySo9CNContactCSg_ADG
ySo9CNContactCSg_ADGIegn_
yx_xGz_So9CNContactCSg_lXX
So9CNContactCSg
xz_So9CNContactCSg_lXX
Sayy
ySS_SSGcG
ySo9CNContactC_ACG
ySo9CNContactC_ACGIegn_
yx_xGz_So9CNContactC_lXX
So9CNContactC
xz_So9CNContactC_lXX
Sayy
ySo9CNContactCSg_ADGcG
Sayy
ySo9CNContactC_ACGcG
$s7remindd33RDApplicationShortcutListProviderP
$s7remindd41RDApplicationShortcutListProviderDelegateP
$s7remindd32RDVehicleAlarmProducerDataSourceP
7remindd22RDVehicleAlarmProducerCSgXw
7remindd22RDVehicleAlarmProducerCSgXwz_Xx
7remindd22RDVehicleAlarmProducerCIegg_
$s7remindd17REMCDObjectFieldsP
$s7remindd32REMCDObjectResolutionTokenFieldsP
$s7remindd17REMCRSerializableP
7remindd18SortedPatchElementV
7remindd5PatchOyxG
So14REMSaveRequestCSg
$s7remindd20RDReminderDataCopierP
7remindd18RDAccountDataMoverC10StatisticsV
$s7remindd53RDDynamicSignificantTimeNotificationEngineEventSetterP
7remindd42RDDynamicSignificantTimeNotificationEngineC14XPCEventSetterV
$s7remindd10CDFetchingP
$s7remindd25RDLocationManagerDelegateP
$s7remindd21RDLocationManagerTypeP
_pSgXw
So17CLLocationManagerCSg
So8REMColorC
$s7remindd28RDUserNotificationPresentingP
$s7remindd32RDUserNotificationCenterDelegateP
_pSgXw
So24UNUserNotificationCenterC
SaySo14UNNotificationCG
So28UNMutableNotificationContentC
So19REMCDReplicaManagerC
7remindd23RDReplicaManagerPayloadV
So31REMReplicaManagerSerializedDataC
ShySo11REMCDShareeCGSg
So13DATransactionCSg
So27DADREMShareResponseDelegateC
So22REMStoreContainerTokenCSg
7remindd11RDDARequestO
SS11calendarURL_SS9accountIDys5Error_pSgc10completiont
So8REMStoreCyKc
10ObjectiveC8ObjCBoolVSo7NSErrorCSgIeyByy_
Sbs5Error_pSgIegyg_
10ObjectiveC8ObjCBoolVACSo7NSErrorCSgIeyByyy_
S2bs5Error_pSgIegyyg_
7remindd19RDXPCStorePerformerC
s5Error_pSgSbIeggy_
So7CKShareCSgSo7NSErrorCSgIeyByy_
So7CKShareCSgs5Error_pSgIeggg_
So25ICCollaborationControllerC
Say7remindd23RDReplicaManagerPayloadVG
7remindd22RDUserNotificationTypeO
7remindd25REMNotificationIdentifierO
7remindd26RDUserNotificationCategoryO
Say7remindd26RDUserNotificationCategoryOG
$s7remindd24RDSyncPollerUserDefaultsP
$s7remindd25RDSyncPollerConfigurationP
7remindd13RDEventStream_p
xs5Error_pIegrzo_
q_SgXw
q_SgXwz_x_q_Rl_Cr0_lXX
q_7remindd7PromiseCyxGIeggo_
7remindd7PromiseCyxGIego_
7remindd7PromiseCySo9CNContactCGIego_
SaySsG
SS5IndexV
7remindd24BoxedDiffAndPatchElementO
7remindd12ExtendedDiffV7ElementO04diffD0_AA011SortedPatchD0VyxG8deletionAI9insertiont
7remindd12ExtendedDiffV7ElementO04diffD0_AA011SortedPatchD0VyxG05patchD0t
$s7remindd33RDLocationAlarmProducerDataSourceP
$s7remindd16RDCLRegionSourceP
7remindd23RDLocationAlarmProducerC
So8CLRegionC
10Foundation3URLV
So10REMAccountC
So7REMListC
So21REMStructuredLocationC
SDySo11REMObjectIDCypG
7remindd19REMObjectID_CodableC10CodingKeysO
So13RDMasterStoreCSgXw
7remindd20RDDisplayDateUpdaterCXMT
So17NSPersistentStoreC
So13RDMasterStoreCSgXwz_Xx
7remindd20RDDisplayDateUpdaterCXDXMT
$s7remindd23REMContactsProviderTypeP
So14CNContactStoreC
7remindd24REMAsyncOperationManagerCy
So9CNContactCGSg
So24REMContactRepresentationC_
7remindd19REMContactsProviderCSgXw
7remindd7PromiseCySo9CNContactCGIeggo_
So9CNContactCs5Error_pIegozo_
So9CNContactCs5Error_pIegrzo_
SaySo15CNKeyDescriptor_pG
$s7remindd16RDDaemonProtocolP
7remindd13RDAlarmEngineCSg
7remindd25RDTodayNotificationEngineCSg
7remindd36RDApplicationShortcutEngineInterface_pSg
7remindd27RDCoreSuggestionsControllerC
7remindd42RDSiriSuggestedReminderNotificationHandlerC
7remindd24REMListStorageCDIngestorC8ValueKeyO
7remindd24REMListStorageCDIngestorC15RelationshipKeyO
7remindd24REMListStorageCDIngestorC24OrderableRelationshipKeyO
7remindd24REMListStorageCDIngestorC28RelationshipOrderingValueKeyO
Say7remindd24REMListStorageCDIngestorC8ValueKeyOG
Say7remindd24REMListStorageCDIngestorC15RelationshipKeyOG
Say7remindd24REMListStorageCDIngestorC24OrderableRelationshipKeyOG
Say7remindd24REMListStorageCDIngestorC28RelationshipOrderingValueKeyOG
7remindd10UnfairLockC7OptionsV
$s7remindd4LockP
SpySo23_opaque_pthread_mutex_tVG
So9ACAccountC
S2bSaySSGs5Error_pSgIegyygg_
SuSg
SuSgz_Xx
SuSgIegy_
7remindd14RDAccountUtilsC22LocalDataToICloudMoverC02NoG15REMAccountErrorV
7remindd14RDAccountUtilsC22LocalDataToICloudMoverC28TargetAccountIsNonEmptyErrorV
7remindd14RDAccountUtilsC22LocalDataToICloudMoverC0D19AccountIsEmptyErrorV
SaySo16NSSortDescriptorCG
So17REMCDAlarmTriggerC7reminddE14LocationFieldsO
SaySo17REMCDAlarmTriggerC7reminddE14LocationFieldsOG
SDySSSiG
7remindd24REMRemindersListDataViewC27TodayNotificationInvocationC10ParametersV
7remindd24REMRemindersListDataViewC27TodayNotificationInvocationC6ResultV
7remindd24REMRemindersListDataViewC25SiriFoundInAppsInvocationC10ParametersV
7remindd24REMRemindersListDataViewC25SiriFoundInAppsInvocationC6ResultV
7remindd24REMRemindersListDataViewC16SearchInvocationC10ParametersV
7remindd24REMRemindersListDataViewC16SearchInvocationC6ResultV
7remindd24REMRemindersListDataViewC19ScheduledInvocationC10ParametersV
7remindd24REMRemindersListDataViewC19ScheduledInvocationC6ResultV
7remindd24REMRemindersListDataViewC15TodayInvocationC10ParametersV
7remindd24REMRemindersListDataViewC15TodayInvocationC6ResultV
7remindd24REMRemindersListDataViewC13AllInvocationC10ParametersV
7remindd24REMRemindersListDataViewC13AllInvocationC6ResultV
7remindd24REMRemindersListDataViewC17FlaggedInvocationC10ParametersV
7remindd24REMRemindersListDataViewC17FlaggedInvocationC6ResultV
7remindd24REMRemindersListDataViewC0C10InvocationC10ParametersV
7remindd24REMRemindersListDataViewC0C10InvocationC6ResultV
7remindd24REMRemindersListDataViewC17RemindersPrefetchO
7remindd24REMRemindersListDataViewC9FlatModelV
7remindd24REMRemindersListDataViewC4DiffV
7remindd24REMRemindersListDataViewC9SortOrderO
7remindd24REMRemindersListDataViewC13ShowCompletedO
7remindd24REMRemindersListDataViewC10ListsModelV
7remindd24REMRemindersListDataViewC10DatesModelV
7remindd29REMStructuredLocation_CodableCSg
7remindd24REMRemindersListDataViewC10TodayModelV
7remindd24REMRemindersListDataViewC12ReminderLiteV
Say7remindd24REMRemindersListDataViewC12ReminderLiteVGSg
7remindd24REMRemindersListDataViewC10ListsModelV5GroupV
7remindd16REMColor_CodableCSg
Say7remindd24REMRemindersListDataViewC12ReminderLiteVG
7remindd24REMRemindersListDataViewC10DatesModelV5GroupV
7remindd24REMRemindersListDataViewC13SortDirectionO
7remindd24REMRemindersListDataViewC16CountByCompletedVSg
Say7remindd24REMRemindersListDataViewC10ListsModelV5GroupVG
Say7remindd24REMRemindersListDataViewC10DatesModelV5GroupVG
7remindd24REMRemindersListDataViewC16CountByCompletedV
7remindd24REMRemindersListDataViewC27TodayNotificationInvocationC
7remindd24REMRemindersListDataViewC25SiriFoundInAppsInvocationC
7remindd24REMRemindersListDataViewC16SearchInvocationC
7remindd24REMRemindersListDataViewC19ScheduledInvocationC
7remindd24REMRemindersListDataViewC15TodayInvocationC
7remindd24REMRemindersListDataViewC13AllInvocationC
7remindd24REMRemindersListDataViewC17FlaggedInvocationC
7remindd24REMRemindersListDataViewC0C10InvocationC
$s7remindd11RDInvocableP
$s7remindd24RDSwiftInvocableProtocolP
$s7remindd27AnyRDSwiftInvocableProtocolP
So12REMCDAccountC7reminddE6FieldsO
SaySo12REMCDAccountC7reminddE6FieldsOG
$s7remindd30RDClientAccessLevelTruthSourceP
7remindd19RDClientAccessLevelV
So21REMResolutionTokenMapC
So19NSMutableDictionaryC
So18REMResolutionTokenC
7remindd42RDDynamicSignificantTimeNotificationEngineC
7remindd25RDTodayNotificationEngineC
SbIegy_Sg
Ieg_Sg
7remindd25RDTodayNotificationEngineCSgXw
$s7remindd16RDAlarmProducingP
$s7remindd16RDAlarmConsumingP
$s7remindd23RDAlarmProducerDelegateP
7remindd31RDMasterStoreNotificationCenterCSg
So22UNNotificationResponseC
7remindd13RDAlarmEngineCSgXw
7remindd15RDProducerAlarmV
7remindd21RDProducerAlarmOriginO
7remindd19RDProducerAlarmTypeO
7remindd17RDDataSourceAlarmV
So8REMAlarmC_SSSgt
7remindd13RDAlarmEngineC
7remindd19RDTimeAlarmProducerC
7remindd22RDVehicleAlarmProducerC
7remindd31RDSiriSuggestedReminderProducerC
7remindd30RDAlarmCoreSuggestionsConsumerC
yxGSg
yxGSg
yxGSgXw
7remindd17RDDARequestsQueueCSg
So32DADREMUserNotificationPresenting_p
So20DADREMLocalDBWatcherCSgXw
So7DADMainCSg
7remindd12RDDataAccessC
7remindd17RDDARequestsQueueC
7remindd9RDChannelO6ReaderCySaySSG_G
7remindd23REMComplicationDataViewC20FetchModelInvocationC6ResultC
7remindd23REMComplicationDataViewC5ModelV_ytt
7remindd23REMComplicationDataViewC5ModelV
7remindd23REMComplicationDataViewC20FetchModelInvocationC
15InvernessClient0aB5LocalC
So18NSQualityOfServiceV
xSgs5Error_pSgIegng_
$s15InvernessClient10HTTPClientP
SS7message_t
SS4line_t
SS3url_t
SS7message_
6toWrapt
s6UInt32VSg
s5Int32VSg
s6UInt64VSg
15InvernessClient26Ckcode_SerializationFormatOSg
15InvernessClient19Codeagent_ErrorCodeO
15InvernessClient28Codeagent_CodeServiceRequestV0E4TypeO
15InvernessClient28Codeagent_CodeServiceRequestV13ContainerTypeO
15InvernessClient28Codeagent_CodeServiceRequestV12DatabaseTypeO
15InvernessClient25Ckdbcore_RequestOperationV6HeaderV8DatabaseO
15InvernessClient26Ckcode_SerializationFormatO
q_Sgs5Error_pSgIegng_
15InvernessClient12DatabaseTypeO
So18NSQualityOfServiceVSg
ySo13CKRequestInfoCSgcSg
13SwiftProtobuf07Google_B6_EmptyVSgs5Error_pSgIeggg_
$s15InvernessClient9InvocableP
s5Error_p5error_t
SDySSypG
15InvernessClient10CloudKitWSC11CredentialsV
SSSgs5Error_pSgIeggg_
SDySSypGSgs5Error_pSgIeggg_
15InvernessClient10CloudKitWSC11EnvironmentO
Says5UInt8VG
So28_ConditionalAllocationBuffera
8BaseType13SwiftProtobuf05FieldB0PQz
Say8BaseType13SwiftProtobuf05FieldB0PQzG
$s13SwiftProtobuf17AnyExtensionFieldP
$s13SwiftProtobuf14ExtensionFieldP
13SwiftProtobuf19AnyMessageExtension_p
8RawValueSYQz
13SwiftProtobuf22OptionalExtensionFieldV
13SwiftProtobuf22RepeatedExtensionFieldV
13SwiftProtobuf20PackedExtensionFieldV
13SwiftProtobuf26OptionalEnumExtensionFieldV
13SwiftProtobuf26RepeatedEnumExtensionFieldV
13SwiftProtobuf24PackedEnumExtensionFieldV
13SwiftProtobuf29OptionalMessageExtensionFieldV
13SwiftProtobuf29RepeatedMessageExtensionFieldV
13SwiftProtobuf27OptionalGroupExtensionFieldV
13SwiftProtobuf27RepeatedGroupExtensionFieldV
$s13SwiftProtobuf16SelectiveVisitorP
$s13SwiftProtobuf19_ProtoNameProvidingP
$ss27ExpressibleByIntegerLiteralP
$ss25ExpressibleByFloatLiteralP
$ss27ExpressibleByBooleanLiteralP
$ss26ExpressibleByStringLiteralP
$ss43ExpressibleByExtendedGraphemeClusterLiteralP
$ss33ExpressibleByUnicodeScalarLiteralP
10Foundation4DataV
13SwiftProtobuf11JSONDecoderV
13SwiftProtobuf11JSONScannerV
13SwiftProtobuf19JSONDecodingOptionsV
13SwiftProtobuf8_NameMapVSg
Say13SwiftProtobuf07Google_B7_SyntaxOG
Say13SwiftProtobuf07Google_B6_FieldV4KindOG
Say13SwiftProtobuf07Google_B6_FieldV11CardinalityOG
13SwiftProtobuf07Google_B14_SourceContextVSg
13SwiftProtobuf07Google_B4_AnyVSg
13SwiftProtobuf07Google_B10_EnumValueV
13SwiftProtobuf07Google_B6_FieldV
13SwiftProtobuf07Google_B7_SyntaxO
13SwiftProtobuf07Google_B6_FieldV4KindO
13SwiftProtobuf07Google_B6_FieldV11CardinalityO
$s13SwiftProtobuf7MessageP
$s13SwiftProtobuf26_MessageImplementationBaseP
13SwiftProtobuf22JSONMapEncodingVisitorV
s12StaticStringVSg
13SwiftProtobuf21BinaryEncodingVisitorV
13SwiftProtobuf13BinaryEncoderV
13SwiftProtobuf21BinaryEncodingVisitorV0cd10MessageSetE0V
13SwiftProtobuf17TextFormatDecoderV
13SwiftProtobuf7Message_pXpSg
SDySi13SwiftProtobuf17AnyExtensionField_pG
$s13SwiftProtobuf7DecoderP
$s13SwiftProtobuf19AnyMessageExtensionP
13SwiftProtobuf7Message_pXp
13SwiftProtobuf13BinaryDecoderV
SPys5UInt8VGSg
13SwiftProtobuf10WireFormatO
13SwiftProtobuf21BinaryDecodingOptionsV
13SwiftProtobuf11HashVisitorV
s6HasherV
13SwiftProtobuf7Message_pXmT
$s13SwiftProtobuf9FieldTypeP
8BaseType
$s13SwiftProtobuf10MapKeyTypeP
$s13SwiftProtobuf12MapValueTypeP
13SwiftProtobuf0B5FloatV
13SwiftProtobuf0B6DoubleV
13SwiftProtobuf0B5Int32V
13SwiftProtobuf0B5Int64V
13SwiftProtobuf0B6UInt32V
13SwiftProtobuf0B6UInt64V
13SwiftProtobuf0B6SInt32V
13SwiftProtobuf0B6SInt64V
13SwiftProtobuf0B7Fixed32V
13SwiftProtobuf0B7Fixed64V
13SwiftProtobuf0B8SFixed32V
13SwiftProtobuf0B8SFixed64V
13SwiftProtobuf0B4BoolV
13SwiftProtobuf0B6StringV
13SwiftProtobuf0B5BytesV
13SwiftProtobuf07Google_B6_ValueV
13SwiftProtobuf07Google_B10_ListValueV
$s13SwiftProtobuf7VisitorP
$s13SwiftProtobuf18_CustomJSONCodableP
13SwiftProtobuf07Google_B10_TimestampV
13SwiftProtobuf07Google_B11_BytesValueV
13SwiftProtobuf07Google_B12_StringValueV
13SwiftProtobuf07Google_B9_DurationV
Say13SwiftProtobuf07Google_B7_OptionVG
13SwiftProtobuf07Google_B7_MethodV
13SwiftProtobuf07Google_B6_MixinV
s5UInt8VSg
13SwiftProtobuf17AnyMessageStorageC13InternalStateO
13SwiftProtobuf7Message_p
10Foundation4DataV_13SwiftProtobuf19JSONDecodingOptionsVt
s15CollectionOfOneVys5UInt8VG
SnySiG
SpySo28_ConditionalAllocationBufferaGIgy_
13SwiftProtobuf07Google_B7_StructV
13SwiftProtobuf19JSONEncodingVisitorV
13SwiftProtobuf11JSONEncoderV
13SwiftProtobuf19JSONEncodingOptionsV
$s13SwiftProtobuf4EnumP
13SwiftProtobuf17TextFormatScannerV
13SwiftProtobuf12ExtensionMap_pSg
SPys5UInt8VG
13SwiftProtobuf15DoubleFormatterC
$s13SwiftProtobuf17ExtensibleMessageP
13SwiftProtobuf25TextFormatEncodingVisitorV
13SwiftProtobuf17TextFormatEncoderV
SDySis12StaticStringVG
13SwiftProtobuf22ExtensionFieldValueSetVSg
13SwiftProtobuf07Google_B14_SourceContextV
13SwiftProtobuf25BinaryEncodingSizeVisitorV
13SwiftProtobuf25BinaryEncodingSizeVisitorV0cd10MessageSeteF0V
13SwiftProtobuf8_NameMapV0C11DescriptionO
SaySRys5UInt8VGG
SDySi
s12StaticStringV5proto_t
s12StaticStringV5proto_AB4jsont
s12StaticStringV5proto_SayABG7aliasest
13SwiftProtobuf8_NameMapV5NamesV
13SwiftProtobuf8_NameMapV0C0VSg
13SwiftProtobuf8_NameMapV0C0V
SRys5UInt8VG
s12StaticStringV
13SwiftProtobuf8_NameMapV
$ss30ExpressibleByDictionaryLiteralP
Say13SwiftProtobuf07Google_B10_NullValueOG
SDySS
13SwiftProtobuf07Google_B10_NullValueO
Spys5UInt8VG
13SwiftProtobuf17AnyMessageStorageC
13SwiftProtobuf7Message_pXmTSg
_os_unfair_lock_opaque
__sig
__opaque
opaque
rawValue
RawValue
ArrayLiteralElement
Element
unknownFields
_storage
archivePath
credential
embeddedTestData
dsID
baseURL
hostname
mmeAuthToken
partition
success
error
timeElapsed
isObserver
listsMigrated
remindersMigrated
message
retryCount
user
UNRECOGNIZED
none
dryRun
disableSharing
saveOriginalJson
userInitiated
noCleanup
defined
isTerminated
nextInvocationInSeconds
invocationCount
failureCount
options
result
invocable
_source
_disableCache
_state
_result
_log
_options
_userInitiated
_simulatedError
_nextStep
_logs
RawValue
AllCases
queue
_debouncingInterval
handler
isEnabled
pendingWorkItem
pendingValues
pendingCompletionBlocks
coalescedUpdates
debouncer
noBasicAccounts
model
accounts
account
lists
Parameters
Result
masterStore
notificationCenter
locationManager
xpcDaemon
masterStoreByContainerURL
xpcListener
xpcListenerUserInteractive
xpcDaemon
listenerQueue
clientConnections
success
failed
recordId
dataSource
delegate
queue
queue
masterStore
discretionaryCloudKitThrottler
cloudKitThrottler
dataAccessThrottler
dataAccessSyncRequestWriter
clientIdentity
clientConnection
objectID
elements
remainingIndexes
insert
delete
update
from
DiffElementType
Element
Index
Iterator
SubSequence
Indices
acknowledgedDate
alarmUID
originalAlarmUID
reminder
triggerID
AllCases
RawValue
accountID
alarmID
objectID
event
structuredLocation
proximity
dateComponents
timeInterval
CDIngestableStorageType
CDIngestableCoreDataType
CDIngestableValueKey
CDIngestableRelationshipKey
CDIngestableOrderableRelationshipKey
CDIngestableRelationshipOrderingValueKey
AllCases
RawValue
remindd
xctest
promise
resolve
reject
dicts
arrays
accountID
reminderID
objectID
trigger
acknowledgedDate
alarmUID
originalAlarmUID
CDIngestableStorageType
CDIngestableCoreDataType
CDIngestableValueKey
CDIngestableRelationshipKey
CDIngestableOrderableRelationshipKey
CDIngestableRelationshipOrderingValueKey
AllCases
RawValue
criteria
fetchOffset
fetchLimit
base
arg0
arg1
arg2
itemTypes
objectID
listID
textualField
isCompleted
hasLocation
location
dueDate
hasDueDate
modifiedDate
creationDate
isRecurrent
isFlagged
spotlightItemIdentifier
Parameters
Result
RawValue
Parameters
Result
workBlock
identifier
dispatchQueue
delegate
requestChannelReader
pendingRequests
coreSuggestionHandler
queue
daemonController
queue
started
alarmHandlers
eventInterface
token
name
body
uuid
userVisible
date
eventHandler
notificationName
notifyToken
significantTimeChangeNotification
mobileKeyBagFirstUnlockNotification
RawValue
dataSource
delegate
queue
userInteractionSessionManager
shouldNotifyOfInteractionWithPeopleNotifyToken
shouldNotifyOfInteractionWithPeople
firstUnlock
unlock
notificationCenter
queue
beforeFirstUnlockNotificationEngine
daemonController
clientIdentity
doNothing
notificationCenterOnly
showBanner
masterStore
objectID
daCalendarItemUniqueIdentifier
externalIdentifier
externalModificationTag
daSyncToken
daPushKey
titleDocumentData
titleDocument
completed
completionDate
priority
flagged
creationDate
lastModifiedDate
recurrenceRules
startDateComponents
dueDateComponents
timeZone
allDay
notesDocumentData
notesDocument
attachments
alarms
contactHandles
icsDisplayOrder
importedICSData
userActivity
siriFoundInAppsData
lastBannerPresentationDate
accountID
listID
parentReminderID
subtaskIDsToUndelete
siriFoundInAppsUserConfirmation
CDIngestableStorageType
CDIngestableCoreDataType
CDIngestableValueKey
CDIngestableRelationshipKey
CDIngestableOrderableRelationshipKey
CDIngestableRelationshipOrderingValueKey
AllCases
RawValue
model
diff
list
group
contentType
payload
lists
incompleteRemindersCount
overdueRemindersCount
accounts
scheduledRemindersCount
scheduledOverdueRemindersCount
flaggedRemindersCount
flaggedOverdueRemindersCount
allRemindersCount
allOverdueRemindersCount
todayRemindersCount
todayOverdueRemindersCount
siriFoundInAppsRemindersCount
defaultList
updatedAccountObjectIDs
updatedListObjectIDs
account
children
Parameters
Result
RawValue
objectID
type
name
listIDsMergeableOrdering
listsDADisplayOrderChanged
markedForRemoval
didChooseToMigrate
didFinishMigration
inactive
externalIdentifier
externalModificationTag
daSyncToken
daPushKey
daConstraintsDescriptionPath
daAllowsCalendarAddDeleteModify
daSupportsSharedCalendars
daWasMigrated
listIDsToUndelete
lists
CDIngestableStorageType
CDIngestableCoreDataType
CDIngestableValueKey
CDIngestableRelationshipKey
CDIngestableOrderableRelationshipKey
CDIngestableRelationshipOrderingValueKey
AllCases
RawValue
queue
notificationCenter
lock
alreadyPosted
source
sourceIndex
reorderedIndex
elements
moveIndices
insert
delete
update
move
DiffElementType
Element
Index
Iterator
SubSequence
Indices
masterStore
accountID
state
completionHandlers
lock
migrationResult
migrationError
invocationCount
failureCount
isTerminated
stateRestored
dismissed
disableCache
waitingForReachability
wasUserInitiated
idle
active
completed
failed
RawValue
clientConnection
cancelled
operationID
completion
state
ready
executing
finished
applicationShortcutLists
delegate
queue
masterStoreNotificationCenter
masterStoreObservationToken
preferredDefaultListIDObservationToken
dataView
isStarted
badgeEmblem
color
isGroup
lastUserAccessDate
name
parentAccount
parentList
reminderIDsMergeableOrdering
reminderIDsMergeableOrderingAsset
reminderIDs
reminderIDsAsset
AllCases
RawValue
alarmIDs
allDay
attachmentIDs
completed
completionDate
contactHandles
creationDate
dueDate
flagged
importedICSData
lastModifiedDate
list
notesDocument
notesDocumentAsset
parentReminder
priority
recurrenceRuleIDs
startDate
timeZone
titleDocument
titleDocumentAsset
userActivity
AllCases
RawValue
rawValue
predicate
ArrayLiteralElement
RawValue
Element
queue
name
xpcEventStream
xpcEventStreamToken
eventHandler
rawValue
insertion
deletion
update
objectID
recurrenceEnd
frequency
interval
firstDayOfTheWeek
daysOfTheWeek
daysOfTheMonth
daysOfTheYear
weeksOfTheYear
monthsOfTheYear
setPositions
accountID
reminderID
dayOfTheWeek
weekNumber
CDIngestableStorageType
CDIngestableCoreDataType
CDIngestableValueKey
CDIngestableRelationshipKey
CDIngestableOrderableRelationshipKey
CDIngestableRelationshipOrderingValueKey
AllCases
RawValue
reminder
height
width
fileName
fileSize
metadata
metadataAsset
AllCases
RawValue
implementation
applyCRDTsWithoutMerging
noSideEffectChanges
clientIdentity
changedKeys
masterStore
managedObjectContext
mode
upsertBlocks
establishRelationshipBlocks
mutateRelationshipOrderingBlocks
fetchedObjectsMap
insertedObjectsMap
queue
timeEventStream
dataSource
beforeFirstUnlockNotificationEngine
started
delegate
notificationLongLook
notificationShortLook
reminderListiOS
reminderListmacOS
masterStore
debugPerformer
syncInterfacePerformerFactory
dataAccessRequestsWriter
indexingPerformer
contactInteractionWriter
siriSuggestedReminderWriter
coreSuggestionsHandler
service
generic_fetchByObjectIDs
generic_fetchByList
generic_fetchByParentReminderIDs
remindersList_fetchAll
remindersList_fetchParentsOnly
remindersList_fetchSubtasks
smartListScheduled
smartListFlagged
smartListToday
smartListAllReminders
searchResults
searchResults_fetchOnlyCompleted
dataaccess_fetchByExternalIdentifiers
dataaccess_fetchByDACalendarItemUniqueIdentifiers
eventKitBridging_fetchRemindersInLists
eventKitBridging_fetchIncompleteRemindersInLists
eventKitBridging_fetchCompletedRemindersInLists
alarmEngine_siriSuggestedReminder
siriSearch
analytics_fetchAllRemindersInAccount
analytics_fetchAllIncompleteRemindersInAccount
analytics_fetchAllFlaggedRemindersInAccount
analytics_fetchRemindersWithSubtasksInAccount
smartListScheduled_fetchOnlyCompleted
smartListFlagged_fetchAll
smartListToday_fetchOnlyCompleted
smartListToday_filterNearby
smartListAllReminders_fetchOnlyCompleted
smartListSiriFoundInApps
accountsList_allIncompleteReminders
spotlightIndexing_isEligible
complication
alarmEngine_containingContactHandles
todayNotificationEngine_todayNotification
performance_dynamicSignificantTimeNotificationEngine
list
parentReminder
alarmStorage
attachments
recurrenceRules
AllCases
RawValue
StorageType
queue
daemonController
masterStore
clientIdentity
activity
rawValue
state
Element
RawValue
ArrayLiteralElement
endDate
frequency
interval
occurrenceCount
setPositions
daysOfTheMonth
daysOfTheWeek
daysOfTheYear
firstDayOfTheWeek
monthsOfTheYear
weeksOfTheYear
reminder
AllCases
RawValue
errors
nonExistentRelationship
nonExistentValue
AllCases
RawValue
accountID
listID
objectID
uuidString
hostURL
externalIdentifier
externalModificationTag
daSyncToken
daPushKey
CDIngestableStorageType
CDIngestableCoreDataType
CDIngestableValueKey
CDIngestableRelationshipKey
CDIngestableOrderableRelationshipKey
CDIngestableRelationshipOrderingValueKey
AllCases
RawValue
masterStore
lock
observers
debouncer
uuid
token
queue
entityNames
handler
store
userDefaults
store
masterStore
accountID
listID
objectID
displayName
firstName
middleName
lastName
namePrefix
nameSuffix
nickname
address
status
accessLevel
CDIngestableStorageType
CDIngestableCoreDataType
CDIngestableValueKey
CDIngestableRelationshipKey
CDIngestableOrderableRelationshipKey
CDIngestableRelationshipOrderingValueKey
AllCases
RawValue
identifier
queue
target
eventHandler
reader
itemTypes
objectID
listID
textualField
isCompleted
hasLocation
location
dueDate
hasDueDate
modifiedDate
creationDate
isRecurrent
isFlagged
spotlightItemIdentifier
exact
prefix
word
reminder
list
RawValue
castFailed
cancelled
abandoned
seal
firstBlockHasRun
serialQueue
queue
performOperation
operationDidFinish
operationStateByID
succeeded
failed
running
queue
listProvider
shortcutUpdater
objectID
metadata
accountID
reminderID
fileSize
fileURL
data
width
height
CDIngestableStorageType
CDIngestableCoreDataType
CDIngestableValueKey
CDIngestableRelationshipKey
CDIngestableOrderableRelationshipKey
CDIngestableRelationshipOrderingValueKey
AllCases
RawValue
store
reminderFetchLimit
accountStorages
listStorages
reminderStorages
additionalReminderCount
reminders
XPCResult
ClientResult
delegate
clientIdentity
xpcDaemon
xpcConnection
keepAliveTransaction
allowedOperationsCount
throttleInterval
identifier
queue
throttleResetDate
currentIntervalAllowedOperationsCount
state
handlers
resolution
lock
resolved
rejected
cancelled
pending
queue
dataSource
delegate
connectedToken
disconnectedToken
started
masterStore
store
lists
Parameters
Result
value
sourceIndex
sortedIndex
remindersBatchSize
accountDataMoverSaveRequestAuthorString
store
statistics
currentSaveRequest
listsChanged
remindersChanged
queue
masterStore
xpcEventSetter
currentStatus
queue
delegate
q_locationManager
queue
reminderAlarmDelegate
siriSuggestedReminderDelegate
beforeFirstUnlockReminderDelegate
notificationCenter
identifier
completed
list
parentReminder
latitude
longitude
radius
name
color
AllCases
RawValue
accountID
bundleID
serializedData
xpcDaemon
clientIdentity
storeContainerToken
acceptCalDAVShare
rejectCalDAVShare
masterStore
clientIdentity
storeProvider
dataAccessRequestsWriter
contactInteractionWriter
siriSuggestedReminderWriter
coreSuggestionsHandler
reminderAlarm
siriSuggestedReminder
caldavSharedList
todayNotification
todayNotificationBadge
beforeFirstUnlock
objectID
daCalendarItemUniqueIdentifier
AllCases
RawValue
queue
userDefaults
pollBlock
eventStream
configuration
insertion
deletion
move
update
single
queue
delegate
locationManager
dataSource
fileURL
remStore
storages
decodedObjectsCache
uuid
entityName
objectIDUUID
green
blue
alpha
colorSpace
daSymbolicColorName
daHexString
ckSymbolicColorName
title
locationUID
latitude
longitude
radius
address
routing
referenceFrameString
contactLabel
mapKitHandle
RawValue
masterStore
significantTimeNotificationStream
contactStore
queue
backgroundQueue
contactFetchOperationManager
meCard
contactRepresentation
keys
notFound
xpcDaemon
xpcClientConnectionListener
alarmEngine
todayEngine
applicationShortcutEngine
coreSuggestionController
coreSuggestionNotificationHandler
objectID
externalIdentifier
externalModificationTag
daSyncToken
daPushKey
daExternalIdentificationTag
daBulkRequests
daDisplayOrder
daIsEventOnlyContainer
daIsReadOnly
daIsImmutable
daIsNotificationsCollection
isGroup
lastUserAccessDate
name
color
badgeEmblem
showingLargeAttachments
reminderIDsMergeableOrdering
reminderIDsMergeableOrderingData
remindersICSDisplayOrderChanged
sharedOwnerName
sharedOwnerAddress
sharingStatus
sharees
calDAVNotifications
accountID
parentAccountID
parentListID
reminderIDsToUndelete
sharedOwnerID
reminders
CDIngestableStorageType
CDIngestableCoreDataType
CDIngestableValueKey
CDIngestableRelationshipKey
CDIngestableOrderableRelationshipKey
CDIngestableRelationshipOrderingValueKey
AllCases
RawValue
unfairLock
options
rawValue
mutex
Element
RawValue
ArrayLiteralElement
xpcDaemon
masterStore
storeContainerToken
store
objectID
didChooseToMigrate
didFinishMigration
identifier
name
type
active
delete
RawValue
address
contactLabel
latitude
locationUID
longitude
mapKitHandle
proximity
radius
referenceFrameString
routing
title
AllCases
RawValue
q_fetchCounts
q_saveCounts
q_postEventWorkItem
enabled
queue
masterStoreReadWriteEventName
initial
updatedInserted
none
model
diff
sortOrder
showCompleted
countCompleted
remindersPrefetch
objectIDs
currentLocation
list
after
objectID
isCompleted
subtasks
listID
listName
listColor
reminders
date
isToday
displayDate
priority
creationDate
title
manual
remindersCount
prefetchedReminders
updatedReminderObjectIDs
insertedReminderObjectIDs
updatedListObjectIDs
groups
completedRemindersCount
todayReminders
nearbyReminders
base
count
ascending
descending
completed
incomplete
sortDirection
afterDate
Parameters
Result
RawValue
didChooseToMigrate
didFinishMigration
listIDsMergeableOrdering
listIDsMergeableOrderingAsset
sharedListIDsToOwnerNames
AllCases
RawValue
rawValue
ArrayLiteralElement
RawValue
Element
queue
bannerTimeEventStream
badgeEventStream
userNotificationCenter
masterStoreNotificationCenter
daemonController
dynamicSignificantTimeNotificationEngine
masterStoreObservationToken
started
todayNotificationTimeObserver
producers
consumers
queue
masterStoreNotificationCenter
masterStorNotificationCenterToken
beforeFirstUnlockNotificationEngine
daemonController
started
reminder
origin
type
firesBeforeFirstUnlock
alarm
temporal
location
vehicle
peopleInteraction
siriSuggestion
active
passive
queue
masterStore
mode
next
value
previous
dataAccessRequestsQueue
remStoreProvider
userNotificationCenterProvider
masterStoreNotificationCenter
masterStorNotificationCenterToken
rdDaemonController
masterStore
userNotificationCenter
store
accountStorages
listStorages
reminderStorages
reminders
XPCResult
ClientResult
containerName
databaseType
apiToken
localServer
unknown
badHeaderLine
badURL
badRequest
badResponse
serverError
wrapped
functionTimeout
functionError
internalError
unknownFields
_storage
push
database
sandbox
production
privateDatabase
publicDatabase
sharedDatabase
orgDatabase
_host
_port
_useTls
_corporateSharingEnabled
_userID
_containerName
_databaseEnvironment
_databaseType
_deviceID
_applicationBundleID
_databasePartition
_clientInfo
_dsid
_userAgent
_code
_message
_path
_environment
_success
_serviceName
_functionName
_serializedParameters
_serializationFormat
_clientConfig
_accountConfig
_requestContext
_serviceType
_config
_serializedResult
_error
RawValue
invokeOperationFailedInitialization
invokeResponseMissing
invokeArgumentContainsUnattachedAssets
unknownFields
_storage
_name
_environment
_version
_dsid
_ckUserID
privateDb
publicDb
sharedDb
_container
_database
_databasePartition
_owner
_user
_deviceID
_applicationBundleID
_synchronousMode
RawValue
proto
json
RawValue
serviceName
containerName
databaseType
qualityOfService
sourceApplicationBundleIdentifier
requestCompletedBlock
credentials
baseURL
signingError
notImplemented
httpError
unexpectedResponse
invalidContainerName
invalidDatabaseType
invalidURL
development
production
parseError
missingResult
fromErrorProtocol
noResponse
apiToken
webAuthToken
RawValue
data
indentString
memory
capacity
onStack
value
protobufExtension
ValueType
alwaysPrintEnumsAsInts
trailingGarbage
truncated
invalidUTF8
malformedProtobuf
missingRequiredFields
internalExtensionError
messageDepthLimit
source
index
numberFormatter
recursionLimit
recursionBudget
ignoreUnknownFields
messageDepthLimit
discardUnknownFields
seconds
nanos
unknownFields
anyTranscodeFailure
timestampRange
durationRange
fieldMaskConversion
missingFieldNames
missingValue
IntegerLiteralType
FloatLiteralType
BooleanLiteralType
StringLiteralType
ExtendedGraphemeClusterLiteralType
UnicodeScalarLiteralType
data
unknownField
failure
malformedNumber
numberRange
malformedMap
malformedBool
malformedString
invalidUTF8
missingFieldNames
schemaMismatch
unrecognizedEnumValue
illegalNull
unquotedMapKey
leadingZero
truncated
malformedDuration
malformedTimestamp
malformedFieldMask
trailingGarbage
conflictingOneOf
messageDepthLimit
scanner
options
fieldCount
isMapKey
fieldNameMap
UNRECOGNIZED
proto2
proto3
unknownFields
_storage
kind
cardinality
number
name
typeURL
oneofIndex
packed
options
jsonName
defaultValue
typeUnknown
typeDouble
typeFloat
typeInt64
typeUint64
typeInt32
typeFixed64
typeFixed32
typeBool
typeString
typeGroup
typeMessage
typeBytes
typeUint32
typeEnum
typeSfixed32
typeSfixed64
typeSint32
typeSint64
unknown
optional
required
repeated
_name
_fields
_oneofs
_options
_sourceContext
_syntax
_enumvalue
_value
RawValue
AllCases
doubleFormatString
work
unknownFields
separator
encoder
options
encoder
typeMismatch
malformedWellKnownTypeJSON
malformedAnyField
scanner
fieldCount
terminator
fieldNameMap
messageType
varint
fixed64
lengthDelimited
startGroup
endGroup
fixed32
RawValue
values
fieldNumber
fieldName
messageType
value
unknownFields
available
fieldStartP
fieldEndP
consumed
fieldWireFormat
fieldNumber
extensions
groupFieldNumber
options
recursionBudget
unknownData
unknownOverride
malformedText
malformedNumber
trailingGarbage
truncated
invalidUTF8
schemaMismatch
missingFieldNames
unknownField
unrecognizedEnumValue
conflictingOneOf
internalExtensionError
hasher
anyTranscodeFailure
missingRequiredFields
BaseType
ArrayLiteralElement
seconds
nanos
unknownFields
fileName
unknownFields
unknownFields
_storage
name
requestTypeURL
requestStreaming
responseTypeURL
responseStreaming
options
syntax
root
_name
_methods
_options
_version
_sourceContext
_mixins
_syntax
data
separator
doubleFormatter
_typeURL
state
binary
message
contentJSON
Value
encoder
nameMap
options
paths
unknownFields
extensions
doubleFormatter
encoder
nameMap
nameResolver
extensions
serializedSize
interned
internPool
numberToNameMap
protoToNumberMap
jsonToNumberMap
same
standard
unique
aliased
json
proto
utf8Buffer
nameString
string
staticString
Value
UNRECOGNIZED
nullValue
fields
unknownFields
_storage
numberValue
stringValue
boolValue
structValue
listValue
values
_kind
RawValue
AllCases
pointer
unknownFields
_storage
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>18A391011</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDisplayName</key>
<string>Reminders</string>
<key>CFBundleIdentifier</key>
<string>com.apple.remindd</string>
<key>CFBundleName</key>
<string>remindd</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>11L374m</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>6.1</string>
<key>DTSDKBuild</key>
<string>17S73</string>
<key>DTSDKName</key>
<string>watchsimulator6.1.internal</string>
<key>DTXcode</key>
<string>1100</string>
<key>DTXcodeBuild</key>
<string>11L374m</string>
<key>MinimumOSVersion</key>
<string>6.1</string>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.remindd</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>production</string>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>data-allowed-write</string>
<string>spi</string>
</array>
<key>com.apple.application-identifier</key>
<string>com.apple.remindd</string>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.developer.aps-environment</key>
<string>production</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.reminders</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudKit</string>
</array>
<key>com.apple.developer.ubiquity-container-identifiers</key>
<string></string>
<key>com.apple.locationd.effective_bundle</key>
<true/>
<key>com.apple.locationd.region_proxy_service</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.aps-connection-initiate</key>
<true/>
<key>com.apple.private.calendar.changeIdTrackingOverride</key>
<true/>
<key>com.apple.private.calendar.syncclient</key>
<true/>
<key>com.apple.private.canGetAppLinkInfo</key>
<true/>
<key>com.apple.private.cloudkit.customAccounts</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.setEnvironment</key>
<true/>
<key>com.apple.private.cloudkit.systemService</key>
<true/>
<key>com.apple.private.corespotlight.internal</key>
<true/>
<key>com.apple.private.kernel.override-cpumon</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.suggestions.reminders</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
</array>
<key>com.apple.private.tcc.allow.overridable</key>
<array>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceAddressBook</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.reminders</string>
<string>com.apple.NanoReminders</string>
</array>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.reminders</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/usr/libexec</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/tmp/com.apple.remindd/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-only</key>
<array>
<string>Library/Caches/com.apple.itunesstored/url-resolution.plist</string>
<string>Library/Caches/com.apple.AppleAccount/</string>
</array>
<key>com.apple.security.exception.files.home-relative-path.read-write</key>
<array>
<string>Library/Reminders/</string>
<string>Library/Caches/com.apple.remindd/</string>
<string>Library/Logs/CrashReporter/Reminders/</string>
</array>
<key>com.apple.security.exception.iokit-user-client-class</key>
<array>
<string>RootDomainUserClient</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.suggestd.reminders</string>
<string>com.apple.remindd</string>
<string>com.apple.cloudd</string>
<string>com.apple.apsd</string>
<string>com.apple.usernotifications.usernotificationservice</string>
<string>com.apple.analyticsd</string>
<string>com.apple.spotlight.IndexAgent</string>
<string>com.apple.managedconfiguration.profiled</string>
<string>com.apple.frontboard.systemappservices</string>
<string>com.apple.appconduitd.device-connection</string>
<string>com.apple.contactsd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.UIKit</string>
<string>com.apple.nanobuddy</string>
<string>com.apple.persistentconnection</string>
<string>com.apple.purplebuddy</string>
<string>com.apple.DataAccess.BehaviorOptions</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.remindd.babysitter</string>
<string>com.apple.remindd</string>
<string>group.com.apple.reminders</string>
<string>com.apple.persistentconnection-mcc</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.temporary-exception.mach-lookup.global-name</key>
<array>
<string>com.apple.suggestd.reminders</string>
<string>com.apple.cloudd</string>
<string>com.apple.apsd</string>
<string>com.apple.analyticsd</string>
</array>
<key>com.apple.security.ts.application-group-support</key>
<true/>
<key>com.apple.security.ts.cloudkit-client</key>
<true/>
<key>com.apple.security.ts.location-services</key>
<true/>
<key>com.apple.security.ts.power-assertions</key>
<true/>
<key>com.apple.security.ts.springboard-services</key>
<true/>
<key>com.apple.springboard.shortcutitems.fullaccess</key>
<true/>
<key>com.apple.symptom_diagnostics.report</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>temporary-sandbox</string>
</array>
</dict>
</plist>
Q(_`
i i
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
Alarm
Alarm
List
List
Reminder
Reminder
Attachment
Attachment
alarm
alarm.reminder
alarm
alarm.reminder
alarm
alarm.reminder
RecurrenceRule
RecurrenceRule
AlarmTrigger
AlarmTrigger
Account
Account
ckCloudState
MigrateRequest
MigrateResponse
EmptyRequest
BasicResponse
PingRequest
PingResponse
null
false
true
null
false
true
alse
infinity
null
infinity
infinity
