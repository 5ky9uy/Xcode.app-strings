hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
emailAddressStrings
T@"NSArray",R,C,N
hostname
T@"NSString",C,N
password
identifier
T@"NSString",R,C,N
systemAccount
T@"ACAccount",R,C,N
statisticsKind
primaryiCloudAccount
TB,R,N
isManaged
sourceIsManaged
emailAddresses
T@"NSArray",R,N
smtpIdentifier
isLocalAccount
shouldArchiveByDefault
maximumMessageBytes
TQ,R,N
v16@?0@"<EMReceivingAccountBuilder>"8
v16@?0@"<EMDeliveryAccountBuilder>"8
com.apple.email
v8@?0
B16@?0@"<EDAccount>"8
@"EMAccount"16@?0@"<EDAccount>"8
T@"NSObject<OS_os_log>",R
transformer
T@"EDAccountECAccountTransformer",&,N,V_transformer
accountsProvider
T@"<EDAccountsProvider>",&,N,V_accountsProvider
hookRegistry
T@"EDPersistenceHookRegistry",W,N,V_hookRegistry
activityHookResponder
T@"<EDActivityHookResponder>",&,N,V_activityHookResponder
activityPersistence
T@"EDActivityPersistence",R,N,V_activityPersistence
T@"EDPersistenceHookRegistry",R,N,V_hookRegistry
CREATE INDEX IF NOT EXISTS messages_deleted_date_received_index ON messages(deleted, date_received);
messages
mailboxes
conversations
conversation_id
thread_scopes
mailbox
mailbox_type
filter_predicate
needs_update
last_viewed
threads
scope
conversation
newest_read_message
display_message
date
read
flagged
has_red_flag
has_orange_flag
has_yellow_flag
has_green_flag
has_blue_flag
has_purple_flag
has_gray_flag
draft
replied
forwarded
redirected
junk_level_set_by_user
junk_level
has_unflagged
has_attachments
count
thread_mailboxes
thread
thread_senders
address
priority
thread_recipients
type
v40@?0@"EFSQLTableSchema"8@"NSString"16@"EFSQLTableSchema"24Q32
v32@?0@"EFSQLTableSchema"8@"NSString"16@"EFSQLTableSchema"24
threadScopesTableSchema
T@"EFSQLTableSchema",R,N
threadsTableSchema
threadMailboxesTableSchema
threadSendersTableSchema
threadRecipientsTableSchema
MSAssetDownloadRetryInterval
%@.%@
v16@?0@"NSObject<OS_xpc_object>"8
_identifier
T@"NSString",C,N,V_identifier
_lastFailureIntervalKey
T@"NSString",C,N,V_lastFailureIntervalKey
_handler
T@?,C,N,V_handler
_regularInterval
Tq,N,V_regularInterval
_failureInterval
Tq,N,V_failureInterval
_backOffFactor
Tq,N,V_backOffFactor
_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
activityHandlerBlock
T@?,R,N
scheduler
T@"EDAssetDownloadScheduler",W,N,V_scheduler
activity
T@"NSObject<OS_xpc_object>",&,N,V_activity
R %@
S %@
predictor
T@"<EDMailboxPredictor>",&,N,V_predictor
cache
T@"NSCache",&,N,V_cache
cacheKeysByProperty
T@"NSMutableDictionary",&,N,V_cacheKeysByProperty
logUploader
T@"EDInteractionEventLogUploader",&,N,V_logUploader
logFile
T@"EDInteractionEventLogFile",&,N,V_logFile
interactionLogger
T@"EDInteractionLogger",R,N,V_interactionLogger
donationController
T@"EDDonationController",R,N,V_donationController
visibleMailboxesObjectIds
T@"NSArray",R,N,V_visibleMailboxesObjectIds
isForeground
TB,R,N,V_isForeground
CloudKitControl
ckRecordID
T@"NSString",C,D,N
ckRecordSystemFields
T@"NSData",&,D,N
migratedFromKVSStorage
TB,D,N
com.apple.mail.EDCloudMirroringPersistentStore.schedulers
CloudKitMirroringDataModel
momd
CloudKitMailConversationsFlags/CloudKitMirroringDataModel
com.apple.mail.preferences
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
v16@?0@"NSManagedObjectContext"8
v16@?0@"NSCloudKitMirroringResult"8
persistentContainer
T@"NSPersistentContainer",R,N,V_persistentContainer
importScheduler
T@"EDTaskScheduler",&,N,V_importScheduler
exportScheduler
T@"EDTaskScheduler",&,N,V_exportScheduler
managedObjectContext
T@"NSManagedObjectContext",R,N,V_managedObjectContext
com.apple.email.ConversationDailyExporter
delegate
T@"<EDConversationDailyCloudExporterDelegate>",R,N,V_delegate
conversationManager
T@"EDUbiquitousConversationManager",R,N,V_conversationManager
ConversationInfo
conversationUUID
lastModified
T@"NSDate",C,D,N
messageIds
notifyMe
muted
last-modified
com.apple.mail.EDConversationMultipleRemoteStorage
Multiple Storages: [%@, %@]
T@"<EDConversationRemoteStorageDelegate>",W,N,V_delegate
privateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_privateQueue
kvsStorage
T@"<EDConversationRemoteStorage>",&,N,V_kvsStorage
cloudKitStorage
T@"EDConversationRemoteCloudKitStorage",&,N,V_cloudKitStorage
dataReplicationTransaction
T@"EDTransactionService",&,N,V_dataReplicationTransaction
conversation_id_message_id
SyncAnchorForLastDailyConversationExport
EDConversationFlagsChanged
EDConversationFlagsChangedConversationIDKey
EDConversationFlagsChangesKey
EDConversationFlagsKey
EDConversationFlagsReason
EDConversationFlagsOldFlags
MessageConversationIsVIP
MessageConversationIsMuted
flags
sync_key
message_id
date_sent
com.apple.email.ConversationPersistenceNotification
SELECT conversation_id, sync_key FROM conversations WHERE sync_key NOT NULL
v32@?0@"EFSQLRow"8Q16^B24
Selecting synced conversations
B16@?0@"EDPersistenceDatabaseConnection"8
:conversation_id
:limit
SELECT message_id FROM conversation_id_message_id WHERE conversation_id = :conversation_id ORDER BY date_sent DESC LIMIT :limit
Selecting message IDs for conversation ID
SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE message_id IN (%@)
Selecting conversation ID for message IDs
SELECT flags FROM conversations WHERE conversations.conversation_id = :conversation_id
Selecting flags for conversation ID
INSERT INTO conversations (flags) values (:flags)
:flags
Creating conversation.
SELECT flags FROM conversations WHERE conversation_id = :conversation_id LIMIT 1
Finding old conversation flags
UPDATE conversations SET flags = :flags, sync_key = :sync_key WHERE conversation_id = :conversation_id
:sync_key
Setting conversation flags
SELECT message_id, date_sent from messages where ROWID IN (%@)
Selecting message IDs to update conversation association table.
SELECT conversation_id FROM conversations where conversation_id = %@
Executing querying for conversation id
INSERT OR REPLACE INTO conversation_id_message_id (conversation_id, message_id, date_sent) VALUES (:conversation_id, :message_id, :date_sent)
:message_id
:date_sent
Setting conversation association table entries
DELETE FROM conversations WHERE conversation_id NOT IN (SELECT DISTINCT conversation_id from messages) AND (sync_key IS NULL AND conversation_id NOT IN (SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE date_sent > :older_than));
:older_than
Pruning conversations table
UPDATE conversation SET flags = :flags, sync_key = NULL WHERE conversation_id IN (%@)
SELECT value FROM properties WHERE key = '%@'
value
Selecting previous conversation daily export sync anchor
SELECT max(ROWID) as syncAnchor from messages
syncAnchor
Selecting current conversation sync anchor for daily export
INSERT OR REPLACE INTO properties (key, value) VALUES (:key, :value)
:key
:value
Updating previous conversation sync anchor for daily export
SELECT DISTINCT conversations.conversation_id AS conversation_id FROM conversations LEFT JOIN messages on messages.conversation_id = conversations.conversation_id WHERE messages.ROWID > :start AND messages.ROWID < :end AND conversations.flags != 0;
:start
:end
hasSubscribedConversations
conversationsTableSchema
conversationIDMessageIDTableSchema
conversationsTableName
database
T@"EDPersistenceDatabase",R,W,N,V_database
notificationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
com.apple.email.ConversationPruning
message-ids
EDConversationRemoteCloudKitStoragePushNotificationName
kCloudStoreHistoryTokenUserDefaultsKey
com.apple.icloud-container.com.apple.nanomaild
%@-Export
%@-Import
v12@?0B8
conversationUUID == %@
v24@?0@"NSPersistentHistoryTransaction"8^B16
mirroringPersistentStore
T@"EDCloudMirroringPersistentStore",R,N,V_mirroringPersistentStore
fetchedResultsController
T@"NSFetchedResultsController",R,N,V_fetchedResultsController
initialized
TB,N,GisInitialized,V_initialized
historyToken
T@"NSPersistentHistoryToken",&,N,V_historyToken
exportTransaction
T@"EDTransactionService",&,N,V_exportTransaction
importTransaction
T@"EDTransactionService",&,N,V_importTransaction
TB,D,N,GisMigratedFromKVSStorage
com.apple.mail.threadinfo
com.apple.mail.EDConversationRemoteKVSStorage
succeeded
failed
v32@?0@"NSString"8Q16^B24
v32@?0@"NSString"8@16^B24
kvStore
T@"NSUbiquitousKeyValueStore",&,N,V_kvStore
NSUbiquitousKeyValueStoreServerChange
NSUbiquitousKeyValueStoreInitialSyncChange
NSUbiquitousKeyValueStoreQuotaViolationChange
unknown change reason (%lu)
-[EDDaemonInterfaceFactory newOutgoingMessageRepository]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Server/EDDaemonInterfaceFactory.m
categorySubsystem
T@"EDCategorySubsystem",&,N,V_categorySubsystem
persistence
T@"EDPersistence",R,N,V_persistence
com.apple.mail.SenderDomain
T@,&,N,V_value
Td,N,V_ttl
lastSet
T@"NSDate",&,N,V_lastSet
com.apple.mail.EDDifferentialPrivacyReporter
@"NSSet"8@?0
en_US
en_GB
en_CA
en_AU
fr_FR
de_DE
ja_JP
OTHER
recordingHandler
T@?,C,N,V_recordingHandler
recordingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recordingQueue
_recordingKey
T@"NSString",&,N,V_recordingKey
_profileProvider
T@"<EMUserProfileProvider>",W,N,V_profileProvider
_userDomains
T@"_MSTTLReference",&,N,V_userDomains
_mailDynamicData
T@"EDMailDynamicDataAsset",&,N,V_mailDynamicData
v24@?0@"NSString"8@"NSString"16
B16@?0@"<EMExtendedContentItem>"8
v24@?0@"EMContentRepresentation"8@"NSError"16
mode
order
weights
weightedThreshold
orderedThreshold
ignoreUserAddresses
confusionThreshold
limitToRecentMessages
ordered
weighted
conversationID
sender
recipient
listID
MFUserCreatedMailboxIDs
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Mailbox Prediction/EDHeuristicsMailboxPredictor.m
<Unknown File>
Invalid parameter not satisfying: %@
[mergedParams[kConfusionThresholdParameterKey] isKindOfClass:[NSNumber class]] || [mergedParams[kConfusionThresholdParameterKey] isKindOfClass:[NSNull class]]
[mergedParams[kOrderParameterKey] isKindOfClass:[NSArray class]]
[mergedParams[kWeightsParameterKey] isKindOfClass:[NSDictionary class]]
Unknown mode: %@
Unknown field: %@
v32@?0@"NSString"8@"NSNumber"16^B24
userProfileProvider
T@"<EMUserProfileProvider>",&,N,V_userProfileProvider
library
T@"<EDMailboxPredictionQueryAdapter>",&,N,V_library
parameters
T@"NSDictionary",&,N,V_parameters
mailboxIDCache
T@"NSCache",&,N,V_mailboxIDCache
debugLog
T@"NSMutableString",&,N,V_debugLog
B16@?0@"EMMessage"8
v16@?0@"<EMThreadBuilder>"8
v32@?0@"EMMessage"8Q16^B24
B32@?0@"EMMessage"8Q16^B24
threadScope
T@"EMThreadScope",R,N,V_threadScope
T@"EMThread",&,N,V_thread
originatingQuery
T@"EFQuery",R,N,V_originatingQuery
mailboxTypeResolver
T@"<EMMailboxTypeResolver>",R,N,V_mailboxTypeResolver
newestMessage
T@"EMMessage",R,N
displayMessage
T@"EMMessage",&,N,V_displayMessage
In-memory threads
com.apple.email.%@.%p
com.apple.mail.EDInMemoryThreadQueryHandler.contentProtection
com.apple.mail.EDInMemoryThreadQueryHandler.result
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Message List/EDInMemoryThreadQueryHandler.m
Unable to get acknowledgement token for in-memory thread query handler
@"EMThreadObjectID"16@?0@"NSNumber"8
v24@?0@"NSArray"8^B16
v32@?0@"NSNumber"8@"NSArray"16^B24
v24@?0@"EMMessageListItemChange"8@"EMThreadObjectID"16
@"NSNumber"16@?0@"EMMessage"8
v32@?0@"EMThreadObjectID"8@"EMMessageListItemChange"16^B24
@16@?0@"EDInMemoryThread"8
@"NSNumber"16@?0@"EDInMemoryThread"8
B16@?0@"<ECEmailAddressConvertible>"8
v32@?0@"NSNumber"8@"EDInMemoryThread"16^B24
_oldestThreadsByMailboxObjectIDs should be only initialized once
v32@?0@"EDInMemoryThread"8Q16^B24
v32@?0@"EMMailboxObjectID"8@"EMThread"16^B24
v32@?0@"NSNumber"8Q16^B24
@"EMThreadObjectID"16@?0@"EMThread"8
thread.
vipManager
T@"EDVIPManager",R,N,V_vipManager
remoteSearchProvider
T@"<EDRemoteSearchProvider>",R,N,V_remoteSearchProvider
resultsObserverIfNotPaused
T@"<EMMessageListItemQueryResultsObserver>",R,N
messageQueryHelper
T@"EDMessageQueryHelper",&,N,V_messageQueryHelper
messageSortDescriptors
T@"NSArray",R,C,N,V_messageSortDescriptors
comparator
T@?,R,N,V_comparator
updateThrottler
T@"EDUpdateThrottler",R,N,V_updateThrottler
reloadSummaryHelper
T@"EDThreadReloadSummaryHelper",R,N,V_reloadSummaryHelper
T@"<EFScheduler>",R,N,V_scheduler
contentProtectionQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_contentProtectionQueue
resultQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_resultQueue
didCancel
TB,N,V_didCancel
isInitialized
TB,N,V_isInitialized
isPaused
TB,N,V_isPaused
hasChangesWhilePaused
TB,N,V_hasChangesWhilePaused
mailboxScope
T@"EMMailboxScope",R,N,V_mailboxScope
<%@ %p
 eventID=%lld
 version=%ld
 name=%@
 date=%@
 accountID=%@
 mailboxID=%lld
 conversationID=%lld
 messageIDHash=%lld
 messagePersistentID=%lld
 data=%@
eventID
Tq,N,V_eventID
version
Tq,N,V_version
T@"NSDate",&,N,V_date
accountID
T@"NSString",C,N,V_accountID
mailboxID
Tq,N,V_mailboxID
Tq,N,V_conversationID
messageIDHash
Tq,N,V_messageIDHash
messagePersistentID
Tq,N,V_messagePersistentID
name
T@"NSString",C,N,V_name
data
T@"NSDictionary",C,N,V_data
duration
scrolled_to_end
<%@ %p: %@>
logs
T@"NSArray",&,N,V_logs
com.apple.mail.interaction-log.salt
com.apple.mail
q24@?0@"NSDictionary"8@"NSDictionary"16
salt
T@"NSData",&,N,V_salt
lock
T{os_unfair_lock_s=I},N,V_lock
viewingStarted
T@"NSDate",&,N,V_viewingStarted
message
T@"<ECMessage>",&,N,V_message
scrolledToEnd
TB,N,V_scrolledToEnd
mutedThread
TB,N,V_mutedThread
T@"NSString",C,N,V_key
cellStyle
T@"NSString",C,N,V_cellStyle
messageListType
T@"NSString",C,N,V_messageListType
Tq,N,V_row
com.apple.mail.EDInteractionLoggerStateTracking
com.apple.email.EDInteractionLoggerProcessing
reply_draft_started
forward_draft_started
message_view_start
message_view_end
message_list_display_started
message_list_type
position
cell_style
message_list_display_ended
v32@?0@"NSString"8@"_EDUserActionState"16^B24
message_moved
message_copied
link_clicked
ConversationViewExcludesRelatedMessages
ConversationViewShowsNewestAtTop
LinesOfPreview
NumberOfActiveAccounts
DisableThreading
LeftEdgeSwipeAction
RightEdgeSwipeAction
ColumnLayoutMessageList
NumberOfSnippetLines
@"NSDictionary"16@?0@8
ConversationViewSortDescending
ConversationViewSpansMailboxes
@"NSDictionary"16@?0@"NSNumber"8
AccountOrdering
@"NSDictionary"16@?0@"NSArray"8
v32@?0@8@16^B24
app_launch
app_background
app_resume
marked_mute_thread
message_fetched
read_changed
flag_changed
reply_sent
forward_sent
message_sent
_viewedMessages
T@"NSMutableDictionary",&,N,V_viewedMessages
_messageListMessages
T@"NSMutableDictionary",&,N,V_messageListMessages
_messageListVisibleRows
T{_NSRange=QQ},N,V_messageListVisibleRows
_stateTrackingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_stateTrackingQueue
messagePersistence
T@"EDMessagePersistence",&,N,V_messagePersistence
mailboxPersistence
T@"EDMailboxPersistence",&,N,V_mailboxPersistence
_eventLog
T@"<EDInteractionEventLog>",&,N,V_eventLog
processingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_processingQueue
local_message_actions
action_messages
action_labels
action_flags
action
source_mailbox
destination_mailbox
action_type
destination_message
label
user_initiated
action_phase
remote_id
do_add
flag_type
flag_value
-[EDLocalActionPersistence init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Syncing/Local Actions/EDLocalActionPersistence.m
SELECT ROWID, action_type, user_initiated, mailbox, source_mailbox, destination_mailbox FROM local_message_actions WHERE ((mailbox IN (SELECT ROWID FROM mailboxes WHERE url GLOB '%@*')) AND (ROWID > ?)) ORDER BY ROWID
ROWID
DELETE FROM local_message_actions WHERE ROWID IN (%@);
deleting actions
SELECT action_phase, remote_id, message, destination_message FROM action_messages WHERE action = ?
v16@?0@"<ECTransferMessageActionItemBuilder>"8
Creating a transfer action when we don't have a transfer action type
v16@?0@"<ECTransferMessageActionBuilder>"8
A transfer all action should always have exactly one remote ID associated with it
v16@?0@"<ECTransferUndownloadedMessageActionBuilder>"8
v16@?0@"<ECFlagChangeMessageActionBuilder>"8
A flag change all action should always have exactly one remote ID associated with it
v16@?0@"<ECFlagChangeUndownloadedMessageActionBuilder>"8
SELECT label, do_add FROM action_labels WHERE action = ?
v16@?0@"<ECLabelChangeMessageActionBuilder>"8
SELECT remote_id, message FROM action_messages WHERE action = ?
SELECT flag_type, flag_value FROM action_flags WHERE action = ?
v16@?0@"<ECMessageFlagChangeBuilder>"8
-[EDLocalActionPersistence messageForDatabaseID:]
INSERT INTO local_message_actions (action_type, mailbox) VALUES (?, ?)
Adding flag change action
INSERT INTO action_flags (action, flag_type, flag_value) VALUES (?, ?, ?)
v28@?0B8q12q20
Adding flag change records
INSERT INTO local_message_actions (action_type, user_initiated, mailbox, source_mailbox, destination_mailbox) VALUES (?, ?, ?, ?, ?)
Adding copy action
copy
append
move
delete
INSERT INTO action_labels (action, label, do_add) VALUES (?, ?, ?)
Adding flag change messages
UPDATE local_message_actions SET mailbox = :mailbox WHERE ROWID = :action
:action
:mailbox
Updating action phase
source mailbox
destination mailbox
-[EDLocalActionPersistence moveSupportedFromMailboxURL:toURL:]
UPDATE action_messages SET action_phase = %ld WHERE action = %llu AND %@
Updating copy item phase
DELETE FROM action_messages WHERE action = %llu AND %@
Deleting copy items
Copy item had neither a source remoteID or a destination message
(remote_id IN (%@) OR destination_message IN (%@)
remote_id IN (%@)
destination_message IN (%@)
DELETE FROM local_message_actions WHERE ROWID = ?
Removing completed action
T@"EDPersistenceDatabase",R,N,V_database
gmailLabelPersistence
T@"EDGmailLabelPersistence",R,N,V_gmailLabelPersistence
@"EMMailboxObjectID"16@?0@"EMMailbox"8
/Notes
-[EDMailboxPersistence mailboxDatabaseIDsForMailboxObjectIDs:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Mailboxes/EDMailboxPersistence.m
-[EDMailboxPersistence createMailbox:parentMailboxID:]
-[EDMailboxPersistence deleteMailbox:]
-[EDMailboxPersistence moveMailbox:newParentMailboxID:]
-[EDMailboxPersistence renameMailbox:newName:]
changeObserversByIdentifier
T@"NSMutableDictionary",&,N,V_changeObserversByIdentifier
mailboxProvider
T@"<EDMailboxProvider>",&,N,V_mailboxProvider
com.apple.mail.MailboxPrediction.processing
B16@?0@"EMMailbox"8
v16@?0@"NSArray"8
queryAdapter
T@"<EDMailboxPredictionQueryAdapter>",R,N,V_queryAdapter
T@"NSObject<OS_dispatch_queue>",R,N,V_processingQueue
cachingPredictor
T@"EDCachingMailboxPredictor",R,N,V_cachingPredictor
T@"EDMailboxPersistence",R,N,V_mailboxPersistence
T@"<EMUserProfileProvider>",R,N,V_userProfileProvider
com.apple.email.EDMessageRepository.serializationQueue
@16@?0@"EMMailbox"8
serializationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serializationQueue
-[EDMailDropMetadataGenerator generateMailDropMetadataForContentURL:completionHandler:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Messages/EDMailDropMetadataGenerator.m
-[EDMailDropMetadataGenerator insertMaildropAttachmentViewForContentURL:HTMLByContentID:completionHandler:]
-[EDMailDropMetadataGeneratorFactory newMailDropMetadataGenerator]
com.apple.MobileAsset.MailDynamicData
IgnoreAccountDomains
IgnoredDomains
com.apple.mailsupport.downloadMobileAssetCatalog
gmail.com
googlemail.com
hotmail.co
hotmail.co.uk
hotmail.com
hotmail.eu
hotmail.net
hotmail.org
icloud.com
me.com
outlook.co
outlook.com
outlook.eu
outlook.org
rocketmail.com
ymail.com
v16@?0@"<EDAssetDownloadSchedulerContinuation>"8
apple.com
group.apple.com
v16@?0q8
TelemetryConfig.plist
shouldIgnoreUserAccountDomains
TB,V_shouldIgnoreUserAccountDomains
ignoredDomains
T@"NSSet",&,V_ignoredDomains
T@"EDAssetDownloadScheduler",&,N,V_scheduler
com.apple.email.signposts
com.apple.email.EDMessageChangeManager
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Messages/EDMessageChangeManager.m
HookResponder does not respond to all of the methods required by the EDMessageChangeManager.
-[EDMessageChangeManager init]
@"<NSCopying>"16@?0@"<ECMessage>"8
v32@?0@"<ECMessage>"8@"<ECMessage>"16^B24
B16@?0@"<ECMessage>"8
v32@?0@"NSURL"8@"NSArray"16^B24
v16@?0@"<ECIMAPServerMessageBuilder>"8
Got foreign key constraint
Calling reflectFlagChanges:forMessages: on IMAP
Reflect all deleted server messages for a data source without server messages
v32@?0@"NSDictionary"8@"NSMutableArray"16^B24
v32@?0@"ECMessageFlagChange"8@"NSMutableArray"16^B24
v32@?0@"ECTransferMessageActionItem"8@"NSData"16^B24
v16@?0@"<ECServerMessageBuilder>"8
-[EDMessageChangeManager accountForMailboxURL:]
localActionPersistence
T@"EDLocalActionPersistence",R,N,V_localActionPersistence
serverMessagePersistenceFactory
T@"EDServerMessagePersistenceFactory",R,N,V_serverMessagePersistenceFactory
markAllWorkQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_markAllWorkQueue
hookResponder
T@"<EDMessageChangeHookResponder>",R,W,N,V_hookResponder
EDNotificationWillSyncMailbox
EDNotificationDidSyncMailbox
EDNotificationKeyMailbox
%@-MailboxObserver-%@
%@-MessagesPendingFlagChangesKey-%p
v40@?0@"EMObjectID"8q16q24q32
full count
v32@?0@"EMObjectID"8@"_EDMailboxServerCount"16^B24
All updates acknowledged
Finished syncing mailbox %@
Original
Changed messages from %lld matches to %lld matches
New match after changing number of attachments
Deleted %lld messages
Changed message ID to one we've already counted
server-count set to %lld for %@
most-recent-status-count set to %lld for %@
last-sync and most-recent-status-count to %lld for %@
defaultScheduler
T@"<EFScheduler>",R,N
query
T@"EFQuery",&,N,V_query
expandedQuery
T@"EFQuery",&,N,V_expandedQuery
predicateIgnoringFlags
T@"NSPredicate",&,N,V_predicateIgnoringFlags
serverCountMailboxScope
T@"EMMailboxScope",R,N,V_serverCountMailboxScope
queryEvaluator
T@"EDMessageQueryEvaluator",&,N,V_queryEvaluator
resultsObserver
T@"<EMMessageRepositoryCountQueryObserver_xpc>",&,N,V_resultsObserver
T@"EDPersistenceHookRegistry",&,N,V_hookRegistry
cancelationToken
T@"EFCancelationToken",&,N,V_cancelationToken
T@"EDUpdateThrottler",&,N,V_updateThrottler
pendingFlagChangesKey
T@"NSString",R,V_pendingFlagChangesKey
localCount
Tq,N,V_localCount
serverCount
Tq,N,V_serverCount
mostRecentStatusCount
Tq,N,V_mostRecentStatusCount
lastSyncStatusCount
Tq,N,V_lastSyncStatusCount
senderAddress.emailAddressValue.displayName
senderAddress.emailAddressValue.simpleAddress
toList.emailAddressValue.displayName
toList.emailAddressValue.simpleAddress
ccList.emailAddressValue.displayName
ccList.emailAddressValue.simpleAddress
mailboxObjectIDs.url.absoluteString
subject.subjectString
body
AnyRecipient
From
Subject
Spotlight
%K = %@
@"NSPredicate"16@?0@"ECEmailAddress"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Messages/EDMessageListItemPredicates.m
Expected predicate should be a NSCompoundPredicate
Expected subpredicate should be a NSComparisonPredicate
@"NSPredicate"16@?0@"NSPredicate"8
rowid
objectID should be a constant value right expression
@"EMMessageObjectID"16@?0@8
messageID
subject
summary
deleted
date_received
attachments
recipients
message_references
addresses
comment
subjects
summaries
protected_message_data
message_metadata
json_values
timestamp
com.apple.mail.EDMessagePersistence.message_metadata
simpleAddress
displayName
subjectWithoutPrefix
additionalMapper
emailAddressValue
size
original_mailbox
content_type
encoding
external_id
unique_id
list_id_hash
subject_prefix
date_last_viewed
senderAddress
mailboxObjectIDs
isNotify
isMute
hasAttachments
column
placeholderColumn
document_id
remote_mailbox
reference
is_originator
attachment_id
@"EMMessageObjectID"16@?0@"NSData"8
@"NSString"24@?0@"NSString"8@"NSString"16
%@, %@
-[EDMessagePersistence countOfMessagesWithMessageIDHeaderHash:matchingQuery:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Messages/EDMessagePersistence.m
-[EDMessagePersistence countOfMessagesMatchingQuery:]
v24@?0@"NSArray"8@"NSError"16
-[EDMessagePersistence iterateMessagesMatchingQuery:batchSize:firstBatchSize:limit:cancelationToken:handler:]
-[EDMessagePersistence iteratePersistedMessagesMatchingQuery:limit:cancelationToken:handler:]
<none>
 (expanded mailbox query)
-[EDMessagePersistence persistedMessageForOutgoingMessage:isDraft:]
v32@?0@"NSNumber"8@"NSNumber"16^B24
v32@?0@"EMMailboxScope"8@"NSArray"16^B24
Fetching messages for messageIDHashes
@"NSArray"16@?0@"EMObjectID"8
@"EMMessageObjectID"16@?0@"EMObjectID"8
@"EMMessageObjectID"16@?0@"NSNumber"8
-[EDMessagePersistence persistedMessagesForDatabaseIDs:requireProtectedData:temporarilyUnavailableDatabaseIDs:]
-[EDMessagePersistence messagesForPersistedMessages:mailboxScope:]
@"EMMessage"16@?0@"EMMessageObjectID"8
@"EMMailboxScope"16@?0@"EMMessageObjectID"8
SELECT json_extract(%@ , :path ) FROM %@ WHERE %@ == :message
:path
:message
INSERT INTO message_metadata(message_id, timestamp, json_values) VALUES(:message, :timestamp, json_set(json_object(), :path, :json_string)) ON CONFLICT(message_id) DO UPDATE SET json_values = json_set(json_values, :path, :json_string), timestamp = :timestamp;
:json_string
:timestamp
UPDATE OR IGNORE message_metadata SET json_values = json_remove(json_values, :path), timestamp = :timestamp WHERE message_id == :message;
B8@?0
SELECT COUNT(*) FROM message_metadata;
DELETE FROM message_metadata ORDER BY timestamp LIMIT :limit;
-[EDMessagePersistence groupedMessagesCountByMailboxMatchingQuery:variable:]
-[EDMessagePersistence requestContentForMessageObjectID:requestID:options:delegate:completionHandler:]
-[EDMessagePersistence requestSummaryForMessageObjectID:]
messagesTableName
attachmentsTableName
addressesTableName
cachedMetadataIsolation
T@"NSObject<OS_dispatch_queue>",R,N,V_cachedMetadataIsolation
cachedMetadataEstimatedRowCount
T@"NSNumber",&,N,V_cachedMetadataEstimatedRowCount
cachedMetadataUpdatesSinceLastCheck
Ti,N,V_cachedMetadataUpdatesSinceLastCheck
T@"EDMailboxPersistence",R,W,N,V_mailboxPersistence
Failed on predicate %@
messageQuery
T@"EFQuery",R,N,V_messageQuery
T@"EDMessagePersistence",R,N,V_messagePersistence
spotlightPredicateCache
T@"NSCache",&,N,V_spotlightPredicateCache
com.apple.mail.EDMessageQueryHandler.contentProtection
com.apple.mail.EDMessageQueryHandler.result
v32@?0@"EMMessageObjectID"8@"NSArray"16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Messages/EDMessageQueryHandler.m
_oldestMessageIDsByMailboxObjectIDs should be only initialized once
@"NSPredicate"20@?0@"EMMessage"8B16
@"EMMessage"16@?0@"EMMessage"8
B24@?0@"EMMessage"8@"EMMessage"16
currentQueryHelper
T@"EDMessageQueryHelper",&,N,V_currentQueryHelper
oldestMessageIDsByMailboxObjectIDs
T@"NSMutableDictionary",R,C,N,V_oldestMessageIDsByMailboxObjectIDs
updateOldestMessagesCancelationToken
T@"EFCancelationToken",&,N,V_updateOldestMessagesCancelationToken
RemoteSearchKey
%@-MessagesPendingConversationIDChangeKey-%p
%@-JournaledMessagesPendingAddKey-%p
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Messages/EDMessageQueryHelper.m
Trying to start EDMessageQueryHelper %p that was already started.
Journal reconciliation happened between isAddingMessages: and didAddMessages: persistence hooks
@"NSString"16@?0@"NSString"8
T@"EFQuery",R,N
T@"<EDMessageQueryHelperDelegate>",R,W,N,V_delegate
shouldReconcileJournal
TB,N,V_shouldReconcileJournal
pendingConversationIDChangesKey
T@"NSString",R,V_pendingConversationIDChangesKey
pendingJournaledMessageAddsKey
T@"NSString",R,V_pendingJournaledMessageAddsKey
T@"EFQuery",R,N,V_query
queryType
TQ,R,N,V_queryType
predicate
T@"NSPredicate",R,N,V_predicate
-[EDMessagePredicateParser parseResultsFromPredicate:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Messages/EDMessageQueryParser.m
queryParser
T@"EDMessageQueryParser",R,N,V_queryParser
B16@?0@"NSString"8
Predicate must be a NSCompoundPredicate
rowid IN %@
results expected to have at least one EDMessageQueryParserObject
FALSE
Generated query is nil
(kMDItemContentType = public.email-message && %@)
Searchable Index query expression is not valid
@"NSNumber"16@?0@"NSString"8
T@"EDMessageQueryTransformer",R,N,V_transformer
searchableIndex
T@"EDSearchableIndex",R,N,V_searchableIndex
sqlPropertyMapper
T@"EFSQLObjectPropertyMapper",R,N,V_sqlPropertyMapper
searchableIndexMapper
T@"EFSearchableIndexObjectPropertyMapper",R,N,V_searchableIndexMapper
B16@?0@"NSPredicate"8
T@"<EDAccountsProvider>",R,N,V_accountsProvider
T@"<EMVIPManager>",R,N,V_vipManager
starting one off query
v16@?0@"NSError"8
starting one off count query
starting query
B16@?0@"EMThreadScope"8
v32@?0@"EMThreadScope"8@"NSMutableSet"16^B24
starting count query
v32@?0@"EMThreadScope"8@"NSArray"16^B24
requesting message list items
v44@?0@"EMThreadObjectID"8@"EMThread"16B24@"EDThreadQueryHandler"28@"NSError"36
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Messages/EDMessageRepository.m
Incorrect number of results and errors when fetching message list items
performing change action
@"NSURL"16@?0@"EMMailboxObjectID"8
@16@?0@"<ECMessage>"8
An undo action was requested for a copy, that's not yet supported
v32@?0@"<EDReceivingAccount>"8@"NSArray"16^B24
v32@?0@"NSURL"8@"NSMutableArray"16^B24
requesting content representation
v16@?0@"EMContentRepresentation"8
resetting precomputed threads
setting cached metadata
getting cached metadata
mailbox prediction
v16@?0@"EMMailbox"8
loading older messages
queryHandlers
T@"NSMutableDictionary",&,N,V_queryHandlers
threadQueryHandlers
T@"NSMutableDictionary",&,N,V_threadQueryHandlers
handlerTokens
T@"NSHashTable",&,N,V_handlerTokens
conversationPersistence
T@"EDConversationPersistence",R,N,V_conversationPersistence
threadPersistence
T@"EDThreadPersistence",&,N,V_threadPersistence
messageChangeManager
T@"EDMessageChangeManager",&,N,V_messageChangeManager
performQueryOnSerializationQueue
T@"NSConditionLock",R,N,V_performQueryOnSerializationQueue
fetchController
T@"EDFetchController",R,N,V_fetchController
summaryLoadersMapTable
T@"NSMapTable",&,N,V_summaryLoadersMapTable
summaryLock
T{os_unfair_lock_s=I},R,N,V_summaryLock
T@"EFQuery",R,C,N,V_query
T@"<EMMessageListItemQueryResultsObserver>",R,N,V_resultsObserver
observationIdentifier
T@"EMObjectID",R,N,V_observationIdentifier
T@"NSSet",R,C,N,V_mailboxes
dateSortOrder
Tq,R,N,V_dateSortOrder
listeners
T@"NSMutableArray",&,N,V_listeners
com.apple.email.EDOutgoingMessageRepository
com.apple.email.outgoingmessagerepository.deliveryworkblock
-[EDOutgoingMessageRepository isProcessingWithCompletion:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Compose/EDOutgoingMessageRepository.m
-[EDOutgoingMessageRepository numberOfPendingMessagesWithCompletion:]
-[EDOutgoingMessageRepository outboxContainsMessageFromAccountObjectID:completion:]
-[EDOutgoingMessageRepository processAllQueuedMessages]
-[EDOutgoingMessageRepository resumeDeliveryQueue]
-[EDOutgoingMessageRepository suspendDeliveryQueue]
-[EDOutgoingMessageRepository messagesForDocumentID:mailboxID:]
accountId
Tq,N
mailboxId
mailboxType
Ti,N
conversationId
messageId
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Categories/Event Log/PET/EDPBGeneratedExtensions.m
INVALID event, we should not have reached this point
%@ %@
sequence_number
event_name
hasSequenceNumber
TB,N
sequenceNumber
TI,N,V_sequenceNumber
hasTimestamp
TQ,N,V_timestamp
hasEventName
eventName
Ti,N,V_eventName
hasMessageFetched
messageFetched
T@"EDPBInteractionEventMessageFetched",&,N,V_messageFetched
hasMessageSent
messageSent
T@"EDPBInteractionEventMessageSent",&,N,V_messageSent
hasMessageMoved
messageMoved
T@"EDPBInteractionEventMessageMoved",&,N,V_messageMoved
hasMessageCopied
messageCopied
T@"EDPBInteractionEventMessageCopied",&,N,V_messageCopied
hasLinkClicked
linkClicked
T@"EDPBInteractionEventLinkClicked",&,N,V_linkClicked
hasAppLaunch
appLaunch
T@"EDPBInteractionEventAppLaunch",&,N,V_appLaunch
hasAppBackground
appBackground
T@"EDPBInteractionEventAppBackground",&,N,V_appBackground
hasAppResume
appResume
T@"EDPBInteractionEventAppResume",&,N,V_appResume
hasFlagChanged
flagChanged
T@"EDPBInteractionEventFlagChanged",&,N,V_flagChanged
hasReadChanged
readChanged
T@"EDPBInteractionEventReadChanged",&,N,V_readChanged
hasMessageViewStart
messageViewStart
T@"EDPBInteractionEventMessageViewStart",&,N,V_messageViewStart
hasMessageViewEnd
messageViewEnd
T@"EDPBInteractionEventMessageViewEnd",&,N,V_messageViewEnd
hasReplyDraftStarted
replyDraftStarted
T@"EDPBInteractionEventReplyDraftStarted",&,N,V_replyDraftStarted
hasForwardDraftStarted
forwardDraftStarted
T@"EDPBInteractionEventForwardDraftStarted",&,N,V_forwardDraftStarted
hasReplySent
replySent
T@"EDPBInteractionEventReplySent",&,N,V_replySent
hasForwardSent
forwardSent
T@"EDPBInteractionEventForwardSent",&,N,V_forwardSent
hasMarkedMuteThread
markedMuteThread
T@"EDPBInteractionEventMarkedMuteThread",&,N,V_markedMuteThread
INVALID
MESSAGE_FETCHED
MESSAGE_SENT
MESSAGE_LIST_DISPLAY_STARTED
MESSAGE_LIST_DISPLAY_ENDED
MESSAGE_MOVED
MESSAGE_COPIED
LINK_CLICKED
APP_LAUNCH
APP_BACKGROUND
APP_RESUME
FLAG_CHANGED
READ_CHANGED
MESSAGE_VIEW_START
MESSAGE_VIEW_END
REPLY_DRAFT_STARTED
FORWARD_DRAFT_STARTED
REPLY_SENT
FORWARD_SENT
MARKED_MUTE_THREAD
(unknown: %i)
account_id
mailbox_id
hasAccountId
Tq,N,V_accountId
hasMailboxId
Tq,N,V_mailboxId
hasMailboxType
Ti,N,V_mailboxType
hasConversationId
Tq,N,V_conversationId
hasMessageId
Tq,N,V_messageId
hasValue
TB,N,V_value
UNDEFINED_MAILBOX_TYPE
INBOX
ARCHIVE
SENT
TRASH
JUNK
DRAFTS
OUTBOX
user_id
device_id
locale
timezone_offset
user_segment
hasVersion
TI,N,V_version
hasUserId
userId
Tq,N,V_userId
hasDeviceId
deviceId
Tq,N,V_deviceId
hasLocale
T@"NSString",&,N,V_locale
hasTimezoneOffset
timezoneOffset
Ti,N,V_timezoneOffset
hasUserSegment
userSegment
TI,N,V_userSegment
from_mailbox_id
from_mailbox_type
to_mailbox_id
to_mailbox_type
hasFromMailboxId
fromMailboxId
Tq,N,V_fromMailboxId
hasFromMailboxType
fromMailboxType
Ti,N,V_fromMailboxType
hasToMailboxId
toMailboxId
Tq,N,V_toMailboxId
hasToMailboxType
toMailboxType
Ti,N,V_toMailboxType
deprecated
headers
hasHeaders
T@"EDPBMessageHeaders",&,N,V_headers
hasDuration
Td,N,V_duration
hasScrolledToEnd
idx (%tu) is out of range (%tu)
sender_domain
sender_is_vip
sender_contact_id
user_is_sender
subject_words
message_is_reply
message_is_forwarded
user_is_to
user_is_cc
user_is_bcc
list_id
references
to_address
to_domain
to_is_vip
to_contact_id
cc_address
cc_domain
cc_is_vip
cc_contact_id
bcc_address
bcc_domain
bcc_is_vip
bcc_contact_id
hasSender
Tq,N,V_sender
hasSenderDomain
senderDomain
Tq,N,V_senderDomain
hasSenderIsVip
senderIsVip
TB,N,V_senderIsVip
hasSenderContactId
senderContactId
Tq,N,V_senderContactId
hasUserIsSender
userIsSender
TB,N,V_userIsSender
subjectWordsCount
subjectWords
T^q,R,N
hasMessageIsReply
messageIsReply
TB,N,V_messageIsReply
hasMessageIsForwarded
messageIsForwarded
TB,N,V_messageIsForwarded
hasUserIsTo
userIsTo
TB,N,V_userIsTo
hasUserIsCc
userIsCc
TB,N,V_userIsCc
hasUserIsBcc
userIsBcc
TB,N,V_userIsBcc
hasDateReceived
dateReceived
TQ,N,V_dateReceived
hasListId
listId
Tq,N,V_listId
referencesCount
toAddressCount
toAddress
toDomainsCount
toDomains
toIsVipsCount
toIsVips
T^B,R,N
toContactIdsCount
toContactIds
ccAddressCount
ccAddress
ccDomainsCount
ccDomains
ccIsVipsCount
ccIsVips
ccContactIdsCount
ccContactIds
bccAddressCount
bccAddress
bccDomainsCount
bccDomains
bccIsVipsCount
bccIsVips
bccContactIdsCount
bccContactIds
v24@?0@"NSArray"8^Q16
-[EDPersistence database]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Persistence/EDPersistence.m
-[EDPersistence serverMessagePersistenceFactory]
-[EDPersistence conversationPersistence]
-[EDPersistence localActionPersistence]
-[EDPersistence messageChangeManager]
-[EDPersistence searchableIndexManager]
-[EDPersistence threadPersistence]
T@"EDPersistenceDatabase",R
T@"EDConversationPersistence",R
T@"EDLocalActionPersistence",R
T@"EDServerMessagePersistenceFactory",R
T@"EDGmailLabelPersistence",R,V_gmailLabelPersistence
T@"EDThreadPersistence",R
T@"EDMessagePersistence",R,V_messagePersistence
T@"EDMessageChangeManager",R
T@"EDPersistenceHookRegistry",R,V_hookRegistry
searchableIndexManager
T@"EDSearchableIndexManager",R
T@"EDVIPManager",R,V_vipManager
blockedSenderManager
T@"EMBlockedSenderManager",R,N,V_blockedSenderManager
T@"EDActivityPersistence",R,V_activityPersistence
MailClassAVFS
MailClassBVFS
MailClassCVFS
Protected Index
_EDPersistenceActiveDatabaseConnection
_EDPersistenceReadOnlyDatabaseConnection
_EDPersistenceNeedsHighPriority
-[EDPersistenceDatabase init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Persistence/Database/EDPersistenceDatabase.m
performReadBlockInDatabase called before database setup is complete
performWriteBlockInDatabase called before database setup is complete
Database write block nested inside a readblock.
Committing transaction in nested block
Couldn't get database connection in performBlock
Committing transaction
We should not be checking out a connection on a nested call
-[EDPersistenceDatabase openConnectionIsWriter:]
-[EDPersistenceDatabase enforceDataProtection]
file
Unsupported file protection
shared
memory
Invalid database type
connectionPool
T@"EDPersistenceDatabaseConnectionPool",R,N,V_connectionPool
protectedDatabasePersistence
T@"EDProtectedDatabasePersistence",R,N,V_protectedDatabasePersistence
basePath
T@"NSString",R,N,V_basePath
databaseName
T@"NSString",R,N,V_databaseName
fullPath
T@"NSString",R,N,V_fullPath
databaseIsCorrupt
enforceDataProtection
setupIsComplete
TB,V_setupIsComplete
isNestedDatabaseCall
writersAreWaiting
schema
T@"EFSQLSchema",R,N,V_schema
protectedSchema
T@"EFSQLSchema",R,N,V_protectedSchema
propertyMapper
T@"EFSQLPropertyMapper",R,N,V_propertyMapper
:memory:
_EDPersistenceDatabaseConnectionInTransaction
_EDPersistenceDatabaseConnectionNestedBlockFailed
_EDPersistenceDatabaseConnectionTransactionGeneration
WriteTransactionGeneration
-[EDPersistenceDatabaseConnection init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Persistence/Database/EDPersistenceDatabaseConnection.m
[%@ isWriter: %@, SQL connection: %@]
Error preparing statement for query %@
SELECT statement
v32@?0Q8@"<EFSQLBindable>"16^B24
INSERT statement
v32@?0@"NSString"8@"<EFSQLBindable>"16^B24
UPDATE statement
UPSERT statement
Error while executing %@
Error while executing DELETE statement
We have a database connection without a sql database pointer
EDPersistenceDatabaseConnection open called when already open
Unable to finalize statements
configureSQLConnection called on a closed connection
and64
error creating user function and64
PRAGMA foreign_keys = ON;
error enabling foreign key support
error setting busy timeout
Transaction error set despite not needing/attempting to take a transaction
commit
 (due to nested block failure)
rollback
SELECT value FROM properties WHERE key = :key
-[EDPersistenceDatabaseConnection handleSQLResult:message:]
PRAGMA database_list
Getting attached databases
SELECT 1 FROM %@.sqlite_master WHERE name = ? AND type = 'table'
SELECT 1 FROM sqlite_master WHERE name = ? AND type = 'table'
Checking for existence of table
PRAGMA %@.table_info(%@)
PRAGMA table_info(%@)
Fetching column type
attaching %@
Attaching database when not open
ATTACH DATABASE %@ AS %@
Detaching database when not open
DETACH DATABASE %@
detaching %@
T@"<EDPersistenceDatabaseConnectionDelegate>",R,W,N,V_delegate
protectedDatabaseName
T@"NSString",C,N,V_protectedDatabaseName
journalDatabaseName
T@"NSString",C,N,V_journalDatabaseName
journal
T@"EDPersistenceDatabaseJournal",&,N,V_journal
sqlConnection
T@"EFSQLConnection",R,N,V_sqlConnection
T@"NSString",R,N
protectedDatabasePath
isValid
protectedDatabaseAttached
journalDatabaseAttached
sqlDB
T^{sqlite3=},R,N
isWriter
lastInsertedDatabaseID
Tq,R,N
transactionGeneration
-[EDPersistenceDatabaseConnectionPool init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Persistence/Database/EDPersistenceDatabaseConnectionPool.m
maxConcurrentBackgroundReaders > 0
No connection wrapper found
T@"<EDPersistenceDatabaseConnectionPoolDelegate>",W,N,V_delegate
cacheSize
TQ,N
maxConcurrentBackgroundReaders
TQ,R,N,V_maxConcurrentBackgroundReaders
backgroundReadersWaiting
writersWaiting
resource
T@"EFResource",&,N,V_resource
connection
T@"EDPersistenceDatabaseConnection",R,N,V_connection
generation
TQ,R,N,V_generation
TQ,N,V_type
earliestGeneration
Tq,R,N,V_earliestGeneration
latestGeneration
Tq,R,N,V_latestGeneration
Protected Index Journals
-wal
-shm
%@ number: %lu, referenceCount: %lu
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Persistence/Database/EDPersistenceDatabaseJournal.m
reference count should be non-zero
journalManager
T@"EDPersistenceDatabaseJournalManager",R,N,V_journalManager
referenceCount
path
number
TQ,R,N,V_number
com.apple.email.persistenceDatabaseJournalManager.checkExistingQueue
com.apple.email.persistenceDatabaseJournalManager.deleteQueue
_currentJournal exists, but has no reference count
@"EDPersistenceDatabaseJournal"8@?0
journalDirectoryPath
T@"NSString",R,C,N,V_journalDirectoryPath
checkExistingQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_checkExistingQueue
deleteQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_deleteQueue
oldestJournal
T@"EDPersistenceDatabaseJournal",R,N
properties
v24@?0@"NSMutableArray"8@"NSMutableArray"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Persistence/Database/EDPersistenceDatabaseSchema.m
Unable to resolve association: %@
Unable to resolve foreign key constraint: %@
absoluteString
total_count
unread_count
deleted_count
T@"EFSQLSchema",R,N
T@"EFSQLPropertyMapper",R,N
%@ %@ -> %@
%@(%@)
T@"EFSQLColumnSchema",R,N,V_column
tableName
T@"NSString",R,C,N,V_tableName
deleteAction
TQ,R,N,V_deleteAction
updateAction
TQ,R,N,V_updateAction
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Persistence/EDPersistenceHookRegistry.m
[hookResponder respondsToSelector:requiredMethod]
B24@?0@8^B16
EDPropertyMapperLookupKeySelectIndex
com.apple.MailPersonaStorage
quota_event
submitted_event
raw_data
hasQuotaEvent
quotaEvent
T@"EDPETQuotaReachedEvent",&,N,V_quotaEvent
hasSubmittedEvent
submittedEvent
T@"EDPETSubmittedEvent",&,N,V_submittedEvent
hasRawData
rawData
T@"NSData",&,N,V_rawData
com.apple.email.EDPETInteractionEventLog.workQueue
USER-ID
interaction_log,at=%@,v=%ld.pblog.archived
interaction_log,at=%@,v=%ld.pblog.lzma
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Categories/Event Log/PET/EDPETInteractionEventLog.m
directory.isFileURL
interaction_log.pblog
v44@?0i8@"NSData"12r*20Q28^B36
Can't map eventName string to enum: %@
@"NSNumber"8@?0
@16@?0@"NSString"8
Fwd: 
profileProvider
T@"<EMUserProfileProvider>",R,N,V_profileProvider
saltProvider
T@"EDInteractionEventLogSaltProvider",R,N,V_saltProvider
contactStore
T@"CNContactStore",R,N,V_contactStore
contactIDCache
T@"EFLazyCache",R,N,V_contactIDCache
meContactIdentifier
T@"NSString",&,N,V_meContactIdentifier
userID
Tq,R,N,V_userID
deviceID
Tq,R,N,V_deviceID
rotatingSalt
T@"NSData",&,N,V_rotatingSalt
workQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
TAI,N,V_sequenceNumber
directory
T@"NSURL",R,N,V_directory
currentLogFile
T@"NSURL",&,N,V_currentLogFile
logFileHandle
T@"NSFileHandle",&,N,V_logFileHandle
shouldLog
TAB,N,V_shouldLog
currentLogMessageIDs
T@"EFMutableInt64Set",&,N,V_currentLogMessageIDs
dropped_events_count
hasDroppedEventsCount
droppedEventsCount
TQ,N,V_droppedEventsCount
com.apple.email.EDPrecomputedThreadQueryHandler.changeScheduler
com.apple.email.EDPrecomputedThreadQueryHandler.backgroundWorkScheduler
Precomputed Threads
v32@?0@"NSArray"8^Q16^B24
B16@?0@"_EDThreadPositionChangeSet"8
 after %@
all updates were acknowledged
v32@?0@"EMThreadObjectID"8@"NSMutableOrderedSet"16^B24
B16@?0@"EMThreadObjectID"8
v32@?0@8@"NSArray"16^B24
conversation flags change
messageID change
summary change
changeScheduler
T@"<EFScheduler>",R,N,V_changeScheduler
backgroundWorkScheduler
T@"<EFScheduler>",R,N,V_backgroundWorkScheduler
pendingChanges
T@"NSMutableDictionary",&,N,V_pendingChanges
pendingPositionChanges
T@"NSMutableArray",&,N,V_pendingPositionChanges
unreportedJournaledObjectIDs
T@"NSMutableSet",&,N,V_unreportedJournaledObjectIDs
reportedJournaledObjectIDs
T@"NSMutableDictionary",&,N,V_reportedJournaledObjectIDs
oldestThreadObjectIDsByMailbox
T@"NSMutableDictionary",&,N,V_oldestThreadObjectIDsByMailbox
updateOldestThreadsCancelationToken
T@"<EFCancelable>",&,N,V_updateOldestThreadsCancelationToken
T@"EDThreadPersistence",R,N,V_threadPersistence
@"NSString"16@?0@"EMThreadObjectID"8
@"NSString"16@?0@"NSOrderedSet"8
%@ -> %@
Add:
Move:
Delete:
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Message List/EDPrecomputedThreadQueryHandler.m
Adding a thread based on position of a thread that was deleted
Moving a thread that was deleted
Moving a thread based on position of a thread that was deleted
objectIDsToAddByBeforeObjectID
T@"NSMutableDictionary",&,N,V_objectIDsToAddByBeforeObjectID
objectIDsToMoveByBeforeObjectID
T@"NSMutableDictionary",&,N,V_objectIDsToMoveByBeforeObjectID
objectIDsToDelete
T@"NSMutableSet",&,N,V_objectIDsToDelete
+[EDProtectedDatabasePersistence protectedDatabaseName]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Persistence/Database/EDProtectedDatabasePersistence.m
+[EDProtectedDatabasePersistence journalDatabaseName]
com.apple.email.protectedDatabasePersistence.reconciliationQueue
Unable to attach protected database
Unable to detach protected database
Initializing journal database
Unable to attach journal database
Unable to detach journal database
PRAGMA %@.journal_mode = WAL;
SELECT name FROM %@.sqlite_sequence
%@.sqlite_sequence
SELECT max(%@) FROM %@
Finding max %@
on-demand reconciliation
reconciliation
Attaching journal for merging
@"<EFSQLExpressable>"16@?0@"EFSQLColumnSchema"8
We must have at least one join constraint
Selecting ROWIDs to merge
INSERT OR IGNORE INTO %@ SELECT * FROM %@ WHERE %@
Unable to insert new rows into protected database for table %@
Committing merge batch transaction
Unable to merge journal for table %@
Committing update batch transaction
Unable to delete rows from journal for table %@
@"NSString"16@?0@"EFSQLColumnSchema"8
SELECT DISTINCT %@ FROM %@
 WHERE %@
 UNION 
SELECT %1$@ FROM %2$@ WHERE %1$@ NOT IN (%3$@)
SELECT %@ FROM %@ WHERE %@
-[EDProtectedDatabasePersistence supportsJournaling]
-[EDProtectedDatabasePersistence protectedDataAvailable]
signpostID
signpostLog
reconciliationQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_reconciliationQueue
isReconciling
TB,N,V_isReconciling
supportsJournaling
protectedDataAvailable
com.apple.emaildaemon.protecteddatabasepersistence.cleanup
exportedInterface
T@"NSXPCInterface",R
clientConnection
T@"NSXPCConnection",R,N,V_clientConnection
daemonInterfaceFactory
T@"EDDaemonInterfaceFactory",R,N,V_daemonInterfaceFactory
accountRepository
T@"EDAccountRepository",R,N,V_accountRepository
clientState
T@"EDClientState",&,N,V_clientState
mailboxRepository
T@"EDMailboxRepository",R,N,V_mailboxRepository
messageRepository
T@"EDMessageRepository",R,N,V_messageRepository
outgoingMessageRepository
T@"EDOutgoingMessageRepository",R,N,V_outgoingMessageRepository
activityRegistry
T@"EDActivityRegistry",R,N,V_activityRegistry
vipManagerInterface
T@"<EMVIPManagerInterface>",R,N,V_vipManagerInterface
CREATE TABLE IF NOT EXISTS messages_new (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,message_id INTEGER NOT NULL DEFAULT 0,remote_id INTEGER,document_id TEXT COLLATE BINARY,sender INTEGER,subject_prefix TEXT COLLATE BINARY,subject INTEGER NOT NULL,summary INTEGER,date_sent INTEGER,date_received INTEGER,mailbox INTEGER NOT NULL,remote_mailbox INTEGER,flags INTEGER NOT NULL DEFAULT 0,read INTEGER NOT NULL DEFAULT 0,flagged INTEGER NOT NULL DEFAULT 0,deleted INTEGER NOT NULL DEFAULT 0,size INTEGER NOT NULL DEFAULT 0,conversation_id INTEGER NOT NULL DEFAULT 0,date_last_viewed INTEGER,original_mailbox INTEGER,visible INTEGER,sender_vip INTEGER,encoding INTEGER,content_type INTEGER,sequence_identifier INTEGER DEFAULT 0,external_id TEXT COLLATE BINARY,unique_id INTEGER,content_index_transaction_id INTEGER,list_id_hash INTEGER,journaled INTEGER,flag_color INTEGER);
ALTER TABLE messages RENAME TO messages_old
messages_message_id_mailbox_index
CREATE INDEX %@ ON messages_new(message_id, mailbox);
messages_document_id_index
CREATE INDEX %@ ON messages_new(document_id);
messages_sender_index
CREATE INDEX %@ ON messages_new(sender);
messages_subject_index
CREATE INDEX %@ ON messages_new(subject);
messages_date_received_index
CREATE INDEX %@ ON messages_new(date_received);
messages_mailbox_date_received_index
CREATE INDEX %@ ON messages_new(mailbox, date_received);
messages_mailbox_conversation_id_date_received_index
CREATE INDEX %@ ON messages_new(mailbox, conversation_id, date_received);
messages_remote_mailbox_remote_id_index
CREATE INDEX %@ ON messages_new(remote_mailbox, remote_id);
messages_read_index
CREATE INDEX %@ ON messages_new(read);
messages_flagged_index
CREATE INDEX %@ ON messages_new(flagged);
messages_deleted_date_received_index
CREATE INDEX %@ ON messages_new(deleted, date_received);
messages_conversation_id_mailbox_read_date_received_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, read, date_received);
messages_conversation_id_mailbox_flagged_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, flagged);
messages_conversation_id_mailbox_deleted_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, deleted);
messages_conversation_id_mailbox_sender_date_received_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, sender, date_received);
messages_conversation_id_mailbox_flags_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, flags);
messages_content_index_transaction_id_deleted_date_received_rowid_index
CREATE INDEX %@ ON messages_new(content_index_transaction_id, deleted, date_received DESC, ROWID);
messages_mailbox_remote_id_sequence_identifier_index
CREATE INDEX %@ ON messages_new(mailbox, remote_id, sequence_identifier);
messages_mailbox_content_index_transaction_id_flags_date_received_index
CREATE INDEX %@ ON messages_new(mailbox, content_index_transaction_id, flags, date_received ASC);
messages_list_id_hash_index
CREATE INDEX %@ ON messages_new(list_id_hash);
messages_date_last_viewed_index
CREATE INDEX %@ ON messages_new(date_last_viewed);
messages_summary_index
CREATE INDEX %@ ON messages_new(summary);
messages_mailbox_visible_date_received_rowid_index
CREATE INDEX %@ ON messages_new(mailbox, visible, date_received DESC, ROWID DESC);
messages_mailbox_deleted_journaled_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index
CREATE INDEX %@ ON messages_new(mailbox, deleted, journaled, sender_vip, flags, conversation_id, date_sent, message_id, date_received DESC, ROWID DESC);
messages_mailbox_conversation_id_flag_color_date_received_journaled_index
CREATE INDEX %@ ON messages_new(mailbox, conversation_id, flag_color, date_received, journaled);
messages_journaled_conversation_id_date_received_index
CREATE INDEX %@ ON messages_new(journaled, conversation_id, date_received);
messages_message_id_deleted_journaled_read_mailbox_index
CREATE INDEX %@ ON messages_new(message_id, deleted, journaled, read, mailbox);
messages_sender_vip_deleted_journaled_read_message_id_index
CREATE INDEX %@ ON messages_new(sender_vip, deleted, journaled, read, message_id) WHERE (sender_vip = 1 AND journaled = 0 AND deleted = 0 AND read = 0);
messages_journaled_deleted_date_received_index
CREATE INDEX %@ ON messages_new(journaled, deleted, date_received) WHERE (journaled = 1 AND deleted = 0);
messages_deleted_mailbox_date_received_index
CREATE INDEX %@ ON messages_new(deleted, mailbox, date_received);
DROP INDEX IF EXISTS %@;
v32@?0@"NSString"8@"NSString"16^B24
sender_vip
visible
journaled
flag_color
sequence_identifier
content_index_transaction_id
INSERT INTO messages_new (%@) SELECT %@ FROM messages_old
messages_old
ALTER TABLE messages_new RENAME TO messages
CREATE TABLE IF NOT EXISTS threads (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,scope INTEGER NOT NULL REFERENCES thread_scopes(ROWID) ON DELETE CASCADE,conversation INTEGER NOT NULL REFERENCES conversations(conversation_id) ON DELETE CASCADE,newest_read_message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL,display_message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL,date INTEGER NOT NULL,read INTEGER NOT NULL DEFAULT 0,deleted INTEGER NOT NULL DEFAULT 0,flagged INTEGER NOT NULL DEFAULT 0,has_red_flag INTEGER NOT NULL DEFAULT 0,has_orange_flag INTEGER NOT NULL DEFAULT 0,has_yellow_flag INTEGER NOT NULL DEFAULT 0,has_green_flag INTEGER NOT NULL DEFAULT 0,has_blue_flag INTEGER NOT NULL DEFAULT 0,has_purple_flag INTEGER NOT NULL DEFAULT 0,has_gray_flag INTEGER NOT NULL DEFAULT 0,draft INTEGER NOT NULL DEFAULT 0,replied INTEGER NOT NULL DEFAULT 0,forwarded INTEGER NOT NULL DEFAULT 0,redirected INTEGER NOT NULL DEFAULT 0,junk_level_set_by_user INTEGER NOT NULL DEFAULT 0,junk_level INTEGER NOT NULL DEFAULT 0,has_unflagged INTEGER NOT NULL DEFAULT 0,has_attachments INTEGER NOT NULL DEFAULT 0,count INTEGER NOT NULL,journaled INTEGER NOT NULL DEFAULT 0,UNIQUE(scope, conversation) ON CONFLICT ABORT);
threads_scope_date_conversation_index
CREATE INDEX %@ ON threads(scope, date, conversation);
threads_journaled_scope_date_conversation_index
CREATE INDEX %@ ON threads(journaled, scope, date, conversation);
threads_journaled_date_scope_conversation_index
CREATE INDEX IF NOT EXISTS threads_journaled_date_scope_conversation_index ON threads(journaled, date, scope, conversation) WHERE journaled = 1;
DROP TABLE IF EXISTS %@
DELETE FROM %@
DROP INDEX IF EXISTS thread_categories_type_active_user_override_thread_index;
interaction_log
thread_categories
read_later
categorization_sender_rules
categorization_conversation_rules
categorization_group_rules
category_active_types
times_viewed
read_later_date
INSERT INTO message_references (message, reference, is_originator) SELECT message_id, reference, IFNULL(is_originator, 0) FROM threads
DROP TABLE IF EXISTS threads
mailbox.outbox
==== Searchable Index State ====
  transaction:                    %lld
  active:                         %@ (rc=%lld)
  persistenceAvailable:           %@
  client state fetched:           %@
  coalesce timer fired:           %@
  scheduled processing:           %@
  needs refresh:                  %@
  scheduled refresh:              %@
  needs verification:             %@
  scheduled verification:         %@
  indexing batch size:            %lu
  data source batch size:         %lu
  maximum batch size:             %lu
  data source indexing permitted: %@
  has available indexing budget:  %@
  budgeted time remaining:        %.4fs
  budgeted item count remaining:  %ld
  pending items:                  %lu (%p)
  pre-processing items:           %lu (%p)
  pending removals:               %lu (%p)
  pending domain removals:        %lu (%p)
Indexed Empty Subjects:
v40@?0Q8@"EFFuture"16@"NSSet"24Q32
com.apple.email.spotlightVerification
SpotlightState.json
v16@?0@"EDSearchableIndexClientState"8
CoreSpotlight failed to return our client state (old state: %@)
 (new)
v24@?0@"NSData"8@"NSError"16
state
resumeCount
pending
preprocessingItemCount
persistenceAvailable
suspending
already suspended
still resumed
suspend
resuming
already resumed
still suspended
resume
B16@?0@"EDSearchableIndexPendingItem"8
com.apple.email.searchableIndex.dataSourceWorkBlock
@"EDSearchableIndexItem"16@?0@"NSString"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Indexing/EDSearchableIndex.m
completion != nil
com.apple.mail.searchableIndex.dataSourceCancelation
Q16@?0Q8
com.apple.email.searchableIndex.indexingBatch
Start Indexing Batch
preprocessing
v28@?0@"EDSearchableIndexClientState"8@"EDSearchableIndexUpdates"16B24
@"<EFFuture>"16@?0@8
@"<EFFuture>"16@?0@"NSError"8
countOfItemsIndexed
elapsedTime
itemsPerSecond
Finished Indexing Batch
@16@?0@"<EDIndexableItem>"8
[%@]
@"CSSearchableItem"16@?0@"NSNull"8
@"EFFuture"16@?0@"<EDIndexableItem>"8
diagnose:com.apple.mobilemail
@"NSNumber"16@?0@"NSDictionary"8
B32@?0@"<EDIndexableItem>"8Q16^B24
q24@?0@8@16
@"NSString"16@?0@"<EDIndexableItem>"8
B32@?0@"EDSearchableIndexPendingItem"8Q16^B24
@16@?0@"CSSearchableItem"8
v16@?0@"<EMSearchableIndexQueryBuilder>"8
@"NSArray"8@?0
Item did not successfully preprocess after invoking searchableItem
-[EDSearchableIndex indexMessages:includeBody:indexingType:]
-[EDSearchableIndex markMessagesAsPrinted:]
MonitoredActivityReasonCompacting
MonitoredActivityReasonMoving
MonitoredActivityReasonArchiving
MonitoredActivityReasonDeleting
MonitoredActivityReasonJunking
dataSourceIndexingPermitted
TB,N,GisDataSourceIndexingPermitted
pluggedIn
TB,R,N,GisPluggedIn
indexName
pendingIndexItemsCount
userHandle
transaction
Tq,R,G_transaction
csIndex
T@"CSSearchableIndex",&,N,V_csIndex
copyDiagnosticInformation
skipIndexExclusionCheck
TB,N,V_skipIndexExclusionCheck
clientStateFetched
TB,N,V_clientStateFetched
enableSpotlightVerification
TB,N,V_enableSpotlightVerification
searchableIndexBundleID
T@"NSString",C,N,V_searchableIndexBundleID
coalescingDelaySeconds
Td,N,V_coalescingDelaySeconds
dataSourceUpdateTimeLimit
Td,N,V_dataSourceUpdateTimeLimit
Tq,R
active
TB,R,GisActive
delayDataSourceAssignmentFuture
T@"EFFuture",&,N,V_delayDataSourceAssignmentFuture
dataSource
T@"<EDSearchableIndexDataSource>",W,N,V_dataSource
reasonProvider
T@"<EDSearchableIndexReasonProvider>",W,N,V_reasonProvider
schedulableDelegate
T@"<EDSearchableIndexSchedulableDelegate>",W,N,V_schedulableDelegate
performingBlockAffectingDataSourceAndIndex
TB,R,GisPerformingBlockAffectingDataSourceAndIndex
TB,GisPersistenceAvailable,V_persistenceAvailable
powerObservable
T@"EFObservable",R,N
shouldCancelSearchQuery
canIndexAttachments
TB,N,GisDataSourceIndexingPermitted,V_dataSourceIndexingPermitted
<%@: %p> %@ %@
criterion
T@"<EDSearchableCriterion>",&,N,V_criterion
mailboxIDs
T@"NSIndexSet",C,N,V_mailboxIDs
v32@?0@"<NSCopying>"8@"NSSet"16^B24
B32@?0@"NSSet"8@"NSSet"16@"NSSet"24
identifiers
purgedIdentifiers
deletedIdentifiers
purgeReasons
T@"NSSet",C,N,V_purgeReasons
exclusionReasons
T@"NSSet",C,N,V_exclusionReasons
attachment:
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Indexing/Spotlight/EDSearchableIndexAttachmentItem.m
Attempting to set unexpected indexing type on EDSearchableIndexAttachmentItem
domainIdentifier
indexingType
T@"NSDate",R,N
itemInstantiationTime
estimatedSizeInBytes
underlyingData
T@"NSData",&,N
hasCompleteData
alwaysMarkAsIndexed
shouldExcludeFromIndex
requiresPreprocessing
attributeSetForFilePromise
T@"EFPromise",&,N,V_attributeSetForFilePromise
attachmentPersistentID
T@"NSString",C,N,V_attachmentPersistentID
T@"NSString",C,N,V_messagePersistentID
metadatum
T@"EDSearchableIndexAttachmentItemMetadatum",&,N,V_metadatum
TB,N,V_requiresPreprocessing
searchableItemProcessingDelay
Td,N,V_searchableItemProcessingDelay
T@"NSString",R,C,N,V_identifier
Tq,N,V_indexingType
TQ,R,N,V_itemInstantiationTime
T@"NSData",&,N,V_underlyingData
accountIdentifier
mailboxIdentifiers
T@"NSArray",C,N
recipientAddresses
T@"NSDate",&,N
dateSent
T@"NSString",C,N,V_domainIdentifier
T@"NSString",C,N,V_accountIdentifier
T@"NSArray",C,N,V_mailboxIdentifiers
T@"NSString",C,N,V_senderAddress
T@"NSArray",C,N,V_recipientAddresses
T@"NSDate",&,N,V_dateReceived
T@"NSDate",&,N,V_dateSent
attachmentFileURL
T@"NSURL",R,N,V_attachmentFileURL
canReadAttachmentFile
IndexingBudgetPeriodInSeconds
IndexingBudgetInSeconds
IndexingBudgetNumberOfItemsToIndexOnResume
Budget Period:%lfs (%.1fh) Time:%fs (min:%.1fm) numberOfItemsToIndexOnResume:%ld
ef_publicDescription
enableActivityBasedScheduling
TB,N,V_enableActivityBasedScheduling
autoStartMaintenanceIndexing
TB,N,V_autoStartMaintenanceIndexing
time
Td,R,N,V_time
periodDuration
Td,R,N,V_periodDuration
numberOfItemsToIndexOnResume
Tq,R,N,V_numberOfItemsToIndexOnResume
com_apple_mail_transaction
yyyy-MM-dd HH:mm:ssZ
<%@: %p> version=%@ date=%@ transaction=%lld
build
Tq,N,V_transaction
transactionValue
T@"NSNumber",R,N
transactionDate
T@"NSDate",&,N,V_transactionDate
systemBuildVersion
T@"NSString",C,N,V_systemBuildVersion
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Indexing/EDSearchableIndexItem.m
Message does not have a valid identifier. Please consider using initWithIdentifier:message:bodyData: if you need something special.
-[EDSearchableIndexItem addAttachmentAttributesToAttributeSet:]
-[EDSearchableIndexItem fetchIndexableAttachments]
v24@?0@"NSArray"8@"NSArray"16
mailboxtype
<null>
hasCompleteContent
EDSearchableIndexItem has invalid indexingType = EDIndexableItemIndexingTypeAttachment
T@"<EDIndexableMessage>",R,N,V_message
bodyData
T@"NSData",&,N,V_bodyData
fetchBody
TB,R,N,V_fetchBody
TB,N,V_hasCompleteData
@"CSPerson"16@?0@"NSString"8
-[EDSearchableIndexManager index]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Indexing/EDSearchableIndexManager.m
-[EDSearchableIndexManager persistence]
-[EDSearchableIndexManager scheduler]
Done!
needsReindex
TB,N,V_needsReindex
needsToScheduleRecurringActivity
TB,N,V_needsToScheduleRecurringActivity
T@"EDSearchableIndexPersistence",R,N
T@"EDSearchableIndexScheduler",R,N
index
T@"EDSearchableIndex",R,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Indexing/EDSearchableIndexPendingItem.m
Additional items added to a pending item must have the same identifier
q24@?0@"<EDIndexableItem>"8@"<EDIndexableItem>"16
B16@?0@"<EDIndexableItem>"8
items
T@"NSMutableArray",C,N,V_items
referenceItem
T@"<EDIndexableItem>",R,N,V_referenceItem
searchable_messages
searchable_message_tombstones
searchable_attachments
attachment
com.apple.mail.searchableIndex.lastProcessedAttachmentIDKey
attachmentID
T@"NSString",C,N,V_attachmentID
transaction_id
message_body_indexed
reindex_type
-[EDSearchableIndexPersistence messagesWhere:sortedBy:limit:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Indexing/EDSearchableIndexPersistence.m
-[EDSearchableIndexPersistence searchableIndexItemsFromMessages:type:]
-[EDSearchableIndexPersistence attachmentItemMetadataForAttachmentID:messagePersistentID:name:result:]
-[EDSearchableIndexPersistence verificationDataSamplesFromMessageIDTransactionIDDictionary:]
-[EDSearchableIndexPersistence messagesRowIDWhereSubClause]
Q8@?0
((%@ NOT IN (SELECT message_id FROM searchable_messages) AND messages.ROWID NOT IN (%@)) OR (%@ IN (SELECT message_id FROM searchable_messages WHERE searchable_messages.transaction_id = %ld AND message_id NOT IN (%@))))
date_received DESC
(%@ IN (SELECT message_id FROM searchable_messages WHERE searchable_messages.reindex_type = %lld AND message_id NOT IN (%@)))
SELECT transaction_id, reindex_type FROM searchable_messages WHERE message_id = %@
Searching for reindex type
UPDATE OR IGNORE searchable_messages SET transaction_id = %lld WHERE message_id IN (%@)
UPDATE OR IGNORE searchable_messages SET reindex_type = %lld WHERE transaction_id != %lld AND message_id IN (%@)
Does not support re-indexing of attachment types. Will need to be implemented if needed.
Assigning the re-indexing type for a set of identifiers
SELECT attachment_id FROM searchable_attachments WHERE message_id IN (%@)
searching for removed attachment identifiers
Purging %@
v16@?0@"NSString"8
DELETE FROM %@ WHERE transaction_id > %llu
Invalidating %@
UPDATE searchable_message_tombstones SET transaction_id = NULL WHERE transaction_id > %lld
Invalidating searchable_message_tombstones
SELECT rowid FROM %@ WHERE transaction_id IN (%@)
Failed to get messages for transaction ids in %@
DELETE FROM %@ WHERE transaction_id IN (%@)
Failed to delete messages for items in %@
DELETE FROM searchable_attachments WHERE message_id = %@
Removing message identifier from searchable_attachments
Adding to searchable_messages index
INSERT OR REPLACE INTO searchable_messages (message_id, message, transaction_id, reindex_type, message_body_indexed) VALUES (?, ?, %lld, %ld, ?)
@"NSArray"24@?0@"NSNumber"8@"NSNumber"16
INSERT OR REPLACE INTO searchable_messages (message_id, message, transaction_id, reindex_type, message_body_indexed) VALUES (?, ?, %lld, %ld, COALESCE((SELECT message_body_indexed FROM searchable_messages WHERE message_id = ?), ?))
INSERT OR REPLACE INTO searchable_message_tombstones (type, identifier) VALUES (%lld, ?)
Adding to searchable_message_tombstones index
DELETE FROM searchable_message_tombstones WHERE type = %lld AND identifier IN (%@)
UPDATE searchable_message_tombstones SET transaction_id = %lld WHERE type = %lld AND identifier IN (%@)
Updating or deleting searchable_message_tombstones
DELETE FROM searchable_message_tombstones WHERE transaction_id < %lld
Purging searchable_message_tombstones
SELECT identifier FROM searchable_message_tombstones WHERE transaction_id IS NULL AND type = %lld
searching for tombstone identifiers
DELETE FROM searchable_messages WHERE message_id IN (%@)
Removing items from searchable_messages
DELETE FROM searchable_attachments WHERE attachment_id IN (%@)
Removing items from searchable_attachments
SELECT message_id FROM searchable_messages WHERE message is NULL
searching for removed identifiers
SELECT message_id, transaction_id FROM searchable_messages WHERE reindex_type = 0 AND message IS NOT NULL GROUP BY transaction_id ORDER BY RANDOM() LIMIT %lu
Searching for random sample of messages to verify for spotlight integrity
SELECT a.ROWID, a.message, a.attachment_id, a.name FROM attachments AS a LEFT OUTER JOIN searchable_attachments AS s ON (a.ROWID = s.attachment_id) WHERE a.ROWID > %lld AND s.attachment_id IS NULL ORDER BY a.ROWID
Searching for attachments to index
v20@?0@"EDSearchableIndexAttachmentItemMetadatum"8B16
DELETE FROM attachments WHERE message IN (%@)
Removing unexpected messages from attachments table
SELECT attachment_id FROM searchable_attachments WHERE attachment is NULL
SELECT attachment_id FROM searchable_attachments WHERE transaction_id in (%@)
INSERT OR REPLACE INTO searchable_attachments (attachment_id, attachment, message_id, transaction_id) VALUES (?, ?, ?, %lld)
Adding to searchable_attachments
searchableMessagesTableName
T@"<EDSearchableIndexHookResponder>",R,W,N,V_hookResponder
lastProcessedAttachmentIDLock
T{os_unfair_lock_s=I},N,V_lastProcessedAttachmentIDLock
lastProcessedAttachmentID
Tq,V_lastProcessedAttachmentID
messagesRowIDWhereSubClause
com.apple.email.searchableIndex.scheduler
activityType
deferred
budgeted
maintenance
com.apple.email.searchableIndex.scheduler.budgeted
com.apple.email.searchableIndex.scheduler.maintenance
.indexingStateQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Indexing/EDSearchableIndexScheduler.m
Attempting to find a criteria builder block indexing for an unsupported activity type: %@
Attempting to register unsupported activity type: %@
Enabled indexing.
Stopped indexing.
v32@?0@"NSString"8@"NSObject<OS_xpc_object>"16^B24
Indexing budget exhausted.
budgetedTimeRemaining
budgetedItemCountRemaining
maintenanceIndexingTime
extraIndexingTime
activityTypes
T@"NSSet",R,N
deferrableActivityTypes
scheduledDeferralCheck
TB,N,V_scheduledDeferralCheck
budgetTimeUserDefaultsKey
T@"NSString",C,N,V_budgetTimeUserDefaultsKey
indexingStateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_indexingStateQueue
activities
T@"NSMutableDictionary",&,N,V_activities
indexingEnabledForActivityTypes
T@"NSMutableSet",&,N,V_indexingEnabledForActivityTypes
TB,GisDataSourceIndexingPermitted,V_dataSourceIndexingPermitted
Tq,V_budgetedItemCountRemaining
Td,V_budgetedTimeRemaining
noActivityIndexingTime
Td,V_noActivityIndexingTime
Td,V_maintenanceIndexingTime
scheduling
TB,N,GisScheduling,V_scheduling
schedulable
T@"<EDSearchableIndexSchedulable>",R,W,N,V_schedulable
budgetConfiguration
T@"EDSearchableIndexBudgetConfiguration",R,N,V_budgetConfiguration
@"NSString"16@?0@"EDSearchableIndexVerificationData"8
%@ = '%@'
fetchAttributes
<%@: %p> %lu added items, %lu removed items, %lu removed domains
itemsRequiringIndexing
T@"NSArray",C,N,V_itemsRequiringIndexing
removedIdentifiers
T@"NSArray",C,N,V_removedIdentifiers
removedDomainIdentifiers
T@"NSArray",C,N,V_removedDomainIdentifiers
hasUpdates
kEDSearchableIndexVerifierErrorDomain
v32@?0@"NSNumber"8@"EDSearchableIndexVerificationData"16^B24
EDSearchableIndexPostFakeCorruptSearchableIndexErrors
FAKED: %@
v32@?0@"NSNumber"8@"NSString"16^B24
row:%@ cid:%@
Searchable Index Verification failed
Searchable Index verification found missing rowids: %@
indexVerificationActivity
T@"NSObject<OS_os_activity>",&,N,V_indexVerificationActivity
T@"<EDSearchableIndexVerifierDataSource>",W,N,V_dataSource
T@"NSString",C,N,V_subject
toEmailAddresses
T@"NSArray",C,N,V_toEmailAddresses
T@"NSString",C,N,V_deleted
transactionID
T@"NSNumber",&,N,V_transactionID
T@"NSNumber",&,N,V_flags
indexedAsEmptySubject
T@"NSNumber",&,N,V_indexedAsEmptySubject
userInfo
T@"NSDictionary",C,N,V_userInfo
com.apple.private.email
listener
T@"NSXPCListener",&,N,V_listener
connectedClients
T@"NSMutableArray",&,N,V_connectedClients
T@"EDDaemonInterfaceFactory",&,N,V_daemonInterfaceFactory
serverXPCEndpoint
T@"NSXPCListenerEndpoint",R,N
server_messages
server_labels
server_message
-[EDServerMessagePersistenceFactory init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Syncing/ServerMessages/EDServerMessagePersistence.m
Couldn't get mailboxID for URL %@
EDServerMessagePersistenceFactory couldn't map mailboxURL
mailboxID != EMDatabaseIDUndefined
-[EDServerMessagePersistence init]
SELECT count() FROM server_messages WHERE (mailbox = %lld)
Executing count query
SELECT count() FROM server_messages WHERE (mailbox = %lld) AND (read = 0)
Executing unread count query
SELECT count() FROM server_messages WHERE (mailbox = %lld) AND (deleted = 0)
SELECT MAX(remote_id) FROM server_messages WHERE (mailbox = %lld)
Executing max uid query
SELECT MIN(remote_id) FROM server_messages WHERE (mailbox = %lld)
Executing min uid query
(remote_id IN (%@))
 LIMIT %lu
(remote_id >= %lu) AND (remote_id < %lu)
ROWID, message, mailbox, read, deleted, replied, flagged, draft, forwarded, redirected, junk_level_set_by_user, junk_level, flag_color, remote_id
 DESC
SELECT %@ FROM server_messages WHERE (mailbox = %lld) AND %@ ORDER BY remote_id%@%@
v16@?0@"<ECMessageFlagsBuilder>"8
SELECT label FROM server_labels WHERE server_message = ?
Fetching server labels
INSERT INTO server_messages (message, mailbox, read, deleted, replied, flagged, draft, forwarded, redirected, junk_level_set_by_user, junk_level, flag_color, remote_id) VALUES (:message, :mailbox, :read, :deleted, :replied, :flagged, :draft, :forwarded, :redirected, :junk_level_set_by_user, :junk_level, :flag_color, :remote_id)
:remote_id
:read
:deleted
:replied
:flagged
:draft
:forwarded
:redirected
:junk_level_set_by_user
:junk_level
:flag_color
Adding server message
UPDATE server_messages SET message = %lld WHERE (mailbox = %lld) AND (remote_id = %@)
updating server message
DELETE FROM server_messages WHERE (mailbox = %lld) AND (remote_id in (%@))
removing server messages
DELETE FROM server_messages WHERE mailbox = %llu
removing all server messages
read = %d
deleted = %d
replied = %d
flagged = %d
draft = %d
forwarded = %d
redirected = %d
junk_level_set_by_user = %d
junk_level = %d
flag_color = %d
UPDATE server_messages SET %@ WHERE (mailbox = %lld) AND (remote_id in (%@))
Setting flags
SELECT ROWID FROM server_messages WHERE remote_id = ? AND mailbox = ? LIMIT 1
Getting server message ID
INSERT OR IGNORE INTO server_labels (server_message, label) VALUES (?, ?)
Adding server label
DELETE FROM server_labels WHERE server_message = ? AND label = ?
Removing server label
ef_quotedSQLEscapedString
Tq,R,N,V_mailboxID
useNumericSearch
TB,R,N,V_useNumericSearch
messageCount
unreadMessageCount
undeletedMessageCount
maximumIMAPUID
TI,R,N
minimumIMAPUID
supportsLabels
TB,R,N,V_supportsLabels
v40@?0@"NSString"8{_NSRange=QQ}16^B32
table_metadata
table_name
largest_deleted_rowid
Updating largest_deleted_rowid for %@
Getting largest_deleted_rowid for %@
timerSource
T@"NSObject<OS_dispatch_source>",&,N,V_timerSource
executionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executionQueue
backOffInterval
Td,N,V_backOffInterval
isReachable
TB,N,V_isReachable
pendingWaitingForNetwork
TB,N,V_pendingWaitingForNetwork
task
T@?,C,N,V_task
canceledCallback
T@?,C,N,V_canceledCallback
work
T@?,C,N,V_work
initialDelay
Td,N,V_initialDelay
maxBackOffInterval
Td,N,V_maxBackOffInterval
backoffMultiplier
Td,N,V_backoffMultiplier
observeForNetworkReachability
TB,N,V_observeForNetworkReachability
EDThreadMigrator-%@
v16@?0@"_EDThreadMigrationState"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Message List/EDThreadMigrator.m
Attempting to start migration from wrong state
T@"EFLocked",R,N,V_state
queryHandler
T@"EDInMemoryThreadQueryHandler",R,N,V_queryHandler
T@"<EDThreadMigratorDelegate>",R,W,N,V_delegate
migrationState
object ID must be thread object ID
objectIDsToMigrate
T@"NSMutableSet",R,N,V_objectIDsToMigrate
recentlyMigratedObjectIDs
T@"NSMutableSet",R,N,V_recentlyMigratedObjectIDs
TQ,N,V_state
@"EDPersistenceForeignKeyPlaceholder"40@?0@"EFSQLTableSchema"8@"NSString"16@"NSString"24Q32
@"EDPersistenceForeignKeyPlaceholder"32@?0@"EFSQLTableSchema"8@"NSString"16@"NSString"24
@"EDPersistenceAssociationPlaceholder"32@?0@"EFSQLTableSchema"8@"NSString"16@"NSString"24
com.apple.EmailDaemon.EDThreadPersistence.reconciliationCleanupScheduler
com.apple.EmailDaemon.EDThreadPersistence.threadRecomputationScheduler
v16@?0@8
v32@?0@"NSNumber"8@"EMThreadScope"16^B24
v24@?0@"EMThreadObjectID"8^B16
no senders
 and no recipients
no recipients
Precomputed thread - no subject
Precomputed thread - no sender
no sender on change
@"EMMailbox"16@?0@"EMMailboxObjectID"8
@"NSNumber"16@?0@"EMThreadObjectID"8
B32@?0@"<NSCopying>"8Q16Q24
v32@?0{_NSRange=QQ}8^B24
@"NSNumber"16@?0@"_EDWrappedMessage"8
Precomputed thread (recoverable) - 
@"EMThreadScope"16@?0@"EMThreadObjectID"8
v16@?0@"_EDThreadPersistence_ThreadMessages"8
v40@?0@"NSNumber"8@"EMThreadScope"16@"EMMailboxScope"24^B32
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Message List/EDThreadPersistence.m
Mailbox scope should have exactly one type
v32@?0@"EMThreadScope"8@"NSNumber"16^B24
Mailbox scope should have exactly one mailbox
Thread persistence doesn't support exclusion-based mailbox scopes
journaled 
v32@?0q8@"EMThreadObjectID"16@"NSArray"24
@"NSString"16@?0@"NSURL"8
Reconciling threads
v32@?0@"_EDWrappedMessage"8Q16^B24
-fake-message-id
Mailbox scope for pre-computed threads should never be for exclusion.
No mailbox database ID for migrating thread scope
Attempting to finish migration for a thread scope which doesn't exist
@"_EDWrappedMessage"16@?0@"EMMessage"8
v32@?0@"EMThread"8@"NSArray"16^B24
There should be a database ID associated with the mailbox
threadScopeManager
T@"EDThreadScopeManager",R,N,V_threadScopeManager
reconciliationCleanupScheduler
T@"<EFScheduler>",&,N,V_reconciliationCleanupScheduler
threadRecomputationScheduler
T@"<EFScheduler>",&,N,V_threadRecomputationScheduler
threadRecomputationDebouncer
T@"EFDebouncer",&,N,V_threadRecomputationDebouncer
<%@: %p>
thread scope DB ID: %lld
conversation ID: %lld
@"NSString"16@?0@"_EDWrappedMessage"8
%lld
wrapped messages: {%@}(count: %u)
INSERT OR IGNORE INTO threads (  scope,   conversation,   newest_read_message,   display_message,   date,   read,   flagged,   has_red_flag,   has_orange_flag,   has_yellow_flag,   has_green_flag,   has_blue_flag,   has_purple_flag,   has_gray_flag,   draft,   replied,   forwarded,   redirected,   junk_level_set_by_user,   junk_level,   has_unflagged,   has_attachments,   count,   journaled ) VALUES (  :scope,   :conversation_id,   :newest_read_message,   :display_message,   :date,   :read,   :flagged,   :has_Red_flag,   :has_Orange_flag,   :has_Yellow_flag,   :has_Green_flag,   :has_Blue_flag,   :has_Purple_flag,   :has_Gray_flag,   :draft,   :replied,   :forwarded,   :redirected,   :junk_level_set_by_user,   :junk_level,   :has_unflagged,   :has_attachments,   :count,   :journaled );
INSERT OR REPLACE INTO threads (  scope,   conversation,   newest_read_message,   display_message,   date,   read,   flagged,   has_red_flag,   has_orange_flag,   has_yellow_flag,   has_green_flag,   has_blue_flag,   has_purple_flag,   has_gray_flag,   draft,   replied,   forwarded,   redirected,   junk_level_set_by_user,   junk_level,   has_unflagged,   has_attachments,   count,   journaled ) VALUES (  :scope,   :conversation_id,   :newest_read_message,   :display_message,   :date,   :read,   :flagged,   :has_Red_flag,   :has_Orange_flag,   :has_Yellow_flag,   :has_Green_flag,   :has_Blue_flag,   :has_Purple_flag,   :has_Gray_flag,   :draft,   :replied,   :forwarded,   :redirected,   :junk_level_set_by_user,   :junk_level,   :has_unflagged,   :has_attachments,   :count,   :journaled );
:scope
:newest_read_message
:display_message
:date
:has_Red_flag
:has_Orange_flag
:has_Yellow_flag
:has_Green_flag
:has_Blue_flag
:has_Purple_flag
:has_Gray_flag
:has_unflagged
:has_attachments
:count
:journaled
v16@?0@"NSMutableDictionary"8
INSERT INTO threads (  scope,   conversation,   date,   count,   journaled,   has_unflagged,   has_attachments,   read,   flagged,   draft,   replied,   forwarded,   redirected,   junk_level_set_by_user,   junk_level,   has_red_flag,   has_orange_flag,   has_yellow_flag,   has_green_flag,   has_blue_flag,   has_purple_flag,   has_gray_flag ) VALUES (  :scope,   :conversation_id,   :date,   (SELECT count(DISTINCT ifnull(message_id, ROWID || '-fake-message-id')) FROM temp_thread_scope_message WHERE conversation_id = :conversation_id),   :journaled,   :has_unflagged,   :has_attachments,   :read,   :flagged,   :draft,   :replied,   :forwarded,   :redirected,   :junk_level_set_by_user,   :junk_level,   :has_Red_flag,   :has_Orange_flag,   :has_Yellow_flag,   :has_Green_flag,   :has_Blue_flag,   :has_Purple_flag,   :has_Gray_flag ) ON CONFLICT (scope, conversation) DO UPDATE SET   date = max(date, excluded.date),   count = excluded.count,   journaled = journaled OR excluded.journaled,   has_attachments = has_attachments OR excluded.has_attachments,   has_attachments = has_attachments OR excluded.has_attachments,   read = read AND excluded.read,   flagged = flagged OR excluded.flagged,   draft = draft OR excluded.draft,   replied = replied OR excluded.replied,   forwarded = forwarded OR excluded.forwarded,   redirected = redirected OR excluded.redirected,   junk_level_set_by_user = junk_level_set_by_user OR excluded.junk_level_set_by_user,   junk_level = min(junk_level, excluded.junk_level),   has_red_flag = has_red_flag OR excluded.has_red_flag,   has_orange_flag = has_orange_flag OR excluded.has_orange_flag,   has_yellow_flag = has_yellow_flag OR excluded.has_yellow_flag,   has_green_flag = has_green_flag OR excluded.has_green_flag,   has_blue_flag = has_blue_flag OR excluded.has_blue_flag,   has_purple_flag = has_purple_flag OR excluded.has_purple_flag,   has_gray_flag = has_gray_flag OR excluded.has_gray_flag WHERE count != excluded.count;
SELECT ROWID FROM threads WHERE scope = :scope AND conversation = :conversation_id;
v16@?0@"_EDWrappedMessage"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Message List/EDThreadPersistence_ThreadMessages.m
Unable to find display message
sqlHelper
T@"_EDThreadPersistence_SQLHelper",R,N,V_sqlHelper
threadScopeDatabaseID
Tq,R,N,V_threadScopeDatabaseID
threadObjectID
T@"EMThreadObjectID",R,N,V_threadObjectID
wrappedMessages
T@"NSArray",R,N,V_wrappedMessages
T@"EMThread",R,N
thread DB ID: %lld
%u wrapped messages: {%@}
UPDATE OR IGNORE threads SET  newest_read_message = :newest_read_message WHERE   rowid = :thread AND   :date > (SELECT date_received FROM temp_persisted_messages WHERE temp_persisted_messages.ROWID = threads.newest_read_message);
:thread
SELECT   (SELECT date_received FROM temp_persisted_messages    WHERE temp_persisted_messages.ROWID = threads.newest_read_message),   (SELECT date_received FROM temp_persisted_messages    WHERE temp_persisted_messages.ROWID = threads.display_message) FROM threads WHERE threads.ROWID = :thread;
UPDATE OR IGNORE threads SET   display_message = :display_message WHERE ROWID = :thread ;
UPDATE OR IGNORE threads SET   display_message = threads.newest_read_message WHERE threads.ROWID = :thread ;
INSERT OR IGNORE INTO thread_mailboxes (thread, mailbox) VALUES (:thread, :mailbox);
SELECT temp_persisted_messages.sender, temp_persisted_messages.date_received FROM temp_persisted_messages;
INSERT INTO thread_senders (  thread,   address,   date ) VALUES (  :thread,   :address,   :date ) ON CONFLICT (thread, address) DO UPDATE SET   date = max(date, excluded.date) ;
:address
v32@?0@"NSNumber"8@"NSDate"16^B24
SELECT address FROM thread_senders WHERE thread == :thread AND priority == 1;
SELECT sender FROM temp_persisted_messages WHERE ROWID IN (SELECT display_message FROM threads WHERE ROWID == :thread);
UPDATE thread_senders SET priority = 0 WHERE thread == :thread AND priority == 1;
UPDATE thread_senders SET priority = 1 WHERE thread == :thread AND address == :address;
SELECT recipients.address, temp_persisted_messages.date_received FROM recipients JOIN temp_persisted_messages ON recipients.message = temp_persisted_messages.ROWID WHERE recipients.type = :recipients_type;
:recipients_type
INSERT INTO thread_recipients (  thread,  address,  type,  date,  priority) VALUES (  :thread,  :address,  :type,  :date,  0) ON CONFLICT (thread, type, address) DO UPDATE SET   date = max(date, excluded.date) ;
:type
SELECT ROWID FROM temp_thread_scope_message WHERE (conversation_id = :conversation_id)
CREATE TEMP VIEW temp_persisted_messages AS SELECT * FROM messages LIMIT 0;
-[_EDThreadPersistence_PersistedThread _ensureTempMessagesView]_block_invoke
CREATE TEMP VIEW temp_persisted_messages AS SELECT * FROM messages WHERE ROWID IN (%@);
CREATE TEMP VIEW
-[_EDThreadPersistence_PersistedThread _ensureTempMessagesView]
success
DROP VIEW IF EXISTS temp_persisted_messages;
-[_EDThreadPersistence_PersistedThread dropTemporaryView]_block_invoke
T@"_EDThreadPersistence_ThreadMessages",R,N,V_messages
threadDatabaseID
Tq,R,N,V_threadDatabaseID
T@"EDMessagePersistence",R,N
T@"EMThreadObjectID",R,N
CREATE TEMP VIEW temp_thread_scope_message AS SELECT * FROM messages WHERE %@;
-[_EDThreadPersistence_ThreadScope _ensureTempScopeView]
DROP VIEW IF EXISTS temp_thread_scope_message;
-[_EDThreadPersistence_ThreadScope dropTemporaryView]
threadScopeExpression
T@"<EFSQLExpressable>",R,N,V_threadScopeExpression
-[_EDThreadPersistence_StatementCache preparedStatementForQueryString:]
statement
preparedStatements
T@"NSMutableDictionary",R,N,V_preparedStatements
-[_EDThreadPersistence_SQLHelper executeUpdateSQL:bindings:errorHandler:]
-[_EDThreadPersistence_SQLHelper executeUpsertSQL:bindings:errorHandler:]
self.connection.lastInsertedDatabaseID == 0
-[_EDThreadPersistence_SQLHelper executeSelectSQL:bindings:errorHandler:rowHandler:]
-[_EDThreadPersistence_SQLHelper executeSQL:indexBindings:errorHandler:]
-[_EDThreadPersistence_SQLHelper executeSQL:errorHandler:]
T@"_EDThreadPersistence_StatementCache",R,N,V_cache
T@"EMMessage",R,N,V_message
databaseID
Tq,R,N,V_databaseID
inMemoryObservationID
T@"EMObjectID",&,N,V_inMemoryObservationID
precomputedObservationID
T@"EMObjectID",&,N,V_precomputedObservationID
inMemoryQueryHandler
T@"EDInMemoryThreadQueryHandler",&,N,V_inMemoryQueryHandler
precomputedQueryHandler
T@"EDPrecomputedThreadQueryHandler",&,N,V_precomputedQueryHandler
threadMigrator
T@"EDThreadMigrator",&,N,V_threadMigrator
v12@?0i8
v16@?0@"_EDThreadQueryUnderlyingHandlers"8
underlyingHandler
T@"EFLocked",R,N,V_underlyingHandler
T@"<EDThreadQueryHandlerDelegate>",R,W,N,V_delegate
com.apple.EmailDaemon.EDThreadScopeManager.evictionScheduler
v32@?0@"EMThreadScope"8@"_EDThreadScopeInfo"16^B24
B32@?0@"EMThreadScope"8@"_EDThreadScopeInfo"16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/Message List/EDThreadScopeManager.m
Pre-computed thread scope should have exactly one mailbox or mailbox type
v52@?0q8@"NSString"16@"NSNumber"24@"NSData"32B40@"NSDate"44
v32@?0q8@"NSDate"16Q24
q24@?0@"NSNumber"8@"NSNumber"16
B24@?0@"EMThreadScope"8@"_EDThreadScopeInfo"16
T@"<EDThreadScopeManagerDataSource>",R,W,N,V_dataSource
evictionScheduler
T@"<EFScheduler>",R,N,V_evictionScheduler
threadScopes
%lld%@, last viewed: %@
, needs update
needsUpdate
TB,N,V_needsUpdate
lastViewedDate
T@"NSDate",&,N,V_lastViewedDate
%@-%@
com.apple.mail.NNMKCrashDetectionService.%@
serviceName
T@"NSString",&,N,V_serviceName
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
com.apple.mobilemail.UbiquitousConversationManager
B32@?0@"NSString"8@16^B24
v32@?0@8@"NSDictionary"16^B24
T@"<EDUbiquitousConversationManagerDelegate>",W,N,V_delegate
cloudStorage
T@"<EDConversationRemoteStorage>",&,N,V_cloudStorage
queue
conversationIDsBySyncKey
T@"NSMutableDictionary",&,N,V_conversationIDsBySyncKey
unmatchedKeys
T@"NSMutableSet",&,N,V_unmatchedKeys
TB,N,V_initialized
%@ %ld
instanceLock
T{os_unfair_lock_s=I},R,N
instances
T@"NSHashTable",R,N
T@"NSString",R,C,N,V_name
delayInterval
Td,R,N,V_delayInterval
scalingFactor
Tq,R,N,V_scalingFactor
hasChangesSinceLastUpdate
TB,N,V_hasChangesSinceLastUpdate
lastUpdateDate
T@"NSDate",&,N,V_lastUpdateDate
lastAcknowledgementDate
T@"NSDate",&,N,V_lastAcknowledgementDate
updateCounter
Tq,N,V_updateCounter
com.apple.mail.vipsenders
VIP_
VIPs.plist
Name
EmailAddresses
com.apple.email.edvipmanager
com.apple.email.edvipmanager.notifications
v32@?0@"NSString"8@"EMVIP"16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3601.8/EmailDaemon/VIP/EDVIPManager.m
Modification of VIPs only supported when syncing is enabled
B32@?0@"NSString"8@"EMVIP"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
B32@?0@"NSString"8Q16^B24
hasVIPs
allVIPs
T@"NSSet",R,C,N
allVIPEmailAddresses
T@"EAEmailAddressSet",R,C,N
keyValueStore
T@"NSUbiquitousKeyValueStore",R,N,V_keyValueStore
operationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_operationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationQueue
plistURL
T@"NSURL",R,N,V_plistURL
Registered EMAccountRepositoryObserver<%p> - Current observing accounts: Count: %lu
 %@ 
Returning %lu accounts
Handling accounts added: %@
Handling accounts removed: %@
Handling accounts changed: %@
Cache hit for %@
Cache miss for %@
%{public}@: deallocating client state
%{public}@: Setting visible mailboxes to %{public}@
%{public}@: Client Requested Boost
%{public}@: Client Cancelled Boost
Failed to locate momd bundle in application. %@
Failed to load persistent stores. %{public}@
Import request failed to execute: %{public}@
Export request failed to execute: %{public}@
Successfully imported CloudKit content.
Successfully exported CloudKit content.
Request import failed
Request export failed
Failed to import CloudKit content. Rescheduling (%g). %{public}@
Failed to export CloudKit content. Rescheduling (%g). %{public}@
Failed to import CloudKit content: %{public}@
Failed to export CloudKit content: %{public}@
Library purgeable upgrader has been scheduled.
Found pending data replication transaction. Retrying replication from cloudKit to KVS
Finished replicating data from cloudKit to KVS
Replicating %lu changes from %{public}@ to %{public}@
Change %{public}@ replicated from %{public}@ to %{public}@, because %{public}@ entry is more recent.
Ignoring change with Key %{public}@ from %{public}@ to %{public}@, because %{public}@ entry is more recent.
Finished replicating changes from %{public}@ to %{public}@
CloudKitStorage finished initializing. Starting migrating content from KVS to CloudKit
Finished migrating content from KVS to CloudKit
Multiple conversations found for message_ids %@
Attempting to update association table for conversation that does not exist %@
Started pruning conversations
Finished pruning conversations
Initializing Conversation CloudKit Storage
Found pending export transaction. Retrying request export
Found pending import transaction. Retrying request import
First request import arrived. Success: %lu
APS Push received - %{public}@
Failed to save Control - Error: %{public}@
Unable to archive history token - Error: %{public}@
Unable to unarchive history token - Error: %{public}@
Deleting duplicated object. %{public}@, %{public}@
Failed to save _handleDuplicationsForConversationUUIDs - Error: %{public}@
Failed to fetching EDConversationInfo with ID: %{public}@ - Error: %{public}@
Failed to save EDConversationInfo %{public}@ - Error: %{public}@
Failed to delete EDConversationInfo %{public}@ - Error: %{public}@
Failed fetching EDConversationInfo to remove. ObjectId: %{public}@ - Error: %{public}@
Failed to fetching allConversationInfos- Error: %{public}@
Failed to fetching cloudKitControl: %{public}@
CoreData will reset sync couldKit data
CoreData did reset sync couldKit data
Started handling core data changes
Ignoring insert because object does not exist.
EDConversationInfo added. %{public}@
Ignoring update because objecvt does not exist.
EDConversationInfo updated/inserted. %{public}@
EDConversationInfo deleted. %{public}@
Deletion operation does not have ConversationUUID.
Finished handling core data changes
persistentHistoryResult.result is not an array. Ignoring it %{public}@
Unable to fetch change history (%{public}@.)
Failed fetching EDConversationInfo. ObjectId: %{public}@ - Error: %{public}@
Initializing Conversation KVS storage
Synchronizing with KVS store %@: %@
Received external KVS change event: %@, changed keys=%@
iCloud Key Value Store Over-Quota
%@: %@
Over quota: pruning database
Unknown change reason: %@
Got %u predictions for message persistentID=%@, subject="%@"
Aggregated %u mailboxes.
Best mailbox: %@
Using Ordered Mode.
Raw counts for %@: %@
Found %.0lf hit for **%@** in %@
Ignoring because it is the message's current mailbox.
Ignoring because count (%.0f) is under threshold (%.0f).
Using Summed Weighted Mode:
Raw counts for %@:
Found field=%@ in mailbox=%@: weightedHits=%.1lf
Using Weighted Mode:
Found %.0lf (weighted=%.1lf) hits for **%@** in %@
Ignoring because weighted (%.0f) is under threshold (%.0f).
Winner: %@ (weighted=%.1lf)
Getting grouped messages count for %d / %@.
Not a legal sender address: %@
Found %u user mailboxes.
Ignoring mailboxes: %@
Not a legal recipient address: %@
%p: Starting with query '%@'
%p: Preparing to update, %llu unacknowledged upates, %f since last acknowledgement
%p: Pausing updates, %llu unacknowledged upates, %f since last acknowledgement
%p: Skipping change while paused
%p: Refreshing after unpause
%p: Acknowledged update %{public}@
%p: Sending update %{public}@
%p: Restarting the helper (old = %p).
%p: Created helper %p
%p: Threads Query: %@
%p: Message Query: %@
Content Protection => Locked
Content Protection => Unlocked
%p: Found %u messages.
%p: Finished initial load.
%p: Added %u messages
%p: Flags changed for %u messages
%p: Key paths %{public}@ changed for %u messages
%p: itemID not changed %@
changedMessage %@
oldObjectID %@
%p: Changed objectID from %{public}@ for message in thread: %{public}@
%p: Deleted %u messages
%p: ConversationIDs changed from %lld for %u messages
%p: Moving objectIDs: %{public}@ before: %{public}@
%p: Adding objectIDs: %{public}@ before: %{public}@
%p: Moving objectIDs to end of list: %{public}@
%p: Adding objectIDs to end of list: %{public}@
%p: Changing objectIDs: %{public}@
%p: Deleting objectIDs: %{public}@
Blocked sender: Reporting deletes: %@ for thread: %@
Blocked sender: Reporting change: %@ for thread: %@
Blocked sender: No changes for thread %@
%p: Helper did finish remote search.
%p: Helper needs restart.
%p: Oldest threads initialized for %u mailboxes
Could not generate salt. Device unlocked since boot: %@
Found existing salt
Existing salt has wrong access class. Re-creating salt
No salt found
Error finding existing salt: %d
Will create new salt
Error creating new salt: %d
Will delete salt
Error deleting salt: %d
Will migrate salt
errSecInteractionNotAllowed from keychain. Is the device still locked?
Could not find destination message for database ID %lld
Creating flag change action for %lu messages in mailbox %{public}llu
Got foreign key constraint error adding action for mailbox %{public}llu
Creating flag change all action in mailbox %{public}llu
Created %{public}@ action %lld for %lu messages (%lu download, %lu copy, %lu delete) in source mailbox %@, destination %@
Created %{public}@ action %lld for undownloaded message in mailbox %@ (success = %d)
Creating label change action for %lu messages in mailbox %{public}llu
Adding action message for transfer without destination message ID - action ID: %lld, destination message: %{public}@, source message: %{public}@
%{public}@
Persisting results for action %{public}@, completed %lu, failed %lu for phase %lu
Action %{public}@ had %lu failed items
Action %{public}@ finished downloading items
Action %{public}@ finished copying items
Finished action %{public}@
Updating action %{public}@ to %@ (%lu)
Action %llu finished
Predicting move mailbox for %u message(s).
Did not find any mailboxes for moving message(s).
Found mailbox for moving message(s).
Found mailbox '%@'.
Get All Mailboxes
Number of Mailboxes %ld count
Registering For Mailbox Observation With Observer %{public}@
Unregistering For Mailbox Observation With Observer %{public}@
Perform Change Action:%{public}@
Catalog MADownLoadResult: %ld
Query MAQueryResult: %ld
No asset found in results
Asset MADownLoadResult: %ld
Updating from asset with contentVersion=%{public}@, compatibilityVersion=%{public}@
No file URL found in asset
Moving %lu new messages to %@
Copying %lu new messages to %@
Begin transferring NumberOfMessages=%{public,signpost.telemetry:number1}u messages to destinationMailbox=%@ enableTelemetry=YES 
Begin Processing batch of %u messages for sourceMailboxURL %@
Begin database write connection
End database write connection
End Processing batch of %u messages for sourceMailboxURL %@
EDMessageChangeManagerTransferMessages
Deleting all message from %@
Begin transfer all NumberOfMessages=%{public,signpost.telemetry:number1}u messages to destinationMailbox=%@ enableTelemetry=YES 
EDMessageChangeManagerTransferAllMessages
Adding %lu new messages to %@
Deleting %lu messages
Setting flags %{public}@ on all message for mailboxes %@
Begin flag change NumberOfMessages=%{public,signpost.telemetry:number1}u messages to FlagChange=%{public,signpost.telemetry:number2}lu enableTelemetry=YES 
EDMessageChangeManagerChangeFlagAllMessages
Setting flags %{public}@ on %lu messages
EDMessageChangeManagerChangeFlagMessages
Adding %lu new messages from server sync to %@
<%p: %{public}@> starting count handler with query: %@
<%p: %{public}@> recalculating unread counts (generation %lld)
<%p: %{public}@> query took %.04fs
<%p: %{public}@> %{public}@: Scheduling increment of %lld (window: %llu:%llu)
<%p: %{public}@> increment ignored due to newer resync generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> increment occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> %{public}@: Scheduling decrement of %lld (window: %llu:%llu)
<%p: %{public}@> decrement ignored due to newer resync generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> decrement occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> %{public}@ (%lu mailboxes being synced): %lld = %lld + %lld + (%lld - %lld)
%{private}@
%{public}@
<%p: %{public}@> %{public}@ (%lu unacknowledged updates): %lld = %lld + %lld + (%lld - %lld)
%{private}@
%{public}@
<%p: %{public}@> Acknowledged update %{public}@
<%p: %{public}@> %{public}@: %lld = %lld + %lld + (%lld - %lld), %{public}@
%{private}@
%{public}@
<%p: %{public}@> Total count is negative.
<%p: %{public}@> Started syncing mailbox %{public}@
<%p: %{public}@> Adding mailbox %{public}@ (window: %llu:%llu)
<%p: %{public}@> add-mailbox notification expired by new generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> add-mailbox occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> server-count set %lld for %{public}@ (window: %llu:%llu)
<%p: %{public}@> server-count notification expired by new generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> server-count occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> most-recent-status-count set %lld for %{public}@ (window: %llu:%llu)
<%p: %{public}@> most-recent-status-count notification expired by new generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> most-recent-status-count occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> last-sync + most-recent-status-count set %lld for %{public}@ (window: %llu:%llu)
<%p: %{public}@> last-sync and most-recent-status-count notification expired by new generation (ours: %llu, window: %llu:%llu)
<%p: %{public}@> last-sync and most-recent-status-count occured during generation window, scheduling full fetch (ours: %llu, window: %llu:%llu)
<%p: %{public}@> mailbox list changed, refreshing query
received error while querying for messages: %{public}@
Cannot currently handle a NOT predicate with more than one sub
Got unexpected predicate: %{private}@
Failed to read metadata for key '%{public}@': %{public}@
JSON for cached metadata key '%{public}@' is too big.
Failed to add metadata for key '%{public}@': %{public}@
Failed to remove metadata for key '%{public}@': %{public}@
Fetched cached metadata row count from database: %d
Failed to get number of rows in cached metadata: %{public}@
Pruned %d rows from cached metadata.
Failed to prune %d rows from cached metadata: %{public}@
Invalid cached metadata key '%{public}@'
Trying to access cached metadata for message ID 0.
Exception occured: %{public}@
Symbols:
%{public}@
%p: Re-starting the helper (old = %p).
%p: Found objectIDs: %{public}@
%{public}@
%p: Finished initial load
%{public}@
%p: Did add %u messages. %u groups.
%p: Adding objectIDs: %{public}@ before: %{public}@
%{public}@
%p: Changing flags for objectIDs: %{public}@
%{public}@
%p: Changing key paths: %{public}@ for objectIDs: %{public}@
%{public}@
%p: Deleting objectIDs: %{public}@
%{public}@
%p: Changing conversationID for objectIDs: %{public}@
%{public}@
%p: Updating oldest messages for %u mailboxes
%p: Updated oldest message for mailbox ID %@
%p: Oldest messages updated
count=%{signpost.description:attribute}u 
QueryHelper FindMessagesByPreviousID
%p: Previous message is message itself -- message: %{public}@
previous message: %{public}@
exclude predicate: %{public}@
%p: Used head-list-lookup (%u entries) for %.3g%%, faster previous-message-lookup for %.3g%% of %u messages.
%p: Received error %{public}@ while performing initial query: %@
helper=%p count=%u 
QueryHelperAddingMessages
%p: Adding %u filtered messages: %@
QueryHelperDidAddMessages Callback
QueryHelperDidAddMessages
%p: Did delete all messages in %u mailbox(es). Requesting restart.
%p: Reconciled %u filtered messages: %@
%p: Deleting %u filtered messages: %@
%p: Updating temporary ID to real messageID for message: %{public}@ oldHash %{public}@ newHash %{public}@
%p: persistenceDidUpdateProperties %@
keyPaths %@
Performing Query %@
found %ld messages matching query %@
received error while querying for messages: %@, %{public}@
Creating message query: %{public}@, observation identifier: %{public}@
Stopping query with observation identifier: %{public}@
Newly activated account is not EDReceivingAccount.
Resetting threads scopes for actived account.
Requesting (re-)migration of threads for actived account.
Newly deactivated account is not EDReceivingAccount.
Requesting update of threads for deactived account.
Found %u thread scopes that need re-migration for deactived account.
Thread query handler %p completed migration. Will notify %u other thread query handlers about the state change.
Found %u query handlers that need re-migration for (de-)actived account.
Received by maild
No query handler found for observation identifier: %@. Requesting summary from messagePersistence %p
Returning results: %{public}@, missed objects: %{public}@
Finished processing %{public, name=results}u %{public, name=missedObjectIDs}u
EDMessageRepositoryMessageListItems
ChangeActionType=%{public,signpost.telemetry:number1}lu, ReturnUndoAction=%{public,signpost.telemetry.number2}u enableTelemetry=YES 
EDMessageRepositoryMessageChangeAction
EDMessageRepositoryContentRepresentationRequest
Requesting content representation for message %{public}@, Options: %{public}@
Content representation finished loading: %{public}@
Finished processing with success
Finished processing with failure %{public, name=errorCode}ld
Content representation failed to load: %{public}@ with error %{public}@
Loading older messages for %lu mailboxes
Resetting all update throttlers due to %{public}@
Trying to start EDMessageRepositoryQueryHandler %p that was already started.
Adding objectIDs but duplicate found %@
Not accepting %@
Begin Saving Draft %@
End Saving Draft %@
EMAIL DELIVERY
Deleting Draft %@
Deleting %lu messages for documentID %@ in mailboxID %@
Begin Delivery Message : %p
End Delivery Message : %p
Trying to get a database write connection while servicing an XPC request.
Failed to begin transaction on connection %{public}@: %{public}@
Outer database block failed on connection %{public}@
Nested database block failed on connection %{public}@
Non-transactional database block failed on connection %{public}@
Transaction (generation: %lld) on connection %{public}@ started successfully
Rolling back transaction on connection %{public}@ %{public}@
Transaction on connection %{public}@ %{public}@ failed: %{public}@
Transaction on connection %{public}@ %{public}@ succeeded
Unable to increment transaction generation: %{public}@
Attached Protected Index on connection %{public}@
Detached Protected Index on connection %{public}@
Attached journal on connection %{public}@
Detached journal on connection %{public}@
Attaching database '%{public}@' at URL %{public}@
wrong number of arguments (%d) to and64
Checking out %@
Checking in %@
Checking for existing journals
Created journal directory
Unable to create journal directory: %{public}@
Found journal numbers: %{public}@
Unable to iterate journal directory: %{public}@
Returning current journal %@
Unsetting current journal %@ - should delete: %{public}@
Oldest journal %lu does not already exist. Creating...
Getting oldest journal %lu
Merged journal %lu - should delete: %{public}@
Unable to delete journal %lu: %{public}@
Unable to delete wal for journal %lu: %{public}@
Unable to delete shm for journal %lu: %{public}@
Deleted journal %lu
Could not open '%@': %d: %@
Reached quota, writing truncation marker
Checksum failure at offset %zu, bailing to read
Error initializing compression
_process() failed
_process(.FINALIZE) failed
No interaction events found, returning nil data
_destroy failed
%@ doesn't implement setMessage:data:
%@ doesn't implement setConversationID:data:
%@ doesn't implement setDataFromMessage:
%@ doesn't implement setDataFromMessage:account:
%@ doesn't implement setMessage:mailbox:
%@ doesn't implement setMessage:mailboxType:
Returning batch of %lu results
%{public}@
Canceled initial results
%{public}@
Returning initial load did finish
%{public}@
Adding change to existing change for objectID: %{public}@
%{public}@
%{public}@
Adding change for objectID: %{public}@
%{public}@
%{public}@
Skipping flushing of changes%{public}@ due to %llu unacknowledged updates
Flushing changes%{public}@: %{public}@
%{public}@
Flushing position changes%{public}@: %{public}@
%{public}@
Acknowledged update for %{public}@: %{public}@
Sending update%{public}@ for %{public}@: %{public}@
Adding add for objectID: %{public}@ -> %{public}@
%{public}@
Adding add to new position change for objectID: %{public}@ -> %{public}@
%{public}@
Ignoring change for objectID: %{public}@
%{public}@
Adding move for objectID: %{public}@ -> %{public}@
%{public}@
Adding move to new position change for objectID: %{public}@ -> %{public}@
%{public}@
Ignoring Conversation Notification Level change for objectID: %{public}@
%{public}@
Adding objectID to delete: %{public}@
%{public}@
Ignoring messageID change for objectID: %{public}@
%{public}@
Ignoring summary change for objectID: %{public}@
%{public}@
Oldest thread updated for mailbox: %{public}@
%@: maxRowID: %lld, largestDeletedRowID: %lld
Updating sqlite_sequence %{public}@ = %lld
Setting sqlite_sequence %{public}@ = %lld
Skipping on-demand reconciliation from the main thread
Triggering on-demand reconciliation
Completed on-demand reconciliation with result: %lu
Skipping on-demand reconciliation because we're already reconciling
Triggering reconciliation
Completed reconciliation with result: %lu
Reconciling journal %lu
Failed to attach journal %lu for reconciliation
Temporarily failed to merge data for journal %lu
Skipped merging data due to malformed schema for journal %lu
Permanently failed to merge data for journal %lu
Reconciliation
Merging table %{public}@ with unique columns: %{public}@
  referencing columns: %{public}@
Merging table %{public}@ without unique columns
Inserting %{public}@
Replacing %{public}@ with %{public}@
Failed to merge table %{public}@ for %{public}@
Deleting from journal: %{public}@
Starting clean up
Deleted %lu rows from %{public}@
app requested early recovery path
Failed to create new messages table: %{public}@
Failed to rename messages_old: %{public}@
Failed to drop index: %{public}@ %{public}@
Failed to create index: %{public}@ %{public}@
Failed to drop copy messages data: %{public}@
Failed to rename new messages: %{public}@
Failed to create new threads table: %{public}@
Failed to drop table %{public}@: %{public}@
Failed to truncate table %{public}@: %{public}@
Failed to drop thread_categories_type_active_user_override_thread_index: %{public}@
verifying representative sample of items in the datasource are actually indexed
datasource couldn't verify
Spotlight found everything from the sample
Spotlight index is corrupt, items may be missing or duplicated
Removing all indexes a result of spotlight verification. Searchable index is corrupt.
Removing corrupt indexes for %lu transactions: %{public}@
Requesting last client state from CSSearchableIndex
last client state: %@%@
failed to retrieve last client state: %{public}@
-[EDSearchableIndex resume]: %@ (%lld)
Data source updates took too long to return results. Canceling.
Received dataSourceUpdates: %{public}@ throttledDataSourceBatchSize:%lu batchSize:%lu
Data source returned %lu out of %lu requested items to index.
EDSearchableIndexDataSourceUpdates
Changing indexingType for item %@ identifier: %{public}@ from %ld using setNeedsAllAttributesIndexingType
Unexpected changing of indexingType for item %@ identifier: %{public}@ from %ld to %ld
EDSearchableIndexDataSourcePrepare
starting coalescing timer (t=%fs)
stopping coalescing timer
coalescing timer fired
suspending indexing queue
resuming indexing queue
BatchStartedWithPendingItemCount=%{signpost.description:attribute,public}@
EDSearchableIndexBatchProcessing
BatchAssignedDomnainRemovalCount=%{signpost.description:attribute,public}llu
BatchFinishedWithItemIndexedCount=%{signpost.description:attribute,public}@
scheduling processing of pending items
Clearing %lu items %{public}@ from processingItems
BatchBeginCoreSpotlightBatch
EDSearchableIndexCSProcessing
BatchEndCoreSpotlightBatch
Spotlight failed to index %ld items (transaction=%lld) failed with error: %{public}@
Clearing %lu items from processingItems due to indexing failure
batch of %lu items took %.4gs to index
consuming %lu items out of a potential %lu totalSizeForBatch %lu/%lu new processingItems: %{public}@
generating searchable items failed: %{public}@
indexing %lu / %lu items, throttled batch size %lu
removing indexed items for domains {%@}
removing indexed items with identifiers {%@}
Sending spotlight diagnostic request %@
Spotlight diagnostic request failed: %{public}@
spotlight requests to reindex items with identifiers %@
spotlight requests to reindex all items
Deleting items from Spotlight index: %{public}@
Reindexing All Items With Options: %lu
failed to delete all items from domain: %{public}@
Invoking acknowledgement handler
Deleting all items from CSIndex
Invalidating all items greater than: %lld
%p indexItems:%{public}@ fromRefresh:%{BOOL}d i:%{BOOL}d
Index items usage issue - indexing identifiers(s) %{public}@ that were removed
%p dropped item: %{public}@
%p prepared indexItems:%{public}@ fromRefresh:%{BOOL}d i:%{BOOL}d
Requested %lu items to be indexed while inactive
Skipping index of %{public}@ identifier because it is present in _pendingIdentifierRemovals
Requested %lu items to be indexed (new: %lu %{public}@ existing: %{public}@ deferred: %lu preprocess: %lu %{public}@ pending: %lu) fromRefresh: %{BOOL}d
Removing identifiers:%{public}@ fromRefresh:%{BOOL}d
Removing all items for domain:%@
Message IDs - search failed: %{public}@
Mailbox Prediction - Canceling before querying Spotlight
searching spotlight index for %@
Mailbox Prediction - Timed out waiting for results from spotlight: %{public}@
Mailbox Prediction - search failed: %{public}@
Mailbox Prediction - Canceling after querying Spotlight
Putting dependent item(s) with identifier %{public}@ %@ into preprocessing list
Finished processing item %{public}@
Skipped processing item - no longer in preprocessingItems %{public}@
Reason provider %@ failed to provide dataSourceRefreshReasons
Reason provider %@ failed to provide purgeReasons
Reason provider %@ failed to provide exclusionReasons
Reason provider %@ failed to provide currentReasons
Failed to receive an attribute set for file:%@ error:%{public}@
Upgrading item %{public}@ from type:%ld to type:%ld
Skipping body indexing for message %{public}@ due to large message size:%lu
Warning: about to index message with an empty subject. %{public}@
Removing all items from searchableIndex (waiting: %{BOOL}d needsReindex: %{BOOL}d options: %ld)
All items removed from searchableIndex
Setting needs reindex
SearchableIndex is requesting a batch of up to %lu items requiring indexing
type=%ld limit=%lu messageCount=%u
EDSearchableIndexPersistenceMessagesToItems
type=%ld limit=%ld
EDSearchableIndexPersistenceMessagesForIndexing
SearchableIndex is preparing to index attachments for message with identifier: %{public}@
Initializing scheduler with budgetConfiguration:%{public}@
Note: Disabled XPC activity based scheduling.
Note: Automatically enabling maintenance activity indexing.
Failed to transition %{public}@ from state %ld to state %d.
Attempted to begin indexing an activity type (%{public}@) that is already active - marking old ACTIVITY as DONE
XPC Requested deferral of activity %@
Checking for XPC deferral
Failed to transition %{public}@ from state %ld to state %ld.
%{public}@ : %{public}@
<%{public}@:%p> did not return a spotlight query. dataSamples.count=%lu transformedDataSamples.count=%lu
Verification failed at ratio %f. Performing verification with a larger sample of size %lu
Verification failed at ratio: %f. threshold: %f
Failed verification for row:%@ citd:%lld
SpotlightVerificationSamples=%{public,signpost.telemetry:number1}lu SpotlightVerificationResultFailures=%{public,signpost.telemetry:number2}ld SpotlightVerificationFailingRatio=%{public,signpost.description:attribute}f enableTelemetry=YES 
EDSearchableIndexVerifier
starting listener %@
received a new connection request %@
connection rejected because of missing entitlement
Remote Client Interrupted %@
Remote Client Invalidated %@
Unable to find label: %lld, %@
Starting migration for %lu threads
%{public}@
Skipping migration for thread %{public}@ due to error: %{public}@
Failed migration -- unable to add threads
%{public}@
Failed migration -- unable to delete threads
%{public}@
Stopping migration due to wrong state
%{public}@
Migrating batch of %lu threads
%{public}@
Finishing migration
%{public}@
Finalized migration for %lu threads: %{public}@
Finished migration: %{public}@
Resuming migration for thread scope %{public}@
Added %lu threads to migration for thread scope %{public}@
Got more object IDs after migration finished. objects: {%{public}@}; thread scope: {%{public}@}
Resetting object ID %{public}@ after change
%{public}@
Resuming migration
%{public}@
Got changed object IDs after migration finished: %{public}@
%{public}@
Deleting %{public}@
%{public}@
Deleting %lu threads from migration 
%{public}@
Got deleted object IDs after migration finished: %{public}@
%{public}@
Migration in progress for threadscope: %{public}@
Migration requested for threadscope: %{public}@
Unable to find display message for thread: %{public}@
Unable to find subject from display message %{public}@ for journaled thread %{public}@
Thread has no subject: %{public}@
Thread has no sender: %{public}@
Unable to return thread for objectID %{public}@ due to error: %{public}@
Looking up thread before thread: %{public}@
Unable to form comparison expression to look up position for thread: %{public}@, sort descriptors: %{public}@
Looking up next existing threads before %lu threads: %{public}@
Scheduling recomputation for %{public}@: %{public}@
Recomputing %lu threads: %{public}@
Successfully recomputed %lu threads: %{public}@
Failed to recompute %lu threads: %{public}@
Found %u mailbox object IDs for actived account.
Persistence is adding %lu messages
Adding %@thread: %{public}@
Changing %@thread (new messages): %{public}@
key paths: %{public}@
Persistence did add %u messages
count=%u 
ThreadPersistenceDidAddMessages
Persistence is setting deleted flag for %lu messages: %{public}@
Persistence is unsetting deleted flag for %lu messages: %{public}@
Persistence is changing flags for %lu messages: %{public}@
Changing thread (flag change): %{public}@
key paths: %{public}@
Persistence did change flags for %lu messages
Persistence is deleting %lu messages
Changing thread (deleted messages): %{public}@
key paths: %{public}@
Persistence did delete %lu messages
No thread database ID: %{public}@
Deleting thread: %{public}@
Changing thread (delete all messages in mailbox): %{public}@
key paths: %{public}@
Persistence did delete all messages in mailbox %{public}@
Persistence is changing conversation ID for %lu messages from %lld
Adding thread (conversation change): %{public}@
Changing thread (conversation change): %{public}@
key paths: %{public}@
Persistence did change message-id for message
Changing thread (hasAttachments change): %{public}@
Persistence did reconcile protected data
Migration finished for threadscope - %{public}@
Adding thread %lld with %u messages. Journaled: %{BOOL}d, replace: %{BOOL}d
Failed to add thread: %{public}@
Updating thread %lld with %u messages. Journaled: %{BOOL}d
Failed to update thread: %{public}@
Failed to get current display message sender.
Failed to get date of newest read / current display messages: %{public}@
Failed to update thread display message: %{public}@
Failed to add thread mailbox: %{public}@
Added %u mailbox(es) for thread DB ID %lld.
Failed to get message senders for thread.
Failed to add sender: %{public}@
Added/changed %u sender(s) for thread DB ID %lld.
Failed to get current display message sender: %{public}@
Failed to get actual display message sender: %{public}@
Failed to clear sender priority: %{public}@
Failed to set the sender priority: %{public}@
Failed to get message receipients for thread: %{public}@
Failed to add recipient: %{public}@
Added/updated %u type %u recipient(s) for thread DB ID %lld.
Failed to get message row IDs for thread: %{public}@
Found no rows for thread DB ID %lld.
Unable to create empty temp_persisted_messages: %{public}@
Found %u rows {%{public}@} for thread DB ID %lld.
Failed to drop temp_persisted_messages temp view: %{public}@
Failed to drop temp_thread_scope_message temp view: %{public}@
%p: thread scope state: use in-memory
%p: thread scope state: use pre-computed
%p: thread scope state: perform migration
%p: Creating implementations for thread query handler; query: {%{public}@}, observation identifier: {%{public}@}
%p: Replacing in-memory query handler %p -> %p
%p Keeping existing in-memory query handler %p
%p: Replacing pre-computed query handler %p -> %p
%p: Keeping existing pre-computed query handler %p
%p: Replacing thread migrator %p -> %p
%p: Creating new thread migrator %p
%p: Removing thread migrator %p
%p: Notifying observer about restart.
%p: Migrator %p will be started by in-memory query handler %p.
%p: Thread migrator %p did complete.
%p: Unknown thread migrator %p did complete.
%p: ID %{public}@ was updated.
%p: Observer callback from unknown (old?) underlying handler.
%p: ID %{public}@ matched added object IDs before.
%p: ID %{public}@ matched added object IDs after.
%p: ID %{public}@ matched moved object IDs before.
%p: ID %{public}@ matched moved object IDs after.
%p: ID %{public}@ matched changes for object IDs.
%p: ID %{public}@ matched deleted object IDs.
%p: ID %{public}@ finished initial load.
%p: Starting migrator %p.
%p: ID %{public}@ finished remote search.
%p: ID %{public}@ replaced existing object ID.
%p: ID %{public}@ will restart.
%p: ID %{public}@ matched oldest items updated for mailboxes.
Adding pre-computed thread scope: %{public}@ -> %{public}@
Performing eviction after adding %luth thread scope
Setting needsUpdate=%u for thread scope: %{public}@
Setting lastViewedDate=%{public}@ for thread scope: %{public}@
Resetting all pre-computed thread scopes
Resetting pre-computed thread scope: %{public}@
Resetting pre-computed thread scopes for mailbox scope: %{public}@
Loaded pre-computed thread scopes: %{public}@
Performing eviction after initializing %lu thread scopes
Evicting thread scope with database ID: %llu -> %{public}@ = %{public}@
Last viewed %f seconds in the future for thread scope %lld: %{public}@
Setting conversation flags %llu for conversations: %@
delete %@ (conversationID: %lld)
modifying %@ (conversationID: %lld): flags = %llu
found %lu message ids for conversation
creating new cloud entry %@: %@
Synchronizing with cloud store %@: %@
Merging server changes: %@
Server change. Clearing conversation flags for conversation: %lld
Server change. Updating conversation flags for conversation: %lld. Old flags %llu new flags %llu
Server change. Setting conversation flags for conversation: %lld
found conversation %lld
could not find a conversation that matched those message ids
Updating message ids for conversation %lld
Synced conversation object is not a dictionary
Finished merging server changes
Pruning database. Purging oldest entries %d
deleting entry with flag value of zero: %@
Conversation Remote Storage %{public}@ did change entries %@
over quota: pruning database
Perform daily export for changed conversations: %@
Removing orphaned entry from unknwown leys set: %@
registering for VIP kvstore at: %@
number of VIPs in current store: %lu
%@: current store contents: %{public}@
save VIPs with count %lu
save new VIPs with count %lu
remove VIPs with identifiers %@
Failed to write serialized entries: %{public}@
Failed to serialize %lu entries: %{public}@
VIP store after writing to cloud has %lu entries
VIP store contents after writing to cloud: %{private}@
VIP kvstore changed, reason: %{public}@
%lu keys changed
keys changed: %{public}@
Successfully synchronized KV Store
Failed to synchronize KV Store
local store has %lu VIPs before updating from cloud
local VIPs before updating from cloud: %{private}@
local store has %lu VIPs after updating from cloud
local VIPs after updating from cloud: %{private}@
merge VIPs from cloud with count %lu and local with count %lu
merge VIPs from cloud: %@ and local: %@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
EDAccount
ECMailAccount
NSObject
NSCopying
EDReceivingAccount
EDDeliveryAccount
EDAccountECAccountTransformer
EDAccountRepository
EFLoggable
EDAccountChangeHookResponder
EDActivityPersistence
EDActivityRegistry
EDActivityHookResponder
EMActivityRegistryInterface
EDAddMessagesDeletedDateReceivedIndexUpgradeStep
EDTableUpgradeStep
EDAddThreadTablesUpgradeStep
EDAssetDownloadScheduler
_EDAssetDownloadSchedulerContinuation
EDAssetDownloadSchedulerContinuation
EDCachingMailboxPredictor
EDMailboxPredictor
EDCategorySubsystem
EDClientState
EDCloudKitControl
CoreDataProperties
EDCloudMirroringPersistentStore
EDConversationDailyCloudExportActivityManager
EDConversationDailyiCloudExporter
EDConversationInfo
EDConversationMultipleRemoteStorage
EDConversationRemoteStorageDelegate
EDConversationRemoteStorage
EDConversationPersistence
EDUbiquitousConversationManagerDelegate
EDConversationDailyCloudExporterDelegate
EDPersistenceDatabaseSchemaProvider
EDConversationSubscriptionProvider
EDConversationPruningActivityManager
EDConversationRemoteCloudKitStorage
NSFetchedResultsControllerDelegate
EDConversationRemoteKVSStorage
EDDaemonInterfaceFactory
_MSTTLReference
EDDifferentialPrivacyReporter
EDMessageChangeHookResponder
EDMessagePersistence
_EMDistantContentRepresentation
EDFetchController
EDGmailLabelPersistence
EDHeuristicsMailboxPredictor
EDInMemoryThread
EDInMemoryThreadQueryHandler
EDMessageQueryHelperDelegate
EFContentProtectionObserver
EDInteractionEvent
EDInteractionEventLogMultiplexer
EDInteractionEventLog
EDInteractionEventLogSaltProvider
_EDUserActionState
EDInteractionLogger
EDMessageDeliveryHookResponder
EMInteractionLoggerInterface
EDLocalActionPersistence
EDMailboxPersistence
EDMailboxProviderDelegate
EMMailboxTypeResolver
EDMailboxPredictionController
EDMailboxRepository
EDMailDropMetadataGenerator
EDMailDropMetadataGeneratorFactory
EDMailDynamicDataAsset
EDMessageChangeManager
EDMessageCountQueryHandler
EDMailboxChangeHookResponder
EMMailboxChangeObserver
EFCancelable
_EDMailboxServerCount
EDMessageListItemPredicates
EDMailboxPredictionQueryAdapter
EDMessageObjectIDToDatabaseIDConverter
EDMessageQueryEvaluator
EDMessageQueryHandler
EDMessageQueryHelper
EDRemoteSearchDelegate
EDMessageQueryHelperMessageSource
EDMessageQueryParserObject
EDMessagePredicateParser
EDMessageComparisonPredicateParser
EDMessageCompoundPredicateParser
EDMessageQueryParser
EDMessageQueryTransformer
EDMessageRepository
EDThreadQueryHandlerDelegate
EMMessageRepositoryInterface
EDMessageRepositoryQueryHandler
EDMigrateBlockedSenderEnabledToBlockedSenderActionEnumUpgradeStep
EDMigrateUserDefaultsUpgradeStep
EDNonAcceptingServer
NSXPCListenerDelegate
EDOutgoingMessageRepository
EMOutgoingMessageRepositoryInterface
EDPBGeneratedExtensions
EDPETMessageFrameTypeIntrospectable
EDPBDataSetters
EDPBBaseMessageFields
EDPBInteractionEvent
EDPBInteractionEventAppBackground
EDPBInteractionEventAppLaunch
EDPBInteractionEventAppResume
EDPBInteractionEventFlagChanged
EDPBInteractionEventForwardDraftStarted
EDPBInteractionEventForwardSent
EDPBInteractionEventHeader
EDPBInteractionEventLinkClicked
EDPBInteractionEventMarkedMuteThread
EDPBInteractionEventMessageCopied
EDPBInteractionEventMessageFetched
EDPBInteractionEventMessageMoved
EDPBInteractionEventMessageSent
EDPBInteractionEventMessageViewEnd
EDPBInteractionEventMessageViewStart
EDPBInteractionEventReadChanged
EDPBInteractionEventReplyDraftStarted
EDPBInteractionEventReplySent
EDPBMessageData
EDPBMessageDataIDOnly
EDPBMessageHeaders
EDPersistedMessageQueryIterator
EDPersistence
EDPersistenceDatabase
EDPersistenceDatabaseConnectionPoolDelegate
EDPersistenceDatabaseConnectionDelegate
EDPersistenceDatabaseConnection
EDPersistenceDatabaseConnectionPool
_EDPersistenceDatabaseConnectionWrapper
EDPersistenceDatabaseGenerationWindow
EDPersistenceDatabaseJournal
EDPersistenceDatabaseJournalManager
EDPersistenceDatabaseSchema
EDPersistenceForeignKeyPlaceholder
EDPersistenceAssociationPlaceholder
EDDatabaseChangeHookResponder
EDMessageReadHookResponder
EDProtectedDataReconciliationHookResponder
EDSearchableIndexHookResponder
EDThreadChangeHookResponder
EDPersistenceHookRegistry
EDPersonaPersistenceLayoutManager
EDPETBatchedWrapper
EDPETInteractionEvent
EDPETInteractionEventLog
EDPBHasher
EDPETQuotaReachedEvent
EDPETSubmittedEvent
EDPrecomputedThreadQueryHandler
_EDThreadPositionChangeSet
EDProtectedDatabasePersistence
EFSignpostable
EDRemoteClient
EMDaemonInterfaceXPC
EDRemoveUnusedSchemaTableUpgradeStep
EDRenameThreadsTableUpgradeStep
EDSearchableIndex
CSSearchableIndexDelegate
EDSearchableIndexVerifierDataSource
EDSearchableIndexSchedulable
EMSearchableIndexInterface
_EMSearchableIndexResultKey
_EMSearchableIndexPendingRemovals
EDSearchableIndexAttachmentItem
EDIndexableItem
EDSearchableIndexAttachmentItemMetadatum
EDSearchableIndexAttachmentItemMetadatumBuilder
EDSearchableIndexBudgetConfiguration
EFPubliclyDescribable
EDSearchableIndexClientState
EDSearchableIndexItem
EDIndexableMailbox
EDSearchableIndexManager
EDSearchableIndexPendingItem
EDSearchableIndexPersistenceAttachmentDatum
EDSearchableIndexPersistence
EDSearchableIndexDataSource
EDSearchableIndexScheduler
EDSearchableIndexSchedulableDelegate
EDSearchableIndexSubjectTester
EDSearchableIndexTesting
EDSearchableIndexUpdates
EDSearchableIndexVerifier
EDSearchableIndexVerificationData
EDServer
EDServerMessagePersistenceFactory
EDServerMessagePersistence
EDSubjectTokenizer
EDTableMetadataPersistence
EDTaskScheduler
EDThreadMigrator
_EDThreadMigrationState
EDThreadPersistence
EDThreadScopeManagerDataSource
_EDThreadPersistence_ThreadMessages
_EDThreadPersistence_PersistedThread
_EDThreadPersistence_ThreadScope
_EDThreadPersistence_StatementCache
_EDThreadPersistence_SQLHelper
_EDWrappedMessage
_EDLazyWrappedMessage
_EDThreadQueryUnderlyingHandlers
EDThreadQueryHandler
EDThreadMigratorDelegate
EMMessageListItemQueryResultsObserver
EDThreadReloadSummaryHelper
EDThreadScopeManager
_EDThreadScopeInfo
EDTransactionService
EDUbiquitousConversationManager
EDUpdateThrottler
EDVIPManager
EMVIPManager
EDVIPManagerProxy
EMVIPManagerInterface
EDAdditions
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
copyWithZone:
systemAccount
emailAddressStrings
hostname
setHostname:
password
setPassword:
identifier
displayName
username
canAuthenticateWithCurrentCredentials
hasPasswordCredential
savePersistentAccount
statisticsKind
primaryiCloudAccount
transformAccount:
deliveryAccount
setDeliveryAccount:
mailboxForType:
containsMailboxWithURL:
isManaged
sourceIsManaged
emailAddresses
smtpIdentifier
isLocalAccount
shouldArchiveByDefault
transformReceivingAccount:
maximumMessageBytes
transformDeliveryAccount:
initWithRepresentedObjectID:
setUsername:
setStatisticsKind:
setSourceIsManaged:
setEmailAddresses:
setShouldArchiveByDefault:
setPrimaryiCloudAccount:
initWithObjectID:name:hostname:builder:
setMaximumMessageBytes:
transformedValueClass
allowsReverseTransformation
transformedValue:
UTF8String
init
registerAccountChangeHookResponder:
unregisterHookResponder:
dealloc
accountsProvider
mailAccounts
ef_filter:
transformAccounts:
addObject:
removeObject:
addCancelationBlock:
allAccounts
count
transformer
ef_map:
copy
countByEnumeratingWithState:objects:count:
accountsAdded:
accountsRemoved:
accountsChanged:
accountBecameActive:
accountBecameInactive:
initWithAccountsProvider:hookRegistry:
registerObserver:completionHandler:
allAccountsWithCompletionHandler:
.cxx_destruct
setTransformer:
setAccountsProvider:
hookRegistry
setHookRegistry:
_observers
_lock
_transformer
_accountsProvider
_hookRegistry
allValues
isEqualToActivityWithType:userInfo:
objectID
setObject:forKeyedSubscript:
initWithActivityType:userInfo:
removedActivityWithID:
startedActivity:
objectForKeyedSubscript:
finished
finishWithError:
needsPersistentHistory
activityWithID:finishedWithError:
setUserInfoObject:forKey:
activityWithID:setUserInfoObject:forKey:
setCompletedCount:totalCount:
activityWithID:setCompletedCount:totalCount:
initWithHookResponder:
startActivityOfType:userInfo:
currentActivities
activityHookResponder
setActivityHookResponder:
_currentActivities
_activityHookResponder
registerActivityHookResponder:
containsObject:
em_unknownError
numberWithLongLong:
registerActivityObserver:completion:
initWithHookRegistry:activityPersistence:
activityPersistence
_activityPersistence
sqlDB
runWithConnection:
threadScopesTableSchema
threadsTableSchema
threadMailboxesTableSchema
threadSendersTableSchema
threadRecipientsTableSchema
columnForName:
setAsForeignKeyForTable:onDelete:onUpdate:
arrayWithObjects:count:
initWithTables:
integerColumnWithName:nullable:
blobColumnWithName:nullable:
numberWithInt:
integerColumnWithName:nullable:defaultValue:
initWithName:rowIDType:columns:
columnExpression
isNotNull
isNull
initWithExpressions:
addCheckConstraintForExpression:
name
initWithTableName:columnNames:where:unique:
addIndex:
addIndexForColumns:
addUniquenessConstraintForColumns:conflictResolution:
initWithName:columns:primaryKeyColumns:
initWithName:rowIDType:rowIDAlias:columns:
_schemaWithMessagesTable:mailboxesTable:conversationsTable:
definitionWithDatabaseName:
initWithIdentifier:regularInterval:failureInterval:backOffFactor:handler:
stringWithFormat:
standardUserDefaults
_lastFailureIntervalKey
removeObjectForKey:
_regularInterval
_xpcCriteriaForInterval:
_nextFailureInterval
setInteger:forKey:
_identifier
integerForKey:
setScheduler:
setActivity:
_queue
_handler
_failureInterval
_backOffFactor
initWithIdentifier:handler:
_rescheduleAfterSuccessActivity:
_rescheduleAfterFailureActivity:
_stopSchedulingActivity:
activityHandlerBlock
set_identifier:
set_lastFailureIntervalKey:
set_handler:
set_regularInterval:
set_failureInterval:
set_backOffFactor:
set_queue:
scheduler
activity
rescheduleAfterSuccess
rescheduleAfterFailure
stopScheduling
_scheduler
_activity
setPredictor:
setCache:
dictionary
setCacheKeysByProperty:
_cacheKeyForMessages:
cache
objectForKey:
predictor
predictMailboxIDsForMessages:limit:diagnostics:
setObject:forKey:
_propertyKeysForMessage:
_trackCacheKey:forPropertyKey:
cacheKeysByProperty
allObjects
removeAllObjects
persistentID
ef_mapSelector:
mutableCopy
compare:
sortUsingSelector:
componentsJoinedByString:
array
listIDHash
int64Value
conversationID
ea_uncommentedAddress
initWithString:
from
firstObject
longLongValue
initWithPredictor:
invalidatePredictionsAffectedByMessage:
removeAllPredictions
_predictor
_cache
_cacheKeysByProperty
initWithUserProfileProvider:
registerMessageChangeHookResponder:
initWithLogs:
messagePersistence
mailboxPersistence
initWithMessagePersistence:mailboxPersistence:eventLog:
registerMessageDeliveryHookResponder:
initWithPersistence:userProfileProvider:vipManager:sourceApplicationBundleIdentifier:
interactionLogger
donationController
logUploader
setLogUploader:
logFile
setLogFile:
_interactionLogger
_donationController
_logUploader
_logFile
ef_publicDescription
initWithBoost:
discreteProgressWithTotalUnitCount:
drop
setCancellationHandler:
sharedInstance
setCurrentlyVisibleMailboxObjectIDs:
setClientIsInForeground:
giveBoostWithCompletionBlock:
visibleMailboxesObjectIds
isForeground
_isForeground
_visibleMailboxesObjectIds
fetchRequestWithEntityName:
fetchRequest
_setupCoreDataStack
initWithExecutionQueue:
setObserveForNetworkReachability:
setInitialDelay:
bundleForClass:
URLForResource:withExtension:
initWithContentsOfURL:
lastObject
stringByAppendingPathComponent:
persistentContainerWithPath:managedObjectModel:
persistentStoreDescriptions
setShouldAddStoreAsynchronously:
initWithContainerIdentifier:
setUseZoneWidePCS:
setUseEncryptedStorage:
setContainerOptions:
initWithOptions:
setOption:forMirroringKey:
setOption:forKey:
loadPersistentStoresWithCompletionHandler:
newBackgroundContext
managedObjectContext
performBlock:
performBlockAndWait:
_requestWithKind:completionBlock:
_schedulerForKind:
_executeRequestWithKind:completionBlock:
scheduleTask:canceledCallback:
importScheduler
exportScheduler
_wrapCompletion:forRequestKind:
alloc
initWithOptions:completionBlock:
executeRequest:error:
success
error
userInfo
rescheduleTask
requestImportWithCompletionBlock:
requestExportWithCompletionBlock:
persistentContainer
setImportScheduler:
setExportScheduler:
_persistentContainer
_importScheduler
_exportScheduler
_managedObjectContext
initWithDelegate:conversationManager:
scheduleWithConversationExportDelegate:conversationManager:
delegate
previousSyncAnchorForDailyExport
currentSyncAnchorForDailyExport
flaggedConversationsChangedBetweenStartAnchor:endAnchor:
conversationManager
performDailyExportForChangedConversations:
setNewPreviousSyncAnchorForDailyExport:
_delegate
_conversationManager
initWithDelegate:
setKvsStorage:
setCloudKitStorage:
initWithServiceName:
setDataReplicationTransaction:
cloudKitStorage
dictionaryForKey:
dictionaryRepresentation
kvsStorage
removeDictionaryForKey:
setDictionary:forKey:
synchronize
refresh
isInitialized
dataReplicationTransaction
startTransaction
privateQueue
_saveChanges:fromStorage:toStorage:synchronize:
conversationRemoteStorage:didChangeEntries:reason:
endTransaction:
hasPendingTransactions
resetPendingTransactions
_replicateAllContentFromStore:toStore:synchronize:
_handleStorageReady:
allKeys
isMigratedFromKVSStorage
setMigratedFromKVSStorage:
conversationRemoteStorageDidInitialize:
conversationRemoteStorageWillResetData:
conversationRemoteStorageDidResetData:
storageName
setDelegate:
setPrivateQueue:
_privateQueue
_kvsStorage
_cloudKitStorage
_dataReplicationTransaction
conversationsTableSchema
conversationIDMessageIDTableSchema
textColumnWithName:collation:nullable:
scheduleWithConversationManager:
performInitialSync
database
preparedStatementForQueryString:
numberValue
stringValue
executeUsingBlock:error:
handleError:message:
performReadBlock:
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
executeWithNamedBindings:usingBlock:error:
databaseIDValue
unsignedIntegerValue
numberWithUnsignedLongLong:
lastInsertedDatabaseID
performWriteBlock:
setPersistenceConversationFlags:forConversationIDs:reason:
syncKeyForUpdatedConversation:flags:
setPersistenceConversationFlags:syncKey:forConversationID:reason:
setFlags:forConversations:
transactionGeneration
insertGeneration:
objectAtIndexedSubscript:
unsignedLongLongValue
_notifyOfFlagChangeForConversationID:oldFlags:newFlags:reason:generationWindow:
objectValue
updateAssociationTableForMessageID:dateSent:conversationID:
updateAssociationTableForMessageIDs:conversationID:
conversationFlagsForConversationNotificationLevel:
numberWithDouble:
conversationNotificationLevelForConversationFlags:
persistenceDidChangeConversationNotificationLevel:conversationID:generationWindow:
_postChangeNotificationForConversationID:flags:oldFlags:reason:
numberWithBool:
defaultCenter
numberWithInteger:
postNotificationName:object:userInfo:
hasSubscribedConversations
conversationsTableName
tablesAndForeignKeysToResolve:associationsToResolve:
syncedConversationIDsBySyncKey
persistenceConversationFlagsForConversationID:
conversationIDForMessageIDs:
messageIDsForConversationID:limit:
remoteMessageIDsAdded:forConversationID:
pruneConversationTables:
clearConversationFlagsAndSyncKeyForConversationIDs:
initWithDatabase:hookRegistry:
initializeConversationManagerAndPerformInitialSync
createConversationWithFlags:
markConversationWithIDs:mute:
markConversationWithIDs:notify:
updateAssociationTableForMessagePersistentIDs:conversationID:
updateConversationNotificationLevel:forConversationWithID:
notificationQueue
setNotificationQueue:
_database
_notificationQueue
pruneDatabasePurgingOldestEntries:
setExportTransaction:
setImportTransaction:
_handleWillResetSyncDataNotification:
addObserver:selector:name:object:
_handleDidResetSyncDataNotification:
_handlePushNotification:
_initialSetup
mirroringPersistentStore
exportTransaction
_requestExportWithManagedObjectContext:
importTransaction
_requestImportWithManagedObjectContext:
_controlInManagedObjectContext:
migratedFromKVSStorage
setInitialized:
_requestFirstSyncWithManagedObjectContext:
_recoverHistoryToken
historyToken
entityForConversationDictionary:key:managedObjectContext:
conversationUUID
_handleDuplicationsForConversationUUIDs:managedObjectContext:
_addOrUpdateConversationInfo:managedObjectContext:
_removeConversationInfoWithId:managedObjectContext:
_conversationInfoWithUUID:managedObjectContext:
dictionaryForConversationInfo:
allConversationInfosInManagedObjectContext:
dictionaryWithCapacity:
_retrieveChangesSinceLastRequestInManagedObjectContext:
notificationFromRemoteNotificationDictionary:
insertNewObjectForEntityForName:inManagedObjectContext:
save:
setConversationUUID:
setNotifyMe:
setMuted:
setMessageIds:
doubleValue
dateWithTimeIntervalSince1970:
setLastModified:
muted
notifyMe
messageIds
lastModified
timeIntervalSince1970
ed_archiveTokenWithError:
ed_unarchivedTokenWithData:error:
_conversationInfosWithUUID:managedObjectContext:
subarrayWithRange:
_removeConversationInfoWithObjectId:save:managedObjectContext:
predicateWithFormat:
setPredicate:
initWithKey:ascending:
setSortDescriptors:
executeFetchRequest:error:
deleteObject:
existingObjectWithID:error:
author
componentsSeparatedByString:
transactionAuthor
isEqualToString:
changes
changeType
changedObjectID
_conversationInfoWithObjectId:managedObjectContext:
tombstone
null
enumerateChangeHistorySinceToken:managedObjectContext:usingBlock:
setHistoryToken:
persistHistoryToken
_transactionHistorySinceToken:managedObjectContext:error:
token
code
fetchHistoryAfterToken:
setResultType:
resultType
result
entity
cloudKitAPSTopics
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
_updateConversationInfo:withAnotherConversationInfo:
fetchedResultsController
_initialized
_mirroringPersistentStore
_fetchedResultsController
_historyToken
_exportTransaction
_importTransaction
additionalStoreWithIdentifier:
_storeChangedExternally:
subsetOfMessageIDsToSyncFromMessageIDString:
kvStore
enumerateObjectsUsingBlock:
object
enumerateKeysAndObjectsUsingBlock:
initialized
setKvStore:
_kvStore
persistence
initWithMailboxPersistence:
conversationPersistence
threadPersistence
messageChangeManager
remoteSearchProvider
userProfileProvider
vipManager
newFetchController
initWithMessagePersistence:conversationPersistence:threadPersistence:messageChangeManager:hookRegistry:mailboxPersistence:remoteSearchProvider:userProfileProvider:vipManager:fetchController:
doesNotRecognizeSelector:
searchableIndexManager
enableIndexingAndBeginScheduling:
index
categorySubsystem
initWithVIPManager:
initWithPersistence:categorySubsystem:
newAccountRepository
newMailboxRepository
newMessageRepository
newOutgoingMessageRepository
newSearchableIndex
sharedInteractionLogger
sharedDonationController
newVIPManagerInterface
newActivityRegistry
setCategorySubsystem:
_persistence
_categorySubsystem
lastSet
timeIntervalSinceNow
date
setLastSet:
setValue:
value
initWithTTL:
getValueWithGenerator:
setTtl:
_value
_ttl
_lastSet
mailbox
_shouldRecordMailbox:
recordingQueue
_recordSenders:
reportSenderDomainForMessages:
type
_userDomains
_profileProvider
accountsEmailAddresses
addressDomainFromAddress:
lowercaseString
length
_mailDynamicData
shouldIgnoreDomain:
shouldIgnoreUserAccountDomains
_isUserAccountDomain:
recordingHandler
_recordingKey
_localeIdentifier
currentLocale
systemLocale
localeIdentifier
hasPrefix:
persistenceWillBeginUpdates
persistenceDidFinishUpdates
persistenceWillAddMessage:fromExistingMessage:
persistenceIsAddingMessages:journaled:generationWindow:
persistenceDidAddMessages:generationWindow:
persistenceDidReconcileJournaledMessages:generationWindow:
persistenceDidUpdateData:message:
persistenceDidUpdateProperties:message:generationWindow:
persistenceIsDeletingMessages:generationWindow:
persistenceDidDeleteMessages:generationWindow:
persistenceIsDeletingAllMessagesInMailboxWithURL:generationWindow:
persistenceDidDeleteAllMessagesInMailboxesWithURLs:generationWindow:
persistenceWillChangeFlags:messages:
persistenceIsChangingFlags:messages:generationWindow:
persistenceDidChangeFlags:messages:generationWindow:
persistenceDidAddLabels:removeLabels:messages:generationWindow:
persistenceWillChangeConversationID:messages:
persistenceIsChangingConversationID:messages:generationWindow:
persistenceDidChangeMessageIDHeaderHash:oldConversationID:message:generationWindow:
persistenceWillTransferMessages:transferType:destinationMailboxURL:userInitiated:
set_recordingKey:
set_userDomains:
set_profileProvider:
set_mailDynamicData:
setRecordingHandler:
setRecordingQueue:
_recordingHandler
_recordingQueue
contentMessage
relatedContentItems
ef_firstObjectPassingTest:
em_itemNotFoundError
requestRepresentationWithOptions:delegate:completionHandler:
requestMoreContentBlock
requestRepresentationForItemWithObjectID:options:delegate:completionHandler:
requestUpdatedRepresentationWithCompletion:
invalidate
initWithAccountsProvider:
labelURLForDatabaseID:
labelForDatabaseID:
setUserProfileProvider:
setLibrary:
setMailboxIDCache:
setParameters:
initWithUserProfileProvider:queryAdapter:
_mergeDefaultParameters:withParameters:
addEntriesFromDictionary:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
string
setDebugLog:
_modeParameterIs:
_predictionsForMessage:limit:
subject
measure
setMeasure:
object:withMeasure:
objectEnumerator
max:
reverseSortedObjects:limit:
arrayWithCapacity:
parameters
_summedWeightedPredictionsForMessage:limit:
_orderedModePredictionForMessage:
_weightedModePredictionsForMessage:
_countsForField:message:
_topHitFromMailboxDictionary:message:
absoluteString
_removeSpecialMailboxesInCounts:message:
_conversationIDCountsForMessage:
_senderCountsForMessage:
_recipientCountsForMessage:
_listIDCountsForMessage:
boolValue
library
groupedMessagesCountByMailboxMatchingQuery:variable:
_limitToRecents
_groupedMessagesCountByMailboxMatchingQuery:variable:
ea_isLegalEmailAddress
_allowedRecipientsForMessage:
mailboxIDCache
validMailboxesForPrediction
_userCreatedMailboxIDs
removeObjectsForKeys:
setObject:
_normalizedTermFrequencyTopHitFromDictionary:withThreshold:
_topHitFromMailboxDictionary:
sortedArrayUsingSelector:
_objectWithMeasure:timesHigherThanFollowUpInMeasures:
allEmailAddresses
_isAllowedRecipient:
initWithUserProfileProvider:queryAdapter:parameters:
debugLog
_userProfileProvider
_library
_parameters
_mailboxIDCache
_debugLog
flags
deleted
sortDescriptors
sortUsingDescriptors:
predicate
threadScopeForPredicate:
_isSortedByDate:
_dateSortDescriptors
_recalculateDisplayMessage
initWithConversationID:threadScope:
_createThreadWithObjectID:
displayMessage
originatingQuery
mailboxTypeResolver
setMailboxTypeResolver:
newestMessage
setDate:
setSubject:
summary
setSummary:
_combinedSenderList
setSenderList:
_combinedToList
setToList:
_combinedCCList
setCcList:
_combinedFlags
setFlags:
_combinedHasUnflagged
setHasUnflagged:
_combinedFlagColors
setFlagColors:
_combinedIsVIP
setIsVIP:
_combinedIsBlocked
setIsBlocked:
_combinedHasAttachments
setHasAttachments:
conversationNotificationLevel
setConversationNotificationLevel:
setCount:
_combinedMailboxes
setMailboxes:
itemID
setDisplayMessageItemID:
initWithObjectID:originatingQuery:builder:
initWithMessages:originatingQuery:mailboxTypeResolver:
ascending
_addMessagesToThread:
_calculateAndApplyChange
ef_insertObjectIfAbsent:usingComparator:
changesForKeyPaths:ofItems:
_calculateChangesAfterRemovingMessages:applyingChanges:threadIsEmpty:
thread
displayMessageItemID
collectionItemID
messages
removeMessages:threadIsEmpty:
addMessages:
removeObjectsInArray:
applyToMessageListItem:
changeFrom:to:
setThread:
sortDescriptorForDateAscending:
senderList
addObjectsFromArray:
toList
ccList
combinedFlagsForMessageListItems:
hasUnflagged
initWithIndexesInRange:
flagColors
addIndexes:
containsIndexes:
isVIP
isBlocked
hasAttachments
mailboxes
_dateSortedMessages
read
indexOfObjectPassingTest:
setDisplayMessage:
ef_reverse
changeMessages:forKeyPaths:threadIsEmpty:
updateMessage:fromOldObjectID:
threadScope
_messages
_thread
_threadScope
_originatingQuery
_mailboxTypeResolver
_displayMessage
initWithQuery:messagePersistence:hookRegistry:observer:observationIdentifier:
_inMemoryThreadSortDescriptorsForThreadSortDescriptors:
initWithName:delayInterval:scalingFactor:
serialDispatchQueueSchedulerWithName:qualityOfService:
mailboxScopeForPredicate:withMailboxTypeResolver:
_blockedSendersDidChange:
_vipsDidChange:
removeObserver:name:object:
cancel
performSyncBlock:
tearDown
query
start
contentProtectionQueue
_createHelperAndReconcileJournal:
setDidCancel:
messageQueryHelper
isPaused
resultsObserver
updateThrottler
unacknowledgedUpdatesCountAndTimeSinceLastAcknowledgement:
setIsPaused:
setHasChangesWhilePaused:
hasChangesWhilePaused
_refreshObserver
updateWithBlock:unacknowledgedUpdatesCount:
label
addInvocationBlock:
resultQueue
observationIdentifier
observer:wasUpdated:
observerWillRestart:
ef_compactMap:
_distinctObjectIDs:queryHandlerLog:
observer:matchedAddedObjectIDs:before:extraInfo:
ef_enumerateObjectsInBatchesOfSize:block:
observerDidFinishInitialLoad:
observer:matchedChangesForObjectIDs:
_notifyObserverOfOldestThreadsByMailboxObjectIDs
_messageQueryFromThreadsQuery:
initWithQuery:messagePersistence:hookRegistry:remoteSearchProvider:scheduler:delegate:shouldReconcileJournal:
setMessageQueryHelper:
setIsInitialized:
_contentProtectionChangedToUnlocked
_contentProtectionChangedToLocked
didCancel
_restartHelper
_queryHelperIsCurrent:
_messagesWereAdded:
_initializeOldestThreadsByMailbox
_messagesByConversationIDForMessages:
_messageListItemChangeAffectsSorting:
_prepareToSendUpdates
_reportChanges:
_mergeInThreads:forMove:
_didSendUpdates
_messagesWereChanged:forKeyPaths:deleted:
initWithObjects:
_reportDeletes:
resultsObserverIfNotPaused
observer:replacedExistingObjectID:withNewObjectID:
strongToStrongObjectsMapTable
keyEnumerator
nextObject
ef_groupBy:
_removeThreadsForInMemoryThreads:forMove:
comparator
sortUsingComparator:
insertObject:atIndex:
removeObjectAtIndex:
observer:matchedMovedObjectIDs:before:
_didMergeInThreads:
reloadSummaryHelper
mailboxScope
summariesToReloadForChanges:mailboxScope:
requestSummaryForMessageObjectID:
addChange:
observer:matchedDeletedObjectIDs:
_threadsWereDeleted
emailAddressValue
simpleAddress
ef_any:
isVIPAddress:
observerDidFinishRemoteSearch:
queryOptions
_updateOldestThreadsForMailboxes:
dateSortOrder
mailboxObjectIDs
_updateCurrentOldestThreadWithThreadIfApplicable:forMailbox:
enumerateObjectsWithOptions:usingBlock:
ef_mapValues:
observer:matchedOldestItemsUpdatedForMailboxes:
initWithTargetClass:predicate:sortDescriptors:queryOptions:label:
stringByAppendingString:
valueForKey:
queryHelper:didFindMessages:
queryHelperDidFindAllMessages:
queryHelper:didAddMessages:
queryHelper:messageFlagsDidChangeForMessages:
queryHelper:conversationIDDidChangeForMessages:fromConversationID:
queryHelper:conversationNotificationLevelDidChangeForConversation:conversationID:
queryHelper:objectIDDidChangeForMessage:oldObjectID:oldConversationID:
queryHelper:didUpdateMessages:forKeyPaths:
queryHelper:didDeleteMessages:
queryHelperDidFinishRemoteSearch:
queryHelperNeedsRestart:
contentProtectionStateChanged:previousState:
initWithQuery:messagePersistence:hookRegistry:vipManager:remoteSearchProvider:observer:observationIdentifier:
threadForObjectID:error:
messagesForThread:
messageSortDescriptors
_conversationIDs
_threadsByConversationID
_changesWhilePaused
_oldestThreadsByMailboxObjectIDs
_threadsLock
_didCancel
_isInitialized
_isPaused
_hasChangesWhilePaused
_vipManager
_remoteSearchProvider
_messageQueryHelper
_messageSortDescriptors
_comparator
_updateThrottler
_reloadSummaryHelper
_contentProtectionQueue
_resultQueue
_mailboxScope
appendFormat:
eventID
appendString:
version
accountID
mailboxID
messageIDHash
messagePersistentID
data
setEventID:
setVersion:
setAccountID:
setMailboxID:
setConversationID:
setMessageIDHash:
setMessagePersistentID:
setName:
setData:
_eventID
_version
_date
_accountID
_mailboxID
_conversationID
_messageIDHash
_messagePersistentID
_name
_data
logs
persistEvent:date:message:data:
persistEvent:date:conversationID:data:
persistEvent:dataFromMessage:
persistEvent:dataFromMessage:account:
persistEvent:date:message:mailbox:
persistEvent:date:message:mailboxType:
initWithFormat:
setLogs:
_logs
dataUsingEncoding:
_findOrCreateSalt
_findExistingSaltError:
second
first
_deleteSalt
_createSalt
errorWithDomain:code:userInfo:
_queryKeychainError:
sortedArrayUsingComparator:
getBytes:range:
appendBytes:length:
pairWithFirst:second:
initWithBytes:length:
ef_hexString
currentDevice
isInternal
saltProviderWithString:
saltProviderFromKeyChain
salt
migrateAccessClass
setSalt:
lock
setLock:
_salt
viewingStarted
setViewingStarted:
message
setMessage:
scrolledToEnd
setScrolledToEnd:
mutedThread
setMutedThread:
setKey:
cellStyle
setCellStyle:
messageListType
setMessageListType:
setRow:
_scrolledToEnd
_mutedThread
_viewingStarted
_message
_key
_cellStyle
_messageListType
_row
_conversationFlagsChanged:
processingQueue
persistedMessagesForMessageObjectIDs:requireProtectedData:temporarilyUnavailableMessageObjectIDs:
_eventLog
_composeStartedForMessage:eventName:
deliveredMessage:account:
_stateTrackingQueue
_viewedMessages
_stateForMessage:extra:container:
timeIntervalSinceDate:
removeIndexesInRange:
_messageListVisibleRows
_range:minusRange:
set_messageListVisibleRows:
_messageListMessages
containsIndex:
_logMessageListDisplayEndedForState:now:
_logMessageListDisplayStartedMessage:now:type:row:cellStyle:
movedMessages:toMailboxType:
stringByAppendingFormat:
setWithObjects:
numberWithUnsignedLong:
messageListDisplayEndedForAllMessages
_viewingEndedForAllMessages
integerValue
account
reason
readChanged
flaggedChanged
flagged
repliedChanged
replied
forwardedChanged
redirectedChanged
forwarded
redirected
legacyMailboxForMailboxURL:
logEvent:date:messageID:data:
logEvent:date:data:
composeReplyStartedForMessage:
composeFowardStartedForMessage:
composedMessageSent:account:
scrolledToEndOfMessage:
viewingStartedForMessage:
viewingEndedForMessage:
messageListDisplayVisibleRowsChanged:
messageListDisplayStartedForMessage:messageListType:row:cellStyle:
messageListDisplayEndedForMessage:cellStyle:
movedMessages:toMailbox:
archivedMessages:
deletedMessages:
copiedMessages:toMailbox:
clickedLinkInMessage:scheme:
applicationLaunched
applicationWillSuspend
applicationWillResume
waitForPendingStateChanges
set_viewedMessages:
set_messageListMessages:
set_stateTrackingQueue:
set_eventLog:
setMessagePersistence:
setMailboxPersistence:
setProcessingQueue:
_messagePersistence
_mailboxPersistence
_processingQueue
localMessageActionsTableSchema
actionMessagesTableSchema
actionLabelsTableSchema
actionFlagsTableSchema
messagesTableName
mailboxesTableName
initWithColumn:tableName:onDelete:onUpdate:
ef_SQLEscapedString
_transferActionForRow:connection:failedMessages:
_flagChangeActionForRow:connection:
_flagChangeAllActionForRow:connection:
_transferUndownloadedActionForRow:connection:
_labelChangeActionForRow:connection:
executeWithIndexedBindings:usingBlock:error:
handledFailedCopyForMessages:
messageForDatabaseID:
setSourceMessage:
setSourceRemoteID:
setDestinationMessage:
initWithBuilder:
mailboxURLForDatabaseID:
setMessageActionPersistentID:
setMailboxURL:
setUserInitiated:
setSourceMailboxURL:
setDestinationMailboxURL:
setTransferType:
setItemsToDownload:
setItemsToCopy:
setItemsToDelete:
_findMessagesForAction:remoteIDs:messages:connection:
anyObject
setOldestPersistedRemoteID:
_flagChangeForAction:connection:
setRemoteIDs:
setMessages:
setFlagChange:
gmailLabelPersistence
setLabelsToAdd:
setLabelsToRemove:
changesReadTo:
changesDeletedTo:
changesRepliedTo:
changesFlaggedTo:
changesDraftTo:
changesForwardedTo:
changesRedirectedTo:
changesJunkLevelSetByUserTo:
changesJunkLevelTo:
changesFlagColorTo:
mailboxURL
mailboxDatabaseIDForURL:
domain
flagChange
_addFlagChange:actionID:connection:
_addActionMessageForMessage:destinationMessage:actionID:actionPhase:connection:
initWithTable:conflictResolution:
executeInsertStatement:rowsChanged:
initWithTable:
oldestPersistedRemoteID
executeInsertStatement:error:
deletedChanged
draftChanged
draft
junkLevelSetByUserChanged
junkLevelSetByUser
junkLevelChanged
junkLevel
flagColorChanged
flagColor
sourceMailboxURL
destinationMailboxURL
transferType
userInitiated
itemsToDownload
sourceMessage
destinationMessage
itemsToCopy
itemsToDelete
sourceRemoteID
_addActionMessageForSourceRemoteID:actionID:connection:
labelsToAdd
_setLabelsOnAction:labels:add:connection:
labelsToRemove
callStackSymbols
remoteID
completedItems
failedItems
phaseForResults
messageActionPersistentID
_deleteCopyItems:actionID:connection:
updateWithFailedItems:forPhase:
updateWithCompletedItems:forPhase:
_updateCopyItems:toPhase:actionID:connection:
removeMessageAction:
moveSupportedFromMailboxURL:toURL:
_whereClauseToFindCopyItems:
executeStatementString:errorMessage:
ef_quotedSQLEscapedString
updateWithCompletedCopyItems:
column:
equalTo:
setWhereClause:
executeUpdateStatement:error:
initWithDatabase:gmailLabelPersistence:
messageActionsForAccountURL:previousActionID:
persistFlagChangeAction:
persistFlagChangeUndownloadedAction:
persistTransferAction:
persistTransferUndownloadedAction:
persistLabelChangeAction:
updateTransferAction:withResults:
_sourceRemoteIDListForCopyItems:
updateTransferUndownloadedMessageAction:withResults:
_gmailLabelPersistence
mailboxProvider
allMailboxes
changeObserversByIdentifier
mailboxListChanged:
path
fetchMailboxes
initWithURL:
legacyMailboxForObjectID:
allMailboxObjectIDsWithMailboxTypeResolver:forExclusion:
mailboxObjectIDsForMailboxType:
minusSet:
mailboxTypeForMailboxObjectID:
setChangeObserversByIdentifier:
mailboxListInvalidated
initWithMailboxProvider:
allMailboxesWithCompletionHandler:
userCreatedMailboxObjectIDs
fetchMailboxLists
mailboxDatabaseIDsForMailboxObjectIDs:
serverCountsForMailboxScope:block:
addChangeObserver:withIdentifier:
removeChangeObserverWithIdentifier:
createMailbox:parentMailboxID:
deleteMailbox:
moveMailbox:newParentMailboxID:
renameMailbox:newName:
setMailboxProvider:
_changeObserversByIdentifierLock
_changeObserversByIdentifier
_mailboxProvider
_createPredictor
_invalidateCacheForAddedMessage:
isCanceled
_processPredictionForMessages:
cachingPredictor
URLWithString:
queryAdapter
initWithMessagePersistence:mailboxPersistence:hookRegistry:userProfileProvider:
predictMailboxForMovingMessages:completionHandler:
_queryAdapter
_cachingPredictor
serializationQueue
_performCreateMailboxChangeAction:
_performDeleteMailboxChangeAction:
_performMoveMailboxChangeAction:
_performRenameMailboxChangeAction:
setWithArray:
mailboxObjectID
parentMailboxID
getMailboxesWithCompletion:
startObservingMailboxChangesWithChangeObserver:observationIdentifier:
cancelObservation:
performMailboxChangeAction:completionHandler:
refreshMailboxList
mailboxObjectIDsForMailboxType:completionHandler:
mailboxTypeForMailboxObjectID:completionHandler:
_serializationQueue
generateMailDropMetadataForContentURL:completionHandler:
insertMaildropAttachmentViewForContentURL:HTMLByContentID:completionHandler:
newMailDropMetadataGenerator
_ignoredDomainsFallback
_updateIgnoredDomains:
_queryForAssetWithCompletion:
_downloadAssetCatalogWithCompletion:
ignoredDomains
setByAddingObjectsFromArray:
setIgnoredDomains:
setTimeoutIntervalForResource:
startCatalogDownload:options:then:
initWithType:
addKeyValuePair:with:
results
state
_updateStateFromAsset:
startDownload:
queryMetaData:
getLocalFileUrl
URLByAppendingPathComponent:
assetProperty:
setShouldIgnoreUserAccountDomains:
_shouldIgnoreUserAccountDomains
_ignoredDomains
signpostLog
_hookResponderRespondsToRequiredMethods:
transferMessages:transferType:destinationMailboxURL:userInitiated:
transferMessages:transferType:destinationMailboxURL:userInitiated:oldMessagesByNewMessage:
bucketMessageCount:
hookResponder
setDeleted
mailboxURLIsInRemoteAccount:
messagesToJournalForMessages:inMailbox:
mailboxURL:isInSameAccountAsMailboxURL:
mailboxIsAllMail:
mailboxPartOfAllMail:
persistNewMessages:mailboxURL:oldMessagesByNewMessage:fromSyncing:
haveCompleteMIMEForMessage:
localActionPersistence
applyFlagChange:toMessagesInDatabase:
deletePersistedMessages:
resetStatusCountsForMailboxWithURL:
checkForNewActionsInMailboxID:
willStartPersistenceDidAddMessages:
didFinishPersistenceDidAddMessages:
_invokeHookResponderForDeletedMessages:generationWindow:
transferAllMessagesFromMailboxes:exceptMessages:transferType:destinationMailboxURL:userInitiated:
markAllWorkQueue
iterateMessagesInMailboxURLs:excludingMessages:batchSize:returnMessagesForFlagChange:handler:
ef_hasScheme:
applyFlagChange:toMessages:
initWithCapacity:
addLabels:removeLabels:toMessagesInDatabase:
_needToStoreServerMessagesForMailboxURL:
serverMessagePersistenceFactory
serverMessagePersistenceForMailboxURL:
setImapUID:
setServerFlags:
supportsLabels
labels
setLabels:
initWithIMAPServerMessageBuilder:
addServerMessage:invalidMessage:duplicateRemoteID:
messagesForRemoteIDs:mailboxURL:
deleteServerMessagesWithRemoteIDs:
serverMessagesInIMAPUIDRange:limit:returnLastEntries:
_reflectFlagChanges:messages:remoteIDs:mailboxURL:
applyFlagChange:toMessagesWithRemoteIDs:
addLabels:removeLabels:toMessagesWithRemoteIDs:
_persistResults:forTransferAction:
_persistResults:forFlagChangeAction:
_persistResults:forLabelChangeAction:
remoteIDs
_resetLocalLabelsToServerLabelsForMessagesWithRemoteIDs:mailboxURL:
serverMessagesForRemoteIDs:
setWithSet:
_resetLocalFlagsToServerFlagsForMessagesWithRemoteIDs:mailboxURL:
serverFlags
_handleFailedCopyItems:transferAction:generationWindow:
_handleFailedDownload:generationWindow:
downloadedDataByCopyItems
setData:onMessage:
messageWasAppended:
createdServerMessages
_storeServerMessages:mailboxURL:generationWindow:
setRemoteID:onMessageWithDatabaseID:
displayErrorForTransferAction:withResults:
actionHasChangedAccount:
attachMessage:toServerMessageWithRemoteID:
_handleDuplicateServerMessage:serverMessagePersistence:
setRemoteID:
initWithServerMessageBuilder:
host
signpostID
initWithDatabase:localActionPersistence:serverMessagePersistenceFactory:hookResponder:
moveMessages:destinationMailboxURL:userInitiated:
copyMessages:destinationMailboxURL:userInitiated:
deleteAllMessageFromMailboxes:exceptMessages:
addNewMessages:mailboxURL:userInitiated:
deleteMessages:
applyFlagChange:toAllMessagesFromMailboxes:exceptMessages:
addLabels:removeLabels:forMessages:
reflectNewMessages:mailboxURL:
reflectDeletedMessages:
reflectDeletedMessagesWithRemoteIDs:mailboxURL:
reflectAllMessagesDeletedInMailboxURL:
reflectFlagChanges:forMessages:
reflectFlagChanges:forMessagesWithRemoteIDs:mailboxURL:
reflectAddedLabels:removedLabels:forMessagesWithRemoteIDs:mailboxURL:
persistResults:forAction:
accountForMailboxURL:
setMarkAllWorkQueue:
_localActionPersistence
_serverMessagePersistenceFactory
_markAllWorkQueue
_hookResponder
predicateFromPredicate:ignoringKeyPaths:
initWithQuery:messagePersistence:
registerMailboxChangeHookResponder:
tokenWithCancelationBlock:
willSyncMailbox:
didSyncMailbox:
_scheduleCountCalculation
removeObserver:
_fireCountCalculation
defaultScheduler
queryWithExpandedMailboxesFromQuery:
expandedQuery
countOfMessagesMatchingQuery:
setLocalCount:
serverCountMailboxScope
setServerCount:
setMostRecentStatusCount:
setLastSyncStatusCount:
performDatabaseReadBlock:
_notifyObserverWithLogMessage:
performVoucherPreservingBlock:
earliestGeneration
latestGeneration
localCount
serverCount
mostRecentStatusCount
lastSyncStatusCount
countDidChange:acknowledgementToken:
scopeContainsMailboxObjectID:mailboxTypeResolver:
queryEvaluator
transformMessages:
_filterMessages:potentiallyMatchingMessages:
messageIDHeaderHash
_moreThan:messagesExistWithMessageIDHeaderHash:
currentThread
threadDictionary
_originalMessagesKeyForKey:
_incrementLocalCount:logMessage:generationWindow:
_decrementLocalCount:logMessage:generationWindow:
filterMessages:unmatchedMessages:
predicateIgnoringFlags
evaluateWithObject:
countOfMessagesWithMessageIDHeaderHash:matchingQuery:
predicate:appliesToFlagChange:
pendingFlagChangesKey
_prepareForChangeWithMessages:changeKey:
_persistenceDidDeleteMessages:includeMessagesWithDeletedFlag:generationWindow:
_processChangedMessages:changeKey:generationWindow:
numberOfAttachments
transformAndFilterMessages:
transformAndFilterMessages:includeDeleted:
persistenceIsAddingMailboxWithDatabaseID:objectID:generationWindow:
persistenceDidUpdateServerCount:forMailboxWithObjectID:generationWindow:
persistenceDidUpdateMostRecentStatusCount:forMailboxWithObjectID:generationWindow:
persistenceDidUpdateLastSyncAndMostRecentStatusCount:forMailboxWithObjectID:generationWindow:
initWithQuery:serverCountMailboxScope:messagePersistence:hookRegistry:observer:
setQuery:
setExpandedQuery:
setPredicateIgnoringFlags:
setQueryEvaluator:
setResultsObserver:
cancelationToken
setCancelationToken:
setUpdateThrottler:
_serverCounts
_mailboxesBeingSynced
_resyncDatabaseGeneration
_mailboxObserverID
_seenMessageIDs
_newMessageIDs
_seenMessageIDsLock
_recalculationPending
_atomicQueryDescription
_atomicMailboxScopeDescription
_query
_expandedQuery
_predicateIgnoringFlags
_serverCountMailboxScope
_queryEvaluator
_resultsObserver
_cancelationToken
_pendingFlagChangesKey
_localCount
_serverCount
_mostRecentStatusCount
_lastSyncStatusCount
orPredicateWithSubpredicates:
predicateWithValue:
_predicateForRecipientMessagesAddressesKey:addresses:
expressionForKeyPath:
rightExpression
predicateOperatorType
options
predicateWithLeftExpression:rightExpression:modifier:type:options:
filteredArrayUsingPredicate:
predicateForMessagesInMailboxes:
subpredicates
_predicateForAnyMailboxWithPredicate:
compoundPredicateType
initWithType:subpredicates:
_objectIDsFromRightExpression:
databaseIDsDictionaryForMessageObjectIDs:
expressionForConstantValue:
expressionType
constantValue
initWithSerializedRepresentation:
leftExpression
predicateForAnyRecipientPredicate:
predicateForSenderPredicate:
predicateForSubjectPredicate:
predicateForBody:
predicateForMessagesFromVIPs:
predicateForMessagesToAddresses:
predicateForMessagesThatCCAddresses:
predicateForMailboxTypePredicate:mailboxes:
predicateForMessagesWithObjectIDsPredicate:objectIDConverter:
predicateForMessageIDHeaderHashPredicate:
predicateForSpotlightPredicate:
tableForName:
initWithColumn:
initPlaceholderMapperWithChildren:
rowIDColumn
initWithChildren:sourceColumn:
bitExpressionForConversationFlag:
initWithColumn:bitExpression:
bitExpressionForAttachments
initWithChildren:table:additionalColumns:
matchesMask:
leftShift:by:
and:with:
rightShift:by:
initWithLeft:firstValue:secondValue:between:
_messageReferencesTableSchema
_cachedMetadataTableSchema
initWithColumn:tableName:
initWithTableName:columnNames:
attachmentsTableName
addressesTableSchema
subjectsTableSchema
summariesTableSchema
protectedMessageDataTableSchema
reconcileJournalWithCompletionBlock:
performDatabaseWorkInBlockWithHighPriority:
ef_reduce:
messagesMatchingQuery:limit:
messagesMatchingQuery:limit:cancelationToken:
iterateMessagesMatchingQuery:batchSize:firstBatchSize:limit:cancelationToken:handler:
iteratePersistedMessagesMatchingQuery:limit:cancelationToken:handler:
andPredicateWithSubpredicates:
notPredicateWithSubpredicate:
keyPath
targetClass
_groupMessageObjectIDsByMailboxScope:
noMailboxesScope
databaseID
_databaseIDsDictionaryForMessageIDHashes:mailboxScope:
allMailboxesScope
initWithName:
notIn:
enabledAccountMailboxesExpression
initWithResultColumn:table:
addResultColumn:
setWhere:
executeSelectStatement:withBlock:error:
_threadQueryForThreadObjectID:
persistedMessagesMatchingQuery:limit:
ef_flatMap:
setWithCapacity:
predicateForMessagesWithThreadScope:
predicateForMessagesInConversation:
initWithTargetClass:predicate:sortDescriptors:
persistedMessagesForDatabaseIDs:requireProtectedData:temporarilyUnavailableDatabaseIDs:
messagesForPersistedMessages:mailboxScope:
ef_notEmpty
initWithArray:
initWithDomain:code:userInfo:
_cachedMetadataJSONForKey:messageIDHash:
columnExistsAtIndex:
_setCachedMetadataJSON:forKey:messageIDHash:
_checkCachedMetadataRowLimitWithConnection:
cachedMetadataIsolation
cachedMetadataUpdatesSinceLastCheck
setCachedMetadataUpdatesSinceLastCheck:
cachedMetadataEstimatedRowCount
intValue
setCachedMetadataEstimatedRowCount:
addressesTableName
objectPropertyMapperForSchema:protectedSchema:
partialMessagesTableSchemaAndAssociationsToResolve:
recipientsTableSchemaAndForeignKeysToResolve:associationsToResolve:
attachmentsTableSchemaAndForeignKeysToResolve:
protectedTablesAndForeignKeysToResolve:
initWithMailboxPersistence:database:
messageObjectIDCriterionExpressionForPredicateValue:
messagesMatchingQuery:
persistedMessageForOutgoingMessage:isDraft:
persistedMessagesForObjectIDs:requireProtectedData:
messagesForMessageObjectIDs:missedMessageObjectIDs:
cachedMetadataJSONForKey:messageID:
setCachedMetadataJSON:forKey:messageID:
requestContentForMessageObjectID:requestID:options:delegate:completionHandler:
_cachedMetadataUpdatesSinceLastCheck
_cachedMetadataIsolation
_cachedMetadataEstimatedRowCount
timeIntervalSinceReferenceDate
transformMessages:includeDeleted:
messageQuery
spotlightPredicateCache
spotlightPredicateForPredicate:
ef_partition:
sortedArrayUsingDescriptors:
callStackReturnAddresses
setSpotlightPredicateCache:
_messageQuery
_spotlightPredicateCache
currentQueryHelper
updateOldestMessagesCancelationToken
setUpdateOldestMessagesCancelationToken:
setCurrentQueryHelper:
_objectIDsAndUnreadObjectIDsFromMessages:unreadObjectIDs:
_initializeOldestMessagesByMailbox
findMessagesByPreviousObjectIDForAddedMessages:helper:
_oldestMessagesNeedUpdate
messagesWithAdditionalPredicates:limit:
_updateOldestMessagesForMailboxes:cancelationToken:
afterDelay:performBlock:
addCancelable:
_oldestItemQueryForMailbox:
_oldestMessagesByMailboxObjectIDsWasUpdated
predicateForMessagesInMailboxWithObjectID:
oldestMessageIDsByMailboxObjectIDs
findMessagesByPreviousObjectIDForAddedMessages:messageSource:
indexSetWithIndexesInRange:
indexOfObjectAtIndexes:options:passingTest:
removeAllIndexes
predicateForExcludingMessagesWithObjectIDs:
ef_insertObject:usingSortDescriptors:
initWithQuery:messagePersistence:hookRegistry:remoteSearchProvider:observer:observationIdentifier:
_currentQueryHelper
_oldestMessageIDsByMailboxObjectIDs
_updateOldestMessagesCancelationToken
_getInitialResults
shouldReconcileJournal
fetchRemoteMessagesWithQuery:delegate:
predicateForMessagesWithObjectIDs:
ef_flatten
pendingJournaledMessageAddsKey
verifyResults:query:
_transformAndFilterMessages:includeDeleted:
_foundMessages:
_persistenceDidDeleteMessages:includeMessagesWithDeletedFlag:
unionSet:
ef_removeObjectsInArray:
pendingConversationIDChangesKey
initWithObjectsAndKeys:
initWithMessageIDHeaderHash:mailboxScope:
remoteSearchDidFindMessages:
remoteSearchDidFinish
setShouldReconcileJournal:
_didStart
_noLongerMatchingMessages
_noLongerMatchingMessagesLock
_shouldReconcileJournal
_pendingConversationIDChangesKey
_pendingJournaledMessageAddsKey
initWithQueryType:predicate:
queryType
_queryType
_predicate
initWithQueryParser:
parserForPredicate:queryParser:
parseResultsFromPredicate:
queryParser
_queryParser
searchableIndexMapper
isSearchableIndexQueryableKeypath:searchableIndexPropertyMapper:
children
resultQueryType:
parseMixedSubpredicateResults:predicate:
searchableIndex
performSearchableIndexQueryPredicate:propertyMapper:searchableIndex:
initWithAccountsProvider:mailboxPersistence:messagePersistence:vipManager:
propertyMapper
transformPredicate:
sqlQueryForQuery:predicate:
em_searchableIndexQueryGenerator
preferredLanguages
mainBundle
preferredLocalizations
queryExpressionFromPredicate:propertyMapper:languages:
queryString
expressionWithQueryString:
isValid
messageIDsMatchingQuery:
sqlPropertyMapper
sqlQueryForReturnObjectKeypaths:query:propertyMapper:
initWithSchema:protectedSchema:searchableIndex:accountsProvider:vipManager:messagePersistence:mailboxPersistence:
sqlQueryForQuery:
_searchableIndex
_sqlPropertyMapper
_searchableIndexMapper
ef_matchesEverything
ef_matchesNothing
transformCompoundPredicate:
transformComparisonPredicate:
transformSubpredicates:
simplifyCompoundPredicate:
simplifySingleSubpredicate:
predicateForToMeMessages
receivingAddresses
predicateForCCMeMessages
predicateForVIPMessages
allVIPs
simplifyNotPredicate:
simplifyAndPredicate:
simplifyOrPredicate:
weakObjectsHashTable
initWithCondition:
cancelAllHandlers
queryHandlers
_resetUpdateThrottlersWithLogMessage:
promise
future
addSuccessBlock:
addFailureBlock:
finishWithResult:
performQueryOnSerializationQueue
tryLockWhenCondition:
unlock
_performQuery:withObserver:observationIdentifier:completionHandler:
initWithQuery:messagePersistence:threadPersistence:hookRegistry:vipManager:remoteSearchProvider:observer:observationIdentifier:delegate:
threadQueryHandlers
setWithObject:
resetThreadScopedForActivatedAccount:
threadScopeMatcherForActivatedAccount:
_triggerMigrationWithThreadScopesMatcher:
resetThreadScopesForDeactivatedAccount:
_triggerMigrationForThreadScopes:
checkIfPrecomputedStateIsAvailable
setNeedsUpdateForThreadScope:
triggerMigration
makeObjectsPerformSelector:
threadForObjectID:isPersisted:error:
_partitionObjectIDs:
_enumerateThreadsByThreadObjectIDsByScope:usingBlock:
displayMessageObjectID
signpostType
_performMessageFlagChangeAllAction:
_performMessageFlagChangeAction:returnUndoAction:
_performMessageTransferAllAction:
_performMessageTransferAllActionToSpecialMailbox:
_performMessageTransferAction:returnUndoAction:
_performMessageTransferActionToSpecialMailbox:returnUndoAction:
_performMessageDeleteAction:
_performMessageDeleteAllAction:
_performMessageConversationFlagChangeAction:
_performUndoAction:
initWithIndividualActions:
_persistedMessagesForMessageChangeAction:
_changeFlagsForPersistedMessages:flagChange:returnUndoAction:
setActionType:
setMessageDatabaseIDs:
copyMessages
_undoActionsForMovedMessages:
specialDestinationMailboxType
individualActions
messageDatabaseIDs
actionType
objectIDs
_persistedMessagesForObjectIDs:
inMemoryMessageObjectIDsForThread:
completionHandlerAdapter
addChild:withPendingUnitCount:
unlockWithCondition:
resetThreadScopesForMailboxScope:
mailboxPredictionController
mailboxWasPredicted:
performFetchOfType:mailboxObjectIds:
resetAllInstances
threadQueryHandlerStateDidChange:
performQuery:limit:completionHandler:
performCountQuery:completionHandler:
performQuery:withObserver:observationIdentifier:completionHandler:
startCountingQuery:includingServerCountsForMailboxScope:withObserver:completionHandler:
messageListItemsForObjectIDs:requestID:observationIdentifier:loadSummaryForAdditionalObjectIDs:completionHandler:
performMessageChangeAction:requestID:returnUndoAction:completionHandler:
requestRepresentationForMessageWithID:requestID:options:delegate:completionHandler:
resetPrecomputedThreadScopesForMailboxScope:
getCachedMetadataJSONForKey:messageID:completionHandler:
predictMailboxForMovingMessages:withObserver:completionHandler:
loadOlderMessagesForMailboxes:
setQueryHandlers:
setThreadQueryHandlers:
handlerTokens
setHandlerTokens:
setThreadPersistence:
setMessageChangeManager:
fetchController
_mailboxPredictionController
_mailboxPredictionControllerLock
_handlersLock
_queryHandlers
_threadQueryHandlers
_handlerTokens
_conversationPersistence
_threadPersistence
_messageChangeManager
_performQueryOnSerializationQueue
_fetchController
strongToWeakObjectsMapTable
dateSortOrderFromSortDescriptors:
orderedSetWithArray:
differenceFromArray:
summaryLoadersMapTable
setSummaryLoadersMapTable:
summaryLock
_summaryLock
_mailboxes
_observationIdentifier
_dateSortOrder
_summaryLoadersMapTable
em_userDefaults
setValue:forKey:
propertiesToMigrate
em_migrateDefault:
initWithMachServiceName:
resume
listener:shouldAcceptNewConnection:
initWithMachServiceNames:
listeners
setListeners:
_listeners
transactionWithDescription:
headers
firstHeaderForKey:
messagesForDocumentID:mailboxID:
mailboxScopeForMailboxObjectIDs:forExclusion:
deliverMessageSynchronously:usingMailDrop:
saveDraftMessage:mailboxID:previousDraftObjectID:completion:
deleteDraftsInMailboxID:documentID:previousDraftObjectID:
deliverMessage:usingMailDrop:completion:
outboxContainsMessageFromAccountObjectID:completion:
suspendDeliveryQueue
resumeDeliveryQueue
processAllQueuedMessages
isProcessingWithCompletion:
numberOfPendingMessagesWithCompletion:
initWithMessagePersistence:messageChangeManager:
_workQueue
messageFrameType
withHasher:setDataFromMessage:account:
hashedAccountID:
setAccountId:
hashedMessageHeadersForMessage:
setHeaders:
withHasher:setDataFromMessage:
withHasher:setMessage:data:
withHasher:setMessage:mailbox:
withHasher:setMessage:mailboxType:
withHasher:setConversationID:data:
accountId
mailboxId
setMailboxId:
mailboxType
setMailboxType:
conversationId
setConversationId:
messageId
setMessageId:
eventName
messageSent
messageMoved
messageCopied
linkClicked
appLaunch
appBackground
appResume
flagChanged
messageViewStart
messageViewEnd
replyDraftStarted
forwardDraftStarted
replySent
forwardSent
markedMuteThread
ed_oneOfConcreteEvent
selector
invokeWithTarget:
forwardInvocation:
setDuration:
hashedConversationID:
messageIDHeader
ec_messageIDSubstring
hashedString:
hashedMailboxID:
setFromMailboxId:
setFromMailboxType:
setToMailboxId:
setToMailboxType:
numberWithUnsignedInt:
setMessageFetched:
setMessageSent:
setMessageMoved:
setMessageCopied:
setLinkClicked:
setAppLaunch:
setAppBackground:
setAppResume:
setFlagChanged:
setReadChanged:
setMessageViewStart:
setMessageViewEnd:
setReplyDraftStarted:
setForwardDraftStarted:
setReplySent:
setForwardSent:
setMarkedMuteThread:
allocWithZone:
mergeFrom:
setSequenceNumber:
setHasSequenceNumber:
hasSequenceNumber
setTimestamp:
setHasTimestamp:
hasTimestamp
setEventName:
setHasEventName:
hasEventName
eventNameAsString:
StringAsEventName:
hasMessageFetched
hasMessageSent
hasMessageMoved
hasMessageCopied
hasLinkClicked
hasAppLaunch
hasAppBackground
hasAppResume
hasFlagChanged
hasReadChanged
hasMessageViewStart
hasMessageViewEnd
hasReplyDraftStarted
hasForwardDraftStarted
hasReplySent
hasForwardSent
hasMarkedMuteThread
readFrom:
writeTo:
copyTo:
sequenceNumber
timestamp
messageFetched
_timestamp
_appBackground
_appLaunch
_appResume
_eventName
_flagChanged
_forwardDraftStarted
_forwardSent
_linkClicked
_markedMuteThread
_messageCopied
_messageFetched
_messageMoved
_messageSent
_messageViewEnd
_messageViewStart
_readChanged
_replyDraftStarted
_replySent
_sequenceNumber
_has
setHasAccountId:
hasAccountId
setHasMailboxId:
hasMailboxId
setHasMailboxType:
hasMailboxType
mailboxTypeAsString:
StringAsMailboxType:
setHasConversationId:
hasConversationId
setHasMessageId:
hasMessageId
setHasValue:
hasValue
_accountId
_conversationId
_mailboxId
_messageId
_mailboxType
setLocale:
setHasVersion:
hasVersion
setUserId:
setHasUserId:
hasUserId
setDeviceId:
setHasDeviceId:
hasDeviceId
hasLocale
setTimezoneOffset:
setHasTimezoneOffset:
hasTimezoneOffset
setUserSegment:
setHasUserSegment:
hasUserSegment
userId
deviceId
locale
timezoneOffset
userSegment
_deviceId
_userId
_locale
_timezoneOffset
_userSegment
setHasFromMailboxId:
hasFromMailboxId
fromMailboxType
setHasFromMailboxType:
hasFromMailboxType
fromMailboxTypeAsString:
StringAsFromMailboxType:
setHasToMailboxId:
hasToMailboxId
toMailboxType
setHasToMailboxType:
hasToMailboxType
toMailboxTypeAsString:
StringAsToMailboxType:
fromMailboxId
toMailboxId
_fromMailboxId
_toMailboxId
_fromMailboxType
_toMailboxType
hasHeaders
_headers
setHasDuration:
hasDuration
setHasScrolledToEnd:
hasScrolledToEnd
duration
_duration
exceptionWithName:reason:userInfo:
raise
subjectWordsCount
clearSubjectWords
subjectWordsAtIndex:
addSubjectWords:
referencesCount
clearReferences
referencesAtIndex:
addReferences:
toAddressCount
clearToAddress
toAddressAtIndex:
addToAddress:
toDomainsCount
clearToDomains
toDomainAtIndex:
addToDomain:
toIsVipsCount
clearToIsVips
toIsVipAtIndex:
addToIsVip:
toContactIdsCount
clearToContactIds
toContactIdAtIndex:
addToContactId:
ccAddressCount
clearCcAddress
ccAddressAtIndex:
addCcAddress:
ccDomainsCount
clearCcDomains
ccDomainAtIndex:
addCcDomain:
ccIsVipsCount
clearCcIsVips
ccIsVipAtIndex:
addCcIsVip:
ccContactIdsCount
clearCcContactIds
ccContactIdAtIndex:
addCcContactId:
bccAddressCount
clearBccAddress
bccAddressAtIndex:
addBccAddress:
bccDomainsCount
clearBccDomains
bccDomainAtIndex:
addBccDomain:
bccIsVipsCount
clearBccIsVips
bccIsVipAtIndex:
addBccIsVip:
bccContactIdsCount
clearBccContactIds
bccContactIdAtIndex:
addBccContactId:
setSender:
setHasSender:
hasSender
setSenderDomain:
setHasSenderDomain:
hasSenderDomain
setSenderIsVip:
setHasSenderIsVip:
hasSenderIsVip
setSenderContactId:
setHasSenderContactId:
hasSenderContactId
setUserIsSender:
setHasUserIsSender:
hasUserIsSender
subjectWords
setSubjectWords:count:
setMessageIsReply:
setHasMessageIsReply:
hasMessageIsReply
setMessageIsForwarded:
setHasMessageIsForwarded:
hasMessageIsForwarded
setUserIsTo:
setHasUserIsTo:
hasUserIsTo
setUserIsCc:
setHasUserIsCc:
hasUserIsCc
setUserIsBcc:
setHasUserIsBcc:
hasUserIsBcc
setDateReceived:
setHasDateReceived:
hasDateReceived
setListId:
setHasListId:
hasListId
references
setReferences:count:
toAddress
setToAddress:count:
toDomains
setToDomains:count:
toIsVips
setToIsVips:count:
toContactIds
setToContactIds:count:
ccAddress
setCcAddress:count:
ccDomains
setCcDomains:count:
ccIsVips
setCcIsVips:count:
ccContactIds
setCcContactIds:count:
bccAddress
setBccAddress:count:
bccDomains
setBccDomains:count:
bccIsVips
setBccIsVips:count:
bccContactIds
setBccContactIds:count:
sender
senderDomain
senderIsVip
senderContactId
userIsSender
messageIsReply
messageIsForwarded
userIsTo
userIsCc
userIsBcc
dateReceived
listId
_bccAddress
_bccContactIds
_bccDomains
_bccIsVips
_ccAddress
_ccContactIds
_ccDomains
_ccIsVips
_references
_subjectWords
_toAddress
_toContactIds
_toDomains
_toIsVips
_dateReceived
_listId
_sender
_senderContactId
_senderDomain
_messageIsForwarded
_messageIsReply
_senderIsVip
_userIsBcc
_userIsCc
_userIsSender
_userIsTo
_processPersistedMessages:
bufferedQueueWithCapacity:batchHandler:
drain
enqueue:
initWithMessagePersistence:query:batchSize:firstBatchSize:limit:handler:
flush
addPersistedMessage:
addPersistedMessages:
shouldCancel
_persistedMessageQueue
_remaining
_seenHashes
mailDataDirectory
initWithDirectoryURL:
_commonInitWithVIPManager:
scheduleRecurringActivity
blockedSenderManager
_blockedSenderManager
initWithDelegate:maxConcurrentBackgroundReaders:
setDatabase:
enforceDataProtection
connectionPool
writersWaiting
setupIsComplete
isNestedDatabaseCall
performBlock:isWriter:useTransaction:
performUsingTransaction:isWriter:transactionError:block:
checkOutConnectionIsWriter:
protectedDatabasePersistence
protectedSchema
attachProtectedOrJournalDatabaseToConnectionIfNecessary:withSchema:
protectedDatabaseAttached
protectedDataAvailable
checkInConnection:
currentConnection
writerConnection
setIsWriter:
readerConnection
backgroundReaderConnection
detachProtectedOrJournalDatabaseFromConnectionIfNecessary:
sqlConnection
finalizeStatementsWithError:
fileSystemRepresentation
reconcileJournalsWithSchema:completionBlock:
setScheme:
setPath:
queryItemWithName:value:
setQueryItems:
fileProtectionForDatabaseType:
urlForDatabasePath:type:fileProtection:
openConnectionIsWriter:
urlForDatabasePath:type:
initWithBasePath:databaseName:maxConcurrentReaders:schema:protectedSchema:propertyMapper:protectedDatabasePersistence:
writersAreWaiting
performDatabaseSetupUsingTransaction:block:
closeAllConnections
databaseIsCorrupt
schema
basePath
databaseName
fullPath
setSetupIsComplete:
_setupIsComplete
_schema
_protectedSchema
_propertyMapper
_connectionPool
_protectedDatabasePersistence
_basePath
_databaseName
_fullPath
_databasePathForFileName:
_adjustedDatabaseTypeForType:
initWithBasePath:databaseName:isWriter:delegate:
initWithSQLDB:
close
isWriter
handleSQLResult:message:
_executePreparedStatement:withBlock:description:error:
isEmpty
ef_SQLBinding
bindToStatement:usingIndex:
enumerateBindingIndicesAndValuesUsingBlock:
bindToStatement:usingName:
enumerateBindingNamesAndValuesUsingBlock:
executeUpsertStatement:error:
executeStatementString:error:
executeDeleteStatement:error:
isOpen
openWithError:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_fixFilePermissionForPath:
configureSQLConnection
detachProtectedDatabase
journalDatabaseAttached
detachJournalDatabase
_startTransactionWithSQLConnection:forWriting:error:
_finishTransactionWithSQLConnection:afterSuccess:transactionError:
transactionTypeForWriting
beginTransaction:error:
_fetchTransactionWriteGenerationWithSQLConnection:newGeneration:
_storeTransactionWriteGenerationWithSQLConnection:newGeneration:
commitTransactionWithError:
rollbackTransactionWithError:
tableExists:inDatabase:
columnExists:inTable:database:type:
columnTypeForString:
protectedDatabaseName
journalDatabaseName
_attachDatabaseWithName:url:error:
setProtectedDatabaseName:
protectedDatabasePath
attachProtectedDatabaseWithName:url:error:
attachProtectedDatabaseWithName:error:
_detachDatabaseWithName:
setJournalDatabaseName:
setJournal:
checkOut
attachJournalDatabase:withName:error:
journal
checkIn
initForInMemoryDatabaseIsWriter:delegate:
initWithSQLDB:isWriter:delegate:
executeUpdateStatement:rowsChanged:
executeUpsertStatement:rowsChanged:
executeDeleteStatement:rowsChanged:
clearLastInsertedDatabaseID
open
checkForConnectionErrorWithMessage:
databaseIsAttached:
tableExists:
columnExists:inTable:type:
attachProtectedDatabaseWithName:
attachJournalDatabase:withName:
_isWriter
_protectedDatabaseName
_journalDatabaseName
_journal
_sqlConnection
weakToStrongObjectsMapTable
initWithCount:
setCacheSize:
connection
_connectionWithType:
_lockForConnectionType:resource:
initWithConnection:generation:
setType:
setResource:
acquireResource
resource
generation
_unlockForConnectionType:resource:
releaseResource:
cacheSize
maxConcurrentReaders
backgroundReadersWaiting
maxConcurrentBackgroundReaders
_cacheLock
_cacheSize
_cacheGeneration
_checkoutLock
_checkoutMap
_writerLock
_writerConnection
_writersWaiting
_maxConcurrentBackgroundReaders
_backgroundReadersWaiting
_backgroundReaderResources
_resource
_connection
_generation
_type
_earliestGeneration
_latestGeneration
number
referenceCount
journalManager
journalDirectoryPath
_journalNoLongerReferenced:
initWithJournalManager:number:
_referenceCountLock
_referenceCount
_number
_journalManager
fileExistsAtPath:
fileURLWithPath:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
lastPathComponent
hasSuffix:
lastIndex
_getJournalWithBlock:
removeIndex:
_deleteJournalNumber:
firstIndex
removeItemAtPath:error:
deleteQueue
checkExistingQueue
initWithBasePath:
currentJournalCreateIfNeeded:
oldestJournal
mergedJournal:
waitForDeletes
_journalLock
_currentJournal
_shouldDeleteCurrentJournal
_journalNumbers
_pendingDeleteJournalNumbers
_journalsByIndexes
_journalDirectoryPath
_checkExistingQueue
_deleteQueue
_initializeSchemas
_schemaProviders
_schemaWithPopulationBlock:
_protectedSchemaProviders
resolveWithSchema:
resolveToStringForTableNames:
additionalSchemaProviders
dictionaryWithDictionary:
setChildren:
table
additionalColumns
propertiesTableName
ef_resetOnceTokens
propertiesTableSchema
partialMailboxesTableSchema
column
fullNameWithDatabaseName:
tableName
deleteAction
updateAction
setAsForeignKeyForString:onDelete:onUpdate:
_column
_tableName
_deleteAction
_updateAction
associateWithTable:
persistenceIsInitializingDatabaseWithConnection:
persistenceWillReadMessage:fromRow:
persistenceWillReplaceDatabaseID:with:forTable:column:
persistenceDidReconcileProtectedData
searchableIndexDidAssignTransaction:toUpdates:withMissingIdentifiers:generationWindow:
searchableIndexDidAssignIndexingType:forIdentifiers:generationWindow:
persistenceIsAddingThreadWithObjectID:journaled:generationWindow:
persistenceIsMarkingThreadAsJournaledWithObjectID:generationWindow:
persistenceIsReconcilingJournaledThreadsWithObjectIDs:generationWindow:
persistenceIsChangingThreadWithObjectID:changedKeyPaths:generationWindow:
persistenceIsDeletingThreadWithObjectID:generationWindow:
persistenceDidFinishThreadUpdates
persistenceWillResetThreadScope:denyBlock:
_initializeMethodSignatures
_proxiedProtocols
_registerSelector:types:
signatureWithObjCTypes:
numberOfArguments
_classForObjectAtArgumentIndex:
_protocolsForObjectAtArgumentIndex:
getArgumentTypeAtIndex:
setByAddingObject:
_registerHookResponder:withMethodDescription:
methodSignatureForSelector:
_copyRespondersForSelector:
_messageRespondersWithInvocation:
_registerHookResponder:protocol:
unregisterAllHookResponders
_forwardStackInvocation:
registerDatabaseChangeHookResponder:
registerThreadChangeHookResponder:
registerSearchableIndexHookResponder:
registerMessageReadHookResponder:
registerProtectedDataReconciliationHookResponder:
_hookRespondersBySelector
_methodSignaturesBySelector
objectsPassingTest:
containerURLForSecurityApplicationGroupIdentifier:
baseAccountDirectoryForPersonaIdentifier:
macOS_baseAccountDirectoryForPersonaIdentifier:
setQuotaEvent:
setSubmittedEvent:
setRawData:
hasQuotaEvent
hasSubmittedEvent
hasRawData
quotaEvent
submittedEvent
rawData
_quotaEvent
_rawData
_submittedEvent
_openCurrentLogfile
UUIDString
currentCalendar
component:fromDate:
saltProvider
contactStore
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
logFileHandle
closeFile
boolForKey:
setFormatOptions:
localTimeZone
setTimeZone:
stringFromDate:
directory
currentLogFile
moveItemAtURL:toURL:error:
writeToURL:atomically:
removeItemAtURL:error:
_resetIdentifiers
_buildLogFileURLInDir:
setCurrentLogFile:
_openFileForAppending:
initWithFileDescriptor:closeOnDealloc:
setLogFileHandle:
seekToEndOfFile
offsetInFile
_writeHeader
currentLogMessageIDs
seekToFileOffset:
readDataToEndOfFileAndReturnError:
_scanForMessageIDs:logVersion:
_isLogQuotaReached
isFileURL
appendData:
initWithData:
enumerateFramesInData:block:
_framedMessage:
writeData:
synchronizeFile
_writeQuotaReachedEvent
_writeMessageDataIfNecessary:account:
_messageDataEventForMessage:account:
userID
deviceID
_currentLocaleIdentifier
_persistentBits
_truncatedUNIXTimestampFromDate:
bytes
subdataWithRange:
initWithLineThroughPoints:
evaluateReverse:
readDataToEndOfFile
_estimateStopCount:
setDroppedEventsCount:
initWithBytesNoCopy:length:freeWhenDone:
workQueue
_compressFramedMessagesIntoBatch:
_rotateLogWithCompressedData:
uppercaseString
secondsFromGMT
rotatingSalt
ef_sha256DigestWithSalts:
getBytes:length:
_truncatedSHA256:
contactIDCache
em_fetchContactForEmailAddress:keysToFetch:createIfNeeded:
meContactIdentifier
objectForKey:generator:
subjectWithoutPrefix
tokenizeString:
profileProvider
senders
hashedContactIDForAddress:
hashedSubject:
prefix
hasReplyPrefix
intersectsSet:
_eventNameFromString:
_eventForName:date:
_writeMessageDataIfNecessary:
_writeEvent:
initWithDirectory:userProfileProvider:saltProvider:contactStore:vipManager:
batchedEventsForSubmission
waitForPendingWrites
setMeContactIdentifier:
setRotatingSalt:
shouldLog
setShouldLog:
setCurrentLogMessageIDs:
_shouldLog
_userID
_deviceID
_currentLogFile
_saltProvider
_contactStore
_contactIDCache
_meContactIdentifier
_rotatingSalt
_directory
_logFileHandle
_currentLogMessageIDs
setHasDroppedEventsCount:
hasDroppedEventsCount
droppedEventsCount
_droppedEventsCount
changeScheduler
backgroundWorkScheduler
updateLastViewedDateForThreadScope:
unreportedJournaledObjectIDs
threadObjectIDsForThreadScope:sortDescriptors:initialBatchSize:journaledObjectIDs:batchBlock:
_oldestThreadsNeedUpdate
threadForObjectID:originatingQuery:error:
pendingChanges
pendingPositionChanges
isAddingObjectID:
isDeletingObjectID:
_flushUpdatesWithReason:
objectIDsToAddByBeforeObjectID
objectIDsToMoveByBeforeObjectID
objectIDsToDelete
_persistenceIsAddingThreadWithObjectID:
threadObjectIDBeforeThreadObjectID:forSortDescriptors:excluding:
addObjectIDToAdd:before:
reportedJournaledObjectIDs
threadObjectIDsByNextExistingForThreadObjectIDs:forSortDescriptors:excluding:
changeForThreadWithObjectID:changedKeyPaths:
_addChangeToPendingChanges:forThreadObjectID:
_persistenceIsChangingThreadWithObjectID:changedKeyPaths:
_isAddingOrDeletingObjectID:
_keyPathsAffectSorting:
addObjectIDToMove:before:
addObjectIDToDelete:
_messageForPersistedMessage:
filterPredicate
updateOldestThreadsCancelationToken
oldestThreadObjectIDForMailbox:threadScope:
oldestThreadObjectIDsByMailbox
setUpdateOldestThreadsCancelationToken:
initWithQuery:threadScope:messagePersistence:threadPersistence:hookRegistry:observer:observationIdentifier:
setPendingChanges:
setPendingPositionChanges:
setUnreportedJournaledObjectIDs:
setReportedJournaledObjectIDs:
setOldestThreadObjectIDsByMailbox:
_changeScheduler
_backgroundWorkScheduler
_pendingChanges
_pendingPositionChanges
_unreportedJournaledObjectIDs
_reportedJournaledObjectIDs
_oldestThreadObjectIDsByMailbox
_updateOldestThreadsCancelationToken
_isMovingObjectID:
ef_insertObjects:before:
setObjectIDsToAddByBeforeObjectID:
setObjectIDsToMoveByBeforeObjectID:
setObjectIDsToDelete:
_objectIDsToAddByBeforeObjectID
_objectIDsToMoveByBeforeObjectID
_objectIDsToDelete
initWithJournalManager:hookRegistry:
supportsJournaling
_performOnDemandReconciliationForConnection:withSchema:
_ensureProtectedDatabaseOrJournalIsAttachedToConnection:withSchema:
_ensureJournalIsAttachedToConnection:withSchema:
_attachProtectedDatabaseToConnection:withSchema:error:
_isRecoverableError:
_attachJournalDatabaseToConnection:withSchema:
_detachProtectedDatabaseFromConnection:
_detachJournalDatabaseFromConnection:
_initializeDatabase:withConnection:schema:error:
_updateSqliteSequenceForDatabase:schema:withConnection:error:
tables
_allReferencingColumnsForTable:
_maxRowIDForColumn:withConnection:
largestDeletedRowIDForTableName:withConnection:
addValue
isMainThread
isReconciling
setIsReconciling:
_reconcileJournalsWithSchema:connection:
_runReconciliationWithSchema:connection:
finishJournalReconciliation:
_resultForConnection:success:error:errorMessage:
_mergeSchema:connection:
_isJournalMalformedForSchema:connection:
_mergeTable:connection:
uniqueColumns
table:column:
initWithLeft:operator:right:
leftOuterJoin:on:
addResult:alias:
setLimit:
ef_SQLExpression
_executeStatementString:onConnection:errorMessage:
_deleteRowIDs:fromJournal:withConnection:
initWithTable:where:
addAdditionalCriteriaToCleanupActivity:
_databaseIDsToDeleteForTable:
_deleteDatabaseIDs:fromTable:
nullable
columnExpressionWithFullName
_removeExistingDatabaseIDs:withColumn:connection:
columns
foreignKeyReferences
associatedColumns
initWithBasePath:hookRegistry:
_executeUpdateStatement:onConnection:errorMessage:
reconciliationQueue
_initializationLock
_reconciliationLock
_isReconciling
_reconciliationQueue
remoteObjectInterface
daemonInterfaceFactory
messageRepository
outgoingMessageRepository
accountRepository
clientState
setClientState:
mailboxRepository
vipManagerInterface
activityRegistry
diagnosticInformation
exportedInterface
getMessageRepositoryInterface:
getOutgoingMessageRepositoryInterface:
getAccountRepositoryInterface:
getFetchControllerInterface:
getMailboxRepositoryInterface:
getClientStateInterface:
getSearchableIndexInterface:
getInteractionLoggerInterface:
getVIPManagerInterface:
getActivityRegistryInterface:
debugStatusWithCompletionHandler:
launchForEarlyRecovery:
initWithConnection:daemonInterfaceFactory:
clientConnection
_accountRepository
_mailboxRepository
_messageRepository
_outgoingMessageRepository
_vipManagerInterface
_activityRegistry
_clientConnection
_daemonInterfaceFactory
_clientState
_dropTable:connection:
_dropThreadCategoriesIndex:
_createTempMessagesTable:
_recreateMessagesIndices:
_copyMessagesData:
_swapMessagesTables:
_truncateTable:connection:
_recreateThreadsTable:
_recreateThreadsIndices:
setIndexDelegate:
_registerDistantFutureSpotlightVerification
searchableIndexBundleID
initWithName:protectionClass:bundleIdentifier:
initWithName:protectionClass:
schedulableDelegate
hasAvailableIndexingBudgetForSearchableIndexSchedulable:
budgetedTimeRemainingForSearchableIndexSchedulable:
budgetedItemCountRemainingForSearchableIndexSchedulable:
isPluggedIn
_queueRefresh
_queueTransitionActive:fromRefresh:
_scheduleSpotlightVerificationOnIndexingQueueWithCompletion:
_handleFailingTransactionIDs:sampleCount:
_processSpotlightVerificationWithCompletion:
lockWhenCondition:
_transitionWithBudgetTimeUsed:
enableSpotlightVerification
_verifySpotlightIndex
removeAllItems
_invalidateItemsInTransactions:
setForeground:
baseMailDirectory
_localClientStateURL
dataWithContentsOfURL:options:error:
clientStateFromData:
archiveRepresentation
writeToURL:options:error:
initWithCoalescingAction:
coalesceValue:
csIndex
_localClientState
_saveLocalClientState:
transaction
_dataSourceInvalidateItemsGreaterThanTransaction:completion:
fetchLastClientStateWithCompletionHandler:
_countOfItemsInPendingQueues
_eventDataForTransitionState:
searchableIndexSchedulable:didGenerateImportantPowerEventWithIdentifier:eventData:
indexingDidSuspendForSearchableIndexSchedulable:
_suspend
indexingDidResumeForSearchableIndexSchedulable:
_resume
attachmentPersistentIDFromItemIdentifier:
ef_countObjectsPassingTest:
delayDataSourceAssignmentFuture
dataSource
searchableIndex:assignTransaction:updates:
_dataSourceScheduleWork:
initWithIdentifier:
setItemsRequiringIndexing:
_dataSourceAssignTransaction:updates:completion:
searchableIndex:invalidateItemsGreaterThanTransaction:
isPerformingBlockAffectingDataSourceAndIndex
initWithLabel:
dataSourceUpdateTimeLimit
didCancelDataSourceUpdateRequestForSearchableIndexSchedulable:
updatesForSearchableIndex:excludingIdentifiers:count:cancelationToken:
removedIdentifiers
dataSourceRefreshReasons
removeItemsWithIdentifiers:reasons:fromRefresh:
itemsRequiringIndexing
indexItems:fromRefresh:immediately:
removedDomainIdentifiers
removeItemsForDomainIdentifier:
isDataSourceIndexingPermitted
didFinishIndexingBacklogForSearchableIndexSchedulable:
_throttleRequestedSize:targetTime:action:
_queueConsumeBudgetElapsedPeriod:
initWithDataSource:
verifyDataSamplesWithCompletionHandler:queue:
indexingType
isIncrementalIndexingType:
indexingTypeForSearchableIndex:item:
_pendingIdentifiers
setNeedsAllAttributesIndexingType
setIndexingType:
searchableIndex:assignIndexingType:forIdentifiers:
verificationDataSamplesForSearchableIndex:count:
_coalescingTimerFired
searchableIndexSchedulable:didIndexForTime:
searchableIndexSchedulable:didIndexItemCount:
_fetchLastClientState
_stopCoalescingTimer
_scheduleProcessPendingItemsFromRefresh:
_startCoalescingTimer
_queueContentsAllowsRefresh
_scheduleDataSourceRefresh
_scheduleSpotlightVerification
searchableIndexSchedulable:didGeneratePowerEventWithIdentifier:eventData:
_logSignpostForIndexingBatchStartWithPendingItemsCount:
_consumeBatchOfSize:
_getDomainRemovals:identifierRemovals:
_nextTransaction
setTransaction:
_identifiersStringForItems:maxLength:
_invalidateCache
globalAsyncSchedulerWithQualityOfService:
_processDomainRemovals:
updates
setRemovedDomainIdentifiers:
_logSignpostForIndexingBatchAssignedDomainRemovalCount:
beginIndexBatch
_processIndexingBatch:clientState:itemsNotIndexed:
_processIdentifierRemovals:
errorOnlyCompletionHandlerAdapter
endIndexBatchWithClientState:completionHandler:
onScheduler:then:
arrayByExcludingObjectsInArray:
identifiers
setRemovedIdentifiers:
_logSignpostForIndexingBatchAssignedUpdatesWithItemsIndexedCount:
nullFuture
_noteNeedsLastClientStateFetch
futureWithError:
onScheduler:recover:
result:
canIndexAttachments
_logSignpostForIndexingBatchCompletedWithItemsIndexedCount:
_processRefreshRequestWithCompletion:
beginUpdatesAffectingDataSourceAndIndex
endUpdatesAffectingDataSourceAndIndex
estimatedSizeInBytes
items
removeObjectsInRange:
_identifiersForItems:
substringToIndex:
purgeReasons
exclusionReasons
initWithPurgeReasons:exclusionReasons:
fetchIndexableAttachments
skipIndexExclusionCheck
shouldExcludeFromIndex
searchableItem
attributeSet
addTransactionValueToAttributeSet:
alwaysMarkAsIndexed
onScheduler:map:
join:
indexSearchableItems:completionHandler:
searchableIndex:foundAttachmentPaths:forMessagePersistentID:
attachmentPaths
uniqueIdentifier
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
deleteSearchableItemsWithIdentifiers:completionHandler:
purgedIdentifiers
changeStateOfSearchableItemsWithUIDs:toState:
_dataSourceRequestNeededUpdatesExcludingIdentifiers:completion:
_dataSourceVerifyRepresentativeSampleWithCompletion:
defaultSearchableIndex
_issueCommand:completionHandler:
_dataSourceAssignTransaction:forIdentifiers:completion:
reindexAllItemsWithOptions:acknowledgementHandler:
searchableIndex:invalidateItemsInTransactions:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
removeAllIdentifiers
deleteAllSearchableItemsWithCompletionHandler:
indexItems:immediately:
indexesOfObjectsPassingTest:
objectsAtIndexes:
initWithItem:
_indexItems:fromRefresh:immediately:
_dataSourcePrepareToIndexItems:fromRefresh:withCompletion:
_preprocessItemIfNecessary:fromRefresh:
referenceItem
indexOfObject:
ef_indexWhereObjectWouldBeInserted:usingComparator:
addPendingItem:
removeLastObject
_queueConsumeBudgetItemCount:
currentReasons
removeObjectsAtIndexes:
addIdentifiers:withReasons:
searchableIndex:willRemoveIdentifiers:type:
childIdentifiersToRemoveFromSearchableIndex:whenRemovingParentIdentifiers:
domainIdentifier
removeAllItemsWithAcknowledgementHandler:
setBundleIdentifier:
setCompletionBlock:
setResultsBlock:
setFailureBlock:
queryWithExpression:builder:
progress
addSearchQueryCancelable:
removeSearchQueryCancelable:
isFullTextSearchableCriterion
setCriterion:
shouldCancelSearchQuery
spotlightQueryString
dateWithTimeIntervalSinceNow:
resultBeforeDate:error:
ef_isTimeoutError
requiresPreprocessing
removeItemsWithIdentifiers:
searchableIndex:prepareToIndexAttachmentsForMessageWithIdentifier:
reasonProvider
isValidTransaction:
userHandle
searchableIndexDidThrottle:
searchableIndexDidFinishThrottle:
dataForSearchableIndex:itemIdentifier:typeIdentifier:error:
fileURLForSearchableIndex:itemIdentifier:typeIdentifier:inPlace:error:
bundleIdentifierForSearchableIndexVerifier:
dataSamplesForSearchableIndexVerifier:searchableIndex:count:
searchableIndexForSearchableIndexVerifier:
setDataSourceIndexingPermitted:
indexName
pendingIndexItemsCount
reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
reindexAllSearchableItemsWithAcknowledgementHandler:
initWithName:dataSource:reasonProvider:
copyDiagnosticInformation
_powerStateChanged
_transaction
suspend
setPersistenceAvailable:
isPersistenceAvailable
isActive
resumeCount
performBlockAffectingDataSourceAndIndex:
issueDiagnosticsRequestForMessageRowId:
indexedEmptySubjectIdentifers
indexItems:
identifiersMatchingCriterion:
removeMessages:
indexAttachmentsForMessageWithIdentifier:
indexMessages:includeBody:indexingType:
markMessagesAsPrinted:
logPowerEventWithIdentifier:eventData:
powerObservable
waitForAsynchronousWork
setDataSource:
setReasonProvider:
setSchedulableDelegate:
setCsIndex:
setSkipIndexExclusionCheck:
clientStateFetched
setClientStateFetched:
setEnableSpotlightVerification:
setSearchableIndexBundleID:
coalescingDelaySeconds
setCoalescingDelaySeconds:
setDataSourceUpdateTimeLimit:
setDelayDataSourceAssignmentFuture:
_indexName
_stateTransitionQueue
_coalescingTimer
_resumeCount
_throttledIndexingBatchSize
_throttledDataSourceBatchSize
_currentMaximumBatchSize
_batchIndexingActivity
_removedIdentifiers
_preparingItems
_pendingItems
_preprocessingItems
_processingItems
_pendingDomainRemovals
_pendingIdentifierRemovals
_indexingQueue
_dataSourceQueue
_preprocessingScheduler
_mainThreadAccessibleIvarLock
_indexingBatchScheduler
_searchResultsCache
_isActive
_needsRefresh
_needsVerification
_coalesceTimerFired
_scheduledProcessing
_scheduledRefresh
_scheduledVerification
_indexImmediately
_countOfBlocksAffectingDataSourceAndIndex
_dataSourceIndexingPermitted
_persistenceAvailable
_skipIndexExclusionCheck
_clientStateFetched
_enableSpotlightVerification
_dataSource
_reasonProvider
_schedulableDelegate
_csIndex
_searchableIndexBundleID
_coalescingDelaySeconds
_dataSourceUpdateTimeLimit
_delayDataSourceAssignmentFuture
criterion
mailboxIDs
isEqualToIndexSet:
setMailboxIDs:
_criterion
_mailboxIDs
_identifiersPassingReasonsTest:
deletedIdentifiers
removeIdentifier:
setPurgeReasons:
setExclusionReasons:
_reasonsByIdentifier
_purgeReasons
_exclusionReasons
substringFromIndex:
identifierForAttachmentPersistentID:
setRequiresPreprocessing:
attributeSetForFilePromise
metadatum
attachmentFileURL
setRelatedUniqueIdentifier:
accountIdentifier
setAccountIdentifier:
mailboxIdentifiers
setMailboxIdentifiers:
senderAddress
emailAddressWithString:
recipientAddresses
emailAddressesFromStrings:invalidAddresses:
dateSent
markAsSent:sender:senderHandle:recipients:recipientHandles:transport:
markAsReceived:sender:senderHandle:recipients:recipientHandles:transport:
markAsDownloaded:userHandle:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
distantFuture
setExpirationDate:
ef_notSupportedError
attributesOfItemAtPath:error:
fileSize
itemInstantiationTime
underlyingData
setUnderlyingData:
hasCompleteData
initWithAttachmentPersistentID:messagePersistentID:metadatum:
attachmentPersistentID
setAttachmentPersistentID:
setMetadatum:
setAttributeSetForFilePromise:
searchableItemProcessingDelay
setSearchableItemProcessingDelay:
_searchableItem
_requiresPreprocessing
_underlyingData
_indexingType
_itemInstantiationTime
_attachmentPersistentID
_metadatum
_attributeSetForFilePromise
_searchableItemProcessingDelay
isReadableFileAtPath:
setDomainIdentifier:
setSenderAddress:
setRecipientAddresses:
setDateSent:
initWithAttachmentFileURL:builder:
canReadAttachmentFile
_attachmentFileURL
_domainIdentifier
_accountIdentifier
_mailboxIdentifiers
_senderAddress
_recipientAddresses
_dateSent
initWithTime:periodDuration:numberOfItemsToIndexOnResume:
registerDefaults:
doubleForKey:
periodDuration
time
numberOfItemsToIndexOnResume
defaultConfiguration
initWithTime:periodDuration:numberOfItemsToIndexOnResume:enableActivityBasedScheduling:autoStartMaintenanceIndexing:
enableActivityBasedScheduling
setEnableActivityBasedScheduling:
autoStartMaintenanceIndexing
setAutoStartMaintenanceIndexing:
_enableActivityBasedScheduling
_autoStartMaintenanceIndexing
_time
_periodDuration
_numberOfItemsToIndexOnResume
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
JSONObjectWithData:options:error:
initWithDictionary:
ef_posixLocale
setDateFormat:
setSystemBuildVersion:
setTransactionDate:
dataWithJSONObject:options:error:
transactionValue
transactionAttributeKey
setValue:forCustomKey:
transactionDate
systemBuildVersion
_transactionValue
_transactionDate
_systemBuildVersion
initWithMessage:bodyData:fetchBody:
initWithIdentifier:message:bodyData:fetchBody:
indexingPriorityByIndexingType:
accountIdentifierForMessage:
domainIdentifierForAccountID:mailboxPersistentID:
URLString
csIdentifierForMailbox:
domainIdentifierForMessage:
bodyData
setBodyData:
setMailRead:
setMailFlagged:
setMailRepliedTo:
setMailConversationID:
setMailGMailLabels:
mailboxIdentifiersForMessage:result:
setIdentifier:
setContentCreationDate:
setMailDateReceived:
setAuthors:
setPrimaryRecipients:
setAdditionalRecipients:
setHiddenAdditionalRecipients:
headersDictionary
setEmailHeaders:
isPartOfExistingThread
setExistingThread:
setPartiallyDownloaded:
setDataOwnerType:
setAccountHandles:
csAccountTypeString
setAccountType:
bestAlternativePart:
setHasCompleteData:
setHTMLContentData:
addStaticAttributesToAttributeSet:
initWithItemContentType:
externalDataTypeIdentifiers
setProviderDataTypeIdentifiers:
_addStaticAttributesToAttributeSet:
addAttachmentAttributesToAttributeSet:
addUpdatableAttributesToAttributeSet:
addFlagsAttributesToAttributeSet:
setIsUpdate:
itemWithMessage:bodyData:fetchBody:
itemWithIdentifier:message:bodyData:fetchBody:
fetchBody
_fetchBody
_hasCompleteData
_bodyData
displayNameFromAddress:
rawAddressFromFullAddress:
initWithDisplayName:handles:handleIdentifier:
characterAtIndex:
compare:options:range:
setNeedsToScheduleRecurringActivity:
setScheduling:
needsReindex
_removeAllItemsFromIndexAndWait:options:
setNeedsReindex:
needsToScheduleRecurringActivity
_filterInMessagesWithValidPersistentIDsFromMessages:
_removeItemsForIndexableMessages:
initWithDatabase:hookResponder:
removeAllItemsFromIndexAndWait:skipInvalidation:
setNeedsReindex
_needsReindex
_needsToScheduleRecurringActivity
ef_insertObject:usingComparator:allowDuplicates:
addItem:
setItems:
_items
_referenceItem
attachmentID
setAttachmentID:
_attachmentID
searchableMessagesTableSchema
searchableAttachmentsTableSchema
searchableMessageTombstonesTableSchema
searchableMessagesTableName
_searchableIndexMessageIndexingTypes
_messagesRequiringIndexingForType:excludingIdentifiers:limit:
searchableIndexItemsFromMessages:type:
_identifiersForRemovedItemsUsingConnection:
_identifiersForTombstonesOfType:connection:
_attachmentDataForItemsRequiringIndexingExcludingIdentifiers:limit:cancelationToken:connection:
_attachmentItemsFromAttachmentData:limit:cancelationToken:
messagesRowIDWhereSubClause
messagesWhere:sortedBy:limit:
_canPerformIncrementalIndexForIdentifier:indexingType:
_addTombstonesForIdentifiers:type:connection:
hasUpdates
_assignIndexedItems:transaction:connection:
_assignTombstonesForIdentifiers:type:transaction:connection:
_purgeSpotlightTombstonesBeforeTransaction:connection:
_removeIndexedIdentifiers:connection:
setLastProcessedAttachmentID:
_identifiersForAttachmentsInTransactions:usingConnection:
_messageIDTransactionIDDictionaryToVerifyUsingConnection:count:
verificationDataSamplesFromMessageIDTransactionIDDictionary:
clearBindingsWithError:
resetWithError:
_assignIndexedItems:connection:query:indexedBindingsGenerator:
_assignIndexedAttachmentItems:transaction:connection:
_identifiersForDeletedMessagesUsingConnection:
_identifiersForDeletedAttachmentsUsingConnection:
lastProcessedAttachmentID
attachmentItemMetadataForAttachmentID:messagePersistentID:name:result:
_identifiersForAttachmentsWithQuery:usingConnection:
lastProcessedAttachmentIDLock
setLastProcessedAttachmentIDLock:
_lastProcessedAttachmentIDLock
_lastProcessedAttachmentID
deferrableActivityTypes
budgetTimeUserDefaultsKeyForIndexName:
_budgetTimeFromUserDefaults
_startScheduling
_stopScheduling
budgetConfiguration
setBudgetedItemCountRemaining:
beginIndexingForActivityType:activity:
activityTypes
_xpcCriteriaBuilderBlockForActivityType:
_registerActivityForType:builder:runner:
indexingStateQueue
_stopAllIndexing
activities
indexingEnabledForActivityTypes
_setBudgetedTimeRemaining:
_enableIndexingForActivityType:
_logIndexingPowerEventWithIdentifier:additionalEventData:usePersistentLog:
_beginIndexingForActivityType:activity:
isDeferrableActivityType:
_disableIndexingForActivityType:defer:
_stopIndexingForActivityType:shouldDeferIfPossible:
_isIndexingEnabledForActivityType:
_isIndexingEnabledByActivities
scheduledDeferralCheck
setScheduledDeferralCheck:
_deferActivitiesIfNecessary
_periodicallyCheckForDeferralIfNecessary
_setDataSourceIndexingPermitted:
schedulable
budgetTimeUserDefaultsKey
setDouble:forKey:
budgetedTimeRemaining
budgetedItemCountRemaining
initWithSchedulable:budgetConfiguration:
_xpcActivityIdentifierForActivityType:
deferIndexingForActivityType:
isIndexingEnabledForActivityType:
setNoActivityIndexingTime:
noActivityIndexingTime
setMaintenanceIndexingTime:
maintenanceIndexingTime
setBudgetedTimeRemaining:
isScheduling
setBudgetTimeUserDefaultsKey:
setIndexingStateQueue:
setActivities:
setIndexingEnabledForActivityTypes:
_scheduling
_scheduledDeferralCheck
_budgetedTimeRemaining
_budgetedItemCountRemaining
_noActivityIndexingTime
_maintenanceIndexingTime
_schedulable
_budgetConfiguration
_budgetTimeUserDefaultsKey
_indexingStateQueue
_activities
_indexingEnabledForActivityTypes
containsString:
em_stringForQuotingWithCharacter:
queryStringByJoiningQueries:withOperand:
transformDataForVerification:
expressionFromDataSamples:
verifySearchableItem:againstExpectedData:
fetchAttributes
_itemsRequiringIndexing
_removedDomainIdentifiers
setFetchAttributes:
finishWithResult:error:
_failingSamples:tester:
_addFailingSamples:toResultDictionary:
_verifyDataSamples:
_verifySamples:
transactionID
indexVerificationActivity
setIndexVerificationActivity:
_indexVerificationActivity
toEmailAddresses
setToEmailAddresses:
setDeleted:
setTransactionID:
indexedAsEmptySubject
setIndexedAsEmptySubject:
setUserInfo:
_subject
_toEmailAddresses
_deleted
_transactionID
_flags
_indexedAsEmptySubject
_userInfo
initWithDaemonInterfaceFactory:listener:
connectedClients
valueForEntitlement:
setExportedInterface:
setExportedObject:
removeRemoteClient:
setInterruptionHandler:
setInvalidationHandler:
addRemoteClient:
endpoint
initWithDaemonInterfaceFactory:
serverXPCEndpoint
listener
setListener:
setConnectedClients:
setDaemonInterfaceFactory:
_listener
_connectedClients
mailboxIDForMailboxURL:useNumericSearch:supportsLabels:
initWithDatabase:gmailLabelPersistence:mailboxID:useNumericSearch:supportsLabels:
serverMessagesTableSchema
serverLabelsTableSchema
unsignedIntValue
_remoteIDStringForRemoteIDArray:
_serverMessagesWithWhereClause:limitClause:returnLastEntries:
_serverMessageForRow:connection:
setRead:
setReplied:
setFlagged:
setDraft:
setForwarded:
setRedirected:
setJunkLevelSetByUser:
setJunkLevel:
setFlagColor:
ec_redactedStringForMailboxURL:
setPersistentID:
remoteIDObject
imapUID
_addLabels:removeLabels:forUID:connection:
useNumericSearch
hasChanges
ef_isUnsignedIntegerString
messageCount
unreadMessageCount
undeletedMessageCount
maximumIMAPUID
minimumIMAPUID
deleteAllServerMessagesInMailbox
_supportsLabels
_useNumericSearch
substringWithRange:
enumerateTagsForString:range:unit:scheme:options:orthography:usingBlock:
initWithTable:conflictTarget:
excludedColumnExpressionForColumnName:
updateLargestDeletedRowID:forTableName:withConnection:
_stopObservingNetworkReachability
executionQueue
setBackOffInterval:
_cancelTimer
setPendingWaitingForNetwork:
setWork:
canceledCallback
setCanceledCallback:
_doScheduleTask:canceledCallback:
task
initialDelay
timerSource
_incrementBackoffInterval
backOffInterval
setTimerSource:
setTask:
observeForNetworkReachability
isReachable
work
_startObservingNetworkReachability
sharedNetworkObserver
_reportReachabilityChange:
addNetworkReachableObserver:selector:
isNetworkReachable
setIsReachable:
pendingWaitingForNetwork
maxBackOffInterval
setMaxBackOffInterval:
backoffMultiplier
setBackoffMultiplier:
setExecutionQueue:
_observeForNetworkReachability
_isReachable
_pendingWaitingForNetwork
_initialDelay
_maxBackOffInterval
_backoffMultiplier
_timerSource
_executionQueue
_backOffInterval
_task
_canceledCallback
_work
initWithThreadScope:
initWithObject:
performWhileLocked:
setState:
objectIDsToMigrate
beginMigratingThreadScope:
_performMigration
recentlyMigratedObjectIDs
fail
queryHandler
nextBatch
_scheduleCleanupForBatchedObjectIDs:
addThreads:
_failMigration
removeMigratedObjectIDs:
globalAsyncScheduler
endMigratingThreadScope:
threadMigratorDidComplete:
addObjectIDs:
_resumeMigration
changeObjectIDsToMigrate:
deleteObjectIDsToMigrate:
deleteThreadsWithObjectIDs:
initWithThreadScope:threadPersistence:queryHandler:delegate:
migrationState
reset
addObjectIDsToMigrate:
_migrationLock
_cancelled
_state
_queryHandler
_objectIDsToMigrate
_recentlyMigratedObjectIDs
initWithName:columns:primaryKeyColumns:conflictResolution:
_recomputeThreads
initWithTimeInterval:scheduler:startAfter:block:
threadScopeManager
threadScopesByDatabaseID
_isThreadScopePrecomputed:shouldMigrate:
featureEnabled:
isThreadScopePrecomputed:shouldMigrate:
databaseIDForThreadScope:
setLastViewedDate:forThreadScope:
mailboxTypes
removeThreadScopesForMailboxScope:
removeAllThreadScopes
_enumerateThreadObjectIDsForThreadScope:filterClause:sortDescriptors:batchBlock:
_addOrderByToThreadSelect:forSortDescriptors:
_databaseIDForThreadObjectID:
_mailboxesForThreadDatabaseID:
_sendersForThreadDatabaseID:
_sendersFromMessagesForThreadObjectID:
_recipientsOfType:forThreadDatabaseID:
_recipientsOfType:fromMessagesForThreadObjectID:
_scheduleRecomputationForThread:reason:
leftOuterJoin:sourceColumn:targetColumn:
initWithHash:
messageCollectionItemIDForMessageIDHeaderHash:mailboxScope:
messageCollectionItemIDForDatabaseID:
dateValue
_nonJournaledSubjectForThreadWithObjectID:connection:
initWithPrefix:subjectWithoutPrefix:
_flagColorsFromRow:
areAnyEmailAddressesBlocked:
_messageThreadExpressionForThreadObjectID:
orderByColumn:ascending:
inSelect:
join:sourceColumn:targetColumn:
mailboxForObjectID:
_addressesFromSelectStatement:
_senderAddressesExpressionForMessages:
_addressesFromMessageAddressesStatement:
_recipientAddressesExpressionForRecipientType:messages:
orderByColumn:fromTable:ascending:
setDistinct:
setDisplayName:
_threadExpressionForThreadScopeDatabaseID:conversation:
_comparisonExpressionForSortDescriptors:conversationID:threadExpression:threadScopeDatabaseID:connection:
insertObjects:atIndexes:
enumerateRangesUsingBlock:
greaterThan:
_senderDatabaseIDsAndDatesForMessages:
addResultColumn:fromTable:
ef_isLaterThanDate:
_recipientDatabaseIDsAndDatesForMessages:recipientType:
_threadDatabaseIDExpressionForThreadScopeDatabaseID:conversation:
threadRecomputationDebouncer
debounceResult:
_messageThreadExpressionForThreadScope:objectIDs:
_persistedMessagesForMailboxScope:messageExpression:
addThreadReplacingExisting:journaled:
_iterateWrappedMessagesByConversationForPersistedMessages:writeBlock:
_addThreadScopeToDatabaseWithMailboxType:needsUpdate:lastViewedDate:connection:
mailboxScopeForMailboxTypes:forExclusion:
initWithMailboxScope:filterPredicate:
addThreadScope:withDatabaseID:needsUpdate:lastViewedDate:
setNeedsUpdate:forThreadScope:
_threadScopedToResetForActivatedAccount:
_resetThreadScope:withDatabaseID:
_enumerateThreadScopesUsingBlock:
_addedMailboxObjectIDsForActivatedAccount:
_getIndividualMailboxScopes:unifiedMailboxThreadScopes:forAccount:
isEphemeral
_addThreadScopeToDatabase:withMailboxDatabaseID:needsUpdate:connection:
_addPersistedMessages:journaled:generationWindow:
_filteredPersistedMessagesForPersistedMessages:
threadObjectID
updateThreadTableWithJournaled:
_persistenceIsDeletingMessages:generationWindow:
_persistenceIsChangingFlags:messages:generationWindow:
_persistenceIsChangingFlags:wrappedMessages:threadObjectID:threadScopeDatabaseID:
_iterateWrappedMessagesByConversationForPersistedMessages:block:
initWithResult:table:
ifNull:second:
notEqualTo:
_updateNewestReadMessageWithWrappedMessage:threadExpression:
_recalculateDisplayMessageForThreadObjectID:threadScopeDatabaseID:
_recalculateNewestReadMessageForThreadObjectID:threadScopeDatabaseID:
ef_addAbsentObjectsFromArrayAccordingToEquals:
_deleteWrappedMessages:fromThreadWithObjectID:threadScopeDatabaseID:generationWindow:
_updateThreadForDeleteWithObjectID:threadScopeDatabaseID:generationWindow:
_deleteMailboxesFromWrappedMessages:fromThreadWithDatabaseID:messageThreadExpression:
_updateBasicPropertiesAfterDeleteForThreadObjectID:threadScopeDatabaseID:
_deleteSendersFromThreadWithDatabaseID:messageThreadExpression:
_deleteRecipientsOfType:fromThreadWithDatabaseID:messageThreadExpression:
_upsertForThreadsWithThreadScopeDatabaseID:conversation:
_countMessagesForExpression:
_addKeyPathsForBasicPropertiesChangeToKeyPaths:
_mailboxDatabaseIDsForWrappedMessages:
notInSelect:
_deleteAllMessagesInThreadScope:withDatabaseID:generationWindow:
_updateAllThreadsAfterDeleteInThreadScope:withDatabaseID:generationWindow:
removeThreadScope:
wrappedMessages
threadScopeDatabaseID
_threadForWrappedMessages:objectID:
_messagesAreJournaledForThreadWithObjectID:
arrayByAddingObjectsFromArray:
reconciliationCleanupScheduler
_setPriorityForDisplayMessageSenderForThreadObjectID:
isServerSearchResult
sortDescriptorWithKey:ascending:
initWithConnection:
_wrappedMessagesByThreadScopeForPersistedMessages:
_expressionForThreadScope:
initWithCache:messagePersistence:threadScopeDatabaseID:threadScopeExpression:
createMessagesWithThreadObjectID:wrappedMessages:
_persistedMessagesByPossibleThreadScopeForPersistedMessages:
_wrappedMessageForPersistedMessages:threadScope:
threadScopes
initWithMessage:databaseID:
_threadQueryForThreadScope:
ef_isEarlierThanDate:
isEqualToDate:
_addKeyPathsForDisplayMessageChangeToKeyPaths:
ef_addObjectIfAbsent:
insertValue
concatenate:
countDistinct:
_messageThreadExpressionForThreadScope:conversationExpression:
_messageMailboxesExpressionForMailboxScope:
_messageFilterExpressionForFilterPredicate:
likely:
initWithMessage:messagePersistence:
_statementForOldestThreadInMailbox:threadScope:
dataValue
count:
threadScopeManager:mailboxScopeExists:
threadScopeManager:isValidMailboxObjectID:
threadScopeManager:populateThreadScopesWithBlock:
threadScopeManager:gatherStatisticsForThreadScopes:block:
threadScopeManager:evictThreadScopesWithDatabaseIDs:completionBlock:
initWithMessagePersistence:database:hookRegistry:vipManager:blockedSenderManager:
persistenceStateForThreadScope:
_senderDatabaseIDsAndDatesForThreadWithObjectID:
_senderDatabaseIDsAndDatesForWrappedMessages:
_recipientDatabaseIDsAndDatesForThreadWithObjectID:recipientType:
_recipientDatabaseIDsAndDatesForWrappedMessages:recipientType:
_inactiveMailboxDatabaseIDsForMailboxScope:forThreadScopeDatabaseID:
_updateDisplayMessageWithUnreadWrappedMessages:threadExpression:
setReconciliationCleanupScheduler:
threadRecomputationScheduler
setThreadRecomputationScheduler:
setThreadRecomputationDebouncer:
_threadObjectIDsToRecompute
_threadRecomputationLock
_migratingThreadScopes
_migratingThreadScopesLock
_threadScopeManager
_reconciliationCleanupScheduler
_threadRecomputationScheduler
_threadRecomputationDebouncer
_threadQuery
sqlHelper
_displayWrappedMessageWithNewestReadWrappedMessage:
executeUpdateSQL:bindings:errorHandler:
initWithMessages:threadDatabaseID:
addMailboxes
addSenders
addRecipientsForType:
executeUpsertSQL:bindings:errorHandler:
executeSelectSQL:bindings:errorHandler:rowHandler:
updateNewestReadAndDisplayMessage
_iterateNewestUnreadWrappedMessagesInWrappedMessages:iteratorBlock:
initWithSQLHelper:messagePersistence:threadScopeDatabaseID:threadObjectID:wrappedMessages:
_newestUnreadWrappedMessagesWithNewestReadWrappedMessage:
_threadScopeDatabaseID
_threadObjectID
_wrappedMessages
_sqlHelper
threadDatabaseID
updateNewestReadMessage:
updateDisplayMessageWithUnreadWrappedMessages:
addKeyPathsForDisplayMessageChangeToKeyPaths:
setPriorityForDisplayMessageSender
_ensureTempMessagesView
_mailboxDatabaseIDsForWrappedMessages
senderDatabaseIDsAndDates
addSenders:
recipientDatabaseIDsAndDatesForRecipientType:
addRecipients:ofType:
dropTemporaryView
executeSQL:errorHandler:
_didCreateTempMessagesView
_threadDatabaseID
initWithCache:
_ensureTempScopeView
threadScopeExpression
_didCreateTempScopeView
_threadScopeExpression
preparedStatements
_preparedStatements
executeWithNamedBindings:rowsChanged:error:
executeSQL:indexBindings:errorHandler:
_databaseID
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
inMemoryObservationID
precomputedObservationID
_isCurrentObservationToken:
setInMemoryObservationID:
setPrecomputedObservationID:
inMemoryQueryHandler
setInMemoryQueryHandler:
precomputedQueryHandler
setPrecomputedQueryHandler:
threadMigrator
setThreadMigrator:
_inMemoryObservationID
_precomputedObservationID
_inMemoryQueryHandler
_precomputedQueryHandler
_threadMigrator
underlyingHandler
initAsEphemeralID:
_createUnderlyingHandlerIfNeededAndStart
isStarted
observer:matchedAddedObjectIDs:after:extraInfo:
observer:matchedMovedObjectIDs:after:
_isRunning
_underlyingHandler
initWithCollectionItemID:mailboxScope:
serialDispatchQueueSchedulerWithName:
_initializeThreadScopesIfNeeded
_threadScopeInfoForThreadScope:
needsUpdate
_shouldPrecomputeThreadScope:
excludeTypes
excludeMailboxes
_shouldPrecomputeMailboxType:
_shouldPrecomputeMailboxWithObjectID:
mailboxTypesToPrecompute
initWithDatabaseID:needsUpdate:lastViewedDate:
_threadScopesWithLastViewedOlderThanLimit
_numberOfThreadScopesToEvictFrom:upTo:
_evictAtLeast:upTo:threadScopesFrom:
setNeedsUpdate:
setLastViewedDate:
keysOfEntriesPassingTest:
unarchivedObjectOfClass:fromData:error:
evictionScheduler
_evictionScoreForCount:timeInterval:
ef_removeObjectsPassingTest:
lastViewedDate
_threadScopes
_threadScopesLock
_evictionScheduler
_needsUpdate
_lastViewedDate
serviceName
setArray:
UUID
serialQueue
setServiceName:
setSerialQueue:
_serviceName
_serialQueue
setConversationIDsBySyncKey:
cloudStorage
conversationIDsBySyncKey
_syncKeyForConversationID:
ef_UUID
_setCloudStorageValue:forKey:
_synchronize
unmatchedKeys
_mergeServerChanges:
setCloudStorage:
queue
setQueue:
setUnmatchedKeys:
_cloudStorage
_conversationIDsBySyncKey
_unmatchedKeys
setNumberStyle:
numberFromString:
instanceLock
instances
setRepresentation
_reset
_registerInstance:
delayInterval
scalingFactor
lastUpdateDate
ef_timeIntervalSinceDate:
updateCounter
setUpdateCounter:
setLastUpdateDate:
setHasChangesSinceLastUpdate:
setLastAcknowledgementDate:
hasChangesSinceLastUpdate
lastAcknowledgementDate
invoke
initWithDelayInterval:scalingFactor:
_updatesLock
_unacknowledgedUpdates
_hasChangesSinceLastUpdate
_delayInterval
_scalingFactor
_lastUpdateDate
_lastAcknowledgementDate
_updateCounter
initWithDirectoryURL:keyValueStore:contactStore:
URLByAppendingPathComponent:isDirectory:
_loadVIPs
_synchronizeKVStore
_updateLocalWithCloud:refresh:
_keyValueStoreChanged:
operationQueue
_allVIPEmailAddresses
allVIPEmailAddresses
keyValueStore
isSubsetOfSet:
initWithIdentifier:name:emailAddresses:
_contactForName:emailAddresses:
_isVIPForContact:orAddresses:
stringFromContact:style:
_saveVIPs
_removeVIPsWithIdentifiers:
_vipsDictionary
plistURL
propertyListWithData:options:format:error:
_saveVIPsLocally
_updateCloudWithLocal
_serializedData
dataWithPropertyList:format:options:error:
_cloudKeyForIdentifier:
_validatedCloudVIPFromStore:withCloudKey:
isEqualToSet:
_mergeVIPs
stringByReplacingOccurrencesOfString:withString:options:range:
componentsFromString:
givenName
familyName
intersectSet:
predicateForContactsMatchingEmailAddress:
_contactDescriptors
unifiedContactsMatchingPredicate:keysToFetch:error:
predicateForContactsMatchingName:
_contactFromContacts:matchingMostAddresses:
descriptorForRequiredKeysForStyle:
vipWithIdentifier:
saveVIPs:
removeVIPsWithIdentifiers:
removeVIPsWithEmailAddresses:
hasVIPs
_vipsByIdentifier
_cachedEmailAddresses
_keyValueStore
_operationQueue
_plistURL
observer:gotVIPs:
observer:updatedVIPs:removedVIPs:
registerObserver:observationIdentifier:
_observersLock
_observersByIdentifier
archivedDataWithRootObject:requiringSecureCoding:error:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@"ACAccount"16@0:8
@"NSArray"16@0:8
v24@0:8@"NSString"16
v16@0:8
@24@0:8q16
@"<EDDeliveryAccount>"16@0:8
v24@0:8@"<EDDeliveryAccount>"16
@"<ECMailbox>"24@0:8q16
B24@0:8@"NSURL"16
@24@0:8@16
@"NSObject<OS_os_log>"16@0:8
v24@0:8@"NSArray"16
v24@0:8@"<EDAccount>"16
@32@0:8@16@24
v32@0:8@16@?24
v24@0:8@?16
@"NSMutableSet"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"EDAccountECAccountTransformer"
@"<EDAccountsProvider>"
@"EDPersistenceHookRegistry"
@32@0:8q16@24
v32@0:8@16@24
v40@0:8@16@24@32
v40@0:8@16q24q32
@"NSMutableDictionary"
@"<EDActivityHookResponder>"
v24@0:8@"EMActivity"16
v40@0:8@"EMActivityObjectID"16@24@"NSString"32
v40@0:8@"EMActivityObjectID"16q24q32
v32@0:8@"EMActivityObjectID"16@"NSError"24
v24@0:8@"EMActivityObjectID"16
v32@0:8@"<EMActivityObserver_xpc>"16@?<v@?@"<EFCancelable>"@"NSArray"@"NSError">24
@"EDActivityPersistence"
i24@0:8@16
i24@0:8@"EDPersistenceDatabaseConnection"16
@40@0:8@16@24@32
@32@0:8@16@?24
@56@0:8@16q24q32q40@?48
@?16@0:8
q16@0:8
v24@0:8q16
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"EDAssetDownloadScheduler"
@"NSObject<OS_xpc_object>"
@40@0:8@16Q24^@32
@"NSArray"40@0:8@"NSArray"16Q24^@32
@"<EDMailboxPredictor>"
@"NSCache"
@48@0:8@16@24@32@40
@"EDInteractionLogger"
@"EDDonationController"
@"EDInteractionEventLogUploader"
@"EDInteractionEventLogFile"
v20@0:8B16
@24@0:8@?16
@"NSArray"
v28@0:8i16@?20
@20@0:8i16
@?28@0:8@?16i24
@"NSPersistentContainer"
@"EDTaskScheduler"
@"NSManagedObjectContext"
@"<EDConversationDailyCloudExporterDelegate>"
@"EDUbiquitousConversationManager"
v40@0:8@16@24q32
v40@0:8@"<EDConversationRemoteStorage>"16@"NSDictionary"24q32
v24@0:8@"<EDConversationRemoteStorage>"16
v32@0:8@"NSMutableDictionary"16@"NSString"24
@"NSDictionary"24@0:8@"NSString"16
@"NSDictionary"16@0:8
v44@0:8@16@24@32B40
v36@0:8@16@24B32
@"<EDConversationRemoteStorageDelegate>"
@"<EDConversationRemoteStorage>"
@"EDConversationRemoteCloudKitStorage"
@"EDTransactionService"
@32@0:8^@16^@24
q24@0:8Q16
Q24@0:8q16
v48@0:8Q16@24q32q40
q24@0:8@16
@32@0:8q16Q24
v32@0:8@16q24
v24@0:8d16
v48@0:8Q16@"NSString"24q32q40
q24@0:8@"NSArray"16
@"NSArray"32@0:8q16Q24
v32@0:8@"NSArray"16q24
@32@0:8q16q24
@"NSArray"32@0:8q16q24
@"NSArray"32@0:8^@16^@24
v28@0:8@16B24
v40@0:8Q16@24q32
v32@0:8q16q24
v56@0:8q16Q24Q32q40@48
v48@0:8q16Q24Q32q40
@"EDPersistenceDatabase"
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v32@0:8@"NSFetchedResultsController"16@"NSDiffableDataSourceSnapshot"24
v32@0:8@"NSFetchedResultsController"16@"NSOrderedCollectionDifference"24
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
v36@0:8@16B24@28
@40@0:8@16@24@?32
@40@0:8@16@24^@32
@"EDCloudMirroringPersistentStore"
@"NSFetchedResultsController"
@"NSPersistentHistoryToken"
@"NSUbiquitousKeyValueStore"
@"EDPersistence"
@"EDCategorySubsystem"
@24@0:8d16
d16@0:8
@"NSDate"
v40@0:8q16q24@32
v48@0:8@16@24@32@40
v32@0:8q16@24
v40@0:8q16@24@32
v48@0:8@16q24@32@40
v44@0:8@16q24@32B40
v28@0:8@"<ECMessage>"16B24
v36@0:8@"NSArray"16B24@"EDPersistenceDatabaseGenerationWindow"28
v32@0:8@"NSArray"16@"EDPersistenceDatabaseGenerationWindow"24
v32@0:8@"NSData"16@"<ECMessage>"24
v40@0:8@"NSArray"16@"<ECMessage>"24@"EDPersistenceDatabaseGenerationWindow"32
v32@0:8@"NSURL"16@"EDPersistenceDatabaseGenerationWindow"24
v32@0:8@"ECMessageFlagChange"16@"NSArray"24
v40@0:8@"ECMessageFlagChange"16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v40@0:8q16q24@"EDPersistenceDatabaseGenerationWindow"32
v48@0:8@"NSSet"16@"NSSet"24@"NSArray"32@"EDPersistenceDatabaseGenerationWindow"40
v32@0:8q16@"NSArray"24
v40@0:8q16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v48@0:8@"ECAngleBracketIDHash"16q24@"<ECMessage>"32@"EDPersistenceDatabaseGenerationWindow"40
v44@0:8@"NSArray"16q24@"NSURL"32B40
@"_MSTTLReference"
@"<EMUserProfileProvider>"
@"EDMailDynamicDataAsset"
@48@0:8@16@24@32@?40
@"NSProgress"48@0:8@"EMObjectID"16@"EMContentRequestOptions"24@"<EMContentItemRequestDelegate>"32@?<v@?@"<_EMDistantContentRepresentation>"@"EMContentRepresentation"@"NSError">40
@"NSProgress"24@0:8@?<v@?@"EMContentRepresentation"@"NSError">16
@32@0:8@16Q24
@32@0:8Q16@24
@32@0:8d16@24
@32@0:8@16d24
@"<EDMailboxPredictionQueryAdapter>"
@"NSDictionary"
@"NSMutableString"
@40@0:8@16@24^B32
@32@0:8@16^B24
@"NSMutableArray"
@"EMThread"
@"EMThreadScope"
@"EFQuery"
@"<EMMailboxTypeResolver>"
@"EMMessage"
v48@0:8@16@24@32q40
v32@0:8@"EDMessageQueryHelper"16@"NSArray"24
v24@0:8@"EDMessageQueryHelper"16
v40@0:8@"EDMessageQueryHelper"16@"NSArray"24q32
v40@0:8@"EDMessageQueryHelper"16q24q32
v48@0:8@"EDMessageQueryHelper"16@"EMMessage"24@"EMMessageObjectID"32q40
v40@0:8@"EDMessageQueryHelper"16@"NSArray"24@"NSArray"32
v24@0:8i16i20
@72@0:8@16@24@32@40@48@56@64
@32@0:8@16^@24
B28@0:8@16B24
B32@0:8@16@24
@"NSMutableOrderedSet"
@"EDVIPManager"
@"<EDRemoteSearchProvider>"
@"EDMessageQueryHelper"
@"EDUpdateThrottler"
@"EDThreadReloadSummaryHelper"
@"<EFScheduler>"
@"EMMailboxScope"
v48@0:8@16@24q32@40
v48@0:8@"NSString"16@"NSDate"24@"<ECMessage>"32@"NSDictionary"40
v48@0:8@"NSString"16@"NSDate"24q32@"NSDictionary"40
v32@0:8@"NSString"16@"<ECMessage>"24
v40@0:8@"NSString"16@"<ECMessage>"24@"<ECMailAccount>"32
v48@0:8@"NSString"16@"NSDate"24@"<ECMessage>"32@"<ECMailbox>"40
v48@0:8@"NSString"16@"NSDate"24@"<ECMessage>"32q40
@24@0:8o^@16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSData"
@"<ECMessage>"
v32@0:8@"<ECMessage>"16@"<ECMailAccount>"24
v48@0:8@"NSString"16@"NSDate"24@"EMMessageObjectID"32@"NSDictionary"40
v40@0:8@"NSString"16@"NSDate"24@"NSDictionary"32
v56@0:8@16@24@32q40@48
@48@0:8{_NSRange=QQ}16{_NSRange=QQ}32
v32@0:8{_NSRange=QQ}16
{_NSRange=QQ}16@0:8
@"<EDInteractionEventLog>"
@"EDMessagePersistence"
@"EDMailboxPersistence"
{_NSRange="location"Q"length"Q}
@32@0:8@16q24
v48@0:8q16@24@32@40
B40@0:8@16q24@32
B44@0:8q16@24B32@36
B56@0:8@16@24q32q40@48
v48@0:8@16q24q32@40
v40@0:8@16q24@32
@"EDGmailLabelPersistence"
@"NSSet"24@0:8q16
q24@0:8@"EMObjectID"16
@"<EDMailboxProvider>"
@"EDCachingMailboxPredictor"
v32@0:8q16@?24
v40@0:8@16@24@?32
@"NSSet"
@36@0:8@16@24B32
@44@0:8@16q24@32B40
v52@0:8@16q24@32B40@44
v52@0:8@16@24q32@40B48
@"EDLocalActionPersistence"
@"EDServerMessagePersistenceFactory"
@"<EDMessageChangeHookResponder>"
v40@0:8q16@"EMMailboxObjectID"24@"EDPersistenceDatabaseGenerationWindow"32
@56@0:8@16@24@32@40@48
B32@0:8q16@24
@"EMObjectID"
{EFAtomicObject="cfObject"Aq}
@"NSPredicate"
@"EDMessageQueryEvaluator"
@"<EMMessageRepositoryCountQueryObserver_xpc>"
@"EFCancelationToken"
@24@0:8Q16
@24@0:8^@16
@"NSDictionary"32@0:8Q16@24
@"NSDictionary"24@0:8@"NSArray"16
q32@0:8@16@24
@40@0:8@16q24@32
v64@0:8@16q24q32q40@48@?56
v48@0:8@16q24@32@?40
@28@0:8@16B24
@36@0:8@16B24^@28
@56@0:8@16Q24@32@40@?48
i16@0:8
v20@0:8i16
@"NSNumber"
@64@0:8@16@24@32@40@48@56
@"NSArray"32@0:8@"NSArray"16q24
@"EFQuery"16@0:8
@68@0:8@16@24@32@40@48@56B64
{atomic_flag="_Value"AB}
@"<EDMessageQueryHelperDelegate>"
@"EDMessageQueryParser"
Q24@0:8@16
@"EDSearchableIndex"
@"EFSQLObjectPropertyMapper"
@"EFSearchableIndexObjectPropertyMapper"
@"EDMessageQueryTransformer"
@"<EMVIPManager>"
v24@0:8@"EDThreadQueryHandler"16
v40@0:8@16q24@?32
v48@0:8@16@24@32@?40
v56@0:8@16Q24@32@40@?48
v44@0:8@16Q24B32@?36
v40@0:8@"EFQuery"16q24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"EFQuery"16@?<v@?@"NSNumber"@"NSError">24
v48@0:8@"EFQuery"16@"<EMMessageListItemQueryResultsObserver>"24@"EMObjectID"32@?<v@?@"<EFCancelable>">40
v48@0:8@"EFQuery"16@"EMMailboxScope"24@"<EMMessageRepositoryCountQueryObserver_xpc>"32@?<v@?@"<EFCancelable>">40
v56@0:8@"NSArray"16Q24@"EMObjectID"32@"NSArray"40@?<v@?@"NSArray"@"NSDictionary">48
v44@0:8@"EMMessageChangeAction"16Q24B32@?<v@?@"EMUndoMessageAction">36
@"NSProgress"56@0:8@"EMMessageObjectID"16Q24@"EMContentRequestOptions"32@"<EMContentItemRequestDelegate>"40@?<v@?@"<_EMDistantContentRepresentation>"@"EMContentRepresentation"@"NSError">48
v24@0:8@"EMMailboxScope"16
v40@0:8@"NSString"16@"NSString"24@"EMMessageObjectID"32
v40@0:8@"NSString"16@"EMMessageObjectID"24@?<v@?@"NSString">32
v40@0:8@"NSArray"16@"<EMMessageRepositoryMailboxPredictionObserver_xpc>"24@?<v@?@"<EFCancelable>">32
@96@0:8@16@24@32@40@48@56@64@72@80@88
@"EDMailboxPredictionController"
@"NSHashTable"
@"EDConversationPersistence"
@"EDThreadPersistence"
@"EDMessageChangeManager"
@"NSConditionLock"
@"EDFetchController"
v24@0:8@"EMMessageObjectID"16
@"<EMMessageListItemQueryResultsObserver>"
@"NSMapTable"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v36@0:8@16B24@?28
v48@0:8@"EMOutgoingMessage"16@"EMMailboxObjectID"24@"EMMessageObjectID"32@?<v@?@"EMMessage">40
v40@0:8@"EMMailboxObjectID"16@"NSString"24@"EMMessageObjectID"32
v36@0:8@"EMOutgoingMessage"16B24@?<v@?@"EMMessageDeliveryResult">28
v32@0:8@"EMObjectID"16@?<v@?B>24
v24@0:8@?<v@?B>16
v24@0:8@?<v@?Q>16
v40@0:8@"<EDPBHasher>"16@"<ECMessage>"24@"<ECMailAccount>"32
v32@0:8@"<EDPBHasher>"16@"<ECMessage>"24
v40@0:8@"<EDPBHasher>"16@"<ECMessage>"24@"NSDictionary"32
v40@0:8@"<EDPBHasher>"16@"<ECMessage>"24@"<ECMailbox>"32
v40@0:8@"<EDPBHasher>"16@"<ECMessage>"24q32
v40@0:8@"<EDPBHasher>"16q24@"NSDictionary"32
v20@0:8I16
v24@0:8Q16
I16@0:8
@"EDPBInteractionEventAppBackground"
@"EDPBInteractionEventAppLaunch"
@"EDPBInteractionEventAppResume"
@"EDPBInteractionEventFlagChanged"
@"EDPBInteractionEventForwardDraftStarted"
@"EDPBInteractionEventForwardSent"
@"EDPBInteractionEventLinkClicked"
@"EDPBInteractionEventMarkedMuteThread"
@"EDPBInteractionEventMessageCopied"
@"EDPBInteractionEventMessageFetched"
@"EDPBInteractionEventMessageMoved"
@"EDPBInteractionEventMessageSent"
@"EDPBInteractionEventMessageViewEnd"
@"EDPBInteractionEventMessageViewStart"
@"EDPBInteractionEventReadChanged"
@"EDPBInteractionEventReplyDraftStarted"
@"EDPBInteractionEventReplySent"
{?="timestamp"b1"eventName"b1"sequenceNumber"b1}
{?="accountId"b1"conversationId"b1"mailboxId"b1"messageId"b1"mailboxType"b1"value"b1}
{?="accountId"b1"conversationId"b1"mailboxId"b1"messageId"b1"mailboxType"b1}
{?="deviceId"b1"userId"b1"timezoneOffset"b1"userSegment"b1"version"b1}
{?="conversationId"b1"value"b1}
{?="accountId"b1"conversationId"b1"fromMailboxId"b1"messageId"b1"toMailboxId"b1"fromMailboxType"b1"toMailboxType"b1}
@"EDPBMessageHeaders"
{?="accountId"b1"conversationId"b1"duration"b1"mailboxId"b1"messageId"b1"mailboxType"b1"scrolledToEnd"b1}
{?="messageId"b1}
^q16@0:8
v32@0:8^q16Q24
^B16@0:8
B24@0:8Q16
v32@0:8^B16Q24
{?="list"^q"count"Q"size"Q}
{?="list"^B"count"Q"size"Q}
{?="dateReceived"b1"listId"b1"sender"b1"senderContactId"b1"senderDomain"b1"messageIsForwarded"b1"messageIsReply"b1"senderIsVip"b1"userIsBcc"b1"userIsCc"b1"userIsSender"b1"userIsTo"b1}
@64@0:8@16@24q32q40q48@?56
@"EFQueue"
@"EMBlockedSenderManager"
@20@0:8B16
@"EDPersistenceDatabaseConnection"20@0:8B16
@"NSURL"32@0:8@"NSString"16q24
@72@0:8@16@24Q32@40@48@56@64
B24@0:8@?16
B28@0:8B16@?20
B32@0:8@?16B24B28
@"EFSQLSchema"
@"EFSQLPropertyMapper"
@"EDPersistenceDatabaseConnectionPool"
@"EDProtectedDatabasePersistence"
@44@0:8@16@24B32@36
@28@0:8B16@20
@36@0:8^{sqlite3=}16B24@28
B40@0:8@16@?24^@32
B32@0:8@16^@24
B32@0:8@16^Q24
B48@0:8@16@?24@32^@40
^{sqlite3=}16@0:8
B40@0:8B16B20^@24@?32
B36@0:8@16B24^@28
B32@0:8@16^q24
B32@0:8@16q24
v28@0:8i16@20
v24@0:8r*16
q24@0:8q16
B40@0:8@16@24^Q32
B48@0:8@16@24@32^Q40
B40@0:8@16@24^@32
@"<EDPersistenceDatabaseConnectionDelegate>"
@"EDPersistenceDatabaseJournal"
@"EFSQLConnection"
B32@0:8Q16^@24
v32@0:8Q16@24
@"NSLock"
@"_EDPersistenceDatabaseConnectionWrapper"
@"EFResourcePool"
@"<EDPersistenceDatabaseConnectionPoolDelegate>"
@"EFResource"
@"EDPersistenceDatabaseConnection"
@"EDPersistenceDatabaseJournalManager"
@"NSMutableIndexSet"
@48@0:8@16@24Q32Q40
@"EFSQLColumnSchema"
v24@0:8@"EDPersistenceDatabaseConnection"16
v32@0:8@"<EDLibraryMessage>"16@"EFSQLRow"24
v48@0:8q16q24@32@40
v48@0:8q16q24@"NSString"32@"NSString"40
v48@0:8q16@"EDSearchableIndexUpdates"24@"NSArray"32@"EDPersistenceDatabaseGenerationWindow"40
v36@0:8@"EMThreadObjectID"16B24@"EDPersistenceDatabaseGenerationWindow"28
v32@0:8@"EMThreadObjectID"16@"EDPersistenceDatabaseGenerationWindow"24
v40@0:8@"EMThreadObjectID"16@"NSArray"24@"EDPersistenceDatabaseGenerationWindow"32
v32@0:8@"EMThreadScope"16@?<v@?B>24
v32@0:8:16r*24
v40@0:8@16{objc_method_description=:*}24
^{__CFDictionary=}
@"EDPETQuotaReachedEvent"
@"EDPETSubmittedEvent"
{?=^qQQ}24@0:8@16
q24@0:8@"NSString"16
{?=^qQQ}24@0:8@"ECSubject"16
q24@0:8@"<ECMailAccount>"16
q24@0:8@"<ECMailbox>"16
@"EDPBMessageHeaders"24@0:8@"<ECMessage>"16
@32@0:8@16o^q24
@28@0:8i16@20
@"NSURL"
@"EDInteractionEventLogSaltProvider"
@"CNContactStore"
@"EFLazyCache"
@"NSFileHandle"
@"EFMutableInt64Set"
{?="droppedEventsCount"b1"timestamp"b1"sequenceNumber"b1"timezoneOffset"b1}
{?="timestamp"b1"timezoneOffset"b1}
@"<EFCancelable>"
B48@0:8@16@24@32^@40
Q32@0:8@16@24
Q40@0:8@16@24@32
B40@0:8@16@24@32
Q44@0:8@16B24@28@36
v24@0:8@?<v@?@"<EMMessageRepositoryInterface>">16
v24@0:8@?<v@?@"<EMOutgoingMessageRepositoryInterface>">16
v24@0:8@?<v@?@"<EMAccountRepositoryInterface>">16
v24@0:8@?<v@?@"<EMFetchControllerInterface>">16
v24@0:8@?<v@?@"<EMMailboxRepositoryInterface>">16
v24@0:8@?<v@?@"<EMClientStateInterface>">16
v24@0:8@?<v@?@"<EMSearchableIndexInterface>">16
v24@0:8@?<v@?@"<EMInteractionLoggerInterface>">16
v24@0:8@?<v@?@"<EMVIPManagerInterface>">16
v24@0:8@?<v@?@"<EMActivityRegistryInterface>">16
v24@0:8@?<v@?@"NSString">16
v24@0:8@?<v@?>16
@"EDAccountRepository"
@"EDMailboxRepository"
@"EDMessageRepository"
@"EDOutgoingMessageRepository"
@"<EMVIPManagerInterface>"
@"EDActivityRegistry"
@"NSXPCConnection"
@"EDDaemonInterfaceFactory"
@"EDClientState"
i32@0:8@16@24
B24@0:8q16
@48@0:8@16@24@32o^@40
@52@0:8@16@24@32B40o^@44
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
@"NSData"48@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32o^@40
@"NSURL"52@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32B40o^@44
@40@0:8@16@24Q32
@"NSString"24@0:8@"EDSearchableIndexVerifier"16
@"NSDictionary"40@0:8@"EDSearchableIndexVerifier"16@"EDSearchableIndex"24Q32
@"EDSearchableIndex"24@0:8@"EDSearchableIndexVerifier"16
v32@0:8@"NSArray"16@?<v@?>24
v32@0:8@16Q24
d40@0:8^Q16d24@?32
v40@0:8q16@24@?32
v24@0:8B16B20
v32@0:8^@16^@24
v32@0:8Q16@?24
v32@0:8@16B24B28
v36@0:8@16B24q28
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_os_activity>"
@"_EMSearchableIndexPendingRemovals"
@"<EDSearchableIndexDataSource>"
@"<EDSearchableIndexReasonProvider>"
@"<EDSearchableIndexSchedulableDelegate>"
@"CSSearchableIndex"
@"EFFuture"
@"<EDSearchableCriterion>"
@"NSIndexSet"
@"CSSearchableItem"16@0:8
@"EFFuture"16@0:8
q24@0:8@"<EDIndexableItem>"16
@"NSDate"16@0:8
@"NSData"16@0:8
v24@0:8@"NSData"16
@"CSSearchableItem"
@"EDSearchableIndexAttachmentItemMetadatum"
@"EFPromise"
v24@0:8@"NSDate"16
@48@0:8d16d24q32B40B44
@40@0:8d16d24q32
@44@0:8@16@24@32B40
@"<EDIndexableMessage>"
v28@0:8B16Q20
@"<EDIndexableItem>"
@48@0:8@16@24Q32@40
@"EDSearchableIndexUpdates"48@0:8@"EDSearchableIndex"16@"NSArray"24Q32@"EFCancelationToken"40
q32@0:8@"EDSearchableIndex"16@"<EDIndexableItem>"24
v40@0:8@"EDSearchableIndex"16q24@"NSArray"32
v40@0:8@"EDSearchableIndex"16@"NSArray"24q32
@"NSArray"32@0:8@"EDSearchableIndex"16@"NSArray"24
@"NSArray"40@0:8@"EDSearchableIndex"16q24@"EDSearchableIndexUpdates"32
v32@0:8@"EDSearchableIndex"16q24
@"NSDictionary"32@0:8@"EDSearchableIndex"16Q24
v40@0:8@"EDSearchableIndex"16@"NSArray"24@"NSString"32
v32@0:8@"EDSearchableIndex"16@"NSString"24
@40@0:8@16@24q32
@40@0:8q16@24q32
@48@0:8@16Q24@32@40
@40@0:8@16Q24@32
@"<EDSearchableIndexHookResponder>"
v32@0:8@16d24
d24@0:8@16
v32@0:8@"<EDSearchableIndexSchedulable>"16d24
v32@0:8@"<EDSearchableIndexSchedulable>"16q24
v24@0:8@"<EDSearchableIndexSchedulable>"16
v40@0:8@"<EDSearchableIndexSchedulable>"16@"NSString"24@"NSDictionary"32
d24@0:8@"<EDSearchableIndexSchedulable>"16
q24@0:8@"<EDSearchableIndexSchedulable>"16
B24@0:8@"<EDSearchableIndexSchedulable>"16
@?24@0:8@16
v40@0:8@16@?24@?32
@"<EDSearchableIndexSchedulable>"
@"EDSearchableIndexBudgetConfiguration"
@"EDSearchableIndexVerificationData"24@0:8@"EDSearchableIndexVerificationData"16
@"EMSearchableIndexQueryExpression"24@0:8@"NSDictionary"16
B32@0:8@"CSSearchableItem"16@"EDSearchableIndexVerificationData"24
v32@0:8@?16@24
@"<EDSearchableIndexVerifierDataSource>"
@"NSXPCListener"
@48@0:8@16@24q32B40B44
@44@0:8{_NSRange=QQ}16Q32B40
B40@0:8@16^B24^B32
B44@0:8@16@24I32@36
B40@0:8q16@24@32
v32@0:8@?16@?24
@"EFLocked"
@"EDInMemoryThreadQueryHandler"
@"<EDThreadMigratorDelegate>"
B40@0:8@16@24@?32
B32@0:8@"EDThreadScopeManager"16@"EMMailboxScope"24
B32@0:8@"EDThreadScopeManager"16@"EMMailboxObjectID"24
v32@0:8@"EDThreadScopeManager"16@?<v@?q@"NSString"@"NSNumber"@"NSData"B@"NSDate">24
v40@0:8@"EDThreadScopeManager"16@"NSArray"24@?<v@?q@"NSDate"Q>32
B40@0:8@"EDThreadScopeManager"16@"NSArray"24@?<v@?B>32
B32@0:8@16^B24
v56@0:8@16@24Q32@40@?48
B48@0:8@16@24@32@?40
@56@0:8@16q24@32q40@48
B44@0:8@16B24@28@36
v40@0:8^@16^@24@32
B44@0:8@16q24B32@36
@48@0:8@16@24@32q40
@48@0:8@16@24q32@40
B40@0:8Q16@24@32
@"EDThreadScopeManager"
@"EFDebouncer"
@56@0:8@16@24q32@40@48
B24@0:8B16B20
@"EMThreadObjectID"
@"_EDThreadPersistence_SQLHelper"
B32@0:8@16Q24
@"_EDThreadPersistence_ThreadMessages"
@"<EFSQLExpressable>"
i40@0:8@16@?24@?32
q40@0:8@16@?24@?32
B48@0:8@16@?24@?32@?40
B32@0:8@16@?24
@"_EDThreadPersistence_StatementCache"
@"EDPrecomputedThreadQueryHandler"
@"EDThreadMigrator"
v24@0:8@"EDThreadMigrator"16
v32@0:8@"EMObjectID"16@"<EFInvocable>"24
v48@0:8@"EMObjectID"16@"NSArray"24@"EMObjectID"32@"NSDictionary"40
v40@0:8@"EMObjectID"16@"NSArray"24@"EMObjectID"32
v32@0:8@"EMObjectID"16@"NSDictionary"24
v32@0:8@"EMObjectID"16@"NSArray"24
v40@0:8@"EMObjectID"16@"EMObjectID"24@"EMMessageObjectID"32
v24@0:8@"EMObjectID"16
@88@0:8@16@24@32@40@48@56@64@72@80
@40@0:8@16^B24^@32
@"<EDThreadQueryHandlerDelegate>"
v44@0:8@16q24B32@36
v28@0:8B16@20
v40@0:8Q16Q24@32
d32@0:8Q16d24
Q32@0:8@16^Q24
@"<EDThreadScopeManagerDataSource>"
@36@0:8q16B24@28
@"<EDUbiquitousConversationManagerDelegate>"
@40@0:8@16d24q32
@32@0:8d16q24
@32@0:8@?16^Q24
Q24@0:8^d16
@"EMVIP"24@0:8@"NSString"16
B24@0:8@"NSString"16
v24@0:8@"NSSet"16
v24@0:8@"EAEmailAddressSet"16
@"NSSet"16@0:8
@"EAEmailAddressSet"16@0:8
@"EAEmailAddressSet"
v32@0:8@"<EMVIPManagerObserver>"16@"EMObjectID"24
