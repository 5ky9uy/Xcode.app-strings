hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
emailAddressStrings
T@"NSArray",R,C,N
hostname
T@"NSString",C,N
password
identifier
T@"NSString",R,C,N
systemAccount
T@"ACAccount",R,C,N
isManaged
TB,R,N
sourceIsManaged
emailAddresses
T@"NSArray",R,N
smtpIdentifier
isLocalAccount
shouldArchiveByDefault
maximumMessageBytes
TQ,R,N
v16@?0@"<EMReceivingAccountBuilder>"8
v16@?0@"<EMDeliveryAccountBuilder>"8
com.apple.email
v8@?0
B16@?0@"<EDAccount>"8
@"EMAccount"16@?0@"<EDAccount>"8
T@"NSObject<OS_os_log>",R
transformer
T@"EDAccountECAccountTransformer",&,N,V_transformer
observersByIdentifier
T@"NSMutableDictionary",&,N,V_observersByIdentifier
accountsProvider
T@"<EDAccountsProvider>",&,N,V_accountsProvider
hookRegistry
T@"EDPersistenceHookRegistry",W,N,V_hookRegistry
activityHookResponder
T@"<EDActivityHookResponder>",&,N,V_activityHookResponder
activityPersistence
T@"EDActivityPersistence",R,N,V_activityPersistence
T@"EDPersistenceHookRegistry",R,N,V_hookRegistry
CREATE INDEX IF NOT EXISTS messages_deleted_date_received_index ON messages(deleted, date_received);
messages
mailboxes
conversations
conversation_id
thread_scopes
mailbox
mailbox_type
filter_predicate
needs_update
last_viewed
threads
scope
conversation
newest_read_message
display_message
date
read
deleted
flagged
draft
replied
forwarded
redirected
junk_level_set_by_user
junk_level
has_unflagged
has_attachments
count
thread_mailboxes
thread
thread_senders
address
priority
thread_recipients
type
thread_flag_colors
color
v40@?0@"EFSQLTableSchema"8@"NSString"16@"EFSQLTableSchema"24Q32
v32@?0@"EFSQLTableSchema"8@"NSString"16@"EFSQLTableSchema"24
threadScopesTableSchema
T@"EFSQLTableSchema",R,N
threadsTableSchema
threadMailboxesTableSchema
threadSendersTableSchema
threadRecipientsTableSchema
threadFlagColorsTableSchema
MSAssetDownloadRetryInterval
%@.%@
v16@?0@"NSObject<OS_xpc_object>"8
_identifier
T@"NSString",C,N,V_identifier
_lastFailureIntervalKey
T@"NSString",C,N,V_lastFailureIntervalKey
_handler
T@?,C,N,V_handler
_regularInterval
Tq,N,V_regularInterval
_failureInterval
Tq,N,V_failureInterval
_backOffFactor
Tq,N,V_backOffFactor
_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
scheduler
T@"EDAssetDownloadScheduler",W,N,V_scheduler
activity
T@"NSObject<OS_xpc_object>",&,N,V_activity
R %@
S %@
predictor
T@"<EDMailboxPredictor>",&,N,V_predictor
cache
T@"NSCache",&,N,V_cache
cacheKeysByProperty
T@"NSMutableDictionary",&,N,V_cacheKeysByProperty
logUploader
T@"EDInteractionEventLogUploader",&,N,V_logUploader
logFile
T@"EDInteractionEventLogFile",&,N,V_logFile
interactionLogger
T@"EDInteractionLogger",R,N,V_interactionLogger
donationController
T@"EDDonationController",R,N,V_donationController
visibleMailboxesObjectIds
T@"NSArray",R,N,V_visibleMailboxesObjectIds
isForeground
TB,R,N,V_isForeground
CloudKitControl
ckRecordID
T@"NSString",C,D,N
ckRecordSystemFields
T@"NSData",&,D,N
migratedFromKVSStorage
TB,D,N
com.apple.mail.EDConversationRemoteCloudKitStorage
CloudKitMirroringDataModel
momd
CloudKitMailConversationsFlags/CloudKitMirroringDataModel
com.apple.mail.preferences
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
v16@?0@"NSCloudKitMirroringResult"8
mirroringOptions
T@"NSCloudKitMirroringDelegateOptions",R,N,V_mirroringOptions
persistentContainer
T@"NSPersistentContainer",R,N,V_persistentContainer
importScheduler
T@"EDTaskScheduler",&,N,V_importScheduler
exportScheduler
T@"EDTaskScheduler",&,N,V_exportScheduler
privateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_privateQueue
com.apple.email.ConversationDailyExporter
delegate
T@"<EDConversationDailyCloudExporterDelegate>",R,N,V_delegate
conversationManager
T@"EDUbiquitousConversationManager",R,N,V_conversationManager
ConversationInfo
conversationUUID
lastModified
T@"NSDate",C,D,N
messageIds
notifyMe
muted
last-modified
com.apple.mail.EDConversationMultipleRemoteStorage
Multiple Storages: [%@, %@]
T@"<EDConversationRemoteStorageDelegate>",W,N,V_delegate
kvsStorage
T@"<EDConversationRemoteStorage>",&,N,V_kvsStorage
cloudKitStorage
T@"EDConversationRemoteCloudKitStorage",&,N,V_cloudKitStorage
dataReplicationTransaction
T@"EDTransactionService",&,N,V_dataReplicationTransaction
conversation_id_message_id
SyncAnchorForLastDailyConversationExport
EDConversationFlagsChanged
EDConversationFlagsChangedConversationIDKey
EDConversationFlagsChangesKey
EDConversationFlagsKey
EDConversationFlagsReason
EDConversationFlagsOldFlags
MessageConversationIsVIP
MessageConversationIsMuted
flags
sync_key
message_id
date_sent
com.apple.email.ConversationPersistenceNotification
SELECT conversation_id, sync_key FROM conversations WHERE sync_key NOT NULL
v32@?0@"EFSQLRow"8Q16^B24
Selecting synced conversations
B16@?0@"EDPersistenceDatabaseConnection"8
:conversation_id
:limit
SELECT message_id FROM conversation_id_message_id WHERE conversation_id = :conversation_id ORDER BY date_sent DESC LIMIT :limit
Selecting message IDs for conversation ID
SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE message_id IN (%@)
Selecting conversation ID for message IDs
SELECT flags FROM conversations WHERE conversations.conversation_id = :conversation_id
Selecting flags for conversation ID
INSERT INTO conversations (flags) values (:flags)
:flags
Creating conversation.
SELECT flags FROM conversations WHERE conversation_id = :conversation_id LIMIT 1
Finding old conversation flags
UPDATE conversations SET flags = :flags, sync_key = :sync_key WHERE conversation_id = :conversation_id
:sync_key
Setting conversation flags
SELECT message_id, date_sent from messages where ROWID IN (%@)
Selecting message IDs to update conversation association table.
SELECT conversation_id FROM conversations where conversation_id = %@
Executing querying for conversation id
INSERT OR REPLACE INTO conversation_id_message_id (conversation_id, message_id, date_sent) VALUES (:conversation_id, :message_id, :date_sent)
:message_id
:date_sent
Setting conversation association table entries
DELETE FROM conversations WHERE conversation_id NOT IN (SELECT DISTINCT conversation_id from messages) AND (sync_key IS NULL AND conversation_id NOT IN (SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE date_sent > :older_than));
:older_than
Pruning conversations table
UPDATE conversation SET flags = :flags, sync_key = NULL WHERE conversation_id IN (%@)
SELECT value FROM properties WHERE key = '%@'
value
Selecting previous conversation daily export sync anchor
SELECT max(ROWID) as syncAnchor from messages
syncAnchor
Selecting current conversation sync anchor for daily export
INSERT OR REPLACE INTO properties (key, value) VALUES (:key, :value)
:key
:value
Updating previous conversation sync anchor for daily export
SELECT DISTINCT conversations.conversation_id AS conversation_id FROM conversations LEFT JOIN messages on messages.conversation_id = conversations.conversation_id WHERE messages.ROWID > :start AND messages.ROWID < :end AND conversations.flags != 0;
:start
:end
hasSubscribedConversations
conversationsTableSchema
conversationIDMessageIDTableSchema
conversationsTableName
database
T@"EDPersistenceDatabase",R,W,N,V_database
notificationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
message-ids
EDConversationRemoteCloudKitStoragePushNotificationName
kCloudStoreHistoryTokenUserDefaultsKey
com.apple.icloud-container.com.apple.nanomaild
%@-Export
%@-Import
v16@?0@"NSError"8
v12@?0B8
conversationUUID == %@
v24@?0@"NSPersistentHistoryTransaction"8^B16
mirroringPersistentStore
T@"EDCloudMirroringPersistentStore",&,N,V_mirroringPersistentStore
fetchedResultsController
T@"NSFetchedResultsController",R,N,V_fetchedResultsController
managedObjectContext
T@"NSManagedObjectContext",&,N,V_managedObjectContext
initialized
TB,N,GisInitialized,V_initialized
historyToken
T@"NSPersistentHistoryToken",&,N,V_historyToken
exportTransaction
T@"EDTransactionService",&,N,V_exportTransaction
importTransaction
T@"EDTransactionService",&,N,V_importTransaction
TB,D,N,GisMigratedFromKVSStorage
com.apple.mail.threadinfo
com.apple.mail.EDConversationRemoteKVSStorage
succeeded
failed
v32@?0@"NSString"8Q16^B24
v32@?0@"NSString"8@16^B24
kvStore
T@"NSUbiquitousKeyValueStore",&,N,V_kvStore
NSUbiquitousKeyValueStoreServerChange
NSUbiquitousKeyValueStoreInitialSyncChange
NSUbiquitousKeyValueStoreQuotaViolationChange
unknown change reason (%lu)
-[EDDaemonInterfaceFactory newFetchController]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Server/EDDaemonInterfaceFactory.m
-[EDDaemonInterfaceFactory newOutgoingMessageRepository]
categorySubsystem
T@"EDCategorySubsystem",&,N,V_categorySubsystem
persistence
T@"EDPersistence",R,N,V_persistence
com.apple.mail.SenderDomain
T@,&,N,V_value
Td,N,V_ttl
lastSet
T@"NSDate",&,N,V_lastSet
com.apple.mail.EDDifferentialPrivacyReporter
@"NSSet"8@?0
en_US
en_GB
en_CA
en_AU
fr_FR
de_DE
ja_JP
OTHER
recordingHandler
T@?,C,N,V_recordingHandler
recordingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recordingQueue
_recordingKey
T@"NSString",&,N,V_recordingKey
_profileProvider
T@"<EMUserProfileProvider>",W,N,V_profileProvider
_userDomains
T@"_MSTTLReference",&,N,V_userDomains
_mailDynamicData
T@"EDMailDynamicDataAsset",&,N,V_mailDynamicData
v24@?0@"NSString"8@"NSString"16
B16@?0@"<EMExtendedContentItem>"8
v24@?0@"EMContentRepresentation"8@"NSError"16
mode
order
weights
weightedThreshold
orderedThreshold
ignoreUserAddresses
confusionThreshold
limitToRecentMessages
ordered
weighted
conversationID
sender
recipient
listID
MFUserCreatedMailboxIDs
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Mailbox Prediction/EDHeuristicsMailboxPredictor.m
<Unknown File>
Invalid parameter not satisfying: %@
[mergedParams[kConfusionThresholdParameterKey] isKindOfClass:[NSNumber class]] || [mergedParams[kConfusionThresholdParameterKey] isKindOfClass:[NSNull class]]
[mergedParams[kOrderParameterKey] isKindOfClass:[NSArray class]]
[mergedParams[kWeightsParameterKey] isKindOfClass:[NSDictionary class]]
Unknown mode: %@
Unknown field: %@
v32@?0@"NSString"8@"NSNumber"16^B24
userProfileProvider
T@"<EMUserProfileProvider>",&,N,V_userProfileProvider
library
T@"<EDMailboxPredictionQueryAdapter>",&,N,V_library
parameters
T@"NSDictionary",&,N,V_parameters
mailboxIDCache
T@"NSCache",&,N,V_mailboxIDCache
debugLog
T@"NSMutableString",&,N,V_debugLog
B16@?0@"EMMessage"8
v16@?0@"<EMThreadBuilder>"8
B32@?0@"EMMessage"8Q16^B24
threadScope
T@"EMThreadScope",R,N,V_threadScope
T@"EMThread",&,N,V_thread
originatingQuery
T@"EFQuery",R,N,V_originatingQuery
mailboxTypeResolver
T@"<EMMailboxTypeResolver>",R,N,V_mailboxTypeResolver
newestMessage
T@"EMMessage",R,N
displayMessage
T@"EMMessage",&,N,V_displayMessage
v32@?0@"NSNumber"8@"NSArray"16^B24
@"NSNumber"16@?0@"EMMessage"8
@16@?0@"EDInMemoryThread"8
@"NSNumber"16@?0@"EDInMemoryThread"8
B16@?0@"<ECEmailAddressConvertible>"8
v32@?0@"EMMessage"8Q16^B24
v32@?0@"NSNumber"8@"EDInMemoryThread"16^B24
thread.
messageQueryHelper
T@"EDMessageQueryHelper",R,N,V_messageQueryHelper
threadSortDescriptors
T@"NSArray",R,C,N,V_threadSortDescriptors
messageSortDescriptors
T@"NSArray",R,C,N,V_messageSortDescriptors
<%@ %p
 eventID=%lld
 version=%ld
 name=%@
 date=%@
 accountID=%@
 mailboxID=%lld
 conversationID=%lld
 messageIDHash=%lld
 messagePersistentID=%lld
 data=%@
eventID
Tq,N,V_eventID
version
Tq,N,V_version
T@"NSDate",&,N,V_date
accountID
T@"NSString",C,N,V_accountID
mailboxID
Tq,N,V_mailboxID
Tq,N,V_conversationID
messageIDHash
Tq,N,V_messageIDHash
messagePersistentID
Tq,N,V_messagePersistentID
name
T@"NSString",C,N,V_name
data
T@"NSDictionary",C,N,V_data
mail-qa@group.apple.com
qa_interaction_log.jsonl
USER-ID
com.apple.email.EDInteractionEventLog.writeQueue
v16@?0@"NSTimer"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Categories/Event Log/EDInteractionEventLogFile.m
New logFile is same as oldLog. Ooops!
mailbox_id
@apple.com
cohort
platform
device_id
locale
user_id
date_utc
date_local
account_id
message_persistent_id
event_name
event_data
Column count mismatch.
Unexpected column names in TSV header: %@
directory.isFileURL
,hashed=false
interaction_log,date=%@,v=%ld%@.tsv
@16@?0@"NSString"8
sender_domain
sender_is_vip
sender_contact_id
subject_words
message_is_reply
Fwd: 
message_is_forwarded
user_is_sender
user_is_to
user_is_cc
user_is_bcc
date_received
_address
_domain
_is_vip
_contact_id
user_is_
@"NSString"16@?0@"NSString"8
references
list_id
Jazzkon
inbox
junk
archive
trash
sent
drafts
outbox
@"NSString"8@?0
commonPrefix
T@"NSString",&,N,V_commonPrefix
directory
T@"NSURL",&,N,V_directory
currentLogFile
T@"NSURL",&,N,V_currentLogFile
logFileHandle
T@"NSFileHandle",&,N,V_logFileHandle
qaLogFileHandle
T@"NSFileHandle",&,N,V_qaLogFileHandle
writeQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_writeQueue
contactIDCache
T@"EFLazyCache",&,N,V_contactIDCache
shouldHash
TB,N,V_shouldHash
requireOptIn
TB,N,V_requireOptIn
profileProvider
T@"<EMUserProfileProvider>",&,N,V_profileProvider
saltProvider
T@"EDInteractionEventLogSaltProvider",&,N,V_saltProvider
contactStore
T@"CNContactStore",&,N,V_contactStore
vipManager
T@"<EMVIPManager>",&,N,V_vipManager
referenceTimeZone
T@"NSTimeZone",R,N,V_referenceTimeZone
meContactIdentifier
T@"NSString",R,N,V_meContactIdentifier
userID
T@"NSString",R,N,V_userID
deviceID
T@"NSString",R,N,V_deviceID
rotationHandler
T@?,C,N,V_rotationHandler
lineBuffer
T@"NSMutableArray",&,N,V_lineBuffer
<%@ %p: %@>
logs
T@"NSArray",&,N,V_logs
com.apple.mail.interaction-log.salt
com.apple.mail
q24@?0@"NSDictionary"8@"NSDictionary"16
salt
T@"NSData",&,N,V_salt
lock
T{os_unfair_lock_s=I},N,V_lock
viewingStarted
T@"NSDate",&,N,V_viewingStarted
message
T@"<ECMessage>",&,N,V_message
scrolledToEnd
TB,N,V_scrolledToEnd
mutedThread
TB,N,V_mutedThread
T@"NSString",C,N,V_key
cellStyle
T@"NSString",C,N,V_cellStyle
messageListType
T@"NSString",C,N,V_messageListType
Tq,N,V_row
com.apple.mail.EDInteractionLoggerStateTracking
com.apple.email.EDInteractionLoggerProcessing
reply_draft_started
forward_draft_started
message_view_start
message_view_end
duration
scrolled_to_end
message_list_display_started
message_list_type
position
cell_style
message_list_display_ended
v32@?0@"NSString"8@"_EDUserActionState"16^B24
message_moved
message_copied
link_clicked
ConversationViewExcludesRelatedMessages
ConversationViewShowsNewestAtTop
LinesOfPreview
NumberOfActiveAccounts
DisableThreading
LeftEdgeSwipeAction
RightEdgeSwipeAction
ColumnLayoutMessageList
NumberOfSnippetLines
@"NSDictionary"16@?0@8
ConversationViewSortDescending
ConversationViewSpansMailboxes
@"NSDictionary"16@?0@"NSNumber"8
AccountOrdering
@"NSDictionary"16@?0@"NSArray"8
v32@?0@8@16^B24
app_launch
app_background
app_resume
marked_mute_thread
message_fetched
read_changed
flag_changed
reply_sent
forward_sent
message_sent
_viewedMessages
T@"NSMutableDictionary",&,N,V_viewedMessages
_messageListMessages
T@"NSMutableDictionary",&,N,V_messageListMessages
_messageListVisibleRows
T{_NSRange=QQ},N,V_messageListVisibleRows
_stateTrackingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_stateTrackingQueue
messagePersistence
T@"EDMessagePersistence",&,N,V_messagePersistence
mailboxPersistence
T@"EDMailboxPersistence",&,N,V_mailboxPersistence
_eventLog
T@"<EDInteractionEventLog>",&,N,V_eventLog
processingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_processingQueue
local_message_actions
action_messages
action_labels
action_flags
action
source_mailbox
destination_mailbox
action_type
destination_message
label
user_initiated
action_phase
remote_id
do_add
flag_type
flag_value
-[EDLocalActionPersistence init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Syncing/Local Actions/EDLocalActionPersistence.m
SELECT ROWID, action_type, user_initiated, mailbox, source_mailbox, destination_mailbox FROM local_message_actions WHERE ((mailbox IN (SELECT ROWID FROM mailboxes WHERE url GLOB '%@*')) AND (ROWID > ?)) ORDER BY ROWID
ROWID
DELETE FROM local_message_actions WHERE ROWID IN (%@);
deleting actions
SELECT action_phase, remote_id, message, destination_message FROM action_messages WHERE action = ?
v16@?0@"<ECTransferMessageActionItemBuilder>"8
Creating a transfer action when we don't have a transfer action type
v16@?0@"<ECTransferMessageActionBuilder>"8
A transfer all action should always have exactly one remote ID associated with it
v16@?0@"<ECTransferUndownloadedMessageActionBuilder>"8
v16@?0@"<ECFlagChangeMessageActionBuilder>"8
A flag change all action should always have exactly one remote ID associated with it
v16@?0@"<ECFlagChangeUndownloadedMessageActionBuilder>"8
SELECT label, do_add FROM action_labels WHERE action = ?
v16@?0@"<ECLabelChangeMessageActionBuilder>"8
SELECT remote_id, message FROM action_messages WHERE action = ?
SELECT flag_type, flag_value FROM action_flags WHERE action = ?
v16@?0@"<ECMessageFlagChangeBuilder>"8
-[EDLocalActionPersistence messageForDatabaseID:]
INSERT INTO local_message_actions (action_type, mailbox) VALUES (?, ?)
Adding flag change action
INSERT INTO action_flags (action, flag_type, flag_value) VALUES (?, ?, ?)
v28@?0B8q12q20
Adding flag change records
INSERT INTO local_message_actions (action_type, user_initiated, mailbox, source_mailbox, destination_mailbox) VALUES (?, ?, ?, ?, ?)
Adding copy action
copy
append
move
delete
INSERT INTO action_labels (action, label, do_add) VALUES (?, ?, ?)
Adding flag change messages
UPDATE local_message_actions SET mailbox = :mailbox WHERE ROWID = :action
:action
:mailbox
Updating action phase
source mailbox
destination mailbox
-[EDLocalActionPersistence moveSupportedFromMailboxURL:toURL:]
UPDATE action_messages SET action_phase = %ld WHERE action = %llu AND %@
Updating copy item phase
DELETE FROM action_messages WHERE action = %llu AND %@
Deleting copy items
Copy item had neither a source remoteID or a destination message
(remote_id IN (%@) OR destination_message IN (%@)
remote_id IN (%@)
destination_message IN (%@)
DELETE FROM local_message_actions WHERE ROWID = ?
Removing completed action
T@"EDPersistenceDatabase",R,N,V_database
gmailLabelPersistence
T@"EDGmailLabelPersistence",R,N,V_gmailLabelPersistence
-[EDMailboxPersistence mailboxDatabaseIDsForMailboxObjectIDs:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Mailboxes/EDMailboxPersistence.m
-[EDMailboxPersistence createMailbox:parentMailboxID:]
-[EDMailboxPersistence deleteMailbox:]
-[EDMailboxPersistence moveMailbox:newParentMailboxID:]
-[EDMailboxPersistence renameMailbox:newName:]
changeObserversByIdentifier
T@"NSMutableDictionary",&,N,V_changeObserversByIdentifier
mailboxProvider
T@"<EDMailboxProvider>",&,N,V_mailboxProvider
com.apple.email.EDMessageRepository.serializationQueue
v16@?0@"NSArray"8
serializationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_serializationQueue
-[EDMailDropMetadataGenerator generateMailDropMetadataForContentURL:completionHandler:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Messages/EDMailDropMetadataGenerator.m
-[EDMailDropMetadataGenerator insertMaildropAttachmentViewForContentURL:HTMLByContentID:completionHandler:]
-[EDMailDropMetadataGeneratorFactory newMailDropMetadataGenerator]
com.apple.MobileAsset.MailDynamicData
IgnoreAccountDomains
IgnoredDomains
gmail.com
googlemail.com
hotmail.co
hotmail.co.uk
hotmail.com
hotmail.eu
hotmail.net
hotmail.org
icloud.com
me.com
outlook.co
outlook.com
outlook.eu
outlook.org
rocketmail.com
ymail.com
com.apple.mailsupport.downloadMobileAssetCatalog
v16@?0@"<EDAssetDownloadSchedulerContinuation>"8
apple.com
group.apple.com
v16@?0q8
TelemetryConfig.plist
shouldIgnoreUserAccountDomains
TB,V_shouldIgnoreUserAccountDomains
ignoredDomains
T@"NSSet",&,V_ignoredDomains
T@"EDAssetDownloadScheduler",&,N,V_scheduler
com.apple.email.EDMessageChangeManager
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Messages/EDMessageChangeManager.m
HookResponder does not respond to all of the methods required by the EDMessageChangeManager.
-[EDMessageChangeManager init]
@"<NSCopying>"16@?0@"<ECMessage>"8
v32@?0@"<ECMessage>"8@"<ECMessage>"16^B24
v24@?0@"NSArray"8^B16
v32@?0@"NSURL"8@"NSArray"16^B24
B16@?0@"<ECMessage>"8
v16@?0@"<ECIMAPServerMessageBuilder>"8
Got foreign key constraint
Calling reflectFlagChanges:forMessages: on IMAP
Reflect all deleted server messages for a data source without server messages
v32@?0@"NSDictionary"8@"NSMutableArray"16^B24
v32@?0@"ECMessageFlagChange"8@"NSMutableArray"16^B24
v32@?0@"ECTransferMessageActionItem"8@"NSData"16^B24
v16@?0@"<ECServerMessageBuilder>"8
-[EDMessageChangeManager accountForMailboxURL:]
localActionPersistence
T@"EDLocalActionPersistence",R,N,V_localActionPersistence
serverMessagePersistenceFactory
T@"EDServerMessagePersistenceFactory",R,N,V_serverMessagePersistenceFactory
markAllWorkQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_markAllWorkQueue
hookResponder
T@"<EDMessageChangeHookResponder>",R,W,N,V_hookResponder
EDNotificationWillSyncMailbox
EDNotificationDidSyncMailbox
EDNotificationKeyMailbox
%@-MessagesPendingFlagChangesKey-%p
v40@?0@"EMObjectID"8q16q24q32
Initial count
Incrementing to count
Decrementing to count
v32@?0@"EMObjectID"8@"_EDMailboxServerCount"16^B24
All callbacks acknowledged
Finished syncing mailbox %@
Original
Setting server count to %lld for %@
Setting most recent status count to %lld for %@
Setting last sync and most recent status count to %lld for %@
Adjusting last sync and most recent status count by %lld for %@
defaultScheduler
T@"<EFScheduler>",R,N
query
T@"EFQuery",&,N,V_query
predicateIgnoringFlags
T@"NSPredicate",&,N,V_predicateIgnoringFlags
serverCountMailboxScope
T@"EMMailboxScope",R,N,V_serverCountMailboxScope
queryEvaluator
T@"EDMessageQueryEvaluator",&,N,V_queryEvaluator
resultsObserver
T@"<EMMessageRepositoryCountQueryObserver_xpc>",&,N,V_resultsObserver
T@"EDPersistenceHookRegistry",&,N,V_hookRegistry
cancelationToken
T@"EFCancelationToken",&,N,V_cancelationToken
pendingFlagChangesKey
T@"NSString",R,V_pendingFlagChangesKey
localCount
Tq,N,V_localCount
hasChangesSinceLastCallback
TB,N,V_hasChangesSinceLastCallback
lastCallbackDate
T@"NSDate",&,N,V_lastCallbackDate
serverCount
Tq,N,V_serverCount
mostRecentStatusCount
Tq,N,V_mostRecentStatusCount
lastSyncStatusCount
Tq,N,V_lastSyncStatusCount
senderAddress.emailAddressValue.displayName
senderAddress.emailAddressValue.address
toList.emailAddressValue.displayName
toList.emailAddressValue.address
ccList.emailAddressValue.displayName
ccList.emailAddressValue.address
mailboxObjectIDs.url.absoluteString
subject.subjectString
body
AnyRecipient
From
Subject
Spotlight
%K = %@
@"NSPredicate"16@?0@"NSString"8
@16@?0@"<EDAccount>"8
@"NSString"16@?0@"ECEmailAddress"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Messages/EDMessageListItemPredicates.m
Expected predicate should be a NSCompoundPredicate
Expected subpredicate should be a NSComparisonPredicate
@"NSPredicate"16@?0@"NSPredicate"8
rowid
objectID should be a constant value right expression
@"EMMessageObjectID"16@?0@8
NSData is stored in the predicate's rhs in an unexpected format
subject
summary
attachments
recipients
message_references
addresses
comment
subjects
summaries
protected_message_data
displayName
string
additionalMapper
emailAddressValue
size
original_mailbox
content_type
encoding
external_id
unique_id
list_id_hash
subject_prefix
date_last_viewed
senderAddress
mailboxObjectIDs
messageID
isNotify
isMute
hasAttachments
column
placeholderColumn
document_id
remote_mailbox
reference
is_originator
attachment_id
@"EMMessageObjectID"16@?0@"NSData"8
@"NSString"24@?0@"NSString"8@"NSString"16
%@, %@
-[EDMessagePersistence messagesExistWithMessageIDHeaderHash:matchingQuery:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Messages/EDMessagePersistence.m
-[EDMessagePersistence countOfMessagesMatchingQuery:]
v24@?0@"NSArray"8@"NSError"16
-[EDMessagePersistence iterateMessagesMatchingQuery:batchSize:firstBatchSize:limit:cancelationToken:handler:]
-[EDMessagePersistence iteratePersistedMessagesMatchingQuery:limit:cancelationToken:handler:]
-[EDMessagePersistence persistedMessageForOutgoingMessage:isDraft:]
@"NSString"16@?0@"EMMessageObjectID"8
v32@?0@"EMMailboxScope"8@"NSArray"16^B24
SELECT ROWID FROM messages WHERE %@
Fetching messages for messageIDHashes
-[EDMessagePersistence persistedMessagesForDatabaseIDs:]
-[EDMessagePersistence messagesForPersistedMessages:mailboxScope:]
@"EMMessage"16@?0@"EMMessageObjectID"8
@"EMMailboxScope"16@?0@"EMMessageObjectID"8
-[EDMessagePersistence requestContentForMessageObjectID:options:delegate:completionHandler:]
-[EDMessagePersistence requestSummaryForMessageObjectID:]
messagesTableName
attachmentsTableName
addressesTableName
conversationPersistence
T@"EDConversationPersistence",&,N,V_conversationPersistence
T@"EDMailboxPersistence",R,W,N,V_mailboxPersistence
T@"EDVIPManager",R,N,V_vipManager
Failed on predicate %@
messageQuery
T@"EFQuery",&,N,V_messageQuery
v32@?0@8@"NSMutableArray"16^B24
com.apple.email.%@.%p
%@-MessagesPendingConversationIDChangeKey-%p
%@-JournaledMessagesPendingAddKey-%p
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Messages/EDMessageQueryHelper.m
Journal reconciliation happened between isAddingMessages: and didAddMessages: persistence hooks
T@"EDMessagePersistence",R,N,V_messagePersistence
T@"EDPersistenceHookRegistry",R,W,N,V_hookRegistry
T@"<EDMessageQueryHelperDelegate>",R,W,N,V_delegate
T@"<EFScheduler>",R,N,V_scheduler
pendingConversationIDChangesKey
T@"NSString",R,V_pendingConversationIDChangesKey
pendingJournaledMessageAddsKey
T@"NSString",R,V_pendingJournaledMessageAddsKey
T@"EFQuery",R,N,V_query
queryType
TQ,R,N,V_queryType
predicate
T@"NSPredicate",R,N,V_predicate
-[EDMessagePredicateParser parseResultsFromPredicate:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Messages/EDMessageQueryParser.m
queryParser
T@"EDMessageQueryParser",R,N,V_queryParser
Predicate must be a NSCompoundPredicate
rowid IN %@
results expected to have at least one EDMessageQueryParserObject
FALSE
Generated query is nil
(kMDItemContentType = public.email-message && %@)
Searchable Index query expression is not valid
@"NSNumber"16@?0@"NSString"8
T@"EDMessageQueryTransformer",R,N,V_transformer
searchableIndex
T@"EDSearchableIndex",R,N,V_searchableIndex
sqlPropertyMapper
T@"EFSQLObjectPropertyMapper",R,N,V_sqlPropertyMapper
searchableIndexMapper
T@"EFSearchableIndexObjectPropertyMapper",R,N,V_searchableIndexMapper
B16@?0@"NSPredicate"8
T@"<EDAccountsProvider>",R,N,V_accountsProvider
T@"EDMailboxPersistence",R,N,V_mailboxPersistence
T@"<EMVIPManager>",R,N,V_vipManager
v32@?0@"EMThreadScope"8@"NSMutableArray"16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Messages/EDMessageRepository.m
Incorrect number of results and errors when fetching message list items
@16@?0@"<ECMessage>"8
An undo action was requested for a copy, that's not yet supported
v32@?0@"<EDReceivingAccount>"8@"NSArray"16^B24
v32@?0@"NSURL"8@"NSMutableArray"16^B24
B16@?0@"EMObjectID"8
@"NSArray"16@?0@"EMThreadObjectID"8
v16@?0@"EMContentRepresentation"8
queryHandlers
T@"NSMutableDictionary",&,N,V_queryHandlers
threadQueryHandlers
T@"NSMutableDictionary",&,N,V_threadQueryHandlers
handlerTokens
T@"NSHashTable",&,N,V_handlerTokens
threadPersistence
T@"EDThreadPersistence",&,N,V_threadPersistence
messageChangeManager
T@"EDMessageChangeManager",&,N,V_messageChangeManager
performQueryOnSerializationQueue
T@"NSConditionLock",R,N,V_performQueryOnSerializationQueue
-[EDMessageRepositoryQueryHandler cancel]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Messages/EDMessageRepositoryQueryHandler.m
T@"<EMMessageListItemQueryResultsObserver>",R,N,V_resultsObserver
observationIdentifier
T@"EMObjectID",R,N,V_observationIdentifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Message List/EDMigratingThreadQueryHandler.m
Attempting to start migration from wrong state
object ID must be thread object ID
inMemoryObservationIdentifier
T@"EMObjectID",R,N,V_inMemoryObservationIdentifier
inMemoryQueryHandler
T@"EDInMemoryThreadQueryHandler",&,V_inMemoryQueryHandler
precomputedObservationIdentifier
T@"EMObjectID",R,N,V_precomputedObservationIdentifier
precomputedQueryHandler
T@"EDPrecomputedThreadQueryHandler",R,N,V_precomputedQueryHandler
T@"EDThreadPersistence",R,N
T@"EMThreadScope",R,N
com.apple.email.signposts
com.apple.email.EDOutgoingMessageRepository
com.apple.email.outgoingmessagerepository.deliveryworkblock
-[EDOutgoingMessageRepository isProcessingWithCompletion:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Compose/EDOutgoingMessageRepository.m
-[EDOutgoingMessageRepository numberOfPendingMessagesWithCompletion:]
-[EDOutgoingMessageRepository outboxContainsMessageFromAccountObjectID:completion:]
-[EDOutgoingMessageRepository processAllQueuedMessages]
-[EDOutgoingMessageRepository resumeDeliveryQueue]
-[EDOutgoingMessageRepository suspendDeliveryQueue]
-[EDOutgoingMessageRepository messagesForDocumentID:mailboxID:]
v24@?0@"NSArray"8^Q16
-[EDPersistence database]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Persistence/EDPersistence.m
-[EDPersistence serverMessagePersistenceFactory]
-[EDPersistence conversationPersistence]
-[EDPersistence localActionPersistence]
-[EDPersistence messageChangeManager]
-[EDPersistence searchableIndexManager]
-[EDPersistence threadPersistence]
T@"EDPersistenceDatabase",R
T@"EDConversationPersistence",R
T@"EDLocalActionPersistence",R
T@"EDServerMessagePersistenceFactory",R
T@"EDGmailLabelPersistence",R,V_gmailLabelPersistence
T@"EDThreadPersistence",R
T@"EDMessagePersistence",R,V_messagePersistence
T@"EDMessageChangeManager",R
T@"EDPersistenceHookRegistry",R,V_hookRegistry
T@"<EMUserProfileProvider>",R,N,V_userProfileProvider
searchableIndexManager
T@"EDSearchableIndexManager",R
T@"EDVIPManager",R,V_vipManager
blockedSenderManager
T@"EMBlockedSenderManager",R,N,V_blockedSenderManager
T@"EDActivityPersistence",R,V_activityPersistence
Protected Index
_EDPersistenceActiveDatabaseConnection
_EDPersistenceReadOnlyDatabaseConnection
_EDPersistenceNeedsHighPriority
-[EDPersistenceDatabase init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Persistence/Database/EDPersistenceDatabase.m
performReadBlockInDatabase called before database setup is complete
performWriteBlockInDatabase called before database setup is complete
Database write block nested inside a readblock.
Committing transaction in nested block
Couldn't get database connection in performBlock
Committing transaction
We should not be checking out a connection on a nested call
Trying to get a database write connection while servicing an XPC request
-[EDPersistenceDatabase openConnectionIsWriter:]
-[EDPersistenceDatabase enforceDataProtection]
file
shared
memory
Invalid database type
connectionPool
T@"EDPersistenceDatabaseConnectionPool",R,N,V_connectionPool
protectedDatabasePersistence
T@"EDProtectedDatabasePersistence",R,N,V_protectedDatabasePersistence
basePath
T@"NSString",R,N,V_basePath
databaseName
T@"NSString",R,N,V_databaseName
fullPath
T@"NSString",R,N,V_fullPath
databaseIsCorrupt
enforceDataProtection
setupIsComplete
TB,V_setupIsComplete
isNestedDatabaseCall
writersAreWaiting
schema
T@"EFSQLSchema",R,N,V_schema
protectedSchema
T@"EFSQLSchema",R,N,V_protectedSchema
propertyMapper
T@"EFSQLPropertyMapper",R,N,V_propertyMapper
:memory:
_EDPersistenceDatabaseConnectionInTransaction
_EDPersistenceDatabaseConnectionNestedBlockFailed
-[EDPersistenceDatabaseConnection init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Persistence/Database/EDPersistenceDatabaseConnection.m
[%@ isWriter: %@, SQL connection: %@]
Error preparing statement for query %@
SELECT statement
v32@?0Q8@"<EFSQLBindable>"16^B24
INSERT statement
v32@?0@"NSString"8@"<EFSQLBindable>"16^B24
UPDATE statement
UPSERT statement
Error while executing %@
Error while executing DELETE statement
We have a database connection without a sql database pointer
EDPersistenceDatabaseConnection open called when already open
Unable to finalize statements
configureSQLConnection called on a closed connection
and64
error creating user function and64
PRAGMA foreign_keys = ON;
error enabling foreign key support
error setting busy timeout
-[EDPersistenceDatabaseConnection handleSQLResult:message:]
SELECT 1 FROM %@.sqlite_master WHERE name = ? AND type = 'table'
SELECT 1 FROM sqlite_master WHERE name = ? AND type = 'table'
Checking for existence of table
PRAGMA %@.table_info(%@)
PRAGMA table_info(%@)
Fetching column type
attaching %@
Attaching database when not open
ATTACH DATABASE %@ AS %@
Detaching database when not open
DETACH DATABASE %@
detaching %@
T@"<EDPersistenceDatabaseConnectionDelegate>",R,W,N,V_delegate
protectedDatabaseName
T@"NSString",C,N,V_protectedDatabaseName
journalDatabaseName
T@"NSString",C,N,V_journalDatabaseName
journal
T@"EDPersistenceDatabaseJournal",&,N,V_journal
sqlConnection
T@"EFSQLConnection",R,N,V_sqlConnection
T@"NSString",R,N
isValid
protectedDatabaseAttached
journalDatabaseAttached
sqlDB
T^{sqlite3=},R,N
isWriter
lastInsertedDatabaseID
Tq,R,N
-[EDPersistenceDatabaseConnectionPool init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Persistence/Database/EDPersistenceDatabaseConnectionPool.m
maxConcurrentBackgroundReaders > 0
No connection wrapper found
T@"<EDPersistenceDatabaseConnectionPoolDelegate>",W,N,V_delegate
cacheSize
TQ,N
maxConcurrentBackgroundReaders
TQ,R,N,V_maxConcurrentBackgroundReaders
backgroundReadersWaiting
writersWaiting
resource
T@"EFResource",&,N,V_resource
connection
T@"EDPersistenceDatabaseConnection",R,N,V_connection
generation
TQ,R,N,V_generation
TQ,N,V_type
Protected Index Journals
-wal
-shm
%@ number: %lu, referenceCount: %lu
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Persistence/Database/EDPersistenceDatabaseJournal.m
reference count should be non-zero
journalManager
T@"EDPersistenceDatabaseJournalManager",R,N,V_journalManager
referenceCount
path
number
TQ,R,N,V_number
com.apple.email.persistenceDatabaseJournalManager.checkExistingQueue
com.apple.email.persistenceDatabaseJournalManager.deleteQueue
_currentJournal exists, but has no reference count
@"EDPersistenceDatabaseJournal"8@?0
journalDirectoryPath
T@"NSString",R,C,N,V_journalDirectoryPath
checkExistingQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_checkExistingQueue
deleteQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_deleteQueue
oldestJournal
T@"EDPersistenceDatabaseJournal",R,N
properties
v24@?0@"NSMutableArray"8@"NSMutableArray"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Persistence/Database/EDPersistenceDatabaseSchema.m
Unable to resolve association: %@
Unable to resolve foreign key constraint: %@
absoluteString
total_count
unread_count
deleted_count
T@"EFSQLSchema",R,N
T@"EFSQLPropertyMapper",R,N
%@ %@ -> %@
%@(%@)
T@"EFSQLColumnSchema",R,N,V_column
tableName
T@"NSString",R,C,N,V_tableName
deleteAction
TQ,R,N,V_deleteAction
updateAction
TQ,R,N,V_updateAction
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Persistence/EDPersistenceHookRegistry.m
[hookResponder respondsToSelector:requiredMethod]
B24@?0@8^B16
EDPropertyMapperLookupKeySelectIndex
com.apple.MailPersonaStorage
%@ %@
interaction_events
quota_event
submitted_event
interactionEvents
T@"NSMutableArray",&,N,V_interactionEvents
hasQuotaEvent
quotaEvent
T@"EDPETQuotaReachedEvent",&,N,V_quotaEvent
hasSubmittedEvent
submittedEvent
T@"EDPETSubmittedEvent",&,N,V_submittedEvent
hasEventData
eventData
T@"NSData",&,N,V_eventData
timestamp
sequence_number
timezone_offset
event_data_features
hasTimestamp
TB,N
TQ,N,V_timestamp
hasSequenceNumber
sequenceNumber
TI,N,V_sequenceNumber
hasTimezoneOffset
timezoneOffset
Ti,N,V_timezoneOffset
hasVersion
TI,N,V_version
hasEventName
eventName
Ti,N,V_eventName
hasUserId
userId
Tq,N,V_userId
hasDeviceId
deviceId
Tq,N,V_deviceId
hasAccountId
accountId
Tq,N,V_accountId
hasMailboxId
mailboxId
Tq,N,V_mailboxId
hasMailboxType
mailboxType
Ti,N,V_mailboxType
hasConversationId
conversationId
Tq,N,V_conversationId
hasMessageId
messageId
Tq,N,V_messageId
eventDatas
T@"NSMutableArray",&,N,V_eventDatas
eventDataFeatures
T@"NSMutableArray",&,N,V_eventDataFeatures
INVALID
MESSAGE_FETCHED
MESSAGE_SENT
MESSAGE_LIST_DISPLAY_STARTED
MESSAGE_LIST_DISPLAY_ENDED
MESSAGE_MOVED
MESSAGE_COPIED
LINK_CLICKED
APP_LAUNCH
APP_BACKGROUND
APP_RESUME
FLAG_CHANGED
READ_CHANGED
MESSAGE_VIEW_START
MESSAGE_VIEW_END
REPLY_DRAFT_STARTED
FORWARD_DRAFT_STARTED
REPLY_SENT
FORWARD_SENT
MARKED_MUTE_THREAD
(unknown: %i)
UNDEFINED
INBOX
ARCHIVE
SENT
TRASH
JUNK
DRAFTS
OUTBOX
double_value
int64_value
string_value
-[EDPETInteractionEventDataField writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Categories/Event Log/PET/Generated/EDPETInteractionEventDataField.m
nil != self->_key
T@"NSString",&,N,V_key
hasDoubleValue
doubleValue
Td,N,V_doubleValue
hasInt64Value
int64Value
Tq,N,V_int64Value
hasStringValue
stringValue
T@"NSString",&,N,V_stringValue
com.apple.email.EDPETInteractionEventLog.workQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Categories/Event Log/PET/EDPETInteractionEventLog.m
interaction_log,v=%ld.pblog
Can't map eventName string to enum: %@
Nested feature values must be numbers
Unexpected feature type: %@: %@
features
features must be a dictionary
Unexpected data type: %@: %@
@"NSNumber"8@?0
T@"<EMUserProfileProvider>",R,N,V_profileProvider
T@"EDInteractionEventLogSaltProvider",R,N,V_saltProvider
T@"CNContactStore",R,N,V_contactStore
T@"EFLazyCache",R,N,V_contactIDCache
T@"NSString",&,N,V_meContactIdentifier
Tq,R,N,V_userID
Tq,R,N,V_deviceID
monthSalt
T@"NSData",R,N,V_monthSalt
workQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
TAI,N,V_sequenceNumber
T@"NSURL",R,N,V_directory
shouldLog
TAB,N,V_shouldLog
com.apple.email.EDPrecomputedThreadQueryHandler.changeScheduler
com.apple.email.EDPrecomputedThreadQueryHandler.backgroundWorkScheduler
v32@?0@"NSArray"8^Q16^B24
B16@?0@"_EDThreadPositionChangeSet"8
v32@?0@"EMThreadObjectID"8@"NSMutableArray"16^B24
changeScheduler
T@"<EFScheduler>",R,N,V_changeScheduler
backgroundWorkScheduler
T@"<EFScheduler>",R,N,V_backgroundWorkScheduler
pendingChanges
T@"NSMutableDictionary",&,N,V_pendingChanges
pendingPositionChanges
T@"NSMutableArray",&,N,V_pendingPositionChanges
unreportedJournaledObjectIDs
T@"NSMutableSet",&,N,V_unreportedJournaledObjectIDs
reportedJournaledObjectIDs
T@"NSMutableDictionary",&,N,V_reportedJournaledObjectIDs
T@"EDThreadPersistence",R,N,V_threadPersistence
@"NSString"16@?0@"EMThreadObjectID"8
[%@]
@"NSString"16@?0@"NSArray"8
%@ -> %@
Add:
Move:
Delete:
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Message List/EDPrecomputedThreadQueryHandler.m
Adding a thread based on position of a thread that was deleted
Moving a thread based on position of a thread that was deleted
objectIDsToAddByBeforeObjectID
T@"NSMutableDictionary",&,N,V_objectIDsToAddByBeforeObjectID
objectIDsToMoveByBeforeObjectID
T@"NSMutableDictionary",&,N,V_objectIDsToMoveByBeforeObjectID
objectIDsToDelete
T@"NSMutableSet",&,N,V_objectIDsToDelete
allObjectIDsToAdd
T@"NSMutableSet",&,N,V_allObjectIDsToAdd
allObjectIDsToMove
T@"NSMutableSet",&,N,V_allObjectIDsToMove
+[EDProtectedDatabasePersistence protectedDatabaseName]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Persistence/Database/EDProtectedDatabasePersistence.m
+[EDProtectedDatabasePersistence journalDatabaseName]
com.apple.email.protectedDatabasePersistence.reconciliationQueue
Unable to attach protected database
Unable to detach protected database
Initializing journal database
Unable to attach journal database
Unable to detach journal database
PRAGMA %@.journal_mode = WAL;
SELECT name FROM %@.sqlite_sequence
%@.sqlite_sequence
SELECT max(%@) FROM %@
Finding max %@
on-demand reconciliation
reconciliation
Attaching journal for merging
@"NSString"16@?0@"EFSQLColumnSchema"8
journal.%@ = protected.%@
We must have at least one join constraint
SELECT protected.ROWID, journal.ROWID FROM %@ AS journal INNER JOIN %@ AS protected ON %@
 AND 
Unable to merge journal for table %@
Unable to select rows to merge journal for table %@
Unable to delete rows from journal for table %@
INSERT OR IGNORE INTO %@ SELECT * FROM %@
Unable to insert new rows into protected database for table %@
SELECT DISTINCT %@ FROM %@
 WHERE %@
 UNION 
SELECT %1$@ FROM %2$@ WHERE %1$@ NOT IN (%3$@)
SELECT %@ FROM %@ WHERE %@
-[EDProtectedDatabasePersistence supportsJournaling]
-[EDProtectedDatabasePersistence protectedDataAvailable]
reconciliationQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_reconciliationQueue
isInitialized
TB,N,V_isInitialized
isReconciling
TB,N,V_isReconciling
supportsJournaling
protectedDataAvailable
com.apple.emaildaemon.protecteddatabasepersistence.cleanup
maild - Ready to Serve.
exportedInterface
T@"NSXPCInterface",R
clientConnection
T@"NSXPCConnection",R,N,V_clientConnection
daemonInterfaceFactory
T@"EDDaemonInterfaceFactory",R,N,V_daemonInterfaceFactory
accountRepository
T@"EDAccountRepository",R,N,V_accountRepository
clientState
T@"EDClientState",&,N,V_clientState
fetchController
T@"EDFetchController",R,N,V_fetchController
mailboxRepository
T@"EDMailboxRepository",R,N,V_mailboxRepository
messageRepository
T@"EDMessageRepository",R,N,V_messageRepository
outgoingMessageRepository
T@"EDOutgoingMessageRepository",R,N,V_outgoingMessageRepository
activityRegistry
T@"EDActivityRegistry",R,N,V_activityRegistry
vipManagerInterface
T@"<EMVIPManagerInterface>",R,N,V_vipManagerInterface
CREATE TABLE IF NOT EXISTS messages_new (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,message_id INTEGER NOT NULL DEFAULT 0,remote_id INTEGER,document_id TEXT COLLATE BINARY,sender INTEGER,subject_prefix TEXT COLLATE BINARY,subject INTEGER NOT NULL,summary INTEGER,date_sent INTEGER,date_received INTEGER,mailbox INTEGER NOT NULL,remote_mailbox INTEGER,flags INTEGER NOT NULL DEFAULT 0,read INTEGER NOT NULL DEFAULT 0,flagged INTEGER NOT NULL DEFAULT 0,deleted INTEGER NOT NULL DEFAULT 0,size INTEGER NOT NULL DEFAULT 0,conversation_id INTEGER NOT NULL DEFAULT 0,date_last_viewed INTEGER,original_mailbox INTEGER,visible INTEGER,sender_vip INTEGER,encoding INTEGER,content_type INTEGER,sequence_identifier INTEGER DEFAULT 0,external_id TEXT COLLATE BINARY,unique_id INTEGER,content_index_transaction_id INTEGER,list_id_hash INTEGER,journaled INTEGER,flag_color INTEGER);
ALTER TABLE messages RENAME TO messages_old
messages_message_id_mailbox_index
CREATE INDEX %@ ON messages_new(message_id, mailbox);
messages_document_id_index
CREATE INDEX %@ ON messages_new(document_id);
messages_sender_index
CREATE INDEX %@ ON messages_new(sender);
messages_subject_index
CREATE INDEX %@ ON messages_new(subject);
messages_date_received_index
CREATE INDEX %@ ON messages_new(date_received);
messages_mailbox_date_received_index
CREATE INDEX %@ ON messages_new(mailbox, date_received);
messages_mailbox_conversation_id_date_received_index
CREATE INDEX %@ ON messages_new(mailbox, conversation_id, date_received);
messages_remote_mailbox_remote_id_index
CREATE INDEX %@ ON messages_new(remote_mailbox, remote_id);
messages_read_index
CREATE INDEX %@ ON messages_new(read);
messages_flagged_index
CREATE INDEX %@ ON messages_new(flagged);
messages_deleted_date_received_index
CREATE INDEX %@ ON messages_new(deleted, date_received);
messages_conversation_id_mailbox_read_date_received_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, read, date_received);
messages_conversation_id_mailbox_flagged_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, flagged);
messages_conversation_id_mailbox_deleted_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, deleted);
messages_conversation_id_mailbox_sender_date_received_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, sender, date_received);
messages_conversation_id_mailbox_flags_index
CREATE INDEX %@ ON messages_new(conversation_id, mailbox, flags);
messages_content_index_transaction_id_deleted_date_received_rowid_index
CREATE INDEX %@ ON messages_new(content_index_transaction_id, deleted, date_received DESC, ROWID);
messages_mailbox_remote_id_sequence_identifier_index
CREATE INDEX %@ ON messages_new(mailbox, remote_id, sequence_identifier);
messages_mailbox_content_index_transaction_id_flags_date_received_index
CREATE INDEX %@ ON messages_new(mailbox, content_index_transaction_id, flags, date_received ASC);
messages_list_id_hash_index
CREATE INDEX %@ ON messages_new(list_id_hash);
messages_date_last_viewed_index
CREATE INDEX %@ ON messages_new(date_last_viewed);
messages_summary_index
CREATE INDEX %@ ON messages_new(summary);
messages_mailbox_visible_date_received_rowid_index
CREATE INDEX %@ ON messages_new(mailbox, visible, date_received DESC, ROWID DESC);
messages_mailbox_deleted_journaled_sender_vip_flags_conversation_id_date_sent_message_id_date_received_rowid_index
CREATE INDEX %@ ON messages_new(mailbox, deleted, journaled, sender_vip, flags, conversation_id, date_sent, message_id, date_received DESC, ROWID DESC);
messages_mailbox_conversation_id_flag_color_date_received_journaled_index
CREATE INDEX %@ ON messages_new(mailbox, conversation_id, flag_color, date_received, journaled);
messages_journaled_conversation_id_date_received_index
CREATE INDEX %@ ON messages_new(journaled, conversation_id, date_received);
messages_message_id_deleted_journaled_read_mailbox_index
CREATE INDEX %@ ON messages_new(message_id, deleted, journaled, read, mailbox);
messages_sender_vip_deleted_journaled_read_message_id_index
CREATE INDEX %@ ON messages_new(sender_vip, deleted, journaled, read, message_id) WHERE (sender_vip = 1 AND journaled = 0 AND deleted = 0 AND read = 0);
messages_journaled_deleted_date_received_index
CREATE INDEX %@ ON messages_new(journaled, deleted, date_received) WHERE (journaled = 1 AND deleted = 0);
messages_deleted_mailbox_date_received_index
CREATE INDEX %@ ON messages_new(deleted, mailbox, date_received);
DROP INDEX IF EXISTS %@;
v32@?0@"NSString"8@"NSString"16^B24
sender_vip
visible
journaled
flag_color
sequence_identifier
content_index_transaction_id
INSERT INTO messages_new (%@) SELECT %@ FROM messages_old
messages_old
ALTER TABLE messages_new RENAME TO messages
CREATE TABLE IF NOT EXISTS threads (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,scope INTEGER NOT NULL REFERENCES thread_scopes(ROWID) ON DELETE CASCADE,conversation INTEGER NOT NULL REFERENCES conversations(conversation_id) ON DELETE CASCADE,newest_read_message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL,display_message INTEGER REFERENCES messages(ROWID) ON DELETE SET NULL,date INTEGER NOT NULL,read INTEGER NOT NULL DEFAULT 0,deleted INTEGER NOT NULL DEFAULT 0,flagged INTEGER NOT NULL DEFAULT 0,has_red_flag INTEGER NOT NULL DEFAULT 0,has_orange_flag INTEGER NOT NULL DEFAULT 0,has_yellow_flag INTEGER NOT NULL DEFAULT 0,has_green_flag INTEGER NOT NULL DEFAULT 0,has_blue_flag INTEGER NOT NULL DEFAULT 0,has_purple_flag INTEGER NOT NULL DEFAULT 0,has_gray_flag INTEGER NOT NULL DEFAULT 0,draft INTEGER NOT NULL DEFAULT 0,replied INTEGER NOT NULL DEFAULT 0,forwarded INTEGER NOT NULL DEFAULT 0,redirected INTEGER NOT NULL DEFAULT 0,junk_level_set_by_user INTEGER NOT NULL DEFAULT 0,junk_level INTEGER NOT NULL DEFAULT 0,has_unflagged INTEGER NOT NULL DEFAULT 0,has_attachments INTEGER NOT NULL DEFAULT 0,count INTEGER NOT NULL,journaled INTEGER NOT NULL DEFAULT 0,UNIQUE(scope, conversation) ON CONFLICT ABORT);
threads_scope_date_conversation_index
CREATE INDEX %@ ON threads(scope, date, conversation);
threads_journaled_scope_date_conversation_index
CREATE INDEX %@ ON threads(journaled, scope, date, conversation);
DROP TABLE IF EXISTS %@
DELETE FROM %@
DROP INDEX IF EXISTS thread_categories_type_active_user_override_thread_index;
interaction_log
thread_categories
read_later
categorization_sender_rules
categorization_conversation_rules
categorization_group_rules
category_active_types
times_viewed
read_later_date
INSERT INTO message_references (message, reference, is_originator) SELECT message_id, reference, IFNULL(is_originator, 0) FROM threads
DROP TABLE IF EXISTS threads
mailbox.outbox
==== Searchable Index State ====
  transaction:                    %lld
  active:                         %@ (rc=%lld)
  persistenceAvailable:           %@
  foreground:                     %@
  client state fetched:           %@
  coalesce timer fired:           %@
  scheduled processing:           %@
  needs refresh:                  %@
  scheduled refresh:              %@
  needs verification:             %@
  scheduled verification:         %@
  indexing batch size:            %lu
  data source batch size:         %lu
  maximum batch size:             %lu
  data source indexing permitted: %@
  has available indexing budget:  %@
  budgeted time remaining:        %.4fs
  budgeted item count remaining:  %ld
  pending items:                  %lu (%p)
  pre-processing items:           %lu (%p)
  pending removals:               %lu (%p)
  pending domain removals:        %lu (%p)
Indexed Empty Subjects:
v24@?0Q8@"EFFuture"16
com.apple.email.spotlightVerification
DisableSpotlightVerification
SpotlightState.json
v16@?0@"EDSearchableIndexClientState"8
CoreSpotlight failed to return our client state (old state: %@)
 (new)
v24@?0@"NSData"8@"NSError"16
state
resumeCount
pending
preprocessingItemCount
persistenceAvailable
suspending
already suspended
still resumed
suspend
resuming
already resumed
still suspended
resume
B16@?0@"<EDIndexableItem>"8
com.apple.email.searchableIndex.dataSourceWorkBlock
@"EDSearchableIndexItem"16@?0@"NSString"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Indexing/EDSearchableIndex.m
completion != nil
Q16@?0Q8
com.apple.email.searchableIndex.indexingBatch
Start Indexing Batch
preprocessing
v24@?0@"EDSearchableIndexClientState"8@"EDSearchableIndexUpdates"16
@"<EFFuture>"16@?0@8
@"<EFFuture>"16@?0@"NSError"8
countOfItemsIndexed
elapsedTime
itemsPerSecond
Finished Indexing Batch
@"CSSearchableItem"16@?0@"NSNull"8
@"EFFuture"16@?0@"<EDIndexableItem>"8
diagnose:com.apple.mobilemail
@"NSNumber"16@?0@"NSDictionary"8
@"NSString"16@?0@"<EDIndexableItem>"8
B32@?0@"<EDIndexableItem>"8Q16^B24
q24@?0@8@16
Attempting to add the exact same EDIndexableItem to the index.
@16@?0@"CSSearchableItem"8
v16@?0@"<EMSearchableIndexQueryBuilder>"8
@"NSArray"8@?0
Item did not successfully preprocess after invoking searchableItem
-[EDSearchableIndex indexMessages:includeBody:indexingType:]
-[EDSearchableIndex markMessagesAsPrinted:]
MonitoredActivityReasonCompacting
MonitoredActivityReasonMoving
MonitoredActivityReasonArchiving
MonitoredActivityReasonDeleting
MonitoredActivityReasonJunking
signpostID
signpostLog
dataSourceIndexingPermitted
TB,N,GisDataSourceIndexingPermitted
pluggedIn
TB,R,N,GisPluggedIn
indexName
pendingIndexItemsCount
userHandle
transaction
Tq,R,G_transaction
csIndex
T@"CSSearchableIndex",&,N,V_csIndex
copyDiagnosticInformation
foreground
TB,N,G_isForeground,S_setForeground:
skipIndexExclusionCheck
TB,N,V_skipIndexExclusionCheck
clientStateFetched
TB,N,V_clientStateFetched
searchableIndexBundleID
T@"NSString",C,N,V_searchableIndexBundleID
coalescingDelaySeconds
Td,N,V_coalescingDelaySeconds
Tq,R
active
TB,R,GisActive
dataSource
T@"<EDSearchableIndexDataSource>",W,N,V_dataSource
reasonProvider
T@"<EDSearchableIndexReasonProvider>",W,N,V_reasonProvider
schedulableDelegate
T@"<EDSearchableIndexSchedulableDelegate>",W,N,V_schedulableDelegate
performingBlockAffectingDataSourceAndIndex
TB,R,GisPerformingBlockAffectingDataSourceAndIndex
TB,GisPersistenceAvailable,V_persistenceAvailable
powerObservable
T@"EFObservable",R,N
shouldCancelSearchQuery
canIndexAttachments
TB,N,GisDataSourceIndexingPermitted,V_dataSourceIndexingPermitted
<%@: %p> %@ %@
criterion
T@"<EDSearchableCriterion>",&,N,V_criterion
mailboxIDs
T@"NSIndexSet",C,N,V_mailboxIDs
v32@?0@"<NSCopying>"8@"NSSet"16^B24
B32@?0@"NSSet"8@"NSSet"16@"NSSet"24
identifiers
purgedIdentifiers
deletedIdentifiers
purgeReasons
T@"NSSet",C,N,V_purgeReasons
exclusionReasons
T@"NSSet",C,N,V_exclusionReasons
attachment:
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Indexing/Spotlight/EDSearchableIndexAttachmentItem.m
Attempting to set unexpected indexing type on EDSearchableIndexAttachmentItem
domainIdentifier
indexingType
Tq,N
dateReceived
T@"NSDate",R,N
estimatedSizeInBytes
underlyingData
T@"NSData",&,N
hasCompleteData
alwaysMarkAsIndexed
shouldExcludeFromIndex
requiresPreprocessing
attributeSetForFilePromise
T@"EFPromise",&,N,V_attributeSetForFilePromise
attachmentPersistentID
T@"NSString",C,N,V_attachmentPersistentID
T@"NSString",C,N,V_messagePersistentID
metadatum
T@"EDSearchableIndexAttachmentItemMetadatum",&,N,V_metadatum
TB,N,V_requiresPreprocessing
searchableItemProcessingDelay
Td,N,V_searchableItemProcessingDelay
T@"NSString",R,C,N,V_identifier
Tq,N,V_indexingType
T@"NSData",&,N,V_underlyingData
accountIdentifier
mailboxIdentifiers
T@"NSArray",C,N
recipientAddresses
T@"NSDate",&,N
dateSent
T@"NSString",C,N,V_domainIdentifier
T@"NSString",C,N,V_accountIdentifier
T@"NSArray",C,N,V_mailboxIdentifiers
T@"NSString",C,N,V_senderAddress
T@"NSArray",C,N,V_recipientAddresses
T@"NSDate",&,N,V_dateReceived
T@"NSDate",&,N,V_dateSent
attachmentFileURL
T@"NSURL",R,N,V_attachmentFileURL
canReadAttachmentFile
IndexingBudgetPeriodInSeconds
IndexingBudgetInSeconds
IndexingBudgetNumberOfItemsToIndexOnResume
Budget Period:%lfs (%.1fh) Time:%fs (min:%.1fm) numberOfItemsToIndexOnResume:%ld
ef_publicDescription
enableActivityBasedScheduling
TB,N,V_enableActivityBasedScheduling
autoStartMaintenanceIndexing
TB,N,V_autoStartMaintenanceIndexing
time
Td,R,N,V_time
periodDuration
Td,R,N,V_periodDuration
numberOfItemsToIndexOnResume
Tq,R,N,V_numberOfItemsToIndexOnResume
com_apple_mail_transaction
yyyy-MM-dd HH:mm:ssZ
<%@: %p> version=%@ date=%@ transaction=%lld
build
Tq,N,V_transaction
transactionValue
T@"NSNumber",R,N
transactionDate
T@"NSDate",&,N,V_transactionDate
systemBuildVersion
T@"NSString",C,N,V_systemBuildVersion
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Indexing/EDSearchableIndexItem.m
Message does not have a valid identifier. Please consider using initWithIdentifier:message:bodyData: if you need something special.
-[EDSearchableIndexItem addAttachmentAttributesToAttributeSet:]
-[EDSearchableIndexItem fetchIndexableAttachments]
v24@?0@"NSArray"8@"NSArray"16
mailboxtype
<null>
hasCompleteContent
hasHeaders
EDSearchableIndexItem has invalid indexingType = EDIndexableItemIndexingTypeAttachment
T@"<EDIndexableMessage>",R,N,V_message
bodyData
T@"NSData",&,N,V_bodyData
fetchBody
TB,R,N,V_fetchBody
TB,N,V_hasCompleteData
@"CSPerson"16@?0@"NSString"8
-[EDSearchableIndexManager index]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Indexing/EDSearchableIndexManager.m
-[EDSearchableIndexManager persistence]
-[EDSearchableIndexManager scheduler]
Done!
T@"EDSearchableIndexPersistence",R,N
T@"EDSearchableIndexScheduler",R,N
index
T@"EDSearchableIndex",R,N
searchable_messages
searchable_message_tombstones
searchable_attachments
attachment
attachmentID
T@"NSString",C,N,V_attachmentID
transaction_id
message_body_indexed
reindex_type
-[EDSearchableIndexPersistence messagesWhere:sortedBy:limit:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Indexing/EDSearchableIndexPersistence.m
-[EDSearchableIndexPersistence searchableIndexItemsFromMessages:type:]
-[EDSearchableIndexPersistence attachmentItemMetadataForAttachmentID:messagePersistentID:name:result:]
-[EDSearchableIndexPersistence verificationDataSamplesFromMessageIDTransactionIDDictionary:]
-[EDSearchableIndexPersistence messagesRowIDWhereSubClause]
Q8@?0
B16@?0@"NSString"8
v32@?0@"NSNumber"8Q16^B24
((%@ NOT IN (SELECT message_id FROM searchable_messages) AND messages.ROWID NOT IN (%@)) OR (%@ IN (SELECT message_id FROM searchable_messages WHERE searchable_messages.transaction_id = %ld AND message_id NOT IN (%@))))
date_received DESC
(%@ IN (SELECT message_id FROM searchable_messages WHERE searchable_messages.reindex_type = %lld AND message_id NOT IN (%@)))
SELECT transaction_id, reindex_type FROM searchable_messages WHERE message_id = %@
Searching for reindex type
UPDATE OR IGNORE searchable_messages SET transaction_id = %lld WHERE message_id IN (%@)
UPDATE OR IGNORE searchable_messages SET reindex_type = %lld WHERE transaction_id != %lld AND message_id IN (%@)
Does not support re-indexing of attachment types. Will need to be implemented if needed.
Assigning the re-indexing type for a set of identifiers
SELECT attachment_id FROM searchable_attachments WHERE message_id IN (%@)
searching for removed attachment identifiers
Purging %@
v16@?0@"NSString"8
DELETE FROM %@ WHERE transaction_id > %llu
Invalidating %@
UPDATE searchable_message_tombstones SET transaction_id = NULL WHERE transaction_id > %lld
Invalidating searchable_message_tombstones
Adding to searchable_messages index
INSERT OR REPLACE INTO searchable_messages (message_id, message, transaction_id, reindex_type, message_body_indexed) VALUES (?, ?, %lld, %ld, ?)
@"NSArray"24@?0@"NSNumber"8@"NSNumber"16
INSERT OR REPLACE INTO searchable_messages (message_id, message, transaction_id, reindex_type, message_body_indexed) VALUES (?, ?, %lld, %ld, COALESCE((SELECT message_body_indexed FROM searchable_messages WHERE message_id = ?), ?))
INSERT OR REPLACE INTO searchable_message_tombstones (type, identifier) VALUES (%lld, ?)
Adding to searchable_message_tombstones index
DELETE FROM searchable_message_tombstones WHERE type = %lld AND identifier IN (%@)
UPDATE searchable_message_tombstones SET transaction_id = %lld WHERE type = %lld AND identifier IN (%@)
Updating or deleting searchable_message_tombstones
DELETE FROM searchable_message_tombstones WHERE transaction_id < %lld
Purging searchable_message_tombstones
SELECT identifier FROM searchable_message_tombstones WHERE transaction_id IS NULL AND type = %lld
searching for tombstone identifiers
DELETE FROM searchable_messages WHERE message_id IN (%@)
Removing items from searchable_messages
DELETE FROM searchable_attachments WHERE attachment_id IN (%@)
Removing items from searchable_attachments
SELECT message_id FROM searchable_messages WHERE message is NULL
searching for removed identifiers
SELECT message_id, transaction_id FROM searchable_messages WHERE reindex_type = 0 AND message IS NOT NULL GROUP BY transaction_id ORDER BY RANDOM() LIMIT 64
Searching for random sample of messages to verify for spotlight integrity
SELECT ROWID, message, attachment_id, name FROM attachments WHERE attachments.ROWID NOT IN (SELECT attachment_id FROM searchable_attachments)
Searching for attachments to index
v20@?0@"EDSearchableIndexAttachmentItemMetadatum"8B16
DELETE FROM attachments WHERE message IN (%@)
Removing unexpected messages from attachments table
SELECT attachment_id FROM searchable_attachments WHERE attachment is NULL
INSERT OR REPLACE INTO searchable_attachments (attachment_id, attachment, message_id, transaction_id) VALUES (?, ?, ?, %lld)
Adding to searchable_attachments
T@"<EDSearchableIndexHookResponder>",R,W,N,V_hookResponder
messagesRowIDWhereSubClause
%@ = '%@'
fetchAttributes
com.apple.email.searchableIndex.scheduler
activityType
deferred
budgeted
maintenance
.indexingStateQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Indexing/EDSearchableIndexScheduler.m
Attempting to find a criteria builder block indexing for an unsupported activity type: %@
Enabled indexing.
Stopped indexing.
v32@?0@"NSString"8@"NSObject<OS_xpc_object>"16^B24
Indexing budget exhausted.
budgetedTimeRemaining
budgetedItemCountRemaining
maintenanceIndexingTime
extraIndexingTime
activityTypes
T@"NSSet",R,N
deferrableActivityTypes
budgetTimeUserDefaultsKey
T@"NSString",C,N,V_budgetTimeUserDefaultsKey
indexingStateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_indexingStateQueue
activities
T@"NSMutableDictionary",&,N,V_activities
indexingEnabledForActivityTypes
T@"NSMutableSet",&,N,V_indexingEnabledForActivityTypes
TB,GisDataSourceIndexingPermitted,V_dataSourceIndexingPermitted
Tq,V_budgetedItemCountRemaining
Td,V_budgetedTimeRemaining
noActivityIndexingTime
Td,V_noActivityIndexingTime
Td,V_maintenanceIndexingTime
scheduling
TB,N,GisScheduling,V_scheduling
schedulable
T@"<EDSearchableIndexSchedulable>",R,W,N,V_schedulable
budgetConfiguration
T@"EDSearchableIndexBudgetConfiguration",R,N,V_budgetConfiguration
@"NSString"16@?0@"EDSearchableIndexVerificationData"8
<%@: %p> %lu added items, %lu removed items, %lu removed domains
itemsRequiringIndexing
T@"NSArray",C,N,V_itemsRequiringIndexing
removedIdentifiers
T@"NSArray",C,N,V_removedIdentifiers
removedDomainIdentifiers
T@"NSArray",C,N,V_removedDomainIdentifiers
hasUpdates
kEDSearchableIndexVerifierErrorDomain
v32@?0@"NSNumber"8@"EDSearchableIndexVerificationData"16^B24
EDSearchableIndexPostFakeCorruptSearchableIndexErrors
FAKED: %@
v32@?0@"NSNumber"8@"NSString"16^B24
row:%@ cid:%@
Searchable Index Verification failed
Searchable Index verification found missing rowids: %@
indexVerificationActivity
T@"NSObject<OS_os_activity>",&,N,V_indexVerificationActivity
T@"<EDSearchableIndexVerifierDataSource>",W,N,V_dataSource
T@"NSString",C,N,V_subject
toEmailAddresses
T@"NSArray",C,N,V_toEmailAddresses
T@"NSString",C,N,V_deleted
contentIndexTransactionId
T@"NSNumber",&,N,V_contentIndexTransactionId
T@"NSNumber",&,N,V_flags
indexedAsEmptySubject
T@"NSNumber",&,N,V_indexedAsEmptySubject
userInfo
T@"NSDictionary",C,N,V_userInfo
com.apple.private.email
listener
T@"NSXPCListener",&,N,V_listener
connectedClients
T@"NSMutableArray",&,N,V_connectedClients
T@"EDDaemonInterfaceFactory",&,N,V_daemonInterfaceFactory
serverXPCEndpoint
T@"NSXPCListenerEndpoint",R,N
server_messages
server_labels
server_message
-[EDServerMessagePersistenceFactory init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Syncing/ServerMessages/EDServerMessagePersistence.m
Couldn't get mailboxID for URL %@
EDServerMessagePersistenceFactory couldn't map mailboxURL
mailboxID != EMDatabaseIDUndefined
-[EDServerMessagePersistence init]
SELECT count() FROM server_messages WHERE (mailbox = %lld)
Executing count query
SELECT count() FROM server_messages WHERE (mailbox = %lld) AND (read = 0)
Executing unread count query
SELECT count() FROM server_messages WHERE (mailbox = %lld) AND (deleted = 0)
SELECT MAX(remote_id) FROM server_messages WHERE (mailbox = %lld)
Executing max uid query
SELECT MIN(remote_id) FROM server_messages WHERE (mailbox = %lld)
Executing min uid query
(remote_id IN (%@))
 LIMIT %lu
(remote_id >= %lu) AND (remote_id < %lu)
ROWID, message, mailbox, read, deleted, replied, flagged, draft, forwarded, redirected, junk_level_set_by_user, junk_level, flag_color, remote_id
 DESC
SELECT %@ FROM server_messages WHERE (mailbox = %lld) AND %@ ORDER BY remote_id%@%@
v16@?0@"<ECMessageFlagsBuilder>"8
SELECT label FROM server_labels WHERE server_message = ?
Fetching server labels
INSERT INTO server_messages (message, mailbox, read, deleted, replied, flagged, draft, forwarded, redirected, junk_level_set_by_user, junk_level, flag_color, remote_id) VALUES (:message, :mailbox, :read, :deleted, :replied, :flagged, :draft, :forwarded, :redirected, :junk_level_set_by_user, :junk_level, :flag_color, :remote_id)
:message
:remote_id
:read
:deleted
:replied
:flagged
:draft
:forwarded
:redirected
:junk_level_set_by_user
:junk_level
:flag_color
Adding server message
UPDATE server_messages SET message = %lld WHERE (mailbox = %lld) AND (remote_id = %@)
updating server message
DELETE FROM server_messages WHERE (mailbox = %lld) AND (remote_id in (%@))
removing server messages
DELETE FROM server_messages WHERE mailbox = %llu
removing all server messages
read = %d
deleted = %d
replied = %d
flagged = %d
draft = %d
forwarded = %d
redirected = %d
junk_level_set_by_user = %d
junk_level = %d
flag_color = %d
UPDATE server_messages SET %@ WHERE (mailbox = %lld) AND (remote_id in (%@))
Setting flags
SELECT ROWID FROM server_messages WHERE remote_id = ? AND mailbox = ? LIMIT 1
Getting server message ID
INSERT OR IGNORE INTO server_labels (server_message, label) VALUES (?, ?)
Adding server label
DELETE FROM server_labels WHERE server_message = ? AND label = ?
Removing server label
ef_quotedSQLEscapedString
Tq,R,N,V_mailboxID
useNumericSearch
TB,R,N,V_useNumericSearch
messageCount
unreadMessageCount
undeletedMessageCount
maximumIMAPUID
TI,R,N
minimumIMAPUID
supportsLabels
TB,R,N,V_supportsLabels
v40@?0@"NSString"8{_NSRange=QQ}16^B32
timerSource
T@"NSObject<OS_dispatch_source>",&,N,V_timerSource
executionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executionQueue
backOffInterval
Td,N,V_backOffInterval
isReachable
TB,N,V_isReachable
pendingWaitingForNetwork
TB,N,V_pendingWaitingForNetwork
task
T@?,C,N,V_task
canceledCallback
T@?,C,N,V_canceledCallback
work
T@?,C,N,V_work
initialDelay
Td,N,V_initialDelay
maxBackOffInterval
Td,N,V_maxBackOffInterval
backoffMultiplier
Td,N,V_backoffMultiplier
observeForNetworkReachability
TB,N,V_observeForNetworkReachability
has_red_flag
has_orange_flag
has_yellow_flag
has_green_flag
has_blue_flag
has_purple_flag
has_gray_flag
@"EDPersistenceForeignKeyPlaceholder"40@?0@"EFSQLTableSchema"8@"NSString"16@"NSString"24Q32
@"EDPersistenceForeignKeyPlaceholder"32@?0@"EFSQLTableSchema"8@"NSString"16@"NSString"24
@"EDPersistenceAssociationPlaceholder"32@?0@"EFSQLTableSchema"8@"NSString"16@"NSString"24
com.apple.EmailDaemon.EDThreadPersistence.reconciliationCleanupScheduler
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Message List/EDThreadPersistence.m
Pre-computed thread scope should have exactly one mailbox or mailbox type
@"NSDictionary"16@?0^@8
v32@?0@"EMThreadScope"8@"_EDThreadScopeInfo"16^B24
@"<EFFuture>"16@?0@"NSDictionary"8
v24@?0@"EMThreadObjectID"8^B16
@"NSNumber"16@?0@"EMThreadObjectID"8
@"NSNumber"16@?0@"_EDWrappedMessage"8
Mailbox scope should have exactly one type
Mailbox scope should have exactly one mailbox
v32@?0@"EMThreadScope"8@"NSNumber"16^B24
Thread persistence doesn't support exclusion-based mailbox scopes
journaled 
v32@?0q8@"EMThreadObjectID"16@"NSArray"24
Unable to find thread database ID for update
v32@?0@"NSNumber"8@"NSDate"16^B24
Reconciling threads
v32@?0@"EMThreadScope"8@"NSArray"16^B24
v16@?0@"_EDWrappedMessage"8
Unable to find display message
v32@?0@"_EDWrappedMessage"8Q16^B24
-fake-message-id
Mailbox scope for pre-computed threads should never be for exclusion.
No mailbox database ID for migrating thread scope
Attempting to finish migration for a thread scope which doesn't exist
@"_EDWrappedMessage"16@?0@"EMMessage"8
v32@?0@"EMThread"8@"NSArray"16^B24
mailboxTypesToPrecompute
precomputedThreadScopesFuture
T@"EFFuture",&,V_precomputedThreadScopesFuture
reconciliationCleanupScheduler
T@"<EFScheduler>",&,N,V_reconciliationCleanupScheduler
T@"EMMessage",R,N,V_message
databaseID
Tq,R,N,V_databaseID
%lld%@
 needs update
needsUpdate
TB,R,N,V_needsUpdate
-[EDThreadQueryHandler threadForObjectID:error:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/Message List/EDThreadQueryHandler.m
v32@?0@"EMThreadObjectID"8@"EMMessageListItemChange"16^B24
mailboxScope
T@"EMMailboxScope",&,N,V_mailboxScope
%@-%@
com.apple.mail.NNMKCrashDetectionService.%@
serviceName
T@"NSString",&,N,V_serviceName
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
com.apple.mobilemail.UbiquitousConversationManager
B32@?0@"NSString"8@16^B24
v32@?0@8@"NSDictionary"16^B24
T@"<EDUbiquitousConversationManagerDelegate>",W,N,V_delegate
cloudStorage
T@"<EDConversationRemoteStorage>",&,N,V_cloudStorage
queue
conversationIDsBySyncKey
T@"NSMutableDictionary",&,N,V_conversationIDsBySyncKey
unmatchedKeys
T@"NSMutableSet",&,N,V_unmatchedKeys
TB,N,V_initialized
com.apple.mail.vipsenders
VIP_
VIPs.plist
Name
EmailAddresses
com.apple.email.edvipmanager
v32@?0@"NSString"8@"EMVIP"16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Email_Sim/Email-3554.16/EmailDaemon/VIP/EDVIPManager.m
Modification of VIPs only supported when syncing is enabled
B32@?0@"NSString"8@"EMVIP"16^B24
v32@?0@"NSString"8@"NSDictionary"16^B24
B32@?0@"NSString"8Q16^B24
hasVIPs
allVIPs
T@"NSSet",R,C,N
allVIPEmailAddresses
T@"EAEmailAddressSet",R,C,N
keyValueStore
T@"NSUbiquitousKeyValueStore",R,N,V_keyValueStore
operationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_operationQueue
plistURL
T@"NSURL",R,N,V_plistURL
Returning %lu accounts
Registered for Account Changes
Removing Account Observer %@ .
Handling accounts added: %@
Handling accounts removed: %@
Handling accounts changed: %@
Cache hit for %@
Cache miss for %@
%{public}@: deallocating client state
%{public}@: Setting visible mailboxes to %{public}@
%{public}@: Client Requested Boost
%{public}@: Client Cancelled Boost
Failed to locate momd bundle in application. %{public}@
Failed to load persistent stores. %{public}@
Successfully imported cloudKit content.
Request import failed
Successfully exported cloudKit content.
Request export failed
Import request failed to execute. %{public}@
Export request failed to execute. %{public}@
Failed to import/export cloudKit content. Rescheduling... %{public}@
Failed to import/export cloudKit content. It won't retry %{public}@
Library purgeable upgrader has been scheduled.
Found pending data replication transaction. Retrying replication from cloudKit to KVS
Finished replicating data from cloudKit to KVS
Replicating %lu changes from %{public}@ to %{public}@
Change %{public}@ replicated from %{public}@ to %{public}@, because %{public}@ entry is more recent.
Ignoring change with Key %{public}@ from %{public}@ to %{public}@, because %{public}@ entry is more recent.
Finished replicating changes from %{public}@ to %{public}@
CloudKitStorage finished initializing. Starting migrating content from KVS to CloudKit
Finished migrating content from KVS to CloudKit
Multiple conversations found for message_ids %@
Attempting to update association table for conversation that does not exist %@
Initializing Conversation CloudKit Storage
Found pending export transaction. Retrying request export
Found pending import transaction. Retrying request import
First request import arrived. Success: %lu
APS Push received - %{public}@
Failed to save Control - Error: %{public}@
Unable to archive history token - Error: %{public}@
Unable to unarchive history token - Error: %{public}@
Deleting duplicated object. %{public}@, %{public}@
Failed to save _handleDuplicationsForConversationUUIDs - Error: %{public}@
Failed to fetching EDConversationInfo with ID: %{public}@ - Error: %{public}@
Failed to save EDConversationInfo %{public}@ - Error: %{public}@
Failed to delete EDConversationInfo %{public}@ - Error: %{public}@
Failed fetching EDConversationInfo to remove. ObjectId: %{public}@ - Error: %{public}@
Failed to fetching allConversationInfos- Error: %{public}@
Failed to fetching cloudKitControl - Error: %{public}@
CoreData will reset sync couldKit data
CoreData did reset sync couldKit data
Started handling core data changes
Ignoring insert because object does not exist.
EDConversationInfo added. %{public}@
Ignoring update because objecvt does not exist.
EDConversationInfo updated/inserted. %{public}@
EDConversationInfo deleted. %{public}@
Deletion operation does not have ConversationUUID.
Finished handling core data changes
persistentHistoryResult.result is not an array. Ignoring it %{public}@
Unable to fetch change history (%@.)
Failed fetching EDConversationInfo. ObjectId: %{public}@ - Error: %{public}@
Initializing Conversation KVS storage
Synchronizing with KVS store %@: %@
Received external KVS change event: %@, changed keys=%@
iCloud Key Value Store Over-Quota
%@: %@
Over quota: pruning database
Unknown change reason: %@
Predicting for message persistentID=%@, subject="%@"
Aggregate: %@
## Ordered Mode:
Raw counts for %@: %@
Found %.0lf hit for **%@** in %@
Ignoring because it is the message's current mailbox.
Ignoring because count (%.0f) is under threshold (%.0f).
## Summed Weighted Mode:
Raw counts for %@:
Found field=%@ in mailbox=%@: weightedHits=%.1lf
## Weighted Mode:
Found %.0lf (weighted=%.1lf) hits for **%@** in %@
Ignoring because weighted (%.0f) is under threshold (%.0f).
Winner: %@ (weighted=%.1lf)
Not a legal sender address: %@
Ignoring mailboxes: %@
Not a legal recipient address: %@
Found %lu messages
%{public}@
Finished initial load
%{public}@
Added %lu messages
%{public}@
Flags changed for %lu messages
%{public}@
Key paths %{public}@ changed for %lu messages
%{public}@
Changed objectID from %{public}@ for message in thread: %{public}@
%{public}@
Deleted %lu messages
%{public}@
ConversationIDs changed from %lld for %lu messages
%{public}@
Moving objectIDs: %{public}@ before: %{public}@
%{public}@
Adding objectIDs: %{public}@ before: %{public}@
%{public}@
Moving objectIDs to end of list: %{public}@
%{public}@
Adding objectIDs to end of list: %{public}@
%{public}@
Changing objectIDs: %{public}@
%{public}@
Deleting objectIDs: %{public}@
%{public}@
No accounts opted into logging
No @apple.com address is configured, can't create interaction log
Could not open '%{public}@': %d: %@
Failed to encode JSON: %{public}@
Failed to open log file: %@
Expecting non-nil `references`, this means the message was not directly fetched or composed
Found existing salt
Existing salt has wrong access class. Re-creating salt
Error finding existing salt: %d
Will create new salt
Error creating new salt: %d
Will delete salt
Error deleting salt: %d
Will migrate salt
errSecInteractionNotAllowed from keychain. Is the device still locked?
Could not find destination message for database ID %lld
IMAPLibraryInterface: Creating flag change action for %lu messages in mailbox %{public}llu
IMAPLibraryInterface: Got foreign key constraint error adding action for mailbox %{public}llu
IMAPLibraryInterface: Creating flag change all action in mailbox %{public}llu
Created %{public}@ action %lld for %lu messages in mailbox %@
Created %{public}@ action %lld for undownloaded message in mailbox %@ (success = %d)
IMAPLibraryInterface: Creating label change action for %lu messages in mailbox %{public}llu
Adding action message for transfer without destination message ID - action ID: %lld, destination message: %{public}@, source message: %{public}@
%{public}@
Persisting results for action %@, completed %lu, failed %lu
Action %@ had %lu failed items
Action %@ finished downloading items
Action %@ finished copying items
Finished action %@
Updating action %@ to %@ (%lu)
Action %llu finished
Get All Mailboxes
Number of Mailboxes %ld count
Registering For Mailbox Observation With Observer %{public}@
Unregistering For Mailbox Observation With Observer %{public}@
Perform Change Action:%{public}@
Catalog MADownLoadResult: %ld
Query MAQueryResult: %ld
No asset found in results
Asset MADownLoadResult: %ld
Updating from asset with contentVersion=%{public}@, compatibilityVersion=%{public}@
No file URL found in asset
Moving %lu new messages to %@
Copying %lu new messages to %@
Deleting all message from %@
Moving all messages from %@ to %@
Adding %lu new messages to %@
Deleting %lu messages
Adding %lu new messages from server sync to %@
<%p> Underflow! Scheduling recalculation.
%{public}@
%{public}@
<%p> %{public}@ (%lu mailboxes being synced): %lld = %lld + %lld + (%lld - %lld)
%{public}@
%{public}@
<%p> %{public}@: %lld = %lld + %lld + (%lld - %lld)
%{public}@
%{public}@
<%p> Total count is negative.
%{public}@
%{public}@
<%p> %{public}@ (%lu unacknowledged callbacks): %lld = %lld + %lld + (%lld - %lld)
%{public}@
%{public}@
<%p> Started syncing mailbox %{public}@
%{public}@
%{public}@
<%p> Changed messages from %lld matches to %lld matches
%{public}@
%{public}@
<%p> Added %lld messages
%{public}@
%{public}@
<%p> Deleted %lld messages
%{public}@
%{public}@
<%p> Adding mailbox %{public}@
%{public}@
%{public}@
received error while querying for messages: %{public}@
Cannot currently handle a NOT predicate with more than one sub
Got unexpected predicate: %{public}@
Exception occured: %{public}@
Symbols:
%{public}@
Found objectIDs: %{public}@
%{public}@
Previous message is message itself -- message: %{public}@
previous message: %{public}@
query: %{public}@
Changing flags for objectIDs: %{public}@
%{public}@
Changing objectIDs from %{public}@ to %{public}@
%{public}@
Changing key paths: %{public}@ for objectIDs: %{public}@
%{public}@
Changing conversationID for objectIDs: %{public}@
%{public}@
received error %{public}@ while performing initial query: %@
adding %lu filtered messages: %@
reconciled %lu filtered messages: %@
deleting %lu filtered messages: %@
Performing Query %@
found %ld messages matching query %@
received error while querying for messages: %@, %{public}@
Starting message query: %{public}@, observation identifier: %{public}@
Starting pre-computed thread query: %{public}@, observation identifier: %{public}@
Starting migrating thread query: %{public}@, observation identifier: %{public}@
Starting in-memory thread query: %{public}@, observation identifier: %{public}@
Stopping query with observation identifier: %{public}@
Returning results: %{public}@, missed objects: %{public}@
Starting migration for %lu threads
%{public}@
Migrating batch of %lu threads
%{public}@
Finishing migration
%{public}@
Stopping migration due to wrong state
%{public}@
Failed migration -- unable to add threads
%{public}@
Finalized migration for %lu threads
%{public}@
Finished migration
%{public}@
Resuming migration
%{public}@
Added %lu threads to migrate
%{public}@
Got more object IDs after migration finished: %{public}@
%{public}@
Resetting %{public}@ after change
%{public}@
Got changed object IDs after migration finished: %{public}@
%{public}@
Deleting %{public}@
%{public}@
Deleting %lu threads from migration 
%{public}@
Got deleted object IDs after migration finished: %{public}@
%{public}@
Failed migration -- unable to delete threads
%{public}@
Begin Saving Draft %@
End Saving Draft %@
EMAIL DELIVERY
Deleting Draft %@
Deleting %lu messages for documentID %@ in mailboxID %@
Begin Delivery Message : %p
End Delivery Message : %p
Attached Protected Index on connection %{public}@
Detached Protected Index on connection %{public}@
Attached journal on connection %{public}@
Detached journal on connection %{public}@
wrong number of arguments (%d) to and64
Checking out %@
Checking in %@
Checking for existing journals
Created journal directory
Unable to create journal directory: %{public}@
Found journal numbers: %{public}@
Unable to iterate journal directory: %{public}@
Returning current journal %@
Unsetting current journal %@ - should delete: %{public}@
Oldest journal %lu does not already exist. Creating...
Getting oldest journal %lu
Merged journal %lu - should delete: %{public}@
Unable to delete journal %lu: %{public}@
Unable to delete wal for journal %lu: %{public}@
Unable to delete shm for journal %lu: %{public}@
Deleted journal %lu
Reached quota, writing truncation marker
Checksum failure at index %zu, bailing to read
Returning batch of %lu results
%{public}@
Canceled initial results
%{public}@
Returning initial load did finish
%{public}@
Adding add for objectID: %{public}@ -> %{public}@
%{public}@
Adding add to new position change for objectID: %{public}@ -> %{public}@
%{public}@
Ignoring change for objectID: %{public}@
%{public}@
Adding change to existing change for objectID: %{public}@
%{public}@
%{public}@
Adding change for objectID: %{public}@
%{public}@
%{public}@
Adding move for objectID: %{public}@ -> %{public}@
%{public}@
Adding move to new position change for objectID: %{public}@ -> %{public}@
%{public}@
Ignoring Conversation Notification Level change for objectID: %{public}@
%{public}@
Flushing changes after conversation flags change change: %{public}@
%{public}@
Adding objectID to delete: %{public}@
%{public}@
Flushing changes: %{public}@
%{public}@
Flushing position changes: %{public}@
%{public}@
Ignoring messageID change for objectID: %{public}@
%{public}@
Flushing changes after messageID change: %{public}@
%{public}@
Ignoring summary change for objectID: %{public}@
%{public}@
Flushing changes after summary change: %{public}@
%{public}@
Updating sqlite_sequence %{public}@ = %lld
Setting sqlite_sequence %{public}@ = %lld
Skipping on-demand reconciliation from the main thread
Triggering on-demand reconciliation
Completed on-demand reconciliation with result: %lu
Skipping on-demand reconciliation because we're already reconciling
Triggering reconciliation
Completed reconciliation with result: %lu
Reconciling journal %lu
Failed to attach journal %lu for reconciliation
Temporarily failed to merge data for journal %lu
Skipped merging data due to malformed schema for journal %lu
Permanently failed to merge data for journal %lu
Merging table %{public}@ with unique columns: %{public}@
  referencing columns: %{public}@
Replacing %{public}@ with %{public}@
Failed to merge table %{public}@ for %{public}@
Deleting from journal: %{public}@
Merging table %{public}@ without unique columns
Starting clean up
Deleted %lu rows from %{public}@
app requested early recovery path
Failed to create new messages table: %{public}@
Failed to rename messages_old: %{public}@
Failed to drop index: %{public}@ %{public}@
Failed to create index: %{public}@ %{public}@
Failed to drop copy messages data: %{public}@
Failed to rename new messages: %{public}@
Failed to create new threads table: %{public}@
Failed to drop table %{public}@: %{public}@
Failed to truncate table %{public}@: %{public}@
Failed to drop thread_categories_type_active_user_override_thread_index: %{public}@
verifying representative sample of items in the datasource are actually indexed
datasource couldn't verify
Spotlight found everything from the sample
Spotlight index is corrupt, items may be missing or duplicated
Requesting last client state from CSSearchableIndex
last client state: %@%@
failed to retrieve last client state: %{public}@
-[EDSearchableIndex resume]: %@ (%lld)
Received dataSourceUpdates: %{public}@ throttledDataSourceBatchSize:%lu batchSize:%lu
Data source returned %lu out of %lu requested items to index.
EDSearchableIndexDataSourceUpdates
Changing indexingType for identifier: %{public}@ from %ld to %ld
EDSearchableIndexDataSourcePrepare
starting coalescing timer (t=%fs)
stopping coalescing timer
coalescing timer fired
suspending indexing queue
resuming indexing queue
BatchStartedWithPendingItemCount=%{signpost.description:attribute,public}@
EDSearchableIndexBatchProcessing
BatchAssignedDomnainRemovalCount=%{signpost.description:attribute,public}llu
BatchFinishedWithItemIndexedCount=%{signpost.description:attribute,public}@
scheduling processing of pending items
BatchBeginCoreSpotlightBatch
EDSearchableIndexCSProcessing
BatchEndCoreSpotlightBatch
Spotlight failed to index %ld items (transaction=%lld) failed with error: %{public}@
batch of %lu items took %.4gs to index
consuming %lu items out of a potential %lu totalSizeForBatch %lu/%lu
generating searchable items failed: %{public}@
indexing %lu / %lu items, throttled batch size %lu
removing indexed items for domains {%@}
removing indexed items with identifiers {%@}
Sending spotlight diagnostic request %@
Spotlight diagnostic request failed: %{public}@
spotlight requests to reindex items with identifiers %@
spotlight requests to reindex all items
Reindexing All Items With Options: %lu
failed to delete all items from domain: %{public}@
Invoking acknowledgement handler
Deleting all items from CSIndex
Invalidating all items greater than: %lld
Removing %{public}@ identifier from _pendingIdentifierRemovals because an item with the same identifier is being indexed. This is probably a bug.
Swapped existingItem:%@ for item:%@ identifier:%{public}@
Requested %lu items to be indexed (new: %lu deferred: %lu preprocess: %lu pending: %lu) fromRefresh: %ld
Requested %lu items to be indexed while inactive
Removing identifiers:%lu fromRefresh:%ld
Removing all items for domain:%@
Message IDs - search failed: %{public}@
Mailbox Prediction - Canceling before querying Spotlight
searching spotlight index for %@
Mailbox Prediction - search failed: %{public}@
Mailbox Prediction - Canceling after querying Spotlight
Reason provider %@ failed to provide dataSourceRefreshReasons
Reason provider %@ failed to provide purgeReasons
Reason provider %@ failed to provide exclusionReasons
Reason provider %@ failed to provide currentReasons
Failed to receive an attribute set for file:%@ error:%{public}@
Skipping body indexing for message %{public}@ due to large message size:%lu
Warning: about to index message with an empty subject. %{public}@
Removing all items from searchableIndex (waiting: %ld)
All items removed from searchableIndex
SearchableIndex is requesting a batch of up to %lu items requiring indexing
type=%ld limit=%lu messageCount=%lu
EDSearchableIndexPersistenceMessagesToItems
type=%ld limit=%ld
EDSearchableIndexPersistenceMessagesForIndexing
Initializing scheduler with budgetConfiguration:%{public}@
Note: Disabled XPC activity based scheduling.
Note: Automatically enabling maintenance activity indexing.
Failed to transition %{public}@ from state %ld to state %d.
Attempted to begin indexing an activity type (%{public}@) that is already active - marking old ACTIVITY as DONE
XPC Requested deferral of activity %@
Failed to transition %{public}@ from state %ld to state %ld.
%{public}@ : %{public}@
<%{public}@:%p> did not return a spotlight query. dataSamples.count=%lu transformedDataSamples.count=%lu
Failed verification for row:%@ citd:%lld
starting listener %@
received a new connection request %@
connection rejected because of missing entitlement
Remote Client Interrupted %@
Remote Client Invalidated %@
Loading pre-computed thread scopes: %{public}@
Setting pre-computed thread scope: %{public}@ -> %{public}@
Resetting pre-computed thread scopes: %{public}@
Resetting all pre-computed thread scopes
Unable to find display message for thread: %{public}@
Initializing pre-computed thread scopes: %{public}@
Changing thread (disabled account): %{public}@
key paths: %{public}@
Changing thread (deleted mailbox): %{public}@
key paths: %{public}@
Persistence is adding %lu messages
Adding %@thread: %{public}@
Changing %@thread (new messages): %{public}@
key paths: %{public}@
Persistence did add %lu messages
Persistence is changing flags for %lu messages: %{public}@
Changing thread (flag change): %{public}@
key paths: %{public}@
Persistence did change flags for %lu messages
Persistence is deleting %lu messages
Changing thread (deleted messages): %{public}@
key paths: %{public}@
Persistence did delete %lu messages
No thread database ID: %{public}@
Deleting thread: %{public}@
Persistence is changing conversation ID for %lu messages from %lld
Adding thread (conversation change): %{public}@
Changing thread (conversation change): %{public}@
key paths: %{public}@
Persistence did change message-id for message
Setting conversation flags %llu for conversations: %@
delete %@ (conversationID: %lld)
modifying %@ (conversationID: %lld): flags = %llu
found %lu message ids for conversation
creating new cloud entry %@: %@
Synchronizing with cloud store %@: %@
Merging server changes: %@
Server change. Clearing conversation flags for conversation: %lld
Server change. Updating conversation flags for conversation: %lld. Old flags %llu new flags %llu
Server change. Setting conversation flags for conversation: %lld
found conversation %lld
could not find a conversation that matched those message ids
Updating message ids for conversation %lld
Synced conversation object is not a dictionary
Finished merging server changes
Pruning database. Purging oldest entries %d
deleting entry with flag value of zero: %@
Conversation Remote Storage did change entries %@
over quota: pruning database
Perform daily export for changed conversations: %@
Removing orphaned entry from unknwown leys set: %@
registering for VIP kvstore at: %@
number of VIPs in current store: %lu
%@: current store contents: %{public}@
Failed to write serialized entries: %{public}@
Failed to serialize %lu entries: %{public}@
VIP store after writing to cloud has %lu entries
VIP store contents after writing to cloud: %{public}@
VIP kvstore changed, reason: %{public}@
%lu keys changed
keys changed: %{public}@
local store has %lu VIPs before updating from cloud
local VIPs before updating from cloud: %{public}@
local store has %lu VIPs after updating from cloud
local VIPs after updating from cloud: %{public}@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
EDAccount
ECMailAccount
NSObject
NSCopying
EDReceivingAccount
EDDeliveryAcount
EDAccountECAccountTransformer
EDAccountRepository
EFLoggable
EDAccountChangeHookResponder
EDActivityPersistence
EDActivityRegistry
EDActivityHookResponder
EMActivityRegistryInterface
EDAddMessagesDeletedDateReceivedIndexUpgradeStep
EDTableUpgradeStep
EDAddThreadTablesUpgradeStep
EDAssetDownloadScheduler
_EDAssetDownloadSchedulerContinuation
EDAssetDownloadSchedulerContinuation
EDCachingMailboxPredictor
EDMailboxPredictor
EDCategorySubsystem
EDClientState
EDCloudKitControl
CoreDataProperties
EDCloudMirroringPersistentStore
EDConversationDailyCloudExportActivityManager
EDConversationDailyiCloudExporter
EDConversationInfo
EDConversationMultipleRemoteStorage
EDConversationRemoteStorageDelegate
EDConversationRemoteStorage
EDConversationPersistence
EDUbiquitousConversationManagerDelegate
EDConversationDailyCloudExporterDelegate
EDPersistenceDatabaseSchemaProvider
EDConversationSubscriptionProvider
EDConversationRemoteCloudKitStorage
NSFetchedResultsControllerDelegate
EDConversationRemoteKVSStorage
EDDaemonInterfaceFactory
_MSTTLReference
EDDifferentialPrivacyReporter
EDMessageChangeHookResponder
EDMessagePersistence
_EMDistantContentRepresentation
EDFetchController
EDGmailLabelPersistence
EDHeuristicsMailboxPredictor
EDInMemoryThread
EDInMemoryThreadQueryHandler
EDMessageQueryHelperDelegate
EDInteractionEvent
EDInteractionEventLogFile
EDInteractionEventLog
_EDInMemoryInteractionEventLog
EDInteractionEventLogMultiplexer
EDInteractionEventLogSaltProvider
_EDUserActionState
EDInteractionLogger
EDMessageDeliveryHookResponder
EMInteractionLoggerInterface
EDLocalActionPersistence
EDMailboxPersistence
EDMailboxProviderDelegate
EMMailboxTypeResolver
EDMailboxRepository
EDMailDropMetadataGenerator
EDMailDropMetadataGeneratorFactory
EDMailDynamicDataAsset
EDMessageChangeManager
EDMessageCountQueryHandler
EDMailboxChangeHookResponder
EFCancelable
_EDMailboxServerCount
EDMessageListItemPredicates
EDMessageQueryEvaluator
EDMessageQueryHandler
EDMessageQueryHelper
EDMessageQueryParserObject
EDMessagePredicateParser
EDMessageComparisonPredicateParser
EDMessageCompoundPredicateParser
EDMessageQueryParser
EDMessageQueryTransformer
EDMessageRepository
EMMessageRepositoryInterface
EDMessageRepositoryQueryHandler
EDMigrateUserDefaultsUpgradeStep
EDMigratingThreadQueryHandler
EMMessageListItemQueryResultsObserver
EDOutgoingMessageRepository
EMOutgoingMessageRepositoryInterface
EDPersistedMessageQueryIterator
EDPersistence
EDPersistenceDatabase
EDPersistenceDatabaseConnectionPoolDelegate
EDPersistenceDatabaseConnectionDelegate
EDPersistenceDatabaseConnection
EDPersistenceDatabaseConnectionPool
_EDPersistenceDatabaseConnectionWrapper
EDPersistenceDatabaseJournal
EDPersistenceDatabaseJournalManager
EDPersistenceDatabaseSchema
EDPersistenceForeignKeyPlaceholder
EDPersistenceAssociationPlaceholder
EDDatabaseChangeHookResponder
EDMessageReadHookResponder
EDProtectedDataReconciliationHookResponder
EDSearchableIndexHookResponder
EDThreadChangeHookResponder
EDPersistenceHookRegistry
EDPersonaPersistenceLayoutManager
EDPETBatchedWrapper
EDPETInteractionEvent
EDPETInteractionEventDataField
EDEmailDaemonConvenience
EDPETMessageTypeIntrospectable
EDPETInteractionEventLog
EDPETQuotaReachedEvent
EDPETSubmittedEvent
EDPrecomputedThreadQueryHandler
_EDThreadPositionChangeSet
EDProtectedDatabasePersistence
EDRemoteClient
EMDaemonInterfaceXPC
EDRemoveUnusedSchemaTableUpgradeStep
EDRenameThreadsTableUpgradeStep
EDSearchableIndex
CSSearchableIndexDelegate
EDSearchableIndexVerifierDataSource
ECSignpostable
EDSearchableIndexSchedulable
EMSearchableIndexInterface
_EMSearchableIndexResultKey
_EMSearchableIndexPendingRemovals
EDSearchableIndexAttachmentItem
EDIndexableItem
EDSearchableIndexAttachmentItemMetadatum
EDSearchableIndexAttachmentItemMetadatumBuilder
EDSearchableIndexBudgetConfiguration
EFPubliclyDescribable
EDSearchableIndexClientState
EDSearchableIndexItem
EDIndexableMailbox
EDSearchableIndexManager
EDSearchableIndexPersistenceAttachmentDatum
EDSearchableIndexPersistence
EDSearchableIndexDataSource
EDSearchableIndexRecipientTester
EDSearchableIndexTesting
EDSearchableIndexScheduler
EDSearchableIndexSchedulableDelegate
EDSearchableIndexSubjectTester
EDSearchableIndexUpdates
EDSearchableIndexVerifier
EDSearchableIndexVerificationData
EDServer
NSXPCListenerDelegate
EDServerMessagePersistenceFactory
EDServerMessagePersistence
EDSubjectTokenizer
EDTaskScheduler
EDThreadPersistence
_EDWrappedMessage
_EDLazyWrappedMessage
_EDThreadScopeInfo
EDThreadQueryHandler
EDTransactionService
EDUbiquitousConversationManager
EDVIPManager
EMVIPManager
EDVIPManagerProxy
EMVIPManagerInterface
EDAdditions
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
copyWithZone:
systemAccount
emailAddressStrings
hostname
setHostname:
password
setPassword:
identifier
displayName
username
canAuthenticateWithCurrentCredentials
hasPasswordCredential
savePersistentAccount
transformAccount:
deliveryAccount
setDeliveryAccount:
mailboxForType:
containsMailboxWithURL:
isManaged
sourceIsManaged
emailAddresses
smtpIdentifier
isLocalAccount
shouldArchiveByDefault
transformReceivingAccount:
maximumMessageBytes
transformDeliveryAccount:
initWithRepresentedObjectID:
setUsername:
setSourceIsManaged:
setEmailAddresses:
setShouldArchiveByDefault:
initWithObjectID:name:hostname:builder:
setMaximumMessageBytes:
transformedValueClass
allowsReverseTransformation
transformedValue:
UTF8String
init
registerAccountChangeHookResponder:
unregisterHookResponder:
dealloc
accountsProvider
mailAccounts
ef_filter:
transformAccounts:
allAccounts
count
observersByIdentifier
setObject:forKeyedSubscript:
didBeginObserving
objectForKeyedSubscript:
didEndObserving
transformer
ef_map:
allValues
countByEnumeratingWithState:objects:count:
accountsAdded:
accountsRemoved:
accountsChanged:
accountBecameActive:
accountBecameInactive:
initWithAccountsProvider:hookRegistry:
allAccountsWithCompletionHandler:
startObservingWithResultsObserver:observationIdentifier:
cancelObservation:
.cxx_destruct
setTransformer:
setObserversByIdentifier:
setAccountsProvider:
hookRegistry
setHookRegistry:
_transformer
_observersByIdentifier
_accountsProvider
_hookRegistry
isEqualToActivityWithType:userInfo:
objectID
initWithActivityType:userInfo:
removedActivityWithID:
startedActivity:
finished
finishWithError:
needsPersistentHistory
activityWithID:finishedWithError:
setUserInfoObject:forKey:
activityWithID:setUserInfoObject:forKey:
setCompletedCount:totalCount:
activityWithID:setCompletedCount:totalCount:
initWithHookResponder:
startActivityOfType:userInfo:
currentActivities
activityHookResponder
setActivityHookResponder:
_currentActivities
_lock
_activityHookResponder
registerActivityHookResponder:
containsObject:
addObject:
errorWithDomain:code:userInfo:
removeObject:
addCancelationBlock:
numberWithLongLong:
registerActivityObserver:completion:
initWithHookRegistry:activityPersistence:
activityPersistence
_observers
_activityPersistence
sqlDB
runWithConnection:
threadScopesTableSchema
threadsTableSchema
threadMailboxesTableSchema
threadSendersTableSchema
threadRecipientsTableSchema
threadFlagColorsTableSchema
columnForName:
setAsForeignKeyForTable:onDelete:onUpdate:
arrayWithObjects:count:
initWithTables:
integerColumnWithName:nullable:
blobColumnWithName:nullable:
numberWithInt:
integerColumnWithName:nullable:defaultValue:
initWithName:rowIDType:columns:
columnExpression
isNotNull
isNull
initWithExpressions:
addCheckConstraintForExpression:
name
initWithTableName:columnNames:where:unique:
addIndex:
addIndexForColumns:
addUniquenessConstraintForColumns:conflictResolution:
initWithName:columns:primaryKeyColumns:
initWithName:rowIDType:rowIDAlias:columns:
_schemaWithMessagesTable:mailboxesTable:conversationsTable:
definitionWithDatabaseName:
initWithIdentifier:regularInterval:failureInterval:backOffFactor:handler:
copy
stringWithFormat:
_registerXPCActivity
standardUserDefaults
_lastFailureIntervalKey
removeObjectForKey:
_regularInterval
_xpcCriteriaForInterval:
_nextFailureInterval
setInteger:forKey:
_identifier
integerForKey:
setScheduler:
setActivity:
_queue
_handler
_failureInterval
_backOffFactor
initWithIdentifier:handler:
_rescheduleAfterSuccessActivity:
_rescheduleAfterFailureActivity:
_stopSchedulingActivity:
set_identifier:
set_lastFailureIntervalKey:
set_handler:
set_regularInterval:
set_failureInterval:
set_backOffFactor:
set_queue:
scheduler
activity
rescheduleAfterSuccess
rescheduleAfterFailure
stopScheduling
_scheduler
_activity
setPredictor:
setCache:
dictionary
setCacheKeysByProperty:
_cacheKeyForMessages:
cache
objectForKey:
predictor
predictMailboxIDsForMessages:limit:diagnostics:
setObject:forKey:
_propertyKeysForMessage:
_trackCacheKey:forPropertyKey:
cacheKeysByProperty
allObjects
removeAllObjects
persistentID
ef_mapSelector:
mutableCopy
compare:
sortUsingSelector:
componentsJoinedByString:
array
listIDHash
int64Value
conversationID
ea_uncommentedAddress
initWithString:
from
firstObject
longLongValue
initWithPredictor:
invalidatePredictionsAffectedByMessages:
removeAllPredictions
_predictor
_cache
_cacheKeysByProperty
mailDataDirectory
saltProviderFromKeyChain
initWithUserProfileProvider:
registerMessageChangeHookResponder:
currentDevice
isInternal
initWithDirectory:userProfileProvider:saltProvider:contactStore:vipManager:requireOptIn:
initWithLogs:
messagePersistence
mailboxPersistence
initWithMessagePersistence:mailboxPersistence:eventLog:
registerMessageDeliveryHookResponder:
initWithPersistence:userProfileProvider:vipManager:sourceApplicationBundleIdentifier:
interactionLogger
donationController
logUploader
setLogUploader:
logFile
setLogFile:
_interactionLogger
_donationController
_logUploader
_logFile
ef_publicDescription
initWithBoost:
discreteProgressWithTotalUnitCount:
drop
setCancellationHandler:
sharedInstance
setCurrentlyVisibleMailboxes:
setClientIsInForeground:
giveBoostWithCompletionBlock:
visibleMailboxesObjectIds
isForeground
_isForeground
_visibleMailboxesObjectIds
fetchRequestWithEntityName:
fetchRequest
_setupCoreDataStackWithCompletionHandler:
initWithExecutionQueue:
setObserveForNetworkReachability:
setInitialDelay:
bundleForClass:
URLForResource:withExtension:
initWithContentsOfURL:
lastObject
stringByAppendingPathComponent:
persistentContainerWithPath:managedObjectModel:
persistentStoreDescriptions
initWithContainerIdentifier:
setUseZoneWidePCS:
setUseEncryptedStorage:
setContainerOptions:
initWithOptions:
setOption:forMirroringKey:
setOption:forKey:
loadPersistentStoresWithCompletionHandler:
viewContext
persistentStoreCoordinator
newBackgroundContext
importScheduler
_executeRequestImport:completionBlock:
scheduleTask:canceledCallback:
exportScheduler
_executeRequestExport:completionBlock:
success
_handleRequestFailure:scheduler:completionBlock:
_requestImport:completionBlock:
_requestExport:completionBlock:
initWithOptions:completionBlock:
executeRequest:error:
performBlockAndWait:
shouldRetryForResult:
error
rescheduleTask
code
initWithPersistentStoreCompletionHandler:
requestImport:completionBlock:
requestExport:completionBlock:
mirroringOptions
persistentContainer
setImportScheduler:
setExportScheduler:
privateQueue
setPrivateQueue:
_mirroringOptions
_persistentContainer
_importScheduler
_exportScheduler
_privateQueue
initWithDelegate:conversationManager:
scheduleWithConversationExportDelegate:conversationManager:
delegate
previousSyncAnchorForDailyExport
currentSyncAnchorForDailyExport
flaggedConversationsChangedBetweenStartAnchor:endAnchor:
conversationManager
performDailyExportForChangedConversations:
setNewPreviousSyncAnchorForDailyExport:
_delegate
_conversationManager
initWithDelegate:
setKvsStorage:
setCloudKitStorage:
initWithServiceName:
setDataReplicationTransaction:
cloudKitStorage
dictionaryForKey:
dictionaryRepresentation
kvsStorage
removeDictionaryForKey:
setDictionary:forKey:
synchronize
refresh
isInitialized
dataReplicationTransaction
startTransaction
_saveChanges:fromStorage:toStorage:synchronize:
conversationRemoteStorage:didChangeEntries:reason:
endTransaction:
hasPendingTransactions
resetPendingTransactions
_replicateAllContentFromStore:toStore:synchronize:
_handleStorageReady:
allKeys
isMigratedFromKVSStorage
setMigratedFromKVSStorage:
conversationRemoteStorageDidInitialize:
conversationRemoteStorageWillResetData:
conversationRemoteStorageDidResetData:
storageName
setDelegate:
_kvsStorage
_cloudKitStorage
_dataReplicationTransaction
conversationsTableSchema
conversationIDMessageIDTableSchema
textColumnWithName:collation:nullable:
performInitialSync
database
preparedStatementForQueryString:
numberValue
stringValue
executeUsingBlock:error:
handleError:message:
performReadBlock:
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
executeWithNamedBindings:usingBlock:error:
databaseIDValue
unsignedIntegerValue
numberWithUnsignedLongLong:
lastInsertedDatabaseID
performWriteBlock:
setPersistenceConversationFlags:forConversationIDs:reason:
syncKeyForUpdatedConversation:flags:
setPersistenceConversationFlags:syncKey:forConversationID:reason:
setFlags:forConversations:
objectAtIndexedSubscript:
unsignedLongLongValue
_notifyOfFlagChangeForConversationID:oldFlags:newFlags:reason:
objectValue
updateAssociationTableForMessageID:dateSent:conversationID:
updateAssociationTableForMessageIDs:conversationID:
numberWithDouble:
conversationNotificationLevelForConversationFlags:
persistenceDidChangeConversationNotificationLevel:conversationID:
_postChangeNotificationForConversationID:flags:oldFlags:reason:
numberWithBool:
defaultCenter
numberWithInteger:
postNotificationName:object:userInfo:
hasSubscribedConversations
conversationsTableName
tablesAndForeignKeysToResolve:associationsToResolve:
conversationFlagsForConversationNotificationLevel:
syncedConversationIDsBySyncKey
persistenceConversationFlagsForConversationID:
conversationIDForMessageIDs:
messageIDsForConversationID:limit:
remoteMessageIDsAdded:forConversationID:
pruneConversationTables:
clearConversationFlagsAndSyncKeyForConversationIDs:
initWithDatabase:hookRegistry:
initializeConversationManagerAndPerformInitialSync
createConversationWithFlags:
markConversationWithIDs:mute:
markConversationWithIDs:notify:
updateAssociationTableForMessagePersistentIDs:conversationID:
notificationQueue
setNotificationQueue:
_database
_notificationQueue
setExportTransaction:
setImportTransaction:
_handleWillResetSyncDataNotification:
addObserver:selector:name:object:
_handleDidResetSyncDataNotification:
_handlePushNotification:
intialSetup
setMirroringPersistentStore:
exportTransaction
_requestExport
importTransaction
_requestImport
control
migratedFromKVSStorage
setInitialized:
_requestFirstSync
_recoverHistoryToken
historyToken
entityForConversationDictionary:key:
conversationUUID
_handleDuplicationsForConversationUUIDs:
addOrUpdateConversationInfo:
removeConversationInfoWithId:
conversationInfoWithUUID:
dictionaryForConversationInfo:
allConversationInfos
dictionaryWithCapacity:
mirroringPersistentStore
managedObjectContext
_retrieveChangesSinceLastRequest
userInfo
notificationFromRemoteNotificationDictionary:
insertNewObjectForEntityForName:inManagedObjectContext:
save:
setConversationUUID:
setNotifyMe:
setMuted:
setMessageIds:
doubleValue
dateWithTimeIntervalSince1970:
setLastModified:
muted
notifyMe
messageIds
lastModified
timeIntervalSince1970
ed_archiveTokenWithError:
ed_unarchivedTokenWithData:error:
conversationInfosWithUUID:
subarrayWithRange:
removeConversationInfoWithObjectId:save:
setTransactionAuthor:
predicateWithFormat:
setPredicate:
initWithKey:ascending:
setSortDescriptors:
executeFetchRequest:error:
deleteObject:
existingObjectWithID:error:
author
componentsSeparatedByString:
transactionAuthor
isEqualToString:
changes
changeType
changedObjectID
conversationInfoWithObjectId:
tombstone
null
enumerateChangeHistorySinceToken:usingBlock:
setHistoryToken:
persistHistoryToken
_transactionHistorySinceToken:error:
token
fetchHistoryAfterToken:
setResultType:
resultType
result
entity
cloudKitAPSTopics
controller:didChangeContentWithSnapshot:
controller:didChangeContentWithDifference:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerWillChangeContent:
controllerDidChangeContent:
controller:sectionIndexTitleForSectionName:
_updateConversationInfo:withAnotherConversationInfo:
fetchedResultsController
setManagedObjectContext:
_initialized
_mirroringPersistentStore
_fetchedResultsController
_managedObjectContext
_historyToken
_exportTransaction
_importTransaction
additionalStoreWithIdentifier:
_storeChangedExternally:
subsetOfMessageIDsToSyncFromMessageIDString:
kvStore
enumerateObjectsUsingBlock:
object
enumerateKeysAndObjectsUsingBlock:
initialized
setKvStore:
_kvStore
persistence
initWithMailboxPersistence:
threadPersistence
messageChangeManager
initWithMessagePersistence:threadPersistence:messageChangeManager:hookRegistry:
doesNotRecognizeSelector:
searchableIndexManager
enableIndexingAndBeginScheduling:
index
categorySubsystem
vipManager
initWithVIPManager:
initWithPersistence:categorySubsystem:
newAccountRepository
newMailboxRepository
newMessageRepository
newFetchController
newOutgoingMessageRepository
newSearchableIndex
sharedInteractionLogger
sharedDonationController
newVIPManagerInterface
newActivityRegistry
setCategorySubsystem:
_persistence
_categorySubsystem
lastSet
timeIntervalSinceNow
date
setLastSet:
setValue:
value
initWithTTL:
getValueWithGenerator:
setTtl:
_value
_ttl
_lastSet
mailbox
_shouldRecordMailbox:
recordingQueue
_recordSenders:
reportSenderDomainForMessages:
type
_userDomains
_profileProvider
accountsEmailAddresses
addressDomainFromAddress:
lowercaseString
length
_mailDynamicData
shouldIgnoreDomain:
shouldIgnoreUserAccountDomains
_isUserAccountDomain:
recordingHandler
_recordingKey
_localeIdentifier
currentLocale
systemLocale
localeIdentifier
hasPrefix:
persistenceWillBeginUpdates
persistenceDidFinishUpdates
persistenceWillAddMessage:
persistenceIsAddingMessages:journaled:
persistenceDidAddMessages:
persistenceDidReconcileJournaledMessages:
persistenceDidUpdateData:message:
persistenceDidUpdateProperties:message:
persistenceIsDeletingMessages:
persistenceDidDeleteMessages:
persistenceWillChangeFlags:messages:
persistenceIsChangingFlags:messages:
persistenceDidChangeFlags:messages:
persistenceDidAddLabels:removeLabels:messages:
persistenceWillChangeConversationID:messages:
persistenceIsChangingConversationID:messages:
persistenceDidChangeMessageIDHeaderHash:message:
persistenceWillTransferMessages:transferType:destinationMailboxURL:userInitiated:
set_recordingKey:
set_userDomains:
set_profileProvider:
set_mailDynamicData:
setRecordingHandler:
setRecordingQueue:
_recordingHandler
_recordingQueue
contentMessage
relatedContentItems
ef_firstObjectPassingTest:
requestRepresentationWithOptions:completionHandler:
requestMoreContentBlock
requestRepresentationForItemWithObjectID:options:completionHandler:
requestUpdatedRepresentationWithCompletion:
invalidate
initWithAccountsProvider:
labelForDatabaseID:
setUserProfileProvider:
setLibrary:
setMailboxIDCache:
setParameters:
initWithUserProfileProvider:queryAdapter:
_mergeDefaultParameters:withParameters:
addEntriesFromDictionary:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
string
setDebugLog:
_modeParameterIs:
subject
subjectString
_predictionsForMessage:limit:
measure
setMeasure:
object:withMeasure:
objectEnumerator
max:
reverseSortedObjects:limit:
arrayWithCapacity:
parameters
_summedWeightedPredictionsForMessage:limit:
_orderedModePredictionForMessage:
_weightedModePredictionsForMessage:
_countsForField:message:
_topHitFromMailboxDictionary:message:
absoluteString
_removeSpecialMailboxesInCounts:message:
_conversationIDCountsForMessage:
_senderCountsForMessage:
_recipientCountsForMessage:
_listIDCountsForMessage:
boolValue
_limitToRecents
library
countMessagesByMailboxMatchingQuery:variable:
ea_isLegalEmailAddress
_allowedRecipientsForMessage:
mailboxIDCache
validMailboxesForPrediction
_userCreatedMailboxIDs
removeObjectsForKeys:
setObject:
_normalizedTermFrequencyTopHitFromDictionary:withThreshold:
_topHitFromMailboxDictionary:
sortedArrayUsingSelector:
_objectWithMeasure:timesHigherThanFollowUpInMeasures:
userProfileProvider
allEmailAddresses
_isAllowedRecipient:
initWithUserProfileProvider:queryAdapter:parameters:
debugLog
_userProfileProvider
_library
_parameters
_mailboxIDCache
_debugLog
flags
deleted
sortDescriptors
sortUsingDescriptors:
predicate
threadScopeForPredicate:
_isSortedByDate:
_dateSortDescriptors
_recalculateDisplayMessage
initWithConversationID:threadScope:
_createThreadWithObjectID:
displayMessage
originatingQuery
mailboxTypeResolver
setMailboxTypeResolver:
newestMessage
setDate:
setSubject:
summary
setSummary:
_combinedSenderList
setSenderList:
_combinedToList
setToList:
_combinedCCList
setCcList:
_combinedFlags
setFlags:
_combinedHasUnflagged
setHasUnflagged:
_combinedFlagColors
setFlagColors:
_combinedIsVIP
setIsVIP:
_combinedIsBlocked
setIsBlocked:
_combinedHasAttachments
setHasAttachments:
conversationNotificationLevel
setConversationNotificationLevel:
setCount:
_combinedMailboxObjectIDs
setMailboxObjectIDs:
itemID
setDisplayMessageItemID:
initWithObjectID:originatingQuery:builder:
initWithMessages:originatingQuery:mailboxTypeResolver:
ascending
_addMessagesToThread:
_calculateAndApplyChange
ef_insertObjectIfAbsent:usingComparator:
changesForKeyPaths:ofItems:
_calculateChangesAfterRemovingMessages:applyingChanges:threadIsEmpty:
removeObjectsInArray:
applyToMessageListItem:
thread
changeFrom:to:
setThread:
sortDescriptorForDateAscending:
senderList
addObjectsFromArray:
toList
ccList
combinedFlagsForMessageListItems:
hasUnflagged
initWithIndexesInRange:
flagColors
addIndexes:
containsIndexes:
isVIP
isBlocked
hasAttachments
mailboxObjectIDs
_dateSortedMessages
read
indexOfObjectPassingTest:
setDisplayMessage:
ef_reverse
messages
addMessages:
changeMessages:forKeyPaths:threadIsEmpty:
removeMessages:threadIsEmpty:
updateMessage:fromOldObjectID:
threadScope
_messages
_thread
_threadScope
_originatingQuery
_mailboxTypeResolver
_displayMessage
initWithQuery:messagePersistence:hookRegistry:observer:observationIdentifier:
_inMemoryThreadSortDescriptorsForThreadSortDescriptors:
_messageQueryFromThreadsQuery:
initWithQuery:messagePersistence:hookRegistry:delegate:
_blockedSendersDidChange:
_vipsDidChange:
cancel
initWithDomain:code:userInfo:
query
_messagesWereAdded:
resultsObserver
observationIdentifier
observerDidFinishInitialLoad:
_messagesByConversationIDForMessages:
_messageListItemChangeAffectsSorting:
_reportChanges:
_mergeInThreads:forMove:
_messagesWereChanged:forKeyPaths:deleted:
strongToStrongObjectsMapTable
initWithObjects:
_reportDeletes:
keyEnumerator
nextObject
ef_groupBy:
_removeThreadsForInMemoryThreads:
threadSortDescriptors
sortUsingComparator:
insertObject:atIndex:
removeObjectAtIndex:
observer:matchedMovedObjectIDs:before:
observer:matchedAddedObjectIDs:before:extraInfo:
reloadSummaryForChanges:
observer:matchedChangesForObjectIDs:
observer:matchedDeletedObjectIDs:
emailAddressValue
address
ef_any:
rawAddressFromFullAddress:
isVIPAddress:
initWithTargetClass:predicate:sortDescriptors:
stringByAppendingString:
valueForKey:
messagesWereFound:
allMessagesWereFound
messagesWereAdded:
messageFlagsWereChangedForMessages:
conversationIDWasChangedForMessages:fromConversationID:
conversationNotificationLevelWasChangedForConversation:conversationID:
objectIDChangedForMessage:oldObjectID:
messagesWereUpdated:forKeyPaths:
messagesWereDeleted:
threadForObjectID:error:
messagesForThread:
messageQueryHelper
messageSortDescriptors
_conversationIDs
_threadsByConversationID
_messageQueryHelper
_threadSortDescriptors
_messageSortDescriptors
appendFormat:
eventID
appendString:
version
accountID
mailboxID
messageIDHash
messagePersistentID
data
setEventID:
setVersion:
setAccountID:
setMailboxID:
setConversationID:
setMessageIDHash:
setMessagePersistentID:
setName:
setData:
_eventID
_version
_date
_accountID
_mailboxID
_conversationID
_messageIDHash
_messagePersistentID
_name
_data
timeZoneWithAbbreviation:
em_userDefaults
boolForKey:
URLByAppendingPathComponent:
_openFileForAppending:
initWithFileDescriptor:closeOnDealloc:
shouldHash
_hashedString:
_findAppleAddress:
UUIDString
_buildCommonPrefix
_anyAccountOptedIntoLogging
_openTodaysLogfile
_crossPlatformUnifiedMeContactWithKeysToFetch:error:
URLWithString:
setLineBuffer:
logFileHandle
currentLogFile
_scheduleLogRotation
currentCalendar
referenceTimeZone
setTimeZone:
dateByAddingUnit:value:toDate:options:
startOfDayForDate:
writeQueue
_rotateLog
scheduledTimerWithTimeInterval:repeats:block:
synchronizeFile
closeFile
rotationHandler
directory
_buildLogFileURLInDir:
setCurrentLogFile:
setLogFileHandle:
seekToEndOfFile
offsetInFile
_writeHeaderLine
fileSystemRepresentation
account
_accountOptedIntoLogging:
_commonColumnsForDate:message:conversationID:account:
dataWithJSONObject:options:error:
initWithData:encoding:
commonPrefix
_writeLine:
_persistEvent:date:message:conversationID:account:data:
_extractDataFromMessage:
persistEvent:date:message:data:
_hashedMailboxID:
_stringForMailboxType:
requireOptIn
hasSuffix:
_columnNames
dataUsingEncoding:
writeData:
_writeQALogLine:
qaLogFileHandle
JSONObjectWithData:options:error:
initWithBytesNoCopy:length:
fileHandleForReadingFromURL:error:
readDataToEndOfFile
isEqualToArray:
_eventFromColumns:
scannerWithString:
scanHexLongLong:
scanLongLong:
initWithAngleBracketID:
indexOfObject:
integerValue
_integerForID:
_mailboxTypeForString:
_utcFormatter
dateFromString:
_cohortName
platformName
deviceID
_currentLocaleIdentifier
userID
isFileURL
setFormatOptions:
stringFromDate:
localTimeZone
_localFormatter
_hashedAccountID:
_hashedConversationID:
messageIDHeader
ec_messageIDSubstring
profileProvider
ef_compactMap:
senders
domain
_contactIDForAddress:
_hashedSubject:
hasReplyPrefix
prefix
dateReceived
pairWithFirst:second:
first
second
setWithArray:
intersectsSet:
references
initWithBytes:length:
saltProvider
salt
ef_sha256DigestWithSalts:
ef_hexString
hasPrefix
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
subjectWithoutPrefix
tokenizeString:
contactIDCache
contactStore
em_fetchContactForEmailAddress:keysToFetch:createIfNeeded:
meContactIdentifier
objectForKey:generator:
readFromFile:block:
persistEvent:date:conversationID:data:
persistEvent:dataFromMessage:
persistEvent:dataFromMessage:account:
persistEvent:date:message:mailbox:
persistEvent:date:message:mailboxType:
initWithLineBuffer:userProfileProvider:saltProvider:contactStore:vipManager:
refreshAfterOptIn
setRotationHandler:
waitForPendingWrites
setCommonPrefix:
setDirectory:
setQaLogFileHandle:
setWriteQueue:
setContactIDCache:
setShouldHash:
setRequireOptIn:
setProfileProvider:
setSaltProvider:
setContactStore:
setVipManager:
_shouldHash
_requireOptIn
_userID
_deviceID
_currentLogFile
_rotationHandler
_commonPrefix
_directory
_logFileHandle
_qaLogFileHandle
_writeQueue
_contactIDCache
_saltProvider
_contactStore
_vipManager
_referenceTimeZone
_meContactIdentifier
lineBuffer
_lineBuffer
logs
initWithFormat:
setLogs:
_logs
alloc
_findOrCreateSalt
_findExistingSaltError:
_deleteSalt
_createSalt
_queryKeychainError:
sortedArrayUsingComparator:
getBytes:range:
appendBytes:length:
saltProviderWithString:
migrateAccessClass
setSalt:
lock
setLock:
_salt
viewingStarted
setViewingStarted:
message
setMessage:
scrolledToEnd
setScrolledToEnd:
mutedThread
setMutedThread:
setKey:
cellStyle
setCellStyle:
messageListType
setMessageListType:
setRow:
_scrolledToEnd
_mutedThread
_viewingStarted
_message
_key
_cellStyle
_messageListType
_row
_conversationFlagsChanged:
processingQueue
persistedMessagesForMessageObjectIDs:
_eventLog
_composeStartedForMessage:eventName:
deliveredMessage:account:
_stateTrackingQueue
_viewedMessages
_stateForMessage:extra:container:
timeIntervalSinceDate:
removeIndexesInRange:
_messageListVisibleRows
_range:minusRange:
set_messageListVisibleRows:
_messageListMessages
containsIndex:
_logMessageListDisplayEndedForState:now:
_logMessageListDisplayStartedMessage:now:type:row:cellStyle:
movedMessages:toMailboxType:
stringByAppendingFormat:
setWithObjects:
numberWithUnsignedLong:
messageListDisplayEndedForAllMessages
_viewingEndedForAllMessages
reason
readChanged
flaggedChanged
flagged
repliedChanged
replied
forwardedChanged
redirectedChanged
forwarded
redirected
legacyMailboxForMailboxURL:
logEvent:date:messageID:data:
logEvent:date:data:
composeReplyStartedForMessage:
composeFowardStartedForMessage:
composedMessageSent:account:
scrolledToEndOfMessage:
viewingStartedForMessage:
viewingEndedForMessage:
messageListDisplayVisibleRowsChanged:
messageListDisplayStartedForMessage:messageListType:row:cellStyle:
messageListDisplayEndedForMessage:cellStyle:
movedMessages:toMailbox:
archivedMessages:
deletedMessages:
copiedMessages:toMailbox:
clickedLinkInMessage:scheme:
applicationLaunched
applicationWillSuspend
applicationWillResume
waitForPendingStateChanges
set_viewedMessages:
set_messageListMessages:
set_stateTrackingQueue:
set_eventLog:
setMessagePersistence:
setMailboxPersistence:
setProcessingQueue:
_messagePersistence
_mailboxPersistence
_processingQueue
localMessageActionsTableSchema
actionMessagesTableSchema
actionLabelsTableSchema
actionFlagsTableSchema
messagesTableName
mailboxesTableName
initWithColumn:tableName:onDelete:onUpdate:
ef_SQLEscapedString
_transferActionForRow:connection:failedMessages:
_flagChangeActionForRow:connection:
_flagChangeAllActionForRow:connection:
_transferUndownloadedActionForRow:connection:
_labelChangeActionForRow:connection:
executeWithIndexedBindings:usingBlock:error:
handledFailedCopyForMessages:
messageForDatabaseID:
setSourceMessage:
setSourceRemoteID:
setDestinationMessage:
initWithBuilder:
mailboxURLForDatabaseID:
setMessageActionPersistentID:
setMailboxURL:
setUserInitiated:
setSourceMailboxURL:
setDestinationMailboxURL:
setTransferType:
setItemsToDownload:
setItemsToCopy:
setItemsToDelete:
_findMessagesForAction:remoteIDs:messages:connection:
anyObject
setOldestPersistedRemoteID:
_flagChangeForAction:connection:
setRemoteIDs:
setMessages:
setFlagChange:
gmailLabelPersistence
setLabelsToAdd:
setLabelsToRemove:
changesReadTo:
changesDeletedTo:
changesRepliedTo:
changesFlaggedTo:
changesDraftTo:
changesForwardedTo:
changesRedirectedTo:
changesJunkLevelSetByUserTo:
changesJunkLevelTo:
changesFlagColorTo:
mailboxURL
mailboxDatabaseIDForURL:
flagChange
_addFlagChange:actionID:connection:
_addActionMessageForMessage:destinationMessage:actionID:actionPhase:connection:
initWithTable:conflictResolution:
executeInsertStatement:rowsChanged:
initWithTable:
oldestPersistedRemoteID
executeInsertStatement:error:
deletedChanged
draftChanged
draft
junkLevelSetByUserChanged
junkLevelSetByUser
junkLevelChanged
junkLevel
flagColorChanged
flagColor
sourceMailboxURL
destinationMailboxURL
transferType
userInitiated
itemsToDownload
sourceMessage
destinationMessage
itemsToCopy
itemsToDelete
sourceRemoteID
_addActionMessageForSourceRemoteID:actionID:connection:
labelsToAdd
_setLabelsOnAction:labels:add:connection:
labelsToRemove
callStackSymbols
remoteID
completedItems
failedItems
messageActionPersistentID
_deleteCopyItems:actionID:connection:
phaseForResults
updateWithFailedItems:forPhase:
updateWithCompletedItems:forPhase:
_updateCopyItems:toPhase:actionID:connection:
removeMessageAction:
moveSupportedFromMailboxURL:toURL:
_whereClauseToFindCopyItems:
executeStatementString:errorMessage:
ef_quotedSQLEscapedString
initWithDatabase:gmailLabelPersistence:
messageActionsForAccountURL:previousActionID:
persistFlagChangeAction:
persistFlagChangeUndownloadedAction:
persistTransferAction:
persistTransferUndownloadedAction:
persistLabelChangeAction:
updateTransferAction:withResults:
_sourceRemoteIDListForCopyItems:
_gmailLabelPersistence
mailboxProvider
allMailboxes
changeObserversByIdentifier
mailboxListChanged:
fetchMailboxes
initWithURL:
legacyMailboxForObjectID:
allMailboxObjectIDsWithMailboxTypeResolver:forExclusion:
mailboxObjectIDsForMailboxType:
minusSet:
mailboxTypeForMailboxObjectID:
setChangeObserversByIdentifier:
mailboxListInvalidated
initWithMailboxProvider:
allMailboxesWithCompletionHandler:
fetchMailboxLists
mailboxDatabaseIDsForMailboxObjectIDs:
serverCountsForMailboxScope:block:
addChangeObserver:withIdentifier:
removeChangeObserverWithIdentifier:
createMailbox:parentMailboxID:
deleteMailbox:
moveMailbox:newParentMailboxID:
renameMailbox:newName:
setMailboxProvider:
_changeObserversByIdentifier
_mailboxProvider
serializationQueue
_performCreateMailboxChangeAction:
_performDeleteMailboxChangeAction:
_performMoveMailboxChangeAction:
_performRenameMailboxChangeAction:
mailboxObjectID
parentMailboxID
getMailboxesWithCompletion:
startObservingMailboxChangesWithChangeObserver:observationIdentifier:
performMailboxChangeAction:completionHandler:
refreshMailboxList
_serializationQueue
generateMailDropMetadataForContentURL:completionHandler:
insertMaildropAttachmentViewForContentURL:HTMLByContentID:completionHandler:
newMailDropMetadataGenerator
_ignoredDomainsFallback
_updateIgnoredDomains:
_queryForAssetWithCompletion:
_downloadAssetCatalogWithCompletion:
ignoredDomains
setByAddingObjectsFromArray:
setIgnoredDomains:
setTimeoutIntervalForResource:
startCatalogDownload:options:then:
initWithType:
addKeyValuePair:with:
results
state
_updateStateFromAsset:
startDownload:
queryMetaData:
getLocalFileUrl
assetProperty:
setShouldIgnoreUserAccountDomains:
_shouldIgnoreUserAccountDomains
_ignoredDomains
_hookResponderRespondsToRequiredMethods:
transferMessages:transferType:destinationMailboxURL:userInitiated:
transferMessages:transferType:destinationMailboxURL:userInitiated:oldMessagesByNewMessage:
hookResponder
_mailboxURLIsInRemoteAccount:
messagesToJournalForMessages:inMailbox:
_mailboxURL:isInSameAccountAsMailboxURL:
persistNewMessages:mailboxURL:oldMessagesByNewMessage:fromSyncing:
haveCompleteMIMEForMessage:
localActionPersistence
deletePersistedMessages:
checkForNewActionsInMailboxID:
ef_enumerateObjectsInBatchesOfSize:block:
_invokeHookResponderForDeletedMessages:
transferAllMessagesFromMailbox:exceptMessages:transferType:destinationMailboxURL:userInitiated:
markAllWorkQueue
iterateMessagesInMailboxURL:excludingMessages:batchSize:handler:
ef_hasScheme:
applyFlagChange:toMessages:
setUnreadStatusCountsTo:subtractFromTotalCount:forMailboxWithURL:
applyFlagChange:toMessagesInDatabase:
adjustUnreadStatusCountsBy:forMailboxWithURL:
initWithCapacity:
addLabels:removeLabels:toMessagesInDatabase:
_needToStoreServerMessagesForMailboxURL:
serverMessagePersistenceFactory
serverMessagePersistenceForMailboxURL:
setImapUID:
setServerFlags:
supportsLabels
labels
setLabels:
initWithIMAPServerMessageBuilder:
addServerMessage:invalidMessage:duplicateRemoteID:
remoteMessageForDatabaseID:
messagesForRemoteIDs:mailboxURL:
deleteServerMessagesWithRemoteIDs:
serverMessagesInIMAPUIDRange:limit:returnLastEntries:
_reflectFlagChanges:messages:remoteIDs:mailboxURL:
applyFlagChange:toMessagesWithRemoteIDs:
addLabels:removeLabels:toMessagesWithRemoteIDs:
_persistResults:forTransferAction:
_persistResults:forFlagChangeAction:
_persistResults:forLabelChangeAction:
remoteIDs
_resetLocalLabelsToServerLabelsForMessagesWithRemoteIDs:mailboxURL:
serverMessagesForRemoteIDs:
_resetLocalFlagsToServerFlagsForMessagesWithRemoteIDs:mailboxURL:
serverFlags
_handleFailedCopyItems:transferAction:
_handleFailedDownload:
downloadedDataByCopyItems
setData:onMessage:
createdServerMessages
_storeServerMessages:mailboxURL:
setRemoteID:onMessageWithDatabaseID:
displayErrorForTransferAction:withResults:
actionHasChangedAccount:
attachMessage:toServerMessageWithRemoteID:
setRemoteID:
initWithServerMessageBuilder:
host
initWithDatabase:localActionPersistence:serverMessagePersistenceFactory:hookResponder:
moveMessages:destinationMailboxURL:userInitiated:
copyMessages:destinationMailboxURL:userInitiated:
deleteAllMessageFromMailbox:exceptMessages:
moveAllMessagesFromMailbox:exceptMessages:destinationMailboxURL:userInitiated:
copyAllMessagesFromMailbox:exceptMessages:destinationMailboxURL:userInitiated:
addNewMessages:mailboxURL:userInitiated:
deleteMessages:
applyFlagChange:toAllMessagesFromMailbox:exceptMessages:
addLabels:removeLabels:forMessages:
reflectNewMessages:mailboxURL:
reflectDeletedMessages:
reflectDeletedMessagesWithRemoteIDs:mailboxURL:
reflectAllMessagesDeletedInMailboxURL:
reflectFlagChanges:forMessages:
reflectFlagChanges:forMessagesWithRemoteIDs:mailboxURL:
reflectAddedLabels:removedLabels:forMessagesWithRemoteIDs:mailboxURL:
persistResults:forAction:
accountForMailboxURL:
setMarkAllWorkQueue:
_localActionPersistence
_serverMessagePersistenceFactory
_markAllWorkQueue
_hookResponder
serialDispatchQueueSchedulerWithName:qualityOfService:
predicateFromPredicate:ignoringKeyPaths:
initWithQuery:messagePersistence:
registerMailboxChangeHookResponder:
tokenWithCancelationBlock:
willSyncMailbox:
didSyncMailbox:
_scheduleCountCalculationWithQualityOfService:
removeObserver:
countOfMessagesMatchingQuery:
setLocalCount:
serverCountMailboxScope
setServerCount:
setMostRecentStatusCount:
setLastSyncStatusCount:
_notifyObserverWithLogMessage:
defaultScheduler
performBlock:
localCount
serverCount
mostRecentStatusCount
lastSyncStatusCount
ef_timeIntervalSinceDate:
setHasChangesSinceLastCallback:
hasChangesSinceLastCallback
addInvocationBlock:
countDidChange:acknowledgementToken:
scopeContainsMailboxObjectID:mailboxTypeResolver:
queryEvaluator
transformMessages:
_filterMessages:potentiallyMatchingMessages:
messageIDHeaderHash
messagesExistWithMessageIDHeaderHash:matchingQuery:
currentThread
threadDictionary
_originalMessagesKeyForKey:
_incrementLocalCount:
_decrementLocalCount:
filterMessages:unmatchedMessages:
predicateIgnoringFlags
evaluateWithObject:
transformAndFilterMessages:
predicate:appliesToFlagChange:
pendingFlagChangesKey
_prepareForChangeWithMessages:changeKey:
_processChangedMessages:changeKey:
persistenceIsAddingMailboxWithDatabaseID:objectID:
persistenceIsDeletingMailboxWithObjectID:
persistenceDidDeleteMailboxesWithObjectIDs:
persistenceDidUpdateServerCount:forMailboxWithObjectID:
persistenceDidUpdateMostRecentStatusCount:forMailboxWithObjectID:
persistenceDidUpdateLastSyncAndMostRecentStatusCount:forMailboxWithObjectID:
persistenceDidAdjustLastSyncAndMostRecentStatusCountBy:forMailboxWithObjectID:
initWithQuery:serverCountMailboxScope:messagePersistence:hookRegistry:observer:
setQuery:
setPredicateIgnoringFlags:
setQueryEvaluator:
setResultsObserver:
cancelationToken
setCancelationToken:
lastCallbackDate
setLastCallbackDate:
_serverCounts
_mailboxesBeingSynced
_seenMessageIDs
_newMessageIDs
_seenMessageIDsLock
_unacknowledgedCallbacks
_callbacksLock
_hasChangesSinceLastCallback
_query
_predicateIgnoringFlags
_serverCountMailboxScope
_queryEvaluator
_resultsObserver
_cancelationToken
_pendingFlagChangesKey
_localCount
_lastCallbackDate
_serverCount
_mostRecentStatusCount
_lastSyncStatusCount
allVIPs
orPredicateWithSubpredicates:
predicateForToMeMessagesWithAccountsProvider:
predicateForCCMeMessagesWithAccountsProvider:
_predicateForRecipientMessagesAddressesKey:accountsProvider:
_addressesFromAccountsProvider:
ef_flatten
expressionForKeyPath:
rightExpression
predicateOperatorType
options
predicateWithLeftExpression:rightExpression:modifier:type:options:
filteredArrayUsingPredicate:
predicateForMessagesInMailboxes:
subpredicates
predicateForAnyMailboxWithPredicate:
compoundPredicateType
initWithType:subpredicates:
predicateWithValue:
_objectIDsFromRightExpression:
databaseIDsForMessageObjectIDs:
expressionForConstantValue:
expressionType
constantValue
initWithSerializedRepresentation:
leftExpression
predicateForAnyRecipientPredicate:
predicateForSenderPredicate:
predicateForSubjectPredicate:
predicateForBody:
predicateForVIPMessagesWithVIPManager:
predicateForIncludesMeMessagesWithAccountsProvider:
predicateForMailboxTypePredicate:mailboxPersistence:
predicateForMessagesWithObjectIDsPredicate:messagePersistence:
predicateForMessageIDPredicate:
predicateForSpotlightPredicate:
tableForName:
initWithColumn:
initPlaceholderMapperWithChildren:
rowIDColumn
initWithChildren:sourceColumn:
bitExpressionForConversationFlag:
initWithColumn:bitExpression:
bitExpressionForAttachments
initWithChildren:table:additionalColumns:
column:
matchesMask:
leftShift:by:
and:with:
rightShift:by:
initWithLeft:firstValue:secondValue:between:
_messageReferencesTableSchema
initWithColumn:tableName:
attachmentsTableName
addressesTableSchema
subjectsTableSchema
summariesTableSchema
protectedMessageDataTableSchema
performDatabaseWorkInBlockWithHighPriority:
ef_reduce:
messagesMatchingQuery:limit:
iterateMessagesMatchingQuery:batchSize:firstBatchSize:limit:cancelationToken:handler:
iteratePersistedMessagesMatchingQuery:limit:cancelationToken:handler:
andPredicateWithSubpredicates:
notPredicateWithSubpredicate:
keyPath
targetClass
_groupMessageObjectIDsByMailboxScope:
noMailboxesScope
databaseID
_databaseIDsForMessageIDHashes:mailboxScope:
allMailboxesScope
initWithName:
notIn:
ef_SQLExpression
persistedMessagesForDatabaseIDs:
messagesForPersistedMessages:mailboxScope:
initWithArray:
mailboxScope
addressesTableName
objectPropertyMapperForSchema:protectedSchema:
partialMessagesTableSchemaAndAssociationsToResolve:
recipientsTableSchemaAndForeignKeysToResolve:associationsToResolve:
attachmentsTableSchemaAndForeignKeysToResolve:
protectedTablesAndForeignKeysToResolve:
initWithConversationPersistence:mailboxPersistence:database:vipManager:
messageObjectIDCriterionExpressionForPredicateValue:
messagesMatchingQuery:
persistedMessagesMatchingQuery:limit:
queryWithExpandedMailboxesFromQuery:
persistedMessageForOutgoingMessage:isDraft:
messagesForMessageObjectIDs:missedMessageObjectIDs:
updateConversationNotificationLevel:forConversationWithID:
requestContentForMessageObjectID:options:delegate:completionHandler:
requestSummaryForMessageObjectID:
conversationPersistence
setConversationPersistence:
_conversationPersistence
messageQuery
mailboxScopeForPredicate:withMailboxTypeResolver:
ef_partition:
sortedArrayUsingDescriptors:
callStackReturnAddresses
setMessageQuery:
_messageQuery
_objectIDsAndUnreadObjectIDsFromMessages:unreadObjectIDs:
predicateForExcludingMessagesWithObjectIDs:
collectionItemID
predicateForMessagesInConversation:
_getInitialResults
isCanceled
pendingJournaledMessageAddsKey
pendingConversationIDChangesKey
initWithObjectsAndKeys:
ef_removeObjectsInArray:
initWithMessageIDHeaderHash:mailboxScope:
_pendingConversationIDChangesKey
_pendingJournaledMessageAddsKey
initWithQueryType:predicate:
queryType
_queryType
_predicate
initWithQueryParser:
parserForPredicate:queryParser:
parseResultsFromPredicate:
queryParser
_queryParser
searchableIndexMapper
isSearchableIndexQueryableKeypath:searchableIndexPropertyMapper:
children
resultQueryType:
parseMixedSubpredicateResults:predicate:
searchableIndex
performSearchableIndexQueryPredicate:propertyMapper:searchableIndex:
initWithAccountsProvider:mailboxPersistence:messagePersistence:vipManager:
propertyMapper
transformPredicate:
sqlQueryForQuery:predicate:
em_searchableIndexQueryGenerator
preferredLanguages
mainBundle
preferredLocalizations
queryExpressionFromPredicate:propertyMapper:languages:
queryString
expressionWithQueryString:
isValid
messageIDsMatchingQuery:
sqlPropertyMapper
sqlQueryForReturnObjectKeypaths:query:propertyMapper:
initWithSchema:protectedSchema:searchableIndex:accountsProvider:vipManager:messagePersistence:mailboxPersistence:
sqlQueryForQuery:
_searchableIndex
_sqlPropertyMapper
_searchableIndexMapper
ef_isTruePredicate
ef_isFalsePredicate
transformCompoundPredicate:
transformComparisonPredicate:
transformSubpredicates:
simplifyCompoundPredicate:
simplifySingleSubpredicate:
predicateForToMeMessages
predicateForCCMeMessages
predicateForVIPMessages
simplifyNotPredicate:
simplifyAndPredicate:
simplifyOrPredicate:
weakObjectsHashTable
initWithCondition:
cancelAllHandlers
promise
future
addSuccessBlock:
addFailureBlock:
finishWithResult:
performQueryOnSerializationQueue
tryLockWhenCondition:
unlock
_performQuery:withObserver:observationIdentifier:completionHandler:
isThreadScopePrecomputed:shouldMigrate:
initWithQuery:threadScope:messagePersistence:threadPersistence:hookRegistry:observer:observationIdentifier:
addCancelable:
queryHandlers
threadQueryHandlers
makeObjectsPerformSelector:
displayMessageObjectID
_performMessageFlagChangeAllAction:
_performMessageFlagChangeAction:returnUndoAction:
_performMessageTransferAllAction:
_performMessageTransferAllActionToSpecialMailbox:
_performMessageTransferAction:returnUndoAction:
_performMessageTransferActionToSpecialMailbox:returnUndoAction:
_performMessageConversationFlagChangeAction:
_performUndoAction:
initWithIndividualActions:
_persistedMesssagesForMessageChangeAction:
_changeFlagsForPersistedMessages:flagChange:returnUndoAction:
setActionType:
setMessageDatabaseIDs:
copyMessages
_undoActionsForMovedMessages:
specialDestinationMailboxType
individualActions
messageDatabaseIDs
actionType
objectIDs
_threadQueryForThreadObjectID:
orderedSetWithArray:
predicateForMessagesWithThreadScope:
completionHandlerAdapter
addChild:withPendingUnitCount:
unlockWithCondition:
resetThreadScopesForMailboxScope:
performQuery:limit:completionHandler:
performCountQuery:completionHandler:
performQuery:withObserver:observationIdentifier:completionHandler:
startCountingQuery:includingServerCountsForMailboxScope:withObserver:completionHandler:
messageListItemsForObjectIDs:loadSummaryForAdditionalObjectIDs:completionHandler:
performMessageChangeAction:returnUndoAction:completionHandler:
requestRepresentationForMessageWithID:options:delegate:completionHandler:
resetPrecomputedThreadScopesForMailboxScope:
setQueryHandlers:
setThreadQueryHandlers:
handlerTokens
setHandlerTokens:
setThreadPersistence:
setMessageChangeManager:
_handlersLock
_queryHandlers
_threadQueryHandlers
_handlerTokens
_threadPersistence
_messageChangeManager
_performQueryOnSerializationQueue
_observationIdentifier
propertiesToMigrate
em_migrateDefault:
initAsEphemeralID:
inMemoryQueryHandler
precomputedQueryHandler
inMemoryObservationIdentifier
_addObjectIDsToMigrate:
precomputedObservationIdentifier
observer:matchedAddedObjectIDs:after:extraInfo:
observer:matchedMovedObjectIDs:after:
_changeObjectIDsToMigrate:
_deleteObjectIDsToMigrate:
_beginMigration
globalAsyncScheduler
beginMigratingThreadScope:
_performMigration
addThreads:
_scheduleCleanupForBatchedObjectIDs:
_failMigration
setInMemoryQueryHandler:
endMigratingThreadScope:
afterDelay:performBlock:
_resumeMigration
deleteThreadsWithObjectIDs:
_objectIDsToMigrate
_recentlyMigratedObjectIDs
_migrationState
_migrationLock
_inMemoryObservationIdentifier
_inMemoryQueryHandler
_precomputedObservationIdentifier
_precomputedQueryHandler
signpostLog
transactionWithDescription:
signpostID
headers
firstHeaderForKey:
messagesForDocumentID:mailboxID:
mailboxScopeForMailboxObjectIDs:forExclusion:
deliverMessageSynchronously:usingMailDrop:
saveDraftMessage:mailboxID:previousDraftObjectID:completion:
deleteDraftsInMailboxID:documentID:previousDraftObjectID:
deliverMessage:usingMailDrop:completion:
outboxContainsMessageFromAccountObjectID:completion:
suspendDeliveryQueue
resumeDeliveryQueue
processAllQueuedMessages
isProcessingWithCompletion:
numberOfPendingMessagesWithCompletion:
initWithMessagePersistence:messageChangeManager:
_workQueue
_processPersistedMessages:
bufferedQueueWithCapacity:batchHandler:
drain
enqueue:
initWithMessagePersistence:query:batchSize:firstBatchSize:limit:handler:
flush
addPersistedMessage:
addPersistedMessages:
shouldCancel
_mailboxScope
_persistedMessageQueue
_remaining
_seenHashes
initWithDirectoryURL:
_commonInitWithVIPManager:
blockedSenderManager
_blockedSenderManager
initWithDelegate:maxConcurrentBackgroundReaders:
setDatabase:
connectionPool
writersWaiting
setupIsComplete
isNestedDatabaseCall
performBlock:isWriter:useTransaction:
performUsingTransaction:isWriter:transactionError:block:
checkOutConnectionIsWriter:
protectedDatabasePersistence
protectedSchema
attachProtectedOrJournalDatabaseToConnectionIfNecessary:withSchema:
protectedDatabaseAttached
protectedDataAvailable
checkInConnection:
currentConnection
writerConnection
setIsWriter:
readerConnection
backgroundReaderConnection
detachProtectedOrJournalDatabaseFromConnectionIfNecessary:
sqlConnection
finalizeStatementsWithError:
reconcileJournalsWithSchema:completionBlock:
setScheme:
setPath:
queryItemWithName:value:
setQueryItems:
openConnectionIsWriter:
urlForDatabasePath:type:
initWithBasePath:databaseName:maxConcurrentReaders:schema:protectedSchema:propertyMapper:protectedDatabasePersistence:
writersAreWaiting
performDatabaseSetupUsingTransaction:block:
closeAllConnections
databaseIsCorrupt
reconcileJournalWithCompletionBlock:
enforceDataProtection
schema
basePath
databaseName
fullPath
setSetupIsComplete:
_setupIsComplete
_schema
_protectedSchema
_propertyMapper
_connectionPool
_protectedDatabasePersistence
_basePath
_databaseName
_fullPath
_databasePathForFileName:
_adjustedDatabaseTypeForType:
initWithBasePath:databaseName:isWriter:delegate:
initWithSQLDB:
close
isWriter
handleSQLResult:message:
_executePreparedStatement:withBlock:description:error:
isEmpty
ef_SQLBinding
bindToStatement:usingIndex:
enumerateBindingIndicesAndValuesUsingBlock:
bindToStatement:usingName:
enumerateBindingNamesAndValuesUsingBlock:
executeUpdateStatement:error:
executeUpsertStatement:error:
executeStatementString:error:
executeDeleteStatement:error:
isOpen
path
openWithError:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_fixFilePermissionForPath:
configureSQLConnection
detachProtectedDatabase
journalDatabaseAttached
detachJournalDatabase
_startTransactionWithSQLConnection:forWriting:
_finishTransactionWithSQLConnection:afterSuccess:transactionError:
transactionTypeForWriting
beginTransaction:error:
commitTransactionWithError:
rollbackTransactionWithError:
tableExists:inDatabase:
columnExists:inTable:database:type:
columnTypeForString:
protectedDatabaseName
journalDatabaseName
_attachDatabaseWithName:url:error:
setProtectedDatabaseName:
attachProtectedDatabaseWithName:error:
_detachDatabaseWithName:
setJournalDatabaseName:
setJournal:
checkOut
attachJournalDatabase:withName:error:
journal
checkIn
initForInMemoryDatabaseIsWriter:delegate:
initWithSQLDB:isWriter:delegate:
executeSelectStatement:withBlock:error:
executeUpdateStatement:rowsChanged:
executeUpsertStatement:rowsChanged:
executeDeleteStatement:rowsChanged:
open
checkForConnectionErrorWithMessage:
tableExists:
columnExists:inTable:type:
attachProtectedDatabaseWithName:
attachJournalDatabase:withName:
_isWriter
_protectedDatabaseName
_journalDatabaseName
_journal
_sqlConnection
weakToStrongObjectsMapTable
initWithCount:
setCacheSize:
connection
_connectionWithType:
_lockForConnectionType:resource:
initWithConnection:generation:
setType:
setResource:
acquireResource
resource
generation
_unlockForConnectionType:resource:
releaseResource:
unionSet:
cacheSize
maxConcurrentReaders
backgroundReadersWaiting
maxConcurrentBackgroundReaders
_cacheLock
_cacheSize
_cacheGeneration
_checkoutLock
_checkoutMap
_writerLock
_writerConnection
_writersWaiting
_maxConcurrentBackgroundReaders
_backgroundReadersWaiting
_backgroundReaderResources
_resource
_connection
_generation
_type
number
referenceCount
journalManager
journalDirectoryPath
_journalNoLongerReferenced:
initWithJournalManager:number:
_referenceCountLock
_referenceCount
_number
_journalManager
fileExistsAtPath:
contentsOfDirectoryAtPath:error:
strongToWeakObjectsMapTable
lastIndex
_getJournalWithBlock:
removeIndex:
_deleteJournalNumber:
firstIndex
removeItemAtPath:error:
deleteQueue
checkExistingQueue
initWithBasePath:
currentJournalCreateIfNeeded:
oldestJournal
mergedJournal:
waitForDeletes
_journalLock
_currentJournal
_shouldDeleteCurrentJournal
_journalNumbers
_pendingDeleteJournalNumbers
_journalsByIndexes
_journalDirectoryPath
_checkExistingQueue
_deleteQueue
_initializeSchemas
_schemaProviders
_schemaWithPopulationBlock:
_protectedSchemaProviders
resolveWithSchema:
resolveToStringForTableNames:
additionalSchemaProviders
dictionaryWithDictionary:
setChildren:
table
additionalColumns
propertiesTableName
ef_resetOnceTokens
propertiesTableSchema
partialMailboxesTableSchema
column
fullNameWithDatabase:
tableName
deleteAction
updateAction
setAsForeignKeyForString:onDelete:onUpdate:
_column
_tableName
_deleteAction
_updateAction
associateWithTable:
persistenceIsInitializingDatabaseWithConnection:
persistenceWillReadMessage:fromRow:
persistenceDidReconcileProtectedData
searchableIndexDidAssignTransaction:toUpdates:withMissingIdentifiers:
searchableIndexDidAssignIndexingType:forIdentifiers:
persistenceIsAddingThreadWithObjectID:journaled:
persistenceIsMarkingThreadAsJournaledWithObjectID:
persistenceIsReconcilingJournaledThreadWithObjectID:
persistenceIsChangingThreadWithObjectID:changedKeyPaths:
persistenceIsDeletingThreadWithObjectID:
persistenceDidFinishThreadUpdates
_initializeMethodSignatures
_proxiedProtocols
_registerSelector:types:
signatureWithObjCTypes:
numberOfArguments
_classForObjectAtArgumentIndex:
_protocolsForObjectAtArgumentIndex:
setWithObject:
setByAddingObject:
_registerHookResponder:withMethodDescription:
methodSignatureForSelector:
selector
_copyRespondersForSelector:
invokeWithTarget:
_messageRespondersWithInvocation:
_registerHookResponder:protocol:
unregisterAllHookResponders
forwardInvocation:
_forwardStackInvocation:
registerDatabaseChangeHookResponder:
registerThreadChangeHookResponder:
registerSearchableIndexHookResponder:
registerMessageReadHookResponder:
registerProtectedDataReconciliationHookResponder:
_hookRespondersBySelector
_methodSignaturesBySelector
objectsPassingTest:
containerURLForSecurityApplicationGroupIdentifier:
baseAccountDirectoryForPersonaIdentifier:
macOS_baseAccountDirectoryForPersonaIdentifier:
objectAtIndex:
addInteractionEvents:
interactionEventsCount
clearInteractionEvents
interactionEventsAtIndex:
setQuotaEvent:
setSubmittedEvent:
setEventData:
allocWithZone:
mergeFrom:
interactionEventsType
hasQuotaEvent
hasSubmittedEvent
hasEventData
readFrom:
writeTo:
copyTo:
interactionEvents
setInteractionEvents:
quotaEvent
submittedEvent
eventData
_eventData
_interactionEvents
_quotaEvent
_submittedEvent
numberWithUnsignedInt:
addEventData:
addEventDataFeatures:
eventDatasCount
clearEventDatas
eventDataAtIndex:
eventDataFeaturesCount
clearEventDataFeatures
eventDataFeaturesAtIndex:
eventDataType
eventDataFeaturesType
setTimestamp:
setHasTimestamp:
hasTimestamp
setSequenceNumber:
setHasSequenceNumber:
hasSequenceNumber
setTimezoneOffset:
setHasTimezoneOffset:
hasTimezoneOffset
setHasVersion:
hasVersion
eventName
setEventName:
setHasEventName:
hasEventName
eventNameAsString:
StringAsEventName:
setUserId:
setHasUserId:
hasUserId
setDeviceId:
setHasDeviceId:
hasDeviceId
setAccountId:
setHasAccountId:
hasAccountId
setMailboxId:
setHasMailboxId:
hasMailboxId
mailboxType
setMailboxType:
setHasMailboxType:
hasMailboxType
mailboxTypeAsString:
StringAsMailboxType:
setConversationId:
setHasConversationId:
hasConversationId
setMessageId:
setHasMessageId:
hasMessageId
timestamp
sequenceNumber
timezoneOffset
userId
deviceId
accountId
mailboxId
conversationId
messageId
eventDatas
setEventDatas:
eventDataFeatures
setEventDataFeatures:
_accountId
_conversationId
_deviceId
_mailboxId
_messageId
_timestamp
_userId
_eventDataFeatures
_eventDatas
_eventName
_mailboxType
_sequenceNumber
_timezoneOffset
_has
setStringValue:
setDoubleValue:
setHasDoubleValue:
hasDoubleValue
setInt64Value:
setHasInt64Value:
hasInt64Value
hasStringValue
_doubleValue
_int64Value
_stringValue
addEventDataFeatureDouble:forKey:
addEventDataFeatureString:forKey:
addEventDataDouble:forKey:
addEventDataString:forKey:
addEventDataInt64:forKey:
messageType
component:fromDate:
_openCurrentLogfile
removeItemAtURL:error:
appendData:
_framedMessage:
_logReachedQuota
_writeTruncationEvent
seekToFileOffset:
bytes
subdataWithRange:
initWithData:
workQueue
_readFramedMessagesIntoBatch:
_truncatedUNIXTimestampFromDate:
uppercaseString
secondsFromGMT
_convertMailboxType:
_fillEvent:fromFeatureData:
monthSalt
getBytes:length:
_truncatedSHA256:
_eventNameFromString:
_eventForName:date:
_fillEvent:fromMessage:conversationID:account:
_fillEvent:fromData:
_writeEvent:
_fillEvent:dataFromMessage:
initWithDirectory:userProfileProvider:saltProvider:contactStore:vipManager:
batchedEventsForSubmission
setMeContactIdentifier:
shouldLog
setShouldLog:
_shouldLog
_monthSalt
changeScheduler
backgroundWorkScheduler
updateLastViewedDateForThreadScope:
unreportedJournaledObjectIDs
threadObjectIDsForThreadScope:sortDescriptors:initialBatchSize:journaledObjectIDs:batchBlock:
threadForObjectID:originatingQuery:error:
_persistenceIsAddingThreadWithObjectID:
performSyncBlock:
threadObjectIDBeforeThreadObjectID:forSortDescriptors:excluding:
pendingPositionChanges
addThreadObjectIDToAdd:before:
reportedJournaledObjectIDs
_persistenceIsChangingThreadWithObjectID:changedKeyPaths:
containsAddedOrDeletedThreadObjectID:
changeForThreadWithObjectID:changedKeyPaths:
pendingChanges
addChange:
_keyPathsAffectSorting:
addThreadObjectIDToMove:before:
observationInfo
addThreadObjectIDToDelete:
objectIDsToAddByBeforeObjectID
objectIDsToMoveByBeforeObjectID
objectIDsToDelete
_messageForPersistedMessage:
displayMessageItemID
filterPredicate
setPendingChanges:
setPendingPositionChanges:
setUnreportedJournaledObjectIDs:
setReportedJournaledObjectIDs:
_changeScheduler
_backgroundWorkScheduler
_pendingChanges
_pendingPositionChanges
_unreportedJournaledObjectIDs
_reportedJournaledObjectIDs
allObjectIDsToAdd
allObjectIDsToMove
setObjectIDsToAddByBeforeObjectID:
setObjectIDsToMoveByBeforeObjectID:
setObjectIDsToDelete:
setAllObjectIDsToAdd:
setAllObjectIDsToMove:
_objectIDsToAddByBeforeObjectID
_objectIDsToMoveByBeforeObjectID
_objectIDsToDelete
_allObjectIDsToAdd
_allObjectIDsToMove
initWithJournalManager:hookRegistry:
supportsJournaling
_scheduleCleanup
_performOnDemandReconciliationForConnection:withSchema:
_ensureProtectedDatabaseOrJournalIsAttachedToConnection:withSchema:
_ensureJournalIsAttachedToConnection:withSchema:
_attachProtectedDatabaseToConnection:withSchema:error:
_isRecoverableError:
_attachJournalDatabaseToConnection:withSchema:
_detachProtectedDatabaseFromConnection:
_detachJournalDatabaseFromConnection:
_initializeDatabase:withConnection:schema:error:
setIsInitialized:
_updateSqliteSequenceForDatabase:schema:withConnection:error:
tables
_allReferencingColumnsForTable:
_maxRowIDForColumn:withConnection:
equalTo:
setWhereClause:
addValue
isMainThread
isReconciling
setIsReconciling:
_reconcileJournalsWithSchema:connection:completionBlock:
_reconcileJournalsWithSchema:connection:
finishJournalReconciliation:
_resultForConnection:success:error:errorMessage:
_mergeSchema:connection:
_isJournalMalformedForSchema:connection:
_mergeTable:connection:
uniqueColumns
columnExpressionWithFullName
_executeUpdateStatement:onConnection:errorMessage:
initWithTable:where:
_executeDeleteStatement:onConnection:errorMessage:
_executeStatementString:onConnection:errorMessage:
allowCleanupActivity
addAdditionalCriteriaToCleanupActivity:
_databaseIDsToDeleteForTable:
_deleteDatabaseIDs:fromTable:
nullable
_removeExistingDatabaseIDs:withColumn:connection:
columns
foreignKeyReferences
associatedColumns
initWithBasePath:hookRegistry:
reconciliationQueue
_initializationLock
_reconciliationLock
_isInitialized
_isReconciling
_reconciliationQueue
remoteObjectInterface
daemonInterfaceFactory
messageRepository
outgoingMessageRepository
accountRepository
clientState
setClientState:
fetchController
mailboxRepository
vipManagerInterface
activityRegistry
exportedInterface
getMessageRepositoryInterface:
getOutgoingMessageRepositoryInterface:
getAccountRepositoryInterface:
getFetchControllerInterface:
getMailboxRepositoryInterface:
getClientStateInterface:
getSearchableIndexInterface:
getInteractionLoggerInterface:
getVIPManagerInterface:
getActivityRegistryInterface:
debugStatusWithCompletionHandler:
launchForEarlyRecovery:
initWithConnection:daemonInterfaceFactory:
clientConnection
_accountRepository
_mailboxRepository
_messageRepository
_outgoingMessageRepository
_fetchController
_vipManagerInterface
_activityRegistry
_clientConnection
_daemonInterfaceFactory
_clientState
_dropTable:connection:
_dropThreadCategoriesIndex:
_createTempMessagesTable:
_recreateMessagesIndices:
_copyMessagesData:
_swapMessagesTables:
_truncateTable:connection:
_recreateThreadsTable:
_recreateThreadsIndices:
definitionWithDatabase:
setIndexDelegate:
searchableIndexBundleID
initWithName:protectionClass:bundleIdentifier:
initWithName:protectionClass:
schedulableDelegate
hasAvailableIndexingBudgetForSearchableIndexSchedulable:
budgetedTimeRemainingForSearchableIndexSchedulable:
budgetedItemCountRemainingForSearchableIndexSchedulable:
isPluggedIn
_queueRefresh
_queueTransitionActive:fromRefresh:
_scheduleSpotlightVerificationOnIndexingQueueWithCompletion:
_processSpotlightVerificationWithCompletion:
lockWhenCondition:
_transitionWithBudgetTimeUsed:
_verifySpotlightIndex
_setForeground:
baseMailDirectory
_localClientStateURL
dataWithContentsOfURL:options:error:
clientStateFromData:
archiveRepresentation
writeToURL:options:error:
initWithCoalescingAction:
coalesceValue:
csIndex
_localClientState
_saveLocalClientState:
transaction
_dataSourceInvalidateItemsGreaterThanTransaction:completion:
fetchLastClientStateWithCompletionHandler:
_countOfItemsInPendingQueues
_eventDataForTransitionState:
searchableIndexSchedulable:didGenerateImportantPowerEventWithIdentifier:eventData:
_suspend
indexingDidResumeForSearchableIndexSchedulable:
_resume
attachmentPersistentIDFromItemIdentifier:
ef_countObjectsPassingTest:
dataSource
searchableIndex:assignTransaction:updates:
_dataSourceScheduleWork:
initWithIdentifier:
setItemsRequiringIndexing:
_dataSourceAssignTransaction:updates:completion:
searchableIndex:invalidateItemsGreaterThanTransaction:
isPerformingBlockAffectingDataSourceAndIndex
updatesForSearchableIndex:excludingIdentifiers:count:
removedIdentifiers
dataSourceRefreshReasons
removeItemsWithIdentifiers:reasons:fromRefresh:
itemsRequiringIndexing
indexItems:fromRefresh:immediately:
removedDomainIdentifiers
removeItemsForDomainIdentifier:
isDataSourceIndexingPermitted
didFinishIndexingBacklogForSearchableIndexSchedulable:
_throttleRequestedSize:targetTime:action:
initWithDataSource:
verifyDataSamplesWithCompletionHandler:queue:
indexingType
isIncrementalIndexingType:
indexingTypeForSearchableIndex:item:
setIndexingType:
searchableIndex:assignIndexingType:forIdentifiers:
verificationDataSamplesForSearchableIndex:
_coalescingTimerFired
_queueConsumeBudgetElapsedPeriod:
searchableIndexSchedulable:didIndexForTime:
searchableIndexSchedulable:didIndexItemCount:
_fetchLastClientState
_stopCoalescingTimer
_scheduleProcessPendingItemsFromRefresh:
_startCoalescingTimer
_queueContentsAllowsRefresh
_scheduleDataSourceRefresh
_scheduleSpotlightVerification
searchableIndexSchedulable:didGeneratePowerEventWithIdentifier:eventData:
_logSignpostForIndexingBatchStartWithPendingItemsCount:
_consumeBatchOfSize:
_getDomainRemovals:identifierRemovals:
_nextTransaction
setTransaction:
_invalidateCache
globalAsyncSchedulerWithQualityOfService:
_processDomainRemovals:
updates
setRemovedDomainIdentifiers:
_logSignpostForIndexingBatchAssignedDomainRemovalCount:
beginIndexBatch
_processIndexingBatch:clientState:itemsNotIndexed:
_processIdentifierRemovals:
errorOnlyCompletionHandlerAdapter
endIndexBatchWithClientState:completionHandler:
onScheduler:then:
arrayByExcludingObjectsInArray:
identifiers
setRemovedIdentifiers:
_logSignpostForIndexingBatchAssignedUpdatesWithItemsIndexedCount:
nullFuture
_noteNeedsLastClientStateFetch
futureWithError:
onScheduler:recover:
result:
canIndexAttachments
_logSignpostForIndexingBatchCompletedWithItemsIndexedCount:
_processRefreshRequestWithCompletion:
beginUpdatesAffectingDataSourceAndIndex
endUpdatesAffectingDataSourceAndIndex
estimatedSizeInBytes
removeObjectsInRange:
purgeReasons
exclusionReasons
initWithPurgeReasons:exclusionReasons:
fetchIndexableAttachments
skipIndexExclusionCheck
shouldExcludeFromIndex
searchableItem
attributeSet
addTransactionValueToAttributeSet:
alwaysMarkAsIndexed
onScheduler:map:
join:
indexSearchableItems:completionHandler:
searchableIndex:foundAttachmentPaths:forMessagePersistentID:
attachmentPaths
uniqueIdentifier
deleteSearchableItemsWithDomainIdentifiers:completionHandler:
deleteSearchableItemsWithIdentifiers:completionHandler:
purgedIdentifiers
changeStateOfSearchableItemsWithUIDs:toState:
_pendingIdentifiers
_dataSourceRequestNeededUpdatesExcludingIdentifiers:completion:
_dataSourceVerifyRepresentativeSampleWithCompletion:
defaultSearchableIndex
_issueCommand:completionHandler:
_dataSourceAssignTransaction:forIdentifiers:completion:
reindexAllItemsWithOptions:acknowledgementHandler:
searchableIndex:reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
searchableIndex:reindexAllSearchableItemsWithAcknowledgementHandler:
removeAllIdentifiers
deleteAllSearchableItemsWithCompletionHandler:
indexItems:immediately:
removeIdentifier:
_preprocessItemIfNecessary:fromRefresh:
ef_indexWhereObjectWouldBeInserted:usingComparator:
removeLastObject
hasCompleteData
setObject:atIndexedSubscript:
_queueConsumeBudgetItemCount:
_dataSourcePrepareToIndexItems:fromRefresh:withCompletion:
currentReasons
childIdentifiersToRemoveFromSearchableIndex:whenRemovingParentIdentifiers:
arrayByAddingObjectsFromArray:
searchableIndex:willRemoveIdentifiers:type:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
addIdentifiers:withReasons:
domainIdentifier
removeAllItemsWithAcknowledgementHandler:
setCompletionBlock:
setResultsBlock:
setFailureBlock:
queryWithExpression:builder:
progress
addSearchQueryCancelable:
start
removeSearchQueryCancelable:
isFullTextSearchableCriterion
setCriterion:
shouldCancelSearchQuery
spotlightQueryString
requiresPreprocessing
removeItemsWithIdentifiers:
reasonProvider
isValidTransaction:
userHandle
searchableIndexDidThrottle:
searchableIndexDidFinishThrottle:
dataForSearchableIndex:itemIdentifier:typeIdentifier:error:
fileURLForSearchableIndex:itemIdentifier:typeIdentifier:inPlace:error:
dataSamplesForSearchableIndexVerifier:searchableIndex:
searchableIndexForSearchableIndexVerifier:
setDataSourceIndexingPermitted:
indexName
pendingIndexItemsCount
reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
reindexAllSearchableItemsWithAcknowledgementHandler:
initWithName:dataSource:reasonProvider:
copyDiagnosticInformation
_powerStateChanged
_registerDistantFutureSpotlightVerification
_transaction
suspend
resume
setPersistenceAvailable:
isPersistenceAvailable
isActive
resumeCount
performBlockAffectingDataSourceAndIndex:
issueDiagnosticsRequestForMessageRowId:
indexedEmptySubjectIdentifers
indexItems:
removeAllItems
identifiersMatchingCriterion:
removeMessages:
indexMessages:includeBody:indexingType:
markMessagesAsPrinted:
logPowerEventWithIdentifier:eventData:
powerObservable
waitForAsynchronousWork
setDataSource:
setReasonProvider:
setSchedulableDelegate:
setCsIndex:
setSkipIndexExclusionCheck:
clientStateFetched
setClientStateFetched:
setSearchableIndexBundleID:
coalescingDelaySeconds
setCoalescingDelaySeconds:
_indexName
_stateTransitionQueue
_coalescingTimer
_resumeCount
_throttledIndexingBatchSize
_throttledDataSourceBatchSize
_currentMaximumBatchSize
_batchIndexingActivity
_pendingItems
_preprocessingItems
_pendingDomainRemovals
_pendingIdentifierRemovals
_indexingQueue
_dataSourceQueue
_preprocessingScheduler
_mainThreadAccessibleIvarLock
_indexingBatchScheduler
_searchResultsCache
_isActive
_needsRefresh
_needsVerification
_coalesceTimerFired
_scheduledProcessing
_scheduledRefresh
_scheduledVerification
_indexImmediately
_countOfBlocksAffectingDataSourceAndIndex
_dataSourceIndexingPermitted
_persistenceAvailable
_skipIndexExclusionCheck
_clientStateFetched
_dataSource
_reasonProvider
_schedulableDelegate
_csIndex
_searchableIndexBundleID
_coalescingDelaySeconds
criterion
mailboxIDs
isEqualToIndexSet:
setMailboxIDs:
_criterion
_mailboxIDs
_identifiersPassingReasonsTest:
setWithSet:
deletedIdentifiers
setPurgeReasons:
setExclusionReasons:
_reasonsByIdentifier
_purgeReasons
_exclusionReasons
substringFromIndex:
identifierForAttachmentPersistentID:
setRequiresPreprocessing:
attributeSetForFilePromise
metadatum
attachmentFileURL
setRelatedUniqueIdentifier:
accountIdentifier
setAccountIdentifier:
mailboxIdentifiers
setMailboxIdentifiers:
senderAddress
emailAddressWithString:
recipientAddresses
emailAddressesFromStrings:invalidAddresses:
dateSent
markAsSent:sender:senderHandle:recipients:recipientHandles:transport:
markAsReceived:sender:senderHandle:recipients:recipientHandles:transport:
markAsDownloaded:userHandle:
initWithUniqueIdentifier:domainIdentifier:attributeSet:
distantFuture
setExpirationDate:
ef_notSupportedError
attributesOfItemAtPath:error:
fileSize
underlyingData
setUnderlyingData:
initWithAttachmentPersistentID:messagePersistentID:metadatum:
attachmentPersistentID
setAttachmentPersistentID:
setMetadatum:
setAttributeSetForFilePromise:
searchableItemProcessingDelay
setSearchableItemProcessingDelay:
_searchableItem
_requiresPreprocessing
_underlyingData
_indexingType
_attachmentPersistentID
_metadatum
_attributeSetForFilePromise
_searchableItemProcessingDelay
isReadableFileAtPath:
setDomainIdentifier:
setSenderAddress:
setRecipientAddresses:
setDateReceived:
setDateSent:
initWithAttachmentFileURL:builder:
canReadAttachmentFile
_attachmentFileURL
_domainIdentifier
_accountIdentifier
_mailboxIdentifiers
_senderAddress
_recipientAddresses
_dateReceived
_dateSent
initWithTime:periodDuration:numberOfItemsToIndexOnResume:
registerDefaults:
doubleForKey:
periodDuration
time
numberOfItemsToIndexOnResume
defaultConfiguration
initWithTime:periodDuration:numberOfItemsToIndexOnResume:enableActivityBasedScheduling:autoStartMaintenanceIndexing:
enableActivityBasedScheduling
setEnableActivityBasedScheduling:
autoStartMaintenanceIndexing
setAutoStartMaintenanceIndexing:
_enableActivityBasedScheduling
_autoStartMaintenanceIndexing
_time
_periodDuration
_numberOfItemsToIndexOnResume
initWithKeyName:searchable:searchableByDefault:unique:multiValued:
initWithDictionary:
ef_posixLocale
setLocale:
setDateFormat:
setSystemBuildVersion:
setTransactionDate:
transactionValue
transactionAttributeKey
setValue:forCustomKey:
transactionDate
systemBuildVersion
_transactionValue
_transactionDate
_systemBuildVersion
initWithMessage:bodyData:fetchBody:
initWithIdentifier:message:bodyData:fetchBody:
_indexingPriorityByIndexingType:
accountIdentifierForMessage:
domainIdentifierForAccountID:mailboxPersistentID:
URLString
csIdentifierForMailbox:
domainIdentifierForMessage:
bodyData
setBodyData:
setMailRead:
setMailFlagged:
setMailRepliedTo:
setMailConversationID:
setMailGMailLabels:
mailboxIdentifiersForMessage:result:
setIdentifier:
setContentCreationDate:
setMailDateReceived:
setAuthors:
setPrimaryRecipients:
setAdditionalRecipients:
setHiddenAdditionalRecipients:
headersDictionary
setEmailHeaders:
isPartOfExistingThread
setExistingThread:
setPartiallyDownloaded:
setDataOwnerType:
setAccountHandles:
csAccountTypeString
setAccountType:
bestAlternativePart:
setHasCompleteData:
setHTMLContentData:
addStaticAttributesToAttributeSet:
initWithItemContentType:
externalDataTypeIdentifiers
setProviderDataTypeIdentifiers:
_addStaticAttributesToAttributeSet:
addAttachmentAttributesToAttributeSet:
addUpdatableAttributesToAttributeSet:
addFlagsAttributesToAttributeSet:
setIsUpdate:
itemWithMessage:bodyData:fetchBody:
itemWithIdentifier:message:bodyData:fetchBody:
fetchBody
_fetchBody
_hasCompleteData
_bodyData
displayNameFromAddress:
initWithDisplayName:handles:handleIdentifier:
characterAtIndex:
compare:options:range:
setScheduling:
_filterInMessagesWithValidPersistentIDsFromMessages:
initWithDatabase:hookResponder:
removeAllItemsFromIndexAndWait:
attachmentID
setAttachmentID:
_attachmentID
searchableMessagesTableSchema
searchableAttachmentsTableSchema
searchableMessageTombstonesTableSchema
searchableMessagesTableName
_searchableIndexMessageIndexingTypes
_messagesRequiringIndexingForType:excludingIdentifiers:limit:
searchableIndexItemsFromMessages:type:
_identifiersForRemovedItemsUsingConnection:
_identifiersForTombstonesOfType:connection:
_attachmentDataForItemsRequiringIndexingExcludingIdentifiers:limit:connection:
_attachmentItemsFromAttachmentData:
messagesRowIDWhereSubClause
messagesWhere:sortedBy:limit:
_canPerformIncrementalIndexForIdentifier:indexingType:
_addTombstonesForIdentifiers:type:connection:
hasUpdates
_assignIndexedItems:transaction:connection:
_assignTombstonesForIdentifiers:type:transaction:connection:
_purgeSpotlightTombstonesBeforeTransaction:connection:
_removeIndexedIdentifiers:connection:
_messageIDTransactionIDDictionaryToVerifyUsingConnection:
verificationDataSamplesFromMessageIDTransactionIDDictionary:
clearBindingsWithError:
resetWithError:
_assignIndexedItems:connection:query:indexedBindingsGenerator:
_assignIndexedAttachmentItems:transaction:connection:
_identifiersForDeletedMessagesUsingConnection:
_identifiersForDeletedAttachmentsUsingConnection:
attachmentItemMetadataForAttachmentID:messagePersistentID:name:result:
toEmailAddresses
em_stringForQuotingWithCharacter:
queryStringByJoiningQueries:withOperand:
recipientEmailAddresses
ef_all:
transformDataForVerification:
expressionFromDataSamples:
verifySearchableItem:againstExpectedData:
fetchAttributes
deferrableActivityTypes
budgetTimeUserDefaultsKeyForIndexName:
_budgetTimeFromUserDefaults
_startScheduling
_stopScheduling
budgetConfiguration
setBudgetedItemCountRemaining:
beginIndexingForActivityType:activity:
activityTypes
_xpcCriteriaBuilderBlockForActivityType:
_xpcActivityIdentifierForActivityType:
indexingStateQueue
_stopAllIndexing
activities
indexingEnabledForActivityTypes
_setBudgetedTimeRemaining:
_enableIndexingForActivityType:
_logIndexingPowerEventWithIdentifier:additionalEventData:usePersistentLog:
_beginIndexingForActivityType:activity:
isDeferrableActivityType:
_disableIndexingForActivityType:defer:
_stopIndexingForActivityType:shouldDeferIfPossible:
_isIndexingEnabledForActivityType:
_isIndexingEnabledByActivities
_setDataSourceIndexingPermitted:
schedulable
budgetTimeUserDefaultsKey
setDouble:forKey:
_deferActivitiesIfNecessary
budgetedTimeRemaining
budgetedItemCountRemaining
initWithSchedulable:budgetConfiguration:
deferIndexingForActivityType:
isIndexingEnabledForActivityType:
setNoActivityIndexingTime:
noActivityIndexingTime
setMaintenanceIndexingTime:
maintenanceIndexingTime
setBudgetedTimeRemaining:
isScheduling
setBudgetTimeUserDefaultsKey:
setIndexingStateQueue:
setActivities:
setIndexingEnabledForActivityTypes:
_scheduling
_budgetedTimeRemaining
_budgetedItemCountRemaining
_noActivityIndexingTime
_maintenanceIndexingTime
_schedulable
_budgetConfiguration
_budgetTimeUserDefaultsKey
_indexingStateQueue
_activities
_indexingEnabledForActivityTypes
containsString:
_itemsRequiringIndexing
_removedIdentifiers
_removedDomainIdentifiers
setFetchAttributes:
finishWithResult:error:
_failingSamples:tester:
_addFailingSamples:toResultDictionary:
_verifySamples:
contentIndexTransactionId
combine:
indexVerificationActivity
setIndexVerificationActivity:
_indexVerificationActivity
setToEmailAddresses:
setDeleted:
setContentIndexTransactionId:
indexedAsEmptySubject
setIndexedAsEmptySubject:
setUserInfo:
_subject
_toEmailAddresses
_deleted
_contentIndexTransactionId
_flags
_indexedAsEmptySubject
_userInfo
initWithMachServiceName:
initWithDaemonInterfaceFactory:listener:
valueForEntitlement:
setExportedInterface:
setExportedObject:
removeRemoteClient:
setInterruptionHandler:
setInvalidationHandler:
addRemoteClient:
connectedClients
endpoint
listener:shouldAcceptNewConnection:
initWithDaemonInterfaceFactory:
serverXPCEndpoint
listener
setListener:
setConnectedClients:
setDaemonInterfaceFactory:
_listener
_connectedClients
mailboxIDForMailboxURL:useNumericSearch:supportsLabels:
initWithDatabase:gmailLabelPersistence:mailboxID:useNumericSearch:supportsLabels:
serverMessagesTableSchema
serverLabelsTableSchema
unsignedIntValue
_remoteIDStringForRemoteIDArray:
_serverMessagesWithWhereClause:limitClause:returnLastEntries:
_serverMessageForRow:connection:
setRead:
setReplied:
setFlagged:
setDraft:
setForwarded:
setRedirected:
setJunkLevelSetByUser:
setJunkLevel:
setFlagColor:
setPersistentID:
remoteIDObject
imapUID
_addLabels:removeLabels:forUID:connection:
useNumericSearch
hasChanges
messageCount
unreadMessageCount
undeletedMessageCount
maximumIMAPUID
minimumIMAPUID
deleteAllServerMessagesInMailbox
_supportsLabels
_useNumericSearch
substringWithRange:
enumerateTagsForString:range:unit:scheme:options:orthography:usingBlock:
_stopObservingNetworkReachability
executionQueue
setBackOffInterval:
_cancelTimer
setPendingWaitingForNetwork:
setWork:
canceledCallback
setCanceledCallback:
_doScheduleTask:canceledCallback:
task
initialDelay
timerSource
_incrementBackoffInterval
backOffInterval
setTimerSource:
setTask:
observeForNetworkReachability
isReachable
work
_startObservingNetworkReachability
sharedNetworkObserver
_reportReachabilityChange:
addNetworkReachableObserver:selector:
isNetworkReachable
setIsReachable:
pendingWaitingForNetwork
maxBackOffInterval
setMaxBackOffInterval:
backoffMultiplier
setBackoffMultiplier:
setExecutionQueue:
_observeForNetworkReachability
_isReachable
_pendingWaitingForNetwork
_initialDelay
_maxBackOffInterval
_backoffMultiplier
_timerSource
_executionQueue
_backOffInterval
_task
_canceledCallback
_work
initWithName:columns:primaryKeyColumns:conflictResolution:
_precomputedThreadScopesFuture
initWithResultColumn:table:
leftOuterJoin:sourceColumn:targetColumn:
addResultColumn:
addResultColumn:fromTable:
dataValue
mailboxScopeForMailboxTypes:forExclusion:
unarchivedObjectOfClass:fromData:error:
initWithMailboxScope:filterPredicate:
initWithDatabaseID:needsUpdate:
lazyFutureWithBlock:
featureEnabled:
_threadScopeInfoForThreadScope:
needsUpdate
_shouldPrecomputeThreadScope:
mailboxTypes
precomputedThreadScopesFuture
futureWithResult:
then:
setPrecomputedThreadScopesFuture:
excludeTypes
excludeMailboxes
_shouldPrecomputeMailboxType:
_shouldPrecomputeMailboxWithURL:
mailboxTypesToPrecompute
_databaseIDForThreadScope:
_threadScopesForMailboxScope:
_enumerateThreadObjectIDsForThreadScope:filterClause:sortDescriptors:batchBlock:
setWhere:
_addOrderByToThreadSelect:forSortDescriptors:
_databaseIDForThreadObjectID:
_mailboxObjectIDsForThreadDatabaseID:
_sendersForThreadDatabaseID:
_recipientsOfType:forThreadDatabaseID:
table:column:
setLimit:
initWithHash:
messageCollectionItemIDForMessageIDHeaderHash:mailboxScope:
messageCollectionItemIDForDatabaseID:
dateValue
initWithPrefix:subjectWithoutPrefix:
_flagColorsFromRow:
areAnyEmailAddressesBlocked:
join:sourceColumn:targetColumn:
orderByColumn:fromTable:ascending:
setDisplayName:
_threadExpressionForThreadScopeDatabaseID:conversation:
_comparisonExpressionForSortDescriptors:threadExpression:threadScopeDatabaseID:
initWithLeft:operator:right:
_messageThreadExpressionForThreadObjectID:
_senderDatabaseIDsAndDatesForMessages:
_senderAddressesExpressionForMessages:
ef_isLaterThanDate:
_recipientDatabaseIDsAndDatesForMessages:recipientType:
_recipientAddressesExpressionForRecipientType:messages:
_threadDatabaseIDExpressionForThreadScopeDatabaseID:conversation:
_addThreadScopeToDatabaseWithMailboxType:needsUpdate:connection:
predicateForMessagesInMailboxesWithObjectIDs:
_addPersistedMessages:journaled:
_inactiveMailboxDatabaseIDsForMailboxScope:forThreadScopeDatabaseID:
inSelect:
_updateThreadForDeleteWithObjectID:threadScopeDatabaseID:
setDistinct:
_addThreadScopeToDatabase:withMailboxDatabaseID:needsUpdate:connection:
_setThreadScopeInfo:forThreadScope:
_threadForWrappedMessages:objectID:
_addThread:replaceExisting:wrappedMessages:threadScopeDatabaseID:journaled:
_updateThread:wrappedMessages:threadScopeDatabaseID:journaled:
_iterateWrappedMessagesByConversationForPersistedMessages:block:
_displayWrappedMessageForWrappedMessages:newestReadWrappedMessage:
_addMailboxesFromWrappedMessages:toThreadWithExpression:
_senderDatabaseIDsAndDatesForThreadWithObjectID:
_addSenders:toThreadWithDatabaseID:
_recipientDatabaseIDsAndDatesForThreadWithObjectID:recipientType:
_addRecipients:ofType:toThreadWithDatabaseID:
_updateThreadTableWithThread:wrappedMessages:threadScopeDatabaseID:journaled:
_senderDatabaseIDsAndDatesForWrappedMessages:
_recipientDatabaseIDsAndDatesForWrappedMessages:recipientType:
_upsertForThreadsWithThreadScopeDatabaseID:conversation:
updateValue
_countMessagesForExpression:
excludedColumnExpressionForColumnName:
_addKeyPathsForBasicPropertiesChangeToKeyPaths:
_newestUnreadWrappedMessagesForWrappedMessages:newestReadWrappedMessage:
_updateNewestReadMessageWithWrappedMessage:threadExpression:
_updateDisplayMessageWithUnreadWrappedMessages:threadExpression:
_addKeyPathsForDisplayMessageChangeToKeyPaths:
_mailboxDatabaseIDsForWrappedMessages:
initWithTable:conflictTarget:
_persistenceIsChangingFlags:wrappedMessages:threadObjectID:threadScopeDatabaseID:
initWithResult:table:
ifNull:second:
notEqualTo:
_recalculateDisplayMessageForThreadObjectID:threadScopeDatabaseID:
_recalculateNewestReadMessageForThreadObjectID:threadScopeDatabaseID:
_deleteWrappedMessages:fromThreadWithObjectID:threadScopeDatabaseID:
_deleteMailboxesFromWrappedMessages:fromThreadWithDatabaseID:messageThreadExpression:
_updateBasicPropertiesAfterDeleteForThreadObjectID:threadScopeDatabaseID:
_deleteSendersFromThreadWithDatabaseID:messageThreadExpression:
_deleteRecipientsOfType:fromThreadWithDatabaseID:messageThreadExpression:
notInSelect:
_messagesAreJournaledForThreadWithObjectID:
reconciliationCleanupScheduler
_threadScopesByDatabaseID
sortDescriptorWithKey:ascending:
_wrappedMessagesByThreadScopeForPersistedMessages:
_persistedMessagesByPossibleThreadScopeForPersistedMessages:
_wrappedMessageForPersistedMessages:threadScope:
initWithMessage:databaseID:
_threadQueryForThreadScope:
ef_addAbsentObjectsFromArrayAccordingToEquals:
_iterateNewestUnreadWrappedMessagesInWrappedMessages:iteratorBlock:
orderByColumn:ascending:
addResult:alias:
ef_isEarlierThanDate:
isEqualToDate:
enumerateObjectsWithOptions:usingBlock:
insertValue
concatenate:
countDistinct:
_messageMailboxesExpressionForMailboxScope:
_messageFilterExpressionForFilterPredicate:
initWithMessage:messagePersistence:
initWithMessagePersistence:database:hookRegistry:vipManager:blockedSenderManager:
setReconciliationCleanupScheduler:
_reconciliationCleanupScheduler
_databaseID
_needsUpdate
setMailboxScope:
initWithCollectionItemID:mailboxScope:
_messageObjectIDForCollectionItemID:
serviceName
setArray:
UUID
serialQueue
setServiceName:
setSerialQueue:
_serviceName
_serialQueue
setConversationIDsBySyncKey:
cloudStorage
_pruneDatabase:
conversationIDsBySyncKey
_syncKeyForConversationID:
ef_UUID
_setCloudStorageValue:forKey:
_synchronize
unmatchedKeys
keysOfEntriesPassingTest:
dateWithTimeIntervalSinceNow:
_mergeServerChanges:
setCloudStorage:
queue
setQueue:
setUnmatchedKeys:
_cloudStorage
_conversationIDsBySyncKey
_unmatchedKeys
setNumberStyle:
numberFromString:
initWithDirectoryURL:keyValueStore:contactStore:
URLByAppendingPathComponent:isDirectory:
_loadVIPs
_updateLocalWithCloud:refresh:
_keyValueStoreChanged:
operationQueue
_allVIPEmailAddresses
allVIPEmailAddresses
keyValueStore
isSubsetOfSet:
initWithIdentifier:name:emailAddresses:
_contactForName:emailAddresses:
_isVIPForContact:orAddresses:
stringFromContact:style:
_saveVIPs
_removeVIPsWithIdentifiers:
_vipsDictionary
plistURL
propertyListWithData:options:format:error:
_saveVIPsLocally
_updateCloudWithLocal
_serializedData
dataWithPropertyList:format:options:error:
_cloudKeyForIdentifier:
_validatedCloudVIPFromStore:withCloudKey:
isEqualToSet:
_mergeVIPs
stringByReplacingOccurrencesOfString:withString:options:range:
componentsFromString:
givenName
familyName
intersectSet:
predicateForContactsMatchingEmailAddress:
_contactDescriptors
unifiedContactsMatchingPredicate:keysToFetch:error:
predicateForContactsMatchingName:
_contactFromContacts:matchingMostAddresses:
descriptorForRequiredKeysForStyle:
vipWithIdentifier:
saveVIPs:
removeVIPsWithIdentifiers:
removeVIPsWithEmailAddresses:
hasVIPs
_vipsByIdentifier
_cachedEmailAddresses
_keyValueStore
_operationQueue
_plistURL
observer:gotVIPs:
observer:updatedVIPs:removedVIPs:
registerObserver:observationIdentifier:
_observersLock
archivedDataWithRootObject:requiringSecureCoding:error:
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
@"ACAccount"16@0:8
@"NSArray"16@0:8
v24@0:8@"NSString"16
v16@0:8
@24@0:8q16
@"<EDDeliveryAcount>"16@0:8
v24@0:8@"<EDDeliveryAcount>"16
@"<ECMailbox>"24@0:8q16
B24@0:8@"NSURL"16
@24@0:8@16
@"NSObject<OS_os_log>"16@0:8
v24@0:8@"NSArray"16
v24@0:8@"<EDAccount>"16
@32@0:8@16@24
v24@0:8@?16
v32@0:8@16@24
@"EDAccountECAccountTransformer"
@"NSMutableDictionary"
@"<EDAccountsProvider>"
@"EDPersistenceHookRegistry"
@32@0:8q16@24
v40@0:8@16@24@32
v40@0:8@16q24q32
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<EDActivityHookResponder>"
v24@0:8@"EMActivity"16
v40@0:8@"EMActivityObjectID"16@24@"NSString"32
v40@0:8@"EMActivityObjectID"16q24q32
v32@0:8@"EMActivityObjectID"16@"NSError"24
v24@0:8@"EMActivityObjectID"16
v32@0:8@16@?24
v32@0:8@"<EMActivityObserver_xpc>"16@?<v@?@"<EFCancelable>"@"NSArray"@"NSError">24
@"NSMutableSet"
@"EDActivityPersistence"
i24@0:8@16
i24@0:8@"EDPersistenceDatabaseConnection"16
@40@0:8@16@24@32
@32@0:8@16@?24
@56@0:8@16q24q32q40@?48
q16@0:8
@?16@0:8
v24@0:8q16
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"EDAssetDownloadScheduler"
@"NSObject<OS_xpc_object>"
@40@0:8@16Q24^@32
@"NSArray"40@0:8@"NSArray"16Q24^@32
@"<EDMailboxPredictor>"
@"NSCache"
@48@0:8@16@24@32@40
@"EDInteractionLogger"
@"EDDonationController"
@"EDInteractionEventLogUploader"
@"EDInteractionEventLogFile"
v20@0:8B16
@24@0:8@?16
@"NSArray"
v40@0:8@16@24@?32
@"NSCloudKitMirroringDelegateOptions"
@"NSPersistentContainer"
@"EDTaskScheduler"
@"<EDConversationDailyCloudExporterDelegate>"
@"EDUbiquitousConversationManager"
v40@0:8@16@24q32
v40@0:8@"<EDConversationRemoteStorage>"16@"NSDictionary"24q32
v24@0:8@"<EDConversationRemoteStorage>"16
v32@0:8@"NSMutableDictionary"16@"NSString"24
@"NSDictionary"24@0:8@"NSString"16
@"NSDictionary"16@0:8
v44@0:8@16@24@32B40
v36@0:8@16@24B32
@"<EDConversationRemoteStorageDelegate>"
@"<EDConversationRemoteStorage>"
@"EDConversationRemoteCloudKitStorage"
@"EDTransactionService"
@32@0:8^@16^@24
q24@0:8Q16
Q24@0:8q16
v48@0:8Q16@24q32q40
q24@0:8@16
@32@0:8q16Q24
v32@0:8@16q24
v24@0:8d16
v48@0:8Q16@"NSString"24q32q40
q24@0:8@"NSArray"16
@"NSArray"32@0:8q16Q24
v32@0:8@"NSArray"16q24
@32@0:8q16q24
@"NSArray"32@0:8q16q24
@"NSArray"32@0:8^@16^@24
v28@0:8@16B24
v40@0:8Q16@24q32
v48@0:8q16Q24Q32q40
@"EDPersistenceDatabase"
v56@0:8@16@24@32Q40@48
v48@0:8@16@24Q32Q40
v32@0:8@"NSFetchedResultsController"16@"NSDiffableDataSourceSnapshot"24
v32@0:8@"NSFetchedResultsController"16@"NSOrderedCollectionDifference"24
v56@0:8@"NSFetchedResultsController"16@24@"NSIndexPath"32Q40@"NSIndexPath"48
v48@0:8@"NSFetchedResultsController"16@"<NSFetchedResultsSectionInfo>"24Q32Q40
v24@0:8@"NSFetchedResultsController"16
@"NSString"32@0:8@"NSFetchedResultsController"16@"NSString"24
@32@0:8@16^@24
@"EDCloudMirroringPersistentStore"
@"NSFetchedResultsController"
@"NSManagedObjectContext"
@"NSPersistentHistoryToken"
@"NSUbiquitousKeyValueStore"
@"EDPersistence"
@"EDCategorySubsystem"
@24@0:8d16
d16@0:8
@"NSDate"
v32@0:8q16q24
v32@0:8q16@24
v44@0:8@16q24@32B40
v24@0:8@"<ECMessage>"16
v28@0:8@"NSArray"16B24
v32@0:8@"NSData"16@"<ECMessage>"24
v32@0:8@"NSArray"16@"<ECMessage>"24
v32@0:8@"ECMessageFlagChange"16@"NSArray"24
v40@0:8@"NSSet"16@"NSSet"24@"NSArray"32
v32@0:8q16@"NSArray"24
v32@0:8@"ECAngleBracketIDHash"16@"<ECMessage>"24
v44@0:8@"NSArray"16q24@"NSURL"32B40
@"_MSTTLReference"
@"<EMUserProfileProvider>"
@"EDMailDynamicDataAsset"
@40@0:8@16@24@?32
@"NSProgress"40@0:8@"EMObjectID"16@"EMContentRequestOptions"24@?<v@?@"<_EMDistantContentRepresentation>"@"EMContentRepresentation"@"NSError">32
@"NSProgress"24@0:8@?<v@?@"EMContentRepresentation"@"NSError">16
@32@0:8@16Q24
@32@0:8d16@24
@32@0:8@16d24
@"<EDMailboxPredictionQueryAdapter>"
@"NSDictionary"
@"NSMutableString"
@40@0:8@16@24^B32
@32@0:8@16^B24
@"NSMutableArray"
@"EMThread"
@"EMThreadScope"
@"EFQuery"
@"<EMMailboxTypeResolver>"
@"EMMessage"
v32@0:8@"EMMessage"16@"EMMessageObjectID"24
v32@0:8@"NSArray"16@"NSArray"24
@56@0:8@16@24@32@40@48
@"NSMutableOrderedSet"
@"EDMessageQueryHelper"
v48@0:8@16@24@32@40
v48@0:8@16@24q32@40
v48@0:8@16@24@32q40
v48@0:8@"NSString"16@"NSDate"24@"<ECMessage>"32@"NSDictionary"40
v48@0:8@"NSString"16@"NSDate"24q32@"NSDictionary"40
v32@0:8@"NSString"16@"<ECMessage>"24
v40@0:8@"NSString"16@"<ECMessage>"24@"<ECMailAccount>"32
v48@0:8@"NSString"16@"NSDate"24@"<ECMessage>"32@"<ECMailbox>"40
v48@0:8@"NSString"16@"NSDate"24@"<ECMessage>"32q40
@60@0:8@16@24@32@40@48B56
v64@0:8@16@24@32q40@48@56
@48@0:8@16@24q32@40
@"NSURL"
@"NSFileHandle"
@"EFLazyCache"
@"EDInteractionEventLogSaltProvider"
@"CNContactStore"
@"<EMVIPManager>"
@"NSTimeZone"
@24@0:8o^@16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSData"
@"<ECMessage>"
v32@0:8@"<ECMessage>"16@"<ECMailAccount>"24
v48@0:8@"NSString"16@"NSDate"24@"EMMessageObjectID"32@"NSDictionary"40
v40@0:8@"NSString"16@"NSDate"24@"NSDictionary"32
v56@0:8@16@24@32q40@48
@48@0:8{_NSRange=QQ}16{_NSRange=QQ}32
v32@0:8{_NSRange=QQ}16
{_NSRange=QQ}16@0:8
@"<EDInteractionEventLog>"
@"EDMessagePersistence"
@"EDMailboxPersistence"
{_NSRange="location"Q"length"Q}
@32@0:8@16q24
v48@0:8q16@24@32@40
B40@0:8@16q24@32
B44@0:8q16@24B32@36
B56@0:8@16@24q32q40@48
B32@0:8@16@24
v48@0:8@16q24q32@40
v40@0:8@16q24@32
@"EDGmailLabelPersistence"
@"NSSet"24@0:8q16
q24@0:8@"EMObjectID"16
@"<EDMailboxProvider>"
@"NSSet"
@36@0:8@16@24B32
@44@0:8@16q24@32B40
v52@0:8@16q24@32B40@44
v52@0:8@16@24q32@40B48
@"EDLocalActionPersistence"
@"EDServerMessagePersistenceFactory"
@"<EDMessageChangeHookResponder>"
v32@0:8q16@"EMMailboxObjectID"24
v24@0:8@"EMMailboxObjectID"16
v20@0:8I16
@"NSPredicate"
@"EMMailboxScope"
@"EDMessageQueryEvaluator"
@"<EMMessageRepositoryCountQueryObserver_xpc>"
@"EFCancelationToken"
@24@0:8Q16
@24@0:8^@16
v64@0:8@16q24q32q40@48@?56
v48@0:8@16q24@32@?40
@28@0:8@16B24
@48@0:8@16@24@32@?40
@"EDVIPManager"
@"EDConversationPersistence"
@"<EDMessageQueryHelperDelegate>"
@"<EFScheduler>"
@32@0:8Q16@24
@"EDMessageQueryParser"
Q24@0:8@16
@72@0:8@16@24@32@40@48@56@64
@"EDMessageQueryTransformer"
@"EDSearchableIndex"
@"EFSQLObjectPropertyMapper"
@"EFSearchableIndexObjectPropertyMapper"
v40@0:8@16q24@?32
v48@0:8@16@24@32@?40
v36@0:8@16B24@?28
v40@0:8@"EFQuery"16q24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"EFQuery"16@?<v@?@"NSNumber"@"NSError">24
v48@0:8@"EFQuery"16@"<EMMessageListItemQueryResultsObserver>"24@"EMObjectID"32@?<v@?@"<EFCancelable>">40
v48@0:8@"EFQuery"16@"EMMailboxScope"24@"<EMMessageRepositoryCountQueryObserver_xpc>"32@?<v@?@"<EFCancelable>">40
v40@0:8@"NSArray"16@"NSArray"24@?<v@?@"NSArray"@"NSDictionary">32
v36@0:8@"EMMessageChangeAction"16B24@?<v@?@"EMUndoMessageAction">28
@"NSProgress"48@0:8@"EMMessageObjectID"16@"EMContentRequestOptions"24@"<EMContentItemRequestDelegate>"32@?<v@?@"<_EMDistantContentRepresentation>"@"EMContentRepresentation"@"NSError">40
v24@0:8@"EMMailboxScope"16
@"NSHashTable"
@"EDThreadPersistence"
@"EDMessageChangeManager"
@"NSConditionLock"
@"<EMMessageListItemQueryResultsObserver>"
@"EMObjectID"
v48@0:8@"EMObjectID"16@"NSArray"24@"EMObjectID"32@"NSDictionary"40
v40@0:8@"EMObjectID"16@"NSArray"24@"EMObjectID"32
v32@0:8@"EMObjectID"16@"NSDictionary"24
v32@0:8@"EMObjectID"16@"NSArray"24
v24@0:8@"EMObjectID"16
@"EDInMemoryThreadQueryHandler"
@"EDPrecomputedThreadQueryHandler"
v48@0:8@"EMOutgoingMessage"16@"EMMailboxObjectID"24@"EMMessageObjectID"32@?<v@?@"EMMessage">40
v40@0:8@"EMMailboxObjectID"16@"NSString"24@"EMMessageObjectID"32
v36@0:8@"EMOutgoingMessage"16B24@?<v@?q>28
v32@0:8@"EMObjectID"16@?<v@?B>24
v24@0:8@?<v@?B>16
v24@0:8@?<v@?Q>16
@64@0:8@16@24q32q40q48@?56
@"EFQueue"
@"EMBlockedSenderManager"
@20@0:8B16
@"EDPersistenceDatabaseConnection"20@0:8B16
@"NSURL"32@0:8@"NSString"16q24
@72@0:8@16@24Q32@40@48@56@64
v28@0:8B16@?20
v32@0:8@?16B24B28
@"EFSQLSchema"
@"EFSQLPropertyMapper"
@"EDPersistenceDatabaseConnectionPool"
@"EDProtectedDatabasePersistence"
@44@0:8@16@24B32@36
@28@0:8B16@20
@36@0:8^{sqlite3=}16B24@28
B40@0:8@16@?24^@32
B32@0:8@16^@24
B32@0:8@16^Q24
B48@0:8@16@?24@32^@40
^{sqlite3=}16@0:8
i16@0:8
B40@0:8B16B20^@24@?32
B28@0:8@16B24
B36@0:8@16B24^@28
v28@0:8i16@20
v24@0:8r*16
q24@0:8q16
B40@0:8@16@24^Q32
B48@0:8@16@24@32^Q40
B40@0:8@16@24^@32
@"<EDPersistenceDatabaseConnectionDelegate>"
@"EDPersistenceDatabaseJournal"
@"EFSQLConnection"
B32@0:8Q16^@24
v32@0:8Q16@24
v24@0:8Q16
@"NSLock"
@"NSMapTable"
@"_EDPersistenceDatabaseConnectionWrapper"
@"EFResourcePool"
@"<EDPersistenceDatabaseConnectionPoolDelegate>"
@"EFResource"
@"EDPersistenceDatabaseConnection"
@"EDPersistenceDatabaseJournalManager"
@"NSMutableIndexSet"
@48@0:8@16@24Q32Q40
@"EFSQLColumnSchema"
v24@0:8@"EDPersistenceDatabaseConnection"16
v32@0:8@"<EDLibraryMessage>"16@"EFSQLRow"24
v40@0:8q16@24@32
v40@0:8q16@"EDSearchableIndexUpdates"24@"NSArray"32
v28@0:8@"EMThreadObjectID"16B24
v24@0:8@"EMThreadObjectID"16
v32@0:8@"EMThreadObjectID"16@"NSArray"24
v32@0:8:16r*24
v40@0:8@16{objc_method_description=:*}24
^{__CFDictionary=}
@"EDPETQuotaReachedEvent"
@"EDPETSubmittedEvent"
v20@0:8i16
@20@0:8i16
I16@0:8
{?="accountId"b1"conversationId"b1"deviceId"b1"mailboxId"b1"messageId"b1"timestamp"b1"userId"b1"eventName"b1"mailboxType"b1"sequenceNumber"b1"timezoneOffset"b1"version"b1}
{?="doubleValue"b1"int64Value"b1}
v32@0:8d16@24
i24@0:8q16
@28@0:8i16@20
{?="timestamp"b1"sequenceNumber"b1"timezoneOffset"b1}
{?="timestamp"b1"timezoneOffset"b1}
B48@0:8@16@24@32^@40
q32@0:8@16@24
Q40@0:8@16@24@?32
Q32@0:8@16@24
B40@0:8@16@24@32
Q40@0:8@16@24@32
Q44@0:8@16B24@28@36
v24@0:8@?<v@?@"<EMMessageRepositoryInterface>">16
v24@0:8@?<v@?@"<EMOutgoingMessageRepositoryInterface>">16
v24@0:8@?<v@?@"<EMAccountRepositoryInterface>">16
v24@0:8@?<v@?@"<EMFetchControllerInterface>">16
v24@0:8@?<v@?@"<EMMailboxRepositoryInterface>">16
v24@0:8@?<v@?@"<EMClientStateInterface>">16
v24@0:8@?<v@?@"<EMSearchableIndexInterface>">16
v24@0:8@?<v@?@"<EMInteractionLoggerInterface>">16
v24@0:8@?<v@?@"<EMVIPManagerInterface>">16
v24@0:8@?<v@?@"<EMActivityRegistryInterface>">16
v24@0:8@?<v@?@"NSString">16
v24@0:8@?<v@?>16
@"EDAccountRepository"
@"EDMailboxRepository"
@"EDMessageRepository"
@"EDOutgoingMessageRepository"
@"EDFetchController"
@"<EMVIPManagerInterface>"
@"EDActivityRegistry"
@"NSXPCConnection"
@"EDDaemonInterfaceFactory"
@"EDClientState"
i32@0:8@16@24
B24@0:8q16
@48@0:8@16@24@32o^@40
@52@0:8@16@24@32B40o^@44
v32@0:8@"CSSearchableIndex"16@?<v@?>24
v40@0:8@"CSSearchableIndex"16@"NSArray"24@?<v@?>32
v24@0:8@"CSSearchableIndex"16
@"NSData"48@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32o^@40
@"NSURL"52@0:8@"CSSearchableIndex"16@"NSString"24@"NSString"32B40o^@44
@"NSDictionary"32@0:8@"EDSearchableIndexVerifier"16@"EDSearchableIndex"24
@"EDSearchableIndex"24@0:8@"EDSearchableIndexVerifier"16
v32@0:8@"NSArray"16@?<v@?>24
d40@0:8^Q16d24@?32
v40@0:8q16@24@?32
v32@0:8q16@?24
v24@0:8B16B20
v32@0:8^@16^@24
v32@0:8Q16@?24
v32@0:8@16B24B28
v36@0:8@16B24q28
@"NSObject<OS_dispatch_source>"
@"NSObject<OS_os_activity>"
@"_EMSearchableIndexPendingRemovals"
@"<EDSearchableIndexDataSource>"
@"<EDSearchableIndexReasonProvider>"
@"<EDSearchableIndexSchedulableDelegate>"
@"CSSearchableIndex"
@"<EDSearchableCriterion>"
@"NSIndexSet"
@"CSSearchableItem"16@0:8
@"EFFuture"16@0:8
q24@0:8@"<EDIndexableItem>"16
@"NSDate"16@0:8
@"NSData"16@0:8
v24@0:8@"NSData"16
@"CSSearchableItem"
@"EDSearchableIndexAttachmentItemMetadatum"
@"EFPromise"
v24@0:8@"NSDate"16
@48@0:8d16d24q32B40B44
@40@0:8d16d24q32
@"NSNumber"
@44@0:8@16@24@32B40
@"<EDIndexableMessage>"
@40@0:8@16@24Q32
@40@0:8@16q24@32
@"EDSearchableIndexUpdates"40@0:8@"EDSearchableIndex"16@"NSArray"24Q32
q32@0:8@"EDSearchableIndex"16@"<EDIndexableItem>"24
v40@0:8@"EDSearchableIndex"16q24@"NSArray"32
v40@0:8@"EDSearchableIndex"16@"NSArray"24q32
@"NSArray"32@0:8@"EDSearchableIndex"16@"NSArray"24
@"NSArray"40@0:8@"EDSearchableIndex"16q24@"EDSearchableIndexUpdates"32
v32@0:8@"EDSearchableIndex"16q24
@"NSDictionary"24@0:8@"EDSearchableIndex"16
v40@0:8@"EDSearchableIndex"16@"NSArray"24@"NSString"32
@40@0:8@16@24q32
@40@0:8q16@24q32
B32@0:8@16q24
@40@0:8@16Q24@32
@"<EDSearchableIndexHookResponder>"
@"EDSearchableIndexVerificationData"24@0:8@"EDSearchableIndexVerificationData"16
@"EMSearchableIndexQueryExpression"24@0:8@"NSDictionary"16
B32@0:8@"CSSearchableItem"16@"EDSearchableIndexVerificationData"24
v32@0:8@16d24
d24@0:8@16
v32@0:8@"<EDSearchableIndexSchedulable>"16d24
v32@0:8@"<EDSearchableIndexSchedulable>"16q24
v24@0:8@"<EDSearchableIndexSchedulable>"16
v40@0:8@"<EDSearchableIndexSchedulable>"16@"NSString"24@"NSDictionary"32
d24@0:8@"<EDSearchableIndexSchedulable>"16
q24@0:8@"<EDSearchableIndexSchedulable>"16
B24@0:8@"<EDSearchableIndexSchedulable>"16
@?24@0:8@16
@"<EDSearchableIndexSchedulable>"
@"EDSearchableIndexBudgetConfiguration"
v32@0:8@?16@24
@"<EDSearchableIndexVerifierDataSource>"
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSXPCListener"
@48@0:8@16@24q32B40B44
@44@0:8{_NSRange=QQ}16Q32B40
B40@0:8@16^B24^B32
B32@0:8q16@24
B44@0:8@16@24I32@36
v32@0:8@?16@?24
B32@0:8@16^B24
v56@0:8@16@24Q32@40@?48
B48@0:8@16@24@32@?40
@40@0:8@16@24^@32
B36@0:8@16B24@28
B44@0:8@16q24B32@36
B48@0:8@16B24@28q36B44
@44@0:8@16@24q32B40
B40@0:8@16Q24@32
@48@0:8@16@24@32q40
B40@0:8Q16@24@32
@"EFFuture"
@28@0:8q16B24
@"<EDUbiquitousConversationManagerDelegate>"
@"EMVIP"24@0:8@"NSString"16
B24@0:8@"NSString"16
v24@0:8@"NSSet"16
v24@0:8@"EAEmailAddressSet"16
@"NSSet"16@0:8
@"EAEmailAddressSet"16@0:8
@"EAEmailAddressSet"
v32@0:8@"<EMVIPManagerObserver>"16@"EMObjectID"24
