@(#)PROGRAM:Focus  PROJECT:DoNotDisturb-1
v8@?0
com.apple.focus
Activities
com.apple.Focus
v20@?0B8@"NSError"12
<%@: %p; _identifier: %@>
B32@?0@"<FCActivityDescribing>"8Q16^B24
FOCUS_STATUS_DND_ON
FOCUS_STATUS_DND_ON_UNTIL_LOCATION
FOCUS_STATUS_DND_ON_UNTIL_TODAY_TIME
FOCUS_STATUS_DND_ON_UNTIL_TOMORROW_TIME
FOCUS_STATUS_DND_ON_UNTIL_DATE_TIME
Focus
com.apple.focus.activity-manager
%@: %p
v16@?0@"<FCActivityManagerObserving>"8
B16@?0@"<FCActivityDescribing>"8
B16@?0@"<FCActivityLifetimeDescribing>"8
B32@?0@"<FCActivityDescribing>"8@"<FCActivityLifetimeDescribing>"16^@24
_FCActivity
SLEEP_ACTIVATE_ON_SCHEDULE
<%@: %p; activityIdentifier: %@; activityUniqueIdentifier: %@; activityDisplayName: %@>
; activitySymbolImageName: %@; activityColorName: %@; isPlaceholder: %@; %@
activityLifetimeDescriptions: %@
activityLifetimesAlternativeDescription: %@
<%@: %p; lifetimeIdentifier: %@; lifetimeName: %@; lifetimeMetadata: %@>
Kettle
FeatureComplete
DEFAULT
[NO REASON PROVIDED]
Q16@?0@"_FCActivity"8
[%{public}@] Added selection update listener
[%{public}@] Error adding selection update listener: %{public}@
[%{public}@] Activating a nil activity isn't permitted 
ignoring
[%{public}@] Did receive updated active mode assertion: %{public}@
[%{public}@] Did receive all modes [%{public}lu] update: %{public}@
[%{public}@] Did receive updated available lifetime details: %{public}@
[%{public}@] Encountered error requesting mode configuration: activity: %{public}@; error: %{public}@
[%{public}@] Failed to obtain mode configuration for activity: %{public}@
[%{public}@] Notifying observer of available activities change: %{public}@
[%{public}@] Activity didn't change from cached value: %{public}@
[%{public}@] Available activities didn't change from cached value
[%{public}@] Encountered error requesting available activities: %{public}@
[%{public}@] Updating active mode assertion: %{public}@
[%{public}@] Encountered error requesting active activity: %{public}@
[%{public}@] Encountered error requesting lifetime details for active mode assertion: activeModeAssertion: %{public}@; error: %{public}@
[%{public}@] Updating active activity: %{public}@
[%{public}@] Notifying observer of active activity change: observer: %{public}@; active activity: %{public}@
[%{public}@] [Deprecated] Notifying observer of active mode change: %{public}@
[%{public}@] Updating lifetime of active activity: %{public}@
[%{public}@] Notifying observer of active lifetime change: observer: %{public}@; lifetime: %{public}@
[%{public}@] Failed to retrieve dndLifetimeDetails from provided lifetime: %{public}@
[%{public}@] Activating activity: activity: %{public}@; lifetime: %{public}@; reason: %{public}@
[%{public}@] Encountered error activating activity: activity: %{public}@; lifetime: %{public}@; error: %{public}@
[%{public}@] Attempt to activate activity not in collection: activity: %{public}@; availableActivities: %{public}@
[%{public}@] Deactivating all activities: reason: %{public}@
[%{public}@] Encountered error deactivating all activites: %{public}@
[%{public}@] Deactivating active activity: reason: %{public}@
[%{public}@] Encountered error deactivating activity: %{public}@
[%{public}@] Encountered error deactivating activity: '%{public}@' isn't the active activity
[%{public}@] Encountered error deactivating activity: no active mode assertion
[%{public}@] Notifying observer of lifetime descriptions change for activity: observer: %{public}@; activity: %{public}@
[%{public}@] Updating lifetime descriptions for activity: activity: %{public}@; lifetime descriptions: %{public}@
[%{public}@] Lifetime descriptions can't be updated for activity: %{public}@
zPLR
FCActivityManager
DNDModeSelectionServiceListener
NSObject
DNDLifetimeDetailsProviderDelegate
Private
_FCActivity
FCActivityDescribing
NSCopying
_FCActivityLifetime
FCActivityLifetimeDescribing
DEPRECATED
initWithSuiteName:
init
copy
hashTableWithOptions:
_modeSelectionService
description
addListener:withCompletionHandler:
setLifetimeDescriptionsUpdatingEnabled:
dealloc
stringWithFormat:
mainBundle
bundleIdentifier
_initWithIdentifier:
maxUIAddableModes
_availableActivities
initWithArray:copyItems:
_activeActivity
copyWithZone:
_activityForModeIdentifier:
isPlaceholder
activityIdentifier
_dndMode
semanticType
indexOfObjectPassingTest:
state
_stateService
queryCurrentStateWithError:
userVisibleTransitionDate
userVisibleTransitionLifetimeType
distantFuture
isEqualToDate:
currentCalendar
isDateInToday:
sharedInstance
formatDateAsTimeStyle:
isDateInTomorrow:
formatDateAsAbbreviatedDayMonthWithTimeStyle:
bundleForClass:
localizedStringForKey:value:table:
_lifetimeDetailsProvider
startUpdatingLifetimeDetails
startUpdatingLifetimeDetailMetadata
_updateLifetimesAlternativeDescriptionsForAvailableActivities
stopUpdatingLifetimeDetails
stopUpdatingLifetimeDetailMetadata
resetLifetimeDetails
activityUniqueIdentifier
_activityForUniqueIdentifier:
_lifetimeForActiveActivity
setActivity:active:withLifetime:reason:
lifetimeIdentifier
_lifetimeForLifetimeDetailsIdentifier:ofActivity:
_setActiveActivity:withLifetime:reason:
_deactivateActivity:reason:
source
reason
_isSyncedAssertion:
details
addObject:
removeObject:
_invalidateActiveModeAssertion
_updateWithActiveModeAssertionIfNecessary:stateUpdate:
count
_updateActivitiesWithModes:
countByEnumeratingWithState:objects:count:
supportsDiscreteLifetimes
_updateActivity:withLifetimeDetailsCollection:
serviceForClientIdentifier:
setDelegate:
_setActivityCreationDate:
modeConfigurationForModeIdentifier:error:
created
availableActivitiesDidChangeForManager:
_enumerateObserversRespondingToSelector:usingBlock:
allValues
visibility
identifier
bs_firstObjectPassingTest:
_updateMode:
initWithMode:
_updateCreationDateOfActivity:
_updateLifetimesAlternativeDescriptionForActivity:
setObject:forKey:
sortUsingFunction:context:
_setAvailableActivities:
_updateActiveActivity:
_notifyObserversOfAvailableActivitiesChange
allModesWithError:
allObjects
isEqual:
modeIdentifier
_updateLifetimeForActiveActivity
activeModeAssertionWithError:
lifetimeDetailsForAssertionDetails:error:
_setLifetimeForActiveActivity:
_updateActivity:withLifetimeDetails:
_updateActiveModeAssertionIfNecessary
_updateLifetimeForActiveActivityIfNecessary
length
isEqualToString:
activityLifetimeDescriptions
_doesActivity:identifySameModeAsActivity:
activeActivityDidChangeForManager:
activeModeDidChangeForManager:
activeActivityLifetimeDidChangeForManager:
lifetimeOfActivity:
setIdentifier:
setModeIdentifier:
setReason:
_dndLifetimeDetails
lifetimeForLifetimeDetails:error:
lifetimeUntilEndOfScheduleWithIdentifier:
setLifetime:
activateModeWithDetails:error:
containsObject:
UUID
invalidateModeAssertionWithUUID:error:
activityManager:lifetimeDescriptionsDidChangeForActivity:
_setActivityLifetimeDescriptions:
_notifyObserversOfLifetimeChangeForActivity:
mutableCopy
initWithLifetimeDetails:
objectAtIndexedSubscript:
setObject:atIndexedSubscript:
_updateActivity:withLifetimeDescriptions:
_setActivityLifetimesAlternativeDescription:
activityLifetimesAlternativeDescription
isSleepActivity
_updateLifetimesAlternativeDescription:forActivity:
deviceIdentifier
initialize
sharedActivityManager
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
modeSelectionService:didReceiveUpdatedActiveModeAssertion:stateUpdate:
modeSelectionService:didReceiveModesUpdate:
modeSelectionService:didReceiveAvailableModesUpdate:
lifetimeDetailsProvider:didUpdateAvailableLifetimeDetails:
maximumActivityCountForUserInterface
availableActivities
activeActivity
defaultActivity
isDefaultConfiguration
localizedTerminationDescriptionForActiveActivity
setActivity:active:reason:
isActivityLocalUserInitiated:
addObserver:
removeObserver:
_setDefaultActivity:
isLifetimeDescriptionsUpdatingEnabled
.cxx_destruct
_observers
_activeModeAssertion
_activeStateUpdate
_allActivitiesByIdentifier
_activeLifetimeDetailsCollection
_lifetimeOfActiveActivity
_activeModeAssertionIsValid
_lifetimeDescriptionsUpdatingEnabled
_defaultActivity
_identifier
T@"<FCActivityDescribing>",C,N,S_setDefaultActivity:,V_defaultActivity
T@"NSString",R,C,N,V_identifier
TQ,R,N
T@"NSArray",R,C,N,V_availableActivities
T@"<FCActivityDescribing>",R,C,N,V_activeActivity
defaultConfiguration
TB,R,N,GisDefaultConfiguration
T@"NSString",R,C,N
lifetimeDescriptionsUpdatingEnabled
TB,N,GisLifetimeDescriptionsUpdatingEnabled,V_lifetimeDescriptionsUpdatingEnabled
objectForKey:
activityWithIdentifier:
_setDndMode:
name
symbolImageName
tintColorName
defaultTintColorName
settingsURL
setupURL
activityDisplayName
rangeOfString:options:
activitySymbolImageName
activityColorName
insertString:atIndex:
activityCreationDate
activitySettingsURL
activitySetupURL
T@"NSUUID",R,C,N
T@"NSDate",R,C,N
T@"NSArray",R,C,N
T@"NSURL",R,C,N
placeholder
TB,R,N,GisPlaceholder
isDrivingActivity
_activityCreationDate
_activityLifetimeDescriptions
_activityLifetimesAlternativeDescription
dndMode
T@"DNDMode",C,G_dndMode,S_setDndMode:,V_dndMode
T@"NSDate",C,N,S_setActivityCreationDate:,V_activityCreationDate
T@"NSArray",C,N,S_setActivityLifetimeDescriptions:,V_activityLifetimeDescriptions
T@"NSString",C,N,S_setActivityLifetimesAlternativeDescription:,V_activityLifetimesAlternativeDescription
TB,R,N
drivingActivity
TB,R,N,GisDrivingActivity
sleepActivity
TB,R,N,GisSleepActivity
metadata
lifetimeName
lifetimeMetadata
dndLifetimeDetails
T@"DNDLifetimeDetails",R,C,N,G_dndLifetimeDetails,V_dndLifetimeDetails
newActivityManagerWithIdentifier:
setActiveActivity:reason:
setActiveActivity:
setActiveActivity:withLifetime:reason:
newActivityManager
compare:
v16@0:8
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@32
v32@0:8@16@24
v40@0:8@"DNDModeSelectionService"16@"DNDModeAssertion"24@"DNDStateUpdate"32
v32@0:8@"DNDModeSelectionService"16@"NSArray"24
v32@0:8@"DNDLifetimeDetailsProvider"16@"NSArray"24
@24@0:8@16
v20@0:8B16
v36@0:8@16B24@28
v44@0:8@16B24@28@36
v24@0:8@16
v32@0:8:16@?24
B32@0:8@16@24
@32@0:8@16@24
@"DNDModeSelectionService"
@"DNDLifetimeDetailsProvider"
@"DNDStateService"
@"NSHashTable"
@"DNDModeAssertion"
@"DNDStateUpdate"
@"NSMutableDictionary"
@"NSArray"
@"<FCActivityLifetimeDescribing>"
@"<FCActivityDescribing>"
@"NSString"
@24@0:8^{_NSZone=}16
@"NSUUID"16@0:8
@"NSDate"16@0:8
@"NSArray"16@0:8
@"NSURL"16@0:8
@"NSDate"
@"DNDMode"
@"DNDLifetimeDetails"
@(#)PROGRAM:Focus  PROJECT:DoNotDisturb-1
v8@?0
com.apple.focus
Activities
com.apple.Focus
v20@?0B8@"NSError"12
<%@: %p; _identifier: %@>
B32@?0@"<FCActivityDescribing>"8Q16^B24
FOCUS_STATUS_DND_ON
FOCUS_STATUS_DND_ON_UNTIL_LOCATION
FOCUS_STATUS_DND_ON_UNTIL_TODAY_TIME
FOCUS_STATUS_DND_ON_UNTIL_TOMORROW_TIME
FOCUS_STATUS_DND_ON_UNTIL_DATE_TIME
Focus
com.apple.focus.activity-manager
%@: %p
v16@?0@"<FCActivityManagerObserving>"8
B16@?0@"<FCActivityDescribing>"8
B16@?0@"<FCActivityLifetimeDescribing>"8
B32@?0@"<FCActivityDescribing>"8@"<FCActivityLifetimeDescribing>"16^@24
_FCActivity
SLEEP_ACTIVATE_ON_SCHEDULE
<%@: %p; activityIdentifier: %@; activityUniqueIdentifier: %@; activityDisplayName: %@>
; activitySymbolImageName: %@; activityColorName: %@; isPlaceholder: %@; %@
activityLifetimeDescriptions: %@
activityLifetimesAlternativeDescription: %@
<%@: %p; lifetimeIdentifier: %@; lifetimeName: %@; lifetimeMetadata: %@>
Kettle
FeatureComplete
DEFAULT
[NO REASON PROVIDED]
Q16@?0@"_FCActivity"8
[%{public}@] Added selection update listener
[%{public}@] Error adding selection update listener: %{public}@
[%{public}@] Activating a nil activity isn't permitted 
ignoring
[%{public}@] Did receive updated active mode assertion: %{public}@
[%{public}@] Did receive all modes [%{public}lu] update: %{public}@
[%{public}@] Did receive updated available lifetime details: %{public}@
[%{public}@] Encountered error requesting mode configuration: activity: %{public}@; error: %{public}@
[%{public}@] Failed to obtain mode configuration for activity: %{public}@
[%{public}@] Notifying observer of available activities change: %{public}@
[%{public}@] Activity didn't change from cached value: %{public}@
[%{public}@] Available activities didn't change from cached value
[%{public}@] Encountered error requesting available activities: %{public}@
[%{public}@] Updating active mode assertion: %{public}@
[%{public}@] Encountered error requesting active activity: %{public}@
[%{public}@] Encountered error requesting lifetime details for active mode assertion: activeModeAssertion: %{public}@; error: %{public}@
[%{public}@] Updating active activity: %{public}@
[%{public}@] Notifying observer of active activity change: observer: %{public}@; active activity: %{public}@
[%{public}@] [Deprecated] Notifying observer of active mode change: %{public}@
[%{public}@] Updating lifetime of active activity: %{public}@
[%{public}@] Notifying observer of active lifetime change: observer: %{public}@; lifetime: %{public}@
[%{public}@] Failed to retrieve dndLifetimeDetails from provided lifetime: %{public}@
[%{public}@] Activating activity: activity: %{public}@; lifetime: %{public}@; reason: %{public}@
[%{public}@] Encountered error activating activity: activity: %{public}@; lifetime: %{public}@; error: %{public}@
[%{public}@] Attempt to activate activity not in collection: activity: %{public}@; availableActivities: %{public}@
[%{public}@] Deactivating all activities: reason: %{public}@
[%{public}@] Encountered error deactivating all activites: %{public}@
[%{public}@] Deactivating active activity: reason: %{public}@
[%{public}@] Encountered error deactivating activity: %{public}@
[%{public}@] Encountered error deactivating activity: '%{public}@' isn't the active activity
[%{public}@] Encountered error deactivating activity: no active mode assertion
[%{public}@] Notifying observer of lifetime descriptions change for activity: observer: %{public}@; activity: %{public}@
[%{public}@] Updating lifetime descriptions for activity: activity: %{public}@; lifetime descriptions: %{public}@
[%{public}@] Lifetime descriptions can't be updated for activity: %{public}@
FCActivityManager
DNDModeSelectionServiceListener
NSObject
DNDLifetimeDetailsProviderDelegate
Private
_FCActivity
FCActivityDescribing
NSCopying
_FCActivityLifetime
FCActivityLifetimeDescribing
DEPRECATED
initWithSuiteName:
init
copy
hashTableWithOptions:
_modeSelectionService
description
addListener:withCompletionHandler:
setLifetimeDescriptionsUpdatingEnabled:
dealloc
stringWithFormat:
mainBundle
bundleIdentifier
_initWithIdentifier:
maxUIAddableModes
_availableActivities
initWithArray:copyItems:
_activeActivity
copyWithZone:
_activityForModeIdentifier:
isPlaceholder
activityIdentifier
_dndMode
semanticType
indexOfObjectPassingTest:
state
_stateService
queryCurrentStateWithError:
userVisibleTransitionDate
userVisibleTransitionLifetimeType
distantFuture
isEqualToDate:
currentCalendar
isDateInToday:
sharedInstance
formatDateAsTimeStyle:
isDateInTomorrow:
formatDateAsAbbreviatedDayMonthWithTimeStyle:
bundleForClass:
localizedStringForKey:value:table:
_lifetimeDetailsProvider
startUpdatingLifetimeDetails
startUpdatingLifetimeDetailMetadata
_updateLifetimesAlternativeDescriptionsForAvailableActivities
stopUpdatingLifetimeDetails
stopUpdatingLifetimeDetailMetadata
resetLifetimeDetails
activityUniqueIdentifier
_activityForUniqueIdentifier:
_lifetimeForActiveActivity
setActivity:active:withLifetime:reason:
lifetimeIdentifier
_lifetimeForLifetimeDetailsIdentifier:ofActivity:
_setActiveActivity:withLifetime:reason:
_deactivateActivity:reason:
source
reason
_isSyncedAssertion:
details
addObject:
removeObject:
_invalidateActiveModeAssertion
_updateWithActiveModeAssertionIfNecessary:stateUpdate:
count
_updateActivitiesWithModes:
countByEnumeratingWithState:objects:count:
supportsDiscreteLifetimes
_updateActivity:withLifetimeDetailsCollection:
serviceForClientIdentifier:
setDelegate:
_setActivityCreationDate:
modeConfigurationForModeIdentifier:error:
created
availableActivitiesDidChangeForManager:
_enumerateObserversRespondingToSelector:usingBlock:
allValues
visibility
identifier
bs_firstObjectPassingTest:
_updateMode:
initWithMode:
_updateCreationDateOfActivity:
_updateLifetimesAlternativeDescriptionForActivity:
setObject:forKey:
sortUsingFunction:context:
_setAvailableActivities:
_updateActiveActivity:
_notifyObserversOfAvailableActivitiesChange
allModesWithError:
allObjects
isEqual:
modeIdentifier
_updateLifetimeForActiveActivity
activeModeAssertionWithError:
lifetimeDetailsForAssertionDetails:error:
_setLifetimeForActiveActivity:
_updateActivity:withLifetimeDetails:
_updateActiveModeAssertionIfNecessary
_updateLifetimeForActiveActivityIfNecessary
length
isEqualToString:
activityLifetimeDescriptions
_doesActivity:identifySameModeAsActivity:
activeActivityDidChangeForManager:
activeModeDidChangeForManager:
activeActivityLifetimeDidChangeForManager:
lifetimeOfActivity:
setIdentifier:
setModeIdentifier:
setReason:
_dndLifetimeDetails
lifetimeForLifetimeDetails:error:
lifetimeUntilEndOfScheduleWithIdentifier:
setLifetime:
activateModeWithDetails:error:
containsObject:
UUID
invalidateModeAssertionWithUUID:error:
activityManager:lifetimeDescriptionsDidChangeForActivity:
_setActivityLifetimeDescriptions:
_notifyObserversOfLifetimeChangeForActivity:
mutableCopy
initWithLifetimeDetails:
objectAtIndexedSubscript:
setObject:atIndexedSubscript:
_updateActivity:withLifetimeDescriptions:
_setActivityLifetimesAlternativeDescription:
activityLifetimesAlternativeDescription
isSleepActivity
_updateLifetimesAlternativeDescription:forActivity:
deviceIdentifier
initialize
sharedActivityManager
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
modeSelectionService:didReceiveUpdatedActiveModeAssertion:stateUpdate:
modeSelectionService:didReceiveModesUpdate:
modeSelectionService:didReceiveAvailableModesUpdate:
lifetimeDetailsProvider:didUpdateAvailableLifetimeDetails:
maximumActivityCountForUserInterface
availableActivities
activeActivity
defaultActivity
isDefaultConfiguration
localizedTerminationDescriptionForActiveActivity
setActivity:active:reason:
isActivityLocalUserInitiated:
addObserver:
removeObserver:
_setDefaultActivity:
isLifetimeDescriptionsUpdatingEnabled
.cxx_destruct
_observers
_activeModeAssertion
_activeStateUpdate
_allActivitiesByIdentifier
_activeLifetimeDetailsCollection
_lifetimeOfActiveActivity
_activeModeAssertionIsValid
_lifetimeDescriptionsUpdatingEnabled
_defaultActivity
_identifier
T@"<FCActivityDescribing>",C,N,S_setDefaultActivity:,V_defaultActivity
T@"NSString",R,C,N,V_identifier
TQ,R,N
T@"NSArray",R,C,N,V_availableActivities
T@"<FCActivityDescribing>",R,C,N,V_activeActivity
defaultConfiguration
TB,R,N,GisDefaultConfiguration
T@"NSString",R,C,N
lifetimeDescriptionsUpdatingEnabled
TB,N,GisLifetimeDescriptionsUpdatingEnabled,V_lifetimeDescriptionsUpdatingEnabled
objectForKey:
activityWithIdentifier:
_setDndMode:
name
symbolImageName
tintColorName
defaultTintColorName
settingsURL
setupURL
activityDisplayName
rangeOfString:options:
activitySymbolImageName
activityColorName
insertString:atIndex:
activityCreationDate
activitySettingsURL
activitySetupURL
T@"NSUUID",R,C,N
T@"NSDate",R,C,N
T@"NSArray",R,C,N
T@"NSURL",R,C,N
placeholder
TB,R,N,GisPlaceholder
isDrivingActivity
_activityCreationDate
_activityLifetimeDescriptions
_activityLifetimesAlternativeDescription
dndMode
T@"DNDMode",C,G_dndMode,S_setDndMode:,V_dndMode
T@"NSDate",C,N,S_setActivityCreationDate:,V_activityCreationDate
T@"NSArray",C,N,S_setActivityLifetimeDescriptions:,V_activityLifetimeDescriptions
T@"NSString",C,N,S_setActivityLifetimesAlternativeDescription:,V_activityLifetimesAlternativeDescription
TB,R,N
drivingActivity
TB,R,N,GisDrivingActivity
sleepActivity
TB,R,N,GisSleepActivity
metadata
lifetimeName
lifetimeMetadata
dndLifetimeDetails
T@"DNDLifetimeDetails",R,C,N,G_dndLifetimeDetails,V_dndLifetimeDetails
newActivityManagerWithIdentifier:
setActiveActivity:reason:
setActiveActivity:
setActiveActivity:withLifetime:reason:
newActivityManager
compare:
v16@0:8
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@32
v32@0:8@16@24
v40@0:8@"DNDModeSelectionService"16@"DNDModeAssertion"24@"DNDStateUpdate"32
v32@0:8@"DNDModeSelectionService"16@"NSArray"24
v32@0:8@"DNDLifetimeDetailsProvider"16@"NSArray"24
@24@0:8@16
v20@0:8B16
v36@0:8@16B24@28
v44@0:8@16B24@28@36
v24@0:8@16
v32@0:8:16@?24
B32@0:8@16@24
@32@0:8@16@24
@"DNDModeSelectionService"
@"DNDLifetimeDetailsProvider"
@"DNDStateService"
@"NSHashTable"
@"DNDModeAssertion"
@"DNDStateUpdate"
@"NSMutableDictionary"
@"NSArray"
@"<FCActivityLifetimeDescribing>"
@"<FCActivityDescribing>"
@"NSString"
@24@0:8^{_NSZone=}16
@"NSUUID"16@0:8
@"NSDate"16@0:8
@"NSArray"16@0:8
@"NSURL"16@0:8
@"NSDate"
@"DNDMode"
@"DNDLifetimeDetails"
