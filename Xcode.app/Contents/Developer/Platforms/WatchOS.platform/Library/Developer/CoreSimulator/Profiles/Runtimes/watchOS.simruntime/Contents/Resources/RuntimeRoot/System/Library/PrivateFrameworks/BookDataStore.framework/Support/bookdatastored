Process launch.
Process exit.
Daemon initializing.
Daemon shutting down.
Daemon starting up.
Some error happened in pre-listener startup: %@
bookdatastored received sigterm signal
Daemon finished starting up.
Setting up listeners.
Handled Exception {%@}
[Transaction]: Created transaction %{public}s(%p)
[Transaction]: Ending transaction %{public}s(%p)
[Transaction]: EndTransaction was called but transaction was already nil.(%p)
BDSICloudIdentityTokenTracker didUnacknowledgediCloudLogoutOccur=%{public}@ l=%{public}@ c=%{public}@
acknowledgeiCloudIdentity
Done acknowledge iCloud identity: %{mask.hash}@
TCC returned a NULL array!
Successfully set %{public}@ to %{public}@.
Failed to set %{public}@ to %{public}@.
BCCloudKitController (%{public}@) _coalescedAttachment
did not call completion after 10s in %{public}@
BCCloudKitController (%{public}@) #enableCloudSync setEnableCloudSync %{public}@ serviceMode:%{public}@
BCCloudKitController (%{public}@) - p_updateAttachment
BCCloudKitController (%{public}@) - Update Attachment Current State: attached:%{public}@
BCCloudKitController (%{public}@) - Update Attachment: getting account info
BCCloudKitController (%{public}@) - Update Attachment: detaching from database controller
BCCloudKitController (%{public}@) - Update Attachment: No change to attachment.
BCCloudKitController (%{public}@) - Update Attachment: Signaling fetch changes for %{public}@
BCCloudKitController (%{public}@) - p_getAccountInfo
BCCloudKitController (%{public}@) - getAccountInfo self.gettingAccountInfo=YES
BCCloudKitController - CKAccountStatusCouldNotDetermine: %{public}@
Could not determine iCloud status.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController - Account Available for %{public}@
Error connecting user to database error=%{public}@
BCCloudKitController - connectUserToContainer subscription completed for %{public}@
Container %{public}@ requires device-to-device encryption but user's account does not support it.  Not connecting.
Account Restricted.  Not syncing anything.  Account status error=%{public}@
Books isn't signed into iCloud.  Not syncing anything.  Account status error=%{public}@
Account Temporarily Unavailable.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController (%{public}@) - applicationDidBecomeActive
(%{public}@) handleRemoteNotification:
p_accountChanged (%{public}@) notification=%@
p_identityChanged (%{public}@)
_coalescedArchive (%@)
_coalescedZoneFetch (%@)
BCCloudKitDatabaseController - Error fetching zone changes: %@
BCCloudKitDatabaseController - attached to container: %@
BCCloudKitDatabaseController (%{public}@) - fetchChangesWithCompletion:
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchChangesWithCompletion for changedRecordZoneIDs:%{public}@
BCCloudKitDatabaseController (%{public}@) - Error fetching database changes: %@
BCCloudKitDatabaseController - fetchRecordForRecordID attached: %@
WARNING: BCCloudKitDatabaseController - fetchRecordForRecordID called without a database.  attached: %@
BCCloudKitDatabaseController - containerIdentifer changed from: %{public}@ to: %{public}@
BCCloudKitDatabaseController (%{public}@) - connectUserTo:container:updateSubscription:completion:
BCCloudKitDatabaseController (%{public}@) - user recordID: %{public}@ database:%@
BCCloudKitDatabaseController - archiveComplete
BCCloudKitDatabaseController - Error fetching user recordID: %{public}@
BCCloudKitDatabaseController/attachToZones-cloud
BCCloudKitDatabaseController/attachToZones-secureData
[BCCloudKitDatabaseController (%@)] 1. attachToZones Creating Record Zones - zones:%@
[BCCloudKitDatabaseController (%@)] attachToZones creating record zones failed, ERROR:%@
BCCloudKitDatabaseController - Detaching Container:%{public}@, ERROR:%@
BCCloudKitDatabaseController - requesting salted ID for %@ without salt!
BCCloudDatabaseController: unable to generate record name for %@
CKModifySubscriptionsOperation failed: %{public}@
p_subscribeWithCompletion (%{public}@)
Attempting CKModifySubscriptionsOperation
CKModifySubscriptionsOperation (%{public}@) failed: %{public}@
CKModifySubscriptionsOperation Success for: (%{public}@)
BCCloudKitDatabaseController modifySubscriptionsOperation: %@, id: %@
BCCloudKitDatabaseController (%{public}@)- Adding fetch database changes
CKFetchDatabaseChangesOperation zoneID was deleted: %{public}@
CKFetchDatabaseChangesOperation zoneID was changed: %{public}@
CKFetchDatabaseChangesOperation failed: %{public}@
CKFetchDatabaseChangesOperation Success
CKFetchDatabaseChangesOperation Success, but no serverChangeToken
BCCloudKitDatabaseController (%{public}@)- Adding fetch database changes %@
[BCCloudKitDatabaseController (%@)] 2. p_createRecordZones:%@ database:%{public}@
3. BCCloudKitDatabaseController - fetchRecordZonesOperation.fetchRecordZonesCompletionBlock fetchedZones:[%{public}@]
BCCloudKitDatabaseController - assigning recordZones[%{public}@]
BCCloudKitDatabaseController - One or more zones are missing newRecordZones:[%{public}@]
5a CKModifyRecordZonesOperation failed to modify %{public}@ retrying, ERROR:%@
CKModifyRecordZonesOperation success saving: %{public}@
BCCloudKitDatabaseController - fetchRecordZonesOperation failed, ERROR:%@
BCCloudKitDatabaseController - No PCS Identity available
BCCloudKitDatabaseController - fetchRecordZonesOperation failed - retrying, ERROR:%@
CKFetchRecordZonesOperation failed: %{public}@
CKFetchRecordZonesOperation failed. Account Temporarily Unavailable: %{public}@
BCCloudKitDatabaseController - calling saveResultsBlock
CKFetchRecordZonesOperation Wanted:%@ Received:%@
(%{public}@) Establishing record salt
(%{public}@) Successfully read existing record salt salt:(%@) changeTag:(%@). Calling completion
(%{public}@) Error retrieving record salt: %@ serverRecord:%@.. Trying to recover
(%{public}@) Will save record salt
(%{public}@) Saving record salt....
(%{public}@) Successfully established record salt from server record salt:(%@) changeTag:(%@) error:(%@)
(%{public}@) Successfully established record salt for NO ERROR salt:(%@) changeTag:(%@)
BCCloudKitDatabaseController - Create salt: unable to save record salt %{public}@
(%{public}@) *** Got record salt:(%@) changeTag:(%@)
BCCloudKitDatabaseController - Create salt: unable to get record salt %{public}@
BCCloudKitDatabaseController - Create salt: unable to save salt record %{public}@
fetch zone changes attempted while postponing such fetches.  Nil error, but this operation will be attempted again after the back-off period.
BCCloudKitDatabaseController (%{public}@)- record zone changes; unchangedRecordIDS :%{public}@
BCCloudKitDatabaseController (%{public}@)- fetching record zone changes for recordZoneIDs:%{public}@
BCCloudKitDatabaseController (%{public}@) - finished fetching tokens for zones %{public}@
BCCloudKitDatabaseController (%{public}@)- No record zone changes to fetch
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneIDs:%{public}@, optionsByRecordZoneID:%{public}@ self.database=%p
BCCloudKitDatabaseController - BCCloudKitDatabaseController fetchRecordZoneChangesOperation.recordChangedBlock record=%@ %@
BCCloudKitDatabaseController - BCCloudKitDatabaseController recordWithIDWasDeletedBlock recordID=%@
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneChangeTokensUpdatedBlock recordZoneIDs=%{public}@ 
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneFetchCompletionBlock recordZoneIDs=%{public}@ moreComing= %{BOOL}d
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ zoneFetchCompletion failed: %{public}@ time to delete the tokenStore for  %@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ success.  More coming: %{BOOL}d
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock zoneChanges failed: %{public}@ %{public}@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation retrying fetch for error: %@
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchRecordZoneChangesOperation.fetchRecordZoneChangesCompletionBlock retryFetch
BCCloudKitDatabaseController - CKFetchRecordZoneChangesOperation NOT retrying fetch for error: %@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock success (%{public}@).
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges Adding fetchRecordZoneChangesOperation=%@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfAttachmentChange. Attached to container: %@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfRecordsChanged.
p_informObserversOfRecordsChanged: changedRecords.count=%lu recordType=%{public}@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfSaltVersionIdentifierChanged: saltVersionIdentifier=%{public}@ zoneIDs=%{public}@ observers:%@
%@ name:%@ salt:%@  success:%{BOOL}d  LEAVE GROUP
p_informObserversOfSaltVersionIdentifierChanged DONE
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfRecordsChanged: changedRecords.count=%{public}lu recordType=%{public}@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfCompletedFetchOfZone zoneName=%{public}@
Error decoding BCCloudKitDatabaseController from data.  Error=%{public}@
Deleting zone: (%{public}@)
Error deleting zones (%{public}@): (%{public}@)
BCCloudKitDatabaseController - Invalid parameter combination observer=%p recordType=%{public}@
BCCloudKitDatabaseController - Attempt to remove observer %p that is not observing recordType %{public}@.
BCCloudKitDatabaseController - Invalid observer=%p
BCCloudKitDatabaseController - Setting observer=%p for zone =%{public}@
BCCloudKitDatabaseController - Invalid parameter combination BCCloudKitDatabaseZoneObserver observer=%p recordType=%{public}@
BCCloudKitDatabaseController - Registering store for record zone %{public}@
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in registerServerChangeTokenStore:forZoneID: recordZoneID=%{public}@
BCCloudKitDatabaseController - performed zone fetch for recordZoneID:%{public}@
BCCloudKitDatabaseController - skipping fetch, we are not yet attached in registerServerChangeTokenStore:forZoneID:
BCCloudKitDatabaseController - Registered multiple stores for record zone %{public}@
BCCloudKitDatabaseController - Invalid parameter combination tokenStore=%p recordZoneID=%{public}@
BCCloudKitDatabaseController - Did not find tokenStore to remove
BCCloudKitDatabaseController - Trying to remove nil server change token store
(BDSAudiobookSyncPrepareActivity) Failed to transition to CONTINUE state
(BDSAudiobookSyncPrepareActivity) activity finished, shouldDefer = %d
(BDSAudiobookSyncPrepareActivity) Failed to set activity state to %ld
(BDSAudiobookSyncPrepareActivity) unexpected xpc state: %{public}ld
(BDSAudiobookSyncPrepareActivity) we were told to defer our activity
(BDSAudiobookSyncPrepareActivity) checking in
(BDSAudiobookSyncPrepareActivity) running...
Finished updating jalisco but were told to defer
Updating pinning lists was cancelled
Finished updating pinning lists, starting key prefetch
[Service]: Could not setup jalisco client
Recieved notification that ReadingNow preference changed, updatingEnableSync
BDSService Paused=%{public}@ SignedIn=%{public}@ CloudKit=%{public}@ isCloudKitEnabled=%{public}@
BDSService enabling assetSync: %{public}@ readingNow Sync: %{public}@
setCloudSyncPaused: %@
Unable to update jalisco - bookdatastored is missing a jalisco client
Unable to update jalisco family- bookdatastored is missing a jalisco client
Unable to hide jalisco items- bookdatastored is missing a jalisco client
Unable to hide jalisco items with store ids - bookdatastored is missing a jalisco client
Unable to reset purchased tokens- bookdatastored is missing a jalisco client
Unable to resetStaleJaliscoDatabase - bookdatastored is missing a jalisco client
Unable to update jalisco after sign in - bookdatastored is missing a jalisco client
Unable to update jalisco after sign out - bookdatastored is missing a jalisco client
hasSaltChangedWithCompletion should not be called
_coalescedNotification in %@ did not call notification within 10s.
BCAssetDetail configureFromCloudData wrong class passed in.
BCAssetDetail %@ Audiobook Configuring bookmark time old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Configuring bookmark time, ignoring as my bookmark time is same or newer old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Mismatch assetID from record assetID %@
BCAssetDetail %@ Resolving conflicts from record %@ adopting general record properties.
BCAssetDetail %@ Resolving conflicts from record %@, keeping my basic properties as my modification date is %{public}@.
BCAssetDetail %@ Resolving conflicts from record %@ adopting reading position properties.
BCAssetDetail %@ Resolving conflicts from record %@, keeping my reading position properties as my reading position update date is %{public}@.
BCAssetDetail %@ Resolving conflicts from record %@ adopting playback time properties.
BCAssetDetail %@ Audiobook Resolving bookmark time old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as bookmark time is NULL.
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as my bookmark time is newer old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as my bookmark time is newer old:[%@ = %.2f] new:[%@ = NULL].
BCAssetDetail %@ Resolving conflicts from record %@, keeping my playback time properties as my playback time update date is %{public}@.
BCAssetDetail %@ No Record supplied
BCMutableAssetDetail init with no assetID supplied
BCMutableAssetDetail init with no record supplied
BCMutableAssetDetail %@ attempt to move readingProgressHighWaterMark backwards from %f to %f
[BCCloudKitTransactionManager] Creating syncToCKTransaction %@
[BCCloudKitTransactionManager] registering completion %@ for syncToCKTransaction %@
[BCCloudKitTransactionManager] Transaction completed %@
Calling block %@ for transaction %@ 
Failed to create rawHistoryToken from data error: %@
Error unarchiving persistent history token: %{public}@
AutomaticPinningList startUpdate
About to enable sync
Doing nothing because alreadyRunning is %{public}@
BDSAutomaticPinningListUpdater ReceviedFetchedRecordsChanged %lu
Was cancelled before fetching records finished. currentObserver:%lu
At least one manager wanted to continue, so updating the pinning lists.
Updating wantToReadAndReadingNow completed and we were not cancelled.
Updating wantToReadAndReadingNow completed but we were already cancelled.
BCCloudKitFetchChangesTransaction - privateCloudDatabaseController is nil
Cannot determine valid salt establishedSalt:%{BOOL}d systemFields:%{BOOL}d for record %@
BCCollectionDetail %{public}@ invalid record name %{public}@ salt!
BCCloudData %{public}@ Unable to generate record name
BCCloudData recordType called
BCCloudData identifier called
BCCloudData zoneName called
BCCloudData +propertyIDKey called
BCMutableCloudData init with no privacy delegate!
BCMutableCloudData init with no record supplied
BCMutableCloudData ckSystemFields called
BCMutableCloudData recordType called
BCMutableCloudData identifier called
Unable to create persistent stores on the coordinator:%@
Error %{public}@: %{public}@ %d
Unable to migrate legacy database since file does not exist at URL %@
Unable to create cloud data source persistent store. Attempting to remove files and start over
Unable to recreate cloud data source persistent store. Giving up
Migrating legacy cloud data source from %@ to %@
Destroying legacy cloud data source at %@
Adding cloud data source persistent store for %@
#dissociateCloudData error: %@
#dissociateCloudData Successfully transitioned to a new cloud container for entity: %@
BCCloudDataManager error: %@
BCCloudDataManager Incremented cloudSyncVersion to %lld
No managed object context!
BCCloudDataManager %{public}@ startSyncToCKWithCompletion found %lu dirty records
BCCloudDataManager %@ startSyncToCKWithCompletion no records need updating
BCCloudDataManager #recordChange %{public}@ setCloudData for id:%{mask.hash}@ data:%@
Did not find %{public}@ to remove for predicate:%{pubic}@
Did not match the same results as the cloud data provided.
BCCloudDataManager #recordChange %{public}@ updateSyncGeneration %@
Did not find %{public}@ to update sync gen from cloudData:%@
BCCloudDataManager #recordChange %{public}@ deleteCloudDataForPredicate data:%@
Did not find %{public}@ to delete for predicate %{public}@
Tried to look up cloud data but there was no moc.
BCCloudDataManager #recordChange resolveConflictsForRecords: %{public}@
CKRecord unexpected with no local identifier: %{public}@
BCCloudDataManager resolveConflictsForRecords:%{public}@ did not find existing record.  Creating new from %@
BCCloudDataManager resolveConflictsForRecords:%{public}@ configuration did not allow creation of new record from %@
BCCloudDataManager #recordChange failedRecordIDs:%{public}@
BCCloudDataManager %@ getChangesSince returning changedObjects:%lu (%@) currentSyncVersions: %@
BCCloudDataManager %@ getChangesSince returning deletedObjects:%lu (%@) currentSyncVersions: %@
BCCloudDataManager %@ #dissociateCloudData
BCCloudDataManager %@ #hasSaltChangedWithCompletion
No managed object context! #hasSaltChangedWithCompletion
BCCloudDataManager %@ #hasSaltChangedWithCompletion no moc
BCCloudDataSyncManager: syncCloudData: entityName: %@, attachedState: %@ reachable: %@
BCCloudDataSyncManager: startSyncToCKWithCompletion entityName: %{public}@, attachedState: %{public}@ reachable: %{public}@
BCCloudDataSyncManager: cloudDataMap already contans an entry for deleting %@
BCCloudDataSyncManager: Unable to retrieve systemFields from %@
BCCloudDataSyncManager: Unable to configure CKRecord to save from %@
BCCloudDataSyncManager: cloudDataMap already contans an entry for saving %@
Successful save of CKRecord id=%@ %@
Successful removal of CKRecord ids=%@
Total success saving %lu records and deleting %lu records OperationID: %{public}@
Partial failure saving %lu records and deleting %lu records.  Failed %lu.
CKErrorServerRecordChanged record %{public}@ perRecordError %{public}@
Error for record %{public}@ operationError %{public}@ perRecordError %{public}@
Unable to retrieve serverRecord for recordID %{public}@ operationError %{public}@ perRecordError %{public}@
Error modifying record:%@ error=%{public}@
Record ID is nil for record to fetch: %@
Fetching %lu records that had assets on conflict
Successfully fetched %lu records that had assets on conflict
Error fetching records with assets on conflict: error=%{public}@
Error saving record, but we don't have a delegate to inform
Error modifying records: error=%{public}@
We can't have handled more records than we attempted to sync
Adding CKModifyRecordsOperation to database for: %{public}@.  Operation ID: %{public}@
We want to update the bitrate so fetching master playlist for mediaItem: %@
Updating wantToRead:%d, readingNow:%d, manuallyPinned:%d jaliscoUpdateSuccessful:%d
found readingNow member for assetID: %@
found readingNow member with assetID "%@" that has no MediaItem.
returning mostRecentAudiobook with assetID: %@
updating bitrate for item with adamID %@
Error updating bitrate for item with adamID %@
Updated bitrate for item with adadmID: %@
Performing initial update of automatic pinning lists but it has already been done, so just calling completion.
Performing initial update of automatic pinning lists.
We were asked to perform the initial update when there was already a callback waiting.
#dissociateCloudData Change Token Controller error: %@
#dissociateCloudData Change Token Controller successfully transitioned to a new cloud container for zone: %@
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - zoneNeedsUpdate serverSaltVersionIdentifier:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - no local identifier saved
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@  Comparing local(%@) to server(%@).Need update:%{BOOL}d
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ we should never have more than 1 record. We have %lu@) records.
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier serverSaltVersionIdentifier:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier NEW record %@
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier SAVE success %{BOOL}d error:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier Error saving saltVersionIdentifier:(%@) Error:%{public}@
<%@ BCCloudChangeTokenController - No change yet we tried updating %@
BCCloudChangeTokenController - Error deleting cloud tokens: %@ with server change token: %{public}@
BCCloudChangeTokenController - #recordChange Error saving MOC zone: %@ with server change token: %{public}@
BCCloudChangeTokenController - serverChangeTokenWithCompletion: %@
BCCloudChangeTokenController - #recordChange Error fetching from MOC zone: %@ with server change token: %{public}@
Error unarchiving server change token: %{public}@
BCCloudChangeTokenController - #recordChange zone: %@ returning server change token: %@
Initializing BCCloudAssetManager - Service mode
Dealloc BCCloudAssetManager
BCCloudAssetManager - Service build - #enableCloudSync setEnableCloudSync %@ enableReadingNowSync %@
BCCloudAssetManager hasSaltChangedWithCompletion with managers:%@
BCCloudAssetManager dissociateCloudDataFromSyncWithCompletion - Service mode - watch
Trying to remove without IDs
BDSNotificationConnection isWithinConnectionDateRange:%@
BDSNotificationConnection lastConnectionDate read as:%@
[Notification] Registering for notifications for container %@, pushEnv: %@
BDSNotificationConnection updated lastConnectionDate to:%@
[Notification] Received Public Token.
[Notification] Received APS Message with userInfo %@
Ignoring cloud notifications - Application has not been launched recently.
Processed Notifications - Application has been launched recently.
Ignored APSConnection message - not our connection, or no userInfo.
BCReadingNowDetail configureFromCloudData wrong class passed in.
BCReadingNowDetail %@ Mismatch assetID from record assetID %@
BCReadingNowDetail %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCReadingNowDetail %@ No Record supplied
BCMutableReadingNowDetail init with no assetID supplied
BCMutableReadingNowDetail init with no record supplied
BCAssetReview configureFromCloudData wrong class passed in.
BCAssetReview %@ Mismatch assetReviewID from record assetReviewID %@
BCAssetReview %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCAssetReview %@ No Record supplied
BCMutableAssetReview init with no assetReviewID supplied
BCMutableAssetReview init with no record supplied
BDSMediaLibraryUtils No daap item found for %@
BDSMediaLibraryUtils No collections for %@
BDSMediaLibraryUtils Could not find audiobookQuery.
[BDSJaliscoDAAPClient] Unable to initialize BDSJaliscoDAAPClient
BCStoreItem configureFromCloudData wrong class passed in.
BCStoreItem %@ Mismatch storeID from record storeID %@
BCStoreItem %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCStoreItem %@ No Record supplied
BCMutableStoreItem init with no storeID supplied
BCMutableStoreItem init with no record supplied
BDSNBController init.
BDSNBController fetch latest completed.
BDSNBController Initial fetch completed.
BDSNBController error: %@
BDSNBController fetchLatest
Error trying to write updated assetDetail for assetID: %@ error: %@
Failed to write updated assetDetail for assetID %@ with no error reported.
Updated assetDetail for assetID %@
BDSNBController attempting to update bookmark time from assetDetail %@
BDSNBController Setting bookmark time %f for media item assetDetail %@
BDSNBController media item has a newer date. Updating asset:%@. from mediaItem.lastPlayDate: %@ mediaItem.bookmarkTime %f, assetDetail.datePlaybackTimeUpdated:%@ assetDetail.bookmarkTime:%f
BDSNBController media item has the same date, not updating asset:%@. mediaItem.lastPlayDate: %@ mediaItem.bookmarkTime %f, assetDetail.datePlaybackTimeUpdated:%@ assetDetail.bookmarkTime:%f
BDSNBController No media items for %@
BDSNBController fetching changes since cloudSyncVersions: %@
BDSNBController Updating from assetDetails: updated (%lu) removed (%lu)
BDSNBController skipping non-store audiobook assetID: %@
BDSNBController skipping assetDetail without datePlaybackTimeUpdated for assetID: %@
BDSNBController fetching again while updating assetDetails.
BDSNBController done fetching while updating assetDetails.
Initializing service delegate.
BDSService within connection date range.
Service delegate released.
Received incomming connection request.
Refusing connection to pid %d. (appIdentifier: %@)
Received error from authenticator, removing proxy object (%p): %@
Accepted connection to %d.
Instantiating BDSService.
Checking if an account change happened, necessitating our process going away.
User logged out. Shutting down.
Checking if cloud data should get deleted.
User logged out from iCloud.  Deleting local copies of cloud data.
Deleted local copies of cloud data in response to logout.
Deleting cloud data.
Completed deleting cloud data
[BDSSaltVersionIdentifierManager] init with %@ %@. Adding to zone:(%@)
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ ---1. %@  
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 4. dissociateCloudDataFromSyncWithCompletion %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5a. updateSaltVersionIdentifier  %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5b. dissociateCloudDataFromSyncWithCompletion %{BOOL}d ERROR:%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 2. needsUpdate: %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3a.Need update. Calling dissociate
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3b. No update needed. Calling completion.
[BDSSaltVersionIdentifierManager] hasSaltChangedWithCompletion. %@ %{BOOL}d, ERROR:%@
[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - only update saltversionidentifier %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - skip update %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 6b - saltIdentifierError 
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - do nothing
Initializing BCCloudCollectionsManager - Service mode
BCCloudCollectionsManager SERVICE #enableCloudSync setEnableCloudSync:completion %@
BCCloudCollectionsManager collectionDetailManagerInstancecompleted enableCloudSync %{BOOL}d
BCCloudCollectionsManager collectionMemberManagerInstance completed enableCloudSync %{BOOL}d
BCCloudCollectionsManager - SERVICE setEnableCloudSync:completion DONE
BCCloudCollectionsManager #enableCloudSync setEnableCloudSync %@
BCCloudCollectionsManager hasSaltChangedWithCompletion %@
BCCloudCollectionsManager dissociateCloudDataFromSyncWithCompletion
BCCollectionDetail configureFromCloudData wrong class passed in.
BCCollectionDetail %{public}@ Mismatch collectionID from record collectionID %{public}@
BCCollectionDetail %{public}@ Resolving conflicts from record %{public}@, keeping my properties as my modification date is %{public}@.
BCCollectionDetail %{public}@ No Record supplied
BCMutableCollectionDetail init with no collectionID supplied
BCMutableCollectionDetail configureFromCloudData wrong class passed in.
BCMutableCollectionDetail init with no record supplied
BCMutableCollectionDetail requesting configured record with no underlying systemfields for collectionID:%@
BCCollectionMember configureFromCloudData wrong class passed in.
BCCollectionMember resolveConflictsFromRecord record contains nil collectionMemberID
BCCollectionMember %@ Mismatch assetID from record collectionMemberID %@
BCCollectionMember %@ Resolving conflicts from record %{public}@, keeping my properties as my modification date is %{public}@.
BCMutableCollectionMember init with no collectionMemberID supplied
BCCollectionMember initWithCloudData cloudData contains nil collectionMemberID
BCMutableCollectionMember configureFromCloudData wrong class passed in.
BCCollectionMember initWithCloudData record contains nil collectionMemberID
BCMutableCollectionMember init with no record supplied
daemon
start
mainRunLoop
init
dealloc
listenersReadyQueue
lrq_setupListeners
setSigterm_source:
sigterm_source
startupQueue
sq_finishedStartingUp
lrq_setupBeforeListenersWithCompletion:
notificationConnection
didAcceptConnection:
initWithServiceConnectionClient:
setServiceDelegate:
initWithMachServiceName:
setServiceListener:
serviceDelegate
serviceListener
setDelegate:
resume
setHARLoggingEnabled:
setHARLoggingItemLimit:
setNotificationConnection:
startListeningForNotifications
setSyncPrepareActivity:
syncPrepareActivity
registerActivity
makeOSStateHandler
setSyncUserDefaultsStateHandler:
serviceDelegate:didAcceptConnection:
setListenersReadyQueue:
setStartupQueue:
syncUserDefaultsStateHandler
.cxx_destruct
_serviceDelegate
_listenersReadyQueue
_startupQueue
_serviceListener
_syncUserDefaultsStateHandler
_notificationConnection
_sigterm_source
_syncPrepareActivity
T@"BDSServiceDelegate",&,N,V_serviceDelegate
T@"NSObject<OS_dispatch_queue>",&,N,V_listenersReadyQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_startupQueue
T@"NSXPCListener",&,N,V_serviceListener
T@"BUOSStateHandler",&,N,V_syncUserDefaultsStateHandler
T@"BDSNotificationConnection",&,N,V_notificationConnection
T@"NSObject<OS_dispatch_source>",&,N,V_sigterm_source
T@"BDSAudiobookSyncPrepareActivity",&,N,V_syncPrepareActivity
bundleForClass:
bundleURL
count
pointerAtIndex:
errorWithDomain:code:userInfo:
methodForSelector:
removePointerAtIndex:
bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:
bds_chainUntilNoErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:
countByEnumeratingWithState:objects:count:
valueForKey:
copyWithZone:
setObject:forKeyedSubscript:
copy
objectAtIndex:
null
addObject:
bds_arrayByRemovingNSNullsInvokingBlockForNulls:
subarrayWithRange:
initWithOptions:
addPointer:
bds_dictionaryUsingPropertyAsKey:
bds_arrayByRemovingNSNulls
bds_traverseBatchesOfSize:block:
bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:completion:
bds_chainUntilNoErrorCompletionSelectorCallsForSelector:completion:
initWithCapacity:
objectForKeyedSubscript:
bds_subDictionaryWithKeys:
isEqual:
setValue:forKey:
setDifferentValue:forKey:klass:
dictionary
setObject:forKey:
setDifferentObject:forKey:
setDifferentString:forKey:
setDifferentNumber:forKey:
setDifferentDate:forKey:
propertiesForKeys:
stopNotifier
UTF8String
reachabilityWithAddress:
localWiFiStatusForFlags:
networkStatusForFlags:
sharedReachabilityForInternetConnection
currentReachabilityStatus
reachabilityForInternetConnection
reachabilityWithHostName:
reachabilityForLocalWiFi
_updateIsOffline
isOffline
startNotifier
connectionRequired
localWiFiRef
reachabilityRef
defaultCenter
postNotificationName:object:
initWithObjects:
andPredicateWithSubpredicates:
entityForName:inManagedObjectContext:
setEntity:
setPredicate:
countForFetchRequest:error:
logRecursively
isEqualToString:
setResultType:
setPropertiesToFetch:
setReturnsDistinctResults:
initWithKey:ascending:
setSortDescriptors:
executeFetchRequest:error:
copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:distinct:
arrayWithObject:
copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:
copyEntityPropertyArray:fromEntityName:withPredicate:sortBy:ascending:
lastObject
insertNewObjectForEntityForName:inManagedObjectContext:
setIncludesPropertyValues:
setRelationshipKeyPathsForPrefetching:
setReturnsObjectsAsFaults:
setFetchLimit:
setFetchBatchSize:
entity:withPredicate:sortDescriptors:fetchLimit:prefetchRelationships:
entity:withPredicate:sortBy:ascending:fetchLimit:prefetchRelationships:
entity:withPredicate:sortBy:ascending:fetchLimit:
im_pushSafeAccessState
name
im_popSafeAccessState
countEntity:withPredicate:
copyEntityProperty:fromEntityName:withPredicate:
newByClass:
objectIDsWithPredicate:forEntity:
unbatchedObjectsWithPredicate:forEntity:
entity:withPredicate:
im_performSafeAccess:
im_isPerformingSafeAccess
mergePredicate:andPredicate:
deleteObject:
save:
batchDeleteEntity:matching:prefetchRelationships:
persistentStores
setWithArray:
intersectsSet:
hasStoreInCommonWith:
bds_addObjectIfNotNil:
bds_UUID
length
initWithFormat:arguments:
stringWithCString:encoding:
lastPathComponent
numberWithInt:
initWithTransactionName:
endTransaction
osTransaction
setOsTransaction:
_osTransaction
T@"NSObject<OS_os_transaction>",&,N,V_osTransaction
userInfo
localizedDescription
localizedFailureReason
localizedRecoverySuggestion
localizedRecoveryOptions
objectForKey:
mainBundle
objectForInfoDictionaryKey:
appVersion
arrayWithObjects:count:
containerIdentifier
containerURL
_initWithSuiteName:container:
syncedPreferenceKeys
objectFromGroupPreferencesForKey:
T@"NSArray",R,N
stringByAppendingString:
processInfo
environment
isUnitTesting
stringByAppendingPathComponent:
defaultManager
removeItemAtPath:error:
fileURLWithPath:
bu_booksGroupContainerURL
URLByAppendingPathComponent:
setUnitTesting:
documentsURL
unitTesting
TB,GisUnitTesting
T@"NSURL",R
dictionaryWithContentsOfURL:
mutableCopy
trackLiverpool
tokenForCurrentIdentityIfCloudKitEnabled
initWithCurrentIdentity
setCurrentToken:
initWithToken:
dispatchQueue
currentToken
plistContents
initFromArchive:
removeObjectForKey:
token
plistURL
writeToURL:atomically:
initWithContainerURL:trackingLiverpool:
fetchCurrentToken
forceUpdateTokenWithString:
didUnacknowledgediCloudLogoutOccur
acknowledgeiCloudIdentity
setPlistContents:
setPlistURL:
setDispatchQueue:
setTrackLiverpool:
_trackLiverpool
_plistContents
_plistURL
_currentToken
_dispatchQueue
T@"NSMutableDictionary",&,N,V_plistContents
T@"NSURL",&,N,V_plistURL
T@"BDSICloudIdentityToken",&,N,V_currentToken
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
TB,N,V_trackLiverpool
primaryAppleAccount
accountType
identifier
_isServiceEnabledAlternative:
_isServiceDisabledAlternative:
_setService:enabled:
isGlobalICloudDriveSyncOptedIn
aa_altDSID
_stateForLog
initWithTitle:block:
_isBundleIdentifierInArray:
isSignedIntoICloud
numberWithBool:
isCloudKitSyncOptedIn
iCloudIdentity
dictionaryWithObjects:forKeys:count:
_hashFor:
stringWithFormat:
dataUsingEncoding:
bu_md5UpperCase
description
setToken:
_token
T@"NSString",C,N,V_token
setQueueIdentifier:
setContainerIdentifier:
setAppZones:
setServiceZones:
setDbArchiveFolderName:
setDbArchiveExtension:
setDbArchiveFilename:
setDbSubscriptionID:
bdsAppBundleIdentifier
setAppBundleIdentifier:
setRequiresDeviceToDeviceEncryption:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
incrementEditGeneration
recordType
zoneName
deletedFlag
modificationDate
editGeneration
syncGeneration
systemFields
ckSystemFields
privacyDelegate
setPrivacyDelegate:
TB,R,N
T@"NSDate",R,C,N
Tq,R,N
T@"CKRecord",R,C,N
T@"NSData",R,C,N
T@"<BCCloudDataPrivacyDelegate>",W,N
assetID
isFinished
notFinished
lastOpenDate
dateFinished
taste
tasteSyncedToStore
readingProgress
readingProgressHighWaterMark
readingPositionCFIString
readingPositionAnnotationVersion
readingPositionAssetVersion
readingPositionUserData
readingPositionLocationRangeStart
readingPositionLocationRangeEnd
readingPositionAbsolutePhysicalLocation
readingPositionStorageUUID
readingPositionLocationUpdateDate
datePlaybackTimeUpdated
bookmarkTime
T@"NSString",R,C,N
Ts,R,N
Tf,R,N
Ti,R,N
Td,R,N
collectionMemberID
sortOrder
collectionIDFromCollectionMemberID:
configuration
shouldArchiveData:
shouldPerformDatabaseSubscriptionForServiceMode:
queueIdentifier
appZones
serviceZones
dbArchiveFolderName
dbArchiveExtension
dbArchiveFilename
dbSubscriptionID
appBundleIdentifier
requiresDeviceToDeviceEncryption
T@"NSString",R,N
_requiresDeviceToDeviceEncryption
_queueIdentifier
_containerIdentifier
_appZones
_serviceZones
_dbArchiveFolderName
_dbArchiveExtension
_dbArchiveFilename
_dbSubscriptionID
_appBundleIdentifier
T@"NSString",&,N,V_queueIdentifier
T@"NSString",&,N,V_containerIdentifier
T@"NSArray",&,N,V_appZones
T@"NSArray",&,N,V_serviceZones
T@"NSString",&,N,V_dbArchiveFolderName
T@"NSString",&,N,V_dbArchiveExtension
T@"NSString",&,N,V_dbArchiveFilename
T@"NSString",&,N,V_dbSubscriptionID
T@"NSString",&,N,V_appBundleIdentifier
TB,N,V_requiresDeviceToDeviceEncryption
initWithConfiguration:
initWithCloudKitController:
setTransactionManager:
setConfiguration:
p_accountChanged:
addObserver:selector:name:object:
p_identityChanged:
p_privateDatabaseArchiveURLForConfiguration:
initWithSubscriptionID:appBundleIdentifier:archiveURL:
serviceMode
willAttachToContainer:serviceMode:completion:
accessQueue
p_updateAttachment
initWithNotifyBlock:notifyTimeout:blockDescription:notifyTimeoutBlock:
setCoalescingDelay:
coalescedAttachment
signalWithCompletion:
privateCloudDatabaseController
gettingAccountInfo
enableCloudSync
p_getAccountInfo
setContainer:
detach
container
transactionManager
signalFetchChangesTransaction:
getAttached:
sharedInstance
databaseFolderURLForConfiguration:
removeItemAtURL:error:
path
initFileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
p_createDatabaseArchiveDirectoryForConfiguration:
stringByAppendingPathExtension:
accountInfoWithCompletionHandler:
accountStatusWithCompletionHandler:
setGettingAccountInfo:
containerWithIdentifier:
setSourceApplicationBundleIdentifier:
doubleValue
supportsDeviceToDeviceEncryption
privateCloudDatabase
attachToZones:completion:
connectUserTo:container:updateSubscription:completion:subscriptionCompletion:
p_getNecessaryAccountInfoFromContainer:completion:
notificationFromRemoteNotificationDictionary:
subscriptionID
detachWithError:completion:
deleteCloudDataWithCompletion:
T@"BCCloudKitController",R
setEnableCloudSync:serviceMode:
applicationDidBecomeActive
handleRemoteNotification:
setPrivateCloudDatabaseController:
didChangeContainer
setDidChangeContainer:
setAccessQueue:
setEnableCloudSync:
setServiceMode:
setCoalescedAttachment:
_didChangeContainer
_gettingAccountInfo
_enableCloudSync
_serviceMode
_transactionManager
_privateCloudDatabaseController
_configuration
_container
_accessQueue
_coalescedAttachment
T@"BCCloudKitTransactionManager",&,N,V_transactionManager
T@"CKContainer",&,N,V_container
T@"BCCloudKitDatabaseController",&,V_privateCloudDatabaseController
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
TB,N,V_gettingAccountInfo
TB,N,V_enableCloudSync
TB,N,V_serviceMode
TB,N,V_didChangeContainer
T@"<BCContainerConfiguration>",&,N,V_configuration
T@"BUCoalescingCallBlock",&,N,V_coalescedAttachment
recordZone
initWithRecordZone:
_recordZone
T@"CKRecordZone",R,N,V_recordZone
strongToWeakObjectsMapTable
p_unarchive
p_archiveToData
database
attachedToContainer
fetchRecordZoneChangesSuccess
setAttachedToContainer:
p_informObserversOfAttachmentChange
p_fetchZoneChanges:
changedRecordZoneIDs
allObjects
coalescedZoneFetch
p_fetchDatabaseChanges:
fetchRecordWithID:completionHandler:
p_unsubscribeToContainer:
setHasSubscription:
setServerChangeToken:
p_scheduleArchiveWithCompletion:
p_subscribeWithCompletion:
fetchUserRecordIDWithCompletionHandler:
containsString:
initWithZoneName:ownerName:
enumerateObjectsUsingBlock:
desiredRecordZoneIDs
fetchChangesWithCompletion:
p_createRecordIDSaltWithCompletion:
allKeys
zonesUnreadableDueToMissingD2DEncryptionIdentity:completion:
zonesTemporarilyUnreadableWithError:completion:
p_createRecordZones:completionHandler:
recordZones
recordIDSalt
bytes
dataWithBytes:length:
base64EncodedStringWithOptions:
saltedAndHashedIDFromLocalID:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
bds_defaultConfiguration
setDatabase:
setModifySubscriptionsCompletionBlock:
addOperation:
hasSubscription
initWithSubscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
operationID
serverChangeToken
initWithPreviousServerChangeToken:
setFetchAllChanges:
setRecordZoneWithIDWasDeletedBlock:
setChangeTokenUpdatedBlock:
setRecordZoneWithIDChangedBlock:
setFetchDatabaseChangesCompletionBlock:
initWithRecordZoneIDs:
zoneID
allValues
minusSet:
initWithZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
arrayByAddingObjectsFromArray:
setModifyRecordZonesCompletionBlock:
code
isEqualToSet:
setFetchRecordZonesCompletionBlock:
initWithRecordName:
encryptedValuesByKey
setRecordIDSalt:
recordChangeTag
p_informObserversOfSaltVersionIdentifierChanged:forZones:completion:
initWithRecordType:recordID:
domain
initWithName:reason:userInfo:
saveRecord:completionHandler:
serverFetchPostponed
array
tokenStores
containsObject:
cloudSyncEnabled
p_informObserversOfCompletedFetchOfZone:
p_fetchRecordZoneChangesForRecordZoneIDs:completionHandler:
serverChangeTokenWithCompletion:
setPreviousServerChangeToken:
removeObject:
p_fetchRecordZoneChanges:optionsByRecordZoneID:completionHandler:
setBackOffInterval:
backOffInterval
initWithRecordZoneIDs:configurationsByRecordZoneID:
setQualityOfService:
setDiscretionaryNetworkBehavior:
setAutomaticallyRetryNetworkFailures:
recordID
p_informObserversOfRecordsChanged:forRecordType:
removeAllObjects
setRecordChangedBlock:
observers
databaseController:recordWithIDWasDeleted:recordType:
setRecordWithIDWasDeletedBlock:
p_informObserversOfRecordsChanged:
storeServerChangeToken:completion:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setServerFetchPostponed:
p_updateRetryParametersFromFetchZoneChangesOperationError:
setFetchRecordZoneChangesSuccess:
setFetchRecordZoneChangesCompletionBlock:
databaseController:attachmentChanged:
enumerateKeysAndObjectsUsingBlock:
zoneObservers
databaseController:saltVersionIdentifierChanged:completion:
initWithArray:copyItems:
databaseController:recordsChanged:
databaseController:fetchedAllRecordsInZone:
coalescedArchive
archiveURL
initWithContentsOfURL:
p_unarchiveFromData:
initRequiringSecureCoding:
encodeInteger:forKey:
encodeObject:forKey:
userRecordID
finishEncoding
encodedData
initForReadingFromData:error:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
setUserRecordID:
finishDecoding
encodeSystemFieldsWithCoder:
initWithCoder:
_deleteRecordZonesWithIDs:qualityOfService:completion:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
encodeRecordSystemFields:
decodeRecordFromSystemFields:
startInternetConnectionReachabilityNotifier
establishedSalt
recordNameFromRecordType:identifier:
fetchRecordForRecordID:completion:
recordZoneWithName:completionHandler:
addObserver:recordType:
removeObserver:recordType:
removeObserver:
addObserver:zoneID:
registerServerChangeTokenStore:forZoneID:
unregisterServerChangeTokenStore:
setSubscriptionID:
setArchiveURL:
setDesiredRecordZoneIDs:
setChangedRecordZoneIDs:
setCoalescedArchive:
setRecordZones:
setObservers:
setZoneObservers:
setTokenStores:
setCoalescedZoneFetch:
_zoneObserversLock
_hasSubscription
_attachedToContainer
_serverFetchPostponed
_fetchRecordZoneChangesSuccess
_database
_subscriptionID
_archiveURL
_desiredRecordZoneIDs
_changedRecordZoneIDs
_coalescedArchive
_userRecordID
_serverChangeToken
_recordIDSalt
_recordZones
_observers
_zoneObservers
_tokenStores
_coalescedZoneFetch
_backOffInterval
T@"CKDatabase",&,N,V_database
T@"NSURL",C,N,V_archiveURL
T@"NSArray",C,N,V_desiredRecordZoneIDs
T@"NSMutableSet",&,N,V_changedRecordZoneIDs
T@"BUCoalescingCallBlock",&,N,V_coalescedArchive
T@"NSString",C,N,V_subscriptionID
T@"NSString",C,N,V_containerIdentifier
T@"CKRecordID",&,N,V_userRecordID
T@"CKServerChangeToken",&,N,V_serverChangeToken
T@"NSData",&,N,V_recordIDSalt
T@"NSMutableDictionary",&,N,V_recordZones
T@"NSMutableDictionary",&,N,V_observers
T@"NSMapTable",&,N,V_zoneObservers
T@"NSMutableDictionary",&,N,V_tokenStores
T@"BUCoalescingCallBlock",&,N,V_coalescedZoneFetch
TB,N,V_attachedToContainer
Td,N,V_backOffInterval
TB,N,V_serverFetchPostponed
TB,N,V_fetchRecordZoneChangesSuccess
TB,N,V_hasSubscription
componentsJoinedByString:
_checkInWithActivity:
_removeEligibilityHandler
_runWithCompletion:
_addEligibilityHandlerForActivity:
_defer
setDeferred:
sharedManager
pinningListUpdater
cancelWithManager:
setCompletionHandler:
sharedClient
deferred
completionHandler
startUpdateWithManager:jaliscoUpdateSuccessful:
updateFamilyPolitely:reason:completion:
_importArtwork
_prefetchKeys
listUpdaterShouldBecomeObserverToInProgressUpdate:
listUpdater:updateDidCompleteWithError:wasCancelled:
_deferredLock
_eligibilityLock
_eligibilityChangedHandler
_deferred
_completionHandler
TB,N,V_deferred
T@?,C,N,V_completionHandler
fetchRequestWithEntityName:
initWithEntity:insertIntoManagedObjectContext:
fetchRequest
initIntoManagedObjectContext:
localSaltVersionIdentifier
T@"NSString",&,D,N
serverSaltVersionIdentifier
prewarm
sharedService
assetDataSource
initWithCloudDataSource:
jaliscoDAAPClient
setDaapClientDelegate:
_updateEnableSync
tccAccessChanged:
paused
boolValue
isPrimaryAccountManagedAppleID
assetManager
setEnableCloudSync:enableReadingNowSync:
authenticators
cloudCollectionsManager
setPaused:
dissociateCloudDataFromSyncWithCompletion:
assetDetailManager
assetDetailForAssetID:completion:
assetDetailsForAssetIDs:completion:
resolvedAssetDetailForAssetID:completion:
currentAssetDetailCloudSyncVersions:
deleteAssetDetailForAssetID:completion:
fetchAssetDetailsIncludingDeleted:completion:
getAssetDetailChangesSince:completion:
setAssetDetail:completion:
setAssetDetails:completion:
fetchAssetDetailsForUnsyncedTastes:
fetchFinishedDatesByAssetIDForYear:completion:
fetchFinishedAssetCountByYearWithCompletion:
readingNowDetailManager
readingNowDetailsForAssetIDs:completion:
currentReadingNowDetailCloudSyncVersions:
deleteReadingNowDetailForAssetID:completion:
getReadingNowDetailChangesSince:completion:
setReadingNowDetails:completion:
assetReviewManager
assetReviewForAssetReviewID:completion:
assetReviewsForAssetReviewIDs:completion:
deleteAssetReviewForAssetReviewID:completion:
deleteAssetReviewForAssetReviewIDs:completion:
fetchAssetReviewsForUserID:includingDeleted:completion:
getAssetReviewChangesSince:completion:
setAssetReview:completion:
setAssetReviews:completion:
storeAssetManager
addStoreItem:completion:
addStoreItems:completion:
deleteStoreItemWithStoreID:completion:
deleteStoreItemsWithStoreIDs:completion:
fetchStoreItemsIncludingDeleted:completion:
getStoreItemChangesSince:completion:
storeItemForStoreID:completion:
collectionDetailManager
collectionDetailForCollectionID:completion:
collectionDetailsForCollectionIDs:completion:
currentCollectionDetailCloudSyncVersions:
deleteCollectionDetailForCollectionID:completion:
deleteCollectionDetailForCollectionIDs:completion:
fetchCollectionDetailsIncludingDeleted:completion:
getCollectionDetailChangesSince:completion:
setCollectionDetail:completion:
setCollectionDetails:completion:
collectionMemberManager
collectionMemberForCollectionMemberID:completion:
currentCollectionMemberCloudSyncVersions:
deleteCollectionMemberForCollectionMemberID:completion:
deleteCollectionMemberForCollectionMemberIDs:completion:
fetchCollectionMembersIncludingDeleted:completion:
fetchCollectionMembersInCollectionID:completion:
getCollectionMemberChangesSince:completion:
setCollectionMember:completion:
setCollectionMembers:completion:
fetchMaxSortOrderInCollectionID:completion:
mostRecentAudiobookWithCompletion:
updateWantToReadAndReadingNowWithJaliscoUpdateSuccessful:completion:
updateWantToReadWithCompletion:
updateReadingNowWithCompletion:
updateBitrateForItemWithAdamID:completion:
performInitialUpdateOfAutomaticPinningListsWithCompletion:
audiobookStoreIsAvailable:
updatePolitely:reason:completion:
setItemHidden:forStoreID:completion:
hideItemsWithStoreIDs:completion:
resetPurchasedTokenForStoreIDs:completion:
deleteItemsWithStoreIDs:completion:
resetStaleJaliscoDatabaseWithCompletion:
updatePolitelyAfterSignIn:reason:completion:
updatePolitelyAfterSignOut:reason:completion:
requestITunesAuthenticationWithReply:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
clientDetectedStoreChange:
clientDetectedStoreChangeAndAccountChange:
clientDetectedPredicateChange:
clientDetectedPurchaseServerClientExpired:
clientRequestITunesAuthentication:withCompletion:
hasSaltChangedWithCompletion:
setEnableCollectionSync:
setCloudSyncPaused:
fetchMostRecentAudiobookWithCompletion:
audiobookStoreEnabledWithCompletion:
enableSyncChanged:
addAuthenticator:
removeAuthenticator:
setAssetManager:
setCloudCollectionsManager:
nanoBooksController
setNanoBooksController:
setJaliscoDAAPClient:
setAuthenticators:
_authenticatorsLock
_paused
_assetManager
_cloudCollectionsManager
_nanoBooksController
_jaliscoDAAPClient
_authenticators
TB,N,V_paused
T@"BCCloudAssetManager",W,N,V_assetManager
T@"BCCloudCollectionsManager",W,N,V_cloudCollectionsManager
T@"BDSNBController",&,N,V_nanoBooksController
T@"BDSJaliscoDAAPClient",&,N,V_jaliscoDAAPClient
T@"NSMutableOrderedSet",&,N,V_authenticators
transactionName
cStringUsingEncoding:
performWorkWithCompletion:
coalescingDelay
entityName
transactionNameForEntityName:
lifecycleAccessQueue
clientCount
setClientCount:
transactionLifetime
coalescedNotification
laq_scheduleTransactionLifetime
delegate
transactionCompleted:
setTransactionLifetime:
initWithEntityName:delegate:
transactionLifetimeTimout
clientConnected
signal
setEntityName:
setCoalescedNotification:
setLifecycleAccessQueue:
_entityName
_coalescedNotification
_lifecycleAccessQueue
_transactionLifetime
_delegate
_clientCount
T@"NSString",C,N,V_entityName
T@"BUCoalescingCallBlock",&,N,V_coalescedNotification
T@"BDSOSTransaction",&,N,V_osTransaction
T@"NSObject<OS_dispatch_queue>",&,N,V_lifecycleAccessQueue
T@"NSObject<OS_dispatch_source>",&,N,V_transactionLifetime
T@"<BCCloudKitTransactionDelegate>",W,N,V_delegate
Tq,N,V_clientCount
initWithCloudData:
_configureFromAssetDetail:withMergers:
configureFromCloudData:withMergers:
numberWithShort:
timeIntervalSinceReferenceDate
numberWithFloat:
setDifferentBookmarkTime:
setBookmarkTime:
isEqualExceptForDate:
isEqualToDate:
resolveConflictsFromRecord:withResolvers:
localIdentifierFromRecord:
setAssetID:
recordName
hasChanges
propertyIDKey
isAudiobook
T@"NSString",C,D,N
TB,D,N
T@"NSDate",C,D,N
Ts,D,N
Tf,D,N
T@"NSData",C,D,N
Ti,D,N
Td,D,N
initWithRecord:
integerValue
floatValue
intValue
configuredRecordFromAttributes
numberWithDouble:
encodeWithCoder:
encodeBool:forKey:
encodeInt32:forKey:
encodeDouble:forKey:
localRecordID
decodeBoolForKey:
decodeInt32ForKey:
decodeDoubleForKey:
supportsSecureCoding
TB,R
initWithAssetID:
setReadingProgressHighWaterMark:
setIsFinished:
setNotFinished:
setTaste:
setTasteSyncedToStore:
setDateFinished:
setLastOpenDate:
setReadingProgress:
setReadingPositionCFIString:
setReadingPositionAnnotationVersion:
setReadingPositionAssetVersion:
setReadingPositionUserData:
setReadingPositionLocationRangeStart:
setReadingPositionLocationRangeEnd:
setReadingPositionAbsolutePhysicalLocation:
setReadingPositionStorageUUID:
setDatePlaybackTimeUpdated:
setReadingPositionLocationUpdateDate:
_isFinished
_notFinished
_taste
_tasteSyncedToStore
_readingProgress
_readingProgressHighWaterMark
_readingPositionLocationRangeStart
_readingPositionLocationRangeEnd
_readingPositionAbsolutePhysicalLocation
_assetID
_dateFinished
_lastOpenDate
_readingPositionCFIString
_readingPositionAnnotationVersion
_readingPositionAssetVersion
_readingPositionUserData
_readingPositionStorageUUID
_datePlaybackTimeUpdated
_bookmarkTime
_readingPositionLocationUpdateDate
T@"NSString",C,N,V_assetID
TB,N,V_isFinished
TB,N,V_notFinished
T@"NSDate",C,N,V_lastOpenDate
T@"NSDate",C,N,V_dateFinished
Ts,N,V_taste
Ts,N,V_tasteSyncedToStore
Tf,N,V_readingProgress
Tf,N,V_readingProgressHighWaterMark
T@"NSString",C,N,V_readingPositionCFIString
T@"NSString",C,N,V_readingPositionAnnotationVersion
T@"NSString",C,N,V_readingPositionAssetVersion
T@"NSData",C,N,V_readingPositionUserData
Ti,N,V_readingPositionLocationRangeStart
Ti,N,V_readingPositionLocationRangeEnd
Ti,N,V_readingPositionAbsolutePhysicalLocation
T@"NSString",C,N,V_readingPositionStorageUUID
T@"NSDate",C,N,V_readingPositionLocationUpdateDate
T@"NSDate",C,N,V_datePlaybackTimeUpdated
Td,N,V_bookmarkTime
transactionAccessQueue
transactions
initWithEntityName:notificationName:delegate:
signalSyncToCKTransactionForEntityName:syncManager:completion:
initWithEntityName:syncManager:delegate:
transactionCompletionCallbacks
cloudKitController
initWithCloudKitController:delegate:
signalDataChangeTransactionForEntityName:notificationName:
signalSyncToCKTransactionForEntityName:syncManager:
setCloudKitController:
setTransactionAccessQueue:
setTransactions:
setTransactionCompletionCallbacks:
_cloudKitController
_transactionAccessQueue
_transactions
_transactionCompletionCallbacks
T@"BCCloudKitController",W,N,V_cloudKitController
T@"NSObject<OS_dispatch_queue>",&,N,V_transactionAccessQueue
T@"NSMutableDictionary",&,N,V_transactions
T@"NSMutableDictionary",&,N,V_transactionCompletionCallbacks
syncManager
startSyncToCKWithCompletion:
setSyncManager:
_syncManager
T@"BCCloudDataSyncManager",&,N,V_syncManager
notificationName
setNotificationName:
_notificationName
T@"NSString",C,N,V_notificationName
initWithCloudSyncVersions:
cloudVersion
setCloudVersion:
localVersion
setLocalVersion:
syncVersion
setSyncVersion:
historyToken
setHistoryToken:
historyTokenOffset
setHistoryTokenOffset:
archivedDataWithRootObject:requiringSecureCoding:error:
setRawHistoryToken:
rawHistoryToken
unarchivedObjectOfClass:fromData:error:
dataType
T@"NSPersistentHistoryToken",R,C,N
configureFromSyncVersions:
T@"NSPersistentHistoryToken",C,D,N
Tq,D,N
encodeInt64:forKey:
setDataType:
decodeInt64ForKey:
_dataType
_cloudVersion
_localVersion
_syncVersion
_historyToken
_historyTokenOffset
T@"NSString",C,N,V_dataType
T@"NSPersistentHistoryToken",C,N,V_historyToken
Tq,N,V_historyTokenOffset
Tq,N,V_cloudVersion
Tq,N,V_localVersion
Tq,N,V_syncVersion
weakObjectsHashTable
setJaliscoUpdateSuccessful:
_updateCloudDataWithManager:
_l_cancelWithManagers:
managers
currentProgress
cancel
setCurrentProgress:
observer
setObserver:
currentObserverIdentifier
setCurrentObserverIdentifier:
_receivedFetchedRecordsChangedFromObserver:
progressWithTotalUnitCount:
setCancellationHandler:
setEnableCloudSync:completion:
_l_finishedFetchingCollectionsWithManager
jaliscoUpdateSuccessful
setManagers:
_stateLock
_jaliscoUpdateSuccessful
_currentProgress
_managers
_observer
_currentObserverIdentifier
T@"NSProgress",&,N,V_currentProgress
T@"NSHashTable",&,N,V_managers
T@?,C,N,V_observer
TQ,N,V_currentObserverIdentifier
TB,N,V_jaliscoUpdateSuccessful
nullPrivacyDelegate
setSystemFields:
setSaltedHashedID:
saltedHashedID
initWithRecordName:zoneID:
setCkSystemFields:
setEditGeneration:
hasValidSalt
_privacyDelegate
T@"CKRecord",C,D,N
T@"<BCCloudDataPrivacyDelegate>",W,N,V_privacyDelegate
data
setDeletedFlag:
setSyncGeneration:
setModificationDate:
setLocalRecordID:
_deletedFlag
_editGeneration
_syncGeneration
_modificationDate
_systemFields
_localRecordID
TB,N,V_deletedFlag
T@"NSDate",C,N,V_modificationDate
Tq,N,V_editGeneration
Tq,N,V_syncGeneration
T@"NSString",C,N,V_localRecordID
T@"CKRecord",C,N,V_systemFields
T@"NSData",R,C,D,N
initWithManagedObjectModel:
_persistentStoreOptions
addPersistentStoreWithType:configuration:URL:options:error:
_setupManagedObjectContext
_sharedRootDirectoryURL
_sharedLegacyRootDirectoryURL
initWithManagedObjectModel:rootDirectoryURL:legacyRootDirectoryURL:nameOnDisk:
_setupPersistentStoreWithRootDirectoryURL:legacyRootDirectoryURL:nameOnDisk:
_documentsDirectoryURL
URLByAppendingPathComponent:isDirectory:
_directoryExistsForStoreAtURL:
_createDirectoryForStoreAtURL:
_migrateAndDestroyStoreAtLegacyURL:toModernURL:
_addStoreAtURL:
_deleteDirectoryForStoreAtURL:
initWithConcurrencyType:
setPersistentStoreCoordinator:
setUndoManager:
URLByDeletingLastPathComponent
checkResourceIsReachableAndReturnError:
_logIf:error:operation:
replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
destroyPersistentStoreAtURL:withType:options:error:
isReadOnly
removePersistentStore:error:
initWithManagedObjectModel:nameOnDisk:
managedObjectContext
setManagedObjectContext:
persistentStoreCoordinator
_managedObjectContext
_persistentStoreCoordinator
T@"NSManagedObjectContext",&,N,V_managedObjectContext
T@"NSPersistentStoreCoordinator",&,N,V_persistentStoreCoordinator
changes
objectAtIndexedSubscript:
changeType
changedObjectID
existingObjectWithID:error:
isDeleted
refreshObject:mergeChanges:
entity
tombstone
processPendingChanges
bds_atOffset:getAtMost:moc:entityClass:privacyDelegate:updated:tombstones:
initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:dataMapper:
mq_cloudSyncVersions
responseQueue
initWithEntityName:
predicateWithFormat:
_logError:
syncCloudData:completion:
performBlock:
firstObject
signalSyncToCK
signalDataChangedTransaction
numberWithInteger:
setCloudData:predicate:mergers:completion:
mq_incrementCloudVersion
mq_signalTransactions
mq_sanitizeError:
setCloudData:predicate:propertyIDKey:mergers:completion:
dictionaryWithCapacity:
arrayWithCapacity:
resolvedCloudDataForCloudData:withResolvers:predicate:completion:
resolvedCloudDataForCloudData:withResolvers:mergers:predicate:completion:
dataMapper
cloudDataFromRecord:
mutableClass
resolveConflictsForRecords:withResolvers:completion:
resolveConflictsForRecords:withResolvers:mergers:completion:
immutableClass
removeObjectsInArray:
predicateWithValue:
cloudDatasWithPredicate:completion:
fetchHistoryAfterToken:
executeRequest:error:
result
addObjectsFromArray:
initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:
currentCloudSyncVersions:
setCloudData:predicate:completion:
setCloudData:predicate:propertyIDKey:completion:
removeCloudDataForPredicate:completion:
updateSyncGenerationFromCloudData:predicate:propertyIDKey:completion:
deleteCloudDataForPredicate:completion:
countWithPredicate:completion:
cloudDataWithPredicate:sortDescriptors:completion:
cloudDatasWithPredicate:sortDescriptors:maximumResultCount:filter:completion:
transformedCloudDatasWithPredicate:transformer:limit:completion:
resolvedCloudDataForCloudData:predicate:completion:
resolveConflictsForRecords:completion:
failedRecordIDs:completion:
fetchCloudDataIncludingDeleted:completion:
getChangesSince:forEntityClass:completion:
setMoc:
dataSource
setDataSource:
setResponseQueue:
setImmutableClass:
setMutableClass:
setSignalDataChangedTransaction:
setDataMapper:
_signalDataChangedTransaction
_moc
_dataSource
_responseQueue
_immutableClass
_mutableClass
_dataMapper
T@"NSManagedObjectContext",W,N,V_moc
T@"BCCloudDataSource",&,N,V_dataSource
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
T@"BCCloudDataSyncManager",W,N,V_syncManager
T#,V_immutableClass
T#,V_mutableClass
TB,N,V_signalDataChangedTransaction
T@"<BCCloudDataMapper>",&,N,V_dataMapper
initWithCloudKitController:dataMapper:
syncQueue
_syncQueueSyncForCloudData:completion:
syncManager:resolveConflictsForRecords:completion:
syncManager:removeCloudDataForIDs:completion:
syncManager:fetchedAllRecordsInZone:
serverPushPostponed
syncManager:startSyncToCKWithCompletion:
signalSyncToCKForSyncManager:
tooBigBatch
_maxCloudDataPerBatch
recordFromCloudData:
setTooBigBatch:
_leaveDispatchGroup:times:
syncManager:updateSyncGenerationFromCloudData:completion:
initWithRecordIDs:
setFetchRecordsCompletionBlock:
syncManager:failedRecordIDs:completion:
setServerPushPostponed:
_updateRetryParametersFromModifyRecordsOperationError:batchSize:
setProcessingCloudData:
_batchFromCloudData:
_fromBatch:getRecordsToSave:recordIDsToDelete:buildingMap:
_enterDispatchGroup:times:
initWithRecordsToSave:recordIDsToDelete:
setSavePolicy:
_modifyRecordsCompletionBlockWithDispatchGroup:cloudDataMap:recordCount:operation:
setModifyRecordsCompletionBlock:
databaseController:reachabilityChanged:
setSyncQueue:
processingCloudData
_processingCloudData
_serverPushPostponed
_syncQueue
_tooBigBatch
T@"BCCloudKitController",&,N,V_cloudKitController
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
TB,N,V_processingCloudData
TQ,N,V_tooBigBatch
TB,N,V_serverPushPostponed
T@"<BCCloudDataSyncManagerDelegate>",W,N,V_delegate
initCanUseCellularData:powerRequired:bundleID:
bitrateForItem:
_prepareMediaItemForPinning:parentProgress:completion:
addChild:withPendingUnitCount:
setCompletedUnitCount:
updateWantToRead:updateReadingNow:updateManuallyPinned:jaliscoUpdateSuccessful:withCompletion:
isExplicitItem
isExplicit
sharedConnection
effectiveBoolValueForSetting:
setWithObject:
fetchItemsForStoreIDs:
notifyQueue
readingNowDetailManagerInstance
representativeDAAPMediaItemsWithAssetId:
trackedRreadingNowDetailsInDescendingOrderMaximumResultCount:filter:completion:
stringValue
standardUserDefaults
boolForKey:
automaticUpdateCompletion
setAutomaticUpdateCompletion:
setBool:forKey:
T@"BDSNBPinningManager",R,N
_prepareMediaItemForPinningIfNeeded:parentProgress:completion:
_shouldPinMediaItem:allowsExplicit:
_shouldPinJaliscoItem:allowsExplicit:
_isExplicitMaterialAllowed
_jaliscoAudiobookWithAssetId:
setNotifyQueue:
audiobookFetcher
setAudiobookFetcher:
_pinningListUpdater
_automaticUpdateCompletion
_notifyQueue
_audiobookFetcher
T@?,C,N,V_automaticUpdateCompletion
T@"NSObject<OS_dispatch_queue>",&,N,V_notifyQueue
T@"BLHLSAudiobookFetcher",&,N,V_audiobookFetcher
T@"BDSAutomaticPinningListUpdater",R,N,V_pinningListUpdater
setLocalSaltVersionIdentifier:
setServerSaltVersionIdentifier:
initWithFetchRequest:
postNotificationName:object:userInfo:
initWithMOC:zoneName:cloudKitController:
zoneNeedsUpdate:completion:
updateSaltVersionIdentifier:completion:
setZoneName:
_zoneName
T@"NSString",C,N,V_zoneName
initService
objectModel
initWithZoneDataManager:tokenController:databaseController:
initWithCloudDataSource:cloudKitController:
pathForResource:ofType:
fileURLWithPath:isDirectory:
storeAssetManagerInstance
assetDetailManagerInstance
assetReviewManagerInstance
changeTokenController
setObjectModel:
setAssetDataSource:
setAssetDetailManager:
setReadingNowDetailManager:
setAssetReviewManager:
setStoreAssetManager:
setChangeTokenController:
saltVersionIdentifierManager
setSaltVersionIdentifierManager:
_objectModel
_assetDataSource
_assetDetailManager
_readingNowDetailManager
_assetReviewManager
_storeAssetManager
_changeTokenController
_saltVersionIdentifierManager
T@"NSObject<BCCloudAssetDetailManager>",&,N,V_assetDetailManager
T@"NSObject<BCCloudReadingNowDetailManager>",&,N,V_readingNowDetailManager
T@"NSObject<BCCloudAssetReviewManager>",&,N,V_assetReviewManager
T@"NSObject<BCCloudStoreAssetManager>",&,N,V_storeAssetManager
T@"BCCloudChangeTokenController",&,N,V_changeTokenController
T@"BDSSaltVersionIdentifierManager",&,N,V_saltVersionIdentifierManager
T@"NSManagedObjectModel",&,N,V_objectModel
T@"BCCloudDataSource",&,N,V_assetDataSource
dataManager
removeAssetDetailForSaltedHashedRecordIDs:completion:
updateSyncGenerationFromCloudData:completion:
setYear:
setDay:
setMonth:
systemTimeZone
setTimeZone:
currentCalendar
dateFromComponents:
component:fromDate:
numberWithLong:
assetDetailDataSource
setAssetDetailDataSource:
setDataManager:
_assetDetailDataSource
_dataManager
T@"BCCloudDataSource",&,N,V_assetDetailDataSource
T@"BCCloudDataManager",&,N,V_dataManager
date
connection
notificationQueue
initWithEnvironmentName:namedDelegatePort:queue:
_setEnabledTopics:
setConnection:
serverPreferredPushEnvironmentWithCompletionHandler:
setLastConnectionDate:
lastConnectionDate
isWithinConnectionDateRange
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
setNotificationQueue:
unfairLock
setUnfairLock:
_unfairLock
_connection
_notificationQueue
_lastConnectionDate
T@"APSConnection",&,N,V_connection
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
T{os_unfair_lock_s=I},N,V_unfairLock
T@"NSDate",&,N,V_lastConnectionDate
isTrackedAsRecent
lastEngagedDate
_configureFromReadingNowDetail:withMergers:
compare:
setIsTrackedAsRecent:
setLastEngagedDate:
_isTrackedAsRecent
_lastEngagedDate
TB,N,V_isTrackedAsRecent
T@"NSDate",C,N,V_lastEngagedDate
removeReadingNowDetailForSaltedHashedRecordIDs:completion:
sortDescriptorWithKey:ascending:
readingNowDetailDataSource
setReadingNowDetailDataSource:
_readingNowDetailDataSource
T@"BCCloudDataSource",&,N,V_readingNowDetailDataSource
assetReviewID
starRating
normalizedStarRating
reviewTitle
reviewBody
_configureFromAssetReview:withMergers:
userIDFromAssetReviewID:
setAssetReviewID:
setStarRating:
rangeOfString:
substringFromIndex:
substringToIndex:
assetReviewIDWithUserID:assetID:
assetIDFromAssetReviewID:
setNormalizedStarRating:
userID
Td,N
encodeInt:forKey:
decodeIntForKey:
initWithAssetReviewID:
setReviewTitle:
setReviewBody:
setUserID:
_starRating
_assetReviewID
_reviewTitle
_reviewBody
_userID
T@"NSString",C,N,V_assetReviewID
T@"NSString",C,N,V_userID
Ts,N,V_starRating
T@"NSString",C,N,V_reviewTitle
T@"NSString",C,N,V_reviewBody
audiobooksQuery
setIgnoreSystemFilterPredicates:
predicateWithValue:forProperty:
addFilterPredicate:
collections
_storeRepresentativeItem:
items
valueForProperty:
mediaType
longLongValue
jaliscoClient
T@"BDSJaliscoDAAPClient",R,N
daapClientDelegate
setJaliscoClient:
_jaliscoClient
T@"BLJaliscoDAAPClient",&,N,V_jaliscoClient
T@"<BLJaliscoDAAPClientDelegate>",W,N
removeAssetReviewsForSaltedHashedRecordIDs:completion:
assetReviewDataSource
setAssetReviewDataSource:
_assetReviewDataSource
T@"BCCloudDataSource",&,N,V_assetReviewDataSource
storeID
_configureFromStoreItem:withMergers:
setStoreID:
initWithStoreID:
_storeID
T@"NSString",C,N,V_storeID
removeStoreItemWithSaltedHashedRecordIDs:completion:
storeAssetDataSource
setStoreAssetDataSource:
_storeAssetDataSource
T@"BCCloudDataSource",&,N,V_storeAssetDataSource
dictionaryRepresentation
numberWithUnsignedLongLong:
allocWithZone:
readFrom:
writeTo:
copyTo:
mergeFrom:
location
setLocation:
setLength:
_length
_location
TQ,N,V_location
TQ,N,V_length
addAnnotation:
setAppVersion:
setAssetVersion:
annotationsCount
clearAnnotations
annotationAtIndex:
annotationType
hasAssetVersion
assetVersion
annotations
setAnnotations:
_annotations
_appVersion
_assetVersion
T@"NSString",&,N,V_assetID
T@"NSString",&,N,V_appVersion
T@"NSString",&,N,V_assetVersion
T@"NSMutableArray",&,N,V_annotations
numberWithUnsignedInt:
setCreatorIdentifier:
setLocationCFIString:
setNote:
setRepresentativeText:
setSelectedText:
setUuid:
setPhysicalPageNumber:
setAnnotationVersion:
setAttachments:
setChapterTitle:
setSelectedTextRange:
setFutureProofing11:
setFutureProofing12:
setPlLocationStorageUUID:
setPlUserData:
setDeleted:
setHasDeleted:
hasDeleted
setIsUnderline:
setHasIsUnderline:
hasIsUnderline
hasLocationCFIString
hasNote
hasRepresentativeText
hasSelectedText
setStyle:
setHasStyle:
hasStyle
setType:
setHasType:
hasType
hasPhysicalPageNumber
hasAnnotationVersion
hasAttachments
hasChapterTitle
setUserModificationDate:
setHasUserModificationDate:
hasUserModificationDate
hasSelectedTextRange
setHasReadingProgressHighWaterMark:
hasReadingProgressHighWaterMark
setSpineIndexUpdated:
setHasSpineIndexUpdated:
hasSpineIndexUpdated
setHasReadingProgress:
hasReadingProgress
hasFutureProofing11
hasFutureProofing12
setPlAbsolutePhysicalLocation:
setHasPlAbsolutePhysicalLocation:
hasPlAbsolutePhysicalLocation
setPlLocationRangeEnd:
setHasPlLocationRangeEnd:
hasPlLocationRangeEnd
setPlLocationRangeStart:
setHasPlLocationRangeStart:
hasPlLocationRangeStart
hasPlLocationStorageUUID
hasPlUserData
setLocationModificationDate:
setHasLocationModificationDate:
hasLocationModificationDate
creationDate
setCreationDate:
creatorIdentifier
deleted
isUnderline
locationCFIString
note
representativeText
selectedText
style
type
uuid
physicalPageNumber
annotationVersion
attachments
chapterTitle
userModificationDate
selectedTextRange
spineIndexUpdated
futureProofing11
futureProofing12
plAbsolutePhysicalLocation
plLocationRangeEnd
plLocationRangeStart
plLocationStorageUUID
plUserData
locationModificationDate
_creationDate
_locationModificationDate
_userModificationDate
_annotationVersion
_attachments
_chapterTitle
_creatorIdentifier
_futureProofing11
_futureProofing12
_locationCFIString
_note
_physicalPageNumber
_plAbsolutePhysicalLocation
_plLocationRangeEnd
_plLocationRangeStart
_plLocationStorageUUID
_plUserData
_representativeText
_selectedText
_selectedTextRange
_style
_type
_uuid
_deleted
_isUnderline
_spineIndexUpdated
_has
Td,N,V_creationDate
T@"NSString",&,N,V_creatorIdentifier
TB,N
TB,N,V_deleted
TB,N,V_isUnderline
T@"NSString",&,N,V_locationCFIString
Td,N,V_modificationDate
T@"NSString",&,N,V_note
T@"NSString",&,N,V_representativeText
T@"NSString",&,N,V_selectedText
TI,N,V_style
TI,N,V_type
T@"NSString",&,N,V_uuid
T@"NSString",&,N,V_physicalPageNumber
T@"NSString",&,N,V_annotationVersion
T@"NSString",&,N,V_attachments
T@"NSString",&,N,V_chapterTitle
Td,N,V_userModificationDate
T@"BCAnnotationRange",&,N,V_selectedTextRange
TB,N,V_spineIndexUpdated
T@"NSString",&,N,V_futureProofing11
T@"NSString",&,N,V_futureProofing12
Ti,N,V_plAbsolutePhysicalLocation
Ti,N,V_plLocationRangeEnd
Ti,N,V_plLocationRangeStart
T@"NSString",&,N,V_plLocationStorageUUID
T@"NSData",&,N,V_plUserData
Td,N,V_locationModificationDate
fetchLatestCompletion:
addObserverForName:object:queue:usingBlock:
_fetchCloudSyncVersions:completion:
fetchQueue
fetching
setFetching:
_fq_fetchSince:completion:
lastPlayedDate
hasBeenPlayed
setHasBeenPlayed:
setLastPlayedDate:
setValue:forProperty:withCompletionBlock:
_updateAssetDetail:fromMediaItem:
_updateBookmarkTimeFromAssetDetail:
_archiveCloudSyncVersions:completion:
setFetchQueue:
_fetching
_fetchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_fetchQueue
T@,&,N,V_observer
TB,N,V_fetching
_bdsService
_deleteLocaliCloudDataIfUserLoggedOutFromiCloudCompletion:
_dieIfUnacknowledgediCloudLogoutOcccurred
setTccNotifyToken:
tccNotifyToken
valueForEntitlement:
processIdentifier
invalidate
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
remoteObjectProxy
synchronousRemoteObjectProxyWithErrorHandler:
serviceConnectionClient
iCloudIdentityTokenTracker
listener:shouldAcceptNewConnection:
setICloudIdentityTokenTracker:
setServiceConnectionClient:
_tccNotifyToken
_iCloudIdentityTokenTracker
_serviceConnectionClient
T@"BDSICloudIdentityTokenTracker",&,N,V_iCloudIdentityTokenTracker
T@"<BDSServiceConnectionClient>",W,N,V_serviceConnectionClient
Ti,N,V_tccNotifyToken
zoneDataManager
tokenController
setZoneDataManager:
setTokenController:
_zoneDataManager
_tokenController
T@"NSObject<BDSCloudKitSupportZoneRecovery>",W,N,V_zoneDataManager
T@"BCCloudChangeTokenController",W,N,V_tokenController
collectionDetailManagerInstance
collectionMemberManagerInstance
collectionDataSource
setCollectionDataSource:
setCollectionDetailManager:
setCollectionMemberManager:
proxyMode
setProxyMode:
_proxyMode
_collectionDataSource
_collectionDetailManager
_collectionMemberManager
T@"NSObject<BCCloudCollectionDetailManager>",&,N,V_collectionDetailManager
T@"NSObject<BCCloudCollectionMemberManager>",&,N,V_collectionMemberManager
T@"BCCloudDataSource",&,N,V_collectionDataSource
TB,N,V_proxyMode
removeCollectionDetailForSaltedHashedRecordIDs:completion:
collectionID
collectionDetailDataSource
setCollectionDetailDataSource:
_collectionDetailDataSource
T@"BCCloudDataSource",&,N,V_collectionDetailDataSource
removeCollectionMemberForCollectionSaltedHashedRecordIDs:completion:
fetchCollectionMembersInCollectionID:maximumResultCount:filter:completion:
collectionMemberDataSource
setCollectionMemberDataSource:
_collectionMemberDataSource
T@"BCCloudDataSource",&,N,V_collectionMemberDataSource
collectionDescription
hidden
sortMode
_configureFromCollectionDetail:withMergers:
setCollectionID:
setName:
initWithCollectionID:
setCollectionDescription:
setHidden:
setSortOrder:
setSortMode:
_hidden
_sortOrder
_sortMode
_collectionID
_name
_collectionDescription
T@"NSString",C,N,V_collectionID
T@"NSString",C,N,V_name
T@"NSString",C,N,V_collectionDescription
TB,N,V_hidden
Ti,N,V_sortOrder
Ti,N,V_sortMode
_configureFromCollectionMember:withMergers:
setCollectionMemberID:
collectionMemberIDWithCollectionID:assetID:
assetIDFromCollectionMemberID:
initWithCollectionMemberID:
_collectionMemberID
T@"NSString",C,N,V_collectionMemberID
v8@?0
com.apple.bookdatastored.xpc-listener-ready
com.apple.bookdatastored.startup-queue
v16@?0@"NSError"8
com.apple.iBooks.BookDataStoreService
com.apple.iBooks
BookDataStore.CloudKit
BookDataStore.CloudKitSync
BookDataStore.CloudKitAudiobook
BookDataStore.Service
BDSArrayAdditionsErrorDomain
v20@?0B8@"NSError"12
kNetworkReachabilityChangedNotification
objectID
NSError %@
NSDetailedErrors
----------------------- Sub-errors: %03lu
Not an NSError: %@
-----------------------
CFBundleShortVersionString
watchSynced-
BKLibrary.ReadingNow
BKAudioBookSkipForward
BKAudioBookSkipBackward
BCOverrideRecentBookAlgorithm
BCTimeThresholdPromotionOverride
XCTestConfigurationFilePath
BDSUnitTest
Documents
BDSICloudIdentityTokenTrackerToken
BDSICloudIdentityToken.plist
com.apple.iBooks.BDSICloudStatusMonitor.dispatchQueue
BDSSyncUserDefaults
@"NSDictionary"8@?0
isSignedIntoICloud
isCloudKitSyncOptedIn
isGlobalICloudDriveSyncOptedIn
iCloudIdentityExists
<%@=%p %@>
AssetZone
CollectionZone
com.apple.iBooks.CloudKitController
com.apple.iBooks.cloudData
BCCloudKit-BookDataStoreService
bcck
BCPrivateDatabase
com.apple.iBooks.BCCloudKitPrivate
Want_To_Read_Collection_ID
v12@?0B8
v16@?0@?<v@?>8
_coalescedAttachment in BCCloudKitController
v16@?0@"NSString"8
v16@?0B8B12
v24@?0@"CKAccountInfo"8@"NSError"16
v24@?0q8@"NSError"16
v40@?0q8@"NSError"16@"CKAccountInfo"24@"NSError"32
Account changed
hasUpdatedSubscription
serverChangeToken
containerIdentifier
userRecordID
recordIDSalt
salt
saltEncrypted
<%@: %p recordZone:%@>
com.apple.iBooks.CloudKitDatabaseController
_coalescedArchive in BCCloudKitDatabaseController
_coalescedZoneFetch in BCCloudKitDatabaseController
v24@?0@"CKRecord"8@"NSError"16
v24@?0@"CKRecordID"8@"NSError"16
cloudData
attachToZone
v32@?0@"NSString"8Q16^B24
%@.%@
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"CKRecordZoneID"8
v16@?0@"CKServerChangeToken"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
v32@?0@"CKRecordZone"8Q16^B24
v24@?0@"NSArray"8@"NSError"16
v24@?0@"CKRecordZoneID"8^B16
v24@?0@"NSDictionary"8@"NSError"16
No Books Record Salt
Nil weak self after save record %@
Unable to generate random salt %@
No Books Salt
Nil weak self after fetch salt record %@
v32@?0@"CKRecordZoneID"8Q16^B24
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
Unreadable keychain - cannot fetch record zones
Account temporarily unavailable - cannot fetch record zones
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v32@?0@"NSString"8@"NSArray"16^B24
zoneName
B32@?0@"<BCCloudKitDatabaseObserver>"8Q16^B24
v32@?0@"NSString"8@"NSMutableArray"16^B24
BDSErrorDomain
BDSCloudKitClientError
com.apple.bookdatastored.prepareForSync
v16@?0@"NSObject<OS_xpc_object>"8
BCSaltVersionIdentifier
BDSTCCAccessChangedNotification
com.apple.notifyd.matching
v44@?0@"NSSet"8@"NSSet"16@"BCMutableCloudSyncVersions"24@"NSError"32B40
updateBitrateForItemWithAdamID
BDSService has no jalisco client
com.apple.iBooks.CloudKitTransaction.
_coalescedNotification in %@
BCCloudKitTransaction-
com.apple.NanoBooks
assetDetail
isFinished
notFinished
taste
tasteSyncedToStore
dateFinished
lastOpenDate
readingProgress
readingProgressHighWaterMark
readingPositionCFIString
readingPositionAnnotationVersion
readingPositionAssetVersion
readingPositionUserData
readingPositionLocationRangeStart
readingPositionLocationRangeEnd
readingPositionAbsolutePhysicalLocation
readingPositionStorageUUID
readingPositionLocationUpdateDate
datePlaybackTimeUpdated
bookmarkTime
assetID
modificationDate
the same
newer
BCAssetDetail assetID: %@
  (isFinished: %@, notFinished: %@, dateFinished: %@ lastOpenDate: %@)  (taste: %d, tasteSyncedToStore: %d)  readingPosition=(
    readingProgress:%.2f
    readingProgressHighWaterMark:%.2f
    cfi:%@
    annotationVersion=%@
    assetVersion=%@
    userData=%@
    locationRangeStart=%d    locationRangeEnd=%d    absolutePhysicalLocation=%d    storageUUID=%@
    locationUpdateDate=%@)
  playbackPosition=(
    datePlaybackTimeUpdated=%@
    bookmarkTime = %.2f)
BCMutableAssetDetail assetID: %@
  (isFinished: %@, notFinished: %@, dateFinished: %@ lastOpenDate: %@)  (taste: %d, tasteSyncedToStore: %d)  readingPosition=(
    readingProgress:%.2f
    readingProgressHighWaterMark:%.2f
    cfi:%@
    annotationVersion=%@
    assetVersion=%@
    userData=%@
    locationRangeStart=%d    locationRangeEnd=%d    absolutePhysicalLocation=%d    storageUUID=%@
    locationUpdateDate=%@)
  playbackPosition=(
    datePlaybackTimeUpdated=%@
    bookmarkTime = %.2f)
com.apple.iBooks.CloudKitTransactionManager
BCCloudKitSyncToCKTransaction-
BCCloudKitDataChangedTransaction-
dataType
cloudVersion
localVersion
syncVersion
historyToken
historyTokenOffset
dataType: %@, cloudVersion: %lld, localVersion: %lld, syncVersion: %lld historyToken:%@ historyTokenOffset=%lld
iBooks
BCCloudKitFetchChangesTransaction-
localRecordID
localRecordIDEncrypted
editGeneration
syncGeneration
deletedFlag
BCCloudData-BookDataStoreService
BCCloudAsset-BookDataStoreService
creating directory for store
deleting directory for store
[MIGRATE] migrate legacy store
[MIGRATE] destroy legacy store
removing read-only cloud data source persistent store
adding cloud data source persistent store
BookDataStore.DataManagerCallbackQueue
editGeneration > syncGeneration
BCCloudSyncVersions
dataType == %@
CoreDataError
domain
code
v32@?0@"NSString"8@"<BCCloudData>"16^B24
v32@?0@"BCCloudData"8Q16^B24
keyFromMyKitchenDrawer
%K IN %@
recordName
saltedHashedID IN %@
deletedFlag == NO
saltedHashedID
v32@?0@"NSArray"8{_NSRange=QQ}16
syncGeneration >= 1
%@-%@
v32@?0@"CKRecord"8Q16^B24
com.apple.iBooks.CloudDataSyncManager
v32@?0@"CKRecordID"8@"BCMutableCloudData"16^B24
Unsynced keychain - cannot modify records
BDSInitialPinningUpdateDone
BDSNBPinningManager notify queue
B16@?0@"<BCReadingNowDetail>"8
v32@?0@"NSSet"8@"BCMutableCloudSyncVersions"16@"NSError"24
BCServerChangeToken
BCAssetData
BCCloudAssetDetailManagerChanged
BCCloudReadingNowDetailManagerChanged
BCCloudAssetReviewManagerChanged
BCCloudStoreAssetManagerChanged
momd
v28@?0B8@"NSArray"12@"NSError"20
BCAssetDetail
assetID = %@
assetID IN %@
assetID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
v24@?0@"<BCCloudData>"8@"NSError"16
assetID IN %@ AND (deletedFlag == NULL OR deletedFlag == NO)
tasteSyncedToStore != NULL AND tasteSyncedToStore == %@ AND (deletedFlag == NULL OR deletedFlag == NO)
v32@?0@"NSArray"8@"BCMutableCloudSyncVersions"16@"NSError"24
isFinished == YES AND (dateFinished >= %@ AND dateFinished < %@)
@16@?0@"<BCCloudData>"8
isFinished == YES AND dateFinished != NULL
com.apple.aps.bookdatastored
com.apple.icloud-container.com.apple.NanoBooks
BookDataStore.ConnectionDate
bookdatastored Notification Queue
v24@?0@"NSString"8@"NSError"16
readingNowDetail
isTrackedAsRecent
lastEngagedDate
assetID: %@, isTrackedAsRecent: %@, lastEngagedDate: %@
BCReadingNowDetail
isTrackedAsRecent == YES
B16@?0@"<BCCloudData>"8
starRating
reviewTitle
reviewBody
assetReview
userID
assetReviewID
assetReviewID: %@, starRating: %hd, reviewTitle: %@, reviewBody: %@
%@|%@
BCAssetReview
assetReviewID = %@
assetReviewID IN %@
assetReviewID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
assetReviewID IN %@ AND (deletedFlag == NULL OR deletedFlag == NO)
userID == %@
(deletedFlag == NULL OR deletedFlag == NO) AND userID == %@
storeItem
storeID
storeID: %@, 
BCStoreItem
storeID = %@
storeID IN %@
storeID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
%@ %@
location
length
appVersion
assetVersion
annotation
-[BCAnnotationsProtoBook writeTo:]
BCAnnotationsProtoBook.m
nil != self->_assetID
nil != self->_appVersion
creationDate
creatorIdentifier
deleted
isUnderline
locationCFIString
note
representativeText
selectedText
style
type
uuid
physicalPageNumber
annotationVersion
attachments
chapterTitle
userModificationDate
selectedTextRange
spineIndexUpdated
futureProofing11
futureProofing12
plAbsolutePhysicalLocation
plLocationRangeEnd
plLocationRangeStart
plLocationStorageUUID
plUserData
locationModificationDate
-[BCProtoAnnotation writeTo:]
BCProtoAnnotation.m
nil != self->_creatorIdentifier
nil != self->_uuid
NBAssetDetailSyncVersions
dataStoreFetch
v16@?0@"NSNotification"8
v16@?0@"BCCloudSyncVersions"8
v24@?0B8B12@"NSError"16
com.apple.tcc.access.changed
v12@?0i8
com.apple.iBooks.BDSService.private
application-identifier
com.apple.application-identifier
<%@:%p zoneName=%@ zoneDataManager=%@>
BCCloudCollections
BCCloudCollectionMemberManagerChanged
BCCloudCollectionDetailManagerChanged
BCCollectionDetail
collectionID = %@
collectionID IN %@
collectionID
collectionID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
collectionID IN %@ AND (deletedFlag == NULL OR deletedFlag == NO)
BCCollectionMember
collectionMemberID = %@
collectionMemberID IN %@
collectionMemberID
collectionMemberID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
collectionMemberID BEGINSWITH[cd] %@ AND (deletedFlag == NULL OR deletedFlag == NO)
sortOrder
name
collectionDescription
hidden
sortMode
collectionDetail
collectionID: %@, Name: %@, Description: %@ hidden:%@ sortOrder:%d sortMode %d
collectionID: %@, Name: %@, Description: %@ hidden:%@ sortOrder:%d sortMode:%d
collectionMember
collectionMemberID: %@, sortOrder:%d modificationDate:%@
BDSDaemon
BDSServiceConnectionClient
BookDataStoreBundleLookupClass
BDSAdditions
NSCopying
IMAdditions
BDSReachability
BatchDelete
Common_Stores
BDSOSTransaction
CoreDataExtras
BDSAppVersion
BDSUserPreferencesSync
BDSAppGroupContainer
BDSICloudIdentityTokenTracker
BDSSyncUserDefaults
BDSICloudIdentityToken
BCAssetDetail
BCCloudData
NSObject
BCCollectionMember
BCCloudKitConfiguration
BCContainerConfiguration
BCCloudKitController
BDSCloudKitSupportSignOutDeleteWithoutInstance
BCCloudKitRecordZone
BCCloudKitDatabaseController
BCCloudDataPrivacyDelegate
BDSAudiobookSyncPrepareActivity
BDSAutomaticPinningListUpdateManager
BCSaltVersionIdentifier
BDSService
MCProfileConnectionObserver
BLJaliscoDAAPClientDelegate
BDSDaemonProtocol
BDSServiceProtocol
BCCloudAssetDetailManager
BDSCloudKitSupportZoneRecovery
BDSCloudKitSupportSignOutDissociate
BCCloudReadingNowDetailManager
BCCloudAssetReviewManager
BCCloudStoreAssetManager
BCCloudCollectionDetailManager
BCCloudCollectionMemberManager
BCCloudKitSyncEnablement
BDSCloudKitSupportSignOut
BDSCloudKitSupportSignOutDelete
BCCloudKitTransactionManagerService
BDSJaliscoDAAPClientService
BDSNBPinningManagerService
BCCloudKitTransaction
BDSAppBundleIdentifier
BCMutableAssetDetail
NSSecureCoding
NSCoding
BCCloudKitTransactionManager
BCCloudKitTransactionDelegate
BCCloudKitSyncToCKTransaction
BCCloudKitDataChangedTransaction
BCCloudSyncVersions
BCMutableCloudSyncVersions
BDSAutomaticPinningListUpdater
BCCloudKitFetchChangesTransaction
BCCloudDataNullPrivacyDelegate
BCMutableCloudData
BCCloudDataSource
BCCloudManagerBatchSupport
BCCloudDataManager
BCCloudDataSyncManager
BCCloudKitDatabaseObserver
BDSNBPinningManager
BCCloudChangeTokenController
BCCloudKitChangeTokenStore
BCCloudAssetManager
BCCloudDataSyncManagerDelegate
BDSNotificationConnection
APSConnectionDelegate
BCReadingNowDetail
BCMutableReadingNowDetail
BCAssetReview
BCMutableAssetReview
BDSMediaLibraryUtils
BDSJaliscoDAAPClient
BCStoreItem
BCMutableStoreItem
BCAnnotationRange
BCAnnotationsProtoBook
BCProtoAnnotation
BDSNBController
BDSITunesAuthenticating
BDSServiceDelegate
NSXPCListenerDelegate
BDSSaltVersionIdentifierManager
BCCloudKitDatabaseZoneObserver
BCCloudCollectionsManager
BCCollectionDetail
BCMutableCollectionDetail
BCMutableCollectionMember
@16@0:8
v32@0:8@16@24
v32@0:8@"BDSServiceDelegate"16@"NSXPCConnection"24
v16@0:8
v24@0:8@?16
v24@0:8@16
@"BDSServiceDelegate"
@"NSObject<OS_dispatch_queue>"
@"NSXPCListener"
@"BUOSStateHandler"
@"BDSNotificationConnection"
@"NSObject<OS_dispatch_source>"
@"BDSAudiobookSyncPrepareActivity"
v44@0:8:16B24@28@?36
@24@0:8^{_NSZone=}16
@24@0:8@16
@24@0:8@?16
v32@0:8Q16@?24
v32@0:8:16@?24
B40@0:8@16@24#32
B32@0:8@16@24
@24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
B16@0:8
i20@0:8I16
i16@0:8
^{__SCNetworkReachability=}
Q32@0:8@16@24
@56@0:8@16@24@32@40B48B52
@52@0:8@16@24@32@40B48
@40@0:8@16@24@32
@24@0:8#16
@32@0:8@16@24
@56@0:8@16@24@32Q40@48
@60@0:8@16@24@32B40Q44@52
@52@0:8@16@24@32B40Q44
v40@0:8@16@24@32
B24@0:8@16
@24@0:8r*16
@"NSObject<OS_os_transaction>"
v20@0:8B16
@28@0:8@16B24
@"NSMutableDictionary"
@"NSURL"
@"BDSICloudIdentityToken"
B24@0:8^{__CFArray=}16
B24@0:8^{__CFString=}16
v28@0:8^{__CFString=}16B24
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q16@0:8
@"NSDate"16@0:8
@"CKRecord"16@0:8
@"NSData"16@0:8
@"<BCCloudDataPrivacyDelegate>"16@0:8
v24@0:8@"<BCCloudDataPrivacyDelegate>"16
s16@0:8
f16@0:8
d16@0:8
B20@0:8B16
B24@0:8@"<BCCloudData>"16
@"NSArray"16@0:8
@"<BCContainerConfiguration>"16@0:8
@"NSArray"
v24@0:8@?<v@?B@"NSError">16
v24@0:8B16B20
v32@0:8@16@?24
@"BCCloudKitTransactionManager"
@"BCCloudKitDatabaseController"
@"<BCContainerConfiguration>"
@"CKContainer"
@"BUCoalescingCallBlock"
@"CKRecordZone"
@"NSString"32@0:8@"NSString"16@"NSString"24
v36@0:8@16B24@?28
v52@0:8@16@24B32@?36@?44
v40@0:8@16@24@?32
v40@0:8@16q24@?32
v24@0:8d16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CKDatabase"
@"NSMutableSet"
@"CKRecordID"
@"CKServerChangeToken"
@"NSData"
@"NSMapTable"
v36@0:8@16@24B32
B24@0:8@"BDSAutomaticPinningListUpdater"16
v36@0:8@"BDSAutomaticPinningListUpdater"16@"NSError"24B32
@?16@0:8
^{_xpc_activity_eligibility_changed_handler_s=}
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v24@0:8@"BLJaliscoDAAPClient"16
v32@0:8@"BLJaliscoDAAPClient"16@?<v@?B>24
v28@0:8B16@?20
v32@0:8q16@?24
v24@0:8@?<v@?@"BCMutableCloudSyncVersions">16
v32@0:8@"BCMutableAssetDetail"16@?<v@?BB@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableAssetDetail"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">24
v28@0:8B16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8q16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"BCMutableCloudSyncVersions"16@?<v@?@"NSSet"@"NSSet"@"BCMutableCloudSyncVersions"@"NSError"B>24
v32@0:8@"BCMutableAssetReview"16@?<v@?BB@"NSError">24
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableAssetReview"@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">28
v32@0:8@"BCMutableStoreItem"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableStoreItem"@"NSError">24
v32@0:8@"BCMutableCollectionDetail"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableCollectionDetail"@"NSError">24
v32@0:8@"BCMutableCollectionMember"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableCollectionMember"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">24
v32@0:8@"NSString"16@?<v@?i@"NSError">24
v24@0:8@"NSString"16
v36@0:8B16q20@?28
v36@0:8B16@20@?28
v36@0:8B16q20@?<v@?B>28
v36@0:8B16@"NSString"20@?<v@?B>28
v32@0:8@"NSSet"16@?<v@?@"NSSet">24
v32@0:8@"NSSet"16@?<v@?B>24
v32@0:8@"NSSet"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
@28@0:8B16@?20
v24@0:8@?<v@?@"NSString"@"NSError">16
@"NSProgress"28@0:8B16@?<v@?@"NSError">20
@"NSProgress"24@0:8@?<v@?@"NSError">16
v32@0:8@"NSNumber"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
@"BCCloudAssetManager"
@"BCCloudCollectionsManager"
@"BDSNBController"
@"BDSJaliscoDAAPClient"
@"NSMutableOrderedSet"
v24@0:8q16
@"BDSOSTransaction"
@"<BCCloudKitTransactionDelegate>"
B24@0:8d16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v20@0:8f16
v20@0:8s16
v20@0:8i16
@"NSDate"
v24@0:8@"BCCloudKitTransaction"16
@"BCCloudKitController"
@"BCCloudDataSyncManager"
@"NSPersistentHistoryToken"16@0:8
@"NSPersistentHistoryToken"
B28@0:8@16B24
v24@0:8Q16
@"NSProgress"
@"NSHashTable"
@"<BCCloudDataPrivacyDelegate>"
@"CKRecord"
@48@0:8@16@24@32@40
v36@0:8B16@20@28
B40@0:8@16@24@32
@"NSManagedObjectContext"
@"NSPersistentStoreCoordinator"
B72@0:8^q16q24@32#40@48^@56^@64
@72@0:8@16@24@32#40#48@56@64
@80@0:8@16@24@32#40#48@56@64@72
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24Q32@?40@?48
v48@0:8@16@?24q32@?40
v40@0:8@16#24@?32
v24@0:8#16
@"BCCloudDataSource"
@"<BCCloudDataMapper>"
v28@0:8@16B24
v28@0:8@"BCCloudKitDatabaseController"16B24
v32@0:8@"BCCloudKitDatabaseController"16@"NSArray"24
v40@0:8@"BCCloudKitDatabaseController"16@"CKRecordID"24@"NSString"32
v32@0:8@"BCCloudKitDatabaseController"16@"NSString"24
v48@0:8@16^@24^@32^@40
v32@0:8@16Q24
@?48@0:8@16@24Q32@40
@"<BCCloudDataSyncManagerDelegate>"
@40@0:8B16B20B24B28@?32
@"BDSAutomaticPinningListUpdater"
@"BLHLSAudiobookFetcher"
v32@0:8@"CKServerChangeToken"16@?<v@?>24
v24@0:8@?<v@?@"CKServerChangeToken">16
@"NSManagedObjectModel"
@"NSObject<BCCloudAssetDetailManager>"
@"NSObject<BCCloudReadingNowDetailManager>"
@"NSObject<BCCloudAssetReviewManager>"
@"NSObject<BCCloudStoreAssetManager>"
@"BCCloudChangeTokenController"
@"BDSSaltVersionIdentifierManager"
v32@0:8@"BCCloudDataSyncManager"16@?<v@?>24
v24@0:8@"BCCloudDataSyncManager"16
v40@0:8@"BCCloudDataSyncManager"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"BCCloudDataSyncManager"16@"NSString"24
@"BCCloudDataManager"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"APSConnection"
v40@0:8Q16@?24@?32
@"BLJaliscoDAAPClient"
@24@0:8Q16
@"NSMutableArray"
v20@0:8I16
I16@0:8
@"BCAnnotationRange"
{?="locationModificationDate"b1"userModificationDate"b1"plAbsolutePhysicalLocation"b1"plLocationRangeEnd"b1"plLocationRangeStart"b1"readingProgress"b1"readingProgressHighWaterMark"b1"style"b1"type"b1"deleted"b1"isUnderline"b1"spineIndexUpdated"b1}
v32@0:8@?16@?24
v24@0:8@?<v@?B>16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"BDSICloudIdentityTokenTracker"
@"<BDSServiceConnectionClient>"
v40@0:8@"BCCloudKitDatabaseController"16@"NSString"24@?<v@?B>32
@"NSObject<BDSCloudKitSupportZoneRecovery>"
@"NSObject<BCCloudCollectionDetailManager>"
@"NSObject<BCCloudCollectionMemberManager>"
v48@0:8@16Q24@?32@?40
MbP?
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241128</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>bookdatastored</string>
<key>CFBundleIdentifier</key>
<string>com.apple.bookdatastored</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>636</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>13E6049a</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>8.5</string>
<key>DTSDKBuild</key>
<string>19T5208x</string>
<key>DTSDKName</key>
<string>watchsimulator8.5.internal</string>
<key>DTXcode</key>
<string>1330</string>
<key>DTXcodeBuild</key>
<string>13E6049a</string>
<key>MinimumOSVersion</key>
<string>8.5</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2019 Apple. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.iBooks.BookDataStoreService</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.iBooks.BookDataStoreService</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.iBooks.cloudData</string>
<string>com.apple.iBooks.secureData</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudDocuments</string>
<string>CloudKit</string>
</array>
<key>com.apple.developer.ubiquity-container-identifiers</key>
<array>
<string>iCloud.com.apple.iBooks</string>
</array>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>bundleID</string>
<key>value</key>
<string>com.apple.iBooks</string>
</dict>
<key>com.apple.private.cfnetwork.har-capture-amp</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.iBooks.secureData</key>
<string>iBooksSecureData</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.iBooks</string>
</array>
<key>fairplay-client</key>
<string>1328318286</string>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
Process launch.
Process exit.
Daemon initializing.
Daemon shutting down.
Daemon starting up.
Some error happened in pre-listener startup: %@
bookdatastored received sigterm signal
Daemon finished starting up.
Setting up listeners.
Handled Exception {%@}
[Transaction]: Created transaction %{public}s(%p)
[Transaction]: Ending transaction %{public}s(%p)
[Transaction]: EndTransaction was called but transaction was already nil.(%p)
BDSICloudIdentityTokenTracker didUnacknowledgediCloudLogoutOccur=%{public}@ l=%{public}@ c=%{public}@
acknowledgeiCloudIdentity
Done acknowledge iCloud identity: %{mask.hash}@
TCC returned a NULL array!
Successfully set %{public}@ to %{public}@.
Failed to set %{public}@ to %{public}@.
BCCloudKitController (%{public}@) _coalescedAttachment
did not call completion after 10s in %{public}@
BCCloudKitController (%{public}@) #enableCloudSync setEnableCloudSync %{public}@ serviceMode:%{public}@
BCCloudKitController (%{public}@) - p_updateAttachment
BCCloudKitController (%{public}@) - Update Attachment Current State: attached:%{public}@
BCCloudKitController (%{public}@) - Update Attachment: getting account info
BCCloudKitController (%{public}@) - Update Attachment: detaching from database controller
BCCloudKitController (%{public}@) - Update Attachment: No change to attachment.
BCCloudKitController (%{public}@) - Update Attachment: Signaling fetch changes for %{public}@
BCCloudKitController (%{public}@) - p_getAccountInfo
BCCloudKitController (%{public}@) - getAccountInfo self.gettingAccountInfo=YES
BCCloudKitController - CKAccountStatusCouldNotDetermine: %{public}@
Could not determine iCloud status.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController - Account Available for %{public}@
Error connecting user to database error=%{public}@
BCCloudKitController - connectUserToContainer subscription completed for %{public}@
Container %{public}@ requires device-to-device encryption but user's account does not support it.  Not connecting.
Account Restricted.  Not syncing anything.  Account status error=%{public}@
Books isn't signed into iCloud.  Not syncing anything.  Account status error=%{public}@
Account Temporarily Unavailable.  Not syncing anything.  Account status error=%{public}@
BCCloudKitController (%{public}@) - applicationDidBecomeActive
(%{public}@) handleRemoteNotification:
p_accountChanged (%{public}@) notification=%@
p_identityChanged (%{public}@)
_coalescedArchive (%@)
_coalescedZoneFetch (%@)
BCCloudKitDatabaseController - Error fetching zone changes: %@
BCCloudKitDatabaseController - attached to container: %@
BCCloudKitDatabaseController (%{public}@) - fetchChangesWithCompletion:
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchChangesWithCompletion for changedRecordZoneIDs:%{public}@
BCCloudKitDatabaseController (%{public}@) - Error fetching database changes: %@
BCCloudKitDatabaseController - fetchRecordForRecordID attached: %@
WARNING: BCCloudKitDatabaseController - fetchRecordForRecordID called without a database.  attached: %@
BCCloudKitDatabaseController - containerIdentifer changed from: %{public}@ to: %{public}@
BCCloudKitDatabaseController (%{public}@) - connectUserTo:container:updateSubscription:completion:
BCCloudKitDatabaseController (%{public}@) - user recordID: %{public}@ database:%@
BCCloudKitDatabaseController - archiveComplete
BCCloudKitDatabaseController - Error fetching user recordID: %{public}@
BCCloudKitDatabaseController/attachToZones-cloud
BCCloudKitDatabaseController/attachToZones-secureData
[BCCloudKitDatabaseController (%@)] 1. attachToZones Creating Record Zones - zones:%@
[BCCloudKitDatabaseController (%@)] attachToZones creating record zones failed, ERROR:%@
BCCloudKitDatabaseController - Detaching Container:%{public}@, ERROR:%@
BCCloudKitDatabaseController - requesting salted ID for %@ without salt!
BCCloudDatabaseController: unable to generate record name for %@
CKModifySubscriptionsOperation failed: %{public}@
p_subscribeWithCompletion (%{public}@)
Attempting CKModifySubscriptionsOperation
CKModifySubscriptionsOperation (%{public}@) failed: %{public}@
CKModifySubscriptionsOperation Success for: (%{public}@)
BCCloudKitDatabaseController modifySubscriptionsOperation: %@, id: %@
BCCloudKitDatabaseController (%{public}@)- Adding fetch database changes
CKFetchDatabaseChangesOperation zoneID was deleted: %{public}@
CKFetchDatabaseChangesOperation zoneID was changed: %{public}@
CKFetchDatabaseChangesOperation failed: %{public}@
CKFetchDatabaseChangesOperation Success
CKFetchDatabaseChangesOperation Success, but no serverChangeToken
BCCloudKitDatabaseController (%{public}@)- Adding fetch database changes %@
[BCCloudKitDatabaseController (%@)] 2. p_createRecordZones:%@ database:%{public}@
3. BCCloudKitDatabaseController - fetchRecordZonesOperation.fetchRecordZonesCompletionBlock fetchedZones:[%{public}@]
BCCloudKitDatabaseController - assigning recordZones[%{public}@]
BCCloudKitDatabaseController - One or more zones are missing newRecordZones:[%{public}@]
5a CKModifyRecordZonesOperation failed to modify %{public}@ retrying, ERROR:%@
CKModifyRecordZonesOperation success saving: %{public}@
BCCloudKitDatabaseController - fetchRecordZonesOperation failed, ERROR:%@
BCCloudKitDatabaseController - No PCS Identity available
BCCloudKitDatabaseController - fetchRecordZonesOperation failed - retrying, ERROR:%@
CKFetchRecordZonesOperation failed: %{public}@
CKFetchRecordZonesOperation failed. Account Temporarily Unavailable: %{public}@
BCCloudKitDatabaseController - calling saveResultsBlock
CKFetchRecordZonesOperation Wanted:%@ Received:%@
(%{public}@) Establishing record salt
(%{public}@) Successfully read existing record salt salt:(%@) changeTag:(%@). Calling completion
(%{public}@) Error retrieving record salt: %@ serverRecord:%@.. Trying to recover
(%{public}@) Will save record salt
(%{public}@) Saving record salt....
(%{public}@) Successfully established record salt from server record salt:(%@) changeTag:(%@) error:(%@)
(%{public}@) Successfully established record salt for NO ERROR salt:(%@) changeTag:(%@)
BCCloudKitDatabaseController - Create salt: unable to save record salt %{public}@
(%{public}@) *** Got record salt:(%@) changeTag:(%@)
BCCloudKitDatabaseController - Create salt: unable to get record salt %{public}@
BCCloudKitDatabaseController - Create salt: unable to save salt record %{public}@
fetch zone changes attempted while postponing such fetches.  Nil error, but this operation will be attempted again after the back-off period.
BCCloudKitDatabaseController (%{public}@)- record zone changes; unchangedRecordIDS :%{public}@
BCCloudKitDatabaseController (%{public}@)- fetching record zone changes for recordZoneIDs:%{public}@
BCCloudKitDatabaseController (%{public}@) - finished fetching tokens for zones %{public}@
BCCloudKitDatabaseController (%{public}@)- No record zone changes to fetch
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneIDs:%{public}@, optionsByRecordZoneID:%{public}@ self.database=%p
BCCloudKitDatabaseController - BCCloudKitDatabaseController fetchRecordZoneChangesOperation.recordChangedBlock record=%@ %@
BCCloudKitDatabaseController - BCCloudKitDatabaseController recordWithIDWasDeletedBlock recordID=%@
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneChangeTokensUpdatedBlock recordZoneIDs=%{public}@ 
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges recordZoneFetchCompletionBlock recordZoneIDs=%{public}@ moreComing= %{BOOL}d
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ zoneFetchCompletion failed: %{public}@ time to delete the tokenStore for  %@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation zone %{public}@ success.  More coming: %{BOOL}d
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock zoneChanges failed: %{public}@ %{public}@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation retrying fetch for error: %@
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in fetchRecordZoneChangesOperation.fetchRecordZoneChangesCompletionBlock retryFetch
BCCloudKitDatabaseController - CKFetchRecordZoneChangesOperation NOT retrying fetch for error: %@
BCCloudKitDatabaseController (%{public}@) - CKFetchRecordZoneChangesOperation fetchRecordZoneChangesCompletionBlock success (%{public}@).
BCCloudKitDatabaseController (%{public}@) p_fetchRecordZoneChanges Adding fetchRecordZoneChangesOperation=%@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfAttachmentChange. Attached to container: %@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfRecordsChanged.
p_informObserversOfRecordsChanged: changedRecords.count=%lu recordType=%{public}@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfSaltVersionIdentifierChanged: saltVersionIdentifier=%{public}@ zoneIDs=%{public}@ observers:%@
%@ name:%@ salt:%@  success:%{BOOL}d  LEAVE GROUP
p_informObserversOfSaltVersionIdentifierChanged DONE
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfRecordsChanged: changedRecords.count=%{public}lu recordType=%{public}@
BCCloudKitDatabaseController (%{public}@) - p_informObserversOfCompletedFetchOfZone zoneName=%{public}@
Error decoding BCCloudKitDatabaseController from data.  Error=%{public}@
Deleting zone: (%{public}@)
Error deleting zones (%{public}@): (%{public}@)
BCCloudKitDatabaseController - Invalid parameter combination observer=%p recordType=%{public}@
BCCloudKitDatabaseController - Attempt to remove observer %p that is not observing recordType %{public}@.
BCCloudKitDatabaseController - Invalid observer=%p
BCCloudKitDatabaseController - Setting observer=%p for zone =%{public}@
BCCloudKitDatabaseController - Invalid parameter combination BCCloudKitDatabaseZoneObserver observer=%p recordType=%{public}@
BCCloudKitDatabaseController - Registering store for record zone %{public}@
BCCloudKitDatabaseController (%{public}@) - signal coalescedZoneFetch in registerServerChangeTokenStore:forZoneID: recordZoneID=%{public}@
BCCloudKitDatabaseController - performed zone fetch for recordZoneID:%{public}@
BCCloudKitDatabaseController - skipping fetch, we are not yet attached in registerServerChangeTokenStore:forZoneID:
BCCloudKitDatabaseController - Registered multiple stores for record zone %{public}@
BCCloudKitDatabaseController - Invalid parameter combination tokenStore=%p recordZoneID=%{public}@
BCCloudKitDatabaseController - Did not find tokenStore to remove
BCCloudKitDatabaseController - Trying to remove nil server change token store
(BDSAudiobookSyncPrepareActivity) Failed to transition to CONTINUE state
(BDSAudiobookSyncPrepareActivity) activity finished, shouldDefer = %d
(BDSAudiobookSyncPrepareActivity) Failed to set activity state to %ld
(BDSAudiobookSyncPrepareActivity) unexpected xpc state: %{public}ld
(BDSAudiobookSyncPrepareActivity) we were told to defer our activity
(BDSAudiobookSyncPrepareActivity) checking in
(BDSAudiobookSyncPrepareActivity) running...
Finished updating jalisco but were told to defer
Updating pinning lists was cancelled
Finished updating pinning lists, starting key prefetch
[Service]: Could not setup jalisco client
Recieved notification that ReadingNow preference changed, updatingEnableSync
BDSService Paused=%{public}@ SignedIn=%{public}@ CloudKit=%{public}@ isCloudKitEnabled=%{public}@
BDSService enabling assetSync: %{public}@ readingNow Sync: %{public}@
setCloudSyncPaused: %@
Unable to update jalisco - bookdatastored is missing a jalisco client
Unable to update jalisco family- bookdatastored is missing a jalisco client
Unable to hide jalisco items- bookdatastored is missing a jalisco client
Unable to hide jalisco items with store ids - bookdatastored is missing a jalisco client
Unable to reset purchased tokens- bookdatastored is missing a jalisco client
Unable to resetStaleJaliscoDatabase - bookdatastored is missing a jalisco client
Unable to update jalisco after sign in - bookdatastored is missing a jalisco client
Unable to update jalisco after sign out - bookdatastored is missing a jalisco client
hasSaltChangedWithCompletion should not be called
_coalescedNotification in %@ did not call notification within 10s.
BCAssetDetail configureFromCloudData wrong class passed in.
BCAssetDetail %@ Audiobook Configuring bookmark time old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Configuring bookmark time, ignoring as my bookmark time is same or newer old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Mismatch assetID from record assetID %@
BCAssetDetail %@ Resolving conflicts from record %@ adopting general record properties.
BCAssetDetail %@ Resolving conflicts from record %@, keeping my basic properties as my modification date is %{public}@.
BCAssetDetail %@ Resolving conflicts from record %@ adopting reading position properties.
BCAssetDetail %@ Resolving conflicts from record %@, keeping my reading position properties as my reading position update date is %{public}@.
BCAssetDetail %@ Resolving conflicts from record %@ adopting playback time properties.
BCAssetDetail %@ Audiobook Resolving bookmark time old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as bookmark time is NULL.
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as my bookmark time is newer old:[%@ = %.2f] new:[%@ = %.2f].
BCAssetDetail %@ Audiobook Resolving bookmark time, ignoring as my bookmark time is newer old:[%@ = %.2f] new:[%@ = NULL].
BCAssetDetail %@ Resolving conflicts from record %@, keeping my playback time properties as my playback time update date is %{public}@.
BCAssetDetail %@ No Record supplied
BCMutableAssetDetail init with no assetID supplied
BCMutableAssetDetail init with no record supplied
BCMutableAssetDetail %@ attempt to move readingProgressHighWaterMark backwards from %f to %f
[BCCloudKitTransactionManager] Creating syncToCKTransaction %@
[BCCloudKitTransactionManager] registering completion %@ for syncToCKTransaction %@
[BCCloudKitTransactionManager] Transaction completed %@
Calling block %@ for transaction %@ 
Failed to create rawHistoryToken from data error: %@
Error unarchiving persistent history token: %{public}@
AutomaticPinningList startUpdate
About to enable sync
Doing nothing because alreadyRunning is %{public}@
BDSAutomaticPinningListUpdater ReceviedFetchedRecordsChanged %lu
Was cancelled before fetching records finished. currentObserver:%lu
At least one manager wanted to continue, so updating the pinning lists.
Updating wantToReadAndReadingNow completed and we were not cancelled.
Updating wantToReadAndReadingNow completed but we were already cancelled.
BCCloudKitFetchChangesTransaction - privateCloudDatabaseController is nil
Cannot determine valid salt establishedSalt:%{BOOL}d systemFields:%{BOOL}d for record %@
BCCollectionDetail %{public}@ invalid record name %{public}@ salt!
BCCloudData %{public}@ Unable to generate record name
BCCloudData recordType called
BCCloudData identifier called
BCCloudData zoneName called
BCCloudData +propertyIDKey called
BCMutableCloudData init with no privacy delegate!
BCMutableCloudData init with no record supplied
BCMutableCloudData ckSystemFields called
BCMutableCloudData recordType called
BCMutableCloudData identifier called
Unable to create persistent stores on the coordinator:%@
Error %{public}@: %{public}@ %d
Unable to migrate legacy database since file does not exist at URL %@
Unable to create cloud data source persistent store. Attempting to remove files and start over
Unable to recreate cloud data source persistent store. Giving up
Migrating legacy cloud data source from %@ to %@
Destroying legacy cloud data source at %@
Adding cloud data source persistent store for %@
#dissociateCloudData error: %@
#dissociateCloudData Successfully transitioned to a new cloud container for entity: %@
BCCloudDataManager error: %@
BCCloudDataManager Incremented cloudSyncVersion to %lld
No managed object context!
BCCloudDataManager %{public}@ startSyncToCKWithCompletion found %lu dirty records
BCCloudDataManager %@ startSyncToCKWithCompletion no records need updating
BCCloudDataManager #recordChange %{public}@ setCloudData for id:%{mask.hash}@ data:%@
Did not find %{public}@ to remove for predicate:%{pubic}@
Did not match the same results as the cloud data provided.
BCCloudDataManager #recordChange %{public}@ updateSyncGeneration %@
Did not find %{public}@ to update sync gen from cloudData:%@
BCCloudDataManager #recordChange %{public}@ deleteCloudDataForPredicate data:%@
Did not find %{public}@ to delete for predicate %{public}@
Tried to look up cloud data but there was no moc.
BCCloudDataManager #recordChange resolveConflictsForRecords: %{public}@
CKRecord unexpected with no local identifier: %{public}@
BCCloudDataManager resolveConflictsForRecords:%{public}@ did not find existing record.  Creating new from %@
BCCloudDataManager resolveConflictsForRecords:%{public}@ configuration did not allow creation of new record from %@
BCCloudDataManager #recordChange failedRecordIDs:%{public}@
BCCloudDataManager %@ getChangesSince returning changedObjects:%lu (%@) currentSyncVersions: %@
BCCloudDataManager %@ getChangesSince returning deletedObjects:%lu (%@) currentSyncVersions: %@
BCCloudDataManager %@ #dissociateCloudData
BCCloudDataManager %@ #hasSaltChangedWithCompletion
No managed object context! #hasSaltChangedWithCompletion
BCCloudDataManager %@ #hasSaltChangedWithCompletion no moc
BCCloudDataSyncManager: syncCloudData: entityName: %@, attachedState: %@ reachable: %@
BCCloudDataSyncManager: startSyncToCKWithCompletion entityName: %{public}@, attachedState: %{public}@ reachable: %{public}@
BCCloudDataSyncManager: cloudDataMap already contans an entry for deleting %@
BCCloudDataSyncManager: Unable to retrieve systemFields from %@
BCCloudDataSyncManager: Unable to configure CKRecord to save from %@
BCCloudDataSyncManager: cloudDataMap already contans an entry for saving %@
Successful save of CKRecord id=%@ %@
Successful removal of CKRecord ids=%@
Total success saving %lu records and deleting %lu records OperationID: %{public}@
Partial failure saving %lu records and deleting %lu records.  Failed %lu.
CKErrorServerRecordChanged record %{public}@ perRecordError %{public}@
Error for record %{public}@ operationError %{public}@ perRecordError %{public}@
Unable to retrieve serverRecord for recordID %{public}@ operationError %{public}@ perRecordError %{public}@
Error modifying record:%@ error=%{public}@
Record ID is nil for record to fetch: %@
Fetching %lu records that had assets on conflict
Successfully fetched %lu records that had assets on conflict
Error fetching records with assets on conflict: error=%{public}@
Error saving record, but we don't have a delegate to inform
Error modifying records: error=%{public}@
We can't have handled more records than we attempted to sync
Adding CKModifyRecordsOperation to database for: %{public}@.  Operation ID: %{public}@
We want to update the bitrate so fetching master playlist for mediaItem: %@
Updating wantToRead:%d, readingNow:%d, manuallyPinned:%d jaliscoUpdateSuccessful:%d
found readingNow member for assetID: %@
found readingNow member with assetID "%@" that has no MediaItem.
returning mostRecentAudiobook with assetID: %@
updating bitrate for item with adamID %@
Error updating bitrate for item with adamID %@
Updated bitrate for item with adadmID: %@
Performing initial update of automatic pinning lists but it has already been done, so just calling completion.
Performing initial update of automatic pinning lists.
We were asked to perform the initial update when there was already a callback waiting.
#dissociateCloudData Change Token Controller error: %@
#dissociateCloudData Change Token Controller successfully transitioned to a new cloud container for zone: %@
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - zoneNeedsUpdate serverSaltVersionIdentifier:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - no local identifier saved
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@  Comparing local(%@) to server(%@).Need update:%{BOOL}d
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ we should never have more than 1 record. We have %lu@) records.
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier serverSaltVersionIdentifier:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier NEW record %@
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier SAVE success %{BOOL}d error:(%@)
[BCCloudChangeTokenController] #saltVersionIdentifierChanged - %@ - updateSaltVersionIdentifier Error saving saltVersionIdentifier:(%@) Error:%{public}@
<%@ BCCloudChangeTokenController - No change yet we tried updating %@
BCCloudChangeTokenController - Error deleting cloud tokens: %@ with server change token: %{public}@
BCCloudChangeTokenController - #recordChange Error saving MOC zone: %@ with server change token: %{public}@
BCCloudChangeTokenController - serverChangeTokenWithCompletion: %@
BCCloudChangeTokenController - #recordChange Error fetching from MOC zone: %@ with server change token: %{public}@
Error unarchiving server change token: %{public}@
BCCloudChangeTokenController - #recordChange zone: %@ returning server change token: %@
Initializing BCCloudAssetManager - Service mode
Dealloc BCCloudAssetManager
BCCloudAssetManager - Service build - #enableCloudSync setEnableCloudSync %@ enableReadingNowSync %@
BCCloudAssetManager hasSaltChangedWithCompletion with managers:%@
BCCloudAssetManager dissociateCloudDataFromSyncWithCompletion - Service mode - watch
Trying to remove without IDs
BDSNotificationConnection isWithinConnectionDateRange:%@
BDSNotificationConnection lastConnectionDate read as:%@
[Notification] Registering for notifications for container %@, pushEnv: %@
BDSNotificationConnection updated lastConnectionDate to:%@
[Notification] Received Public Token.
[Notification] Received APS Message with userInfo %@
Ignoring cloud notifications - Application has not been launched recently.
Processed Notifications - Application has been launched recently.
Ignored APSConnection message - not our connection, or no userInfo.
BCReadingNowDetail configureFromCloudData wrong class passed in.
BCReadingNowDetail %@ Mismatch assetID from record assetID %@
BCReadingNowDetail %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCReadingNowDetail %@ No Record supplied
BCMutableReadingNowDetail init with no assetID supplied
BCMutableReadingNowDetail init with no record supplied
BCAssetReview configureFromCloudData wrong class passed in.
BCAssetReview %@ Mismatch assetReviewID from record assetReviewID %@
BCAssetReview %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCAssetReview %@ No Record supplied
BCMutableAssetReview init with no assetReviewID supplied
BCMutableAssetReview init with no record supplied
BDSMediaLibraryUtils No daap item found for %@
BDSMediaLibraryUtils No collections for %@
BDSMediaLibraryUtils Could not find audiobookQuery.
[BDSJaliscoDAAPClient] Unable to initialize BDSJaliscoDAAPClient
BCStoreItem configureFromCloudData wrong class passed in.
BCStoreItem %@ Mismatch storeID from record storeID %@
BCStoreItem %@ Resolving conflicts from record %@, keeping my properties as my modification date is %{public}@.
BCStoreItem %@ No Record supplied
BCMutableStoreItem init with no storeID supplied
BCMutableStoreItem init with no record supplied
BDSNBController init.
BDSNBController fetch latest completed.
BDSNBController Initial fetch completed.
BDSNBController error: %@
BDSNBController fetchLatest
Error trying to write updated assetDetail for assetID: %@ error: %@
Failed to write updated assetDetail for assetID %@ with no error reported.
Updated assetDetail for assetID %@
BDSNBController attempting to update bookmark time from assetDetail %@
BDSNBController Setting bookmark time %f for media item assetDetail %@
BDSNBController media item has a newer date. Updating asset:%@. from mediaItem.lastPlayDate: %@ mediaItem.bookmarkTime %f, assetDetail.datePlaybackTimeUpdated:%@ assetDetail.bookmarkTime:%f
BDSNBController media item has the same date, not updating asset:%@. mediaItem.lastPlayDate: %@ mediaItem.bookmarkTime %f, assetDetail.datePlaybackTimeUpdated:%@ assetDetail.bookmarkTime:%f
BDSNBController No media items for %@
BDSNBController fetching changes since cloudSyncVersions: %@
BDSNBController Updating from assetDetails: updated (%lu) removed (%lu)
BDSNBController skipping non-store audiobook assetID: %@
BDSNBController skipping assetDetail without datePlaybackTimeUpdated for assetID: %@
BDSNBController fetching again while updating assetDetails.
BDSNBController done fetching while updating assetDetails.
Initializing service delegate.
BDSService within connection date range.
Service delegate released.
Received incomming connection request.
Refusing connection to pid %d. (appIdentifier: %@)
Received error from authenticator, removing proxy object (%p): %@
Accepted connection to %d.
Instantiating BDSService.
Checking if an account change happened, necessitating our process going away.
User logged out. Shutting down.
Checking if cloud data should get deleted.
User logged out from iCloud.  Deleting local copies of cloud data.
Deleted local copies of cloud data in response to logout.
Deleting cloud data.
Completed deleting cloud data
[BDSSaltVersionIdentifierManager] init with %@ %@. Adding to zone:(%@)
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ ---1. %@  
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 4. dissociateCloudDataFromSyncWithCompletion %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5a. updateSaltVersionIdentifier  %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 5b. dissociateCloudDataFromSyncWithCompletion %{BOOL}d ERROR:%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 2. needsUpdate: %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3a.Need update. Calling dissociate
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 3b. No update needed. Calling completion.
[BDSSaltVersionIdentifierManager] hasSaltChangedWithCompletion. %@ %{BOOL}d, ERROR:%@
[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - only update saltversionidentifier %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #hasSaltChangedWithCompletion - %@ - skip update %{BOOL}d error%@
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - 6b - saltIdentifierError 
[BDSSaltVersionIdentifierManager] #saltVersionIdentifierChanged - %@ - do nothing
Initializing BCCloudCollectionsManager - Service mode
BCCloudCollectionsManager SERVICE #enableCloudSync setEnableCloudSync:completion %@
BCCloudCollectionsManager collectionDetailManagerInstancecompleted enableCloudSync %{BOOL}d
BCCloudCollectionsManager collectionMemberManagerInstance completed enableCloudSync %{BOOL}d
BCCloudCollectionsManager - SERVICE setEnableCloudSync:completion DONE
BCCloudCollectionsManager #enableCloudSync setEnableCloudSync %@
BCCloudCollectionsManager hasSaltChangedWithCompletion %@
BCCloudCollectionsManager dissociateCloudDataFromSyncWithCompletion
BCCollectionDetail configureFromCloudData wrong class passed in.
BCCollectionDetail %{public}@ Mismatch collectionID from record collectionID %{public}@
BCCollectionDetail %{public}@ Resolving conflicts from record %{public}@, keeping my properties as my modification date is %{public}@.
BCCollectionDetail %{public}@ No Record supplied
BCMutableCollectionDetail init with no collectionID supplied
BCMutableCollectionDetail configureFromCloudData wrong class passed in.
BCMutableCollectionDetail init with no record supplied
BCMutableCollectionDetail requesting configured record with no underlying systemfields for collectionID:%@
BCCollectionMember configureFromCloudData wrong class passed in.
BCCollectionMember resolveConflictsFromRecord record contains nil collectionMemberID
BCCollectionMember %@ Mismatch assetID from record collectionMemberID %@
BCCollectionMember %@ Resolving conflicts from record %{public}@, keeping my properties as my modification date is %{public}@.
BCMutableCollectionMember init with no collectionMemberID supplied
BCCollectionMember initWithCloudData cloudData contains nil collectionMemberID
BCMutableCollectionMember configureFromCloudData wrong class passed in.
BCCollectionMember initWithCloudData record contains nil collectionMemberID
BCMutableCollectionMember init with no record supplied
daemon
start
mainRunLoop
init
dealloc
listenersReadyQueue
lrq_setupListeners
setSigterm_source:
sigterm_source
startupQueue
sq_finishedStartingUp
lrq_setupBeforeListenersWithCompletion:
notificationConnection
didAcceptConnection:
initWithServiceConnectionClient:
setServiceDelegate:
initWithMachServiceName:
setServiceListener:
serviceDelegate
serviceListener
setDelegate:
resume
setHARLoggingEnabled:
setHARLoggingItemLimit:
setNotificationConnection:
startListeningForNotifications
setSyncPrepareActivity:
syncPrepareActivity
registerActivity
makeOSStateHandler
setSyncUserDefaultsStateHandler:
serviceDelegate:didAcceptConnection:
setListenersReadyQueue:
setStartupQueue:
syncUserDefaultsStateHandler
.cxx_destruct
_serviceDelegate
_listenersReadyQueue
_startupQueue
_serviceListener
_syncUserDefaultsStateHandler
_notificationConnection
_sigterm_source
_syncPrepareActivity
T@"BDSServiceDelegate",&,N,V_serviceDelegate
T@"NSObject<OS_dispatch_queue>",&,N,V_listenersReadyQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_startupQueue
T@"NSXPCListener",&,N,V_serviceListener
T@"BUOSStateHandler",&,N,V_syncUserDefaultsStateHandler
T@"BDSNotificationConnection",&,N,V_notificationConnection
T@"NSObject<OS_dispatch_source>",&,N,V_sigterm_source
T@"BDSAudiobookSyncPrepareActivity",&,N,V_syncPrepareActivity
bundleForClass:
bundleURL
count
pointerAtIndex:
errorWithDomain:code:userInfo:
methodForSelector:
removePointerAtIndex:
bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:
bds_chainUntilNoErrorCompletionSelectorCallsForSelector:successSoFar:errorSoFar:completion:
countByEnumeratingWithState:objects:count:
valueForKey:
copyWithZone:
setObject:forKeyedSubscript:
copy
objectAtIndex:
null
addObject:
bds_arrayByRemovingNSNullsInvokingBlockForNulls:
subarrayWithRange:
initWithOptions:
addPointer:
bds_dictionaryUsingPropertyAsKey:
bds_arrayByRemovingNSNulls
bds_traverseBatchesOfSize:block:
bds_chainSuccessAndErrorCompletionSelectorCallsForSelector:completion:
bds_chainUntilNoErrorCompletionSelectorCallsForSelector:completion:
initWithCapacity:
objectForKeyedSubscript:
bds_subDictionaryWithKeys:
isEqual:
setValue:forKey:
setDifferentValue:forKey:klass:
dictionary
setObject:forKey:
setDifferentObject:forKey:
setDifferentString:forKey:
setDifferentNumber:forKey:
setDifferentDate:forKey:
propertiesForKeys:
stopNotifier
UTF8String
reachabilityWithAddress:
localWiFiStatusForFlags:
networkStatusForFlags:
sharedReachabilityForInternetConnection
currentReachabilityStatus
reachabilityForInternetConnection
reachabilityWithHostName:
reachabilityForLocalWiFi
_updateIsOffline
isOffline
startNotifier
connectionRequired
localWiFiRef
reachabilityRef
defaultCenter
postNotificationName:object:
initWithObjects:
andPredicateWithSubpredicates:
entityForName:inManagedObjectContext:
setEntity:
setPredicate:
countForFetchRequest:error:
logRecursively
isEqualToString:
setResultType:
setPropertiesToFetch:
setReturnsDistinctResults:
initWithKey:ascending:
setSortDescriptors:
executeFetchRequest:error:
copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:distinct:
arrayWithObject:
copyEntityPropertiesArray:fromEntityName:withPredicate:sortBy:ascending:
copyEntityPropertyArray:fromEntityName:withPredicate:sortBy:ascending:
lastObject
insertNewObjectForEntityForName:inManagedObjectContext:
setIncludesPropertyValues:
setRelationshipKeyPathsForPrefetching:
setReturnsObjectsAsFaults:
setFetchLimit:
setFetchBatchSize:
entity:withPredicate:sortDescriptors:fetchLimit:prefetchRelationships:
entity:withPredicate:sortBy:ascending:fetchLimit:prefetchRelationships:
entity:withPredicate:sortBy:ascending:fetchLimit:
im_pushSafeAccessState
name
im_popSafeAccessState
countEntity:withPredicate:
copyEntityProperty:fromEntityName:withPredicate:
newByClass:
objectIDsWithPredicate:forEntity:
unbatchedObjectsWithPredicate:forEntity:
entity:withPredicate:
im_performSafeAccess:
im_isPerformingSafeAccess
mergePredicate:andPredicate:
deleteObject:
save:
batchDeleteEntity:matching:prefetchRelationships:
persistentStores
setWithArray:
intersectsSet:
hasStoreInCommonWith:
bds_addObjectIfNotNil:
bds_UUID
length
initWithFormat:arguments:
stringWithCString:encoding:
lastPathComponent
numberWithInt:
initWithTransactionName:
endTransaction
osTransaction
setOsTransaction:
_osTransaction
T@"NSObject<OS_os_transaction>",&,N,V_osTransaction
userInfo
localizedDescription
localizedFailureReason
localizedRecoverySuggestion
localizedRecoveryOptions
objectForKey:
mainBundle
objectForInfoDictionaryKey:
appVersion
arrayWithObjects:count:
containerIdentifier
containerURL
_initWithSuiteName:container:
syncedPreferenceKeys
objectFromGroupPreferencesForKey:
T@"NSArray",R,N
stringByAppendingString:
processInfo
environment
isUnitTesting
stringByAppendingPathComponent:
defaultManager
removeItemAtPath:error:
fileURLWithPath:
bu_booksGroupContainerURL
URLByAppendingPathComponent:
setUnitTesting:
documentsURL
unitTesting
TB,GisUnitTesting
T@"NSURL",R
dictionaryWithContentsOfURL:
mutableCopy
trackLiverpool
tokenForCurrentIdentityIfCloudKitEnabled
initWithCurrentIdentity
setCurrentToken:
initWithToken:
dispatchQueue
currentToken
plistContents
initFromArchive:
removeObjectForKey:
token
plistURL
writeToURL:atomically:
initWithContainerURL:trackingLiverpool:
fetchCurrentToken
forceUpdateTokenWithString:
didUnacknowledgediCloudLogoutOccur
acknowledgeiCloudIdentity
setPlistContents:
setPlistURL:
setDispatchQueue:
setTrackLiverpool:
_trackLiverpool
_plistContents
_plistURL
_currentToken
_dispatchQueue
T@"NSMutableDictionary",&,N,V_plistContents
T@"NSURL",&,N,V_plistURL
T@"BDSICloudIdentityToken",&,N,V_currentToken
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
TB,N,V_trackLiverpool
primaryAppleAccount
accountType
identifier
_isServiceEnabledAlternative:
_isServiceDisabledAlternative:
_setService:enabled:
isGlobalICloudDriveSyncOptedIn
aa_altDSID
_stateForLog
initWithTitle:block:
_isBundleIdentifierInArray:
isSignedIntoICloud
numberWithBool:
isCloudKitSyncOptedIn
iCloudIdentity
dictionaryWithObjects:forKeys:count:
_hashFor:
stringWithFormat:
dataUsingEncoding:
bu_md5UpperCase
description
setToken:
_token
T@"NSString",C,N,V_token
setQueueIdentifier:
setContainerIdentifier:
setAppZones:
setServiceZones:
setDbArchiveFolderName:
setDbArchiveExtension:
setDbArchiveFilename:
setDbSubscriptionID:
bdsAppBundleIdentifier
setAppBundleIdentifier:
setRequiresDeviceToDeviceEncryption:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
incrementEditGeneration
recordType
zoneName
deletedFlag
modificationDate
editGeneration
syncGeneration
systemFields
ckSystemFields
privacyDelegate
setPrivacyDelegate:
TB,R,N
T@"NSDate",R,C,N
Tq,R,N
T@"CKRecord",R,C,N
T@"NSData",R,C,N
T@"<BCCloudDataPrivacyDelegate>",W,N
assetID
isFinished
notFinished
lastOpenDate
dateFinished
taste
tasteSyncedToStore
readingProgress
readingProgressHighWaterMark
readingPositionCFIString
readingPositionAnnotationVersion
readingPositionAssetVersion
readingPositionUserData
readingPositionLocationRangeStart
readingPositionLocationRangeEnd
readingPositionAbsolutePhysicalLocation
readingPositionStorageUUID
readingPositionLocationUpdateDate
datePlaybackTimeUpdated
bookmarkTime
T@"NSString",R,C,N
Ts,R,N
Tf,R,N
Ti,R,N
Td,R,N
collectionMemberID
sortOrder
collectionIDFromCollectionMemberID:
configuration
shouldArchiveData:
shouldPerformDatabaseSubscriptionForServiceMode:
queueIdentifier
appZones
serviceZones
dbArchiveFolderName
dbArchiveExtension
dbArchiveFilename
dbSubscriptionID
appBundleIdentifier
requiresDeviceToDeviceEncryption
T@"NSString",R,N
_requiresDeviceToDeviceEncryption
_queueIdentifier
_containerIdentifier
_appZones
_serviceZones
_dbArchiveFolderName
_dbArchiveExtension
_dbArchiveFilename
_dbSubscriptionID
_appBundleIdentifier
T@"NSString",&,N,V_queueIdentifier
T@"NSString",&,N,V_containerIdentifier
T@"NSArray",&,N,V_appZones
T@"NSArray",&,N,V_serviceZones
T@"NSString",&,N,V_dbArchiveFolderName
T@"NSString",&,N,V_dbArchiveExtension
T@"NSString",&,N,V_dbArchiveFilename
T@"NSString",&,N,V_dbSubscriptionID
T@"NSString",&,N,V_appBundleIdentifier
TB,N,V_requiresDeviceToDeviceEncryption
initWithConfiguration:
initWithCloudKitController:
setTransactionManager:
setConfiguration:
p_accountChanged:
addObserver:selector:name:object:
p_identityChanged:
p_privateDatabaseArchiveURLForConfiguration:
initWithSubscriptionID:appBundleIdentifier:archiveURL:
serviceMode
willAttachToContainer:serviceMode:completion:
accessQueue
p_updateAttachment
initWithNotifyBlock:notifyTimeout:blockDescription:notifyTimeoutBlock:
setCoalescingDelay:
coalescedAttachment
signalWithCompletion:
privateCloudDatabaseController
gettingAccountInfo
enableCloudSync
p_getAccountInfo
setContainer:
detach
container
transactionManager
signalFetchChangesTransaction:
getAttached:
sharedInstance
databaseFolderURLForConfiguration:
removeItemAtURL:error:
path
initFileURLWithPath:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
p_createDatabaseArchiveDirectoryForConfiguration:
stringByAppendingPathExtension:
accountInfoWithCompletionHandler:
accountStatusWithCompletionHandler:
setGettingAccountInfo:
containerWithIdentifier:
setSourceApplicationBundleIdentifier:
doubleValue
supportsDeviceToDeviceEncryption
privateCloudDatabase
attachToZones:completion:
connectUserTo:container:updateSubscription:completion:subscriptionCompletion:
p_getNecessaryAccountInfoFromContainer:completion:
notificationFromRemoteNotificationDictionary:
subscriptionID
detachWithError:completion:
deleteCloudDataWithCompletion:
T@"BCCloudKitController",R
setEnableCloudSync:serviceMode:
applicationDidBecomeActive
handleRemoteNotification:
setPrivateCloudDatabaseController:
didChangeContainer
setDidChangeContainer:
setAccessQueue:
setEnableCloudSync:
setServiceMode:
setCoalescedAttachment:
_didChangeContainer
_gettingAccountInfo
_enableCloudSync
_serviceMode
_transactionManager
_privateCloudDatabaseController
_configuration
_container
_accessQueue
_coalescedAttachment
T@"BCCloudKitTransactionManager",&,N,V_transactionManager
T@"CKContainer",&,N,V_container
T@"BCCloudKitDatabaseController",&,V_privateCloudDatabaseController
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
TB,N,V_gettingAccountInfo
TB,N,V_enableCloudSync
TB,N,V_serviceMode
TB,N,V_didChangeContainer
T@"<BCContainerConfiguration>",&,N,V_configuration
T@"BUCoalescingCallBlock",&,N,V_coalescedAttachment
recordZone
initWithRecordZone:
_recordZone
T@"CKRecordZone",R,N,V_recordZone
strongToWeakObjectsMapTable
p_unarchive
p_archiveToData
database
attachedToContainer
fetchRecordZoneChangesSuccess
setAttachedToContainer:
p_informObserversOfAttachmentChange
p_fetchZoneChanges:
changedRecordZoneIDs
allObjects
coalescedZoneFetch
p_fetchDatabaseChanges:
fetchRecordWithID:completionHandler:
p_unsubscribeToContainer:
setHasSubscription:
setServerChangeToken:
p_scheduleArchiveWithCompletion:
p_subscribeWithCompletion:
fetchUserRecordIDWithCompletionHandler:
containsString:
initWithZoneName:ownerName:
enumerateObjectsUsingBlock:
desiredRecordZoneIDs
fetchChangesWithCompletion:
p_createRecordIDSaltWithCompletion:
allKeys
zonesUnreadableDueToMissingD2DEncryptionIdentity:completion:
zonesTemporarilyUnreadableWithError:completion:
p_createRecordZones:completionHandler:
recordZones
recordIDSalt
bytes
dataWithBytes:length:
base64EncodedStringWithOptions:
saltedAndHashedIDFromLocalID:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
bds_defaultConfiguration
setDatabase:
setModifySubscriptionsCompletionBlock:
addOperation:
hasSubscription
initWithSubscriptionID:
setShouldSendContentAvailable:
setNotificationInfo:
operationID
serverChangeToken
initWithPreviousServerChangeToken:
setFetchAllChanges:
setRecordZoneWithIDWasDeletedBlock:
setChangeTokenUpdatedBlock:
setRecordZoneWithIDChangedBlock:
setFetchDatabaseChangesCompletionBlock:
initWithRecordZoneIDs:
zoneID
allValues
minusSet:
initWithZoneID:
initWithRecordZonesToSave:recordZoneIDsToDelete:
arrayByAddingObjectsFromArray:
setModifyRecordZonesCompletionBlock:
code
isEqualToSet:
setFetchRecordZonesCompletionBlock:
initWithRecordName:
encryptedValuesByKey
setRecordIDSalt:
recordChangeTag
p_informObserversOfSaltVersionIdentifierChanged:forZones:completion:
initWithRecordType:recordID:
domain
initWithName:reason:userInfo:
saveRecord:completionHandler:
serverFetchPostponed
array
tokenStores
containsObject:
cloudSyncEnabled
p_informObserversOfCompletedFetchOfZone:
p_fetchRecordZoneChangesForRecordZoneIDs:completionHandler:
serverChangeTokenWithCompletion:
setPreviousServerChangeToken:
removeObject:
p_fetchRecordZoneChanges:optionsByRecordZoneID:completionHandler:
setBackOffInterval:
backOffInterval
initWithRecordZoneIDs:configurationsByRecordZoneID:
setQualityOfService:
setDiscretionaryNetworkBehavior:
setAutomaticallyRetryNetworkFailures:
recordID
p_informObserversOfRecordsChanged:forRecordType:
removeAllObjects
setRecordChangedBlock:
observers
databaseController:recordWithIDWasDeleted:recordType:
setRecordWithIDWasDeletedBlock:
p_informObserversOfRecordsChanged:
storeServerChangeToken:completion:
setRecordZoneChangeTokensUpdatedBlock:
setRecordZoneFetchCompletionBlock:
setServerFetchPostponed:
p_updateRetryParametersFromFetchZoneChangesOperationError:
setFetchRecordZoneChangesSuccess:
setFetchRecordZoneChangesCompletionBlock:
databaseController:attachmentChanged:
enumerateKeysAndObjectsUsingBlock:
zoneObservers
databaseController:saltVersionIdentifierChanged:completion:
initWithArray:copyItems:
databaseController:recordsChanged:
databaseController:fetchedAllRecordsInZone:
coalescedArchive
archiveURL
initWithContentsOfURL:
p_unarchiveFromData:
initRequiringSecureCoding:
encodeInteger:forKey:
encodeObject:forKey:
userRecordID
finishEncoding
encodedData
initForReadingFromData:error:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
setUserRecordID:
finishDecoding
encodeSystemFieldsWithCoder:
initWithCoder:
_deleteRecordZonesWithIDs:qualityOfService:completion:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
encodeRecordSystemFields:
decodeRecordFromSystemFields:
startInternetConnectionReachabilityNotifier
establishedSalt
recordNameFromRecordType:identifier:
fetchRecordForRecordID:completion:
recordZoneWithName:completionHandler:
addObserver:recordType:
removeObserver:recordType:
removeObserver:
addObserver:zoneID:
registerServerChangeTokenStore:forZoneID:
unregisterServerChangeTokenStore:
setSubscriptionID:
setArchiveURL:
setDesiredRecordZoneIDs:
setChangedRecordZoneIDs:
setCoalescedArchive:
setRecordZones:
setObservers:
setZoneObservers:
setTokenStores:
setCoalescedZoneFetch:
_zoneObserversLock
_hasSubscription
_attachedToContainer
_serverFetchPostponed
_fetchRecordZoneChangesSuccess
_database
_subscriptionID
_archiveURL
_desiredRecordZoneIDs
_changedRecordZoneIDs
_coalescedArchive
_userRecordID
_serverChangeToken
_recordIDSalt
_recordZones
_observers
_zoneObservers
_tokenStores
_coalescedZoneFetch
_backOffInterval
T@"CKDatabase",&,N,V_database
T@"NSURL",C,N,V_archiveURL
T@"NSArray",C,N,V_desiredRecordZoneIDs
T@"NSMutableSet",&,N,V_changedRecordZoneIDs
T@"BUCoalescingCallBlock",&,N,V_coalescedArchive
T@"NSString",C,N,V_subscriptionID
T@"NSString",C,N,V_containerIdentifier
T@"CKRecordID",&,N,V_userRecordID
T@"CKServerChangeToken",&,N,V_serverChangeToken
T@"NSData",&,N,V_recordIDSalt
T@"NSMutableDictionary",&,N,V_recordZones
T@"NSMutableDictionary",&,N,V_observers
T@"NSMapTable",&,N,V_zoneObservers
T@"NSMutableDictionary",&,N,V_tokenStores
T@"BUCoalescingCallBlock",&,N,V_coalescedZoneFetch
TB,N,V_attachedToContainer
Td,N,V_backOffInterval
TB,N,V_serverFetchPostponed
TB,N,V_fetchRecordZoneChangesSuccess
TB,N,V_hasSubscription
componentsJoinedByString:
_checkInWithActivity:
_removeEligibilityHandler
_runWithCompletion:
_addEligibilityHandlerForActivity:
_defer
setDeferred:
sharedManager
pinningListUpdater
cancelWithManager:
setCompletionHandler:
sharedClient
deferred
completionHandler
startUpdateWithManager:jaliscoUpdateSuccessful:
updateFamilyPolitely:reason:completion:
_importArtwork
_prefetchKeys
listUpdaterShouldBecomeObserverToInProgressUpdate:
listUpdater:updateDidCompleteWithError:wasCancelled:
_deferredLock
_eligibilityLock
_eligibilityChangedHandler
_deferred
_completionHandler
TB,N,V_deferred
T@?,C,N,V_completionHandler
fetchRequestWithEntityName:
initWithEntity:insertIntoManagedObjectContext:
fetchRequest
initIntoManagedObjectContext:
localSaltVersionIdentifier
T@"NSString",&,D,N
serverSaltVersionIdentifier
prewarm
sharedService
assetDataSource
initWithCloudDataSource:
jaliscoDAAPClient
setDaapClientDelegate:
_updateEnableSync
tccAccessChanged:
paused
boolValue
isPrimaryAccountManagedAppleID
assetManager
setEnableCloudSync:enableReadingNowSync:
authenticators
cloudCollectionsManager
setPaused:
dissociateCloudDataFromSyncWithCompletion:
assetDetailManager
assetDetailForAssetID:completion:
assetDetailsForAssetIDs:completion:
resolvedAssetDetailForAssetID:completion:
currentAssetDetailCloudSyncVersions:
deleteAssetDetailForAssetID:completion:
fetchAssetDetailsIncludingDeleted:completion:
getAssetDetailChangesSince:completion:
setAssetDetail:completion:
setAssetDetails:completion:
fetchAssetDetailsForUnsyncedTastes:
fetchFinishedDatesByAssetIDForYear:completion:
fetchFinishedAssetCountByYearWithCompletion:
readingNowDetailManager
readingNowDetailsForAssetIDs:completion:
currentReadingNowDetailCloudSyncVersions:
deleteReadingNowDetailForAssetID:completion:
getReadingNowDetailChangesSince:completion:
setReadingNowDetails:completion:
assetReviewManager
assetReviewForAssetReviewID:completion:
assetReviewsForAssetReviewIDs:completion:
deleteAssetReviewForAssetReviewID:completion:
deleteAssetReviewForAssetReviewIDs:completion:
fetchAssetReviewsForUserID:includingDeleted:completion:
getAssetReviewChangesSince:completion:
setAssetReview:completion:
setAssetReviews:completion:
storeAssetManager
addStoreItem:completion:
addStoreItems:completion:
deleteStoreItemWithStoreID:completion:
deleteStoreItemsWithStoreIDs:completion:
fetchStoreItemsIncludingDeleted:completion:
getStoreItemChangesSince:completion:
storeItemForStoreID:completion:
collectionDetailManager
collectionDetailForCollectionID:completion:
collectionDetailsForCollectionIDs:completion:
currentCollectionDetailCloudSyncVersions:
deleteCollectionDetailForCollectionID:completion:
deleteCollectionDetailForCollectionIDs:completion:
fetchCollectionDetailsIncludingDeleted:completion:
getCollectionDetailChangesSince:completion:
setCollectionDetail:completion:
setCollectionDetails:completion:
collectionMemberManager
collectionMemberForCollectionMemberID:completion:
currentCollectionMemberCloudSyncVersions:
deleteCollectionMemberForCollectionMemberID:completion:
deleteCollectionMemberForCollectionMemberIDs:completion:
fetchCollectionMembersIncludingDeleted:completion:
fetchCollectionMembersInCollectionID:completion:
getCollectionMemberChangesSince:completion:
setCollectionMember:completion:
setCollectionMembers:completion:
fetchMaxSortOrderInCollectionID:completion:
mostRecentAudiobookWithCompletion:
updateWantToReadAndReadingNowWithJaliscoUpdateSuccessful:completion:
updateWantToReadWithCompletion:
updateReadingNowWithCompletion:
updateBitrateForItemWithAdamID:completion:
performInitialUpdateOfAutomaticPinningListsWithCompletion:
audiobookStoreIsAvailable:
updatePolitely:reason:completion:
setItemHidden:forStoreID:completion:
hideItemsWithStoreIDs:completion:
resetPurchasedTokenForStoreIDs:completion:
deleteItemsWithStoreIDs:completion:
resetStaleJaliscoDatabaseWithCompletion:
updatePolitelyAfterSignIn:reason:completion:
updatePolitelyAfterSignOut:reason:completion:
requestITunesAuthenticationWithReply:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
clientDetectedStoreChange:
clientDetectedStoreChangeAndAccountChange:
clientDetectedPredicateChange:
clientDetectedPurchaseServerClientExpired:
clientRequestITunesAuthentication:withCompletion:
hasSaltChangedWithCompletion:
setEnableCollectionSync:
setCloudSyncPaused:
fetchMostRecentAudiobookWithCompletion:
audiobookStoreEnabledWithCompletion:
enableSyncChanged:
addAuthenticator:
removeAuthenticator:
setAssetManager:
setCloudCollectionsManager:
nanoBooksController
setNanoBooksController:
setJaliscoDAAPClient:
setAuthenticators:
_authenticatorsLock
_paused
_assetManager
_cloudCollectionsManager
_nanoBooksController
_jaliscoDAAPClient
_authenticators
TB,N,V_paused
T@"BCCloudAssetManager",W,N,V_assetManager
T@"BCCloudCollectionsManager",W,N,V_cloudCollectionsManager
T@"BDSNBController",&,N,V_nanoBooksController
T@"BDSJaliscoDAAPClient",&,N,V_jaliscoDAAPClient
T@"NSMutableOrderedSet",&,N,V_authenticators
transactionName
cStringUsingEncoding:
performWorkWithCompletion:
coalescingDelay
entityName
transactionNameForEntityName:
lifecycleAccessQueue
clientCount
setClientCount:
transactionLifetime
coalescedNotification
laq_scheduleTransactionLifetime
delegate
transactionCompleted:
setTransactionLifetime:
initWithEntityName:delegate:
transactionLifetimeTimout
clientConnected
signal
setEntityName:
setCoalescedNotification:
setLifecycleAccessQueue:
_entityName
_coalescedNotification
_lifecycleAccessQueue
_transactionLifetime
_delegate
_clientCount
T@"NSString",C,N,V_entityName
T@"BUCoalescingCallBlock",&,N,V_coalescedNotification
T@"BDSOSTransaction",&,N,V_osTransaction
T@"NSObject<OS_dispatch_queue>",&,N,V_lifecycleAccessQueue
T@"NSObject<OS_dispatch_source>",&,N,V_transactionLifetime
T@"<BCCloudKitTransactionDelegate>",W,N,V_delegate
Tq,N,V_clientCount
initWithCloudData:
_configureFromAssetDetail:withMergers:
configureFromCloudData:withMergers:
numberWithShort:
timeIntervalSinceReferenceDate
numberWithFloat:
setDifferentBookmarkTime:
setBookmarkTime:
isEqualExceptForDate:
isEqualToDate:
resolveConflictsFromRecord:withResolvers:
localIdentifierFromRecord:
setAssetID:
recordName
hasChanges
propertyIDKey
isAudiobook
T@"NSString",C,D,N
TB,D,N
T@"NSDate",C,D,N
Ts,D,N
Tf,D,N
T@"NSData",C,D,N
Ti,D,N
Td,D,N
initWithRecord:
integerValue
floatValue
intValue
configuredRecordFromAttributes
numberWithDouble:
encodeWithCoder:
encodeBool:forKey:
encodeInt32:forKey:
encodeDouble:forKey:
localRecordID
decodeBoolForKey:
decodeInt32ForKey:
decodeDoubleForKey:
supportsSecureCoding
TB,R
initWithAssetID:
setReadingProgressHighWaterMark:
setIsFinished:
setNotFinished:
setTaste:
setTasteSyncedToStore:
setDateFinished:
setLastOpenDate:
setReadingProgress:
setReadingPositionCFIString:
setReadingPositionAnnotationVersion:
setReadingPositionAssetVersion:
setReadingPositionUserData:
setReadingPositionLocationRangeStart:
setReadingPositionLocationRangeEnd:
setReadingPositionAbsolutePhysicalLocation:
setReadingPositionStorageUUID:
setDatePlaybackTimeUpdated:
setReadingPositionLocationUpdateDate:
_isFinished
_notFinished
_taste
_tasteSyncedToStore
_readingProgress
_readingProgressHighWaterMark
_readingPositionLocationRangeStart
_readingPositionLocationRangeEnd
_readingPositionAbsolutePhysicalLocation
_assetID
_dateFinished
_lastOpenDate
_readingPositionCFIString
_readingPositionAnnotationVersion
_readingPositionAssetVersion
_readingPositionUserData
_readingPositionStorageUUID
_datePlaybackTimeUpdated
_bookmarkTime
_readingPositionLocationUpdateDate
T@"NSString",C,N,V_assetID
TB,N,V_isFinished
TB,N,V_notFinished
T@"NSDate",C,N,V_lastOpenDate
T@"NSDate",C,N,V_dateFinished
Ts,N,V_taste
Ts,N,V_tasteSyncedToStore
Tf,N,V_readingProgress
Tf,N,V_readingProgressHighWaterMark
T@"NSString",C,N,V_readingPositionCFIString
T@"NSString",C,N,V_readingPositionAnnotationVersion
T@"NSString",C,N,V_readingPositionAssetVersion
T@"NSData",C,N,V_readingPositionUserData
Ti,N,V_readingPositionLocationRangeStart
Ti,N,V_readingPositionLocationRangeEnd
Ti,N,V_readingPositionAbsolutePhysicalLocation
T@"NSString",C,N,V_readingPositionStorageUUID
T@"NSDate",C,N,V_readingPositionLocationUpdateDate
T@"NSDate",C,N,V_datePlaybackTimeUpdated
Td,N,V_bookmarkTime
transactionAccessQueue
transactions
initWithEntityName:notificationName:delegate:
signalSyncToCKTransactionForEntityName:syncManager:completion:
initWithEntityName:syncManager:delegate:
transactionCompletionCallbacks
cloudKitController
initWithCloudKitController:delegate:
signalDataChangeTransactionForEntityName:notificationName:
signalSyncToCKTransactionForEntityName:syncManager:
setCloudKitController:
setTransactionAccessQueue:
setTransactions:
setTransactionCompletionCallbacks:
_cloudKitController
_transactionAccessQueue
_transactions
_transactionCompletionCallbacks
T@"BCCloudKitController",W,N,V_cloudKitController
T@"NSObject<OS_dispatch_queue>",&,N,V_transactionAccessQueue
T@"NSMutableDictionary",&,N,V_transactions
T@"NSMutableDictionary",&,N,V_transactionCompletionCallbacks
syncManager
startSyncToCKWithCompletion:
setSyncManager:
_syncManager
T@"BCCloudDataSyncManager",&,N,V_syncManager
notificationName
setNotificationName:
_notificationName
T@"NSString",C,N,V_notificationName
initWithCloudSyncVersions:
cloudVersion
setCloudVersion:
localVersion
setLocalVersion:
syncVersion
setSyncVersion:
historyToken
setHistoryToken:
historyTokenOffset
setHistoryTokenOffset:
archivedDataWithRootObject:requiringSecureCoding:error:
setRawHistoryToken:
rawHistoryToken
unarchivedObjectOfClass:fromData:error:
dataType
T@"NSPersistentHistoryToken",R,C,N
configureFromSyncVersions:
T@"NSPersistentHistoryToken",C,D,N
Tq,D,N
encodeInt64:forKey:
setDataType:
decodeInt64ForKey:
_dataType
_cloudVersion
_localVersion
_syncVersion
_historyToken
_historyTokenOffset
T@"NSString",C,N,V_dataType
T@"NSPersistentHistoryToken",C,N,V_historyToken
Tq,N,V_historyTokenOffset
Tq,N,V_cloudVersion
Tq,N,V_localVersion
Tq,N,V_syncVersion
weakObjectsHashTable
setJaliscoUpdateSuccessful:
_updateCloudDataWithManager:
_l_cancelWithManagers:
managers
currentProgress
cancel
setCurrentProgress:
observer
setObserver:
currentObserverIdentifier
setCurrentObserverIdentifier:
_receivedFetchedRecordsChangedFromObserver:
progressWithTotalUnitCount:
setCancellationHandler:
setEnableCloudSync:completion:
_l_finishedFetchingCollectionsWithManager
jaliscoUpdateSuccessful
setManagers:
_stateLock
_jaliscoUpdateSuccessful
_currentProgress
_managers
_observer
_currentObserverIdentifier
T@"NSProgress",&,N,V_currentProgress
T@"NSHashTable",&,N,V_managers
T@?,C,N,V_observer
TQ,N,V_currentObserverIdentifier
TB,N,V_jaliscoUpdateSuccessful
nullPrivacyDelegate
setSystemFields:
setSaltedHashedID:
saltedHashedID
initWithRecordName:zoneID:
setCkSystemFields:
setEditGeneration:
hasValidSalt
_privacyDelegate
T@"CKRecord",C,D,N
T@"<BCCloudDataPrivacyDelegate>",W,N,V_privacyDelegate
data
setDeletedFlag:
setSyncGeneration:
setModificationDate:
setLocalRecordID:
_deletedFlag
_editGeneration
_syncGeneration
_modificationDate
_systemFields
_localRecordID
TB,N,V_deletedFlag
T@"NSDate",C,N,V_modificationDate
Tq,N,V_editGeneration
Tq,N,V_syncGeneration
T@"NSString",C,N,V_localRecordID
T@"CKRecord",C,N,V_systemFields
T@"NSData",R,C,D,N
initWithManagedObjectModel:
_persistentStoreOptions
addPersistentStoreWithType:configuration:URL:options:error:
_setupManagedObjectContext
_sharedRootDirectoryURL
_sharedLegacyRootDirectoryURL
initWithManagedObjectModel:rootDirectoryURL:legacyRootDirectoryURL:nameOnDisk:
_setupPersistentStoreWithRootDirectoryURL:legacyRootDirectoryURL:nameOnDisk:
_documentsDirectoryURL
URLByAppendingPathComponent:isDirectory:
_directoryExistsForStoreAtURL:
_createDirectoryForStoreAtURL:
_migrateAndDestroyStoreAtLegacyURL:toModernURL:
_addStoreAtURL:
_deleteDirectoryForStoreAtURL:
initWithConcurrencyType:
setPersistentStoreCoordinator:
setUndoManager:
URLByDeletingLastPathComponent
checkResourceIsReachableAndReturnError:
_logIf:error:operation:
replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
destroyPersistentStoreAtURL:withType:options:error:
isReadOnly
removePersistentStore:error:
initWithManagedObjectModel:nameOnDisk:
managedObjectContext
setManagedObjectContext:
persistentStoreCoordinator
_managedObjectContext
_persistentStoreCoordinator
T@"NSManagedObjectContext",&,N,V_managedObjectContext
T@"NSPersistentStoreCoordinator",&,N,V_persistentStoreCoordinator
changes
objectAtIndexedSubscript:
changeType
changedObjectID
existingObjectWithID:error:
isDeleted
refreshObject:mergeChanges:
entity
tombstone
processPendingChanges
bds_atOffset:getAtMost:moc:entityClass:privacyDelegate:updated:tombstones:
initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:dataMapper:
mq_cloudSyncVersions
responseQueue
initWithEntityName:
predicateWithFormat:
_logError:
syncCloudData:completion:
performBlock:
firstObject
signalSyncToCK
signalDataChangedTransaction
numberWithInteger:
setCloudData:predicate:mergers:completion:
mq_incrementCloudVersion
mq_signalTransactions
mq_sanitizeError:
setCloudData:predicate:propertyIDKey:mergers:completion:
dictionaryWithCapacity:
arrayWithCapacity:
resolvedCloudDataForCloudData:withResolvers:predicate:completion:
resolvedCloudDataForCloudData:withResolvers:mergers:predicate:completion:
dataMapper
cloudDataFromRecord:
mutableClass
resolveConflictsForRecords:withResolvers:completion:
resolveConflictsForRecords:withResolvers:mergers:completion:
immutableClass
removeObjectsInArray:
predicateWithValue:
cloudDatasWithPredicate:completion:
fetchHistoryAfterToken:
executeRequest:error:
result
addObjectsFromArray:
initWithCloudDataSource:entityName:notificationName:immutableClass:mutableClass:syncManager:cloudKitController:
currentCloudSyncVersions:
setCloudData:predicate:completion:
setCloudData:predicate:propertyIDKey:completion:
removeCloudDataForPredicate:completion:
updateSyncGenerationFromCloudData:predicate:propertyIDKey:completion:
deleteCloudDataForPredicate:completion:
countWithPredicate:completion:
cloudDataWithPredicate:sortDescriptors:completion:
cloudDatasWithPredicate:sortDescriptors:maximumResultCount:filter:completion:
transformedCloudDatasWithPredicate:transformer:limit:completion:
resolvedCloudDataForCloudData:predicate:completion:
resolveConflictsForRecords:completion:
failedRecordIDs:completion:
fetchCloudDataIncludingDeleted:completion:
getChangesSince:forEntityClass:completion:
setMoc:
dataSource
setDataSource:
setResponseQueue:
setImmutableClass:
setMutableClass:
setSignalDataChangedTransaction:
setDataMapper:
_signalDataChangedTransaction
_moc
_dataSource
_responseQueue
_immutableClass
_mutableClass
_dataMapper
T@"NSManagedObjectContext",W,N,V_moc
T@"BCCloudDataSource",&,N,V_dataSource
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
T@"BCCloudDataSyncManager",W,N,V_syncManager
T#,V_immutableClass
T#,V_mutableClass
TB,N,V_signalDataChangedTransaction
T@"<BCCloudDataMapper>",&,N,V_dataMapper
initWithCloudKitController:dataMapper:
syncQueue
_syncQueueSyncForCloudData:completion:
syncManager:resolveConflictsForRecords:completion:
syncManager:removeCloudDataForIDs:completion:
syncManager:fetchedAllRecordsInZone:
serverPushPostponed
syncManager:startSyncToCKWithCompletion:
signalSyncToCKForSyncManager:
tooBigBatch
_maxCloudDataPerBatch
recordFromCloudData:
setTooBigBatch:
_leaveDispatchGroup:times:
syncManager:updateSyncGenerationFromCloudData:completion:
initWithRecordIDs:
setFetchRecordsCompletionBlock:
syncManager:failedRecordIDs:completion:
setServerPushPostponed:
_updateRetryParametersFromModifyRecordsOperationError:batchSize:
setProcessingCloudData:
_batchFromCloudData:
_fromBatch:getRecordsToSave:recordIDsToDelete:buildingMap:
_enterDispatchGroup:times:
initWithRecordsToSave:recordIDsToDelete:
setSavePolicy:
_modifyRecordsCompletionBlockWithDispatchGroup:cloudDataMap:recordCount:operation:
setModifyRecordsCompletionBlock:
databaseController:reachabilityChanged:
setSyncQueue:
processingCloudData
_processingCloudData
_serverPushPostponed
_syncQueue
_tooBigBatch
T@"BCCloudKitController",&,N,V_cloudKitController
T@"NSObject<OS_dispatch_queue>",&,N,V_syncQueue
TB,N,V_processingCloudData
TQ,N,V_tooBigBatch
TB,N,V_serverPushPostponed
T@"<BCCloudDataSyncManagerDelegate>",W,N,V_delegate
initCanUseCellularData:powerRequired:bundleID:
bitrateForItem:
_prepareMediaItemForPinning:parentProgress:completion:
addChild:withPendingUnitCount:
setCompletedUnitCount:
updateWantToRead:updateReadingNow:updateManuallyPinned:jaliscoUpdateSuccessful:withCompletion:
isExplicitItem
isExplicit
sharedConnection
effectiveBoolValueForSetting:
setWithObject:
fetchItemsForStoreIDs:
notifyQueue
readingNowDetailManagerInstance
representativeDAAPMediaItemsWithAssetId:
trackedRreadingNowDetailsInDescendingOrderMaximumResultCount:filter:completion:
stringValue
standardUserDefaults
boolForKey:
automaticUpdateCompletion
setAutomaticUpdateCompletion:
setBool:forKey:
T@"BDSNBPinningManager",R,N
_prepareMediaItemForPinningIfNeeded:parentProgress:completion:
_shouldPinMediaItem:allowsExplicit:
_shouldPinJaliscoItem:allowsExplicit:
_isExplicitMaterialAllowed
_jaliscoAudiobookWithAssetId:
setNotifyQueue:
audiobookFetcher
setAudiobookFetcher:
_pinningListUpdater
_automaticUpdateCompletion
_notifyQueue
_audiobookFetcher
T@?,C,N,V_automaticUpdateCompletion
T@"NSObject<OS_dispatch_queue>",&,N,V_notifyQueue
T@"BLHLSAudiobookFetcher",&,N,V_audiobookFetcher
T@"BDSAutomaticPinningListUpdater",R,N,V_pinningListUpdater
setLocalSaltVersionIdentifier:
setServerSaltVersionIdentifier:
initWithFetchRequest:
postNotificationName:object:userInfo:
initWithMOC:zoneName:cloudKitController:
zoneNeedsUpdate:completion:
updateSaltVersionIdentifier:completion:
setZoneName:
_zoneName
T@"NSString",C,N,V_zoneName
initService
objectModel
initWithZoneDataManager:tokenController:databaseController:
initWithCloudDataSource:cloudKitController:
pathForResource:ofType:
fileURLWithPath:isDirectory:
storeAssetManagerInstance
assetDetailManagerInstance
assetReviewManagerInstance
changeTokenController
setObjectModel:
setAssetDataSource:
setAssetDetailManager:
setReadingNowDetailManager:
setAssetReviewManager:
setStoreAssetManager:
setChangeTokenController:
saltVersionIdentifierManager
setSaltVersionIdentifierManager:
_objectModel
_assetDataSource
_assetDetailManager
_readingNowDetailManager
_assetReviewManager
_storeAssetManager
_changeTokenController
_saltVersionIdentifierManager
T@"NSObject<BCCloudAssetDetailManager>",&,N,V_assetDetailManager
T@"NSObject<BCCloudReadingNowDetailManager>",&,N,V_readingNowDetailManager
T@"NSObject<BCCloudAssetReviewManager>",&,N,V_assetReviewManager
T@"NSObject<BCCloudStoreAssetManager>",&,N,V_storeAssetManager
T@"BCCloudChangeTokenController",&,N,V_changeTokenController
T@"BDSSaltVersionIdentifierManager",&,N,V_saltVersionIdentifierManager
T@"NSManagedObjectModel",&,N,V_objectModel
T@"BCCloudDataSource",&,N,V_assetDataSource
dataManager
removeAssetDetailForSaltedHashedRecordIDs:completion:
updateSyncGenerationFromCloudData:completion:
setYear:
setDay:
setMonth:
systemTimeZone
setTimeZone:
currentCalendar
dateFromComponents:
component:fromDate:
numberWithLong:
assetDetailDataSource
setAssetDetailDataSource:
setDataManager:
_assetDetailDataSource
_dataManager
T@"BCCloudDataSource",&,N,V_assetDetailDataSource
T@"BCCloudDataManager",&,N,V_dataManager
date
connection
notificationQueue
initWithEnvironmentName:namedDelegatePort:queue:
_setEnabledTopics:
setConnection:
serverPreferredPushEnvironmentWithCompletionHandler:
setLastConnectionDate:
lastConnectionDate
isWithinConnectionDateRange
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
setNotificationQueue:
unfairLock
setUnfairLock:
_unfairLock
_connection
_notificationQueue
_lastConnectionDate
T@"APSConnection",&,N,V_connection
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
T{os_unfair_lock_s=I},N,V_unfairLock
T@"NSDate",&,N,V_lastConnectionDate
isTrackedAsRecent
lastEngagedDate
_configureFromReadingNowDetail:withMergers:
compare:
setIsTrackedAsRecent:
setLastEngagedDate:
_isTrackedAsRecent
_lastEngagedDate
TB,N,V_isTrackedAsRecent
T@"NSDate",C,N,V_lastEngagedDate
removeReadingNowDetailForSaltedHashedRecordIDs:completion:
sortDescriptorWithKey:ascending:
readingNowDetailDataSource
setReadingNowDetailDataSource:
_readingNowDetailDataSource
T@"BCCloudDataSource",&,N,V_readingNowDetailDataSource
assetReviewID
starRating
normalizedStarRating
reviewTitle
reviewBody
_configureFromAssetReview:withMergers:
userIDFromAssetReviewID:
setAssetReviewID:
setStarRating:
rangeOfString:
substringFromIndex:
substringToIndex:
assetReviewIDWithUserID:assetID:
assetIDFromAssetReviewID:
setNormalizedStarRating:
userID
Td,N
encodeInt:forKey:
decodeIntForKey:
initWithAssetReviewID:
setReviewTitle:
setReviewBody:
setUserID:
_starRating
_assetReviewID
_reviewTitle
_reviewBody
_userID
T@"NSString",C,N,V_assetReviewID
T@"NSString",C,N,V_userID
Ts,N,V_starRating
T@"NSString",C,N,V_reviewTitle
T@"NSString",C,N,V_reviewBody
audiobooksQuery
setIgnoreSystemFilterPredicates:
predicateWithValue:forProperty:
addFilterPredicate:
collections
_storeRepresentativeItem:
items
valueForProperty:
mediaType
longLongValue
jaliscoClient
T@"BDSJaliscoDAAPClient",R,N
daapClientDelegate
setJaliscoClient:
_jaliscoClient
T@"BLJaliscoDAAPClient",&,N,V_jaliscoClient
T@"<BLJaliscoDAAPClientDelegate>",W,N
removeAssetReviewsForSaltedHashedRecordIDs:completion:
assetReviewDataSource
setAssetReviewDataSource:
_assetReviewDataSource
T@"BCCloudDataSource",&,N,V_assetReviewDataSource
storeID
_configureFromStoreItem:withMergers:
setStoreID:
initWithStoreID:
_storeID
T@"NSString",C,N,V_storeID
removeStoreItemWithSaltedHashedRecordIDs:completion:
storeAssetDataSource
setStoreAssetDataSource:
_storeAssetDataSource
T@"BCCloudDataSource",&,N,V_storeAssetDataSource
dictionaryRepresentation
numberWithUnsignedLongLong:
allocWithZone:
readFrom:
writeTo:
copyTo:
mergeFrom:
location
setLocation:
setLength:
_length
_location
TQ,N,V_location
TQ,N,V_length
addAnnotation:
setAppVersion:
setAssetVersion:
annotationsCount
clearAnnotations
annotationAtIndex:
annotationType
hasAssetVersion
assetVersion
annotations
setAnnotations:
_annotations
_appVersion
_assetVersion
T@"NSString",&,N,V_assetID
T@"NSString",&,N,V_appVersion
T@"NSString",&,N,V_assetVersion
T@"NSMutableArray",&,N,V_annotations
numberWithUnsignedInt:
setCreatorIdentifier:
setLocationCFIString:
setNote:
setRepresentativeText:
setSelectedText:
setUuid:
setPhysicalPageNumber:
setAnnotationVersion:
setAttachments:
setChapterTitle:
setSelectedTextRange:
setFutureProofing11:
setFutureProofing12:
setPlLocationStorageUUID:
setPlUserData:
setDeleted:
setHasDeleted:
hasDeleted
setIsUnderline:
setHasIsUnderline:
hasIsUnderline
hasLocationCFIString
hasNote
hasRepresentativeText
hasSelectedText
setStyle:
setHasStyle:
hasStyle
setType:
setHasType:
hasType
hasPhysicalPageNumber
hasAnnotationVersion
hasAttachments
hasChapterTitle
setUserModificationDate:
setHasUserModificationDate:
hasUserModificationDate
hasSelectedTextRange
setHasReadingProgressHighWaterMark:
hasReadingProgressHighWaterMark
setSpineIndexUpdated:
setHasSpineIndexUpdated:
hasSpineIndexUpdated
setHasReadingProgress:
hasReadingProgress
hasFutureProofing11
hasFutureProofing12
setPlAbsolutePhysicalLocation:
setHasPlAbsolutePhysicalLocation:
hasPlAbsolutePhysicalLocation
setPlLocationRangeEnd:
setHasPlLocationRangeEnd:
hasPlLocationRangeEnd
setPlLocationRangeStart:
setHasPlLocationRangeStart:
hasPlLocationRangeStart
hasPlLocationStorageUUID
hasPlUserData
setLocationModificationDate:
setHasLocationModificationDate:
hasLocationModificationDate
creationDate
setCreationDate:
creatorIdentifier
deleted
isUnderline
locationCFIString
note
representativeText
selectedText
style
type
uuid
physicalPageNumber
annotationVersion
attachments
chapterTitle
userModificationDate
selectedTextRange
spineIndexUpdated
futureProofing11
futureProofing12
plAbsolutePhysicalLocation
plLocationRangeEnd
plLocationRangeStart
plLocationStorageUUID
plUserData
locationModificationDate
_creationDate
_locationModificationDate
_userModificationDate
_annotationVersion
_attachments
_chapterTitle
_creatorIdentifier
_futureProofing11
_futureProofing12
_locationCFIString
_note
_physicalPageNumber
_plAbsolutePhysicalLocation
_plLocationRangeEnd
_plLocationRangeStart
_plLocationStorageUUID
_plUserData
_representativeText
_selectedText
_selectedTextRange
_style
_type
_uuid
_deleted
_isUnderline
_spineIndexUpdated
_has
Td,N,V_creationDate
T@"NSString",&,N,V_creatorIdentifier
TB,N
TB,N,V_deleted
TB,N,V_isUnderline
T@"NSString",&,N,V_locationCFIString
Td,N,V_modificationDate
T@"NSString",&,N,V_note
T@"NSString",&,N,V_representativeText
T@"NSString",&,N,V_selectedText
TI,N,V_style
TI,N,V_type
T@"NSString",&,N,V_uuid
T@"NSString",&,N,V_physicalPageNumber
T@"NSString",&,N,V_annotationVersion
T@"NSString",&,N,V_attachments
T@"NSString",&,N,V_chapterTitle
Td,N,V_userModificationDate
T@"BCAnnotationRange",&,N,V_selectedTextRange
TB,N,V_spineIndexUpdated
T@"NSString",&,N,V_futureProofing11
T@"NSString",&,N,V_futureProofing12
Ti,N,V_plAbsolutePhysicalLocation
Ti,N,V_plLocationRangeEnd
Ti,N,V_plLocationRangeStart
T@"NSString",&,N,V_plLocationStorageUUID
T@"NSData",&,N,V_plUserData
Td,N,V_locationModificationDate
fetchLatestCompletion:
addObserverForName:object:queue:usingBlock:
_fetchCloudSyncVersions:completion:
fetchQueue
fetching
setFetching:
_fq_fetchSince:completion:
lastPlayedDate
hasBeenPlayed
setHasBeenPlayed:
setLastPlayedDate:
setValue:forProperty:withCompletionBlock:
_updateAssetDetail:fromMediaItem:
_updateBookmarkTimeFromAssetDetail:
_archiveCloudSyncVersions:completion:
setFetchQueue:
_fetching
_fetchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_fetchQueue
T@,&,N,V_observer
TB,N,V_fetching
_bdsService
_deleteLocaliCloudDataIfUserLoggedOutFromiCloudCompletion:
_dieIfUnacknowledgediCloudLogoutOcccurred
setTccNotifyToken:
tccNotifyToken
valueForEntitlement:
processIdentifier
invalidate
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
remoteObjectProxy
synchronousRemoteObjectProxyWithErrorHandler:
serviceConnectionClient
iCloudIdentityTokenTracker
listener:shouldAcceptNewConnection:
setICloudIdentityTokenTracker:
setServiceConnectionClient:
_tccNotifyToken
_iCloudIdentityTokenTracker
_serviceConnectionClient
T@"BDSICloudIdentityTokenTracker",&,N,V_iCloudIdentityTokenTracker
T@"<BDSServiceConnectionClient>",W,N,V_serviceConnectionClient
Ti,N,V_tccNotifyToken
zoneDataManager
tokenController
setZoneDataManager:
setTokenController:
_zoneDataManager
_tokenController
T@"NSObject<BDSCloudKitSupportZoneRecovery>",W,N,V_zoneDataManager
T@"BCCloudChangeTokenController",W,N,V_tokenController
collectionDetailManagerInstance
collectionMemberManagerInstance
collectionDataSource
setCollectionDataSource:
setCollectionDetailManager:
setCollectionMemberManager:
proxyMode
setProxyMode:
_proxyMode
_collectionDataSource
_collectionDetailManager
_collectionMemberManager
T@"NSObject<BCCloudCollectionDetailManager>",&,N,V_collectionDetailManager
T@"NSObject<BCCloudCollectionMemberManager>",&,N,V_collectionMemberManager
T@"BCCloudDataSource",&,N,V_collectionDataSource
TB,N,V_proxyMode
removeCollectionDetailForSaltedHashedRecordIDs:completion:
collectionID
collectionDetailDataSource
setCollectionDetailDataSource:
_collectionDetailDataSource
T@"BCCloudDataSource",&,N,V_collectionDetailDataSource
removeCollectionMemberForCollectionSaltedHashedRecordIDs:completion:
fetchCollectionMembersInCollectionID:maximumResultCount:filter:completion:
collectionMemberDataSource
setCollectionMemberDataSource:
_collectionMemberDataSource
T@"BCCloudDataSource",&,N,V_collectionMemberDataSource
collectionDescription
hidden
sortMode
_configureFromCollectionDetail:withMergers:
setCollectionID:
setName:
initWithCollectionID:
setCollectionDescription:
setHidden:
setSortOrder:
setSortMode:
_hidden
_sortOrder
_sortMode
_collectionID
_name
_collectionDescription
T@"NSString",C,N,V_collectionID
T@"NSString",C,N,V_name
T@"NSString",C,N,V_collectionDescription
TB,N,V_hidden
Ti,N,V_sortOrder
Ti,N,V_sortMode
_configureFromCollectionMember:withMergers:
setCollectionMemberID:
collectionMemberIDWithCollectionID:assetID:
assetIDFromCollectionMemberID:
initWithCollectionMemberID:
_collectionMemberID
T@"NSString",C,N,V_collectionMemberID
MbP?
v8@?0
com.apple.bookdatastored.xpc-listener-ready
com.apple.bookdatastored.startup-queue
v16@?0@"NSError"8
com.apple.iBooks.BookDataStoreService
com.apple.iBooks
BookDataStore.CloudKit
BookDataStore.CloudKitSync
BookDataStore.CloudKitAudiobook
BookDataStore.Service
BDSArrayAdditionsErrorDomain
v20@?0B8@"NSError"12
kNetworkReachabilityChangedNotification
objectID
NSError %@
NSDetailedErrors
----------------------- Sub-errors: %03lu
Not an NSError: %@
-----------------------
CFBundleShortVersionString
watchSynced-
BKLibrary.ReadingNow
BKAudioBookSkipForward
BKAudioBookSkipBackward
BCOverrideRecentBookAlgorithm
BCTimeThresholdPromotionOverride
XCTestConfigurationFilePath
BDSUnitTest
Documents
BDSICloudIdentityTokenTrackerToken
BDSICloudIdentityToken.plist
com.apple.iBooks.BDSICloudStatusMonitor.dispatchQueue
BDSSyncUserDefaults
@"NSDictionary"8@?0
isSignedIntoICloud
isCloudKitSyncOptedIn
isGlobalICloudDriveSyncOptedIn
iCloudIdentityExists
<%@=%p %@>
AssetZone
CollectionZone
com.apple.iBooks.CloudKitController
com.apple.iBooks.cloudData
BCCloudKit-BookDataStoreService
bcck
BCPrivateDatabase
com.apple.iBooks.BCCloudKitPrivate
Want_To_Read_Collection_ID
v12@?0B8
v16@?0@?<v@?>8
_coalescedAttachment in BCCloudKitController
v16@?0@"NSString"8
v16@?0B8B12
v24@?0@"CKAccountInfo"8@"NSError"16
v24@?0q8@"NSError"16
v40@?0q8@"NSError"16@"CKAccountInfo"24@"NSError"32
Account changed
hasUpdatedSubscription
serverChangeToken
containerIdentifier
userRecordID
recordIDSalt
salt
saltEncrypted
<%@: %p recordZone:%@>
com.apple.iBooks.CloudKitDatabaseController
_coalescedArchive in BCCloudKitDatabaseController
_coalescedZoneFetch in BCCloudKitDatabaseController
v24@?0@"CKRecord"8@"NSError"16
v24@?0@"CKRecordID"8@"NSError"16
cloudData
attachToZone
v32@?0@"NSString"8Q16^B24
%@.%@
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"CKRecordZoneID"8
v16@?0@"CKServerChangeToken"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
v32@?0@"CKRecordZone"8Q16^B24
v24@?0@"NSArray"8@"NSError"16
v24@?0@"CKRecordZoneID"8^B16
v24@?0@"NSDictionary"8@"NSError"16
No Books Record Salt
Nil weak self after save record %@
Unable to generate random salt %@
No Books Salt
Nil weak self after fetch salt record %@
v32@?0@"CKRecordZoneID"8Q16^B24
v16@?0@"CKRecord"8
v24@?0@"CKRecordID"8@"NSString"16
v32@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24
Unreadable keychain - cannot fetch record zones
Account temporarily unavailable - cannot fetch record zones
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v32@?0@"NSString"8@"NSArray"16^B24
zoneName
B32@?0@"<BCCloudKitDatabaseObserver>"8Q16^B24
v32@?0@"NSString"8@"NSMutableArray"16^B24
BDSErrorDomain
BDSCloudKitClientError
com.apple.bookdatastored.prepareForSync
v16@?0@"NSObject<OS_xpc_object>"8
BCSaltVersionIdentifier
BDSTCCAccessChangedNotification
com.apple.notifyd.matching
v44@?0@"NSSet"8@"NSSet"16@"BCMutableCloudSyncVersions"24@"NSError"32B40
updateBitrateForItemWithAdamID
BDSService has no jalisco client
com.apple.iBooks.CloudKitTransaction.
_coalescedNotification in %@
BCCloudKitTransaction-
com.apple.NanoBooks
assetDetail
isFinished
notFinished
taste
tasteSyncedToStore
dateFinished
lastOpenDate
readingProgress
readingProgressHighWaterMark
readingPositionCFIString
readingPositionAnnotationVersion
readingPositionAssetVersion
readingPositionUserData
readingPositionLocationRangeStart
readingPositionLocationRangeEnd
readingPositionAbsolutePhysicalLocation
readingPositionStorageUUID
readingPositionLocationUpdateDate
datePlaybackTimeUpdated
bookmarkTime
assetID
modificationDate
the same
newer
BCAssetDetail assetID: %@
  (isFinished: %@, notFinished: %@, dateFinished: %@ lastOpenDate: %@)  (taste: %d, tasteSyncedToStore: %d)  readingPosition=(
    readingProgress:%.2f
    readingProgressHighWaterMark:%.2f
    cfi:%@
    annotationVersion=%@
    assetVersion=%@
    userData=%@
    locationRangeStart=%d    locationRangeEnd=%d    absolutePhysicalLocation=%d    storageUUID=%@
    locationUpdateDate=%@)
  playbackPosition=(
    datePlaybackTimeUpdated=%@
    bookmarkTime = %.2f)
BCMutableAssetDetail assetID: %@
  (isFinished: %@, notFinished: %@, dateFinished: %@ lastOpenDate: %@)  (taste: %d, tasteSyncedToStore: %d)  readingPosition=(
    readingProgress:%.2f
    readingProgressHighWaterMark:%.2f
    cfi:%@
    annotationVersion=%@
    assetVersion=%@
    userData=%@
    locationRangeStart=%d    locationRangeEnd=%d    absolutePhysicalLocation=%d    storageUUID=%@
    locationUpdateDate=%@)
  playbackPosition=(
    datePlaybackTimeUpdated=%@
    bookmarkTime = %.2f)
com.apple.iBooks.CloudKitTransactionManager
BCCloudKitSyncToCKTransaction-
BCCloudKitDataChangedTransaction-
dataType
cloudVersion
localVersion
syncVersion
historyToken
historyTokenOffset
dataType: %@, cloudVersion: %lld, localVersion: %lld, syncVersion: %lld historyToken:%@ historyTokenOffset=%lld
iBooks
BCCloudKitFetchChangesTransaction-
localRecordID
localRecordIDEncrypted
editGeneration
syncGeneration
deletedFlag
BCCloudData-BookDataStoreService
BCCloudAsset-BookDataStoreService
creating directory for store
deleting directory for store
[MIGRATE] migrate legacy store
[MIGRATE] destroy legacy store
removing read-only cloud data source persistent store
adding cloud data source persistent store
BookDataStore.DataManagerCallbackQueue
editGeneration > syncGeneration
BCCloudSyncVersions
dataType == %@
CoreDataError
domain
code
v32@?0@"NSString"8@"<BCCloudData>"16^B24
v32@?0@"BCCloudData"8Q16^B24
keyFromMyKitchenDrawer
%K IN %@
recordName
saltedHashedID IN %@
deletedFlag == NO
saltedHashedID
v32@?0@"NSArray"8{_NSRange=QQ}16
syncGeneration >= 1
%@-%@
v32@?0@"CKRecord"8Q16^B24
com.apple.iBooks.CloudDataSyncManager
v32@?0@"CKRecordID"8@"BCMutableCloudData"16^B24
Unsynced keychain - cannot modify records
BDSInitialPinningUpdateDone
BDSNBPinningManager notify queue
B16@?0@"<BCReadingNowDetail>"8
v32@?0@"NSSet"8@"BCMutableCloudSyncVersions"16@"NSError"24
BCServerChangeToken
BCAssetData
BCCloudAssetDetailManagerChanged
BCCloudReadingNowDetailManagerChanged
BCCloudAssetReviewManagerChanged
BCCloudStoreAssetManagerChanged
momd
v28@?0B8@"NSArray"12@"NSError"20
BCAssetDetail
assetID = %@
assetID IN %@
assetID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
v24@?0@"<BCCloudData>"8@"NSError"16
assetID IN %@ AND (deletedFlag == NULL OR deletedFlag == NO)
tasteSyncedToStore != NULL AND tasteSyncedToStore == %@ AND (deletedFlag == NULL OR deletedFlag == NO)
v32@?0@"NSArray"8@"BCMutableCloudSyncVersions"16@"NSError"24
isFinished == YES AND (dateFinished >= %@ AND dateFinished < %@)
@16@?0@"<BCCloudData>"8
isFinished == YES AND dateFinished != NULL
com.apple.aps.bookdatastored
com.apple.icloud-container.com.apple.NanoBooks
BookDataStore.ConnectionDate
bookdatastored Notification Queue
v24@?0@"NSString"8@"NSError"16
readingNowDetail
isTrackedAsRecent
lastEngagedDate
assetID: %@, isTrackedAsRecent: %@, lastEngagedDate: %@
BCReadingNowDetail
isTrackedAsRecent == YES
B16@?0@"<BCCloudData>"8
starRating
reviewTitle
reviewBody
assetReview
userID
assetReviewID
assetReviewID: %@, starRating: %hd, reviewTitle: %@, reviewBody: %@
%@|%@
BCAssetReview
assetReviewID = %@
assetReviewID IN %@
assetReviewID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
assetReviewID IN %@ AND (deletedFlag == NULL OR deletedFlag == NO)
userID == %@
(deletedFlag == NULL OR deletedFlag == NO) AND userID == %@
storeItem
storeID
storeID: %@, 
BCStoreItem
storeID = %@
storeID IN %@
storeID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
%@ %@
location
length
appVersion
assetVersion
annotation
-[BCAnnotationsProtoBook writeTo:]
BCAnnotationsProtoBook.m
nil != self->_assetID
nil != self->_appVersion
creationDate
creatorIdentifier
deleted
isUnderline
locationCFIString
note
representativeText
selectedText
style
type
uuid
physicalPageNumber
annotationVersion
attachments
chapterTitle
userModificationDate
selectedTextRange
spineIndexUpdated
futureProofing11
futureProofing12
plAbsolutePhysicalLocation
plLocationRangeEnd
plLocationRangeStart
plLocationStorageUUID
plUserData
locationModificationDate
-[BCProtoAnnotation writeTo:]
BCProtoAnnotation.m
nil != self->_creatorIdentifier
nil != self->_uuid
NBAssetDetailSyncVersions
dataStoreFetch
v16@?0@"NSNotification"8
v16@?0@"BCCloudSyncVersions"8
v24@?0B8B12@"NSError"16
com.apple.tcc.access.changed
v12@?0i8
com.apple.iBooks.BDSService.private
application-identifier
com.apple.application-identifier
<%@:%p zoneName=%@ zoneDataManager=%@>
BCCloudCollections
BCCloudCollectionMemberManagerChanged
BCCloudCollectionDetailManagerChanged
BCCollectionDetail
collectionID = %@
collectionID IN %@
collectionID
collectionID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
collectionID IN %@ AND (deletedFlag == NULL OR deletedFlag == NO)
BCCollectionMember
collectionMemberID = %@
collectionMemberID IN %@
collectionMemberID
collectionMemberID = %@ AND (deletedFlag == NULL OR deletedFlag == NO)
collectionMemberID BEGINSWITH[cd] %@ AND (deletedFlag == NULL OR deletedFlag == NO)
sortOrder
name
collectionDescription
hidden
sortMode
collectionDetail
collectionID: %@, Name: %@, Description: %@ hidden:%@ sortOrder:%d sortMode %d
collectionID: %@, Name: %@, Description: %@ hidden:%@ sortOrder:%d sortMode:%d
collectionMember
collectionMemberID: %@, sortOrder:%d modificationDate:%@
BDSDaemon
BDSServiceConnectionClient
BookDataStoreBundleLookupClass
BDSAdditions
NSCopying
IMAdditions
BDSReachability
BatchDelete
Common_Stores
BDSOSTransaction
CoreDataExtras
BDSAppVersion
BDSUserPreferencesSync
BDSAppGroupContainer
BDSICloudIdentityTokenTracker
BDSSyncUserDefaults
BDSICloudIdentityToken
BCAssetDetail
BCCloudData
NSObject
BCCollectionMember
BCCloudKitConfiguration
BCContainerConfiguration
BCCloudKitController
BDSCloudKitSupportSignOutDeleteWithoutInstance
BCCloudKitRecordZone
BCCloudKitDatabaseController
BCCloudDataPrivacyDelegate
BDSAudiobookSyncPrepareActivity
BDSAutomaticPinningListUpdateManager
BCSaltVersionIdentifier
BDSService
MCProfileConnectionObserver
BLJaliscoDAAPClientDelegate
BDSDaemonProtocol
BDSServiceProtocol
BCCloudAssetDetailManager
BDSCloudKitSupportZoneRecovery
BDSCloudKitSupportSignOutDissociate
BCCloudReadingNowDetailManager
BCCloudAssetReviewManager
BCCloudStoreAssetManager
BCCloudCollectionDetailManager
BCCloudCollectionMemberManager
BCCloudKitSyncEnablement
BDSCloudKitSupportSignOut
BDSCloudKitSupportSignOutDelete
BCCloudKitTransactionManagerService
BDSJaliscoDAAPClientService
BDSNBPinningManagerService
BCCloudKitTransaction
BDSAppBundleIdentifier
BCMutableAssetDetail
NSSecureCoding
NSCoding
BCCloudKitTransactionManager
BCCloudKitTransactionDelegate
BCCloudKitSyncToCKTransaction
BCCloudKitDataChangedTransaction
BCCloudSyncVersions
BCMutableCloudSyncVersions
BDSAutomaticPinningListUpdater
BCCloudKitFetchChangesTransaction
BCCloudDataNullPrivacyDelegate
BCMutableCloudData
BCCloudDataSource
BCCloudManagerBatchSupport
BCCloudDataManager
BCCloudDataSyncManager
BCCloudKitDatabaseObserver
BDSNBPinningManager
BCCloudChangeTokenController
BCCloudKitChangeTokenStore
BCCloudAssetManager
BCCloudDataSyncManagerDelegate
BDSNotificationConnection
APSConnectionDelegate
BCReadingNowDetail
BCMutableReadingNowDetail
BCAssetReview
BCMutableAssetReview
BDSMediaLibraryUtils
BDSJaliscoDAAPClient
BCStoreItem
BCMutableStoreItem
BCAnnotationRange
BCAnnotationsProtoBook
BCProtoAnnotation
BDSNBController
BDSITunesAuthenticating
BDSServiceDelegate
NSXPCListenerDelegate
BDSSaltVersionIdentifierManager
BCCloudKitDatabaseZoneObserver
BCCloudCollectionsManager
BCCollectionDetail
BCMutableCollectionDetail
BCMutableCollectionMember
@16@0:8
v32@0:8@16@24
v32@0:8@"BDSServiceDelegate"16@"NSXPCConnection"24
v16@0:8
v24@0:8@?16
v24@0:8@16
@"BDSServiceDelegate"
@"NSObject<OS_dispatch_queue>"
@"NSXPCListener"
@"BUOSStateHandler"
@"BDSNotificationConnection"
@"NSObject<OS_dispatch_source>"
@"BDSAudiobookSyncPrepareActivity"
v44@0:8:16B24@28@?36
@24@0:8^{_NSZone=}16
@24@0:8@16
@24@0:8@?16
v32@0:8Q16@?24
v32@0:8:16@?24
B40@0:8@16@24#32
B32@0:8@16@24
@24@0:8r^{sockaddr_in=CCS{in_addr=I}[8c]}16
B16@0:8
i20@0:8I16
i16@0:8
^{__SCNetworkReachability=}
Q32@0:8@16@24
@56@0:8@16@24@32@40B48B52
@52@0:8@16@24@32@40B48
@40@0:8@16@24@32
@24@0:8#16
@32@0:8@16@24
@56@0:8@16@24@32Q40@48
@60@0:8@16@24@32B40Q44@52
@52@0:8@16@24@32B40Q44
v40@0:8@16@24@32
B24@0:8@16
@24@0:8r*16
@"NSObject<OS_os_transaction>"
v20@0:8B16
@28@0:8@16B24
@"NSMutableDictionary"
@"NSURL"
@"BDSICloudIdentityToken"
B24@0:8^{__CFArray=}16
B24@0:8^{__CFString=}16
v28@0:8^{__CFString=}16B24
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
q16@0:8
@"NSDate"16@0:8
@"CKRecord"16@0:8
@"NSData"16@0:8
@"<BCCloudDataPrivacyDelegate>"16@0:8
v24@0:8@"<BCCloudDataPrivacyDelegate>"16
s16@0:8
f16@0:8
d16@0:8
B20@0:8B16
B24@0:8@"<BCCloudData>"16
@"NSArray"16@0:8
@"<BCContainerConfiguration>"16@0:8
@"NSArray"
v24@0:8@?<v@?B@"NSError">16
v24@0:8B16B20
v32@0:8@16@?24
@"BCCloudKitTransactionManager"
@"BCCloudKitDatabaseController"
@"<BCContainerConfiguration>"
@"CKContainer"
@"BUCoalescingCallBlock"
@"CKRecordZone"
@"NSString"32@0:8@"NSString"16@"NSString"24
v36@0:8@16B24@?28
v52@0:8@16@24B32@?36@?44
v40@0:8@16@24@?32
v40@0:8@16q24@?32
v24@0:8d16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CKDatabase"
@"NSMutableSet"
@"CKRecordID"
@"CKServerChangeToken"
@"NSData"
@"NSMapTable"
v36@0:8@16@24B32
B24@0:8@"BDSAutomaticPinningListUpdater"16
v36@0:8@"BDSAutomaticPinningListUpdater"16@"NSError"24B32
@?16@0:8
^{_xpc_activity_eligibility_changed_handler_s=}
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v24@0:8@"BLJaliscoDAAPClient"16
v32@0:8@"BLJaliscoDAAPClient"16@?<v@?B>24
v28@0:8B16@?20
v32@0:8q16@?24
v24@0:8@?<v@?@"BCMutableCloudSyncVersions">16
v32@0:8@"BCMutableAssetDetail"16@?<v@?BB@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableAssetDetail"@"NSError">24
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">24
v28@0:8B16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">20
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8q16@?<v@?@"NSDictionary"@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"BCMutableCloudSyncVersions"16@?<v@?@"NSSet"@"NSSet"@"BCMutableCloudSyncVersions"@"NSError"B>24
v32@0:8@"BCMutableAssetReview"16@?<v@?BB@"NSError">24
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableAssetReview"@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">28
v32@0:8@"BCMutableStoreItem"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableStoreItem"@"NSError">24
v32@0:8@"BCMutableCollectionDetail"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableCollectionDetail"@"NSError">24
v32@0:8@"BCMutableCollectionMember"16@?<v@?BB@"NSError">24
v32@0:8@"NSString"16@?<v@?@"BCMutableCollectionMember"@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSArray"@"BCMutableCloudSyncVersions"@"NSError">24
v32@0:8@"NSString"16@?<v@?i@"NSError">24
v24@0:8@"NSString"16
v36@0:8B16q20@?28
v36@0:8B16@20@?28
v36@0:8B16q20@?<v@?B>28
v36@0:8B16@"NSString"20@?<v@?B>28
v32@0:8@"NSSet"16@?<v@?@"NSSet">24
v32@0:8@"NSSet"16@?<v@?B>24
v32@0:8@"NSSet"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSError">16
@28@0:8B16@?20
v24@0:8@?<v@?@"NSString"@"NSError">16
@"NSProgress"28@0:8B16@?<v@?@"NSError">20
@"NSProgress"24@0:8@?<v@?@"NSError">16
v32@0:8@"NSNumber"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSNumber"@"NSError">16
@"BCCloudAssetManager"
@"BCCloudCollectionsManager"
@"BDSNBController"
@"BDSJaliscoDAAPClient"
@"NSMutableOrderedSet"
v24@0:8q16
@"BDSOSTransaction"
@"<BCCloudKitTransactionDelegate>"
B24@0:8d16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v20@0:8f16
v20@0:8s16
v20@0:8i16
@"NSDate"
v24@0:8@"BCCloudKitTransaction"16
@"BCCloudKitController"
@"BCCloudDataSyncManager"
@"NSPersistentHistoryToken"16@0:8
@"NSPersistentHistoryToken"
B28@0:8@16B24
v24@0:8Q16
@"NSProgress"
@"NSHashTable"
@"<BCCloudDataPrivacyDelegate>"
@"CKRecord"
@48@0:8@16@24@32@40
v36@0:8B16@20@28
B40@0:8@16@24@32
@"NSManagedObjectContext"
@"NSPersistentStoreCoordinator"
B72@0:8^q16q24@32#40@48^@56^@64
@72@0:8@16@24@32#40#48@56@64
@80@0:8@16@24@32#40#48@56@64@72
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24Q32@?40@?48
v48@0:8@16@?24q32@?40
v40@0:8@16#24@?32
v24@0:8#16
@"BCCloudDataSource"
@"<BCCloudDataMapper>"
v28@0:8@16B24
v28@0:8@"BCCloudKitDatabaseController"16B24
v32@0:8@"BCCloudKitDatabaseController"16@"NSArray"24
v40@0:8@"BCCloudKitDatabaseController"16@"CKRecordID"24@"NSString"32
v32@0:8@"BCCloudKitDatabaseController"16@"NSString"24
v48@0:8@16^@24^@32^@40
v32@0:8@16Q24
@?48@0:8@16@24Q32@40
@"<BCCloudDataSyncManagerDelegate>"
@40@0:8B16B20B24B28@?32
@"BDSAutomaticPinningListUpdater"
@"BLHLSAudiobookFetcher"
v32@0:8@"CKServerChangeToken"16@?<v@?>24
v24@0:8@?<v@?@"CKServerChangeToken">16
@"NSManagedObjectModel"
@"NSObject<BCCloudAssetDetailManager>"
@"NSObject<BCCloudReadingNowDetailManager>"
@"NSObject<BCCloudAssetReviewManager>"
@"NSObject<BCCloudStoreAssetManager>"
@"BCCloudChangeTokenController"
@"BDSSaltVersionIdentifierManager"
v32@0:8@"BCCloudDataSyncManager"16@?<v@?>24
v24@0:8@"BCCloudDataSyncManager"16
v40@0:8@"BCCloudDataSyncManager"16@"NSArray"24@?<v@?B@"NSError">32
v32@0:8@"BCCloudDataSyncManager"16@"NSString"24
@"BCCloudDataManager"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"APSConnection"
v40@0:8Q16@?24@?32
@"BLJaliscoDAAPClient"
@24@0:8Q16
@"NSMutableArray"
v20@0:8I16
I16@0:8
@"BCAnnotationRange"
{?="locationModificationDate"b1"userModificationDate"b1"plAbsolutePhysicalLocation"b1"plLocationRangeEnd"b1"plLocationRangeStart"b1"readingProgress"b1"readingProgressHighWaterMark"b1"style"b1"type"b1"deleted"b1"isUnderline"b1"spineIndexUpdated"b1}
v32@0:8@?16@?24
v24@0:8@?<v@?B>16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"BDSICloudIdentityTokenTracker"
@"<BDSServiceConnectionClient>"
v40@0:8@"BCCloudKitDatabaseController"16@"NSString"24@?<v@?B>32
@"NSObject<BDSCloudKitSupportZoneRecovery>"
@"NSObject<BCCloudCollectionDetailManager>"
@"NSObject<BCCloudCollectionMemberManager>"
v48@0:8@16Q24@?32@?40
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241128</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleExecutable</key>
<string>bookdatastored</string>
<key>CFBundleIdentifier</key>
<string>com.apple.bookdatastored</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>636</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>13E6049a</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>8.5</string>
<key>DTSDKBuild</key>
<string>19T5208x</string>
<key>DTSDKName</key>
<string>watchsimulator8.5.internal</string>
<key>DTXcode</key>
<string>1330</string>
<key>DTXcodeBuild</key>
<string>13E6049a</string>
<key>MinimumOSVersion</key>
<string>8.5</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2019 Apple. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.iBooks.BookDataStoreService</string>
<key>aps-connection-initiate</key>
<true/>
<key>aps-environment</key>
<string>serverPreferred</string>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>spi</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.application-identifier</key>
<string>com.apple.iBooks.BookDataStoreService</string>
<key>com.apple.developer.icloud-container-environment</key>
<string>Production</string>
<key>com.apple.developer.icloud-container-identifiers</key>
<array>
<string>com.apple.iBooks.cloudData</string>
<string>com.apple.iBooks.secureData</string>
</array>
<key>com.apple.developer.icloud-services</key>
<array>
<string>CloudDocuments</string>
<string>CloudKit</string>
</array>
<key>com.apple.developer.ubiquity-container-identifiers</key>
<array>
<string>iCloud.com.apple.iBooks</string>
</array>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.attribution.implicitly-assumed-identity</key>
<dict>
<key>type</key>
<string>bundleID</string>
<key>value</key>
<string>com.apple.iBooks</string>
</dict>
<key>com.apple.private.cfnetwork.har-capture-amp</key>
<true/>
<key>com.apple.private.cloudkit.masquerade</key>
<true/>
<key>com.apple.private.cloudkit.serviceNameForContainerMap</key>
<dict>
<key>com.apple.iBooks.secureData</key>
<string>iBooksSecureData</string>
</dict>
<key>com.apple.private.cloudkit.spi</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceLiverpool</string>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.iBooks</string>
</array>
<key>fairplay-client</key>
<string>1328318286</string>
</dict>
</plist>
