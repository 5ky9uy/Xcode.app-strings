v8@?0
.webex.com
.webex.com.cn
.dmz.webex.com
web.ciscospark.com
.skype.com
locations
T@"NSSet",&,N,V_locations
groups
T@"NSSet",&,N,V_groups
resources
T@"NSSet",&,N,V_resources
people
T@"NSSet",&,N,V_people
recurrenceEnd
Interval must be greater than 0
%@ <%p> RRULE %@
Encountered illegal value for EKRecurrenceFrequency
EKRecurrenceRule.m
Interval must be greater than or equal to 1
@8@?0
Invalid parameter not satisfying: %@
(int)firstDay <= EKWeekdaySaturday
dayOfTheWeek
DAILY
WEEKLY
MONTHLY
YEARLY
Encountered illegal value for  EKRecurrenceFrequency
yyyyMMdd
yyyyMMdd'T'HHmmss
yyyyMMdd'T'HHmmss'Z'
FREQ=%@
;INTERVAL=%lu
;UNTIL=%@
;COUNT=%lu
;BYMONTH=%@
;BYMONTHDAY=%@
;BYYEARDAY=%@
;BYWEEKNO=%@
;BYDAY=%@
;BYSETPOS=%@
;WKST=SU
shouldPinMonthDays
TB,R,N,V_shouldPinMonthDays
dateComponents
T@"NSDateComponents",R,N
usesEndDate
TB,R,V_usesEndDate
UUID
T@"NSString",R,N
cachedEndDate
T@"NSDate",R,N
dirtyStateMayAffectExceptionDates
TB,R,N
calendarIdentifier
T@"EKRecurrenceEnd",C,N
frequency
Tq,R,N
interval
firstDayOfTheWeek
daysOfTheWeek
T@"NSArray",R,N
daysOfTheMonth
daysOfTheYear
weeksOfTheYear
monthsOfTheYear
setPositions
maxAlarmsAllowed
Ti,N
maxRecurrencesAllowed
supportsAlarmTriggerIntervals
TB,N
supportsAlarmTriggerDates
supportsAlarmsTriggeringAfterStartDate
snoozeAlarmRequiresDetach
organizerCanSeeAttendeeStatuses
inviteesCanSeeAttendeeStatuses
statusesAreAccurate
supportsIncomingInvitations
supportsOutgoingInvitations
requiresOutgoingInvitationsInDefaultCalendar
supportsInvitationModifications
supportsEventForwarding
supportsResponseComments
deliverySourceOrExternalIDRequiredForResponse
proposedStatusRequiredForResponse
declinedStatusChangeRequiresNoPendingStatus
eventDurationConstrainedToRecurrenceInterval
alarmTriggerIntervalConstrainedToRecurrenceInterval
occurrencesMustOccurOnSeparateDays
futureStartDateLimitedToOccurrenceCacheBounds
supportsRecurrencesOnDetachedEvents
recurrencesShouldPinToMonthDays
requiresAttendeeSearchInSingleAccount
mustAcknowledgeMasterEvent
canSetAvailability
eventAvailabilityLimited
requiresMSFormattedUID
shouldCancelDeletedEvents
shouldDeclineDeletedInvitations
supportsStructuredLocations
supportsReminderActions
supportsReminderLocations
supportsAlarmProximity
allowsCalendarAddDeleteModify
allowsTasks
allowsEvents
supportsURLField
supportsAllDayDueDates
supportsSharedCalendars
isFacebook
supportsPrivateEvents
prohibitsPrivateEventsWithAttendees
requiresSamePrivacyLevelAcrossRecurrenceSeries
supportsAvailabilityRequests
supportsIgnoringEventsInAvailabilityRequests
supportsLocationDirectorySearches
supportsInboxAvailability
recurrenceSeriesMustIncludeMoreThanFirstOccurrence
prohibitsMultipleMonthsInYearlyRecurrence
prohibitsMultipleDaysInMonthlyRecurrence
prohibitsYearlyRecurrenceInterval
requiresOccurrencesConformToRecurrenceRule
prohibitsDetachmentOnCommentChange
allowsProposeNewTime
prohibitsICSImport
supportsAutoGeocodingStructuredLocations
supportsJunkReporting
supportsPhoneNumbers
attendeesUseDeletedByOrganizerStatus
prohibitsSlicingEventsWithAttendees
supportsSubscribedCalendars
supportsAttachments
supportsFloatingTimeZone
requiresOpeningAttachmentAsLink
shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars
prohibitsUsingEventOrganizerEmailWhenComposingMail
supportsDelegation
supportsDelegateEnumeration
supportsInvitationModificationsWithoutNotification
supportsRecurrenceSplit
unlocalizedTitle
colorStringRaw
displayOrder
source
@"NSString"8@?0
@"EKPersistentObject"8@?0
REMList
Class getREMListClass(void)_block_invoke
EKFrozenReminderCalendar.m
Unable to find class %s
void *ReminderKitLibrary(void)
/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
REMColor
Class getREMColorClass(void)_block_invoke
Calendar
%@ <%p> {UUID = %@; displayName = %@; address = %@; firstName = %@; lastName = %@; status = %lu; accessLevel = %lu;}
-[CNContact predicateForContactMatchingEKParticipantWithName:emailAddress:URL:predicateDescription:]
startDateComponents
dueDateComponents
title
notes
lastModifiedDate
creationDate
completionDate
appLinkData
action
uniqueID
calendar
structuredLocationWithoutPrediction
allAlarms
recurrenceRules
priority
EKFrozenReminderReminder.m
frozen alarm is of the wrong class: %@
@"NSString"16@?0@"NSString"8
@"NSDate"8@?0
@"NSNumber"8@?0
REMReminder
Class getREMReminderClass(void)_block_invoke
REMUserActivity
Class getREMUserActivityClass(void)_block_invoke
REMReminderChangeItem
Class getREMReminderChangeItemClass(void)_block_invoke
T@"NSString",C,D,N
startDate
T@"INObject",C,D,N
endDate
locationName
geolocation
T@"CLPlacemark",C,D,N
locationAddress
allDay
T@"NSNumber",C,D,N
code
Tq,N,V_code
Source
Sharee
Alarm
Notification
%@ <%p> {title = %@; allowsModify = %s; color = %@; source = %@; sharees = %@}
EKFeatureSetDidChangeNotification
NCSTravelAlertsManager
ContinuityCapability
s+gaKNe68Gs3PfqKrZhi1w
EKAvailabilityCacheError
%@-%@-processing
%@-%@-callback
accountID
sourceIsInvalid
sourceSupportsAvailabilityRequests
addressesToCachedSpanRanges
ignoredEventIDsToAddressBasedCaches
AvailabilityCacheMiss
AvailabilityCacheHit
B24@?0@"NSString"8@"NSDictionary"16
v16@?0@"NSDictionary"8
v16@?0@"NSError"8
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@8Q16^B24
(3-5)
(6-10)
(11-15)
(16-20)
(21-25)
(26-50)
(51-100)
(101-150)
(151-200)
(201+)
AvailabilityCacheRoundtripTimeInMilliseconds-%@
elapsedTime
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
structuredData
T@"NSData",C,N
localStructuredData
EKOccurrenceCacheSearch.m
calendars != nil
searchTerm != nil
store != nil
callback != nil
v12@?0i8
name
emailAddress
phoneNumber
participantRole
participantStatus
participantType
Name should not be nil.
Either url, phoneNumber or emailAddress should not be nil.
T@"NSString",C,N,V_name
T@"NSString",C,N,V_emailAddress
T@"NSString",C,N,V_phoneNumber
T@"NSURL",&,N,V_url
Tq,N,V_participantRole
Tq,N,V_participantStatus
Tq,N,V_participantType
T@"NSString",R,D,N
sourceType
Tq,D,N
defaultAlarmOffset
externalID
externalModificationTag
disabled
TB,D,N
onlyCreatorCanModify
preferredEventPrivateValue
Ti,D,N
strictestEventPrivateValue
CalendarsExcludedFromNotifications
com.apple.mobilecal
%@{type: %d, rowID: %d, date: %@}
type
Ti,R,N,V_type
notification
T@"EKCalendarNotification",R,N
objectID
T@"EKObjectID",R,N,V_objectID
EKObject.m
iOS doesn't support cross-store copies yet
@24@?0@"EKObject"8@"NSString"16
frozenObject
v16@?0@"EKObject"8
persistentObject
isFrozen
isPartialObject
uniqueIdentifier
semanticIdentifier
canBeConvertedToFullObject
preFrozenRelationshipObjects
T@"NSDictionary",R,N
T@"EKPersistentObject",&,N,V_persistentObject
eventStore
T@"EKEventStore",&,N
changeSet
T@"EKChangeSet",&,N,V_changeSet
_cachedMeltedObjects
T@"NSMutableDictionary",&,N,V__cachedMeltedObjects
additionalFrozenProperties
T@"NSDictionary",&,N,V_additionalFrozenProperties
_cachedValues
T@"NSMutableDictionary",&,N,V__cachedValues
_validationContext
T@"EKObjectValidationContext",&,N,V__validationContext
backingObject
T@"EKPersistentObject",&,N
hasChanges
TB,R,N,GisNew
T@"NSString",C,N
externalFolderID
externalScheduleID
externalRepresentation
owner_id
ownerID
T@"EKObjectID",R,N
T@"EKObjectID",R,N,V_ownerID
CalendarItem
%@ <%p> {frequency = %ld; interval = %ld; firstDayOfWeek = %ld; enddate = %@; count = %lu; specifier = %@}
ConnectionLock
ReplyLock
com.apple.calaccessd
hasEverConnected
TB,N,V_hasEverConnected
xpcConnection
T@"NSXPCConnection",R,&,N,V_xpcConnection
CADOperationProxy
T@"<CADInterface>",R,&,N
CADOperationProxySync
delegate
T@"<EKDaemonConnectionDelegate>",W,V_delegate
initializationOptions
T@"CADDatabaseInitializationOptions",&,N,V_initializationOptions
maxNumberOfOpenConnections
TQ,R,N
v28@?0B8q12@"NSArray"20
com.apple.eventkit.debug.preference.notification.travelEngineThrottlePeriod
com.apple.eventkit.preference.notification.refiringReminderAlarmsEnabled
com.apple.eventkit.preference.notification.selectedCalendarIdentifiers
com.apple.eventkit.preference.notification.ShowDeclinedEvents
com.apple.eventkit.preference.notification.AlertInviteeDeclines
com.apple.mobilecal.preference.notification.selectedCalendarSyncHashesChanged
com.apple.eventkit.preference.notification.deselectedCalendarIdentifiers
TravelEngineThrottlePeriod
refiringReminderAlarmsEnabled
useShortReminderSnoozeInterval
useShortReminderRefireInterval
alwaysSetArrivedAndSettledForReminders
LastConfirmedSplashScreenVersionViewed
privacyPaneBypass
LastDeselectedCalendars
LastDeselectedCalendarSyncHashes
LastDeselectedCalendarSyncIdentifiers
LastViewedCalendars
ShowDeclinedEvents
InviteeDeclineAlerts
travelEngineThrottlePeriod
Td,N
lastConfirmedSplashScreenVersion
TQ,N
bypassSplashScreen
TB,R
showDeclinedEvents
alertInviteeDeclines
deselectedCalendarIdentifiers
deselectedCalendarSyncHashes
deselectedCalendarSyncIdentifiers
selectedCalendarIdentifiers
T@"NSArray",&,N
calendar_id
old_calendar_id
external_id
old_external_id
summary
location_id
start_date
start_tz
end_date
end_tz
all_day
calendarID
T@"EKObjectID",R,N,V_calendarID
oldCalendarID
T@"EKObjectID",R,N,V_oldCalendarID
T@"NSString",R,N,V_externalID
oldExternalID
T@"NSString",R,N,V_oldExternalID
titleChanged
TB,R,N,V_titleChanged
locationChanged
TB,R,N,V_locationChanged
startDateChanged
TB,R,N,V_startDateChanged
startTimezoneChanged
TB,R,N,V_startTimezoneChanged
endDateChanged
TB,R,N,V_endDateChanged
endTimezoneChanged
TB,R,N,V_endTimezoneChanged
notesChanged
TB,R,N,V_notesChanged
allDayChanged
TB,R,N,V_allDayChanged
reminderStore
T@"EKReminderStore",R,W,N,V_reminderStore
Reminders
com.apple.eventkit.EKReminderStore.queue
B24@?0@8@"NSDictionary"16
predicate is nil
predicate is not a reminder predicate created through EKEventStore
com.apple.eventkit.reminders.search
calendarItemIdentifier
T@"NSObject<OS_os_log>",R
remStore
T@"REMStore",R,N,V_remStore
T@"EKEventStore",R,W,V_eventStore
sources
T@"NSArray",R
calendars
REMStore
Class getREMStoreClass(void)_block_invoke
EKReminderStore.m
REMSaveRequest
Class getREMSaveRequestClass(void)_block_invoke
REMAccount
Class getREMAccountClass(void)_block_invoke
REMAlarm
Class getREMAlarmClass(void)_block_invoke
REMRecurrenceRule
Class getREMRecurrenceRuleClass(void)_block_invoke
REMStructuredLocation
Class getREMStructuredLocationClass(void)_block_invoke
NSErrorDomain getREMErrorDomain(void)
REMErrorDomain
TITLE=%@;
ADDRESS=%@;
%f:%f:%f
%f:%f
B24@?0@"CNAutocompleteResult"8@"NSDictionary"16
T@"<EKAutocompleterDelegate>",W,V_delegate
prefix
T@"NSString",C,V_prefix
T@"EKSource",&,V_source
addressesToIgnore
T@"NSSet",&,V_addressesToIgnore
contactResults
T@"NSMutableArray",&,V_contactResults
autocompletionSearchRequest
T@"<CNCancelable>",&,V_autocompletionSearchRequest
autocompleteRunning
TB,V_autocompleteRunning
autocompleteStore
T@"CNAutocompleteStore",&,V_autocompleteStore
directorySearchOperation
T@"EKDirectorySearchOperation",&,V_directorySearchOperation
directorySearchQueue
T@"NSOperationQueue",&,V_directorySearchQueue
directorySearchResults
T@"NSMutableArray",&,V_directorySearchResults
findRooms
TB,N,V_findRooms
findPeople
TB,N,V_findPeople
findSuggestions
TB,N,V_findSuggestions
findResources
TB,N,V_findResources
findGroups
TB,N,V_findGroups
findRecents
TB,N,V_findRecents
useACDirectorySearch
TB,N,V_useACDirectorySearch
excludeLocal
TB,N,V_excludeLocal
CNAutocompleteStore
Class getCNAutocompleteStoreClass(void)_block_invoke
EKAutocompleter.m
void *ContactsAutocompleteLibrary(void)
/System/Library/PrivateFrameworks/ContactsAutocomplete.framework/ContactsAutocomplete
CNAutocompleteFetchRequest
Class getCNAutocompleteFetchRequestClass(void)_block_invoke
q24@?0@8@16
v24@?0@"NSString"8@"EKObject"16
delegates
T@"NSPointerArray",&,V_delegates
timestamp
[%@] opaqueKey: %@, uniqueKey: %@, extractionGroupIdentifier: %@, changedFields: %lu, changesAcknowledged: %d, timestamp: %f
opaqueKey
uniqueKey
extractionGroupIdentifier
changesAcknowledged
changedFields
v16@?0@"NSNotification"8
[%@] Display name: [%@], isEmail: [%@]
participant
T@"EKParticipant",W,N,V_participant
firstName
T@"NSString",C,N,V_firstName
lastName
T@"NSString",C,N,V_lastName
cachedDisplayName
T@"NSString",C,N,V_cachedDisplayName
isEmail
TB,N,V_isEmail
isPhone
TB,N,V_isPhone
CRRecentContactsLibrary
CRAddressKindEmail
CRAddressKindPhoneNumber
CRRecentsDomainCalendar
dueDate
dueDateTimeZone
dueDateAllDay
hasAlarms
hasRecurrenceRules
%@ <%p> {URL = %@; fileName = %@; fileFormat = %@; fileSize = %lu; localRelativePath = %@; UUID = %@;}
remove
modify
statusModifiedDate
itemID
B32@?0@8Q16^B24
EKDiff.m
One of these has to be non-nil
%@.%@
-------------------------
(null)
There is a difference for the multi-valued key: %@
%@: 
* %@
firstObject
T@"EKObject",&,N,V_firstObject
secondObject
T@"EKObject",&,N,V_secondObject
result
Ti,N,V_result
differentIdentityKeys
T@"NSSet",&,N,V_differentIdentityKeys
differentImmutableKeys
T@"NSSet",&,N,V_differentImmutableKeys
differentSingleValueKeys
T@"NSSet",&,N,V_differentSingleValueKeys
differentRelationshipSingleValueKeys
T@"NSSet",&,N,V_differentRelationshipSingleValueKeys
differentRelationshipMultiValueKeys
T@"NSSet",&,N,V_differentRelationshipMultiValueKeys
relationshipMultiValueAdds
T@"NSDictionary",&,N,V_relationshipMultiValueAdds
relationshipMultiValueRemoves
T@"NSDictionary",&,N,V_relationshipMultiValueRemoves
relationshipMultiValueModifies
T@"NSDictionary",&,N,V_relationshipMultiValueModifies
relationshipSingleValueModifies
T@"NSDictionary",&,N,V_relationshipSingleValueModifies
%@%@ <0x%x>
, %@:%@
Please use the appropriate designated initializer for this class.
EKAvailabilitySpan.m
startDate != nil
endDate != nil
'startDate' must not be after 'endDate'
[%@] startDate: [%@] endDate: [%@] type: [%@]
Tq,R,N,V_type
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
Unknown
Busy
Free
NoData
OutOfOffice
Tentative
Unavailable
Error
mapKitHandle
latitude
longitude
radius
address
@"NSData"8@?0
T@"NSString",R
EKFrozenReminderStructuredLocation.m
_float
%@ <%p>
 title = 
%@; 
 location = 
%@; 
 calendar = 
%@; 
 alarms = 
%@; 
 URL = 
%@; 
 lastModified = %@; 
 startTimeZone = 
%@; 
 endTimeZone = 
singleRecurrenceRule
v24@?0@"NSData"8@"NSError"16
Error exporting event to ICS: %@
v20@?0i8@"NSData"12
events
reminders
actionsState
X-APPLE-NO-ACTION
OUT-OF-DATE
DELEGATORS-COPY
DELEGATEES-COPY
v32@?0@"EKAlarm"8Q16^B24
EKCalendarItem.m
Can't snooze an alarm with location but no proximity.
Committed Value class is incorrect!
actions
detachedItems
v16@?0@"EKCalendarItem"8
Original item class must match our class
date
T@"NSString",&,N
attachments
T@"EKCalendar",&,N
calendarItemExternalIdentifier
location
T@"NSURL",C,N
timeZone
T@"NSTimeZone",C,N
hasAttendees
hasNotes
attendees
alarms
T@"NSArray",C,N
simulateLegacyBehaviors
work
callback
workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
timer
T@"NSObject<OS_dispatch_source>",&,N,V_timer
internalTimeout
Td,N,V_internalTimeout
internalCreationBlock
T@?,C,N,V_internalCreationBlock
internalChangedBlock
T@?,C,N,V_internalChangedBlock
ignoreLowLevelDatabaseChangedNotifications
TB,N,V_ignoreLowLevelDatabaseChangedNotifications
internalPurgingAllowed
TB,N,V_internalPurgingAllowed
internalStore
T@"EKEventStore",&,N,V_internalStore
creationBlock
T@?,C,N
changedBlock
purgingAllowed
timeout
B32@?0@"NSString"8@"EKPersistentObject"16@"EKPersistentObject"24
%@ <%p> {title = %@; address = %@; lat = %@; long = %@; abID = %@; radius = %@, routing = %@}
EKFrozenReminderObject.m
You must set skipsPersistentObjectCopy on change sets used by EKFrozenReminderObject.
uncommittedChanges
T@"EKChangeSet",R,N
path
T@"NSArray",C,N,V_path
value
contacts
T@"NSArray",&,N,V_contacts
contactEmailAddresses
T@"NSSet",&,N,V_contactEmailAddresses
contactNameComponents
T@"NSSet",&,N,V_contactNameComponents
contactCompanyNames
T@"NSSet",&,N,V_contactCompanyNames
<%@: %p>(externalID = %@, externalIDTag = %@, source = %@)
T@"EKSource",R,N,V_source
externalIDTag
T@"NSString",R,N,V_externalIDTag
conferenceURLDetectedKey
junk
not junk
cachedJunkStatus
could be junk
locationsWithoutPrediction
whitelist
not whitelist
com.apple.calendar
store.log.travel.engine
store.log.travel.engine.throttle
calendar.source
externalTrackingStatus
uniqueId
invitationStatus
originalItem.objectID.rowID
availabilityRequests
processing
Reset
ConflictFound
SearchProgressed
radar.18233777
B32@?0@"EKInviteeTimeSpan"8Q16^B24
q24@?0@"EKInviteeTimeSpan"8@"EKInviteeTimeSpan"16
v32@?0@"EKAvailabilitySpan"8Q16^B24
v32@?0@"EKInviteeTimeSpan"8Q16^B24
processingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_processingQueue
internalOriginalStartDate
T@"NSDate",&,N,V_internalOriginalStartDate
internalOriginalEndDate
T@"NSDate",&,N,V_internalOriginalEndDate
originalRangeStartDate
T@"NSDate",&,N,V_originalRangeStartDate
internalProposedStarts
T@"NSMutableArray",&,N,V_internalProposedStarts
T@"EKSource",&,N,V_source
ignoredEventID
T@"NSString",&,N,V_ignoredEventID
availabilityRequestsQueue
T@"NSOperationQueue",&,N,V_availabilityRequestsQueue
participantAddressesToParticipants
T@"NSMutableDictionary",&,N,V_participantAddressesToParticipants
organizerAddress
T@"NSString",&,N,V_organizerAddress
availabilityRequestInProgress
TB,N,V_availabilityRequestInProgress
nextAvailabilityRangeStartDate
T@"NSDate",&,N,V_nextAvailabilityRangeStartDate
availabilitySearchDurationMultiplier
Td,N,V_availabilitySearchDurationMultiplier
remainingSearchAttempts
TQ,N,V_remainingSearchAttempts
leftoverSpans
T@"NSMutableArray",&,N,V_leftoverSpans
internalTimesWhenAllAttendeesCanAttend
T@"NSMutableArray",&,N,V_internalTimesWhenAllAttendeesCanAttend
internalTimesWhenSomeAttendeesCanAttend
T@"NSMutableArray",&,N,V_internalTimesWhenSomeAttendeesCanAttend
internalProposedTimes
T@"NSMutableArray",&,N,V_internalProposedTimes
internalOriginalConflictedParticipants
T@"NSMutableArray",&,N,V_internalOriginalConflictedParticipants
internalSearchingForMoreTimesWhenAllAttendeesCanAttend
TB,N,V_internalSearchingForMoreTimesWhenAllAttendeesCanAttend
internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
TB,N,V_internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
stateChanged
T@?,C,N,V_stateChanged
originalStartDate
originalEndDate
originalConflictedParticipants
timesWhenAllAttendeesCanAttend
timesWhenSomeAttendeesCanAttend
proposedTimes
searchingForMoreTimesWhenAllAttendeesCanAttend
searchingForMoreTimesWhenSomeAttendeesCanAttend
noConflictRequired
TB,N,V_noConflictRequired
NSErrorPeerCertificateChainKey
v32@?0@"NSString"8@16^B24
inviteReplyCalendar
T@"EKCalendar",R,N
calendarName
inReplyTo
shareeDisplayName
shareeFirstName
shareeLastName
shareeURL
shareeEmailAddress
shareePhoneNumber
shareeStatus
T@"NSDate",C,N
alerted
CNNameComponentsStringTokenizer
EKParticipant.m
Setting inviter name string not supported on iOS
<%@: %p>(name = %@)
inviterNameString
proposedStartDateStatus
comment
owner
T@"EKCalendarItem",R,N,V_owner
T@"NSURL",R,N
currentUser
TB,R,N,GisCurrentUser
contactPredicate
T@"NSPredicate",R,D,N
EKCalendarSharedCalendarNotification.m
Invalid type for EKCalendarSharedCalendarNotification.
sharingInvitationResponse
TQ,N,V_sharingInvitationResponse
allowedEntityTypes
TQ,N,V_allowedEntityTypes
start
spanDate
T@"NSDate",&,N,V_spanDate
dateType
Tq,V_dateType
spanType
Tq,V_spanType
_cachedSpans
v32@?0@"EKAvailabilityCachedSpan"8Q16^B24
EKAvailabilityCachedSpanRange.m
ERROR: We tried to insert a span with no end date.
q24@?0@"EKAvailabilitySpan"8@"EKAvailabilitySpan"16
%@ <%p> {UUID = %@; displayName = %@; email = %@; phoneNumber = %@; firstName = %@, lastName = %@, status = %ld; role = %ld; type = %ld}
originAppName
kDefaultAlarmSemanticIdentifier
ABSOLUTE=%f;
RELATIVE=%f;
LOCATION=%@;
PROXIMITY=%@;
None
Enter
Leave
VehicleConnect
VehicleDisconnect
Tq,N,V_type
T@"NSString",&,N,V_title
T@"NSString",&,N,V_name
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
T@"NSString",&,N,V_emailAddress
T@"NSString",&,N,V_phoneNumber
T@"NSURL",&,N,V_URL
T@"EKObjectID",&,N,V_objectID
dotColor
T^{CGColor=},N,V_dotColor
hiddenFromNotificationCenter
TB,N,V_hiddenFromNotificationCenter
TB,N,V_alerted
needsAlert
couldBeJunk
TB,N,V_couldBeJunk
event
T@"EKEvent",&,N,V_event
isExecuting
v20@?0@"NSError"8B16
v32@?0@"DAECalendarDirectorySearchResult"8Q16^B24
isFinished
numberOfMatchesExceededLimit
TB,N,V_numberOfMatchesExceededLimit
error
T@"NSError",&,N,V_error
In order to save a new notification, add it to a NotificationCollection, save, and commit the collection instead.
hostURL
[%@] rowID: [%d] date: [%f]
Td,N,V_date
terms
T@"NSSet",&,N,V_terms
findLocations
TB,N,V_findLocations
findUsers
TB,N,V_findUsers
resultLimit
TQ,N,V_resultLimit
v32@?0@"EKAttendee"8Q16^B24
v32@?0@"EKCalendarEventInvitationNotificationAttendee"8Q16^B24
T@"NSString",&,N,V_location
startDateForNextOccurrence
T@"NSDate",&,N,V_startDateForNextOccurrence
participationStatusModifiedDate
T@"NSDate",&,N,V_participationStatusModifiedDate
T@"NSTimeZone",&,N,V_timeZone
participationStatus
Tq,N,V_participationStatus
status
Tq,N,V_status
TB,N,GisAllDay,V_allDay
recurrenceRule
T@"EKRecurrenceRule",&,N,V_recurrenceRule
timeChanged
TB,N,V_timeChanged
dateChanged
TB,N,V_dateChanged
TB,N,V_locationChanged
attendeeReplyChanged
TB,N,V_attendeeReplyChanged
T@"NSArray",&,N,V_attendees
T@"EKCalendarEventInvitationNotificationAttendee",&,N,V_owner
invitedBy
T@"NSString",R,N,V_invitedBy
expandedProposedTimeAttendee
T@"EKCalendarEventInvitationNotificationAttendee",&,N,V_expandedProposedTimeAttendee
expanded
TB,N,V_expanded
T@"NSString",R,N,V_name
T@"NSString",R,N,V_firstName
T@"NSString",R,N,V_lastName
T@"NSString",R,N,V_emailAddress
T@"NSString",R,N,V_phoneNumber
T@"NSURL",R,N,V_URL
statusChanged
TB,R,N,V_statusChanged
commentChanged
TB,R,N,V_commentChanged
proposedStartDateChanged
TB,R,N,V_proposedStartDateChanged
Tq,R,N,V_participantStatus
T@"NSString",R,N,V_comment
proposedStartDate
T@"NSDate",R,N,V_proposedStartDate
proposedStartDateDeclined
TB,R,N,V_proposedStartDateDeclined
isCurrentUser
TB,R,N,V_isCurrentUser
calLocation
EKSerializableStructuredLocation is not implemented in iOS
T@"CalLocation",C,N,V_calLocation
EKICSImportErrorDomain
vcal
icbu
ICSImport
com.apple.EventKit.ICSImporter
B24@?0@"NSDictionary"8^@16
@16@?0@"EKSource"8
Title:(%@) Email:(%@) SourceIdentifier:(%@)
Title:(%@) Email:(%@) UID:(%@)
B16@?0@"ICSUserAddress"8
@"NSString"16@?0@"ICSUserAddress"8
@"NSString"16@?0@"NSURL"8
q16@?0@"EKCalendar"8
asynchronous
TB,N,V_asynchronous
numInvalidEvents
TQ,N,V_numInvalidEvents
T@"EKEventStore",&,N,V_eventStore
importFilePaths
T@"NSArray",R,N,V_importFilePaths
T@"EKCalendar",&,N,V_calendar
options
TQ,N,V_options
allCalendarUIDs
T@"NSArray",&,N,V_allCalendarUIDs
allSourceUIDs
T@"NSArray",&,N,V_allSourceUIDs
iCalFilesToImport
T@"NSMutableDictionary",&,N,V_iCalFilesToImport
vCalFilesToImport
T@"NSMutableArray",&,N,V_vCalFilesToImport
calendarToICalFiles
T@"NSMapTable",&,N,V_calendarToICalFiles
calendarToITIPFiles
T@"NSMapTable",&,N,V_calendarToITIPFiles
calendarToVCalFiles
T@"NSMapTable",&,N,V_calendarToVCalFiles
existingEventIDs
T@"NSMutableSet",&,N,V_existingEventIDs
iTIPFiles
T@"NSMutableDictionary",&,N,V_iTIPFiles
nonITIPFiles
T@"NSMutableDictionary",&,N,V_nonITIPFiles
filesWithReminders
T@"NSMutableArray",&,N,V_filesWithReminders
droppedReminderCount
TQ,N,V_droppedReminderCount
importedItems
T@"NSMutableArray",&,N,V_importedItems
completionCallback
T@?,C,N,V_completionCallback
importError
T@"NSError",&,N,V_importError
async_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_async_queue
selectCalendar
T@?,C,N,V_selectCalendar
importFoundBackupFile
T@?,C,N,V_importFoundBackupFile
importDroppedReminders
T@?,C,N,V_importDroppedReminders
shouldImportContinueGivenDecision
T@?,C,N,V_shouldImportContinueGivenDecision
importSetProgressValue
T@?,C,N,V_importSetProgressValue
importSetProgressAsIndeterminate
T@?,C,N,V_importSetProgressAsIndeterminate
record
ROWID
sequence_number
v32@?0i8B12q16@"NSArray"24
entityType must be implemented by an EKObjectChange inheriting class.
consumed_entity_class
consumed_entity_id
consumed_change_id
changeID
Tq,R,N,V_changeID
sequenceNumber
Tq,R,N,V_sequenceNumber
changedObjectID
T@"EKObjectID",R,N,V_changedObjectID
changeType
Ti,R,N,V_changeType
BirthdayEventsGenerationVersion
BirthdayEventsGenerationLastLocale
BirthdayEventsGenerationLastAttemptTimeResetKey
BirthdayEventsGenerationAttemptsToResetKey
EKBirthdayListener
v16@?0q8
@"EKEventStore"8@?0
Birthdays
v24@?0@"CNContact"8^B16
identifier
v24@?0@"EKEvent"8^B16
Location
%@ <%p> {triggerDate = %@; proximity = %ld; location = %@}
%@ <%p> {triggerInterval = %lf; proximity = %ld; location = %@}
enabled
TB,N,V_enabled
weekday
Tq,N,V_weekday
startTime
T@"NSDate",&,N,V_startTime
endTime
T@"NSDate",&,N,V_endTime
count
firstDayOfTheWeekRaw
specifier
REMRecurrenceEnd
Class getREMRecurrenceEndClass(void)_block_invoke
EKFrozenReminderRecurrenceRule.m
REMRecurrenceDayOfWeek
Class getREMRecurrenceDayOfWeekClass(void)_block_invoke
%Y%m%dT%H%M%SZ
%Y%m%dT%H%M%S
%Y%m%d
UID %@ is of unexpected size.
localUID
T@"NSString",&,V_localUID
recurrenceDate
T@"NSDate",&,V_recurrenceDate
identifierString
T@"NSString",&,N,V_identifierString
B32@?0@8@16^B24
singleValueChanges: %@ 
multiValueAdditions: %@ 
multiValueRemovals: %@ 
is new: %d is deleted: %d is saved: %d is modified: %d
is undeleted: %d
singleValueChanges
T@"NSMutableDictionary",&,N,V_singleValueChanges
multiValueAdditions
T@"NSMutableDictionary",&,N,V_multiValueAdditions
multiValueRemovals
T@"NSMutableDictionary",&,N,V_multiValueRemovals
isNew
TB,N,V_isNew
isModified
TB,N,V_isModified
isSaved
TB,N,V_isSaved
isDeleted
TB,N,V_isDeleted
isUndeleted
TB,N,V_isUndeleted
%@ <%p> {date = %@}
Adding nil Notification to notification collection.
Removing nil Notification from notification collection.
T@"EKSource",R,N
notifications
T@"NSSet",C,N
EKCalendarInviteReplyNotification.m
Invalid type for EKCalendarInviteReplyNotification.
TQ,N,V_status
T@"EKPersistentEvent",D,N
TQ,D,N
T@"NSDate",C,D,N
T@"EKEventStore",R,W,N,V_eventStore
token
TI,R,N,V_token
EKPredicateSearch
Unknown entity type
Didn't recognize entity class %@
v20@?0i8@"NSArray"12
v24@?0@"CADEntityWrapper"8@"NSMutableArray"16
v16@?0@"NSArray"8
EKReminderModifiedNotification
firstAlertDate
/?&:$+,;=@
%@://%@/%@
%@ <%p> {title = %@; dueDate = %@; completionDate = %@; priority = %ld; calendarItemIdentifier = %@; alarms = %@}
@"EKPersistentObject"16@?0@"EKPersistentObject"8
parentID
T@"EKObjectID",&,N,V_parentID
T@"NSDateComponents",C,N,V_startDateComponents
T@"NSDateComponents",C,N,V_dueDateComponents
completed
TB,N,GisCompleted
event_id_tomb
EKNotificationsChangedNotification
EKNotificationCountChangedNotification
EKNotificationCountChangedExternallyNotification
EKNotificationChangedNotificationsKey
com.apple.eventkit.notificationMonitor
v16@?0@"EKTimedEventStorePurger"8
com.apple.eventkit.invitationmonitor
blacklistedNotificationQueue
v24@?0@"EKObjectID"8^B16
v32@?0@"EKCalendarNotificationReference"8Q16^B24
B24@?0@"EKCalendarNotificationReference"8@"NSDictionary"16
pending
no pending
v32@?0i8B12@"NSArray"16d24
logHandle
T@"NSObject<OS_os_log>",R,N
notificationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationQueue
isMonitoringOnlyNotificationCount
TB,R,N,V_isMonitoringOnlyNotificationCount
eventStorePurger
T@"EKTimedEventStorePurger",R,N,V_eventStorePurger
T@"EKEventStore",R,N,V_eventStore
notificationCount
TQ,R,N,V_notificationCount
notificationReferences
T@"NSArray",R,N,V_notificationReferences
principalPath
displayName
preferredAddress
T@"NSString",&,N,V_displayName
T@"NSString",&,N,V_preferredAddress
T@"NSString",C,N,V_principalPath
userInfo
T@"NSDictionary",R
com.apple.eventkit.debug.preference.notification.availabilityFreshnessWindow
com.apple.eventkit.debug.preference.notification.saveGeocodedLocationsInTravelEngine
com.apple.eventkit.debug.preference.notification.overrideTravelAdvisoryHypothesis
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisTransportType
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisConservativeTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisEstimatedTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisAggressiveTravelTime
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisRouteName
com.apple.eventkit.debug.preference.notification.overriddenTravelAdvisoryHypothesisTravelState
com.apple.eventkit.debug.preference.notification.preventMarkingTravelAdvisoryEntriesAsDismissed
com.apple.eventkit.debug.preference.notification.forceDisplayOfNewTravelAdvisoryHypotheses
com.apple.eventkit.debug.preference.notification.performAgendaEntryEqualityChecksInTravelEngine
com.apple.eventkit.debug.preference.notification.verifyIntegrityOfAvailabilityTimeSearchTimelines
com.apple.eventkit.debug.preference.notification.showDepartureDateForTransitTimeToLeave
com.apple.eventkit.debug.preference.notification.shouldBypassTravelEngineThrottle
com.apple.eventkit.debug.preference.notification.syntheticTravelAdvisoriesEnabled
availabilityFreshnessWindow
saveGeocodedLocationsInTravelEngine
overrideTravelAdvisoryHypothesis
overriddenTravelAdvisoryHypothesisTransportType
overriddenTravelAdvisoryHypothesisConservativeTravelTime
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
overriddenTravelAdvisoryHypothesisRouteName
overriddenTravelAdvisoryHypothesisTravelState
preventMarkingTravelAdvisoryEntriesAsDismissed
forceDisplayOfNewTravelAdvisoryHypotheses
performAgendaEntryEqualityChecksInTravelEngine
verifyIntegrityOfAvailabilityTimeSearchTimelines
showDepartureDateForTransitTimeToLeave
shouldBypassTravelEngineThrottle
syntheticTravelAdvisoriesEnabled
Version
Version mismatch. Archiver version: [%@]. Encoded Data Version: [%@].
Unable to unarchive version string.
Data
Unable to unarchive data.
Unable to encode data.
Unable to decode version string.
version
T@"NSString",R,N,V_version
EKErrorDomain
EKCADErrorDomain
The event cannot be edited.
No calendar has been set.
No start date has been set.
No end date has been set.
The start date must be before the end date.
An unexpected error occurred.
The calendar is read only.
That event does not belong to that event store.
Invites cannot be moved to another calendar.
The event is too far in the future.
The event is too long to repeat this often.
The event repeats before the alert occurs.
Another instance of this event occurs on this date.
An invalid span was specified.
A repeating reminder must have a due date.
Calendar does not match parent event
Calendar has no source
That calendar may not be moved to another account.
The privacy level field cannot be changed.
The repeat field cannot be changed.
Alarms cannot be changed.
Attendees cannot be changed.
That calendar can not be changed or deleted.
Locations with geo information are not supported by this account.
Actions are not supported by this account.
Locations for reminders are not supported by this account.
Proximity-based alarms are not supported by this account.
That account does not allow calendars to be added or removed.
That calendar does not allow events to be added.
That calendar does not allow reminders to be added.
That account does not support events.
That account does not support reminders.
You can't move events with attendees between accounts.
Priorities must be between %d and %d.
This is not a valid EKEntityType.
Choose another way to repeat this event or move it to another calendar.
The Suggested Event Calendar cannot be modified.
That calendar does not allow events to start outside of their recurrence patterns.
You can't move events with attachments between accounts.
A source must have a sourceIdentifier
%@ <%p> {UUID = %@; displayName = %@; email = %@; phoneNumber = %@; firstName = %@; lastName = %@; isSelf = %d}
ApproachingDeparture
LeaveNow
RunningLate
startOfLeaveNowPeriodInternal
T@"NSDate",&,N,V_startOfLeaveNowPeriodInternal
startOfRunningLatePeriodInternal
T@"NSDate",&,N,V_startOfRunningLatePeriodInternal
internalActive
TB,N,V_internalActive
internalPeriod
TQ,N,V_internalPeriod
internalPeriodChangedCallback
T@?,C,N,V_internalPeriodChangedCallback
dateProvider
T@"<CalDateProvider>",R,N,V_dateProvider
startOfLeaveNowPeriod
startOfRunningLatePeriod
periodChangedCallback
period
%@ <%p> Date = %@
T@"NSDate",&,N
EventAction
ExceptionDate
SuggestedEventInfo
%@ <%p> 
 {title = %@; 
 calendar = %@; 
 alarms = %@; 
 URL = %@; 
 lastModified = %@}
%@ <%p> {%@; 
 location = %@; 
 startLocation = %@; 
 startDate = %@; 
 endDate = %@; 
 allDay = %u; 
 timeZone = %@; 
 travelTime: %ld; 
 recurrences = %@; 
 attendees = %@}
modifiedProperties
EKChangedCalendar
EKChangedTitle
EKChangedLocation
EKChangedAllDay
EKChangedStartDate
EKChangedEndDate
EKChangedTimeZone
EKChangedEndTimeZone
EKChangedTravelTime
EKChangedRecurrenceRule
EKChangedAvailability
EKChangedPrivacy
EKChangedNotes
EKChangedAttendeeComment
EKChangedURL
EKChangedParticipationStatus
EKChangedAlternateTimeProposal
EKChangedJunkStatus
EKChangedResponseComment
EKChangedPriority
EKChangedSequence
EKChangedAlarmsAdded
EKChangedAlarmsRemoved
EKChangedAlarmsModified
EKChangedAttendeesAdded
EKChangedAttendeesRemoved
EKChangedAttendeesModified
EKChangedShareesAdded
EKChangedShareesRemoved
EKChangedShareesModified
EKChangedAttachmentsAdded
EKChangedAttachmentsRemoved
EKChangedAttachmentsModified
EKChangedCalendarColor
EKChangedCalendarTitle
EKObjectChangeSummarizer.m
Diff summary called on objects of different class
colorString
sharees
startTimeZone
startDateRaw
availability
travelTime
privacyLevel
endDateRaw
endTimeZone
junkStatus
selfParticipantStatus
responseComment
<%@: %p>(transportType = %@, conservativeDepartureDate = %@, conservativeTravelTime = %@, suggestedDepartureDate = %@, estimatedTravelTime = %@, aggressiveDepartureDate = %@, aggressiveTravelTime = %@, routeName = %@, supportsLiveTraffic = %@, currentTrafficDensity = %@, trafficDensityDescription = %@, travelState = %@)
transportType
conservativeDepartureDate
conservativeTravelTime
suggestedDepartureDate
estimatedTravelTime
aggressiveDepartureDate
aggressiveTravelTime
routeName
supportsLiveTraffic
currentTrafficDensity
trafficDensityDescription
travelState
supportsSecureCoding
Ti,R,N,V_transportType
T@"NSDate",R,C,N,V_conservativeDepartureDate
Td,R,N,V_conservativeTravelTime
T@"NSDate",R,C,N,V_suggestedDepartureDate
Td,R,N,V_estimatedTravelTime
T@"NSDate",R,C,N,V_aggressiveDepartureDate
Td,R,N,V_aggressiveTravelTime
T@"NSString",R,C,N,V_routeName
TB,R,N,V_supportsLiveTraffic
TQ,R,N,V_currentTrafficDensity
T@"NSString",R,C,N,V_trafficDensityDescription
Tq,R,N,V_travelState
Td,D,N
AUTOMOBILE
TRANSIT
WALKING
BICYCLE
UNKNOWN_TRANSPORT_TYPE
FERRY
RIDESHARE
(unknown: %i)
NotTraveling
Traveling
TravelingSpecificallyToThisDestination
TravelingInDirectionOfThisDestination
TravelingAwayFromDestination
Arrived
(unknown: %lu)
event_id
T@,W,N,V_value
+[EKPersistentObject relations] not implemented in subclass
Subclass %@ of EKPersistentObject did not implement +relations
EKPersistentObject.m
Trying to set the object ID on an object that has one!
Error checking whether object %@ exists: %@
v16@?0i8B12
Error loading default properties for object %@ from daemon: %@
'%@' is not a relation of '%@'
Trying to add an object as a related object for property %@ on %@, but it's not a relation or not to-many
Trying to remove an object as a related object for property %@ on %@, but it's not a relation or not to-many
Requested set of relation called %@ on a %@, but that doesn't exist.
Setting a to-many relation requires an NSSet
Setting a relation requires an EKPersistentObject
Error loading number %@ from daemon: %@
v20@?0i8@"NSNumber"12
@16@?0@"NSString"8
Error loading date %@ from daemon: %@
v20@?0i8@"NSDate"12
Error loading string %@ from daemon: %@
v20@?0i8@"NSString"12
Error loading data %@ from daemon: %@
Error loading to-one relation %@ from daemon: %@
v20@?0i8@"CADObjectID"12
Error loading to-many relation %@ from daemon: %@
v20@?0i8@"NSSet"12
Values and Keys arrays must have the same length, but keys has %lu elements and values has %lu.
v16@?0@"EKPersistentObject"8
v32@?0@"NSString"8@"EKRelation"16^B24
    %@ = %@
%@ <%p> {loaded = %@; updated = %@}
entityType
Ti,R,N
T@"EKEventStore",R,N
rowID
Tq,R,N,V_frequency
Tq,R,N,V_interval
T@"EKRecurrenceEnd",C,N,V_recurrenceEnd
Tq,R,N,V_firstDayOfTheWeek
T@"NSArray",R,N,V_daysOfTheWeek
T@"NSArray",R,N,V_daysOfTheMonth
T@"NSArray",R,N,V_daysOfTheYear
T@"NSArray",R,N,V_weeksOfTheYear
T@"NSArray",R,N,V_monthsOfTheYear
T@"NSArray",R,N,V_setPositions
(%.4f, %.4f)
TravelingToDestination
TravelingTowardsDestination
Light
Medium
Heavy
ExtremelyHeavy
Unknown status
Not Determined
Restricted
Denied
Authorized Always
Authorized In Use
sharedEventStore
T@"EKEventStore",R,N,V_sharedEventStore
Event
Nil resource change passed.
resourceChanges
EKEventModifiedNotification
EKEventNaturalLanguageSuggestedEventExpirationDate
EKEventSuggestedEventSavedFromSyncKey
You must use [EKEvent eventWithEventStore:] to create an event
Trying to initialize an EKEvent as a copy of an object that is not an EKEvent
Can't create EKEvent without persistent event
EKEventLocationPrediction
%@%@%@
x-apple-calevent
x-apple-calevent://%@/%@?o=%lld
Private Event
birthdayTitle
Invalid pin mode: %d
%ld hours, %ld minutes
%ld minutes
NOT 
Prediction not attempted due to past timeouts
privacyLevelString
cachedTimeValuesCalendar
cachedStartOfDayForStartDate
cachedStartOfDayForEndDate
cachedDaysSpanned
cachedIsMultiDayTimedEvent
%@ <%p>
 %@; 
 location = 
%@; 
 structuredLocation = 
%@; 
 startDate = 
%@; 
 endDate = 
%@; 
 allDay = 
%u; 
 floating = 
%u; 
 recurrence = 
%@; 
 travelTime = 
%@; 
 startLocation = 
<%@ rowid=[%d] UUID=[%@] start-date=[%@]>
endLocation
Modified properties changed: YES. Old modified properties: %u
Modified properties changed: NO
@max.self
v24@?0@"EKCalendarItem"8^B16
suggestionInfo
This Calendar Cannot Repeat Events on Multiple Months in a Year
This Calendar Cannot Repeat Events on Multiple Days in a Month
This Calendar Cannot Repeat Events Every %ld Years
EKEvent.m
I screwed up somewhere in date calculation
Normal
Personal
Private
Confidential
/RID=
calshow:%lf?eventid=%d
%@/RID=%llu
attendees.add
v32@?0@"NSDate"8Q16^B24
sendersEmail
sendersPhoneNumber
occurrenceStartDate
T@"EKCalendarDate",C,N,V_occurrenceStartDate
occurrenceEndDate
T@"EKCalendarDate",C,N,V_occurrenceEndDate
occurrenceIsAllDay
TB,N,V_occurrenceIsAllDay
originalOccurrenceStartDate
T@"EKCalendarDate",C,N,V_originalOccurrenceStartDate
originalOccurrenceEndDate
T@"EKCalendarDate",C,N,V_originalOccurrenceEndDate
originalOccurrenceIsAllDay
T@"NSNumber",C,N,V_originalOccurrenceIsAllDay
requiresDetachDueToSnoozedAlarm
TB,N,V_requiresDetachDueToSnoozedAlarm
clearModifiedFlags
Ti,N,V_clearModifiedFlags
recurrenceIdentifier
T@"EKRecurrenceIdentifier",R,N
eventOccurrenceID
Tq,N
locationIsAConferenceRoom
duration
Td,R,N
startDateIncludingTravel
isStartDateDirty
isEndDateDirty
allowsTravelTimeModifications
allowsAllDayModifications
travelStartLocation
T@"EKStructuredLocation",&,D,N
automaticLocationGeocodingAllowed
travelAdvisoryBehavior
travelAdvisoryBehaviorIsEffectivelyEnabled
eligibleForTravelAdvisories
T@"EKSuggestedEventInfo",&,N
locationWithoutPrediction
preferredLocationWithoutPrediction
T@"EKStructuredLocation",R,N
proposedEndDate
T@"NSDate",&,N,V_proposedEndDate
allowsProposedTimeModifications
allowsResponseCommentModifications
isPhantom
isSignificantlyDetached
isSignificantlyDetachedIgnoringParticipation
hasComplexRecurrence
conferenceURL
T@"NSURL",&,N
externalURL
isEditable
isPrivateEventSharedToMe
launchURL
pendingParticipationStatus
allowsParticipationStatusModifications
currentUserGeneralizedParticipantRole
currentUserInvitedAttendee
TB,R,N,GisCurrentUserInvitedAttendee,V_currentUserInvitedAttendee
allowsAvailabilityModifications
allowsPrivacyLevelModifications
allowsParticipantStatusModifications
supportsParticipationStatusModificationsWithoutNotification
isAlerted
attendeeComment
attendeeStatus
attendeeProposedStartDate
attendeeDeclinedStartDate
initialStartDate
T@"NSDate",R,C,N
initialEndDate
isMaster
isMasterOrDetachedOccurrence
isStatusDirty
isAllDayDirty
startCalendarDateIncludingTravelTime
T@"EKCalendarDate",R,N
durationIncludingTravel
travelRoutingMode
canBeRespondedTo
canDetachSingleOccurrence
hasAttachmentChanges
startCalendarDate
endCalendarDate
locationPredictionState
hasPredictedLocation
firedTTL
responseMustApplyToAll
privacySet
TB,R,N,GisPrivacySet
recurrenceSet
eventIdentifier
TB,N,GisAllDay
structuredLocation
T@"EKStructuredLocation",C,D,N
organizer
T@"EKParticipant",R,D,N
isDetached
occurrenceDate
birthdayContactIdentifier
birthdayPersonID
birthdayPersonUniqueID
T@"NSString",R,N,V_birthdayPersonUniqueID
%@ <%p> {UUID = %@; name = %@; email = %@; phone = %@; isSelf = %d}
ReminderPredicate
_isFinished
_isExecuting
_availabilityCache
_startDate
_endDate
_ignoredEventID
_addresses
_resultsBlock
_requestID
_queue
stateChangedNotificationName
dataProtectionObserver
T@"CDBDataProtectionObserver",&,N,V_dataProtectionObserver
stateChangedCallback
T@?,C,N,V_stateChangedCallback
dataIsAccessible
 <%@>
%@ <%p> {UUID = %@; name = %@; email = %@; phone = %@; status = %ld; role = %ld; type = %ld}
lastModifiedParticipationStatus
rsvpRequested
pendingStatus
calendaritem_owner_id
suffix
T@"NSString",R,C,N,V_suffix
customClientId
T@"NSString",R,C,N,V_customClientId
CADChangeTrackingClientId
T@"CADChangeTrackingClientId",R,N
calendar.calendarIdentifier
T@"NSDate",C,N,V_startDate
T@"NSDate",C,N,V_endDate
T@"NSTimeZone",C,N,V_timeZone
isAllDay
TB,N,V_isAllDay
Td,N,V_travelTime
T@"NSMutableArray",&,N,V_recurrenceRules
T@"NSString",C,N,V_title
T@"NSString",C,N,V_notes
T@"NSString",C,N,V_calendarIdentifier
T@"NSString",C,N,V_location
T@"EKSerializableStructuredLocation",&,N,V_structuredLocation
T@"NSArray",&,N,V_alarms
T@"NSArray",&,N,V_attachments
EventKit
EKEventActionHandler
createEvent
willUpdateEvent
didUpdateEvent
deleteEvent
EEEMMMdjmm
%f#%@
%@#%@
Create event
CLPlacemark
rootObject
T@"EKObject",R,N,V_rootObject
depth
TQ,N,V_depth
reachedMaxDepth
TB,N,V_reachedMaxDepth
B16@?0@"NSSet"8
B16@?0@"<EKFrozenMeltedPair>"8
B16@?0@"NSString"8
@"NSSet"16@?0@"NSSet"8
@16@?0@"NSSet"8
not nil
v24@?0@"EKObject"8^B16
v24@?0@"<EKFrozenMeltedPair>"8^B16
v24@?0@8^B16
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSMutableSet"16^B24
<%@ uniqueIdentifier=[%@]>
v24@?0@"EKPersistentObject"8@"EKFrozenReminderObject"16
@32@?0@"EKPersistentObject"8@"EKObject"16@"NSMutableArray"24
specificIdentifier
EKObject Shared Lock %lu
hasOwnerEmailAddress
Invalid day number
weekNumber
%ld%@
%@ <%p> { %@ }
Tq,R,N,V_dayOfTheWeek
Tq,R,N,V_weekNumber
v32@?0@"EKParticipant"8Q16^B24
rrule_%d_frequency
rrule_%d_interval
rrule_%d_end
alarm_%d_absoluteDate
alarm_%d_relativeOffset
alarm_%d_locationTitle
alarm_%d_proximity
public.calendar-event
CSSearchQuery
CSSearchQueryContext
namedLocation
primaryRecipients
authors
com.apple.iCal
primaryRecipients == "%@*"cdw || authors == "%@*"cdw || recipientNames == "%@*"cdw || recipientEmailAddresses == "%@*"cdw || authorNames == "%@*"cdw || authorEmailAddresses ==  "%@*"cdw || 
contentType == "%@" && (
title == "%@*"cdw || comment == "%@*"cdw || namedLocation == "%@*"cdw || 
title == "%@*"cdw || 
namedLocation == "%@*"cdw || 
comment == "%@*"cdw || 
 || 
&& startDate <= $time.absolute(%f) && endDate >= $time.absolute(%f)
&& endDate > $time.absolute(%f)
&& startDate < $time.absolute(%f)
T@"EKEventStore",W,V_eventStore
Birthday
CalDAV
Local
Subscription
Exchange
Suggestions
Other
CGColor
hasSharees
Invalid entity type passed: %d
Can't directly init a calendar. Use calendarWithEventStore
DEFAULT_TASK_CALENDAR_NAME
default reminders list name
DEFAULT_CALENDAR_NAME
Default calendar name
Siri Suggestions
Name of default reminders calendar
#%02X%02X%02X
#%02x%02x%02x
Encountered illegal value for EKCalendarType
%@ <%p> {title = %@; type = %@; allowsModify = %@; color = %@;}
B16@?0@"EKCalendar"8
LOCAL
OTHER
BIRTHDAYS
;%d;
x-apple-calendar://%@
Error checking whether calendar has events: %@
Error checking whether calendar has reminders: %@
Not implemented
This stub exists for compatabilitty with OSX
B24@?0@"EKAlarm"8@"NSDictionary"16
v24@?0@"EKAlarm"8^B16
EKCalendar.m
v32@?0@"NSString"8@"NSString"16@"NSError"24
TQ,N,V_cachedJunkStatus
T@"EKSource",&,N
allowsContentModifications
subscribed
TB,R,N,GisSubscribed
immutable
TB,R,N,GisImmutable
T^{CGColor=},N
supportedEventAvailabilities
color
T^{CGColor=},R,N
Calendar must be nil or Gregorian
Invalid date components: must have at least a year, a month, and a day
T@"NSTimeZone",R,N
/System/Library/LocationBundles/RemindersAlerts.bundle
EKAlarm.m
date != nil
%@ <%p> {triggerDate = %@}
%@ <%p> {triggerInterval = %lf}
location-reminders
isAbsolute
isSnoozed
defaultAlarm
TB,N,GisDefaultAlarm
T@"EKObject",R,N
calendarOwner
calendarItemOwner
T@"EKCalendarItem",R,N
originalAlarm
T@"EKAlarm",&,N
snoozedAlarms
relativeOffset
absoluteDate
T@"EKStructuredLocation",C,N
proximity
soundName
T@"NSString",C,N,V_soundName
T@"NSURL",C,N,V_url
%@ <%p> {UUID = %@; name = %@; email = %@; status = %lu; accessLevel = %lu;}
invite-accepted
invite-declined
invite-deleted
invite-invalid
invite-noresponse
shareeAccessLevel
.plist
v20@?0i8Q12
v32@?0@"NSString"8@"NSArray"16@"NSError"24
v32@?0@"CalDAVOfficeHour"8Q16^B24
v24@?0@"NSString"8@"NSError"16
MobileMe
Subscribed
%@ <%p> {UUID = %@; type = %@; title = %@; externalID = %@}
host
port
useSSL
ownerAddresses
ownerAddress
preferredOwnerAddress
v24@?0@"NSError"8@"DAAccountExternalIdentificationInfo"16
timeOfLastExternalIdentification
managedConfigurationAccountAccess
v16@?0i8i12
timeOfLastExternalIdentificationCache
T@"NSDate",&,N,V_timeOfLastExternalIdentificationCache
cachedHost
T@"NSString",&,N,V_cachedHost
cachedPort
Tq,N,V_cachedPort
cachedOwnerAddresses
T@"NSSet",&,N,V_cachedOwnerAddresses
lastSyncErrorData
T@"NSData",&,N
delegatedAccountOwnerStoreID
isDelegate
allCalendars
T@"NSSet",R,N
availabilityCache
T@"EKAvailabilityCache",R,N
displayOrderForNewCalendar
TB,N,GisEnabled
isFacebookSource
supportsCalendarCreation
constraints
T@"EKSourceConstraints",R,N
isWritable
supportsFreebusy
supportsEventCalendarCreation
supportsMultipleAlarms
supportsMultipleMonthsInYearlyRecurrence
supportsMultipleDaysInMonthlyRecurrence
supportsYearlyRecurrenceWithArbitraryInterval
supportsURLs
prefersSuggestingNewTimeViaEmail
supportsAttendeeEventForwarding
preferUsingEventOrganizerEmailWhenComposingMail
isEnabledForEvents
remAccountObjectID
T@"REMObjectID",R,N
sourceError
T@"NSError",R,N
syncs
T@"NSNumber",C,N
creatorBundleID
creatorCodeSigningIdentity
wantsCommentPromptWhenDeclining
serverHost
serverPort
serverUsesSSL
wasMigrated
sourceIdentifier
showsNotifications
constraintsDescriptionPath
constraintsName
constraintsDescriptionPathForUnitTesting
supportsAlarmAcknowledgedDate
TB,N,V_isFacebook
usesSelfAttendee
TB,N,V_snoozeAlarmRequiresDetach
personaIdentifier
lastSyncError
lastSyncErrorUserInfo
T@"NSDictionary",R,C,N
lastSyncStartDate
lastSyncEndDate
isSyncing
flags
flags2
T@"NSString",&,N,V_calendarName
TB,N,V_allDay
eventID
T@"NSString",&,N,V_eventID
TI,N,V_changeType
TB,N,V_titleChanged
createCount
T@"NSNumber",&,N,V_createCount
updateCount
T@"NSNumber",&,N,V_updateCount
deleteCount
T@"NSNumber",&,N,V_deleteCount
display_order
colorChanged
TB,R,N,V_colorChanged
orderChanged
TB,R,N,V_orderChanged
rtPredictedLocationOfInterest
T@"RTPredictedLocationOfInterest",R,N,V_rtPredictedLocationOfInterest
customLabel
T@"NSString",R,C,N,V_customLabel
mapItemName
T@"NSString",R,C,N,V_mapItemName
addressCountryCode
T@"NSString",R,C,N,V_addressCountryCode
addressThoroughfare
T@"NSString",R,C,N,V_addressThoroughfare
addressLocality
T@"NSString",R,C,N,V_addressLocality
EKTravelTimeErrorDomain
v24@?0@"CalRoute"8@"NSError"16
MKPlacemark
MKMapItem
MKDirectionsRequest
MKDirections
MKErrorUnknown
MKErrorServerFailure
MKErrorLoadingThrottled
MKErrorPlacemarkNotFound
MKErrorDirectionsNotFound
EKTravelLookupErrorUnknown
v24@?0@"MKETAResponse"8@"NSError"16
v24@?0@"CLPlacemark"8@"NSError"16
CLGeocoder
v24@?0@"NSArray"8@"NSError"16
RTRoutineManager
CLLocation
geoLocation
%4f, %4f
ab://
ab\://
%@ <%p> {title = %@; address = %@; geo = %@; abID = %@; routing = %@; radius = %f;}
geo:%f,%f
contactLabel
isStructured
routing
hasKnownSpatialData
imprecise
TB,N,GisImprecise,V_imprecise
predictedLOI
T@"EKPredictedLocationOfInterest",&,N,V_predictedLOI
prediction
TB,R,N,GisPrediction
derivedFrom
T@"CLLocation",&,N
x-apple-eventkit
Reminder
RecurrenceRule
Attendee
Organizer
ResourceChange
InviteReplyNotification
ResourceChangeNotification
SuggestionNotification
CategoryLink
Participant
temporary
%@:///%@/%@%d
entityName
isTemporary
stringRepresentation
URIRepresentation
dictionaryRepresentation
CADObjectID
T@"CADObjectID",R,N
endDate is nil
occurrenceCount == 0
occurrenceCount
%@ <%p> { UNTIL=%@ } 
%@ <%p> { COUNT=%lu }
T@"NSDate",R,N,V_endDate
TQ,R,N,V_occurrenceCount
Attachment
ClientLocation
StartLocation
EndLocation
<%@ %p> %@
toMany
inversePropertyNames
ownsRelatedObject
inversePropertyIsApplicable
T@?,C,N,V_inversePropertyIsApplicable
file
v20@?0i8@"NSSecurityScopedURLWrapper"12
%@ <%p> {%@; URL:%@; localRelativePath:%@; filename:%@; fileFormat:%@; fileSize:%@; UUID: %@
localRelativePath
localURL
isBinary
fileName
fileFormat
fileSize
T@"NSNumber",R,N
URLForPendingFileCopy
FIRST=%@;
LAST=%@;
B24@?0@"EKCalendar"8@"NSDictionary"16
EKCalendarVisibilityManagerDefaultQ
visibilityChangedNotificationName
visibilityChangedCallback
T@?,R,N,V_visibilityChangedCallback
notificationListener
T@"CalDarwinNotificationListener",R,N,V_notificationListener
active
TB,V_active
visibleCalendars
visibleCalendarsForAllIdentities
invisibleCalendarsForAllIdentities
invisibleCalendars
T@"NSArray",&,N,V_invisibleCalendars
limitedToSource
T@"EKSource",&,N,V_limitedToSource
Method not implemented on iOS.
urlOnDisk
T@"NSURL",&,N,V_urlOnDisk
contentTypeFromServer
T@"NSString",&,N,V_contentTypeFromServer
EKEventStoreChangedNotification
EKEventStoreChangedObjectIDsUserInfoKey
EKEventStoreChangeTypeUserInfoKey
EKEventStoreCalendarDataChangedUserInfoKey
EKEventStoreRemindersDataChangedUserInfoKey
EKEventStoreTimeZoneChangedNotification
EKEventStoreBatchedChangeEventNotification
EKEventStoreCalendarsChangedNotification
EKEventStoreClosedNotification
EKEventStore_DistributedNotification_AutomaticGeocodingAllowedChanged
EKEventStoreIdleChangeTrackingClientWasPurgedNotification
EKEventStoreModifiedObjectIdentifiers
x-apple-reminderkit
REMCDReminder
x-apple-calendar
weakEventStore
unsafeRawPointer
T^v,R,N
com.apple.eventkit.eventstore.calendars
com.apple.eventkit.eventstore.registered
com.apple.eventkit.eventstore.unsaved
com.apple.eventkit.eventstore.dbchanged
com.apple.eventkit.eventstore.constraintsCache
com.apple.eventkit.eventstore.notificationCollectionCache
kCalTimedDefaultAlarmChangedNote
kCalAllDayDefaultAlarmChangedNote
v20@?0B8@"NSError"12
v12@?0C8
v20@?0i8@"NSDictionary"12
v28@?0i8@"NSArray"12@"NSArray"20
v32@?0@"NSNumber"8Q16^B24
B24@?0@"EKSource"8@"NSDictionary"16
EKEventStore.m
Invalid entity type passed
com.apple.calendar.EventKit.logMainThreadWarning
com.apple.reminders
com.apple.Preferences
com.apple.mobilemail
com.apple.AdSheetPhone
com.apple.AdSheetPad
com.apple.datadetectors.DDActionsService
com.apple.reminders.RemindersEditorExtension
com.apple.reminders.RemindersActionExtension
com.apple.NanoCalendar
com.apple
*********** WARNING ***********
A process is fetching data from calaccessd on the main thread. This is a performance bug.
Please file a radar and include the following backtrace.
***********
%@/RID=%lu
%@:%@
Nil URI passed
%@: path is empty or nil
externalIdentifier must be an instance of NSString
externalIdentifier is empty
predicate is not a calendar item predicate created through EKEventStore
v20@?0i8B12B16
-[EKEventStore contactIdentifierForCalendarItem:]_block_invoke
-[EKEventStore addContactIdentifier:forCalendarItem:]_block_invoke
-[EKEventStore removeContactIdentifier:forCalendarItem:]_block_invoke
-[EKEventStore countOfRemindersWithContactIdentifier:]_block_invoke
-[EKEventStore remindersWithContactIdentifier:]_block_invoke
v20@?0@"NSArray"8i16
-[EKEventStore birthdayCalendarEnabled]_block_invoke
-[EKEventStore setBirthdayCalendarEnabled:]_block_invoke
-[EKEventStore suggestedEventCalendar]_block_invoke_2
-[EKEventStore insertSuggestedEventCalendar]_block_invoke_2
-[EKEventStore insertSuggestedEventCalendar]_block_invoke
-[EKEventStore removeSuggestedEventCalendar]_block_invoke_2
-[EKEventStore confirmSuggestedEvent:]
-[EKEventStore acceptSuggestedEvent:]
-[EKEventStore deleteSuggestedEvent:]
SGSuggestionsService
-[EKEventStore naturalLanguageSuggestedEventCalendar]_block_invoke_2
nil notification passed in to [EKEventStore saveNotification:commit:error:]
Nil notification colleciton passed in to [EKEventStore saveNotificationCollection:commit:error:]
Unsupported status for responding to shared calendar invitation. Only acccept and decline are supported
B24@?0@"EKResourceChange"8@"NSDictionary"16
v44@?0i8@"NSArray"12@"NSArray"20@"NSArray"28@"NSDate"36
v28@?0i8Q12@"NSArray"20
Object is not an EKPersistentObject
Unknown entity name %@ for objectID: %@ with entity type: %d
Object is not an EKObject
Can't add deleted or inserted object to update set
Attempt to insert a nil object.
Attempt to insert something that is not a EKPersistentObject.
Attempt to insert an object that belongs to a different event store.
Attempt to delete a nil object.
Attempt to delete something that is not a EKPersistentObject.
v24@?0i8B12@"NSDictionary"16
predicate was not created with EKCalendarStore methods
FetchEventsMatchingPredicate
block is nil
v28@?0@"NSDate"8B16^B20
%@: startDate is nil
%@: endDate is nil
v20@?0i8q12
v44@?0i8B12q16@"NSData"24i32i36i40
Constraints data size is wrong.  Your version of EventKit is incompatible with the running version of calaccessd.
%@.simulated.calendar.apple.com
simulated.calendar.apple.com
reminderStoreContainerTokenProvider
T@?,C
eventStoreChangedDistributedNotificationName
insertedObjects
T@"NSHashTable",&,N,V_insertedObjects
deletedObjects
T@"NSMutableSet",&,N,V_deletedObjects
updatedObjects
T@"NSMutableSet",&,N,V_updatedObjects
objectsPendingCommit
T@"NSMutableSet",&,N,V_objectsPendingCommit
objectsPendingSave
T@"NSMutableSet",&,N,V_objectsPendingSave
needsCommitForRemoteChanges
TB,N,V_needsCommitForRemoteChanges
database
T@"EKDaemonConnection",&,N,V_database
lastDatabaseNotificationTimestamp
Td,N,V_lastDatabaseNotificationTimestamp
TI,N,V_flags
calendarSourcesAndDefaultsQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_calendarSourcesAndDefaultsQueue
registeredQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_registeredQueue
unsavedChangesQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_unsavedChangesQueue
dbChangedQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_dbChangedQueue
constraintsCacheQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_constraintsCacheQueue
notificationCollectionCacheQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_notificationCollectionCacheQueue
T@"EKDataProtectionObserver",&,N,V_dataProtectionObserver
_cachedConstraints
T@"NSMutableDictionary",&,N,V__cachedConstraints
_cachedNotificationCollections
T@"NSMutableDictionary",&,N,V__cachedNotificationCollections
T@"EKReminderStore",R,N,V_reminderStore
reminderSourceIDToEventSourceIDMapping
T@"NSDictionary",&,N,V_reminderSourceIDToEventSourceIDMapping
eventSourceIDToReminderSourceIDMapping
T@"NSDictionary",&,N,V_eventSourceIDToReminderSourceIDMapping
reminderSourceMapLock
T^{os_unfair_lock_s=I},R,N
registeredObjects
T@"NSMutableDictionary",&,N,V_registeredObjects
defaultCalendarForNewEvents
inboxRepliedSectionItems
inboxRepliedSectionHasContent
TB,R,N,V_inboxRepliedSectionHasContent
suggestedEventCalendar
naturalLanguageSuggestedEventCalendar
allowsBirthdayModifications
databasePath
T@"NSString",R,C,N
defaultTimedAlarm
T@"EKAlarm",R,N
defaultAllDayAlarm
unacknowledgedEventCount
notifiableEventCount
isDataProtected
calendarDataContainerProvider
T@"<CalCalendarDataContainerProvider>",R,N,V_calendarDataContainerProvider
birthdayCalendarEnabled
connection
T@"EKDaemonConnection",R
eventNotifications
eventNotificationCount
eventStoreIdentifier
delegateSources
T@"EKCalendar",R,&,N
calendarItem
T@"EKCalendarItem",R,&,N
changedByDisplayName
changedByAddress
T@"NSURL",R,C,N
changedByFirstName
changedByLastName
TI,R,N
deletedTitle
publicStatus
displayNameRaw
T@"NSString",&,D,N
[%@] startDate: [%@] endDate: [%@] duration: [%@ seconds] conflictedParticipants count: [%@]
conflictedParticipants
T@"NSArray",&,N,V_conflictedParticipants
EKFrozenReminderAlarm.m
structured location is an unexpected type: %@
@"EKFrozenReminderStructuredLocation"8@?0
Proximity=%@;Location=%@
Ack=%@;Trigger=%@:%@
Era=%li;
Year=%li;
Month=%li;
Day=%li;
Hour=%li;
Minute=%li;
Second=%li;
FLOAT
TZ=%@]
triggers
T@"EKFrozenReminderStructuredLocation",R
REMAlarmTimeIntervalTrigger
Class getREMAlarmTimeIntervalTriggerClass(void)_block_invoke
REMAlarmDateTrigger
Class getREMAlarmDateTriggerClass(void)_block_invoke
REMAlarmLocationTrigger
Class getREMAlarmLocationTriggerClass(void)_block_invoke
statusRaw
lastModified
remAccount
T@"REMAccount",R,N
[%@] username: [%@], password: [%@]
******
username
T@"NSString",R,N,V_username
password
T@"NSString",R,N,V_password
%@ <%p> {UUID = %@; type = %@; title = %@; externalId = %@}
reminderSource
T@"EKFrozenReminderSource",&,V_reminderSource
Either the relative offset or absolute date must be set.
Td,N,V_relativeOffset
T@"NSDate",C,N,V_absoluteDate
TB,N,V_isAbsolute
,%s%ld%s
%s%ld%s
isDirty
com.apple.eventkit
mailto:
%@%@
EKUIAttendeeUtils_AttendeeHasResponded
com.apple.eventkit.redaction
<EKRedacted>
<%@: %p; Conflicts: %lu Out of total: %lu>
conflictingDates
T@"NSArray",&,V_conflictingDates
conflictingEvents
T@"NSArray",&,V_conflictingEvents
needsActionEvents
T@"NSArray",&,V_needsActionEvents
totalOccurrencesInSeries
TQ,V_totalOccurrencesInSeries
totalConflictsInSeries
TQ,V_totalConflictsInSeries
totalConflictingEvents
TQ,V_totalConflictingEvents
totalNeedsActionEvents
TQ,V_totalNeedsActionEvents
conflictPeriodForSeries
T@"CalDateRange",&,V_conflictPeriodForSeries
span
T@"NSDate",&,N,V_creationDate
T@"EKAvailabilitySpan",&,N,V_span
Availability
UIAvailabilitySearch
T@"NSMutableArray",&,N,V_conflictedParticipants
com.apple.CoreRoutine.LocationOfInterest
GEOMapService
v24@?0@"<GEOMapItem>"8@"NSError"16
Swim Lesson
Poker Night
Book Club
Staff Meeting
v32@?0@"NSString"8@"NSDictionary"16^B24
%@ CONTAINS SELF
T@"EKPersistentSource",&,D,N
colorDisplayOnly
TB,D,N,GisColorDisplayOnly
symbolicColorName
sharingStatus
sharedOwnerName
sharedOwnerURL
T@"NSSet",C,D,N
publishedURL
published
TB,D,N,GisPublished
selfIdentityDisplayName
selfIdentityEmail
selfIdentityPhoneNumber
selfIdentityAddress
selfIdentityFirstName
selfIdentityLastName
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityPhoneNumber
ownerIdentityAddress
ownerIdentityFirstName
ownerIdentityLastName
subcalAccountID
pushKey
Error initializing the data detector.
Unexpected frequency value loaded from database: %d
Unexpected CalDayOfWeek: %d
Unexpected EKWeekday: %d
Couldn't find old alarm matching semantic ID %@; if it existed it will be disconnected from any extant EKObject instances
The given source's 'accountID' is nil.  The availability cache will not be able to give availability data.  Cache: [%@]
[%@] initialized.
Gathering cached availability for address: [%@]
No cached spans found for address: [%@].  Ignored event ID: [%@].  Will send out remote fetch for availability.
Found stale cached spans for address [%@] in range with start date [%@] and end date: [%@].  Will send out remote fetch for availability.
Cache hit.   freshly cached spans found.
This availability cache's source is invalid.  Will not execute the availability request.  Cache: [%@]
This availability cache's source does not support availability requests. Will not execute the availability request.  Source account ID: [%@]. Cache: [%@].
Invalid start and end dates given.  Will not execute the availability request.
No addresses given in the availability request.  Completing quickly.
A client requested availability between start date [%@] and end date [%@].  Ignored event ID: [%@].  Addresses: [%@]
[%lu] local cached spans were found for addresses: [%@].  Ignored event ID: [%@].  Sending these results immediately to the requesting client.
Sending network request for addresses: [%@].  Start date: [%@].  End date: [%@]  Ignored event ID: [%@].  Account ID: [%@]
Availability request with ID [%@] received a response with results: [%@]. Elapsed milliseconds: [%f]
Availability request with ID [%@] completed with error: [%@].  Total elapsed milliseconds: [%f]
Cancelling availability request with request ID: [%@]
No spans were returned for address [%@] and ignored event ID [%@]
Failed to deserialize structured data. Error: %@
Failed to serialize structured data dictionary: %@. Error: %@
Running occurrence cache search for search term = %@
Call to calendar daemon failed: %@
Received batch results from server for search term = %@, results = %{public}@, finished = %{public}@, reply ID = %{public}@
EKCalendarNotificationReference: failed to get persistent object for notification
After generating a notification, it was observed that its backing data was removed from the database.  Clearing the notification.  Object ID: [%@]  Generated notification: [%@]
Attempting a cross-store copy for object of type %@. myEventStore = %p, other = %p
Failed to create committed relationship for relation %@ (%{public}@)
Connection interrupted!
Client tried to open too many connections to calaccessd. Refusing to open another
Error setting initialization options: %@
Will not set a travel lookahead interval of less than 0.  Given value: [%f]
Saving of invisible calendars commencing.
No calendar identifier found.  Will not be able to save all invisible calendars.  Calendar: [%@]
Saving calendar identifier [%@] of invisible calendar
Saving of invisible calendars completed.
No calendar sync hash found.  Will not be able to save all calendar sync hashes.  Calendar: [%@]
Saving sync hash [%@] of invisible calendar with identifier [%@]
No calendar sync identifier found.  Will not be able to save all calendar sync identifiers.  Calendar: [%@]
Saving sync identifier [%@] of invisible calendar with identifier [%@]
Unable to create reminder store. Reminder data will be unavailable.
Error fetching reminder accounts: %@
Source (%@) is an event source without a reminder source; can't get reminder constraints for it.
Tried to call isSourceManaged: on the reminder store for a non-reminder source: %@
Failed to check whether REMAccount (%@) is managed: %@
Error fetching reminder lists: %@
No existing reminder list with identifier %@
Error fetching calendar by identifier: %@
calendar being saved should have an EKFrozenReminderCalendar backing class, but instead has a backing object of type %@
defaultCalendarForNewReminders is nil: %@
No reminders found with external identifier %@
Error fetching reminders by external identifier: %@
Unable to create EKReminder from REMReminder for external identifier %@
No reminder found with identifier %@ (%@)
Error fetching reminder by identifier: %@
Object requiring parent to commit has no parent: %@
Error fetching reminders: %@
Class has no known frozen version: %@
[EKAutocomplete] Search for %@ invoked
[EKAutocomplete] Same search ("%@"), ret %lu results.
[EKAutocomplete] Clear Results
[EKAutocomplete] Cancel search for %@
:: :: CNAutocomplete Update %@ with %@
:: :: CNAutocomplete Failed %@ with error %@
:: :: CNAutocomplete Finished %@
:: :: CNAutocomplete Began network activity for %@
:: :: CNAutocomplete finished network activity for %@
Error archiving contact by email predicate. Error: %@.
Nil rowID passed in to createOwnerIDWithRowID:objectType:
Invalid owner object type. Type: %@
Invalid rowID passed in. rowID: %@
Computing diff between %@ and %@
Objects are of different classes.  Diff finished
Objects have different values.  Diff finished
Objects have different identities.  Diff finished
One or both objects are nil.
Computing single value differences.
Single value differences? [%d]
Computing single value relationship differences.
Single value relationship differences? [%d] - %@
Computing multi value relationship differences.
Multi value relationship differences? [%d] - %@
Computing identity differences.
Identity differences? [%d] - %@
Computing immutable differences.
Immutable differences? [%d] - %@
Validation is failing for %@ because access has not been granted for %{public}@.
Validation is failing for %@ because readonly items can't be removed.
Validation is failing for %@ because it's not deletable by shared calendar sharees.
Attempting to set the same selfAttendee using a different EKAttendee instance. There is no work to be done, but if the passed in instance had changes then they will not be saved when this calendar item is saved.
Changing timeout in [%@] from [%@] to [%@].
Set 'purgingAllowed' from [%@] to [%@] in [%@]
No existing store was found in [%@].  Created event store: [%@].
The purging timeout is 0.  Will not set up an idle timer for [%@].
There is no event store being cached at the moment.  Will not set up an idle timer for [%@].
Purging is disallowed.  Will not set up an idle timer for [%@].
No existing timer found in [%@].  Will create a timer.
Idle timer fired in [%@].
Clearing event store: [%@] in [%@]
Setting the timer's timeout to [%@] seconds and its leeway to [%@] seconds.  The timer will fire around [%@] in [%@]
Uninstalling dispatch timer in [%@]
Adding persistent notification observers for [%@]
Removing persistent notification observers for [%@]
[%@] received notification: [%@]
Ignored low-level [%@] notification in [%@].
Removing transient event store change observer for event store [%@] in [%@]
Firing changed block from [%@]
_applyChangesToSaveRequest:error: called on a class (%{public}@) that doesn't provide an implementation.
This object doesn't know how to update its parent. self=%@, parent=%@
Error saving event for reporting as %@. Error = %@
(cachedJunkStatus) junkStatus was set on the event to %d
(cachedJunkStatus) event was just created event is not junk
(cachedJunkStatus) event is not junk because it was either organized by me or has no attendees
(cachedJunkStatus) my status on the event is accepted or tentative so the event is not junk
(cachedJunkStatus) junk status for the invitation is %@
(couldBeJunk) event could be junk [%@]
(couldBeJunk) event is not junk [%@]
(junkStatusForInvitation) junk reporting is not supported on the server
(junkStatusForInvitation) junk reporting is supported on the server
(junkStatusForInvitation) our contacts reputation check returned that we should %@ the organizer
(junkStatusForInvitation) our eventstore reputation check returned that we should %@ the organizer
Unknown CADFilter subclass: %@
A request to search for more times when all attendees can attend was made.
A request to search for more times when some attendees can attend was made.
Searching reset with organizerAddressForNewlyScheduledEvent [%@] and event [%@]
No event given.  Will not search for alternative times.
The event's source does not support availability requests.  Will not issue search for alternative times.
The event's start date is the same as its end date.  Will not issue search for alternative times.
The event is an all-day.  This is currently not supported.  Will not issue search for alternative times.
Starting original conflict detection - event start date: [%@] event end date: [%@] ignored event ID: [%@] source: [%@]
Extracting attendees for original conflict detection.
Will not consider attendee for conflict detection because it is a room: [%@]
No participant address found for participant: [%@].  Will not search use this participant to search for alternative times.
The event has a dirty date property, so we'll forcibly request availability for this participant: [%@]
Attendee has declined: [%@]
Attendee needs to respond: [%@]
Adding participant with address [%@] to the list of attendees to be included in conflict resolution.  Participant: [%@]
Could not find the organizer's address.  This can sometimes happen if the event is being scheduled for the first time.  Organizer: [%@]
No 'organizerAddressForNewlyScheduledEvent' given.  The organizer for this event is unknown and conflict resolution will likely be incorrect and irrelevant.
Adding organizer with address [%@] to the list of attendees to be included in conflict resolution.  Participant: [%@]
The event's dates have not been dirtied and there are no addresses collected for looking up availability information for the event's original time span.
Detected a conflict.  [%@] attendees have declined.  Will perform conflict resolution by searching for time slots in the future. 
No conflicts detected, but noConflictFound flag set. Will attempt to perform conflict resolution.
No conflicts detected.  Will not attempt to perform conflict resolution.
We need to figure out the availability status of some attendees in order to complete conflict detection.  Attendees: [%@].
self went away.  Returning early.
The availability operation went away.  Returning early.
Error encountered while searching.  Error: [%@]
Could not find participant.  Will not count as busy.  Address: [%@]
This participant is busy during the event's time range: [%@]
This participant is completely free during the event's time range: [%@]
Including declined participants in the list of participants with conflicts.
Conflict detection complete.  Conflicted participants: [%@]
Participants with conflicts found.  Will search for other time slots.  Participants with conflicts: [%@]
No participants with conflicts found.  Will not continue on by searching for other time slots.
Sending off availability request operation for execution: [%@]
A search attempt was requested.
There are no more search attempts remaining.  Will not search.
There is an availability request in progress.  Will not search.
Preparing to search for alternate times in order to proceed with conflict resolution.
The availability search operation went away.  Returning early.
This availability search operation was cancelled: [%@]
Operation resulted in an error.  Re-trying search.  Error: [%@]
Searching for time slots between start date [%@] and end date [%@] with ignored event ID [%@] and addresses [%@]
Resetting search fallback numbers.  Current remaining search attempts: [%@].  Current availability search duration multiplier: [%@]
Resetting of search fallback numbers complete.  New remaining search attempts: [%@].  New availability search duration multiplier: [%@]
No 'state changed' callback found.  Will not send state changed information.  State: [%@]
Sending state change.  State: [%@]
Transitioning to the [%@] state and attempting a search.
Processing results - start date: [%@] end date: [%@] results: [%@]
Found [%@] free times and [%@] non-free times.
Work remains, but there are no more remaining search attempts left.  Search exhausted.
Search has not progressed and no more work remains.  This is an invalid state, as there should always be work to do until we've seen search results or there are no more search attempts left.
There are [%@] remaining search attempts left.  Continuing search.
Halting search.
No leftover spans found for latest date: [%@]
No participant found for participant with address: [%@].  Will not generate time spans for this participant's availability information.
This span's start date is equal to its end date: [%@].  Will not consider this span in alternative time calculations.
Could not find a time span that contains date: [%@]
No replacement spans found.
Validating [%@] spans.
Found span whose start date doesn't match previous span's end date.  Previous lastEndDate: [%@].  Cached span: [%@]
Span's start and end date is the same: [%@]
Span's start date is after its end date: [%@]
Contiguous free spans exist.  Last inspected span: [%@].  This span: [%@]
Time gaps exist in the spans range: [%@]
A zero-duration span exists in the spans range: [%@]
At least one span's start date comes after its end date in the spans range: [%@]
At least two contiguous spans are marked as being free in the spans range: [%@]
Deserialization of trust error [%@]
We were unable to serialize the trust for a certificate error [%@].
Gathering freshly cached spans between [%@] and [%@]
There were no valid non-overlapping results %@
We are trying to insert a span with no end date (%@). current dates: (%@)
Inserting spans [%@].
ERROR: No span given to insert results.
ERROR: No valid span given to insert results.
Clamping date range for spans between [%@] and [%@]
Clamping date range for spans.  Original start date: [%@].  Original end date: [%@].  New start date: [%@].  New end date: [%@].
There is only one span.  Created a new span and set its type to: [%@]
Clamped the spans.  firstTruncatedSpan: [%@].  lastTruncatedSpan: [%@]
No clamping needed.
We completed the import during the file separation phase.
We failed to figure out the different types of files we were trying to import. Aborting import.
Importing iCal files (%@) and vCal files (%@) to calendar %@
Importing files to user-specified calendar with identifier ( %@ )
No destination calendar provided.  Will attempt to choose appropriate calendars.
Event did not exist.  Will attempt to select the correct calendar to import to.
%@ doesn't have a default calendar to put the items into.
Couldn't handle import for all iTIP files.  Bailing.
Couldn't handle import for all non-iTIP files.  Bailing.
We don't know what calendar to import some files to and we don't have a callback for Calendar selection.  Bailing.
No destination calendar provided. We need to ask the user what calendar to import to for %lu files.
User didn't select calendar, instead cancelled, returning. [%@]
User selected calendar: UID( %@ )
User selected calendar %@
Found a calendar archive among multiple files to import. Ignoring the other files.
Found a calendar archive to import but no method for restoring from the backup file.
Attempting to open version 1.0 .ics file.  Will treat it as a vcs file and import.
Couldn't read calendar data from file "%@".  Aborting open.
File %@ has method PUBLISH or NONE.
Not importing file "%@" because it has either zero or more than one ICSEvent
File %@ is an iTIP message.
File %@ has no VCALENDAR.
Importing pre-existing event.  Will stay on current calendar: objectID ( %@ )
Importing a pre-existing event but there were no eligible writeable calendars.
Finding preferred source for event with organizer (%@) and attendees (%@)
Failed to import event that has no organizer but it does have attendees.
Event has no organizer or attendees.
Preferring principal because its primary address is an attendee: %@
Failed to choose a preferred source because more than one principal had an attendee as its primary address: %@
Preferring principal because at least one of its alternate email addresses is an attendee: %@
Failed to choose a preferred source because more than one principal had an attendee as an alternate email address: %@
Chose a preferred source because its primary email address matches the domain of the organizer: %@
Failed to choose a preferred source because more than one principal's primary email address matched the domain of the organizer: %@
Chose a preferred source because it is the only source
Failed to choose a preferred source because we didn't match any auto-import criteria. Either the imported file had an organizer or had no organizer/no attendees.
ICS calendar expected to contain a single item, but instead it contained %lu
Expected an event but got %@
Import of [%@] failed with error [%@]
Error fetching changed object IDs: %@
Unsupported entity type: %d
Invalid entity type: %d
Failed to fetch any event sources despite having access to events. Skipping reminder sources and returning 0 sources
Failed to fetch any reminder sources despite having access to reminders. Skipping event sources and returning 0 sources
Event or reminder source without ID: eventSourceID=%@, reminderSourceID=%@, eventSource=%@, reminderSource=%@
Unexpected nil self in birthday update block
Not updating birthday events -- need reset? [%{BOOL}d] birthdays enabled? [%{BOOL}d]
BirthdayEventsGenerationVersion (%d) does not match current version (%d). Forcing regeneration.
BirthdayEventsGenerationLocale (%@) does not match current (%@). Forcing regeneration.
EKBirthdayListener unable to delete birthday calendar %@, %@
EKBirthdayListener unable to commit birthday calendar deletion %@
Creating Birthday Calendar
EKBirthdayListenerFailed to save calendar to event store with error: %@
EKBirthdayListener inserting birthday for %@ (%@)
EKBirthdayListener unable to save event %@, %@
Resetting All Birthdays in Store
EKBirthdayListener unable to commit to store %@
EKBirthdayListener recieved %ld inserted, %ld updated, %ld deleted contacts
No birthday calendar found when trying to add birthdays
EKBirthdayListener removing birthday for %@ (%@)
EKBirthdayListener removing invalid birthday for %@ (%@), No Contact Name!
EKBirthdayListener removing invalid birthday for %@ (%@), Invalid Contact Identifier!
EKBirthdayListener unable to remove event %@ %@
EKBirthdayListener commiting changes
Unknown REMFrequency: %li
Unknown frequency: %li
Unknown REMWeekday: %li
Unknown Weekday: %li
Object %@ has no unique identifier: %@
Attempted to acknowledge calendar invite reply notification with objectID %{public}@, but it was not found. Silently ignoring this request.
CADEventPredicate
CADNotifiableEventsPredicate
CADEventsForAssistantSearchPredicate
CADNotificationCenterVisibleEventsPredicate
CADUnacknowledgedEventsPredicate
CADUnalertedEventsPredicate
CADRespondedEventsPredicate
CADUpcomingEventsPredicate
EKMasterEventsPredicate
CADTravelEventsPredicate
CADUpNextEventsPredicate
CADContactEventsPredicate
CADEventCreatedFromSuggestionPredicate
EKReminderPredicate
EKScheduledReminderPredicate
CADCalendarItemsWithExternalIdentifierPredicate
CADPropertySearchPredicate
CADEventTimeWindowPredicate
CADNaturalLanguageSuggestedEventsSearchPredicate
Unexpected predicate class: %@
Unknown Predicate Search
predicateClass=%@; predicateFormat=%@
EKPredicateSearch
error=%i; foundItems=%lu
Error (%d) in reply block for CADDatabaseFetchCalendarItemsWithPredicate attempt %d/%d
All retries exhausted for CADDatabaseFetchCalendarItemsWithPredicate
%@: failed to register result object with objectID: %@
Monitor starting up.
Monitor shutting down.
Ignoring expiration timer because the notification monitor is not running.
Data protection is on. Unable to check for updates.
Sync running, but we've been explicitly told to ignore that and refresh anyway.
Sync running. Waiting for it to finish before checking for updates.
Notification monitor wants to reload notification count. Will fetch notification count from the event store as a result
Set notification count to %{public}@.
Notification monitor wants to reload notifications. Will fetch notification references from the event store as a result.
Set notification references to %@.
Current notification count: %{public}@. Last event notification count: %{public}@.
Is initial check: %{public}@.
Count changed to %{public}@ events, Notifying.
Application badges are not supported on this platform. Will not notify.
Posting notification count changed notification.
No expiring notifications. Not setting expiration timer.
Received multiple expiration dates in the past. Will not set expiration timer. Most recent expiration date received was %{public}@
Next expiration fire time will be %{public}@.
Database changed.
Notification count changed externally.
Alert pref changed.
Expiration timer fired.
Fetching event notifications from event store: %@.
Fetched event notifications from event store: %@.
Faulted in notification: %@.
Sync timer fired.
Sync started. Suppressing notification monitor checks while it runs.
Sync done, %@ changes.
Will not set an availability freshness window of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis conservative travel time of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis estimated travel time of less than 0.  Given value: [%f]
Will not set an overridden travel advisory hypothesis aggressive travel time of less than 0.  Given value: [%f]
Already active.  Will not activate [%@]
Already inactive.  Will not deactivate [%@]
nil 'hypothesis' received in [%@]
Updating [%@] based on new hypothesis. now: [%@] startOfLeaveNowPeriod: [%@] startOfRunningLatePeriod: [%@]
Refreshing [%@]
Period refreshed from [%@] to [%@] in [%@]
Calculated next refresh date of [%@] in [%@]
[%@] is before now.  Will not set up a timer to refresh [%@]
Timer fired in [%@].
Pushed properties to push again: %{public}@ for %@
+alternateUniverseClass called on a class that does not implement it (%{public}@)
Error pushing dirty properties for %{public}@ to daemon: %{public}@
Failed to take value for related object with key %@
Could not convert dictionary into EKObjectID. entityType = %@, rowID = %@
nil 'string' given.  Will not find a corresponding travel state.
Unknown travel state given: [%@].  Will not find a corresponding travel state.
RIDESHARE is unsupported in geoTransportTypeAsString. Returning nil.
nil 'string' given.  Will not find a corresponding transport type.
Unknown transport type given: [%@].  Will not find a corresponding transport type.
nil 'string' given.  Will not find a corresponding traffic density.
Unknown traffic density given: [%@].  Will not find a corresponding traffic density.
Could not archive last sync user info, error = %@
Could not unarchive last sync user info, error = %@
Tried to set proposed start date on invalid event: %@
Beginning location prediction for event: %@
Failed to predict a structured location for event: %@ : %@
Returning location prediction [%@] for event: %@
Setting predicted location title to %@ for the event %@
LocationPrediction: this is %@the main thread. Using timeout %f
LocationPrediction: Reset timeout
LocationPrediction: Updating timeout from %f to %f
LocationPrediction: Not attempting prediction due to past timeouts
Calling _hasRecurrenceRuleChangeRequiringSpanAll on an event that has or had multiple recurrence rules is not supported. Results may be unpredictable. Current count = %d, previous = %d
Updating modified properties for event: %{public}@.
Updating modified properties for detached items: %@.
Updated modified properties: %u. %{public}@. Clear modified flags: %lu. Event: %{public}@
Event %{public}@ is not significantly detached because it is not detached
Event %{public}@ is significantly detached because its master is a phantom
Event %{public}@ is significantly detached because its start date differs
Event %{public}@ is significantly detached because its duration differs
Event %{public}@ is significantly detached because its location differs
Event %{public}@ is significantly detached because its title differs
Event %{public}@ is significantly detached because its status differs
Event %{public}@ is significantly detached because it is externally organized and its participation status differs
Event %{public}@ is significantly detached because its organizer differs
-[EKEvent updateEventToEvent:] is about to save itself [%@] with EKSuggestedEventInfo [%@]
-[EKEvent updateEventToEvent:] failed to save with error: %@
-[EKEvent updateEventToEvent:] saved itself correctly [%@]
-[EKEvent updateEventToEvent:] was given a nil event and will CANCEL itself [%@] with EKSuggestedEventInfo [%@]
-[EKEvent updateEventToEvent:] CANCEL finished correctly [%@], now attempting to save
-[EKEvent updateEventToEvent:] CANCEL failed with error: %@
-[EKEvent updateEventToEvent:] was called on an event without a EKSuggestedEventInfo: %@
Operation was cancelled.  Will not return results.  Operation: [%@]
No results block.  Will not pass along results [%@] for operation: [%@]
Finishing operation with error: [%@].  Operation: [%@]
Data protection state changed.  New 'dataIsAccessible' state: [%@].
Unexpected CalAttendeeStatus: %d
Unexpected EKParticipantStatus: %d
Error creating alarm: [%@]
Error creating attendee: [%@]
Error creating recurrence rule: [%@]
Deleting previous interactions on calendar %@
Deleting previous interactions on event %@
Donated interaction for action %@ on event %@
Reached maximum depth while validating root object %{public}@
Object of type %{public}@ (uniqueIdentifier = %{public}@) failed validation while validating relation %{public}@ with error [%@].
Property %@ was unavailable on backingObject %@. %@
Unable to set single changed value %@. Property %@ was unavailable on backingObject %@. %@
Unable to add multi changed object values %@. Property %@ was unavailable on backingObject %@. %@
Unable to remove multi changed object values %@. Property %@ was unavailable on backingObject %@. %@
Failed to get melted object for frozen object related by key %@. Event store is %@
Missing corresponding added object with semantic identifier %@ for relation key %{public}@.
All EKObjects need to have a unique identifier but %@ does not. %@
Couldn't find inverse changeset for %@ from %@
Unexpected object type %{public}@ in change set for change to single value key %{public}@
Unexpected object type %{public}@ in change set for multi value add for key %{public}@
Unexpected object type %{public}@ in change set for multi value delete for key %{public}@
Got a nil unique identifier for object of type %{public}@ for relation key %{public}@ on object of type %{public}@. Backing object of bad object = %@
Validating deletion on an EKCalendar that allows both events and reminders. This may not work as expected: %@
Can't merge %@ with %@ because they are the same calendar.
Can't merge %@ with %@ because they are in different sources.
Can't merge %@ with %@ because %@ doesn't allow content modifications
Can't merge %@ with %@ because %@ is a shared calendar
Can't merge %@ with %@ because %@ is a reminder list
Can't merge %@ with %@ because this account doesn't support sharing scheduling and %@ is a shared calendar and %@ isn't.
Can't merge %@ with %@ because %@ isn't deletable
Unable to export calendar data: %@
Error trying to report calendar invite as junk. Error: %@
Unexpected CalShareeStatus: %d
Unexpected EKShareeStatus: %d
Unexpected CalShareeAccessLevel: %d
Unexpected EKShareeAccessLevel: %d
Unexpected EKPrivacyLevel: %d
Unexpected CalEventPrivacyLevel: %d
Attempting to set a path (%{public}@) with -[EKSource setConstraintsName:]. Only the name should be supplied without an extension.
Attempting to set a file name with .plist extension (%{public}@) with -[EKSource setConstraintsName:]. Only the name should be supplied without an extension.
Attempting to set an unrecognized constraints name (%{public}@) with -[EKSource setConstraintsName:]. The given name should be a valid .plist resource in CalendarFoundation.
Ignoring attempt to set allowsTasks to %d on source %{public}@. Forcing to NO
Source has more than one calendar with the same external Id: %@
Error: externalIdentificationForAccountID: %{public}@, error: %@
Received request to find travel time from %@ to %@ by %@ arriving on date %@
Calculating travel time from %@ to %@ by %@ on date %@
Didn't find route or error for routeType %@
Found no travel times, only errors.  Trying again with start as current location
Found no travel times, only errors.  Bailing.
Finished finding travel times with results %@
Can't use current location for travel time estimation because Calendar is not authorized for precise location access.
Getting directions %@ with request %@
Travel time lookup failed with error code %@: %@
Found travel time in seconds %lul
Updating start location with current location information
Updated location to %@
Failed to get placemark with error %@
Making sure that %@ has coordinates
%@ already has coordinates
%@ is for current location.  Let MapKit handle
%@ doesn't have coordinates
%@ has no address
%@ has an address.  Looking up coordinates
Found coordinates for address. Updated location to %@
Couldn't find coordinates for address for %@
Couldn't find coordinates for address for %@ and failed with error %@
Wrong scheme for EKObjectID URL; got %@, expected %@; will return nil for objectIDWithURL:
EKObjectID URL has no path
URL with unrecognized ID type %c
EKObjectID URL has no entity name
Unknown entity name %@ with URI %@
Unable to write temporary file
Unable to read file at %@: error = %@
Could not get security scoped local URL wrapper for attachment, error = %{public}@, attachment ID = %{public}@
Underlying calendar visibility preferences changed.  Notifying client of [%@]
No calendar identifier found.  Will not be able to find all visible calendars.  Calendar: [%@]
No calendar identifier found.  Will not be able get all deselected calendar identifiers.  Calendar: [%@]
[%@] initialized in process: [%@]
Data is protected.  Will not say that protected data became available.
Data is not protected.  Saying that protected data became available.
Initialized event store with access to events only, initialization options include allowing events only = %{public}@, current process disallows reminders by default = %{public}@
Error from daemon when saving pending database upon dealloc: %@
Error closing the database: %@
Error getting changes sequence number from daemon: %@
Error getting changes since sequence number from daemon: %@
No completion block given.  Will not validate object IDs: [%@]
No object IDs given.  Will not validate object IDs: [%@]
Error validating object IDs from daemon: %@
Error getting changed object IDs since timestamp %f from daemon: %@
EventKit received changed object ID with rowid 0 of entity type %li.
Error getting UUID: %@
Error in call to _saveWithoutNotify: %@
Attempted to cache a source before _sources was initialized. Ignoring.
Error getting sources: %@
Invalid source type passed to sourcesEnabledForEntityType: %@
Error getting deletable sources: %@
Failed to get scubscribed calendars source: %@
Error getting granted delegates list: %@
Error updating granted delegate: %@
Error checking whether source (%{public}@, rowID = %d) is managed: %@
Cannot check whether source (%{public}@) is managed because we don't have access to the entity type it supports
Error clearing calendar %@ from notification center: %@
Attempted to cache a calendar before _calendars was initialized. Ignoring.
Error getting all calendars: %@
Error getting deletable calendars: %@
Error getting event with identifier %@: %@
Malformed event URI (%@) passed to _eventWithURI. Expected scheme: %@
Error getting calendar item with URI %@: %@
Error checking for existence of event in eventForUID: %@
Error getting event with uniqueId %@: %@
Error getting calendar item with UUID %@: %@
Error getting all events with uniqueId %@: %@
Error setting invitation status for event: %@
Error importing ICS data into calendars %@: %@
Error getting next assignable color: %@
Error getting default local calendar: %@
Non-delegate sources do not have their own default calendar.  Pass nil to get the default across all non-delegate sources
Error getting default calendar for new events: %@
You cannot set a default calendar on a non-delegate source.  Pass nil to set the default across all non-delegate sources
A delegate source's default calendar must be one of its own calendars.
Can't save reminder either because you have no access or you're trying to save using the legacy store, which is no longer supported
Malformed event URI (%@) passed to _reminderWithURI. Expected scheme: %@
Malformed event URI passed to _reminderWithURI: %@
%ld events were found for predicate: %@
Error fetching properties %@ for reminders: %@
Error getting closest occurrence date for event with row ID %i: %@
Error asking daemon if events have occurrences after date: %@
Malformed calendar URI passed to calendarWithExternalURI: %@
%s: Could not fetch contact identifiers with error %@
%s: Could not add contact with error %@
%s: Could not remove contact with error %@
Error asking daemon whether OC occurrences are being generated: %@
Error getting occurrence cache occurrences for calendars %@ from daemon: %@
Error getting occurrence cache counts for calendars %@ from daemon: %@
Error getting scheduled task cache days and task counts from daemon: %@
Sending request to rebuild the occurrence cache.
The occurrence cache was rebuilt successfully.
The occurrence cache was not rebuilt successfully.  Error: [%@]
%s: Failed find out if birthday calendars are enabled with error %@
%s: Unable to set birthday calendars enabled with error %@
%s: Failed to get the Found in Mail calendar with error %@
%s: Could not insert the Found in Mail calendar because it already exists.
%s: Could not insert the Found in Mail calendar with error %@
%s: Could not remove the Found in Mail calendar with error %@
%s not available on this platform
Error determining if the suggested event calendar is modifiable: %@
%s: Failed to get the Natural Language Suggestions calendar with error %@
Error getting unacknowledged event count from daemon: %@
Error getting notifiable event count from daemon: %@
Error getting shared calendar invitations for entity types %i from daemon: %@
Failed to respond to shared calendar invitation with calendar ID %{public}@, account ID %{public}@: %@
Error saving event: %@
Error getting resource changes: %@
Error marking resource change alerted: %@
EKEventStore: Can't get event notification information. Error: [%@]
EKEventStore: Can't get event notification count. Error: [%@]
Error getting replied event invitation information: %@
Error refreshing source: %@
Unknown entity type: %d for object with rowid: %d
No object ID provided.  Will not find out if the object exists.
Error encountered while checking for existence of object with ID: [%@]  Error: [%@]
Error rolling back event store: %@
Attempting to commit changes in event store: [%@].
Client not allowed to modify the calendar database.  Will not commit.
No changes detected.  Calling commit successful.
Requesting insertion of object with temporary obejct IDs: [%@]
Pushing dirty properties was not successful.  Will not complete commit.  Object: [%@].  Error: [%@]
Requesting deletion of objects with IDs: [%@]
Error committing event store: [%@]
Enumeration attempt for events that were fetched is complete.  Predicate: [%@]
Invalid fetchIdentifier given to cancelFetchRequest. Type: %{public}@
Error fetching alarm with UUID.  UUID: [%@].  Error: [%@]
Error getting alarm occurrences in range: %@
Error getting location-based alarms in range: %@
Error getting vehicle trigger alarms in range: %@
%@: Error building fetch predicate for 'Time to Leave' events. Start date is nil.
%@: Error building fetch predicate for 'Time to Leave' events. End date is nil.
%@: Error building fetch predicate for 'Up Next' events. Start date is nil.
%@: Error building fetch predicate for 'Up Next' events. End date is nil.
Error fetching location authorization status for TTL: %@
Error registering for detailed change tracking: %@
Error unregistering for detailed change tracking: %@
Error fetching changed object IDs since token %lu: %@
Change data was the wrong size to hold the changes we received. Told of %i inserts, %i updates, and %i deletes, but change data was only %lu bytes long.
Error marking changed object IDs as consumed: %@
Somebody called clearSuperfluousChanges. This call is no longer needed and does nothing.
Cannot get source constraints for source %{public}@ because we don't have access to the entity type it supports
Error getting constraints for source: %@
Constraints data size is wrong.  Your version of EventKit is incompatible with the running version of calaccessd.
Error getting notificationCollection for source: %@
NotificationCollectionID requested when it has not yet been created. SourceID: %@
Error checking whether to whitelist email address: %@
Error checking whether to whitelist phone number: %@
Error getting storage usage: %@
Posting synthetic route hypothesis for event external url = %{public}@, route hypothesis = %@
Could not post snythetic route hypothesis for event with external url = %{public}@, error = %d, route hypothesis = %@
Alarm has multiple triggers with the same type; an arbitrary one will be used.
Alarm has no usable triggers (%lu passed in)
Alarm has an unknown trigger type: %{public}@
Frozen reminder alarm being committed has a location alarm without a location alarm trigger. EKFrozenReminderAlarm=%@; _locationAlarm=%@, _locationAlarm.trigger=%@
Alarm to be saved doesn't have a parent reminder: %@
Couldn't fetch reminder to be saved: %@
Unknown alarm trigger type %@ on alarm %@ during cloning. Alarms might not be correctly matched.
No 'address' given.  Will not create an adjusted address.
'nil' participant given to function: [%s].  Will not compute needs response state.
Migration returned error code %d
Skipping looking up predicted location because process is not entitled.
Failed to get map item from GEOMapService. error code = %ld, domain = %{public}@, error = %@
Got user interaction for mocked location of interest (%{public}@). Interaction type = %d
error reverse geocoding: %@
no results from reverse geocode for %@
reverse geocode timeout for %@
PPPPPP
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/ContactsAutocomplete.framework/ContactsAutocomplete
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
softlink:r:path:/System/Library/PrivateFrameworks/ReminderKit.framework/ReminderKit
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
EKConferenceURLDetector
EKDirectorySearchResultSet
EKRecurrenceRule
NSCopying
EKSourceConstraints
EKFrozenReminderCalendar
EKPersistentSharee
Shared
EKFrozenReminderReminder
EKReminderKitSaveAdditions
EKCreateEventIntent
EKCreateEventIntentResponse
EKPersistentCalendar
EKFeatureSet
EKAvailabilityCache
EKPredicateEvaluating
EKPredicateEvaluator
CADPredicateValidator
NSObject
EKOccurrenceCacheSearch
EKCancellableRemoteOperation
EKSerializableParticipant
UnitTesting
EKPersistentNotification
EKCalendarNotificationReference
EKObject
EKFrozenMeltedPair
EKProtocolMutableObject
EKProtocolObject
EKRecurrenceGenerator
EKEventAction
EKAttendeeChange
EKOwnerIDProviding
EKPersistentRecurrenceRule
CADInterface
CADAccessInterface
CADDatabaseInterface
CADObjectInterface
CADSourceInterface
CADCalendarInterface
CADCalendarItemInterface
CADEventInterface
CADReminderInterface
CADAlarmEngineInterface
CADNotificationMonitorInterface
CADSpotlightInterface
CADInternalInterface
CADTestingInterface
CADMigrationInterface
CADSyncInterface
CADCalendarToolInterface
CADNotificationCountInterface
CADDatabaseStorageManagementInterface
EKDaemonConnection
CADClientInterface
EKPreferences
EKCalendarItemChange
EKNotificationChange
EKReminderFetchRequestToken
EKFetchRequestToken
EKReminderStore
EKUpdatedReminderBackingObjectProvider
EKStructuredLocationSemanticIdentifierGenerator
EKAutocompleterDelegate
EKAutocompleter
CNAutocompleteFetchDelegate
EKChangeListener
EKSuggestedEventInfo
EKParticipantForSorting
EKReminderChange
EKShareeChange
EKRecents
EKDirectoryResource
EKObjectChangeOwnerIDHelper
EKPersistentAttachment
EKDiff
EKObjectSummaryHelpers
EKAvailabilitySpan
CalDateRangeProtocol
EKFrozenReminderStructuredLocation
EKCalendarItem
EKOccurrenceCacheLocationSearch
EKCompatibility
EKTimedEventStorePurger
EKDirectoryLocation
EKPersistentLocation
EKFrozenReminderObject
EKParticipantToContactMatcher
EKNotificationCollectionOptions
EKNullFetchRequestToken
EKEvent_Shared
EKJunkInvitationProtocol_Shared
EKInviteeAlternativeTimeSearcher
EKAdditions
EKInviteReplyNotification
EKAttachmentChange
EKParticipant
EKParticipantSemanticIdentifierGeneratorDelegate
EKIdentityProtocol
EKCalendarSharedCalendarNotification
EKAvailabilitySpanDate
EKAvailabilityCachedSpanRange
EKPersistentAttendee
EKCalendarSuggestionNotification
EKDirectoryPerson
EKREMCompletionStateReminderPredicate
EKAlarmSemanticIdentifierGenerator
EKCalendarNotification
EKDirectorySearchOperation
EKNotification
EKEventOccurrenceInfo
EKDirectorySearchQuery
EKCalendarEventInvitationNotification
EKCalendarEventInvitationNotificationAttendee
EKSerializableStructuredLocation
EKICSImporter
EKObjectChange
Reminders
EKBirthdayListener
CalContactsProviderDelegate
EKPersistentAlarm
EKOfficeHour
EKEphemeralCacheEventStoreProvider
EKEventStoreProvider
EKPersistentResourceChange
EKFrozenReminderRecurrenceRule
EKRecurrenceIdentifier
EKChangeSet
EKPersistentExceptionDate
EKNotificationCollection
EKCalendarInviteReplyNotification
EKEventFetchRequestToken
EKDefaultPropertiesLoading
EKPredicateSearch
EKResourceChangeNotificationChange
EKReminder
EKRecurrenceChange
_EKNotificationMonitor
EKDirectoryRecord
EKDebugPreferences
EKSecureKeyedArchiverSerializer
EKSerializer
EventKit
EKPersistentOrganizer
EKOrganizerChange
EKPersistentInviteReplyNotification
EKTravelAdvisoryTimelinessAuthority
CalActivatable
EKExceptionDate
EKPersistentEvent
EKObjectChangeSummarizer
EKTravelEngineHypothesis
NSMutableCopying
NSSecureCoding
NSCoding
EKMutableTravelEngineHypothesis
EKEventActionChange
EKWeakReference
EKPersistentObject
EKParticipantChange
EKSerializableRecurrenceRule
EKTravelEngineUtilities
EKSharedEventStoreProvider
EKPersistentEventAction
EKAvailabilityUtilities
EKSyncStatusUtils
EKResourceChangeNotification
EKEvent
EKJunkInvitationProtocol_Private
EKOrganizer
EKREMReminderPredicate
EKRequestAvailabilityOperation
EKDataProtectionObserver
EKAttendee
EKAlarmChange
EKChangeTrackingClientId
EKSerializableEvent
EKEventActionHandler
EKObjectValidationContext
EKPersistentSuggestedEventInfo
EKRecurrenceDayOfWeek
EKDirectoryGroup
EKDuetSignalEventSerializer
EKSpotlightSearch
UnitTest
EKCalendar
CGColorWrapper
EKAlarm
EKSharee
EKSource
EKCalendarResourceChangeNotification
EKPersistentParticipant
EKCalendarChange
EKPredictedLocationOfInterest
EKTravelLookupManager
EKStructuredLocation
EKObjectID
EKRecurrenceEnd
EKPersistentCalendarItem
EKRelation
EKSerializableObject
EKAttachment
EKEventChange
EKParticipantSemanticIdentifierGenerator
EKCalendarVisibilityManager
EKSerializableAttachment
EKEventStoreWeakWrapper
EKEventStore
EKDaemonConnectionDelegate
EKResourceChange
EKSourceChange
EKInviteeAlternativeTime
EKContactChange
EKFrozenReminderAlarm
EKFrozenReminderSource
EKReadWriteLock
EKCredentials
EKPersistentResourceChangeNotification
EKPersistentSource
EKSerializableAlarm
EKRecurrenceHelper
EKConflictDetails
EKInviteReplyNotificationChange
EKAvailabilityCachedSpan
CalendarAdditions
EKInviteeTimeSpan
EKStructuredLocationPrediction
countByEnumeratingWithState:objects:count:
_linksInSource:
resultType
_isPreferredURL:
_isValidTelURL:
phoneNumber
phoneURL
_dataDetector
length
matchesInString:options:range:
host
_preferredHostSuffixes
hasSuffix:
cal_hasSchemeTel
resourceSpecifier
stringByReplacingOccurrencesOfString:withString:
initWithTypes:error:
logHandle
UTF8String
conferenceURLFromSources:
locations
setLocations:
groups
setGroups:
resources
setResources:
people
setPeople:
.cxx_destruct
_locations
_groups
_resources
_people
arrayWithObjects:count:
initRecurrenceWithFrequency:interval:end:
init
setUUID:
setFrequency:
setInterval:
setFirstDayOfTheWeek:
raise:format:
setRecurrenceEnd:
setDaysOfTheWeek:
setDaysOfTheMonth:
setSetPositions:
setMonthsOfTheYear:
setDaysOfTheYear:
setWeeksOfTheYear:
initRecurrenceWithFrequency:interval:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
singleChangedValueForKey:
setSingleChangedValue:forKey:
stringValueAsDateOnly:isFloating:
stringWithFormat:
isProgramSDKAtLeast:
copyWithZone:
frequency
interval
recurrenceEnd
specifier
setSpecifier:
firstDayOfTheWeekRaw
setFirstDayOfTheWeekRaw:
setDay:
setMonth:
setYear:
exceptionWithName:reason:userInfo:
integerValue
numberWithUnsignedInt:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
numberWithUnsignedInteger:
unsignedIntegerValue
endDate
count
initWithEndDate:
initWithOccurrenceCount:
cachedValueForKey:populateBlock:
isEqual:
copy
setCachedValue:forKey:
setEndDate:
setCount:
usesEndDate
occurrenceCount
intValue
_ekWeekdayFromCalDayOfWeek:
_calDayOfWeekFromEKWeekday:
initWithSpecifier:
_recurrenceHelper
daysOfTheWeek
_updateSpecifierIfNeeded
daysOfTheMonth
daysOfTheYear
weeksOfTheYear
monthsOfTheYear
setPositions
isDirty
reset
clearCachedValueForKey:
rollback
changeSet
changedKeys
isEqualToString:
compare:
cachedEndDate
currentCalendar
timeZone
setTimeZone:
eventStore
startDate
components:fromDate:
dueDate
numberWithInteger:
array
addObject:
valueForKey:
isEqualToArray:
setFormatterBehavior:
timeZoneWithName:
setDateFormat:
stringFromDate:
string
iCalendarValueFromRecurrenceType:
appendFormat:
iCalendarValueFromDate:isDateOnly:isFloating:
objectAtIndex:
iCalendarDescription
stringWithString:
humanReadableDescriptionWithStartDate:isConcise:
dayOfTheWeek
icsWeekDayFromDayOfTheWeek:
weekNumber
initWithWeekday:number:
daysTypeForDayArray:
humanReadableDescriptionWithStartDate:ofRecurrenceRuleICSString:isConcise:
firstDayOfTheWeek
calendarIdentifier
knownSingleValueKeysForComparison
frozenClass
knownIdentityKeysForComparison
recurrenceRuleWithType:interval:end:
iCalendarValueFromDayOfTheWeek:
UUID
description
dateComponents
dirtyStateMayAffectExceptionDates
mayOccurAfterDate:
pinToEndsOfMonthsWithCalendarItem:
isWeekdayRule
isWeekendRule
isAnyDayRule
isSimpleRule
humanReadableDescriptionWithStartDate:
isEqualToRecurrenceRule:
shouldPinMonthDays
_shouldPinMonthDays
_usesEndDate
initWithCDBSourceConstraintFlags:
allAllowSourceConstraints
maxAlarmsAllowed
setMaxAlarmsAllowed:
maxRecurrencesAllowed
setMaxRecurrencesAllowed:
supportsAlarmTriggerIntervals
setSupportsAlarmTriggerIntervals:
supportsAlarmTriggerDates
setSupportsAlarmTriggerDates:
supportsAlarmsTriggeringAfterStartDate
setSupportsAlarmsTriggeringAfterStartDate:
snoozeAlarmRequiresDetach
setSnoozeAlarmRequiresDetach:
organizerCanSeeAttendeeStatuses
setOrganizerCanSeeAttendeeStatuses:
inviteesCanSeeAttendeeStatuses
setInviteesCanSeeAttendeeStatuses:
statusesAreAccurate
setStatusesAreAccurate:
supportsIncomingInvitations
setSupportsIncomingInvitations:
supportsOutgoingInvitations
setSupportsOutgoingInvitations:
requiresOutgoingInvitationsInDefaultCalendar
setRequiresOutgoingInvitationsInDefaultCalendar:
supportsInvitationModifications
setSupportsInvitationModifications:
supportsEventForwarding
setSupportsEventForwarding:
supportsResponseComments
setSupportsResponseComments:
deliverySourceOrExternalIDRequiredForResponse
setDeliverySourceOrExternalIDRequiredForResponse:
proposedStatusRequiredForResponse
setProposedStatusRequiredForResponse:
declinedStatusChangeRequiresNoPendingStatus
setDeclinedStatusChangeRequiresNoPendingStatus:
eventDurationConstrainedToRecurrenceInterval
setEventDurationConstrainedToRecurrenceInterval:
alarmTriggerIntervalConstrainedToRecurrenceInterval
setAlarmTriggerIntervalConstrainedToRecurrenceInterval:
occurrencesMustOccurOnSeparateDays
setOccurrencesMustOccurOnSeparateDays:
futureStartDateLimitedToOccurrenceCacheBounds
setFutureStartDateLimitedToOccurrenceCacheBounds:
supportsRecurrencesOnDetachedEvents
setSupportsRecurrencesOnDetachedEvents:
recurrencesShouldPinToMonthDays
setRecurrencesShouldPinToMonthDays:
requiresAttendeeSearchInSingleAccount
setRequiresAttendeeSearchInSingleAccount:
mustAcknowledgeMasterEvent
setMustAcknowledgeMasterEvent:
canSetAvailability
setCanSetAvailability:
eventAvailabilityLimited
setEventAvailabilityLimited:
requiresMSFormattedUID
setRequiresMSFormattedUID:
shouldCancelDeletedEvents
setShouldCancelDeletedEvents:
shouldDeclineDeletedInvitations
setShouldDeclineDeletedInvitations:
supportsStructuredLocations
setSupportsStructuredLocations:
supportsReminderActions
setSupportsReminderActions:
supportsReminderLocations
setSupportsReminderLocations:
supportsAlarmProximity
setSupportsAlarmProximity:
allowsCalendarAddDeleteModify
setAllowsCalendarAddDeleteModify:
allowsTasks
setAllowsTasks:
allowsEvents
setAllowsEvents:
supportsURLField
setSupportsURLField:
supportsAllDayDueDates
setSupportsAllDayDueDates:
supportsSharedCalendars
setSupportsSharedCalendars:
isFacebook
setIsFacebook:
recurrenceSeriesMustIncludeMoreThanFirstOccurrence
setRecurrenceSeriesMustIncludeMoreThanFirstOccurrence:
supportsPrivateEvents
setSupportsPrivateEvents:
prohibitsPrivateEventsWithAttendees
setProhibitsPrivateEventsWithAttendees:
supportsAvailabilityRequests
setSupportsAvailabilityRequests:
supportsIgnoringEventsInAvailabilityRequests
setSupportsIgnoringEventsInAvailabilityRequests:
supportsLocationDirectorySearches
setSupportsLocationDirectorySearches:
requiresSamePrivacyLevelAcrossRecurrenceSeries
setRequiresSamePrivacyLevelAcrossRecurrenceSeries:
supportsInboxAvailability
setSupportsInboxAvailability:
prohibitsMultipleMonthsInYearlyRecurrence
setProhibitsMultipleMonthsInYearlyRecurrence:
prohibitsMultipleDaysInMonthlyRecurrence
setProhibitsMultipleDaysInMonthlyRecurrence:
prohibitsYearlyRecurrenceInterval
setProhibitsYearlyRecurrenceInterval:
requiresOccurrencesConformToRecurrenceRule
setRequiresOccurrencesConformToRecurrenceRule:
prohibitsDetachmentOnCommentChange
setProhibitsDetachmentOnCommentChange:
allowsProposeNewTime
setAllowsProposeNewTime:
prohibitsICSImport
setProhibitsICSImport:
supportsAutoGeocodingStructuredLocations
setSupportsAutoGeocodingStructuredLocations:
supportsJunkReporting
setSupportsJunkReporting:
supportsPhoneNumbers
setSupportsPhoneNumbers:
attendeesUseDeletedByOrganizerStatus
setAttendeesUseDeletedByOrganizerStatus:
prohibitsSlicingEventsWithAttendees
setProhibitsSlicingEventsWithAttendees:
supportsSubscribedCalendars
setSupportsSubscribedCalendars:
supportsAttachments
setSupportsAttachments:
requiresOpeningAttachmentAsLink
setRequiresOpeningAttachmentAsLink:
shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars
setShouldUseDeleteAndAddInsteadOfMoveBetweenCalendars:
supportsFloatingTimeZone
setSupportsFloatingTimeZone:
prohibitsUsingEventOrganizerEmailWhenComposingMail
setProhibitsUsingEventOrganizerEmailWhenComposingMail:
supportsDelegation
setSupportsDelegation:
supportsDelegateEnumeration
setSupportsDelegateEnumeration:
supportsInvitationModificationsWithoutNotification
setSupportsInvitationModificationsWithoutNotification:
supportsRecurrenceSplit
setSupportsRecurrenceSplit:
_flags
setSkipsPersistentObjectCopy:
newObjectID
uuid
UUIDString
changeSingleValue:forKey:basedOn:
initWithREMObject:inStore:withChanges:
_list
objectID
initWithUUIDString:
objectIDWithUUID:
name
valueForSingleValueKey:backingValue:
title
ekColor
hexColorStringFromREMColor:
sharingStatus
ekSharingStatusFromREMSharingStatus:
uppercaseString
colorWithHexString:
hasPrefix:
substringToIndex:
hexString
stringByAppendingString:
account
eventSourceIDForReminderSourceID:
sourceWithIdentifier:
backingObject
frozenObjectForReminderObject:
frozenReminderSource
remAccount
hasUnsavedChangeForKey:
valueForSingleValueKey:basedOn:
setName:
REMColorFromEKHexColorString:
setColor:
errorWithEKErrorCode:
REMObject
saveRequest
updateAccount:
addListChangeItem:
updateListWithSaveRequest:error:
_applyChanges:error:
reminderSource
isNew
remObjectID
addListWithName:toAccountChangeItem:listObjectID:
updateList:
daDisplayOrder
externalIdentifier
sharedOwnerName
meltedClass
initNewListInStore:
unlocalizedTitle
colorStringRaw
isPublished
publishedURL
source
_account
uniqueIdentifier
_applyChangesToSaveRequest:error:
displayOrder
flags
allowedEntities
sharees
symbolicColorName
externalID
isColorDisplayOnly
_listChange
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
setWithObject:
relationWithEntityName:toMany:inversePropertyNames:ownsRelated:
initWithObjectsAndKeys:
displayName
setDisplayName:
address
setAddress:
setExternalID:
shareeStatusRaw
setShareeStatusRaw:
shareeAccessLevelRaw
setShareeAccessLevelRaw:
primitiveStringValueForKey:
primitiveSetStringValue:forKey:
primitiveIntValueForKey:
primitiveSetIntValue:forKey:
primitiveSetRelationValue:forKey:
primitiveRelationValueForKey:
firstName
lastName
defaultPropertiesToLoad
relations
entityType
setFirstName:
setLastName:
setOwner:
owner
isFacebookSource
URLWithString:
emailAddress
predicateForContactMatchingEKParticipantWithName:emailAddress:URL:predicateDescription:
contactPredicate
_reminder
calendarItemIdentifier
setTitleAsString:
list
type
removeFromList
addReminderChangeItem:
_reminderCopiedToNewList:
setCreationDate:
setNotesAsString:
setIcsUrl:
startDateComponents
setStartDateComponents:
dueDateComponents
setCalendar:
setDueDateComponents:
completionDate
setCompleted:
setCompletionDate:
priority
setPriority:
calendarItemExternalIdentifier
setDaCalendarItemUniqueIdentifier:
hasUnsavedMultiValueRemovalForKey:
multiValueRemovals
objectForKeyedSubscript:
alarms
removeAlarm:
hasUnsavedMultiValueAdditionForKey:
multiValueAdditions
setPath:
triggers
addAlarmWithTrigger:
setAlarmUID:
modifiedStructuredLocation
arrayByAddingObject:
removeAllRecurrenceRules
recurrenceRules
addUpdatedRecurrenceRule:
appLinkData
initWithUserActivityData:
setUserActivity:
action
initWithUniversalLink:
calendar
addReminderWithTitle:toListChangeItem:reminderObjectID:
updateReminder:
initWithReminderChangeItem:insertIntoListChangeItem:
_trackReminderChangeItem:
_fixAlarmUUIDsForClone:from:
initWithCapacity:
semanticIdentifierFromREMAlarm:
setObject:forKeyedSubscript:
alarmUID
firstObject
removeObjectAtIndex:
originalAlarmUID
setOriginalAlarmUID:
daCalendarItemUniqueIdentifier
titleAsString
notesAsString
icsUrl
absoluteString
lastModifiedDate
creationDate
setWithCapacity:
frozenAlarmForREMAlarms:
valuesForMultiValueKey:basedOnSet:
calendarWithIdentifier:
userActivity
userActivityData
universalLink
structuredLocation
notes
initWithREMObject:inStore:
initNewReminderInStore:
_copyToNewList:error:
allAlarms
uniqueID
structuredLocationWithoutPrediction
hasRecurrences
hasAttendees
hasNotes
attendeesRaw
clientLocation
organizer
selfAttendee
originalItem
travelStartLocation
attachments
detachedItems
ekExceptionDates
defaultAlarmRemoved
defaultAlarmWasDeleted
forceChangeValue:forKey:
forceUpdateFrozenCalendar:
initWithCode:userActivity:
code
setCode:
_code
relationWithEntityName:toMany:inversePropertyNames:
primitiveDataValueForKey:
primitiveSetDataValue:forKey:
primitiveBoolValueForKey:
primitiveSetBoolValue:forKey:
primitiveDateValueForKey:
primitiveSetDateValue:forKey:
externalIDTag
setExternalIDTag:
externalModificationTag
setExternalModificationTag:
syncToken
setSyncToken:
externalRepresentation
setExternalRepresentation:
setUnlocalizedTitle:
setColorDisplayOnly:
setSymbolicColorName:
setColorStringRaw:
setDisplayOrder:
setFlags:
setSharingStatus:
setSharedOwnerName:
sharedOwnerURL
setSharedOwnerURL:
sharingInvitationResponse
setSharingInvitationResponse:
publishURL
setPublishURL:
setIsPublished:
setPublished:
notifications
setNotifications:
setSharees:
setSource:
invitationStatus
setInvitationStatus:
setAllowedEntities:
selfIdentityDisplayName
setSelfIdentityDisplayName:
selfIdentityEmail
setSelfIdentityEmail:
selfIdentityPhoneNumber
setSelfIdentityPhoneNumber:
selfIdentityAddress
setSelfIdentityAddress:
selfIdentityFirstName
setSelfIdentityFirstName:
selfIdentityLastName
setSelfIdentityLastName:
ownerIdentityDisplayName
ownerIdentityId
setOwnerIdentityId:
setOwnerIdentityDisplayName:
ownerIdentityEmail
setOwnerIdentityEmail:
ownerIdentityPhoneNumber
setOwnerIdentityPhoneNumber:
ownerIdentityAddress
setOwnerIdentityAddress:
ownerIdentityFirstName
setOwnerIdentityFirstName:
ownerIdentityLastName
setOwnerIdentityLastName:
setNotes:
subcalAccountID
setSubcalAccountID:
pushKey
setPushKey:
digest
setDigest:
setAllAlarms:
refreshDate
setRefreshDate:
subscriptionID
setSubscriptionID:
lastSyncStartDate
setLastSyncStartDate:
lastSyncEndDate
setLastSyncEndDate:
lastSyncError
setLastSyncError:
lastSyncErrorData
setLastSyncErrorData:
sharedManager
timeToLeaveAlertGenerationEnabledOnWatch
shared
bypassSplashScreen
lastConfirmedSplashScreenVersion
_currentSplashScreenVersion
setLastConfirmedSplashScreenVersion:
isTravelAdvisorySupported
isConservativeEntryEnabled
areVehicleTriggersEnabled
eventDetailsDayPreviewEnabled
calendarListViewCellsFeaturesExtraContent
calendarListViewCellsFeaturesAttendeeInformation
areQuickActionsSupported
areApplicationBadgesSupported
isSuggestionsEnabled
isContinuitySupported
areContextualRemindersSupported
mustDisplaySplashScreenToUser
userAcknowledgedSplashScreen
automaticGeocodingEnabled
eventsFoundInAppsEnabled
initWithSource:
constraints
sourceIdentifier
initWithFormat:
initWithSuperclassDescription:
setKey:withString:
setKey:withBoolean:
setKey:withDictionary:
build
_dictionaryForIgnoredEventID:
objectForKey:
gatherFreshlyCachedSpansBetweenStartDate:endDate:
setObject:forKey:
errorWithDomain:code:userInfo:
_isValidStartDate:endDate:
_validateRequestStartDate:endDate:addresses:error:
_cachedSpanResultsBetweenStartDate:endDate:ignoredEventID:addresses:
allKeys
predicateWithBlock:
filteredArrayUsingPredicate:
start
elapsedTimeAsNumber:
_handleResults:resultsBlock:ignoredEventID:
dictionaryWithObjects:forKeys:count:
_logRequestElapsedTime:forNumberOfAddresses:
sharedConnection
requestCalendarAvailabilityWithAccountID:startDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
cancelCalendarAvailabilityRequestWithID:
_generateEventKitSpansFromPersistenceSpans:
enumerateKeysAndObjectsUsingBlock:
insertSpans:
CalIsAfterDate:
_convertType:
initWithStartDate:endDate:type:
enumerateObjectsUsingBlock:
numberWithDouble:
requestAvailabilityBetweenStartDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
cachedAvailabilityInDateRange:ignoredEventID:addresses:
cancelAvailabilityRequestWithID:
_sourceIsInvalid
_accountID
_sourceSupportsAvailabilityRequests
_processingQueue
_callbackQueue
_addressesToCachedSpanRanges
_ignoredEventIDsToAddressBasedCaches
_nextRequestID
_cancelledID
ekPredicateEvaluateWithObject:
evaluatePredicate:withObject:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
unarchiveDictionaryFromData:error:
archiveDictionary:error:
localStructuredData
structuredData
_structuredDataDictionaryFromData:
mutableCopy
removeObjectForKey:
_dataFromStructuredDataDictionary:
setLocalStructuredData:
setStructuredData:
_customObjectForKey:local:
_setCustomObject:forKey:local:
customObjectForKey:
setCustomObject:forKey:
localCustomObjectForKey:
setLocalCustomObject:forKey:
willSave
initWithCalendars:searchTerm:store:callback:
connection
CADOperationProxySync
CADOccurrenceCacheSearchWithTerm:inCalendars:responseToken:reply:
rowID
numberWithInt:
addCancellableRemoteOperation:
performSearchOperation:inCalendars:withEventStore:andSearchTerm:
errorWithCADResult:
removeCancellableRemoteOperation:
CADOperationProxy
unsignedIntValue
CADOccurrenceCacheCancelSearchWithReplyID:
cancel
numberWithBool:
searchWithCalendars:searchTerm:store:callback:
disconnect
receivedBatchResultsFromServer:finished:
searchTerm
_calendars
_searchTerm
_store
_callback
_replyID
_canceled
setEmailAddress:
setPhoneNumber:
setUrl:
participantRole
setParticipantRole:
participantStatus
setParticipantStatus:
participantType
setParticipantType:
attendeeWithName:emailAddress:phoneNumber:url:
classesForKey
initWithParticipant:
createAttendee:
_name
_emailAddress
_phoneNumber
_url
_participantRole
_participantStatus
_participantType
cachedConstraintsForSourceWithObjectID:
hostURL
setHostURL:
initWithType:objectID:date:eventStore:
registerFetchedObjectWithID:
initWithPersistentObject:occurrenceDate:
initWithEvent:
initWithPersistentObject:
initWithType:
setTitle:
setHiddenFromNotificationCenter:
sharedOwnerEmail
sharedOwnerPhoneNumber
setURL:
setAlerted:
CGColor
setDotColor:
setObjectID:
externalURI
allowedEntityTypes
setAllowedEntityTypes:
couldBeJunk
setCouldBeJunk:
publicObjectWithPersistentObject:
shareeStatus
calendarName
shareeDisplayName
shareeEmailAddress
shareePhoneNumber
shareeURL
alerted
setStatus:
URIRepresentation
sourceForInviteReplyNotification:
inviteReplyCalendar
calendarItem
_notificationTypeForResourceChange:notificationType:
changeType
deletedTitle
setWithArray:
changedByDisplayName
setCalendarName:
eventIdentifier
setEventID:
containsObject:
setChangeType:
createCount
setCreateCount:
updateCount
setUpdateCount:
deleteCount
setDeleteCount:
dateChanged
setDateChanged:
timeChanged
setTimeChanged:
locationChanged
setLocationChanged:
titleChanged
setTitleChanged:
setStartDate:
_dateForNextOccurrence
setStartDateForNextOccurrence:
isAllDay
setAllDay:
locationWithoutPrediction
setLocation:
objectWithIDExists:
currentLocale
descriptionWithLocale:
initWithType:objectID:eventStore:
notification
_date
_eventStore
_notification
_type
_objectID
_sharedInit
markAsNew
persistentObject
_isNew
_hasChanges
doesNotRecognizeSelector:
_copyWithoutChangesInZone:
isEqual:comparingKeys:compareImmutableKeys:ignoringProperties:
_object:equalsObject:forKeys:compareImmutableKeys:ignoringProperties:
_objects:haveSameMeltedClass:frozenClass:
_compareKnownKeys:forObject:againstObject:compareImmutableKeys:propertiesToIgnore:
_compareKnownKeys:forObject:againstObject:compareIdentityKeys:compareImmutableKeys:propertiesToIgnore:
_compareIdentityKeysForObject:againstObject:propertiesToIgnore:
_compareNonIdentityKeys:forObject:againstObject:compareImmutableKeys:propertiesToIgnore:
knownRelationshipMultiValueKeys
knownRelationshipSingleValueKeys
knownImmutableKeys
intersectSet:
allObjects
_compareSingleValueRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareMultiValueRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareNonRelationshipKeys:forObject:againstObject:propertiesToIgnore:
_compareSingleValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
_compareMutliValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
isPropertyUnavailable:
dictionaryWithCapacity:
_compareRelationshipObject1:againstRelationshipObject2:propertiesToIgnore:
isWeakRelationship
isEqual:ignoringProperties:
_isPropertyUnavailable:convertToFullObjectIfUnavailable:
rebaseSkippingRelationProperties:
_initChangeSetIfNone
_insertObject:
isMeltedAndNotWeakRelationshipObject:forKey:
rebase
frozenObject
addMultiChangedObjectValue:forKey:
setPersistentObject:
existsInStore
mutableCopyWithZone:
hasUnsavedChanges
addChangesFromObject:copyingBackingObjects:
allocWithZone:
initWithObjectForCopy:
additionalFrozenProperties
setAdditionalFrozenProperties:
loadedPropertyForKey:
_recursiveSnapshotCopyWithPropertyAccessor:recurseOnWeakRelations:
meltedAndCachedSingleRelationObjectForKey:
meltedAndCachedMultiRelationObjectsForKey:
null
isWeakRelationObject:forKey:
meltedObjectInStore:
setCachedMeltedObject:forSingleValueKey:
setWithSet:
setCachedMeltedObjects:forMultiValueKey:
dictionaryWithDictionary:
_rollbackCommon
_reset
_resetCommon
_refreshCommon
_previousValueForKey:
_markAsNewCommon
_markAsNotNewCommon
_markAsDeletedCommon
_markAsUndeletedCommon
_markAsSavedCommon
_markAsCommittedCommon
markAsCommitted
_performBlockOnOwnedCachedRelatedObjects:
cachedMeltedObjectForSingleValueKey:
cachedMeltedObjectsForMultiValueKey:
_hasChangesForKey:
_updatePersistentValueForKey:
_propertyValueForKey:
setValue:forKey:
updatePersistentObject
_isPendingInsert
updatePersistentObjectSkippingProperties:
_deleteObject:
addCoCommitObject:
propertiesUnavailableForPartialObjects
initWithObject:
existingMeltedObject
isCompletelyEqual:
isFrozen
isPartialObject
semanticIdentifier
canBeConvertedToFullObject
preFrozenRelationshipObjects
setBackingObject:
hasChanges
previouslySavedObject
setEventStore:
duplicate
committedCopy
snapshotCopy
refresh
committedValueForKey:
markAsNotNew
markAsDeleted
markAsUndeleted
markAsSaved
updatePersistentValueForKeyIfNeeded:
insertPersistentObjectIfNeeded
deletePersistentObject
setChangeSet:
_cachedMeltedObjects
set_cachedMeltedObjects:
_cachedValues
set_cachedValues:
_validationContext
set_validationContext:
_persistentObject
_changeSet
__cachedMeltedObjects
_additionalFrozenProperties
__cachedValues
__validationContext
initialStartDate
setEventStartDate:
initialEndDate
setEventEndDate:
setEventTimeZone:
allDay
eventStartDate
dateInTimeZone:fromTimeZone:
eventEndDate
_setupForEKEvent:adjustDatesForAllDayEvents:
_prepareForEKRecurrence:forCalendarItem:
copyOccurrenceDatesBetweenStartDate:endDate:timeZone:limit:
addObjectsFromArray:
_copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:adjustDatesForAllDayEvents:
removeObject:
occurrenceDate:matchesRecurrenceRule:forEvent:includeDetachedEventsInSeries:
date
dateByAddingTimeInterval:
exceptionDates
nextOccurrenceDateWithEKRecurrences:forCalendarItem:exceptionDates:initialDate:afterDate:
dateWithTimeIntervalSinceReferenceDate:
calendarDateWithDate:timeZone:
calendarDateByAddingSeconds:
_convertEKRecurrenceFrequencyToCalRecurrenceFrequency:
setWeekStart:
weekStart
setShouldPinMonthDays:
computeRecurrenceEndDate:
copyOccurrenceDatesWithEKEvent:startDate:endDate:timeZone:limit:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:limit:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:limit:adjustDatesForAllDayEvents:
copyOccurrenceDatesWithEKEvent:recurrenceRule:startDate:endDate:timeZone:exceptionDates:limit:
isOccurrenceDate:validForEvent:
nextOccurrenceDateWithEKRecurrences:forCalendarItem:initialDate:afterDate:
hasRecurrenceRules
timeIntervalSinceDate:
second
setSecond:
CalGregorianCalendarForTimeZone:
CalDateByComponentwiseAddingComponents:inCalendar:
timeIntervalSinceReferenceDate
duration
CalIsBeforeOrSameAsDate:
CalIsAfterOrSameAsDate:
isFloating
defaultTimeZone
externalFolderID
setExternalFolderID:
externalScheduleID
setExternalScheduleID:
objectType
fetchChangesToObjectsOfTypes:inStore:resultHandler:
fetchChangesToObjectsOfTypes:inSource:resultHandler:
fetchChangesToObjectsOfTypes:inCalendar:resultHandler:
initWithChangeProperties:
createOwnerIDWithRowID:objectType:
fetchAttendeeChangesInStore:resultHandler:
fetchAttendeeChangesInSource:resultHandler:
fetchAttendeeChangesInCalendar:resultHandler:
ownerID
_ownerID
alternateUniverseClass
dealloc
_connectToServer
initializationOptions
_tryRegisterNewConnection
initWithMachServiceName:options:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
unitTesting
CADDatabaseSetInitializationOptions:reply:
CADDatabaseGetAccess:
CADDatabaseResetWithReply:
CADDatabaseGetUUID:
CADDatabaseRegisterForDetailedChangeTrackingInSource:reply:
CADDatabaseUnregisterForDetailedChangeTracking:
CADDatabaseFetchChangedObjectIDsSinceSequenceNumber:reply:
CADDatabaseFetchObjectChangesForEntityTypes:insideObject:reply:
CADDatabaseMarkChangedObjectIDsConsumedUpToSequenceNumber:reply:
CADDatabaseMarkIndividualChangesConsumed:reply:
CADDatabaseGetSequenceNumber:
CADDatabaseGetChangesSinceSequenceNumber:reply:
CADDatabaseGetChangedEntityIDsSinceTimestamp:reply:
CADDatabaseGetNextAssignableColorWithReply:
CADDatabaseImportEvents:fromICSData:intoCalendarsWithIDs:optionsMask:batchSize:reply:
CADDatabaseExportICSDataForCalendarItems:options:reply:
CADDatabaseExportICSDataForCalendar:options:reply:
CADDatabaseSetShowsDeclinedEvents:reply:
CADDatabaseRebuildOccurrenceCacheWithReply:
CADDatabaseSaveWithReply:
CADDatabaseCommitWithReply:
CADDatabaseRollbackWithReply:
CADDatabaseCanModifyCalendarDatabase:
CADDatabaseLastConfirmedSplashScreenVersion:
CADObjectExists:reply:
CADObjectsExist:reply:
CADObject:getPropertiesWithNames:reply:
CADObject:getPropertyWithName:reply:
CADObject:getStringPropertyWithName:reply:
CADObject:getNumberPropertyWithName:reply:
CADObject:getDatePropertyWithName:reply:
CADObject:getDataPropertyWithName:reply:
CADObject:getRelatedObjectWithRelationName:reply:
CADObject:getRelatedObjectsWithRelationName:reply:
CADObject:setAttributes:andRelations:reply:
CADDatabaseInsertObjectsWithTempObjectIDs:reply:
CADDatabaseDeleteObjectsWithObjectIDs:reply:
CADObjectIsManaged:reply:
CADDatabaseGetSourcesWithFaultedProperties:reply:
CADDatabaseGetLocalSource:
CADDatabaseGetLocalBirthdaySource:
CADSourceGetConstraints:reply:
CADSourceGetNotificationCollection:reply:
CADSourceRefresh:isUserRequested:reply:
CADCountCalendarItemsOfType:inSource:reply:
CADRemoveCalendarItemsOlderThanDate:ofType:inSource:reply:
CADSourceGetGrantedDelegatesList:reply:
CADSourceUpdateGrantedDelegatePermission:sourceID:reply:
CADSourceGetManagedConfigurationAccountAccess:reply:
CADDatabaseGetCalendarsWithFaultedProperties:reply:
CADCalendar:hasEvents:
CADCalendar:hasReminders:
CADDatabaseGetCalendarItemWithUUID:reply:
CADDatabaseGetCalendarItemsWithUniqueIdentifier:inCalendar:reply:
CADDatabaseFetchCalendarItemsWithPredicate:entityType:fetchIdentifier:reply:
CADDatabaseCancelFetchRequestWithIdentifier:
CADDatabaseExportCalendarItemAsICS:withOptions:reply:
CADDatabaseGetContactIdentifierForCalendarItem:reply:
CADDatabaseAddContactWithIdentifier:forCalendarItem:withReply:
CADDatabaseRemoveContactIdentifier:forCalendarItem:withReply:
CADDatabaseCountEntitiesOfType:withContactIdentifier:withReply:
CADDatabaseFetchEntitiesOfType:withContactIdentifier:withReply:
CADDatabaseGetDefaultLocalCalendarWithReply:
CADDatabaseGetOrCreateSubscribedCalendarsSource:
CADDatabaseGetDefaultCalendarForNewEventsInDelegateSource:withReply:
CADDatabaseSetDefaultCalendarForNewEvents:delegateSource:
CADDatabaseGetEventWithEventIdentifier:reply:
CADDatabaseGetEventWithUniqueID:reply:
CADDatabaseGetAllEventsWithUniqueID:reply:
CADDatabaseGetCountOfUnacknowledgedEvents:
CADDatabaseGetCountOfNotifiableEvents:
CADDatabaseSetShowsDeclinedEvents:
CADDatabaseGetBirthdayCalendarEnabledWithReply:
CADDatabaseSetBirthdayCalendarEnabled:withReply:
CADDatabaseGetSuggestedEventCalendarWithReply:
CADDatabaseGetNaturalLanguageSuggestedEventCalendarWithReply:
CADDatabaseCanModifySuggestedEventCalendar:
CADDatabaseInsertSuggestedEventCalendarWithReply:
CADDatabaseRemoveSuggestedEventCalendarWithReply:
CADDatabaseActOnSuggestedEvent:action:reply:
CADOccurrenceCacheAreOccurrencesBeingGenerated:
CADOccurrenceCacheGetOccurrenceCountsForCalendars:reply:
CADOccurrenceCacheGetOccurrenceForCalendars:onDay:reply:
CADOccurrenceCacheGetOccurrenceDateOfEventWithRowID:nearestDate:prefersForwardSearch:reply:
CADOccurrenceCacheDoEvents:haveOccurrencesAfterDate:reply:
CADOccurrenceCacheSearchLocationsWithTerm:inCalendars:responseToken:reply:
CADOccurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:reply:
CADDatabaseShouldWhitelistOrganizerEmailFromJunkChecks:reply:
CADDatabaseShouldWhitelistOrganizerPhoneNumberFromJunkChecks:reply:
CADDatabaseGetSecurityScopedLocalURLWrapperForAttachment:reply:
CADDatabaseGetTTLLocationAuthorizationStatus:
CADDatabaseGetDefaultCalendarForNewRemindersWithReply:
CADDatabaseSetDefaultCalendarForNewReminders:
CADDatabaseGetCountOfRemindersWithPredicate:reply:
CADDatabaseGetProperties:forReminders:reply:
CADScheduledTaskCacheGetDaysAndTaskCounts:
CADDatabaseGetAlarmWithUUID:reply:
CADDatabaseGetAlarmOccurrencesInRangeFromStart:toEnd:inCalendars:reply:
CADDatabaseGetLocationBasedAlarmsWithReply:
CADDatabaseGetVehicleTriggerAlarmsWithReply:
CADDatabaseGetSharedCalendarInvitationsWithReply:
CADCalendarSetClearedFromNotificationCenter:error:
CADDatabaseGetResourceChanges:
CADDatabaseGetInviteReplyNotifications:
CADDatabaseGetEventNotificationItemsFilteredByShowsNotificationsFlag:calculateEarliestExpirationDate:reply:
CADDatabaseGetNotificationCountForSourceWithExternalIdentifier:excludingDelegateSources:filteredByShowsNotificationsFlag:reply:
CADDatabaseGetInboxRepliedSectionItems:
CADEvent:setAlertedWithError:
CADCalendar:setAlertedWithError:
CADResourceChange:setAlertedWithError:
CADInviteReplyNotification:setAlertedWithError:
CADEventSetInvitationStatus:forEvent:error:
CADPushItemsToSpotlight:reply:
CADInternalForceStatCollection:
CADTestingSimulateDaemonCrash
CADTestingCloseDatabase:
CADMigrateDatabaseIfNeeded:
CADDatabaseGetDeletableCalendars:
CADDatabaseGetDeletableSources:
CADPurgeChangeTrackingReply:
CADPostSyntheticRouteHypothesis:forEventWithExternalURL:reply:
CADDatabaseGetNotificationCount:
CADDatabaseGetStorageUsage:
initWithXPCConnection:protocol:synchronous:
setInitializationOptions:
resume
setHasEverConnected:
_unregisterConnection
invalidate
_createConnectionAndOperationProxyIfNeeded
_finishAllRepliesOnServerDeath
daemonRestarted
removeAllObjects
CADClientReceiveOccurrenceCacheSearchResults:forSearchToken:finished:
xpcConnection
_daemonRestarted
cancelRemoteOperation:
delegate
setDelegate:
hasEverConnected
_connectionLock
_remoteOperationProxy
_syncRemoteOperationProxy
_replyHandlerLock
_cancellableOperations
_nextCancellationToken
_registeredForStartNote
_wasAbortedDueToExcessiveConnctions
_hasEverConnected
_xpcConnection
_delegate
_initializationOptions
maxNumberOfOpenConnections
_filterObjectChangesNotConformingToOwnerIDProvidingProtocol:
arrayWithCapacity:
fetchChangesToOwnerIDProvidingObjectsOfTypes:inStore:resultHandler:
fetchChangesToOwnerIDProvidingObjectsOfTypes:inSource:resultHandler:
fetchChangesToOwnerIDProvidingObjectsOfTypes:inCalendar:resultHandler:
initWithDomain:
registerReflectionForPreferenceWithNotificationName:
getValueForPreference:expectedClass:
doubleValue
setValueForPreference:value:notificationName:
getBooleanPreference:defaultValue:
setBooleanPreference:value:notificationName:
getIntegerPreference:defaultValue:
setIntegerPreference:value:notificationName:
_setDeselectedCalendars_iOS:
_setDeselectedCalendarIdentifiers:
syncHash
selectionSyncIdentifier
_setDeselectedCalendarSyncIdentifiers:
_setDeselectedCalendarSyncHashes:
travelEngineThrottlePeriod
setTravelEngineThrottlePeriod:
refiringReminderAlarmsEnabled
setRefiringReminderAlarmsEnabled:
useShortReminderSnoozeInterval
setUseShortReminderSnoozeInterval:
useShortReminderRefireInterval
setUseShortReminderRefireInterval:
alwaysSetArrivedAndSettledForReminders
setAlwaysSetArrivedAndSettledForReminders:
setDeselectedCalendars:
deselectedCalendarIdentifiers
deselectedCalendarSyncHashes
deselectedCalendarSyncIdentifiers
selectedCalendarIdentifiers
setSelectedCalendarIdentifiers:
showDeclinedEvents
setShowDeclinedEvents:
alertInviteeDeclines
setAlertInviteeDeclines:
_preferences
objectIDWithEntityType:rowID:
boolValue
fetchCalendarItemChangesInStore:resultHandler:
fetchCalendarItemChangesInSource:resultHandler:
fetchCalendarItemChangesInCalendar:resultHandler:
calendarID
oldCalendarID
oldExternalID
startDateChanged
startTimezoneChanged
endDateChanged
endTimezoneChanged
notesChanged
allDayChanged
_titleChanged
_locationChanged
_startDateChanged
_startTimezoneChanged
_endDateChanged
_endTimezoneChanged
_notesChanged
_allDayChanged
_calendarID
_oldCalendarID
_externalID
_oldExternalID
fetchNotificationChangesInStore:resultHandler:
fetchNotificationChangesInSource:resultHandler:
fetchNotificationChangesInCalendar:resultHandler:
reminderStore
completionBlockForFetchRequestToken:remove:
initWithReminderStore:
_reminderStore
initWithStoreContainerToken:
defaultCenter
remindersChanged
storeDidChangeNotificationName
addObserver:selector:name:object:
reminderStoreChanged
_loadAccounts
fetchAccountsWithError:
_loadAccountsIfNeeded
sources
reminderSourceForEventSource:
_fetchAndCacheConstraintsForFrozenSource:
capabilities
supportsLocation
daAllowsCalendarAddDeleteModify
MCIsManagedWithResultPtr:error:
_loadLists
fetchListsForEventKitBridgingWithError:
_loadListsIfNeeded
uncommittedChanges
backingCalendarWithIdentifier:
fetchListWithObjectID:error:
isNotFoundError:
validate:
frozenCalendarFromCalendar:error:
saveObject:withFrozenObject:error:
_validateDeletable:
fetchDefaultListWithError:
backingReminderWithIdentifier:
fetchRemindersWithDACalendarItemUniqueIdentifiers:inList:error:
allValues
fetchReminderWithObjectID:error:
saveCalendar:error:
path
prepareReminderKitObjectForSaveWithUpdatedBackingObjectProvider:
cachedMeltedChildIdentifierToParentMap
canCommitSelf
updateParentToCommitSelf:
fillInPath:usingParents:
insertObject:atIndex:
_commit:error:
addEntriesFromDictionary:
removeObjectsForKeys:
initWithStore:
removeFromParent
_moveRemindersToNewLists:error:
saveSynchronouslyWithError:
initWithCalendars:
initForIncompleteRemindersWithDueDateStarting:ending:calendars:
initForCompletedRemindersWithCompletionDateStarting:ending:calendars:
_checkPredicate:
remindersMatchingPredicate:
_allLists
fetchMatchingRemindersInStore:allLists:error:
evaluateWithObject:
filterUsingPredicate:
uniqueIdentifierForREMObject:
newFrozenObjectForReminderObject:withChanges:
initWithAlarms:inStore:withChanges:
frozenClassForReminderClass:
pointerFunctionsWithOptions:
initWithKeyPointerFunctions:valuePointerFunctions:capacity:
domain
existingUpdatedObject:
initWithEventStore:token:
cachedConstraintsForSource:
isSourceManaged:
calendars
createNewReminderCalendar
removeCalendar:error:
defaultCalendarForNewReminders
reminderWithIdentifier:
remindersWithExternalIdentifier:
createNewReminder
saveReminder:error:
removeReminder:error:
resetBackingAlarmWithBackingAlarm:
resetBackingLocationWithBackingLocation:
commit:
predicateForRemindersInCalendars:
predicateForIncompleteRemindersWithDueDateStarting:ending:calendars:
predicateForCompletedRemindersWithCompletionDateStarting:ending:calendars:
fetchRemindersMatchingPredicate:completion:
remStore
_queue
_sources
_cachedConstraints
_lists
_newObjectsIDs
_updatedObjects
_objectIDsToCommit
_deletedObjects
_objectsToReset
_remindersNeedingMove
_movedRemindersIDMap
_queryQueue
queryCompletionHandlers
_remStore
base64EncodedStringWithOptions:
floatValue
semanticIdentifierForLocationWithTitle:address:mapKitHandle:contactLabel:latitude:longitude:radius:
initWithDelegate:
autcompleterUpdated:
autcompleterSetCNAutocompleteStore:
autcompleterDidBeginNetworkActivity:
autcompleterDidFinishNetworkActivity:
prefix
cancelSearch
clearLastResults
allResults
setPrefix:
request
setSearchString:
setSearchType:
findPeople
excludeLocal
setIncludeContacts:
findSuggestions
setIncludeSuggestions:
findRecents
setIncludeRecents:
useACDirectorySearch
setIncludeDirectoryServers:
setFetchContext:
setAutocompleteRunning:
autocompleteStore
scheduleFetchRequest:
setAutocompletionSearchRequest:
isRunning
contactResults
directorySearchResults
directorySearchQueue
cancelAllOperations
autocompletionSearchRequest
autocompleteRunning
operationCount
removeIgnoredAddressesFromResults:
orderedSetWithArray:
value
addressesToIgnore
hasMailto
stringRemovingMailto
defaultProvider
unifiedContactMatchingName:email:url:keysToFetch:
emailAddresses
setAddressesToIgnore:
predicateForContactsMatchingEmailAddress:
unifiedContactsMatchingPredicate:keysToFetch:
autocompleteFetch:didReceiveResults:
autocompleteFetch:didFailWithError:
autocompleteFetchDidFinish:
autocompleteFetchDidBeginNetworkActivity:
autocompleteFetchDidEndNetworkActivity:
autocompleteFetch:shouldExpectSupplementalResultsForRequest:completionHandler:
autocompleteFetch:willAdjustResults:
autocompleteFetch:willSortResults:
resultComparatorForAutocompleteFetch:
lastSearchString
searchFor:onSource:withContext:
cnResults
setIgnoredParticipants:
setIgnoredAddresses:
findRooms
setFindRooms:
setFindPeople:
setFindSuggestions:
findResources
setFindResources:
findGroups
setFindGroups:
setFindRecents:
setUseACDirectorySearch:
setExcludeLocal:
setContactResults:
setAutocompleteStore:
directorySearchOperation
setDirectorySearchOperation:
setDirectorySearchQueue:
setDirectorySearchResults:
_findRooms
_findPeople
_findSuggestions
_findResources
_findGroups
_findRecents
_useACDirectorySearch
_excludeLocal
_autocompleteRunning
_prefix
_source
_addressesToIgnore
_contactResults
_autocompletionSearchRequest
_autocompleteStore
_directorySearchOperation
_directorySearchQueue
_directorySearchResults
weakObjectsPointerArray
setDelegates:
objectsChangedNotification:
removeObserver:
delegates
addPointer:
hasUpdatePriority
sortedArrayUsingComparator:
compact
changedIdentifiersForNotification:
object
specificIdentifier
setByAddingObject:
_orderedDelegates
dictionary
updatedObjectFor:changeNotification:
trackedObjectMap
trackedObjects
trackedObjectsDidRevert:
trackedObjectsDidUpdate:
relatedObjectsDidUpdate:
notifyObservers
userInfo
_refreshable
stringRepresentation
registerDelegate:
_delegates
initWithEventStore:opaqueKey:uniqueKey:
initWithEventStore:opaqueKey:uniqueKey:extractionGroupIdentifier:
setOpaqueKey:
setUniqueKey:
setChangedFields:
setChangesAcknowledged:
setExtractionGroupIdentifier:
opaqueKey
uniqueKey
extractionGroupIdentifier
changedFields
changesAcknowledged
timestamp
setTimestamp:
setTimestampAsDate:
timestampAsDate
initWithOpaqueKey:uniqueKey:
initWithOpaqueKey:uniqueKey:extractionGroupIdentifier:
relatedEvent
setCountLimit:
addObserverForName:object:queue:usingBlock:
archivedDataWithRootObject:requiringSecureCoding:error:
descriptorForRequiredKeysForStyle:
objectAtIndexedSubscript:
isPhoneNumber
nameComponents
nickname
setNickname:
familyName
setFamilyName:
givenName
setGivenName:
namePrefix
setNamePrefix:
nameSuffix
setNameSuffix:
middleName
setMiddleName:
stringFromContact:style:
setCachedDisplayName:
setIsEmail:
setIsPhone:
setParticipant:
participantIsOptional:
participant
compareByEmailThenByContactName:
isEmail
compare:options:
compareByContactNames:
sharedDefaults
sortOrder
participantForSortingWithEKParticipant:
cachedDisplayName
isPhone
_isEmail
_isPhone
_participant
_firstName
_lastName
_cachedDisplayName
fetchReminderChangesInStore:resultHandler:
fetchReminderChangesInSource:resultHandler:
fetchReminderChangesInCalendar:resultHandler:
fetchShareeChangesInStore:resultHandler:
fetchShareeChangesInSource:resultHandler:
fetchShareeChangesInCalendar:resultHandler:
crRecentContactsLibraryClass
recentEventForAddress:displayName:kind:date:weight:metadata:options:
recentForContactWithAddress:name:kind:
defaultInstance
crRecentsDomainCalendarString
recordContactEvents:recentsDomain:sendingAddress:completion:
crAddressKindEmailString
recordRecentWithAddress:name:kind:
crAddressKindPhoneNumberString
recordRecentForContactWithName:emailAddress:phoneNumber:
fileNameRaw
setFileNameRaw:
fileFormat
setFileFormat:
isBinary
setIsBinary:
localRelativePath
setLocalRelativePath:
fileSize
setFileSize:
XPropertiesData
setXPropertiesData:
primitiveNumberValueForKey:
primitiveSetNumberValue:forKey:
unsignedLongValue
URLForPendingFileCopy
setURLForPendingFileCopy:
setFirstObject:
setSecondObject:
secondObject
initWithFirstObject:secondObject:
setResult:
_populateSingleValueKeysForDiff:
_populateImmutableKeysForDiff:
_populateSingleValueRelationshipKeysForDiff:
_populateMultiValueRelationshipKeysForDiff:
differentSingleValueKeys
differentRelationshipSingleValueKeys
differentRelationshipMultiValueKeys
differentImmutableKeys
_populateIdentityKeysForDiff:
differentIdentityKeys
_nonNilObject
_keysToIgnoreForComputingDiff
indexesOfObjectsPassingTest:
objectsAtIndexes:
setDifferentSingleValueKeys:
knownDerivedAndSingleValueRelationshipKeys
setDifferentRelationshipSingleValueKeys:
diffWithObject:
setRelationshipSingleValueModifies:
_compareMultiValueRelationshipKey:forObject:againstObject:propertiesToIgnore:
setDifferentRelationshipMultiValueKeys:
setByAddingObjectsFromArray:
diffBetweenObject:andObject:
setRelationshipMultiValueAdds:
setRelationshipMultiValueRemoves:
setRelationshipMultiValueModifies:
setDifferentIdentityKeys:
setDifferentImmutableKeys:
relationshipMultiValueModifies
unionSet:
arrayWithArray:
relationshipMultiValueAdds
_addObject:forKey:toDiff:
relationshipMultiValueRemoves
_multiValueModifiedObjectsForKey:
_summarizeDiffsBetweenFirstObject:secondObject:mutableString:depth:
appendString:
_basicSummaryWithDepth:
_addSummaryWithDepth:toMutableString:forSingleValueKeys:firstObject:secondObject:
_addSummaryWithDepth:toMutableString:forRelationshipSingleValueKeys:firstObject:secondObject:
_addSummaryWithDepth:toMutableString:forRelationshipMultiValueKeys:firstObject:secondObject:
_addChangeStarIfChangedKey:onObject:
_addPaddedHeaderToMutableString:forKey:withDepth:
_addSummaryWithDepth:toMutableString:indentFirstLine:
_indentStringAtDepth:
stringByPaddingToLength:withString:startingAtIndex:
relationshipSingleValueModifies
changeSetForDiff
addChanges:
initWithSingleValueChanges:multiValueAdditions:multiValueRemovals:
differentKeys
summaryDictionary
summaryString
result
_result
_firstObject
_secondObject
_differentIdentityKeys
_differentImmutableKeys
_differentSingleValueKeys
_differentRelationshipSingleValueKeys
_differentRelationshipMultiValueKeys
_relationshipMultiValueAdds
_relationshipMultiValueRemoves
_relationshipMultiValueModifies
_relationshipSingleValueModifies
knownSummaryKeys
arrayByAddingObjectsFromArray:
_summaryWithDepth:
_startDate
_endDate
setLatitudeAndLongitudeFromAlternateUniverseObject:inChangeSet:
_structuredLocation
locationUID
initWithTitle:locationUID:
latitude
setLatitude:
longitude
setLongitude:
radius
setRadius:
mapKitHandle
setMapKitHandle:
updatedAlarmWithLocation:
initWithAlternateUniverseObject:inEventStore:withUpdatedChildObjects:
updatedStructuredLocation
referenceFrame
location
startTimeZone
endTimeZone
preferredLocation
fullDisplayStringWithTitle:address:
locationWithTitle:
setStructuredLocation:
updateMeltedAndCachedSingleRelationObject:forKey:frozenClass:
setStructuredLocationWithoutPrediction:
_initWithUserActivityData:
_createUserActivityDataWithOptions:completionHandler:
setAppLinkData:
setStartTimeZone:
setEndTimeZone:
startTimeZoneName
timeZoneFromTimeZoneName:withFloatingTimeZone:
timeZoneNameFromTimeZone:
setStartTimeZoneName:
endTimeZoneName
setEndTimeZoneName:
exportToICSWithOptions:
CADICSExportOptionsFromEKICSExportOptions:
CADObjectID
allowsContentModifications
isMutableSuggestionsCalendar
isMutableNaturalLanguageSuggestionsCalendar
isSelfOrganized
isOrganizedBySharedCalendarOwner
_validateAccessConsent:
_validateDeletableInCalendarWithError:
_validateDeletableBySharedCalendarShareeWithError:
accessGrantedForEntityType:
isSuggestedEventCalendar
isNaturalLanguageSuggestedEventCalendar
allowsScheduling
_isInSharedToMeCalendarWithNoSharingScheduling
isCurrentUser
isEditable
isExternallyOrganizedInvitation
externalData
metadataWithData:
x_props
isSubclassOfClass:
adjustDateFromUTC:allDay:timeZone:
dateInTimeZone:fromFloatingDateInGMT:
orderedSetWithCapacity:
isSnoozed
snoozedAlarms
_excludeAlarmDueToConnectionTrigger:
updateMeltedAndCachedMultiRelationObjects:forKey:
sortedArrayUsingSelector:
sortedAlarms
proximity
maxPublicProximity
isAbsolute
addCachedMeltedObject:forMultiValueKey:
removeCachedMeltedObject:forMultiValueKey:
calendarItemOwner
originalAlarm
setAcknowledgedDate:
setProximity:
findOriginalAlarmStartingWith:
setOriginalAlarm:
addAlarm:
_isOnlyChangedKey:
acknowledgedDate
singleRecurrenceRule
lastObject
setRecurrenceRules:
attendees
filterAttendeesPendingDeletion:
setAttendeesRaw:
_setSelfAttendee:
_removeAttendee:
addAttendee:
selfParticipantStatusRaw
initWithContacts:
matchingParticipantsFromItem:
sharedItemCreatedByFirstName
sharedItemCreatedByLastName
sharedItemCreatedTimeZoneName
setSharedItemCreatedTimeZoneName:
sharedItemModifiedByFirstName
sharedItemModifiedByLastName
sharedItemModifiedTimeZoneName
setSharedItemModifiedTimeZoneName:
contactIdentifierForCalendarItem:
contactIdentifiers
addContactIdentifier:forCalendarItem:
removeContactIdentifier:forCalendarItem:
canMoveToCalendar:fromCalendar:error:
_areOnlyChangedKeys:
canMoveOrCopyToCalendar:fromCalendar:error:
isStructured
_moveToCalendar:forCommittingItem:
_shouldDeleteAndAddForMoveFromCalendar:toCalendar:
_recursivelyPerformBlockOnSelfAndDetachedItems:forCommittingItem:
emptyMeltedCacheForKey:
setOriginalItem:
_generateNewUniqueID
setUniqueID:
setAttachments:
_adjustAfterRebaseForMovingFromOldSource:toNewSource:committingItem:
_clearFieldsAfterMovingToNewCalendarOnSameSource
_setCalendarRecursively:forCommittingItem:
_addObjectToPendingCommits:
setExternalData:
_deletePersistentItemAndDetachedItems:forCommittingItem:
initWithDate:
setEkExceptionDates:
isEqualToDate:
setDetachedItems:
setAppLink:
_determineMatchingApplicationBundleIdentifierWithOptions:
applicationProxyForIdentifier:
localizedName
activityType
webpageURL
_lp_simplifiedDisplayString
isOnlyAlarmAcknowledgedPropertyDirty
modifiedProperties
setModifiedProperties:
_updateHasRecurrenceRulesIfNeeded
_updateHasAttendeesIfNeeded
_updateHasNotesIfNeeded
canonicalizedEqualityTestValue1:value2:key:object1:object2:
knownRelationshipWeakKeys
knownDerivedRelationshipKeys
startDateRaw
setStartDateRaw:
setCalendarItemIdentifier:
uniqueId
setUniqueId:
localUID
setClientLocation:
setTravelStartLocation:
setLastModifiedDate:
calendarScale
setCalendarScale:
setAction:
appLink
defaultAlarms
setDefaultAlarmWasDeleted:
sequenceNumber
exportToICS
isDifferentFromCommitted
requiresDetach
allowsSpansOtherThanThisEvent
isDeletable
isSelfOrganizedInvitation
allowsCalendarModifications
allowsRecurrenceModifications
allowsAlarmModifications
allowsAttendeesModifications
actionsState
adjustDateFromUTC:
hasAlarms
setAlarms:
indexForAlarm:
snoozeAlarm:withTimeIntervalFromNow:
snoozeAlarm:withLocation:proximity:
isAlarmAcknowledgedPropertyDirty
removeAcknowledgedSnoozedAlarms
removeAllSnoozedAlarms
recurrenceRuleString
setSingleRecurrenceRule:
_hadRecurrenceRules
addRecurrenceRule:
removeRecurrenceRule:
startDateForRecurrence
_hadAttendees
setAttendees:
removeAttendee:
setSelfAttendee:
selfParticipantStatus
participantMatchingContact:
attendeeMatchingEmailAddress:
setOrganizer:
sharedItemCreatedByDisplayName
setSharedItemCreatedByDisplayName:
sharedItemCreatedByAddress
setSharedItemCreatedByAddress:
setSharedItemCreatedByFirstName:
setSharedItemCreatedByLastName:
sharedItemCreatedDate
setSharedItemCreatedDate:
sharedItemCreatedTimeZone
setSharedItemCreatedTimeZone:
sharedItemModifiedByDisplayName
setSharedItemModifiedByDisplayName:
sharedItemModifiedByAddress
setSharedItemModifiedByAddress:
setSharedItemModifiedByFirstName:
setSharedItemModifiedByLastName:
sharedItemModifiedDate
setSharedItemModifiedDate:
sharedItemModifiedTimeZone
setSharedItemModifiedTimeZone:
addAttachment:
removeAttachment:
hasAttachment
setContactIdentifiers:
canMoveToCalendar:error:
moveToCalendar:
_addDetachedItem:
_removeDetachedItem:
_deleteSelfAndDetached
setExceptionDates:
_addExceptionDate:
_removeExceptionDate:
updateWithAppLink:usedSelectedText:
_updateModifiedAlarmByAcknowledging
_willCommit
simulateLegacyBehaviors
perform:whileSimulatingLegacyBehaviors:
setSimulateLegacyBehaviors:
performWhileSimulatingLegacyBehaviors:
setWorkQueue:
setCallbackQueue:
_addPersistentNotificationObservers
_uninstallTimer
_removePersistentNotificationObservers
_removeTransientEventStoreChangeObserver
workQueue
internalTimeout
setInternalTimeout:
_resetIdleTimer
setInternalStore:
setInternalCreationBlock:
internalCreationBlock
setInternalChangedBlock:
internalChangedBlock
internalPurgingAllowed
setInternalPurgingAllowed:
internalStore
_eventStoreChangedNotification:
setIgnoreLowLevelDatabaseChangedNotifications:
timer
setTimer:
ignoreLowLevelDatabaseChangedNotifications
_fireChangedBlock
removeObserver:name:object:
callbackQueue
setTimeout:
timeout
setCreationBlock:
creationBlock
setChangedBlock:
changedBlock
setPurgingAllowed:
purgingAllowed
acquireCachedEventStoreOrCreate:
_databaseChangedExternally
_ignoreLowLevelDatabaseChangedNotifications
_internalPurgingAllowed
_workQueue
_timer
_internalTimeout
_internalCreationBlock
_internalChangedBlock
_internalStore
setWithObjects:
setInversePropertyIsApplicable:
contactLabel
setContactLabel:
routing
setRouting:
setReferenceFrame:
derivedFrom
setDerivedFrom:
setCalendarItemOwner:
setAlarmOwner:
alarmOwner
_setEventStore:
skipsPersistentObjectCopy
updatedFrozenObjectWithChanges:updatedChildren:
addChangesAndUpdateUniqueMultiValueObjects:
replaceUniqueMultiValueObjectsWithUpdatedObjects:
updatedFrozenObjectWithChanges:
_remObject
_path
_cacheContactData
contacts
isKeyAvailable:
lowercaseString
_nameComponentsForContact:reverse:
organizationName
setContactEmailAddresses:
setContactNameComponents:
setContactCompanyNames:
_nameComponentsWithGivenName:familyName:
_allParticipantsOnItem:
anyContactMatchesAnyParticipant:
anyContactMatchesParticipant:
matchingParticipantsFromParticipants:
contactEmailAddresses
contactNameComponents
contactCompanyNames
anyContactMatchesAnyParticipantFromItem:
setContacts:
_contacts
_contactEmailAddresses
_contactNameComponents
_contactCompanyNames
initWithExternalID:externalIDTag:inSource:
_externalIDTag
sharedToken
setJunkStatus:
saveEvent:span:commit:error:
junkStatus
junkStatusForInvitation:
cachedJunkStatus
componentsSeparatedByString:
_locationStringForLocations:
componentsJoinedByString:
clearDetectedConferenceURL
sourceType
conferenceURLDetected
conferenceURL
_detectConferenceURL
_prioritizedConferencesSources
_hasChangesForConferenceURLDetection
_updateConferenceURL
_canWriteConferenceURL
setConferenceURL:
setIsJunk:shouldSave:
setCachedJunkStatus:
_couldBeJunkCommon
locationsWithoutPrediction
setNotesCommon:
setURLCommon:
conferenceURLForDisplay
updateConferenceURLIfNeeded
reputationStore
junkStatusForInvitation:withReputationStore:
sendersEmail
shouldWhiteListOrganizerEmailFromJunkChecks:inReputationStore:
sendersPhoneNumber
shouldWhiteListOrganizerPhoneNumberFromJunkChecks:inReputationStore:
shouldWhitelistOrganizerEmailFromJunkChecks:
shouldWhitelistOrganizerPhoneNumberFromJunkChecks:
calendarRowIDs
valueForKeyPath:
sourceID
isMasterOrDetachedOccurrence
filters
ekPredicateFilterMatches:
property
isInteger
isString
stringValue
isDate
dateValue
comparison
operation
setStateChanged:
setParticipantAddressesToParticipants:
setInternalTimesWhenAllAttendeesCanAttend:
setInternalTimesWhenSomeAttendeesCanAttend:
setInternalOriginalConflictedParticipants:
setInternalProposedTimes:
setLeftoverSpans:
setAvailabilityRequestsQueue:
setProcessingQueue:
availabilityRequestsQueue
processingQueue
internalOriginalStartDate
internalOriginalEndDate
internalOriginalConflictedParticipants
internalTimesWhenAllAttendeesCanAttend
internalTimesWhenSomeAttendeesCanAttend
internalProposedTimes
internalSearchingForMoreTimesWhenAllAttendeesCanAttend
internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
setInternalSearchingForMoreTimesWhenAllAttendeesCanAttend:
_resetSearchFallbackNumbers
_attemptSearch
setInternalSearchingForMoreTimesWhenSomeAttendeesCanAttend:
setAvailabilityRequestInProgress:
participantAddressesToParticipants
leftoverSpans
setNextAvailabilityRangeStartDate:
setInternalOriginalStartDate:
setInternalOriginalEndDate:
setOriginalRangeStartDate:
setIgnoredEventID:
setOrganizerAddress:
_sendStateChange:
isEqualToTimeZone:
dateByAddingHours:inCalendar:
dateRoundedToNearestFifteenMinutesInCalendar:
originalRangeStartDate
isStartDateDirty
isEndDateDirty
isEqualToParticipant:
proposedStartDateForEvent:
internalProposedStarts
_selfOrganizerForNewlyScheduledEventWithAddress:
_transitionToConflictFoundStateAndSearch
noConflictRequired
ignoredEventID
initWithSource:startDate:endDate:ignoredEventID:addresses:resultsBlock:
isCancelled
error
spansIncludeBusyPeriod:
_participantforParticipantAddress:
setCompletionBlock:
addOperation:
initWithStartDate:endDate:conflictedParticipants:
remainingSearchAttempts
_haltSearchWithError:
availabilityRequestInProgress
nextAvailabilityRangeStartDate
availabilitySearchDurationMultiplier
setAvailabilitySearchDurationMultiplier:
_processResults:betweenStartDate:endDate:
setRemainingSearchAttempts:
stateChanged
stateAsString:
_generateTimeSpansForResults:betweenStartDate:endDate:
_spliceLeftTimeSpans:andNewTimeSpans:
_mergeAdjacentSpansWithSameConflictedParticipants:
_generateOpenFreeTimesFromTimeSpans:
_generateNonOptimalTimesFromTimeSpans:
_findLeftoverSpans:usingFreeTimes:andNonOptimalTimes:
setArray:
_binarySearchForIndexOfTimeSpanInArray:containingDate:
_invalidBinarySearchIndex
subarrayWithRange:
verifyIntegrityOfAvailabilityTimeSearchTimelines
_validateSpans:
conflictedParticipants
_addressesForParticipants:
isEqualToSet:
_span:hasSameConflictedParticipantsAsSpan:
_allButLastItemInArray:
setConflictedParticipants:
_allButFirstItemInArray:
CalIsBeforeDate:
initWithArray:
_insertUniqueParticipants:intoExistingParticipantsArray:
_filterOutUnreasonableTimeSlots:
_rankNonOptimalTimeSpans:
_findHighestRankedNonOptimalTimeSpans:
sortedArrayWithOptions:usingComparator:
showTypeAsBusy:
replaceObjectsInRange:withObjectsFromArray:
myFullName
localizedStringForKey:value:table:
initWithString:
organizerWithName:emailAddress:phoneNumber:address:isCurrentUser:
initWithStateChangedCallback:
originalStartDate
originalEndDate
originalConflictedParticipants
timesWhenAllAttendeesCanAttend
timesWhenSomeAttendeesCanAttend
proposedTimes
searchingForMoreTimesWhenAllAttendeesCanAttend
searchingForMoreTimesWhenSomeAttendeesCanAttend
searchForMoreTimesWhenAllAttendeesCanAttend
searchForMoreTimesWhenSomeAttendeesCanAttend
resetWithEvent:organizerAddressForNewlyScheduledEvent:
setNoConflictRequired:
setInternalProposedStarts:
organizerAddress
_noConflictRequired
_availabilityRequestInProgress
_internalSearchingForMoreTimesWhenAllAttendeesCanAttend
_internalSearchingForMoreTimesWhenSomeAttendeesCanAttend
_internalOriginalStartDate
_internalOriginalEndDate
_originalRangeStartDate
_internalProposedStarts
_ignoredEventID
_availabilityRequestsQueue
_participantAddressesToParticipants
_organizerAddress
_nextAvailabilityRangeStartDate
_availabilitySearchDurationMultiplier
_remainingSearchAttempts
_leftoverSpans
_internalTimesWhenAllAttendeesCanAttend
_internalTimesWhenSomeAttendeesCanAttend
_internalProposedTimes
_internalOriginalConflictedParticipants
_stateChanged
cal_serializableError
_cal_serializedEntryForKey:value:outKey:outValue:
cal_serializableUserInfo
cal_isCertificateError
cal_trustInfoCopy
_setInviteReplyCalendar:
shareeFirstName
shareeLastName
summary
cal_emailAddressString
cal_phoneNumberString
unloadPropertyForKey:
initWithInviteReplyCalendar:
inReplyTo
setInReplyTo:
setShareeDisplayName:
setShareeFirstName:
setShareeLastName:
setShareeURL:
setShareeStatus:
setSummary:
clearAlertedStatus
fetchAttachmentChangesInStore:resultHandler:
fetchAttachmentChangesInSource:resultHandler:
fetchAttachmentChangesInCalendar:resultHandler:
participantWithName:emailAddress:phoneNumber:url:
initWithName:emailAddress:phoneNumber:url:
setDisplayNameRaw:
stringAddingMailto
stringAddingTel
cal_hasSchemeMailto
cal_resourceSpecifierNoLeadingSlashes
displayNameRaw
doesParticipantURL:email:andPhoneNumber:matchParticipantURL:email:andPhoneNumber:
stringRemovingTel
componentsFromString:
isDetached
proposedStartDate
adjustedPersistedDateForDate:withAdjustmentMode:
setProposedStartDate:
setProposedStartDateStatus:
invitedBy
CalKeys
semanticIdentifierForParticipant:
participantWithName:url:
existingContact
newContact
nameUsingAddressAsBackup
comment
setComment:
isLocationRoom
setProposedStartDate:forEvent:
hasProposedStartDate
proposedStartDateStatus
inviterNameString
setInviterNameString
_owner
calendarWithID:
calendarFromEventStore:
isSharedCalendarInvitation
_sharingInvitationResponse
_allowedEntityTypes
spanDate
spanType
valueForSpanType:
dateType
initWithDate:dateType:spanType:
setSpanDate:
setDateType:
setSpanType:
_spanDate
_dateType
_spanType
setKey:withArray:
_rangeCompletelyCoversPeriodBetweenStartDate:endDate:
span
availabilityFreshnessWindow
_clampDateRangeForSpans:startDate:endDate:
_currentMaxSpanTypeIn:
setObject:atIndexedSubscript:
isBeforeDate:
isAfterDate:
initWithSpan:
cachedSpansFromSpans:
_eliminateOverlapsInResults:
initWithStartDate:endDate:
containsRange:
deDupSpans:
intersectsRange:
replaceObjectAtIndex:withObject:
sanitizeAndInsertResults:inRange:
spans
_cachedSpans
wrappedPredicate
mustStartInInterval
timeZoneWithAbbreviation:
occurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:
statusRaw
setStatusRaw:
pendingStatusRaw
setPendingStatusRaw:
lastModifiedParticipationStatus
setLastModifiedParticipationStatus:
originAppName
remListIDsWithAllLists:
fetchCompletedRemindersForEventKitBridgingWithCompletionDateFrom:to:withListIDs:error:
fetchIncompleteRemindersForEventKitBridgingWithDueDateFrom:to:withListIDs:error:
isCompleted
_start
_end
_completed
_stringForAlarmProximity:
semanticIdentifierForAlarmIsDefault:absoluteDate:relativeOffset:locationSemanticIdentifier:proximity:
setType:
needsAlert
isInvitation
acknowledgeWithEventStore:error:
isProposedNewTime
proposedStartDateIsInFutureForAttendee:
dotColor
hiddenFromNotificationCenter
event
setEvent:
_title
_URL
_dotColor
_hiddenFromNotificationCenter
_alerted
_couldBeJunk
_event
isExecuting
isFinished
main
willChangeValueForKey:
didChangeValueForKey:
_recordTypes
_finishWithError:
terms
resultLimit
_processResults:
setNumberOfMatchesExceededLimit:
performCalendarDirectorySearchWithAccountID:terms:recordTypes:resultLimit:resultsBlock:completionBlock:
cancelCalendarDirectorySearchWithID:
findLocations
findUsers
_processGroupsInResults:
_processLocationsInResults:
_processResourcesInResults:
_processPeopleInResults:
preferredAddress
setPreferredAddress:
principalPath
setPrincipalPath:
setError:
isSupported
initWithSource:query:resultsBlock:
isConcurrent
numberOfMatchesExceededLimit
_isFinished
_isExecuting
_query
_resultsBlock
_searchID
_numberOfMatchesExceededLimit
_error
errorWithEKErrorCode:description:
initWithObjectID:date:
setDate:
setTerms:
setFindLocations:
setFindUsers:
setResultLimit:
_findLocations
_findUsers
_terms
_resultLimit
status
attendeeReplyChanged
externalURL
setRecurrenceRule:
participationStatusModifiedDate
setParticipationStatusModifiedDate:
participationStatus
setParticipationStatus:
setAttendeeReplyChanged:
initWithParticipant:forEvent:
proposedStartDateDeclined
statusChanged
proposedStartDateChanged
commentChanged
publicObjectWithObjectID:
recurrenceRule
rsvpRequested
expanded
expandedProposedTimeAttendee
eventFromEventStore:
needsReply
startDateForNextOccurrence
setExpandedProposedTimeAttendee:
setExpanded:
_allDay
_timeChanged
_dateChanged
_attendeeReplyChanged
_expanded
_location
_startDateForNextOccurrence
_participationStatusModifiedDate
_timeZone
_participationStatus
_status
_recurrenceRule
_attendees
_invitedBy
_expandedProposedTimeAttendee
_statusChanged
_commentChanged
_proposedStartDateChanged
_proposedStartDateDeclined
_isCurrentUser
_comment
_proposedStartDate
calLocation
setCalLocation:
initWithStructuredLocation:
createStructuredLocation
_calLocation
_initWithFilePaths:orderedCalendarUIDs:orderedSourceUIDs:eventStore:calendar:options:
_createImportHandle
setAsynchronous:
_importWithCompletion:
setImportProgressAsIndeterminate
setCompletionCallback:
importFilePaths
_separateFilesForImport:
callCompletionWithSuccess:
importICalFiles
iCalFilesToImport
vCalFilesToImport
_separateICalFilesForITIP
_sortFilesByImportCalendar
_doImportFiles
callImportDroppedRemindersCallbackIfThereWereReminders
iTIPFiles
addArray:withKey:toStrongTableOfArrays:
nonITIPFiles
_findCalendarForExistingEvent:
addItem:withKey:toStrongTableOfArrays:
options
_findPreferredSourceForDocument:
_defaultImportCalendarRequiringSource:
addObject:toArray:
calendarsForEntityType:
isDefaultSchedulingCalendar
setImportError:
addArray:toArray:
selectCalendar
infoForNewCalendarForFiles:forITIPFiles:nonITIPFiles:
x_apple_calendar_color
green
blue
x_wr_calname
x_wr_caldesc
lastPathComponent
stringByDeletingPathExtension
selectCalendarWithTitle:color:description:error:
isPathToBackupFile
importFoundBackupFile
fileURLWithPath:
importFoundBackupFile:
isPathToICalData
dataWithContentsOfFile:
initWithData:options:error:
version
setValue:withKey:inDictionary:
isPathToVCalData
countReminders:
method
shouldImportContinueGivenDecision
shouldImportContinueGivenDecision:eventsAffected:
numInvalidEvents
setNumInvalidEvents:
calendarToICalFiles
importICSData:intoCalendars:options:
eventFromDocument:
eventsWithExternalIdentifier:inCalendars:
isEnabledForEvents
isDelegate
existingEventIDs
attendee
allSourceUIDs
preferredOwnerAddress
_isAnyAttendeeAddressFrom:organizer:equivalentTo:
_matchingAttendeeAddressesFrom:organizer:inSource:
addSet:withKey:toDictionaryOfSets:
_organizer:matchesDomainForURL:
addObject:toSet:
_cn_map:
anyObject
compareToLocalURL:
cal_isEquivalentToEmailAddress:
cal_isEquivalentToPhoneNumber:
ownerAddresses
rangeOfString:options:
substringFromIndex:
allCalendarUIDs
componentKeys
componentForKey:
componentOccurrencesForKey:
_getImportedCalendarItems
importError
completionCallback
asynchronous
importSetProgressAsIndeterminate
importDroppedReminders
allowedImportFileTypes
initWithFilePaths:orderedCalendarUIDs:orderedSourceUIDs:eventStore:options:
initWithFilePaths:calendar:options:
asyncImportWithCompletion:
syncImportWithCompletion:
async_queue
setAsync_queue:
setSelectCalendar:
setImportFoundBackupFile:
setImportDroppedReminders:
setShouldImportContinueGivenDecision:
importSetProgressValue
setImportSetProgressValue:
setImportSetProgressAsIndeterminate:
setOptions:
setAllCalendarUIDs:
setAllSourceUIDs:
setICalFilesToImport:
setVCalFilesToImport:
setCalendarToICalFiles:
calendarToITIPFiles
setCalendarToITIPFiles:
calendarToVCalFiles
setCalendarToVCalFiles:
setExistingEventIDs:
setITIPFiles:
setNonITIPFiles:
filesWithReminders
setFilesWithReminders:
droppedReminderCount
setDroppedReminderCount:
importedItems
setImportedItems:
_asynchronous
_importError
_async_queue
_selectCalendar
_importFoundBackupFile
_importDroppedReminders
_shouldImportContinueGivenDecision
_importSetProgressValue
_importSetProgressAsIndeterminate
_numInvalidEvents
_importFilePaths
_calendar
_options
_allCalendarUIDs
_allSourceUIDs
_iCalFilesToImport
_vCalFilesToImport
_calendarToICalFiles
_calendarToITIPFiles
_calendarToVCalFiles
_existingEventIDs
_iTIPFiles
_nonITIPFiles
_filesWithReminders
_droppedReminderCount
_importedItems
_completionCallback
components
changeID
initWithEntityType:changeID:
processFetchResults:
objectChangeWithProperties:
raise
objectIDWithCADObjectID:
CADObjectChangeIDsFromEKObjectChanges:
fetchObjectChangesInStore:resultHandler:
fetchObjectChangesInSource:resultHandler:
fetchObjectChangesInCalendar:resultHandler:
callClientResultsHandler:changesTruncated:latestToken:changes:
serializedPropertiesForConsumingChange
changedObjectID
_changeType
_changedObjectID
_changeID
_sequenceNumber
reminderSourceMapLock
eventSources
returnEventResults
reminderSources
returnReminderResults
_combineEventSources:withReminderSources:
performHoldingReminderSourceMapLock:
_rebuildSourceMapsWithEventSources:reminderSources:
reminderSourceIDToEventSourceIDMapping
setReminderSourceIDToEventSourceIDMapping:
setEventSourceIDToReminderSourceIDMapping:
isWritable
reminderSourceMap
eventSourceMap
eventSourceIDToReminderSourceIDMapping
getMapsWithReminderSourceMap:eventSourceMap:
initializeEKEventStorePlusReminders
combinedReminderAndEventSources
combineEventCalendars:withReminderCalendars:
eventSourceForReminderSource:
invalidateReminderSourceMaps
initSingleton
areBirthdaysEnabled
birthdayCalendarsInStore:
resetAllBirthdaysInStore:
disableBirthdayCalendarsInStore:
initWithQueue:andBlock:
integerForKey:
setInteger:forKey:
_localeChanged
localeIdentifier
checkForFailures
executeBlock
registerForContactChangeNotifications:
initWithBirthdayCalendarModifications
initWithCreationBlock:
eventStoreProvider
boolForKey:
setBool:forKey:
removeCalendar:commit:error:
calendarForEntityType:eventStore:
localBirthdayCalendarSource
bundleForClass:
setCGColor:
setCalendarIdentifier:
saveCalendar:commit:error:
contactStore
initWithKeysToFetch:
birthday
nonGregorianBirthday
enumerateContactsWithFetchRequest:error:usingBlock:
eventWithEventStore:
CalDateFromBirthdayComponents:
CalDisplayName
birthdayStringForContactName:eventDate:birthDate:lunarCalendar:
defaultAlarmOffset
alarmWithRelativeOffset:
setBirthdayContact:
setLunarCalendarString:
identifier
insertEventWithContact:forDateComponents:intoCalendar:inStore:
birthdayCalendarsCreateIfNeeded:inStore:originalIdentifier:originalAlarms:ignoreAlarms:
allContactsWithBirthdays
_insertEventsForContact:intoCalendar:inStore:
predicateForMasterEventsInCalendar:
birthdayContactIdentifier
removeEvent:span:commit:error:
birthdayContactName
unifiedContactWithIdentifier:
enumerateEventsMatchingPredicate:usingBlock:
sharedListener
contactsInserted:updated:deleted:
contactsReset
addBirthdayCalendars
disableBirthdayCalendars
_updateQueue
_updateJobQueue
_needsReset
absoluteDate
setAbsoluteDate:
relativeOffset
setRelativeOffset:
alarmType
setAlarmType:
isDefaultAlarm
calendarOwner
setCalendarOwner:
setIsDefaultAlarm:
setSnoozedAlarms:
suggestionInfo
initWithEnabled:weekday:startTime:endTime:timeZone:
enabled
setEnabled:
weekday
setWeekday:
startTime
setStartTime:
endTime
setEndTime:
_enabled
_weekday
_startTime
_endTime
_eventStorePurger
changedByAddress
changedByFirstName
changedByLastName
changedProperties
publicStatus
convertToReminderKitFrequency:
convertToReminderKitWeekday:
loadSpecifierDaysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:
recurrenceEndWithOccurrenceCount:
recurrenceEndWithEndDate:
accountID
initRecurrenceRuleWithObjectID:accountID:reminderID:frequency:interval:firstDayOfTheWeek:daysOfTheWeek:daysOfTheMonth:monthsOfTheYear:weeksOfTheYear:daysOfTheYear:setPositions:end:
convertFromReminderKitFrequency:
convertFromReminderKitWeekday:
remWeekdayToEKWeekday:
initWithDayOfTheWeek:weekNumber:
ekWeekdayToREMWeekday:
daysOfTheWeekFromREMRecurrenceRule
remDaysOfTheWeekFromEKDaysOfTheWeek:
setLocalUID:
setRecurrenceDate:
setIdentifierString:
_splitIdentifier:intoLocalUID:recurrenceDate:
recurrenceDate
_recurrenceIdentifierWithRecurrenceDate:localUID:stripTime:stripTimeZone:
identifierString
_dateFormatStripTime:stripTimeZone:
dateWithTimeIntervalSince1970:
timeIntervalSince1970
recurrenceIdentifierWithLocalUID:recurrenceDate:
recurrenceIdentifierWithString:
localUIDForIdentifierString:
_recurrenceStringForDate:stripTime:stripTimeZone:
_localUID
_recurrenceDate
_identifierString
initWithChangeSet:
singleValueChanges
_initWithChangeSet:filter:
filteredDictionaryPassingTest:
setIsNew:
isModified
setIsModified:
isSaved
setIsSaved:
isDeleted
setIsDeleted:
isUndeleted
setIsUndeleted:
initWithDictionary:
setSingleValueChanges:
setMultiValueAdditions:
setMultiValueRemovals:
rollbackChanges
changedSingleValueKeys
changedMultiValueKeys
_isNewAndUnsaved
valueForSingleValueKey:basedOn:and:
changeSingleValue:forKey:basedOn:and:
addChanges:shouldCopyKeyCallback:
removeFromChanges:forMultiValueKey:basedOn:and:
_addToChanges:forMultiValueKey:basedOn:and:shouldCopyKeyCallback:
_semanticIdentifierToObjectMapForObjects:
_cleanupEmptySetsForMultiValueKey:
callStackSymbols
CalDictionaryWithEmptyObjectsRemoved
initWithChangeSet:changesToSkip:
initWithChangeSet:changesToKeep:
rollbackChangesForKeys:
markChangesAsSaved
unsavedMultiValueAddedObjectsForKey:
unsavedMultiValueRemovedObjectsForKey:
valuesForMultiValueKey:basedOn:and:
isUniqueAddedObject:forKey:
replaceMultiChangeAddedObject:withObject:forKey:
addToChanges:forMultiValueKey:basedOn:and:
isEffectivelyEqual:
_skipsPersistentObjectCopy
_isModified
_isSaved
_isDeleted
_isUndeleted
_singleValueChanges
_multiValueAdditions
_multiValueRemovals
_setNotificationsCollectionFlag
_registerObject:
_hasNotificationsCollectionFlag
initWithOptions:
addNotification:
removeNotification:
inviteReplyNotificationFromEventStore:
removeInviteReplyNotification:error:
suggestedEventInfoWithOpaqueKey:uniqueKey:
token
_token
initWithEntityClass:predicate:store:
signpostHandle
predicateFormat
_createOSActivity
signpostStart
_startActualWithCompletion:synchronous:
_fetchObjectIDsActualWithCompletion:synchronous:
_startProcessingWithCompletion:synchronous:processor:
signpostEndWithError:count:
shouldLoadDefaultProperties
loadedValues
registerFetchedObjectWithID:withDefaultLoadedPropertyKeys:values:
occurrenceDate
_startActivityWithCompletion:synchronous:
_startFetchObjectIDsActivityWithCompletion:synchronous:
searchWithEntityClass:predicate:store:
terminate
startWithCompletion:
runSynchronously
fetchObjectIDs
_entityClass
_predicate
_cancellationToken
_finished
_isCancelled
_retryCount
reminderIdentifier
URLFragmentAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
setParentID:
allowReminders
generateUniqueIDWithReminder:calendar:
_resetIfBackingObjectIsOfClass:fetchResetFrozenObjectBlock:
reminderWithEventStore:
_removeSnoozedAlarmsFromReminder:usingDueDate:
firstAlertDate
setFirstAlertDate:
clearParentID
bestDisplayAlarm
parentID
_startDateComponents
_dueDateComponents
_parentID
fetchRecurrenceChangesInStore:resultHandler:
fetchRecurrenceChangesInSource:resultHandler:
fetchRecurrenceChangesInCalendar:resultHandler:
_initWithOptions:eventStore:eventStoreGetter:
_killSyncTimer:
stop
attemptReload
_eventStoreChanged
notificationQueue
_killTimer
isMonitoringOnlyNotificationCount
notificationReferences
attemptReloadSynchronously:
isDataProtected
eventNotificationCount
_fetchEventNotificationReferencesFromEventStore:earliestExpiringNotification:
_updateTimerFireDate:
postNotificationName:object:userInfo:
_addRemovedOrAddedObjectIDsTo:oldNotifications:newNotifications:
minusSet:
_timerFired
initWithFireDate:serviceIdentifier:target:selector:userInfo:
setMinimumEarlyFireProportion:
mainRunLoop
scheduleInRunLoop:
_syncDidStart
_syncDidEnd:
_notificationCountChangedExternally
_alertPrefChanged
_databaseChanged
trackChangesInEventStore
adjust
blacklistedNotificationQueue
eventNotificationsFilteredByShowsNotificationsFlag:earliestExpiringNotification:
dateWithTimeIntervalSinceNow:
_syncTimerFired:
initWithFireDate:interval:target:selector:userInfo:repeats:
addTimer:forMode:
_resetSyncTimer
EKObjectIDsFromCADObjectIDs:
requestedDarwinNotifications
addBlacklistedNotificationObjectID:
blacklistedRowIDs
initWithOptions:eventStore:
initWithOptions:eventStoreGetter:
notificationCount
handleDarwinNotification:
eventStorePurger
_eventStoreGetter
_running
_nextFireTime
_syncTimer
_pendingChanges
_lastChangedTimestamp
_changedIDsValid
_changedIDs
_ignoreSyncTimer
_initialCheck
_shouldInstallPersistentTimer
_useSyncIdleTimer
_registerForDarwinNotifications
_filteredByShowsNotificationsFlag
_computeChangedNotificationSet
_automaticallyFaultNotifications
_lastExpirationTimerFireDateWasInThePast
_isMonitoringOnlyNotificationCount
_notificationCount
_notificationReferences
_notificationQueue
_displayName
_preferredAddress
_principalPath
setAvailabilityFreshnessWindow:
saveGeocodedLocationsInTravelEngine
setSaveGeocodedLocationsInTravelEngine:
overrideTravelAdvisoryHypothesis
setOverrideTravelAdvisoryHypothesis:
overriddenTravelAdvisoryHypothesisTransportType
setOverriddenTravelAdvisoryHypothesisTransportType:
overriddenTravelAdvisoryHypothesisConservativeTravelTime
setOverriddenTravelAdvisoryHypothesisConservativeTravelTime:
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
setOverriddenTravelAdvisoryHypothesisEstimatedTravelTime:
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
setOverriddenTravelAdvisoryHypothesisAggressiveTravelTime:
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
setOverriddenTravelAdvisoryHypothesisSupportsLiveTraffic:
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
setOverriddenTravelAdvisoryHypothesisCurrentTrafficDensity:
overriddenTravelAdvisoryHypothesisRouteName
setOverriddenTravelAdvisoryHypothesisRouteName:
overriddenTravelAdvisoryHypothesisTravelState
setOverriddenTravelAdvisoryHypothesisTravelState:
preventMarkingTravelAdvisoryEntriesAsDismissed
setPreventMarkingTravelAdvisoryEntriesAsDismissed:
forceDisplayOfNewTravelAdvisoryHypotheses
setForceDisplayOfNewTravelAdvisoryHypotheses:
performAgendaEntryEqualityChecksInTravelEngine
setPerformAgendaEntryEqualityChecksInTravelEngine:
setVerifyIntegrityOfAvailabilityTimeSearchTimelines:
showDepartureDateForTransitTimeToLeave
setShowDepartureDateForTransitTimeToLeave:
shouldBypassTravelEngineThrottle
setShouldBypassTravelEngineThrottle:
syntheticTravelAdvisoriesEnabled
setSyntheticTravelAdvisoriesEnabled:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
createEventInEventStore:
initRequiringSecureCoding:
encodeObject:forKey:
encodedData
serializeEvent:error:
deserializeData:error:
versionFromData:error:
initWithEventStore:withVersion:
_version
eventUUID
excludeTimedEvents
excludeAllDayEvents
excludeDeclined
excludeProposed
isProposedTimeEvent
excludeDeclinedUnlessProposed
localizedStringWithFormat:
errorWithCADResult:action:
dictionaryWithObjectsAndKeys:
_defaultDescriptionForCode:
errorWithEKErrorCode:description:underlyingError:reason:
initWithDomain:code:userInfo:
errorWithEKErrorCode:underlyingError:
errorWithEKErrorCode:description:reason:
setIsCurrentUser:
scheduleAgent
setScheduleAgent:
fetchOrganizerChangesInStore:resultHandler:
fetchOrganizerChangesInSource:resultHandler:
fetchOrganizerChangesInCalendar:resultHandler:
setInviteReplyCalendar:
sharedInstance
initWithDateProvider:
internalActive
setInternalActive:
_refresh
startOfLeaveNowPeriodInternal
startOfRunningLatePeriodInternal
suggestedDepartureDate
setStartOfLeaveNowPeriodInternal:
aggressiveDepartureDate
setStartOfRunningLatePeriodInternal:
setInternalPeriodChangedCallback:
internalPeriodChangedCallback
internalPeriod
_refreshPeriod
_refreshTimer
dateProvider
stringForPeriod:
setInternalPeriod:
_refreshOnDate:
timeIntervalSinceNow
activate
deactivate
active
startOfLeaveNowPeriod
startOfRunningLatePeriod
updateWithHypothesis:
setPeriodChangedCallback:
periodChangedCallback
period
_internalActive
_startOfLeaveNowPeriodInternal
_startOfRunningLatePeriodInternal
_internalPeriod
_internalPeriodChangedCallback
_dateProvider
endDateRaw
setEndDateRaw:
travelTime
availability
setAvailability:
privacyLevel
setPrivacyLevel:
setTravelTime:
setOriginalStartDate:
travelAdvisoryBehavior
setTravelAdvisoryBehavior:
responseComment
setResponseComment:
locationPredictionState
setLocationPredictionState:
birthdayID
setBirthdayID:
canForward
setCanForward:
disallowProposeNewTime
setDisallowProposeNewTime:
isPropertyDirty:
pushDirtyProperties:
setAttributes:relations:objectID:eventStore:error:
needsOccurrenceCacheUpdate
setNeedsOccurrenceCacheUpdate:
invitationChangedProperties
setInvitationChangedProperties:
externalTrackingStatus
setExternalTrackingStatus:
actions
setActions:
setBirthdayContactIdentifier:
setBirthdayContactName:
recurrenceSet
setRecurrenceSet:
setSuggestionInfo:
firedTTL
setFiredTTL:
diffSummaryBetweenObject:andObject:
EKObjectChangeSummarizer_singleValueDiffKeys
EKObjectChangeSummarizer_multiValueDiffKeys
changeSummaryForObject:
transportType
conservativeDepartureDate
conservativeTravelTime
estimatedTravelTime
aggressiveTravelTime
routeName
supportsLiveTraffic
currentTrafficDensity
geoTrafficDensityAsString:
trafficDensityDescription
travelState
isEqualToHypothesis:
initWithTransportType:conservativeDepartureDate:conservativeTravelTime:suggestedDepartureDate:estimatedTravelTime:aggressiveDepartureDate:aggressiveTravelTime:routeName:supportsLiveTraffic:currentTrafficDensity:trafficDensityDescription:travelState:
supportsSecureCoding
syntheticHypothesisWithStartDate:conservativeTravelTime:estimatedTravelTime:aggressiveTravelTime:
encodeWithCoder:
initWithCoder:
_transportType
_conservativeDepartureDate
_conservativeTravelTime
_suggestedDepartureDate
_estimatedTravelTime
_aggressiveDepartureDate
_aggressiveTravelTime
_routeName
_supportsLiveTraffic
_currentTrafficDensity
_trafficDensityDescription
_travelState
setTransportType:
setConservativeDepartureDate:
setConservativeTravelTime:
setSuggestedDepartureDate:
setEstimatedTravelTime:
setAggressiveDepartureDate:
setAggressiveTravelTime:
setRouteName:
setSupportsLiveTraffic:
setCurrentTrafficDensity:
setTrafficDensityDescription:
setTravelState:
fetchEventActionChangesInStore:resultHandler:
fetchEventActionChangesInSource:resultHandler:
fetchEventActionChangesInCalendar:resultHandler:
initWithValue:
setValue:
_value
temporaryObjectIDWithEntityType:
isTemporary
_isPendingUpdate
_isPendingDelete
_trackModifiedObject:
_loadedPropertyKeys
_loadedPropertyForKey:
_propertyForKey:
_relationForKey:
toMany
_releaseLoadedProperties
_setDefaultPropertiesLoaded:
ownsRelatedObject
_loadDefaultPropertiesIfNeeded
_takeValues:forKeys:
_setProperty:forKey:forRelation:isUpdatedProperty:
_createUpdatedPropertiesIfNeeded
changed
_createLoadedPropertiesIfNeeded
_loadChildIdentifiersForKey:values:
_setProperty:forKey:isUpdatedProperty:
_loadRelationForKey:value:
inversePropertyNames
shouldSetInverseProperty:onObject:forObject:
_addObjectCore:toValues:relation:
_removeObjectCore:fromValues:relation:
_primitiveValueForKey:loader:
_primitiveSetValue:forKey:daemonSetter:
_loadStringValueForKey:
isPropertyLoaded:
_setProperty:forKey:isRelation:isUpdatedProperty:
_takeValuesForDefaultPropertyKeys:values:
_areDefaultPropertiesLoaded
removeLastObject
coCommitObjects
stringWithCapacity:
_shouldRetainPropertyForKey:
allObjectsWithChangesRelatedToObjects:
_setObjectID:
saved
_setPendingInsert:
_setPendingUpdate:
_setPendingDelete:
primitiveAddRelatedObject:forKey:
primitiveRemoveRelatedObject:forKey:
primitiveDoubleValueForKey:
primitiveSetDoubleValue:forKey:
takeValues:forKeys:
takeValuesForDefaultPropertyKeys:values:
dump
_lock
_coCommitObjects
_loadedProperties
_updatedProperties
fetchParticipantChangesInStore:resultHandler:
fetchParticipantChangesInSource:resultHandler:
fetchParticipantChangesInCalendar:resultHandler:
initWithArray:copyItems:
initWithRecurrenceRule:
createRecurrenceRule:
_frequency
_interval
_recurrenceEnd
_firstDayOfTheWeek
_daysOfTheWeek
_daysOfTheMonth
_daysOfTheYear
_weeksOfTheYear
_monthsOfTheYear
_setPositions
coordinate
date:representsApproachingDepartureDateForHypothesis:
date:representsLatenessForHypothesis:
travelStateIndicatesTravelingTowardDestination:
formattedLocationCoordinates:
geoRouteHypothesisTravelStateForString:
geoTransportTypeAsString:
geoTransportTypeForString:
geoTrafficDensityForString:
authorizationStatusAsString:
geoTransportTypeForCalLocationRoutingMode:
date:representsImmediateDepartureForHypothesis:
maximumAllowableTravelTime
minimumAllowableTravelTime
cadRouteHypothesisForEKTravelEngineHypothesis:
sharedEventStore
initWithEventStore:
_sharedEventStore
CALFreeBusyTypeFromEKAvailType:
getCALFreeBusyFromEKSpans:inRange:
_orderForType:
leastAvailabileFreeBusyTypeForArray:
getCALFreeBusyFromResults:forAttendees:inRange:
summarizedAvailabilityTypeForSpans:
_whiteListedClassesForArchivingLastSyncErrorUserInfo
archiveDictionary:whitelistedClasses:error:
unarchiveDictionaryFromData:whitelistedClasses:error:
dataFromErrorUserInfo:
errorUserInfoFromData:
resourceChanges
setResourceChanges:
addResourceChange:
removeResourceChange:
originalOccurrenceStartDate
initWithName:
_isAllDay
setOccurrenceIsAllDay:
_adjustedPersistedDateForDate:withAdjustmentMode:pinMode:clientCalendarDate:
setOccurrenceStartDate:
setOccurrenceEndDate:
effectiveTimeZone
differenceAsDateComponents:units:
calendarDateByComponentwiseAddingComponents:
eventOccurrenceID
recurrenceIdentifier
occurrenceStartDate
absoluteTime
postNotificationName:object:
originalOccurrenceEndDate
_clearLocationPredictionCacheIfNotFrozen
CalCalendarWithUnsanitizedCalendarIdentifier:
_committedStartDate
isPhantom
setIsPhantom:
setOriginalOccurrenceIsAllDay:
_updateDefaultAlarms
_updateStartDateForDate:withAdjustmentMode:
_updateEndDateForDate:withAdjustmentMode:
forceSetTimeZone:
clearCachedTimeValues
startDateIncludingTravel
_setStartDate:andClearProposedTimes:
dateForDayInTimeZone:
ek_ios_dateForEndOfDayInTimeZone:
_pinDate:withPinMode:
setOriginalOccurrenceStartDate:
occurrenceEndDate
setOriginalOccurrenceEndDate:
setProposedStartDateChanged:
setCommentChanged:
setStatusChanged:
_settingTimeZoneChangesStartEndDates
_isOriginalOccurrenceStartDateSameAsCommittedStartDate
_isParticipantStatusDirty
allowsParticipationStatusModifications
supportedEventAvailabilities
_eventAvailabilityForParticipantStatus:supportedEventAvailabilities:isAllDayEvent:
currentUserMayActAsOrganizer
initWithObjects:
sharedAutoupdatingCurrentCalendar
month
allowsAvailabilityModifications
defaultAllDayAlarm
defaultTimedAlarm
_removeDefaultAlarms
_addDefaultAlarms
setDefaultAlarm:
_setInvitationStatusAlertedIfNecessary
_setInvitationStatusUnalertedIfNecessary
_shouldAlertInviteeDeclines
initWithTimeInterval:sinceDate:
components:fromDate:toDate:options:
hour
minute
privacyDescription
routingModeEnumForCalRouteType:
isFacebookBirthdayCalendar
isSubscribedHolidayCalendar
allowsPrivacyLevelModifications
_invitationChangedPropertyForFlag:
_setInvitationChangedProperty:forFlag:
serverSupportedProposeNewTime
hasOwnerEmailAddress
setPredictedLocationFrozen:
_updatePredictedLocationCacheIfNeeded
roomAttendees
removeConferenceRooms:
_conferenceRoomDisplayStrings
setStructuredLocation:preserveConferenceRooms:
removeObjectsInArray:
displayString
_needsPredictedLocationCacheUpdateHoldingLock
_updatedPredictedLocationRespectingTimeoutBudgetForEvent:error:
localizedDescription
_firstNonConferenceRoomLocationTitle
isMainThread
locationPredictionForEvent:error:timeout:
performWithReadLock:
_updatePredictedLocationCacheIfNeededHoldingLock
performWithWriteLock:
_clearLocationPredictionCacheIfNotFrozenHoldingLock
preferredLocationWithoutPrediction
setPredictedLOI:
isPrediction
shouldDoLocationPredictionForEvent:
isPrivateEventSharedToMe
isAllDayDirty
hasAttachmentChanges
_hasBasicChangesRequiringSpanAll
_hasRecurrenceRuleChangeRequiringSpanAll
_basicChangesRequiringSpanAll
_hasOrHadRecurrenceRule
hasUnsavedChangesInKeys:
automaticEventLocationGeocodingAllowed
hasKnownSpatialData
eligibleForTravelAdvisories
get_enableTravelAdvisoriesForAutomaticBehavior
_relatedCachedTimeKeys
clearCachedValuesForKeys:
startOfDayForDate:
cachedValueForKey:expectingCachedValue:forMasterKey:relatedKeys:populateBlock:
startOfDayForStartDateInCalendar:
daysSpannedInCalendar:
dateByAddingDays:inCalendar:
daysSpannedFromStartDate:toEndDate:allDay:inCalendar:
isMultiDayTimedEventWithStartDate:endDate:allDay:inCalendar:
isSameDayAsDate:inCalendar:
dateOnlyComponentsInCalendar:
setHour:
dateFromComponents:
_resetInternalState
pendingStatus
hasValidEventAction
_hasExternalIDOrDeliverySource
pendingParticipationStatus
_travelTimeInternalDescription
clearModifiedFlags
setClearModifiedFlags:
validateAndUpdateOccurrenceDateFieldsAfterRefresh
postModifiedNotification
_committedEndDate
setRequiresDetachDueToSnoozedAlarm:
validateWithSpan:error:
allowEvents
_isParticipationStatusDirty
validateRecurrenceRule:error:
_validateDatesAndRecurrencesGivenSpan:error:
endLocation
generateUniqueIDWithEvent:originalEvent:calendar:
_adjustForNewCalendarBeforeCommit
responseMustApplyToAll
requiresDetachDueToSnoozedAlarm
_detachWithStartDate:newStartDate:future:
_isSimpleRepeatingEvent
conformsToRecurrenceRules:
_isSignificantlyDetachedComparedToMaster:shouldIgnorePartStat:
_propagateChangesToDetachedEvents:significantlyDetachedEvents:startDateOffset:duration:calendar:
occurrenceIsAllDay
_clearExceptionDatesAndUpdateDetachedOriginalDates
_filterExceptionDates
_applyTimeChangesToMaster
_updateModifiedPropertiesForThisEventAndAllDetachments
_updateModifiedProperties
knownKeysToSkipForFutureChanges
addChangesFromObject:except:
dateByAddingComponents:toDate:options:
knownKeysToUseForFutureChanges
addChangesFromObject:keep:
_updateMasterDate:forChangeToOccurrenceDate:fromOriginalOccurrenceDate:
strictestEventPrivateValue
_addOrganizerToRecentsIfNeeded
_addNewAttendeesToRecentsIfNeeded
_clearOriginalDateFields
revert
originalOccurrenceIsAllDay
startCalendarDate
calendarTimeZone
_keysToChangeForDuplicateWithOptions:
dateForStartOfDayInTimeZone:
_occurrenceExistsOnDate:timeZone:
_checkStartDateConstraintAgainstDate:timeZone:error:
durationOverlapsRecurrenceInterval
overlapsWithOrIsSameDayAsEventInSeries
_validateAlarmIntervalConstrainedToRecurrenceInterval:
_deleteFromOccurrenceDateOnward:
_deleteThisOccurrence
_updateSelfFromDetachedEventIfNeededForDelete
arrayWithObject:
enumerateObjectsWithOptions:usingBlock:
_cancelDetachedEventsWithSpan:
_eventIsTheOnlyRemainingOccurrence
_noRemainingEarlierOccurrences
_shouldCancelInsteadOfDeleteWithSpan:
_cancelWithSpan:error:
_shouldDeclineInsteadOfDelete
_deleteWithSpan:error:
isFirstOccurrence
distantPast
distantFuture
_shouldPreserveFutureWhenSlicingWithStartDate:newStartDate:
masterEvent
emptyMeltedCacheForKeys:
_resetAfterUpdatingChangeSetOrBackingObject
updateEventToEvent:commit:
isDate:inSameDayAsDate:
isEqualToLocation:
infoWithConflicts:needsAction:event:
potentialConflictOccurrenceDatesInTimePeriod:
predicateForEventsWithStartDate:endDate:calendars:loadDefaultProperties:
eventsMatchingPredicate:
_fetchedEventIsConflict:forStartDate:endDate:
isTentative
dateWithTimeInterval:sinceDate:
rangeWithStartDate:duration:
infoWithConflictsInSeries:outOf:withPeriod:conflictingDates:
updateFromMapItem:
_clearAttendeeChangedFlags
setAttendeeComment:
setAttendeeStatus:
setAttendeeProposedStartDate:
setAttendeeDeclinedStartDate:
isDifferentWithDiff:
knownRequireRSVPKeys
intersectsSet:
_diff:isDifferentFromCommittedEventHelperRequiresReschedule:
currentUserGeneralizedParticipantRole
isDifferentAndModifiedAttendeesWithDiff:
knownPerUserPropertyKeys
initWithSet:
diffFromCommitted
isDifferentAndRequiresRescheduleWithDiff:
isDifferentAndRequiresRSVPWithDiff:
isDifferentAndHasUnscheduledAttendeesWithDiff:
_requirementsToMoveOrCopyToCalendarHelperAllowedToMoveOrCopyEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperDuplicationRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperAlterationsRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperReinviteAttendeesRequiredToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperNeedToRemoveOriginalToMoveEventFromCalendar:toCalendar:
_requirementsToMoveToCalendarHelperRemoveAttendeesRequiredToMoveEventFromCalendar:toCalendar:
requirementsToMoveFromCalendar:toCalendar:
canMoveToCalendar:fromCalendar:allowedRequirements:error:
_canMoveOrCopyFromCalendar:toCalendar:allowedRequirements:error:
seriesHasOutOfOrderEvents
seriesHasOverlappingOrOnSameDayOrOutOfOrderEvents
CalGregorianGMTCalendar
_nsCalendar
component:fromDate:
_suggestedStartDateHelperRecurrenceRuleRequiresExpansion:forDate:
dateWithDatePartFromDate:timePartFromDate:inCalendar:
isSameWeekAsDate:inCalendar:
roundToCurrentWeekInCalendar:withFirstWeekdayIndex:
URLForNoMail
isPrivacySet
supportsMultipleAlarms
_hasAbsoluteAlarms
suggestedStartDateForCurrentRecurrenceRule
supportsURLs
isValidAttendee:forCalendar:
supportsMultipleDaysInMonthlyRecurrence
supportsMultipleMonthsInYearlyRecurrence
supportsYearlyRecurrenceWithArbitraryInterval
sharedOwnerAddress
isCurrentUserInvitedAttendee
_calendarsAreSharedToMeInSameSourceAndHaveSameOwner:
externalUriScheme
_coercedEventAvailabilityForDesiredAvailability:supportedAvailabilities:
isStatusDirty
phantomMaster
setPhantomMaster:
startCalendarDateIncludingTravelTime
overrideStartDate:
durationIncludingTravel
endCalendarDate
isMaster
supportsParticipationStatusModificationsWithoutNotification
allowsParticipantStatusModifications
_userAddressesRepresentInvitedAttendee:checkEmailAddresses:
markEventAsAttendeeForward
_parentParticipationStatus
birthdayPersonID
isBirthday
lunarCalendarString
makeRecurrenceEndDateBased
makeRecurrenceEndCountBased
hasComplexRecurrence
clearInvitationStatus
addEventAction:
removeEventAction:
isAlerted
setIsAlerted:
proposedEndDate
travelRoutingMode
allowsTravelTimeModifications
allowsAllDayModifications
locationIsAConferenceRoom
attendeeComment
attendeeStatus
attendeeProposedStartDate
attendeeDeclinedStartDate
allowsProposedTimeModifications
supportsAddingAttachments
addConferenceRooms:
confirmPredictedLocation:
rejectPredictedLocation
hasPredictedLocation
setLocationPredictionAllowed:
setEndLocation:
compareStartDateWithEvent:
compareStartDateIncludingTravelWithEvent:
canDetachSingleOccurrence
changingAllDayPropertyIsAllowed
hasChangesRequiringSpanAll
automaticLocationGeocodingAllowed
travelAdvisoryBehaviorIsEffectivelyEnabled
startOfDayForEndDateInCalendar:
isMultiDayTimedEventInCalendar:
canBeRespondedTo
commitWithSpan:error:
isSignificantlyDetached
isSignificantlyDetachedIgnoringParticipation
hasAttendeeProposedTimes
duplicateWithOptions:
countOfAttendeeProposedTimes
allowsResponseCommentModifications
removeWithSpan:error:
isMainOccurrence
isOnlyOccurrence
privacyLevelString
updateEventToEvent:
scanForConflicts
updateWithGeocodedMapItemAndSaveWithCommit:eventStore:error:
launchURL
dismissAcceptedProposeNewTimeNotification
isEqual:comparingKeys:
isDifferentAndHasForwardedAttendeesWithDiff:
isDifferentAndHasNewProposedTimeWithDiff:
isDifferentExceptingPerUserPropertiesWithDiff:
isDifferentFromCommittedEventAndRequiresReschedule
isDifferentFromCommittedEventAndRequiresRSVP
isDifferentFromCommittedEventAndHasUnscheduledAttendees
requirementsToMoveToCalendar:
requiresCopyToMoveFromCalendar:toCalendar:
birthdayPersonUniqueID
setProposedEndDate:
_cachedLocationPrediction
_cachedLocationPredictionExpirationDate
_locationPredictionFrozen
_locationPredictionAllowed
_locationPredictionLock
_occurrenceIsAllDay
_requiresDetachDueToSnoozedAlarm
_currentUserInvitedAttendee
_clearModifiedFlags
_birthdayPersonUniqueID
_occurrenceStartDate
_occurrenceEndDate
_originalOccurrenceStartDate
_originalOccurrenceEndDate
_originalOccurrenceIsAllDay
_proposedEndDate
CalDateByComponentwiseAddingSeconds:inCalendar:
initWithName:emailAddress:phoneNumber:address:isCurrentUser:
setCurrentUser:
fetchRemindersForEventKitBridgingWithListIDs:error:
_calendarIdentifierSet
availabilityCache
setKey:withObject:
setKey:withDate:
setKey:withPointerAddress:
_availabilityCache
_addresses
_requestID
setDataProtectionObserver:
_dataProtectionStateChanged
dataProtectionObserver
setStateChangedCallback:
dataIsAccessible
stateChangedCallback
stateChangedNotificationName
_stateChangedCallback
_dataProtectionObserver
_ekParticipantStatusFromCalAttendeeStatus:
_calAttendeeStatusFromEKParticipantStatus:
setPendingStatus:
resemblesEmailAddress
_valueForFlag:
_setFlag:value:
attendeeWithEmailAddress:name:
attendeeWithName:url:
attendeeWithName:emailAddress:
attendeeWithName:phoneNumber:
attendeeWithName:emailAddress:address:
markAsForward
fetchAlarmChangesInStore:resultHandler:
fetchAlarmChangesInSource:resultHandler:
fetchAlarmChangesInCalendar:resultHandler:
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:
initWithCustomClientId:suffix:
customClientId
initWithCustomClientId:
suffix
initWithSuffix:
CADChangeTrackingClientId
_suffix
_customClientId
_initAlarms:
_initAttachments:
_initAttendees:
_initRecurrenceRules:
initWithAlarm:
initWithAttachment:
createAlarm:
serializedProperties
setIsAllDay:
_travelTime
_recurrenceRules
_notes
_calendarIdentifier
_alarms
_attachments
donateInteractionForAction:onEvent:
donatePredictiveAction:forEvent:
deleteInteractionsWithGroupIdentifier:completion:
_logHandle
serializedEventWithEvent:
initWithDomain:verb:parametersByName:
_intentForAction:onEvent:
verb
deleteInteractionsWithIdentifiers:completion:
initWithIntent:response:
setIdentifier:
setGroupIdentifier:
donateInteractionWithCompletion:
bundleProxyForCurrentProcess
bundleIdentifier
createEventIntentForEvent:
createEventIntentForEvent:withSuggestionsInfoUniqueKey:
dateFormatFromTemplate:options:locale:
_displayStringForDate:
initWithIdentifier:displayString:
_setLaunchId:
setSuggestedInvocationPhrase:
setLocationName:
setLocationAddress:
geoLocation
initWithLocation:addressDictionary:region:areasOfInterest:
setGeolocation:
handleEventCreation:
prepareForEventUpdate:
handleEventUpdate:
handleEventDeletion:
removeInteractionsForCalendar:
reachedMaxDepth
rootObject
initWithRootObject:
faultIfNeededForObject:
depth
setDepth:
setReachedMaxDepth:
_reachedMaxDepth
_rootObject
_depth
_readWriteLock
_performWithReadLock:
_performWithWriteLock:
validateWithOwner:error:
_resetWithFrozenObject:
_cachedMeltedObjectsCount
_hasChangeHelperInKeys:ignoreKeys:checkUnsaved:
hasUnsavedChangesIgnoreKeys:
_hasUnsavedChangesInKeys:ignoreKeys:
_hasChangesForKey:checkUnsaved:
_singleRelationshipKeysToCheckForChanges
_multiRelationshipKeysToCheckForChanges
isSubsetOfSet:
_addChangesFromObject:except:keep:copyingBackingObjects:
_addChanges:copyingBackingObjects:
addChangesFromObject:
updateAfterApplyingChanges:
addMultiChangedObjectValues:forKey:
removeMultiChangedObjectValues:forKey:
multiChangedObjectValuesForKey:
_addCachedMeltedObject:forMultiValueKey:
updateMultiValueCacheForChangeSet:preservingExistingAdds:
_applyDefinedAfterFirstSaveFrom:
_applyKnownImmutableValuesFrom:
_updateCachedMeltedObjectSetForMultiValueKey:usingBlock:
_removeCachedMeltedObject:forMultiValueKey:
removeMultiChangedObjectValue:forKey:
frozenOrMeltedCachedSingleRelationObjectForKey:
replaceMultiChangedObjectValuesWithObjectValues:forKey:
updateMeltedCacheForChangeSet:
_resetMeltedCache
_changeSetForDiff:
applyChanges:
_compareAllKnownKeysExceptKeys:forObject:againstObject:compareIdentityKeys:
_compareRelationshipObject1:againstRelationshipObject2:propertiesToIgnore:relationshipObjectKey:
indexOfObjectPassingTest:
_convertBackingObjectsWithPath:updateBackingObjects:allChangedBackingObjects:eventStore:updatedBackingObjectProvider:
backingObjectOfChildObject:withRelationshipKey:
_cachedMeltedChildIdentifierToParentMap:
cachedValueForKey:
refetch
meltedAndCachedMultiRelationCountForKey:
emptyMeltedCache
inverseObjectWithObject:diff:
_numberOfSharedLocksForUnitTesting
isDerivedRelationship
_compareAllKnownKeysExceptKeys:forObject:againstObject:
_compareKnownKeys:forObject:againstObject:
_compareNonIdentityKeys:forObject:againstObject:propertiesToIgnore:
decodeIntegerForKey:
encodeInteger:forKey:
dayOfWeek:
dayOfWeek:weekNumber:
_dayOfTheWeek
_weekNumber
componentsForDate:inTimeZone:
systemTimeZone
initWithCalendarIdentifier:
initWithSearchWithCSQuery:inStore:resultHandler:completionHandler:
setFetchAttributes:
setBundleIDs:
initWithQueryString:context:
attributeSet
eventWithUUID:occurrenceDate:
setFoundItemsHandler:
setCompletionHandler:
queryString
queryStringForSearchTerm:matchingTypes:fromStartDate:toEndDate:
_queryStringForPeopleMatchingSearchTerm:
replaceCharactersInRange:withString:
searchWithCSQuery:inStore:resultHandler:completionHandler:
queryStringForSearchTerm:matchingTypes:
query
csQuery
eventWithRandomUUID
calendarForEntityTypes:eventStore:
_clearCGColorCache
_eventKitBundle
colorString
getColorRed:green:blue:
initWithCGColor:
color
isSubscribed
currentProcessHasSyncClientEntitlement
currentProcessHasWatchOSMutableDatabaseEntitlement
allowsBirthdayModifications
readOnly
setReadOnly:
_flagValueWithMask:
_setFlagValue:withMask:
typeDescription:
_validateDeletableHelper:
isMarkedUndeletable
isFamilyCalendar
_anotherCalendarForDefaultSchedulingExists
_anotherCalendarForRemindersExists
eligibleForDefaultSchedulingCalendar
_anyCalendarOfType:inSameSourceExistsPassingTest:
prohibitsScheduling
setProhibitsScheduling:
canModifySuggestedEventCalendar
initWithBytesNoCopy:length:freeWhenDone:
setCanBeShared:
setCanBePublished:
setReminderSource:
setLastSyncErrorUserInfo:
filteredSetUsingPredicate:
addAlarms:
removeAlarms:
matchesOneOfMyEmails:
urlMatchesOneOfMyEmails:
isImmutable
reportSharedCalendarInviteAsJunkForCalendarWithID:accountID:queue:completionBlock:
rowIDsForCalendars:
calendarWithEventStore:
setColorString:
setAllowsContentModifications:
setIsDefaultSchedulingCalendar:
isInbox
setInbox:
isNotificationsCollection
setNotificationsCollection:
setSubscribed:
isHidden
setHidden:
isImmutableRaw
setImmutable:
deletionWarningsMask
canMergeWithCalendar:
setAllowsScheduling:
isSharingInvitation
setSharingInvitation:
setSharedOwnerAddress:
canBePublished
canBeShared
setFacebookBirthdayCalendar:
isHolidaySubscribedCalendar
setSubscribedHolidayCalendar:
setFamilyCalendar:
setMarkedUndeletable:
isMarkedImmutableSharees
setMarkedImmutableSharees:
isSuggestionsCalendar
isIgnoringEventAlerts
setIsIgnoringEventAlerts:
allowsIgnoringSharedEventChangeNotifications
isIgnoringSharedCalendarNotifications
setIsIgnoringSharedCalendarNotifications:
isAffectingAvailability
setIsAffectingAvailability:
hasEvents
hasTasks
setAllowReminders:
setLastSyncError:userInfo:
lastSyncErrorUserInfo
addSharee:
removeSharee:
hasSharees
ownerIdentityOrganizer
remove:
isManaged
exportData
setIsJunk:
_cachedJunkStatus
_color
dueDateTimeZone
dueDateAllDay
componentsInTimeZone:fromDate:
year
timeZoneForSecondsFromGMT:
_adjustPersistedStartDateComponentsForNewTimeZone:
startDateComponentsRaw
startDateTimeZone
setStartDateTimeZone:
startDateAllDay
setStartDateAllDay:
setDueDate:
initWithAbsoluteDate:
initWithRelativeOffset:
relativeOffsetRaw
setRelativeOffsetRaw:
bundleWithPath:
authorizationStatusForBundle:
_currentAuthorizationStatus
areLocationsAllowedWithAuthorizationStatus:
areLocationsAvailable
alarmWithAbsoluteDate:
areLocationsAllowed
areLocationsCurrentlyEnabled
defaultGeofencedReminderRadius
ownerUUID
defaultAlarm
addSnoozedAlarm:
removeSnoozedAlarm:
setIsSnoozed:
isTopographicallyEqualToAlarm:
soundName
setSoundName:
_soundName
shareeWithName:url:
_urlForEmailAddress:andPhoneNumber:
initWithName:url:
initWithName:url:externalID:
setShareeAccessLevel:
shareeAccessLevel
hasTel
_ekShareeStatusFromCalShareeStatus:
_calShareeStatusFromEKShareeStatus:
_ekShareeAccessLevelFromCalShareeAccessLevel:
_calShareeAccessLevelFromEKShareeAccessLevel:
shareeWithName:emailAddress:
shareeWithName:emailAddress:phoneNumber:
shareeWithName:phoneNumber:
shareeWithName:emailAddress:phoneNumber:externalID:
statusEnumFromString:
statusStringFromEnum:
setSourceIdentifier:
preferredEventPrivateValueRaw
_calEventPrivacyLevelToEKPrivacyLevel:
_ekPrivacyLevelToCalEventPrivacyLevel:
setPreferredEventPrivateValueRaw:
strictestEventPrivateValueRaw
setStrictestEventPrivateValueRaw:
constraintsName
backwardsCompatibleConstraintsPathForName:
_setConstraintsNameWithoutValidation:
isAbsolutePath
constraintsURLForName:
flags2
setFlags2:
flag:
setFlag:value:
disabled
setDisabled:
remAccountObjectID
delegatedAccountOwnerStoreID
_allCalendars
allCalendars
_countCalendarItemsOfCalType:resultHandler:
personaIdentifierForAccountIdentifier:
_ekOfficeHoursFromCalDAVOfficeHours:
fetchOfficeHoursForAccountWithID:queue:completionBlock:
_calDAVOfficeHoursFromEKOfficeHours:
setOfficeHours:forAccountWithID:queue:completionBlock:
laterDate:
port
useSSL
externalIdentificationInfoForAccountID:resultsBlock:
_cacheExternalIdentification
_cacheExternalIdentificationIfNeeded
managedConfigurationAccountAccess
supportsCalendarCreation
sourceWithEventStore:
setSourceType:
preferredEventPrivateValue
setPreferredEventPrivateValue:
setStrictestEventPrivateValue:
setDefaultAlarmOffset:
constraintsDescriptionPath
setConstraintsDescriptionPath:
setConstraintsName:
constraintsDescriptionPathForUnitTesting
setConstraintsDescriptionPathForUnitTesting:
creatorBundleID
setCreatorBundleID:
creatorCodeSigningIdentity
setCreatorCodeSigningIdentity:
onlyCreatorCanModify
setOnlyCreatorCanModify:
flag2:
setFlag2:value:
wasMigrated
setWasMigrated:
showsNotifications
setShowsNotifications:
usesSelfAttendee
setUsesSelfAttendee:
isEnabled
supportsAlarmAcknowledgedDate
setSupportsAlarmAcknowledgedDate:
setDelegatedAccountOwnerStoreID:
calendarWithExternalIdentifier:
removeCalendarItemsOlderThanDate:entityTypeMask:error:
readWriteCalendarsForEntityType:
countCalendarItemsWithResultHandler:
countCalendarItemsOfType:resultHandler:
displayOrderForNewCalendar
personaIdentifier
fetchOfficeHoursWithCompletion:onQueue:
setOfficeHours:withCompletion:onQueue:
sourceError
isSyncing
syncs
wantsCommentPromptWhenDeclining
serverHost
serverPort
serverUsesSSL
supportsFreebusy
supportsEventCalendarCreation
prefersSuggestingNewTimeViaEmail
supportsAttendeeEventForwarding
preferUsingEventOrganizerEmailWhenComposingMail
timeOfLastExternalIdentificationCache
setTimeOfLastExternalIdentificationCache:
cachedHost
setCachedHost:
cachedPort
setCachedPort:
cachedOwnerAddresses
setCachedOwnerAddresses:
_isFacebook
_snoozeAlarmRequiresDetach
_timeOfLastExternalIdentificationCache
_cachedHost
_cachedPort
_cachedOwnerAddresses
resourceChangeFromEventStore:
eventID
_calendarName
_eventID
_createCount
_updateCount
_deleteCount
fetchCalendarChangesInStore:resultHandler:
fetchCalendarChangesInSource:resultHandler:
colorChanged
orderChanged
_colorChanged
_orderChanged
locationOfInterest
mapItem
customLabel
countryCode
thoroughfare
locality
initWithType:customLabel:mapItemName:addressCountryCode:addressThoroughFare:addressLocality:
initWithPredictedLocationOfInterest:
mapItemName
addressCountryCode
addressThoroughfare
addressLocality
rtPredictedLocationOfInterest
_customLabel
_mapItemName
_addressCountryCode
_addressThoroughfare
_addressLocality
_rtPredictedLocationOfInterest
_travelTimeWithStartCoordinate:endCoordinate:arrivalDate:withRouteType:completionBlock:
findCoordinatesForLocation:completionBlock:
isCurrentLocation
travelTimeFrom:to:arrivalDate:withRouteTypes:withCompletionBlock:
travelTimeFrom:to:arrivalDate:withRouteType:withCompletionBlock:
authorizationStatusForBundleIdentifier:
preciseLocationAuthorizedForBundleIdentifier:
mapItemForCurrentLocation
placemark
addressDictionary
initWithCoordinate:addressDictionary:
initWithPlacemark:
setDestination:
setArrivalDate:
initWithRequest:
expectedTravelTime
setStart:
setEnd:
setDuration:
setRoute:
_updateLocation:withMapItem:forRoute:withCompletionBlock:
calculateETAWithCompletionHandler:
postalAddressWithAddressBookDictionaryRepresentation:
stringFromPostalAddress:style:
setPlacemark:
placemarkForLocation:withCompletionBlock:
placemarkForAddress:withCompletionBlock:
geocodeAddressString:completionHandler:
confidence
initWithLatitude:longitude:
fetchLocationsOfInterestAssociatedToIdentifier:withHandler:
defaultManager
geocodeAddress:withCompletionBlock:
estimateGeolocationFromHistoricDevicePositionAtLocation:withCompletionBlock:
controlCharacterSet
invert
whitespaceAndNewlineCharacterSet
formUnionWithCharacterSet:
componentsSeparatedByCharactersInSet:
_stringByStrippingControlCharactersFromString:
postalAddress
formattedAddressString
setGeoLocation:
region
_handle
_clearGeoLocationCache
radiusRaw
setRadiusRaw:
stringByRemovingPercentEncoding
predictedLOI
isImprecise
setImprecise:
isEqualToData:
setRouteType:
localizedStringForLabel:
capitalizedString
contactType
contactIdentifierIsMe:
locationWithMapItem:
displayLabelForContact:unlocalizedLabel:
cacheKey
geoURLString
_imprecise
_predictedLOI
entityID
initWithEntityType:rowID:temporary:
scheme
characterAtIndex:
pathComponents
decodeIntForKey:
decodeBoolForKey:
encodeInt:forKey:
encodeBool:forKey:
initWithEntityType:entityID:
entityName
objectIDWithURL:
CADObjectIDsFromEKObjectIDs:
initWithDictionaryRepresentation:
dictionaryRepresentation
_temporary
_entityType
_rowID
_occurrenceCount
setSequenceNumber:
setHasNotes:
setHasRecurrences:
setHasAttendees:
initWithEntityName:toMany:inversePropertyNames:ownsRelated:
inversePropertyIsApplicable
_entityName
_toMany
_ownsRelated
_inversePropertyNames
_inversePropertyIsApplicable
decodeObjectOfClasses:forKey:
getResourceValue:forKey:error:
createTempDestinationURLWithExtension:
archiveURLToFile:toFile:createPKZipArchive:
_copyFileAtURLToTemporaryDirectory:
setScheme:
URLByAppendingPathComponent:
URLByAppendingPathExtension:
pathExtension
dataWithContentsOfURL:options:error:
writeToFile:atomically:
fileName
initWithFilepath:
localURL
compareFileNames:
fetchEventChangesInStore:resultHandler:
fetchEventChangesInSource:resultHandler:
fetchEventChangesInCalendar:resultHandler:
initWithEventStore:limitedToSource:visibilityChangedCallback:queue:activate:
_defaultQueue
visibilityChangedNotificationName
visibilityChangedCallback
initWithNotificationName:callback:queue:
setActive:
notificationListener
_calendarsThatAreVisible:filteredByIdentity:
limitedToSource
_deselectedCalendarIdentifiers
initWithEventStore:visibilityChangedCallback:queue:
initWithEventStore:limitedToSource:visibilityChangedCallback:queue:
visibleCalendars
invisibleCalendars
visibleCalendarsForAllIdentities
invisibleCalendarsForAllIdentities
initWithEventStore:visibilityChangedCallback:
initWithEventStore:limitedToSource:visibilityChangedCallback:
setInvisibleCalendars:
setLimitedToSource:
_active
_invisibleCalendars
_limitedToSource
_visibilityChangedCallback
_notificationListener
createAttachment
urlOnDisk
setUrlOnDisk:
contentTypeFromServer
setContentTypeFromServer:
_urlOnDisk
_contentTypeFromServer
weakEventStore
unsafeRawPointer
_unsafeRawPointer
_weakEventStore
initWithOptions:path:
initWithOptions:path:allowDelegateSources:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
ekEventStoreInitOptionsFromCalDatabaseInitOptions:
processInfo
processName
setValidator:
_accessStatusChanged
calDatabaseInitOptionsFromEKEventStoreInitOptions:
setDatabaseInitOptions:
setChangeTrackingClientId:
setEnablePropertyModificationLogging:
setDatabasePath:
setAllowDelegateSources:
eventStoreChangedDistributedNotificationName
_requestAccessForEntityType:
currentProcessIsFirstPartyCalendarApp
currentProcessIsCalendarDaemon
currentProcessIsDataAccess
makeObjectsPerformSelector:withObject:
currentProcessHasContactsUIEntitlement
_skipTCCAccessCheck
authorizationStatusForEntityType:
requestAccessToEntityType:completion:
databasePath
currentProcessHasBirthdayModificationEntitlement
setSourceAccountManagement:withBundleID:
setManagement:
setManagementBundleIdentifier:
setUnitTesting:
databaseInitOptions
_postEventStoreChangedNotificationWithChangeType:changedObjectIDs:
_removeCachedCalendarWithID:
_clearCachedSources
_clearCachedConstraintsForSourceWithObjectID:
_unregisterObject:
_detachObject:
objectsForKeys:notFoundMarker:
_clearCachedCalendars
_cacheCalendarWithObjectID:withDefaultLoadedPropertyValues:forKeys:
_validateObjectIDs:completion:
calendarSourcesAndDefaultsQueue
_databaseChangedExternally:
objectWithObjectID:
_cacheSourceWithObjectID:withDefaultLoadedPropertyValues:forKeys:
_loadSourcesIfNeeded
_logMainThreadFetchWarningIfNeeded
_sourceWithID:
publicObjectWithFetchedObjectID:
save:
_saveWithoutNotify
_isUnitTesting
currentThread
mainBundle
_loadCalendarsIfNeeded
_calendar:supportsEntityType:
shouldSaveCalendarAsEventCalendar:
_saveCalendar:commit:error:
shouldSaveCalendarAsReminderCalendar:
canModifyCalendarDatabase
_removeCalendar:commit:error:
eventWithIdentifier:
calendarItemWithIdentifier:
eventWithUniqueId:
rangeOfString:
_eventWithEventIdentifier:
_eventWithRecurrenceIdentifier:
_parseURI:expectedScheme:identifier:options:
_eventWithURI:checkValid:
closestCachedOccurrenceToDate:forEventUID:
eventForUID:occurrenceDate:checkValid:
eventWithUniqueId:occurrenceDate:
initWithContentsOfFile:
importICSData:intoCalendar:options:
_importEventsWithExternalIDs:fromICSData:intoCalendarsWithIDs:options:batchSize:
ICSDataForCalendarItems:options:
defaultCalendarForNewEvents
defaultCalendarForNewEventsInDelegateSource:
setDefaultCalendar:forNewEventsInDelegateSource:
saveReminder:commit:error:
removeReminder:commit:error:
initWithExternalIdentifier:entityType:
setCalendars:
_calendarItemsMatchingPredicate:
calendarItemsWithExternalIdentifier:inCalendars:
_calendarItemsWithExternalIdentifier:inCalendars:entityTypes:
_validateReminderPredicate:
predicateWithCalendars:
setShouldLoadDefaultProperties:
setDefaultPropertiesToLoad:
_predicateForRemindersWithDate:useAsCompletionDate:calendars:limitToCompletedOrIncomplete:completed:includeDatesBefore:sortOrder:preloadProperties:maxResults:
calendarDateForDay
calendarDateByAddingDays:
setUseCompletionDateAsAlternate:
setLimitToCompletedOrIncomplete:
setDueAfter:
setDueBefore:
setSortOrder:
setMaxResults:
_predicateForRemindersWithDate:useAsCompletionDate:calendars:limitToCompletedOrIncomplete:completed:includeDatesBefore:sortOrder:preloadProperties:
predicateForRemindersWithTitle:listTitle:limitToCompletedOrIncomplete:completed:dueAfter:dueBefore:searchTerm:sortOrder:maxResults:
setListTitle:
setSearchTerm:
closestCachedOccurrenceToDate:forEventUID:prefersForwardSearch:
sharedCalendarInvitationsForEntityTypes:
scheduledTaskCacheFetchTasksOnDay:maxResults:
predicateForScheduledRemindersInCalendars:onDay:
respondToSharedCalendarInvite:forCalendarWithID:accountID:queue:completionBlock:
_saveAndRollbackIfNeededForEvent:span:
saveEvent:span:error:
removeResourceChanges:error:
resourceChangesForEntityTypes:
initWithTimeIntervalSinceReferenceDate:
removeInviteReplyNotifications:error:
_refreshDASource:isUserRequested:
refreshSourcesIfNecessary:
_registerObjectImmediate:
classForEntityName:
_addFetchedObjectWithID:
weakObjectsHashTable
_forgetRegisteredObjects
_commitObjectsWithIdentifiers:error:
_filteredObjectsWithIdentifiers:fromObjects:
database
_removeCachedCalendarFromSource:
setByAddingObjectsFromSet:
_validateEventPredicate:
predicateForEventsWithStartDate:endDate:calendars:prefetchHint:exclusionOptions:
_addDaysSpannedByEvent:toCountedSet:inRange:withNSCalendar:
fetchEventsMatchingPredicate:resultHandler:
intersectsRangeWithStartDate:endDate:allowSinglePointIntersection:
earlierDate:
setMinute:
enumerateDatesStartingAfterDate:matchingComponents:options:usingBlock:
predicateWithStartDate:endDate:timeZone:calendars:loadDefaultProperties:
setExcludeTimedEvents:
setExcludeAllDayEvents:
setExcludeDeclined:
setExcludeProposed:
setExcludeDeclinedUnlessProposed:
predicateForEventsWithStartDate:endDate:calendarIdentifiers:prefetchHint:exclusionOptions:
initWithTimeZone:startDate:endDate:title:location:notes:participants:limit:
predicate
predicateWithLimit:
predicateWithCalendarIDs:
CalSimulatedDateForNow
travelEligibleEventsInCalendars:startDate:endDate:
predicateForPotentialTravelEventsInCalendars:startDate:endDate:
initWithCalendarIDs:startDate:endDate:
setStartDateRestrictionThreshold:
predicateWithStartDate:title:calendars:
initWithSearchString:
initWithOpaqueKey:
initWithExtractionGroupIdentifier:
predicateForEventsWithStartDate:endDate:calendars:
initWithCalendarIDs:startDate:endDate:contacts:
initWithEntityType:filters:calendar:
initWithProperty:comparison:integerValue:
initWithProperty:comparison:stringValue:
initWithEntityType:filters:source:
initWithProperty:comparison:dateValue:
initWithFilters:operation:
initWithPredicate:limitWithStartDate:endDate:mustStartInInterval:
initWithEntityType:filters:calendars:
registerForDetailedChangeTrackingInSource:error:
bytes
constraintsCacheQueue
_fetchConstraintsForSourceWithObjectID:
set_cachedConstraints:
getBytes:length:
notificationCollectionCacheQueue
_cachedNotificationCollections
_fetchPersistentNotificationCollectionForSourceWithObjectID:
set_cachedNotificationCollections:
beginCalDAVServerSimulationWithHostname:
endCalDAVServerSimulationWithHostname:
reminderStoreContainerTokenProvider
setReminderStoreContainerTokenProvider:
setDenyAccessToEvents:
setDenyAccessToReminders:
_isConfirmedSuggestedEvent:uniqueKey:
initWithAccessToDelegateSources
initWithEKOptions:
initWithOptions:path:changeTrackingClientId:enablePropertyModificationLogging:allowDelegateSources:
setSourceAccountManagement:
_setIsUnitTesting:
_simulateDaemonCrashForUnitTests
changesSinceSequenceNumber:
_defaultCalendarChangedExternally
_defaultAlarmChangedExternally
eventStoreIdentifier
sourcesEnabledForEntityType:
_deletableSources
getSubscribedCalendarsSourceCreateIfNeededWithError:
delegateSources
delegateSourcesForSource:
fetchGrantedDelegatesForSource:results:
updateGrantedDelegatePermission:source:completion:
localSource
localSubscribedCalendarSource
ownedSources
sourceWithExternalID:
saveSource:commit:error:
removeSource:commit:error:
hideCalendarsFromNotificationCenter:error:
_deletableCalendars
readWriteCalendarCountForEntityType:
deleteCalendar:forEntityType:error:
eventsWithIdentifiers:
_eventOccurrenceWithURI:
eventForUID:occurrenceDate:
allEventsWithUniqueId:occurrenceDate:
removeEvent:span:error:
setInvitationStatus:forEvent:error:
setInvitationStatus:forEvents:error:
importICS:intoCalendar:options:
importEventsWithExternalIDs:fromICSData:intoCalendars:options:batchSize:
ICSDataForCalendarItems:preventLineFolding:
copyCGColorForNewCalendar
defaultLocalCalendar
acquireDefaultCalendarForNewEvents
setDefaultCalendarForNewEvents:
acquireDefaultCalendarForNewReminders
setDefaultCalendarForNewReminders:
_removeReminder:commit:error:
reminderWithExternalURI:
calendarItemsWithUniqueIdentifier:inCalendar:
calendarItemsWithExternalIdentifier:
remindersWithExternalIdentifier:inCalendars:
_remindersMatchingPredicate:
countOfRemindersMatchingPredicate:
reminderObjectIDsMatchingPredicate:
predicateForRemindersInCalendars:preloadProperties:
predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:
predicateForPreloadedIncompleteRemindersWithDueDate:calendars:sortOrder:preloadProperties:maxResults:
predicateForPreloadedCompletedRemindersWithDueDate:calendars:sortOrder:preloadProperties:
predicateForRemindersWithTitle:listTitle:limitToCompletedOrIncomplete:completed:dueAfter:dueBefore:searchTerm:sortOrder:
fetchProperties:forReminders:
eventWithUUID:
doEvents:haveOccurrencesAfterDate:
calendarWithExternalID:
calendarWithExternalURI:
countOfRemindersWithContactIdentifier:
remindersWithContactIdentifier:
occurrenceCacheOccurrencesAreBeingGenerated
occurrenceCacheGetOccurrencesForCalendars:onDay:
occurrenceCacheGetOccurrencesForCalendars:
scheduledTaskCacheFetchDaysAndTaskCounts
scheduledTaskCacheFetchTasksOnDay:
rebuildOccurrenceCache
birthdayCalendarEnabled
setBirthdayCalendarEnabled:
suggestedEventCalendar
insertSuggestedEventCalendar
removeSuggestedEventCalendar
confirmSuggestedEvent:
acceptSuggestedEvent:
deleteSuggestedEvent:
_SGSuggestionsServiceClass
naturalLanguageSuggestedEventCalendar
unacknowledgedEventCount
notifiableEventCount
saveNotification:commit:error:
saveNotificationCollection:commit:error:
respondToSharedCalendarInvitation:withStatus:
acceptAlternateTimeProposalNotification:forAttendee:commit:error:
declineAlternateTimeProposalNotification:forAttendee:commit:error:
markResourceChangeAlertedAndSave:error:
removeResourceChange:error:
removeResourceChangesForCalendarItem:error:
eventNotifications
eventNotificationCountForSource:excludingDelegateSources:filteredByShowsNotificationsFlag:excludeRowIDs:
acknowledgeNotifications:error:
inboxRepliedSectionItems
refreshSourcesIfNecessary
refreshSource:userRequested:
_reregisterObject:oldID:
_setNeedsCommitForRemoteChanges
commitObjects:error:
eventObjectIDsMatchingPredicate:
fetchObjectsMatchingPredicate:completion:
objectsMatchingPredicate:
fetchEventCountsInRange:inCalendars:exclusionOptions:completion:
cancelFetchRequest:
alarmWithUUID:
alarmOccurrencesBetweenStartDate:endDate:inCalendars:completion:
locationBasedAlarmOccurrencesWithCompletion:
vehicleTriggerAlarmOccurrencesWithCompletion:
predicateForEventsWithStartDate:endDate:calendarIdentifiers:exclusionOptions:
predicateForAssistantEventSearchWithTimeZone:startDate:endDate:title:location:notes:participants:calendars:limit:
predicateForNotifiableEvents
predicateForNotificationCenterVisibleEvents
predicateForUnacknowledgedEvents
predicateForUnalertedEvents
predicateForUpcomingEventsWithLimit:
predicateForMasterEventsInCalendars:
hasImmediatelyEligibleTravelEvents
predicateForUpNextEventsInCalendars:startDate:endDate:startDateRestrictionThreshold:
predicateForEventsWithStartDate:title:source:
predicateForNaturalLanguageSuggestedEventsWithSearchString:
predicateForEventCreatedFromSuggestionWithOpaqueKey:
predicateForEventsCreatedFromSuggestionWithExtractionGroupIdentifier:
predicateForEventsWithStartDate:endDate:calendars:matchingContacts:
predicateForCalendarItemsOfType:inCalendar:
predicateForMasterEventsWithExternalTrackingStatusInCalendar:
predicateForCalendarItemsOfType:withUniqueIdentifier:inCalendar:
predicateForCalendarItemsOfType:withUniqueIdentifier:inSource:
predicateForCalendarItemsOfType:withExternalID:inCalendar:
predicateForCalendarItemsOfType:withExternalID:inSource:
predicateForMasterEventsWithStartDate:title:inCalendar:
predicateForMasterEventsWithOccurrencesWithStartDate:endDate:inCalendar:
predicateForMasterEventsWithInvitationsAndOccurrencesAfter:inCalendar:
predicateForNonrecurringEventsWithStartDate:endDate:calendars:
predicateForIncompleteRemindersAndRemindersCompletedAfter:inCalendar:
timeToLeaveLocationAuthorizationStatus
registerForDetailedChangeTracking:
unregisterForDetailedChangeTracking:
fetchChangedObjectIDsSinceToken:resultHandler:
markChangedObjectIDsConsumedUpToToken:
markIndividualChangesConsumed:error:
clearSuperfluousChanges
purgeChangelog
cacheValidationStatusForAddress:status:
addressValidationStatus:
pushSpotlightUpdatesForCalendarItemUUIDs:
notificationCollectionForSource:
fetchStorageUsage
setCachedEKSourceConstraintObject:forKey:
postSyntheticRouteHypothesis:forEventWithExternalURL:
endCalDAVServerSimulation:
insertedObjects
setInsertedObjects:
deletedObjects
setDeletedObjects:
updatedObjects
setUpdatedObjects:
objectsPendingCommit
setObjectsPendingCommit:
objectsPendingSave
setObjectsPendingSave:
needsCommitForRemoteChanges
setNeedsCommitForRemoteChanges:
setDatabase:
lastDatabaseNotificationTimestamp
setLastDatabaseNotificationTimestamp:
registeredQueue
unsavedChangesQueue
dbChangedQueue
registeredObjects
setRegisteredObjects:
inboxRepliedSectionHasContent
calendarDataContainerProvider
_localSourceID
_birthdaySourceID
_defaultCalendarsForNewEventsIDBySourceID
_defaultCalendarForNewRemindersID
_suggestedEventCalendarID
_naturalLanguageSuggestedEventCalendarID
_subscribedCalendarsSourceID
_cachedValidatedAddresses
_defaultTimedAlarmOffset
_defaultAllDayAlarmOffset
_allowsBirthdayCalendarModifications
_hasAccessToEvents
_hasAccessToReminders
_accessDetermined
_reminderSourceMapLock
_needsCommitForRemoteChanges
_inboxRepliedSectionHasContent
_insertedObjects
_objectsPendingCommit
_objectsPendingSave
_database
_lastDatabaseNotificationTimestamp
_calendarSourcesAndDefaultsQueue
_registeredQueue
_unsavedChangesQueue
_dbChangedQueue
_constraintsCacheQueue
_notificationCollectionCacheQueue
__cachedConstraints
__cachedNotificationCollections
_reminderSourceIDToEventSourceIDMapping
_eventSourceIDToReminderSourceIDMapping
_registeredObjects
_calendarDataContainerProvider
_propertyWithFlagDidChange:
calendarItemPropertyName
fetchSourceChangesInStore:resultHandler:
initWithName:emailAddress:address:isCurrentUser:
organizerWithName:emailAddress:address:isCurrentUser:
_conflictedParticipants
fetchContactChangesInStore:resultHandler:
fetchContactChangesInSource:resultHandler:
fetchContactChangesInCalendar:resultHandler:
_setTimeOrLocationAlarm:
_setTimeAndLocationAlarms:
trigger
_timeAlarm
timeInterval
_locationAlarm
_remStructuredLocation
triggersFromAbsoluteDate:relativeOffset:timeValuesRelevant:structuredLocation:proximity:
initWithDateComponents:
initWithTimeInterval:
ekAlarmProximityToEKAlarmProximity:
initWithStructuredLocation:proximity:
semanticIdentifierFromDateComponents:
remAlarmProximityToEKAlarmProximity:
initWithAlarms:inStore:
initWithName:emailAddress:address:
initWithEmailAddress:name:
initWithAddress:name:
credentialsWithUsername:password:
username
password
_username
_password
_reminderSource
setIsAbsolute:
_isAbsolute
_relativeOffset
_absoluteDate
_updateSpecifier
_clearArrays
_parseSpecifierIfNeeded
_appendDaysOfTheWeek:toSpecifier:
_appendIndexList:toSpecifier:propertyKey:
_parseDaysOfWeek:range:
_parseIndexList:range:
stringWithCharacters:length:
_specifier
_dirty
_parsed
bundleWithIdentifier:
CalAutoCommentPrefix
base64EncodedDataWithOptions:
setTotalOccurrencesInSeries:
setTotalConflictsInSeries:
setConflictPeriodForSeries:
setConflictingDates:
setConflictingEvents:
setNeedsActionEvents:
setTotalConflictingEvents:
setTotalNeedsActionEvents:
totalConflictsInSeries
totalOccurrencesInSeries
_dateRangeToScanForConflictsForEvent:dateForNow:
_maxRangeLengthForRule:
dateRangeToScanForConflictsForEvent:
calendarIdentifiersToScanForConflictsForEvent:
initWithConflictingDates:conflictingEvents:needsActionEvents:totalOccurrencesInSeries:conflictPeriodForSeries:
conflictingDates
conflictingEvents
needsActionEvents
totalConflictingEvents
totalNeedsActionEvents
conflictPeriodForSeries
_conflictingDates
_conflictingEvents
_needsActionEvents
_totalOccurrencesInSeries
_totalConflictsInSeries
_totalConflictingEvents
_totalNeedsActionEvents
_conflictPeriodForSeries
setSpan:
_creationDate
_span
currentProcessHasBooleanEntitlement:
get_suggestedLocationsTestMode
_mockLocationForEvent:
predictedLocationOfInterestForEventTitle:eventLocation:calendarIdentifier:timeout:error:
sharedService
geoMapItemHandle
_itemWithGeoMapItem:
horizontalUncertainty
resolveMapItemLocallyFromHandle:completionHandler:
userInteractionWithPredictedLocationOfInterest:interaction:feedback:
ticketForReverseGeocodeCoordinate:shiftLocationsIfNeeded:traits:
geoAddress
structuredAddress
submitWithHandler:networkActivity:
enumerateKeysAndObjectsWithOptions:usingBlock:
predicateWithFormat:
userInteractionWithPredictedLocationOfInterest:interaction:
calendarWithRandomUUID
@24@0:8@16
B24@0:8@16
@16@0:8
v24@0:8@16
v16@0:8
@"NSSet"
#16@0:8
@40@0:8q16Q24@32
q20@0:8i16
i24@0:8q16
@24@0:8q16
@24@0:8Q16
@32@0:8@16B24B28
q24@0:8@16
@24@0:8^{_NSZone=}16
@88@0:8q16q24@32@40@48@56@64@72@80
@40@0:8q16q24@32
q16@0:8
v24@0:8q16
v24@0:8Q16
Q16@0:8
i16@0:8
v20@0:8i16
B16@0:8
@24@0:8B16B20
@28@0:8@16B24
@"EKRecurrenceHelper"
@36@0:8{?=IIb1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}16
v20@0:8B16
{?="maxAlarmsAllowed"I"maxRecurrencesAllowed"I"supportsAlarmTriggerIntervals"b1"supportsAlarmTriggerDates"b1"supportsAlarmsTriggeringAfterStartDate"b1"snoozeAlarmRequiresDetach"b1"organizerCanSeeAttendeeStatuses"b1"inviteesCanSeeAttendeeStatuses"b1"statusesAreAccurate"b1"supportsIncomingInvitations"b1"supportsOutgoingInvitations"b1"requiresOutgoingInvitationsInDefaultCalendar"b1"supportsInvitationModifications"b1"supportsEventForwarding"b1"supportsResponseComments"b1"deliverySourceOrExternalIDRequiredForResponse"b1"proposedStatusRequiredForResponse"b1"declinedStatusChangeRequiresNoPendingStatus"b1"eventDurationConstrainedToRecurrenceInterval"b1"alarmTriggerIntervalConstrainedToRecurrenceInterval"b1"occurrencesMustOccurOnSeparateDays"b1"futureStartDateLimitedToOccurrenceCacheBounds"b1"supportsRecurrencesOnDetachedEvents"b1"recurrencesShouldPinToMonthDays"b1"requiresAttendeeSearchInSingleAccount"b1"mustAcknowledgeMasterEvent"b1"canSetAvailability"b1"eventAvailabilityLimited"b1"requiresMSFormattedUID"b1"shouldCancelDeletedEvents"b1"shouldDeclineDeletedInvitations"b1"supportsStructuredLocations"b1"supportsReminderActions"b1"supportsReminderLocations"b1"supportsAlarmProximity"b1"allowsCalendarAddDeleteModify"b1"allowsTasks"b1"allowsEvents"b1"supportsURLField"b1"supportsAllDayDueDates"b1"supportsSharedCalendars"b1"isFacebook"b1"recurrenceSeriesMustIncludeMoreThanFirstOccurrence"b1"supportsPrivateEvents"b1"prohibitsPrivateEventsWithAttendees"b1"supportsAvailabilityRequests"b1"supportsIgnoringEventsInAvailabilityRequests"b1"supportsLocationDirectorySearches"b1"requiresSamePrivacyLevelAcrossRecurrenceSeries"b1"supportsInboxAvailability"b1"prohibitsMultipleMonthsInYearlyRecurrence"b1"prohibitsMultipleDaysInMonthlyRecurrence"b1"prohibitsYearlyRecurrenceInterval"b1"requiresOccurrencesConformToRecurrenceRule"b1"prohibitsDetachmentOnCommentChange"b1"allowsProposeNewTime"b1"prohibitsICSImport"b1"supportsAutoGeocodingStructuredLocations"b1"supportsJunkReporting"b1"supportsPhoneNumbers"b1"attendeesUseDeletedByOrganizerStatus"b1"prohibitsSlicingEventsWithAttendees"b1"supportsSubscribedCalendars"b1"supportsAttachments"b1"supportsDelegation"b1"supportsDelegateEnumeration"b1"supportsFloatingTimeZone"b1"prohibitsUsingEventOrganizerEmailWhenComposingMail"b1"supportsRecurrenceSplit"b1"requiresOpeningAttachmentAsLink"b1"shouldUseDeleteAndAddInsteadOfMoveBetweenCalendars"b1"supportsInvitationModificationsWithoutNotification"b1}
Q24@0:8q16
B32@0:8@16^@24
@32@0:8@16^@24
@"REMListChangeItem"
v32@0:8@16@24
@32@0:8q16@24
B32@0:8@16@24
q24@0:8q16
v32@0:8d16Q24
@48@0:8@16@24@32@40
B48@0:8@16@24@32^@40
@64@0:8@16@24@32@40@?48@?56
@40@0:8@16@24@32
v40@0:8@16@?24@32
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@"NSPredicate"16@24
v36@0:8@16@24B32
@48@0:8@16@24@32@?40
v28@0:8@16B24
i44@0:8I16@20@28@36
@"EKEventStore"
@"NSNumber"
@24@0:8^@16
@"NSURL"
@44@0:8i16@20@28@36
@36@0:8i16@20@28
q28@0:8@16i24
@"NSDate"
@"EKCalendarNotification"
@"EKObjectID"
B52@0:8@16@24@32B40@44
B56@0:8@16@24@32B40B44@48
B40@0:8@16@24@32
B48@0:8@16@24@32@40
B40@0:8@16#24#32
@24@0:8@"<EKProtocolObject>"16
@"EKChangeSet"16@0:8
@"EKObject"16@0:8
@"EKPersistentObject"16@0:8
B24@0:8@"NSString"16
@"EKObject"24@0:8@"EKEventStore"16
v32@0:8@16@"NSString"24
@24@0:8@"NSString"16
B24@0:8@"<EKFrozenMeltedPair>"16
B32@0:8@"<EKFrozenMeltedPair>"16@"NSSet"24
@"NSDictionary"16@0:8
@"NSSet"16@0:8
B28@0:8@16B24
B44@0:8@16@24B32@36
@28@0:8@?16B24
v24@0:8@?16
@"EKPersistentObject"
@"EKChangeSet"
@"NSDictionary"
@"EKObjectValidationContext"
@56@0:8@16@24@32@40q48
@64@0:8@16@24@32@40@48q56
@68@0:8@16@24@32@40@48q56B64
@72@0:8@16@24@32@40@48@56q64
@76@0:8@16@24@32@40@48@56q64B72
B44@0:8@16@24@32B40
@56@0:8@16@24@32@40@48
v32@0:8@16@?24
@"EKObjectID"16@0:8
v32@0:8@"CADDatabaseInitializationOptions"16@?<v@?i>24
v24@0:8@?<v@?iBB>16
v24@0:8@?<v@?i>16
v32@0:8q16@?24
v40@0:8@16@24@?32
v28@0:8i16@?20
v32@0:8d16@?24
v60@0:8@16@24@32Q40i48@?52
v40@0:8@16Q24@?32
v40@0:8@16q24@?32
v28@0:8B16@?20
v24@0:8@?<v@?i@"NSString">16
v32@0:8@"CADObjectID"16@?<v@?iq>24
v32@0:8q16@?<v@?iBq@"NSData"iii>24
v40@0:8@"NSArray"16@"CADObjectID"24@?<v@?iBq@"NSArray">32
v32@0:8q16@?<v@?i>24
v32@0:8@"NSArray"16@?<v@?i>24
v24@0:8@?<v@?ii>16
v28@0:8i16@?<v@?i@"NSDictionary">20
v32@0:8d16@?<v@?iB@"NSArray"d>24
v60@0:8@"NSArray"16@"NSArray"24@"NSArray"32Q40i48@?<v@?i@"NSArray">52
v40@0:8@"NSArray"16Q24@?<v@?i@"NSData">32
v40@0:8@"CADObjectID"16q24@?<v@?i@"NSData">32
v28@0:8B16@?<v@?i>20
v24@0:8@?<v@?iB@"NSDictionary">16
v24@0:8@?<v@?iB>16
v24@0:8@?<v@?iQ>16
v48@0:8@16@24@32@?40
v32@0:8@"CADObjectID"16@?<v@?iB>24
v32@0:8@"NSArray"16@?<v@?i@"NSArray">24
v40@0:8@"CADObjectID"16@"NSArray"24@?<v@?i@"NSArray">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSObject<NSSecureCoding>">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSString">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSNumber">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSDate">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSData">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"CADObjectID">32
v40@0:8@"CADObjectID"16@"NSString"24@?<v@?i@"NSSet">32
v48@0:8@"CADObjectID"16@"NSDictionary"24@"NSDictionary"32@?<v@?i>40
v36@0:8@16B24@?28
v36@0:8i16@20@?28
v44@0:8@16i24@28@?36
v32@0:8@"NSArray"16@?<v@?i@"NSArray"@"NSArray">24
v24@0:8@?<v@?i@"CADObjectID">16
v32@0:8@"CADObjectID"16@?<v@?i@"NSData">24
v32@0:8@"CADObjectID"16@?<v@?i@"CADObjectID">24
v36@0:8@"CADObjectID"16B24@?<v@?iB>28
v36@0:8i16@"CADObjectID"20@?<v@?iQ>28
v44@0:8@"NSDate"16i24@"CADObjectID"28@?<v@?i>36
v32@0:8@"CADObjectID"16@?<v@?i@"NSArray">24
v40@0:8@"CalGrantedDelegate"16@"CADObjectID"24@?<v@?i>32
v32@0:8@"CADObjectID"16@?<v@?ii>24
v40@0:8@16i24i28@?32
v20@0:8I16
v32@0:8@"NSString"16@?<v@?i@"CADObjectID">24
v40@0:8@"NSString"16@"CADObjectID"24@?<v@?i@"NSArray">32
v40@0:8@"NSPredicate"16i24i28@?<v@?i@"NSArray">32
v40@0:8@"NSString"16@"CADObjectID"24@?<v@?i>32
v36@0:8i16@"NSString"20@?<v@?ii>28
v36@0:8i16@"NSString"20@?<v@?@"NSArray"i>28
v36@0:8@16i24@?28
v40@0:8i16@20B28@?32
v44@0:8@16@24i32@?36
v60@0:8@16@24@32B40@44@?52
v24@0:8@?<v@?i@"NSNumber">16
v32@0:8@"CADObjectID"16@"CADObjectID"24
v32@0:8@"NSString"16@?<v@?i@"NSArray">24
v36@0:8@"CADObjectID"16i24@?<v@?B>28
v40@0:8@"NSArray"16@"NSDate"24@?<v@?i@"NSArray">32
v40@0:8i16@"NSDate"20B28@?<v@?i@"NSDate">32
v44@0:8@"NSString"16@"NSArray"24i32@?<v@?i>36
v60@0:8@"CADObjectID"16@"NSDate"24@"NSDate"32B40@"NSTimeZone"44@?<v@?iB>52
v32@0:8@"NSString"16@?<v@?iB>24
v32@0:8@"CADObjectID"16@?<v@?i@"NSSecurityScopedURLWrapper">24
v24@0:8@"CADObjectID"16
v32@0:8@"EKReminderPredicate"16@?<v@?ii>24
v40@0:8@"NSArray"16@"NSArray"24@?<v@?i@"NSArray">32
v24@0:8@?<v@?i@"NSArray">16
v48@0:8@"NSDate"16@"NSDate"24@"NSArray"32@?<v@?i@"NSArray">40
v32@0:8B16B20@?24
v40@0:8@16B24B28@?32
v32@0:8@"CADObjectID"16@?<v@?i>24
v32@0:8B16B20@?<v@?i@"NSArray"@"NSArray"@"NSArray"@"NSDate">24
v40@0:8@"NSString"16B24B28@?<v@?iQ@"NSArray">32
v24@0:8@?<v@?i@"NSArray"@"NSArray">16
v36@0:8i16@"CADObjectID"20@?<v@?i>28
v40@0:8@"CADRouteHypothesis"16@"NSString"24@?<v@?i>32
v24@0:8@?<v@?i@"NSDictionary">16
v32@0:8@16I24B28
v32@0:8@"NSArray"16I24B28
I24@0:8@16
@"<CADInterface>"
@"NSXPCConnection"
@"<EKDaemonConnectionDelegate>"
@"CADDatabaseInitializationOptions"
@?24@0:8@?16
d16@0:8
v24@0:8d16
@"CalPreferences"
@"EKReminderStore"
#24@0:8#16
@"EKFrozenReminderObject"24@0:8@"NSString"16
@32@0:8@16@24
B40@0:8@16@24^@32
B24@0:8^@16
B32@0:8^@16^@24
@32@0:8@16@?24
@?28@0:8@16B24
@"NSArray"
@"NSMutableSet"
@"NSMutableArray"
@"REMStore"
@72@0:8@16@24@32@40@48@56@64
v24@0:8@"EKAutocompleter"16
v24@0:8@"CNAutocompleteStore"16
B40@0:8@16@24@?32
@?24@0:8@16
v32@0:8@"<CNCancelable>"16@"NSArray"24
v32@0:8@"<CNCancelable>"16@"NSError"24
v24@0:8@"<CNCancelable>"16
B40@0:8@"<CNCancelable>"16@"CNAutocompleteFetchRequest"24@?<v@?@"NSArray"@"NSError">32
@"NSDictionary"32@0:8@"<CNCancelable>"16@"NSArray"24
@?<q@?@@>24@0:8@"<CNCancelable>"16
@"<EKAutocompleterDelegate>"
@"EKSource"
@"<CNCancelable>"
@"CNAutocompleteStore"
@"EKDirectorySearchOperation"
@"NSOperationQueue"
@"NSPointerArray"
@"EKParticipant"
v40@0:8@16@24@32
@32@0:8@16q24
v56@0:8q16@24@32@40@48
v40@0:8@16@24q32
v48@0:8@16@24@32q40
@"EKObject"
v36@0:8q16@24B32
@"NSDate"16@0:8
@40@0:8@16@24q32
@36@0:8@16B24@28
B56@0:8@16@24@32@40@48
I16@0:8
v32@0:8@16d24
v32@0:8@?16@24
v32@0:8@16^B24
B24@0:8{?=II}16
v28@0:8@?16B24
@?16@0:8
@20@0:8B16
@"NSObject<OS_dispatch_source>"
v24@0:8B16B20
Q24@0:8@16
Q32@0:8@16@24
q32@0:8@16@24
@24@0:8@?16
^{__SecTrust=}16@0:8
B48@0:8@16@24^@32^@40
B64@0:8@16@24@32@40@48@56
@"NSURL"16@0:8
@"NSPredicate"16@0:8
@"CNContact"16@0:8
@"EKCalendarItem"
I24@0:8q16
@40@0:8@16q24q32
@40@0:8@16@24^@32
@52@0:8B16@20@28@36q44
v24@0:8^{CGColor=}16
^{CGColor=}16@0:8
^{CGColor=}
@"EKEvent"
@40@0:8@16@24@?32
@"EKDirectorySearchQuery"
@"NSError"
@32@0:8@16d24
@"NSTimeZone"
@"EKRecurrenceRule"
@"EKCalendarEventInvitationNotificationAttendee"
@"CalLocation"
@56@0:8@16@24@32@40Q48
@40@0:8@16@24Q32
@64@0:8@16@24@32@40@48Q56
i24@0:8@16
@48@0:8@16@24@32^@40
B28@0:8i16Q20
@"EKCalendar"
@"NSMapTable"
v44@0:8@?16B24q28@36
v32@0:8^@16^@24
v40@0:8@"NSArray"16@"NSArray"24@"NSArray"32
@48@0:8B16@20@28@36B44
v48@0:8@16@24@32@40
@"CalLimitingQueue"
@52@0:8B16q20@28@36@44
@"EKEventStore"16@0:8
@"EKTimedEventStorePurger"
v64@0:8^@16^@24^@32^@40^@48^@56
r*24@0:8B16B20
B40@0:8@16^@24^@32
@40@0:8@16@24B32B36
v56@0:8@16@24@32@40@?48
@28@0:8@16i24
@"NSArray"16@0:8
@40@0:8#16@24@32
v28@0:8i16Q20
v36@0:8@?16B24@?28
@"NSPredicate"
@"NSDateComponents"
@32@0:8q16@?24
@40@0:8q16@24@?32
@"PCPersistentTimer"
@"NSTimer"
@"NSData"32@0:8@"EKEvent"16^@24
@"EKEvent"32@0:8@"NSData"16^@24
@"NSString"32@0:8@"NSData"16^@24
@20@0:8i16
@28@0:8i16@20
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@"<CalDateProvider>"
@48@0:8@16d24d32d40
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@104@0:8i16@20d28@36d44@52d60@68B76Q80@88q96
B56@0:8@16@24@32@40^@48
v40@0:8@16@24B32B36
v44@0:8@16@24@32B40
v28@0:8i16@20
d24@0:8@16
v32@0:8d16@24
v28@0:8B16@20
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@"EKRecurrenceEnd"
B24@0:8q16
q36@0:8q16Q24B32
q32@0:8q16Q24
@32@0:8@16Q24
@48@0:8@16Q24Q32^@40
v32@0:8@16Q24
B20@0:8I16
v24@0:8B16I20
B32@0:8q16^@24
v56@0:8@16@24@32@40@48
B48@0:8{?=iccccd}16@32^@40
@24@0:8^d16
B48@0:8@16@24q32^@40
@"EKStructuredLocation"
@"EKReadWriteLock"
@"EKCalendarDate"
@52@0:8@16@24@32@40B48
@64@0:8@16@24@32@40@48@?56
@"EKAvailabilityCache"
@"CDBDataProtectionObserver"
v24@0:8I16B20
@"EKSerializableStructuredLocation"
@56@0:8@16@24@32@40@?48
B36@0:8@16@24B32
B32@0:8#16@?24
v40@0:8@16@24#32
@52@0:8@16B24@28@36@44
@32@0:8q16q24
@48@0:8@16@24@?32@?40
@48@0:8@16Q24@32@40
@"CSSearchQuery"
@32@0:8Q16@24
B40@0:8^i16^i24^i32
B32@0:8Q16@?24
v32@0:8Q16@24
@24@0:8^{CGColor=}16
@24@0:8d16
B20@0:8i16
Q20@0:8i16
i24@0:8Q16
v24@0:8i16B20
B40@0:8@16Q24^@32
v32@0:8Q16@?24
@64@0:8q16@24@32@40@48@56
@"RTPredictedLocationOfInterest"
@"EKPredictedLocationOfInterest"
@24@0:8i16i20
@28@0:8i16i20B24
@40@0:8@16B24@28B36
@40@0:8@16@?24@32
@48@0:8@16@24@?32@40
@52@0:8@16@24@?32@40B48
@"CalDarwinNotificationListener"
^v16@0:8
#24@0:8@16
q24@0:8Q16
B24@0:8Q16
@32@0:8i16@20B28
@48@0:8Q16@24@32B40B44
@44@0:8i16@20@28B36B40
B36@0:8@16B24^@28
B32@0:8@16Q24
@36@0:8@16@24B32
B40@0:8@16q24^@32
B44@0:8@16q24B32^@36
B40@0:8Q16@24^@32
@52@0:8@16@24@32Q40i48
@60@0:8@16B24@28B36B40B44i48@52
@68@0:8@16B24@28B36B40B44i48@52Q60
@44@0:8@16@24i32@36
@52@0:8@16@24i32@36Q44
@68@0:8@16@24B32B36@40@48@56i64
@76@0:8@16@24B32B36@40@48@56i64Q68
^{os_unfair_lock_s=I}16@0:8
@28@0:8d16i24
@32@0:8d16i24B28
v44@0:8@16@24B32^@36
B32@0:8@16q24
@28@0:8B16^@20
Q40@0:8@16B24B28@32
v48@0:8@16@24q32@?40
@44@0:8@16@24@32B40
@56@0:8@16@24@32q40q48
@48@0:8@16@24@32q40
@88@0:8@16@24@32@40@48@56@64@72q80
@48@0:8@16@24@32d40
@40@0:8Q16@24@32
q24@0:8^@16
q32@0:8@16^@24
v24@0:8^@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSHashTable"
@"EKDaemonConnection"
@"EKDataProtectionObserver"
@"<CalCalendarDataContainerProvider>"
@52@0:8@16d24B32@36q44
@"REMAlarm"
@24@0:8r*16
@"EKFrozenReminderSource"
v36@0:8@16@24S32
@40@0:8^{?=[64S]^{__CFString}^S*{?=qq}qq}16{?=qq}24
@48@0:8q16q24@32@40
@56@0:8@16@24@32Q40@48
@"CalDateRange"
@"EKAvailabilitySpan"
@40@0:8@16^@24d32
