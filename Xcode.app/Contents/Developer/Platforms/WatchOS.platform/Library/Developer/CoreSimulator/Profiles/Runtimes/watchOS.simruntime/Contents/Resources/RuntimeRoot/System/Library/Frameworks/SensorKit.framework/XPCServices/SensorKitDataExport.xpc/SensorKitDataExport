<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.sensorkit.reader.holdingperiod.bypass</key>
<true/>
<key>com.apple.private.sensorkit.reader.wildcard.allow</key>
<true/>
</dict>
</plist>
rotationRate
timestamp
write:maxLength:
sr_writeUTF8RepresentationToOutputStream:
sr_prefersUTF8StringRepresentation
serviceListener
_setQueue:
initWithQueue:listener:
init
setDelegate:
setOutputStream:
setCurrentReader:
setSensors:
setOutputURL:
setListener:
setDevices:
setCompletionHandler:
setMultiSampleExporter:
dealloc
listener
resume
invalidate
outputURL
fileSystemRepresentation
stringWithUTF8String:
completionHandler
serviceName
exportDataForSensors:reply:
cancelWithReply:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
errorWithCode:
currentConnection
valueForEntitlement:
boolValue
invalidEntitlementError
fileURLWithPath:isDirectory:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
exportDataForSensors:toBaseDirectory:completionHandler:
initWithSensor:
exportDataForSensors:toBaseDirectory:createReader:completionHandler:
setDateFormat:
date
stringFromDate:
stringWithFormat:
fileURLWithPath:isDirectory:relativeToURL:
setFrom:
setTo:
exportDataForSensors:outputStream:fetchRequest:createReader:reply:
copy
setWithSet:
count
replyWithError:
startJSON
exportData
open
dictionary
setObject:forKeyedSubscript:
sensors
countByEnumeratingWithState:objects:count:
dataWithJSONObject:options:error:
initWithData:encoding:
dataUsingEncoding:
bytes
length
close
endJSON
anyObject
currentReader
setBypassHoldingPeriod:
startSensorJSON:
mutableCopy
setFirstSample:
devices
lastObject
currentDevice
setDevice:
fetch:
fetchDevices:
endSensorJSON
sensor
multiSampleExporter
sr_endMultiSampleStream
writeSample:device:timestamp:sampleDict:streaming:
removeLastObject
removeObject:
outputStream
writeJSONObject:toStream:options:error:
description
reason
sr_dictionaryRepresentation
numberWithDouble:
dictionaryWithObjects:forKeys:count:
writeJSON:
writeOne:
conformsToProtocol:
writeMetadataFragmentWithDevice:timestamp:
streamSample:sensor:
sample
exportingSampleClass
sr_beginMultiSampleStream
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
sr_dictionaryRepresentationWithSample:
sr_exportRepresentationEnumerator
device
initialize
sensorReader:fetchingRequest:didFetchResult:
sensorReader:didCompleteFetch:
sensorReader:fetchingRequest:failedWithError:
sensorReader:didChangeAuthorizationStatus:
sensorReaderWillStartRecording:
sensorReader:startRecordingFailedWithError:
sensorReaderDidStopRecording:
sensorReader:stopRecordingFailedWithError:
sensorReader:didFetchDevices:
sensorReader:fetchDevicesDidFailWithError:
listener:shouldAcceptNewConnection:
initWithQueue:
firstSensor
setFirstSensor:
firstSample
_createReader
_shouldStartNewMultiSampleExporter
_latestTimestamp
_exporting
_fetchRequest
_connection
_firstSensor
_firstSample
_sensors
_outputURL
_listener
_currentReader
_devices
_outputStream
_completionHandler
_multiSampleExporter
currentHandler
handleFailureInFunction:file:lineNumber:description:
startTime
endTime
distance
steps
numberWithInt:
speed
percentGrade
gpsSource
numberWithInteger:
startDate
endDate
numberOfSteps
floorsAscended
floorsDescended
currentPace
currentCadence
averageActivePace
doubleValue
data
writeToURL:atomically:
fileHandleForWritingToURL:error:
initWithCapacity:
mutableBytes
closeFile
dataWithBytesNoCopy:length:freeWhenDone:
writeData:error:
hasSpaceAvailable
streamStatus
_algorithm
_compression_stream
_streamStatus
_bufferSize
_outputFileHandle
_buffer
objectForKeyedSubscript:
initWithArray:
bundleForClass:
localizedStringForKey:value:table:
sr_sensorForDeletionRecordsFromSensor
containsObject:
array
isEqualToString:
addObject:
arrayWithArray:
_name
_authorizationService
_writerBundleIdentifier
_relatedSettingsCategories
_publicEntitlementValue
_localizedAdditionalSampleDataNote
_infoPlistAuthorizationCategory
_sampleClass
_exportingSampleClass
_additions
acceleration
timeIntervalSinceReferenceDate
identifier
firstObject
elevationAscended
numberWithUnsignedInteger:
elevationDescended
source
sourceId
UUIDString
averageSpeed
currentSpeed
suitableForRunning
numberWithBool:
suitableForWalking
arrayWithObjects:count:
initWithDirectories:
allObjects
sr_sensorByDeletingDeletionRecord
objectForKey:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
lastPathComponent
hasPrefix:
stringByAppendingPathExtension:
dictionaryWithContentsOfURL:error:
setObject:forKey:
cache:willEvictObject:
_sensorsCache
_sensorDescriptionsDirs
_shouldReloadAllSensors
heartRate
confidence
error
dataSource
mode
bundleIdentifiersForService:
bundleIdentifiersDisabledForService:
isOverriddenForService:
informationForBundleId:
setOverride:forService:
resetService:
resetService:forBundleId:
setValue:forService:bundleId:
weakObjectsHashTable
authorizationStore:didDetermineInitialAuthorizationValues:
dictionaryWithDictionary:
allKeys
setWithArray:
unionSet:
authorizationStore:grantedAuthorizations:forBundleId:
authorizationStore:revokedAuthorizations:forBundleId:
authorizationStore:resetAuthorizations:forBundleId:
orderedSet
dictionaryWithCapacity:
_notifyToken
_sensorKitActive
_authorizationValues
_lastModifiedAuthorizationTimes
_delegates
_tccStore
_updateQueue
{"rotationRate": {"x": %0.*g, "y": %0.*g, "z": %0.*g}, "timestamp": %ld}
com.apple.SensorKit
DataExport
v8@?0
/private/var/mobile/Library/Caches/com.apple.SensorKitDataExport
@"SRSensorReader"16@?0@"NSString"8
yyyy-MM-dd-HH-mm-ss
SensorAndUsageData-%@.lz4
general
{"disclaimer": %@,"%@": [
SensorAndUsageData
%@{"%@": [
v24@?0@"NSArray"8@"NSError"16
"metadata":
device
timestamp
,"sample":
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
sensors
T@"NSMutableSet",&,V_sensors
outputURL
T@"NSURL",&,V_outputURL
listener
T@"NSXPCListener",&,V_listener
currentReader
T@"SRSensorReader",&,V_currentReader
devices
T@"NSMutableArray",&,V_devices
outputStream
T@"NSOutputStream",&,V_outputStream
completionHandler
T@?,C,V_completionHandler
multiSampleExporter
T@"<SRMultiSampleExporting>",&,V_multiSampleExporter
firstSensor
TB,V_firstSensor
firstSample
TB,V_firstSample
/System/Library/PrivateFrameworks/HealthAlgorithms.framework/HealthAlgorithms
/System/Library/PrivateFrameworks/HealthAlgorithms.framework/Contents/MacOS/HealthAlgorithms
HAPPGExporter
Class getHAPPGExporterClass(void)_block_invoke
SRDataExportService.m
Unable to find class %s
void *HealthAlgorithmsLibrary(void)
Data in this file is not intended for medical purposes
startTime
endTime
distance
numberOfSteps
speed
percentGrade
gpsSource
startDate
endDate
floorsAscended
floorsDescended
currentPace
currentCadence
averageActivePace
INFINITY
CompressedOutputStream
SRLogDataStream
Name
AuthService
WriterBundleId
RelatedSettingsCategories
PublicEntitlementValue
SampleClass
ExportingSampleClass
SRInfoPlistAuthCategory
Additions
AdditionalDataNote
SRSensorReader
SRDeletionRecord
%@ (%p): name: %@, authService: %@, writer: %@, relatedSettings: %@, publicEntitlement: %@, sampleClass: %@, exportingSampleClass: %@, additions: %@
{"acceleration": {"x": %0.*g, "y": %0.*g, "z": %0.*g}, "start": %0.*g, "timestamp": %0.*g, "identifier": %llu}
com.apple.private.sensorkit.reader.wildcard.allow
{"acceleration": {"x": %0.*g, "y": %0.*g, "z": %0.*g}, "timestamp": %ld}
{"rotationRate": {"x": %0.*g, "y": %0.*g, "z": %0.*g}, "start": %0.*g, "timestamp": %0.*g}
elevationAscended
elevationDescended
source
sourceId
averageSpeed
currentSpeed
suitableForRunning
suitableForWalking
SensorsCache
/System/Library/Frameworks/SensorKit.framework/SensorDescriptions
/var/mobile/Library/SensorKit/SensorDescriptions
com.apple.
plist
com.apple.SensorKitDataExport.main
heartRate
confidence
error
dataSource
mode
com.apple.sensorkit.dummy-bundle-id
AuthorizationStore
SRAuthorizationStore.updateQueue
com.apple.tcc.access.changed
v12@?0i8
@"NSMutableDictionary"16@?0@"NSString"8
SRSampleExporting
SRSampleDirectExporting
SRDataExportProtocol
SRMultiSampleExporting
NSObject
SRDataExportService
SRSensorReaderPrivateDelegate
SRSensorReaderDelegate
NSXPCListenerDelegate
SRCompressedOutputStream
SRSensorDescription
SRSensorsCache
NSCacheDelegate
SRTCCStorePassThrough
SRTCCStore
SRAuthorizationStore
q24@0:8@16
B16@0:8
q24@0:8@"NSOutputStream"16
v32@0:8@16@?24
v24@0:8@?16
v32@0:8@"NSSet"16@?<v@?@"NSURL"@"NSString"@"NSError">24
v24@0:8@?<v@?>16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v16@0:8
@24@0:8@16
@"NSDictionary"16@0:8
@"NSDictionary"24@0:8@"<SRSampling>"16
B40@0:8@16@24@32
v32@0:8@16@24
v40@0:8@16@24@32
v32@0:8@16q24
v24@0:8@16
B40@0:8@"SRSensorReader"16@"SRFetchRequest"24@"SRFetchResult"32
v32@0:8@"SRSensorReader"16@"SRFetchRequest"24
v40@0:8@"SRSensorReader"16@"SRFetchRequest"24@"NSError"32
v32@0:8@"SRSensorReader"16q24
v24@0:8@"SRSensorReader"16
v32@0:8@"SRSensorReader"16@"NSError"24
v32@0:8@"SRSensorReader"16@"NSArray"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
v40@0:8@16@24@?32
v48@0:8@16@24@?32@?40
v56@0:8@16@24@32@?40@?48
v20@0:8C16
v32@0:8@16d24
B52@0:8@16@24d32@40B48
@?16@0:8
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"SRFetchRequest"
@"NSXPCConnection"
@"NSMutableSet"
@"NSURL"
@"NSXPCListener"
@"SRSensorReader"
@"NSMutableArray"
@"NSOutputStream"
@"<SRMultiSampleExporting>"
@"<NSFastEnumeration>"16@0:8
q32@0:8r*16Q24
{?="dst_ptr"*"dst_size"Q"src_ptr"*"src_size"Q"state"^v}
@"NSFileHandle"
@"NSMutableData"
@"NSString"
@"NSArray"
@"NSSet"
v32@0:8@"NSCache"16@24
@"NSCache"
B28@0:8B16@20
B36@0:8B16@20@28
@"NSArray"24@0:8@"NSString"16
B24@0:8@"NSString"16
B28@0:8B16@"NSString"20
B32@0:8@"NSString"16@"NSString"24
B36@0:8B16@"NSString"20@"NSString"28
@"NSDictionary"
@"NSHashTable"
@"<SRTCCStore>"
softlink:o:path:/System/Library/PrivateFrameworks/HealthAlgorithms.framework/HealthAlgorithms
Tried to issue sandbox extension for %{public}@. Got %{public}s
Got a connection attempt on %@ from %@
Client connection requesting export has invalidated. Cancelling Export
Already busy exporting. Cancel the previous attempt before requesting another one
Connection does not have a valid entitlement
Failed to create output directory because %{public}@
Cancelling data export
Error initializing compression stream
No sensor identifiers found
Can't serialize disclaimer strings %@
Error exporting data for %{public}@. %{public}@
Successfully completed exported %{public}@. %{public}@ to go
Output stream is no longer valid
Invalid JSON object returned from sample %{public}@ for %{public}@ because %{public}@
Error producing sample for %{public}@ %{public}@
The sample class for %{public}@ must conform to either SRSampleExporting, SRSampleDirectExporting or SRMultiSampleExporting.
Failed to find HAPPGExporterClass when it should be there
Error creating writing file handle at %{public}@ because %{public}@
Error initializing stream
Error finalizing stream
Error finalizing stream, expecting COMPRESSION_STATUS_END but got COMPRESSION_STATUS_OK
Error writing to output file. %{public}@
Error compressing data. Got COMPRESSION_STATUS_END before finalizing the stream
Error compressing data
Data stream defined without a name
Data stream defined without an authorization service
Data stream defined without a writer bundle identifier
Unknown sensor type %{public}@
Failed to parse %{public}@ because %{public}@
Cached description for %{public}@, %{public}@
Could not retrieve authorization override information for TCC service %{public}@
Failed to register for TCC notifications.  Got status %{public}d
Retrieving fresh authorizations from TCC
Authorization Changed for bundle id %{public}@.
Granted: %{public}@
Reset: %{public}@
Revoked: %{public}@
Couldn't find a TCC service in the TCC access dictionary %{public}@
Could not retrieve authorization information for TCC service %{public}@
Authorized Bundle Ids for %{public}@, overridden %{public, bool}d, %{public}@
Deauthorized Bundle Ids for %{public}@, overridden %{public, bool}d, %{public}@
zPLR
zPLR
