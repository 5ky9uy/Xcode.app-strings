<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.sensorkit.export.allow-all</key>
<true/>
<key>com.apple.private.sensorkit.reader.holdingperiod.bypass</key>
<true/>
<key>com.apple.private.sensorkit.reader.wildcard.allow</key>
<true/>
</dict>
</plist>
rotationRate
timestamp
write:maxLength:
sr_writeUTF8RepresentationToOutputStream:
sr_prefersUTF8StringRepresentation
count
firstObject
fileURLWithPath:isDirectory:
init
dealloc
fileURLWithPath:isDirectory:relativeToURL:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLHostAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingPathComponent:
pathWithComponents:
stringWithFormat:
URLWithString:
indexOfObject:
arrayWithObjects:count:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
countByEnumeratingWithState:objects:count:
getResourceValue:forKey:error:
boolValue
relativePath
mainBundle
bundleIdentifier
stringByAppendingPathExtension:
initialize
_rootDir
serviceListener
_setQueue:
initWithQueue:listener:
setDelegate:
setOutputStream:
setCurrentReader:
setSensors:
setOutputURL:
setListener:
setDevices:
setCompletionHandler:
setMultiSampleExporter:
listener
resume
invalidate
outputURL
fileSystemRepresentation
stringWithUTF8String:
completionHandler
serviceName
exportDataForSensors:reply:
cancelWithReply:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
errorWithCode:
currentConnection
valueForEntitlement:
invalidEntitlementError
exportDataForSensors:toBaseDirectory:completionHandler:
initWithSensor:
exportDataForSensors:toBaseDirectory:createReader:completionHandler:
setDateFormat:
date
stringFromDate:
setFrom:
setTo:
exportDataForSensors:outputStream:fetchRequest:createReader:reply:
copy
setWithSet:
replyWithError:
startJSON
exportData
open
dictionary
setObject:forKeyedSubscript:
sensors
sensorDescriptionForSensor:
localizedAdditionalSampleDataNote
dataWithJSONObject:options:error:
initWithData:encoding:
dataUsingEncoding:
bytes
length
close
endJSON
anyObject
currentReader
setBypassHoldingPeriod:
startSensorJSON:
mutableCopy
setFirstSample:
devices
lastObject
currentDevice
setDevice:
fetch:
fetchDevices:
endSensorJSON
sensor
multiSampleExporter
sr_endMultiSampleStream
writeSample:device:timestamp:sampleDict:streaming:
removeLastObject
removeObject:
outputStream
writeJSONObject:toStream:options:error:
description
reason
sr_dictionaryRepresentation
numberWithDouble:
dictionaryWithObjects:forKeys:count:
writeJSON:
writeOne:
conformsToProtocol:
writeMetadataFragmentWithDevice:timestamp:
streamSample:sensor:
sample
exportingSampleClass
sr_beginMultiSampleStream
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
sr_dictionaryRepresentationWithSample:
sr_exportRepresentationEnumerator
device
sensorReader:fetchingRequest:didFetchResult:
sensorReader:didCompleteFetch:
sensorReader:fetchingRequest:failedWithError:
sensorReader:didChangeAuthorizationStatus:
sensorReaderWillStartRecording:
sensorReader:startRecordingFailedWithError:
sensorReaderDidStopRecording:
sensorReader:stopRecordingFailedWithError:
sensorReader:didFetchDevices:
sensorReader:fetchDevicesDidFailWithError:
listener:shouldAcceptNewConnection:
initWithQueue:
firstSensor
setFirstSensor:
firstSample
_createReader
_shouldStartNewMultiSampleExporter
_latestTimestamp
_exporting
_fetchRequest
_connection
_firstSensor
_firstSample
_sensors
_outputURL
_listener
_currentReader
_devices
_outputStream
_completionHandler
_multiSampleExporter
T@"NSMutableSet",&,V_sensors
T@"NSURL",&,V_outputURL
T@"NSXPCListener",&,V_listener
T@"SRSensorReader",&,V_currentReader
T@"NSMutableArray",&,V_devices
T@"NSOutputStream",&,V_outputStream
T@?,C,V_completionHandler
T@"<SRMultiSampleExporting>",&,V_multiSampleExporter
TB,V_firstSensor
TB,V_firstSample
currentHandler
handleFailureInFunction:file:lineNumber:description:
startTime
endTime
distance
steps
numberWithInt:
speed
percentGrade
gpsSource
numberWithInteger:
startDate
endDate
numberOfSteps
floorsAscended
floorsDescended
currentPace
currentCadence
averageActivePace
doubleValue
data
writeToURL:atomically:
fileHandleForWritingToURL:error:
initWithCapacity:
mutableBytes
closeFile
dataWithBytesNoCopy:length:freeWhenDone:
writeData:error:
hasSpaceAvailable
streamStatus
_algorithm
_compression_stream
_streamStatus
_bufferSize
_outputFileHandle
_buffer
acceleration
timeIntervalSinceReferenceDate
identifier
confidence
timeRange
mood
valence
arousal
dominance
detected
numberWithBool:
detectorIdentifier
duration
array
segments
addObject:
voiceAnalytics
jitter
acousticFeatureValuePerFrame
pitch
voicing
shimmer
speakingRate
averagePauseDuration
speechStartTimestamp
speechDuration
frameDuration
transcriptions
bestTranscription
isFinal
speechRecognitionMetadata
elevationAscended
numberWithUnsignedInteger:
elevationDescended
source
sourceId
UUIDString
averageSpeed
currentSpeed
suitableForRunning
suitableForWalking
heartRate
error
dataSource
mode
{"rotationRate": {"x": %0.*g, "y": %0.*g, "z": %0.*g}, "timestamp": %ld}
com.apple.SensorKit
RDFileURLs
com.apple.SensorKitDataExport
DataExport
v8@?0
@"SRSensorReader"16@?0@"NSString"8
yyyy-MM-dd-HH-mm-ss
SensorAndUsageData-%@.lz4
general
{"disclaimer": %@,"%@": [
SensorAndUsageData
%@{"%@": [
v24@?0@"NSArray"8@"NSError"16
"metadata":
device
timestamp
,"sample":
/System/Library/PrivateFrameworks/HealthAlgorithms.framework/HealthAlgorithms
/System/Library/PrivateFrameworks/HealthAlgorithms.framework/Contents/MacOS/HealthAlgorithms
HAPPGExporter
Class getHAPPGExporterClass(void)_block_invoke
SRDataExportService.m
Unable to find class %s
void *HealthAlgorithmsLibrary(void)
Data in this file is not intended for medical purposes
startTime
endTime
distance
numberOfSteps
speed
percentGrade
gpsSource
startDate
endDate
floorsAscended
floorsDescended
currentPace
currentCadence
averageActivePace
INFINITY
CompressedOutputStream
{"acceleration": {"x": %0.*g, "y": %0.*g, "z": %0.*g}, "start": %0.*g, "timestamp": %0.*g, "identifier": %llu}
com.apple.private.sensorkit.reader.wildcard.allow
mood
valence
arousal
dominance
confidence
timeRange
identifier
detected
detectorIdentifier
{"acceleration": {"x": %0.*g, "y": %0.*g, "z": %0.*g}, "timestamp": %ld}
duration
segments
speakingRate
averagePauseDuration
speechStartTimestamp
speechDuration
voiceAnalytics
jitter
acousticFeatureValuePerFrame
frameDuration
pitch
voicing
shimmer
redactedBestTranscription
redactedTranscriptions
final
speechRecognitionMetadata
{"rotationRate": {"x": %0.*g, "y": %0.*g, "z": %0.*g}, "start": %0.*g, "timestamp": %0.*g}
elevationAscended
elevationDescended
source
sourceId
averageSpeed
currentSpeed
suitableForRunning
suitableForWalking
com.apple.SensorKitDataExport.main
heartRate
error
dataSource
mode
SRSampleExporting
SRSampleDirectExporting
RDFileURLs
SRDataExportProtocol
SRMultiSampleExporting
NSObject
SRDataExportService
SRSensorReaderPrivateDelegate
SRSensorReaderDelegate
NSXPCListenerDelegate
SRCompressedOutputStream
q24@0:8@16
B16@0:8
q24@0:8@"NSOutputStream"16
v16@0:8
@16@0:8
@"NSURL"
v32@0:8@16@?24
v24@0:8@?16
v32@0:8@"NSSet"16@?<v@?@"NSURL"@"NSString"@"NSError">24
v24@0:8@?<v@?>16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"NSDictionary"16@0:8
@"NSDictionary"24@0:8@"<SRSampling>"16
B40@0:8@16@24@32
v32@0:8@16@24
v40@0:8@16@24@32
v32@0:8@16q24
v24@0:8@16
B40@0:8@"SRSensorReader"16@"SRFetchRequest"24@"SRFetchResult"32
v32@0:8@"SRSensorReader"16@"SRFetchRequest"24
v40@0:8@"SRSensorReader"16@"SRFetchRequest"24@"NSError"32
v32@0:8@"SRSensorReader"16q24
v24@0:8@"SRSensorReader"16
v32@0:8@"SRSensorReader"16@"NSError"24
v32@0:8@"SRSensorReader"16@"NSArray"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
v40@0:8@16@24@?32
v48@0:8@16@24@?32@?40
v56@0:8@16@24@32@?40@?48
v20@0:8C16
v32@0:8@16d24
B52@0:8@16@24d32@40B48
@?16@0:8
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"SRFetchRequest"
@"NSXPCConnection"
@"NSMutableSet"
@"NSXPCListener"
@"SRSensorReader"
@"NSMutableArray"
@"NSOutputStream"
@"<SRMultiSampleExporting>"
@"<NSFastEnumeration>"16@0:8
q32@0:8r*16Q24
{?="dst_ptr"*"dst_size"Q"src_ptr"*"src_size"Q"state"^v}
@"NSFileHandle"
@"NSMutableData"
softlink:o:path:/System/Library/PrivateFrameworks/HealthAlgorithms.framework/HealthAlgorithms
Tried to issue sandbox extension for %{public}@. Got %{public}s
Got a connection attempt on %@ from %@
Client connection requesting export has invalidated. Cancelling Export
Already busy exporting. Cancel the previous attempt before requesting another one
Connection does not have a valid entitlement
Failed to create output directory because %{public}@
Cancelling data export
Error initializing compression stream
No sensor identifiers found
Can't serialize disclaimer strings %@
Error exporting data for %{public}@. %{public}@
Successfully completed exported %{public}@. %{public}@ to go
Output stream is no longer valid
Invalid JSON object returned from sample %{public}@ for %{public}@ because %{public}@
Error producing sample for %{public}@ %{public}@
The sample class for %{public}@ must conform to either SRSampleExporting, SRSampleDirectExporting or SRMultiSampleExporting.
Failed to find HAPPGExporterClass when it should be there
Error creating writing file handle at %{public}@ because %{public}@
Error initializing stream
Error finalizing stream
Error finalizing stream, expecting COMPRESSION_STATUS_END but got COMPRESSION_STATUS_OK
Error writing to output file. %{public}@
Error compressing data. Got COMPRESSION_STATUS_END before finalizing the stream
Error compressing data
zPLR
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.private.sensorkit.export.allow-all</key>
<true/>
<key>com.apple.private.sensorkit.reader.holdingperiod.bypass</key>
<true/>
<key>com.apple.private.sensorkit.reader.wildcard.allow</key>
<true/>
</dict>
</plist>
rotationRate
timestamp
write:maxLength:
sr_writeUTF8RepresentationToOutputStream:
sr_prefersUTF8StringRepresentation
count
firstObject
fileURLWithPath:isDirectory:
init
dealloc
fileURLWithPath:isDirectory:relativeToURL:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLHostAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingPathComponent:
pathWithComponents:
stringWithFormat:
URLWithString:
indexOfObject:
arrayWithObjects:count:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
countByEnumeratingWithState:objects:count:
getResourceValue:forKey:error:
boolValue
relativePath
mainBundle
bundleIdentifier
stringByAppendingPathExtension:
initialize
_rootDir
serviceListener
_setQueue:
initWithQueue:listener:
setDelegate:
setOutputStream:
setCurrentReader:
setSensors:
setOutputURL:
setListener:
setDevices:
setCompletionHandler:
setMultiSampleExporter:
listener
resume
invalidate
outputURL
fileSystemRepresentation
stringWithUTF8String:
completionHandler
serviceName
exportDataForSensors:reply:
cancelWithReply:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
errorWithCode:
currentConnection
valueForEntitlement:
invalidEntitlementError
exportDataForSensors:toBaseDirectory:completionHandler:
initWithSensor:
exportDataForSensors:toBaseDirectory:createReader:completionHandler:
setDateFormat:
date
stringFromDate:
setFrom:
setTo:
exportDataForSensors:outputStream:fetchRequest:createReader:reply:
copy
setWithSet:
replyWithError:
startJSON
exportData
open
dictionary
setObject:forKeyedSubscript:
sensors
sensorDescriptionForSensor:
localizedAdditionalSampleDataNote
dataWithJSONObject:options:error:
initWithData:encoding:
dataUsingEncoding:
bytes
length
close
endJSON
anyObject
currentReader
setBypassHoldingPeriod:
startSensorJSON:
mutableCopy
setFirstSample:
devices
lastObject
currentDevice
setDevice:
fetch:
fetchDevices:
endSensorJSON
sensor
multiSampleExporter
sr_endMultiSampleStream
writeSample:device:timestamp:sampleDict:streaming:
removeLastObject
removeObject:
outputStream
writeJSONObject:toStream:options:error:
description
reason
sr_dictionaryRepresentation
numberWithDouble:
dictionaryWithObjects:forKeys:count:
writeJSON:
writeOne:
conformsToProtocol:
writeMetadataFragmentWithDevice:timestamp:
streamSample:sensor:
sample
exportingSampleClass
sr_beginMultiSampleStream
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
sr_dictionaryRepresentationWithSample:
sr_exportRepresentationEnumerator
device
sensorReader:fetchingRequest:didFetchResult:
sensorReader:didCompleteFetch:
sensorReader:fetchingRequest:failedWithError:
sensorReader:didChangeAuthorizationStatus:
sensorReaderWillStartRecording:
sensorReader:startRecordingFailedWithError:
sensorReaderDidStopRecording:
sensorReader:stopRecordingFailedWithError:
sensorReader:didFetchDevices:
sensorReader:fetchDevicesDidFailWithError:
listener:shouldAcceptNewConnection:
initWithQueue:
firstSensor
setFirstSensor:
firstSample
_createReader
_shouldStartNewMultiSampleExporter
_latestTimestamp
_exporting
_fetchRequest
_connection
_firstSensor
_firstSample
_sensors
_outputURL
_listener
_currentReader
_devices
_outputStream
_completionHandler
_multiSampleExporter
T@"NSMutableSet",&,V_sensors
T@"NSURL",&,V_outputURL
T@"NSXPCListener",&,V_listener
T@"SRSensorReader",&,V_currentReader
T@"NSMutableArray",&,V_devices
T@"NSOutputStream",&,V_outputStream
T@?,C,V_completionHandler
T@"<SRMultiSampleExporting>",&,V_multiSampleExporter
TB,V_firstSensor
TB,V_firstSample
currentHandler
handleFailureInFunction:file:lineNumber:description:
startTime
endTime
distance
steps
numberWithInt:
speed
percentGrade
gpsSource
numberWithInteger:
startDate
endDate
numberOfSteps
floorsAscended
floorsDescended
currentPace
currentCadence
averageActivePace
doubleValue
data
writeToURL:atomically:
fileHandleForWritingToURL:error:
initWithCapacity:
mutableBytes
closeFile
dataWithBytesNoCopy:length:freeWhenDone:
writeData:error:
hasSpaceAvailable
streamStatus
_algorithm
_compression_stream
_streamStatus
_bufferSize
_outputFileHandle
_buffer
acceleration
timeIntervalSinceReferenceDate
identifier
confidence
timeRange
mood
valence
arousal
dominance
detected
numberWithBool:
detectorIdentifier
duration
array
segments
addObject:
voiceAnalytics
jitter
acousticFeatureValuePerFrame
pitch
voicing
shimmer
speakingRate
averagePauseDuration
speechStartTimestamp
speechDuration
frameDuration
transcriptions
bestTranscription
isFinal
speechRecognitionMetadata
elevationAscended
numberWithUnsignedInteger:
elevationDescended
source
sourceId
UUIDString
averageSpeed
currentSpeed
suitableForRunning
suitableForWalking
heartRate
error
dataSource
mode
{"rotationRate": {"x": %0.*g, "y": %0.*g, "z": %0.*g}, "timestamp": %ld}
com.apple.SensorKit
RDFileURLs
com.apple.SensorKitDataExport
DataExport
v8@?0
@"SRSensorReader"16@?0@"NSString"8
yyyy-MM-dd-HH-mm-ss
SensorAndUsageData-%@.lz4
general
{"disclaimer": %@,"%@": [
SensorAndUsageData
%@{"%@": [
v24@?0@"NSArray"8@"NSError"16
"metadata":
device
timestamp
,"sample":
/System/Library/PrivateFrameworks/HealthAlgorithms.framework/HealthAlgorithms
/System/Library/PrivateFrameworks/HealthAlgorithms.framework/Contents/MacOS/HealthAlgorithms
HAPPGExporter
Class getHAPPGExporterClass(void)_block_invoke
SRDataExportService.m
Unable to find class %s
void *HealthAlgorithmsLibrary(void)
Data in this file is not intended for medical purposes
startTime
endTime
distance
numberOfSteps
speed
percentGrade
gpsSource
startDate
endDate
floorsAscended
floorsDescended
currentPace
currentCadence
averageActivePace
INFINITY
CompressedOutputStream
{"acceleration": {"x": %0.*g, "y": %0.*g, "z": %0.*g}, "start": %0.*g, "timestamp": %0.*g, "identifier": %llu}
com.apple.private.sensorkit.reader.wildcard.allow
mood
valence
arousal
dominance
confidence
timeRange
identifier
detected
detectorIdentifier
{"acceleration": {"x": %0.*g, "y": %0.*g, "z": %0.*g}, "timestamp": %ld}
duration
segments
speakingRate
averagePauseDuration
speechStartTimestamp
speechDuration
voiceAnalytics
jitter
acousticFeatureValuePerFrame
frameDuration
pitch
voicing
shimmer
redactedBestTranscription
redactedTranscriptions
final
speechRecognitionMetadata
{"rotationRate": {"x": %0.*g, "y": %0.*g, "z": %0.*g}, "start": %0.*g, "timestamp": %0.*g}
elevationAscended
elevationDescended
source
sourceId
averageSpeed
currentSpeed
suitableForRunning
suitableForWalking
com.apple.SensorKitDataExport.main
heartRate
error
dataSource
mode
SRSampleExporting
SRSampleDirectExporting
RDFileURLs
SRDataExportProtocol
SRMultiSampleExporting
NSObject
SRDataExportService
SRSensorReaderPrivateDelegate
SRSensorReaderDelegate
NSXPCListenerDelegate
SRCompressedOutputStream
q24@0:8@16
B16@0:8
q24@0:8@"NSOutputStream"16
v16@0:8
@16@0:8
@"NSURL"
v32@0:8@16@?24
v24@0:8@?16
v32@0:8@"NSSet"16@?<v@?@"NSURL"@"NSString"@"NSError">24
v24@0:8@?<v@?>16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@"NSDictionary"16@0:8
@"NSDictionary"24@0:8@"<SRSampling>"16
B40@0:8@16@24@32
v32@0:8@16@24
v40@0:8@16@24@32
v32@0:8@16q24
v24@0:8@16
B40@0:8@"SRSensorReader"16@"SRFetchRequest"24@"SRFetchResult"32
v32@0:8@"SRSensorReader"16@"SRFetchRequest"24
v40@0:8@"SRSensorReader"16@"SRFetchRequest"24@"NSError"32
v32@0:8@"SRSensorReader"16q24
v24@0:8@"SRSensorReader"16
v32@0:8@"SRSensorReader"16@"NSError"24
v32@0:8@"SRSensorReader"16@"NSArray"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@32@0:8@16@24
v40@0:8@16@24@?32
v48@0:8@16@24@?32@?40
v56@0:8@16@24@32@?40@?48
v20@0:8C16
v32@0:8@16d24
B52@0:8@16@24d32@40B48
@?16@0:8
v20@0:8B16
@"NSObject<OS_dispatch_queue>"
@"SRFetchRequest"
@"NSXPCConnection"
@"NSMutableSet"
@"NSXPCListener"
@"SRSensorReader"
@"NSMutableArray"
@"NSOutputStream"
@"<SRMultiSampleExporting>"
@"<NSFastEnumeration>"16@0:8
q32@0:8r*16Q24
{?="dst_ptr"*"dst_size"Q"src_ptr"*"src_size"Q"state"^v}
@"NSFileHandle"
@"NSMutableData"
softlink:o:path:/System/Library/PrivateFrameworks/HealthAlgorithms.framework/HealthAlgorithms
Tried to issue sandbox extension for %{public}@. Got %{public}s
Got a connection attempt on %@ from %@
Client connection requesting export has invalidated. Cancelling Export
Already busy exporting. Cancel the previous attempt before requesting another one
Connection does not have a valid entitlement
Failed to create output directory because %{public}@
Cancelling data export
Error initializing compression stream
No sensor identifiers found
Can't serialize disclaimer strings %@
Error exporting data for %{public}@. %{public}@
Successfully completed exported %{public}@. %{public}@ to go
Output stream is no longer valid
Invalid JSON object returned from sample %{public}@ for %{public}@ because %{public}@
Error producing sample for %{public}@ %{public}@
The sample class for %{public}@ must conform to either SRSampleExporting, SRSampleDirectExporting or SRMultiSampleExporting.
Failed to find HAPPGExporterClass when it should be there
Error creating writing file handle at %{public}@ because %{public}@
Error initializing stream
Error finalizing stream
Error finalizing stream, expecting COMPRESSION_STATUS_END but got COMPRESSION_STATUS_OK
Error writing to output file. %{public}@
Error compressing data. Got COMPRESSION_STATUS_END before finalizing the stream
Error compressing data
