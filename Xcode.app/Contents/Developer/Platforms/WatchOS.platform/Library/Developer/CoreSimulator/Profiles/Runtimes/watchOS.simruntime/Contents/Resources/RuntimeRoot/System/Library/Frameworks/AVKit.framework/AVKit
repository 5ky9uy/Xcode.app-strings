.AUUUUUU
com.apple.avkit.AVTimer.manage %p
com.apple.avkit.AVTimer.timer %p
%@ is not a valid initializer. You must call -[%@ initWithTimeInterval:queue:block:repeats:].
targetTimeWithinEndTimes
remainingTimeWithinEndTimes
maxTime
currentTimeWithinEndTimes
contentDuration
playerController.metadata
playerController.hasMediaSelectionOptions
playerController.hasSeekableLiveStreamingContent
playerController.hasLiveStreamingContent
playerController.canScanForward
playerController.canTogglePlayback
playerController.canScanBackward
playerController.playing
playerController.volume
playerController.contentDurationWithinEndTimes
playerController.canSeek
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_LABEL_TEXT
com.apple.avkit
AVKit
%@ (%p) %@
-[AVNowPlayingInfoController init]
-[AVNowPlayingInfoController dealloc]
metadata
rate
hasContent
MPMediaItemPropertyArtist
MPMediaItemArtwork
MPMediaItemPropertyArtwork
MPMediaItemPropertyPlaybackDuration
MPMediaItemPropertyTitle
MPNowPlayingInfoPropertyElapsedPlaybackTime
MPNowPlayingInfoPropertyPlaybackRate
MPNowPlayingInfoCenter
-[AVWatchPlaybackControlsViewController initWithNibName:bundle:]
playerController.atMaxTime
playerController.atMinTime
-[AVWatchPlaybackControlsViewController dealloc]
artist
title
%@: %@
VignetteUpperGradient
VignetteLowerGradient
PLAYBACK_CONTROLS_VIEW_CONTROLLER_DONE_BUTTON_TITLE
control-rewind
control-forward
H:|[vignetteUpperGradientView]|
vignetteUpperGradientView
V:|[vignetteUpperGradientView]
H:|[vignetteLowerGradientView]|
vignetteLowerGradientView
V:[vignetteLowerGradientView]|
H:|-(%f)-[doneButton]
doneButton
H:[remainingTimeLabel]-(%f)-|
remainingTimeLabel
H:|-(4)-[metadataLabel]-(4)-|
metadataLabel
H:|-(%f)-[playbackProgressView]-(%f)-|
playbackProgressView
V:[playbackProgressView]-(%f)-|
AVKitErrorDomain
AVKIT_ERROR_RECORDING_FAILED
v48@?0@8@"NSString"16@24@32@"NSString"40
v32@?0@8@16@24
v16@?0@"NSNotification"8
-[AVDoneButton initWithFrame:]
-[AVDoneButton dealloc]
v16@?0@"<AVBehavior>"8
v16@?0@"<AVBehaviorContext>"8
v16@?0@8
-[AVButton initWithFrame:]
-[AVButton dealloc]
AVRemoteCommandControllerDidReceiveStopCommandEventNotification
-[AVRemoteCommandController init]
-[AVRemoteCommandController dealloc]
canScanBackward
canScanForward
canSeek
canSeekChapterBackward
canSeekChapterForward
canTogglePlayback
canPlay
canPause
MPRemoteCommandCenter
/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
/System/Library/Frameworks/MediaPlayer.framework/Contents/MacOS/MediaPlayer
com.apple.AVKit.ChapterImageQueue
cgImage
UnsupportedContentIndicator
imageView
H:|-(>=10)-[imageView]-(>=10)-|
V:|-(>=10)-[imageView]-(>=10)-|
AVPlayerAssetFilename
AVPlayerShouldAutoplay
AVVideoGravity
-[AVPlayerViewController initWithNibName:bundle:]
playerController.hasEnabledAudio
playerController.hasEnabledVideo
playerController.status
-[AVPlayerViewController dealloc]
-[AVPlayerViewController initWithCoder:]
-[AVPlayerViewController encodeWithCoder:]
%@ only supports AVPlayer instances that have been initialized with the main queue as the dispatch queue for serializing key-value observations.
playerController.player
_playerLayerView.videoGravity
_playerLayerView.readyForDisplay
Audio/Video
H:|[unsupportedContentIndicatorView]|
unsupportedContentIndicatorView
V:|[unsupportedContentIndicatorView]|
H:|[playerLayerView]|
playerLayerView
V:|[playerLayerView]|
H:|[playbackControlsView]|
playbackControlsView
V:|[playbackControlsView]|
_playerLayerView
_showsPlaybackControlsView
NMUVolumeIndicatorControl
Unable to find class %s
/System/Library/PrivateFrameworks/NanoMediaUI.framework/NanoMediaUI
/System/Library/PrivateFrameworks/NanoMediaUI.framework/Contents/MacOS/NanoMediaUI
NACVolumeController
-[__AVPlayerLayerView initWithFrame:]
-[__AVPlayerLayerView dealloc]
layer
layer.videoGravity
layer.readyForDisplay
layer.videoRect
videoGravity
value
time stamp
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
*** -%@ only defined for abstract class.  Define %c[%@ %@]!
-[AVSlider initWithFrame:]
%@ is not a valid initializer. You must call -[%@ initWithFrame:].
-[AVSlider dealloc]
%@ is not a valid initializer. You must call -[%@ initWithOutputURL:settings:maximumRecordingDuration:finishString:].
%@ does not support unarchiving from a nib.
-[AVAudioRecorderViewController initWithOutputURL:settings:autorecord:maximumRecordingDuration:actionTitle:alwaysShowActionTitle:]
AUDIO_RECORDER_VIEW_CONTROLLER_SAVE_BUTTON_TITLE
-[AVAudioRecorderViewController dealloc]
AUDIO_RECORDER_VIEW_CONTROLLER_CANCEL_BUTTON_TITLE
multiply.circle.fill
StartRecordingButton
StopRecordingButton
PlayAuditionButton
PauseAuditionButton
AVKit is playing audiovisual content. That prevents backlight dim and screen off.
-[AVTimeLabel initWithFrame:]
-[AVTimeLabel dealloc]
+[AVPlayerController(AVMediaSelection) canonicalLanguageIdentifierFromString:]
NilString
hasAudioMediaSelectionOptions
hasLegibleMediaSelectionOptions
audioMediaSelectionOptions
-[AVPlayerController(AVMediaSelection) setAudioMediaSelectionOptions:]
currentAssetIfReady
legibleMediaSelectionOptions
-[AVPlayerController(AVMediaSelection) setLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) currentLegibleMediaSelectionOption]
player.appliesMediaSelectionCriteriaAutomatically
-[AVPlayerController(AVMediaSelection) selectedMediaOptionMayHaveChanged:]
q24@?0@8@16
avkit_persistentIdentifier
-[AVPlayerController(AVMediaSelection) _ensureUserCaptionDisplayType:]
-[AVPlayerController(AVMediaSelection) _disableLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) _enableAutoMediaSelection:]
-[AVPlayerController(AVMediaSelection) _setMediaOption:mediaCharacteristic:]
MediaSelectionOptionsPersistentID
playerController.timing
playerController.maxTiming
playerController.maxTime
playerController.minTiming
playerController.minTime
currentTime
playerController.seeking
playerController.seekToTime
targetTime
playerController.contentDuration
minTime
playerController.seekableTimeRanges
-[AVLabel initWithFrame:]
-[AVLabel dealloc]
-[AVPlayPauseButton initWithFrame:]
PlayButton
-[AVPlayPauseButton dealloc]
PauseButton
MEDIA_SELECTION_OPTION_OFF_TITLE
MEDIA_SELECTION_OPTION_AUTO_TITLE
%@-%@-%@
com.apple.Carousel
AVPlayerControllerCurrentTimeJumpedNotification
AVPlayerControllerPlaybackDidEndNotification
AVPlayerControllerContentDimensionsChangedNotification
AVPlayerControllerSelectedMediaOptionDidChangeNotification
AVPlayerControllerDidSeekChapterNotification
AVPlayerControllerDidSeekChapterChapterKey
AVPlayerControllerDidBeginScanningNotification
AVPlayerControllerDidEndScanningNotification
AVPlayerControllerScanningDirectionKey
-[AVPlayerController init]
com.apple.avkit.seekQueue
com.apple.avkit.playerControllerAssetInspectionQueue
-[AVPlayerController initWithPlayer:]
v32@?0{?=qiIq}8
v32@?0@"AVPlayerController"8@16@"NSNotification"24
-[AVPlayerController startInspectionIfNeeded]_block_invoke
shouldRestoreRate
delegateCanResumeAfterInterruption
v8@?0
B8@?0
-[AVPlayerController dealloc]
v32@?0@"AVPlayerController"8@16@"AVKeyValueChange"24
player.currentItem
timeControlStatus
player.currentItem.seekableTimeRanges
player.currentItem.loadedTimeRanges
player.currentItem.playbackBufferEmpty
player.currentItem.playbackLikelyToKeepUp
player.rate
hasLiveStreamingContent
seekToTimeInternal
shouldPreventIdleDisplaySleep
player.currentItem.presentationSize
contentDimensions
player.currentItem.asset
readyToPlay
player.currentItem.duration
hasEnabledAudio
currentAudioMediaSelectionOption
v16@?0@"AVPlayerController"8
hasEnabledVideo
currentVideoMediaSelectionOption
-[AVPlayerController _queuePlayer]
player.status
player.currentItem.status
status
player.error
seekableTimeRanges
playing
player.currentItem.hasEnabledVideo
playingOnExternalScreen
deviceBatteryChargingOrFull
commonMetadata
q24@?0@"AVChapter"8@"AVChapter"16
availableChapterLocales
composable
hasProtectedContent
availableMetadataFormats
compatibleWithAirPlayVideo
-[AVPlayerController _observeValueForKeyPath:oldValue:newValue:]
player.externalPlaybackActive
-[AVPlayerController setRate:]_block_invoke
v16@?0d8
pictureInPictureInterrupted
-[AVPlayerController setPlaying:]
v12@?0B8
-[AVPlayerController play:]
-[AVPlayerController autoplay:]
-[AVPlayerController pauseForAllCoordinatedPlaybackParticipants:]
-[AVPlayerController togglePlayback:]
-[AVPlayerController setVolume:]
player.volume
player.muted
-[AVPlayerController setCoordinatedPlaybackActive:]
presentationSize
timing
reversePlaybackEndTime
hasSeekableLiveStreamingContent
minTiming
player.currentItem.reversePlaybackEndTime
forwardPlaybackEndTime
maxTiming
player.currentItem.forwardPlaybackEndTime
player.currentItem.hasEnabledAudio
player.currentItem.hasVideo
contentChapters
streaming
player.currentItem.liveUpdateInterval
player.currentItem.seekableTimeRangesLastModifiedTime
completelySeekable
com.apple.motion.notserializable
player.timeControlStatus
touchBarRequiresLinearPlayback
-[AVPlayerController actuallySeekToTime]
player.currentItem.canPlayFastForward
player.currentItem.canPlayFastReverse
atMaxTime
atMinTime
-[AVPlayerController seekOrStepByFrameCount:]
-[AVPlayerController updateMinMaxTiming]
player.allowsExternalPlayback
externalPlaybackActive
playingOnSecondScreen
-[AVPlayerController externalPlaybackAirPlayDeviceLocalizedName]
EXTERNAL_PLAYBACK_DEVICE_NAME_NIL
externalPlaybackType
pictureInPictureSupported
hasVideo
-[AVPlayerController beginReducingResourcesForPictureInPicturePlayerLayer:]
-[AVPlayerController endReducingResourcesForPictureInPicturePlayerLayer:]
-[AVPlayerController _updateRateForScrubbingAndSeeking]
availableMediaCharacteristicsWithMediaSelectionOptions
maximumVideoResolution
availableVideoDynamicRanges
tracks
assetCache
nominalFrameRate
enabled
languageCode
mediaType
extendedLanguageTag
mediaCharacteristics
availableTrackAssociationTypes
-[AVPlayerController(AVPlayerControllerExternalPlaybackSupportInternal) setHandlesAudioSessionInterruptions:]
handlesAudioSessionInterruptions
player.usesExternalPlaybackWhileExternalScreenIsActive
PlayerController has live streaming content changed: %d
PlayerController has seekable live streaming content changed: %d
PlayerController has media selection options changed: %d
You must call -[AVObservationController stopAllObservation] before destroying it, perhaps in its owner's dealloc. %@
Invalid track type for frame stepping.
Invalid input base frame time.
%s %d %p
*** %s must be called on main thread. ***
%s AudioMediaSelectionOptions: %{public}@
%s LegibleMediaSelectionOptions: %{public}@
*** %s Received a forced-only media selection (%{public}@) when display type was NOT forced-only (was %ld). mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup: %d. ***
*** %s Received a non-forced-only media selection (%{public}@) from automatic media selection when display type was forced-only. ***
%s Enabling automatic display type because receiver changed captions to forced-only.
%s Persisting preferences for remote legible option change: %{public}@ -> %{public}@
%s Selected legible option: %{public}@ 
%s Selected audible option: %{public}@ 
%s Changing MACaptionAppearanceDisplayType: %ld -> %ld
%s %d
%s mediaOption: %{public}@ mediaCharacteristic: %{public}@
%s Skipped setting identical option.
%s player: %p
Interruption notification: AVPlayerPlaybackWasInterruptedNotification player.rate: %.1f userinfo: %@
Interruption notification: AVAudioSessionInterruptionNotification player.rate: %.1f userinfo: %@
AVAudioSessionInterruptionTypeBegan: %f
AVAudioSessionInterruptionTypeEnded: %f
%s %s %s
** AVPlayerViewController deallocated while preventing idle display sleep ** THIS SHOULD NEVER HAPPEN!
%s queuePlayer: %d
PlayerItemDidChange
New playerItem: <%{public}@: %p>
New asset: <%{public}@: %p>
SeekableTimeRanges changed {%f, %f} -> {%f, %f}.
liveStreamEventModePossible: %d
Time control status = %ld
Playback likely to keep up changed to: %@
%s setPlaying:YES because AVPlayerControllerAutoplayEnabled
isPlaybackBufferEmpty: %d
Rate changed to: %f
Setting prevent idle display sleep to YES
Setting prevent idle display sleep to NO
Failed to handle %@ %@
Calling playImmediatelyAtRate: %f
Could not play immediately, setting a play immediately retry block.
%s immediately %.1f on %p
%s %.1f on %p
Retrying play immediately.
Can play immediately: %d
%s setPlaying:YES
%s setPlaying:YES (AVPlayerControllerAutoplayEnabled)
%s notifyCoordinatedPlayback of pause: %@
%s %f
%s coordinatedPlaybackActive set to %d
Scrubbing Started
Scrubbing Ended
%s time: %f toleranceBefore: %f toleranceAfter: %f
Seek completed: %s
%s stepByCount: %ld
%s sampleBasedSeekTarget: %f
Modifying seekableTimeRange by: %f
segmentDuration: %f
minTimingNeedsUpdate: %d, new minTiming with minTime: %f, rate: %f, old minTime: %f, delta: %f
maxTimingNeedsUpdate: %d, new maxTiming with maxTime: %f old maxTime: %f, delta: %f
%s Using output context %@
Calls to -[AVPlayerController stopUsingNetworkResourcesForLiveStreamingWhilePaused] must be counterbalanced with calls to -[AVPlayerController startUsingNetworkResourcesForLiveStreamingWhilePaused].
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/PrivateFrameworks/NanoMediaUI.framework/NanoMediaUI
softlink:r:path:/System/Library/PrivateFrameworks/NanoAudioControl.framework/NanoAudioControl
zPLR
AVTimer
AVPlaybackControlsViewController
AVNowPlayingInfoController
AVAdditions
AVWatchPlaybackControlsViewController
PUICSliderDelegate
NSObject
AVObservationController
AVProxyKVOObserver
AVKeyValueChange
AVDoneButton
AVDefaultBehaviorContext
AVBehaviorContext
AVBehaviorInternal
AVBehavior
AVBehaviorContextInternal
AVBehaviorStorage
AVBehaviorSupport
AVButton
AVRemoteCommandController
AVChapter
NSCopying
AVUnsupportedContentIndicatorView
AVPlayerViewController
NMUVolumeIndicatorControlDelegate
AVPlaybackControlsViewControllerVisibility
AVPlaybackControlsViewControllerActions
AVPlayerViewController_WebKitOnly
__AVPlayerLayerView
EmbeddedAdditions
AVValueTiming
NSSecureCoding
NSCoding
NSMutableCopying
AVMutableValueTiming
AVValueTimingCreation
AVExtendedValueTiming
AVExtendedMutableValueTiming
AVConcreteValueTiming
AVConcreteMutableValueTiming
AVTouchIgnoringView
AVSlider
AVAudioRecorderViewController
AVAudioPlayerDelegate
AVAudioRecorderDelegate
AVWaveformViewDataSource
_AVBacklightAssertion
AVTimeLabel
AVMediaSelection
AVPlayerController
AVPlayerControllerTimeResolver
TimeObserverAdditions
_AVBundle
AVLabel
AVPlayPauseButton
AVWaveformView
AVPlayerControllerExternalPlaybackSupportInternal
init
stringWithFormat:
UTF8String
raise:format:
initWithTimeInterval:queue:block:repeats:
dealloc
invalidate
interval
.cxx_destruct
_queue
_timer
_invalidated
_interval
Td,R,V_interval
initWithNibName:bundle:
isViewLoaded
defaultCenter
removeObserver:
removeObserver:forKeyPath:context:
stopUsingNetworkResourcesForLiveStreamingWhilePaused
setPlayerController:
startUsingNetworkResourcesForLiveStreamingWhilePaused
viewDidLoad
setInterval:
playerController
setResolution:
addObserver:forKeyPath:options:context:
arrayWithObjects:count:
sharedAVSystemController
setAttribute:forKey:error:
mainQueue
_updateVolumeSliderVisibility
addObserverForName:object:queue:usingBlock:
viewDidAppear:
viewDidDisappear:
updatePlaybackControlsEnabledStates
_updatePlaybackProgress
volume
updateVolumeSliderValue:
isPlaying
setPlaying:
hasLiveStreamingContent
setShowsStreamingControls:
hasSeekableLiveStreamingContent
_updateElapsedTimeLabel
_updateRemainingTimeLabel
setShowsLiveStreamScrubber:
hasMediaSelectionOptions
setShowsMediaSelectionButton:
metadata
setMetadata:
observeValueForKeyPath:ofObject:change:context:
seekableTimeRanges
count
seekableTimeRangeDuration
currentTimeWithinEndTimes
setStyle:
contentDuration
setFormatTemplate:
stringFromSeconds:
updateElapsedTimeLabel:
remainingTimeWithinEndTimes
updateRemainingTimeLabel:
targetTimeWithinEndTimes
contentDurationWithinEndTimes
updatePlaybackProgress:
setShowsVolumeSlider:
playerViewController
showPlaybackControlsViewForTouchDown
hidePlaybackControlsViewForTouchUp
canTogglePlayback
setPlayPauseButtonEnabled:
_userInteractionObservationControlTouchDown:
addTarget:action:forControlEvents:
_userInteractionObservationControlTouchUp:
removeTarget:action:forControlEvents:
doneButtonTapped:
value
setVolume:
skipBackwardThirtySeconds:
seekChapterBackward:
beginScanningBackward:
endScanningBackward:
togglePlayback:
beginScanningForward:
endScanningForward:
seekChapterForward:
gotoEndOfSeekableRanges:
addControlForUserInteractionObservation:
removeControlForUserInteractionObservation:
scaleButtonTapped:
volumeSliderValueChanged:
mediaSelectionButtonTapped:
fullScreenButtonTapped:
pictureInPictureButtonTapped:
setPlayerViewController:
showsDoneButton
setShowsDoneButton:
isPlayPauseButtonEnabled
showsStreamingControls
showsLiveStreamScrubber
showsScaleButton
setShowsScaleButton:
scaleButtonType
setScaleButtonType:
showsLoadingIndicator
setShowsLoadingIndicator:
showsMediaSelectionButton
showsExitFullScreenButton
setShowsExitFullScreenButton:
showsPictureInPictureButton
setShowsPictureInPictureButton:
isPictureInPictureButtonEnabled
setPictureInPictureButtonEnabled:
showsVolumeSlider
_playerController
_intervalTimeResolver
_resolutionTimeResolver
_elapsedTimeFormatter
_remainingTimeFormatter
_AVSystemControllerCurrentRouteHasVolumeControlDidChangeObserver
_viewAppeared
_showsDoneButton
_playing
_playPauseButtonEnabled
_showsStreamingControls
_showsLiveStreamScrubber
_showsScaleButton
_showsLoadingIndicator
_showsMediaSelectionButton
_showsExitFullScreenButton
_showsPictureInPictureButton
_pictureInPictureButtonEnabled
_showsVolumeSlider
_playerViewController
_scaleButtonType
_metadata
T@"AVPlayerController",&,N
T@"AVPlayerViewController",W,N,V_playerViewController
TB,N,V_showsDoneButton
playing
TB,N,GisPlaying,V_playing
playPauseButtonEnabled
TB,N,GisPlayPauseButtonEnabled,V_playPauseButtonEnabled
TB,N,V_showsStreamingControls
TB,N,V_showsLiveStreamScrubber
TB,N,V_showsScaleButton
Tq,N,V_scaleButtonType
TB,N,V_showsLoadingIndicator
TB,N,V_showsMediaSelectionButton
TB,N,V_showsExitFullScreenButton
TB,N,V_showsPictureInPictureButton
pictureInPictureButtonEnabled
TB,N,GisPictureInPictureButtonEnabled,V_pictureInPictureButtonEnabled
TB,N,V_showsVolumeSlider
T@"NSDictionary",&,N,V_metadata
rangeOfString:
substringToIndex:
substringFromIndex:
object
_setNowPlayingInfoNeedsUpdate
_updateNowPlayingInfoIfNeeded
performSelector:withObject:afterDelay:
cancelPreviousPerformRequestsWithTarget:selector:object:
_updateNowPlayingInfo
dictionary
hasContent
objectForKeyedSubscript:
setObject:forKeyedSubscript:
initWithImage:
numberWithDouble:
timing
currentValue
minTime
rate
setNowPlayingInfo:
_playerControllerCurrentTimeJumpedObserver
_nowPlayingInfoNeedsUpdate
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setPriority:
AV_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:
setActive:
AV_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:active:
layer
setMasksToBounds:
CGColor
setShadowColor:
setShadowOffset:
setShadowOpacity:
setShadowPathIsBounds:
setShadowRadius:
setCornerRadius:
AV_setBackgroundBackgroundColor:
AV_setCornerRadius:
currentDevice
puic_deviceVariant
_setupLayoutSpec
setIsInteractivelyScrubbing:
setEnabled:
setText:
view
setHidden:
transitionWithView:duration:options:animations:completion:
setScrubbing:
setBackgroundColor:
becomeFirstResponder
clearColor
resignFirstResponder
seekToTime:
isInteractivelyScrubbing
setValue:animated:
initWithFrame:
setView:
imageNamed:inBundle:compatibleWithTraitCollection:
setImage:
setTranslatesAutoresizingMaskIntoConstraints:
addSubview:
setTitle:forState:
setValue:
_scrubSliderValueChanged:
setDelegate:
setShouldAutomaticallAdjustValueOnTouch:
_seekBackwardButtonTapped:
isAudioOnlyContent
transportControlsAddTimeIntervalForSkipImage:
setImage:forState:
_seekForwardButtonTapped:
setTextAlignment:
dictionaryWithObjects:forKeys:count:
constraintsWithVisualFormat:options:metrics:views:
activateConstraints:
defaultPUICStatusBarFontBaseLine
navigationController
viewWillAppear:
viewWillDisappear:
willMoveToParentViewController:
didMoveToParentViewController:
isAtMinTime
isAtMaxTime
seekByTimeInterval:
size
drawAtPoint:
systemFontOfSize:weight:
colorWithWhite:alpha:
localizedStringFromNumber:numberStyle:
sizeWithAttributes:
drawAtPoint:withAttributes:
setEnabled:animated:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
slider:didTapTouchTarget:
sliderDidBeginCrownInteraction:
sliderDidEndCrownInteraction:
sliderDidRequestFocus:
interactiveScrubberEnabled
setInteractiveScrubberEnabled:
setAudioOnlyContent:
loadView
prefersStatusBarHidden
_metadataLabelText
_audioOnlyContent
_remainingTimeLabelText
_playbackProgress
_isInteractivelyScrubbing
_previousFirstResponder
_doneButton
_remainingTimeLabel
_scrubber
_seekBackwardButton
_playPauseButton
_seekForwardButton
_metadataLabel
_volumeControl
_interactiveScrubberEnabled
_vignetteLowerGradientView
_vignetteUpperGradientView
audioOnlyContent
TB,N,GisAudioOnlyContent
TB,N,V_isInteractivelyScrubbing
errorWithDomain:code:userInfo:
_stopAllObservation
copy
initWithValue:oldValue:keyPath:observationToken:
isMainThread
initWithObservedObject:observer:keyPaths:retainingObservedObject:includeInitialValue:includeChanges:changesBlock:
token
startObserving:completion:
startObserving:keyPaths:includeInitialValue:observationHandler:
startObserving:keyPaths:includeInitialValue:includeChanges:observationHandler:
startObserving:keyPaths:observationHandler:
name
userInfo
initWithName:object:userInfo:
stopObserving
removeObjectForKey:
allValues
removeAllObjects
countByEnumeratingWithState:objects:count:
allKeys
initWithOwner:
startObserving:keyPath:includeInitialValue:observationHandler:
startObserving:keyPath:observationHandler:
startObservingNotificationForName:object:notificationCenter:observationHandler:
stopObserving:
stopAllObservation
_unfairLock
_proxyObserversByTokens
_notificationObservers
_notificationCenters
_owner
setWithArray:
processInfo
globallyUniqueString
includeChanges
keyPaths
includeInitialValue
anyObject
valueForKeyPath:
_handleValueChangeForKeyPath:ofObject:oldValue:newValue:context:
changesBlock
_retainedObservedObject
_unsafeUnretainedObservedObject
_canHandleChanges
_includeInitialValue
_includeChanges
_token
_keyPaths
_changesBlock
T@"NSString",R,N,V_token
TB,R,N,V_includeInitialValue
TB,R,N,V_includeChanges
T@"NSSet",R,N,V_keyPaths
T@?,R,N,V_changesBlock
null
oldValue
keyPath
observationToken
_value
_oldValue
_keyPath
_observationToken
T@,R,N,V_value
T@,R,N,V_oldValue
T@"NSString",R,N,V_keyPath
T@,R,N,V_observationToken
whiteColor
setTitleColor:forState:
systemGrayTextColor
imageView
setTintColor:
titleLabel
defaultPUICStatusBarFont
setFont:
mediaType
isEqualToString:
_avkit_timeForFrameUsingSampleCursorSteppedByFrameCount:fromFrameAtTime:
_avkit_findTimeForFrameUsingFrameRateSteppedByFrameCount:fromFrameAtTime:
nominalFrameRate
_avkit_frameRateIsValid:
minFrameDuration
avkit_timeForFrameSteppedByFrameCount:fromFrameAtTime:
colorWithRed:green:blue:alpha:
systemGrayColor
AV_indicatorBackgroundColor
AV_indicatorForegroundColor
T@"AVPlayerViewController",R,W,N
initWithAVKitOwner:
T@"AVPlayerViewController",R,W,N,V_playerViewController
strongToStrongObjectsMapTable
behaviorsAndBehaviorContexts
keyEnumerator
allObjects
objectForKey:
willMoveToContext:
behaviorContext
setBehaviorContext:
behaviorContextClass
T@,W,N
AVKitOwner
willAddBehavior:
setObject:forKey:
setBehavior:
didAddBehavior:
willRemoveBehavior:
didRemoveBehavior:
behavior
enumerateAllBehaviorsUsingBlock:
objectEnumerator
enumerateAllBehaviorContextsUsingBlock:
enumerateAllBehaviorContextsConformingToProtocol:usingBlock:
behaviors
addBehavior:
removeBehavior:
enumerateAllBehaviorsConformingToProtocol:usingBlock:
behaviorOfClass:
enumerateAllBehaviorContextsImplementingSelector:forProtocol:usingBlock:
behaviorContextOfClass:
setAVKitOwner:
_AVKitOwner
_behaviorsAndBehaviorContexts
T@,W,N,V_AVKitOwner
T@"NSMapTable",R,N,V_behaviorsAndBehaviorContexts
_ensureBehaviorStorage
_behaviorStorage
T@"NSArray",R,N
buttonWithType:
setAdjustsImageWhenDisabled:
setAdjustsImageWhenHighlighted:
isHighlighted
setHighlighted:
setAlpha:
setTransform:
animateWithDuration:animations:
alignmentRectInsets
AV_isCompact
AV_compact
TB,R,N,GAV_isCompact
sharedCommandCenter
pauseCommand
_handleRemoteCommandEvent:
addTarget:action:
playCommand
stopCommand
togglePlayPauseCommand
nextTrackCommand
previousTrackCommand
skipForwardCommand
skipBackwardCommand
seekForwardCommand
seekBackwardCommand
changePlaybackRateCommand
changePlaybackPositionCommand
_updateRegisteredRemoteCommandEnabledStates
removeTarget:action:
canPause
canPlay
canSeekChapterForward
canScanForward
canSeekChapterBackward
canScanBackward
canSeek
command
pause:
play:
postNotificationName:object:
type
playbackRate
setRate:
positionTime
initWithStartTime:duration:number:title:imageFaultBlock:
setCGImage:
startTime
duration
number
title
cgImage
setValue:forUndefinedKey:
valueForUndefinedKey:
objectAtIndexedSubscript:
initialize
playbackChapterWithStartTime:duration:number:title:imageFaultBlock:
chapterAtTime:inChapters:
copyWithZone:
setCgImage:
_imageBlock
_startTime
_duration
_number
_title
_cgImage
T^{CGImage=},N,V_cgImage
Td,R,V_startTime
Td,R,V_duration
TQ,R,V_number
T@"NSString",R,C,V_title
URLForResource:withExtension:
dataWithContentsOfURL:
imageWithData:
pathExtension
length
stringByDeletingPathExtension
checkResourceIsReachableAndReturnError:
imageForResource:size:
URLForMovieResource:
setContentMode:
imageNamed:inBundle:
_flatImageWithColor:
addConstraint:
addConstraints:
_imageView
_updatePlaybackControlsViewVisibilityIfNeeded
initWithCoder:
containsValueForKey:
decodeObjectForKey:
mainBundle
playerWithURL:
initWithPlayer:
decodeBoolForKey:
decodeIntegerForKey:
encodeWithCoder:
videoGravity
encodeInteger:forKey:
player
dispatchQueue
setWithObject:
setVideoGravity:
isReadyForDisplay
playerViewControllerShouldHandleDoneButtonTap:
loadViewIfNeeded
insertSubview:below:
centerYAnchor
constraintEqualToAnchor:
centerXAnchor
widthAnchor
heightAnchor
_showOrHidePlaybackControlsView
volumeController
volumeValue
flashVolumeControl:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
animateWithDuration:animations:completion:
blackColor
setClipsToBounds:
localVolumeControllerWithAudioCategory:
setVolumeController:
addChildViewController:
standardLayoutConstraintsWithSuperview:
_handleDoubleTapGesture:
initWithTarget:action:
setNumberOfTapsRequired:
addGestureRecognizer:
_handleSingleTapGesture:
requireGestureRecognizerToFail:
setNeedsStatusBarAppearanceUpdate
willChangeValueForKey:
didChangeValueForKey:
timeControlStatus
_showPlaybackControlsViewIfNeededAndHideIfPossibleAfterDelayIfPlaying
_hidePlaybackControlsViewIfPossibleUntilFurtherUserInteraction
autoplay:
_updateUnsupportedContentIndicatorView
_updatePlaybackControlsViewVisibilityForUnsupportedContent
boolValue
_isAudioOnlyContent
_updatePlaybackControlsViewVisibilityForAudioOnlyContent
status
_isUnsupportedContent
hasEnabledVideo
hasEnabledAudio
_setPlaybackControlsViewVisibilityNeedsUpdate
isVideoScaled
setVideoScaled:
_showsPlaybackControlsView
_hidePlaybackControlsViewIfPossibleAfterDelayIfPlayingWithDelay:
_hidePlaybackControlsViewIfPossible
_showPlaybackControlsViewIfNeededAndHideIfPossibleAfterDelayIfPlayingWithDelay:
_firePlaybackControlsViewVisibilityTimer:
animateWithDuration:delay:options:animations:completion:
keyPathsForValuesAffectingPlayer
keyPathsForValuesAffectingVideoGravity
keyPathsForValuesAffectingReadyForDisplay
volumeIndicatorDidBeginAdjustingVolume:
volumeIndicatorDidAdjustVolume:
volumeIndicatorDidEndAdjustingVolume:
volumeIndicatorWasTapped:
setPlayer:
delegate
contentOverlayView
setShowsPlaybackControls:
childViewControllerForStatusBarHidden
canBecomeFirstResponder
_showPlaybackControlsViewIfNeeded
_hidePlaybackControlsViewIfPossibleAfterDelayIfPlaying
showsPlaybackControls
_playerShouldAutoplay
_videoGravity
_nowPlayingInfoController
_remoteCommandController
_unsupportedContentIndicatorView
_playerLayerView
_contentOverlayView
_playbackControlsViewController
_volumeControlFadeOutTimer
_playbackControlsViewVisibilityNeedsUpdate
_playbackControlsViewVisibilityCounter
_playbackControlsViewVisibilityTimer
_isShowingPlaybackControlsViewForUserInteraction
_isShowingPlaybackControlsViewAfterUserInteraction
_isShowingPlaybackControlsViewForUnsupportedContent
_isShowingPlaybackControlsViewForAudioOnlyContent
_delegate
_delegateRespondsTo
_showsPlaybackControls
__behaviorStorage
T@"AVBehaviorStorage",R,N,V__behaviorStorage
readyForDisplay
TB,R,N,GisReadyForDisplay
T@"<AVPlayerViewControllerDelegate>",W,N
T@"AVPlayer",&,N
T@"NSString",C,N
T@"UIView",R,N
TB,N,V_showsPlaybackControls
showPlaybackControlsViewForVolumeChange
presentingViewController
dismissViewControllerAnimated:completion:
initWithPlayerLayerView:
setWithObjects:
videoRect
layerClass
keyPathsForValuesAffectingPlayerLayer
keyPathsForValuesAffectingVideoRect
keyPathsForValuesAffectingVideoScaled
playerLayer
T@"AVPlayerLayer",R,N
Tq,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
videoScaled
TB,N,GisVideoScaled
initWithCGImage:
image
T@"UIImage",R
_timing
isEqualToValueTiming:
allocWithZone:
initWithValueTiming:
decodeDoubleForKey:
initWithAnchorValue:anchorTimeStamp:rate:
anchorValue
encodeDouble:forKey:
anchorTimeStamp
supportsSecureCoding
TB,R
mutableCopyWithZone:
classForCoder
Td,R,N
setAnchorValue:
setAnchorTimeStamp:
Td,D,N
valueTimingWithAnchorValue:anchorTimeStamp:rate:
systemUptime
currentTimeStamp
valueForTimeStamp:
timeStampForValue:
setValueTiming:
_timeStamp
_rate
hitTest:withEvent:
initWithSliderStyle:
setNumberOfSteps:
setShouldFadeAccessoryImages:
systemOrangeColor
gestureRecognizerShouldBegin:
intrinsicContentSize
initWithOutputURL:settings:autorecord:maximumRecordingDuration:actionTitle:alwaysShowActionTitle:
setFullWidth:
state
currentTime
setCurrentTime:
setState:
sharedInstance
unsignedIntegerValue
_recordingDidStop
_enableUserIdleDisplaySleep
cancel
systemImageNamed:
alwaysShowActionTitle
font
pointSize
monospacedTimeFontOfSize:
setTextColor:
save
setDataSource:
recorderButtonPressed
_calculateButtonAndLabelFrames
setCategory:error:
setActive:error:
autorecord
stop
pause
_startRecording
_disableUserIdleDisplaySleep
play
audioRecorderViewControllerDidCancel:
audioRecorderViewControllerDidFinish:
initWithURL:settings:error:
_failureWithError:
setInstantaneousMetering:
setMeteringEnabled:
setRecording:
record
audioRecorderViewControllerDidStart:
initWithContentsOfURL:error:
audioRecorderViewController:didFailWithError:
audioRecorderViewControllerRequestsBacklightAssertionCreate:
audioRecorderViewControllerRequestsBacklightAssertionRelease:
frame
semanticContentAttribute
userInterfaceLayoutDirectionForSemanticContentAttribute:
sizeThatFits:
setFrame:
updateMeters
averagePowerForChannel:
audioPlayerDidFinishPlaying:successfully:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerBeginInterruption:
audioPlayerEndInterruption:withOptions:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:
audioRecorderDidFinishRecording:successfully:
audioRecorderEncodeErrorDidOccur:error:
audioRecorderBeginInterruption:
audioRecorderEndInterruption:withOptions:
audioRecorderEndInterruption:withFlags:
audioRecorderEndInterruption:
waveformViewPowerForCurrentTime:
initWithOutputURL:settings:
initWithOutputURL:settings:maximumRecordingDuration:finishString:
viewWillLayoutSubviews
outputURL
actionTitle
maximumDuration
settings
setSettings:
_audioRecorder
_audioPlayer
_waveformView
_timeLabel
_cancelButton
_compactCancelButton
_saveButton
_recorderButton
_timeFormatter
_displayedTime
_state
_stateToSetAfterInterruption
_audioSessionInterruptionObserver
_applicationWillResignActiveObserver
_autorecord
_alwaysShowActionTitle
_outputURL
_actionTitle
_maximumDuration
_settings
T@"NSURL",R,N,V_outputURL
T@"NSString",R,C,N,V_actionTitle
TB,R,N,V_autorecord
TB,R,N,V_alwaysShowActionTitle
Td,R,N,V_maximumDuration
T@"NSDictionary",C,N,V_settings
T@"<AVAudioRecorderViewControllerDelegate>",W,N,V_delegate
fontDescriptor
fontDescriptorByAddingAttributes:
fontAttributes
floatValue
fontWithDescriptor:size:
fontWithName:size:
timeFontWithFont:
systemFontOfSize:
boldSystemFontOfSize:
italicSystemFontOfSize:
monospacedDigitSystemFontOfSize:weight:
traitCollectionWithPreferredContentSizeCategory:
preferredFontForTextStyle:compatibleWithTraitCollection:
timeFontWithName:size:
timeFontOfSize:
boldTimeFontOfSize:
italicTimeFontOfSize:
avkit_nonScalingFontWithTextStyle:weight:
takeAssertion
releaseAssertion
_takeAssertion
_releaseAssertion
initWithReason:forDisplay:willPreventScreenOff:willPreventGestures:timeoutSeconds:timeoutBlock:
tickle
_backlightAssertion
canonicalLanguageIdentifierFromString:
hasAudioMediaSelectionOptions
hasLegibleMediaSelectionOptions
audioMediaSelectionOptions
isEqualToArray:
setAudioMediaSelectionOptions:
setLegibleMediaSelectionOptions:
selectedMediaOptionMayHaveChanged:
_selectedMediaOptionWithMediaCharacteristic:
containsObject:
visualMediaSelectionOptions
_setMediaOption:mediaCharacteristic:
legibleMediaSelectionOptions
hasMediaCharacteristic:
appliesMediaSelectionCriteriaAutomatically
_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup
_disableLegibleMediaSelectionOptions:
_enableAutoMediaSelection:
currentAssetIfReady
mediaSelectionGroupForMediaCharacteristic:
options
externalPlaybackType
handlesAudioSessionInterruptions
extendedLanguageTag
_ensureUserCaptionDisplayType:
currentLegibleMediaSelectionOption
currentAudioMediaSelectionOption
propertyList
reloadOptionsAssumingMediaOptionsMayHaveChanged:
audioOptions
legibleOptions
setLegibleMediaSelectionOptions:audioMediaSelectionOptions:assumeMediaOptionMayHaveChanged:
_optionsForGroup:
playableMediaSelectionOptionsFromArray:
autoupdatingCurrentLocale
localeIdentifier
languageCompare:currentLanguageCode:currentLanguageIdentifier:
sortedArrayUsingComparator:
numberWithBool:
array
isAC3Only
addObject:
arrayWithArray:
currentItem
currentMediaSelection
selectedMediaOptionInMediaSelectionGroup:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
arrayByAddingObjectsFromArray:
valueForKey:
avkit_persistentIdentifier
removeObject:
isEqualToSet:
isCC
isAuxiliary
isEasyReader
isSDH
isMain
selectMediaOptionAutomaticallyInMediaSelectionGroup:
_performAutomaticMediaSelectionForUserCaptionDisplayType:
selectMediaOption:inMediaSelectionGroup:
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
currentVideoMediaSelectionOption
keyPathsForValuesAffectingCurrentAudioMediaSelectionOption
setCurrentAudioMediaSelectionOption:
keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption
setCurrentLegibleMediaSelectionOption:
selectedMediaOptionMayHaveChanged
reloadOptions
reloadOptionsAndCurrentSelections
reloadAudioOptions
reloadLegibleOptions
keyPathsForValuesAffectingHasMediaSelectionOptions
keyPathsForValuesAffectingHasAudioMediaSelectionOptions
keyPathsForValuesAffectingHasLegibleMediaSelectionOptions
mediaSubTypes
unsignedIntValue
locale
displayName
localizedCaseInsensitiveCompare:
AC3Only
TB,R,GisAC3Only
main
TB,R,GisMain
TB,R,GisSDH
TB,R,GisCC
easyReader
TB,R,GisEasyReader
auxiliary
TB,R,GisAuxiliary
T@"NSNumber",R
audioFormats
integerValue
seekToTime:toleranceBefore:toleranceAfter:
automaticallyNotifiesObserversOfCurrentTime
resolution
setMinTime:
maxTime
setMaxTime:
_resolution
_currentTime
_minTime
_maxTime
Td,V_minTime
Td,V_maxTime
T@"<AVTimeControlling>",&
seekToTime
isSeeking
targetTime
setTargetTime:
CMTimeRangeValue
setTargetTimeWithinEndTimes:
remainingTargetTimeWithinEndTimes
setCurrentTimeWithinEndTimes:
remainingTime
isCurrentTimeAtEndOfSeekableTimeRanges
keyPathsForValuesAffectingTargetTime
keyPathsForValuesAffectingTargetTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTargetTimeWithinEndTimes
keyPathsForValuesAffectingCurrentTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTime
keyPathsForValuesAffectingRemainingTimeWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRangeDuration
keyPathsForValuesAffectingCurrentTimeAtEndOfSeekableTimeRanges
Td,R
currentTimeAtEndOfSeekableTimeRanges
TB,R,GisCurrentTimeAtEndOfSeekableTimeRanges
minTiming
maxTiming
bundleForClass:
bundle
bundleIdentifier
lowercaseString
hasPrefix:
localizedStringForKey:value:table:
initWithSuiteName:
setImageEdgeInsets:
TB,N,GisPlaying
localizedDisplayName
avkit_title
commonMetadata
metadataItemsFromArray:filteredByIdentifier:
firstObject
stringValue
shortLocalizedDisplayName
mediaRemoteIdentifier
avkit_offOption
avkit_autoOption
T@"NSString",R,N
T@"AVMediaSelectionOption",R
isRecording
_pointsPerSecond
_numberOfSamplesForWidth:
dataSource
numberWithFloat:
setNeedsDisplay
bounds
_originForTime:
_offsetForTime:
reset
drawRect:
_isCompact
_samples
_timeOfLastSample
_recording
_dataSource
Td,N,V_currentTime
recording
TB,N,GisRecording,V_recording
T@"<AVWaveformViewDataSource>",W,N,V_dataSource
cachedIsPictureInPictureSupported
startInspectionIfNeeded
isInspectionSuspended
hasBegunInspection
setHasBegunInspection:
updateAtMinMaxTime
addPeriodicTimeObserverForInterval:queue:usingBlock:
isReadyToPlay
timebase
updateTiming
isLooping
seekToEnd:
seekToBeginning:
items
defaultPlaybackRate
setDefaultPlaybackRate:
isPictureInPictureActive
doubleValue
internalDelegate
playerControllerCanRestorePlaybackRateAfterAudioSessionDeactivation:
sharedApplication
applicationState
isBatteryMonitoringEnabled
setBatteryMonitoringEnabled:
batteryState
setDeviceBatteryChargingOrFull:
startKVO
_playbackCoordinatorWithoutTriggeringFullSetup
_updateCoordinatedPlaybackActive
contextID
outputContext
_updatePlayingOnMatchPointDeviceIfNeeded
observationController
removeTimeObserver:
isPreventingIdleDisplaySleep
setPreventingIdleDisplaySleep:
_observeValueForKeyPath:oldValue:newValue:
CGSizeValue
setPresentationSize:
_prepareAssetForInspectionIfNeeded
_updateCurrentAudioTrackIfNeeded
_updateCurrentVideoTrackIfNeeded
error
isPlayingOnExternalScreen
isDeviceBatteryChargingOrFull
setComposable:
setHasProtectedContent:
setAvailableMetadataFormats:
setCompatibleWithAirPlayVideo:
setSeeking:
setSeekingInternal:
setSeekToTimeInternal:
setContentChapters:
loadValuesAsynchronouslyForKeys:completionHandler:
metadataItemsFromArray:withKey:keySpace:
dataValue
dictionaryWithDictionary:
statusOfValueForKey:error:
preferredLanguages
arrayByAddingObject:
chapterMetadataGroupsBestMatchingPreferredLanguages:
arrayWithCapacity:
lastObject
timeRange
sortUsingComparator:
isComposable
hasProtectedContent
availableMetadataFormats
isCompatibleWithAirPlayVideo
updateMinMaxTiming
isPlaybackLikelyToKeepUp
coordinatedPlaybackActive
isPlaybackBufferEmpty
_retryPlayImmediatelyIfNeeded
seekToTimeInternal
setSeekToTime:
isExternalPlaybackActive
pauseForAllCoordinatedPlaybackParticipants:
shouldPreventIdleDisplaySleep
canPlayImmediately
playImmediatelyAtRate:
loadedTimeRanges
isPictureInPictureInterrupted
setRateBeforeScrubBegan:
_queuePlayer
isSeekingInternal
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
pauseWithoutAffectingCoordinatedPlayback
endScrubbing
_cancelPendingSeeksIfNeeded
actionAtItemEnd
setActionAtItemEnd:
setAtMinTime:
setAtMaxTime:
isMuted
setMuted:
tracksWithMediaType:
presentationSize
reversePlaybackEndTime
setReversePlaybackEndTime:
forwardPlaybackEndTime
setForwardPlaybackEndTime:
setMinTiming:
setMaxTiming:
currentDate
currentEstimatedDate
hasVideo
contentChapters
_updateMinMaxTimingIfNeeded
seekableTimeRangesLastModifiedTime
liveUpdateInterval
asset
isCompletelySeekable
_assetIsRestrictedFromSaving:
_assetIsMarkedNotSerializable:
availableVideoDynamicRanges
numberWithInt:
_assetContainsProResRaw:
metadataForFormat:
numberWithUnsignedInt:
objectAtIndex:
getBytes:length:
tracks
formatDescriptions
otherParticipants
setCoordinatedPlaybackActive:
currentEnabledAssetTrackForMediaType:
setCurrentAudioTrack:
setCurrentVideoTrack:
outputDevices
deviceSubType
isPlayingOnMatchPointDevice
setPlayingOnMatchPointDevice:
track
assetTrack
isEnabled
touchBarRequiresLinearPlayback
suspendPlaybackCoordinatorWhileActivelySeekingIfNecessary
_updateRateForScrubbingAndSeeking
resumePlaybackCoordinatorIfSuspended
scrubCoordinatorSuspension
beginSuspensionForReason:
setScrubCoordinatorSuspension:
endProposingNewTime:
seekToCMTime:toleranceBefore:toleranceAfter:
throttledSeekToTime:toleranceBefore:toleranceAfter:
isStreaming
actuallySeekToTime
seekByTimeInterval:toleranceBefore:toleranceAfter:
canPlayFastForward
postNotificationName:object:userInfo:
_updateScanningForwardRate
scanningDelays
canPlayFastReverse
_updateScanningBackwardRate
canSeekFrameForward
seekOrStepByFrameCount:
canSeekFrameBackward
canStepForward
canStepBackward
stepByCount:
isScrubbing
beginScrubbing
reverseObjectEnumerator
setTiming:
_setMinTiming:maxTiming:
allowsExternalPlayback
setAllowsExternalPlayback:
isPlayingOnSecondScreen
supportsMultipleOutputDevices
deviceName
componentsJoinedByString:
isPictureInPictureSupported
canUseNetworkResourcesForLiveStreamingWhilePaused
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
associatedTracksOfType:
cancelPendingSeeks
rateBeforeScrubBegan
setCurrentAssetIfReady:
assetBeingPrepared
setAssetBeingPrepared:
assetInspectionQueue
setCachedIsPictureInPictureSupported:
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingReadyToPlay
keyPathsForValuesAffectingError
keyPathsForValuesAffectingCompletelySeekable
keyPathsForValuesAffectingShouldPreventIdleDisplaySleep
keyPathsForValuesAffectingRate
keyPathsForValuesAffectingCanPlay
keyPathsForValuesAffectingPlaying
keyPathsForValuesAffectingCanPause
keyPathsForValuesAffectingCanTogglePlayback
keyPathsForValuesAffectingVolume
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingHasContent
keyPathsForValuesAffectingContentDuration
keyPathsForValuesAffectingContentDimensions
keyPathsForValuesAffectingCurrentTime
keyPathsForValuesAffectingMinTime
keyPathsForValuesAffectingReversePlaybackEndTime
keyPathsForValuesAffectingMaxTime
keyPathsForValuesAffectingForwardPlaybackEndTime
keyPathsForValuesAffectingContentDurationWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRanges
keyPathsForValuesAffectingLoadedTimeRanges
keyPathsForValuesAffectingHasEnabledAudio
keyPathsForValuesAffectingHasVideo
keyPathsForValuesAffectingHasEnabledVideo
keyPathsForValuesAffectingHasContentChapters
keyPathsForValuesAffectingStreaming
keyPathsForValuesAffectingHasLiveStreamingContent
keyPathsForValuesAffectingHasSeekableLiveStreamingContent
keyPathsForValuesAffectingHasTrimmableContent
keyPathsForValuesAffectingHasShareableContent
keyPathsForValuesAffectingTimeControlStatus
keyPathsForValuesAffectingCanSeek
keyPathsForValuesAffectingCanScanForward
keyPathsForValuesAffectingCanScanBackward
keyPathsForValuesAffectingCanSeekToBeginning
keyPathsForValuesAffectingCanSeekToEnd
keyPathsForValuesAffectingCanSeekFrameForward
keyPathsForValuesAffectingCanSeekFrameBackward
keyPathsForValuesAffectingCanSeekChapterForward
keyPathsForValuesAffectingCanSeekChapterBackward
keyPathsForValuesAffectingAllowsExternalPlayback
keyPathsForValuesAffectingPlayingOnExternalScreen
keyPathsForValuesAffectingExternalPlaybackActive
keyPathsForValuesAffectingExternalPlaybackType
keyPathsForValuesAffectingExternalPlaybackAirPlayDeviceLocalizedName
keyPathsForValuesAffectingPictureInPicturePossible
observationInfo
setObservationInfo:
togglePlaybackEvenWhenInBackground:
setTouchBarRequiresLinearPlayback:
setLooping:
increaseVolume:
decreaseVolume:
changeVolumeToMinimum:
changeVolumeToMaximum:
toggleMuted:
setInspectionSuspended:
contentDimensions
currentOrEstimatedDate
hasContentChapters
hasTrimmableContent
hasShareableContent
audioWaveform
scanForward:
scanBackward:
canSeekToBeginning
canSeekToEnd
seekFrameForward:
seekFrameBackward:
beginScrubbing:
endScrubbing:
seekToChapter:
externalPlaybackAirPlayDeviceLocalizedName
isPictureInPicturePossible
setPictureInPictureInterrupted:
togglePictureInPicture:
beginReducingResourcesForPictureInPicturePlayerLayer:
endReducingResourcesForPictureInPicturePlayerLayer:
isReducingResourcesForPictureInPicture
_timecodeTrack
isPlaybackSuspended
setPlaybackSuspended:
setAssetInspectionQueue:
setPictureInPictureSupported:
currentAudioTrack
currentVideoTrack
isPreventingIdleSystemSleep
setPreventingIdleSystemSleep:
isDisablingAutomaticTermination
setDisablingAutomaticTermination:
allowsPictureInPicturePlayback
setAllowsPictureInPicturePlayback:
setPictureInPictureActive:
canTogglePictureInPicture
setCanTogglePictureInPicture:
pipActivitySessionIdentifier
setPipActivitySessionIdentifier:
seekTimer
setCurrentVideoMediaSelectionOption:
_audioMediaSelectionOptions
_visualMediaSelectionOptions
_legibleMediaSelectionOptions
_cachedSelectedAudioMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation
_lastKnownPersistedExtendedLanguageTag
_observationInfo
_inspectionSuspended
_updateAtMinMaxTimePeriodicObserverToken
_timecodePeriodicObserverToken
_pictureInPictureInterrupted
_handlesAudioSessionInterruptions
_isDeallocating
_hasSetUpSeekableLiveStreamState
_rateToRestoreAfterAudioSessionInterruptionEnds
_retryPlayingImmediatelyBlock
_shouldPlayImmediately
_looping
_actionAtItemEnd
_seekQueue
_seekTimer
_timeOfLastUpdate
_ignoreRateKeyValueChanges
_ignoreNextRateKeyValueChange
_pendingSeek
_isResumed
_toleranceBefore
_toleranceAfter
_isScanningForward
_isScanningBackward
_scanningCount
_preScanningRate
_liveStreamMinTiming
_liveStreamMaxTiming
_liveStreamEventModePossible
_canUseNetworkResourcesForLiveStreamingWhilePausedCount
_previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused
_shouldPlayWhenLikelyToKeepUp
_deviceBatteryStateDidChangeObserver
_deviceBatteryMonitoringWasEnabled
_playingOnSecondScreen
_reduceResourceUsageAssertion
_defaultPlaybackRate
_touchBarRequiresLinearPlayback
_internalDelegate
_atMaxTime
_atMinTime
_playbackSuspended
_scrubbing
_pictureInPictureSupported
_seekingInternal
_seeking
_composable
_hasProtectedContent
_compatibleWithAirPlayVideo
_preventingIdleSystemSleep
_preventingIdleDisplaySleep
_disablingAutomaticTermination
_allowsPictureInPicturePlayback
_pictureInPictureActive
_canTogglePictureInPicture
_hasBegunInspection
_playingOnMatchPointDevice
_deviceBatteryChargingOrFull
_coordinatedPlaybackActive
_player
_observationController
_currentAssetIfReady
_assetInspectionQueue
_assetBeingPrepared
_minTiming
_maxTiming
_currentAudioTrack
_currentVideoTrack
_seekToTime
_contentChapters
_availableMetadataFormats
_rateBeforeScrubBegan
_scrubCoordinatorSuspension
_pipActivitySessionIdentifier
_currentVideoMediaSelectionOption
_presentationSize
_seekToTimeInternal
atMaxTime
TB,N,GisAtMaxTime,V_atMaxTime
atMinTime
TB,N,GisAtMinTime,V_atMinTime
playbackSuspended
TB,N,GisPlaybackSuspended,V_playbackSuspended
scrubbing
TB,N,GisScrubbing,V_scrubbing
T@"AVPlayer",&,N,V_player
T@"AVObservationController",R,N,V_observationController
T{CGSize=dd},N,V_presentationSize
T@"AVAsset",&,N,V_currentAssetIfReady
T@"NSObject<OS_dispatch_queue>",&,N,V_assetInspectionQueue
T@"AVAsset",&,N,V_assetBeingPrepared
pictureInPictureSupported
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
readyToPlay
TB,R,N,GisReadyToPlay
T@"AVValueTiming",&,N,V_timing
T@"AVValueTiming",&,N,V_minTiming
T@"AVValueTiming",&,N,V_maxTiming
T@"AVAssetTrack",&,N,V_currentAudioTrack
T@"AVAssetTrack",&,N,V_currentVideoTrack
seekingInternal
TB,GisSeekingInternal,V_seekingInternal
seeking
TB,N,GisSeeking,V_seeking
T{?=qiIq},V_seekToTimeInternal
Td,N,V_seekToTime
T@"NSArray",&,N,V_contentChapters
composable
TB,N,GisComposable,V_composable
TB,N,V_hasProtectedContent
T@"NSArray",&,N,V_availableMetadataFormats
compatibleWithAirPlayVideo
TB,N,GisCompatibleWithAirPlayVideo,V_compatibleWithAirPlayVideo
Td,N,V_rateBeforeScrubBegan
T@"AVCoordinatedPlaybackSuspension",&,N,V_scrubCoordinatorSuspension
preventingIdleSystemSleep
TB,N,GisPreventingIdleSystemSleep,V_preventingIdleSystemSleep
preventingIdleDisplaySleep
TB,N,GisPreventingIdleDisplaySleep,V_preventingIdleDisplaySleep
disablingAutomaticTermination
TB,N,GisDisablingAutomaticTermination,V_disablingAutomaticTermination
TB,N,V_allowsPictureInPicturePlayback
pictureInPictureActive
TB,N,GisPictureInPictureActive,V_pictureInPictureActive
TB,N,V_canTogglePictureInPicture
T@"NSString",C,N,V_pipActivitySessionIdentifier
TB,N,V_hasBegunInspection
playingOnMatchPointDevice
TB,N,GisPlayingOnMatchPointDevice,V_playingOnMatchPointDevice
deviceBatteryChargingOrFull
TB,N,GisDeviceBatteryChargingOrFull,V_deviceBatteryChargingOrFull
TB,R,N
T@"NSObject<OS_dispatch_source>",R,N,V_seekTimer
T@"NSDate",R,N
TB,N
T@"NSArray",R,N,V_visualMediaSelectionOptions
T@"AVMediaSelectionOption",&,N,V_currentVideoMediaSelectionOption
TB,N,V_coordinatedPlaybackActive
Tq,R,N
T@"NSError",R,N
usesExternalPlaybackWhileExternalScreenIsActive
maximumVideoResolution
setPlayingOnSecondScreen:
setHandlesAudioSessionInterruptions:
keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive
keyPathsForValuesAffectingMaximumVideoResolution
playingOnSecondScreen
TB,N,GisPlayingOnSecondScreen
T{CGSize=dd},R,N
TB,R,N,GisPlayingOnMatchPointDevice
@44@0:8d16@24@?32B40
@16@0:8
v16@0:8
d16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@32@0:8@16@24
v24@0:8@16
v20@0:8B16
v48@0:8@16@24@32^v40
v20@0:8f16
B16@0:8
q16@0:8
v24@0:8q16
@"AVPlayerController"
@"AVPlayerControllerTimeResolver"
@"AVTimeFormatter"
@"AVPlayerViewController"
@"NSDictionary"
@76@0:8@16q24q32@40q48d56d64f72
@80@0:8@16q24q32@40q48d56d64f72B76
v24@0:8d16
@24@0:8@16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16q24
v32@0:8@"PUICSlider"16q24
v24@0:8@"PUICSlider"16
@"NSString"
@"UIResponder"
@"AVDoneButton"
@"AVLabel"
@"AVSlider"
@"UIButton"
@"AVPlayPauseButton"
@"UILabel"
@"NMUVolumeIndicatorControl"
@"UIImageView"
@48@0:8@16@24B32B36@?40
@44@0:8@16@24B32@?36
@40@0:8@16@24@?32
v48@0:8@16@24@32@?40
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@60@0:8@16@24@32B40B44B48@?52
v32@0:8@16@?24
v56@0:8@16@24@32@40^v48
@?16@0:8
@"NSSet"
@48@0:8@16@24@32@40
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{?=qiIq}48@0:8q16{?=qiIq}24
B20@0:8f16
@"AVPlayerViewController"16@0:8
v24@0:8@"<AVBehaviorContext>"16
v24@0:8@"<AVBehavior>"16
v24@0:8@?16
@24@0:8#16
v40@0:8:16@24@?32
@"NSMapTable"
@24@0:8q16
{UIEdgeInsets=dddd}16@0:8
q24@0:8@16
@56@0:8d16d24Q32@40@?48
@32@0:8d16@24
@24@0:8^{_NSZone=}16
^{CGImage=}16@0:8
v24@0:8^{CGImage=}16
v32@0:8@16@24
^{CGImage=}
@40@0:8@16{CGSize=dd}24
v24@0:8@"NMUVolumeIndicatorControl"16
@"AVNowPlayingInfoController"
@"AVRemoteCommandController"
@"AVUnsupportedContentIndicatorView"
@"__AVPlayerLayerView"
@"AVTouchIgnoringView"
@"AVWatchPlaybackControlsViewController"
@"NSTimer"
@"<AVPlayerViewControllerDelegate>"
{?="playerViewControllerShouldHandleDoneButtonTap"B}
@"AVBehaviorStorage"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=dd}16@0:8
@40@0:8d16d24d32
d24@0:8d16
@40@0:8{CGPoint=dd}16@32
{CGSize=dd}16@0:8
v28@0:8@16B24
v32@0:8@16Q24
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
v28@0:8@"AVAudioRecorder"16B24
v32@0:8@"AVAudioRecorder"16@"NSError"24
v24@0:8@"AVAudioRecorder"16
v32@0:8@"AVAudioRecorder"16Q24
f24@0:8@16
f24@0:8@"AVWaveformView"16
@56@0:8@16@24B32d36@44B52
@48@0:8@16@24d32@40
@"AVAudioRecorder"
@"AVAudioPlayer"
@"AVWaveformView"
@"NSURL"
@"<AVAudioRecorderViewControllerDelegate>"
@32@0:8@16d24
@24@0:8d16
@"CSLSBacklightAssertion"
@"AVTimer"
v36@0:8@16@24B32
q40@0:8@16@24@32
@"<AVTimeControlling>"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
q24@0:8d16
@"NSMutableArray"
@"<AVWaveformViewDataSource>"
^v16@0:8
v24@0:8^v16
v40@0:8@16@24@32
f16@0:8
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
v40@0:8d16d24d32
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v32@0:8{CGSize=dd}16
@"NSArray"
@"AVMediaSelectionOption"
@"NSNumber"
{?="value"q"timescale"i"flags"I"epoch"q}
@"AVValueTiming"
@"BSSimpleAssertion"
@"<AVPlayerControllerDelegate>"
@"AVPlayer"
@"AVObservationController"
@"AVAsset"
@"AVAssetTrack"
@"AVCoordinatedPlaybackSuspension"
{CGSize="width"d"height"d}
.AUUUUUU
com.apple.avkit.AVTimer.manage %p
com.apple.avkit.AVTimer.timer %p
%@ is not a valid initializer. You must call -[%@ initWithTimeInterval:queue:block:repeats:].
targetTimeWithinEndTimes
remainingTimeWithinEndTimes
maxTime
currentTimeWithinEndTimes
contentDuration
playerController.metadata
playerController.hasMediaSelectionOptions
playerController.hasSeekableLiveStreamingContent
playerController.hasLiveStreamingContent
playerController.canScanForward
playerController.canTogglePlayback
playerController.canScanBackward
playerController.playing
playerController.volume
playerController.contentDurationWithinEndTimes
playerController.canSeek
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_LABEL_TEXT
com.apple.avkit
AVKit
%@ (%p) %@
-[AVNowPlayingInfoController init]
-[AVNowPlayingInfoController dealloc]
metadata
rate
hasContent
MPMediaItemPropertyArtist
MPMediaItemArtwork
MPMediaItemPropertyArtwork
MPMediaItemPropertyPlaybackDuration
MPMediaItemPropertyTitle
MPNowPlayingInfoPropertyElapsedPlaybackTime
MPNowPlayingInfoPropertyPlaybackRate
MPNowPlayingInfoCenter
-[AVWatchPlaybackControlsViewController initWithNibName:bundle:]
playerController.atMaxTime
playerController.atMinTime
-[AVWatchPlaybackControlsViewController dealloc]
artist
title
%@: %@
VignetteUpperGradient
VignetteLowerGradient
PLAYBACK_CONTROLS_VIEW_CONTROLLER_DONE_BUTTON_TITLE
control-rewind
control-forward
H:|[vignetteUpperGradientView]|
vignetteUpperGradientView
V:|[vignetteUpperGradientView]
H:|[vignetteLowerGradientView]|
vignetteLowerGradientView
V:[vignetteLowerGradientView]|
H:|-(%f)-[doneButton]
doneButton
H:[remainingTimeLabel]-(%f)-|
remainingTimeLabel
H:|-(4)-[metadataLabel]-(4)-|
metadataLabel
H:|-(%f)-[playbackProgressView]-(%f)-|
playbackProgressView
V:[playbackProgressView]-(%f)-|
AVKitErrorDomain
AVKIT_ERROR_RECORDING_FAILED
v48@?0@8@"NSString"16@24@32@"NSString"40
v32@?0@8@16@24
v16@?0@"NSNotification"8
-[AVDoneButton initWithFrame:]
-[AVDoneButton dealloc]
v16@?0@"<AVBehavior>"8
v16@?0@"<AVBehaviorContext>"8
v16@?0@8
-[AVButton initWithFrame:]
-[AVButton dealloc]
AVRemoteCommandControllerDidReceiveStopCommandEventNotification
-[AVRemoteCommandController init]
-[AVRemoteCommandController dealloc]
canScanBackward
canScanForward
canSeek
canSeekChapterBackward
canSeekChapterForward
canTogglePlayback
canPlay
canPause
MPRemoteCommandCenter
/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
/System/Library/Frameworks/MediaPlayer.framework/Contents/MacOS/MediaPlayer
com.apple.AVKit.ChapterImageQueue
cgImage
UnsupportedContentIndicator
imageView
H:|-(>=10)-[imageView]-(>=10)-|
V:|-(>=10)-[imageView]-(>=10)-|
AVPlayerAssetFilename
AVPlayerShouldAutoplay
AVVideoGravity
-[AVPlayerViewController initWithNibName:bundle:]
playerController.hasEnabledAudio
playerController.hasEnabledVideo
playerController.status
-[AVPlayerViewController dealloc]
-[AVPlayerViewController initWithCoder:]
-[AVPlayerViewController encodeWithCoder:]
%@ only supports AVPlayer instances that have been initialized with the main queue as the dispatch queue for serializing key-value observations.
playerController.player
_playerLayerView.videoGravity
_playerLayerView.readyForDisplay
Audio/Video
H:|[unsupportedContentIndicatorView]|
unsupportedContentIndicatorView
V:|[unsupportedContentIndicatorView]|
H:|[playerLayerView]|
playerLayerView
V:|[playerLayerView]|
H:|[playbackControlsView]|
playbackControlsView
V:|[playbackControlsView]|
_playerLayerView
_showsPlaybackControlsView
NMUVolumeIndicatorControl
Unable to find class %s
/System/Library/PrivateFrameworks/NanoMediaUI.framework/NanoMediaUI
/System/Library/PrivateFrameworks/NanoMediaUI.framework/Contents/MacOS/NanoMediaUI
NACVolumeController
-[__AVPlayerLayerView initWithFrame:]
-[__AVPlayerLayerView dealloc]
layer
layer.videoGravity
layer.readyForDisplay
layer.videoRect
videoGravity
value
time stamp
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
*** -%@ only defined for abstract class.  Define %c[%@ %@]!
-[AVSlider initWithFrame:]
%@ is not a valid initializer. You must call -[%@ initWithFrame:].
-[AVSlider dealloc]
%@ is not a valid initializer. You must call -[%@ initWithOutputURL:settings:maximumRecordingDuration:finishString:].
%@ does not support unarchiving from a nib.
-[AVAudioRecorderViewController initWithOutputURL:settings:autorecord:maximumRecordingDuration:actionTitle:alwaysShowActionTitle:]
AUDIO_RECORDER_VIEW_CONTROLLER_SAVE_BUTTON_TITLE
-[AVAudioRecorderViewController dealloc]
AUDIO_RECORDER_VIEW_CONTROLLER_CANCEL_BUTTON_TITLE
multiply.circle.fill
StartRecordingButton
StopRecordingButton
PlayAuditionButton
PauseAuditionButton
AVKit is playing audiovisual content. That prevents backlight dim and screen off.
-[AVTimeLabel initWithFrame:]
-[AVTimeLabel dealloc]
+[AVPlayerController(AVMediaSelection) canonicalLanguageIdentifierFromString:]
NilString
hasAudioMediaSelectionOptions
hasLegibleMediaSelectionOptions
audioMediaSelectionOptions
-[AVPlayerController(AVMediaSelection) setAudioMediaSelectionOptions:]
currentAssetIfReady
legibleMediaSelectionOptions
-[AVPlayerController(AVMediaSelection) setLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) currentLegibleMediaSelectionOption]
player.appliesMediaSelectionCriteriaAutomatically
-[AVPlayerController(AVMediaSelection) selectedMediaOptionMayHaveChanged:]
q24@?0@8@16
avkit_persistentIdentifier
-[AVPlayerController(AVMediaSelection) _ensureUserCaptionDisplayType:]
-[AVPlayerController(AVMediaSelection) _disableLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) _enableAutoMediaSelection:]
-[AVPlayerController(AVMediaSelection) _setMediaOption:mediaCharacteristic:]
MediaSelectionOptionsPersistentID
playerController.timing
playerController.maxTiming
playerController.maxTime
playerController.minTiming
playerController.minTime
currentTime
playerController.seeking
playerController.seekToTime
targetTime
playerController.contentDuration
minTime
playerController.seekableTimeRanges
-[AVLabel initWithFrame:]
-[AVLabel dealloc]
-[AVPlayPauseButton initWithFrame:]
PlayButton
-[AVPlayPauseButton dealloc]
PauseButton
MEDIA_SELECTION_OPTION_OFF_TITLE
MEDIA_SELECTION_OPTION_AUTO_TITLE
%@-%@-%@
com.apple.Carousel
AVPlayerControllerCurrentTimeJumpedNotification
AVPlayerControllerPlaybackDidEndNotification
AVPlayerControllerContentDimensionsChangedNotification
AVPlayerControllerSelectedMediaOptionDidChangeNotification
AVPlayerControllerDidSeekChapterNotification
AVPlayerControllerDidSeekChapterChapterKey
AVPlayerControllerDidBeginScanningNotification
AVPlayerControllerDidEndScanningNotification
AVPlayerControllerScanningDirectionKey
-[AVPlayerController init]
com.apple.avkit.seekQueue
com.apple.avkit.playerControllerAssetInspectionQueue
-[AVPlayerController initWithPlayer:]
v32@?0{?=qiIq}8
v32@?0@"AVPlayerController"8@16@"NSNotification"24
-[AVPlayerController startInspectionIfNeeded]_block_invoke
shouldRestoreRate
delegateCanResumeAfterInterruption
v8@?0
B8@?0
-[AVPlayerController dealloc]
v32@?0@"AVPlayerController"8@16@"AVKeyValueChange"24
player.currentItem
timeControlStatus
player.currentItem.seekableTimeRanges
player.currentItem.loadedTimeRanges
player.currentItem.playbackBufferEmpty
player.currentItem.playbackLikelyToKeepUp
player.rate
hasLiveStreamingContent
seekToTimeInternal
shouldPreventIdleDisplaySleep
player.currentItem.presentationSize
contentDimensions
player.currentItem.asset
readyToPlay
player.currentItem.duration
hasEnabledAudio
currentAudioMediaSelectionOption
v16@?0@"AVPlayerController"8
hasEnabledVideo
currentVideoMediaSelectionOption
-[AVPlayerController _queuePlayer]
player.status
player.currentItem.status
status
player.error
seekableTimeRanges
playing
player.currentItem.hasEnabledVideo
playingOnExternalScreen
deviceBatteryChargingOrFull
commonMetadata
q24@?0@"AVChapter"8@"AVChapter"16
availableChapterLocales
composable
hasProtectedContent
availableMetadataFormats
compatibleWithAirPlayVideo
-[AVPlayerController _observeValueForKeyPath:oldValue:newValue:]
player.externalPlaybackActive
-[AVPlayerController setRate:]_block_invoke
v16@?0d8
pictureInPictureInterrupted
-[AVPlayerController setPlaying:]
v12@?0B8
-[AVPlayerController play:]
-[AVPlayerController autoplay:]
-[AVPlayerController pauseForAllCoordinatedPlaybackParticipants:]
-[AVPlayerController togglePlayback:]
-[AVPlayerController setVolume:]
player.volume
player.muted
-[AVPlayerController setCoordinatedPlaybackActive:]
presentationSize
timing
reversePlaybackEndTime
hasSeekableLiveStreamingContent
minTiming
player.currentItem.reversePlaybackEndTime
forwardPlaybackEndTime
maxTiming
player.currentItem.forwardPlaybackEndTime
player.currentItem.hasEnabledAudio
player.currentItem.hasVideo
contentChapters
streaming
player.currentItem.liveUpdateInterval
player.currentItem.seekableTimeRangesLastModifiedTime
completelySeekable
com.apple.motion.notserializable
player.timeControlStatus
touchBarRequiresLinearPlayback
-[AVPlayerController actuallySeekToTime]
player.currentItem.canPlayFastForward
player.currentItem.canPlayFastReverse
atMaxTime
atMinTime
-[AVPlayerController seekOrStepByFrameCount:]
-[AVPlayerController updateMinMaxTiming]
player.allowsExternalPlayback
externalPlaybackActive
playingOnSecondScreen
-[AVPlayerController externalPlaybackAirPlayDeviceLocalizedName]
EXTERNAL_PLAYBACK_DEVICE_NAME_NIL
externalPlaybackType
pictureInPictureSupported
hasVideo
-[AVPlayerController beginReducingResourcesForPictureInPicturePlayerLayer:]
-[AVPlayerController endReducingResourcesForPictureInPicturePlayerLayer:]
-[AVPlayerController _updateRateForScrubbingAndSeeking]
availableMediaCharacteristicsWithMediaSelectionOptions
maximumVideoResolution
availableVideoDynamicRanges
tracks
assetCache
nominalFrameRate
enabled
languageCode
mediaType
extendedLanguageTag
mediaCharacteristics
availableTrackAssociationTypes
-[AVPlayerController(AVPlayerControllerExternalPlaybackSupportInternal) setHandlesAudioSessionInterruptions:]
handlesAudioSessionInterruptions
player.usesExternalPlaybackWhileExternalScreenIsActive
PlayerController has live streaming content changed: %d
PlayerController has seekable live streaming content changed: %d
PlayerController has media selection options changed: %d
%s %d %p
You must call -[AVObservationController stopAllObservation] before destroying it, perhaps in its owner's dealloc. %@
Invalid track type for frame stepping.
Invalid input base frame time.
*** %s must be called on main thread. ***
%s AudioMediaSelectionOptions: %{public}@
%s LegibleMediaSelectionOptions: %{public}@
*** %s Received a forced-only media selection (%{public}@) when display type was NOT forced-only (was %ld). mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup: %d. ***
*** %s Received a non-forced-only media selection (%{public}@) from automatic media selection when display type was forced-only. ***
%s Enabling automatic display type because receiver changed captions to forced-only.
%s Persisting preferences for remote legible option change: %{public}@ -> %{public}@
%s Selected legible option: %{public}@ 
%s Selected audible option: %{public}@ 
%s Changing MACaptionAppearanceDisplayType: %ld -> %ld
%s %d
%s mediaOption: %{public}@ mediaCharacteristic: %{public}@
%s Skipped setting identical option.
%s player: %p
Interruption notification: AVPlayerPlaybackWasInterruptedNotification player.rate: %.1f userinfo: %@
Interruption notification: AVAudioSessionInterruptionNotification player.rate: %.1f userinfo: %@
AVAudioSessionInterruptionTypeBegan: %f
AVAudioSessionInterruptionTypeEnded: %f
%s %s %s
** AVPlayerViewController deallocated while preventing idle display sleep ** THIS SHOULD NEVER HAPPEN!
%s queuePlayer: %d
PlayerItemDidChange
New playerItem: <%{public}@: %p>
New asset: <%{public}@: %p>
SeekableTimeRanges changed {%f, %f} -> {%f, %f}.
liveStreamEventModePossible: %d
Time control status = %ld
Playback likely to keep up changed to: %@
%s setPlaying:YES because AVPlayerControllerAutoplayEnabled
isPlaybackBufferEmpty: %d
Rate changed to: %f
Setting prevent idle display sleep to YES
Setting prevent idle display sleep to NO
Failed to handle %@ %@
Calling playImmediatelyAtRate: %f
Could not play immediately, setting a play immediately retry block.
%s immediately %.1f on %p
%s %.1f on %p
Retrying play immediately.
Can play immediately: %d
%s setPlaying:YES
%s setPlaying:YES (AVPlayerControllerAutoplayEnabled)
%s notifyCoordinatedPlayback of pause: %@
%s %f
%s coordinatedPlaybackActive set to %d
Scrubbing Started
Scrubbing Ended
%s time: %f toleranceBefore: %f toleranceAfter: %f
Seek completed: %s
%s stepByCount: %ld
%s sampleBasedSeekTarget: %f
Modifying seekableTimeRange by: %f
segmentDuration: %f
minTimingNeedsUpdate: %d, new minTiming with minTime: %f, rate: %f, old minTime: %f, delta: %f
maxTimingNeedsUpdate: %d, new maxTiming with maxTime: %f old maxTime: %f, delta: %f
%s Using output context %@
Calls to -[AVPlayerController stopUsingNetworkResourcesForLiveStreamingWhilePaused] must be counterbalanced with calls to -[AVPlayerController startUsingNetworkResourcesForLiveStreamingWhilePaused].
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/PrivateFrameworks/NanoMediaUI.framework/NanoMediaUI
softlink:r:path:/System/Library/PrivateFrameworks/NanoAudioControl.framework/NanoAudioControl
AVTimer
AVPlaybackControlsViewController
AVNowPlayingInfoController
AVAdditions
AVWatchPlaybackControlsViewController
PUICSliderDelegate
NSObject
AVObservationController
AVProxyKVOObserver
AVKeyValueChange
AVDoneButton
AVDefaultBehaviorContext
AVBehaviorContext
AVBehaviorInternal
AVBehavior
AVBehaviorContextInternal
AVBehaviorStorage
AVBehaviorSupport
AVButton
AVRemoteCommandController
AVChapter
NSCopying
AVUnsupportedContentIndicatorView
AVPlayerViewController
NMUVolumeIndicatorControlDelegate
AVPlaybackControlsViewControllerVisibility
AVPlaybackControlsViewControllerActions
AVPlayerViewController_WebKitOnly
__AVPlayerLayerView
EmbeddedAdditions
AVValueTiming
NSSecureCoding
NSCoding
NSMutableCopying
AVMutableValueTiming
AVValueTimingCreation
AVExtendedValueTiming
AVExtendedMutableValueTiming
AVConcreteValueTiming
AVConcreteMutableValueTiming
AVTouchIgnoringView
AVSlider
AVAudioRecorderViewController
AVAudioPlayerDelegate
AVAudioRecorderDelegate
AVWaveformViewDataSource
_AVBacklightAssertion
AVTimeLabel
AVMediaSelection
AVPlayerController
AVPlayerControllerTimeResolver
TimeObserverAdditions
_AVBundle
AVLabel
AVPlayPauseButton
AVWaveformView
AVPlayerControllerExternalPlaybackSupportInternal
init
stringWithFormat:
UTF8String
raise:format:
initWithTimeInterval:queue:block:repeats:
dealloc
invalidate
interval
.cxx_destruct
_queue
_timer
_invalidated
_interval
Td,R,V_interval
initWithNibName:bundle:
isViewLoaded
defaultCenter
removeObserver:
removeObserver:forKeyPath:context:
stopUsingNetworkResourcesForLiveStreamingWhilePaused
setPlayerController:
startUsingNetworkResourcesForLiveStreamingWhilePaused
viewDidLoad
setInterval:
playerController
setResolution:
addObserver:forKeyPath:options:context:
arrayWithObjects:count:
sharedAVSystemController
setAttribute:forKey:error:
mainQueue
_updateVolumeSliderVisibility
addObserverForName:object:queue:usingBlock:
viewDidAppear:
viewDidDisappear:
updatePlaybackControlsEnabledStates
_updatePlaybackProgress
volume
updateVolumeSliderValue:
isPlaying
setPlaying:
hasLiveStreamingContent
setShowsStreamingControls:
hasSeekableLiveStreamingContent
_updateElapsedTimeLabel
_updateRemainingTimeLabel
setShowsLiveStreamScrubber:
hasMediaSelectionOptions
setShowsMediaSelectionButton:
metadata
setMetadata:
observeValueForKeyPath:ofObject:change:context:
seekableTimeRanges
count
seekableTimeRangeDuration
currentTimeWithinEndTimes
setStyle:
contentDuration
setFormatTemplate:
stringFromSeconds:
updateElapsedTimeLabel:
remainingTimeWithinEndTimes
updateRemainingTimeLabel:
targetTimeWithinEndTimes
contentDurationWithinEndTimes
updatePlaybackProgress:
setShowsVolumeSlider:
playerViewController
showPlaybackControlsViewForTouchDown
hidePlaybackControlsViewForTouchUp
canTogglePlayback
setPlayPauseButtonEnabled:
_userInteractionObservationControlTouchDown:
addTarget:action:forControlEvents:
_userInteractionObservationControlTouchUp:
removeTarget:action:forControlEvents:
doneButtonTapped:
value
setVolume:
skipBackwardThirtySeconds:
seekChapterBackward:
beginScanningBackward:
endScanningBackward:
togglePlayback:
beginScanningForward:
endScanningForward:
seekChapterForward:
gotoEndOfSeekableRanges:
addControlForUserInteractionObservation:
removeControlForUserInteractionObservation:
scaleButtonTapped:
volumeSliderValueChanged:
mediaSelectionButtonTapped:
fullScreenButtonTapped:
pictureInPictureButtonTapped:
setPlayerViewController:
showsDoneButton
setShowsDoneButton:
isPlayPauseButtonEnabled
showsStreamingControls
showsLiveStreamScrubber
showsScaleButton
setShowsScaleButton:
scaleButtonType
setScaleButtonType:
showsLoadingIndicator
setShowsLoadingIndicator:
showsMediaSelectionButton
showsExitFullScreenButton
setShowsExitFullScreenButton:
showsPictureInPictureButton
setShowsPictureInPictureButton:
isPictureInPictureButtonEnabled
setPictureInPictureButtonEnabled:
showsVolumeSlider
_playerController
_intervalTimeResolver
_resolutionTimeResolver
_elapsedTimeFormatter
_remainingTimeFormatter
_AVSystemControllerCurrentRouteHasVolumeControlDidChangeObserver
_viewAppeared
_showsDoneButton
_playing
_playPauseButtonEnabled
_showsStreamingControls
_showsLiveStreamScrubber
_showsScaleButton
_showsLoadingIndicator
_showsMediaSelectionButton
_showsExitFullScreenButton
_showsPictureInPictureButton
_pictureInPictureButtonEnabled
_showsVolumeSlider
_playerViewController
_scaleButtonType
_metadata
T@"AVPlayerController",&,N
T@"AVPlayerViewController",W,N,V_playerViewController
TB,N,V_showsDoneButton
playing
TB,N,GisPlaying,V_playing
playPauseButtonEnabled
TB,N,GisPlayPauseButtonEnabled,V_playPauseButtonEnabled
TB,N,V_showsStreamingControls
TB,N,V_showsLiveStreamScrubber
TB,N,V_showsScaleButton
Tq,N,V_scaleButtonType
TB,N,V_showsLoadingIndicator
TB,N,V_showsMediaSelectionButton
TB,N,V_showsExitFullScreenButton
TB,N,V_showsPictureInPictureButton
pictureInPictureButtonEnabled
TB,N,GisPictureInPictureButtonEnabled,V_pictureInPictureButtonEnabled
TB,N,V_showsVolumeSlider
T@"NSDictionary",&,N,V_metadata
rangeOfString:
substringToIndex:
substringFromIndex:
object
_setNowPlayingInfoNeedsUpdate
_updateNowPlayingInfoIfNeeded
performSelector:withObject:afterDelay:
cancelPreviousPerformRequestsWithTarget:selector:object:
_updateNowPlayingInfo
dictionary
hasContent
objectForKeyedSubscript:
setObject:forKeyedSubscript:
initWithImage:
numberWithDouble:
timing
currentValue
minTime
rate
setNowPlayingInfo:
_playerControllerCurrentTimeJumpedObserver
_nowPlayingInfoNeedsUpdate
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setPriority:
AV_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:
setActive:
AV_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:active:
layer
setMasksToBounds:
CGColor
setShadowColor:
setShadowOffset:
setShadowOpacity:
setShadowPathIsBounds:
setShadowRadius:
setCornerRadius:
AV_setBackgroundBackgroundColor:
AV_setCornerRadius:
currentDevice
puic_deviceVariant
_setupLayoutSpec
setIsInteractivelyScrubbing:
setEnabled:
setText:
view
setHidden:
transitionWithView:duration:options:animations:completion:
setScrubbing:
setBackgroundColor:
becomeFirstResponder
clearColor
resignFirstResponder
seekToTime:
isInteractivelyScrubbing
setValue:animated:
initWithFrame:
setView:
imageNamed:inBundle:compatibleWithTraitCollection:
setImage:
setTranslatesAutoresizingMaskIntoConstraints:
addSubview:
setTitle:forState:
setValue:
_scrubSliderValueChanged:
setDelegate:
setShouldAutomaticallAdjustValueOnTouch:
_seekBackwardButtonTapped:
isAudioOnlyContent
transportControlsAddTimeIntervalForSkipImage:
setImage:forState:
_seekForwardButtonTapped:
setTextAlignment:
dictionaryWithObjects:forKeys:count:
constraintsWithVisualFormat:options:metrics:views:
activateConstraints:
defaultPUICStatusBarFontBaseLine
navigationController
viewWillAppear:
viewWillDisappear:
willMoveToParentViewController:
didMoveToParentViewController:
isAtMinTime
isAtMaxTime
seekByTimeInterval:
size
drawAtPoint:
systemFontOfSize:weight:
colorWithWhite:alpha:
localizedStringFromNumber:numberStyle:
sizeWithAttributes:
drawAtPoint:withAttributes:
setEnabled:animated:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
slider:didTapTouchTarget:
sliderDidBeginCrownInteraction:
sliderDidEndCrownInteraction:
sliderDidRequestFocus:
interactiveScrubberEnabled
setInteractiveScrubberEnabled:
setAudioOnlyContent:
loadView
prefersStatusBarHidden
_metadataLabelText
_audioOnlyContent
_remainingTimeLabelText
_playbackProgress
_isInteractivelyScrubbing
_previousFirstResponder
_doneButton
_remainingTimeLabel
_scrubber
_seekBackwardButton
_playPauseButton
_seekForwardButton
_metadataLabel
_volumeControl
_interactiveScrubberEnabled
_vignetteLowerGradientView
_vignetteUpperGradientView
audioOnlyContent
TB,N,GisAudioOnlyContent
TB,N,V_isInteractivelyScrubbing
errorWithDomain:code:userInfo:
_stopAllObservation
copy
initWithValue:oldValue:keyPath:observationToken:
isMainThread
initWithObservedObject:observer:keyPaths:retainingObservedObject:includeInitialValue:includeChanges:changesBlock:
token
startObserving:completion:
startObserving:keyPaths:includeInitialValue:observationHandler:
startObserving:keyPaths:includeInitialValue:includeChanges:observationHandler:
startObserving:keyPaths:observationHandler:
name
userInfo
initWithName:object:userInfo:
stopObserving
removeObjectForKey:
allValues
removeAllObjects
countByEnumeratingWithState:objects:count:
allKeys
initWithOwner:
startObserving:keyPath:includeInitialValue:observationHandler:
startObserving:keyPath:observationHandler:
startObservingNotificationForName:object:notificationCenter:observationHandler:
stopObserving:
stopAllObservation
_unfairLock
_proxyObserversByTokens
_notificationObservers
_notificationCenters
_owner
setWithArray:
processInfo
globallyUniqueString
includeChanges
keyPaths
includeInitialValue
anyObject
valueForKeyPath:
_handleValueChangeForKeyPath:ofObject:oldValue:newValue:context:
changesBlock
_retainedObservedObject
_unsafeUnretainedObservedObject
_canHandleChanges
_includeInitialValue
_includeChanges
_token
_keyPaths
_changesBlock
T@"NSString",R,N,V_token
TB,R,N,V_includeInitialValue
TB,R,N,V_includeChanges
T@"NSSet",R,N,V_keyPaths
T@?,R,N,V_changesBlock
null
oldValue
keyPath
observationToken
_value
_oldValue
_keyPath
_observationToken
T@,R,N,V_value
T@,R,N,V_oldValue
T@"NSString",R,N,V_keyPath
T@,R,N,V_observationToken
whiteColor
setTitleColor:forState:
systemGrayTextColor
imageView
setTintColor:
titleLabel
defaultPUICStatusBarFont
setFont:
mediaType
isEqualToString:
_avkit_timeForFrameUsingSampleCursorSteppedByFrameCount:fromFrameAtTime:
_avkit_findTimeForFrameUsingFrameRateSteppedByFrameCount:fromFrameAtTime:
nominalFrameRate
_avkit_frameRateIsValid:
minFrameDuration
avkit_timeForFrameSteppedByFrameCount:fromFrameAtTime:
colorWithRed:green:blue:alpha:
systemGrayColor
AV_indicatorBackgroundColor
AV_indicatorForegroundColor
T@"AVPlayerViewController",R,W,N
initWithAVKitOwner:
T@"AVPlayerViewController",R,W,N,V_playerViewController
strongToStrongObjectsMapTable
behaviorsAndBehaviorContexts
keyEnumerator
allObjects
objectForKey:
willMoveToContext:
behaviorContext
setBehaviorContext:
behaviorContextClass
T@,W,N
AVKitOwner
willAddBehavior:
setObject:forKey:
setBehavior:
didAddBehavior:
willRemoveBehavior:
didRemoveBehavior:
behavior
enumerateAllBehaviorsUsingBlock:
objectEnumerator
enumerateAllBehaviorContextsUsingBlock:
enumerateAllBehaviorContextsConformingToProtocol:usingBlock:
behaviors
addBehavior:
removeBehavior:
enumerateAllBehaviorsConformingToProtocol:usingBlock:
behaviorOfClass:
enumerateAllBehaviorContextsImplementingSelector:forProtocol:usingBlock:
behaviorContextOfClass:
setAVKitOwner:
_AVKitOwner
_behaviorsAndBehaviorContexts
T@,W,N,V_AVKitOwner
T@"NSMapTable",R,N,V_behaviorsAndBehaviorContexts
_ensureBehaviorStorage
_behaviorStorage
T@"NSArray",R,N
buttonWithType:
setAdjustsImageWhenDisabled:
setAdjustsImageWhenHighlighted:
isHighlighted
setHighlighted:
setAlpha:
setTransform:
animateWithDuration:animations:
alignmentRectInsets
AV_isCompact
AV_compact
TB,R,N,GAV_isCompact
sharedCommandCenter
pauseCommand
_handleRemoteCommandEvent:
addTarget:action:
playCommand
stopCommand
togglePlayPauseCommand
nextTrackCommand
previousTrackCommand
skipForwardCommand
skipBackwardCommand
seekForwardCommand
seekBackwardCommand
changePlaybackRateCommand
changePlaybackPositionCommand
_updateRegisteredRemoteCommandEnabledStates
removeTarget:action:
canPause
canPlay
canSeekChapterForward
canScanForward
canSeekChapterBackward
canScanBackward
canSeek
command
pause:
play:
postNotificationName:object:
type
playbackRate
setRate:
positionTime
initWithStartTime:duration:number:title:imageFaultBlock:
setCGImage:
startTime
duration
number
title
cgImage
setValue:forUndefinedKey:
valueForUndefinedKey:
objectAtIndexedSubscript:
initialize
playbackChapterWithStartTime:duration:number:title:imageFaultBlock:
chapterAtTime:inChapters:
copyWithZone:
setCgImage:
_imageBlock
_startTime
_duration
_number
_title
_cgImage
T^{CGImage=},N,V_cgImage
Td,R,V_startTime
Td,R,V_duration
TQ,R,V_number
T@"NSString",R,C,V_title
URLForResource:withExtension:
dataWithContentsOfURL:
imageWithData:
pathExtension
length
stringByDeletingPathExtension
checkResourceIsReachableAndReturnError:
imageForResource:size:
URLForMovieResource:
setContentMode:
imageNamed:inBundle:
_flatImageWithColor:
addConstraint:
addConstraints:
_imageView
_updatePlaybackControlsViewVisibilityIfNeeded
initWithCoder:
containsValueForKey:
decodeObjectForKey:
mainBundle
playerWithURL:
initWithPlayer:
decodeBoolForKey:
decodeIntegerForKey:
encodeWithCoder:
videoGravity
encodeInteger:forKey:
player
dispatchQueue
setWithObject:
setVideoGravity:
isReadyForDisplay
playerViewControllerShouldHandleDoneButtonTap:
loadViewIfNeeded
insertSubview:below:
centerYAnchor
constraintEqualToAnchor:
centerXAnchor
widthAnchor
heightAnchor
_showOrHidePlaybackControlsView
volumeController
volumeValue
flashVolumeControl:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
animateWithDuration:animations:completion:
blackColor
setClipsToBounds:
localVolumeControllerWithAudioCategory:
setVolumeController:
addChildViewController:
standardLayoutConstraintsWithSuperview:
_handleDoubleTapGesture:
initWithTarget:action:
setNumberOfTapsRequired:
addGestureRecognizer:
_handleSingleTapGesture:
requireGestureRecognizerToFail:
setNeedsStatusBarAppearanceUpdate
willChangeValueForKey:
didChangeValueForKey:
timeControlStatus
_showPlaybackControlsViewIfNeededAndHideIfPossibleAfterDelayIfPlaying
_hidePlaybackControlsViewIfPossibleUntilFurtherUserInteraction
autoplay:
_updateUnsupportedContentIndicatorView
_updatePlaybackControlsViewVisibilityForUnsupportedContent
boolValue
_isAudioOnlyContent
_updatePlaybackControlsViewVisibilityForAudioOnlyContent
status
_isUnsupportedContent
hasEnabledVideo
hasEnabledAudio
_setPlaybackControlsViewVisibilityNeedsUpdate
isVideoScaled
setVideoScaled:
_showsPlaybackControlsView
_hidePlaybackControlsViewIfPossibleAfterDelayIfPlayingWithDelay:
_hidePlaybackControlsViewIfPossible
_showPlaybackControlsViewIfNeededAndHideIfPossibleAfterDelayIfPlayingWithDelay:
_firePlaybackControlsViewVisibilityTimer:
animateWithDuration:delay:options:animations:completion:
keyPathsForValuesAffectingPlayer
keyPathsForValuesAffectingVideoGravity
keyPathsForValuesAffectingReadyForDisplay
volumeIndicatorDidBeginAdjustingVolume:
volumeIndicatorDidAdjustVolume:
volumeIndicatorDidEndAdjustingVolume:
volumeIndicatorWasTapped:
setPlayer:
delegate
contentOverlayView
setShowsPlaybackControls:
childViewControllerForStatusBarHidden
canBecomeFirstResponder
_showPlaybackControlsViewIfNeeded
_hidePlaybackControlsViewIfPossibleAfterDelayIfPlaying
showsPlaybackControls
_playerShouldAutoplay
_videoGravity
_nowPlayingInfoController
_remoteCommandController
_unsupportedContentIndicatorView
_playerLayerView
_contentOverlayView
_playbackControlsViewController
_volumeControlFadeOutTimer
_playbackControlsViewVisibilityNeedsUpdate
_playbackControlsViewVisibilityCounter
_playbackControlsViewVisibilityTimer
_isShowingPlaybackControlsViewForUserInteraction
_isShowingPlaybackControlsViewAfterUserInteraction
_isShowingPlaybackControlsViewForUnsupportedContent
_isShowingPlaybackControlsViewForAudioOnlyContent
_delegate
_delegateRespondsTo
_showsPlaybackControls
__behaviorStorage
T@"AVBehaviorStorage",R,N,V__behaviorStorage
readyForDisplay
TB,R,N,GisReadyForDisplay
T@"<AVPlayerViewControllerDelegate>",W,N
T@"AVPlayer",&,N
T@"NSString",C,N
T@"UIView",R,N
TB,N,V_showsPlaybackControls
showPlaybackControlsViewForVolumeChange
presentingViewController
dismissViewControllerAnimated:completion:
initWithPlayerLayerView:
setWithObjects:
videoRect
layerClass
keyPathsForValuesAffectingPlayerLayer
keyPathsForValuesAffectingVideoRect
keyPathsForValuesAffectingVideoScaled
playerLayer
T@"AVPlayerLayer",R,N
Tq,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
videoScaled
TB,N,GisVideoScaled
initWithCGImage:
image
T@"UIImage",R
_timing
isEqualToValueTiming:
allocWithZone:
initWithValueTiming:
decodeDoubleForKey:
initWithAnchorValue:anchorTimeStamp:rate:
anchorValue
encodeDouble:forKey:
anchorTimeStamp
supportsSecureCoding
TB,R
mutableCopyWithZone:
classForCoder
Td,R,N
setAnchorValue:
setAnchorTimeStamp:
Td,D,N
valueTimingWithAnchorValue:anchorTimeStamp:rate:
systemUptime
currentTimeStamp
valueForTimeStamp:
timeStampForValue:
setValueTiming:
_timeStamp
_rate
hitTest:withEvent:
initWithSliderStyle:
setNumberOfSteps:
setShouldFadeAccessoryImages:
systemOrangeColor
gestureRecognizerShouldBegin:
intrinsicContentSize
initWithOutputURL:settings:autorecord:maximumRecordingDuration:actionTitle:alwaysShowActionTitle:
setFullWidth:
state
currentTime
setCurrentTime:
setState:
sharedInstance
unsignedIntegerValue
_recordingDidStop
_enableUserIdleDisplaySleep
cancel
systemImageNamed:
alwaysShowActionTitle
font
pointSize
monospacedTimeFontOfSize:
setTextColor:
save
setDataSource:
recorderButtonPressed
_calculateButtonAndLabelFrames
setCategory:error:
setActive:error:
autorecord
stop
pause
_startRecording
_disableUserIdleDisplaySleep
play
audioRecorderViewControllerDidCancel:
audioRecorderViewControllerDidFinish:
initWithURL:settings:error:
_failureWithError:
setInstantaneousMetering:
setMeteringEnabled:
setRecording:
record
audioRecorderViewControllerDidStart:
initWithContentsOfURL:error:
audioRecorderViewController:didFailWithError:
audioRecorderViewControllerRequestsBacklightAssertionCreate:
audioRecorderViewControllerRequestsBacklightAssertionRelease:
frame
semanticContentAttribute
userInterfaceLayoutDirectionForSemanticContentAttribute:
sizeThatFits:
setFrame:
updateMeters
averagePowerForChannel:
audioPlayerDidFinishPlaying:successfully:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerBeginInterruption:
audioPlayerEndInterruption:withOptions:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:
audioRecorderDidFinishRecording:successfully:
audioRecorderEncodeErrorDidOccur:error:
audioRecorderBeginInterruption:
audioRecorderEndInterruption:withOptions:
audioRecorderEndInterruption:withFlags:
audioRecorderEndInterruption:
waveformViewPowerForCurrentTime:
initWithOutputURL:settings:
initWithOutputURL:settings:maximumRecordingDuration:finishString:
viewWillLayoutSubviews
outputURL
actionTitle
maximumDuration
settings
setSettings:
_audioRecorder
_audioPlayer
_waveformView
_timeLabel
_cancelButton
_compactCancelButton
_saveButton
_recorderButton
_timeFormatter
_displayedTime
_state
_stateToSetAfterInterruption
_audioSessionInterruptionObserver
_applicationWillResignActiveObserver
_autorecord
_alwaysShowActionTitle
_outputURL
_actionTitle
_maximumDuration
_settings
T@"NSURL",R,N,V_outputURL
T@"NSString",R,C,N,V_actionTitle
TB,R,N,V_autorecord
TB,R,N,V_alwaysShowActionTitle
Td,R,N,V_maximumDuration
T@"NSDictionary",C,N,V_settings
T@"<AVAudioRecorderViewControllerDelegate>",W,N,V_delegate
fontDescriptor
fontDescriptorByAddingAttributes:
fontAttributes
floatValue
fontWithDescriptor:size:
fontWithName:size:
timeFontWithFont:
systemFontOfSize:
boldSystemFontOfSize:
italicSystemFontOfSize:
monospacedDigitSystemFontOfSize:weight:
traitCollectionWithPreferredContentSizeCategory:
preferredFontForTextStyle:compatibleWithTraitCollection:
timeFontWithName:size:
timeFontOfSize:
boldTimeFontOfSize:
italicTimeFontOfSize:
avkit_nonScalingFontWithTextStyle:weight:
takeAssertion
releaseAssertion
_takeAssertion
_releaseAssertion
initWithReason:forDisplay:willPreventScreenOff:willPreventGestures:timeoutSeconds:timeoutBlock:
tickle
_backlightAssertion
canonicalLanguageIdentifierFromString:
hasAudioMediaSelectionOptions
hasLegibleMediaSelectionOptions
audioMediaSelectionOptions
isEqualToArray:
setAudioMediaSelectionOptions:
setLegibleMediaSelectionOptions:
selectedMediaOptionMayHaveChanged:
_selectedMediaOptionWithMediaCharacteristic:
containsObject:
visualMediaSelectionOptions
_setMediaOption:mediaCharacteristic:
legibleMediaSelectionOptions
hasMediaCharacteristic:
appliesMediaSelectionCriteriaAutomatically
_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup
_disableLegibleMediaSelectionOptions:
_enableAutoMediaSelection:
currentAssetIfReady
mediaSelectionGroupForMediaCharacteristic:
options
externalPlaybackType
handlesAudioSessionInterruptions
extendedLanguageTag
_ensureUserCaptionDisplayType:
currentLegibleMediaSelectionOption
currentAudioMediaSelectionOption
propertyList
reloadOptionsAssumingMediaOptionsMayHaveChanged:
audioOptions
legibleOptions
setLegibleMediaSelectionOptions:audioMediaSelectionOptions:assumeMediaOptionMayHaveChanged:
_optionsForGroup:
playableMediaSelectionOptionsFromArray:
autoupdatingCurrentLocale
localeIdentifier
languageCompare:currentLanguageCode:currentLanguageIdentifier:
sortedArrayUsingComparator:
numberWithBool:
array
isAC3Only
addObject:
arrayWithArray:
currentItem
currentMediaSelection
selectedMediaOptionInMediaSelectionGroup:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
arrayByAddingObjectsFromArray:
valueForKey:
avkit_persistentIdentifier
removeObject:
isEqualToSet:
isCC
isAuxiliary
isEasyReader
isSDH
isMain
selectMediaOptionAutomaticallyInMediaSelectionGroup:
_performAutomaticMediaSelectionForUserCaptionDisplayType:
selectMediaOption:inMediaSelectionGroup:
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
currentVideoMediaSelectionOption
keyPathsForValuesAffectingCurrentAudioMediaSelectionOption
setCurrentAudioMediaSelectionOption:
keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption
setCurrentLegibleMediaSelectionOption:
selectedMediaOptionMayHaveChanged
reloadOptions
reloadOptionsAndCurrentSelections
reloadAudioOptions
reloadLegibleOptions
keyPathsForValuesAffectingHasMediaSelectionOptions
keyPathsForValuesAffectingHasAudioMediaSelectionOptions
keyPathsForValuesAffectingHasLegibleMediaSelectionOptions
mediaSubTypes
unsignedIntValue
locale
displayName
localizedCaseInsensitiveCompare:
AC3Only
TB,R,GisAC3Only
main
TB,R,GisMain
TB,R,GisSDH
TB,R,GisCC
easyReader
TB,R,GisEasyReader
auxiliary
TB,R,GisAuxiliary
T@"NSNumber",R
audioFormats
integerValue
seekToTime:toleranceBefore:toleranceAfter:
automaticallyNotifiesObserversOfCurrentTime
resolution
setMinTime:
maxTime
setMaxTime:
_resolution
_currentTime
_minTime
_maxTime
Td,V_minTime
Td,V_maxTime
T@"<AVTimeControlling>",&
seekToTime
isSeeking
targetTime
setTargetTime:
CMTimeRangeValue
setTargetTimeWithinEndTimes:
remainingTargetTimeWithinEndTimes
setCurrentTimeWithinEndTimes:
remainingTime
isCurrentTimeAtEndOfSeekableTimeRanges
keyPathsForValuesAffectingTargetTime
keyPathsForValuesAffectingTargetTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTargetTimeWithinEndTimes
keyPathsForValuesAffectingCurrentTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTime
keyPathsForValuesAffectingRemainingTimeWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRangeDuration
keyPathsForValuesAffectingCurrentTimeAtEndOfSeekableTimeRanges
Td,R
currentTimeAtEndOfSeekableTimeRanges
TB,R,GisCurrentTimeAtEndOfSeekableTimeRanges
minTiming
maxTiming
bundleForClass:
bundle
bundleIdentifier
lowercaseString
hasPrefix:
localizedStringForKey:value:table:
initWithSuiteName:
setImageEdgeInsets:
TB,N,GisPlaying
localizedDisplayName
avkit_title
commonMetadata
metadataItemsFromArray:filteredByIdentifier:
firstObject
stringValue
shortLocalizedDisplayName
mediaRemoteIdentifier
avkit_offOption
avkit_autoOption
T@"NSString",R,N
T@"AVMediaSelectionOption",R
isRecording
_pointsPerSecond
_numberOfSamplesForWidth:
dataSource
numberWithFloat:
setNeedsDisplay
bounds
_originForTime:
_offsetForTime:
reset
drawRect:
_isCompact
_samples
_timeOfLastSample
_recording
_dataSource
Td,N,V_currentTime
recording
TB,N,GisRecording,V_recording
T@"<AVWaveformViewDataSource>",W,N,V_dataSource
cachedIsPictureInPictureSupported
startInspectionIfNeeded
isInspectionSuspended
hasBegunInspection
setHasBegunInspection:
updateAtMinMaxTime
addPeriodicTimeObserverForInterval:queue:usingBlock:
isReadyToPlay
timebase
updateTiming
isLooping
seekToEnd:
seekToBeginning:
items
defaultPlaybackRate
setDefaultPlaybackRate:
isPictureInPictureActive
doubleValue
internalDelegate
playerControllerCanRestorePlaybackRateAfterAudioSessionDeactivation:
sharedApplication
applicationState
isBatteryMonitoringEnabled
setBatteryMonitoringEnabled:
batteryState
setDeviceBatteryChargingOrFull:
startKVO
_playbackCoordinatorWithoutTriggeringFullSetup
_updateCoordinatedPlaybackActive
contextID
outputContext
_updatePlayingOnMatchPointDeviceIfNeeded
observationController
removeTimeObserver:
isPreventingIdleDisplaySleep
setPreventingIdleDisplaySleep:
_observeValueForKeyPath:oldValue:newValue:
CGSizeValue
setPresentationSize:
_prepareAssetForInspectionIfNeeded
_updateCurrentAudioTrackIfNeeded
_updateCurrentVideoTrackIfNeeded
error
isPlayingOnExternalScreen
isDeviceBatteryChargingOrFull
setComposable:
setHasProtectedContent:
setAvailableMetadataFormats:
setCompatibleWithAirPlayVideo:
setSeeking:
setSeekingInternal:
setSeekToTimeInternal:
setContentChapters:
loadValuesAsynchronouslyForKeys:completionHandler:
metadataItemsFromArray:withKey:keySpace:
dataValue
dictionaryWithDictionary:
statusOfValueForKey:error:
preferredLanguages
arrayByAddingObject:
chapterMetadataGroupsBestMatchingPreferredLanguages:
arrayWithCapacity:
lastObject
timeRange
sortUsingComparator:
isComposable
hasProtectedContent
availableMetadataFormats
isCompatibleWithAirPlayVideo
updateMinMaxTiming
isPlaybackLikelyToKeepUp
coordinatedPlaybackActive
isPlaybackBufferEmpty
_retryPlayImmediatelyIfNeeded
seekToTimeInternal
setSeekToTime:
isExternalPlaybackActive
pauseForAllCoordinatedPlaybackParticipants:
shouldPreventIdleDisplaySleep
canPlayImmediately
playImmediatelyAtRate:
loadedTimeRanges
isPictureInPictureInterrupted
setRateBeforeScrubBegan:
_queuePlayer
isSeekingInternal
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
pauseWithoutAffectingCoordinatedPlayback
endScrubbing
_cancelPendingSeeksIfNeeded
actionAtItemEnd
setActionAtItemEnd:
setAtMinTime:
setAtMaxTime:
isMuted
setMuted:
tracksWithMediaType:
presentationSize
reversePlaybackEndTime
setReversePlaybackEndTime:
forwardPlaybackEndTime
setForwardPlaybackEndTime:
setMinTiming:
setMaxTiming:
currentDate
currentEstimatedDate
hasVideo
contentChapters
_updateMinMaxTimingIfNeeded
seekableTimeRangesLastModifiedTime
liveUpdateInterval
asset
isCompletelySeekable
_assetIsRestrictedFromSaving:
_assetIsMarkedNotSerializable:
availableVideoDynamicRanges
numberWithInt:
_assetContainsProResRaw:
metadataForFormat:
numberWithUnsignedInt:
objectAtIndex:
getBytes:length:
tracks
formatDescriptions
otherParticipants
setCoordinatedPlaybackActive:
currentEnabledAssetTrackForMediaType:
setCurrentAudioTrack:
setCurrentVideoTrack:
outputDevices
deviceSubType
isPlayingOnMatchPointDevice
setPlayingOnMatchPointDevice:
track
assetTrack
isEnabled
touchBarRequiresLinearPlayback
suspendPlaybackCoordinatorWhileActivelySeekingIfNecessary
_updateRateForScrubbingAndSeeking
resumePlaybackCoordinatorIfSuspended
scrubCoordinatorSuspension
beginSuspensionForReason:
setScrubCoordinatorSuspension:
endProposingNewTime:
seekToCMTime:toleranceBefore:toleranceAfter:
throttledSeekToTime:toleranceBefore:toleranceAfter:
isStreaming
actuallySeekToTime
seekByTimeInterval:toleranceBefore:toleranceAfter:
canPlayFastForward
postNotificationName:object:userInfo:
_updateScanningForwardRate
scanningDelays
canPlayFastReverse
_updateScanningBackwardRate
canSeekFrameForward
seekOrStepByFrameCount:
canSeekFrameBackward
canStepForward
canStepBackward
stepByCount:
isScrubbing
beginScrubbing
reverseObjectEnumerator
setTiming:
_setMinTiming:maxTiming:
allowsExternalPlayback
setAllowsExternalPlayback:
isPlayingOnSecondScreen
supportsMultipleOutputDevices
deviceName
componentsJoinedByString:
isPictureInPictureSupported
canUseNetworkResourcesForLiveStreamingWhilePaused
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
associatedTracksOfType:
cancelPendingSeeks
rateBeforeScrubBegan
setCurrentAssetIfReady:
assetBeingPrepared
setAssetBeingPrepared:
assetInspectionQueue
setCachedIsPictureInPictureSupported:
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingReadyToPlay
keyPathsForValuesAffectingError
keyPathsForValuesAffectingCompletelySeekable
keyPathsForValuesAffectingShouldPreventIdleDisplaySleep
keyPathsForValuesAffectingRate
keyPathsForValuesAffectingCanPlay
keyPathsForValuesAffectingPlaying
keyPathsForValuesAffectingCanPause
keyPathsForValuesAffectingCanTogglePlayback
keyPathsForValuesAffectingVolume
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingHasContent
keyPathsForValuesAffectingContentDuration
keyPathsForValuesAffectingContentDimensions
keyPathsForValuesAffectingCurrentTime
keyPathsForValuesAffectingMinTime
keyPathsForValuesAffectingReversePlaybackEndTime
keyPathsForValuesAffectingMaxTime
keyPathsForValuesAffectingForwardPlaybackEndTime
keyPathsForValuesAffectingContentDurationWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRanges
keyPathsForValuesAffectingLoadedTimeRanges
keyPathsForValuesAffectingHasEnabledAudio
keyPathsForValuesAffectingHasVideo
keyPathsForValuesAffectingHasEnabledVideo
keyPathsForValuesAffectingHasContentChapters
keyPathsForValuesAffectingStreaming
keyPathsForValuesAffectingHasLiveStreamingContent
keyPathsForValuesAffectingHasSeekableLiveStreamingContent
keyPathsForValuesAffectingHasTrimmableContent
keyPathsForValuesAffectingHasShareableContent
keyPathsForValuesAffectingTimeControlStatus
keyPathsForValuesAffectingCanSeek
keyPathsForValuesAffectingCanScanForward
keyPathsForValuesAffectingCanScanBackward
keyPathsForValuesAffectingCanSeekToBeginning
keyPathsForValuesAffectingCanSeekToEnd
keyPathsForValuesAffectingCanSeekFrameForward
keyPathsForValuesAffectingCanSeekFrameBackward
keyPathsForValuesAffectingCanSeekChapterForward
keyPathsForValuesAffectingCanSeekChapterBackward
keyPathsForValuesAffectingAllowsExternalPlayback
keyPathsForValuesAffectingPlayingOnExternalScreen
keyPathsForValuesAffectingExternalPlaybackActive
keyPathsForValuesAffectingExternalPlaybackType
keyPathsForValuesAffectingExternalPlaybackAirPlayDeviceLocalizedName
keyPathsForValuesAffectingPictureInPicturePossible
observationInfo
setObservationInfo:
togglePlaybackEvenWhenInBackground:
setTouchBarRequiresLinearPlayback:
setLooping:
increaseVolume:
decreaseVolume:
changeVolumeToMinimum:
changeVolumeToMaximum:
toggleMuted:
setInspectionSuspended:
contentDimensions
currentOrEstimatedDate
hasContentChapters
hasTrimmableContent
hasShareableContent
audioWaveform
scanForward:
scanBackward:
canSeekToBeginning
canSeekToEnd
seekFrameForward:
seekFrameBackward:
beginScrubbing:
endScrubbing:
seekToChapter:
externalPlaybackAirPlayDeviceLocalizedName
isPictureInPicturePossible
setPictureInPictureInterrupted:
togglePictureInPicture:
beginReducingResourcesForPictureInPicturePlayerLayer:
endReducingResourcesForPictureInPicturePlayerLayer:
isReducingResourcesForPictureInPicture
_timecodeTrack
isPlaybackSuspended
setPlaybackSuspended:
setAssetInspectionQueue:
setPictureInPictureSupported:
currentAudioTrack
currentVideoTrack
isPreventingIdleSystemSleep
setPreventingIdleSystemSleep:
isDisablingAutomaticTermination
setDisablingAutomaticTermination:
allowsPictureInPicturePlayback
setAllowsPictureInPicturePlayback:
setPictureInPictureActive:
canTogglePictureInPicture
setCanTogglePictureInPicture:
pipActivitySessionIdentifier
setPipActivitySessionIdentifier:
seekTimer
setCurrentVideoMediaSelectionOption:
_audioMediaSelectionOptions
_visualMediaSelectionOptions
_legibleMediaSelectionOptions
_cachedSelectedAudioMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation
_lastKnownPersistedExtendedLanguageTag
_observationInfo
_inspectionSuspended
_updateAtMinMaxTimePeriodicObserverToken
_timecodePeriodicObserverToken
_pictureInPictureInterrupted
_handlesAudioSessionInterruptions
_isDeallocating
_hasSetUpSeekableLiveStreamState
_rateToRestoreAfterAudioSessionInterruptionEnds
_retryPlayingImmediatelyBlock
_shouldPlayImmediately
_looping
_actionAtItemEnd
_seekQueue
_seekTimer
_timeOfLastUpdate
_ignoreRateKeyValueChanges
_ignoreNextRateKeyValueChange
_pendingSeek
_isResumed
_toleranceBefore
_toleranceAfter
_isScanningForward
_isScanningBackward
_scanningCount
_preScanningRate
_liveStreamMinTiming
_liveStreamMaxTiming
_liveStreamEventModePossible
_canUseNetworkResourcesForLiveStreamingWhilePausedCount
_previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused
_shouldPlayWhenLikelyToKeepUp
_deviceBatteryStateDidChangeObserver
_deviceBatteryMonitoringWasEnabled
_playingOnSecondScreen
_reduceResourceUsageAssertion
_defaultPlaybackRate
_touchBarRequiresLinearPlayback
_internalDelegate
_atMaxTime
_atMinTime
_playbackSuspended
_scrubbing
_pictureInPictureSupported
_seekingInternal
_seeking
_composable
_hasProtectedContent
_compatibleWithAirPlayVideo
_preventingIdleSystemSleep
_preventingIdleDisplaySleep
_disablingAutomaticTermination
_allowsPictureInPicturePlayback
_pictureInPictureActive
_canTogglePictureInPicture
_hasBegunInspection
_playingOnMatchPointDevice
_deviceBatteryChargingOrFull
_coordinatedPlaybackActive
_player
_observationController
_currentAssetIfReady
_assetInspectionQueue
_assetBeingPrepared
_minTiming
_maxTiming
_currentAudioTrack
_currentVideoTrack
_seekToTime
_contentChapters
_availableMetadataFormats
_rateBeforeScrubBegan
_scrubCoordinatorSuspension
_pipActivitySessionIdentifier
_currentVideoMediaSelectionOption
_presentationSize
_seekToTimeInternal
atMaxTime
TB,N,GisAtMaxTime,V_atMaxTime
atMinTime
TB,N,GisAtMinTime,V_atMinTime
playbackSuspended
TB,N,GisPlaybackSuspended,V_playbackSuspended
scrubbing
TB,N,GisScrubbing,V_scrubbing
T@"AVPlayer",&,N,V_player
T@"AVObservationController",R,N,V_observationController
T{CGSize=dd},N,V_presentationSize
T@"AVAsset",&,N,V_currentAssetIfReady
T@"NSObject<OS_dispatch_queue>",&,N,V_assetInspectionQueue
T@"AVAsset",&,N,V_assetBeingPrepared
pictureInPictureSupported
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
readyToPlay
TB,R,N,GisReadyToPlay
T@"AVValueTiming",&,N,V_timing
T@"AVValueTiming",&,N,V_minTiming
T@"AVValueTiming",&,N,V_maxTiming
T@"AVAssetTrack",&,N,V_currentAudioTrack
T@"AVAssetTrack",&,N,V_currentVideoTrack
seekingInternal
TB,GisSeekingInternal,V_seekingInternal
seeking
TB,N,GisSeeking,V_seeking
T{?=qiIq},V_seekToTimeInternal
Td,N,V_seekToTime
T@"NSArray",&,N,V_contentChapters
composable
TB,N,GisComposable,V_composable
TB,N,V_hasProtectedContent
T@"NSArray",&,N,V_availableMetadataFormats
compatibleWithAirPlayVideo
TB,N,GisCompatibleWithAirPlayVideo,V_compatibleWithAirPlayVideo
Td,N,V_rateBeforeScrubBegan
T@"AVCoordinatedPlaybackSuspension",&,N,V_scrubCoordinatorSuspension
preventingIdleSystemSleep
TB,N,GisPreventingIdleSystemSleep,V_preventingIdleSystemSleep
preventingIdleDisplaySleep
TB,N,GisPreventingIdleDisplaySleep,V_preventingIdleDisplaySleep
disablingAutomaticTermination
TB,N,GisDisablingAutomaticTermination,V_disablingAutomaticTermination
TB,N,V_allowsPictureInPicturePlayback
pictureInPictureActive
TB,N,GisPictureInPictureActive,V_pictureInPictureActive
TB,N,V_canTogglePictureInPicture
T@"NSString",C,N,V_pipActivitySessionIdentifier
TB,N,V_hasBegunInspection
playingOnMatchPointDevice
TB,N,GisPlayingOnMatchPointDevice,V_playingOnMatchPointDevice
deviceBatteryChargingOrFull
TB,N,GisDeviceBatteryChargingOrFull,V_deviceBatteryChargingOrFull
TB,R,N
T@"NSObject<OS_dispatch_source>",R,N,V_seekTimer
T@"NSDate",R,N
TB,N
T@"NSArray",R,N,V_visualMediaSelectionOptions
T@"AVMediaSelectionOption",&,N,V_currentVideoMediaSelectionOption
TB,N,V_coordinatedPlaybackActive
Tq,R,N
T@"NSError",R,N
usesExternalPlaybackWhileExternalScreenIsActive
maximumVideoResolution
setPlayingOnSecondScreen:
setHandlesAudioSessionInterruptions:
keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive
keyPathsForValuesAffectingMaximumVideoResolution
playingOnSecondScreen
TB,N,GisPlayingOnSecondScreen
T{CGSize=dd},R,N
TB,R,N,GisPlayingOnMatchPointDevice
@44@0:8d16@24@?32B40
@16@0:8
v16@0:8
d16@0:8
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@32@0:8@16@24
v24@0:8@16
v20@0:8B16
v48@0:8@16@24@32^v40
v20@0:8f16
B16@0:8
q16@0:8
v24@0:8q16
@"AVPlayerController"
@"AVPlayerControllerTimeResolver"
@"AVTimeFormatter"
@"AVPlayerViewController"
@"NSDictionary"
@76@0:8@16q24q32@40q48d56d64f72
@80@0:8@16q24q32@40q48d56d64f72B76
v24@0:8d16
@24@0:8@16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16q24
v32@0:8@"PUICSlider"16q24
v24@0:8@"PUICSlider"16
@"NSString"
@"UIResponder"
@"AVDoneButton"
@"AVLabel"
@"AVSlider"
@"UIButton"
@"AVPlayPauseButton"
@"UILabel"
@"NMUVolumeIndicatorControl"
@"UIImageView"
@48@0:8@16@24B32B36@?40
@44@0:8@16@24B32@?36
@40@0:8@16@24@?32
v48@0:8@16@24@32@?40
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@60@0:8@16@24@32B40B44B48@?52
v32@0:8@16@?24
v56@0:8@16@24@32@40^v48
@?16@0:8
@"NSSet"
@48@0:8@16@24@32@40
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{?=qiIq}48@0:8q16{?=qiIq}24
B20@0:8f16
@"AVPlayerViewController"16@0:8
v24@0:8@"<AVBehaviorContext>"16
v24@0:8@"<AVBehavior>"16
v24@0:8@?16
@24@0:8#16
v40@0:8:16@24@?32
@"NSMapTable"
@24@0:8q16
{UIEdgeInsets=dddd}16@0:8
q24@0:8@16
@56@0:8d16d24Q32@40@?48
@32@0:8d16@24
@24@0:8^{_NSZone=}16
^{CGImage=}16@0:8
v24@0:8^{CGImage=}16
v32@0:8@16@24
^{CGImage=}
@40@0:8@16{CGSize=dd}24
v24@0:8@"NMUVolumeIndicatorControl"16
@"AVNowPlayingInfoController"
@"AVRemoteCommandController"
@"AVUnsupportedContentIndicatorView"
@"__AVPlayerLayerView"
@"AVTouchIgnoringView"
@"AVWatchPlaybackControlsViewController"
@"NSTimer"
@"<AVPlayerViewControllerDelegate>"
{?="playerViewControllerShouldHandleDoneButtonTap"B}
@"AVBehaviorStorage"
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=dd}16@0:8
@40@0:8d16d24d32
d24@0:8d16
@40@0:8{CGPoint=dd}16@32
{CGSize=dd}16@0:8
v28@0:8@16B24
v32@0:8@16Q24
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
v28@0:8@"AVAudioRecorder"16B24
v32@0:8@"AVAudioRecorder"16@"NSError"24
v24@0:8@"AVAudioRecorder"16
v32@0:8@"AVAudioRecorder"16Q24
f24@0:8@16
f24@0:8@"AVWaveformView"16
@56@0:8@16@24B32d36@44B52
@48@0:8@16@24d32@40
@"AVAudioRecorder"
@"AVAudioPlayer"
@"AVWaveformView"
@"NSURL"
@"<AVAudioRecorderViewControllerDelegate>"
@32@0:8@16d24
@24@0:8d16
@"CSLSBacklightAssertion"
@"AVTimer"
v36@0:8@16@24B32
q40@0:8@16@24@32
@"<AVTimeControlling>"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
q24@0:8d16
@"NSMutableArray"
@"<AVWaveformViewDataSource>"
^v16@0:8
v24@0:8^v16
v40@0:8@16@24@32
f16@0:8
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
v40@0:8d16d24d32
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v32@0:8{CGSize=dd}16
@"NSArray"
@"AVMediaSelectionOption"
@"NSNumber"
{?="value"q"timescale"i"flags"I"epoch"q}
@"AVValueTiming"
@"BSSimpleAssertion"
@"<AVPlayerControllerDelegate>"
@"AVPlayer"
@"AVObservationController"
@"AVAsset"
@"AVAssetTrack"
@"AVCoordinatedPlaybackSuspension"
{CGSize="width"d"height"d}
