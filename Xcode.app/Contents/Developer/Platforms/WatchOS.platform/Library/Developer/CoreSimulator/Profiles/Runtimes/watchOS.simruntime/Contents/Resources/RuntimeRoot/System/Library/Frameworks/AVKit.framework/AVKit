.AUUUUUU
%@ is not a valid initializer. You must call -[%@ initWithTimeInterval:queue:block:repeats:].
com.apple.avkit.AVTimer.timer %p
com.apple.avkit.AVTimer.manage %p
playerController.volume
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_LABEL_TEXT
targetTimeWithinEndTimes
maxTime
contentDuration
remainingTimeWithinEndTimes
currentTimeWithinEndTimes
playerController.metadata
playerController.hasMediaSelectionOptions
playerController.hasSeekableLiveStreamingContent
playerController.hasLiveStreamingContent
playerController.canScanForward
playerController.canTogglePlayback
playerController.canScanBackward
playerController.playing
playerController.contentDurationWithinEndTimes
playerController.canSeek
com.apple.avkit
AVKit
%@ (%p) %@
MPMediaItemPropertyArtist
MPMediaItemPropertyArtwork
MPMediaItemPropertyPlaybackDuration
MPMediaItemPropertyTitle
MPNowPlayingInfoPropertyElapsedPlaybackTime
MPNowPlayingInfoPropertyPlaybackRate
MPNowPlayingInfoCenter
MPMediaItemArtwork
hasContent
rate
metadata
-[AVNowPlayingInfoController dealloc]
-[AVNowPlayingInfoController init]
playerController.atMaxTime
playerController.atMinTime
V:[playbackProgressView]-(%f)-|
playbackProgressView
H:|-(%f)-[playbackProgressView]-(%f)-|
H:|-(4)-[metadataLabel]-(4)-|
metadataLabel
remainingTimeLabel
H:[remainingTimeLabel]-(%f)-|
doneButton
H:|-(%f)-[doneButton]
V:[vignetteLowerGradientView]|
H:|[vignetteLowerGradientView]|
vignetteLowerGradientView
V:|[vignetteUpperGradientView]
H:|[vignetteUpperGradientView]|
vignetteUpperGradientView
control-forward
control-rewind
PLAYBACK_CONTROLS_VIEW_CONTROLLER_DONE_BUTTON_TITLE
VignetteLowerGradient
VignetteUpperGradient
%@: %@
title
artist
-[AVWatchPlaybackControlsViewController dealloc]
-[AVWatchPlaybackControlsViewController initWithNibName:bundle:]
AVKitErrorDomain
AVKIT_ERROR_RECORDING_FAILED
v16@?0@"NSNotification"8
v32@?0@8@16@24
v48@?0@8@"NSString"16@24@32@"NSString"40
-[AVDoneButton dealloc]
-[AVDoneButton initWithFrame:]
v16@?0@8
v16@?0@"<AVBehaviorContext>"8
v16@?0@"<AVBehavior>"8
-[AVButton dealloc]
-[AVButton initWithFrame:]
AVRemoteCommandControllerDidReceiveStopCommandEventNotification
/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
/System/Library/Frameworks/MediaPlayer.framework/Contents/MacOS/MediaPlayer
MPRemoteCommandCenter
canPause
canPlay
canTogglePlayback
canSeekChapterForward
canSeekChapterBackward
canSeek
canScanForward
canScanBackward
-[AVRemoteCommandController dealloc]
-[AVRemoteCommandController init]
cgImage
com.apple.AVKit.ChapterImageQueue
V:|-(>=10)-[imageView]-(>=10)-|
H:|-(>=10)-[imageView]-(>=10)-|
imageView
UnsupportedContentIndicator
_showsPlaybackControlsView
_playerLayerView
playerController.hasEnabledAudio
playerController.hasEnabledVideo
playerController.status
V:|[playbackControlsView]|
H:|[playbackControlsView]|
playbackControlsView
V:|[playerLayerView]|
H:|[playerLayerView]|
playerLayerView
V:|[unsupportedContentIndicatorView]|
H:|[unsupportedContentIndicatorView]|
unsupportedContentIndicatorView
Audio/Video
NACVolumeController
Unable to find class %s
/System/Library/PrivateFrameworks/NanoMediaUI.framework/NanoMediaUI
/System/Library/PrivateFrameworks/NanoMediaUI.framework/Contents/MacOS/NanoMediaUI
NMUVolumeIndicatorControl
%@ only supports AVPlayer instances that have been initialized with the main queue as the dispatch queue for serializing key-value observations.
-[AVPlayerViewController encodeWithCoder:]
AVVideoGravity
-[AVPlayerViewController initWithCoder:]
AVPlayerShouldAutoplay
AVPlayerAssetFilename
-[AVPlayerViewController dealloc]
-[AVPlayerViewController initWithNibName:bundle:]
_playerLayerView.readyForDisplay
_playerLayerView.videoGravity
playerController.player
-[__AVPlayerLayerView dealloc]
-[__AVPlayerLayerView initWithFrame:]
videoGravity
layer.videoRect
layer.readyForDisplay
layer.videoGravity
layer
*** -%@ only defined for abstract class.  Define %c[%@ %@]!
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
time stamp
value
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
-[AVSlider dealloc]
%@ is not a valid initializer. You must call -[%@ initWithFrame:].
-[AVSlider initWithFrame:]
PauseAuditionButton
PlayAuditionButton
StopRecordingButton
StartRecordingButton
multiply.circle.fill
AUDIO_RECORDER_VIEW_CONTROLLER_CANCEL_BUTTON_TITLE
-[AVAudioRecorderViewController dealloc]
-[AVAudioRecorderViewController initWithOutputURL:settings:autorecord:maximumRecordingDuration:actionTitle:alwaysShowActionTitle:]
AUDIO_RECORDER_VIEW_CONTROLLER_SAVE_BUTTON_TITLE
%@ does not support unarchiving from a nib.
%@ is not a valid initializer. You must call -[%@ initWithOutputURL:settings:maximumRecordingDuration:finishString:].
AVKit is playing audiovisual content. That prevents backlight dim and screen off.
-[AVTimeLabel dealloc]
-[AVTimeLabel initWithFrame:]
-[AVPlayerController(AVMediaSelection) _setMediaOption:mediaCharacteristic:]
-[AVPlayerController(AVMediaSelection) _enableAutoMediaSelection:]
-[AVPlayerController(AVMediaSelection) _disableLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) _ensureUserCaptionDisplayType:]
q24@?0@8@16
avkit_persistentIdentifier
-[AVPlayerController(AVMediaSelection) selectedMediaOptionMayHaveChanged:]
currentAssetIfReady
player.appliesMediaSelectionCriteriaAutomatically
-[AVPlayerController(AVMediaSelection) currentLegibleMediaSelectionOption]
-[AVPlayerController(AVMediaSelection) setLegibleMediaSelectionOptions:]
-[AVPlayerController(AVMediaSelection) setAudioMediaSelectionOptions:]
MediaSelectionOptionsPersistentID
legibleMediaSelectionOptions
audioMediaSelectionOptions
hasLegibleMediaSelectionOptions
hasAudioMediaSelectionOptions
+[AVPlayerController(AVMediaSelection) canonicalLanguageIdentifierFromString:]
NilString
currentTime
minTime
AVResolution
AVInterval
AVPlayerController
playerController.minTime
playerController.minTiming
playerController.maxTime
playerController.maxTiming
playerController.timing
playerController.seekableTimeRanges
playerController.contentDuration
targetTime
playerController.seekToTime
playerController.seeking
-[AVLabel dealloc]
-[AVLabel initWithFrame:]
PlayButton
PauseButton
-[AVPlayPauseButton dealloc]
-[AVPlayPauseButton initWithFrame:]
%@-%@-%@
MEDIA_SELECTION_OPTION_AUTO_TITLE
MEDIA_SELECTION_OPTION_OFF_TITLE
AVPlayerControllerCurrentTimeJumpedNotification
AVPlayerControllerPlaybackDidEndNotification
AVPlayerControllerContentDimensionsChangedNotification
AVPlayerControllerSelectedMediaOptionDidChangeNotification
AVPlayerControllerDidSeekChapterNotification
AVPlayerControllerDidSeekChapterChapterKey
AVPlayerControllerDidBeginScanningNotification
AVPlayerControllerDidEndScanningNotification
AVPlayerControllerScanningDirectionKey
v8@?0
availableTrackAssociationTypes
mediaCharacteristics
extendedLanguageTag
mediaType
languageCode
enabled
commonMetadata
availableMetadataFormats
nominalFrameRate
assetCache
tracks
availableVideoDynamicRanges
maximumVideoResolution
availableChapterLocales
availableMediaCharacteristicsWithMediaSelectionOptions
compatibleWithAirPlayVideo
streaming
composable
hasProtectedContent
-[AVPlayerController _updateRateForScrubbingAndSeeking]
-[AVPlayerController endReducingResourcesForPictureInPicturePlayerLayer:]
-[AVPlayerController beginReducingResourcesForPictureInPicturePlayerLayer:]
-[AVPlayerController externalPlaybackAirPlayDeviceLocalizedName]
EXTERNAL_PLAYBACK_DEVICE_NAME_NIL
-[AVPlayerController updateMinMaxTiming]
-[AVPlayerController seekOrStepByFrameCount:]
-[AVPlayerController actuallySeekToTime]
v12@?0B8
com.apple.motion.notserializable
-[AVPlayerController setVolume:]
-[AVPlayerController setPlaying:]
v16@?0d8
-[AVPlayerController setRate:]_block_invoke
shouldPreventIdleDisplaySleep
player.externalPlaybackActive
seekToTimeInternal
player.rate
player.currentItem.loadedTimeRanges
player.currentItem.playbackBufferEmpty
player.currentItem.playbackLikelyToKeepUp
timeControlStatus
hasLiveStreamingContent
player.currentItem.seekableTimeRanges
q24@?0@"AVChapter"8@"AVChapter"16
player.currentItem
-[AVPlayerController _queuePlayer]
v16@?0@"AVPlayerController"8
currentVideoMediaSelectionOption
hasEnabledVideo
currentAudioMediaSelectionOption
hasEnabledAudio
player.currentItem.duration
readyToPlay
player.currentItem.asset
v32@?0@"AVPlayerController"8@16@"AVKeyValueChange"24
contentDimensions
player.currentItem.presentationSize
-[AVPlayerController dealloc]
com.apple.Carousel
v32@?0@"AVPlayerController"8@16@"NSNotification"24
B8@?0
-[AVPlayerController startInspectionIfNeeded]_block_invoke
shouldRestoreRate
delegateCanResumeAfterInterruption
v32@?0{?=qiIq}8
-[AVPlayerController initWithPlayer:]
com.apple.avkit.playerControllerAssetInspectionQueue
com.apple.avkit.seekQueue
-[AVPlayerController init]
playingOnExternalScreen
hasVideo
status
pictureInPictureSupported
externalPlaybackType
playingOnSecondScreen
externalPlaybackActive
player.allowsExternalPlayback
contentChapters
atMinTime
atMaxTime
touchBarRequiresLinearPlayback
player.currentItem.canPlayFastReverse
player.currentItem.canPlayFastForward
hasSeekableLiveStreamingContent
seekableTimeRanges
player.timeControlStatus
completelySeekable
player.currentItem.seekableTimeRangesLastModifiedTime
player.currentItem.liveUpdateInterval
maxTiming
minTiming
player.currentItem.hasEnabledVideo
player.currentItem.hasVideo
player.currentItem.hasEnabledAudio
player.currentItem.forwardPlaybackEndTime
forwardPlaybackEndTime
player.currentItem.reversePlaybackEndTime
reversePlaybackEndTime
timing
presentationSize
pipActivitySessionIdentifier
player.muted
player.volume
deviceBatteryChargingOrFull
playing
player.error
player.currentItem.status
player.status
-[AVPlayerController(AVPlayerControllerExternalPlaybackSupportInternal) setHandlesAudioSessionInterruptions:]
handlesAudioSessionInterruptions
player.usesExternalPlaybackWhileExternalScreenIsActive
PlayerController has live streaming content changed: %d
PlayerController has seekable live streaming content changed: %d
PlayerController has media selection options changed: %d
You must call -[AVObservationController stopAllObservation] before destroying it, perhaps in its owner's dealloc. %@
Invalid track type for frame stepping.
Invalid input base frame time.
%s %d %p
%s mediaOption: %{public}@ mediaCharacteristic: %{public}@
%s Skipped setting identical option.
%s Changing MACaptionAppearanceDisplayType: %ld -> %ld
%s Enabling automatic display type because receiver changed captions to forced-only.
%s Persisting preferences for remote legible option change: %{public}@ -> %{public}@
%s Selected legible option: %{public}@ 
%s Selected audible option: %{public}@ 
*** %s Received a forced-only media selection (%{public}@) when display type was NOT forced-only (was %ld). mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup: %d. ***
*** %s Received a non-forced-only media selection (%{public}@) from automatic media selection when display type was forced-only. ***
%s LegibleMediaSelectionOptions: %{public}@
%s AudioMediaSelectionOptions: %{public}@
*** %s must be called on main thread. ***
Calls to -[AVPlayerController stopUsingNetworkResourcesForLiveStreamingWhilePaused] must be counterbalanced with calls to -[AVPlayerController startUsingNetworkResourcesForLiveStreamingWhilePaused].
%s Using output context %@
Modifying seekableTimeRange by: %f
segmentDuration: %f
minTimingNeedsUpdate: %d, new minTiming with minTime: %f, rate: %f, old minTime: %f, delta: %f
maxTimingNeedsUpdate: %d, new maxTiming with maxTime: %f old maxTime: %f, delta: %f
%s stepByCount: %ld
%s sampleBasedSeekTarget: %f
%s time: %f toleranceBefore: %f toleranceAfter: %f
Seek completed: %s
Scrubbing Ended
Scrubbing Started
%s %f
%s %d
Can play immediately: %d
Retrying play immediately.
Calling playImmediatelyAtRate: %f
Could not play immediately, setting a play immediately retry block.
%s %.1f on %p
%s immediately %.1f on %p
PlayerItemDidChange
New playerItem: <%{public}@: %p>
New asset: <%{public}@: %p>
SeekableTimeRanges changed {%f, %f} -> {%f, %f}.
liveStreamEventModePossible: %d
Time control status = %ld
Playback likely to keep up changed to: %@
isPlaybackBufferEmpty: %d
Rate changed to: %f
Setting prevent idle display sleep to YES
Setting prevent idle display sleep to NO
Failed to handle %@ %@
%s queuePlayer: %d
** AVPlayerViewController deallocated while preventing idle display sleep ** THIS SHOULD NEVER HAPPEN!
Interruption notification: AVAudioSessionInterruptionNotification player.rate: %.1f userinfo: %@
AVAudioSessionInterruptionTypeBegan: %f
AVAudioSessionInterruptionTypeEnded: %f
%s %s %s
Interruption notification: AVPlayerPlaybackWasInterruptedNotification player.rate: %.1f userinfo: %@
%s player: %p
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
softlink:r:path:/System/Library/PrivateFrameworks/NanoAudioControl.framework/NanoAudioControl
softlink:r:path:/System/Library/PrivateFrameworks/NanoMediaUI.framework/NanoMediaUI
zPLR
AVTimer
AVPlaybackControlsViewController
AVNowPlayingInfoController
AVAdditions
AVWatchPlaybackControlsViewController
PUICSliderDelegate
NSObject
AVObservationController
AVKeyValueChange
AVProxyKVOObserver
AVDoneButton
AVDefaultBehaviorContext
AVBehaviorContext
AVBehaviorStorage
AVBehaviorInternal
AVBehavior
AVBehaviorContextInternal
AVBehaviorSupport
AVButton
AVRemoteCommandController
AVChapter
NSCopying
AVUnsupportedContentIndicatorView
AVPlayerViewController
NMUVolumeIndicatorControlDelegate
AVPlaybackControlsViewControllerVisibility
AVPlaybackControlsViewControllerActions
AVPlayerViewController_WebKitOnly
__AVPlayerLayerView
EmbeddedAdditions
AVValueTiming
NSMutableCopying
NSCoding
AVMutableValueTiming
AVConcreteMutableValueTiming
AVConcreteValueTiming
AVValueTimingCreation
AVExtendedValueTiming
AVExtendedMutableValueTiming
AVTouchIgnoringView
AVSlider
AVAudioRecorderViewController
AVWaveformViewDataSource
AVAudioRecorderDelegate
AVAudioPlayerDelegate
_AVBacklightAssertion
AVTimeLabel
AVMediaSelection
AVPlayerController
AVPlayerControllerTimeResolver
TimeObserverAdditions
_AVBundle
AVLabel
AVPlayPauseButton
AVWaveformView
AVPlayerControllerExternalPlaybackSupportInternal
Td,R,V_interval
_queue
_timer
_invalidated
_interval
initWithTimeInterval:queue:block:repeats:
init
dealloc
invalidate
interval
.cxx_destruct
raise:format:
UTF8String
stringWithFormat:
T@"AVPlayerController",&,N
T@"AVPlayerViewController",W,N,V_playerViewController
TB,N,V_showsDoneButton
playing
TB,N,GisPlaying,V_playing
playPauseButtonEnabled
TB,N,GisPlayPauseButtonEnabled,V_playPauseButtonEnabled
TB,N,V_showsStreamingControls
TB,N,V_showsLiveStreamScrubber
TB,N,V_showsScaleButton
Tq,N,V_scaleButtonType
TB,N,V_showsLoadingIndicator
TB,N,V_showsMediaSelectionButton
TB,N,V_showsExitFullScreenButton
TB,N,V_showsPictureInPictureButton
pictureInPictureButtonEnabled
TB,N,GisPictureInPictureButtonEnabled,V_pictureInPictureButtonEnabled
TB,N,V_showsVolumeSlider
T@"NSDictionary",&,N,V_metadata
_playerController
_intervalTimeResolver
_resolutionTimeResolver
_elapsedTimeFormatter
_remainingTimeFormatter
_AVSystemControllerCurrentRouteHasVolumeControlDidChangeObserver
_viewAppeared
_showsDoneButton
_playing
_playPauseButtonEnabled
_showsStreamingControls
_showsLiveStreamScrubber
_showsScaleButton
_showsLoadingIndicator
_showsMediaSelectionButton
_showsExitFullScreenButton
_showsPictureInPictureButton
_pictureInPictureButtonEnabled
_showsVolumeSlider
_playerViewController
_scaleButtonType
_metadata
initWithNibName:bundle:
playerController
setPlayerController:
viewDidLoad
viewDidAppear:
viewDidDisappear:
observeValueForKeyPath:ofObject:change:context:
_updateElapsedTimeLabel
_updateRemainingTimeLabel
_updatePlaybackProgress
_updateVolumeSliderVisibility
_userInteractionObservationControlTouchDown:
_userInteractionObservationControlTouchUp:
updatePlaybackControlsEnabledStates
updateElapsedTimeLabel:
updateRemainingTimeLabel:
updatePlaybackProgress:
updateVolumeSliderValue:
addControlForUserInteractionObservation:
removeControlForUserInteractionObservation:
doneButtonTapped:
scaleButtonTapped:
volumeSliderValueChanged:
skipBackwardThirtySeconds:
seekChapterBackward:
beginScanningBackward:
endScanningBackward:
togglePlayback:
beginScanningForward:
endScanningForward:
seekChapterForward:
gotoEndOfSeekableRanges:
mediaSelectionButtonTapped:
fullScreenButtonTapped:
pictureInPictureButtonTapped:
playerViewController
setPlayerViewController:
showsDoneButton
setShowsDoneButton:
isPlaying
setPlaying:
isPlayPauseButtonEnabled
setPlayPauseButtonEnabled:
showsStreamingControls
setShowsStreamingControls:
showsLiveStreamScrubber
setShowsLiveStreamScrubber:
showsScaleButton
setShowsScaleButton:
scaleButtonType
setScaleButtonType:
showsLoadingIndicator
setShowsLoadingIndicator:
showsMediaSelectionButton
setShowsMediaSelectionButton:
showsExitFullScreenButton
setShowsExitFullScreenButton:
showsPictureInPictureButton
setShowsPictureInPictureButton:
isPictureInPictureButtonEnabled
setPictureInPictureButtonEnabled:
showsVolumeSlider
setShowsVolumeSlider:
metadata
setMetadata:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
isViewLoaded
removeTarget:action:forControlEvents:
addTarget:action:forControlEvents:
stringFromSeconds:
setFormatTemplate:
setStyle:
count
addObserverForName:object:queue:usingBlock:
mainQueue
defaultCenter
setAttribute:forKey:error:
sharedAVSystemController
arrayWithObjects:count:
removeObserver:
rangeOfString:
substringFromIndex:
substringToIndex:
_playerControllerCurrentTimeJumpedObserver
_nowPlayingInfoNeedsUpdate
_setNowPlayingInfoNeedsUpdate
_updateNowPlayingInfoIfNeeded
_updateNowPlayingInfo
setNowPlayingInfo:
numberWithDouble:
initWithImage:
setObject:forKeyedSubscript:
objectForKeyedSubscript:
dictionary
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
object
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setPriority:
AV_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:
setActive:
AV_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:active:
layer
setMasksToBounds:
setShadowPathIsBounds:
setShadowRadius:
setCornerRadius:
AV_setBackgroundBackgroundColor:
AV_setCornerRadius:
CGColor
setShadowColor:
setShadowOffset:
setShadowOpacity:
audioOnlyContent
TB,N,GisAudioOnlyContent
TB,N,V_isInteractivelyScrubbing
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_metadataLabelText
_audioOnlyContent
_remainingTimeLabelText
_playbackProgress
_isInteractivelyScrubbing
_previousFirstResponder
_doneButton
_remainingTimeLabel
_scrubber
_seekBackwardButton
_playPauseButton
_seekForwardButton
_metadataLabel
_volumeControl
_interactiveScrubberEnabled
_vignetteLowerGradientView
_vignetteUpperGradientView
slider:didTapTouchTarget:
sliderDidBeginCrownInteraction:
sliderDidEndCrownInteraction:
sliderDidRequestFocus:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
interactiveScrubberEnabled
setInteractiveScrubberEnabled:
isAudioOnlyContent
setAudioOnlyContent:
setIsInteractivelyScrubbing:
_scrubSliderValueChanged:
loadView
prefersStatusBarHidden
viewWillAppear:
viewWillDisappear:
willMoveToParentViewController:
didMoveToParentViewController:
_seekBackwardButtonTapped:
_seekForwardButtonTapped:
isInteractivelyScrubbing
setEnabled:animated:
setEnabled:
setHidden:
navigationController
defaultPUICStatusBarFontBaseLine
activateConstraints:
constraintsWithVisualFormat:options:metrics:views:
dictionaryWithObjects:forKeys:count:
setTextAlignment:
setImage:forState:
transportControlsAddTimeIntervalForSkipImage:
clearColor
setShouldAutomaticallAdjustValueOnTouch:
setValue:
setText:
setTitle:forState:
addSubview:
setTranslatesAutoresizingMaskIntoConstraints:
setImage:
imageNamed:inBundle:compatibleWithTraitCollection:
setView:
setValue:animated:
resignFirstResponder
transitionWithView:duration:options:animations:completion:
view
_setupLayoutSpec
drawAtPoint:withAttributes:
sizeWithAttributes:
localizedStringFromNumber:numberStyle:
colorWithWhite:alpha:
systemFontOfSize:weight:
drawAtPoint:
size
puic_deviceVariant
currentDevice
errorWithDomain:code:userInfo:
_unfairLock
_proxyObserversByTokens
_notificationObservers
_notificationCenters
_owner
initWithOwner:
startObserving:keyPaths:includeInitialValue:includeChanges:observationHandler:
startObserving:keyPath:includeInitialValue:observationHandler:
startObserving:keyPaths:observationHandler:
startObserving:keyPath:observationHandler:
startObserving:keyPaths:includeInitialValue:observationHandler:
startObservingNotificationForName:object:notificationCenter:observationHandler:
stopObserving:
stopAllObservation
_stopAllObservation
allKeys
stopObserving
countByEnumeratingWithState:objects:count:
removeAllObjects
allValues
removeObjectForKey:
initWithName:object:userInfo:
userInfo
name
isMainThread
copy
token
startObserving:completion:
initWithObservedObject:observer:keyPaths:retainingObservedObject:includeInitialValue:includeChanges:changesBlock:
initWithValue:oldValue:keyPath:observationToken:
T@,R,N,V_value
T@,R,N,V_oldValue
T@"NSString",R,N,V_keyPath
T@,R,N,V_observationToken
_value
_oldValue
_keyPath
_observationToken
value
oldValue
keyPath
observationToken
null
T@"NSString",R,N,V_token
TB,R,N,V_includeInitialValue
TB,R,N,V_includeChanges
T@"NSSet",R,N,V_keyPaths
T@?,R,N,V_changesBlock
_retainedObservedObject
_unsafeUnretainedObservedObject
_canHandleChanges
_includeInitialValue
_includeChanges
_token
_keyPaths
_changesBlock
_handleValueChangeForKeyPath:ofObject:oldValue:newValue:context:
includeInitialValue
includeChanges
keyPaths
changesBlock
valueForKeyPath:
anyObject
globallyUniqueString
processInfo
setWithArray:
initWithFrame:
setFont:
defaultPUICStatusBarFont
titleLabel
setTintColor:
imageView
systemGrayTextColor
setTitleColor:forState:
whiteColor
mediaType
isEqualToString:
minFrameDuration
avkit_timeForFrameSteppedByFrameCount:fromFrameAtTime:
_avkit_timeForFrameUsingSampleCursorSteppedByFrameCount:fromFrameAtTime:
_avkit_findTimeForFrameUsingFrameRateSteppedByFrameCount:fromFrameAtTime:
_avkit_frameRateIsValid:
colorWithRed:green:blue:alpha:
systemGrayColor
AV_indicatorBackgroundColor
AV_indicatorForegroundColor
T@"AVPlayerViewController",R,W,N,V_playerViewController
T@"AVPlayerViewController",R,W,N
initWithAVKitOwner:
T@,W,N,V_AVKitOwner
T@"NSMapTable",R,N,V_behaviorsAndBehaviorContexts
_AVKitOwner
_behaviorsAndBehaviorContexts
behaviors
addBehavior:
removeBehavior:
enumerateAllBehaviorsUsingBlock:
enumerateAllBehaviorsConformingToProtocol:usingBlock:
behaviorOfClass:
enumerateAllBehaviorContextsUsingBlock:
enumerateAllBehaviorContextsConformingToProtocol:usingBlock:
enumerateAllBehaviorContextsImplementingSelector:forProtocol:usingBlock:
behaviorContextOfClass:
AVKitOwner
setAVKitOwner:
behaviorsAndBehaviorContexts
objectEnumerator
keyEnumerator
didRemoveBehavior:
setBehaviorContext:
T@,W,N
behaviorContextClass
behaviorContext
willMoveToContext:
setBehavior:
willRemoveBehavior:
willAddBehavior:
didAddBehavior:
behavior
objectForKey:
setObject:forKey:
allObjects
strongToStrongObjectsMapTable
T@"NSArray",R,N
buttonWithType:
setHighlighted:
alignmentRectInsets
animateWithDuration:animations:
setTransform:
setAlpha:
isHighlighted
setAdjustsImageWhenHighlighted:
setAdjustsImageWhenDisabled:
AV_isCompact
AV_compact
TB,R,N,GAV_isCompact
_handleRemoteCommandEvent:
_updateRegisteredRemoteCommandEnabledStates
changePlaybackPositionCommand
changePlaybackRateCommand
seekBackwardCommand
seekForwardCommand
skipBackwardCommand
skipForwardCommand
previousTrackCommand
nextTrackCommand
togglePlayPauseCommand
stopCommand
playCommand
pauseCommand
sharedCommandCenter
positionTime
playbackRate
type
postNotificationName:object:
command
removeTarget:action:
addTarget:action:
T^{CGImage=},N,V_cgImage
Td,R,V_startTime
Td,R,V_duration
TQ,R,V_number
T@"NSString",R,C,V_title
_imageBlock
_startTime
_duration
_number
_title
_cgImage
copyWithZone:
initWithStartTime:duration:number:title:imageFaultBlock:
cgImage
setCGImage:
setValue:forUndefinedKey:
valueForUndefinedKey:
startTime
duration
number
title
setCgImage:
initialize
playbackChapterWithStartTime:duration:number:title:imageFaultBlock:
chapterAtTime:inChapters:
objectAtIndexedSubscript:
URLForResource:withExtension:
stringByDeletingPathExtension
checkResourceIsReachableAndReturnError:
imageForResource:size:
URLForMovieResource:
dataWithContentsOfURL:
imageWithData:
pathExtension
length
_imageView
addConstraints:
addConstraint:
_flatImageWithColor:
imageNamed:inBundle:
setContentMode:
T@"AVBehaviorStorage",R,N,V__behaviorStorage
readyForDisplay
TB,R,N,GisReadyForDisplay
T@"<AVPlayerViewControllerDelegate>",W,N
T@"AVPlayer",&,N
T@"NSString",C,N
T@"UIView",R,N
TB,N,V_showsPlaybackControls
_playerShouldAutoplay
_videoGravity
_nowPlayingInfoController
_remoteCommandController
_unsupportedContentIndicatorView
_playerLayerView
_contentOverlayView
_playbackControlsViewController
_volumeControlFadeOutTimer
_playbackControlsViewVisibilityNeedsUpdate
_playbackControlsViewVisibilityCounter
_playbackControlsViewVisibilityTimer
_isShowingPlaybackControlsViewForUserInteraction
_isShowingPlaybackControlsViewAfterUserInteraction
_isShowingPlaybackControlsViewForUnsupportedContent
_isShowingPlaybackControlsViewForAudioOnlyContent
_showsPlaybackControlsView
_delegate
_delegateRespondsTo
_showsPlaybackControls
__behaviorStorage
volumeIndicatorDidBeginAdjustingVolume:
volumeIndicatorDidAdjustVolume:
volumeIndicatorDidEndAdjustingVolume:
volumeIndicatorWasTapped:
initWithCoder:
encodeWithCoder:
player
setPlayer:
videoGravity
setVideoGravity:
isReadyForDisplay
delegate
setDelegate:
_ensureBehaviorStorage
contentOverlayView
setShowsPlaybackControls:
flashVolumeControl:
childViewControllerForStatusBarHidden
canBecomeFirstResponder
becomeFirstResponder
_isUnsupportedContent
_updateUnsupportedContentIndicatorView
_isAudioOnlyContent
_updatePlaybackControlsViewVisibilityForUnsupportedContent
_updatePlaybackControlsViewVisibilityForAudioOnlyContent
_handleDoubleTapGesture:
_handleSingleTapGesture:
_showPlaybackControlsViewIfNeeded
_hidePlaybackControlsViewIfPossible
_hidePlaybackControlsViewIfPossibleAfterDelayIfPlaying
_hidePlaybackControlsViewIfPossibleAfterDelayIfPlayingWithDelay:
_showPlaybackControlsViewIfNeededAndHideIfPossibleAfterDelayIfPlaying
_showPlaybackControlsViewIfNeededAndHideIfPossibleAfterDelayIfPlayingWithDelay:
_firePlaybackControlsViewVisibilityTimer:
_hidePlaybackControlsViewIfPossibleUntilFurtherUserInteraction
_setPlaybackControlsViewVisibilityNeedsUpdate
_updatePlaybackControlsViewVisibilityIfNeeded
_showOrHidePlaybackControlsView
showsPlaybackControls
_behaviorStorage
animateWithDuration:delay:options:animations:completion:
didChangeValueForKey:
willChangeValueForKey:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
boolValue
setNeedsStatusBarAppearanceUpdate
requireGestureRecognizerToFail:
addGestureRecognizer:
setNumberOfTapsRequired:
initWithTarget:action:
standardLayoutConstraintsWithSuperview:
addChildViewController:
setVolumeController:
localVolumeControllerWithAudioCategory:
setClipsToBounds:
blackColor
animateWithDuration:animations:completion:
volumeValue
volumeController
heightAnchor
widthAnchor
centerXAnchor
constraintEqualToAnchor:
centerYAnchor
insertSubview:below:
loadViewIfNeeded
playerViewControllerShouldHandleDoneButtonTap:
dispatchQueue
encodeInteger:forKey:
decodeIntegerForKey:
decodeBoolForKey:
playerWithURL:
mainBundle
decodeObjectForKey:
containsValueForKey:
keyPathsForValuesAffectingPlayer
keyPathsForValuesAffectingVideoGravity
keyPathsForValuesAffectingReadyForDisplay
setWithObject:
showPlaybackControlsViewForTouchDown
hidePlaybackControlsViewForTouchUp
showPlaybackControlsViewForVolumeChange
presentingViewController
dismissViewControllerAnimated:completion:
initWithPlayerLayerView:
T@"AVPlayerLayer",R,N
Tq,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
videoScaled
TB,N,GisVideoScaled
playerLayer
videoRect
isVideoScaled
setVideoScaled:
layerClass
keyPathsForValuesAffectingPlayerLayer
keyPathsForValuesAffectingVideoRect
keyPathsForValuesAffectingVideoScaled
setWithObjects:
initWithCGImage:
image
T@"UIImage",R
Td,R,N
mutableCopyWithZone:
classForCoder
_timing
anchorValue
anchorTimeStamp
rate
encodeDouble:forKey:
initWithAnchorValue:anchorTimeStamp:rate:
decodeDoubleForKey:
initWithValueTiming:
allocWithZone:
Td,D,N
setAnchorValue:
setAnchorTimeStamp:
setRate:
_timeStamp
_rate
isEqualToValueTiming:
valueTimingWithAnchorValue:anchorTimeStamp:rate:
systemUptime
currentTimeStamp
valueForTimeStamp:
currentValue
timeStampForValue:
setValueTiming:
hitTest:withEvent:
initWithSliderStyle:
setBackgroundColor:
gestureRecognizerShouldBegin:
intrinsicContentSize
systemOrangeColor
setShouldFadeAccessoryImages:
setNumberOfSteps:
T@"NSURL",R,N,V_outputURL
T@"NSString",R,C,N,V_actionTitle
TB,R,N,V_autorecord
TB,R,N,V_alwaysShowActionTitle
Td,R,N,V_maximumDuration
T@"NSDictionary",C,N,V_settings
T@"<AVAudioRecorderViewControllerDelegate>",W,N,V_delegate
_audioRecorder
_audioPlayer
_waveformView
_timeLabel
_cancelButton
_compactCancelButton
_saveButton
_recorderButton
_timeFormatter
_displayedTime
_state
_stateToSetAfterInterruption
_audioSessionInterruptionObserver
_applicationWillResignActiveObserver
_autorecord
_alwaysShowActionTitle
_outputURL
_actionTitle
_maximumDuration
_settings
waveformViewPowerForCurrentTime:
audioRecorderDidFinishRecording:successfully:
audioRecorderEncodeErrorDidOccur:error:
audioRecorderBeginInterruption:
audioRecorderEndInterruption:withOptions:
audioRecorderEndInterruption:withFlags:
audioRecorderEndInterruption:
audioPlayerDidFinishPlaying:successfully:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerBeginInterruption:
audioPlayerEndInterruption:withOptions:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:
initWithOutputURL:settings:autorecord:maximumRecordingDuration:actionTitle:alwaysShowActionTitle:
initWithOutputURL:settings:
initWithOutputURL:settings:maximumRecordingDuration:finishString:
viewWillLayoutSubviews
recorderButtonPressed
state
setState:
cancel
save
_startRecording
_recordingDidStop
_failureWithError:
_disableUserIdleDisplaySleep
_enableUserIdleDisplaySleep
_calculateButtonAndLabelFrames
outputURL
actionTitle
autorecord
alwaysShowActionTitle
maximumDuration
settings
setSettings:
averagePowerForChannel:
updateMeters
setFrame:
sizeThatFits:
userInterfaceLayoutDirectionForSemanticContentAttribute:
semanticContentAttribute
frame
audioRecorderViewControllerRequestsBacklightAssertionRelease:
audioRecorderViewControllerRequestsBacklightAssertionCreate:
audioRecorderViewController:didFailWithError:
initWithContentsOfURL:error:
audioRecorderViewControllerDidStart:
record
setMeteringEnabled:
setInstantaneousMetering:
initWithURL:settings:error:
audioRecorderViewControllerDidFinish:
stop
audioRecorderViewControllerDidCancel:
play
pause
setActive:error:
setCategory:error:
setTextColor:
pointSize
font
systemImageNamed:
unsignedIntegerValue
setFullWidth:
fontDescriptor
fontAttributes
floatValue
fontWithDescriptor:size:
fontWithName:size:
timeFontWithFont:
systemFontOfSize:
boldSystemFontOfSize:
italicSystemFontOfSize:
monospacedDigitSystemFontOfSize:weight:
traitCollectionWithPreferredContentSizeCategory:
preferredFontForTextStyle:compatibleWithTraitCollection:
timeFontWithName:size:
timeFontOfSize:
boldTimeFontOfSize:
italicTimeFontOfSize:
monospacedTimeFontOfSize:
avkit_nonScalingFontWithTextStyle:weight:
fontDescriptorByAddingAttributes:
_backlightAssertion
_takeAssertion
_releaseAssertion
tickle
initWithReason:forDisplay:willPreventScreenOff:willPreventGestures:timeoutSeconds:timeoutBlock:
sharedInstance
takeAssertion
releaseAssertion
audioOptions
legibleOptions
setLegibleMediaSelectionOptions:audioMediaSelectionOptions:assumeMediaOptionMayHaveChanged:
_optionsForGroup:
playableMediaSelectionOptionsFromArray:
autoupdatingCurrentLocale
localeIdentifier
languageCompare:currentLanguageCode:currentLanguageIdentifier:
hasAudioMediaSelectionOptions
sortedArrayUsingComparator:
numberWithBool:
array
isAC3Only
addObject:
arrayWithArray:
hasLegibleMediaSelectionOptions
currentItem
currentMediaSelection
selectedMediaOptionInMediaSelectionGroup:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
arrayByAddingObjectsFromArray:
valueForKey:
avkit_persistentIdentifier
removeObject:
isEqualToSet:
isCC
isAuxiliary
isEasyReader
isSDH
isMain
selectMediaOptionAutomaticallyInMediaSelectionGroup:
_performAutomaticMediaSelectionForUserCaptionDisplayType:
selectMediaOption:inMediaSelectionGroup:
mediaSelectionCriteriaCanBeAppliedAutomaticallyToMediaSelectionGroup:
hasMediaSelectionOptions
currentVideoMediaSelectionOption
keyPathsForValuesAffectingCurrentAudioMediaSelectionOption
setCurrentAudioMediaSelectionOption:
keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption
setCurrentLegibleMediaSelectionOption:
selectedMediaOptionMayHaveChanged
reloadOptions
reloadOptionsAndCurrentSelections
reloadAudioOptions
reloadLegibleOptions
keyPathsForValuesAffectingHasMediaSelectionOptions
keyPathsForValuesAffectingHasAudioMediaSelectionOptions
keyPathsForValuesAffectingHasLegibleMediaSelectionOptions
mediaSubTypes
unsignedIntValue
locale
displayName
localizedCaseInsensitiveCompare:
audioMediaSelectionOptions
audioFormats
integerValue
isEqualToArray:
setAudioMediaSelectionOptions:
setLegibleMediaSelectionOptions:
selectedMediaOptionMayHaveChanged:
_selectedMediaOptionWithMediaCharacteristic:
containsObject:
visualMediaSelectionOptions
_setMediaOption:mediaCharacteristic:
legibleMediaSelectionOptions
hasMediaCharacteristic:
appliesMediaSelectionCriteriaAutomatically
_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup
_disableLegibleMediaSelectionOptions:
_enableAutoMediaSelection:
mediaSelectionGroupForMediaCharacteristic:
options
extendedLanguageTag
canonicalLanguageIdentifierFromString:
_ensureUserCaptionDisplayType:
currentLegibleMediaSelectionOption
currentAudioMediaSelectionOption
propertyList
reloadOptionsAssumingMediaOptionsMayHaveChanged:
AC3Only
TB,R,GisAC3Only
main
TB,R,GisMain
TB,R,GisSDH
TB,R,GisCC
easyReader
TB,R,GisEasyReader
auxiliary
TB,R,GisAuxiliary
T@"NSNumber",R
Td,V_minTime
Td,V_maxTime
T@"<AVTimeControlling>",&
_resolution
_currentTime
_minTime
_maxTime
setInterval:
resolution
setResolution:
currentTime
setCurrentTime:
minTime
setMinTime:
maxTime
setMaxTime:
seekableTimeRangeDuration
encodeObject:forKey:
automaticallyNotifiesObserversOfCurrentTime
CMTimeRangeValue
targetTimeWithinEndTimes
setTargetTimeWithinEndTimes:
remainingTargetTimeWithinEndTimes
currentTimeWithinEndTimes
setCurrentTimeWithinEndTimes:
remainingTime
remainingTimeWithinEndTimes
isCurrentTimeAtEndOfSeekableTimeRanges
keyPathsForValuesAffectingTargetTime
keyPathsForValuesAffectingTargetTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTargetTimeWithinEndTimes
keyPathsForValuesAffectingCurrentTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTime
keyPathsForValuesAffectingRemainingTimeWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRangeDuration
keyPathsForValuesAffectingCurrentTimeAtEndOfSeekableTimeRanges
targetTime
setTargetTime:
Td,R
currentTimeAtEndOfSeekableTimeRanges
TB,R,GisCurrentTimeAtEndOfSeekableTimeRanges
bundle
bundleForClass:
bundleIdentifier
lowercaseString
hasPrefix:
localizedStringForKey:value:table:
initWithSuiteName:
TB,N,GisPlaying
setImageEdgeInsets:
avkit_title
commonMetadata
metadataItemsFromArray:filteredByIdentifier:
firstObject
stringValue
shortLocalizedDisplayName
mediaRemoteIdentifier
avkit_offOption
avkit_autoOption
localizedDisplayName
T@"NSString",R,N
T@"AVMediaSelectionOption",R
Td,N,V_currentTime
recording
TB,N,GisRecording,V_recording
T@"<AVWaveformViewDataSource>",W,N,V_dataSource
_isCompact
_samples
_timeOfLastSample
_recording
_dataSource
reset
setRecording:
drawRect:
_originForTime:
_offsetForTime:
_pointsPerSecond
_numberOfSamplesForWidth:
isRecording
dataSource
setDataSource:
bounds
setNeedsDisplay
numberWithFloat:
atMaxTime
TB,N,GisAtMaxTime,V_atMaxTime
atMinTime
TB,N,GisAtMinTime,V_atMinTime
playbackSuspended
TB,N,GisPlaybackSuspended,V_playbackSuspended
scrubbing
TB,N,GisScrubbing,V_scrubbing
T@"AVPlayer",&,N,V_player
T@"AVObservationController",R,N,V_observationController
T{CGSize=dd},N,V_presentationSize
T@"AVAsset",&,N,V_currentAssetIfReady
T@"NSObject<OS_dispatch_queue>",&,N,V_assetInspectionQueue
T@"AVAsset",&,N,V_assetBeingPrepared
pictureInPictureSupported
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
readyToPlay
TB,R,N,GisReadyToPlay
T@"AVValueTiming",&,N,V_timing
T@"AVValueTiming",&,N,V_minTiming
T@"AVValueTiming",&,N,V_maxTiming
T@"AVAssetTrack",&,N,V_currentAudioTrack
T@"AVAssetTrack",&,N,V_currentVideoTrack
seekingInternal
TB,GisSeekingInternal,V_seekingInternal
seeking
TB,N,GisSeeking,V_seeking
T{?=qiIq},V_seekToTimeInternal
Td,N,V_seekToTime
T@"NSArray",&,N,V_contentChapters
composable
TB,N,GisComposable,V_composable
TB,N,V_hasProtectedContent
T@"NSArray",&,N,V_availableMetadataFormats
compatibleWithAirPlayVideo
TB,N,GisCompatibleWithAirPlayVideo,V_compatibleWithAirPlayVideo
Td,N,V_rateBeforeScrubBegan
preventingIdleSystemSleep
TB,N,GisPreventingIdleSystemSleep,V_preventingIdleSystemSleep
preventingIdleDisplaySleep
TB,N,GisPreventingIdleDisplaySleep,V_preventingIdleDisplaySleep
disablingAutomaticTermination
TB,N,GisDisablingAutomaticTermination,V_disablingAutomaticTermination
TB,N,V_allowsPictureInPicturePlayback
pictureInPictureActive
TB,N,GisPictureInPictureActive,V_pictureInPictureActive
TB,N,V_canTogglePictureInPicture
T@"NSString",C,N,V_pipActivitySessionIdentifier
TB,N,V_hasBegunInspection
deviceBatteryChargingOrFull
TB,N,GisDeviceBatteryChargingOrFull,V_deviceBatteryChargingOrFull
TB,R,N
T@"NSObject<OS_dispatch_source>",R,N,V_seekTimer
T@"NSDate",R,N
TB,N
T@"NSArray",R,N,V_visualMediaSelectionOptions
T@"AVMediaSelectionOption",&,N,V_currentVideoMediaSelectionOption
TB,N,V_coordinatedPlaybackActive
Tq,R,N
T@"NSError",R,N
_audioMediaSelectionOptions
_visualMediaSelectionOptions
_legibleMediaSelectionOptions
_cachedSelectedAudioMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOption
_cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation
_lastKnownPersistedExtendedLanguageTag
_observationInfo
_inspectionSuspended
_updateAtMinMaxTimePeriodicObserverToken
_timecodePeriodicObserverToken
_pictureInPictureInterrupted
_handlesAudioSessionInterruptions
_isDeallocating
_hasSetUpSeekableLiveStreamState
_rateToRestoreAfterAudioSessionInterruptionEnds
_retryPlayingImmediatelyBlock
_shouldPlayImmediately
_looping
_actionAtItemEnd
_seekQueue
_seekTimer
_timeOfLastUpdate
_ignoreRateKeyValueChanges
_ignoreNextRateKeyValueChange
_pendingSeek
_isResumed
_toleranceBefore
_toleranceAfter
_isScanningForward
_isScanningBackward
_scanningCount
_preScanningRate
_liveStreamMinTiming
_liveStreamMaxTiming
_liveStreamEventModePossible
_canUseNetworkResourcesForLiveStreamingWhilePausedCount
_previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused
_shouldPlayWhenLikelyToKeepUp
_deviceBatteryStateDidChangeObserver
_deviceBatteryMonitoringWasEnabled
_playingOnSecondScreen
_reduceResourceUsageAssertion
_defaultPlaybackRate
_touchBarRequiresLinearPlayback
_internalDelegate
_atMaxTime
_atMinTime
_playbackSuspended
_scrubbing
_pictureInPictureSupported
_seekingInternal
_seeking
_composable
_hasProtectedContent
_compatibleWithAirPlayVideo
_preventingIdleSystemSleep
_preventingIdleDisplaySleep
_disablingAutomaticTermination
_allowsPictureInPicturePlayback
_pictureInPictureActive
_canTogglePictureInPicture
_hasBegunInspection
_deviceBatteryChargingOrFull
_coordinatedPlaybackActive
_player
_observationController
_currentAssetIfReady
_assetInspectionQueue
_assetBeingPrepared
_minTiming
_maxTiming
_currentAudioTrack
_currentVideoTrack
_seekToTime
_contentChapters
_availableMetadataFormats
_rateBeforeScrubBegan
_pipActivitySessionIdentifier
_currentVideoMediaSelectionOption
_presentationSize
_seekToTimeInternal
initWithPlayer:
startInspectionIfNeeded
startKVO
observationInfo
setObservationInfo:
_queuePlayer
status
isReadyToPlay
error
isCompletelySeekable
shouldPreventIdleDisplaySleep
_observeValueForKeyPath:oldValue:newValue:
defaultPlaybackRate
setDefaultPlaybackRate:
_retryPlayImmediatelyIfNeeded
canPlayImmediately
canPlay
play:
autoplay:
canPause
pause:
canTogglePlayback
togglePlaybackEvenWhenInBackground:
touchBarRequiresLinearPlayback
setTouchBarRequiresLinearPlayback:
isLooping
setLooping:
updateAtMinMaxTime
volume
setVolume:
increaseVolume:
decreaseVolume:
changeVolumeToMinimum:
changeVolumeToMaximum:
isMuted
setMuted:
toggleMuted:
coordinatedPlaybackActive
isInspectionSuspended
setInspectionSuspended:
hasContent
contentDuration
nominalFrameRate
contentDimensions
reversePlaybackEndTime
setReversePlaybackEndTime:
forwardPlaybackEndTime
setForwardPlaybackEndTime:
_setMinTiming:maxTiming:
contentDurationWithinEndTimes
currentDate
currentOrEstimatedDate
seekableTimeRanges
loadedTimeRanges
hasEnabledAudio
hasVideo
hasEnabledVideo
hasContentChapters
isStreaming
hasLiveStreamingContent
hasSeekableLiveStreamingContent
hasTrimmableContent
hasShareableContent
_assetIsRestrictedFromSaving:
audioWaveform
_assetIsMarkedNotSerializable:
_assetContainsProResRaw:
_updateCurrentAudioTrackIfNeeded
_updateCurrentVideoTrackIfNeeded
currentEnabledAssetTrackForMediaType:
timeControlStatus
canSeek
seekToTime:
beginScrubbing
endScrubbing
seekToTime:toleranceBefore:toleranceAfter:
seekToCMTime:toleranceBefore:toleranceAfter:
throttledSeekToTime:toleranceBefore:toleranceAfter:
actuallySeekToTime
seekByTimeInterval:
seekByTimeInterval:toleranceBefore:toleranceAfter:
canScanForward
scanForward:
_updateScanningForwardRate
canScanBackward
scanBackward:
_updateScanningBackwardRate
canSeekToBeginning
seekToBeginning:
canSeekToEnd
seekToEnd:
canSeekFrameForward
seekFrameForward:
canSeekFrameBackward
seekFrameBackward:
seekOrStepByFrameCount:
beginScrubbing:
endScrubbing:
seekToChapter:
canSeekChapterForward
canSeekChapterBackward
updateTiming
updateMinMaxTiming
_updateMinMaxTimingIfNeeded
allowsExternalPlayback
setAllowsExternalPlayback:
isPlayingOnExternalScreen
isPlayingOnSecondScreen
isExternalPlaybackActive
externalPlaybackType
externalPlaybackAirPlayDeviceLocalizedName
isPictureInPicturePossible
isPictureInPictureInterrupted
setPictureInPictureInterrupted:
togglePictureInPicture:
beginReducingResourcesForPictureInPicturePlayerLayer:
endReducingResourcesForPictureInPicturePlayerLayer:
isReducingResourcesForPictureInPicture
startUsingNetworkResourcesForLiveStreamingWhilePaused
stopUsingNetworkResourcesForLiveStreamingWhilePaused
canUseNetworkResourcesForLiveStreamingWhilePaused
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
_timecodeTrack
_cancelPendingSeeksIfNeeded
_updateRateForScrubbingAndSeeking
scanningDelays
_prepareAssetForInspectionIfNeeded
isAtMaxTime
setAtMaxTime:
isAtMinTime
setAtMinTime:
isPlaybackSuspended
setPlaybackSuspended:
isScrubbing
setScrubbing:
observationController
presentationSize
setPresentationSize:
currentAssetIfReady
setCurrentAssetIfReady:
assetInspectionQueue
setAssetInspectionQueue:
assetBeingPrepared
setAssetBeingPrepared:
isPictureInPictureSupported
setPictureInPictureSupported:
timing
setTiming:
minTiming
setMinTiming:
maxTiming
setMaxTiming:
currentAudioTrack
setCurrentAudioTrack:
currentVideoTrack
setCurrentVideoTrack:
isSeekingInternal
setSeekingInternal:
isSeeking
setSeeking:
seekToTimeInternal
setSeekToTimeInternal:
seekToTime
setSeekToTime:
contentChapters
setContentChapters:
isComposable
setComposable:
hasProtectedContent
setHasProtectedContent:
availableMetadataFormats
setAvailableMetadataFormats:
isCompatibleWithAirPlayVideo
setCompatibleWithAirPlayVideo:
rateBeforeScrubBegan
setRateBeforeScrubBegan:
isPreventingIdleSystemSleep
setPreventingIdleSystemSleep:
isPreventingIdleDisplaySleep
setPreventingIdleDisplaySleep:
isDisablingAutomaticTermination
setDisablingAutomaticTermination:
allowsPictureInPicturePlayback
setAllowsPictureInPicturePlayback:
isPictureInPictureActive
setPictureInPictureActive:
canTogglePictureInPicture
setCanTogglePictureInPicture:
pipActivitySessionIdentifier
setPipActivitySessionIdentifier:
hasBegunInspection
setHasBegunInspection:
isDeviceBatteryChargingOrFull
setDeviceBatteryChargingOrFull:
seekTimer
setCurrentVideoMediaSelectionOption:
setCoordinatedPlaybackActive:
loadValuesAsynchronouslyForKeys:completionHandler:
tracksWithMediaType:
asset
cancelPendingSeeks
associatedTracksOfType:
componentsJoinedByString:
deviceName
outputDevices
supportsMultipleOutputDevices
outputContext
liveUpdateInterval
seekableTimeRangesLastModifiedTime
timebase
postNotificationName:object:userInfo:
reverseObjectEnumerator
isEnabled
assetTrack
tracks
stepByCount:
canStepBackward
canStepForward
doubleValue
canPlayFastReverse
canPlayFastForward
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
track
formatDescriptions
getBytes:length:
dataValue
objectAtIndex:
numberWithUnsignedInt:
metadataItemsFromArray:withKey:keySpace:
metadataForFormat:
numberWithInt:
availableVideoDynamicRanges
currentEstimatedDate
timeRange
setActionAtItemEnd:
actionAtItemEnd
isPlaybackLikelyToKeepUp
items
isPlaybackBufferEmpty
playImmediatelyAtRate:
applicationState
sharedApplication
sortUsingComparator:
lastObject
arrayWithCapacity:
chapterMetadataGroupsBestMatchingPreferredLanguages:
arrayByAddingObject:
preferredLanguages
statusOfValueForKey:error:
dictionaryWithDictionary:
CGSizeValue
removeTimeObserver:
setBatteryMonitoringEnabled:
batteryState
isBatteryMonitoringEnabled
playerControllerCanRestorePlaybackRateAfterAudioSessionDeactivation:
internalDelegate
handlesAudioSessionInterruptions
addPeriodicTimeObserverForInterval:queue:usingBlock:
cachedIsPictureInPictureSupported
setCachedIsPictureInPictureSupported:
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingReadyToPlay
keyPathsForValuesAffectingError
keyPathsForValuesAffectingCompletelySeekable
keyPathsForValuesAffectingShouldPreventIdleDisplaySleep
keyPathsForValuesAffectingRate
keyPathsForValuesAffectingCanPlay
keyPathsForValuesAffectingPlaying
keyPathsForValuesAffectingCanPause
keyPathsForValuesAffectingCanTogglePlayback
keyPathsForValuesAffectingVolume
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingCoordinatedPlaybackActive
keyPathsForValuesAffectingHasContent
keyPathsForValuesAffectingContentDuration
keyPathsForValuesAffectingContentDimensions
keyPathsForValuesAffectingCurrentTime
keyPathsForValuesAffectingMinTime
keyPathsForValuesAffectingReversePlaybackEndTime
keyPathsForValuesAffectingMaxTime
keyPathsForValuesAffectingForwardPlaybackEndTime
keyPathsForValuesAffectingContentDurationWithinEndTimes
keyPathsForValuesAffectingSeekableTimeRanges
keyPathsForValuesAffectingLoadedTimeRanges
keyPathsForValuesAffectingHasEnabledAudio
keyPathsForValuesAffectingHasVideo
keyPathsForValuesAffectingHasEnabledVideo
keyPathsForValuesAffectingHasContentChapters
keyPathsForValuesAffectingStreaming
keyPathsForValuesAffectingHasLiveStreamingContent
keyPathsForValuesAffectingHasSeekableLiveStreamingContent
keyPathsForValuesAffectingHasTrimmableContent
keyPathsForValuesAffectingHasShareableContent
keyPathsForValuesAffectingTimeControlStatus
keyPathsForValuesAffectingCanSeek
keyPathsForValuesAffectingCanScanForward
keyPathsForValuesAffectingCanScanBackward
keyPathsForValuesAffectingCanSeekToBeginning
keyPathsForValuesAffectingCanSeekToEnd
keyPathsForValuesAffectingCanSeekFrameForward
keyPathsForValuesAffectingCanSeekFrameBackward
keyPathsForValuesAffectingCanSeekChapterForward
keyPathsForValuesAffectingCanSeekChapterBackward
keyPathsForValuesAffectingAllowsExternalPlayback
keyPathsForValuesAffectingPlayingOnExternalScreen
keyPathsForValuesAffectingExternalPlaybackActive
keyPathsForValuesAffectingExternalPlaybackType
keyPathsForValuesAffectingExternalPlaybackAirPlayDeviceLocalizedName
keyPathsForValuesAffectingPictureInPicturePossible
usesExternalPlaybackWhileExternalScreenIsActive
maximumVideoResolution
setPlayingOnSecondScreen:
setHandlesAudioSessionInterruptions:
keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive
keyPathsForValuesAffectingMaximumVideoResolution
playingOnSecondScreen
TB,N,GisPlayingOnSecondScreen
T{CGSize=dd},R,N
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@44@0:8d16@24@?32B40
@16@0:8
v16@0:8
d16@0:8
@"AVPlayerController"
@"AVPlayerControllerTimeResolver"
@"AVTimeFormatter"
@"AVPlayerViewController"
@"NSDictionary"
@32@0:8@16@24
v24@0:8@16
v20@0:8B16
v48@0:8@16@24@32^v40
v20@0:8f16
B16@0:8
q16@0:8
v24@0:8q16
@76@0:8@16q24q32@40q48d56d64f72
@80@0:8@16q24q32@40q48d56d64f72B76
v24@0:8d16
@"NSString"
@"UIResponder"
@"AVDoneButton"
@"AVLabel"
@"AVSlider"
@"UIButton"
@"AVPlayPauseButton"
@"UILabel"
@"NMUVolumeIndicatorControl"
@"UIImageView"
v32@0:8@"PUICSlider"16q24
v24@0:8@"PUICSlider"16
v32@0:8@16q24
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@48@0:8@16@24B32B36@?40
@44@0:8@16@24B32@?36
@40@0:8@16@24@?32
v48@0:8@16@24@32@?40
@48@0:8@16@24@32@40
@"NSSet"
@60@0:8@16@24@32B40B44B48@?52
v32@0:8@16@?24
v56@0:8@16@24@32@40^v48
@?16@0:8
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{?=qiIq}48@0:8q16{?=qiIq}24
B20@0:8f16
@"AVPlayerViewController"16@0:8
@"NSMapTable"
v24@0:8@?16
@24@0:8#16
v40@0:8:16@24@?32
v24@0:8@"<AVBehaviorContext>"16
v24@0:8@"<AVBehavior>"16
@24@0:8q16
{UIEdgeInsets=dddd}16@0:8
q24@0:8@16
^{CGImage=}
@24@0:8^{_NSZone=}16
@56@0:8d16d24Q32@40@?48
^{CGImage=}16@0:8
v24@0:8^{CGImage=}16
v32@0:8@16@24
@32@0:8d16@24
@40@0:8@16{CGSize=dd}24
@"AVNowPlayingInfoController"
@"AVRemoteCommandController"
@"AVUnsupportedContentIndicatorView"
@"__AVPlayerLayerView"
@"AVTouchIgnoringView"
@"AVWatchPlaybackControlsViewController"
@"NSTimer"
@"<AVPlayerViewControllerDelegate>"
{?="playerViewControllerShouldHandleDoneButtonTap"B}
@"AVBehaviorStorage"
v24@0:8@"NMUVolumeIndicatorControl"16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
{?=dd}16@0:8
@40@0:8d16d24d32
d24@0:8d16
@40@0:8{CGPoint=dd}16@32
{CGSize=dd}16@0:8
@"AVAudioRecorder"
@"AVAudioPlayer"
@"AVWaveformView"
@"NSURL"
@"<AVAudioRecorderViewControllerDelegate>"
f24@0:8@"AVWaveformView"16
f24@0:8@16
v28@0:8@"AVAudioRecorder"16B24
v32@0:8@"AVAudioRecorder"16@"NSError"24
v24@0:8@"AVAudioRecorder"16
v32@0:8@"AVAudioRecorder"16Q24
v28@0:8@16B24
v32@0:8@16Q24
v28@0:8@"AVAudioPlayer"16B24
v32@0:8@"AVAudioPlayer"16@"NSError"24
v24@0:8@"AVAudioPlayer"16
v32@0:8@"AVAudioPlayer"16Q24
@56@0:8@16@24B32d36@44B52
@48@0:8@16@24d32@40
@32@0:8@16d24
@24@0:8d16
@"CSLSBacklightAssertion"
@"AVTimer"
v36@0:8@16@24B32
q40@0:8@16@24@32
@"<AVTimeControlling>"
@"NSMutableArray"
@"<AVWaveformViewDataSource>"
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
q24@0:8d16
@"NSArray"
@"AVMediaSelectionOption"
@"NSNumber"
{?="value"q"timescale"i"flags"I"epoch"q}
@"AVValueTiming"
@"BSSimpleAssertion"
@"<AVPlayerControllerDelegate>"
@"AVPlayer"
@"AVObservationController"
@"AVAsset"
@"AVAssetTrack"
{CGSize="width"d"height"d}
^v16@0:8
v24@0:8^v16
v40@0:8@16@24@32
f16@0:8
{?=qiIq}16@0:8
v40@0:8{?=qiIq}16
v40@0:8d16d24d32
v88@0:8{?=qiIq}16{?=qiIq}40{?=qiIq}64
v32@0:8{CGSize=dd}16
