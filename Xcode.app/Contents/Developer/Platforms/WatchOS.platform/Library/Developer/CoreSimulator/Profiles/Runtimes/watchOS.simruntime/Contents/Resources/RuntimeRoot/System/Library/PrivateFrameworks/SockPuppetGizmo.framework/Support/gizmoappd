%@ %@
identifier
T@"NSString",&,N,V_identifier
playerItemIdentifiers
T@"NSMutableArray",&,N,V_playerItemIdentifiers
rate
Tf,N,V_rate
upsertWithItems
destroy
setRate
replaceCurrentItem
setStatus
advanceToNextItem
appendItem
removeItem
removeAllItems
setCurrentItem
hasUpsertWithItems
TB,R,N
T@"SPProtoAudioFileQueuePlayerSetItems",&,N,V_upsertWithItems
hasDestroy
T@"SPProtoObjectMessage",&,N,V_destroy
hasSetRate
T@"SPProtoAudioFileQueuePlayerSetRate",&,N,V_setRate
hasReplaceCurrentItem
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_replaceCurrentItem
hasSetStatus
T@"SPProtoAudioFilePlayerStatus",&,N,V_setStatus
hasAdvanceToNextItem
T@"SPProtoObjectMessage",&,N,V_advanceToNextItem
hasAppendItem
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_appendItem
hasRemoveItem
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_removeItem
hasRemoveAllItems
T@"SPProtoObjectMessage",&,N,V_removeAllItems
hasSetCurrentItem
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_setCurrentItem
containedIdentifier
hasContainedIdentifier
T@"NSString",&,N,V_containedIdentifier
status
errorDomain
errorCode
errorDict
hasIdentifier
hasStatus
TB,N
Ti,N,V_status
hasErrorDomain
T@"NSString",&,N,V_errorDomain
hasErrorCode
Tq,N,V_errorCode
hasErrorDict
T@"NSData",&,N,V_errorDict
upsertWithAsset
getCurrentTime
notifyTimeJumped
notifyDidPlayToEndTime
notifyFailedToPlayToEndTime
setItemCurrentTime
hasUpsertWithAsset
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_upsertWithAsset
hasGetCurrentTime
T@"SPProtoObjectMessage",&,N,V_getCurrentTime
hasNotifyTimeJumped
T@"SPProtoObjectMessage",&,N,V_notifyTimeJumped
hasNotifyDidPlayToEndTime
T@"SPProtoObjectMessage",&,N,V_notifyDidPlayToEndTime
hasNotifyFailedToPlayToEndTime
T@"SPProtoObjectMessage",&,N,V_notifyFailedToPlayToEndTime
hasSetItemCurrentTime
T@"SPProtoAudioFilePlayerItemSetCurrentTime",&,N,V_setItemCurrentTime
duration
title
albumTitle
artist
sandboxExtensionToken
hasURL
T@"NSString",&,N,V_uRL
hasDuration
Td,N,V_duration
hasTitle
T@"NSString",&,N,V_title
hasAlbumTitle
T@"NSString",&,N,V_albumTitle
hasArtist
T@"NSString",&,N,V_artist
hasSandboxExtensionToken
T@"NSString",&,N,V_sandboxExtensionToken
upsertWithMetaData
hasUpsertWithMetaData
T@"SPProtoAudioFilePlayerAssetUpdateMetaData",&,N,V_upsertWithMetaData
currentTime
hasCurrentTime
Td,N,V_currentTime
asset
playerItem
queuePlayer
hasAsset
T@"SPProtoAudioFilePlayerAsset",&,N,V_asset
hasPlayerItem
T@"SPProtoAudioFilePlayerItem",&,N,V_playerItem
hasQueuePlayer
T@"SPProtoAudioFileQueuePlayer",&,N,V_queuePlayer
com.apple.watchkit.extension.extensionsQueue
v8@?0
com.apple.watchkit.handlesbgtcache
%{public}s:%d: failed to create directory at %{public}@, error: %{public}@
+[SPExtension handlesBackgroundTasksCacheDirectory]_block_invoke
com.apple.internal.WKUnitTestsApp
%{public}s:%d: Failed to find extension %{public}@ with app %{public}@
+[SPExtension extensionWithAppIdentifier:create:]_block_invoke
%{public}s:%d: Initializing for %{public}@ / %{public}@
-[SPExtension initWithAppProxy:extensionProxy:]
%@.y
%@.n
com.apple.watchkit.extension.
com.apple.watchkit.extension.activeClientIdentifiersQueue
%{public}s:%d: Releasing os_transaction %{public}s
-[SPExtension dealloc]
%{public}s:%d: handlesBackgroundTasks for %{public}@ changed, caching...
-[SPExtension observeValueForKeyPath:ofObject:change:context:]
%{public}s:%d: setting _hasActiveAppConnection = YES with pid %d for %{public}@
-[SPExtension setHasActiveAppConnectionWithPid:]_block_invoke
%{public}s:%d: setting _hasActiveAppConnection = NO for %{public}@
-[SPExtension _on_extensionQueue_setDoesNotHaveActiveAppConnection]
%{public}s:%d: moving from a presently valid connection for %{public}@? this shouldn't happen
-[SPExtension setClientConnection:]_block_invoke
%{public}s:%d: connection between gizmoappd and %{public}@ invalidated
-[SPExtension setClientConnection:]_block_invoke_2
%{public}s:%d: INTERRUPTED %{public}@
%{public}s:%d: serverIdentifier: %{public}@ clientIdentifier: %{public}@, _activeNotificationClientIdentifiers:%{public}@
-[SPExtension addActiveNotificationClientIdentifier:]_block_invoke
-[SPExtension removeActiveNotificationClientIdentifier:]_block_invoke
-[SPExtension _updateNotificationActiveUITransaction]
notifUIActive-%@-%@
%{public}s:%d: creating os_transaction %{public}@
%{public}s:%d: serverIdentifier: %{public}@
-[SPExtension removeAllActiveClientIdientifiers]
hasActiveAppConnection
TB,N,V_hasActiveAppConnection
appProxy
T@"LSApplicationProxy",&,N,V_appProxy
clientConnection
T@"NSXPCConnection",&,N,V_clientConnection
lastKnownPID
Ti,N,V_lastKnownPID
extensionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_extensionQueue
notificationUIActiveTransaction
T@"NSObject<OS_os_transaction>",&,N,V_notificationUIActiveTransaction
serverIdentifier
T@"NSString",R,V_serverIdentifier
extensionIdentifier
T@"NSString",R,V_extensionIdentifier
pluginURL
T@"NSURL",R,V_pluginURL
applicationDebugging
TB,V_applicationDebugging
backgroundUpdating
TB,V_backgroundUpdating
applicationRunningInBackground
TB,V_applicationRunningInBackground
creatingNotificationUI
TB,V_creatingNotificationUI
handlesBackgroundTasks
Ti,V_handlesBackgroundTasks
activeNotificationClientIdentifiers
T@"NSMutableSet",R,V_activeNotificationClientIdentifiers
hasBGWorkoutProcessingInfoPlistEntry
TB,R,V_hasBGWorkoutProcessingInfoPlistEntry
launchEnv
T@"NSDictionary",&,V_launchEnv
launchArgs
T@"NSArray",&,V_launchArgs
notificationUIActive
TB,R,D
applicationUIIsActive
TB,V_applicationUIIsActive
alive
plist
audioFilePlayerMessage
hasPlist
T@"SPProtoSockPuppetPlist",&,N,V_plist
hasAudioFilePlayerMessage
T@"SPProtoAudioFilePlayerMessage",&,N,V_audioFilePlayerMessage
com.apple.watchkit.native.send
%{public}s:%d: appRemoteLaunchWithIdentifier:%{public}@
-[SPGizmoPlugInManager appRemoteLaunchWithIdentifier:launchEnv:launchArgs:]
%{public}s:%d: appRemoteTerminateWithIdentifier:%{public}@
-[SPGizmoPlugInManager appRemoteTerminateWithIdentifier:]
%{public}s:%d: removeLocalConnectionWithIdentifier:%{public}@, client:%{public}@
-[SPGizmoPlugInManager removeLocalConnectionWithIdentifier:clientIdentifier:]
%{public}s:%d: updateLocalConnectionsWithConnection:%{public}@, client:%{public}@, extensionDidBeginUsingResults:%{public}@
-[SPGizmoPlugInManager updateLocalConnectionsWithConnection:withIdentifier:clientIdentifier:extensionDidBeginUsingResults:]
%{public}s:%d: Got nil extension for %{public}@
%{public}s:%d: Got nil extension for %@
%{public}s:%d: extensionDidBeginUsingWithLaunchEnv:%{public}@, handlesBackgroundTasks: %i
%{public}s:%d: fetchExtensionCapabilitiesForAppBundleID:%{public}@, handlesBackgroundTasks:%d
-[SPGizmoPlugInManager fetchExtensionCapabilitiesForAppBundleID:handlesBackgroundTasks:]
%{public}s:%d: plugin for app %{public}@ has no PID yet
-[SPGizmoPlugInManager appStateInfosForAppBundleIDs:]
%{public}s:%d: serverIdentifier=%{public}@
-[SPGizmoPlugInManager appWillEnterForeground:]
-[SPGizmoPlugInManager appDidEnterBackground:]
%{public}s:%d: did begin Bar task: %{public}@ client:%{public}@, barTaskUUID=%{public}@
-[SPGizmoPlugInManager appDidBeginBackgroundBARTask:barTaskUUID:clientIdentifier:]
%{public}s:%d: Unable to find a native plugin for identifier %{public}@, barTaskUUID=%{public}@
%{public}s:%d: did end Bar task: %{public}@ client:%{public}@, barTaskUUID=%{public}@
-[SPGizmoPlugInManager appDidEndBackgroundBARTask:barTaskUUID:clientIdentifier:]
%{public}s:%d: serverIdentifier=%{public}@, clientIdentifier=%{public}@
-[SPGizmoPlugInManager notificationUIDidBecomeActive:clientIdentifier:]
-[SPGizmoPlugInManager notificationUIWillResignActive:clientIdentifier:]
%{public}s:%d: appIdentifier=%{public}@, handlesBGTasks=%d
-[SPGizmoPlugInManager extensionDelegate:handlesBGTasksDidChange:]
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
sendQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sendQueue
object
objects
T@"NSMutableArray",&,N,V_objects
com.apple.watchkit.errors
SPErrorNoErrorMessage
SPErrorUnknownMessage
SPErrorBadGizmoAppURLMessage
SPErrorAppURLMessage
SPErrorApplicationIconNotFoundMessage
SPErrorInvalidBundleNoGizmoBinaryMessage
SPErrorMissingCompanionAppIdentifierMessage
SPErrorApplicationVerificationMessage
SPErrorHostPrincipalForPluginNotFoundMessage
SPErrorFailedToTerminateGizmoAppMessage
SPErrorPlistToDataErrorMessage
SPErrorGizmoInstallNeverFinishedErrorMessage
SPErrorGizmoLaunchCanceledErrorMessage
SPErrorDeviceIsLockedMessage
SPErrorBuildAndRunLaunchFailedCantFindApplicationMessage
SPErrorInstallationErrorMessage
SPErrorBuildAndRunLaunchFailedGlancesNotSupportedMessage
SPErrorAudioPlaybackErrorMessage
SPErrorAudioPLaybackConnectionLostMessage
SPErrorBuildAndRunNotificationFailedNoPermissionMessage
IDS no space error
PKPlugin beginUsing: never called back
No first unlock yet.
Profile removal  error.
Profile install  error.
WatchKit app not found.
%{public}s:%d: Exiting from server object %{public}@
main
%{public}s:%d: launching app with identifier %{public}@, launchMode %{public}@, launchEnv %{public}@, launchArgs %{public}@
-[SPGizmoAppLauncher launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:notificationPayload:notificationForceStatic:completion:]
%{public}s:%d: got error %{public}@ launching %{public}@
-[SPGizmoAppLauncher launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:notificationPayload:notificationForceStatic:completion:]_block_invoke
v20@?0B8@"NSError"12
%{public}s:%d: Glances are no longer supported
Launching for Xcode
%{public}s:%d: took dockAllowLaunchAssertion %{public}@ for bundle %{public}@
%{public}s:%d: dropping dockAllowLaunchAssertion %{public}@
-[SPGizmoAppLauncher launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:notificationPayload:notificationForceStatic:completion:]_block_invoke_2
v12@?0B8
-[SPGizmoAppLauncher _launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:notificationPayload:notificationForceStatic:completion:]
CLKRemoteComplicationReloadDarwinNotification
%{public}s:%d: Got nil bundleProxy.cacheGUID for %{public}@
%{public}s:%d: launching app %{public}@ with openApplicationOptions %{public}@
v16@?0@"NSError"8
%{public}s:%d: Successfully sent notification for %{public}@
-[SPGizmoAppLauncher _simulateNotificationForBundleID:payload:forceStatic:completion:]_block_invoke_2
%{public}s:%d: Got error attempting to send notification for %{public}@: %{public}@
%{public}s:%d: authorization refused. error=%{public}@
-[SPGizmoAppLauncher _simulateNotificationForBundleID:payload:forceStatic:completion:]_block_invoke
%{public}s:%d: identifier=%{public}@, processIsRunning=%d
-[SPGizmoAppLauncher terminateAppWithIdentifier:completion:]
TERM-%@-%@
%{public}s:%d: Acquired termination assertion for app with bundleID %{public}@, assertionName=%{public}@, processWasRunning=%d
-[SPGizmoAppLauncher terminateAppWithIdentifier:completion:]_block_invoke
%{public}s:%d: Failed to acquire termination assertion for app with bundleID %{public}@, assertionName=%{public}@, processWasRunning=%d, error=%{public}@
mostRecentLaunchedAppIdentifier
T@"NSString",C,N,V_mostRecentLaunchedAppIdentifier
mostRecentLaunchedAppMode
T@"NSString",C,N,V_mostRecentLaunchedAppMode
UNUserNotificationCenter
Unable to find class %s
/System/Library/Frameworks/UserNotifications.framework/UserNotifications
UNNotificationRequest
SIMULATOR_ROOT
Localizable
%{public}s:%d: Failed to localize key "%{public}@" in bundle at %{public}@. bundleExists=%d
spUtils_localizedStringForSystemLanguage
 [%013.06f]
CFBundleIdentifier
v24@?0@"LSBundleProxy"8^B16
B32@?0@"LSPlugInKitProxy"8Q16^B24
%{public}s:%d: Posting %{public}@
spUtils_postDarwinNotificationOfActiveUIStateChange
SPFontAttributes
SPFont
supportsSecureCoding
TB,R
font
T@"UIFont",&,N,V_font
strings
com.apple.demo-settings
StoreDemoMode
FProgramNumber
%{public}s:%d: Demo mode enabled = %d, Demo program number = %d
DemoProgramNumber_block_invoke
/System/Library/Frameworks/UIKit.framework/UIKit
LSApplicationWorkspace
/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
LSApplicationProxy
UIFont
UIFontDescriptor
%{public}s:%d: failed to serialize spList
+[SPIDSProtobuf protobufWithSPPlist:identifier:]
SP-transport
com.apple.watchkit.powerlog.queue
count
length
eventsByBundleID
T@"NSMutableDictionary",&,V_eventsByBundleID
logUpdateTimer
T@"NSObject<OS_dispatch_source>",&,N,V_logUpdateTimer
logQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_logQueue
%{public}s:%d: obj is of class %{public}@ which is not an allowed class
+[SPProtoSerializer spPlistWithArray:]
+[SPProtoSerializer spPlistWithDictionary:]
%{public}s:%d: SPProtoSerializerTypeString, text field is empty
+[SPProtoSerializer dictionaryWithSPPlist:]
%{public}s:%d: SPProtoSerializerTypeData, object field is empty
%{public}s:%d: SPProtoSerializerTypeObject, object field is empty
+[SPProtoSerializer arrayWithSPPlist:]
appServer
T@"SPGizmoAppServer",R,N,V_appServer
connection
T@"NSXPCConnection",R,N,V_connection
uuid
T@"NSUUID",R,N,V_uuid
com.apple.private.alloy.sockpuppet
com.apple.private.alloy.sockpuppet.classd
com.apple.gizmoappd
com.apple.gizmoappd.dtsupport
com.apple.gizmoappd.alertprovider
com.apple.sockpuppet.activeComplications
com.apple.sockpuppet.complications.updated
com.apple.sockpuppet.extensionActiveUIStateDidChange
com.apple.sockpuppet.runningWatchKitAppsDidChange
lgbl
activeComplications
com.apple.watchkit
WKWatchKitVersion
/System/Library/Frameworks/WatchKit.framework
appStateOwnedBySystem
workout
btSupport
WK_APP_LAUNCH_MODE
COMPLICATION
NOTIFICATION
WK_NOTIF_CONTEXT
WK_NOTIF_FORCE_STATIC
type
objectData
receiver
Ti,N,V_type
T@"NSData",&,N,V_objectData
hasReceiver
T@"NSString",&,N,V_receiver
contextData
context
TQ,R,N
T@"NSDictionary",R,N
.PolL
.idx
.sgd
.egd
.bgd
action
WK_APP_LAUNCHED_BY_XCODE
default
WKBackgroundModes
workout-processing
3cbtk
NativeComplications
ExtDidBeginUsing
subtype
text
ndouble
nfloat
nint64
nint32
nuint64
nuint32
nbool
hasSubtype
Ti,N,V_subtype
hasCacheMessage
TB,R,N,V_hasCacheMessage
cacheMessage
T@"SPProtoCacheMessage",&,N,V_cacheMessage
hasKey
T@"NSString",&,N,V_key
hasText
T@"NSString",&,N,V_text
hasNdouble
Td,N,V_ndouble
hasNfloat
Tf,N,V_nfloat
hasNint64
Tq,N,V_nint64
hasNint32
Ti,N,V_nint32
hasNuint64
TQ,N,V_nuint64
hasNuint32
TI,N,V_nuint32
hasNbool
TB,N,V_nbool
hasObject
T@"NSData",&,N,V_object
com.apple.companionappd.transportMessagesAccess
com.apple.watchkit.transportSend
com.apple.companionappd.retainedIDSMessageContexts
%{public}s:%d: we will try to use wifi
-[SPTransport enableWiFiIfNeededForDataOfSize:]
%{public}s:%d: don't need wifi anymore
-[SPTransport disableWiFiIfNeededForDataOfSize:]
error
%{public}s:%d: Currently blocking outgoing messages on %{public}@
-[SPTransport _sendPlist:timeOut:securityType:retryExpiration:tryGeneration:withCompletion:]
com.apple.watchkit.blockedOutgoingMessage
%{public}s:%d: canSend == NO
%{public}s:%d: propertyList == nil
%{public}s:%d: dataWithPropertyListe error: (%{public}@)
%{public}s:%d: IDS outgoingData == nil
sendPlist1
application
%{public}s:%d: sendPlist, Error - could not send data on service (%{public}@) for %{public}@ (%{public}@)
%{public}s:%d: sent message with identifier %{public}@ for %{public}@ on %{public}@ service
secure
insecure
%{public}s:%d: Blocking further sends until %{public}@ succeeds or fails
completion
propertyList
timeOut
securityType
retryExpiration
lastSendAttemptDate
tryGeneration
-[SPTransport _sendData:forApplication:idsPriority:installer:withCompletion:]
sendData
com.apple.companionappd.installer
%{public}s:%d: Error - could not send data on service (%{public}@) for %{public}@ (%{public}@)
%{public}s:%d: Got success sending message with identifier %{public}@ on %{public}@ service
-[SPTransport service:account:identifier:didSendWithSuccess:error:]_block_invoke
%{public}s:%d: Got failure sending message with identifier (%{public}@) on service (%{public}@). sends currently %{public}@ blocked until send of this message.%{public}@ error: %{public}@
ARE NOT
 Unblocking now.
%{public}s:%d: identifier (%{public}@), serviceName (%{public}@), success: %d error, domain: %{public}@, code: %ld
%{public}s:%d: Error - cannot find completion block for (%{public}@) serviceName: (%{public}@)
%{public}s:%d: Error - cannot find message for (%{public}@) serviceName: (%{public}@)
%{public}s:%d: 
-[SPTransport serviceSpaceDidBecomeAvailable:]
%{public}s:%d: received data msg with identifier %{public}@ on %{public}@ service
-[SPTransport service:account:incomingData:fromID:context:]
%{public}s:%d: IDS incomingData == nil,  account: %{public}@, serviceName: %{public}@, fromID: %{public}@, context: %{public}@
-[SPTransport _sendProtobuf:sender:timeOut:securityType:retryExpiration:tryGeneration:withCompletion:]
%{public}s:%d: isXcodeCommand, setting IDSSendMessageOptionBypassDuetKey=YES
sendPlist2
%{public}s:%d: # # # # %{public}@ size=%d
sender
protobuf
%{public}s:%d: First unlock was %1.0f seconds ago (less than %1.0f seconds), so saving for possible resend upon failure
-[SPTransport saveForPossibleResend:]
%{public}s:%d: received protobuf msg with identifier %{public}@ on secure service
-[SPTransport incomingSecureProtobuf:]
%{public}s:%d: received protobuf msg with identifier %{public}@ on insecure service
-[SPTransport incomingInsecureProtobuf:]
-[SPTransport incomingProtobuf:]
%{public}s:%d: %lu retained IDSMessageContexts
-[SPTransport temporarilyRetainIDSMessageContext:]_block_invoke_2
%{public}s:%d: Got data protection class send failure, but we've done first unlock. Giving up after %1.0f seconds
-[SPTransport handleDataProtectionSendFailureOrRetryFailureOnService:account:identifier:error:]
%{public}s:%d: Got error re-trying to send the message we're blocked on, but we've done first unlock. Giving up after %1.0f seconds. %{public}@
%{public}s:%d: Got data protection class send failure, but we've done first unlock. Will try again in %1.0f seconds
%{public}s:%d: Got error re-trying to send the message we're blocked on, but we've done first unlock. Will try again in %1.0f seconds. %{public}@
%{public}s:%d: we were blocked on %{public}@ and it %{public}@. unblocking
-[SPTransport removeOutgoingMessageBlockIfIdentiferMatches:sendError:]
succeeded
failed with error %@
%{public}s:%d: flushing _blockedOutgoingMessagesQueue
secureRemoteService
T@"IDSService",&,V_secureRemoteService
insecureRemoteService
T@"IDSService",&,V_insecureRemoteService
delegate
T@"<SPTransportDelegate>",&,V_delegate
messages
T@"NSMutableDictionary",&,V_messages
messagesAccessQueue
T@"NSObject<OS_dispatch_queue>",&,V_messagesAccessQueue
canSend
TB,V_canSend
wifiThresholdCount
Tq,V_wifiThresholdCount
wifiEnabled
TB,V_wifiEnabled
wifiTimer
T@"NSObject<OS_dispatch_source>",&,N,V_wifiTimer
retainedIDSMessageContextsQueue
T@"NSObject<OS_dispatch_queue>",&,V_retainedIDSMessageContextsQueue
retainedIDSMessageContexts
T@"NSMutableArray",&,N,V_retainedIDSMessageContexts
outgoingMessageBlockedUntil
T@"NSString",&,V_outgoingMessageBlockedUntil
blockedOutgoingMessagesQueue
T@"NSObject<OS_dispatch_queue>",&,V_blockedOutgoingMessagesQueue
T@"NSObject<OS_dispatch_queue>",&,V_sendQueue
IDSSimulatorSupportSetSimulatedDeviceNetworkingState
/System/Library/PrivateFrameworks/IDSSimulatorSupport.framework/IDSSimulatorSupport
com.apple.gizmoappd.dtsupport.allow
com.apple.gizmoappd.alertprovider.allow
block
expirationDate
%{public}s:%d: ******* SPGizmoAppServer, init started
-[SPGizmoAppServer init]
com.apple.gizmoappd.appmanager
com.apple.gizmoappd.xcodesupportconnections
com.apple.gizmoappd.alertproviderconnection
com.apple.gizmoappd.queue
com.apple.gizmoappd.lastAppResetDatesAccess
com.apple.watchkit.timingTestQueue
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.distnoted.matching
com.apple.LaunchServices.applicationRegistered
%{public}s:%d: apps were installed: %{public}@
-[SPGizmoAppServer init]_block_invoke_2
com.apple.LaunchServices.applicationUnregistered
%{public}s:%d: apps were uninstalled: %{public}@
NCSSettingsChangedNotification
com.apple.language.changed
v12@?0i8
com.apple.gizmoappd.appServerProxies
%{public}s:%d: Running in F5 demo mode
%{public}s:%d: Running in F201 demo mode
%{public}s:%d: SPGizmoAppServer - init done
%{public}s:%d: ======== Gizmo Daemon gizmoappd
-[SPGizmoAppServer _setupSignalHandlers]_block_invoke
%{public}s:%d: -------- Installed Applications
%{public}s:%d: %{public}@
%{public}s:%d: -------- XPC Connected Applications
%{public}s:%d: --------
%{public}s:%d: *** Could not set up signal handler for %d.
-[SPGizmoAppServer _setupSignal:handler:]
B32@?0@"NSDictionary"8Q16^B24
%{public}s:%d: Got connection request on applicationListener from %{public}@ with pid %d before setup is done. Refusing
-[SPGizmoAppServer listener:shouldAcceptNewConnection:]
%{public}s:%d: connection interrupted/invalidated early
-[SPGizmoAppServer listener:shouldAcceptNewConnection:]_block_invoke
com.apple.gizmoappd.appmanager.allow
%{public}s:%d: Got error %{public}@ while checking entitlement for process %{public}@ with pid %d
%{public}s:%d: process %{public}@ with pid %d is not entitled. Rejecting connection
%{public}s:%d: Accepting connection on applicationManagerListener from %{public}@ with PID %d
%{public}s:%d: applicationManagerListener connection interrupted
-[SPGizmoAppServer listener:shouldAcceptNewConnection:]_block_invoke_3
%{public}s:%d: applicationManagerListener connection invalidated
-[SPGizmoAppServer listener:shouldAcceptNewConnection:]_block_invoke_4
%{public}s:%d: Got error %{public}@ while checking entitlement for process %{public}@ with pid %d for service %{public}@
%{public}s:%d: process %{public}@ with pid %d is not entitled for service %{public}@. Rejecting connection
%{public}s:%d: Accepting connection on xcodeSupportListener from %{public}@ with PID %d for service %{public}@
%{public}s:%d: xcodeSupportListener connection interrupted
-[SPGizmoAppServer listener:shouldAcceptNewConnection:]_block_invoke_7
%{public}s:%d: xcodeSupportListener connection invalidated
-[SPGizmoAppServer listener:shouldAcceptNewConnection:]_block_invoke_2
%{public}s:%d: Accepting connection on alertProviderListener from %{public}@ with PID %d for service %{public}@
%{public}s:%d: Replacing current alertProviderConnection %{public}@ with new connection %{public}@
%{public}s:%d: alertProviderListener connection interrupted
-[SPGizmoAppServer listener:shouldAcceptNewConnection:]_block_invoke_5
%{public}s:%d: alertProviderListener connection invalidated
%{public}s:%d: Got connection on applicationListener from %{public}@ with PID %d for %{public}@ with clientIdentifier %{public}@, extensionDidBeginUsingResults %{public}@
-[SPGizmoAppServer receiveServerIdentifier:clientIdentifier:extensionDidBeginUsingResults:connection:appServerProxyUUID:]
%{public}s:%d: connection interrupted - %{public}@
-[SPGizmoAppServer receiveServerIdentifier:clientIdentifier:extensionDidBeginUsingResults:connection:appServerProxyUUID:]_block_invoke
%{public}s:%d: connection invalidated - %{public}@
%@:%@
%{public}s:%d: registering connection - %{public}@
-[SPGizmoAppServer updateLocalConnectionsWithConnection:withIdentifier:clientIdentifier:extensionDidBeginUsingResults:]_block_invoke
%{public}s:%d: started BKSApplicationStateMonitor for native WK app %{public}@
%{public}s:%d: app with bundle ID %{public}@ was terminated.
-[SPGizmoAppServer updateLocalConnectionsWithConnection:withIdentifier:clientIdentifier:extensionDidBeginUsingResults:]_block_invoke_3
%{public}s:%d: Got appStateMonitor update for %{public}@ with state %x: %{public}@
-[SPGizmoAppServer updateLocalConnectionsWithConnection:withIdentifier:clientIdentifier:extensionDidBeginUsingResults:]_block_invoke_2
v16@?0@"NSDictionary"8
%{public}s:%d: delayed block for %{public}@
%{public}s:%d: GizD:->IDS propertyList=%{private}@
-[SPGizmoAppServer sendPlist:securityType:]
%{public}s:%d: sendPlist, spPlistWithDictionary failed
%{public}s:%d: Got WatchKit error %{public}@
-[SPGizmoAppServer sendSPPlist:receiver:securityType:]_block_invoke
%{public}s:%d: got error %{public}@ for receiver %{public}@
%{public}s:%d: Got IDSErrorTypeIncompatibleDestinationVersion error %{public}@. Killing %{public}@
Got IDSErrorTypeIncompatibleDestinationVersion error %@. Killing %@
%{public}s:%d: Got continous send errors for more than %1.0f secs. Killing %{public}@
Got continous send errors for more than %1.0f secs. Killing %@
%{public}s:%d: sendSPPlist failed %{public}@
%{public}s:%d: We shouldn't be passed a NULL block here
-[SPGizmoAppServer performBlockForClientIdentifiers:serverIdentifier:block:]
%{public}s:%d: no local connection for %{public}@. will hold data for %1.0f secs to try for delivery when connection comes up
-[SPGizmoAppServer performBlockForClientIdentifiers:serverIdentifier:block:]_block_invoke
%{public}s:%d: GizD:->GizF application=%{public}@ clientIdentifiers=%{public}@ data=%{private}@
-[SPGizmoAppServer sendData:orPlist:serverIdentifier:clientIdentifiers:reply:]_block_invoke
%{public}s:%d: plist variant doesn't support a reply
-[SPGizmoAppServer sendData:orPlist:serverIdentifier:clientIdentifiers:reply:]_block_invoke_2
v24@?0@"NSXPCConnection"8@"NSString"16
%{public}s:%d: GizD:<-GizF serverIdentifier=%{public}@ clientIdentifier=%{public}@ didLaunchSuspended=%d
-[SPGizmoAppServer appDidFinishLaunching:clientIdentifier:didLaunchSuspended:]
B24@?0@"NSString"8^B16
%{public}s:%d: _observedSessionAppBundleIDs=%@, runningAppBundleIDs=%@, bundleIDsToAddObserving=%@, bundleIDsToRemoveObserving=%@, runningSessionIncapableBundleIDsToRemove=%@, _runningSessionIncapableAppBundleIDs=%@
-[SPGizmoAppServer _updateObservedExtendedRuntimeSessions]_block_invoke_2
%{public}s:%d: Got error attempting to observe sessions for %{public}@: %{public}@
-[SPGizmoAppServer _updateObservedExtendedRuntimeSessions]_block_invoke_4
%{public}s:%d: Started observing sessions for %{public}@
%{public}s:%d: Got error attempting to stop observing sessions for %{public}@: %{public}@
%{public}s:%d: Stopped observing sessions for %{public}@
%{public}s:%d: %{public}@ became active, so removing from _runningScheduledSessionsNeedHaptic
-[SPGizmoAppServer appDidBecomeActive:]_block_invoke
%{public}s:%d: GizD:<-GizF serverIdentifier=%{public}@ clientIdentifier=%{public}@, barTaskUUID=%{public}@
-[SPGizmoAppServer appDidBeginBackgroundBARTask:barTaskUUID:clientIdentifier:]
-[SPGizmoAppServer appDidEndBackgroundBARTask:barTaskUUID:clientIdentifier:]
%{public}s:%d: GizD:<-GizF serverIdentifier=%{public}@ clientIdentifier=%{public}@
-[SPGizmoAppServer notificationUIDidBecomeActive:clientIdentifier:]
-[SPGizmoAppServer notificationUIWillResignActive:clientIdentifier:]
-[SPGizmoAppServer didActivateDataConnection:clientIdentifier:]
-[SPGizmoAppServer willDeactivateDataConnection:clientIdentifier:]
dummy
v16@?0q8
%{public}s:%d: ERROR: failed to add passes with status (%{public}d)
-[SPGizmoAppServer addPassesData:serverIdentifier:clientIdentifier:]_block_invoke
%{public}s:%d: appIdentifier=%{public}@
-[SPGizmoAppServer hapticPlayedDuringScheduledExtendedRuntimeSession:]
%{public}s:%d: Already have one request in flight. rejecting request for %{public}@
-[SPGizmoAppServer showSystemAlertForBARDisabled:reply:]_block_invoke
SPUserNotificationWKExtendedRuntimeSessionBARDisabledAlertMessage
/System/Library/PrivateFrameworks/SockPuppetGizmo.framework
ENABLE_BACKGROUND
Cancel
%{public}s:%d: ERROR: SPProtoSerializer spPlistWithDictionary failed
-[SPGizmoAppServer sockPuppetDataFromDictionary:]
%{public}s:%d: ERROR: SPProtoSockPuppetMessage data failed
%{public}s:%d: Error - could not initialize protoPlist
-[SPGizmoAppServer handleIncomingProtoPlist:]
%{public}s:%d: Error - could not deserialize protoPlist
incomingData
%{public}s:%d: Error - could not deserialize data (%{public}@)
-[SPGizmoAppServer incomingData:]
%{public}s:%d: IDS > GizD plist=%{private}@
-[SPGizmoAppServer handleIncomingPlist:]
SPUserNotificationAddressBook
SPUserNotificationCalendar
SPUserNotificationLocation
SPUserNotificationPhotos
SPUserNotificationReminders
SPUserNotificationMicrophone
SPUserNotificationNotification
%{public}s:%d: Companion app extension died - killing gizmo app %{public}@
-[SPGizmoAppServer notifyClientsExtensionTerminated:]
%{public}s:%d: received notification of extension %{public}@ terminated less than 1.0 secs ago. ignoring
-[SPGizmoAppServer notifyClientsExtensionTerminated:]_block_invoke
Extension terminated - killing gizmo apps
-AppleLanguages
-AppleTextDirection
-AppleLocale
-NSForceRightToLeftWritingDirection
-NSDoubleLocalizedStrings
%{public}s:%d: Successfully launched app with identifier %{public}@
-[SPGizmoAppServer launchApplication:withTransactionID:backlightTime:launchMode:launchEnv:launchArgs:]_block_invoke_3
%{public}s:%d: Failed to launch app with identifier %{public}@. Got error %{public}@
%{public}s:%d: Successfully terminated app with identifier %{public}@
-[SPGizmoAppServer terminateApplication:withTransactionID:]_block_invoke
%{public}s:%d: Failed to terminate app with identifier %{public}@
%{public}s:%d: app with identifier %{public}@ isRunning status = %d
-[SPGizmoAppServer getApplicationRunningStatus:withTransactionID:]_block_invoke
%{public}s:%d: requestFirstUnlockStatus
-[SPGizmoAppServer requestFirstUnlockStatus]
%{public}s:%d: calling completion for appBundleID %{public}@ with handlesBackgroundTasks=%ld
-[SPGizmoAppServer fetchExtensionCapabilitiesForAppBundleID:completion:]
%{public}s:%d: sending context to app %{public}@
-[SPGizmoAppServer sendContextData:toAppWithIdentifier:completion:]
%{public}s:%d: received response from %{public}@ : %{public}@ from action %{public}@
-[SPGizmoAppServer sendContextData:toAppWithIdentifier:completion:]_block_invoke
v16@?0@"BSActionResponse"8
%{public}s:%d: Successfully sent contextData to %{public}@
%{public}s:%d: Failed to send contextData to %{public}@: %{public}@
appBundleIDs
interestedStateTypes
%{public}s:%d: darwinNotification=%{public}@, appBundleIDs=%{public}@, interestedStateTypes=%lu
-[SPGizmoAppServer registerWKAppUIStateObserver:forBundleIDs:interestedStateTypes:]
%{public}s:%d: Got null callback for observer %{public}@
-[SPGizmoAppServer fetchWKAppUIStateInfoForObserver:callback:]
%{public}s:%d: Got nil appBundleID
-[SPGizmoAppServer addBundleID:forWKAppUIStateObserver:]
%{public}s:%d: Added %{public}@ for %{public}@ wkActiveUIStateObservers()=%{public}@
-[SPGizmoAppServer addBundleID:forWKAppUIStateObserver:]_block_invoke
-[SPGizmoAppServer removeBundleID:forWKAppUIStateObserver:]
%{public}s:%d: Removed %{public}@ for %{public}@ wkActiveUIStateObservers()=%{public}@
-[SPGizmoAppServer removeBundleID:forWKAppUIStateObserver:]_block_invoke
%{public}s:%d: %{public}@ changed. Posting notifs %{public}@
-[SPGizmoAppServer uiActiveStateDidChange:uiActivateStateType:]
keys:
 data, len: %lu, %@
 %@: %@,
 %@ : ***
%{public}s:%d: unknown proto data
-[SPGizmoAppServer decodeOutData:]
can't decode data
 %@,
%{public}s:%d: unlocked=%d
-[SPGizmoAppServer _notifyFirstUnlockStatus:]
-[SPGizmoAppServer _notifyComplicationFirstUnlockChanged:]_block_invoke
%{public}s:%d: Error: Missing NSXPCConnection for key %{public}@
UserInfo
%{public}s:%d: Didn't get any user info from applicationRegistered
-[SPGizmoAppServer applicationIDsFromLaunchServicesXPCEvent:isPlaceHolder:]
%{public}s:%d: User info was not a dictionary for applicationRegistered
%{public}s:%d: Failed to convert user info XPC dictionary to CF dictionary for applicationRegistered
bundleIDs
isPlaceholder
%{public}s:%d: Got a value for SPXcodeSupportAppLaunchBacklightAssertionTimeKey that isn't an NSNumber. Ignoring it. Value has class %{public}@ and value %{public}@
-[SPGizmoAppServer launchAppWithIdentifier:options:completion:]
-[SPGizmoAppServer launchAppWithIdentifier:options:completion:]_block_invoke
-[SPGizmoAppServer terminateAppWithIdentifier:completion:]_block_invoke
-[SPGizmoAppServer getSockPuppetAppRunningStatusForWatchAppWithIdentifier:completion:]_block_invoke
%{public}s:%d: %{public}@ never played a haptic during a scheduled session. showing system alert
-[SPGizmoAppServer _alertForFailureToAlarmDuringScheduledSession:]
SPUserNotificationAlarmAppFailedToAlert
DISABLE_BACKGROUND
%{public}s:%d: Enabling BAR for %{public}@
-[SPGizmoAppServer _setBARForApp:enabled:completion:]
%{public}s:%d: Disabling BAR for %{public}@
%{public}s:%d: Got alertprovider connection from %{public}@
-[SPGizmoAppServer connect:]
%{public}s:%d: received kHKHealthDaemonActiveWorkoutServersDidUpdateNotification
-[SPGizmoAppServer activeWorkoutStatusDidChange]
%{public}s:%d: appIdentifier is %{public}@, _currentWKWorkoutAppBundleID is %{public}@
-[SPGizmoAppServer activeWorkoutStatusDidChange]_block_invoke_2
v24@?0@"NSString"8@"NSError"16
%{public}s:%d: appBundleID=%{public}@, scheduled=%d
-[SPGizmoAppServer sessionDidStartRunningForAppBundleID:scheduled:]
-[SPGizmoAppServer sessionDidStopRunningForAppBundleID:scheduled:]
applicationListener
T@"NSXPCListener",&,V_applicationListener
applicationManagerListener
T@"NSXPCListener",&,V_applicationManagerListener
xcodeSupportListener
T@"NSXPCListener",&,V_xcodeSupportListener
alertProviderListener
T@"NSXPCListener",&,V_alertProviderListener
localConnections
T@"NSMutableDictionary",&,V_localConnections
pendingDatasForDroppedConnections
T@"NSMutableDictionary",&,N,V_pendingDatasForDroppedConnections
gizmoApplicationsUpdateTimer
T@"NSObject<OS_dispatch_source>",&,N,V_gizmoApplicationsUpdateTimer
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
currentActiveApp
T@"NSString",C,V_currentActiveApp
dateOfFirstContinuousSendError
T@"NSDate",&,N,V_dateOfFirstContinuousSendError
lastAppResetDates
T@"NSMutableDictionary",&,N,V_lastAppResetDates
lastAppResetDatesAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_lastAppResetDatesAccessQueue
lastExtensionTerminatedDates
T@"NSMutableDictionary",&,N,V_lastExtensionTerminatedDates
gizmoAppStillActivePingTimers
T@"NSMutableDictionary",&,N,V_gizmoAppStillActivePingTimers
appStateMonitors
T@"NSMutableDictionary",&,N,V_appStateMonitors
unlockedSinceBoot
TB,N,V_unlockedSinceBoot
companionCapabilities
T@"NSDictionary",&,V_companionCapabilities
companionCapabilitiesSema
T@"NSObject<OS_dispatch_semaphore>",&,V_companionCapabilitiesSema
currentWKWorkoutAppBundleID
T@"NSString",C,N,V_currentWKWorkoutAppBundleID
appServerProxies
T@"NSMutableDictionary",&,N,V_appServerProxies
appServerProxiesQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_appServerProxiesQueue
xcodeSupportConnections
T@"NSMutableDictionary",&,N,V_xcodeSupportConnections
xcodeSupportConnectionsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_xcodeSupportConnectionsQueue
alertProviderConnection
T@"NSXPCConnection",&,N,V_alertProviderConnection
alertProviderConnectionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_alertProviderConnectionQueue
observedSessionAppBundleIDs
T@"NSMutableSet",&,N,V_observedSessionAppBundleIDs
runningSessionIncapableAppBundleIDs
T@"NSMutableSet",&,N,V_runningSessionIncapableAppBundleIDs
addingObservedSessionAppBundleIDs
T@"NSMutableSet",&,N,V_addingObservedSessionAppBundleIDs
removingObservedSessionAppBundleIDs
T@"NSMutableSet",&,N,V_removingObservedSessionAppBundleIDs
runningScheduledSessionsNeedHaptic
T@"NSMutableSet",&,N,V_runningScheduledSessionsNeedHaptic
timingTest_IDSSendTime
Td,N,V_timingTest_IDSSendTime
timingTest_IDSSendSize
TQ,N,V_timingTest_IDSSendSize
timingTest_IDSReceiveTime
Td,N,V_timingTest_IDSReceiveTime
timingTest_lastServerIdentifier
T@"NSString",&,N,V_timingTest_lastServerIdentifier
timingTest_lastClientIdentifier
T@"NSArray",&,N,V_timingTest_lastClientIdentifier
timingTest_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_timingTest_queue
%{public}s:%d: requested SPComplicationVendorsDidChangeNotification due to the set of installed applications changing
_handleApplicationsChangedNotification
SPComplicationVendorsDidChangeNotification
%{public}s:%d: Posting immediate SPComplicationVendorsDidChangeNotification
_postComplicationVendorsDidChangeNotification
%{public}s:%d: Posting delayed SPComplicationVendorsDidChangeNotification
_postComplicationVendorsDidChangeNotification_block_invoke_2
%{public}s:%d: requested SPComplicationVendorsDidChangeNotification due to settings change
_handleComplicationSettingsChangeNotification
%{public}s:%d: requested SPComplicationVendorsDidChangeNotification due to language change
_handleLangueChangedNotification
BSBundleIDForXPCConnection
/System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
_CFUserNotifBARDisabledResponseHandler
%{public}s:%d: Got nil __barDisabledAlertReplyBlock. this shouldn't happen
_CFUserNotifBARDisabledResponseHandler_block_invoke
com.apple.watchkit.wkActiveUIStateObservers
_CFUserNotifResponseHandler
SPApplicationsDomain
com.apple.watchkit.applicationManagerConnectionsQueue
%{public}s:%d: Found application state in %{public}@ even though we are no longer in charge of it.
+[SPGizmoAppManager removeAllStateFromDefaultsIfNeeded]
%{public}s:%d: Clearing out the installation state as it is now being tracked by the System.
PlugIns
self ENDSWITH '.appex'
Info.plist
%{public}s:%d: Semaphore timed out! Please file a radar.
-[SPGizmoAppManager setActiveComplications:]
%{public}s:%d: %{public}@ syncing domain %{public}@ with bundleIDs%{public}@
-[SPGizmoAppManager activeComplicationsWithCompletion:]
%{public}s:%d: %{public}@ fetching domain %{public}@ returned bundleIDs %{public}@
applicationManagerConnections
T@"NSMutableDictionary",&,V_applicationManagerConnections
applicationManagerConnectionsQueue
T@"NSObject<OS_dispatch_queue>",&,V_applicationManagerConnectionsQueue
updateSema
T@"NSObject<OS_dispatch_semaphore>",&,V_updateSema
extension_loading
bg_app_refresh
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
setIdentifier:
class
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
readFrom:
writeTo:
copyTo:
mergeFrom:
.cxx_destruct
identifier
_identifier
removeAllObjects
addObject:
count
objectAtIndex:
addPlayerItemIdentifiers:
countByEnumeratingWithState:objects:count:
playerItemIdentifiersCount
clearPlayerItemIdentifiers
playerItemIdentifiersAtIndex:
playerItemIdentifiersType
playerItemIdentifiers
setPlayerItemIdentifiers:
_playerItemIdentifiers
numberWithFloat:
rate
setRate:
_rate
setUpsertWithItems:
setDestroy:
setSetRate:
setReplaceCurrentItem:
setSetStatus:
setAdvanceToNextItem:
setAppendItem:
setRemoveItem:
setRemoveAllItems:
setSetCurrentItem:
hasUpsertWithItems
hasDestroy
hasSetRate
hasReplaceCurrentItem
hasSetStatus
hasAdvanceToNextItem
hasAppendItem
hasRemoveItem
hasRemoveAllItems
hasSetCurrentItem
upsertWithItems
destroy
setRate
replaceCurrentItem
setStatus
advanceToNextItem
appendItem
removeItem
removeAllItems
setCurrentItem
_advanceToNextItem
_appendItem
_destroy
_removeAllItems
_removeItem
_replaceCurrentItem
_setCurrentItem
_setRate
_setStatus
_upsertWithItems
setContainedIdentifier:
hasContainedIdentifier
containedIdentifier
_containedIdentifier
numberWithInt:
numberWithLongLong:
setErrorDomain:
setErrorDict:
hasIdentifier
setStatus:
setHasStatus:
hasStatus
hasErrorDomain
setErrorCode:
setHasErrorCode:
hasErrorCode
hasErrorDict
status
errorDomain
errorCode
errorDict
_errorCode
_errorDict
_errorDomain
_status
_has
setUpsertWithAsset:
setGetCurrentTime:
setNotifyTimeJumped:
setNotifyDidPlayToEndTime:
setNotifyFailedToPlayToEndTime:
setSetItemCurrentTime:
hasUpsertWithAsset
hasGetCurrentTime
hasNotifyTimeJumped
hasNotifyDidPlayToEndTime
hasNotifyFailedToPlayToEndTime
hasSetItemCurrentTime
upsertWithAsset
getCurrentTime
notifyTimeJumped
notifyDidPlayToEndTime
notifyFailedToPlayToEndTime
setItemCurrentTime
_getCurrentTime
_notifyDidPlayToEndTime
_notifyFailedToPlayToEndTime
_notifyTimeJumped
_setItemCurrentTime
_upsertWithAsset
numberWithDouble:
setURL:
setTitle:
setAlbumTitle:
setArtist:
setSandboxExtensionToken:
hasURL
setDuration:
setHasDuration:
hasDuration
hasTitle
hasAlbumTitle
hasArtist
hasSandboxExtensionToken
duration
title
albumTitle
artist
sandboxExtensionToken
_duration
_albumTitle
_artist
_sandboxExtensionToken
_title
_uRL
setUpsertWithMetaData:
hasUpsertWithMetaData
upsertWithMetaData
_upsertWithMetaData
setCurrentTime:
setHasCurrentTime:
hasCurrentTime
currentTime
_currentTime
setAsset:
setPlayerItem:
setQueuePlayer:
hasAsset
hasPlayerItem
hasQueuePlayer
asset
playerItem
queuePlayer
_asset
_playerItem
_queuePlayer
self
arrayWithObjects:count:
pathWithComponents:
defaultManager
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
objectForKeyedSubscript:
applicationProxyForIdentifier:
isEqualToString:
bundleIdentifier
initWithAppProxy:extensionProxy:
setObject:forKeyedSubscript:
handlesBackgroundTasksCacheDirectory
stringByAppendingPathComponent:
handlesBackgroundTasks
addObserver:forKeyPath:options:context:
bundleURL
bundleWithURL:
infoDictionary
isKindOfClass:
containsObject:
stringByAppendingString:
UTF8String
invalidate
removeObserver:forKeyPath:
dealloc
intValue
createFileAtPath:contents:attributes:
removeItemAtPath:error:
observeValueForKeyPath:ofObject:change:context:
setLastKnownPID:
_on_extensionQueue_setDoesNotHaveActiveAppConnection
processIdentifier
invalidationHandler
setClientConnection:
interruptionHandler
extensionIdentifier
setInterruptionHandler:
setInvalidationHandler:
_updateNotificationActiveUITransaction
removeObject:
UUID
initialize
extensionWithAppIdentifier:create:
setHasActiveAppConnectionWithPid:
setDoesNotHaveActiveAppConnection
hasActiveAppConnection
lastKnownPID
addActiveNotificationClientIdentifier:
removeActiveNotificationClientIdentifier:
removeAllActiveClientIdientifiers
notificationUIActive
serverIdentifier
pluginURL
applicationDebugging
setApplicationDebugging:
backgroundUpdating
setBackgroundUpdating:
applicationRunningInBackground
setApplicationRunningInBackground:
creatingNotificationUI
setCreatingNotificationUI:
setHandlesBackgroundTasks:
activeNotificationClientIdentifiers
hasBGWorkoutProcessingInfoPlistEntry
launchEnv
setLaunchEnv:
launchArgs
setLaunchArgs:
applicationUIIsActive
setApplicationUIIsActive:
setHasActiveAppConnection:
appProxy
setAppProxy:
clientConnection
extensionQueue
setExtensionQueue:
notificationUIActiveTransaction
setNotificationUIActiveTransaction:
_applicationDebugging
_backgroundUpdating
_applicationRunningInBackground
_creatingNotificationUI
_hasBGWorkoutProcessingInfoPlistEntry
_applicationUIIsActive
_hasActiveAppConnection
_lastKnownPID
_handlesBackgroundTasks
_serverIdentifier
_extensionIdentifier
_pluginURL
_activeNotificationClientIdentifiers
_launchEnv
_launchArgs
_appProxy
_clientConnection
_extensionQueue
_notificationUIActiveTransaction
setPlist:
setAudioFilePlayerMessage:
hasPlist
hasAudioFilePlayerMessage
plist
audioFilePlayerMessage
_audioFilePlayerMessage
_plist
sharedAppServer
setExtensionWithServerIdentifier:isDebugging:
uiActiveStateDidChange:uiActivateStateType:
remoteObjectProxy
setExtensionIsDebugging:
boolValue
dictionaryWithCapacity:
numberWithBool:
dictionaryWithObjects:forKeys:count:
numberWithUnsignedInteger:
extensionWithIdentifier:gotUnknownInterfaceController:
sharedPlugInManager
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
appDidFinishLaunching:clientIdentifier:didLaunchSuspended:
appWillEnterForeground:
appDidEnterBackground:
appDidBecomeActive:
appDidBeginBackgroundBARTask:barTaskUUID:clientIdentifier:
appDidEndBackgroundBARTask:barTaskUUID:clientIdentifier:
notificationUIDidBecomeActive:clientIdentifier:
notificationUIWillResignActive:clientIdentifier:
didActivateDataConnection:clientIdentifier:
willDeactivateDataConnection:clientIdentifier:
resetTimingInfo
retreiveTimingInfo:
addPassesData:serverIdentifier:clientIdentifier:
extensionDidBeginNotificationUICreation:
extensionDidEndNotificationUICreation:
extensionDelegate:handlesBGTasksDidChange:
hapticPlayedDuringScheduledExtendedRuntimeSession:
showSystemAlertForBARDisabled:reply:
receiveServerIdentifier:clientIdentifier:extensionDidBeginUsingResults:
appRemoteLaunchWithIdentifier:launchEnv:launchArgs:
appRemoteTerminateWithIdentifier:
removeLocalConnectionWithIdentifier:clientIdentifier:
updateLocalConnectionsWithConnection:withIdentifier:clientIdentifier:extensionDidBeginUsingResults:
app:activeWorkoutStatusDidChange:
isAppRunning:
fetchExtensionUIActiveStateForBundleID:uiIsActive:uiActiveInBackground:doingNotificationControllerCreation:
fetchExtensionCapabilitiesForAppBundleID:handlesBackgroundTasks:
appStateInfosForAppBundleIDs:
activeUIStateInfosForAppBundleIDs:interestedStateTypes:
sendDataToCompanion:serverIdentifier:clientIdentifier:
sendQueue
setSendQueue:
_sendQueue
receiveData:fromIdentifier:
applicationDidTerminate:
applicationDidFinishConnecting:
applicationDidBecomeActive:
applicationWillResignActive:
applicationHandleWatchTaskKeys:reasonForSnapshot:visibleVCID:barTaskUUID:clientIdentifier:
receivePlist:fromIdentifier:
applicationWillEnterForeground:withVisibleViewControllerID:
applicationDidEnterBackground:withVisibleViewControllerID:
applicationUpdateState:suspendedUnderLock:clientIdentifier:
applicationBeginWorkout:clientIdentifier:
applicationDidReceiveNotification:clientIdentifier:withCompletionHandler:
preferredContentSizeCategory:
layoutDirection:
receiveNativeComplicationRequest:completion:
replyTimingData:
receiveContextData:withCompletionHandler:
extensionHasForegroundGPU
extensionDoesNotHaveForegroundGPU:
dataInterfaceDidBecomeActive:
dataInterfaceWillResignActive:
extensionDidBeginUsingWithLaunchEnv:launchArgs:completion:
initWithCapacity:
objectsCount
clearObjects
objectType
objects
setObjects:
_objects
errorWithDomain:code:userInfo:
errorWithCode:
userInfo
mutableCopy
domain
code
errorWithCode:additionalDescription:
isValidationErrorCode:
setup
currentRunLoop
_launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:notificationPayload:notificationForceStatic:completion:
initWithBundleID:reason:
take
terminateAppWithIdentifier:completion:
sharedTileNavigationService
navigateToClockAnimated:completion:
_simulateNotificationForBundleID:payload:forceStatic:completion:
addEntriesFromDictionary:
bundleProxyForIdentifier:
sequenceNumber
cacheGUID
UUIDString
sharedService
openApplication:options:withResult:
alloc
initWithBundleIdentifier:
requestWithIdentifier:pushPayload:bundleIdentifier:
addNotificationRequest:withCompletionHandler:
requestAuthorizationWithOptions:completionHandler:
initWithBundleIdentifier:efficacy:name:withHandler:
sharedInstance
launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:notificationPayload:notificationForceStatic:completion:
getRunningStatusForAppWithIdentifier:completion:
mostRecentLaunchedAppIdentifier
setMostRecentLaunchedAppIdentifier:
mostRecentLaunchedAppMode
setMostRecentLaunchedAppMode:
_mostRecentLaunchedAppIdentifier
_mostRecentLaunchedAppMode
initWithBundleIDs:states:
applicationStateForApplication:
processInfo
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClasses:fromData:error:
setWithObjects:
stringWithUTF8String:
bundleWithPath:
preferredLanguages
firstObject
sharedApplication
userInterfaceLayoutDirection
URLQueryAllowedCharacterSet
formUnionWithCharacterSet:
removeCharactersInString:
hasSuffix:
methodForSelector:
instanceMethodForSelector:
length
cStringUsingEncoding:
colorWithWhite:alpha:
colorWithRed:green:blue:alpha:
defaultWorkspace
watchKitVersion
enumerateBundlesOfType:block:
isWatchKitApp
plugInKitPlugins
protocol
indexOfObjectPassingTest:
setFont:
fontDescriptor
fontAttributes
encodeObject:forKey:
font
decodeObjectForKey:
fontDescriptorWithFontAttributes:
fontWithDescriptor:size:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
unarchiver:cannotDecodeObjectOfClassName:originalClasses:
unarchiver:didDecodeObject:
unarchiver:willReplaceObject:withObject:
unarchiverWillFinish:
unarchiverDidFinish:
initWithFont:
_font
localizations
arrayWithObject:
pathForResource:ofType:inDirectory:forLocalization:
dictionaryWithContentsOfFile:
objectForKey:
localizedStringForKey:value:table:
rangeOfString:
substringFromIndex:
floatValue
substringToIndex:
hasPrefix:
colorWithAlphaComponent:
data
setObjectData:
setReceiver:
setType:
initWithProtobufData:type:isResponse:
protobufWithSPPlist:identifier:
unsignedIntegerValue
numberWithUnsignedLong:
cancelLogUpdateTimer
startLogUpdateTimer
logEvent:withName:
newEventFromEvent:usingLogEvent:
updatePowerLogs
eventsByBundleID
setEventsByBundleID:
logUpdateTimer
setLogUpdateTimer:
logQueue
setLogQueue:
_eventsByBundleID
_logUpdateTimer
_logQueue
setKey:
objCType
setSubtype:
setNbool:
integerValue
setNint64:
setNuint64:
charValue
setNint32:
shortValue
longValue
setNfloat:
doubleValue
setNdouble:
longLongValue
subtype
nbool
nint64
nuint64
numberWithUnsignedLongLong:
nint32
numberWithChar:
numberWithShort:
nfloat
ndouble
setText:
setObject:
spPlistWithDictionary:
spPlistWithArray:
protoSPObjectWithString:forKey:
protoSPObjectWithNumber:forKey:
protoSPObjectWithData:forKey:
protoSPObjectWithDictionary:forKey:
protoSPObjectWithArray:forKey:
protoSPObjectWithObject:forKey:
type
text
numberWithSPProtoSockPuppetObject:
object
initWithData:
arrayWithSPPlist:
dictionaryWithSPPlist:
array
receiveServerIdentifier:clientIdentifier:extensionDidBeginUsingResults:connection:appServerProxyUUID:
initWithAppServer:connection:
connection
uuid
appServer
_connection
_uuid
_appServer
hasReceiver
objectData
receiver
_objectData
_receiver
_type
setObject:forSetting:
initWithInfo:timeout:forResponseOnQueue:withHandler:
info
objectForSetting:
unsignedLongValue
initWithType:context:timeout:forResponseOnQueue:withHandler:
context
PUICActionType
keyDescriptionForSetting:
numberWithUnsignedInt:
setHasSubtype:
hasSubtype
hasKey
hasText
setHasNdouble:
hasNdouble
setHasNfloat:
hasNfloat
setHasNint64:
hasNint64
setHasNint32:
hasNint32
setHasNuint64:
hasNuint64
setNuint32:
setHasNuint32:
hasNuint32
setHasNbool:
hasNbool
hasObject
nuint32
hasCacheMessage
cacheMessage
setCacheMessage:
_ndouble
_nint64
_nuint64
_cacheMessage
_key
_nfloat
_nint32
_nuint32
_object
_subtype
_text
_nbool
_hasCacheMessage
initWithService:
setSecureRemoteService:
setInsecureRemoteService:
secureRemoteService
incomingSecureProtobuf:
setProtobufAction:forIncomingRequestsOfType:
insecureRemoteService
incomingInsecureProtobuf:
addDelegate:queue:
setPreferInfraWiFi:
killWiFiTimer
startWiFiTimer
wifiTimeOut
_sendPlist:timeOut:securityType:retryExpiration:tryGeneration:withCompletion:
null
outgoingMessageBlockedUntil
dataWithPropertyList:format:options:error:
setWithObject:
delegate
logDataSent:application:
serviceForTransport:
accounts
anyObject
sendData:fromAccount:toDestinations:priority:options:identifier:error:
serviceName
saveForPossibleResend:
setOutgoingMessageBlockedUntil:
dateWithTimeIntervalSinceNow:
copy
numberWithInteger:
date
messages
_sendData:forApplication:idsPriority:installer:withCompletion:
removeOutgoingMessageBlockIfIdentiferMatches:sendError:
handleDataProtectionSendFailureOrRetryFailureOnService:account:identifier:error:
removeObjectForKey:
outgoingResponseIdentifier
didReceiveSecureData
incomingData:
temporarilyRetainIDSMessageContext:
_sendProtobuf:sender:timeOut:securityType:retryExpiration:tryGeneration:withCompletion:
uncompressedData
sendProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
dateOfFirstUnlock
timeIntervalSinceNow
incomingProtobuf:
compare:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
setTransportDelegate:
enableWiFiIfNeededForDataOfSize:
disableWiFiIfNeededForDataOfSize:
isWiFiEnabled
isWiFiRequiredForSize:
keepWiFiAliveIfNeeded
sendPlist:timeOut:securityType:withCompletion:
sendData:forApplication:idsPriority:installer:withCompletion:
sendProtobuf:sender:timeOut:securityType:withCompletion:
setDelegate:
setMessages:
messagesAccessQueue
setMessagesAccessQueue:
canSend
setCanSend:
wifiThresholdCount
setWifiThresholdCount:
wifiEnabled
setWifiEnabled:
wifiTimer
setWifiTimer:
retainedIDSMessageContextsQueue
setRetainedIDSMessageContextsQueue:
retainedIDSMessageContexts
setRetainedIDSMessageContexts:
blockedOutgoingMessagesQueue
setBlockedOutgoingMessagesQueue:
_canSend
_wifiEnabled
_secureRemoteService
_insecureRemoteService
_delegate
_messages
_messagesAccessQueue
_wifiThresholdCount
_wifiTimer
_retainedIDSMessageContextsQueue
_retainedIDSMessageContexts
_outgoingMessageBlockedUntil
_blockedOutgoingMessagesQueue
removeAllStateFromDefaultsIfNeeded
_setupSignalHandlers
initWithMachServiceName:
setApplicationListener:
applicationListener
setApplicationManagerListener:
applicationManagerListener
setXcodeSupportListener:
xcodeSupportListener
setAlertProviderListener:
alertProviderListener
setXcodeSupportConnectionsQueue:
setAlertProviderConnectionQueue:
setLocalConnections:
applicationIDsFromLaunchServicesXPCEvent:isPlaceHolder:
activeWorkoutStatusDidChange
_notifyFirstUnlockStatus:
requestFirstUnlockStatus
_notifyRunningWKAppsDidChange
resume
localConnections
_setupSignal:handler:
_saveSendTimeAndSize:
timeIntervalSinceReferenceDate
timingTest_IDSSendTime
setTimingTest_IDSSendTime:
setTimingTest_IDSSendSize:
timingTest_IDSReceiveTime
setTimingTest_IDSReceiveTime:
setTimingTest_lastServerIdentifier:
setTimingTest_lastClientIdentifier:
pendingDatasForDroppedConnections
allKeys
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
removeObjectsForKeys:
_xpcConnection
extensionDidTerminate
extensionGotUnknownControllerID:
receiveData:reply:
receiveData:
receivePlistFromExtension:
receiveSetViewController:key:property:value:
receiveSetViewController:values:
receivePushPagingScrollTableRow:row:seguesByRowName:rowNamesAndContextIDs:
fetchConnectionIdentifierWithMetricsTimestamp:extensionLaunchedForRemoteExtensionConnection:reply:
appBeginBackgroundUIUpdate
interfaceWithProtocol:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
auditToken
setActiveComplications:
activeComplicationsWithCompletion:
fetchExtensionUIActiveStateForBundleID:completion:
fetchWatchKitApplicationStateInfo:
fetchExtensionCapabilitiesForAppBundleID:completion:
sendContextData:toAppWithIdentifier:completion:
registerWKAppUIStateObserver:forBundleIDs:interestedStateTypes:
fetchWKAppUIStateInfoForObserver:callback:
addBundleID:forWKAppUIStateObserver:
removeBundleID:forWKAppUIStateObserver:
addXPCConnection:withIdentifier:
removeXPCConnection:
xcodeSupportConnectionsQueue
xcodeSupportConnections
setXcodeSupportConnections:
launchAppWithIdentifier:options:completion:
getSockPuppetAppRunningStatusForWatchAppWithIdentifier:completion:
alertProviderConnectionQueue
alarmAppDidPlayHaptic:
setBARForApp:enabled:completion:
connect:
alertProviderConnection
setAlertProviderConnection:
_localConnectionIdentifierForServerIdentifier:clientIdentifier:
currentActiveApp
cancelGizmoAppStillActivePingTimer:
setCurrentActiveApp:
componentsSeparatedByString:
lastObject
appStateMonitors
setHandler:
logDictionary:
sendSPPlist:receiver:securityType:
clearLastResetDateForApp:
clearDateOfFirstContinuousSendError
terminateApplication:forReason:andReport:withDescription:
appWithIdentifierIsKnownWatchKitApp:
lastAppResetDates
sendData:orPlist:serverIdentifier:clientIdentifiers:reply:
_serverIdentifierForLocalConnectionIdentifier:
_clientIdentifierForLocalConnectionIdentifier:
addPendingDataForDroppedConnection:typeKey:localConnectionIdentifier:
logStringArray:
decodeOutData:
performBlockForClientIdentifiers:serverIdentifier:block:
_updateObservedExtendedRuntimeSessions
setWithArray:
objectsPassingTest:
minusSet:
addSessionServiceObserver:bundleID:completion:
removeSessionServiceObserver:bundleID:completion:
sendPlist:securityType:
timingTest_IDSSendSize
sockPuppetDataFromDictionary:
timingTest_lastServerIdentifier
timingTest_lastClientIdentifier
sendData:serverIdentifier:clientIdentifiers:
addPassesWithData:withCompletionHandler:
localizedName
handleIncomingProtoPlist:
appBundleIDFromPlist:
handleIncomingPlist:
propertyListWithData:options:format:error:
companionCapabilities
unlockedSinceBoot
setUnlockedSinceBoot:
notifyClientsExtensionTerminated:
launchApplication:withTransactionID:backlightTime:launchMode:launchEnv:launchArgs:
terminateApplication:withTransactionID:
getApplicationRunningStatus:withTransactionID:
setCompanionCapabilities:
_saveReceiveTimeWithServerIdentifier:clientIdentifier:
objectAtIndexedSubscript:
stringWithString:
appendFormat:
componentsJoinedByString:
_activeWorkoutApplicationIdentifierWithCompletion:
_alertForFailureToAlarmDuringScheduledSession:
listener:shouldAcceptNewConnection:
sessionDidStartRunningForAppBundleID:scheduled:
sessionDidStopRunningForAppBundleID:scheduled:
cancelGizmoApplicationsUpdateTimer
setLastResetDateForApp:
shouldResetAppOnError:
_notifyComplicationFirstUnlockChanged:
_setBARForApp:enabled:completion:
setPendingDatasForDroppedConnections:
gizmoApplicationsUpdateTimer
setGizmoApplicationsUpdateTimer:
queue
setQueue:
dateOfFirstContinuousSendError
setDateOfFirstContinuousSendError:
setLastAppResetDates:
lastAppResetDatesAccessQueue
setLastAppResetDatesAccessQueue:
lastExtensionTerminatedDates
setLastExtensionTerminatedDates:
gizmoAppStillActivePingTimers
setGizmoAppStillActivePingTimers:
setAppStateMonitors:
companionCapabilitiesSema
setCompanionCapabilitiesSema:
currentWKWorkoutAppBundleID
setCurrentWKWorkoutAppBundleID:
appServerProxies
setAppServerProxies:
appServerProxiesQueue
setAppServerProxiesQueue:
observedSessionAppBundleIDs
setObservedSessionAppBundleIDs:
runningSessionIncapableAppBundleIDs
setRunningSessionIncapableAppBundleIDs:
addingObservedSessionAppBundleIDs
setAddingObservedSessionAppBundleIDs:
removingObservedSessionAppBundleIDs
setRemovingObservedSessionAppBundleIDs:
runningScheduledSessionsNeedHaptic
setRunningScheduledSessionsNeedHaptic:
timingTest_queue
setTimingTest_queue:
_unlockedSinceBoot
_applicationListener
_applicationManagerListener
_xcodeSupportListener
_alertProviderListener
_localConnections
_pendingDatasForDroppedConnections
_gizmoApplicationsUpdateTimer
_queue
_currentActiveApp
_dateOfFirstContinuousSendError
_lastAppResetDates
_lastAppResetDatesAccessQueue
_lastExtensionTerminatedDates
_gizmoAppStillActivePingTimers
_appStateMonitors
_companionCapabilities
_companionCapabilitiesSema
_currentWKWorkoutAppBundleID
_appServerProxies
_appServerProxiesQueue
_xcodeSupportConnections
_xcodeSupportConnectionsQueue
_alertProviderConnection
_alertProviderConnectionQueue
_observedSessionAppBundleIDs
_runningSessionIncapableAppBundleIDs
_addingObservedSessionAppBundleIDs
_removingObservedSessionAppBundleIDs
_runningScheduledSessionsNeedHaptic
_timingTest_IDSSendTime
_timingTest_IDSSendSize
_timingTest_IDSReceiveTime
_timingTest_lastServerIdentifier
_timingTest_lastClientIdentifier
_timingTest_queue
standardUserDefaults
persistentDomainForName:
setPersistentDomain:forName:
synchronize
path
fileExistsAtPath:isDirectory:
contentsOfDirectoryAtPath:error:
predicateWithFormat:
filteredArrayUsingPredicate:
pathComponents
applicationProxyForIdentifier:placeholder:
initWithDomain:
synchronizeUserDefaultsDomain:keys:
arrayForKey:
applicationManagerConnections
extensionInfoPListInGizmoApplication:
needsToUpdateComplicationInfoInAppliationInfo:withComplicationsInfo:
newlyInstalledApplicationIsAWatchKitApplication:
sendStatusData:
setApplicationManagerConnections:
applicationManagerConnectionsQueue
setApplicationManagerConnectionsQueue:
updateSema
setUpdateSema:
_applicationManagerConnections
_applicationManagerConnectionsQueue
_updateSema
characterSetWithCharactersInString:
invertedSet
stringByAddingPercentEncodingWithAllowedCharacters:
_sp_stringByEncodingIllegalFilenameCharacters
SPProtoObjectMessage
NSCopying
SPProtoAudioFileQueuePlayerSetItems
SPProtoAudioFileQueuePlayerSetRate
SPProtoAudioFileQueuePlayer
SPProtoAudioFilePlayerUpdateContainedIdentifier
SPProtoAudioFilePlayerStatus
SPProtoAudioFilePlayerItem
SPProtoAudioFilePlayerAssetUpdateMetaData
SPProtoAudioFilePlayerAsset
SPProtoAudioFilePlayerItemSetCurrentTime
SPProtoAudioFilePlayerMessage
SPExtension
SPProtoSockPuppetMessage
SPGizmoPlugInManager
SPGizmoAppServerProtocol
NSObject
SPGizmoPlugInManagerRemoteInterfaceStub
SPRemoteInterfaceProtocol
SPProtoSockPuppetPlist
SPError
SPGizmoAppLauncher
SPFont
NSSecureCoding
NSCoding
NSKeyedUnarchiverDelegate
SPIDSProtobuf
SPPowerLog
SPProtoSerializer
SPGizmoAppServerProxy
SPProtoSockPuppetIDSObject
SPServerToExtensionAction
SPProtoSockPuppetObject
SPTransport
IDSServiceDelegate
SPGizmoApplicationProtocol
SPGizmoApplicationManagerProtocol
SPGizmoApplicationManagerServerProtocol
SPXcodeSupportServerProtocol
SPAlertProviderClientProtocol
SPAlertProviderServerProtocol
SPGizmoAppServer
SPTransportDelegate
NSXPCListenerDelegate
CSLSSessionServiceObserver
SPGizmoAppManager
SPExtras
@24@0:8^{_NSZone=}16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
v16@0:8
@"NSString"
#16@0:8
@24@0:8Q16
@"NSMutableArray"
f16@0:8
v20@0:8f16
B16@0:8
@"SPProtoObjectMessage"
@"SPProtoAudioFilePlayerUpdateContainedIdentifier"
@"SPProtoAudioFileQueuePlayerSetRate"
@"SPProtoAudioFilePlayerStatus"
@"SPProtoAudioFileQueuePlayerSetItems"
v20@0:8i16
v20@0:8B16
v24@0:8q16
i16@0:8
q16@0:8
@"NSData"
{?="errorCode"b1"status"b1}
@"SPProtoAudioFilePlayerItemSetCurrentTime"
v24@0:8d16
d16@0:8
{?="duration"b1}
@"SPProtoAudioFilePlayerAssetUpdateMetaData"
{?="currentTime"b1}
@"SPProtoAudioFilePlayerAsset"
@"SPProtoAudioFilePlayerItem"
@"SPProtoAudioFileQueuePlayer"
@28@0:8@16B24
@32@0:8@16@24
v48@0:8@16@24@32^v40
@"NSURL"
@"NSMutableSet"
@"NSDictionary"
@"NSArray"
@"LSApplicationProxy"
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_os_transaction>"
@"SPProtoAudioFilePlayerMessage"
@"SPProtoSockPuppetPlist"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v36@0:8@16@24B32
v40@0:8@16@24@32
v32@0:8@16@24
v28@0:8@16B24
v32@0:8@16@?24
v36@0:8@"NSString"16@"NSString"24B32
v24@0:8@"NSString"16
v40@0:8@"NSString"16@"NSUUID"24@"NSString"32
v32@0:8@"NSString"16@"NSString"24
v40@0:8@"NSArray"16@"NSString"24@"NSString"32
v28@0:8@"NSString"16B24
v32@0:8@"NSString"16@?<v@?B>24
v40@0:8@"NSString"16@"NSString"24@"NSDictionary"32
v48@0:8@16@24@32@40
v48@0:8@16^B24^B32^B40
v32@0:8@16^i24
@24@0:8@16
@32@0:8@16Q24
v56@0:8@16Q24@32@40@48
v36@0:8q16B24@28
v40@0:8@16@24@?32
v32@0:8@"NSData"16@"NSString"24
v56@0:8@"NSDictionary"16Q24@"NSString"32@"NSUUID"40@"NSString"48
v32@0:8@16@"NSString"24
v36@0:8q16B24@"NSString"28
v32@0:8@"NSDictionary"16@"NSString"24
v40@0:8@"NSData"16@"NSString"24@?<v@?Q>32
v32@0:8@"NSDictionary"16@?<v@?@"NSDictionary">24
v24@0:8@"NSDictionary"16
v24@0:8@?16
@24@0:8q16
@32@0:8q16@24
B24@0:8q16
v76@0:8@16@24@32@40@48@56B64@?68
v44@0:8@16@24B32@?36
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
#40@0:8@16@24@32
#40@0:8@"NSKeyedUnarchiver"16@"NSString"24@"NSArray"32
@32@0:8@"NSKeyedUnarchiver"16@24
v40@0:8@"NSKeyedUnarchiver"16@24@32
v24@0:8@"NSKeyedUnarchiver"16
@"UIFont"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_source>"
@"NSUUID"
@"SPGizmoAppServer"
@56@0:8Q16@24d32@40@?48
v24@0:8Q16
v20@0:8I16
I16@0:8
@"SPProtoCacheMessage"
{?="ndouble"b1"nint64"b1"nuint64"b1"nfloat"b1"nint32"b1"nuint32"b1"subtype"b1"nbool"b1}
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v48@0:8@16d24q32@?40
v64@0:8@16d24q32@40Q48@?56
v56@0:8@16@24q32@40@?48
B56@0:8@16@24d32q40@?48
B72@0:8@16@24d32q40@48Q56@?64
B48@0:8@16@24@32@40
@"IDSService"
@"<SPTransportDelegate>"
v48@0:8@16q24@32@40
v36@0:8d16B24@?28
v32@0:8@"NSData"16@?<v@?@"NSData"@"NSError">24
v24@0:8@"NSData"16
v48@0:8@"NSString"16@"NSString"24@"NSString"32@40
v32@0:8@"NSString"16@"NSArray"24
v48@0:8@"NSString"16q24@"NSDictionary"32@"NSArray"40
v36@0:8d16B24@?<v@?@"NSString"@"NSString"@"NSDictionary">28
v40@0:8@16@24Q32
v24@0:8@"NSArray"16
v24@0:8@?<v@?@"NSArray">16
v32@0:8@"NSString"16@?<v@?BBB@"NSError">24
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"NSData"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSString"16@"NSArray"24Q32
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@?<v@?@"NSError"B>24
v36@0:8@16B24@?28
v36@0:8@"NSString"16B24@?<v@?>28
v32@0:8Q16@24
v32@0:8Q16@"NSString"24
v24@0:8@"IDSProtobuf"16
@"NSDate"16@0:8
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@28@0:8i16@?20
v32@0:8@16q24
v40@0:8@16@24q32
v56@0:8@16@24@32@40@?48
v32@0:8@16Q24
@32@0:8@16^B24
@"NSXPCListener"
@"NSDate"
@"NSObject<OS_dispatch_semaphore>"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.assertiond.app-state-monitor</key>
<true/>
<key>com.apple.bulletinboard.utilities</key>
<true/>
<key>com.apple.carousel.backlightaccess</key>
<true/>
<key>com.apple.carousel.nonmatchingsessions</key>
<true/>
<key>com.apple.frontboard.debugapplications</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.multitasking.systemappassertions</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.passes.add-silently</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
</array>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.sockpuppet</string>
<string>com.apple.private.alloy.sockpuppet.classd</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.sockpuppet</string>
<string>com.apple.private.alloy.sockpuppet.classd</string>
</array>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>CopyInstalledAppsForLaunchServices</string>
<string>CopyDiskUsageForLaunchServices</string>
<string>InstallForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>CopyGuestContainerPath</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.private.usernotifications.notification-simulator</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.passd.library</string>
<string>com.apple.misagent</string>
<string>com.apple.carousel.tilenavigation</string>
<string>com.apple.carousel.sessionservice</string>
<string>com.apple.usernotifications.usernotificationservice</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>gizmoappd</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
