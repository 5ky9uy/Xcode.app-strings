init
dictionary
port
currentRunLoop
scheduleInRunLoop:forMode:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
parkBackgroundThread:
initWithTarget:selector:object:
start
accountType
identifier
isEqualToString:
daAccountSubclassWithBackingAccountInfo:
mainPrincipal
supportsPush
isAuthenticated
username
hasEntitlement:
credentialForAccount:clientID:error:
credential
credentialType
oauthToken
oauthRefreshToken
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
sharedInstance
daemonAppropriateAccountClassForACAccount:
alloc
initWithBackingAccountInfo:
setIsValidating:
setWasUserInitiated:
copy
persistentUUID
setObject:forKeyedSubscript:
sharedKeychain
removePersistentCredentials
invokeAndReleaseBlock:
backgroundThread
discoverInitialPropertiesWithConsumer:
performSelector:onThread:withObject:waitUntilDone:
objectForKeyedSubscript:
backingAccountInfo
removeObjectForKey:
arrayWithObjects:
enabledForDADataclass:
addObject:
password
boolValue
domain
code
identityPersist
setUsername:
length
credentialWithPassword:
setCredential:
setCredentialForAccount:
setAuthenticated:
saveAccount:withHandler:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
verifyCredentialsForAccount:accountStore:options:completion:
renewCredentialsForAccount:accountStore:options:completion:
isPushSupportedForAccount:
credentialForAccount:client:store:error:
renewalIDForAccount:
renewalIDsForAccount:accountStore:options:
discoverPropertiesForAccount:accountStore:options:completion:
renewCredentialsForAccount:accountStore:reason:completion:
verifyCredentialsForAccount:client:withHandler:
credentialForAccount:client:
credentialForAccount:client:error:
verifyCredentialsForAccount:accountStore:completion:
account:isValid:validationError:
appIdsForPromptingForDAAccount:
_shouldUpgradeAccountToOAuth2:withCredential:
_isExchangeOAuthAccount:
_isTransientNetworkError:
_refreshTokenForAccount:store:completion:
_renewCredentialsForAccount:accountStore:completion:
_handlePasswordNotification:response:callback:account:accountStore:resetAuthenticatedOnAlertFailure:
.cxx_destruct
_accountIDToVerificationHandler
_accountIDToAccount
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccessTools_Sim/DataAccess-2208.3/Accounts/DAAccountAuthenticator.m
<Unknown File>
Our background thread should live for ever and ever and ever and ever and ever
v8@?0
The account could not be verified because it does not have the necessary credentials.
NOT 
com.apple.Preferences
com.apple.MobileAddressBook
com.apple.mobilephone
com.apple.mobilecal
com.apple.reminders
com.apple.mobilenotes
com.apple.mobilemail
v24@?0@"NSURL"8@"NSError"16
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
 _backingAccountInfo.authenticated is %d for Account identifier %@ and username %@
Authenticator Failed verifying credentials for account %@, %@ Error: %@
Authenticator verifying credentials for account %@, %@
Authenticator determined credentials are %@valid for account %@, %@
Delaying release of account %@ by terrible means
Exchange only. Not used.
Authenticator renewing credentials for account %@, %@
Account marked with do not save reason "%@".  Not prompting for credentials
Authenticator got credential renewal prompt result of %ld for account %@, %@
User responded to client cert alert
User rejected password entry.
Password rejected because it is blank
Calling _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
DAAccountAuthenticator
ACDAccountAuthenticationPlugin
NSObject
DAValidityCheckConsumer
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v48@0:8@16@24@32@?40
@48@0:8@16@24@32^@40
@24@0:8@16
@40@0:8@16@24@32
v40@0:8@16@24@?32
@32@0:8@16@24
@40@0:8@16@24^@32
v48@0:8@"ACAccount"16@"ACDAccountStore"24@"NSDictionary"32@?<v@?@"ACAccount"@"NSError">40
v48@0:8@"ACAccount"16@"ACDAccountStore"24@"NSDictionary"32@?<v@?q@"NSError">40
B24@0:8@"ACAccount"16
@"ACAccountCredential"48@0:8@"ACAccount"16@"ACDClient"24@"ACDAccountStore"32^@40
@"NSString"24@0:8@"ACAccount"16
@"NSArray"40@0:8@"ACAccount"16@"ACDAccountStore"24@"NSDictionary"32
v48@0:8@"ACAccount"16@"ACDAccountStore"24@"NSString"32@?<v@?q@"NSError">40
v40@0:8@"ACAccount"16@"ACDClient"24@?<v@?@"ACAccount"@"NSError">32
@"ACAccountCredential"32@0:8@"ACAccount"16@"ACDClient"24
@"ACAccountCredential"40@0:8@"ACAccount"16@"ACDClient"24^@32
v40@0:8@"ACAccount"16@"ACDAccountStore"24@?<v@?@"ACAccount"@"NSError">32
v36@0:8@16B24@28
v36@0:8@"DAAccount"16B24@"NSError"28
v24@0:8@16
v24@0:8@?16
B32@0:8@16@24
v60@0:8^{__CFUserNotification=}16Q24@?32@40@48B56
v16@0:8
@"NSMutableDictionary"
