setObject:forKeyedSubscript:
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
dictionaryWithCapacity:
objectForKeyedSubscript:
cStringUsingEncoding:
init
_updateIfNecessaryWithDataType:
_updateIfNecessaryWithTickerSymbol:
dataType
setDataType:
delegate
model:didUpdateDataType:
tickerSymbol
isEqual:
setTickerSymbol:
model:didUpdateTickerSymbol:
initWithDelegate:
updateIfNecessaryWithDataType:tickerSymbol:
.cxx_destruct
setDelegate:
_delegate
_dataType
_tickerSymbol
defaultCenter
didBecomeActiveObserver
removeObserver:
dealloc
awakeWithContext:
currentDevice
screenBounds
styleForScreenBounds:
setStyle:
companyName
setAccessibilityIdentifier:
price
chartGroup
chartStatusLabel
setChartSyncGroup:
initialLoadCompletion
setLoadCompletion:
setTitle:
sharedModel
stockWithTickerSymbol:
style
chartSizeForStock:
initWithChartSize:
setChartImageManager:
setHeight:
setText:
marketStatusLabel
systemGrayColor
setTextColor:
isRunningInStoreDemoMode
_updateWithStock:
setUpdateWithDemoStock:
mainBundle
localizedStringForKey:value:table:
_remove
addMenuItemWithImageNamed:title:action:
sharedExtension
applicationState
_loadStockDataWithNewUpdate:withCachedDataLoadedHandler:
visibleInterfaceController
_loadStockDataAndSetupHandoff
isPendingLoadDataAndHandoff
addUpdateObserver:
setAppState:
updateLastViewedTickerSymbol:
updateWithDemoStock
setDownloadingTimeline:
timelineFetchOperation
cancel
removeUpdateObserver:
chartSyncGroup
setTimelineFetchOperation:
_updateChartWithTimeline:
onComplete:
datapoints
count
setBackgroundImage:
fetchStockTimelineForTickerSymbol:ttl:fetchCallback:
setPendingLoadDataAndHandoff:
initWithActivityType:
setUserInfo:
updateUserActivity:
_loadStockChartWithTTL:
loadCompletion
fetchStockForTickerSymbol:ttl:fetchCallback:
removeStockFromStocks:
popToRootController
stockTimeline
chartImageManager
chartImageForStock:timeline:
onePieceImage
setStockTimeline:
loggingDescription
_updateTopInfoWithStock:
_updateMarketStatusWithStock:
_updateChartWithStock:
symbol
isEqualToString:
indexOfObjectPassingTest:
isDownloadingTimeline
companyNameAttributedStringForStock:
setAttributedText:
priceAndChangeAttributedStringForStock:textColor:
priceChangeGroup
priceAndChangeGroupHeightForStock:
_setupCompanyNameWithStock:
localeManager
isChangeColorSwapped
systemRedColor
systemGreenColor
changeIsNegative
_setupPriceAndChangeLabelsWithStock:color:
marketStatusDescriptionForStock:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
runEnterForegroundAction
stocksModel:didFinishEventsForBackgroundSessionWithError:
stocksModel:updatedComplicationType:
stocksModel:updatedListOfStocks:
stocksModel:updatedSelectedStockSymbol:
stocksModel:updatedStock:
stocksModel:updatedStockList:
stocksModel:updatedStockMetadata:
stocksModel:updatedStockTimeline:
prepareForSnapshotWithCompletion:
willActivate
didAppear
willDisappear
setCompanyName:
setPriceChangeGroup:
setPrice:
setChartGroup:
setChartStatusLabel:
setMarketStatusLabel:
setDidBecomeActiveObserver:
_pendingLoadDataAndHandoff
_downloadingTimeline
_companyName
_priceChangeGroup
_price
_chartGroup
_chartStatusLabel
_marketStatusLabel
_style
_stockTimeline
_timelineFetchOperation
_chartImageManager
_chartSyncGroup
_loadCompletion
_updateWithDemoStock
_didBecomeActiveObserver
identifier
group
setGroup:
tickerSymbolLabel
setTickerSymbolLabel:
companyNameLabel
setCompanyNameLabel:
exchangeNameLabel
setExchangeNameLabel:
_group
_tickerSymbolLabel
_companyNameLabel
_exchangeNameLabel
lastFailedAt
timeIntervalSinceNow
failedCount
distantPast
setFailedCount:
timeIntervalSinceDate:
isRequestOkayToProceed
setLastFailedAt:
_lastFailedAt
_failedCount
timeQuoteLastUpdated
marketIsOpen
exchange
nextOpenDate
timeIntervalSinceReferenceDate
date
isQuoteStaleForComplicationComparedToDate:
isQuoteStaleForComplication
stringWithFormat:
dictionaryWithContentsOfFile:
parseTimelineFromDemoDictionary:forStock:error:
demoTimelineForStock:
dateWithTimeIntervalSinceReferenceDate:
setEntryDate:
lastCloseDate
listNameWithMaxIndexNameLength:
setListName:
BlankValueString
doubleValue
setPriceValue:
formattedPrice
setFormattedPrice:
change
open
setPointsChangeValue:
priceValue
pointsChangeValue
formattedChangePercent:
setFormattedPointsChange:
changeDirection
setChangeDirection:
setPercentChangeValue:
setFormattedPercentChange:
marketcap
setMarketCapValue:
localizedMagnitudeAbbreviatedStringWithString:
setFormattedMarketCap:
setExchangeLastCloseDate:
setExchangeNextOpenDate:
listName
isDataAvailable
entryDate
formattedPointsChange
formattedPercentChange
percentChangeValue
formattedMarketCap
dataForStock:
niceNameForSymbol:
marketCapValue
exchangeLastCloseDate
exchangeNextOpenDate
_entryDate
_listName
_formattedPrice
_priceValue
_formattedPointsChange
_pointsChangeValue
_formattedPercentChange
_percentChangeValue
_formattedMarketCap
_marketCapValue
_changeDirection
_exchangeLastCloseDate
_exchangeNextOpenDate
complicationType
_refreshAndReloadComplication:
addObserver:selector:name:object:
_registerForDebugComplicationTimestampEnabledPrefNotitification
_readDebugComplicationTimestampEnabledPref
complicationTickerSymbol
timeline
_refreshComplicationStockData:
complicationStockUpdateGroup
setUpdatingComplicationData:
setTimeline:
scheduleSnapshotRefreshWithPreferredDate:userInfo:scheduledCompletion:
fetchStockListWithTTL:fetchCallback:
sharedInstance
activeComplications
countByEnumeratingWithState:objects:count:
reloadTimelineForComplication:
_reloadTimeline
backgroundRefreshManager
scheduleRefreshBasedOnMarketStateIfNecessary
family
setDate:
complicationTemplatePopulator
fetchChartEntryForStock:timeline:complicationDataType:fetch:
datapointCount
fetchStaleChartEntryForStock:timeline:date:fetch:
fetchChartEntryNoMarketDataForStock:fetch:
expectedStaleDate
setExpectedStaleDate:
staleEntryForTickerSymbol:date:lastUpdate:complicationFamily:
entryForData:metric:complicationFamily:
complicationTemplate
fetchChartPlaceholderEntry:
placeholderEntryForComplicationFamily:
fetchChartPlaceholderTemplate:
placeholderTemplateForComplicationFamily:
compare:
arrayWithObjects:count:
setComplicationType:
isUpdatingComplicationData
_debugComplicationTimestampEnabledPrefChanged
initWithSuiteName:
boolForKey:
setDebugComplicationTimestampEnabled:
_checkComplicationStockStalenessAndRefresh
getSupportedTimeTravelDirectionsForComplication:withHandler:
getCurrentTimelineEntryForComplication:withHandler:
getTimelineStartDateForComplication:withHandler:
getTimelineEndDateForComplication:withHandler:
getPrivacyBehaviorForComplication:withHandler:
getTimelineAnimationBehaviorForComplication:withHandler:
getTimelineEntriesForComplication:beforeDate:limit:withHandler:
getTimelineEntriesForComplication:afterDate:limit:withHandler:
getNextRequestedUpdateDateWithHandler:
requestedUpdateDidBegin
requestedUpdateBudgetExhausted
getLocalizableSampleTemplateForComplication:withHandler:
getPlaceholderTemplateForComplication:withHandler:
_unregisterForDebugComplicationTimestampEnabledPrefNotitification
setComplicationTemplatePopulator:
setComplicationStockUpdateGroup:
_updatingComplicationData
_complicationTemplatePopulator
_complicationStockUpdateGroup
_complicationType
_timeline
_expectedStaleDate
dateWithTimeIntervalSince1970:
initPrivate
raise:format:
accessQueue
sharedManager
hasBeenUnlockedSinceBoot
setAccessQueue:
setUnlockedSinceBoot:
_unlockedSinceBoot
_accessQueue
length
JSONObjectWithData:options:error:
valueForKeyPath:
lowercaseString
errorWithDomain:code:userInfo:
initWithDictionary:
setDataSource:
_parseExchangeFromJSON:andUpdateExchange:
_parseQuoteFromJSON:andUpdateStock:
containsString:
name
setDateFormat:
timeZoneForSecondsFromGMT:
setTimeZone:
localeWithLocaleIdentifier:
setLocale:
dateFromString:
setNextOpenDate:
YQLExchangeToStocksKeyMap
integerValue
setStatus:
setAverageVolume:
setChange:
setCurrency:
setDividendYield:
setHigh:
setLow:
setOpen:
setPeRatio:
setVolume:
setYearHigh:
setYearLow:
parseStockMetadataFromResponse:andUpdateStock:error:
defaultManager
containerURLForSecurityApplicationGroupIdentifier:
_initWithSuiteName:container:
defaults
integerForKey:
setInteger:forKey:
keysToSynchronize
addObject:
stringForKey:
objectForKey:
removeObjectForKey:
setObject:forKey:
synchronize
syncManager
synchronizeUserDefaultsDomain:keys:container:appGroupContainer:
removeAllObjects
setDefaults:
setSyncManager:
setKeysToSynchronize:
_defaults
_syncManager
_keysToSynchronize
changeIsZero
archiveDictionary
stock
stockFetchOperation
taskDescriptionForSessionType:tickerSymbol:requestType:
requestForBasicUpdateOfStockTickerSymbol:
_resumedDataTaskForRequest:taskDescription:session:
operationWithTask:stock:requestType:
setStockFetchOperation:
lastUpdateTime
_timelineRequest
_resumedDownloadTaskForRequest:earliestBeginDate:taskDescription:session:
taskDescription
taskIdentifier
error
sessionType
finalizeWithResult:error:
data
updateQuoteWithDictionary:forTime:
entry:updatedStockData:
parseAndCacheStockListResponseData:completionHandler:
errorCode
_parseAndCacheTimelineResponse:completionHandler:
populateFromDictionary:
shortestChartInterval
status
initWithTickerSymbol:companyName:exchangeName:exchangeStatus:exchangeCloseDate:exchangeOpenDate:previousDayClosePrice:range:timezone:serverDatapoints:errorCode:
appendSynthesizedDatapoint:
entry:updatedStockTimeline:
parseTimelineFromResponse:forStock:error:
appendSynthesizedDatapointsFromTimeline:
updateOutsideRegularMarketTransitionTimeFromTimeline:
dataTaskWithRequest:
setTaskDescription:
resume
downloadTaskWithRequest:
setEarliestBeginDate:
requestForTimelineOfStockTickerSymbol:range:
initWithStock:preferences:delegate:
fetchBasicDataWithSession:ttl:callback:
fetchTimelineWithSession:ttl:callback:
scheduleFetchTimelineWithSession:earliestBeginDate:
processDataResponse:
processMetadataResponse:
processTimelineResponse:
updateStock:
setStock:
preferences
stockMetadataFetchOperation
setStockMetadataFetchOperation:
_stock
_preferences
_stockFetchOperation
_stockMetadataFetchOperation
hasSuffix:
isExchangeRate
rootInterfaceController
stocksTableInterfaceController
_handleApplicationRefreshBackgroundTask:
_handleIntentDidRunRefreshBackgroundTask:
_handleSnapshotRefreshBackgroundTask:
_handleURLSessionRefreshBackgroundTask:
_handleWatchConnectivityTaskRefreshBackgroundTask:
setTaskCompletedWithSnapshot:
enumerateObjectsUsingBlock:
reestablishBackgroundSession
_scheduleRefreshBasedOnMarketStateIfNecessaryAfterFirstUnlock
dateByAddingTimeInterval:
_scheduleBackgroundAppRefresh:completion:
initWithPID:flags:reason:name:
urlTaskQueue
urlTaskTimer
invalidate
setUrlTaskTimer:
urlSessionRefreshBackgroundTask
setUrlSessionRefreshBackgroundTask:
stocks
postNotificationName:object:
_postRefreshAndReloadComplicationNotificationIfNecessary
checkComplicationPreferences
_createAssertionWithName:
acquire
reasonForSnapshot
earliestNextOpenDateInStocks
isEqualToDate:
userInfo
dateWithTimeIntervalSinceNow:
distantFuture
isInPrimaryUI
setTaskCompletedWithDefaultStateRestored:estimatedSnapshotExpiration:userInfo:
navigateToPrimaryUIAndPrepareForSnapshotWithCompletionHandler:
sessionIdentifier
scheduledTimerWithTimeInterval:repeats:block:
reestablishNSURLSession
scheduleBackgroundRefreshWithPreferredDate:userInfo:scheduledCompletion:
_scheduleBackgroundDownloads:
schedulingAssertion
setSchedulingAssertion:
_scheduleRefreshBasedOnMarketState:
numberWithBool:
laterDate:
scheduleFetchStockListWithEarliestBeginDate:completion:
scheduleFetchStockTimelineForTickerSymbol:earliestBeginDate:completion:
code
_finishURLSessionRefreshTaskError:
hasLoadedInitialList
_scheduleSnapshot
setLoadedInitialList:
copy
setOutsideRegularMarketTransitionDate:
earlierDate:
outsideRegularMarketTransitionDate
handleBackgroundTasks:
_reloadActiveComplications
requestedRefreshDate
setUrlTaskQueue:
_outsideRegularMarketTransitionDate
_loadedInitialList
_requestedRefreshDate
_schedulingAssertion
_urlSessionRefreshBackgroundTask
_urlTaskQueue
_urlTaskTimer
initWithPersistence:delegate:
persistence
enumerateKeysAndObjectsUsingBlock:
preferencesUpdated:
arrayWithCapacity:
allValues
timeIntervalSince1970
numberWithDouble:
initWithCapacity:
objectAtIndexedSubscript:
na_safeSetObject:forKey:
na_safeAddObject:
replaceWithPreferences:
_notifyDelegateOfUpdate
hasStocksBeenSet
lastModifiedTimeInterval
setStocks:
alloc
defaultSession
activateSession
sessionUtilityQueue
activationState
isReachable
_enqueuedMessages
localizedDescription
addEntriesFromDictionary:
sendMessage:replyHandler:errorHandler:
sendEnqueuedMessages
session:activationDidCompleteWithState:error:
sessionDidBecomeInactive:
sessionDidDeactivate:
sessionWatchStateDidChange:
sessionCompanionAppInstalledDidChange:
sessionReachabilityDidChange:
session:didReceiveMessage:
session:didReceiveMessage:replyHandler:
session:didReceiveMessageData:
session:didReceiveMessageData:replyHandler:
session:didReceiveApplicationContext:
session:didFinishUserInfoTransfer:error:
session:didReceiveUserInfo:
session:didFinishFileTransfer:error:
session:didReceiveFile:
clearApplicationContext
sendSyncRequestToCompanion
sendUpdateRequestToCompanion
applicationContext
setSessionUtilityQueue:
set_enqueuedMessages:
_applicationContext
_sessionUtilityQueue
__enqueuedMessages
componentsSeparatedByString:
firstObject
lastObject
_parseTimelineFromRoot:metaFeatures:requestedRange:forStock:error:
_rangeFromURI:
sharedCache
dataFormatterForCurrency:
null
swk_arrayByMappingValuesUsingBlock:withDefaultValue:
indexOfObject:
pricePrecision
formatPrice:precision:
formatPointsChange:precision:
formatPercentChange:
weakObjectsHashTable
initWithDemoModeEnabled:delegate:
sharedPreferences
setNetworkReachable:
_resetLocale:
_loadWithPersistedStocks:lastModifiedDate:
async_populateStocks:completion:
_notifyObserversOfUpdatedListOfStocks:
entries
setLastModifiedTimeInterval:
maximumNumberOfStocks
subarrayWithRange:
swk_dictionaryByMappingValuesWithKeysUsingBlock:
stocksQueue
swk_arrayByMappingValuesUsingBlock:
set_locked_stocks:
set_locked_stockListDirty:
isEqualToArray:
defaultStockOptionBiggestMover
changeAsPercent
_stockWithTickerSymbol:inStocks:
_stockWithListName:inStocks:
_locked_stocks
cache
cacheStocks:
_entryForStock:
_notifyObserversOfUpdatedStock:
observers
allObjects
removeObject:
mutableCopy
array
containsObject:
lastDefaultStockSymbolReportedForMetrics
defaultStockOptionLastViewed
defaultStockOptionStaticStock
setLastDefaultStockSymbolReportedForMetrics:
complicationDisplayMode
defaultStockSymbol
_logComplicationStockChange:
lastViewedTickerSymbol
_stockWithTickerSymbolOrName:inStocks:
complicationModel
backoffTimer
stocksFetchOperation
valueForKey:
foregroundSession
requestForBasicUpdateOfStockTickerSymbols:
taskDescriptionForSessionType:tickerSymbols:
componentsJoinedByString:
operationWithTask:stocks:
setStocksFetchOperation:
backgroundSessionQueue
backgroundSession
getAllTasksWithCompletionHandler:
backgroundSessionIdentifier
backgroundSessionConfigurationWithIdentifier:
setTimeoutIntervalForResource:
urlSessionDelegate
mainQueue
sessionWithConfiguration:delegate:delegateQueue:
setSessionDescription:
setBackgroundSession:
setLastViewedTickerSymbol:
_notifyObserversOfComplicationType:
_notifyObserversOfComplicationSelectedTickerSymbol:
cacheStock:
_notifyObserversOfUpdatedStockMetadata:
_notifyObserversOfUpdatedStockTimeline:
defaultSessionConfiguration
setTimeoutIntervalForRequest:
appState
rowDataType
setRowDataType:
_locked_isStockListDirty
set_safe_stocks:
_safe_stocks
entry:updatedStockMetadata:
_updateStocksWithArchiveData:completion:
_notifyObserversBackgroundSessionDidFinishEvents:
_notifyObserversOfUpdatedStockList
addStockToStocks:
indexOfStockInListWithTickerSymbol:
preferences:receivedNotificationName:didUpdateStockList:lastModifiedDate:
dateForScheduledStockListRequest
dateForScheduledStockTimelineRequest
setComplicationModel:
setPreferences:
setCache:
setForegroundSession:
setBackgroundSessionQueue:
setUrlSessionDelegate:
setObservers:
setEntries:
setStocksQueue:
__locked_stockListDirty
_localeManager
_dateForScheduledStockListRequest
_dateForScheduledStockTimelineRequest
_complicationModel
_cache
_foregroundSession
_backgroundSession
_backgroundSessionQueue
_urlSessionDelegate
_stocksFetchOperation
_backoffTimer
_observers
_entries
_lastModifiedTimeInterval
__locked_stocks
_stocksQueue
__safe_stocks
_lastViewedTickerSymbol
compact
variant394h
variant448h
systemFontOfSize:weight:
metricsForTextStyle:
scaledFontForFont:
scaledFontOfSize:weight:scaleWithStyle:
floatValue
layer
setPath:
setAllowsEdgeAntialiasing:
setLineCap:
setLineWidth:
CGColor
setStrokeColor:
shapeNodeWithPath:
setAntialiased:
context:drawFrom:to:
layerFrom:to:strokeColor:
nodeFrom:to:strokeColor:
bundleIdentifier
runningTasks
initWithTaskDescription:
configuration
sessionDescription
backgroundDownloadTaskErrors
finishEventsForBackgroundSession:
_responseForTask:
appendData:
dataWithContentsOfURL:
setError:
processResponse:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:downloadTask:didFinishDownloadingToURL:
setBackgroundDownloadTaskErrors:
setRunningTasks:
_backgroundDownloadTaskErrors
_runningTasks
nsm_bundleIdentifier
requestQueue
stockUpdateManager
observer
stockDataUpdater:didUpdateStocks:
stockDataUpdater:failedToUpdateStocks:error:
stockUpdateManager:didRequestUpdateForStocks:updates:
stockUpdateManager:didUpdateStocks:updates:
stockUpdateManager:failedToUpdateStocks:updates:error:
initWithObserver:
asyncRequest:
syncRequest:
cancelAnyOutstandingRequest
setObserver:
setRequestQueue:
setStockUpdateManager:
_observer
_requestQueue
_stockUpdateManager
searchingLabel
noResultsLabel
setWithArray:
setCurrentSymbols:
_launchQueryTextInput
stringByReplacingOccurrencesOfString:withString:
setHidden:
symbolValidator
validateSymbol:withMaxResults:
presentTextInputControllerWithSuggestions:allowedInputMode:completion:
setQueriedStocks:
queryResultsTable
queriedStocks
indexSetWithIndexesInRange:
insertRowsAtIndexes:withRowType:
rowControllerAtIndex:
currentSymbols
_loadQueryResults:
symbolValidator:didValidateSymbols:
symbolValidator:didFailWithError:
table:didSelectRowAtIndex:
setSearchingLabel:
setQueryResultsTable:
setNoResultsLabel:
setSymbolValidator:
_searchingLabel
_queryResultsTable
_noResultsLabel
_symbolValidator
_queriedStocks
_currentSymbols
companionDefaults
setCompanionDefaults:
_companionDefaults
bundleForClass:
stringFromDate:
currentCalendar
startOfDayForDate:
parseExchangeDictionaries:parsedExchangeResult:
exchangeWithName:
updateWithDictionary:
addExchange:
parseDataSourceMapFromDataSourceDictionaries:
parseStockQuoteDictionaries:withDataSources:parsedStockResult:
parseData:resultsHandler:
_persistence
resetLocale
numberWithFloat:
_formatStringForNumber:fractionDigits:formatter:droppingFractionDigitsIfLengthExceeds:
setCurrencyCode:
setCurrencySymbol:
setNumberStyle:
setUsesGroupingSeparator:
setMinimumIntegerDigits:
setPositivePrefix:
setNegativePrefix:
currentLocale
setMinimumFractionDigits:
setMaximumFractionDigits:
stringFromNumber:
textDirectionIsRightToLeft
initWithCurrency:
currency
numberFormatter
setNumberFormatter:
percentFormatter
setPercentFormatter:
pointChangeFormatter
setPointChangeFormatter:
setTextDirectionIsRightToLeft:
plusSign
minusSign
_textDirectionIsRightToLeft
_currency
_numberFormatter
_percentFormatter
_pointChangeFormatter
_plusSign
_minusSign
dataFormatters
setDataFormatters:
_dataFormatters
_ensureProperBackgroundUpdateState
navigateToDetailForTickerSymbol:
navigateToDetailForComplicationTickerSymbol
finishedTest:
startScrollingTest
startedTest:
applicationDidFinishLaunching
applicationDidBecomeActive
applicationWillResignActive
applicationWillEnterForeground
applicationDidEnterBackground
handleWorkoutConfiguration:
handleActiveWorkoutRecovery
handleExtendedRuntimeSession:
handleRemoteNowPlayingActivity
handleUserActivity:
handleActivity:
handleIntent:completionHandler:
deviceOrientationDidChange
didRegisterForRemoteNotificationsWithDeviceToken:
didFailToRegisterForRemoteNotificationsWithError:
didReceiveRemoteNotification:fetchCompletionHandler:
handleActionWithIdentifier:forRemoteNotification:
handleActionWithIdentifier:forLocalNotification:
handleActionWithIdentifier:forRemoteNotification:withResponseInfo:
handleActionWithIdentifier:forLocalNotification:withResponseInfo:
didReceiveRemoteNotification:
didReceiveLocalNotification:
runTest:options:
setBackgroundRefreshManager:
_backgroundRefreshManager
stockGroup
tickerDisplayNameLabel
changeLabel
priceLabel
boundingRectWithSize:options:attributes:context:
stockGroupBackgroundColor
setBackgroundColor:
setStockGroupBackgroundColor:
whiteColor
initWithString:attributes:
setName:
_stringWidthForString:font:maxWidthForDevice:
setWidth:
changeColor
setChangeColor:
updateWithStockName:priceText:changeText:changeColor:backgroundColor:style:
setStockGroup:
setTickerDisplayNameLabel:
setChangeLabel:
setPriceLabel:
_stockGroup
_tickerDisplayNameLabel
_changeLabel
_priceLabel
_stockGroupBackgroundColor
_changeColor
_name
_change
setAddStockRowIndex:
table
setCurvesAtBottom:
attributionImage
setPendingComplicationDetailsNavigation:
_loadStocksTable:withCachedDataLoadedHandler:
pendingStockInfoState
_navigateToDetailControllerForTickerSymbol:completionHandler:
setStockInfoState:
stockInfoState
initWithTickerSymbol:initialLoadCompletionHandler:
isRunningPPT
pptScrollingIterationCount
setPptScrollingIterationCount:
scrollToObject:atScrollPosition:animated:
scrollToRowAtIndex:
numberOfRows
performSegueForRow:
setPendingStockInfoState:
setRunningPPT:
addStockRowIndex
pushControllerWithName:context:
_reloadTableWithStocks:
isPendingComplicationDetailsNavigation
_updateRowWithStock:
setPositiveColor:
colorWithAlphaComponent:
setPositiveBackgroundColor:
setNegativeColor:
setNegativeBackgroundColor:
_reconfigureColors
removeRowsAtIndexes:
indexSetWithIndex:
_updateRow:withStock:
formattedPriceDroppingFractionDigitsIfLengthExceeds:
negativeColor
positiveColor
negativeBackgroundColor
positiveBackgroundColor
_reloadStocksTable
didDeactivate
contextForSegueWithIdentifier:inTable:rowIndex:
interfaceDidEndScrollingAnimationPPT
scrollToStock:
_menuItemSelectedSetMetricToMarketCap:
_menuItemSelectedSetMetricToPercentage:
_menuItemSelectedSetMetricToPoints:
staleDateForPrimaryUI
setTable:
setAttributionImage:
_pendingComplicationDetailsNavigation
_runningPPT
_table
_attributionImage
_positiveColor
_negativeColor
_positiveBackgroundColor
_negativeBackgroundColor
_stockInfoState
_pendingStockInfoState
_addStockRowIndex
_pptScrollingIterationCount
addStockLabel
blackColor
setAddStockLabel:
_addStockLabel
setGuessHours:
setAdditionalLayoutPadding:
setUseRoundedFont:
_entryTemplateForData:metric:complicationFamily:
setComplicationTemplate:
dictionaryWithObject:forKey:
setAdditionalContentAttributes:
uppercaseString
_staleTemplateForTickerSymbol:complicationFamily:lastUpdate:
chartImageForStock:timeline:withFlagType:
twoPieceBackgroundImage
twoPieceForegroundImage
imageProviderWithOnePieceImage:twoPieceImageBackground:twoPieceImageForeground:
providerWithFullColorImage:tintedImageProvider:
setImageProvider:
_chartTitleForStock:useMarketCap:
setTextProvider:
numberWithInt:
setMetadata:
providerWithFullColorImage:
setSymbol:
setExchange:
textProviderWithText:
setTintColor:
colorWithWhite:alpha:
locale
uppercaseStringWithLocale:
stockMarketCapFormatter
_priceDirectionArrowFormatForStock:
_localizedColorForStockDataChangeDirection:
textProviderWithFormat:
_entrySmallCircularWithData:
_entryExtraLargeWithData:metric:
_entryLargeModularWithData:metric:
_entrySmallModularWithData:metric:
_entryLargeUtilitarianWithData:metric:
_entrySmallUtilitarianWithData:
_entryGraphicBezelWithData:metric:
_entryGraphicCircularWithData:metric:
_entryGraphicCornerWithData:metric:
textProviderWithText:shortText:
_directionArrowForStockDataChangeDirection:usePadded:
imageProviderWithOnePieceImage:
setLine1ImageProvider:
setLine2TextProvider:
setHighlightMode:
_tintColorForDataPoint:
setShrinkTextPreference:
setLine1TextProvider:
_textForMetric:data:
setHighlightLine2:
setUseMonospacedNumbersForTimeTravel:
setUseNoContentDashFormatting:
_tickerListNameFormatForData:
isDebugComplicationTimestampEnabled
setHeaderTextProvider:
setHeaderTrailingTextProvider:
setShouldTruncateHeaderLeadingLabelFirst:
setBody1TextProvider:
textProviderWithDate:style:units:
setBody2TextProvider:
setBodyTextProvider:
localeDirectedString:
_localizedArrowStringForStockDataChangeDirection:
setCircularTemplate:
_formattedDataFromData:forMetric:
setUISensitivity:
_commaDelimitedDataStringForData:forMetric:
setInnerTextProvider:
setOuterTextProvider:
_detailDirectionFormatForChangeDirection:shouldIncludeSpace:
_placeholderSmallCircular
_placeholderExtraLarge
_placeholderLargeModular
_placeholderSmallModular
_placeholderLargeUtilitarian
_placeholderSmallUtilitarian
_placeholderGraphicBezel
_placeholderGraphicCircular
_placeholderGraphicCorner
imageNamed:
finalizedTextProviderWithText:
imageWithRenderingMode:
_staleSmallCircularWithTickerSymbol:
_staleExtraLargeWithTickerSymbol:
_staleLargeModularWithTickerSymbol:lastUpdate:
_staleSmallModularWithTickerSymbol:
_staleLargeUtilitarianWithTickerSymbol:
_staleSmallUtilitarianWithTickerSymbol:
_staleGraphicBezelWithTickerSymbol:
_staleGraphicCircularWithTickerSymbol:
_staleGraphicCornerWithTickerSymbol:
staleTextColor
CGImage
scale
initWithCGImage:scale:orientation:
characterDirectionForLanguage:
layoutDirection
systemOrangeColor
fetchStaleChartEntryNoMarketDataForStock:date:fetch:
cachedDownImage
setCachedDownImage:
cachedDownImageColor
setCachedDownImageColor:
cachedUpImage
setCachedUpImage:
cachedUpImageColor
setCachedUpImageColor:
_debugComplicationTimestampEnabled
_cachedDownImage
_cachedDownImageColor
_cachedUpImage
_cachedUpImageColor
initialize
standardUserDefaults
URLForResource:withExtension:
dictionaryWithContentsOfURL:
registerDefaults:
_loadDefaults
_migrateIfNecessary
appPreferences
_handleCompanionPreferencesChanged:
addObserverForName:object:queue:usingBlock:
initWithDomain:
bridgePreferences
hasComplicationDisplayModeBeenSet
unsignedIntegerValue
setComplicationDisplayMode:
setDefaultStockSymbol:
shortCompanyName
defaultsForCurrentCountry
defaultSymbols
defaultsFromCarrierBundle
arrayByAddingObjectsFromArray:
orderedSetWithArray:
pptDefaults
numberWithInteger:
setAppPreferences:
setBridgePreferences:
setPptDefaults:
_changeColorSwapped
_textDirection
_runningInStoreDemoMode
_appPreferences
_bridgePreferences
_pptDefaults
setLineHeightMultiple:
setLineSpacing:
setParagraphSpacingBefore:
setParagraphSpacing:
systemFontOfSize:
appendAttributedString:
numberWithLong:
addAttributes:range:
marketStatusDescription
companyNameAttributedStringForStock:layout:
priceAndChangeAttributedStringForStock:textColor:layout:
priceAndChangeGroupHeightForStock:layout:
marketStatusDescriptionForStock:layout:
layout
chartImageWithOnePieceImage:twoPieceBackgroundImage:twoPieceForegroundImage:lastUpdateTime:
_onePieceImage
_twoPieceBackgroundImage
_twoPieceForegroundImage
_lastUpdateTime
_keyForStock:withFlagType:
cachedChartImages
_lastUpdatedLabelForStock:
formattedChangePercent
formattedChange
_changeAttributedStringWithText:
size
_padding
chartSize
_chartSizeAdjustedForPadding:withinSize:
pointsFromTimeline:withinGraphSize:
shouldGuessHours
emptyTimelineWithTickerSymbol:exchangeOpenDate:range:
CGPointValue
_drawCurrentChangeFlagWithText:forStock:atPoint:withPadding:
_drawGraphTimeline:allowMarketClosedMessage:withLastUpdateString:andPoints:forStock:ofSize:withPadding:
drawInRect:
_fontForSize:weight:prefersRoundedDesign:
fontDescriptor
fontDescriptorByAddingAttributes:
fontWithDescriptor:size:
clearColor
verticalTimeMarkingLinesForTimeline:
timeMarkerStringsForTimeline:
drawAtPoint:
colorForDirection:
moveToPoint:
addLineToPoint:
addQuadCurveToPoint:controlPoint:
closePath
bezierPathWithRoundedRect:byRoundingCorners:cornerRadii:
bezierPathWithOvalInRect:
CGPath
_context:drawVerticalGuidesForTimeline:withPadding:withinSize:
startingPointYFromPoints:timeline:padding:graphSize:
_context:drawHorizontalGuideAtY:withPadding:withinSize:
_context:drawLineChart:acrossPoints:withPadding:withinSize:
_drawMessage:
_marketClosedAttributedString
regularPadding
additionalLayoutPadding
shouldUseRoundedFont
systemFontOfSize:weight:design:
localizedLastUpdatedStringForStock:
localizedMarketClosedString
setCachedChartImages:
_guessHours
_useRoundedFont
_cachedChartImages
_chartSize
_additionalLayoutPadding
_regularPadding
initWithSessionType:tickerSymbols:
initWithSessionType:tickerSymbol:requestType:
responseForTaskDescription:
initWithSessionType:
setData:
_sessionType
_error
_data
responseForSessionType:tickerSymbols:
tickerSymbols
_tickerSymbols
responseForSessionType:tickerSymbol:requestType:
requestType
_requestType
_requestForBasicUpdateOfStockTickerSymbolParameter:
stocksYQLBaseURL
URLByAppendingPathComponent:
stocksCountryCode
stocksLanguageCode
signedRequestForURL:parameters:
setInitialLoadCompletion:
_initialLoadCompletion
exchangeStatus
exchangeOpenDate
exchangeCloseDate
range
lowDatapoint
highDatapoint
synthesizedDatapoints
addObjectsFromArray:
pruneOverlappingSynthesizedDatapointsIfNecessary
removeObjectsInRange:
setExchangeStatus:
setExchangeOpenDate:
allocWithZone:
exchangeName
setExchangeName:
setExchangeCloseDate:
fetchTime
setFetchTime:
setLastUpdateTime:
unit
setUnit:
timezone
setTimezone:
serverDatapoints
setServerDatapoints:
setSynthesizedDatapoints:
setErrorCode:
copyWithZone:
isSynthesizedDataPoint:
updateExchangeDataWithStock:
transitionOutsideRegularMarket
previousDayClosePrice
_exchangeName
_exchangeStatus
_exchangeCloseDate
_exchangeOpenDate
_previousDayClosePrice
_range
_timezone
_errorCode
_highDatapoint
_lowDatapoint
_unit
_fetchTime
_serverDatapoints
_synthesizedDatapoints
rangeOfString:
substringFromIndex:
watchlist
setWatchlist:
_watchlist
_processMultiResponse:
_processSingleResponse:
_commonCacheDirectoryURL
URLByAppendingPathComponent:isDirectory:
URLForDirectory:inDomain:appropriateForURL:create:error:
_exchangesCacheDirectoryURL
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
_stocksCacheDirectoryURL
archivedDataWithRootObject:requiringSecureCoding:error:
_fileURLForExchange:
writeToURL:atomically:
path
dataWithContentsOfFile:
initForReadingFromData:error:
setWithObjects:
decodeObjectOfClasses:forKey:
finishDecoding
_fileURLForStock:
setWithObject:
queue
fileExistsAtPath:isDirectory:
_createStocksCacheDiskFolder
_locked_cacheStock:
_createExchangesCacheDiskFolder
_locked_cacheExchange:
absoluteString
fileExistsAtPath:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
exchangeList
_locked_populateExchange:
_locked_populateStock:
removeItemAtURL:error:
removeItemAtPath:error:
populateStock:
populateStocks:
removeStock:
setQueue:
_queue
languageCode
isLanguageArabic
isLanguageHindi
localeChanged:
textDirection
textAttachmentDirectionIsRightToLeft
_textAttachmentDirectionIsRightToLeft
_locale
initWithFrame:
shouldShowCurrentChangeIndicator
_changeLabelWithText:
sizeToFit
frame
_chartSizeAdjustedForPadding:
_clear
_drawVerticalGuidesForTimeline:padding:
_drawHorizontalGuideAtY:withPadding:
_drawLineChartWithPoints:color:padding:
_drawChangeIndicatorForPoints:changeLabel:color:padding:
_drawMarketClosedIndicator
bounds
_drawLastUpdatedLabel:
setContentMode:
setCompositingFilter:
graphView
removeFromSuperview
setGraphView:
currentQuoteView
setCurrentQuoteView:
setZPosition:
addSubview:
setFrame:
setFillColor:
addSublayer:
setPosition:
bezierPath
setColors:
setLocations:
setMask:
setStartPoint:
setEndPoint:
setTextAlignment:
dateFormatFromTemplate:options:locale:
setFont:
setNeedsDisplay
setNeedsLayout
layoutIfNeeded
initWithSize:
drawViewHierarchyInRect:afterScreenUpdates:
imageWithActions:
loadChartWithStockTimeline:forStock:flagType:completion:
loadStaleChartWithStockTimeline:forStock:completion:
loadNoChartEmpty:
image
graphImage
currentQuoteImage
setShowCurrentChangeIndicator:
_showCurrentChangeIndicator
_image
_graphImage
_currentQuoteImage
_graphView
_currentQuoteView
dictionaryWithObjects:forKeys:
_startOperation:
operationWithTask:
_task
_result
_isFinalized
_stocks
setDateStyle:
setTimeStyle:
_pointsForOneDayRangeFromTimeline:withinGraphSize:
_pointsForOneWeekRangeFromTimeline:withinGraphSize:
_lowerBoundForTimelineChart:
_upperBoundForTimelineChart:
_pointForPrice:betweenLow:andHigh:inGraphSize:symbol:
components:fromDate:toDate:options:
hour
autoupdatingCurrentCalendar
isDate:inSameDayAsDate:
valueWithCGPoint:
_movingAverageDatapointsForTimeline:periodCount:datapointCallback:
_date
updateStockData:
stockValueCount
chartInterval
stockValues
sortUsingComparator:
enumerateObjectsWithOptions:usingBlock:
_indexOfEntryAtDate:
objectAtIndex:
initWithDouble:
initWithStockData:
previousClosePriceForDate:
startDate
endDate
hasData
_priceDataSet
symbolType
regular
colorWithRed:green:blue:alpha:
setScaleMode:
_changeLabelNodeWithText:
_pointsFromTimeline:withinChartSize:
_colorForDirection:
_drawVerticalGuidesForTimeline:padding:inScene:
_startingPointYFromPoints:timeline:padding:chartSize:
_drawHorizontalGuideAtY:withPadding:inScene:
_drawLineChartWithPoints:color:padding:inScene:
_drawChangeIndicatorForPoints:changeLabel:color:padding:inScene:
_drawMarketClosedIndicatorInScene:
view
_renderSynchronouslyForTime:preRender:postRender:
labelNodeWithAttributedText:
setVerticalAlignmentMode:
removeAllChildren
addChild:
setHorizontalAlignmentMode:
bezierPathWithRoundedRect:cornerRadius:
shapeNodeWithEllipseOfSize:
textureWithCGImage:
setFillTexture:
_verticalTimeMarkingLinesForTimeline:
_timeMarkerStringsForTimeline:
_pointForPrice:betweenLow:andHigh:inChartSize:
_pointsForOneDayRangeFromTimeline:withinChartSize:
_pointsForOneWeekRangeFromTimeline:withinChartSize:
mainScreen
loadNoChartEmpty:completion:
v8@?0
com.apple.stocks.watchapp.loggingqueue
general
add-stock-query-ic
backgroundrefresh
chart
complication
demo
model
network
snapshot
stock-info-ic
stocks-table-ic
useractivitylaunch
watchconnectivity
com.apple.stocks.watchapp
dataType
TQ,N,V_dataType
tickerSymbol
T@"NSString",&,N,V_tickerSymbol
delegate
T@"<ComplicationModelDelegate>",W,N,V_delegate
OrbRemove
ORB_MENU_REMOVE
-[StockInfoInterfaceController _loadStockChartWithTTL:]
v24@?0@"StockTimeline"8@"NSError"16
RETRIEVING_CHART
v28@?0@"StockTimeline"8B16@"FetchOperationSingleStock"20
com.apple.stocks.basic
Stock
-[StockInfoInterfaceController _loadStockDataWithNewUpdate:withCachedDataLoadedHandler:]
v24@?0@"Stock"8@"NSError"16
v28@?0@"Stock"8B16@"FetchOperationSingleStock"20
NO_CHART_AVAILABLE
B32@?0@"Stock"8Q16^B24
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
companyName
T@"WKInterfaceLabel",W,N,V_companyName
priceChangeGroup
T@"WKInterfaceGroup",W,N,V_priceChangeGroup
price
T@"WKInterfaceLabel",W,N,V_price
chartGroup
T@"WKInterfaceGroup",W,N,V_chartGroup
chartStatusLabel
T@"WKInterfaceLabel",W,N,V_chartStatusLabel
marketStatusLabel
T@"WKInterfaceLabel",W,N,V_marketStatusLabel
style
T@"<StockInfoStyleable>",&,N,V_style
stockTimeline
T@"StockTimeline",&,N,V_stockTimeline
pendingLoadDataAndHandoff
TB,N,GisPendingLoadDataAndHandoff,V_pendingLoadDataAndHandoff
timelineFetchOperation
T@"FetchOperationSingleStock",W,N,V_timelineFetchOperation
chartImageManager
T@"ChartImageManager",&,N,V_chartImageManager
chartSyncGroup
T@"NSObject<OS_dispatch_group>",&,N,V_chartSyncGroup
downloadingTimeline
TB,N,GisDownloadingTimeline,V_downloadingTimeline
loadCompletion
T@?,C,N,V_loadCompletion
updateWithDemoStock
T@?,C,N,V_updateWithDemoStock
didBecomeActiveObserver
T@"<NSObject>",&,N,V_didBecomeActiveObserver
identifier
T@"NSString",R,N
group
T@"WKInterfaceGroup",W,N,V_group
tickerSymbolLabel
T@"WKInterfaceLabel",W,N,V_tickerSymbolLabel
companyNameLabel
T@"WKInterfaceLabel",W,N,V_companyNameLabel
exchangeNameLabel
T@"WKInterfaceLabel",W,N,V_exchangeNameLabel
failedCount
TQ,N,V_failedCount
lastFailedAt
T@"NSDate",&,N,V_lastFailedAt
StocksWatchErrorDomain
quoteStaleForComplication
TB,R,N,GisQuoteStaleForComplication
/var/mobile/Library/Preferences/Avalon/%@.dict
symbol
%@%@
EntryDate: %@   Symbol: %@   Price:%@ (Raw: %f)   Points Change:%@ (Raw: %f)   Percent Change: %@ (Raw: %f)   Market Cap: %@
EntryDate: %@   No Data
dataAvailable
TB,R,N,GisDataAvailable
entryDate
T@"NSDate",&,N,V_entryDate
listName
T@"NSString",&,N,V_listName
formattedPrice
T@"NSString",&,N,V_formattedPrice
priceValue
Td,N,V_priceValue
formattedPointsChange
T@"NSString",&,N,V_formattedPointsChange
pointsChangeValue
Td,N,V_pointsChangeValue
formattedPercentChange
T@"NSString",&,N,V_formattedPercentChange
percentChangeValue
Td,N,V_percentChangeValue
formattedMarketCap
T@"NSString",&,N,V_formattedMarketCap
marketCapValue
Td,N,V_marketCapValue
changeDirection
TQ,N,V_changeDirection
exchangeLastCloseDate
T@"NSDate",&,N,V_exchangeLastCloseDate
exchangeNextOpenDate
T@"NSDate",&,N,V_exchangeNextOpenDate
kStocksNotificationName_RefreshAndReloadComplication
-[StockComplicationController init]
%lu stock(s) updated.
v16@?0@"NSError"8
v24@?0@"NSArray"8@"NSError"16
v28@?0@"NSArray"8B16@"FetchOperationMultipleStocks"20
v16@?0@"CLKComplicationTimelineEntry"8
v16@?0@"CLKComplicationTemplate"8
com.apple.stocks.ShowDebugComplicationTimestamp
group.com.apple.stocks
ShowDebugComplicationTimestamp
complicationTemplatePopulator
T@"StockComplicationTemplatePopulator",&,N,V_complicationTemplatePopulator
complicationStockUpdateGroup
T@"NSObject<OS_dispatch_group>",&,N,V_complicationStockUpdateGroup
updatingComplicationData
TB,N,GisUpdatingComplicationData,V_updatingComplicationData
complicationType
TQ,N,V_complicationType
timeline
T@"StockTimeline",&,N,V_timeline
expectedStaleDate
T@"NSDate",&,N,V_expectedStaleDate
%@ %@ %@
loggingDescription
com.apple.stocks.watchapp.Device-First-Unlocked-Notification
com.apple.stocks.watchapp.device-lock-manager-access-queue
Unable to initialize a singleton!
accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
unlockedSinceBoot
TB,N,GhasBeenUnlockedSinceBoot,V_unlockedSinceBoot
query.results.item.response.finance.quote_service
quotes.quote
id_symbol
data_sources.data_source
exchanges.exchange
name
next_open
yyyy-MM-dd'T'HH:mm:ssZ
en_US_POSIX
status
avg_3m_volume.raw
change.raw
currency
dividend_yield.raw
day_high.raw
day_low.raw
open.raw
pe_ratio.raw
price.raw
volume.raw
year_high.raw
year_low.raw
defaults
T@"NSUserDefaults",&,N,V_defaults
syncManager
T@"NPSManager",&,N,V_syncManager
keysToSynchronize
T@"NSMutableSet",&,N,V_keysToSynchronize
com.apple.stocks.watchapp.watchextension.added-stock
com.apple.stocks.watchapp.watchextension.add-stock-query-launched
com.apple.stocks.watchapp.watchextension.removed-stock
com.apple.stocks.watchapp.watchextension.complication-selected-stock-biggest-mover
com.apple.stocks.watchapp.watchextension.complication-selected-stock-last-viewed
com.apple.stocks.watchapp.watchextension.complication-selected-stock-static-stock
com.apple.stocks.watchapp.watchextension.complication-duration-stale
com.apple.stocks.watchapp.watchextension.list-change-metric-marketcap
com.apple.stocks.watchapp.watchextension.list-change-metric-points
com.apple.stocks.watchapp.watchextension.list-change-metric-percentage
com.apple.stocks.watchapp.watchextension.list-companion-mutation
com.apple.stocks.watchapp.watchextension.list-symbol-count
com.apple.stocks.watchapp.watchextension.navigate-to-detail
com.apple.stocks.watchapp.watchextension.detail-loaded
TQ,R,N
v16@?0@"NSDictionary"8
stock
T@"Stock",&,N,V_stock
stockFetchOperation
T@"FetchOperationSingleStock",&,N,V_stockFetchOperation
stockMetadataFetchOperation
T@"FetchOperationSingleStock",&,N,V_stockMetadataFetchOperation
T@"FetchOperationSingleStock",&,N,V_timelineFetchOperation
preferences
T@"StocksWatchPreferences",R,W,N,V_preferences
T@"<StocksWatchDataModelEntryDelegate>",R,W,N,V_delegate
exchangeRate
TB,R,N,GisExchangeRate
stocksTableInterfaceController
T@"StocksTableInterfaceController",R,N
kTaskUserInfoKey_SnapshotExpirationDate
kTaskUserInfoKey_SnapshotUpdateUI
com.apple.stocks.watchapp.url-task-queue
v24@?0@"WKRefreshBackgroundTask"8^B16
Intent Did Run
v16@?0@"NSTimer"8
-[BackgroundRefreshManager _scheduleRefreshBasedOnMarketState:]
-[BackgroundRefreshManager _scheduleRefreshBasedOnMarketStateIfNecessaryAfterFirstUnlock]
Schedule next download
v20@?0Q8B16
schedulingAssertion
T@"BKSProcessAssertion",&,N,V_schedulingAssertion
urlSessionRefreshBackgroundTask
T@"WKURLSessionRefreshBackgroundTask",&,N,V_urlSessionRefreshBackgroundTask
earliestNextOpenDateInStocks
T@"NSDate",R,N
outsideRegularMarketTransitionDate
T@"NSDate",&,N
urlTaskQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_urlTaskQueue
urlTaskTimer
T@"NSTimer",&,N,V_urlTaskTimer
loadedInitialList
TB,N,GhasLoadedInitialList,V_loadedInitialList
requestedRefreshDate
T@"NSDate",R,N,V_requestedRefreshDate
com.apple.stocks.app-preferences-updated
v32@?0@"NSString"8@16^B24
B32@?0@"NSDictionary"8Q16^B24
hasStocksBeenSet
TB,R,N
lastModifiedTimeInterval
Td,R,N
stocks
T@"NSArray",&,N
WCStocksAppMessageSyncPreferences
WCStocksAppMessageUpdate
com.apple.stocks.sessionutility
timestamp
-[ExtensionSessionContextManager session:didFinishUserInfoTransfer:error:]
reachable
unreachable
sessionUtilityQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionUtilityQueue
_enqueuedMessages
T@"NSMutableDictionary",&,N,V__enqueuedMessages
applicationContext
T@"NSDictionary",R,N,V_applicationContext
range
meta.feature
query.results.item.response.data-series
content
v32@?0@"NSDictionary"8Q16^B24
error
ticker
series.uri
values-meta.value
@32@?0@"NSDictionary"8Q16^B24
change
close
mktcap
percent
series.p
Exchange-Status
Exchange-Close-Time
Exchange-Open-Time
gmtoffset
previous_close
Company-Name
Exchange-Name
stocks.list.table
stocks.list.stock-row
stocks.list.stock-row.ticker-symbol
stocks.list.stock-row.change
stocks.list.stock-row.price
stocks.list.add-stock
stocks.list.attribution-image
com.apple.stocks.watchapp.stockswatchdatamodel.stocks-queue
v16@?0@"NSArray"8
-[StocksWatchDataModel _loadWithPersistedStocks:lastModifiedDate:]
@"<NSCopying>"24@?0@"Stock"8Q16
NullSymbol_%lu
@"Stock"24@?0@"Stock"8Q16
Background session for watch data updates.
-[StocksWatchDataModel preferences:receivedNotificationName:didUpdateStockList:lastModifiedDate:]
Foreground session for watch data updates.
complicationModel
T@"ComplicationModel",&,N,V_complicationModel
T@"StocksWatchPreferences",&,N,V_preferences
cache
T@"StockCache",&,N,V_cache
foregroundSession
T@"NSURLSession",&,N,V_foregroundSession
backgroundSession
T@"NSURLSession",&,N,V_backgroundSession
backgroundSessionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_backgroundSessionQueue
urlSessionDelegate
T@"StocksWatchURLSessionDelegate",&,N,V_urlSessionDelegate
stocksFetchOperation
T@"FetchOperationMultipleStocks",&,N,V_stocksFetchOperation
backoffTimer
T@"BackoffTimer",R,N,V_backoffTimer
observers
T@"NSHashTable",&,N,V_observers
entries
T@"NSMutableDictionary",&,N,V_entries
Td,N,V_lastModifiedTimeInterval
_locked_stocks
T@"NSArray",&,N,V__locked_stocks
_locked_stockListDirty
TB,N,G_locked_isStockListDirty,V__locked_stockListDirty
stocksQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_stocksQueue
_safe_stocks
T@"NSArray",&,N,V__safe_stocks
lastViewedTickerSymbol
T@"NSString",&,N,V_lastViewedTickerSymbol
appState
TQ,N
runningInStoreDemoMode
TB,R,N,GisRunningInStoreDemoMode
localeManager
T@"LocaleManager",R,N,V_localeManager
rowDataType
Tq,N
complicationTickerSymbol
T@"NSArray",R,N
dateForScheduledStockListRequest
T@"NSDate",R,N,V_dateForScheduledStockListRequest
dateForScheduledStockTimelineRequest
T@"NSDate",R,N,V_dateForScheduledStockTimelineRequest
T@"NSDate",W,N
changeAsPercent
Tf,R,N
%@.background-session
backgroundSessionIdentifier
backgroundDownloadTaskErrors
T@"NSMutableArray",&,N,V_backgroundDownloadTaskErrors
runningTasks
T@"NSMutableDictionary",&,N,V_runningTasks
%@.%@.requestqueue
-[StockDataUpdater stockUpdateManager:didUpdateStocks:updates:]
-[StockDataUpdater stockUpdateManager:failedToUpdateStocks:updates:error:]
observer
T@"<StockDataUpdaterObservable>",W,N,V_observer
requestQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_requestQueue
stockUpdateManager
T@"StockUpdateManager",&,N,V_stockUpdateManager
ADD_STOCK
ADD_STOCK_SEARCHING
ADD_STOCK_NO_RESULTS
v32@?0@"Stock"8Q16^B24
-[AddStockQueryInterfaceController symbolValidator:didFailWithError:]
symbolValidator
T@"SymbolValidator",&,N,V_symbolValidator
queriedStocks
T@"NSArray",&,N,V_queriedStocks
currentSymbols
T@"NSSet",&,N,V_currentSymbols
searchingLabel
T@"WKInterfaceLabel",W,N,V_searchingLabel
queryResultsTable
T@"WKInterfaceTable",W,N,V_queryResultsTable
noResultsLabel
T@"WKInterfaceLabel",W,N,V_noResultsLabel
watch_stocks
watch_exchanges
watch_lastModified
companionDefaults
T@"NSUserDefaults",&,N,V_companionDefaults
Localizable
MM-dd-yy hh:mm:ss
com.apple.stocks.watchapp.watchextension
nsm_bundleIdentifier
v24@?0@"NSString"8@"NSDictionary"16
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NSArray"8@"NSArray"16@"NSArray"24
persistence
T@"<StocksSyncPersistable>",R,N,V_persistence
T@"<StocksSyncPreferencesDelegate>",R,W,N,V_delegate
POSITIVE_NUMBER_SIGN
NEGATIVE_NUMBER_SIGN
%C%@
numberFormatter
T@"NSNumberFormatter",&,N,V_numberFormatter
percentFormatter
T@"NSNumberFormatter",&,N,V_percentFormatter
pointChangeFormatter
T@"NSNumberFormatter",&,N,V_pointChangeFormatter
textDirectionIsRightToLeft
TB,N,V_textDirectionIsRightToLeft
plusSign
T@"NSString",R,N,V_plusSign
minusSign
T@"NSString",R,N,V_minusSign
T@"NSString",R,N,V_currency
com.apple.stocks.watchapp.stockwatchdataformattercache-access
dataFormatters
T@"NSMutableDictionary",&,N,V_dataFormatters
CLKLaunchedTimelineEntryDateKey
backgroundRefreshManager
T@"BackgroundRefreshManager",&,N,V_backgroundRefreshManager
stockGroup
T@"WKInterfaceGroup",W,N,V_stockGroup
tickerDisplayNameLabel
T@"WKInterfaceLabel",W,N,V_tickerDisplayNameLabel
changeLabel
T@"WKInterfaceLabel",W,N,V_changeLabel
priceLabel
T@"WKInterfaceLabel",W,N,V_priceLabel
stockGroupBackgroundColor
T@"UIColor",W,N,V_stockGroupBackgroundColor
changeColor
T@"UIColor",W,N,V_changeColor
T@"NSString",C,N,V_name
T@"NSString",C,N,V_price
T@"NSString",C,N,V_change
Multi
Single
Foreground
Background
Data
Metadata
Timeline
ScrollingSymbolList
-[StocksTableInterfaceController willActivate]
-[StocksTableInterfaceController didAppear]
-[StocksTableInterfaceController didDeactivate]
ViewStockInfo
-[StocksTableInterfaceController _reloadTableWithStocks:]
table
T@"WKInterfaceTable",W,N,V_table
attributionImage
T@"WKInterfaceImage",W,N,V_attributionImage
positiveColor
T@"UIColor",&,N,V_positiveColor
negativeColor
T@"UIColor",&,N,V_negativeColor
positiveBackgroundColor
T@"UIColor",&,N,V_positiveBackgroundColor
negativeBackgroundColor
T@"UIColor",&,N,V_negativeBackgroundColor
T{StocksTableStyle=ddQddd},N,V_style
stockInfoState
T@"StockInfoState",&,N,V_stockInfoState
pendingStockInfoState
T@"StockInfoState",&,N,V_pendingStockInfoState
pendingComplicationDetailsNavigation
TB,N,GisPendingComplicationDetailsNavigation,V_pendingComplicationDetailsNavigation
addStockRowIndex
TQ,N,V_addStockRowIndex
runningPPT
TB,N,GisRunningPPT,V_runningPPT
pptScrollingIterationCount
TQ,N,V_pptScrollingIterationCount
inPrimaryUI
TB,R,N,GisInPrimaryUI
staleDateForPrimaryUI
T{StocksTableStyle=ddQddd},R,N,V_style
addStockLabel
T@"WKInterfaceLabel",W,N,V_addStockLabel
STOCKS_TITLE
NTKColoringLabelTwoToneStyleInMonochromeKey
__placeholder__
NO_MARKET_DATA_LONG
NO_MARKET_DATA_SHORT
NO_MARKET_DATA_MICRO
LISTNAME_NO_MARKET_DATA_TITLE_FORMAT
-[StockComplicationTemplatePopulator _entryTemplateForData:metric:complicationFamily:]
STOCKS_INVALID_METRIC_SMALL
L: %@, N: %@
L: %@, N: none
%@  %@  %@
%@  %@
-[StockComplicationTemplatePopulator _entryLargeUtilitarianWithData:metric:]
COMPLICATION_GRAPHIC_BEZEL
COMPLICATION_GRAPHIC_BEZEL_SHORT
-[StockComplicationTemplatePopulator placeholderTemplateForComplicationFamily:]
CircularPlaceholder
STOCKS_NONE_SMALL
ExtraLargePlaceholder
STOCKS_STALE_LARGE
*%@ ago
STOCKS_NONE_LARGE
ModularPlaceholder
UtilitarianSmallFlatPlaceholder
STOCKS_NONE_LARGE_ALL_CAPS
GraphicCircularPlaceholder
GraphicCornerPlaceholder
-[StockComplicationTemplatePopulator _staleTemplateForTickerSymbol:complicationFamily:lastUpdate:]
STOCKS_STALE_SMALL
%@ %@
COMPLICATION_GRAPHIC_STALE
%@, %@
%@DirectionArrowUp
Padded
COMPLICATION_ARROW_DOWN
COMPLICATION_ARROW_UP
-[StockComplicationTemplatePopulator _textForMetric:data:]
stockMarketCapFormatter
T@"NSNumberFormatter",R,N
cachedDownImage
T@"UIImage",&,N,V_cachedDownImage
cachedDownImageColor
T@"UIColor",&,N,V_cachedDownImageColor
cachedUpImage
T@"UIImage",&,N,V_cachedUpImage
cachedUpImageColor
T@"UIColor",&,N,V_cachedUpImageColor
debugComplicationTimestampEnabled
TB,N,GisDebugComplicationTimestampEnabled,V_debugComplicationTimestampEnabled
com.apple.stocks.ppt
DefaultPreferences
plist
SimulatorDebug
v16@?0@"NSNotification"8
/private/var/mobile/
TB,R,N,GisRunningInStoreDemoMode,V_runningInStoreDemoMode
T@"<StocksWatchPreferencesDelegate>",R,W,N,V_delegate
appPreferences
T@"StocksSyncAppPreferences",&,N,V_appPreferences
bridgePreferences
T@"StocksSyncBridgePreferences",&,N,V_bridgePreferences
pptDefaults
T@"NPSDomainAccessor",&,N,V_pptDefaults
complicationDisplayMode
defaultStockSymbol
lastDefaultStockSymbolReportedForMetrics
T@"NSString",W,N
T@"NSString",&,N
%@%@ (%@)
layout
T{StockInfoStyle=QdddddqddddddddBd},R,N
onePieceImage
T@"UIImage",R,N,V_onePieceImage
twoPieceBackgroundImage
T@"UIImage",R,N,V_twoPieceBackgroundImage
twoPieceForegroundImage
T@"UIImage",R,N,V_twoPieceForegroundImage
lastUpdateTime
Td,R,N,V_lastUpdateTime
v32@?0@"VerticalLine"8Q16^B24
NSCTFontUIFontDesignRounded
%@-%lu
cachedChartImages
T@"NSMutableDictionary",&,N,V_cachedChartImages
T{ChartSceneStyle=dddd},R,N,V_style
regularPadding
T{UIEdgeInsets=dddd},R,N,V_regularPadding
chartSize
T{CGSize=dd},R,N,V_chartSize
additionalLayoutPadding
T{UIEdgeInsets=dddd},N,V_additionalLayoutPadding
guessHours
TB,N,GshouldGuessHours,V_guessHours
useRoundedFont
TB,N,GshouldUseRoundedFont,V_useRoundedFont
%@ Data? %ld bytes. Error? %@.
data
T@"NSMutableData",&,N,V_data
T@"NSError",&,N,V_error
sessionType
TQ,R,N,V_sessionType
%@:%@:%@
tickerSymbols
T@"NSArray",R,N,V_tickerSymbols
%@:%@:%@:%@
T@"NSString",R,N,V_tickerSymbol
requestType
TQ,R,N,V_requestType
format
json
lang
region
applewf/chart
type
apple_detail
mktcapseries
crossProduct
optimized
initialLoadCompletion
T@?,C,N,V_initialLoadCompletion
<StockTimeline %p>: %@ Exchange Status: %@, Exchange Open Date: %@, Exchange Close Date: %@, Error Code: %lu, Range: %@, Server Datapoints: %lu, Synthesized Datapoints: %lu
T@"NSString",&,N,V_companyName
exchangeName
T@"NSString",&,N,V_exchangeName
exchangeStatus
Tq,N,V_exchangeStatus
exchangeCloseDate
T@"NSDate",&,N,V_exchangeCloseDate
exchangeOpenDate
T@"NSDate",&,N,V_exchangeOpenDate
Td,N,V_lastUpdateTime
T@"NSDate",&,N,V_outsideRegularMarketTransitionDate
unit
T@"NSString",&,N,V_unit
timezone
T@"NSTimeZone",&,N,V_timezone
errorCode
TQ,N,V_errorCode
fetchTime
Td,N,V_fetchTime
serverDatapoints
T@"NSArray",&,N,V_serverDatapoints
synthesizedDatapoints
T@"NSMutableArray",&,N,V_synthesizedDatapoints
previousDayClosePrice
Td,R,N,V_previousDayClosePrice
TQ,R,N,V_range
datapoints
datapointCount
highDatapoint
T@"StockDetailData",R,N,V_highDatapoint
lowDatapoint
T@"StockDetailData",R,N,V_lowDatapoint
/var/mobile/Library/Preferences/group.com.apple.stocks.plist
watch_
watchlist
T@"NSDictionary",&,N,V_watchlist
com.apple.stocks.bridge
DefaultStock
DefaultComplication
com.apple.stocks.watchapp.bridge-preferences-updated
lastViewed
biggestMover
defaultStockOptionLastViewed
T@"NSString",R
defaultStockOptionBiggestMover
defaultStockOptionStaticStock
maximumNumberOfStocks
hasComplicationDisplayModeBeenSet
%@.stock-cache
exchanges
-[StockCache _commonCacheDirectoryURL]
-[StockCache _createExchangesCacheDiskFolder]
-[StockCache _createStocksCacheDiskFolder]
-[StockCache async_populateStocks:completion:]_block_invoke
-[StockCache removeStock:]_block_invoke
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
languageArabic
TB,R,N,GisLanguageArabic
languageHindi
TB,R,N,GisLanguageHindi
locale
T@"NSLocale",R,N,V_locale
changeColorSwapped
TB,R,N,GisChangeColorSwapped,V_changeColorSwapped
textDirection
TQ,R,N,V_textDirection
textAttachmentDirectionIsRightToLeft
TB,R,N,V_textAttachmentDirectionIsRightToLeft
staleTextColor
T@"UIColor",R,N
CHART_LAST_UPDATED
v16@?0@"UIGraphicsImageRendererContext"8
graphView
T@"UIView",&,N,V_graphView
currentQuoteView
T@"UIView",&,N,V_currentQuoteView
showCurrentChangeIndicator
TB,N,GshouldShowCurrentChangeIndicator,V_showCurrentChangeIndicator
image
T@"UIImage",R,N,V_image
graphImage
T@"UIImage",R,N,V_graphImage
currentQuoteImage
T@"UIImage",R,N,V_currentQuoteImage
v32@?0@8Q16^B24
FetchOperationError
v24@?0@8@"NSError"16
%@ for %@
T@"NSArray",R,N,V_stocks
%@ for %@ (%@)
T@"Stock",R,N,V_stock
CHART_MARKET_CLOSED
v16@?0@"StockDetailData"8
v32@?0@"StockDetailData"8Q16^B24
Date: %@  Price: %f
date
T@"NSDate",&,N,V_date
Td,N,V_price
q24@?0@"PriceEntry"8@"PriceEntry"16
v32@?0@"PriceEntry"8Q16^B24
startDate
endDate
hasData
mutualfund
shortestChartInterval
Tq,R,N
stock.detail.company-name
stock.detail.price
stock.detail.chart
stock.detail.chart-loading
compact
T{DeviceVariantSize={CGRect={CGPoint=dd}{CGSize=dd}}},R,N
regular
variant394h
variant448h
T@"UIImage",R,N
Updating complication metric from %lu to %lu.
Updating complication selected ticker symbol from %{public}@ to %{public}@
%s %{public}@ %f
Received timeline operation for %{public}@
Did not receive timeline operation for %{public}@
Update user activity with %{public}@ for handoff.
%s %{public}@ %d
Updating info with %{public}@
Entering foreground for %{public}@; Load Data and Handoff
%@: Preparing for snapshot.
%@: Completing loading of stock info for snapshot.
Updating top info for stock (%@: %@}.
Checking whether it's okay to proceed with request. lastFailedAt? %@ intervalSinceLastFailedAt? %f retryInterval? %f failedCount? %lu
Reset backoffTimer.
Increment failedCount in backoffTimer.
Unable to parse timeline for %{public}@: %{public}@
Checking to see if complication data is stale for %{public}@. Is stale? %{public}@ dateQuoteLastUpdated? %{public}@ Is missing timeline? %{public}@
While checking to see if the complication data is stale, we could not find the stock object for the complication ticker symbol (%{public}@)
While checking to see if the complication data is stale, we could not find the complication ticker symbol.
Complication stock is stale, so we are attempting to refresh it with a foreground request.
Running foreground refresh of stock timeline.
Completed foreground refresh of stock timeline. %{public}@
Running foreground refresh of stock list.
Completed foreground refresh of stock list. %{public}@
Scheduling a snapshot in %{public}@.
Scheduled a snapshot in %{public}@. Error? %{public}@
Reloading complication timeline for %{public}@.
Reloading complication timeline with empty placeholder.
Received notification to refresh and reload complication data for %{public}@
Received notification to refresh and reload complication data for %{public}@, but the stock object could not be found.
Received notification to refresh and reload complication data, but we could not find the complication ticker symbol.
Current timeline entry (chart) will be a data entry. (%{public}@) entryDate? %{public}@.
Current timeline entry (chart) will be a stale entry. (%{public}@) entryDate? %{public}@.
Current timeline entry (chart) will be a no-market data entry. (%{public}@) entryDate? %{public}@.
Current timeline entry will be a stale entry. (%{public}@) entryDate? %{public}@.
Possibly loading Siri face entry. %{public}@: Last Close? %{public}@; Next Open? %{public}@
Current timeline entry will be a data entry. (%{public}@) entryDate? %{public}@.
Attempted to load current timeline entry, but we could not find the stock object for the complication ticker symbol %{public}@.
Attempted to load current timeline entry, but we could not find the complication ticker symbol.
Current timeline entry (chart) will be a placeholder entry. %{public}@: entryDate? %{public}@.
Current timeline entry will be a placeholder entry. %{public}@: entryDate? %{public}@.
Loading placeholder timeline entry for CLKComplicationFamilyGraphicRectangular family.
Loading placeholder timeline entry.
Current timeline (chart) for %{public}@ will become stale at %{public}@; Open Market? %{public}@; nextOpenDate? %{public}@
Current timeline for %{public}@ will become stale at %{public}@; Open Market? %{public}@; nextOpenDate? %{public}@
Unable to populate a stale entry for %{public}@. Family? %ld
One of those situations where ClockKit is calling us for additional future timeline entries, but we have none to give.
Attempted to load stale timeline entry, but we could not find the stock object for the complication ticker symbol %{public}@.
Attempted to load stale timeline entry, but we could not find the complication ticker symbol.
Updated timeline for %{public}@. Is complication Stock? %{public}@ (%{public}@) Is updating complication data? %{public}@
Updating complication metric from %ld to %ld.
Updating ticker symbol from %{public}@ to %{public}@.
Setting up %{public}@.
Does raw stock price contain comma? %@
Fetch stock basic data for %{public}@ with ttl %f
Fetch stock timeline for %{public}@ with ttl %f
Scheduled background fetch of stock timeline for %{public}@. earliestBeginDate? %{public}@. %{public}@ %{public}@
Attempted to finalize a data %{public}@ with an error, but we did not have one pending. Error: %{public}@
Attempted to finalize a data %{public}@ with an error, but the session type is reported as background (this shouldnh't happen). Error: %{public}@
Looking to parse data for %{public}@, but that data was not found in the response.
Process stock data for %{public}@; error: %{public}@
Attempted to finalize a data %{public}@ with data, but we did not have one pending. %{public}@ Error: %{public}@
Attempted to finalize %{public}@ with data, but the session type is reported as background (this shouldnh't happen). Error: %{public}@
Attempted to finalize a timeline %{public}@ with an error, but we did not have one pending. Error: %{public}@
Process timeline %{public}@; error: %{public}@
No error for timeline, but no data available either.
Attempted to finalize a timeline %{public}@ with data, but we did not have one pending. StockTimeline: %{public}@ Error: %{public}@
Resuming %{public}@: %{public}@.
Initializing BackgroundRefreshManager on launch.
Asked to handle a task of type %@ that we don't understand. %@
Completing a Background URL Request. Is snapshot needed? %{public}@
Asked to complete a task, but we did not have a task waiting.
Receiving App Refresh Task.
Receiving Intent Did Run Refresh Task.
Acquired Intent Did Run assertion.
Invalidating Intent Did Run assertion.
Unable to acquire Intent Did Run assertion.
Start a snapshot [%ld].
We have a stock list and the market is open. Base snapshot expiration on date snapshot was requested or now.
We have a stock list and the market is closed. Normally, we would base snapshot expiration on earliest market open date. However, it is currently after that date, so base snapshot expiration off of now.
We have a stock list and the market is closed. Base snapshot expiration on earliest market open date.
There is no stock list. Our snapshot will never expire.
Completing a snapshot with expiration %{public}@.
Receiving URL Session Refresh Task for %{public}@.
Was already processing URL Session Refresh Task for %{public}@; complete it and process the new one.
Receiving and completing Watch Connectivity Refresh Task.
Attempted to schedule a background refresh, but we received an error: %{public}@
Scheduled a background refresh for %{public}@.
%s No stock list; schedule refresh in 30m to check for list.
%s Earliest next open date is in the future; schedule a BAR for that time.
%s Earliest next open date is in the past; schedule a background download in 15m.
%s Attempting to schedule, but we already have an assertion; bail.
%s Attempting to schedule; acquire an assertion if possible.
Finished scheduling; invalidate assertion.
Unable to acquire assertion; just try to schedule anyway.
Finished scheduling without assertion.
Scheduling a snapshot.
Scheduled a snapshot. Error? %{public}@
Asked to schedule a background download, but the requestedRefreshDate is nil. Is stock list empty? %{public}@.
Finished background requests.
NSURLSession Unknown Error; rely on App Refresh task instead.
List of stocks has been mutated; schedule a refresh if necessary and schedule a snapshot.
Selected stock has been updated; schedule a refresh if necessary.
Stock list is empty; earliestNextOpenDateInStocks is nil.
We have an earliestNextOpenDate but we don't have an outsideRegularMarketTransitionDate; set our transition date.
Currently not in a regular market but within Yahoo's sync delay; pretend we're in an open market.
earliestNextOpenDate is nil but we have a stock list (%ld)! We don't have market status data, so set to now.
Activating default session.
Sending %@
Error sending messages %@ (%@)
Error sending enqueued messages, but session is reachable. Should we just retry?
Could not send enqueued messages due to session not being active(%ld) or reachable(%d).
Enqueueing sync request message.
Enqueueing update request message.
WCSession Activation failed with error: %@
WCSession is now activated.
Received application context change: %@.
Received wake-up for complication change at: %@
User info transfer (%@) failed with error: %@
Session reachability changed: session %@ is now %@.
Requesting sync on launch (missing stock list).
Loading an empty stock list.
%s shouldLoad? %d self.lastModifiedTimeInterval? %f preferencesLastModifiedTimeInterval? %f persistedStockCount? %lu
Checking if we should notify observers; isNewStocksListEqualToPrevious? %d
Updating stock list due to new stock(s).
Asked to check complication preferences. dataType? %lu defaultTickerSymbolOrName? %{public}@ lastViewedTickerSymbol? %{public}@ firstStockInList? %{public}@
Asked to fetch stock list, but our backoffTimer declined.
Fetch stock list with ttl %f
Resuming %{public}@: %{public}@. Stocks in need of updating: %{public}@
Asked to schedule background stock list fetch for %{public}@, but we already have one scheduled: %{public}@ (%{public}@).
Scheduled background stock list fetch for %{public}@. earliestBeginDate? %{public}@. %{public}@ %{public}@
Asked to fetch stock for %{public}@, but our backoffTimer declined.
Asked to fetch stock for %{public}@, but an entry does not exist for this symbol.
Asked to fetch timeline for %{public}@, but our backoffTimer declined.
Asked to fetch timeline for %{public}@, but an entry does not exist for this symbol.
Asked to schedule background stock timeline fetch for %{public}@, but we already have one scheduled: %{public}@ (%{public}@).
Asked to schedule background timeline fetch for %{public}@, but an entry does not exist for this symbol.
Updating last viewed ticker symbol from %{public}@ to %{public}@
%s Received %{public}@ notification to update from preferences.
Tracking %{public}@: %{public}@. Response? %{public}@
Session %{public}@ (%{public}@) finished background events.
%{public}@ (%{public}@) received data.
%{public}@ (%{public}@) finished downloading to %@.
%{public}@ (%{public}@) completed.
%{public}@ (%{public}@) finished with an error: %{public}@
%s Stock Count? %ld
%s Stock Count? %ld, Error? %{public}@
User cancelled dictation input, so we are bouncing back to the Stocks Table.
Symbol results from query input: %@
%s %@
Launching; setup %{public}@
Attempting to launch Stocks from Siri (most likely) %{public}@.
Attempting to launch Stocks from complication.
Attempting to launch Stocks from unknown user activity: %@
Update user activity for stock list handoff.
Attempting to navigate to %{public}@, but the stock does not exist in the user's list of stocks.
Attempting to navigate to details for %{public}@.
Already displaying the info for %{public}@.
Attempting to navigate to details for %{public}@, but the table isn't loaded yet; setup the pendingStockInfoState.
Navigate to StockInfoInterfaceController for %{public}@ and prepare for snapshot.
Asked to navigate to StockInfoInterfaceController for %{public}@ and prepare for snapshot, but the stock object could not be found.
Asked to navigate to StockInfoInterfaceController for the complication stock and prepare for a snapshot, but the complication ticker symbol is not set.
Navigate to StocksTableInterfaceController and prepare for snapshot.
Wasn't viewing table; popping to table.
Retrieved stock list (%ld). ttlWasExpired? %@ Operation? %@
%@: Completing loading of stocks table for snapshot.
Stock list has been updated; reload table.
Navigating to complication ticker symbol's details (%{public}@)
Was waiting to navigate to complication ticker symbol's details, but complication ticker symbol has not been set.
Updating %@.
Updating row for stock (%@: %@}.
%s Unsupported family: %ld
%s Unsupported metric: %ld
Looks like this data entry is more than a week old. Is the server returning stale data again?
Received %{public}@.
Handling preferences change (%{public}@).
Unknown stock object while migrating: %{public}@
Syncing stock list (%lu) to companion: %@.
Empty stock list in cache.
Loading cached stock list (%lu): %@
Asked for chart image for %{public}@.
Returning cached chart image (%f).
Drawing new chart image (%f).
Received task description that we did not know how to handle: %{public}@
Asked to process response that we do not know how to handle: %{public}@
Attempted to finalize a %{public}@ with an error, but we did not have one pending. Error: %{public}@
Process multi response (%lu bytes) for %{public}@
Attempted to finalize %{public}@ with data, but we did not have one pending. Stocks: %{public}@
Attempting to process a single response, but we can't find the %{public}@ to process it. Symbol? %{public}@
Process single %{public}@ response (%lu bytes) for %{public}@
%s Error: %@
Cached %@ (%ld, %@, %@) to %@
Error caching %@ (%ld, %@, %@) to %@
Error caching %@ (%ld, %@, %@): %{public}@
Error loading cached exchange data for %@ from %@: %{public}@
Populated %@ with cached exchange data
No cached exchange data for %@ at %@
Cached %@ (%@, %@) to %@
Error caching %@ (%@, %@) to %@
Error caching %@ (%@, %@): %{public}@
Error loading cached stock data for %@ from %@: %{public}@
Populated %@ with cached stock data
No cached stock data for %@ at %@
%s Error loading cachedExchangeItems: %@
%s Error loading cachedStockItems: %@
%s Error removing unused cached exchange item: %@
%s Error removing unused cached stock item: %@
Finished laying out chart with a timeline for %{public}@.
Finished laying out a stale chart for %{public}@.
Finished laying out an empty chart for %{public}@.
Clear existing chart.
Asked to snapshot the chart, but we already have a cached one; use that: %@
Asked to snapshot the chart. We did not have a cached one, so we created a new one: %@
Asked to snapshot the graph, but we already have a cached one; use that: %@
Asked to snapshot the graph. We did not have a cached one, so we created a new one: %@
Asked to snapshot the current quote, but we already have a cached one; use that: %@
Asked to snapshot the current quote. We did not have a cached one, so we created a new one: %@
Completed %{public}@ in %0.1fms
Started %@ at %@
High(%f) and low(%f) are equal for %{public}@. Price? %f
Preparing to draw chart.
Post render.
Preparing to draw chart (empty).
Post render (empty).
y: %f, price: %f
ComplicationModel
StockInfoInterfaceController
ForegroundActionable
NSObject
StocksWatchDataObservable
Snapshottable
StockQueryResultRowController
BackoffTimer
ComplicationStaleQuote
Demo
StockDetailData
StockComplicationController
CLKComplicationDataSource
Description
DeviceLockManager
StockParser
StocksSyncBridgePersistence
StocksSyncPersistable
ChangeDirection
StocksWatchDataModelEntry
ExchangeRate
Stocks
BackgroundRefreshManager
StocksSyncAppPreferences
ExtensionSessionContextManager
WCSessionDelegate
StockTimelineParser
StocksWatchDataModel
StocksWatchDataModelEntryDelegate
StocksTableStyleFactory
Change
VerticalLine
DashedVerticalLine
LongThickVerticalLine
LongThinVerticalLine
NoLine
StocksWatchURLSessionDelegate
NSURLSessionDataDelegate
NSURLSessionTaskDelegate
NSURLSessionDelegate
StockDataUpdater
StockUpdateObserver
AddStockQueryInterfaceController
SymbolValidatorDelegate
StocksSyncWatchlistPersistence
StocksBundleIdentifier
StocksWatchParser
StocksSyncPreferences
StockWatchDataFormatter
StockWatchDataFormatterCache
ExtensionDelegate
WKExtensionDelegate
WKExtensionTestingDelegate
StockRowController
StocksTableInterfaceController
AddStockRowController
StockComplicationTemplatePopulator
StocksWatchPreferences
StocksSyncPreferencesDelegate
StockInfoStyleUtility
StockInfoStyleFactory
StockInfoStyleCompact
StockInfoStyleable
StockInfoStyleRegular
StockInfoStyleVariant394h
StockInfoStyleVariant448h
ChartImage
ChartImageManager
ChartSceneStyleFactory
StocksWatchURLResponse
StocksWatchURLResponseMulti
StocksWatchURLResponseSingle
StocksWatchRequest
StockInfoState
StockTimeline
NSCopying
WatchlistDemoPersistence
StocksSyncBridgePreferences
StocksWatchURLResponseHandling
StockCache
NSMLocaleAdditions
LocaleManager
NSMColor
ChartView
Enumeration
FetchOperation
FetchOperationMultipleStocks
FetchOperationSingleStock
0 0@
ChartUtilities
PriceEntry
StockClosePriceData
Chart
DeviceVariant
ChartScene
@24@0:8@16
v32@0:8Q16@24
v24@0:8Q16
v24@0:8@16
v16@0:8
@16@0:8
Q16@0:8
@"<ComplicationModelDelegate>"
@"NSString"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@16Q24
v32@0:8@"StocksWatchDataModel"16@"NSError"24
v32@0:8@"StocksWatchDataModel"16Q24
v32@0:8@"StocksWatchDataModel"16@"NSArray"24
v32@0:8@"StocksWatchDataModel"16@"NSString"24
v32@0:8@"StocksWatchDataModel"16@"Stock"24
v32@0:8@"StocksWatchDataModel"16@"StockTimeline"24
v24@0:8@?16
v24@0:8@?<v@?>16
v24@0:8d16
v28@0:8B16@?20
v20@0:8B16
@?16@0:8
@"WKInterfaceLabel"
@"WKInterfaceGroup"
@"<StockInfoStyleable>"
@"StockTimeline"
@"FetchOperationSingleStock"
@"ChartImageManager"
@"NSObject<OS_dispatch_group>"
@"<NSObject>"
@"NSDate"
d16@0:8
v32@0:8@16@?24
v48@0:8@16@24Q32@?40
v32@0:8@"CLKComplication"16@?<v@?Q>24
v32@0:8@"CLKComplication"16@?<v@?@"CLKComplicationTimelineEntry">24
v32@0:8@"CLKComplication"16@?<v@?@"NSDate">24
v48@0:8@"CLKComplication"16@"NSDate"24Q32@?<v@?@"NSArray">40
v24@0:8@?<v@?@"NSDate">16
v32@0:8@"CLKComplication"16@?<v@?@"CLKComplicationTemplate">24
@"StockComplicationTemplatePopulator"
@"NSObject<OS_dispatch_queue>"
v40@0:8@16@24^@32
q24@0:8@16
v32@0:8q16@24
q24@0:8@"NSString"16
v32@0:8q16@"NSString"24
@"NSString"24@0:8@"NSString"16
@24@0:8@"NSString"16
v24@0:8@"NSString"16
v32@0:8@16@"NSString"24
@"NSUserDefaults"
@"NPSManager"
@"NSMutableSet"
@40@0:8@16@24@32
v40@0:8@16d24@?32
Q32@0:8@16@24
@48@0:8@16@24@32@40
@"Stock"
@"StocksWatchPreferences"
@"<StocksWatchDataModelEntryDelegate>"
@"BKSProcessAssertion"
@"WKURLSessionRefreshBackgroundTask"
@"NSTimer"
@32@0:8@16@24
v40@0:8@16q24@32
v40@0:8@16@24@?32
v40@0:8@16@24@32
v40@0:8@"WCSession"16q24@"NSError"32
v24@0:8@"WCSession"16
v32@0:8@"WCSession"16@"NSDictionary"24
v40@0:8@"WCSession"16@"NSDictionary"24@?<v@?@"NSDictionary">32
v32@0:8@"WCSession"16@"NSData"24
v40@0:8@"WCSession"16@"NSData"24@?<v@?@"NSData">32
v40@0:8@"WCSession"16@"WCSessionUserInfoTransfer"24@"NSError"32
v40@0:8@"WCSession"16@"WCSessionFileTransfer"24@"NSError"32
v32@0:8@"WCSession"16@"WCSessionFile"24
@"NSDictionary"
@"NSMutableDictionary"
Q24@0:8@16
@40@0:8@16@24^@32
@56@0:8@16@24Q32@40^@48
v32@0:8@"StocksWatchDataModelEntry"16@"Stock"24
v32@0:8@"StocksWatchDataModelEntry"16@"StockTimeline"24
v32@0:8d16@?24
v48@0:8@16@24@32@40
q16@0:8
v24@0:8q16
@"LocaleManager"
@"ComplicationModel"
@"StockCache"
@"NSURLSession"
@"StocksWatchURLSessionDelegate"
@"FetchOperationMultipleStocks"
@"BackoffTimer"
@"NSHashTable"
@"NSArray"
{StocksTableStyle=ddQddd}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@40@0:8d16d24@32
f16@0:8
v56@0:8^{CGContext=}16{CGPoint=dd}24{CGPoint=dd}40
@56@0:8{CGPoint=dd}16{CGPoint=dd}32@48
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@"NSMutableArray"
v40@0:8@16@24q32
v48@0:8@16@24q32@40
v40@0:8@"StockUpdateManager"16@"NSArray"24q32
v48@0:8@"StockUpdateManager"16@"NSArray"24q32@"NSError"40
@"<StockDataUpdaterObservable>"
@"StockUpdateManager"
v32@0:8@"SymbolValidator"16@"NSArray"24
v32@0:8@"SymbolValidator"16@"NSError"24
v32@0:8@16q24
@"WKInterfaceTable"
@"SymbolValidator"
@"NSSet"
@"<StocksSyncPersistable>"
@"<StocksSyncPreferencesDelegate>"
@20@0:8f16
@24@0:8f16f20
@28@0:8d16f24
@40@0:8@16I24@28I36
@"NSNumberFormatter"
v24@0:8@"HKWorkoutConfiguration"16
v24@0:8@"WKExtendedRuntimeSession"16
v24@0:8@"NSDictionary"16
v24@0:8@"NSUserActivity"16
v32@0:8@"INIntent"16@?<v@?@"INIntentResponse">24
v24@0:8@"NSSet"16
v24@0:8@"NSData"16
v24@0:8@"NSError"16
v32@0:8@"NSDictionary"16@?<v@?Q>24
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"NSString"16@"UILocalNotification"24
v40@0:8@"NSString"16@"NSDictionary"24@"NSDictionary"32
v40@0:8@"NSString"16@"UILocalNotification"24@"NSDictionary"32
v24@0:8@"UILocalNotification"16
B32@0:8@16@24
B32@0:8@"NSString"16@"NSDictionary"24
@"BackgroundRefreshManager"
d40@0:8@16@24d32
v104@0:8@16@24@32@40@48{StocksTableStyle=ddQddd}56
@"UIColor"
@40@0:8@16@24q32
{StocksTableStyle=ddQddd}16@0:8
v64@0:8{StocksTableStyle=ddQddd}16
@"WKInterfaceImage"
@"StockInfoState"
{StocksTableStyle="addStockFontSize"d"indexNameFontSize"d"maxIndexNameLength"Q"changeFontSize"d"maxChangeLabelWidth"d"priceFontSize"d}
@40@0:8@16Q24q32
@24@0:8q16
@48@0:8@16@24@32q40
@28@0:8@16B24
@32@0:8@16Q24
@40@0:8@16q24@32
@28@0:8Q16B24
@24@0:8Q16
@32@0:8Q16@24
@"UIImage"
v24@0:8@"StocksSyncPreferences"16
@28@0:8B16@20
@"<StocksWatchPreferencesDelegate>"
@"StocksSyncAppPreferences"
@"StocksSyncBridgePreferences"
@"NPSDomainAccessor"
@160@0:8@16{StockInfoStyle=QdddddqddddddddBd}24
@168@0:8@16@24{StockInfoStyle=QdddddqddddddddBd}32
d160@0:8@16{StockInfoStyle=QdddddqddddddddBd}24
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d24@0:8@16
{CGSize=dd}24@0:8@16
{StockInfoStyle=QdddddqddddddddBd}16@0:8
@"NSAttributedString"24@0:8@"Stock"16
@"NSAttributedString"32@0:8@"Stock"16@"UIColor"24
d24@0:8@"Stock"16
{CGSize=dd}24@0:8@"Stock"16
@48@0:8@16@24@32d40
@32@0:8{CGSize=dd}16
@40@0:8@16@24Q32
{CGSize=dd}64@0:8{UIEdgeInsets=dddd}16{CGSize=dd}48
v80@0:8^{CGContext=}16d24{UIEdgeInsets=dddd}32{CGSize=dd}64
v88@0:8^{CGContext=}16@24@32{UIEdgeInsets=dddd}40{CGSize=dd}72
v80@0:8^{CGContext=}16@24{UIEdgeInsets=dddd}32{CGSize=dd}64
@80@0:8@16@24{CGPoint=dd}32{UIEdgeInsets=dddd}48
@100@0:8@16B24@28@36@44{CGSize=dd}52{UIEdgeInsets=dddd}68
@36@0:8d16d24B32
{UIEdgeInsets=dddd}16@0:8
{CGSize=dd}16@0:8
v48@0:8{UIEdgeInsets=dddd}16
{ChartSceneStyle=dddd}16@0:8
{CGSize="width"d"height"d}
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
{ChartSceneStyle="statusFontSize"d"pointChangeFontSize"d"timeMarkerFontSize"d"timeMarkerBottomMargin"d}
{ChartSceneStyle=dddd}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"NSError"
@"NSMutableData"
@40@0:8Q16@24Q32
@32@0:8@16@?24
@24@0:8^{_NSZone=}16
@104@0:8@16@24@32q40@48@56d64Q72@80@88Q96
@"NSTimeZone"
@"StockDetailData"
@"NSLocale"
{CGSize=dd}48@0:8{UIEdgeInsets=dddd}16
v72@0:8@16@24@32{UIEdgeInsets=dddd}40
v56@0:8d16{UIEdgeInsets=dddd}24
v64@0:8@16@24{UIEdgeInsets=dddd}32
v56@0:8@16{UIEdgeInsets=dddd}24
@"UIView"
@24@0:8@?16
@32@0:8@?16@24
@"NSURLSessionTask"
@40@0:8@16{CGSize=dd}24
d80@0:8@16@24{UIEdgeInsets=dddd}32{CGSize=dd}64
v40@0:8@16Q24@?32
d64@0:8d16d24d32{CGSize=dd}40@56
{DeviceVariantSize={CGRect={CGPoint=dd}{CGSize=dd}}}16@0:8
v80@0:8@16@24@32{UIEdgeInsets=dddd}40@72
v64@0:8d16{UIEdgeInsets=dddd}24@56
v72@0:8@16@24{UIEdgeInsets=dddd}32@64
v64@0:8@16{UIEdgeInsets=dddd}24@56
d56@0:8d16d24d32{CGSize=dd}40
@ffffff
333333
333333
333333
?333333
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.stocks.watchapp.watchextension</string>
<key>com.apple.private.security.container-required</key>
<true/>
<key>com.apple.security.application-groups</key>
<array>
<string>group.com.apple.stocks</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/mobile/Library/Preferences/Avalon/</string>
</array>
<key>com.apple.security.exception.files.absolute-path.read-write</key>
<array>
<string>/private/var/mobile/Library/Preferences/group.com.apple.stocks.plist</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.stocks.ppt</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.stocks.bridge</string>
<string>group.com.apple.stocks</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
