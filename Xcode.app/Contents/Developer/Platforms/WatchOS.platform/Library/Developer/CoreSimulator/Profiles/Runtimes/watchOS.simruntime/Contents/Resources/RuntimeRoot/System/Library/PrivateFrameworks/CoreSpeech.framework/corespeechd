init
dealloc
initWithBlob:
processAudioChunk:
reset
.cxx_destruct
activeChannel
setActiveChannel:
delegate
setDelegate:
_currentBlob
_activeChannel
_delegate
startRecordingHostTime
initWithStreamID:atStartHostTime:
avvcAlertBehavior
numberWithInt:
objectForKeyedSubscript:
unsignedIntegerValue
setStartAlert:
setStopAlert:
setStopOnErrorAlert:
dictionary
requestHistoricalAudioDataWithHostTime
numberWithUnsignedLongLong:
setObject:forKey:
_alertBehaviorTypeFromAVVCOberrideType:
setStartAlertBehavior:
setStopAlertBehavior:
setErrorAlertBehavior:
startAlertBehavior
_avvcAlertOverrideType:
stopAlertBehavior
errorAlertBehavior
numberWithInteger:
avvcStartRecordSettingsWithAudioStreamHandleId:
avvcSettings
setAVVCAlertBehavior:
_handleListenerEvent:
_handleListenerError:
xpcObject
_sendMessage:connection:completion:
_decodeError:
errorWithDomain:code:userInfo:
stringWithUTF8String:
connect
notifyActivationEvent:completion:
xpcConnection
setXpcConnection:
_xpcConnection
hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:
sampleCountFromHostTime:anchorHostTime:anchorSampleCount:
sharedInstance
processSampleCount:hostTime:
hostTimeFromSampleCount:
sampleCountFromHostTime:
queue
setQueue:
anchorSampleCount
setAnchorSampleCount:
anchorHostTime
setAnchorHostTime:
_queue
_anchorSampleCount
_anchorHostTime
lpcmNarrowBandASBD
lpcmASBD
initWithInASBD:outASBD:
_createSampleRateConverterWithInASBD:outASBD:
length
dataWithLength:
mutableBytes
bytes
setLength:
upsampler
downsampler
convertSampleRateOfBuffer:
_sampleRateConverter
_outBufferScaleFactor
_inASBD
_outASBD
fetchVolumeFromAVSystemControllerForAudioCategory:
_startObservingSystemControllerLifecycle
startObservingSystemVolumes
defaultCenter
removeObserver:
isEqualToString:
_startMonitoringWithQueue:
musicVolume
musicVolumeWithCompletion:
alarmVolume
systemVolumeDidChange:
systemControllerDied:
_musicVolumeLevel
_alarmVolumeLevel
initWithBytes:length:
subdataWithRange:
dataWithCapacity:
appendData:
initWithData:numChannels:numSamples:sampleByteDepth:startSampleCount:hostTime:remoteVAD:
numSamples
subChunkFrom:numSamples:
remoteVADDuration
inputRecordingSampleRate
initWithXPCObject:
dataForChannel:
dataWithRemoteVADWithScaleFactor:numAudioSamplesPerRemoteVAD:
remoteVADAvailable
subChunkFrom:numSamples:forChannel:
skipSamplesAtStartSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:
splitAudioChunkSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:
splitRemoteVADFrom:numSamples:
data
numChannels
sampleByteDepth
startSampleCount
hostTime
remoteVAD
setRemoteVAD:
_data
_numChannels
_numSamples
_sampleByteDepth
_startSampleCount
_hostTime
_remoteVAD
domain
UTF8String
code
audioStream
notifyWillStopStream:
notifySpeechControllerRecordStateChange:withEventUUID:
notifyDidStopStream:
stopAudioStreamWithOption:completion:
_handleSetCurrentConextMessage:messageBody:client:
_handleAudioStreamRequestMessage:messageBody:client:
_handleAudioStreamPrepareMessage:messageBody:client:
_handleStartAudioStreamMessage:messageBody:client:
_handleStopAudioStreamMessage:messageBody:client:
_handleVoiceTriggerInfoMessage:messageBody:client:
_handleIsRecordingMessage:messageBody:client:
_handleRecordRouteMessage:messageBody:client:
_handleRecordDeviceInfo:messageBody:client:
_handleRecordSettings:messageBody:client:
_handleIsNarrowband:messageBody:client:
_handlePlaybackRouteMessage:messageBody:client:
audioStreamProviding
_sendReply:client:result:error:
setRecordContext:
setCurrentContext:error:
audioStreamWithRequest:streamName:error:
setAudioStream:
localizedDescription
streamRequest
prepareAudioStreamSync:request:error:
notifyWillStartStreamWithContext:option:
notifyDidStartStreamWithContext:successfully:option:
UUID
UUIDString
startAudioStream:option:completion:
stopAudioStream:option:completion:
shouldRunVTOnCS
voiceTriggerInfo
rtsTriggerInfo
triggerInfoForContext:completion:
setLastVoiceTriggerInfo:
setLastRTSTriggerInfo:
lastVoiceTriggerInfo
_cs_xpcObject
lastRTSTriggerInfo
isRecording
recordRoute
recordDeviceInfo
recordSettings
isNarrowBand
playbackRoute
_sendDelegateMessageToClient:
sendMessageToClient:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
handleXPCMessage:messageBody:client:
CSXPCConnectionReceivedClientError:clientError:client:
audioStreamProvider:didStopStreamUnexpectly:
audioStreamProvider:audioBufferAvailable:
audioStreamProvider:audioChunkForTVAvailable:
audioStreamProvider:didHardwareConfigurationChange:
initWithXPCConnection:
setAudioStreamProviding:
triggerInfoProviding
setTriggerInfoProviding:
streamClientType
setStreamClientType:
recordContext
recordEventUUID
setRecordEventUUID:
_audioStreamProviding
_triggerInfoProviding
_streamClientType
_audioStream
_lastVoiceTriggerInfo
_lastRTSTriggerInfo
_recordContext
_recordEventUUID
utteranceFileASBD
_closeAudioFile
fileURLWithPath:isDirectory:
startRecording
appendAudioData:
stopRecording
_audioFile
_asbd
_url
_audioLength
weakObjectsHashTable
_deregisterAudioSessionNotifications
addObject:
count
_startMonitoring
removeObject:
_stopMonitoring
opaqueSessionID
countByEnumeratingWithState:objects:count:
audioSessionInfoProvider:didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:
_registerAudioSessionNotifications
audioSessionInfoProvider:didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:
addObserver:
removeObserver:name:object:
_handleInterruption:
addObserver:selector:name:object:
_audioRouteChanged:
audioSessionInfoProvider:didReceiveAudioSessionInterruptionNotificationWithUserInfo:
userInfo
audioSessionInfoProvider:didReceiveAudioSessionRouteChangeNotificationWithUserInfo:
_registerInterruptionNotification
_registerAudioRouteChangeNotification
registerObserver:
unregisterObserver:
audioSessionID
CSAudioServerCrashMonitorDidReceiveServerCrash:
CSAudioServerCrashMonitorDidReceiveServerRestart:
sessionInfoQueue
setSessionInfoQueue:
observers
setObservers:
_sessionInfoQueue
_observers
_sharedAudioLoggingQueue
fileURL
URLByDeletingLastPathComponent
path
sharedPreferences
assistantAudioFileLogDirectory
containsString:
defaultManager
removeItemAtURL:error:
inputRecordingNumberOfChannels
inputRecordingSampleByteDepth
seekToEndOfFile
seekToFileOffset:
readDataOfLength:
getBytes:length:
initWithData:encoding:
offsetInFile
writeData:
fileLoggingIsEnabled
_createAudioFileWriterWithLoggingDir:inputFormat:outputFormat:
_getDateLabel
stringWithFormat:
stringByAppendingPathComponent:
fileURLWithPath:
getNumElementInBitset:
lpcmNonInterleavedASBDWithSampleRate:numberOfChannels:
lpcmInterleavedASBDWithSampleRate:numberOfChannels:
initWithURL:inputFormat:outputFormat:channelBitset:
maxNumLoggingFiles
pruneNumberOfLogFilesTo:
URLWithString:
initWithURL:inputFormat:outputFormat:
localeWithLocaleIdentifier:
setLocale:
setDateFormat:
stringFromDate:
removeLogFilesInDirectory:matchingPattern:beforeDays:
arrayWithObjects:
clearLogFilesInDirectory:matchingPattern:exceedNumber:
isAttentiveSiriAudioLoggingEnabled
assistantLogDirectory
fileExistsAtPath:isDirectory:
removeItemAtPath:error:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
generateDeviceAudioLogging:speechId:
_readDataFromFileHandle:toFileHandle:
createAudioFileWriterForRemoteVADWithInputFormat:outputFormat:
createAudioFileWriterFromWithInputFormat:outputFormat:
createSelectiveChannelAudioFileWriterWithChannelBitset:
removeLogFilesOlderThanNDays:
audioFileWriterForAttentiveSiri
setObject:forKeyedSubscript:
integerValue
didTransitFrom:to:by:
didIgnoreEvent:from:
initWithInitialState:
addTransitionFrom:to:for:
performTransitionForEvent:
currentState
initialState
setInitialState:
transitions
setTransitions:
_currentState
_initialState
_transitions
_addSmartSiriVolumeEnabledConditions
_subscribeEventMonitors
subscribeEventMonitor:
getAudioSessionState
addConditions:
sharedConnection
_checkSiriRestrictedOnLockScreen
effectiveBoolValueForSetting:
_notifyObserver:withRestricted:
enumerateObserversInQueue:
notifyObserver:
CSSiriRestrictionOnLockScreenMonitor:didReceiveRestrictionChanged:
_didReceiveRestrictionChanged:
profileConnectionDidReceiveRestrictionChangedNotification:userInfo:
profileConnectionDidReceivePasscodeChangedNotification:userInfo:
profileConnectionDidReceivePasscodePolicyChangedNotification:userInfo:
profileConnectionDidReceiveProfileListChangedNotification:userInfo:
profileConnectionDidReceiveEffectiveSettingsChangedNotification:userInfo:
profileConnectionDidReceiveDefaultsChangedNotification:userInfo:
profileConnectionDidReceiveAppWhitelistChangedNotification:userInfo:
isRestricted
_didReceiveRestrictionChangedInQueue:
_isRestricted
initWithRecordType:deviceId:
contextForServerInvoke
recordTypeFromAVVCActivationMode:
copy
setType:
setAlwaysUseRemoteBuiltInMic:
copyWithZone:
setDeviceId:
_createAVVCContextWithType:deviceId:
avvcActivationMode:
type
deviceId
isBuiltInVoiceTriggered
isHearstVoiceTriggered
isJarvisVoiceTriggered
isHearstDoubleTapTriggered
string
recordTypeString:
appendFormat:
contextForHearstVoiceTriggerWithDeviceId:
contextForOpportuneSpeakerListener
contextForBuiltInVoiceTrigger
contextForJarvisWithDeviceId:
contextForBTLE
contextForVoiceTriggerTraining
defaultContext
initWithAVVCContext:
avvcContext
isVoiceTriggered
isTriggeredFromHearst
isRTSTriggered
isServerInvoked
isStarkTriggered
alwaysUseRemoteBuiltInMic
_alwaysUseRemoteBuiltInMic
_type
_deviceId
dataWithBytes:length:
array
numberWithUnsignedLong:
dictionaryWithObjects:forKeys:count:
initWithZeroWindowSize:approxAbsSpeechThreshold:numHostTicksPerAudioSample:
filterZerosInAudioPacket:atBufferHostTime:filteredPacket:
endAudioAndFetchAnyTrailingZerosPacket:
metrics
.cxx_construct
_audioZeroFilterImpl
setRecordState:
_notifyObserver:withSpeechControllerRecordState:withEventUUID:
recordState
_notifyObserver:withSpeechControllerRecordState:
CSSpeechControllerMonitorDidChangeRecordState:recordState:
_pendingRecordingStopUUID
initWithConfigPath:triggerTokens:useKeywordSpotting:
runRecognition
endAudio
_recognizeWavData:length:
triggerConfidence
_previousUtteranceTokens
_triggerTokenList
_useKeywordSpotting
_triggerConfidence
regularExpressionWithPattern:options:error:
firstMatchInString:options:range:
numberOfRanges
rangeAtIndex:
substringWithRange:
assetHashInResourcePath:
start
setCachedAsset:
cachedAsset
defaultFallbackModelIfNil:
_getVoiceTriggerAssetFromAssetManager:
sharedManager
assetForCurrentLanguageOfType:completion:
isEqualAsset:
notifyObservers:
_checkNewAssetAvailablity
CSVoiceTriggerAssetDownloadMonitor:didInstallNewAsset:
CSFirstUnlockMonitor:didReceiveFirstUnlock:
CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:
getVoiceTriggerAsset:
_cachedAsset
mutedOption
setRequestHistoricalAudioDataWithHostTime:
requestHistoricalAudioDataSampleCount
setRequestHistoricalAudioDataSampleCount:
setStartRecordingHostTime:
startRecordingSampleCount
setStartRecordingSampleCount:
useOpportunisticZLL
setUseOpportunisticZLL:
_requestHistoricalAudioDataWithHostTime
_requestHistoricalAudioDataSampleCount
_useOpportunisticZLL
_startRecordingHostTime
_startRecordingSampleCount
_startAlertBehavior
_stopAlertBehavior
_errorAlertBehavior
assetChangeMonitorDidDetectAssetChange:
sharedMonitor
startMonitoring
notifyVoiceTriggerAssetChanged
_notifyToken
_didReceiveMediaserverNotification:
_notifyObserver:withMediaserverState:
notifyAudioServerCrash
_mediaserverdDidRestart
serverState
setServerState:
_serverState
disconnect
_sendMessageAndReplySync:connection:error:
setAudioSessionProvidingDelegate:
setAudioAlertProvidingDelegate:
_cs_initWithXPCObject:
initWithAudioStreamProvider:streamName:streamRequest:
name
processInfo
systemUptime
objectForKey:
doubleValue
numberWithDouble:
_handleListenerMessage:
_handleSessionProvidingDelegateMessageBody:
_handleStreamProvidingDelegateMessageBody:
_handleAlertProvidingDelegateMessageBody:
_handleSessionInfoProvidingDelegateMessageBody:
_handleListenerDisconnectedError:
CSXPCClient:didDisconnect:
_handleAlertProvidingDelegateDidFinishAlertPlayback:
audioAlertProvidingDelegate
audioAlertProvidingDidFinishAlertPlayback:ofType:error:
_handleSessionProvidingDelegateBeginInterruption:
_handleSessionProvidingDelegateBeginInterruptionWithContext:
_handleSessionProvidingDelegateEndInterruption:
_handleSessionProvidingDelegateWillSetAudioSession:
_handleSessionProvidingDelegateDidSetAudioSession:
_handleSessionProvidingDelegateStreamHandleIdInvalidation:
_handleSessionProvidingDelegateDidChangeContext:
audioSessionProvidingDelegate
audioSessionProviderBeginInterruption:
audioSessionProviderBeginInterruption:withContext:
audioSessionProviderEndInterruption:
audioSessionProvider:willSetAudioSessionActive:
audioSessionProvider:didSetAudioSessionActive:
audioSessionProvider:providerInvalidated:
audioSessionProvider:didChangeContext:
_handleSessionInfoProvidingDelegateInterruptionNotification:
_handleSessionInfoProvidingDelegateRouteChangeNotification:
_handleSessionInfoProvidingDelegateMediaServicesWereLostNotification:
_handleSessionInfoProvidingDelegateMediaServicesWereResetNotification:
_handleStreamProvidingDelegateDidStopUnexpectly:
_handleStreamProvidingDelegateChunkAvailable:
_handleStreamProvidingDelegateChunkForTVAvailable:
_handleStreamProvidingDelegateHardwareConfigChange:
setAudioSessionDelegate:
prewarmAudioSessionWithError:
activateAudioSessionWithReason:error:
deactivateAudioSession:error:
duckOthersOption
setDuckOthersOption:
enableMiniDucking:
audioStreamWithRequest:streamName:completion:
prepareAudioStream:request:completion:
audioChunkFrom:to:
audioChunkToEndFrom:
saveRecordingBufferFrom:to:toURL:
saveRecordingBufferToEndFrom:toURL:
holdAudioStreamWithDescription:timeout:
cancelAudioStreamHold:
setAudioAlertDelegate:
setAlertSoundFromURL:forType:
playAlertSoundForType:
playRecordStartingAlertAndResetEndpointer
alertStartTime
configureAlertBehavior:
setMeteringEnabled:
updateMeters
peakPowerForChannel:
averagePowerForChannel:
audioMetric
getEstimatedTTSVolume
updateMusicVolume:
updateAlarmVolume:
updateAlarmState:
updateTimerState:
prepareAudioProviderWithContext:clientType:error:
pingpong:
enableVoiceTrigger:withAssertion:
audioStreamProvidingDelegate
setAudioStreamProvidingDelegate:
activationAssertions
setActivationAssertions:
audioSessionInfoObservers
setAudioSessionInfoObservers:
_audioSessionProvidingDelegate
_audioStreamProvidingDelegate
_audioAlertProvidingDelegate
_activationAssertions
_audioSessionInfoObservers
receiveOpportuneSpeakListenerStart
receiveOpportuneSpeakListenerStop
startListenWithOption:completion:
stopListenWithCompletion:
opportuneSpeakListener:hasRemoteVADAvailable:
opportuneSpeakListener:hasVADAvailable:
opportuneSpeakListener:didStopUnexpectly:
listener
initializeTimerState
timerState
_timerFiringState
_checkPhraseSpotterEnabled
_notifyObserver:withEnabled:
CSPhraseSpotterEnabledMonitor:didReceiveEnabled:
phraseSpotterEnabled
_didReceivePhraseSpotterSettingChangedInQueue:
isEnabled
_phraseSpotterEnabledDidChange
_isPhraseSpotterEnabled
voiceTriggerAssetHandler:didChangeCachedAsset:
sharedHandler
inputRecordingSampleRateNarrowBand
inputRecordingBytesPerPacket
inputRecordingFramesPerPacket
inputRecordingBytesPerFrame
inputRecordingSampleBitDepth
lpcmInt16ASBD
lpcmInt16NarrowBandASBD
opusASBD
opusNarrowBandASBD
lpcmInterleavedASBD
lpcmInterleavedWithRemoteVADASBD
lpcmNonInterleavedASBD
lpcmNonInterleavedWithRemoteVADASBD
aiffFileASBD
spIdSATModelDirForLocale:spidType:modelType:
createDirectoryIfDoesNotExist:
spIdSATAudioDirForLocale:spidType:
spIdSATModelDirForLocale:profileId:spidType:modelType:
utteranceDirectory
contentsOfDirectoryAtPath:error:
predicateWithFormat:
filteredArrayUsingPredicate:
caseInsensitiveCompare:
sortedArrayUsingSelector:
modelPath
fileExistsAtPath:
_isDirectoryEmpty:
initWithSpeakerModelFileName:languageCode:
tiModelPath
tdtiModelPath
tdtiUtteranceDirectory
tiUtteranceDirectory
enrollmentUtterance
needsRetrain
discard
isValid
_modelFileName
_languageCode
_modelPath
_utteranceDirectory
_tdtiModelPath
_tdtiUtteranceDirectory
_tiModelPath
_tiUtteranceDirectory
mapTableWithWeakToStrongObjects
_handleNewRemoteConnection:
machXPCConnection:hasEntitlement:
initWithConnection:
activateConnection
removeObjectForKey:
CSVoiceTriggerXPCConnectionReceivedClientError:clientError:client:
listen
setListener:
connections
setConnections:
_listener
_connections
setName:
_name
getNumberForKey:category:default:
unsignedLongLongValue
numberWithUnsignedInt:
unsignedIntValue
numberWithFloat:
floatValue
SSVNoiseLevelChannelBitset
SSVLKFSChannelBitset
SSVEnergyBufferSize
SSVNoiseLowerPercentile
SSVNoiseUpperPercentile
SSVLKFSLowerPercentile
SSVLKFSUpperPercentile
SSVNoiseTimeConstant
SSVNoiseMicSensitivityOffset
SSVLKFSTimeConstant
SSVLKFSMicSensitivityOffset
SSVNoiseTTSMappingInputRangeLow
SSVNoiseTTSMappingInputRangeHigh
SSVNoiseTTSMappingOutputRangeLow
SSVNoiseTTSMappingOutputRangeHigh
SSVLKFSTTSMappingInputRangeLow
SSVLKFSTTSMappingInputRangeHigh
SSVLKFSTTSMappingOutputRangeLow
SSVLKFSTTSMappingOutputRangeHigh
SSVUserOffsetInputRangeLow
SSVUserOffsetInputRangeHigh
SSVUserOffsetOutputRangeLow
SSVUserOffsetOutputRangeHigh
SSVTTSVolumeLowerLimitDB
SSVTTSVolumeUpperLimitDB
SSVNoiseWeight
SSVParameterDirectionary
containsValueForKey:
decodeObjectForKey:
encodeObject:forKey:
stringByAppendingString:
base64EncodedStringWithOptions:
substringToIndex:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithData:hash:locale:digest:signature:certificate:
initWithHash:locale:
initWithData:hash:locale:
builtInRTModelDictionary
modelData
modelLocale
modelHash
digest
signature
certificate
_modelData
_modelLocale
_modelHash
_digest
_signature
_certificate
setStreamState:
_streamStateName:
setProviderDelegate:
audioRecorder
audioStreamHandleId
isRecordingWithStreamHandleId:
setCurrentContext:streamHandleId:error:
_prepareAudioStreamSync:request:error:
requiresHistoricalBuffer
historicalBufferRequestStreams
_createCircularBufferIfNeeded
_audioStreamWithRequest:streamName:error:
setStreamRequest:
_handleAudioSystemFailure
prepareAudioStreamRecord:streamHandleId:error:
voiceTriggerInCoreSpeech
setVoiceTriggerInfo:
inputRecordingDurationInSecs
initWithNumChannels:recordingDuration:samplingRate:
_startAudioStream:option:completion:
_prepareAudioStream:request:completion:
containsObject:
sampleCount
setLastForwardedSampleCount:
_didPlayStartAlertSoundForSiri:audioStream:
alertPlaybackFinishWaitingStreams
alertPlaybackFinishWaitingCompletions
_scheduleAlertFinishTimeout:
circularBufferStartHostTime
circularBufferStartSampleCount
setScheduledFutureSample:
startPendingStreams
pendingStartCompletions
_holdRecordingTransactionIfNeeded
initWithSampleRate:
recordingSampleRateWithStreamHandleId:
resetWithSampleRate:containsVoiceTrigger:voiceTriggerInfo:
_scheduleDidStartRecordingDelegateWatchDog
startAudioStreamWithOption:streamHandleId:error:
_resetCircularBufferStartTime
setCircularBufferStartHostTime:
setCircularBufferStartSampleCount:
supportOpportunisticZLL
streams
_clearDidStartRecordingDelegateWatchDog
removeAllObjects
_releaseRecordingTransactionIfNeeded
_clearDidStopRecordingDelegateWatchDog
flush
stopPendingStreams
pendingStopCompletions
_stopAudioStream:option:completion:
_shouldStopRecording
_scheduleDidStopRecordingDelegateWatchDog
stopAudioStreamWithStreamHandleId:error:
_audioChunkFrom:to:
copySamplesFrom:to:
_saveRecordingBufferFrom:to:toURL:
streamHolders
recordRouteWithStreamHandleId:
recordDeviceInfoWithStreamHandleId:
recordSettingsWithStreamHandleId:
setSessionDelegate:
prewarmAudioSessionWithStreamHandleId:error:
_activateAudioSessionWithReason:error:
activateAudioSessionWithReason:streamHandleId:error:
_deactivateAudioSession:error:
deactivateAudioSession:streamHandleId:error:
setAlertDelegate:
playRecordStartingAlertAndResetEndpointerFromStream:
willBeep
_isVoiceTriggerInfoAvailableLocally:
_processAudioBuffer:remoteVAD:atTime:
_handleDidStartAudioStreamWithResult:error:
_handleDidStopAudioStreamWithReason:
sessionDelegate
providerDelegate
audioProviderInvalidated:streamHandleId:
addSamples:numSamples:atHostTime:
_forwardAudioChunk:remoteVAD:atTime:toStream:
bufferLength
lastForwardedSampleCount
scheduledFutureSample
processBuffer:atTime:
audioInjectionEnabled
isNarrowBandWithStreamHandleId:
_didReceiveFinishStartAlertPlaybackAt:
alertDelegate
willDestroy
numberWithUnsignedInteger:
initWithDescription:
isSessionCurrentlyActivated
_schduleDidStartRecordingDelegateWatchDogWithToken:
_scheduleDidStopRecordingDelegateWatchDog:
audioRecorderBufferAvailable:audioStreamHandleId:buffer:remoteVAD:atTime:
audioRecorderBufferAvailable:audioStreamHandleId:buffer:
audioRecorderDidStartRecord:audioStreamHandleId:successfully:error:
audioRecorderDidStopRecord:audioStreamHandleId:reason:
audioRecorderRecordHardwareConfigurationDidChange:toConfiguration:
audioRecorderDidFinishAlertPlayback:ofType:error:
audioRecorderBeginRecordInterruption:
audioRecorderBeginRecordInterruption:withContext:
audioRecorderEndRecordInterruption:
audioRecorder:willSetAudioSessionActive:
audioRecorder:didSetAudioSessionActive:
voiceTriggerDetectedOnAOP:
audioRecorderDisconnected:
audioRecorderLostMediaserverd:
audioRecorderWillBeDestroyed:
audioRecorderBuiltInAudioStreamInvalidated:error:
audioRecorderStreamHandleIdInvalidated:
audioPreprocessor:hasAvailableBuffer:atTime:
voiceTriggerDidDetectKeyword:deviceId:
voiceTriggerDidDetectNearMiss:
voiceTriggerDidDetectSpeakerReject:
keywordDetectorDidDetectKeyword
voiceTriggerGotSuperVector:
raiseToSpeakDetected:
initWithAudioStreamHandleId:audioRecorder:
setAudioRecorder:
setAudioProviderDelegate:
_tearDownCircularBufferIfNeeded
notifyProviderContextChanged
recordQueue
setRecordQueue:
streamState
setStartPendingStreams:
setAlertPlaybackFinishWaitingStreams:
setStreams:
setStopPendingStreams:
setPendingStartCompletions:
setAlertPlaybackFinishWaitingCompletions:
setPendingStopCompletions:
setStreamHolders:
setHistoricalBufferRequestStreams:
circularBuffer
setCircularBuffer:
lastAudioRecorderContext
setLastAudioRecorderContext:
audioSystemRecovering
setAudioSystemRecovering:
audioPreprocessor
setAudioPreprocessor:
recordingTransaction
setRecordingTransaction:
recordingWillStartGroup
setRecordingWillStartGroup:
waitingForAlertFinish
setWaitingForAlertFinish:
setAudioStreamHandleId:
alertPlaybackFinishTimeoutToken
setAlertPlaybackFinishTimeoutToken:
startRecordingWatchDogToken
setStartRecordingWatchDogToken:
stopRecordingWatchDogToken
setStopRecordingWatchDogToken:
_audioSystemRecovering
_waitingForAlertFinish
_UUID
_recordQueue
_audioRecorder
_streamState
_startPendingStreams
_alertPlaybackFinishWaitingStreams
_streams
_stopPendingStreams
_pendingStartCompletions
_alertPlaybackFinishWaitingCompletions
_pendingStopCompletions
_providerDelegate
_sessionDelegate
_streamHolders
_historicalBufferRequestStreams
_circularBuffer
_alertDelegate
_lastAudioRecorderContext
_audioPreprocessor
_recordingTransaction
_recordingWillStartGroup
_audioStreamHandleId
_alertPlaybackFinishTimeoutToken
_startRecordingWatchDogToken
_stopRecordingWatchDogToken
_circularBufferStartHostTime
_circularBufferStartSampleCount
allowVoiceTriggerAssetDownloading
setAllowVoiceTriggerAssetDownloading:
allowEndpointAssetDownloading
setAllowEndpointAssetDownloading:
allowLanguageDetectorAssetDownloading
setAllowLanguageDetectorAssetDownloading:
_allowVoiceTriggerAssetDownloading
_allowEndpointAssetDownloading
_allowLanguageDetectorAssetDownloading
dateWithTimeIntervalSinceNow:
distantFuture
getResourceValue:forKey:error:
compare:
URLsInDirectory:matchingPattern:completion:
objectAtIndex:
_sortedURLsInDirectory:matchingPattern:completion:
_contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:
arrayWithObjects:count:
sortedArrayUsingComparator:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
lastPathComponent
numberOfMatchesInString:options:range:
predicateWithBlock:
_addVoiceTriggerEnabledConditions
isPresent
isSpringboardStarted
isFirstUnlocked
batteryState
isScreenLocked
isSoftwareUpdateCheckingRunning
startObserving
getLastBiometricMatchEvent:atTime:
getBiometricMatchResultForTriggerTimeStamp:
handleSpeechDetectionVADPresentChange:
initWithConfigPath:resourcePath:
_resetStartAnalyzeTime
resetBest
_setStartAnalyzeTime:
analyzeWavData:numSamples:
getAnalyzedResultForPhraseId:
sampleFed
getAnalyzedResult
keywordAnalyzerNDAPI:hasResultAvailable:forChannel:
initWithResult:
bestStart
setBestStart:
bestEnd
setBestEnd:
mutableCopy
getSuperVectorWithEndPoint:
getOptionValue:
getThreshold
getLoggingThreshold
activePhraseId
setActivePhraseId:
_novDetector
_startAnalyzeSampleCount
_isStartSampleCountMarked
_lastSampleFed
_sampleFedWrapAroundOffset
_activePhraseId
getSiriLanguageWithFallback:
createRTModelWithLocale:
hearstRTModelWithMajorVersion:minorVersion:locale:
resourcePath
dataWithContentsOfFile:
_sha1:
_sha256:
stringWithCapacity:
RTModelWithFallbackLanguage:
latestHearstRTModelForLocale:
hearstRTModelLocaleMap
wakeGestureTimestamp
dismissalTimestamp
hostTimeToSeconds:
isTriggerHandheld
setWakeGestureTimestamp:
setDismissalTimestamp:
_wakeGestureTimestamp
_dismissalTimestamp
_fetchHearstConnectionState
_notifyHearstConnectionState:
_fetchJarvisConnectionState
_notifyJarvisConnectionState:
CSAudioRouteChangeMonitor:didReceiveAudioRouteChangeEvent:
getHearstConnected:
hearstConnected
getJarvisConnected:
jarvisConnected
preferredExternalRouteDidChange:
carPlayAudioRouteDidChange:
_isHearstConnected
_isJarvisConnected
remoteVoiceActivityAvailable
remoteVoiceActivityVAD
remoteVoiceActivityVADBuffer
_voiceControllerWithError:
_destroyVoiceController
_audioRecorderDidStartRecordingSuccessfully:streamHandleID:error:
setRecordDelegate:
initWithError:
setSynchronousCallbackEnabled:
date
avvcContextSettings
setContext:error:
timeIntervalSinceDate:
setContextForStream:forStream:error:
_getRecordSettingsWithRequest:
_createDeInterleaverIfNeeded
inputRecordingBufferDuration
initWithStreamID:settings:bufferDuration:
prepareRecordForStream:error:
_shouldInjectAudio
_needResetAudioInjectionIndex:
audioInjectionFilePath
initWithURL:
setRecordBufferDuration:
lpcmRecordSettings
prepareRecording:
_startAudioStreamForAudioInjection
startRecordForStream:error:
stopRecordForStream:error:
getCurrentSessionState
hasRemoteBuiltInMic
getCurrentStreamState:
getRecordDeviceInfoForStream:
initWithAVVCRecordDeviceInfo:
getRecordSettingsForStream:
activateAudioSessionForStream:isPrewarm:error:
_convertDeactivateOption:
deactivateAudioSessionWithOptions:
voiceTriggerEventInfo
boolValue
channels
packetDescriptionCount
bytesDataSize
initWithCapacity:
packetDescriptions
setPackets:
updateMeterForStream:
getPeakPowerForStream:forChannel:
getAveragePowerForStream:forChannel:
setPeakPower:
setAvgPower:
timeStamp
setTimeStamp:
streamDescription
_deinterleaveBufferIfNeeded:
_compensateChannelDataIfNeeded:receivedNumChannels:
_processAudioChain:audioStreamHandleId:remoteVAD:atTime:
opusDecoder
addPackets:audioStreamHandleId:remoteVAD:timestamp:receivedNumChannels:
initWithLength:
replaceBytesInRange:withBytes:
_processAudioBuffer:audioStreamHandleId:
_audioRecorderDidStopRecordingForReason:streamHandleID:
notifyAduioSessionStateChange:
shouldDeinterleaveAudioOnCS
useCustomizedRecordSettings
defaultRequestWithContext:
audioFormat
sampleRate
lpcmBitDepth
lpcmIsFloat
numberWithBool:
numberOfChannels
encoderBitRate
createSharedAudioSession
voiceControllerDidStartRecording:successfully:
voiceControllerDidStartRecording:successfully:error:
voiceControllerDidStopRecording:forReason:
voiceControllerDidDetectStartpoint:
voiceControllerDidDetectEndpoint:ofType:
voiceControllerDidDetectEndpoint:ofType:atTime:
voiceControllerEncoderErrorDidOccur:error:
voiceControllerDidFinishAlertPlayback:ofType:error:
voiceControllerDidFinishAlertPlayback:withSettings:error:
voiceControllerRecordHardwareConfigurationDidChange:toConfiguration:
voiceControllerBeginRecordInterruption:
voiceControllerBeginRecordInterruption:withContext:
voiceControllerEndRecordInterruption:
voiceControllerMediaServicesWereLost:
voiceControllerMediaServicesWereReset:
voiceControllerWillSetAudioSessionActive:willActivate:
voiceControllerDidSetAudioSessionActive:isActivated:
voiceControllerRecordBufferAvailable:buffer:
voiceControllerLPCMRecordBufferAvailable:buffer:
voiceControllerWirelessSplitterRouteAvailable:devices:
voiceControllerDidStartRecording:forStream:successfully:error:
voiceControllerDidStopRecording:forStream:forReason:
voiceControllerAudioCallback:forStream:buffer:
voiceControllerStreamInvalidated:forStream:
audioDecoderDidDecodePackets:audioStreamHandleId:buffer:remoteVAD:timestamp:receivedNumChannels:
audioFileReaderBufferAvailable:buffer:atTime:
audioFileReaderDidStartRecording:successfully:error:
audioFileReaderDidStopRecording:forReason:
initWithQueue:error:
configureAlertBehavior:audioStreamHandleId:
_shouldUseRemoteRecordForContext:
_shouldUseRemoteBuiltInMic:
_voiceController
_deinterleaver
_interleavedABL
_pNonInterleavedABL
_remoteRecordClient
_latestContext
_shouldUseRemoteRecord
_opusDecoders
_audioFileReader
_audioFilePathIndex
_waitingForDidStart
initWithAnalyzeMode
_startRequestWithCompletion:
setRequiresHistoricalBuffer:
getFrameDurationMs
initializeMediaPlayingState
mediaPlayingState
startAudioStreamWithOption:completion:
audioSessionProvider
stopListenWithStateReset:completion:
apply12dBGain:
channelForProcessedInput
addAudio:numSamples:
CSMediaPlayingMonitor:didReceiveMediaPlayingChanged:
spgEndpointAnalyzer:hasSilenceScoreEstimate:
spgEndpointAnalyzer
setSpgEndpointAnalyzer:
remoteVADSPGRatio
setRemoteVADSPGRatio:
audioStreamProvider
setAudioStreamProvider:
setAudioSessionProvider:
latestContext
setLatestContext:
isMediaPlayingNow
setIsMediaPlayingNow:
_isMediaPlayingNow
_remoteVADSPGRatio
_spgEndpointAnalyzer
_audioStreamProvider
_audioSessionProvider
speakerDetectorThreshold
maxSpeakerVectorsToPersist
_initializeSAT:
addLastTriggerToProfileWithSuperVector:
initWithAsset:speakerModel:
_initializeNDAPI:resourcePath:
getSatThreshold
computeSATScore:
analyzeWavForEnrollment:numSamples:
addLastTriggerToProfile
getSATVectorCount
getMaxSpeakerVectorsToPersist
_threshold
_maxSpeakerVectorsToPersist
_spkModel
CSSiriEnabledMonitor:didReceiveEnabled:
_didReceiveSiriSettingChanged:
_isSiriEnabled
_handleGetTTSVolumeRequestMessage:messageBody:client:
_handleUpdateMusicVolumeRequestMessage:messageBody:client:
_handleUpdateAlarmVolumeRequestMessage:messageBody:client:
_handleUpdateAlarmStateRequestMessage:messageBody:client:
_handleUpdateTimerStateRequestMessage:messageBody:client:
sharedManagerForCoreSpeechDaemon
smartSiriVolume
supportSmartVolume
estimateSoundLevelbySoundType:
estimatedTTSVolumeForNoiseLevelAndLKFS:LKFS:
CSVolumeMonitor:didReceiveMusicVolumeChanged:
CSVolumeMonitor:didReceiveAlarmVolumeChanged:
CSAlarmMonitor:didReceiveAlarmChanged:
CSTimerMonitor:didReceiveTimerChanged:
createSATAnalyzersForCSSpIdType:withModel:withAsset:
initWithCSSpIdType:modelType:forRunMode:profile:locale:assetResourcePath:assetHash:
spIdType
userName
sysConfigFile
sysConfigRoot
satModelDir
satAudioDir
satScoreThreshold
analyzeSuperVector:withDimensions:
scoreSpeakerVector:withDimensions:
updateSAT
initializeSATWithModelPath:
getSpeakerVectorAtIndex:
deleteVectorAtIndex:
deleteExistingSATModel
profileID
sysConfigFilepath
satModelFilePath
tdSrSysConfigFile
tdSrSysConfigRoot
satModelAvailable
satScoreVTScale
satScoreVTOffset
satScoreNonVTScale
satScoreNonVTOffset
combinationWeight
satLogitCeilScore
satLogitFloorScore
satImplicitThreshold
satImplicitBaseProfileThreshold
satImplicitProfileThreshold
satImplicitProfileDeltaThreshold
retrainThresholdTrigger
retrainExplicitUttThresholdSAT
retrainExplicitUttThresholdTDSR
retrainThresholdSAT
retrainThresholdTDSR
pruningNumRetentionUtterance
maximumSpeakerVectors
maxAllowedImplicitUtterances
maxAllowedBaseProfileUtterances
voiceProfilePruningCookie
_satModelAvailable
_satScoreVTScale
_satScoreVTOffset
_satScoreNonVTScale
_satScoreNonVTOffset
_combinationWeight
_satLogitCeilScore
_satLogitFloorScore
_satImplicitThreshold
_retrainThresholdTrigger
_retrainExplicitUttThresholdSAT
_retrainExplicitUttThresholdTDSR
_retrainThresholdSAT
_retrainThresholdTDSR
_pruningNumRetentionUtterance
_maximumSpeakerVectors
_maxAllowedImplicitUtterances
_maxAllowedBaseProfileUtterances
_profileID
_sysConfigFilepath
_satModelFilePath
_tdSrSysConfigFile
_tdSrSysConfigRoot
_satImplicitBaseProfileThreshold
_satImplicitProfileThreshold
_satImplicitProfileDeltaThreshold
_voiceProfilePruningCookie
_attachBluetoothSession
_getWirelessSplitterInfoFromLocalDevice:
getBTLocalDeviceWithCompletion:
setSplitterEnabled:
initWithUTF8String:
setAddress:
setSupportDoAP:
addDeviceIntoSplitterDeviceList:
_tearDownLocalDevice
_detachBluetoothSession
_setUpLocalDevice
getWirelessSplitterInfoWithCompletion:
device:serviceMask:serviceEventType:serviceSpecificEvent:result:
_sessionAttached:result:
_sessionDetached:
_sessionTerminated:
localDevice:event:result:
bluetoothSession
setBluetoothSession:
isAttachingBluetoothSession
setIsAttachingBluetoothSession:
localDevice
setLocalDevice:
pairedDeviceAddresses
setPairedDeviceAddresses:
connectedDeviceAddresses
setConnectedDeviceAddresses:
bluetoothSessionSetupGroup
setBluetoothSessionSetupGroup:
_isAttachingBluetoothSession
_bluetoothSession
_localDevice
_pairedDeviceAddresses
_connectedDeviceAddresses
_bluetoothSessionSetupGroup
setTriggerMode:
getTriggerMode
CSActivationXPCConnectionReceivedClientError:clientError:client:
supportIOSBargeIn
_handleSessionIDRequestMessage:messageBody:client:
audioSessionInfoProvider
setAudioSessionInfoProvider:
_audioSessionInfoProvider
getVoiceTriggerAssetTypeString
getEndpointAssetTypeString
getLanguageDetectorAssetTypeString
_cleanUpMobileAssetV1Directory
_isReadyToUse
installedAssetOfType:withLanguage:
_fetchRemoteAssetOfType:withLanguage:completion:
_assetQueryForAssetType:
returnTypes:
queryMetaDataSync
results
filteredAssetsForAssets:assetType:language:
queryParams
isLatestCompareTo:
state
getCSAssetOfType:
enumerateObjectsUsingBlock:
installedAssetOfType:withLanguage:completion:
_installedAssetOfType:withLanguage:
_installedAssetOfType:withLanguage:completion:
_findLatestInstalledAsset:
_installedAssetWithoutMetaDataForType:withLanguage:
_installedAssetWithoutMetaDataForType:withLanguage:completion:
queryMetaData:
attributes
initWithType:
addKeyValuePairForQuery:assetType:
_runAssetQuery:completion:
_downloadAssetCatalogForAssetType:complete:
_updateFromRemoteToLocalAssets:forAssetType:completion:
_defaultDownloadOptions
startCatalogDownload:options:then:
isCSAssetInstalled
isDownloading
cancelDownloadSync
canBePurged
purgeSync
CSAssetController:didDownloadNewAssetForType:
_downloadAsset:withComplete:
setAllowsCellularAccess:
setCanUseLocalCacheServer:
assetServerUrl
_startDownloadingAsset:progress:completion:
expectedTimeRemaining
totalWritten
totalExpected
attachProgressCallBack:
spaceCheck:
startDownload:then:
sharedController
CSEventMonitorDidReceiveEvent:
assetOfType:language:
allInstalledAssetsOfType:language:
assetOfType:language:completion:
installedAssetOfType:language:
installedAssetOfType:language:completion:
fetchRemoteMetaOfType:
addObserver:forAssetType:
removeObserver:forAssetType:
_csAssetsDictionary
_assetsMigrationQueue
valueForKey:
supportPremiumAssets
getVoiceTriggerAssetCurrentCompatibilityVersion
getEndpointAssetCurrentCompatibilityVersion
getLanguageDetectorCurrentCompatibilityVersion
addKeyValuePair:with:
filteredAssetsForFetchRemoteMetaDataForAssets:assetType:
isRecordContextVoiceTrigger:
isRecordContextJarvisVoiceTrigger:
isRecordContextHearstDoubleTap:
isRecordContextRaiseToSpeak:
isRecordContextAutoPrompt:
isRecordContextHomeButtonPress:
isRecordContextSpeakerIdTrainingTrigger:
isRecordContextHearstVoiceTrigger:
isRecordContextJarvisButtonPress:
recordContextString:
initWithBool:
initWithDouble:
initWithLongLong:
initWithUnsignedLongLong:
objCType
longLongValue
bestPhrase
bestScore
earlyWarning
setSampleFed:
setBestPhrase:
setBestScore:
setEarlyWarning:
isRescoring
setIsRescoring:
_earlyWarning
_isRescoring
_bestScore
_sampleFed
_bestPhrase
_bestStart
_bestEnd
_setDefaultParameters
_setAsset:
_convertDB2Mag:
_reset
initializeAlarmState
fetchInitSystemVolumes
_resumeSSVProcessing
_pauseSSVProcessing
setCallback:
_startListenPolling
_startListenPollingWithInterval:completion:
isStreaming
_startListenWithCompletion:
corespeechDaemonEnabled
audioProviderWithContext:error:
_stopListening
alarmState
_getMusicVolumeDB:
convertToFloatLPCMBufFromShortLPCMBuf:
iterateBitset:block:
_prepareSoundLevelBufferFromSamples:soundType:
_processAudioChunk:soundType:
_estimatedTTSVolume:lowerLimit:upperLimit:TTSmappingInputRangeLow:TTSmappingInputRangeHigh:TTSmappingOutputRangeLow:TTSmappingOutputRangeHigh:
_combineResultsWithOptimalFromNoise:andOptimalFromLkfs:withUserOffset:
_scaleInputWithInRangeOutRange:minIn:maxIn:minOut:maxOut:
sharedAnalytics
logEventWithType:context:
smartSiriVolumeSoftVolumeEnabled
CSSmartSiriVolumeDidReceiveAlarmChanged:
CSSmartSiriVolumeDidReceiveTimerChanged:
CSSmartSiriVolumeDidReceiveMusicVolumeChanged:
initWithSamplingRate:asset:
startSmartSiriVolume
setAsset:
prepareSoundLevelBufferFromSamples:soundType:firedVoiceTriggerEvent:triggerStartTimeSampleOffset:triggerEndTimeSampleOffset:
listenPollingTimer
setListenPollingTimer:
listenPollingTimerCount
setListenPollingTimerCount:
_smartSiriVolumeNoiseLevel
_smartSiriVolumeLKFS
_floatBuffer
_defaults
_ssvEnablePolicy
_samplesFed
_processedSampleCount
_isListenPollingStarting
_shouldPauseSSVProcess
_shouldPauseLKFSProcess
_alarmSoundIsFiring
_timerSoundIsFiring
_mediaIsPlaying
_currentAsset
_musicVolumeDB
_alarmVolume
_noiseLevelChannelBitset
_LKFSChannelBitset
_energyBufferSize
_noiseLowerPercentile
_noiseUpperPercentile
_LKFSLowerPercentile
_LKFSUpperPercentile
_noiseTimeConstant
_noiseMicSensitivityOffset
_LKFSTimeConstant
_LKFSMicSensitivityOffset
_noiseTTSMappingInputRangeLow
_noiseTTSMappingInputRangeHigh
_noiseTTSMappingOutputRangeLow
_noiseTTSMappingOutputRangeHigh
_LKFSTTSMappingInputRangeLow
_LKFSTTSMappingInputRangeHigh
_LKFSTTSMappingOutputRangeLow
_LKFSTTSMappingOutputRangeHigh
_userOffsetInputRangeLow
_userOffsetInputRangeHigh
_userOffsetOutputRangeLow
_userOffsetOutputRangeHigh
_TTSVolumeLowerLimitDB
_TTSVolumeUpperLimitDB
_noiseWeight
_listenPollingTimer
_listenPollingTimerCount
_addListeningEnabledConditions
_readAudioBufferAndFeed
close
readSamplesFromChannelIdx:
_fFile
_audioFeedTimer
_bufferDuration
appendBytes:length:
writeToFile:atomically:
CSMyriadSelfTriggerCoordinator:didGenerateMyriadPHashForSelfTrigger:
selfTriggerDetector:didDetectSelfTrigger:
userVoiceProfilesForLocale:
userVoiceProfileForVoiceProfileID:
userVoiceProfileForSharedSiriDebugID:
userVoiceProfileForSiriProfileId:
addUserVoiceProfile:fromUtteranceCache:withCompletion:
deleteUserVoiceProfile:
checkIfVoiceProfile:needsUpdatedWith:withCategory:
retrainVoiceProfilesForLanguage:withForceRetrain:withCompletion:
retrainVoiceProfile:withCompletion:
addImplicitUtterance:toVoiceProfile:withTriggerSource:withAudioInput:withCompletion:
addiTunesAccountForVoiceProfile:withMultiUserToken:withDsid:withAltDsid:withHomeId:withHomeUserId:withCompletionBlock:
reevaluateAndCleanupImplicitUtterances
numberOfBaseProfileUtterancesToUpload
voiceProfileArray
setVoiceProfileArray:
languageCode
setLanguageCode:
_numberOfBaseProfileUtterancesToUpload
_voiceProfileArray
bundleForClass:
bundlePath
dataWithContentsOfFile:options:error:
zeroFilterWindowSizeInMs
convertToShortLPCMBufFromFloatLPCMBuf:
beepCancellerDidCancelSamples:buffer:timestamp:
cancelBeepFromSamples:timestamp:
_beepCanceller
_beepFloatVec
_shortBuffer
_numTotalInputSamples
_numTotalOutputSamples
_checkSpringBoardStarted
_didReceiveSpringboardStarted:
_notifyObserver:withStarted:
enumerateObservers:
CSSpringboardStartMonitor:didReceiveStarted:
_didReceiveSpringboardStartedInQueue:
_isSpringBoardStarted
strongToWeakObjectsMapTable
_createXPCClientConnection
_notifyActivationEvent:completion:
_isVoiceTriggerEvent:
activationEventNotifier:event:completion:
initWithType:deviceId:activationInfo:hosttime:
_hasPendingActivationForType:
hosttime
secondsToHostTime:
receiveTestNotificationAPMode
receiveTestNotificationAOPMode
sharedNotifier
sharedNotifierForCoreSpeechDaemon
stop
notifyActivationEventForCoreSpeechDaemon:completion:
notifyActivationEvent:deviceId:activationInfo:completion:
setDelegate:for:
_didReceiveAOPFirstPassTrigger:completion:
_setupTestNotification
notifyToken
setNotifyToken:
delegates
setDelegates:
pendingActivationEvent
setPendingActivationEvent:
pendingCompletion
setPendingCompletion:
_delegates
_pendingActivationEvent
_pendingCompletion
_alarmFiringState
processImplicitTrainingUtterance:forVoiceProfileId:withRecordDeviceInfo:withRecordCtxt:withVoiceTriggerCtxt:withOtherCtxt:withCompletion:
processImplicitTrainingUtterance:forVoiceProfileId:withMetaInfo:withCompletion:
setRecordingContext:
startRecordingImplicitTrainingUtteranceWithVoiceTriggerEventInfo:
recordingStoppedForReason:
_checkFirstUnlocked
_notifyObserver:withUnlocked:
_didReceiveFirstUnlockInQueue:
_didReceiveFirstUnlock:
_firstUnlocked
saveMetadata:isExplicitEnrollment:
saveUtterance:utteranceAudioPath:numSamplesToWrite:isExplicitEnrollment:
addSamples:numSamples:
stringByReplacingOccurrencesOfString:withString:
_getBaseMetaDictionaryForUtterancePath:
dictionaryWithDictionary:
timeStampWithSaltGrain
writeMetaDict:atMetaPath:
deviceProductType
deviceProductVersion
dataWithJSONObject:options:error:
saveRawUtteranceAndMetadata:to:isExplicitEnrollment:
saveUtteranceAndMetadata:atDirectory:isExplicitEnrollment:
sanitizeSATFilesWithAsset:
cleanupInvalidSATEntriesAtSATRoot:payloadUtteranceLifeTimeInDays:dryRun:
initWithArray:
packets
avgPower
peakPower
_avgPower
_peakPower
_packets
_timeStamp
_createXPCClientConnectionIfNeeded
enableVoiceTrigger:withAssertion:timestamp:
enableAssertionReceived
disableAssertionReceived
setPhraseSpotterBypassing:timeout:
voiceTriggerXPCService:setPhraseSpotterBypassing:
notifyVoiceTriggeredSiriSessionCancelled
enableVoiceTriggerForCoreSpeechDaemon:withAssertion:timestamp:
setPhraseSpotterBypassingForCoreSpeechDaemon:timeout:
setXpcClient:
_teardownXPCClientIfNeeded
sharedService
sharedServiceForCoreSpeechDaemon
voiceTriggerXPCClient:didDisconnect:
notifyVoiceTriggeredSiriSessionCancelledForCoreSpeechDaemon
notifyServiceConnectionLostForCoreSpeechDaemon
isPhraseSpotterBypassed
setIsPhraseSpotterBypassed:
xpcClient
_isPhraseSpotterBypassed
_xpcClient
initWithUUIDString:
initWithFormat:
decodeObjectOfClass:forKey:
initWithRoute:isRemoteDevice:remoteDeviceUID:remoteDeviceProductIdentifier:
isRemoteDevice
remoteDeviceUID
remoteProductIdentifier
route
remoteDeviceProductIdentifier
_isRemoteDevice
_route
_remoteDeviceUID
_remoteDeviceProductIdentifier
commandControlBehaviorMonitor:willStartStreamWithContext:option:
commandControlBehaviorMonitor:didStartStreamWithContext:successfully:option:
commandControlBehaviorMonitor:willStopStream:
commandControlBehaviorMonitor:didStopStream:
initWithFilepath:
isWriting
fFile
inASBD
outASBD
_fileURL
setStreamProvider:
setStreaming:
stringByAppendingFormat:
streamProvider
setStreamingUUID:
streamingUUID
streaming
prepareAudioStreamSyncWithRequest:error:
prepareAudioStreamWithRequest:completion:
_scheduledFutureSample
_streaming
_lastForwardedSampleCount
_streamRequest
_streamProvider
_streamingUUID
_asssetMetaUpdatedKey
_didReceiveNewVoiceTriggerAssetMetaData
_notifyObserver:
CSVoiceTriggerAssetMetaUpdateMonitor:didReceiveNewVoiceTriggerAssetMetaData:
initWithCSspIdType:withSysConfigFile:sysConfigRoot:delegate:
processAudioData:
supportZeroFilter
supportBeepCanceller
resetWithSampleRate:
initWithToken:sampleRate:numChannels:
setSampleRate:
_isNarrowBand:
setUpsampler:
zeroFilter
beepCanceller
getZeroStatisticsFromBuffer:entireSamples:
_reportMetrics
stopReportZeroStatistics
zeroFilter:zeroFilteredBufferAvailable:atHostTime:
setZeroFilter:
setBeepCanceller:
zeroCounter
setZeroCounter:
_sampleRate
_upsampler
_zeroFilter
_zeroCounter
activeAudioRouteDidChange:
_logUptime
systemUpTime
_makeKeyWithLanguageAndAssetString:
_pushValueForDistributionKey:withValue:
_addValueForScalarKey:withValue:
_makeKey:
sharedAggregator
cumulativeUptime:cumulativeDowntime:reset:
setAssetString:
logTdPsrSATDetectionTimedOut
logTdPsrSATDetectionWaitTimeMs:
logTdPsrFailedDuringSATDetection
logTdPsrFailedDuringSATRetraining
logVoiceProfilePruningFailureWithReasonCode:
logProfileUpdateScoreMSE:
logTdPsrSATRetrainingTimedOut
logTdPsrSATRetrainingWaitTimeMs:
logProfileUpdateNumPrunedUttsPHS:
logProfileUpdateNumDiscardedUttsPHS:
logProfileUpdateNumRetainedUttsPHS:
logProfileUpdateUtt:withScore:
_lastAggTime
_cumulativeUptime
_cumulativeDowntime
_lastAggTimeFalseWakeUp
_numFalseWakeUp
_timer
_assetString
_writeMetaDict:forUtterancePath:
deviceBuildVersion
URLByAppendingPathComponent:
_saveMetaVersionFileAtPath:
_upgradeLocaleDirectoryIfNecessary:
writeToURL:atomically:
_audioDirectoryNeedsUpgrade:
absoluteString
pathExtension
_upgradeUtteranceMeta:
dataWithContentsOfURL:
JSONObjectWithData:options:error:
URLByDeletingPathExtension
URLByAppendingPathExtension:
submitDiagnosticReportWithType:withSubType:withContext:
stringByDeletingPathExtension
stringByAppendingPathExtension:
dateFromString:
saveUtteranceMetadataForUtterance:enrollmentType:isHandheldEnrollment:triggerSource:audioInput:otherBiometricResult:containsPayload:
saveMetaVersionFileAtSATAudioDirectory:
upgradeMetaFilesIfNecessaaryAtSATRoot:
isUtteranceImplicitlyTrained:
getUtteranceEnrollmentType:
recordedTimeStampOfFile:
_didReceiveNewSpeechEndpointAssetMetaData
CSSpeechEndpointAssetMetaUpdateMonitor:didReceiveNewSpeechEndpointAssetMetaData:
baseDir
initWithSharedSiriId:languageCode:productCategory:version:sharedHomeId:userName:
profileId
setProfileId:
productCategory
setProductCategory:
version
setVersion:
onboardType
setOnboardType:
homeId
setHomeId:
setUserName:
siriDebugProfileId
setSiriDebugProfileId:
_profileId
_productCategory
_version
_onboardType
_homeId
_userName
_siriDebugProfileId
_handleClientEvent:
_handleClientMessage:client:
_handleClientError:client:
_sendReplyMessageWithResult:error:event:client:
processSingleUserImplicitTrainingUtterance:audioDeviceType:audioRecordType:withVoiceTriggerCtxt:withOtherCtxt:withCompletion:
connection
setConnection:
_connection
deviceCategoryForDeviceProductType:
setCurrentDeviceCategory:
_createAndSendImplicitUtterenceXPCMessage:withRecordDeviceInfo:withRecordCtxt:withVoiceTriggerCtxt:withOtherCtxt:withCompletion:
_CSSATDownloadPath
_getUserVoiceProfileDownloadCacheDirectoryWithUpdatePath:
_downloadAndEnrollVoiceProfileForProfileId:withDownloadTriggerBlock:
CSSATBasePath
isSATEnrolledForLanguageCode:
isCurrentDeviceCompatibleWithVoiceProfileAt:
spIdSATDirForLocale:profileId:spidType:
copyItemAtPath:toPath:error:
_markSATEnrollmentSuccessForSiriProfileId:forLanguageCode:
_markSATEnrollmentMigratedForSiriProfileId:forLanguageCode:
deviceCategoryStringRepresentationForCategoryType:
_enrollVoiceProfileForSiriProfileId:fromCacheDirectoryPath:withCategoryType:
_stageVoiceProfileWithSiriProfileId:fromPath:withForceUpload:
_downloadVoiceProfileForProfileId:forDeviceCategory:withDownloadTriggerBlock:withCompletion:
currentLanguageCode
_getUserVoiceProfileDownloadCacheDirectoryForProfileId:forDeviceCategory:forVoiceProfileVersion:
removeItemAtPath:
isSpidSupportedInCurrentLanguage
_enrollVoiceProfileForSiriProfileId:forLanguage:fromSourceDir:
_copyVoiceProfileFromSrcDir:toDestDir:
_markVoiceProfileMigrationCompleteForSiriProfileId:forLanguageCode:
_enableVoiceTriggerIfLanguageMatches:
isCurrentDeviceCompatibleWithNewerVoiceProfileAt:
_CSSATUploadPathForSiriProfileId:
_prepareVoiceProfileWithSiriProfileId:withUploadBlock:
_CSSATLegacyUploadPath
getVoiceProfilesMarkedForUpload
locale
stringForCSSpIdType:
getEnrollmentUtterancesCountFromDirectory:withCountBlock:
markVoiceProfileUploaded:
spIdSATImplicitAudioCacheDirForLocale:profileId:
getBaseProfileOnlyEnrollmentUtterancesFromDirectory:
_CSSATUploadStagingPathForSiriProfileId:
_copyVoiceProfileAtPath:toPath:
copyItemAtURL:toURL:error:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getCurrentVoiceProfileVersionForProfileId:forLanguageCode:
spIdSATDirForLocale:profileId:
enumeratorAtPath:
_isDirectory:
stringByDeletingLastPathComponent
getContentsOfDirectory:
_copySATFilesFromPath:toPath:withCompletion:
_getVoiceProfilePathsToBeUploadedForSiriProfileId:
_isMarkedForVoiceProfileTrainingSyncForLanguage:
getDevicesWithAvailablePHSAssetsOnDeviceCheck:
devicesWithVoiceProfileIniCloudForLanguage:
getDevicesWithAvailablePHSAssetsForLanguage:completion:
markSATEnrollmentSuccessForSiriProfileId:forLanguageCode:
spIdSATDirForLocale:
_markVoiceProfileTrainingSyncForLanguage:
_isSATMarkedForSiriProfileId:withMarker:forLanguageCode:
isSATEnrolledForSiriProfileId:forLanguageCode:
isSATEnrollmentMigratedForSiriProfileId:forLanguageCode:
updateVoiceProfileVersionFileForProfileId:forLanguageCode:
_markSATEnrollmentWithMarker:forLanguage:forSiriProfileId:
createFileAtPath:contents:attributes:
getImplicitUtteranceCacheDirectory
notifyImplicitUtterance:audioDeviceType:audioRecordType:voiceTriggerEventInfo:otherCtxt:completion:
getSATEnrollmentPath
isSATAvailable
notifyImplicitTrainingUtteranceAvailable:forVoiceProfileId:withRecordDeviceInfo:withRecordCtxt:withVoiceTriggerCtxt:withOtherCtxt:withCompletion:
getUserVoiceProfileUpdateDirectory
notifyUserVoiceProfileDownloadReadyForUser:getData:completion:
notifyUserVoiceProfileUpdateReady
notifyUserVoiceProfileUploadCompleteForSiriProfileId:withError:
uploadUserVoiceProfileForSiriProfileId:withUploadTrigger:completion:
getUserVoiceProfileUploadPathWithEnrolledLanguageList:
notifyUserVoiceProfileUploadComplete
_getEnrolledLanguageList
getCachedVoiceProfileAvailabilityMetaBlob
hasVoiceProfileIniCloudForLanguageCode:withBackupMetaBlob:
isVoiceProfileUploadedToiCloudForLanguageCode:withCompletionBlock:
hasVoiceProfileIniCloudForLanguageCode:
enableVoiceTriggerUponVoiceProfileSyncForLanguage:
provisionedVoiceProfilesForLocale:
markSATEnrollmentSuccessForLanguageCode:
isSATEnrollmentMigratedForLanguageCode:
_isRemoteVoiceTriggerAvailable
discardSATEnrollmentForLanguageCode:
discardSATEnrollmentForProfileId:forLanguageCode:
discardAllSATEnrollment
_getSATEnrollmentAudioPathForLanguageCodeForLegacyVoiceProfile:
_CSSATCachePath
currentDeviceCategory
_currentDeviceCategory
_addAssetManagerEnabledConditions
_shouldCheckNetworkAvailability
isAvailable
initWithMode:deviceUID:
_borealisPowerlog:
powerLogVoiceTriggerStart
powerLogVoiceTriggerStop
logFalseWakeUp:
numFalseWakeUp
setNumFalseWakeUp:
lastAggTimeFalseWakeUp
setLastAggTimeFalseWakeUp:
assetManagerEnabledPolicy
_checkVoiceTriggerEnabled
_didReceiveVoiceTriggerSettingChanged:
CSVoiceTriggerEnabledMonitor:didReceiveEnabled:
voiceTriggerEnabled
_didReceiveVoiceTriggerSettingChangedInQueue:
_isVoiceTriggerEnabled
CSAlwaysOnProcessorStateMonitor:didReceiveStateChange:
_didReceiveAOPListeningStateChange:
_isListeningEnabled
_handleXPCTimeConvertProvidingTypeHostTimeFromSampleCountMessage:messageBody:client:
_handleXPCTimeConvertProvidingTypeSampleCountFromHostTimeMessage:messageBody:client:
analyzeImplicitUtterance:
triggerVoiceProfileRetrainingWithAsset:
_processRemoteHeySiriCommandWithRequest:fromSenderID:withReply:
_processParallelRecordingCommandWithRequest:fromSenderID:withReply:
_sendParallelRecordingsToPeerId:voiceProfileRequestInfo:withReply:
_receiveParallelRecordingFromPeerId:recordingInfo:withReply:
_receiveVoiceProfileFromPeerId:voiceProfileInfo:withReply:
_processGradingDataFetchCommandWithRequest:fromSenderID:withReply:
_processVoiceProfileDeleteCommandWithRequest:fromSenderID:withReply:
_receiveVoiceGradingDataFromPeerId:requestInfo:withReply:
_processMusicAccountSignInCommandFromPeerId:requestInfo:withReply:
_processVoiceProfileListQueryCommandFromPeerId:requestInfo:withReply:
_processFetchVoiceProfileCommandFromPeerId:requestInfo:withReply:
_processReverseTransferVoiceProfileCommandFromPeerId:requestInfo:withReply:
_processVoiceProfileUpdateTriggerFromPeerId:requestInfo:withReply:
_sendVoiceGradingDataToPeerId:
_sendVoiceTriggerGradingDataToPeerId:
_sendVoiceProfileUpdateTriggerToPeerId:forLocale:
spidAudioTrainUtterancesDir
sendMessageWithPayload:toPeer:withReply:
_compressFilesInDirectory:matchingPredicate:compressedFileAvailable:
companionSyncVoiceTriggerUtterancesEnabled
voiceTriggerAudioLogDirectory
_sendGradingData:withFileName:toPeerId:withCompressedFlag:withUncompressedDataSize:withBatchId:withRetainFileFlag:
spIdAudioLogsGradingDir
moveItemAtPath:toPath:error:
spIdSiriDebugVoiceProfileRootDirectoryForProfile:locale:
writeToFile:options:error:
spIdSiriDebugGradingDataRootDirectory
launchSiriDebugAppWithMessage:
speakerIdEnabled
temporaryDirectory
initNewVoiceProfileWithLocale:
setSiriDebugID:
setSharedHomeID:
setOnboardedType:
siriProfileId
siriDebugID
sharedHomeID
dateAdded
numberOfBaseProfileSatVectors
numberOfImplicitProfileSatVectors
onboardedType
initWithObjectsAndKeys:
_sendVoiceProfile:toPeerId:
spIdSATAudioDirForLocale:profileId:spidType:
voiceProfileFilePath
spIdSiriDebugVoiceProfileCacheDirectoryForProfile:locale:
processRemoteCommandWithPayload:fromPeer:withReply:
sendVoiceGradingDataToNearbyPeer
sendVoiceTriggerGradingDataToCompanion
sendVoiceProfileUpdatedMessageToNearbyPeerForLocale:
adCompanionServiceProvider
setAdCompanionServiceProvider:
lastCommunicatedPeer
setLastCommunicatedPeer:
voiceTriggerBatchId
setVoiceTriggerBatchId:
voiceIdentificationBatchId
setVoiceIdentificationBatchId:
_adCompanionServiceProvider
_lastCommunicatedPeer
_voiceTriggerBatchId
_voiceIdentificationBatchId
supportRaiseToSpeak
supportHearstVoiceTrigger
supportPremiumWatchAssets
supportTTS
supportJarvisVoiceTrigger
supportBluetoothDeviceVoiceTrigger
rootQueueWithFixedPriority:
csAudioProcessingQueuePriority
supportContinuousVoiceTrigger
supportKeywordDetector
supportSelfTriggerSuppression
supportCSTwoShotDecision
supportHybridEndpointer
supportSAT
supportPremiumModel
supportPhatic
shouldDelayPhaticForMyriadDecision
supportSessionActivateDelay
supportLanguageDetector
supportTdsrOnCS
shouldDownloadVTAssetsOnDaemon
hasRemoteCoreSpeech
supportCircularBuffer
getFixedPrioritySerialQueueWithLabel:fixedPriority:
getFixedHighPrioritySerialQueueWithLabel:
deviceUserAssignedName
dateWithTimeIntervalSince1970:
timeIntervalSince1970
dictionaryWithObjectsAndKeys:
dictionaryRepresentation
initWithDictionary:
setDateAdded:
setVoiceProfileFilePath:
setProfileID:
setSiriProfileId:
numberOfExplicitSatVectors
setNumberOfExplicitSatVectors:
setNumberOfBaseProfileSatVectors:
setNumberOfImplicitProfileSatVectors:
_locale
_dateAdded
_voiceProfileFilePath
_siriProfileId
_onboardedType
_numberOfExplicitSatVectors
_numberOfBaseProfileSatVectors
_numberOfImplicitProfileSatVectors
_sharedHomeID
_siriDebugID
initWithDownloadOption:
_createPeriodicalDownloadTimer
_startPeriodicalDownload
_stopPeriodicalDownload
_fetchRemoteMetaData
_canFetchRemoteAsset:
CSAssetManagerDidDownloadNewAsset:
setAssetDownloadingOption:
assetForCurrentLanguageOfType:
installedAssetForCurrentLanguageOfType:
installedAssetForCurrentLanguageOfType:completion:
_enablePolicy
_currentLanguageCode
_downloadingOption
_downloadTimer
_downloadTimerCount
getHostClockFrequency
zeroFilterApproxAbsSpeechThreshold
vtEndInSampleCount
setVtEndInSampleCount:
numSamplesProcessed
setNumSamplesProcessed:
_vtEndInSampleCount
_numSamplesProcessed
initWithEndpointThreshold:
_transaction
_description
_handleMetricProvidingRequestTypeAudioMetricMessage:messageBody:client:
audioMetricProvider
setAudioMetricProvider:
_audioMetricProvider
addObserver:observeFilteredGestures:includingWhenScreenOff:
gestureType
timestamp
_didReceiveWakeGesture
gestureMonitorDidReceiveWakeGesture:
wakeGestureRecognized:
wakeGestureRecognized:date:
_gestureMonitor
_handleActivateEventMesssage:client:
address
supportDoAP
_supportDoAP
_address
siriClientBehaviorMonitor:willStartStreamWithContext:option:
siriClientBehaviorMonitor:didStartStreamWithContext:successfully:option:
siriClientBehaviorMonitor:willStopStream:
siriClientBehaviorMonitor:didStopStream:
setIsStreaming:
_isStreaming
_checkAllConditionsEnabled
notifyCallback:
notifyCallback
_monitors
_conditions
_callback
_notifyObserver:withLanguageCode:
_didReceiveLanguageCodeUpdate
URLsForDirectory:inDomains:
lastObject
spIdAudioLogsDir
enumerateKeysAndObjectsUsingBlock:
satConfigFileNameForCSSpIdType:forModelType:
getProfileVersionFilePathForProfileId:forLanguageCode:
getVoiceProfileVersionFromVersionFilePath:
intValue
getVoiceProfileIdentityFromVersionFilePath:
getVoiceProfileProductCategoryFromVersionFilePath:
setValue:forKey:
setWithObjects:
arrayWithArray:
spIdSiriDebugVTDataDirectory
spIdSiriDebugVoiceProfileStoreRootDirectory
spIdSiriDebugVoiceProfileStoreRootDirectoryForLocale:
dictionaryWithCapacity:
getExplicitEnrollmentUtterancesFromDirectory:
getEnrollmentUtterancesFromDirectory:
insertObject:atIndex:
getImplicitEnrollmentUtterancesFromDirectory:
compare:options:
stringForInvocationStyle:
spIdTypeForString:
stringForCSSATRunMode:
stringForCSSpIdModelType:
spIdTrainedUsersFilePathForLocale:
spIdVoiceProfileImportRootDir
spIdAudioLogsCountLimitReached
cleanupOrphanedVoiceIdGradingFiles
streamAudioFromFileUrl:audioStreamBasicDescriptor:samplesPerStreamChunk:audioDataAvailableHandler:
getCurrentVoiceProfileIdentityForProfileId:forLanguageCode:
getCurrentVoiceProfileProductCategoryForLanguageCode:
checkIfMigrationNecessaryForCompatibilityVersion:forLanguageCode:
migrateVoiceProfileToVersion:forLanguageCode:
getNumberOfAudioFilesInDirectory:
dumpFilesInDirectory:
markUploadForVoiceProfile:
spIdSiriDebugTrainedUsersFilePathForLocale:
mapRawScores:toScoresOfType:withRawScoreOffset:withRawScoreScale:withLogitCeil:withLogitFloor:withSATThreshold:
spIdMapScoresToSharedSiriID:
spIdMapIdentifiersToSiriDebugID:
spIdComposeProfileVersionsFor:
getEnrollmentUtterancesForModelType:forLanguageCode:
getExplicitOnlyEnrollmentUtterancesFromDirectory:
getExplicitEnrollmentUtterancesForType:forLanguageCode:forProfileID:
getSortedImplicitEnrollmentUtterancesForType:forLanguageCode:forProfileID:
getImplicitEnrollmentUtterancesPriorTo:forType:forLanguageCode:forProfileID:
deleteExistingSATModelForLanguageCode:
_recordState
initWithType:deviceId:activationInfo:vadScore:hosttime:
_activationTypeString
remoteMicVoiceTriggerEvent:activationInfo:hostTime:
remoteMicVADEvent:vadScore:hostTime:
builtInMicVoiceTriggerEvent:hostTime:
jarvisVoiceTriggerEvent:activationInfo:hostTime:
mediaserverdLaunchedEvent:
activationInfo
setActivationInfo:
setHosttime:
vadScore
setVadScore:
_vadScore
_activationInfo
_hosttime
_notificationKey
_didInstalledNewVoiceTriggerAsset
addUtterances:toProfile:toModel:withScoreThreshold:withCompletionBlock:
addUtterances:withScoreThreshold:withCompletionBlock:
processUtterance:ofSpIdType:withUpdatePolicyBlock:withCompletionBlock:
checkIfRetrainingIsRequired
checkIfUpdateNecessaryForAudioFileCount:
satVectorCount
maxAllowedSatVectorCount
maxAllowedImplicitTrainingUtterances
baseProfileConfidenceScoreThreshold
implicitConfidenceScoreThreshold
implicitDeltaConfidenceScoreThreshold
maxNumberOfBaseProfileUtterances
_baseProfileConfidenceScoreThreshold
_implicitConfidenceScoreThreshold
_implicitDeltaConfidenceScoreThreshold
_maxNumberOfBaseProfileUtterances
setAudioSessionState:
_audioSessionState
splitterState
splitterDeviceList
splitterEnabled
_splitterDeviceList
_splitterEnabled
startManager
_createClearLoggingFileTimer
_startClearLoggingFilesTimer
_getAudioRecorderWithError:
audioProviders
daysBeforeRemovingLogFiles
_getVoiceTriggerAssetIfNeeded:
registerSpeechController:
registerSiriClientProxy:
registerVolumeController:
audioProviderWithUUID:
audioProviderWithStreamID:
_reinitializeSmartSiriVolumeWithAsset:
assetQueryQueue
setAssetQueryQueue:
setAudioProviders:
clientController
setClientController:
volumeClientController
setVolumeClientController:
voiceTriggerImplicitTraining
setVoiceTriggerImplicitTraining:
clearLoggingFileTimer
setClearLoggingFileTimer:
clearLoggingFileTimerCount
setClearLoggingFileTimerCount:
opportuneSpeakListnerTestService
setOpportuneSpeakListnerTestService:
_smartSiriVolume
_assetQueryQueue
_audioProviders
_clientController
_volumeClientController
_voiceTriggerImplicitTraining
_clearLoggingFileTimer
_clearLoggingFileTimerCount
_opportuneSpeakListnerTestService
audioConverterBitrate
alertMuteBehaviorDict
voiceTriggerRecordContext
hearstVoiceTriggerRecordContext:
jarvisVoiceTriggerRecordContext:
opusRecordSettings
speexRecordSettings
alertMuteSettings
_methodToken
_continuousZeroCounter
_zeroCounterWinSz
_analyzeStep
_shouldDeinterleaveAudio
setRtsTriggerInfo:
_voiceTriggerInfo
_rtsTriggerInfo
hybridEndpointerAssetFilename
initWithResourcePath:configFile:configVersion:
fallBackAssetResourcePath
_decodeJson:
assetForAssetType:resourcePath:configVersion:
defaultFallBackAssetForSmartSiriVolume
defaultFallBackAssetForHearst
getBoolForKey:category:default:
getStringForKey:category:default:
containsKey:category:
containsCategory:
hashFromResourcePath
configVersion
_decodedInfo
_path
_resourcePath
_configVersion
audioAlertProvider
setAudioAlertProvider:
setAudioMeterProvider:
_handleAudioProvidingMessage:messageBody:client:
_handlePingPongMessage:client:
_handleAudioProvidingRequestTypeSwitchMessage:messageBody:client:
_getAudioProvideWithContext:streamClientType:
_notifyXPCDisconnectionToProxies
_notifyXPCDisconnectionToProxy:
audioSessionProvidingProxy
setAudioSessionProvidingProxy:
audioSessionInfoProvidingProxy
setAudioSessionInfoProvidingProxy:
audioStreamProvidingProxy
setAudioStreamProvidingProxy:
audioAlertProvidingProxy
setAudioAlertProvidingProxy:
audioMeterProvidingProxy
setAudioMeterProvidingProxy:
audioMetricProvidingProxy
setAudioMetricProvidingProxy:
smartSiriVolumeProvidingProxy
setSmartSiriVolumeProvidingProxy:
_audioSessionProvidingProxy
_audioSessionInfoProvidingProxy
_audioStreamProvidingProxy
_audioAlertProvidingProxy
_audioMeterProvidingProxy
_audioMetricProvidingProxy
_smartSiriVolumeProvidingProxy
_daemonDidLaunch
mainRunLoop
_daemonWillShutdown
_setupNotifyHandlers
notifyDaemonStateChanged:
sharedDaemon
shutdown
xpcListener
setXpcListener:
activationXpcListener
setActivationXpcListener:
voiceIdXpcListener
setVoiceIdXpcListener:
voiceTriggerXpcListener
setVoiceTriggerXpcListener:
_xpcListener
_activationXpcListener
_voiceIdXpcListener
_voiceTriggerXpcListener
stringWithCString:encoding:
createAudioCircularBufferWithDefaultSettings
copySamplesFromHostTime:
copyBufferWithNumSamplesCopiedIn:
setBufferLength:
_csAudioCircularBufferImpl
_bufferLength
readAudioChunksFrom:block:
_didReceiveDaemonStateChanged:
_notifyObserver:withDaemonState:
coreSpeechDaemonStateMonitor:didReceiveStateChanged:
hostTimeToTimeInterval:
macHostTimeFromBridgeHostTime:
currentBuiltinSpeakerState
isBuiltinSpeakerMuted
waitingForConnection:error:
isConnected
startRecordingWithOptions:error:
stopRecording:
didPlayEndpointBeep
hasPendingTwoShotBeep
objectAtIndexedSubscript:
_decoder
CSSiriAssertionMonitor:didReceiveEnabled:
_assertionState
psrTdAssetExistsAtResourcePath:
initWithResourcePath:satDirectory:assetHash:shouldCreateModelDir:delegate:
getThresholdSAT
getCombinationWeight
resetForNewRequest
processAudio:numSamples:
satScore
logWithAudioFilepath:
tdPsrCanProcessRequest
tdSATModelFilePath
lastRequestSatScore
speakerVector
setSpeakerVector:
_tdPsrCanProcessRequest
_lastRequestSatScore
_tdSATModelFilePath
_getSATVectorCount
_speakerVector
_handleSessionProvidingRequestTypePrewarmMessage:client:
_handleSessionProvidingRequestTypeActivateMessage:messageBody:client:
_handleSessionProvidingRequestTypeDeactivateMessage:messageBody:client:
_handleSessionProvidingRequestTypeGetDuckOthersOption:messageBody:client:
_handleSessionProvidingRequestTypeSetDuckOthersOption:messageBody:client:
_handleSessionProvidingRequestTypeEnableMiniDucking:messageBody:client:
_handleSessionProvidingRequestTypeDuckAudioDevice:messageBody:client:
audioSessionProvider:didReceiveAudioSessionInterruptionNotificationWithUserInfo:
audioSessionProvider:didReceiveAudioSessionRouteChangeNotificationWithUserInfo:
audioSessionProvider:didReceiveAudioSessionMediaServicesWereLostNotificationWithUserInfo:
audioSessionProvider:didReceiveAudioSessionMediaServicesWereResetNotificationWithUserInfo:
getLocalUrl
_compatibilityVersion
stringValue
appendString:
_footprint
isPremium
_notifyStopCommandControl
_isCommandControlStreaming
_handleAlertProvidingRequestTypeSetAlertSoundMessage:messageBody:client:
_handleAlertProvidingRequestTypePlayAlertSoundMessage:messageBody:client:
_handleAlertProvidingRequestTypePlayRecordStartingAlertAndResetEndpointerMessage:messageBody:client:
_handleAlertProvidingRequestTypeAlertStartTimeMessage:messageBody:client:
_handleAlertProvidingRequestTypeConfigureAlertBehavior:messageBody:client:
_sendReplyMessageWithResult:event:client:
_audioAlertProvider
_storeModeEnabled
setFileLoggingLevel:
fileLoggingLevel
interstitialRelativeDirForLevel:
isAttentiveSiriEnabled
twoShotNotificationEnabled
setFileLoggingIsEnabled:
secondPassAudioLoggingEnabled
jarvisAudioLoggingEnabled
setJarvisTriggerMode:
getJarvisTriggerMode
startOfSpeechAudioLoggingEnabled
getStartOfSpeechAudioLogFilePath
remoteVoiceTriggerDelayTime
remoteVoiceTriggerEndpointTimeoutWithDefault:
interstitialAbsoluteDirForLevel:
myriadFileLoggingEnabled
enableAudioInjection:
setAudioInjectionFilePath:
speakerIdiTunesAccountSigninEnabled
speakerIdScoreReportingType
audioSessionActivationDelay
useSiriActivationSPIForHomePod
useSiriActivationSPIForwatchOS
iOSBargeInSupportEnabled
shouldOverwriteRemoteVADScore
overwritingRemoteVADScore
setHearstFirstPassModelVersion:
setHearstSecondPassModelVersion:
fakeHearstModelPath
_handleVoiceTriggerXPCServiceMessage:client:
_handleServiceConnectionLostIfNeeded
_handlePhraseSpotterBypassRequest:
_handleVoiceTriggeredSiriSessionCancelled
_handleEnableVoiceTriggerWithSiriAssertionRequest:
EncryptionAudioSampleByteDepth
inputRecordingEncoderAudioQuality
inputRecordingSampleRateConverterAlgorithm
channelForOutputReference
serverLoggingChannelBitset
initWithVoiceProfile:spIdType:languageCode:asset:
pruneVoiceProfileIfNecessary
setAudioFormat:
setEncoderBitRate:
setNumberOfChannels:
setLpcmBitDepth:
setLpcmIsFloat:
setUseCustomizedRecordSettings:
requestForLpcmRecordSettingsWithContext:
requestForOpusRecordSettingsWithContext:
requestForSpeexRecordSettingsWithContext:
isSiri
setIsSiri:
_requiresHistoricalBuffer
_useCustomizedRecordSettings
_lpcmIsFloat
_isSiri
_lpcmBitDepth
_numberOfChannels
_encoderBitRate
_audioFormat
initWithAppBundleIdentifier:
initWithTaskDeliverer:
initWithMessage:makeAppFrontmost:
handleSiriRequest:deliveryHandler:completionHandler:
selectedChannelList
_checkSoftwareUpdateCheckingState
_didReceiveSoftwareUpdateCheckingStateChanged:
_softwareUpdateCheckingState
_notifyObserver:withSoftwareUpdateCheckingRunning:
CSSoftwareUpdateCheckingMonitor:didReceiveStateChanged:
_didReceiveSoftwareUpdateCheckingStateChangedInQueue:
_isSoftwareUpdateCheckingRunning
_notifyObserver:mediaIsPlayingState:
_notePossiblePlayPausedStateChange:
mediaPlayingStateWithCompletion:
addiTunesAccountWithMultiUserToken:withDsid:withAltDsid:withHomeId:withHomeUserId:forProfileId:
_addVoiceTriggerAOPModeEnabledConditions
_addConditionsForIOSBargeIn
_addConditionsForIOSAOP
_isSpeechDetectionDevicePresent
sharedVoiceTriggerClient
voiceTriggerAOPModeEnabledPolicy
_availabilityChanged
_didReceivedNetworkAvailabilityChangedNotification:
_notifyObserver:withNetworkAvailability:
CSNetworkAvailabilityMonitor:didReceiveNetworkAvailabilityChanged:
_handleMeterProvidingRequestTypeSetMeteringEnabledMessage:messageBody:client:
_handleMeterProvidingRequestTypeUpdateMetersMessage:messageBody:client:
_handleMeterProvidingRequestTypePowerMessage:messageBody:client:powerType:
audioMeterProvider
_audioMeterProvider
CSKeywordAnalyzerNDEAPI
AVVC
CSActivationXPCClient
CSAudioTimeConverter
CSAudioSampleRateConverter
CSVolumeMonitor
CSAudioChunk
CSAudioStreamProvidingProxy
CSXPCConnectionDelegate
NSObject
CSAudioStreamProvidingDelegate
CSAudioFileLog
CSAudioSessionInfoProvider
CSAudioSessionInfoProviding
CSAudioFileManager
CSStateMachine
CSSmartSiriVolumeEnablePolicy
CSSiriRestrictionOnLockScreenMonitor
MCProfileConnectionObserver
CSAudioRecordContext
NSCopying
CSAudioZeroFilter
CSSpeechControllerMonitorImpl
CSKeywordAnalyzerQuasar
ResourcePathHash
CSVoiceTriggerAssetHandlerMac
CSVoiceTriggerAssetDownloadMonitorDelegate
CSFirstUnlockMonitorDelegate
CSLanguageCodeUpdateMonitorDelegate
CSAudioStartStreamOption
CSVoiceTriggerAssetChangeMonitor
CSAudioServerCrashMonitor
CSXPCClient
CSAudioSessionProviding
CSAudioStreamProviding
CSAudioAlertProviding
CSAudioMeterProviding
CSAudioMetricProviding
CSSmartSiriVolumeProviding
CSAudioTimeConversionProviding
CSTriggerInfoProviding
CSOpportuneSpeakListnerTestService
CSOpportuneSpeakListenerDelegate
CSTimerMonitor
CSPhraseSpotterEnabledMonitor
CSVoiceTriggerAssetHandler
AudioStreamBasicDescription
CSSpeakerModel
CSVoiceTriggerXPCListener
CSVoiceTriggerXPCConnectionDelegate
CSAudioStreamHolding
SmartSiriVolume
CSVoiceTriggerRTModel
NSSecureCoding
NSCoding
CSAudioProvider
CSAudioRecorderDelegate
CSAudioServerCrashMonitorDelegate
CSAudioPreprocessorDelegate
CSVoiceTriggerDelegate
CSAssetDownloadingOption
Directory
CSVoiceTriggerEnabledPolicyNonAOP
CSBiometricMatchMonitor
CSSpeechDetectionDevicePresentMonitor
CSKeywordAnalyzerNDAPI
RTModel
CSGestureMonitor
CSAudioRouteChangeMonitorImpl
remoteVoiceActivityVADBuffer
CSAudioRecorder
AVVoiceControllerRecordDelegate
CSAudioDecoderDelegate
CSAudioFileReaderDelegate
CSOpportuneSpeakListener
CSSPGEndpointAnalyzerDelegate
CSMediaPlayingMonitorDelegate
CSSpeakerDetectorNDAPI
XPCObject
CSSiriEnabledMonitor
CSSmartSiriVolumeProvidingProxy
CSSpIdSATAnalyzer
CSBluetoothManager
CSJarvisTriggerModeMonitor
CSActivationXPCListener
CSActivateXPCConnectionDelegate
AudioHardware
CSAudioSessionInfoProvidingProxy
CSAudioSessionInfoProvidingDelegate
CSAssetController
CSEventMonitorDelegate
Utils
RecordContext
CSNovDetectorResult
CSNovDetector
CSSmartSiriVolume
CSSiriEnabledMonitorDelegate
CSAlarmMonitorDelegate
CSTimerMonitorDelegate
CSVolumeMonitorDelegate
CSListeningEnabledPolicyWatch
LanguageCode
CSAudioFileReader
CSMyriadSelfTriggerCoordinator
CSSelfTriggerDetectorDelegate
CSUserVoiceProfileStore
CSBeepCanceller
CSSpringboardStartMonitor
CSActivationEventNotifier
CSAlarmMonitor
CSSpIdImplicitTraining
CSFirstUnlockMonitor
CSVoiceTriggerEnrollmentDataManager
CSInvalidSATEntriesCleaner
LPCMTypeConversion
CSAudioChunkForTV
CSVoiceTriggerXPCService
CSVoiceTriggerXPCClientDelegate
CSAudioRecordDeviceInfo
CSCommandControlBehaviorMonitor
CSPlainAudioFileWriter
CSAudioFileWriter
CSAudioStream
CSVoiceTriggerAssetMetaUpdateMonitor
CSOpportuneSpeakListenerOption
CSSpIdSpeakerVectorGenerator
CSAudioPreprocessor
CSVoiceTriggerAwareZeroFilterDelegate
CSBeepCancellerDelegate
CSAudioRouteChangeMonitorImplWatch
CSAggregator
CSUtteranceMetadataManager
CSSpeechEndpointAssetMetaUpdateMonitor
CSScreenLockMonitor
CSVoiceProfileContext
CSVoiceIdXPCConnection
CSVoiceProfileManager
CSAssetManagerEnablePolicy
CSXPCListener
CSVoiceTriggerStatAggregator
CSAssetManagerEnablePolicyFactory
CSVoiceTriggerEnabledMonitor
CSAlwaysOnProcessorStateMonitor
CSAudioTimeConversionProvidingProxy
CSVoiceProfileRetrainManager
CSP2PService
CSUtils
CSUserVoiceProfile
CSAssetManager
CSVoiceTriggerAssetMetaUpdateMonitorDelegate
CSSpeechEndpointAssetMetaUpdateMonitorDelegate
CSAssetControllerDelegate
CSVoiceTriggerAwareZeroFilter
CSSPGEndpointAnalyzer
CSOSTransaction
CSAudioMetricProvidingProxy
CSGestureMonitorWatch
CSLSWakeGestureObserver
CSActivationXPCConnection
CSBluetoothDeviceInfo
CSSiriClientBehaviorMonitor
CSPolicy
CSLanguageCodeUpdateMonitor
CSEventMonitor
SpeakerId
CSSpeechControllerMonitor
CSActivationEvent
CSVoiceTriggerAssetDownloadMonitor
CSVoiceProfileTrainer
CSAudioSessionMonitor
CSOpportuneSpeakListenerDeviceManager
CSBluetoothWirelessSplitterInfo
CSVoiceIdXPCListener
CSDiagnosticReporter
CSSpeechManager
CSStateMachineDelegate
CSVoiceTriggerAssetHandlerDelegate
CSActivationEventNotifierDelegate
CSVoiceTriggerXPCServiceDelegate
CSAudioProviderDelegate
CSVoiceIdXPCClient
VoiceTriggerRecord
CSAudioZeroCounter
CSVoiceTriggerEventInfoProvider
CSAsset
CSXPCConnection
CSHostDaemon
CSAudioCircularBuffer
AudioFile
CSCoreSpeechDaemonStateMonitor
Time
CSBuiltinSpeakerStateMonitor
CSRemoteRecordClient
CSAudioDecoder
CSSiriAssertionMonitor
CSSpIdVTTextDependentSpeakerRecognizer
CSAudioSessionProvidingProxy
CSAudioSessionProvidingDelegate
CSCommandControlStreamEventMonitor
CSCommandControlBehaviorMonitorDelegate
CSAudioAlertProvidingProxy
CSAudioAlertProvidingDelegate
CSPreferences
CSVoiceTriggerXPCConnection
Bitset
CSAudioRouteChangeMonitor
CSAlertBehaviorPredictor
CSConfig
machXPC
CSVoiceProfilePruner
CSAudioStreamRequest
CSSiriDebugConnection
CSSelectiveChannelAudioFileWriter
CSSoftwareUpdateCheckingMonitor
CSMediaPlayingMonitor
CSBatteryMonitor
CSiTunesAccountManager
CSVoiceTriggerAOPModeEnabledPolicyIOS
CSAVVoiceTriggerClientManager
CSVoiceTriggerAOPModeEnabledPolicyFactory
CSNetworkAvailabilityMonitor
CSVoiceTriggerXPCClient
CSAudioMeterProvidingProxy
@24@0:8@16
v16@0:8
v24@0:8@16
Q16@0:8
v24@0:8Q16
@16@0:8
@"NSMutableData"
@"<CSKeywordAnalyzerNDEAPIScoreDelegate>"
@24@0:8Q16
q24@0:8q16
v32@0:8@16@?24
v40@0:8@16@24@?32
@"NSObject<OS_xpc_object>"
v32@0:8Q16Q24
Q24@0:8Q16
@"NSObject<OS_dispatch_queue>"
@96@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56
^{OpaqueAudioConverter=}96@0:8{AudioStreamBasicDescription=dIIIIIIII}16{AudioStreamBasicDescription=dIIIIIIII}56
^{OpaqueAudioConverter=}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
f16@0:8
v24@0:8@?16
@72@0:8@16Q24Q32Q40Q48Q56@64
@28@0:8f16Q20
B16@0:8
@40@0:8Q16Q24Q32
@32@0:8Q16Q24
v40@0:8Q16Q24@?32
@"NSData"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16@24@32
v40@0:8@"NSObject<OS_xpc_object>"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
v40@0:8@"CSXPCConnection"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
v32@0:8@16q24
v32@0:8@16@24
v32@0:8@"<CSAudioStreamProviding>"16q24
v32@0:8@"<CSAudioStreamProviding>"16@"CSAudioChunk"24
v32@0:8@"<CSAudioStreamProviding>"16@"CSAudioChunkForTV"24
v44@0:8@16@24B32@36
@"<CSAudioStreamProviding>"
@"<CSTriggerInfoProviding>"
@"CSXPCConnection"
@"CSAudioStream"
@"NSDictionary"
@"CSAudioRecordContext"
@"NSString"
^{OpaqueExtAudioFile=}
@"NSURL"
I16@0:8
v24@0:8@"<CSAudioSessionInfoProvidingDelegate>"16
@"NSHashTable"
@104@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64
v20@0:8f16
@24@0:8q16
v40@0:8q16q24q32
v24@0:8q16
q16@0:8
@"<CSStateMachineDelegate>"
@"NSMutableDictionary"
v32@0:8@"MCProfileConnection"16@"NSDictionary"24
v20@0:8B16
v28@0:8@16B24
@24@0:8^{_NSZone=}16
@32@0:8q16@24
@36@0:8Q16S24d28
Q40@0:8@16Q24^@32
Q24@0:8^@16
{unique_ptr<CSAudioZeroFilterImpl<unsigned short>, std::__1::default_delete<CSAudioZeroFilterImpl<unsigned short> > >="__ptr_"{__compressed_pair<CSAudioZeroFilterImpl<unsigned short> *, std::__1::default_delete<CSAudioZeroFilterImpl<unsigned short> > >="__value_"^{CSAudioZeroFilterImpl<unsigned short>}}}
v32@0:8Q16@24
v40@0:8@16Q24@32
v32@0:8@16Q24
@36@0:8@16@24B32
v28@0:8r^s16i24
d16@0:8
@"NSMutableArray"
@"NSArray"
@"<CSKeywordAnalyzerQuasarScoreDelegate>"
v28@0:8@"CSFirstUnlockMonitor"16B24
v32@0:8@16@"NSString"24
@"CSAsset"
@"<CSVoiceTriggerAssetChangeDelegate>"
B24@0:8^@16
B32@0:8Q16^@24
v24@0:8@"<CSAudioSessionProvidingDelegate>"16
B32@0:8@16^@24
@40@0:8@16@24^@32
B40@0:8@16@24^@32
v40@0:8Q16Q24@32
@32@0:8@16d24
B32@0:8@"CSAudioRecordContext"16^@24
@"CSAudioStream"40@0:8@"CSAudioStreamRequest"16@"NSString"24^@32
v40@0:8@"CSAudioStreamRequest"16@"NSString"24@?<v@?@"CSAudioStream"@"NSError">32
B40@0:8@"CSAudioStream"16@"CSAudioStreamRequest"24^@32
v40@0:8@"CSAudioStream"16@"CSAudioStreamRequest"24@?<v@?B@"NSError">32
v40@0:8@"CSAudioStream"16@"CSAudioStartStreamOption"24@?<v@?B@"NSError">32
v40@0:8@"CSAudioStream"16@"CSAudioStopStreamOption"24@?<v@?B@"NSError">32
@"CSAudioChunk"32@0:8Q16Q24
@"CSAudioChunk"24@0:8Q16
v40@0:8Q16Q24@"NSURL"32
v32@0:8Q16@"NSURL"24
@"CSAudioStreamHolding"32@0:8@"NSString"16d24
v24@0:8@"CSAudioStreamHolding"16
@"CSAudioRecordDeviceInfo"16@0:8
@"NSDictionary"16@0:8
B32@0:8@16q24
B24@0:8q16
v24@0:8@"<CSAudioAlertProvidingDelegate>"16
B32@0:8@"NSURL"16q24
v24@0:8@"NSDictionary"16
f24@0:8Q16
v32@0:8@"CSAudioRecordContext"16@?<v@?@"NSDictionary"@"NSDictionary">24
B40@0:8@16Q24^@32
v28@0:8B16@20
@"<CSAudioSessionProvidingDelegate>"
@"<CSAudioStreamProvidingDelegate>"
@"<CSAudioAlertProvidingDelegate>"
@"<CSXPCClientDelegate>"
@"NSMutableSet"
v28@0:8@"CSOpportuneSpeakListener"16B24
@"CSOpportuneSpeakListener"
{AudioStreamBasicDescription=dIIIIIIII}16@0:8
{AudioStreamBasicDescription=dIIIIIIII}24@0:8f16I20
@32@0:8@16@24
v40@0:8@"CSVoiceTriggerXPCConnection"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
@"NSMapTable"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@64@0:8@16@24@32@40@48@56
@40@0:8@16@24@32
v56@0:8@16Q24@32@40Q48
v44@0:8@16Q24B32@36
v40@0:8@16Q24q32
v40@0:8@16q24@32
v56@0:8@"CSAudioRecorder"16Q24@"NSData"32@"NSData"40Q48
v40@0:8@"CSAudioRecorder"16Q24@"CSAudioChunkForTV"32
v44@0:8@"CSAudioRecorder"16Q24B32@"NSError"36
v40@0:8@"CSAudioRecorder"16Q24q32
v32@0:8@"CSAudioRecorder"16q24
v40@0:8@"CSAudioRecorder"16q24@"NSError"32
v24@0:8@"CSAudioRecorder"16
v32@0:8@"CSAudioRecorder"16@"NSDictionary"24
v28@0:8@"CSAudioRecorder"16B24
v32@0:8@"CSAudioRecorder"16@"NSError"24
v24@0:8@"CSAudioServerCrashMonitor"16
v40@0:8@16@24Q32
v40@0:8@"CSAudioPreprocessor"16@"NSData"24Q32
v32@0:8@"NSDictionary"16@"NSString"24
v24@0:8@"NSData"16
@32@0:8Q16@24
B32@0:8@16@24
v48@0:8@16@24Q32@40
v24@0:8d16
@"CSAudioRecorder"
@"<CSAudioProviderDelegate>"
@"CSAudioCircularBuffer"
@"CSAudioPreprocessor"
@"CSOSTransaction"
@"NSObject<OS_dispatch_group>"
@"NSUUID"
v36@0:8@16@24f32
@48@0:8@16@24@32^@40
B32@0:8^B16^Q24
@"<CSBiometricMatchMonitorDelegate>"
v20@0:8I16
@"CSNovDetector"
@"<CSKeywordAnalyzerNDAPIScoreDelegate>"
@40@0:8Q16Q24@32
v36@0:8@16B24@28
v28@0:8@16i24
v36@0:8@16i24d28
v36@0:8@16i24@28
v28@0:8@"AVVoiceController"16B24
v36@0:8@"AVVoiceController"16B24@"NSError"28
v32@0:8@"AVVoiceController"16q24
v24@0:8@"AVVoiceController"16
v28@0:8@"AVVoiceController"16i24
v36@0:8@"AVVoiceController"16i24d28
v32@0:8@"AVVoiceController"16@"NSError"24
v36@0:8@"AVVoiceController"16i24@"NSError"28
v40@0:8@"AVVoiceController"16@"AVVCAlertInformation"24@"NSError"32
v32@0:8@"AVVoiceController"16@"NSDictionary"24
v32@0:8@"AVVoiceController"16@"AVVCAudioBuffer"24
v28@0:8B16@"NSArray"20
v44@0:8@"AVVoiceController"16Q24B32@"NSError"36
v40@0:8@"AVVoiceController"16Q24q32
v40@0:8@"AVVoiceController"16Q24@"AVVCAudioBuffer"32
v32@0:8@"AVVoiceController"16Q24
v60@0:8@16Q24@32@40Q48I56
v60@0:8@"CSAudioDecoder"16Q24@"NSData"32@"NSData"40Q48I56
v40@0:8@"CSAudioFileReader"16@"NSData"24Q32
v36@0:8@"CSAudioFileReader"16B24@"NSError"28
v32@0:8@"CSAudioFileReader"16q24
@32@0:8@16^@24
@24@0:8^@16
Q32@0:8@16^@24
B24@0:8Q16
B40@0:8Q16Q24^@32
v48@0:8@16Q24@32Q40
@28@0:8@16I24
v36@0:8B16Q20@28
v32@0:8q16Q24
@"AVVoiceController"
{AudioBufferList="mNumberBuffers"I"mBuffers"[1{AudioBuffer="mNumberChannels"I"mDataByteSize"I"mData"^v}]}
^{AudioBufferList=I[1{AudioBuffer=II^v}]}
@"CSRemoteRecordClient"
@"CSAudioFileReader"
v32@0:8@"CSMediaPlayingMonitor"16q24
v28@0:8B16@?20
v28@0:8@16f24
i16@0:8
v20@0:8i16
@"<CSOpportuneSpeakListenerDelegate>"
@"CSSPGEndpointAnalyzer"
@"<CSAudioSessionProviding>"
f24@0:8@16
@32@0:8@16Q24
@"CSSpeakerModel"
@"<CSSpeakerDetectorNDAPIDelegate>"
@72@0:8Q16Q24Q32@40@48@56@64
f32@0:8@16Q24
@24@0:8^{BTLocalDeviceImpl=}16
v40@0:8^{BTDeviceImpl=}16I24i28I32i36
v28@0:8^{BTSessionImpl=}16i24
v24@0:8^{BTSessionImpl=}16
v32@0:8^{BTLocalDeviceImpl=}16i24i28
^{BTSessionImpl=}16@0:8
^{BTLocalDeviceImpl=}16@0:8
v24@0:8^{BTLocalDeviceImpl=}16
^{BTSessionImpl=}
^{BTLocalDeviceImpl=}
v40@0:8@"CSActivationXPCConnection"16@"NSObject<OS_xpc_object>"24@"NSObject<OS_xpc_object>"32
v32@0:8@"<CSAudioSessionInfoProviding>"16@"NSDictionary"24
@"<CSAudioSessionInfoProviding>"
v40@0:8Q16@24@?32
v32@0:8Q16@?24
v40@0:8@16Q24@?32
v40@0:8@16@?24@?32
@40@0:8@16Q24@32
v32@0:8^@16Q24
@20@0:8I16
v28@0:8@"CSSiriEnabledMonitor"16B24
v32@0:8@"CSAlarmMonitor"16q24
v32@0:8@"CSTimerMonitor"16q24
v28@0:8@"CSVolumeMonitor"16f24
@28@0:8f16@20
v32@0:8d16@?24
v28@0:8I16q20
v52@0:8@16q24B32Q36Q44
f24@0:8q16
f24@0:8f16f20
f36@0:8f16f20f24f28f32
f44@0:8f16f20f24f28f32f36f40
f28@0:8f16f20f24
f20@0:8f16
{unique_ptr<SmartSiriVolume, std::__1::default_delete<SmartSiriVolume> >="__ptr_"{__compressed_pair<SmartSiriVolume *, std::__1::default_delete<SmartSiriVolume> >="__value_"^{SmartSiriVolume}}}
{vector<float, std::__1::allocator<float> >="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::__1::allocator<float> >="__value_"^f}}
@"NSUserDefaults"
@"CSSmartSiriVolumeEnablePolicy"
@"<CSSmartSiriVolumeDelegate>"
@"NSObject<OS_dispatch_source>"
B24@0:8d16
@"<CSAudioFileReaderDelegate>"
v32@0:8@"CSSelfTriggerDetector"16@"NSDictionary"24
@"<CSMyriadSelfTriggerCoordinatorDelegate>"
B40@0:8@16@24Q32
v36@0:8@16B24@?28
v56@0:8@16@24@32@40@?48
v72@0:8@16@24@32@40@48@56@?64
{unique_ptr<BatchBeepCanceller, std::__1::default_delete<BatchBeepCanceller> >="__ptr_"{__compressed_pair<BatchBeepCanceller *, std::__1::default_delete<BatchBeepCanceller> >="__value_"^{BatchBeepCanceller}}}
{vector<short, std::__1::allocator<short> >="__begin_"^s"__end_"^s"__end_cap_"{__compressed_pair<short *, std::__1::allocator<short> >="__value_"^s}}
@"<CSBeepCancellerDelegate>"
v48@0:8Q16@24@32@?40
@?16@0:8
@"CSActivationEvent"
v48@0:8@16@24@32@?40
v36@0:8@16@24B32
B36@0:8@16@24B32
B44@0:8@16@24Q32B40
B28@0:8@16B24
@36@0:8@16q24B32
v28@0:8@"CSVoiceTriggerXPCClient"16B24
v36@0:8B16@20d28
v28@0:8B16d20
@"<CSVoiceTriggerXPCServiceDelegate>"
@"CSVoiceTriggerXPCClient"
@44@0:8@16B24@28@36
B32@0:8r^v16Q24
B32@0:8r^v16q24
@"CSAudioStreamRequest"
r*16@0:8
@48@0:8Q16@24@32@40
v40@0:8@"CSVoiceTriggerAwareZeroFilter"16@"NSData"24Q32
v40@0:8@"CSBeepCanceller"16@"NSData"24Q32
@20@0:8f16
v32@0:8f16B20@24
B20@0:8f16
@"<CSAudioPreprocessorDelegate>"
@"CSAudioSampleRateConverter"
@"CSVoiceTriggerAwareZeroFilter"
@"CSBeepCanceller"
@"CSAudioZeroCounter"
v36@0:8^@16^@24B32
v32@0:8@16d24
v64@0:8@16@24B32@36@44Q52B60
@"NSNumber"
v44@0:8B16@20@28@36
@32@0:8@16@?24
v48@0:8@16Q24@?32@?40
@40@0:8@16@24Q32
@40@0:8@16Q24Q32
B40@0:8@16@24@32
v64@0:8@16@24@32@40@48@?56
@"CSVoiceIdXPCClient"
v64@0:8@16@24@32B40Q44@52B60
@"<CSADCompanionServiceProvider>"
@20@0:8i16
@28@0:8@16i24
@"NSDate"
v32@0:8@"CSAssetController"16Q24
@"CSPolicy"
@"CSAssetDownloadingOption"
@"<CSVoiceTriggerAwareZeroFilterDelegate>"
@"CSAudioZeroFilter"
@"<CSSPGEndpointAnalyzerDelegate>"
@"NSObject<OS_os_transaction>"
@"<CSAudioMetricProviding>"
v24@0:8@"CSLSWakeGesture"16
v32@0:8Q16@"NSDate"24
@"CSLSWakeGestureMonitor"
@"<CSActivateXPCConnectionDelegate>"
Q24@0:8@16
@48@0:8@16@24Q32Q40
v80@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24Q64@?72
Q32@0:8@16@24
B32@0:8Q16@24
q24@0:8@16
@52@0:8@16Q24f32f36f40f44f48
@40@0:8Q16@24@32
@48@0:8@16Q24@32@40
@36@0:8@16f24Q28
@52@0:8Q16@24@32f40Q44
@48@0:8Q16@24@32Q40
v52@0:8@16@24Q32f40@?44
v36@0:8@16f24@?28
v32@0:8q16q24
v32@0:8@"CSVoiceTriggerAssetHandler"16@"CSAsset"24
v40@0:8@"CSActivationEventNotifier"16@"CSActivationEvent"24@?<v@?B@"NSError">32
v28@0:8@"CSVoiceTriggerXPCService"16B24
v32@0:8@"CSAudioProvider"16Q24
@"CSSmartSiriVolume"
@"<CSSpeechManagerDelegate>"
@"CSSpIdImplicitTraining"
@"CSOpportuneSpeakListnerTestService"
@32@0:8@16f24I28
v28@0:8@16I24
B32@0:8@16Q24
@"<CSXPCConnectionDelegate>"
@"CSAudioSessionProvidingProxy"
@"CSAudioSessionInfoProvidingProxy"
@"CSAudioStreamProvidingProxy"
@"CSAudioAlertProvidingProxy"
@"CSAudioMeterProvidingProxy"
@"CSAudioMetricProvidingProxy"
@"CSSmartSiriVolumeProvidingProxy"
@"CSXPCListener"
@"CSActivationXPCListener"
@"CSVoiceIdXPCListener"
@"CSVoiceTriggerXPCListener"
@32@0:8Q16f24f28
v32@0:8r^v16Q24
v40@0:8r^v16Q24Q32
@24@0:8^Q16
{unique_ptr<corespeech::CSAudioCircularBufferImpl<unsigned short>, std::__1::default_delete<corespeech::CSAudioCircularBufferImpl<unsigned short> > >="__ptr_"{__compressed_pair<corespeech::CSAudioCircularBufferImpl<unsigned short> *, std::__1::default_delete<corespeech::CSAudioCircularBufferImpl<unsigned short> > >="__value_"^{CSAudioCircularBufferImpl<unsigned short>}}}
B32@0:8@16@?24
Q20@0:8f16
d24@0:8Q16
Q40@0:8Q16Q24Q32
B32@0:8d16^@24
@"<CSRemoteRecordClientDelegate>"
v52@0:8@16Q24@32Q40I48
@"<CSAudioDecoderDelegate>"
@52@0:8@16@24@32B40@44
v32@0:8r^s16Q24
v24@0:8@"<CSAudioSessionProviding>"16
v32@0:8@"<CSAudioSessionProviding>"16@"NSDictionary"24
v28@0:8@"<CSAudioSessionProviding>"16B24
v40@0:8@"CSCommandControlBehaviorMonitor"16@"CSAudioRecordContext"24@"CSAudioStartStreamOption"32
v44@0:8@"CSCommandControlBehaviorMonitor"16@"CSAudioRecordContext"24B32@"CSAudioStartStreamOption"36
v32@0:8@"CSCommandControlBehaviorMonitor"16@"CSAudioStopStreamOption"24
v40@0:8@"<CSAudioAlertProviding>"16q24@"NSError"32
v36@0:8B16@20@28
@"<CSAudioAlertProviding>"
d24@0:8d16
B20@0:8B16
@"<CSVoiceTriggerXPCConnectionDelegate>"
I24@0:8Q16
S16@0:8
@112@0:8@16{AudioStreamBasicDescription=dIIIIIIII}24{AudioStreamBasicDescription=dIIIIIIII}64Q104
C16@0:8
@"<CSVoiceTriggerXPCClientDelegate>"
v48@0:8@16@24@32Q40
@"<CSAudioMeterProviding>"
activeChannel
TQ,N,V_activeChannel
delegate
T@"<CSKeywordAnalyzerNDEAPIScoreDelegate>",W,N,V_delegate
-[CSAudioStartStreamOption(AVVC) avvcStartRecordSettingsWithAudioStreamHandleId:]
com.apple.corespeech.corespeechd.activation.xpc
v16@?0@"NSObject<OS_xpc_object>"8
-[CSActivationXPCClient dealloc]
-[CSActivationXPCClient _handleListenerEvent:]
-[CSActivationXPCClient _handleListenerError:]
-[CSActivationXPCClient notifyActivationEvent:completion:]
v20@?0B8@"NSError"12
type
event
result
resultErrorDomain
resultErrorCode
xpcConnection
T@"NSObject<OS_xpc_object>",&,N,V_xpcConnection
v8@?0
CSSampleCountHostTimeConverter
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
anchorSampleCount
TQ,N,V_anchorSampleCount
anchorHostTime
TQ,N,V_anchorHostTime
-[CSAudioSampleRateConverter _createSampleRateConverterWithInASBD:outASBD:]
i32@?0^I8^{AudioBufferList=I[1{AudioBuffer=II^v}]}16^^{AudioStreamPacketDescription}24
-[CSAudioSampleRateConverter convertSampleRateOfBuffer:]
Audio/Video
Alarm
CSVolumeMonitor queue
-[CSVolumeMonitor _startMonitoringWithQueue:]
-[CSVolumeMonitor fetchVolumeFromAVSystemControllerForAudioCategory:]_block_invoke
-[CSVolumeMonitor systemControllerDied:]
-[CSVolumeMonitor startObservingSystemVolumes]
-[CSVolumeMonitor _startObservingSystemControllerLifecycle]
-[CSAudioChunk subChunkFrom:numSamples:forChannel:]
-[CSAudioChunk subChunkFrom:numSamples:]
-[CSAudioChunk splitAudioChunkSuchThatNumSamplesReceivedSoFar:reachesACountOf:completionHandler:]
T@"NSData",R,N,V_data
TQ,R,N,V_numChannels
TQ,R,N,V_numSamples
TQ,R,N,V_sampleByteDepth
TQ,R,N,V_startSampleCount
TQ,R,N,V_hostTime
remoteVADAvailable
TB,R,N
T@"NSData",&,N,V_remoteVAD
xpcObject
T@"NSObject<OS_xpc_object>",R,N
numChannels
numSamples
sampleByteDepth
startSampleCount
hostTime
data
remoteVAD
-[CSAudioStreamProvidingProxy CSXPCConnectionReceivedClientError:clientError:client:]
-[CSAudioStreamProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleSetCurrentConextMessage:messageBody:client:]
context
audioStreamRequest
-[CSAudioStreamProvidingProxy _handleAudioStreamRequestMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleAudioStreamPrepareMessage:messageBody:client:]
startAudioStreamOption
-[CSAudioStreamProvidingProxy _handleStartAudioStreamMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleStopAudioStreamMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleVoiceTriggerInfoMessage:messageBody:client:]
v24@?0@"NSDictionary"8@"NSDictionary"16
voiceTriggerInfo
rtsTriggerInfo
-[CSAudioStreamProvidingProxy _handleIsRecordingMessage:messageBody:client:]
-[CSAudioStreamProvidingProxy _handleRecordRouteMessage:messageBody:client:]
recordRoute
-[CSAudioStreamProvidingProxy _handleRecordDeviceInfo:messageBody:client:]
recordDeviceInfo
-[CSAudioStreamProvidingProxy _handleRecordSettings:messageBody:client:]
recordSettings
-[CSAudioStreamProvidingProxy _handleIsNarrowband:messageBody:client:]
-[CSAudioStreamProvidingProxy _handlePlaybackRouteMessage:messageBody:client:]
playbackRoute
-[CSAudioStreamProvidingProxy audioStreamProvider:didStopStreamUnexpectly:]
stopReason
chunk
-[CSAudioStreamProvidingProxy audioStreamProvider:didHardwareConfigurationChange:]
hardwareConfig
body
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
audioStream
T@"CSAudioStream",&,N,V_audioStream
lastVoiceTriggerInfo
T@"NSDictionary",C,V_lastVoiceTriggerInfo
lastRTSTriggerInfo
T@"NSDictionary",C,V_lastRTSTriggerInfo
recordContext
T@"CSAudioRecordContext",&,N,V_recordContext
recordEventUUID
T@"NSString",&,N,V_recordEventUUID
audioStreamProviding
T@"<CSAudioStreamProviding>",W,N,V_audioStreamProviding
triggerInfoProviding
T@"<CSTriggerInfoProviding>",W,N,V_triggerInfoProviding
T@"CSXPCConnection",W,N,V_xpcConnection
streamClientType
TQ,N,V_streamClientType
-[CSAudioFileLog _closeAudioFile]
-[CSAudioFileLog startRecording]_block_invoke
-input.wav
-[CSAudioFileLog appendAudioData:]_block_invoke
-[CSAudioFileLog stopRecording]_block_invoke
CSAudioSessionInfoProvider
-[CSAudioSessionInfoProvider CSAudioServerCrashMonitorDidReceiveServerCrash:]_block_invoke
-[CSAudioSessionInfoProvider CSAudioServerCrashMonitorDidReceiveServerRestart:]_block_invoke
-[CSAudioSessionInfoProvider _registerInterruptionNotification]
-[CSAudioSessionInfoProvider _registerAudioRouteChangeNotification]
-[CSAudioSessionInfoProvider _handleInterruption:]_block_invoke
-[CSAudioSessionInfoProvider _audioRouteChanged:]_block_invoke
-[CSAudioSessionInfoProvider _deregisterAudioSessionNotifications]
sessionInfoQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sessionInfoQueue
observers
T@"NSHashTable",&,N,V_observers
PCM-
OPUS_
-synced
com.apple.CoreSpeech.AudioLogging
+[CSAudioFileManager generateDeviceAudioLogging:speechId:]_block_invoke
FLLR
+[CSAudioFileManager _readDataFromFileHandle:toFileHandle:]
%@%@.wav
%@/%@%@.wav
+[CSAudioFileManager _createAudioFileWriterWithLoggingDir:inputFormat:outputFormat:]
en_US_POSIX
yyyy_MM_dd-HHmmss.SSS
^%@*
attsiri
+[CSAudioFileManager audioFileWriterForAttentiveSiri]
%@.wav
initialState
Tq,N,V_initialState
transitions
T@"NSMutableDictionary",&,N,V_transitions
T@"<CSStateMachineDelegate>",W,N,V_delegate
currentState
Tq,R,N,V_currentState
CSSmartSiriVolumeEnablePolicy queue
B8@?0
-[CSSmartSiriVolumeEnablePolicy _addSmartSiriVolumeEnabledConditions]_block_invoke
-[CSSiriRestrictionOnLockScreenMonitor _startMonitoringWithQueue:]
-[CSSiriRestrictionOnLockScreenMonitor _stopMonitoring]
-[CSSiriRestrictionOnLockScreenMonitor _checkSiriRestrictedOnLockScreen]
v16@?0@8
+[CSAudioRecordContext defaultContext]
CSAudioRecordTypeUnspecified
CSAudioRecordTypeHomePress
CSAudioRecordTypeWiredHeadsetButtonPress
CSAudioRecordTypeBluetoothHeadSetButtonPress
CSAudioRecordTypeUIButtonPress
CSAudioRecordTypeServerInvoke
CSAudioRecordTypeVoiceTrigger
CSAudioRecordTypeStark
CSAudioRecordTypeTVRemote
CSAudioRecordTypeRaiseToSpeak
CSAudioRecordTypeHearstDoubleTap
CSAudioRecordTypeHearstVoice
CSAudioRecordTypeJarvis
CSAudioRecordTypePost
CSAudioRecordTypeDictation
CSAudioRecordTypeVoiceTriggerTraining
CSAudioRecordTypeOpportuneSpeaker
CSAudioRecordTypeUnknown
recordType[%@] deviceId[%@] alwaysUseBuiltInMic[%d]
Tq,N,V_type
T@"NSString",&,N,V_deviceId
TB,N,V_alwaysUseRemoteBuiltInMic
alwaysUseRemoteBuiltInMic
deviceId
CSInitialContinousZeros
CSMaxContinousZeros
CSMidSegmentContinousZeros
start
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
com.apple.corespeech.monitor queue
-[CSSpeechControllerMonitorImpl _startMonitoringWithQueue:]
-[CSSpeechControllerMonitorImpl _notifyObserver:withSpeechControllerRecordState:withEventUUID:]
-[CSSpeechControllerMonitorImpl _notifyObserver:withSpeechControllerRecordState:withEventUUID:]_block_invoke
-[CSSpeechControllerMonitorImpl _notifyObserver:withSpeechControllerRecordState:]
-[CSKeywordAnalyzerQuasar runRecognition]
-[CSKeywordAnalyzerQuasar endAudio]
triggerConfidence
Td,R,N,V_triggerConfidence
T@"<CSKeywordAnalyzerQuasarScoreDelegate>",W,N,V_delegate
nohash
((?:[a-z]|[0-9])*)\.asset
+[CSUtils(ResourcePathHash) assetHashInResourcePath:]
v24@?0@"CSAsset"8@"NSError"16
-[CSVoiceTriggerAssetHandlerMac _getVoiceTriggerAssetFromAssetManager:]_block_invoke
-[CSVoiceTriggerAssetHandlerMac _checkNewAssetAvailablity]_block_invoke
-[CSVoiceTriggerAssetHandlerMac CSVoiceTriggerAssetDownloadMonitor:didInstallNewAsset:]
-[CSVoiceTriggerAssetHandlerMac CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
-[CSVoiceTriggerAssetHandlerMac CSFirstUnlockMonitor:didReceiveFirstUnlock:]
cachedAsset
T@"CSAsset",&,V_cachedAsset
[requestHistoricalAudioDataWithHostTime = %@]
[requestHistoricalAudioDataSampleCount = %@]
[useOpportunisticZLL = %@]
[startRecordingHostTime = %llu]
[startRecordingSampleCount = %llu]
[alertBehavior = %llu %llu %llu]
TB,N,V_requestHistoricalAudioDataWithHostTime
TB,N,V_requestHistoricalAudioDataSampleCount
TQ,N,V_startRecordingHostTime
TQ,N,V_startRecordingSampleCount
TB,N,V_useOpportunisticZLL
Tq,N,V_startAlertBehavior
Tq,N,V_stopAlertBehavior
Tq,N,V_errorAlertBehavior
localizedDescription
T@"NSString",R,N
requestHistoricalAudioDataWithHostTime
requestHistoricalAudioDataSampleCount
startRecordingHostTime
startRecordingSampleCount
useOpportunisticZLL
startAlertBehavior
stopAlertBehavior
errorAlertBehavior
VoiceTrigger Asset Change Monitor
v12@?0i8
T@"<CSVoiceTriggerAssetChangeDelegate>",W,N,V_delegate
com.apple.corespeech.voicetriggerassetchange
-[CSAudioServerCrashMonitor _startMonitoringWithQueue:]
serverState
TQ,N,V_serverState
com.apple.corespeech.corespeechd.xpc
-[CSXPCClient prepareAudioProviderWithContext:clientType:error:]
clientType
activateReason
deactivateOption
setDuckOthersOption
enableMiniDucking
alertType
soundPath
alertStartTime
-[CSXPCClient alertStartTime]
alertBehavior
setMeterEnable
channelNumber
power
-[CSXPCClient peakPowerForChannel:]
-[CSXPCClient averagePowerForChannel:]
-[CSXPCClient audioMetric]
audioMetric
-[CSXPCClient audioStreamWithRequest:streamName:error:]
v24@?0@"CSAudioStream"8@"NSError"16
-[CSXPCClient audioStreamWithRequest:streamName:completion:]
-[CSXPCClient prepareAudioStreamSync:request:error:]
-[CSXPCClient prepareAudioStream:request:completion:]
-[CSXPCClient triggerInfoForContext:completion:]
-[CSXPCClient enableVoiceTrigger:withAssertion:]
voicetrigger assertion queue
-[CSXPCClient enableVoiceTrigger:withAssertion:]_block_invoke
Enabled
Disabled
sessionID
-[CSXPCClient audioSessionID]
volume
-[CSXPCClient getEstimatedTTSVolume]
alarmState
timerState
sampleCount
replyHostTime
-[CSXPCClient hostTimeFromSampleCount:]
replySampleCount
-[CSXPCClient sampleCountFromHostTime:]
-[CSXPCClient _handleListenerEvent:]
-[CSXPCClient _handleListenerMessage:]
-[CSXPCClient _handleListenerError:]
-[CSXPCClient _handleAlertProvidingDelegateMessageBody:]
didFinishAlertPlayback
errorDomain
errorCode
-[CSXPCClient _handleSessionProvidingDelegateMessageBody:]
interruptionContext
-[CSXPCClient _handleSessionProvidingDelegateBeginInterruptionWithContext:]
willSetAudioSessionActive
didSetAudioSessionActive
streamHandleIdInvalidationflag
didChangeContextFlag
-[CSXPCClient _handleSessionInfoProvidingDelegateMessageBody:]
notificationInfo
-[CSXPCClient _handleSessionInfoProvidingDelegateInterruptionNotification:]
-[CSXPCClient _handleSessionInfoProvidingDelegateRouteChangeNotification:]
-[CSXPCClient _handleSessionInfoProvidingDelegateMediaServicesWereLostNotification:]
-[CSXPCClient _handleSessionInfoProvidingDelegateMediaServicesWereResetNotification:]
-[CSXPCClient _handleStreamProvidingDelegateMessageBody:]
activationAssertions
T@"NSMutableSet",&,N,V_activationAssertions
audioSessionInfoObservers
T@"NSHashTable",&,N,V_audioSessionInfoObservers
audioSessionProvidingDelegate
T@"<CSAudioSessionProvidingDelegate>",W,N,V_audioSessionProvidingDelegate
audioStreamProvidingDelegate
T@"<CSAudioStreamProvidingDelegate>",W,N,V_audioStreamProvidingDelegate
audioAlertProvidingDelegate
T@"<CSAudioAlertProvidingDelegate>",W,N,V_audioAlertProvidingDelegate
T@"<CSXPCClientDelegate>",W,N,V_delegate
CSOpportuneSpeakListnerTestService
com.apple.corespeech.opportunelistner.start
com.apple.corespeech.opportunelistner.stop
A945B95D-69F6-FC77-4FAE-91F50A039CD8
-[CSOpportuneSpeakListnerTestService receiveOpportuneSpeakListenerStart]_block_invoke
-[CSOpportuneSpeakListnerTestService receiveOpportuneSpeakListenerStop]_block_invoke
-[CSOpportuneSpeakListnerTestService opportuneSpeakListener:hasRemoteVADAvailable:]
-[CSOpportuneSpeakListnerTestService opportuneSpeakListener:hasVADAvailable:]
-[CSOpportuneSpeakListnerTestService opportuneSpeakListener:didStopUnexpectly:]
CSTimerMonitor queue
-[CSTimerMonitor _startMonitoringWithQueue:]
-[CSTimerMonitor _stopMonitoring]
kVTPreferencesPhraseSpotterEnabledDidChangeDarwinNotification
-[CSPhraseSpotterEnabledMonitor _checkPhraseSpotterEnabled]
-[CSPhraseSpotterEnabledMonitor _phraseSpotterEnabledDidChange]
CSVoiceTriggerAssetHandler
self ENDSWITH '.wav'
-[CSSpeakerModel discard]
modelPath
utteranceDirectory
tiModelPath
tiUtteranceDirectory
tdtiModelPath
tdtiUtteranceDirectory
enrollmentUtterance
T@"NSArray",R,N
isValid
needsRetrain
CSVoiceTriggerXPCListener
com.apple.corespeech.voicetriggerservice
-[CSVoiceTriggerXPCListener listen]
-[CSVoiceTriggerXPCListener _handleListenerEvent:]
-[CSVoiceTriggerXPCListener _handleListenerError:]
-[CSVoiceTriggerXPCListener _handleNewRemoteConnection:]
voicetrigger.voicetriggerservice
-[CSVoiceTriggerXPCListener CSXPCConnectionReceivedClientError:clientError:client:]
listener
T@"NSObject<OS_xpc_object>",&,N,V_listener
connections
T@"NSMapTable",&,N,V_connections
-[CSAudioStreamHolding dealloc]
name
T@"NSString",&,N,V_name
smartSiriVolume
noiseLevelChannelBitset
LKFSChannelBitset
energyBufferSize
noiseLowerPercentile
noiseUpperPercentile
LKFSLowerPercentile
LKFSUpperPercentile
noiseTimeConstant
noiseMicSensitivityOffset
LKFSTimeConstant
LKFSMicSensitivityOffset
noiseTTSMappingInputRangeLow
noiseTTSMappingInputRangeHigh
noiseTTSMappingOutputRangeLow
noiseTTSMappingOutputRangeHigh
LKFSTTSMappingInputRangeLow
LKFSTTSMappingInputRangeHigh
LKFSTTSMappingOutputRangeLow
LKFSTTSMappingOutputRangeHigh
userOffsetInputRangeLow
userOffsetInputRangeHigh
userOffsetOutputRangeLow
userOffsetOutputRangeHigh
TTSVolumeLowerLimitDB
TTSVolumeUpperLimitDB
noiseWeight
SSVNoiseLevelChannelBitset
TQ,R,N
SSVLKFSChannelBitset
SSVEnergyBufferSize
TI,R,N
SSVNoiseLowerPercentile
SSVNoiseUpperPercentile
SSVLKFSLowerPercentile
SSVLKFSUpperPercentile
SSVNoiseTimeConstant
Tf,R,N
SSVNoiseMicSensitivityOffset
SSVLKFSTimeConstant
SSVLKFSMicSensitivityOffset
SSVNoiseTTSMappingInputRangeLow
SSVNoiseTTSMappingInputRangeHigh
SSVNoiseTTSMappingOutputRangeLow
SSVNoiseTTSMappingOutputRangeHigh
SSVLKFSTTSMappingInputRangeLow
SSVLKFSTTSMappingInputRangeHigh
SSVLKFSTTSMappingOutputRangeLow
SSVLKFSTTSMappingOutputRangeHigh
SSVUserOffsetInputRangeLow
SSVUserOffsetInputRangeHigh
SSVUserOffsetOutputRangeLow
SSVUserOffsetOutputRangeHigh
SSVTTSVolumeLowerLimitDB
SSVTTSVolumeUpperLimitDB
SSVNoiseWeight
SSVParameterDirectionary
T@"NSDictionary",R,N
RTModelData
RTModelHash
RTModelLocale
RTModelDigest
RTModelSignature
RTModelCertificate
RT Model for 
 from asset 
CorealisRTModel
CorealisRTModelVersion
dataSize(%d), hash(%@), locale(%@), digest(%@), cert(%@), signature(%@)
supportsSecureCoding
TB,R
modelData
T@"NSData",R,N,V_modelData
modelLocale
T@"NSString",R,N,V_modelLocale
modelHash
T@"NSString",R,N,V_modelHash
digest
T@"NSData",R,N,V_digest
signature
T@"NSData",R,N,V_signature
certificate
T@"NSData",R,N,V_certificate
CSAudioProvider
-[CSAudioProvider setStreamState:]
-[CSAudioProvider setAudioRecorder:]_block_invoke
-[CSAudioProvider setCurrentContext:error:]
-[CSAudioProvider setCurrentContext:error:]_block_invoke
-[CSAudioProvider _audioStreamWithRequest:streamName:error:]
-[CSAudioProvider _prepareAudioStreamSync:request:error:]
-[CSAudioProvider _createCircularBufferIfNeeded]
-[CSAudioProvider _tearDownCircularBufferIfNeeded]
-[CSAudioProvider startAudioStream:option:completion:]
-[CSAudioProvider startAudioStream:option:completion:]_block_invoke
-[CSAudioProvider prepareAudioStreamSync:request:error:]
-[CSAudioProvider prepareAudioStream:request:completion:]
-[CSAudioProvider _startAudioStream:option:completion:]
-[CSAudioProvider _handleDidStartAudioStreamWithResult:error:]
-[CSAudioProvider _handleDidStopAudioStreamWithReason:]
-[CSAudioProvider _stopAudioStream:option:completion:]
-[CSAudioProvider _stopAudioStream:option:completion:]_block_invoke
-[CSAudioProvider _stopAudioStream:option:completion:]_block_invoke_2
-[CSAudioProvider holdAudioStreamWithDescription:timeout:]
-[CSAudioProvider holdAudioStreamWithDescription:timeout:]_block_invoke_2
-[CSAudioProvider holdAudioStreamWithDescription:timeout:]_block_invoke
-[CSAudioProvider cancelAudioStreamHold:]
-[CSAudioProvider cancelAudioStreamHold:]_block_invoke
-[CSAudioProvider prewarmAudioSessionWithError:]
-[CSAudioProvider activateAudioSessionWithReason:error:]
-[CSAudioProvider _activateAudioSessionWithReason:error:]
-[CSAudioProvider deactivateAudioSession:error:]
-[CSAudioProvider _deactivateAudioSession:error:]
-[CSAudioProvider setAlertSoundFromURL:forType:]
-[CSAudioProvider playAlertSoundForType:]
-[CSAudioProvider playRecordStartingAlertAndResetEndpointer]
-[CSAudioProvider alertStartTime]
-[CSAudioProvider triggerInfoForContext:completion:]_block_invoke
-[CSAudioProvider _shouldStopRecording]
-[CSAudioProvider audioRecorderStreamHandleIdInvalidated:]
-[CSAudioProvider audioRecorderWillBeDestroyed:]_block_invoke
-[CSAudioProvider _forwardAudioChunk:remoteVAD:atTime:toStream:]
-[CSAudioProvider _scheduleAlertFinishTimeout:]
-[CSAudioProvider _scheduleAlertFinishTimeout:]_block_invoke
-[CSAudioProvider _didReceiveFinishStartAlertPlaybackAt:]
-[CSAudioProvider audioRecorderBuiltInAudioStreamInvalidated:error:]_block_invoke
-[CSAudioProvider audioRecorderDisconnected:]
-[CSAudioProvider CSAudioServerCrashMonitorDidReceiveServerCrash:]
-[CSAudioProvider CSAudioServerCrashMonitorDidReceiveServerRestart:]
-[CSAudioProvider _handleAudioSystemFailure]
StreamInit
StreamPrepared
StreamStarting
StreamSteaming
StreamStopping
unknown(%tu)
Recording transaction
-[CSAudioProvider _releaseRecordingTransactionIfNeeded]
-[CSAudioProvider _scheduleDidStartRecordingDelegateWatchDog]
-[CSAudioProvider _schduleDidStartRecordingDelegateWatchDogWithToken:]
-[CSAudioProvider _clearDidStartRecordingDelegateWatchDog]
-[CSAudioProvider _scheduleDidStopRecordingDelegateWatchDog]
-[CSAudioProvider _scheduleDidStopRecordingDelegateWatchDog:]
-[CSAudioProvider _clearDidStopRecordingDelegateWatchDog]
recordQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recordQueue
audioRecorder
T@"CSAudioRecorder",&,N,V_audioRecorder
streamState
TQ,N,V_streamState
startPendingStreams
T@"NSHashTable",&,N,V_startPendingStreams
alertPlaybackFinishWaitingStreams
T@"NSHashTable",&,N,V_alertPlaybackFinishWaitingStreams
streams
T@"NSHashTable",&,N,V_streams
stopPendingStreams
T@"NSHashTable",&,N,V_stopPendingStreams
pendingStartCompletions
T@"NSMutableArray",&,N,V_pendingStartCompletions
alertPlaybackFinishWaitingCompletions
T@"NSMutableArray",&,N,V_alertPlaybackFinishWaitingCompletions
pendingStopCompletions
T@"NSMutableArray",&,N,V_pendingStopCompletions
providerDelegate
T@"<CSAudioProviderDelegate>",W,N,V_providerDelegate
sessionDelegate
T@"<CSAudioSessionProvidingDelegate>",W,N,V_sessionDelegate
streamHolders
T@"NSMutableArray",&,N,V_streamHolders
historicalBufferRequestStreams
T@"NSHashTable",&,N,V_historicalBufferRequestStreams
circularBuffer
T@"CSAudioCircularBuffer",&,N,V_circularBuffer
alertDelegate
T@"<CSAudioAlertProvidingDelegate>",W,N,V_alertDelegate
lastAudioRecorderContext
T@"CSAudioRecordContext",&,N,V_lastAudioRecorderContext
audioSystemRecovering
TB,N,V_audioSystemRecovering
audioPreprocessor
T@"CSAudioPreprocessor",&,N,V_audioPreprocessor
recordingTransaction
T@"CSOSTransaction",&,N,V_recordingTransaction
recordingWillStartGroup
T@"NSObject<OS_dispatch_group>",&,N,V_recordingWillStartGroup
waitingForAlertFinish
TB,N,V_waitingForAlertFinish
audioStreamHandleId
TQ,N,V_audioStreamHandleId
alertPlaybackFinishTimeoutToken
T@"NSUUID",&,N,V_alertPlaybackFinishTimeoutToken
startRecordingWatchDogToken
T@"NSUUID",&,N,V_startRecordingWatchDogToken
stopRecordingWatchDogToken
T@"NSUUID",&,N,V_stopRecordingWatchDogToken
circularBufferStartHostTime
TQ,N,V_circularBufferStartHostTime
circularBufferStartSampleCount
TQ,N,V_circularBufferStartSampleCount
UUID
T@"NSString",R,N,V_UUID
allowVoiceTriggerAssetDownloading
TB,N,V_allowVoiceTriggerAssetDownloading
allowEndpointAssetDownloading
TB,N,V_allowEndpointAssetDownloading
allowLanguageDetectorAssetDownloading
TB,N,V_allowLanguageDetectorAssetDownloading
+[CSUtils(Directory) removeLogFilesInDirectory:matchingPattern:beforeDays:]_block_invoke
v24@?0@"NSArray"8^@16
+[CSUtils(Directory) clearLogFilesInDirectory:matchingPattern:exceedNumber:]_block_invoke_2
+[CSUtils(Directory) clearLogFilesInDirectory:matchingPattern:exceedNumber:]_block_invoke
Unable to get %@ for file at %@: %@
q24@?0@"NSURL"8@"NSURL"16
B24@?0@"NSURL"8@"NSDictionary"16
+[CSUtils(Directory) _contentsOfDirectoryAtURL:matchingPattern:includingPropertiesForKeys:error:]
-[CSVoiceTriggerEnabledPolicyNonAOP _addVoiceTriggerEnabledConditions]_block_invoke
T@"<CSBiometricMatchMonitorDelegate>",W,N,V_delegate
-[CSKeywordAnalyzerNDAPI initWithConfigPath:resourcePath:]
-[CSKeywordAnalyzerNDAPI _setStartAnalyzeTime:]
samples_at_fire
start_sample_count
threshold_normal
-[CSKeywordAnalyzerNDAPI getThreshold]
threshold_logging
-[CSKeywordAnalyzerNDAPI getLoggingThreshold]
activePhraseId
TI,N,V_activePhraseId
T@"<CSKeywordAnalyzerNDAPIScoreDelegate>",W,N,V_delegate
rtblobs
blob
majorVersion
minorVersion
cert
rtlocalemap
-[CSAsset(RTModel) createRTModelWithLocale:]
-[CSAsset(RTModel) latestHearstRTModelForLocale:]
-[CSAsset(RTModel) hearstRTModelWithMajorVersion:minorVersion:locale:]
-[CSAsset(RTModel) hearstRTModelLocaleMap]
%02x
-[CSGestureMonitor isTriggerHandheld]
wakeGestureTimestamp
TQ,N,V_wakeGestureTimestamp
dismissalTimestamp
TQ,N,V_dismissalTimestamp
CSAudioRouteChangeMonitorImpl queue
-[CSAudioRouteChangeMonitorImpl preferredExternalRouteDidChange:]_block_invoke
-[CSAudioRouteChangeMonitorImpl carPlayAudioRouteDidChange:]_block_invoke
-[CSAudioRouteChangeMonitorImpl _stopMonitoring]
-[CSAudioRouteChangeMonitorImpl _notifyHearstConnectionState:]
-[CSAudioRouteChangeMonitorImpl _notifyJarvisConnectionState:]
-[CSAudioRecorder initWithQueue:error:]
-[CSAudioRecorder willDestroy]
-[CSAudioRecorder dealloc]
-[CSAudioRecorder _destroyVoiceController]
-[CSAudioRecorder _voiceControllerWithError:]
-[CSAudioRecorder setContext:error:]
-[CSAudioRecorder setCurrentContext:streamHandleId:error:]
-[CSAudioRecorder prepareAudioStreamRecord:streamHandleId:error:]
-[CSAudioRecorder _startAudioStreamForAudioInjection]
-[CSAudioRecorder startAudioStreamWithOption:streamHandleId:error:]
-[CSAudioRecorder stopAudioStreamWithStreamHandleId:error:]
-[CSAudioRecorder isSessionCurrentlyActivated]
Builtin Microphone
-[CSAudioRecorder recordingSampleRateWithStreamHandleId:]
-[CSAudioRecorder isNarrowBandWithStreamHandleId:]
-[CSAudioRecorder prewarmAudioSessionWithStreamHandleId:error:]
-[CSAudioRecorder activateAudioSessionWithReason:streamHandleId:error:]
-[CSAudioRecorder deactivateAudioSession:streamHandleId:error:]
-[CSAudioRecorder setDuckOthersOption:]
-[CSAudioRecorder enableMiniDucking:]
Enable
Disable
-[CSAudioRecorder configureAlertBehavior:audioStreamHandleId:]
-[CSAudioRecorder voiceTriggerInfo]
useRemoteBuiltInMic
-[CSAudioRecorder _processAudioBuffer:audioStreamHandleId:]
-[CSAudioRecorder _compensateChannelDataIfNeeded:receivedNumChannels:]
-[CSAudioRecorder playAlertSoundForType:]
-[CSAudioRecorder voiceControllerDidStartRecording:forStream:successfully:error:]
-[CSAudioRecorder voiceControllerAudioCallback:forStream:buffer:]
-[CSAudioRecorder voiceControllerDidStopRecording:forStream:forReason:]
-[CSAudioRecorder voiceControllerStreamInvalidated:forStream:]
-[CSAudioRecorder voiceControllerRecordHardwareConfigurationDidChange:toConfiguration:]
-[CSAudioRecorder voiceControllerDidFinishAlertPlayback:ofType:error:]
-[CSAudioRecorder voiceControllerEncoderErrorDidOccur:error:]
-[CSAudioRecorder voiceControllerBeginRecordInterruption:]
-[CSAudioRecorder voiceControllerBeginRecordInterruption:withContext:]
-[CSAudioRecorder voiceControllerEndRecordInterruption:]
-[CSAudioRecorder voiceControllerWillSetAudioSessionActive:willActivate:]
-[CSAudioRecorder voiceControllerDidSetAudioSessionActive:isActivated:]
-[CSAudioRecorder voiceControllerMediaServicesWereLost:]
-[CSAudioRecorder voiceControllerMediaServicesWereReset:]
-[CSAudioRecorder _deinterleaveBufferIfNeeded:]
-[CSAudioRecorder _createDeInterleaverIfNeeded]
-[CSAudioRecorder _getRecordSettingsWithRequest:]
duckOthersOption
TB,N
-[CSOpportuneSpeakListener startListenWithOption:completion:]
-[CSOpportuneSpeakListener _startRequestWithCompletion:]
-[CSOpportuneSpeakListener stopListenWithStateReset:completion:]
-[CSOpportuneSpeakListener audioStreamProvider:audioBufferAvailable:]
-[CSOpportuneSpeakListener spgEndpointAnalyzer:hasSilenceScoreEstimate:]
-[CSOpportuneSpeakListener CSMediaPlayingMonitor:didReceiveMediaPlayingChanged:]
spgEndpointAnalyzer
T@"CSSPGEndpointAnalyzer",&,N,V_spgEndpointAnalyzer
remoteVADSPGRatio
Ti,N,V_remoteVADSPGRatio
audioStreamProvider
T@"<CSAudioStreamProviding>",&,N,V_audioStreamProvider
audioSessionProvider
T@"<CSAudioSessionProviding>",&,N,V_audioSessionProvider
latestContext
T@"CSAudioRecordContext",&,N,V_latestContext
isMediaPlayingNow
TB,V_isMediaPlayingNow
T@"<CSOpportuneSpeakListenerDelegate>",W,N,V_delegate
-[CSSpeakerDetectorNDAPI _initializeSAT:]
T@"<CSSpeakerDetectorNDAPIDelegate>",W,N,V_delegate
-[NSData(XPCObject) _cs_initWithXPCObject:]
-[CSSiriEnabledMonitor _startMonitoringWithQueue:]
-[CSSiriEnabledMonitor _stopMonitoring]
_AssistantPrefsChangedNotification
-[CSSmartSiriVolumeProvidingProxy handleXPCMessage:messageBody:client:]
-[CSSmartSiriVolumeProvidingProxy _handleGetTTSVolumeRequestMessage:messageBody:client:]
spIdType
profileID
T@"NSString",R,N,V_profileID
sysConfigFilepath
T@"NSString",R,N,V_sysConfigFilepath
sysConfigRoot
satModelDir
satAudioDir
satModelFilePath
T@"NSString",R,N,V_satModelFilePath
tdSrSysConfigFile
T@"NSString",R,N,V_tdSrSysConfigFile
tdSrSysConfigRoot
T@"NSString",R,N,V_tdSrSysConfigRoot
satModelAvailable
TB,R,N,V_satModelAvailable
satScoreThreshold
satScoreVTScale
Tf,R,N,V_satScoreVTScale
satScoreVTOffset
Tf,R,N,V_satScoreVTOffset
satScoreNonVTScale
Tf,R,N,V_satScoreNonVTScale
satScoreNonVTOffset
Tf,R,N,V_satScoreNonVTOffset
combinationWeight
Tf,R,N,V_combinationWeight
satLogitCeilScore
Tf,R,N,V_satLogitCeilScore
satLogitFloorScore
Tf,R,N,V_satLogitFloorScore
satImplicitThreshold
Tf,R,N,V_satImplicitThreshold
satImplicitBaseProfileThreshold
TQ,R,N,V_satImplicitBaseProfileThreshold
satImplicitProfileThreshold
TQ,R,N,V_satImplicitProfileThreshold
satImplicitProfileDeltaThreshold
TQ,R,N,V_satImplicitProfileDeltaThreshold
retrainThresholdTrigger
Tf,R,N,V_retrainThresholdTrigger
retrainExplicitUttThresholdSAT
Tf,R,N,V_retrainExplicitUttThresholdSAT
retrainExplicitUttThresholdTDSR
Tf,R,N,V_retrainExplicitUttThresholdTDSR
retrainThresholdSAT
Tf,R,N,V_retrainThresholdSAT
retrainThresholdTDSR
Tf,R,N,V_retrainThresholdTDSR
pruningNumRetentionUtterance
Ti,R,N,V_pruningNumRetentionUtterance
maximumSpeakerVectors
Ti,R,N,V_maximumSpeakerVectors
maxAllowedImplicitUtterances
Ti,R,N,V_maxAllowedImplicitUtterances
maxAllowedBaseProfileUtterances
Ti,R,N,V_maxAllowedBaseProfileUtterances
voiceProfilePruningCookie
T@"NSString",R,N,V_voiceProfilePruningCookie
CSBluetoothManager Queue
-[CSBluetoothManager getBTLocalDeviceWithCompletion:]
-[CSBluetoothManager getBTLocalDeviceWithCompletion:]_block_invoke
v16@?0^{BTLocalDeviceImpl=}8
-[CSBluetoothManager _getWirelessSplitterInfoFromLocalDevice:]
-[CSBluetoothManager _detachBluetoothSession]
-[CSBluetoothManager _attachBluetoothSession]
CSBluetoothManager
-[CSBluetoothManager _sessionAttached:result:]
-[CSBluetoothManager _sessionDetached:]
-[CSBluetoothManager _sessionTerminated:]
-[CSBluetoothManager _setUpLocalDevice]
bluetoothSession
T^{BTSessionImpl=},N,V_bluetoothSession
isAttachingBluetoothSession
TB,N,V_isAttachingBluetoothSession
localDevice
T^{BTLocalDeviceImpl=},N,V_localDevice
pairedDeviceAddresses
T@"NSArray",&,N,V_pairedDeviceAddresses
connectedDeviceAddresses
T@"NSArray",&,N,V_connectedDeviceAddresses
bluetoothSessionSetupGroup
T@"NSObject<OS_dispatch_group>",&,N,V_bluetoothSessionSetupGroup
CSActivationXPCListener
-[CSActivationXPCListener listen]
-[CSActivationXPCListener _handleListenerEvent:]
-[CSActivationXPCListener _handleListenerError:]
-[CSActivationXPCListener _handleNewRemoteConnection:]
corespeechd.activation
-[CSActivationXPCListener CSXPCConnectionReceivedClientError:clientError:client:]
-[CSAudioSessionInfoProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioSessionInfoProvidingProxy _handleSessionIDRequestMessage:messageBody:client:]
audioSessionInfoProvider
T@"<CSAudioSessionInfoProviding>",W,N,V_audioSessionInfoProvider
com.apple.MobileAsset.VoiceTriggerAssets
com.apple.MobileAsset.VoiceTriggerAssetsWatch
com.apple.MobileAsset.VoiceTriggerAssetsMarsh
com.apple.MobileAsset.VoiceTriggerAssetsMac
com.apple.MobileAsset.SpeechEndpointAssets
com.apple.MobileAsset.LanguageDetectorAssets
-[CSAssetController init]
Serial CSAssetController queue
V1 Assets Clean-up queue
-[CSAssetController _cleanUpMobileAssetV1Directory]
-[CSAssetController assetOfType:language:]
-[CSAssetController allInstalledAssetsOfType:language:]
q24@?0@"MAAsset"8@"MAAsset"16
v32@?0@"MAAsset"8Q16^B24
-[CSAssetController assetOfType:language:completion:]
-[CSAssetController installedAssetOfType:language:]
-[CSAssetController installedAssetOfType:language:completion:]
v24@?0@"MAAsset"8@"NSError"16
-[CSAssetController _installedAssetOfType:withLanguage:]
-[CSAssetController _installedAssetOfType:withLanguage:completion:]_block_invoke
v16@?0q8
-[CSAssetController _installedAssetWithoutMetaDataForType:withLanguage:completion:]_block_invoke
-[CSAssetController _installedAssetWithoutMetaDataForType:withLanguage:]
-[CSAssetController _findLatestInstalledAsset:]
-[CSAssetController _assetQueryForAssetType:]
-[CSAssetController _runAssetQuery:completion:]
-[CSAssetController _runAssetQuery:completion:]_block_invoke
-[CSAssetController fetchRemoteMetaOfType:]
v16@?0@"NSError"8
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]_block_invoke_2
-[CSAssetController _fetchRemoteAssetOfType:withLanguage:completion:]_block_invoke
-[CSAssetController _downloadAssetCatalogForAssetType:complete:]_block_invoke
-[CSAssetController _updateFromRemoteToLocalAssets:forAssetType:completion:]
-[CSAssetController _downloadAsset:withComplete:]
v16@?0d8
-[CSAssetController _downloadAsset:withComplete:]_block_invoke
-[CSAssetController _startDownloadingAsset:progress:completion:]
v16@?0@"MAProgressNotification"8
+[CSAssetController(Utils) addKeyValuePairForQuery:assetType:]
voic
carplay
hearst
raisetospeak
auto
unknown
-[NSNumber(XPCObject) _cs_initWithXPCObject:]
-[NSNumber(XPCObject) _cs_xpcObject]
samples_fed
best_phrase
best_start
best_end
best_score
early_warning
is_rescoring
sampleFed
TQ,N,V_sampleFed
bestPhrase
TQ,N,V_bestPhrase
bestStart
TQ,N,V_bestStart
bestEnd
TQ,N,V_bestEnd
bestScore
Tf,N,V_bestScore
earlyWarning
TB,N,V_earlyWarning
isRescoring
TB,N,V_isRescoring
dictionary
triggerStartSampleCount
isMediaPlaying
noiseLevelDB
musicLevelDB
musicPlaybackVolumeDB
alarmVolume
finalTTSVolume
isAlarmPlaying
isTimerPlaying
isLKFSProcessPaused
removeVoiceTriggerSamples
-[CSSmartSiriVolume initWithSamplingRate:asset:]
-[CSSmartSiriVolume startSmartSiriVolume]_block_invoke
RUNNING
PAUSED
v12@?0B8
-[CSSmartSiriVolume _startListenPolling]
-[CSSmartSiriVolume _startListenPollingWithInterval:completion:]
-[CSSmartSiriVolume _startListenPollingWithInterval:completion:]_block_invoke
-[CSSmartSiriVolume _startListenWithCompletion:]_block_invoke_2
-[CSSmartSiriVolume _startListenWithCompletion:]_block_invoke
-[CSSmartSiriVolume _startListenWithCompletion:]
-[CSSmartSiriVolume _stopListening]
-[CSSmartSiriVolume _stopListening]_block_invoke
-[CSSmartSiriVolume initializeMediaPlayingState]_block_invoke
playing
NOT playing
-[CSSmartSiriVolume initializeMediaPlayingState]
-[CSSmartSiriVolume initializeAlarmState]_block_invoke
firing
NOT firing
-[CSSmartSiriVolume initializeTimerState]_block_invoke
-[CSSmartSiriVolume _setAsset:]
-[CSSmartSiriVolume _processAudioChunk:soundType:]
v16@?0Q8
-[CSSmartSiriVolume estimateSoundLevelbySoundType:]_block_invoke
-[CSSmartSiriVolume _pauseSSVProcessing]_block_invoke
-[CSSmartSiriVolume _resumeSSVProcessing]_block_invoke
-[CSSmartSiriVolume audioStreamProvider:audioBufferAvailable:]_block_invoke
-[CSSmartSiriVolume audioStreamProvider:didStopStreamUnexpectly:]
-[CSSmartSiriVolume voiceTriggerDidDetectKeyword:deviceId:]
-[CSSmartSiriVolume voiceTriggerDidDetectKeyword:deviceId:]_block_invoke
-[CSSmartSiriVolume estimatedTTSVolumeForNoiseLevelAndLKFS:LKFS:]_block_invoke
-[CSSmartSiriVolume _combineResultsWithOptimalFromNoise:andOptimalFromLkfs:withUserOffset:]
-[CSSmartSiriVolume CSMediaPlayingMonitor:didReceiveMediaPlayingChanged:]_block_invoke
-[CSSmartSiriVolume CSAlarmMonitor:didReceiveAlarmChanged:]_block_invoke
-[CSSmartSiriVolume CSTimerMonitor:didReceiveTimerChanged:]_block_invoke
-[CSSmartSiriVolume CSSiriEnabledMonitor:didReceiveEnabled:]
-[CSSmartSiriVolume CSAudioServerCrashMonitorDidReceiveServerRestart:]
-[CSSmartSiriVolume _setStartAnalyzeTime:]
listenPollingTimer
T@"NSObject<OS_dispatch_source>",&,N,V_listenPollingTimer
listenPollingTimerCount
Tq,N,V_listenPollingTimerCount
T@"<CSSmartSiriVolumeDelegate>",W,N,V_delegate
-[CSListeningEnabledPolicyWatch _addListeningEnabledConditions]_block_invoke
+[CSUtils(LanguageCode) getSiriLanguageWithFallback:]
CSAudioFileReader Queue
-[CSAudioFileReader initWithURL:]
-[CSAudioFileReader prepareRecording:]
-[CSAudioFileReader startRecording]
-[CSAudioFileReader _readAudioBufferAndFeed]
-[CSAudioFileReader stopRecording]
T@"<CSAudioFileReaderDelegate>",W,N,V_delegate
triggerEndMachTime
-[CSMyriadSelfTriggerCoordinator selfTriggerDetector:didDetectSelfTrigger:]
/private/var/tmp/siriBC
com.apple.siri.corespeech.selftrigger
T@"<CSMyriadSelfTriggerCoordinatorDelegate>",W,N,V_delegate
voiceProfileArray
T@"NSMutableArray",&,V_voiceProfileArray
languageCode
T@"NSString",&,N,V_languageCode
numberOfBaseProfileUtterancesToUpload
TQ,R,N,V_numberOfBaseProfileUtterancesToUpload
beepLocation
statsComputed
beepPower
signalPower
originalPower
absMaxVal
above95pcOfMax
totalInputSamples
totalOutputSamples
jbl_begin.bin
-[CSBeepCanceller init]
-[CSBeepCanceller willBeep]
-[CSBeepCanceller reset]
T@"<CSBeepCancellerDelegate>",W,N,V_delegate
metrics
-[CSSpringboardStartMonitor _startMonitoringWithQueue:]
-[CSSpringboardStartMonitor _stopMonitoring]
-[CSSpringboardStartMonitor _checkSpringBoardStarted]
com.apple.springboard.finishedstartup
CSActivationEventNotifier
-[CSActivationEventNotifier notifyActivationEvent:completion:]_block_invoke
-[CSActivationEventNotifier notifyActivationEventForCoreSpeechDaemon:completion:]_block_invoke
-[CSActivationEventNotifier _notifyActivationEvent:completion:]
-[CSActivationEventNotifier _notifyActivationEvent:completion:]_block_invoke
-[CSActivationEventNotifier notifyActivationEvent:deviceId:activationInfo:completion:]_block_invoke
-[CSActivationEventNotifier setDelegate:for:]_block_invoke
-[CSActivationEventNotifier _didReceiveAOPFirstPassTrigger:completion:]
-[CSActivationEventNotifier _didReceiveAOPFirstPassTrigger:completion:]_block_invoke
TestSetAPMode
TestSetAOPMode
-[CSActivationEventNotifier receiveTestNotificationAPMode]
-[CSActivationEventNotifier receiveTestNotificationAOPMode]
-[CSActivationEventNotifier _createXPCClientConnection]
notifyToken
Ti,N,V_notifyToken
delegates
T@"NSMapTable",&,N,V_delegates
pendingActivationEvent
T@"CSActivationEvent",&,N,V_pendingActivationEvent
pendingCompletion
T@?,C,N,V_pendingCompletion
CSAlarmMonitor queue
-[CSAlarmMonitor _startMonitoringWithQueue:]
-[CSAlarmMonitor _stopMonitoring]
-[CSFirstUnlockMonitor _stopMonitoring]
-[NSString(XPCObject) _cs_initWithXPCObject:]
+[CSVoiceTriggerEnrollmentDataManager saveRawUtteranceAndMetadata:to:isExplicitEnrollment:]
.wav
.json
+[CSVoiceTriggerEnrollmentDataManager saveUtteranceAndMetadata:atDirectory:isExplicitEnrollment:]
+[CSVoiceTriggerEnrollmentDataManager saveUtterance:utteranceAudioPath:numSamplesToWrite:isExplicitEnrollment:]
+[CSVoiceTriggerEnrollmentDataManager saveMetadata:isExplicitEnrollment:]
+[CSVoiceTriggerEnrollmentDataManager _getBaseMetaDictionaryForUtterancePath:]
+[CSVoiceTriggerEnrollmentDataManager writeMetaDict:atMetaPath:]
-[NSArray(XPCObject) _cs_initWithXPCObject:]
-[NSArray(XPCObject) _cs_initWithXPCObject:]_block_invoke
B24@?0Q8@"NSObject<OS_xpc_object>"16
-[NSArray(XPCObject) _cs_xpcObject]_block_invoke
v32@?0@8Q16^B24
-[CSAudioChunkForTV initWithXPCObject:]
T@"NSArray",&,N,V_packets
Tf,N,V_avgPower
Tf,N,V_peakPower
TQ,N,V_timeStamp
avgPower
peakPower
timeStamp
packets
CSVoiceTriggerXPCService Queue
-[CSVoiceTriggerXPCService enableVoiceTriggerForCoreSpeechDaemon:withAssertion:timestamp:]
-[CSVoiceTriggerXPCService enableVoiceTriggerForCoreSpeechDaemon:withAssertion:timestamp:]_block_invoke
-[CSVoiceTriggerXPCService setPhraseSpotterBypassingForCoreSpeechDaemon:timeout:]
bypassed
NOT bypassed
phrasespotter assertion queue
-[CSVoiceTriggerXPCService setPhraseSpotterBypassingForCoreSpeechDaemon:timeout:]_block_invoke_2
-[CSVoiceTriggerXPCService notifyVoiceTriggeredSiriSessionCancelledForCoreSpeechDaemon]
-[CSVoiceTriggerXPCService notifyServiceConnectionLostForCoreSpeechDaemon]
-[CSVoiceTriggerXPCService _createXPCClientConnectionIfNeeded]
-[CSVoiceTriggerXPCService voiceTriggerXPCClient:didDisconnect:]_block_invoke
-[CSVoiceTriggerXPCService _teardownXPCClientIfNeeded]
T@"<CSVoiceTriggerXPCServiceDelegate>",W,N,V_delegate
isPhraseSpotterBypassed
TB,N,V_isPhraseSpotterBypassed
xpcClient
T@"CSVoiceTriggerXPCClient",&,N,V_xpcClient
route
isRemoteDevice
remoteDeviceUID
remoteDeviceProductIdentifier
%@ {route = %@, isRemoteDevice = %d, remoteDeviceUID = %@, remoteDeviceProductIdentifier = %@}
T@"NSString",R,C,N,V_route
TB,R,N,V_isRemoteDevice
T@"NSUUID",R,C,N,V_remoteDeviceUID
T@"NSString",R,C,N,V_remoteDeviceProductIdentifier
CSCommandControlBehaviorMonitor
-[CSCommandControlBehaviorMonitor notifyWillStartStreamWithContext:option:]_block_invoke
-[CSCommandControlBehaviorMonitor notifyDidStartStreamWithContext:successfully:option:]_block_invoke
-[CSCommandControlBehaviorMonitor notifyWillStopStream:]_block_invoke
-[CSCommandControlBehaviorMonitor notifyDidStopStream:]_block_invoke
-[CSPlainAudioFileWriter initWithURL:inputFormat:outputFormat:]
-[CSPlainAudioFileWriter addSamples:numSamples:]
fileURL
T@"NSURL",R,N,V_fileURL
-[CSAudioStream initWithAudioStreamProvider:streamName:streamRequest:]
-[CSAudioStream dealloc]
-[CSAudioStream startAudioStreamWithOption:completion:]
-[CSAudioStream isStreaming]
-[CSAudioStream audioStreamProvider:didStopStreamUnexpectly:]
-[CSAudioStream audioStreamProvider:didHardwareConfigurationChange:]
streamProvider
T@"<CSAudioStreamProviding>",W,N,V_streamProvider
streaming
TB,V_streaming
streamingUUID
T@"NSUUID",&,V_streamingUUID
T@"<CSAudioStreamProvidingDelegate>",W,N,V_delegate
lastForwardedSampleCount
TQ,N,V_lastForwardedSampleCount
scheduledFutureSample
TB,N,V_scheduledFutureSample
streamRequest
T@"CSAudioStreamRequest",&,N,V_streamRequest
-[CSVoiceTriggerAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerAssetMetaUpdateMonitor _stopMonitoring]
-[CSVoiceTriggerAssetMetaUpdateMonitor _didReceiveNewVoiceTriggerAssetMetaData]
com.apple.MobileAsset.VoiceTriggerAssets.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsWatch.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMarsh.ma.cached-metadata-updated
com.apple.MobileAsset.VoiceTriggerAssetsMac.ma.cached-metadata-updated
-[CSAudioPreprocessor resetWithSampleRate:containsVoiceTrigger:voiceTriggerInfo:]
-[CSAudioPreprocessor flush]
ZeroFilterMetrics
-[CSAudioPreprocessor _reportMetrics]
BeepCancellerMetrics
sampleRate
Tf,N,V_sampleRate
upsampler
T@"CSAudioSampleRateConverter",&,N,V_upsampler
zeroFilter
T@"CSVoiceTriggerAwareZeroFilter",&,N,V_zeroFilter
beepCanceller
T@"CSBeepCanceller",&,N,V_beepCanceller
zeroCounter
T@"CSAudioZeroCounter",&,N,V_zeroCounter
T@"<CSAudioPreprocessorDelegate>",W,N,V_delegate
CSAudioRouteChangeMonitorImplWatch queue
-[CSAudioRouteChangeMonitorImplWatch activeAudioRouteDidChange:]_block_invoke
-[CSAudioRouteChangeMonitorImplWatch _stopMonitoring]
-[CSAudioRouteChangeMonitorImplWatch _notifyHearstConnectionState:]
profileUpdateNumPrunedUttsPHS
profileUpdateNumDiscardedUttsPHS
profileUpdateNumRetainedUttsPHS
xx_XX
com.apple.corespeech.aggregator
uptimeSeconds
-[CSAggregator _logUptime]
downtimeSeconds
TdPsrSATDetectionTimedOut
TdPsrSATDetectionTimeMs
TdPsrFailedDuringSATDetection
TdPsrFailedDuringSATRetraining
profileUpdateFailCode
profileUpdateScoreMSE
TdPsrSATRetrainingTimedOut
TdPsrSATRetrainingWaitTimeMs
%@.%@
com.apple.voicetrigger
%@.%@.%@
-[CSAggregator _addValueForScalarKey:withValue:]
-[CSAggregator _pushValueForDistributionKey:withValue:]
ADClientAddValueForScalarKey
/System/Library/PrivateFrameworks/AggregateDictionary.framework/AggregateDictionary
ADClientPushValueForDistributionKey
meta_version.json
enrollment_version.json
enrollment_completed
enrollment_migrated
meta_version
trainingType
explicit
implicit
implicitBaseProfile
handheld
near-field
far-field
utteranceWav
productVersion
productType
triggerSource
audioInputSource
otherSourceProfileMatch
containsPayload
grainedDate
buildVersion
+[CSUtteranceMetadataManager saveUtteranceMetadataForUtterance:enrollmentType:isHandheldEnrollment:triggerSource:audioInput:otherBiometricResult:containsPayload:]
+[CSUtteranceMetadataManager _getBaseMetaDictionaryForUtterancePath:]
+[CSUtteranceMetadataManager _writeMetaDict:forUtterancePath:]
+[CSUtteranceMetadataManager upgradeMetaFilesIfNecessaaryAtSATRoot:]
+[CSUtteranceMetadataManager _saveMetaVersionFileAtPath:]
+[CSUtteranceMetadataManager _upgradeLocaleDirectoryIfNecessary:]
json
+[CSUtteranceMetadataManager _audioDirectoryNeedsUpgrade:]
+[CSUtteranceMetadataManager _upgradeUtteranceMeta:]
+[CSUtteranceMetadataManager isUtteranceImplicitlyTrained:]
+[CSUtteranceMetadataManager getUtteranceEnrollmentType:]
+[CSUtteranceMetadataManager recordedTimeStampOfFile:]
yyyyMMdd
-[CSSpeechEndpointAssetMetaUpdateMonitor _startMonitoringWithQueue:]
-[CSSpeechEndpointAssetMetaUpdateMonitor _stopMonitoring]
-[CSSpeechEndpointAssetMetaUpdateMonitor _didReceiveNewSpeechEndpointAssetMetaData]
com.apple.MobileAsset.SpeechEndpointAssets.ma.cached-metadata-updated
com.apple.corespeech
Framework
Logs/CrashReporter/CoreSpeech/audio/
%@/%@%@%@
::: Initializing CoreSpeech logging...
yyyyMMdd-HHmmss
CSLogInitIfNeeded_block_invoke
gitrelno_unavailable
_CSGetOrCreateAudioLogDirectory
/tmp
[profileId: %@, language: %@, product: %@, version: %@, homeId: %@, name: %@]
profileId
T@"NSString",&,N,V_profileId
productCategory
T@"NSString",&,N,V_productCategory
version
T@"NSNumber",&,N,V_version
onboardType
TQ,N,V_onboardType
homeId
T@"NSString",&,N,V_homeId
userName
T@"NSString",&,N,V_userName
siriDebugProfileId
T@"NSString",&,N,V_siriDebugProfileId
corespeechd speaker xpc connection client queue
-[CSVoiceIdXPCConnection _handleClientEvent:]
-[CSVoiceIdXPCConnection _handleClientMessage:client:]
utterencePath
audioDevice
audioRecord
voiceTriggerEventInfo
otherCtxt
-[CSVoiceIdXPCConnection _handleClientMessage:client:]_block_invoke
-[CSVoiceIdXPCConnection _handleClientError:client:]
connection
T@"NSObject<OS_xpc_object>",&,N,V_connection
satTriggered
firstPassTriggerSource
ApplicationProcessor
com.apple.cs.profileManager
Library
VoiceTrigger/SAT
-[CSVoiceProfileManager notifyImplicitTrainingUtteranceAvailable:forVoiceProfileId:withRecordDeviceInfo:withRecordCtxt:withVoiceTriggerCtxt:withOtherCtxt:withCompletion:]
-[CSVoiceProfileManager notifyUserVoiceProfileDownloadReadyForUser:getData:completion:]_block_invoke
Missing downloadTriggerBlock - Bailing out
reason
Unknown device category for device type %@ - Bailing out
-[CSVoiceProfileManager notifyUserVoiceProfileUpdateReady]_block_invoke
v32@?0@"NSString"8Q16^B24
Enable VoiceTrigger Upon VoiceProfile Sync For Language
-[CSVoiceProfileManager _downloadAndEnrollVoiceProfileForProfileId:withDownloadTriggerBlock:]_block_invoke_2
-[CSVoiceProfileManager _downloadAndEnrollVoiceProfileForProfileId:withDownloadTriggerBlock:]_block_invoke
v24@?0@"NSError"8@"NSString"16
@"NSError"16@?0Q8
-[CSVoiceProfileManager _downloadAndEnrollVoiceProfileForProfileId:withDownloadTriggerBlock:]
SAT download path is nil - Bailing out
-[CSVoiceProfileManager _downloadVoiceProfileForProfileId:forDeviceCategory:withDownloadTriggerBlock:withCompletion:]
Download for %@ failed with %@
Failed to get contents of %@ with error %@
-[CSVoiceProfileManager _enrollVoiceProfileForSiriProfileId:fromCacheDirectoryPath:withCategoryType:]
Skipping profile Update for %@ in %@
Failed to enroll user - %@
SourcePath (%@) or DestinationPath (%@) is nil - Bailing out
Source directory %@ doesnt exist
-[CSVoiceProfileManager _copyVoiceProfileFromSrcDir:toDestDir:]
Profile %@ with mismatch product category - Skipping
Error to copy profile from %@ to %@, error: %@
Migrated language %@ for %@ but failed to mark SAT enrollment
-[CSVoiceProfileManager _markVoiceProfileMigrationCompleteForSiriProfileId:forLanguageCode:]
Failed to mark migrated for %@ in language %@
-[CSVoiceProfileManager _enableVoiceTriggerIfLanguageMatches:]
Caches/VoiceTrigger/SATUpdate
Caches/VoiceTrigger/SATUpdateNewerZone
_%d_%d
-[CSVoiceProfileManager _getUserVoiceProfileDownloadCacheDirectoryWithUpdatePath:]
-[CSVoiceProfileManager notifyUserVoiceProfileUploadCompleteForSiriProfileId:withError:]_block_invoke
-[CSVoiceProfileManager uploadUserVoiceProfileForSiriProfileId:withUploadTrigger:completion:]_block_invoke
@"NSError"24@?0@"CSVoiceProfileContext"8@"NSString"16
-[CSVoiceProfileManager notifyUserVoiceProfileUploadComplete]_block_invoke
audio
v32@?0Q8Q16Q24
-[CSVoiceProfileManager _stageVoiceProfileWithSiriProfileId:fromPath:withForceUpload:]
-[CSVoiceProfileManager _getVoiceProfilePathsToBeUploadedForSiriProfileId:]
-[CSVoiceProfileManager _copySATFilesFromPath:toPath:withCompletion:]
audiocache
Failed to copy to SATUpload Diretory : %@
v24@?0@"NSError"8Q16
-[CSVoiceProfileManager _copyVoiceProfileAtPath:toPath:]
ERR: Number of training utterances copied from %@ to %@ is too less %ld
Cannot delete existing SATUpload Diretory : %@
-[CSVoiceProfileManager _prepareVoiceProfileWithSiriProfileId:withUploadBlock:]
Cannot create SAT Upload Directory : %@
Failed to upload %@ with error %@ - Bailing out
-[CSVoiceProfileManager _markVoiceProfileTrainingSyncForLanguage:]
Enable VoiceProfile Training Sync For Language
-[CSVoiceProfileManager _isMarkedForVoiceProfileTrainingSyncForLanguage:]
-[CSVoiceProfileManager hasVoiceProfileIniCloudForLanguageCode:withBackupMetaBlob:]
ERR: Unknown product type. Returning false, language: %@
-[CSVoiceProfileManager isVoiceProfileUploadedToiCloudForLanguageCode:withCompletionBlock:]
ERR: Unknown device-category for device: %@, languageCode: %@
-[CSVoiceProfileManager isVoiceProfileUploadedToiCloudForLanguageCode:withCompletionBlock:]_block_invoke
v24@?0@"NSDictionary"8@"NSError"16
-[CSVoiceProfileManager hasVoiceProfileIniCloudForLanguageCode:]
-[CSVoiceProfileManager enableVoiceTriggerUponVoiceProfileSyncForLanguage:]
-[CSVoiceProfileManager devicesWithVoiceProfileIniCloudForLanguage:]
-[CSVoiceProfileManager devicesWithVoiceProfileIniCloudForLanguage:]_block_invoke
v16@?0@"NSArray"8
Caches/VoiceTrigger/SATLegacyUpload
-[CSVoiceProfileManager markSATEnrollmentSuccessForSiriProfileId:forLanguageCode:]
-[CSVoiceProfileManager _markSATEnrollmentWithMarker:forLanguage:forSiriProfileId:]
Library/Caches/VoiceTrigger
Caches/VoiceTrigger/SATUpload
Caches/VoiceTrigger/SATUploadStaging
-[CSVoiceProfileManager _createAndSendImplicitUtterenceXPCMessage:withRecordDeviceInfo:withRecordCtxt:withVoiceTriggerCtxt:withOtherCtxt:withCompletion:]
%lld
-[CSVoiceProfileManager _createAndSendImplicitUtterenceXPCMessage:withRecordDeviceInfo:withRecordCtxt:withVoiceTriggerCtxt:withOtherCtxt:withCompletion:]_block_invoke
currentDeviceCategory
TQ,N,V_currentDeviceCategory
T@"CSVoiceIdXPCClient",&,N,V_xpcClient
-[CSAssetManagerEnablePolicy _addAssetManagerEnabledConditions]_block_invoke
CSXPCListener
-[CSXPCListener listen]
-[CSXPCListener _handleListenerEvent:]
-[CSXPCListener _handleListenerError:]
-[CSXPCListener _handleNewRemoteConnection:]
corespeech.corespeechd.xpc
-[CSXPCListener CSXPCConnectionReceivedClientError:clientError:client:]
stop
-[CSVoiceTriggerStatAggregator logFalseWakeUp:]
numFalseWakeUp
TQ,N,V_numFalseWakeUp
lastAggTimeFalseWakeUp
TQ,N,V_lastAggTimeFalseWakeUp
com.apple.coreaudio.BorealisToggled
-[CSVoiceTriggerEnabledMonitor _startMonitoringWithQueue:]_block_invoke
-[CSVoiceTriggerEnabledMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerEnabledMonitor _stopMonitoring]
-[CSVoiceTriggerEnabledMonitor _checkVoiceTriggerEnabled]
-[CSAlwaysOnProcessorStateMonitor _didReceiveAOPListeningStateChange:]
-[CSAudioTimeConversionProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioTimeConversionProvidingProxy _handleXPCTimeConvertProvidingTypeHostTimeFromSampleCountMessage:messageBody:client:]
-[CSAudioTimeConversionProvidingProxy _handleXPCTimeConvertProvidingTypeSampleCountFromHostTimeMessage:messageBody:client:]
CSP2P_CommandType_Key
CSP2P_CommandDict_Key
corespeech
com.apple.siridebug.command.remote.heysiri
com.apple.siridebug.command.parallel.recording
com.apple.siridebug.command.transfer.voiceprofile
com.apple.siridebug.command.query.voiceprofile
com.apple.siridebug.command.reverse.transfer.voiceprofile
com.apple.siridebug.command.fetch.voiceprofile
com.apple.siridebug.command.voiceprofile.update.trigger
com.apple.siridebug.command.fetch.parallelrecording
com.apple.siridebug.command.transfer.parallelrecording
com.apple.siridebug.command.fetch.voicegradingdata
com.apple.siridebug.command.transfer.voicegradingdata
com.apple.siridebug.command.delete.voiceprofile
com.apple.siridebug.command.musicaccount.signin
CSP2P_RemoteHeySiriEnable_Key
CSP2P_RemoteHeySiriStatus_Key
CSP2P_RemoteRecordingStart_Key
CSP2P_RemoteRecordingStatus_Key
CSP2P_VoiceProfileData_Key
CSP2P_VoiceProfileFileName_Key
CSP2P_VoiceProfileSpeakerName_Key
CSP2P_VoiceProfileLocale_Key
CSP2P_VoiceProfileDataType_Key
CSP2P_VoiceProfileSegment_Key
CSP2P_VoiceProfileTotalSegments_Key
CSP2P_VoiceProfileStatus_Key
CSP2P_VoiceProfileProfileId_Key
CSP2P_VoiceProfileHomeId_Key
CSP2P_VoiceProfileRelativeFilePath_Key
CSP2P_VoiceProfileBaseVersion_Key
CSP2P_VoiceProfileImplicitVersion_Key
CSP2P_VoiceProfileSiriProfileId_Key
CSP2P_VoiceProfileOnboardType_Key
CSP2P_VoiceProfileOnboardTimeStamp_Key
CSP2P_VoiceProfileTransferCompleted_Key
CSP2P_VoiceProfileRecordedData_Key
CSP2P_VoiceProfileRemoteFileName_Key
CSP2P_VoiceDataToBeGraded_Key
CSP2P_VoiceFileNameToBeGraded_Key
CSP2P_GradingDataTransferStatus_Key
CSP2P_PeerIdentifier_Key
CSP2P_IsDataCompressed_Key
CSP2P_UncompressedDataSize_Key
CSP2P_GradingBatchTransferID_Key
CSP2P_MusicSigninMultiUserToken_Key
CSP2P_MusicSigninDsid_Key
CSP2P_MusicSigninAltDsid_Key
CSP2P_MusicSigninHomeUserId_Key
CSP2P_MusicSigninHomeId_Key
CSP2P_MusicSigninSiriDebugProfileId_Key
remote
-triggered
-almost
com.apple.corespeech.p2psvc
-[CSP2PService processRemoteCommandWithPayload:fromPeer:withReply:]_block_invoke
CoreSpeech
-[CSP2PService sendVoiceGradingDataToNearbyPeer]_block_invoke
-[CSP2PService sendVoiceTriggerGradingDataToCompanion]_block_invoke
-[CSP2PService sendVoiceProfileUpdatedMessageToNearbyPeerForLocale:]_block_invoke
-[CSP2PService _processRemoteHeySiriCommandWithRequest:fromSenderID:withReply:]
-[CSP2PService _compressFilesInDirectory:matchingPredicate:compressedFileAvailable:]
-[CSP2PService _sendParallelRecordingsToPeerId:voiceProfileRequestInfo:withReply:]
-[CSP2PService _sendParallelRecordingsToPeerId:voiceProfileRequestInfo:withReply:]_block_invoke
v52@?0@"NSString"8@"NSData"16Q24Q32B40@"NSError"44
-[CSP2PService _sendVoiceTriggerGradingDataToPeerId:]_block_invoke_2
-[CSP2PService _sendVoiceTriggerGradingDataToPeerId:]_block_invoke
-detected.json
-rejected.json
-[CSP2PService _sendVoiceGradingDataToPeerId:]_block_invoke_2
-detected.wav
-[CSP2PService _sendVoiceGradingDataToPeerId:]_block_invoke
-rejected.wav
-[CSP2PService _sendGradingData:withFileName:toPeerId:withCompressedFlag:withUncompressedDataSize:withBatchId:withRetainFileFlag:]
fileData
fileName
peerId
-[CSP2PService _sendGradingData:withFileName:toPeerId:withCompressedFlag:withUncompressedDataSize:withBatchId:withRetainFileFlag:]_block_invoke
-[CSP2PService _receiveParallelRecordingFromPeerId:recordingInfo:withReply:]
%@_%@
-[CSP2PService _receiveVoiceGradingDataFromPeerId:requestInfo:withReply:]
suppressnotification
-[CSP2PService _processMusicAccountSignInCommandFromPeerId:requestInfo:withReply:]
-[CSP2PService _receiveVoiceProfileFromPeerId:voiceProfileInfo:withReply:]
CoreSpeechCache
com.apple.siri.corespeech.voiceprofilelist.change
-[CSP2PService _processVoiceProfileDeleteCommandWithRequest:fromSenderID:withReply:]_block_invoke
-[CSP2PService _processGradingDataFetchCommandWithRequest:fromSenderID:withReply:]
-[CSP2PService _processVoiceProfileListQueryCommandFromPeerId:requestInfo:withReply:]
voiceprofiles
-[CSP2PService _processFetchVoiceProfileCommandFromPeerId:requestInfo:withReply:]
-[CSP2PService _sendVoiceProfile:toPeerId:]
-[CSP2PService _sendVoiceProfile:toPeerId:]_block_invoke
-[CSP2PService _processReverseTransferVoiceProfileCommandFromPeerId:requestInfo:withReply:]
-[CSP2PService _processVoiceProfileUpdateTriggerFromPeerId:requestInfo:withReply:]
-[CSP2PService _sendVoiceProfileUpdateTriggerToPeerId:forLocale:]_block_invoke
lastCommunicatedPeer
T@"NSString",&,N,V_lastCommunicatedPeer
voiceTriggerBatchId
T@"NSString",&,N,V_voiceTriggerBatchId
voiceIdentificationBatchId
T@"NSString",&,N,V_voiceIdentificationBatchId
adCompanionServiceProvider
T@"<CSADCompanionServiceProvider>",W,N,V_adCompanionServiceProvider
InternalBuild
PTQ+ABwag03BwO/CKvIK/A
4D8XW4YwJI7QvyPhv1TEdw
+N9mZUAHooNvMiQnjeTJ8g
UserVoiceProfileDateTrained
UserVoiceProfilePath
UserVoiceProfileID
UserSharedSiriID
UserSharedHomeID
UserSharedSiriDebugID
UserVoiceProfileUserName
UserVoiceProfileOnboardType
UserVoiceProfileExpSatVecCount
UserVoiceProfileBaseProfileSatVecCount
UserVoiceProfileImplicitSatVecCount
Creating CSUserVoiceProfile with no UserName: vpDict: %@
locale
T@"NSString",&,N,V_locale
dateAdded
T@"NSDate",&,N,V_dateAdded
voiceProfileFilePath
T@"NSString",&,N,V_voiceProfileFilePath
T@"NSString",&,N,V_profileID
siriProfileId
T@"NSString",&,N,V_siriProfileId
onboardedType
TQ,N,V_onboardedType
numberOfExplicitSatVectors
Tq,N,V_numberOfExplicitSatVectors
numberOfBaseProfileSatVectors
Tq,N,V_numberOfBaseProfileSatVectors
numberOfImplicitProfileSatVectors
Tq,N,V_numberOfImplicitProfileSatVectors
sharedHomeID
T@"NSString",&,N,V_sharedHomeID
siriDebugID
T@"NSString",&,N,V_siriDebugID
Serial CSAssetManager queue
en-US
-[CSAssetManager initWithDownloadOption:]
-[CSAssetManager initWithDownloadOption:]_block_invoke
ENABLED
DISABLED
-[CSAssetManager setAssetDownloadingOption:]_block_invoke
-[CSAssetManager _fetchRemoteMetaData]
-[CSAssetManager _canFetchRemoteAsset:]
-[CSAssetManager CSLanguageCodeUpdateMonitor:didReceiveLanguageCodeChanged:]
-[CSAssetManager _createPeriodicalDownloadTimer]
-[CSAssetManager _createPeriodicalDownloadTimer]_block_invoke
-[CSAssetManager _startPeriodicalDownload]
-[CSAssetManager _stopPeriodicalDownload]
currentLanguageCode
-[CSVoiceTriggerAwareZeroFilter resetWithSampleRate:containsVoiceTrigger:voiceTriggerInfo:]
triggerEndSeconds
vtEndInSampleCount
TQ,N,V_vtEndInSampleCount
numSamplesProcessed
TQ,N,V_numSamplesProcessed
T@"CSAudioZeroFilter",&,N,V_zeroFilter
T@"<CSVoiceTriggerAwareZeroFilterDelegate>",W,N,V_delegate
T@"<CSSPGEndpointAnalyzerDelegate>",W,N,V_delegate
%@-%@
-[CSOSTransaction initWithDescription:]
-[CSOSTransaction dealloc]
-[CSAudioMetricProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioMetricProvidingProxy _handleMetricProvidingRequestTypeAudioMetricMessage:messageBody:client:]
audioMetricProvider
T@"<CSAudioMetricProviding>",W,N,V_audioMetricProvider
-[CSGestureMonitorWatch _startMonitoringWithQueue:]
-[CSGestureMonitorWatch wakeGestureRecognized:]
CSLSWakeGestureMonitor
Unable to find class %s
/System/Library/PrivateFrameworks/CarouselServices.framework/CarouselServices
corespeechd xpc connection client queue
-[CSActivationXPCConnection _handleClientEvent:]
-[CSActivationXPCConnection _handleClientMessage:client:]
-[CSActivationXPCConnection _handleClientError:client:]
-[CSActivationXPCConnection _handleActivateEventMesssage:client:]
T@"<CSActivateXPCConnectionDelegate>",W,N,V_delegate
address
T@"NSString",C,N,V_address
supportDoAP
TB,N,V_supportDoAP
CSSiriClientBehaviorMonitor
-[CSSiriClientBehaviorMonitor notifyWillStartStreamWithContext:option:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyDidStartStreamWithContext:successfully:option:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyWillStopStream:]_block_invoke
-[CSSiriClientBehaviorMonitor notifyDidStopStream:]_block_invoke
isStreaming
TB,N,V_isStreaming
Serial CSPolicy queue
-[CSLanguageCodeUpdateMonitor _startMonitoringWithQueue:]
-[CSLanguageCodeUpdateMonitor _stopMonitoring]
-[CSLanguageCodeUpdateMonitor _didReceiveLanguageCodeUpdate]
Serial CSEventMonitor queue
VoiceProfileCompatabiltyVersion
VoiceProfileProductType
VoiceProfileSWVersion
VoiceProfileCategoryType
VoiceProfileIdentifier
spIdUnknownUserScore
spIdKnownUserScores
SpIdScoreThreshold
Unknown InvocationStyle: %lu
tdti
tdtiexplicit
tdexplicit
Unknown CSSpIdType: %ld
+[CSUtils(SpeakerId) spIdTypeForString:]
ImplicitAdditionRunMode
ModelQueryRunMode
RetrainingMode
LSTM
Unknown CSSpIdModelType: %ld
config_td_spid.txt
config_ti_spid.txt
config_tdti_spid.txt
config_sr_sat.txt
config.txt
trained_users.json
+[CSUtils(SpeakerId) spIdSATDirForLocale:]
spid
+[CSUtils(SpeakerId) spIdSATAudioDirForLocale:spidType:]
td-sr-model
model
+[CSUtils(SpeakerId) spIdSATModelDirForLocale:spidType:modelType:]
spid-imported
+[CSUtils(SpeakerId) createDirectoryIfDoesNotExist:]
Logs/CoreSpeech/spid/
grading
+[CSUtils(SpeakerId) spIdAudioLogsCountLimitReached]
+[CSUtils(SpeakerId) cleanupOrphanedVoiceIdGradingFiles]
v32@?0@"NSString"8@"NSURL"16^B24
+[CSUtils(SpeakerId) cleanupOrphanedVoiceIdGradingFiles]_block_invoke
VoiceProfileCache
AudioFileOpenURL Failed : %@
EARTests
AudioFileOpenURL failed: %@
ExtAudioFileWrapAudioFileID failed: %@
Error reading audio-file: %d
EOF. Num bytes read: %lu
+[CSUtils(SpeakerId) isSpidSupportedInCurrentLanguage]
+[CSUtils(SpeakerId) getVoiceProfileVersionFromVersionFilePath:]
+[CSUtils(SpeakerId) getVoiceProfileIdentityFromVersionFilePath:]
+[CSUtils(SpeakerId) getVoiceProfileProductCategoryFromVersionFilePath:]
+[CSUtils(SpeakerId) checkIfMigrationNecessaryForCompatibilityVersion:forLanguageCode:]
+[CSUtils(SpeakerId) migrateVoiceProfileToVersion:forLanguageCode:]
+[CSUtils(SpeakerId) updateVoiceProfileVersionFileForProfileId:forLanguageCode:]
kCSDeviceCategory_Unknown
kCSDeviceCategory_iOS_NonAop
kCSDeviceCategory_iOS_Aop
kCSDeviceCategory_macOS
kCSDeviceCategory_audioAccessory
kCSDeviceCategory_iOS_Aop_Explicit
iPad3,4
iPad3,5
iPad3,6
iPad4,1
iPad4,2
iPad4,3
iPad4,4
iPad4,5
iPad4,6
iPad4,7
iPad4,8
iPad4,9
iPad5,1
iPad5,2
iPad5,3
iPad5,4
iPad6,7
iPad6,8
iPad6,11
iPad6,12
iPhone5,1
iPhone5,2
iPhone5,3
iPhone5,4
iPhone6,1
iPhone6,2
iPhone7,1
iPhone7,2
iPad
iPhone
Accessory
+[CSUtils(SpeakerId) deviceCategoryForDeviceProductType:]
+[CSUtils(SpeakerId) isCurrentDeviceCompatibleWithNewerVoiceProfileAt:]
+[CSUtils(SpeakerId) isCurrentDeviceCompatibleWithVoiceProfileAt:]
pathExtension='json'
Caches/VoiceTrigger/ImplicitUtterences
+[CSUtils(SpeakerId) getNumberOfAudioFilesInDirectory:]
+[CSUtils(SpeakerId) dumpFilesInDirectory:]
+[CSUtils(SpeakerId) markUploadForVoiceProfile:]
ScheduledUserVoiceProfilesUpload
+[CSUtils(SpeakerId) markVoiceProfileUploaded:]
+[CSUtils(SpeakerId) getContentsOfDirectory:]
SiriDebugVT
SpeakerIDToGradeData
VoiceProfiles
Caches
+[CSUtils(SpeakerId) mapRawScores:toScoresOfType:withRawScoreOffset:withRawScoreScale:withLogitCeil:withLogitFloor:withSATThreshold:]
+[CSUtils(SpeakerId) spIdMapScoresToSharedSiriID:]
+[CSUtils(SpeakerId) spIdMapIdentifiersToSiriDebugID:]
+[CSUtils(SpeakerId) spIdComposeProfileVersionsFor:]
%d.%d.%d
+[CSUtils(SpeakerId) getEnrollmentUtterancesFromDirectory:]
self.absoluteString ENDSWITH '.wav'
+[CSUtils(SpeakerId) getExplicitEnrollmentUtterancesFromDirectory:]_block_invoke
v32@?0@"NSURL"8Q16^B24
+[CSUtils(SpeakerId) getExplicitOnlyEnrollmentUtterancesFromDirectory:]_block_invoke
+[CSUtils(SpeakerId) getBaseProfileOnlyEnrollmentUtterancesFromDirectory:]_block_invoke
+[CSUtils(SpeakerId) getImplicitEnrollmentUtterancesFromDirectory:]_block_invoke
+[CSUtils(SpeakerId) getImplicitEnrollmentUtterancesPriorTo:forType:forLanguageCode:forProfileID:]
+[CSUtils(SpeakerId) getImplicitEnrollmentUtterancesPriorTo:forType:forLanguageCode:forProfileID:]_block_invoke
+[CSUtils(SpeakerId) removeItemAtPath:]
+[CSUtils(SpeakerId) deleteExistingSATModelForLanguageCode:]
recordState
TQ,N,V_recordState
[%@]
[%llu]
[%f]
BuiltInAOPVoiceTrigger
RemoteMicVoiceTrigger
RemoteMicVAD
JarvisVoiceTrigger
mediaserverdLaunched
Unknown
TQ,N,V_type
T@"NSDictionary",&,N,V_activationInfo
TQ,N,V_hosttime
Tf,N,V_vadScore
uuid
activationInfo
vadScore
hosttime
-[CSVoiceTriggerAssetDownloadMonitor _startMonitoringWithQueue:]
-[CSVoiceTriggerAssetDownloadMonitor _stopMonitoring]
-[CSVoiceTriggerAssetDownloadMonitor _didInstalledNewVoiceTriggerAsset]
com.apple.MobileAsset.VoiceTriggerAssets.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsWatch.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsMarsh.ma.new-asset-installed
com.apple.MobileAsset.VoiceTriggerAssetsMac.ma.new-asset-installed
baseProfileConfidenceScoreThreshold
TQ,R,N,V_baseProfileConfidenceScoreThreshold
implicitConfidenceScoreThreshold
TQ,R,N,V_implicitConfidenceScoreThreshold
implicitDeltaConfidenceScoreThreshold
TQ,R,N,V_implicitDeltaConfidenceScoreThreshold
maxNumberOfBaseProfileUtterances
TQ,R,N,V_maxNumberOfBaseProfileUtterances
audioSessionState
TQ,N,GgetAudioSessionState,V_audioSessionState
T@"NSString",C,N,V_deviceId
[SplitterEnabled(%d)]
[Device%d(%@) DoAP(%d)]
[SplitterState:%d]
splitterEnabled
TB,N,V_splitterEnabled
CSVoiceIdXPCListener
com.apple.corespeech.corespeechd.voiceid.xpc
-[CSVoiceIdXPCListener listen]
-[CSVoiceIdXPCListener _handleListenerEvent:]
-[CSVoiceIdXPCListener _handleListenerError:]
-[CSVoiceIdXPCListener _handleNewRemoteConnection:]
corespeech.corespeechd.voiceid.xpc
VoiceId
unrecognizedmetadata
CSSpeechManager Asset Query Queue
-[CSSpeechManager startManager]
-[CSSpeechManager registerSpeechController:]
-[CSSpeechManager registerSiriClientProxy:]
-[CSSpeechManager registerVolumeController:]
v32@?0@"NSNumber"8@"CSAudioProvider"16^B24
-[CSSpeechManager audioProviderWithContext:error:]
-[CSSpeechManager audioProviderWithContext:error:]_block_invoke
-[CSSpeechManager audioProviderWithStreamID:]_block_invoke
-[CSSpeechManager _getAudioRecorderWithError:]
-[CSSpeechManager audioProviderInvalidated:streamHandleId:]_block_invoke
-[CSSpeechManager audioRecorderWillBeDestroyed:]_block_invoke
-[CSSpeechManager voiceTriggerAssetHandler:didChangeCachedAsset:]
-[CSSpeechManager _createClearLoggingFileTimer]
-[CSSpeechManager _createClearLoggingFileTimer]_block_invoke
-[CSSpeechManager _startClearLoggingFilesTimer]
assetQueryQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_assetQueryQueue
audioProviders
T@"NSMutableDictionary",&,N,V_audioProviders
clientController
T@"<CSSpeechManagerDelegate>",W,N,V_clientController
volumeClientController
T@"<CSSmartSiriVolumeDelegate>",W,N,V_volumeClientController
voiceTriggerImplicitTraining
T@"CSSpIdImplicitTraining",&,N,V_voiceTriggerImplicitTraining
clearLoggingFileTimer
T@"NSObject<OS_dispatch_source>",&,N,V_clearLoggingFileTimer
clearLoggingFileTimerCount
Tq,N,V_clearLoggingFileTimerCount
opportuneSpeakListnerTestService
T@"CSOpportuneSpeakListnerTestService",&,N,V_opportuneSpeakListnerTestService
T@"CSSmartSiriVolume",R,N,V_smartSiriVolume
-[CSVoiceIdXPCClient _handleListenerEvent:]
-[CSVoiceIdXPCClient _handleListenerError:]
-[CSAudioZeroCounter getZeroStatisticsFromBuffer:entireSamples:]
-[CSAudioZeroCounter stopReportZeroStatistics]
T@"NSDictionary",C,N,V_voiceTriggerInfo
T@"NSDictionary",C,N,V_rtsTriggerInfo
corespeech.json
assets.json
hybridendpointer.json
hybridendpointer_marsh.json
/System/Library/PrivateFrameworks/CoreSpeech.framework
+[CSAsset fallBackAssetResourcePath]
defaultFallbackHearst
-[CSAsset initWithResourcePath:configFile:configVersion:]
-[CSAsset _decodeJson:]
-[CSAsset getNumberForKey:category:default:]
-[CSAsset getStringForKey:category:default:]
configVersion:%@ resourcePath:%@ path:%@
path
T@"NSString",R,N,V_path
resourcePath
T@"NSString",R,N,V_resourcePath
hashFromResourcePath
configVersion
T@"NSString",R,N,V_configVersion
-[CSXPCConnection sendMessageToClient:]
-[CSXPCConnection sendMessageToClient:]_block_invoke
-[CSXPCConnection _handleClientEvent:]
-[CSXPCConnection _handleClientMessage:client:]
-[CSXPCConnection _handleAudioProvidingMessage:messageBody:client:]
-[CSXPCConnection _handleAudioProvidingRequestTypeSwitchMessage:messageBody:client:]
-[CSXPCConnection _handleClientError:client:]
-[CSXPCConnection _handlePingPongMessage:client:]
audioSessionProvidingProxy
T@"CSAudioSessionProvidingProxy",&,N,V_audioSessionProvidingProxy
audioSessionInfoProvidingProxy
T@"CSAudioSessionInfoProvidingProxy",&,N,V_audioSessionInfoProvidingProxy
audioStreamProvidingProxy
T@"CSAudioStreamProvidingProxy",&,N,V_audioStreamProvidingProxy
audioAlertProvidingProxy
T@"CSAudioAlertProvidingProxy",&,N,V_audioAlertProvidingProxy
audioMeterProvidingProxy
T@"CSAudioMeterProvidingProxy",&,N,V_audioMeterProvidingProxy
audioMetricProvidingProxy
T@"CSAudioMetricProvidingProxy",&,N,V_audioMetricProvidingProxy
smartSiriVolumeProvidingProxy
T@"CSSmartSiriVolumeProvidingProxy",&,N,V_smartSiriVolumeProvidingProxy
T@"<CSXPCConnectionDelegate>",W,N,V_delegate
CSHostDaemon
-[CSHostDaemon _daemonDidLaunch]
com.apple.notifyd.matching
-[CSHostDaemon _setupNotifyHandlers]_block_invoke
AFLanguageCodeDidChangeDarwinNotification
xpcListener
T@"CSXPCListener",&,N,V_xpcListener
activationXpcListener
T@"CSActivationXPCListener",&,N,V_activationXpcListener
voiceIdXpcListener
T@"CSVoiceIdXPCListener",&,N,V_voiceIdXpcListener
voiceTriggerXpcListener
T@"CSVoiceTriggerXPCListener",&,N,V_voiceTriggerXpcListener
-[CSAudioCircularBuffer initWithNumChannels:recordingDuration:samplingRate:]
-[CSAudioCircularBuffer copySamplesFromHostTime:]
-[CSAudioCircularBuffer copySamplesFrom:to:]
-[CSAudioCircularBuffer copyBufferWithNumSamplesCopiedIn:]
-[CSAudioCircularBuffer reset]
-[CSAudioCircularBuffer saveRecordingBufferFrom:to:toURL:]
bufferLength
TQ,N,V_bufferLength
copySamples
  mNumChannels: 
  mRecordingDurationInSecs: 
  mSampleRate: 
  mBytesPerSample: 
  mBufferLengthInSamples: 
  mNextWritePos: 
  mSamplesCount: 
  mMemoryPool(
): [
    chan-
: sz=
: mem-sz: 
+[CSUtils(AudioFile) readAudioChunksFrom:block:]
-[CSCoreSpeechDaemonStateMonitor notifyDaemonStateChanged:]
com.apple.corespeech.corespeechd.launch
-[CSCoreSpeechDaemonStateMonitor _startMonitoringWithQueue:]
-[CSCoreSpeechDaemonStateMonitor _stopMonitoring]
-[CSCoreSpeechDaemonStateMonitor _didReceiveDaemonStateChanged:]
+[CSUtils(Time) hostTimeFromSampleCount:anchorHostTime:anchorSampleCount:]
+[CSUtils(Time) sampleCountFromHostTime:anchorHostTime:anchorSampleCount:]
+[CSUtils(Time) macHostTimeFromBridgeHostTime:]
CSRemoteRecordClient Queue
T@"<CSRemoteRecordClientDelegate>",W,N,V_delegate
T@"<CSAudioDecoderDelegate>",W,V_delegate
kVTSiriAssertionEnabledDarwinNotification
kVTSiriAssertionDisabledDarwinNotification
CSSiriAssertionMonitor queue
-[CSSiriAssertionMonitor init]
-[CSSiriAssertionMonitor _stopMonitoring]
-[CSSiriAssertionMonitor enableAssertionReceived]_block_invoke
-[CSSiriAssertionMonitor disableAssertionReceived]_block_invoke
-[CSSiriAssertionMonitor handleXPCMessage:messageBody:client:]
tdPsrCanProcessRequest
TB,R,N,V_tdPsrCanProcessRequest
tdSATModelFilePath
T@"NSString",R,N,V_tdSATModelFilePath
getSATVectorCount
Tq,R,N,V_getSATVectorCount
lastRequestSatScore
Tf,R,N,V_lastRequestSatScore
speakerVector
T@"NSData",&,N,V_speakerVector
-[CSAudioSessionProvidingProxy CSXPCConnectionReceivedClientError:clientError:client:]
-[CSAudioSessionProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypePrewarmMessage:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeActivateMessage:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeDeactivateMessage:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeGetDuckOthersOption:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeSetDuckOthersOption:messageBody:client:]
-[CSAudioSessionProvidingProxy _handleSessionProvidingRequestTypeEnableMiniDucking:messageBody:client:]
ENABLE
DISABLE
-[CSAudioSessionProvidingProxy audioSessionProvider:providerInvalidated:]
T@"<CSAudioSessionProviding>",W,N,V_audioSessionProvider
Languages
Footprint
Premium
-[CSCommandControlStreamEventMonitor isStreaming]
-[CSAudioAlertProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypeSetAlertSoundMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypePlayAlertSoundMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypePlayRecordStartingAlertAndResetEndpointerMessage:messageBody:client:]
v20@?0B8Q12
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypeAlertStartTimeMessage:messageBody:client:]
-[CSAudioAlertProvidingProxy _handleAlertProvidingRequestTypeConfigureAlertBehavior:messageBody:client:]
-[CSAudioAlertProvidingProxy audioAlertProvidingDidFinishAlertPlayback:ofType:error:]
audioAlertProvider
T@"<CSAudioAlertProviding>",W,N,V_audioAlertProvider
com.apple.voicetrigger.notbackedup
kCSPreferencesJarvisTriggerModeDidChangeDarwinNotification
Phrase Detector Enabled
AttentiveSiri Enabled
AttentiveSiri AudioLogging Enabled
VoiceTrigger CoreSpeech Enabled
-[CSPreferences voiceTriggerInCoreSpeech]_block_invoke
CoreSpeech Daemon Enabled
-[CSPreferences corespeechDaemonEnabled]_block_invoke
Enable Two Shot Notification
com.apple.demo-settings
StoreDemoMode
File Logging Level
Logs/CrashReporter/VoiceTrigger/audio/
/Logs/CrashReporter/Assistant/
SpeechLogs
-[CSPreferences assistantAudioFileLogDirectory]
Second Pass Audio Logging Enabled
Jarvis Audio Logging Enabled
Jarvis Trigger Mode
Enable SoS Audio Logging
mobile
Logs/CrashReporter/CoreSpeech/sos/
-[CSPreferences getStartOfSpeechAudioLogFilePath]
yyyyMMdd_HHmmss.SSS
%@/%@
Remote VoiceTrigger Delay
Remote VoiceTrigger Endpoint Timeout
VoiceTrigger/interstitial
Myriad File Logging Enabled
-[CSPreferences enableAudioInjection:]
Audio Injection Enabled
-[CSPreferences setAudioInjectionFilePath:]
Audio Injection File Path
-[CSPreferences audioInjectionFilePath]
-[CSPreferences audioInjectionFilePath]_block_invoke
SpeakerId Enabled
iTunes Account Signin Enabled
SpeakerId Score Type
SmartSiriVolume SoftVolume Enabled
Audio Session Activation Delay
Max Number Logging Files
Enable SiriActivation HomePod
Enable SiriActivation watchOS
IOS Support Barge-in
-[CSPreferences iOSBargeInSupportEnabled]_block_invoke
-[CSPreferences iOSBargeInSupportEnabled]
Overwrite Remote VAD Score
Hearst First Pass Model Version
Hearst Second Pass Model Version
Hearst Fake Model Path
VoiceTrigger Companion Sync Enabled
voicetrigger xpc service connection client queue
-[CSVoiceTriggerXPCConnection _handleClientEvent:]
-[CSVoiceTriggerXPCConnection _handleClientMessage:client:]
-[CSVoiceTriggerXPCConnection _handleClientError:client:]
-[CSVoiceTriggerXPCConnection _handleVoiceTriggerXPCServiceMessage:client:]
phraseSpotterBypass
phraseSpotterBypassTimeout
-[CSVoiceTriggerXPCConnection _handlePhraseSpotterBypassRequest:]
-[CSVoiceTriggerXPCConnection _handleVoiceTriggeredSiriSessionCancelled]
enable
assertion
timestamp
T@"<CSVoiceTriggerXPCConnectionDelegate>",W,N,V_delegate
com.apple.
com.apple.private.
+[CSUtils(machXPC) machXPCConnection:hasEntitlement:]
+[CSAudioStreamRequest defaultRequestWithContext:]
+[CSAudioStreamRequest requestForLpcmRecordSettingsWithContext:]
+[CSAudioStreamRequest requestForOpusRecordSettingsWithContext:]
+[CSAudioStreamRequest requestForSpeexRecordSettingsWithContext:]
TB,N,V_requiresHistoricalBuffer
TB,N,V_useCustomizedRecordSettings
Tq,N,V_audioFormat
Td,N,V_sampleRate
TI,N,V_lpcmBitDepth
TB,N,V_lpcmIsFloat
numberOfChannels
TI,N,V_numberOfChannels
TI,N,V_encoderBitRate
TB,N,V_isSiri
requiresHistoricalBuffer
useCustomizedRecordSettings
audioFormat
lpcmBitDepth
lpcmIsFloat
NumberOfChannels
encoderBitRate
isSiri
com.apple.siri.SiriDebug.SpeakerVoiceGradingTrigger
com.apple.siri.SiriDebug.RemoteNearMissGradingTrigger
com.apple.siri.SiriDebug.VoiceProfileAddedTrigger
com.apple.siri.SiriDebug.VoiceProfileSyncTrigger
com.apple.siri.SiriDebug
+[CSSiriDebugConnection launchSiriDebugAppWithMessage:]_block_invoke
v24@?0@"AFSiriResponse"8@"NSError"16
-[CSSelectiveChannelAudioFileWriter initWithURL:inputFormat:outputFormat:channelBitset:]
-[CSSelectiveChannelAudioFileWriter addSamples:numSamples:]
TI,R,N,V_numberOfChannels
-[CSSoftwareUpdateCheckingMonitor _startMonitoringWithQueue:]
-[CSSoftwareUpdateCheckingMonitor _stopMonitoring]
-[CSSoftwareUpdateCheckingMonitor _checkSoftwareUpdateCheckingState]
com.apple.duetscheduler.restartCheckNotification
CSMediaPlayingMonitor queue
-[CSMediaPlayingMonitor initializeMediaPlayingState]_block_invoke_2
v12@?0I8
-[CSMediaPlayingMonitor _startMonitoringWithQueue:]
-[CSMediaPlayingMonitor _stopMonitoring]
-[CSMediaPlayingMonitor _notePossiblePlayPausedStateChange:]
PLAYING
NOT PLAYING
deque
-[CSVoiceTriggerAOPModeEnabledPolicyIOS _addConditionsForIOSBargeIn]_block_invoke
-[CSVoiceTriggerAOPModeEnabledPolicyIOS _addConditionsForIOSAOP]_block_invoke
-[CSVoiceTriggerAOPModeEnabledPolicyIOS _isSpeechDetectionDevicePresent]
-[CSNetworkAvailabilityMonitor _startMonitoringWithQueue:]
-[CSNetworkAvailabilityMonitor _stopMonitoring]
-[CSNetworkAvailabilityMonitor _availabilityChanged]
-[NSDictionary(XPCObject) _cs_initWithXPCObject:]
-[NSDictionary(XPCObject) _cs_initWithXPCObject:]_block_invoke
B24@?0r*8@"NSObject<OS_xpc_object>"16
-[NSDictionary(XPCObject) _cs_xpcObject]_block_invoke
v32@?0@8@16^B24
-[CSVoiceTriggerXPCClient dealloc]
-[CSVoiceTriggerXPCClient _handleListenerEvent:]
-[CSVoiceTriggerXPCClient _handleListenerError:]
T@"<CSVoiceTriggerXPCClientDelegate>",W,N,V_delegate
-[CSAudioMeterProvidingProxy handleXPCMessage:messageBody:client:]
-[CSAudioMeterProvidingProxy _handleMeterProvidingRequestTypeSetMeteringEnabledMessage:messageBody:client:]
-[CSAudioMeterProvidingProxy _handleMeterProvidingRequestTypeUpdateMetersMessage:messageBody:client:]
v16@?0B8f12
-[CSAudioMeterProvidingProxy _handleMeterProvidingRequestTypePowerMessage:messageBody:client:powerType:]
audioMeterProvider
T@"<CSAudioMeterProviding>",W,N,V_audioMeterProvider
%s Start Recording Host Time = %{public}llu
%s disconnect activationXPCClient
%s cannot handle event : event = %{public}p
%s ignore unknown types of message 
%s cannot handle error : error = %{public}p
%s Listener connection disconnected
%s connection error: %{public}s
%s Cannot create SampleRateConverter using AudioConverterNew : %{public}d
%s Cannot set Quality property to audioConverter
%s Cannot set Complexity property to audioConverter
%s Audio resampling done : %lu
%s AudioConverter is sad: 0x%{public}xd
%s Celestial is not available on this platform.
%s notification = %{public}@
%s Cannot generate subChunk since channel(%{public}tu) is larger than number of channels(%{public}tu)
%s Cannot generate subChunk if it reuqest more than it has : %{public}tu %{public}tu %{public}tu
%s SpkrId:: Processing ended at: numSamplesProcessed=%lu, totalSampleCountToReach=%lu
%s CSAudioStreamProvidingProxy has received xpc disconnection
%s Trying to stop audio stream on CSAudioStreamProvidingProxy
%s Unknown body type : %{public}lld
%s Cannot handle setCurrentContext throught XPC : audioStreamProviding is nil
%s Cannot handle setCurrentContext throught XPC : given context is nil
%s Cannot handle AudioStreamRequest throught XPC : given audioStreamRequest is nil
%s Cannot handle AudioStreamRequest throught XPC : audioStreamProviding is nil
%s Getting audio stream has failed : %{public}@
%s Cannot handle PrepareRequest throught XPC : audioStreamProviding is nil
%s Cannot handle PrepareRequest : audioStream is nil
%s Given audioStreamRequest is nil, use default audioStreamRequest
%s Cannot handle startAudioStream : given audio stream option is nil
%s Cannot handle startAudioStream : audioStream is nil
%s Cannot handle startAudioStream : audioStreamProviding is nil
%s Cannot handle stopAudioStream : audioStreamProviding is nil
%s Cannot handle stopAudioStream : audioStream is nil
%s Fail to parse recordContext
%s Timed-out for fetching voiceTriggerInfo
%s TiggerInfoProviding is nil
%s Cannot handle IsRecording : audioStreamProviding is nil
%s Cannot handle RecordRoute : audioStreamProviding is nil
%s Cannot handle RecordDeviceInfo : audioStreamProviding is nil
%s Cannot handle RecordSettings : audioStreamProviding is nil
%s Cannot handle IsNarrowband : audioStreamProviding is nil
%s Cannot handle PlaybackRoute : audioStreamProviding is nil
%s CSAudioStreamProvidingProxy
%s Failure disposing audio file %{public}d
%s Audio file already configured, closing first
%s Creating audio file at URL %{public}@
%s Failed creating audio file at url %{public}@ %{public}d
%s Error setting input format %{public}d
%s No audio file to append data
%s Failed writing audio file %{public}d
%s Closing file at URL %{public}@, audio size: %{public}u
%s Mediaserverd/bridgeaudiod crashed
%s Mediaserverd/bridgeaudiod recovered from crash
%s Start monitoring : AudioSessionInterruption
%s Start monitoring : AudioSessionRouteChangeNotification
%s Stop monitoring AudioSession activities
%s Plan removing the temp file %{public}@
%s Failed to remove temp file %{public}@ reason: %{public}@
%s Start copying %{public}u bytes of data to crashreporter with wav file header offset %{public}llu
%s Failed to read data from %{public}@
%s Finished copying data to crashreporter.
%s Logging audio file into : %{public}@
%s Removing non-dir at AttentiveSiri AudioLog dir: %@
%s Error removing %@: err: %@
%s Failed to create AudioLogging directory for AttentiveSiri: %@
%s Created AudioLogging dir for AttentiveSiri at: %@
%s SmartSiriVolume cannot be resumed since Siri is speaking
%s Start monitoring : Setting preference change
%s Stop monitoring : Setting preference change
%s Siri restricted on lock screen : %{public}@
%s default to recordContext : %{public}@
%s Start monitoring : SpeechControllerGibraltar event
%s Will notify speechController record state change to %{public}lu in %{public}f seconds
%s There is no pending event to timeout
%s Received duplicated recording state %{public}lu -> %{public}lu
%s Notifying speechController record state change to %{public}lu
%s Failed to create regular expression : %{public}@
%s Cannot get a VoiceTrigger asset : %{public}@
%s CSVoiceTriggerAsset found: %{public}@
%s Asset Query failed : %{public}@
%s cached asset:%{public}@, new asset:%{public}@
%s New asset is same as cached asset, ignore notification
%s New asset is different from cached one. Updating cached asset
%s new VoiceTrigger asset downloaded
%s Language Code Changed : %{public}@
%s First unlock notification received : %{public}d
%s Start monitoring : Mediaserverd crash / recover event
%s Prepare Audio Provider with Context : %{public}@
%s Failed to get reply result correctly
%s Received alertStartTime = %{public}llu
%s Received peakPower = %{public}f
%s Received averagePower = %{public}f
%s Sending audioMetric request
%s Failed to get audioMetric reply
%s audioMetric : %{public}@
%s Received invalid audioMetric
%s Error creating message
%s audioStreamWithRequest for stream %{public}@
%s Invalid message: stream is nil or request is nil
%s PrepareAudioStream %{public}@
%s Sending VoiceTriggerInfo request
%s Received VoiceTriggerInfo %{public}@
%s Failed to parse VoiceTriggerInfo from raw data
%s Received rtsTriggerInfo %{public}@
%s Failed to parse rtsTriggerInfo from raw data
%s Message not valid
%s ::: %{public}s enable: %{public}d reason: %{public}@
%s Ignoring request to enable/disable voice trigger with nil reason.
%s ::: Asserting that VoiceTrigger should be %{public}@ with reason: %{public}@. Existing assertions (%{public}lu): %{public}@; times: %{public}@ vs %{public}f
%s Ignoring request to enable/disable voice trigger - time order violation.
%s assertionType = %{public}lld
%s NO reply!!!
%s No message!!
%s No reply for hostTimeFromSampleCount request with sampleCount %{public}llu
%s No message for hostTimeFromSampleCount request with sampleCount %{public}llu
%s No reply for sampleCountFromHostTime request with hostTime %{public}llu
%s No message for sampleCountFromHostTime request with hostTime %{public}llu
%s Cannot handle nil message
%s Unexpected message type : %{public}lld
%s AlertProvidingDelegate messageType : %{public}lld
%s Unexpected type : %{public}lld
%s SessionProvidingDelegate messageType : %{public}lld
%s context : %{public}@
%s invalid context
%s SessionInfoProvidingDelegate messageType : %{public}lld
%s Received notificationInfo %{public}@
%s Failed to parse notificationInfo from raw data
%s startListenWithOption : %{public}d, %{public}@
%s stopListenWithCompletion : %{public}d, %{public}@
%s hasRemoteVADAvailable : %d
%s hasVADAvailable : %d
%s didStopUnexpectly : %d
%s MobileTimer is not available on this platform.
%s PhraseSpotter enabled = %{public}@
%s PhraseSpotter is already %{public}@, received duplicated notification!
%s Cannot remove model directory(%@) : %@
%s Cannot remove utterance directory(%@) : %@
%s CSVoiceTriggerXPCListener start listening
%s Received new remote control connection request
%s Connection request is nil
%s Error = %{public}s
%s Getting new client connection : %{public}p
%s connection key and value not matching! client: %{public}p, xpcConnection: %{public}p
%s Client connection disconnected, removing %{public}p from client connection pool
%s Dealloc audioStreamHolding : %{public}@
%s CSAudioProvider[%{public}@]:StreamState changed from : %{public}@ to : %{public}@
%s CSAudioProvider[%{public}@]:Setting audioRecorder : %{public}p
%s CSAudioProvider[%{public}@]:setCurrentContext : %{public}@
%s CSAudioProvider[%{public}@]:Cannot change context since audio recorder is currently recording
%s CSAudioProvider[%{public}@]:audioStreamWithRequest for stream <%{public}@>
%s Failed to _prepareAudioStreamSync : %{public}@
%s CSAudioProvider[%{public}@]:Prepare audio stream reuqested while state is %{public}@
%s CSAudioProvider[%{public}@]:Cannot prepare, audio system is recovering
%s CSAudioProvider[%{public}@]:Asking AudioRecorder prepareAudioStreamRecord
%s CSAudioProvider[%{public}@]:prepareAudioStreamRecord failed : %{public}@
%s CSAudioProvider[%{public}@]:Create circular buffer
%s CSAudioProvider[%{public}@]:Tear down circular buffer
%s CSAudioProvider[%{public}@]:startAudioStream with stream : %{public}@ with stream state : %{public}@, option : %{public}@, streamId : %{public}llu
%s CSAudioProvider[%{public}@]:state was %{public}@, prepareAudioStream first
%s CSAudioProvider[%{public}@]:prepareAudioStreamSync with stream : %{public}@ with stream state : %{public}@
%s CSAudioProvider[%{public}@]:prepareAudioStream with stream : %{public}@ with stream state : %{public}@
%s CSAudioProvider[%{public}@]:Cannot handle start audio stream on : %{public}@
%s CSAudioProvider[%{public}@]:Cannot startAudioStream, audio system is recovering
%s CSAudioProvider[%{public}@]:Requested startHostTime = %{public}llu, _clientStartSampleCount = %{public}tu
%s CSAudioProvider[%{public}@]:%{public}@ is requesting earlier audio than asked, we can't deliver earlier audio
%s CSAudioProvider[%{public}@]:Set circularBufferStartHostTime = %{public}llu, circularBufferStartSampleCount = %{public}lu
%s CSAudioProvider[%{public}@]:Entering dispatch group for recordingWillStartGroup
%s CSAudioProvider[%{public}@]:Failed to fetch historical audio since _clientStartSampleCount is newer than audioBuffer sample count(%{public}llu)
%s CSAudioProvider[%{public}@]:Leaving dispatch group for recordingWillStartGroup
%s CSAudioProvider[%{public}@]:Received didStartRecording while %{public}@
%s CSAudioProvider[%{public}@]:Received didStopRecording reason : %{public}d, streamState : %{public}@
%s CSAudioProvider[%{public}@]:Received didStopRecording while %{public}@
%s CSAudioProvider[%{public}@]:Waiting for recordingWillStartGroup before scheduling stopAudioStream
%s CSAudioProvider[%{public}@]:Scheduled stopAudioStream after waiting for recordingWillStartGroup - stopAudioStream %{public}@ with streamState : %{public}@
%s CSAudioProvider[%{public}@]:Cannot handle stop audio stream on : %{public}@
%s CSAudioProvider[%{public}@]:requested stop audio stream while stopping, adding audio stream into stop pending
%s CSAudioProvider[%{public}@]:Stop all recordings, moving stream state to %{public}@
%s CSAudioProvider[%{public}@]:Failed to stop audioStream : %{public}@
%s CSAudioProvider[%{public}@]:%{public}@ ask for audio hold stream for %{public}f
%s CSAudioProvider[%{public}@]:Timeout for %{public}@ has fired
%s CSAudioProvider[%{public}@]:Removing %{public}@ from stream holders
%s CSAudioProvider[%{public}@]:%{public}@ stream holder was already removed from stream holders
%s CSAudioProvider[%{public}@]:%{public}@ ask for cancel hold stream
%s Failed to prewarmAudioSessionWithError : %{public}@
%s Failed to activateAudioSessionWithReason: %{public}@
%s CSAudioProvider[%{public}@]:Activating Audio Session under : %{public}@
%s Failed to activateAudioSession : %{public}@
%s Failed to deactivate audio session : %{public}@
%s CSAudioProvider[%{public}@]:Deactivating Audio Session under : %{public}@
%s Failed to deactivateAudioSession : %{public}@
%s CSAudioProvider[%{public}@]:AVVC is recovering, ignore command...
%s Fetching voiceTriggerInfo locally for context type : %{public}lld
%s Fetching voiceTriggerInfo from audioRecorder
%s CSAudioProvider[%{public}@]:Cannot stopRecording as there are %{public}tu streamHolders
%s CSAudioProvider[%{public}@]:Shouldn't stop AVVC recording as there are %{public}tu streams
%s CSAudioProvider[%{public}@]:
%s CSAudioProvider[%{public}@]:Buffer underrun!!!!, lastForwardedSampleTime:%{public}lu, oldestSampleTimeInBuffer:%{public}lu, stream:%{public}@
%s CSAudioProvider[%{public}@]:Ignore forwarding stream %{public}@                                    the audio packets until sampleCount == %{public}lu (theMostRecentSampleCount:%{public}lu)
%s CSAudioProvider[%{public}@]:Buffer overrun!!! lastForwardedSampleTime:%{public}lu,                                    theMostRecentSampleCount:%{public}lu, stream:%{public}@
%s ScheduleAlertFinishTimeout : %{public}@
%s ScheduleAlertFinishTimeout will be ignored : %{public}@, %{public}@
%s Received finishStartAlertPlaybackAt:%{public}llu streamState : %{public}@
%s CSAudioProvider[%{public}@]:Requested alertFinishHostTime = %{public}llu, _clientStartSampleCount = %{public}tu, circularBufferSampleCount = %{public}tu
%s Audio Streaming already stopped
%s Will invalidate current builtIn audio stream : %{public}@
%s failed to stopAudioStream : %{public}@
%s CSAudioProvider[%{public}@]:Audio Recorder Disconnected
%s CSAudioProvider[%{public}@]:Mediaserverd/bridgeaudiod crashed
%s CSAudioProvider[%{public}@]:Mediaserverd/bridgeaudiod recovered from crash
%s CSAudioProvider[%{public}@]:AudioRecorder will be destroyed
%s CSAudioProvider[%{public}@]:recordingTransaction already released
%s CSAudioProvider[%{public}@]:Release recording transaction at streamState : %{public}@
%s Schedule didStart WDT %{public}@ for %{public}lf seconds
%s startRecordingWatchDogDidFire : %{public}@, currentToken : %{public}@
%s startRecordingWatchDogToken doesn't match. Ignore this WDT fire
%s Clearing didStartRecordingDelegate WatchDogTimer : %{public}@
%s Schedule didStop WDT %{public}@ for %{public}lf seconds
%s stopRecordingWatchDogDidFire : %{public}@, currentToken : %{public}@
%s stopRecordingWatchDogToken doesn't match. Ignore this WDT fire
%s Clearing didStopRecordingDelegate WatchDogTimer : %{public}@
%s CS logging files under %{public}@ created before %{public}@ will be removed.
%s Couldn't get creation date: %{public}@
%s Could not remove %{public}@: %{public}@
%s CS logging files number %{public}lu with pattern %{public}@ under %{public}@ exceeding limit, only keep the latest %{public}lu ones
%s Regular expression is nil!
%s VoiceTrigger cannot be turned on since SpeechDetectionVAD is not present
%s VoiceTrigger cannot be turned on since voiceTriggerInCoreSpeech is NO
%s VoiceTrigger cannot be turned on since VoiceTrigger is disabled
%s VoiceTrigger cannot be turned on since Siri is disabled
%s VoiceTrigger cannot be turned on since SpringBoard is not started yet
%s VoiceTrigger cannot be turned on since device is not unlocked after restart
%s VoiceTrigger cannot be turned on since device is on battery
%s VoiceTrigger cannot be turned on since Siri is restricted on lock screen
%s VoiceTrigger cannot be turned on since Software Update Checking is running
%s NDAPI initialization failed
%s set StartAnalyzeSampleCount = %{public}lld
%s NDAPI config doesn't contain threshold_normal
%s NDAPI config doesn't contain threshold_logging
%s CS doesn't have ndblobbuilder!
%s latestMajorVersion = %d, LatestMinorVersion = %d
%s corespeech.json doesn't contains rtblobs
%s blob file name is not exists
%s blob file is not exists at %{public}@
%s Reading blob from : %{public}@
%s Blob is nil : %{public}@
%s RTLocaleMap is not available on asset
%s Tagging as handheld as user interacted in last %f secs
%s Tagging as farfield as last user interaction %f secs back
%s Tagging as FarField as user dismissed
%s Received external route change notification
%s Received CarPlay route change notification
%s Stop monitoring : AudioRouteChangeMonitor
%s Notifying Hearst Connection State : %{public}d
%s Notifying Jarvis Connection State : %{public}d
%s Failed to create AVVC : %{public}@
%s Create new CSAudioRecorder = %{public}p
%s CSAudioRecorder %{public}p deallocated
%s AVVC initialization failed
%s Successfully create AVVC : %{public}p
%s Calling AVVC setContext
%s Failed to get handle id : %{public}@
%s setContext elapsed time = %{public}lf
%s Calling AVVC setContextForStream : %{public}@
%s setCurrentContext elapsed time = %{public}lf
%s Calling AVVC prepareRecordForStream(%{public}llu) : %{public}@
%s AVVC prepareRecordForStream failed : %{public}@
%s prepareRecordForStream elapsed time = %{public}lf
%s ::: CSAudioRecord will inject audio file instead of recording
%s Resetting AudioFilePathIndex
%s Increase AudioFilePathIndex = %d
%s AudioFilePathIndex is out-of-boundary _audioFilePathIndex:%d injectAudioFilePaths:%d
%s AudioFilePathIndex:%d accessing:%@
%s Unable to find injectAudioFilePath = %@
%s Calling AVVC startRecordForStream : %{public}@
%s startRecordForStream failed : %{public}@
%s startRecordForStream elapsed time = %{public}lf
%s Call AVVC stopRecordForStream
%s Failed to stopRecordForStream : %{public}@
%s stopRecordForStream elapsed time = %{public}lf
%s Session State = %d
%s AudioSessionState = YES
%s AudioSessionState = NO
%s AVVC sampling rate = %{public}f
%s AVVC doesn't return sampleRate, assume it is default sample rate
%s isNarrowBand = YES for streamHandleId = %{public}lu
%s isNarrowBand = NO for streamHandleId = %{public}lu
%s Calling AVVC setSessionActive for Prewarm
%s Prewarm AudioSession has failed : %{public}@
%s Calling AVVC setSessionActivate for activation
%s AVVC setSessionActivate has failed : %{public}@
%s AVVC successfully activated audioSession
%s setSessionActivate elapsed time = %{public}lf
%s Calling AVVC setSessionActivate for deactivation : %{public}tu
%s Should not call setDuckOthersOptions with NO in B238
%s %{public}@ miniDucking now
%s enableMiniDucking elapsed time = %{public}lf
%s %{public}@
%s configureAlertBehavior elapsed time = %{public}lf
%s VoiceTriggerInfo is nil from AVVC
%s AVVCAudioBuffer contains %{public}d packet descriptions, size %{public}d, channels %{public}d. Ignoring
%s Bad packet length %{public}d. Skipping rest of record buffer.
%s Peak : %f, Avg : %f
%s packetCount %{public}d
%s Cannot handle audio buffer : unexpected format(%{public}u)
%s Compensating %{public}u channel(s), heartbeat = %{public}lld
%s Calling AVVC playAlertSoundsForType : %{public}ld
%s Received didStartRecording : %{public}p, forStream:%{public}llu, successfully:%{public}d, error:%{public}@
%s Received audio buffer %{public}d, heartbeat = %{public}llu, streamID (%{public}lu)
%s Received didStopRecording : %{public}p forStream:%{public}llu forReason:%{public}ld
%s Received Stream Invalidated : %{public}llu
%s toConfiguration : %{public}d
%s type : %{public}d, error : %{public}@
%s Encoder error : %{public}@
%s withContext : %{public}@
%s activate : %{public}d
%s AVVC lost mediaserverd connection
%s AVVC informed mediaserverd reset, no further action required
%s Failed to deinterleave the data: %{public}d
%s Cannot create de-interleaver using AudioConverterNew: %{public}d
%s Created de-interleaver
%s Unsupported audio format!
%s Start Listening request with deviceId : %{public}@
%s remoteVADDuration = %{public}d, spgDuration = %{public}d, _remoteVADSPGRatio = %{public}d
%s Current mediaplaying state = %{public}d
%s AudioStreamRequest has failed : %{public}@
%s Stopping OpportuneSpeakListener with resetState = %{public}d, mediaplaying = %{public}d
%s boron score : %{public}d
%s slience score estimate : %{public}f
%s ReceivedMediaPlayingChagned = %{public}d
%s SAT successfully initialized : %{public}@
%s Cannot create NSData with size 0
%s xpc object should be XPC_TYPE_DATA
%s Start monitoring : Siri setting switch, Siri is %{public}@
%s Stop monitoring : Siri setting switch
%s Siri Enabled = %{public}@
%s Cannot handle unexpected message type : %lld
%s SmartSiriVolume: final estimated TTS volume %{public}f with music volume %{public}f
%s Wrongly called: SmartSiriVolume is not supported on this device type. smartSiriVolume : %{public}p
%s Trying to access BTLocalDevice
%s Accessing BTLocalDevice
%s BTLocalDevice %{public}p
%s Failed to get sharing enable flag : %d
%s Failed getting sharing device addresses %d
%s Failed converting address from BTDeviceAddress (result = %d).
%s Detaching bluetooth session : %{public}p
%s Already Attaching Bluetooth Session
%s Start attaching bluetooth session
%s session = %{public}p, result = %{public}d
%s session = %p
%s detached session is different from currently attached session, ignore
%s terminated session is different from currently attached session, ignore
%s Bluetooth Session is NULL
%s Failed to get default local device from session %{public}p, (result = %{public}d)
%s Failed to add local device callback from session %{public}p, (result = %{public}d
%s CSActivationXPCListener start listening
%s sessionID = %{public}llu
%s Trying to get sessionID when audioSessionInfoProvider is nil
%s _csAssetsDictionary = %{public}@
%s CSAssetController cannot query for nil language
%s ::: found %{public}lu installed assets for assetType=%{public}lu, matching query: %{public}@
%s Error running asset-query for assetType:%{public}lu, query: %{public}@, error: %{public}lu
%s ::: found %{public}lu assets for assetType=%{public}lu, matching query: %{public}@
%s ::: Meta data not available, query again with returnType MAUnionOfCatalogInstalled
%s Meta data not available, query again with returnType MAUnionOfCatalogInstalled
%s Asset state : %{public}ld
%s ::: %{public}s
%s ::: %{public}s; query: %{public}@
%s Found %{public}lu assets
%s Error running asset query: error %{public}lu, or result is empty
%s ::: Request Fetching RemoteMetaData : assetType : %{public}d
%s ::: Request fetching remote asset
%s ::: found %{public}lu assets for assetType %{public}lu
%s Failed to finish query for assetType %{public}lu with error %{public}lu
%s Meta data downloaded successfully for assetType %{public}lu
%s Failed to download meta data for assetType %{public}lu with error %{public}lu
%s ::: Fetching remote asset
%s ::: Purging installed asset : %{public}@
%s ::: Request downloading remote asset for assetType %{public}lu
%s ::: Start downloading asset
%s ::: download progress: %{public}3.0f%%
%s ::: Error downloading from %{public}@ with error %{public}@
%s ::: download completed successfully from %{public}@.
%s Attempting to download asset %{public}@, asset state : %{public}ld
%s ERR: Unknown AssetType: %{public}lu
%s Cannot create NSNumber if xpcObject is NULL
%s XPC object type should be BOOL, DOUBLE, INT64, or UINT64
%s Cannot create xpcObject if objcType is NULL
%s Cannot create xpcObject since there is no matching type
%s SmartSiriVolume: deleted %{public}u elements in energy buffer.
%s SmartSiriVolume: number of elements to delete exceeds energy buffer size, ignore.
%s SmartSiriVolume init value for noise estimation %{public}f
%s SmartSiriVolume init value for LKFS estimation %{public}f
%s SmartSiriVolume enable policy changed : %{public}@
%s Already started listen polling, skip
%s listen polling has failed : %{public}@
%s Skip listen polling since audio is streaming / Siri disabled
%s Start audio stream successfully ? %{public}@, error : %{public}@
%s Received didStartRecording when Siri is off
%s Failed in requesting audio stream : %{public}@
%s Failed to stop audio stream : %{public}@
%s No audio stream to stop, we shouldn't hit this
%s SmartSiriVolume received MediaRemote initial state as %{public}@
%s SmartSiriVolume haven't got MediaRemote callback yet, let's assume media is playing.
%s SmartSiriVolume received alarm initial state as %{public}@
%s SmartSiriVolume received timer initial state as %{public}@
%s asset is nil, use default parameters(this should not happen).
%s SmartSiriVolume configure: %{public}@
%s SmartSiriVolume heartbeat = %{public}lld
%s SmartSiriVolume: estimated noise level %{public}f
%s SmartSiriVolume: estimated LKFS %{public}f
%s SmartSiriVolume: pause SSV calculation.
%s SmartSiriVolume: resume SSV calculation.
%s Siri is disabled, we shouldn't receive audio here, heartbeat = %{public}lld
%s stream stopped unexpectedly : %{public}ld
%s SmartSiriVolume received VT event!
%s SmartSiriVolume remove samples from VT utterances by %{public}llu, with startAnalyzeSampleCount = %{public}llu, samplesFed = %{public}llu, triggerStartSampleCount = %{public}llu
%s SmartSiriVolume trying to delete too many VT samples, set triggerDurationToDelete to be limited max: %{public}llu
%s SmartSiriVolume got empty VT event!
%s SmartSiriVolume dismiss alarm firing as VoiceTrigger detected.
%s SmartSiriVolume dismiss timer firing as VoiceTrigger detected.
%s SmartSiriVolume: final estimated TTS volume in dB %{public}f
%s SmartSiriVolume: adjust TTS volume since alarm/timer is firing.
%s SmartSiriVolume: TTS volume in dB from noise %{public}f, from LKFS %{public}f, with user offset %{public}f
%s SmartSiriVolume: soft volume algorithm in use
%s SmartSiriVolume: pause LKFS calculation according to MediaRemote notification.
%s SmartSiriVolume: resume LKFS calculation according to MediaRemote notification.
%s SmartSiriVolume received unknown media playing state, let's assume media is playing.
%s SmartSiriVolume received unknown alarm state, let's reset alarm state.
%s SmartSiriVolume: alarm firing status = %@ according to MobileTimer notification.
%s SmartSiriVolume received unknown timer state, let's reset timer state.
%s SmartSiriVolume: timer firing status = %@ according to MobileTimer notification.
%s Siri enabled : %{public}d
%s SmartSiriVolume: set StartAnalyzeSampleCount = %{public}lld
%s Listening on watch cannot be turned on since speech detection VAD is disabled
%s Listening on watch cannot be turned on since Siri is disabled
%s Listening on watch cannot be turned on since SpringBoard is not started
%s Listening on watch cannot be turned on since device is not unlocked after restart
%s Listening on watch cannot be turned on since Siri assertion is disabled
%s Listening on watch cannot be turned on since audioInjection is enabled
%s Siri language is nil, falling back to %@
%s ::: Error reading file %@, err: %d
%s CSAudioFileReader requires prepare recording settings to feed audio
%s CSAudioFileReader only support LinearPCM to feed
%s Setting ExtAudioFileSetProperty failed : %d
%s Starting audio file feed timer, bufferDuration = %f sampleRate = %f, bytesPerFrame = %d, channelsPerFrame = %d
%s ::: Error reading data from audio file : %d
%s Reach to EOF, chunkSize = %d
%s Stopping audio file feed timer
%s Advert data: %{public}@
%s advert data write failed
%s BeepCanceller asset file loading from : %{public}@
%s Could not read beep file: %@
%s beepVector Size = %{public}lu
%s Cannot initialize beep canceller
%s Beep canceller initialized with maxNumSamples = %{public}d
%s It will beep now
%s Reset beep cancellation
%s Start monitoring : Springboard start
%s Cannot start monitoring Springboard start because it was already started
%s Stop monitoring : Springboard start
%s SpringBoard started = %{public}@
%s Received Activation Event : %{public}@
%s Received Activation Event in CoreSpeechDaemon: %{public}@
%s Returning error for already existing pending activation event : %{public}@
%s No delegate registered : Postpone activation event handling until we have delegate registered
%s Pending Timeout fired for %{public}@ returning error for timeout
%s There is no pending activation event to timeout
%s corespeechd received mediaserverd launched event
%s Cannot handle activation event : %{public}@
%s Found pending activation : %{public}@, handle pending activation immediately
%s AOP First Pass trigger detected
%s activation client not exist
%s CoreSpeechDaemon not enabled, no need to create xpc client
%s Stop monitoring : First unlock
%s xpc object string return nil
%s xpc object should be XPC_TYPE_STRING
%s Saving utterance and meta as %{public}@ training.
%s Failed to write utterance into %{public}@
%s Saving %{public}@ at %{public}@ as %{public}@ training.
%s numSamplesToWrite %{public}lu
%s Failed to get CSAudioFileWriter:
%s Failed to addSamples to CSAudioFileWriter: %{public}@
%s Failed to endAudio on CSAudioFileWriter: %{public}@
%s ERR: called with nil metaPath
%s ERR: called with nil uttPath
%s ERR: called with nil uttMeta
%s Cannot create json file : %{public}@
%s xpc object should be XPC_TYPE_ARRAY
%s xpcObject value is NULL
%s Cannot decode non-plist types of XPC object
%s Cannot encode non-plist types into XPC object : %{public}@
%s invalid packets
%s ::: %{public}s enable: %{public}d reason: %{public}@ timestamp : %{public}lf
%s ::: Ignore request as phraseSpotter already %{public}@
%s ::: Asserting that PhraseSpotter should be %{public}@, timeout: %{public}f
%s ::: Timeout!! PhraseSpotter should be NOT bypassed
%s HandleDisconnect
%s voiceTriggerXPC client not exist
%s CoreSpeechDaemon not enabled, no need to create voiceTriggerXPC
%s reset xpcClient since it disconnected
%s ::: Error creating output file %{public}@, err: %{public}d
%s ::: Error writing to output wave file. : %{public}ld
%s stream %{public}@ initialized
%s stream %{public}@ is deallocated
%s Creating UUID for start audio stream request : %{public}@
%s AudioStream<%{public}@> is streaming : %{public}d
%s AudioStream<%{public}@> has received didStopStreamUnexpectly
%s AudioStream<%{public}@> has received didHardwareConfigurationChange
%s Start monitoring : VoiceTrigger Asset meta update
%s Stop monitoring : VoiceTrigger Asset meta update
%s New VoiceTrigger asset metadata is available
%s Resetting audio preprocessor : %{public}f, containsVoiceTrigger:%{public}d
%s Flushing audio preprocessor
%s Zero Filter Metrics: %{public}@
%s Beep Canceller Metrics : %{public}@
%s Received active route change notification
%s ::: VoiceTrigger has been ACTIVE for an interval of %{public}5.3f seconds.
%s ::: VoiceTrigger has been INACTIVE for an interval of %{public}5.3f seconds.
%s Adding value for scalar key %{public}@ : %{public}lld
%s Pushing value for distribution key %{public}@ : %{public}lf
%s ERR: uttPath is nil -  Bailing out
%s ERR: uttPath is nil - Bailing out
%s ERR: uttMeta is nil - Bailing out
%s ::: Error creating json Metadata: %{public}@
%s Error reading contents of SAT root: %{public}@: err: %{public}@
%s Error determining if file is dir-entry: url=%{public}@, err=%{public}@
%s ERROR creating meta-version json-data from dict: ERR: %{public}@
%s Error reading contents of audioDir: %{public}@, err: %{public}@
%s Missing meta-file: Creating new Meta file for audio file: %{public}@
%s ERR: Unexpected. metaVersionFileData is empty while the file exists at: %{public}@
%s Json-Err reading metaVersionFile: %{public}@: err: %{public}@
%s ERR: uttMetaURL is nil
%s ERR: Unexpected. metaData is nil while the uttMetaPath exists at: %{public}@
%s error reading meta-file: %{public}@
%s ERR: uttMetaURL is nil, defaulting to NO
%s ERR: metaData is nil, defaulting to NO for %{public}@
%s ERR: read metafile %{public}@ failed with %{public}@ - defaulting to NO
%s ERR: missing %{public}@ key in %{public}@ - defaulting to NO
%s ERR: uttMetaURL is nil - Bailing out
%s ERR: metaData is nil for %{public}@ - Bailing out
%s ERR: read metafile %{public}@ failed with %{public}@ - Bailing out
%s ERR: metaDict from file %{public}@ isnt a dictionary - %{public}@
%s ERR: missing %{public}@ key in %{public}@ - Bailing out
%s ERR: %{public}@ is not present
%s Start monitoring : speech endpoint asset meta update
%s Stop monitoring : speech endpoint asset meta update
%s New speech endpoint asset is available
%s ::: CoreSpeech logging initialized (%s)
%s Couldn't create CoreSpeech log directory at path %{public}@ %{public}@
%s event = %{public}p client = %{public}p cannot handle event
%s ignore unknown types of message
%s message = %{public}p, client = %{public}p, cannot handle message
%s MessageType = %{public}lld
%s Received msg of type %{public}lld for utt %{public}@
%s Implicit utterence processing done with error %{public}@
%s Utt: %{public}@ removed from cache with error %{public}@
%s Received error %{public}@ from client %{public}@
%s Client %{public}p connection disconnected, noticing xpc listener
%s ERR: FilePath is nil - Bailing out
%s ERR: Training utterance doesnt exist at %@ - Bailing out
%s ERR: Training utterance is marked as directory at %@ - Bailing out
%s ERR: sharedSiriId is nil - Bailing out
%s Enrolling voice profile of user - %{public}@ 
%s Failed enrolling %{public}@ with error %{public}@
%s Failed to get device hash list %{public}@
%s Processing sync data from device hash: %{public}@
%s Skipping language [%{public}@] since we already have enrollment data for this language
%s Error to copy profile from %{public}@ to %{public}@, error: %{public}@
%s Copied %@ to %@
%s Skipping marking enrollment success for language %{public}@ with error %{public}@
%s language: %{public}@, enableVTAfterSyncLanguage: %{public}@, currSiriLanguage: %{public}@
%s Enabling VoiceTrigger Upon VoiceProfile sync for language: %{public}@ and enrolled language: %{public}@
%s VoiceTrigger does not exist for this platform, not setting VoiceTriggerEnabled
%s Not enabling VoiceTrigger Upon VoiceProfile sync for language: %{public}@
%s Sucessfully migrated language %{public}@
%s Migrated language %{public}@ but failed to mark SAT enrollment
%s Sucessfully marked as migrated for language : %{public}@
%s Failed to mark migrated for language : %{public}@
%s Failed to remove update path [%{public}@] upon migration completion, error: %{public}@
%s Failed to download voice profile with error %{public}@ and category %{public}@ 
%s Successfully enrolled voice profile %{public}@ with %{public}@ profile
%s Voice profile %{public}@ is upto date - category %{public}@profile skipped
%s ERR: Failed in enrolling Voice profile %{public}@ with category %{public}@ profile
%s Failed to enroll siriProfileId %{public}@ with with %{public}@
%s Failed to download voice profiles with error %{public}@
%s Enrolled voice profiles with error %{public}@
%s Language %{public}@ not supported in %{public}@ - Skipping
%s Skipping profile download for %{public}@ - %{public}@ not matching current %{public}@
%s Skipping profile download for %{public}@ - voiceId not supported in %{public}@
%s Failed migrating Voice profile with ID %{public}@ for language %{public}@ with error %{public}@
%s Failed marking Voice profile with ID %{public}@ for language %{public}@ with error %{public}@
%s Sucessfully enrolled %{public}@ for language %{public}@
%s PHS update directory already exists, remove before we move forward
%s Failed to delete PHS update directory
%s Failed to create PHS update directory
%s Upload of Voice Profile for %{public}@ completed with error %{public}@
%s Cannot delete existing SATUpload Diretory : %{public}@
%s Upload trigger of voice profile of user - %{public}@ 
%s Base voice profile is full for %{public}@
%s ERR: Base voice profile utterances not found for %{public}@ - Bailing out
%s ERR: Failed to stage voice profile %{public}@
%s ERR: Cannot copy file %{public}@ to %{public}@ with error %{public}@
%s ERR: Cannot move file %{public}@ to %{public}@ with error %{public}@
%s ERR: No base utterances added - Removing staging dir
%s %{public}d (%{public}d, %{public}d) base utterances added to staged profile at %{public}@
%s Unsupported languagecode %{public}@ in %{public}@ - Skipping
%s Skipping uploading %{public}@ legacy version (%lu) of voice profile, current version %lu
%s Skipping audiocache file %@
%s Cannot copy file %{public}@ to %{public}@ with error %{public}@
%s ERR: Failed to copy from %{public}@ to %{public}@ with error %{public}@
%s Cannot create %{public}@ with error %{public}@ - Skipping language
%s Cannot copy voice profile from %{public}@ to %{public}@ with error %{public}@
%s Triggering upload of voice profile %{public}@
%s Upload of voice profile at %{public}@ with category %{public}@ completed successfully
%s Triggering upload of explicit voice profile %{public}@
%s Upload of explicit voice profile at %{public}@ completed successfully
%s Setting VoiceProfile Training Sync for language: %{public}@
%s ERR: %{public}s: Bailing out as language is nil!
%s VoiceProfile training sync language: %{public}@, VoiceProfile language: %{public}@
%s ERR: metaBlob is nil. Returning false, language: %{public}@
%s ERR: Unknown device. Returning false, language: %{public}@
%s ERR: Unknown device-category for device: %{public}@, languageCode: %{public}@
%s ERR: Failed to deserialize metaBlob with error %{public}@
%s Looking VoiceProfile for CurrDevice: %{public}@{%{public}@} in metablob %{public}@
%s currDevice=[%{public}@ : {%{public}@}] ; syncedDevice=[%{public}@ : {%{public}@}]
%s VoiceProfile MATCH
%s VoiceProfile MIS-MATCH
%s CurrDevice: [%{public}@ : {%{public}@}] DOES NOT have VoiceProfile synced in iCloud
%s Querying VoiceProfile upload state on %{public}@
%s ERR: Fetching cached devices resulted in error %{public}@
%s Looking VoiceProfile for CurrDevice: %{public}@{%{public}@} in devices %{public}@
%s VoiceProfile available locally for %{public}@, not uploaded yet
%s Searching for synced-VoiceProfile for CurrDevice: %{public}@{%{public}@}
%s Will Enable VoiceTrigger after VoiceProfile sync for language: %{public}@
languageCode: %{public}@
%s Devices with VoiceProfile in iCloud for language: %{public}@:%{public}@
%s Timedout waiting for AFSettingsConnection:getDevicesWithAvailablePHSAssetsForLanguage: %{public}ld, waitedFor: %{public}d, Returning nil
%s timeToRet(AFSettingsConnection:getDevicesWithAvailablePHSAssetsForLanguage:): %{public}fms
%s ERR: Failed in marking Enrollment as Successful
%s Coudn't mark SAT enrollment %{public}@ at path %{public}@
%s Marked SAT enrollment %{public}@ at path %{public}@
%s We can't mark SAT %{public}@ when there is no audio directory
%s ERR: SAT did not trigger!!! - Bailing out
%s Rejecting barge-in utterance from adding to voice profile
%s CSSpIdImplicitTraining not available
%s Unable to copy implicit utterence to %{public}@ with error %{public}@
%s Received xpc completion with result %d
%s AssetManager cannot be turned on since isFirstUnlocked is NO
%s AssetManager cannot be turned on since network is not available
%s CSXPCListener start listening
%s PowerLog : Trying to log falseWakeUp : %{public}d
%s ::: incrementing false wakeup to %{public}llu
%s ::: accumulated false wakeup count is %{public}llu so far, not reporting yet because it has been only %{public}.2f seconds since last report
%s VoiceTrigger is already %{public}@, received duplicated notification!
%s Start monitring : VoiceTrigger setting switch
%s Cannot start monitoring VoiceTrigger setting switch because it was already started
%s Stop monitring : VoiceTrigger setting switch
%s VoiceTrigger enabled = %{public}@
%s Received AOP Listening state change notification : %{public}d
%s Unexpected XPC audioTimeConvert providing request : %{public}lld
%s From sampleCount %{public}llu fetched hostTime = %{public}llu
%s From hostTime %{public}llu fetched sampleCount = %{public}llu
%s Non internal build, Ignoring command %@ from peerId %@ - Bailing out!
%s Received Malformed command %@ from peerId %@ - Bailing out!
%s Command %@ received from peerId %@
%s Unknown Command: (%@) - Ignoring
%s Triggering sync with peer - %@
%s Triggering nearmiss sync with peer - %@
%s Triggering voice profile sync with peer - %@
%s CSP2P_RemoteHeySiriCmd: ENABLE HeySiri: Not Implemented Yet: 
%s CSP2P_RemoteHeySiriCmd: DISABLE HeySiri: Not Implemented Yet: 
%s Cannot read contents of directory: %@, err: %@
%s Could not determine if [%@] is a directory or not. Err=%@
%s Found dir: %@. Skipping compression
%s _compressFilesInDirectory: Malloc failed for file %@ (%lu) - Discarding
%s _compressFilesInDirectory: Compression failed for file %@ (%lu) - Sending Uncompressed
%s _compressFilesInDirectory: File %@ compressed from %ld to %ld 
%s CSP2P_VoiceProfileParallelRecordingsFetchCmd: Cannot send VoiceProfile when _adCompanionServiceProvider is nil - returning
%s CSP2P_VoiceProfileParallelRecordingsFetchCmd: Message incomplete - Bailing out %@
%s CSP2P_VoiceProfileParallelRecordingsFetchCmd: File %@ isCompressed: %d, compressedSize: %ld, err: %@ 
%s CSP2P_VoiceProfileParallelRecordingsFetchCmd: Failed VoiceProfileTransfer: %@, error %@
%s Failed to remove the file %@
%s Failed in compressing %{public}@ with errror %{public}@ - Bailing out
%s Transfering NearMiss file %@ withCompression %{public}@ and size %ld in batch %{public}@
%s Failed moving file from %@ to %@ with error %@
%s Transfering VoiceId file %@ withCompression %{public}@ and size %ld in batch %{public}@
%s %@ is nil - Bailing out
%s Failed in transporting Voice file %@ with reponse: %@, error %@
%s Failed to remove the file %@ with error %@
%s Failed to move the file %@ to %@ with error %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: received malformed command - %@ %@ %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: unknown IDS peer with passed Identifier %@, %@ %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: received malformed command - %@
%s CSP2P_VoiceProfileParallelRecordingTransferCmd: Creating directory failed with error %@
%s Ignoring sync of existing file %@ from %@
%s Syncing parallel recorded audio file - %@ from %@
%s Uncompressed file %@ sent by peer %@
%s ERR: Failed to allocate buffer of size %zu, bailing out
%s Writing to file(%@) failed!. Err=%@
%s received malformed command - %@ %@ %@
%s unknown IDS peer with passed Identifier %@, %@ %@
%s received malformed command - %@
%s Syncing audio file - %@ from %@
%s received Music account credentials before voice profile landed for %@
%s CSP2P_VoiceProfileTransferCmd: received malformed command - %@ %@ %@
%s CSP2P_VoiceProfileTransferCmd: received malformed command: CSP2P_VoiceProfileData_Key: %@CSP2P_VoiceProfileFileName_Key: %@CSP2P_VoiceProfileSpeakerName_Key: %@CSP2P_VoiceProfileLocale_Key: %@CSP2P_VoiceProfileDataType_Key: %@CSP2P_VoiceProfileTotalSegments_Key: %@CSP2P_VoiceProfileSegment_Key: %@
%s CSP2P_VoiceProfileTransferCmd: received command when speakerId is disabled - Bailing out
%s CSP2P_VoiceProfileTransferCmd: SpId Assets are not available - Bailing out
%s CSP2P_VoiceProfileTransferCmd: Received VoiceProfile Segment (%@/%@) from peerId %@
%s CSP2P_VoiceProfileTransferCmd: Failed to delete the directory %@ with error %@
%s CSP2P_VoiceProfileTransferCmd: received VoiceProfileSegment %@, expected %d
%s CSP2P_VoiceProfileTransferCmd: Creating directory failed with error %@
%s CSP2P_VoiceProfileTransferCmd: Writing to file failed!!!
%s Received request to delete VoiceProfile %@ from peerId %@
%s Cannot send data across when _adCompanionServiceProvider is nil - returning
%s ERR: Rejecting command %@ sent to non Horseman device
%s ERR: received malformed command - %@ %@
%s ERR: unknown IDS peer with passed Identifier %@, %@ %@
%s ERR: received malformed command with locale nil - %@
%s ERR: received malformed command with profileId nil - %@
%s ERR: Failed to find voice profile with identifier - %@
%s CSP2P_VoiceProfileFetchCmd: Transferring voice profile %{public}@
%s CSP2P_VoiceProfileFetchCmd: File %@ isCompressed: %d, compressedSize: %ld, err: %@
%s CSP2P_VoiceProfileReverseTransferCmd: Failed VoiceProfileTransfer: %@, error %@
%s CSP2P_VoiceProfileReverseTransferCmd: Successfully transferred %@
%s CSP2P_VoiceProfileReverseTransferCmd: Failed transferring voice profile %@ with error %@
%s CSP2P_VoiceProfileReverseTransferCmd: Successfully transferred voice profile %@
%s ERR: Rejecting command %@ sent to Horseman device
%s ERR: received malformed command with relative path nil - %@
%s Failed in sending trigger for Voice profile update to peer %@ with error %@
%s init-_currentLanguageCode: %{public}@
%s Asset Manager Policy has been %{public}@
%s Asset Manager Policy has been enabled, start fetching meta data now
%s set option : allowVoiceTriggerAssetsDownload ? %{public}@;               allowEndpointAssetDownload ? %{public}@;               allowLanguageDetectorAssetDownload ? %{public}@
%s Need to fetch remote meta now, since we have new asset need to be downloaded
%s Does not need to fetch remote meta now
%s Cannot fetch VoiceTrigger asset meta data
%s Undefined assetType : %{public}u
%s _currentLanguageCode changed: %{public}@
%s Trying to start download meta data
%s Periodical downloading is already scheduled, ignore request.
%s No periodical downloading is scheduled, ignore request.
%s zeroFilterWinSz: %{public}tu, numHostTicksPerAudioSample: %{public}f
%s _vtEndInSampleCount:%{public}ld, _numSamplesProcessed: %{public}ld, voiceTriggerInfo: %{public}@
%s Creating OS Transaction for %{public}@
%s Release OS Transaction for %{public}@
%s Metric Providing Request Message has arrived : %{public}lld
%s Unexpected XPC Metric providing request : %{public}lld
%s audioMetric = %{public}@
%s audioMetricProvider not existing
%s Start monitoring: wake Gesture
%s ::: Received Gesture: %@
%s Wake Gesture: currDate=%@, wakeGestureTimeStamp=%@, 
currMachAbsTime=%llu, timeDelta=%f, 
timeDeltaInTicks=%llu, possWakeGesture=%llu
%s Message type = %{public}lld
%s Cannot handle wrong message type
%s Cannot handle activateEventMessage since event is nil
%s Start monitoring : Siri language code
%s Stop monitoring : Siri language code
%s Siri language changed to : %{public}@
%s Ignore notifying change of language code, since it is nil
%s SpkrId:: Unknown CSSpIdType string: %@
%s SpkrId:: ERR: spIdRootDirForLocale called with locale=nil
%s SpkrId:: Incorrect usage of API - Bailing out
%s SpkrId:: path is nil - Bailing out
%s SpkrId:: Direntry with same name exists, this will be removed: %@
%s SpkrId:: Creating Directory : %@
%s SpkrId:: Creating Directory failed : %@
%s SpkrId:: Exceeded privacy limit for grading utterances : %ld (%d)
%s ERR: reading contents of gradingDir: %{public}@ with error %{public}@
%s Deleting orphaned grading file %{public}@
%s SpkrId:: VoiceId not supported in language %{public}@
%s Unable to read data from file: %@
%s SpkrId:: Could not read existing %@ file: err: %@
%s SpkrId:: ERR: Could not read existing %@ file: err: %@
%s SpkrId:: ERR: %@ is a directory
%s SpkrId:: ERR: Could not find version file - %@
%s ERR: Migration API called on HomePod - Bailing out
%s ERR: Failed to move %{public}@ to %{public}@ with error %{public}@
%s ERR: Failed to delete %{public}@ with error %{public}@
%s Successfully moved %{public}@ to %{public}@
%s Skipping moving of file %{public}@
%s Coudn't fetch the list of files at path: %{public}@ %{public}@
%s Migrating Voice Profile for %{public}@ from %lu to %lu not supported
%s Could not read existing %@ file: err: %@
%s ERR: error creating updatedVoiceProfileJsonData from: %@, err: %@
%s ERR: error removing voice profile version file at: %@, err: %@
%s ERR: Error writing voice profile version file at: %@, err:%@
%s Unknown Device category for deviceProduceType: %@
%s ERR: Unknown device. returning false: %{public}@
%s ERR: satLanguagePath is nil. returning false
%s Voice Profile Mismatch - CurrentDeviceCategory %@ VoiceProfileCategory %@
%s Malformed audio-dir URL for string <%{public}@>:url
%s ERR: reading contents of audioDir: %{public}@
%s No jsonFiles found in %{public}@: jsonFiles.count=%{public}lu
%s Unexpected: empty JSON data for file: %{public}@
%s Error reading metaDict at path: %{public}@
%s metaProductType: %{public}@
%s vtprofile: currDevice=[%{public}@:%{public}@] ; vpDirDevice=[%{public}@:%{public}@]
%s Could not find productType in VT-Meta file, trying next one
%s No compatible VT profile found for CurrDevice: %{public}@
%s ERR: fetching contents of %{public}@ failed with error %{public}@
%s ERR: Directory is nil - Bailing out
%s ERR: %{public}@ doesnt exist - Bailing out
%s Dump content of %{public}@ - %{public}@
%s %{public}@ is already in marked list - Skipping update
%s ERR: marked profiles to upload is nil!
%s ERR: %{public}@ is not in marked list - %{public}@
%s Error reading directory at %@: err: %@
%s %@ is empty
%s Incorrect logitCeil %f and logitFloor %f - defaulting them to %f and %f
%s Capping the score %f to 1.0
%s Flooring the score %f to 0.0
%s SpeakerIDScores: %@ --> (%@, %@, %@)
%s Voice Profile for profileID %@ not found
%s ERR: SharedSiriID is not available, defaulting to profileID %@
%s SiriProfileId is not available, defaulting to profileID %{public}@
%s satAudioDirectory is nil - Bailing out
%s metaVersionFile %{public}@ doesnt exist - Skipping
%s ERR: date is nil - Bailing out
%s Filtered %@ with enrolled date %@
%s ERR: trying to remove %@ directory, bailing out
%s ERR: satTDModelDirector is nil for LanguageCode %@
%s Couldn't delete invalidated speaker model at path %{public}@ %{public}@
%s Start monitoring : VoiceTrigger Asset Download
%s Stop monitoring : VoiceTrigger Asset Download
%s New VoiceTrigger is now installed
%s CSVoiceIdXPCListener start listening
%s speechController = %{public}p
%s xpcListener = %{public}p
%s volumeController = %{public}p
%s context = %{public}@
%s Failed to create audio recorder : %{public}@
%s For Context : %{public}@, audioStreamId(%llu) has allocated
%s Failed to get audio stream handle ID : %{publid}@
%s has match with audio stream handle id : %llu
%s does not match with audio stream handle id(%llu), creating new audio provider
%s have matched audioProvider with stream handle id : %llu
%s don't have matched audioProvider with stream handle id : %llu, need to create one later
%s audioProvider[%{public}@] invalidated with streamHandleId : %{public}llu
%s No matched audioProvider found for streamHandleId : %{public}llu
%s Received VoiceTrigger cached asset change notification, let's reinitialize VoiceTrigger
%s Trying to start clear logging files
%s Clear logging file timer is already started, ignore startClearLoggingFilesTimer request.
%s cannot handle nil event 
%s ignore unknown types of message: %{public}@
%s cannot handle nil error
%s In %@: Continuous digital zero detected, lasting %{public}u samples per channel
%s In %@: Continuous digital zero in this audio chunk detected, lasting %{public}u samples per channel
%s Fallback asset resource path : %{public}@
%s Cannot find corespeech asset from resourcePath : %{public}@
%s Configuration file is not exists : %{public}@
%s Cannot read configuration file : %{public}@
%s Cannot decode configuration json file : %{public}@
%s Configuration json file is not expected format
%s Cannot access to %{public}@ %{public}@ using default value
%s Cannot send nil message
%s Unable to send message to client since there is no connection
%s Cannot handle audio providing message
%s Audio Providing Request Message has arrived : %{public}lld
%s Unable to handle audio providing switch message : context is nil
%s Handing PingPong message
%s CSHostDaemon didLaunch
%s Got xpc event for notification %s
%s numChannels: %{public}lu, recordingDuration: %{public}f, sampleRate: %{public}f
%s Cannot copy samples since this is empty
%s Could NOT copyFrom: %{public}lu to: %{public}lu, retSampleCount: %{public}lu
%s copyBuffer: oldestSample: %{public}lu latestSample: %{public}lu, numSamplesCopied: %{public}lu
%s CSAudioCircularBuffer.reset
%s saveRecordingBufferFrom: %{public}lu to: %{public}lu toURL: %{public}@
%s csrb: %{public}@
%s Invalid request: (%{public}lu, %{public}lu): noting to write to file
%s Invalid request: reqStartSample=%{public}lu, reqEndSample=%{public}lu, oldestSampleInBuffer: %{public}lu, latestSampleInBuffer=%{public}lu
%s Error reading audio file: %{public}d, skipping...
%s Notifying CoreSpeechDaemon launched
%s Start monitoring : corespeechd state
%s Cannot start monitoring corespeechd state because it was already started
%s Stop monitoring : corespeechd state
%s CoreSpeechDaemon state changed to %{public}u
%s Delta is larger than anchorHostTime: anchorSampleCount = %{public}lld, sampleTime = %{public}lld, anchorHostTime = %{public}lld
%s Delta is larger than anchorSampleCount
%s Not supported on this platform
%s Start monitoring: siri assertion enable/disable
%s Stop monitoring: siri assertion enable/disable
%s did receive enable assertion
%s did receive disable assertion
%s CSAudioSessionProvidingProxy has received xpc disconnection _streamClientType : %{public}d
%s Trying to release audio stream on CSAudioSessionProvidingProxy
%s Session Providing Request Message has arrived : %{public}lld
%s Unexpected XPC session providing request : %{public}lld
%s Failed to prewarm audio session, error : %{public}@
%s Session activate reason : %{public}u
%s Failed to activate audio session, error : %{public}@
%s Failed to deactivate audio session, error : %{public}@
%s Session request getting duck others option
%s Trying to get duck others option when audioSessionProvider is nil
%s Session set duck others option : %{public}d
%s Trying to set duck others option when audioSessionProvider is nil
%s Session %{public}@ mini ducking
%s Trying to enalbe mini ducking when audioSessionProvider is nil
%s Fetching CommandControl Listening State: %d
%s Alert Providing Request Message has arrived : %{public}lld
%s Unexpected XPC alert providing request : %{public}lld
%s Alert sound url : %{public}@, alertType = %{public}d
%s Set alert sound successful ? %{public}@
%s audioAlertProvider not existing
%s AlertType = %{public}d
%s Play alert sound successful ? %{public}@
%s PlayRecordStartingAlertAndResetEndpointer successful ? %{public}@
%s alertStartTime = %{public}llu
%s Invalid alert behavior
%s Alert behavior : %{public}@
%s value = %{public}d
%s Couldn't create speech log directory at path %{public}@ %{public}@
%s Couldn't create SoS log directory at path %{public}@ %{public}@
%s enableAudioInection: is only available on internal builds
%s setAudioInjectionFilePath: is only available on internal builds
%s kCSAudioInjectionFilePathKey is not array type
%s kCSAudioInjectionFilePathKey array size = %d
%s kCSAudioInjectionFilePathKey doesn't have NSString as an array entry
%s Device support barge-in? %{public}@
%s Shouldn't be called on non-iOS platform
%s Request to bypass PhraseSpotter : %{public}d with timeout %{public}lf seconds
%s Received Siri Session did cancelled
%s Connection %{public}p rejected due to missing entitlement
%s %@ task delivered.
%s %@ completed with response %@ and error %@.
%s Start monitoring : Software update checking state
%s Cannot start monitoring software update checking state because it was already started
%s Stop monitoring : Software update checking state
%s Software update checking running : %{public}@
%s Get initial state from MediaRemote: media is on playing state %{public}ld.
%s Start monitoring MediaRemote: media playback
%s Stop monitoring MediaRemote: media playback
%s MediaRemote reported the now playing app playback state changed to %s (state %d)
%s CommandControl Streaming = %{public}d
%s Turn on AP mode since command control is streaming
%s VoiceTrigger AOP mode cannot be turned on since builtIn speaker is active
%s VoiceTrigger AOP mode cannot be turned on since Siri client is recording
%s AOP Listening is disabled
%s Speech Detection VAD is not available, we will still running in AOP mode
%s network state notify key : %s
%s Start monitoring : network availability
%s Stop monitoring : network availability
%s Network availability changed
%s xpc object should be XPC_TYPE_DICTIONARY
%s xpcObject key or value is NULL
%s Cannot encode key into xpcobject since the key is not NSString class type
%s disconnect VoiceTriggerXPCClient
%s Meter Providing Request Message has arrived : %{public}lld
%s Unexpected XPC Meter providing request : %{public}lld
%s setMeteringEnabled : %{public}d
%s audioMeterProvider not existing
%s updateMeters
%s power = %{public}f with powerType %{public}u
pbhw
pbtb
pbiu
otua
ciov
bhev
eltb
siar
tdtb
cvdh
cvpc
pbiu
tsop
rtsh
tvps
mcpl
supo
Amcplsupoxeps
ffffff
BNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
@mcpl
?fff?
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.airplay.carplayavvc</key>
<true/>
<key>com.apple.assistant.analytics</key>
<true/>
<key>com.apple.assistant.client</key>
<true/>
<key>com.apple.assistant.settings</key>
<true/>
<key>com.apple.avfoundation.allows-access-to-device-list</key>
<true/>
<key>com.apple.coreaudio.CanRecordPastData</key>
<true/>
<key>com.apple.coreaudio.CanRecordWithoutSessionActivation</key>
<true/>
<key>com.apple.coreaudio.i-am-siri</key>
<true/>
<key>com.apple.coreaudio.register-internal-aus</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.hid.system.user-access-fast-path</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.borealis</key>
<true/>
<key>com.apple.private.DistributedEvaluation.RecordAccess-com.apple.fides.phs</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.VoiceTriggerAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsWatch</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMarsh</string>
<string>com.apple.MobileAsset.SpeechEndpointAssets</string>
<string>com.apple.MobileAsset.RaiseToSpeakAssets</string>
<string>com.apple.MobileAsset.VoiceTriggerAssetsMac</string>
</array>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.corespeech.xpc.remote</key>
<true/>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.healthkit.medicaliddata</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.homekit.siri-audio-connection</key>
<true/>
<key>com.apple.private.iokit.darkwake-control</key>
<true/>
<key>com.apple.private.mobiletimerd</key>
<true/>
<key>com.apple.private.siri.activation</key>
<true/>
<key>com.apple.private.siri.invoke</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMicrophone</string>
</array>
<key>com.apple.proactive.eventtracker</key>
<true/>
<key>com.apple.rootless.storage.CoreSpeech</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/private/var/mobile/Library/Trial/Treatments/200/</string>
<string>/private/var/mobile/Library/Trial/NamespaceDescriptors/</string>
</array>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.coreduetd.context</string>
<string>com.apple.MobileTimer.timerserver</string>
<string>com.apple.MobileTimer.alarmserver</string>
</array>
<key>com.apple.security.exception.shared-preference.read-only</key>
<array>
<string>com.apple.raisetospeak</string>
<string>com.apple.niservices</string>
</array>
<key>com.apple.siri.activation</key>
<true/>
<key>com.apple.siri.external_request</key>
<true/>
<key>com.apple.voicetrigger.voicetriggerservice</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.corespeech</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
