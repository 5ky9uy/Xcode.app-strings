#TAFilterKnownDevices not surfacing notification for %{private}@ due to %{public}s and device state %{public}@
#TAFilterKnownDevices removing duplicate suspicious device for %{private}@
#TAFilterKnownDevices dropping %{private}@ intervisit metrics since it is from owner, shared, or ignored device
#TATrackingAvoidanceService dropping %{private}@ intervisit metrics since it is from owner, shared, or ignored device
%@ instance failed to create description:%@
#TAVehicleCategoryLogic Time Duration of Interest: Start Date - %{private}@ End Date - %{private}@
#TAFilterGeneral Current Clock Time: %{private}@
#TAFilterGeneral Time Duration of Interest: Start Date - %{private}@ End Date - %{private}@
#TAFilterGeneral Location Tag Count for %{private}@: %{private}ld
address does not exist in observation interval dictionary
#TAFilterGeneral private vehicle reason for %{private}@ : %{private}@
{"msg%{public}.0s":"#TAFilterGeneral decisions", "address":"%{private}@", "satisfy":%{public}hhd, "satisfy-length":%{public}hhd, "satisfy-duration":%{public}hhd, "satisfy-vehicular-requirement":%{public}hhd, "satisfy-private-automotive":%{public}hhd, "satisfy-pedestrian-requirement":%{public}hhd, "satisfy-pedestrian-speed-check":%{public}hhd, "satisfy-people-density":%{public}hhd, "satisfy-cycling-requirement":%{public}hhd}
#TAFilterGeneral adding %{private}@ because requirements satisfied
#TAFilterGeneral identified suspicious device %{private}@; issue people density scans to gather more information
#TAFilterGeneral filterSuspiciousDeviceWithStore called with nil requests parameter
#TAFilterGeneral not adding %{private}@ because requirements not satisfied
#TAFilterGeneral got visit departure date after clock
#TAFilterGeneral no corresponding backward entry or advertisement entry
#TAFilterGeneral forward backward location count or advertisement count not equal!
#TAFilterGeneral no location list for address %@
#TAFilterGeneral no first or last advertisement
#TAFilterGeneral attempted to create empty summary for address %@
#TAFilterGeneral error calculating segment speed min=%f avg=%f max=%f
#TAFilterGeneral segment min speed not valid, skipping...
#TAFilterSingleVisit enabled LOI types: %{private}@
#TAFilterSingleVisit observed %{public}lu devices in current visit
#TAFilterSingleVisit observed %{public}lu devices before the current visit
#TAFilterSingleVisit identified %{public}lu suspicious candidates ...
#TAFilterSingleVisit some advertisements not present for %{private}@
#TAFilterSingleVisit not adding %{private}@ because satisfy-length=%{public}d satisfy-duration=%{public}d satisfy-min-observation-duration=%{public}d
#TAFilterSingleVisit LOI type %{private}@ is not in the enabled list %{private}@
{"msg%{public}.0s":"#TAFilterVisits using special parameters for entry display-on budget for legacy hardware"}
{"msg%{public}.0s":"#TAFilterVisits using special parameters for exit display-on budget for legacy hardware"}
{"msg%{public}.0s":"#TAFilterVisit two sensitive visits too close, abort detection"}
The lastest location infers that we may be leaving the current visit; suppress visit-based detection logic
Current and past visits are not far enough to be considered for UT
#TAFilterVisits visit-to-visit speed exceeds threshold, not attempting to perform visit detection
#TAFilterVisits past visit window of consideration %{private}@/%{private}@ and current window of consideration %{private}@/%{private}@
#TAFilterVisits some advertisements not present for %{private}@
#TAFilterVisits considering %{private}@ based on satisfyFreshObservation:%{private}d satisfyPastVisitObservationDuration:%{private}d satisfyCurrentVisitObservationDuration:%{private}d
#TAFilterVisits LOI type is %{private}@ and sensitive LOI list contains %{private}@
{"msg%{public}.0s":"#TAFilterVisits shouldDetectWithPastLOIType:currentLOIType:distance:settings:", "pastIsSensitiveVisit":%{private}hhd, "currentIsSensitiveVisit":%{private}hhd, "pastAndCurrentTooClose":%{private}hhd, "sensitiveVisitTooClose":%{private}hhd}
#TAMetricsInterVisit current and total address in disagreement
#TATrackingAvoidanceService settings %{private}@
#TATrackingAvoidanceService received nil device record for bootstrap
#TATrackingAvoidanceService received nil visit state for bootstrap
#TATrackingAvoidanceService found:%{private}@
#TATrackingAvoidanceService detection location associated with %{private}@:%{private}@
#TATrackingAvoidanceService requesting:%{private}@
#TATrackingAvoidanceService update:%{private}@
#TATrackingAvoidanceService update location associated with %{private}@:%{private}@
#TATrackingAvoidanceService received state change notification
#TATrackingAvoidanceService reporting the previous visit-based metrics
#TATrackingAvoidanceService staging previous inter-visit metrics
#TATrackingAvoidanceService reporting the previous intervisit-based metrics
#TATrackingAvoidanceService unrecognized metrics hint %lu
#TATrackingAvoidanceService received a detection that is not to be surfaced %@
{"msg%{public}.0s":"#TATrackingAvoidanceService location too stale to update", "advertisement":"%{private}@", "latestLocation":"%{private}@"}
#TATrackingAvoidanceService running TAFilterVisits detector
#TATrackingAvoidanceService running TAFilterSingleVisit detector
#TATrackingAvoidanceService running TAFilterGeneral detector
#TATrackingAvoidanceService not running detection in the unknown visit state
{"msg%{public}.0s":"#TATrackingAvoidanceService reporting suspicious devices", "FinishedStagingCount":%{private}lu, "ImmediateCount":%{private}lu, "FinalCount":%{private}lu}
#TATrackingAvoidanceService nil event given, not ingesting
%{private}@
#TATrackingAvoidanceService significant time elapsed, performing classification now
{"msg%{public}.0s":"#TAAnalyticsManager nil device or service in conversion"}
{"msg%{public}.0s":"#TAAnalyticsManager Submitting analytics event", "eventName":"%{private}@", "content":"%{private}@"}
{"msg%{public}.0s":"#TAAnalyticsManager Analytics submission not enabled", "eventName":"%{private}@", "content":"%{private}@"}
#TASingleDeviceRecord staging detection:%{private}@
#TASingleDeviceRecord removing staged detection:%{private}@
#TASingleDeviceRecord nil detection in _shouldPushStagedDetection
#TASingleDeviceRecord purgeStagedDetetionsWithClock hasStagedDevices:%{public}d hasStagedDetectionReadyToPush:%{public}d shouldKeepStagedDetectionsAlive:%{public}d
{"msg%{public}.0s":"#TASingleDeviceRecord retaining latest advertisement as it is more recent", "address":"%{private}s"}
{"msg%{public}.0s":"#TASingleDeviceRecord other record has no latest advertisement", "address":"%{private}s"}
{"msg%{public}.0s":"#TAPersistenceManager encountered error in creating directory", "error":"%{private}s"}
{"msg%{public}.0s":"#TAPersistenceManager file does not exist"}
{"msg%{public}.0s":"#TAPersistenceManager encountered error in loading file", "url":"%{private}s", "error":"%{private}s"}
{"msg%{public}.0s":"#TAPersistenceManager encountered error in unarchiving store", "url":"%{private}s", "error":"%{private}s"}
{"msg%{public}.0s":"#TAPersistenceManager no store to save"}
{"msg%{public}.0s":"#TAPersistenceManager saving to location", "path":"%{private}s"}
{"msg%{public}.0s":"#TAPersistenceManager error archiving store", "error":"%{private}s"}
{"msg%{public}.0s":"#TAPersistenceManager error reseting directory", "error":"%{private}s"}
{"msg%{public}.0s":"#ut received service enable notification", "serviceEnabled":%{public}hhd}
{"msg%{public}.0s":"#ut received thermal state notification", "isHighThermalState":%{public}hhd}
{"msg%{public}.0s":"#ut received airplane mode notification", "airplaneMode":%{public}hhd}
{"msg%{public}.0s":"#ut received battery saver mode notification", "batterySaverMode":%{public}hhd}
{"msg%{public}.0s":"#ut received location services notification", "locationServicesEnabled":%{public}hhd}
{"msg%{public}.0s":"#ut received location simulation notification", "locationSimulationInProgress":%{public}hhd}
{"msg%{public}.0s":"#ut received allow simulated events notification", "allowSimulatedEvents":%{public}hhd}
{"msg%{public}.0s":"#ut received device unlocked since boot notification", "deviceUnlockedSinceBoot":%{public}hhd}
{"msg%{public}.0s":"#ut received location and privacy reset notification. Resetting persistence store and restarting service."}
{"msg%{public}.0s":"#ut received country code notification", "hasKoreaCountryCode":%{public}hhd}
{"msg%{public}.0s":"#ut received user location inside Korea notification", "userLocationInsideKorea":%{public}hhd}
#ut new settings %{private}@, old settings %{private}@
#ut settings changed or weren't set; restart service required
#ut settings have disabled TA
#ut _handleStateUpdateIfNecessary called with %{public}@ state
#ut restarting TA
{"msg%{public}.0s":"#ut dump state context", "CurrentState":"%{public}s", "NewState":"%{public}s", "serviceEnabled":%{public}hhd, "highThermalState":%{public}hhd, "airplaneMode":%{public}hhd, "batterySaverMode":%{public}hhd, "locationServicesEnabled":%{public}hhd, "restartRequired":%{public}hhd, "locationSimulation":%{public}hhd, "allowSimulation":%{public}hhd, "deviceUnlockedSinceBoot":%{public}hhd, "hasKoreaCountryCode":%{public}hhd, "userLocationInsideKorea":%{public}hhd}
#ut no state update necessary
#ut no state update necessary at %@ state
{"msg%{public}.0s":"#ut session change", "oldSessionID":"%{public}s", "newSessionID":"%{public}s"}
{"msg%{public}.0s":"#manager:visit no last visit to bootstrap onto"}
{"msg%{public}.0s":"#manager:visit got last visit", "visits":"%{private}@"}
{"msg%{public}.0s":"#manager:visit not ingesting TAEvent as TA service is down"}
{"msg%{public}.0s":"#manager:persistence failed to load persistence store, aborting bootstrap"}
{"msg%{public}.0s":"#manager:persistence no device record to bootstrap onto"}
{"msg%{public}.0s":"#manager:persistence bootstrapping onto loaded store"}
{"msg%{public}.0s":"#manager:persistence scheduling save", "interval":"%{public}f", "currentSession":"%{public}s"}
{"msg%{public}.0s":"#manager:persistence begin scheduled save", "interval":"%{public}f"}
{"msg%{public}.0s":"#manager:persistence canceling scheduled save due to session change", "currentSession":"%{public}s", "sessionAtTimeOfSchedule":"%{public}s"}
{"msg%{public}.0s":"#manager:persistence scheduled save running but not in running state, discontinuing scheduled saves"}
{"msg%{public}.0s":"#manager:persistence save and schedule next save", "secondsToNextSave":"%{public}f"}
{"msg%{public}.0s":"#manager:persistence push out save schedule", "secondsToNextSave":"%{public}f"}
#ut not ingesting TAEvent as TA service is down
{"msg%{public}.0s":"#manager:persistence didFindSuspiciousDevices called, saving state"}
{"msg%{public}.0s":"#manager:persistence didStageSuspiciousDevices called, saving state"}
{"msg%{public}.0s":"#manager:persistence visitStateChangedForTrackingAvoidanceService called, saving state"}
#TAVisitState Considering to add %{private}s for snapshot
Updating %{private}s to snapshot
#TAVisitState not adding %{public}s due to %{public}s:%{private}s
#TAVisitState Adding %{private}s to snapshot
#TAVisitState changing state from %@ to %@
#TAVisitState update did not change state on update
#TAVisitState inside visit state without snapshot
#TAVisitState inside visit state with a closed snapshot
#TAVisitState received out of order departure and arrival date
#TAVisitState not considering %{public}s due to %{public}s:%{private}s
#TAVisitState got a departure visit while outside a visit
#TAVisitState unexpected state
#TAVisitState maintaining current state
#TAVisitState unrecognizable transition decision
#TAVisitState creating new snapshot
#TAVisitState attempted to close visit snapshot without valid visit departure date
#TAVisitState attempted to close visit snapshot that doesnt exist!
#TAVisitState attempted to close visit snapshot that is already closed
#TAVisitState failed to set departure visit
#TAVisitState closing snapshot. Closed snapshot has %{public}lu objects.
#TAVisitState keys in snapshot:%{private}@
#TAVisitState issueInterVisitScanRequestIfNecessaryWithClosedSnapshot called with an open snapshot
#TAVisitState issueInterVisitScanRequestIfNecessaryWithClosedSnapshot called with a date in the future
#TAVisitState Attempted to update inter-visit snapshot but there is no viable one. Something is wrong.
#TAVisitState Attempted to update inter-visit backup snapshot but there is no viable one.
#TAVisitState attempting to evaluate visit snapshot quality without visit snapshot
#TAVisitState attempting to evaluate visit snapshot quality with an open visit snapshot
#TAVisitState Visit snapshot quality is bad. Performing operations to remove bad visit: %{private}@
#TAVisitState Visit snapshot quality is good.
#TAVisitState snapshot evaluation error.
#TAVisitState inter-visit snapshot updated; tracking %{private}lu devices
#TAVisitState seeing class type %@ in a predicate supposed to be used for TAVisitSnapshot object only
#TAVisitState seeing class type %@ in a predicate supposed to be used for TAInterVisitMetricsSnapshot object only
{"msg%{public}.0s":"#TAVisitState merging with other TAVisitState", "numVisitSnapshotsAttemptedToAdd":%{private}llu, "numInterVisitSnapshotsAttemptedToAdded":%{private}llu, "self.numVisitSnapshot":%{private}lu, "self.numInterVisitSnapshot":%{private}lu, "self.importantLois":"%{private}@"}
{"msg%{public}.0s":"#TAVisitState aborting intervisit snapshot recovery due unreasonable dates"}
{"msg%{public}.0s":"#TAVisitState recovered intervisit snapshot", "interval":"%{private}@", "arrivalVisit":"%{private}@"}
#TADeviceRecord creating new record for %{private}@
#TADeviceRecord failed to create record in _createRecordIfNecessaryWithAddress:withDate:
#TADeviceRecord unknown new state %lu while transitioning from old state %lu
#TADeviceRecord unknown old state %lu
#TADeviceRecord %s updating state for %{private}@ from %{public}@ to %{public}@
{"msg%{public}.0s":"#TADeviceRecord device record scan request", "shouldScanHawkeye":%{public}hhd, "shouldScanHawkeyeLowEnergy":%{public}hhd}
#TADeviceRecord purging records
#TADeviceRecord expiring %@ from record
#TADeviceRecord updateDeviceRecordOnSessionChange called
#TADeviceRecord resetting %@ status to reprompt
#TADeviceRecord status for %{private}@:%{private}@
#TADeviceRecord record not found when clearing staged detections
#TADeviceRecord no record for stageDetectionResults
#TADeviceRecord device not in staged state for stageDetectionResults
#TADeviceRecord attempted to merge with nil record
{"msg%{public}.0s":"#TADeviceRecord merging with other record", "self.settings":"%{public}s", "self.lastPurgeDate":"%{public}s", "self.lastScanAttemptDate":"%{public}s", "self.deviceRecord.count":%{public}lu, "other.settings":"%{public}s", "other.lastPurgeDate":"%{public}s", "other.lastScanAttemptDate":"%{public}s", "other.deviceRecord.count":%{public}lu}
{"msg%{public}.0s":"#TADeviceRecord new record stats", "self.settings":"%{public}s", "self.lastPurgeDate":"%{public}s", "self.lastScanAttemptDate":"%{public}s", "self.deviceRecord.count":%{public}lu}
{"msg%{public}.0s":"#TADeviceRecord forcing staged detections to surface immediately", "advertisement":"%{private}@", "singleDeviceRecord":"%{private}@"}
{"msg%{public}.0s":"#TADeviceRecord didSurfaceNotificationFor called with non-existant record"}
{"msg%{public}.0s":"#TADeviceRecord didSurfaceNotificationFor called and record updated", "singleDeviceRecord":"%{private}@"}
#TAStore received visit state update
#TAStore not adding %{public}s due to %{public}s:%{private}s
#TAStore WILD advertisement found, adding to store
#TAStore not adding %{public}s due to %{private}s:%{private}s
#TAStore addTAEvent called with nil requests parameter
#TADisplayOnCalculator called completeDisplayOnWithEndDate when not using budget
#TADisplayOnCalculator end date is before start date in calculateDisplayOnWithEvents
#TADisplayOnCalculator negative time interval in calculateDisplayOnWithEvents
#TAStore adding:%{private}s
#TAStore unreacheable state; in-order TAEvent should be added already: %{private}s
#TAStore inserting OOO event:%{private}s
#TAInterVisitMetricsSnapshot attempting to close inter-visit snapshot multiple times; ignore this update
#TAInterVisitMetricsSnapshot receiving updates from the past to close the snapshot; ignore the update content but close the snapshot
#TAInterVisitMetricsSnapshot receiving updates from the past; ignore them
{"msg%{public}.0s":"#TAInterVisitMetricsSnapshot snapshot full, not adding metrics for address", "address":"%{private}@"}
#TAInterVisitMetricsSnapshot observing out-of-order advertisements; use the observation interval in the summary
#TAInterVisitMetricsSnapshot missing advertisements in metrics
#TAInterVisitMetricsSnapshot latestest advertisements out of order
#TAInterVisitMetricsSnapshot latestest current location and earliest next location out of order
#TAVisitSnapshot not setting representative visit because snapshot already closed
#TAVisitSnapshot _setRepresentativeVisit with input %@ and adjusted representativeVisit to %@
#TAVisitSnapshot Scan completed: %{private}s not in valid time range %{public}@
#TAVisitSnapshot Advertisement %{private}s not in valid time range %{public}@
#TAVisitSnapshot Advertisement %{private}s not added to snapshot due to latest location not inside visit
#TAVisitSnapshot System display state isOn: %{public}d not in valid time range %{public}@
#TAVisitSnapshot System display state isOn: %{public}d received out of order, after %{public}@
#TAVisitSnapshot departure POI populated already; drop TACLVisit %{private}@
#TAVisitSnapshot dropping departure POI b/c the departure date %{private}@ is earlier than the arrival date %{private}@ of the current snapshot
#TAVisitSnapshot dropping departure POI b/c there is no departure date: %{private}@
#TAVisitSnapshot requested exit interval calculation but snapshot is not closed
#TAVisitSnapshot requested getEntryAdvertisementsWithDisplayOnBudget evaluation to end on a snapshot that isn't closed
#TAVisitSnapshot requested getDurationOfVisitExitConsidered but snapshot is not closed
#TAVisitSnapshot requested getDurationOfVisitExitConsidered but interval could not be calculated
#TAVisitSnapshot requested getDurationOfVisitEntryConsideredWithDisplayOnBudget but snapshot is not closed
#TAVisitSnapshot encountered null latestLocation
#TAVisitSnapshot latestLocation %{public}s inside visit
#TAVisitSnapshot update visit snapshot with LOI type %{private}@
#TAVisitSnapshot skip updating LOI type %{private}lu as there was a closer one %{private}lu
#TAVisitSnapshot the visit snapshot located %{private}f meters away from %{private}lu LOI type with %{private}f residual
#TAVisitSnapshot visit snapshot quality requested when snapshot open
#TAScanRequest called evaluateInterVisitAfterVisitExit with an open POI snapshot
#TACoreAnalyticMetricManager computing metrics for inter-visit type but seeing open inter-visit snapshot. Something is wrong.
#TACoreAnalyticMetricManager computing metrics for visit type but seeing open visit snapshot. Something is wrong.
known device
unknown device
RequestingPeopleDensity
RequestingAdditionalScans
RequestingAdditionalHawkeyeLowEnergyScans
DonatingInterVisitMetrics
DonatingVisitMetrics
AdditionalInformation
Date
Address
Summary
LastAdvertisement
LocationHistory
Type
Metrics
ResultType
<unknown>
NavSession
VehicularState
<invalid>
B24@?0@"TAVehicleCategory"8@"NSDictionary"16
DeviceRecord
VisitState
LengthTraveled
Duration
ObservationCount
DetectionAlgorithm
B24@?0@8@"NSDictionary"16
CurrentVisit
LastObservation
v24@?0@"NSNumber"8^B16
LastVisit
TotalVisitCount
TotalDistinctVisitCount
ConsecutiveVisitCount
ConsecutiveAndDistinctFromPrevVisitCount
DurationOfVisitEntryConsideration
DurationOfVisitExitConsideration
EntryDelay
ExitDelay
Latitude
Longitude
DistanceToPreviousSeenVisit
MetricsType
GInterVisitMetrics
GUserActivity
GPeopleDensity
GGeoNavHint
GVehicularStateHint
VDistancePrevVisit
VResidualDistance
VNSigma
SVInterVisitMetrics
SVLOI
MType
MVisitMetrics
MGeneralMetrics
MSingleMetrics
MLatestAdvert
Unknown
TADetectionTypeGeneral
TADetectionTypeVisit
TADetectionTypeSingleVisit
TADetectionTypeAnyVisitToAnyVisit
TADetectionTypeAnyVisitToSensitiveVisit
MetricsType: TAMetricsDetection, DetectionType: %lu
SampleInterval
BufferSize
NumOfAssociatedLocs
Distance
NumOfSampledObservationLocations
LatestAdvertisement
SampledObservedLocations
Settings
CurrentInterVisitMetric
TotalInterVisitMetric
q24@?0@8@16
TAEnable
TAEnablePD
TANotificationThrottleHours
TANotificationThrottleMax
TAServiceEnableTAFilterGeneral
TAServiceEnableTAFilterVisits
TAServiceEnableTAFilterSingleVisit
TAServiceClassificationTimeInterval
TAEventBufferCapacity
TAEventBufferTimeIntervalOfRetention
TAVisitStateVisitSnapshotCapacity
TAVisitStateVisitDisplayBufferCapacity
TAVisitStateInterVisitMetricSnapshotCapacity
TAVisitStateInterVisitSnapshotUpdateInterval
TAVisitStateSnapshotBufferTimeIntervalOfRetention
TAVisitStateLoiBufferPerTypeCapacity
TAVisitStateLoiBufferTimeIntervalOfRetention
TAVisitStateMaxNSigma
TAVisitStateQualitySnapshotDwellDuration
TAVisitStateQualitySnapshotDisplayOnDuration
TAVisitStateUniqueUTObservationCapPerVisit
TADeviceRecordExpiryTimeInterval
TADeviceRecordPurgeTimeInterval
TADeviceRecordKeepAliveInterval
TADeviceRecordMinimumStagingInterval
TADeviceRecordStagingBackstopHour
TADeviceRecordAssumedKeyRollHour
TADeviceRecordScanInterval
TADeviceRecordSurfaceImmediatelyBetweenBackstopAndKeyroll
TAScanMinVisitEntryDisplayOnDuration
TAScanMinInterVisitDisplayOnDuration
TAScanInterVisitDelay
TAScanMaxInterVisitRequests
TAScanMaxDailyRequests
TAFilterGeneralDurationOfConsideration
TAFilterGeneralThresholdOfLocationRelevance
TAFilterGeneralThresholdOfSignificantDuration
TAFilterGeneralThresholdOfSignificantDistance
TAFilterGeneralCapOfReasonableWalkingSpeed
TAFilterGeneralAllowNavGeoAsPrivateVehicleHint
TAFilterSingleVisitThresholdOfSignificantDuration
TAFilterSingleVisitThresholdOfSignificantDistance
TAFilterSingleVisitEnabledLoiTypes
TAFilterVisitsMaxDuration
TAFilterVisitsMinInterVisitDistance
TAFilterVisitsMinNSigma
TAFilterVisitsEntryDisplayOnBudget
TAFilterVisitsExitDisplayOnBudget
TAFilterVisitsEnabledLoiTypes
TAFilterVisitsMinObservationInterval
TAPersistenceInterval
TAPersistenceDirectory
TAPersistenceStoreFileName
TAAnalyticsManagerEnableSubmission
com.apple.tracking-avoidance.NSJSONSerializationNSString
Invalid dictionary for JSON serialization
Refer to NSJSONSerialization spec for valid dictionaries
NSJSONSerialization failed
%02X
v8@?0
com.apple.tracking-avoidance
Status
Events
com.apple.TrackingAvoidance
SeparationAlerts
Update
process == 'locationd'
subsystem == 'com.apple.tracking-avoidance'
category == 'Events'
processID == %d
category == 'Status'
Error writing replay result to file
ReplayStatus: %s
Log stream stopped
Log stream started
Stream error: %@
Replaying with
StartDate: %@
EndDate: %@
Writing output to: %@
STREAM START TIMEOUT
Error: failed to deserialize persistence store: %@
Bootstrapping onto store
REPLAY TIMEOUT
STREAM STOP TIMEOUT
HEX DESERIALIZATION EXCEPTION: %@
ERROR DESERIALIZING EVENT: %@
Got activity events from log archive
Error in replaying logarchive: %@
Finished fetching events from log archive
Data
Reserved
RSSI
DeviceType
UUID
Invalid
Other
HELE
EventType
com.apple.clx.ta.ScanRequests
scanRequests
maximumScanRequests
reason
com.apple.clx.ta.persistence
type
numOperations
size
com.apple.clx.ta.notifyDetection
hasSurfacedBefore
secondsFromFirstSeen
productName
@"NSDictionary"8@?0
write
read
CreationDate
State
KeepAliveInterval
StagedResults
LatestAdvert
Surfaced
HorizontalAccuracy
Altitude
VerticalAccuracy
Speed
SpeedAccuracy
Course
CourseAccuracy
DeltaDistance
DeltaDistanceAccuracy
GroundAltitude
GroundAltitudeUncertainty
Pressure
PressureUncertainty
IsSimulated
/var/root/Library/Caches/locationd/TrackingAvoidance/
trackingavoidance.bin
VehicularHints
MotionHint
GPSHint
BasebandHint
WifiHint
BTHint
OperatorState
NotOperating
Operating
NonVehicular
Vehicular
Advertisement
NotificationState
Foreign
Ignored
Owner
Shared
Issuing
Issued
TransportType
NavState
stopped
preview
navigating
automobile
transit
walking
bicycle
unknown
ferry
rideshare
SystemStateType
IsOn
Display
AirplaneMode
BatterySaver
Bluetooth
Wifi
HighThermal
LocationServices
LocationSimulation
AllowSimulatedEvents
DeviceUnlockedSinceBoot
LocationAndPrivacyReset
HasKoreaCountryCode
UserLocationInsideKorea
AdvertisementBufferEmpty
ArrivalDate
DepartureDate
Confidence
High
v24@?0@"NSArray"8@"NSError"16
TrackingAvoidance load
TrackingAvoidance save
PendingStart
Running
RunningNoScanning
UnknownState
ReferenceFrame
Home
Work
PeopleDensityState
ObservationInterval
AdditionalInfo
Detection
KeepInStagingUntil
ActivityType
static
pedestrian
vehicular
cycling
VisitCap
VisitDisplayCap
InterCap
InterUpdateInterval
ThresLocRel
SnapshotRetention
LOICap
LOIRetention
MaxNSigma
MinDwell
MinDisplay
PerVisitCacheCap
VisitBuffer
InterVisitBuffer
LOIs
ScanReq
InterBackup
SensitiveLOITypes
InsideVisit
OutsideVisit
received a TACLVisit event where the arrival date didn't happen first; ignore it to avoid logic error
no arrival date while expecting an arrival POI
received two continuous arrival TACLVisit event
received an out-of-order TACLVisit event
StateType
ExpiryInterval
PurgeInterval
MinStagingInterval
BackstopHour
KeyRollHour
ScanInterval
SurfaceImmediatelyBetweenBackstopAndKeyroll
LastPurgeDate
LastScanAttemptDate
Staged
PendingReprompt
Updating device record
Buffer
Capacity
B32@?0@8Q16^B24
v24@?0Q8^B16
<%@: %p; buffer: '%@'; capacity: '%lu'>
irrelevant device type
unrecognized advertisement type
owner advertisement type
invalid accuracy
low accuracy
simulated/spoofed
sampling policy at one location every %.2lf seconds
low confidence
<%@: %p; clock: '%@'>
UseBudget
BudgetRemaining
StartTime
EvalUntil
v32@?0@"<TAEventProtocol>"8Q16^B24
%@:%lu
InitTime
LastUpdateTime
accumMetrics
firstLoc
lastLoc
LastAdv
IsClosed
Closed
RepVisit
LatestLoc
LatestAdv
EarliestAdv
LatestLocInside
LRUAdv
numUnique
numDisplay
displayEvents
exitBegin
displayOnCalc
distanceToLOI
entryDuration
maxNSigma
v32@?0@"NSData"8@"TASPAdvertisement"16^B24
VisitDisplayOn
IntervisitDisplayOn
ScanDelay
MaxScanReqs
LastScan
InterScanCount
ScanSchedule
ScanRequestReason
VisitEntry
InterVisitImmediate
InterVisitScheduled
zPLR
zPLR
TAFilterKnownDevices
TAOutgoingRequests
TASuspiciousDevice
NSCopying
NSSecureCoding
NSCoding
TAPrivateVehicleClassificationReason
TAVehicleCategoryLogic
TAPersistenceStore
TADominantUserActivity
TAFilterGeneralSettings
TAFilterGeneral
TAFilterSingleVisitSettings
TAFilterSingleVisit
TAFilterVisitsSettings
TAFilterVisits
TAMetricsVisit
TAMetricsProtocol
NSObject
TAGeneralDetectionMetrics
TAVisitDetectionMetrics
TASingleVisitDetectionMetrics
TAMetricsDetection
TANotificationImmediacy
TAInterVisitMetricPerDeviceSettings
TAInterVisitMetricPerDevice
TAMetricsInterVisit
TASettings
NSString
TADateFormat
HexString
TATrackingAvoidanceServiceSettings
TATrackingAvoidanceService
TAVisitStateObserver
TATrackingAvoidanceServiceProtocol
TAReplay
OSLogPersistenceDelegate
OSActivityStreamDelegate
OSDeviceDelegate
TASPAdvertisement
OSLogCoding
TAEventProtocol
TAAnalyticsManagerSettings
TAAnalyticsManager
TATrackingAvoidanceServiceObserver
TAPersistenceManagerObserver
TASingleDeviceRecord
TALocationLite
TAPersistenceManagerSettings
TAPersistenceManager
TAVehicleStateNotification
TADeviceInformation
TAGeoNavigationNotification
TASystemState
TACLVisit
TATrackingAvoidanceServiceStateContext
TATrackingAvoidanceServiceManager
TALocationOfInterest
TAAggressiveScanState
TAPeopleDensityResult
TAStagedSuspiciousDevice
Safety
TAUserActivity
TAInterVisitSummary
TAVisitStateSettings
TAVisitState
TADeviceRecord
TADeviceRecordSettings
TACircularBuffer
TAStore
TADisplayOnCalculator
TAEventBufferSettings
TAEventBuffer
TAInterVisitMetricsSnapshot
TAVehicleCategory
TAFilterObservationAggregator
TAVisitSnapshot
TAScanRequestSettings
TAScanRequest
TACoreAnalyticMetricManager
array
countByEnumeratingWithState:objects:count:
address
isKnownDevice:
getDeviceNotificationState:
detectionType
notificationImmediacyForDetectionType:
addObject:
hexString
notificationInternalStateToString:
copy
containsObject:
isEqualToString:
additionalInformation
mutableCopy
allKeys
removeObjectForKey:
date
initWithRequestKey:additionalInformation:date:
removeKnownSuspiciousDevices:deviceRecord:
removeDuplicateSuspiciousDevices:
removeMetricsFromKnownDevices:deviceRecord:
init
dictionary
description
getDateString
dictionaryWithObjects:forKeys:count:
descriptionDictionary
JSONStringFromNSDictionary:error:
string
.cxx_destruct
_key
_additionalInformation
_date
T@"NSString",R,C,N,V_key
T@"NSDictionary",R,C,N,V_additionalInformation
T@"NSDate",R,C,N,V_date
initWithLatestAdv:detectionSummary:date:locHistory:detectionMetrics:detectionType:
isEqual:
detectionSummary
latestAdvertisement
locationHistory
detectionMetrics
convertTADetectionTypeToString:
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
decodeInt32ForKey:
encodeObject:forKey:
encodeInt32:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
TB,R
_address
_detectionSummary
_latestAdvertisement
_locationHistory
_detectionMetrics
_detectionType
T@"NSData",R,C,N,V_address
T@"NSDictionary",R,C,N,V_detectionSummary
T@"TASPAdvertisement",R,C,N,V_latestAdvertisement
T@"NSArray",R,C,N,V_locationHistory
T@"TAMetricsDetection",R,N,V_detectionMetrics
TQ,R,N,V_detectionType
numberWithUnsignedInteger:
hash
reason
initWithReason:
_reason
TQ,R,N,V_reason
earlierDate:
createIntervalSafelyWithStartDate:endDate:
startDate
endDate
eventBuffer
getAllTAEventsOf:
initWithVehicleCategoryType:andDate:
getDate
compare:
speculateTAVehicleCategoryTypeFromVehicleStateNotification:
initWithTAVehicularStateNotification:
insertObject:atIndex:
speculateTAVehicleCategoryTypeFromGeoNavigationNotification:
initWithTAGeoNavigationNotification:
accumulatedTAVehicleCategoryHistoryFromVehicleStateNotificationInTAStore:since:to:
vehicleCategoryType
predicateWithBlock:
filteredArrayUsingPredicate:
count
accumulatedTAVehicleCategoryHistoryFromGeoNavigationNotificationInTAStore:since:to:
extractPrivateVehicleHintsFromTAStore:since:to:
deviceRecord
visitState
setDeviceRecord:
setVisitState:
_deviceRecord
_visitState
T@"TADeviceRecord",&,N,V_deviceRecord
T@"TAVisitState",&,N,V_visitState
distantPast
initWithActivityType:date:
lastObject
activityType
distantFuture
objectAtIndexedSubscript:
containsDate:
duration
intersectsDateInterval:
intersectionWithDateInterval:
objectForKeyedSubscript:
doubleValue
numberWithDouble:
setObject:forKeyedSubscript:
_getCumulativeUserActivityTimeInDateInterval:store:
integerValue
getDominantUserActivityInfoInDateInterval:store:
boolValue
initWithDurationOfConsideration:thresholdOfLocationRelevance:thresholdOfSignificantDuration:thresholdOfSignificantDistance:capOfReasonableWalkingSpeed:allowNavGeoHintAsPrivateVehicleHint:
initWithDurationOfConsiderationOrDefault:thresholdOfLocationRelevanceOrDefault:thresholdOfSignificantDurationOrDefault:thresholdOfSignificantDistanceOrDefault:capOfReasonableWalkingSpeedOrDefault:allowNavGeoHintAsPrivateVehicleHint:
initWithDefaults
durationOfConsideration
thresholdOfLocationRelevance
thresholdOfSignificantDuration
thresholdOfSignificantDistance
capOfReasonableWalkingSpeed
allowNavGeoHintAsPrivateVehicleHint
_allowNavGeoHintAsPrivateVehicleHint
_durationOfConsideration
_thresholdOfLocationRelevance
_thresholdOfSignificantDuration
_thresholdOfSignificantDistance
_capOfReasonableWalkingSpeed
Td,R,N,V_durationOfConsideration
Td,R,N,V_thresholdOfLocationRelevance
Td,R,N,V_thresholdOfSignificantDuration
Td,R,N,V_thresholdOfSignificantDistance
Td,R,N,V_capOfReasonableWalkingSpeed
TB,R,N,V_allowNavGeoHintAsPrivateVehicleHint
filterSuspiciousDeviceWithStore:settings:andAppendOutgoingRequestsTo:
clock
getLastestValidVisitDepartureDate
getEarliestEventDate
dateWithTimeInterval:sinceDate:
getDateIntervalOfInterestForFiltering:settings:
filteredInterVisitMetadataWithVisitAdjustment:inInterval:withLocRelevanceThreshold:
deviceLocationHistory
distOfTravelAlong:
objectForKey:
deviceObservationInterval
filteredPeopleDensityResults:within:
peopleDensityState
coarsePedestrianSpeedCheck:withFilterSettings:
accumulateDistance:
accumulateDuration:
accumulateNumOfAssociatedLocs:
accumulateSampledObservedLocations:
latestObservation
accumulateLatestAdvertisement:
initWithInterVisitMetrics:dominantUserActivity:pdState:geoNavHint:vehicularStateHint:
initWithDetectionType:visitDetectionMetrics:generalDetectionMetrics:singleVisitDetectionMetrics:latestAdvertisement:
shouldIssuePeopleDensityScan:distTravel:durationOfTravel:settings:resultsInBuffer:
dateIntervalAfterVisitAdjustment:intervalOfInterest:
filteredInterVisitMetadata:inInterval:withLocRelevanceThreshold:
setObject:forKey:
timeIntervalSinceDate:
null
getAllTAEventsBetween:
objectEnumerator
preprocessLocationAndAdvertisementWithEnumerator:addressToLocationList:addressToAdvertisementList:relevanceThreshold:
reverseObjectEnumerator
firstObject
initWithObservationInterval:andLocationHistory:andLastObservation:
distanceFromLocation:
estimateSpeedFrom:to:
observationInterval
filterSuspiciousDeviceWithStore:andAppendOutgoingRequestsTo:
initWithUnsignedInteger:
initWithObjects:
enabledLoiTypesToString
defaultSingleVisitEnabledLoiTypes
initWithThresholdOfSignificantDuration:thresholdOfSignificantDistance:filterVisitsSettings:enabledLoiTypes:
unsignedIntegerValue
enumerateObjectsUsingBlock:
componentsJoinedByString:
initWithThresholdOfSignificantDurationOrDefault:thresholdOfSignificantDistanceOrDefault:filterVisitsSettingsOrDefault:enabledLoiTypesOrDefault:
visitsSettings
enabledLoiTypes
_visitsSettings
_enabledLoiTypes
T@"TAFilterVisitsSettings",R,N,V_visitsSettings
T@"NSSet",R,N,V_enabledLoiTypes
shouldDetectWithStore:filterSingleVisitSettings:
visitSnapshotBuffer
representativeVisit
arrivalDate
coordinate
horizontalAccuracy
initWithTimestamp:latitude:longitude:horizontalAccuracy:
interVisitMetricSnapshotBuffer
getEntryAddressSetInTAVisitSnapshot:usingSettings:
accumulatedDeviceMetrics
setWithArray:
getIntersectionOfFirstSet:andSecondSet:
latestUtAdvertisements
maxSuspiciousDuration
earliestUtAdvertisements
minObservationInterval
distance
sampledObservedLocations
arrayByAddingObject:
loiType
initWithInterVisitMetrics:loiType:
isClosed
filterSuspiciousDeviceWithStore:singleVisitSettings:andAppendOutgoingRequestsTo:
_determinDefaultEntryDisplayOnBudget
_determinDefaultExitDisplayOnBudget
defaultVisitsSensitiveLOITypes
initWithMaxSuspiciousDuration:minInterVisitDistance:minNSigmaBetweenVisits:entryDisplayOnBudget:exitDisplayOnBudget:sensitiveLOITypes:minObservationInterval:
unsignedIntValue
_isLegacyHardware
initWithMaxSuspiciousDurationOrDefault:minInterVisitDistanceOrDefault:minNSigmaBetweenVisitsOrDefault:entryDisplayOnBudgetOrDefault:exitDisplayOnBudgetOrDefault:sensitiveLOITypesOrDefault:minObservationIntervalOrDefault:
sensitiveLOITypesToString
minInterVisitDistance
minNSigmaBetweenVisits
entryDisplayOnBudget
exitDisplayOnBudget
sensitiveLOITypes
_maxSuspiciousDuration
_minInterVisitDistance
_minNSigmaBetweenVisits
_entryDisplayOnBudget
_exitDisplayOnBudget
_sensitiveLOITypes
_minObservationInterval
Td,R,N,V_maxSuspiciousDuration
Td,R,N,V_minInterVisitDistance
TQ,R,N,V_minNSigmaBetweenVisits
Td,R,N,V_entryDisplayOnBudget
Td,R,N,V_exitDisplayOnBudget
T@"NSSet",R,N,V_sensitiveLOITypes
Td,R,N,V_minObservationInterval
shouldDetectWithStore:settings:
bufferCopy
objectAtIndex:
departureDate
sensitiveVisitsTooCloseBetweenFromLOIType:toLOIType:distance:settings:
getSuspiciousDeviceAdvertisementsFromVisitSnapshot:toVisitSnapshot:settings:currentClockTime:
residualDistanceFromLocation:toLocation:nSigma:
initWithDistance:residualDistance:nSigma:
identifyDetectionTypeWithStore:settings:
addObjectsFromArray:
latestLocationInsideVisit
distanceFromLocation:toLocation:satisfyNSigma:satisfyMinDistance:
isReasonableSpeedOfTravelFrom:to:
getExitAddressSetInTAVisitSnapshot:usingSettings:
getDurationOfVisitExitConsideredWithDisplayOnBudget:
getEntryIntervalEvaluatedUntil
initWithTimeInterval:sinceDate:
getEntryAdvertisementsWithDisplayOnBudget:
getExitAdvertisementsWithDisplayOnBudget:
setWithSet:
intersectSet:
getAddressSetInTAVisitSnapshot:
getArrivalDelay
getDepartureDelay
getDurationOfVisitEntryConsideredWithDisplayOnBudget:
initWithDouble:
visitEntryDelay
visitExitDelay
distanceToPreviousSeenVisit
totalVisitCount
totalDistinctVisitCount
consecutiveVisitCount
consecutiveAndDistinctFromPrevVisitCount
durationOfVisitEntryConsideration
durationOfVisitExitConsideration
latitude
longitude
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
getMetricsCollectionType
T@"TASPAdvertisement",R,N
initWithSnapshotHistory:andAddress:andVisitFilterSettings:
_totalVisitCount
_totalDistinctVisitCount
_consecutiveVisitCount
_consecutiveAndDistinctFromPrevVisitCount
_durationOfVisitEntryConsideration
_durationOfVisitExitConsideration
_visitEntryDelay
_visitExitDelay
_latitude
_longitude
_distanceToPreviousSeenVisit
T@"NSData",R,N,V_address
TQ,R,N,V_totalVisitCount
TQ,R,N,V_totalDistinctVisitCount
TQ,R,N,V_consecutiveVisitCount
TQ,R,N,V_consecutiveAndDistinctFromPrevVisitCount
Td,R,N,V_durationOfVisitEntryConsideration
Td,R,N,V_durationOfVisitExitConsideration
T@"NSDateInterval",R,N,V_visitEntryDelay
T@"NSDateInterval",R,N,V_visitExitDelay
Td,R,N,V_latitude
Td,R,N,V_longitude
T@"NSNumber",R,N,V_distanceToPreviousSeenVisit
T@"TASPAdvertisement",R,N,V_latestAdvertisement
interVisitMetrics
dominantUserActivity
pdState
geoNavHint
vehicularStateHint
decodeIntegerForKey:
encodeInteger:forKey:
_geoNavHint
_vehicularStateHint
_interVisitMetrics
_dominantUserActivity
_pdState
T@"TAInterVisitMetricPerDevice",R,N,V_interVisitMetrics
TQ,R,N,V_dominantUserActivity
Tq,R,N,V_pdState
TB,R,N,V_geoNavHint
TB,R,N,V_vehicularStateHint
distanceToPreviousVisit
residualDistanceToPreviousVisit
nSigmaBetweenVisits
decodeDoubleForKey:
encodeDouble:forKey:
_distanceToPreviousVisit
_residualDistanceToPreviousVisit
_nSigmaBetweenVisits
Td,R,N,V_distanceToPreviousVisit
Td,R,N,V_residualDistanceToPreviousVisit
TQ,R,N,V_nSigmaBetweenVisits
_loiType
TQ,R,N,V_loiType
visitDetectionMetrics
generalDetectionMetrics
singleVisitDetectionMetrics
stringWithFormat:
_generalDetectionMetrics
_visitDetectionMetrics
_singleVisitDetectionMetrics
T@"TAGeneralDetectionMetrics",R,N,V_generalDetectionMetrics
T@"TAVisitDetectionMetrics",R,N,V_visitDetectionMetrics
T@"TASingleVisitDetectionMetrics",R,N,V_singleVisitDetectionMetrics
initWithSampledObservationLocationsInterval:sampledObservationLocationsBufferSize:
sampledObservationLocationsInterval
sampledObservationLocationsBufferSize
setSampledObservationLocationsInterval:
setSampledObservationLocationsBufferSize:
_sampledObservationLocationsInterval
_sampledObservationLocationsBufferSize
Td,N,V_sampledObservationLocationsInterval
TQ,N,V_sampledObservationLocationsBufferSize
initWithSettings:
numOfAssociatedLocs
arrayByAddingObjectsFromArray:
sortedArrayUsingComparator:
settings
accumulate:
setSettings:
_numOfAssociatedLocs
_duration
_distance
_settings
_sampledObservedLocations
T@"TAInterVisitMetricPerDeviceSettings",&,N,V_settings
T@"NSArray",R,N,V_sampledObservedLocations
TQ,R,N,V_numOfAssociatedLocs
Td,R,N,V_duration
Td,R,N,V_distance
isEqualToData:
currentInterVisitMetric
totalInterVisitMetric
_currentInterVisitMetric
_totalInterVisitMetric
T@"TAInterVisitMetricPerDevice",R,N,V_currentInterVisitMetric
T@"TAInterVisitMetricPerDevice",R,N,V_totalInterVisitMetric
convertEnabledLoiTypesValueContentToNSNumberType:
initWithBufferCapacityOrDefault:bufferTimeIntervalOfRetentionOrDefault:
initWithVisitSnapshotCapacityOrDefault:visitDisplayBufferCapacityOrDefault:interVisitMetricSnapshotCapacityOrDefault:interVisitSnapshotUpdateIntervalOrDefault:thresholdOfLocationRelevanceOrDefault:snapshotBufferTimeIntervalOfRetentionOrDefault:loiBufferPerTypeCapacityOrDefault:loiBufferTimeIntervalOfRetentionOrDefault:maxNSigmaBetweenLastLocationAndVisitOrDefault:qualitySnapshotDwellDurationOrDefault:qualitySnapshotDisplayOnDurationOrDefault:uniqueUTObservationCapPerVisitOrDefault:sensitiveLOITypesOrDefault:
initWithExpiryTimeIntervalOrDefault:purgeTimeIntervalOrDefault:keepAliveIntervalOrDefault:minimumStagingIntervalOrDefault:stagingBackstopHourOrDefault:assumedKeyRollHourOrDefault:scanIntervalOrDefault:surfaceImmediatelyBetweenBackstopAndKeyrollOrDefault:
initWithMinVisitEntryDisplayOnDurationOrDefault:minInterVisitDisplayOnDurationOrDefault:interVisitScanDelayOrDefault:maxInterVisitScanRequestsOrDefault:
initWithEnableTAFilterGeneralOrDefault:enableTAFilterVisitsOrDefault:enableTAFilterSingleVisitOrDefault:classificationTimeIntervalOrDefault:
initWithEnableSubmissionOrDefault:
fileURLWithPath:
initWithDirectoryURLOrDefault:storeFileNameOrDefault:
setNumberStyle:
numberFromString:
arrayWithObjects:count:
numberWithBool:
bufferCapacity
bufferTimeIntervalOfRetention
loiBufferPerTypeCapacity
loiBufferTimeIntervalOfRetention
visitSnapshotCapacity
visitDisplayBufferCapacity
interVisitMetricSnapshotCapacity
interVisitSnapshotUpdateInterval
snapshotBufferTimeIntervalOfRetention
maxNSigmaBetweenLastLocationAndVisit
qualitySnapshotDwellDuration
qualitySnapshotDisplayOnDuration
uniqueUTObservationCapPerVisit
expiryTimeInterval
purgeTimeInterval
keepAliveInterval
minimumStagingInterval
stagingBackstopHour
numberWithInteger:
assumedKeyRollHour
scanInterval
surfaceImmediatelyBetweenBackstopAndKeyroll
minVisitEntryDisplayOnDuration
minInterVisitDisplayOnDuration
interVisitScanDelay
maxInterVisitScanRequests
enableTAFilterGeneral
enableTAFilterVisits
enableTAFilterSingleVisit
classificationTimeInterval
persistenceDirectoryURL
persistenceStoreFileName
enableSubmission
getBooleanSettingsKeys
getIntegerSettingsKeys
getUnsignedIntegerSettingsKeys
getDoubleSettingsKeys
getStringSettingsKeys
getArraySettingsKeys
trackingAvoidanceEnabled
setTrackingAvoidanceEnabled:
peopleDensityEnabled
setPeopleDensityEnabled:
maximumDailyScans
setMaximumDailyScans:
notificationThrottleHours
setNotificationThrottleHours:
notificationThrottleMaxPerPeriod
setNotificationThrottleMaxPerPeriod:
persistenceInterval
setPersistenceInterval:
filterGeneralSettings
setFilterGeneralSettings:
filterVisitsSettings
setFilterVisitsSettings:
filterSingleVisitSettings
setFilterSingleVisitSettings:
eventBufferSettings
setEventBufferSettings:
visitStateSettings
setVisitStateSettings:
deviceRecordSettings
setDeviceRecordSettings:
scanRequestSettings
setScanRequestSettings:
serviceSettings
setServiceSettings:
persistenceManagerSettings
setPersistenceManagerSettings:
analyticsManagerSettings
setAnalyticsManagerSettings:
_trackingAvoidanceEnabled
_peopleDensityEnabled
_maximumDailyScans
_notificationThrottleHours
_notificationThrottleMaxPerPeriod
_persistenceInterval
_filterGeneralSettings
_filterVisitsSettings
_filterSingleVisitSettings
_eventBufferSettings
_visitStateSettings
_deviceRecordSettings
_scanRequestSettings
_serviceSettings
_persistenceManagerSettings
_analyticsManagerSettings
TB,N,V_trackingAvoidanceEnabled
TB,N,V_peopleDensityEnabled
TQ,N,V_maximumDailyScans
TQ,N,V_notificationThrottleHours
TQ,N,V_notificationThrottleMaxPerPeriod
Td,N,V_persistenceInterval
T@"TAFilterGeneralSettings",&,N,V_filterGeneralSettings
T@"TAFilterVisitsSettings",&,N,V_filterVisitsSettings
T@"TAFilterSingleVisitSettings",&,N,V_filterSingleVisitSettings
T@"TAEventBufferSettings",&,N,V_eventBufferSettings
T@"TAVisitStateSettings",&,N,V_visitStateSettings
T@"TADeviceRecordSettings",&,N,V_deviceRecordSettings
T@"TAScanRequestSettings",&,N,V_scanRequestSettings
T@"TATrackingAvoidanceServiceSettings",&,N,V_serviceSettings
T@"TAPersistenceManagerSettings",&,N,V_persistenceManagerSettings
T@"TAAnalyticsManagerSettings",&,N,V_analyticsManagerSettings
isValidJSONObject:
mainBundle
localizedStringForKey:value:table:
errorWithDomain:code:userInfo:
dataWithJSONObject:options:error:
initWithData:encoding:
localTimeZone
stringFromDate:timeZone:formatOptions:
currentCalendar
nextDateAfterDate:matchingHour:minute:second:options:
getNextDateAtHour:
stringByReplacingOccurrencesOfString:withString:
length
characterAtIndex:
dataWithBytesNoCopy:length:freeWhenDone:
bytes
initWithBytesNoCopy:length:encoding:freeWhenDone:
dataWithHexString:
initWithEnableTAFilterGeneral:enableTAFilterVisits:enableTAFilterSingleVisit:classificationTimeInterval:
_enableTAFilterGeneral
_enableTAFilterVisits
_enableTAFilterSingleVisit
_classificationTimeInterval
TB,R,N,V_enableTAFilterGeneral
TB,R,N,V_enableTAFilterVisits
TB,R,N,V_enableTAFilterSingleVisit
Td,R,N,V_classificationTimeInterval
initWithTASettings:
hashTableWithOptions:
initWithEventBufferSettings:scanRequestSettings:visitStateSettings:deviceRecordSettings:
addObserver:
removeObject:
mergeWithAnotherDeviceRecord:
mergeWithAnotherTAVisitState:
initWithTASPAdvertisement:deviceType:notificationState:date:
ingestTAEvent:andAppendOutgoingRequestsTo:
allObjects
trackingAvoidanceService:didFindSuspiciousDevices:
trackingAvoidanceService:requestingAdditionalInformation:
trackingAvoidanceService:didUpdateSuspiciousDevices:
trackingAvoidanceService:didStageSuspiciousDevices:
visitStateChangedForTrackingAvoidanceService:
_performDetection
notifyObserversOfVisitStateChange
computeMetricsVisit:withFilterVisitsSettings:
notifyObserversOfRequests:
computeMetricsInterVisit:
stageDevice:withCurrentDate:
stageDetectionResults:
notifyObserversOfStagedSuspiciousDevices:
hasSurfacedNotificationFor:
getLatestElementOf:
scanDate
timestamp
notifyObserversOfSuspiciousDeviceUpdate:
state
getDetectionResultsToPush
filterAndStageDetectionResults:
aggregateObservationsThroughHistoryForDetectionResults:visitSnapshotBuffer:intervisitSnapshotBuffer:clock:
notifyObserversOfSuspiciousDevices:
addTAEvent:andAppendOutgoingRequestsTo:
shouldPerformDetection
_performUpdateIfNecessary:
visitState:didChangeStateFromType:toType:
visitState:didIssueMetricsSubmissionHint:
removeObserver:
ingestTAEvent:
bootstrapDeviceRecord:
bootstrapVisitState:
store
observers
setObservers:
latestClassificationDate
setLatestClassificationDate:
stagedIntervisitMetrics
setStagedIntervisitMetrics:
_store
_observers
_latestClassificationDate
_stagedIntervisitMetrics
T@"NSHashTable",&,N,V_observers
T@"NSDate",&,N,V_latestClassificationDate
T@"TAOutgoingRequests",&,N,V_stagedIntervisitMetrics
T@"TAStore",R,N,V_store
T@"TASettings",R,N,V_settings
setLogArchive:
setOptions:
setDelegate:
predicateWithFormat:
andPredicateWithSubpredicates:
setPredicate:
setDeviceDelegate:
processInfo
processIdentifier
fileHandleForWritingToURL:error:
seekToEndOfFile
eventMessage
stringByAppendingString:
dataUsingEncoding:
writeData:
closeFile
UTF8String
setDevice:
currentLocale
descriptionWithLocale:
absoluteString
start
dataWithContentsOfURL:
unarchivedObjectOfClasses:fromData:error:
fetchFromStartDate:toEndDate:
sleepForTimeInterval:
stop
replaySingleEventLogString:
persistence:results:error:
persistenceDidFinishReadingForStartDate:endDate:
activityStream:results:
streamDidStart:
streamDidFail:error:
streamDidStop:
activityStream:results:error:
activityStream:deviceUDID:deviceID:status:error:
initWithLogArchive:outputPath:inputPersistencePath:
replayWithStartDate:endDate:
_service
_persistence
_stream
_persistenceWait
_streamWait
_outputPath
_inputPersistencePath
_analyticsManager
initWithAddress:advertisementData:status:reserved:rssi:scanDate:uuid:
isEqualToDate:
advertisementData
status
reserved
rssi
numberWithUnsignedChar:
getType
TASPAdvertisementTypeToString:
getDeviceType
TASPAdvertisementDeviceTypeToString:
uuid
UUIDString
unsignedCharValue
archivedDataWithRootObject:requiringSecureCoding:error:
appendBytes:length:
initWithAddress:advertisementData:status:reserved:rssi:scanDate:
encodeWithOSLogCoder:options:maxLength:
getEventSubtype
_status
_advertisementData
_reserved
_rssi
_scanDate
_uuid
T@"NSData",R,C,N,V_advertisementData
TC,R,N,V_status
T@"NSData",R,C,N,V_reserved
Tq,R,N,V_rssi
T@"NSDate",R,C,N,V_scanDate
T@"NSUUID",R,C,N,V_uuid
setEnableSubmission:
_enableSubmission
TB,V_enableSubmission
_convertDetection:service:
_submitEvent:content:
_convertScanRequest:service:
didWriteToURL:bytes:
didReadFromURL:bytes:
detection
updateLatestAdvertisement:
removeAllObjects
keepInStagingUntil
_shouldPushStagedDetection:
keepStagedDetectionAliveUntilDate
clearAllStagedDetections
purgeStagedDetectionsWithClock:
type
creationDate
stagedDetectionResults
setKeepInStagingUntil:
hasSurfacedNotification
deviceTypeToString:
decodeBoolForKey:
encodeBool:forKey:
initWithDeviceAddress:state:type:date:keepAliveInterval:
stageDetection:
getStagedDetections
getDetectionsReadyToPush
mergeWithAnotherSingleDeviceRecord:
forceStagedDetectionsToSurfaceImmediately
setState:
setType:
setHasSurfacedNotification:
setKeepAliveInterval:
setStagedDetectionResults:
_hasSurfacedNotification
_state
_type
_creationDate
_keepAliveInterval
_stagedDetectionResults
Td,N,V_keepAliveInterval
T@"NSMutableArray",&,N,V_stagedDetectionResults
TQ,N,V_state
TQ,N,V_type
T@"NSDate",R,N,V_creationDate
T@"NSDate",R,N
TB,N,V_hasSurfacedNotification
initWithTimestamp:latitude:longitude:horizontalAccuracy:altitude:verticalAccuracy:speed:speedAccuracy:course:courseAccuracy:deltaDistance:deltaDistanceAccuracy:groundAltitude:groundAltitudeUncertainty:pressure:pressureUncertainty:isSimulatedOrSpoofed:
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:timestamp:
altitude
verticalAccuracy
speed
speedAccuracy
course
courseAccuracy
deltaDistance
deltaDistanceAccuracy
groundAltitude
groundAltitudeUncertainty
pressure
pressureUncertainty
isSimulatedOrSpoofed
distanceToLocation:satisfyNSigma:satisfyMinDistance:
_isSimulatedOrSpoofed
_timestamp
_horizontalAccuracy
_altitude
_verticalAccuracy
_speed
_speedAccuracy
_course
_courseAccuracy
_deltaDistance
_deltaDistanceAccuracy
_groundAltitude
_groundAltitudeUncertainty
_pressure
_pressureUncertainty
T@"NSDate",R,C,N,V_timestamp
Td,R,N,V_horizontalAccuracy
Td,R,N,V_altitude
Td,R,N,V_verticalAccuracy
Td,R,N,V_speed
Td,R,N,V_speedAccuracy
Td,R,N,V_course
Td,R,N,V_courseAccuracy
Td,R,N,V_deltaDistance
Td,R,N,V_deltaDistanceAccuracy
Td,R,N,V_groundAltitude
Td,R,N,V_groundAltitudeUncertainty
Td,R,N,V_pressure
Td,R,N,V_pressureUncertainty
TB,R,N,V_isSimulatedOrSpoofed
fileURLWithPath:isDirectory:
fileURLWithPath:relativeToURL:
_getStoreURL
setPersistenceDirectoryURL:
setPersistenceStoreFileName:
_persistenceDirectoryURL
_persistenceStoreFileName
T@"NSURL",&,N,V_persistenceDirectoryURL
T@"NSString",&,N,V_persistenceStoreFileName
_createDirectoryIfNotPresent
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
path
fileExistsAtPath:
dataWithContentsOfURL:options:error:
unarchivedObjectOfClass:fromData:error:
_notifyObserversOnReadFromURL:bytes:
writeToURL:options:error:
_notifyObserversOnWriteToURL:bytes:
removeItemAtURL:error:
load
save
reset
onUpdatedTAStore:
T@"TAPersistenceManagerSettings",&,V_settings
T@"TAPersistenceStore",R,N,V_store
vehicularState
vehicularHints
operatorState
numberWithInt:
initWithVehicularState:andVehicularHints:andOperatorState:date:
_vehicularState
_vehicularHints
_operatorState
TQ,R,N,V_vehicularState
TQ,R,N,V_vehicularHints
TQ,R,N,V_operatorState
advertisement
deviceType
notificationState
notificationStateToString:
_advertisement
_deviceType
_notificationState
T@"TASPAdvertisement",R,N,V_advertisement
TQ,R,N,V_deviceType
TQ,R,N,V_notificationState
T@"NSDate",R,N,V_date
transportType
navState
initWithTransportType:andNavigationState:date:
_transportType
_navState
TQ,R,N,V_transportType
TQ,R,N,V_navState
systemStateType
isOn
initWithSystemStateType:isOn:date:
_isOn
_systemStateType
TQ,R,N,V_systemStateType
TB,R,N,V_isOn
initWithCoordinate:horizontalAccuracy:arrivalDate:departureDate:detectionDate:confidence:
detectionDate
confidence
allocWithZone:
hasArrivalDate
hasDepartureDate
isTemporalOrderSensical
_arrivalDate
_departureDate
_detectionDate
_confidence
_coordinate
T@"NSDate",R,C,N,V_arrivalDate
T@"NSDate",R,C,N,V_departureDate
T{CLLocationCoordinate2D=dd},R,N,V_coordinate
TB,R,N
T@"NSDate",R,C,N,V_detectionDate
TQ,R,N,V_confidence
serviceEnabled
setServiceEnabled:
highThermalState
setHighThermalState:
airplaneMode
setAirplaneMode:
batterySaverMode
setBatterySaverMode:
locationServicesEnabled
setLocationServicesEnabled:
restartRequired
setRestartRequired:
locationSimulationInProgress
setLocationSimulationInProgress:
allowSimulatedEvents
setAllowSimulatedEvents:
deviceUnlockedSinceBoot
setDeviceUnlockedSinceBoot:
hasKoreaCountryCode
setHasKoreaCountryCode:
userLocationInsideKorea
setUserLocationInsideKorea:
_serviceEnabled
_highThermalState
_airplaneMode
_batterySaverMode
_locationServicesEnabled
_restartRequired
_locationSimulationInProgress
_allowSimulatedEvents
_deviceUnlockedSinceBoot
_hasKoreaCountryCode
_userLocationInsideKorea
TB,V_serviceEnabled
TB,V_highThermalState
TB,V_airplaneMode
TB,V_batterySaverMode
TB,V_locationServicesEnabled
TB,V_restartRequired
TB,V_locationSimulationInProgress
TB,V_allowSimulatedEvents
TB,V_deviceUnlockedSinceBoot
TB,V_hasKoreaCountryCode
TB,V_userLocationInsideKorea
UUID
onUpdatedSettings:
_handleStateUpdateIfNecessary
managerStateToString:
_unregisterForAvengerScanner
_unregisterForTATrackingAvoidanceService
notifyObserversOfStateChangeFrom:to:
_setState:
_shouldTerminateService
_shouldSuspendAvengerScanner
_registerForTATrackingAvoidanceServiceWithSettings:
_registerForAvengerScanner
_changeSession
_loadAndBootstrap
_fetchAndIngestLastVisit
_schedulePeriodicSaveAfterTimeInterval:
initWithAscending:confidence:dateInterval:labelVisit:limit:
routineManager
location
horizontalUncertainty
entry
exit
service
fetchStoredVisitsWithOptions:handler:
registerForAvengerScanner
unregisterForAvengerScanner
onManagerStateChangeFrom:to:
_setLastSaveTime
_fetchStoreAndSave
_onHighThermalState:
_onAirplaneMode:
_onBatterySaverMode:
_onLocationServicesEnabled:
_onLocationSimulationInProgress:
_onAllowSimulatedEvents:
_onDeviceUnlockedSinceBoot:
_onLocationAndPrivacyReset:
_onHasKoreaCountryCode:
_onUserLocationInsideKorea:
registerForLeechedEvents
unregisterForLeechedEvents
initWithQueue:settings:
_onServiceEnabled:
addDataSource:
removeDataSource:
queue
setQueue:
dataSources
setDataSources:
setService:
stateContext
setStateContext:
persistenceManager
setPersistenceManager:
persistenceManagerLastSaveTime
setPersistenceManagerLastSaveTime:
sessionID
setSessionID:
analyticsManager
setAnalyticsManager:
setRoutineManager:
_queue
_dataSources
_stateContext
_persistenceManager
_persistenceManagerLastSaveTime
_sessionID
_routineManager
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSHashTable",&,N,V_dataSources
T@"TATrackingAvoidanceService",&,N,V_service
T@"TASettings",&,N,V_serviceSettings
T@"TATrackingAvoidanceServiceStateContext",&,N,V_stateContext
T@"TAPersistenceManager",&,N,V_persistenceManager
TQ,N,V_persistenceManagerLastSaveTime
T@"NSUUID",&,N,V_sessionID
T@"TAAnalyticsManager",&,N,V_analyticsManager
T@"RTRoutineManager",&,N,V_routineManager
TQ,R,V_state
predicateForTAEventsInDateInterval:
predicateForTAEventsClass:
predicateForTAEventsClass:andEventSubtype:
initWithType:latitude:longitude:horizontalAccuracy:referenceFrame:date:
referenceFrame
initWithType:latitude:longitude:horizontalAccuracy:date:
_referenceFrame
TQ,R,N,V_type
TQ,R,N,V_referenceFrame
initWithState:date:
TQ,R,N,V_state
additionalInfo
initWithState:confidence:observationInterval:additionalInfo:date:
_peopleDensityState
_observationInterval
_additionalInfo
Tq,R,N,V_peopleDensityState
Td,R,N,V_confidence
T@"NSDateInterval",R,C,N,V_observationInterval
T@"NSDictionary",R,C,N,V_additionalInfo
initWithDetection:keepInStagingUntil:
_detection
_keepInStagingUntil
T@"TASuspiciousDevice",R,N,V_detection
T@"NSDate",C,N,V_keepInStagingUntil
initWithStartDate:duration:
initWithStartDate:endDate:
_activityType
TQ,R,N,V_activityType
_deviceObservationInterval
_deviceLocationHistory
_latestObservation
T@"NSDateInterval",R,N,V_deviceObservationInterval
T@"NSArray",R,N,V_deviceLocationHistory
T@"TASPAdvertisement",R,N,V_latestObservation
initWithVisitSnapshotCapacity:visitDisplayBufferCapacity:interVisitMetricSnapshotCapacity:interVisitSnapshotUpdateInterval:thresholdOfLocationRelevance:snapshotBufferTimeIntervalOfRetention:loiBufferPerTypeCapacity:loiBufferTimeIntervalOfRetention:maxNSigmaBetweenLastLocationAndVisit:qualitySnapshotDwellDuration:qualitySnapshotDisplayOnDuration:uniqueUTObservationCapPerVisit:sensitiveLOITypes:
_visitSnapshotCapacity
_visitDisplayBufferCapacity
_interVisitMetricSnapshotCapacity
_interVisitSnapshotUpdateInterval
_snapshotBufferTimeIntervalOfRetention
_loiBufferPerTypeCapacity
_loiBufferTimeIntervalOfRetention
_maxNSigmaBetweenLastLocationAndVisit
_qualitySnapshotDwellDuration
_qualitySnapshotDisplayOnDuration
_uniqueUTObservationCapPerVisit
TQ,R,N,V_visitSnapshotCapacity
TQ,R,N,V_visitDisplayBufferCapacity
TQ,R,N,V_interVisitMetricSnapshotCapacity
Td,R,N,V_interVisitSnapshotUpdateInterval
Td,R,N,V_snapshotBufferTimeIntervalOfRetention
TQ,R,N,V_loiBufferPerTypeCapacity
Td,R,N,V_loiBufferTimeIntervalOfRetention
TQ,R,N,V_maxNSigmaBetweenLastLocationAndVisit
Td,R,N,V_qualitySnapshotDwellDuration
Td,R,N,V_qualitySnapshotDisplayOnDuration
TQ,R,N,V_uniqueUTObservationCapPerVisit
initWithCapacity:
addUTAdvertisement:
scheduleInterVisitScanForAdvertisement:deviceRecord:clock:
latestLocation
updateLatestLocation:
updateImportantLOIs:currentDate:
stateTransitionDecisionGivenTACLVisit:
performStateTransitionDecision:store:visit:andAppendOutgoingRequestsTo:
addSystemState:
addScanState:
evictScheduledInterVisitScanWithClock:
updateInterVisitSnapshotWithStore:
updateInterVisitBackupSnapshotWithStore:
purgeVisitSnapshotBufferWithCurrentDate:
purgeInterVisitSnapshotBufferWithCurrentDate:
visitStateTypeToString:
notifyObserversOfStateChangeFromState:toState:
closeVisitSnapshotWithStore:visit:
evaluateLatestVisitSnapshotAndRecoverIfNecessary
openInterVisitSnapshotWithDepartureVisit:
issueInterVisitScanRequestIfNecessaryWithClosedSnapshot:store:andAppendOutgoingRequestsTo:
notifyObserversOfMetricsHint:
openVisitSnapshotWithStore:visit:andAppendOutgoingRequestsTo:
allValues
labelLoiTypeForLastVisitSnapshot:
issueVisitEntryScanRequestIfNecessaryWithOpenSnapshot:clock:andAppendOutgoingRequestsTo:
closeLatestInterVisitSnapshotWithStore:date:
openInterVisitBackupSnapshotWithArrivalVisit:
initWithTACLVisit:uniqueUTBufferCap:displayEventBufferSizeCap:maxNSigmaBetweenLastLocationAndVisit:
getAllTAEventsOf:between:
getDisplayEventsWithFirstPrecedingInInterval:store:
add:
setDepartureVisit:
indexOfObject:inSortedRange:options:usingComparator:
insert:at:
removeUntilFirstPredicateFail:
updateLoiType:
evaluateVisitEntry:clock:
evaluateInterVisitAfterVisitExit:displayEvents:advertisements:deviceRecord:clock:
initWithTime:maxUniqueAddresses:
lastUpdateTime
laterDate:
updateInterVisitMetric:withUpdatedTime:andCloseSnapshot:
updateInterVisitSnapshot:store:
evaluateSnapshotQualityWithMinDwellDuration:minDisplayOnDuration:
updateWithInterVisitMetricsSnapshot:
removeLastObject
resetInterVisitBackupSnapshot
getAllTAEventsOf:andEventSubtype:between:
arrayWithObject:
importantLois
scanRequest
interVisitMetricsSnapshotBackup
initWithSettings:scanRequestSettings:
isInSensitiveVisit
ingestTAEvent:store:appendOutgoingRequestsTo:
purgeWithClock:
recoverInterVisitSnapshotWithArrivalVisit:store:
setScanRequest:
setInterVisitMetricsSnapshotBackup:
_visitSnapshotBuffer
_interVisitMetricSnapshotBuffer
_importantLois
_scanRequest
_interVisitMetricsSnapshotBackup
T@"TAVisitStateSettings",&,N,V_settings
T@"TAScanRequest",&,N,V_scanRequest
T@"TAInterVisitMetricsSnapshot",&,N,V_interVisitMetricsSnapshotBackup
T@"TACircularBuffer",R,N,V_visitSnapshotBuffer
T@"TACircularBuffer",R,N,V_interVisitMetricSnapshotBuffer
T@"NSMutableDictionary",R,N,V_importantLois
hasHawkeyeAdvertisementPolicy
hasHawkeyeLowEnergyAdvertisementPolicy
initWithExpiryTimeInterval:purgeTimeInterval:keepAliveInterval:minimumStagingInterval:stagingBackstopHour:assumedKeyRollHour:scanInterval:surfaceImmediatelyBetweenBackstopAndKeyroll:
setExpiryTimeInterval:
setPurgeTimeInterval:
_surfaceImmediatelyBetweenBackstopAndKeyroll
_expiryTimeInterval
_purgeTimeInterval
_minimumStagingInterval
_stagingBackstopHour
_assumedKeyRollHour
_scanInterval
Td,N,V_expiryTimeInterval
Td,N,V_purgeTimeInterval
Td,R,N,V_keepAliveInterval
Td,R,N,V_minimumStagingInterval
Tq,R,N,V_stagingBackstopHour
Tq,R,N,V_assumedKeyRollHour
Td,R,N,V_scanInterval
TB,R,N,V_surfaceImmediatelyBetweenBackstopAndKeyroll
_getDeviceRecord:
_createRecordIfNecessaryWithAddress:withDate:
_convertTANotificationStateToTANotificationInternalState:
_setDevice:withInternalState:withDate:
_performNotificationStateTransitionActionsForDevice:from:to:
_clearStagedDetectionsForDevice:
_didSurfaceNotificationFor:
_setDevice:withExternalState:withDate:
_setDevice:withType:withDate:
_updateLatestAdvertisement:
logDeviceRecord
getDeviceType:
_isKnownDevice:
_determineKeepInStagingUntil:
lastPurgeDate
lastScanAttemptDate
getLatestAdvertisement:
checkForScanRequestsWithClock:andAppendOutgoingRequestsTo:
updateDeviceRecordOnSessionChangeWithCurrentDate:
forceStagedDetectionsToSurfaceImmediatelyWithAdvertisement:
setLastPurgeDate:
setLastScanAttemptDate:
_lastPurgeDate
_lastScanAttemptDate
T@"NSMutableDictionary",&,N,V_deviceRecord
T@"NSDate",&,N,V_lastPurgeDate
T@"NSDate",&,N,V_lastScanAttemptDate
T@"TADeviceRecordSettings",&,N,V_settings
dropOldestElement
indexOfObjectWithOptions:passingTest:
evaluateWithObject:
indexesOfObjectsPassingTest:
enumerateIndexesUsingBlock:
removeObjectsAtIndexes:
indexOfObjectPassingTest:
removeObjectAtIndex:
buffer
capacity
decodeObjectForKey:
objectsMatchingPredicate:
firstObjectMatchingTest:withOptions:
removeWithPredicate:
setBuffer:
_capacity
_buffer
T@"NSMutableArray",&,N,V_buffer
TQ,R,N,V_capacity
updateClock:
shouldAddTASPAdvertisement:
shouldAddTALocationLite:
shouldAddTACLVisit:
_lastLocationDate
_clock
_eventBuffer
T@"NSDate",R,N,V_clock
T@"TAEventBuffer",R,N,V_eventBuffer
T@"TAVisitState",R,N,V_visitState
T@"TADeviceRecord",R,N,V_deviceRecord
initWithStartTime:
dateByAddingTimeInterval:
useBudget
budgetRemaining
startTime
evaluatedUntil
initWithStartTime:budget:
completeDisplayOnWithEndDate:
calculateDisplayOnWithEvents:advertisements:endDate:
setUseBudget:
setBudgetRemaining:
setStartTime:
_useBudget
_evaluatedUntil
_budgetRemaining
_startTime
TB,N,V_useBudget
Td,N,V_budgetRemaining
T@"NSDate",&,N,V_startTime
T@"NSDate",R,N,V_evaluatedUntil
initWithBufferCapacity:bufferTimeIntervalOfRetention:
_bufferCapacity
_bufferTimeIntervalOfRetention
TQ,R,N,V_bufferCapacity
Td,R,N,V_bufferTimeIntervalOfRetention
updateLatestExpiredElements:
getAllTAEventsMatchingCompoundPredicate:
filterUsingPredicate:
sortUsingComparator:
_updateLatestElement:
getExpiredElementKeyForClass:andEventSubtype:
setValue:forKey:
_updateLatestElement:withKey:
getAllTAEventsOf:andEventSubtype:
getLatestElementOf:andEventSubtype:
_latestExpiredElements
_latestElements
maxUniqueAddresses
lastAdvPerDevice
firstAssociatedLocationPerDevice
lastAssociatedLocationPerDevice
initialTime
_isClosed
_initialTime
_lastUpdateTime
_maxUniqueAddresses
_accumulatedDeviceMetrics
_firstAssociatedLocationPerDevice
_lastAssociatedLocationPerDevice
_lastAdvPerDevice
TB,R,N,V_isClosed
T@"NSDate",R,N,V_initialTime
T@"NSDate",R,N,V_lastUpdateTime
TQ,R,N,V_maxUniqueAddresses
T@"NSMutableDictionary",R,N,V_accumulatedDeviceMetrics
T@"NSMutableDictionary",R,N,V_firstAssociatedLocationPerDevice
T@"NSMutableDictionary",R,N,V_lastAssociatedLocationPerDevice
T@"NSMutableDictionary",R,N,V_lastAdvPerDevice
_vehicleCategoryType
TQ,R,N,V_vehicleCategoryType
getLocationRepresentingSnapshot
location:withAdvertisementTimestamp:
aggregateObservationsThroughHistoryForSingleDetection:visitSnapshotBuffer:intervisitSnapshotBuffer:clock:
pruneDisplayEvents
setRepresentativeVisit:
closeSnapshotCleanup
mostRecentAdvertisementDate
updateEntryIntervalWithDisplayOnBudget:evaluateToEnd:
enumerateKeysAndObjectsUsingBlock:
calculateExitIntervalWithDisplayOnBudget:
getDisplayOnTimeUntilEndDate:
lruUtAdvertisementCache
uniqueUTBufferSizeCap
displayEventBufferSizeCap
displayEvents
exitIntervalBeginning
displayOnCalculator
distanceToClosestLoi
entryDurationOfConsiderationClosed
setLruUtAdvertisementCache:
setUniqueUTBufferSizeCap:
setDisplayEventBufferSizeCap:
setDisplayEvents:
setExitIntervalBeginning:
setDisplayOnCalculator:
setDistanceToClosestLoi:
setEntryDurationOfConsiderationClosed:
setMaxNSigmaBetweenLastLocationAndVisit:
_latestLocationInsideVisit
_representativeVisit
_latestLocation
_latestUtAdvertisements
_earliestUtAdvertisements
_lruUtAdvertisementCache
_uniqueUTBufferSizeCap
_displayEventBufferSizeCap
_displayEvents
_exitIntervalBeginning
_displayOnCalculator
_distanceToClosestLoi
_entryDurationOfConsiderationClosed
T@"NSMutableOrderedSet",&,N,V_lruUtAdvertisementCache
TQ,N,V_uniqueUTBufferSizeCap
TQ,N,V_displayEventBufferSizeCap
T@"NSMutableArray",&,N,V_displayEvents
T@"NSDate",&,N,V_exitIntervalBeginning
T@"TADisplayOnCalculator",&,N,V_displayOnCalculator
T@"NSNumber",&,N,V_distanceToClosestLoi
T@"NSDate",&,N,V_entryDurationOfConsiderationClosed
TQ,N,V_maxNSigmaBetweenLastLocationAndVisit
T@"TACLVisit",R,N,V_representativeVisit
T@"TALocationLite",R,C,N,V_latestLocation
T@"NSMutableDictionary",R,N,V_latestUtAdvertisements
T@"NSMutableDictionary",R,N,V_earliestUtAdvertisements
TB,R,N,V_latestLocationInsideVisit
initWithMinVisitEntryDisplayOnDuration:minInterVisitDisplayOnDuration:interVisitScanDelay:maxInterVisitScanRequests:
_minVisitEntryDisplayOnDuration
_minInterVisitDisplayOnDuration
_interVisitScanDelay
_maxInterVisitScanRequests
Td,R,N,V_minVisitEntryDisplayOnDuration
Td,R,N,V_minInterVisitDisplayOnDuration
Td,R,N,V_interVisitScanDelay
TQ,R,N,V_maxInterVisitScanRequests
shouldScanOnAdvertisement:withDeviceRecord:
lastScanRequestedDate
interVisitScanCount
scheduledScanRequest
setLastScanRequestedDate:
setInterVisitScanCount:
_scheduledScanRequest
_lastScanRequestedDate
_interVisitScanCount
T@"NSDate",&,N,V_lastScanRequestedDate
TQ,N,V_interVisitScanCount
T@"TAScanRequestSettings",R,N,V_settings
T@"NSDate",R,N,V_scheduledScanRequest
@32@0:8@16@24
@24@0:8@16
@40@0:8@16@24@32
@16@0:8
v16@0:8
@"NSString"
@"NSDictionary"
@"NSDate"
B16@0:8
@24@0:8^{_NSZone=}16
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@64@0:8@16@24@32@40@48Q56
B24@0:8@16
Q16@0:8
@"NSData"
@"TASPAdvertisement"
@"NSArray"
@"TAMetricsDetection"
@24@0:8Q16
@"TADeviceRecord"
@"TAVisitState"
{?=Qd}32@0:8@16@24
@60@0:8d16d24d32d40d48B56
@64@0:8@16@24@32@40@48@56
d16@0:8
@40@0:8@16@24d32
v48@0:8@16@24@32d40
d24@0:8@16
B32@0:8@16@24
B56@0:8Q16d24d32@40@48
@48@0:8d16d24@32@40
@48@0:8@16@24@32@40
@"TAFilterVisitsSettings"
@"NSSet"
@72@0:8d16d24Q32d40d48@56d64
@72@0:8@16@24@32@40@48@56@64
Q32@0:8@16@24
B48@0:8Q16Q24d32@40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"TASPAdvertisement"16@0:8
@"NSDateInterval"
@"NSNumber"
@48@0:8@16Q24q32B40B44
q16@0:8
@"TAInterVisitMetricPerDevice"
@40@0:8d16d24Q32
@32@0:8@16Q24
@56@0:8Q16@24@32@40@48
@"TAGeneralDetectionMetrics"
@"TAVisitDetectionMetrics"
@"TASingleVisitDetectionMetrics"
Q24@0:8Q16
@32@0:8d16Q24
v24@0:8d16
v24@0:8Q16
@"TAInterVisitMetricPerDeviceSettings"
v20@0:8B16
@"TAFilterGeneralSettings"
@"TAFilterSingleVisitSettings"
@"TAEventBufferSettings"
@"TAVisitStateSettings"
@"TADeviceRecordSettings"
@"TAScanRequestSettings"
@"TATrackingAvoidanceServiceSettings"
@"TAPersistenceManagerSettings"
@"TAAnalyticsManagerSettings"
@32@0:8@16^@24
@36@0:8B16B20B24d28
v40@0:8@16Q24Q32
v32@0:8@16Q24
v40@0:8@"TAVisitState"16Q24Q32
v32@0:8@"TAVisitState"16Q24
v24@0:8@"<TATrackingAvoidanceServiceObserver>"16
v24@0:8@"<TAEventProtocol>"16
@"TAStore"
@"TASettings"
@"NSHashTable"
@"TAOutgoingRequests"
B40@0:8@16@24@32
v32@0:8@16@24
B40@0:8@"OSLogPersistence"16@"NSArray"24@"NSError"32
v32@0:8@"NSDate"16@"NSDate"24
B32@0:8@"OSActivityStream"16@"NSArray"24
v24@0:8@"OSActivityStream"16
v32@0:8@"OSActivityStream"16@"NSError"24
B40@0:8@"OSActivityStream"16@"NSArray"24@"NSError"32
B56@0:8@16@24@32q40@48
B56@0:8@"OSActivityStream"16@"NSString"24@"OSLogDevice"32q40@"NSError"48
@"TATrackingAvoidanceService"
@"OSLogPersistence"
@"OSActivityStream"
@"NSObject<OS_dispatch_semaphore>"
@"NSURL"
@"TAAnalyticsManager"
v40@0:8@"<OSLogCoder>"16Q24Q32
@"NSDate"16@0:8
@"NSDictionary"16@0:8
@60@0:8@16@24C32@36q44@52
@68@0:8@16@24C32@36q44@52@60
C16@0:8
@"NSUUID"
v32@0:8@"TATrackingAvoidanceService"16@"NSArray"24
v24@0:8@"TATrackingAvoidanceService"16
v32@0:8@"NSURL"16Q24
@56@0:8@16Q24Q32@40d48
@"NSMutableArray"
B48@0:8@16@24Q32d40
d40@0:8@16@24Q32
{?=ddd}32@0:8@16@24
@48@0:8@16d24d32d40
@148@0:8@16d24d32d40d48d56d64d72d80d88d96d104d112d120d128d136B144
B40@0:8@16Q24d32
@"TAPersistenceStore"
@48@0:8Q16Q24Q32@40
@48@0:8@16Q24Q32@40
@40@0:8Q16Q24@32
@36@0:8Q16B24@28
@72@0:8{CLLocationCoordinate2D=dd}16d32@40@48@56Q64
{CLLocationCoordinate2D=dd}16@0:8
{CLLocationCoordinate2D="latitude"d"longitude"d}
v32@0:8Q16Q24
@"NSObject<OS_dispatch_queue>"
@"TATrackingAvoidanceServiceStateContext"
@"TAPersistenceManager"
@"RTRoutineManager"
@24@0:8#16
@32@0:8#16Q24
@56@0:8Q16d24d32d40@48
@64@0:8Q16d24d32d40Q48@56
@32@0:8Q16@24
@56@0:8q16d24@32@40@48
@"TASuspiciousDevice"
@120@0:8Q16Q24Q32d40d48d56Q64d72Q80d88d96Q104@112
@120@0:8@16@24@32@40@48@56@64@72@80@88@96@104@112
v40@0:8@16@24@32
B24@0:8Q16
Q24@0:8@16
v48@0:8Q16@24@32@40
@"TACircularBuffer"
@"NSMutableDictionary"
@"TAScanRequest"
@"TAInterVisitMetricsSnapshot"
@76@0:8d16d24d32d40Q48Q56d64B72
@80@0:8@16@24@32@40@48@56@64@72
v40@0:8@16Q24@32
@32@0:8@?16Q24
@"TAEventBuffer"
@32@0:8@16d24
d40@0:8@16@24@32
@32@0:8Q16d24
@32@0:8#16@24
@40@0:8#16Q24@32
v36@0:8@16@24B32
@48@0:8@16Q24Q32Q40
v28@0:8d16B24
@24@0:8d16
d24@0:8d16
Q32@0:8d16d24
@"TACLVisit"
@"TALocationLite"
@"NSMutableOrderedSet"
@"TADisplayOnCalculator"
@48@0:8d16d24d32Q40
@56@0:8@16@24@32@40@48
