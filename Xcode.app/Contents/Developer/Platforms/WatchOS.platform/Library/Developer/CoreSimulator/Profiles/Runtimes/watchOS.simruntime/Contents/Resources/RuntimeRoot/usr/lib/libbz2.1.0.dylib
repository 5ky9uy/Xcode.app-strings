@(#)PROGRAM:bz2.1.0  PROJECT:bzip2-44
US]CQ
^(BM
kZ;&
      %d work, %d block, ratio %5.2f
    too repetitive; using fallback sorting algorithm
        bucket sorting ...
        depth %6d has 
%6d unresolved strings
        reconstructing block ...
        main sort initialise ...
        qsort [0x%x, 0x%x]   done %d   this %d
        %d pointers, %d sorted, %d scanned
bzip2/libbzip2: internal error number %d.
This is a bug in bzip2/libbzip2, %s.
Please report it to me at: jseward@bzip.org.  If this happened
when you were using some program which uses libbzip2 as a
component, you should also report this bug to the author(s)
of that program.  Please make an effort to report this bug;
timely and accurate bug reports eventually lead to higher
quality software.  Thanks.  Julian Seward, 10 December 2007.
*** A special note about internal error number 1007 ***
Experience suggests that a common cause of i.e. 1007
is unreliable memory or other hardware.  The 1007 assertion
just happens to cross-check the results of huge numbers of
memory reads/writes, and so acts (unintendedly) as a stress
test of your memory system.
I suggest the following: try compressing the file again,
possibly monitoring progress in detail with the -vv flag.
* If the error cannot be reproduced, and/or happens at different
  points in compression, you may have a flaky memory system.
  Try a memory-test program.  I have used Memtest86
  (www.memtest86.com).  At the time of writing it is free (GPLd).
  Memtest86 tests memory much more thorougly than your BIOSs
  power-on test, and may find failures that the BIOS doesn't.
* If the error can be repeatably reproduced, this is a bug in
  bzip2, and I would very much like to hear about it.  Please
  let me know, and, ideally, save a copy of the file causing the
  problem -- without which I will be unable to investigate it.
 {0x%08x, 0x%08x}
    combined CRCs: stored = 0x%08x, computed = 0x%08x
1.0.6, 6-Sept-2010
SEQUENCE_ERROR
PARAM_ERROR
MEM_ERROR
DATA_ERROR
DATA_ERROR_MAGIC
IO_ERROR
UNEXPECTED_EOF
OUTBUFF_FULL
CONFIG_ERROR
    block %d: crc = 0x%08x, combined CRC = 0x%08x, size = %d
    final combined CRC = 0x%08x
      %d in block, %d after MTF & 1-2 coding, %d+2 syms in use
      initial group %d, [%d .. %d], has %d syms (%4.1f%%)
      pass %d: size is %d, grp uses are 
      bytes: mapping %d, 
selectors %d, 
code lengths %d, 
codes %d
    [%d: huff+mtf 
rt+rld
