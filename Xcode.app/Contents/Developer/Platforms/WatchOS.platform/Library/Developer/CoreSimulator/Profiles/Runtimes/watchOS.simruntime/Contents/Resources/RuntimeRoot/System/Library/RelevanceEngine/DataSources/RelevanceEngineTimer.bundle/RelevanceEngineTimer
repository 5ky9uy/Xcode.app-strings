?@(#)PROGRAM:RelevanceEngineTimer  PROJECT:RelevanceEngine-1
init
defaultCenter
_timerDidChangeNotification:
addObserver:selector:name:object:
delegate
invalidateElements
logHeader
removeObserver:
state
setState:
_updateDisplayWithCurrentTimer
arrayWithObjects:count:
currentTimer
elementOperationQueue
isEqual:
_isTimerVisible:
duration
_queue_timerElement:
addCompletionBlock:
remainingTime
_queue_createNewElement:
initWithStartDate:endDate:
initWithGroupIdentifier:
URLWithString:
initWithURL:applicationID:
_queue_idealizedContent
initWithIdentifier:content:idealizedContent:action:relevanceProviders:
isEqualToString:
refreshElement:
name
userInfo
objectForKeyedSubscript:
count
firstObject
_updateDisplayWithTimer:
hasElementWithId:inSectionWithIdentifier:
timerID
addElements:toSectionWithIdentifier:
removeElementsWithIds:
_queue_updateDisplayWithTimer:
bundleIdentifier
resume
pause
supportedSections
getElementsInSection:withHandler:
elementWithIdentifierWillBecomeVisible:
elementWithIdentifierDidBecomeHidden:
.cxx_destruct
_timerManager
_lastTimerDuation
_idealizedContent
dataSourceClassForKey:
initWithForcedRelevance:
identifier
content
idealizedContent
action
privacyBehavior
initWithIdentifier:content:idealizedContent:action:relevanceProviders:privacyBehavior:
initWithIdentifier:content:action:relevanceProviders:
bundleForClass:
textProviderWithText:
setHeaderTextProvider:
colorWithRed:green:blue:alpha:
setTintColor:
imageProviderWithOnePieceImage:twoPieceImageBackground:twoPieceImageForeground:
setHeaderImageProvider:
date
dateByAddingTimeInterval:
textProviderWithDate:style:units:
setPauseTimerAtZero:
setTwoDigitMinuteZeroPadding:
setOverrideDate:
setDescription1TextProvider:
setSummaryTextProvider:
setStyle:
setCircularTempate:
localizedStringForKey:value:table:
%@ resume
%@ pause
%@ transitioning to paused state.
%@ transitioning to live state.
%@ getElements
%@ returning timer element for timer with duration: %ld state: %ld
%@ updating because elementId:%@ is equal to: %@
%@ refreshing because elementId:%@ is equal to: %@
%@ received %{public}@ notification.
%@ received %{public}@ notification, but there are no included timers; just update with the current timer.
%{public}@ timer (%{public}@) is currently displayed and should be; refresh.
%{public}@ timer (%{public}@) is not currently displayed and should be; add.
%{public}@ timer (%{public}@) is currently displayed and should not be; remove.
%{public}@ timer (%{public}@) is not currently displayed and should not be; do nothing.
%{public}@ update display with timer (%{public}@). Timer? %@.
%{public}@ unable to update display with timer (%{public}@) because elementOperationQueue is nil! Timer? %@.
%{public}@ update display with current timer.
%{public}@ unable to update display with current timer: %{public}@.
v8@?0
v24@?0@"MTTimer"8@"NSError"16
nanotimer://
v16@?0@"NSArray"8
com.apple.private.NanoTimer
com.apple.private.NanoTimer.timer
UP_NEXT_TIMER_TITLE
Timer
SG_timer_background
SG_timer_foreground
TimerDataSource
RETimerDataSource
RETimerBundleConfiguration
RETimerDemoDataSource
RETimerSampleDataSource
@16@0:8
v16@0:8
v24@0:8Q16
v32@0:8@16@?24
@24@0:8@16
@20@0:8B16
v24@0:8@16
B24@0:8Q16
@"MTTimerManager"
@"REContent"
#24@0:8@16
