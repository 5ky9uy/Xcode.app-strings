com.apple.appstored
@"<ASDDiagnosticServiceProtocol>"8@?0
@"<ASDInstallationServiceProtocol>"8@?0
@"<ASDAppLibraryServiceProtocol>"8@?0
@"<ASDPurchaseServiceProtocol>"8@?0
@"<ASDPurchaseHistoryServiceProtocol>"8@?0
@"<ASDRepairServiceProtocol>"8@?0
@"<ASDUpdatesServiceProtocol>"8@?0
@"<ASDCrossfireServiceProtocol>"8@?0
v8@?0
Activity
InGameAnalytics
AppUseage
Cleanup
DAAP
Daemon
Download
General
Install
Library
Daemon-Oversize
PrivilegedTask
Purchase
Repair
Restore
Scheduler
Signpost
SoftwareMap
StoreKit
TestFlightFeedback
Updates
com.apple.appstored.ThermalPressureMonitor
elevated
nominal
TB,R,GisElevated,V_elevated
ThermalPressureStateDidChangeNotification
com.apple.appstored.AppUsageBaseManager.dispatch
0123456789
Simulator
Last update date not set
Start update must be set before getting events
watchos
v24@?0@"ApplicationProxy"8^B16
%@:%ld
PROXY_AUTHENTICATION_MESSAGE_%@_%@
SERVER_AUTHENTICATION_MESSAGE_%@
SECURE_AUTH
INSECURE_AUTH
PROXY_AUTHENTICATION_TITLE
SERVER_AUTHENTICATION_TITLE
localizedMessage
T@"NSString",&,N,V_localizedMessage
localizedTitle
T@"NSString",&,N,V_localizedTitle
user
T@"NSString",&,N,V_user
B16@?0@"AppInstallsDatabaseTransaction"8
v32@?0@"StoreItem"8Q16^B24
productType
price
salableAdamId
STDRDL
v24@?0@"NSArray"8@"NSError"16
com.apple.appstored.DeviceStateMonitor
dataMigrationComplete
TB,R,GisDataMigrationComplete,V_dataMigrationComplete
deviceLocked
TB,R,GisDeviceLocked,V_deviceLocked
setupComplete
TB,R,GisSetupComplete,V_setupComplete
DeviceStateDidChangeNotification
action-params
appsApple
bundle-id
name
offers
value
version
versionId
{ bundleID: %@ itemID: %@ evid: %@ }
bundleID
T@"NSString",R,N,V_bundleID
buyParams
T@"NSString",R,N
evid
T@"NSNumber",R,N,V_evid
background
TB,N,GisBackground
itemID
T@"NSNumber",R,N,V_itemID
installDate
T@"NSDate",N
offloaded
TB,N,GisOffloaded
perDevice
TB,N,GisPerDevice
parentalControlsName
parentalControlsRank
Tq,R,N,V_parentalControlsRank
releaseDate
T@"NSDate",R,N,V_releaseDate
current_apps_crossfire
B32@?0@8Q16^B24
v32@?0@"<NSFastEnumeration>"8Q16^B24
v32@?0@8Q16^B24
com.apple.message-payload-provider
iTunesMetadata.plist
lib_downloaderDSID
lib_extensionTypes
lib_isFamilyShared
lib_isOpenable
lib_isOcelot
lib_purchaserDSID
lib_purchaseOwner
T@"PurchaseOwner",R
lib_storeMetadata
T@"MIStoreMetadata",R
AppStoreDaemon
completedUnitCount
totalUnitCount
-[XDCProgress writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppStoreDaemon_Sim/AppStoreDaemon-6.0.112.5/Libraries/LibAppStoreDaemon/Messaging/Generated/XDCProgress.m
Tq,N,V_completedUnitCount
Tq,N,V_totalUnitCount
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
connection
T@"SQLiteConnection",R
T@"SQLiteConnection",R,V_connection
metrics/scorecardInstallSamplingPercentage
v24@?0@"NSNumber"8@"NSError"16
%@:%ld:%ld:%lld
foregroundEvents
T@"NSArray",R,N
Apps uninstalled
v32@?0@"SQLiteMemoryEntity"8Q16^B24
v32@?0@"AppUpdateMemoryEntity"8Q16^B24
v32@?0@"NSNumber"8@"AppUpdateMemoryEntity"16^B24
TB,GisAutomatic,V_automatic
bytes
TQ,V_bytes
T@"NSString",&,V_name
remaining
TB,GisRemaining,V_remaining
TB,GisUpdate,V_update
Failed to find valid application: %@
Invalid container for application: %@
Invalid receipt data (%lu bytes) or missing identifier `%@
mobile
sandboxReceipt
receipt
Failed to write receipt for container: %@
%@: {type = %ld; DSID = %@}
ownerType
Tq,R,V_ownerType
restorable
TB,R,GisRestorable
lib_statusCode
com.apple.appstored.CrossfireManager.events
com.apple.PersonalizationManager.setupFollowingMigration
com.apple.appstored.CrossfireManager.postMetrics
com.apple.appstored.CrossfireManager.switchMetrics
xp_amp_app_usage_analytics
itsmetrics_test
App Usage not Enabled
External request
User Request
B16@?0@"AppUsageDatabaseTransaction"8
DELETE FROM current_apps_crossfire;
v16@?0@"AppUsageDatabaseSession"8
DELETE FROM app_events_crossfire where is_temporary = 1;
v20@?0B8@"NSError"12
Analytics Switch Status Changed
Post skipped for crossfire interval
Post Completed
Nothing to Post
DELETE FROM app_events_crossfire;
com.apple.appstored.CrossfireManager.callout
com.apple.appstored.CrossfireManager.dispatch
appstored
ActiveDSID
AutoDownloadsEnabled
AutoSettingsData
com.apple.appstored.NanoSettingsStateChanged
WatchSettingsManagerSettingsChangedExternallyNotification
com.apple.appstored.WatchSettingsManager.callout
com.apple.appstored.WatchSettingsManager.dispatch
enabled-media-types-url
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/enabledMediaTypes
register-media-types-url
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/registerMediaTypes
activeDSID
T@"NSNumber",&,N
('%@:%d')
com.apple.itunes.extended-media-kind
revision-number=%u&query=%@
applicableEntitlement
T{_ASDServiceEntitlement=@@},R,V_applicableEntitlement
mergeHandler
T@?,R,C,V_mergeHandler
T@"NSString",R,C,V_name
Repair Service
{ bundleID: %@ itemID: %@ evid: %@ storefront: %@ account: %@ }
fetchLatestVersion
TB,V_fetchLatestVersion
T@"NSNumber",R
appleID
T@"NSString",R
downloaderID
storefront
endId
guid
kbsync
startId
%llu
account
T@"ACAccount",R,V_account
storeItems
T@"NSOrderedSet",R,C,V_storeItems
v32@?0@"NSString"8@"NSString"16^B24
bytesReceived
TQ,V_bytesReceived
dataConsumer
T@"<AssetDataConsumer>",&,V_dataConsumer
error
T@"NSError",&,V_error
%@ %@
metadata
metadatas
T@"NSMutableArray",&,N,V_metadatas
Application only supports 32-bit architecture
Found duplicate application for `%@`
User has disabled automatic downloads
Restrictions prohibit automatic downloads
installID
Tq,R
packageID
preflightResponse
T@"AppInstallPreambleResponse",R
Tq,R,V_installID
coordinator
T@"IXAppInstallCoordinator",R,V_coordinator
T@"NSError",R,V_error
result
Tq,R,V_result
T@"XDCDevice",&,V_device
messageID
T@"NSString",&,V_messageID
reply
TB,GisReply,V_reply
messagePayload
T@"NSData",R,V_messagePayload
messageType
Tq,R,V_messageType
Invalid hash '%@' expected '%@'
bytesProcessed
TQ,R,V_bytesProcessed
bytesValidated
TQ,R,V_bytesValidated
askToBuy
firstName
ICloudDsid
accountName
ITunesPreferredDsid
ITunesPreferredAccountName
lastName
sharingPurchases
iCloudDSID
iCloudUsername
isCurrentSignedInUser
true
false
iTunesDSID
iTunesUsername
isAskToBuyEnabled
isSharingPurchases
currentSignedInUser
TB,N,GisCurrentSignedInUser,V_currentSignedInUser
dictionaryRepresentation
T@"NSDictionary",R,N
askToBuyEnabled
TB,R,N,GisAskToBuyEnabled,V_askToBuyEnabled
T@"NSString",R,N,V_firstName
T@"NSNumber",R,N,V_iCloudDSID
T@"NSString",R,N,V_iCloudUsername
T@"NSNumber",R,N,V_iTunesDSID
T@"NSString",R,N,V_iTunesUsername
T@"NSString",R,N,V_lastName
TB,R,N,GisSharingPurchases,V_sharingPurchases
CREATE TABLE IF NOT EXISTS app_updates (pid INTEGER, bundle_id TEXT, install_date DATETIME, is_background INTEGER NOT NULL DEFAULT 0, is_offloaded INTEGER NOT NULL DEFAULT 0, is_per_device INTEGER NOT NULL DEFAULT 0, is_profile_validated INTEGER NOT NULL DEFAULT 0, metrics_data JSON, purchase_id INTEGER DEFAULT 0, release_date DATETIME, store_item_data JSON, store_item_id INTEGER NOT NULL DEFAULT 0, store_software_version_id INTEGER, timestamp DATETIME DEFAULT (timestamp()), update_state INTEGER NOT NULL DEFAULT 0, UNIQUE(bundle_id) ON CONFLICT REPLACE,PRIMARY KEY (pid));
app_updates
v16@?0@"SQLiteDatabaseStoreMigrator"8
DELETE FROM app_updates WHERE is_profile_validated = 1;
identifier
dpInfo
sinf
Bundle identifier is required (source = '%ld')
Item identifier is required (source = '%ld')
activeBootstrap
T@"SQLitePredicate",R
activeInstalls
pendingBootstrap
pendingInstalls
pendingRestoreMetadataLookup
pendingRestoresNeedingOrdering
pendingRestoreSoftFailures
restoreHardFailures
com.apple.appstoreagent
Authentication not supported
v24@?0@"AMSAuthenticateResult"8@"NSError"16
v16@?0@"AMSLazyPromise"8
authenticateReason
Tq,V_authenticateReason
silentAuthOnly
TB,V_silentAuthOnly
TargetDate
PostIntervalOverrideSeconds
RestoreItemKinds
RestoreStoreFrontIDs
RestoreAccountIDs
automaticDownloadKinds
AppUsageMigratedDB
CrossfireIntervalStartDate
CrossfireNextPostTargetDate
CrossfirePostIntervalOverride
CrossfirePostMetricsSamplingPercentageOverride
AppUsageActorID
AppClusterMappingRefreshIntervalOverride
AppClusterMappingRefreshTargetDate
TasteProfileEnabled
AppUsageDailyPostCountOverride
AppUsageEnableMetricsForActorIDSession
AppUsageFlushIntervalOverride
AppUsageFlushTargetDate
AppUsageIntervalStartDate
AppUsageLaunchesIntervalStartDate
AppUsageNextPostTargetDate
AppUsagePostMetricsSamplingPercentageOverride
AppUsageResetActorIDOverride
AppUsageResetActorIDTargetDate
AppUsageTaskGracePeriodOverride
AppUsageUseTestTopic
BadgeCount
MarketingDemoMode
EmulateCellularNetwork
EmulateConstrainedNetwork
EmulateRoamingNetwork
OffloadBlacklist
OffloadCutoffDateOverride
OffloadRecentInstallCutoffDate
OffloadPluginBlacklist
OffloadUnusedApps
OffloadingGracePeriodStartDate
BeagleApps
AnalyticsClientIDOverride
ArcadeDeviceID
ArcadePayoutDeviceID
ArcadeIntervalStartDate
ArcadePayoutResetDate
ArcadePayoutIntervalStartDate
ArcadeSubscriptionState
PowerPluggedInOverride
AttemptedPreflightAccounts
FollowUpAccounts
RestoreSuppressTermsAndConditions
com.apple.itunesstored
PerformedPostRestoreUpdate
RestoreSoftFailureRetryDate
ShowPendingUpdatesBadge
ManageSubsOnDeleteBlacklist
UpdateCleanupTime
LastUpdatesCheck
LastAutoUpdateCompletion
PreviouslyInstalledProvisionedApps
LastUpdatesPerform
AutoUpdatesEnabled
UseFollowupsForRestoreFailures
ForceAppDRMMode
AllowAutoDownloadOnCellular
AutomationRunning
EnableBatterySaverOnStartup
CellularSizeLimitOverride
AppClaimHistory
UpdateMigratorConfiguration
DaemonCommsSemaphore
JobApprovalDate
DisablePowerOnStartup
ExternalManifestSkipHTTPSCheck
InvalidBuildToolVersions
DownloadsScratchGarbageCollectionTime
JobCleanupTime
LastOSInstallDate
LastOSBuildVersion
MaxConcurrentJobCount
MaxConcurrentThermalLimitedJobCount
TransporterConfiguration
TestFlightFeedbackOverrides
ThermalCheckEnabled
UseAppInstallQueue
UseLaunchCountsForAppUsage
UseModernFreeSpaceCheck
appUsageUseTestTopic
appUsageDBMigrated
emulateCellularNetwork
emulateConstrainedNetwork
emulateRoamingNetwork
crossfireIntervalStartDate
crossfireNextPostTargetDate
T@"NSDate",&
crossfirePostIntervalSecondsOverride
crossfirePostMetricsSamplingPercentageOverride
appClusterMappingRefreshIntervalOverride
appClusterMappingRefreshTargetDate
appTasteProfileEnabled
appUsageActorID
T@"NSString",&
appUsageFlushDnuIntervalOverride
appUsageFlushDnuTargetDate
appUsageIntervalStartDate
appUsageLaunchesIntervalStartDate
appUsageNextPostTargetDate
appUsageDailyPostCountOverride
appUsageEnableMetricsForActorIDSession
appUsagePostMetricsSamplingPercentageOverride
appUsageResetActorIDOverride
appUsageResetActorIDTargetDate
appUsageTaskGracePeriodOverride
ocelotAppAnalyticsClientID
ocelotApps
T@"NSArray",&
ocelotPayoutDeviceID
ocelotPayoutResetDate
ocelotIntervalStartDate
ocelotPayoutIntervalStartDate
appPurgeCutoffDate
appPurgeBlacklist
appPurgePluginBlacklist
appPurgeRecentInstallCutoffDate
offloadingAppsEnabled
offloadingGracePeriodStartDate
powerPluggedInOverride
attemptedPreflightAccountIDs
followUpAccounts
T@"NSDictionary",&
performedPostRestoreSoftwareUpdate
restoreItemKinds
restoreSoftFailureRetryDate
useFollowUpsForRestoreFailures
shouldSuppressTermsAndConditionsDialogs
manageSubsOnDeleteBlacklist
lastAutoUpdateCompletionDate
lastUpdateCleanupDate
lastUpdateCheckDate
previouslyInstalledProvisionedApps
shouldPerformAutomaticUpdates
forceDrmMode
install_date
is_background
is_offloaded
is_per_device
metrics_data
purchase_id
release_date
store_item_data
store_software_version_id
update_state
AMSServerErrorCode
Please provide one or more restore items to restore
Unable to determine account for content restore. Requested account: %@
Token failure (%@)
Metadata / Error for this item is missing in server response
Unsupported 32-Bit application
Incompatible application
T@"ACAccount",C,V_account
skipLatestVersionCheck
TB,V_skipLatestVersionCheck
userInitiated
TB,GisUserInitiated,V_userInitiated
hardFailures
T@"NSArray",R,V_hardFailures
softFailures
T@"NSArray",R,V_softFailures
successfulItems
T@"NSArray",R,V_successfulItems
itemID is missing
T@"NSMutableArray",R,N,V_hardFailures
itemMap
T@"NSDictionary",R,V_itemMap
remainingItemIDs
T@"NSMutableArray",R,N,V_remainingItemIDs
T@"NSMutableArray",R,N,V_softFailures
T@"NSMutableArray",R,N,V_successfulItems
targetItems
T@"NSArray",R,V_targetItems
application/x-dmap-tagged
application/x-www-form-urlencoded
Client-Cloud-Daap-Version
Client-Cloud-Purchase-DAAP-Version
UNKNOWN
%@/%@
%lli
X-FM-Dsid
T@"ACAccount",&,V_account
accountID
Tq,V_accountID
clientInfo
T@"AMSProcessInfo",&,V_clientInfo
logUUID
T@"NSString",&,V_logUUID
com.apple.appstored.NetworkMonitor
path
com.apple.appstored.defaultschange
v12@?0i8
v24@?0@"CTDataStatus"8@"NSError"16
connected
TB,R,GisConnected,V_connected
constrained
TB,R,GisConstrained,V_constrained
expensive
TB,R,GisExpensive,V_expensive
interfaceType
Tq,R,V_interfaceType
roaming
TB,R,GisRoaming,V_roaming
NetworkStateDidChangeNotification
Existing coordinators:
  %@
B16@?0@"IXAppInstallCoordinator"8
  ~ END ~
Active installations:
  (%3ld) %@
v32@?0@"AppInstall"8Q16^B24
v16@?0@"AppInstallsDatabaseSession"8
v24@?0@"XDCMessage"8@"NSError"16
Diagnostic
daap.databasesongs
dmap.listing
dmap.deletedidlisting
dmap.listingitem
com.apple.itunes.item-flavor-listing
com.apple.itunes.bundle-identifier
com.apple.itunes.store.software-content-rating
daap.songdatepurchased
daap.songartist
com.apple.itunes.store.family-shareable
com.apple.itunes.store.first-party-updatable
com.apple.itunes.store.has-messages-extension
dmap.itemhidden
com.apple.itunes.store.is-hidden-from-springboard
com.apple.itunes.cloud-artwork-template-url
com.apple.itunes.store.software-is-32-bit-only
com.apple.itunes.store.is-preorder
com.apple.itunes.long-item-name
com.apple.itunes.store.oval-artwork-url
com.apple.itunes.store.preflight-url
com.apple.itunes.store.product-url
com.apple.itunes.item-redownload-param-2
com.apple.itunes.store.app-required-capabilities-listing
com.apple.itunes.store.app-required-capabilities
com.apple.itunes.itms-songid
com.apple.itunes.supported-products
com.apple.itunes.cloud-purchased-token
dmap.longitemid
dmap.status
dmap.updatetype
dmap.serverrevision
com.apple.itunes.itms-genreid
daap.songgenre
com.apple.itunes.store.watch-app-delivered-in-ios-app
com.apple.itunes.store.watch-app-runs-independently
com.apple.itunes.store.watch-app-watch-only
com.apple.itunes.cloud-artwork-supports-layered-image
com.apple.itunes.cloud-artwork-has-p3
dmap.itemname
com.apple.itunes.circular-artwork-template-url
com.apple.appstored.Environment
systemDatabase
T@"SQLiteDatabase",R
userDatabase
%08X
%@: count %lu exceeds available length: %lu
lib_legacyJobID
lib_logUUID
lib_signpostId
iap_info_iaps
type
altDSID
externalIDString
externalVersionID
purchaserID
redownloadParams
artworkURLString
containsMessagesExtension
itemName
launchProhibited
messagesArtworkURLString
packageDPInfo
packageSINF
packageURLString
storeCohort
storeFront
vendorName
provisioningProfile
variantID
skipIfInstalled
isBeta
isSystemApp
isStoreApp
bundleVersion
manifestURLString
suppressDialogs
hasType
TB,N
Ti,N,V_type
hasAltDSID
TB,R,N
T@"NSString",&,N,V_altDSID
hasAppleID
T@"NSString",&,N,V_appleID
hasBundleID
T@"NSString",&,N,V_bundleID
hasDownloaderID
TQ,N,V_downloaderID
hasExternalIDString
T@"NSString",&,N,V_externalIDString
hasExternalVersionID
TQ,N,V_externalVersionID
hasItemID
TQ,N,V_itemID
hasPurchaserID
TQ,N,V_purchaserID
hasRedownloadParams
T@"NSString",&,N,V_redownloadParams
hasArtworkURLString
T@"NSString",&,N,V_artworkURLString
hasContainsMessagesExtension
TB,N,V_containsMessagesExtension
hasItemName
T@"NSString",&,N,V_itemName
hasLaunchProhibited
TB,N,V_launchProhibited
hasMessagesArtworkURLString
T@"NSString",&,N,V_messagesArtworkURLString
hasPackageDPInfo
T@"NSData",&,N,V_packageDPInfo
hasPackageSINF
T@"NSData",&,N,V_packageSINF
hasPackageURLString
T@"NSString",&,N,V_packageURLString
hasStoreCohort
T@"NSString",&,N,V_storeCohort
hasStoreFront
T@"NSString",&,N,V_storeFront
hasVendorName
T@"NSString",&,N,V_vendorName
provisioningProfiles
T@"NSMutableArray",&,N,V_provisioningProfiles
hasVariantID
T@"NSString",&,N,V_variantID
hasSkipIfInstalled
TB,N,V_skipIfInstalled
hasIsBeta
TB,N,V_isBeta
hasIsSystemApp
TB,N,V_isSystemApp
hasIsStoreApp
TB,N,V_isStoreApp
hasBundleVersion
T@"NSString",&,N,V_bundleVersion
hasManifestURLString
T@"NSString",&,N,V_manifestURLString
hasSuppressDialogs
TB,N,V_suppressDialogs
v24@?0@"AMSDialogResult"8@"NSError"16
The manifest URL isn't external
B16@?0@"UPPManifestAsset"8
v32@?0@"NSString"8@"NSArray"16^B24
software
Not compatible with this platform: %@
No manifest data received
Provided hash did not match
Manifest could not be parsed
User canceled confirmation
https
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
clientID
T@"NSString",&,V_clientID
manifestDigest
T@"NSString",&,V_manifestDigest
requestToken
T@"XPCRequestToken",&,V_requestToken
shouldHideUserPrompts
TB,V_shouldHideUserPrompts
UPPManifestErrorUserInfoKeyExistingName
UPPManifestErrorUserInfoKeyManifestName
download-manifest
action
digest
itms-services
-[XDCCancelInstallRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppStoreDaemon_Sim/AppStoreDaemon-6.0.112.5/Libraries/LibAppStoreDaemon/Messaging/Generated/XDCCancelInstallRequest.m
nil != self->_bundleID
com.apple.aps.appstored
Identity has already been assumed
Identity has not yet been assumed
currentIdentity
T@"<Identity>",R
apsDelegatePort
machPortName
metricsContainerId
persistedDataPath
cachedDataPath
Account
Background
Manual
Migration
Synchronize
Update All
callbackHandler
T@?,C,N,V_callbackHandler
includeMetrics
TB,V_includeMetrics
isBackgroundRequest
isVPPLookup
TB,V_isVPPLookup
Tq,V_reason
shouldPerformUpdates
TB,V_userInitiated
offloadedBundleIDs
T@"NSMutableSet",R,V_offloadedBundleIDs
perDeviceBundleIDs
T@"NSMutableSet",R,V_perDeviceBundleIDs
purchaseInfoForAppsBuiltWithInvalidTools
T@"NSMutableDictionary",R,V_purchaseInfoForAppsBuiltWithInvalidTools
purchaseInfoForAppsToRestoreToDRMv1
T@"NSMutableDictionary",R,V_purchaseInfoForAppsToRestoreToDRMv1
Automatic
Pending
Could not find bag key for queue check
cancel-download-url
download-id
UIRequiredDeviceCapabilities
downloadQueueType
Tq,R,V_downloadQueueType
numberOfAvailableDownloads
Tq,R,V_numberOfAvailableDownloads
items
T@"NSArray",R,N,V_items
T@"NSArray",R,N,V_storeItems
storeCorrelationID
T@"NSString",R,V_storeCorrelationID
com.apple.AppStoreDaemon
CONFIRM_EXTERNAL_MANIFEST_DOWNLOADS_%@_%ld
CONFIRM_EXTERNAL_MANIFEST_DOWNLOAD_SPECIFIC_%@_%@
CONFIRM_EXTERNAL_MANIFEST_DOWNLOAD_GENERIC_%@
CANCEL
CONFIRM_EXTERNAL_MANIFEST_INSTALL
/System/Library/PrivateFrameworks/AppStoreDaemon.framework
EXTERNAL_MANIFEST_ALREADY_INSTALLED_ERROR_TITLE
EXTERNAL_MANIFEST_ALREADY_INSTALLED_SAME_NAME_ERROR_BODY
EXTERNAL_MANIFEST_ALREADY_INSTALLED_OTHER_NAME_ERROR_BODY
EXTERNAL_MANIFEST_SSL_ERROR_%@
EXTERNAL_MANIFEST_ERROR_FORMAT_%@
UPPManifestDialogActionCancel
UPPManifestDialogActionInstall
i16@?0^B8
v32@?0@"SQLiteCursor"8@"NSError"16^B24
firstInt64Value
Tq,R,N
firstNumberValue
T@"NSNumber",R,C,N
hasRows
gizmoPairingID
T@"NSUUID",&,V_gizmoPairingID
intent
TQ,V_intent
T@"NSString",&,V_logKey
Tq,V_priority
status
Ti,N,V_status
Tq,R,V_resultComplexity
cancel-purchase-batch
dsPersonId
songList
more
page-type
preorder-success
trigger-download
T@"NSNumber",R,V_accountID
clusterMappings
T@"NSArray",R,V_clusterMappings
T@"NSData",R,V_keybag
T@"NSDictionary",R,V_metrics
isPreorder
TB,R,V_isPreorder
rangesToLoad
T@"NSArray",R,V_rangesToLoad
shouldCancelPurchaseBatch
TB,V_shouldCancelPurchaseBatch
triggeredQueueCheck
TB,V_triggeredQueueCheck
T@"NSString",V_clientID
environment
token
messages
hasEnvironment
T@"NSString",&,N,V_environment
hasToken
T@"NSString",&,N,V_token
T@"NSMutableArray",&,N,V_messages
storePlatformData.software-update-slimmed-lockup.results
artistName
artwork
assets
bundleId
contentRatingsBySystem
display
externalId
size
fileSizeByDevice
fileSizeInfo
variants
hasMessagesExtension
height
isFirstParty
isHiddenFromSpringboard
kind
update
ovalArtwork
updateFileSizeInfo
deltaSizeByExternalVersionId
whatsNew
width
v32@?0@"NSString"8@"NSDictionary"16^B24
B16@?0@8
universal
@16@?0@"NSString"8
@"<NSFastEnumeration>"16@?0@"NSDictionary"8
updates
T@"NSArray",R
DELETE FROM purchase_history_apps WHERE purchaser_dsid = ? AND locker_item_id IN (%@);
v32@?0@"NSNumber"8Q16^B24
DELETE FROM purchase_history_apps WHERE purchaser_dsid = ?;
INSERT OR REPLACE INTO purchase_history_db_properties (value, key) VALUES (?, ?);
transactionID
transactionIDs
T@"NSMutableArray",&,N,V_transactionIDs
None
Crossfire
OcelotPayout
OcelotSummary
actorID
T@"NSString",C,N,V_actorID
addPriorApps
TB,N,V_addPriorApps
currentOSVersion
T@"NSString",C,N,V_currentOSVersion
Tq,N,V_now
nowDate
T@"NSDate",C,N,V_nowDate
lastUpdateDate
T@"NSDate",C,N,V_lastUpdateDate
offset
Tq,N,V_offset
rescheduleActorIDReset
TB,N,V_rescheduleActorIDReset
startTime
Tq,N,V_startTime
topic
T@"NSString",C,N,V_topic
appUsageType
Tq,R,N,V_appUsageType
deletedApps
T@"NSArray",C,N,V_deletedApps
historyMap
T@"AppUsageInstallHistoryMap",N,V_historyMap
isTemporary
TB,N,V_isTemporary
keepAlive
T@"KeepAlive",N,V_keepAlive
logKey
T@"NSString",R,N,V_logKey
launchesStartDate
T@"NSDate",C,N,V_launchesStartDate
minimumRunningTime
Tq,N,V_minimumRunningTime
shouldResetPayoutDate
TB,N,V_shouldResetPayoutDate
CREATE TABLE IF NOT EXISTS account_events (pid INTEGER, active_start_time DATETIME, active_end_time DATETIME, account_id INTEGER, apple_id TEXT, alt_dsid TEXT, event_type INTEGER, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_crossfire (pid INTEGER, account_id INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_ocelot (pid INTEGER, account_id INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_ocelot_payout (pid INTEGER, account_id INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_personalization (pid INTEGER, account_id INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_crossfire (pid INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_beta INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_ocelot (pid INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_beta INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_ocelot_payout (pid INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_beta INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_personalization (pid INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_beta INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_cluster_mappings (pid INTEGER, bundle_id TEXT, cluster_id INTEGER, cluster_version INTEGER, launches_weight INTEGER, item_id INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_weight INTEGER, PRIMARY KEY (pid));
app_usage
DROP TABLE account_events
DROP TABLE app_events_crossfire
DROP TABLE app_events_ocelot
DROP TABLE app_events_ocelot_payout
DROP TABLE app_events_personalization
DROP TABLE app_cluster_mappings
DROP TABLE current_apps_crossfire
DROP TABLE current_apps_ocelot
DROP TABLE current_apps_ocelot_payout
DROP TABLE current_apps_personalization
lib_constantValues
lib_keyPath
machineName
ownerDsid
reason
keybag
failureType
Server Error
refetch
family
client_id_header
familyMemberAccountID
T@"NSNumber",C,V_familyMemberAccountID
allowSilentAuthentication
TB,V_allowSilentAuthentication
authorizationToken
T@,C,V_authorizationToken
clientIdentifierHeader
T@"NSString",C,V_clientIdentifierHeader
keybagPath
T@"NSString",C,V_keybagPath
TQ,V_reason
shouldAddKeysToKeyBag
TB,V_shouldAddKeysToKeyBag
displaysDialogs
TB,V_displaysDialogs
response
T@"NSDictionary",R,V_response
T@"NSString",C,V_token
userAgent
T@"NSString",C,V_userAgent
text/xml
com.apple.arcadeoperations
com.apple.appstored.PurchaseManager.dispatch
com.apple.appstored.PurchaseManager.taskQueue
purchaseQueue
T@"AMSPurchaseQueue",&,N,V_purchaseQueue
v24@?0@"ACAccount"8@"NSArray"16
@"<NSCopying>"16@?0@"<UpdatableApp>"8
@16@?0@"NSUUID"8
externalIDs
T@"NSArray",C,N
B16@?0@"ACAccount"8
signIn
cancel
SIGN_IN_PURCHASE
SIGN_IN_WITH_APPLE_ID_%@
SIGN_IN
An unknown error occurred
APPLE_ID
User canceled authentication
authenticateResult
T@"AMSAuthenticateResult",R,V_authenticateResult
T@"NSString",R,V_logKey
com.apple.appstored.XDCDeviceManager
v32@?0@"NSString"8@"XDCDevice"16^B24
activePairedDevice
T@"XDCDevice",R
com.apple.AppStoreDaemon.PurchaseService
dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,V_dispatchQueue
adoptionInterface
T@"<AdoptionManagerInterface>",&,V_adoptionInterface
legacyPurchaseInterface
T@"<PurchaseManagerInterface>",&,V_legacyPurchaseInterface
purchaseInterface
T@"<PurchaseManagerInterface>",&,V_purchaseInterface
{ bundleID: %@ itemID: %@ }
downloaderDSID
purchaserDSID
storeExternalVersionID
storeItemID
storefrontID
T@"NSNumber",R,V_downloaderDSID
T@"NSNumber",R,V_purchaserDSID
T@"NSNumber",R,V_storeExternalVersionID
T@"NSNumber",R,V_storeItemID
T@"NSNumber",R,V_storefrontID
game_session
begin_date
end_date
last_heartbeat_date
session_end_reason
session_identifier
archiveSize
TQ,V_archiveSize
diskSpaceNeeded
TQ,V_diskSpaceNeeded
T@"NSString",C,V_name
promiseType
Tq,V_promiseType
referenceID
T@"NSNumber",&,V_referenceID
streamingZipOptions
T@"NSDictionary",C,V_streamingZipOptions
transferPath
T@"NSString",C,V_transferPath
T@"ASDPurchaseHistoryApp",&,N,V_app
show
TB,N,V_show
T@"NSArray",R,V_items
T@"AMSProcessInfo",R,V_clientInfo
No bundle ID was specified
purchase_history_apps
content_rating_flags
date_purchased
developer_name
family_shared
first_party
has_messages_extension
hidden
hidden_from_springboard
icon_url_template
is_32_bit_only
is_preorder
long_title
oval_icon_url_template
preflight_package_url
product_url
purchaser_dsid
redownload_params
required_capabilities
store_item_id
supports_ipad
supports_iphone
purchase_token
locker_item_id
genre_id
genre_name
watch_app_delivered_in_ios_app
watch_app_runs_independently
watch_app_watch_only
supports_layered_image
has_p3
title
chunkDigests
T@"NSArray",C,N,V_chunkDigests
TI,N,V_chunkSize
chunkType
Tq,N,V_chunkType
com.apple.appstored.DecryptDataConsumer
No processor was set when preparing
v24@?0Q8@"NSError"16
No processor was set when resetting
No processor was set when suspending
No processor was set when truncating
v16@?0@"NSError"8
T@"ChunkedDigest",&,V_digest
streamAdapter
T@"<AssetDataConsumer>",&,V_streamAdapter
responses
T@"NSArray",R,V_responses
resultComplexity
@"<NSFastEnumeration>"8@?0
@16@?0@"PurchaseInfo"8
v24@?0@"ASDPurchaseResponse"8@"NSError"16
v16@?0@"AppUpdatesDatabaseSession"8
v32@?0@"NSNumber"8@"NSArray"16^B24
com.apple.AppStore
installedSoftwareRatingName
is-background
context
T@"UpdatesContext",&,N,V_context
jobResults
orderedBundleIDs
T@"NSArray",C,N,V_orderedBundleIDs
assetPromise
T@"AssetPromise",&,V_assetPromise
T@"IXAppInstallCoordinator",&,V_coordinator
T@"AppInstallLogKey",&,V_logKey
operation
T@"NSOperation",W,V_operation
Tq,V_packageID
signpostID
TQ,V_signpostID
tcr_dictionary
app_cluster_mappings
bundle_id
cluster_id
cluster_version
item_id
launches_weight
timestamp
usage_weight
com.apple.AppStoreFoundation.PurchaseHistoryManager
com.apple.appstoredaemon.PurchaseHistoryManager.query
v16@?0@"PurchaseHistoryDatabaseSession"8
B16@?0@"PurchaseHistoryDatabaseTransaction"8
com.apple.appstored.PurchaseHistoryDatabaseUpdated
com.apple.appstoredaemon.PurchaseHistoryManager.update
v24@?0@"NSData"8@"NSError"16
com.apple.appstored.DataPromiseDataConsumer
Promise data consumer creation failed
No processor was set when consuming data
No processor was set when finishing
com.apple.appstored.DataPromiseDataConsumer.delegate
No data promise found to create stream adapter
Received unexpected promise type `%@`
Hash verification requested but no digests provided
T@"<CoordinatorPromiseDataConsumerDelegate>",W
PurchaseHistoryErrorDomain
PurchaseHistoryRequestOperationErrorDomain
externalIDStrings
T@"NSMutableArray",&,N,V_externalIDStrings
hasError
Ti,N,V_error
com.apple.appstored.InGameAnalyticsManager
com.apple.appstored.InGameAnalyticsManager.callout
com.apple.appstored.InGameAnalyticsManager.dispatch
B16@?0@"InGameAnalyticsDatabaseTransaction"8
v16@?0@"InGameAnalyticsDatabaseSession"8
notZero
TB,R,GisNotZero
T@"NSString",C,N,V_clientIdentifierHeader
resultBlock
T@?,C,V_resultBlock
T@"NSString",C,N,V_userAgent
appWasClaimed
TB,R,N,V_appWasClaimed
claimedBundleIdentifiers
T@"NSArray",R,V_claimedBundleIdentifiers
vppMigrated
TB,R,N,V_vppMigrated
com.apple.appstored.InstallationService
CREATE TABLE IF NOT EXISTS app_done (pid INTEGER, account_id INTEGER, item_id INTEGER, machine_based INTEGER NOT NULL DEFAULT 0, request_url URL, transaction_id TEXT, PRIMARY KEY(pid));
CREATE TABLE IF NOT EXISTS app_install (pid INTEGER, account_id INTEGER, apple_id TEXT, alt_dsid TEXT, approved INTEGER NOT NULL DEFAULT 0, artwork_url URL, auto_install_override INTEGER NOT NULL DEFAULT 0, automatic_type INTEGER NOT NULL DEFAULT 0, bundle_id TEXT, bundle_name TEXT, bundle_version TEXT, bootstrapped INTEGER NOT NULL DEFAULT 2, cancel_download_url URL, cancel_if_duplicate INTEGER NOT NULL DEFAULT 0, companion_bundle_id TEXT, client_id TEXT, coordinator_id UUID, coordinator_intent INTEGER NOT NULL DEFAULT 1, downloader_id INTEGER, external_id UUID, external_order INTEGER, evid INTEGER, failure_error BLOB, gizmo_pairing_id UUID, has_messages_extension INTEGER NOT NULL DEFAULT 0, item_id INTEGER, launch_prohibited INTEGER NOT NULL DEFAULT 0, log_code TEXT, messages_artwork_url URL, metrics_install_type INTEGER NOT NULL DEFAULT 0, order_index INTEGER, phase INTEGER NOT NULL DEFAULT 10, policy JSON, post_metrics INTEGER NOT NULL DEFAULT 0, priority INTEGER NOT NULL DEFAULT 0, receipt BLOB, redownload INTEGER NOT NULL DEFAULT 0, remote_install INTEGER NOT NULL DEFAULT 0, restore_state INTEGER NOT NULL DEFAULT 0, restore_retry_count INTEGER NOT NULL DEFAULT 0, restore_type INTEGER NOT NULL DEFAULT 0, source_type INTEGER NOT NULL DEFAULT 0, storefront TEXT, store_cohort TEXT, store_metadata BLOB, supports_32bit_only INTEGER NOT NULL DEFAULT 0, supress_dialogs INTEGER NOT NULL DEFAULT 0, timestamp DATETIME DEFAULT (timestamp()), transaction_id TEXT, update_type INTEGER NOT NULL DEFAULT 0, vid UUID, watch_type INTEGER NOT NULL DEFAULT 0, PRIMARY KEY(pid));
CREATE TABLE IF NOT EXISTS app_install_remote (pid INTEGER, destination_id TEXT, external_id UUID, metadata BLOB, PRIMARY KEY(pid));
CREATE TABLE IF NOT EXISTS app_package (pid INTEGER, blocked INTEGER NOT NULL DEFAULT 0, bytes_offset INTEGER, bytes_remaining INTEGER, bytes_total INTEGER, clear_hash_array JSON, data_promise_id UUID, disk_usage INTEGER, dp_info BLOB, hash_array JSON, hash_size INTEGER, hash_type INTEGER, initial_odr_size INTEGER, locate_asset_cache INTEGER, odr_manifest_url URL, package_type INTEGER, package_url URL, parent_id UUID, provisioning_profiles JSON, sinf BLOB, streaming_zip INTEGER, timestamp DATETIME DEFAULT (timestamp()), variant_id TEXT, PRIMARY KEY(pid));
DROP TABLE app_done
DROP TABLE app_install
DROP TABLE app_install_remote
DROP TABLE app_package
uuid
hasUuid
T@"NSString",&,N,V_uuid
device
devices
os-version
osVersion
%ld:%@:%@
<VariantDescriptor %p>: {%@}
@16@?0@"VariantDescriptor"8
q24@?0@"VariantDescriptor"8@"VariantDescriptor"16
canonicalIdentifier
T@"OSVersion",R,C
TB,R,GisUniversal,V_universal
Universal
<VariantDescriptor %p>: {Universal}
app_installs
app_events_crossfire
AssetRequetPropertyRangeOffset
asset_rangeOffset
bytes=%llu-
Range
TQ,Sasset_setRangeOffset:
app_done
account_id
machine_based
request_url
transaction_id
You Have Already Authorized Five Computers
Temporarily suppressed dialog
Unable to purchase discretionary item with no account
Unable to authenticate for purchase with dsID but no username
hasBeenAuthedForBuy
AMSServerPayload
USERNAME
PASSWORD
AuthenticationChallengeDialogActionCancel
AuthenticationChallengeDialogActionOkay
Device Security
com.apple.appstored.activities.DeviceSecurity
criteria
T@"NSObject<OS_xpc_object>",R
descriptiveName
enabled
TB,R,GisEnabled
registeredName
Tr*,R
deadline
isUpdate
T@"NSNumber",R,V_isUpdate
autoUpdatesEnabled
adam-id
local-software
installed-version-identifier
T@"UpdatesResponse",&,N,V_response
T@"NSString",C,N,V_logKey
self isKindOfClass: %@
assetID
Tq,R,N,V_assetID
assetSize
TQ,R,N,V_assetSize
bytesOffset
TQ,R,N,V_bytesOffset
TQ,R,N,V_diskSpaceNeeded
T@"NSString",R,C,N,V_name
overrideProgress
TB,R,N,V_overrideProgress
streamableZip
TB,R,N,GisStreamableZip,V_streamableZip
T@"NSDictionary",R,C,N,V_streamingZipOptions
T@"NSString",R,C,N,V_transferPath
Tq,N,VassetID
TQ,N,VassetSize
TQ,N,VbytesOffset
TQ,N,VdiskSpaceNeeded
T@"NSString",C,N,Vname
TB,N,VoverrideProgress
TB,N,GisStreamableZip,VstreamableZip
T@"NSDictionary",C,N,VstreamingZipOptions
T@"NSString",C,N,VtransferPath
Tq,V_action
ignoreAssetCache
TB,V_ignoreAssetCache
metrics
T@"NSURLSessionTaskMetrics",&,V_metrics
promise
T@"AssetPromise",W,V_promise
properties
T@"AssetRequestProperties",&,V_properties
request
T@"NSURLRequest",&,V_request
requestOffset
TQ,V_requestOffset
session
T@"NSURLSession",W,V_session
signpostId
TQ,V_signpostId
task
T@"NSURLSessionTask",R,V_task
databases/%ld/items/edit
v24@?0@"AMSURLResult"8@"NSError"16
Coordinator identifier was unset
Coordinator was not found, could not determine application state
installResponse
T@"AppInstallInstallResponse",R,V_installResponse
@16@?0@"ASDAppReviewAppMetadata"8
@16@?0@"AppInstall"8
processedExternalIDs
T@"NSArray",R,V_processedExternalIDs
members
{ cached: %d familyMembers: %@ }
family.members
q24@?0@"FamilyMember"8@"FamilyMember"16
cached
TB,R,N,GisCached,V_cached
familyMembers
T@"NSArray",R,N,V_familyMembers
CONSTRAINED_PROMPT_TITLE
CONSTRAINED_PROMPT_BODY_DOWNLOAD_%@
CONSTRAINED_PROMPT_BODY_UPDATE_%@
CONSTRAINED_PROMPT_BODY_UPDATES
CONSTRAINED_PROMPT_BUTTON_DOWNLOAD
CONSTRAINED_PROMPT_BUTTON_LATER
LowDataModePromptActionDownloadLater
LowDataModePromptActionDownloadNow
%@/%ld
lib_shortDescription
No job found with bundle ID: %@
knownApps
T@"NSArray",R,V_knownApps
v24@?0@"LSBundleProxy"8^B16
NSApplicationRequiresMaze
NSApplicationRequiresArcade
_bundleID
_bundlePath
_bundleVersion
_expectedStoreVersionID
_installed
_localizedName
_profileValidated
_receiptType
_shortVersionString
_storeExternalVersionID
_storeItemID
%@: (%@, %@, %lld:%lld md:%p %@) 
supportsSecureCoding
TB,R
beta
TB,GisBeta,V_beta
T@"NSString",&,V_bundleID
bundlePath
T@"NSString",&,V_bundlePath
T@"NSString",&,V_bundleVersion
canonicalExecutablePath
T@"NSString",&,V_canonicalExecutablePath
deviceIdentifierForVendor
T@"NSString",&,V_deviceIdentifierForVendor
T@"NSNumber",&,V_downloaderDSID
expectedStoreVersionID
Tq,V_expectedStoreVersionID
familyID
T@"NSNumber",&,V_familyID
installDidOccur
TB,V_installDidOccur
isAppleSigned
TB,N,V_isAppleSigned
localizedName
T@"NSString",&,V_localizedName
mdItemRef
T@"NSValue",&,V_mdItemRef
hasMIDBasedSINF
TB,V_hasMIDBasedSINF
installed
TB,GisInstalled,V_installed
ocelot
TB,N,GisOcelot,V_ocelot
TB,N,GisOffloaded,V_offloaded
placeholder
TB,N,GisPlaceholder,V_placeholder
T@"NSNumber",&,V_purchaserDSID
profileValidated
TB,N,GisProfileValidated,V_profileValidated
storeOriginated
TB,N,GisStoreOriginated,V_storeOriginated
receiptType
T@"NSString",&,V_receiptType
shortVersionString
T@"NSString",&,V_shortVersionString
T@"NSString",&,V_storeCohort
T@"NSNumber",&,V_storefront
Tq,V_storeExternalVersionID
Tq,V_storeItemID
updateDidOccur
TB,V_updateDidOccur
updateWillOccur
TB,V_updateWillOccur
com.apple.appstored.PushConnection
Push Connection
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
delegate
T@"<PushConnectionDelegate>",W,V_delegate
T@"NSString",R,V_environment
com.apple.appstored.AppInstallObserver
com.apple.appstored.AppInstallObserver.policyQueue
com.apple.appstored.installcoordination
none
changeset
T@"AppInstallsDatabaseChangeset",R,V_changeset
app_sessionreporter_key
clientId
clientEventId
clusters
cohort
collectionTime
cumulativeUserCount
dsId
count
duration
eventTime
eventType
crashes
installs
launches
uninstalls
unknown
usageActivity
qualifyingActivity
externalVersionId
foregroundDuration
hardwareFamily
hardwareModel
itemId
installationType
AppStore
TestFlight
Retail
installType
autodownload
prior
redownload
restore
subscriptionState
osBuildNumber
platform
qualificationDuration
rangeStartTime
rangeEndTime
shortAppVersion
usageClientId
weekStartDate
tempUserId
T@"NSString",C,N,V_tempUserId
tempDeviceIdentifer
T@"NSString",C,N,V_tempDeviceIdentifer
appEventType
TC,N,V_appEventType
appSessionReporterKey
T@"NSString",C,N,V_appSessionReporterKey
Tq,N,V_appUsageType
T@"NSString",C,N,V_bundleID
T@"NSString",C,N,V_bundleVersion
clientEventID
T@"NSString",C,N,V_clientEventID
T@"NSArray",C,N,V_clusters
T@"NSString",C,N,V_cohort
T@"NSNumber",C,N,V_collectionTime
Tq,N,V_cumulativeUserCount
databaseID
Tq,N,V_databaseID
Tq,N,V_duration
T@"NSNumber",C,N,V_evid
eventTimeOverride
T@"NSNumber",C,N,V_eventTimeOverride
T@"NSArray",C,N,V_foregroundEvents
T@"NSString",C,N,V_hardwareFamily
T@"NSString",C,N,V_hardwareModel
hasBeenPosted
TB,N,V_hasBeenPosted
TC,N,V_installationType
TC,N,V_installType
T@"NSNumber",C,N,V_itemID
T@"NSString",C,N,V_itemName
ocelotDeviceID
T@"NSString",C,N,V_ocelotDeviceID
ocelotID
T@"NSString",C,N,V_ocelotID
ocelotSubscriptionState
T@"NSString",C,N,V_ocelotSubscriptionState
T@"NSString",C,N,V_OS
osBuild
T@"NSString",C,N,V_osBuild
T@"NSString",C,N,V_platform
shortVersion
T@"NSString",C,N,V_shortVersion
T@"NSNumber",C,N,V_startTime
T@"NSNumber",C,N,V_storefront
timeRangeEnd
Tq,N,V_timeRangeEnd
timeRangeStart
Tq,N,V_timeRangeStart
usageTime
Tq,N,V_usageTime
usageCount
Tq,N,V_usageCount
qualifiedDuration
Tq,N,V_qualifiedDuration
T@"NSString",C,N,V_weekStartDate
circle
Family Info Lookup Failed
Unable load the family circle if there's no active account.
We failed to load the family info for the active account.
@"FamilyInfoLookupResult"16@?0^@8
family-info
We were unable to get the family cricle URL.
JFamilyCircle.plist
T@"<AMSBagProtocol>",&,N,V_bag
T@"NSString",&,N,V_logKey
com.apple.appstored.AccountStore
activeAccount
T@"ACAccount",R
T@"ACAccount",R,V_activeAccount
AccountStorePrimaryAccountDidChange
AccountStorePrimaryAccountDidUpdate
%@: %@
actionType
userInfo
account_events
active_end_time
active_start_time
event_type
v32@?0q8Q16^B24
v40@?0q8@"NSDictionary"16Q24^B32
B32@?0@"AppInstall"8Q16^B24
Encountered invalid installation which was not really running
com.apple.appstored.StorePushService
databases/%ld/items
v24@?0@"ACAccount"8@"NSError"16
Bootstrap
Canceled
Failed
Finished
Paused
Policy
Postamble
Preamble
Restore Metadata Complete
Started
Waiting
Unknown (%ld)
Canceled by user request
Jettisoned to make room for higher priority installation
Paused by user request
Paused until install policy is fulfilled
Jettisoned due to elevated thermal pressure
none (0)
device security
bootstrapped installations
daemon start
finished installations
hydrate job
imported installations
non ordered restores completed
ordered restores completed
paused installations
diagnostics ping
prioritized
purchased
phase reset
resumed installations
unknown (%lu)
.%lu
anyVersion
TB,R,GisAnyVersion
canonicalString
CREATE TABLE IF NOT EXISTS purchase_history_apps (pid INTEGER PRIMARY KEY, bundle_id TEXT, content_rating_flags INTEGER, date_purchased DATETIME, developer_name TEXT, family_shared INTEGER, first_party INTEGER, has_messages_extension INTEGER, hidden INTEGER, hidden_from_springboard INTEGER, icon_url_template TEXT, is_32_bit_only INTEGER, is_preorder INTEGER, long_title TEXT, oval_icon_url_template TEXT, preflight_package_url URL, product_url URL, purchaser_dsid INTEGER, redownload_params TEXT, required_capabilities JSON, store_item_id INTEGER, supports_ipad INTEGER, supports_iphone INTEGER, purchase_token INTEGER, locker_item_id INTEGER, genre_id INTEGER, genre_name TEXT, watch_app_delivered_in_ios_app INTEGER, watch_app_runs_independently INTEGER, watch_app_watch_only INTEGER, supports_layered_image INTEGER, has_p3 INTEGER, title TEXT, UNIQUE(purchaser_dsid, store_item_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS purchase_history_db_properties (key TEXT PRIMARY KEY, value TEXT)
purchase_history
ALTER TABLE purchase_history_apps ADD COLUMN genre_id INTEGER;
ALTER TABLE purchase_history_apps ADD COLUMN genre_name TEXT;
ALTER TABLE purchase_history_apps ADD COLUMN watch_app_delivered_in_ios_app INTEGER;
ALTER TABLE purchase_history_apps ADD COLUMN watch_app_runs_independently INTEGER;
ALTER TABLE purchase_history_apps ADD COLUMN watch_app_watch_only INTEGER;
ALTER TABLE purchase_history_apps ADD COLUMN supports_layered_image INTEGER;
ALTER TABLE purchase_history_apps ADD COLUMN has_p3 INTEGER;
DROP TABLE purchase_history_apps;
DROP TABLE purchase_history_db_properties;
auto-download
auto-update
in-app-purchase
manual-update
on-demand-resource
asset-info
file-size
chunks
chunkSize
clearHashes
hashes
deltaPackages
local-server-info
initialODRSize
isStreamable
priorVariantIdentifiers
priorVersionExternalIdentifier
uncompressedSize
variantId
B16@?0@"StoreAsset"8
%@: {URL = %@; variant = %@; delta = %d}
assetType
Tq,R,V_assetType
assetURL
T@"NSString",R,V_assetURL
bytesTotal
T@"NSNumber",R,V_bytesTotal
T@"NSArray",R,V_clearHashes
delta
TB,R,GisDelta
T@"NSData",R,V_dpInfo
expectedDiskspace
T@"NSNumber",R,V_expectedDiskspace
T@"NSArray",R,V_hashes
hashType
T@"NSNumber",R,V_hashType
T@"NSNumber",R,V_initialODRSize
T@"NSString",R,V_md5
locallyCacheable
TB,R,GisLocallyCacheable,V_locallyCacheable
numberOfBytesToHash
T@"NSNumber",R,V_numberOfBytesToHash
T@"NSArray",R,V_priorVariantIdentifiers
priorVersionEvid
T@"NSNumber",R,V_priorVersionEvid
T@"NSData",R,V_sinf
T@"NSString",R,V_variantID
variantDescriptor
T@"VariantDescriptor",R,V_variantDescriptor
zipStreamable
TB,R,GisZipStreamable,V_zipStreamable
hashArrayData
T@"NSData",R
sinfData
additionalHeaders
companionBundleID
itemResponse
installedExternalVersionID
originalPurchaserDSID
preflightURL
purchase
purchaseID
referrerName
referrerURL
discoveredUpdate
isDiscretionary
generatedVendorID
isMachineBased
purchaseOnly
purchaseState
purchaseType
isRemoteInstall
requireUniversal
suppressEvaluatorDialogs
updateType
watchType
internal
OSBuildType
T@"ACAccount",&
T@"AMSBuyParams",&
T@"AMSProcessInfo",&
T@"XDCDevice",&
discretionary
TB,GisDiscretionary
T@"NSUUID",&
T@"NSNumber",&
T@"StoreItemResponse",&
T@"NSString"
T@"AppInstallLogKey",&
TB,GisMachineBased
T@"NSURL",&
T@"ASDPurchase",&
remoteInstall
TB,GisRemoteInstall
T@"XPCRequestToken",&
PurchaseHistory
metadata.bundle-identifier
metadata.bundle-version
metadata.has-messages-extension
metadata.kind
metadata.launch-prohibited
metadata.platform-identifier
metadata.subtitle
metadata.title
thinned-assets
@16@?0@"NSDictionary"8
@"<NSCopying>"16@?0@"UPPManifestAsset"8
assetsCategorized
T@"NSDictionary",R
platformIdentifier
subtitle
thinnedAssets
thinnedAssetsCategorized
com.apple.platform.watchos
requestID
T@"NSUUID",R,V_requestID
Environment: %@
      Token: %@
   Messages:
         - %@
   Messages: <none>
com.apple.AppStoreFoundation.startup
com.apple.appstored.SQLiteDatabase
B8@?0
_SQLiteDispatchQueueTag
selector
T:,V_selector
target
T@,W,V_target
genre
genreId
T@"NSString",R,V_genre
genreID
T@"NSNumber",R,V_genreID
allowsAuthentication
TB,V_allowsAuthentication
allowsCellularAccess
TB,V_allowsCellularAccess
allowsConstrainedNetworkAccess
TB,V_allowsConstrainedNetworkAccess
allowsWatchCellularAccess
TB,V_allowsWatchCellularAccess
bytesPerSecondLimit
T@"NSNumber",&,V_bytesPerSecondLimit
clientIdentifier
T@"NSUUID",&,V_clientIdentifier
connectionPool
Tq,V_connectionPool
discretionaryType
Tq,V_discretionaryType
duetBudgetingIdentifier
T@"NSString",&,V_duetBudgetingIdentifier
expectedDiskUsage
TQ,V_expectedDiskUsage
loadingPriority
T@"NSNumber",&,V_loadingPriority
locateAssetCache
TB,V_locateAssetCache
maximumWatchCellularTransferSize
T@"NSNumber",&,V_maximumWatchCellularTransferSize
networkBudgetingIdentifier
T@"NSString",&,V_networkBudgetingIdentifier
protocolClasses
T@"NSArray",&,V_protocolClasses
qosClass
TI,V_qosClass
rangeOffset
TQ,V_rangeOffset
TB,V_requiresPowerPluggedIn
requestReason
Tq,V_requestReason
requestUUID
T@"NSUUID",&,V_requestUUID
taskPriority
T@"NSNumber",&,V_taskPriority
CREATE TABLE IF NOT EXISTS game_session (pid INTEGER PRIMARY KEY, bundle_id TEXT, bundle_version TEXT, begin_date DATETIME,dsid INTEGER, end_date DATETIME,evid INTEGER, item_id INTEGER, last_heartbeat_date DATETIME,session_end_reason INTEGER, session_identifier TEXT, short_version TEXT, UNIQUE (bundle_id, session_identifier) ON CONFLICT REPLACE);
inGameAnalytics.db
in_game_analytics
DROP TABLE game_session
allApps
T@"NSArray",R,N,V_allApps
DESC
CREATE TEMPORARY TABLE 
 AS 
v16@?0@"<SQLiteBinding>"8
v32@?0@"NSString"8Q16^B24
v24@?0@"SQLiteQueryResults"8@"NSError"16
queryDescriptor
T@"SQLiteQueryDescriptor",R
countOfEntities
SELECT 
DISTINCT 
 FROM %@
 WHERE 
 ORDER BY 
 LIMIT ?
entityClass
T#,N,V_entityClass
memoryEntityClass
T#,N,V_memoryEntityClass
limitCount
Tq,N,V_limitCount
orderingClause
T@"NSString",C,N,V_orderingClause
orderingDirections
T@"NSArray",C,N,V_orderingDirections
orderingProperties
T@"NSArray",C,N,V_orderingProperties
returnsDistinctEntities
TB,N,V_returnsDistinctEntities
predicate
T@"SQLitePredicate",C,N,V_predicate
COUNT
%@(%@)
is_prior
Documents/Persistence
Documents
Library/Caches
Library/Preferences
com.apple.appstore
Cache.db
SubscriptionEntitlements_v2.plist
SubscriptionEntitlementsAppStore_v2.plist
fsCachedData
storeSystem.db
storeUser.db
updates.plist
@16@?0@"ASDTestFlightAppMetadata"8
@16@?0@"NSData"8
com.apple.appstored.ProgressCache
remote progress
com.apple.appstored.PowerMonitor
com.apple.system.powermanagement.poweradapter
powerPlugggedIn
TB,R,GisPowerPluggedIn,V_powerPlugggedIn
batterySaverEnabled
TB,R,GisBatterySaverEnabled,V_batterySaverEnabled
PowerStateDidChangeNotification
accessWasUnblocked
TB,R,V_accessWasUnblocked
cellularResult
Tq,V_cellularResult
constrainedResult
Tq,V_constrainedResult
TB,V_suppressDialogs
com.apple.appstored.AppInstallScheduler
com.apple.appstored.TaskQueue.bootstrapQueue
B16@?0@"AppInstall"8
B16@?0@"AppSchedulerDatabaseTransaction"8
SQLiteErrorDomain
Failure occurred but no error was provided
Update failed
Update canceled
Update installed
app_install
installPhase
installPolicy
T@"AppInstallPolicy",C
storeMetadata
T@"MIStoreMetadata",C
COUNT(1)
MAX(app_install.priority)
MIN(app_install.priority)
alt_dsid
apple_id
approved
artwork_url
auto_install_override
automatic_type
bootstrapped
bundle_name
bundle_version
cancel_download_url
cancel_if_duplicate
client_id
companion_bundle_id
coordinator_id
coordinator_intent
downloader_id
external_order
failure_error
gizmo_pairing_id
launch_prohibited
log_code
messages_artwork_url
metrics_install_type
order_index
phase
policy
post_metrics
priority
remote_install
restore_retry_count
restore_state
restore_type
source_type
store_cohort
store_metadata
supports_32bit_only
supress_dialogs
update_type
watch_type
IFNULL(app_install.phase, 10)
IFNULL(app_install.priority, 0)
IFNULL(app_install.bootstrapped, 2)
app_events
cumulative_user_count
device_vendor_id
event_subtype
has_been_posted
is_beta
is_temporary
item_name
launch_end_time
launch_time
week_start_time
short_version
usage_time
appUpdatesToFinish
cancelProgress
T@"NSSet",R,N
coordinatorReasons
coordinatorResume
metricsEvents
shouldPostProcessAutomaticUpdatesCompleted
schedulerPollReason
TQ,R,N
shouldPostAppsDone
restoresCompleted
TB,R,N,V_restoresCompleted
v32@?0@"NSString"8@16^B24
%@: %lld
propertyValues
T@"NSDictionary",R,C,N,V_propertyValues
externalPropertyValues
T@"NSDictionary",R,C,N,V_externalPropertyValues
v32@?0@"AppPackage"8Q16^B24
automatic
TB,R,GisAutomatic
packages
T@"NSArray",C,V_packages
@16@?0@"ASDSystemAppMetadata"8
tcr_keyPath
com.apple.MobileAsset.SystemApp
AppBundleID
%K == %@
%K IN %@
@16@?0@"ASAsset"8
lookupResults
T@"NSArray",R,C,V_lookupResults
Ignoring, unsupported action for enterprise request: %@
Ignoring, missing URL for enterprise request: %@
Ignoring, invalid URL for enterprise request: %@
Ignoring, invalid enterprise request with missing URL
v32@?0@"NSUUID"8@"ASDEnterpriseAppMetadata"16^B24
-[XDCLaunchAppRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppStoreDaemon_Sim/AppStoreDaemon-6.0.112.5/Libraries/LibAppStoreDaemon/Messaging/Generated/XDCLaunchAppRequest.m
1.2.11
lib_digestMD5
lib_shortDigestMD5
B16@?0@"AppUpdatesDatabaseTransaction"8
schemaName
T@"NSString",&,V_schemaName
sessionClass
T#,V_sessionClass
transactionClass
T#,V_transactionClass
DATETIME
JSON
UUID
numberOfColumns
Unknown validation error
Invalid key path '%@' in expression: %@
Invalid expression type '%lu' in expression: %@
bundle-identifier
md5s
md5-size
variantIds
variantDescriptors
MD5s
MD5Size
T@"NSURL",R
variantIDs
messages-display-image
asset-pack-manifest
software-package
display-image
An unknown failure occured, canceling batch
An unknown failure occured, canceling purchase
Cannot mix machine based and non-machine based purchases
completionHandler
T@?,C,V_completionHandler
infoEnumerator
T@"NSEnumerator",R
machineBased
TB,R,GisMachineBased,V_machineBased
T@"XPCRequestToken",R,V_requestToken
storeDescriptor
T@"SQLiteDatabaseStoreDescriptor",R
database
T@"SQLiteDatabase",R,V_database
discretionary-always
discretionary-inferred
wifi
phone
nolowdata
power
PRAGMA journal_mode=WAL
PRAGMA cache_size=%ld
cacheSize
Tq,N,V_cacheSize
databasePath
T@"NSString",R,V_databasePath
encryptionKeyId
T@"NSString",C,N,V_encryptionKeyId
protectionType
T@"NSString",C,N,V_protectionType
readOnly
TB,N,GisReadOnly,V_readOnly
installedVariantID
T@"NSString",C,N,V_installedVariantID
installedVersionID
T@"NSNumber",C,N,V_installedVersionID
v28@?0@"NSData"8B16^B20
%02x
T@"SQLiteConnection",R,N,V_connection
sqlite3_stmt
T^{sqlite3_stmt=},R,N,V_statement
columnIndexByName
T@"NSDictionary",R,C,N
TB,R,N,GisReadOnly
T@"NSString",R,C,N
Statement already finalized
%@%@
SELECT value FROM purchase_history_db_properties WHERE key = ?
ServerRevisionPropertyKey
LastUpdatedTimestampPropertyKey
lib_defaultUserAgent
en_US_POSIX
yyyy-MM-dd HH:mm:ss
progress
T@"NSMutableArray",&,N,V_progress
[%@]: Start date: %@, is active: %d, length: %lu, session ID: %@
active
TB,R,N,GisActive,V_active
beginDate
T@"NSDate",R,N
dsid
T@"NSNumber",R,N
endDate
lastHeartbeatDate
sessionIdentifier
sessionLength
T@"NSString",R,N,V_shortVersion
unrecordedSessionLength
property
T@"NSString",R,N,V_property
%@ %@ ?
 LIKE 
comparisonType
Tq,R,N,V_comparisonType
T@,R,N,V_value
 NOT IN (
 IN (
negative
TB,R,N,GisNegative,V_negative
query
T@"SQLiteQuery",R,N,V_query
queryProperty
T@"NSString",R,N,V_queryProperty
values
T@"NSArray",R,N,V_values
IS NULL
IS NOT NULL
matchesNull
TB,R,N,V_matchesNull
 AND 
 OR 
predicates
T@"NSArray",R,N,V_predicates
connectionPointer
Tr^v,R,N,V_connectionPointer
T@"NSString",R,C,N,V_SQL
v20@?0@"NSError"8B16
com.apple.appstored.UpdatesService
v12@?0B8
v16@?0@"NSArray"8
v24@?0q8@"NSError"16
%@ Updated should perform automatic updates: %@
Enabled
Disabled
v28@?0B8@"NSArray"12@"NSError"20
updatesInterface
T@"<UpdatesControllerInterface>",&,V_updatesInterface
Update
app-receipt
artworkURL
artwork-urls
default
is-auto-download
is-purchased-redownload
messagesIconUrl
softwareVersionBundleId
bundleShortVersionString
softwareVersionExternalIdentifier
gameCenterEnabled
gameCenterEverEnabled
appleWatchEnabled
WKRunsIndependentlyOfCompanionApp
WKWatchOnly
iad-attribution
iad-conversion-date
iad-impression-date
is32BitOnly
nameTranscriptions
rating
label
rank
subgenres
preflightPackageURL
purchaseDate
redownload-params
thinned-app
%@: {bundleID = %@; itemID = %@; itemName = %@; EVID = %@}
%@.%@.%@
appReceiptData
T@"NSData",R,V_appReceiptData
T@"NSString",R,V_artistName
T@"NSString",R,V_artworkURL
assetDeltaPackage
T@"StoreAsset",R,V_assetDeltaPackage
assetFullPackage
T@"StoreAsset",R,V_assetFullPackage
TB,R,GisAutomatic,V_automatic
betaExternalVersionID
T@"NSNumber",R,V_betaExternalVersionID
T@"NSString",R,V_bundleID
bundleShortVersion
T@"NSString",R,V_bundleShortVersion
T@"NSString",R,V_bundleVersion
cancelDownloadURL
T@"NSString",R,V_cancelDownloadURL
capabilities
T@"NSDictionary",R,V_capabilities
T@"NSNumber",R,V_evid
TB,R,V_gameCenterEnabled
TB,R,V_gameCenterEverEnabled
TB,R,V_hasMessagesExtension
hasWatchApp
TB,R,V_hasWatchApp
hasWatchIndependentApp
TB,R,V_hasWatchIndependentApp
hasWatchOnlyApp
TB,R,V_hasWatchOnlyApp
iAdAttribution
T@"NSNumber",R,V_iAdAttribution
iAdConversionString
T@"NSString",R,V_iAdConversionString
iAdImpressionString
T@"NSString",R,V_iAdImpressionString
T@"NSNumber",R,V_itemID
T@"NSString",R,V_itemName
T@"NSString",R,V_kind
TB,R,V_launchProhibited
messagesArtworkURL
T@"NSString",R,V_messagesArtworkURL
T@"NSURL",R,V_preflightPackageURL
T@"NSString",R,V_purchaseDate
purchasedRedownload
TB,R,GisPurchasedRedownload,V_purchasedRedownload
T@"NSString",R,V_redownloadParams
T@"NSString",R,V_releaseDate
ratingLabel
T@"NSString",R,V_ratingLabel
ratingRank
T@"NSNumber",R,V_ratingRank
T@"NSString",R,V_storefront
storeTransactionID
T@"NSString",R,V_storeTransactionID
T@"NSString",R,V_storeCohort
subGenres
T@"NSArray",R,V_subGenres
supports32BitOnly
TB,R,V_supports32BitOnly
T@"NSDictionary",R,V_nameTranscriptions
yyyy-MM-dd'T'HH:mm:ss'Z'
iAdConversionDate
T@"NSDate",R
iAdImpressionDate
T@"NSNumber",R,V_status
SP_%@
SAVEPOINT %@
RELEASE SAVEPOINT %@
ROLLBACK TRANSACTION TO SAVEPOINT %@
ROLLBACK TRANSACTION
COMMIT TRANSACTION
BEGIN DEFERRED TRANSACTION
currentError
T@"NSError",R,C,N
options
T@"SQLiteConnectionOptions",R,C,N,V_options
T@"<SQLiteConnectionDelegate>",W,N,V_delegate
lastChangeCount
Statement from a different connection
ROWID
v32@?0@8@16^B24
+[%@ databaseTable] not implemented
SELECT 1 FROM %@ WHERE %@ = ? LIMIT 1;
 FROM 
.ROWID = ?;
SELECT 1 FROM 
 =  ? LIMIT 1;
UPDATE 
 SET 
 = ?
 = ?;
INSERT OR REPLACE INTO 
) VALUES (?
[%public}@] Error: %@
DELETE FROM %@ WHERE %@ = ?;
persistentID
Tq,R,N,V_persistentID
existsInDatabase
success
TB,R,V_success
Tq,R,V_accountID
requestingAccount
T@"ACAccount",R,V_requestingAccount
revision
T@"NSNumber",R,V_revision
purchaseHistoryContext
TQ,R,V_purchaseHistoryContext
Keychain failed to return value (error %d): %@
Keychain failed to return value (error %d)
v24@?0^v8Q16
App Store User Data Encryption
SecItemCopyMatching succeeded with empty results
%@.%@
com.apple.appstored.encryption
?&%+=;
%@=%@
&%@=%@
com.apple.appstored.StoreKit.ForcedSandbox
T@"NSString",R,N,V_bundleVersion
T@"NSString",R,N,V_localizedName
Tq,R,N,V_storeExternalVersionID
Tq,R,N,V_storeItemID
useSandbox
TB,R,N,V_useSandbox
PRAGMA table_info(%@);
PRAGMA user_version;
SELECT name FROM sqlite_master where name = '%@'
PRAGMA user_version = %lld;
currentUserVersion
runSilently
TB,N,V_runSilently
   - %@
   - <no transactions>
errorDomain
errorCode
errorDescription
hasErrorDomain
T@"NSString",&,N,V_errorDomain
hasErrorCode
Ti,N,V_errorCode
hasErrorDescription
T@"NSString",&,N,V_errorDescription
CapabilitiesMatch
MismatchedCapabilities
wi-fi
lib_thinningHeaders
pipeline
T@"<AppInstallPipeline>",W,V_pipeline
com.apple.appstored.TaskQueue.networkQueue
com.apple.appstored.TaskQueue
maxConcurrentOperationCount
T@"NSString",C
tasks
T@"NSArray",R,C
qualityOfService
com.apple.private.alloy.appstore
com.apple.appstored.XDCMessageBroker
No device provided
No payload provided
T@"<XDCServiceDelegate>",W,V_delegate
XDCServiceDevicesDidChangeNotification
-shm
-wal
databases/%ld/update
cell
conr
devs
ntwk
powr
migr
requiresDeviceSecurity
requiresMigrationComplete
requiresNetwork
requiresPowerPluggedIn
asset_statusCode
app_package
blocked
bytes_offset
bytes_total
clear_hash_array
data_promise_id
disk_usage
dp_info
hash_array
hash_size
hash_type
initial_odr_size
locate_asset_cache
odr_manifest_url
package_type
package_url
parent_id
provisioning_profiles
streaming_zip
variant_id
PRAGMA user_version = 1;
CREATE TABLE IF NOT EXISTS schema_version (schema_name TEXT, schema_version INTEGER DEFAULT 0, PRIMARY KEY(schema_name));
SELECT schema_version FROM schema_version WHERE schema_name = ?
PRAGMA table_info(%@)
INSERT OR REPLACE INTO schema_version (schema_name, schema_version) VALUES (?, ?)
SELECT name FROM sqlite_master where name = ?
currentSchemaVersion
com.apple.AppStoreFoundation.TransactionStore
Transactions
activeTransactions
T@"NSCountedSet",R,C
transactionCount
isExecuting
isFinished
hasAppAssetPromise
Coordinator does not conform to IXCoordinatorWithAppAssetPromise
Failure reason was not specified
fake-promise
Expected app promise `%@` but instead found `%@`
Could not create an app data promise using %@
{ bundleID: %@ clusterID: %@ clusterVersion: %@ itemID: %@ launches weight: %@ usage weight: %@}
%@:%@
clusterID
T@"NSNumber",C,N,V_clusterID
clusterVersion
T@"NSNumber",C,N,V_clusterVersion
com.apple.appstored.DataMigrationObserver
migrationComplete
TB,R,GisMigrationComplete
DMPerformMigrationIfNeeded
/System/Library/PrivateFrameworks/DataMigration.framework/DataMigration
????????
externalID
T@"NSUUID",C,N,V_externalID
logCode
T@"NSString",C,N,V_logCode
stringValue
com.apple.appstored.callout
com.apple.appstored.dispatch
com.apple.appstored.badge
provisionedApps
T@"NSArray",&,N,V_provisionedApps
sms-private://app?appBundleID=%@
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
com.apple.AppStoreDaemon.LaunchServicesCatalog
NOT bundleID IN %@
v24@?0@"BSProcessHandle"8@"NSError"16
@"NSEnumerator"8@?0
v24@?0@"LSApplicationProxy"8^B16
bundleIDs
isPlaceholder
observer
T@"<LibraryCatalogObserver>",W
T@"<LibraryCatalogObserver>",W,V_observer
CELLULAR_DATA_PROMPT_TITLE_UPDATES_ROAMING
CELLULAR_DATA_PROMPT_TITLE_UPDATES
CELLULAR_DATA_PROMPT_BODY_UPDATE_LIMIT_%@
CELLULAR_DATA_PROMPT_BODY_UPDATE_TOTAL_%@
CELLULAR_DATA_PROMPT_BODY_DISCLAIMER
CELLULAR_DATA_PROMPT_TITLE_DOWNLOAD_ROAMING_%@
CELLULAR_DATA_PROMPT_TITLE_DOWNLOAD_%@
CELLULAR_DATA_PROMPT_TITLE_UPDATE_ROAMING_%@
CELLULAR_DATA_PROMPT_TITLE_UPDATE_%@
CELLULAR_DATA_PROMPT_BUTTON_DOWNLOAD
CELLULAR_DATA_PROMPT_BUTTON_LATER_WLAN
CELLULAR_DATA_PROMPT_BUTTON_LATER_WIFI
CELLULAR_DATA_PROMPT_BODY_REMAINING_%@
CELLULAR_DATA_PROMPT_BODY_INITIAL_%@
wapi
CelularDataPromptActionDownloadLater
CelularDataPromptActionDownloadNow
app_install_remote
destination_id
external_id
com.apple.AppStoreFoundation.LibraryService
@"NSArray"16@?0@"NSArray"8
com.apple.appstored.URLResponseDecoder
com.apple.appstored.URLRequestProperties
compressRequestBody
TB,V_compressRequestBody
bagURL
T@"AMSBagValue",&,V_bagURL
dataEncoding
Tq,V_dataEncoding
KBSyncType
Tq,V_KBSyncType
requestCachePolicy
TQ,V_requestCachePolicy
requestBodyData
T@"NSData",C,V_requestBodyData
requestHeaders
T@"NSDictionary",C,V_requestHeaders
requestMethod
Tq,V_requestMethod
requestParameters
T@"NSDictionary",C,V_requestParameters
shouldAppendGUIDParameter
TB,V_shouldAppendGUIDParameter
T@"NSURL",C,V_URL
URLKnownToBeTrusted
TB,V_URLKnownToBeTrusted
@"AMSPromise"16@?0@"AMSURLRequest"8
com.apple.appstored.FamilyManager.notifications
SC_Info
com.apple.appstored.ActivityManager.callout
com.apple.appstored.ActivityManager.dispatch
CrossfirePost
OcelotPostSummary
OcelotPostPayout
OcelotPayoutReset
DNUPost
Restore Retry
Sbsync
DAAPUpdate
Unknown
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.appstored.PostAnalytics
com.apple.appstored.ArcadePostSummary
com.apple.appstored.ArcadePostPO
com.apple.appstored.ArcadeResetPO
com.apple.appstored.PostDnu
com.apple.appstored.RestoreRetry
com.apple.appstored.Sbsync
com.apple.appstored.TestFlightFeedback
com.apple.appstored.AutoUpdates
com.apple.appstored.DAAPUpdate
Startup
Daemon start
com.apple.appstored.URLSessionManager
songId
serialNumber
v16@?0@"AMSURLRequest"8
v16@?0@"AMSURLResult"8
failed-items
customerMessage
item-id
device-name
store-front-id
software-external-version-identifier
serial-number
failedItems
T@"NSDictionary",R,V_failedItems
storeplatform-lookup-url
storeplatform-lookup-url-unpersonalized
signed-actions
app-usage-flush-interval-seconds
authorizeMachine
available-software-updates-extended-reload-frequency-seconds
available-software-updates-extended-reload-frequency-seconds-cellular
p2-content-restore/max-item-count
p2-content-restore/url
invalid-build-tools/invalid-versions
invalid-build-tools/delta-incompatible-versions
drm-recovery
app-usage-analytics-post-interval-seconds
metrics/sampling/custom/xp_amp_usage_analytics/percentage
app-usage-analytics-include-launches
ocelot-post-interval-seconds
ocelot-post-payout-interval-seconds
ocelot-payout-qualifying-duration-seconds
onDemandResources
bundle-owns-check
app-usage-posts-per-day
app-usage-post-grace-period-seconds
app-usage-reset-actor-id-frequency-seconds
metrics/sampling/custom/xp_amp_app_usage_dnu/percentage
cluster-mappings-url
cluster-mappings-reload-frequency-secs
iap-daap/base-url
iap-daap/database-id
iap-daap/forced-refresh-frequency-minutes
manage-subs-app-delete-blacklist
purchase-daap/base-url
purchase-daap/database-id
purchase-daap/forced-refresh-frequency-minutes
subscription-keybag-refresh
sandbox-subscription-keybag-refresh
subscription-keybag-refresh-interval-in-seconds
fsEntitlementsSrv
fsEntitlementsTimeout
fsEntitlementsRefreshIntervalInSeconds
ds-appleid-lookup
currentStorefrontCountryCodeISO3A
app-receipt-create
p2-product-offers
p2-product-offers-batch-limit
renew-vpp-receipt
automatic-downloads2/downloads-url
pendingApps
songDownloadDone
hideableSystemApps
testflight-visual-feedback/backoff-delays
testflight-visual-feedback/backoff-random-range
testflight-visual-feedback/get-image-upload-urls-url
testflight-visual-feedback/upload-feedback-url
available-software-updates
da-do-not-update-list
updates-use-optimized-requests
view-software-updates
v2-update-scheduling-enabled
available-software-updates-background-reload-frequency
available-software-updates-background-reload-frequency-cellular
appPurgeGracePeriod
appPurgeVerifyAvailability
amd-domains
receipt-expiration-warning-threshold
atv-headboard-url
p2-content-restore/gzip
up-to-date-claim
push-notifications/environment
welcome-to-app-store-notification-sample
welcome-to-app-store-notification-delay
welcome-to-app-store-notification-title
welcome-to-app-store-notification-message
welcome-to-app-store-notification-later
welcome-to-app-store-notification-remind-me
welcome-to-app-store-notification-dont-remind-me
welcome-to-app-store-notification-actionButton
welcome-to-app-store-notification-actionURL
buyProduct
buyProductPlaceholder
p2-in-app-buy
p2-in-app-buyPlaceholder
amd-finish-provisioning
amd-finish-provisioningPlaceholder
md-finish-provisioning
md-finish-provisioningPlaceholder
amd-sync-machine
amd-sync-machinePlaceholder
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/authorizeMachine
production
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/getSubscriptionStatus
https://sandbox.itunes.apple.com/WebObjects/MZFinance.woa/wa/getSubscriptionStatus
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/fsEntitlementsSrv
https://tf-feedback.itunes.apple.com/ingest/api/v1/getImageUploadUrls
https://tf-feedback.itunes.apple.com/ingest/api/v1/uploadFeedback
https://buy.itunes.apple.com/WebObjects/MZBuy.woa/wa/buyProduct
https://buy.itunes.apple.com/WebObjects/MZBuy.woa/wa/p2-in-app-buy
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/anonymousFinishProvisioning
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/finishMachineProvisioning
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/syncMachine
expired
TB,R,N,GisExpired
expirationDate
profile
profileVersion
appUsageFlushIntervalSeconds
T@"AMSBagValue",R
autoUpdateReloadIntervalSeconds
autoUpdateReloadIntervalCellular
deltaIncompatibleBuildToolVersions
invalidBuildToolVersions
drmRecovery
crossfirePostIntervalSeconds
T@"URLBagMemoizedValue",R
crossfireSamplingPercentage
crossfireIncludeLaunches
odrURL
ownsCheckURL
mescalSignedActions
personalizedLookupURL
unpersonalizedLookupURL
appUsagePostGracePeriodSeconds
appUsagePostsPerDay
appUsageResetActorIDFrequencySeconds
appUsageSamplingPercentage
clusterMappingURL
clusterMappingRefreshFrequencySeconds
IAPInfoBaseURL
IAPInfoForcedRefreshMinutes
IAPInfoDatabaseID
PurchaseHistoryBaseURL
PurchaseHistoryDatabaseID
PurchaseHistoryForcedRefreshMinutes
subscriptionEntitlementsRefreshIntervalInSeconds
subscriptionEntitlementsTimeout
subscriptionEntitlementsURL
appleIDLookupURL
T@"AMSBagValue",R,N
countryCode
createAppReceiptURL
productOffersURL
productOffersBatchSize
renewVPPReceiptURL
automaticDownloadsURL
completeStoreDownloadURL
pendingAppsURL
pushNotificationEnvironment
backoffDelays
backoffRandomRange
getImageUploadURLsURL
uploadFeedbackURL
welcomeToAppStoreDelay
welcomeToAppStoreSample
welcomeToAppStoreTitle
welcomeToAppStoreMessage
welcomeToAppStoreLaterButton
welcomeToAppStoreRemindMe
welcomeToAppStoreDontRemindMe
welcomeToAppStoreActionButton
welcomeToAppStoreActionURL
authorizeURL
contentRestoreMaxItemCount
contentRestoreURL
manageSubsOnAppDeleteBlacklist
ocelotPostIntervalSeconds
T@"URLBagMemoizedValue",R,N
ocelotPayoutQualifyingDurationSeconds
ocelotPostPayoutIntervalSeconds
sbsyncProductionURL
sbsyncSandboxURL
sbsyncRefreshIntervalSeconds
upToDateClaimURL
TB,R,N,GisExpired,Vexpired
T@"NSDate",R,N,VexpirationDate
T@"NSString",R,C,N,Vprofile
T@"NSString",R,C,N,VprofileVersion
addedApps
T@"NSArray",&,V_addedApps
removedApps
T@"NSArray",&,V_removedApps
isLast
TB,V_isLast
com.apple.AppStoreDaemon.PurchaseHistoryDAAPResponseDecoder.pasrsingQueue
shouldReportAnonymousPings
storeItemID == %@
requestProperties
T@"URLRequestProperties",R,C,V_requestProperties
HEAD
Invalid response, expected content length unknown
Invalid response, status code: %ld
contentLength
T@"NSNumber",R,V_contentLength
X-Apple-TA-Device
X-Apple-TA-OS-Version
<XDCDevice: %p pairingID = %@>
TB,R,GisActivePairedDevice,V_activePairedDevice
destinationID
T@"NSString",R,V_destinationID
pairingID
T@"NSUUID",R
supported
TB,R,GisSupported,V_supported
systemVersion
thinningHeaders
thinningVariant
T@"NSString",R,V_thinningVariant
tombstone
TB,R,GisTombstone,V_tombstone
AssetErrorDomain
com.apple.appstored.AssetSession
Asset URL has expired
Invalid status code `%ld`
Data consumer is missing
Apple-Download-Type
configuration
T@"NSURLSessionConfiguration",R
com.apple.itunesstored.private
com.apple.appstored.XPCServiceBroker
UserInfo
com.apple.distnoted.matching
com.apple.notifyd.matching
com.apple.appstored.%@
Cannot execute asynchronous tasks inline
T@"NSError",C,V_error
TB,V_success
com.apple.appstored.XPCRequestToken.%@.%@
[%@]
T@"NSUUID",R,V_externalID
T@"NSString",R,V_logUUID
notificationClient
T@"<XPCNotificationClient>",R,V_notificationClient
Passing an intent of 'lib_IXCoordinatorIntentAny' is not supported.
Don't know how to find coordinator for bundle ID: %@ with intent: %lu
hasInitialODRAssetPromises
hasPlaceholderPromise
hasInstallOptions
Feedback
`%@` does not support setPreparationPromise:error:
Responsible client was `%lu`
`%@` does not support setInitialODRAssetPromises:error:
hasUserDataPromise
`%@` does not support setUserDataPromise:error:
security-promise
`%@` does not support setDeviceSecurityPromise:error:
`%@` does not support deviceSecurityPromiseWithError:error:
`%@` does not support setTargetGizmoPairingID:error:
`%@` does not support setImportance:error:
`%@` does not support setInstallOptions:error:
lib_appStoreIsOwningClient
lib_coordinatorIntent
lib_expectsDeviceSecurityPromise
lib_expectsInitialODRPromises
lib_expectsPlaceholderPromise
lib_hasAppAssetPromise
lib_hasCompletedPlaceholder
lib_hasInitialODRAssetPromises
lib_hasInstallOptions
Initiating
Updating
RestoringDemoted
Restoring
Promoting
Watch
Unknown (%lu)
No URL was specified for package `%lld`
downloadResponse
T@"AppInstallDownloadResponse",&,V_downloadResponse
assetRequest
T@"AssetRequest",R,V_assetRequest
T@"CoordinatorPromiseDataConsumer",R,V_dataConsumer
Metadata not found
results
T@"NSArray",R,C,V_results
com.apple.appstored.AppInstallQueue
Unexpected active phase `%@`
v24@?0@"AssetResult"8@"NSError"16
v16@?0@"AppInstallPolicy"8
com.apple.AppStoreFoundation.XPCNotificationCenter
Service is not available.
Not entitled for this service.
processInfo
T@"AMSProcessInfo",R,V_processInfo
XPCServiceClientUserInfoKey
_DownloadSize
_IsZipStreamable
_Measurement
_StartOfDataRange
%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
downloadOffset
T@"NSNumber",R,N,V_downloadOffset
downloadSize
T@"NSNumber",R,N,V_downloadSize
T@"NSError",R,N,V_error
T@"NSNumber",R,N,V_hashType
T@"NSArray",R,N,V_hashes
T@"NSString",R,N,V_title
T@"NSURL",R,N,V_URL
cellularDownload
T@"EvaluatorDownload",&,V_cellularDownload
cellularIdentity
T@"ASDCellularIdentity",&,V_cellularIdentity
evaluatorResult
Tq,R,V_evaluatorResult
diagnosticServiceEntitlement
T{_ASDServiceEntitlement=@@},V_diagnosticServiceEntitlement
diagnosticServiceProvider
T@?,C,V_diagnosticServiceProvider
CrossfireServerEntitlement
T{_ASDServiceEntitlement=@@},V_CrossfireServerEntitlement
CrossfireServiceProvider
T@?,C,V_CrossfireServiceProvider
installationServiceEntitlement
T{_ASDServiceEntitlement=@@},V_installationServiceEntitlement
installationServiceProvider
T@?,C,V_installationServiceProvider
libraryServiceEntitlement
T{_ASDServiceEntitlement=@@},V_libraryServiceEntitlement
libraryServiceProvider
T@?,C,V_libraryServiceProvider
PurchaseHistoryServiceEntitlement
T{_ASDServiceEntitlement=@@},V_PurchaseHistoryServiceEntitlement
PurchaseHistoryServiceProvider
T@?,C,V_PurchaseHistoryServiceProvider
PurchaseServiceEntitlement
T{_ASDServiceEntitlement=@@},V_PurchaseServiceEntitlement
PurchaseServiceProvider
T@?,C,V_PurchaseServiceProvider
RepairServiceProvider
T@?,C,V_RepairServiceProvider
RepairServiceEntitlement
T{_ASDServiceEntitlement=@@},V_RepairServiceEntitlement
UpdatesServiceEntitlement
T{_ASDServiceEntitlement=@@},V_UpdatesServiceEntitlement
UpdatesServiceProvider
T@?,C,V_UpdatesServiceProvider
runUntilIdleExit
assumeDaemonIdentity
enforceWhitelistForDomain:
sharedInstance
validateActiveInstallations
requestPollWithReason:
init
setDiagnosticServiceEntitlement:
defaultService
setDiagnosticServiceProvider:
setInstallationServiceEntitlement:
setInstallationServiceProvider:
setLibraryServiceEntitlement:
setLibraryServiceProvider:
setPurchaseServiceEntitlement:
setPurchaseServiceProvider:
setPurchaseHistoryServiceEntitlement:
setPurchaseHistoryServiceProvider:
setRepairServiceEntitlement:
setRepairServiceProvider:
setUpdatesServiceEntitlement:
setUpdatesServiceProvider:
setCrossfireServerEntitlement:
setCrossfireServiceProvider:
currentIdentity
machPortName
newServerWithCatalog:forMachServiceName:
ensureDefaultsForActiveAccount
sharedManager
performStartup
.cxx_destruct
_cacheDatabase
_serviceBroker
_registerForNotification
_updateState
_elevated
createAppEventFromAppMetadata:
createMetricsEventFromAppMetadata:context:
initWithTopic:
_getCurrentApps
orderedSetWithOrderedSet:
allApps
lib_loggableShortDate
calcluateUsageFromDate:endDate:appMetadata:
isCandidateAppBundleID:
startDate
metadataForBundleID:date:
endDate
characterSetWithCharactersInString:
scannerWithString:
isAtEnd
scanUpToCharactersFromSet:intoString:
timeIntervalSince1970
shouldEnableAppUsageMetricsForSession:override:
_messageForProtectionSpace:
_titleForProtectionSpace:
proposedCredential
string
protocol
receivesCredentialSecurely
setLocalizedMessage:
setLocalizedTitle:
setUser:
_challenge
_localizedMessage
_localizedTitle
_user
copy
count
arrayWithCapacity:
UUID
externalID
_validateStoreItem:externalID:withError:
purchase_installForStoreItem:usingPurchaseInfo:error:
logKey
lib_legacyJobID
bundleID
resultWithInvalidActivity:bundleID:
addObject:
setValue:forProperty:
isDiscretionary
isRemoteInstall
itemID
beginRemoteProgressForBundleID:storeItemID:
beginProgressForBundleID:storeItemID:
hasWatchApp
hasWatchOnlyApp
hasWatchIndependentApp
_requestCompanionInstallationForStoreItem:
importInstall:error:
userInitiateInstallID:
connection
initWithPersistentID:onConnection:
copyEvaluatorDownload
modifyUsingTransaction:
defaultInstallPolicy
priority
setRequiresPowerPluggedIn:
initWithDownload:
suppressDialogs
suppressEvaluatorDialogs
setSuppressDialogs:
runSubTask:returningError:
cellularResult
setCellularResult:
constrainedResult
setConstrainedResult:
setInstallPolicy:
resultWithExistingActivity:bundleID:
resultWithValidActivity:bundleID:
enumerateObjectsUsingBlock:
completePurchaseWithResults:usingPurchaseInfo:
completeWithSuccess
lib_metadataWithStoreItem:
account
lib_setPropertiesWithAccount:
assetFullPackage
sinf
lib_setPropertiesWithSINFData:
metadataFromStoreMetadata:
setSkipIfInstalled:
redownloadParams
setProperty:forKey:
stringValue
setRedownloadParams:
activePairedDevice
arrayWithObjects:count:
pairingID
firstObject
installWatchApps:onPairedDevice:withReplyHandler:
initWithStoreItems:purchaseInfo:purchaseBatch:
main
_fileName
_purchaseBatch
_purchaseInfo
_storeItems
defaultCenter
postNotificationName:object:
defaultMonitor
isDataMigrationComplete
isDeviceLocked
isSetupComplete
_postStateDidChangeNotification
_dispatchQueue
_deviceLockToken
_dataMigrationComplete
_deviceLocked
_setupComplete
_importFromDictionary:
rawUpdateDictionary
_buyParams:
_parentalControlsName:
valueForKey:
_externalVersionIdentifier:
numberWithLongLong:
_parentalControlsRank:
setDateStyle:
setTimeStyle:
dateFromString:
_appsAppleDictionary:
initWithUpdateDictionary:
evid
installDate
isBackground
isPerDevice
parentalControlsName
setOffloaded:
setBackground:
setInstallDate:
setMetricsData:
setPerDevice:
setUpdateState:
parentalControlsRank
releaseDate
_bundleID
_itemID
_evid
_parentalControlsRank
_releaseDate
initWithDictionary:copyItems:
indexOfObjectPassingTest:
isDeviceBasedVPP
isAppStoreVendable
_lib_isValidDSID:
lib_storeMetadata
ams_iTunesAccountWithAltDSID:
bundleContainerURL
metadataFromPlistAtURL:error:
lib_downloaderDSID
lib_purchaserDSID
lib_purchaseOwner
dataWithBytesNoCopy:length:freeWhenDone:
initWithOSStateData:length:
completedUnitCount
_completedUnitCount
_totalUnitCount
numberWithInteger:
containsPredicateWithProperty:values:
predicateWithProperty:equalToValue:
predicateMatchingAllPredicates:
anyOnConnection:predicate:
buyParams
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
initWithConnection:
updateBuyParamsForBundleID:
_connection
_amsMetrics
enqueueEvent:
enqueueEvents:
flush
doubleForKey:
numberWithDouble:
initWithContainerID:bag:
shouldCollectAppInstallationMetrics
_collectionChance
insertEventIntoDatabase:
_metrics
eventType
numberWithUnsignedChar:
eventSubtype
applicationProxyForIdentifier:
appState
isInstalled
bundleVersion
storeCohortMetadata
length
deviceIdentifierForVendor
UUIDString
externalVersionIdentifier
isBetaApp
numberWithBool:
longLongValue
itemName
shortVersionString
storeFront
valueForProperty:
dictionaryWithObjects:forKeys:count:
boolValue
setBundleID:
setBundleVersion:
setCohort:
integerValue
setCount:
setDeviceVendorID:
setEventType:
setEventSubtype:
setEvid:
setIsBeta:
setItemID:
setItemName:
serverTimeFromDate:
setEventTime:
setStartTime:
setShortVersion:
setStorefront:
dateWithTimeIntervalSince1970:
setDate:
stringWithFormat:
doubleValue
copyWithZone:
externalTypeForEventType:
externalSubtypeForEventType:
databaseEntityClass
initWithExternalEvent:
accountID
addForeGroundUsage:duration:
appMetadata
externalMapping
eventKey
launchEndTime
launchStartTime
timestamp
foregroundEvents
_mutableForegroundEvents
existsInDatabase
date
initWithDouble:
predicateWithProperty:value:comparisonType:
queryOnConnection:predicate:
deleteAllEntities
countOfEntities
noteUpdatesStateChanged:
setObject:forKey:
enumerateMemoryEntitiesWithProperties:usingBlock:
objectForKey:
processUpdate:existingUpdate:forReason:
databaseID
setValuesWithDictionary:
removeObjectForKey:
initWithPropertyValues:onConnection:
deleteFromDatabase
enumerateKeysAndObjectsUsingBlock:
propertyValues
mutableCopy
null
purchaseID
_setUpdateState:forBundleID:itemID:withPurchaseID:isUserInitiated:
isUserInitiated
_logState:forBundleID:
setObject:forKeyedSubscript:
numberWithInt:
completeUpdateInstallationForBundleID:
deleteUpdatesInstalledBefore:
handleAppsUninstalled:
mergeAvailableUpdates:withReason:availableCount:notifyChanges:bundleIDs:
setUpdateState:usingPurchaseInfo:
setUpdateState:legacyContext:
isRemaining
setRemaining:
setUpdate:
_remaining
_update
_bytes
copyEvaluatorDownloadUsingConnection:
writeReceipt:forBundleID:withStyle:error:
applicationProxyForIdentifier:placeholder:
isValid
dataContainerURL
_writeReceipt:toContainerURL:withStyle:error:
plugInKitPlugins
countByEnumeratingWithState:objects:count:
URLByAppendingPathComponent:isDirectory:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToURL:atomically:
writeReceipt:forBundleIdentifier:style:
_initWithOwnerType:purchaserDSID:
ownerType
isEqualToOwner:
alternateOwnerWithDSID:
externalOwner
familyOwnerWithDSID:
machineOwner
primaryOwnerWithDSID:
isRestorable
_ownerType
lib_statusCode
shouldPostCrossfireMetrics
buildVersion
hardwarePlatform
_handleAnalyticsUsageSwitchChange:
addObserver:selector:name:object:
alloc
_flushMetricsWithReason:completion:
_getAppEventsWithCompletionBlock:
defaultProperties
_recordExternalAppEvents:completionBlock:
componentsJoinedByString:
contextForType:
_recordInternalEventsForBundleIDs:eventType:installType:context:
_recordLaunches
_postMetrics
_resetWithReason:resetActivity:
keepAliveWithName:
sharedDatabase
executeStatement:error:
isAppAnalyticsAllowed
getAppEventsForType:context:class:
createMetricsEventForAppEvent:eventType:context:
setUsageCount:
cohort
deviceVendorID
setAppSessionReporterKey:
setOsBuild:
setPlatform:
startTime
setTimeRangeStart:
setTimeRangeEnd:
isBeta
setBeta:
storefront
isStoreOriginated
isProfileValidated
hasMIDBasedSINF
isOffloaded
appUsageUseTestTopic
readUsingSession:
importAppMetadata:class:error:
getPriorAppMetadataWithContext:class:
initWithPriorInstalls:installEvents:
setHistoryMap:
createMetricsEventsForEventType:events:context:
addObjectsFromArray:
_includeLaunches
getLaunchAppEventsWithContext:
importAppEvents:class:error:
getAppEventsForType:context:class:orderingProperties:
createAggregateMetricsEventsForEventType:events:context:
isTemporary
getDeletedAppsEventsWithContext:
setKeepAlive:
getAggregatedEventMap:eventType:context:
keyEnumerator
flushMetricsWithReason:completion:
initWithName:
crossfireIntervalStartDate
metricsContext:appUsageType:error:
setIsTemporary:
setLaunchesStartDate:
_allAppEvents:
_resetDB
unregisterActivity:
defaultBag
crossfireIncludeLaunches
valueWithError:
_shouldEnableCrossfireMetricsForSession
_cleanup:reason:
insertEventsIntoDatabase:
createAppEventsForBundleIDs:eventType:installType:connection:
writeAppMetadataForBundleIDs:context:
recordCrossfireIntervalStartDate
writeCurrentAppMetadata:
resetActivity:reason:
getAppEventsWithCompletionBlock:
getAppMetadataForBundleID:connection:
recordAppEvent:completionBlock:
recordDeletedApps:
recordLaunchesWithCompletionBlock:
recordMetricsWithCompletionBlock:
recordInstalledApps:installType:
resetMetricsWithCompletionBlock:
sendMetricsWithCompletionBlock:
setupWithReason:
createMetricsEventsForEventType:context:
decorateMetricsEvent:appMetadata:context:
isCandidateAppProxy:
metricsTopicForAppUpdateType:
readCurrentApps:
writeAppMetadata:context:
_createAggregateMetricsEventsForEventType:events:context:
_handleMacAnalyticsUsageSwitchChange:
_calloutQueue
_collectingMetrics
_osBuild
_platform
initWithDomain:
_registerForSettingsChangeNotifications
_activeDSID
_setActiveAccountPreferenceValue:forKey:isTopLevel:
_getActiveAccountPreferenceValueForKey:withDefaultValue:isTopLevel:
_setAutomaticDownloadsEnabled:forKind:withCompletion:
_postSettingsChangedExternallyNotification
_synchronizeAutomaticDownloadsSettingWithCompletion:
_getAutomaticDownloadsEnabledForKind:withCompletion:
_settingsBag
initWithAccount:bag:
perform
enabledMediaKinds
initWithEnabledMediaKinds:account:bag:
synchronize
dictionaryForKey:
_handleSettingsChangedExternallyNotification
synchronizeUserDefaultsDomain:keys:
bagKeySet
registerBagKeySet:forProfile:profileVersion:
addBagKey:valueType:defaultValue:
bagForProfile:profileVersion:
activeDSID
setActiveDSID:
getActiveAccountPreferenceValueForKey:withDefaultValue:
setActiveAccountPreferenceValue:forKey:
setAutomaticSoftwareDownloadsEnabled:withCompletion:
getAutomaticSoftwareDownloadsEnabledWithCompletion:
_domainAccessor
_npsManager
intValue
stringByReplacingOccurrencesOfString:withString:
dataUsingEncoding:
dataForRequestWithError:
contentType
initWithCurrentRevision:
_revision
initWithName:applicableEntitlement:mergeHandler:
applicableEntitlement
mergeHandler
_mergeHandler
_applicableEntitlement
_currentClient
initWithOptions:
claimedBundleIdentifiers
success
currentRequestToken
repairAppWithOptions:replyHandler:
errorData
unarchivedObjectOfClass:fromData:error:
appleID
downloaderID
currentError
isBootstrapping
_fetchLatestVersion
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
isAbsolutePath
fileExistsAtPath:
stringByDeletingLastPathComponent
fileSystemRepresentation
lib_accountDSIDValue
lib_stringByCopyingUTF8StringWithLength:
lib_volumePath
initWithObjects:
isCancelled
objectAtIndexedSubscript:
_loadDownloadsFromStart:toEnd:
removeAllObjects
removeObjectsInRange:
setSuccess:
ams_sharedAccountStore
ams_activeiTunesAccount
automaticDownloadsURL
pendingAppsURL
rangesToLoad
items
lock
unlock
_newURLRequestWithStartIdentifier:endIdentifier:error:
setError:
defaultSession
dataTaskPromiseWithRequest:
resultWithError:
object
defaultItemResponseWithDictionary:
keybag
lib_importKeybagData:
_handleResponse:
_account
initWithBag:
setAccount:
setRequestEncoding:
dictionary
deviceGUID
lib_keybagSyncDataForAccount:withTransactionType:
unsignedLongLongValue
_bagKey
requestWithMethod:bagURL:parameters:
initWithQueueType:
storeItems
_queueType
_requestEncoder
_rangesToLoad
setCachePolicy:
lib_thinningHeaders
setValue:forHTTPHeaderField:
requestByEncodingRequest:parameters:
sharedConnection
isDiagnosticSubmissionAllowed
effectiveBoolValueForSetting:
_featureNameForMediaType:
effectiveValueForSetting:
initWithInteger:
isDiagnosticsSubmissionAllowed
rankForMediaType:
bytesReceived
setBytesReceived:
dataConsumer
setDataConsumer:
error
_bytesReceived
_dataConsumer
_error
objectAtIndex:
dictionaryRepresentation
initWithCapacity:
addMetadata:
allocWithZone:
metadataType
clearMetadatas
metadatasCount
metadataAtIndex:
readFrom:
writeTo:
mergeFrom:
metadatas
setMetadatas:
_metadatas
initWithDatabaseEntity:properties:
bestPackageOnConnection:withProperties:
_initWithInstall:package:
integerValueForProperty:
coordinatorBuilderWithError:
setLogKey:
buildCoordinatorWithError:
failInstallID:withError:
_shouldCancelInstallationWithError:
cancelInstallID:withCoordinator:error:
deviceIsAppleTV
lib_completeUserDataPromiseWithError:
failInstallID:withCoordinator:error:
lib_expectsInitialODRPromises
lib_expectsDeviceSecurityPromise
lib_establishDeviceSecurityPromiseWithError:
initWithCoordinator:error:
fetchPromiseID:withError:
isComplete
finishInstallID:withCoordinator:
continueInstallID:withCoordinator:
installInfoForInstallID:
runPreflightWithResponse
logUUID
applicationProxyForItemID:
isPlaceholder
autoDownloadsEnabled
isAutomaticAppDownloadsAllowed
isOnDeviceAppInstallationAllowed
_shouldCancelAsDuplicate
_shouldCancelAutomaticInstallation
_shouldCancel32BitApp
initWithInstall:session:
installID
packageID
preflightResponse
_automaticType
_install
_installInfo
_package
_response
_restoreType
_sourceType
_updateType
_initWithInstallID:result:coordinator:error:
coordinator
result
_installID
_coordinator
_result
initWithProtobufData:type:isResponse:
setDevice:
setMessageID:
setReply:
initWithProtobuf:device:messageID:
copyIDSRepresentation
messageType
device
messageID
isReply
_reply
_messagePayload
_messageType
_device
_messageID
chunkType
setChunkType:
setChunkSize:
setChunkDigests:
_validateAndResetDigestError:
chunkSize
_hashData:
subdataWithRange:
chunkDigests
initWithDigest:type:
finalAndVerifyError:
verifyData:error:
bytesProcessed
bytesValidated
_hashDigest
_index
_bytesProcessed
_bytesValidated
objectForKeyedSubscript:
isAskToBuyEnabled
iTunesDSID
isSharingPurchases
firstName
ams_setNullableObject:forKey:
iCloudDSID
iCloudUsername
iTunesUsername
lastName
isCurrentSignedInUser
initWithDictionaryRepresentation:
setCurrentSignedInUser:
_currentSignedInUser
_askToBuyEnabled
_sharingPurchases
_firstName
_iCloudDSID
_iCloudUsername
_iTunesDSID
_iTunesUsername
_lastName
systemDatabase
initWithDatabase:
setSchemaName:
setSessionClass:
setTransactionClass:
currentSchemaVersion
migrateToVersion:usingBlock:
executeStatement:
storeDescriptor
createOrMigrateStoreUsingSchema:
initWithDictionary:
identifier
dataForSinfDataKey:
_info
predicateMatchingAnyPredicates:
doesNotContainPredicateWithProperty:values:
activeBootstrap
activeInstalls
activeRestores
pendingRestoreMetadataLookup
pendingBootstrap
pendingInstalls
pendingRestoresNeedingOrdering
pendingRestoreSoftFailures
restoreHardFailures
predicateForInstallFromSource:bundleID:itemID:error:
setAuditTokenData:
setBundleIdentifier:
setClientVersion:
lib_agentProcessInfo
lib_daemonProcessInfo
errorWithDomain:code:userInfo:
hashedDescription
setAuthenticationType:
initWithAccount:options:
performAuthentication
finishWithResult:
finishWithError:
addFinishBlock:
initWithBlock:
initWithAccount:
startWithCompletionHandler:
_silentAuthenticateUsingAMS
authenticateReason
setAuthenticateReason:
silentAuthOnly
setSilentAuthOnly:
_silentAuthOnly
_authenticateReason
_boolForKey:applicationId:ifMissing:
_copyNumberForKey:applicationId:
accountPropertyForKey:
recordMigratedAppUsageDB
crossfireNextPostTargetDate
crossfirePostIntervalSecondsOverride
crossfirePostMetricsSamplingPercentageOverride
setCrossfireNextPostTargetDate:
appUsageActorID
appClusterMappingRefreshIntervalOverride
appClusterMappingRefreshTargetDate
appTasteProfileEnabled
appUsageDailyPostCountOverride
appUsageDBMigrated
appUsageEnableMetricsForActorIDSession
appUsageFlushDnuIntervalOverride
appUsageFlushDnuTargetDate
appUsageIntervalStartDate
appUsageLaunchesIntervalStartDate
appUsageNextPostTargetDate
appUsagePostMetricsSamplingPercentageOverride
appUsageResetActorIDOverride
appUsageResetActorIDTargetDate
appUsageTaskGracePeriodOverride
clearAppUsageRecordMetricsForActorIDSession
clearAppUsageIntervalStartDate
clearAppUsageLaunchesIntervalStartDate
recordAppUsageIntervalStartDate
recordAppUsageLaunchesIntervalStartDate
setAppUsageActorID:
setAppClusterMappingRefreshTargetDate:
setAppUsageDBMigrated
setAppUsageEnableMetricsForActorIDSession:
setAppUsageFlushDnuTargetDate:
setAppUsageNextPostTargetDate:
setAppUsageResetActorIDTargetDate:
badgeCount
marketingDemoMode
setBadgeCount:
appPurgeBlacklist
appPurgeCutoffDate
appPurgeRecentInstallCutoffDate
appPurgePluginBlacklist
offloadingAppsEnabled
offloadingGracePeriodStartDate
recordOffloadingGracePeriodStartDateIfUnset
ocelotAppAnalyticsClientID
ocelotPayoutDeviceID
ocelotIntervalStartDate
ocelotPayoutResetDate
ocelotPayoutIntervalStartDate
recordOcelotIntervalStartDate
recordOcelotPayoutIntervalStartDate
setOcelotAppAnalyticsClientID:
setOcelotApps:
setOcelotPayoutResetDate:
setOcelotPayoutDeviceID:
powerPluggedInOverride
attemptedPreflightAccountIDs
clearRestoreDefaults
clearShouldSuppressTermsAndConditionsDialogs
followUpAccounts
performedPostRestoreSoftwareUpdate
restoreItemKinds
restoreItemsForKey:
restoreSoftFailureRetryDate
setAttemptedPreflightAccountIDs:
setFollowUpAccounts:
setPerformedPostRestoreSoftwareUpdate:
setRestoreSoftFailureRetryDate:
setRestoreItemKinds:
setRestoreItemValue:forKey:
setShouldSuppressTermsAndConditionsDialogs:
showAppStoreUpdatesBadge
shouldSuppressTermsAndConditionsDialogs
manageSubsOnDeleteBlacklist
setManageSubsOnDeleteBlacklist:
disableAppStoreUpdatesBadge
lastUpdateCleanupDate
lastUpdateCheckDate
lastAutoUpdateCompletionDate
recordLastUpdateCleanupDate
setLastAutoUpdateCompletionDate:
setLastAutoUpdatePerformDate:
setLastUpdateCheckDate:
setShouldPerformAutomaticUpdates:
useFollowUpsForRestoreFailures
forceDrmMode
allowDownloadOnCellular
automationRunning
batterySaverEnabledOnStartup
bulletinForKey:
cellularSizeLimitOverride
claimHistory
clearUpdateMigrations
clearDaemonCommsSemaphore
clearJobApprovalDate
deamonCommsSemaphoreSet
disablePowerOnStartup
enableAppStoreUpdatesBadge
enableDeamonCommsSemaphore
invalidBuildToolVersions
jobApprovalDate
lastGarbageCollectionDate
lastJobCleanupDate
lastOSMigrationDate
maxConcurrentJobCount
maxConcurrentThermalLimitedJobCount
recordJobApprovalDate
recordLastGarbageCollectDownloads
recordLastJobCleanupDate
recordOSMigrationDate
setBulletins:forKey:
setClaimHistory:
setInvalidBuildToolVersions:
setTransporterConfiguration:
setUpdateMigratorConfiguration:
testFlightVisualFeedbackOverrides
thermalEnabled
transporterConfiguration
updateMigratorConfiguraton
useLaunchCountsForAppUsage
useModernFreeSpaceCheck
domain
isEqualToString:
userInfo
isEqualToNumber:
ams_DSID
skipLatestVersionCheck
shouldPerformAutomaticUpdates
setFetchLatestVersion:
initWithItems:account:
targetItems
initWithRestoreAppInstalls:account:
isErrorBadTokenError:
_processBatchFailureItems:error:context:
_processContentRestoreResponse:context:
remainingItemIDs
itemMap
initWithMemoryEntity:
hardFailItem:withError:
softFailItem:withError:
hardFailures
softFailures
successfulItems
capabilities
lib_deviceIsCapable:
supports32BitOnly
fetchLatestVersion
itemSucceeded:storeItem:
failedItems
code
isErrorSoftFail:
initWithRestoreAppInstalls:
setSkipLatestVersionCheck:
setUserInitiated:
_restoreInstalls
_skipLatestVersionCheck
_userInitiated
_hardFailures
_softFailures
_successfulItems
hardFailWithError:
archivedDataWithRootObject:requiringSecureCoding:error:
removeObject:
importStoreItem:
lib_databaseRepresentationError:
softFailWithError:
_itemMap
_remainingItemIDs
_targetItems
setRequestBodyData:
setClientInfo:
setDataEncoding:
setURL:
setURLKnownToBeTrusted:
setLogUUID:
setRequestMethod:
setRequestCachePolicy:
setValue:forRequestHeader:
initWithRequestProperties:
initWithDataProvider:URL:
setAccountID:
clientInfo
_dataProvider
_URL
_accountID
_clientInfo
_logUUID
sharedDefaultEvaluator
initWithPathEvalulator:
addObserver:forKeyPath:options:context:
initWithQueue:
setDelegate:
addObserver:
_forcePropertyRefresh
removeObserver:forKeyPath:
removeObserver:
dealloc
emulateConstrainedNetwork
emulateCellularNetwork
emulateRoamingNetwork
activeSubscriptionsDidChange
identityForSubscription:usingClient:error:
setRoaming:
inHomeCountry
_updateRoamingStatusForContext:
getCurrentDataSubscriptionContextSync:
copySIMIdentity:error:
lib_digestMD5
path
_setPropertiesUsingPath:
interface
type
getDataStatus:completion:
subscriptionInfoDidChange
simLessSubscriptionsDidChange
dualSimCapabilityDidChange
connectionStateChanged:connection:dataConnectionStatusInfo:
connectionActivationError:connection:error:
preferredDataSimChanged:
preferredDataServiceDescriptorChanged:
currentDataSimChanged:
currentDataServiceDescriptorChanged:
servingNetworkChanged:
connectionAvailability:availableConnections:
dataStatus:dataStatusInfo:
dataSettingsChanged:
internetConnectionStateChanged:
internetConnectionActivationError:
internetDataStatus:
internetConnectionAvailability:
connectionStatusDidChange:
wifiSignalStrengthBarsDidChange:
registrationStatusDidChange:
cellularSignalStrengthBarsDidChange:
lastKnownCountryCodeDidChange:
simActiveDidChange:
copyCellularNetworkIdentityWithError:
observeValueForKeyPath:ofObject:change:context:
interfaceType
_defaultsToken
_pathEvaluator
_subscriptionContext
_telephonyClient
_connectionStatusService
_connected
_constrained
_expensive
_roaming
_interfaceType
_handlePingMessage:fromDevice:
addHandler:selector:forMessage:
stringWithString:
appendFormat:
enumerateCoordinatorsWithError:usingBlock:
appendString:
autoUpdateReloadIntervalSeconds
setUuid:
uuid
initWithProtobuf:messageType:
messagePayload
initWithData:
sendMessage:toDevice:withReplyHandler:
status
isConnected
isExpensive
isConstrained
isRoaming
checkStoreQueue:
initWithAccountID:
setReason:
setDisplaysDialogs:
setCompletionBlock:
networkQueue
addTask:
replyWithProtobuf:messageType:
sendReply:toDevice:
activeClientsWithReplyHandler:
pingWithReplyHandler:
sendCommandWithDetailedReplyHandler:handler:
sendCommandWithReplyHandler:handler:
_dataForRequestWithKnownApps:revision:
initToMemory
initWithStream:
startContainerWithCode:
_requiredFields
writeString:withCode:
writeUInt32:withCode:
writeUInt8:withCode:
purchaseToken
lockerItemID
writeUInt64:withCode:
endContainerWithCode:
close
propertyForKey:
initWithKnownApps:currentRevision:
_knownApps
_userDatabase
_systemDatabase
_lib_getBytes:count:
getUUIDBytes:
numberWithUnsignedLongLong:
addProvisioningProfile:
setAltDSID:
setAppleID:
setExternalIDString:
setArtworkURLString:
setMessagesArtworkURLString:
setPackageDPInfo:
setPackageSINF:
setPackageURLString:
setStoreCohort:
setStoreFront:
setVendorName:
setVariantID:
setManifestURLString:
provisioningProfileType
setType:
setHasType:
hasType
hasAltDSID
hasAppleID
hasBundleID
setDownloaderID:
setHasDownloaderID:
hasDownloaderID
hasExternalIDString
setExternalVersionID:
setHasExternalVersionID:
hasExternalVersionID
setHasItemID:
hasItemID
setPurchaserID:
setHasPurchaserID:
hasPurchaserID
hasRedownloadParams
hasArtworkURLString
setContainsMessagesExtension:
setHasContainsMessagesExtension:
hasContainsMessagesExtension
hasItemName
setLaunchProhibited:
setHasLaunchProhibited:
hasLaunchProhibited
hasMessagesArtworkURLString
hasPackageDPInfo
hasPackageSINF
hasPackageURLString
hasStoreCohort
hasStoreFront
hasVendorName
clearProvisioningProfiles
provisioningProfilesCount
provisioningProfileAtIndex:
hasVariantID
setHasSkipIfInstalled:
hasSkipIfInstalled
setHasIsBeta:
hasIsBeta
setIsSystemApp:
setHasIsSystemApp:
hasIsSystemApp
setIsStoreApp:
setHasIsStoreApp:
hasIsStoreApp
hasBundleVersion
hasManifestURLString
setHasSuppressDialogs:
hasSuppressDialogs
altDSID
externalIDString
externalVersionID
purchaserID
artworkURLString
containsMessagesExtension
launchProhibited
messagesArtworkURLString
packageDPInfo
packageSINF
packageURLString
storeCohort
vendorName
provisioningProfiles
setProvisioningProfiles:
variantID
skipIfInstalled
isSystemApp
isStoreApp
manifestURLString
_downloaderID
_externalVersionID
_purchaserID
_altDSID
_appleID
_artworkURLString
_bundleVersion
_externalIDString
_itemName
_manifestURLString
_messagesArtworkURLString
_packageDPInfo
_packageSINF
_packageURLString
_provisioningProfiles
_redownloadParams
_storeCohort
_storeFront
_type
_variantID
_vendorName
_containsMessagesExtension
_isBeta
_isStoreApp
_isSystemApp
_launchProhibited
_skipIfInstalled
_suppressDialogs
_has
internalRequestToken
initWithManifestURL:
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
initWithAuthenticationChallenge:
dialogForAuthenticationChallenge:
initWithRequest:
present
selectedActionIdentifier
textfieldValues
user
credentialWithUser:password:persistence:
processInfo
bundleIdentifier
_isExternalURL:
_isSecureURL:
_runWithURLRequest:
_showError:
completeWithError:
thinnedAssetsCategorized
reverseObjectEnumerator
variantDescriptors
findCompatibleDescriptorFromArray:
variantIDs
allKeys
containsObject:
lib_firstObjectPassingTest:
assetsCategorized
applicationType
profileValidated
localizedName
initWithDomain:code:userInfo:
setScheme:
array
queryItemWithName:value:
absoluteString
setQueryItems:
title
kind
_enterpriseInstallationAllowedForBundleID:withName:error:
subtitle
setArtistName:
hasMessagesExtension
setHasMessagesExtension:
_enterpriseInstallationURL:withDigest:
setEnterpriseInstallURL:
_determineCanonicalAssetsForExternalItem:matchedVariantDescriptor:
canonicalIdentifier
host
copyDictionaryRepresentation
initWithPropertyValues:
allValues
_newPackageForExternalAssets:withVariantDescriptor:
setPackages:
MD5s
MD5Size
platformIdentifier
_isSupportedPlatformIdentifier:
_newInstallForItem:manifestURL:manifestDigest:withError:
initWithDigestType:
updateWithData:
finalAndCompute
propertyListWithData:options:format:error:
_newInstallsForUPPManifest:withError:
shouldHideUserPrompts
_showConfirmationPromptForInstalls:response:
_importInstalls:
packages
initWithURL:logKey:
contentLength
copyEvaluatorDownloadWithPackage:
importInstalls:
scheme
caseInsensitiveCompare:
port
endpointWithHostname:port:
initWithEndpoint:parameters:
isLocal
externalManifestSkipHTTPSCheck
initWithURL:
setTimeoutInterval:
lib_defaultUserAgent
setHTTPUserAgent:
ephemeralSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
_handleResponse:withData:
finishTasksAndInvalidate
dataTaskWithRequest:completionHandler:
resume
requestForConfirmationWithManifestURL:firstName:totalCount:
notificationClient
deliverDialogRequest:withResultHandler:
requestForError:withManifestURL:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
initWithManifestURL:requestToken:shouldHideUserPrompts:
_requestManifestInstallationOnActivePairedWatch
clientID
setClientID:
manifestDigest
setManifestDigest:
requestToken
setRequestToken:
setShouldHideUserPrompts:
_downloadIDs
_manifestURL
_receivedDigest
_session
_shouldHideUserPrompts
_clientID
_manifestDigest
_requestToken
_assumeIdentity:
_currentIdentityWithIdentity:
exceptionWithName:reason:userInfo:
_unitTest_resetIdentity
stringByAppendingString:
namespaceWithSuffix:
metricsContainerId
persistedDataPath
contextWithReason:
shouldPerformUpdates
callbackHandler
setCallbackHandler:
includeMetrics
setIncludeMetrics:
isVPPLookup
setIsVPPLookup:
userInitiated
offloadedBundleIDs
perDeviceBundleIDs
purchaseInfoForAppsBuiltWithInvalidTools
purchaseInfoForAppsToRestoreToDRMv1
_includeMetrics
_isVPPLookup
_callbackHandler
_offloadedBundleIDs
_perDeviceBundleIDs
_purchaseInfoForAppsBuiltWithInvalidTools
_purchaseInfoForAppsToRestoreToDRMv1
_runPendingCancelDownloadOperations
_requestURL:
_newBaseRequestBodyDictionaryWithAccountID:
_metadataForStoreItems:
_setItems:
numberOfAvailableDownloads
keybagSyncData:transactionType:outError:
cancelDownloadURL
storeTransactionID
useAppInstallQueue
initWithDownloadQueueType:
downloadQueueType
storeCorrelationID
_numberOfAvailableDownloads
_downloadQueueType
_items
_storeCorrelationID
lib_stringByLimitingToLength:
bundleWithIdentifier:
localizedStringForKey:value:table:
initWithFormat:
requestWithTitle:message:
actionWithTitle:identifier:
setDefaultAction:
setButtonActions:
bundleWithPath:
actionWithTitle:
initWithStatement:
sqlite3_stmt
executeWithError:usingBlock:
reset
int64ForColumnIndex:
enumerateRowsUsingBlock:
numberForColumnIndex:
bindArray:atPosition:
bindData:atPosition:
bindDataCopy:atPosition:
bindDate:atPosition:
bindDictionary:atPosition:
bindDouble:atPosition:
bindFloat:atPosition:
bindInt:atPosition:
bindInt64:atPosition:
bindNullAtPosition:
bindNumber:atPosition:
bindString:atPosition:
bindStringCopy:atPosition:
bindUUID:atPosition:
bindURL:atPosition:
clearBindings
firstInt64Value
firstNumberValue
hasRows
_statement
storeExternalVersionID
storeItemID
initWithBundleID:
initWithApplicationProxy:
shortVersion
intent
lib_coordinatorForAppWithBundleID:withIntent:importance:createIfNotExisting:withError:
gizmoPairingID
lib_setGizmoPairingID:withError:
setGizmoPairingID:
setIntent:
_gizmoPairingID
_intent
_priority
setStatus:
_status
_enumerator
resultComplexity
_resultComplexity
initWithFormat:locale:arguments:
_initWithDictionary:applyingAssetStrategy:installedItem:
_initWithError:accountID:
_errorWithFailureType:customerMessage:
errorItemResponseWithError:accountID:
updateItemResponseWithDictionary:installedItem:
errorForItemID:
clusterMappings
shouldCancelPurchaseBatch
setShouldCancelPurchaseBatch:
setTriggeredQueueCheck:
_itemErrors
_isPreorder
_shouldCancelPurchaseBatch
_triggeredQueueCheck
_clusterMappings
_keybag
addMessages:
setEnvironment:
setToken:
messagesType
hasEnvironment
hasToken
clearMessages
messagesCount
messagesAtIndex:
environment
token
messages
setMessages:
_environment
_messages
_token
networkConstraintsForMediaType:withBag:
lib_defaultConstraintsWithError:
tcr_dictionaryForKeyPath:
_prunedUpdateDictionary:forItemID:
tcr_stringForKey:
tcr_numberForKey:
deviceIsAppleWatch
applicationVariant
descriptorForString:
_prunedSizeDictionary:forVariantId:versionId:
tcr_dictionaryForKey:
_prunedArtworkDictionary:
tcr_keyPath
tcr_numberForKeyPath:
tcr_arrayForKey:
tcr_dictionary
_prunedSizeWithUpdateSizes:forInstalledVariant:versionId:
_prunedSizeWithVariantSizes:
_prunedSizeWithDeviceSizes:
thinnedAppVariantId
componentsSeparatedByString:
lib_firstResultApplyingTransform:
tcr_dictionaryEnumerator
descriptorsForDictionary:usingKeyProfile:
lib_flatMapAndFilterUsingBlock:
updates
_dictionary
contentRatingFlags
datePurchased
developerName
isFamilyShared
isHiddenFromSpringboard
iconURLString
is32BitOnly
longTitle
ovalIconURLString
productURL
requiredCapabilities
supportsIPad
supportsIPhone
genreName
watchAppDeliveredIniOSApp
watchAppRunsIndependently
watchOnly
supportsLayeredImage
hasP3
_setValue:forDatabaseProperty:withError:
setHidden:forStoreItemID:withError:
showAllWithError:
addTransactionID:
transactionIDType
clearTransactionIDs
transactionIDsCount
transactionIDAtIndex:
transactionIDs
setTransactionIDs:
_transactionIDs
shortNameForAppUsageType:
initWithAppUsageType:
actorID
setActorID:
appUsageType
currentOSVersion
setCurrentOSVersion:
deletedApps
setDeletedApps:
historyMap
keepAlive
lastUpdateDate
setLastUpdateDate:
launchesStartDate
minimumRunningTime
setMinimumRunningTime:
setNow:
nowDate
setNowDate:
offset
setOffset:
shouldResetPayoutDate
setShouldResetPayoutDate:
topic
setTopic:
addPriorApps
setAddPriorApps:
rescheduleActorIDReset
setRescheduleActorIDReset:
_isTemporary
_shouldResetPayoutDate
_addPriorApps
_rescheduleActorIDReset
_actorID
_appUsageType
_currentOSVersion
_deletedApps
_historyMap
_keepAlive
_lastUpdateDate
_logKey
_launchesStartDate
_minimumRunningTime
_now
_nowDate
_offset
_startTime
_topic
constantValue
notificationForRefreshWithDeviceID:
notificationForInstalls:withDeviceID:
notificationForUninstalls:withDeviceID:
shouldAddKeysToKeyBag
importKeybagWithData:error:
reason
keybagSyncDataWithAccountID:transactionType:error:
base64EncodedStringWithOptions:
uppercaseString
deviceName
ams_iTunesAccountWithDSID:
fairplayContextWithError:
authorizationToken
_getTokenForAccount:error:
_runAuthorizationWithAuthenticationWithError:
authorizeURL
displaysDialogs
setDialogOptions:
_newBodyDictionary
setAnisetteType:
familyMemberAccountID
clientIdentifierHeader
lib_appProcessInfo
asf_sessionForClient:
_performAuthorizationResult:error:
_handleResponse:error:
_main
setFamilyMemberAccountID:
allowSilentAuthentication
setAllowSilentAuthentication:
setAuthorizationToken:
setClientIdentifierHeader:
keybagPath
setKeybagPath:
setShouldAddKeysToKeyBag:
response
userAgent
setUserAgent:
_fairplayContext
_allowSilentAuthentication
_shouldAddKeysToKeyBag
_displaysDialogs
_familyMemberAccountID
_authorizationToken
_clientIdentifierHeader
_keybagPath
_reason
_userAgent
setUrlKnownToBeTrusted:
setHTTPContentType:
processIdentifier
_connectionHasArcadeEntitlement:
gamePlayDidBeginWithCompletionHandler:
gamePlayDidEndWithReason:andSessionID:completionHandler:
heartBeatForSessionID:withCompletionHandler:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
setInterruptionHandler:
setInvalidationHandler:
valueForEntitlement:
listener:shouldAcceptNewConnection:
setName:
registerConsumer:forActionType:
handleAuthenticateRequest:purchase:purchaseQueue:completion:
handleDialogRequest:purchase:purchaseQueue:completion:
handleAuthenticateRequest:context:purchaseQueue:completion:
handleDialogRequest:context:purchaseQueue:completion:
pushService:didReceiveMessage:
processPurchases:requestToken:withReplyHandler:
notifyAutenticationDialogCompleteForPurchaseID:result:checkboxChecked:withResultHandler:
notifyDialogCompleteForPurchaseID:result:selectedButton:withResultHandler:
startPurchase:requestToken:withReplyHandler:
processPurchaseInfo:withCompletionHandler:
processPurchaseInfos:withCompletionHandler:
purchaseQueue
setPurchaseQueue:
_taskQueue
_purchaseQueue
lib_shortLogKey
initWithAccount:apps:isUserInitiated:
_handleUpdatesResponse:
_enumerateAppsByAccountUsingBlock:
isNotZero
lib_categorizeItemsUsingBlock:
initWithApps:userInitiated:
_apps
_updates
setExternalIDs:
externalIDs
addExternalIDs:
responseWithExternalIDs:
ams_iTunesAccounts
orderedSet
importClusterMappings:error:
importAccountEvent:
setPromptTitle:
setDefaultButtonString:
_accountFromSystemAlertDialogWithOptions:error:
promptTitle
initWithTitle:message:
defaultButtonString
ams_setRawPassword:
_username
_authenticateResult
isActivePairedDevice
deviceForFromID:
initWithIDSDevice:
objectEnumerator
updateWithIDSDevice:
markAsTombstoneDevice
deviceForDestinationID:
deviceForFromID:usingService:
deviceForPairingID:
updateDevicesWithArray:
_devices
initWithSuccess:error:
adopt:withReplyHandler:
adoptableBundleIdentifiersWithReplyHandler:
processPurchase:withReplyHandler:
startPurchase:withReplyHandler:
dispatchQueue
setDispatchQueue:
adoptionInterface
setAdoptionInterface:
legacyPurchaseInterface
setLegacyPurchaseInterface:
purchaseInterface
setPurchaseInterface:
_adoptionInterface
_legacyPurchaseInterface
_purchaseInterface
downloaderDSID
purchaserDSID
storefrontID
initWithStoreItemID:externalVersionID:
_downloaderDSID
_purchaserDSID
_storeExternalVersionID
_storeItemID
_storefrontID
archiveSize
setArchiveSize:
diskSpaceNeeded
setDiskSpaceNeeded:
name
promiseType
setPromiseType:
referenceID
setReferenceID:
streamingZipOptions
setStreamingZipOptions:
transferPath
setTransferPath:
_archiveSize
_diskSpaceNeeded
_name
_promiseType
_referenceID
_streamingZipOptions
_transferPath
setApp:
show
setShow:
_show
_app
_initWithItems:account:client:
newContextWithItems:account:client:
uninstallAppWithBundleID:requestUserConfirmation:completion:
uninstallApp:withResultHandler:
lowercaseString
_chunkSize
_chunkDigests
_chunkType
_handleBagChangedNotification:
initWithBagValue:bagKey:
_bagValue
_memoizedValue
_beginSessionWithDPInfo:error:
initWithChunkedDigest:
setResumptionOffset:
prepareWithCompletionHandler:
_resetDecryptionBufferAndDigestVerifier
resetWithCompletionHandler:
suspendWithCompletionHandler:
truncateWithCompletionHandler:
consumeData:withCompletionHandler:
finishWithCompletionHandler:
initWithDPInfo:error:
digest
setDigest:
streamAdapter
setStreamAdapter:
_buffer
_capacity
_consumerQueue
_cursor
_digestVerifier
_digest
_streamAdapter
responses
_responses
initWithService:
rangeOfString:options:
valueOfClass:forKey:
substringToIndex:
substringFromIndex:
valueOfClass:forKeyPath:
_keyPathCache
_tcr_associatedReader
URLWithString:
tcr_stringForKeyPath:
_tcr_associateWithReader:
tcr_arrayForKeyPath:
tcr_boolForKey:
tcr_boolForKeyPath:
tcr_dataForKey:
tcr_dataForKeyPath:
tcr_integerValueForKey:missingValue:
tcr_integerValueForKeyPath:missingValue:
tcr_nullForKey:
tcr_nullForKeyPath:
tcr_urlForKey:
tcr_urlForKeyPath:
acceptVisitor:flags:
lib_pop
subpredicates
lib_popCount:
compoundPredicateType
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
filterUsingPredicate:
initWithComplexity:usingBlock:
lib_push:
resultEnumeratorForPredicate:error:
initWithError:
visitPredicate:
visitPredicateExpression:
visitPredicateOperator:
initWithClassifier:
executeQueryWithPredicate:error:
_classifier
_stack
setContext:
lib_mapAndFilterUsingBlock:
setUpdateState:forBundleIDs:
results
persistentID
previouslyInstalledProvisionedApps
purchase
isProvisionedApp:
setPreviouslyInstalledProvisionedApps:
allObjects
humanReadableReason
_createUpdatesMapUsingUpdates:andUpdatesOrdered:
resultWithRestrictedActivity:bundleID:
_purchaseInfoForUpdate:
isBackgroundRequest
createUpdateCoordinatorsForBundleIDs:enforceImportance:
_performAccountPurchases:
setValue:forKey:
performUpdatePurchases:isBackgroundRequest:jobResults:error:
initWithBundleIdentifier:
setExternalID:
setDiscoveredUpdate:
setPriority:
setUpdateType:
setDiscretionary:
setSuppressEvaluatorDialogs:
setLogCode:
setPurchaseType:
buyParamsWithString:
setBuyParams:
setMachineBased:
updateGeneratedProperties
taskWithContext:
jobResults
context
orderedBundleIDs
setOrderedBundleIDs:
_updatesPurchases
_jobResultItems
_context
_orderedBundleIDs
initWithInstallID:usingDictionary:
lib_logUUID
lib_signpostId
strongToStrongObjectsMapTable
recordInstallInfo:
removeAllInstallInfo
removeInstallInfo:
assetPromise
setAssetPromise:
setCoordinator:
operation
setOperation:
setPackageID:
signpostID
setSignpostID:
_assetPromise
_operation
_packageID
_signpostID
setClusterID:
setClusterVersion:
setUsageWeight:
databaseTable
memoryEntityClass
userDatabase
_beginObservingAccountChangeNotification
executeQuery:withError:
_getHideShowRequestContextToHideItem:forAccount:withError:
_getHideShowRequestContextToShowAllForAccount:withError:
_updateForAccountID:withContext:withAccount:replyHandler:
PurchaseHistoryForcedRefreshMinutes
_handleAccountChangedNotification
setIsFirstParty:
setIsHidden:
setIsPreorder:
revisionForAccountID:withError:
newContextWithRevision:forAccountID:requestingAccount:client:purchaseHistoryContext:
setStoreIDs:
initWithResponseData:
parseMetadata
isUpdate
removeAllAppsForAccountID:withError:
setRevision:forAccountID:withError:
nextBatch
addedApps
removedApps
insertApps:forAccountID:withError:
deleteAppsForLockerItemIDs:forAccountID:withError:
setLastUpdatedTimestamp:forAccountID:withError:
isLast
lastUpdatedTimestampForAccountID:withError:
_sendItemsRequestForAccountID:withContext:withAccount:replyHandler:
_sendUpdateRequestForAccountID:withContext:withAccount:replyHandler:
_getItemsRequestContextForAccountID:requestingAccount:withPurchaseHistoryContext:withError:
_updateDatabaseWithDAAPResponse:forAccountID:error:
_getUpdateRequestContextForAccountID:requestingAccount:withPurchaseHistoryContext:withError:
_forcedRefreshInterval
_resetStreamAdapterWithError:
_notifyDelegateForCurrentDataPromise
_dataPromise
_promiseProvider
_specification
addExternalIDStrings:
externalIDStringsType
clearExternalIDStrings
externalIDStringsCount
externalIDStringsAtIndex:
setHasError:
hasError
externalIDStrings
setExternalIDStrings:
_externalIDStrings
_validateSession
sessionIdentifier
_finalizeSessionWithReason:
beginSession
sharedStore
importSession:
_setTrackingSessionState:
_findActiveSessionForBundleID:andSessionID:
heartbeatReceived
endSessionWithReason:
_flushSession
activeSessionWithBundleID:andSessionID:
updateSession:
markAsFlushed
isActive
lastHeartbeatDate
timeIntervalSinceNow
unrecordedSessionLength
_suspendTimerIfNecessary
gamePlayDidBeginForBundleID:withCompletionHandler:
gamePlayDidEndForBundleID:withReason:andSessionID:completionHandler:
heartBeatForBundleID:andSessionID:withCompletionHandler:
_currentSession
_currentlyTrackingSessions
_sessionValidationTimer
accountDSID
claimStyle
proxyForBundleID:
_handleFairplayRecovery:outError:
isOcelot
_handleKeybagSync:outError:
initWithAccount:proxy:clientIdentifierHeader:userAgent:
setRunSilently:
_handleAppRemovedFromProgram:
_handleFactoryClaimAppsWithError:
_handleVPPRecovery:outError:
_showFamilyLeaveAlert:
_showAllOcelotApps
_showOcelotUpsellForItemID:
_relaunchApp
resultBlock
setResultBlock:
appWasClaimed
vppMigrated
_options
_accountDSID
_claimStyle
_appWasClaimed
_vppMigrated
_resultBlock
_claimedBundleIdentifiers
_init
taskWithXPCAppMetadata:requestToken:
processedExternalIDs
_installEnterpriseApps:withReplyHandler:requestToken:
_installSystemApps:withReplyHandler:requestToken:
_installWatchApps:onPairedDevice:withReplyHandler:requestToken:
taskWithXPCAppMetadata:forDevice:requestToken:
installAppReviewApps:withReplyHandler:
installEnterpriseApps:onPairedDevice:withReplyHandler:
installScreenSyncApps:withReplyHandler:
installSystemApps:onPairedDevice:withReplyHandler:
installTestFlightApps:onPairedDevice:withReplyHandler:
_databaseStore
executeOptionalStatement:
hasUuid
_uuid
tcr_stringEnumerator
arrayWithObjects:
_initWithComponents:
initWithString:
subarrayWithRange:
_isValid
osVersion
isAnyVersion
_valueForComponent:
canonicalString
anyVersion
_findCompatibleDescriptor:
isEqualToDescriptor:
productVersion
productType
compare:
sortedArrayUsingComparator:
_filterAndSortDescriptors:compatibleWithProductType:
lastObject
descriptorForUniversal
findCompatibleDescriptorFromDictionary:usingKeyProfile:
hasCompatibleDescriptorFromArray:
hasCompatibleDescriptorFromDictionary:usingKeyProfile:
isUniversal
_components
_universal
_version
_applyChangesForChangeset:transaction:
_applyExternalChangesForChangeset:
initWithRequest:properties:
requestWithURL:cachePolicy:timeoutInterval:
initWithURL:cachePolicy:timeoutInterval:
propertyForKey:inRequest:
setProperty:forKey:inRequest:
removePropertyForKey:inRequest:
initWithUsername:logKey:
authenticateResult
purchaseType
purchase_purchaseWithPurchaseInfo:
purchase_itemResponseWithError:usingPurchaseInfo:
setItemResponse:
initWithConfiguration:
enquePurchases:
triggeredQueueCheck
addErrorBlock:
responseDictionary
purchase_itemResponseFromDictionary:usingPurchaseInfo:
addSuccessBlock:
initWithPurchaseBatch:
localizedTitle
localizedMessage
actionWithTitle:style:
setIdentifier:
addButtonAction:
textFieldWithPlaceholder:secure:
setKeyboardType:
setText:
addTextField:
criteria
descriptiveName
isEnabled
registeredName
deadline
_block
_isUpdate
_requestBodyDictionary
_bagURL
lib_URLByAppendingQueryDictionary:
setCompressRequestBody:
viewUpdatesRequestURL
availableUpdatesRequestURL
_newArrayWithUpdatableApps:
_newDictionaryWithUpdatableApp:
_copyLocalAppsDictionaries
updateUsingOptimizedRequest
setResponse:
_isUserInitiated
_valueDictionaryWithStoreAsset:
_valueDictionaryWithSystemAppLookupItem:
downloadOffset
downloadSize
_associatedReaderForObject:
_setAssociatedReader:forObject:
assetID
assetSize
bytesOffset
overrideProgress
isStreamableZip
_overrideProgress
_streamableZip
_assetID
_assetSize
_bytesOffset
setAssetID:
setAssetSize:
setBytesOffset:
setOverrideProgress:
setStreamableZip:
streamableZip
initWithTask:
recordTaskInfo:forTask:
originalRequest
task
newTaskInfoForTask:
exchangeTaskForTaskInfo:withTask:
removeAllTaskInfo
removeTaskInfo:
taskInfoForTask:
action
setAction:
ignoreAssetCache
setIgnoreAssetCache:
metrics
setMetrics:
promise
setPromise:
properties
setProperties:
request
setRequest:
requestOffset
setRequestOffset:
session
setSession:
signpostId
setSignpostId:
_ignoreAssetCache
_action
_promise
_properties
_request
_requestOffset
_signpostId
_task
_requestURLWithError:
initWithItems:
responseStatusCode
data
PurchaseHistoryBaseURL
PurchaseHistoryDatabaseID
URLByAppendingPathComponent:
initWithBagContract:context:
startRequestWithCompletionHandler:
_bagContract
_responseData
_initWithInstall:package:coordinator:
_applyInstallOptions
lib_coordinatorWithIdentifier:error:
finishInstallID:
continueInstallID:
_installResponse
_initWithInstallID:result:error:
approveInstallID:
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
_installWithXPCMetadata:
initWithInstalls:
initWithUUIDString:
orderedSetWithArray:
artworkURL
messagesArtworkURL
isLaunchProhibited
storeMetadata
_packageWithXPCMetadata:
initialODRSize
packageURL
_installs
_processedExternalIDs
_familyMembersFromDictionaryRepresentation:
familyMembers
isCached
ams_activeiCloudAccount
valueForKeyPath:
localizedCaseInsensitiveCompare:
_cached
_familyMembers
setTitle:
setMessage:
_buttonActions
buttonActions
setStyle:
dialogForDownloadWithName:
dialogForUpdateWithName:
dialogForUpdates
localizedRecoveryOptions
dictionaryWithDictionary:
lib_addRecoveryOptions:
blockTaskWithBlock:
_initWithProgressCache:
defaultWorkspace
_updatePhaseForJobWithBundleID:phase:
installProgress
fractionCompleted
applicationIdentifier
setFractionCompleted:forBundleID:storeItemID:
_predicateForBundleID:toUpdateToPhase:
finishInstallID:withFinalPhase:
pauseInstallID:
resumeInstallID:
enumerateMemoryEntitiesUsingBlock:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
cancelApp:onPairedDevice:withCompletionHandler:
cancelApp:withCompletionHandler:
pauseApp:withCompletionHandler:
resumeApp:withCompletionHandler:
_progressCache
_initWithKnownApps:revision:forAccountID:requestingAccount:client:purchaseHistoryContext:
initWithLSApplicationProxy:
enumerateApplicationsOfType:block:
fileURLWithPath:
applicationProxyForBundleURL:
pluginKitProxyForURL:
containingBundle
bundleType
bundleURL
canonicalExecutablePath
familyID
ocelotApps
objectForInfoDictionaryKey:ofClass:
installType
encodeObject:forKey:
encodeBool:forKey:
decodeObjectOfClass:forKey:
decodeBoolForKey:
mdItemRef
pointerValue
bundlePath
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithBundlePath:
isAppleSigned
setBundlePath:
setCanonicalExecutablePath:
setDeviceIdentifierForVendor:
setDownloaderDSID:
expectedStoreVersionID
setExpectedStoreVersionID:
setFamilyID:
installDidOccur
setInstallDidOccur:
setIsAppleSigned:
setLocalizedName:
setMdItemRef:
setHasMIDBasedSINF:
setInstalled:
setOcelot:
setPlaceholder:
setPurchaserDSID:
setProfileValidated:
setStoreOriginated:
receiptType
setReceiptType:
setShortVersionString:
setStoreExternalVersionID:
setStoreItemID:
updateDidOccur
setUpdateDidOccur:
updateWillOccur
setUpdateWillOccur:
_signingFlags
_beta
_installDidOccur
_isAppleSigned
_hasMIDBasedSINF
_installed
_ocelot
_offloaded
_placeholder
_profileValidated
_storeOriginated
_updateDidOccur
_updateWillOccur
_bundlePath
_canonicalExecutablePath
_deviceIdentifierForVendor
_expectedStoreVersionID
_familyID
_localizedName
_mdItemRef
_receiptType
_shortVersionString
_storefront
initWithEnvironment:
initWithEnvironment:queue:
_newConnectionForEnvironment:
publicToken
connectionWithEnvironment:token:
copyOSStateDataWithTitle:
shutdown
pushConnection:didRecieveMessage:
initWithMessage:
insertObject:atIndex:
removeLastObject
actionType
lib_shortDigestMD5
apsDelegatePort
initWithEnvironmentName:namedDelegatePort:queue:
setEnabledTopics:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
_unitTest_sendFakeMessage:
delegate
_handle
_messageHistory
_delegate
containsItemsForPlatform:
numberWithUnsignedInteger:
setWithObject:
initWithMachServiceName:forClients:delegate:
uniqueIdentifier
installMatchingCoordinatorID:orActiveInstallMatchingBundleID:
completeInstallID:
installPolicy
_reviewCellularPolicyForInstallID:usingDownload:coordinator:
_reviewConstrainedPolicyForInstallID:usingDownload:coordinator:
setInstallPhase:forInstallID:
changeset
addSchedulerPollReason:
_applicationInstallsDidPrioritize:hasCoordinator:
pauseWithError:
_pauseCoordinator:withLogKey:
coordinatorShouldPrioritize:
coordinatorShouldResume:
coordinatorShouldPause:
coordinator:configuredPromiseDidBeginFulfillment:
coordinatorShouldBeginRestoringUserData:
coordinatorDidInstallPlaceholder:
coordinatorDidCompleteSuccessfully:
coordinator:canceledWithReason:client:
shouldPrioritizeAppWithBundleID:
coordinator:canceledWithReason:
promiseDidBeginFulfillmentWithIdentifier:
coordinator:configuredPromisePromiseDidBeginFulfillment:
_policyQueue
_installObserver
_installScheduler
_systemAppRequests
orderedSetWithObject:
finishInstallIDs:transaction:
stopInstallIDs:withReason:transaction:
importInstall:
importRemoteIntalls:
prioritizeInstallID:
restartInstallID:
_changeset
ocelotID
usageCount
appSessionReporterKey
duration
setDuration:
appEventType
eventTimeOverride
eventTime
usageTime
setForegroundUsage:
setForegroundUsageEvents:
hasBeenPosted
setHasBeenPosted:
weekStartDate
setWeekStartDate:
setProperty:forBodyKey:
_eventForType:
_metricsTypeForInstallationType:
_typeForMetricsType:
clusters
timeRangeEnd
timeRangeStart
setAppEventType:
setClientEventID:
setClusters:
setCumulativeUserCount:
setCollectionTime:
setForegroundEvents:
setHardwareFamily:
setHardwareModel:
setInstallationType:
setInstallType:
setOS:
setOcelotDeviceID:
setOcelotID:
setOcelotSubscriptionState:
setQualifiedDuration:
setUsageTime:
metricsDictionary
requiresDiagnosticSendingPermission
tempUserId
setTempUserId:
tempDeviceIdentifer
setTempDeviceIdentifer:
setAppUsageType:
clientEventID
collectionTime
cumulativeUserCount
setDatabaseID:
setEventTimeOverride:
hardwareFamily
hardwareModel
installationType
ocelotDeviceID
ocelotSubscriptionState
osBuild
platform
qualifiedDuration
_appEventType
_hasBeenPosted
_installationType
_installType
_tempUserId
_tempDeviceIdentifer
_appSessionReporterKey
_clientEventID
_clusters
_cohort
_collectionTime
_cumulativeUserCount
_databaseID
_duration
_eventTimeOverride
_foregroundEvents
_hardwareFamily
_hardwareModel
_ocelotDeviceID
_ocelotID
_ocelotSubscriptionState
_shortVersion
_timeRangeEnd
_timeRangeStart
_usageTime
_usageCount
_qualifiedDuration
_weekStartDate
_performFamilyInfoRequestForAccount:error:
_processURLResult:
_cachedFamilyInfoLookupResultForAccount:
_cacheFamilyInfoLookupResult:forAccount:
performTaskWithBlock:
URLForKey:
setBag:
requestWithMethod:URL:parameters:
completionHandlerAdapter
initWithDictionaryRepresentation:cached:
_pathForCachedFamilyInfoLookupResult
dataWithPropertyList:format:options:error:
writeToFile:options:error:
_currentCachedFamilyInfo
timeIntervalSinceDate:
initWithContentsOfFile:
sharedConfig
OSLogObject
cachedDataPath
stringByAppendingPathComponent:
performFamilyInfoLookup
_bag
_constraints
handleAccountStoreDidChangeNotification:
_shouldNotifyChangeFromExistingAccount:toCurrentAccount:
_postAccountDidChangeWithAccountStore:
_postAccountDidUpdateWithAccountStore:
activeAccount
_activeAccount
isEqualToDictionary:
isEqualToMessage:
isValidJSONObject:
dataWithJSONObject:options:error:
initWithData:encoding:
lib_loggableDate
valueForUserInfoKey:
_message
enumeratePersistentIDsUsingBlock:
setEntityClass:
setMemoryEntityClass:
setPredicate:
setOrderingProperties:
setOrderingDirections:
initOnConnection:descriptor:
_queryActiveInstallationStatisticsOnConnection:
unsignedIntegerValue
_queryJettisonCandidatesOnConnection:
pauseInstallID:withPhase:forReason:
_findJettisonCandidateForPriority:
enumeratePersistentIDsAndProperties:usingBlock:
_verifyActiveInstallation:
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
bootstrapResetSourceType:
bootstrapSourceType:enumerateUsingBlock:
jettisonActiveInstallationsToReduceActiveCountTo:forReason:
scheduleMaximumActiveCount:evaluateUsingBlock:
_jettisonCandidates
strongToWeakObjectsMapTable
setWithObjects:
setEnabledActionTypes:
initWithConfiguration:bag:
_initializeConnectionsAndSkipEnvironmentCheck:
_flushPendingMessagesWithActionType:
shouldHandleNotification:
handleNotification:
_queuePendingMessage:withActionType:
pushNotificationEnvironment
isValidEnvironment:
unregisterConsumerForActionType:
_consumers
_pendingMessages
_pushHandler
_pushDiagnostic
_stateHandle
knownApps
revision
requestingAccount
purchaseHistoryContext
newContextWithKnownApps:revision:forAccountID:requestingAccount:client:purchaseHistoryContext:
_hasRequestedAuth
_initWithVersion:
scanInteger:
scanString:intoString:
isEqualToVersion:
initWithDictionary:assetType:
_parseAssetDictionary:
variantDescriptor
isApplicableUpdateWithInstalledItemContext:
installedVersionID
installedVariantID
isDelta
assetWithDictionary:
deltaAssetsWithDictionary:
selectAssetFromArray:usingStategy:
selectAssetFromArray:usingStategy:withDeltaForInstalledItem:
assetType
assetURL
bytesTotal
clearHashes
dpInfo
expectedDiskspace
hashes
hashType
isLocallyCacheable
numberOfBytesToHash
priorVariantIdentifiers
priorVersionEvid
isZipStreamable
_locallyCacheable
_zipStreamable
_assetType
_assetURL
_bytesTotal
_clearHashes
_dpInfo
_expectedDiskspace
_hashes
_hashType
_initialODRSize
_md5
_numberOfBytesToHash
_priorVariantIdentifiers
_priorVersionEvid
_sinf
_variantDescriptor
hashArrayData
sinfData
additionalHeaders
userAgentForProcessInfo:
setAdditionalHeaders:
callStackSymbols
setCompanionBundleID:
itemResponse
installedExternalVersionID
originalPurchaserDSID
preflightURL
setPreflightURL:
setPurchase:
setPurchaseID:
referrerName
setReferrerName:
referrerURL
setReferrerURL:
discoveredUpdate
generatedVendorID
setGeneratedVendorID:
purchaseOnly
setPurchaseOnly:
requireUniversal
setRequireUniversal:
updateType
watchType
setWatchType:
executeQuery:withReplyHandler:
setHidden:forStoreItemID:withReplyHandler:
showAllWithReplyHandler:
updateForAccountID:withContext:withReplyHandler:
updateWithContext:withReplyHandler:
assets
thinnedAssets
initWithRequestID:promiseBlock:
requestID
_requestID
formattedText
holdKeepAliveTransaction:whilePerformingBlock:
start
_run
globalStore
transactionCount
activeTransactions
hashTableWithOptions:
_performMigrationIfNeededForStore:
transactionClass
_modifyUsingTransactionClass:withBlock:
_reentrantSafePerformBlock:
sessionClass
_readUsingSession:withBlock:
options
databasePath
encryptionKeyId
sleepForTimeInterval:
performTransaction:
schemaName
initWithConnection:schemaName:
connectionNeedsResetForReopen:
connectionNeedsResetForCorruption:
initWithConnectionOptions:
modifyStore:usingTransaction:
modifyStore:usingTransactionClass:withBlock:
readStore:usingSession:
_transactionQueue
_migratedStores
destinationID
initWithMetadata:forDevice:
selector
setSelector:
target
setTarget:
_selector
_target
_parseDictionary:
genre
genreID
_genre
_genreID
mutableCopyWithZone:
setBytesPerSecondLimit:
clientIdentifier
setClientIdentifier:
connectionPool
expectedDiskUsage
setExpectedDiskUsage:
setLoadingPriority:
locateAssetCache
setRequestUUID:
_allowsAuthentication
_allowsConstrainedNetworkAccess
_allowsWatchCellularAccess
_locateAssetCache
_requiresPowerPluggedIn
_qosClass
_bytesPerSecondLimit
_clientIdentifier
_connectionPool
_discretionaryType
_duetBudgetingIdentifier
_expectedDiskUsage
_loadingPriority
_maximumWatchCellularTransferSize
_networkBudgetingIdentifier
_protocolClasses
_rangeOffset
_requestReason
_requestUUID
_taskPriority
persistedDataPathForDomain:
initWithDatabasePath:
setProtectionType:
_prepare:installEvents:
initWithKey:ascending:
_allApps
_map
lib_setPropertiesWithStoreItem:
setDSPersonID:
setSourceApp:
setReferrerApp:
setSoftwareVersionExternalIdentifier:
setBundleShortVersionString:
setGenre:
setRatingLabel:
setRatingRank:
setGameCenterEnabled:
setGameCenterEverEnabled:
setIsAutoDownload:
setPurchaseDate:
setPurchasedRedownload:
setReleaseDate:
setIAdConversionDate:
setIAdImpressionDate:
setIAdAttribution:
setNameTranscriptions:
updateiTunesMetadataWithData:forApplication:options:error:
lib_setPropertiesWithPurchaseInfo:
lib_updateMetadataForApplication:error:
lib_metadataFromDatabaseRepresentation:error:
predicate
limitCount
entityClass
_newSelectSQLWithProperties:columns:
executeStatement:error:bindings:
_newSelectSQLWithProperties:
executeQuery:withResults:
copyEntityIdentifiers
createTemporaryTableWithName:properties:
queryDescriptor
_descriptor
setLimitCount:
orderingClause
setOrderingClause:
orderingDirections
orderingProperties
returnsDistinctEntities
setReturnsDistinctEntities:
_entityClass
_limitCount
_memoryEntityClass
_orderingClause
_orderingDirections
_orderingProperties
_predicate
_returnsDistinctEntities
_aggregateValueForProperty:function:predicate:onConnection:
queryOnConnection:predicate:orderingProperties:
arrayWithObject:
countForProperty:predicate:onConnection:
maxValueForProperty:predicate:onConnection:
minValueForProperty:predicate:onConnection:
_createDirectoryInSearchPath:domain:withPathComponent:
_downloadPathForID:
removeItemAtPath:error:
fileExistsAtPath:isDirectory:
ensureDirectoryExistsAtPath:
_whitelistForCachedDataPath
cachedDataPathForDomain:
_enforceWhitelist:forPath:
_containerURL
_createDirectoryAtBaseURL:withPathComponent:
_rootDownloadPath
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
setResourceValues:error:
contentsOfDirectoryAtPath:error:
hasPrefix:
stringWithFileSystemRepresentation:length:
hasSuffix:
cleanupDownloadPathForID:
downloadPathForID:
companionBundleID
lib_canonicalAccountForAccount:
ams_altDSID
username
_metadataWithXPCMetadata:
setKind:
setBetaExternalVersionIdentifier:
setSoftwareVersionBundleID:
setInitialODRSize:
_transcodeDataArray:
_reportRemoteProgress
_initWithNotificationCenter:
_beginProgressForBundleID:storeItemID:reportRemotely:
totalUnitCount
_dirtyProgress:
reportRemotely
setReportRemotely:
_flushProgress
postProgress:
beginProgressForBundleID:
cacheApp:
existingAppForBundleID:
_notificationCenter
_placeholders
_progressStore
_dirtyProgress
_registerForAdapterChange
_updateAdapterState
_postPowerStateDidChangeNotification
_updateBatterySaverState
_adapterChangeToken
_batterySaverToken
_batterySaverEnabled
_powerPlugggedIn
accessWasUnblocked
_download
_accessWasUnblocked
_cellularResult
_constrainedResult
initWithDatabaseStore:
_handlePollEventWithReasons:
_repairInconsistentInstallationState
_registerPolicyStateMonitors
_requestPollWithReason:
tasks
scheduleUsingTransaction:
updateInstalls:
isElevated
resumeCoordinator:
_bootstrapStoreApps
_bootstrapSystemApps
_pollForPendingInstallations
_checkIfInstallShouldBeAllowedToStart:withPackage:
pipeline
startInstallIDs:transaction:
_handleMonitorStateDidChangeNotification:
requiresDeviceSecurity
boolValueForProperty:
requiresNetwork
cellularDownloadForPackage:
requiresPowerPluggedIn
isPowerPluggedIn
isBatterySaverEnabled
requiresMigrationComplete
_pollReasons
_pollSource
_bootstrapQueue
initWithEntity:
getValuesForProperties:
addMetricsEvent:
_sendUpdateStateChangedNotification:
resetUpdateWithBundleID:
postAppsDone
noteUpdatesStateChangedWithReason:completionBlock:
installPhase
setInstallPhase:
setStoreMetadata:
bestPackage
failWithError:
finishWithFinalPhase:
modifyInstallPolicyUsingBlock:
setPackagesWithArray:
appUpdatesToFinish
addEntriesFromDictionary:
cancelProgress
coordinatorReasons
coordinatorResume
metricsEvents
restoresCompleted
schedulerPollReason
shouldPostAppsDone
shouldPostProcessAutomaticUpdatesCompleted
restoreCompleted
addAppUpdateToFinish:withUpdateState:
failCoordinator:withReason:
postProcessAutomaticUpdatesCompleted
postRestoreCompleted
unionChangeset:
_appUpdatesToFinish
_cancelProgress
_coordinatorReasons
_coordinatorResume
_metricsEvents
_schedulerPollReason
_restoresCompleted
_shouldPostAppsDone
_shouldPostProcessAutomaticUpdatesCompleted
reloadFromDatabaseEntity:properties:
setValues:forProperties:count:
setValues:forExternalProperties:count:
externalPropertyValues
setExternalValuesWithDictionary:
setValue:forExternalProperty:
valueForExternalProperty:
_propertyValues
_externalPropertyValues
numberValueForProperty:
uuidValueForProperty:
urlValueForProperty:
memoryEntityForPersistentID:usingConnection:
arrayByAddingObjectsFromArray:
setBytes:
setAutomatic:
_valueDictionaryWithStoreItem:
initWithStoreAsset:
assetDeltaPackage
appReceiptData
isPurchasedRedownload
initWithStoreItem:
initWithSystemApplicationMetadata:
bestPackageFromArray:
assetRequestReason
_packages
applicationProxyForSystemPlaceholder:
_filterApplicableInstallations
_itemIDForBundleID:
setCompletedUnitCount:
setTotalUnitCount:
_disableAutoInstall
_predicateForKindOfClass:
initWithArray:
enumeratorForObjectsOfClass:
_array
tcr_numberEnumerator
initWithPredicate:
initWithAssetType:
runQueryAndReturnError:
systemAppServerUrl
attributes
initWithURL:attributes:
lookupSystemApplicationWithBundleID:
lookupSystemApplicationsWithBundleIDs:
lookupResults
_lookupResults
arrayWithArray:
allSessions
initWithEnterpriseApps:isXDCRequest:requestToken:
manifestURL
lib_queryDictionary
hideUserPrompts
addTasks:waitUntilFinished:
_setProcessedExternalIDs:
_isXDCRequest
initWithPurchaseType:buyParams:
setAccountId:
setClientId:
setOwnerAccountId:
stringWithCapacity:
initWithLength:
mutableBytes
setLength:
lib_gzippedData
memoryEntityForPersistentID:withProperties:usingConnection:
_initWithInstall:
_recordBusinessMetrics
_recordEngineeringMetrics
_recordUpdateState
_writeReceipt
stringValueForProperty:
operationForInstallID:inSession:
_schemaName
_sessionClass
_transactionClass
_resultEnumeratorForComparisonPredicate:error:
leftExpression
expressionType
rightExpression
lib_constantValues
predicateOperatorType
lib_keyPath
_resultEnumeratorForKeyPath:matchingValues:error:
_evaluator
stringWithUTF8String:
dataWithBytes:length:
columnIndexForColumnName:
dataForColumnIndex:
dateWithTimeIntervalSinceReferenceDate:
dateForColumnIndex:
JSONObjectWithData:options:error:
stringForColumnIndex:
UUIDForColumnIndex:
URLForColumnIndex:
dictionaryWithValuesForColumnNames:
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
indexOfObject:
dataForColumnName:
dateForColumnName:
doubleForColumnIndex:
doubleForColumnName:
intForColumnIndex:
intForColumnName:
int64ForColumnName:
JSONObjectForColumnIndex:
numberForColumnName:
numberOfColumns
stringForColumnName:
UUIDForColumnName:
URLForColumnName:
dictionaryWithValuesForColumns
_columnTypeForColumnIndex:
_declaredTypeForColumnIndex:
_columnCount
_columnDeclaredTypes
_columnIndexByName
_columnKeySet
_columnNames
_statementWrapper
keyPath
_acceptableExpressionTypes
_acceptableKeyPaths
_errors
_valid
initWithRequestToken:
queuePurchaseInfo:
purchaseState
_failPurchaseWithError:usingPurchaseInfo:
_completePurchaseBatch
setPurchaseState:
initWithResults:
_setPurchase:
_setSuccess:
lib_unsignedLongLongPropertyForKey:
isMachineBased
initWithPurchaseResponseItems:
_setError:
initWithPurchaseInfo:requestToken:
infoEnumerator
cancelPurchaseBatchWithError:
failPurchaseWithError:usingPurchaseInfo:
purchaseInfoMatchingBuyParams:
completionHandler
setCompletionHandler:
_responseItems
_machineBased
_completionHandler
modifyUsingTransactionClass:withBlock:
database
_database
_asset_configurationIdentifierUsingProperties:
backgroundSessionConfigurationWithIdentifier:
_asset_setConfigurationUsingProperties:
networkBudgetingIdentifier
duetBudgetingIdentifier
discretionaryType
allowsConstrainedNetworkAccess
setHTTPCookieAcceptPolicy:
setHTTPShouldSetCookies:
setHTTPShouldUsePipelining:
set_allowsRetryForBackgroundDataTasks:
set_sourceApplicationBundleIdentifier:
set_sourceApplicationSecondaryIdentifier:
set_requiresPowerPluggedIn:
set_allowsWCA:
maximumWatchCellularTransferSize
set_maximumWatchCellularTransferSize:
setAllowsConstrainedNetworkAccess:
set_infersDiscretionaryFromOriginatingClient:
protocolClasses
setProtocolClasses:
_asset_setConfigurationDefaults
asset_backgroundSessionConfigurationUsingProperties:
asset_ephemeralSessionConfigurationUsingProperties:
_asset_initializeConnectionPools
setCacheSizeWithNumberOfKilobytes:
_encryptDatabase:
cacheSize
UTF8String
setCacheSize:
fetchKeyWithIdentifier:error:
generateKeyWithIdentifier:error:
applyToDatabase:
setCacheSizeWithNumberOfDatabasePages:
setEncryptionKeyId:
protectionType
isReadOnly
setReadOnly:
_readOnly
_cacheSize
_databasePath
_encryptionKeyId
_protectionType
setInstalledVersionID:
_installedVariantID
_installedVersionID
_stringRepresentationForDigest:length:
lib_enumerateSubdataWithOffset:length:usingBlock:
_digestType
initWithInt:
initWithUTF8String:
timeIntervalSinceReferenceDate
initWithStatement:onConnection:
columnIndexByName
finalizeStatement
step
_strongSelf
raise:format:
_predicateFromQuery:
sortOptions
_propertyForSortOptionName:
ascending
setContentRatingFlags:
setDatePurchased:
setDeveloperName:
setFamilyShared:
setFirstParty:
setHidden:
setHiddenFromSpringboard:
setIconURLString:
setIs32BitOnly:
setLongTitle:
setOvalIconURLString:
setPreflightPackageURL:
setProductURL:
setRequiredCapabilities:
setSupportsIPad:
setSupportsIPhone:
unsignedIntValue
setPurchaseToken:
setLockerItemID:
setGenreID:
setGenreName:
setWatchAppDeliveredIniOSApp:
setWatchAppRunsIndependently:
setWatchOnly:
setSupportsLayeredImage:
setHasP3:
_lastUpdatedPropertyForAccountID:
_valueForDatabaseProperty:withError:
_serverRevisionPropertyForAccountID:
isFirstParty
isHidden
isPreorder
searchTerm
storeIDs
bundleIDs
stringFromDate:
initWithLocaleIdentifier:
setLocale:
lib_timeElapsedUntilNow
_bundleIdentifierForCurrentConnection
currentConnection
_copyExecutablePathForPID:
_copyBundleForExecutablePath:
_copyInfoDictionaryForExecutablePath:
lastPathComponent
initWithBytes:length:encoding:
addProgress:
progressType
clearProgress
progressCount
progressAtIndex:
progress
setProgress:
_progress
beginDate
sessionLength
dsid
_lastFlushDate
_active
applyBinding:atIndex:
SQLForEntityClass:
SQLJoinClausesForEntityClass:
property
joinClauseForProperty:
_property
initWithLongLong:
value
comparisonType
disambiguatedSQLForProperty:
_comparisonTypeString
predicateWithProperty:equalToLongLong:
_comparisonType
_value
isNegative
values
query
copySelectSQLWithProperties:
containsPredicateWithProperty:query:queryProperty:
queryProperty
_negative
_query
_queryProperty
_values
matchesNull
isNotNullPredicateWithProperty:
isNullPredicateWithProperty:
_matchesNull
predicates
unionSet:
predicateWithProperty:values:comparisonType:
_combinationOperation
_predicates
initWithConnection:SQL:
connectionPointer
_connectionPointer
_SQL
extractionPath
supplyBytes:withCompletionBlock:
finishStreamWithCompletionBlock:
_prepareExtractor:toPath:completionBlock:
suspendStreamWithCompletionBlock:
prepareForExtractionToPath:completionBlock:
prepareForExtraction:
initWithExtractor:toPath:
diskUsage
_dataComplete
_extractor
_hasConsumedData
_path
_resumptionOffset
autoUpdateEnabled:
getUpdatesWithReplyHandler:
refreshUpdateCountWithReplyHandler:
reloadFromServerWithReplyHandler:
setAutoUpdateEnabled:withReplyHandler:
updateAllWithOrder:replyHandler:
reloadFromServerInBackgroundWithCompletionBlock:
compatibilityUpdateForBundleIDs:userInitiated:withReplyHandler:
confirmAgentRequestedUpdateAll:
updatesInterface
setUpdatesInterface:
_updatesInterface
initWithDictionary:applyingAssetStrategy:installedItem:
_parseAssetsFromDictionary:applyingAssetStrategy:withInstalledItem:
_parseMetadataFromDictionary:
copyWritableMetadataForAccount:includeVariant:
itemWithDictionary:
copyWritableMetadataForAccount:
artistName
betaExternalVersionID
bundleShortVersion
gameCenterEnabled
gameCenterEverEnabled
iAdAttribution
iAdConversionString
iAdImpressionString
preflightPackageURL
purchaseDate
ratingLabel
ratingRank
subGenres
nameTranscriptions
_automatic
_gameCenterEnabled
_gameCenterEverEnabled
_hasMessagesExtension
_hasWatchApp
_hasWatchIndependentApp
_hasWatchOnlyApp
_purchasedRedownload
_supports32BitOnly
_appReceiptData
_artistName
_artworkURL
_assetDeltaPackage
_assetFullPackage
_betaExternalVersionID
_bundleShortVersion
_cancelDownloadURL
_capabilities
_iAdAttribution
_iAdConversionString
_iAdImpressionString
_kind
_messagesArtworkURL
_preflightPackageURL
_purchaseDate
_ratingLabel
_ratingRank
_storeTransactionID
_subGenres
_nameTranscriptions
_newDateFormatter
setDateFormat:
setLenient:
timeZoneForSecondsFromGMT:
setTimeZone:
iAdConversionDate
iAdImpressionDate
parse
numberWithUnsignedInt:
parserDidStart:
parser:didFinishWithState:
parserDidCancel:
parser:didFailWithError:
parser:shouldParseCode:
parser:shouldParseCodeAsContainer:
parser:didStartContainerCode:contentLength:
parser:didParseDataCode:bytes:contentLength:
parser:didEndContainerCode:
_data
_hasParsedData
_close
_verifiedStatementForPreparedStatement:error:
executePreparedStatement:error:bindings:
_executeStatement:error:
_verifiedStatementForSQL:error:
_open
_flushAfterTransactionBlocks
_prepareStatement:error:
_finalizeAllStatements
_executeWithError:usingBlock:
_resetAfterCorruptionError
_resetAfterIOError
_performResetAfterCorruptionError
_statementForPreparedStatement:error:
dispatchAfterTransaction:
executePreparedQuery:withResults:
executePreparedStatement:error:
finalizePreparedStatement:error:
lastChangeCount
open
prepareStatement:error:
truncate
_afterTransactionBlocks
_didResetForCorruption
_preparedStatements
_transactionDepth
_transactionWantsRollback
_copyTableClusteredValuesWithValues:
_insertValues:intoTable:withPersistentID:onConnection:
_deleteRowFromTable:usingColumn:
foreignDatabaseTablesToDelete
foreignKeyColumnForTable:
initWithObjectsAndKeys:
foreignDatabaseTableForProperty:
foreignDatabaseColumnForProperty:
_persistentID
_executeStatement:canFailMigration:bindings:
executeOptionalStatement:bindings:
executeStatement:bindings:
_success
_initWithRevision:forAccountID:requestingAccount:client:purchaseHistoryContext:
_requestingAccount
_purchaseHistoryContext
_valueFromKeychainForKey:error:
_generateKeyDataError:
_saveValueToKeychain:forKey:error:
initWithBytesNoCopy:length:deallocator:
_copyErrorForOSStatus:
base64EncodedDataWithOptions:
initWithBase64EncodedData:options:
initWithURL:resolvingAgainstBaseURL:
URLQueryAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
initialize
forceSandboxForBundleIentifier:untilDate:
useSandbox
_useSandbox
_updateEntity:
_setUserVersion:
currentUserVersion
runSilently
_proxy
_runSilently
setErrorDomain:
setErrorDescription:
hasErrorDomain
setErrorCode:
setHasErrorCode:
hasErrorCode
hasErrorDescription
errorDomain
errorCode
errorDescription
_errorCode
_errorDescription
_errorDomain
clientVersion
initWithProcessInfo:
setClientName:
compile
lib_deviceIsWiFiCapable
lib_deviceUnlocked
lib_passcodeDisabled
lib_userAgentForClientID:
lib_userAgentForClientName:andClientVersion:
_lib_compatibleProductType
_predicateMatchingCoordinatorID:orActiveInstallMatchingBundleID:
activeInstallMatchingBundleID:
installForExternalID:
setPipeline:
_pipeline
maxConcurrentOperationCount
setUnderlyingQueue:
operations
qualityOfService
setQualityOfService:
addOperations:waitUntilFinished:
addOperationWithBlock:
cancelAllOperations
waitUntilAllOperationsAreFinished
addTaskWithBlock:
cancelAllTasks
waitUntilAllTasksAreFinished
connection:hasEntitlement:
addDelegate:queue:
devices
_sendMessage:toDevice:expectsReply:withReplyHandler:
sendMessage:toDevice:
_handleErrorForIdentifier:error:
isResponse
incomingResponseIdentifier
_handleReplyForIdentifier:protobuf:fromID:
outgoingResponseIdentifier
_handleRequestWithIdentifier:protobuf:fromID:
sendProtobuf:toDestinations:priority:options:identifier:error:
methodSignatureForSelector:
invocationWithMethodSignature:
setArgument:atIndex:
retainArguments
invokeWithTarget:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
sendProtobof:ofType:toDevice:
sendProtobuf:ofType:toDevice:withReplyHandler:
_service
_queuedMessages
_messageHandlers
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
objCType
setRequiresMigrationComplete:
statusCode
asset_statusCode
ASD_intentForClass:
ASD_intent
ASD_classForIntent:
flushMetricsWithCompletionBlock:
reportAppEvent:completionBlock:
performSavepoint:
column:existsInTable:
tableExists:
initWithHoldTime:
countForObject:
_holdTime
_transactionCount
_transactionStore
buyParameters
isBackgroundUpdate
accountIdentifier
affiliateIdentifier
_purchase_clientInfoUsingRequestToken:
purchase_purchaseInfoWithRequestToken:
willChangeValueForKey:
didChangeValueForKey:
setExecuting:
setFinished:
isAsynchronous
isExecuting
isFinished
_executing
_finished
setAppAssetPromise:error:
appAssetPromiseWithError:
setAppAssetPromiseResponsibleClient:error:
appAssetPromiseResponsibleClientWithError:
appAssetPromiseHasBegunFulfillment:error:
hasAppAssetPromise
initWithName:client:streamingZipOptions:archiveSize:diskSpaceNeeded:
cancelForReason:client:error:
_setPromiseUsingSpecification:withError:
_newPromiseUsingDefinition:
failPromiseID:forReason:withError:
fetchPromiseID:orCreateUsingSpecification:withError:
resetPromiseID:withError:
truncatePromiseID:usingSpecification:withError:
clusterID
clusterVersion
launchesWeight
usageWeight
setLaunchesWeight:
initWithExternalMapping:
clusterKey
_clusterID
_clusterVersion
initWithCondition:
_performMigrationIfNeeded
condition
_signalMigrationComplete
unlockWithCondition:
initWithCompletionHandler:
isMigrationComplete
_conditionLock
logCode
_externalID
_logCode
finishAppUpdateForBundleID:withUpdateState:
getUpdatesWithContext:
hidePendingUpdatesBadge
postProcessBackgroundUpdateMetrics
performPostRestoreUpdatesCheck
reloadUpdatesWithContext:
setupFollowingMigration
showPendingUpdatesBadge
verifyPendingUpdates:
verifyUpdatesFollowingExternalAppInstall:
provisionedApps
setProvisionedApps:
_automaticDownloadsAreDisabled
_currentAccountDSID
_callbackQueue
_badgeQueue
_provisionedApps
removeObserver:name:object:
initWithEvalulator:
_refreshSystemAppMapping
_handleAppRegisteredNotification:
_handleAppUnregisteredNotification:
finishProgressForBundleID:
_createAppFromProxy:
catalogRegisteredApps:
cancelProgressForBundleID:
catalogUnregisteredBundleIDs:
predicateWithFormat:
filteredArrayUsingPredicate:
lib_extensionType:
openSensitiveURL:withOptions:
launchApp:withResultHandler:
serviceWithDefaultShellEndpoint
openApplication:withOptions:completion:
_getAppsOfType:matchingPredicate:usingBlock:
_createAppFromProxy:isPlaceholder:
lib_isFamilyShared
lib_isOcelot
lib_isOpenable
_updateBuyParamsForBundleID:
setUpdateBuyParams:
lib_extensionTypes
setExtensions:
existingProgressForBundleID:
setRemoteProgress:
setBundleShortVersion:
evaluateWithObject:
_enumerateApplicationsOfType:usingBlock:
hideableSystemApps
dictionaryWithCapacity:
tcr_unsignedLongLong
executeQuery:excludingBundleIDs:usingBlock:
observer
setObserver:
launchApp:extensionType:withResultHandler:
launchApp:onPairedDevice:withResultHandler:
resultsMatchingPredicate:error:
resultsWithBundleIDs:error:
resultsWithItemIDs:error:
_observer
_planner
_systemAppMappingByBundleID
_systemAppMappingByItemID
_dialogForUpdateWithName:andSize:forRoaming:remaining:
_dialogForDownloadWithName:andSize:forRoaming:remaining:
_formattedSize:
_bodyStringWithSize:remaining:
_hasWAPICapability
stringFromByteCount:countStyle:
dialogForUpdatesWithSize:limit:roaming:
makeObjectsPerformSelector:withObject:
_registerNotificationSource
_validatePredicate:error:
allowEvaluation
predicateFormat
notificationForRegisteredApps:
postNotification:
notificationForRefreshWithBundleIDs:
notificationForUnregisteredBundleIDs:
notificationWithName:userInfo:
notificationSourceWithName:applicableEntitlement:mergeHandler:
registerNotificationSource:
lib_copyPropertyGetterNames
setAcceptableExpressionTypes:count:
setAcceptableKeyPaths:
validatePredicate:withError:
catalogRefreshedBundleIDs:
executeQueryWithPredicate:withReplyHandler:
executeQueryWithPredicate:onPairedDevice:withReplyHandler:
cancelApp:onPairedDevice:withReplyHandler:
cancelApp:withReplyHandler:
pauseApp:withReplyHandler:
resumeApp:withReplyHandler:
launchApp:extensionType:withReplyHandler:
launchApp:withReplyHandler:
launchApp:onPairedDevice:withReplyHandler:
uninstallApp:withReplyHandler:
_validKeyPaths
_libraryCatalogs
_libraryOpen
_libraryProgress
_libraryUninstall
_pairedDeviceObservers
_discardRequestPropertiesForTask:
resultFromResult:error:
_dequeueRequestPropertiesForTask:
_processResponseDictionary:withRequestProperties:
initWithBase64EncodedString:options:
_importKeyBagFromDictionary:
setValue:forRequestParameter:
setBagURL:
setKBSyncType:
setShouldAppendGUIDParameter:
dataEncoding
setRequestHeaders:
setRequestParameters:
_compressRequestBody
_shouldAppendGUIDParameter
_URLKnownToBeTrusted
_KBSyncType
_requestCachePolicy
_requestBodyData
_requestMethod
_dataEncoding
_requestHeaders
_requestParameters
requestParameters
requestBodyData
bagURL
requestMethod
dataTaskPromiseWithRequestProperties:forRequest:
thenWithBlock:
_requestProperties
_familyMembersSuppressDialogs:error:
fetchFamilyAccountIDsSuppressDialogs:
_bootstrapFamilyIfNeededSuppressDialogs:error:
_clearFamily
bundleExecutable
stringByAppendingPathExtension:
pathWithComponents:
askToBuyEnabledForCurrentUser:account:error:
familyPurchaserIDFromSINF:
familyAccountIDs
_sinfPathForProxy:
_familyAccountIDs
_lastFamilyCheck
_lock
_notificationQueue
dateWithTimeIntervalSinceNow:
setNextPostTargetDate:forActivity:
nextPostDateForActivity:
_addIntervalActivity:activityShortName:scheduledDate:refreshInverval:forceReset:reason:
resetActivity:reason:block:
activityShortNameForType:
isActivityEnabled:
_addActivityType:reason:forceReset:
_addUpdateActivityWithReason:
_addOcelotResetPayoutActivityWithReason:
postIntervalSecondsOverrideForActivity:
crossfirePostIntervalSeconds
ocelotPostIntervalSeconds
ocelotPostPayoutIntervalSeconds
sbsyncRefreshIntervalSeconds
_activityTypeForName:
performBackgroundSoftwareUpdateCheck
lastOSBuildVersion
_performMigration
setLastOSBuildVersion:
registerActivity:activityShortName:scheduledDate:withReason:
_activityNameForType:
handleWakeWithName:
nextOcelotPayoutResetDate
registerActivity:withReason:
_handleWakeupForActivity:
_registerActivity:activityShortName:criteria:reason:
_setupActivities
_sessionWithClientInfo:
responseDecoder
registerRequestProperties:forTask:
discardRequestPropertiesForTask:
ams_configureWithProcessInfo:bag:
setResponseDecoder:
_sessions
_requestPromiseForInstall:
_startRequest:forPersistentID:
promiseWithAll:
resultWithTimeout:error:
componentsWithURL:resolvingAgainstBaseURL:
queryItems
contentRestoreURL
_newBodyDictionaryWithAccountID:
universalItemResponseWithDictionary:
serialNumber
_failedItems
initWithSandbox:
_keySet
currentProcess
setAccountMediaType:
bagForProfile:profileVersion:processInfo:
integerForKey:
arrayForKey:
stringForKey:
boolForKey:
createSnapshotWithCompletion:
addBagKey:valueType:
sandboxBag
isExpired
expirationDate
profile
profileVersion
appUsageFlushIntervalSeconds
autoUpdateReloadIntervalCellular
deltaIncompatibleBuildToolVersions
drmRecovery
crossfireSamplingPercentage
odrURL
ownsCheckURL
mescalSignedActions
personalizedLookupURL
unpersonalizedLookupURL
appUsagePostGracePeriodSeconds
appUsagePostsPerDay
appUsageResetActorIDFrequencySeconds
appUsageSamplingPercentage
clusterMappingURL
clusterMappingRefreshFrequencySeconds
IAPInfoBaseURL
IAPInfoForcedRefreshMinutes
IAPInfoDatabaseID
subscriptionEntitlementsRefreshIntervalInSeconds
subscriptionEntitlementsTimeout
subscriptionEntitlementsURL
doNotUpdateList
v2UpdateSchedulingEnabled
updatesReloadInterval
updatesReloadIntervalCellular
appleIDLookupURL
countryCode
createAppReceiptURL
productOffersURL
productOffersBatchSize
renewVPPReceiptURL
completeStoreDownloadURL
backoffDelays
backoffRandomRange
getImageUploadURLsURL
uploadFeedbackURL
welcomeToAppStoreDelay
welcomeToAppStoreSample
welcomeToAppStoreTitle
welcomeToAppStoreMessage
welcomeToAppStoreLaterButton
welcomeToAppStoreRemindMe
welcomeToAppStoreDontRemindMe
welcomeToAppStoreActionButton
welcomeToAppStoreActionURL
upToDateClaimURL
contentRestoreMaxItemCount
ocelotPayoutQualifyingDurationSeconds
sbsyncProductionURL
sbsyncSandboxURL
manageSubsOnAppDeleteBlacklist
expired
setAddedApps:
setRemovedApps:
setIsLast:
_isLast
_addedApps
_removedApps
_continueParsing
lockWhenCondition:
_incrementBatchCount
setCircularIconURLString:
_currentItem
_errorParsingItem
_currentBatchAdded
_currentBatchRemoved
_currentRequiredCapabilities
_currentContainerCode
_batchSize
_currentBatchCount
_parsingLock
_parsingQueue
_doneParsing
shouldReportAnonymousPings
sharedSession
initWithPingURLs:
_pingURLs
setOriginalPurchaserDSID:
lib_account
ams_setDSID:
setUsername:
ams_setAltDSID:
setRemoteInstall:
previousExternalVersionID
setInstalledExternalVersionID:
previousVariantID
setInstalledVariantID:
_appAlreadyInstalledForPurchaseInfo:
initWithPurchaseInfo:
_appAlreadyRequestedForPurchaseInfo:
_companionBundleIDForItemID:requestToken:
_configureUsingRequestProperties
_addGUIDToRequestParameters:
_addKBSyncDataToRequestParameters:
requestCachePolicy
requestHeaders
shouldAppendGUIDParameter
KBSyncType
setMescalType:
URLKnownToBeTrusted
compressRequestBody
requestByEncodingRequest:parameters:error:
requestProperties
requestWithURL:
setHTTPMethod:
dataTaskWithRequest:
timeoutInterval
expectedContentLength
invalidateAndCancel
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_semaphore
_url
_contentLength
deviceForIDSDevice:
serviceMinCompatibilityVersion
modelIdentifier
systemVersion
isLocallyPaired
thinningHeaders
isSupported
thinningVariant
isTombstone
_activePairedDevice
_supported
_tombstone
_destinationID
_thinningVariant
configuration
copyRequestProperties
requestUUID
_prepareDataConsumerUsingTaskInfo:
countOfBytesReceived
countOfBytesExpectedToReceive
currentRequest
asset_rangeOffset
_reportMetricsForTaskInfo:withCompletionError:
_finishPromiseUsingTaskInfo:
_retryTaskUsingTaskInfo:
allowsAuthentication
initWithTask:metrics:
shouldCollectMetricsForContext:
initWithContext:
lib_sharedInstanceWithContainerId:
rangeOffset
_prepareRequestUsingTaskInfo:
_startTaskUsingTaskInfo:withRequest:
_CFURLRequest
_initWithCFURLRequest:
asset_setRangeOffset:
requestReason
taskPriority
set_priority:
bytesPerSecondLimit
set_bytesPerSecondLimit:
loadingPriority
set_loadingPriority:
qosClass
URLSession:_willRetryBackgroundDataTask:withError:
URLSession:_willRetryBackgroundDataTask:
URLSession:task:_schemeUpgraded:completionHandler:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
URLSession:task:_isWaitingForConnectionWithError:
URLSession:task:_isWaitingForConnectionWithReason:
URLSession:_taskIsWaitingForConnection:
URLSession:task:_conditionalRequirementsChanged:
_delegateQueue
_copyEntitlementsForTask:withPID:
_hasLegacyEntitlement:forTask:withPID:
_pid
initWithIdentity:
settingsForIdentity:
_identity
_settings
initWithMachServiceName:
initWithCatalog:andListener:
unregisterNotificationClient:
registerNotificationClient:
_activeClients
_listener
_registerDistributedNotificationEventHandler
_registerNotificationEventHandler
postNotificationName:object:userInfo:
keepAliveWithFormat:
_dispatchCompletionBlock
completionBlock
_initWithServiceClient:
takeKeepAliveTransaction:
releaseKeepAliveTransaction:
_transactionID
_notificationClient
lib_coordinatorForAppWithBundleID:withIntent:createIfNotExisting:wasCreated:withError:
lib_cancelOwnedCoordinatorForAppWithBundleID:withError:
lib_appStoreIsOwningClient
lib_setImportance:withError:
lib_appStoreIsResponsibleClientWithError:
coordinatorForAppWithBundleID:withClientID:createIfNotExisting:created:error:
creatorIdentifier
setDeviceSecurityPromise:error:
deviceSecurityPromiseWithError:
setInitialODRAssetPromises:error:
initialODRAssetPromisesWithError:
hasInitialODRAssetPromises
setPlaceholderPromise:error:
placeholderPromiseWithError:
hasPlaceholderPromise
setInstallOptions:error:
hasInstallOptions
setPreparationPromise:withError:
initWithName:client:diskSpaceNeeded:
setPercentComplete:
setComplete:
setUserDataPromise:error:
userDataPromiseWithError:
userDataRestoreShouldBegin:
hasUserDataPromise
setTargetGizmoPairingID:error:
setImportance:error:
importanceWithError:
lib_coordinatorIntent
lib_expectsPlaceholderPromise
lib_hasAppAssetPromise
lib_hasCompletedPlaceholder
lib_hasInitialODRAssetPromises
lib_hasInstallOptions
lib_addFeedbackPromiseWithError:
lib_completeInitialODRPromisesWithError:
lib_failWithReason:withError:
lib_satisfyDeviceSecurityPromiseWithError:
lib_setAppStoreAsDRIWithError:
lib_setInitialODRAssetPromises:withError:
lib_setInstallOptions:withError:
lib_setPlaceholderPromise:error:
_streamingZipOptionsForPackage:useClearHashes:
initWithPromiseProvider:promiseID:specification:error:
_buildAssetRequestWithDataConsumer:error:
continueInstallID:withDataConsumer:assetRequest:
prepareForDownload
setConnectionPool:
setRangeOffset:
setNetworkBudgetingIdentifier:
setLocateAssetCache:
setTaskPriority:
setQosClass:
setDiscretionaryType:
setDuetBudgetingIdentifier:
setAllowsAuthentication:
setRequestReason:
_allowsCellularAccess
setAllowsWatchCellularAccess:
allowsWatchCellularAccess
setMaximumWatchCellularTransferSize:
initWithURL:properties:
allowsCellularAccess
setAllowsCellularAccess:
_allowsConstrainedNetwork
setDownloadResponse:
_downloadResponse
_initWithInstallID:result:dataConsumer:assetRequest:error:
_assetRequest
setWithArray:
initWithSystemAppLookupItem:
_results
setMaxConcurrentOperationCount:
requiredProperties
_beginInstallingUsingInstallInfo:transaction:
_beginPostambleUsingInstallInfo:transaction:
_beginPreambleForInstallsMatchingPredicate:transaction:
cancel
operationForInstallID:inSession:withCoordinator:
downloadResponse
_finishDownloadingOperationWithResponse:
addOperation:
operationForInstallID:packageID:inSession:withCoordinator:
installResponse
_finishInstallingOperationWithResponse:
_finishPostambleOperationWithInstallInfo:
_beginPreambleWithOperation:transaction:
_finishPreambleOperationWithResponse:
assetRequest
assetPromiseWithRequest:
_handleAssetResult:error:usingInstallInfo:
setRequiresDeviceSecurity:
lib_shortDescription
_beginDownloadingUsingInstallInfo:transaction:
setRequiresNetwork:
_isRecoverableNetworkError:
coordinatorPromiseDataConsumer:willBeginUsingPromise:forReference:
_assetSession
_operationQueue
_requestLookup
removeObjectIdenticalTo:
_notificationClients
_notificationSources
initWithConnection:andCatalog:
lib_newProcessInfoForConnection:
auditToken
initWithAuditToken:forPID:
setUserInfo:
diagnosticServiceProvider
diagnosticServiceEntitlement
_provideService:forEntitlement:withReply:
installationServiceProvider
installationServiceEntitlement
libraryServiceProvider
libraryServiceEntitlement
CrossfireServiceProvider
CrossfireServerEntitlement
PurchaseHistoryServiceProvider
PurchaseHistoryServiceEntitlement
PurchaseServiceProvider
PurchaseServiceEntitlement
RepairServiceProvider
RepairServiceEntitlement
UpdatesServiceProvider
UpdatesServiceEntitlement
remoteObjectProxyWithErrorHandler:
deliverAuthenticateRequest:withResultHandler:
_unboostingRemoteObjectProxy
deliverNotifications:
addBarrierBlock:
deliverProgress:
hasEntitlement:
newClientForConnection:withCatalog:
getCrossfireServiceWithReplyHandler:
getDiagnosticServiceWithReplyHandler:
getIAPHistoryServiceWithReplyHandler:
getInstallationServiceWithReplyHandler:
getLibraryServiceWithReplyHandler:
getOcelotServiceWithReplyHandler:
getPersonalizationServiceWithReplyHandler:
getPrivilegedTaskServiceWithReplyHandler:
getPurchaseHistoryServiceWithReplyHandler:
getPurchaseServiceWithReplyHandler:
getRepairServiceWithReplyHandler:
getTestFlightFeedbackServiceWithReplyHandler:
getUpdatesServiceWithReplyHandler:
deliverNotifications:withBarrierBlock:
deliverProgress:withBarrierBlock:
_auditTokenData
_catalog
_entitlements
hasSeenAppStore
_processInfo
_hashArrayFromMeasurement:
scanUnsignedLongLong:
_stringFromDigest:
stringWithCString:encoding:
_downloadOffset
_downloadSize
_title
evaluatorForIdentity:
evaluateForDownload:
isAutomatic
bytes
dialogForDownload:roaming:
cellularDownload
setCellularDownload:
cellularIdentity
setCellularIdentity:
evaluatorResult
_cellularDownload
_cellularIdentity
_evaluatorResult
initWithACAccount:
activeEndTime
activeStartTime
_diagnosticServiceProvider
_CrossfireServiceProvider
_installationServiceProvider
_libraryServiceProvider
_PurchaseHistoryServiceProvider
_PurchaseServiceProvider
_RepairServiceProvider
_UpdatesServiceProvider
_diagnosticServiceEntitlement
_CrossfireServerEntitlement
_installationServiceEntitlement
_libraryServiceEntitlement
_PurchaseHistoryServiceEntitlement
_PurchaseServiceEntitlement
_RepairServiceEntitlement
_UpdatesServiceEntitlement
[%@]: Starting Diagnostic service
[%@]: Starting Installation service
[%@]: Starting Library Service
[%@]: Starting Purchase service
[%@]: Starting Purchase History service
[%@]: Starting Repair service
[%@]: Starting Update Service
[%@]: Starting Crossfire service
[Thermal] Registration for thermal pressure notification failed: %u
[Thermal] Thermal pressure is now %@ (%llu)
[%@]: Adding event for app with bundleID: %{public}@ type: %ld
[%@]: Could not find previous app metadata bundleID: %{public}@
[%@]: Type: %ld : %{public}@
[%@]: Failed to create event with topic: %{public}@
[%@]: Not recording uninstall for offloaded bundleID: %{public}@
[%@]: Not recording uninstall for placeholder bundleID: %{public}@
[%@]: Warning: Did not find a corresponding delete event for bundleIDs: [%{public}@]
[%@]: Not recording uninstall for bundleID: %{public}@ due to lack of metadata
[%{public}@]: Looking for launch events from: %{public}@ to: %{public}@
[%{public}@]: Could not find app metdata for: %{public}@
[%{public}@]: Skipping too short launch for: %{public}@. minTime: %ld runningTime: %lld
[%@]: Last update date not set. Don't know where to start.
[%{public}@]: Dropping invalid purchase: %{public}@
[%{public}@] Purchase import failed with error: %{public}@
[%{public}@] Purchase import succeeded
[%{public}@] Using workaround for missing buy parameters
[%{public}@]: Queued remote installation on paired phone: %{public}@
[%{public}@]: Failed to queue remote installation to paired phone: %{public}@
Error getting store metadata for %{public}@ from %{public}@: %{public}@
[%{public}@]: Requires unconstrained network, but not prompting for automatic download.
[%{public}@]: Requires unconstrained network, but not prompting for current network.
[%{public}@]: We were asked to download now.  Ignoring constrained network.
[%{public}@]: We were asked to download later.  Requiring unconstrained network.
[%@]: Inserting metric event: %@
[%@]: Inserting metric events: %@
[%{public}@]: Flushing metrics with reason: %{public}@
[%{public}@]: Error sending metrics events. Error: %{public}@
[%{public}@]: Completed sending metrics events
[%{public}@]: BundleID required for event: %{public}@
Skipping foreground event with timestamp: %{public}@ duration: %{public}@
[%{public}@]: Syncing updates with server 
[%{public}@]: Hiding update for %{public}@ following server sync
[%{public}@]: Transitioning %{public}@ to state "%s"
[%{public}@]: Update does not exist for purchase: %{public}@ with storeID: %{public}@
[%{public}@]: Could not find update for purchase: %{public}@ due to missing storeID
Crossfire: User not opted-in to list app events
Crossfire: Record app event: [%{public}@]
Crossfire: User not opted-in to record app event: [%{public}@]
Crossfire: Apps deleted: [%{public}@]
Crossfire: Not recording apps deleted: [%{public}@]
Crossfire: Not enabled to send crossfire metrics
Crossfire: Posting crossfire metrics
Crossfire: Apps installed: [%{public}@]
Crossfire: Not recording apps install: [%{public}@]
Crossfire: Resetting crossfire metrics
Crossfire: Sending crossfire metrics
Crossfire: Setup with reason: %{public}@
Crossfire: Adding event for app with bundleID: %{public}@ type: %ld
Crossfire: Using test topic: %{public}@
Crossfire: Unable to record current apps due to error: %{public}@
Crossfire: Recorded current %ld apps
Crossfire: Importing launch event(s) error: %{public}@
Crossfire: Imported %ld launch event(s) with result: %d
Adding event for app with bundleID: %{public}@ type: %ld
Crossfire: Error sending metrics events. Error: %{public}@
Crossfire: Completed sending metrics events reason: %{public}@
Crossfire: Resetting analytics gathering
Crossfire: Clearing out analytics data
Crossfire: Clearing out anyalics data
Crossfire: Crossfire interval not in session
Crossfire: Queuing %ld crossfire metrics event(s)
Crossfire: No events to report
Crossfire: BundleID required for event: %{public}@
Crossfire: Error creating entity for bundleID: %{public}@ result: %{public}@
Crossfire: Created app event entity with bundleID: %{public}@
Crossfire: Error creating entity for bundleIDs: [%{public}@] result: %{public}@
Crossfire: Created app event entity with bundleIDs: [%{public}@] result: %d
Crossfire: Error generating context error: %{public}@
Crossfire: Importing launch events error: %{public}@
[%{public}@]: First time seeing this account, setting up defaults
[%{public}@]: Error saving automatic software downloads setting: %{public}@
[%{public}@]: Error getting automatic downloads settings: %{public}@
[%{public}@]: Error saving automatic downloads setting for key %{public}@: %{public}@
[%{public}@]: Fetched automatic downloads settings: %{public}@
[%{public}@]: Unable to get automatic downloads settings because there is no active account
[%{public}@]: Received notification that settings changed externally.
Received a notification that preferences have changed externally.
[%{public}@]: Error fetching automatic download settings: %{public}@
[%{public}@]: Automatic software downloads in defaults differs from what we have on the account, updating
RepairService: Received repair request for client: %{public}@
RepairService: Repair completed with error: %{public}@
RepairService: Repair complete with result: %d claimedBundleIdentifier: [%{public}@]
RepairService: Repair complete with result: %d
[%{public}@] Performing preflight checks
[%{public}@] Application only supports 32-bit architecture
[%{public}@] Found duplicate application `%{public}@` for item `%{public}@`
[%{public}@] Found duplicate application `%{public}@` for bundle `%{public}@`
[%{public}@] Automatic downloads have been disabled
[%{public}@] Automatic downloads are not permitted
Invalid hash '%@' expected '%@'
FamilyMember: Received an invalid server response for FamilyMember. serverResponse = %@
No app updates migration function for %li => %li
[%@]: Attempting silent auth for account: %{public}@
Starting batch restore for %ld items with accountID: %{public}@
Using the active account for content restore call
Skipping initial lastest version fetch for batch
Error running content restore request. Error: %{public}@
Retry complete for items: [%{public}@]
[%{public}@] Hard failing after %ld attempts
[%{public}@] Soft failing item not in the server reponse, and not encontering an error. Soft failure retry count: %ld
itemID: %{public}@ not in restore map
Skipping post processing to server item missing missing itemID for item: %{public}@
Skipping post processing of failed itemID: %{public}@ due to missing mapped item
Skipping post processing of failed itemID: %{public}@ due to missing mapped install item
[%{public}@] Soft failing with %ld attempts
[%{public}@] Skipping item due to missing itemID on metadata
[Network] Unable to fetch current cellular data subscription: %{public}@
[Network] Cellular data subscription became: %{public}@
[Network] Unable to identify cellular data subscription: %{public}@
[Network] There is no cellular data subscription
[Network] Connection status became: %ld
[Network] Interface type: %ld
[Network] Network available (expensive = %d, constrained = %d)
[Network] Network unavailable
->> %{public}@
[%@]: Recieved command: %ld
No active paired device is available
%{public}@ >> SENDING PING
%{public}@ >> SENDING FAILED: %{public}@
%{public}@ >> RECEIVED PONG
NETWORK: isConnected = %d, isExpensive = %d, isConstrained = %d, isRoaming = %d, status = %@
Command not supported
Authorizing account: %@
Authorize complete with error: %@
Authorize complete for account: %@
Client not supported
Recieved detailed command: %ld
%{public}@ >> RECEIVED PING FROM %{public}@
[%@]: Purchase History DAAP data not NSData
[UPP] Received authentication challenge
[UPP] Using client certificate for authentication challenge
[UPP] Using server trust for authentication challenge
[UPP] Prompting user for authentication challenge
[UPP] Canceling user authentication challenge
[UPP] Completed user authentication challenge
[UPP] Using default handling for authentication challenge
[%{public}@]: No URL provided for request from client: %{public}@
The manifest URL isn't external: %{public}@
Cannot load non-https manifest URL: %{public}@
[%{public}@]: Downloading requested manifest at URL: %{public}@
[UPP]: Manifest is missing required metadata
[UPP]: Manifest references %{public}@ which must be uninstalled first
[UPP]: Failed to encode metadata from manifest
[UPP]: Manifest resulted in no assets imported
[UPP] Skipping item: %{public}@ for an incompatible platform: %{public}@
[UPP]: No manifest data was received
[UPP]: Manifest has changed, original was: %{public}@ this request: %{public}@
[UPP]: Could not parse manifest data: %{public}@
[UPP]: User cancelled manifest confirmation
[%{public}@] Unable to determine download size error: %{public}@
[%{public}@] Unable to determine policy error: %{public}@
[%{public}@] Package for this installation is now missing
[UPP]: Request failed with error: %@
[UPP]: Failed to present dialog, trying system dialog error: %{public}@
[%{public}@]: Starting check of queue type: %{public}@ 
[%{public}@]: Error encountered check queue type: %{public}@ error: %{public}@
[%{public}@]: Successfully completed check of queue of type: %{public}@ nnumber of items: %ld
Completing previously queued downloads failed with error: %{public}@
[%{public}@]: Could not load download manifest with underlying error: %{public}@
[%{public}@] Invalid coordinator intent, treating as initiating instead
[%{public}@] Establishing coordinator for intent `%{public}@` with importance `%{public}@`
Error setting the gizmo pairing ID: %{public}@
Importing keybag
Failing authorization: could not get kbsync
accountID required to authorize
Non fatal error looking up token for account: %{public}@ token error: %{public}@
Authorizing complete. Needs displaysDialogs: %d
[%{public}@]: Got connection from pid: %i
[%{public}@]: Connection interrupted for pid: %i
[%{public}@]: Connection invalidated for pid: %i
[%{public}@]: Connection denied for pid: %i for non-entitled client
[%{public}@]: Received %lu server update(s) for account: %{public}@
[%{public}@]: Failed to fetch updates for account: %{public}@ error: %{public}@
[%{public}@]: Skipping import due to lack for bundleID / clusterID / clusterID for mapping: %{public}@
[%{public}@]: Updated existing cluster mapping for: %{public}@
Unable to create account event entity with: %{public}@
[%{public}@] Performing authentication
[%{public}@] Authenticated successfully
[%{public}@] Error prompting for account: %{public}@
[%{public}@] Showing system alert authentication
Device has no destination ID: %{public}@
Device not found for from ID: %{public}@
Skipping device with no destination ID: %{public}@
[%@]: %{public}@ Adoption requested by %{public}@ but is not supported on this platform
[%@]: %{public}@ Adoptable bundle identifiers requested by %{public}@ but is not supported on this platform
[%@]: Notify dialog complete for purchaseID %{public}@ clientID: %{public}@
[%@]: Notify dialog completed for clientID: %{public}@ with error: %{public}@
[%@]: Notify dialog completed successfully for client: %{public}@ 
[%@]: selector not implemented
[%@]: Notify authentication dialog complete for purchaseID %{public}@ clientID: %{public}@
[%@]: %{public}@ Notify authentication dialog completed for purchaseID: %{public}@ with error: %{public}@
[%@]: %{public}@ Purchase authentication dialog completed successfully for purchaseID: %{public}@
[%@]: Purchase completed for clientID: %{public}@ with error: %{public}@
[%@]: Purchase completed successfully for client %{public}@
[%@]: %{public}@ Starting purchase of %{public}@:%{public}@ by %{public}@
[%@]: %{public}@ Purchase completed with error: %{public}@
[%@]: %{public}@ Purchase completed successfully
[Bag] Failed to fetch value for '%{public}@' error: %{public}@
[Bag] Returning live value '%{public}@' = '%{public}@'
[Bag] Returning memoized value '%{public}@' = '%{public}@'
[Bag] Resetting memoized value for '%{public}@'
[%@]: ** RECEIVED CONNECTION TEST: %@ **
Import success for job: %{public}@ / %{public}@
Added : %{public}@ to previously provisioned apps: [%{public}@]
Import failed for bundleID: %{public}@ error: %{public}@
Skipped duplicate job: %{public}@ / %{public}@
Purchase failed for batch: %{public}@ error: %{public}@
Resetting update state following failed purchase for: %{public}@
Perform updates start with reason: %{public}@
Could not find update for bundleID: %{public}@
Skipping %{public}@ due to restrictions, parentalControlsRank: %ld restrictionsRank: %ld
[%{public}@]: Created purchase info for app with bundle ID %{public}@ and item ID: %lld
Adding update purchase for bundleID: %{public}@ account: %{public}@
Perform updates complete with reason: %{public}@
Bad item data
No bundleID
Performing %lu purchase(s) for account: %{public}@
Error performing purchases for account: %{public}@ error: %{public}@
[%@]: Querying purchase history for account: %{public}@
[%@]: Ignoring update request - there is no active account
[%@]: Force refresh interval: %{public}@
[%@]: Failed to receive refresh interval error: %{public}@
[%@]: Begin observing, current account: %{public}@
[%@]: Updating after account changed
[%@]: Failed to refresh after active account changed error: %{public}@
[%@]: Error decoding response metadata, isUpdate not parsed
[%@]: Error decoding response metadata, revision not parsed
[%@]: Starting update for account: %{public}@, context: %lu
[%@]: Completed update for account: %{public}@ authenticated account: %{public}@
[%@]: Error updating DB for account: %{public}@ authenticated account: %{public}@ error: %{public}@
[%@]: Failed update for account: %{public}@ authenticated account: %{public}@ error: %{public}@
Truncating promise after failure to reset promise %{public}@ with error: %{public}@
gamePlayDidBeginForBundleID:withCompletionHandler: called by %{public}@
[%{public}@]: Requested to start a session for %{public}@ which already has an active session.  Returning the existing session ID.
[%{public}@]: Received a request for a game session for %{public}@ when we had an active session for %{public}@.  Ending current session and starting a new one per request.
[%{public}@]: Created session for %{public}@ with session ID %{public}@
gamePlayDidEndForBundleID:withReason:andSessionID:andCompletionHandler: called by %{public}@
No active session in memory, but recovered session %{public}@
heartBeatForBundleID:andSessionID:withCompletionHandler: called by %{public}@
%{public}@
[%{public}@]: Flushing session
[%{public}@]: Removing inactive session: %{public}@
Repair started with bundleID: %{public}@
Not repairing non store originated app with bundleID: %{public}@
Repair complete for bundleID: %{public}@ result: %d
Attempting keybag refresh for accountID: %{public}@ and bundleID: %{public}@
Showing subscription offer
Auto updates completed
Restore completed
[%{public}@] Sending authentication request
[%{public}@] Temporarily suppressing dialog dialog: %{public}@
[%{public}@] Sending dialog request
[%{public}@] Error sending dialog request: %{public}@
[%{public}@] No account required for AMSPurchaseTypeDownloadProduct
[%{public}@] No account required for machine based purchase
[%{public}@] Account provided but we couldn't find it on this device
[%{public}@] No account provided
[%{public}@] Active iTunes account found, using that
[%{public}@] No active iTunes account found
[%{public}@] No account for discretionary purchase
[%{public}@] Purchase has a dsID but no username to authenticate
[%{public}@] Prompting for account
[%{public}@] No account for purchase: %{public}@
Failed purchase had a trigger queue check.
Purchase finished but it was not found in the batch so dropping the response on the floor
[%{public}@]: Error generating updates URL. Error: %{public}@
[%{public}@]: Error encoding request: %{public}@
[%{public}@]: Error fetching updates: %{public}@
[%{public}@]: Error generating keybag for account: %{public}@
[%@]: Failed to construct request URL error: %{public}@
[%{public}@] Looking for existing coordinator to resynchronize installation
[%{public}@] No coordinator identifier was set
[%{public}@] Coordinator is missing - checking if application is installed
[%{public}@] Application appears to be installed, proceeding to postamble
[%{public}@] Application `%{public}@` could not be found
Canceling remote job for %{public}@
Unable to cancel remote job for %{public}@, no XDC support
Canceling local job for %{public}@
Unable to cancel, no job found for bundle ID: %{public}@
Canceled local job for %{public}@
Pausing local job for %{public}@
Unable to pause, no job found for bundle ID: %{public}@
Paused local job for %{public}@
Resuming local job for %{public}@
Unable to resume, no job found for bundle ID: %{public}@
Resumed local job for %{public}@
[%@]: Connection: %{public}@ received incomming message: %{public}@
[%@]: Received invalid message: %{public}@
[%@]: Received new token: %{public}@ for environment: %{public}@ but we don't post tokens.
Observing installation notifications
[%{public}@] Canceling installation after receiving reason: %{public}@
[%{public}@] Failing installation after receiving error: %{public}@
coordinatorDidCompleteSuccessfully for bundleID: %{public}@
[%{public}@] Completing installation after receiving notification
[%{public}@] Prioritization requested via coordinator. Install phase: %ld
[%{public}@] Reviewing cellular network policy
[%{public}@] Reviewing constrained network policy
Ignoring pausing request for unknown coordinator: %{public}@
[%{public}@] Checking cellular data policy before resuming by user request
[%{public}@] Checking low data policy before resuming by user request
[%{public}@] Resuming by user request
[%{public}@] Ignoring resumption request with invalid phase
[%{public}@] Ignoring duplicate resumption request
Ignoring resumption request for unknown coordinator: %{public}@
[%{public}@]: Prioritize for %{public}@
[%{public}@]: Unable to prioritize due to no bundleID
System app hydrate not supported yet for bundleID: %{public}@
[%{public}@] Unable to re-pause after cellular access declined: %{public}@
[%{public}@] Pausing after failing to determine cellular identity: %{public}@
[%{public}@] Stopping because the installation is no longer paused
[%{public}@] Pausing after cellular network access was denied
[%{public}@] Resuming after prompting user for access to low data network
[%{public}@] Pausing after access to low data network access was denied
[%{public}@] Blocking delta after encountering error: %{public}@
[%{public}@] Finishing with final phase: %{public}@, current phase %{public}@
Failed to finish installation `%lld` does not exist in the database
[%{public}@] Import failed silently with error: %{public}@
[%{public}@] Refreshing existing installation (pid = '%lld', order = '%{public}@', phase = '%{public}@')
[%{public}@] Skipping duplicate install (pid = '%lld', order = '%{public}@', phase = '%{public}@')
[%{public}@] Importing new installation (order = '%{public}@')
[%{public}@] Already paused with phase: %{public}@, ignoring request for reason: %{public}@
[%{public}@] Pausing with phase: %{public}@ for reason: %{public}@
Failed to pause installation `%lld` does not exist in the database
[%{public}@] Resuming installation
Failed to resume installation `%lld` does not exist in the database
[%{public}@] Current phase is not restartable (phase = '%{public}@')
[%{public}@] Restarting as user initiated (phase = '%{public}@')
%{public}@: [%{public}@] Performing LoadFamilyCircleTask
%{public}@: [%{public}@] AMSLoadFamilyCircleTask failed because there's no active account.
%{public}@: [%{public}@] Failed to load the family info because the network call failed. error = %{public}@
%{public}@: [%{public}@] Failed to load the family info because we were unable to process the server response.
%{public}@: [%{public}@] Returning cached family info.
%{public}@: [%{public}@] We failed to load the family info, and we have no cached family info to return.
%{public}@: [%{public}@] AMSLoadFamilyCircleTask failed because the bag didn't give us the URL. error = %{public}@
%{public}@: [%{public}@] Unable to generate the path in order to cache a family info lookup.
%{public}@: [%{public}@] Unable to cache a family info lookup because the given account has no DSID. account = %{public}@
%{public}@: [%{public}@] Failed to serialize the family info. error = %{public}@
%{public}@: [%{public}@] Failed to write the serialized family info to disk. error = %{public}@
%{public}@: [%{public}@] Wrote the serialized family info to: %{public}@
%{public}@: [%{public}@] Unable to load cached family info because the account has no DSID. account = %{public}@
%{public}@: [%{public}@] Our cached family info isn't for the given account.
%{public}@: [%{public}@] We have cached family info for the account, but it's too old to return.
%{public}@: [%{public}@] Unable to generate the path in order to load cached family info.
%{public}@: [%{public}@] Load cached family info.
%{public}@: [%{public}@] Failed to deserialize the cached family info. error = %{public}@
[%@]: Synchronizing active iTunes account after account store change notification: %@
[%@]: Current iTunes account has no DSID: %{public}@
[%@]: Posting notification after active iTunes account changed: %{public}@
[%@]: Posting notification after active iTunes account updated: %{public}@
[%@]: Ignoring update because active iTunes account did not change: %{public}@
[%@]: Received account change notification but there is still no active iTunes account
[%@]: Received account change notification but the account type didn't match: %@
[%@]: Should notify after iTunes account became active: %{public}@
[%@]: Should notify after iTunes account became inactive: %{public}@
[%@]: Should notify after iTunes account changed: %{public}@
Active installations: %lu/%lu Lowest Priority: %ld Highest Priority: %ld
No contention, starting: %{public}@
Jettison candidate (%ld), starting: %{public}@
Prioritized (%ld >= %ld), starting: %{public}@
Polling complete with %lu active installation(s)
[%{public}@] Encountered invalid installation which was not really running
[%@]: A consumer of type: %{public}@ was already registered for action type: %ld
[%@]: A consumer was never registered for action type: %ld
[%@]: Flushing %lu message(s) for action type: %{public}@
[%@]: %lu message(s) pending but no consumer available for action type: %{public}@
[%@]: Skipping environment check and defaulting to: %{public}@
[%@]: Shutting down existing connection before starting up in new environment: %{public}@
[%@]: Environment is invalid, using existing connection instead error: %{public}@
[%@]: Environment is invalid, and no other connection is available error: %{public}@
No Purchase History Database migration function for %li => %li
[%@]: %{public}@: Rejecting delta - version %{public}@ does not match installed version %{public}@
[%@]: %{public}@: Rejecting delta - no applicable variants (%{public}@) for installed variant %{public}@
[%@]: %{public}@: Rejecting delta - installed app is universal
[%@]: %{public}@: Selected delta for version %{public}@ variant %{public}@
[%{public}@] Setting ForceAppDRMMode: %d
[%{public}@] Deallocating: %{public}@ (%{public}p) %{public}@
Stopping for idle-exit
There are %lu open transaction(s):
Requring all stores to migrate after truncating corrupt database at: %{public}@
Exiting after truncating corrupt database at: %{public}@
Exiting after deleting corrupt database at: %{public}@
Removed temporary download folder: %{public}@
Error when trying to remove temporary download folder: %{public}@ : %{public}@
Download path exists but is not a directory: %{public}@
Creating temporary download folder: %{public}@
Failed to create directory: %{public}@ error: %{public}@
Unable to determine path for directory: %ld domain mask: %lu with path component: %{public}@
Failed to determine container path error: %llu
Failed to set attributes for: %{public}@ error: %{public}@
Deleted file that didn't match whitelist: %{public}@
Failed to delete file that didn't match whitelist: %{public}@ error: %{public}@
Keeping whitelisted file: %{public}@
Failed to fetch contents of: %{public}@ error: %{public}@
[%@]: Failed cache app with no bundleID
[%@]: Failed to cancel progress with no bundleID
[%@]: Canceling progress for bundleID: %{public}@
[%@]: Removing placeholder for bundleID: %{public}@
[%@]: Failed find existing app with no bundleID
[%@]: Failed find existing progress with no bundleID
[%@]: Failed to finish progress with no bundleID
[%@]: Finshing progress for bundleID: %{public}@
[%@]: Failed to finish progress for: %{public}@
[%@]: Failed to set fraction completed: %.2f with no bundleID
[%@]: No progress exists for: %{public}@ trying to begin anyway
[%@]: Setting fraction completed: %.2f for bundleID: %{public}@
[%@]: Failed to set fraction completed: %.2f for: %{public}@
Skipping app for catalog query since it is reporting remotely: %{public}@
[%@]: Failed to begin progress with no bundleID (storeItemID: %{public}@)
[%@]: Progress already begun for bundleID: %{public}@ storeItemID: %{public}@
[%@]: Beginning %{public}@ for bundleID: %{public}@ storeItemID: %{public}@
Flushing progress: %{public}@
[Power] Battery saver is enabled
[Power] Power source is plugged in
[Power] Power source is battery
[Power] Registration for power notification failed: %u
[%{public}@]: Unable to evaluate cellular download: %{public}@
[%{public}@]: Unable to evaluate low data download: %{public}@
Skipping system app bootstrap - pending task already exists
Queuing %lu system app(s) for bootstrap
Skipping system app bootstrap - no installations pending
Bootstrapping system applications will be reset after error: %{public}@
Jettisoned %lu installation(s) due to thermal pressure: %{public}@
[%{public}@] Installation remaining paused for expensive network
[%{public}@] Installation remaining paused for low data network
[%{public}@] Resuming installation paused for policy
[%{public}@] Unable to resume coordinator, no identifier was recorded
Polling scheduler: [%{public}@]
Polling completed, started %lu installation(s): %{public}@
Polling completed, started 0 installations
[%{public}@] Resetting installation phase after daemon restart
Requesting scheduler poll for %lu reset installation(s) after daemon start
[%{public}@]: Allowing start, no policy set, allowing install to start unconditionally
[%{public}@]: Denying start, device security not approved
[%{public}@]: Denying start, no network available
[%{public}@]: Denying start, no identity when checking policy: %{public}@
[%{public}@]: Denying start, implicitly denied cellular by evalulator
[%{public}@]: Denying start, explicitly denied cellular by user
[%{public}@]: Denying start, implicitly denied low data by evalulator
[%{public}@]: Denying start, explicitly denied low databy user
[%{public}@]: Denying start, no power available
[%{public}@]: Denying start, battery saver enabled
[%{public}@]: Denying start, pending data migration
[%{public}@]: Denying start, pending setup assistant
[%{public}@]: Allowing start, all policy conditions were met
Sending update change event for: %{public}@
Sent update change event for: %{public}@
Failed to send update change event for: %{public}@
Droping update to finshing due to no bundleID
Failed to find system app mapping: %{public}@
Looking up system apps using predicate: %{public}@
Received %lu system app asset(s)
Discovered matching asset: %{public}@
Failed to lookup system app asset(s): %{public}@
[%{public}@] Ignoring, unsupported action for enterprise request: %{public}@
[%{public}@] Ignoring, missing URL for enterprise request: %{public}@
[%{public}@] Ignoring, invalid URL for enterprise request: %{public}@
[%{public}@] Ignoring, invalid enterprise request with missing URL
Failed to deserialize JSON data for `%{public}@` error: %{public}@
[%{public}@] Canceling purchase due to error: %{public}@
[%{public}@] Refusing to re-complete purchase
[%{public}@] Failing purchase with error: %{public}@
[%{public}@] Refusing to fail completed purchase (error was: %{public}@)
[%{public}@] Cannot mix machine based and non-machine based purchases
[%{public}@] Created batch for machine based purchases
Generating new encryption key for identifier: %{public}@
Unable to fetch/generate key with identifier: %{public}@
[%@]: Unknown sort option: %@
[%{public}@]: gamePlayDidBeginWithCompletionHandler called by %{public}@
[%{public}@]: gamePlayDidEndWithReason:andSessionID:andCompletionHandler called by %{public}@
[%{public}@]: heartBeatForSessionIDWithCompletionHandler called by %{public}@
[%{public}@]: Error, tried to start a game session that has already begun.
[%{public}@]: session began
[%{public}@]: Error, tried to end a game session that has already ended.
[%{public}@]: session ended with reason %ld
[%{public}@]: heartbeat received
Compatibility updates not supported on this platform requested by client: %{public}@
getUpdates requested for client: %{public}@
getUpdates completed sucessfully
refreshUpdateCount requested for client: %{public}@
refreshUpdateCount completed with error: %{public}@
refreshUpdateCount completed sucessfully
reloadFromServer requested for client: %{public}@
reloadFromServer completed with error: %{public}@
reloadFromServer completed sucessfully
Update all requested with client: %{public}@
updateAllWithOrder completed with error: %{public}@
updateAllWithOrder completed sucessfully
reloadFromServerInBackgroundWithCompletionBlock requested for client: %{public}@
[%@]: Parser canceled
[%@]: Parser failed with error: %{public}@
Connection taken down HARD, please call close before deallocating: %{public}@
Encountered exception while in transaction: %{public}@
[%@]: Asking delegate to reset database after corruption: %{public}@
[%@]: Truncating database after corruption: %{public}@
[%@]: Reopening database after IO error: %{public}@
[%@]: Asking delegate to reset database after reopen: %{public}@
%{public}@: Forcing sandbox for %{public}@ until %{public}@
%{public}@: Invalid initialization dictionary: %{public}@
Migrating %{public}@ to %llu
Migrating %{public}@ to %llu failed!
Running async authorize operation for accountID: %{public}@ familyMemberAccountID: %{public}@
Error async requesting authorizion. Error: %{public}@
Authorize async request succeeded
Running sync authorize operation for accountID: %{public}@
Running sync authorize operation for accountID: %{public}@ familyMemberAccountID: %{public}@
Error authorizing. Error: %{public}@
Authorize sync operation succeeded
[%@]: Mismatched capabilites: %{public}@
Failed to create service: %{public}@
Listening for service: %{public}@
Sending: %{public}@ failed with error: %{public}@
Received reply without outgoing identifier for type: %u from: %{public}@
Updating after devices changed: %{public}@
Sending message: %ld to: %{public}@ with payload: %{public}@
Sending: %{public}@ to: %{public}@ failed with error: %{public}@
Received reply but no handler exists for: %{public}@ type: %u from: %{public}@
Received reply for: %{public}@ type: %u from: %{public}@
No handler for received request for: %{public}@ type: %u from: %{public}@
[%{public}@]: flushMetricsWithCompletionBlock for client: %{public}@
[%{public}@]: getAppEventsWithCompletionBlock for client: %{public}@
[%{public}@]: recordLaunchesWithCompletionBlock for client: %{public}@
[%{public}@]: recordMetricsWithCompletionBlock for client: %{public}@
[%{public}@]: reportAppEvent for client: %{public}@
[%{public}@]: resetMetricsWithCompletionBlock for client: %{public}@
[%{public}@]: sendMetricsWithCompletionBlock for client: %{public}@
[Transaction] Started transaction: %{public}@
[Transaction] Joined transaction: %{public}@
[Transaction] Ended transaction: %{public}@
[Transaction] Left transaction: %{public}@
[%{public}@]: BundleID required for mapping: %{public}@
Waiting for data migration to complete
Data migration has now completed
Reset purchase state update job for bundleID: %{public}@
Failed to reset purchase state update job for bundleID: %{public}@
set auto updates enabled
Setting update state for bundleID: %{public}@ to %ld
[%@]: Finishing progress for installed app: %{public}@
[%@]: Found mappings for %lu system apps: %@
[%@]: Failed to fetch system application map error: %{public}@
%{public}@ Query failed for %{public}@: %{public}@ error: %{public}@
%{public}@ Starting query for %{public}@: %{public}@
%{public}@ Completed with no results
%{public}@ Completed with 1 result: %{public}@
%{public}@ Completed with %lu result(s)
%{public}@ Launching messages extension for %{public}@: %{public}@
%{public}@ Launching app for %{public}@ on %{public}@: %{public}@
%{public}@ Launching app for %{public}@: %{public}@
%{public}@ Uninstalling app for %{public}@: %{public}@
[%{public}@]: Error looking up family history for accountID: %{public}@ error: %{public}@
[%{public}@]: Family member found with accountID: %{public}@ askToBuyEnabled: %d
[%{public}@]: Bootstrapping family : refresh from server: %d
[%{public}@]: Family circle request resulted in error: [%{public}@] isBackground: %d
[%{public}@]: Set family accounts to: [%{public}@]
[%{public}@]: Cleared family
ActivityManager: Skipping register of non-enabled activity: %{public}@
ActivityManager: Activity registered: %{public}@ with deadline: %{public}@ for reason: %{public}@
ActivityManager: Activity check-in: %{public}@ with no deadline for reason: %{public}@
ActivityManager: Activity check-in: %{public}@ with deadline: %{public}@ for reason: %{public}@
ActivityManager: Activity exceeded its deadline, forcing run now: %{public}@
ActivityManager: Activity fired within deadline (%@), running now: %{public}@
[%{public}@]: Reset with reason: %{public}@
[%{public}@]: Skipping reset due to activity not enabled activity
[%{public}@]: Skipping register of non-enabled
[%{public}@]: Using refresh override interval: %lld
[%{public}@]: Failed to find bag value due to error: %{public}@. Will default to interval: %lld
Skipping unknown activity: %{public}@
[%{public}@]: Completed activity with error: %{public}@
[%{public}@]: Completed activity with result: %d
[%{public}@]: Handling activity wakeup
[%{public}@]: Skipping non-enabled activity
ActivityManager: Migrating from build: %{public}@ to build: %{public}@
ActivityManager: Setting up activities with build: %{public}@
Failed to mark all downloads done error: %{public}@
Metadata lookup encountered error: %{public}@
Content restore keybag resulted in error: %{public}@
Successfully completed content restore call with %ld appinstall(s)
KBSync unavailable for account: %{public}@ error: %{public}@
[%{public}@] item: %{public}@ due to lack of required metadata
[%{public}@] ContentRestore lookup: %{public}@
[%@]: Response data 0 length
[%@]: Error decoding response
[%@]: Error parsing item: %@
Dropping anonymous pings - DNU submission disabled
Successfully sent ping to: %{public}@
Ping failed to: %{public}@ error: %{public}@
[%{public}@] Created purchase info %{public}@ (%{public}p)
[%{public}@] Starting purchase for redownload
[%{public}@] Redownload request failed with error: %{public}@
[%{public}@] Redownload purchase failed with error: %{public}@
[%{public}@] Created external ID %{public}@
[%{public}@] Active installation already exists: %{public}@
[%{public}@] Copying external IDs %{public}@
Error checking for previously installed app for internal install %{public}@ %{public}@: %{public}@
Internal install requested for %{public}@ %{public}@ but it is already installed.
Timed out checking for %{public}@ %{public}@ on an internal install
No way to check for an existing app, continuing
Error generating keybag for account: %{public}@
[%{public}@] Running HEAD operation to get size for URL: %{public}@ task: %{public}@
[%{public}@] Unexpected data received for URL: %{public}@
[%{public}@] Invalid size: %lld for URL: %{public}@
[%{public}@] Found size: %lld for URL: %{public}@
[%{public}@] Invalid status: %ld for URL: %{public}@
[%{public}@] Failed to find size for URL: %{public}@ error: %{public}@
Failed find matching device for: %{public}@
Failed to get destination identifier for: %{public}@
Unsupported device: %{public}@
 uuid=%{public, signpost.description:attribute}@  request=%{public, signpost.description:attribute}@ 
RequestStart
[%{public}@] Request cancelled
[%{public}@] %lld/%lld
ConsumerError
[%{public}@] Data consumer for task: %{public}@ failed with error: %{public}@
ConsumerComplete
ReceiveResponse
[%{public}@] Received response: %{public}@
ConsumerReset
[%{public}@] Resetting data consumer for task: %{public}@ after receiving status code: %ld
[%{public}@] Data consumer for task: %{public}@ failed to reset with error: %{public}@
RequestExpired
[%{public}@] Canceling task: %{public}@ after receiving status code: %ld
RequestTimeout
[%{public}@] Restarting task: %{public}@ after receiving status code: %ld
RequestRange
[%{public}@] Truncate and restart task: %{public}@ after receiving status code: %ld
 uuid=%{public, signpost.description:attribute}@  status=%{public, signpost.description:attribute}ld 
RequestStatus
[%{public}@] Canceling task: %{public}@ after receiving invalid status code: %ld
[%{public}@] Canceling task: %{public}@ after cache request failed with error: %{public}@
CacheFail
[%{public}@] Retry scheduled for task: %{public}@ error: %{public}@
WillRetry
Untracked task: %{public}@ completed with error: %{public}@
[%{public}@] Encountered failure while using local cache, restarting using original request: %{public}@
[%{public}@] Failed to finish data consumer with error: %{public}@
[%{public}@] Failed to suspend data consumer with error: %{public}@
Untracked task: %{public}@ did finish collecting metrics
[%{public}@] Collected metrics for task: %{public}@ metrics: %{public}@
[%{public}@] Using client certificate for authentication challenge
[%{public}@] Using server trust for authentication challenge
[%{public}@] Prompting for authentication is not permitted
[%{public}@] Prompting user for authentication challenge
[%{public}@] Canceling user authentication challenge
[%{public}@] Completed user authentication challenge
TaskWaiting
[%{public}@] Task: %{public}@ is waiting for connection with error: %{public}@
TaskConnecting
[%{public}@] Task: %{public}@ will send request
RequestEnd
[%{public}@] Request completed but promise had already finished
RecordMetrics
[%{public}@] Recording LoadURL Metrics
Retry
[%{public}@] Retrying request
[%{public}@] Failed to reset data consumer with error: %{public}@
[%{public}@] Stopping early because request has been canceled
[%{public}@] Data consumer is missing
[%{public}@] Preparing data consumer failed with error: %{public}@
SessionError
[%{public}@] Error creating session for URL: %{public}@
TaskError
[%{public}@] Error creating task for URL: %{public}@
TaskCreated
[%{public}@] Created task: %{public}@ in session: %{public}@ for URL: %{public}@ 
[%{public}@] Task priority was unspecified, defaulting to non-user initiated!
[%{public}@] QOS class was unspecified, defaulting to utility!
TaskStarted
[%{public}@] Started task: %{public}@
[%{public}@]: Evaluating download, size = %llu automatic = %d
[%{public}@]: Implicitly denied - cellular prompt required
Registering event handlers
Received distributed event with invalid name
Posting notification: %@ userInfo: %@
Posting notification: %@
Received distributed event with invalid type
Registered handler for distributed events
Received notification event with invalid name
Received notification event with invalid type
Registered handler for notification events
[%@]: There is no current connection - tokens can only be created at the point an XPC call enters
[%@]: There is no connection context - tokens can only be created from service client connections
[%@]: There is no service client - call was probably racing the teardown of the connection
Unable to determine intent for coordinator: %{public}@
[%{public}@]: Allowing access to cellular (result = %ld)
[%{public}@]: Denying access to cellular (result = %ld)
[%{public}@]: Allowing access to low data network (result = %ld)
[%{public}@]: Denying access to low data network (result = %ld)
[%{public}@] Package `%lld` has no location set
[%{public}@] Will download package using request: %{public}@
Refusing to bootstrap system app with missing bundle identifier
Attempting to bootstrap %lu system app(s)
Received item for unexpected system app: %{public}@
Bootstrap for %lu system app(s) failed with error: %{public}@
Validating active installations on daemon start
[%{public}@] Resetting phase `%{public}@` for rescheduling
[%{public}@] Restarting installation from phase `%{public}@`
 uuid=%{public, signpost.description:attribute}@  error=%{public, signpost.description:attribute}@ 
Install::InvalidPhase
[%{public}@] Unexpected phase `%{public}@` marking as failed
[%{public}@]: Skipping start, appears to already be running
Data promise began using promise but promiseID `%{public}@` or referenceID `%{public}@` was missing
 uuid=%{public, signpost.description:attribute}@ 
Install::DownloadStart
[%{public}@] Beginning downloading
Install::InstallStart
[%{public}@] Beginning installation
Install::FinishStart
[%{public}@] Beginning final
Install::PreambleQueue
[%{public}@] Queuing preflight operation
Install::Installing
[%{public}@] Waiting for installation to complete
Install::PreambleCancel
[%{public}@] Preflight canceled with coordinator: %{public}@
Install::PreambleContinue
[%{public}@] Preflight suceeded with coordinator: %{public}@
Install::PreambleFail
[%{public}@] Preflight failed with error: %{public}@
Install::PreambleFinish
[%{public}@}] Preflight finished and will proceed to installation
Install::DownloadCancel
[%{public}@] Download canceled
Install::DownloadFail
[%{public}@] Download failed with error: %{public}@
[%@]: Registered notification client: %{public}@
[%@]: Received connection from client: %{public}@
[%{public}@]: Download of size %llu exceeds cellular limit, but not prompting for automatic download.
[%{public}@]: Download of size %llu exceeds cellular limit, but not prompting for inexpensive network.
[%{public}@]: Download of size %llu exceeds cellular limit, asking how to proceed.
[%{public}@]: Error delivering dialog request: %{public}@
[%{public}@]: We were asked to download now.  Not requiring inexpensive data.
[%{public}@]: We were asked to download later.  Requiring inexpensive data.
[%{public}@]: Evaluation for download completed with result: %ld
DaemonRunLoop
ThermalPressureMonitor
AppUsageBaseManager
AuthenticationChallenge
PurchaseImportTask
DeviceStateMonitor
AppInstallEvent
AppUpdateMemoryEntity
AppMetadataEntityCrossfire
LibAppStoreDaemon
Extensions
XDCProgress
AppUpdatesDatabaseSession
SQLiteDatabaseSession
NSObject
LowDataEvaluatorTask
AppMetrics
AppEvent
NSCopying
AppUpdatesDatabaseTransaction
SQLiteDatabaseTransaction
EvaluatorDownload
AppReceipt
PurchaseOwner
CrossfireManager
WatchSettingsManager
PurchaseHistoryUpdateDAAPRequestEncoder
DAAPRequestDataProvider
XPCNotificationSource
RepairService
ASDRepairServiceProtocol
RestoreAppInstall
LoadStoreQueueTask
LoadRequestEncoder
Restrictions
AssetResult
XDCInstallRequest
AppInstallPreambleOperation
AppInstallPreambleResponse
XDCMessage
DigestVerifier
FamilyMember
AppUpdatesDatabaseStore
StoreSinf
AppInstallPredicates
AuthenticateRequest
AppDefaultsManager
AppUpdateEntity
RestoreBatchTask
RestoreBatchContext
DAAPURLRequest
NetworkMonitor
CoreTelephonyClientDelegate
CoreTelephonyClientDataDelegate
CSLSConnectionStatusObserver
DiagnosticService
ASDDiagnosticServiceProtocol
PurchaseHistoryItemsDAAPRequestEncoder
Environment
IAPInfoIAPEntity
XDCAppMetadata
UPPManifestDownloadTask
NSURLSessionTaskDelegate
NSURLSessionDelegate
XDCCancelInstallRequest
Identity
DaemonIdentity
UpdatesContext
CheckDownloadQueueTask
CheckDownloadQueueURLRequestEncoder
UPPManifestDialogRequest
SQLiteQueryResults
SQLiteBinding
AppMetadata
CoordinatorBuilder
XDCLaunchAppResponse
LibraryLazyResultsEnumerator
LibraryResultEnumerator
NSFastEnumeration
KeepAlive
StoreItemResponse
LogPushConnection
UpdatesResponse
PurchaseHistoryDatabaseTransaction
LogTransactions
MetricsContext
AppUsageDatabaseStore
AuthorizeTask
AuthorizeURLRequestEncoder
ASDInGameAnalyticsServiceProtocol
InGameAnalyticsListener
NSXPCListenerDelegate
PurchaseManager
AMSPurchaseResponseProtocol
PushMessageConsumer
PurchaseManagerInterface
UpdatesBatchTask
AppUsageDatabaseTransaction
PromptForAccountTask
XDCDeviceManager
PurchaseService
ASDPurchaseServiceProtocol
UpdatableApp
GameSessionEntity
DataPromiseSpecification
PurchaseHistoryHideShowRequestContextItem
PurchaseHistoryHideShowRequestContext
InstallCoordinationUninstaller
LibraryUninstall
PurchaseHistoryAppEntity
ChunkedDigest
URLBagMemoizedValue
DecryptDataConsumer
AssetDataConsumer
PurchaseTask
PushDiagnostic
TypeCheckedDictionaryReader
LibraryQueryPlanner
NSPredicateVisitor
PerformUpdatesTask
AppInstallInfo
TypeCheckedObjectReader
AppClusterMappingEntity
PurchaseHistoryManager
CoordinatorPromiseDataConsumer
XDCRegisterAppMessage
XDCInstallResponse
InGameAnalyticsManager
Purchase
RepairApplicationTask
InstallationService
ASDInstallationServiceProtocol
AppInstallsDatabaseSchema
XDCPingMessage
VariantDescriptor
_UniversalVariantDescriptor
PurchaseHistoryHideShowRequestEncoder
AppInstallsDatabaseStore
AppEventEntityCrossfire
AssetRequest
AppDoneEntity
LocalPurchaseTask
AuthenticationChallengeDialogRequest
DeviceSecurityActivity
Activity
PurchaseHistoryItemsDAAPResponseMetadataParser
UpdatesTask
AppPackage
TypeCheckedAbstractReader
TypeCheckedReader
DataConsumerDefinition
MutableDataConsumerDefinition
AssetTaskInfo
PurchaseHistoryHideShowRequest
AppInstallInstallOperation
AppInstallInstallResponse
InstallAppReviewAppsTask
FamilyInfoLookupResult
LowDataModePromptDialogRequest
BlockTask
LaunchServicesProgress
LSApplicationWorkspaceObserverProtocol
LibraryProgress
PurchaseHistoryItemsRequestContext
ApplicationProxy
NSSecureCoding
NSCoding
PushConnection
APSConnectionDelegate
UPPManifest
AppInstallObserver
IXAppInstallObserverDelegate
IXAppInstallCoordinatorObserver
AppInstallsDatabaseTransaction
AppUsageMetricsEvent
FamilyInfoLookupTask
LowDataNetworkEvaluator
ActiveAccountObserver
PushMessage
AccountEventEntity
AppSchedulerDatabaseTransaction
PushService
PushConnectionDelegate
PurchaseHistoryItemsRequest
OSVersion
PurchaseHistoryDatabaseStore
StoreAsset
Deprecated
PurchaseInfo
PurchaseHistoryService
ASDPurchaseHistoryServiceProtocol
UPPManifestItem
LibraryErrorResultEnumerator
AssetPromise
RunLoop
SQLiteDatabase
SQLiteConnectionDelegate
AppInstallRemote
XDCMessageHandler
StoreItemSubGenre
AssetRequestProperties
NSMutableCopying
InGameAnalyticsDatabaseStore
AppUsageInstallHistoryMap
SQLiteQuery
SQLiteQueryDescriptor
SQLiteQueryAdditions
AppMetadataEntity
Storage
InstallTestFlightAppsTask
ProgressCache
PowerMonitor
ReviewNetworkPolicyTask
AppInstallScheduler
AppInstallEntity
AppEventEntity
AppInstallsDatabaseChangeset
SQLiteMemoryEntity
SQLiteTypeChecking
AppInstall
InstallSystemAppsTask
TypeCheckedArrayReader
SystemAppLookupTask
InGameAnalyticsDatabaseSession
InstallEnterpriseAppsTask
XDCLaunchAppRequest
AppInstallPostambleOperation
SQLiteDatabaseStoreDescriptor
LibraryExpressionClassifier
SQLiteCursor
PredicateValidator
NetworkEvaluator
UPPManifestAsset
PurchaseBatch
SQLiteDatabaseStore
AssetSessionConfiguration
SQLiteConnectionOptions
StoreItemContext
HashDigest
SQLiteStatement
PurchaseHistoryDatabaseSession
InGameAnalyticsService
XDCProgressMessage
GameSession
SQLitePredicate
SQLitePropertyPredicate
SQLiteComparisonPredicate
SQLiteContainsPredicate
SQLiteNullPredicate
SQLiteCompoundPredicate
SQLitePreparedStatement
ZipDataStreamAdapter
UpdatesService
ASDUpdatesServiceProtocol
StoreItem
PurchaseHistoryUpdateDAAPResponseDecoder
DKDAAPParserDelegate
SQLiteConnection
SQLiteEntity
SQLiteSchemaMigration
PurchaseHistoryUpdateRequestContext
SQLiteKeychainHelper
StoreKitClient
InGameAnalyticsDatabaseTransaction
SQLiteDatabaseStoreMigrator
SQLiteSchema
KeybagRequestTask
XDCCancelInstallResponse
AppInstallsDatabaseSession
TaskQueue
BaseListener
XDCService
IDSServiceDelegate
PurchaseHistoryUpdateRequest
AppInstallPolicy
AppUsageDatabaseSession
AssetResponse
ASDExtensions
AppPackageEntity
CrossfireService
ASDCrossfireServiceProtocol
SQLiteDatabaseStoreSchema
TransactionStore
AsyncTask
IXCoordinatorWithAppAssetPromise
CoordinatorPromiseProvider
AppClusterMapping
ClusterKey
DataMigrationObserver
AppInstallLogKey
UpdatesManager
UpdatesControllerInterface
LaunchServicesCatalog
LibraryCatalog
LibraryOpen
LibraryQueryEvaluator
CellularDataPromptDialogRequest
AppInstallRemoteEntity
LibraryService
LibraryCatalogObserver
ASDAppLibraryServiceProtocol
URLResponseDecoder
AMSResponseDecoding
URLRequestProperties
TypeCheckedStringReader
URLRequest
FamilyManager
ActivityManager
URLSessionManager
AppDownloadDoneTask
ContentRestoreTask
ContentRestoreURLRequestEncoder
URLBag
AMSBagProtocol
AppUsageBagContract
AutoUpdateBagContract
BuildToolsBagContract
DRMRecovery
CrossfireBagContract
OnDemandResourcesBagContract
OwnsCheckBagContract
PlatformConextBagContract
PersonalizationBagContract
IAPInfoBagContract
PurchaseHistoryBagContract
SubscriptionEntitlementsBagContract
UpdatesBagContract
StoreKitBagContract
StoreQueueBagContract
PushNotificationBagcontract
SystemAppsBagContract
TestFlightFeedbackBagContract
WelcomeToAppStoreNotificationBagContract
AppStoreFoundation
PurchaseHistoryItemsDAAPPartialResponse
PurchaseHistoryItemsDAAPResponseDecoder
AnonymousPingTask
InstallWatchAppsTask
URLRequestEncoder
AMSRequestEncoding
DetermineSizeForURLTask
NSURLSessionDataDelegate
XDCDevice
AssetSession
NSURLSessionDataDelegatePrivate
NSURLSessionTaskDelegatePrivate
XPCServiceEntitlements
CellularNetworkEvaluator
XPCServiceBroker
XPCEventRelay
Task
XPCRequestToken
_XPCInternalRequestToken
IXCoordinatorWithDeviceSecurityPromise
IXCoordinatorWithInitialODRAssetPromises
IXCoordinatorWithPlaceholderPromise
IXCoordinatorWithInstallOptions
IXCoordinatorWithUserDataPromise
IXCoordinatorWithImportance
AppInstallDownloadOperation
AppInstallDownloadResponse
SystemAppBootstrapTask
AppInstallQueue
CoordinatorPromiseDataConsumerDelegate
AppInstallPipeline
XPCNotificationCenter
XPCServiceClient
ASDServiceProtocol
XPCNotificationClient
SystemAppLookupItem
CellularNetworkEvaluatorTask
AccountEvent
AssetSessionCache
XPCServiceCatalog
B16@0:8
v16@0:8
@"SQLiteDatabase"
@"XPCServiceBroker"
@40@0:8@16C24C28@32
@36@0:8@16C24@28
@36@0:8C16@20#28
@44@0:8C16@20#28@36
@32@0:8@16#24
@40@0:8@16q24^@32
@"NSURLAuthenticationChallenge"
@40@0:8@16@24@32
v24@0:8@16
B40@0:8@16@24^@32
@"NSString"
@"PurchaseBatch"
@"PurchaseInfo"
@"NSArray"
@16@0:8
@"NSObject<OS_dispatch_queue>"
v20@0:8B16
v24@0:8q16
q24@0:8@16
q16@0:8
@"NSDate"
@28@0:8^v16i24
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}24@0:8r*16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
@24@0:8@"SQLiteConnection"16
@"SQLiteConnection"16@0:8
@"SQLiteConnection"
d16@0:8
@"AMSMetrics"
q20@0:8C16
@24@0:8^{_NSZone=}16
v32@0:8@16@24
C16@0:8
@"NSMutableArray"
v32@0:8q16@24
B24@0:8d16
B56@0:8@16q24^q32^B40^@48
@40@0:8@16@24q32
B32@0:8q16@24
B52@0:8q16@24@32@40B48
B40@0:8@16@24q32
B48@0:8@16@24q32^@40
v32@0:8@16@?24
v24@0:8@?16
@32@0:8@16@24
v28@0:8@16C24
@28@0:8C16@20
v40@0:8@16@24@32
@24@0:8q16
B32@0:8@16@24
@36@0:8C16@20@28
v40@0:8@16C24C28@32
v28@0:8@16B24
v36@0:8B16@20@?28
v36@0:8@16@24B32
@"AMSBag"
@"NPSDomainAccessor"
@"NPSManager"
@24@0:8^@16
@"NSData"24@0:8^@16
@"NSNumber"
@48@0:8@16{_ASDServiceEntitlement=@@}24@?40
v32@0:8@"ASDRepairOptions"16@?<v@?B@"NSArray"@"NSError">24
@40@0:8@16@24^@32
@"ACAccount"
@"AMSURLRequestEncoder"
@"NSMutableOrderedSet"
v24@0:8Q16
@"<AssetDataConsumer>"
@"NSError"
@24@0:8Q16
B24@0:8^@16
@"AppInstall"
@"AppInstallInfo"
@"AppPackage"
@"AppInstallPreambleResponse"
@40@0:8q16@24@32
@32@0:8q16@24
@48@0:8q16q24@32@40
@"IXAppInstallCoordinator"
@"XDCDevice"
@"HashDigest"
@"NSDictionary"
@48@0:8q16@24@32^@40
@24@0:8^{__CFString=}16
v32@0:8@16^{__CFString=}24
B36@0:8^{__CFString=}16^{__CFString=}24B32
@32@0:8^{__CFString=}16^{__CFString=}24
@"<DAAPRequestDataProvider>"
@"NSURL"
@"AMSProcessInfo"
v36@0:8@16i24@28
v32@0:8@16i24i28
v20@0:8i16
v36@0:8@"CTXPCServiceSubscriptionContext"16i24@"CTDataConnectionStatus"28
v32@0:8@"CTXPCServiceSubscriptionContext"16i24i28
v24@0:8@"CTXPCServiceSubscriptionContext"16
v24@0:8@"CTServiceDescriptor"16
v32@0:8@"CTXPCServiceSubscriptionContext"16@"NSArray"24
v32@0:8@"CTXPCServiceSubscriptionContext"16@"CTDataStatus"24
v24@0:8@"CTDataSettings"16
v24@0:8@"CTDataConnectionStatus"16
v24@0:8@"CTDataStatus"16
v24@0:8@"NSString"16
v48@0:8@16@24@32^v40
@"NWPathEvaluator"
@"CTXPCServiceSubscriptionContext"
@"CoreTelephonyClient"
@"CSLSConnectionStatusService"
v32@0:8q16@?24
v24@0:8@?<v@?@"NSArray">16
v24@0:8@?<v@?>16
v32@0:8q16@?<v@?@"NSDictionary">24
v32@0:8q16@?<v@?>24
@28@0:8@16I24
v32@0:8^v16Q24
i16@0:8
@"NSData"
{?="downloaderID"b1"externalVersionID"b1"itemID"b1"purchaserID"b1"type"b1"containsMessagesExtension"b1"isBeta"b1"isStoreApp"b1"isSystemApp"b1"launchProhibited"b1"skipIfInstalled"b1"suppressDialogs"b1}
@32@0:8@16^@24
@48@0:8@16@24@32^@40
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
@36@0:8@16@24B32
@"NSOrderedSet"
@"NSURLSession"
@"XPCRequestToken"
@"NSString"24@0:8@"NSString"16
@40@0:8@16@24Q32
v28@0:8d16i24
v24@0:8f16i20
v24@0:8i16i20
v28@0:8q16i24
v28@0:8@16i24
v28@0:8@"NSNumber"16i24
v28@0:8@"NSData"16i24
v28@0:8@"NSString"16i24
v28@0:8@"NSDate"16i24
v28@0:8@"NSUUID"16i24
v28@0:8@"NSURL"16i24
v28@0:8@"NSArray"16i24
v28@0:8@"NSDictionary"16i24
@"SQLiteStatement"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@32@0:8q16@?24
@"<NSFastEnumeration>"
B36@0:8B16q20^@28
@"AppUsageInstallHistoryMap"
@"KeepAlive"
B32@0:8@16^@24
@32@0:8Q16^@24
@32@0:8^B16^@24
v40@0:8q16@24@?32
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8q16@"NSString"24@?<v@?@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError">24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8@"AMSAuthenticateRequest"16@"AMSPurchase"24@"AMSPurchaseQueue"32@?<v@?@"AMSAuthenticateResult"@"NSError">40
v48@0:8@"AMSDialogRequest"16@"AMSPurchase"24@"AMSPurchaseQueue"32@?<v@?@"AMSDialogResult"@"NSError">40
v48@0:8@"AMSAuthenticateRequest"16@"AMSPurchaseContext"24@"AMSPurchaseQueue"32@?<v@?@"AMSAuthenticateResult"@"NSError">40
v48@0:8@"AMSDialogRequest"16@"AMSPurchaseContext"24@"AMSPurchaseQueue"32@?<v@?@"AMSDialogResult"@"NSError">40
v32@0:8@"PushService"16@"PushMessage"24
v44@0:8@16q24B32@?36
v44@0:8@16B24q28@?36
v40@0:8@"NSArray"16@"XPCRequestToken"24@?<v@?@"ASDPurchaseResponse"@"NSError">32
v44@0:8@"NSNumber"16q24B32@?<v@?B@"NSError">36
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v40@0:8@"ASDPurchase"16@"XPCRequestToken"24@?<v@?@"ASDPurchaseResult"@"NSError">32
@"TaskQueue"
@"AMSPurchaseQueue"
@28@0:8@16B24
@40@0:8@16#24^@32
@"AMSAuthenticateResult"
@"NSMutableDictionary"
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v32@0:8@"ASDPurchase"16@?<v@?@"ASDPurchaseResponse"@"NSError">24
v32@0:8@"ASDPurchase"16@?<v@?@"ASDPurchaseResult"@"NSError">24
@"<AdoptionManagerInterface>"
@"<PurchaseManagerInterface>"
@"NSNumber"16@0:8
@"ASDPurchaseHistoryApp"
@"AMSBagValue"
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?Q@"NSError">16
@"DigestVerifier"
@"ChunkedDigest"
@32@0:8#16@24
q32@0:8@16q24
v24@0:8@"NSPredicate"16
v24@0:8@"NSExpression"16
v24@0:8@"NSPredicateOperator"16
@"LibraryExpressionClassifier"
q44@0:8@16B24@28^@36
@"UpdatesContext"
@"AssetPromise"
@"AppInstallLogKey"
@"NSOperation"
@48@0:8q16@24Q32^@40
@40@0:8q16@24^@32
v48@0:8q16Q24@32@?40
@"PurchaseHistoryDatabaseStore"
@"IXDataPromise"
@"<CoordinatorPromiseDataConsumerDelegate>"
@"CoordinatorPromiseProvider"
@"DataPromiseSpecification"
{?="error"b1}
v48@0:8@16q24@32@?40
@"GameSession"
@"NSObject<OS_dispatch_source>"
@?16@0:8
@"ASDRepairOptions"
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSArray"16@"NSUUID"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@16@?24@32
v48@0:8@16@24@?32@40
@"AppInstallsDatabaseStore"
@32@0:8@16q24
B32@0:8@16q24
@32@0:8{?=QQ}16
@40@0:8@16Q24d32
r*16@0:8
@"NSObject<OS_xpc_object>"16@0:8
@24@0:8@?16
@"UpdatesResponse"
@"NSURLSessionTaskMetrics"
@"AssetRequestProperties"
@"NSURLRequest"
@"NSURLSessionTask"
@"<PurchaseHistoryBagContract>"
@"PurchaseHistoryHideShowRequestContext"
@"AppInstallInstallResponse"
@40@0:8q16q24@32
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
v40@0:8@"ASDApp"16@"NSUUID"24@?<v@?@"NSError">32
v32@0:8@"ASDApp"16@?<v@?@"NSError">24
@"ProgressCache"
@64@0:8@16@24q32@40@48Q56
v32@0:8Q16@?24
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSValue"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
@"APSConnection"
@"<PushConnectionDelegate>"
v32@0:8@16Q24
v40@0:8@16@24Q32
v24@0:8@"IXAppInstallCoordinator"16
v32@0:8@"IXAppInstallCoordinator"16Q24
v40@0:8@"IXAppInstallCoordinator"16@"NSError"24Q32
v32@0:8@"IXAppInstallCoordinator"16@"NSError"24
B28@0:8@16B24
v40@0:8q16@24@32
@"IXAppInstallObserver"
@"AppInstallScheduler"
@"NSMutableSet"
v32@0:8q16q24
{?=qq}32@0:8@16^@24
v40@0:8q16q24q32
@"AppInstallsDatabaseChangeset"
v20@0:8C16
@20@0:8C16
@"<AMSBagProtocol>"
@"AMSNetworkConstraints"
@"APSIncomingMessage"
@32@0:8Q16q24
@32@0:8Q16@?24
v32@0:8@"PushConnection"16@"PushMessage"24
@"PushConnection"
@"NSMapTable"
@"AMSPushHandler"
@"PushDiagnostic"
@"PurchaseHistoryItemsRequestContext"
@40@0:8{_OSVersion=qqq}16
{_OSVersion="major"q"minor"q"patch"q}
@40@0:8@16q24@32
@"VariantDescriptor"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v36@0:8B16q20@?28
v40@0:8q16Q24@?32
v32@0:8@"ASDPurchaseHistoryQuery"16@?<v@?@"NSArray"@"NSError">24
v36@0:8B16q20@?<v@?@"NSError">28
v40@0:8q16Q24@?<v@?@"NSError">32
v32@0:8Q16@?<v@?@"NSError">24
@32@0:8@16@?24
@"NSUUID"
B24@0:8@"SQLiteConnection"16
v40@0:8@16#24@?32
v32@0:8#16@?24
@"NSHashTable"
:16@0:8
v24@0:8:16
I16@0:8
v20@0:8I16
@"SQLiteQueryDescriptor"
v24@0:8#16
@"SQLitePredicate"
@48@0:8@16@24@32@40
@40@0:8Q16Q24@32
v40@0:8d16@24@32
@"XPCNotificationCenter"
v32@0:8@16q24
v40@0:8^@16r^@24q32
@"NSPredicate"
@36@0:8@16B24@28
v40@0:8Q16Q24@?32
@"SQLiteMemoryEntity"
@"<LibraryQueryEvaluator>"
@20@0:8i16
d20@0:8i16
d24@0:8@16
i20@0:8i16
i24@0:8@16
q20@0:8i16
C20@0:8i16
^{sqlite3_stmt=}
v32@0:8^Q16Q24
[32B]
i24@0:8^{sqlite3=}16
@28@0:8*16I24
@32@0:8^{sqlite3_stmt=}16@24
^{sqlite3_stmt=}16@0:8
^{__CFBundle=}24@0:8@16
^{__CFDictionary=}24@0:8@16
v32@0:8@16N^i24
@24@0:8#16
@"SQLiteQuery"
@32@0:8r^v16@24
r^v16@0:8
@"<SZExtractor>"
v36@0:8@16B24@?28
v28@0:8B16@?20
v24@0:8@?<v@?B>16
v36@0:8@"NSArray"16B24@?<v@?@"NSError">28
v24@0:8@?<v@?q@"NSError">16
v24@0:8@?<v@?@"NSArray"@"NSError">16
v28@0:8B16@?<v@?>20
v32@0:8@"NSArray"16@?<v@?B@"NSArray"@"NSError">24
@"<UpdatesControllerInterface>"
v40@0:8@16q24@32
@"StoreAsset"
B28@0:8@16I24
v32@0:8@16I24I28
v40@0:8@16I24*28I36
v28@0:8@16I24
v24@0:8@"DKDAAPParser"16
v32@0:8@"DKDAAPParser"16q24
v32@0:8@"DKDAAPParser"16@"NSError"24
B28@0:8@"DKDAAPParser"16I24
v32@0:8@"DKDAAPParser"16I24I28
v40@0:8@"DKDAAPParser"16I24*28I36
v28@0:8@"DKDAAPParser"16I24
B40@0:8@16^@24@?32
B24@0:8@?16
B32@0:8^@16@?24
^{sqlite3=}
@"<SQLiteConnectionDelegate>"
@"SQLiteConnectionOptions"
B48@0:8@16@24q32@40
@24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSArray"16
B32@0:8@16@"NSString"24
B24@0:8@"NSDictionary"16
v32@0:8@16@"NSString"24
@"NSSet"16@0:8
@56@0:8@16q24@32@40Q48
@"ApplicationProxy"
{?="errorCode"b1}
@"<AppInstallPipeline>"
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v40@0:8@16:24q32
v44@0:8@16@24B32@?36
@"IDSService"
@"<XDCServiceDelegate>"
@"PurchaseHistoryUpdateRequestContext"
#24@0:8Q16
Q24@0:8#16
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"ASDAppEvent"16@?<v@?B@"NSError">24
B32@0:8q16@?24
@24@0:8d16
B32@0:8Q16^@24
Q24@0:8^@16
B32@0:8^B16^@24
B32@0:8@"IXOwnedDataPromise"16^@24
@"IXOwnedDataPromise"24@0:8^@16
@"<IXCoordinatorWithAppAssetPromise>"
@"NSConditionLock"
v40@0:8@"NSPredicate"16@"NSSet"24@?<v@?@"NSArray"@"NSError">32
@"<LibraryCatalogObserver>"16@0:8
v24@0:8@"<LibraryCatalogObserver>"16
v40@0:8@16q24@?32
v40@0:8@"ASDApp"16q24@?<v@?q>32
v40@0:8@"ASDApp"16@"NSUUID"24@?<v@?q>32
v32@0:8@"ASDApp"16@?<v@?q>24
@"<LibraryResultEnumerator>"32@0:8@"NSPredicate"16^@24
@"<LibraryResultEnumerator>"32@0:8@"NSArray"16^@24
v40@0:8Q16@24@?32
@"<LibraryCatalogObserver>"
@"LibraryQueryPlanner"
@32@0:8Q16B24B28
@40@0:8@16Q24B32B36
@28@0:8Q16B24
v32@0:8@"NSPredicate"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSPredicate"16@"NSUUID"24@?<v@?@"NSArray"@"NSError">32
@"<LibraryOpen>"
@"<LibraryProgress>"
@"<LibraryUninstall>"
@"NSCountedSet"
@"AMSURLResult"32@0:8@"AMSURLResult"16^@24
@"URLBag"
@"URLRequestProperties"
B36@0:8B16^@20^@28
@20@0:8B16
B28@0:8B16^@20
@28@0:8B16^@20
@"NSLock"
B24@0:8q16
v48@0:8q16@24@32@40
v36@0:8q16@24B32
@60@0:8q16@24@32q40B48@52
@"AMSBagValue"24@0:8@"NSString"16
v24@0:8@?<v@?@"AMSSnapshotBag"@"NSError">16
@"NSDate"16@0:8
@"AMSBagValue"16@0:8
@"URLBagMemoizedValue"16@0:8
@"AMSPromise"32@0:8@"NSURLRequest"16@24
@"NSMutableURLRequest"40@0:8@"NSURLRequest"16@24^@32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@"NSObject<OS_dispatch_semaphore>"
@"NRDevice"
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
v32@0:8@"NSURLSession"16@"NSURLSessionDataTask"24
v40@0:8@16@24q32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24q32
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
@28@0:8^{__SecTask=}16i24
B36@0:8@16^{__SecTask=}24i32
@52@0:8{?=[8I]}16i48
B32@0:8{_ASDServiceEntitlement=@@}16
^{__SecTask=}
@"ASDCellularSettings"
@"NSXPCListener"
@"<XPCNotificationClient>"
B32@0:8@"IXPromisedOutOfBandTransfer"16^@24
@"IXPromisedOutOfBandTransfer"24@0:8^@16
B32@0:8@"NSArray"16^@24
@"NSArray"24@0:8^@16
B32@0:8@"IXPlaceholder"16^@24
@"IXPlaceholder"24@0:8^@16
B32@0:8@"MIInstallOptions"16^@24
@24@0:8^B16
@"NSError"24@0:8^B16
@52@0:8@16Q24Q32B40^@44
@52@0:8@16Q24B32^B36^@44
@"AppInstallDownloadResponse"
@56@0:8q16q24@32@40@48
@"AssetRequest"
@"CoordinatorPromiseDataConsumer"
v40@0:8@"CoordinatorPromiseDataConsumer"16@"NSUUID"24@"NSNumber"32
v32@0:8@"NSOrderedSet"16@"AppInstallsDatabaseTransaction"24
v40@0:8@"NSOrderedSet"16q24@"AppInstallsDatabaseTransaction"32
@"AssetSession"
@"NSOperationQueue"
v24@0:8@?<v@?@"<ASDCrossfireServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDDiagnosticServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDIAPHistoryServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDInstallationServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDAppLibraryServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDOcelotServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDPersonalizationServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDPrivilegedTaskServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDPurchaseHistoryServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDPurchaseServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDRepairServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDTestFlightFeedbackServiceProtocol>"@"NSError">16
v24@0:8@?<v@?@"<ASDUpdatesServiceProtocol>"@"NSError">16
v32@0:8@"AMSAuthenticateRequest"16@?<v@?@"AMSAuthenticateResult"@"NSError">24
v32@0:8@"AMSDialogRequest"16@?<v@?@"AMSDialogResult"@"NSError">24
v32@0:8@"NSArray"16@?<v@?>24
v48@0:8@?16{_ASDServiceEntitlement=@@}24@?40
@"XPCServiceCatalog"
@"NSXPCConnection"
@"XPCServiceEntitlements"
@24@0:8*16
@"EvaluatorDownload"
@"ASDCellularIdentity"
{_ASDServiceEntitlement=@@}16@0:8
v32@0:8{_ASDServiceEntitlement=@@}16
{_ASDServiceEntitlement="name"@"NSString""legacyName"@"NSString"}
MbP?
Available
Installed
User Notified
Purchasing
Purchased
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>18A391011</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>App Store Daemon</string>
<key>CFBundleExecutable</key>
<string>appstored</string>
<key>CFBundleIdentifier</key>
<string>com.apple.appstored</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>appstored</string>
<key>CFBundlePackageType</key>
<string>BNDL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string></string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>6.0</string>
<key>DTSDKBuild</key>
<string>17R520z</string>
<key>DTSDKName</key>
<string>watchsimulator6.0.internal</string>
<key>DTXcode</key>
<string>1100</string>
<key>DTXcodeBuild</key>
<string>11M335w</string>
<key>MinimumOSVersion</key>
<string>6.0</string>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>application-identifier</key>
<string>com.apple.appstored</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>data-allowed-write</string>
<string>spi</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.appconduitd.allowedSPI</key>
<array>
<string>DeletableSystemAppInstallability</string>
</array>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coretelephony.Identity.get</key>
<true/>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>com.apple.networkd.set_source_application</key>
<true/>
<key>com.apple.payment.card-on-file</key>
<true/>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>SerialNumber</string>
<string>UniqueDeviceID</string>
<string>UniqueDeviceIDData</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.adid</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.SystemApp</string>
</array>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession-allow-override-connection-pool</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.set-max-watch-cell-transfer-size</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.rootless.storage.coreduet_knowledge_store</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.askpermissiond</string>
<string>com.apple.carousel.connectionstatusservice</string>
<string>com.apple.passd.in-app-payment</string>
<string>com.apple.CoreAuthentication.daemon</string>
<string>com.apple.amsaccountsd.security</string>
<string>com.apple.appconduitd.application-manager</string>
<string>com.apple.xpc.amsaccountsd</string>
</array>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>appstored</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
