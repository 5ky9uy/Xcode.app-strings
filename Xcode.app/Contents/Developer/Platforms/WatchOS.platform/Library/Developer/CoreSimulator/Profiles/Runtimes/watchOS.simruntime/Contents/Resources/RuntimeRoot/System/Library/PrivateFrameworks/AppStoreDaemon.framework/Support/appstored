<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>20A241123</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>App Store Daemon</string>
<key>CFBundleExecutable</key>
<string>appstored</string>
<key>CFBundleIdentifier</key>
<string>com.apple.appstored</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>appstored</string>
<key>CFBundlePackageType</key>
<string>BNDL</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>WatchSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>1</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>13A191</string>
<key>DTPlatformName</key>
<string>watchsimulator</string>
<key>DTPlatformVersion</key>
<string>8.3</string>
<key>DTSDKBuild</key>
<string>19S5026b</string>
<key>DTSDKName</key>
<string>watchsimulator8.3.internal</string>
<key>DTXcode</key>
<string>1300</string>
<key>DTXcodeBuild</key>
<string>13A191</string>
<key>MinimumOSVersion</key>
<string>8.3</string>
<key>UIDeviceFamily</key>
<array>
<integer>4</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>adi-client</key>
<string>409835401</string>
<key>application-identifier</key>
<string>com.apple.appstored</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>data-allowed-write</string>
<string>spi</string>
</array>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.appconduitd.allowedSPI</key>
<array>
<string>DeletableSystemAppInstallability</string>
<string>AppStoreInstallationFailed</string>
</array>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coretelephony.Identity.get</key>
<true/>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.lsapplicationproxy.deviceidentifierforvendor</key>
<true/>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.networkd.configure_connection_pool</key>
<true/>
<key>com.apple.networkd.set_source_application</key>
<true/>
<key>com.apple.payment.card-on-file</key>
<true/>
<key>com.apple.private.FairPlayIOKitUserClient.access</key>
<true/>
<key>com.apple.private.InstallCoordination.allowed</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>SerialNumber</string>
<string>UniqueDeviceID</string>
<string>UniqueDeviceIDData</string>
</array>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.adid</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.SystemApp</string>
</array>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.registration</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.remoteurlconnection</key>
<true/>
<key>com.apple.private.ids.self-session</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.ids.session</key>
<array>
<string>com.apple.private.alloy.appstore</string>
</array>
<key>com.apple.private.imcore.imremoteurlconnection</key>
<true/>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>UninstallForLaunchServices</string>
</array>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.nsurlsession-allow-override-connection-pool</key>
<true/>
<key>com.apple.private.nsurlsession.impersonate</key>
<true/>
<key>com.apple.private.nsurlsession.set-max-watch-cell-transfer-size</key>
<true/>
<key>com.apple.private.nsurlsession.set-task-priority</key>
<true/>
<key>com.apple.private.usernotifications.bundle-identifiers</key>
<array>
<string>com.apple.AppStore</string>
</array>
<key>com.apple.rootless.storage.coreduet_knowledge_store</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.apsd</string>
<string>com.apple.askpermissiond</string>
<string>com.apple.carousel.connectionstatusservice</string>
<string>com.apple.dmd.policy</string>
<string>com.apple.idsremoteurlconnectionagent.embedded.auth</string>
<string>com.apple.idsremoteurlconnectionagent.desktop.auth</string>
<string>com.apple.passd.in-app-payment</string>
<string>com.apple.CoreAuthentication.daemon</string>
<string>com.apple.amsaccountsd.security</string>
<string>com.apple.appconduitd.application-manager</string>
<string>com.apple.xpc.amsaccountsd</string>
<string>com.apple.xpc.amsuniversallinks</string>
<string>com.apple.nanoprefsync</string>
<string>com.apple.FileCoordination</string>
<string>com.apple.Carousel.authAlertXPCService</string>
<string>com.apple.iconservices</string>
<string>com.apple.fontservicesd</string>
</array>
<key>com.apple.security.exception.shared-preference.read-write</key>
<array>
<string>com.apple.facetime.bag</string>
<string>com.apple.imessage.bag</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>com.apple.telephony.cupolicy-monitor-access</key>
<true/>
<key>com.apple.telephony.cupolicy-rw-access</key>
<true/>
<key>fairplay-client</key>
<string>1445028844</string>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
</array>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>appstored</string>
</array>
</dict>
</plist>
%@: %@
v8@?0
HardwarePlatform
t8002
CapabilitiesMatch
MismatchedCapabilities
wi-fi
com.apple.appstored.OctaneBag.dispatch
http://localhost:%ld/WebObjects/MZInit.woa/wa/initiateSession
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
self isKindOfClass: %@
com.apple.appstored
asclient
v24@?0@"AMSUniversalLinksUpdateResult"8@"NSError"16
automationRunning
buildNumber
buildType
internal
seed
platformType
watchOS
environment
clientId
xp_amp_app_install
appInstall
metrics/metricsBase/environment
com.apple.appstored.MetricsCoordinator.dispatch
com.apple.appstored.ASDItunesAccountDidChangeNotification
com.apple.appstored.MetricsHandler.getEvents
com.apple.appstored.MetricsHandler.post
com.apple.appstored.MetricsHandler.recordDeleted
com.apple.appstored.MetricsHandler.record
com.apple.appstored.MetricsHandler.recordInstalls
v32@?0@"SQLiteMemoryEntity"8Q16^B24
v16@?0@"AppUsageDatabaseSession"8
Handler not found for type: %@
DSID
active
signout
CrossfireIntervalStartDate
AppUsageIntervalStartDate
ArcadeSummaryIntervalStartDate
ArcadePayoutIntervalStartDate
ODPIntervalStartDate
None
Crossfire
Summary
Payout
com.apple.appstored.MetricsHandler.reset
CrossfireLaunchesIntervalStartDate
AppUsageLaunchesIntervalStartDate
ArcadeSummaryLaunchesIntervalStartDate
ArcadePayoutLaunchesIntervalStartDate
ODPSupplementalIntervalStartDate
v24@?0@"ApplicationProxy"8^B16
B16@?0@"AppUsageDatabaseTransaction"8
_error
_itemID
_externalVersionID
_requestDate
application/x-dmap-tagged
application/x-www-form-urlencoded
Client-Cloud-Daap-Version
Client-Cloud-Purchase-DAAP-Version
UNKNOWN
%@/%@
%lli
X-FM-Dsid
v24@?0@"AMSURLResult"8@"NSError"16
com.apple.appstored.time
CDNUUID
bundleId
completionDate
queueDate
installCode
installKey
failureError
failureReason
storeItemId
storeVersionId
metrics/scorecardInstallSamplingPercentage
bundleID
storeItemID
storeVersionID
%@ %@ ?
 LIKE 
 NOT IN (
 IN (
%@ %@
IS NULL
IS NOT NULL
 AND 
 OR 
storekit_messages
dsid
bundle_id
status
subscriptions
appAdamId
inAppSubscriptions
introOfferConsumedFamilyIds
segment
AppStore
News
Activity
Music
iCloud
user.dsId
appstored
storeplatform-lookup-url
storeplatform-lookup-url-unpersonalized
signed-actions
adopt-product
adoption-eligibility
unadopt-product
enableMacOSCompatibleIOSApps
enableMacOSCompatibleIOSAppsForCarry
app-usage-flush-interval-seconds
arcade-in-spotlight-enabled
arcade-iap-family-id
authorizeMachine
available-software-updates-extended-reload-frequency-seconds
available-software-updates-extended-reload-frequency-seconds-cellular
p2-content-restore/max-item-count
p2-content-restore/url
invalid-build-tools/invalid-versions
invalid-build-tools/delta-incompatible-versions
drm-recovery
app-usage-analytics-post-interval-seconds
metrics/sampling/custom/xp_amp_usage_analytics/percentage
app-usage-analytics-include-launches
arcade-launch-timeout-interval-seconds
ocelot-device-id-days-valid
ocelot-post-interval-seconds
ocelot-post-payout-interval-seconds
ocelot-payout-qualifying-duration-seconds
default-switch-arcade-user
switch-arcade-user
onDemandResources
bundle-owns-check
app-usage-posts-per-day
app-usage-post-grace-period-seconds
app-usage-post-spread-period-seconds
app-usage-reset-actor-id-frequency-seconds
metrics/sampling/custom/xp_amp_app_usage_dnu/percentage
cluster-mappings-url
cluster-mappings-reload-frequency-secs
iap-daap/base-url
iap-daap/database-id
iap-daap/forced-refresh-frequency-minutes
iap-daap/update-polling-frequency-secs
manage-subs-app-delete-skip-list
purchase-daap/base-url
purchase-daap/database-id
purchase-daap/forced-refresh-frequency-minutes
purchase-daap/purchase-refresh-enabled
purchase-daap/update-polling-frequency-secs
subscription-keybag-refresh
sandbox-subscription-keybag-refresh
subscription-keybag-refresh-interval-in-seconds
fsEntitlementsSrv
fsEntitlementsTimeout
fsEntitlementsRefreshIntervalInSeconds
ds-appleid-lookup
currentStorefrontCountryCodeISO3A
countryCode
app-receipt-create
disable-purchase-intent-notifications
p2-in-app-pending-transactions
p2-in-app-check-download-queue
p2-in-app-transaction-done
install-attribution-low-fidelity-cap
install-attribution-max-campaign-id
install-attribution-max-impressions-age
install-attribution-max-lo-fi-params-age
install-attribution-max-cache-age
install-attribution-max-pingback-cache-age
install-attribution-max-ping-back-attempts
install-attribution-start-end-window
install-attribution-should-use-proxy
install-attribution-should-send-dev-pingback
install-attribution-postback-proxy-url
manageSubsSKV2Url
check-for-messages
p2-product-offers
p2-product-offers-batch-limit
commerceRefundRequestUrl
renew-vpp-receipt
p2-in-app-regrant-purchase-history
redeemCodeLanding
subscription-status-max-age
allInAppSubsStatus
in-app-history-max-age
in-app-history-max-count
inAppHistory
apps-media-api-host
sandbox-media-api-host
language-tag
storekit1-media-api-rollout-rate
allowed-custom-buy-params
automatic-downloads2/downloads-url
pendingApps
songDownloadDone
hideableSystemApps
hideableSystemAppsForWatch
testflight-visual-feedback/backoff-delays
testflight-visual-feedback/backoff-random-range
testflight-visual-feedback/get-image-upload-urls-url
testflight-visual-feedback/upload-feedback-url
testflight-extension/extension-enabled
testflight-extension/extension-push-enabled
testflight-extension/sync-interval-minutes
testflight-extension/sync-grace-period-minutes
available-software-updates
updateProductContentType
da-do-not-update-list
updates-use-optimized-requests
view-software-updates
v2-update-scheduling-enabled
available-software-updates-background-reload-frequency
available-software-updates-background-reload-frequency-cellular
watchRequestThrottle
watchSuppressDialogs
appPurgeBlacklist
appPurgePluginBlacklist
appPurgeGracePeriod
appPurgeVerifyAvailability
amd-domains
receipt-expiration-warning-threshold
family-info
metrics/scorecardInstallSamplingPercentageSeed
atv-headboard-url
p2-content-restore/gzip
metrics/metricsBase/storeFrontHeader
up-to-date-claim
lowDataPromptThreshold
push-notification-types/add-push-notification-type-url
push-notifications/environment
push-notifications/register-success
push-notification-types/remove-push-notification-type-url
welcome-to-app-store-notification-sample
welcome-to-app-store-notification-delay
welcome-to-app-store-notification-title
welcome-to-app-store-notification-message
welcome-to-app-store-notification-later
welcome-to-app-store-notification-remind-me
welcome-to-app-store-notification-dont-remind-me
welcome-to-app-store-notification-actionButton
welcome-to-app-store-notification-actionURL
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/authorizeMachine
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/switchArcadeUser
production
false
https://proxy-skadnetwork.apple.com:443
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/getSubscriptionStatus
https://sandbox.itunes.apple.com/WebObjects/MZFinance.woa/wa/getSubscriptionStatus
https://play.itunes.apple.com/WebObjects/MZPlay.woa/wa/fsEntitlementsSrv
https://tf-feedback.itunes.apple.com/ingest/api/v1/getImageUploadUrls
https://tf-feedback.itunes.apple.com/ingest/api/v1/uploadFeedback
resultComplexity
@"<NSFastEnumeration>"8@?0
Unknown validation error
Invalid key path '%@' in expression: %@
Invalid expression type '%lu' in expression: %@
InvalidReceiptPromptOKAction
InvalidReceiptPromptCancelAction
%lld
com.apple.AppStoreDaemon
RECEIPT_REVOKED_TITLE
RECEIPT_REVOKED_FALLBACK_TITLE
RECEIPT_REVOKED_MESSAGE
RECEIPT_REVOKED_FALLBACK_MESSAGE
itms-appss://?action=software
VIEW_IN_APP_STORE
CANCEL
StoreKit invalid receipt
itms-apps:///app/%@
Could not construct product page URL from the adam ID
v24@?0@"AMSDialogResult"8@"NSError"16
Receipt managers queue
The requested action is invalid for the application.
Cancel
Sign in with Apple ID
Press "OK" to simulate authenticating with an Apple ID.
[Environment: Xcode]
Simulated authentication cancelled
The tester selected %@
StoreKit client initiated for syncing transactions
AMSAuthenticateRequest failed with no error.
v24@?0@"AMSAuthenticateResult"8@"NSError"16
v16@?0@"NSError"8
B16@?0@"InAppReceiptDatabaseTransaction"8
v24@?0@"NSString"8^B16
v16@?0@"InAppReceiptDatabaseSession"8
v20@?0B8@"NSError"12
Failed transaction cache update
com.apple.appstored.URLRequestProperties
CREATE TABLE IF NOT EXISTS app_updates (pid INTEGER, bundle_id TEXT, current_version_release_date DATETIME, device_families INTEGER, install_date DATETIME, is_background INTEGER NOT NULL DEFAULT 0, is_code_signature_update INTEGER NOT NULL DEFAULT 0, is_offloaded INTEGER NOT NULL DEFAULT 0, is_per_device INTEGER NOT NULL DEFAULT 0, is_profile_validated INTEGER NOT NULL DEFAULT 0, metrics_data JSON, purchase_id INTEGER DEFAULT 0, release_date DATETIME, software_platform INTEGER NOT NULL DEFAULT 0, store_item_data JSON, store_item_id INTEGER NOT NULL DEFAULT 0, store_software_version_id INTEGER, timestamp DATETIME DEFAULT (timestamp()), update_state INTEGER NOT NULL DEFAULT 0, UNIQUE(bundle_id) ON CONFLICT REPLACE,PRIMARY KEY (pid));
app_updates
B16@?0@"AppUpdatesDatabaseTransaction"8
v32@?0q8Q16^B24
v16@?0@"SQLiteDatabaseStoreMigrator"8
DELETE FROM app_updates WHERE is_profile_validated = 1;
ALTER TABLE app_updates ADD COLUMN current_version_release_date DATETIME;
ALTER TABLE app_updates ADD COLUMN device_families INTEGER;
ALTER TABLE app_updates ADD COLUMN software_platform INTEGER NOT NULL DEFAULT 0;
DELETE FROM app_updates WHERE is_app_clip
ALTER TABLE app_updates ADD COLUMN is_code_signature_update INTEGER NOT NULL DEFAULT 0;
com.apple.appstored.XPCServiceBroker
app_usage_session_reporter_keys
session_reporter_key
last_refresh
app_events
account_id
app_platform
bundle_version
clip_affiliate_token
clip_app_type
clip_campaign
clip_campaign_token
clip_provider_token
clip_ref_source
clip_ref_type
cohort
count
cumulative_user_count
device_vendor_id
device_vendor_id_repaired
event_type
event_subtype
evid
has_been_posted
is_beta
is_clip
is_temporary
item_id
item_name
launch_end_time
launch_time
week_start_time
short_version
storefront
timestamp
usage_time
Duplicate request
Request is a duplicate of %@
Rejecting this request. A non-Store install is already in progress for %@
v16@?0@"AppInstallsDatabaseSession"8
B16@?0@"AppInstallsDatabaseTransaction"8
UpgradeToInteractive
v16@?0@"AppInstallPolicy"8
type
altDSID
appleID
downloaderID
externalIDString
externalVersionID
itemID
purchaserID
redownloadParams
artworkURLString
containsMessagesExtension
itemName
launchProhibited
messagesArtworkURLString
packageDPInfo
packageSINF
packageURLString
storeCohort
storeFront
vendorName
provisioningProfile
variantID
skipIfInstalled
isBeta
isSystemApp
isStoreApp
bundleVersion
manifestURLString
suppressDialogs
betaBuildGroupID
icuLocale
filter[appBundleId]
extend
platform
filter[offerName]
with
offerNames
sfId
attributes
size
currencyCode
data
STDQ
description
discounts
price-display
priceFormatted
hostedContent
version
kind
price
offerName
available-subproducts
isFamilyShareable
is-hosted
item-id
icu-locale
name
offers
standard
store-offers
subscriptionFamilyId
offerId
modeType
numOfPeriods
recurringSubscriptionPeriod
title
https://
http://
adHocOffers
%@%@
%@%@/v1/catalog/%@/in-apps
%@_%@
com.apple.storekit.prod
com.apple.storekit.sandbox
com.apple.storekit.xcode
Error decoding response
Could not decode media products response
com.apple.news
com.apple.stocks
Error decoding object
Attempted to decode store response
@currency=%@
Auto-Renewable Subscription
Non-Consumable
Consumable
@currency=
@16@?0@"ASDTestFlightAppMetadata"8
@"AppInstallPolicy"20@?0B8@"AppInstallPolicy"12
TestFlight
software
@16@?0@"NSData"8
@16@?0@"NSString"8
@16@?0@"NSUUID"8
Not supported in the simulator
inAppsByAppBundleId
v32@?0@"NSString"8Q16^B24
cacheTimestamp
com.apple.appstored.SubscriptionEntitlementsCoordinator.network
com.apple.appstored.SubscriptionEntitlementsCoordinator
v16@?0@"SubscriptionEntitlementsResult"8
SubscriptionEntitlements_v2.plist
SubscriptionEntitlementsAppStore_v2.plist
SubscriptionEntitlementsActivity_v2.plist
SubscriptionEntitlementsMusic_v2.plist
SubscriptionEntitlementsTV_v2.plist
SubscriptionEntitlementsiCloud_v2.plist
SubscriptionEntitlementsPodcast_v2.plist
v32@?0@"SubscriptionEntitlementsResponse"8B16B20@"NSError"24
v24@?0@"SubscriptionEntitlementsResponse"8@"NSError"16
Timed out attempting to update subscription entitlements
Podcast
Unknown
com.apple.appstored.NewsSubEntitlementsCacheUpdated
com.apple.appstored.AppStoreSubEntitlementsCacheUpdated
com.apple.appstored.ActivitySubEntitlementsCacheUpdated
com.apple.appstored.MusicSubEntitlementsCacheUpdated
com.apple.appstored.TVSubEntitlementsCacheUpdated
com.apple.appstored.iCloudSubEntitlementsCacheUpdated
com.apple.appstored.PodcastSubEntitlementsCacheUpdated
com.apple.AppStore
installedSoftwareRatingName
Invalid or missing receipt data (%lu bytes)
Could not find valid application proxy for URL %@
mobile
Failed to write receipt to URL: %@
Invalid container for application: %@
v40@?0q8@"NSDictionary"16Q24^B32
app_package
archive_type
blocked
bytes_offset
bytes_total
clear_hash_array
compression
data_promise_id
disk_usage
dp_info
hash_array
hash_size
hash_type
initial_odr_size
locate_asset_cache
odr_manifest_url
package_type
package_url
parent_id
provisioning_profiles
request_count
sinf
streaming_zip
variant_id
com.apple.private.alloy.appstore
com.apple.appstored.XDCMessageBroker
No device provided
No payload provided
XDCServiceDevicesDidChangeNotification
com.apple.appstored.RepairService
Repair
FP/%@
Keybag
Repair not available in the simulator
ARCADE_INTERNET_CONNECTION_REQUIRED
ARCADE_CONNECT_TO_THE_INTERNET_TO_OPEN_APP
fairPlayRepairNetworkRequired
Need to present dialog request
REPAIR_FAIRPLAY_FAMILY_LEAVE_ALERT_TITLE
REPAIR_FAIRPLAY_FAMILY_LEAVE_ALERT_MESSAGE
fairPlayRepairFamilyLeave
cancel
REPAIR_FAIRPLAY_FAMILY_LEAVE_APP_STORE
com.apple.appstored.AppInstallScheduler
com.apple.appstored.TaskQueue.bootstrapQueue
%@ phase: %@ coordinator: %@
items
B16@?0@"AppInstall"8
B16@?0@"AppSchedulerDatabaseTransaction"8
@16@?0@"AppInstall"8
OptimalDownloadWindow
Wait for optimal download window
cellular
wired ethernet
loopback
unknown (%ld)
transactionId
v16@?0@"AppUpdatesDatabaseSession"8
No update found
v24@?0@"ASDPurchaseResponse"8@"NSError"16
Took too long to re-purchase update
@16@?0@"NSDictionary"8
????????
%@][%@
DSPersonID
enterpriseInstallURL
familyID
iAdAttribution
iAdConversionDate
iAdImpressionDate
purchaseDate
referrerApp
referrerURL
sourceApp
@16@?0@"StoreItemSubGenre"8
Updating metadata is not supported on this platform
Ignoring, unsupported action for enterprise request: %@
Ignoring, missing URL for enterprise request: %@
Ignoring, invalid URL for enterprise request: %@
Ignoring, invalid enterprise request with missing URL
v32@?0@"NSUUID"8@"ASDEnterpriseAppMetadata"16^B24
com.apple.appstored.AppMetricsService
v24@?0@"NSArray"8@"NSError"16
Push Connection - TestFlight
Push Connection - App Store
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
com.apple.appstored.RepairRequest
v16@?0@"NSNotification"8
%@-%ld
app-clip
auto-download
auto-update
in-app-purchase
manual-update
on-demand-resource
redownload
restore
com.apple.AppStoreDaemon.PurchaseHistoryDAAPResponseDecoder.pasrsingQueue
com.apple.AppStoreFoundation.PurchaseHistoryManager
com.apple.appstoredaemon.PurchaseHistoryManager.query
v16@?0@"PurchaseHistoryDatabaseSession"8
v16@?0@8
height
width
v32@?0@"NSString"8@"NSString"16^B24
v24@?0@8@"NSError"16
Promises may only be resolved once!
v24@?0@?<v@?@>8@?<v@?@"NSError">16
com.apple.StorageSettings.AppMayUninstall
com.apple.appstored.AppInstallObserver
com.apple.appstored.AppInstallObserver.policyQueue
com.apple.appstored.installcoordination
B16@?0@"NSError"8
com.apple.frontboard.app-library
cell
conr
devs
imsk
ntwk
powr
migr
odte
odts
term
token
messages
Canceled
none
Install did not exist
B32@?0@"RequestThrottleRecord"8Q16^B24
v32@?0@"RequestThrottleRecord"8Q16^B24
com.apple.appstored.Migrator
v16@?0@"MigratorConfiguration"8
com.apple.appstored.MigrateQueue
quantity
com.apple.
/System/Library/PrivateFrameworks/AppStoreDaemon.framework
NO_ACCOUNT_ON_WATCH_TITLE
NO_ACCOUNT_ON_WATCH_MESSAGE
NO_ACCOUNT_ON_WATCH_BUTTON
No active account
App Clip missing required Info.plist key
v12@?0B8
Product is not available in the current storefront
failureType
3038
Received simulated interrupted purchase from Xcode
dialog.okButtonAction.url
pricingParameters
productType
Received purchase response without a transaction but including an action URL with buy params
No transactions in response
In App
No client available to handle authentication request
No client available to handle dialog request
No client available to handle engagement request
iap_info_iaps
promoted_iaps
product_id
visibility
promo_order
xp_amp_app_usage_analytics
xp_amp_app_usage_dnu
xp_amp_app_usage_arcade
xp_amp_usage_detailed
on_device_personalization
itsmetrics_test
com.apple.appstored.%@.events
ArcadePayout
ArcadeSummary
External
Push
Trigger
Auto
Pending
%@/%@/%@
Purchase could not be found in the queue
com.apple.AppStoreDaemon.PurchaseService
v24@?0@"NSDictionary"8@"NSError"16
Purchase
action-params
appsApple
bundle-id
deviceFamilies
value
versionId
currentVersionReleaseDateTime
{ bundleID: %@ itemID: %@ evid: %@ currentReleaseDate: %@ }
yyyy-MM-dd'T'HH:mm:ss'Z'
com.apple.appstored.FamilyManager.dispatch
com.apple.appstored.FamilyManager.notifications
.%lu
{ start: %@ end: %@ account: %@/%@  type: %ld }
AssetErrorDomain
com.apple.appstored.AppInstallQueue
Unexpected phase value `%lu`
v24@?0@"AssetResult"8@"NSError"16
Installation task returned invalid state
fractionCompleted
Invalid Manifest URL
No URL provided for request from client
Invalid manifest URL
The manifest URL isn't external
Cannot load non-https manifest URL
B16@?0@"UPPManifestAsset"8
v32@?0@"NSString"8@"NSArray"16^B24
Invalid state
Must uninstall existing app
Invalid manifest
Invalid kind for iOS platform manifest
title required for iOS platform manifest
bundle-identifier required for iOS platform manifest
Failed to encode metadata from manifest
Manifest resulted in no assets imported
Not compatible with this platform: %@
No manifest data received
Provided hash did not match
Manifest could not be parsed
User canceled confirmation
https
UPPManifestErrorUserInfoKeyExistingName
UPPManifestErrorUserInfoKeyManifestName
download-manifest
action
digest
itms-services
keybag
com.apple.appstored.URLResponseDecoder
Aggreate Crashes
Aggreate Installs
Aggreate Launches
Crash
Install
Launches
Uninstall
Qualifying Activity
Clip View
asset-info
file-size
chunks
chunkSize
clearHashes
hashes
deltaPackages
local-server-info
initialODRSize
isStreamable
priorVariantIdentifiers
priorVersionExternalIdentifier
uncompressedSize
variantId
B16@?0@"StoreAsset"8
Universal
%@: {URL = %@; variant = %@; delta = %d}
(forced silent authentication)
(forced proxied authentication)
UPDATE promoted_iaps SET promo_order = -1 WHERE bundle_id = ?;
DELETE FROM promoted_iaps WHERE bundle_id = ?;
INSERT INTO promoted_iaps (bundle_id, product_id, promo_order, visibility) VALUES (?1, ?2, coalesce(?3, (SELECT promo_order FROM promoted_iaps WHERE bundle_id = ?1 AND product_id = ?2), -1), coalesce(?4, (SELECT visibility FROM promoted_iaps WHERE bundle_id = ?1 AND product_id = ?2), -1));
v16@?0@"<SQLiteBinding>"8
CELLULAR_DATA_PROMPT_TITLE_UPDATES_ROAMING
CELLULAR_DATA_PROMPT_TITLE_UPDATES
CELLULAR_DATA_PROMPT_BODY_UPDATE_LIMIT_%@
CELLULAR_DATA_PROMPT_BODY_UPDATE_TOTAL_%@
CELLULAR_DATA_PROMPT_BODY_DISCLAIMER
cellularLimitUpdatesRoaming
cellularLimitUpdates
CELLULAR_DATA_PROMPT_TITLE_DOWNLOAD_ROAMING_%@
CELLULAR_DATA_PROMPT_TITLE_DOWNLOAD_%@
CELLULAR_DATA_PROMPT_TITLE_DOWNLOAD_ROAMING_GENERIC
CELLULAR_DATA_PROMPT_TITLE_DOWNLOAD_GENERIC
cellularLimitDownloadRoaming
cellularLimitDownload
CELLULAR_DATA_PROMPT_TITLE_UPDATE_ROAMING_%@
CELLULAR_DATA_PROMPT_TITLE_UPDATE_%@
CELLULAR_DATA_PROMPT_TITLE_UPDATE_ROAMING_GENERIC
CELLULAR_DATA_PROMPT_TITLE_UPDATE_GENERIC
cellularLimitUpdateRoaming
cellularLimitUpdate
CELLULAR_DATA_PROMPT_BUTTON_DOWNLOAD
download
CELLULAR_DATA_PROMPT_BUTTON_LATER_WLAN
CELLULAR_DATA_PROMPT_BUTTON_LATER_WIFI
later
CELLULAR_DATA_PROMPT_BODY_REMAINING_%@
CELLULAR_DATA_PROMPT_BODY_INITIAL_%@
wapi
CelularDataPromptActionDownloadLater
CelularDataPromptActionDownloadNow
com.apple.appstored.SQLiteDatabase
schema_version
B8@?0
_SQLiteDispatchQueueTag
v16@?0@"AppUpdateMemoryEntity"8
v32@?0@"AppUpdateMemoryEntity"8Q16^B24
AssetRequetPropertyRangeOffset
bytes=%llu-
Range
Restore In App
metadata
DESC
CREATE TEMPORARY TABLE 
 AS 
v32@?0@"SQLiteCursor"8@"NSError"16^B24
v24@?0@"SQLiteQueryResults"8@"NSError"16
SELECT 
DISTINCT 
 FROM %@
 WHERE 
 ORDER BY 
 LIMIT ?
COUNT
%@(%@)
B16@?0@"ACAccount"8
com.apple.appstored.automaticUpdates
AutomaticUpdatesAreEnabled
com.apple.appstored.callout
com.apple.appstored.dispatch
com.apple.appstored.badge
com.apple.appstored.UpdatesManager.taskQueue
enabled
disabled
@"NSDictionary"8@?0
AppUsage
AutomaticUpdates
Miscellaneous
attempts
values
CREATE TABLE IF NOT EXISTS iap_receipts (transaction_id TEXT, bundle_id TEXT, product_id TEXT, product_type INTEGER, transaction_date DATETIME, expiration_date DATETIME, revocation_date DATETIME, is_upgraded BOOL DEFAULT false, is_finished BOOL DEFAULT false, receipt TEXT NOT NULL, PRIMARY KEY (transaction_id, bundle_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS iap_subscription_status (bundle_id TEXT, subscription_group_id TEXT, last_updated DATETIME, renewal_info BLOB, PRIMARY KEY (bundle_id, subscription_group_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS iap_receipts_properties (bundle_id TEXT PRIMARY KEY, revision TEXT, token TEXT, last_updated DATETIME)
storekit_receipts
DROP TABLE IF EXISTS iap_receipts;
DROP TABLE IF EXISTS iap_subscription_status;
DROP TABLE IF EXISTS iap_receipts_properties;
applicationSite
accountSecurityLevel
statusCode
responsibleClientID
eventCategory
purchase
buyParams
v28@?0@"NSData"8B16^B20
%02x
CREATE TABLE IF NOT EXISTS purchase_history_apps (pid INTEGER PRIMARY KEY, bundle_id TEXT, content_rating_flags INTEGER, date_purchased DATETIME, developer_name TEXT, family_shared INTEGER, first_party INTEGER, is_ios_binary_macos_available INTEGER, is_ios_binary_macos_compatible INTEGER, has_messages_extension INTEGER, hidden INTEGER, hidden_from_springboard INTEGER, icon_url_template TEXT, is_32_bit_only INTEGER, is_preorder INTEGER, is_verified_for_macos INTEGER, long_title TEXT, mac_app_required_capabilities JSON, media_kind INTEGER, oval_icon_url_template TEXT, preflight_package_url URL, product_url URL, purchaser_dsid INTEGER, redownload_params TEXT, required_capabilities JSON, requires_rosetta INTEGER, runs_on_apple_silicon INTEGER, runs_on_intel INTEGER, store_item_id INTEGER, supports_ipad INTEGER, supports_iphone INTEGER, supports_mac INTEGER, purchase_token INTEGER, locker_item_id INTEGER, genre_id INTEGER, genre_name TEXT, watch_app_delivered_in_ios_app INTEGER, watch_app_runs_independently INTEGER, watch_app_watch_only INTEGER, supports_layered_image INTEGER, has_p3 INTEGER, title TEXT, circular_icon_url TEXT, UNIQUE(purchaser_dsid, store_item_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS purchase_history_db_properties (key TEXT PRIMARY KEY, value TEXT)
purchase_history
DROP TABLE purchase_history_apps;
DROP TABLE purchase_history_db_properties;
appName
Configuration.storekit
com.apple.appstored.octane.dispatch
Octane
expire
force renew
Unknown action request
Invalid action (action: %ld)
.watchkitapp
No active connection to %@
storePlatformData.software-update-slimmed-lockup.results
artistName
artwork
assets
contentRatingsBySystem
display
externalId
fileSizeByDevice
fileSizeInfo
variants
hasMessagesExtension
isFirstParty
isHiddenFromSpringboard
isIOSBinaryMacOSCompatible
update
ovalArtwork
releaseDate
requiresRosetta
runsOnIntel
runsOnAppleSilicon
updateFileSizeInfo
deltaSizeByExternalVersionId
whatsNew
rolloutDeferred
v32@?0@"NSString"8@"NSDictionary"16^B24
B16@?0@8
universal
@"<NSFastEnumeration>"16@?0@"NSDictionary"8
databases/%ld/update
v24@?0@"ACAccount"8@"NSError"16
Purchase History Update
PRAGMA user_version = 1;
CREATE TABLE IF NOT EXISTS schema_version (schema_name TEXT, schema_version INTEGER DEFAULT 0, PRIMARY KEY(schema_name));
SELECT schema_version FROM schema_version WHERE schema_name = ?
PRAGMA table_info(%@)
INSERT OR REPLACE INTO schema_version (schema_name, schema_version) VALUES (?, ?)
SELECT name FROM sqlite_master where name = ?
guid
kbsync
v24@?0@"NSNumber"8@"NSError"16
%08X
%@: count %lu exceeds available length: %lu
com.apple.appstored.DataPromiseDataConsumer
Promise data consumer creation failed
No processor was set when consuming data
No processor was set when finishing
No data promise was set when preparing
No processor was set when preparing
No processor was set when resetting
No processor was set when suspending
<%@: %p> { %@ }
com.apple.appstored.DataPromiseDataConsumer.delegate
No data promise found to create stream adapter
Received unexpected promise type `%@`
Received unexpected promise type `%ld`
content-type
application/json
Attempted to decode receipt response
Missing required fields
Receipt response missing revision or transactions
Content-Type
v16@?0@"NSObject<OS_xpc_object>"8
UserInfo
com.apple.distnoted.matching
com.apple.notifyd.matching
com.apple.appstored.AMSMetricsQueue
Failed to create register request.
Push register request failed.
Push register request received no response.
No account found.
device-name-data
serial-number
@16@?0@"ASDAppReviewAppMetadata"8
downloadProduct
GAME
DATETIME
JSON
UUID
com.apple.appstored.UpdatesService
v16@?0@"NSArray"8
v24@?0q8@"NSError"16
Enabled
Disabled
v28@?0B8@"NSArray"12@"NSError"20
Update
No purchase history data found for requested account
SELECT value FROM purchase_history_db_properties WHERE key = ?
ServerRevisionPropertyKey
LastUpdatedTimestampPropertyKey
iap_receipts
expiration_date
is_finished
is_upgraded
product_type
receipt
revocation_date
transaction_date
transaction_id
com.apple.appstoredaemon.PurchaseHistoryManager.update
@"Promise"16@?0@"NSNumber"8
B16@?0@"PurchaseHistoryDatabaseTransaction"8
com.apple.appstored.PurchaseHistoryDatabaseUpdated
PC%@/%@
PN%@/%@
@"Promise"16@?0@"NSData"8
v24@?0@"NSData"8@"NSError"16
default
purchases page
hide/show
account changed
push notification
periodic refresh
purchase completed
(CODE = %ld) %@
code
dictionary
deferredUpdates
%@/%ld
AMSServerPayload.metrics.dialogId
dialogID
account
additionalHeaders
bundleURL
clientInfo
companionBundleID
device
externalID
itemResponse
installedExternalVersionID
installedVariantID
logCode
logKey
metricsType
originalPurchaserDSID
preflightURL
purchaseEvent
purchaseID
referrerName
refreshInstallID
requestToken
temporaryBundleID
clientType
disableBoosting
discoveredUpdate
isDiscretionary
expectedSoftwarePlatform
expectsIOSAppOnMac
generatedVendorID
ignoreRequirePasswordRestriction
isMachineBased
postMetrics
priority
purchaseOnly
purchaseState
purchaseType
isRemoteInstall
requireUniversal
suppressEvaluatorDialogs
updateType
useJSONContentType
useLocalAuthAndSystemDialogs
watchType
isRemotelyUserInitiated
OSBuildType
ForceAppDRMMode
serverDialogID
summary
current_version_release_date
device_families
install_date
is_background
is_code_signature_update
is_offloaded
is_per_device
metrics_data
purchase_id
release_date
software_platform
store_item_data
store_item_id
store_software_version_id
update_state
is_app_clip
requires_rosetta
runs_on_apple_silicon
runs_on_intel
min-keybag-repair-interval-seconds
enable-sip-check
current_apps
is_arcade
is_prior
vendor_name
com.apple.appstored.RequestTag
X-Apple-TA-Device
X-Apple-TA-OS-Version
kern.bootsessionuuid
duration
exitReason
fairPlayStatus
repairType
repairError
result
com.apple.appstored.repair
watchos
v32@?0@"MigratorConfiguration"8Q16^B24
v32@?0@"NSString"8@"MigratorConfiguration"16^B24
app_metrics_events
metrics_type
payload
askToBuy
firstName
ICloudDsid
accountName
ITunesPreferredDsid
ITunesPreferredAccountName
lastName
sharingPurchases
iCloudDSID
iCloudUsername
isCurrentSignedInUser
true
iTunesDSID
iTunesUsername
isAskToBuyEnabled
isSharingPurchases
family
members
{ cached: %d familyMembers: %@ }
family.members
q24@?0@"FamilyMember"8@"FamilyMember"16
CREATE TABLE IF NOT EXISTS promoted_iaps (bundle_id TEXT, product_id TEXT, promo_order INTEGER NOT NULL DEFAULT -1, visibility INTEGER NOT NULL DEFAULT 0, PRIMARY KEY (product_id, bundle_id) ON CONFLICT REPLACE);
ALTER TABLE promoted_iaps RENAME COLUMN hidden TO visibility;
storekit_promotions
SQLiteErrorDomain
No data container found for app
/Library/Caches/StoreKit/receipts.db
Service is not available.
Not entitled for this service.
XPCServiceClientUserInfoKey
deltaPackage
drmMode
packageUrl
requestCount
interfaceType
constrained
expensive
unknown
meanTransferSpeed
networkProtocol
packageURL
taskMetrics
storekit_revocations
iap_subscription_status
last_updated
renewal_info
subscription_group_id
completedUnitCount
totalUnitCount
com.apple.appstored.PowerMonitor
com.apple.system.powermanagement.poweradapter
v12@?0i8
PowerStateDidChangeNotification
progress
launchReason
endDateObject
endDate
endTime
eventType
startDateObject
startDate
startTime
clipLaunchReason
clipFullURL
clipReferrerURL
clipReferrerBundleID
@{ id: %@ isExtension: Y containingBundleID: %@ usage: %@ }
@{ id: %@ count: %lu usage: %@ }
en_US_POSIX
yyyy-MM-dd HH:mm:ss
HH:mm:ss
%@%lu
%lu:%@:%@
com.apple.appstored.AccountStore
com.apple.appstored.ASDSandboxAccountDidChangeNotification
com.apple.StoreServices.StorefrontChanged
AccountStorePrimaryAccountDidChange
AccountStoreSandboxAccountDidChange
AccountDidChangePreviousActiveDSID
CREATE TABLE IF NOT EXISTS account_events (pid INTEGER, active_start_time DATETIME, active_end_time DATETIME, account_id INTEGER, apple_id TEXT, alt_dsid TEXT, event_type INTEGER, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_app_installs (pid INTEGER, bundle_id TEXT, clip_affiliate_token TEXT, clip_campaign TEXT, clip_campaign_token TEXT, clip_provider_token TEXT, clip_ref_source TEXT, clip_ref_type TEXT, clip_third_party_with_no_app_referrer INTEGER, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_metrics_events (pid INTEGER, bundle_id TEXT, event_type INTEGER, event_subtype INTEGER, metrics_type INTEGER, has_been_posted INTEGER DEFAULT 0, payload JSON, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_crossfire (pid INTEGER, account_id INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, clip_affiliate_token TEXT, clip_app_type TEXT, clip_campaign TEXT, clip_campaign_token TEXT, clip_provider_token TEXT, clip_ref_source TEXT, clip_ref_type TEXT, clip_third_party_with_no_app_referrer INTEGER, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, device_vendor_id_repaired INTEGER, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_clip INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_ocelot (pid INTEGER, account_id INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, device_vendor_id_repaired INTEGER, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_clip INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_ocelot_payout (pid INTEGER, account_id INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, device_vendor_id_repaired INTEGER, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_clip INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_events_personalization (pid INTEGER, account_id INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, count INTEGER, cumulative_user_count INTEGER, device_vendor_id TEXT, device_vendor_id_repaired INTEGER, event_type INTEGER, event_subtype INTEGER, evid INTEGER, has_been_posted INTEGER DEFAULT 0, is_beta INTEGER, is_clip INTEGER, is_temporary INTEGER DEFAULT 0, item_id INTEGER, item_name TEXT, launch_time DATETIME, launch_end_time DATETIME, week_start_time DATETIME, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_time INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS launch_event_sync_metadata (pid INTEGER, last_duet_sync DATETIME, spotlight_migrated_date DATETIME, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS launch_events (pid INTEGER, bundle_id TEXT, containing_bundle_id, event_source INTEGER, is_extension INTEGER, launch_end_time DATETIME, launch_start_time DATETIME, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps (pid INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, deletion_date DATETIME, event_type INTEGER, evid INTEGER, is_arcade INTEGER, is_beta INTEGER, is_clip INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), vendor_name TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_crossfire (pid INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_arcade INTEGER, is_beta INTEGER, is_clip INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), vendor_name TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_ocelot (pid INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_arcade INTEGER, is_beta INTEGER, is_clip INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), vendor_name TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_ocelot_payout (pid INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_arcade INTEGER, is_beta INTEGER, is_clip INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), vendor_name TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS current_apps_personalization (pid INTEGER, app_platform INTEGER, bundle_id TEXT, bundle_version TEXT, cohort TEXT, device_vendor_id TEXT, evid INTEGER, is_arcade INTEGER, is_beta INTEGER, is_clip INTEGER, is_prior INTEGER, item_id INTEGER, item_name TEXT, short_version TEXT, storefront INTEGER, timestamp DATETIME DEFAULT (timestamp()), vendor_name TEXT, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_cluster_mappings (pid INTEGER, bundle_id TEXT, cluster_id INTEGER, cluster_version INTEGER, launches_weight INTEGER, item_id INTEGER, timestamp DATETIME DEFAULT (timestamp()), usage_weight INTEGER, PRIMARY KEY (pid));
CREATE TABLE IF NOT EXISTS app_usage_session_reporter_keys (pid INTEGER, bundle_id TEXT, session_reporter_key TEXT, last_refresh DATETIME, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (pid));
app_usage
ALTER TABLE app_events_crossfire ADD COLUMN clip_affiliate_token TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN clip_app_type TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN clip_campaign TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN clip_campaign_token TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN clip_provider_token TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN clip_ref_source TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN clip_ref_type TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN is_clip INTEGER;
ALTER TABLE app_events_ocelot ADD COLUMN is_clip INTEGER;
ALTER TABLE app_events_ocelot_payout ADD COLUMN is_clip INTEGER;
ALTER TABLE app_events_personalization ADD COLUMN is_clip INTEGER;
ALTER TABLE current_apps_crossfire ADD COLUMN is_clip INTEGER;
ALTER TABLE current_apps_ocelot ADD COLUMN is_clip INTEGER;
ALTER TABLE current_apps_ocelot_payout ADD COLUMN is_clip INTEGER;
ALTER TABLE current_apps_personalization ADD COLUMN is_clip INTEGER;
ALTER TABLE app_events_crossfire ADD COLUMN clip_third_party_with_no_app_referrer INTEGER;
ALTER TABLE app_events_crossfire ADD COLUMN device_vendor_id_repaired INTEGER;
ALTER TABLE app_events_ocelot ADD COLUMN device_vendor_id_repaired INTEGER;
ALTER TABLE app_events_ocelot_payout ADD COLUMN device_vendor_id_repaired INTEGER;
ALTER TABLE app_events_personalization ADD COLUMN device_vendor_id_repaired INTEGER;
ALTER TABLE current_apps_crossfire ADD COLUMN vendor_name TEXT;
ALTER TABLE current_apps_ocelot ADD COLUMN vendor_name TEXT;
ALTER TABLE current_apps_ocelot_payout ADD COLUMN vendor_name TEXT;
ALTER TABLE current_apps_personalization ADD COLUMN vendor_name TEXT;
ALTER TABLE app_events_crossfire ADD COLUMN app_platform INTEGER;
ALTER TABLE app_events_ocelot ADD COLUMN app_platform INTEGER;
ALTER TABLE app_events_ocelot_payout ADD COLUMN app_platform INTEGER;
ALTER TABLE app_events_personalization ADD COLUMN app_platform INTEGER;
ALTER TABLE current_apps_crossfire ADD COLUMN app_platform INTEGER;
ALTER TABLE current_apps_ocelot ADD COLUMN app_platform INTEGER;
ALTER TABLE current_apps_ocelot_payout ADD COLUMN app_platform INTEGER;
ALTER TABLE current_apps_personalization ADD COLUMN app_platform INTEGER;
ALTER TABLE current_apps ADD COLUMN app_platform INTEGER;
ALTER TABLE current_apps ADD COLUMN is_arcade INTEGER;
ALTER TABLE current_apps_ocelot ADD COLUMN is_arcade INTEGER;
ALTER TABLE current_apps_crossfire ADD COLUMN is_arcade INTEGER;
ALTER TABLE current_apps_ocelot_payout ADD COLUMN is_arcade INTEGER;
ALTER TABLE current_apps_personalization ADD COLUMN is_arcade INTEGER;
DROP TABLE account_events
DROP TABLE app_events_crossfire
DROP TABLE app_events_ocelot
DROP TABLE app_events_ocelot_payout
DROP TABLE app_events_personalization
DROP TABLE app_cluster_mappings
DROP TABLE app_metrics_events
DROP TABLE current_apps
DROP TABLE current_apps_crossfire
DROP TABLE current_apps_ocelot
DROP TABLE current_apps_ocelot_payout
DROP TABLE current_apps_personalization
com.apple.appstored.octane
-[StoreKitTestingService buyProductWithID:bundleID:completion:]
-[StoreKitTestingService changeAutoRenewStatus:transactionID:bundleID:completion:]
-[StoreKitTestingService clearOverridesForBundleID:completion:]
-[StoreKitTestingService completeAskToBuyRequestWithResponse:transactionID:bundleID:completion:]
-[StoreKitTestingService deleteAllTransactionsForBundleID:completion:]
-[StoreKitTestingService expireSubscriptionWithProductID:bundleID:completion:]
-[StoreKitTestingService forceRenewalOfSubscriptionWithProductID:bundleID:completion:]
-[StoreKitTestingService getStorefrontForBundleID:completion:]
-[StoreKitTestingService getActivePortWithCompletion:]
-[StoreKitTestingService getTransactionDataForBundleID:completion:]
-[StoreKitTestingService performAction:transactionID:bundleID:completion:]
-[StoreKitTestingService removeConfigurationForBundleID:completion:]
-[StoreKitTestingService saveSigningData:forBundleID:completion:]
-[StoreKitTestingService saveConfigurationData:forBundleID:completion:]
-[StoreKitTestingService startObservingTransactionsForBundleID:completion:]
-[StoreKitTestingService getIntegerValueForIdentifier:forBundleID:completion:]
-[StoreKitTestingService setIntegerValue:forIdentifier:forBundleID:completion:]
-[StoreKitTestingService getStringValueForIdentifier:forBundleID:completion:]
-[StoreKitTestingService setStringValue:forIdentifier:forBundleID:completion:]
-[StoreKitTestingService setStorefront:forBundleID:completion:]
-[StoreKitTestingService refreshQueueForBundleId:completion:]
-[StoreKitTestingService revokeEntitlementsForProductIdentifiers:forBundleId:completion:]
-[StoreKitTestingService removeTransactionIdentifiersFromCache:forBundleIdentifier:]
-[StoreKitTestingService registerForEventOfType:forBundleID:withFilterData:completion:]
-[StoreKitTestingService unregisterForEventWithIdentifier:forBundleID:]
A bundle ID is required
The requested action is invalid for this application
PRAGMA journal_mode=WAL
PRAGMA cache_size=%ld
com.apple.appstored.CleanupManager.dispatch
Post Stale Cleanup
Post Cleanup
v24@?0q8@"NSUUID"16
B16@?0@"LSApplicationRecord"8
B16@?0@"IXAppInstallCoordinator"8
Not available on this platform.
Restart
Application only supports 32-bit architecture
User has disabled automatic downloads
Restrictions prohibit automatic downloads
No bundle ID was specified
PromiseResult must represent either a value or an error
ASOctaneServer
/System/Library/PrivateFrameworks/ASOctaneSupport.framework/ASOctaneSupport
sms-private://app?appBundleID=%@
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
com.apple.AppStoreDaemon.LaunchServicesCatalog
System application mapping was not available
@16@?0@"LSApplicationProxy"8
NOT bundleID IN %@
v24@?0@"BSProcessHandle"8@"NSError"16
@"Optional"16@?0@"LSApplicationRecord"8
@"NSEnumerator"8@?0
@16@?0@"NSNumber"8
isPlaceholder
bundleIDs
AppBundleID
_DownloadSize
_IsZipStreamable
_Measurement
_StartOfDataRange
%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x%02x
Keychain failed to return value (error %d): %@
Keychain failed to return value (error %d)
v24@?0^v8Q16
App Store User Data Encryption
SecItemCopyMatching succeeded with empty results
%@.%@
com.apple.appstored.encryption
%@: {type = %ld; DSID = %@}
Failed to create push types request
Failed to create push types request.
Received no response for push types call.
Attempting to add push type for inactive account.
No push token registered.
parameters
media-kinds
notification-type
Remove
iap_purchase_intents
app_name
product_name
HEAD
Invalid response, expected content length unknown
Invalid response, status code: %ld
xyz.%@.%@
No job found with bundle ID: %@
autoUpdatesEnabled
adam-id
local-software
installed-version-identifier
{ bundleID: %@ itemID: %@ }
v20@?0@"NSError"8B16
v24@?0Q8@"NSError"16
fsEntitlements
com.apple.appstored.DeviceStateMonitor
appstored.run-once
DeviceStateDidChangeNotification
Passing an intent of 'lib_IXCoordinatorIntentAny' is not supported.
Don't know how to find coordinator for bundle ID: %@ with intent: %lu
Coordinator identifier was invalid
Coordinator identifier was '%@' but expected '%@'
Feedback
`%@` does not support setPreparationPromise:error:
Responsible client was `%lu`
`%@` does not support setInitialODRAssetPromises:error:
fake-promise
`%@` does not support setUserDataPromise:error:
security-promise
`%@` does not support setDeviceSecurityPromise:error:
Failure reason was not specified
`%@` does not support appQuitPromiseWithError:
`%@` does not support deviceSecurityPromiseWithError:error:
`%@` does not support setTargetGizmoPairingID:error:
`%@` does not support setImportance:error:
`%@` does not support setAppAssetPromise:error:
`%@` does not support setInstallOptions:error:
`%@` does not support setAppQuitPromise:error:
<%@: %p> { coordinatorID = %@; bundleID = %@ }
Initiating
Updating
RestoringDemoted
Restoring
Promoting
Watch
Unknown (%lu)
iap_receipts_properties
revision
com.apple.appstored.TaskQueue.networkQueue
com.apple.appstored.TaskQueue
Bundle identifier is required (source = '%ld')
Item identifier is required (source = '%ld')
genre
genreId
beta
bvrs
deviceVerification
isStoreOriginated
limit
appExtVrsId
appDsid
reason
requestData
receipt-data
serialNumber
applicationUsername
generateBuyParams
partnerId
partnerTransactionId
requiresAskToBuy
transaction-receipt
clipBundleId
appAccountToken
osVersion
osBuildNumber
hardwareModel
hardwareFamily
adHocOfferId
adHocKeyId
adHocNonce
adHocSignature
adHocTimestamp
transaction-id
expiresDate
hasMore
isUpgraded
lastTransactions
lastUpdated
productId
revocationDate
revocationReason
signedRenewalInfo
signedTransactionInfo
signedTransactions
subscriptionGroupIdentifier
unfinishedTxnIds
Non-Renewing Subscription
X-Apple-Client-StoreKit-Version
assetList
offer-name
original-purchase-date
original-transaction-id
app-list
purchase-date
request-data
initial
push
timer
manual
com.apple.message-payload-provider
CREATE TABLE IF NOT EXISTS iap_purchase_intents (bundle_id TEXT, product_id TEXT, app_name TEXT, product_name TEXT, timestamp DATETIME DEFAULT (timestamp()), PRIMARY KEY (product_id, bundle_id) ON CONFLICT REPLACE);
storekit_purchase_intents
STDRDL
SWUPD
DELETE FROM purchase_history_apps WHERE purchaser_dsid = ? AND locker_item_id IN (%@);
v32@?0@"NSNumber"8Q16^B24
DELETE FROM purchase_history_apps WHERE purchaser_dsid = ?;
INSERT OR REPLACE INTO purchase_history_db_properties (value, key) VALUES (?, ?);
@16@?0@"ASDSystemAppMetadata"8
System
purchase_history_apps
content_rating_flags
circular_icon_url
date_purchased
developer_name
family_shared
first_party
has_messages_extension
hidden
hidden_from_springboard
icon_url_template
is_32_bit_only
is_ios_binary_macos_available
is_ios_binary_macos_compatible
is_preorder
long_title
media_kind
oval_icon_url_template
preflight_package_url
product_url
purchaser_dsid
redownload_params
required_capabilities
supports_ipad
supports_iphone
supports_mac
purchase_token
locker_item_id
genre_id
genre_name
watch_app_delivered_in_ios_app
watch_app_runs_independently
watch_app_watch_only
supports_layered_image
has_p3
{constrained = %d, expensive = %d, roaming = %d, interface = %@}
com.apple.appstored.emulatenetwork
NetworkEmulation
cnst
expn
ifce
roam
other
wifi
/app/clipUsage
/app/inFocus
/app/usage
_DKQuery
/System/Library/PrivateFrameworks/CoreDuet.framework/CoreDuet
_DKSystemEventStreams
_DKEventQuery
_DKKnowledgeStore
_DKApplicationMetadataKey
com.apple.AppStoreFoundation.LibraryService
This lookup is not supported for this platform
@"NSArray"16@?0@"NSArray"8
Library
PRAGMA table_info(%@);
PRAGMA user_version;
SELECT name FROM sqlite_master where name = '%@'
PRAGMA user_version = %lld;
com.apple.appstored.StorefrontQueue
Sandbox
Production
%@-%@
No URL was specified for package `%lld`
com.apple.AppStoreFoundation.XPCNotificationCenter
install
AMSServerErrorCode
clientAPIVersion
com.apple.itunesstored.private
com.apple.storekit.client-override
com.apple.storekit.request-data
com.apple.developer.storekit.request-data
NSAdvertisingAttributionReportEndpoint
%@(%ld)
In-app purchases not allowed in App Clip
v32@?0@"NSDictionary"8@"NSDictionary"16@"NSError"24
MICRO_PAYMENTS_RESTRICTED_TITLE
MICRO_PAYMENTS_RESTRICTED_BODY
Payment has no identifier or quantity
Payment has request data but client is not entitled
StoreKit
Operation Canceled
In-app purchases not allowed on this device
v16@?0@"NSDictionary"8
expired
revoked
v24@?0@"NSString"8@"NSString"16
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
This API is not supported on the simulator
com.apple.developer.arcade-operations
itms-ui
pbid
paid
offercodes
Info.plist
No client available to handled authenticate request
No client available to handled server dialog
com.apple.AppStoreFoundation.startup
DELETE FROM iap_purchase_intents WHERE bundle_id = ?
UPDATE INTO iap_purchase_intents (timestamp) VALUES (timestamp()) WHERE bundle_id = ?
v24@?0@"AMSEngagementResult"8@"NSError"16
1.2.11
com.apple.appstored.StoreKit.Messages
B16@?0@"StoreKitMessagesDatabaseTransaction"8
v16@?0@"StoreKitMessagesDatabaseSession"8
v32@?0@"StoreKitRevocationInfo"8Q16^B24
Account
Background
Manual
Migration
Restore
Synchronize
Update All
com.apple.appstored.AssetSession
v16@?0@"AMSLazyPromise"8
Data consumer failed to process data within allotted time
com.apple.appstored.AssetTask:%@-%lu
Expected zero resumption offset
Asset URL has expired
Invalid status code `%ld`
AppStoreDaemon
EnableLocalSessions
ephemeral
background
 (%@)
Data consumer is missing
v32@?0^{__CFURL=}8^{__CFDictionary=}16^{__CFError=}24
Apple-Download-Type
EnableDownloadBoosting
com.apple.appstored.AppStoreService
Could not find App Store
Existing coordinators:
  %@
  ~ END ~
Active installations:
  (%3ld) %@
v32@?0@"AppInstall"8Q16^B24
v24@?0@"XDCMessage"8@"NSError"16
http://www.apple.com
Some app
https://xp.apple.com/report/2/xp_app_buy?clientId=0&sf=143441&adamId=123
installs
appconduitd
isConnected
isConstrained
isExpensive
port
optimalDownloadWindowsCleared
Diagnostic
com.apple.appstored.CellularMonitor
CellularStateDidChangeNotification
CACHE_DELETE_VOLUME
CACHE_DELETE_AMOUNT
CACHE_DELETE_URGENCY
v16@?0r^{__CFDictionary=}8
B16@?0@"InAppPurchaseIntentDatabaseTransaction"8
v16@?0@"InAppPurchaseIntentDatabaseSession"8
-shm
-wal
com.apple.appstored.XPCRequestToken.%@.%@
[%@]
Unsupported request
Failure occurred but no error was provided
Installation Canceled
app_install
COUNT(1)
MAX(app_install.priority)
MIN(app_install.priority)
alt_dsid
alternate_icon_name
apple_id
approved
arcade
artwork_url
auto_install_override
automatic_type
bootstrapped
bundle_name
bundle_url
cancel_download_url
cancel_if_duplicate
client_id
client_type
companion_bundle_id
coordinator_id
coordinator_intent
device_based_vpp
downloader_id
download_path
external_id
failure_error
gizmo_pairing_id
last_start_date
launch_prohibited
log_code
messages_artwork_url
metrics_install_type
optimal_download_start
order_index
phase
policy
post_metrics
placeholder_entitlements
quarantine
recovery_count
remote_install
restore_retry_count
restore_state
restore_type
source_type
store_cohort
store_metadata
supports_32bit_only
supress_dialogs
update_type
watch_type
IFNULL(app_install.phase, 10)
IFNULL(app_install.priority, 0)
IFNULL(app_install.bootstrapped, 2)
errorDomain
errorCode
errorDescription
SP_%@
SAVEPOINT %@
RELEASE SAVEPOINT %@
ROLLBACK TRANSACTION TO SAVEPOINT %@
ROLLBACK TRANSACTION
COMMIT TRANSACTION
i16@?0^B8
BEGIN DEFERRED TRANSACTION
Statement from a different connection
databases/%ld/items/edit
com.apple.appstored.Environment
storeSystem.db
storeUser.db
CONFIRM_EXTERNAL_MANIFEST_DOWNLOAD_BODY
CONFIRM_EXTERNAL_MANIFEST_DOWNLOAD_BODY_SPECIFIC
INSTALL
EXTERNAL_MANIFEST_ALREADY_INSTALLED_ERROR_TITLE
EXTERNAL_MANIFEST_ALREADY_INSTALLED_SAME_NAME_ERROR_BODY
EXTERNAL_MANIFEST_ALREADY_INSTALLED_OTHER_NAME_ERROR_BODY
EXTERNAL_MANIFEST_SSL_ERROR_%@
EXTERNAL_MANIFEST_ERROR_FORMAT_%@
UPPManifestDialogActionCancel
UPPManifestDialogActionInstall
/System/Library/PrivateFrameworks/WebKitLegacy.framework/WebKitLegacy
account_events
active_end_time
active_start_time
com.apple.aps.appstored
Identity has already been assumed
Identity has not yet been assumed
Invalid
com.apple.appstored-testflight
com.apple.storekit
No string representation for topic: %ld
(%@) %@: %@
sandboxReceipt
signIn
Prompt For Account
PROMPT_FOR_ACCOUNT_SIGN_IN_PURCHASE
PROMPT_FOR_ACCOUNT_SIGN_IN_WITH_APPLE_ID_%@
PROMPT_FOR_ACCOUNT_SIGN_IN
An unknown error occurred
PROMPT_FOR_ACCOUNT_APPLE_ID
PROMPT_FOR_ACCOUNT_PASSWORD
User canceled authentication
RK/%@
Not available on the simulator
%@ - RefetchKeybag: No iTunes account available
%@ - RefetchKeybag: New account from store metadata
AUTHORIZE_SIGN_IN_TO_LAUNCH_MESSAGE_%@
AUTHORIZE_SIGN_IN_TITLE
AUTHORIZE_SIGN_IN_SIGN_IN_BUTTON
Dialog request failed without an error
User canceled dialog request
Authenticate result didn't contain an account
com.apple.appstored.DecryptDataConsumer
No processor was set when truncating
CREATE TABLE IF NOT EXISTS storekit_messages (dsid INTEGER, bundle_id TEXT, status INTEGER, UNIQUE(dsid, bundle_id) ON CONFLICT REPLACE);
CREATE TABLE IF NOT EXISTS storekit_revocations (dsid INTEGER, bundle_id TEXT, product_id TEXT, UNIQUE(dsid, bundle_id, product_id) ON CONFLICT REPLACE);
com.apple.MobileAsset.SystemApp
%K == %@
%K IN %@
@16@?0@"ASAsset"8
com.apple.appstored.PushConnection
com.apple.appstored.PushConnectionTaskQueue
songId
download-id
v16@?0@"AMSURLRequest"8
v16@?0@"AMSURLResult"8
com.apple.appstored.ActivityManager.callout
com.apple.appstored.ActivityManager.dispatch
CrossfirePost
ArcadePostSummary
ArcadePostPayout
ArcadePayoutReset
DNUPost
Restore Retry
Sbsync
TestFlightFeedback
Updates
Optimal Download Window
Daily
com.apple.appstored.PostAnalytics
com.apple.appstored.ArcadePostSummary
com.apple.appstored.ArcadePostPO
com.apple.appstored.ArcadeResetPO
com.apple.appstored.PostDnu
com.apple.appstored.RestoreRetry
com.apple.appstored.Sbsync
com.apple.appstored.TestFlightFeedback
com.apple.appstored.AutoUpdates
com.apple.appstored.OptimalDownloadWindow
com.apple.appstored.Daily
Startup
com.apple.appstored.%@
Cannot execute asynchronous tasks inline
ActiveDSID
AutoUpdatesEnabled
AutoDownloadsEnabled
AutoSettingsData
com.apple.appstored.NanoSettingsStateChanged
WatchSettingsManagerSettingsChangedExternallyNotification
com.apple.appstored.WatchSettingsManager.callout
com.apple.appstored.WatchSettingsManager.dispatch
enabled-media-types-url
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/enabledMediaTypes
register-media-types-url
https://buy.itunes.apple.com/WebObjects/MZFinance.woa/wa/registerMediaTypes
Launching too fast, throttling request
Environment: %@
      Token: %@
   Messages:
         - %@
   Messages: <none>
CONSTRAINED_PROMPT_TITLE
CONSTRAINED_PROMPT_BODY_UPDATES_%@
CONSTRAINED_PROMPT_BUTTON_UPDATE_ALL
constrainedNetworkUpdates
CONSTRAINED_PROMPT_BODY_DOWNLOAD_%@_%@
CONSTRAINED_PROMPT_BODY_DOWNLOAD_%@
CONSTRAINED_PROMPT_BUTTON_DOWNLOAD
constrainedNetworkDownload
CONSTRAINED_PROMPT_BODY_UPDATE_%@_%@
CONSTRAINED_PROMPT_BODY_UPDATE_%@
CONSTRAINED_PROMPT_BUTTON_UPDATE
constrainedNetworkUpdate
CONSTRAINED_PROMPT_BUTTON_CANCEL
LowDataModePromptActionCancel
LowDataModePromptActionDownload
com.apple.appstored.URLSessionManager
SERVER_AUTHENTICATION_USERNAME
SERVER_AUTHENTICATION_PASSWORD
AuthenticationChallengeDialogActionCancel
AuthenticationChallengeDialogActionOkay
download-queue-item-count
more
endId
startId
v16@?0@"InAppDownloadStatus"8
appPlatform
autodownload
prior
system
userAdded
current_apps_crossfire
Please provide one or more restore items to restore
failed-items
customerMessage
device-name
store-front-id
software-external-version-identifier
ownerDsid
text/xml
devices
targets
os-version
%ld:%@:%@
<VariantDescriptor %p>: {%@}
@16@?0@"VariantDescriptor"8
q24@?0@"VariantDescriptor"8@"VariantDescriptor"16
<VariantDescriptor %p>: {Universal}
{ bundleID: %@ itemID: %@ evid: %@ storefront: %@ account: %@ }
Device Security
com.apple.appstored.activities.DeviceSecurity
   - %@
   - <no transactions>
@"<ASDDiagnosticServiceProtocol>"8@?0
@"<ASDIAPHistoryServiceProtocol>"8@?0
@"<ASDInstallationServiceProtocol>"8@?0
@"<ASDAppLibraryServiceProtocol>"8@?0
@"<ASDPurchaseServiceProtocol>"8@?0
@"<ASDPurchaseHistoryServiceProtocol>"8@?0
@"<ASDRepairServiceProtocol>"8@?0
@"<ASDUpdatesServiceProtocol>"8@?0
@"<ASDCrossfireServiceProtocol>"8@?0
com.apple.storekit.configuration.xpc
EnablePurchaseAccountFallback
itms-apps://?action=lookup&ids=%@
Open failed, but SPI doesn't provide an error
duAnonymousPings
cancel-purchase-batch
dsPersonId
songList
metrics
page-type
preorder-success
optimalDownloadPeriod
durationInMinutes
trigger-download
@"NSURL"16@?0@"NSString"8
com.apple.itunes.extended-media-kind
'%@:%%d'
{ bundleID: %@ sessionReporterKey: %@ lastRefresh: %@ expired: %d }
%@/%lld
@16@?0@"LSApplicationExtensionRecord"8
v24@?0@"LSApplicationRecord"8^B16
%@: (%@, %@, %lld:%lld %@) 
<XDCDevice: %p pairingID = %@>
%@ { bundleID: %@ itemID: %@ evid: %@ timestamp: %@ cohort: %@ }
refSource
refType
Aggregate Crashes
Aggregate Installs
Aggregate Launches
%@:%ld:%ld:%lld:%@:%@:%@
%@:%ld
PROXY_AUTHENTICATION_MESSAGE_%@_%@
SERVER_AUTHENTICATION_MESSAGE_%@
SECURE_AUTH
INSECURE_AUTH
PROXY_AUTHENTICATION_TITLE
SERVER_AUTHENTICATION_TITLE
An unknown failure occured, canceling batch
An unknown failure occured, canceling purchase
Cannot mix machine based and non-machine based purchases
The account on the paired device needs to be authenticated
com.apple.appstoreagent
Invalid hash '%@' expected '%@'
More data was received than there are hashes to verify
Receipt
Invalid receipt data
xToken
want-expired
want-revoked
want-vpp
software-version-external-identifier
version-id
com.apple.appstored.defaultschange
B16@?0@"InAppPromotionDatabaseTransaction"8
v16@?0@"InAppPromotionDatabaseSession"8
com.apple.AppStoreFoundation.TransactionStore
Transactions
until
com.apple.appstored.StoreKit.ClientOverride
StoreDemoMode
com.apple.demo-settings
Xcode
iOSAppOnMac
SK%@:%@:%@/%@/%@
bundle-identifier
md5s
md5-size
sha256
sha256s
sha256-size
variantIds
variantDescriptors
messages-display-image
asset-pack-manifest
software-package
software-receipt
software-SINF
display-image
Metadata not found
Basejumper does not have assets for this build. Please try again later.
Unable to connect to basejumper. Make sure you are on an internal network or have VPN on-demand enabled.
An unknown error occurred. Make sure you are on an internal network or have VPN on-demand enabled.
 (%@: %ld)
Internal Only
systemAppBootstrapInternal
app_done
machine_based
request_url
User Request
SKServiceDelegateLocalConnection
%@ received a connection from itself
date
EEE, dd MMM yyyy HH:mm:ss zzz
v32@?0@"NSArray"8B16B20@"NSError"24
v28@?0@"NSArray"8B16@"NSError"20
IAPHistory
com.apple.appstored.iap-info
(%@)
daap.databasesongs
dmap.listing
dmap.deletedidlisting
dmap.listingitem
com.apple.itunes.item-flavor-listing
com.apple.itunes.bundle-identifier
com.apple.itunes.store.software-content-rating
daap.songdatepurchased
daap.songartist
com.apple.itunes.store.family-shareable
com.apple.itunes.store.first-party-updatable
com.apple.itunes.store.has-messages-extension
dmap.itemhidden
com.apple.itunes.store.is-hidden-from-springboard
com.apple.itunes.cloud-artwork-template-url
com.apple.itunes.store.software-is-32-bit-only
com.apple.itunes.store.is-preorder
com.apple.itunes.long-item-name
com.apple.itunes.store.oval-artwork-url
com.apple.itunes.store.preflight-url
com.apple.itunes.store.product-url
com.apple.itunes.item-redownload-param-2
com.apple.itunes.store.app-required-capabilities-listing
com.apple.itunes.store.app-required-capabilities
com.apple.itunes.itms-songid
com.apple.itunes.supported-products
com.apple.itunes.cloud-purchased-token
dmap.longitemid
dmap.status
dmap.updatetype
dmap.serverrevision
com.apple.itunes.itms-genreid
daap.songgenre
com.apple.itunes.store.watch-app-delivered-in-ios-app
com.apple.itunes.store.watch-app-runs-independently
com.apple.itunes.store.watch-app-watch-only
com.apple.itunes.cloud-artwork-supports-layered-image
com.apple.itunes.cloud-artwork-has-p3
dmap.itemname
com.apple.itunes.circular-artwork-template-url
com.apple.itunes.store.opted-in-for-mac-os-eligibility
com.apple.itunes.store.currently-opted-in-for-mac-os-eligibility
B16@?0@"RequestThrottleRecord"8
Throttling request for %.0f seconds
Blocking non-silent authentication from silent presenter
Dialogs cannot be presented silently
Engagement cannot be presented silently
RequestPresenterWillPresentUINotification
com.apple.appstored.AnalyticsEvent
AnalyticsEventAction
com.apple.appstored.ProgressCache
remote progress
ROWID
SQLiteDidDeleteEntityNotification
SQLiteUserInfoKeyPersistentID
v32@?0@8@16^B24
+[%@ databaseTable] not implemented
SELECT 1 FROM %@ WHERE %@ = ? LIMIT 1;
 FROM 
.ROWID = ?;
SELECT 1 FROM 
 =  ? LIMIT 1;
UPDATE 
 SET 
 = ?
 = ?;
INSERT OR REPLACE INTO 
) VALUES (?
[%public}@] Error: %@
DELETE FROM %@ WHERE %@ = ?;
Unable to purchase discretionary item with no account
Unable to authenticate for purchase with dsID but no username
hasBeenAuthedForBuy
There is no active account on the paired device
Blocking sign in as there is no active account on the device
SIGN_IN_TO_APP_STORE_TITLE
SIGN_IN_ON_PAIRED_PHONE_TO_PURCHASE
Authenticating to recover missing iTunes account
SIGN_IN_TO_PURCHASE_ON_WATCH
application/x-apple-plist
No URL for download
Not enough space to download asset
sinfs
dpInfo
No hashes in download info
v32@?0q8q16q24
extractPKZip
Caches
app_cluster_mappings
cluster_id
cluster_version
launches_weight
usage_weight
app_install_remote
destination_id
Coordinator does not conform to IXCoordinatorWithAppAssetPromise
Expected app promise `%@` but instead found `%@`
Could not create an app data promise using %@
v16@?0@"ASDPurchaseResponse"8
v32@?0@"NSNumber"8@"NSArray"16^B24
PurchaseHistoryErrorDomain
PurchaseHistoryRequestOperationErrorDomain
com.apple.ASOctaneSupportXPCService
Subscription status response missing data
v32@?0@"NSString"8@16^B24
%@: %lld
DELETE FROM storekit_messages WHERE dsid = ? AND bundle_id = ?;
DELETE FROM storekit_revocations WHERE dsid = ? AND bundle_id = ?;
NSAllowsArbitraryLoads
discretionary-always
discretionary-inferred
inexpensive
phone
nolowdata
power
B32@?0@"AppInstall"8Q16^B24
Encountered invalid installation which was not really running
%@...
.()-
com.apple.appstored.AppUsageBaseManager.dispatch
tvOS
macOS
clip
0123456789
Simulator
AnalyticsDialogName
AnalyticsEventInfo
com.apple.appstored.dialog
actionName
dialogName
B24@?0@"NSString"8@?<@"NSDictionary"@?>16
destructive
uknown
com.apple.appstored.NetworkMonitor
path
v16@?0@"CSLSConnectionState"8
NetworkStateDidChangeNotification
com.apple.appstored.StorePushService
machineName
AM/%@
Server Error
v16@?0@"NSNumber"8
@"AMSPromise"16@?0@"AMSURLRequest"8
@"AMSPromise"16@?0@"NSNumber"8
Previous request was within %@s of this one
refetch
com.apple.appstored.PurchaseManager.dispatch
com.apple.appstored.PurchaseManager.taskQueue
com.apple.appstored.InstallationService
throttle
plist
app_events_crossfire
Apps uninstalled
v32@?0@"NSNumber"8@"AppUpdateMemoryEntity"16^B24
Download
Failed
Finished
Paused
Policy
Postamble
Preamble
Started
Waiting
Unknown (%ld)
Canceled by user request
Jettisoned to make room for higher priority installation
Paused by user request
Paused until install policy is fulfilled
Jettisoned due to elevated thermal pressure
none (0)
device security
bootstrapped installations
daemon start
finished installations
hydrate job
imported installations
non ordered restores completed
optimal download window reached
ordered restores completed
paused installations
diagnostics ping
prioritized
purchased
phase reset
resumed installations
upgrade to interactive
unknown (%lu)
ASDAuthenticateActiveAccount
uuid
CREATE TABLE IF NOT EXISTS app_done (pid INTEGER, account_id INTEGER, item_id INTEGER, machine_based INTEGER NOT NULL DEFAULT 0, request_url URL, transaction_id TEXT, PRIMARY KEY(pid));
CREATE TABLE IF NOT EXISTS app_install (pid INTEGER, account_id INTEGER, apple_id TEXT, arcade INTEGER NOT NULL DEFAULT 0, alt_dsid TEXT, alternate_icon_name TEXT, approved INTEGER NOT NULL DEFAULT 0, artwork_url URL, auto_install_override INTEGER NOT NULL DEFAULT 0, automatic_type INTEGER NOT NULL DEFAULT 0, bundle_id TEXT, bundle_name TEXT, bundle_url URL, bundle_version TEXT, bootstrapped INTEGER NOT NULL DEFAULT 2, cancel_download_url URL, cancel_if_duplicate INTEGER NOT NULL DEFAULT 0, companion_bundle_id TEXT, client_id TEXT, client_type INTEGER NOT NULL DEFAULT 0, coordinator_id UUID, coordinator_intent INTEGER NOT NULL DEFAULT 1, device_based_vpp INTEGER, downloader_id INTEGER, download_path TEXT, external_id UUID, external_order INTEGER, evid INTEGER, failure_error BLOB, gizmo_pairing_id UUID, has_messages_extension INTEGER NOT NULL DEFAULT 0, item_id INTEGER, last_start_date DATETIME, launch_prohibited INTEGER NOT NULL DEFAULT 0, log_code TEXT, messages_artwork_url URL, optimal_download_start INTEGER, metrics_install_type INTEGER NOT NULL DEFAULT 0, order_index INTEGER, phase INTEGER NOT NULL DEFAULT 10, policy JSON, post_metrics INTEGER NOT NULL DEFAULT 0, placeholder_entitlements BLOB, priority INTEGER NOT NULL DEFAULT 0, quarantine INTEGER NOT NULL DEFAULT 0, receipt BLOB, recovery_count INTEGER NOT NULL DEFAULT 0, redownload INTEGER NOT NULL DEFAULT 0, remote_install INTEGER NOT NULL DEFAULT 0, requires_rosetta INTEGER NOT NULL DEFAULT 0, restore_state INTEGER NOT NULL DEFAULT 0, restore_retry_count INTEGER NOT NULL DEFAULT 0, restore_type INTEGER NOT NULL DEFAULT 0, runs_on_apple_silicon INTEGER NOT NULL DEFAULT 1, runs_on_intel INTEGER NOT NULL DEFAULT 1,software_platform INTEGER NOT NULL DEFAULT 0, source_type INTEGER NOT NULL DEFAULT 0, storefront TEXT, store_cohort TEXT, store_metadata BLOB, supports_32bit_only INTEGER NOT NULL DEFAULT 0, supress_dialogs INTEGER NOT NULL DEFAULT 0, timestamp DATETIME DEFAULT (timestamp()), transaction_id TEXT, update_type INTEGER NOT NULL DEFAULT 0, vid UUID, vendor_name TEXT, watch_type INTEGER NOT NULL DEFAULT 0, PRIMARY KEY(pid));
CREATE TABLE IF NOT EXISTS app_install_remote (pid INTEGER, destination_id TEXT, external_id UUID, metadata BLOB, PRIMARY KEY(pid));
CREATE TABLE IF NOT EXISTS app_package (pid INTEGER, archive_type INTEGER NOT NULL DEFAULT 0, blocked INTEGER NOT NULL DEFAULT 0, bytes_offset INTEGER, bytes_remaining INTEGER, bytes_total INTEGER, clear_hash_array JSON, compression INTEGER NOT NULL DEFAULT 0, data_promise_id UUID, disk_usage INTEGER, dp_info BLOB, hash_array JSON, hash_size INTEGER, hash_type INTEGER, initial_odr_size INTEGER, locate_asset_cache INTEGER, odr_manifest_url URL, package_type INTEGER, package_url URL, parent_id UUID, provisioning_profiles JSON, request_count INTEGER DEFAULT 0, sinf BLOB, streaming_zip INTEGER, timestamp DATETIME DEFAULT (timestamp()), variant_id TEXT, PRIMARY KEY(pid));
DROP TABLE app_done
DROP TABLE app_install
DROP TABLE app_install_remote
DROP TABLE app_package
PurchaseHistory
databases/%ld/items
Purchase History Items
app_installs
Install complete
Updates complete
com.apple.PersonalizationManager.setupFollowingMigration
com.apple.appstored.CrossfireManager.switchMetrics
External request
DELETE FROM current_apps_crossfire;
DELETE FROM app_events_crossfire where is_temporary = 1;
Invalid context
Invalid context to get crossfire events
Post skipped for crossfire interval
Post Completed
Nothing to Post
DELETE FROM app_events_crossfire;
crossfireEnabled
com.apple.appstored.CrossfireManager.callout
com.apple.appstored.CrossfireManager.dispatch
%llu
storeItemID == %@
metadata.bundle-identifier
metadata.bundle-version
metadata.has-messages-extension
metadata.kind
metadata.launch-prohibited
metadata.platform-identifier
metadata.subtitle
metadata.title
thinned-assets
@"<NSCopying>"16@?0@"UPPManifestAsset"8
v32@?0@"UPPManifestAsset"8Q16^B24
com.apple.platform.watchos
Unable to determine account for content restore. Requested account: %@
Token failure (%@)
Metadata / Error for this item is missing in server response
Restore Batch
Unsupported 32-Bit application
Incompatible application
Missing required SINF
itemID is missing
app-receipt
artworkURL
artwork-urls
cancel-download-url
is-auto-download
is-purchased-redownload
messagesIconUrl
alternateIconName
bundleDisplayName
softwareVersionBundleId
bundleShortVersionString
UIRequiredDeviceCapabilities
softwareVersionExternalIdentifier
gameCenterEnabled
gameCenterEverEnabled
appleWatchEnabled
WKRunsIndependentlyOfCompanionApp
WKWatchOnly
itemId
iad-attribution
iad-conversion-date
iad-impression-date
is32BitOnly
nameTranscriptions
rating
label
rank
software-platform
subgenres
preflightPackageURL
redownload-params
thinned-app
%@: {bundleID = %@; itemID = %@; itemName = %@; EVID = %@}
%@.%@.%@
macos
Podcasts
Invalid segment
%@ - SubscriptionEntitlementsRequest
SubscriptionEntitlementsRequest
errorNumber
errorMessage
Unknown server error
entitlements
{ bundleID: %@ clusterID: %@ clusterVersion: %@ itemID: %@ launches weight: %@ usage weight: %@}
%@:%@
iTunesMetadata
Loading failed
Extended attribute is not available on this platform
%@ for '%@'
externalIDStrings
error
SELECT SUM(ap.bytes_total) FROM app_install AS ai LEFT JOIN app_package AS ap ON ai.pid = ap.parent_id WHERE ai.restore_type = 1 AND ap.package_type = 0
TargetDate
PostIntervalOverrideSeconds
RestoreItemKinds
RestoreStoreFrontIDs
RestoreAccountIDs
automaticDownloadKinds
AdPlatformsStatusConditionSetDate
AppUsageMigratedDB
CrossfirePostMetricsSamplingPercentageOverride
DiagnosticClockEnabled
DiagnosticClockOffset
AppUsageActorID
TasteProfileEnabled
AppUsageDailyPostCountOverride
AppUsageEnableMetricsForActorIDSession
AppUsageFlushIntervalOverride
AppUsageFlushTargetDate
AppUsageNextPostTargetDate
AppUsagePostMetricsSamplingPercentageOverride
AppUsageResetActorIDOverride
AppUsageResetActorIDTargetDate
AppUsageTaskGracePeriodOverride
AppUsageTaskSpreadPeriodOverride
AppUsageUseTestTopic
BadgeCount
KeepTemporaryFiles
MarketingDemoMode
BeagleApps
AnalyticsClientIDOverride
ArcadeRepairTimeout
ArcadeDefaultApp
ArcadeDeviceGUID
ArcadeDeviceID
ArcadeDeviceIDCreationDate
ArcadePayoutDeviceID
ArcadePayoutResetDate
ArcadeShouldRetryOptOut
ArcadeSubscriptionState
UseArcadeSwitchUser
OncePerBoot
PowerPluggedInOverride
UserAgentSuffix
RepairForceSbsync
AttemptedPreflightAccounts
FollowUpAccounts
RestoreSuppressTermsAndConditions
RestoreInstallsFailedWithCodeSigError
com.apple.itunesstored
PerformedPostRestoreUpdate
RestoreSoftFailureRetryDate
ManageSubsOnDeleteBlacklist
AllowStoreKitPaymentRequestData
AllowStoreKitPaymentWithRequestDataWithoutEntitlement
UseLegacyAPIForSKProductRequest
InstallAttributionPingbackDelay
InstallAttributionIgnoreSourceAppCheck
InstallAttributionShouldUseProxy
InstallAttributionShouldSendDevPingback
InstallAttributionDeveloperPingbackOverride
UpdateCleanupTime
LastUpdatesCheck
LastAutoUpdateCompletion
PreviouslyInstalledProvisionedApps
LastUpdatesPerform
UseFollowupsForRestoreFailures
vppExpiredApps
vppRevokedApps
AllowAutoDownloadOnCellular
AutomationRunning
EnableBatterySaverOnStartup
CellularSizeLimitOverride
AppClaimHistory
UpdateMigratorConfiguration
DaemonCommsSemaphore
JobApprovalDate
DisablePowerOnStartup
ExternalDownloadSkipATSCheck
ExternalManifestSkipLocalCheck
ExternalManifestSkipHTTPSCheck
InvalidBuildToolVersions
DownloadsScratchGarbageCollectionTime
JobCleanupTime
LastOSInstallDate
LastOSBuildVersion
MaxConcurrentJobCount
MaxConcurrentThermalLimitedJobCount
TransporterConfiguration
SkipManagedAppCheck
TestFlightFeedbackOverrides
ThermalCheckEnabled
UseLaunchCountsForAppUsage
UseModernFreeSpaceCheck
com.apple.appstored.restoreInstalls
Library/
Library/Caches/
Scratch
Documents/Persistence
Documents
Library/Caches
Library/Preferences
arcadeEnabled
Cache.db
fsCachedData
JFamilyCircle.plist
SoftwareMap
top_arcade_apps.plist
updates.plist
throttle.plist
v16@?0@"OctaneClientConnection"8
octaneClientUUID
v24@?0@"ACAccount"8@"NSArray"16
@"<NSCopying>"16@?0@"<UpdatableApp>"8
background 
v16@?0@"DiagnosticMessage"8
v32@?0@"StoreItem"8Q16^B24
com.apple.appstored.ThermalPressureMonitor
elevated
nominal
ThermalPressureStateDidChangeNotification
revision-number=%u&query=%@
transactionID
Authentication not supported
Silent authenticate attempt
Loud authenticate attempt
success
canceled
conduitConnection
conduitUnknown
invalidApplication
invalidPackage
invalidConsumer
invalidRequest
networkExpired
networkStatus
networkPolicy
networkRecovery
invalidCoordinator
deviceSecurity
deviceState
deviceStorage
ipcError
unknownFailure
circle
Family Info Lookup Failed
Unable load the family circle if there's no active account.
We failed to load the family info for the active account.
@"FamilyInfoLookupResult"16@?0^@8
We were unable to get the family cricle URL.
yyyy-MM-dd
com.apple.appstored.DispatchQueue.default
?&%+=;
%@=%@
&%@=%@
B32@?0@8Q16^B24
v32@?0@"<NSFastEnumeration>"8Q16^B24
v32@?0@8Q16^B24
Statement already finalized
app_sessionreporter_key
app_sessionreporter_key_repaired
clientEventId
clusters
collectionTime
cumulativeUserCount
dsId
eventTime
crashes
launches
uninstalls
playActivity
qualifyingActivity
externalVersionId
foregroundDuration
foregroundEvents
installationType
Retail
installType
subscriptionState
qualificationDuration
rangeStartTime
rangeEndTime
shortAppVersion
usageClientId
weekStartDate
<AppUsageMetricsEvent: %@>
isExecuting
isFinished
com.apple.appstored.XDCDeviceManager
v32@?0@"NSString"8@"XDCDevice"16^B24
init
userInfo
timestamp
tcr_numberForKey:
tcr_integerValueForKey:missingValue:
isEqualToDictionary:
objectForKeyedSubscript:
isEqualToMessage:
hash
mutableCopy
setObject:forKeyedSubscript:
isValidJSONObject:
dataWithJSONObject:options:error:
initWithData:encoding:
description
lib_loggableDate
stringWithFormat:
initWithRawMessage:
accountID
actionType
numberForUserInfoKey:
valueForUserInfoKey:
isEqual:
.cxx_destruct
_userInfo
_timestamp
T@"NSNumber",R
TQ,R
T@"NSDictionary",R
isEqualToString:
initWithBundleIdentifier:
clientVersion
setClientVersion:
userAgentForProcessInfo:
currentProcess
initWithProcessInfo:
setClientName:
compile
lib_deviceIsAppleWatchM8
lib_deviceIsCapable:logKey:
lib_deviceIsWiFiCapable
lib_deviceUnlocked
lib_passcodeDisabled
lib_userAgentForClientID:
lib_userAgentForClientName:andClientVersion:
TB,R
_bagValueForKey:ofType:
_fetchBag
stringValue
URLWithString:
frozenBagValueWithKey:value:valueType:
sharedInstance
activePort
requestWithURL:cachePolicy:timeoutInterval:
sharedSession
JSONObjectWithData:options:error:
dataTaskWithRequest:completionHandler:
resume
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
T#,R
T@"NSString",R,C
arrayForKey:
boolForKey:
createSnapshotWithCompletion:
doubleForKey:
integerForKey:
stringForKey:
URLForKey:
dictionaryForKey:
isExpired
expirationDate
profile
profileVersion
URLForKey:account:
processInfo
expired
TB,R,N,GisExpired
T@"NSDate",R,N
T@"NSString",R,C,N
T@"AMSProcessInfo",R,C,N
invalidate
_dictionary
_dispatchQueue
_port
TB,R,N,GisExpired,Vexpired
T@"NSDate",R,N,VexpirationDate
T@"NSString",R,C,N,Vprofile
T@"NSString",R,C,N,VprofileVersion
predicateWithFormat:
_associatedReaderForObject:
_setAssociatedReader:forObject:
_predicateForKindOfClass:
_tcr_associateWithReader:
_tcr_associatedReader
arrayWithObjects:count:
connection
memoryEntityForPersistentID:withProperties:usingConnection:
_initWithInstall:package:
integerValueForProperty:
_writeReceipt
_recordBusinessMetrics
_setupAMSUniversalLinks
valueForProperty:
UUIDString
cleanupDownloadPathForID:
numberValueForProperty:
unsignedCharValue
sharedCoordinator
recordInstalledApps:installType:
currentDevice
isHRNMode
stringValueForProperty:
initWithProvider:
initWithBundle:
validLocationProxy
logKey
writeReceiptData:forApplication:logKey:error:
length
initWithApplicationProxy:
ams_sharedAccountStore
ams_activeiTunesAccount
setAccount:
setAttributeToAppStore:
setLogKey:
hasMIDBasedSINF
setReceiptFlags:
runSubTask:returningError:
updateUniversalLinks
success
addFinishBlock:
operationForInstallID:packageID:inSession:
main
_cleanDownloadFolder
_automaticType
_install
_restoreType
_sourceType
_updateType
_package
initWithTopic:
setPreventSampling:
setEventType:
setEventVersion:
_aim_defaultProperties
addPropertiesWithDictionary:
automationRunning
buildVersion
defaultBag
valueWithError:
copy
aim_eventWithPropertyValues:
ams_DSID
defaultCenter
_handleAppleIDDidChangeNotification:
addObserver:selector:name:object:
_currentAppMetadataCount
_writeCurrentAppMetadata
_intervalStartDateKeyForType:
setDate:forKey:
_supplementalStartDateKeyForType:
date
dateForKey:
initWithName:
_getAppEventsForType:logKey:completionBlock:
recordMetricsForType:completionBlock:
_postMetricsForType:completionBlock:
_recordDeletedBundleIDs:
_recordMetricsForType:completionBlock:
_resetMetricsForType:completionBlock:
_recordInstalledApps:installType:
dictionary
sharedDatabase
queryOnConnection:predicate:
defaultProperties
bundleID
setObject:forKey:
enumerateMemoryEntitiesWithProperties:usingBlock:
readUsingSession:
countOfEntities
_handlerForType:
shouldCollectMetrics
setActiveDSID:
setBaseLogKey:
_currentAppMetadata
setCurrentApps:
getAppEventsWithError:
_logKeyForMetricsType:
boolValue
isStoreOriginated
isProfileValidated
isAppClip
isInstalled
isOffloaded
lib_shortLogKey
postMetrics
componentsJoinedByString:
recordDeletedBundleIDs:
_writeAppMetadataForBundleIDs:
recordInstallEventsForBundleIDs:installType:
recordSupplementalAppMetricsEvents
resetMetrics
array
containsObject:
_isCandidateAppProxy:
initWithApplicationProxy:context:
storeItemID
addObject:
enumerateApplicationsOfType:usingBlock:
_writeAppMetadata:
importAppMetadata:class:error:
modifyUsingTransaction:
count
clearStartIntervalForAppUsageType:
recordSupplementalIntervalStartDateForAppUsageType:
recordStartDateForAppUsageType:
startDateForType:
supplementalStartDateForType:
updateStartDateForType:date:
T@"MetricsCoordinator",R,N
getAppEventsForType:logKey:completionBlock:
handleAppMayBeUninstalled:
postMetricsForType:completionBlock:
resetMetricsForType:completionBlock:
setupFollowingMigration
_activeAccountID
setValuesWithDictionary:
databaseEntityClass
copyWithZone:
initWithBundleID:productID:appName:productName:
appName
bundleId
productId
productName
T@"NSString",R,N
requestDate
timeIntervalSinceDate:
externalVersionID
decodeObjectOfClass:forKey:
encodeObject:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithDate:error:itemID:externalVersionID:
ageRelativeToDate:
matchesExternalVersionID:
error
itemID
_error
_externalVersionID
_itemID
_requestDate
T@"NSError",R,V_error
T@"NSString",R,V_externalVersionID
T@"NSString",R,V_itemID
T@"NSDate",R,V_requestDate
_getRequestPropertiesWithHandler:
initWithRequestProperties:
startWithCompletionHandler:
requestParameters
requestBodyData
requestMethod
requestWithMethod:URL:parameters:
resultWithError:
dataTaskWithRequestProperties:forRequest:withDelegate:andCompletionHandler:
dataForRequestWithError:
setRequestBodyData:
setClientInfo:
setDataEncoding:
setURL:
setURLKnownToBeTrusted:
setLogUUID:
setRequestMethod:
setRequestCachePolicy:
setValue:forRequestHeader:
contentType
clientInfo
lib_appProcessInfo
lib_newEphemeralSessionWithConfigurationInfo:andDelegate:
setResponseDecoder:
responseDecoder
registerRequestProperties:forTask:
initWithDataProvider:URL:
startWithDelegate:withCompletionHandler:
account
setAccountID:
logUUID
_dataProvider
_URL
_account
_accountID
_clientInfo
_logUUID
T@"ACAccount",&,V_account
Tq,V_accountID
T@"AMSProcessInfo",&,V_clientInfo
T@"NSString",&,V_logUUID
lastObject
doubleValue
removeObjectAtIndex:
numberWithDouble:
numberWithUnsignedLongLong:
_updateStatisticsFromSnapshots
objectAtIndexedSubscript:
longLongValue
initWithMaxValue:
estimatedTimeRemaining
setCurrentValue:
_times
_values
_canPause
_changeRate
_currentValue
_estimatedTimeRemaining
_maxValue
Td,R,N
externalIDString
initWithUUIDString:
data
destinationID
initWithMetadata:forDevice:
valueForHTTPHeaderField:
statusCode
asset_cdnUUID
asset_statusCode
T@"NSString",R
Tq,R
setInstallCode:
setInstallKey:
setQueueDate:
objectForKey:
integerValue
numberWithInteger:
failureReason
failureError
setFailureReason:
installCode
installKey
queueDate
serverTimeFromDate:
completionDate
storeVersionID
lib_sanitizedDescription
setCompletionDate:
_postIfAllowed
setFailureError:
_collectionChanceDefault
prepareMetricsProperties
copyMetricsDictionary
aim_postEventWithPropertyValues:
shouldPostMetrics
_collectionChance
initWithInstallKey:code:shouldPost:
setBundleID:
setStoreItemID:
setStoreVersionID:
postCompletion
postFailureWithError:reason:
_didPost
_shouldPost
T@"NSString",&
T@"NSDate",&
T@"NSError",&
T@"NSUUID",&
T@"NSNumber",&
isEqualToNumber:
objCType
isNotZero
isIntegerValue
notZero
TB,R,GisNotZero
TB,R,GisIntegerValue
applyBinding:atIndex:
SQLForEntityClass:
SQLJoinClausesForEntityClass:
property
joinClauseForProperty:
setWithObject:
_property
T@"NSString",R,N,V_property
initWithLongLong:
predicateWithProperty:equalToValue:
predicateWithProperty:value:comparisonType:
bindString:atPosition:
bindNumber:atPosition:
bindUUID:atPosition:
value
comparisonType
disambiguatedSQLForProperty:
_comparisonTypeString
predicateWithProperty:equalToLongLong:
_comparisonType
_value
Tq,R,N,V_comparisonType
T@,R,N,V_value
countByEnumeratingWithState:objects:count:
isNegative
values
query
stringWithString:
appendString:
copySelectSQLWithProperties:
containsPredicateWithProperty:values:
containsPredicateWithProperty:query:queryProperty:
doesNotContainPredicateWithProperty:values:
queryProperty
_negative
_query
_queryProperty
negative
TB,R,N,GisNegative,V_negative
T@"SQLiteQuery",R,N,V_query
T@"NSString",R,N,V_queryProperty
T@"NSArray",R,N,V_values
matchesNull
isNotNullPredicateWithProperty:
isNullPredicateWithProperty:
_matchesNull
TB,R,N,V_matchesNull
predicateMatchingAnyPredicates:
predicates
unionSet:
predicateMatchingAllPredicates:
predicateWithProperty:values:comparisonType:
_combinationOperation
_predicates
T@"NSArray",R,N,V_predicates
databaseTable
tcr_numberForKeyPath:
tcr_arrayForKey:
tcr_dictionaryEnumerator
tcr_stringForKey:
_segmentFromString:
initWithDictionary:forAppAdamID:segment:
segment
tcr_numberEnumerator
arrayWithArray:
initWithDictionary:
entitlementsForSegment:
consumedIntroOfferFamilyIds
T@"NSNumber",R,C
T@"NSDictionary",R,C,V_dictionary
initWithOctane
initWithSandbox:
_keySet
registerBagKeySet:forProfile:profileVersion:
setAccountMediaType:
bagForProfile:profileVersion:processInfo:
initWithBagValue:bagKey:
bagKeySet
addBagKey:valueType:
addBagKey:valueType:defaultValue:
octaneBag
sandboxBag
adoptProductsURL
adoptionEligibilityURL
unadoptURL
T@"AMSBagValue",R
appUsageFlushIntervalSeconds
T@"URLBagMemoizedValue",R
arcadeSubscriptionGroupIdentifier
autoUpdateReloadIntervalSeconds
autoUpdateReloadIntervalCellular
deltaIncompatibleBuildToolVersions
invalidBuildToolVersions
drmRecovery
crossfirePostIntervalSeconds
crossfireSamplingPercentage
crossfireIncludeLaunches
odrURL
ownsCheckURL
mescalSignedActions
personalizedLookupURL
unpersonalizedLookupURL
appUsagePostGracePeriodSeconds
appUsagePostSpreadPeriodSeconds
appUsagePostsPerDay
appUsageResetActorIDFrequencySeconds
appUsageSamplingPercentage
clusterMappingURL
clusterMappingRefreshFrequencySeconds
IAPInfoBaseURL
IAPInfoForcedRefreshMinutes
IAPInfoDatabaseID
IAPInfoUpdatePollingFrequencySeconds
PurchaseHistoryBaseURL
PurchaseHistoryDatabaseID
PurchaseHistoryForcedRefreshMinutes
PurchaseHistoryPurchaseRefreshEnabled
PurchaseHistoryUpdatePollingFrequencySeconds
subscriptionEntitlementsRefreshIntervalInSeconds
subscriptionEntitlementsTimeout
subscriptionEntitlementsURL
T@"URLBagMemoizedValue",R,N
availableUpdatesRequestURL
doNotUpdateList
updateUsingOptimizedRequest
viewUpdatesRequestURL
v2UpdateSchedulingEnabled
updateProductContentType
updatesReloadInterval
updatesReloadIntervalCellular
allowedCustomBuyParams
appleIDLookupURL
countryCode2Char
countryCode3Char
createAppReceiptURL
disablePurchaseIntentNotifications
inAppPendingQueueURL
inAppPendingQueueCountURL
inAppTransactionDoneURL
inAppsMediaAPIHost
languageTag
installAttributionMaxCampaignNumber
installAttributionMaxImpressionsAge
installAttributionMaxLowFidelityParamsAge
installAttributionMaxParamsAge
installAttributionMaxPingbackAge
installAttributionMaxPingbackRetries
installAttributionLowFidelityCap
installAttributionStartEndWindow
installAttributionShouldUseProxy
installAttributionShouldSendDeveloperPingback
installAttributionPostbackProxyURL
manageSubscriptionsURL
productOffersURL
productOffersBatchSize
redeemCodeURL
refundRequestURL
renewVPPReceiptURL
restoreTransactionsURL
sandboxInAppsMediaAPIHost
StoreKitMessagesEndpointURL
subscriptionStatusMaxAge
subscriptionStatusURL
transactionReceiptsMaxAge
transactionReceiptsMaxCount
transactionReceiptsURL
useMediaWithLegacyClientRate
T@"AMSBagValue",R,N
automaticDownloadsURL
completeStoreDownloadURL
pendingAppsURL
addPushTypeURL
pushNotificationEnvironment
registerPushTokenURL
removePushTypeURL
hideableSystemApps
hideableSystemAppsForWatch
backoffDelays
backoffRandomRange
getImageUploadURLsURL
uploadFeedbackURL
testFlightExtensionEnabled
testFlightExtensionPushEnabled
testFlightExtensionSyncIntervalMinutes
testFlightExtensionSyncGracePeriodMinutes
watchRequestThrottle
watchSuppressDialogs
welcomeToAppStoreDelay
welcomeToAppStoreSample
welcomeToAppStoreTitle
welcomeToAppStoreMessage
welcomeToAppStoreLaterButton
welcomeToAppStoreRemindMe
welcomeToAppStoreDontRemindMe
welcomeToAppStoreActionButton
welcomeToAppStoreActionURL
T@"URLBag",R
storefront
authorizeURL
upToDateClaimURL
contentRestoreMaxItemCount
contentRestoreURL
lowDataPromptThreshold
arcadeLaunchTimeoutIntervalSeconds
ocelotDeviceIDDaysValid
ocelotPayoutQualifyingDurationSeconds
ocelotPostIntervalSeconds
ocelotPostPayoutIntervalSeconds
sbsyncProductionURL
sbsyncSandboxURL
sbsyncRefreshIntervalSeconds
switchArcadeUserFallbackURL
switchArcadeUserURL
enableMacOSCompatibleIOSApps
enableMacOSCompatibleIOSAppsForCarry
arcadeInSpotlightEnabled
bundleIDsToSkipManageSubsOnAppDelete
_bag
acceptVisitor:flags:
lib_pop
subpredicates
lib_popCount:
compoundPredicateType
sortDescriptorWithKey:ascending:
sortedArrayUsingDescriptors:
filterUsingPredicate:
initWithComplexity:usingBlock:
lib_push:
resultEnumeratorForPredicate:error:
initWithError:
visitPredicate:
visitPredicateExpression:
visitPredicateOperator:
initWithClassifier:
executeQueryWithPredicate:error:
_classifier
_stack
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
expressionType
keyPath
setAcceptableExpressionTypes:count:
setAcceptableKeyPaths:
validatePredicate:withError:
_acceptableExpressionTypes
_acceptableKeyPaths
_errors
_valid
terminateApplicationWithBundleIdentifier:
proxyForBundleID:
bundleURL
receiptFromBundleAtURL:
compare:
localizedName
vendorName
isVPPLicensed
isRevoked
bundleWithIdentifier:
localizedStringForKey:value:table:
localizedStringWithFormat:
productURLForAppWithID:
_presentSystemDialogWithTitle:dialogMessage:actionURL:
completeWithSuccess
requestWithTitle:message:
actionWithTitle:identifier:
addButtonAction:
sharedService
terminateApplication:forReason:andReport:withDescription:
dialogRequestWithTitle:dialogMessage:
initWithRequest:
present
completeWithError:
selectedActionIdentifier
defaultWorkspace
openURL:withOptions:error:
initWithBundleIdentifier:bundleURL:
bundleIdentifier
setBundleIdentifier:
setBundleURL:
_bundleIdentifier
_bundleURL
T@"NSString",&,N,V_bundleIdentifier
T@"NSURL",&,N,V_bundleURL
strongToWeakObjectsMapTable
initWithClient:
databasePathForBundleID:error:
setMaxConcurrentOperationCount:
initWithDatabasePath:
initWithConnectionOptions:
initWithDatabase:
client
generateLogKey:apiVersion:
type
contextWithBundleID:
getBoolValueForIdentifier:withContext:
setStyle:
setDefaultAction:
setButtonActions:
_manualSyncWithLogKey:completionHandler:
handleDialogRequest:resultHandler:
setProxyAppBundleID:
accountMediaType
setAuthenticationType:
setDebugReason:
initWithAccount:options:
initWithDSID:altDSID:username:options:
handleAuthenticateRequest:resultHandler:
clearTransactions
syncLock
lock
unlock
_syncTransactionsAndSubscriptionStatusWithReason:logKey:completionHandler:
databaseStore
removeReceiptsForBundleID:
removeStatusesForBundleID:
readQueue
enumerateCurrentReceiptsForProductID:bundleID:usingBlock:
_checkTransactionAgeAndSyncWithLogKey:completionHandler:
addOperationWithBlock:
enumerateReceiptsForProductID:bundleID:usingBlock:
enumerateUnfinishedTransactionReceiptsForBundleID:usingBlock:
isTransactionFinishedForID:bundleID:
lastUpdatedForBundleID:
setFinishedForTransactionID:bundleID:logKey:
subscriptionStatusForSubscriptionGroupID:bundleID:
dateByAddingTimeInterval:
_syncSubscriptionStatusWithReason:logKey:completionHandler:
_setTransactionInfo:unfinishedIDs:forRevision:logKey:containsSubscriptions:
accountTokenForBundleID:
currentAccountToken
setTransactionInfo:unfinishedIDs:forBundleID:logKey:containsSubscriptions:
setRevision:token:forBundleID:
reconcileUnfinishedTransactionIDs:forBundleID:logKey:
currentRevisionForBundleID:
initWithSubscriptionGroupID:reason:client:
statuses
setSubscriptionRenewalInfo:forGroupID:bundleID:logKey:
connectionForClient:
remoteObject
receivedStatuses:
setCompletionBlock:
syncQueue
addOperation:
_syncTransactionsWithReason:logKey:completionHandler:
initWithLocalRevision:reason:client:
receipts
unfinishedTransactionIDs
serverRevision
receivedTransactions:
more
managerForClient:
authenticateAndSyncWithCompletionHandler:
enumerateCurrentReceiptsForProductID:usingBlock:completionHandler:
enumerateReceiptsForProductID:usingBlock:completionHandler:
enumerateUnfinishedTransactionsUsingBlock:completionHandler:
isTransactionFinishedForID:
lastUpdated
setFinishedForTransactionID:
subscriptionStatusForSubscriptionGroupID:completionHandler:
setTransactionInfo:unfinishedIDs:forRevision:
syncReceiptsWithReason:completionHandler:
syncSubscriptionStatusWithReason:completionHandler:
_setUnfinishedForTransactionIDs:logKey:
_databaseStore
_client
_readQueue
_syncLock
_syncQueue
T@"InAppReceiptDatabaseStore",R,N,V_databaseStore
T@"StoreKitClient",R,N,V_client
T@"NSOperationQueue",R,N,V_readQueue
T@"NSLock",R,N,V_syncLock
T@"NSOperationQueue",R,N,V_syncQueue
removeObjectForKey:
setValue:forRequestParameter:
allocWithZone:
bagURL
setBagURL:
compressRequestBody
setCompressRequestBody:
KBSyncType
setKBSyncType:
requestCachePolicy
shouldAppendGUIDParameter
setShouldAppendGUIDParameter:
URLKnownToBeTrusted
dataEncoding
requestHeaders
setRequestHeaders:
setRequestParameters:
_compressRequestBody
_shouldAppendGUIDParameter
_URLKnownToBeTrusted
_bagURL
_KBSyncType
_requestCachePolicy
_requestBodyData
_requestMethod
_dataEncoding
_requestHeaders
_requestParameters
TB,V_compressRequestBody
T@"AMSBagValue",&,V_bagURL
Tq,V_dataEncoding
Tq,V_KBSyncType
TQ,V_requestCachePolicy
T@"NSData",C,V_requestBodyData
T@"NSDictionary",C,V_requestHeaders
Tq,V_requestMethod
T@"NSDictionary",C,V_requestParameters
TB,V_shouldAppendGUIDParameter
T@"NSURL",C,V_URL
TB,V_URLKnownToBeTrusted
systemDatabase
setSchemaName:
setSessionClass:
setTransactionClass:
anyOnConnection:predicate:
setValue:forProperty:
existsInDatabase
setUpdateState:forBundleIDs:logKey:
initWithPersistentID:onConnection:
enumeratePersistentIDsUsingBlock:
setUpdateState:usingPurchaseInfo:
currentSchemaVersion
migrateToVersion:usingBlock:
executeStatement:
executeOptionalStatement:
storeDescriptor
createOrMigrateStoreUsingSchema:
convertBackgroundUpdateToForeground:logKey:
finishAppUpdateForBundleID:withUpdateState:
resetUpdateWithBundleID:logKey:
initWithMachServiceName:
initWithCatalog:andListener:
setDelegate:
activeClientWithBundleID:
newClientForConnection:withCatalog:
interface
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
unregisterNotificationClient:
removeObject:
setInvalidationHandler:
registerNotificationClient:
newServerWithCatalog:forMachServiceName:
listener:shouldAcceptNewConnection:
activeClientWithProcessInfo:
_activeClients
_catalog
_listener
firstObject
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
code
_lib_deleteLastValidComponentOfPath:
fileExistsAtPath:
_lib_isFileSignedAtPath:withRequirement:basicCheck:
removeItemAtPath:error:
stringByDeletingLastPathComponent
lib_ensureDirectoryExistsAtPath:
lib_isAppleSignedFileAtPath:basicCheck:
lib_isDeveloperSignedFileAtPath:basicCheck:
lib_applicationsDirectory
memoryEntityClass
clipAffliateToken
clipAppType
clipCampaignToken
clipProviderToken
clipRefType
_checkDatabaseForDuplicates
persistentID
copyEvaluatorDownload
setAutomatic:
_reevaluateInstallationPolicyForDownload:
_prepareEntityForRestart:withInstallPolicy:phase:inTransaction:
isUserInitiated
isDiscretionary
_forceInteractive:
_enableProgressUI:
setStatus:
beginProgress:withReason:
userInitiateInstallID:
numberWithLongLong:
orderedSetWithObject:
stopInstallIDs:withReason:transaction:
setValuesOnInstallPolicy:
modifyInstallPolicyUsingBlock:
changeset
addSchedulerPollReason:
initWithDownload:
setSuppressDialogs:
initWithPurchaseInfo:
_bundleID
_purchaseInfo
removeAllObjects
objectAtIndex:
dictionaryRepresentation
numberWithInt:
numberWithBool:
addProvisioningProfile:
setAltDSID:
setAppleID:
setExternalIDString:
setRedownloadParams:
setArtworkURLString:
setItemName:
setMessagesArtworkURLString:
setPackageDPInfo:
setPackageSINF:
setPackageURLString:
setStoreCohort:
setStoreFront:
setVendorName:
setVariantID:
setBundleVersion:
setManifestURLString:
setBetaBuildGroupID:
provisioningProfileType
setType:
setHasType:
hasType
hasAltDSID
hasAppleID
hasBundleID
setDownloaderID:
setHasDownloaderID:
hasDownloaderID
hasExternalIDString
setExternalVersionID:
setHasExternalVersionID:
hasExternalVersionID
setItemID:
setHasItemID:
hasItemID
setPurchaserID:
setHasPurchaserID:
hasPurchaserID
hasRedownloadParams
hasArtworkURLString
setContainsMessagesExtension:
setHasContainsMessagesExtension:
hasContainsMessagesExtension
hasItemName
setLaunchProhibited:
setHasLaunchProhibited:
hasLaunchProhibited
hasMessagesArtworkURLString
hasPackageDPInfo
hasPackageSINF
hasPackageURLString
hasStoreCohort
hasStoreFront
hasVendorName
clearProvisioningProfiles
provisioningProfilesCount
provisioningProfileAtIndex:
hasVariantID
setSkipIfInstalled:
setHasSkipIfInstalled:
hasSkipIfInstalled
setIsBeta:
setHasIsBeta:
hasIsBeta
setIsSystemApp:
setHasIsSystemApp:
hasIsSystemApp
setIsStoreApp:
setHasIsStoreApp:
hasIsStoreApp
hasBundleVersion
hasManifestURLString
setHasSuppressDialogs:
hasSuppressDialogs
hasBetaBuildGroupID
readFrom:
writeTo:
mergeFrom:
altDSID
appleID
downloaderID
purchaserID
redownloadParams
artworkURLString
containsMessagesExtension
itemName
launchProhibited
messagesArtworkURLString
packageDPInfo
packageSINF
packageURLString
storeCohort
storeFront
provisioningProfiles
setProvisioningProfiles:
variantID
skipIfInstalled
isBeta
isSystemApp
isStoreApp
bundleVersion
manifestURLString
suppressDialogs
betaBuildGroupID
_downloaderID
_purchaserID
_altDSID
_appleID
_artworkURLString
_betaBuildGroupID
_bundleVersion
_externalIDString
_itemName
_manifestURLString
_messagesArtworkURLString
_packageDPInfo
_packageSINF
_packageURLString
_provisioningProfiles
_redownloadParams
_storeCohort
_storeFront
_type
_variantID
_vendorName
_containsMessagesExtension
_isBeta
_isStoreApp
_isSystemApp
_launchProhibited
_skipIfInstalled
_suppressDialogs
_has
TB,N
Ti,N,V_type
TB,R,N
T@"NSString",&,N,V_altDSID
T@"NSString",&,N,V_appleID
T@"NSString",&,N,V_bundleID
TQ,N,V_downloaderID
T@"NSString",&,N,V_externalIDString
TQ,N,V_externalVersionID
TQ,N,V_itemID
TQ,N,V_purchaserID
T@"NSString",&,N,V_redownloadParams
T@"NSString",&,N,V_artworkURLString
TB,N,V_containsMessagesExtension
T@"NSString",&,N,V_itemName
TB,N,V_launchProhibited
T@"NSString",&,N,V_messagesArtworkURLString
T@"NSData",&,N,V_packageDPInfo
T@"NSData",&,N,V_packageSINF
T@"NSString",&,N,V_packageURLString
T@"NSString",&,N,V_storeCohort
T@"NSString",&,N,V_storeFront
T@"NSString",&,N,V_vendorName
T@"NSMutableArray",&,N,V_provisioningProfiles
T@"NSString",&,N,V_variantID
TB,N,V_skipIfInstalled
TB,N,V_isBeta
TB,N,V_isSystemApp
TB,N,V_isStoreApp
T@"NSString",&,N,V_bundleVersion
T@"NSString",&,N,V_manifestURLString
TB,N,V_suppressDialogs
T@"NSString",&,N,V_betaBuildGroupID
productIdentifiers
sortedArrayUsingSelector:
appendFormat:
_requestBatches:error:
_clientType
componentsWithString:
_mediaPlatformString
apiVersion
queryItemWithName:value:
requestBundleID
setQueryItems:
componentsSeparatedByString:
uppercaseString
currentLocale
localeIdentifier
_mediaClientIdentifier
initWithClientIdentifier:bag:
initWithTokenService:bag:
initWithTokenService:
URLSession
setProtocolHandler:
setSession:
_buildMediaAPIURLWith:error:
requestWithComponents:
resultWithTimeout:error:
dataTaskPromiseWithRequest:
object
lib_stringByCopyingUTF8StringWithLength:
clipBundleID
storeExternalVersionID
autoupdatingCurrentLocale
ams_sharedAccountStoreForMediaType:
ams_localiTunesAccount
ams_storefrontForMediaType:
URLRequestEncoder
lowercaseString
alwaysUseLegacyAPIForStoreKitProductsRequest
_queryDictionary
_mediaAPIFetchWith:error:
_parseMediaProducts:
requestWithMethod:bagURL:parameters:
_parseLegacyToMedia:
_parseResponse:error:
addObjectsFromArray:
initWithCapacity:
tcr_boolForKey:
tcr_dictionaryForKey:
_localeIdentifier
tcr_boolForKey:missingValue:
stringByAppendingFormat:
initWithProductIdentifiers:client:apiVersion:
invalidIdentifiers
products
_logKey
_productIdentifiers
_apiVersion
_invalidIdentifiers
_products
T@"NSArray",R,N,V_productIdentifiers
Tq,R,N,V_apiVersion
T@"NSArray",R,N,V_invalidIdentifiers
T@"NSArray",R,N,V_products
requireUniversal
universalItemResponseWithDictionary:
installedExternalVersionID
setInstalledVersionID:
installedVariantID
setInstalledVariantID:
updateItemResponseWithDictionary:installedItem:
defaultItemResponseWithDictionary:
errorItemResponseWithError:accountID:
purchase_itemResponseFromDictionary:usingPurchaseInfo:
purchase_itemResponseWithError:usingPurchaseInfo:
_installWithXPCMetadata:
userInitiated
companionBundleID
lib_mapAndFilterUsingBlock:
initWithInstalls:
initWithInstall:
setUserInitiated:
setSuppressEvaluatorDialogs:
setPolicyBlock:
result
externalID
requestPollWithReason:
UUID
lib_canonicalAccountForAccount:
ams_altDSID
username
artworkURL
receipt
placeholderEntitlements
archivedDataWithRootObject:requiringSecureCoding:error:
messagesArtworkURL
hasMessagesExtension
isLaunchProhibited
_metadataWithXPCMetadata:
lib_setPropertiesWithAccount:
lib_databaseRepresentationError:
initWithPropertyValues:
setValue:forExternalProperty:
defaultInstallPolicy
requiresPowerPluggedIn
setRequiresPowerPluggedIn:
setInstallPolicy:
_packageWithXPCMetadata:
setPackages:
setArtistName:
setKind:
externalVersionIdentifier
setBetaExternalVersionIdentifier:
setSoftwareVersionBundleID:
setHasMessagesExtension:
initialODRSize
setInitialODRSize:
setStorefront:
lib_setPropertiesWithSINFData:
packageURL
packageCompression
_transcodeDataArray:
base64EncodedStringWithOptions:
taskWithXPCAppMetadata:forDevice:requestToken:
processedExternalIDs
_installs
_reportRemoteProgress
_requestToken
_processedExternalIDs
T@"NSArray",R,V_processedExternalIDs
_resultEnumeratorForComparisonPredicate:error:
resultsMatchingPredicate:error:
leftExpression
rightExpression
lib_constantValues
predicateOperatorType
lib_keyPath
_resultEnumeratorForKeyPath:matchingValues:error:
resultsWithBundleIDs:error:
resultsWithItemIDs:error:
initWithEvalulator:
_evaluator
setApp:
show
setShow:
_show
_app
T@"ASDPurchaseHistoryApp",&,N,V_app
TB,N,V_show
_initWithItems:account:client:
newContextWithItems:account:client:
items
_items
T@"NSArray",R,V_items
T@"ACAccount",R,V_account
T@"AMSProcessInfo",R,V_clientInfo
_diagnosticClockEnabled
defaultClock
diagnosticClockEnabled
makeClock
setExternalIDs:
externalIDStrings
setExternalIDStrings:
addExternalIDStrings:
externalIDs
addExternalIDs:
responseWithExternalIDs:
T@"NSArray",C,N
uuidValueForProperty:
perform
status
packages
_establishCoordinatorAndPlaceholderError:
failWithCoordinator:externalID:error:
importInstall:error:
installPolicy
setConstrainedResult:
setExpensiveResult:
setInterfaceMask:
constrainedResult
finishWithFinalPhase:
unionChangeset:
duplicateWithCoordinator:externalID:
successWithCoordinator:externalID:
install
coordinator
setCoordinator:
policyBlock
suppressEvaluatorDialogs
_externalID
_suppressEvaluatorDialogs
_userInitiated
_coordinator
_policyBlock
_result
T@"AppInstall",R,V_install
T@"IXAppInstallCoordinator",&,V_coordinator
T@"NSString",&,V_logKey
T@?,C,V_policyBlock
TB,V_suppressEvaluatorDialogs
TB,V_userInitiated
T@"AppInstallImportResult",R,V_result
_status
T@"IXAppInstallCoordinator",R,V_coordinator
T@"NSUUID",R,V_externalID
Tq,R,V_status
setValuesWithStoreItem:
initWithMemoryEntity:
copyDictionaryRepresentation
databaseID
bestPackageForInstallID:onConnection:
initWithDatabaseEntity:properties:
setClientID:
unsignedLongLongValue
bytes
setBytes:
isAutomatic
boolValueForProperty:
_valueDictionaryWithStoreItem:
assetFullPackage
initWithStoreAsset:
assetDeltaPackage
alternateIconName
bundleDisplayName
evid
appReceiptData
storeTransactionID
cancelDownloadURL
hasWatchApp
hasWatchOnlyApp
hasWatchIndependentApp
supports32BitOnly
isPurchasedRedownload
artistName
softwarePlatform
initWithStoreItem:
initWithSystemApplicationMetadata:
priority
bestPackageFromArray:
bestPackageOnConnection:withProperties:
cellularDownloadForPackage:
assetRequestReason
_packages
automatic
TB,R,GisAutomatic
T@"NSArray",C,V_packages
T@"AppInstallPolicy",C
allKeys
tcr_stringEnumerator
enumerateObjectsUsingBlock:
getRevokedProductsMap
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
lib_account
initWithConnection:
T@"SQLiteConnection",R
_connection
T@"SQLiteConnection",R,V_connection
_handleAccountStoreDidChangeNotification:
registerConsumer:forActionType:
_logKeyForSegment:logUUID:
_cachedAccountIdForSegment:logKey:
_verifyAccountForCachedSubscriptionEntitlementsForSegment:logKey:notifyInternal:notifyExternal:
removeObserver:name:object:
unregisterConsumerForActionType:
dealloc
_logKeyForSegment:
_cachedSubscriptionEntitlementsResponseForSegment:logKey:expired:
setSegment:
setToken:
setIgnoreCaches:
setNotifyExternal:
entitlements
resultFromCache
cacheExpired
_getSubscriptionEntitlementsForSubscriptionInfo:withResultHandler:
_markCachedSubscriptionEntitlementsAsExpiredForSegment:logKey:
_setCachedSubscriptionEntitlements:forAccountID:segment:notifyInternal:notifyExternal:
unsignedIntegerValue
markCachedSubscriptionEntitlementsAsExpiredForSegment:logKey:
internalRequestToken
setNotifyInternal:
_cachedSubscriptionEntitlementsDictionaryForSegment:logKey:
_cachedSubscriptionEntitlementsPathForSegment:logKey:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
currentIdentity
cachedDataPath
stringByAppendingPathComponent:
_hasHandlersWaitingForSegment:
_enqueueCompletionHandler:forSegment:
token
setEntitlements:
setResultFromCache:
setCacheExpired:
setError:
_finishHandlersForSegment:result:
_getSubscriptionEntitlementsResponseWithSubscriptionRequestInfo:withResultHandler:
activeAccount
ignoreCaches
defaultMonitor
isFsEntitlementsCompleteForBoot
initWithRequestToken:
setAllowPromptForAuth:
notifyInternal
notifyExternal
markFsEntitlementsCompleteForBoot
_setCachedSubscriptionEntitlementsDictionary:segment:logKey:notifyInternal:notifyExternal:
_notifyChangeForAppStoreWithSubscriptionEntitlementsDictionary:logKey:
defaultManager
_removeCachedSubscriptionEntitlementsForSegment:logKey:
dataWithPropertyList:format:options:error:
writeToFile:atomically:
_notifyChangeToSegment:logKey:subscriptionEntitlementsDictionary:notifyInternal:notifyExternal:
_persistEntitlementsDataToMemory:segment:logKey:
numberWithUnsignedInteger:
pushService:didReceiveMessage:
appStoreConsumedIntroOfferFamilyIdsWithResultHandler:
getSubscriptionEntitlementsForSegment:withToken:ignoreCaches:notifyInternal:withResultHandler:
getCachedSubscriptionEntitlementsForSegment:withToken:withResultHandler:
setCachedSubscriptionEntitlements:forAccountID:segment:
_cachedSubscriptionEntitlementsResponseForSegment:logKey:completionHander:
_readEntitlementsDataFromMemoryForSegment:
_clearEntitlementsDataFromMemoryForSegment:logKey:
_lastAccountID
_newsEntitlementsData
_appStoreEntitlementsData
_activityEntitlementsData
_musicEntitlementsData
_tvEntitlementsData
_iCloudEntitlementsData
_podcastEntitlementsData
_backgroundQueue
_completionHandlersBySegment
_ignoreCaches
_notifyExternal
_notifyInternal
_segment
_token
T@"NSString",C,V_logKey
TB,N,V_ignoreCaches
TB,N,V_notifyExternal
TB,N,V_notifyInternal
TQ,N,V_segment
T@"XPCRequestToken",&,V_token
_resultFromCache
_cacheExpired
_entitlements
T@"NSArray",C,N,V_entitlements
TB,N,V_resultFromCache
TB,N,V_cacheExpired
T@"NSError",&,N,V_error
setExternalID:
setDiscoveredUpdate:
setDisableBoosting:
setPriority:
setUpdateType:
setLogCode:
setPurchaseType:
setDiscretionary:
setPostMetrics:
buyParams
buyParamsWithString:
parentalControlsName
setParameter:forKey:
setBuyParams:
deviceIsAppleTV
sharedManager
isTVProviderApp:
setMachineBased:
parameterForKey:
setExpectedSoftwarePlatform:
expectedSoftwarePlatform
updateGeneratedProperties
ams_iTunesAccountWithDSID:
purchase_purchaseInfoForUpdateUserInitiated:
initWithData:
parse
numberWithUnsignedInt:
parserDidStart:
parser:didFinishWithState:
parserDidCancel:
parser:didFailWithError:
parser:shouldParseCode:
parser:shouldParseCodeAsContainer:
parser:didStartContainerCode:contentLength:
parser:didParseDataCode:bytes:contentLength:
parser:didEndContainerCode:
initWithResponseData:
parseMetadata
revision
_data
_hasParsedData
_revision
T@"NSNumber",R,V_revision
T@"NSNumber",R,V_status
installedVersionID
optimalDownloadWindow
setOptimalDownloadWindow:
_installedVariantID
_installedVersionID
_optimalDownloadWindow
T@"NSString",C,N,V_bundleID
T@"NSString",C,N,V_installedVariantID
T@"NSNumber",C,N,V_installedVersionID
T@"TimeWindow",C,N,V_optimalDownloadWindow
_writeReceipt:forApplication:logKey:error:
initWithBundleURL:
URLByDeletingLastPathComponent
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
writeToURL:options:error:
receiptURL
writeReceiptData:toURL:logKey:error:
extensionReceiptURLs
writeReceiptData:forBundleURL:logKey:error:
tcr_unsignedLongLongForKey:
enumeratePersistentIDsAndProperties:usingBlock:
initWithService:
addDelegate:queue:
devices
updateDevicesWithArray:
setTarget:
setSelector:
numberWithUnsignedShort:
_sendMessage:toDevice:expectsReply:withReplyHandler:
initWithProtobuf:messageType:
sendMessage:toDevice:
sendMessage:toDevice:withReplyHandler:
_handleErrorForIdentifier:error:
isResponse
incomingResponseIdentifier
_handleReplyForIdentifier:protobuf:fromID:
outgoingResponseIdentifier
_handleRequestWithIdentifier:protobuf:fromID:
postNotificationName:object:
copyIDSRepresentation
isReply
messageID
messageType
messagePayload
setWithObjects:
sendProtobuf:toDestinations:priority:options:identifier:error:
deviceForFromID:usingService:
initWithProtobuf:device:messageID:
target
selector
methodSignatureForSelector:
invocationWithMethodSignature:
setArgument:atIndex:
retainArguments
invokeWithTarget:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
addHandler:selector:forMessage:
sendProtobof:ofType:toDevice:
sendProtobuf:ofType:toDevice:withReplyHandler:
sendReply:toDevice:
delegate
_service
_queuedMessages
_messageHandlers
_delegate
T@"<XDCServiceDelegate>",W,V_delegate
currentRequestToken
initWithOptions:requestToken:
setCompletionHandler:
networkQueue
addTask:
performRefetch
defaultService
refreshKeybagWithReplyHandler:
repairAppWithOptions:replyHandler:
hasBagKeySetForConsumer:
addBagKeySet:forConsumer:
addRequiredBagKeysToAggregator:
generateAggregatedBagKeySet
setRepairedBundleIDs:
isBackground
repair:wantsToRelaunchApplication:
initWithTitle:message:
actionWithTitle:style:
presentDialogRequest:resultHandler:
repair:needsToReleaseBlockingCallerWithReason:
isOnDeviceAppInstallationAllowed
actionWithTitle:
identifier
openProductPageForStoreItemID:withCompletionHandler:
openWithCompletionHandler:
shouldAttemptToRepairApplication:options:logUUID:
_fairplayStatusForApplication:options:
T@"AMSBagKeySet",R,N
repairApplication:error:
repairedBundleIDs
fairPlayStatus
repairType
T@"NSArray",R,N
T@"<ApplicationRepairDelegate>",W,N
Ti,R,N
T@"NSString",&,N
initWithApplication:options:
_isSystemIntegrityProtected
_showInternetConnectionAlert
_showFamilyLeaveAlert:
clientIdentifierHeader
setClientIdentifierHeader:
_application
_discoveredFairPlayStatus
_lock
_options
_repairedBundleIDs
_clientIdentifierHeader
T@"NSString",C,N,V_clientIdentifierHeader
T@"NSArray",R,N,V_repairedBundleIDs
T@"<ApplicationRepairDelegate>",W,N,V_delegate
T@"NSString",&,N,V_logUUID
initWithUserID:bundleID:status:
initWithUserID:bundleID:productID:
messageForUserID:inApp:
revocationsForUserID:inApp:
initWithDatabaseStore:
allObjects
_handlePollEventWithReasons:
setName:
_didDeleteEntityNotification:
_resetBootstrappingInstallations
_registerPolicyStateMonitors
_scheduleNextOptimalDownloadWindow
_requestPollWithReason:
activeInstalls
tasks
isCancelled
bootstrapSourceType:enumerateUsingBlock:
scheduleUsingTransaction:
results
updateInstalls:
_stopPollTimer
bootstrapResetSourceType:withError:
_startPollTimer
lib_isBefore:
lib_dispatchTime
name
isElevated
jettisonActiveInstallationsToReduceActiveCountTo:forReason:
isConstrained
isExpensive
expensiveResult
_bootstrapSystemApps
_pollForPendingInstallations
_checkIfInstallShouldBeAllowedToStart:withPackage:
scheduleMaximumActiveCount:evaluateUsingBlock:
startedInstalls
dateValueForProperty:
pipeline
startInstallIDs:transaction:
activeInstallsCount
countForProperty:predicate:onConnection:
_handleMonitorStateDidChangeNotification:
predicateForActiveBootstrapWithSourceType:
minValueForProperty:predicate:onConnection:
dateWithTimeIntervalSinceReferenceDate:
registerActivity:activityShortName:scheduledDate:withReason:
unregisterActivity:
requiresDeviceSecurity
requiresTermination
requiresNetwork
isConnected
interfaceMask
copyCellularNetworkIdentityWithError:
evaluatorForIdentity:
evaluateForDownload:
interfaceType
isPowerPluggedIn
isLowPowerModeEnabled
requiresMigrationComplete
isDataMigrationComplete
isSetupComplete
currentStatus
_startDelayForRetryCount:
timeIntervalSinceNow
_configureFlapRetryTimerBeforeDate:
numberWithUnsignedLong:
dateWithTimeIntervalSinceNow:
_haltPollTimer
scheduleNextOptimalDownloadWindow
_activeInstallationDictionary
_runOnceAfterUnlockChecks
_flapRetryDate
_flapRetryTimer
_ignorePolicyNotifications
_pollReasons
_pollSource
_pollTimer
_pollTimerLimit
_retryCount
_bootstrapQueue
_unlockedOnce
initWithFormat:
transactionID
initWithTransactionID:client:
_transactionID
T@"NSString",R,N,V_transactionID
updateForBundleID:
setRefreshInstallID:
processPurchaseInfo:withCompletionHandler:
taskWithInstall:inSession:
_installID
_logCode
_valueDictionaryWithStoreAsset:
_valueDictionaryWithSystemAppLookupItem:
isDelta
archiveType
assetURL
bytesTotal
hashes
clearHashes
numberOfBytesToHash
isZipStreamable
sinf
dpInfo
expectedDiskspace
isLocallyCacheable
downloadOffset
downloadSize
isStreamableZip
initWithSystemAppLookupItem:
archiveSize
setArchiveSize:
diskSpaceNeeded
setDiskSpaceNeeded:
promiseType
setPromiseType:
referenceID
setReferenceID:
streamingZipOptions
setStreamingZipOptions:
transferPath
setTransferPath:
_archiveSize
_diskSpaceNeeded
_name
_promiseType
_referenceID
_streamingZipOptions
_transferPath
TQ,V_archiveSize
TQ,V_diskSpaceNeeded
T@"NSString",C,V_name
Tq,V_promiseType
T@"NSNumber",&,V_referenceID
T@"NSDictionary",C,V_streamingZipOptions
T@"NSString",C,V_transferPath
platformIdentifier
containsItemsForPlatform:
T@"NSArray",R
requiredProperties
substringToIndex:
batchLogKey
initWithCoordinatorTag:logCode:
initWithEntity:
setBatchLogKey:
logCode
_batchLogKey
T@"NSString",C,N,V_batchLogKey
T@"NSUUID",C,N,V_externalID
T@"NSNumber",C,N,V_itemID
T@"NSString",C,N,V_logCode
unarchivedObjectOfClass:fromData:error:
lib_setPropertiesWithStoreItem:
setDSPersonID:
setSourceApp:
referrerName
setReferrerApp:
referrerURL
setReferrerURL:
lib_setPropertiesWithSINFData:isVPP:
kind
setSoftwareVersionExternalIdentifier:
bundleShortVersion
setBundleShortVersionString:
genre
setGenre:
genreID
setGenreID:
subGenres
initWithGenre:genreID:
setSubGenres:
ratingLabel
setRatingLabel:
ratingRank
setRatingRank:
gameCenterEnabled
setGameCenterEnabled:
gameCenterEverEnabled
setGameCenterEverEnabled:
setIsAutoDownload:
purchaseDate
setPurchaseDate:
setPurchasedRedownload:
releaseDate
setReleaseDate:
iAdConversionString
setIAdConversionDate:
iAdImpressionString
setIAdImpressionDate:
iAdAttribution
setIAdAttribution:
nameTranscriptions
setNameTranscriptions:
lib_decryptPrivateMetadataWithError:
lib_encryptPrivateMetadataWithError:
lib_setCategoriesForGenreIDs:
lib_setPropertiesWithPurchaseInfo:
lib_updateMetadataForApplication:error:
lib_metadataFromDatabaseRepresentation:error:
lib_metadataWithStoreItem:
_lib_privateProperties
dictionaryWithCapacity:
initWithEnterpriseApps:isXDCRequest:requestToken:
manifestURL
scheme
lib_queryDictionary
initWithManifestURL:
setRequestToken:
hideUserPrompts
setShouldHideUserPrompts:
setManifestDigest:
addTasks:waitUntilFinished:
enumerateKeysAndObjectsUsingBlock:
_setProcessedExternalIDs:
taskWithXPCAppMetadata:requestToken:
_apps
_isXDCRequest
removeLastObject
subarrayWithRange:
removeObjectsInRange:
lib_dequeue
lib_queue:
rangeOfString:options:
valueOfClass:forKey:
substringFromIndex:
valueOfClass:forKeyPath:
_keyPathCache
_tcr_valueOfClass:forKey:
tcr_boolForKeyPath:missingValue:
initWithBase64EncodedString:options:
floatValue
scannerWithString:
scanInteger:
null
setNumberStyle:
numberFromString:
tcr_stringForKeyPath:
tcr_arrayForKeyPath:
tcr_boolForKeyPath:
tcr_dataForKey:
tcr_dataForKeyPath:
tcr_dateForKey:
tcr_dateForKeyPath:
tcr_dictionaryForKeyPath:
tcr_floatForKey:
tcr_integerValueForKey:
tcr_integerValueForKeyPath:
tcr_integerValueForKeyPath:missingValue:
tcr_nullForKey:
tcr_nullForKeyPath:
tcr_unsignedLongLongForKeyPath:
tcr_urlForKey:
tcr_urlForKeyPath:
clientType
updateType
isArcade
startTime
isRemoteInstall
metricsType
discoveredUpdate
refreshInstallID
setDatabaseID:
purchase_installForStoreItem:usingPurchaseInfo:error:
_currentClient
getMetricsEventsForType:withReplyHandler:
postMetricsEventsForType:withReplyHandler:
recordMetricsEventsForType:withReplyHandler:
resetMetricsEventsForType:withReplyHandler:
arrayWithCapacity:
connectionWithEnvironment:token:
addMessages:
copyOSStateDataWithTitle:
insertObject:atIndex:
initWithEnvironment:topic:
recordPushMessage:
_handle
_messageHistory
T@"NSData",C,V_token
lib_defaultUserAgent
clientID
monitorForBundleIdentifier:
isExpensiveOrCellular
isRoaming
dialogForDownload:roaming:
awaitDialogRequest:error:
cellularDownload
setCellularDownload:
cellularIdentity
setCellularIdentity:
evaluatorResult
_cellularDownload
_cellularIdentity
_evaluatorResult
T@"EvaluatorDownload",&,V_cellularDownload
T@"ASDCellularIdentity",&,V_cellularIdentity
Tq,R,V_evaluatorResult
timeIntervalSinceReferenceDate
bundlePath
initWithBundlePath:
lib_logUUID
addObserverForName:object:queue:usingBlock:
completionHandler
removeObserver:
_recordAnalytics:duration:fairPlayStatus:result:error:
relaunchOptions
launchApplicationWithOptions:completionHandler:
exitReason
domain
sendEventWithDictionary:topic:
_applicationRepair
_completionHandler
T@?,C,V_completionHandler
addedApps
setAddedApps:
removedApps
setRemovedApps:
isLast
setIsLast:
_isLast
_addedApps
_removedApps
T@"NSArray",&,V_addedApps
T@"NSArray",&,V_removedApps
TB,V_isLast
initWithCondition:
isUpdate
_continueParsing
lockWhenCondition:
unlockWithCondition:
condition
initWithBytes:length:encoding:
setContentRatingFlags:
dateWithTimeIntervalSince1970:
setDatePurchased:
setDeveloperName:
setFamilyShared:
setFirstParty:
setHidden:
setHiddenFromSpringboard:
setIconURLString:
setIs32BitOnly:
setIsPreorder:
setLongTitle:
setOvalIconURLString:
setPreflightPackageURL:
setProductURL:
setSupportsIPad:
setSupportsIPhone:
setSupportsMac:
setMediaKind:
setPurchaseToken:
_incrementBatchCount
setLockerItemID:
setGenreName:
setWatchAppDeliveredIniOSApp:
setWatchAppRunsIndependently:
setWatchOnly:
setSupportsLayeredImage:
setHasP3:
setCircularIconURLString:
setIsIOSBinaryMacOSCompatible:
setIsIOSBinaryMacOSAvailable:
setTitle:
setRequiredCapabilities:
nextBatch
_currentItem
_errorParsingItem
_currentBatchAdded
_currentBatchRemoved
_currentRequiredCapabilities
_currentContainerCode
_batchSize
_currentBatchCount
_parsingLock
_parsingQueue
_doneParsing
_isUpdate
T@"NSNumber",R,V_isUpdate
userDatabase
_beginObservingAccountChangeNotification
keepAliveWithName:
executeQuery:withError:
_getHideShowRequestContextToHideItem:forAccount:withError:
initWithBagContract:context:
updateWithContext:withToken:withReplyHandler:
startRequestWithCompletionHandler:
_getHideShowRequestContextToShowAllForAccount:withError:
commandWithPurchaseForAccountID:expectedItemID:
setReplyHandler:
_queueCommand:
_updateForAccountID:withContext:token:replyHandler:
commandWithPushNotificationForAccountID:serverRevision:
commandWithContext:forAccountID:
hashedDescription
_handleAccountChangedNotification
setStoreIDs:
setIsFirstParty:
setIsHidden:
_performNextQualifyingUpdateRequest
cancelWithReason:
shouldRunUsingDatabaseStore:
runUsingAccount:databaseStore:
initWithQueue:
thenPerform:orCatchError:onScheduler:
executeQuery:withReplyHandler:
setHidden:forStoreItemID:withToken:withReplyHandler:
showAllWithToken:withReplyHandler:
updateForAccountID:expectedItemID:withReplyHandler:
updateForAccountID:withContext:withToken:withReplyHandler:
_bagContract
_commandRunning
_commandStack
urlWithHeight:width:format:
urlWithHeight:width:cropStyle:format:
replaceCharactersInRange:withString:
initWithString:
height
width
urlWithHeight:width:
T@"NSURL",R
initOnScheduler:withExecutor:
initWithValue:
initWithState:result:
resultWithValue:
_invokeExecutor:onScheduler:
initWithValueBlock:errorBlock:scheduler:
notifyResolvedWithValue:
notifyRejectedWithError:
resolveWithValue:
rejectWithError:
raise:format:
scheduleBlock:
onScheduler:usingBlock:
promiseWithValue:
promiseWithError:
isResolved
alwaysPerform:onScheduler:
catchError:onScheduler:
mapUsingTransformer:onScheduler:
flatMapUsingTransformer:onScheduler:
joinWithPromise:
completionHandlerAdapter
_observers
_state
_stateLock
resolved
TB,R,GisResolved
T@"PromiseResult",R,V_result
_executor
_scheduler
initWithMachServiceName:forClients:delegate:
_handleAppMayBeUninstalledNotification:
uniqueIdentifier
activeInstallMatchingCoordinatorID:orMatchingBundleID:
installInfoForInstallID:
signpostID
lib_shortDescription
_reasonShouldBeTreatedAsCancelation:
installEvent
finishInstallID:withFinalPhase:
_errorIsCausedByMismatchedSINF:
_reportSINFMismatchError:forAppInstall:withTransaction:
failInstallID:withError:
endObservingCoordinator:
_coordinatorDidCompleteSuccessfully:forAppAtURL:
completeInstallID:
_reviewNetworkPolicyForInstallID:usingDownload:coordinator:
pauseInstallID:
setInstallPhase:forInstallID:
_applicationInstallsDidPrioritize:coordinator:
lib_walkUnderlyingErrorsUsingBlock:
activeInstallMatchingBundleID:
initForInstallMachineryWithBundleIdentifier:placeholder:error:
_activelyInstallingUpdateForBundleID:
isPlaceholder
cancelForReason:client:error:
valueForKey:
pauseWithError:
accessWasUnblocked
_pauseCoordinator:withLogKey:
coordinatorShouldPrioritize:
coordinatorShouldResume:
coordinatorShouldPause:
coordinator:configuredPromiseDidBeginFulfillment:
coordinatorShouldBeginRestoringUserData:
coordinatorDidInstallPlaceholder:
coordinatorDidInstallPlaceholder:atURL:
coordinatorDidInstallPlaceholder:forApplicationRecord:
coordinatorDidCompleteSuccessfully:
coordinatorDidCompleteSuccessfully:forAppAtURL:
coordinatorDidCompleteSuccessfully:forApplicationRecord:
coordinator:canceledWithReason:client:
shouldPrioritizeAppWithBundleID:
coordinatorDidRegisterForObservation:
coordinator:didUpdateProgress:forPhase:overallProgress:
coordinator:canceledWithReason:
promiseDidBeginFulfillmentWithIdentifier:
coordinator:configuredPromisePromiseDidBeginFulfillment:
beginObservingCoordinator:
_policyQueue
_installObserver
_installScheduler
_observedCoordinators
setRequiresNetwork:
initWithStartTime:endTime:
endTime
isEqualToPolicy:
setRequiresDeviceSecurity:
setRequiresMigrationComplete:
setRequiresTermination:
T@"TimeWindow",C
setEnvironment:
messagesType
hasEnvironment
hasToken
clearMessages
messagesCount
messagesAtIndex:
environment
messages
setMessages:
_environment
_messages
T@"NSString",&,N,V_environment
T@"NSString",&,N,V_token
T@"NSMutableArray",&,N,V_messages
finishInstallIDs:transaction:
lib_signpostId
responsibleClientID
_summaryEventForEntity:responsibleClientID:
lib_serverDialogID
setServerDialogID:
bestPackage
_shouldRetryFullUpdateForInstall:error:
restartInstallID:
failWithError:
addAppUpdateToFinish:withUpdateState:
_appForEntity:error:
notificationForFailedInstalls:
postNotification:
deleteFromDatabase
postProcessAutomaticUpdatesCompleted
activeRestores
postRestoreCompleted
importInstall:mustExist:error:
predicateForInstallFromSource:bundleID:itemID:error:
installPhase
getUUIDBytes:
propertyValues
initWithPropertyValues:onConnection:
setPackagesWithArray:
importInstall:
pauseInstallID:withPhase:forReason:
initWithBundleID:
setInstallError:
setResponsibleClientID:
finishHardFailInstalls:
importInstalls:
importRemoteIntalls:
prioritizeInstallID:
resumeInstallID:
_changeset
T@"AppInstallsDatabaseChangeset",R,V_changeset
fileURLWithPath:
initWithURL:
_readRecords
_dirtyRecords
_deleteRecords
allValues
indexesOfObjectsPassingTest:
enumerateObjectsAtIndexes:options:usingBlock:
removeItemAtURL:error:
dataWithContentsOfURL:options:error:
unarchivedObjectOfClasses:fromData:error:
_writeRecords
_deleteRecordsAtURL:error:
_readRecordsFromURL:error:
_writeRecords:toURL:error:
initWithPath:
addRecord:
deleteRecordForItemID:
deleteRecords
fetchRecordForItemID:
filterRecordsUsingBlock:
_url
_records
_timer
needsInitialMigration
clearMigrations
_boostrapWhenReady
migrationsLeft
_queueMigrationWithConfiguration:
enumerateUsingBlock:
_runMigrationsWhenReady
lastOSBuildVersion
hasMigrations
_setupMigrationFollowingMigratorComplete:
_loadBagAndPerformMigration
_performMigration
migratorType
willBeginMigratorType:
didCompleteMigratorType:
setLastOSBuildVersion:
recordOSMigrationDate
_queueMigration:
synchronize:
_queueMigration:persist:
copyConfiguration
writeConfiguration:
initWithConfiguration:
_handleNetworkStateDidChangeNotification:
migrationsNeeded
needsMigration
performMigration:clientID:
_configurationStore
_migrations
lib_sharedMetricsQueue
metricsContainerId
lib_sharedInstanceWithContainerId:
enqueueEvent:
initWithProductIdentifier:quantity:client:apiVersion:paymentDelegate:
_buyParams
hasPrefix:
ams_storefront
ams_localiTunesAccountForAccountMediaType:
bundleWithPath:
purchasesDisabledForAppClip
shouldContinueTransactionWithNewStorefront:replyBlock:
initWithPurchaseType:buyParams:
setAdditionalHeaders:
initWithBag:
productIdentifier
enquePurchases:
triggeredQueueCheck
checkStoreQueue:
componentsWithURL:resolvingAgainstBaseURL:
queryItems
responseDictionary
customBuyParams
setWithArray:
keyEnumerator
excludeReceiptFromRequest
standardQueryWithAuthentication:
quantity
requestData
applicationUsername
appAccountToken
partnerIdentifier
partnerTransactionIdentifier
simulateAskToBuy
discountIdentifier
discountKeyIdentifier
discountNonceString
discountSignature
discountTimestamp
operatingSystem
productVersion
hardwareModel
hardwareFamily
additionalBuyParams
initWithURL:allowPlaceholder:error:
iTunesMetadata
storeCohortWithError:
deviceVendorIdentifier
handleEngagementRequest:resultHandler:
handleAuthenticateRequest:purchase:purchaseQueue:completion:
handleDialogRequest:purchase:purchaseQueue:completion:
handleEngagementRequest:purchase:purchaseQueue:completion:
initWithBuyParams:client:apiVersion:paymentDelegate:
_authenticateWithClientInfo:error:
setAdditionalBuyParams:
setAppAccountToken:
setApplicationUsername:
setCustomBuyParams:
setDiscountIdentifier:
setDiscountKeyIdentifier:
setDiscountNonceString:
setDiscountSignature:
setDiscountTimestamp:
setPartnerIdentifier:
setPartnerTransactionIdentifier:
setRequestData:
setExcludeReceiptFromRequest:
forceAuthentication
setForceAuthentication:
hideConfirmation
setHideConfirmation:
privacyAcknowledgementRequired
setPrivacyAcknowledgementRequired:
setStoreOriginated:
setSimulateAskToBuy:
receiptInstallURL
setReceiptInstallURL:
transaction
setTransaction:
response
setResponse:
_purchaseQueue
_paymentDelegate
_excludeReceiptFromRequest
_forceAuthentication
_hideConfirmation
_privacyAcknowledgementRequired
_storeOriginated
_simulateAskToBuy
_productIdentifier
_quantity
_additionalBuyParams
_appAccountToken
_applicationUsername
_customBuyParams
_discountIdentifier
_discountKeyIdentifier
_discountNonceString
_discountSignature
_discountTimestamp
_partnerIdentifier
_partnerTransactionIdentifier
_requestData
_receiptInstallURL
_transaction
_response
T@"StoreKitClient",R,C,N,V_client
T@"NSString",R,N,V_logKey
T@"NSString",R,N,V_productIdentifier
TQ,R,N,V_quantity
T@"NSDictionary",&,N,V_additionalBuyParams
T@"NSString",&,N,V_appAccountToken
T@"NSString",&,N,V_applicationUsername
T@"NSDictionary",&,N,V_customBuyParams
T@"NSString",&,N,V_discountIdentifier
T@"NSString",&,N,V_discountKeyIdentifier
T@"NSString",&,N,V_discountNonceString
T@"NSString",&,N,V_discountSignature
T@"NSNumber",&,N,V_discountTimestamp
T@"NSString",&,N,V_partnerIdentifier
T@"NSString",&,N,V_partnerTransactionIdentifier
T@"NSData",&,N,V_requestData
TB,N,V_excludeReceiptFromRequest
TB,N,V_forceAuthentication
TB,N,V_hideConfirmation
TB,N,V_privacyAcknowledgementRequired
storeOriginated
TB,N,GisStoreOriginated,V_storeOriginated
TB,N,V_simulateAskToBuy
T@"NSURL",&,N,V_receiptInstallURL
T@"NSDictionary",&,N,V_transaction
T@"NSDictionary",&,N,V_response
orderedSet
launchesWeight
usageWeight
importClusterMappings:error:
importAccountEvent:
importAppEvents:class:error:
importAppMetricsEvents:error:
importAppUsageSessions:error:
T@"SQLiteConnection",R,N,V_connection
connectStartDate
connectEndDate
_dateIntervalFrom:to:
domainLookupStartDate
domainLookupEndDate
requestStartDate
requestEndDate
responseStartDate
responseEndDate
secureConnectionStartDate
secureConnectionEndDate
initWithStartDate:duration:
lib_connectInterval
lib_domainLookupInterval
lib_requestInterval
lib_responseInterval
lib_secureConnectionInterval
T@"NSDateInterval",R,C
shortNameForAppUsageType:
timeIntervalSince1970
lib_loggableShortDate
_metricsTopic
initWithAppUsageType:
appUsageUseTestTopic
contextForType:
appEventEntityClass
metadataEntityClass
recordIntervalStartDate
recordLaunchesIntervalStartDate
_setLogKey:
actorID
setActorID:
anonymousKatanaIDs
setAnonymousKatanaIDs:
appUsageType
currentOSVersion
setCurrentOSVersion:
deletedApps
setDeletedApps:
historyMap
setHistoryMap:
isTemporary
setIsTemporary:
keepAlive
setKeepAlive:
intervalStartDate
launchesStartDate
setLaunchesStartDate:
minimumRunningTime
setMinimumRunningTime:
nowDate
offset
setOffset:
payoutKatanaIDs
setPayoutKatanaIDs:
shouldResetPayoutDate
setShouldResetPayoutDate:
setStartTime:
subscribedAccount
setSubscribedAccount:
subscriptionInfo
setSubscriptionInfo:
subscriptionState
setSubscriptionState:
topic
setTopic:
addPriorApps
setAddPriorApps:
rescheduleActorIDReset
setRescheduleActorIDReset:
_isTemporary
_shouldResetPayoutDate
_addPriorApps
_rescheduleActorIDReset
_actorID
_anonymousKatanaIDs
_appUsageType
_currentOSVersion
_deletedApps
_historyMap
_keepAlive
_intervalStartDate
_launchesStartDate
_minimumRunningTime
_now
_nowDate
_offset
_payoutKatanaIDs
_startTime
_subscribedAccount
_subscriptionInfo
_subscriptionState
_topic
T@"NSString",C,N,V_actorID
TB,N,V_addPriorApps
T@"NSString",C,N,V_currentOSVersion
Tq,N,V_offset
TB,N,V_rescheduleActorIDReset
Tq,N,V_startTime
T@"NSString",C,N,V_topic
T@"NSDictionary",C,N,V_anonymousKatanaIDs
T#,R,N
Tq,R,N,V_appUsageType
T@"NSArray",C,N,V_deletedApps
T@"AppUsageInstallHistoryMap",N,V_historyMap
TB,N,V_isTemporary
T@"KeepAlive",&,N,V_keepAlive
T@"NSDate",R,N,V_intervalStartDate
T@"NSDate",C,N,V_launchesStartDate
Tq,N,V_minimumRunningTime
Tq,R,N,V_now
T@"NSDate",R,N,V_nowDate
T@"NSDictionary",C,N,V_payoutKatanaIDs
TB,N,V_shouldResetPayoutDate
T@"ACAccount",C,N,V_subscribedAccount
T@"NSDictionary",C,N,V_subscriptionInfo
T@"NSString",&,N,V_subscriptionState
TB,N,V_userInitiated
initWithQueueType:forReason:usingPurchaseInfo:purchaseBatch:
requestToken
isInternal
notificationClient
presenterWithNotificationClient:
initWithQueueType:forAccount:requestPresenter:logKey:
storeItems
_installedApplicationForStoreItem:
_purchaseInfoForStoreItem:withAccount:installedApplication:
initWithStoreItems:purchaseInfo:purchaseBatch:
setOverrideAutomaticType:
failPurchaseWithError:usingPurchaseInfo:
setInstalledExternalVersionID:
thinningVariantID
checkQueueForPurchaseUsingPurchaseInfo:purchaseBatch:
queueType
reason
purchaseBatch
purchaseInfo
_queueType
_reason
_purchaseBatch
Tq,R,N,V_queueType
Tq,R,N,V_reason
T@"PurchaseBatch",R,N,V_purchaseBatch
T@"PurchaseInfo",R,N,V_purchaseInfo
notifyDialogCompleteForPurchaseID:result:selectedButton:withResultHandler:
buyParameters
currentConnection
processIdentifier
initWithConnection:remoteObject:pid:
initWithResults:
_setBundleID:
_setPurchase:
_setSuccess:
initWithPurchaseResponseItems:
processPaymentWithBuyParamsString:reply:
processPurchases:requestToken:withReplyHandler:
initWithSuccess:error:
adopt:withReplyHandler:
adoptableBundleIdentifiersWithReplyHandler:
processPurchase:withReplyHandler:
startPurchase:withReplyHandler:
adoptionStatus:withReplyHandler:
unadoptWithReplyHandler:
dispatchQueue
setDispatchQueue:
adoptionInterface
setAdoptionInterface:
legacyPurchaseInterface
setLegacyPurchaseInterface:
purchaseInterface
setPurchaseInterface:
_adoptionInterface
_legacyPurchaseInterface
_purchaseInterface
T@"NSObject<OS_dispatch_queue>",&,V_dispatchQueue
T@"<AdoptionManagerInterface>",&,V_adoptionInterface
T@"<PurchaseManagerInterface>",&,V_legacyPurchaseInterface
T@"<PurchaseManagerInterface>",&,V_purchaseInterface
_importFromDictionary:
rawUpdateDictionary
_buyParams:
valueForExternalProperty:
_parentalControlsName:
currentVersionReleaseDate
_zuluDateFormatter
dateFromString:
_externalVersionIdentifier:
_deviceFamilies:
_parentalControlsRank:
setDateStyle:
setTimeStyle:
_appsAppleDictionary:
setDateFormat:
setLenient:
timeZoneForSecondsFromGMT:
setTimeZone:
initWithUpdateDictionary:
installDate
isCodeSignatureUpdate
isPerDevice
requiresRosetta
runsOnAppleSilicon
runsOnIntel
setOffloaded:
setBackground:
setCodeSignatureUpdate:
setInstallDate:
setMetricsData:
setPerDevice:
setUpdateState:
parentalControlsRank
_evid
_parentalControlsRank
_releaseDate
T@"NSString",R,N,V_bundleID
T@"NSNumber",R,N,V_evid
background
TB,N,GisBackground
T@"NSNumber",R,N,V_itemID
T@"NSDate",N
offloaded
TB,N,GisOffloaded
perDevice
TB,N,GisPerDevice
codeSignatureUpdate
TB,N,GisCodeSignatureUpdate
Tq,R,N,V_parentalControlsRank
Tq,R,N
T@"NSDate",R,N,V_releaseDate
appClip
TB,R,N,GisAppClip
cachedFamilyInfoWithLogKey:
familyMembers
_familyMembersSuppressDialogs:logKey:error:
iTunesDSID
isAskToBuyEnabled
fetchFamilyAccountIDsSuppressDialogs:
_bootstrapFamilyIfNeededSuppressDialogs:logKey:error:
performFamilyInfoLookup
_clearFamily
_updateFamilyInfoFollowingAccountChangeIfNeeded:
T@"FamilyManager",R,N
askToBuyEnabledForActiveAccountWithLogKey:lookupFamilyInfoIfNeeded:authIfNeeded:hadFamilyInfo:error:
familyAccountIDs
performMigration
_currentAccountDSID
_dispatch
_familyAccountIDs
_familyMembers
_lastFamilyCheck
_notificationQueue
_selector
_target
T:,V_selector
T@,W,V_target
Ti,N,V_status
_initWithVersion:
scanString:intoString:
canonicalString
isEqualToVersion:
anyVersion
isAnyVersion
_version
TB,R,GisAnyVersion
activeStartTime
activeEndTime
eventType
initWithACAccount:
userID
productID
_userID
_productID
T@"NSNumber",R,N,V_userID
T@"NSString",R,N,V_productID
defaultSession
arrayByAddingObjectsFromArray:
initWithInstallID:usingDictionary:
setPackageID:
recordInstallInfo:
_beginPreambleUsingInstallInfo:transaction:
_releaseTerminationAssertionUsingInstallInfo:
_beginPostambleUsingInstallInfo:transaction:
_beginPreambleForInstallsMatchingPredicate:transaction:
operation
cancel
assetPromise
removeInstallInfo:
installID
operationForInstallID:inSession:withCoordinator:
setOperation:
downloadResponse
_finishDownloadingOperationWithResponse:
packageID
operationForInstallID:packageID:inSession:withCoordinator:
installResponse
_finishInstallingOperationWithResponse:
_finishPostambleTaskWithInstallInfo:
initWithInstall:session:
_beginPreambleWithTask:transaction:
preambleResponse
_finishPreambleTaskWithResponse:
assetRequest
event
setDownloadEvent:
assetSize
requestCount
_beginInstallingUsingInstallInfo:transaction:
assetPromiseWithRequest:
setAssetPromise:
requestID
_handleAssetResult:error:usingInstallInfo:
_beginDownloadingUsingInstallInfo:transaction:
downloadProgress
removeObserver:forKeyPath:
setDownloadProgress:
downloadEvent
metrics
setTaskMetrics:
transactionMetrics
recordUpdateDownloadStartTime:andEndTime:forBundleID:
_postEventServiceInstallationEventWithPhase:forInstallInfo:entity:
_endEventServiceInstallationEventForInstallInfo:
numberWithLong:
_handleRecoveryResult:error:usingInstallInfo:
_isRecoverableNetworkError:
validateActiveInstallations
_assetSession
_operationQueue
_requestLookup
_initWithKnownApps:revision:forAccountID:requestingAccount:client:purchaseHistoryContext:
newContextWithKnownApps:revision:forAccountID:requestingAccount:client:purchaseHistoryContext:
requestingAccount
knownApps
purchaseHistoryContext
_requestingAccount
_knownApps
_purchaseHistoryContext
Tq,R,V_accountID
T@"ACAccount",R,V_requestingAccount
T@"NSArray",R,V_knownApps
TQ,R,V_purchaseHistoryContext
protectionSpace
authenticationMethod
serverTrust
credentialForTrust:
initWithAuthenticationChallenge:
dialogForAuthenticationChallenge:
textfieldValues
user
credentialWithUser:password:persistence:
_isExternalURL:
_isSecureURL:
_runWithURLRequest:
_showError:
thinnedAssetsCategorized
reverseObjectEnumerator
variantDescriptors
findCompatibleDescriptorFromArray:
variantIDs
lib_firstObjectPassingTest:
assetsCategorized
applicationType
initWithDomain:code:userInfo:
setScheme:
absoluteString
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
title
subtitle
_enterpriseInstallationURL:withDigest:
setEnterpriseInstallURL:
_determineCanonicalAssetsForExternalItem:matchedVariantDescriptor:
canonicalIdentifier
host
_newPackageForExternalAssets:withVariantDescriptor:
receiptData
_enterpriseInstallationAllowedForBundleID:withName:isValidHRNClient:error:
SHA256s
SHA256Size
MD5s
MD5Size
sinfData
_isSupportedPlatformIdentifier:
_newInstallForItem:manifestURL:manifestDigest:clientID:logKey:withError:
initWithDigestType:
updateWithData:
finalAndCompute
_newInstallsForUPPManifest:withError:
shouldHideUserPrompts
_showConfirmationPromptForInstalls:response:
_importInstalls:
initWithURL:logKey:
contentLength
copyEvaluatorDownloadWithPackage:
externalManifestSkipLocalCheck
caseInsensitiveCompare:
port
endpointWithHostname:port:
initWithEndpoint:parameters:
path
isLocal
externalManifestSkipHTTPSCheck
setCachePolicy:
setTimeoutInterval:
setHTTPUserAgent:
ephemeralSessionConfiguration
sessionWithConfiguration:delegate:delegateQueue:
_handleResponse:withData:
finishTasksAndInvalidate
requestForConfirmationWithManifestURL:firstName:totalCount:
deliverDialogRequest:withResultHandler:
requestForError:withManifestURL:logKey:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
initWithManifestURL:requestToken:shouldHideUserPrompts:
_requestManifestInstallationOnActivePairedWatch
manifestDigest
_downloadIDs
_manifestURL
_receivedDigest
_session
_shouldHideUserPrompts
_clientID
_manifestDigest
T@"NSString",&,V_clientID
T@"NSString",&,V_manifestDigest
T@"XPCRequestToken",&,V_requestToken
TB,V_shouldHideUserPrompts
_discardRequestPropertiesForTask:
resultFromResult:error:
task
_dequeueRequestPropertiesForTask:
_processResponseDictionary:withRequestProperties:
importKeybagWithData:error:
_importKeyBagFromDictionary:
discardRequestPropertiesForTask:
_requestProperties
numberWithUnsignedChar:
engagementData
setEngagementData:
payload
setPayload:
appMetricsEventTypeForAppEventType:
logTypeForEventType:
setData:
T@"NSDictionary",&
eventSubtype
isPosted
setEventSubtype:
setMetricsType:
setPosted:
T@"NSString",C,N
TC,N
Tq,N
T@"NSDictionary",C,N
T@"NSDate",R,N,V_timestamp
posted
TB,N,GisPosted
initWithDictionary:assetType:
_parseAssetDictionary:
descriptorForUniversal
variantDescriptor
isEqualToDescriptor:
isUniversal
isApplicableUpdateWithInstalledItemContext:
descriptorForString:
assetWithDictionary:
deltaAssetsWithDictionary:
selectAssetFromArray:usingStategy:
selectAssetFromArray:usingStategy:withDeltaForInstalledItem:
assetType
hashType
priorVariantIdentifiers
priorVersionEvid
_locallyCacheable
_zipStreamable
_archiveType
_assetType
_assetURL
_bytesTotal
_clearHashes
_dpInfo
_expectedDiskspace
_hashes
_hashType
_initialODRSize
_md5
_numberOfBytesToHash
_priorVariantIdentifiers
_priorVersionEvid
_sinf
_variantDescriptor
Tq,R,V_archiveType
Tq,R,V_assetType
T@"NSString",R,V_assetURL
T@"NSNumber",R,V_bytesTotal
T@"NSArray",R,V_clearHashes
delta
TB,R,GisDelta
T@"NSData",R,V_dpInfo
T@"NSNumber",R,V_expectedDiskspace
T@"NSArray",R,V_hashes
T@"NSNumber",R,V_hashType
T@"NSNumber",R,V_initialODRSize
T@"NSString",R,V_md5
locallyCacheable
TB,R,GisLocallyCacheable,V_locallyCacheable
T@"NSNumber",R,V_numberOfBytesToHash
T@"NSArray",R,V_priorVariantIdentifiers
T@"NSNumber",R,V_priorVersionEvid
T@"NSData",R,V_sinf
T@"NSString",R,V_variantID
T@"VariantDescriptor",R,V_variantDescriptor
zipStreamable
TB,R,GisZipStreamable,V_zipStreamable
hashArrayData
T@"NSData",R
options
setAllowServerDialogs:
debugReason
setOptions:
lib_isSandboxRequest
lib_forceSilentAuthentication
lib_setProxyAppBundleID:
prepareStatement:error:
executeStatement:error:bindings:
executePreparedStatement:error:bindings:
finalizePreparedStatement:error:
setPromotionInfo:forBundleID:error:
removePromotionInfoForBundleID:
isRemaining
_dialogForUpdateWithName:andSize:forRoaming:remaining:
_dialogForDownloadWithName:andSize:forRoaming:remaining:
formatSize:
setMessage:
_buttonActions
buttonActions
_bodyStringWithSize:remaining:
setIdentifier:
_hasWAPICapability
dialogForUpdatesWithSize:limit:roaming:
hashTableWithOptions:
initWithOptions:
_performMigrationIfNeededForStore:
transactionClass
_modifyUsingTransactionClass:withBlock:
_reentrantSafePerformBlock:
sessionClass
_readUsingSession:withBlock:
databasePath
encryptionKeyId
sleepForTimeInterval:
tableExists:
performTransaction:
schemaName
initWithConnection:schemaName:
connectionNeedsResetForReopen:
connectionNeedsResetForCorruption:
modifyStore:usingTransaction:
modifyStore:usingTransactionClass:withBlock:
readStore:usingSession:
verifyDatabaseIntegrity
_transactionQueue
_migratedStores
_enumerateUpdatesMatchingPredicate:usingBlock:
enumerateUpdatesUsingBlock:
updateBuyParamsForBundleID:
_CFURLRequest
_initWithCFURLRequest:
allowsCellularAccess
setAllowsCellularAccess:
allowsConstrainedNetworkAccess
setAllowsConstrainedNetworkAccess:
allowsExpensiveNetworkAccess
setAllowsExpensiveNetworkAccess:
requestWithURL:
initWithRequest:properties:
mutableCopyWithZone:
initWithURL:properties:
initWithURL:cachePolicy:timeoutInterval:
copyRequestProperties
_properties
propertyForKey:inRequest:
asset_rangeOffset
setProperty:forKey:inRequest:
setValue:forHTTPHeaderField:
removePropertyForKey:inRequest:
asset_setRangeOffset:
TQ,Sasset_setRangeOffset:
_authenticateAccount:withClientInfo:error:
_runRequestWithError:
AMSURLSession:task:handleAuthenticateRequest:completion:
AMSURLSession:task:handleDialogRequest:completion:
AMSURLSession:task:handleEngagementRequest:completion:
AMSURLSession:task:shouldFailWithServerError:
reportMetricsForContext:
AMSURLSession:handleAuthenticateRequest:completion:
AMSURLSession:handleDialogRequest:completion:
AMSURLSession:shouldFailWithServerError:
AMSURLSession:shouldHandleAuthenticationForAccount:dialogDictionary:
AMSURLSession:shouldHandleDialogDictionary:
initWithClient:apiVersion:
transactions
_transactions
T@"NSString",C,N,V_applicationUsername
T@"NSArray",R,N,V_transactions
addMetadata:
metadataType
clearMetadatas
metadatasCount
metadataAtIndex:
metadatas
setMetadatas:
_metadatas
T@"NSMutableArray",&,N,V_metadatas
predicate
limitCount
bindInt64:atPosition:
entityClass
_newSelectSQLWithProperties:columns:
setOrderingDirections:
setOrderingProperties:
_newSelectSQLWithProperties:
int64ForColumnIndex:
enumerateRowsUsingBlock:
executeQuery:withResults:
initOnConnection:descriptor:
copyEntityIdentifiers
createTemporaryTableWithName:properties:
deleteAllEntities
enumerateMemoryEntitiesUsingBlock:
queryDescriptor
_descriptor
T@"SQLiteQueryDescriptor",R
setEntityClass:
setMemoryEntityClass:
setLimitCount:
orderingClause
setOrderingClause:
orderingDirections
orderingProperties
returnsDistinctEntities
setReturnsDistinctEntities:
setPredicate:
_entityClass
_limitCount
_memoryEntityClass
_orderingClause
_orderingDirections
_orderingProperties
_predicate
_returnsDistinctEntities
T#,N,V_entityClass
T#,N,V_memoryEntityClass
Tq,N,V_limitCount
T@"NSString",C,N,V_orderingClause
T@"NSArray",C,N,V_orderingDirections
T@"NSArray",C,N,V_orderingProperties
TB,N,V_returnsDistinctEntities
T@"SQLitePredicate",C,N,V_predicate
_aggregateValueForProperty:function:predicate:onConnection:
queryOnConnection:predicate:orderingProperties:
arrayWithObject:
allOnConnection:predicate:
maxValueForProperty:predicate:onConnection:
sumForProperty:predicate:onConnection:
queryOnConnection:predicate:orderingProperties:orderingDirections:
ams_iTunesAccounts
networkConstraintsForMediaType:withBag:
lib_defaultConstraintsWithError:
automaticUpdatesEnabled
callbackHandler
noteUpdatesStateChangedWithReason:logKey:completionBlock:
setAutomaticUpdatesEnabled:
handleAppsUninstalled:
autoUpdateEnabled:
confirmAgentRequestedUpdateAll:
getManagedUpdatesWithRequestToken:replyHandler:
getUpdatesWithRequestToken:replyHandler:
refreshUpdateCountWithRequestToken:replyHandler:
reloadFromServerWithRequestToken:replyHandler:
reloadManagedUpdatesWithRequestToken:replyHandler:
setAutoUpdateEnabled:withReplyHandler:
updateAllWithOrder:requestToken:replyHandler:
createUpdateCoordinatorsForBundleIDs:context:enforceImportance:
getUpdatesWithContext:
hidePendingUpdatesBadge
noteUpdatesStateChanged:logKey:
postProcessBackgroundUpdateMetrics
performBackgroundSoftwareUpdateCheck
performPostRestoreUpdatesCheck
reloadApplicationBadgeWithReason:
reloadFromServerInBackgroundWithToken:completionBlock:
reloadUpdatesWithContext:
showPendingUpdatesBadge
verifyAllPendingUpdates
verifyPendingUpdates:
verifyUpdatesFollowingExternalAppInstall:
verifyUpdatesForRemovedBundleIDs:
recordDailyCoreAnalyticsAutomaticUpdateStatus
_validateUpdatesState
agentRequestedUpdateAll
setAgentRequestedUpdateAll:
provisionedApps
setProvisionedApps:
_automaticDownloadsAreDisabled
_callbackQueue
_badgeQueue
_hasLoadedTVProviderApps
_tvProviderApps
_DSIDLessAppsLock
_taskQueue
_agentRequestedUpdateAll
_provisionedApps
T@"NSArray",&,N,V_provisionedApps
TB,V_agentRequestedUpdateAll
_handleBagChangedNotification:
timeout
valuePromise
setTimeout:
_bagValue
_bagKey
_isMemoized
_memoizedValue
_timeout
Td,N,V_timeout
initWithMigratorType:
initWithUserDefaultsRepresentation:
copyUserDefaultsRepresentation
copyMigratorValueForConfigurationKey:
incrementAttempts
setMigratorValue:forConfigurationKey:
attempts
_migratorType
_migratorValues
_attempts
TQ,R,N,V_attempts
T@"NSString",R,N,V_migratorType
accountSecurityLevel
applicationSite
setAccountSecurityLevel:
setApplicationSite:
setStatusCode:
T@"AMSBuyParams",&
_stringRepresentationForDigest:length:
updateWithBuffer:length:
lib_enumerateSubdataWithOffset:length:usingBlock:
_context
_digestType
persistedDataPath
buyProductWithID:withContext:
changeAutoRenewStatus:withContext:
clearOverridesWithContext:
completeAskToBuyRequestWithResponse:withContext:
octaneConnectionForBundleID:
checkServerQueueForQueue:withClient:
_configurationDirectoryForBundleID:
deleteAllTransactionsWithContext:
_deleteDataWithContext:
expireOrRenewSubscriptionWithProductID:expire:withContext:
_refreshReceiptForBundleID:
getStorefrontWithContext:
getTransactionDataWithContext:
sharedDatabaseContext
startAccessingReturningError:
initWithBundleIdentifier:allowPlaceholder:error:
isAppStoreVendable
stopAccessing
configurationDirectoryForBundleID:
cancelTransactionWithContext:
deleteTransactionWithContext:
refundTransactionWithContext:
resolveIssueWithContext:
allConnections
_octaneDirectoryForBundleID:createIfNeeded:
useConfigurationDirectory:forBundleID:
_appNameForContext:
_octaneConfigurationFilePathForBundleID:createIfNeeded:
writeToFile:options:error:
setStorefront:withContext:
registerForEventOfType:filterData:
unregisterForEventWithIdentifier:
getIntegerValueForIdentifier:withContext:
setIntegerValue:forIdentifier:withContext:
getStringValueForIdentifier:withContext:
setStringValue:forIdentifier:withContext:
stringByAppendingString:
_deleteConfigurationFileWithContext:
appRemovedWithBundleID:
renewReceiptWithOptions:client:replyBlock:
testAccountID
T@"NSNumber",R,N
deleteDataWithContext:
expireOrRenewSubscriptionWithIdentifier:expire:withContext:
handleAppsInstalledWithBundleIDs:
handleAppsUninstalledWithBundleIDs:
octaneEnabledForApplicationWithBundleID:
performAction:withContext:
portUpdated:
restartServerIfNecessary
saveSigningData:withContext:
saveConfigurationData:withContext:
setBoolValue:forIdentifier:withContext:
_cachedPort
_octaneDirectoryPath
T@"OctaneBag",R,N,V_bag
filteredArrayUsingPredicate:
objectEnumerator
initWithArray:
enumeratorForObjectsOfClass:
_array
tcr_keyPath
initWithDictionary:device:
_prunedUpdateDictionary:forItemID:
initWithStoreItemIdentifier:error:
deviceIsAppleWatch
applicationHasMIDBasedSINF
storeItemIdentifier
versionIdentifier
_prunedSizeUsingDevice:fromDictionary:forVariantId:versionId:
_prunedArtworkDictionary:
tcr_dictionary
_prunedSizeWithUpdateSizes:forInstalledVariant:versionId:
_prunedSizeFromVariantSizes:usingDevice:
_prunedSizeFromDeviceSizes:usingDevice:
productVariants
lib_firstResultApplyingTransform:
descriptorsForDictionary:usingKeyProfile:
lib_flatMapAndFilterUsingBlock:
findCompatibleDescriptorForDevice:fromVariants:
updates
rolloutDeferred
_device
_rolloutDeferred
T@"NSArray",R,V_rolloutDeferred
_requestURLWithError:
initWithCurrentRevision:
initWithAccount:
setSilentAuthOnly:
newContextWithRevision:forAccountID:requestingAccount:client:purchaseHistoryContext:
URLByAppendingPathComponent:
attemptInternalAuthWithRequest:completion:
deliverAuthenticateRequest:withResultHandler:
initWithAccount:options:bag:
performAuthentication
initWithBagContract:withToken:context:
_responseData
_hasRequestedAuth
T@"XPCRequestToken",W,N,V_token
lib_objectForCaseInsensitiveKey:
optionalWithSome:
optionalWithNone
optionalForKey:
_enumerator
resultComplexity
_block
_resultComplexity
Tq,R,V_resultComplexity
executeStatement:error:
firstInt64Value
stringForColumnName:
performSavepoint:
hasRows
column:existsInTable:
_schemaName
_configureUsingRequestProperties
_addGUIDToRequestParameters:
_addKBSyncDataToRequestParameters:
requestByEncodingRequest:parameters:
deviceGUID
keybagSyncDataWithAccountID:transactionType:error:
setMescalType:
setUrlKnownToBeTrusted:
setRequestEncoding:
requestByEncodingRequest:parameters:error:
requestProperties
T@"URLRequestProperties",R,C,V_requestProperties
_amsMetrics
enqueueEvents:
flush
flushMetricsWithLogKey:reason:completion:
initWithContainerID:bag:
insertEventIntoDatabase:
insertEventsIntoDatabase:
flushMetricsWithReason:completion:
_metrics
initWithUUIDBytes:
_lib_getBytes:count:
lib_legacyJobID
lib_UUIDWithLegacyJobID:
fetchPromiseID:orCreateUsingSpecification:withError:
_resetStreamAdapterWithError:
_notifyDelegateForCurrentDataPromise
consumeData:andWaitWithCompletionHandler:
consumeData:withCompletionHandler:
finishWithCompletionHandler:
prepareWithCompletionHandler:
preflightWithCompletion:
resetPromiseID:withError:
truncatePromiseID:usingSpecification:withError:
suspendWithCompletionHandler:
coordinatorPromiseDataConsumer:willBeginUsingPromise:forReference:
initWithExtractor:toPath:
resetWithCompletionHandler:
truncateWithCompletionHandler:
initWithPromiseProvider:promiseID:specification:error:
_dataPromise
_promiseProvider
_specification
_streamAdapter
T@"<CoordinatorPromiseDataConsumerDelegate>",W
lib_URLByAppendingQueryDictionary:
localRevision
requestWithMethod:URL:headers:parameters:
synchronizeWithURLResult:
_more
_localRevision
_serverRevision
_receipts
_unfinishedTransactionIDs
T@"NSString",R,N,V_localRevision
T@"NSString",&,N,V_logKey
TB,R,N,V_more
T@"NSString",R,N,V_serverRevision
T@"NSArray",R,N,V_receipts
T@"NSSet",R,N,V_unfinishedTransactionIDs
initWithIdentifier:transactionIdentifier:info:
transactionIdentifier
info
setTask:
_identifier
_transactionIdentifier
_info
_task
T@"NSNumber",R,N,V_identifier
T@"NSString",R,N,V_transactionIdentifier
T@"NSDictionary",R,N,V_info
T@"InAppDownloadTask",&,N,V_task
lib_contentType
lib_statusCode
_registerDistributedNotificationEventHandler
_registerNotificationEventHandler
stringWithUTF8String:
postNotificationName:object:userInfo:
start
pushRegisterErrorForFailedRequestCreation
pushRegisterErrorForFailedResponse
pushRegisterErrorForNoResponse
pushRegisterErrorForNoAccount
_request:
lib_defaultSession
responseStatusCode
setBag:
deviceName
dataUsingEncoding:allowLossyConversion:
serialNumber
initWithAccount:isSandboxAccount:token:environment:logKey:
_requestEncoder
_isSandboxAccount
orderedSetWithArray:
storeMetadata
setPurchase:
isDSIDLess
bagKey
installUniversalVariant
setRequireUniversal:
isBackgroundUpdate
setArcade:
accountIdentifier
affiliateIdentifier
lib_unsignedLongLongPropertyForKey:
_purchase_clientInfoUsingRequestToken:
additionalHeaders
purchase_purchaseInfoWithRequestToken:
valueOr:
hasValue
_hasValue
TB,R,V_hasValue
T@,R,V_value
lib_copyPropertyGetterNames
sqlite3_stmt
dataWithBytes:length:
columnIndexForColumnName:
dataForColumnIndex:
dateForColumnIndex:
numberForColumnIndex:
stringForColumnIndex:
UUIDForColumnIndex:
URLForColumnIndex:
dictionaryWithValuesForColumnNames:
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
indexOfObject:
initWithStatement:
dataForColumnName:
dateForColumnName:
doubleForColumnIndex:
doubleForColumnName:
intForColumnIndex:
intForColumnName:
int64ForColumnName:
JSONObjectForColumnIndex:
numberForColumnName:
numberOfColumns
UUIDForColumnName:
URLForColumnName:
dictionaryWithValuesForColumns
_columnTypeForColumnIndex:
_declaredTypeForColumnIndex:
_columnCount
_columnDeclaredTypes
_columnIndexByName
_columnKeySet
_columnNames
_statement
_statementWrapper
compatibilityUpdateForBundleIDs:userInitiated:withReplyHandler:
getManagedUpdatesWithReplyHandler:
getUpdatesWithReplyHandler:
refreshUpdateCountWithReplyHandler:
reloadFromServerWithReplyHandler:
reloadFromServerInBackgroundWithCompletionBlock:
reloadManagedUpdatesWithReplyHandler:
updateAllWithOrder:replyHandler:
updatesInterface
setUpdatesInterface:
_updatesInterface
T@"<UpdatesControllerInterface>",&,V_updatesInterface
_predicateFromQuery:
revisionForAccountID:withError:
unsignedLongValue
sortOptions
_propertyForSortOptionName:
ascending
unsignedIntValue
setPurchaserDSID:
_lastUpdatedPropertyForAccountID:
_valueForDatabaseProperty:withError:
_serverRevisionPropertyForAccountID:
intValue
isFirstParty
isHidden
isIOSBinaryMacOSCompatible
searchTerm
storeIDs
bundleIDs
isPreorder
countQuery:
lastUpdatedTimestampForAccountID:withError:
initWithAccountID:context:
setExpectedItemID:
setServerRevision:
_generateLogKey
defaultQueue
asyncUsingBlock:
_fetchServerRevisionUsingAccount:databaseStore:
_localRevisionForAccountID:usingDatabaseStore:error:
_shouldUpdateLocalRevision:withServerRevision:
_fetchItemsUsingAccount:databaseStore:
_setLastUpdatedTimestampForAccountID:usingDatabaseStore:
_lastUpdatedTimestampForAccountID:usingDatabaseStore:
lib_timeElapsedUntilNow
_updatePollingFrequencyInterval
_forcedRefreshInterval
_purchaseRefreshEnabled
_historyForAccountID:doesNotContainItemID:usingDatabaseStore:
setLastUpdatedTimestamp:forAccountID:withError:
removeAllAppsForAccountID:withError:
setRevision:forAccountID:withError:
insertApps:forAccountID:withError:
deleteAppsForLockerItemIDs:forAccountID:withError:
_sendItemsRequestUsingAccount:databaseStore:
_updateDatabaseWithDAAPResponse:databaseStore:error:
_sendServerRevisionRequestUsingAccount:databaseStore:
_getItemsRequestContextUsingAccount:databaseStore:withError:
_getServerRevisionRequestContextUsingAccount:databaseStore:withError:
context
expectedItemID
replyHandler
_expectedItemID
_replyHandler
TQ,R,V_context
T@"NSNumber",R,V_accountID
T@"NSNumber",&,V_expectedItemID
T@"NSNumber",&,V_serverRevision
T@?,C,V_replyHandler
initWithCode:
encodeInteger:forKey:
decodeIntegerForKey:
decodeObjectOfClasses:forKey:
_code
Tq,R,V_code
localizedRecoveryOptions
dictionaryWithDictionary:
lib_addRecoveryOptions:
lib_addUserInfoValue:forKey:
forceDrmMode
ams_securityLevel
setPurchaseEvent:
isRemotelyUserInitiated
setCompanionBundleID:
device
setDevice:
itemResponse
setItemResponse:
originalPurchaserDSID
setOriginalPurchaserDSID:
preflightURL
setPreflightURL:
purchase
purchaseEvent
purchaseID
setPurchaseID:
setReferrerName:
temporaryBundleID
setTemporaryBundleID:
setClientType:
disableBoosting
expectsIOSAppOnMac
setExpectsIOSAppOnMac:
generatedVendorID
setGeneratedVendorID:
ignoreRequirePasswordRestriction
setIgnoreRequirePasswordRestriction:
isMachineBased
purchaseOnly
setPurchaseOnly:
purchaseState
setPurchaseState:
purchaseType
setRemoteInstall:
useJSONContentType
setUseJSONContentType:
useLocalAuthAndSystemDialogs
setUseLocalAuthAndSystemDialogs:
watchType
setWatchType:
setRemotelyUserInitiated:
requireVendorID
setRequireVendorID:
_arcade
_requireVendorID
_signpostID
T@"ACAccount",&
arcade
TB,GisArcade,V_arcade
T@"NSString",&,V_batchLogKey
T@"NSURL",&
T@"AMSProcessInfo",&
T@"XDCDevice",&
discretionary
TB,GisDiscretionary
T@"StoreItemResponse",&
T@"NSString"
T@"AppInstallLogKey",&
machineBased
TB,GisMachineBased
T@"ASDPurchase",&
T@"AIMPurchaseEvent",&
remoteInstall
TB,GisRemoteInstall
T@"XPCRequestToken",&
TB,V_requireVendorID
TQ,R,V_signpostID
TB,R,GisUserInitiated
remotelyUserInitiated
TB,GisRemotelyUserInitiated
serverDialogID
dataUsingEncoding:
_serverDialogID
T@"NSString",&,N,V_serverDialogID
constantValue
ASD_intentForClass:
ASD_intent
ASD_classForIntent:
reconfigureRequestHandler
setReconfigureRequestHandler:
requestPresenter
setRequestPresenter:
_reconfigureRequestHandler
_requestPresenter
T@"AMSProcessInfo",C,V_clientInfo
T@?,C,V_reconfigureRequestHandler
T@"<RequestPresenter>",&,V_requestPresenter
env_requestTag
env_setRequestTag:
T@"NSString",&,N,Senv_setRequestTag:
_lib_effectiveConfigurationUsingEnvironment:
_adoptEffectiveConfiguration:
_effectiveConfiguration
_sessionConfiguration
_initWithConfiguration:
set_sourceApplicationBundleIdentifier:
env_adoptEnvironment:
_initWithCurrentDevice
_getBootSession
iOSSupportVersion
initWithBytesNoCopy:length:encoding:freeWhenDone:
copyThinningHeaders
isAppleSiliconMac
bootSession
appleSiliconMac
TB,R,GisAppleSiliconMac
HRNMode
TB,R,GisHRNMode
T@"NSUUID",R
_iOSSupportVersion
_productVariants
_productVersion
_bootSession
T@"NSString",R,V_iOSSupportVersion
T@"NSArray",R,V_productVariants
T@"NSString",R,V_productVersion
T@"NSUUID",R,V_bootSession
device_decorateHeadersUsingDevice:
_propertyForKey:bundleID:
transactionForID:bundleID:
isFinished
distantPast
close
_topicStringForTopic:
stringForAppInstallType:
deviceID
hardwarePlatform
activeDSID
baseLogKey
currentApps
_platform
_activeDSID
_baseLogKey
_currentApps
T@"NSNumber",C,N,V_activeDSID
T@"NSString",C,N,V_baseLogKey
T@"NSDictionary",&,N,V_currentApps
updateMigratorConfiguraton
_readConfigurationFromUserDefaultsRepresentation:
clearUpdateMigrations
_writeConfigurationToUserDefaultsRepresentation:
setUpdateMigratorConfiguration:
_configuration
isSharingPurchases
firstName
ams_setNullableObject:forKey:
iCloudDSID
iCloudUsername
iTunesUsername
lastName
isCurrentSignedInUser
initWithDictionaryRepresentation:
setCurrentSignedInUser:
_currentSignedInUser
_askToBuyEnabled
_sharingPurchases
_firstName
_iCloudDSID
_iCloudUsername
_iTunesDSID
_iTunesUsername
_lastName
currentSignedInUser
TB,N,GisCurrentSignedInUser,V_currentSignedInUser
T@"NSDictionary",R,N
askToBuyEnabled
TB,R,N,GisAskToBuyEnabled,V_askToBuyEnabled
T@"NSString",R,N,V_firstName
T@"NSNumber",R,N,V_iCloudDSID
T@"NSString",R,N,V_iCloudUsername
T@"NSNumber",R,N,V_iTunesDSID
T@"NSString",R,N,V_iTunesUsername
T@"NSString",R,N,V_lastName
sharingPurchases
TB,R,N,GisSharingPurchases,V_sharingPurchases
_familyMembersFromDictionaryRepresentation:
isCached
ams_activeiCloudAccount
valueForKeyPath:
localizedCaseInsensitiveCompare:
sortedArrayUsingComparator:
initWithDictionaryRepresentation:cached:
_cached
cached
TB,R,N,GisCached,V_cached
T@"NSArray",R,N,V_familyMembers
dataContainerURL
_forcedUpdates
isEqualToArray:
downloaderDSID
purchaserDSID
taskWithPendingUpdates:andLogKey:
_invalidBuildToolVersionsToCheck
_enforcedDRMVersionToCheck
_appsByAccountMappingForCandidates:
_pendingUpdates
_updates
T@"NSArray",R,N,V_updates
initWithConnection:andCatalog:
lib_newProcessInfoForConnection:
auditToken
initWithAuditToken:forPID:
setUserInfo:
hasEntitlement:
AppStoreServiceProvider
AppStoreServiceEntitlement
_provideService:forEntitlement:withReply:
diagnosticServiceProvider
diagnosticServiceEntitlement
IAPHistoryServiceProvider
IAPHistoryServiceEntitlement
installationServiceProvider
installationServiceEntitlement
libraryServiceProvider
libraryServiceEntitlement
CrossfireServiceProvider
CrossfireServerEntitlement
MetricsServiceProvider
MetricsServiceEntitlement
PurchaseHistoryServiceProvider
PurchaseHistoryServiceEntitlement
PurchaseServiceProvider
PurchaseServiceEntitlement
RepairServiceProvider
RepairServiceEntitlement
UpdatesServiceProvider
UpdatesServiceEntitlement
remoteObjectProxyWithErrorHandler:
deliverEngagementRequest:withResultHandler:
_unboostingRemoteObjectProxy
deliverNotifications:
addBarrierBlock:
deliverProgress:
synchronousRemoteObjectProxyWithErrorHandler:
isDialogObserverAvailableWithReplyHandler:
currentClient
getAppStoreServiceWithReplyHandler:
getArcadeServiceWithReplyHandler:
getCrossfireServiceWithReplyHandler:
getClipServiceWithReplyHandler:
getDiagnosticServiceWithReplyHandler:
getIAPHistoryServiceWithReplyHandler:
getInstallationServiceWithReplyHandler:
getInstallAttributionServiceWithReplyHandler:
getLibraryServiceWithReplyHandler:
getMacDaemonManagedServiceWithReplyHandler:
getManagedAppServiceWithReplyHandler:
getMetricsServiceWithReplyHandler:
getOcelotServiceWithReplyHandler:
getPersonalizationServiceWithReplyHandler:
getPurchaseHistoryServiceWithReplyHandler:
getPurchaseServiceWithReplyHandler:
getRepairServiceWithReplyHandler:
getRestoreServiceWithReplyHandler:
getTestFlightFeedbackServiceWithReplyHandler:
getUpdatesServiceWithReplyHandler:
deliverNotifications:withBarrierBlock:
deliverProgress:withBarrierBlock:
hasConnection
isDialogObserverAvailable
enableDiagnostics
_auditTokenData
_enableDiagnostics
hasSeenAppStore
_processInfo
T@"AMSProcessInfo",R,V_processInfo
lib_URLByStrippingQuery
deltaPackage
drmMode
taskMetrics
isCellular
networkProtocolName
duration
countOfResponseBodyBytesReceived
setDrmMode:
setPackageURL:
setRequestCount:
setDeltaPackage:
T@"NSURLSessionTaskMetrics",&
initWithBlock:
blockTaskWithBlock:
completedUnitCount
setCompletedUnitCount:
totalUnitCount
setTotalUnitCount:
_completedUnitCount
_totalUnitCount
Tq,N,V_completedUnitCount
Tq,N,V_totalUnitCount
_registerForAdapterChange
_updateAdapterState
_postPowerStateDidChangeNotification
_updateBatterySaverState
_adapterChangeToken
_lowPowerModeToken
_lowPowerModeEnabled
_powerPlugggedIn
powerPlugggedIn
TB,R,GisPowerPluggedIn,V_powerPlugggedIn
lowPowerModeEnabled
TB,R,GisLowPowerModeEnabled,V_lowPowerModeEnabled
addProgress:
progressType
clearProgress
progressCount
progressAtIndex:
progress
setProgress:
_progress
T@"NSMutableArray",&,N,V_progress
endDate
startDate
launchReason
_simpleDate:
_simpleTime:
sourceStream
clipLaunchReason
clipFullURL
clipReferrerURL
clipReferrerBundleID
isExtensionUsage
containingBundleID
usageTime
_formatTimeInternal:
usageCount
initWithLocaleIdentifier:
setLocale:
stringFromDate:
setClipBundleID:
setClipFullURL:
setClipLaunchReason:
setClipReferrerURL:
setClipReferrerBundleID:
clipWebAppBundleID
setClipWebAppBundleID:
setContainingBundleID:
setEndDate:
eventTime
setEventTime:
setEvid:
setIsExtensionUsage:
lastEventEndDate
setLastEventEndDate:
setLaunchReason:
setSourceStream:
setStartDate:
setUsageTime:
setUsageCount:
_isExtensionUsage
_clipBundleID
_clipFullURL
_clipLaunchReason
_clipReferrerURL
_clipReferrerBundleID
_clipWebAppBundleID
_containingBundleID
_endDate
_eventTime
_lastEventEndDate
_launchReason
_sourceStream
_startDate
_usageTime
_usageCount
T@"NSString",C,N,V_bundleVersion
T@"NSString",C,N,V_clipBundleID
T@"NSURL",C,N,V_clipFullURL
T@"NSString",C,N,V_clipLaunchReason
T@"NSURL",C,N,V_clipReferrerURL
T@"NSString",C,N,V_clipReferrerBundleID
T@"NSString",C,N,V_clipWebAppBundleID
T@"NSString",C,N,V_containingBundleID
T@"NSDate",C,N,V_endDate
Tq,N,V_eventTime
T@"NSNumber",C,N,V_evid
TB,N,V_isExtensionUsage
T@"NSString",C,N,V_itemName
T@"NSDate",C,N,V_lastEventEndDate
T@"NSString",C,N,V_launchReason
TQ,N,V_sourceStream
T@"NSDate",C,N,V_startDate
Tq,N,V_usageTime
Tq,N,V_usageCount
ams_configureWithProcessInfo:bag:
asf_sessionForClient:
notificationWithName:userInfo:
notificationForRefreshWithBundleIDs:
notificationForRefreshWithDeviceID:
notificationForInstalls:withDeviceID:
notificationForRegisteredApps:
notificationForUninstalls:withDeviceID:
notificationForUnregisteredBundleIDs:
handleAccountStoreDidChangeNotification:
handleSandboxAccountDidChangeNotification:
handleStorefrontChangedNotification:
_shouldNotifyChangeFromExistingAccount:toCurrentAccount:
_postAccountDidChangeFromOldAccount:withAccountStore:
_handleAppStoreWidget:isActive:
activeSandboxAccount
T@"ACAccount",R
_cachedStoreFront
_activeAccount
_activeSandboxAccount
T@"ACAccount",R,V_activeAccount
T@"ACAccount",R,V_activeSandboxAccount
T@"AppUsageDatabaseStore",R,N
_logAndValidateMethodCall:context:
_logExitForMethodCall:context:
contextWithBundleID:transactionID:
_bundleIDForConnection:
transactionDeleted:forBundleID:
transactionUpdated:forBundleID:
receiveEventOfType:eventData:identifier:
interfaceWithProtocol:
addConnectionWithBundleID:connection:type:
notifyOfRevokedProductIdentifiers:
addRevocationsForProductIdentifiers:forBundleID:forAccountID:
connectionsForBundleID:
ams_dictionaryByAddingEntriesFromDictionary:
registerObservationID:
unregisterObservationID:
observerCountForEventIdentifier:
_connectionHasEntitlement:entitlementName:
receiveEventOfType:withData:onAllObserversWithID:
clientIDForConnection:
valueForEntitlement:
isAppleSigned
_isAppleSignedApp:
buyProductWithID:bundleID:completion:
changeAutoRenewStatus:transactionID:bundleID:completion:
clearOverridesForBundleID:completion:
completeAskToBuyRequestWithResponse:transactionID:bundleID:completion:
deleteAllTransactionsForBundleID:completion:
expireSubscriptionWithProductID:bundleID:completion:
forceRenewalOfSubscriptionWithProductID:bundleID:completion:
getActivePortWithCompletion:
getStorefrontForBundleID:completion:
getTransactionDataForBundleID:completion:
performAction:transactionID:bundleID:completion:
removeConfigurationForBundleID:completion:
saveSigningData:forBundleID:completion:
saveConfigurationData:forBundleID:completion:
setStorefront:forBundleID:completion:
startObservingTransactionsForBundleID:completion:
refreshQueueForBundleId:completion:
revokeEntitlementsForProductIdentifiers:forBundleId:completion:
registerForEventOfType:forBundleID:withFilterData:completion:
unregisterForEventWithIdentifier:forBundleID:
getIntegerValueForIdentifier:forBundleID:completion:
setIntegerValue:forIdentifier:forBundleID:completion:
getStringValueForIdentifier:forBundleID:completion:
setStringValue:forIdentifier:forBundleID:completion:
invalidateBag
transactionDeleted:productID:forBundleID:
updatePort:
removeTransactionIdentifiersFromCache:forBundleIdentifier:
simulateStoreKitPushWithAction:forBundleIdentifiers:
setCacheSizeWithNumberOfKilobytes:
_encryptDatabase:
cacheSize
UTF8String
setCacheSize:
fetchKeyWithIdentifier:error:
generateKeyWithIdentifier:error:
applyToDatabase:
setCacheSizeWithNumberOfDatabasePages:
setEncryptionKeyId:
protectionType
setProtectionType:
isReadOnly
setReadOnly:
_readOnly
_cacheSize
_databasePath
_encryptionKeyId
_protectionType
Tq,N,V_cacheSize
T@"NSString",R,V_databasePath
T@"NSString",C,N,V_encryptionKeyId
T@"NSString",C,N,V_protectionType
readOnly
TB,N,GisReadOnly,V_readOnly
_cleanupStaleCoordinators
_cleanupStaleInstalls
cleanupStaleUpdateTimerIsExpired
_cleanupUpdatesRemovingPurchases:removedApps:
_cleanupUpdatesRemovingPurchases:removedApps:updateCount:removeCount:
lastUpdateCleanupDate
_enumerateCoordinatorIDsWithPredicate:block:
enumeratorWithOptions:
setFilter:
placeholderFailureReason
accessUsingBlock:
_activelyInstallingCoordinatorIDs
creatorIdentifier
enumerateCoordinatorsWithError:usingBlock:
_cancelInstallIDs:
recordLastUpdateCleanupDate
_allInstalledApplicationsStoreIDs
_activelyInstallingBundleIDs
performCleanup
cleanupUpdatesForRemovedApps:withCompletion:
cleanupUpdatesFollowingInstallOfApps:withCompletion:
cancelInstallID:withCoordinator:error:
runPreambleForPKGWithResponse
autoDownloadsEnabled
isAutomaticAppDownloadsAllowed
_shouldCancelAsDuplicate
_shouldCancelAutomaticInstallation
_shouldCancel32BitApp
_restartProgress
_shouldCancelInstallationWithError:
_installInfo
T@"AppInstallPreambleResponse",R
_initWithInstallID:result:coordinator:error:
continueInstallID:withCoordinator:
failInstallID:withCoordinator:error:
finishInstallID:withCoordinator:
Tq,R,V_installID
Tq,R,V_result
uninstallAppWithBundleID:requestUserConfirmation:completion:
uninstallApp:requestUserConfirmation:withResultHandler:
_initWithValue:error:
shared
buyProductWithID:bundleID:
cancelTransactionWithIdentifier:forBundleID:
changeAutoRenewStatus:transactionID:bundleID:
clearOverridesForBundleID:
completeAskToBuyRequestWithResponse:transactionID:forBundleID:
deleteAllTransactionsForBundleID:
deleteTransactionWithIdentifier:forBundleID:
expireOrRenewSubscriptionWithIdentifier:expire:forBundleID:
getStorefrontForBundleID:
getTransactionDataForBundleID:
refundTransactionWithIdentifier:forBundleID:
resolveIssueForTransactionWithIdentifier:forBundleID:
setStorefront:forBundleID:
registerForEventOfType:withFilterData:
getIntegerValueForIdentifier:forBundleID:
setIntegerValue:forIdentifier:forBundleID:
getStringValueForIdentifier:forBundleID:
setStringValue:forIdentifier:forBundleID:
dataWithBytesNoCopy:length:freeWhenDone:
serviceClient
publisherWithServiceClient:
publishMessage:
publisherWithRequestToken:
logCode:usingBlock:
_initWithProgressCache:
_refreshSystemAppMapping
_handleAppRegisteredNotification:
_handleAppUnregisteredNotification:
addObserver:
_createAppFromRecord:
catalogRegisteredApps:
appState
catalogUnregisteredBundleIDs:
_appForBundleID:
openSensitiveURL:withOptions:
launchApp:withResultHandler:
serviceWithDefaultShellEndpoint
openApplication:withOptions:completion:
lib_flatMap:
lib_filter:
isArcadeApp
setLocalizedName:
betaVersionIdentifier
setStoreExternalVersionID:
_updateBuyParamsForBundleID:
setUpdateBuyParams:
setExtensions:
existingProgressForBundleID:
setRemoteProgress:
setBundlePath:
executableURL
setExecutablePath:
shortVersionString
setBundleShortVersion:
exactBundleVersion
tcr_unsignedLongLong
cancelProgressForBundleID:
executeQuery:excludingBundleIDs:usingBlock:
observer
setObserver:
T@"<LibraryCatalogObserver>",W
launchApp:extensionType:withResultHandler:
launchApp:onPairedDevice:withResultHandler:
lookupBundleIDsForDeletableSystemAppsWithError:
lookupBundleIDsForDeletableSystemAppsWithItemIDs:error:
lookupItemIDsForDeletableSystemAppsWithBundleIDs:error:
applicationsDidInstall:
applicationsDidUninstall:
_observer
_planner
_progressCache
_systemAppMappingByBundleID
_systemAppMappingByItemID
T@"<LibraryCatalogObserver>",W,V_observer
_hashArrayFromMeasurement:
scanUnsignedLongLong:
initWithBundleIdentifierOfSystemPlaceholder:error:
_stringFromDigest:
stringWithCString:encoding:
initWithURL:attributes:
_streamableZip
_downloadOffset
_downloadSize
_title
T@"NSNumber",R,N,V_downloadOffset
T@"NSNumber",R,N,V_downloadSize
T@"NSError",R,N,V_error
T@"NSNumber",R,N,V_hashType
T@"NSArray",R,N,V_hashes
streamableZip
TB,R,N,GisStreamableZip,V_streamableZip
T@"NSString",R,N,V_title
T@"NSURL",R,N,V_URL
_valueFromKeychainForKey:error:
_generateKeyDataError:
_saveValueToKeychain:forKey:error:
initWithBytesNoCopy:length:deallocator:
_copyErrorForOSStatus:
base64EncodedDataWithOptions:
initWithBase64EncodedData:options:
_initWithOwnerType:purchaserDSID:
ownerType
isEqualToOwner:
alternateOwnerWithDSID:
externalOwner
familyOwnerWithDSID:
machineOwner
primaryOwnerWithDSID:
unclaimedOwner
isRestorable
_ownerType
_purchaserDSID
Tq,R,V_ownerType
T@"NSNumber",R,V_purchaserDSID
restorable
TB,R,GisRestorable
pushTypeErrorForFailedRequestCreation
pushTypeErrorForFailedResponse
pushTypeErrorForNoResponse
pushTypeErrorForNoAccount
pushTypeErrorForAddingInactiveAccount
pushTypeErrorForNoPushTokenRegistered
pushTypeRetryableError
requestType
isActive
initWithType:account:isSandboxAccount:environment:token:logKey:
setRequestType:
_paramsDict
_requestType
T@"ACAccount",&,N,V_account
Tq,N,V_requestType
T@"NSData",&,N,V_token
setHTTPMethod:
dataTaskWithRequest:
timeoutInterval
expectedContentLength
invalidateAndCancel
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
_semaphore
_contentLength
T@"NSNumber",R,V_contentLength
addEntriesFromDictionary:
deviceIdentifierForVendor
createDeviceIdentifierWithVendorName:bundleIdentifier:
purchase_addThinningHeaders
purchase_addVendorIDForApplication:
_updatePhaseForJobWithBundleID:phase:
installProgress
fractionCompleted
setFractionCompleted:forBundleID:storeItemID:
_predicateForBundleID:toUpdateToPhase:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
databaseWasRebuilt
cancelApp:onPairedDevice:withCompletionHandler:
cancelApp:withCompletionHandler:
pauseApp:withCompletionHandler:
resumeApp:withCompletionHandler:
_requestBodyDictionary
_newArrayWithUpdatableApps:
_newDictionaryWithUpdatableApp:
_copyLocalAppsDictionaries
initWithAccount:apps:isUserInitiated:
_isUserInitiated
T@"UpdatesResponse",&,N,V_response
T@"NSString",C,N,V_logKey
initWithApplicationProxy:evidOverride:
hasEvidOverride
storefrontID
initWithStoreItemID:externalVersionID:
_hasEvidOverride
_downloaderDSID
_storeExternalVersionID
_storeItemID
_storefrontID
T@"NSNumber",R,V_downloaderDSID
TB,R,V_hasEvidOverride
T@"NSNumber",R,V_storeExternalVersionID
T@"NSNumber",R,V_storeItemID
T@"NSNumber",R,V_storefrontID
running
extractionPath
consumeData:andWait:withCompletionHandler:
_streamStatus
isDataComplete
isFailed
failedWithError:
_setStreamStatus:
dataComplete
supplyBytes:withCompletionBlock:
finishStreamWithCompletionBlock:
_prepareExtractor:toPath:completionBlock:
suspendStreamWithCompletionBlock:
prepareForExtractionToPath:completionBlock:
prepareForExtraction:
diskUsage
_dataComplete
_extractor
_hasConsumedData
_path
_resumptionOffset
_backpressureSemaphore
_consistencyGroup
_locked_streamStatus
setOncePerBootItems:
_hasItemComplete:
_addItemComplete:
oncePerBootItems
isDeviceLocked
_postStateDidChangeNotification
isScreenLocked
_deviceLockToken
_dataMigrationComplete
_deviceLocked
_setupComplete
_screenLocked
dataMigrationComplete
TB,R,GisDataMigrationComplete,V_dataMigrationComplete
fsEntitlementsCompleteForBoot
TB,R,GisFsEntitlementsCompleteForBoot
deviceLocked
TB,R,GisDeviceLocked,V_deviceLocked
screenLocked
TB,R,GisScreenLocked,V_screenLocked
setupComplete
TB,R,GisSetupComplete,V_setupComplete
intent
lib_coordinatorForAppWithBundleID:withIntent:importance:createIfNotExisting:withError:
gizmoPairingID
lib_setGizmoPairingID:withError:
buildCoordinatorWithError:
setGizmoPairingID:
setIntent:
targetBundleURL
setTargetBundleURL:
_gizmoPairingID
_intent
_priority
_targetBundleURL
T@"NSString",&,V_bundleID
T@"NSUUID",&,V_gizmoPairingID
TQ,V_intent
Tq,V_priority
T@"NSURL",&,V_targetBundleURL
coordinatorBuilderWithError:
_migrateDateFromSpotlight:
lib_coordinatorForAppWithBundleID:withIntent:createIfNotExisting:wasCreated:withError:
lib_cancelOwnedCoordinatorForAppWithBundleID:withError:
lib_appStoreIsOwningClient
lib_setImportance:withError:
lib_appStoreIsResponsibleClientWithError:
lib_coordinatorForAppWithBundleID:withClientID:withIntent:createIfNotExisting:wasCreated:withError:
coordinatorForAppWithBundleID:withClientID:createIfNotExisting:created:error:
lib_coordinatorWithIdentifier:error:
existingCoordinatorForAppWithBundleID:error:
coordinatorID
lib_coordinatorWithIdentifier:forBundleID:error:
lib_expectsPlaceholderPromise
lib_hasCompletedPlaceholder
lib_expectsInitialODRPromises
lib_hasInitialODRAssetPromises
lib_expectsAppAssetPromise
lib_hasCompletedAppAssetPromise
lib_hasInstallOptions
lib_expectsDeviceSecurityPromise
lib_hasDeviceSecurityPromise
lib_hasCompletedDeviceSecurityPromise
lib_expectsAppQuitPromise
lib_hasAppQuitPromise
lib_hasCompletedAppQuitPromise
setAppAssetPromise:error:
appAssetPromiseWithError:
setAppAssetPromiseResponsibleClient:error:
appAssetPromiseResponsibleClientWithError:
appAssetPromiseHasBegunFulfillment:error:
hasAppAssetPromise
setDeviceSecurityPromise:error:
deviceSecurityPromiseWithError:
setInitialODRAssetPromises:error:
initialODRAssetPromisesWithError:
hasInitialODRAssetPromises
setPlaceholderPromise:error:
placeholderPromiseWithError:
hasPlaceholderPromise
isComplete
setInstallOptions:error:
hasInstallOptions
tagWithCoordinatorID:bundleID:
lib_coordinatorState
_lib_userPresentableErrorForFailure:alertUser:allowHardFail:underlyingError:
setPreparationPromise:withError:
initWithName:client:diskSpaceNeeded:
setPercentComplete:
setComplete:
setUserDataPromise:error:
userDataPromiseWithError:
userDataRestoreShouldBegin:
hasUserDataPromise
_lib_establishAppQuitPromiseWithError:
lib_coordinatorIntent
initWithName:client:streamingZipOptions:archiveSize:diskSpaceNeeded:
setTargetGizmoPairingID:error:
setImportance:error:
importanceWithError:
lib_hasAppAssetPromise
lib_tag
lib_addFeedbackPromiseWithError:
lib_appStoreIsDoneWithRestore
lib_completeInitialODRPromisesWithError:
lib_completeUserDataPromiseWithError:
lib_establishAppQuitPromiseWithError:
lib_establishDeviceSecurityPromiseWithError:
lib_failWithReason:withError:
lib_rejectAppQuitPromiseWithReason:error:
lib_satisfyAppQuitPromiseWithError:
lib_satisfyDeviceSecurityPromiseWithError:
lib_setAppAssetPromise:withError:
lib_setAppStoreAsDRIWithError:
lib_setInitialODRAssetPromises:withError:
lib_setInstallOptions:withError:
lib_setPlaceholderPromise:error:
lib_coordinatorWithTag:error:
lib_activeCoordinatorStatesWithError:
lib_userPresentableErrorForFailure:alertUser:allowHardFail:
T@"lib_IXAppInstallCoordinatorTag",R
isEqualToTag:
_coordinatorID
T@"NSString",R,V_bundleID
T@"NSUUID",R,V_coordinatorID
maxConcurrentOperationCount
setUnderlyingQueue:
operations
qualityOfService
setQualityOfService:
addOperations:waitUntilFinished:
cancelAllOperations
waitUntilAllOperationsAreFinished
addTaskWithBlock:
cancelAllTasks
waitUntilAllTasksAreFinished
T@"NSString",C
T@"NSArray",R,C
knownMDMInstalls
pendingRestoreMetadataLookup
pendingBootstrap
pendingInstalls
pendingRestoreSoftFailures
restoreHardFailures
T@"SQLitePredicate",R
_parseDictionary:
_genre
_genreID
T@"NSString",R,V_genre
T@"NSNumber",R,V_genreID
stringByReplacingOccurrencesOfString:withString:
stringByPaddingToLength:withString:startingAtIndex:
receiptWithData:
iaps
customReceiptURL
applicationExtensionRecords
extensionPointRecord
applicationFamilyID
typeForInstallMachinery
isDeviceBasedVPP
applicationDownloaderDSID
applicationDSID
ams_iTunesAccountWithAltDSID:
protectedMetadata
lib_appExtVrsId
lib_setAppExtVrsId:
T@"NSString",&,Slib_setAppExtVrsId:
contentRatingFlags
circularIconURLString
datePurchased
developerName
isFamilyShared
isIOSBinaryMacOSAvailable
isHiddenFromSpringboard
iconURLString
is32BitOnly
longTitle
mediaKind
ovalIconURLString
preflightPackageURL
productURL
requiredCapabilities
supportsIPad
supportsIPhone
supportsMac
purchaseToken
lockerItemID
genreName
watchAppDeliveredIniOSApp
watchAppRunsIndependently
watchOnly
supportsLayeredImage
hasP3
_setValue:forDatabaseProperty:withError:
setHidden:forStoreItemID:withError:
showAllWithError:
initWithInstalls:externalIDs:
_filterApplicableInstallations
_itemIDForBundleID:
_disableAutoInstall
initWithConnection:SQL:
connectionPointer
_connectionPointer
_SQL
Tr^v,R,N,V_connectionPointer
T@"NSString",R,C,N,V_SQL
emulateNetworkUsingDefaults
_isConstrained
_isExpensive
_isRoaming
_interfaceType
Tq,R,V_interfaceType
TB,R,V_isConstrained
TB,R,V_isExpensive
TB,R,V_isRoaming
allUsageForStreams:fromDate:endDate:bundleIDs:error:
predicateForEventsWithEndInDateRangeFrom:to:
andPredicateWithSubpredicates:
appInFocusStream
appUsageStream
eventQueryWithPredicate:eventStreams:offset:limit:sortDescriptors:
userKnowledgeStore
knowledgeStore
executeQuery:error:
metadata
extensionContainingBundleIdentifier
stream
_streamTypeForStreamName:
isEventStichable:currentLaunch:
allUsageForStreams:fromDate:endDate:error:
stitchTogetherEvents:
stringFromByteCount:countStyle:
setRemaining:
setUpdate:
_automatic
_remaining
_update
_bytes
TB,GisAutomatic,V_automatic
TQ,V_bytes
T@"NSString",&,V_name
remaining
TB,GisRemaining,V_remaining
update
TB,GisUpdate,V_update
copyEvaluatorDownloadUsingConnection:
makeObjectsPerformSelector:withObject:
_registerNotificationSource
_validatePredicate:error:
allowEvaluation
predicateFormat
notificationSourceWithName:applicableEntitlement:mergeHandler:
registerNotificationSource:
catalogRefreshedBundleIDs:
executeQueryWithPredicate:withReplyHandler:
executeQueryWithPredicate:onPairedDevice:withReplyHandler:
cancelApp:onPairedDevice:withReplyHandler:
cancelApp:withReplyHandler:
pauseApp:withReplyHandler:
resumeApp:withReplyHandler:
openableStatusForExecutableAtPath:withReplyHandler:
launchApp:extensionType:withReplyHandler:
launchApp:withReplyHandler:
launchApp:onPairedDevice:withReplyHandler:
lookupBundleIDsForDeletableSystemAppsWithItemIDs:withReplyHandler:
lookupItemIDsForDeletableSystemAppsWithBundleIDs:withReplyHandler:
lookupBundleIDsForDeletableSystemAppsForWatchWithItemIDs:withReplyHandler:
lookupItemIDsForDeletableSystemAppsForWatchWithBundleIDs:withReplyHandler:
uninstallApp:requestUserConfirmation:withReplyHandler:
forceRefreshAllQueries
_validKeyPaths
_libraryCatalogs
_libraryOpen
_libraryProgress
_libraryUninstall
_remoteCatalogs
_setUserVersion:
currentUserVersion
initWithClientType:
weakObjectsHashTable
_bagChanged:
_updateStorefrontNotify:
observers
storefrontCountry
_storefrontIdentifierForClientType:
setStorefrontCountry:
storefront:changed:
octaneManager
sandboxManager
currentStorefrontWithCompletionHandler:
_storefrontQueue
_storefront
_storefrontCountry
T@"NSHashTable",R,N,V_observers
Tq,R,N,V_type
T@"NSString",&,N,V_storefront
T@"NSString",&,N,V_storefrontCountry
_initWithInstall:package:coordinator:
urlValueForProperty:
_dataConsumerError:promiseConsumer:
_buildAssetRequestWithDataConsumer:error:
continueInstallID:withDataConsumer:assetRequest:event:
setAssetSize:forPackageID:
setRequestCount:forPackageID:
prepareForDownload
chunkDigests
chunkSize
chunkType
setConnectionPool:
setDataConsumer:
setRangeOffset:
setExpectedContentLength:
setNetworkBudgetingIdentifier:
setLocateAssetCache:
setTaskPriority:
setQosClass:
setDiscretionaryType:
setDuetBudgetingIdentifier:
setAllowsAuthentication:
externalDownloadSkipATSCheck
setEnforceATS:
setRequestReason:
_allowsExpensiveNetwork
setAllowsWatchCellularAccess:
allowsWatchCellularAccess
setMaximumWatchCellularTransferSize:
setChunkSize:
setChunkType:
setChunkDigests:
chainFairPlayDecryptionToConsumer:withDPInfo:digest:error:
initWithDPInfo:error:
setStreamAdapter:
_streamingZipOptionsWithChunkedDigest:quarantineOptions:
_allowsCellularNetwork
_allowsConstrainedNetwork
_quarantineOptions
setDownloadResponse:
_didLoadAssetSize
_downloadResponse
T@"AppInstallDownloadResponse",&,V_downloadResponse
_initWithInstallID:result:dataConsumer:assetRequest:error:event:
finishInstallID:
dataConsumer
_assetRequest
_assetSize
_event
_packageID
_requestCount
_dataConsumer
T@"AssetRequest",R,V_assetRequest
T@"NSNumber",R,V_assetSize
T@"AIMDownloadEvent",R,V_event
Tq,R,V_packageID
TQ,R,V_requestCount
T@"<AssetDataConsumer>",R,V_dataConsumer
allowsAuthentication
bytesPerSecondLimit
setBytesPerSecondLimit:
clientIdentifier
setClientIdentifier:
connectionPool
discretionaryType
duetBudgetingIdentifier
enforceATS
expectedDiskUsage
setExpectedDiskUsage:
loadingPriority
setLoadingPriority:
locateAssetCache
maximumWatchCellularTransferSize
networkBudgetingIdentifier
protocolClasses
setProtocolClasses:
qosClass
rangeOffset
requestReason
requestUUID
setRequestUUID:
taskPriority
_allowsAuthentication
_allowsCellularAccess
_allowsConstrainedNetworkAccess
_allowsExpensiveNetworkAccess
_allowsWatchCellularAccess
_enforceATS
_locateAssetCache
_requiresPowerPluggedIn
_qosClass
_bytesPerSecondLimit
_clientIdentifier
_connectionPool
_discretionaryType
_duetBudgetingIdentifier
_expectedContentLength
_expectedDiskUsage
_loadingPriority
_maximumWatchCellularTransferSize
_networkBudgetingIdentifier
_protocolClasses
_rangeOffset
_requestReason
_requestUUID
_taskPriority
TB,V_allowsAuthentication
TB,V_allowsCellularAccess
TB,V_allowsConstrainedNetworkAccess
TB,V_allowsExpensiveNetworkAccess
TB,V_allowsWatchCellularAccess
T@"NSNumber",&,V_bytesPerSecondLimit
T@"NSUUID",&,V_clientIdentifier
Tq,V_connectionPool
T@"<AssetDataConsumer>",&,V_dataConsumer
Tq,V_discretionaryType
T@"NSString",&,V_duetBudgetingIdentifier
TB,V_enforceATS
TQ,V_expectedContentLength
TQ,V_expectedDiskUsage
T@"NSUUID",&,V_externalID
T@"NSNumber",&,V_loadingPriority
TB,V_locateAssetCache
T@"NSNumber",&,V_maximumWatchCellularTransferSize
T@"NSString",&,V_networkBudgetingIdentifier
T@"NSArray",&,V_protocolClasses
TI,V_qosClass
TQ,V_rangeOffset
TB,V_requiresPowerPluggedIn
Tq,V_requestReason
T@"NSUUID",&,V_requestUUID
T@"NSNumber",&,V_taskPriority
setValue:forKey:
appUpdatesToFinish
cancelProgress
coordinatorPause
coordinatorReasons
coordinatorResume
failedTestFlightInstalls
finishProgress
legacyNotifications
restoresToHydrate
restoresCompleted
schedulerPollReason
shouldPostAppsDone
shouldPostUpdatesDone
shouldRefreshApplicationBadge
shouldPostProcessAutomaticUpdatesCompleted
restoreCompleted
addFailedTestFlightInstallWithBundleID:devicePairingID:error:
addLegacyNotification:
addRestoreToHydrate:
finishProgressForBundleID:
postAppsDone
postUpdatesDone
refreshApplicationBadge
_appUpdatesToFinish
_cancelProgress
_coordinatorPause
_coordinatorReasons
_coordinatorResume
_failedTestFlightInstalls
_finishProgress
_legacyNotifications
_restoresToHydrate
_restoresToPrioritize
_schedulerPollReason
_restoresCompleted
_shouldPostAppsDone
_shouldPostUpdatesDone
_shouldRefreshApplicationBadge
_shouldPostProcessAutomaticUpdatesCompleted
T@"NSSet",R,N
TQ,R,N
TB,R,N,V_restoresCompleted
removeObjectIdenticalTo:
postProgress:
_notificationClients
_notificationSources
_deltaPackage
TB,V_deltaPackage
_allowClientOverrideForConnection:
initWithProcessIdentifier:remoteObjectProxy:clientOverrideEntitled:
octaneConfigurationDirectory
manager
_allowClientOverride
_processDownloadsForTransactions:
updatedTransactions:
checkServerQueueForClient:reply:
copyWithOverrides:
_apiVersionForClientDict:
errorToASDError:
overrideClient:forBundleIdentifier:untilDate:
addMessageForBundleID:accountDSID:status:completionHandler:
proxyForItemID:
initWithURL:error:
_initWithApplicationExtensionRecord:
_processPayment:excludeReceipt:privacyAcknowledgementRequired:forClient:apiVersion:paymentDelegate:reply:
canMakePayments
_allowPaymentRequestData
fileURLWithPath:isDirectory:
finishPaymentWithIdentifier:reply:
removeDownloadsForTransactionID:
removedEntitlementsForProductIdentifiers:
restoreCompletedTransactionsForUsername:client:reply:
startDownloadWithID:client:
downloadAdded:
cancelDownloadWithID:
pauseDownloadWithID:
setCustomReceiptURL:
setProxyBundeID:
setProxyBundleVersion:
setProxyDeviceIdentifierForVendor:
setProxyStoreExternalVersionID:
setProxyStoreItemID:
receiptFlags
_storeFrontManagerForClientType:
promotionInfoForProductIdentifiers:bundleID:error:
addPurchaseIntent:
purchaseIntentAppInstallSheetOpenForBundleID:
purchaseIntentsForBundleID:afterDate:
clearPurchaseIntentsForBundleID:
requestProductsWithIdentifiers:client:replyBlock:
fetchRevocationsForOctaneWithBundleID:reply:
fetchRevocationsForAccount:inApp:reply:
_shouldNotifyOfStorefrontChange:
storefrontChanged:
downloadID
state
timeRemaining
installPath
downloadStatusChanged:
downloadRemoved:
allowPurchaseRequestData
processDownloadsForTransactions:
initWithContentsOfFile:
_getTLD:
ams_message
typeForURL:
initialize
downloadManager:updatedStatus:
addDownloadWithID:
addPurchaseIntent:reply:
authenticateAndSyncTransactionsAndStatusWithReply:
checkForMessages
deleteContentForProductID:
enumerateCurrentReceiptsForProductID:withReceiver:reply:
enumerateReceiptsForProductID:withReceiver:reply:
enumerateUnfinishedTransactionsWithReceiver:reply:
finishPaymentWithIdentifier:
forceSandboxForBundleIdentifier:untilDate:
insertMessageForBundleID:status:useSandboxAccount:reply:
handleInvalidReceipt:
invalidateTransactionsAndStatusCacheWithReply:
lookUpItemIDsForDeletableSystemAppsWithBundleIDs:reply:
presentCodeRedemptionSheet
processPayment:forClient:paymentDelegate:reply:
promotionInfoForProductIdentifiers:client:reply:
purchaseIntentAppInstallSheetOpenForBundleIdentifier:reply:
purchaseIntentsForClient:clearOnRetrieval:reply:
requestProductReview
requestProductReviewWithInterfaceOrientation:bundleIdentifier:replyBlock:
restoreCompletedTransactionsToQueue:forUsername:withClient:replyBlock:
resumeDownloadWithID:
setClientOverrides:forBundleIdentifier:untilDate:reply:
setPromotionInfo:forClient:reply:
statusForSubscriptionGroupID:reply:
storefrontWithReplyBlock:
useAppStoreDaemonWithReplyBlock:
refundRequestForTransactionId:replyBlock:
manageSubscriptionsRequestWithReply:
xcodeTestCertificatesWithReply:
xcodeTestServerPortWithReplyBlock:
registerArcadeAppWithRandomFromLib:randomFromLibLength:resultHandler:
arcadeSubscriptionStatusWithNonce:resultHandler:
repairArcadeApp
registerForInstallAttribution
updateConversionValue:
startAdImpressionWithConfig:completionHandler:
endAdImpressionWithConfig:completionHandler:
processPaymentResponse:apiVersion:
_hasArcadeEntitlement
_offerCodeRedemptionURLForBundleID:storeItemID:
_domainForDeveloperPingback
_isValidForReview
_urlTypeForURL:bag:error:
_pid
_urlSession
_finishPaymentQueue
_paymentQueue
_productRequestQueue
_appTerminationQueue
_remoteObject
T@"<ASDStoreKitClientProtocol>",R,N,V_remoteObject
attributeToAppStore
revoked
setSuccess:
_attributeToAppStore
_revoked
_receiptFlags
_receipt
T@"ACAccount",C,N,V_account
TB,N,V_attributeToAppStore
TQ,N,V_receiptFlags
T@"ASFReceipt",R,N,V_receipt
TB,R,N,V_revoked
performStartup
holdKeepAliveTransaction:whilePerformingBlock:
mainQueue
_run
globalStore
transactionCount
activeTransactions
currentRunLoop
T@"RunLoop",R
serviceBroker
runUntilIdleExit
T@"XPCServiceBroker",R
resetPurchaseIntentTimestampsForBundleID:
currentRequest
environmentForTask:
presentAuthenticateRequest:resultHandler:
presentEngagementRequest:resultHandler:
checkInEnvironment:forTag:
checkOutEnvironmentForTag:
_tagEnvironment
nextObject
initWithPrefix:suffix:
_prefixEnumerator
_suffixEnumerator
initWithEnumerator:transform:
_transform
evaluateWithObject:
initWithEnumerator:predicate:
initWithDictionary:copyItems:
lib_categorizeItemsUsingBlock:
lib_enumerateObjectsUsingBlock:
stringWithCapacity:
lib_digestMD5
subdataWithRange:
initWithLength:
mutableBytes
setLength:
lib_shortDigestMD5
lib_gzippedData
addMessageInfo:withError:
_checkServerForMessagesForAccount:bag:messageInfo:reply:
_getRevocationsForAccountID:inApp:reply:
initWithBagContract:account:bundleID:status:
initWithBagContract:account:bundleID:
addRevocationInfo:
_removeRevocationsForAccountID:inApp:
removeRevocationInfoForUser:inApp:
messageInfoForAccount:inApp:
messageURLForAccount:bag:messageInfo:reply:
showMessage:forAccount:inApp:useItmsUI:
checkServerForMessagesForAccount:bag:bundleID:reply:
setReason:
defaultContext
contextWithReason:
humanReadableReason
isBackgroundRequest
shouldPerformUpdates
setCallbackHandler:
includeMetrics
setIncludeMetrics:
isVPPLookup
setIsVPPLookup:
_contextLogKey
_includeMetrics
_isVPPLookup
_callbackHandler
T@?,C,N,V_callbackHandler
TB,V_includeMetrics
TB,V_isVPPLookup
Tq,V_reason
configuration
_obliterateAllBackgroundSessionsWithCompletionHandler:
setRequest:
setProperties:
setSignpostId:
progressWithTotalUnitCount:
signpostId
setAction:
addErrorBlock:
_prepareDataConsumerUsingTaskInfo:
initWithRequestID:promiseBlock:
setPromise:
taskInfoForTask:
countOfBytesReceived
requestOffset
countOfBytesExpectedToReceive
promise
properties
setBytesReceived:
taskIdentifier
keepAliveWithFormat:
ignoreAssetCache
setIgnoreAssetCache:
action
_completeNetworkActivityWithReason:usingTaskInfo:
_reportMetricsForTaskInfo:withCompletionError:
_finishPromiseUsingTaskInfo:
_retryTaskUsingTaskInfo:
setMetrics:
networkActivity
setNetworkActivity:
asset_configurationIdentifierUsingProperties:
setConfigurationID:
asset_ephemeralSessionConfigurationUsingProperties:
asset_backgroundSessionConfigurationUsingProperties:
cachedSession:maximumWatchCellularTransferSize:
session
bytesReceived
finishWithResult:
removeTaskInfo:
initWithTask:metrics:
shouldCollectMetricsForContext:
initWithContext:
setRequestOffset:
_prepareRequestUsingTaskInfo:
request
_setRequiresShortConnectionTimeout:
_startTaskUsingTaskInfo:withRequest:
set_nw_activity:
HTTPUserAgent
_findSessionUsingTaskInfo:withProperties:
_startNetworkActivityUsingTaskInfo:withTask:
configurationID
recordTaskInfo:forTask:
set_priority:
set_bytesPerSecondLimit:
set_loadingPriority:
obliterateBackgroundSessionsAndHandleEventStream
URLSession:dataTask:_didReceiveData:completionHandler:
URLSession:_willRetryBackgroundDataTask:withError:
URLSession:_willRetryBackgroundDataTask:
URLSession:task:_schemeUpgraded:completionHandler:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
URLSession:task:_isWaitingForConnectionWithError:
URLSession:task:_isWaitingForConnectionWithReason:
URLSession:_taskIsWaitingForConnection:
URLSession:task:_conditionalRequirementsChanged:
URLSession:task:_didReceiveInformationalResponse:
_delegateQueue
_sessions
T@"NSURLSessionConfiguration",R
launchAppStoreWithURL:withReplyHandler:
_handlePingMessage:fromDevice:
receiveMessage:
initWithListenerEndpoint:
setInterruptionHandler:
activePairedDevice
setUuid:
uuid
initWithAccount:authorizeReason:
performAuthorizationWithCompletionHandler:
waitUntilFinishedWithTimeout:
initWithPingURLs:
replyWithProtobuf:messageType:
activeClientsWithReplyHandler:
addSubscriberWithEndpoint:
pingWithReplyHandler:
sendCommandWithDetailedReplyHandler:handler:
sendCommandWithReplyHandler:handler:
_listenerConnections
_listenerLock
_applyNetworkEmulation:
nullIdentity
_postStateChangeNotification
_subscriptionContext
_emulation
_emulationToken
_roaming
roaming
TB,R,GisRoaming,V_roaming
attributesOfFileSystemForPath:error:
availableDiskSpaceAtPath:
ensureAvailableDiskSpace:atPath:
recoverableDiskSpaceAtPath:
T@"SyncTaskScheduler",R
_executeStatement:canFailMigration:bindings:
executeOptionalStatement:bindings:
executeStatement:bindings:
_success
TB,R,V_success
purchaseIntentsForBundleID:afterDate:error:
postPurchaseIntentNotificationIfNeededForBundleIDs:
_bundleIdForCurrentInstallSheet
initWithUTF8String:
initWithObjectsAndKeys:
fileSystemRepresentation
_initWithServiceClient:
_initWithServiceClient:processInfo:
takeKeepAliveTransaction:
releaseKeepAliveTransaction:
currentRequestTokenWithProcessInfo:
internalRequestTokenWithProcessInfo:
voucher
_internal
_serviceClient
_voucher
internal
TB,R,GisInternal,V_internal
T@"NSString",R,V_logUUID
T@"<XPCNotificationClient>",R
T@"XPCServiceClient",R,V_serviceClient
T@"NSObject<OS_voucher>",R,V_voucher
proxyAppBundleID
proxyAppName
initWithRequest:bag:
getValuesForProperties:
_finishDownloadIfNecessary:phase:installValues:
_addFailedTestFlightInstallIfNecessaryForInstallValues:error:changeset:
errorValueForProperty:
initWithObjects:
foreignDatabaseTablesToDelete
foreignKeyColumnForTable:
setInstallPhase:
setStoreMetadata:
T@"MIStoreMetadata",C
setOwnerAccountId:
purchase_purchaseWithPurchaseInfo:
setErrorDomain:
setErrorDescription:
hasErrorDomain
setErrorCode:
setHasErrorCode:
hasErrorCode
hasErrorDescription
errorDomain
errorCode
errorDescription
_errorCode
_errorDescription
_errorDomain
T@"NSString",&,N,V_errorDomain
Ti,N,V_errorCode
T@"NSString",&,N,V_errorDescription
strongToStrongObjectsMapTable
_close
_verifiedStatementForPreparedStatement:error:
clearBindings
reset
_executeStatement:error:
_verifiedStatementForSQL:error:
finalizeStatement
_open
_flushAfterTransactionBlocks
_prepareStatement:error:
_finalizeAllStatements
_executeWithError:usingBlock:
step
_resetAfterCorruptionError
_resetAfterIOError
_performResetAfterCorruptionError
initWithStatement:onConnection:
_statementForPreparedStatement:error:
dispatchAfterTransaction:
executePreparedQuery:withResults:
executePreparedStatement:error:
lastChangeCount
open
truncate
currentError
executeWithError:usingBlock:
_afterTransactionBlocks
_database
_didResetForCorruption
_preparedStatements
_transactionDepth
_transactionWantsRollback
T@"NSError",R,C,N
T@"SQLiteConnectionOptions",R,C,N,V_options
T@"<SQLiteConnectionDelegate>",W,N,V_delegate
initWithItems:
_userDatabase
_systemDatabase
T@"SQLiteDatabase",R
_webkit_encodeHostName
lib_stringSantiziedAndTruncatedToLength:
lib_stringByLimitingToLength:addElipsis:
_bytesReceived
TQ,V_bytesReceived
T@"NSError",&,V_error
T@"NSURLSessionTaskMetrics",&,V_metrics
_requestURL
_parseURLFromResponseData:
lib_installedStoreAppEnumerator
_assumeIdentity:
_currentIdentityWithIdentity:
exceptionWithName:reason:userInfo:
assumeDaemonIdentity
_unitTest_resetIdentity
T@"<Identity>",R
persistedDataPathForDomain:
cachedDataPathForDomain:
namespaceWithSuffix:
apsDelegatePort
machPortName
getTopicFromString:
getTopicString:
initWithAPSMessage:
pushTopic
T@"NSDate",R
URLByAppendingPathComponent:isDirectory:
_lib_receiptName
lib_receiptURL
scheduler
valueBlock
errorBlock
_valueBlock
_errorBlock
T@?,R,V_valueBlock
T@?,R,V_errorBlock
T@"<TaskScheduler>",R,V_scheduler
setPromptTitle:
setDefaultButtonString:
setCanMakeAccountActive:
_accountFromSystemAlertDialogWithOptions:error:
promptTitle
defaultButtonString
textFieldWithPlaceholder:secure:
setKeyboardType:
addTextField:
setUsername:
ams_setRawPassword:
initWithUsername:logKey:
authenticateResult
usernameEditable
setUsernameEditable:
_username
_usernameEditable
_authenticateResult
T@"AMSAuthenticateResult",R,V_authenticateResult
T@"NSString",R,V_logKey
TB,V_usernameEditable
setProxyAppName:
_buildDialogRequest
finishWithError:
lib_isCancelled
_buildAuthenticateRequestForAccount:
setAuthorizeReason:
setFamilyMemberAccountID:
performAuthorization
initWithApplication:
performRefetchWithCompletionHandler:
_performAuthenticationForAccount:
_performAuthorizationForAccount:
_beginSessionWithDPInfo:error:
initWithChunkedDigest:
setResumptionOffset:
_resetDecryptionBufferAndDigestVerifier
_resizeSampleSizeArray:
digest
setDigest:
streamAdapter
_partialSampleBuffer
_partialSampleBufferLength
_consumerQueue
_digestVerifier
_sampleSizes
_sampleSizesCount
_digest
T@"ChunkedDigest",&,V_digest
T@"<AssetDataConsumer>",&,V_streamAdapter
initWithPredicate:
initWithAssetType:
runQueryAndReturnError:
systemAppServerUrl
attributes
lookupSystemApplicationWithBundleID:
lookupSystemApplicationsWithBundleIDs:
lookupResults
_lookupResults
T@"NSArray",R,C,V_lookupResults
initWithEnvironment:
initWithEnvironment:queue:
_newConnectionForEnvironment:dispatchQueue:
initWithEnvironment:queue:apsConnection:
addPushTypeForCurrentAccount
addPushTypeForCurrentSandboxAccount
_updateTopicsInConnection:
publicToken
_sendPushTypesRequest:accountID:forEnvironment:isSandboxAccount:
shutdown
requestTokenForTopic:identifier:
invalidateTokenForTopic:identifier:
pushConnection:didReceiveRawMessage:
pushConnection:didReceiveToken:forTopic:
initWithEnvironmentName:namedDelegatePort:queue:
_retryAddPushTypeRequestForAccountID:isSandboxAccount:forEnvironment:
setEnabledTopics:ignoredTopics:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
testFlightTopicEnabled
setTestFlightTopicEnabled:
removePushTypeForAccountId:
removePushTypeForSandboxAccountId:
requestTokenForTopic:
invalidateTokenForTopic:
_unitTest_sendFakeRawMessage:
_appStoreMessageHistory
_testFlightMessageHistory
_testFlightTopicEnabled
T@"<PushConnectionDelegate>",W,V_delegate
_requestPromiseForInstall:
_startRequest:forPersistentID:
addSuccessBlock:
promiseWithAll:
setDialogOptions:
isEnabled
descriptiveName
registeredName
criteria
deadline
setNextPostTargetDate:forActivity:
_nextPostDateForActivity:validatedRefreshInterval:
_addIntervalActivity:activityShortName:scheduledDate:refreshInverval:forceReset:reason:
resetActivity:reason:forceReset:block:
activityShortNameForType:
isActivityEnabled:
_addActivityType:reason:forceReset:
_addRepeatingDailyActivity:requiresNetwork:reason:
_addOcelotResetPayoutActivityWithReason:
postIntervalSecondsOverrideForActivity:
_activityTypeForName:
nextPostDateForActivity:
handleWakeWithName:
_activityNameForType:
nextOcelotPayoutResetDate
registerActivity:withReason:
resetActivity:reason:
unregisterActivity:withReason:
_handleWakeupForActivity:
_registerActivity:activityShortName:criteria:reason:
_runXPCActivityIfNeeded:withActivityName:
_setupActivities
_calloutQueue
dialogForDownload:
setSourceApplicationWithBundleID:
lib_pathWithParameters:
lib_interfaceTypeForPath:
usesInterfaceType:
lib_interfaceType
lib_pathForSourceApplicationBundleIdentifier:
isAsynchronous
_dispatchCompletionBlock
completionBlock
initWithoutKeepAlive
T@"NSError",C,V_error
TB,V_success
initWithDomain:
_registerForSettingsChangeNotifications
_setActiveAccountPreferenceValue:forKey:isTopLevel:
_getActiveAccountPreferenceValueForKey:withDefaultValue:isTopLevel:
_setAutomaticDownloadsEnabled:forKind:withCompletion:
_postSettingsChangedExternallyNotification
_synchronizeAutomaticDownloadsSettingWithCompletion:
_getAutomaticDownloadsEnabledForKind:withCompletion:
_settingsBag
initWithAccount:bag:
enabledMediaKinds
initWithEnabledMediaKinds:account:bag:
synchronize
_handleSettingsChangedExternallyNotification
_synchronizeNanoKey:
bagForProfile:profileVersion:
synchronizeNanoDomain:keys:
synchronizeSharedDefaultsToPhone
getActiveAccountPreferenceValueForKey:withDefaultValue:
setActiveAccountPreferenceValue:forKey:
setAutomaticSoftwareDownloadsEnabled:withCompletion:
getAutomaticSoftwareDownloadsEnabledWithCompletion:
_domainAccessor
_npsManager
T@"NSNumber",&,N
_hasRecentlyAttemptedToLaunchApplication:
_recordAttemptToLaunchApplication:
application
T@"ApplicationProxy",R,C,N,V_application
optionsWithDictionary:
presentFirstUsageDialogIfNeededForBundleID:
_download
_accessWasUnblocked
_constrainedResult
_expensiveResult
_interfaceMask
TB,R,V_accessWasUnblocked
Tq,V_constrainedResult
Tq,V_expensiveResult
TQ,V_interfaceMask
TB,V_suppressDialogs
_sessionClass
_transactionClass
T@"NSString",&,V_schemaName
T#,V_sessionClass
T#,V_transactionClass
lib_importKeybagData:
lib_keybagSyncDataForAccount:withTransactionType:
lib_keybagSyncStringForAccount:withTransactionType:error:
string
formattedText
_copyEntitlementsForTask:withPID:
_hasLegacyEntitlement:forTask:withPID:
sharedConnection
isAppAnalyticsAllowed
isDiagnosticSubmissionAllowed
effectiveBoolValueForSetting:
_featureNameForMediaType:
effectiveValueForSetting:
initWithInteger:
isDiagnosticsSubmissionAllowed
rankForMediaType:
initWithProtobufData:type:isResponse:
setMessageID:
setReply:
_reply
_messageType
_messagePayload
_messageID
T@"XDCDevice",&,V_device
T@"NSString",&,V_messageID
reply
TB,GisReply,V_reply
T@"NSData",R,V_messagePayload
TS,R,V_messageType
_dialogForUpdateWithName:andSize:remaining:
_dialogForDownloadWithName:andSize:remaining:
_buttonActionsWithNowTitle:
dialogForUpdatesWithSize:
_sessionWithClientInfo:
dataTaskPromiseWithRequestProperties:forRequest:
localizedTitle
localizedMessage
setText:
mapTableWithKeyOptions:valueOptions:
_notifyObserversDownloadStatusChanged:
initWithDownloadID:info:client:
setStatusBlock:
isExecuting
pause
_downloadLock
_downloadQueue
_pendingDownloads
_newBodyDictionaryWithAccountID:
keybag
initWithRestoreAppInstalls:account:
successfulItems
failedItems
_restoreInstalls
_successfulItems
_failedItems
T@"ACAccount",C,V_account
T@"NSArray",R,V_successfulItems
T@"NSDictionary",R,V_failedItems
setHTTPContentType:
arrayWithObjects:
_initWithComponents:
_isValid
osVersion
_valueForComponent:
_findCompatibleDescriptor:
_findCompatibleDescriptorForDevice:fromVariants:
productType
_filterAndSortVariants:compatibleWithDevice:
findCompatibleDescriptorFromDictionary:usingKeyProfile:
hasCompatibleDescriptorFromArray:
hasCompatibleDescriptorFromDictionary:usingKeyProfile:
_components
_universal
T@"OSVersion",R,C
universal
TB,R,GisUniversal,V_universal
fetchLatestVersion
errorData
deviceBasedVPP
hardFailWithError:
isBootstrapping
setVid:
softFailWithError:
_logCodeForRestoreType:
setFetchLatestVersion:
_fetchLatestVersion
TB,V_fetchLatestVersion
T@"NSObject<OS_xpc_object>",R
enabled
TB,R,GisEnabled
Tr*,R
T@"NSString",R,C,N,V_bundleID
T@"NSXPCConnection",R,N,V_connection
TQ,R,N,V_transactionID
transactionIDsCount
transactionIDs
_setAMSProperties
enforceAllowListForDomain:
setDiagnosticServiceEntitlement:
setDiagnosticServiceProvider:
setIAPHistoryServiceEntitlement:
setIAPHistoryServiceProvider:
setInstallationServiceEntitlement:
setInstallationServiceProvider:
setLibraryServiceEntitlement:
setLibraryServiceProvider:
setPurchaseServiceEntitlement:
setPurchaseServiceProvider:
setPurchaseHistoryServiceEntitlement:
setPurchaseHistoryServiceProvider:
setRepairServiceEntitlement:
setRepairServiceProvider:
setUpdatesServiceEntitlement:
setUpdatesServiceProvider:
setCrossfireServerEntitlement:
setCrossfireServiceProvider:
_startOctaneListener
setHARLoggingEnabled:
setFlushDelayEnabled:
boolForKey:ifMissing:
setPurchaseAccountFallback:
_cacheDatabase
_octaneDelegate
_octaneListener
_serviceBroker
openApplicationWithBundleID:
_initWithDictionary:applyingAssetStrategy:installedItem:
_initWithError:accountID:
_errorWithFailureType:customerMessage:
_optimalDownloadWindowFromDictionary:
initWithDictionary:applyingAssetStrategy:installedItem:
currentCalendar
dateBySettingHour:minute:second:ofDate:options:
dateByAddingUnit:value:toDate:options:
errorForItemID:
anonymousPings
clusterMappings
rangesToLoad
shouldCancelPurchaseBatch
setShouldCancelPurchaseBatch:
setTriggeredQueueCheck:
installAttributionPingbackFetchURLString
installAttributionError
_itemErrors
_isPreorder
_shouldCancelPurchaseBatch
_triggeredQueueCheck
_anonymousPings
_clusterMappings
_keybag
_rangesToLoad
_installAttributionPingbackFetchURLString
_installAttributionError
T@"NSArray",R,V_anonymousPings
T@"NSArray",R,V_clusterMappings
T@"NSData",R,V_keybag
T@"NSDictionary",R,V_metrics
TB,R,V_isPreorder
T@"NSArray",R,V_rangesToLoad
TB,V_shouldCancelPurchaseBatch
TB,V_triggeredQueueCheck
T@"NSString",V_clientID
T@"NSString",R,V_installAttributionPingbackFetchURLString
T@"NSError",R,V_installAttributionError
T@"SQLiteDatabaseStoreDescriptor",R
modifyUsingTransactionClass:withBlock:
database
T@"SQLiteDatabase",R,V_database
mediaKindsQueryString
sessionReporterKey
lastRefreshDate
_endTime
Td,R,V_endTime
Td,R,V_startTime
initToMemory
initWithStream:
startContainerWithCode:
writeUInt8:withCode:
writeUInt64:withCode:
endContainerWithCode:
propertyForKey:
originalRequest
locateActionWithIdentifier:
style
lib_cancelled
TB,R,Glib_isCancelled
tcr_url
_initWithLSApplicationRecord:
containingBundleRecord
platform
URLByResolvingSymlinksInPath
codeSignatureVersion
applicationMissingRequiredSINF
installType
appStoreToolsBuildVersion
ocelotApps
counterpartIdentifiers
hasSuffix:
stringByReplacingOccurrencesOfString:withString:options:range:
runsIndependentlyOfCompanionApp
isWatchOnly
proxyForBundle:
proxyForBundleURL:
shortDescription
familyID
purchaseOwner
parentApplicationBundleID
appClipIsConfiguredForIAP
appPlatform
canonicalExecutablePath
missingRequiredSINF
sinfPath
installFailureReason
betaExternalVersionID
isConfiguratorInstall
isFactoryInstall
isStandaloneWatchApp
record
setDownloaderDSID:
setFamilyID:
setAppClip:
setParentApplicationBundleID:
setAppClipIsConfiguredForIAP:
setAppPlatform:
setCanonicalExecutablePath:
setShortVersionString:
setAppleSigned:
setProfileValidated:
setHasMIDBasedSINF:
setMissingRequiredSINF:
setApplicationType:
setInstalled:
setPlaceholder:
setBeta:
setBetaExternalVersionID:
setDeviceIdentifierForVendor:
setThinningVariantID:
updateAvailability
setUpdateAvailability:
_signingFlags
_appClipIsConfiguredForIAPValue
_extensionReceiptURLs
_storeMetadata
_appClip
_appClipIsConfiguredForIAP
_appleSigned
_profileValidated
_hasMIDBasedSINF
_missingRequiredSINF
_installed
_offloaded
_placeholder
_beta
_record
_familyID
_parentApplicationBundleID
_appPlatform
_bundlePath
_canonicalExecutablePath
_localizedName
_shortVersionString
_softwarePlatform
_applicationType
_betaExternalVersionID
_deviceIdentifierForVendor
_thinningVariantID
_updateAvailability
_companionBundleID
standaloneWatchApp
TB,R,GisStandaloneWatchApp
TQ,N,V_updateAvailability
T@"NSString",&,N,V_companionBundleID
T@"PurchaseOwner",R
T@"LSApplicationRecord",R,N,V_record
T@"NSNumber",&,N,V_downloaderDSID
T@"NSNumber",&,N,V_familyID
T@"NSNumber",&,N,V_purchaserDSID
TB,N,GisAppClip,V_appClip
T@"NSString",&,N,V_parentApplicationBundleID
TB,N,V_appClipIsConfiguredForIAP
TQ,N,V_appPlatform
T@"NSString",&,N,V_bundlePath
T@"NSString",&,N,V_canonicalExecutablePath
T@"NSString",&,N,V_localizedName
T@"NSString",&,N,V_shortVersionString
Tq,R,V_softwarePlatform
appleSigned
TB,N,GisAppleSigned,V_appleSigned
profileValidated
TB,N,GisProfileValidated,V_profileValidated
TI,R,N
TB,N,V_hasMIDBasedSINF
TB,N,V_missingRequiredSINF
T@"NSData",R,C
TQ,N,V_applicationType
installed
TB,N,GisInstalled,V_installed
TB,N,GisOffloaded,V_offloaded
placeholder
TB,N,GisPlaceholder,V_placeholder
TB,N,GisArcade,V_arcade
beta
TB,N,GisBeta,V_beta
Tq,N,V_betaExternalVersionID
T@"NSString",&,N,V_deviceIdentifierForVendor
Tq,N,V_storeExternalVersionID
T@"NSNumber",&,N,V_storefront
Tq,N,V_storeItemID
T@"MIStoreMetadata",R
T@"NSString",&,N,V_thinningVariantID
updateWithIDSDevice:
pairingID
systemVersion
isLocallyPaired
deviceForIDSDevice:
serviceMinCompatibilityVersion
modelIdentifier
initWithIDSDevice:
thinningHeaders
markAsTombstoneDevice
isActivePairedDevice
isSupported
thinningVariant
isTombstone
_activePairedDevice
_connected
_supported
_tombstone
_destinationID
_thinningVariant
TB,R,GisActivePairedDevice,V_activePairedDevice
connected
TB,R,GisConnected,V_connected
T@"NSString",R,V_destinationID
supported
TB,R,GisSupported,V_supported
T@"NSString",R,V_thinningVariant
tombstone
TB,R,GisTombstone,V_tombstone
_vouchers
cohort
deviceVendorID
externalMapping
isClip
shortVersion
externalTypeForEventType:
externalSubtypeForEventType:
initWithExternalEvent:
addForeGroundUsage:duration:refType:refSource:
appMetadata
eventKey
isDeviceVendorIDRepaired
launchEndTime
launchStartTime
foregroundEvents
temporaryAccountID
setTemporaryAccountID:
_mutableForegroundEvents
_temporaryAccountID
deviceVendorIDRepaired
TB,R,N,GisDeviceVendorIDRepaired
TB,R,N,GisBeta
clip
TB,R,N,GisClip
TC,R,N
T@"NSNumber",C,N,V_temporaryAccountID
_messageForProtectionSpace:
_titleForProtectionSpace:
proposedCredential
protocol
receivesCredentialSecurely
setLocalizedMessage:
setLocalizedTitle:
setUser:
_challenge
_localizedMessage
_localizedTitle
_user
T@"NSString",&,N,V_localizedMessage
T@"NSString",&,N,V_localizedTitle
T@"NSString",&,N,V_user
queuePurchaseInfo:
_failPurchaseWithError:usingPurchaseInfo:
_completePurchaseBatch
lib_sendAuthenticationRequestForPurchaseInfo:
_setError:
initWithPurchaseInfo:requestToken:
initWithPurchaseInfos:requestToken:
infoEnumerator
cancelPurchaseBatchWithError:
completePurchaseWithResults:usingPurchaseInfo:
_responseItems
_machineBased
T@"NSEnumerator",R
TB,R,GisMachineBased,V_machineBased
T@"XPCRequestToken",R,V_requestToken
_copyExecutablePathForPID:
_copyBundleForExecutablePath:
_copyInfoDictionaryForExecutablePath:
lastPathComponent
lib_agentProcessInfo
lib_daemonProcessInfo
T@"NSURLSession",&,N,V_session
T@"NSNumber",&,N,V_maximumWatchCellularTransferSize
enumerateByteRangesUsingBlock:
_validateAndResetDigestError:
_hashBuffer:length:
_hashData:
initWithDigest:type:
finalAndVerifyError:
verifyBuffer:length:error:
verifyData:error:
bytesProcessed
bytesValidated
_hashDigest
_index
_bytesProcessed
_bytesValidated
TQ,R,V_bytesProcessed
TQ,R,V_bytesValidated
_startPackageKitInstall
_installResponse
T@"AppInstallInstallResponse",R,V_installResponse
_initWithInstallID:result:error:
approveInstallID:
continueInstallID:
terminateInstallID:
_initWithStatus:error:
TB,R,GisDataComplete
failed
TB,R,GisFailed
removeAllInstallInfo
setCoordinatorID:
setInstallEvent:
setSignpostID:
terminationAssertion
setTerminationAssertion:
_assetPromise
_downloadEvent
_downloadProgress
_installEvent
_operation
_terminationAssertion
T@"AssetPromise",&,V_assetPromise
T@,&,V_coordinator
T@"NSUUID",&,V_coordinatorID
T@"AIMDownloadEvent",&,V_downloadEvent
T@"NSProgress",&,V_downloadProgress
T@"AIMInstallEvent",&,V_installEvent
T@"AppInstallLogKey",&,V_logKey
T@"NSOperation",W,V_operation
Tq,V_packageID
TQ,V_signpostID
T@,&,V_terminationAssertion
_requestReceiptDataForApplication:error:
_accountForAccountMediaType:
_finishWithReceiptData:error:
_appBundleID:
_bagForAccountMediaType:appBundleID:
_URLRequestWithBag:clientInfo:error:
defaultSessionConfiguration
_useVPPBagURL
_accountWithClientInfo:error:
_requestBodyForApplication:usingOctane:
ams_secureTokenForAccount:
proxyDeviceIdentifierForVendor
receiptFromBundleAtPath:
proxyStoreItemID
proxyStoreExternalVersionID
proxyBundleVersion
proxyBundeID
_accountMediaType
_customReceiptURL
_proxyBundeID
_proxyBundleVersion
_proxyDeviceIdentifierForVendor
_proxyStoreExternalVersionID
_proxyStoreItemID
T@"NSString",C,N,V_accountMediaType
T@"<FetchReceiptTaskDelegate>",W,N,V_delegate
T@"ApplicationProxy",R,N,V_app
T@"NSURL",&,N,V_customReceiptURL
T@"NSString",C,N,V_proxyBundeID
T@"NSString",C,N,V_proxyBundleVersion
T@"NSString",C,N,V_proxyDeviceIdentifierForVendor
TQ,N,V_proxyStoreExternalVersionID
TQ,N,V_proxyStoreItemID
diagnosticClockOffset
_updateTimeOffset
timeOffset
setTimeOffset:
_notifyToken
_timeOffset
Td,N,V_timeOffset
initWithBag:device:
initWithHoldTime:
addTransactionID:
countForObject:
_holdTime
_transactionCount
_transactionStore
T@"NSCountedSet",R,C
isAlmondApp
receiptWithContentsOfFile:
opaqueDSIDString
receiptType
containsString:
receiptDataString
isDSIDless
_clientOverrides
processID
_clientOverrideEntitled
_ignorePaymentRestriction
_purchasesDisabledForAppClip
_remoteObjectProxy
_isAlmondApp
_isAppClip
_processID
_requestBundleID
_deviceVendorIdentifier
Ti,R,N,V_processID
T@"ACAccount",R,N
T@"URLBag",R,N
T@"NSURL",R,N,V_bundleURL
T@"NSString",R,N,V_bundleVersion
T@"NSString",R,N,V_clipBundleID
T@"NSURL",R,N,V_customReceiptURL
T@"NSString",R,N,V_deviceVendorIdentifier
TB,R,N,V_isAlmondApp
TB,R,N,V_isAppClip
T@"NSString",R,N,V_localizedName
T@"NSString",R,N,V_requestBundleID
Tq,R,N,V_storeExternalVersionID
Tq,R,N,V_storeItemID
TB,R,N,V_purchasesDisabledForAppClip
_showInternalConnectionDialogWithError:
_messageForError:
_results
T@"NSArray",R,C,V_results
getAppEventsWithCompletionBlock:
recordLaunchesWithCompletionBlock:
recordMetricsWithCompletionBlock:
recordAppEvent:completionBlock:
resetMetricsWithCompletionBlock:
sendMetricsWithCompletionBlock:
flushMetricsWithCompletionBlock:
reportAppEvent:completionBlock:
_serviceListenerWithName:
setClasses:forSelector:argumentIndex:ofReply:
setInterface:forSelector:argumentIndex:ofReply:
askToShowMessageWithReplyBlock:
removedTransactions:
_storeKitServiceInterface
remoteObjectProxy
bundleRecordWithBundleIdentifier:allowPlaceholder:error:
_global
_currentTimeSynchronized
_synchronizeWithURLResult:
_init
_logState
_readState
_dateFormatter
systemUptime
responseHeaders
_dateFromHeaderValue:
_writeState
_hashForServerDate:systemUptime:
getBytes:length:
_persistentStatePath
isEqualToData:
_timeIntervalSinceLastServerResponse
_currentTime
_lastServerDate
_uptimeAtLastServerResponse
bindArray:atPosition:
bindData:atPosition:
bindDataCopy:atPosition:
bindDate:atPosition:
bindDictionary:atPosition:
bindDouble:atPosition:
bindFloat:atPosition:
bindInt:atPosition:
bindNullAtPosition:
bindStringCopy:atPosition:
bindURL:atPosition:
firstNumberValue
T@"NSNumber",R,C,N
getAllIAPsForActiveAccountWithReplyHandler:
getIAPsForActiveAccountWithAdamIDs:withReplyHandler:
refreshIAPsForActiveAccountWithReplyHandler:
setSubscriptionEntitlementsWithDictionary:forAccountID:segment:
getSubscriptionEntitlementsForSegment:ignoreCaches:requestingBundleId:withReplyHandler:
getCachedSubscriptionEntitlementsForSegment:withReplyHandler:
getAppStoreConsumedIntroOfferFamilyIdsWithResultHandler:
getSubscriptionEntitlementsIgnoreCaches:forActiveAccountWithReplyHandler:
_dataForRequestWithKnownApps:revision:
_requiredFields
writeString:withCode:
writeUInt32:withCode:
initWithKnownApps:currentRevision:
write:maxLength:
streamError
fileHandleForUpdatingAtPath:
readDataUpToLength:error:
truncateAtOffset:error:
closeAndReturnError:
outputStreamToFileAtPath:append:
initWithDownloadPath:
_downloadPath
_outputStream
_savedBytes
_verifier
_percentComplete
_diskUsage
ams_configurationWithProcessInfo:bag:
_lib_protocolDelegate
initWithProtocolDelegate:
initWithConfiguration:delegate:delegateQueue:
lib_dataTaskPromiseWithRequest:environment:
lib_newDefaultSessionWithDelegate:
invalidateExpiredFailures
_isErrorExemptFromThrottle:
initWithClock:duration:persistence:
recordError:forItemID:externalVersionID:
recordSuccessForItemID:
shouldRequestItemID:externalVersionID:error:
_clock
_duration
_persistence
initWithNotificationClient:
presentAuthenticateRequest:usingClient:resultHandler:
presentDialogRequest:usingClient:resultHandler:
presentEngagementRequest:usingClient:resultHandler:
clientMaySupportNotifications
_notificationClient
authenticationType
setArtworkURL:
createPlaceholder
setCreatePlaceholder:
reportRemotely
setReportRemotely:
watchApplicationMode
setWatchApplicationMode:
_createPlaceholder
_reportRemotely
_artworkURL
_watchApplicationMode
T@"NSURL",&,V_artworkURL
TB,V_createPlaceholder
TB,V_reportRemotely
Tq,V_status
T@"NSNumber",&,V_storeItemID
Tq,V_watchApplicationMode
_initWithNotificationCenter:
_beginProgress:withReason:
_dirtyProgress:
_postProgress:
_flushProgress
existingAppForBundleID:
finishProgressForBundleID:withReason:
preFinishProgressForBundleID:withReason:
remoteSystemPlaceholders
removeRemotePlaceholderForBundleID:
_notificationCenter
_placeholders
_progressStore
_dirtyProgress
_copyTableClusteredValuesWithValues:
_insertValues:intoTable:withPersistentID:onConnection:
_deleteRowFromTable:usingColumn:
foreignDatabaseTableForProperty:
foreignDatabaseColumnForProperty:
_persistentID
Tq,R,N,V_persistentID
_presenterForRequestWithPurchaseInfo:
shouldUseJSONContentTypeForPurchaseInfo:
_isTinker
_repairedTinkerAccountWithPurchaseInfo:
_sendXDCMessageToRequestWatchAuthOnPairedPhoneWithLogKey:
activeDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
ams_setAltDSID:
ams_setDSID:
initWithPurchaseBatch:
responses
_purchasing
_responses
T@"NSArray",R,V_responses
initWithDownloadID:
downloadPathForID:
_sendDownloadStatus
timerWithTimeInterval:target:selector:userInfo:repeats:
mainRunLoop
addTimer:forMode:
_downloadedBytes:expectedBytes:
_finalizeTaskWithError:
setState:
setTimeRemaining:
_updateDownloadStatus:
setInstallPath:
_bomInstall
statusBlock
stringByDeletingPathExtension
_bomInstallFromPath:withError:
pathWithComponents:
moveItemAtPath:toPath:error:
setDownloadID:
_downloadInfo
_installPath
_statusTimer
_pendingDownloadStatus
_timeEstimator
_paused
_copier
_expectedInstallSize
_totalInstalledSize
_downloadID
_statusBlock
T@"InAppDownloadStatus",&,N,V_status
T@"NSNumber",C,N,V_downloadID
T@?,C,N,V_statusBlock
setClusterID:
setClusterVersion:
setUsageWeight:
fetchPromiseID:withError:
_setPromiseUsingSpecification:withError:
_newPromiseUsingDefinition:
initWithCoordinator:error:
failPromiseID:forReason:withError:
setContext:
_handlePotentialProvisionedApp:itemID:status:logKey:
processPurchaseInfos:requestToken:withCompletionHandler:
resultWithRestrictedActivity:bundleID:
_performAccountPurchases:
arrayByAddingObject:
lib_batchedWithMaxSize:
_performPurchaseBatch:forAccount:outError:
_failPurchaseWithError:usingPurchaseInfo:withCompletionHandler:
_displayCellularDialogsIfNecessary
performUpdatePurchases:logKey:isBackgroundRequest:requestToken:jobResults:error:
taskWithContext:
_addItemIDToArrayIfNotPresent:array:
jobResults
orderedBundleIDs
setOrderedBundleIDs:
_updatesPurchases
_jobResultItems
_orderedBundleIDs
T@"UpdatesContext",&,N,V_context
T@"NSArray",C,N,V_orderedBundleIDs
removeConnectionWithUUID:
subscriptionGroupID
_parseResponse:
_subscriptionGroupID
_statuses
T@"NSString",R,N,V_subscriptionGroupID
T@"NSArray",R,N,V_statuses
reloadFromDatabaseEntity:properties:
setValues:forProperties:count:
setValues:forExternalProperties:count:
externalPropertyValues
setExternalValuesWithDictionary:
_databaseID
_propertyValues
_externalPropertyValues
Tq,N,V_databaseID
T@"NSDictionary",R,C,N,V_propertyValues
T@"NSDictionary",R,C,N,V_externalPropertyValues
arrayValueForProperty:
dictValueForProperty:
memoryEntityForPersistentID:usingConnection:
didCreateTask:fromRequest:error:
reconfigureNewRequest:originalTask:redirect:error:
_protocolDelegate
_initWithRevision:forAccountID:requestingAccount:client:purchaseHistoryContext:
initWithTask:
newTaskInfoForTask:
exchangeTaskForTaskInfo:withTask:
removeAllTaskInfo
_ignoreAssetCache
_action
_configurationID
_networkActivity
_promise
_request
_requestOffset
_signpostId
Tq,V_action
T@"NSString",&,V_configurationID
TB,V_ignoreAssetCache
T@"KeepAlive",&,V_keepAlive
T@"NSObject<OS_nw_activity>",&,V_networkActivity
T@"NSProgress",&,V_progress
T@"AssetPromise",W,V_promise
T@"AssetRequestProperties",&,V_properties
T@"NSURLRequest",&,V_request
TQ,V_requestOffset
T@"NSURLSession",W,V_session
TQ,V_signpostId
T@"NSURLSessionTask",R,V_task
removeMessageInfoForUser:inApp:withError:
backgroundSessionConfigurationWithIdentifier:
_asset_setConfigurationDefaults
_asset_setConfigurationUsingProperties:
set_connectionCachePurgeTimeout:
set_longLivedConnectionCachePurgeTimeout:
set_preventsIdleSleepOnceConnected:
_asset_configurationIdentifierUsingProperties:
setHTTPCookieAcceptPolicy:
setHTTPShouldSetCookies:
setHTTPShouldUsePipelining:
set_timingDataOptions:
set_sourceApplicationSecondaryIdentifier:
set_atsContext:
set_requiresPowerPluggedIn:
set_allowsWCA:
set_maximumWatchCellularTransferSize:
set_infersDiscretionaryFromOriginatingClient:
_asset_initializeConnectionPools
_queryActiveInstallationStatisticsOnConnection:
_queryJettisonCandidatesOnConnection:
_verifyBootstrapCompleteOrNotRequired:
_findJettisonCandidateForPriority:
setActiveInstallsCount:
setStartedInstalls:
_verifyActiveInstallation:
removeObjectsAtIndexes:
_jettisonCandidates
_activeInstallsCount
_startedInstalls
TQ,V_activeInstallsCount
T@"NSArray",&,V_startedInstalls
initWithIdentity:
settingsForIdentity:
_constraints
_identity
_settings
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
alphanumericCharacterSet
characterSetWithCharactersInString:
formUnionWithCharacterSet:
invertedSet
componentsSeparatedByCharactersInSet:
isAbsolutePath
stringWithFileSystemRepresentation:length:
compare:options:
lib_numberValue
lib_accountDSIDValue
lib_stringByAppendingPathComponents:
lib_volumePath
lib_skanIsVersionFidelityAware
lib_skanIsVersionMultiAware
getAggregatedEventMap:eventType:context:
createMetricsEventForAppEvent:eventType:context:
getAppMetadataForBundleID:connection:context:
isCandidateAppProxy:isMetadataLookup:
isCandidateAppMetadata:
createAppEventFromAppMetadata:
getAppUsageSessionForBundleID:context:
createMetricsEventFromAppMetadata:eventType:context:
setAppEventType:
setAppUsageType:
setClip:
setClipAppType:
setCohort:
setShortVersion:
decorateMetricsEvent:context:
appPlatformForAppPlatformType:
setProperty:forBodyKey:
setAppSessionReporterKeyRepaired:
setAppSessionReporterKey:
setInstallType:
setForegroundEvents:
metricsDictionary
underlyingDictionary
getAppEventsForType:context:orderingProperties:
createMetricsEventsForEventType:context:
_getCurrentAppsWithContext:
orderedSetWithOrderedSet:
readCurrentApps:
metadataForBundleID:date:
_isCandidateAppMetadata:context:
isAtEnd
scanUpToCharactersFromSet:intoString:
writeAppMetadataForBundleIDs:context:
writeAppMetadata:context:
createAggregateMetricsEventsForEventType:events:context:
createAppEventsForBundleIDs:eventType:installType:connection:context:
createMetricsEventsForEventType:events:context:
getAppEventsForType:context:
getPriorAppMetadataWithContext:
getDeletedAppsEventsWithContext:
getLaunchAppEventsWithContext:
removeAppUsageSessiondForBundleID:context:
shouldEnableAppUsageMetricsForSession:override:
writeCurrentAppMetadata:
_timeRemaining
T@"NSNumber",&,N,V_downloadID
Td,N,V_progress
Tq,N,V_state
Td,N,V_timeRemaining
T@"NSString",&,N,V_installPath
resolveWithAMSPromise:
initWithAMSPromise:
sharedDefaultEvaluator
initWithPathEvalulator:
addObserver:forKeyPath:options:context:
_setPropertiesUsingPath:
observeStateWithBlock:
_forcePropertyRefresh
companionState
pairedDeviceConnected
wifiState
wifiActive
telephonyState
simActive
TB,R,GisConnected
constrained
TB,R,GisConstrained
expensive
TB,R,GisExpensive
observeValueForKeyPath:ofObject:change:context:
_pathEvaluator
_connectionStateObserver
_constrained
_expensive
TB,R,GisConstrained,V_constrained
TB,R,GisExpensive,V_expensive
initWithConnection:testFlightConsumer:
_pushHandlerWithBagContract:
_handleAccountDidChangeNotification:
_initializeConnectionsAndSkipEnvironmentCheck:
_flushPendingMessagesWithActionType:
_processReceivedTestFlightMessage:withConnection:
_processReceivedAppStoreMessage:withConnection:
setEnabledActionTypes:
initWithConfiguration:bag:
isValidEnvironment:
shouldHandleNotification:
handleNotification:
_queuePendingAppStoreMessage:withActionType:
_unitTest_waitForSetup
_consumers
_pendingMessages
_pushHandler
_pushDiagnostic
_stateHandle
_checkRequestThrottle
_buildRequestTask
finishWithSuccess
_buildRequestParametersWithError:
setAnisetteType:
familyMemberAccountID
authorizeReason
promiseWithResult:
thenWithBlock:
_buildRequest
_authorizeReason
_familyMemberAccountID
Tq,V_authorizeReason
T@"NSNumber",C,V_familyMemberAccountID
startPurchase:requestToken:withReplyHandler:
prepareAndGroupPurchaseInfos:
isPurchaseInFlightForBundleID:
purchaseQueue
setPurchaseQueue:
_activeBatches
T@"AMSPurchaseQueue",&,N,V_purchaseQueue
connection:hasEntitlement:
setAppStoreServiceEntitlement:
setAppStoreServiceProvider:
ArcadeServiceEntitlement
setArcadeServiceEntitlement:
installAttributionServiceEntitlement
setInstallAttributionServiceEntitlement:
setMetricsServiceEntitlement:
setMetricsServiceProvider:
_AppStoreServiceProvider
_diagnosticServiceProvider
_CrossfireServiceProvider
_IAPHistoryServiceProvider
_installationServiceProvider
_libraryServiceProvider
_MetricsServiceProvider
_PurchaseHistoryServiceProvider
_PurchaseServiceProvider
_RepairServiceProvider
_UpdatesServiceProvider
_AppStoreServiceEntitlement
_ArcadeServiceEntitlement
_diagnosticServiceEntitlement
_CrossfireServerEntitlement
_IAPHistoryServiceEntitlement
_installationServiceEntitlement
_installAttributionServiceEntitlement
_libraryServiceEntitlement
_MetricsServiceEntitlement
_PurchaseHistoryServiceEntitlement
_PurchaseServiceEntitlement
_RepairServiceEntitlement
_UpdatesServiceEntitlement
T{_ASDServiceEntitlement=@@},V_AppStoreServiceEntitlement
T@?,C,V_AppStoreServiceProvider
T{_ASDServiceEntitlement=@@},V_ArcadeServiceEntitlement
T{_ASDServiceEntitlement=@@},V_diagnosticServiceEntitlement
T@?,C,V_diagnosticServiceProvider
T{_ASDServiceEntitlement=@@},V_CrossfireServerEntitlement
T@?,C,V_CrossfireServiceProvider
T{_ASDServiceEntitlement=@@},V_IAPHistoryServiceEntitlement
T@?,C,V_IAPHistoryServiceProvider
T{_ASDServiceEntitlement=@@},V_installationServiceEntitlement
T@?,C,V_installationServiceProvider
T{_ASDServiceEntitlement=@@},V_installAttributionServiceEntitlement
T{_ASDServiceEntitlement=@@},V_libraryServiceEntitlement
T@?,C,V_libraryServiceProvider
T{_ASDServiceEntitlement=@@},V_MetricsServiceEntitlement
T@?,C,V_MetricsServiceProvider
T{_ASDServiceEntitlement=@@},V_PurchaseHistoryServiceEntitlement
T@?,C,V_PurchaseHistoryServiceProvider
T{_ASDServiceEntitlement=@@},V_PurchaseServiceEntitlement
T@?,C,V_PurchaseServiceProvider
T@?,C,V_RepairServiceProvider
T{_ASDServiceEntitlement=@@},V_RepairServiceEntitlement
T{_ASDServiceEntitlement=@@},V_UpdatesServiceEntitlement
T@?,C,V_UpdatesServiceProvider
_installEnterpriseApps:withReplyHandler:requestToken:
_installSystemApps:withReplyHandler:requestToken:
_installWatchApps:onPairedDevice:withReplyHandler:requestToken:
stringByAppendingPathExtension:
_requestThrottle
taskWithXPCAppMetadata:forDevice:requestToken:requestThrottle:
installAppReviewApps:withReplyHandler:
installEnterpriseApps:onPairedDevice:withReplyHandler:
installScreenSyncApps:withReplyHandler:
installSystemApps:onPairedDevice:withReplyHandler:
installWatchApps:onPairedDevice:withReplyHandler:
_bagChangedNotification
initWithFormat:locale:arguments:
initWithDouble:
processUpdate:existingUpdate:expectedCodeSignatureUpdateEvidForItemID:forReason:
_setUpdateState:forBundleID:itemID:withPurchaseID:isUserInitiated:logKey:
_logState:forBundleID:logKey:
deleteUpdatesInstalledBefore:
mergeAvailableUpdates:withReason:updatableApps:expectedCodeSignatureUpdateEvidForItemID:availableCount:notifyChanges:bundleIDs:
setUpdateState:forBundleID:evid:
sendDialog:account:
hasUuid
_uuid
T@"NSString",&,N,V_uuid
_requestID
T@?,C,V_progress
T@"NSUUID",R,V_requestID
dataForSinfDataKey:
setHidden:forStoreItemID:withReplyHandler:
showAllWithReplyHandler:
updateForAccountID:withContext:withReplyHandler:
updateWithContext:withReplyHandler:
initWithOSStateData:length:
setPipeline:
_applyChangesForChangeset:transaction:
_applyExternalChangesForChangeset:
_handleAnalyticsUsageSwitchChange:
_handleUninstalledEventNotification:
_flushMetricsWithContext:reason:completion:
_getAppEventsWithCompletionBlock:
_recordExternalAppEvents:completionBlock:
_recordInternalEventsForBundleIDs:eventType:installType:context:
_recordLaunches
_postMetrics
_resetWithReason:resetActivity:
setOsBuild:
setPlatform:
setTimeRangeStart:
setTimeRangeEnd:
initWithPriorInstalls:installEvents:
_includeLaunches
_allAppEvents:
recordDeletedApps:
_shouldEnableCrossfireMetricsForSession
_cleanup:reason:
_removeAppsWithBundleIDs:context:
_removeAppWithBundleID:context:
_resetDB
writeToFile:atomically:encoding:error:
setupWithReason:
shouldPostCrossfireMetrics
_createAggregateMetricsEventsForEventType:events:context:
_updateLaunchdWakeupFileForMacOS
_collectingMetrics
_osBuild
_loadDownloadsFromStart:toEnd:
_clearDuplicateItemsFromQueue:
_newURLRequestWithStartIdentifier:endIdentifier:error:
_handleResponse:
_presenter
_storeItems
T@"NSOrderedSet",R,C,V_storeItems
_setPropertiesUsingBundle:
_setupUserAgent
_copyExecutablePathForConnection:
initWithApplicationID:
auditTokenData
userAgent
clientIDHeader
_clientVersion
_userAgent
_clientIDHeader
T@"NSString",R,V_clientIDHeader
previousExternalVersionID
previousVariantID
_appAlreadyInstalledForPurchaseInfo:hasVersionOfBundleIDInstalled:
initWithPurchaseInfo:requestThrottle:
_appAlreadyRequestedForPurchaseInfo:
_companionBundleIDForItemID:requestToken:
initWithName:applicableEntitlement:mergeHandler:
applicableEntitlement
mergeHandler
_mergeHandler
_applicableEntitlement
T{_ASDServiceEntitlement=@@},R,V_applicableEntitlement
T@?,R,C,V_mergeHandler
T@"NSString",R,C,V_name
assets
thinnedAssets
skipLatestVersionCheck
markInstallsAsFailedWithCodeSigErrorForBundleIDs:evid:
initWithItems:account:
targetItems
isErrorBadTokenError:
_processBatchFailureItems:error:context:
_processContentRestoreResponse:context:
remainingItemIDs
itemMap
hardFailItem:withError:
softFailItem:withError:
hardFailures
softFailures
capabilities
itemSucceeded:storeItem:
isErrorSoftFail:
initWithRestoreAppInstalls:
setSkipLatestVersionCheck:
_skipLatestVersionCheck
_hardFailures
_softFailures
TB,V_skipLatestVersionCheck
TB,GisUserInitiated,V_userInitiated
T@"NSArray",R,V_hardFailures
T@"NSArray",R,V_softFailures
_itemMap
_remainingItemIDs
_targetItems
T@"NSMutableArray",R,N,V_hardFailures
T@"NSDictionary",R,V_itemMap
T@"NSMutableArray",R,N,V_remainingItemIDs
T@"NSMutableArray",R,N,V_softFailures
T@"NSMutableArray",R,N,V_successfulItems
T@"NSArray",R,V_targetItems
_parseAssetsFromDictionary:applyingAssetStrategy:withInstalledItem:
_parseMetadataFromDictionary:
copyWritableMetadataForAccount:includeVariant:
itemWithDictionary:
copyWritableMetadataForAccount:
_gameCenterEnabled
_gameCenterEverEnabled
_hasMessagesExtension
_hasWatchApp
_hasWatchIndependentApp
_hasWatchOnlyApp
_purchasedRedownload
_supports32BitOnly
_alternateIconName
_appReceiptData
_artistName
_assetDeltaPackage
_assetFullPackage
_bundleDisplayName
_bundleShortVersion
_cancelDownloadURL
_capabilities
_iAdAttribution
_iAdConversionString
_iAdImpressionString
_kind
_messagesArtworkURL
_preflightPackageURL
_purchaseDate
_ratingLabel
_ratingRank
_storeTransactionID
_subGenres
_nameTranscriptions
T@"NSString",R,V_alternateIconName
T@"NSData",R,V_appReceiptData
T@"NSString",R,V_artistName
T@"NSString",R,V_artworkURL
T@"StoreAsset",R,V_assetDeltaPackage
T@"StoreAsset",R,V_assetFullPackage
TB,R,GisAutomatic,V_automatic
T@"NSNumber",R,V_betaExternalVersionID
T@"NSString",R,V_bundleDisplayName
T@"NSString",R,V_bundleShortVersion
T@"NSString",R,V_bundleVersion
T@"NSString",R,V_cancelDownloadURL
T@"NSDictionary",R,V_capabilities
T@"NSNumber",R,V_evid
TB,R,V_gameCenterEnabled
TB,R,V_gameCenterEverEnabled
TB,R,V_hasMessagesExtension
TB,R,V_hasWatchApp
TB,R,V_hasWatchIndependentApp
TB,R,V_hasWatchOnlyApp
T@"NSNumber",R,V_iAdAttribution
T@"NSString",R,V_iAdConversionString
T@"NSString",R,V_iAdImpressionString
T@"NSNumber",R,V_itemID
T@"NSString",R,V_itemName
T@"NSString",R,V_kind
TB,R,V_launchProhibited
T@"NSString",R,V_messagesArtworkURL
T@"NSURL",R,V_preflightPackageURL
T@"NSString",R,V_purchaseDate
purchasedRedownload
TB,R,GisPurchasedRedownload,V_purchasedRedownload
T@"NSString",R,V_redownloadParams
T@"NSString",R,V_releaseDate
T@"NSString",R,V_ratingLabel
T@"NSNumber",R,V_ratingRank
T@"NSString",R,V_storefront
T@"NSString",R,V_storeTransactionID
T@"NSString",R,V_storeCohort
T@"NSArray",R,V_subGenres
TB,R,V_supports32BitOnly
T@"TimeWindow",R,V_optimalDownloadWindow
T@"NSDictionary",R,V_nameTranscriptions
_newDateFormatter
iAdConversionDate
iAdImpressionDate
_newResponseWithURLResult:error:
allowPromptForAuth
_hasAttemptedAuth
_allowPromptForAuth
TB,V_allowPromptForAuth
TQ,V_segment
clusterID
clusterVersion
setLaunchesWeight:
initWithExternalMapping:
clusterKey
_clusterID
_clusterVersion
T@"NSNumber",C,N,V_clusterID
T@"NSNumber",C,N,V_clusterVersion
bundleContainerURL
URLByAppendingPathExtension:
metadataFromPlistAtURL:error:
_targetIsContainer
_targetURL
externalIDStringsType
clearExternalIDStrings
externalIDStringsCount
externalIDStringsAtIndex:
setHasError:
hasError
_externalIDStrings
T@"NSMutableArray",&,N,V_externalIDStrings
Ti,N,V_error
installForExternalID:
totalPendingRestoreDownloadSize
_pipeline
T@"<AppInstallPipeline>",W,V_pipeline
_doubleForKey:applicationId:ifMissing:
_copyNumberForKey:applicationId:
_setBool:forKey:applicationId:
_boolForKey:applicationId:ifMissing:
_setDouble:forKey:applicationId:
_setNullableValue:forKey:
_restoreInstallsFailedWithCodeSigError
_setRestoreInstallsFailedWithCodeSigError:
accountPropertyForKey:
clearDefaultForKey:
numberForKey:
setArrayForKey:forKey:
setDictionaryForKey:forKey:
setString:forKey:
setBool:forKey:
lastArcadeStatusConditionSetDate
setLastArcadeStatusConditionSetDate:
recordMigratedAppUsageDB
crossfirePostMetricsSamplingPercentageOverride
setDiagnosticClockEnabled:
setDiagnosticClockOffset:
appUsageActorID
appTasteProfileEnabled
appUsageDailyPostCountOverride
appUsageDBMigrated
appUsageEnableMetricsForActorIDSession
appUsageFlushDnuIntervalOverride
appUsageFlushDnuTargetDate
appUsageNextPostTargetDate
appUsagePostMetricsSamplingPercentageOverride
appUsageResetActorIDOverride
appUsageResetActorIDTargetDate
appUsageTaskGracePeriodOverride
appUsageTaskSpreadPeriodOverride
clearAppUsageRecordMetricsForActorIDSession
setAppUsageActorID:
setAppUsageDBMigrated
setAppUsageEnableMetricsForActorIDSession:
setAppUsageFlushDnuTargetDate:
setAppUsageNextPostTargetDate:
setAppUsageResetActorIDTargetDate:
badgeCount
keepTemporaryFiles
marketingDemoMode
setBadgeCount:
ocelotAppAnalyticsClientID
arcadeRepairTimeout
ocelotDefaultApp
ocelotDeviceGUID
ocelotDeviceID
ocelotDeviceIDCreationDate
ocelotPayoutDeviceID
ocelotPayoutResetDate
ocelotShouldRetrySlotOptOut
ocelotSubscriptionState
setArcadeRepairTimeout:
setOcelotAppAnalyticsClientID:
setOcelotApps:
setOcelotDeviceGUID:
setOcelotDeviceID:
setOcelotDeviceIDCreationDate:
setOcelotPayoutResetDate:
setOcelotPayoutDeviceID:
setOcelotShouldRetrySlotOptOut:
setOcelotSubscriptionState:
useArcadeSwitchUser
powerPluggedInOverride
userAgentSuffix
forceSbsyncForArcadeRepairs
attemptedPreflightAccountIDs
clearRestoreDefaults
clearShouldSuppressTermsAndConditionsDialogs
followUpAccounts
performedPostRestoreSoftwareUpdate
restoreItemKinds
restoreItemsForKey:
restoreSoftFailureRetryDate
setAttemptedPreflightAccountIDs:
setFollowUpAccounts:
setPerformedPostRestoreSoftwareUpdate:
setRestoreSoftFailureRetryDate:
setRestoreItemKinds:
setRestoreItemValue:forKey:
setShouldSuppressTermsAndConditionsDialogs:
shouldSuppressTermsAndConditionsDialogs
restoreInstallsFailedWithCodeSigError
markInstallAsFailedWithCodeSigErrorForBundleID:evid:
bundleIDsToSkipManageSubsOnDelete
setBundleIDsToSkipManageSubsOnDelete:
installAttributionPingbackDelay
installAttributionSkipSourceIDCheck
installAttributionShouldSendDevPingback
installAttributionDeveloperPingbackOverride
lastUpdateCheckDate
lastAutoUpdateCompletionDate
previouslyInstalledProvisionedApps
setLastAutoUpdateCompletionDate:
setLastAutoUpdatePerformDate:
setLastUpdateCheckDate:
setPreviouslyInstalledProvisionedApps:
useFollowUpsForRestoreFailures
expiredApps
setExpiredApps:
revokedApps
setRevokedApps:
allowDownloadOnCellular
batterySaverEnabledOnStartup
bulletinForKey:
cellularSizeLimitOverride
claimHistory
clearDaemonCommsSemaphore
clearJobApprovalDate
deamonCommsSemaphoreSet
disablePowerOnStartup
enableDeamonCommsSemaphore
jobApprovalDate
lastGarbageCollectionDate
lastJobCleanupDate
lastOSMigrationDate
maxConcurrentJobCount
maxConcurrentThermalLimitedJobCount
recordJobApprovalDate
recordLastGarbageCollectDownloads
recordLastJobCleanupDate
setBulletins:forKey:
setClaimHistory:
setInvalidBuildToolVersions:
setTransporterConfiguration:
skipManagedAppCheck
testFlightVisualFeedbackOverrides
thermalEnabled
transporterConfiguration
useLaunchCountsForAppUsage
useModernFreeSpaceCheck
T@"NSArray",&
_containerURL
scratchPath
_createDirectoryInSearchPath:domain:withPathComponent:
_downloadPathForID:
_rootDownloadPath
contentsOfDirectoryAtPath:error:
_allowedItemsForCachedDataPath
_enforceAllowList:forPath:
_createDirectoryAtBaseURL:withPathComponent:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
setResourceValues:error:
libraryPath
odrScratchPath
cleanupDownloadPathsNotMatchingIDs:
initWithBundleID:connection:type:
_connectionForUUID:
minusSet:
_enumerateAllConnectionsWithBlock:
_eventObservations
_handleUpdatesResponse:forAccount:
_enumerateAppsByAccountUsingBlock:
_logDeferred:
initWithApps:context:
_isWatchOnlyStoreItem:withError:
_validateStoreItem:externalID:withError:
resultWithInvalidActivity:bundleID:
overrideAutomaticType
_insertVoucherForInstall:usingImportResult:
resultWithValidActivity:bundleID:
resultWithExistingActivity:bundleID:
_requestCompanionInstallationForStoreItem:
metadataFromStoreMetadata:
_fileName
_overrideAutomaticType
TB,V_overrideAutomaticType
_registerForNotification
_updateState
_elevated
elevated
TB,R,GisElevated,V_elevated
transactionIDType
clearTransactionIDs
transactionIDAtIndex:
setTransactionIDs:
_transactionIDs
T@"NSMutableArray",&,N,V_transactionIDs
_silentAuthenticateUsingAMS
silentAuthOnly
_authenticateWithCompletionHandler:
authenticateReason
setAuthenticateReason:
dialogDictionary
setDialogDictionary:
_silentAuthOnly
_authenticateReason
_dialogDictionary
Tq,V_authenticateReason
T@"NSDictionary",C,V_dialogDictionary
TB,V_silentAuthOnly
shouldReportAnonymousPings
_pingURLs
_cachedFamilyInfoLookupResultForAccount:ignoreCacheTimeout:logKey:
_performFamilyInfoRequestForAccount:error:
_processURLResult:
_cacheFamilyInfoLookupResult:forAccount:
performTaskWithBlock:
_pathForCachedFamilyInfoLookupResult
_currentCachedFamilyInfoWithLogKey:
T@"<AMSBagProtocol>",&,N,V_bag
lib_rfc3339String
lib_dateHasPassed
lib_simpleWeekDate
lib_secondsFromNow
_chunkSize
_chunkDigests
_chunkType
T@"NSArray",C,N,V_chunkDigests
TI,N,V_chunkSize
Tq,N,V_chunkType
Tq,R,N,V_status
initWithFormat:arguments:
T@"DispatchQueue",R
assertQueue
syncUsingBlock:
_queue
isFileURL
initWithURL:resolvingAgainstBaseURL:
lib_URLByAppendingPathComponents:
URLQueryAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
lib_sanitizedFilePath
indexOfObjectPassingTest:
initWithInt:
columnIndexByName
_strongSelf
T^{sqlite3_stmt=},R,N,V_statement
T@"NSDictionary",R,C,N
TB,R,N,GisReadOnly
_prepare:installEvents:
initWithKey:ascending:
_map
ocelotID
setCount:
appSessionReporterKey
setDeviceVendorID:
setDuration:
appEventType
eventTimeOverride
setForegroundUsage:
setForegroundUsageEvents:
hasBeenPosted
setHasBeenPosted:
weekStartDate
setWeekStartDate:
_eventForType:
_metricsTypeForInstallationType:
_typeForMetricsType:
clusters
timeRangeEnd
timeRangeStart
isAppSessionReporterKeyRepaired
setClientEventID:
setClusters:
setCumulativeUserCount:
setEventTimeOverride:
setCollectionTime:
setHardwareFamily:
setHardwareModel:
setInstallationType:
setOS:
setOcelotID:
setQualifiedDuration:
requiresDiagnosticSendingPermission
tempUserId
setTempUserId:
tempDeviceIdentifer
setTempDeviceIdentifer:
clientEventID
collectionTime
cumulativeUserCount
installationType
osBuild
qualifiedDuration
_appSessionReporterKeyRepaired
_appEventType
_clip
_hasBeenPosted
_installationType
_installType
_tempUserId
_tempDeviceIdentifer
_appSessionReporterKey
_clientEventID
_clipAppType
_clusters
_cohort
_collectionTime
_cumulativeUserCount
_eventTimeOverride
_foregroundEvents
_hardwareFamily
_hardwareModel
_ocelotDeviceID
_ocelotID
_ocelotSubscriptionState
_shortVersion
_timeRangeEnd
_timeRangeStart
_qualifiedDuration
_weekStartDate
T@"NSString",C,N,V_tempUserId
T@"NSString",C,N,V_tempDeviceIdentifer
TC,N,V_appEventType
T@"NSString",C,N,V_appSessionReporterKey
appSessionReporterKeyRepaired
TB,N,GisAppSessionReporterKeyRepaired
Tq,N,V_appUsageType
TB,N,GisBeta
T@"NSString",C,N,V_clientEventID
TB,N,GisClip,V_clip
T@"NSString",C,N,V_clipAppType
T@"NSArray",C,N,V_clusters
T@"NSString",C,N,V_cohort
T@"NSNumber",C,N,V_collectionTime
Tq,N,V_cumulativeUserCount
Tq,N,V_duration
T@"NSNumber",C,N,V_eventTimeOverride
T@"NSArray",C,N,V_foregroundEvents
T@"NSString",C,N,V_hardwareFamily
T@"NSString",C,N,V_hardwareModel
TB,N,V_hasBeenPosted
TC,N,V_installationType
TC,N,V_installType
T@"NSString",C,N,V_ocelotDeviceID
T@"NSString",C,N,V_ocelotID
T@"NSString",C,N,V_ocelotSubscriptionState
T@"NSString",C,N,V_OS
T@"NSString",C,N,V_osBuild
T@"NSString",C,N,V_platform
T@"NSString",C,N,V_shortVersion
T@"NSNumber",C,N,V_startTime
T@"NSNumber",C,N,V_storefront
Tq,N,V_timeRangeEnd
Tq,N,V_timeRangeStart
Tq,N,V_qualifiedDuration
T@"NSString",C,N,V_weekStartDate
willChangeValueForKey:
didChangeValueForKey:
setExecuting:
setFinished:
_executing
_finished
deviceForFromID:
deviceForDestinationID:
deviceForPairingID:
_devices
T@"XDCDevice",R
PushMessage
LibAppStoreDaemon
OctaneBag
AMSBagProtocol
NSObject
TypeCheckedAbstractReader
TypeCheckedReader
AppInstallPostambleTask
MetricsCoordinator
InAppPurchaseIntent
NSCopying
RequestThrottleRecord
NSSecureCoding
NSCoding
DAAPURLRequest
InAppDownloadTimeEstimator
AppInstallRemote
AssetResponse
AIMEvent
SQLitePredicate
SQLitePropertyPredicate
SQLiteComparisonPredicate
SQLiteContainsPredicate
SQLiteNullPredicate
SQLiteCompoundPredicate
StoreKitMessagesDatabaseEntity
SubscriptionEntitlementsResponse
URLBag
AdoptionContract
AppUsageBagContract
ArcadeBagContract
AutoUpdateBagContract
BuildToolsBagContract
DRMRecovery
CrossfireBagContract
OnDemandResourcesBagContract
OwnsCheckBagContract
PlatformConextBagContract
PersonalizationBagContract
IAPInfoBagContract
PurchaseHistoryBagContract
SubscriptionEntitlementsBagContract
UpdatesBagContract
StoreKitBagContract
StoreQueueBagContract
PushNotificationBagContract
SystemAppsBagContract
TestFlightFeedbackBagContract
TestFlightExtensionBagContract
WatchSyncBagContract
WelcomeToAppStoreNotificationBagContract
LibraryQueryPlanner
NSPredicateVisitor
PredicateValidator
HandleInvalidReceiptTask
InAppReceiptManager
URLRequestProperties
AppUpdatesDatabaseStore
XPCServiceBroker
NSXPCListenerDelegate
AppUsageSessionEntity
AppEventEntity
DetectDuplicateRequestTask
XDCAppMetadata
LoadInAppProductsTask
Purchase
InstallTestFlightAppsTask
LibraryExpressionClassifier
PurchaseHistoryHideShowRequestContextItem
PurchaseHistoryHideShowRequestContext
ClockFactory
Extensions
AppInstallImportAndPolicyTask
AppInstallImportResult
AppInstall
ASDBundleProvider
StoreKitMessages
SQLiteDatabaseSession
SubscriptionEntitlementsCoordinator
PushMessageConsumer
SubscriptionRequestInfo
SubscriptionEntitlementsResult
PurchaseHistoryUpdateDAAPResponseDecoder
DKDAAPParserDelegate
StoreItemContext
WriteReceipt
AppPackageEntity
AssetSessionCache
XDCService
IDSServiceDelegate
RepairService
ASDRepairServiceProtocol
FairPlayRepair
ASDBagConsumer
ApplicationRepair
StoreKitMessagesDatabaseSession
AppInstallScheduler
FinishInAppTransactionTask
ExpiredUpdateRecoveryTask
AppPackage
SQLiteDatabaseTransaction
CoordinatorPromiseSpecification
UPPManifest
AppInstallLogKey
InstallEnterpriseAppsTask
PurchaseMetrics
TypeCheckedDictionaryReader
UnfairLock
NSLocking
AppMetricsService
ASDAppMetricsServiceProtocol
PushConnectionMessageHistory
ExpensiveNetworkEvaluatorTask
RepairApplicationTask
ApplicationRepairDelegate
PurchaseHistoryItemsDAAPPartialResponse
PurchaseHistoryItemsDAAPResponseDecoder
PurchaseHistoryManager
ArtworkURLFormatter
Promise
LazyPromise
AppInstallObserver
IXAppInstallObserverDelegate
IXAppInstallCoordinatorObserver
AppInstallPolicy
LogPushConnection
AppInstallsDatabaseTransaction
RequestThrottlePersistence
Migrator
InAppTransactionTask
AMSPurchaseResponseProtocol
IAPInfoIAPEntity
InAppPromotionDatabaseEntity
AppUsageDatabaseTransaction
MetricsContext
CheckStoreQueueTask
PurchaseService
ASDPurchaseServiceProtocol
AppUpdateMemoryEntity
FamilyManager
XDCMessageHandler
XDCLaunchAppResponse
OSVersion
AccountEvent
StoreKitRevocationInfo
AppInstallQueue
AppInstallPipeline
PurchaseHistoryItemsRequestContext
UPPManifestDownloadTask
NSURLSessionTaskDelegate
NSURLSessionDelegate
URLResponseDecoder
AMSResponseDecoding
AppMetricsEvent
AMSEngagementEvent
StoreAsset
Deprecated
InAppPromotionDatabaseTransaction
CellularDataPromptDialogRequest
SQLiteDatabase
SQLiteConnectionDelegate
AppUpdatesDatabaseSession
AssetRequest
RestoreInAppTransactionsTask
AMSURLProtocolDelegate
XDCRegisterAppMessage
SQLiteQuery
SQLiteQueryDescriptor
SQLiteQueryAdditions
UpdatesManager
UpdatesControllerInterface
XDCCancelInstallRequest
URLBagMemoizedValue
MigratorConfiguration
InAppReceiptDatabaseStore
PushDiagnostic
AIMPurchaseEvent
HashDigest
PurchaseHistoryDatabaseStore
OctaneManager
TypeCheckedArrayReader
UpdatesResponse
PurchaseHistoryUpdateRequest
ThreadSafeDictionary
LibraryLazyResultsEnumerator
LibraryResultEnumerator
NSFastEnumeration
SQLiteDatabaseStoreSchema
URLRequestEncoder
AMSRequestEncoding
MigratorAutoUpdateTask
AppMetrics
CoordinatorPromiseDataConsumer
AssetDataConsumer
LoadInAppReceiptsTask
InAppDownload
XPCEventRelay
PushTypesError
PushRegisterTask
InstallAppReviewAppsTask
Optional
SQLiteCursor
UpdatesService
ASDUpdatesServiceProtocol
PurchaseHistoryDatabaseSession
InAppTransactionEntity
PurchaseHistoryUpdateCommand
DiagnosticMessage
PurchaseInfo
AIMSummaryEvent
AppUpdateEntity
ASDExtensions
AppMetadataEntity
RequestEnvironment
Device
InAppReceiptDatabaseSession
Analytics
MetricsHandler
MigratorConfigurationStore
AppMetricsEventEntity
FamilyMember
FamilyInfoLookupResult
InAppPromotionDatabaseStore
InAppReceiptDatabaseShared
ForcedUpdatesTask
XPCServiceClient
ASDServiceProtocol
XPCNotificationClient
AIMDownloadEvent
StoreKitRevocationsDatabaseEntity
XDCLaunchAppRequest
BlockTask
InAppSubscriptionStatusDatabaseEntity
InAppTransaction
XDCProgress
PowerMonitor
XDCProgressMessage
DuetLaunchEvent
AppStoreFoundation
LibraryService
ActiveAccountObserver
AppUsageDatabaseStore
ASDOctaneClientProtocol
StoreKitTestingService
ASDOctaneServiceCombinedProtocol
ASDOctaneServiceProtocol
ASDOctaneServiceInternalProtocol
SQLiteConnectionOptions
CleanupManager
TypeCheckedObjectReader
AppInstallPreambleTask
AppInstallPreambleResponse
ContextObject
InstallCoordinationUninstaller
LibraryUninstall
PromiseResult
OctaneInterface
DiagnosticPublisher
LaunchServicesCatalog
LibraryCatalog
LibraryOpen
LibraryQueryEvaluator
SystemAppLookupItem
SQLiteKeychainHelper
PurchaseOwner
PushTypesTask
InAppPurchaseIntentEntity
DetermineSizeForURLTask
NSURLSessionDataDelegate
LaunchServicesProgress
LSApplicationWorkspaceObserverProtocol
LibraryProgress
UpdatesTask
UpdatableApp
ZipDataStreamAdapter
DeviceStateMonitor
CoordinatorBuilder
MigratorAppUsageTask
IXCoordinatorWithAppAssetPromise
IXCoordinatorWithDeviceSecurityPromise
IXCoordinatorWithInitialODRAssetPromises
IXCoordinatorWithPlaceholderPromise
IXCoordinatorWithInstallOptions
IXCoordinatorWithUserDataPromise
IXCoordinatorWithImportance
lib_IXAppInstallCoordinatorTag
InAppReceiptPropertiesDatabaseEntity
TaskQueue
AppInstallPredicates
StoreItemSubGenre
InAppPurchaseIntentDatabaseStore
PurchaseHistoryDatabaseTransaction
InstallSystemAppsTask
SQLitePreparedStatement
PurchaseHistoryAppEntity
NetworkEmulation
LaunchCoordinator
EvaluatorDownload
LibraryCatalogObserver
ASDAppLibraryServiceProtocol
SQLiteSchema
StoreKitStorefront
AppInstallDownloadTask
AppInstallDownloadResponse
AssetRequestProperties
NSMutableCopying
AppInstallsDatabaseChangeset
XPCNotificationCenter
AIMInstallEvent
StoreKitServiceConnection
StoreKitStorefrontObserver
InAppDownloadManagerObserver
ASDStoreKitServiceProtocol
AppReceiptTask
FetchReceiptTaskDelegate
ASDNotificationCenterDialogObserver
RunLoop
InAppPurchaseIntentDatabaseTransaction
_ProtocolDelegate
ConcatenateEnumerator
TransformEnumerator
FilterEnumerator
StoreKitMessagesManager
UpdatesContext
AssetSession
NSURLSessionDataDelegatePrivate
NSURLSessionTaskDelegatePrivate
AppStoreService
ASDAppStoreServiceProtocol
DiagnosticListener
DiagnosticService
ASDDiagnosticServiceProtocol
CellularMonitor
DiskSpaceManager
TaskScheduler
SyncTaskScheduler
SQLiteDatabaseStoreMigrator
InAppPurchaseIntentManager
XPCRequestToken
_XPCInternalRequestToken
AppInstallEntity
XDCInstallRequest
XDCCancelInstallResponse
SQLiteConnection
PurchaseHistoryHideShowRequest
Environment
InAppPurchaseIntentDatabaseSession
UPPManifestDialogRequest
AssetResult
StoreKitMessagesServerRequest
AccountEventEntity
Identity
DaemonIdentity
PushRawMessage
PromiseObserver
PromptForAccountTask
RefetchKeybag
DecryptDataConsumer
StoreKitMessagesDatabaseStore
SystemAppLookupTask
PushConnection
APSConnectionDelegate
AppDownloadDoneTask
ActivityManager
LowDataEvaluatorTask
Task
WatchSettingsManager
ApplicationContext
_ApplicationContext
TelephonyUtility
ReviewNetworkPolicyTask
SQLiteDatabaseStoreDescriptor
XPCServiceEntitlements
Restrictions
XDCMessage
LowDataModePromptDialogRequest
URLSessionManager
AuthenticationChallengeDialogRequest
LoadUnfinishedInAppTransactionsTask
InAppDownloadManager
AppMetadataEntityCrossfire
ContentRestoreTask
ContentRestoreURLRequestEncoder
LowDataNetworkEvaluator
VariantDescriptor
_UniversalVariantDescriptor
RestoreAppInstall
DeviceSecurityActivity
Activity
OctaneActionContext
DaemonRunLoop
AppStore
StoreItemResponse
SQLiteSchemaMigration
SQLiteDatabaseStore
PurchaseHistoryDAAPEncoding
AppUsageSession
TimeWindow
PurchaseHistoryHideShowRequestEncoder
DAAPRequestDataProvider
TypeCheckedStringReader
ApplicationProxy
XDCDevice
VoucherStore
MigratorMiscellaneousTask
AppMetadata
AppEvent
AuthenticationChallenge
PurchaseBatch
CachedURLSession
DigestVerifier
AppInstallInstallTask
AppInstallInstallResponse
LibraryErrorResultEnumerator
InAppPromotionDatabaseSession
ZipDataStreamStatus
AppInstallInfo
FetchReceiptTask
DiagnosticClock
Clock
LoadStoreQueueRequestEncoder
InAppPromotionManager
TransactionStore
StoreKitClient
UPPManifestAsset
SystemAppBootstrapTask
AppDoneEntity
InAppReceiptDatabaseTransaction
CrossfireService
ASDCrossfireServiceProtocol
ASDStoreKitTransactionReceiverProtocol
ASDStoreKitPaymentProtocol
ASDStoreKitClientProtocol
ASDStoreKitStatusReceiverProtocol
StoreKitServiceListener
SecureClock
SQLiteQueryResults
SQLiteBinding
IAPHistoryService
ASDIAPHistoryServiceProtocol
PurchaseHistoryItemsDAAPRequestEncoder
FileWriteStreamAdapter
RequestThrottle
CallerRequestPresenter
RequestPresenter
InteractiveRequestPresenter
SilentRequestPresenter
ApplicationProgress
ProgressCache
SQLiteEntity
SQLiteTypeChecking
PerformPurchaseTask
InAppDownloadTask
AppClusterMappingEntity
AppInstallRemoteEntity
CoordinatorPromiseProvider
WallClock
0 2A
PerformUpdatesTask
OctaneListener
LoadSubscriptionStatusTask
SQLiteMemoryEntity
_ProtocolHandler
PurchaseHistoryUpdateRequestContext
AssetTaskInfo
StoreKitMessagesDatabaseTransaction
AssetSessionConfiguration
AppSchedulerDatabaseTransaction
AppSchedulerResult
ExpensiveNetworkEvaluator
AppUsageBaseManager
InAppDownloadStatus
AppUsageDatabaseSession
UnitTesting
NetworkMonitor
PushService
PushConnectionDelegate
AuthorizeMachine
PurchaseManager
PurchaseManagerInterface
BaseListener
XPCServiceCatalog
InstallationService
ASDInstallationServiceProtocol
AppEventEntityCrossfire
KeepAlive
AppUpdatesDatabaseTransaction
XDCPingMessage
URLRequest
AppInstallsDatabaseSchema
AssetPromise
StoreSinf
PurchaseHistoryService
ASDPurchaseHistoryServiceProtocol
PurchaseHistoryItemsRequest
AppInstallsDatabaseStore
CrossfireManager
LoadStoreQueueTask
XPCClient
InstallWatchAppsTask
XPCNotificationSource
UPPManifestItem
RestoreBatchTask
RestoreBatchContext
StoreItem
SubscriptionEntitlementsRequest
AppClusterMapping
ClusterKey
AppMetadataLoader
XDCInstallResponse
AppInstallsDatabaseSession
PurchaseHistoryItemsDAAPResponseMetadataParser
AppDefaultsManager
Storage
OctaneClientConnection
UpdatesBatchTask
PurchaseImportTask
ThermalPressureMonitor
PurchaseHistoryUpdateDAAPRequestEncoder
LogTransactions
AuthenticateRequest
AnonymousPingTask
FamilyInfoLookupTask
MigratorTask
ChunkedDigest
StoreKitMessageInfo
DispatchQueue
SQLiteStatement
AppUsageInstallHistoryMap
AppUsageMetricsEvent
AsyncTask
XDCDeviceManager
@24@0:8@16
@16@0:8
Q16@0:8
B24@0:8@16
v16@0:8
@"NSDictionary"
@"NSDate"
B16@0:8
B32@0:8@16@24
@32@0:8@16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
@"AMSBagValue"24@0:8@"NSString"16
v24@0:8@?<v@?@"AMSSnapshotBag"@"NSError">16
@"NSDate"16@0:8
@"AMSBagValue"32@0:8@"NSString"16@"ACAccount"24
@"AMSProcessInfo"16@0:8
@32@0:8@16Q24
@"NSObject<OS_dispatch_queue>"
@"NSString"
v32@0:8@16@24
@24@0:8#16
v24@0:8@16
@40@0:8q16q24@32
@"AppInstall"
@"AppPackage"
v24@0:8q16
@24@0:8q16
v32@0:8q16@24
^{__CFString=}24@0:8q16
v40@0:8q16@24@?32
v32@0:8q16@?24
v28@0:8@16C24
q16@0:8
@"NSNumber"
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32@40
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
d24@0:8@16
@"NSError"
v32@0:8@16@?24
@24@0:8@?16
@48@0:8@16@24@32@?40
@"<DAAPRequestDataProvider>"
@"NSURL"
@"ACAccount"
@"AMSProcessInfo"
@24@0:8Q16
d16@0:8
v24@0:8Q16
@"NSMutableArray"
@36@0:8@16@24B32
v32@0:8@16q24
v32@0:8@16N^i24
@32@0:8@16q24
@40@0:8@16@24q32
@40@0:8@16@24@32
@"SQLiteQuery"
@"NSArray"
Q24@0:8@16
@"AMSBagValue"16@0:8
@"URLBagMemoizedValue"16@0:8
@20@0:8B16
@"<AMSBagProtocol>"
v24@0:8@"NSPredicate"16
v24@0:8@"NSExpression"16
v24@0:8@"NSPredicateOperator"16
@32@0:8@16^@24
@"LibraryExpressionClassifier"
v32@0:8^Q16Q24
B32@0:8@16^@24
[32B]
v40@0:8@16@24@32
v40@0:8@16@?24@?32
v32@0:8@?16@?24
B56@0:8@16@24@32@40^B48
@"InAppReceiptDatabaseStore"
@"StoreKitClient"
@"NSOperationQueue"
@"NSLock"
v20@0:8B16
@"AMSBagValue"
@"NSData"
B32@0:8@16q24
B40@0:8q16@24@32
B32@0:8q16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"NSMutableSet"
@"XPCServiceCatalog"
@"NSXPCListener"
B28@0:8@16B24
B36@0:8@16^{__CFData=}24B32
v48@0:8@16@24q32@40
@"PurchaseInfo"
i16@0:8
v20@0:8i16
{?="downloaderID"b1"externalVersionID"b1"itemID"b1"purchaserID"b1"type"b1"containsMessagesExtension"b1"isBeta"b1"isStoreApp"b1"isSystemApp"b1"launchProhibited"b1"skipIfInstalled"b1"suppressDialogs"b1}
@"XPCRequestToken"
@40@0:8@16@24^@32
@"<LibraryQueryEvaluator>"
@"ASDPurchaseHistoryApp"
B24@0:8^@16
@?16@0:8
@"NSUUID"
@"IXAppInstallCoordinator"
@"AppInstallImportResult"
@24@0:8@"SQLiteConnection"16
@"SQLiteConnection"16@0:8
@"SQLiteConnection"
v32@0:8@"PushService"16@"PushMessage"24
v48@0:8Q16@24B32B36@?40
v40@0:8Q16@24@?32
v32@0:8Q16@24
v40@0:8@16@24Q32
@32@0:8Q16@24
@40@0:8Q16@24^B32
v48@0:8Q16@24@32B40B44
v48@0:8@16@24Q32B40B44
v48@0:8@16Q24@32B40B44
v40@0:8Q16@24B32B36
v40@0:8@16Q24@32
v32@0:8@?16Q24
B24@0:8Q16
@"NSMutableDictionary"
B28@0:8@16I24
v32@0:8@16I24I28
v40@0:8@16I24*28I36
v28@0:8@16I24
v24@0:8@"DKDAAPParser"16
v32@0:8@"DKDAAPParser"16q24
v32@0:8@"DKDAAPParser"16@"NSError"24
B28@0:8@"DKDAAPParser"16I24
v32@0:8@"DKDAAPParser"16I24I28
v40@0:8@"DKDAAPParser"16I24*28I36
v28@0:8@"DKDAAPParser"16I24
@"TimeWindow"
B48@0:8@16@24@32^@40
@32@0:8q16@24
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v36@0:8@16:24S32
v36@0:8@16S24@28
v44@0:8@16S24@28@?36
v44@0:8@16@24B32@?36
@"IDSService"
@"<XDCServiceDelegate>"
v24@0:8@?<v@?B@"NSError">16
v32@0:8@"ASDRepairOptions"16@?<v@?B@"NSArray"@"NSError">24
B40@0:8@16@24@32
i32@0:8@16@24
v24@0:8@"ASDBagKeySetAggregator"16
@"AMSBagKeySet"16@0:8
B32@0:8@"ApplicationProxy"16^@24
@"NSArray"16@0:8
@"<ApplicationRepairDelegate>"16@0:8
v24@0:8@"<ApplicationRepairDelegate>"16
v24@0:8@"NSString"16
B40@0:8@"ApplicationProxy"16@"ASDRepairOptions"24@"NSString"32
@"ApplicationProxy"
@"URLBag"
@"UnfairLock"
@"ASDRepairOptions"
@"<ApplicationRepairDelegate>"
d24@0:8Q16
@"NSObject<OS_dispatch_source>"
@"TaskQueue"
@"AppInstallsDatabaseStore"
@"AppInstallLogKey"
@24@0:8^@16
v28@0:8@16B24
@36@0:8@16B24@28
@32@0:8#16@24
f24@0:8@16
q32@0:8@16q24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v32@0:8q16@?<v@?@"NSArray"@"NSError">24
v32@0:8q16@?<v@?B@"NSError">24
@"EvaluatorDownload"
@"ASDCellularIdentity"
v32@0:8@"<ApplicationRepair>"16@"NSError"24
v32@0:8@"<ApplicationRepair>"16@"ApplicationProxy"24
v48@0:8@16d24i32B36@40
@"<ApplicationRepair>"
@"NSConditionLock"
v44@0:8B16q20@28@?36
v48@0:8q16Q24@32@?40
@40@0:8q16@24^@32
v48@0:8@16Q24@32@?40
@"<PurchaseHistoryBagContract>"
@"PurchaseHistoryDatabaseStore"
@32@0:8q16q24
@48@0:8q16q24@32@40
@32@0:8@16@?24
v32@0:8@?16@24
v40@0:8@?16@?24@32
@32@0:8@?16@24
@"NSRecursiveLock"
@"PromiseResult"
@"<TaskScheduler>"
v32@0:8@16Q24
v24@0:8@"IXAppInstallCoordinator"16
v32@0:8@"IXAppInstallCoordinator"16Q24
v32@0:8@"IXAppInstallCoordinator"16@"NSURL"24
v32@0:8@"IXAppInstallCoordinator"16@"LSApplicationRecord"24
v40@0:8@"IXAppInstallCoordinator"16@"NSError"24Q32
v48@0:8@16d24Q32d40
v48@0:8@"IXAppInstallCoordinator"16d24Q32d40
v32@0:8@"IXAppInstallCoordinator"16@"NSError"24
v40@0:8q16@24@32
@"IXAppInstallObserver"
@"AppInstallScheduler"
v32@0:8q16q24
{?=q[16C]q}32@0:8@16^@24
{?=q[16C]q}36@0:8@16B24^@28
v40@0:8q16q24q32
@"AppInstallsDatabaseChangeset"
B40@0:8@16@24^@32
B32@0:8Q16@24
@"MigratorConfigurationStore"
v48@0:8@16@24@32@?40
v48@0:8@"AMSAuthenticateRequest"16@"AMSPurchase"24@"AMSPurchaseQueue"32@?<v@?@"AMSAuthenticateResult"@"NSError">40
v48@0:8@"AMSDialogRequest"16@"AMSPurchase"24@"AMSPurchaseQueue"32@?<v@?@"AMSDialogResult"@"NSError">40
v48@0:8@"AMSEngagementRequest"16@"AMSPurchase"24@"AMSPurchaseQueue"32@?<v@?@"AMSEngagementResult"@"NSError">40
@48@0:8@16@24q32@40
@56@0:8@16Q24@32q40@48
@"AMSBuyParams"
@"AMSPurchaseQueue"
@"<ASDStoreKitPaymentProtocol>"
@40@0:8@16#24^@32
@"AppUsageInstallHistoryMap"
@"KeepAlive"
@"PurchaseBatch"
v44@0:8@16B24q28@?36
v28@0:8B16@?20
v32@0:8@"NSArray"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"NSArray">16
v32@0:8@"ASDPurchase"16@?<v@?@"ASDPurchaseResponse"@"NSError">24
v32@0:8@"ASDPurchase"16@?<v@?@"ASDPurchaseResult"@"NSError">24
v44@0:8@"NSNumber"16B24q28@?<v@?B@"NSError">36
v28@0:8B16@?<v@?@"NSDictionary"@"NSError">20
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
@"<AdoptionManagerInterface>"
@"<PurchaseManagerInterface>"
q24@0:8@16
B48@0:8@16B24B28^B32^@40
B36@0:8B16@20^@28
@36@0:8B16@20^@28
:16@0:8
v24@0:8:16
@40@0:8{_OSVersion=qqq}16
{_OSVersion="major"q"minor"q"patch"q}
C16@0:8
v40@0:8@16q24@32
v32@0:8@"NSOrderedSet"16@"AppInstallsDatabaseTransaction"24
v40@0:8@"NSOrderedSet"16q24@"AppInstallsDatabaseTransaction"32
v36@0:8B16@20@28
@"AssetSession"
@64@0:8@16@24q32@40@48Q56
B44@0:8@16@24B32^@36
@64@0:8@16@24@32@40@48^@56
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
@"NSOrderedSet"
@"NSURLSession"
@"AMSURLResult"32@0:8@"AMSURLResult"16^@24
q20@0:8C16
@20@0:8C16
@"NSDictionary"16@0:8
v24@0:8@"NSDictionary"16
v20@0:8C16
@40@0:8@16q24@32
@"VariantDescriptor"
@28@0:8@16B24
@32@0:8Q16B24B28
@40@0:8@16Q24B32B36
@28@0:8Q16B24
B24@0:8@"SQLiteConnection"16
v40@0:8@16#24@?32
v32@0:8#16@?24
@"NSHashTable"
@40@0:8@16Q24d32
@"AssetRequestProperties"
v48@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"AMSAuthenticateRequest"32@?<v@?@"AMSAuthenticateResult"@"NSError">40
v48@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"AMSDialogRequest"32@?<v@?@"AMSDialogResult"@"NSError">40
v48@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"AMSEngagementRequest"32@?<v@?@"AMSEngagementResult"@"NSError">40
B40@0:8@"AMSURLSession"16@"NSURLSessionTask"24@"NSError"32
v24@0:8@"AMSMetricsLoadURLContext"16
v40@0:8@"AMSURLSession"16@"AMSAuthenticateRequest"24@?<v@?@"AMSAuthenticateResult"@"NSError">32
v40@0:8@"AMSURLSession"16@"AMSDialogRequest"24@?<v@?@"AMSDialogResult"@"NSError">32
B32@0:8@"AMSURLSession"16@"NSError"24
B40@0:8@"AMSURLSession"16@"ACAccount"24@"NSDictionary"32
B32@0:8@"AMSURLSession"16@"NSDictionary"24
@"SQLiteQueryDescriptor"
v24@0:8#16
@"SQLitePredicate"
v24@0:8@?<v@?B>16
v32@0:8@"XPCRequestToken"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"XPCRequestToken"16@?<v@?@"NSArray">24
v32@0:8@"XPCRequestToken"16@?<v@?q@"NSError">24
v28@0:8B16@?<v@?>20
v40@0:8@"NSArray"16@"XPCRequestToken"24@?<v@?B@"NSArray"@"NSError">32
v36@0:8@16@24B32
@"NSSet"
v24@0:8d16
@28@0:8*16I24
v32@0:8r*16Q24
@28@0:8B16@20
@36@0:8B16Q20@28
q32@0:8Q16@24
@40@0:8q16Q24@32
@40@0:8@16Q24@32
@"OctaneBag"
@"<Device>"
@"<AMSBagProtocol><PurchaseHistoryBagContract>"
@"PurchaseHistoryUpdateRequestContext"
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
@32@0:8q16@?24
@"<NSFastEnumeration>"
B32@0:8q16@?24
@"AMSPromise"32@0:8@"NSURLRequest"16@24
@"NSMutableURLRequest"40@0:8@"NSURLRequest"16@24^@32
@"URLRequestProperties"
@"AMSMetrics"
v32@0:8^v16Q24
v32@0:8@"NSData"16@?<v@?@"NSError"B>24
v24@0:8@?<v@?@"NSError">16
v24@0:8@?<v@?Q@"NSError">16
@48@0:8@16@24@32^@40
@"IXOwnedDataPromise"
@"<CoordinatorPromiseDataConsumerDelegate>"
@"CoordinatorPromiseProvider"
@"CoordinatorPromiseSpecification"
@"<AssetDataConsumer>"
@"InAppDownloadTask"
@52@0:8@16B24@28@36@44
@"<PushNotificationBagContract>"
@"AMSURLRequestEncoder"
@20@0:8i16
d20@0:8i16
i20@0:8i16
i24@0:8@16
q20@0:8i16
C20@0:8i16
^{sqlite3_stmt=}
@"SQLiteStatement"
v36@0:8@16B24@?28
v36@0:8@"NSArray"16B24@?<v@?@"NSError">28
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?q@"NSError">16
v32@0:8@"NSArray"16@?<v@?B@"NSArray"@"NSError">24
@"<UpdatesControllerInterface>"
#24@0:8Q16
Q24@0:8#16
@"<RequestPresenter>"
@"NSUUID"16@0:8
v24@0:8@?<v@?@"<ASDAppStoreServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDArcadeServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDCrossfireServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDClipServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDDiagnosticServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDIAPHistoryServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDInstallationServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDInstallAttributionServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDAppLibraryServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDMacDaemonManagedServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDManagedAppServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDAppMetricsServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDOcelotServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDPersonalizationServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDPurchaseHistoryServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDPurchaseServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDRepairServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDRestoreServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDTestFlightFeedbackServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v24@0:8@?<v@?@"<ASDUpdatesServiceProtocol><NSXPCProxyCreating>"@"NSError">16
v32@0:8@"AMSAuthenticateRequest"16@?<v@?@"AMSAuthenticateResult"@"NSError">24
v32@0:8@"AMSDialogRequest"16@?<v@?@"AMSDialogResult"@"NSError">24
v32@0:8@"AMSEngagementRequest"16@?<v@?@"AMSEngagementResult"@"NSError">24
v32@0:8@"NSArray"16@?<v@?>24
v48@0:8@?16{_ASDServiceEntitlement=@@}24@?40
@"NSXPCConnection"
@"Optional"
@"XPCServiceEntitlements"
v32@0:8Q16@"NSString"24
v32@0:8@"NSData"16@"NSString"24
v40@0:8q16@"NSData"24@"NSUUID"32
v44@0:8B16Q20@28@?36
v48@0:8q16@24@32@?40
v40@0:8@"NSString"16@"NSString"24@?<v@?@"NSError">32
v44@0:8B16Q20@"NSString"28@?<v@?@"NSError">36
v32@0:8@"NSString"16@?<v@?@"NSError">24
v24@0:8@?<v@?q>16
v32@0:8@"NSString"16@?<v@?@"NSError"@"NSString">24
v32@0:8@"NSString"16@?<v@?@"NSError"@"NSData">24
v48@0:8q16Q24@"NSString"32@?<v@?@"NSError">40
v40@0:8@"NSData"16@"NSString"24@?<v@?@"NSError">32
v40@0:8@"NSArray"16@"NSString"24@?<v@?@"NSError">32
v48@0:8q16@"NSString"24@"NSData"32@?<v@?@"NSUUID">40
v32@0:8@"NSUUID"16@"NSString"24
v40@0:8Q16@"NSString"24@?<v@?@"NSError"q>32
v48@0:8q16Q24@"NSString"32@?<v@?@"NSError"B>40
v40@0:8Q16@"NSString"24@?<v@?@"NSError"@"NSString">32
v48@0:8@"NSString"16Q24@"NSString"32@?<v@?@"NSError">40
v40@0:8Q16@24@32
v40@0:8Q16@"NSString"24@"NSString"32
v32@0:8@"NSArray"16@"NSString"24
v32@0:8@"NSNumber"16@"NSArray"24
@32@0:8r*16@24
v32@0:8r*16@24
i24@0:8^{sqlite3=}16
q28@0:8B16@20
v44@0:8B16@20^q28^q36
@"AppInstallInfo"
@"AppInstallPreambleResponse"
@40@0:8q16@24@32
v36@0:8@"ASDApp"16B24@?<v@?@"NSError">28
v40@0:8@"NSPredicate"16@"NSSet"24@?<v@?@"NSArray"@"NSError">32
@"<LibraryCatalogObserver>"16@0:8
v24@0:8@"<LibraryCatalogObserver>"16
v40@0:8@16q24@?32
v40@0:8@"ASDApp"16q24@?<v@?q>32
v40@0:8@"ASDApp"16@"NSUUID"24@?<v@?q>32
v32@0:8@"ASDApp"16@?<v@?q>24
@"<LibraryResultEnumerator>"32@0:8@"NSPredicate"16^@24
@"<LibraryResultEnumerator>"32@0:8@"NSArray"16^@24
@"<LibraryCatalogObserver>"
@"LibraryQueryPlanner"
@"ProgressCache"
@24@0:8*16
@60@0:8q16@24B32@36@44@52
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
@"NSObject<OS_dispatch_semaphore>"
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
v40@0:8@"ASDApp"16@"NSUUID"24@?<v@?@"NSError">32
v32@0:8@"ASDApp"16@?<v@?@"NSError">24
@"UpdatesResponse"
@"NSNumber"16@0:8
@"<SZExtractor>"
@"NSObject<OS_dispatch_group>"
@"ZipDataStreamStatus"
B32@0:8Q16^@24
Q24@0:8^@16
B32@0:8^B16^@24
B32@0:8@"IXOwnedDataPromise"16^@24
@"IXOwnedDataPromise"24@0:8^@16
B32@0:8@"IXPromisedOutOfBandTransfer"16^@24
@"IXPromisedOutOfBandTransfer"24@0:8^@16
B32@0:8@"NSArray"16^@24
@"NSArray"24@0:8^@16
B32@0:8@"IXPlaceholder"16^@24
@"IXPlaceholder"24@0:8^@16
B32@0:8@"MIInstallOptions"16^@24
@24@0:8^B16
@"NSError"24@0:8^B16
@52@0:8@16Q24Q32B40^@44
@52@0:8@16Q24B32^B36^@44
@60@0:8@16Q24Q32B40^B44^@52
@32@0:8@16B24B28
@40@0:8@16B24B28@32
@48@0:8q16@24@32^@40
B36@0:8B16q20^@28
@32@0:8r^v16@24
r^v16@0:8
@48@0:8Q16@24@32^@40
@56@0:8Q16@24@32@40^@48
v32@0:8@"NSPredicate"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSPredicate"16@"NSUUID"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSString"16@?<v@?@"NSError"C>24
v32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
@"<LibraryOpen>"
@"<LibraryProgress>"
@"<LibraryUninstall>"
@32@0:8^@16^@24
@"AppInstallDownloadResponse"
@48@0:8q16@24@32@40
@64@0:8q16q24@32@40@48@56
v32@0:8Q16q24
@"AssetRequest"
@"AIMDownloadEvent"
I16@0:8
v20@0:8I16
v32@0:8@"StoreKitStorefront"16@"NSDictionary"24
v32@0:8@"InAppDownloadManager"16@"InAppDownloadStatus"24
v44@0:8@16q24B32@?36
v36@0:8@16I24@?28
v32@0:8Q16@?24
v24@0:8@"NSNumber"16
v32@0:8@"NSDictionary"16@?<v@?>24
v32@0:8@"NSDictionary"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"NSString"16@"NSDictionary"24
v40@0:8@"NSString"16@"<ASDStoreKitTransactionReceiverProtocol>"24@?<v@?@"NSError">32
v32@0:8@"<ASDStoreKitTransactionReceiverProtocol>"16@?<v@?@"NSError">24
v32@0:8@"NSString"16@"NSDate"24
v44@0:8@"NSString"16q24B32@?<v@?@"NSError">36
v24@0:8@?<v@?>16
v48@0:8@"NSDictionary"16@"NSDictionary"24@"<ASDStoreKitPaymentProtocol>"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"NSString"16@?<v@?@"NSDictionary"@"NSError">24
v40@0:8@"NSSet"16@"NSDictionary"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"NSString"16@?<v@?>24
v36@0:8@"NSDictionary"16B24@?<v@?@"NSArray"@"NSError">28
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?B@"NSError">32
v40@0:8Q16@"NSString"24@?<v@?B>32
v40@0:8@"NSArray"16@"NSDictionary"24@?<v@?@"NSArray"@"NSArray"@"NSError">32
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?@"NSArray"@"NSError">32
v48@0:8@"NSString"16@"NSString"24@"NSDictionary"32@?<v@?B@"NSError">40
v48@0:8@"NSDictionary"16@"NSString"24@"NSDate"32@?<v@?@"NSError">40
v40@0:8@"NSDictionary"16@"NSDictionary"24@?<v@?@"NSError">32
v24@0:8@?<v@?@"NSString"@"NSString">16
v32@0:8@"NSNumber"16@?<v@?@"NSError"@"NSData">24
v24@0:8@?<v@?@"NSError"@"NSData">16
v36@0:8@"NSData"16I24@?<v@?@"NSData"I@"NSData"I@"NSError">28
v32@0:8Q16@?<v@?@"NSData"I@"NSData"I@"NSError">24
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
@36@0:8@16@24i32
v64@0:8@16B24B28@32q40@48@?56
@"AMSURLSession"
@"<ASDStoreKitClientProtocol>"
@"ASFReceipt"
@"ThreadSafeDictionary"
@"NSEnumerator"
@"NSPredicate"
v40@0:8Q16Q24@?32
v44@0:8@16@24@32B40
v48@0:8@16@24q32@?40
@"StoreKitMessagesDatabaseStore"
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32@?<v@?>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
v32@0:8@"NSURLSession"16@"NSURLSessionDataTask"24
v40@0:8@16@24q32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24q32
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLResponse"32
v28@0:8i16@20
v32@0:8@"NSURL"16@?<v@?q@"NSError">24
v24@0:8@"DiagnosticMessage"16
v24@0:8@"NSXPCListenerEndpoint"16
v32@0:8q16@?<v@?@"NSDictionary">24
v32@0:8q16@?<v@?>24
@"CTXPCServiceSubscriptionContext"
@"NetworkEmulation"
@"InAppPurchaseIntentDatabaseStore"
@"XPCServiceClient"
@"NSObject<OS_voucher>"
B40@0:8q16q24@32
{?="errorCode"b1}
B40@0:8@16^@24@?32
B24@0:8@?16
B32@0:8^@16@?24
^{sqlite3=}
@"<SQLiteConnectionDelegate>"
@"NSMapTable"
@"SQLiteConnectionOptions"
@"PurchaseHistoryHideShowRequestContext"
@"SQLiteDatabase"
@40@0:8@16@24Q32
@"NSURLSessionTaskMetrics"
@48@0:8@16@24@32q40
@"<StoreKitBagContract>"
@"NSString"24@0:8@"NSString"16
@40@0:8@?16@?24@32
@"AMSAuthenticateResult"
@"DigestVerifier"
@"ChunkedDigest"
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v44@0:8q16@24@32B40
v36@0:8@16B24@28
@"APSConnection"
@"PushConnectionMessageHistory"
@"<PushConnectionDelegate>"
B24@0:8q16
v48@0:8q16@24@32@40
v44@0:8q16@24B32@?36
v36@0:8q16@24B32
@60@0:8q16@24@32q40B48@52
v36@0:8q16B24@28
v36@0:8B16@20@?28
@"AMSBag"
@"NPSDomainAccessor"
@"NPSManager"
@28@0:8@16I24
@36@0:8@16I24^@28
@28@0:8^{__SecTask=}16i24
B36@0:8@16^{__SecTask=}24i32
@52@0:8{?=[8I]}16i48
B32@0:8{_ASDServiceEntitlement=@@}16
^{__SecTask=}
@28@0:8@16S24
S16@0:8
@"XDCDevice"
@36@0:8@16Q24B32
@32@0:8{?=QQ}16
r*16@0:8
@"NSObject<OS_xpc_object>"16@0:8
@"OctaneListener"
@"XPCServiceBroker"
@32@0:8d16d24
@"NSData"24@0:8^@16
@"LSApplicationRecord"
@"NRDevice"
@"NSURLAuthenticationChallenge"
^{__CFBundle=}24@0:8@16
^{__CFDictionary=}24@0:8@16
B40@0:8r*16Q24^@32
@"HashDigest"
@"AppInstallInstallResponse"
@"AssetPromise"
@"NSProgress"
@"AIMInstallEvent"
@"NSOperation"
@"<FetchReceiptTaskDelegate>"
@"InAppPromotionDatabaseStore"
@24@0:8d16
@"NSCountedSet"
@32@0:8i16@20B28
B48@0:8@16@24@32@40
v32@0:8@"ASDAppEvent"16@?<v@?B@"NSError">24
v32@0:8@"NSString"16@?<v@?B>24
v28@0:8d16i24
v24@0:8f16i20
v24@0:8i16i20
v28@0:8q16i24
v28@0:8@16i24
v28@0:8@"NSNumber"16i24
v28@0:8@"NSData"16i24
v28@0:8@"NSString"16i24
v28@0:8@"NSDate"16i24
v28@0:8@"NSUUID"16i24
v28@0:8@"NSURL"16i24
v28@0:8@"NSArray"16i24
v28@0:8@"NSDictionary"16i24
v44@0:8Q16B24@28@?36
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v40@0:8@"NSDictionary"16@"NSNumber"24Q32
v44@0:8Q16B24@"NSString"28@?<v@?@"NSArray"BB@"NSError">36
v32@0:8Q16@?<v@?@"NSArray"B@"NSError">24
v24@0:8@?<v@?@"NSArray"B@"NSError">16
@"NSOutputStream"
@40@0:8@16d24@32
@"<Clock>"
@"RequestThrottlePersistence"
@"<XPCNotificationClient>"
v40@0:8d16@24@32
@"XPCNotificationCenter"
B48@0:8@16@24q32@40
@24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSArray"16
B32@0:8@16@"NSString"24
B24@0:8@"NSDictionary"16
v32@0:8@16@"NSString"24
@"NSSet"16@0:8
@"NSTimer"
@"InAppDownloadStatus"
@"InAppDownloadTimeEstimator"
^{_BOMCopier=}
@"<IXCoordinatorWithAppAssetPromise>"
q60@0:8@16@24B32@36@44^@52
Q40@0:8@16@24^@32
@"UpdatesContext"
v40@0:8^@16r^@24q32
v40@0:8@16@24^@32
v44@0:8@16@24B32^@36
@"_ProtocolDelegate"
@56@0:8@16q24@32@40Q48
@"NSObject<OS_nw_activity>"
@"NSURLRequest"
@"NSURLSessionTask"
@32@0:8Q16q24
@32@0:8Q16@?24
@"AMSNetworkConstraints"
@"ASDCellularSettings"
@36@0:8C16@20@28
@48@0:8@16C24C28@32@40
@36@0:8@16C24@28
@28@0:8C16@20
v48@0:8@16@24@32^v40
@"NWPathEvaluator"
@"CSLSConnectionStateObserver"
v32@0:8@"PushConnection"16@"PushRawMessage"24
v40@0:8@"PushConnection"16@"NSData"24Q32
@"PushConnection"
@"AMSPushHandler"
@"PushDiagnostic"
v40@0:8@"NSArray"16@"XPCRequestToken"24@?<v@?@"ASDPurchaseResponse"@"NSError">32
v40@0:8@"ASDPurchase"16@"XPCRequestToken"24@?<v@?@"ASDPurchaseResult"@"NSError">32
{_ASDServiceEntitlement=@@}16@0:8
v32@0:8{_ASDServiceEntitlement=@@}16
{_ASDServiceEntitlement="name"@"NSString""legacyName"@"NSString"}
v40@0:8@"NSArray"16@"NSUUID"24@?<v@?@"NSArray"@"NSError">32
v40@0:8@16@?24@32
v48@0:8@16@24@?32@40
@"RequestThrottle"
B24@0:8d16
B72@0:8@16q24@32@40^q48^B56^@64
B60@0:8q16@24@32@40B48@52
v36@0:8B16q20@?28
v40@0:8q16Q24@?32
v32@0:8@"ASDPurchaseHistoryQuery"16@?<v@?@"NSArray"@"NSError">24
v36@0:8B16q20@?<v@?@"NSError">28
v40@0:8q16Q24@?<v@?@"NSError">32
v32@0:8Q16@?<v@?@"NSError">24
@"PurchaseHistoryItemsRequestContext"
@28@0:8^v16i24
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}24@0:8r*16
v40@0:8@16C24C28@32
@"NSMutableOrderedSet"
v24@0:8^{__CFBundle=}16
B32@0:8@16^B24
@48@0:8@16{_ASDServiceEntitlement=@@}24@?40
@"StoreAsset"
{?="error"b1}
@"<AppInstallPipeline>"
@24@0:8^{__CFString=}16
v24@0:8^{__CFString=}16
d24@0:8^{__CFString=}16
v32@0:8@16^{__CFString=}24
v28@0:8B16@20
B36@0:8^{__CFString=}16^{__CFString=}24B32
v36@0:8B16^{__CFString=}20^{__CFString=}28
d40@0:8^{__CFString=}16^{__CFString=}24d32
v40@0:8d16^{__CFString=}24^{__CFString=}32
@32@0:8^{__CFString=}16^{__CFString=}24
v32@0:8^v16^{__CFString=}24
@40@0:8Q16Q24@32
@"<ASDOctaneClientProtocol>"
@32@0:8^{sqlite3_stmt=}16@24
^{sqlite3_stmt=}16@0:8
[%@]: [%{public}@] Mismatched capabilites: %{public}@
No bag value for requested key: %{public}@ of type: %ld
No valid port found for the server
Error fetching bag %{public}@
Error deserializing response %{public}@
The fetched bag is invalid %{public}@
[%{public}@] Failed to write receipt - application was not found!
[%{public}@] Sucessfully wrote receipt (%lu bytes)
[%{public}@] Receipt was missing or invalid, attempting to request new receipt
[%{public}@] Failed fetching receipt with error: %{public}@
Failed to update AMS universal links: %{public}@
Successfully updated AMS universal links
[%{public}@] Intializing metrics app metadata
[%{public}@] [%{public}@] May be uninstalled
[%{public}@] Not recording metrics following change from accountID: %{public}@ to accountID: %{public}@ active: %d
[%{public}@] [%{public}@] Recording deleted apps: [%{public}@]
[%{public}@] [%{public}@] Recording installed apps: [%{public}@]
[%{public}@] [%{public}@] Recording supplemental metrics with activeAccountID: %{public}@
[%{public}@] [%{public}@] Reset metrics
[%{public}@] [%{public}@:%lld] Writing metadata
[%{public}@] Unable to record current apps due to error: %{public}@
[%{public}@] Recorded metadata for %ld app(s)
Encountered error in DAAP URL request creation: %{public}@. Aborting since request is nil
Encountered error in DAAP URL request creation: %{public}@
%{public}@
[%@]: Error parsing unknown segment string: %{public}@
Terminated app with bundle identifier:%{public}@ due to invalid receipt.
Encountered error opening store. Error: %{public}@
[%{public}@] Could not initialize with %{public}@ - %{public}@
[%{public}@] Starting authenticate and sync for %{public}@
[%{public}@] Failed to get OctaneActionContext for %{public}@
[%{public}@] Simulated authentication dialog request failed: %{public}@
[%{public}@] Simulated authentication did continue
[%{public}@] Simulated authentication did cancel (action id: %{public}@)
[%{public}@] Skipping authenticate for Xcode environment
[%{public}@] Authenticating with active account
[%{public}@] Authenticating with no active account
[%{public}@] Authenticate failed for %{public}@ - %{public}@
[%{public}@] Error syncing transactions while retrieving subscription status for %{public}@. Returning last known status. %{public}@
[%{public}@] Error getting max age for %{public}@ subscription status: %{public}@
[%{public}@] Forcing subscription status sync for %{public}@ because lastUpdated is older than maxAge
[%{public}@] Error syncing subscription status for %{public}@. Returning last known status. %{public}@
[%{public}@] Forcing transaction sync for %{public}@ because there is no history
[%{public}@] Forcing transaction sync for %{public}@ because the cached history has no token
[%{public}@] Removing all transactions %{public}@ because there is no account
[%{public}@] Forcing transaction sync for %{public}@ because the tokens don't match
[%{public}@] Error getting max age for %{public}@ transaction history: %{public}@
[%{public}@] Forcing transaction sync for %{public}@ because lastUpdated is older than maxAge
[%{public}@] Setting transaction revision for %{public}@ to %{public}@
[%{public}@] Ignoring subscription status sync from push notification for %{public}@ since the app has not queried status
[%{public}@] Starting subscription status sync for %{public}@ reason %ld
[%{public}@] Sending %ld statuses to %{public}@
[%{public}@] Error syncing subscription status for %{public}@ - %{public}@
[%{public}@] Updated subscription status for %{public}@
[%{public}@] Transaction sync contained subscriptions. Syncing subscription status for %{public}@
[%{public}@] Transaction sync did not contain subscriptions for %{public}@
[%{public}@] Ignoring transaction sync from push notification for %{public}@ since the app has not queried history
[%{public}@] Starting receipt sync with reason %ld from revision %{public}@ for %{public}@
[%{public}@] Sending %ld receipts to %{public}@
[%{public}@] Error syncing receipts for %{public}@ - %{public}@
[%{public}@] Updated receipts to revision %{public}@. Syncing more receipts for %{public}@
[%{public}@] Updated receipts to revision %{public}@ for %{public}@
[%{public}@] Converting background update to foreground
Ignoring request to set update state of %{public}@, current state is already %ld
Updated state to installed for bundleID: %{public}@
Resetting update state for: %{public}@ to %ld
[%{public}@] Reset purchase state update for bundleID: %{public}@
[%{public}@] Failed to reset purchase state update for bundleID: %{public}@
[%{public}@][%{public}@] Setting update state to %ld
Database migration function for %li => %li success=%d
No app updates migration function for %li => %li
Not checking for duplicate installs because this purchase was not initiated via PurchaseService.
[%{public}@] Not checking for duplicate installs because no bundleID was specified.
[%{public}@] Failing this request as a duplicate of %{public}@
[%{public}@] Install went missing; bailing.
[%{public}@] Install type was modified since we last looked; bailing.
[%{public}@] Current phase is not restartable (phase = '%{public}@')
[%{public}@] Forcing background operation to interactive to show progress
[%{public}@] Converting background operation to interactive (phase = '%{public}@')
[%{public}@] Skipping invalid product identifier "%{public}@"
[%{public}@] Error fetching in app products: %{public}@
[%{public}@] Failed to get store language-tag: %{public}@
[%{public}@] Failed to get store country-code: %{public}@
[%{public}@] Defaulting media products to device locale: %{public}@
[%{public}@] [%{public}@]: No storefront available for account.
[%{public}@] [%{public}@]: Invalid response for micro payment products request: %{public}@
[%{public}@] %{public}@: Received invalid identifier %{public}@ in product dictionary
[%{public}@] %{public}@: Received invalid locale %{public}@ in product dictionary
[%{public}@] %{public}@: Received invalid price %{public}@ in product dictionary
[%{public}@]: Invalid response for legacy products request: %{public}@
[%{public}@] Starting TestFlight installation for %{public}@ userInitiated = %{public}@
[%{public}@] TestFlight import failed: %{public}@
[%{public}@] TestFlight import succeeded
Failed to encode placeholder entitlements: %{public}@ error: %{public}@
[%{public}@] Database import failed with error: %{public}@
[%{public}@] Explicitly denied for low data network - canceling installation
[%{public}@] Starting
[%{public}@] Starting with musicAccountID: %{public}@ tvAccountID: %{public}@ iCloudAccountID: %{public}@ podcastAccountID: %{public}@
[%{public}@] Starting with newsAccountID: %{public}@ appStoreAccountID: %{public}@ lastAccount: %{public}@
[%{public}@] Requesting cached subscription entitlements for clientID: %{public}@
[%{public}@] Returning %lu subscription entitlement(s)
[%{public}@] Clearing cached subscription entitlements after push notification
[%{public}@] Not clearing cached subscription entitlements after push notification. lastAccountID: %{public}@ messageAccountID: %{public}@
[%{public}@] Failed to read the subscription entitlements from memory and cache
[%{public}@] Failed to read the subscription entitlements from disk error: %{public}@
[%{public}@] Unable to determine the path
[%{public}@] Path to cached entitlement is nil
[%{public}@] Using default days valid following error reading device id days valid bag key: %{public}@
[%{public}@] Cached subscription entitlements have expired
[%{public}@] Requesting subscription entitlements for clientID: %{public}@
[%{public}@] No active account when fetching subscriptions for clientID: %{public}@
[%{public}@] Getting fresh fsEntitlements refresh for this boot
[%{public}@] Not getting fresh fsEntitlements on this boot. Expired: %d ignoresCaches: %d
[%{public}@] Refreshing subscriptions for account: %{public}@ for clientID: %{public}@
[%{public}@] Timed out attempting to update subscription entitlements
[%{public}@] Returning updated subscriptions response
[%{public}@] No cached subscriptions available, returning error: %{public}@
[%{public}@] Returning cached subscription response due to request error: %{public}@
[%{public}@] Returning cached subscriptions response for account: %{public}@
[%{public}@] Updating after account changed
[%{public}@] Updating after account changed - inside dispatch queue
[%{public}@] Marking the cached subscription entitlements as expired
[%{public}@] Notifying external subscription changed
[%{public}@] Unable to cache invalid segment
[%{public}@] Clearing cached subscription entitlements
[%{public}@] Setting cached subscriptions for account: %{public}@
[%{public}@] Not setting cached subscriptions because accountID: %{public}@ does not match active accountID: %{public}@
[%{public}@] Failed to write the subscription entitlements to disk error: %{public}@
[%{public}@] Failed to write the subscription entitlements to disk with unknown error:
[%{public}@] Clearing cached after account sign out
[%{public}@] Active account has nil DSID. Clearing cached subscription entitlements
[%{public}@] Clearing cached subscription entitlements after account change to: %{public}@
[%{public}@] Invalid segment type for persisting entitlements
[%{public}@]: Invalid segment type for fetching entitlements from memory
[%{public}@] Clearing memory subscription entitlements for segment %lu
(AppUpdateMemoryEntity) [%p] expectedSoftwarePlatform=%lu
[%@]: Parser canceled
[%@]: Parser failed with error: %{public}@
[%{public}@] Writing receipt failed - invalid or missing data (%lu bytes)
[%{public}@] Writing receipt failed - could not find valid application for URL %{public}@
[%{public}@] Writing receipt (%ld bytes) to %{public}@
[%{public}@] Error writing receipt (%ld bytes) to %{public}@: %{public}@
Failed to create service: %{public}@
Listening for service: %{public}@
Sending: %{public}@ failed with error: %{public}@
Received reply without outgoing identifier for type: %u from: %{public}@
Updating after devices changed: %{public}@
Sending message: %ld to: %{public}@ with payload: %{public}@
Sending: %{public}@ to: %{public}@ failed with error: %{public}@
Received reply but no handler exists for: %{public}@ type: %u from: %{public}@
Received reply for: %{public}@ type: %u from: %{public}@
No handler for received request for: %{public}@ type: %u from: %{public}@
[%{public}@] Processing keybag refresh for client: %{public}@
[%{public}@] Keybag refresh complete with result: %d
[FP/%{public}@] Repair complete with result: %d error: %{public}@
[%{public}@] Wasn't able to display the family leave dialog: %{public}@
[%{public}@] Encountered error opening store. Error: %{public}@
Skipping system app bootstrap - pending task already exists
Queuing %lu system app(s) for bootstrap
Skipping system app bootstrap - no installations pending
Bootstrapping system applications will be reset after error: %{public}@
Starting flap timer to fire at: %{public}@
Ignoring monitor state change notifications
Jettisoned %lu installation(s) due to thermal pressure: %{public}@
[%{public}@] Installation remaining paused for expensive network
[%{public}@] Installation remaining paused for low data network
[%{public}@] Resuming installation paused for policy
Polling scheduler: [%{public}@]
Limiting maximum active count due to thermal pressure
No waiting installations, ignoring monitor state change notifications
%{public}@ waiting installation(s), observing monitor state change notifications
Polling completed, started %lu installation(s): %{public}@
Polling completed, started 0 installations
[%{public}@] Resetting bootstrap phase after daemon restart
Requesting scheduler poll for %lu reset installation(s) after daemon start
Scheduling next optimal download for %{public}@
[%{public}@]: Allowing start, no policy set, allowing install to start unconditionally
[%{public}@]: Denying start, device security not approved
[%{public}@]: Denying start, pending termination
[%{public}@]: Denying start, no network available
[%{public}@]: Denying start, no identity when checking policy: %{public}@
[%{public}@]: Denying start, implicitly denied expensive network by evalulator
[%{public}@]: Denying start, explicitly denied expensive network by user
[%{public}@]: Expensive network allowed, overriding interface mask
[%{public}@]: Denying start, implicitly denied low data by evalulator
[%{public}@]: Denying start, explicitly denied low data by user
[%{public}@]: Interface mask unspecified, defaulting to always inexpensive
[%{public}@]: Denying start, no matching network interface
[%{public}@]: Denying start, no power available
[%{public}@]: Denying start, low power mode enabled
[%{public}@]: Denying start, pending data migration
[%{public}@]: Denying start, pending setup assistant
[%{public}@]: Denying start, pending optimal download window
[%{public}@]: Denying start, restarting too fast - delaying %.0fs
[%{public}@]: Allowing start, all policy conditions were met
Poll timer duration exceeded 1 hour - halting timer
Returning no match, encountered new interface type: %{public}@
[%{public}@] Finishing transaction with no identifier for %{public}@
[%{public}@] Transaction is already finished for %{public}@
[%{public}@] Finishing transaction %lu for %{public}@
[%{public}@] Error finishing payment %lu for %{public}@ - %{public}@
_bundleID == nil
Could not find non-installed update for bundle ID %{public}@
[%{public}@] Initiating re-purchase for expired update
[%{public}@] Successfully to re-purchased expired update
[%{public}@] Failed to re-purchase expired update error: %{public}@
[%{public}@] Timeout while waiting to re-purchase expired update
[%{public}@] Ignoring, unsupported action for enterprise request: %{public}@
[%{public}@] Ignoring, missing URL for enterprise request: %{public}@
[%{public}@] Ignoring, invalid URL for enterprise request: %{public}@
[%{public}@] Ignoring, invalid enterprise request with missing URL
[%{public}@] Expected platform wasn't set, hope we have the right type of receipt for '%ld'!
[%{public}@] Dropping incorrectly generated receipt - unexpected product type '%ld'
[%{public}@] getMetricsEventsForType for client: %{public}@
[%{public}@] getMetricsEventsForType complete for client: %{public}@
[%{public}@] postMetricsEventsForType for client: %{public}@
[%{public}@] recordMetricsEventsForType for client: %{public}@
[%{public}@] resetMetricsEventsForType for client: %{public}@
[%{public}@]: Download of size %llu exceeds cellular limit, but not prompting for automatic download.
[%{public}@]: Download of size %llu exceeds cellular limit, but not prompting for inexpensive network.
[%{public}@]: Download of size %llu exceeds cellular limit, asking how to proceed.
[%{public}@]: Error delivering dialog request: %{public}@
[%{public}@]: We were asked to download now.  Not requiring inexpensive data.
[%{public}@]: We were asked to download later.  Requiring inexpensive data.
[%{public}@]: Evaluation for download completed with result: %ld
[%{public}@] Could not find handler to repair application
[%{public}@] Unable to relaunch due to error: %{public}@
[%{public}@] Relaunched application after repair completed
[%@]: Response data 0 length
[%@]: Error decoding response
[%@]: Error parsing item: %@
[%@]: Querying purchase history for account: %{public}@
[%@]: Ignoring update request - there is no active account
[PurchaseHistoryManager] Ignoring push notification for accountID: %{public}@ as there isn't any account active
[PurchaseHistoryManager] Checking for update after receiving notification for accountID: %{public}@ server revision: %{public}@
[PurchaseHistoryManager] Received check for accountID: %{public}@ but falling back to active account: %{public}@
[PurchaseHistoryManager] Unable to reference server revision from message, performing default check for: %{public}@
[PurchaseHistoryManager] Failed to complete update for accountID: %{public}@ error: %{public}@
[PurchaseHistoryManager] Sucessfully completed update after notification for accountID: %{public}@
[%@]: Begin observing, current account: %{public}@
[%@]: Updating after account changed
[%@]: Failed to refresh after active account changed error: %{public}@
[PurchaseHistoryManager] Refusing to perform update without an accountID!
[PurchaseHistoryManager] Update is already running, waiting for it to finish
[PurchaseHistoryManager] No queued updates pending
[PurchaseHistoryManager] Update command completed, checking for next command
[PurchaseHistoryManager] Update command failed: %{public}@, checking for next command
[PurchaseHistoryManager] No qualifying update requests remaining
Observing installation notifications
 error=%{public, signpost.description:attribute}@ 
Install/Install
[%{public}@] Canceling installation after receiving reason: %{public}@
[%{public}@] Failing installation after receiving error: %{public}@
Notified that coordinator %{public}@ canceled with reason: %{public}@, but we don't have an active installation for it.
coordinatorDidCompleteSuccessfully for bundleID: %{public}@
[%{public}@] Completing installation after receiving notification
[%{public}@] Application was installed at: %{public}@
Prioritization requested via coordinator %{public}@
[%{public}@] Prioritization request found existing install with phase %ld
[%{public}@] Removing automatic flag, prioritized by user
[%{public}@] Reviewing network policy
Ignoring pausing request for unknown coordinator: %{public}@
[%{public}@] Ineligible network, ignoring resumption
[%{public}@] Removing automatic flag, resumed by user
[%{public}@] Reviewing network policy before resuming by user request
[%{public}@] Resuming by user request
[%{public}@] Ignoring duplicate resumption request
Ignoring resumption request for unknown coordinator: %{public}@
[%{public}@]: Prioritize for %{public}@
[%{public}@]: Unable to prioritize due to no bundleID
[%{public}@] SINF mismatch error has been detected
Prioritize for bundleID: %{public}@ placeholder: %d coordinator: %{public}@
Canceling coordinator for orphaned app update %{public}@
Received app may be uninstalled notification for bundleID: %{public}@
Received app may be uninstalled notification but no bundleID was included
[%{public}@] Unable to re-pause after cellular access declined: %{public}@
[%{public}@] Stopping because the installation is no longer paused
[%{public}@] Pausing after cellular network access was denied
[%{public}@] Blocking delta and will retry as full update after encountering error: %{public}@
[%{public}@] Notifying clients of the failed install with error: %{public}@
Failed to fail installation `%lld` does not exist in the database
[%{public}@] Finishing hard fail with final phase: %{public}@
[%{public}@] Finishing with final phase: %{public}@, current phase %{public}@
[%{public}@] Notifing clients of the completed with error: %{public}@
Failed to finish installation `%lld` does not exist in the database
[%{public}@] Import failed silently with error: %{public}@
[%{public}@] Refreshing existing installation (pid = '%lld', order = '%{public}@', phase = '%{public}@', coordinatorID = '%{public}@')
[%{public}@] Skipping duplicate install (pid = '%lld', order = '%{public}@', phase = '%{public}@')
[%{public}@] Importing new installation (order = '%{public}@')
[%{public}@] Already paused with phase: %{public}@, ignoring request for reason: %{public}@
[%{public}@] Pausing with phase: %{public}@ for reason: %{public}@
Failed to pause installation `%lld` does not exist in the database
[%{public}@] Resuming installation
Failed to resume installation `%lld` does not exist in the database
[%{public}@] Update failed silently with error: %{public}@
[%{public}@] Restarting as user initiated (phase = '%{public}@')
Throttle: Deleted all records at: %{public}@
Throtle: Deleting records at: %{public}@ failed: %{public}@
Throttle: Read %lu records from: %{public}@
Throttle: Reading from: %{public}@ failed: %{public}@
Throttle: Wrote %lu records to: %{public}@
Throttle: Writing %lu records to: %{public}@ failed: %{public}@
Performing initial migration
Queuing up previously unfinished migrations: [%{public}@]
Performing migration for clientID: %{public}@ migrationType: %ld
Network changed. Connected: %d
Device state changed and ready to migrate.
Device state changed setup not ready for migrate. Setup complete: %d migrator complete: %d
Bootstrap - Proceeding to migration
Bootstrap -  Creating observer to migrate when os setup is complete: %d migrator complete: %d
Attemping to load bag
Attempting migration anyway following bag load error: %{public}@
Attempting migrations following bag load
Performing %ld migration(s): [%{public}@]
Migration complete for: %{public}@
Migrating from build: %{public}@ to build: %{public}@
Upgrade Migration
Queuing migration task: %{public}@
Waiting for network before runing migrations
[%{public}@] Blocking sign in as there is no active account on the device
[%{public}@] shouldContinueTransaction timed out for bundle ID: %{public}@. Not continuing transaction.
[%{public}@] Running payment for %@
[%{public}@] Payment failed: %{public}@
[%{public}@] Failed payment had a trigger queue check.
[%{public}@] Mapping Xcode error to interrupted: %{public}@
[%{public}@] Mapping error to interrupted: %{public}@
[%{public}@] Payment complete
[%{public}@] Payment result contained error: %{public}@
[%{public}@] Payment completed with no transactions
[%{public}@] Payment received more than one transaction: %@ Using only the first.
[%{public}@] Could not get custom buy params allow-list from bag, will assume none are allowed: %{public}@
[%{public}@] Error getting store cohort %{public}@
[%{public}@] Sending authentication request for %{public}@
[%{public}@] No account for %{public}@: %{public}@
[%{public}@] Handling authentication request for purchase %{public}@
[%{public}@] No client available to handle authentication request for purchase %{public}@
[%{public}@] Handling dialog request for purchase %{public}@
[%{public}@] No client available to handle dialog request for purchase %{public}@
[%{public}@] Handling engagement presentation request for purchase %{public}@
[%{public}@] No client available to handle engagement request for purchase %{public}@
[%{public}@]: Skipping import due to lack for bundleID / clusterID / clusterID for mapping: %{public}@
[%{public}@]: Updated existing cluster mapping for: %{public}@
Unable to create account event entity with: %{public}@
Dropping app install meatadata due to no bundleID: %@
Error creating app usage sessionentity for bundleID: %{public}@
[%{public}@] Interval start date not set. Using interval start date: %{public}@
[%{public}@] Interval start date not set
[%{public}@] Recorded start interval as: %{public}@
[%{public}@] Recorded launches start interval as: %{public}@
[%{public}@] Unable to clear completed purchases prior to queue check: %{public}@
[%{public}@] Loading queue for account: %{public}@
[%{public}@] Skipping over unsupported '%{public}@' for other clients to collect
[%{public}@] Importing queued purchase failed: %{public}@
[%{public}@] Server sent us to the queue to complete the purchase but the item was not there
[%{public}@] Completed queue check with %lu/%lu download(s) imported
[%{public}@] Failed to check queue: %{public}@
[%{public}@] Failed to check queue: No account available
[%{public}@] Queue check found update for %{public}@ to %{public}@. Installed version = %{public}@ (%lld)
[%@]: %{public}@ Adoption requested by %{public}@ but is not supported on this platform
[%@]: %{public}@ Adoptable bundle identifiers requested by %{public}@ but is not supported on this platform
[%@]: Checking server queue for clientID: %{public}@
[%@]: selector not implemented
[%@]: Notify dialog complete for purchaseID %{public}@ clientID: %{public}@
[%@]: Notify dialog completed for clientID: %{public}@ with error: %{public}@
[%@]: Notify dialog completed successfully for client: %{public}@ 
[%@]: %{public}@ Processing purchase with StoreKit service
[%@]: Purchase completed for clientID: %{public}@ with error: %{public}@
[%@]: Purchase completed successfully for client %{public}@
[%@]: %{public}@ Starting purchase with StoreKit service
[%@]: %{public}@ Starting purchase of %{public}@:%{public}@ by %{public}@
[%@]: %{public}@ Purchase completed with error: %{public}@
[%@]: %{public}@ Purchase completed successfully
[%{public}@] [%{public}@] Did not find cached FamilyInfo for account: %{public}@
[%{public}@] [%{public}@] Family member found for account: %{public}@ askToBuyEnabled: %d
[%{public}@] [%{public}@] Performing migration of FamilyInfo
[%{public}@] [%{public}@] Not updating FamilyInfo due to no active account
[%{public}@] [%{public}@] Attempting to update cached FamilyInfo for account: %{public}@
[%{public}@] [%{public}@] FamilyInfo cached for account: %{public}@
[%{public}@] [%{public}@] FamilyInfo not cached following migration for account: %{public}@
[%{public}@] [%{public}@] Bootstrapping family : refresh from server: %d
[%{public}@] [%{public}@] Family circle request resulted in error: [%{public}@] isBackground: %d
[%{public}@] [%{public}@] Set family accounts to: [%{public}@]
[%{public}@] Cleared family
[%{public}@] [%{public}@] Checking if account: %{public}@ has FamilyInfo following account change
[%{public}@] [%{public}@] FamilyInfo not found account: %{public}@. Attempting to reload silently.
[%{public}@] [%{public}@] Error looking up FamilyInfo for account: %{public}@ error: %{public}@
[%{public}@] [%{public}@] FamilyInfo reloaded for account: %{public}@
[%{public}@] [%{public}@] FamilyInfo found for account: %{public}@
Revocation info init userID nil
Revocation info init bundleID nil
Revocation info init productID nil
Validating active installations on daemon start
[%{public}@] Discovered previously active installation (phase = '%{public}@'), resetting state to Waiting for scheduling
[%{public}@] Ignoring request to resume inactive installation in phase %{public}@
[%{public}@] Unexpected phase value `%lu` marking as failed
[%{public}@]: Skipping start, appears to already be running
 uuid=%{public, signpost.description:attribute}@ 
Install/Download
[%{public}@] Beginning downloading
[%{public}@] Beginning installation
Install/Postamble
[%{public}@] Beginning final
Install
Install/Preamble
[%{public}@] Queuing preamble task
[%{public}@] Waiting for installation to complete
[%{public}@] Preflight canceled with coordinator: %{public}@ error: %{public}@
[%{public}@] Preflight succeeded
 uuid=%{public, signpost.description:attribute}@  error=%{public, signpost.description:attribute}@ 
[%{public}@] Preflight failed with error: %{public}@
[%{public}@}] Preflight finished and will proceed to installation
[%{public}@] Download canceled
[%{public}@] Download failed with error: %{public}@
[%{public}@] Attempting expired download recovery for update
[%{public}@] Cannot recover from expired download for this installation
[%{public}@] Restarting after successful recovery
[%{public}@] Failing after unsuccessful recovery error %{public}@
[%{public}@] Received authentication challenge
[%{public}@] Using client certificate for authentication challenge
[%{public}@] Using server trust for authentication challenge
[%{public}@] Prompting user for authentication challenge
[%{public}@] Canceling user authentication challenge
[%{public}@] Completed user authentication challenge
[%{public}@] Using default handling for authentication challenge
[%{public}@] No URL provided for request from client: %{public}@
[%{public}@] The manifest URL isn't external: %{public}@
[%{public}@] Cannot load non-https manifest URL: %{public}@
[%{public}@] Downloading requested manifest at URL: %{public}@
[%{public}@] Invalid kind for iOS platform manifest
[%{public}@] title required for iOS platform manifest
[%{public}@] bundle-identifier required for iOS platform manifest
[%{public}@] [%{public}@] Failed to encode metadata from manifest
[%{public}@] [%{public}@] Manifest only receipt update
[%{public}@] [%{public}@] Error writing receipt: %{public}@
[%{public}@] [%{public}@] Wrote receipt
[%{public}@] [%{public}@] Failed up update receipt on app that is not installed
[%{public}@] [%{public}@] Failed install alllowed check with error: %{public}@
[%{public}@] Manifest resulted in no assets imported
[%{public}@] [%{public}@] Skipping due to incompatible platform: %{public}@
[%{public}@] No manifest data was received
[%{public}@] Manifest has changed, original was: %{public}@ this request: %{public}@
[%{public}@] Could not parse manifest data: %{public}@
[%{public}@] User cancelled manifest confirmation
[%{public}@] [%{public}@] Unable to determine download size error: %{public}@
[%{public}@] [%{public}@] Unable to determine policy error: %{public}@
[%{public}@] [%{public}@] Package for this installation is now missing
[%{public}@] Request failed with error: %@
[%{public}@] Failed to present dialog, trying system dialog error: %{public}@
(URLResponseDecoder) Dropping request properties registered for nil task
[%@]: %{public}@: Rejecting delta - version %{public}@ does not match installed version %{public}@
[%@]: %{public}@: Rejecting delta - no applicable variants (%{public}@) for installed variant %{public}@
[%@]: %{public}@: Rejecting delta - installed app is universal
[%@]: %{public}@: Selected delta for version %{public}@ variant %{public}@
Clearing previous StoreKit promotion order for %{public}@
Setting StoreKit promotion order %{public}@ for %{public}@:%{public}@
Setting StoreKit promotion visibility %{public}@ for %{public}@:%{public}@
Error setting StoreKit promotion info for %{public}@:%{public}@ - %{public}@
Error setting StoreKit promotion info for %{public}@ - %{public}@
Error deleting StoreKit promotion info for %{public}@ - %{public}@
Requring all stores to migrate after truncating corrupt database at: %{public}@
Exiting after truncating corrupt database at: %{public}@
Exiting after deleting corrupt database at: %{public}@
Database opened at: %{public}@
Database created at: %{public}@
Bad item data
No bundleID
[%{public}@] Restoring completed purchases
[%{public}@] Error restoring purchases: %{public}@
[%{public}@] Sending authentication request
[%{public}@] No account after authentication: %{public}@
Setting auto updates to %{public}@
Resetting update state to available on startup: %@
[Bag] Failed to fetch value for '%{public}@' error: %{public}@
[Bag] Returning live value '%{public}@' = '%{public}@'
[Bag] Returning memoized value '%{public}@' = '%{public}@'
[Bag] Resetting memoized value for '%{public}@'
No StoreKit In App Receipt Database migration function for %li => %li
[%@]: ** RECEIVED CONNECTION TEST: %@ **
No Purchase History Database migration function for %li => %li
Error creating StoreKit testing directory: %{public}@
[%{public}@] Failed to buy the product with ID %{public}@: %{public}@
[%{public}@] Failed to change the auto-renew status of %lu to %d: %{public}@
[%{public}@] Failed to clear overrides for %{public}@: %{public}@
[%{public}@] Failed to complete ask to buy request: %{public}@
[%{public}@] Failed to delete all transactions: %{public}@
[%{public}@] Failed to %{public}@ subscription with identifier %{public}@: %{public}@
Error looking up app with bundle ID %{public}@: %{public}@
[%{public}@] Removing data for %{public}@ due to non-development application install
[%{public}@] Removing data for %{public}@ due to application uninstall
[%{public}@] Asked to perform action %ld on %{public}ld
[%{public}@] Failed to perform action %ld on %{public}ld
Server went down with an active connection, restarted it
Server went down without any active connections, not restarting it
[%{public}@] Failed to save configuration data: %{public}@
[%{public}@] Saved configuration data
[%{public}@] Failed to set storefront to %{public}@: %{public}@
[%{public}@] Requested value for identifier %ld
[%{public}@] Requested to set value %ld for identifier %ld
[%{public}@] Failed to set value to %ld for key %lu: %{public}@
[%{public}@] Error removing data: %{public}@
[%{public}@] Removed data for %{public}@
Error creating StoreKit testing directory for %{public}@: %{public}@
Requesting refresh of receipt for %{public}@
Timed out refreshing receipt for %{public}@
Refresh of receipt requested for %{public}@ but there is no active conneciton to it
[%@]: Failed to construct request URL error: %{public}@
Update request received auth challenge for:%{public}@ but found no notification client to pass on to. Attempting internal auth
Errored out for auth challenge to:%{public}@ with error:%@
Received response to authentication challenge for %{public}@
Internal auth failed for %{public}@ with error:%@
Error generating keybag for account: %{public}@
[%@]: Inserting metric event: %@
[%@]: Inserting metric events: %@
[%{public}@] Flushing metrics with reason: %{public}@
[%{public}@] Error sending metrics events. Error: %{public}@
[%{public}@] Completed sending metrics events
Truncating promise after failure to reset promise %{public}@ with error: %{public}@
[%{public}@] [%{public}@]: Could not get URL for transaction request %{public}@
[%{public}@] [%{public}@]: No active account for receipt request
[%{public}@] [%{public}@]: Starting receipt request from revision %{public}@
[%{public}@] [%{public}@]: Receipt request failed with error - %{public}@
[%{public}@] [%{public}@]: Finished receipt request
[%{public}@] [%{public}@]: Invalid response for receipt request: %{public}@
[%{public}@] [%{public}@]: Receipt response does not contain required fields: %{public}@
[%{public}@] [%{public}@]: Setting %lu unfinished transactions
[%{public}@] [%{public}@]: Receipt response does not have unfinished transactions.
Registering event handlers
Received distributed event with invalid name
Posting notification: %@ userInfo: %@
Posting notification: %@
Received distributed event with invalid type
Registered handler for distributed events
Received notification event with invalid name
Received notification event with invalid type
Registered handler for notification events
[%{public}@] Aborting push register since there is no account.
[%{public}@] Failed to create push register request.
[%{public}@] Failed register push token call with error:%{public}@
[%{public}@] Did not receive response from register push call
[%{public}@] Successfully registered push token
[%{public}@] Failed register push token call with unknown error and status code:%{public}ld
[%{public}@] Encountered error while registering push token: %{public}@
[%{public}@] Could not find URL for registering push token
Failed to deserialize JSON data for `%{public}@` error: %{public}@
%{public}@ getUpdates requested for client: %{public}@
%{public}@ getUpdates completed sucessfully
%{public}@ refreshUpdateCount requested for client: %{public}@
%{public}@ refreshUpdateCount completed with error: %{public}@
%{public}@ refreshUpdateCount completed sucessfully
%{public}@ reloadFromServer requested for client: %{public}@
%{public}@ reloadFromServer completed with error: %{public}@
%{public}@ reloadFromServer completed sucessfully
%@ Updated should perform automatic updates: %@
%{public}@ Update all requested with client: %{public}@
%{public}@ updateAllWithOrder completed with error: %{public}@
%{public}@ updateAllWithOrder completed sucessfully
%{public}@ reloadFromServerInBackgroundWithCompletionBlock requested for client: %{public}@
%{public}@ reloadFromServerInBackgroundWithCompletionBlock completed with error: %{public}@
%{public}@ reloadFromServerInBackgroundWithCompletionBlock completed sucessfully
[%@]: [%{public}@]: No data found for account: %@
[%@]: Unknown sort option: %@
[%{public}@] Cancelling update for accountID: %{public}@ context: %{public}@ error: %{public}@
[%{public}@] Completed update for accountID: %{public}@ context: %{public}@
[%{public}@] Failed update for accountID: %{public}@ context: %{public}@ error: %{public}@
[%{public}@] Proceeding with update, no previous update time recorded for accountID: %{public}@ context: %{public}@
[%{public}@] Unhandled update context value: %lu
[%{public}@] Allowing update for accountID: %{public}@ last update: %{public}@ context: %{public}@
[%{public}@] Blocking update for accountID: %{public}@ last update: %{public}@ context: %{public}@
(PurchaseHistory) Force refresh interval: %{public}@
(PurchaseHistory) Failed to receive refresh interval error: %{public}@
(PurchaseHistory) Purchase refresh enabled: %{public}@
(PurchaseHistory) Failed to receive purchase refresh enabled error: %{public}@
(PurchaseHistory) Update polling frequency interval: %{public}@
(PurchaseHistory) Failed to receive update polling frequency interval error: %{public}@
(PurchaseHistory) Error getting last updated date: %{public}@
(PurchaseHistory) Failed to set last update timestamp for accountID: %{public}@ error: %{public}@
[%{public}@] Error decoding response metadata, isUpdate not parsed
[%{public}@] Error decoding response metadata, revision not parsed
[%{public}@] Completed update for account: %{public}@ authenticated account: %{public}@
[%{public}@] Error updating DB for account: %{public}@ authenticated account: %{public}@ error: %{public}@
[%{public}@] Decoded server revision: %@
[%{public}@] Decoding server revision failed
[%{public}@] Server items request failed, no request context: %@
[%{public}@] Server items request started
[%{public}@] Server items request completed (%lu bytes)
[%{public}@] Server items request failed (%@)
[%{public}@] Server revision request failed, no request context: %@
[%{public}@] Server revision request started
[%{public}@] Server revision request completed (%lu bytes)
[%{public}@] Server revision request failed (%@)
(PurchaseHistory) Local: %@ < Server: %@ => Needs update: %@
[%{public}@] Setting ForceAppDRMMode: %d
Attached tag: %@ to request: %@
failed to get kern.bootsessionuuid
[RF] Clock unavailable
[RF] Skipping transaction due to error: %{public}@
[RF] Skipping transaction because it was revoked
[RF] Skipping transaction because the signed expiration date has passed
Ignoring subscription renewal info with invalid group ID %{public}@
Last updated date is invalid for %{public}@
Ignoring subscription renewal info for %{public}@ with invalid product ID %{public}@
Ignoring subscription renewal info for %{public}@ with no transaction data
Error sending CoreAnalytics event, no topic specified for %ld
Persisting %ld configuration(s): [%{public}@]
FamilyMember: Received an invalid server response for FamilyMember. serverResponse = %@
No StoreKit In App Promotion Database migration function for %li => %li
[%{public}@] Error looking up invalid build tool version: %{public}@
[%{public}@] Error looking up DRM recovery key: %{public}@
(XPCServiceClient) There is no current connection - tokens can only be created at the point an XPC call enters
(XPCServiceClient) There is no connection context - tokens can only be created from service client connections
(XPCServiceClient) There is no service client - call was probably racing the teardown of the connection
(XPCServiceClient) Received connection from client: %{public}@
(XPCServiceClient) Encountered error when looking for available dialog observer: %{public}@
[Power] Low power mode is enabled
[Power] Power source is plugged in
[Power] Power source is battery
[Power] Registration for power notification failed: %u
[%{public}@] Intialized with account account: %{public}@
[%{public}@] Received sandbox account changed notification
[%{public}@] Current iTunes account has no DSID: %{public}@
[%{public}@] Account signout notification accountID: %{public}@ active: %d
[%{public}@] Account account changed notification accountID: %{public}@ active: %d
[%{public}@] Posting notification after active iTunes account changed: %{public}@
[%{public}@] Received account change notification but nothing has changed
[%{public}@] Storefront changed to %{public}@
[%{public}@] Storefront is the same as %{public}@
Not posting account change due to no DSID on account: %{public}@
[%@]: Should notify after iTunes account became active: %{public}@
[%@]: Should notify after iTunes account became inactive: %{public}@
[%@]: Should notify after iTunes account changed: %{public}@
No App usage Database migration function for %li => %li
[%{public}@] Entering %{public}s called by %{public}@
[%{public}@] Exiting  %{public}s
Bag invalidation requested
[%{public}@] Failed to perform action %ld with context %{public}@: %{public}@
Queue refresh requested for %{public}@
Queue refresh requested for %{public}@ but there is no active conneciton to it
Notified of deleted transaction (%lu - %{public}@) for %{public}@
Notified of updated transaction for %{public}@
Port updated to %ld
Removing %{public}lu transactions from cache for %{public}@
Received push with action %{public}@ for %{public}@
Registering for event type %{public}ld with filter %{public}@
Registering observation id %{public}@ to %{public}ld client(s)
Unregistering observation id %{public}@ with %{public}ld clients for %{public}@
Unregistering observation id %{public}@ with XPC service
Received event from XPC service %{public}ld for observer %{public}@
Ignoring received event as process is not properly entitled.
[%{public}@] Entering %{public}s for %{public}@ by %{public}@
[%{public}@]: Ignoring method call from %{public}@ because the required bundle ID is missing
[%{public}@]: Ignoring method call from %{public}@ because the app (%{public}@) is not valid for StoreKit testing
[%{public}@] Exiting  %{public}s 
Generating new encryption key for identifier: %{public}@
Unable to fetch/generate key with identifier: %{public}@ error: %{public}@
Performing cleanup on startup
Cleanup on startup complete
Cleaning up updates following app being registered
Removed update with bundleID: %{public}@ due to newly installed app evid: %llu being greater than update evid: %llu
Updated update state of bundleID: %{public}@ to installed app evid: %llu equals update evid: %llu
Skipping changing update state of bundleID: %{public}@ to installed app evid: %llu with update evid: %llu
[%@]: Application is not installed: %{public}@ and not 32-bit: %ld
[%@]: Application is not installed: %{public}@ and is 32-bit: %ld
[%@]: Including application: %@
 Cleaning up stale coordinators. %lu active coordinator IDs:
   %{public}@
   <none>
 Untracked: %{public}@
 Active:    %{public}@
 Coordinator cleanup complete with result: %d cancel count: %ld
 Coordinator cleanup complete with error: %{public}@
Cleaning up %lu stale installs: %{public}@
No stale installs
Cleaning up updates
[%{public}@] Skipping cancellation, this looks like a promotion failure
[%{public}@] Scheduling install cancellation following app deletion
Canceling jobs for deletedApps: [%{public}@]
Update clean up complete with %ld changes
Removed uninstalled update with bundleID: %{public}@
Removed update with bundleID: %{public}@ due to no matching app
Updating purchasing state for update with bundleID: %{public}@ currentState: %ld
Updating purchased state for update with bundleID: %{public}@ currentState: %ld
[%{public}@] Performing preamble checks
[%{public}@] Application only supports 32-bit architecture
[%{public}@] Automatic downloads have been disabled
[%{public}@] Automatic downloads are not permitted
[%{public}@] [%{public}@] Unable to launch. App not found
[%{public}@] [%{public}@] Unable to launch messsages extension for placeholder
[%{public}@] [%{public}@] Unable to locate app to launch
[%{public}@] [%{public}@] Unable to launch. isPlaceholder: %d launchProhibited: %d
[%{public}@] [%{public}@] Unable to launch because there is no bundle path
[%@]: Found mappings for %lu system apps: %@
[%@]: Failed to fetch system application map error: %{public}@
[%{public}@] A push token is required for the registration call - isSandbox: %{public}@
[%{public}@] Successfully registered push token, proceeding to add push type - isSandbox: %{public}@
[%{public}@] Error while registering for push: %{public}@ - isSandbox: %{public}@
[%{public}@] Could not find URL to %@ push type - isSandbox: %{public}@
[%{public}@] Running HEAD operation to get size for URL: %{public}@ task: %{public}@
[%{public}@] Unexpected data received for URL: %{public}@
[%{public}@] Invalid size: %lld for URL: %{public}@
[%{public}@] Found size: %lld for URL: %{public}@
[%{public}@] Invalid status: %ld for URL: %{public}@
[%{public}@] Failed to find size for URL: %{public}@ error: %{public}@
[%{public}@] Creating temporary bundle identifier %{public}@ for vendor %{public}@
[%{public}@] Cannot determine vendor ID for purchase
Canceling remote job for %{public}@
Unable to cancel remote job for %{public}@, no XDC support
Canceling local job for %{public}@
Unable to cancel, no job found for bundle ID: %{public}@
Canceled local job for %{public}@
Pausing local job for %{public}@
Unable to pause, no job found for bundle ID: %{public}@
Paused local job for %{public}@
Resuming local job for %{public}@
Unable to resume, no job found for bundle ID: %{public}@
Resumed local job for %{public}@
[%{public}@] Error generating updates URL. Error: %{public}@
[%{public}@] Error encoding request: %{public}@
[%{public}@] Error fetching updates: %{public}@
[%{public}@] Error generating keybag for account: %{public}@
 bytes=%{public, signpost.description:attribute}lu 
Download::Unzip/SupplyBytes
Download::Unzip/BackPressureWait
[Device] First boot. Clearing once per boot items
[Device] Starting
[Device] Marked once per boot complete for: %{public}@
[Device] Failed to create first-run semaphore: %s sem: %s
[%{public}@] Invalid coordinator intent, treating as initiating instead
[%{public}@] Establishing coordinator for intent `%{public}@` with importance `%{public}@`
[%{public}@] Error setting the gizmo pairing ID: %{public}@
Attempting app usage migration
Using the slow path to locate coordinator: %{public}@
Unable to determine intent for coordinator: %{public}@
[%{public}@] No unified receipt in response
[%{public}@] %ld transactions in response
[%{public}@] No transaction receipt in response
[%{public}@] Forcing server transaction sync for legacy purchase
[%{public}@] Syncing server transactions
[%{public}@] Error syncing server transactions %{public}@
[%{public}@] Finished syncing server transactions
[%{public}@] Receipt data string is not valid base64 %{private}@
[%{public}@] Receipt format invalid in response %{private}@
[%{public}@]: Found %ld products in receipt with ID %{public}@
[%{public}@] No URL to write receipt
Error loading metadata for %{public}@: %{public}@
Error decrypting protected metadata for %{public}@: %{public}@
No StoreKit In App Purchase Intents Database migration function for %li => %li
[%{public}@] Received local installation request
[%{public}@] Unable to install system app with missing identifier
[%{public}@] Active installation already in progress
Failed to find system app mapping: %{public}@
%{public}@ Query failed for %{public}@: %{public}@ error: %{public}@
%{public}@ Starting query for %{public}@: %{public}@
%{public}@ Completed with no results
%{public}@ Completed with 1 result: %{public}@
%{public}@ Completed with %lu result(s)
%{public}@ Launching messages extension for %{public}@: %{public}@
%{public}@ Launching app for %{public}@: %{public}@
%{public}@ Looking up %lu system app bundleIDs(s) for %{public}@: %{public}@
%{public}@ Lookup failed with error: %{public}@
%{public}@ Looking up %lu system app itemIDs(s) for %{public}@: %{public}@
%{public}@ Uninstalling app for %{public}@: %{public}@
Migrating %{public}@ to %llu
Migrating %{public}@ to %llu failed!
%{public}@: Received bag change notification. Checking for storefront change.
%{public}@: storefront changed to %{public}@
%{public}@: Initializing storefront country with %{public}@
%{public}@: storefront changed from %{public}@ to %{public}@
%{public}@: Error fetching bag storefront %{public}@
%{public}@: Notifying observer %{public}@ of storefront change
[%{public}@]: Allowing access to cellular (mask = %lx)
[%{public}@]: Denying access to cellular (mask = %lx)
[%{public}@]: Allowing access to low data network (result = %ld)
[%{public}@]: Denying access to low data network (result = %ld)
[%{public}@]: Allowing access to expensive network (result = %ld)
[%{public}@]: Denying access to expensive network (result = %ld)
[%{public}@] Package `%lld` has no location set
[%{public}@] Will download package using request: %{public}@
[%{public}@] Skipping cleartext validation for legacy purchase path
[%{public}@] Cleartext hashes are missing, download will likely fail
[%{public}@] Failed to establish decryption consumer error: %{public}@
Dropping update to finshing due to no bundleID
Dropping failed TestFlight install due to no bundleID
Dropping failed TestFlight install for %{public}@ due to no error provided
[%@]: Registered notification client: %{public}@
No StoreKitClient available for pid %ld
%{public}@: %{public}@ client type: %ld
%{public}@: Application has StoreKit testing enabled.
%{public}@: Allows client override: %{public}@
%{public}@: Removing connection from connection pool
%{public}@: No client to check server queue
%{public}@: Server queue check not allowed in App Clip
%{public}@: Process not entitled for client override
%{public}@: No account to add message to.
%{public}@: No client to fetch products
%{public}@: Product fetch not allowed in App Clip
%{public}@: Loading %lu products for %{public}@
%{public}@: Returning %lu products, %lu invalid identifiers for %{public}@
%{public}@: No buyParams to process payment
%{public}@: Client is not entitled to process payment
%{public}@: Could not parse client from buy parameters
%{public}@ Cannot find process path for %{public}@[%ld]
%{public}@ Cannot find application bundle for %{public}@[%ld]
%{public}@ Cannot find record for app extension in %{public}@[%ld]: %@{public}@
%{public}@: Could not create client for %{public}@ to process payment with %{public}@
%{public}@: Processing payment with %{public}@
%{public}@: Error processing payment for %{public}@ with %{public}@ - %{public}@
%{public}@: Finished processing payment for %{public}@ with %{public}@
%{public}@: Error consuming sandbox token for custom receipt URL - %{darwin.errno}d
%{public}@: In-App purchases not allowed on device
%{public}@: Error in disabled purchases dialog: %{public}@
%{public}@: No client to process payment
%{public}@: In-app purchase not allowed in App Clip
%{public}@: Could not process payment for product %{public}@ and quantity %lu
%{public}@: Payment has request data but client is not entitled
%{public}@: [%{public}@] Adding payment for %{public}@ and quantity %lu
%{public}@: No client to finish transaction
%{public}@: No transaction identifier to finish payment
Could not notify client of removed entitlements because a weak reference to self was lost while waiting for renewReceiptWithOptions:client:replyBlock: to reply. This is expected if the client has terminated.
Failed to renew receipt: %{public}@
%{public}@: No client to restore transactions
%{public}@: Restoring purchases not allowed in App Clip
%{public}@: Restoring purchases not allowed on device
%{public}@: No client to begin download
No download ID to start
%{public}@: No download ID to cancel
%{public}@: No download ID to pause
%{public}@: No client to resume download
%{public}@: No download ID to resume
%{public}@: No client to renew receipt
%{public}@: Renewing receipt not allowed in App Clip
%{public}@: renewing receipt for %{public}@ with options: %{public}@
%{public}@: fetched storefront %{public}@ (%{public}@)
%{public}@: handleInvalidReceipt for %{public}@
%{public}@: No client to get promoted IAP info
%{public}@: No client to set promoted IAP info
%{public}@: Invalid purchase intent (%{public}@, %{public}@)
%{public}@: Adding purchase intent (%{public}@, %{public}@, %{public}@, %{public}@)
%{public}@: No client to get purchase intents
%{public}@: Clearing all purchase intents for bundle identifier %{public}@
%{public}@: Requesting purchase intent products for bundle identifier %{public}@: %{public}@
%{public}@: No client to check messages
%{public}@: Checking messages not allowed in App Clip
Failed to renew app receipt for informing about revoked entitlements: %{public}@
Failed to renew app receipt for informing about revoked entitlements
%{public}@: No active account to check messages
%{public}@: Notifying client of Storefront change
%{public}@: registerArcadeAppWithRandomFromLib API is not supported on the simulator
%{public}@: arcadeSubscriptionStatusWithNonce API is not supported on the simulator
%{public}@: repairArcadeApp API is not supported on the simulator
%{public}@: Allowing payment request without entitlement on internal device
%{public}@: Processed download with ID: %{public}@
Failed to get code redemption URL, error: %{public}@
Failed to add query params to redeem URL
[SKAdNetwork: Did not find Info.plist for app: %{public}@
[SKAdNetwork: Did not find developer pingback domain in Info.plist
[SKAdNetwork: Developer pingback domain is of unexpected type in Info.plist
[SKAdNetwork: developer provided URL in Info.plist does not appear to be valid
[SKAdNetwork: developer provided URL does not pass domain validation.
[%{public}@] [%{public}@]  Timed out refreshing receipt
Received locale change, stopping appstored
Stopping for idle-exit
There are %lu open transaction(s):
Error removing purchase intents for %{public}@: %{public}@
Error updating purchase intent timestamps for %{public}@: %{public}@
[%{public}@] Environment not found for task: %{public}@
[%{public}@] Using silent presenter for authentication as no other presenter was specified
[%{public}@] Authentication request completed successfully
[%{public}@] Authentication request failed: %{public}@
[%{public}@] Using silent presenter for dialog as no other presenter was specified
[%{public}@] Dialog request completed successfully
[%{public}@] Dialog request failed: %{public}@
[%{public}@] Using silent presenter for engagement as no other presenter was specified
[%{public}@] Engagement request completed successfully
[%{public}@] Engagement request failed: %{public}@
[%{public}@]: Received StoreKit message for bundleID: %@ accountID: %@ status: %@
Error inserting message info: %{public}@ for DSID: %@, bundle ID: %@, status: %@
Failed to get the revoked product IDs from the push payload
Failed to check messages, account has no DSID
No message in database for DSID: %@, bundle ID: %@
Error inserting revocation info for DSID: %@, bundle ID: %@, product ID: %@
No revocations in database for DSID: %@, bundleID: %@
Error inserting message info: %{public}@ for DSID: %{public}@, bundle ID: %{public}@
Handling %s wake: %s
Obliterated stale background sessions
 uuid=%{public, signpost.description:attribute}@  request=%{public, signpost.description:attribute}@ 
[%{public}@] Request cancelled
Untracked task: %{public}@ canceling after receiving data
[%{public}@] %lld/%lld
[%{public}@] Data consumer for task: %{public}@ was stopped at consumer callback
ConsumerError
[%{public}@] Data consumer for task: %{public}@ failed with error: %{public}@
ConsumerComplete
Untracked task: %{public}@ canceling after receiving response
Download/Transfer
[%{public}@] Received response: %{public}@
[%{public}@] Task: %{public}@ CDNUUID: %{public}@
ConsumerReset
[%{public}@] Resetting data consumer for task: %{public}@ after receiving status code: %ld
[%{public}@] Data consumer for task: %{public}@ failed to prepare with unexpected resumption offset: %llu
[%{public}@] Data consumer for task: %{public}@ failed to prepare with error: %{public}@
[%{public}@] Data consumer for task: %{public}@ failed to reset with error: %{public}@
RequestExpired
[%{public}@] Canceling task: %{public}@ after receiving status code: %ld
RequestTimeout
[%{public}@] Restarting task: %{public}@ after receiving status code: %ld
RequestRange
[%{public}@] Truncate and restart task: %{public}@ after receiving status code: %ld
 uuid=%{public, signpost.description:attribute}@  status=%{public, signpost.description:attribute}ld 
RequestStatus
[%{public}@] Canceling task: %{public}@ after receiving invalid status code: %ld
Untracked task: %{public}@ canceling after will retry
[%{public}@] Canceling task: %{public}@ after cache request failed with error: %{public}@
CacheFail
[%{public}@] Retry scheduled for task: %{public}@ error: %{public}@
WillRetry
Untracked task: %{public}@ completed with error: %{public}@
[%{public}@] Completed task: %{public}@
[%{public}@] Encountered failure while using local cache, restarting using original request: %{public}@
[%{public}@] Failed to finish data consumer with error: %{public}@
[%{public}@] Failed to suspend data consumer with error: %{public}@
Untracked task: %{public}@ did finish collecting metrics
[%{public}@] Collected metrics for task: %{public}@ metrics: %{public}@
[%{public}@] Response body bytes received speed: %.0f
Untracked task: %{public}@ canceling after challenge
[%{public}@] Failing server trust for authentication challenge: %{public}@
[%{public}@] Prompting for authentication is not permitted
Untracked task: %{public}@ canceling after established connection
TaskConnecting
[%{public}@] Task: %{public}@ will send request
[%{public}@] Creating new session because download exceeds maximum watch cellular transfer size for existing session (Max: %lld, Download: %lld)
[%{public}@] Created new %s session with identifier: %{public}@ (%{public}@)
[%{public}@] Reusing existing session with identifier: %{public}@ (%{public}@)
Download
[%{public}@] Finishing asset promise
[%{public}@] Finished asset promise
[%{public}@] Request completed but promise had already finished
RecordMetrics
[%{public}@] Recording LoadURL Metrics
Retry
[%{public}@] Retrying request
[%{public}@] Failed to reset data consumer with error: %{public}@
[%{public}@] Stopping early because request has been canceled
[%{public}@] Data consumer is missing
[%{public}@] Preparing data consumer failed with error: %{public}@
[%{public}@] Lookup complete for: %{public}@ found replacement: %{public}@ with advice: %{public}@ error: %{public}@
[%{public}@] Error occuring while locating caching server: %{public}@
[%{public}@] No reporting as request reason is unspecified
[%{public}@] No reporting as request reason '%ld' is unknown
[%{public}@] Activating network activity: %{public}@
SessionError
[%{public}@] Error creating session for URL: %{public}@
TaskError
[%{public}@] Error creating task for URL: %{public}@
TaskCreated
[%{public}@] Created task: %{public}@ in session: %{public}@ for URL: %{public}@ 
[%{public}@] Task priority was unspecified, defaulting to non-user initiated!
[%{public}@] QOS class was unspecified, defaulting to utility!
TaskStarted
[%{public}@] Started task: %{public}@
[%{public}@] launchAppStoreWithURL for client: %{public}@
[%{public}@] could not find App Store
->> %{public}@
[%@]: Recieved command: %ld
No active paired device is available
%{public}@ >> SENDING PING
%{public}@ >> SENDING FAILED: %{public}@
%{public}@ >> RECEIVED PONG
NETWORK: isConnected = %d, isExpensive = %d, isConstrained = %d, isRoaming = %d
Authorize complete with error: %@
Authorize complete for account: %@
Command not supported
Client not supported
Recieved detailed command: %ld
Clearing optimal download windows from automatic updates
Cleared optimal download window from %ld updates (%ld total updates)
%{public}@ >> RECEIVED PING FROM %{public}@
[Cellular] Applying emulated network configuration: %{public}@
[Cellular] Clearing emulated network configuration
[%{public}@] availableSpaceOnDiskAtPath:%{public}@ failed: %{public}@
[%{public}@] Free space (%lld) is less than required (%lld). Checking cache delete.
[%{public}@] Cache delete does not have enough recoverable space (%{public}@).
[%{public}@] Cache delete has %{public}@ recoverable bytes
[%{public}@] Recovered %{public}@ bytes
[%{public}@] Timed out waiting for cache delete
[%{public}@] Enough space was recovered to proceed (now available: %lld)
[%{public}@] Clearing item from queue
Connection taken down HARD, please call close before deallocating: %{public}@
Encountered exception while in transaction: %{public}@
[%@]: Asking delegate to reset database after corruption: %{public}@
[%@]: Truncating database after corruption: %{public}@
[%@]: Reopening database after IO error: %{public}@
[%@]: Asking delegate to reset database after reopen: %{public}@
[%{public}@] Could not load download manifest with underlying error: %{public}@
Got message URL from response
Error in messages response: %{public}@
Error parsing messages response: %{public}@
No URL in messages response: %{public}@
Error parsing URL in messages response: %{public}@
Failed to get messages request URL, error: %{public}@
Failed to add parameters to messages request URL
(LSBundleRecord) Couldn't create receiptURL, no dataContainerURL was returned: %{public}@
[%{public}@] Performing authentication
[%{public}@] Authenticated successfully
[%{public}@] Error prompting for account: %{public}@
[%{public}@] Showing system alert authentication
No StoreKit User Messages Database migration function for %li => %li
Looking up system apps using predicate: %{public}@
Received %lu system app asset(s)
Discovered matching asset: %{public}@
Failed to lookup system app asset(s): %{public}@
Connection: %{public}@ requesting token for TestFlight
Connection: %{public}@: Per-topic token can be requested only when TestFlight topic is enabled
Connection: %{public}@: Per-topic token can be requested only for TestFlight
Connection: %{public}@ invalidating token for TestFlight
Connection: %{public}@: Per-topic token can be invalidated only for TestFlight
[%{public}@] Connection: %{public}@ received incoming message: %{public}@
[%{public}@] Received new public token: %{public}@ for environment: %{public}@
[%{public}@] Received new token: %{public}@ for topic: %{public}@, environment: %{public}@.
[%{public}@] Sending push request using AppStoreDaemon - isSandbox %{public}@
[%{public}@] %@ push types call succeeded - isSandbox: %{public}@
[%{public}@] Retrying add push type call since push token had not been registered - isSandbox: %{public}@
[%{public}@] %@ push types call failed with error:%{public}@ - isSandbox: %{public}@
[%{public}@] %@ push types call failed. isSandbox: %{public}@
[%{public}@] Retried add push type call succeeded  isSandbox: %{public}@
[%{public}@] Retried add push type call failed: %{public}@ - isSandbox: %{public}@
Failed to mark all downloads done error: %{public}@
Skipping register of non-enabled activity: %{public}@
Activity registered: %{public}@ with deadline: %{public}@ for reason: %{public}@
Activity registered: %{public}@ with no deadline for reason: %{public}@
Activity check-in: %{public}@ found deadline was missing, now set for: %{public}@
Activity check-in: %{public}@ with no deadline for reason: %{public}@
Activity check-in: %{public}@ with deadline: %{public}@ for reason: %{public}@
Activity exceeded its deadline, forcing run now: %{public}@
Activity fired within deadline (%@), running now: %{public}@
[%{public}@] Reset with reason: %{public}@
[%{public}@] Skipping reset due to activity not enabled activity
[%{public}@] Skipping register of non-enabled
[%{public}@] Using refresh override interval: %lld
[%{public}@] Failed to find bag value due to error: %{public}@. Will default to interval: %lld
Skipping unknown activity: %{public}@
[%{public}@] Completed activity with error: %{public}@
[%{public}@] Completed activity with result: %d
[%{public}@] Handling activity wakeup
[%{public}@] Skipping non-enabled activity
[%{public}@] Activity date too far in the future, using the current date
Setting up activities with build: %{public}@
[%{public}@]: Requires unconstrained network, but not prompting for automatic download.
[%{public}@]: Requires unconstrained network, but not prompting for current network.
[%{public}@]: We were asked to download now. Ignoring constrained network.
[%{public}@]: We were asked to cancel download. Denying network access.
[%{public}@]: First time seeing this account, setting up defaults
[%{public}@]: Error saving automatic software downloads setting: %{public}@
[%{public}@]: Error getting automatic downloads settings: %{public}@
[%{public}@]: Error saving automatic downloads setting for key %{public}@: %{public}@
[%{public}@]: Fetched automatic downloads settings: %{public}@
[%{public}@]: Unable to get automatic downloads settings because there is no active account
[%{public}@]: Received notification that settings changed externally.
Received a notification that preferences have changed externally.
[%{public}@]: Error fetching automatic download settings: %{public}@
[%{public}@]: Automatic software downloads in defaults differs from what we have on the account, updating
[%{public}@]: Presenting first usage dialog for: %{public}@
[%{public}@]: Failed to present first usage dialog for: %{public}@ error: %d
[%{public}@]: Unable to evaluate cellular download: %{public}@
[%{public}@]: Unable to evaluate low data download: %{public}@
[%{public}@] Starting server purchase queue check
[%{public}@] No account to check server purchase queue
[%{public}@] Error building pending queue count request: %{public}@
[%{public}@] Error checking pending queue count: %{public}@
[%{public}@] Invalid pending transactions range: %{public}@
[%{public}@] Error building pending queue request: %{public}@
[%{public}@] Error checking pending queue: %{public}@
[%{public}@] Found %lu transactions in pending queue
%{public}@: No downloads to start for ID %{public}@
%{public}@: Download already started for ID %{public}@
%{public}@: Download already finished for ID %{public}@
%{public}@: Starting downloads for ID %{public}@
%{public}@: No downloads to cancel for ID %{public}@
%{public}@: Download is not started for ID %{public}@
%{public}@: No downloads to pause for ID %{public}@
%{public}@: Removing %lu downloads for transaction %{pivate}@
%{public}@: No download path to remove for ID %{public}@
%{public}@: Removing downloaded content for %{public}@ at %{public}@
%{public}@: Error removing downloaded content for ID %{public}@ - %{public}@
%{public}@: Adding download %{private}@ to pending downloads
%{public}@: Download %{private}@ already added to pending downloads
Content restore keybag resulted in error: %{public}@
Successfully completed content restore call with %ld appinstall(s)
Content restore setting ForceAppDRMMode: %d
KBSync unavailable for account: %{public}@ error: %{public}@
[%{public}@] item: %{public}@ due to lack of required metadata
[%{public}@] ContentRestore lookup: %{public}@
[%{public}@] Restore hard failed with error: %{public}@
[%{public}@] Restore failed temporarily with error: %{public}@
[%@]: Starting Diagnostic service
[%@]: Starting IAP Info service
[%@]: Starting Installation service
[%@]: Starting Library Service
[%@]: Starting Purchase service
[%@]: Starting Purchase History service
[%@]: Starting Repair service
[%@]: Starting Update Service
[%@]: Starting Crossfire service
Migrations needed
No migration required for build: %{public}@
Starting StoreKit Testing Listener
HAR logging is disabled for this device
Received an optimal download window but we weren't able to create valid dates with the provided data: %{public}@ %ld
Received optimal download window of %{public}@ to %{public}@
Query string for DAAP call is: %{public}@
[%@]: Purchase History DAAP data not NSData
(AMSDialogResult) No original request available, assuming the request was canceled
(AMSDialogResult) No selected action identifier available, assuming the request was canceled
(AMSDialogResult) No selected action not found, assuming the request was canceled
No record found for %{public}@: %{public}@
No record found for %{public}@: %{public}@. Checking for extensions.
No extension record found for %{public}@: %{public}@
Extension record's containing bundle record not expected type: %{public}@
Can't generate canonical executable path for app with no executable URL: %{public}@
Failed find matching device for: %{public}@
Failed to get destination identifier for: %{public}@
Unsupported device: %{public}@
(VoucherStore) Inserting voucher externalID: %@, Voucher %@
(VoucherStore) Removing voucher for externalID: %@
(VoucherStore) Executing block for externalID: %@, QOS(0x%x) Voucher %@
Performing miscellaneous migration
[%{public}@]: BundleID required for event: %{public}@
Skipping foreground event with timestamp: %{public}@ duration: %{public}@
[%{public}@] Canceling purchase due to error: %{public}@
[%{public}@] Refusing to re-complete purchase
[%{public}@] Failing purchase with error: %{public}@
[%{public}@] Refusing to fail completed purchase (error was: %{public}@)
[%{public}@] Cannot mix machine based and non-machine based purchases
[%{public}@] Created batch for machine based purchases
Invalid hash '%@' expected '%@'
[%{public}@] [%{public}@] No delegate to handle authentication request
[%{public}@] [%{public}@] Handling authentication request
[%{public}@] [%{public}@] Blocking sign in for receipt renewal as there is no active account
[%{public}@] [%{public}@] Showing dialog for no active account
[%{public}@] [%{public}@] Dialog request failed: %{public}@
[%{public}@] [%{public}@] No account for receipt renewal: %{public}@
[%{public}@] [%{public}@] Receipt format invalid
[%{public}@] [%{public}@] Fetching vpp app receipt
[%{public}@] [%{public}@] Fetching app receipt
[%{public}@] [%{public}@] Using family primary account: %{private}@ and storeFront: %{public}@
[%{public}@] [%{public}@] Using app account: %{private}@ due to different item storeFront: %{public}@ primary account storeFront: %{public}@
[%{public}@] [%{public}@] No delegate to handle dialog request
[%{public}@] [%{public}@] Handling dialog request
[%{public}@] [%{public}@] No delegate to handle engagement request
[%{public}@] [%{public}@] Handling engagement request
Diagnostic clock enabled, current offset: %.0f
Diagnostic clock offset updated: %.0f
[Transaction] Started transaction: %{public}@
[Transaction] Joined transaction: %{public}@
[Transaction] Ended transaction: %{public}@
[Transaction] Left transaction: %{public}@
%{public}@: Forcing client overrides %{public}@ for %{public}@ until %{public}@
%{public}@: Initializing client from bundle URL: %{public}@
%{public}@: Initializing client with bundle proxy %{public}@
%{public}@: Client initialized with bundle ID %{public}@ and request bundle ID %{public}@
%{public}@: Payments not allowed. demoMode: %{public}@ profileSetting: %{public}@ ignoreRestrictions: %{public}@
%{public}@: Invalid override dictionary: %{public}@
[%{public}@] Sending authenticate request
[%{public}@] Failed authentication request with error %{public}@
[%{public}@] Sending system dialog request
[%{public}@] Failed dialog request with error %{public}@
[%{public}@] Handling dialog request
[%{public}@] Handling authentication request
[%{public}@] Handling engagement request
[%{public}@] Client overrides expired for %{public}@
Refusing to bootstrap system app with missing bundle identifier
Attempting to bootstrap %lu system app(s)
[%{public}@] Bootstrap completed
Received item for unexpected system app: %{public}@
Bootstrap for %lu system app(s) failed with error: %{public}@
[%{public}@] Could not delete transaction of type %hhu after finishing
[%{public}@] Error parsing payload from transaction: %{public}@
[%{public}@] Invalid transaction payload. ID = nil
[%{public}@] Updating transaction info for %{private}@
[%{public}@] Writing new transaction info for %{private}@
[%{public}@] Could not write transaction info for %{private}@
[%{public}@] Error encoding subscription status: %{public}@
[%{public}@] flushMetricsWithCompletionBlock for client: %{public}@
[%{public}@] getAppEventsWithCompletionBlock for client: %{public}@
[%{public}@] recordLaunchesWithCompletionBlock for client: %{public}@
[%{public}@] recordMetricsWithCompletionBlock for client: %{public}@
[%{public}@] reportAppEvent for client: %{public}@
[%{public}@] resetMetricsWithCompletionBlock for client: %{public}@
[%{public}@] sendMetricsWithCompletionBlock for client: %{public}@
Starting StoreKit Service
Registering StoreKit push consumer
%{public}@: Accepting new connection (%{public}@) %{public}@
%{public}@: Connection to %{public}@ invalidated
%{public}@: Connection to %{public}@ interrupted
%{public}@: Received push action %ld for %{public}@
%{public}@: Could not find bundle record for %{public}@ - %{public}@
%{public}@: Could not initialize client with URL %{public}@
%{public}@: Updating subscription status for %{public}@
%{public}@: Error syncing subscription status for bundle ID %{public}@ - %{public}@
%{public}@: Updating transaction history for %{public}@
%{public}@: Error syncing receipts for bundle ID %{public}@ - %{public}@
[SC] Will initialize
[SC] Did fail to get boot session
[SC:%{public}@] Did fail to synchronize due to invalid response data: "%{public}@"
[SC:%{public}@] Did fail to synchronize due to missing response data
[SC] Did fail to persist state
[SC] Did fail to persist state: %@
[SC] Did fail to get persisted state: %{public}@
[SC] Did fail to get persisted state
[SC] Will ignore invalid persisted state
[SC] Secure Clock State: SecureClock(%{public}@) SystemClock(%{public}@) SecondsSinceLastResponse(%{public}f) Uptime(%{public}f)
[%@]: Setting subscriptions for clientID: %{public}@ accountID: %{public}@ segment: %lu
[%@]: %{public}@ Handling News subscriptions request for: %{public}@ ignore caches: %d
[%@]: %{public}@ Handling subscription entitlements request for segment: %lu: %{public}@ ignore caches: %d
[%@]: %{public}@ Handling cached subscription entitlements request for segment: %lu: %{public}@
[%{public}@] Validating existing partial download: %{public}@
[%{public}@] Not validating existing partial download because chunkSize is zero: %{public}@
[%{public}@] Validated %llu bytes at: %{public}@
[%{public}@] Error attempting to truncate partial download: %{public}@
[%{public}@] Error attempting to close file handle: %{public}@
[%{public}@] Unable to delete previous download: %{public}@
[%{public}@] Deleted partially downloaded file due to previous errors: %{public}@
Throttle: Discarding expired record for %{public}@ / %{public}@ (%.0f seconds)
Throttle: Permitting further requests for %{public}@ / %{public}@: %{public}@
Throttle: Blocking further requests for %{public}@ / %{public}@: %{public}@
Throttle: Unblocking further requests for %{public}@
Throttle: Unblocking requests after expiry for %{public}@
Throttle: Blocking request for %{public}@ will unblock after %.0f seconds
Throttle: Unblocking requests for new version of %{public}@
[%{public}@] Presenting authentication request silently
[%{public}@] Dialogs cannot be presented silently, failing request
[%{public}@] Engagements cannot be presented silently, failing request
Failed to cancel progress with no bundleID
Canceling progress for bundleID: %{public}@
Removing placeholder for bundleID: %{public}@
Failed find existing app with no bundleID
Failed find existing progress with no bundleID
Failed to finish progress with no bundleID
Finished progress for bundleID: %{public}@ reason: %{public}@
Failed to finish progress for bundleID for: %{public}@
Failed to preFinish progress with no bundleID
Updating progress for bundleID: %{public}@ to installed with reason: %{public}@
Updated evid for bundleID: %{public}@ to %lld
Marked progress as %lld for bundleID: %{public}@ reason: %{public}@
Failed to set fraction completed: %.2f with no bundleID
No progress exists for: %{public}@ - Ignoring this request
Setting fraction completed: %.2f for bundleID: %{public}@
Failed to set fraction completed: %.2f for: %{public}@
Skipping app for catalog query since it is reporting remotely: %{public}@
Failed to begin progress with no bundleID (storeItemID: %{public}@)
Progress already begun for bundleID: %{public}@ storeItemID: %{public}@
Beginning %{public}@ for bundleID: %{public}@ storeItemID: %{public}@ reason: %{public}@
Flushing progress: %{public}@
[%{public}@] Sending dialog request
[%{public}@] Sending engagement request to client %{public}@
[%{public}@] Client %{public}@ failed enagement request with error %{public}@
[%{public}@] No client available to handle engagement request
[%{public}@] No account required for AMSPurchaseTypeDownloadProduct
[%{public}@] No account required for machine based purchase
[%{public}@] Account provided but we couldn't find it on this device
[%{public}@] No account provided
[%{public}@] Active iTunes account found, using that
[%{public}@] No active iTunes account found
[%{public}@] No account for discretionary purchase
[%{public}@] Purchase has a dsID but no username to authenticate
[%{public}@] Purchasing with parameters: %{public}@
[%{public}@] Requesting authentication on paired device to resolve missing account.
[%{public}@] Presenting dialog to ask user to sign in from phone as there is no active account on the device
[%{public}@] Prompting for account
[%{public}@] No account for purchase: %{public}@
Failed purchase had a trigger queue check.
Purchase finished but it was not found in the batch so dropping the response on the floor
[%{public}@] Attempting to recover missing iTunes account
[%{public}@] Failed to authenticated account: %{public}@
[%{public}@] Successfully recovered missing iTunes account
[%{public}@] Missing both iTunes AND iCloud accounts
[%{public}@] Encountered bag error while fetching updateProduct content type: %@
[%{public}@] Encountered unrecognized content type for updateProduct call from bag
%{public}@: Downloading payload to: %{public}@
%{public}@: Downloading asset for request: %{public}@
%{public}@: Finished download %{public}@. Starting install.
%{public}@: Error downloading IAP asset: %{public}@
%{public}@: Cancelling download
%{public}@: Pausing download
%{public}@: Finalizing download task
%{public}@: Error removing download path %{public}@
%{public}@ Extracting %lld bytes in archive %{public}s to %{public}s
%{public}@: BOMCopier failed with error: %d
%{public}@: Error installing IAP asset: %{public}@
%{public}@: Error creating IAP install directory: %{public}@
%{public}@: Error removing downloaded asset: %{public}@
%{public}@: BOMCopier copied %lld (%f)
[%{public}@] Import success for job: %{public}@ / %{public}@
[%{public}@] Import failed for bundleID: %{public}@ error: %{public}@
[%{public}@] Skipped duplicate job: %{public}@ / %{public}@
[%{public}@] Purchase failed for bundleID: %{public}@ error: %{public}@
[%{public}@] Perform updates start with reason: %{public}@
[%{public}@] Could not find update for bundleID: %{public}@
[%{public}@] Skipping %{public}@ due to restrictions, parentalControlsRank: %ld restrictionsRank: %ld
[%{public}@] Dropping update request because it is a duplicate of an existing install: %{public}@
[%{public}@] [%{public}@:%lld][%{public}@] Added purchase for account: %{public}@
[%{public}@] Perform updates complete with reason: %{public}@
[%{public}@] Finished failing purchase batch
[%{public}@] Error performing purchase for account: %{public}@ error: %{public}@
[%{public}@] Performing %lu purchase(s) for account: %{public}@
[%{public}@] Error performing purchases for account: %{public}@ error: %{public}@
[%{public}@]: Got connection from pid: %i (%{public}@)
[%{public}@]: Connection interrupted for pid: %i
[%{public}@]: Connection invalidated for pid: %i (%{public}@)
[%{public}@] [%{public}@]: No active account for subscription status request
[%{public}@] [%{public}@]: Starting subscription status request
[%{public}@] [%{public}@]: Subscription status request failed with error - %{public}@
[%{public}@] [%{public}@]: Finished subscription status request
[%{public}@] [%{public}@]: Invalid response for subscription status request: %{public}@
[%{public}@] [%{public}@]: Subscription status response does not contain required fields: %{public}@
[%{public}@] [%{public}@]: Invalid subscription group ID for status request: %{public}@
[%{public}@] [%{public}@]: Invalid status %{public}@ for subscription group ID %{public}@
[%{public}@] [%{public}@]: Invalid lastTransactions for subscription group ID %{public}@
[%{public}@] [%{public}@]: Invalid renewal info for subscription group ID %{public}@
[%{public}@] [%{public}@]: Invalid transaction for subscription group ID %{public}@
(ProtocolHandler) [%p] Reconfiguring request: %@ for task: %@ redirect: %d
[%{public}@] Reconfiguring request for task: %@ redirect: %d
(ProtocolHandler) [%p] Environment not found for task: %{public}@
[%{public}@] Failed to encode ATS data error: %{public}@
[%{public}@}] Failing installation with bootstrap error: %{public}@
[%{public}@}] Reset bootstrap phase, ready for next attempt
Active installations: %lu/%lu Lowest Priority: %ld Highest Priority: %ld
No contention, starting: %{public}@
Jettison candidate (%ld), starting: %{public}@
Prioritized (%ld >= %ld), starting: %{public}@
Polling complete with %lu active installation(s)
[%{public}@] Encountered invalid installation which was not really running
[%{public}@] Correctness check failed - this installation doesn't appear need bootstrap, starting anyway
[%{public}@]: Evaluating download, size = %llu automatic = %d
[%{public}@]: Implicitly denied - cellular prompt required
[%@]: Adding event for app with bundleID: %{public}@ type: %ld
[%{public}@] Not creating app event for non-candidate bundleID: %{public}@ with type: %{public}@
[%{public}@] Not creating app event for non-candidate bundleID: %{public}@ with type: %{public}@ hasMetadata: %d
[%{public}@] [%{public}@] Using deviceVendorID: %{public}@ for new event with type: %{public}@
[%{public}@] Created app event for bundleID: %{public}@ with type: %{public}@
[%@]: Failed to create event with topic: %{public}@
[%@]: Type: %ld : %{public}@
[%@]: Not recording uninstall for offloaded bundleID: %{public}@
[%@]: Not recording uninstall for placeholder bundleID: %{public}@
[%@]: Warning: Did not find a corresponding delete event for bundleIDs: [%{public}@]
[%@]: Not recording uninstall for ineligible bundleID: %{public}@
[%@]: Not recording uninstall for bundleID: %{public}@ due to lack of metadata
[%{public}@] Looking for launch events from: %{public}@ to: %{public}@
[%{public}@] allUsageForStreams resulted in error: %{public}@
[%{public}@] Could not find app metdata for: %{public}@
[%{public}@] Non candiate app with bundleID: %{public}@
[%{public}@] Skipping too short launch for: %{public}@. minTime: %ld runningTime: %lld
[%{public}@/%{public}@] Creating fresh app usage session entity. Was expired: %d
[%{public}@/%{public}@] Error creating fresh app usage session entity. Error: %{public}@
[%{public}@/%{public}@] Cleaned up app ussage session: %{public}@
[%{public}@]: Unable to record current apps due to error: %{public}@
[%{public}@]: Recorded metadata for %ld app(s)
[Network] Connection state became: %ld
[Network] Applying emulated network configuration: %{public}@
[Network] Clearing emulated network configuration
[Network] Network available (expensive = %d, constrained = %d, interface = %{public}@)
[Network] Network unavailable
A consumer of type: %{public}@ was already registered for action type: %ld
A consumer was never registered for action type: %ld
Received message for unknown topic:  %ld
Flushing %lu message(s) for action type: %{public}@
%lu message(s) pending but no consumer available for action type: %{public}@
PushConnection found to be nil when trying to add/remove push notification types
Attempting to remove push type for sandbox account
Attempting to add push type for sandbox account
No active sandbox account.
PushConnection found to be nil when trying to add/remove push notification types for sandbox account.
Skipping environment check and defaulting to: %{public}@
Shutting down existing connection before starting up in new environment: %{public}@
Environment is invalid, using existing connection instead error: %{public}@
Environment is invalid, and no other connection is available error: %{public}@
Connection: %{public}@ received incoming message: %{public}@
Connection: %{public}@ received push for %{private}@ but active is: %{private}@
Connection: %{public}@ received push with no DSID, active is: %{private}@
Received invalid message: %{public}@
[%{public}@] Syncing updates with server 
[%{public}@] Hiding update for %{public}@ following server sync
Unable to set update state to %ld with bundle ID: %{public}@ EVID: %{public}@
[%{public}@] [%{public}@] Transitioning to state "%s"
[%{public}@] Update does not exist for purchase: %{public}@ with storeID: %{public}@
[%{public}@] Could not find update for purchase: %{public}@ due to missing storeID
[%{public}@] Failed to send authentication request to paired device: %@
[%{public}@] executeQuery for client: %{public}@
Items request received auth challenge for:%{public}@ but found no notification client to pass on to. Attempting internal auth
Auto updates completed
Restore completed
Finishing progress for bundleID: %{public}@
[Crossfire] Initialized with initial analytics switch: %d
[Crossfire] Record app event: [%{public}@]
[%@] Apps deleted: [%{public}@]
[Crossfire] Posting crossfire metrics
[%{public}@] Apps installed: [%{public}@]
[Crossfire] Resetting crossfire metrics
[%{public}@] Sending crossfire metrics
[Crossfire] Setup with reason: %{public}@
[%{public}@] Adding event for app with bundleID: %{public}@ type: %ld
[%{public}@] Importing launch event(s) error: %{public}@
[%{public}@] Imported %ld launch event(s) with result: %d
[%{public}@] Found %ld raw launch event(s)
[%{public}@/%{public}@] Adding event for with type: %ld
[%{public}@] Completed sending metrics events reason
[Crossfire] Analytics switched to on
[Crossfire] Analytics switched to off
[%{public}@] Crossfire interval not in session
[%{public}@] Queuing %ld crossfire metrics event(s)
[%{public}@] No events to report
[%{public}@] BundleID required for event: %{public}@
[%{public}@] Error creating entity for bundleID: %{public}@ result: %{public}@
[%{public}@] Created app event entity with bundleID: %{public}@
[%{public}@] Error creating entity for bundleIDs: [%{public}@] result: %{public}@
[%{public}@] Created app event entity with bundleIDs: [%{public}@] result: %d
[%{public}@] Importing launch events error: %{public}@
[%{public}@/%{public}@] Removed app metadata
[Crossfire] Error writing duet launch wakeup file: %{public}@
[Crossfire] Wrote duet launch wakeup file
Queue check found duplicate items in the queue for %{public}@ (%{public}@). Choosing %{public}@ over %{public}@.
[%{public}@] Using workaround for missing buy parameters
[%{public}@] Using workaround for incorrect pricing parameters
[%{public}@] Updating metrics type to remote update for installed app: %{public}@
[%{public}@] Redownload request throttled with error: %{public}@
[%{public}@] Starting purchase for redownload
[%{public}@] Redownload request failed with error: %{public}@
[%{public}@] Redownload purchase failed with error: %{public}@
[%{public}@] Active installation already exists: %{public}@
Error checking for previously installed app for internal install %{public}@ %{public}@: %{public}@
Internal install requested for %{public}@ %{public}@ but it is already installed.
Timed out checking for %{public}@ %{public}@ on an internal install
No way to check for an existing app, continuing
Starting batch restore for %ld items with accountID: %{public}@
Using the active account for content restore call
Error running content restore request. Error: %{public}@
Retry complete for items: [%{public}@]
[%{public}@] Hard failing after %ld attempts
[%{public}@] Soft failing item not in the server response, and not encountering an error. Soft failure retry count: %ld
itemID: %{public}@ not in restore map
Skipping post processing to server item missing missing itemID for item: %{public}@
Skipping post processing of failed itemID: %{public}@ due to missing mapped item
Skipping post processing of failed itemID: %{public}@ due to missing mapped install item
[%{public}@] Soft failing with %ld attempts
[%{public}@] Skipping item due to missing itemID on metadata
[%{public}@] Content lookup succeeded
(StoreItem) Received value for 'alternateIconName': "%@"
[%{public}@]: BundleID required for mapping: %{public}@
Not removing temporary download folder as specified by user defaults: %{public}@
Removed temporary download folder: %{public}@
Error when trying to remove temporary download folder: %{public}@ : %{public}@
Cleaned up temporary download folder: %{public}@
Error when trying to clean up temporary download folder: %{public}@ : %{public}@
Download path exists but is not a directory: %{public}@
Creating temporary download folder: %{public}@
Failed to create directory: %{public}@ error: %{public}@
Unable to determine path for directory: %ld domain mask: %lu with path component: %{public}@
Failed to determine container path error: %llu
Failed to set attributes for: %{public}@ error: %{public}@
Deleted file that didn't match allow list: %{public}@
Failed to delete file that didn't match allow list: %{public}@ error: %{public}@
Keeping allow listed file: %{public}@
Failed to fetch contents of: %{public}@ error: %{public}@
Attempt to register connection without a UUID: %{public}@
[%{public}@] Failed to fetch updates for account: %{public}@ error: %{public}@
[%{public}@] Received %lu forced update(s)
[%{public}@] Failed to run forced updates task: %{public}@
[%{public}@] 
 Received %lu %{public}@server update(s) for account: %{public}@
[%{public}@] 
 UPD %{public}@
[%{public}@] 
[%{public}@] 
 DEF { bundleID: %{public}@ itemID: %lld }
[%{public}@] Found deferred update but not proxy for itemID: %{public}@
Purchase/Import
[%{public}@]: Dropping invalid purchase: %{public}@
[%{public}@] Overriding automatic installation flag
[%{public}@] Purchase import failed: %{public}@
[%{public}@] Purchase import succeeded
[%{public}@] Purchase import succeeded (duplicate)
[%{public}@]: Requesting installation of counterpart on paired phone
[%{public}@] Blocking voucher for purchase - boosting disabled
[%{public}@] There's no paired device to install this app on!
[%{public}@] Paired device: %{public}@ does not support WKWatchOnly!
[%{public}@]: Queued remote installation on paired device: %{public}@
[%{public}@]: Failed to queue remote installation to paired device: %{public}@
[Thermal] Registration for thermal pressure notification failed: %u
[Thermal] Thermal pressure is now %@ (%llu)
Attempting silent auth for account: %{public}@
Silent auth complete for account: %{public}@
Silent auth failed for account: %{public}@ with error: %{public}@
Attempting loud auth for account: %{public}@
Loud auth complete for account: %{public}@
Loud auth failed for account: %{public}@ with error: %{public}@
Dropping anonymous pings - DNU submission disabled
Successfully sent ping to: %{public}@
Ping failed to: %{public}@ error: %{public}@
[%{public}@] [%{public}@] Performing LoadFamilyCircleTask
[%{public}@] [%{public}@] AMSLoadFamilyCircleTask failed because there's no active account.
[%{public}@] [%{public}@] Failed to load the family info because the network call failed. error = %{public}@
[%{public}@] [%{public}@] Failed to load the family info because we were unable to process the server response.
[%{public}@] [%{public}@] Returning cached family info.
[%{public}@] [%{public}@] We failed to load the family info, and we have no cached family info to return.
[%{public}@] [%{public}@] AMSLoadFamilyCircleTask failed because the bag didn't give us the URL. error = %{public}@
[%{public}@] [%{public}@] Unable to generate the path in order to cache a family info lookup.
[%{public}@] [%{public}@] Unable to cache a family info lookup because the given account has no DSID. account = %{public}@
[%{public}@] [%{public}@] Failed to serialize the family info. error = %{public}@
[%{public}@] [%{public}@] Failed to write the serialized family info to disk. error = %{public}@
[%{public}@] [%{public}@] Wrote the serialized family info to: %{public}@
[%{public}@] [%{public}@] Unable to load cached family info because the account has no DSID. 
[%{public}@] [%{public}@] Our cached family info isn't for the given account.
[%{public}@] [%{public}@] We have cached family info for the account, but it's too old to return.
[%{public}@] [%{public}@] Unable to generate the path in order to load cached FamilyInfo
[%{public}@] [%{public}@] Load cached FamilyInfo
[%{public}@] [%{public}@] Failed to deserialize the cached FamilyInfo. Error: %{public}@
Message info init userID nil
Message info init bundleID nil
[%{public}@] Skipping item duplicate of prior install: %{public}@
Device has no destination ID: %{public}@
Device not found for from ID: %{public}@
Unable to find device with ID: %{public}@
Skipping device with no destination ID: %{public}@
Available
Installed
User Notified
Purchasing
Purchased
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
