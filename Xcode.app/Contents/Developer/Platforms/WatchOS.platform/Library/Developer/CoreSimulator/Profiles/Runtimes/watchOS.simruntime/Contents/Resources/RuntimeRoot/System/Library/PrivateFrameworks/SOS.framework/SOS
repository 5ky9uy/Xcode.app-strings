@(#)PROGRAM:SOS  PROJECT:SOS-1
A`%y@
com.apple.mobilephone
v12@?0i8
v16@?0@"NSArray"8
v8@?0
com.apple.sos.contactStoreQueue
Not authorized to access contact store (authorization status: %ld)
v24@?0@"NSArray"8@"NSError"16
healthStore
T@"HKHealthStore",&,N,V_healthStore
medicalIDContactsInitialStateSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_medicalIDContactsInitialStateSemaphore
medicalIDEmergencyContacts
T@"NSArray",&,N,V_medicalIDEmergencyContacts
medicalIDEmergencyContactsMutex
T{_opaque_pthread_mutex_t=q[56c]},N,V_medicalIDEmergencyContactsMutex
SOSContactsExist
TB,R,N
legacyContactsManager
T@"SOSLegacyContactsManager",R,N
SOSFriendsDestinationNumbersArrayMetaKey
SOSFriendsManagerChangedNotification
SOSLegacyContactsChangedNotification
B24@?0@8@"NSDictionary"16
friendsManager
T@"FKFriendsManager",&,N,V_friendsManager
SOSLegacyContactsExist
com.apple.SOS
SOSLongPressTriggersEmergencySOSKey
SOSNewtonStateChangedNotification
SOSNewtonTriggersEmergencySOSKey
SOSAllowedToMessageSOSContactsKey
longPressTriggersEmergencySOS
TB,N
newtonTriggersEmergencySOSNumber
T@"NSNumber",&,N
newtonTriggersEmergencySOS
allowedToMessageSOSContacts
TB,N,GisAllowedToMessageSOSContacts
com.apple.calls.sos
Default
name
T@"NSString",C,N,V_name
phoneNumber
T@"NSString",C,N,V_phoneNumber
nameContactIdentifier
T@"NSString",C,N,V_nameContactIdentifier
phoneNumberContactIdentifier
T@"NSString",C,N,V_phoneNumberContactIdentifier
com.apple.sos.trigger
com.apple.sos.contacts
SOSFriendsChangedNotification
SOSContactsChangedNotification
SOSSendingLocationUpdateChangedNotification
SOSSendingLocationUpdateValueKey
SOSMostRecentLocationSentChangedNotification
SOSTriggerMechanismChangedNotification
SOSInteractiveStateChangedNotification
SOSDismissSOSNotification
SOSManagerErrorDomain
SOSTriggerMechanismKey
com.apple.sos
com.apple.sos.sosd.connectionrequest
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
SOSSendingLocationUpdateStopTimeKey
v20@?0B8^@12
v16@?0@"NSError"8
v12@?0B8
locationUpdateTimerIntervalSeconds
locationUpdateMinimumDistanceMeters
v16@?0@"CLLocation"8
+[SOSEngine _sendCKMessage:failureBlock:]
AJFQheZDyUbvI6RmBMT9Cg
stopSendingTimerIntervalSeconds
_HAS_NAME
_NO_NAME
NEWTON
EMERGENCY
_MMS
_SMS
_HAS_LOCATION
_NO_LOCATION
%@_TEXT_MESSAGE%@%@%@
EMERGENCY_TEXT_MESSAGE_SUBSEQUENT%@
_SMS_HAS_LOCATION
%@%@
EMERGENCY_TYPE_NEWTON_TRIGGER
EMERGENCY_TYPE_SOS_TRIGGER
http://maps.apple.com/?ll=%.5f,%.5f
EMERGENCY_PIN_LABEL
&q=%@
EMERGENCY_TEXT_CALLBACK_NUMBER_ADDITION_HAS_NAME
EMERGENCY_TEXT_CALLBACK_NUMBER_ADDITION_NO_NAME
EMERGENCY_TEXT_CALLBACK_NO_NUMBER_ADDITION_HAS_NAME
FMDFMIPManager
FindMyDevice
v16@?0@"_HKMedicalIDData"8
locationShifter
T@"_MKLocationShifter",&,N,V_locationShifter
clientConnections
T@"NSMutableArray",&,N,V_clientConnections
CSLSConnectionStatusService
Unable to find class %s
/System/Library/PrivateFrameworks/CarouselServices.framework/CarouselServices
com.apple.sos.locationManager
com.apple.sos.locationManager.initialRequest
LocationBundles
Emergency SOS.bundle
v32@?0@"CLLocation"8Q16^B24
requestingLocation
TB,N,GisRequestingLocation,V_requestingLocation
forceEnableLocationAssertion
T@"CLAssertion",&,N,V_forceEnableLocationAssertion
lastLocation
T@"CLLocation",&,N,V_lastLocation
delegate
T@"<SOSPersistentTimerLocationManagerDelegate>",W,V_delegate
com.apple.sos.newtonManager
SOSNewtonLastEventKey
SOSNewtonEligibilityCheckKey
CMAnomalyEventResolution
CMAnomalyEventResponse
v16@?0@"NSDate"8
v16@?0Q8
com.apple.private.sos.newtonManager
v16@?0@"CMAnomalyEvent"8
%llu
coreMotionAnomalyManager
T@"CMAnomalyManager",&,N,V_coreMotionAnomalyManager
shouldAcceptNewEvents
TB,V_shouldAcceptNewEvents
T@"<SOSNewtonManagerDelegate>",W,N,V_delegate
CMAnomalyManager
/System/Library/Frameworks/CoreMotion.framework/CoreMotion
CSLSOnWristMonitor
%\d\$@
com.apple.sos.ctserverqueue
com.apple.sos.ctserver
v24@?0^{__CFString=}8^{__CFDictionary=}16
newton://
telemergencycall://?mode=sos&category=cinnamon
telemergencycall://?mode=sos
connection
T@"NSXPCConnection",&,N,V_connection
connectionRequestNotificationToken
Ti,N,V_connectionRequestNotificationToken
observerToQueue
T@"NSMapTable",R,N,V_observerToQueue
mostRecentSOSActivationReason
T@"NSString",C,N,V_mostRecentSOSActivationReason
currentSOSInitiationState
Tq,N
currentSOSInteractiveState
UIApplication
/System/Library/Frameworks/UIKit.framework/UIKit
Initializing %@ with _healthStore: %@
Failed to register for Health contacts notification: %d
_medicalIDEmergencyContactsMutex pthread_mutex_init failure: %d
Received initial medical ID emergency contacts
sosContact: %@ phoneNumber: %@
NOT adding phoneNumber as it's an emergency #: %@
sosContactDestinations: %@
Received error from _CTServerConnectionIsEmergencyNumber(): domain: %d, error: %d
medicalIDEmergencyContacts: %@
emergencyContacts: %@ error: %@
Timed out waiting for initial medical ID state
newton status change: %d
[WARN] Unexpected value %@ for %@ entitlement: %@
[WARN] Unexpected NULL value returned from SecTaskCreateFromSelf()
Stopping location updates based on timeToStopSending: %@
Starting location updates based on timeToStopSending: %@
Error from remoteObjectProxyWithErrorHandler: %@
Attempting to update current sos initiation state to %ld for connections: %@
Attempting to update current sos interactive state to %ld for connections: %@
isLocationValid: %d location: %@
okToSend: %d timeIntervalOk: %d distanceIntervalOk: %d _lastLocationSent: %@ location: %@
Stopping timer based on timeToStopSending: %@
Not yet reached timeToStopSending: %@
Try sending through watch Baseband...
Determined additionalText %@ using callbackNumber %@
Sending directly as standalone...
Try sending MMS/SMS...
Failed to send SOS message over relay and this is not a baseband device.
[WARN] Failed to send %@
Asking CKSOSUtilities to send message: %@
%s: message: %@ text: '%@' location: %@ recipients: %@ useStandalone: %d
SOS location shift started
SOS location shift completed. Shifted from %@ to %@
SOS location shift timed out.
willStartSendingLocationUpdate
Skipping request for warmUpLocationRequest since we are already requesting location
no emergency contacts to notify
Failed to get meContact's name, using medicalID's name: %@
textMessageKey: %@ sosMessage: %@
location: %@
Rejecting location - horizontalAccuracy < 0.0: %f
Rejecting location - horizontalAccuracy > 150.0: %f
Rejecting location - locationIntegrity: %d
Rejecting location - timestamp too old: %@
Keeping location - horizontalAccuracy:%f locationIntegrity:%d timestamp:%@
SOS client connection interrupted
SOS client connection invalidated
[WARN] New connection %@ missing entitlement: %@
shouldAcceptNewConnection: %d for connection: %@
Warming up location request
Requesting location; self.isRequestingLocation: %d
Timing out after requesting location for %f seconds
Invalidating _requestLocationsTimer: %@
Stop requesting location; self.isRequestingLocation: %d
_locationUpdateTimer: %@
_lastLocation: %@
Created _initalRequestTimer: %@
_initalRequestTimer: %@
timer: %@
Updated _requestingLocation to %d
Created new _forceEnableLocationAssertion: %@
locationManager didUpdateLocations: %@
[WARN] CLLocationManager error: %@
Newton Eligibility based on age: %lu
Could not retrieve age from Health record; error: %@. Querying medical ID.
newton eligibility: %lu, newtonTriggerEmergencySOSNumber: %@
Newton enabled state changed
Newton disabled. Unregistering from Anomaly Manager event notifications
Starting subscription to Newton anomaly events.
Stopping subscription to Newton anomaly events.
Starting countdown: %f for service identifier: %@
Timer fired for autodial
Calling sosNewtonManagerTriggerCountdownToAutoCall
Skipping autodial countdown
Invalid response %tu
Calling resolveAnomalyEvent with resolution %tu
SOSNewtonManager onAnomalyEvent: %@ for manager: %@
AnomalyEvent ID: %llu
Newton not accepting new events currently
Triggering Newton flow for event %@
Triggering complete. Success: %d
Received an already-resolved event. Passing resolution: %tu
Received a motion-detected update. Canceling timer...
Timed out waiting for triggerSOSWithUUID to finish for event: %@
CanTriggerAutoDial: %d, wristDetectDisabled: %d, wristOn: %d
Invalidating SOSNewtonManager timer
Last event found: %@
Health info did change
notification: %@ info: %@
_CTServerConnectionCreateOnTargetQueue() returned nil
uuid: %@
openURL: %@
Current process doesn't have SOS entitlement
Device doesn't support SOS
initializing SOSManager
Handling %s by requesting current state
Received current SOS state
Received initial SOS state
SOS server connection interrupted
SOS server connection invalidated
SOSManager attempting to dismiss SOS
SOS was dismissed before SOS call ended with sosDismissalType: %ld
SOSManager updating initiation state from %lu to %lu
SOSManager updating interactive state from %lu to %lu
zPLR
zPLR
zPLR
zPLR
SOSContactsManager
SOSLegacyContactsManager
SOSUtilities
SOSContact
SOSEntitlement
SOSInternalServerProtocol
SOSServerProtocol
NSObject
SOSInternalClientProtocol
SOSClientProtocol
SOSEngine
SOSPersistentTimerLocationManagerDelegate
NSXPCListenerDelegate
SOSPersistentTimerLocationManager
CLLocationManagerDelegate
SOSNewtonManager
CMAnomalyDelegate
NSString_StringWithPositionalSpecifiersFormat
SOSManager
initWithHealthStore:
currentProcessHasEntitlement:
init
setDebugIdentifier:
resume
_medicalContactsDidChange
fetchMedicalIDEmergencyContacts
dealloc
setMedicalIDEmergencyContacts:
medicalIDContactsInitialStateSemaphore
_medicalIDEmergencyContactsWithCompletion:
medicalIDEmergencyContacts
countByEnumeratingWithState:objects:count:
phoneNumber
length
_isEmergencyNumber:
addObject:
SOSContactsWithTimeout:andCompletion:
SOSContactDestinations
count
phoneNumbersToMessage
isAllowedToMessageSOSContacts
legacyContactsManager
SOSLegacyContactsDestinations
initWithSuiteName:
authorizedToUseContactStore
storeWithOptions:
preloadContactStoreIfNecessary
authorizationStatusForEntityType:
_waitForMedicalIDInitialState
copy
name
setName:
setPhoneNumber:
nameContactIdentifier
setNameContactIdentifier:
phoneNumberContactIdentifier
setPhoneNumberContactIdentifier:
fetchMedicalIDEmergencyContactsWithCompletion:
defaultCenter
postNotificationName:object:
contactStore
SOSContactsExist
hasValidContactsToMessage
_userDefaults
healthStore
setHealthStore:
setMedicalIDContactsInitialStateSemaphore:
medicalIDEmergencyContactsMutex
setMedicalIDEmergencyContactsMutex:
.cxx_destruct
_healthContactsNotificationToken
_legacyContactsManager
_medicalIDEmergencyContacts
_healthStore
_medicalIDContactsInitialStateSemaphore
_medicalIDEmergencyContactsMutex
setGroupSize:domain:
setMaxGroupCount:domain:
setFriendsChangedExternallyNotificationName:domain:
managerForDomain:
_SOSFriends
_SOSDestinationsForFriend:
displayName
_SOSFormattedDestinationForFriend:withDestinationNumber:
SOSLegacyContacts
allPeople
friendGroups
objectAtIndexedSubscript:
friends
predicateWithBlock:
filteredArrayUsingPredicate:
addObjectsFromArray:
metadataValueForKey:
_contactFromFriend:
phoneNumbers
value
unformattedInternationalStringValue
isEqualToString:
formattedStringValue
abRecordGUID
arrayWithObjects:count:
unifiedContactWithIdentifier:keysToFetch:error:
SOSLegacyContactsExist
contactStoreDidChange
friendsManager
setFriendsManager:
_friendsManager
mainBundle
bundleIdentifier
standardUserDefaults
_userFriendsDefaults
objectForKey:
numberWithBool:
boolValue
setObject:forKey:
synchronize
setWithObject:
synchronizeUserDefaultsDomain:keys:
_userSOSDefaults
newtonTriggersEmergencySOSNumber
isEqual:
setNewtonTriggersEmergencySOSNumber:
longPressTriggersEmergencySOS
setLongPressTriggersEmergencySOS:
newtonTriggersEmergencySOS
setNewtonTriggersEmergencySOS:
setAllowedToMessageSOSContacts:
_name
_phoneNumber
_nameContactIdentifier
_phoneNumberContactIdentifier
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
willStartSendingLocationUpdate
startSendingLocationUpdateWithCompletion:
startSendingLocationUpdateForReason:WithCompletion:
stopSendingLocationUpdate
isSendingLocationUpdate:
mostRecentLocationSentWithCompletion:
updateCurrentSOSInitiationState:
updateCurrentSOSInteractiveState:
dismissSOSWithCompletion:
didDismissSOSBeforeSOSCall:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
setSendingLocationUpdate:
updateClientCurrentSOSInitiationState:
updateClientCurrentSOSInteractiveState:
dismissClientSOSWithCompletion:
didDismissClientSOSBeforeSOSCall:
initWithoutEntitlement
setDelegate:
SOSSendingLocationUpdateChanged:
addObserver:selector:name:object:
date
compare:
distantPast
isSendingLocationUpdate
clientConnections
remoteObjectProxyWithErrorHandler:
stopRequestingLocationUpdates
locationIsValidToSend:
doubleValue
timeIntervalSinceNow
distanceFromLocation:
_sendMessageToRecipients:withLocation:isFirstMessage:medicalIDName:Reason:
_isBasebandDevice
sharedInstance
status
_myNumber
additionalTextForCallbackNumber:
_sosMessageForLocation:isFirstMessage:withMMS:callbackNumber:medicalIDName:Reason:
_sendMessage:location:recipients:useStandalone:failureBlock:
GPSCoordinatesURLForLocation:
_sendSMSMessage:MMSMessage:location:recipients:failureBlock:
initWithSMSMessage:mmsMessage:recipients:
setLocationURL:
setLocation:
setUseStandalone:
_sendCKMessage:failureBlock:
shiftedLocationWithLocation:completion:
initWithMessage:recipients:
setFailureBlock:
sharedUtilities
sendMessage:
message
location
recipients
useStandalone
locationShifter
isLocationShiftRequiredForLocation:
shiftLocation:withCompletionHandler:callbackQueue:
notificationEnabledAndContactsExist
isRequestingLocation
warmUpLocationRequest
fireAndStartTimertWithTimeInterval:
dateByAddingTimeInterval:
dictionaryWithObjects:forKeys:count:
postNotificationName:object:userInfo:
invalidateTimer
removeObjectForKey:
isValid
currentSOSInitiationState
descriptorForRequiredKeysForStyle:
arrayByAddingObjectsFromArray:
_ios_meContactWithKeysToFetch:error:
stringFromContact:style:
meContact
fullNameForContact:
firstNameForContact:
_sosMessageForLocation:isFirstMessage:withMMS:myFullName:myFirstName:callbackNumber:Reason:
stringWithFormat:
stringByAppendingString:
bundleForClass:
localizedStringForKey:value:table:
stringWithPositionalSpecifiersFormat:arguments:
coordinate
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
additionalTextForCallbackNumber:fullName:firstName:
horizontalAccuracy
integrity
timestamp
initWithIdentifier:
hasAnyData
lostModeIsActive
fetchMedicalIDDataWithCompletion:
valueForEntitlement:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
removeObject:
setInvalidationHandler:
sosPersistentTimerLocationMangerTimerFired:location:
listener:shouldAcceptNewConnection:
start
contactsManager
fetchMedicalIDName
setLocationShifter:
setClientConnections:
_sosPersistentTimerLocationManager
_timeToStopSendingMessages
_timeLastMessageSent
_lastLocationSent
_contactsManager
_medicalIDName
_notifyContactsReason
_locationShifter
_clientConnections
defaultManager
URLsForDirectory:inDomains:
URLByAppendingPathComponent:
bundleWithURL:
initWithEffectiveBundle:delegate:onQueue:
setDesiredAccuracy:
invalidateInitialTimer
requestLocation
setRequestingLocation:
startUpdatingLocation
invalidateRequestLocationsTimer
shouldStopRequestingLocationAfterCallback
_requestLocationsTimeout:
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
delegate
invalidate
stopUpdatingLocation
_sosPersistentTimerLocationManagerTic:
setMinimumEarlyFireProportion:
mainRunLoop
scheduleInRunLoop:
_startTimer
_sosPersistentTimerInitialRequest:
newAssertionForBundle:withReason:
setForceEnableLocationAssertion:
enumerateObjectsWithOptions:usingBlock:
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didRangeBeacons:satisfyingConstraint:
locationManager:didFailRangingBeaconsForConstraint:error:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
forceEnableLocationAssertion
lastLocation
setLastLocation:
_locationManager
_locationUpdateStartQueue
_locationUpdateTimer
_requestLocationsTimer
_initalRequestTimer
_requestingLocation
_delegate
_forceEnableLocationAssertion
_lastLocation
newtonEligibilityWithHealthStore:completion:
initWithCalendarIdentifier:
components:fromDate:toDate:options:
year
dateOfBirthComponentsWithError:
dateFromComponents:
gmtBirthdate
checkEligibilityForAutoEnableWithHealthStore:completion:
alloc
activate
boolForKey:
setBool:forKey:
_updateEligibility
initWithCString:encoding:
newtonEligibilityWithCompletion:
stopDetection
startDetection
isAnomalyDetectionAvailable
timerFired:
canTriggerAutoDial
sosNewtonManagerRequestsCountdownToAutoCall:
_invalidateTimer
startTimerToAutoDial
resolveEventWithResponse:Resolution:
respondToAnomalyEvent:withResponse:
resolveAnomalyEvent:withResolution:
_persistAnomalyEventWithResponse:resolution:
identifier
shouldAcceptNewEvents
_processEvent:
triggerSOSWithUUID:triggerMechanism:completion:
_previouslySeenEvent
valueForKey:
intValue
state
lastState
isWristDetectDisabled
effectiveOnWristState
initWithInt:
checkEligibilityForAutoEnableWithCompletion:
anomalyManager:didDetectAnomalyEvent:
anomalyManager:onAnomalyEvent:
initWithDelegate:
enabledStateChanged
updateNewtonWithResponse:
coreMotionAnomalyManager
setCoreMotionAnomalyManager:
setShouldAcceptNewEvents:
_activeEvent
_timer
_wristMonitor
_eventProcessingSemaphore
_eventProcessingQueue
_HKMedicalIDDidChangeNotification
_HKUserCharacteristicsDidChangeNotification
_shouldAcceptNewEvents
_coreMotionAnomalyManager
regularExpressionWithPattern:options:error:
initWithString:
matchesInString:options:range:
range
substringWithRange:
mutableCopy
replaceOccurrencesOfString:withString:options:range:
triggerSOSWithCompletion:
triggerSOSWithUUID:completion:
shouldTriggerSOS
URLWithString:
sharedApplication
openURL:options:completionHandler:
deviceSupportsSOS
_resetStateWithCompletion:
weakToStrongObjectsMapTable
connection
initWithMachServiceName:options:
setConnection:
remoteSOSEngineProxy
_waitForInitialState
observerToQueue
didUpdateCurrentSOSInitiationState:
triggerSOS
notifySOSTriggerMechanismChanged
setCurrentSOSInitiationState:
setCurrentSOSInteractiveState:
currentSOSInteractiveState
addObserver:queue:
removeObserver:
connectionRequestNotificationToken
setConnectionRequestNotificationToken:
mostRecentSOSActivationReason
setMostRecentSOSActivationReason:
_sendingLocationUpdate
_sosInitiationState
_sosInteractiveState
_initialStateSemaphore
_connectionRequestNotificationToken
_connection
_observerToQueue
_mostRecentSOSActivationReason
v16@0:8
@16@0:8
B16@0:8
@24@0:8@16
v32@0:8d16@?24
B24@0:8@16
v24@0:8@?16
v24@0:8@16
{_opaque_pthread_mutex_t=q[56c]}16@0:8
v80@0:8{_opaque_pthread_mutex_t=q[56c]}16
@"SOSLegacyContactsManager"
@"NSArray"
@"HKHealthStore"
@"NSObject<OS_dispatch_semaphore>"
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@32@0:8@16@24
@"FKFriendsManager"
v20@0:8B16
@"NSString"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8q16@?24
v24@0:8@?<v@?B^@>16
v32@0:8q16@?<v@?B^@>24
v24@0:8@?<v@?B>16
v24@0:8@?<v@?@"CLLocation">16
v24@0:8q16
v52@0:8@16@24B32@36q44
v56@0:8@16@24@32@40@?48
v52@0:8@16@24@32B40@?44
v32@0:8@16@?24
@56@0:8@16B24B28@32@40q48
@64@0:8@16B24B28@32@40@48q56
@40@0:8@16@24@32
v32@0:8@16@24
v32@0:8@"SOSPersistentTimerLocationManager"16@"CLLocation"24
B24@0:8@"CLLocation"16
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
q16@0:8
@"SOSPersistentTimerLocationManager"
@"NSDate"
@"CLLocation"
@"SOSContactsManager"
@"_MKLocationShifter"
@"NSMutableArray"
v40@0:8@16@24@32
v40@0:8@16q24@32
v28@0:8@16i24
v40@0:8@"CLLocationManager"16@"CLLocation"24@"CLLocation"32
v32@0:8@"CLLocationManager"16@"NSArray"24
v32@0:8@"CLLocationManager"16@"CLHeading"24
B24@0:8@"CLLocationManager"16
v40@0:8@"CLLocationManager"16q24@"CLRegion"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconRegion"32
v40@0:8@"CLLocationManager"16@"CLBeaconRegion"24@"NSError"32
v40@0:8@"CLLocationManager"16@"NSArray"24@"CLBeaconIdentityConstraint"32
v40@0:8@"CLLocationManager"16@"CLBeaconIdentityConstraint"24@"NSError"32
v32@0:8@"CLLocationManager"16@"CLRegion"24
v32@0:8@"CLLocationManager"16@"NSError"24
v40@0:8@"CLLocationManager"16@"CLRegion"24@"NSError"32
v28@0:8@"CLLocationManager"16i24
v24@0:8@"CLLocationManager"16
v32@0:8@"CLLocationManager"16@"CLVisit"24
v24@0:8d16
@"CLLocationManager"
@"NSObject<OS_dispatch_queue>"
@"PCPersistentTimer"
@"<SOSPersistentTimerLocationManagerDelegate>"
@"CLAssertion"
v32@0:8@"CMAnomalyManager"16@"CMAnomalyEvent"24
v24@0:8Q16
v32@0:8q16q24
@"CMAnomalyEvent"
@"CSLSOnWristMonitor"
@"<SOSNewtonManagerDelegate>"
@"CMAnomalyManager"
v40@0:8@16q24@?32
i16@0:8
v20@0:8i16
@"NSXPCConnection"
@"NSMapTable"
