@(#)PROGRAM:wcd  PROJECT:WatchConnectivity-198
Starting up
Daemon Build Time: %{public}s
launched for event: %{public}s
SIGTERM received, shutting down.
Dumping state
No extension identifier for extension-based record: %{public}@; %{public}@
%{public}@ due to %{public}@
error %{public}@. Already retried max times
failed to get bundleID for %{public}@ %{public}@
%{public}@: set app bundle id %{public}@
Created new client object %{public}@
Failed to get applicationInfo for client with communicationID %{public}@
failed to create path %{public}@
%{public}@: XPC connection interrupted
%{public}@: XPC connection invalidated
%{public}@: Reachable changed for connection lost (reachable: %s)
%{public}@: suspended; invalidating xpc connection
%{public}@, Updated app UI state watchAppUIActive: %s, watchNotificationUIActive: %s, watchNotificationUICreating %s, watchAppActiveInBackground %s, isInUse %s
%{public}@, App state changed background state: %s -> %s, updating client
%{public}@: client supports switch: %s, client pairingID: %{public}@, system pairingID: %{public}@
%{public}@: unpair occurred
%{public}@: pairingIDs match. activating for currently active counterpart
%{public}@: switch had started
%{public}@: activating for currently active counterpart
%{public}@: activating for currently active counterpart; awaiting initial set up complete
%{public}@ paired: %s, connected: %s, forgroundOrPrivileged: %s, remote first unlocked: %s
%{public}@ force standalone: %{public}s, standalone app: %{public}s
%{public}@ iOS app installed: %{public}s, standalone: %{public}s
%{public}@ causing client to check to see if there is any pending content awaiting
%{public}@ not dequeueing content for client as it has no pairingID
%{public}@ not dequeueing content for client as pairingIDs don't match (%{public}@ vs %{public}@)
%{public}@ current YES, next %s
%{public}@ outstanding messages at maximum
%{public}@ %{public}@
%{public}@ Client sending file %{public}@ with metadata %{public}@
%{public}@ identifier: %{public}@, clientPairingID: %{public}@
%{public}@: failed with %{public}@
%{public}s
pairedListOperation: %s
pairedListOperation2: %s
activeComplicationsOperation: %s
installedAppsListOperation: %s
EXCEPTION: %s
About to enumerate records
Enumerating records: %@
Error checking if companion app installed for %@, %@
WCDIndexManager cannot clear cache for nil application
Missing bundleID for application: %@
%{public}@ from %{public}@
removing %{public}@
XPC connection interrupted
XPC connection invalidated
private client reconnected
failed to persist wireData with error: %{public}@
unsupported fake protobuf type: %{public}@
failed to clean up %{public}@ with error %{public}@
restoring %{public}@
failed to restore client for %{public}@
client already exists %{public}@
failed with error %{public}@
Accepting new connection from client with bundle ID %{public}@ and communicationID %{public}@
could not resolve communication ID for client %{public}@
Creating new client %{public}@ with connection %{public}@
Accepting new private connection from client with bundle ID %{public}@
Denying connection from bundle ID %{public}@ with pid %d as it is missing the private entitlement. Please contact the WatchConnectivity team before proceeding!
updated IDS with list of services: %{public}@
removing client: %{public}@ from list of clients %{public}@
Updating other device that installed apps changed
called on WatchOS
error: %{public}@
for %{public}@
No applicationInfo for communicationID: %{public}@
no private clients connected. Notifying anyone listening to reconnect
%{public}@ error: %{public}@
no private clients connected. Notifying anyone listening to reconnect, and giving them 30 seconds to connect
%{public}@, success: %s, sendIdentifier: %{public}@
called on watchOS
identifier: %{public}@, isResponse: %s, clientID: %{public}@, clientPairingID: %{public}@
error getting duet identifiers
request: %{public}@, communicationID: %{public}@, client: %{public}@
received %{public}@ without an active watch app
failed to send 'not reachable' response error for message request %{public}@
completed
clientID: %{public}@, clientPairingID: %{public}@
sent identifier: %{public}@
fileURL: %{public}@, hasMetadata: %s, identifier: %{public}@, clientID: %{public}@, clientPairingID: %{public}@
%{public}@
failed due to %{public}@
error cancelling send %{public}@
fileURL: %{public}@, communicationID: %{public}@, pairingID: %{public}@, sendID: %{public}@, hasMetadata: %s
failed to move file to client %{public}@ inbox. error: %{public}@
missing required values. communicationID: %{public}@, applicationInfo: %{public}@, pairingID: %{public}@
missing info (data container: %{public}@, pairingID: %{public}@)
id %{public}@: applicatio: %{public}@ result: %{public}@
error writing file transfer result to disk %{public}@ due to %{public}@
error serializing file transfer result %{public}@ due to %{public}@
error creating outgoing file transfer path %{public}@ due to %{public}@
sendID: %{public}@, communicationID: %{public}@ found valid file transfer
communicationID: %{public}@, pairingID: %{public}@, sendID: %{public}@, userInfoID: %{public}@
error setting user info data. error: %{public}@
identifier: %{public}@, clientID: %{public}@, pairingID: %{public}@
userInfoURL: %{public}@, communicationID: %{public}@, pairingID: %{public}@, sendID: %{public}@
missing required values. communicationID: %{public}@, application: %{public}@, pairingID: %{public}@
loaded complication user info path %{public}@
sendID: %{public}@, communicationID: %{public}@ found valid complication user info
sendID: %{public}@, communicationID: %{public}@ found valid user info
id %{public}@: application: %{public}@ result: %{public}@
error writing user info transfer result to disk %{public}@ due to %{public}@
error serializing user info transfer result %{public}@ due to %{public}@
error creating outgoing user info transfer path %{public}@ due to %{public}@
identifier: %{public}@, communicationID: %{public}@
failed. identifier: %{public}@, communicationID: %{public}@ due to %{public}@
identifier: %{public}@, communicationID: %{public}@ has a completion handler, invoking it
identifier: %{public}@, communicationID: %{public}@ was a file transfer
identifier: %{public}@, communicationID: %{public}@ was a user info transfer
identifier: %{public}@, communicationID: %{public}@ failed to find transfer
communicationID: %{public}@, WCDPayloadSendType: %s (%d), protobufSize: %ld
incomingUnhandledProtobuf unknown type %d
incorrect type %{public}@
no metadata
%{public}@ "%{public}@". Acknowledging switch with IDS
failed isPrivileged check. error: %{public}@
error: (%{public}@) converted to (%{public}@)
gathered duet identifiers %{public}@
error getting watch app bundle ID %{public}@
attempting launch of %{public}@
failed to launch WatchApp %{public}@ due to %{public}@
successfully launched WatchApp %{public}@
%{public}@ doesn't support background launching
failed to retrieve WatchApp bundleID for %@
incomingFileURL: %{public}@, application: %{public}@, fileIdentifier: %{public}@, hasUserInfoData: %s
error archiving session file to path %{public}@ %{public}@ due to %{public}@
error deserializing user info data %{public}@
error moving file into Inbox %{public}@
error creating metadata folder %{public}@
error creating file folder %{public}@
file already exists, duplicate delivery? %{public}@
incomingUserInfoURL: %{public}@, application: %{public}@, pairingID: %{public}@, userInfoIdentifier: %{public}@
error archiving user info file to inbox: %{public}@
error creating user info transfer from file
error creating user info folder in the inbox %{public}@
user info is duplicate of complication user info
userInfoTransfer: %{public}@, application: %{public}@, pairingID: %{public}@
error writing current complication identifier at %{public}@ due to %{public}@
persisted complication user info transfer id %{public}@ with complication/send ID %{public}@
error moving user info file to inbox %{public}@ due to %{public}@
error creating user info folder in the inbox %{public}@ due to %{public}@
appContextDataSize: %ld, application: %{public}@, pairingID: %{public}@
error writing application context data to file %{public}@
error creating application context folder %{public}@
no identifier specified for CL transient authorization
Getting transient authorization with id %@
failed to get CL transient authorization info %@
Device Information: %{public}@
%{public}s Updating installed apps list for request
%{public}s Retrying initial setup
initial set up failed. Awaiting trigger to try set up again
complete
unpaired from all watches
Installed apps on companion have changed
Resetting initial state for invactive (pairingID %@)
Handling switch with nil pairing ID
Pairing ID already set to active paired device (current %@, active %@)
No matching NRDevice for active IDS device
IDS and NR devices don't match (NR %@, IDS %@)
standaloneWatchApps: %{public}@
runningIndependentlyWatchApps: %{public}@
iOSApplicationsContainingWatchApp: %{public}@
isPaired: %s, pairingID: %{public}@, pairedDevicesPairingIDs: %{public}@, pairedDeviceInformation: '%{public}@'
%s for bundleID: %{public}@
%{public}@, numMonitored: %ld
nil bundle ID
removed %{public}@
Monitoring watch app UI states
UI Active State Info %{public}@
Notifying observers of UI state change
%{public}@ of %{public}@
Copying voucher
Releasing voucher
Error getting bundle record for %@: %@
Communication ID was not found for %@
InternalBuild
Fri Aug 14 16:40:45 2020
com.apple.notifyd.matching
v16@?0@"NSObject<OS_xpc_object>"8
v8@?0
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
WatchConnectivity State End
WatchConnectivity State
WCDRemoteAcknowledgedState
WCDRemoteFirstUnlockState
-------------
Remote Device First Unlocked: %s
Stored State Value: %s
Received State: %s
-[WCDFirstUnlockManager sendStateIfNeccessary]
-[WCDFirstUnlockManager sendFirstUnlockRequest]
@"NSString"8@?0
B8@?0
Q8@?0
canRunIndependently
runningIndependently
standalone
companionAppInstalled
none
application
extension
applicationType
watchAppBundleID
extensionBundleID
companionAppBundleID
com.apple.watchkit
isExecuting
isFinished
%{error}
v24@?0@"NSError"8@"NSString"16
Subclass %@ must override %@
com.apple.wcd.client-
    
%@Communication ID: %@
%@Bundle ID: %@
%@Is In Use: %s
%@Watch App Bundle ID: %@
%@Reachable: %s
%@Background: %s
%@Privileged: %s
%@Outstanding Messages To Send Count: %d
WatchConnectivity
Clients
%@.plist
<%@: %p, communicationID: %@, identifier: %@, connection: <%@>(%s,%s), clientCurrentPairingID: %@%@>
, isInUse: YES
v16@?0@"NSError"8
-[WCDRetrieveInitialStateOperation main]
%@ %@
version
clientData
-[WCDRetrievePairedListOperation doWorkWithCompletionHandler:]
getPairedDevices does not contain getActivePairedDevice
%s: %s cannot be nil.
pairingID
pairedDevicesPairingIDs
Internal
Production
%@ (%@)
%@ %@ (%@)
%@: %@, %@, "%@"
-[WCDRetrieveInstalledAppsListOperation doWorkWithCompletionHandler:]
%02x
watchAppBundleIdentifier
allApplications.count
validApplications
success
file
file_results
user_info
user_info_results
%@-%@-%@
com.apple.private.wcd.private-client.work-queue
<%@: %p, connection: %@>
v28@?0S8@"NSData"12@"NSString"20
v48@?0@"NSURL"8@"NSData"16@"NSDictionary"24@"NSString"32^@40
userinfo
complication
appcontext
com.apple.wcd
com.apple.wcd.private
com.apple.private.alloy.watchconnectivity
com.apple.private.alloy.watchconnectivity.classd
IDS Service: %@
XPC Listener: %@
XPC Private Listener: %@
Private Client: %@
Pending Message Requests: %@
Send Identifier To Handler: %@
Pending Paired Sync Complications Started Identifier: %@
Pending Pings For Extension Bundle IDs: %@
Pending Extension Bundle IDs To Be Privileged: %@
Clients:
@unionOfObjects.state
-[WatchConnectivityDaemon dequeueContentForClient:]
-[WatchConnectivityDaemon clientReachabilityDidChange:]
@16@?0@"WCDApplicationInfo"8
v32@?0@"NSString"8@"WCDClient"16^B24
-[WatchConnectivityDaemon handleCounterpartDaemonDidStart]
-[WatchConnectivityDaemon sendDaemonClientsInformation]
WCDProtoDaemonClientsInformation
-[WatchConnectivityDaemon dequeuePendingComplicationPings]
WCDProtoCompanionFirstUnlockState
WCDProtoCompanionFirstUnlockRequest
WCDProtoCompanionFirstUnlockAck
com.apple.wcd-private.client.connect
-[WatchConnectivityDaemon privateClientConnectTimerFired]
WCDProtoPairedSyncComplicationsStartedAck
v16@?0@"NSSet"8
-[WatchConnectivityDaemon dequeuePendingMessagesForCommunicationID:]
SUCCESS
-[WatchConnectivityDaemon service:account:incomingResourceAtURL:metadata:fromID:context:]
-[WatchConnectivityDaemon service:connectedDevicesChanged:]
-[WatchConnectivityDaemon service:devicesChanged:]
v20@?0B8@"NSError"12
Request
Response
ApplicationContext
DaemonStarted
DaemonsClientsInformation
UserInfoComplication
FirstUnlockState
FirstUnlockRequest
FirstUnlockAck
PairedSyncComplicationsStarted
PairedSyncComplicationsStartedAck
InstalledAppsUpdated
UNKNOWN
v12@?0B8
CSLSDuetActivationOptions
/System/Library/PrivateFrameworks/CarouselServices.framework/CarouselServices
CSLSDuetActivationReasonWatchConnectivity
CSLSDuetActivationService
BuildVersion
rdar_%@
WatchConnectivity Detected A Problem
File a bug
Dismiss
633486
ComponentID
ComponentName
ComponentVersion
phone,watch
AutoDiagnostics
Serious Bug
Classification
I Didn't Try
Reproducibility
User hit <rdar://problem/%@>
Description
WatchConnectivity detected problem %@
Title
tap-to-radar://new
v24@?0^{__CFUserNotification=}8Q16
SBUserNotificationDismissOnLock
SBUserNotificationDontDismissOnUnlock
SBUserNotificationAllowLockscreenDismissalKey
communicationID
WCDStoredInstalledWatchApps
fake.bundleid.to.avoid.subscribing.to.all
com.apple.wcd.watchProcessStates
-[WCDSystemMonitor retryInstalledAppsUpdate]
-[WCDSystemMonitor retrySetupInitialStateIfNeeded]
-[WCDSystemMonitor setUpInitialState]
v16@?0@"NSDictionary"8
Initial Set Up Complete: %s
Device Information: %@
Is Paired: %s, Pairing ID: %s
Paired Device Information: %@
Active Device Connected: %s
Remote First Unlocked: %s
Operation Queue: %@, Operations: %@
Observers: %@
Monitor: %@, Monitored Bundle IDs: %@
Application Workspace: %@
IsSimulator
marketing-name
ProductName
ProductType
ProductVersion
ReleaseType
Simulator
%@: %@, %@, 
BatteryCurrentCapacity
BatteryIsCharging
charging
not charging
%d%% (%@)
v12@?0i8
-[WCDSystemMonitor handleRemainingComplicationUserInfoTransfersReset]
-[WCDSystemMonitor handleDeviceBecameInactiveNotification:]
-[WCDSystemMonitor handleDeviceBecameActiveNotification:]
-[WCDSystemMonitor handleSwitchStartedByIDS]
-[WCDSystemMonitor onqueue_switchIfReady]
-[WCDSystemMonitor onqueue_handleSwitch]
BKSApplicationStateUnknown
BKSApplicationStateTerminated
BKSApplicationStateBackgroundTaskSuspended
BKSApplicationStateBackgroundRunning
BKSApplicationStateForegroundRunning
BKSApplicationStateProcessServer
BKSApplicationStateForegroundRunningObscured
Unexpected
v24@?0@"NSDictionary"8@"NSError"16
expectsResponse
dictionaryMessage
isInUse
coreLocationData
errorCode
firstUnlocked
informationData
acknowledgedState
application-identifier
boolValue
sharedSystemMonitor
sharedDaemon
state
dataWithPropertyList:format:options:error:
length
bytes
mainRunLoop
init
initializeRemoteFirstUnlockState
subscribeToAllNotifications
defaultCenter
removeObserver:
dealloc
addObserver:
remoteDeviceFirstUnlocked
loadRemoteFirstUnlockState
receivedFirstUnlockState
isPaired
requestFirstUnlockStateIfNeccessary
localDeviceFirstUnlocked
updateLocalFirstUnlockState
sendFirstUnlockState
loadRemoteAcknowledgedState
clearRemoteAcknowledgedState
setVersion:
setFirstUnlocked:
sendFirstUnlockState:
setLocalDeviceFirstUnlocked:
initWithData:
hasAcknowledgedState
acknowledgedState
numberWithBool:
saveRemoteAcknowledgedState:
firstUnlocked
setRemoteDeviceFirstUnlocked:
sendFirstUnlockAck:
setReceivedFirstUnlockState:
setRemoteFirstUnlocked:
saveRemoteFirstUnlockState
setAcknowledgedState:
sendFirstUnlockRequest
sendFirstUnlockRequest:
standardUserDefaults
setObject:forKey:
synchronize
objectForKey:
removeObjectForKey:
remoteFirstUnlocked
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
systemObserverInitialSetUpComplete
systemObserverActiveDeviceSwitchStarted
systemObserverActiveDeviceConnectedChanged
systemObserverPairedListChanged
systemObserverRemoteFirstUnlockedChanged
systemObserverInstalledApplicationsChanged
systemObserverWatchAppsInstalledChanged
systemObserverComplicationsInstalledChanged
systemObserverRemainingComplicationUserInfoTransfersReset
systemObserverActiveComplicationsChanged
systemObserverWatchAppUIStatesChanged:
systemObserverAppDidSuspendForBundleID:
systemObserverAppDidTerminateForBundleID:
systemObserverProcessStateChangedForBundleID:
systemObserverUpdatingInstalledApps
systemObserverRunningIndependentlyWatchApps
handlLocalFirstUnlockStateChanged
sendStateIfNeccessary
handleFirstUnlockAck:
handleFirstUnlockState:
handleFirstUnlockRequest:
.cxx_destruct
_remoteDeviceFirstUnlocked
_receivedFirstUnlockState
_localDeviceFirstUnlocked
T@"NSNumber",&,N,V_localDeviceFirstUnlocked
TB,N,V_remoteDeviceFirstUnlocked
TB,N,V_receivedFirstUnlockState
T@"NSString",R
builderWithObject:ofExpectedClass:
watchAppBundleIdentifier
appendString:counterpart:
watchExtensionBundleIdentifier
companionAppBundleIdentifier
canRunIndependentlyOfCompanionApp
appendBool:counterpart:
isRunningIndependently
isStandaloneWatchApp
isCompanionAppInstalled
watchKitApplicationType
appendUnsignedInteger:counterpart:
isEqual
succinctDescription
descriptionWithMultilinePrefix:
descriptionBuilderWithMultilinePrefix:
build
succinctDescriptionBuilder
appendBool:withName:ifEqualTo:
appendBool:withName:
appendString:withName:
appendBodySectionWithName:multilinePrefix:block:
builderWithObject:
appendObject:withName:
appendObject:withName:skipIfNil:
_canRunIndependentlyOfCompanionApp
_runningIndependently
_standaloneWatchApp
_companionAppInstalled
_watchKitApplicationType
_watchAppBundleIdentifier
_watchExtensionBundleIdentifier
_companionAppBundleIdentifier
TC,R,N,V_watchKitApplicationType
T@"NSString",R,N,V_watchAppBundleIdentifier
T@"NSString",R,N,V_watchExtensionBundleIdentifier
T@"NSString",R,N,V_companionAppBundleIdentifier
TB,R,N,V_canRunIndependentlyOfCompanionApp
runningIndependently
TB,R,N,GisRunningIndependently,V_runningIndependently
standaloneWatchApp
TB,R,N,GisStandaloneWatchApp,V_standaloneWatchApp
companionAppInstalled
TB,R,N,GisCompanionAppInstalled,V_companionAppInstalled
companionBundleIdentifier
bundleIdentifier
runsIndependentlyOfCompanionApp
isWatchOnly
applicationExtensionRecords
countByEnumeratingWithState:objects:count:
extensionPointRecord
identifier
initWithApplicationRecord:hasInstalledCompanionApp:
hasValidConfiguration
TB,R,N
isCancelled
finish
start
willChangeValueForKey:
didChangeValueForKey:
doWork
retryCount
setFailed:
setRetryCount:
doWorkWithCompletionHandler:
stringWithFormat:
exceptionWithName:reason:userInfo:
initWithDelegate:queue:
isAsynchronous
isExecuting
isFinished
main
delegate
queue
failed
_executing
_finished
_failed
_delegate
_queue
_retryCount
T@"<WCDOperationDelegate>",R,W,N,V_delegate
T@"NSOperationQueue",R,W,N,V_queue
TB,N,V_failed
TQ,N,V_retryCount
wc_connectionHasEntitlement:
wc_connectionBundleID
setConnection:
applicationInfo
copy
setupBundleIDMonitoring
watchAppBundleID
loadPersistedClientState
clearPersistedClientState
stopMonitoringBundleID:
removeWatchAppBundleIDUIStateMonitoring:
bundleID
applicationWorkspace
communicationID
applicationInfoForBundleIdentifier:type:allowPlaceholder:
isInUse
reachable
background
privileged
outstandingMessagesToSendCount
startMonitoringBundleID:
addWatchAppBundleIDUIStateMonitoring:
firstObject
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileURLWithPath:isDirectory:
clientsStorageURL
fileURLWithPath:isDirectory:relativeToURL:
invalidate
setDelegate:
daemonInterface
setExportedInterface:
setExportedObject:
clientInterface
setRemoteObjectInterface:
loggingIdentifier
connection
setInterruptionHandler:
handleXPCInvalidation
setInvalidationHandler:
resume
stringByAppendingString:
UTF8String
clientXPCConnectionDidDisconnect:
persistClientState
updateClientWithSessionState
privilegedCalled
setPrivilegedCalled:
watchAppInstalled
counterpartCanEstablishXPCConnectionCalled
setCounterpartCanEstablishXPCConnectionCalled:
hasIncreasedPriorityTraffic
isAlwaysReachable
clientCurrentPairingID
retainArguments
invoke
pairingID
setClientCurrentPairingID:
handleWatchAppUIStateChanged:
applicationStateForBundleID:
handleWatchAppProcessState:
currentBackground
objectForKeyedSubscript:
setWatchAppUIActive:
setWatchNotificationUIActive:
setWatchNotificationUICreating:
setWatchAppActiveInBackground:
watchAppUIActive
setIsInUse:
watchNotificationUIActive
watchNotificationUICreating
watchAppActiveInBackground
setPendingContentDequeued:
setClientSupportsActiveDeviceSwitch:
clientSupportsActiveDeviceSwitch
applicationInfoForBundleIdentifier:type:
isAltAccount
initialSetUpComplete
handleActiveDeviceSwitchStarted
retrySetupInitialStateIfNeeded
counterpartCanEstablishXPCConnection
activeDeviceConnected
foregroundOrPrivileged
previousReachable
setPreviousReachable:
clientReachabilityDidChange:
iOSDeviceNeedsFirstUnlock
standaloneApp
initWithReachable:iOSDeviceNeedsFirstUnlock:activePairingID:standaloneApp:companionAppInstalled:
setCurrentBackground:
remoteObjectProxy
newSessionState
handleSessionStateChanged:
dequeuePendingContent
pendingContentDequeued
dequeueContentForClient:
handleApplicationContextWithPairingID:
handleUserInfoResultWithPairingID:
handleIncomingUserInfoWithPairingID:
handleFileResultWithPairingID:
handleIncomingFileWithPairingID:
data
setClientData:
expectsResponse
setExpectsResponse:
isDictionaryMessage
setDictionaryMessage:
requestCLTransientAuthorization:
setCoreLocationData:
addOutstandingMessage:
removeOutstandingMessage:
handleSentMessageWithIdentifier:error:
sendMessage:withIdentifier:isResponse:clientID:clientPairingID:errorHandler:
error
code
setErrorCode:
setAllowMessageSending:
allowMessageSending
outstandingMessagesToSend
addObject:
removeObject:
updateMessagesClientIfNeeded
count
handleMessageSendingAllowed
handleRequest:
handleResponse:
cancelSendWithIdentifier:
removeAllObjects
updateApplicationContext:clientID:clientPairingID:errorHandler:
processIdentifier
file
fileURL
setObject:forKeyedSubscript:
userInfoData
path
transferIdentifier
transferFile:withMetadata:identifier:forClient:errorHandler:
wcErrorWithCode:
dictionaryWithObjects:forKeys:count:
transferUserInfo:withMetadata:identifier:clientID:clientPairingID:errorHandler:
sharedManager
fileIndexForApplication:pairingID:
removeContentIdentifier:
fileResultsIndexForApplication:pairingID:
userInfoIndexForApplication:pairingID:
userInfoResultsIndexForApplication:pairingID:
remoteObjectProxyWithErrorHandler:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
sessionReadyForInitialStateForClientPairingID:supportsActiveDeviceSwitch:withErrorHandler:
sendMessage:clientPairingID:acceptanceHandler:
updateApplicationContext:clientPairingID:errorHandler:
transferFile:sandboxToken:clientPairingID:errorHandler:
transferUserInfo:withURL:clientPairingID:errorHandler:
cancelAllOutstandingMessages
acknowledgeFileIndexWithIdentifier:clientPairingID:
acknowledgeFileResultIndexWithIdentifier:clientPairingID:
acknowledgeUserInfoIndexWithIdentifier:clientPairingID:
acknowledgeUserInfoResultIndexWithIdentifier:clientPairingID:
initWithCommunicationID:connection:
clientStorageFileURL
setPrivileged:
complicationEnabled
remainingComplicationUserInfoTransfersWithComplicationEnabled:
setCounterpartCanEstablishXPCConnection:
systemObserverNotificationIdentifiersChanged
terminateApplicationDueToSwitchIfEligible
setCommunicationID:
transaction
setTransaction:
setOutstandingMessagesToSend:
_increasedPriorityTraffic
_alwaysReachable
_counterpartCanEstablishXPCConnection
_previousReachable
_privileged
_clientSupportsActiveDeviceSwitch
_counterpartCanEstablishXPCConnectionCalled
_privilegedCalled
_pendingContentDequeued
_watchAppUIActive
_watchNotificationUIActive
_watchNotificationUICreating
_watchAppActiveInBackground
_allowMessageSending
_isInUse
_currentBackground
_bundleID
_communicationID
_clientCurrentPairingID
_connection
_watchAppBundleID
_transaction
_outstandingMessagesToSend
T@"NSString",C,N,V_clientCurrentPairingID
TB,V_clientSupportsActiveDeviceSwitch
TB,V_counterpartCanEstablishXPCConnectionCalled
TB,V_privilegedCalled
TB,V_pendingContentDequeued
T@"NSObject<OS_os_transaction>",&,V_transaction
TB,V_previousReachable
TB,R
TB,V_watchAppUIActive
TB,V_watchNotificationUIActive
TB,V_watchNotificationUICreating
TB,V_watchAppActiveInBackground
TB,V_allowMessageSending
Tq,R
T@"NSMutableArray",&,V_outstandingMessagesToSend
TB,V_isInUse
TB,V_currentBackground
increasedPriorityTraffic
TB,R,GhasIncreasedPriorityTraffic,V_increasedPriorityTraffic
alwaysReachable
TB,R,GisAlwaysReachable,V_alwaysReachable
T@"NSString",R,V_bundleID
T@"NSString",C,V_communicationID
T@"WCDApplicationInfo",R,N
TB,N,V_counterpartCanEstablishXPCConnection
T@"NSXPCConnection",&,N,V_connection
T@"NSObject<WCDClientDelegate>",W,V_delegate
TB,N,V_privileged
T@"NSString",R,C,V_watchAppBundleID
setMaxConcurrentOperationCount:
setQualityOfService:
operationQueue
addOperation:
waitUntilAllOperationsAreFinished
paired
initWithDelegate:
setOperationQueue:
_operationQueue
T@"NSOperationQueue",&,V_operationQueue
TB,V_failed
dictionaryRepresentation
dictionary
numberWithUnsignedInt:
allocWithZone:
copyWithZone:
setHasVersion:
hasVersion
readFrom:
writeTo:
copyTo:
mergeFrom:
version
_version
_has
TB,N
TI,N,V_version
hasClientData
clientData
_clientData
T@"NSData",&,N,V_clientData
sharedInstance
getActivePairedDevice
getPairedDevices
containsObject:
errorWithDomain:code:userInfo:
setPaired:
valueForProperty:
UUIDString
pairedDeviceInformationForDevice:
raise:format:
onqueue_retrievedPairingStateIsPaired:pairingID:pairedDeviceInformation:pairedDevicesPairingIDs:
_paired
TB,N,V_paired
enumeratorForApplicationProxiesWithOptions:
persistentIdentifier
initWithPersistentIdentifier:
objectEnumerator
sharedConnection
counterpartApplicationisInstalledOnCompanionForWatchBundleID:error:
onqueue_retrievedInstalledAppsList:
stringWithCapacity:
appendFormat:
md5HexDigest:
_lock_applicationInfoForBundleIdentifier:type:
valueForKey:
applicationWorkspace:didUpdateRunningIndependentlyWatchApps:
applicationWorkspace:didUpdateStandaloneWatchApps:
applicationWorkspace:didUpdateiOSApplicationsContainingWatchApp:
mutableCopy
allApplications
appendUnsignedInteger:withName:
validApplications
allObjects
appendArraySection:withName:multilinePrefix:skipIfEmpty:
setUseDebugDescription:
debugDescriptionWithMultilinePrefix:
setValidApplications:
standaloneWatchApps
runningIndependentlyWatchApps
iOSApplicationsContainingWatchApp
iOSApplicationsWithWatchAppInstalled
iOSApplicationsContainingComplications
_lock
_companionAppMap
_watchAppMap
_watchExtensionMap
_validApplications
_standaloneWatchApps
_runningIndependentlyWatchApps
_iOSApplicationsContainingWatchApp
_iOSApplicationsWithWatchAppInstalled
_iOSApplicationsContainingComplications
T@"<WCDApplicationWorkspaceDelegate>",W,N,V_delegate
T@"NSSet",C,N
T@"NSSet",R,C,N
setSuccess:
setHasSuccess:
hasSuccess
success
_success
TB,N,V_success
_bundleIDForApplication:
indexKeyWithBundleID:type:pairingID:
indexCache
dataContainerURLForApplicationInfo:
initWithContainingFolder:
contentIndexWithApplication:type:pairingID:
allKeys
hasPrefix:
clearCacheForApplication:
setIndexCache:
totalCount
setTotalCount:
_indexCache
_totalCount
T@"NSMutableDictionary",&,V_indexCache
Tq,V_totalCount
privateDaemonInterface
privateClientInterface
initWithProtobufData:type:isResponse:
initWithDictionary:boostContext:
setServiceIdentifier:
setOutgoingResponseIdentifier:
idsService
accounts
anyObject
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
updateUserInfoData:error:
setTransferIdentifier:
protobufData
fileURLWithPath:
writeToURL:options:error:
preferredBundleIDForApplicationInfo:
handlePingForExtensionBundleID:
isExtensionPrivileged:completionHandler:
handlePairedSyncComplicationsStartedWithCompletionHandler:
fakeIncomingPayloadOnSubService:ofType:clientData:resource:resourceSandboxToken:completionHandler:
reconnect
handlePingForApplicationInfo:
isApplicationInfoPrivileged:completionHandler:
workQueue
setWorkQueue:
_workQueue
T@"NSObject<OS_dispatch_queue>",&,V_workQueue
setLocationManager:
initWithMachServiceName:
_setQueue:
performBlockWhenReady:
initWithService:manuallyAckMessages:
addDelegate:queue:
devices
service:connectedDevicesChanged:
allValues
valueForKeyPath:
contentsOfDirectoryAtPath:error:
stringByDeletingPathExtension
URLByAppendingPathComponent:isDirectory:
removeItemAtURL:error:
createNewClientObjectWithCommunicationID:connection:
listenerShouldAcceptNewConnection:
privateListenerShouldAcceptNewConnection:
wc_connectionCommunicationID
sendDaemonClientsInformation
invalidateConnection
updateClientWithValues:
updateAllClientsWithValues
dequeuePendingComplicationPings
handlePairedSyncComplicationsStartedWithIdentifier:
forgetClientConnectTimer
flushReadyBlocks
bs_map:
updateSubServices:
enumerateKeysAndObjectsUsingBlock:
sendInstalledAppsChangedMessage
watchConnectivityServiceAvailable
numberWithDouble:
setInformationData:
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
retryInstalledAppsUpdate
applicationInfoForCommunicationID:
insecureIDSService
sendPairedSyncForComplicationsStartedAckWithIdentifier:success:
privateClientConnectTimerFired
errorIfPreconditionsNotSatisfiedWithClientPairingID:error:
dataFromUUIDString:
WCErrorForIDSError:
duetIdentifiersForCompanionAppID:withCompletionHandler:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
cancelIdentifier:error:
moveFileToClientInbox:applicationInfo:pairingID:fileIdentifier:userInfoData:error:
notifyDuetOfPendingContentForCompanionAppID:forComplication:
checkResourceIsReachableAndReturnError:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
addContentIdentifier:
archivedDataWithRootObject:requiringSecureCoding:error:
fileTransferExistsForPairingID:identifier:applicationInfo:
persistFileTransferResult:pairingID:applicationInfo:identifier:
initWithTranferIdentifier:complicationTransferIdentifier:currentComplication:
storeComplicationUserInfoTransfer:applicationInfo:pairingID:
handleComplicationPingForCommunicationIdentifier:
moveUserInfoToClientInbox:applicationInfo:pairingID:userInfoIdentifier:
dataWithContentsOfURL:options:error:
initWithData:encoding:
userInfoExistsForPairingID:identifier:applicationInfo:
persistUserInfoTransferResult:pairingID:applicationInfo:identifier:
serviceIdentifier
idsServiceIdentifier
idsInsecureServiceIdentifier
originalDestinationDevice
pairingIDForIDSUniqueDeviceID:
notifyIfFileTransferWithCommunicationID:pairingID:sendID:success:error:
notifyIfUserInfoTransferWithCommunicationID:pairingID:sendID:success:error:
deviceForFromID:
uniqueIDOverride
type
descriptionFromPayloadSendType:
outgoingResponseIdentifier
dictionaryMessage
initWithPairingID:identifier:data:dictionaryMessage:expectsResponse:
hasIsInUse
hasCoreLocationData
coreLocationData
handleIncomingRequest:withCommunicationID:isInUse:coreLocationData:
service:context:performBlockWhenReady:
incomingResponseIdentifier
initWithPairingID:identifier:data:dictionaryMessage:
errorCode
wcErrorFromReceivedCode:
setError:
persistAppContext:applicationInfo:pairingID:
handleIncomingUserInfoTransferProto:communicationID:pairingID:sendID:
handleCounterpartDaemonDidStart
handleDaemonClientsInformation:
handlePairedSyncComplicationsStartedAck:identifier:
handleInstalledAppsChangedMessage
sendAckForMessageWithContext:
integerValue
handleIncomingFileURL:communicationID:pairingID:sendID:metadata:
handleIncomingUserInfoURL:communicationID:pairingID:sendID:
updateActiveDeviceConnectedForService:
isActiveDeviceConnected
setActiveDeviceConnected:
handleSwitchStartedByIDS
name
activeIDSDevice
initWithUUIDString:
getUUIDBytes:
dataWithBytes:length:
nsuuid
pairingIDForBTUUID:
domain
wcErrorWithCode:userInfo:
userInfo
initWithReason:payload:
sharedService
arrayWithObjects:count:
activateApplication:options:withResult:
extensionSupportsBackgroundLaunch:withCompletionHandler:
lastPathComponent
moveItemAtURL:toURL:error:
relativePath
initWithIdentifier:relativePath:
fileIdentifier
complicationUserInfoPathInDataContainer:pairingID:
initWithProtoBufFileURL:
dataUsingEncoding:
complicationTransferIdentifier
locationManager
_getClientTransientAuthorizationInfoForBundleId:error:
listener:shouldAcceptNewConnection:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
loadPersistedClients
sendDaemonDidStart
addCounterpartClientCommunicationIdentifier:
sendPairedSyncForComplicationsStartedWithIdentifier:
dequeuePendingMessagesForCommunicationID:
sendComplicationUserInfo:clientID:clientPairingID:identifier:errorHandler:
launchCompanionAppID:isInUse:coreLocationData:
acquireBackgroundAssertionForIdentifier:
cleanUpProcessAssertionForIdentifier:
handleAquiredAssertion:identifier:
createBackgroundAssertionTimerForIdentifier:
_xpcPrivateListener
_privateClient
_firstUnlockManager
_xpcListener
_communicationIdentifierToClient
_sendIdentifierToHandler
_pendingMessageRequests
_readyBlocks
_privateClientConnectTimer
_privateClientConnectTransaction
_pendingPairedSyncComplicationsStartedIdentifier
_pendingPingsForExtensionBundleIDs
_pendingExtensionBundleIDsToBePrivileged
_locationManager
_idsServiceIdentifier
_idsInsecureServiceIdentifier
_idsService
_insecureIDSService
T@"NSString",R,V_idsServiceIdentifier
T@"NSString",R,V_idsInsecureServiceIdentifier
T@"IDSService",R,V_idsService
T@"IDSService",R,V_insecureIDSService
T@"<CLManagerInterface>",&,N,V_locationManager
T@"IDSDevice",R
componentsWithString:
queryItemWithName:value:
setQueryItems:
defaultWorkspace
openURL:
showUserNotificationWithTitle:message:defaultButtonTitle:cancelButtonTitle:withCompletionBlock:
showTapToRadarAlertWithMessage:forRadarIdentifier:oncePerBuild:
handlePairedSyncForComplicationsAckWithIdentifier:success:
handlePotentialPairedSyncForComplicationsFailedWithIdentifier:error:
hasCommunicationID
T@"NSString",&,N,V_communicationID
deviceInformation
newSerialOperationQueue
weakObjectsHashTable
dictionaryWithDictionary:
resetInitialState
setUpInitialState
setUpApplicationStateMonitor
startMonitoringWatchAppUIStates
copyVoucher
handleInstalledApplicationsChanged
setQueuePriority:
notifyObserversQueued:
notifyOperationQueue
setSuspended:
releaseVoucher
setCompletionBlock:
cancelAllOperations
monitoredBundleIDs
updateInterestedBundleIDs:
handleApplicationStateChange:
setHandler:
pairedDeviceInformation
operations
observers
monitor
altAccountCache
activePairedDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
setAltAccountCache:
handlePairingChangedNotification:
addObserver:selector:name:object:
handleDeviceBecameInactiveNotification:
handleDeviceBecameActiveNotification:
handleCompanionApplicationsChanged:
onqueue_handleSwitch
handleActiveComplicationsChanged
isEqualToString:
onqueue_switchIfReady
deviceForIDSDevice:
notifyObservers:
setIsPaired:pairingID:pairedDeviceInformation:pairedDevicesPairingIDs:
notifyObserversQueued:completion:
unsignedIntegerValue
applicationStateStringForState:
numberWithLong:
numberWithInteger:
unsignedIntValue
applicationStateForApplication:
handleWatchAppUIStatesChanged:error:
startObservingWatchKitApplicationUIActiveStateInfo:interestedStateTypes:callback:
addObservedWatchKitApplicationUIActiveState:
removeObservedWatchKitApplicationUIActiveState:
pluginKitProxyForIdentifier:
dataContainerURL
applicationProxyForIdentifier:
wc_URLWithLastPathComponentAsDirectory
fetchExtensionCapabilitiesForAppBundleID:completionBlock:
addExecutionBlock:
setName:
methodForSelector:
deviceForBTDeviceID:
setWithArray:
handleRemainingComplicationUserInfoTransfersReset
saveInstalledWatchApps:
loadInstalledWatchApps
pairedDevicesPairingIDs
setObservers:
setMonitor:
setMonitoredBundleIDs:
setStandaloneWatchApps:
setRunningIndependentlyWatchApps:
setPairedDeviceInformation:
setDeviceInformation:
initialSetUpFailed
setInitialSetUpFailed:
notifyingOfInstalledAppsChange
setNotifyingOfInstalledAppsChange:
watchProcessStates
setWatchProcessStates:
watchProcessStatesQueue
setWatchProcessStatesQueue:
_appChangedVoucher
_initialSetUpComplete
_activeDeviceConnected
_isPaired
_remoteFirstUnlocked
_initialSetUpFailed
_notifyingOfInstalledAppsChange
_pairingID
_pairedDevicesPairingIDs
_applicationWorkspace
_notifyOperationQueue
_observers
_altAccountCache
_monitor
_monitoredBundleIDs
_pairedDeviceInformation
_deviceInformation
_watchProcessStates
_watchProcessStatesQueue
T@"NSOperationQueue",R,V_operationQueue
T@"NSOperationQueue",R,V_notifyOperationQueue
T@"NSHashTable",&,V_observers
T@"NSNumber",&,V_altAccountCache
T@"BKSApplicationStateMonitor",&,V_monitor
T@"NSMutableDictionary",&,V_monitoredBundleIDs
T@"NSSet",C,N,V_standaloneWatchApps
T@"NSSet",C,N,V_runningIndependentlyWatchApps
T@"NSString",C,N,V_pairedDeviceInformation
T@"NSString",&,N,V_deviceInformation
TB,N,V_initialSetUpFailed
TB,N,V_notifyingOfInstalledAppsChange
T@"NSMutableDictionary",&,N,V_watchProcessStates
T@"NSObject<OS_dispatch_queue>",&,N,V_watchProcessStatesQueue
TB,R,N,V_initialSetUpComplete
TB,N,V_activeDeviceConnected
TB,R,N,V_isPaired
T@"NSString",R,N,V_pairingID
T@"NSSet",R,N,V_pairedDevicesPairingIDs
TB,N,V_remoteFirstUnlocked
T@"WCDApplicationWorkspace",R,N,V_applicationWorkspace
setHasExpectsResponse:
hasExpectsResponse
setHasDictionaryMessage:
hasDictionaryMessage
setHasIsInUse:
_coreLocationData
_dictionaryMessage
_expectsResponse
TB,N,V_expectsResponse
TB,N,V_dictionaryMessage
TB,N,V_isInUse
T@"NSData",&,N,V_coreLocationData
setHasErrorCode:
hasErrorCode
_errorCode
TI,N,V_errorCode
setHasFirstUnlocked:
hasFirstUnlocked
_firstUnlocked
TB,N,V_firstUnlocked
hasInformationData
informationData
_informationData
T@"NSData",&,N,V_informationData
setHasAcknowledgedState:
_acknowledgedState
TB,N,V_acknowledgedState
_xpcConnection
auditToken
bundleRecordForAuditToken:error:
stringWithUTF8String:
valueForEntitlement:
wc_connectionIsiOSExtension
isActive
TB,R,GisActiveDeviceConnected
absoluteString
hasSuffix:
URLWithString:
WCDFirstUnlockManager
WCDSystemObserver
NSObject
WCDApplicationInfo
BSDescriptionProviding
Initializers
Validation
WCDAsyncOperation
WCDClient
NSXPCConnectionDelegate
WCXPCManagerDaemonProtocol
WCDRetrieveInitialStateOperation
WCDProtoFirstUnlockRequest
NSCopying
WCDProtoDaemonStartedUp
WCDProtoApplicationContext
WCDRetrievePairedListOperation
WCDRetrieveInstalledAppsListOperation
WCDRetrieveActiveComplicationsOperation
WCDApplicationWorkspace
BSDebugDescriptionProviding
WCDProtoPairedSyncComplicationsStartedAck
WCDIndexManager
WCDPrivateClient
WCXPCPrivateManagerDaemonProtocol
WatchConnectivityDaemon
NSXPCListenerDelegate
WCDClientDelegate
IDSServiceDelegate
WCDRadarUserNotification
WCDPairedSyncManager
WCDProtoComplicationPing
WCDSystemMonitor
WCDOperationDelegate
WCDApplicationWorkspaceDelegate
WCDProtoMessageRequest
WCDProtoMessageResponse
WCDProtoFirstUnlockState
WCDProtoDaemonClientsInformation
WCDProtoFirstUnlockAck
WatchConnectivity_Additions
WCDProtoInstalledAppsChanged
WCDProtoPairedSyncComplicationsStarted
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v16@0:8
v24@0:8@16
v24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
v20@0:8B16
@"NSNumber"
@24@0:8@16
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
C16@0:8
@"NSString"
@28@0:8@16B24
@32@0:8@16@24
v24@0:8@?16
v24@0:8Q16
@"<WCDOperationDelegate>"
@"NSOperationQueue"
@40@0:8@16@24@32
v36@0:8@16@24B32
@"<NSSecureCoding>"40@0:8@"NSXPCConnection"16@"NSXPCCoder"24@32
v36@0:8@"NSXPCConnection"16@"NSInvocation"24B32
v36@0:8@16B24@?28
v40@0:8@16@24@?32
v48@0:8@16@24@32@?40
v32@0:8@16@24
v36@0:8@"NSString"16B24@?<v@?@"NSError">28
v40@0:8@"WCMessage"16@"NSString"24@?<v@?BB>32
v40@0:8@"NSData"16@"NSString"24@?<v@?@"NSError">32
v48@0:8@"WCSessionFileTransfer"16@"NSData"24@"NSString"32@?<v@?@"NSError">40
v48@0:8@"WCSessionUserInfoTransfer"16@"NSURL"24@"NSString"32@?<v@?@"NSError">40
v32@0:8@"NSString"16@"NSString"24
Q20@0:8B16
v20@0:8I16
q16@0:8
@"NSXPCConnection"
@"NSObject<WCDClientDelegate>"
@"NSObject<OS_os_transaction>"
@"NSMutableArray"
@24@0:8^{_NSZone=}16
I16@0:8
{?="version"b1}
@"NSData"
@32@0:8@16Q24
@36@0:8@16Q24B32
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@"NSSet"
@"<WCDApplicationWorkspaceDelegate>"
{?="version"b1"success"b1}
v24@0:8q16
v64@0:8@16@24@32@40@48@?56
v64@0:8@"NSString"16@"NSString"24@"NSData"32@"NSURL"40@"NSData"48@?<v@?@"NSError">56
v32@0:8@16@?24
@"NSObject<OS_dispatch_queue>"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"NSObject"16
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v28@0:8@16B24
v60@0:8@16@24B32@36@44@?52
v44@0:8@16@24B32@36
v56@0:8@16@24@32@40@?48
B40@0:8@16@24@32
B52@0:8@16@24@32B40@44
B56@0:8@16@24@32@40@?48
B32@0:8@16^@24
v36@0:8@16B24@28
r*20@0:8S16
@64@0:8@16@24@32@40@48^@56
@48@0:8@16@24@32@40
@"NSXPCListener"
@"WCDPrivateClient"
@"WCDFirstUnlockManager"
@"NSObject<OS_dispatch_source>"
@"NSMutableSet"
@"<CLManagerInterface>"
@"IDSService"
v44@0:8B16@20@28@36
v44@0:8B16@"NSString"20@"NSString"28@"NSSet"36
v24@0:8@"NSSet"16
v32@0:8@"WCDApplicationWorkspace"16@"NSSet"24
I24@0:8@16
@20@0:8I16
@32@0:8:16@?24
v24@0:8:16
@"NSObject<OS_voucher>"
@"WCDApplicationWorkspace"
@"NSHashTable"
@"BKSApplicationStateMonitor"
{?="version"b1"dictionaryMessage"b1"expectsResponse"b1"isInUse"b1}
{?="errorCode"b1"version"b1"dictionaryMessage"b1}
{?="version"b1"firstUnlocked"b1}
{?="version"b1"acknowledgedState"b1}
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleExecutable</key>
<string>wcd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.wcd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>wcd</string>
<key>CFBundlePackageType</key>
<string>APPL</string>
<key>CFBundleVersion</key>
<string>198</string>
<key>CFBundleDisplayName</key>
<string>wcd</string>
<key>CFBundleShortVersionString</key>
<string>198</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>LSBackgroundOnly</key>
<true/>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.wcd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.CommCenter.fine-grained</key>
<array>
<string>data-allowed</string>
<string>data-allowed-write</string>
</array>
<key>com.apple.appconduitd.allowedSPI</key>
<array>
<string>CompanionAppIsInstalled</string>
</array>
<key>com.apple.companionappd.connect.allow</key>
<true/>
<key>com.apple.duet.activityscheduler.allow</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.gizmoappd.appmanager.allow</key>
<true/>
<key>com.apple.locationd.authorizeapplications</key>
<true/>
<key>com.apple.locationd.usage_oracle</key>
<true/>
<key>com.apple.multitasking.systemappassertions</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.watchconnectivity</string>
<string>com.apple.private.alloy.watchconnectivity.classd</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.watchconnectivity</string>
<string>com.apple.private.alloy.watchconnectivity.classd</string>
</array>
<key>com.apple.private.ids.nearby</key>
<true/>
<key>com.apple.private.ids.sub-services</key>
<array>
<string>com.apple.private.alloy.watchconnectivity</string>
</array>
<key>com.apple.runningboard.assertions.watchconnectivity</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.appconduitd.application-manager</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>wcd</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
