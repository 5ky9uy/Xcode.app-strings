@(#)PROGRAM:HeartHealthDaemon  PROJECT:Heart-1
[%{public}@] Plugin loaded
[%{public}@] Initializing
[%{public}@] Received daemon ready
[%{public}@] Received heart rate summary (%{public}@) with resting: %@, walking: %@
[Daily HR] ignoring activity cache (%{public}@) with no value for %{public}@
[Daily HR] ignoring activity cache (%{public}@) for %{public}@ because value (%@) did not change
[Daily HR] saved new %{public}@: %@
[Daily HR] error saving new %{public}@: %@
[Daily HR] error deleting %@ heart rate sample(s): %@
[Daily HR] deleted %@ previous %@ heart rate sample(s)
aggregator %{public}@ wants collection with configuration: %{public}@
feeding %.0f to catherine
heart rate collection transitioning from %{public}@ to %{public}@
heart rate variability collection transitioning from %{public}@ to %{public}@
heartbeat sequence collection transitioning from %{public}@ to %{public}@
tachycardia collection transitioning from %{public}@ to %{public}@
bradycardia collection transitioning from %{public}@ to %{public}@
heart rate collection is disabled due to privacy
updating heart rate collection type because assertion changed: %@
power saving mode is active, streaming%@ allowed, heart rate clients: %@, workout clients: %@
power saving mode preference may have changed, updating data collection type
heart rate privacy setting changed to %s
PowerLog %@: %@
[%{public}@] was created
[%{public}@] stop observing heart rate events
[%{public}@] start observing heart rate events
[%{public}@] Detected sample inserted with local device source
[%{public}@] Detected sample inserted with non-local device source
[%{public}@] not showing expired notification for event: %@
[%{public}@] showing notification for event: %@, expiration date: %{public}@
[%{public}@] trying to show notification for unsupported event: %@
[%{public}@] error archiving event: %{public}@
[%{public}@] error requesting notification: %{public}@)
[%{public}@] Registered %@ UI triggers
[%{public}@] Deregistered %@ UI triggers
[%{public}@] Received UI Trigger for name %@
[%{public}@] faking %{public}@ notification, withData: %@
[%{public}@] faking - saved event sample: %@
[%{public}@] faking - failed to save event with error: %{public}@
[%{public}@] faking - saved heart rate sample: %@
[%{public}@] faking - failed to associate heart rate with error: %{public}@
[%{public}@] faking - failed to save heart rate with error: %{public}@
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
profile
T@"HDProfile",R,W,N,V_profile
healthLiteDataCollector
T@"HDHRHealthLiteDataCollector",&,N,V_healthLiteDataCollector
dailyHeartRateManager
T@"HDHRDailyHeartRateManager",&,N,V_dailyHeartRateManager
heartRateNotificationManager
T@"HDHRNotificationManager",&,N,V_heartRateNotificationManager
v8@?0
healthlite_event
bundleid
action
client_connected
client_disconnected
start_passive
start_active
stop_updates
HDHRHealthLiteDataCollector.m
Invalid parameter not satisfying: %@
profile != nil
v12@?0i8
NanoLifestyleSessionTrackerAppPreferencesChangedNotification
HDHRHealthLiteDataCollector
 not
enabled
disabled
Heart enabled in privacy: %@
Power saving move enabled: %@
Heart Rate Collection: %@
Heart Rate Variability Collection: %@
Heartbeat Sequence Collection: %@
Tachycardia Collection: %@
Bradycardia Collection: %@
com.apple.nanolifestyle.sessiontrackerapp
EnablePowerSavingMode
com.apple.HeartRate
Tachycardia
Bradycardia
HeartRateEventData
com.apple.HeartRate.Tachycardia
com.apple.HeartRate.TachycardiaWithData
com.apple.HeartRate.Bradycardia
com.apple.HeartRate.BradycardiaWithData
HEART_RATE_TACHYCARDIA_TITLE
Localizable
HEART_RATE_TACHYCARDIA_MESSAGE_FORMAT
HEART_RATE_BRADYCARDIA_TITLE
HEART_RATE_BRADYCARDIA_MESSAGE_FORMAT
v16@?0@"NSError"8
zPLR
zPLR
HDHeartRateProfileExtension
HDProfileExtension
NSObject
HDFeatureAvailabilityExtensionProvider
HDHRDailyHeartRateManager
HDHealthDaemonReadyObserver
HDActivityCacheManagerObserver
HDHRHealthLiteDataCollector
HDDiagnosticObject
HDDataCollector
HDHeartRateDataCollector
HDHRNotificationManager
HDDataObserver
init
sharedBehavior
isAppleWatch
initWithProfile:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
listenerEndpointForClient:error:
featureAvailabilityExtensionForFeatureIdentifier:client:
profile
healthLiteDataCollector
setHealthLiteDataCollector:
dailyHeartRateManager
setDailyHeartRateManager:
heartRateNotificationManager
setHeartRateNotificationManager:
.cxx_destruct
_featureAvailabilityManager
_profile
_healthLiteDataCollector
_dailyHeartRateManager
_heartRateNotificationManager
healthDaemon
registerForDaemonReady:
dictionary
removeActivityCacheObserver:
dealloc
activityCacheManager
addActivityCacheObserver:
activityCacheIndex
numberWithLongLong:
restingHeartRate
walkingAverageHeartRate
heartRateDateInterval
_queue_replaceHeartRate:ofType:forCacheIndex:dateInterval:heartRateByCacheIndex:
currentActivityCache
cacheIndex
yesterdayActivityCache
_queue_cleanupValuesForTodayCacheIndex:yesterdayCacheIndex:
identifier
_isZero
objectForKeyedSubscript:
dictionaryWithObjects:forKeys:count:
startDate
endDate
quantitySampleWithType:quantity:startDate:endDate:metadata:
dataManager
arrayWithObjects:count:
dataProvenanceManager
defaultLocalDataProvenance
insertDataObjects:withProvenance:creationDate:error:
setObject:forKeyedSubscript:
UUID
_queue_deleteHeartRateOfType:forCacheIndex:replacementUUID:
metadataManager
setWithObject:
predicateWithMetadataKey:allowedValues:
negatedPredicate:
predicateMatchingAllPredicates:
deleteDataObjectsOfClass:predicate:limit:deletedSampleCount:notifyObservers:generateDeletedObjects:recursiveDeleteAuthorizationBlock:error:
numberWithUnsignedInteger:
array
allKeys
countByEnumeratingWithState:objects:count:
isEqualToNumber:
addObject:
removeObjectsForKeys:
daemonReady:
activityCacheManager:changedTodayActivityCache:
activityCacheManager:changedYesterdayActivityCache:
activityCacheManager:changedHeartRateSummary:isToday:
_activityCacheManager
_queue
_restingHeartRateByActivityCacheIndex
_walkingAverageHeartRateByActivityCacheIndex
quantityTypeForIdentifier:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
sharedDiagnosticManager
UTF8String
_queue_privacyPreferencesDidChange
_queue_powerSavingModeDidChange
_startObservingCurrentWorkoutChanges
_startObservingAssertionManagerChanges
unregisterDataCollector:
removeObject:
defaultCenter
removeObserver:
dataCollectionManager
aggregatorForType:
registerDataCollector:state:
heartbeatSequenceType
tachycardiaType
bradycardiaType
_queue_createHealthLiteManager
_queue_updateHeartRateCollectionType
_queue_updateHeartRateVariabilityCollectionType
_queue_updateHeartbeatSequenceCollectionType
_queue_updateTachycardiaCollectionType
_queue_updateBradycardiaCollectionType
localDevice
_localDeviceSource
heartRate
_countPerMinuteUnit
doubleValueForUnit:
daemon
behavior
isAppleInternalInstall
feedCatherine:confidence:
collectionType
_queue_isPowerSavingModePreventingStreaming
setCollectionType:
dataCollector:didChangeState:
_workoutManagerStateDidChange
addObserver:selector:name:object:
_assertionManagerStateChanged:
setWithObjects:
userInfo
objectForKey:
containsObject:
workoutManager
isPowerSavingSupportedForCurrentActivity
sessionAssertionManager
ownerIdentifiersForAssertionIdentifier:
mutableCopy
minusSet:
count
_queue_updateAllCollectionTypes
stringWithFormat:
diagnosticDescription
beginCollectionForDataAggregator:lastPersistedSensorDatum:
dataAggregator:wantsCollectionWithConfiguration:
sourceForDataAggregator:
identifierForDataAggregator:
registerWithAggregators
preferredAggregationIntervalForAggregator:
sensorDatumClassForAggregator:
canResumeCollectionFromLastSensorDatum
dataAggregator:didPersistDatums:success:error:
dataAggregator:requestsCollectionThroughDate:completion:
dataCollector:didCollectHeartRate:device:source:
deviceForDataAggregator:
_registerPowerLogEvent:
_setCatherineFeeder:
_heartRateEnabledInPrivacy
_privacyPreferencesNotificationToken
_powerSavingModeNotificationToken
_heartRateAggregator
_heartRateVariabilityDataAggregator
_heartbeatSequenceAggregator
_tachycardiaAggregator
_bradycardiaAggregator
_heartRateCollectionConfiguration
_heartRateVariabilityCollectionConfiguration
_heartbeatSequenceCollectionConfiguration
_tachycardiaCollectionConfiguration
_bradycardiaCollectionConfiguration
_heartRateCollectionState
_heartRateVariabilityCollectionState
_heartbeatSequenceCollectionState
_tachycardiaCollectionState
_bradycardiaCollectionState
_catherineFeeder
_localDeviceEntity
setSourceType:
setPriority:
standardUserDefaults
persistentDomainForName:
boolValue
_subscribeToFakingNotifications
_registerUITriggers
_unsubscribeToFakingNotifications
_deregisterUITriggers
removeObserver:forDataType:
addObserver:forDataType:
sourceRevision
source
_isLocalDevice
_queue_showNotificationForHeartEvent:
initWithBundleIdentifier:
currentCalendar
hk_dateByAddingDays:toDate:
date
hk_isAfterDate:
setDateStyle:
setTimeStyle:
stringFromDate:
metadata
_beatsPerMinute
numberWithInteger:
localizedStringFromNumber:numberStyle:
categoryType
bundleForClass:
localizedStringForKey:value:table:
setTitle:
setBody:
setCategoryIdentifier:
setThreadIdentifier:
soundWithAlertType:
setAlertTopic:
setSound:
setDate:
setExpirationDate:
archivedDataWithRootObject:requiringSecureCoding:error:
setUserInfo:
UUIDString
requestWithIdentifier:content:trigger:
_userNotificationCenter
addNotificationRequest:withCompletionHandler:
sharedInstance
addUIProvider:forUITriggerName:englishUsage:
removeUIProvider:withUITriggerName:
numberWithBool:
dateByAddingTimeInterval:
_quantityWithBeatsPerMinute:
categorySampleWithType:value:startDate:endDate:metadata:
objectAtIndexedSubscript:
doubleValue
quantitySampleWithType:quantity:startDate:endDate:
associateObjectUUIDs:objectUUID:error:
_subscribeToFakingNotification:type:withData:
_queue_fakeNotificationWithEventType:withData:
numberWithInt:
intValue
samplesAdded:anchor:
didAddSamplesOfTypes:anchor:
samplesJournaled:type:
samplesOfTypesWereRemoved:anchor:
requestUITriggerWithRegistration:UITriggerName:withDictionary:withReason:withCompletion:
_fakingNotifyTokens
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16^@24
@"NSXPCListenerEndpoint"32@0:8@"HDXPCClient"16^@24
@32@0:8@16@24
@"<HDFeatureAvailabilityExtension>"32@0:8@"NSString"16@"HDHealthStoreClient"24
@24@0:8@16
v24@0:8@16
v16@0:8
@"HDFeatureAvailabilityManager"
@"HDProfile"
@"HDHRHealthLiteDataCollector"
@"HDHRDailyHeartRateManager"
@"HDHRNotificationManager"
v24@0:8@"<HDHealthDaemon>"16
v32@0:8@16@24
v36@0:8@16@24B32
v32@0:8@"HDActivityCacheManager"16@"HKActivityCache"24
v36@0:8@"HDActivityCacheManager"16@"HKHeartRateSummary"24B32
v56@0:8@16@24q32@40@48
v40@0:8@16q24@32
v32@0:8q16q24
@"HDActivityCacheManager"
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
d24@0:8@16
#24@0:8@16
v44@0:8@16@24B32@36
v40@0:8@16@24@?32
v32@0:8@"HDDataAggregator"16@"<HDCollectedSensorDatum>"24
v32@0:8@"HDDataAggregator"16@"HDDataCollectorConfiguration"24
@"HKSource"24@0:8@"HDDataAggregator"16
@"NSString"24@0:8@"HDDataAggregator"16
d24@0:8@"HDDataAggregator"16
#24@0:8@"HDDataAggregator"16
v44@0:8@"HDDataAggregator"16@"NSArray"24B32@"NSError"36
v40@0:8@"HDDataAggregator"16@"NSDate"24@?<v@?B@"NSError">32
v48@0:8@16@24@32@40
v48@0:8@"<HDDataCollector>"16@"HDHeartRateSensorDatum"24@"HKDevice"32@"HKSource"40
@"HDHeartRateDataAggregator"
@"HDHeartRateVariabilityDataAggregator"
@"HDHeartbeatSequenceDataAggregator"
@"HDTachycardiaDataAggregator"
@"HDBradycardiaDataAggregator"
@"HDDataCollectorConfiguration"
@"HDDataCollectorState"
@"CMCatherineFeeder"
@"HDDeviceEntity"
v32@0:8@"NSArray"16@"NSNumber"24
v32@0:8@"NSSet"16@"NSNumber"24
v32@0:8@"NSArray"16@"HKSampleType"24
v56@0:8@16@24@32q40@?48
v28@0:8@16B24
@"NSMutableArray"
