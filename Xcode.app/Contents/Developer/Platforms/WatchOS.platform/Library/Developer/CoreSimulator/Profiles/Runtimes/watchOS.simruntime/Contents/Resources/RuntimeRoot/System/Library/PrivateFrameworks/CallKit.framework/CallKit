com.apple.callkit.call-directory
com.apple.callkit.calldirectorynsextensionmanager
v8@?0
v24@?0@"NSArray"8@"NSError"16
baseExtensionMatchingAttributes
T@"NSDictionary",R,N
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
delegate
T@"<CXCallDirectoryNSExtensionManagerDelegate>",W,N,V_delegate
delegateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_delegateQueue
extensionMatchingContext
T@,&,N,V_extensionMatchingContext
%s: parameter '%@' cannot be nil
-[CXHandle initWithType:value:]
value
<%@ %p type=%@ value=%@>
Generic
PhoneNumber
EmailAddress
Unknown(%ld)
supportsSecureCoding
TB,R
type
Tq,N,V_type
T@"NSString",C,N,V_value
 trashed=%d
trashed
TB,N,GisTrashed,V_trashed
provider
T@"CXInProcessProvider",&,N,V_provider
 handoffContext=%@
 dateConnected=%@
-[CXPullCallAction fulfillWithDateConnected:]
dateConnected
T@"NSDate",C,N,V_dateConnected
handoffContext
T@"CXHandoffContext",&,N,V_handoffContext
<%@ %p
 UUID=%@
 state=%ld
 commitDate=%@
 failureReason=%ld
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
timeout
Td,R,N
UUID
T@"NSUUID",C,N,V_UUID
state
Tq,N,V_state
failureReason
Tq,N,V_failureReason
customDescription
T@"NSMutableString",R,C,N
commitDate
T@"NSDate",&,N,V_commitDate
T@"<CXActionDelegate>",W,N,V_delegate
complete
TB,R,N,GisComplete
timeoutDate
T@"NSDate",R,N
 localLandscapeAspectRatio=%@
 localPortraitAspectRatio=%@
 downgradeToAudio=%d
-[CXAnswerCallAction fulfillWithDateConnected:]
downgradeToAudio
TB,N,V_downgradeToAudio
com.apple.CallKit.call-directory
modify-any-extension
query-extension-priorities
modify-extension-priorities
query-identification-entries
synchronize-extensions
compact-store
com.apple.callkit.calldirectoryhost
v24@?0@"NSExtension"8@"NSError"16
v16@?0@"NSExtension"8
Requestor does not contain entitlement capability '%@' in call directory host entitlement capabilities list
T@"<CXCallDirectoryHostDelegate>",W,N,V_delegate
00000000-0000-0000-0000-000000000000
Unknown Service
-[CXSenderIdentity initWithUUID:account:]
account
<%@ %p 
%@=%@
T@"NSUUID",R,N,V_UUID
T@"CXAccount",R,N,V_account
handle
T@"CXHandle",R,N
localizedName
T@"NSString",R,C,N
localizedShortName
T@"NSString",R,C,N,V_localizedShortName
 code=%@
 ttyType=%ld
 senderIdentityUUID=%@
code
T@"NSString",C,N,V_code
ttyType
Tq,N,V_ttyType
senderIdentityUUID
T@"NSUUID",&,N,V_senderIdentityUUID
 isOnHold=%d
onHold
TB,N,GisOnHold,V_onHold
T@"<CXProviderHostProtocol>",W,N,V_delegate
com.apple.calls.callkit
Default
v12@?0i8
T@"<CXCallControllerHostDelegate>",W,N,V_delegate
xpcListener
T@"NSXPCListener",&,N,V_xpcListener
callUUIDToCallMap
T@"NSMutableDictionary",&,N,V_callUUIDToCallMap
callUUIDToPublicCallUUIDMap
T@"NSMutableDictionary",&,N,V_callUUIDToPublicCallUUIDMap
connections
T@"NSMutableSet",&,N,V_connections
clientsShouldConnectToken
Ti,R,N,V_clientsShouldConnectToken
-[CXVoicemailUpdate initWithVoicemailUUID:]
voicemailUUID
 voicemailUUID=%@
 sender=%@
 dateReceived=%@
 audioFileURL=%@
 played=%d
sender
dateReceived
audioFileURL
played
hasSet
T{CXVoicemailUpdateHasSet=b1b1b1b1b1},N,V_hasSet
T@"NSUUID",R,C,N,V_voicemailUUID
T@"CXHandle",C,N,V_sender
T@"NSDate",C,N,V_dateReceived
T@"NSURL",C,N,V_audioFileURL
TB,N,GisPlayed,V_played
com.apple.callkit.callprovider
You must override %@ in a subclass
mutablePendingTransactions
T@"NSMutableArray",R,N,V_mutablePendingTransactions
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"<CXAbstractProviderDelegate>",W,N,V_delegate
hostProtocolDelegate
T@"<CXAbstractProviderHostProtocol>",R,N
pendingTransactions
T@"NSArray",R,C,N
<%@ %p UUID=%@ isComplete=%d actions=%@>
mutableActions
T@"NSMutableOrderedSet",&,N,V_mutableActions
actions
remoteObjectProxy
T@,R,&
v24@?0@"<NSCopying>"8@"NSArray"16
v24@?0@"<NSCopying>"8@"NSError"16
v16@?0@"<NSCopying>"8
extension
T@"NSExtension",&,N,V_extension
requestIdentifier
T@"<NSCopying>",C,N,V_requestIdentifier
extensionContext
T@"CXProviderExtensionHostContext",&,N,V_extensionContext
private-provider-api
connection
T@"NSXPCConnection",&,N,V_connection
applicationIdentifier
T@"NSString",C,N,V_applicationIdentifier
bundleIdentifier
T@"NSString",&,N,V_bundleIdentifier
bundleURL
T@"NSURL",&,N,V_bundleURL
capabilities
T@"NSSet",C,N,V_capabilities
hasVoIPBackgroundMode
TB,N,V_hasVoIPBackgroundMode
T@"<CXCallSourceManagerDelegate>",W,N,V_delegate
mutableCallSources
T@"NSMutableSet",&,N,V_mutableCallSources
uncommittedTransactionGroup
T@"CXTransactionGroup",&,N,V_uncommittedTransactionGroup
transactionManager
T@"CXTransactionManager",&,N,V_transactionManager
callSources
T@"NSArray",R,N
<%@ %p count=%lu phoneNumberData.length=%lu labelData.length=%lu>
phoneNumberEntryRange.location + phoneNumberEntryRange.length <= _phoneNumberData.length
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CallKit_Sim/CallKit-399.4/CallKit/CXCallDirectoryLabeledPhoneNumberEntryData.m
labelLengthRange.location + labelLengthRange.length <= _labelData.length
phoneNumberEntry.labelDataOffset + sizeof(labelLength) + labelLength <= _labelData.length
count
TQ,R,N
phoneNumberData
T@"NSData",&,N,V_phoneNumberData
labelData
T@"NSData",&,N,V_labelData
mutablePhoneNumberData
T@"NSMutableData",&,N,V_mutablePhoneNumberData
mutableLabelData
T@"NSMutableData",&,N,V_mutableLabelData
labelToLabelDataOffset
T@"NSMutableDictionary",&,N,V_labelToLabelDataOffset
com.apple.callkit.calldirectorystore.extensionschanged
<%@ %p database=%@>
/var/mobile/Library
CallDirectory
CallDirectory.db
CallDirectoryTemplate.db
SELECT MAX(version) FROM SchemaVersion
v16@?0@"NSArray"8
SELECT EXISTS (SELECT 1 FROM Extension WHERE bundle_id = ?)
SELECT id, bundle_id, priority, state, state_last_modified FROM Extension WHERE bundle_id = ?
INSERT INTO Extension (bundle_id, priority, state_last_modified) VALUES (?, (SELECT IFNULL(MAX(priority), 0) + 1 FROM Extension), ((julianday('now') - 2440587.5)*86400.0))
INSERT INTO Extension (bundle_id, priority, state_last_modified) VALUES (?, ?, ((julianday('now') - 2440587.5)*86400.0))
DELETE FROM Extension WHERE (bundle_id = ?)
UPDATE Extension SET state = ?, state_last_modified = ((julianday('now') - 2440587.5)*86400.0) WHERE (bundle_id = ?)
UPDATE Extension SET state = ?, state_last_modified = ((julianday('now') - 2440587.5)*86400.0) WHERE (id = ?)
UPDATE Extension SET state_last_modified = ? WHERE (id = ?)
UPDATE Extension SET state = ?, state_last_modified = ((julianday('now') - 2440587.5)*86400.0)
DELETE FROM PhoneNumber WHERE id NOT IN (SELECT DISTINCT phone_number_id FROM PhoneNumberIdentificationEntry UNION SELECT DISTINCT phone_number_id FROM PhoneNumberBlockingEntry)
DELETE FROM Label WHERE id NOT IN (SELECT DISTINCT label_id FROM PhoneNumberIdentificationEntry)
SELECT id, bundle_id, priority, state, state_last_modified FROM Extension ORDER BY priority
SELECT bundle_id FROM Extension ORDER BY priority
bundle_id
priority
UPDATE Extension SET priority = %@
B24@?0@?<B@?^@>8^@16
CASE %@ 
WHEN ? THEN ? 
ELSE %@ END
(?, (SELECT id FROM PhoneNumber WHERE (number = ?)))
INSERT INTO PhoneNumberBlockingEntry (extension_id, phone_number_id) VALUES %@
B24@?0@"CXDatabaseStatement"8^@16
DELETE FROM PhoneNumberBlockingEntry WHERE extension_id = ? AND phone_number_id IN (SELECT id FROM PhoneNumber WHERE number IN %@)
DELETE FROM PhoneNumberBlockingEntry WHERE extension_id = ?
INSERT INTO PhoneNumberIdentificationEntry (extension_id, phone_number_id, label_id) VALUES (?, ?, ?)
INSERT OR IGNORE INTO PhoneNumber (number) VALUES (?)
SELECT id FROM PhoneNumber WHERE (number = ?)
SELECT id FROM Extension WHERE (bundle_id = ?)
SELECT id FROM Label WHERE (localized_label = ?)
INSERT INTO Label (localized_label) VALUES (?)
INSERT OR IGNORE INTO Label (localized_label) VALUES %@
(?, (SELECT id FROM PhoneNumber WHERE (number = ?)), (SELECT id FROM Label WHERE (localized_label = ?)))
INSERT INTO PhoneNumberIdentificationEntry (extension_id, phone_number_id, label_id) VALUES %@
INSERT OR IGNORE INTO PhoneNumber (number) VALUES %@
DELETE FROM PhoneNumberIdentificationEntry WHERE extension_id = ? AND phone_number_id IN (SELECT id FROM PhoneNumber WHERE number IN %@)
DELETE FROM PhoneNumberIdentificationEntry WHERE extension_id = ?
SELECT EXISTS(SELECT 1 FROM PhoneNumberBlockingEntry INNER JOIN PhoneNumber ON (PhoneNumber.id = PhoneNumberBlockingEntry.phone_number_id) WHERE (PhoneNumber.number IN %@) LIMIT 1)
SELECT EXISTS(SELECT 1 FROM PhoneNumberBlockingEntry INNER JOIN PhoneNumber ON (PhoneNumber.id = PhoneNumberBlockingEntry.phone_number_id) INNER JOIN Extension ON (Extension.id = PhoneNumberBlockingEntry.extension_id) WHERE (Extension.state = %ld AND PhoneNumber.number IN %@) LIMIT 1)
SELECT Extension.bundle_id, Label.localized_label FROM Label INNER JOIN PhoneNumberIdentificationEntry ON (Label.id = PhoneNumberIdentificationEntry.label_id) INNER JOIN PhoneNumber ON (PhoneNumber.id = PhoneNumberIdentificationEntry.phone_number_id) INNER JOIN Extension ON (Extension.id = PhoneNumberIdentificationEntry.extension_id) WHERE (PhoneNumber.number = ?) ORDER BY Extension.priority LIMIT 1
SELECT Extension.bundle_id, Label.localized_label, PhoneNumber.number FROM Label INNER JOIN PhoneNumberIdentificationEntry ON (Label.id = PhoneNumberIdentificationEntry.label_id) INNER JOIN PhoneNumber ON (PhoneNumber.id = PhoneNumberIdentificationEntry.phone_number_id) INNER JOIN Extension ON (Extension.id = PhoneNumberIdentificationEntry.extension_id) WHERE (PhoneNumber.number IN %@) GROUP BY PhoneNumber.number HAVING MIN(Extension.priority)
SELECT Extension.bundle_id, Label.localized_label FROM Label INNER JOIN PhoneNumberIdentificationEntry ON (Label.id = PhoneNumberIdentificationEntry.label_id) INNER JOIN PhoneNumber ON (PhoneNumber.id = PhoneNumberIdentificationEntry.phone_number_id) INNER JOIN Extension ON (Extension.id = PhoneNumberIdentificationEntry.extension_id) WHERE (Extension.state = %ld AND PhoneNumber.number = ?) ORDER BY Extension.priority LIMIT 1
SELECT Extension.bundle_id, Label.localized_label, PhoneNumber.number FROM Label INNER JOIN PhoneNumberIdentificationEntry ON (Label.id = PhoneNumberIdentificationEntry.label_id) INNER JOIN PhoneNumber ON (PhoneNumber.id = PhoneNumberIdentificationEntry.phone_number_id) INNER JOIN Extension ON (Extension.id = PhoneNumberIdentificationEntry.extension_id) WHERE (Extension.state = %ld AND PhoneNumber.number IN %@) GROUP BY PhoneNumber.number HAVING MIN(Extension.priority)
v16@?0@"CXCallDirectoryStoreIdentificationEntry"8
v24@?0@"NSString"8@"CXCallDirectoryStoreIdentificationEntry"16
(%@)
databaseTemplateURL
T@"NSURL",R,N
database
T@"CXDatabase",&,N,V_database
temporary
TB,N,GisTemporary,V_temporary
lastAddBlockingEntriesCount
Tq,N,V_lastAddBlockingEntriesCount
addBlockingEntriesInsertPhoneNumberBlockingEntrySQL
T@"NSString",C,N,V_addBlockingEntriesInsertPhoneNumberBlockingEntrySQL
lastRemoveBlockingEntriesCount
Tq,N,V_lastRemoveBlockingEntriesCount
removeBlockingEntriesSQL
T@"NSString",C,N,V_removeBlockingEntriesSQL
lastAddIdentificationEntriesCount
Tq,N,V_lastAddIdentificationEntriesCount
addIdentificationEntriesInsertLabelsSQL
T@"NSString",C,N,V_addIdentificationEntriesInsertLabelsSQL
addIdentificationEntriesInsertPhoneNumberIdentificationEntrySQL
T@"NSString",C,N,V_addIdentificationEntriesInsertPhoneNumberIdentificationEntrySQL
lastAddPhoneNumbersCount
Tq,N,V_lastAddPhoneNumbersCount
addPhoneNumbersSQL
T@"NSString",C,N,V_addPhoneNumbersSQL
lastRemoveIdentificationEntriesCount
Tq,N,V_lastRemoveIdentificationEntriesCount
removeIdentificationEntriesSQL
T@"NSString",C,N,V_removeIdentificationEntriesSQL
schemaVersion
Tq,R,N
corrupt
TB,R,N,GisCorrupt
com.apple.callkit.calldirectoryextensionhostcontext
v16@?0@"NSError"8
T@"<CXCallDirectoryProviderHostProtocol>",W,N,V_delegate
-[CXProviderExtensionVendorContext registerWithConfiguration:]
-[CXProviderExtensionVendorContext reportNewIncomingCallWithUUID:update:reply:]
-[CXProviderExtensionVendorContext reportCallWithUUID:updated:]
-[CXProviderExtensionVendorContext reportOutgoingCallWithUUID:sentInvitationAtDate:]
-[CXProviderExtensionVendorContext reportOutgoingCallWithUUID:startedConnectingAtDate:]
-[CXProviderExtensionVendorContext reportOutgoingCallWithUUID:connectedAtDate:]
-[CXProviderExtensionVendorContext reportCallWithUUID:endedAtDate:privateReason:failureContext:]
-[CXProviderExtensionVendorContext reportAudioFinishedForCallWithUUID:]
-[CXProviderExtensionVendorContext reportCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:]
-[CXProviderExtensionVendorContext requestTransaction:reply:]
-[CXProviderExtensionVendorContext actionCompleted:]
-[CXProviderExtensionVendorContext commitTransaction:]
-[CXProviderExtensionVendorContext handleActionTimeout:]
-[CXProviderExtensionVendorContext handleAudioSessionActivationStateChangedTo:]
T@"<CXProviderExtensionVendorContextDelegate>",W,N,V_delegate
@"CXCallDirectoryStore"16@?0^@8
@"<CXCallDirectoryStoreMigratorExtension>"24@?0@"NSString"8^@16
Extension
ALTER TABLE Extension ADD COLUMN state INTEGER NOT NULL DEFAULT %ld
UPDATE Extension SET state = ? WHERE (id = ?)
SELECT id, bundle_id FROM Extension
UPDATE SchemaVersion SET version = ?
state_last_modified
ALTER TABLE Extension ADD COLUMN state_last_modified REAL NOT NULL DEFAULT 0.0
UPDATE Extension SET state_last_modified = ((julianday('now') - 2440587.5)*86400.0)
CREATE INDEX idx_PhoneNumberIdentificationEntry_FK_Label ON PhoneNumberIdentificationEntry(label_id)
store
T@"CXCallDirectoryStore",&,N,V_store
storeCreationBlock
T@?,C,N,V_storeCreationBlock
retrieveExtensionBlock
T@?,C,N,V_retrieveExtensionBlock
startingSchemaVersion
Tq,N,V_startingSchemaVersion
endingSchemaVersion
Tq,N,V_endingSchemaVersion
requiresExtensionDisablement
TB,N,V_requiresExtensionDisablement
requiresExtensionSynchronization
TB,N,V_requiresExtensionSynchronization
enabledViaPlugInKit
TB,R,N,GisEnabledViaPlugInKit
voip
cx_hasVoIPBackgroundMode
TB,R,N
 callUUIDToGroupWith=%@
callUUIDToGroupWith
T@"NSUUID",C,N,V_callUUIDToGroupWith
-[CXPlayDTMFCallAction initWithCallUUID:digits:type:]
digits
 digits=%@
 type=%ld
T@"NSString",C,N,V_digits
com.apple.callkit.voicemailobserverxpcclient
voicemailUUIDToVoicemailMap
T@"NSDictionary",R,C,N
mutableVoicemailUUIDToVoicemailMap
T@"NSMutableDictionary",R,N,V_mutableVoicemailUUIDToVoicemailMap
delegates
T@"NSHashTable",R,N,V_delegates
notifyToken
Ti,R,N,V_notifyToken
remoteHandleType
remoteHandleValue
 handoffIdentifier=%@
 isOutgoing=%d
 remoteHandle=%@
 context=%@
handoffIdentifier
T@"NSString",R,C,N,V_handoffIdentifier
outgoing
TB,N,GisOutgoing,V_outgoing
remoteHandle
T@"CXHandle",C,N,V_remoteHandle
context
T@"NSDictionary",C,N,V_context
dictionaryRepresentation
T@"CXProviderExtensionVendorContext",&,N,V_extensionContext
T@"<CXVoicemailObserverDelegate>",W,N,V_delegate
dataSource
T@"<CXVoicemailObserverDataSource>",R,N,V_dataSource
voicemails
com.apple.callkit.callsourcehost
com.apple.callkit.callsourcehost.started
cx_providerHostInterface
T@"NSXPCInterface",R,N
cx_providerVendorInterface
com.apple.callkit.callcontrollerhost
com.apple.callkit.callcontroller.shouldconnect
cx_callControllerHostInterface
cx_callControllerVendorInterface
cx_voicemailProviderHostInterface
cx_voicemailProviderVendorInterface
com.apple.callkit.voicemailcontrollerhost
com.apple.callkit.voicemailcontrollerhost.started
cx_voicemailControllerHostInterface
cx_voicemailControllerVendorInterface
com.apple.CallKit.CallDirectory
com.apple.CallKit.CallDirectoryMaintenance
cx_callDirectoryManagerDefaultHostInterface
cx_callDirectoryManagerMaintenanceHostInterface
cx_callDirectoryProviderHostInterface
cx_callDirectoryProviderVendorInterface
com.apple.callkit.callsource
<%@ %p identifier=%@ isConnected=%d processIdentifier=%d isPermittedToUsePublicAPI=%d isPermittedToUsePrivateAPI=%d>
-[CXCallSource registerWithConfiguration:]
-[CXCallSource reportNewIncomingCallWithUUID:update:reply:]
reply
update
-[CXCallSource reportCallWithUUID:updated:reply:]
-[CXCallSource reportCallWithUUID:endedAtDate:privateReason:failureContext:reply:]
-[CXCallSource reportOutgoingCallWithUUID:sentInvitationAtDate:reply:]
-[CXCallSource reportOutgoingCallWithUUID:startedConnectingAtDate:reply:]
-[CXCallSource reportOutgoingCallWithUUID:connectedAtDate:reply:]
-[CXCallSource reportAudioFinishedForCallWithUUID:reply:]
-[CXCallSource reportCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:reply:]
crossDeviceIdentifier
-[CXCallSource requestTransaction:reply:]
transaction
-[CXCallSource actionCompleted:reply:]
action
-[CXCallSource commitTransaction:]_block_invoke
-[CXCallSource handleActionTimeout:]_block_invoke
-[CXCallSource handleAudioSessionActivationStateChangedTo:]_block_invoke
vendorProtocolDelegate
T@"<CXProviderVendorProtocol>",R,N
connected
TB,N,GisConnected,V_connected
T@"<CXCallSourceDelegate>",W,N,V_delegate
identifier
T@"NSURL",R,C,N
processIdentifier
Ti,R,N
permittedToUsePublicAPI
TB,R,N,GisPermittedToUsePublicAPI
permittedToUsePrivateAPI
TB,R,N,GisPermittedToUsePrivateAPI
com.apple.callkit.voicemailcontroller.completion
-[CXVoicemailController initWithQueue:]
completionQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_completionQueue
voicemailObserver
T@"CXVoicemailObserver",R,N,V_voicemailObserver
 groupUUID=%@
 remoteMembers=%@
 callerID=%@
 videoEnabled=%d
 uplinkMuted=%d
 shouldSuppressInCallUI=%d
 dateStarted=%@
 wantsStagingArea=%d
 upgrade=%d
 upgradeSessionUUID=%@
 messagesGroupUUID=%@
 messagesGroupName=%@
-[CXJoinCallAction fulfillWithDateStarted:]
dateStarted
groupUUID
T@"NSUUID",C,N,V_groupUUID
T@"NSDate",C,N,V_dateStarted
remoteMembers
T@"NSSet",C,N,V_remoteMembers
callerID
T@"CXHandle",C,N,V_callerID
videoEnabled
TB,N,GisVideoEnabled,V_videoEnabled
uplinkMuted
TB,N,GisUplinkMuted,V_uplinkMuted
shouldSuppressInCallUI
TB,N,V_shouldSuppressInCallUI
wantsStagingArea
TB,N,V_wantsStagingArea
upgrade
TB,N,GisUpgrade,V_upgrade
upgradeSessionUUID
T@"NSUUID",C,N,V_upgradeSessionUUID
messagesGroupUUID
T@"NSUUID",C,N,V_messagesGroupUUID
messagesGroupName
T@"NSString",C,N,V_messagesGroupName
-[CXVoicemailAction initWithVoicemailUUID:]
T@"NSUUID",C,N,V_voicemailUUID
<%@ %p outstandingTransactionGroups=%@>
outstandingTransactionGroups
T@"NSMutableSet",&,N,V_outstandingTransactionGroups
T@"<CXTransactionManagerDelegate>",W,N,V_delegate
com.apple.callkit.database.sqlite
sqlite3_open_v2 for filename %s readOnly %d returned %d
<%@ %p URL=%@>
sqlite3_close for %@ returned %d
PRAGMA foreign_keys = ON
VACUUM
sqlite3_busy_timeout for %@ with ms=%d returned %d
BEGIN TRANSACTION
COMMIT TRANSACTION
ROLLBACK TRANSACTION
PRAGMA table_info(%@)
B16@?0^@8
T@"NSURL",&,N,V_url
T^{sqlite3=},N,V_database
sqlQueryToStatements
T@"NSMutableDictionary",&,N,V_sqlQueryToStatements
lastInsertedRowID
countOfRecordsModifiedByLastQuery
 title=%@
 message=%@
 providerErrorCode=%ld
 providerEndedReason=%ld
 hasWiFiSettingsRemediation=%d
 hasCellularSettingsRemediation=%d
 hasDateAndTimeSettingsRemediation=%d
 hasLocationSettingsRemediation=%d
title
T@"NSString",C,N,V_title
message
T@"NSString",C,N,V_message
providerErrorCode
Tq,N,V_providerErrorCode
providerEndedReason
Tq,N,V_providerEndedReason
hasWiFiSettingsRemediation
TB,N,V_hasWiFiSettingsRemediation
hasCellularSettingsRemediation
TB,N,V_hasCellularSettingsRemediation
hasDateAndTimeSettingsRemediation
TB,N,V_hasDateAndTimeSettingsRemediation
hasLocationSettingsRemediation
TB,N,V_hasLocationSettingsRemediation
 localizedCallerName=%@
 emergency=%d
 usingBaseband=%d
 blocked=%d
 mayRequireBreakBeforeMake=%d
 hasVideo=%d
 audioCategory=%@
 audioMode=%@
 audioInterruptionProvider=%ld
 audioInterruptionOperationMode=%ld
 verificationStatus=%ld
 priorty=%ld
 requiresInCallSounds=%d
 inCallSoundRegion=%ld
 supportsHolding=%d
 supportsGrouping=%d
 supportsUngrouping=%d
 supportsDTMF=%d
 supportsUnambiguousMultiPartyState=%d
 supportsAddCall=%d
 supportsSendingToVoicemail=%d
 videoStreamToken=%ld
 crossDeviceIdentifier=%@
 ISOCountryCode=%@
 localSenderIdentityUUID=%@
 localSenderIdentityAccountUUID=%@
 remoteParticipantHandles=%@
 activeRemoteParticipantHandles=%@
 prefersExclusiveAccessToCellularNetwork=%d
 supportsTTYWithVoice=%d
 remoteUplinkMuted=%d
 requiresAuthentication=%d
 mutuallyExclusiveCall=%d
localizedCallerName
emergency
usingBaseband
blocked
mayRequireBreakBeforeMake
hasVideo
audioCategory
audioMode
audioInterruptionProvider
audioInterruptionOperationMode
verificationStatus
requiresInCallSounds
inCallSoundRegion
supportsHolding
supportsGrouping
supportsUngrouping
supportsDTMF
supportsUnambiguousMultiPartyState
supportsAddCall
supportsSendingToVoicemail
videoStreamToken
ISOCountryCode
localSenderIdentityUUID
localSenderIdentityAccountUUID
remoteParticipantHandles
activeRemoteParticipantHandles
prefersExclusiveAccessToCellularNetwork
supportsTTYWithVoice
remoteUplinkMuted
requiresAuthentication
mutuallyExclusiveCall
T{CXCallUpdateHasSet=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1},N,V_hasSet
T@"NSUUID",&,N,V_UUID
TB,N,GisEmergency,V_emergency
TB,N,GisUsingBaseband,V_usingBaseband
TB,N,GisBlocked,V_blocked
TB,N,V_mayRequireBreakBeforeMake
Tq,N,SsetTTYType:,V_ttyType
TB,N,V_supportsTTYWithVoice
TB,N,V_requiresInCallSounds
Tq,N,V_inCallSoundRegion
T@"NSString",C,N,V_audioCategory
T@"NSString",C,N,V_audioMode
Tq,N,V_audioInterruptionProvider
Tq,N,V_audioInterruptionOperationMode
Tq,N,V_verificationStatus
Tq,N,V_priority
T@"NSString",C,N,V_crossDeviceIdentifier
T@"NSString",C,N,V_ISOCountryCode
T@"NSUUID",C,N,V_localSenderIdentityUUID
T@"NSUUID",C,N,V_localSenderIdentityAccountUUID
T@"NSSet",C,N,V_remoteParticipantHandles
T@"NSSet",C,N,V_activeRemoteParticipantHandles
TB,N,V_prefersExclusiveAccessToCellularNetwork
TB,N,GisRemoteUplinkMuted,V_remoteUplinkMuted
TB,N,GisMutuallyExclusiveCall,V_mutuallyExclusiveCall
TB,N,V_supportsUnambiguousMultiPartyState
TB,N,V_supportsAddCall
TB,N,V_supportsSendingToVoicemail
Tq,N,V_videoStreamToken
TB,N,V_requiresAuthentication
T@"NSString",C,N,V_localizedCallerName
TB,N,V_supportsHolding
TB,N,V_supportsGrouping
TB,N,V_supportsUngrouping
TB,N,V_supportsDTMF
TB,N,V_hasVideo
<%@ %p: identifier=%@ primaryKey=%lld priority=%lld state=%ld stateLastModified=%@>
T@"NSString",C,N,V_identifier
primaryKey
Tq,N,V_primaryKey
stateLastModified
T@"NSDate",&,N,V_stateLastModified
com.apple.callkit.voicemailsource
<%@ %p identifier=%@ isConnected=%d processIdentifier=%d isPermittedToUsePrivateAPI=%d>
-[CXVoicemailSource registerWithConfiguration:]
-[CXVoicemailSource requestTransaction:reply:]
-[CXVoicemailSource reportNewVoicemailsWithUpdates:]
-[CXVoicemailSource reportVoicemailsUpdated:]
-[CXVoicemailSource reportVoicemailsRemovedWithUUIDs:]
-[CXVoicemailSource actionCompleted:]
-[CXVoicemailSource commitTransaction:]_block_invoke
-[CXVoicemailSource handleActionTimeout:]_block_invoke
T@"<CXVoicemailProviderVendorProtocol>",R,N
T@"<CXVoicemailSourceDelegate>",W,N,V_delegate
 relaying=%d
relaying
TB,N,GisRelaying,V_relaying
-[CXStartCallAction initWithCallUUID:handle:]
 handle=%@
 contactIdentifier=%@
 video=%d
 relay=%d
 retry=%d
 isVoicemail=%d
-[CXStartCallAction fulfillWithDateStarted:]
localLandscapeAspectRatio
T{CGSize=dd},N
localPortraitAspectRatio
relay
TB,N,GisRelay,V_relay
retry
TB,N,GisRetry,V_retry
voicemail
TB,N,GisVoicemail,V_voicemail
T@"NSUUID",&,N,V_localSenderIdentityUUID
T@"CXHandle",C,N,V_handle
contactIdentifier
T@"NSString",C,N,V_contactIdentifier
video
TB,N,GisVideo,V_video
T{CGSize=dd},N,V_localLandscapeAspectRatio
T{CGSize=dd},N,V_localPortraitAspectRatio
-[CXLabeledHandle initWithHandle:label:]
label
<%@ %p handle=%@ label=%@>
T@"CXHandle",&,N,V_handle
T@"NSString",C,N,V_label
-[CXAccount initWithUUID:description:serviceName:isoCountryCode:handle:shortLabel:]
serviceName
isoCountryCode
shortLabel
unarchivedObjectClasses
T@"NSSet",R,C,N
accountDescription
T@"NSString",R,C,N,V_accountDescription
T@"NSString",R,C,N,V_shortLabel
T@"CXHandle",R,N,V_handle
T@"NSString",R,C,N,V_isoCountryCode
T@"NSString",R,C,N,V_serviceName
com.apple.CallKit.error
com.apple.CallKit.error.incomingcall
com.apple.CallKit.error.requesttransaction
com.apple.CallKit.error.calldirectorymanager
com.apple.CallKit.error.calldirectorystore
 muted=%d
muted
TB,N,GisMuted,V_muted
private-voicemail-provider-api
<%@ %p extensionIdentifier=%@ localizedExtensionName=%@ localizedExtensionContainingAppName=%@ localizedLabel=%@>
extensionIdentifier
T@"NSString",C,N,V_extensionIdentifier
localizedExtensionName
T@"NSString",C,N,V_localizedExtensionName
localizedExtensionContainingAppName
T@"NSString",C,N,V_localizedExtensionContainingAppName
localizedLabel
T@"NSString",C,N,V_localizedLabel
-[CXProvider initWithConfiguration:]
configuration
com.apple.callkit.callprovider.completion
-[CXProvider reportNewIncomingCallWithUUID:update:completion:]
completion
-[CXProvider reportCallWithUUID:updated:]
-[CXProvider reportCallWithUUID:endedAtDate:reason:]
-[CXProvider reportCallWithUUID:endedAtDate:privateReason:]
-[CXProvider reportCallWithUUID:failedAtDate:withContext:]
failureContext
-[CXProvider reportCallWithUUID:endedAtDate:privateReason:failureContext:]
-[CXProvider reportAudioFinishedForCallWithUUID:]
-[CXProvider reportOutgoingCallWithUUID:sentInvitationAtDate:]
-[CXProvider reportCallWithUUID:changedFrequencyData:forDirection:]
-[CXProvider reportCallWithUUID:changedMeterLevel:forDirection:]
-[CXProvider reportCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:]
-[CXProvider reportOutgoingCallWithUUID:startedConnectingAtDate:]
-[CXProvider reportOutgoingCallWithUUID:connectedAtDate:]
-[CXProvider requestTransaction:completion:]
T@"<CXProviderDelegate>",W,N,V_delegate
privateDelegate
T@"<CXProviderDelegatePrivate>",R,N
T@"NSObject<OS_dispatch_queue>",&,N,V_completionQueue
T@"NSMutableArray",&,N,V_mutablePendingTransactions
T@"<CXProviderHostProtocol>",R,N
requiresProxyingAVAudioSessionState
T@"CXProviderConfiguration",C,N,V_configuration
PKPushIncomingCallReportedNotification
/System/Library/Frameworks/PushKit.framework/PushKit
com.apple.callkit.callcontroller.completion
-[CXCallController initWithQueue:]
callObserver
T@"CXCallObserver",&,N,V_callObserver
com.apple.callkit.callobserverxpcclient
mutableCallUUIDToCallMap
T@"NSMutableDictionary",R,N,V_mutableCallUUIDToCallMap
Ti,N,V_clientsShouldConnectToken
clientsShouldConnect
TB,N,V_clientsShouldConnect
concurrentQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_concurrentQueue
 sendingVideo=%d
sendingVideo
TB,N,GisSendingVideo,V_sendingVideo
T@"<CXVoicemailProviderDelegate>",W,D,N
T@"<CXVoicemailProviderHostProtocol>",R,D,N
com.apple.callkit.calldirectoryextensionmanager
T@"<CXCallDirectoryExtensionManagerDelegate>",W,N,V_delegate
manager
T@"CXCallDirectoryManager",R,N,V_manager
storeExtensionsChangedNotifyToken
Ti,N,V_storeExtensionsChangedNotifyToken
private-controller-api
<%@ %p hasVoIPBackgroundMode=%d applicationIdentifier=%@ bundleURL=%@ capabilities=%@
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
T@"NSURL",C,N,V_bundleURL
T@"<CXCallControllerVendorProtocol>",R,N
entitledForPublicAPI
entitledForPrivateAPI
T@"<CXCallControllerHostConnectionDelegate>",W,N,V_delegate
com.apple.callkit.calldirectorymanager.identificationentrieschanged
com.apple.callkit.calldirectorymanager
v24@?0q8@"NSError"16
v24@?0@"NSDictionary"8@"NSError"16
sharedInstance
T@"CXCallDirectoryManager",R
defaultConnection
T@"NSXPCConnection",&,N,V_defaultConnection
maintenanceConnection
T@"NSXPCConnection",&,N,V_maintenanceConnection
Ti,N,V_notifyToken
 dateEnded=%@
-[CXEndCallAction fulfillWithDateEnded:]
dateEnded
T@"NSDate",C,N,V_dateEnded
T@"NSUUID",R,C,N,V_UUID
T@"NSString",R,N
localizedContainingAppName
containingAppURL
plugInKitProxy
T@"LSPlugInKitProxy",R,N
 videoPresentationSize=%@
videoPresentationSize
T{CGSize=dd},N,V_videoPresentationSize
 videoPresentationState=%ld
videoPresentationState
Tq,N,V_videoPresentationState
private-voicemail-controller-api
<%@ %p applicationIdentifier=%@ bundleURL=%@ capabilities=%@
T@"<CXVoicemailControllerVendorProtocol>",R,N
T@"<CXVoicemailControllerHostConnectionDelegate>",W,N,V_delegate
callSource
T@"CXInProcessCallSource",W,N,V_callSource
<%@ %p: identifier=%@ state=%ld priority=%lld localizedName=%@>
T@"NSString",C,N,V_localizedName
T@"NSString",C,N,V_localizedContainingAppName
T@"LSPlugInKitProxy",&,N,V_plugInKitProxy
onlyExtensionInContainingApp
TB,N,GisOnlyExtensionInContainingApp,V_onlyExtensionInContainingApp
callSourceIdentifierToTransaction
T@"NSMutableDictionary",R,N,V_callSourceIdentifierToTransaction
T@"NSMutableArray",R,N,V_mutableCallSources
transactions
allActions
%lld
phoneNumbersCharacterSet
T@"NSCharacterSet",R,N,V_phoneNumbersCharacterSet
nonPhoneNumbersCharacterSet
T@"NSCharacterSet",R,N,V_nonPhoneNumbersCharacterSet
phoneNumbersIgnoredCharacterSet
T@"NSCharacterSet",R,N,V_phoneNumbersIgnoredCharacterSet
<%@ %p count=%lu phoneNumberData.length=%lu>
phoneNumbers
Tr^q,R,N
Sounds
-[CXProviderConfiguration initWithLocalizedName:]
 localizedName=%@
 ringtoneSoundURL=%@
 iconTemplateImageData=%p
 maximumCallGroups=%lu
 maximumCallsPerCallGroup=%lu
 supportsAudioOnly=%d
 supportsVideo=%d
 supportsEmergency=%d
 supportsVoicemail=%d
 supportsCurrentPlatform=%d
 includesCallsInRecents=%d
 audioSessionID=%u
 supportedHandleTypes=%@
 emergencyHandles=%@
 emergencyLabeledHandles=%@
 handoffIdentifiers=%@
 prioritizedSenderIdentities=%@
CXProviderConfiguration cannot be decoded by non-XPC coders.
audioSessionID
TI,N,V_audioSessionID
emergencyHandles
T@"NSArray",C,N,V_emergencyHandles
emergencyLabeledHandles
T@"NSArray",C,N,V_emergencyLabeledHandles
handoffIdentifiers
T@"NSArray",C,N,V_handoffIdentifiers
senderIdentities
T@"NSSet",C,N
prioritizedSenderIdentities
T@"NSOrderedSet",C,N,V_prioritizedSenderIdentities
ringtoneSoundURL
T@"NSURL",C,N,V_ringtoneSoundURL
supportsAudioOnly
TB,N,V_supportsAudioOnly
supportsEmergency
TB,N,V_supportsEmergency
supportsVoicemail
TB,N,V_supportsVoicemail
supportsCurrentPlatform
TB,N,V_supportsCurrentPlatform
ringtoneSound
T@"NSString",&,N
iconTemplateImageData
T@"NSData",C,N,V_iconTemplateImageData
maximumCallGroups
TQ,N,V_maximumCallGroups
maximumCallsPerCallGroup
TQ,N,V_maximumCallsPerCallGroup
includesCallsInRecents
TB,N,V_includesCallsInRecents
supportsVideo
TB,N,V_supportsVideo
supportedHandleTypes
T@"NSSet",C,N,V_supportedHandleTypes
application-identifier
com.apple.developer.team-identifier
com.apple.callkit
file-read-data
cx_applicationIdentifier
cx_bundleIdentifier
cx_developerTeamIdentifier
cx_processName
cx_capabilities
-[CXCallAction initWithCallUUID:]
callUUID
 callUUID=%@
T@"NSUUID",C,N,V_callUUID
T@"<CXCallObserverDelegate>",W,N,V_delegate
T@"<CXCallObserverDataSource>",R,N,V_dataSource
calls
sqlite3_prepare_v2 for query '%@' returned %d errorMessage '%s'
sqlite3_step for query '%s' returned %d (%d) errorMessage '%s' after retrying for %f seconds
sqlite3_step for query '%s' returned %d (%d) errorMessage '%s'
NSString %@ returned a nil UTF-8 string
Object %@ not a supported binding class
SQLite bind attempt returned %d errorMessage '%s'
Columns returned by query (%d) did not match expected number of columns (%ld)
statement
T^{sqlite3_stmt=},N,V_statement
T@"<CXVoicemailControllerHostDelegate>",W,N,V_delegate
T@"NSMutableDictionary",&,N,V_voicemailUUIDToVoicemailMap
extensionBundleIdentifier
T@"NSString",C,N,V_extensionBundleIdentifier
@"<CXCallDirectoryProviderHostProtocol>"20@?0@?<v@?@"NSError">8B16
v20@?0B8@"NSError"12
Calling %@ when isIncremental is false is unsupported
pendingBlockingEntryData
T@"CXCallDirectoryMutablePhoneNumberEntryData",&,N,V_pendingBlockingEntryData
pendingBlockingEntryChangeType
Tq,N,V_pendingBlockingEntryChangeType
pendingIdentificationEntryDataForAddition
T@"CXCallDirectoryMutableLabeledPhoneNumberEntryData",&,N,V_pendingIdentificationEntryDataForAddition
pendingIdentificationEntryDataForRemoval
T@"CXCallDirectoryMutablePhoneNumberEntryData",&,N,V_pendingIdentificationEntryDataForRemoval
pendingIdentificationEntryChangeType
Tq,N,V_pendingIdentificationEntryChangeType
hasQueriedIsIncremental
TB,N,V_hasQueriedIsIncremental
remoteObjectProxyGenerator
T@?,C,N,V_remoteObjectProxyGenerator
T@"<CXCallDirectoryExtensionContextDelegate>",W,N,V_delegate
incremental
TB,R,N,GisIncremental,V_incremental
providerIdentifier
T@"NSString",&,N,V_providerIdentifier
hasConnected
TB,N,V_hasConnected
hasEnded
TB,N,V_hasEnded
endpointOnCurrentDevice
TB,N,GisEndpointOnCurrentDevice,V_endpointOnCurrentDevice
hostedOnCurrentDevice
TB,N,GisHostedOnCurrentDevice,V_hostedOnCurrentDevice
Error beginning to match extensions with attributes %@: %@
No containing app bundle ID found for containingAppPID %d
Error matching extensions with attributes %@: %@
[WARN] Cannot get proxy to application with identifier: %@
XPC connection %@ contains entitlement '%@' but it is of unexpected class %@, should be NSArray
[WARN] XPC connection %@ does not contain entitlement '%@'
identifier %@
No extension returned with identifier %@
No extension found with identifier %@ containingAppPID %d
[WARN] identifier is nil
enabled %d identifier %@
Error locating extension with identifier %@: %@
Requestor does not contain entitlement capability '%@'
phoneNumbers %@
prioritizedExtensionIdentifiers %@
Committing transaction to extension vendor: %@
Asking extension vendor to handle action timeout: %@
Asking extension vendor to handle audio session activation state change to: %d
Asked to accept new connection from %@
callControllerHostConnection: %@
callControllerHostConnection: %@ transaction: %@
Connection is not entitled to use public API: %@
Asked to invalidate provider %@ (this is a no-op)
Removing transaction from list of pending transactions because it is now complete: %@
[WARN] Asked to perform a delegate callback but no delegate queue exists
Provider %@ was notified that action %@ completed
[WARN] No incomplete pending action could be found with UUID %@. All pending transactions: %@
Received request to commit transaction %@
Delegate did not execute transaction. Performing actions individually
Asking delegate to perform action %@
Delegate indicated that the transaction was executed
Notified that action timed out: %@
Notifying delegate that action timed out: %@
Request completed for extension call source %@
[WARN] Request canceled for extension call source %@: %@
[WARN] Request interrupted for extension call source %@
Could not create extension with identifier %@: %@
Asked to begin extension call source %@
Extension call source is already connected
Extension call source began successfully with request identifier %@
Extension call source failed to begin: %@
Connection interrupted for XPC call source %@
Connection invalidated for XPC call source %@
Created %@ with applicationIdentifier: %@ bundleIdentifier: %@ bundleURL: %@ hasVoIPBackgroundMode: %d capabilities: %@ connection: %@
Denying creation of %@ with applicationIdentifier: %@ bundleIdentifier: %@ bundleURL: %@ hasVoIPBackgroundMode: %d capabilities: %@ connection: %@
Asked to add call source %@
Asked to remove call source %@
Asked to commit transaction %@ to call source %@
Asked to add action %@ to uncommitted transaction for call source %@
Asked to commit uncommitted transactions: %@
listener: %@ newConnection: %@
[WARN] Not accepting connection %@ because a CXXPCCallSource couldn't be created
Call source connection started: %@
Call source connection ended: %@
Call source invalidated: %@
Determined that callSource: %@, should process action: %@, error: %@
Determined that callSource: %@, should not process action: %@, error: %@
[WARN] Action %@ timed out for call source %@
Notifying delegate of completed transaction group: %@
Assertion failure: %s in %s:%d
Error closing database %@: %@
Error removing temporary database at URL %@: %@
Copied database template from URL %@ to URL %@
Error copying database template from URL %@ to URL %@
[WARN] Error querying schema version, possibly because the schema is too old. Error: %@
Error performing rollback: %@
Error rolling back from previous error: %@
Sending %s with configuration: %@
Sending %s with UUID: %@ update: %@
Sending %s with UUID: %@ dateSentInvitation: %@
Sending %s with UUID: %@ dateStartedConnecting: %@
Sending %s with UUID: %@ dateConnected: %@
Sending %s with UUID: %@ dateEnded: %@ privateEndedReason: %ld failureContext: %@
Sending %s with UUID: %@
Sending %s with UUID: %@ crossDeviceIdentifier: %@ bytesOfDataUsed: %ld
Sending %s with transaction: %@
Sending %s with action: %@
Received %s with transaction: %@
Received %s with action: %@
Received %s with active: %d
Successfully removed DB at URL %@
Error setting state to Enabled for extension with identifier '%@' (ID %lld): %@
Error retrieving NSExtension with identifier '%@': %@. Not migrating enabled status
Successfully migrated to schema version %ld
Handling %s by setting up XPC connection
Received error from transaction request: %@
Received reply from transaction request with error: %@
adding voicemail: %@
removing voicemail: %@
Requesting voicemails from host
Error requesting voicemails from host: %@
Received requested voicemails from host: %@
Connection invalidated for voicemail observer %@
self: %@
Beginning request with extension context %@ for extension provider %@
Received %s with configuration: %@
Received %s with UUID: %@ update: %@
Invalid argument; '%@' parameter cannot be nil.
Call source is not entitled to use public API: %@
Received %s with UUID: %@ dateEnded: %@ privateEndedReason: %ld failureContext: %@
Received %s with UUID: %@ dateSentInvitation: %@
Received %s with UUID: %@ dateStartedConnecting: %@
Received %s with UUID: %@ dateConnected: %@
Received %s with UUID: %@
Call source is not entitled to use private API: %@
Received %s with UUID: %@ crossDeviceIdentifier: %@ bytesOfDataUsed: %ld
Sending %s with active: %d
transaction: %@
actions: %@
completedAction: %@
[WARN] Could not find transaction group with completed action. All transactions groups: %@
Failing action by system request: %@
[WARN] Timeout reached for incomplete action %@ and call source %@
Error closing database: %@
Voicemail source is not entitled to use private API: %@
Received %s with updates: %@
Received %s with UUIDs: %@
Connection interrupted for XPC voicemail source %@
Connection invalidated for XPC voicemail source %@
Created %@ with applicationIdentifier: %@ bundleIdentifier: %@ bundleURL: %@ capabilities: %@ connection: %@
Denying creation of %@ with applicationIdentifier: %@ bundleIdentifier: %@ bundleURL: %@ capabilities: %@ connection: %@
Provider %@ was notified that configuration was set to %@
Provider %@ was asked to report a new incoming call with UUID: %@ update: %@
Provider %@ was asked to report that call with UUID %@ updated with update %@
Provider %@ was asked to report that call with UUID %@ ended at date %@ with reason %ld
Provider %@ was notified that call with UUID %@ ended at date %@ with private reason %ld
Provider %@ was notified that call with UUID %@ failed at date %@ with context %@
Provider %@ was notified that call with UUID %@ ended at date %@ with private reason %ld and failure context %@
Provider %@ was notified that call with UUID %@ finished audio
Provider %@ was notified that outgoing call with UUID %@ sent invitation at date %@
Provider %@ was notified that call with UUID %@ and cross device identifier %@ changed bytes of data used %ld
Provider %@ was notified that outgoing call with UUID %@ started connecting at date %@
Provider %@ was notified that outgoing call with UUID %@ connected at date %@
Provider %@ requested transaction %@
Registering configuration %@
Successfully reset audio session interruption priority to Normal
Error resetting audio session interruption priority to Normal: %@
[WARN] Asked to perform a delegate callback but no delegate exists
[WARN] Delegate does not respond to %@. Action will not be performed
Unknown action class in transaction: %@
Notified that audio session activation state changed to: %d
Notifying delegate that audio session activation state changed to: %d
[WARN] Bad status received attempting to get host call state: %d
self.callUUIDToCallMap: %@
call: %@
Requesting calls from host
Error requesting calls from host: %@
Received requested calls from host: %@
Call host has no calls
Connection interrupted for call observer %@
Connection invalidated for call observer %@
Error getting extensions: %@
prioritizedExtensionIdentifiers: %@
Not setting enabled to %d since state is %ld
Setting enabled to %d for extension %@
Error setting enabled of extension with identifier %@ to %d: %@
Connection interrupted for call controller host connection: %@
Connection invalidated for call controller host connection: %@
Default connection interrupted for call directory manager %@
Default connection invalidated for call directory manager %@
Maintenance connection interrupted for call directory manager %@
Maintenance connection invalidated for call directory manager %@
error %@
Connection %@ interrupted for XPC provider %@
Connection %@ invalidated for XPC provider %@
Connection interrupted for voicemail controller host connection: %@
Connection invalidated for voicemail controller host connection: %@
Created %@
Denying creation of %@ with applicationIdentifier: %@ bundleURL: %@ capabilities: %@ connection: %@
Error while querying file attributes: %@
[WARN] Ignoring ringtone sound URL because CXProviderConfiguration client did not have access to it: %@
URL is not a file system URL: %@
URL resource is not reachable: %@
Could not get file system representation for URL: %@
[WARN] Client sandbox does not have access to the given file! (Error %i: %s)
[WARN] sqlite3_step returned %d (%d) errorMessage '%s', so retrying query after %f seconds
[WARN] Not accepting connection %@ because a CXXPCVoicemailSource couldn't be created
voicemailControllerHostConnection: %@
voicemailControllerHostConnection: %@ transaction: %@
error: %@
Error querying is incremental loading allowed: %@
request failed with error: %@
r@333333
@(#)PROGRAM:CallKit  PROJECT:CallKit-1
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
CXCallDirectoryNSExtensionManager
CXHandle
NSCopying
NSSecureCoding
NSCoding
CXSetTrashedVoicemailAction
CXInProcessCallSource
CXRemoveVoicemailAction
CXPullCallAction
CXAction
CXCopying
CXSanitizedCopying
NSObject
CXAnswerCallAction
CXCallDirectoryHost
CXCallDirectoryManagerDefaultHostProtocol
CXCallDirectoryManagerMaintenanceHostProtocol
CXSenderIdentity
CXSendMMIOrUSSDCodeAction
CXSetHeldCallAction
CXProviderExtensionHostContext
CXProviderVendorProtocol
CXAbstractProviderVendorProtocol
CXAudioSessionActivationStateObserver
CXProviderHostProtocol
CXAbstractProviderHostProtocol
CXCallControllerHost
NSXPCListenerDelegate
CXCallControllerHostConnectionDelegate
CXVoicemailUpdate
CXAbstractProvider
CXActionDelegate
CXCallDirectoryProvider
NSExtensionRequestHandling
CXTransaction
CXProviderExtensionContext
CXExtensionCallSource
CXXPCCallSource
CXCallSourceManager
CXCallSourceDelegate
CXCallSourceUpdates
CXTransactionManagerDelegate
CXCallDirectoryLabeledPhoneNumberEntryData
CXCallDirectoryEntryData
CXCallDirectoryMutableLabeledPhoneNumberEntryData
CXCallDirectoryStore
CXCallDirectoryExtensionHostContext
CXCallDirectoryProviderHostProtocol
CXProviderExtensionVendorContext
CXSetPlayedVoicemailAction
CXCallDirectoryStoreMigrator
CXCallDirectoryStoreMigrationResult
CXCallDirectoryStoreMigratorExtension
CXSetGroupCallAction
CXPlayDTMFCallAction
CXVoicemailObserverXPCClient
CXVoicemailObserverDataSource
CXHandoffContext
CXExtensionProvider
CXProviderExtensionVendorContextDelegate
CXVoicemailObserver
CXVoicemailObserverDataSourceDelegate
CXProviderSupport
CXCallControllerHostProtocol
CXCallControllerVendorProtocol
CXCallControllerSupport
CXVoicemailProviderHostProtocol
CXVoicemailProviderVendorProtocol
CXVoicemailProviderSupport
CXVoicemailControllerHostProtocol
CXVoicemailControllerVendorProtocol
CXVoicemailControllerSupport
CXCallDirectoryManagerSupport
CXCallDirectoryProviderVendorProtocol
CXCallDirectoryProviderSupport
CXCallSource
CXVoicemailController
CXJoinCallAction
CXVoicemailAction
CXTransactionManager
CXDatabase
CXCallFailureContext
CXCallUpdate
CXCallDirectoryStoreExtension
CXVoicemailSource
CXSetRelayingCallAction
CXStartCallAction
CXVideoAspectRatioDescriptor
CXLabeledHandle
CXAccount
CXError
CXSetMutedCallAction
CXSetTTYTypeCallAction
CXXPCVoicemailSource
CXCallDirectoryIdentificationEntry
CXProviderDelegatePrivate
CXProviderDelegate
CXProvider
CXCallController
CXCallObserverXPCClient
CXCallObserverDataSource
CXSetSendingVideoCallAction
CXVoicemailProvider
CXCallDirectoryExtensionManager
CXCallControllerHostConnection
CXCallDirectoryManager
CXXPCProvider
CXEndCallAction
CXVoicemail
CXSetVideoPresentationSizeCallAction
CXSetVideoPresentationStateCallAction
CXVoicemailControllerHostConnection
CXInProcessProvider
CXCallDirectoryExtension
CXTransactionGroup
CXCallDirectorySanitizer
CXCallDirectoryPhoneNumberEntryData
CXCallDirectoryMutablePhoneNumberEntryData
CXProviderConfiguration
CXCallAction
CXCallObserver
CXCallObserverDataSourceDelegate
CXDatabaseStatement
CXVoicemailControllerHost
CXVoicemailControllerHostConnectionDelegate
CXCallDirectoryStoreIdentificationEntry
CXCallDirectoryExtensionContext
CXCall
init
extensionMatchingContext
endMatchingExtensions:
dealloc
queue
setDelegate:
setDelegateQueue:
_beginMatchingExtensionsIfNecessary
dictionaryWithObjects:forKeys:count:
baseExtensionMatchingAttributes
delegateQueue
delegate
callDirectoryNSExtensionManager:extensionsChanged:
beginMatchingExtensionsWithAttributes:completion:
setExtensionMatchingContext:
extensionsWithMatchingAttributes:completion:
applicationProxyForIdentifier:
bundleURL
_extensionForIdentifier:containingAppBundleURL:completion:
mutableCopy
setObject:forKeyedSubscript:
path
firstObject
setDelegate:queue:
beginMatchingExtensions
extensionsWithCompletionHandler:
extensionWithIdentifier:inContainingAppWithProcessIdentifier:completion:
.cxx_destruct
setQueue:
_queue
_delegate
_delegateQueue
_extensionMatchingContext
raise:format:
copy
type
stringForType:
value
stringWithFormat:
isEqualToHandle:
hash
allocWithZone:
initWithType:
setValue:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
encodeInteger:forKey:
encodeObject:forKey:
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
initWithType:value:
description
isEqual:
setType:
_type
_value
isEqualToString:
initWithVoicemailUUID:
customDescription
isTrashed
appendFormat:
updateSanitizedCopy:withZone:
setTrashed:
decodeBoolForKey:
encodeBool:forKey:
initWithVoicemailUUID:trashed:
_trashed
bundleIdentifier
setConnected:
provider
identifier
initWithBundleIdentifier:
setProvider:
vendorProtocolDelegate
processIdentifier
isPermittedToUsePublicAPI
isPermittedToUsePrivateAPI
_bundleIdentifier
_bundleURL
_provider
handoffContext
dateConnected
date
fulfillWithDateConnected:
updateAsFulfilledWithDateConnected:
actionCompleted:
updateAsFulfilled
setDateConnected:
updateCopy:withZone:
setHandoffContext:
timeout
fulfill
sanitizedCopyWithZone:
_handoffContext
_dateConnected
UUID
UUIDString
state
commitDate
failureReason
appendString:
string
dateWithTimeInterval:sinceDate:
updateAsFailedWithReason:
setState:
setFailureReason:
setUUID:
setCommitDate:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
sanitizedCopy
timeoutDate
isComplete
fail
_UUID
_state
_failureReason
_commitDate
localLandscapeAspectRatio
localPortraitAspectRatio
downgradeToAudio
setLocalLandscapeAspectRatio:
setLocalPortraitAspectRatio:
setDowngradeToAudio:
decodeSizeForKey:
encodeSize:forKey:
_downgradeToAudio
_localPortraitAspectRatio
_localLandscapeAspectRatio
currentConnection
valueForEntitlement:
containsObject:
callDirectoryHost:requestedReloadForExtension:completionHandler:
performDelegateCallback:
cx_callDirectoryManagerErrorWithCode:
_nsExtensionWithIdentifier:completion:
callDirectoryHost:requestedEnabledStatusForExtension:completionHandler:
_connectionContainsCallDirectoryHostEntitlementCapability:
extensionWithIdentifier:error:
callDirectoryHost:requestedToSetEnabled:forExtension:completionHandler:
cx_callDirectoryManagerErrorWithCode:userInfo:
callDirectoryHost:requestedFirstIdentificationEntriesForEnabledExtensionsWithPhoneNumbers:completionHandler:
callDirectoryHost:requestedExtensionsWithCompletionHandler:
callDirectoryHost:requestedToSetPrioritizedExtensionIdentifiers:completionHandler:
callDirectoryHost:requestedToSynchronizeExtensionsWithCompletionHandler:
callDirectoryHost:requestedToCompactStoreWithCompletionHandler:
callDirectoryHost:requestedToPrepareStoreWithCompletionHandler:
reloadExtensionWithIdentifier:reply:
getEnabledStatusForExtensionWithIdentifier:reply:
setEnabled:forExtensionWithIdentifier:reply:
firstIdentificationEntriesForEnabledExtensionsWithPhoneNumbers:reply:
getExtensionsWithReply:
setPrioritizedExtensionIdentifiers:reply:
synchronizeExtensionsWithReply:
compactStoreWithReply:
prepareStoreIfNecessary
initWithUUIDString:
initWithUUID:description:serviceName:isoCountryCode:handle:
initWithUUID:account:
account
handle
accountDescription
isEqualToSenderIdentity:
isEqualToAccount:
archivedDataWithRootObject:requiringSecureCoding:error:
setWithObjects:
unarchivedObjectClasses
unarchivedObjectOfClasses:fromData:error:
unarchivedObjectFromData:error:
initWithUUID:handle:localizedName:
localizedName
archivedDataWithError:
localizedShortName
_account
_localizedShortName
code
ttyType
senderIdentityUUID
setCode:
setTtyType:
setSenderIdentityUUID:
_code
_ttyType
_senderIdentityUUID
initWithCallUUID:
isOnHold
setOnHold:
initWithCallUUID:onHold:
_onHold
remoteObjectProxy
remoteObjectProxyWithErrorHandler:
commitTransaction:
handleActionTimeout:
handleAudioSessionActivationStateChangedTo:
registerWithConfiguration:
reportNewIncomingCallWithUUID:update:reply:
reportCallWithUUID:updated:
reportOutgoingCallWithUUID:sentInvitationAtDate:
reportOutgoingCallWithUUID:startedConnectingAtDate:
reportOutgoingCallWithUUID:connectedAtDate:
reportCallWithUUID:endedAtDate:privateReason:failureContext:
reportAudioFinishedForCallWithUUID:
reportCallWithUUID:changedFrequencyData:forDirection:
reportCallWithUUID:changedMeterLevel:forDirection:
reportCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:
requestTransaction:reply:
UTF8String
dictionary
initWithMachServiceName:
resume
callUUIDToCallMap
count
callUUIDToPublicCallUUIDMap
objectForKeyedSubscript:
connections
countByEnumeratingWithState:objects:count:
_sanitizedCallFromCall:forCallControllerHostConnection:
addOrUpdateCall:
removeCall:
removeObjectForKey:
providerIdentifier
applicationIdentifier
initWithUUID:
arrayWithCapacity:
allValues
addObject:
initWithConnection:serialQueue:
removeObject:
_callsForCallControllerHostConnection:
callControllerHost:clientWithIdentifier:requestedTransaction:completion:
_performDelegateCallback:
cx_requestTransactionErrorWithCode:
listener:shouldAcceptNewConnection:
callControllerHostConnectionInvalidated:
callControllerHostConnection:requestCalls:
callControllerHostConnection:requestTransaction:completion:
initWithCalls:delegate:queue:
xpcListener
setXpcListener:
setCallUUIDToCallMap:
setCallUUIDToPublicCallUUIDMap:
setConnections:
clientsShouldConnectToken
_clientsShouldConnectToken
_xpcListener
_callUUIDToCallMap
_callUUIDToPublicCallUUIDMap
_connections
voicemailUUID
hasSet
sender
dateReceived
audioFileURL
isPlayed
setSender:
setDateReceived:
setAudioFileURL:
setPlayed:
decodeBytesForKey:returnedLength:
decodeObjectOfClasses:forKey:
encodeBytes:length:forKey:
setHasSet:
_played
_hasSet
_voicemailUUID
_sender
_dateReceived
_audioFileURL
array
mutablePendingTransactions
initWithArray:copyItems:
removeAllObjects
actions
providerDidBegin:
_handleConnectionInterruption
providerDidReset:
_pendingActionWithUUID:
hostProtocolDelegate
_updatePendingTransactions
provider:executeTransaction:
_performAction:
provider:timedOutPerformingAction:
invalidate
pendingTransactions
sendProviderDidBegin
handleConnectionInterruption
_mutablePendingTransactions
beginRequestWithExtensionContext:
orderedSetWithArray:
arrayWithObjects:count:
initWithActions:
mutableActions
addAction:
allowedClassesForMutableActions
initWithAction:
addActionsFromTransaction:
setMutableActions:
_mutableActions
_auxiliaryConnection
cx_providerVendorInterface
cx_providerHostInterface
_extensionAuxiliaryVendorProtocol
_extensionAuxiliaryHostProtocol
setExtensionContext:
setRequestCompletionBlock:
setRequestCancellationBlock:
setRequestInterruptionBlock:
initWithExtension:
extensionContext
extension
_extensionBundle
isConnected
setRequestIdentifier:
_extensionContextForUUID:
exportedInterface
cx_setAllowedClassesForProviderHostProtocol
beginExtensionRequestWithInputItems:completion:
initWithExtensionIdentifier:
bundle
beginWithCompletionHandler:
setExtension:
requestIdentifier
_extensionContext
_extension
_requestIdentifier
cx_applicationIdentifier
cx_capabilities
cx_bundleIdentifier
cx_hasVoIPBackgroundMode
setExportedObject:
setExportedInterface:
setRemoteObjectInterface:
connection
setInterruptionHandler:
setConnection:
callSourceInvalidated:
setInvalidationHandler:
hasVoIPBackgroundMode
capabilities
initWithConnection:
setBundleIdentifier:
setBundleURL:
setApplicationIdentifier:
setCapabilities:
setHasVoIPBackgroundMode:
_hasVoIPBackgroundMode
_connection
_applicationIdentifier
_capabilities
initWithQueue:
mutableCallSources
allObjects
callSources
callSourcesChangedForCallSourceManager:
addAction:forCallSource:
transactionManager
addOutstandingTransactionGroup:
uncommittedTransactionGroup
transactionForCallSource:
setUncommittedTransactionGroup:
failOutstandingActionsForCallWithUUID:
addCallSource:
removeCallSource:
callSource:registeredWithConfiguration:
callSource:reportedNewIncomingCallWithUUID:update:completion:
callSource:reportedCallWithUUID:updated:
callSource:reportedCallWithUUID:endedAtDate:privateReason:failureContext:
callSource:reportedOutgoingCallWithUUID:sentInvitationAtDate:
callSource:reportedOutgoingCallWithUUID:startedConnectingAtDate:
callSource:reportedOutgoingCallWithUUID:connectedAtDate:
callSource:reportedAudioFinishedForCallWithUUID:
callSource:reportedCallWithUUID:changedFrequencyData:forDirection:
callSource:reportedCallWithUUID:changedMeterLevel:forDirection:
callSource:reportedCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:
callSource:requestedTransaction:completion:
callSource:shouldProcessAction:error:
updateWithCompletedAction:
callSourceManager:completedTransactionGroup:
callSource:actionCompleted:
callSourceConnectionStarted:
callSourceConnectionEnded:
transactionManager:actionTimedOut:forCallSource:
transactionManager:transactionGroupCompleted:
initWithDelegate:queue:
callSourceWithIdentifier:
commitTransaction:toCallSource:
addAction:toUncommittedTransactionForCallSource:
commitUncommittedTransactions
setMutableCallSources:
setTransactionManager:
_mutableCallSources
_uncommittedTransactionGroup
_transactionManager
data
length
getBytes:range:
bytes
phoneNumberData
labelData
phoneNumberAtIndex:
utf8LabelAtIndex:length:
setPhoneNumberData:
setLabelData:
_phoneNumberData
_labelData
initWithCapacity:
unsignedIntegerValue
lengthOfBytesUsingEncoding:
appendBytes:length:
numberWithUnsignedInteger:
mutablePhoneNumberData
mutableLabelData
appendPhoneNumber:label:
setMutablePhoneNumberData:
setMutableLabelData:
labelToLabelDataOffset
setLabelToLabelDataOffset:
_mutablePhoneNumberData
_mutableLabelData
_labelToLabelDataOffset
initReadOnly:temporary:error:
databaseTemplateURL
initWithTemplateURL:readOnly:temporary:error:
databaseURLUsingTemporaryDirectory:error:
initializeDatabaseIfNecessaryAtURL:usingTemplateAtURL:error:
initWithURL:readOnly:error:
enableForeignKeysWithError:
setBusyTimeout:error:
isTemporary
database
closeWithError:
defaultManager
removeItemAtURL:error:
processInfo
globallyUniqueString
stringByAppendingPathComponent:
fileURLWithPath:isDirectory:
fileURLWithPath:
URLByAppendingPathComponent:isDirectory:
fileExistsAtPath:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLByAppendingPathComponent:
bundleForClass:
URLForResource:withExtension:
copyItemAtURL:toURL:error:
cx_callDirectoryStoreErrorWithCode:
schemaVersionWithError:
objectAtIndexedSubscript:
longLongValue
selectSQL:withBindings:expectedColumnCount:resultRowHandler:error:
domain
boolValue
setPrimaryKey:
setIdentifier:
setPriority:
doubleValue
dateWithTimeIntervalSince1970:
setStateLastModified:
executeSQL:withBindings:error:
lastInsertedRowID
numberWithLongLong:
executeSQL:withBindings:transient:error:
countOfRecordsModifiedByLastQuery
numberWithInteger:
timeIntervalSince1970
numberWithDouble:
_removeUnreferencedPhoneNumbersWithError:
_removeUnreferencedLabelsWithError:
executeSQL:error:
_sqlCaseMappingPlaceholderStringWithKeyColumnName:defaultValue:numberOfPairs:
_sqlBindingsForPrioritizedExtensionIdentifiers:withPriorityOffset:
performTransactionWithBlock:error:
appendPhoneNumber:
addBlockingEntriesWithData:extensionID:error:
_addBlockingEntriesWithData:startIndex:count:extensionID:error:
lastAddBlockingEntriesCount
_sqlValuesListPlaceholderStringWithNumberOfEntries:entryString:
setAddBlockingEntriesInsertPhoneNumberBlockingEntrySQL:
setLastAddBlockingEntriesCount:
_addPhoneNumbersWithEntryData:startIndex:count:error:
bindInt64:atIndex:error:
addBlockingEntriesInsertPhoneNumberBlockingEntrySQL
executeSQL:withStatementPreparationBlock:error:
_removeBlockingEntriesWithData:startIndex:count:extensionID:error:
lastRemoveBlockingEntriesCount
_sqlStringListPlaceholderStringWithNumberOfEntries:
setRemoveBlockingEntriesSQL:
setLastRemoveBlockingEntriesCount:
removeBlockingEntriesSQL
_findOrCreateIDForPhoneNumber:error:
_addIdentificationEntriesWithData:startIndex:count:extensionID:error:
lastAddIdentificationEntriesCount
setAddIdentificationEntriesInsertLabelsSQL:
setAddIdentificationEntriesInsertPhoneNumberIdentificationEntrySQL:
setLastAddIdentificationEntriesCount:
bindText:ofLength:atIndex:error:
addIdentificationEntriesInsertLabelsSQL
addIdentificationEntriesInsertPhoneNumberIdentificationEntrySQL
lastAddPhoneNumbersCount
setAddPhoneNumbersSQL:
setLastAddPhoneNumbersCount:
addPhoneNumbersSQL
_removeIdentificationEntriesWithData:startIndex:count:extensionID:error:
lastRemoveIdentificationEntriesCount
setRemoveIdentificationEntriesSQL:
setLastRemoveIdentificationEntriesCount:
removeIdentificationEntriesSQL
containsBlockingEntryWithPhoneNumberInArray:error:
_containsBlockingEntryWithSQL:bindings:error:
containsBlockingEntryForEnabledExtensionWithPhoneNumberInArray:error:
_firstIdentificationEntryForSQL:bindings:error:
_firstIdentificationEntriesForSQL:bindings:error:
_parseIdentificationEntriesForSQL:bindings:handler:error:
_parseFirstIdentificationEntriesForSQL:bindings:handler:error:
stringValue
_storeIdentificationEntryWithExtensionBundleID:localizedLabel:
selectSQL:withBindings:expectedColumnCount:transient:resultRowHandler:error:
setExtensionBundleIdentifier:
setLocalizedLabel:
componentsJoinedByString:
vacuumWithError:
initForReadingWithError:
initForReadingAndWritingWithError:
schemaVersion
isCorrupt
containsExtensionWithIdentifier:error:
addExtensionWithIdentifier:error:
addExtensionWithIdentifier:priority:error:
removeExtensionWithIdentifier:error:
setState:forExtensionWithIdentifier:error:
setState:forExtensionWithID:error:
setStateLastModifiedDate:forExtensionWithID:error:
setStateForAllExtensions:error:
removeUnreferencedRecordsWithError:
prioritizedExtensionsWithError:
prioritizedExtensionIdentifiersWithError:
setPrioritizedExtensionIdentifiers:error:
addBlockingEntryWithPhoneNumber:extensionID:error:
removeBlockingEntriesWithData:extensionID:error:
removeBlockingEntriesForExtensionWithID:error:
addIdentificationEntryWithPhoneNumber:labelID:extensionID:error:
idForExtensionWithIdentifier:error:
idForPhoneNumber:error:
idForLabel:error:
addLabel:error:
addIdentificationEntriesWithData:extensionID:error:
removeIdentificationEntriesWithData:extensionID:error:
removeIdentificationEntriesForExtensionWithID:error:
containsBlockingEntryWithPhoneNumber:error:
containsBlockingEntryForEnabledExtensionWithPhoneNumber:error:
firstIdentificationEntryForPhoneNumber:error:
firstIdentificationEntriesForPhoneNumbers:error:
firstIdentificationEntryForEnabledExtensionWithPhoneNumber:error:
firstIdentificationEntriesForEnabledExtensionsWithPhoneNumbers:error:
setDatabase:
setTemporary:
_temporary
_database
_lastAddBlockingEntriesCount
_addBlockingEntriesInsertPhoneNumberBlockingEntrySQL
_lastRemoveBlockingEntriesCount
_removeBlockingEntriesSQL
_lastAddIdentificationEntriesCount
_addIdentificationEntriesInsertLabelsSQL
_addIdentificationEntriesInsertPhoneNumberIdentificationEntrySQL
_lastAddPhoneNumbersCount
_addPhoneNumbersSQL
_lastRemoveIdentificationEntriesCount
_removeIdentificationEntriesSQL
initWithInputItems:listenerEndpoint:contextUUID:
activate
requestFailedWithError:reply:
isIncrementalLoadingAllowed:
addBlockingEntriesWithData:reply:
removeBlockingEntriesWithData:reply:
removeAllBlockingEntriesWithReply:
addIdentificationEntriesWithData:reply:
removeIdentificationEntriesWithData:reply:
removeAllIdentificationEntriesWithReply:
completeRequestWithReply:
cx_callDirectoryProviderVendorInterface
cx_callDirectoryProviderHostInterface
requestFailedWithError:completion:
reportNewIncomingCallWithUUID:update:completion:
providerExtensionVendorContext:receivedCommittedTransaction:
providerExtensionVendorContext:handledActionTimeout:
providerExtensionVendorContext:handledAudioSessionActivationStateChangedTo:
initWithVoicemailUUID:played:
storeCreationBlock
setStore:
store
_performMigrationsStartingAtSchemaVersion:error:
setStartingSchemaVersion:
setEndingSchemaVersion:
setRequiresExtensionDisablement:
setRequiresExtensionSynchronization:
namesOfColumnsInTableWithName:error:
retrieveExtensionBlock
isEnabledViaPlugInKit
numberWithInt:
startingSchemaVersion
endingSchemaVersion
performMigrationsWithError:
setStoreCreationBlock:
setRetrieveExtensionBlock:
_store
_storeCreationBlock
_retrieveExtensionBlock
requiresExtensionDisablement
requiresExtensionSynchronization
_requiresExtensionDisablement
_requiresExtensionSynchronization
_startingSchemaVersion
_endingSchemaVersion
UIBackgroundModes
callUUIDToGroupWith
setCallUUIDToGroupWith:
initWithCallUUID:callUUIDToGroupWith:
_callUUIDToGroupWith
digits
setDigits:
initWithCallUUID:digits:type:
_digits
sharedXPCClientSemaphore
alloc
_init
_invalidate
sharedXPCClient
weakObjectsHashTable
_requestVoicemails
mutableVoicemailUUIDToVoicemailMap
delegates
_remoteObjectProxyWithErrorHandler:isSynchronous:
releaseSharedXPCClient
voicemailUUIDToVoicemailMap
isEqualToVoicemail:
dataSourceVoicemailsChanged:
_addOrUpdateVoicemails:
requestVoicemails:
initWithMachServiceName:options:
cx_voicemailControllerVendorInterface
cx_voicemailControllerHostInterface
synchronousRemoteObjectProxyWithErrorHandler:
_removeVoicemails:
addDelegate:
removeDelegate:
requestTransaction:completion:
addOrUpdateVoicemails:
removeVoicemails:
notifyToken
_notifyToken
_mutableVoicemailUUIDToVoicemailMap
_delegates
handoffIdentifier
isOutgoing
remoteHandle
context
initWithHandoffIdentifier:
integerValue
numberWithBool:
isEqualToHandoffContext:
initWithDictionaryRepresentation:
dictionaryRepresentation
setOutgoing:
setRemoteHandle:
setContext:
_outgoing
_handoffIdentifier
_remoteHandle
_context
completeRequestReturningItems:completionHandler:
_setRequestCleanUpBlock:
registerCurrentConfiguration
requiresProxyingAVAudioSessionState
initWithDataSource:queue:
dataSource
voicemailObserverVoicemailsChanged:
voicemails
_dataSource
cx_allowedClasses
interfaceWithProtocol:
cx_setAllowedClassesForProviderVendorProtocol
setByAddingObjectsFromArray:
_cx_providerAllowedClasses
setClasses:forSelector:argumentIndex:ofReply:
requestCalls:
_cx_setAllowedClassesForCallControllerHostProtocol
_cx_setAllowedClassesForCallControllerVendorProtocol
_cx_callControllerAllowedClasses
cx_callControllerHostInterface
cx_callControllerVendorInterface
reportNewVoicemailsWithUpdates:
reportVoicemailsUpdated:
reportVoicemailsRemovedWithUUIDs:
cx_setAllowedClassesForVoicemailProviderHostProtocol
cx_setAllowedClassesForVoicemailProviderVendorProtocol
_cx_voicemailProviderAllowedClasses
cx_voicemailProviderHostInterface
cx_voicemailProviderVendorInterface
_cx_setAllowedClassesForVoicemailControllerHostProtocol
_cx_setAllowedClassesForVoicemailControllerVendorProtocol
_cx_voicemailControllerAllowedClasses
_cx_setAllowedClassesForCallDirectoryManagerDefaultHostProtocol
_cx_callDirectoryManagerAllowedClasses
cx_callDirectoryManagerDefaultHostInterface
cx_callDirectoryManagerMaintenanceHostInterface
_cx_setAllowedClassesForCallDirectoryProviderHostProtocol
_cx_callDirectoryProviderAllowedClasses
cx_errorWithCode:
cx_incomingCallErrorWithCode:
reportCallWithUUID:updated:reply:
reportCallWithUUID:endedAtDate:privateReason:failureContext:reply:
reportOutgoingCallWithUUID:sentInvitationAtDate:reply:
reportOutgoingCallWithUUID:startedConnectingAtDate:reply:
reportOutgoingCallWithUUID:connectedAtDate:reply:
reportAudioFinishedForCallWithUUID:reply:
reportCallWithUUID:changedFrequencyData:forDirection:reply:
reportCallWithUUID:changedMeterLevel:forDirection:reply:
reportCallWithUUID:crossDeviceIdentifier:changedBytesOfDataUsed:reply:
actionCompleted:reply:
_connected
completionQueue
_requestTransaction:completion:
requestTransactionWithActions:completion:
voicemailObserver
requestTransactionWithAction:completion:
_voicemailObserver
_completionQueue
groupUUID
remoteMembers
callerID
isVideoEnabled
isUplinkMuted
shouldSuppressInCallUI
dateStarted
wantsStagingArea
isUpgrade
upgradeSessionUUID
messagesGroupUUID
messagesGroupName
fulfillWithDateStarted:
updateAsFulfilledWithDateStarted:
setDateStarted:
setGroupUUID:
setRemoteMembers:
setCallerID:
setVideoEnabled:
setUplinkMuted:
setShouldSuppressInCallUI:
setWantsStagingArea:
setUpgrade:
setMessagesGroupUUID:
setMessagesGroupName:
setUpgradeSessionUUID:
decodeObjectForKey:
initWithCallUUID:groupUUID:
_videoEnabled
_uplinkMuted
_shouldSuppressInCallUI
_wantsStagingArea
_upgrade
_groupUUID
_remoteMembers
_callerID
_upgradeSessionUUID
_messagesGroupUUID
_messagesGroupName
_dateStarted
setVoicemailUUID:
outstandingTransactionGroups
_setUpTimeoutForAction:callSource:
allActions
callUUID
_timeoutReachedForAction:callSource:
setOutstandingTransactionGroups:
_outstandingTransactionGroups
errorWithDomain:code:userInfo:
sqlQueryToStatements
finalize
initWithSQL:database:error:
bind:error:
executeSQL:withStatementPreparationBlock:transient:error:
_statementForSQL:transient:error:
executeWithError:
executeWithExpectedColumnCount:resultRowHandler:error:
beginTransactionWithError:
rollbackTransactionWithError:
commitTransactionWithError:
setUrl:
setSqlQueryToStatements:
_url
_sqlQueryToStatements
title
message
providerErrorCode
providerEndedReason
hasWiFiSettingsRemediation
hasCellularSettingsRemediation
hasDateAndTimeSettingsRemediation
hasLocationSettingsRemediation
setTitle:
setMessage:
setProviderErrorCode:
setProviderEndedReason:
setHasWiFiSettingsRemediation:
setHasCellularSettingsRemediation:
setHasDateAndTimeSettingsRemediation:
setHasLocationSettingsRemediation:
_hasWiFiSettingsRemediation
_hasCellularSettingsRemediation
_hasDateAndTimeSettingsRemediation
_hasLocationSettingsRemediation
_title
_message
_providerErrorCode
_providerEndedReason
setSupportsHolding:
setSupportsGrouping:
setSupportsUngrouping:
setSupportsDTMF:
setSupportsUnambiguousMultiPartyState:
setSupportsAddCall:
localizedCallerName
isEmergency
isUsingBaseband
isBlocked
mayRequireBreakBeforeMake
hasVideo
audioCategory
audioMode
audioInterruptionProvider
audioInterruptionOperationMode
verificationStatus
priority
requiresInCallSounds
inCallSoundRegion
supportsHolding
supportsGrouping
supportsUngrouping
supportsDTMF
supportsUnambiguousMultiPartyState
supportsAddCall
supportsSendingToVoicemail
videoStreamToken
crossDeviceIdentifier
ISOCountryCode
localSenderIdentityUUID
localSenderIdentityAccountUUID
remoteParticipantHandles
activeRemoteParticipantHandles
prefersExclusiveAccessToCellularNetwork
supportsTTYWithVoice
isRemoteUplinkMuted
requiresAuthentication
isMutuallyExclusiveCall
setLocalizedCallerName:
setEmergency:
setUsingBaseband:
setBlocked:
setTTYType:
setMayRequireBreakBeforeMake:
setHasVideo:
setAudioCategory:
setAudioMode:
setAudioInterruptionProvider:
setAudioInterruptionOperationMode:
setVerificationStatus:
setRequiresInCallSounds:
setInCallSoundRegion:
setSupportsSendingToVoicemail:
setVideoStreamToken:
setCrossDeviceIdentifier:
setISOCountryCode:
setLocalSenderIdentityUUID:
setLocalSenderIdentityAccountUUID:
setRemoteParticipantHandles:
setActiveRemoteParticipantHandles:
setPrefersExclusiveAccessToCellularNetwork:
setSupportsTTYWithVoice:
setRemoteUplinkMuted:
setRequiresAuthentication:
setMutuallyExclusiveCall:
callUpdateWithDefaultValuesSet
updateWithUpdate:
_supportsHolding
_supportsGrouping
_supportsUngrouping
_supportsDTMF
_hasVideo
_emergency
_usingBaseband
_blocked
_mayRequireBreakBeforeMake
_supportsTTYWithVoice
_requiresInCallSounds
_prefersExclusiveAccessToCellularNetwork
_remoteUplinkMuted
_mutuallyExclusiveCall
_supportsUnambiguousMultiPartyState
_supportsAddCall
_supportsSendingToVoicemail
_requiresAuthentication
_localizedCallerName
_inCallSoundRegion
_audioCategory
_audioMode
_audioInterruptionProvider
_audioInterruptionOperationMode
_verificationStatus
_priority
_crossDeviceIdentifier
_ISOCountryCode
_localSenderIdentityUUID
_localSenderIdentityAccountUUID
_remoteParticipantHandles
_activeRemoteParticipantHandles
_videoStreamToken
primaryKey
stateLastModified
decodeInt64ForKey:
encodeInt64:forKey:
_identifier
_primaryKey
_stateLastModified
voicemailSourceConnectionStarted:
voicemailSourceConnectionEnded:
voicemailSource:registeredWithConfiguration:
voicemailSource:requestedTransaction:completion:
voicemailSource:reportNewVoicemailsWithUpdates:
voicemailSource:reportVoicemailsUpdated:
voicemailSource:reportVoicemailsRemovedWithUUIDs:
voicemailSource:actionCompleted:
isRelaying
setRelaying:
initWithCallUUID:relaying:
_relaying
contactIdentifier
isVideo
isRelay
isRetry
isVoicemail
setHandle:
setContactIdentifier:
setVideo:
setRelay:
setVoicemail:
initWithCallUUID:handle:
setRetry:
_video
_relay
_retry
_voicemail
_handle
_contactIdentifier
label
isEqualToLabeledHandle:
initWithHandle:label:
setLabel:
_label
doesNotRecognizeSelector:
initWithUUID:description:serviceName:isoCountryCode:handle:shortLabel:
serviceName
isoCountryCode
shortLabel
_accountDescription
_shortLabel
_isoCountryCode
_serviceName
isMuted
setMuted:
initWithCallUUID:muted:
_muted
initWithCallUUID:ttyType:
voicemailSourceInvalidated:
extensionIdentifier
localizedExtensionName
localizedExtensionContainingAppName
localizedLabel
setExtensionIdentifier:
setLocalizedExtensionName:
setLocalizedExtensionContainingAppName:
_extensionIdentifier
_localizedExtensionName
_localizedExtensionContainingAppName
_localizedLabel
defaultCenter
handleMediaServicesWereResetNotification:
addObserver:selector:name:object:
provider:performStartCallAction:
provider:performAnswerCallAction:
provider:performEndCallAction:
provider:performSetHeldCallAction:
provider:performSetMutedCallAction:
provider:performSetGroupCallAction:
provider:performPlayDTMFCallAction:
provider:didActivateAudioSession:
provider:didDeactivateAudioSession:
provider:performSendMMIOrUSSDCodeAction:
provider:performJoinCallAction:
provider:performSetTTYTypeCallAction:
provider:performSetSendingVideoCallAction:
provider:performSetRelayingCallAction:
provider:performPullCallAction:
provider:performSetVideoPresentationSizeCallAction:
provider:performSetVideoPresentationStateCallAction:
isSubclassOfClass:
postNotificationName:object:
performCompletionBlock:
reportCallWithUUID:endedAtDate:privateReason:
sharedInstance
opaqueSessionID
setAudioSessionID:
setInterruptionPriority:error:
privateDelegate
initWithConfiguration:
configuration
setConfiguration:
pendingCallActionsOfClass:withCallUUID:
reportCallWithUUID:endedAtDate:reason:
reportCallWithUUID:failedAtDate:withContext:
setCompletionQueue:
setMutablePendingTransactions:
_configuration
callObserver
concurrentQueue
setCallObserver:
_callObserver
setClientsShouldConnect:
_requestCalls
mutableCallUUIDToCallMap
setHasEnded:
_removeCall:
isEqualToCall:
dataSource:callChanged:
clientsShouldConnect
_addOrUpdateCall:
_markAllCallsAsEnded
setClientsShouldConnectToken:
_clientsShouldConnect
_concurrentQueue
_mutableCallUUIDToCallMap
isSendingVideo
setSendingVideo:
initWithCallUUID:sendingVideo:
_sendingVideo
provider:performSetPlayedVoicemailAction:
provider:performSetTrashedVoicemailAction:
provider:performRemoveVoicemailAction:
pendingVoicemailActionsOfClass:withVoicemailUUID:
reportNewVoicemailWithUpdate:
reportVoicemailUpdated:
reportVoicemailRemovedWithUUID:
_extensionsChanged
manager
getExtensionsWithCompletionHandler:
extensionsChangedForCallDirectoryExtensionManager:
setPrioritizedExtensionIdentifiers:completionHandler:
setEnabled:forExtensionWithIdentifier:completionHandler:
beginObservingExtensions
setEnabled:forExtension:completion:
storeExtensionsChangedNotifyToken
setStoreExtensionsChangedNotifyToken:
_storeExtensionsChangedNotifyToken
_manager
serialQueue
setSerialQueue:
_serialQueue
initWithServiceName:
defaultConnection
maintenanceConnection
defaultConnectionRemoteObjectProxyWithErrorHandler:
firstIdentificationEntriesForEnabledExtensionsWithPhoneNumbers:completionHandler:
maintenanceConnectionRemoteObjectProxyWithErrorHandler:
reloadExtensionWithIdentifier:completionHandler:
getEnabledStatusForExtensionWithIdentifier:completionHandler:
firstIdentificationEntryForEnabledExtensionWithPhoneNumber:completionHandler:
synchronizeExtensionsWithCompletionHandler:
compactStoreWithCompletionHandler:
setDefaultConnection:
setMaintenanceConnection:
_defaultConnection
_maintenanceConnection
setNotifyToken:
dateEnded
fulfillWithDateEnded:
updateAsFulfilledWithDateEnded:
setDateEnded:
_dateEnded
_plugIn
localizedContainingName
containingUrl
uuid
pluginKitProxyForUUID:
userElection
localizedContainingAppName
containingAppURL
plugInKitProxy
videoPresentationSize
setVideoPresentationSize:
initWithCallUUID:videoPresentationSize:
_videoPresentationSize
videoPresentationState
setVideoPresentationState:
initWithCallUUID:videoPresentationState:
_videoPresentationState
voicemailControllerHostConnectionInvalidated:
voicemailControllerHostConnection:requestVoicemails:
voicemailControllerHostConnection:requestTransaction:completion:
callSource
initWithIdentifier:callSource:configuration:
setCallSource:
_callSource
isOnlyExtensionInContainingApp
setLocalizedName:
setLocalizedContainingAppName:
setPlugInKitProxy:
setOnlyExtensionInContainingApp:
_onlyExtensionInContainingApp
_localizedName
_localizedContainingAppName
_plugInKitProxy
callSourceIdentifierToTransaction
transactions
_callSourceIdentifierToTransaction
decimalDigitCharacterSet
invertedSet
whitespaceCharacterSet
formUnionWithCharacterSet:
punctuationCharacterSet
addCharactersInString:
phoneNumbersIgnoredCharacterSet
componentsSeparatedByCharactersInSet:
nonPhoneNumbersCharacterSet
rangeOfCharacterFromSet:
canonicalizedPhoneNumber:
phoneNumbersCharacterSet
_phoneNumbersCharacterSet
_nonPhoneNumbersCharacterSet
_phoneNumbersIgnoredCharacterSet
phoneNumbers
orderedSet
ringtoneSoundURL
iconTemplateImageData
maximumCallGroups
maximumCallsPerCallGroup
supportsAudioOnly
supportsVideo
supportsEmergency
supportsVoicemail
supportsCurrentPlatform
includesCallsInRecents
audioSessionID
supportedHandleTypes
emergencyHandles
emergencyLabeledHandles
handoffIdentifiers
prioritizedSenderIdentities
orderedSetWithSet:
setPrioritizedSenderIdentities:
lastPathComponent
setRingtoneSoundURL:
URLsForDirectory:inDomains:
attributesOfItemAtPath:error:
mainBundle
isEqualToConfiguration:
isEqualToArray:
isEqualToOrderedSet:
isEqualToData:
isEqualToSet:
setIconTemplateImageData:
setMaximumCallGroups:
setMaximumCallsPerCallGroup:
setSupportsVideo:
setIncludesCallsInRecents:
setSupportedHandleTypes:
initWithLocalizedName:
setEmergencyHandles:
setEmergencyLabeledHandles:
setHandoffIdentifiers:
setSupportsAudioOnly:
setSupportsEmergency:
setSupportsVoicemail:
setSupportsCurrentPlatform:
exceptionWithName:reason:userInfo:
decodeInt32ForKey:
cx_clientSandboxCanAccessFileURL:
encodeInt32:forKey:
setSenderIdentities:
senderIdentities
ringtoneSound
setRingtoneSound:
_includesCallsInRecents
_supportsVideo
_supportsAudioOnly
_supportsEmergency
_supportsVoicemail
_supportsCurrentPlatform
_audioSessionID
_iconTemplateImageData
_maximumCallGroups
_maximumCallsPerCallGroup
_supportedHandleTypes
_emergencyHandles
_emergencyLabeledHandles
_handoffIdentifiers
_prioritizedSenderIdentities
_ringtoneSoundURL
auditToken
stringWithUTF8String:
setWithArray:
isFileURL
checkResourceIsReachableAndReturnError:
fileSystemRepresentation
cx_developerTeamIdentifier
cx_processName
setCallUUID:
_callUUID
initWithDataSource:concurrentQueue:
callObserver:callChanged:
calls
statement
setStatement:
processResultsWithExpectedColumnCount:resultRowHandler:error:
sleepForTimeInterval:
dataWithBytes:length:
null
_statement
_voicemailsForVoicemailControllerHostConnection:
voicemailControllerHost:clientWithIdentifier:requestedTransaction:completion:
initWithVoicemails:delegate:queue:
setVoicemailUUIDToVoicemailMap:
_voicemailUUIDToVoicemailMap
extensionBundleIdentifier
_extensionBundleIdentifier
remoteObjectProxyGenerator
pendingBlockingEntryChangeType
pendingBlockingEntryData
_flushPendingBlockingEntryData
setPendingBlockingEntryChangeType:
pendingIdentificationEntryChangeType
pendingIdentificationEntryDataForAddition
pendingIdentificationEntryDataForRemoval
_flushPendingIdentificationEntryData
setPendingIdentificationEntryChangeType:
setPendingBlockingEntryData:
_remoteObjectProxyWithErrorHandler:synchronous:
setPendingIdentificationEntryDataForAddition:
setPendingIdentificationEntryDataForRemoval:
hasQueriedIsIncremental
setHasQueriedIsIncremental:
appendBlockingEntryPhoneNumber:changeType:
isIncremental
_performBlockIfIncremental:usingSelectorForExceptionMessage:
appendIdentificationEntryForAdditionWithPhoneNumber:label:
appendIdentificationEntryForRemovalWithPhoneNumber:
requestFailedForExtensionContext:withError:
addBlockingEntryWithNextSequentialPhoneNumber:
removeBlockingEntryWithPhoneNumber:
removeAllBlockingEntries
addIdentificationEntryWithNextSequentialPhoneNumber:label:
removeIdentificationEntryWithPhoneNumber:
removeAllIdentificationEntries
completeRequestWithCompletionHandler:
setRemoteObjectProxyGenerator:
_incremental
_hasQueriedIsIncremental
_pendingBlockingEntryData
_pendingBlockingEntryChangeType
_pendingIdentificationEntryDataForAddition
_pendingIdentificationEntryDataForRemoval
_pendingIdentificationEntryChangeType
_remoteObjectProxyGenerator
hasConnected
hasEnded
isEndpointOnCurrentDevice
isHostedOnCurrentDevice
setHasConnected:
setProviderIdentifier:
setEndpointOnCurrentDevice:
setHostedOnCurrentDevice:
_hasConnected
_hasEnded
_endpointOnCurrentDevice
_hostedOnCurrentDevice
_providerIdentifier
@16@0:8
v16@0:8
v32@0:8@16@24
v24@0:8@?16
v36@0:8@16i24@?28
v40@0:8@16@24@?32
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"<CXCallDirectoryNSExtensionManagerDelegate>"
@24@0:8q16
B16@0:8
@24@0:8^{_NSZone=}16
@24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@32@0:8q16@24
B24@0:8@16
Q16@0:8
q16@0:8
v24@0:8q16
@"NSString"
@28@0:8@16B24
v32@0:8@16^{_NSZone=}24
v20@0:8B16
i16@0:8
@"NSURL"
@"CXInProcessProvider"
d16@0:8
@"CXHandoffContext"
@"NSDate"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSUUID"
@"<CXActionDelegate>"
{CGSize=dd}16@0:8
v32@0:8{CGSize=dd}16
{CGSize="width"d"height"d}
Vv32@0:8@16@?24
Vv36@0:8B16@20@?28
Vv24@0:8@?16
Vv32@0:8@"NSString"16@?<v@?@"NSError">24
Vv32@0:8@"NSString"16@?<v@?q@"NSError">24
Vv36@0:8B16@"NSString"20@?<v@?@"NSError">28
Vv32@0:8@"NSArray"16@?<v@?@"NSDictionary"@"NSError">24
Vv24@0:8@?<v@?@"NSArray"@"NSError">16
Vv32@0:8@"NSArray"16@?<v@?@"NSError">24
Vv24@0:8@?<v@?@"NSError">16
v32@0:8@16@?24
@"<CXCallDirectoryHostDelegate>"
@32@0:8@16^@24
@40@0:8@16@24@32
@32@0:8@16@24
@24@0:8^@16
@"CXAccount"
Vv24@0:8@16
Vv24@0:8@"CXTransaction"16
Vv24@0:8@"CXAction"16
Vv20@0:8B16
Vv40@0:8@16@24@?32
Vv32@0:8@16@24
Vv48@0:8@16@24q32@40
Vv40@0:8@16@24q32
Vv36@0:8@16f24q28
Vv24@0:8@"CXProviderConfiguration"16
Vv40@0:8@"NSUUID"16@"CXCallUpdate"24@?<v@?@"NSError">32
Vv32@0:8@"NSUUID"16@"CXCallUpdate"24
Vv48@0:8@"NSUUID"16@"NSDate"24q32@"CXCallFailureContext"40
Vv32@0:8@"NSUUID"16@"NSDate"24
Vv24@0:8@"NSUUID"16
Vv40@0:8@"NSUUID"16@"NSData"24q32
Vv36@0:8@"NSUUID"16f24q28
Vv40@0:8@"NSUUID"16@"NSString"24q32
Vv32@0:8@"CXTransaction"16@?<v@?@"NSError">24
@24@0:8@?16
@"<CXProviderHostProtocol>"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@"CXCallControllerHostConnection"16
v32@0:8@"CXCallControllerHostConnection"16@?<v@?@"NSArray">24
v40@0:8@"CXCallControllerHostConnection"16@"CXTransaction"24@?<v@?@"NSError">32
@"<CXCallControllerHostDelegate>"
@"NSXPCListener"
@"NSMutableDictionary"
@"NSMutableSet"
{CXVoicemailUpdateHasSet=b1b1b1b1b1}16@0:8
v20@0:8{CXVoicemailUpdateHasSet=b1b1b1b1b1}16
{CXVoicemailUpdateHasSet="sender"b1"dateReceived"b1"audioFileURL"b1"played"b1"trashed"b1}
@"CXHandle"
v24@0:8@"CXAction"16
@"NSMutableArray"
@"<CXAbstractProviderDelegate>"
v24@0:8@"NSExtensionContext"16
@"NSMutableOrderedSet"
@"CXProviderExtensionHostContext"
@"NSExtension"
@"<NSCopying>"
@"NSXPCConnection"
@"NSSet"
v48@0:8@16@24@32@?40
v40@0:8@16@24@32
v56@0:8@16@24@32q40@48
v48@0:8@16@24@32q40
v44@0:8@16@24f32q36
v32@0:8@"CXCallSource"16@"CXProviderConfiguration"24
v48@0:8@"CXCallSource"16@"NSUUID"24@"CXCallUpdate"32@?<v@?@"NSError">40
v40@0:8@"CXCallSource"16@"NSUUID"24@"CXCallUpdate"32
v56@0:8@"CXCallSource"16@"NSUUID"24@"NSDate"32q40@"CXCallFailureContext"48
v40@0:8@"CXCallSource"16@"NSUUID"24@"NSDate"32
v32@0:8@"CXCallSource"16@"NSUUID"24
v48@0:8@"CXCallSource"16@"NSUUID"24@"NSData"32q40
v44@0:8@"CXCallSource"16@"NSUUID"24f32q36
v48@0:8@"CXCallSource"16@"NSUUID"24@"NSString"32q40
v40@0:8@"CXCallSource"16@"CXTransaction"24@?<v@?@"NSError">32
v32@0:8@"CXCallSource"16@"CXAction"24
v24@0:8@"CXCallSource"16
v40@0:8@"CXTransactionManager"16@"CXAction"24@"CXCallSource"32
v32@0:8@"CXTransactionManager"16@"CXTransactionGroup"24
@"<CXCallSourceManagerDelegate>"
@"CXTransactionGroup"
@"CXTransactionManager"
q24@0:8Q16
r*32@0:8Q16o^S24
@"NSData"
@24@0:8Q16
B32@0:8q16@24
@"NSMutableData"
@28@0:8B16^@20
B40@0:8@16@24^@32
@32@0:8B16B20^@24
@40@0:8@16B24B28^@32
q24@0:8^@16
B32@0:8@16^@24
q32@0:8@16^@24
q40@0:8@16q24^@32
B40@0:8q16@24^@32
B40@0:8q16q24^@32
B40@0:8@16q24^@32
B32@0:8q16^@24
B24@0:8^@16
@40@0:8@16@24Q32
@32@0:8@16q24
B56@0:8@16Q24Q32q40^@48
B48@0:8q16q24q32^@40
q32@0:8q16^@24
B48@0:8@16Q24Q32^@40
B32@0:8@?16^@24
@40@0:8@16@24^@32
B48@0:8@16@24@?32^@40
@"CXDatabase"
Vv24@0:8@?<v@?B@"NSError">16
Vv32@0:8@"CXCallDirectoryPhoneNumberEntryData"16@?<v@?>24
Vv24@0:8@?<v@?>16
Vv32@0:8@"CXCallDirectoryLabeledPhoneNumberEntryData"16@?<v@?>24
@"<CXCallDirectoryProviderHostProtocol>"
@"<CXProviderExtensionVendorContextDelegate>"
@32@0:8q16^@24
@?16@0:8
@"CXCallDirectoryStore"
@40@0:8@16@24q32
v24@0:8@"<CXVoicemailObserverDataSourceDelegate>"16
v32@0:8@"CXTransaction"16@?<v@?@"NSError">24
@"NSDictionary"16@0:8
@28@0:8@?16B24
@"NSHashTable"
@"NSDictionary"
v28@0:8@16B24
v32@0:8@"CXProviderExtensionVendorContext"16@"CXTransaction"24
v32@0:8@"CXProviderExtensionVendorContext"16@"CXAction"24
v28@0:8@"CXProviderExtensionVendorContext"16B24
@"CXProviderExtensionVendorContext"
v24@0:8@"<CXVoicemailObserverDataSource>"16
@"<CXVoicemailObserverDelegate>"
@"<CXVoicemailObserverDataSource>"
Vv24@0:8@?<v@?@"NSArray">16
Vv24@0:8@"CXCall"16
Vv24@0:8@"NSArray"16
Vv32@0:8@"NSError"16@?<v@?>24
v56@0:8@16@24q32@40@?48
v48@0:8@16@24q32@?40
v44@0:8@16f24q28@?36
@"<CXCallSourceDelegate>"
@"CXVoicemailObserver"
@"<CXTransactionManagerDelegate>"
@36@0:8@16B24^@28
B32@0:8d16^@24
B44@0:8@16@24B32^@36
B40@0:8@16@?24^@32
B44@0:8@16@?24B32^@36
B56@0:8@16@24q32@?40^@48
B60@0:8@16@24q32B40@?44^@52
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3=}
{CXCallUpdateHasSet=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}16@0:8
v24@0:8{CXCallUpdateHasSet=b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1b1}16
{CXCallUpdateHasSet="remoteHandle"b1"localizedCallerName"b1"emergency"b1"usingBaseband"b1"blocked"b1"ttyType"b1"supportsTTYWithVoice"b1"mayRequireBreakBeforeMake"b1"hasVideo"b1"audioCategory"b1"audioMode"b1"audioInterruptionProvider"b1"audioInterruptionOperationMode"b1"verificationStatus"b1"priority"b1"requiresInCallSounds"b1"inCallSoundRegion"b1"supportsHolding"b1"supportsGrouping"b1"supportsUngrouping"b1"supportsDTMF"b1"supportsUnambiguousMultiPartyState"b1"supportsAddCall"b1"supportsSendingToVoicemail"b1"videoStreamToken"b1"crossDeviceIdentifier"b1"ISOCountryCode"b1"localSenderIdentityUUID"b1"localSenderIdentityAccountUUID"b1"remoteParticipantHandles"b1"activeRemoteParticipantHandles"b1"handoffContext"b1"context"b1"prefersExclusiveAccessToCellularNetwork"b1"remoteUplinkMuted"b1"shouldSuppressInCallUI"b1"requiresAuthentication"b1"mutuallyExclusiveCall"b1}
@"<CXVoicemailSourceDelegate>"
@56@0:8@16@24@32@40@48
@64@0:8@16@24@32@40@48@56
v24@0:8@"CXProvider"16
B32@0:8@"CXProvider"16@"CXTransaction"24
v32@0:8@"CXProvider"16@"CXStartCallAction"24
v32@0:8@"CXProvider"16@"CXAnswerCallAction"24
v32@0:8@"CXProvider"16@"CXEndCallAction"24
v32@0:8@"CXProvider"16@"CXSetHeldCallAction"24
v32@0:8@"CXProvider"16@"CXSetMutedCallAction"24
v32@0:8@"CXProvider"16@"CXSetGroupCallAction"24
v32@0:8@"CXProvider"16@"CXPlayDTMFCallAction"24
v32@0:8@"CXProvider"16@"CXAction"24
v32@0:8@"CXProvider"16@"AVAudioSession"24
v32@0:8@"CXProvider"16@"CXSendMMIOrUSSDCodeAction"24
v32@0:8@"CXProvider"16@"CXJoinCallAction"24
v32@0:8@"CXProvider"16@"CXSetTTYTypeCallAction"24
v32@0:8@"CXProvider"16@"CXSetSendingVideoCallAction"24
v32@0:8@"CXProvider"16@"CXSetRelayingCallAction"24
v32@0:8@"CXProvider"16@"CXPullCallAction"24
v32@0:8@"CXProvider"16@"CXSetVideoPresentationSizeCallAction"24
v32@0:8@"CXProvider"16@"CXSetVideoPresentationStateCallAction"24
@32@0:8#16@24
v40@0:8@16@24q32
v48@0:8@16@24q32@40
v36@0:8@16f24q28
@"CXProviderConfiguration"
@"<CXProviderDelegate>"
@"CXCallObserver"
v24@0:8@"<CXCallObserverDataSourceDelegate>"16
v20@0:8i16
v36@0:8B16@20@?28
@"CXCallDirectoryManager"
@"<CXCallDirectoryExtensionManagerDelegate>"
@"<CXCallControllerHostConnectionDelegate>"
@40@0:8@16{CGSize=dd}24
@"<CXVoicemailControllerHostConnectionDelegate>"
@"CXInProcessCallSource"
@"LSPlugInKitProxy"
@"NSCharacterSet"
r^q16@0:8
v24@0:8Q16
I16@0:8
v20@0:8I16
@"NSArray"
@"NSOrderedSet"
v32@0:8@"<CXCallObserverDataSource>"16@"CXCall"24
@"<CXCallObserverDelegate>"
@"<CXCallObserverDataSource>"
B40@0:8q16@?24^@32
B36@0:8q16i24^@28
B40@0:8r*16i24i28^@32
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
^{sqlite3_stmt=}
v24@0:8@"CXVoicemailControllerHostConnection"16
v32@0:8@"CXVoicemailControllerHostConnection"16@?<v@?@"NSArray">24
v40@0:8@"CXVoicemailControllerHostConnection"16@"CXTransaction"24@?<v@?@"NSError">32
@"<CXVoicemailControllerHostDelegate>"
v32@0:8q16q24
v32@0:8q16@24
v32@0:8@?16:24
@"<CXCallDirectoryExtensionContextDelegate>"
@"CXCallDirectoryMutablePhoneNumberEntryData"
@"CXCallDirectoryMutableLabeledPhoneNumberEntryData"
