@(#)PROGRAM:NanoHealthDaemon  PROJECT:NanoLifestyle-1
?333333
@ffffff
com.apple.nanolifestyle.NLMockCoachingSubmanager
com.apple.NanoHealthPlugin
EnableStandReminders
EnableProgressUpdates
EnableGoalCompletions
RemindersPerDay
EnableWeeklySummary
com.apple.DeepBreathing
InternalABTestingConditionOverride
AppleInternalDataCollectionEnabled
SeedStudyDataCollectionEnabled
AllowInternalABTesting
cachedSedentaryHours
sedentaryTimerMostRecentRemindedHour
sedentaryTimerMostRecentReminderExperimentInstance
sedentaryTimerMostRecentCongratulatedHour
sedentaryTimerMostRecentMovedHour
presentWeeklySummaryImmediately
com.apple.managedconfiguration.defaultsdidchange
NLDisableActivityAlerts
v8@?0
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
goalType
Tq,N
Tq,N,VgoalType
queue
DeepBreathing
NLDeepBreathingReminderAlertFireDate
DeepBreathingReminder
com.apple.nanolifestyle.deepBreathing
sedentary
moving (but will alert anyway)
v28@?0@"NLActivityAlarmMonitor"8B16@"NSError"20
coachingSubmanagerDelegate
T@"<NLCoachingSubmanagerDelegate>",W,N
typicalDayModel
T@"FITypicalDayActivityModel",W,N
shouldFireOnNextPoll
TB,V_shouldFireOnNextPoll
T@"<NLCoachingSubmanagerDelegate>",W,N,VcoachingSubmanagerDelegate
T@"FITypicalDayActivityModel",W,N,VtypicalDayModel
v24@?0@"HKActivitySummary"8^B16
q24@?0@"HKActivitySummary"8@"HKActivitySummary"16
v32@?0@"HKActivitySummary"8Q16^B24
com.apple.nanolifestyle.NLCoachingManager
pollingQueue
activitySummaryQueue
overrideQueue
serialQueue
v24@?0@"NSString"8@"HDBackgroundTask"16
ForceCoaching
Activity alerts suppressed (workout in progress)
v12@?0B8
SignificantTimeChangeNotification
v12@?0i8
NLCoachingManager
com.apple.nanolifestyle.rings.completed
com.apple.nanolifestyle.settings.ActivitySetup
v24@?0@"NSArray"8@"NSError"16
not 
NLCoachingManagerScheduledRunDates
v32@?0@"NSString"8@"NSDate"16^B24
q24@?0@"NSNumber"8@"NSNumber"16
No polling reasons
Not on wrist, polling skipped
PerformPoll
Protected data not available
v32@?0@"NSNumber"8Q16^B24
Polling did not complete
T@"FITypicalDayActivityModel",R,N,V_typicalDayModel
%@ %@
timestamp
onWrist
hasTimestamp
TB,N
TQ,N,V_timestamp
hasOnWrist
TB,N,V_onWrist
com.apple.nanolifestyle.coaching.goalCompletion
dailyGoalCompletionData
move
exercise
stand
None
Move
Exercise
Stand
v24@?0@"ACHAchievement"8@"NSString"16
@"NSString"32@?0@"ACHAchievement"8d16d24
2000MoveGoals
1750MoveGoals
1500MoveGoals
1250MoveGoals
1000MoveGoals
500MoveGoals
365MoveGoals
100MoveGoals
@"ACHAchievement"16@?0@"NSString"8
LongestMoveStreak
PerfectWeekAll
7WorkoutWeek
PerfectWeekMove
PerfectWeekExercise
PerfectWeekStand
_MILESTONE
B16@?0@"ACHAchievement"8
q24@?0@"ACHAchievement"8@"ACHAchievement"16
NanoLifestyleEnableFitnessDataCollectionSettingDidChangeNotification
observerQueue
NanoLifestyleDeepBreathingPreferencesChangedNotification
NanoLifestylePrivacyPreferencesChangedNotification
awdMetricId
awdCodableData
hasAwdMetricId
TI,N,V_awdMetricId
hasAwdCodableData
TB,R,N
T@"NSData",&,N,V_awdCodableData
cacheIndex
energyBurned
briskMinutes
activeHours
stepCount
energyBurnedGoal
walkingAndRunningDistance
energyBurnedGoalDate
startDate
endDate
hasCacheIndex
Tq,N,V_cacheIndex
hasEnergyBurned
Tq,N,V_energyBurned
hasBriskMinutes
Tq,N,V_briskMinutes
hasActiveHours
Tq,N,V_activeHours
hasStepCount
Tq,N,V_stepCount
hasEnergyBurnedGoal
Tq,N,V_energyBurnedGoal
hasWalkingAndRunningDistance
Tq,N,V_walkingAndRunningDistance
hasEnergyBurnedGoalDate
Tq,N,V_energyBurnedGoalDate
hasStartDate
Tq,N,V_startDate
hasEndDate
Tq,N,V_endDate
com.apple.nanolifestyle.coaching.progress
NLDailyGoalProgressManagerFirstWristOnDateToday
com.apple.nanolifestyle.setting.%@.wriston
locationUUID
locationType
uncertaintyMillis
confidenceMillis
recentVisitCount
hasLocationUUID
T@"NSString",&,N,V_locationUUID
hasLocationType
Ti,N,V_locationType
hasUncertaintyMillis
Tq,N,V_uncertaintyMillis
hasConfidenceMillis
Tq,N,V_confidenceMillis
hasRecentVisitCount
Tq,N,V_recentVisitCount
Unknown
Home
Work
(unknown: %i)
experimentIdentifier
testCondition
hasExperimentIdentifier
T@"NSString",&,N,V_experimentIdentifier
hasTestCondition
Tq,N,V_testCondition
com.apple.nanolifestyle.NLFirstGlanceManager.dayafterwriston
mostRecentFirstGlanceAlertDate
typeForToday
NLFirstGlanceManagerPresentationDelay
NLForceShowFirstGlanceNotification
experimentalCondition
hasExperimentalCondition
T@"NLAWDHealthKitExperimentalCondition",&,N,V_experimentalCondition
observer_queue
hid_event_queue
Placement
DeviceUsagePage
DeviceUsage
dataSource
T@"<NLFirstGlanceEngineDataSource>",&,N,V_dataSource
T@"<NLCoachingSubmanagerDelegate>",W,N,V_coachingSubmanagerDelegate
dwelltimeMs
dismissReason
scrollBehavior
hasDwelltimeMs
TQ,N,V_dwelltimeMs
hasDismissReason
Ti,N,V_dismissReason
hasScrollBehavior
Ti,N,V_scrollBehavior
AutoDismissNotDisplayed
AutoDismissDisplayed
CrownPressed
SwipeToDismiss
ActionButton
DismissButton
Other
DisableButton
Mute
Timeout
DoNotDisturb
Snooze
PositiveAction
CrownPressedGroup
SwipeToDismissGroup
DoneButtonGroup
ClearButtonGroup
ClearOrbGroup
EditToClear
Invalidated
LaunchApp
UnknownReason
Bottom
weightKg
heightCm
biologicalSex
ageYears
hasWeightKg
Tq,N,V_weightKg
hasHeightCm
Tq,N,V_heightCm
hasBiologicalSex
Tq,N,V_biologicalSex
hasAgeYears
Tq,N,V_ageYears
past
future
pasts
T@"NSMutableArray",&,N,V_pasts
futures
T@"NSMutableArray",&,N,V_futures
com.apple.ActivityAchievements.Alerting.Earned
com.apple.ActivityAchievements.Alerting.Unearned
ActivityAchievementsLastScheduledWristOnAlertDate
v16@?0@"<ACHAchievementsProfileExtending>"8
@16@?0@"NLCoachingAlertRequest"8
ActivityAchievementsTenMinutesAfterWristOnTask
NLAchievementManagerScheduledAchievementDelay
achievementStore
T@"ACHAchievementStore",W,N,V_achievementStore
profile
T@"HDProfile",W,N,V_profile
bridgeSettings
T@"NLBridgeSettings",&,N,V_bridgeSettings
earnedKeyValueDomain
T@"HDKeyValueDomain",&,N,V_earnedKeyValueDomain
unearnedKeyValueDomain
T@"HDKeyValueDomain",&,N,V_unearnedKeyValueDomain
gregorianCalendar
T@"NSCalendar",&,N,V_gregorianCalendar
lastScheduledWristOnAlertDate
T@"NSDate",&,N
achievementsToAlert
T@"NSMutableDictionary",&,N,V_achievementsToAlert
pendingAlertRequests
T@"NSSet",&,N,V_pendingAlertRequests
achievementsToAlertWhenProtectedDataAvailable
T@"NSSet",&,N,V_achievementsToAlertWhenProtectedDataAvailable
alertedAchievementsToRegisterWhenProtectedDataAvailable
T@"NSSet",&,N,V_alertedAchievementsToRegisterWhenProtectedDataAvailable
T@"FITypicalDayActivityModel",W,N,V_typicalDayModel
v16@?0@"HKActivitySummary"8
thirdPartyAppsCount
thirdPartyAppsWroteDataCount
databaseSizeMB
rowCountObjects
percentageDeletedObjects
manuallyEnteredTypesCount
highFrequencyDataSizeMB
hasWatchSource
rowCountCDA
lastMonthRowsAdded
lastMonthDatabaseSizeIncreaseMB
hasThirdPartyAppsCount
Tq,N,V_thirdPartyAppsCount
hasThirdPartyAppsWroteDataCount
Tq,N,V_thirdPartyAppsWroteDataCount
hasDatabaseSizeMB
Tq,N,V_databaseSizeMB
hasRowCountObjects
Tq,N,V_rowCountObjects
hasPercentageDeletedObjects
Tq,N,V_percentageDeletedObjects
hasManuallyEnteredTypesCount
Tq,N,V_manuallyEnteredTypesCount
hasHighFrequencyDataSizeMB
Tq,N,V_highFrequencyDataSizeMB
hasHasWatchSource
TB,N,V_hasWatchSource
hasRowCountCDA
Ti,N,V_rowCountCDA
hasLastMonthRowsAdded
Tq,N,V_lastMonthRowsAdded
hasLastMonthDatabaseSizeIncreaseMB
Tq,N,V_lastMonthDatabaseSizeIncreaseMB
Zero
OneToFive
SixToForty
MoreThanForty
enableStandReminders
progressUpdateFrequency
enableGoalCompletions
enableAchievements
enableWeeklySummary
timeZoneOffset
numberOfEvents
eventBusyTime
daysSinceFirstCalorieGoal
userCharacteristics
achievementStatistics
wellnessComplicationOnWatchFace
firstCalendarItemOfDay
hasEnableStandReminders
TB,N,V_enableStandReminders
hasProgressUpdateFrequency
Tq,N,V_progressUpdateFrequency
hasEnableGoalCompletions
TB,N,V_enableGoalCompletions
hasEnableAchievements
TB,N,V_enableAchievements
hasEnableWeeklySummary
TB,N,V_enableWeeklySummary
hasTimeZoneOffset
Tq,N,V_timeZoneOffset
hasNumberOfEvents
Tq,N,V_numberOfEvents
hasEventBusyTime
Tq,N,V_eventBusyTime
hasDaysSinceFirstCalorieGoal
Tq,N,V_daysSinceFirstCalorieGoal
hasUserCharacteristics
T@"NLAWDHealthKitUserCharacteristics",&,N,V_userCharacteristics
hasAchievementStatistics
T@"NLAWDHealthKitAchievementStatistics",&,N,V_achievementStatistics
hasWellnessComplicationOnWatchFace
TB,N,V_wellnessComplicationOnWatchFace
hasFirstCalendarItemOfDay
T@"NLAWDHealthKitConcurrentCalendarItem",&,N,V_firstCalendarItemOfDay
state
Tq,N,V_state
delegate
T@"<NLSedentaryTimerStateEngineDelegate>",W,N,V_delegate
*** Unable to create log name.
*** Error creating log file at %@
*** Error setting protection class for %@, %@
*** Error writing journal version %ld.
BuildVersion
*** Error writing os build %@.
*** Wrote wrong number of bytes to log, expected: %lu, actual: %llu (error %d: %s)
*** Exception writing to log: %@
%05ld.log
*** Log file too short for expected data, Offset: %lu Length: %ld, fileSize: %llu
*** Unknown entry (%lu bytes at offset %llu) found in log, stopping.
*** Log file too short for expected data, Offset: %lu Length: %d, fileSize: %ld
*** Unknown entry (%d bytes at offset %lu) found in log, stopping.
*** Error opening log file %@, %@
*** Log file fstat failed: %s
*** Could not read the version from the log.
Unable to read build length from log file
Unable to read build number from log file
path
T@"NSString",C,N,V_path
logLock
T@"NSLock",&,N,V_logLock
fileHandle
T@"NSFileHandle",&,N,V_fileHandle
com.apple.ActivitySharing.Plugin
B32@?0@"HKObject"8q16^@24
location
arrivalDate
hasLocation
T@"NLAWDHealthKitRoutineLocation",&,N,V_location
hasArrivalDate
Tq,N,V_arrivalDate
B24@?0d8d16
currentActivitySummary
T@"HKActivitySummary",&,N,V_currentActivitySummary
previousActivitySummary
T@"HKActivitySummary",&,N,V_previousActivitySummary
T@"<NLDailyActivityGoalDetectionDelegate>",W,N,V_delegate
idx (%tu) is out of range (%tu)
alertType
dndEnabled
failedPosting
testAction
calendarItem
views
activityCache
achievement
weeklySummaryDetail
goalTypes
responseFlags
hasAlertType
Ti,N,V_alertType
hasDndEnabled
TB,N,V_dndEnabled
hasFailedPosting
TB,N,V_failedPosting
hasTestAction
Ti,N,V_testAction
hasCalendarItem
T@"NLAWDHealthKitConcurrentCalendarItem",&,N,V_calendarItem
T@"NSMutableArray",&,N,V_views
hasActivityCache
T@"NLAWDHealthKitActivityCache",&,N,V_activityCache
hasAchievement
T@"NLAWDHealthKitAchievement",&,N,V_achievement
hasWeeklySummaryDetail
T@"NLAWDHealthKitWeeklySummaryDetail",&,N,V_weeklySummaryDetail
goalTypesCount
TQ,R,N
T^I,R,N
hasResponseFlags
T@"NLAWDHealthKitNotificationResponseFlags",&,N,V_responseFlags
GoalProgress
GoalCompletion
StandAlert
WeeklyGoal
StandActive
StandSuccess
Achievement
DeepBreathingWeekly
Allow
Ignore
walking
automotive
cycling
running
other
workout
heartRate
activeCalories
duration
unknown
hasWalking
TI,N,V_walking
hasAutomotive
TI,N,V_automotive
hasCycling
TI,N,V_cycling
hasRunning
TI,N,V_running
hasOther
TI,N,V_other
hasWorkout
TI,N,V_workout
hasHeartRate
TI,N,V_heartRate
hasActiveCalories
TI,N,V_activeCalories
TI,N,V_briskMinutes
hasDuration
TI,N,V_duration
hasUnknown
TI,N,V_unknown
activityType
durationMs
totalEnergyBurned
totalDistance
totalSteps
hasActivityType
Ti,N,V_activityType
hasDurationMs
Tq,N,V_durationMs
hasTotalEnergyBurned
Tq,N,V_totalEnergyBurned
hasTotalDistance
Tq,N,V_totalDistance
hasTotalSteps
Tq,N,V_totalSteps
AmericanFootball
Archery
AustralianFootball
Badminton
Baseball
Basketball
Bowling
Boxing
Climbing
Cricket
CrossTraining
Curling
Cycling
Dance
DanceInspiredTraining
Elliptical
EquestrianSports
Fencing
Fishing
FunctionalStrengthTraining
Golf
Gymnastics
Handball
Hiking
Hockey
Hunting
Lacrosse
MartialArts
MindAndBody
MixedMetabolicCardioTraining
PaddleSports
Play
PreparationAndRecovery
Racquetball
Rowing
Rugby
Running
Sailing
SkatingSports
SnowSports
Soccer
Softball
Squash
StairClimbing
SurfingSports
Swimming
TableTennis
Tennis
TrackAndField
TraditionalStrengthTraining
Volleyball
Walking
WaterFitness
WaterPolo
WaterSports
Wrestling
Yoga
Barre
CoreTraining
CrossCountrySkiing
DownhillSkiing
Flexibility
HighIntensityIntervalTraining
JumpRope
Kickboxing
Pilates
Snowboarding
Stairs
StepTraining
WheelchairWalk
WheelchairRun
HandCycling
TaiChi
CardioDance
SocialDance
Pickleball
Cooldown
Wheelchair
consecutiveStandingHoursGoalsMet
consecutiveBriskMinuteGoalsMet
currentCalorieGoalConsecutiveCompleteDays
consecutiveCompleteDays
hasConsecutiveStandingHoursGoalsMet
Tq,N,V_consecutiveStandingHoursGoalsMet
hasConsecutiveBriskMinuteGoalsMet
Tq,N,V_consecutiveBriskMinuteGoalsMet
hasCurrentCalorieGoalConsecutiveCompleteDays
Tq,N,V_currentCalorieGoalConsecutiveCompleteDays
hasConsecutiveCompleteDays
Tq,N,V_consecutiveCompleteDays
achievementType
completedDate
value
definitionIdentifier
workoutActivityType
hasAchievementType
Ti,N,V_achievementType
hasCompletedDate
Tq,N,V_completedDate
hasValue
Tq,N,V_value
hasDefinitionIdentifier
T@"NSString",&,N,V_definitionIdentifier
hasWorkoutActivityType
Ti,N,V_workoutActivityType
FirstSessionOfType
BestSessionCalories
SevenWorkoutsInWeek
OneTimeStepCountMilestone
StepCountMilestone
BestDailyCalories
BestDailyBriskMinutes
DailyGoalExceeded50
DailyGoalExceeded100
DailyGoalExceeded200
DailyGoalExceeded300
DailyGoalComplete
DailyGoalCompleteWeek
DailyGoalCompleteMonth
DailyGoalComplete10Weeks
DailyGoalLongestStreak
DailyGoalLifetimeMilestone
application
hasApplication
Ti,N,V_application
ActivityMonitorApp
NLDailyGoalProgressManagerDidReschedule
ProgressUpdate
ProgressUpdateLastMovePercentage
ProgressUpdateLastMovePercentageDate
ProgressUpdateLastExercisePercentageKey
ProgressUpdateLastExercisePercentageDateKey
ProgressUpdateLastScheduledFireDate
%@-%@
NLAlertSuppressionReason
NLAlertSuppressionClientTimeout
NLAlertSuppressionClients
alertSuppressionQueue
alertSuppressionObserverQueue
backlightQueue
v16@?0@"_NLCoachingBacklightObserver"8
NLWristEventsManagerQueuedWristEventSamples
NLWristEventStartDate
NLWristEventEndDateKey
NLWristEventValueKey
com.apple.nanolifestyle.NLGizmoWristEventsManager
GizmoWristEventsManagerGizmoOffWristEvent
internalQueue
v16@?0q8
q24@?0@"HKCategorySample"8@"HKCategorySample"16
B24@?0@"HKCategorySample"8@"NSDictionary"16
v20@?0B8@"NSError"12
Off-wrist
wristState
mostRecentOnWristDate
T@"NSDate",R
firstOnWristTodayDate
OFF wrist
ON wrist
wrist detection disabled
SedentaryTimerStartDelay
Stop
v16@?0@"NSError"8
Start
Register
com.apple.nanolifestyle.sedentaryTimer
settled
moving
B24@?0@"HDDatabaseTransaction"8^@16
T@"<NLSedentaryTimerAlertDelegate>",W,N,V_delegate
com.apple.nanolifestyle.fakestand
com.apple.locationd.sedentarytimer
hasMigrated
supportsSecureCoding
TB,R
from
mode
start_date
end_date
hasFrom
T@"NLAWDHealthKitRoutineLocation",&,N,V_from
hasTo
T@"NLAWDHealthKitRoutineLocation",&,N,V_to
hasMode
Ti,N,V_mode
Automotive
Pedestrian
batteryState
hasBatteryState
Ti,N,V_batteryState
Unplugged
Charging
Full
achievementDataProvider
T@"<NLFirstGlanceAchievementDataProvider>",&,N,V_achievementDataProvider
activityDataProvider
T@"<NLFirstGlanceActivityDataProvider>",&,N,V_activityDataProvider
activitySharingDataProvider
T@"<NLFirstGlanceActivitySharingDataProvider>",&,N,V_activitySharingDataProvider
workoutDataProvider
T@"<NLFirstGlanceWorkoutDataProvider>",&,N,V_workoutDataProvider
poorTiming
alreadyDoing
hasPoorTiming
TB,N,V_poorTiming
hasAlreadyDoing
TB,N,V_alreadyDoing
isBusy
hasIsBusy
TB,N,V_isBusy
standHourTimestamp
didStand
hasStandHourTimestamp
Tq,N,V_standHourTimestamp
hasDidStand
TB,N,V_didStand
activeSeconds
eventTimestamp
height
weight
TI,N,V_energyBurned
hasActiveSeconds
TI,N,V_activeSeconds
TI,N,V_energyBurnedGoal
hasEventTimestamp
TQ,N,V_eventTimestamp
TI,N,V_biologicalSex
hasHeight
TI,N,V_height
hasWeight
TI,N,V_weight
hasAge
TI,N,V_age
progressAchievementMilestoneOverride
progressAchievementIdentifierOverride
ACHIEVEMENT_UNACHIEVED_PROGRESS_%@_DESC
ACHIEVEMENT_YESTERDAY_DESC
THREE_AWAY
ONE_AWAY
QUARTER_IN
HALFWAY
THREE_QUARTERS_IN
MoveGoal400Percent
MoveGoal300Percent
MoveGoal200Percent
NewMoveRecord
NewExerciseRecord
BestWorkout
FirstWorkout
NewMoveGoalAchieved
B32@?0@"NSString"8Q16^B24
B24@?0Q8Q16
eventType
recommendedGoal
newGoal
features
hasEventType
TI,N,V_eventType
TI,N,V_dismissReason
hasRecommendedGoal
TI,N,V_recommendedGoal
hasNewGoal
TI,N,V_newGoal
TQ,N,V_duration
hasFeatures
T@"NLAWDHealthKitCoachingFeatureGroup",&,N,V_features
typeIdentifier
inSession
minDelayUs
maxDelayUs
meanDelayUs
stdDelayUs
sampleCount
indexInSession
hasTypeIdentifier
Tq,N,V_typeIdentifier
hasInSession
TB,N,V_inSession
hasMinDelayUs
Tq,N,V_minDelayUs
hasMaxDelayUs
Tq,N,V_maxDelayUs
hasMeanDelayUs
Tq,N,V_meanDelayUs
hasStdDelayUs
Tq,N,V_stdDelayUs
hasSampleCount
Tq,N,V_sampleCount
hasIndexInSession
Tq,N,V_indexInSession
A non-nil date must be used
 No scheduled coaching events
profileExtension
T@"NLNanoHealthProfileExtension",W,N,V_profileExtension
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"<NLIngestionTrackerDelegate>",W,N,V_delegate
dataTypeCode
Tq,R,N,V_dataTypeCode
NLDataLogEnabled
DataLogs
v24@?0@"EKEvent"8^B16
v24@?0B8B12@"NSError"16
B40@?0@"HKQuantitySample"8@"HKDeletedObject"16q24^@32
EKEventStore
Unable to find class %s
/System/Library/Frameworks/EventKit.framework/EventKit
com.apple.SessionTrackerApp
NLPredictedActivityMinSecondsToAlertOverride
NLPredictedActivityMuteForTodayDay
NLPredictedActivityMuteForTodayMonth
NLPredictedActivityMuteForTodayYear
com.apple.nanolifestyle.sessiontrackerapp
v24@?0@"_HKCurrentWorkoutSnapshot"8@"NSError"16
[PredictedActivity %@] System attempted to temporarily hide alert for activity that's not tracked.
-[NLPredictedActivityAlertController workoutManager:didStartWorkout:atDate:]
-[NLPredictedActivityAlertController workoutManager:didStopWorkout:atDate:]
-[NLPredictedActivityAlertController workoutManager:willPauseWorkout:atDate:]
-[NLPredictedActivityAlertController workoutManager:willResumeWorkout:atDate:]
-[NLPredictedActivityAlertController workoutManager:didFailWorkout:withError:]
com.apple.nanolifestyle.predicted.enabled.start
com.apple.nanolifestyle.predicted.enabled.end
FBSSystemService
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FBSOpenApplicationOptionKeyActivateSuspended
NLDeepBreathingWeeklySummary
com.apple.nanolifestyle.coaching.deepBreathingWeeklySummary
mostRecentDeepBreathingWeeklySummaryAlertDate
NLDeepBreathingWeeklySummaryShowEveryDay
NLDeepBreathingWeeklySummarySubmanagerPresentationDelay
NLForceShowDeepBreathingWeeklySummaryNotification
sessionUUID
Ti,N,V_eventType
hasSessionUUID
T@"NSString",&,N,V_sessionUUID
NotStarted
Ended
minimumDayDuration
Td,N,V_minimumDayDuration
timeIntervalAfterOnWrist
Td,N,V_timeIntervalAfterOnWrist
percentOfDay
Td,N,V_percentOfDay
secondsBeforeWristOff
Td,N,V_secondsBeforeWristOff
mostRecentGoal
numTimesGoalAchieved
selectedGoal
hasMostRecentGoal
Tq,N,V_mostRecentGoal
hasNumTimesGoalAchieved
Tq,N,V_numTimesGoalAchieved
hasSelectedGoal
Tq,N,V_selectedGoal
B16@?0@"ASFriend"8
Unable to set the most recent reminded hour experiment instance: %@
Unable to get the most recent reminder experiment instance: %@
Morning update can't use move or exercise to determine relative progress!
Today was significantly better than normal; showing morning update
Today was significantly worse than normal; showing morning update
Morning update trigger determined from: canUseMoveForPrediction=%{BOOL}d, canUseExerciseForPrediction=%{BOOL}d, percentageOfTypicalMove=%f, percentageOfTypicalExercise=%f, moveRingClosedToday=%{BOOL}d, exerciseRingClosedToday=%{BOOL}d
%@ in %@ with alertType: %ld and timeout: %@
[PredictedActivityStart] NLCoachingAlertNotifier showPredictedActivityAlertForWorkoutType
[PredictedActivityStart] NLCoachingAlertNotifier hideAlertForPredictedActivityStart:(NLPredictedActivity *)predictedActivity
[PredictedActivityEnd] NLCoachingAlertNotifier showAlertForPredictedEndWorkoutActivity
[PredictedActivityEnd] NLCoachingAlertNotifier hideAlertForPredictedActivityEnd
Less than %f seconds since the last Evening Update update; not showing Almost There Update
Less than %f seconds since the last Almost There update; not showing another Almost There Update
AlmostThere reason evaluating whether to fire for goal type %lu,  willEndDayWithGoalIncomplete: %{BOOL}d, hasCrossedAlmostThereGoalThreshold: %{BOOL}d, result: %{BOOL}d
First on-wrist: %{public}@
Using current date to schedule breathe alert.
%{public}@ has never been on wrist.
%{public}@ frequency is set to 0. Returning early.
%{public}@ first on wrist is nil. Returning early.
frequency is %ld, interval is %f, on wrist date is %{public}@, base date is %{public}@, target date is %{public}@, intervalCenterPoint/fire date %{public}@
_setScheduledAlertDate %{public}@
Poll requested for deep breathing reminder: %lu
Creating deep breathing reminder request
Rescheduling breathing alert because of Breathe session.
Delaying breathe alert 15 minutes later in the interval. 
Using date one interval in the future to schedule breathe alert.
%{public}@ scheduled fire date %{public}@ was from a different day than today. Not showing deep breathing reminder.
%{public}@ actual fire date %{public}@ is before the scheduled fire date of (%{public}@). Not showing deep breathing reminder.
Starting Activity alarm to wait for sedentary period
Breathe reminder firing after delay %.1f seconds (%{public}@) %{public}@
Requesting an immediate Breathe reminder
Weak self released, not firing alert
Already waiting for a NLActivityAlarmMonitor to fire, we only want one at at time.
Deep breathing not enabled
DeepBreathing app installed
DeepBreathing app uninstalled
Error fetching activity caches for the past 4 weeks: %@
Current date/time was overridden to: %@
Response %@ received for fake sedentary timer submanager
Response %{public}@ received for missing submanager %{public}@
Response received: %@
Coaching submanager %@ added forced requests %@
Submanager %@ requested poll
Submanager %@ added scheduled task with identifier %@ at %@
Submanager %@ canceled scheduled task with identifier %@
Wrist state changed to on wrist
Watch went %{public}@ wrist, notifying submanagers
NLCoachingManager took data collection assertion.
NLCoachingManager FAILED to take data collection assertion.
Submitting activity summary index %ld
Not submitting activity summary index %ld - already submitted
Protected data is now available, and we tried to run earlier. Running now.
Watch on wrist, and we tried to run earlier. Running now.
aggd: activity setup <- %ld
Error fetching activity summary: %{public}@
No activity summary found for yesterday and error was nil
aggd: rings completed <- %ld
Activity summary is now loaded, performing poll if it's set
Yesterday summary changed, rebuilding typical day model (changed fields = %lu
Poll was requested for reason %ld
Polling reasons are %@, pollingDelay=%.1lf
Will perform poll after move goal check
Performing poll; move goal is %{public}@set and %{public}@loaded
Needs to poll for scheduled date %@
Persisted future scheduled run date for %@, scheduled dates are now %@
Removed future scheduled run date for task %@, scheduled dates are now %@
Cleared future scheduled run dates, scheduled dates are now %@
Skipping poll, no polling reasons
Skipping poll, not on wrist
Skipping poll, activity alerts are suppressed due to a workout in progress
Coaching manager performing 3-step handshake for reasons %@
Coaching manager tried to do a scheduled run, but protected data wasn't available. Holding off until unlock.
Poll finished for scheduled run
Poll finished successfully
Poll finished unsuccessfully
Recent active days: %ld
Alerts are not enabled for coaching submanager %{public}@
Move goal is required but not present for %{public}@
Number of active days %ld doesn't meet minimum requirement of %ld for %{public}@
Asking for alert requests for coaching submanager %{public}@
Coaching submanager %{public}@ added requests %{public}@
Error fetching wheelchair characteristic type: %{public}@
Significant time change occurred
Skipping start of day tasks, last date tasks were run is %{public}@ and current date is %{public}@
Running start of day tasks, last date tasks were run is %{public}@ and current date is %{public}@
Skipping start of day tasks, protected data is not available, should try again at unlock or on-wrist
Resetting daily goal types met for activitySummaryIndex %lld and removing any goal types we might have tried to fire.
Unable to obtain the goal types met for activity summary index: %@
Unable to set the goals type met: %@
Goal type %ld was previously met for activitySummaryIndex: %lld
Adding goal type to be notified: %ld
Goal type %@ for summary index %lld went from %f to %f; goal is %f
Goal type %@ today value updated
Attempted to add goal type %{public}@ that was already added for activitySummaryIndex: %lld; existing set is %@
Goal type %{public}@ was just met
Goal Completion Manager requesting poll for %ld completed goal types
_goalTypesToFireByActivitySummaryIndex not empty: %{public}@, activitySummaryIndex: %lld, goalTypesToFireForToday: %{public}@
Evaluating goal types for alerts because goalTypesToFireForToday not empty: %{public}@
All goals were met today, displaying all goals.
Goal types to display are %{public}@
Alert request was processed: %@, goal types alerted: %{public}@, goal types to be alerted: %{public}@
After removing types from processed alert, final goal types to be alerted are (activitySummaryIndex: %lld): %{public}@
Overriding First Glance progress achievement milestone to '%@'
Overriding First Glance progress achievement identifier to '%@'
Not coaching to Monthly Challenge - progress (%ff) already matches or exceeds goal (%f).
Not coaching to Monthly Challenge - days needed (%ld) exceed days remaining in month (%ld)
Achievment missing canonical unit, can't evaluating for coaching: %{public}@
Bridge settings changed notification received from launchd
Bridge privacy settings changed notification received from launchd
Error when trying to read data from key value domain for key %@. Error: %@.
Error when trying to save data to key value domain: %{public}@. %@:%@
Saving coaching event, category sample = %@.
Could not save coaching event to HealthKit database: %@
Updating first wrist-on date today to %@
Adding wrist-on coaching event
Error registering for %s: %d
Protected data became available, scheduling summary if needed
Added to First Glance alert userInfo 
 key: %@, value: %@
Error: tried to add a nil value to userInfo for key: %@
Protected data unavailable, holding off on showing the weekly summary until unlock
Invalid First Glance Type for today %{public}@
No data to make an informative First Glance alert.
healthd has launched and protected data is available, scheduling summary if needed.
healthd has launched, but protected data isn't available yet. Holding off scheduling summary if needed.
%{public}@ not showing alert because poll reason is not valid for first glance: %lu
Marking daily first glance as last alerted at %@
User has disabled first glance notifications; not scheduling
Delaying first glance scheduling for sleep alarm
Should schedule first glance criteria - hasFirstGlanceBeenShownToday: %ld, energyBurnGoalExistsBeforeToday: %ld, hasBeenOnWristToday: %ld
Current date is %@, wrist on date is %@, showFirstGlance = %ld
Scheduled task already exists for weekly summary.
Error when trying to read data from key value domain. Error: %@.
Error when trying to save data to key value domain: %{public}@. mostRecentFirstGlanceAlertDate:%@
Should delay scheduling first glance for sleep alarm criteria - isSleepAlarmEnabledForToday (%d) goodMorningAlertDismissedDateForToday (%{public}@)
Typical day activity model did update; rescheduling first glance
Less than %f seconds since the last Almost There update; not showing evening update
Unlikely to complete a goal today; showing evening update
[HID] Notifying observers of wrist event %{public}@
Requested forceWristDetect, but valid event was returned so we're not starting detection.
%{public}@: failed to get ACH profile extension: %{public}@
Requesting poll after finding %lu achievements to alert, unique names: %@
Set unearned alert date %{public}@ for achievement %{public}@
Error setting unearned alert date %{public}@ for achievement %{public}@
Set earned alert date %{public}@ for achievement %{public}@
Error setting earned alert date %{public}@ for achievement %{public}@
Error pulling last earned alert date for achievement %{public}@: %{public}@
Error pulling last unearned alert date for achievement %{public}@: %{public}@
Should alert achievement %{public}@, but it doesn't have the required asset urls yet. Not alerting.
Failed to fetch activity summaries for date interval %{public}@ with error %{public}@
[SEDT] %{public}@ for state: %ld returns: %ld
[NLLog] *** Error creating log directory %@: %@
[NLLog] *** Added %lu of %lu entries, error: %@
[NLLog] Creating new log file %@
[NLLog] Error setting F_NOCACHE on file at %@: %s
[NLLog] *** Failed to set up log file, deleting %@, error: %@
[NLLog] *** Failed to delete log file %@, error: %@
[Log] *** Encountered log index %ld. Dropping entry
[Log] Processed file size %lluK.
[NLDL] Processed file size %luK.
*** Log file could not be mapped: %d
*** Unexpected log version %u at path %@
[NLDL] Map load time: %0.2f
[NLDL] *** Map load time: %0.2f, error: %@
[NLDL] Load time: %0.2f
[NLDL] *** Load time: %0.2f, error: %@
Failed to construct weekly summary info for date %{public}@ with error %{public}@
Failed to fetch workouts for date interval %{public}@ with error %{public}@
Failed create sources predicate for workouts with error %{public}@
Registering for swimming data updates
Fetching historical swimming data since datum: %{public}@ for database: %{public}@
%@: Received sensorData array (%@) with no elememts
Out-of-order CMSwimData samples: %{public}@, %{public}@
NLDailyGoalCompletionActivitySummaryObserver running for goal completions and previous summary (%@) is either nil, doesn't have the same index as newSummary (%@)
NLDailyGoalCompletionActivitySummaryObserver today activity summary did not have move value changes
NLDailyGoalCompletionActivitySummaryObserver today activity summary did not have exercise value changes
NLDailyGoalCompletionActivitySummaryObserver today activity summary did not have stand value changes
Move goal complete!
Exercise goal complete!
Stand goal complete!
NLDailyGoalCompletionActivitySummaryObserver got today activity summary: %@
NLDailyGoalCompletionActivitySummaryObserver today activity summary is either nil or still loading data
[AUTO] Pausing active workouts
[AUTO] Ending workout heart rate recovery
[AUTO] Encountered wrist on event, resetting _consecutiveOffWristEvents from %ld
[AUTO] %@: Incrementing off wrist event count from %ld
Scheduled date %{public}@ for progress event %{public}@
Ran detection for updated activity data and a progress event wanted to fire
Ran detection for updated activity data and no progress events wanted to fire
Failed to fetch date for key %{public}@: %{public}@
Failed to fetch number for key %{public}@: %{public}@
Failed to set date for key %{public}@: %{public}@
Failed to set number for key %{public}@: %{public}@
Scheduled fire date %@ was from a different day than today. Not showing progress update.
Actual fire date %@ is sooner than the scheduled fire date of (%@). Not showing progress update.
Progress update alert %{public}@ was shown on %{public}@
Typical day activity model did update; rescheduling daily goal progress manager tasks
Decided not to reschedule for changed keys %@
%@ in %@
%@ does not have a completion block passed in.
In %@. Current date %@ is later than alert suppression timeout date %@ for reason: %@. Why does the timeout date still exist?
Alert suppression state for %@ = %ld
Workout ended for client %@
maxTimeoutDate = %@
[WRIST] Wrist detection state changed notification received
[WRIST] Notifying of state %{public}@ to new observer %{public}@
[WRIST] Firing a fake wrist state notification at daemon ready
Error persisting wrist state change: %{public}@
[WRIST] Persisting %lu samples to defaults %{public}@
[WRIST] %lu samples from user defaults are too old to persist
[WRIST] Persisting %lu queued samples to database: %{public}@
[WRIST] No queued samples to persist to database
[WRIST] No wrist samples exist for today, but watch is still on wrist. Using midnight of today (%{public}@) as an on-wrist date
[WRIST] Skipping date from defaults not in today: %@
[WRIST] Cached first on-wrist date is now %{public}@
[WRIST] Cached most recent on-wrist date is now %{public}@
[WRIST] Not updating caches because we got zero dates.
[WRIST] Error fetching first on-wrist date today: %{public}@
[WRIST] Wrist debounce timer fired; checked current wrist state and found %{public}@
[WRIST] Error %{public}@ requesting wrist detection disabled status from Carousel
[WRIST] Gave up trying to wrist detection disabled status from Carousel, assuming NO
[WRIST] Wrist detection state is ENABLED
[WRIST] Wrist detection state is DISABLED or UNKNOWN.
[WRIST] Wrist state fetched from monitor is %{public}@
[WRIST] Debounce timer is already running with end date %{public}@.
[WRIST] Scheduling debounce timer for %{public}@
[WRIST] Ignoring duplicate state %{public}@
[WRIST] Sending state %{public}@ to registered observers.
[SEDT] init sedentaryTimer.
[SEDT] fake stand notification triggered
[SEDT] Failed to register for fake stand trigger notifications
[SEDT] %@ initial state is %ld
[SEDT] sedentaryTimer CoreMotion FiredNotification from launchd
[SEDT] device just PAIRED.
[SEDT] device just UNPAIRED
[SEDT] %@: %ld. isFitnessTrackingON: %ld, isDevicePaired: %ld, isOnWrist: %ld
[SEDT] %@
[SEDT] Method: %@ in class: %@
[SEDT] Successfully stopped sedentarytimer.
[SEDT] Timer seems to have already been stopped.
[SEDT] Error stopping sedentaryTimer: %ld, timer state: %ld
[SEDT] sedentaryTimer NOT isActive. so startTimer.
[SEDT] sedentaryTimer IS isActive. so register.
[SEDT] parameters passed into sedentaryTimer start method:- startDate %@, periodInterval %f, reminderInterval %f, autoReschedule %d
[SEDT] Successfully started sedentaryTimer.
[SEDT] Timer seems to have already been started.
[SEDT] Error starting sedentaryTimer: %ld, timer state: %ld
[SEDT] sedentaryTimer: %@ in class: %@
[SEDT] sedentaryTimer handler called with data.
[SEDT] sedentaryTimer Reminder object received. %@
[SEDT] sedentaryTimer didWake reminder object received.
[SEDT] sedentaryTimer skipping reminder because muting while in-vehicle is enabled.
[SEDT] sedentaryTimer firing reminder for start date %@.
[SEDT] sedentaryTimer Active Reminder object received. %@
[SEDT] sedentaryTimer Final object received. %@
[SEDT] sedentaryTimer Reset object received. %@
[SEDT] sedentaryTimer MAX object received. %@
[SEDT] lastremindeddate is %@, lastmoveddate is %@, startdate is %@
[SEDT] method: %@. RemindedThisHour: %ld, MovedThisHour: %ld, ShouldFire: %ld
[SEDT] method: %@ not firing alert as the reminder is not for this hour.
[SEDT] method: %@, %ld, %ld, ShouldFire: %ld
[SEDT] already fired reminder/reset this hour, don't fire reminder alert
[SEDT] gizmo not on wrist for %ldmins, don't fire reminder alert
[SEDT] protected data unavailable, don't fire reminder alert
[SEDT] already completed daily goal, don't fire reminder alert
[SEDT] sedentaryTimer is on wrist, show reminder alert.
[SEDT] sedentaryTimer is not on wrist, don't fire reminder alert.
[SEDT] sedentaryTimer firing after delay %.1f seconds (%@) %@
[SEDT] %@. StartDate is %@. Timeout date is %@
[SEDT] protected data unavailable, don't fire congratulatory alert
[SEDT] already completed daily goal, don't fire congratulatory alert
[SEDT] Firing congratulatory alert.
[SEDT] Not firing congratulatory alert.
[SEDT] sedentaryTimer saving missed hour object %@
[SEDT] device locked. caching sedentaryTimer missed hour start date %@
[SEDT] sedentaryTimer saving active hour object if required %@
[SEDT] device locked. caching sedentaryTimer active hour date object %@
[SEDT] %@ oldDict is %@, newDict is %@
[SEDT] Device unlocked. Save sedentaryTimer cached hours if required.
[SEDT] Device unlocked. Saving sedentaryTimer cached hour %@.
[SEDT] Database locked, will try to save cached value next time DB unlocks.
[SEDT] Error: %@ in %@
Error counting missed hour data samples %@
[SEDT] DB doesn't have any data for hour %@. Saving %@
[SEDT] _numberOfAwakeHoursToday isProtectedDataAvailable is NO, returning NSNotFound
[SEDT] Error counting missed hour data samples %@
[SEDT] _numberOfActiveHoursToday isProtectedDataAvailable is NO, returning NSNotFound
[SEDT] sedentaryTimer: %@ : %ld
[SEDT] _wheelchairUseNumber isProtectedDataAvailable is NO, returning nil
[SEDT] Error retriving wheelhcair use for sedentary alert: %@
[SEDT] Defaulting Wheelchair Use to Not Set.
[SEDT] sedentaryTimer: %@ : %@
[SEDT] %@. Not firing sedentary reminder as alerts are disabled for testing.
[SEDT] %@. Not firing sedentary reminder as they are turned OFF in Bridge.
[SEDT] %@ Not firing alert as protected data is not available. activeHours = %ld, awakeHours = %ld, wheelchairUseNumber = %@
[SEDT] %@. Not firing sedentary reminder as skipped by test configuration.
Registering for update handlers from %{public}@
Secondary context implies content has not been migrated. Skipping (%ld) samples. %@
Detected that we have not established a secondary context
Error fetching deep breathing session count for the past week: %{public}@
Error fetching activity summaries for the past week: %{public}@
Attempting to request a deep breathing weekly summary when today is not the start of fitness week.
%@ in %@: poll completion
%@ in %@: forced coaching completed
%@ in %@: %@
Error: %@. Method: %@ in class: %@
Error: %{public}@. Method: %@ in class: %@
[PredictedActivityStart] remoteObjectProxyWithErrorHandler showPredictedActivityAlertForWorkoutType error: %@
[PredictedActivityStart] hideAlertForPredictedActivityStart:%@ error: %@
[PredictedActivityStart] systemDidHideAlertForPredictedActivityWithIdentifier error: %@
[PredictedActivityStart] getPredictedActivitiesWithCompletion error: %@
[PredictedActivityStart] setMuteForTodayPredictedActivityAlertsWithCompletion error: %@
[PredictedActivityEnd] remoteObjectProxyWithErrorHandler showEndAlertForPredictedActivity error: %@
[PredictedActivityEnd] hideEndAlertForPredictedActivity:%@ error: %@
Suppressing activity alerts for %@
Invalidating activity alert suppression for %@
[NLDL] Activity app launch detected
[NLDL] Failed to register for activity app launch
[NLDL] Error fetching calorie goal: %@
[NLDL] Failed to get date of birth: %@
[NLDL] Failed to get biological sex: %@
[NLDL] Failed to get height: %@
[NLDL] Failed to get weight: %@
Error registering for managed configuration notifications: %d
[NLDL] Read data collection setting: %@
[NLDL] samplesAdded: %ld type=%@ source=%@
[NLDL] Error writing to log: %@
[NLDL] Submitted metric %x ignored
[NLDL] Submitted metric %x accepted
[NLDL] No HealthKit metric container for metric %x
[NLDL] Unexpected FIDailyGoalTypeAll while converting to goal type
[PredictedActivityStart] HDWorkoutManager is ready for activity prediction. Creating CMWorkoutManager.
[PredictedActivity] Resetting all %@ predictions.
[PredictedActivity] Settings - Start prediction enabled: %{BOOL}d, End prediction enabled: %{BOOL}d
[PredictedActivityStart] Overriding minimum alert duration after classification: %@
[PredictedActivity %{public}@] Scheduling an already-scheduled alert for prediction: %{public}@
[PredictedActivity %{public}@] Not realerting because activity is no longer tracked.
[PredictedActivity %{public}@] Realerting.
[PredictedActivity %{public}@] Invalid prediction type: %{public}@
[PredictedWorkout %{public}@] Scheduled realert of activity %{public}@
[PredictedActivityStart] Scheduling timeout for predicted workout %{public}@ when a timeout was already created
[PredictedActivityStart %{public}@] Starting to monitor predicted workout: %@
[PredictedActivity %{public}@] Posting started monitoring notification.
[PredictedActivity %{public}@] Stopping predicted workout %@ because alert timed out
[PredictedActivityStart %{public}@] Canceling alert timeout source
[PredictedActivityStart %{public}@] Canceling realert scheduling source
[PredictedActivity %{public}@] Posting stopped monitoring notification.
[PredictedActivity %{public}@] Stopped monitoring prediction.
[PredictedActivity %{public}@] Prediction state %{public}@ is dismissable. Reporting userDismissedWorkoutAlert.
[PredictedActivityStart %{public}@] %{public}@ ignoring request to track unknown workout type because this feature is disabled in settings
[PredictedActivityStart %{public}@] Not tracking activity - Muted for day: %{public}@,  %{public}@
[PredictedActivityStart %{public}@] ignoring request to track unknown workout type because there's currently an active workout %@.
[PredictedActivityStart %{public}@] Classified activity and showing alert for predicted workout: %@
[PredictedActivityStart %{public}@] Background launch SessionTrackerApp for Start Workout Reminder (error: %@)
[PredictedActivityStart %{public}@] Delaying showing classified workout alert by %ld seconds
[PredictedActivityStart %{public}@] Treating Mute for Today suppression as user dismissal. Sending -userDismissedWorkoutAlert to CM for %{public}@.
[PredictedActivityStart %{public}@] %{public}@ suppressing request for workout start alert because this feature is disabled in settings
[PredictedActivityStart %{public}@] Not monitoring predicted workout for which classification: %{public}@, location: %{public}@ is determined
[PredictedActivityEnd %{public}@] Retracting stop reminder (start UUID matches stop prediction UUID).
[PredictedActivityStart %{public}@] Classified activity %{public}@ even though predictions are muted for day: %{public}@
[PredictedActivityStart %{public}@] Stopping data ingestion for untyped workout: %{public}@
[PredictedActivityStart %{public}@] Starting data ingenstion for typed workout: %{public}@
[PredictedActivity %{public}@] Posting classified prediction notification.
[PredictedActivity %{public}@] Not transitioning from predicted workout to active workout because predicted workout is not monitored by NL.
[PredictedActivity %{public}@] Transitioned from prediction to workout
[PredictedActivity %{public}@] Ignoring user declining predicted workout because it is not currently monitored by NL.
[PredictedActivity %{public}@] Not abandoning predicted workout because predicted workout not monitored by NL.
[PredictedActivity %{public}@] System denied alert for a predicted activity that's no longer monitored by NL.
[PredictedActivity %{public}@] System attempted to temporarily hide alert for a predicted activity that's no longer monitored by NL.
[PredictedActivity %{public}@] System hid alert. Scheduling re-alert.
[PredictedActivityStart] Retrieved activities: %@
[PredictedActivity] Expiring mute for today: %{public}@ because prediction came with a different date: %@
[PredictedActivity] Mute for today setting is ON.
[PredictedActivity] Clearing mute for today. Saved value is for an older date %{public}@.
[PredictedActivity] Muting for today: %{BOOL}d date component: %{public}@
[PredictedActivity] Resetting all in-flight predictions because we must mute for today %{public}@.
[PredictedActivity] Clearing mute for today date component: %{public}@
[PredictedActivityEnd %{public}@] Overriding end delay to %fs
[PredictedActivityEnd %{public}@] End detected. Presenting alert with delay: %fs.
[PredictedActivityEnd %{public}@] Not presenting alert because the activity is not tracked at alert time
[PredictedActivityEnd %{public}@] Already predicted end of activity. Ignoring.
[PredictedActivityEnd %{public}@] ignoring end prediction because no workout is active.
[PredictedActivityEnd %{public}@] ignoring end prediction because workout is in third party app.
[PredictedActivityEnd %{public}@] ignoring end prediction because active workout is controlled via GymKit.
[PredictedActivityEnd %{public}@] ignoring end prediction because workout already ended.
[PredictedActivityEnd %{public}@] ignoring end prediction because workout wasn't started.
[PredictedActivity %{public}@] Increasing ingestions rate to active workout level with collection assertion: %{public}@.
[PredictedActivity %{public}@] Decreasing data ingestion rate to non-workout level with collection assertion: %{public}@.
[PredictedActivityStart %{public}@] Ignoring issued prediction type: %ld because feature is disabled.
[PredictedActivityStart %{public}@] issued prediction, type: %ld
[PredictedActivityStart %@] Restoring begin prediction state.
[PredictedActivityStart %{public}@] Invalid prediction state derived from CoreMotion prediction manager.
[PredictedActivity] Disallowing prediction state restoration because first CMWorkoutManagerDelegate was processed.
[PredictedActivityStart %{public}@] _isUserInitiatedWorkout received unknown workout type %ld
[PredictedActivity %{public}@] Prediction delegate: %s, CMWorkout: %@
[PredictedActivity %{public}@] User manually started workout %@.
[PredictedActivity %{public}@] User manually started workout that matched prediction. Counting as accepted prediction.
[PredictedActivity %{public}@] User manually started workout that doesn't match prediction (%@). Resetting prediction.
[PredictedActivityStart %{public}@] Prediction delegate: %s, CMWorkout: %@
[PredictedActivityStart %{public}@] User manually stopped workout %@. Requesting reset of all predictions.
[PredictedActivity %{public}@] User manually stopped workout that matched prediction. Counting as accepted prediction.
[PredictedActivityEnd %{public}@] CoreMotion didn't provide an end date. Using %@
[PredictedActivityEnd %{public}@] Suggested stop at date: %@
[PredictedActivityEnd %{public}@] Ignoring suggested stop at date: %@ because the feature is disabled.
forcing weekly summary
Error when fetching deep breathing weekly summary, will try again when protected data becomes available again: %@
Protected data unavailable, holding off on showing the deep breathing weekly summary until unlock
Marking weekly summary as last alerted at %@
weeklySummaryEnabled: %ld, hasData: %ld
overrideMondayCheck = %ld
isMonday == TRUE, hasWeeklySummaryBeenShownToday: %ld, hasBeenOnWristToday: %ld
%@ returns %ld
Current date is %@, wrist on date is %@, showWeeklySummary = %ld
Error when trying to save data to key value domain: %{public}@. mostRecentWeeklySummaryAlertDate:%@
Coaching progress reason %{public}@ returned a fire date outside the bounds of the current day. %f was outside of [%f, %f]
Evaluating if event %{public}@ crossed the scheduled threshold - lastFired: %@, scheduledFireDate: %@, now: %@, durationOfToday: %lf, intervalBetweenScheduledDateAndNow: %lf
Evaluating if event %{public}@ crossed the scheduled threshold - scheduledDateInPast: %{BOOL}d, lastFiredDateWasToday: %{BOOL}d, scheduledDateIsTooFarFromNow: %{BOOL}d
Event %{public}@ scheduled date is too long ago! lastFired: %@, scheduledFireDate: %@, now: %@, durationOfToday: %lf (maximum interval allowed before now: %lf), intervalBetweenScheduledDateAndNow: %lf
softlink:r:path:/System/Library/Frameworks/EventKit.framework/EventKit
softlink:r:path:/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
NLCoachingAlertRequestCoalescer
NLCoachingProgressMorningUpdateEvent
NLCoachingProgressEvent
NSObject
NLCoachingAlertNotifier
NLActivitySedentaryAlertObserver
NLPredictedActivityAlertObserver
NLActivityCoachingAlertObserver
NLActivityCarouselServiceProvider
NLCoachingProgressAlmostThereEvent
NLDeepBreathingCoachingSubmanager
NLBridgeSettingsObserver
NLCoachingSubmanager
NLWeeklyGoalRecommendationEngine
NLMockKeyValueDomain
NLCoachingManager
NLWristStateObserver
HDHealthDaemonReadyObserver
HDDatabaseProtectedDataObserver
HDCurrentActivitySummaryHelperObserver
HDNanoAlertSuppressionObserver
FITypicalDayActivityModelDelegate
NLCoachingSubmanagerDelegate
NLAWDHealthKitWristEvent
NSCopying
NLDailyGoalCompletionManager
NLDailyActivityGoalDetectionDelegate
NLFirstGlanceAchievementDataProvider
NLBridgeSettings
NLLogCodableLogMessage
NLAWDHealthKitActivityCache
NLCoachingPreferences
NLAWDHealthKitRoutineLocation
NLAWDHealthKitExperimentalCondition
NLFirstGlanceManager
NLCoachingProgressEveningUpdateEvent
NLAWDHealthKitExperimentalConditionEvent
NLHIDHandler
NLFirstGlanceDataProvider
NLAWDHealthKitNotificationView
NLAWDHealthKitUserCharacteristics
NLAWDHealthKitCoachingFeatureGroup
NLActivityAchievementsAlertManager
ACHAchievementStoreObserving
NLFirstGlanceActivityDataProvider
NLAWDHealthKitDatabaseLastWeekUsageEvent
NLAWDHealthKitWristOnSettings
NanoHealth
NLSedentaryTimerStateEngine
NLDataLog
NLMockBridgeSettings
NLFirstGlanceEngineDataSource
NLSwimmingDataCollector
_NLSwimmingDistanceDataCollector
_NLSwimmingStrokesDataCollector
NLAWDHealthKitRoutineLocationVisitEvent
NLDailyGoalCompletionActivitySummaryObserver
NLAWDHealthKitNotificationEvent
NLWorkoutAutopauseManager
NLHIDHandlerObserver
NLAWDHealthKitCoachingFeatures
NLAWDHealthKitWorkout
NLAWDHealthKitAchievementStatistics
NLAWDHealthKitAchievement
NLAWDHealthKitApplicationLaunchEvent
NLAWDHealthKitActivityCacheEvent
NLDailyGoalProgressManager
NLCoachingProgressEventEvaluationDelegate
_NLCoachingBacklightObserver
CSLSBacklightObserver
NLAlertSuppressionManager
HDNanoAlertSuppressionService
UnitTesting
NLGizmoWristEventsManager
HDDataObserver
Internal
NLSedentaryTimer
NLSedentaryTimerStateEngineDelegate
NLAppleExerciseTimeDataCollector
NLAppleExerciseTimeDataCollectorExtensions
HDSensorDatum
NSSecureCoding
NSCoding
NLAWDHealthKitRoutineTransitionEvent
NLAWDHealthKitBatteryStateEvent
NLFirstGlanceEngine
NLAWDHealthKitNotificationResponseFlags
NLAWDHealthKitConcurrentCalendarItem
NLFirstGlanceWorkoutDataProvider
NLAWDHealthKitStandHourEvent
NLAWDHealthKitActivityRingEvent
NLAWDHealthKitCoachingEvent
NLAWDHealthKitIngestionLatencyEvent
NLWeeklySummaryInfo
NLNanoHealthServer
NLNanoHealthServerInterface
NLActivityAlertResponder
NLIngestionTracker
NLDataLogger
HDWorkoutEventObserver
NLIngestionTrackerDelegate
NLPredictedActivityAlertController
CMWorkoutManagerDelegate
NLDeepBreathingWeeklySummarySubmanager
NLAWDHealthKitWorkoutSessionEvent
NLCoachingProgressReason
NLCoachingProgressOnWristReason
NLCoachingProgressPercentOfDayProgressReason
NLCoachingProgressTimeOfDayReason
NLCoachingProgressEventEvaluator
NLAWDHealthKitWeeklySummaryDetail
NLFirstGlanceActivitySharingDataProvider
objectForKeyedSubscript:
count
firstObject
addObject:
addObjectsFromArray:
lastObject
coalescedRequests:
standardUserDefaults
boolForKey:
persistentDomainForName:
objectForKey:
boolValue
setObject:forKey:
archivedDataWithRootObject:requiringSecureCoding:error:
initForReadingFromData:error:
decodeObjectOfClass:forKey:
setMinimumDayDuration:
setPercentOfDay:
coachingPreferences
preferenceEnabledForKey:
percentageOfTypicalDayMoveComparedToNow
percentageOfTypicalDayBriskMinutesEarnedComparedToNow
valueOfTypicalDayMoveEarnedByNow
valueOfTypicalDayBriskMinutesEarnedByNow
currentMoveGoalPercentage
currentExerciseGoalPercentage
willCompleteStandGoalOrItIsTooLateWithBufferPercentage:
arrayByAddingObject:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
eventIdentifier
reason
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
shouldFireWithTypicalDayModel:evaluationDelegate:
goalType
setGoalType:
userInfoForCoachingAlertRequestWithModel:
init
removeObject:
countByEnumeratingWithState:objects:count:
showSedentaryAlertOfType:withTimeoutDate:withActiveHourCount:withTotalCount:wheelchairUser:experimentInstance:
hideSedentaryActivityAlert
showCoachingAlertRequests:
fetchWellnessComplicationOnCurrentClockFaceWithCompletion:
showStartAlertForPredictedActivity:
hideAlertForPredictedActivityStart:
showAlertForPredictedEndWorkoutActivity:
hideAlertForPredictedActivityEnd:
registerForActivityAlerts:notificationTypes:
unregisterForActivityAlerts:
.cxx_destruct
_sedentaryObservers
_predictedActivityObservers
_coachingObservers
_carouselServiceObservers
_queue
willCompleteMoveGoalWithBufferPercentage:
willCompleteExerciseGoalWithBufferPercentage:
setSecondsBeforeWristOff:
lastFiredDateForProgressEventIdentifier:
timeIntervalSinceReferenceDate
currentDate
numberWithInteger:
arrayWithObjects:count:
initWithGoalType:
addSettingsObserver:
setShouldFireOnNextPoll:
defaultWorkspace
applicationIsInstalled:
_setDeepBreathingAppInstalled:
defaultCenter
_applicationsInstalled:
addObserver:selector:name:object:
_applicationsUninstalled:
_hasDeepBreathingAppBeenInstalled
_setScheduledAlertDate:
coachingSubmanagerDelegate
firstOnWristTodayDate
_nextFireDateForIntervalWithFirstOnWristTodayDate:baseDate:
deepBreathingSettingForKey:
integerValue
typicalDayModel
projectedDayDuration
_remindersPerDay
_alertInterval
dateByAddingTimeInterval:
timeIntervalSinceDate:
invalidate
scheduleTaskForSubmanager:withIdentifier:atDate:
cancelScheduledTask
_rescheduleAlert
submanagerIdentifier
requestWithSubmanagerIdentifier:userInfo:
setDelayable:
shouldFireOnNextPoll
currentCalendar
isDate:inSameDayAsDate:
startDate
timeIntervalSinceNow
requestPollForSubmanager:
initWithTaskName:activityMonitorType:duration:timeout:handler:
start
userInfo
containsObject:
cancelScheduledTaskForSubmanager:withIdentifier:
settingsDidChange:
privacySettingsDidChange:
daemonAndCoachingManagerReady
wristOnStateChangedTo:
alertsEnabled
coachingAlertRequestsForPollingReason:
coachingAlertRequestsWhenForcedWithArguments:
coachingAlertRequestsWereProcessed:acceptedRequests:
coachingAlertRequestDidCompleteWithResponse:
requiresMoveGoal
minimumRecentActiveDays
setCoachingSubmanagerDelegate:
setTypicalDayModel:
protectedDataDidBecomeAvailable:
typicalDayActivityModelDidUpdate
initWithHealthDaemon:bridgeSettings:
requiresCoachingConditionsOnRequests
_healthDaemon
_bridgeSettings
_alarmMonitor
_isDeepBreathingAppInstalled
_lock
_shouldFireOnNextPoll
_activitySummariesForWeeklyGoalRecommendationForDate:profile:errorOut:
_recommendedNewWeeklyGoalForActivitySummaries:
hk_gregorianCalendarWithUTCTimeZone
hk_startOfFitnessWeekBeforeDate:
hk_startOfDateBySubtractingDays:fromDate:
hk_activitySummaryDateComponentsFromDate:
initWithProfile:
setShouldIncludePrivateProperties:
setShouldIncludeStatistics:
dateComponentsForCalendar:
dateFromComponents:
components:fromDate:
weekday
activeEnergyBurnedGoal
_isZero
enumerateActivitySummariesWithPredicate:error:handler:
activeEnergyBurned
compare:
sortedArrayUsingComparator:
objectAtIndexedSubscript:
_isMoveGoalAchievedForActivitySummary:
enumerateObjectsWithOptions:usingBlock:
calendarWithIdentifier:
_gregorianDateComponents
dateByAddingUnit:value:toDate:options:
array
earlierDate:
isEqualToDate:
_numberOfInvalidDaysFromActivitySummaries:forExpectedNumberOfSamples:
arrayWithArray:
_numberOfDaysGoalAchievedInSummaries:
_numberOfDaysInMostRecentWinningStreakForSummariesOrderedByDate:
_numSamplesWithMoveGreaterThanTheGoalByPercent:forSummaries:
_activitySummariesSortedByEnergyBurn:
_averageMoveFromActivitySummaries:forNumberOfSamples:
weeklyGoalRecommendationForDate:profile:
kilocalorieUnit
doubleValueForUnit:
initWithCategory:domainName:profile:
dictionary
setObject:forKeyedSubscript:
addEntriesFromDictionary:
copy
setDate:forKey:error:
dateForKey:error:
setData:forKey:error:
dataForKey:error:
setQuantity:unit:forKey:error:
quantityForKey:unit:error:
setNumber:forKey:error:
numberForKey:error:
setString:forKey:error:
stringForKey:error:
setValuesWithDictionary:error:
valuesForKeys:error:
allValuesWithError:
_dataStore
initWithProfile:bridgeSettings:dataLogger:
initWithCapacity:
_setNeedsPollForReason:
registerClientWithName:taskHandler:
addWristEventObserver:
daemon
registerForDaemonReady:
unregisterClientWithName:
removeWristEventObserver:
database
removeProtectedDataObserver:
currentActivitySummaryHelper
removeObserver:
dealloc
futureScheduledRunDates
date
wristStateChangedToOnWrist
startOfDayForDate:
initWithStartDate:endDate:
activitySummary
setActivitySummary:
isEqualToString:
uuid
UUIDString
logCoachingResponse:
_setNeedsPollForReason:completion:
transactionWithOwner:activityName:
alertSuppressionService
hk_error:description:
allValues
subarrayWithRange:
setForced:
_coalesceAndAlertRequestsFromDictionary:
fetchActivityAlertSuppressionStateWithCompletion:
totalActiveDays
_pollingQueue_persistFutureScheduledRunDate:forTaskIdentifier:
setStartDate:
setEndDate:
addTask:withName:forClientNamed:
taskWithName:forClientNamed:
removeTaskWithName:forClientNamed:
_pollingQueue_removeFutureScheduledRunDateForTaskIdentifier:
mostRecentOnWristDate
_performStartOfDayTasks
_gizmoWristOnChangedTo:
_performScheduledRunIfNeededUponOnWrist
updateFirstWristOnForDate:
updateForOffWristAtDate:
addProtectedDataObserver:
registerAlertSuppressionObserver:
_registerForDataCollection
_typicalDayModelForCurrentDate
addObserver:
performWhenDataProtectedByFirstUnlockIsAvailable:
isProtectedDataAvailable
_performScheduledRunIfNeededUponUnlock
UTF8String
_significantTimeChangeOccurred:
quantityTypeForIdentifier:
setWithArray:
dataCollectionManager
dataCollectionObserverStateInBackground:hasRunningWorkout:
_pertinentTypesForDataCollection
takeCollectionAssertionWithOwnerIdentifier:sampleTypes:observerState:collectionInterval:
protectedDataDidBecomeAvailable
activitySummaryIndexForAggdRingCountReportingForDate:
_sendAggdYesterdayRingCompletionsForActivitySummaryIndex:
_activitySummaryQueue_sendAggdActivityIsSetupIfNeeded
_pollingQueue_needsPollForScheduledRun
_saveAggdRingCompletionsIfNeeded
_activitySummaryIndex
hk_isDatabaseAccessibilityError
_standHoursCompletionPercentage
_exerciseTimeCompletionPercentage
_activeEnergyCompletionPercentage
handleUpdatedCurrentActivitySummary:
_deepBreathingDuration
secondUnit
_isDataLoading
_performPollAfterMoveGoalCheckWithCompletion:
_typicalDayIntervalFromToday
rebuildWithInterval:
numberWithUnsignedInteger:
_pollingDelayForPollingReason:
_pollingQueue_performPollWithCompletion:isMoveGoalSet:
mutableCopy
removeObjectForKey:
enumerateKeysAndObjectsUsingBlock:
_priorityForPollingReason:
wristState
removeAllObjects
allObjects
_sortedPollingReasonsByPriority:
unsignedIntegerValue
_pollingQueue_perform3StepHandshakeForPollingReason:moveGoalIsSet:
enumerateObjectsUsingBlock:
_pollingQueue_clearPersistedFutureScheduledRunDatesUpToDate:
fetchActivityAlertSuppressionStateForReason:completion:
_numberOfRecentActiveDays
userCharacteristicsManager
characteristicTypeForIdentifier:
userCharacteristicForType:error:
setWheelchairUser:
_attachActivitySummaryToRequests:
_attachIsWheelchairUserToRequests:
initForDateInterval:delegate:
wristStateChangedToOffWrist
wristStateDetectionDisabled
daemonReady:
database:protectedDataDidBecomeAvailable:
currentActivitySummaryHelper:didUpdateTodayActivitySummary:changedFields:
currentActivitySummaryHelper:didUpdateYesterdayActivitySummary:changedFields:
alertSuppressionInvalidatedForSuppressionId:reason:
firstOnWristDateToday
enumerateActivitySummariesFromDateComponents:toDateComponents:error:handler:
currentMoveStreak
bestMoveStreak
totalMoveGoalsAttempted
bestMoveValue
isTaskScheduledForSubmanager:withIdentifier:
mostRecentOnWristDateForSubmanager:
currentActivitySummary
initWithSubmanagers:profile:alertNotifier:currentActivitySummaryHelper:backgroundTaskScheduler:wristEventsManager:bridgeSettings:dataLogger:
setCurrentCalendar:
setCurrentDateOverride:
setRecentActiveDaysOverride:
pollNowWithCompletion:
forceCoachingNowWithArguments:completion:
_profile
_alertNotifier
_backgroundTaskScheduler
_currentActivitySummaryHelper
_wristEventsManager
_dataLogger
_coachingPreferences
_dataCollectionAssertion
_pedometer
_pollingReasons
_pollingQueue
_submanagers
_activitySummaryQueue
_currentActivitySummary
_currentCalendarOverride
_currentDateOverride
_recentActiveDaysOverride
_lastAggdSubmittedActivitySummaryIndex
_aggdActivitySetupSent
_overrideQueue
_serialQueue
_significantTimeChangeToken
_mostRecentStartOfDayTasksRunDate
_typicalDayModel
dictionaryRepresentation
stringWithFormat:
numberWithUnsignedLongLong:
numberWithBool:
allocWithZone:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
setOnWrist:
setHasOnWrist:
hasOnWrist
readFrom:
writeTo:
copyTo:
mergeFrom:
timestamp
onWrist
_timestamp
_onWrist
_has
_queue_clearAllDailyGoalTypesMetForActivitySummaryIndex:
numberWithLongLong:
_queue_goalTypesMetForActivitySummaryIndex:
_queue_setGoalTypesMet:forActivitySummaryIndex:
_userDefaultsDomain
unarchivedObjectOfClass:fromData:error:
allKeys
sortedArrayUsingSelector:
unsignedLongLongValue
settingForKey:
_queue_isDailyGoalTypeMet:activitySummaryIndex:
_queue_addGoalTypeToDailyGoalTypesMet:activitySummaryIndex:
_queue_addDailyGoalTypePreviouslyMet:activitySummaryIndex:
isAppleInternalInstall
_queue_allGoalTypesMetForActivitySummaryIndex:
_queue_addGoalTypeToNotify:activitySummaryIndex:
_activitySummaryIndexForDate:
caseInsensitiveCompare:
setByAddingObject:
setByAddingObjectsFromArray:
_areGoalCompletionAlertsEnabled
setWithSet:
isEqualToSet:
hk_gregorianCalendar
runDailyGoalCompletionDetectionForGoalType:activitySummaryIndex:previousValue:currentValue:goalValue:shouldAlert:goalMetHandler:
concludeGoalDetectionRun
initWithProfile:bridgeSettings:
_queue_resetDailyGoalTypesMetActivitySummaryIndex:
_goalTypesToFireByActivitySummaryIndex
dataSource
achievementWithUniqueName:
component:fromDate:
rangeOfUnit:inUnit:forDate:
monthlyChallengeForDate:calendar:
_firstAchievementFromAchievements:passingMilestoneTest:completion:
hk_map:
stringByAppendingString:
achievementsCompletedOnDay:calendar:
hk_filter:
progressAchievementAndMilestoneWithCompletion:
template
canonicalUnit
goal
progress
uniqueName
hasAchievementProgressToDisplay
progressLocalizationKeyForAchievement:progressMilestone:
yesterdayLocalizationKeyForAchievement:
completedAchievementForYesterday
weakObjectsHashTable
initWithHealthDaemon:
registerForLaunchNotification:
_settingsDidChange
_privacySettingsDidChange
objectEnumerator
nextObject
settingDefaultForKey:
settingForKey:defaultSetting:
privacySettingDefaultForKey:
privacySettingForKey:defaultSetting:
deepBreathingSettingDefaultForKey:
deepBreathingSettingForKey:defaultSetting:
_settingForKey:defaultSetting:inDomain:
setRepresentation
daemonDidReceiveNotification:
removeSettingsObserver:
privacySettingForKey:
_allObservers
_observerQueue
_observers
numberWithUnsignedInt:
setAwdCodableData:
setAwdMetricId:
setHasAwdMetricId:
hasAwdMetricId
hasAwdCodableData
awdMetricId
awdCodableData
_awdCodableData
_awdMetricId
setCacheIndex:
setHasCacheIndex:
hasCacheIndex
setEnergyBurned:
setHasEnergyBurned:
hasEnergyBurned
setBriskMinutes:
setHasBriskMinutes:
hasBriskMinutes
setActiveHours:
setHasActiveHours:
hasActiveHours
setStepCount:
setHasStepCount:
hasStepCount
setEnergyBurnedGoal:
setHasEnergyBurnedGoal:
hasEnergyBurnedGoal
setWalkingAndRunningDistance:
setHasWalkingAndRunningDistance:
hasWalkingAndRunningDistance
setEnergyBurnedGoalDate:
setHasEnergyBurnedGoalDate:
hasEnergyBurnedGoalDate
setHasStartDate:
hasStartDate
setHasEndDate:
hasEndDate
cacheIndex
energyBurned
briskMinutes
activeHours
stepCount
energyBurnedGoal
walkingAndRunningDistance
energyBurnedGoalDate
endDate
_activeHours
_briskMinutes
_cacheIndex
_endDate
_energyBurned
_energyBurnedGoal
_energyBurnedGoalDate
_startDate
_stepCount
_walkingAndRunningDistance
_dateForKey:
_setDate:forKey:
sharedBehavior
categoryTypeForIdentifier:
categorySampleWithType:value:startDate:endDate:metadata:
dataProvenanceManager
defaultLocalDataProvenance
dataManager
insertDataObjects:withProvenance:creationDate:error:
_firstWristOnDateToday
_setFirstWristOnDateToday:
_saveWristOnCoachingEventWithActualWristOnDate:
_sendAggdSettings
logWristOnNowIsFirst:
logFirstWristOnSettings
logWristOffNow
_sendAggdSetting:
clearFirstWristOnDateToday
_defaultsDomain
setLocationUUID:
hasLocationUUID
locationType
setLocationType:
setHasLocationType:
hasLocationType
locationTypeAsString:
StringAsLocationType:
setUncertaintyMillis:
setHasUncertaintyMillis:
hasUncertaintyMillis
setConfidenceMillis:
setHasConfidenceMillis:
hasConfidenceMillis
setRecentVisitCount:
setHasRecentVisitCount:
hasRecentVisitCount
locationUUID
uncertaintyMillis
confidenceMillis
recentVisitCount
_confidenceMillis
_recentVisitCount
_uncertaintyMillis
_locationType
_locationUUID
setExperimentIdentifier:
hasExperimentIdentifier
setTestCondition:
setHasTestCondition:
hasTestCondition
experimentIdentifier
testCondition
_testCondition
_experimentIdentifier
_registerForForceShowSummaryNotification
_queue_forceShowSummary
_scheduleAlertIfRequired
firstGlanceTypeForToday
_addToUserInfo:key:value:
activitySharingDataProvider
friendsWithInProgressCompetitions
data
activityDataProvider
weeklySummaryInfo
recommendedMoveGoal
achievementDataProvider
yesterdayActivitySummary
bestCompletedActivitySummaryThisWeek
workoutDataProvider
bestWorkoutYesterdayLongerThan15Minutes
longestWorkoutYesterdayLongerThan60Minutes
initWithProfile:coachingSubmanagerDelegate:typicalDayModel:
_queue_createFirstGlanceAlertWithEngine:
_areFirstGlanceNotificationsEnabled
_shouldShowFirstGlance
_shouldScheduleFirstGlance
setMostRecentFirstGlanceAlertDate:profile:
_shouldDelaySchedulingForSleepAlarm
mostRecentFirstGlanceAlertDateWithProfile:
_firstOnWristTodayDate
_energyBurnedGoalExistsBeforeDate:
isSleepAlarmEnabledForToday
goodMorningAlertDismissedDateForToday
_delayAfterWristOnForSummaryPresentation
calorieGoal
anySampleOfType:profile:encodingOptions:predicate:error:
doubleValue
_userDefaultsDomainWithProfile:
_forceShow
_forceShowNotifyToken
_settingsController
setExperimentalCondition:
hasExperimentalCondition
experimentalCondition
_experimentalCondition
_startHIDListener
_stopHIDListener
_notifyObserversDidReceiveOnWristEvent:
hidHandler:didReceiveWristDetectEvent:
_hidQueue_forceWristDetect:
intValue
_hidQueue_handleHIDEvent:sender:
_hidQueue_handleOnWristEventWithProximityMask:
addHIDHandlerObserver:
removeHIDHandlerObserver:
forceWristDetectAfterDelay:
_handleHIDServiceRegister:refcon:
_handleHIDEvent:sender:
_hidEventQueue
_ioHIDEventSystemClientRef
_ioHIDWristProximityService
_ioHIDWristProximityServiceID
initWithDataSource:coachingSubmanagerDelegate:
setDataSource:
_dataSource
_coachingSubmanagerDelegate
setDwelltimeMs:
setHasDwelltimeMs:
hasDwelltimeMs
dismissReason
setDismissReason:
setHasDismissReason:
hasDismissReason
dismissReasonAsString:
StringAsDismissReason:
scrollBehavior
setScrollBehavior:
setHasScrollBehavior:
hasScrollBehavior
scrollBehaviorAsString:
StringAsScrollBehavior:
dwelltimeMs
_dwelltimeMs
_dismissReason
_scrollBehavior
setWeightKg:
setHasWeightKg:
hasWeightKg
setHeightCm:
setHasHeightCm:
hasHeightCm
setBiologicalSex:
setHasBiologicalSex:
hasBiologicalSex
setAgeYears:
setHasAgeYears:
hasAgeYears
weightKg
heightCm
biologicalSex
ageYears
_ageYears
_biologicalSex
_heightCm
_weightKg
objectAtIndex:
addPast:
addFuture:
pastsCount
clearPasts
pastAtIndex:
futuresCount
clearFutures
futureAtIndex:
pastType
futureType
pasts
setPasts:
futures
setFutures:
_futures
_pasts
registerDaemonReadyObserver:queue:
achievementStore
achievementsToAlertWhenProtectedDataAvailable
alertAchievements:
alertedAchievementsToRegisterWhenProtectedDataAvailable
registerAchievementAlerted:
setAchievementsToAlertWhenProtectedDataAvailable:
setAlertedAchievementsToRegisterWhenProtectedDataAvailable:
profile
setByAddingObjectsFromSet:
shouldAlertForAchievement:
achievementsToAlert
earnedInstances
earnedDateComponents
unearnedKeyValueDomain
earnedKeyValueDomain
creatorDevice
gregorianCalendar
pendingAlertRequests
sourceName
availableCountryCodes
alertDates
componentsSeparatedByString:
year
month
alertabilityPredicate
predicateWithFormat:
predicateWithValue:
evaluateWithObject:
achievementAlertPredicateAllowsAlerting:
unearned
achievementWasEarnedOnAWatch:
earnedAchievementWasEverAlerted:
achievementWasEarnedToday:
earnedAchievementWasAlertedToday:
achievementTypeRequiresUnearnedAlert:
achievement:alertableForWatchCountryCode:
achievementAlertDateReached:
unearnedAchievementWasEverAlerted:
hasClientRequiredURLs
bridgeSettings
createdDate
shallowCopyReplacingEarnedInstances:
coachingAlertRequestForAchievement:
setPendingAlertRequests:
hk_minus:
allAchievements
anyObject
lastScheduledWristOnAlertDate
_delayAfterWristOnForNextDayScheduledAchievements
setLastScheduledWristOnAlertDate:
achievementStore:didAddAchievements:
achievementStore:didUpdateAchievements:
achievementStore:didRemoveAchievements:
achievementStoreDidFinishInitialFetch:
setAchievementStore:
setProfile:
setBridgeSettings:
setEarnedKeyValueDomain:
setUnearnedKeyValueDomain:
setGregorianCalendar:
setAchievementsToAlert:
_achievementStore
_earnedKeyValueDomain
_unearnedKeyValueDomain
_gregorianCalendar
_achievementsToAlert
_pendingAlertRequests
_achievementsToAlertWhenProtectedDataAvailable
_alertedAchievementsToRegisterWhenProtectedDataAvailable
enumerateActivitySummariesDuringInterval:calendar:error:handler:
recommendedGoalForDate:
weeklySummaryInfoForDate:
yesterdayClosedMinimumNumberOfRings:
yesterdayHasMinimumCompletionPercentage:goalType:
yesterdayHasRingWithCompletionPercentageLessThanMinimumPercentage:
hasBestDayThisWeekToDisplay
setThirdPartyAppsCount:
setHasThirdPartyAppsCount:
hasThirdPartyAppsCount
setThirdPartyAppsWroteDataCount:
setHasThirdPartyAppsWroteDataCount:
hasThirdPartyAppsWroteDataCount
setDatabaseSizeMB:
setHasDatabaseSizeMB:
hasDatabaseSizeMB
setRowCountObjects:
setHasRowCountObjects:
hasRowCountObjects
setPercentageDeletedObjects:
setHasPercentageDeletedObjects:
hasPercentageDeletedObjects
setManuallyEnteredTypesCount:
setHasManuallyEnteredTypesCount:
hasManuallyEnteredTypesCount
setHighFrequencyDataSizeMB:
setHasHighFrequencyDataSizeMB:
hasHighFrequencyDataSizeMB
setHasWatchSource:
setHasHasWatchSource:
hasHasWatchSource
rowCountCDA
setRowCountCDA:
setHasRowCountCDA:
hasRowCountCDA
rowCountCDAAsString:
StringAsRowCountCDA:
setLastMonthRowsAdded:
setHasLastMonthRowsAdded:
hasLastMonthRowsAdded
setLastMonthDatabaseSizeIncreaseMB:
setHasLastMonthDatabaseSizeIncreaseMB:
hasLastMonthDatabaseSizeIncreaseMB
thirdPartyAppsCount
thirdPartyAppsWroteDataCount
databaseSizeMB
rowCountObjects
percentageDeletedObjects
manuallyEnteredTypesCount
highFrequencyDataSizeMB
hasWatchSource
lastMonthRowsAdded
lastMonthDatabaseSizeIncreaseMB
_databaseSizeMB
_highFrequencyDataSizeMB
_lastMonthDatabaseSizeIncreaseMB
_lastMonthRowsAdded
_manuallyEnteredTypesCount
_percentageDeletedObjects
_rowCountObjects
_thirdPartyAppsCount
_thirdPartyAppsWroteDataCount
_rowCountCDA
_hasWatchSource
setUserCharacteristics:
setAchievementStatistics:
setFirstCalendarItemOfDay:
setEnableStandReminders:
setHasEnableStandReminders:
hasEnableStandReminders
setProgressUpdateFrequency:
setHasProgressUpdateFrequency:
hasProgressUpdateFrequency
setEnableGoalCompletions:
setHasEnableGoalCompletions:
hasEnableGoalCompletions
setEnableAchievements:
setHasEnableAchievements:
hasEnableAchievements
setEnableWeeklySummary:
setHasEnableWeeklySummary:
hasEnableWeeklySummary
setTimeZoneOffset:
setHasTimeZoneOffset:
hasTimeZoneOffset
setNumberOfEvents:
setHasNumberOfEvents:
hasNumberOfEvents
setEventBusyTime:
setHasEventBusyTime:
hasEventBusyTime
setDaysSinceFirstCalorieGoal:
setHasDaysSinceFirstCalorieGoal:
hasDaysSinceFirstCalorieGoal
hasUserCharacteristics
hasAchievementStatistics
setWellnessComplicationOnWatchFace:
setHasWellnessComplicationOnWatchFace:
hasWellnessComplicationOnWatchFace
hasFirstCalendarItemOfDay
enableStandReminders
progressUpdateFrequency
enableGoalCompletions
enableAchievements
enableWeeklySummary
timeZoneOffset
numberOfEvents
eventBusyTime
daysSinceFirstCalorieGoal
userCharacteristics
achievementStatistics
wellnessComplicationOnWatchFace
firstCalendarItemOfDay
_daysSinceFirstCalorieGoal
_eventBusyTime
_numberOfEvents
_progressUpdateFrequency
_timeZoneOffset
_achievementStatistics
_firstCalendarItemOfDay
_userCharacteristics
_enableAchievements
_enableGoalCompletions
_enableStandReminders
_enableWeeklySummary
_wellnessComplicationOnWatchFace
nl_dateByAddingDays:toDate:
nl_dateByAddingHours:toDate:
nl_dateByAddingMinutes:toDate:
nl_dateByAddingSeconds:toDate:
initWithState:
delegate
timerState
canStartTimer
canStopTimer
startingTimer
stoppingTimer
didStartTimer
didStopTimer
state
failedToStartTimer
failedToStopTimer
setDelegate:
setState:
_delegate
_state
defaultManager
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
localizedDescription
closeFile
_appendData:error:
lock
unlock
length
_nameOfNextLogFile
hk_error:format:
stringByAppendingPathComponent:
createFileAtPath:contents:attributes:
fileHandleForWritingAtPath:
removeItemAtPath:error:
fileDescriptor
setAttributes:ofItemAtPath:error:
hk_error:description:underlyingError:
hk_writeValue:size:error:
initWithLength:
replaceBytesInRange:withBytes:
bytes
offsetInFile
writeData:
truncateFileAtOffset:
_executeAtomically:
_sortedListOfLogFiles
reverseObjectEnumerator
stringByDeletingPathExtension
initWithString:
scanInteger:
contentsOfDirectoryAtPath:error:
readDataOfLength:
initWithData:
dataWithBytesNoCopy:length:freeWhenDone:
fileURLWithPath:
fileHandleForReadingFromURL:error:
_enumerateLogFile:fileHandle:mapping:length:handler:error:
hk_readValue:ofSize:error:
_enumerateLogWithVersion:fileHandle:mapping:size:headerLength:handler:error:
mutableBytes
_enumerateLogFromMapping:size:headerLength:handler:error:
_enumerateLogWithFileHandle:handler:error:
enumerateLogFileEntries:handler:error:
initWithPath:
addLogMessage:metricId:error:
path
setPath:
logLock
setLogLock:
fileHandle
setFileHandle:
_path
_logLock
_fileHandle
_settingForKey:defaultSetting:
setSettingValue:forKey:
setPrivacySettingValue:forKey:
_registerForSettingsNotificationForKey:
_unregisterForSettingsNotificationForKey:
_settings
achievementWithTemplateUniqueName:
weeklySummaryInfoForDate:profile:error:
profileExtensionWithIdentifier:
allFriends
predicateWithProperty:greaterThanOrEqualToValue:
predicateWithProperty:lessThanOrEqualToValue:
compoundPredicateWithPredicate:otherPredicate:
entityEnumeratorWithProfile:
setPredicate:
enumerateWithError:handler:
allActivitySharingFriends
workoutsCompletedDuringInterval:
initWithProfile:typicalDayModel:
isAvailable
stopUpdates
startUpdatesFromRecord:handler:
querySwimUpdatesFromRecord:handler:
_queue_lastReceivedSensorDatum
recordId
quantitySampleFromSwimData:toSwimData:startDate:endDate:
createCollectorsForProfile:
sensorDatumClass
stopPerformingUpdatesWithErrorEncountered:
beginUpdatesFromDatum:withHandler:
fetchHistoricalSensorDataSinceDatum:databaseIdentifier:completion:
hkObjectsFromSensorData:baseSensorDatum:startDate:endDate:
requiresSampleAggregation
_swimTracker
hk_isBeforeDate:
distance
meterUnit
quantityWithUnit:doubleValue:
localDevice
quantitySampleWithType:quantity:startDate:endDate:device:metadata:
observedType
domain
strokeCount
countUnit
strokeType
setLocation:
hasLocation
setArrivalDate:
setHasArrivalDate:
hasArrivalDate
location
arrivalDate
_arrivalDate
_location
healthDaemon
previousActivitySummary
setPreviousActivitySummary:
runGoalCompletionForMoveWithNewActivitySummary:
runGoalCompletionForExerciseWithNewActivitySummary:
runGoalCompletionForStandWithNewActivitySummary:
appleExerciseTimeGoal
minuteUnit
appleExerciseTime
appleStandHoursGoal
appleStandHours
runGoalCompletionsForNewActivitySummary:forChangedFields:
setCurrentActivitySummary:
_previousActivitySummary
exceptionWithName:reason:userInfo:
raise
addViews:
setCalendarItem:
viewsCount
clearViews
viewsAtIndex:
setActivityCache:
setAchievement:
setWeeklySummaryDetail:
goalTypesCount
clearGoalTypes
goalTypesAtIndex:
addGoalTypes:
setResponseFlags:
viewsType
alertType
setAlertType:
setHasAlertType:
hasAlertType
alertTypeAsString:
StringAsAlertType:
setDndEnabled:
setHasDndEnabled:
hasDndEnabled
setFailedPosting:
setHasFailedPosting:
hasFailedPosting
testAction
setTestAction:
setHasTestAction:
hasTestAction
testActionAsString:
StringAsTestAction:
hasCalendarItem
hasActivityCache
hasAchievement
hasWeeklySummaryDetail
goalTypes
setGoalTypes:count:
hasResponseFlags
dndEnabled
failedPosting
calendarItem
views
setViews:
activityCache
achievement
weeklySummaryDetail
responseFlags
_goalTypes
_achievement
_activityCache
_alertType
_calendarItem
_responseFlags
_testAction
_views
_weeklySummaryDetail
_dndEnabled
_failedPosting
_trackingOffWristEvents
_shouldPauseWorkouts
_pauseActiveWorkouts
_stopTrackingOffWristEvents
_incrementOffWristCount
_shouldTrackOffWristEvents
primaryProfile
workoutManager
isInHeartRateRecovery
_endHeartRateRecovery
_handleOnWristEvent
_handleOffWristEvent
hasAnyActiveWorkouts
pauseActiveWorkoutsWithCompletion:
endHeartRateRecovery
initWithHealthDaemon:hidHandler:
_hidHandler
_consecutiveOffWristEvents
_lastOffWristDetectionDate
setWalking:
setHasWalking:
hasWalking
setAutomotive:
setHasAutomotive:
hasAutomotive
setCycling:
setHasCycling:
hasCycling
setRunning:
setHasRunning:
hasRunning
setOther:
setHasOther:
hasOther
setWorkout:
setHasWorkout:
hasWorkout
setHeartRate:
setHasHeartRate:
hasHeartRate
setActiveCalories:
setHasActiveCalories:
hasActiveCalories
setDuration:
setHasDuration:
hasDuration
setUnknown:
setHasUnknown:
hasUnknown
walking
automotive
cycling
running
other
workout
heartRate
activeCalories
duration
unknown
_activeCalories
_automotive
_cycling
_duration
_heartRate
_other
_running
_unknown
_walking
_workout
activityType
setActivityType:
setHasActivityType:
hasActivityType
activityTypeAsString:
StringAsActivityType:
setDurationMs:
setHasDurationMs:
hasDurationMs
setTotalEnergyBurned:
setHasTotalEnergyBurned:
hasTotalEnergyBurned
setTotalDistance:
setHasTotalDistance:
hasTotalDistance
setTotalSteps:
setHasTotalSteps:
hasTotalSteps
durationMs
totalEnergyBurned
totalDistance
totalSteps
_durationMs
_totalDistance
_totalEnergyBurned
_totalSteps
_activityType
setConsecutiveStandingHoursGoalsMet:
setHasConsecutiveStandingHoursGoalsMet:
hasConsecutiveStandingHoursGoalsMet
setConsecutiveBriskMinuteGoalsMet:
setHasConsecutiveBriskMinuteGoalsMet:
hasConsecutiveBriskMinuteGoalsMet
setCurrentCalorieGoalConsecutiveCompleteDays:
setHasCurrentCalorieGoalConsecutiveCompleteDays:
hasCurrentCalorieGoalConsecutiveCompleteDays
setConsecutiveCompleteDays:
setHasConsecutiveCompleteDays:
hasConsecutiveCompleteDays
consecutiveStandingHoursGoalsMet
consecutiveBriskMinuteGoalsMet
currentCalorieGoalConsecutiveCompleteDays
consecutiveCompleteDays
_consecutiveBriskMinuteGoalsMet
_consecutiveCompleteDays
_consecutiveStandingHoursGoalsMet
_currentCalorieGoalConsecutiveCompleteDays
setDefinitionIdentifier:
achievementType
setAchievementType:
setHasAchievementType:
hasAchievementType
achievementTypeAsString:
StringAsAchievementType:
setCompletedDate:
setHasCompletedDate:
hasCompletedDate
setValue:
setHasValue:
hasValue
hasDefinitionIdentifier
workoutActivityType
setWorkoutActivityType:
setHasWorkoutActivityType:
hasWorkoutActivityType
workoutActivityTypeAsString:
StringAsWorkoutActivityType:
completedDate
value
definitionIdentifier
_completedDate
_value
_achievementType
_definitionIdentifier
_workoutActivityType
application
setApplication:
setHasApplication:
hasApplication
applicationAsString:
StringAsApplication:
_application
_createProgressEvents
_queue_rescheduleTasksForScheduledAlerts
postNotificationName:object:
_queue_runGoalProgressEventDetection
_queue_cancelScheduledAlerts
nextScheduledDatesByEventIdentifiersForEvents:model:evaluationDelegate:
_setDate:forUnprotectedKey:
anyEventsShouldFireForGoalProgress:withModel:evaluationDelegate:
_queue_updateLastRunValues
_queue_persistLastRunGoalProgress
currentStandGoalPercentage
_setNumber:forUnprotectedKey:
dateForKey:domain:category:profile:entity:error:
numberForKey:domain:category:profile:entity:error:
setDate:forKey:domain:category:profile:error:
setNumber:forKey:domain:category:profile:error:
_unprotectedDateForKey:
_unprotectedNumberForKey:
_unprotectedUserDefaultsDidSync:
_calendarDayChanged:
_todayActivityChanged:
_rescheduleTasksForScheduledAlerts
_isScheduledFireDateStillValid
evaluateEvents:withModel:evaluationDelegate:
_queue_generateAlertRequestForProgressEvent:
userStartOfDay
containsString:
_runGoalProgressEventDetection
previousMoveGoalPercentage
previousExerciseGoalPercentage
_progressEvents
_lastRunMovePercentage
_lastRunExercisePercentage
_lastRunStandPercentage
sharedInstance
initWithHandler:
observerForBacklightOffWithHandler:
backlightDidChange:from:to:
backlightDidTurnOn:forReason:
backlightDidTurnOff:forReason:
_handler
_alertSuppressionQueue_refreshActivityAlertSuppression
_fetchActivityAlertSuppressionStateForReason:completion:
_clientExistsWithId:
_invalidateClientsWithIds:
_addActivityAlertSuppressionClientWithIdentifier:suppressionReason:timeoutUntilDate:
_maxClientSuppressionEndTimeForReason:
_currentDate
dictionaryWithDictionary:
removeObjectsForKeys:
_notifyAfterBacklightOffForSuppressionId:reason:
_notifyObserversOfInvalidationForSuppressionId:reason:
_performInvalidationBehaviorIfAnyForClientWithId:
_deleteClientsWithIds:
_isEmptyClientsList
arrayWithCapacity:
_cleanupClientsWithTimeoutBefore:
_maxClientSuppressionEndTime
_alertSuppressionQueue_restartActivityAlertSuppressionTimer
_alertSuppressionQueue_cancelActivityAlertSuppressionTimer
_alertSuppressionQueue_startActivityAlertSuppressionTimerWithDuration:
isEqualToNumber:
laterDate:
unregisterAlertSuppressionObserver:
suppressActivityAlertsForIdentifier:suppressionReason:timeoutUntilDate:
invalidateActivityAlertSuppressionForIdentifier:
_alertSuppressionQueue
_alertSuppressionObserverQueue
_backlightQueue
_alertSuppressionTimerSource
_backlightObservers
_alertSuppressionObservers
_unitTesting_synthesizeBacklightOffEvent
_refreshCurrentWristDetectionAndOnWristState
_notifyObserver:forWristState:
_internalQueue_updateCachesFromPersistentStore
_internalQueue_onWristMonitorStateDidChangeToState:
setChangeHandler:
_backgroundTaskWristEventFired
addObserver:forDataType:
_internalQueue_transferSamplesFromDefaultsToDatabase
categorySampleWithType:value:startDate:endDate:device:metadata:
isDataProtectedByFirstUnlockAvailable
_internalQueue_persistSamplesToDatabase:
_internalQueue_persistSamplesToDefaults:
deviceManager
currentDeviceEntityWithError:
defaultLocalDataProvenanceWithDeviceEntity:
_internalQueue_now
_internalQueue_sortedSamplesFromDefaults
arrayByAddingObjectsFromArray:
_internalQueue_calendar
predicateWithBlock:
filteredArrayUsingPredicate:
predicateMatchingAllPredicates:
_getFirstOnWristSamplesWithProfile:sampleType:predicate:ascending:
entityEnumeratorWithType:profile:
setLimitCount:
sortDescriptorWithKey:ascending:
setSortDescriptors:
_internalQueue_notifyObserversForWristState:async:
getWristState:
_fetchErrorHandledWristDetectionStateWithCompletion:
requestWristDetectionDisabledStatusWithCompletion:
_refreshCurrentOnWristState
_wristStateChangedTo:
_fetchWristDetectionStateWithCompletion:
_internalQueue_handleGizmoOnWristState
_internalQueue_handleGizmoOffWristState
_internalQueue_handleGizmoDisabledWristState
_internalQueue_cancelDebounceTimer
_internalQueue_scheduleTaskAtDate:
_internalQueue_performLastChanceSyncAndWait
nanoSyncManager
syncHealthDataWithOptions:reason:completion:
setSecond:
dateByAddingComponents:toDate:options:
_internalQueue_persistWristStateChangeToState:date:
initialize
samplesAdded:anchor:
didAddSamplesOfTypes:anchor:
samplesJournaled:type:
samplesOfTypesWereRemoved:anchor:
initWithProfile:backgroundTaskScheduler:onWristMonitor:
_clearCachedState
_onWristMonitor
_internalQueue
_lastNotifiedState
_wristDetectionStateErrorCounter
_lastMonitorOnWristState
_mostRecentOnWristDate
_firstOnWristDateToday
_calendarOverride
_dateOverride
_setCalendarOverride:
_setDateOverride:
_reset
categoryType
initWithProfile:bridgeSettings:wristManager:dataLogger:
_sedentaryTimerState
_registerForFakeStandTriggerNotifications
_queue_fireReminderNotificationIfRequiredOfType:forHourWithStartDate:force:
startSedentaryTimerIfPossibleWithDelay:
stopSedentaryTimer
_queue_processCachedSedentaryHourSamples
_registerDaemonLaunchForSedentaryTimerFiredNotification
_checkIfSedentaryTimerNeedsStartWithDelay:
_timer
isActive
_queue_stopSedentaryTimerIfRequired
_queue_startSedentaryTimerIfRequired
pairingID
_delayIntervalForSedentaryTimerStart
_canStartSedentaryTimer
_queue_stopSedentaryTimer
_queue_stopTimerHandlerWithError:
stopTimerWithHandler:
code
_timerStoppedWithError:
_queue_startTimer
_queue_registerTimerHandler
_startDateForSedentaryTimer
_queue_startTimerHandlerWithError:
startTimerWithStartTime:periodInterval:reminderInterval:autoReschedule:handler:
_timerStarted
_checkIfSedentaryTimerNeedsStop
_queue_processDataObjectsInArray:
registerForAlarmsWithHandler:
alarmType
didWake
_roundedDateForDate:
logStandHourDidStand:date:
_saveMissedHourDetailsIntoDBWithStartDate:
_saveActiveHourDetailsIntoDBWithStartDate:
_queue_fireCongratulatoryNotificationIfRequiredForHourWithStartDate:
minute
setMinute:
_shouldFireReminderForHourWithStartDate:
_numberOfActiveHoursToday
_timeoutDateForSedentaryTimerAlertOfType:withHourStartDate:
generateSedentaryAlertExperimentInstance
_queue_showSedentaryAlertOfType:withTimeoutDate:experimentInstance:
_queue_isReminderNotificationRequiredOfType:forHourWithStartDate:
_queue_fireReminderNotificationImmediatelyOfType:forHourWithStartDate:
shouldDelayNotificationsUntilSettled
_fireReminderNotificationImmediatelyIfRequiredOfType:forHourWithStartDate:force:
_shouldFireCongratulatoryAlertForHourWithStartDate:
_saveSedentaryHourDataIfRequired:
_cacheSedentaryHourStartDate:state:
_keyFromDate:
_dateFromKey:
_dataExistsForHourStart:
performReadTransactionWithHealthDatabase:error:block:
_saveSedentaryHourDataObjects:error:
countOfSamplesWithType:profile:matchingPredicate:withError:
insertDataObjects:withProvenance:creationDate:skipInsertionFilter:error:
stringValue
dateWithTimeIntervalSinceReferenceDate:
mostRecentSampleWithType:profile:encodingOptions:predicate:anchor:error:
_isSedentaryTimerNotificationEnabled
_numberOfAwakeHoursToday
_wheelchairUseNumber
testShouldSkipSedentaryAlert
UUID
initWithSubmanagerIdentifier:UUID:userInfo:
setExperimentInstance:
logSkippedCoachingRequest:
initWithSuiteName:
_sedentaryTimer
_wristManager
_sedentaryTimerStateEngine
_retryInCaseOfErrorCounter
_reminderInterval
_currentExperimentInstance
_notifyToken
isExerciseMinuteAvailable
_exerciseMinuteDataStore
startUpdatesWithHandler:
queryExerciseMinutesFromRecord:handler:
briskMinuteDataType
_shouldSkipInitialResults
_queue_lastReceivedSecondaryContext
recordID
_primaryContextExistsForDomain:profile:
_hasEstablishedSecondaryContext
_didMigrateFromOldBriskMinuteCalculation
_queue_updateLastReceivedSecondaryContext:
_appendSecondaryContextWithValue:forKey:
willPersistHKObjects:
_queue_aggregationInterval
encodeWithCoder:
initWithCoder:
supportsSecureCoding
sourceId
setFrom:
setTo:
hasFrom
hasTo
mode
setMode:
setHasMode:
hasMode
modeAsString:
StringAsMode:
from
_from
_mode
batteryState
setBatteryState:
setHasBatteryState:
hasBatteryState
batteryStateAsString:
StringAsBatteryState:
_batteryState
setAchievementDataProvider:
setActivityDataProvider:
setActivitySharingDataProvider:
setWorkoutDataProvider:
competitionsStartingToday
competitionsEndingToday
_achievementDataProvider
_activityDataProvider
_activitySharingDataProvider
_workoutDataProvider
setPoorTiming:
setHasPoorTiming:
hasPoorTiming
setAlreadyDoing:
setHasAlreadyDoing:
hasAlreadyDoing
poorTiming
alreadyDoing
_alreadyDoing
_poorTiming
setIsBusy:
setHasIsBusy:
hasIsBusy
isBusy
_isBusy
setStandHourTimestamp:
setHasStandHourTimestamp:
hasStandHourTimestamp
setDidStand:
setHasDidStand:
hasDidStand
standHourTimestamp
didStand
_standHourTimestamp
_didStand
setActiveSeconds:
setHasActiveSeconds:
hasActiveSeconds
setEventTimestamp:
setHasEventTimestamp:
hasEventTimestamp
setHeight:
setHasHeight:
hasHeight
setWeight:
setHasWeight:
hasWeight
setAge:
setHasAge:
hasAge
activeSeconds
eventTimestamp
height
weight
_eventTimestamp
_activeSeconds
_age
_height
_weight
indexOfObjectPassingTest:
_unit
localizationBundleURL
bundleWithURL:
hk_startOfDateByAddingDays:toDate:
goalTypeAtIndex:
addGoalType:
setFeatures:
setEventType:
setHasEventType:
hasEventType
setRecommendedGoal:
setHasRecommendedGoal:
hasRecommendedGoal
setNewGoal:
setHasNewGoal:
hasNewGoal
hasFeatures
eventType
recommendedGoal
newGoal
features
_eventType
_features
_newGoal
_recommendedGoal
setTypeIdentifier:
setHasTypeIdentifier:
hasTypeIdentifier
setInSession:
setHasInSession:
hasInSession
setMinDelayUs:
setHasMinDelayUs:
hasMinDelayUs
setMaxDelayUs:
setHasMaxDelayUs:
hasMaxDelayUs
setMeanDelayUs:
setHasMeanDelayUs:
hasMeanDelayUs
setStdDelayUs:
setHasStdDelayUs:
hasStdDelayUs
setSampleCount:
setHasSampleCount:
hasSampleCount
setIndexInSession:
setHasIndexInSession:
hasIndexInSession
typeIdentifier
inSession
minDelayUs
maxDelayUs
meanDelayUs
stdDelayUs
sampleCount
indexInSession
_indexInSession
_maxDelayUs
_meanDelayUs
_minDelayUs
_sampleCount
_stdDelayUs
_typeIdentifier
_inSession
_buildWeeklySummaryInfoForStartDateComponents:startDayForEnergyBurn:endDateComponents:endDayForEnergyBurn:profile:
_pushCount
distanceWalkingRunning
_flightsClimbed
_enumerateActivitySummariesForStartDateComponents:endDateComponents:profile:error:handler:
deepBreathingWeeklySummaryInfoForDate:profile:error:
initWithUUID:configuration:client:delegate:
connectionInvalidated
profileExtension
coachingAlertNotifier
taskIdentifier
queue
coachingManager
predictedActivityAlertController
didClassifyPredictedActivityWithIdentifier:asActivityType:locationType:
didBeginPredictedActivityAtDate:withIdentifier:completion:
didTransitionFromPredictedActivityToActiveWorkoutWithIdentifier:
userDidDeclinePredictedActivityWithIdentifier:
systemDidAbandonPredictedActivityWithIdentifier:
systemDidDenyAlertForPredictedActivityWithIdentifier:
systemDidHideAlertForPredictedActivityWithIdentifier:completion:
getPredictedActivitiesWithCompletion:
setMuteForTodayPredictedActivityAlerts:completion:
didPredictActivityEndedWithIdentifier:endDate:activityType:locationType:
setCurrentActivityCacheOverrideDate:timeZone:completion:
remoteObjectProxyWithErrorHandler:
client
requiredEntitlements
coachingAlertDidCompleteWithResponse:completion:
registerForUpdatesOfTypes:
runCoachingManagerWithCompletion:
forceCoachingWithArguments:completion:
showTypicalDayWithCompletion:
remote_didClassifyPredictedActivityWithIdentifier:asActivityType:locationType:completion:
remote_didBeginPredictedActivityAtDate:withIdentifier:completion:
remote_didTransitionFromPredictedActivityToActiveWorkoutWithIdentifier:completion:
remote_userDidDeclinePredictedActivityWithIdentifier:completion:
remote_systemDidAbandonPredictedActivityWithIdentifier:completion:
remote_systemDidDenyAlertForPredictedActivityWithIdentifier:completion:
remote_systemDidHideAlertForPredictedActivityWithIdentifier:completion:
remote_getPredictedActivitiesWithCompletion:
remote_didPredictActivityEndedWithIdentifier:endDate:activityType:locationType:completion:
remote_setMuteForTodayPredictedActivityAlerts:completion:
remote_setCurrentActivityCacheOverrideDate:timeZone:completion:
remote_weeklySummaryInfoForDate:withCompletion:
remote_suppressActivityAlertsForIdentifier:suppressionReason:timeoutUntilDate:completion:
remote_invalidateActivityAlertSuppressionForIdentifier:completion:
exportedInterface
remoteInterface
setMuteForTodayPredictedActivityAlerts:ompletion:
setProfileExtension:
setQueue:
_profileExtension
sampleType
sourceRevision
source
_isLocalDevice
_reportAndReset
ingestionTracker:didGenerateLatencyEvent:
reset
initWithSampleType:
appendSamples:atTime:inSession:
dataTypeCode
_sumx
_sumxx
_minDelay
_maxDelay
_count
_reportIndex
_dataTypeCode
testShouldSkipDailyProgressAlert
testActionForCodableAlertType:
addSuiteNamed:
synchronize
_queue_readDataCollectionSetting
_registerForSettingChangeNotifications
initWithComponentId:
workoutType
_registerForActivityAppLaunchNotifications
_isDataLogEnabled
_logDirectoryPath
_queue_startTrackingAfterDaemonReady
addWorkoutEventObserver:
removeObserver:forDataType:
removeWorkoutEventObserver:
_queue_logActivityAppDidLaunch
directoryPath
_workoutActivityTypeFromString:
setMostRecentGoal:
setNumTimesGoalAchieved:
setSelectedGoal:
responseOptions
experimentInstance
_queue_updateEvent:withExperimentInstance:
_queue_updateEvent:withAchievement:
_queue_updateEvent:withWeeklySummaryInfo:lastResponseInfo:recommendedGoal:
_queue_updateEvent:withGoalTypes:
_queue_codableActivityCacheForActivitySummary:
_queue_concurrentCalendarItemForDate:
_queue_logCodable:metricId:
_onQueueIfEnabled:
availability
predicateForEventsWithStartDate:endDate:calendars:
isAllDay
_queue_concurrentCalendarItemFromEvent:
enumerateEventsMatchingPredicate:usingBlock:
failed
actions
presentationDate
dwelltime
responseUserInfo
_queue_updateEvent:withResponseOptionsFromActions:
compareStartDateWithEvent:
components:fromDate:toDate:options:
oldestSampleWithType:profile:encodingOptions:predicate:error:
_creationDate
_dateAsDays:
_dateComponentsAsAge:
quantity
meterUnitWithMetricPrefix:
gramUnitWithMetricPrefix:
timeZone
secondsFromGMT
_queue_codableUserCharacteristics
_queue_daysSinceFirstCalorieGoal
_queue_updateCalendarSummaryForWristOnSettings:
_queue_logFirstWristOnSettings
_queue_logExperimentalCondition:
enumerateIncludingDeletedObjects:error:handler:
_queue_stepsFromDate:toDate:
currentWorkoutActivityType
sessionId
setSessionUUID:
_queue_startTracking
_queue_endTracking
_queue_logWorkoutEvent:workoutManager:
bundleIdentifier
_queue_logWorkout:
hasLoadedActivitySummaries
logActivitySummary:
getAWDTimestamp
newMetricContainerWithIdentifier:
setMetric:
submitMetric:
workoutManager:didReceiveEvent:
initWithProfile:coachingAlertNotifier:bridgeSettings:
logExperimentalCondition:
_notifier
_lastUploadedActivityCacheIndex
_eventStore
_log
_activityNotifyToken
_managedConfigurationNotifyToken
_settingChangeNotifyToken
_dataCollectionEnabled
_awdServerConnection
_logSettingsAtNextUnlock
_daemonReady
_ingestionTrackers
dictionaryWithCapacity:
initWithCalendarIdentifier:
_queue_updatePreferences
performWhenPostLaunchSessionRecoveryHasCompleted:
predictionType
stringForPredictionType:
_queue_stopMonitoringPredictedActivity:
_hideAlertForPredictedActivity:
_queue_resetPredictionsOfType:
_queue_updateMuteForToday
_submitSettingsAnalytics
identifier
_queue_showStartAlertForPredictedActivity:
_queue_showEndAlertForPredictedActivity:
_queue_predictedActivityTimedOut:
_queue_setHighFrequencyDataIngestionEnabled:forWorkout:
_alertTimeoutDuration:
_queue_scheduleTimeoutForPredictedActivity:atDispatchTime:
_isPredictionUserDismissable:
stateString
userDismissedWorkoutAlert
_queue_expireMuteForTodayIfNecessaryWithPredictionDate:
initWithIdentifier:predictionType:date:locationType:activityType:swimmingLocationType:
_queue_isMutedOnDate:
_queue_muteForTodayDate
_requestBlackoutForMutedActivity:
_queue_startMonitoringPredictedActivity:
getCurrentWorkoutSnapshotWithCompletion:
floatValue
_minimumAlertDelayForPreditedActivity:
sharedService
openApplication:options:withResult:
_swimmingLocationTypeForSessionLocationType:activityType:
setSwimmingLocationType:
_queue_scheduleRealertForPredictedActivity:afterDelay:
hour
hk_dateFromComponentsWithYear:month:day:hour:
_areDateComponents:equalToDateComponents:
setYear:
setMonth:
setDay:
_persistMuteForTodayDateComponents:
_queue_resetAllPredictions
isFirstPartyWorkout
configuration
fitnessMachineSessionUUID
observedTypesForActivityType:isIndoor:connectedToFitnessMachine:
setWithObjects:
takeCollectionAssertionWithOwnerIdentifier:sampleTypes:observer:observerState:collectionInterval:
type
_locationTypeForCMWorkoutType:
_predictionState:
_locationTypeForCMWorkout:
_predictionActivityType:
_disallowRestoreStateFromClassification
_isUserInitiatedWorkout:
_isWorkout:equalToPredictedActivity:
workoutManager:didStartWorkout:atDate:
workoutManager:didStopWorkout:atDate:
workoutManager:willPauseWorkout:atDate:
workoutManager:willResumeWorkout:atDate:
workoutManager:didFailWorkout:withError:
workoutManager:suggestedStopWorkout:atDate:
workoutManager:issuedPrediction:
workoutManager:workoutLocationEventUpdate:
workoutManagerDidStartWorkout:workout:startDate:
workoutManagerDidStopWorkout:workout:stopDate:
workoutManagerWillPauseWorkout:workout:pauseDate:
workoutManagerWillResumeWorkout:workout:resumeDate:
workoutManagerDidFail:workout:error:
workoutManagerSuggestedStop:workout:stopDate:
initWithAlertNotifier:alertSuppressionManager:profile:
_updateIsEnabledPreference
_coachingAlertNotifier
_alertSuppressionManager
_activityPredictor
_predictedActivities
_dataCollectionAssertions
_alertTimeouts
_scheduledAlerts
_isStartEnabled
_isEndEnabled
_restoreStateFromClassification
_minSecondsToAlertOverrideNumber
_muteForTodayDateComponents
triggerScheduleTask
_queue_coachingAlertRequest
_areWeeklySummaryNotificationsEnabled
_shouldShowWeeklySummary
_shouldScheduleWeeklySummary
_setMostRecentWeeklySummaryAlertDate:profile:
_weeklySummaryHasData
_mostRecentWeeklySummaryAlertDateWithProfile:
eventTypeAsString:
StringAsEventType:
hasSessionUUID
sessionUUID
_sessionUUID
nextFireDateWithModel:
minimumDayDuration
_minimumDayDuration
timeIntervalAfterOnWrist
setTimeIntervalAfterOnWrist:
_timeIntervalAfterOnWrist
percentOfDay
_percentOfDay
userEndOfDay
secondsBeforeWristOff
_secondsBeforeWristOff
_nextFireDateForEvent:model:
_eventDidCrossScheduledThreshold:withModel:evaluationDelegate:
startOfToday
endOfToday
setHasMostRecentGoal:
hasMostRecentGoal
setHasNumTimesGoalAchieved:
hasNumTimesGoalAchieved
setHasSelectedGoal:
hasSelectedGoal
mostRecentGoal
numTimesGoalAchieved
selectedGoal
_mostRecentGoal
_numTimesGoalAchieved
_selectedGoal
currentCompetition
stage
@24@0:8@16
@16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
B32@0:8@16@24
q16@0:8
v24@0:8q16
B32@0:8@"FITypicalDayActivityModel"16@"<NLCoachingProgressEventEvaluationDelegate>"24
@"NLCoachingProgressReason"16@0:8
@"NSDictionary"24@0:8@"FITypicalDayActivityModel"16
v60@0:8q16@24q32q40B48@52
v16@0:8
v60@0:8q16@"NSDate"24q32q40B48@"NLExperimentInstance"52
v24@0:8@16
v24@0:8@"NLPredictedActivity"16
v24@0:8@"NSArray"16
v24@0:8@?16
v24@0:8@?<v@?BB@"NSError">16
v32@0:8@16Q24
@"NSMutableSet<NLActivitySedentaryAlertObserver>"
@"NSMutableSet<NLPredictedActivityAlertObserver>"
@"NSMutableSet<NLActivityCoachingAlertObserver>"
@"NSMutableSet<NLActivityCarouselServiceProvider>"
@"NSObject<OS_dispatch_queue>"
@24@0:8q16
v24@0:8@"NLBridgeSettings"16
v20@0:8B16
@24@0:8Q16
v32@0:8@16@24
@"NSArray"24@0:8Q16
@"NSArray"24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
v24@0:8@"NLCoachingAlertResponse"16
@"<NLCoachingSubmanagerDelegate>"16@0:8
v24@0:8@"<NLCoachingSubmanagerDelegate>"16
@"FITypicalDayActivityModel"16@0:8
v24@0:8@"FITypicalDayActivityModel"16
@32@0:8@16@24
d16@0:8
@"<HDHealthDaemon>"
@"NLBridgeSettings"
@"NLActivityAlarmMonitor"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<NLCoachingSubmanagerDelegate>"
@"FITypicalDayActivityModel"
d32@0:8@16@24
@40@0:8@16@24^@32
d32@0:8@16q24
Q24@0:8@16
Q32@0:8d16@24
d24@0:8@16
q24@0:8@16
Q32@0:8@16Q24
@40@0:8q16@24@32
B40@0:8@16@24^@32
@32@0:8@16^@24
B48@0:8@16@24@32^@40
B32@0:8@16^@24
@24@0:8^@16
@"NSMutableDictionary"
v24@0:8@"<HDHealthDaemon>"16
v28@0:8@16B24
v28@0:8@"<HDHealthDatabase>"16B24
v40@0:8@16@24Q32
v40@0:8@"HDCurrentActivitySummaryHelper"16@"HKActivitySummary"24Q32
v32@0:8@16q24
v32@0:8@"NSString"16q24
B48@0:8@16@24^@32@?40
@"NSDate"16@0:8
@"NSCalendar"16@0:8
B48@0:8@"NSDateComponents"16@"NSDateComponents"24^@32@?<v@?@"HKActivitySummary">40
v40@0:8@16@24@32
v24@0:8@"<NLCoachingSubmanager>"16
v40@0:8@"<NLCoachingSubmanager>"16@"NSString"24@"NSDate"32
B32@0:8@"<NLCoachingSubmanager>"16@"NSString"24
v32@0:8@"<NLCoachingSubmanager>"16@"NSString"24
@"NSDate"24@0:8@"<NLCoachingSubmanager>"16
@"NLCoachingPreferences"16@0:8
@"HKActivitySummary"16@0:8
@80@0:8@16@24@32@40@48@56@64@72
v32@0:8@16@?24
B24@0:8q16
d24@0:8Q16
v24@0:8Q16
v32@0:8Q16@?24
q24@0:8Q16
v28@0:8@?16B24
@28@0:8Q16B24
@"HDProfile"
@"NLCoachingAlertNotifier"
@"HDBackgroundTaskScheduler"
@"HDCurrentActivitySummaryHelper"
@"NLGizmoWristEventsManager"
@"NLDataLogger"
@"NLCoachingPreferences"
@"HDDataCollectionAssertion"
@"CMPedometer"
@"NSMutableSet"
@"NSDictionary"
@"HKActivitySummary"
@"NSCalendar"
@"NSDate"
@"NSNumber"
@24@0:8^{_NSZone=}16
{?="timestamp"b1"onWrist"b1}
B68@0:8q16q24d32d40d48B56@?60
B68@0:8q16q24d32d40d48B56@?<B@?dd>60
v32@0:8q16q24
B32@0:8q16q24
Q24@0:8q16
v32@0:8Q16q24
v24@0:8@?<v@?@"ACHAchievement"@"NSString">16
@"NSString"32@0:8@"ACHAchievement"16@"NSString"24
@"NSString"24@0:8@"ACHAchievement"16
@"ACHAchievement"16@0:8
v40@0:8@16@?24@?32
B24@0:8r*16
@40@0:8@16@24@32
@"NSHashTable"
v20@0:8I16
I16@0:8
@"NSData"
{?="awdMetricId"b1}
{?="activeHours"b1"briskMinutes"b1"cacheIndex"b1"endDate"b1"energyBurned"b1"energyBurnedGoal"b1"energyBurnedGoalDate"b1"startDate"b1"stepCount"b1"walkingAndRunningDistance"b1}
@"HDKeyValueDomain"
i16@0:8
v20@0:8i16
@20@0:8i16
i24@0:8@16
@"NSString"
{?="confidenceMillis"b1"recentVisitCount"b1"uncertaintyMillis"b1"locationType"b1}
{?="testCondition"b1}
@"FIActivitySettingsController"
@"NLAWDHealthKitExperimentalCondition"
{?="timestamp"b1}
v24@0:8d16
v32@0:8^{__IOHIDServiceClient=}16^v24
v32@0:8^{__IOHIDEvent=}16^v24
B24@0:8^B16
^{__IOHIDEventSystemClient=}
^{__IOHIDServiceClient=}
@"<NLFirstGlanceEngineDataSource>"
{?="dwelltimeMs"b1"endDate"b1"startDate"b1"dismissReason"b1"scrollBehavior"b1}
{?="ageYears"b1"biologicalSex"b1"heightCm"b1"weightKg"b1}
@"NSMutableArray"
v32@0:8@"ACHAchievementStore"16@"NSSet"24
v24@0:8@"ACHAchievementStore"16
@"ACHAchievementStore"
@"NSSet"
B32@0:8d16q24
B24@0:8d16
@"NSDictionary"16@0:8
{?="databaseSizeMB"b1"highFrequencyDataSizeMB"b1"lastMonthDatabaseSizeIncreaseMB"b1"lastMonthRowsAdded"b1"manuallyEnteredTypesCount"b1"percentageDeletedObjects"b1"rowCountObjects"b1"thirdPartyAppsCount"b1"thirdPartyAppsWroteDataCount"b1"timestamp"b1"rowCountCDA"b1"hasWatchSource"b1}
@"NLAWDHealthKitAchievementStatistics"
@"NLAWDHealthKitConcurrentCalendarItem"
@"NLAWDHealthKitUserCharacteristics"
{?="daysSinceFirstCalorieGoal"b1"eventBusyTime"b1"numberOfEvents"b1"progressUpdateFrequency"b1"timeZoneOffset"b1"timestamp"b1"enableAchievements"b1"enableGoalCompletions"b1"enableStandReminders"b1"enableWeeklySummary"b1"wellnessComplicationOnWatchFace"b1}
@32@0:8q16@24
@"<NLSedentaryTimerStateEngineDelegate>"
B40@0:8@16@?24^@32
B56@0:8^v16Q24Q32@?40^@48
B64@0:8@16@24^v32Q40@?48^@56
B68@0:8I16@20^v28Q36Q44@?52^@60
B36@0:8@16I24^@28
@"NSLock"
@"NSFileHandle"
@"ACHAchievement"24@0:8@"NSString"16
@"NSArray"32@0:8@"NSDateComponents"16@"NSCalendar"24
@"ACHAchievement"32@0:8@"NSDate"16@"NSCalendar"24
B48@0:8@"NSDateInterval"16@"NSCalendar"24^@32@?<v@?@"HKActivitySummary">40
d24@0:8@"NSDate"16
@"NSDictionary"24@0:8@"NSDate"16
@"NSSet"16@0:8
@"NSArray"24@0:8@"NSDateInterval"16
v40@0:8@16@24@?32
@48@0:8@16@24@32@40
@"CMSwimTracker"
@"NLAWDHealthKitRoutineLocation"
{?="arrivalDate"b1"timestamp"b1}
@"<NLDailyActivityGoalDetectionDelegate>"
^I16@0:8
I24@0:8Q16
v32@0:8^I16Q24
{?="list"^I"count"Q"size"Q}
@"NLAWDHealthKitAchievement"
@"NLAWDHealthKitActivityCache"
@"NLAWDHealthKitNotificationResponseFlags"
@"NLAWDHealthKitWeeklySummaryDetail"
{?="endDate"b1"startDate"b1"timestamp"b1"alertType"b1"testAction"b1"dndEnabled"b1"failedPosting"b1}
v28@0:8@"NLHIDHandler"16B24
@"NLHIDHandler"
{?="activeCalories"b1"automotive"b1"briskMinutes"b1"cycling"b1"duration"b1"heartRate"b1"other"b1"running"b1"unknown"b1"walking"b1"workout"b1}
{?="durationMs"b1"endDate"b1"startDate"b1"timestamp"b1"totalDistance"b1"totalEnergyBurned"b1"totalSteps"b1"activityType"b1}
{?="consecutiveBriskMinuteGoalsMet"b1"consecutiveCompleteDays"b1"consecutiveStandingHoursGoalsMet"b1"currentCalorieGoalConsecutiveCompleteDays"b1}
{?="completedDate"b1"value"b1"achievementType"b1"workoutActivityType"b1}
{?="timestamp"b1"application"b1}
@"NSDate"24@0:8@"NSString"16
@"NSArray"
@24@0:8@?16
v40@0:8@16q24q32
v40@0:8@"NSString"16q24q32
v32@0:8@"NSString"16Q24
v40@0:8@16q24@32
v32@0:8q16@?24
v24@0:8@"<HDNanoAlertSuppressionObserver>"16
v40@0:8@"NSString"16q24@"NSDate"32
v24@0:8@"NSString"16
v24@0:8@?<v@?B>16
v32@0:8q16@?<v@?B>24
@"NSObject<OS_dispatch_source>"
@44@0:8@16@24@32B40
v32@0:8@"NSArray"16@"NSNumber"24
v32@0:8@"NSSet"16@"NSNumber"24
v32@0:8@"NSArray"16@"HKSampleType"24
v32@0:8Q16@24
v28@0:8Q16B24
@"CSLSOnWristMonitor"
B32@0:8q16@24
v32@0:8q16@24
v36@0:8q16@24B32
v40@0:8q16@24@32
@"CMSedentaryTimer"
@"NLSedentaryTimerStateEngine"
@"NLExperimentalCondition"
@"NLExperimentInstance"
@"<NLSedentaryTimerAlertDelegate>"
@"CMExerciseMinute"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSUUID"16@0:8
{?="endDate"b1"startDate"b1"timestamp"b1"mode"b1}
{?="timestamp"b1"batteryState"b1}
@"<NLFirstGlanceAchievementDataProvider>"
@"<NLFirstGlanceActivityDataProvider>"
@"<NLFirstGlanceActivitySharingDataProvider>"
@"<NLFirstGlanceWorkoutDataProvider>"
{?="alreadyDoing"b1"poorTiming"b1}
{?="endDate"b1"startDate"b1"isBusy"b1}
@"HKWorkout"16@0:8
{?="standHourTimestamp"b1"timestamp"b1"didStand"b1}
{?="eventTimestamp"b1"timestamp"b1"activeSeconds"b1"age"b1"biologicalSex"b1"briskMinutes"b1"energyBurned"b1"energyBurnedGoal"b1"height"b1"weight"b1}
@"NLAWDHealthKitCoachingFeatureGroup"
{?="duration"b1"eventTimestamp"b1"timestamp"b1"dismissReason"b1"eventType"b1"newGoal"b1"recommendedGoal"b1}
{?="endDate"b1"indexInSession"b1"maxDelayUs"b1"meanDelayUs"b1"minDelayUs"b1"sampleCount"b1"startDate"b1"stdDelayUs"b1"timestamp"b1"typeIdentifier"b1"inSession"b1}
B56@0:8@16@24@32^@40@?48
@56@0:8@16@24@32@40@48
v32@0:8@"NLCoachingAlertResponse"16@?<v@?B@"NSError">24
v48@0:8@16Q24q32@?40
v56@0:8@16@24Q32q40@?48
v28@0:8B16@?20
v48@0:8@16q24@32@?40
v24@0:8@?<v@?@"NSArray"@"NSError">16
v32@0:8@"NSArray"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"NSString"@"NSError">16
v48@0:8@"NSString"16Q24q32@?<v@?B@"NSError">40
v40@0:8@"NSDate"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v56@0:8@"NSString"16@"NSDate"24Q32q40@?<v@?B@"NSError">48
v28@0:8B16@?<v@?B@"NSError">20
v40@0:8@"NSDate"16@"NSTimeZone"24@?<v@?B@"NSError">32
v32@0:8@"NSDate"16@?<v@?@"NSDictionary"@"NSError">24
v48@0:8@"NSString"16q24@"NSDate"32@?<v@?B@"NSError">40
@"NLNanoHealthProfileExtension"
v36@0:8@16d24B32
@"<NLIngestionTrackerDelegate>"
i20@0:8i16
v32@0:8@"HDWorkoutManager"16@"_HKWorkoutEvent"24
v32@0:8@"NLIngestionTracker"16@"NLAWDHealthKitIngestionLatencyEvent"24
v48@0:8@16@24@32d40
v28@0:8B16@20
v28@0:8@16I24
@"EKEventStore"
@"NLDataLog"
@"AWDServerConnection"
v40@0:8@"CMWorkoutManager"16@"CMWorkout"24@"NSDate"32
v40@0:8@"CMWorkoutManager"16@"CMWorkout"24@"NSError"32
v32@0:8@"CMWorkoutManager"16@"CMWorkout"24
v32@0:8@16d24
q32@0:8q16Q24
v40@0:8@16Q24q32
v48@0:8@16@24Q32q40
q24@0:8q16
@"NLAlertSuppressionManager"
@"CMWorkoutManager"
@"NSDateComponents"
{?="timestamp"b1"activityType"b1"eventType"b1}
B40@0:8@16@24@32
{?="mostRecentGoal"b1"numTimesGoalAchieved"b1"selectedGoal"b1}
