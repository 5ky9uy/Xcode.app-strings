ffffff
init
setDelegate:
array
setTrigger:
healthLiteDataSource
hidAccelDataSource
hidGyroDataSource
arrayWithObjects:count:
enumerateObjectsUsingBlock:
addObject:
removeObject:
logPath
basepath:uid:
configuration
setLoggingDirectory:
trigger
initWithSessionLogPath:sessionID:stagesToLog:stagesToObserve:writerTrigger:takePowerAssertion:
addLoggingSession:
setWriterTrigger:
startStreamingData
stageName
enumerateDataSourcesUsingBlock:
removeLoggingSession:
stop
stopStreamingData
defaultManager
contentsOfDirectoryAtPath:error:
count
initWithCapacity:
countByEnumeratingWithState:objects:count:
pathExtension
lowercaseString
isEqualToString:
stringByAppendingPathComponent:
delegate
negativeDataCollector:archiveCompleteAtPath:completionBlock:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
loggingSessionDidComplete:archivePath:
initWithRootLogPath:uid:delegate:
enumerateLoggingSessionUsingBlock:
start
getArchivePaths
setHealthLiteDataSource:
setHidAccelDataSource:
setHidGyroDataSource:
setLogPath:
.cxx_destruct
_loggingSessionLock
_lock_activeLoggingSessions
_healthLiteDataSource
_hidAccelDataSource
_hidGyroDataSource
_trigger
_logPath
_uid
_delegate
T@"GSHealthLiteDataSource",&,N,V_healthLiteDataSource
T@"GSHIDAccelDataSource",&,N,V_hidAccelDataSource
T@"GSHIDGyroDataSource",&,N,V_hidGyroDataSource
T@"GSWriterTrigger",&,N,V_trigger
T@"NSString",&,N,V_logPath
T@"NSString",R,N,V_uid
T@"<GSNegativeDataCollectorDelegate>",W,N,V_delegate
_init
initWithViewControllerHandler:quickActionClientHandler:
sharedInstance
greyActivationGesture
_updateAnalyticsState
dictionary
addObserver:
addSettingsObserver:
activate
sharedDeviceOrientation
defaultCenter
_handleDeviceRotatedChange:
addObserver:selector:name:object:
removeObserver:
removeSettingsObserver:
dealloc
effectiveOnWristState
enabledInputSourceTypes
objectForKeyedSubscript:
boolValue
featureEnabled
dataLoggingEnabledWithRefreshState:
_hasRegisteredExternalClients
_hasSuppressedExternalClients
showDetectedGestureBanner
showGestureRecognizerIndicator
addViewController:userInteractionEnabled:completion:
removeViewController:userInteractionEnabled:completion:
playDetectedGestureHapticFeedback
initWithHIDTapIdentifier:HIDEventTapPriority:systemEventTapIdentifier:systemEventTapPriority:
setHIDEventFilterMask:
senderID
shouldHandleEventRepresentationForQuickActions:
type
pausePredictionsForDeviceInteraction
setHIDEventHandler:
gestureType
isPending
logDetectedGestureUpdate:duringDeviceInteraction:
probability
latency
modelDescription
predictionFrequencyInHz
stringWithFormat:
showBannerWithText:andSecondaryText:duration:
dataLoggingSnarfsActualEvents
_handleDetectedGreyEvent:probability:latency:shouldLog:
initWithUpdateBlock:
beginHandlingHIDEventsForReason:
_informAllObserversOfNewState:source:
cancel
endHandlingHIDEventsForReason:
setHIDResearchAlgOutputIsWaking:
cleanupDeviceInteractionTimer
cancelPendingAnimations
initWithTargetSerialQueue:
afterDelay:processBlock:
_activationGestureRespectingExternalClients
_playFeedbackConfirmationForGreyEvent:force:
requestMinimumMode:
_informAllObserversServerReceivedActivationGesture
numberWithLong:
dictionaryWithObjects:forKeys:count:
objectForKey:
unsignedIntegerValue
numberWithUnsignedLong:
setObject:forKeyedSubscript:
pipelineMode
accessibilityEventRepresentationWithSender:usagePage:usage:modifierFlags:eventValue1:eventValue2:
sharedManager
sendHIDSystemEvent:senderID:
userEventOccurred
takeAssertionWithIdentifier:reason:flags:timeoutSeconds:timeoutBlock:
shouldHandleGreyEventForQuickActions:
_handleDidReceiveActivationGestureWithConfirmation:upgradePipelineMode:
_playFeedbackConfirmationForGreyEvent:
onForIdentifier:reason:isUserInitiated:
bundleForClass:
bundlePath
integerValue
fileURLWithPath:
dictionaryWithContentsOfFile:
numberWithUnsignedInt:
numberWithInteger:
unsignedIntValue
dataCollectionEnabled
initWithLogPath:
updateGestureRecognizerAvailability
handleMessage:withMessageID:error:
clientMessengerWithIdentifier:
backgroundAccessQueue
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
allObjects
numberWithBool:
_sendMessage:withIdentifier:toClient:withCompletion:
performPulseAnimationWithCount:intervalPerPulse:
intValue
_registerExternalClient:clientIdentifier:
_externalClientRequestsSuppression:clientIdentifier:
_registerStateObservingClient:clientIdentifier:
quickActionFromSerializedData:error:
localizedDescription
handleRequestedQuickAction:withClientIdentifier:
cancelQuickAction:
setEnrolledInHealthStudy:
setWithArray:
setByAddingObject:
isDeviceOnCharger
logOnWristState:isCharging:
_handleBacklightDidTurnOff
_handleBacklightDidTurnOn
timeIntervalSinceReferenceDate
removeAllObjects
_informAllObserversOfNewState:
backlightDidTurnOnWithWristState:
logBacklightEvent:onWristState:isCharging:
backlightDidTurnOn
mutableCopy
numberWithDouble:
setMode:completionHandler:
backlightDidTurnOff
serializedDataFromQuickAction:error:
view
initWithContainingView:
presentBannerViewWithText:secondaryText:duration:fromUserAction:
dismissFloatingView
sharedDisplayManager
addContentViewController:withUserInteractionEnabled:forService:context:completion:
removeContentViewController:withUserInteractionEnabled:forService:context:completion:
possibleRequiredEntitlementsForProcessingMessageWithIdentifier:
processMessage:withIdentifier:fromClientWithIdentifier:error:
messageWithIdentifierShouldBeProcessedAsynchronously:
processMessageAsynchronously:withIdentifier:fromClientWithIdentifier:completion:
accessQueueForProcessingMessageWithIdentifier:
messageWithIdentifierRequiresWritingBlock:
processInitializationMessage:
serviceWasFullyInitialized
connectionWillBeInterruptedForClientWithIdentifier:
requiredEntitlementForProcessingMessageWithIdentifier:
backlightDidChange:from:to:
backlightDidTurnOn:forReason:
backlightDidTurnOff:forReason:
onWristMonitor:didUpdateOnWristState:fromState:
watchControlSettingsDidChange:
dismissBanners
quickActionController:activateQuickAction:clientIdentifier:
quickActionController:cancelQuickAction:clientIdentifier:
_onWristMonitor
_systemStateLock
_lock_lastOnWristState
_lock_wakeAssertionID
_lock_displayOn
_lock_displayOnTime
_lock_displayOnGestureCount
_gestureRecognizer
_analyticsManager
_analyticsQueue
_eventProcessor
_deviceInteractionTimer
_dataLoggingManager
_externalClientsLock
_registeredClientIdentifiers
_suppressedClientIdentifiers
_stateObservingClientIdentifiers
_lastGreySupportActiveState
_shouldPresentGestureBanners
_bannerPresenter
_bannerViewController
_recognizerStateIndicatorVC
_activationGesture
_didReceiveActivationGesture
_activationGestureLock
_quickActionController
_enabledSource
_playDetectedGestureHapticFeedback
_backlightAssertion
mainScreen
bounds
initWithFrame:
clearColor
setBackgroundColor:
setView:
loadView
setViewControllerHandler:
setQuickActionClientHandler:
setCurrentQuickActionHolderLock:
setQuickActionTimeoutTimer:
quickActionTimeoutTimer
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
setQuickActionDismissBannerTimer:
quickActionDismissBannerTimer
currentQuickActionHolder
_dismissBannersWithDelay:
_cancelCurrentQuickActionClientHolderInformingDelegate:
_activateCurrentQuickActionClientHolder
initWithQuickAction:clientIdentifier:
setCurrentQuickActionHolder:
_beginPresentCurrentQuickActionIfNecessary
identifier
quickAction
setBacklightIsOn:
quickActionClientHandler
clientIdentifier
_cleanupCurrentQuickAction
backlightIsOn
viewControllerHandler
localizedTitle
currentQuickActionHolderLock
_backlightIsOn
_currentQuickActionHolderLock
_viewControllerHandler
_quickActionClientHandler
_currentQuickActionHolder
_quickActionTimeoutTimer
_quickActionDismissBannerTimer
T@"<WCViewControllerHandling>",W,N,V_viewControllerHandler
T@"<GSQuickActionClientHandler>",W,N,V_quickActionClientHandler
T@"WCQuickActionClientHolder",&,N,V_currentQuickActionHolder
T@"AXDispatchTimer",&,N,V_quickActionTimeoutTimer
T@"AXDispatchTimer",&,N,V_quickActionDismissBannerTimer
T{os_unfair_lock_s=I},N,V_currentQuickActionHolderLock
TB,N,V_backlightIsOn
_quickAction
_clientIdentifier
T@"GSQuickAction",R,N,V_quickAction
T@"NSString",R,N,V_clientIdentifier
dataCollectionAllowed
standardUserDefaults
dataForKey:
deserialize:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
setResourceValue:forKey:error:
_evaluateNegativeDataAnalytics
setDateFormat:
initWithDictionaryRepresentation:
negativeDataCollector
rootLogPath
initWithConfiguration:studyName:dataProvider:rootDirectory:isProduction:
clearUploads
attributesOfFileSystemForPath:error:
unsignedLongLongValue
_shouldCollectNegativeDataAnalytics
setNegativeDataCollector:
analyticsTimeoutTimer
setAnalyticsTimeoutTimer:
archivingData
setArchivingData:
addObjectsFromArray:
removeObjectForKey:
synchronize
arrayWithArray:
indexSetWithIndexesInRange:
objectsAtIndexes:
_timestampForFilePath:
healthCloudUploader
addFileToUploadQueue:withTimestamp:
removeItemAtPath:error:
uploadFilesWithCompletion:
removeObjectsAtIndexes:
addPayloadToUploadQueue:
rawPath
timestamp
_handleDeviceOnCharger
_hasEnoughDiskSpaceForAnalytics
lastPathComponent
stringByDeletingPathExtension
componentsSeparatedByString:
objectAtIndexedSubscript:
initWithPath:withTimestamp:
archivedDataWithRootObject:requiringSecureCoding:error:
setObject:forKey:
encryptPayload:completion:
logDirectoryFormatter
_lock_payloads
_payloadsLock
_archivingData
_logDirectoryFormatter
_healthCloudUploader
_rootLogPath
_negativeDataCollector
_analyticsTimeoutTimer
T@"NSString",R,N,V_rootLogPath
T@"NSDateFormatter",R,N,V_logDirectoryFormatter
T@"GSNegativeDataCollector",&,N,V_negativeDataCollector
T@"AXDispatchTimer",&,N,V_analyticsTimeoutTimer
TB,N,V_archivingData
T@"GDCHealthCloudUploader",R,N,V_healthCloudUploader
focusLayerForUserInterfaceStyle:
setRingShapeLayer:
layer
ringShapeLayer
insertSublayer:atIndex:
_main_cancelPendingAnimations
currentDevice
screenBounds
screenCornerRadius
roundedRectBezierPath:withRoundedCorners:withCornerRadius:
CGPath
setPath:
setAlpha:
setHidden:
initWithDuration:curve:animations:
startAnimation
addCompletion:
currentAnimators
stopAnimation:
setCurrentAnimators:
_currentAnimators
_ringShapeLayer
T@"NSArray",&,N,V_currentAnimators
T@"WCFocusRingShapeLayer",&,N,V_ringShapeLayer
starting negative data collection with directory: '%@'
starting a new session at directory '%@'
started %@
initializing GreySupportServer
data logging enabled! forcing shouldBeRunningGestureRecognizer=YES
registered external clients present, shouldBeRunningGestureRecognizer=YES
external clients requested suppression, shouldBeRunningGestureRecognizer=NO
updating gesture recognizer availability. shouldBeRunningGestureRecognizer=%@, isEffectivelyOnWrist=%@
setting up gesture recognizer
gesture recognizer detected gesture: %@
predictions are paused
data logging is snarfing events, not sending gestures to the system
tearing down gesture recognizer
resuming predictions!
received activation gesture: %@
turning on display with activation / double-clench gesture!
discarding gesture '%@' since the screen is off
failed to initialize sound/haptic
data collection enabled, setting up analytics
data collection disabled. tearing down analytics
_registerExternalClient=%@, clientIdentifier=%@
_externalClientRequestsSuppression=%@, clientIdentifier=%@
_registerStateObservingClient=%@, clientIdentifier=%@
informing observers of new Grey enabled state = %@
observingClientIdentifiers = %@
failed to send state change to client: %@, due to %@
informing observers that server received activation gesture
failed to deserialize quick action due to: %@
handling payload for health study enrollment: %@
device changed orientation!
new on-wrist state: %@
backlight did change from '%@' to '%@'
backlight did turn on
backlight did turn off
creating power assertion to make sure we have enough time to pause the prediction pipeline
failed to create a power assertion!
releasing power assertion
send activate quick action. reply: %@, error: %@
send cancel quick action. reply: %@, error: %@
dismissing banners
dismissing banners due to touch/scroll, but still allowing action handler to run
canceling action due to button presses
canceling action due to double tap gesture
activating action due to double clench gesture
handling quick action: %@, for client: %@
cleaning up current quick action: %@
presenting banner for quick action: %@
canceling quick action due to timeout
loading from cache: %@ 
unable to create log directory due to %@
failed to exclude log directory from iCloud backup due to %@
not enough space for analytics. free space = %lld bytes, minimum space = %lld bytes
starting negative data analytics!
stopping negative data analytics!
we should not be collecting negative data. bailing
still archiving data...
Failed to create a power assertion
existing archives (%lui) on disk to re-upload
Adding '%@' with timestamp '%@' to upload queue
'%@' upload result = %@
failed to delete '%@' due to %@
removing '%@'
keeping '%@' on disk due to failed upload
completely failed to do any uploading. we'll try again next time
done preparing existing archives
nothing to archive
Uploading %@
done archiving data
backlight on with wrist state: %@
not collecting data since we're currently archiving existing data
not collecting data since device not on-wrist
not enough disk space for analytics
data collection timeout! stopping..
Invalid filename format for %@. Skipping.
Caching %lu payloads
v32@?0@"GSDataSource"8Q16^B24
v8@?0
com.apple.GreySupportServices.allowed-client
com.apple.private.healthkit.authorization_bypass
com.apple.itunesstored.private
com.apple.GreySupportServices.HealthStudyClient
com.apple.GreySupportServer.AnalyticsQueue
grey gesture recognizer
GreySupportServer
B16@?0@"AXEventRepresentation"8
%.f%% | %.2fs | %@ (%luhz)
v16@?0@"GSDetectedGestureUpdate"8
com.apple.GreySupport.ActivationGesture
com.apple.GreySupport.GestureEvent
gesture
@"NSDictionary"8@?0
gesture_%li
com.apple.GreySupportServer.DetectedGesture
Assets
clenchgesture_haptic.caf
clenchgesture_haptic.plist
clenchdoublegesture_haptic.caf
clenchdoublegesture_haptic.plist
tapgesture_haptic.caf
tapgesture_haptic.plist
tapdoublegesture_haptic.caf
tapdoublegesture_haptic.plist
var/mobile/Library/Accessibility/GreyAnalytics
___LOCAL_SERVICE_CLIENT___
isActive
v24@?0@"NSDictionary"8@"NSError"16
receivedActivationGesture
registerClient
suppress
quickAction
com.apple.private.kernel.jetsam
com.apple.CoreRoutine.preferences
duration
activation_gesture_detected
com.apple.GreySupport.DisplayOnSession
AssertType
PreventUserIdleSystemSleep
AssertName
pausing prediction pipeline
FrameworkBundleID
com.apple.GreySupportServer
TimeoutAction
TimeoutActionRelease
TimeoutSeconds
v12@?0B8
/System/Library/../../AppleInternal/Library/Frameworks/GreyDataCollection.framework/GreyDataCollection
/System/Library/../../AppleInternal/Library/Frameworks/GreyDataCollection.framework/Contents/MacOS/GreyDataCollection
GDCDataLoggingManager
Unable to find class %s
Unknown
Unknown, %lu
GSPayloadsCache
y-MM-dd_HHmmss
archive analytics
com.apple.GreySupport.DataCollection
com.apple.GreySupport.AnalyticsUploadQueue
v16@?0@"NSMutableDictionary"8
%@_%@
GreyDataCollectionAllowed
GreyNegativeDataCollectionEnabled
GDCHealthCloudPayload
GreyDataCollectionSettingsChangedNotification
GreyDataCollectionHealthCloudStudyName
GreyDataCollectionHealthCloudUploadSettings
GDCHealthCloudUploadConfiguration
GDCHealthCloudUploader
GreyDataCollectionUID
v16@?0q8
v32@?0@"UIViewPropertyAnimator"8Q16^B24
GSNegativeDataCollector
GSLoggingSessionDelegate
NSObject
GreySupportServer
AXUIService
CSLSBacklightObserver
CSLSOnWristMonitorDelegate
WatchControlSettingsObserver
WCViewControllerHandling
GSQuickActionClientHandler
GSBannerViewController
GSQuickActionController
WCQuickActionClientHolder
GSAnalyticsManager
GSNegativeDataCollectorDelegate
GSRecognizerStatusIndicatorViewController
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@24
v32@0:8@"GSLoggingSession"16@"NSString"24
@40@0:8@16@24@32
v24@0:8@?16
v24@0:8@16
v16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableArray"
@"GSHealthLiteDataSource"
@"GSHIDAccelDataSource"
@"GSHIDGyroDataSource"
@"GSWriterTrigger"
@"NSString"
@"<GSNegativeDataCollectorDelegate>"
@24@0:8Q16
@48@0:8@16Q24@32^@40
B24@0:8Q16
v48@0:8@16Q24@32@?40
@"NSDictionary"48@0:8@"NSDictionary"16Q24@"NSString"32^@40
v48@0:8@"NSDictionary"16Q24@"NSString"32@?<v@?@"NSDictionary"@"NSError">40
@"AXAccessQueue"24@0:8Q16
v24@0:8@"NSDictionary"16
v24@0:8@"NSString"16
@"NSString"24@0:8Q16
@"NSSet"24@0:8Q16
v40@0:8@16q24q32
v32@0:8@16Q24
v40@0:8@"NSString"16q24q32
v32@0:8@"NSString"16Q24
v40@0:8@16@24@32
v40@0:8@"CSLSOnWristMonitor"16@"CSLSOnWristState"24@"CSLSOnWristState"32
v24@0:8@"WatchControlSettings"16
v40@0:8@16@24d32
v36@0:8@16B24@?28
v40@0:8@"NSString"16@"NSString"24d32
v36@0:8@"UIViewController"16B24@?<v@?B>28
v40@0:8@"GSQuickActionController"16@"GSQuickAction"24@"NSString"32
q16@0:8
v24@0:8B16B20
v36@0:8q16f24f28B32
v24@0:8q16
v28@0:8q16B24
v28@0:8B16@20
v20@0:8B16
v28@0:8B16Q20
@"CSLSOnWristMonitor"
@"CSLSOnWristState"
@"NSMutableDictionary"
@"GSGestureRecognizer"
@"GSAnalyticsManager"
@"NSObject<OS_dispatch_queue>"
@"AXEventProcessor"
@"AXDispatchTimer"
@"GDCDataLoggingManager"
@"NSMutableSet"
@"AXUIBannerPresenter"
@"GSBannerViewController"
@"GSRecognizerStatusIndicatorViewController"
@"GSQuickActionController"
@"CSLSBacklightAssertion"
@32@0:8@16@24
B24@0:8q16
v24@0:8d16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"<WCViewControllerHandling>"
@"<GSQuickActionClientHandler>"
@"WCQuickActionClientHolder"
@"GSQuickAction"
v40@0:8@16@24@?32
v40@0:8@"GSNegativeDataCollector"16@"NSString"24@?<v@?>32
@24@0:8@16
@"NSDateFormatter"
@"GDCHealthCloudUploader"
@"GSNegativeDataCollector"
v32@0:8Q16d24
@"NSArray"
@"WCFocusRingShapeLayer"
softlink:o:path:/System/Library/../../AppleInternal/Library/Frameworks/GreyDataCollection.framework/GreyDataCollection
softlink:o:path:/System/Library/../../AppleInternal/Library/Frameworks/GreyDataCollection.framework/GreyDataCollection
