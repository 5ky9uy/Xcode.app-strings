init
_registerForNotifications:
delegate
eventManager:eventToHighlightPoint:
sharedInstance
setLockScreenDimTimerEnabled:
denormalizedEventRepresentation:descale:
type
stopSnarfingOnTouchUp
handInfo
currentFingerCount
setSnarfingEvents:
eventManager:stoppedSnarfingEvents:
eventType
neuterUpdates
_setLockScreenDimTimerEnabled:
paths
firstPath
pathLocation
_touchedElementAtPoint:
server
contextIdForPosition:
setContextId:
senderID
count
_handleIOHIDEvent:
performSelectorOnMainThread:withObject:waitUntilDone:
_eventProcessor
set_eventProcessor:
endHandlingHIDEventsForReason:
_startListening
_stopListening
alloc
initWithHIDTapIdentifier:HIDEventTapPriority:systemEventTapIdentifier:systemEventTapPriority:
setIgnoreAllSystemEvents:
setHIDEventFilterMask:
_iosEventFilter:
setHIDEventHandler:
beginHandlingHIDEventsForReason:
_registeredForNotifications
set_registeredForNotifications:
_registerForAXNotifications:
_axEventObserver
systemWideAXUIElement
set_axEventObserver:
numberWithInt:
arrayWithObjects:count:
_initializeAXObserverIfNeeded
_accessibilityNotificationsToObserve
countByEnumeratingWithState:objects:count:
intValue
systemWideElement
systemApplication
currentApplications
firstObject
nativeFocusElement
firstResponder
eventManager:systemFocusDidMoveToElement:
initWithAXUIElement:
_handleFocusMovedToElement:
_localizedNotificationString:
eventManager:notificationReceived:humanReadable:
sharedManager
_preprocessEventForSimulator:
connectionInterrupted
_elementWithNativeFocus
_handleNativeFocusItemChangedNotification:
_handleAccessibilityNotification:
.cxx_destruct
setDelegate:
snarfingEvents
setStopSnarfingOnTouchUp:
_snarfingEvents
_stopSnarfingOnTouchUp
__registeredForNotifications
_delegate
__axEventObserver
__eventProcessor
_initializeElementVisualsCoalescer
setMonitoredEventType:
setCursorStyle:
inspectorManager:inspectorMonitoredEventTypeChanged:
hideVisualsSynchronously
dispatchQueue
setCursorFrameForElement:
_currentElement
length
isEqual:
setTitle:
setIdentifier:
stringWithFormat:
addAttribute:performsAction:humanReadable:settable:valueType:
setDisplayInline:
title
setDisplayAsTree:
_humanReadableStringForAction:
supportsAction:
traits
customActions
objectForKeyedSubscript:
class
isKindOfClass:
_basicSection
_actionSection
uiElement
objectWithAXAttribute:
auditElementWithElement:identifier:
setElement:
label
setCaptionText:
_inspectorSections
setInspectorSections:
_auditInspectorFocuseObject
inspectorManager:inspectorFocusDidChange:
set_elementVisualsCoalescer:
setThreshold:
setProgressInterval:
_updateElementHighlight
setUpdateVisualsSequenceDidBeginHandler:
setUpdateVisualsSequenceInProgressHandler:
setUpdateVisualsSequenceDidFinishHandler:
_focusedElementHistory
set_focusedElementHistory:
containsObject:
removeObject:
addObject:
removeObjectAtIndex:
_addElementToHistory:
objectForKey:
isEqualToString:
_setCurrentElement:
scrollToVisible
_informDelegateOfInspectorFocus
focusOnAXElement:scrollToVisible:
_lastPoint
uiElementAtCoordinate:
elementWithUIElement:
axElement
focusOnAXElement:
attributeName
rangeOfString:
substringFromIndex:
integerValue
performAction:
performAction:withValue:
elementRef
initWithAuditElement:description:roleDescription:
children
initWithArray:
insertObject:atIndex:
setChildren:
parent
string
appendFormat:
appendString:
value
setString:
_developerOnlyAttributes
hint
numberWithUnsignedLongLong:
null
substringToIndex:
attributedSubstringFromRange:
isAccessibilityOpaqueElementProvider
numberWithLong:
valueWithRange:
elementForAttribute:parameter:
boolWithAXAttribute:
nextElementsWithCount:
previousElementsWithCount:
isValid
inspectorManager:inspectorElementPropertiesChanged:
lockOnCurrentElement
setShowVisuals:
_elementSection
_hierarchySection
_elementTokenIsSumulatorToken:
_elementDataFromSimulatorToken:
focusOnElementAtPoint:
focusOnElement:
previewOnElement:
element:performAction:withValue:completion:
element:valueForAttribute:completion:
element:valueForParameterizedAttribute:withObject:completion:
moveInDirection:allowMovingToContainers:allowMoveToNonAXElements:
updateAttributesIfElementIsValid
setDispatchQueue:
monitoredEventType
showVisuals
set_lastPoint:
_elementVisualsCoalescer
_showVisuals
_dispatchQueue
__focusedElementHistory
__currentElement
__elementVisualsCoalescer
_monitoredEventType
__lastPoint
numberWithBool:
dictionaryWithObjects:forKeys:count:
setAXAttribute:withObject:synchronous:
elementForAttribute:
notifyUpdateElementVisualsEventDidOccur
_platformSettings
setSettings:
_platformDefaultSettings
setDefaultSettings:
updateCurrentValueForAllSettingsAndPostNotificationIfChanged:
settingsToCache
createWithIdentifier:currentValue:settingType:
arrayByAddingObject:
stopObservingChanges
settingForIdentifier:
updateCurrentValueForSetting:postNotificationIfChanged:
_settingDidChange:
dealloc
startObservingChanges
initWithOptions:capacity:
set_notificationContext:
_notificationContext
initWithObjects:
identifier
enabled
currentValueNumber
setCurrentValueNumber:
stringByAppendingPathComponent:
_fontCategories
indexOfObject:
_fontValueFromCategoryIndex:
bundleForClass:
bundleIdentifier
axAuditDeviceManager:settingDidChange:
numberWithDouble:
doubleValue
updateSetting:withNumberValue:
boolValue
_fontCategoryIndexFromValue:
objectAtIndex:
defaultCenter
postNotificationName:object:
_settingDidChangeInvertColors:
finalize
__notificationContext
anyObject
initWithIdentifier:serviceBundleName:
_uiClient
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
set_forceRefreshOnNextUpdate:
_adjustFrameToFitScreen:
_lock
lock
_currentCursorFrame
unlock
set_currentCursorFrame:
set_currentCursorContextID:
set_currentCursorPath:
_shouldHideCursor
clearCachedFrame:cachedVisibleFrame:
updateCache:
path
frame
_forceRefreshOnNextUpdate
setCursorFrame:withPath:withContextId:element:forceRefresh:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
userInterfaceClient:processMessageFromServer:withIdentifier:error:
userInterfaceClient:messageFromServerForWithIdentifierShouldBeProcessedAsynchronously:
userInterfaceClient:processMessageFromServerAsynchronously:withIdentifier:completion:
userInterfaceClient:accessQueueForProcessingMessageWithIdentifier:
userInterfaceClient:messageWithIdentifierRequiresWritingBlock:
userInterfaceClient:willActivateUserInterfaceServiceWithInitializationMessage:
connectionWithServiceWasInterruptedForUserInterfaceClient:
set_lock:
set_uiClient:
set_shouldHideCursor:
_currentCursorPath
_currentCursorContextID
__shouldHideCursor
__forceRefreshOnNextUpdate
__lock
__uiClient
__currentCursorPath
__currentCursorContextID
__currentCursorFrame
numberWithUnsignedInteger:
arrayWithObjects:
objectWithAXAttribute:parameter:
numberWithAXAttribute:
unsignedIntValue
initWithTransport:
userInfo
name
date
hostAppStateChanged:
messageWithSelector:objectArguments:
connection
sendControlAsync:replyHandler:
applicationStateNotificationsEnabled
setApplicationStateNotificationsEnabled:
_appStateChanged:
addObserver:selector:name:object:
removeObserver:name:object:
_deviceCaptureScreenshot
invokeCompletionWithReturnValue:error:
platformPlugin
screenshotInfoForTransportWithFrame:
deviceInspectorFocusOnElement:
objectForTransportDictionary:expectedClass:
deviceInspectorPreviewOnElement:
deviceInspectorSetMonitoredEventType:
deviceInspectorShowVisuals:
deviceInspectorLockOnCurrentElement
hostInspectorMonitoredEventTypeChanged:
transportDictionaryForObject:
hostInspectorCurrentElementPropertiesChanged:
hostInspectorCurrentElementChanged:
_screenChangeHandleAttempts
set_handelingScreenChanged:
set_screenChangeHandleAttempts:
_handleScreenChangedNotification
_handelingScreenChanged
_handleLayoutChangedNotification
didReceiveAccessibilityNotification:
hostInspectorNotificationReceived:
deviceSettingsManagerClass
synchronousDeviceCaptureScreenshot
deviceCaptureScreenshot
auditCategorySetup
highlightElement:
highlightElements:
deviceInspectorMoveWithOptions:
deviceInspectorSupportedEventTypes
deviceInspectorCanNavWhileMonitoringEvents
deviceElement:performAction:withValue:
deviceElement:valueForAttribute:
deviceElement:valueForParameterizedAttribute:withObject:
deviceElement:setValue:attribute:
__handelingScreenChanged
__screenChangeHandleAttempts
loadAuditBundles
initWithMappedMemory:
fileDescriptorHandshakeWithReceivePort:
currentRunLoop
resume
v4@?0
AccessibilityAudit
B8@?0@"AXEventRepresentation"4
UIAccessibilityScreenChangedNotification
UIAccessibilityLayoutChangedNotification
UIAccessibilityAnnouncementNotification
UIAccessibilityPageScrolledNotification
_axEventObserver
T^{__AXObserver=},N,V__axEventObserver
_eventProcessor
T@"AXEventProcessor",&,N,V__eventProcessor
_registeredForNotifications
TB,N,V__registeredForNotifications
delegate
T@"<XADEventManagerDelegate>",W,N,V_delegate
snarfingEvents
TB,N,V_snarfingEvents
stopSnarfingOnTouchUp
TB,N,V_stopSnarfingOnTouchUp
com.apple.audit.inspect
Action-Activate
Action-Increment
Action-Decrement
Action-ScrollUpPage
Action-ScrollDownPage
Action-ScrollRightPage
Action-ScrollLeftPage
Action-ScrollNextPage
Action-ScrollPreviousPage
ElementClassName
ElementMemoryAddress
ElementViewControllerClassName
Element
iOS_Element_v1
Attribute-%@
Basic
iOS_Basic_v1
Label
Value
Hint
TraitsHumanReadable
Hierarchy
iOS_Hierarchy_v1
Actions
iOS_Actions_v1
%@%i
AXAction-
v8@?0i4
CustomActionShortName
CustomActionName
CustomActionIdentifier
%@%@
AXCustomAction-
TokenType
AXElementTokenSimulator
ElementData
, %@
%@ %@
<%@>
Header
Traits
Identifier
UIAccessibilityNotificationVoiceOverIdentifier
AXAudit
_focusedElementHistory
T@"NSMutableArray",&,N,V__focusedElementHistory
dispatchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_dispatchQueue
_currentElement
T@"AXElement",&,N,S_setCurrentElement:,V__currentElement
_lastPoint
T{CGPoint=ff},N,V__lastPoint
_elementVisualsCoalescer
T@"AXUpdateElementVisualsCoalescer",&,N,V__elementVisualsCoalescer
T@"<XADInspectorManagerDelegate>",W,N,V_delegate
monitoredEventType
TQ,N,V_monitoredEventType
showVisuals
TB,N,V_showVisuals
focused
assistiveTech
FONT_EXTENDED_RANGES
ApplePreferredContentSizeCategoryChangedNotification
UIPreferredContentSizeCategoryName
/Library/Preferences/com.apple.UIKit
DidPostContentSizeChanged
_notificationContext
T@"NSHashTable",&,N,V__notificationContext
AXAuditAXUIClientIdentifier
AXAuditAXUIService
frameStyle
frame
path
v12@?0@"NSDictionary"4@"NSError"8
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_lock
T@"NSLock",&,N,V__lock
_uiClient
T@"AXUIClient",&,N,V__uiClient
_shouldHideCursor
TB,N,V__shouldHideCursor
_currentCursorFrame
T{CGRect={CGPoint=ff}{CGSize=ff}},N,V__currentCursorFrame
_currentCursorPath
T^{CGPath=},&,N,V__currentCursorPath
_currentCursorContextID
TI,N,V__currentCursorContextID
_forceRefreshOnNextUpdate
TB,N,V__forceRefreshOnNextUpdate
Unknown
CFBundleExecutable
name
state
state_description
elevated_state
elevated_state_description
displayID
mach_absolute_time
timestamp
appName
execName
v8@?0@4
_handelingScreenChanged
TB,N,V__handelingScreenChanged
_screenChangeHandleAttempts
Ti,N,V__screenChangeHandleAttempts
com.apple.accessibility.axAuditDaemon.deviceservice.xpc
v8@?0@"NSObject<OS_xpc_object>"4
dtx_shared_memory
com.apple.accessibility.axAuditDaemon.deviceservice.lockdown
XADEventManager
XADInspectorManager
XADAuditDeviceSettingsManager
XADDisplayManager
AXUIClientDelegate
NSObject
XADAuditServer
XADEventManagerDelegate
XADInspectorManagerDelegate
@8@0:4
v16@0:4{CGPoint=ff}8
v12@0:4B8
v12@0:4@8
@12@0:4@8
B12@0:4@8
v8@0:4
B8@0:4
v12@0:4^{__CFData=}8
v12@0:4i8
@12@0:4i8
^{__AXObserver=}8@0:4
v12@0:4^{__AXObserver=}8
@"<XADEventManagerDelegate>"
^{__AXObserver=}
@"AXEventProcessor"
v16@0:4Q8
v16@0:4@8B12
v24@0:4@8@12@16@?20
v20@0:4@8@12@?16
v24@0:4Q8B16B20
Q8@0:4
{CGPoint=ff}8@0:4
@"<XADInspectorManagerDelegate>"
@"NSObject<OS_dispatch_queue>"
@"NSMutableArray"
@"AXElement"
@"AXUpdateElementVisualsCoalescer"
{CGPoint="x"f"y"f}
i12@0:4@8
v16@0:4@8@12
@"NSHashTable"
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
@24@0:4@8@12I16^@20
B16@0:4@8I12
v24@0:4@8@12I16@?20
@16@0:4@8I12
@"NSDictionary"24@0:4@"AXUIClient"8@"NSDictionary"12I16^@20
B16@0:4@"AXUIClient"8I12
v24@0:4@"AXUIClient"8@"NSDictionary"12I16@?<v@?@"NSDictionary"@"NSError">20
@"AXAccessQueue"16@0:4@"AXUIClient"8I12
v16@0:4@"AXUIClient"8@"NSMutableDictionary"12
v12@0:4@"AXUIClient"8
{CGRect={CGPoint=ff}{CGSize=ff}}24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
v40@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8^{CGPath=}24I28@32B36
{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4
v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
^{CGPath=}8@0:4
v12@0:4^{CGPath=}8
v12@0:4I8
@"NSLock"
@"AXUIClient"
^{CGPath=}
{CGRect="origin"{CGPoint="x"f"y"f}"size"{CGSize="width"f"height"f}}
v20@0:4@8{CGPoint=ff}12
v20@0:4@8i12@16
v20@0:4@"XADEventManager"8{CGPoint=ff}12
v16@0:4@"XADEventManager"8B12
v16@0:4@"XADEventManager"8@"AXElement"12
v20@0:4@"XADEventManager"8i12@"NSString"16
v20@0:4@8Q12
v16@0:4@"XADInspectorManager"8@"AXAuditInspectorFocus"12
v20@0:4@"XADInspectorManager"8Q12
@20@0:4@8@12@16
@16@0:4@8@12
v20@0:4@8@12@16
i8@0:4
%s(%d): Invalid connection
%s(%d): Invalid event type
%s(%d): shared memory mapping failed; xpc peer: %d
%s(%d): failed to create transport; xpc peer: %d
%s(%d): MachService checkin for %s failed: %d
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.QuartzCore.global-capture</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.accessibility.api</key>
<true/>
<key>com.apple.accessibility.voiceover</key>
<true/>
<key>com.apple.backboardd.launchapplications</key>
<true/>
<key>com.apple.iapd.accessibility</key>
<true/>
<key>com.apple.private.hid.client.event-filter</key>
<true/>
<key>com.apple.private.hid.client.service-protected</key>
<true/>
<key>com.apple.private.hid.client.service-protected - 2</key>
<true/>
<key>com.apple.private.pluginkit.manager</key>
<true/>
<key>com.apple.private.xpc.service-attach</key>
<true/>
<key>com.apple.springboard.debugapplications</key>
<true/>
</dict>
</plist>
zPLR
zPLR
