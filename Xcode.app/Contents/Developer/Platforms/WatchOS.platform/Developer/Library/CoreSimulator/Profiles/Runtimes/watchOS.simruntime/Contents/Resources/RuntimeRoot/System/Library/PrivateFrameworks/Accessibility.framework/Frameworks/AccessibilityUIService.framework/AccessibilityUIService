rootViewController
view
convertPoint:fromView:
hitTest:withEvent:
pointInside:withEvent:
_accessibilityWindowVisible
_usesWindowServerHitTesting
callStackSymbols
numberWithUnsignedInteger:
alloc
initWithType:text:subtitleText:iconImage:styleProvider:
alertWithType:text:subtitleText:iconImage:styleProvider:
addToContainerView:
.cxx_destruct
context
setContext:
_context
class
safeCategoryTargetClassName
safeCategoryBaseClass
validateClass:hasInstanceMethod:withFullSignature:
safeBoolForKey:
safeValueForKey:
UIEdgeInsetsValue
_displayPeripheryInsetsRestrictedToScene
_accessibilityPerformValidations:
identifier
stringWithFormat:
description
setIdentifier:
creationTimeInterval
setCreationTimeInterval:
fadeAnimationDuration
setFadeAnimationDuration:
showOrHideTimer
setShowOrHideTimer:
alertView
setAlertView:
service
setService:
priority
setPriority:
duration
setDuration:
text
setText:
subtitleText
setSubtitleText:
iconImage
setIconImage:
type
setType:
_identifier
_showOrHideTimer
_alertView
_service
_priority
_text
_subtitleText
_iconImage
_type
_creationTimeInterval
_fadeAnimationDuration
_duration
bundleForClass:
sharedApplication
preferredContentSizeCategory
preferredFontForTextStyle:
_scaledValueForValue:
mainScreen
bounds
preferredFontDescriptorWithTextStyle:addingSymbolicTraits:options:
pointSize
fontWithDescriptor:size:
fontWithSize:
blackColor
colorWithAlphaComponent:
whiteColor
alertTextFontForType:
alertTextColorForType:
alertTextLineHeightOffsetForType:
styleProvider
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
alertBackgroundStyleForType:
alertBackgroundSizeForType:
alertShouldGrowInAxis:forType:
alertContentEdgeInsetsForType:
alertSubtitleTextFontForType:
alertSubtitleTextColorForType:
alertSubtitleTextLineHeightOffsetForType:
alertSubtitleTextVerticalSpacingHeightWithTextForType:
alertIconImageEdgeInsetsForType:
alertEdgeInsetsForType:
alertPositionForType:
alertFadeAnimationDurationForType:
alertBackgroundImageForType:
alertBackgroundImageCapInsetsForType:
alertBackgroundCornerRadiusForType:
bundle
setBundle:
_bundle
nubbit
setNubbit:
delegate
setDelegate:
disableSystemGesturesAssertion
setDisableSystemGesturesAssertion:
disableDashBoardSystemGesturesAssertion
setDisableDashBoardSystemGesturesAssertion:
moveNubbitGestureRecognizer
setMoveNubbitGestureRecognizer:
fadeTimer
setFadeTimer:
dynamicAnimator
setDynamicAnimator:
gravityBehavior
setGravityBehavior:
followPanBehavior
setFollowPanBehavior:
snapToBoundaryBehavior
setSnapToBoundaryBehavior:
collisionBehavior
setCollisionBehavior:
dynamicItemBehavior
setDynamicItemBehavior:
originalAlpha
setOriginalAlpha:
_nubbit
_delegate
_disableSystemGesturesAssertion
_disableDashBoardSystemGesturesAssertion
_moveNubbitGestureRecognizer
_fadeTimer
_dynamicAnimator
_gravityBehavior
_followPanBehavior
_snapToBoundaryBehavior
_collisionBehavior
_dynamicItemBehavior
_originalAlpha
windowLevel
childViewControllers
count
firstObject
title
accessibilityIdentifier
stringByAppendingFormat:
_windowInterfaceOrientation
_isSecure
_shouldAutorotateToInterfaceOrientation:
_accessibilityIsIsolatedWindow
_accessibilityElementCommunityIdentifier
accessibilityLabel
_interfaceOrientationForSceneSafeAreaInsetsIncludingStatusBar:
isHandlingFullScreenPresentation
setIsHandlingFullScreenPresentation:
_isHandlingFullScreenPresentation
sharedServiceManager
_clientMessengerWithIdentifier:
init
setClientIdentifier:
setConnection:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completionRequiresWritingBlock:completion:
_sendAsynchronousMessage:withIdentifier:toClientWithMessenger:targetAccessQueue:completionRequiresWritingBlock:completion:
_sendSynchronousMessage:withIdentifier:toClientWithMessenger:error:
clientIdentifier
clientMessengerWithIdentifier:
initWithClientIdentifier:connection:
sendAsynchronousMessage:withIdentifier:targetAccessQueue:completion:
sendSynchronousMessage:withIdentifier:error:
connection
_clientIdentifier
_connection
displayManager
initWithServiceManager:
setDefaultAlertStyleProvider:
setServiceManager:
_attemptToInitializeActiveInterfaceOrientation
defaultCenter
_didReceiveMemoryWarning:
addObserver:selector:name:object:
systemAppServerReady
setAlertQueues:
setVisibleAlertContexts:
setActiveWindows:
setPassiveWindows:
setActiveContentViewControllers:
setPassiveContentViewControllers:
setNubbitContexts:
setSystemServerActionHandlerIdentifier:
setReachabilityHandlerIdentifier:
dealloc
server
activeInterfaceOrientation
_activeInterfaceOrientationDidChange:duration:
_contentViewControllersWithUserInteractionEnabled:forService:createIfNeeded:
arrayWithArray:
addContentViewController:withUserInteractionEnabled:forService:context:completion:
removeContentViewController:withUserInteractionEnabled:forService:context:completion:
containsObject:
addObject:
desiredWindowLevelForContentViewController:userInteractionEnabled:
shouldPreventAutorotatingAllContentViewControllers
_windowWithUserInteractionEnabled:windowLevel:createIfNeeded:purposeIdentifier:
_addContentViewController:toWindow:forService:context:completion:
removeObject:
_disposeOfContentViewControllersWithUserInteractionEnabled:forService:
transitionInWithContext:completion:
transitionOutWithContext:completion:
_removeContentViewController:forService:
showAlertWithText:subtitleText:iconImage:type:priority:duration:forService:
length
processMessage:withIdentifier:fromClientWithIdentifier:error:
messageWithIdentifierShouldBeProcessedAsynchronously:
processMessageAsynchronously:withIdentifier:fromClientWithIdentifier:completion:
accessQueueForProcessingMessageWithIdentifier:
messageWithIdentifierRequiresWritingBlock:
processInitializationMessage:
serviceWasFullyInitialized
connectionWillBeInterruptedForClientWithIdentifier:
sharedInstance
requiredEntitlementForProcessingMessageWithIdentifier:
possibleRequiredEntitlementsForProcessingMessageWithIdentifier:
UUID
UUIDString
timeIntervalSinceReferenceDate
_transactionIdentifierForDisplayingAlertWithContext:service:
serviceManager
beginTransactionWithIdentifier:forService:
_showOrEnqueueAlertWithContext:
visibleAlertContexts
objectForKey:
cancel
_hideAlertWithContext:notifyDelegate:
alertQueues
isEqualToString:
indexOfObjectPassingTest:
objectAtIndex:
removeObjectAtIndex:
_didHideOrDequeueAlertWithContext:
enumerateKeysAndObjectsUsingBlock:
nubbitContexts
dictionary
_nubbitContextKeyForNubbit:
objectForKeyedSubscript:
_handleMoveNubbitGestureRecognizer:
initWithTarget:action:
addGestureRecognizer:
initWithTargetSerialQueue:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
alpha
_scheduleFadeForNubbitContext:
_addDynamicAnimationsForNubbitContext:
setObject:forKeyedSubscript:
removeGestureRecognizer:
_undoFadeForNubbitContext:
_removeDynamicAnimationsForNubbitContext:
removeObjectForKey:
activeWindows
passiveWindows
initWithDouble:
valueForKey:
reachabilityOffset
initWithScreen:
setWindowLevel:
clearColor
setBackgroundColor:
_setWindowControlsStatusBarOrientation:
setRootViewController:
setHidden:
_rotateWindow:toInterfaceOrientation:duration:force:
setValue:forKey:
setObject:forKey:
rangeOfString:
setAccessibilityIdentifier:
_setRotatableViewOrientation:duration:force:
activeContentViewControllers
countByEnumeratingWithState:objects:count:
passiveContentViewControllers
_uniqueIdentifierForService:
_transactionIdentifierForDisplayingContentViewController:service:
removeFromSuperview
setFrame:
setAutoresizingMask:
addChildViewController:
addSubview:
didMoveToParentViewController:
isViewLoaded
subviews
parentViewController
willMoveToParentViewController:
removeFromParentViewController
window
endTransactionWithIdentifier:forService:
alertWithIdentifierWasEnqueued:
delayForDequeuingAlertWithIdentifier:
desiredWindowLevelForAlertWithIdentifier:
styleProviderForAlertWithIdentifier:
alertWithIdentifierDidAppear:
alertWithIdentifierDidDisappear:
alertWithIdentifierWasActivated:
defaultAlertStyleProvider
setAlpha:
setTransform:
afterDelay:processBlock:
animateWithDuration:animations:completion:
frameOrigin
frame
setFrameOrigin:
_handleNextAlertForType:
_hasVisibleAlertWithType:
_showAlertWithContext:
ax_enqueueObject:
sortUsingComparator:
enumerateObjectsWithOptions:usingBlock:
valueWithPointer:
superview
animateWithDuration:animations:
_boundingViewForNubbit:
initWithReferenceView:
arrayWithObjects:count:
initWithItems:
setCollisionDelegate:
setTranslatesReferenceBoundsIntoBoundary:
addBehavior:
setAllowsRotation:
setFriction:
removeAllBehaviors
locationInView:
removeBehavior:
initWithItem:attachedToAnchor:
assertionWithType:identifier:
setAnchorPoint:
velocityInView:
addLinearVelocity:forItem:
_gravityBehaviorForNubbit:velocity:boundingView:
_endMoveForNubbitContext:
center
setGravityDirection:
_nubbitContextForGestureRecognizer:
state
_beginMoveForNubbitContext:
_changeNubbitPositionForNubbitContext:
setActiveInterfaceOrientation:
numberOfAttemptsToInitializeActiveInterfaceOrientation
setNumberOfAttemptsToInitializeActiveInterfaceOrientation:
performSelector:withObject:afterDelay:
_serviceWantsToPreventAutorotation:
_servicesForUniqueIdentifiers:
interfaceOrientation
_originalDurationForRotationFromInterfaceOrientation:toInterfaceOrientation:withAdjustedDuration:
allValues
nubbitDidUpdatePosition:
initWithItem:snapToPoint:
isHidden
removeObjectsForKeys:
removeAllObjects
sharedDisplayManager
dynamicAnimatorWillResume:
dynamicAnimatorDidPause:
collisionBehavior:beganContactForItem:withItem:atPoint:
collisionBehavior:endedContactForItem:withItem:
collisionBehavior:beganContactForItem:withBoundaryIdentifier:atPoint:
collisionBehavior:endedContactForItem:withBoundaryIdentifier:
contentViewControllersWithUserInteractionEnabled:forService:
addContentViewController:withUserInteractionEnabled:forService:
removeContentViewController:withUserInteractionEnabled:forService:
showAlertWithText:subtitleText:iconImage:type:forService:
hideAlertWithIdentifier:forService:
registerNubbit:delegate:
unregisterNubbit:
enumerateContentViewControllersUsingBlock:
pinNubbitToEdge:
_resetServiceManager
systemServerActionHandlerIdentifier
reachabilityHandlerIdentifier
setReachabilityOffset:
_defaultAlertStyleProvider
_activeInterfaceOrientation
_numberOfAttemptsToInitializeActiveInterfaceOrientation
_serviceManager
_alertQueues
_visibleAlertContexts
_activeWindows
_passiveWindows
_activeContentViewControllers
_passiveContentViewControllers
_systemServerActionHandlerIdentifier
_nubbitContexts
_reachabilityHandlerIdentifier
_reachabilityOffset
accessibilityElementsHidden
_ignoresHitTest
initWithFrame:
setView:
supportedInterfaceOrientations
ignoreLogging
viewWillTransitionToSize:withTransitionCoordinator:
_shouldForwardViewWillTransitionToSize
loadView
shouldAutorotate
resizableImageWithCapInsets:
initWithImage:
initWithPrivateStyle:
_setContinuousCornerRadius:
setTranslatesAutoresizingMaskIntoConstraints:
constraintsWithVisualFormat:options:metrics:views:
addConstraints:
layer
setCornerRadius:
setClipsToBounds:
setAllowsGroupOpacity:
initWithString:attributes:
_appendParagraphWithText:withTextColor:font:textAlignment:lineSpacing:paragraphSpacingBefore:toAttributedString:
setNumberOfLines:
setAttributedText:
setLineBreakMode:
effectWithStyle:
effectForBlurEffect:
initWithEffect:
contentView
setMasksToBounds:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraint:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asEqualToValueOfView:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:
ax_constrainLayoutAttribute:asEqualToValueOfView:priority:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asEqualToLayoutAttribute:ofView:withOffset:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asLessThanOrEqualToValueOfView:withOffset:
ax_constrainLayoutAttribute:asEqualToValueOfView:withOffset:priority:
size
ax_constrainLayoutAttribute:asEqualToConstant:
ax_constrainLayoutAttribute:asGreaterThanOrEqualToConstant:
topAnchor
safeAreaLayoutGuide
constraintEqualToAnchor:
setActive:
setAlertType:
setStyleProvider:
_handleTapGestureRecognizer:
_handlePanGestureRecognizer:
setMaximumNumberOfTouches:
pointInside:forEvent:
origin
_updateDismissalWithPanGesture:
_endDismissalWithPanGesture:
_cancelDismissalWithPanGesture:
translationInView:
_updateViewForDismissalPercentage:
alertType
ax_constrainLayoutAttribute:relatedBy:toItem:attribute:multiplier:constant:
defaultParagraphStyle
mutableCopy
labelFontSize
systemFontOfSize:
lineHeight
setParagraphSpacingBefore:
dictionaryWithObjects:forKeys:count:
appendAttributedString:
setAlignment:
setLineSpacing:
initWithObjectsAndKeys:
_dismissalGestureYOffset
_backgroundViewDismissalOrigin
_alertType
_styleProvider
setServiceIdentifier:
clientMessengers
setClientMessengers:
_indexOfClientWithIdentifier:
initWithService:serviceIdentifier:
clientsCount
addClientWithIdentifier:connection:
removeClientWithIdentifier:
hasClientWithIdentifier:
enumerateClientsUsingBlock:
serviceIdentifier
_serviceIdentifier
_clientMessengers
setServiceClass:
setClientConnections:
setEntitlementsCaches:
clientConnections
entitlementsCaches
_indexOfClientConnection:
boolValue
_singleRequiredEntitlementForMessageWithIdentifier:
_possibleRequiredEntitlementForMessageWithIdentifier:
_clientProcessWithAuditToken:hasEntitlement:
numberWithBool:
setWithObjects:
UTF8String
serviceClass
initWithServiceClass:
serviceCanProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:
clientConnectionWillBeTerminated:
_serviceClass
_clientConnections
_entitlementsCaches
infoDictionary
mainBundle
initWithParentClass:description:appendUUIDToLabel:
setServicesAccessQueue:
setEntitlementsCheckersAccessQueue:
setResumingConnectionsQueue:
setMessageSender:
setDisplayManager:
_applicationDidReceiveMemoryWarning:
registerAccessibilityUIServicePID:
removeObserver:name:object:
servicesAccessQueue
serviceContexts
performSynchronousReadingBlock:
mainAccessQueue
messageSender
sendAsynchronousMessage:withIdentifier:context:targetAccessQueue:completionRequiresWritingBlock:completion:
sendSynchronousMessage:withIdentifier:context:error:
currentLocale
localeIdentifier
mainQueue
addObserverForName:object:queue:usingBlock:
initWithFormat:
initWithUTF8String:
_registerClientWithIdentifier:connection:serviceBundleName:initiatingMessageIdentifier:error:
sendReply:withError:andOriginalXPCMessage:usingConnection:customDataAddingBlock:
backgroundAccessQueue
performAsynchronousWritingBlock:
_serviceContextForClientWithIdentifier:
ax_errorWithDomain:description:
_serviceWithClass:canProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:
dictionaryFromXPCMessage:error:
performAsynchronousReadingBlock:
_unregisterAllClientsWithConnection:
resumingConnectionsQueue
shouldAllowServicesToProcessMessages
pausedConnections
setPausedConnections:
entitlementsCheckersAccessQueue
entitlementsCheckers
setEntitlementsCheckers:
performSynchronousWritingBlock:
_registerForSpringBoardDeath
terminateWithSuccess
initWithPID:queue:deathHandler:
pid:
setShouldAllowServicesToProcessMessages:
stringByAppendingPathComponent:
stringByStandardizingPath
stringByDeletingLastPathComponent
stringByAppendingPathExtension:
hasPrefix:
bundleWithPath:
isLoaded
loadAndReturnError:
principalClass
_serviceContextForService:
setServiceContexts:
lastUsedServiceIdentifier
setLastUsedServiceIdentifier:
removeObjectIdenticalTo:
_releaseSharedServiceManager
messageSender:accessXPCConnectionForMessageWithContext:usingBlock:
messageSender:willSendXPCMessage:context:
messageSender:extractCustomDataFromXPCReply:numberOfKeyValuePairsForCustomData:
messageSender:processCustomDataFromXPCReply:
_start
_handleConnection:
_applicationDidFinishLaunching
didEncounterError
setDidEncounterError:
_springBoardReaper
_didEncounterError
_shouldAllowServicesToProcessMessages
_displayManager
_resumingConnectionsQueue
_pausedConnections
_entitlementsCheckersAccessQueue
_entitlementsCheckers
_messageSender
_serviceContexts
_servicesAccessQueue
_lastUsedServiceIdentifier
AXUIActiveWindow
AXUIAlert
__AXUIUIScreenOverride_super
SafeCategory
AXUIUIScreenOverride
AXUIAlertContext
AXUIAlertStyleProvider
NSObject
AXUINubbitContext
AXUIWindow
AXUIClientMessenger
AXUIContentViewControllerDelegate
AXUIViewControllerTransitionHandler
AXUIService
AXUIAlertDelegate
AXUIDisplayManager
UIDynamicAnimatorDelegate
UICollisionBehaviorDelegate
AXUIPassiveWindow
AXStaticFrameView
AXUIRootViewController
AXStyleProviderUIAlert
AXUIServiceContext
AXUIServiceEntitlementChecker
__AXUINSBundleOverride_super
AXUINSBundleOverride
AXUIServiceManager
AXUIMessageSenderDelegate
B20@0:4{CGPoint=ff}8@16
B8@0:4
@28@0:4I8@12@16@20@24
v12@0:4@8
v8@0:4
@8@0:4
@"AXUIAlertContext"
#8@0:4
{UIEdgeInsets=ffff}8@0:4
d8@0:4
v16@0:4d8
I8@0:4
v12@0:4I8
@"NSString"
@"AXDispatchTimer"
@"AXUIAlert"
@"<AXUIService>"
@"UIImage"
B12@0:4@8
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
i12@0:4I8
{CGSize=ff}12@0:4I8
B16@0:4i8I12
{UIEdgeInsets=ffff}12@0:4I8
@12@0:4I8
f12@0:4I8
d12@0:4I8
@"UIFont"12@0:4I8
@"UIColor"12@0:4I8
@"UIImage"12@0:4I8
@"NSBundle"
f8@0:4
v12@0:4f8
@"UIView"
@"<AXUINubbitDelegate>"
@"AXAssertion"
@"UIPanGestureRecognizer"
@"UIDynamicAnimator"
@"UIGravityBehavior"
@"UIAttachmentBehavior"
@"UISnapBehavior"
@"UICollisionBehavior"
@"UIDynamicItemBehavior"
B12@0:4i8
i12@0:4B8
v12@0:4B8
@12@0:4@8
@16@0:4@8@12
v24@0:4@8I12@16@?20
v28@0:4@8I12@16B20@?24
@20@0:4@8I12^@16
@"NSObject<OS_xpc_object>"
f16@0:4@8B12
f16@0:4@"UIViewController"8B12
v16@0:4^v8@?12
v16@0:4^v8@?<v@?B>12
@24@0:4@8I12@16^@20
B12@0:4I8
@"NSDictionary"24@0:4@"NSDictionary"8I12@"NSString"16^@20
v24@0:4@"NSDictionary"8I12@"NSString"16@?<v@?@"NSDictionary"@"NSError">20
@"AXAccessQueue"12@0:4I8
v12@0:4@"NSDictionary"8
v12@0:4@"NSString"8
@"NSString"12@0:4I8
@"NSSet"12@0:4I8
d12@0:4@8
f12@0:4@8
d12@0:4@"NSString"8
f12@0:4@"NSString"8
@"<AXUIAlertStyleProvider>"12@0:4@"NSString"8
v12@0:4@"UIDynamicAnimator"8
v28@0:4@8@12@16{CGPoint=ff}20
v20@0:4@8@12@16
v28@0:4@"UICollisionBehavior"8@"<UIDynamicItem>"12@"<UIDynamicItem>"16{CGPoint=ff}20
v20@0:4@"UICollisionBehavior"8@"<UIDynamicItem>"12@"<UIDynamicItem>"16
v28@0:4@"UICollisionBehavior"8@"<UIDynamicItem>"12@"<NSCopying>"16{CGPoint=ff}20
v20@0:4@"UICollisionBehavior"8@"<UIDynamicItem>"12@"<NSCopying>"16
@16@0:4B8@12
v20@0:4@8B12@16
v28@0:4@8B12@16^v20@?24
@28@0:4@8@12@16I20@24
@40@0:4@8@12@16I20I24d28@36
v16@0:4@8@12
@24@0:4B8f12B16@20
v28@0:4@8i12d16B24
d24@0:4i8i12d16
v12@0:4@?8
@20@0:4B8@12B16
v16@0:4B8@12
v28@0:4@8@12@16^v20@?24
v16@0:4@8B12
@24@0:4@8{CGPoint=ff}12@20
v20@0:4i8d12
i8@0:4
v12@0:4i8
@"AXUIAlertStyleProvider"
@"AXUIServiceManager"
@"NSMutableDictionary"
v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
v20@0:4{CGSize=ff}8@16
v36@0:4@8@12@16i20f24f28@32
{CGPoint="x"f"y"f}
@"<AXUIAlertStyleProvider>"
I12@0:4@8
@"<NSObject><NSCopying>"
@"NSMutableArray"
@12@0:4#8
B20@0:4I8@12^@16
B16@0:4^{?=[8I]}8@12
v12@0:4#8
v20@0:4@8^v12@?16
v20@0:4@8@12^v16
^v20@0:4@8@12^I16
v16@0:4@8^v12
v20@0:4@"AXUIMessageSender"8^v12@?<v@?@"NSObject<OS_xpc_object>">16
v20@0:4@"AXUIMessageSender"8@"NSObject<OS_xpc_object>"12^v16
^v20@0:4@"AXUIMessageSender"8@"NSObject<OS_xpc_object>"12^I16
v16@0:4@"AXUIMessageSender"8^v12
v32@0:4@8I12@16@20B24@?28
B24@0:4#8I12@16^@20
B28@0:4@8@12@16I20^@24
@"BSProcessDeathWatcher"
@"AXUIDisplayManager"
@"AXAccessQueue"
@"AXUIMessageSender"
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2402.61/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIAlert.m
+[AXUIAlert alertWithType:text:subtitleText:iconImage:styleProvider:]
This type of alert: (%@) is not supported on this platform. 
context
T@"AXUIAlertContext",W,N,V_context
UIScreen
_isMainScreen
_displayPeripheryInsetsRestrictedToScene
{UIEdgeInsets=ffff}
_displayPeripheryInsets
<%@: %p; identifier = "%@">
identifier
T@"NSString",C,N,V_identifier
creationTimeInterval
Td,N,V_creationTimeInterval
fadeAnimationDuration
Td,N,V_fadeAnimationDuration
showOrHideTimer
T@"AXDispatchTimer",&,N,V_showOrHideTimer
alertView
T@"AXUIAlert",&,N,V_alertView
service
T@"<AXUIService>",&,N,V_service
priority
TI,N,V_priority
duration
Td,N,V_duration
text
T@"NSString",C,N,V_text
subtitleText
T@"NSString",C,N,V_subtitleText
iconImage
T@"UIImage",&,N,V_iconImage
type
TI,N,V_type
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
bundle
T@"NSBundle",&,N,V_bundle
nubbit
T@"UIView",&,N,V_nubbit
delegate
T@"<AXUINubbitDelegate>",W,N,V_delegate
disableSystemGesturesAssertion
T@"AXAssertion",&,N,V_disableSystemGesturesAssertion
disableDashBoardSystemGesturesAssertion
T@"AXAssertion",&,N,V_disableDashBoardSystemGesturesAssertion
moveNubbitGestureRecognizer
T@"UIPanGestureRecognizer",&,N,V_moveNubbitGestureRecognizer
fadeTimer
T@"AXDispatchTimer",&,N,V_fadeTimer
dynamicAnimator
T@"UIDynamicAnimator",&,N,V_dynamicAnimator
gravityBehavior
T@"UIGravityBehavior",&,N,V_gravityBehavior
followPanBehavior
T@"UIAttachmentBehavior",&,N,V_followPanBehavior
snapToBoundaryBehavior
T@"UISnapBehavior",&,N,V_snapToBoundaryBehavior
collisionBehavior
T@"UICollisionBehavior",&,N,V_collisionBehavior
dynamicItemBehavior
T@"UIDynamicItemBehavior",&,N,V_dynamicItemBehavior
originalAlpha
Tf,N,V_originalAlpha
AXUIServer-%f
 AXID: %@
isHandlingFullScreenPresentation
TB,N,V_isHandlingFullScreenPresentation
<%@: %p; clientIdentifier = "%@">
clientIdentifier
T@"NSString",C,N,V_clientIdentifier
connection
T@"NSObject<OS_xpc_object>",&,N,V_connection
v8@?0B4
v4@?0
B16@?0@4I8^B12
v16@?0@4@8^B12
%@|%@
<%@: %p>
AXUIAlert
invertUI
com.apple.nano
__AXStringForVariablesSentinel
i12@?0@4@8
v16@?0@4I8^B12
Got nubbit moving gesture recognizer %@, which had no nubbit associated with it.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2402.61/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIDisplayManager.m
-[AXUIDisplayManager _beginMoveForNubbitContext:]
Should have made an animator for the nubbit when it was registered
defaultAlertStyleProvider
T@"AXUIAlertStyleProvider",&,N,V_defaultAlertStyleProvider
activeInterfaceOrientation
Ti,N,V_activeInterfaceOrientation
numberOfAttemptsToInitializeActiveInterfaceOrientation
TI,N,V_numberOfAttemptsToInitializeActiveInterfaceOrientation
serviceManager
T@"AXUIServiceManager",W,N,V_serviceManager
alertQueues
T@"NSMutableDictionary",&,N,V_alertQueues
visibleAlertContexts
T@"NSMutableDictionary",&,N,V_visibleAlertContexts
activeWindows
T@"NSMutableDictionary",&,N,V_activeWindows
passiveWindows
T@"NSMutableDictionary",&,N,V_passiveWindows
activeContentViewControllers
T@"NSMutableDictionary",&,N,V_activeContentViewControllers
passiveContentViewControllers
T@"NSMutableDictionary",&,N,V_passiveContentViewControllers
nubbitContexts
T@"NSMutableDictionary",&,N,V_nubbitContexts
systemServerActionHandlerIdentifier
T@"NSString",C,N,V_systemServerActionHandlerIdentifier
reachabilityHandlerIdentifier
T@"NSString",C,N,V_reachabilityHandlerIdentifier
reachabilityOffset
Tf,N,V_reachabilityOffset
Content view controllers of window at level %ld have conflicting supported interface orientations. Allowing portrait orientation nonetheless. One of these content view controllers needs to be moved to a different window using the method -desiredWindowLevelForContentViewController:userInteractionEnabled: from AXUIContentViewControllerDelegate, on the corresponding AXUIService: %{public}@.
H:|-[backdropView]-|
backdropView
V:|-[backdropView]-|
H:|[label]|
label
V:|[label]|
alertType
TI,N,V_alertType
styleProvider
T@"<AXUIAlertStyleProvider>",&,N,V_styleProvider
serviceIdentifier
T@"<NSObject><NSCopying>",C,N,V_serviceIdentifier
clientMessengers
T@"NSMutableArray",&,N,V_clientMessengers
clientsCount
TI,R,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2402.61/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIServiceEntitlementChecker.m
-[AXUIServiceEntitlementChecker serviceCanProcessMessageWithIdentifier:fromClientWithConnection:possibleRequiredEntitlements:]
The client connections array and the entitlements caches array are supposed to have the same number of elements (%@).
serviceClass
T#,N,V_serviceClass
clientConnections
T@"NSMutableArray",&,N,V_clientConnections
entitlementsCaches
T@"NSMutableArray",&,N,V_entitlementsCaches
NSBundle
NSExtensionPointIdentifier
com.apple.accessibility.AccessibilityUIServer
NSExtension
System/Library/AccessibilityBundles
AppleInternal/Library/AccessibilityUIServices
Developer/Library/PrivateFrameworks/AccessibilityAudit.framework/Resources
axuiservice
ServicesAccessQueue
EntitlementsCheckersAccessQueue
ResumingConnectionsQueue
Beginning transaction with identifier %{public}@ for service: %{public}@
Ending transaction with identifier %{public}@ for service: %{public}@
%{public}@ sending asynchronous message with identifier %lu and a completion handler but no target access queue; defaulting to the main access queue.
v12@?0@"NSDictionary"4@"NSError"8
AXUINSBundleOverride
AXUIUIScreenOverride
Current locale did change. Restarting AXUI Server %@ %@
v8@?0@"NSNotification"4
AXUI Server started at PreBoard. This is unexpected, but we'll restart once we're done.
%@.%@.%@-%p
v8@?0@"NSObject<OS_xpc_object>"4
v16@?0@"NSDictionary"4@"NSError"8@"<AXUIService>"12
Couldn't find service associated to client identifier: %@
One of the following entitlements is required: %@ for this operation: %d
Couldn't find client identifier associated to message.
AXUIServiceManager: Got invalid value for message identifier in client connection event handler: 0.
Lost connection with client.
Connection with client was supposed to be terminated imminently, but we are ignoring it for now.
Got unexpected error in client connection event handler: %{public}s.
Got object of unexpected type in client connection event handler: %{public}s.
v8@?0i4
Invalid service bundle path: %@
Failed to load service bundle at path: %@
Couldn't find principal class for service bundle at path: %@
Service: '%@' unable to process message:'%@'. Entitlements may be missing. required: %@ [client identifier: %@:%d]
Service instance does not conform to service protocol: %@.
Failed to instantiate service of class %@
Service bundle still not loaded, weird... Service bundle path: %@
Failed to create service bundle at path: %@
v16@?0@"NSString"4@"NSObject<OS_xpc_object>"8^B12
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AccessibilityFrameworks_Sim/AccessibilityFrameworks-2402.61/AccessibilityUmbrellaFramework/Frameworks/AccessibilityUI/Service/AXUIServiceManager.m
-[AXUIServiceManager _unregisterAllClientsWithConnection:]
The client identifiers lists array is expected to be of same size as the affected services array.
pausedConnections
T@"NSMutableArray",&,N,V_pausedConnections
resumingConnectionsQueue
T@"AXAccessQueue",&,N,V_resumingConnectionsQueue
entitlementsCheckers
T@"NSMutableDictionary",&,N,V_entitlementsCheckers
entitlementsCheckersAccessQueue
T@"AXAccessQueue",&,N,V_entitlementsCheckersAccessQueue
didEncounterError
TB,N,V_didEncounterError
messageSender
T@"AXUIMessageSender",&,N,V_messageSender
serviceContexts
T@"NSMutableArray",&,N,V_serviceContexts
servicesAccessQueue
T@"AXAccessQueue",&,N,V_servicesAccessQueue
lastUsedServiceIdentifier
TI,N,V_lastUsedServiceIdentifier
shouldAllowServicesToProcessMessages
TB,N,V_shouldAllowServicesToProcessMessages
displayManager
T@"AXUIDisplayManager",&,N,V_displayManager
No longer in PreBoard. AXUI Server is restarting.
333333
AXUIDisplayManager received unknown orientation, not forwarding
%{public}@
zPLR
zPLR
