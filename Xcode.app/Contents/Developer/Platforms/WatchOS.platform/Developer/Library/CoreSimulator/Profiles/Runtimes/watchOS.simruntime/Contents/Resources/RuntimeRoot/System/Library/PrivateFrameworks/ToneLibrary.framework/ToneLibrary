texttone:Incoming-Call-Haptic-US
texttone:Text-Message-Haptic
texttone:Voicemail-Haptic
texttone:New-Mail-Haptic
texttone:Calendar-Haptic
texttone:Reminder-Haptic
system:Radar
system:Default Timer
texttone:Digital-Touch-Haptic
texttone:System-Notification-Haptic
texttone:App-Notification-Haptic
texttone:Passbook-Haptic
texttone:Breathe-Haptic
ringtone
sms-sound-identifier
voicemail-sound-identifier
newmail-sound-identifier
sentmail-sound-identifier
senttweet-sound-identifier
facebookpost-sound-identifier
calendaralert-sound-identifier
reminderalert-sound-identifier
airdrop-invitation-sound-identifier
alarm-sound-identifier
timer-sound-identifier
-per-account
-watch-alert-policy
watch-prefers-salient-notification
/Library/Ringtones
Opening
Media/iTunes_Control/Ringtones
Media/iTunes_Control/iTunes/Ringtones.plist
Media/Purchases
Media/Purchases/Ringtones.plist
/System/Library/Audio/UISounds
AlertTones
Modern
nano
AlarmWakeUpRingtones
Album
Artist
Total Time
Genre
Name
GUID
Store Item ID
Store Front ID
Purchased
Media Kind
Artwork File
Protected Content
Private
File Extension
tone
Ringtones
import_
_TLToneManagerContentsChangedNotification
v4@?0
_TLToneManagerAccessQueue
_TLTonePreferencesDidChangeNotification
_TLAlertWatchPrefersSalientNotificationPreferenceDidChangeLocallyNotification
_TLAlertWatchPrefersSalientNotificationPreferenceDidChangeRemotelyNotification
com.apple.itunesstored.RingtoneAdded
v12@?0B4@"NSArray"8
com.apple.ToneLibrary.lock
Ringtone_US_Haptic.caf
texttone:Incoming-Call-Haptic-UK
Ringtone_UK_Haptic.caf
Alert_Messages_1_Haptic.caf
Alert_Voicemail_Haptic.caf
Alert_Mail_Haptic.caf
Alert_Calendar_Haptic.caf
Alert_ReminderDue_Haptic.caf
Alarm_Haptic.caf
Timer_Haptic.caf
ET_BeginNotification_Haptic.caf
Notification_Haptic.caf
Alert_3rdParty_Haptic.caf
texttone:App-Notification-Remote-Haptic
sms-received1.caf
texttone:Activity-Goal-Behind-Haptic
Alert_ActivityGoalBehind_Haptic.caf
texttone:Activity-Goal-Attained-Haptic
Alert_ActivityGoalAttained_Haptic.caf
texttone:Activity-Friends-Goal-Attained-Haptic
Alert_ActivityFriendsGoalAttained_Haptic.caf
texttone:Passbook-Geofence-Haptic
Alert_PassbookGeofence_Haptic.caf
HummingbirdNotification_Haptic.caf
texttone:Incoming-Call-Haptic-Deemphasized-US
RingtoneDucked_US_Haptic.caf
texttone:Incoming-Call-Haptic-Deemphasized-UK
RingtoneDucked_UK_Haptic.caf
texttone:Salient-Notification-Haptic
SalientNotification_Haptic.caf
texttone:Text-Message-Salient-Haptic
Alert_Messages_1_Salient_Haptic.caf
texttone:Voicemail-Salient-Haptic
Alert_Voicemail_Salient_Haptic.caf
texttone:New-Mail-Salient-Haptic
Alert_Mail_Salient_Haptic.caf
texttone:Calendar-Salient-Haptic
Alert_Calendar_Salient_Haptic.caf
texttone:Reminder-Salient-Haptic
Alert_ReminderDue_Salient_Haptic.caf
texttone:Digital-Touch-Salient-Haptic
ET_BeginNotification_Salient_Haptic.caf
texttone:System-Notification-Salient-Haptic
Notification_Salient_Haptic.caf
texttone:App-Notification-Salient-Haptic
Alert_3rdParty_Salient_Haptic.caf
texttone:Go-To-Sleep
GoToSleep_Haptic.caf
texttone:Alarm-Nighstand-Haptic
Alarm_Nightstand_Haptic.caf
texttone:SOS-Countdown-Tick
SOS-Countdown-Tick.caf
system:
itunes:
texttone:
alarmWakeUp:
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v8@?0@"NSError"4
v12@?0@"NSDictionary"4@"NSError"8
v12@?0B4@"NSError"8
texttone:Text-Message-Alert-In-Conversation
texttone:Photos Sharing Post
texttone:Photos Memory
RINGTONE_PICKER_DEFAULT_RINGTONE_NAME
com.apple.ToneLibrary.TLToneManager.soundCacheAccessQueue
RINGTONE_PICKER_NONE
v16@?0@"NSString"4@"TLITunesTone"8^B12
v16@?0@"NSString"4@"TLAlertTone"8^B12
%@%@
was-affected-by-accidental-tone-deletion
requires-reset-sync-post-accidental-tone-deletion
sound-identifier
sound
sharedToneManager
T@"TLToneManager",R
_rootDirectory
T@"NSString",R,N
_deviceITunesRingtoneDirectory
_deviceITunesRingtoneInformationPlist
_iTunesRingtoneDirectory
_iTunesRingtoneInformationPlist
_systemRingtoneDirectory
NPSDomainAccessor
Unable to find class %s
/System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
SSDownloadFileManifest
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
NPSManager
com.apple.Carousel
Carousel
defaultSystemApplication
T@"TLSystemApplication",R
bundleIdentifier
T@"NSString",R,V_bundleIdentifier
name
T@"NSString",R,V_name
com.apple.ToneLibrary
com.apple.springboard
v16@?0@"NSString"4@"NSString"8@"NSString"12
v16@?0@"NSString"4@"NSDictionary"8^B12
v16@?0@4@8^B12
TLVibrationManagerUserGeneratedVibrationsDidChange
usergeneratedvibration:
Pattern
Media/Vibrations/UserGeneratedVibrationPatterns.plist
Unexpected type for %@: %@ (%@)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-410/Library/Vibrations/TLVibrationPersistenceUtilities.m
+[TLVibrationPersistenceUtilities _objectIsValidUserGeneratedVibrationPattern:error:]_block_invoke
key of user generated vibration pattern wrapper
Invalid vibration pattern: %@
name of user generated vibration pattern
user generated vibration pattern wrapper
v16@?0^@4^@8^@12
+[TLVibrationPersistenceUtilities objectIsValidUserGeneratedVibrationPatternsDictionary:error:]_block_invoke
Invalid key object: %@. All key objects need to start with "%@"
key object
root object
userGeneratedVibrationStoreFileURL
T@"NSURL",R
<%@: %p
; type = %@
; topic = "%@"
; toneIdentifier = "%@"
; vibrationIdentifier = "%@"
; externalToneFileURL = %@
; externalToneMediaLibraryItemIdentifier = %llu
; has externalVibrationPattern
; externalVibrationPatternFileURL = %@
; audioCategory = "%@"
; audioVolume = %f
; maximumDuration = %f
; shouldRepeat = YES
; shouldIgnoreRingerSwitch = YES
type
topic
toneIdentifier
vibrationIdentifier
externalToneFileURL
externalToneMediaLibraryItemIdentifier
externalVibrationPattern
externalVibrationPatternFileURL
audioCategory
audioVolume
maximumDuration
shouldRepeat
shouldIgnoreRingerSwitch
hasCustomAudioVolume
Instances of TLAlertConfiguration cannot be mutated once they've been used to make an instance of TLAlert. Please make a copy of the TLAlertConfiguration instead.
supportsSecureCoding
TB,R
_hasCustomAudioVolume
TB,R,N,V_hasCustomAudioVolume
Ti,R,N,V_type
T@"NSString",C,N,V_topic
T@"NSString",C,N,V_toneIdentifier
T@"NSString",C,N,V_vibrationIdentifier
T@"NSURL",C,N,V_externalToneFileURL
TQ,N,V_externalToneMediaLibraryItemIdentifier
T@"NSDictionary",C,N,V_externalVibrationPattern
T@"NSURL",C,N,V_externalVibrationPatternFileURL
T@"NSString",C,N,V_audioCategory
Tf,N,V_audioVolume
forPreview
TB,N,GisForPreview,V_forPreview
Td,N,V_maximumDuration
TB,N,V_shouldRepeat
TB,N,V_shouldIgnoreRingerSwitch
Fade In
Fade Out
; identifier = "%@"
; name = "%@"
; albumTitle = "%@"
; artistName = "%@"
; genreName = "%@"
; duration = %f
; mediaKind = %@
; isPurchased = YES
; isProtectedContent = YES
; isPrivateTone = YES
; storeItemIdentifier = %llu
; storeFrontIdentifier = "%@"
; syncIdentifier = %@
; filePath = %@
identifier
T@"NSString",R,N,V_identifier
T@"NSString",R,N,V_name
albumTitle
T@"NSString",R,N,V_albumTitle
artistName
T@"NSString",R,N,V_artistName
genreName
T@"NSString",R,N,V_genreName
filePath
T@"NSString",R,N,V_filePath
syncIdentifier
T@"NSNumber",R,N,V_syncIdentifier
storeItemIdentifier
TQ,R,N,V_storeItemIdentifier
storeFrontIdentifier
T@"NSString",R,N,V_storeFrontIdentifier
purchased
TB,R,N,GisPurchased,V_purchased
TB,R,N,GisRingtone,V_ringtone
artworkFile
T@"NSString",R,N,V_artworkFile
duration
Td,R,N,V_duration
protectedContent
TB,R,N,GisProtectedContent,V_protectedContent
privateTone
TB,R,N,GisPrivateTone,V_privateTone
fadeInDurationNumber
T@"NSNumber",R,N,V_fadeInDurationNumber
fadeOutDurationNumber
T@"NSNumber",R,N,V_fadeOutDurationNumber
playedToEnd
reachedMaximumDuration
stopped
userInterruption
systemInterruption
failed
????
; soundFileURL = %@
; wasSoundCreated = NO
; soundID = kSystemSoundID_NoneTone
; soundID = %lu
soundFileURL
T@"NSURL",R,N,V_soundFileURL
soundID
TL,R,N
v12@?0i4@"NSError"8
actualSound
T@"TLSystemSound",R,N
previewSound
%@.%@-%@-%@
AccessQueue
%@.%@
redownloadAllTones
v16@?0@"NSNumber"4@"TLToneStoreDownload"8^B12
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-410/Library/Tones/ToneStoreDownloads/Embedded/TLToneStoreDownloadStoreServicesController.m
-[TLToneStoreDownloadStoreServicesController _assertRunningOnAccessQueue]
storeAccountName
SSDownloadManagerOptions
SSDownloadKindRingtone
SSDownloadKindTone
SSDownloadExternalPropertyBytesDownloaded
SSDownloadExternalPropertyPercentComplete
SSDownloadExternalPropertyPolicySizeLimit
SSDownloadExternalPropertyRentalInformation
SSDownloadPropertyClientBundleIdentifier
SSDownloadPropertyDownloadPhase
SSDownloadPropertyEncodedErrorData
SSDownloadPropertyIsRestore
SSDownloadPropertyKind
SSDownloadPropertyReason
SSDownloadPropertyStoreItemIdentifier
SSDownloadPropertyTitle
SSDownloadPropertyHandlerID
SSDownloadPropertyCollectionName
SSDownloadPropertyArtistName
SSDownloadPropertyGenre
SSDownloadPropertyDurationInMilliseconds
SSDownloadManager
SSPurchaseManager
SSAccountStoreChangedNotification
SSAccountStore
SSItemKindTone
SSItemKindRingtone
SSItemStoreFrontURLForItemKind
UIApplication
/System/Library/Frameworks/UIKit.framework/UIKit
SSTonePurchase
SSItemToneStyleRingtone
SSItemToneStyleTextTone
SSDownloadPropertyIsRedownload
SSMutableURLRequestProperties
SSDownloadPhaseFinished
SSDownloadPhaseFailed
SSDownloadPhaseCanceled
SSDownload
SSDownloadPropertyIsStoreDownload
TLAlertTypeNone
TLAlertTypeIncomingCall
TLAlertTypeTextMessage
TLAlertTypeTextMessageInConversation
TLAlertTypeNewVoicemail
TLAlertTypeNewMail
TLAlertTypeSentMail
TLAlertTypeSentTweet
TLAlertTypeFacebookPost
TLAlertTypePhotosNotification
TLAlertTypeCalendarAlert
TLAlertTypeReminderAlert
TLAlertTypeAirDropInvitation
TLAlertTypeAlarm
TLAlertTypeTimer
TLAlertTypeDigitalTouch
TLAlertTypeSystemNotification
TLAlertTypeAppNotification
TLAlertTypeEmergency
TLAlertTypeActivity
TLAlertTypePassbook
TLAlertTypeBreathe
TLAlertTypeSOS
TLAlertTypeContinuityKeyboard
none
incoming call
text message
text message in conversation
new voicemail
new mail
sent mail
sent tweet
facebook post
photos notification
calendar alert
reminder alert
airdrop invitation
alarm
timer
digital touch
system notification
app notification
emergency
activity
passbook
breathe
continuity keyboard
v8@?0i4
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-410/Library/Playback/TLAlertType.m
void _TLAlertTypeValidateConsistencyOfEnumeration(void)_block_invoke
Built-In-System-Sound-ID-Vibration
Default-Emergency
SystemCallVibrationIdentifier
SystemTextMessageVibrationIdentifier
SystemNewVoiceMailVibrationIdentifier
SystemNewMailVibrationIdentifier
SystemSentMailVibrationIdentifier
SystemTweetVibrationIdentifier
SystemFacebookPostVibrationIdentifier
SystemCalendarAlertVibrationIdentifier
SystemReminderAlertVibrationIdentifier
SystemAirDropInvitationVibrationIdentifier
SystemAlarmVibrationIdentifier
SystemTimerVibrationIdentifier
PerAccount
WatchAlertPolicy
vibration:
VIBRATION_PICKER_NONE
_TLVibrationManagerAccessQueue
_TLVibrationPreferencesDidChangeNotification
com.apple.springboard.ring-vibrate.changed
com.apple.springboard.silent-vibrate.changed
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-410/Library/Vibrations/TLVibrationManager.m
-[TLVibrationManager dealloc]
*** -[%@ %@] Attempted to mutate the shared vibration manager: %@. Create your own instance of %@ manually if you need to mutate it.
Text-Message-Alert-In-Conversation
UserSelectable
Classic
PhotosMemoriesNotification
SOS-Countdown-Tick
SOS-Dial-Start
SOS-Button-Chording-Timeout
Vibrations
plist
@"NSDictionary"12@?0@"NSString"4@"NSString"8
Other
VIBRATION_UNKNOWN_NAME
Unexpected exception: %@.
VibrationIdentifier
Vibration
sharedVibrationManager
T@"TLVibrationManager",R
needsRefresh
TB,R,N,V_needsRefresh
allowsAutoRefresh
TB,N,V_allowsAutoRefresh
shouldVibrateForCurrentRingerSwitchState
TB,R,N
shouldVibrateOnRing
shouldVibrateOnSilent
com.apple.springboard.ringerstate
AVSystemController
/System/Library/PrivateFrameworks/Celestial.framework/Celestial
; fadeOutDuration = %f
; shouldWaitUntilEndOfCurrentRepetition = YES
fadeOutDuration
Td,N,V_fadeOutDuration
shouldWaitUntilEndOfCurrentRepetition
TB,N,V_shouldWaitUntilEndOfCurrentRepetition
playbackBackEnd
Ti,N,V_playbackBackEnd
timeoutTimerSource
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimerSource
beingInterrupted
TB,N,GisBeingInterrupted,V_beingInterrupted
Atoms
Intensity
Looped
VibePattern
OnDuration
OffDuration
It is pretty much impossible to compute the duration of a modern vibration pattern that uses atoms. This is invalid.
_artificiallyRepeatingPropertyListRepresentation
T@,R,N
propertyListRepresentation
contextObject
T@,&,N,V_contextObject
%@.%@.%@
label
T@"NSString",R,N,V_label
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-410/Library/Playback/BackEnds/SystemSound/TLAlertSystemSoundController.m
-[TLAlertSystemSoundController _assertRunningOnAccessQueue]
true
false
kAudioServicesFlag_SuppressAudio
kAudioServicesFlag_SuppressVibe
%@ | %@
Failed to prepare tone sound ID for playback.
-[TLAlertSystemSoundController _endRequiringBacklightObservation]
completionHandler
T@?,C,N,V_completionHandler
playbackCompletionType
Ti,N,V_playbackCompletionType
error
T@"NSError",C,N,V_error
toneStoreDownload:
; downloadProgress = %f
T@"NSString",C,N,S_setName:
T@"NSString",C,N,S_setAlbumTitle:
T@"NSString",C,N,S_setArtistName:
Td,N,S_setDuration:
T@"NSString",C,N,S_setGenreName:
TB,N,GisRingtone,S_setRingtone:
TQ,N,S_setStoreItemIdentifier:
downloadProgress
Tf,N,S_setDownloadProgress:
T@"NSString",C,N,S_setToneIdentifier:
tl_hapticPlayerItemTrack
T@"AVPlayerItemTrack",R,N
General
Playback
ToneManagement
VibrationManagement
<none>
com.apple.tonelibraryd
TLServiceCommunicationErrorDomain
TLServiceValidationErrorDomain
TLServicePersistenceErrorDomain
%@=%@
v12@?0@"NSSet"4@"NSError"8
HWModelStr
sharedCapabilitiesManager
T@"TLCapabilitiesManager",R
ringtoneStoreAvailable
TB,R,N,GisRingtoneStoreAvailable
alertToneStoreAvailable
TB,R,N,GisAlertToneStoreAvailable
hasVibratorCapability
hasUserGeneratedVibrationsCapability
deviceCodeName
simplifiedDeviceCodeName
SSDeviceAvailableItemKindsChangedNotification
SSDevice
TLAlertTopicTextMessageInConversation
TLAlertTopicPhotosNotificationSharingPost
TLAlertTopicPhotosNotificationMemory
TLAlertTopicSystemNotificationFindMyDevice
TLAlertTopicSystemNotificationGeneric
TLAlertTopicAppNotificationRemote
TLAlertTopicActivityGoalAttained
TLAlertTopicActivityGoalBehind
TLAlertTopicActivityFriendsGoalAttained
TLAlertTopicPassbookGeofence
TLAlertTopicSOSCountdownTick
TLAlertTopicSOSDialStart
TLAlertTopicSOSButtonChordingTimeout
TLAlertTopicAlarmGoToSleep
TLAlertTopicAlarmNightstand
TLAlertTopicAlarmWakeUp
_TLAlertTopicIncomingCallDeemphasized
T@"TLSystemSound",&,N,V_sound
playbackCompletionContext
T@"TLAlertPlaybackCompletionContext",&,N,V_playbackCompletionContext
playbackObserver
T@"<TLAlertPlaybackObserver>",W,N,V_playbackObserver
hasPlaybackStarted
TB,N,V_hasPlaybackStarted
toneIdentifierForDeemphasizingAlert
T@"NSString",C,N,V_toneIdentifierForDeemphasizingAlert
beingDeemphasized
TB,N,GisBeingDeemphasized,V_beingDeemphasized
deemphasized
TB,N,GisDeemphasized,V_deemphasized
; alert = %@
; isAquired = YES
TLToneImportStatusCodeSuccessful
TLToneImportStatusCodeSkippedDuplicateEntry
TLToneImportStatusCodeTransientFailure
successful
skipped duplicate entry
transient failure
; statusCode = %@
statusCode
Ti,R,N,V_statusCode
T@"NSString",R,N,V_toneIdentifier
%@.%@-%@
unknown
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-410/Library/Utilities/TLBacklight.m
-[TLBacklight _assertRunningOnAccessQueue]
-[TLBacklight _assertNotRunningOnAccessQueue]
sharedBacklight
T@"TLBacklight",R
backlightStatus
Ti,R
CSLSBacklight
/System/Library/PrivateFrameworks/CarouselServices.framework/CarouselServices
TLAlertErrorDomain
_TLAlertWatchPrefersSalientToneAndVibrationDidChangeNotification
externalTone:%@-%@
mediaLibrary:%llu-%@
externalVibration:%llu-%@
externalVibration:%@-%@
apple-internal-install
 [%ld]
<%@: %p; type = %@>
; configuration = %@
; toneIdentifier = %@
; vibrationIdentifier = %@
configuration
T@"TLAlertConfiguration",R,N,V_configuration
T@"NSString",R,N,V_vibrationIdentifier
mirror-companion
always-enabled
always-disabled
independent-inferred-from-companion
_TLAlertControllerShouldStopAllAlertsNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-410/Library/Playback/TLAlertController.m
-[TLAlertController _assertRunningOnAccessQueue]
The method +[TLAlert _stopAllAlerts] should not be called from anywere except the %@ process.
Updating the audio volume of %@ is not supported. Please refer to TLAlert_Private.h for more details on the limitations of the audio volume dynamic update API.
Setting up an activation assertion for %@ is not supported.
v8@?0B4
sharedAlertController
T@"TLAlertController",R
currentItem
currentItem.status
AudioEventQueue
; playingAlert = <%@: %p>
; playingAlert = %@
; alertForAudioEnvironmentSetup = <%@: %p>
; alertForAudioEnvironmentSetup = %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ToneLibrary_Sim/ToneLibrary-410/Library/Playback/BackEnds/QueuePlayer/TLAlertQueuePlayerController.m
-[TLAlertQueuePlayerController _assertRunningOnAudioEventQueue]
-[TLAlertQueuePlayerController _stopPlayingAlerts:withOptions:playbackCompletionType:completionHandler:]
Stopping playing alert: %@
Alarm
playable
Failed to prepare tone asset for playback.
-[TLAlertQueuePlayerController _startPlaybackForPlayingAlertUsingConfirmedPlayableAsset:isFullyReady:]
Phone
LocatePhone
ToneLibrary
tlutil
Ringtone
RingtonePreview
FindMyPhone
EmergencyAlert
EmergencyAlert_Muteable
-[TLAlertQueuePlayerController _endPreventingAudioSessionDeactivation]
UIBackgroundTaskInvalid
CMTimeCompare
/System/Library/Frameworks/CoreMedia.framework/CoreMedia
CMTimeMake
CMTimeGetSeconds
CMTimeMakeWithSeconds
kCMTimeZero
alloc
init
initWithITunesRingtonePlistAtPath:
initWithLabel:appendUUIDToLabel:
copySharedResourcesPreferencesDomain
perWatchPreferencesDomain
initWithDomain:
synchronize
_loadITunesRingtoneInfoPlistAtPath:
_loadAlertToneInfo
_loadToneIdentifierAliasMap
_performBlockInAccessQueue:
performSynchronousBlock:
dealloc
_rootDirectory
stringByAppendingPathComponent:
_iTunesRingtoneDirectory
_tonesFromManifestPath:mediaDirectoryPath:
_deviceITunesRingtoneInformationPlist
_deviceITunesRingtoneDirectory
addObjectsFromArray:
countByEnumeratingWithState:objects:count:
identifier
setObject:forKey:
syncIdentifier
copy
initWithContentsOfFile:
objectForKey:
allKeys
initWithPropertyListRepresentation:filePath:
addObject:
defaultCenter
postNotificationName:object:
_reloadTonesAfterExternalChange
allValues
UTF8String
defaultManager
_installedTones
filePath
attributesOfItemAtPath:error:
longLongValue
dictionaryWithObjects:forKeys:count:
_addToneEntries:toManifestAtPath:mediaDirectory:shouldSkipReload:
initWithStatusCode:toneIdentifier:
stringByDeletingLastPathComponent
_ensureDirectoryExistsAtPath:
_lockManifestAtPath:
fileURLWithPath:
assetWithURL:
hasProtectedContent
mutableCopy
numberWithBool:
isDuplicateOfTone:
fileExistsAtPath:
class
lastPathComponent
removeObjectForKey:
hasPrefix:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
removeAllObjects
_reloadTones
count
initWithManifestType:
removeItemsWithAssetPaths:completionBlock:
setWithObjects:
_removeTonesFromManifestAtPath:fileNames:shouldSkipReload:alreadyLockedManifest:removedEntries:
fileSystemRepresentation
bundleForClass:
resourcePath
_systemEmbeddedSoundDirectory
_baseDirectoryForAlertToneSoundFiles
_systemSoundDirectory
_systemWatchSoundDirectory
initWithSoundFileURL:actualSoundID:previewSoundID:
defaultRingtoneIdentifier
isEqualToString:
_toneWithIdentifierIsSystemAlertTone:
_aliasForToneIdentifier:
initWithServiceName:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
retrieveCurrentTonePreferencesWithCompletionHandler:
setCurrentToneIdentifier:keyedByTopic:forPreferenceKey:completionHandler:
retrieveUserGeneratedVibrationPatternsWithCompletionHandler:
setUserGeneratedVibrationPatterns:withCompletionHandler:
removeAllUserGeneratedVibrationPatternsWithCompletionHandler:
interfaceWithProtocol:
setRemoteObjectInterface:
resume
_newServiceConnection
tl_nonRedundantDescription
remoteObjectProxyWithErrorHandler:
invalidate
currentToneIdentifierForAlertType:topic:
setCurrentToneIdentifier:forAlertType:topic:
length
_systemWideTonePreferenceKeyForAlertType:
stringByAppendingString:
_tonePreferencesFromService
toneWithIdentifierIsValid:
stringWithString:
_currentToneIdentifierForAlertType:topic:
_currentToneWatchAlertPolicyForAlertType:topic:
_defaultToneIdentifierForAlertType:topic:
_setToneIdentifierUsingService:keyedByTopic:forPreferenceKey:
preferencesDomain
_didSetTonePreferenceSuccessfullyWithKey:inDomain:usingPreferencesOfKind:
currentToneIdentifierForAlertType:
nameForToneIdentifier:
currentToneSoundIDForAlertType:topic:
_soundForToneIdentifier:
soundID
currentLocale
caseInsensitiveCompare:
_watchPrefersSalientToneAndVibration
defaultToneIdentifierForAlertType:
filePathForToneIdentifier:
actualSound
_toneWithIdentifierIsITunesRingtone:
_toneWithIdentifierIsNonDefaultSystemRingtone:
_toneWithIdentifierIsDefaultRingtone:
_toneWithIdentifierIsAlarmWakeUp:
initWithSoundFileURL:soundID:
_filePathForToneIdentifier:isValid:
_fileNameFromToneIdentifier:withPrefix:
_systemRingtoneDirectory
stringByAppendingPathExtension:
_alarmWakeUpRingtoneDirectory
_checkForFileExistenceAtPath:allowingTCCPreflight:
soundFileURL
path
_defaultRingtonePath
previewSound
_nameForToneIdentifier:isValid:
_localizedNameOfToneWithIdentifier:
_defaultRingtoneName
name
enumerateKeysAndObjectsUsingBlock:
stringByDeletingPathExtension
_systemNewSoundDirectory
_systemEmbeddedModernSoundDirectory
_toneWithIdentifierIsValid:
arrayWithObjects:count:
containsObject:
UUID
UUIDString
stringWithFormat:
createFileAtPath:contents:attributes:
_addToneToManifestAtPath:metadata:fileName:mediaDirectory:
statusCode
toneIdentifier
_toneWithIdentifier:
_removeToneFromManifestAtPath:fileName:
removeItemAtPath:error:
_evaluateOrphanEntriesCleanupStatusForcingReevaluationIfPreviouslyDone:returningFilePathsForFoundOrphans:wasAffectedByAccidentalToneDeletion:
_removeOrphanedPlistEntriesInManifestAtPath:mediaDirectory:
unionSet:
stringByReplacingOccurrencesOfString:withString:
_currentToneWatchAlertPolicyForAlertType:topic:didFindPersistedWatchAlertPolicy:
_currentToneWatchAlertPolicyPreferenceKeyForAlertType:topic:
_setCurrentToneWatchAlertPolicy:forAlertType:topic:
boolForKey:
setBool:forKey:
_handleWatchPrefersSalientNotificationDidChange
_watchPrefersSalientNotifications
sharedToneManager
rangeOfString:
substringFromIndex:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_handleTonePreferencesChangedNotificationForPreferencesKinds:
synchronizeUserDefaultsDomain:keys:
synchronizeNanoDomain:keys:
_iTunesRingtoneInformationPlist
_installedTonesSize
setCurrentToneIdentifier:forAlertType:
currentToneNameForAlertType:
currentToneSoundIDForAlertType:
_previewSoundForToneIdentifier:
_toneIdentifierForFileAtPath:isValid:
importTone:metadata:completionBlock:
removeImportedToneWithIdentifier:
_importPurchasedToneWithMetadata:fileName:
_transferPurchasedToITunes:
_wasAffectedByAccidentalToneDeletion
_removeOrphanedManifestEntriesReturningFilePathsForFoundOrphans:
_registerDidRequestResetSyncPostAccidentalToneDeletion
_currentToneWatchAlertPolicyForAlertType:
_setCurrentToneWatchAlertPolicy:forAlertType:
_setWatchPrefersSalientNotifications:
_handleDeviceRingtonesChangedNotification
.cxx_destruct
_accessQueue
_tonesByIdentifier
_toneIdentifiersBySyncIdentifier
_alertTonesByIdentifier
_toneIdentifierAliasMap
_cachedWatchPrefersSalientNotifications
_hasValidCachedWatchPrefersSalientNotifications
_shouldSkipNextWatchPrefersSalientNotificationsDidChangeNotification
_transientNanoPreferencesDomainAccessor
_shouldUseServiceToAccessTonePreferences
_cachedTonePreferences
_shouldIgnoreNextToneDidChangeNotification
initWithBundleIdentifier:name:
defaultSystemApplication
bundleIdentifier
_bundleIdentifier
_name
copySharedResourcesPreferencesDomainForDomain:
_existingPerTopicPreferenceKeyPrefixesWithRegularPreferenceKeys:regularPreferenceKeysCount:
_setValue:forKey:inDomain:usingPreferencesScope:
_enumerateKeysAndValuesWithEligibleKeyPrefixes:inDomain:usingPreferencesScope:withBlock:
substringToIndex:
_synchronizeDomain:usingPreferencesScope:
_copyAllKeysAndValuesFromDomain:usingPreferencesScope:
migratePerTopicPreferencesInDomain:withRegularPreferenceKeys:regularPreferenceKeysCount:intoSinglePerTopicPreferenceWithSuffix:usingPreferencesScope:
tl_errorWithDomain:description:
stringWithUTF8String:
callStackSymbols
isValidVibrationPatternPropertyListRepresentation:
_validateObjectWithError:validationBlock:
_objectIsValidUserGeneratedVibrationPattern:error:
objectIsValidUserGeneratedVibrationPatternsDictionary:error:
userGeneratedVibrationStoreFileURL
isEqualToDictionary:
appendFormat:
appendString:
initWithType:
decodeIntegerForKey:
decodeObjectOfClass:forKey:
decodeInt64ForKey:
decodeObjectOfClasses:forKey:
decodeFloatForKey:
decodeDoubleForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeObject:forKey:
encodeInt64:forKey:
encodeFloat:forKey:
encodeDouble:forKey:
encodeBool:forKey:
raise:format:
_throwForFrozenInstance
supportsSecureCoding
copyWithZone:
encodeWithCoder:
initWithCoder:
_freeze
setTopic:
setToneIdentifier:
setVibrationIdentifier:
setExternalToneFileURL:
setExternalToneMediaLibraryItemIdentifier:
setExternalVibrationPattern:
setExternalVibrationPatternFileURL:
setAudioCategory:
setAudioVolume:
setForPreview:
setMaximumDuration:
setShouldRepeat:
setShouldIgnoreRingerSwitch:
_hasCustomAudioVolume
type
topic
vibrationIdentifier
externalToneFileURL
externalToneMediaLibraryItemIdentifier
externalVibrationPattern
externalVibrationPatternFileURL
audioCategory
audioVolume
isForPreview
maximumDuration
shouldRepeat
shouldIgnoreRingerSwitch
_isFrozen
_hasCustomRepeatingFlag
_forPreview
_shouldRepeat
_shouldIgnoreRingerSwitch
_type
_topic
_toneIdentifier
_vibrationIdentifier
_externalToneFileURL
_externalVibrationPattern
_externalVibrationPatternFileURL
_audioCategory
_audioVolume
_externalToneMediaLibraryItemIdentifier
_maximumDuration
_identifierForPropertyListRepresentation:
albumTitle
artistName
genreName
storeItemIdentifier
duration
isRingtone
initWithFormat:
initWithToneStoreDownload:
storeFrontIdentifier
isPurchased
artworkFile
isProtectedContent
isPrivateTone
fadeInDurationNumber
fadeOutDurationNumber
_purchased
_ringtone
_protectedContent
_privateTone
_identifier
_albumTitle
_artistName
_genreName
_filePath
_syncIdentifier
_storeFrontIdentifier
_artworkFile
_fadeInDurationNumber
_fadeOutDurationNumber
_storeItemIdentifier
_duration
boolValue
unsignedLongLongValue
unsignedIntegerValue
isEqualToNumber:
_soundID
_shouldDisposeOfSoundID
_soundFileURL
playAlertForType:
alertWithConfiguration:
playWithCompletionHandler:
initWithType:accountIdentifier:
initWithType:toneIdentifier:vibrationIdentifier:
playWithCompletionHandler:targetQueue:
playToneAndVibrationForType:
_actualSoundID
_previewSoundID
_actualSound
_previewSound
currentToneIdentifierForAlertType:accountIdentifier:
setCurrentToneIdentifier:forAlertType:accountIdentifier:
_currentToneWatchAlertPolicyForAlertType:accountIdentifier:
_setCurrentToneWatchAlertPolicy:forAlertType:accountIdentifier:
setDownloadKinds:
setPrefetchedDownloadExternalProperties:
setPrefetchedDownloadProperties:
setShouldFilterExternalOriginatedDownloads:
initWithManagerOptions:
addObserver:
mainBundle
initWithManagerIdentifier:
setDelegate:
_updateStoreAccountName
_performBlockOnAccessQueue:
_handleAccountStoreDidChangeNotification:
defaultStore
addObserver:selector:name:object:
_handleToneManagerContentsDidChangeNotification:
removeObserver:
removeObserver:name:object:
_assertRunningOnAccessQueue
activeAccount
accountName
_notifyObserversOfUpdatedStoreAccountName:
weakObjectsHashTable
removeObject:
allObjects
storeAccountNameDidChange:
didFinishCheckingForAvailableToneStoreDownloads:
toneStoreDownloadsDidStart:
toneStoreDownloadsDidProgress:
toneStoreDownloadsDidFinish:
_openToneStoreWithStoreItemKind:
sharedApplication
openURL:options:completionHandler:
setAllowedToneStyles:
setCreatesDownloads:
setValue:forDownloadProperty:
initWithURLRequest:
setURLBagKey:
setRequestProperties:
addPurchases:withCompletionBlock:
persistentIdentifier
numberWithLongLong:
downloadPhaseIdentifier
percentComplete
_setDownloadProgress:
_notifyObserversOfStartedToneStoreDownloads:progressedToneStoreDownload:finishedToneStoreDownloads:
URLResponse
storeCorrelationID
downloadsMetadata
kind
setKind:
title
_setName:
collectionName
_setAlbumTitle:
_setArtistName:
durationInMilliseconds
_setDuration:
genre
_setGenreName:
itemIdentifier
_setStoreItemIdentifier:
_setRingtone:
indexOfObject:
objectAtIndex:
initWithDownloadMetadata:
setValue:forProperty:
_notifyObserversOfCheckingForDownloadsFinishedWithoutNeedToIssueAnyDownload
addEntriesFromDictionary:
addDownloads:completionBlock:
_setToneIdentifier:
removeObjectsForKeys:
downloadManager:downloadStatesDidChange:
downloadManagerActiveDownloadsDidChange:
downloadManagerDownloadsDidChange:
downloadManagerNetworkUsageDidChange:
purchaseManager:didFinishPurchasesWithResponses:
openAlertToneStore
openRingtoneStore
redownloadAllTones
storeAccountName
_accessQueueLabel
_observers
_storeAccountName
_toneStoreDownloadsByStoreDownloadPersistentIdentifiers
_storeDownloadManager
_storePurchaseManager
isMainThread
_initWithSpecialBehaviors:
_handleVibrationPreferencesDidChangeNotificationForPreferencesKinds:atInitiativeOfVibrationManager:
_handleVibrateOnRingOrSilentDidChangeNotification
_isUnitTestingModeEnabled
refresh
_userGeneratedVibrationPatterns
currentVibrationIdentifierForAlertType:topic:
setCurrentVibrationIdentifier:forAlertType:topic:
_systemWideVibrationPatternPreferenceKeyForAlertType:
vibrationWithIdentifierIsValid:
_defaultVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:
_currentVibrationIdentifierForAlertType:topic:
_currentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:allowsNoneDefaultToAnyActualVibrationSubstitution:
_currentVibrationWatchAlertPolicyForAlertType:topic:
_currentVibrationIdentifierForAlertType:topic:correspondingToneIdentifier:
_didSetVibrationPreferenceSuccessfullyWithKey:inDomain:usingPreferencesOfKind:
currentVibrationIdentifierForAlertType:
nameOfVibrationWithIdentifier:
patternForVibrationWithIdentifier:repeating:
_patternForSystemVibrationWithIdentifier:shouldLogAssetPath:
_systemVibrationIdentifiersForSubdirectory:
defaultVibrationIdentifierForAlertType:
noneVibrationPattern
propertyListRepresentation
sharedCapabilitiesManager
deviceCodeName
fileExistsAtPath:isDirectory:
simplifiedDeviceCodeName
_completeSystemVibrationsSubdirectoryForSubdirectory:
pathsForResourcesOfType:inDirectory:
URLForResource:withExtension:subdirectory:
dictionaryWithContentsOfURL:
_localizedNameForVibrationWithIdentifier:
patternForVibrationWithIdentifier:
_nameOfVibrationWithIdentifier:
initWithPropertyListRepresentation:
_artificiallyRepeatingPropertyListRepresentation
_retrieveUserGeneratedVibrationPatternsUsingService
_handleUserGeneratedVibrationsDidChangeNotification
_setUserGeneratedVibrationPatternsUsingService:error:
_didChangeUserGeneratedVibrationPatterns
initWithDictionary:
_saveUserGeneratedVibrationPatterns:error:
_removeAllUserGeneratedVibrationPatternsUsingServiceWithError:
shouldVibrateOnRing
sharedAVSystemController
getVibeIntensity:
_currentVibrationWatchAlertPolicyForAlertType:topic:didFindPersistedWatchAlertPolicy:
_currentVibrationWatchAlertPolicyPreferenceKeyForAlertType:topic:
_setCurrentVibrationWatchAlertPolicy:forAlertType:topic:
sharedVibrationManager
setAllowsAutoRefresh:
setCurrentVibrationIdentifier:forAlertType:
currentVibrationNameForAlertType:
currentVibrationPatternForAlertType:
defaultVibrationNameForAlertType:
defaultVibrationPatternForAlertType:
noneVibrationName
allUserSelectableSystemVibrationIdentifiers
allUserGeneratedVibrationIdentifiers
_vibrationIsSettableForAlertType:
addUserGeneratedVibrationPattern:name:error:
setName:forUserGeneratedVibrationWithIdentifier:error:
deleteUserGeneratedVibrationPatternWithIdentifier:error:
_numberOfUserGeneratedVibrations
_removeAllUserGeneratedVibrationsWithError:
shouldVibrateForCurrentRingerSwitchState
shouldVibrateOnSilent
_currentVibrationWatchAlertPolicyForAlertType:
_setCurrentVibrationWatchAlertPolicy:forAlertType:
needsRefresh
allowsAutoRefresh
_specialBehaviors
_cachedSystemVibrationIdentifiers
_cachedSystemVibrationCompleteSubdirectories
_cachedUserGeneratedVibrationPatterns
_needsRefresh
_allowsAutoRefresh
fadeOutDuration
setFadeOutDuration:
shouldWaitUntilEndOfCurrentRepetition
setShouldWaitUntilEndOfCurrentRepetition:
_shouldWaitUntilEndOfCurrentRepetition
_fadeOutDuration
playbackBackEnd
setPlaybackBackEnd:
timeoutTimerSource
setTimeoutTimerSource:
isBeingInterrupted
setBeingInterrupted:
_beingInterrupted
_playbackBackEnd
_timeoutTimerSource
floatValue
numberWithFloat:
numberWithInt:
_initWithPropertyListRepresentation:skipValidation:
dictionaryWithDictionary:
_computedDuration
intValue
simpleVibrationPatternWithVibrationDuration:pauseDuration:
complexVibrationPatternWithDurationsForVibrationsAndPauses:
appendVibrationComponentWithDuration:isPause:
contextObject
setContextObject:
_propertyListRepresentation
_complexPatternDescription
_contextObject
objCType
currentThread
threadDictionary
_performSynchronousBlockInSerialQueue:
performAsynchronousBlock:
label
_threadLocalStorageKey
_serialQueue
_label
initWithKeyOptions:valueOptions:capacity:
_prepareForDealloc
_stopPlayingAlerts:withOptions:playbackCompletionType:completionHandler:
_playAlert:withCompletionHandler:
_toneIdentifierForDeemphasizingAlert:
playbackObserver
setCompletionHandler:
setPlaybackCompletionType:
setToneIdentifierForDeemphasizingAlert:
setPlaybackCompletionContext:
setPlaybackObserver:
_beginRequiringBacklightObservation
_soundForAlert:toneIdentifierForDeemphasizingAlert:
_reportPlaybackFailureWithPlaybackCompletionContext:
_notifyOfPlaybackCompletionWithContext:
setSound:
setDeemphasized:
_willBeginPlayingAlert:withSoundID:
_playAlert:withSoundID:
_optionsForSystemSoundAlert:
_didCompletePlaybackForAlert:
hasPlaybackStarted
setHasPlaybackStarted:
alertDidBeginPlaying:
isBeingDeemphasized
setBeingDeemphasized:
playbackCompletionContext
sound
configuration
hasVibratorCapability
_soundBehaviorForAlert:
numberWithUnsignedLong:
_componentSuppressionFlagsForAlert:
_descriptionForAlertComponentsSuppressionFlags:
_vibrationPatternForAlert:
toneIdentifierForDeemphasizingAlert
_endRequiringBacklightObservation
completionHandler
playbackCompletionType
error
setError:
sharedBacklight
isDeemphasized
backlightStatusDidChange:
playAlert:withCompletionHandler:
stopPlayingAlerts:withOptions:playbackCompletionType:completionHandler:
handleActivationAssertionStatusChangeForAlert:updatedStatus:
updateAudioVolumeDynamicallyForAlert:toValue:
_alertSystemSoundContexts
_backlightStatus
_backlightObservationRequestsCount
currentVibrationIdentifierForAlertType:accountIdentifier:
setCurrentVibrationIdentifier:forAlertType:accountIdentifier:
_currentVibrationWatchAlertPolicyForAlertType:accountIdentifier:
_setCurrentVibrationWatchAlertPolicy:forAlertType:accountIdentifier:
_completionHandler
_playbackCompletionType
_error
downloadProgress
_isRingtone
_downloadProgress
tracks
assetTrack
mediaType
tl_hapticPlayerItemTrack
initWithFormat:arguments:
errorWithDomain:code:userInfo:
userInfo
_handleStoreAvailableItemKindsChangedNotification:
_checkRingtoneStoreAvailability
_hasTelephonyCapability
currentDevice
_updateRingtoneStoreAvailabilityWithAvailableKinds:error:
getAvailableItemKindsWithBlock:
hasSuffix:
isRingtoneStoreAvailable
isAlertToneStoreAvailable
hasUserGeneratedVibrationsCapability
_isRingtoneStoreAvailable
_isAlertToneStoreAvailable
_deviceCodeNameSimplicationMapping
_hasPlaybackStarted
_beingDeemphasized
_deemphasized
_sound
_playbackCompletionContext
_playbackObserver
_toneIdentifierForDeemphasizingAlert
_relinquish
_acquire
sharedAlertController
initWithAlert:
acquire
relinquish
_alert
_activeAcquisitionCount
_statusCode
_notifyObservers:ofUpdatedBacklightStatus:
sharedInstance
_setBacklightStatus:
_setObservingBacklight:
_assertNotRunningOnAccessQueue
backlightDidChange:from:to:
backlightDidTurnOn:forReason:
backlightDidTurnOff:forReason:
backlightStatus
_isObservingBacklight
_initWithConfiguration:toneIdentifier:vibrationIdentifier:
stopWithOptions:
stopAllAlerts
_descriptionForDebugging:
_setWatchPrefersSalientToneAndVibration:
_stopAllAlerts
play
stop
_updateAudioVolumeDynamicallyToValue:
_instanceIndex
_configuration
_stopAllAlertsInCurrentProcess
_prepareForPlayingAlert:
_didCompletePlaybackOfAlert:
_playbackBackEndForAlert:
_controllerForPlaybackBackEnd:
_didReachTimeoutForAlert:
numberWithInteger:
integerValue
_queuePlayerController
_systemSoundController
_shouldStopAlertForUserInterruption:
_alertContexts
_destroyQueuePlayer
_performBlockOnAudioEventQueue:
_updateAudioVolumeDynamicallyForAlert:toValue:
_handleActivationAssertionStatusChangeForAlert:updatedStatus:
_assertRunningOnAudioEventQueue
_beginPreventingAudioSessionDeactivation
_stopPlayback
_didCompletePlaybackWithCompletionType:error:
_reloadPlaybackForPlayingAlertWithToneIdentifier:
_endPreventingAudioSessionDeactivation
endBackgroundTask:
beginBackgroundTaskWithName:expirationHandler:
_stopPlaybackWithOptions:playerWasAlreadyPausedExternally:
_audioCategoryForAlert:
getVolume:forCategory:
setVolumeTo:forCategory:
_restoreAudioEnvironment
_prepareAudioEnvironment
_propertyKeysOfInterestForToneAssets
statusOfValueForKey:error:
status
_createQueuePlayerIfNecessary
_startPlaybackForAssetWithLoadedProperties:alert:
loadValuesAsynchronouslyForKeys:completionHandler:
_fallbackToneIdentifierForPlayingAlert
_canPlayToneAsset:
_startPlaybackForPlayingAlertUsingConfirmedPlayableAsset:
_stopObservingQueuePlayer
removeAllItems
_willBeginPlayingAlert
_startPlaybackForPlayingAlertUsingConfirmedPlayableAsset:isFullyReady:
_shouldVibrateForAlert:
playerItemWithAsset:
insertItem:afterItem:
_startObservingQueuePlayer
vibrationPattern
setVibrationPattern:
setRate:withVolumeRampDuration:
pause
_didEndPlayingAlert
category
categoryOptions
setCategory:withOptions:error:
_audioVolumeForAlert:audioCategory:
_celestialAudioCategoryForAudioSessionCategory:
_activateAudioSessionIfNeeded
_deactivateAudioSessionIfNeeded
_setClientPriority:
_clientNameForAlert:
_clientPriorityForAlert:
_clientName
_clientPriority
initWithDispatchQueue:
setAllowsExternalPlayback:
_setClientName:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
_queuePlayer:currentItemWasUpdatedFromValue:
_queuePlayer:currentItemStatusWasUpdatedToValue:
observeValueForKeyPath:ofObject:change:context:
seekToTime:completionHandler:
items
currentItem
code
processInfo
processName
_shouldHandleAudioSessionActivationForAlert:
setActive:error:
_startObservingAudioSessionInterruptionNotifications
_stopObservingAudioSessionInterruptionNotifications
setActive:withOptions:error:
_handleAudioSessionInterruptionNotification:
_handleAudioSessionInterruptionOfType:withOptions:
_shouldBypassRingerSwitchPolicyForAlert:
_audioEventQueue
_audioEventQueueLabel
_isObservingQueuePlayer
_queuePlayer
_playingAlert
_playingToneIdentifier
_playingAlertCompletionHandler
_toneAssetForPendingPlayingAlert
_isAudioEnvironmentSetup
_isAlertActivationAssertionAcquired
_alertForAudioEnvironmentSetup
_previousAudioCategory
_previousAudioCategoryOptions
_isAudioSessionActive
_audioSessionDeactivationPreventionRequestsCount
_isObservingAudioSessionInterruptionNotification
localizedStringForKey:value:table:
%{public}@: Skipping import of tone %{public}@ because it's a duplicate of the following existing tone: %{public}@.
%{public}@: Connected newly imported tone %{public}@ to old duplicate's metadata %{public}@ because its asset is missing at %{public}@.
%{public}@: Proceeding to import tone %{public}@ despite finding duplicate %{public}@ because they don't appear to be listed in the same manifest.
%{public}@: Could not update ringtones plist
%{public}@: Successfully removed %{public}lu items from store download file manifest.
%{public}@: Failed to remove %{public}lu items from store download file manifest. Invalid paths: %{public}@.
Unable to create file lock.
Unable to take file lock.
Unexpected error while retrieving current tone preferences: %{public}@.
Failed retrieving current tone preferences: %{public}@.
Unexpected error trying to set a tone preference: %{public}@.
Failed setting a tone preference: %{public}@.
currentToneIdentifierForAlertType:%{public}@ topic:@"%{public}@" ==> %{public}@
currentToneIdentifierForAlertType:%{public}@ ==> %{public}@
setCurrentToneIdentifier:@"%{public}@" forAlertType:%{public}@ topic:@"%{public}@"
setCurrentToneIdentifier:@"%{public}@" forAlertType:%{public}@
_soundForToneIdentifier %{public}@ ==> %{public}@
filePathForToneIdentifier: %{public}@ ==> %{public}@
toneWithIdentifierIsValid %{public}@ ==> %{public}@
Failed to update watch alert policy for alert type %{public}@ because it is not settable.
Failed to create directory at path: %{public}@. %{public}@.
*** Assertion failure in %{private}s, %{private}@:%{private}lu.
%{private}@
*** Assertion failure.
Pointers of validation block can't be NULL.
%{public}@: -dealloc. AudioServicesDisposeSystemSoundID for soundID = %{public}lu returned %{public}ld.
%{public}@: -soundID. AudioServicesCreateSystemSoundIDWithOptions for URL %{public}@ produced soundID = %{public}lu and returned %{public}ld.
Issuing store purchase for tones.
Store purchase did complete successfully for tones.
Failed to add store purchase for tones with error: %{public}@.
Did finish store purchase with correlation key: %{public}@.
Store download metadata %{public}@ of tone was found to be a duplicate of the following upcoming tone download: %{public}@. This tone will not be re-downloaded.
Store download metadata %{public}@ of tone was found to be a duplicate of the following existing tone: %{public}@. This tone will not be re-downloaded.
Issuing store download for %{public}@: %{public}@ (based on %{public}@).
Adding %{public}lu tone store downloads.
Failed to add store downloads for tones with error: %{public}@.
Successfully added store downloads for tones.
No previously purchased tone needs to be redownloaded. We're done here.
Expected to be running in access queue.
The minimum value of TLAlertType is expected to be TLAlertTypeNone, i.e. 0. Instead, it was: %{public}ld
The maximum value of TLAlertType is expected to be %{public}ld; instead, it was %{public}ld. You probably forgot to update the definition of _TLAlertTypeMaximumAllowedValue in TLAlertType_Internal.h.
TLAlertType values are expected to be subsequent integer values.
Found no living vibration managers while deallocating %{public}p.
Looking up system vibrations for subdirectory %{public}@ at absolute path: %{public}@.
Using "none" vibration pattern for vibration identifier "%{public}@"
Vibration pattern for identifier "%{public}@" found at path: %{public}@.
Unexpected error while retrieving user generated vibration patterns: %{public}@.
Failed retrieving user generated vibration patterns: %{public}@.
Unexpected error while setting user generated vibration patterns: %{public}@.
Failed setting user generated vibration patterns with error: %{public}@.
Unexpected error while removing user generated vibration patterns: %{public}@.
Failed removing user generated vibration patterns with error: %{public}@.
Queried vibeIntensity from %{public}@. Success: %{public}s; vibeIntensity: %{public}f.
%{public}@: _playAlert:(%{public}@). Deemphasizing this alert is allowed but the backlight status is unknown. Deferring until the backlight status is known.
%{public}@: _playAlert:(%{public}@). Sound: %{public}@.
%{public}@: _playAlert:(%{public}@). Calling AudioServicesPlaySystemSoundWithOptions for soundID: %{public}lu.
%{public}@: _playAlert:(%{public}@). Running completion block for AudioServicesPlaySystemSoundWithOptions for soundID: %{public}lu.
%{public}@: _stopPlayingAlerts:. playbackCompletionType: %{public}@. Calling AudioServicesStopSystemSound for soundID: %{public}lu with inStopNow = %{public}s for alert %{public}@.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionBehaviorKey => %{public}lu.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionFlagsKey => %{public}@.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionVibrationPatternKey => non-nil.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionLoopKey => true.
%{public}@: +_optionsForSystemSoundAlert:(%{public}@). kAudioServicesPlaySystemSoundOptionIgnoreRingerSwitchKey => true.
%{public}@: _didCompletePlaybackForAlert:(%{public}@). About to begin playing deemphasized sound: %{public}@.
%{public}@: -_beginRequiringBacklightObservation.
Unbalanced calls to -_beginRequiringBacklightObservation and -_endRequiringBacklightObservation.
%{public}@: -_endRequiringBacklightObservation.
%{public}@: backlightStatusDidChange:(%{public}@). Backlight was turned on. Deemphasizing: %{public}@.
%{public}@: backlightStatusDidChange:(%{public}@). About to begin playing alert %{public}@ with sound: %{public}@.
%{public}@: -acquire.
%{public}@: -relinquish.
%{public}@: was acquired.
%{public}@: was relinquished.
%{public}@: begin observing Carousel backlight.
%{public}@: end observing Carousel backlight.
%{public}@: Carousel backlight state did change: %{public}@.
Expected not to be running in access queue.
Nothing to be played for alert configuration: %{public}@. Returning a nil alert.
%{public}@: -_playAlert:(%{public}@).
API misuse.
%{public}@: -_stopPlayingAlerts:(<%{public}lu alerts>) playbackCompletionType:(%{public}@).
%{public}@: -_stopPlayingAlerts:(<%{public}lu alerts>) playbackCompletionType:(%{public}@). Ended background task with name: "%{public}@"; identifier: %{public}lu.
%{public}@: -_stopPlayingAlerts:(<%{public}lu alerts>) playbackCompletionType:(%{public}@). Began background task with name: "%{public}@"; identifier: %{public}lu.
%{public}@: -_stopPlayingAlerts:(<%{public}lu alerts>) playbackCompletionType:(%{public}@). %{public}@ is playing. Interrupting it.
%{public}@: -_stopPlayingAlerts:(<%{public}lu alerts>) playbackCompletionType:(%{public}@). %{public}@ is NOT playing. Skipping it.
%{public}@: -_updateAudioVolumeDynamicallyForAlert. Adjusted volume on %{public}@ for celestial audio category %{public}@ to %{public}f for %{public}@; did succeed: %{public}@.
%{public}@: -_updateAudioVolumeDynamicallyForAlert. Existing volume on %{public}@ for celestial audio category %{public}@ matches requested volume %{public}f for %{public}@.
%{public}@: -_updateAudioVolumeDynamicallyForAlert. This is unsupported for alerts that do not use the alarm audio category: %{public}@. Please file a radar if you need this functionality.
%{public}@: -_handleActivationAssertionStatusChangeForAlert:(%{public}@) updatedStatus:(%{public}@).
%{public}@: -_canPlayToneAsset:(%{public}@). Can't play tone asset because property %{public}@ is not loaded.
%{public}@: -_canPlayToneAsset:(%{public}@). Can't play tone asset because its duration is too short.
%{public}@: -_canPlayToneAsset:(%{public}@). Can play!
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier:(%{public}@). [_queuePlayer status] == AVPlayerStatusFailed for %{public}@. Destroying player.
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier:(%{public}@). [toneAsset loadValuesAsynchronouslyForKeys:...] for %{public}@.
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier: did finish loading values asynchronously for %{public}@.
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier:(%{public}@). Failed to instantiate an AVURLAsset with URL: %{public}@.
%{public}@: -_reloadPlaybackForPlayingAlertWithToneIdentifier:(%{public}@). Failed to prepare tone asset for playback. Aborting.
%{public}@: -_startPlaybackForPlayingAlertUsingConfirmedPlayableAsset:(%{public}@). [_queuePlayer removeAllItems] on %{public}@ before initiating playback.
%{public}@: -_startPlaybackForPlayingAlertUsingConfirmedPlayableAsset:(%{public}@). inserting %{public}lu player items into %{public}@ for tone asset: %{public}@.
%{public}@: -_startPlaybackForPlayingAlertUsingConfirmedPlayableAsset:(%{public}@). (iteration #%{public}lu) failed to create AVPlayerItem for tone asset: %{public}@.
%{public}@: -_startPlaybackForPlayingAlertUsingConfirmedPlayableAsset:(%{public}@). Failed to wrap external vibration pattern as an instance of TLVibrationPattern. Falling back to passing the external vibration pattern through.
Vibration pattern on the _queuePlayer was expected to be nil at this point.
%{public}@: -_startPlaybackForPlayingAlertUsingConfirmedPlayableAsset:(%{public}@). Leaving [_queuePlayer vibrationPattern] as nil on player %{public}@ because the vibration identifier is %{public}@.
%{public}@: -_startPlaybackForPlayingAlertUsingConfirmedPlayableAsset:(%{public}@). [_queuePlayer setVibrationPattern:vibrationPattern] on player %{public}@ with a non-nil pattern.
%{public}@: -_startPlaybackForPlayingAlertUsingConfirmedPlayableAsset:(%{public}@). [_queuePlayer play] on %{public}@.
%{public}@: -_stopPlaybackWithOptions. [_queuePlayer setRate:withVolumeRampDuration:] with fadeOutDuration %{public}f for %{public}@.
%{public}@: -_stopPlaybackWithOptions. [_queuePlayer pause] for %{public}@.
%{public}@: -_stopPlaybackWithOptions. playerWasAlreadyPausedExternally = YES for %{public}@.
%{public}@: -_stopPlaybackWithOptions. [_queuePlayer removeAllItems] for %{public}@.
%{public}@: -_stopPlaybackWithOptions. [_queuePlayer setVibrationPattern:nil] for %{public}@.
%{public}@: -_willBeginPlayingAlert.
%{public}@: -_willBeginPlayingAlert. Alert activation assertion acquired for %{public}@. Skipping audio environment preparation steps for %{public}@.
%{public}@: -_didEndPlayingAlert.
%{public}@: -_didEndPlayingAlert. Alert activation assertion acquired for %{public}@. Skipping audio environment restoration steps for %{public}@.
%{public}@: -_prepareAudioEnvironment. _alertForAudioEnvironmentSetup = %{public}@
%{public}@: -_prepareAudioEnvironment. Successfully set audio category to %{public}@ for %{public}@.
%{public}@: -_prepareAudioEnvironment. Failed setting audio category to %{public}@ for %{public}@ with error: %{public}@.
%{public}@: -_prepareAudioEnvironment. Failed reverting audio category back to %{public}@ with options 0x%{public}x with error: %{public}@.
%{public}@: -_prepareAudioEnvironment. Successfully reverted audio category back to %{public}@ with options 0x%{public}x.
%{public}@: -_prepareAudioEnvironment. Adjusted volume on %{public}@ for celestial audio category %{public}@ to %{public}f for %{public}@; did succeed: %{public}@.
%{public}@: -_prepareAudioEnvironment. Existing volume on %{public}@ for celestial audio category %{public}@ matches requested volume %{public}f for %{public}@.
%{public}@: -_restoreAudioEnvironment.
%{public}@: -_restoreAudioEnvironment. Successfully reverted audio category back to %{public}@ with options 0x%{public}x.
%{public}@: -_restoreAudioEnvironment. Failed reverting audio category back to %{public}@ with options 0x%{public}x with error: %{public}@.
%{public}@: -_restoreAudioEnvironment. Reset client priority to %{public}ld on %{public}@ for %{public}@.
%{public}@: -_createQueuePlayerIfNecessary. clientName = %{public}@. clientPriority = %{public}ld.
%{public}@: -_createQueuePlayerIfNecessary. Client name or priority don't match those of %{public}@. Destroying it.
%{public}@: -_createQueuePlayerIfNecessary. Created queue player: %{public}@.
%{public}@: -_destroyQueuePlayer. Tossing queue player: %{public}@.
%{public}@: -_startObservingQueuePlayer: %{public}@.
%{public}@: -_stopObservingQueuePlayer: %{public}@.
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. [removedItem seekToTime:kCMTimeZero completionHandler:NULL].
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. The queue was exhausted prematurely; this can happen if the ringtone asset contains corrupted audio data. Start over with default tone.
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. Playback of non repeating tone completed by playing to end.
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. Re-inserting that same item again.
%{public}@: currentItemWasUpdatedFromValue:(%{public}@) for %{public}@. [_queuePlayer status] == AVPlayerStatusFailed.
%{public}@: currentItemStatusWasUpdatedToValue:(%{public}ld) for %{public}@. itemStatus == AVPlayerItemStatusFailed. currentItemErrorCode: %{public}ld.
%{public}@: currentItemStatusWasUpdatedToValue:(%{public}ld) for %{public}@. Tone could not be prepared for playback. Start over with fallback tone.
%{public}@: -_audioVolumeForAlert:. Did retrieve ringer volume successfully for fallback volume value for alert %{public}@: %{public}f.
%{public}@: -_audioVolumeForAlert:. Failed to retrieve ringer volume for fallback volume value for alert %{public}@. Using default value instead: %{public}f.
%{public}@: -_activateAudioSessionIfNeeded. Successfully activated audio session for %{public}@.
%{public}@: -_activateAudioSessionIfNeeded. Failed activating audio session for %{public}@ with error: %{public}@.
%{public}@: -_deactivateAudioSessionIfNeeded. Skipping audio session deactivation because it is currently being prevented.
%{public}@: -_deactivateAudioSessionIfNeeded. About to deactivate audio session for %{public}@.
%{public}@: -_deactivateAudioSessionIfNeeded. Successfully deactivated audio session for %{public}@.
%{public}@: -_deactivateAudioSessionIfNeeded. Failed to deactivate audio session for %{public}@ with error: %{public}@.
%{public}@: -_startObservingAudioSessionInterruptionNotifications. Started observing interruptions for %{public}@.
%{public}@: -_stopObservingAudioSessionInterruptionNotifications. Stopped observing interruptions for %{public}@.
%{public}@: -_handleAudioSessionInterruption. Handling interruption of type: AVAudioSessionInterruptionTypeBegan. Resetting state and marking %{public}@ as interrupted by the system.
%{public}@: -_beginPreventingAudioSessionDeactivation.
Unbalanced calls to -_beginPreventingAudioSessionDeactivation and -_endPreventingAudioSessionDeactivation.
%{public}@: -_endPreventingAudioSessionDeactivation.
%{public}@: -_endPreventingAudioSessionDeactivation. No alert was playing, calling -_deactivateAudioSessionIfNeeded.
%{public}@: Failed to prepare default tone for alert type %{public}@ for playback. All possible fallback cases have been exhausted. Bailing.
TLServiceAgentInterface
NSObject
TLToneManager
TLSystemApplication
TLPreferencesUtilities
TLVibrationPersistenceUtilities
TLAlertConfiguration
NSCopying
NSSecureCoding
NSCoding
TLITunesTone
TLSystemSound
Deprecated
TLAlertTone
Deprecated_Private
TLToneStoreDownloadStoreServicesController
SSDownloadManagerObserver
SSPurchaseManagerDelegate
TLToneStoreDownloadController
TLVibrationManager
TLAlertStoppingOptions
TLAlertContext
TLVibrationPattern
TLAccessQueue
TLAlertSystemSoundController
TLBacklightObserver
TLAlertPlaybackBackEndController
TLAlertPlaybackCompletionContext
TLToneStoreDownload
TLExtensions
TLCapabilitiesManager
TLAlertSystemSoundContext
TLAlertActivationAssertion
TLToneImportResponse
TLBacklight
CSLSBacklightObserver
TLAlert
TLAlertController
TLAlertQueuePlayerController
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v12@0:4@?8
v24@0:4@8@12@16@?20
v16@0:4@8@?12
v12@0:4@?<v@?@"NSDictionary"@"NSError">8
v24@0:4@"NSString"8@"NSString"12@"NSString"16@?<v@?B@"NSError">20
v16@0:4@"NSDictionary"8@?<v@?B@"NSError">12
v12@0:4@?<v@?B@"NSError">8
@12@0:4i8
@16@0:4i8@12
B16@0:4@8B12
@12@0:4@8
v8@0:4
v12@0:4@8
@16@0:4@8@12
Q8@0:4
@24@0:4@8@12@16@20
@24@0:4@8@12@16B20
B16@0:4@8@12
B28@0:4@8@12B16B20^@24
i12@0:4@8
B20@0:4@8@12@16
v16@0:4@8i12
v20@0:4@8i12@16
L12@0:4i8
L16@0:4i8@12
@16@0:4@8^B12
v20@0:4@8@12@?16
i20@0:4B8^@12^B16
i12@0:4^@8
i12@0:4i8
i16@0:4i8@12
i20@0:4i8@12^B16
v16@0:4i8i12
v20@0:4i8i12@16
v12@0:4B8
v20@0:4@8@12I16
v12@0:4I8
@"TLAccessQueue"
@"NSDictionary"
@"NPSDomainAccessor"
@"NSString"
^{__CFString=}8@0:4
^{__CFString=}12@0:4^{__CFString=}8
v28@0:4^{__CFString=}8r^@12L16@20i24
@16@0:4r^@8L12
v24@0:4@8^{__CFString=}12i16@?20
^{__CFDictionary=}16@0:4^{__CFString=}8i12
v24@0:4^v8^{__CFString=}12^{__CFString=}16i20
v16@0:4^{__CFString=}8i12
B16@0:4^@8@?12
B16@0:4@8^@12
@12@0:4^{_NSZone=}8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
v16@0:4Q8
v12@0:4f8
v16@0:4d8
i8@0:4
f8@0:4
d8@0:4
@"NSURL"
@"NSNumber"
@16@0:4@8L12
L8@0:4
@20@0:4i8@12@16
B16@0:4@?8@12
v12@0:4i8
@20@0:4@8L12L16
@"TLSystemSound"
v16@0:4@8@12
v16@0:4@"SSDownloadManager"8@"NSArray"12
v12@0:4@"SSDownloadManager"8
v16@0:4@"SSPurchaseManager"8@"NSArray"12
v12@0:4@"<TLToneStoreDownloadObserver>"8
v20@0:4@8@12@16
@"NSObject<OS_dispatch_queue>"
@"NSHashTable"
@"NSMutableDictionary"
@"SSDownloadManager"
@"SSPurchaseManager"
v16@0:4I8@12
@12@0:4I8
@24@0:4i8@12@16B20
@16@0:4@8B12
B12@0:4i8
@20@0:4@8@12^@16
B20@0:4@8@12^@16
B12@0:4^@8
@"NSObject<OS_dispatch_source>"
@24@0:4d8d16
@16@0:4d8
v20@0:4d8B16
@"NSMutableArray"
L12@0:4@8
@12@0:4L8
v24@0:4@8@12i16@?20
v16@0:4@8B12
v16@0:4@8f12
v16@0:4@"TLAlert"8@?<v@?i@"NSError">12
v24@0:4@"NSArray"8@"TLAlertStoppingOptions"12i16@?<v@?B>20
v16@0:4@"TLAlert"8B12
v16@0:4@"TLAlert"8f12
v16@0:4@8L12
@"NSMapTable"
@?8@0:4
@"NSError"
@"TLAlertPlaybackCompletionContext"
@"<TLAlertPlaybackObserver>"
@"TLAlert"
v20@0:4@8i12i16
v16@0:4@8I12
v20@0:4@"NSString"8i12i16
v16@0:4@"NSString"8I12
@20@0:4@8@12@16
@12@0:4B8
@"TLAlertConfiguration"
@"TLAlertQueuePlayerController"
@"TLAlertSystemSoundController"
v24@0:4@8@12@16^v20
f16@0:4@8@12
v16@0:4I8I12
v16@0:4i8@12
@"AVQueuePlayer"
@"AVAsset"
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
