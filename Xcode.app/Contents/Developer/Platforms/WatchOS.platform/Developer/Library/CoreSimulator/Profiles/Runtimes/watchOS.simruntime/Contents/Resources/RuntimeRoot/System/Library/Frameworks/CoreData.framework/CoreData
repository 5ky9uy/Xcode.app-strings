% 5'
%$5'
%(5'
%,5'
%05'
%45'
%85'
%<5'
%@5'
%D5'
%H5'
%L5'
%P5'
%T5'
%X5'
%\5'
%`5'
%d5'
%h5'
%l5'
%p5'
%t5'
%x5'
%|5'
%6'
% 6'
%$6'
%(6'
%,6'
%06'
%46'
%86'
%<6'
%@6'
%D6'
%H6'
%L6'
%P6'
%T6'
%X6'
%\6'
%`6'
%d6'
%h6'
%l6'
%p6'
%t6'
%x6'
%|6'
%7'
% 7'
%$7'
%(7'
%,7'
%07'
%47'
%87'
%<7'
%@7'
%D7'
%H7'
%L7'
%P7'
%T7'
%X7'
%\7'
%`7'
%d7'
%h7'
%l7'
%p7'
%t7'
%x7'
%|7'
%8'
% 8'
%$8'
%(8'
%,8'
%08'
%48'
%88'
%<8'
%@8'
%D8'
%H8'
%L8'
%P8'
%T8'
%X8'
%\8'
%`8'
%d8'
%h8'
%l8'
%p8'
%t8'
%x8'
%|8'
%9'
% 9'
%$9'
%(9'
%,9'
%09'
%49'
%89'
%<9'
%@9'
%D9'
%H9'
%L9'
%P9'
%T9'
%X9'
%\9'
%`9'
%d9'
%h9'
%l9'
%p9'
%t9'
%x9'
%|9'
%:'
% :'
%$:'
%(:'
%,:'
%0:'
%4:'
%8:'
%<:'
%@:'
%D:'
%H:'
%L:'
%P:'
%T:'
%X:'
%\:'
%`:'
%d:'
%h:'
%l:'
%p:'
%t:'
%x:'
%|:'
%;'
init
objectForKey:
retain
boolValue
alloc
copy
release
dealloc
description
mutableCopy
null
appendFormat:
autorelease
initFromStoreOptions:
containerIdentifier
setContainerIdentifier:
initializeSchema
setInitializeSchema:
useEncryptedStorage
setUseEncryptedStorage:
ckAssetThresholdBytes
setCkAssetThresholdBytes:
containerOptions
setContainerOptions:
_containerIdentifier
_ckAssetThresholdBytes
_useEncryptedStorage
_initializeSchema
_containerOptions
initWithRequest:context:sqlCore:
metadataToWrite
initForRequestContext:
faultHandler
hasChangesForWriting
sqlCore
model
persistentStoreRequest
rowCacheForContext:
prepareRows
setException:
rowCache
countByEnumeratingWithState:objects:count:
forgetRowForObjectID:
addObject:
context
_addObjectIDsUpdatedByTriggers:
removeAllObjects
setResult:
connection
createSetOfObjectIDsUpdatedByTriggers
clearObjectIDsUpdatedByTriggers
setConnection:
rowForObjectID:
setObject:forKey:
_mergeOldMask:andNewMask:
request
isWritingRequest
executePrologue
executeEpilogue
executeRequestCore:
originalRowForObjectID:
setOriginalRow:forObjectID:
addDataMask:forEntityKey:
dataMaskForKey:
savePlan
originalCachedRows
_metadataToWrite
_savePlan
_faultHandler
_objectIDsToPruneTrigger
_originalCachedRows
_updateMasksForHistoryTracking
stringWithFormat:
initWithGenerationTokens:
requestType
generationTokens
setGenerationTokens:
_generationTokens
class
initWithZone:mirroringOptions:recordNamePrefix:
getRecordNameForObject:
entity
zoneID
initWithRecordName:zoneID:
recordTypeForEntity:
initWithRecordType:recordID:
name
applyCDPrefixToName:
setValue:forKey:onRecord:
attributesByName
isPrivateAttribute:
isTransient
attributeType
userInfo
valueForKey:
encodeObjectValue:forTransformableAttribute:
unsignedIntegerValue
ckAssetAttributeNameForAttributeName:
length
objectID
persistentStore
generateCKAssetFileURLForObjectInStore:
writeToURL:options:error:
initWithFileURL:
stringByAppendingString:
recordID
enumerateKeysAndObjectsUsingBlock:
relationshipsByName
inverseRelationship
isToMany
mtmKeyForObjectWithRecordName:relatedToObjectWithRecordName:byRelationship:withInverse:
mirroredRelationshipForKey:
isUploaded
UUID
UUIDString
initWithRecordID:forRecordWithName:relatedToRecordName:byRelationship:withInverse:
addMirroredManyToMany:
getValuesFromRecord:
populateRecordValues:
initWithUpdatedRecords:deletedRecordTypeToRecordIDs:options:relationshipCache:
initializeCachesWithManagedObjectContext:andObservedStore:error:
modifiedRecords
recordType
hasPrefix:
getValueFromRecord:forKey:
substringFromIndex:
recordName
objectIDForRecordWithName:ofType:
objectWithID:
insertNewObjectForEntityForName:inManagedObjectContext:
registerObjectID:forInsertedRecord:
fillManagedObject:fromRecord:importContext:
deletedObjectIDs
deleteObject:
deletedRelationships
updateRelationshipValueUsingImportContext:andManagedObjectContext:error:
cloudKitSerializer:failedToUpdateRelationship:withError:
enumerateObjectsUsingBlock:
populateUnresolvedIDsWithManagedObjectContext:error:
updatedRelationships
isKindOfClass:
relCache
mirroredRelationshipForManyToMany:
setPending:deleted:uploaded:
invalidatedPendingRelationships
cloudKitSerializer:resolvedPendingRelationship:
persistentStoreCoordinator
managedObjectModel
pendingRelationshipsToTry
entitiesByName
entityName
relationshipName
relatedRecordName
relatedEntityName
arrayWithObjects:count:
ckRecordNameForOrderedRecordNames:
ckRecordTypeForOrderedRelationships:
isDeleted
mirroredRelationshipWithDeletedRecordType:recordName:andManagedObjectModel:
initWithRecordName:recordType:managedObjectModel:andType:
existingObjectWithID:error:
mirroredRelationshipWithManagedObject:withRecordName:relatedToObjectWithRecordName:byRelationship:
pendingMirroredRelationships
noteUpdateForMirroredRelationship:
performBlockAndWait:
isInserted
setValue:forKey:
allValues
decodeValue:forTransformableAttribute:
fileURL
initWithContentsOfURL:options:error:
data
addMirroredRelationshipToLink:
stringByAppendingFormat:
URLByDeletingLastPathComponent
URLByAppendingPathComponent:
_rootEntity
isEqualToString:
newSerializerForOptions:withZone:recordNamePrefix:
objectIDToCKRecordName
manyToManyRecordNameToRecord
writtenAssetURLs
newCKRecordsFromObject:fullyMaterializeRecords:
applyUpdatedRecords:deletedRecordIDs:toStore:inManagedObjectContext:error:
.cxx_destruct
zone
mirroringOptions
delegate
setDelegate:
_zone
_objectIDToCKRecordName
_manyToManyRecordNameToRecord
_recordNamePrefix
_mirroringOptions
_delegate
_writtenAssetURLs
_relCache
initWithName:code:reason:userInfo:
initWithName:reason:userInfo:
addEntriesFromDictionary:
domain
code
errorWithDomain:code:userInfo:
exceptionWithName:code:reason:userInfo:
_setDomain:
errorObjectWithUserInfo:
_code
_domain
minimalFormInContext:
minimalFormInContext:ofPredicate:
rightExpression
operatorType
leftExpression
expressionType
constantValue
isNSString__
defaultInstance
isNSArray__
isNSSet__
isNSOrderedSet__
isNSDictionary__
count
expressionForConstantValue:
comparisonPredicateModifier
options
predicateWithLeftExpression:rightExpression:modifier:type:options:
array
objectAtIndex:
isEqual:
exceptionWithName:reason:userInfo:
initWithType:subpredicates:
minimalFormInContext:ofPredicates:
isTemporaryID
predicateOperatorType
allowEvaluation
respondsToSelector:
evaluateWithObject:
dictionaryWithObject:forKey:
predicateOperator
_isForeignObjectExpression:givenContext:
initWithPredicateOperator:leftExpression:rightExpression:
subpredicates
selector
valueForKeyPath:
operand
arguments
keyPath
_newKeyPathExpressionForString:
initWithOperand:andKeyPath:
arrayWithObject:
initWithExpressionType:operand:selector:argumentArray:
_mapKVCOperatorsToFunctionsInContext:
substringWithRange:
expressionForKeyPath:
initWithObject:
componentsSeparatedByString:
removeLastObject
removeObjectAtIndex:
componentsJoinedByString:
expressionForFunction:selectorName:arguments:
expressionForFunction:arguments:
characterAtIndex:
appendString:
containsObject:
initWithObjects:
collection
predicate
variableExpression
initWithExpression:usingIteratorExpression:predicate:
managedObjectContext
_faultHandler__
retainedFulfillAggregateFaultForObject:andRelationship:withContext:
initWithSource:forRelationship:asFault:
setArray:
copyWithZone:
descriptionWithLocale:
descriptionWithLocale:indent:
willRead
enumerateObjectsWithOptions:usingBlock:
enumerateObjectsAtIndexes:options:usingBlock:
indexOfObjectWithOptions:passingTest:
indexOfObjectAtIndexes:options:passingTest:
indexesOfObjectsWithOptions:passingTest:
indexesOfObjectsAtIndexes:options:passingTest:
objectEnumerator
insertObject:atIndex:
replaceObjectAtIndex:withObject:
getObjects:
accessInstanceVariablesDirectly
allocWithZone:
retainCount
_tryRetain
_isDeallocating
isFault
turnIntoFault
source
relationship
mutableCopyWithZone:
_cd_rc
_realArray
_source
_relationship
_flags
initWithValue:
index
setIndex:
value
setValue:
tableName
setTableName:
_index
_value
_tableName
_isRelationship
deleteRule
_entitysReferenceID
willReadWithContents:
_retainedObjectWithID:optionalHandler:withInlineStorage:
unionSet:
minusSet:
_commitPhotoshoperyForRelationshipAtIndex:newValue:
initWithCapacity:
setSet:
member:
removeObject:
objectsWithOptions:passingTest:
allObjects
anyObject
intersectsSet:
isEqualToSet:
isSubsetOfSet:
makeObjectsPerformSelector:
makeObjectsPerformSelector:withObject:
addObjectsFromArray:
initWithArray:
intersectSet:
initWithSource:destinations:forRelationship:inContext:
_shouldProcessKVOChange
_isIdenticalFault:
classForCoder
replacementObjectForCoder:
classForArchiver
_realSet
_createMutationMethodsForClass:forKey:
_addObjectMethod
_removeObjectMethod
_addMethod
_removeMethod
_intersectMethod
_setMethod
migrationDebugLevel
setMigrationDebugLevel:
_resetCaches
renamingIdentifier
initWithDomain:code:userInfo:
newEntityMappingWithSource:destination:
removeObjectForKey:
mappingType
inferPropertyMappingsForEntityMapping:
setEntityMappings:
sourceEntityName
destinationEntityName
expressionForVariable:
arrayWithObjects:
expressionForFetch:context:countOnly:
setSourceExpression:
propertiesByName
_propertyType
drain
newInferredPropertyMappingWithSourceAttribute:destinationAttribute:
newInferredPropertyMappingWithSourceRelationship:destinationRelationship:
setAttributeMappings:
setRelationshipMappings:
setUserInfo:
setSourceEntityName:
versionHash
setSourceEntityVersionHash:
setName:
setDestinationEntityName:
setDestinationEntityVersionHash:
setMappingType:
isOptional
defaultValue
initWithPropertyName:valueExpression:
initWithObjects:count:
_canTransformSourceAttributeType:toDestinationAttributeType:
dictionaryWithObjectsAndKeys:
storesBinaryDataExternally
expressionForEvaluatedObject
setPrerequisiteTransform:
setReplaceMissingValueOnly:
setValueExpression:
_setPropertyTransforms:
numberWithBool:
initWithObjectsAndKeys:
_setTransformValidations:
minCount
initWithSourceModel:destinationModel:
newInferredMappingModel:
_sourceModel
_destinationModel
_currentEntityMapping
_error
initWithFormat:
initialize
createPredicateForFetchFromPredicate:withContext:
_hasIDMappings
acceptVisitor:flags:
initWithContext:
modifier
isNegation
initWithOperatorType:modifier:negate:options:
initWithOperatorType:modifier:options:
setContext:
setPredicateOperator:
createPredicateForFetchFromPredicate:
visitPredicate:
visitPredicateExpression:
_context
_mappedForParentStoreID:
replacementValueForValue:
initWithSet:copyItems:
willChangeValueForKey:withSetMutation:usingObjects:
didChangeValueForKey:withSetMutation:usingObjects:
initWithContainer:key:mutableSet:
_container
_key
_mutableSet
compare:options:range:
_caseInsensitiveNumericCompare:
_disableAutomaticTerminationWithoutSettingRelaunchable:
_enableAutomaticTerminationWithoutSettingRelaunchable:
self
setURL:forPersistentStore:
_setURL:forPersistentStore:withCoordinator:
attributeTypeForXMLInfo:
encodeObject:forKey:
numberWithUnsignedInt:
decodeObjectForKey:
unsignedIntValue
clearSectionObjectsCache
_sections
indexOfObject:
_fetchedObjects
fetchedObjects
subarrayWithRange:
indexOfObject:inRange:
indexTitle
numberOfObjects
objects
initWithController:name:indexTitle:sectionOffset:
encodeWithCoder:
initWithCoder:
setNumberOfObjects:
setSectionOffset:
sectionNumber
setController:
sectionOffset
oldSectionNumber
setOldSectionNumber:
_controller
_name
_indexTitle
_sectionOffset
_numberOfObjects
_oldSectionNumber
_sectionObjects
initWithScope:
entityDescription
dictionaryWithObjects:forKeys:count:
integerValue
initWithNestingLevel:
generateTableAlias
isSimpleKeypath:
keypathExpressionIsSafeLHSForIn:
initWithExpression:allowToMany:inScope:
setSubstitutePK:
generateSQLStringInContext:
propertyNamed:
propertyType
destinationEntity
rtreeIndexForIndexNamed:
_validateCollection:context:
firstObject
lastObject
_validateExpression:context:
_generateSQLForConstantValue:inContext:
columnName
initForIndexNamed:onEntity:properties:ranges:inScope:
_entity
_indexName
_properties
_ranges
initWithContainer:key:mutableSet:mutationMethods:
_mutationMethods
appendSQL:
sqlEntity
foreignKeyColumns
foreignEntityKeyColumns
foreignOrderKeyColumns
attributeColumns
primaryKey
subentityKey
optLockKey
_startSQL:
isConstrained
pk64
sqlType
initWithInt64:sqlType:
addBindVariable:
sqlEntityID
initWithUnsignedInt:sqlType:
optLock
slot
foreignKeyForSlot:
foreignEntityKeyForSlot:
foreignOrderKeyForSlot:
attributeValueForSlot:
attributeDescription
initWithValue:sqlType:attributeDescription:
isReflexive
correlationTableName
inverseColumnName
inverseOrderColumnName
orderColumnName
appendWhereClause:
newUpdateMaskForConstrainedValues
setOptLock:
buildWhereClauseForRow:optLock:
appendWhereClauseToSQL
initWithStatement:forAdapter:
sqlString
prepareInsertStatementWithRow:
prepareInsertStatementForRelationship:
prepareMasterReorderStatementForRelationship:
prepareMasterReorderStatementPart2ForRelationship:
prepareReorderStatementForRelationship:
prepareDeleteStatementForRelationship:
prepareConstrainedValuesUpdateStatementWithRow:
prepareUpdateStatementWithRow:originalRow:withMask:
prepareDeleteStatementWithRow:
_statement
_adapter
_sqlString
_whereClause
_selectList
clearCaches
retainedObject
clearCaches:
performAndWait:
cachedSQLiteStatement
initForConnection:
limitedStatement
unlimitedStatement
setLimitedStatement:
setUnlimitedStatement:
_limitedStatement
_unlimitedStatement
_connection
substitutionBindVariableOrder
setSubstitutionBindVariableOrder:
substitutionBindIntarrayOrder
setSubstitutionBindIntarrayOrder:
_substVarBindOrdering
_substIntarrayBindOrdering
initWithObjects:count:andFlags:
initWithObjects:count:andFlags:andContext:
concurrencyType
newArrayFromObjectIDs
indexOfObjectIdenticalTo:inRange:
methodForSelector:
_registerAsyncReferenceCallback
raise:format:
_objectsPointer
arrayFromObjectIDs
indexOfObjectIdenticalTo:
indexOfManagedObjectForObjectID:
managedObjectIDAtIndex:
getObjects:range:
_setShouldRelease:
_setShouldUseExtendedRelease:
_count
_array
_weakContext
setEntity:
setFetchBatchSize:
setIncludesPendingChanges:
setSortDescriptors:
setFetchOffset:
setHavingPredicate:
setPropertiesToGroupBy:
affectedStores
setAffectedStores:
resultType
setResultType:
includesSubentities
setIncludesSubentities:
includesPropertyValues
setIncludesPropertyValues:
returnsObjectsAsFaults
setReturnsObjectsAsFaults:
relationshipKeyPathsForPrefetching
setRelationshipKeyPathsForPrefetching:
returnsDistinctResults
setReturnsDistinctResults:
propertiesToFetch
setPropertiesToFetch:
shouldRefreshRefetchedObjects
setShouldRefreshRefetchedObjects:
_disablePersistentStoreResultCaching
_setDisablePersistentStoreResultCaching:
initWithLeftExpression:rightExpression:modifier:type:options:
setPredicate:
fetchBatchSize
setFetchLimit:
initWithPFArray:inRange:
_newSubArrayInRange:asMutable:
_internalDealloc
_processReferenceQueue:
rangeCount
rangeAtIndex:
retainedObjectAtIndex:
indexSet
addIndex:
initWithIndexesInRange:
_turnAllBatchesIntoObjects
sortedArrayUsingFunction:context:
sortedArrayUsingFunction:context:hint:
sortedArrayUsingSelector:
sortedArrayUsingComparator:
sortedArrayWithOptions:usingComparator:
filteredArrayUsingPredicate:
sortedArrayUsingDescriptors:
initWithPFArray:andRequest:andContext:
isEqualToArray:
_turnAllBatchesIntoFaults
objectsAtIndexes:
objectAtIndexedSubscript:
_pinnedObjectAtIndex:
_entryFlags
_moc
_request
_batchSize
_LRUBatches
finalize
_rehash
initWithPFArray:
_editCount
_offset
_limit
_originalArray
_updatedObjectsArray
_indicesVeneer
_replaceObject:atIndex:
_values
_sourceData
isEqualToOrderedSet:
initWithArray:andContext:
_underlyingArray
_weakmoc
setSubstitutionVariables:
executeFetchRequest:error:
stringValue
valueWithBytes:objCType:
value:withObjCType:
initWithBytes:objCType:
getValue:
objCType
charValue
unsignedCharValue
shortValue
unsignedShortValue
intValue
longValue
unsignedLongValue
longLongValue
unsignedLongLongValue
floatValue
doubleValue
attributeNamed:
predicateString
attribute
parseTriggerPredicateError:
validatePredicate:error:
createSQLStrings:
isManyToMany
isToOne
predicateWithFormat:
validateComparisonPredicate:error:
compoundPredicateType
initWithOperatorType:
symbol
isSupportedOperatorType:
relationshipNamed:
inverseOperatorSymbolForOperator:
_setHasAttributesMonitoredByTriggers:
_setHasAttributesBackedByTriggers:
_setIsBackedByTrigger:
addKeyForTriggerOnRelationship:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
hash
superclass
debugDescription
initWithObjectFromUserInfo:onAttributeNamed:onEntity:
validate:
isEqualToExtension:
insertSQLStrings
dropSQLStrings
bulkUpdateSQLStrings
toManyDecrementWhenClause
toManyIncrementWhenClause
toManyInnerFetchWhereClause
ofClause
oldMatchingClause
newMatchingClause
columnChangedClause
destinationAttributes
_predicate
_predicateString
_attribute
_destinationEntity
_destinationAttributes
_mToManyInnerFetchWhereClause
_mToManyDecrementWhenClause
_mToManyIncrementWhenClause
_mOfClause
_mOldMatchingClause
_mNewMatchingClause
_mColumnChangedClause
_mSqlDropStrings
_mBulkChangeStrings
_insertSQLStrings
_dispose
initWithWeaksReferences:
setForUseWithModel:
getAllObjects:
setCapacityHint:forSlot:
clearTemporaryIDs
_slotLimit
_objectsByTemporaryID
_objectsByPermanentObjectID
_objectsBy64bitPKID
_capacitiesFor64bitPKMappings
initWithFormat:arguments:
UTF8String
getNumActiveProcessors
getProcessorSpeed
getPhysicalMemory
initWithFunction:withArgument:andPriority:
_task
lock
condition
isFinishedFlag
bundleForClass:
mainBundle
stringByAppendingPathComponent:
bundleWithPath:
hasSuffix:
rangeOfString:
rangeOfString:options:
localizedStringForKey:value:table:
_referenceData64
identifier
numberWithUnsignedLongLong:
persistentStoreForIdentifier:
objectIDFactoryForEntity:
initWithPK64:
initWithBytes:length:
initWithInteger:
_uniquenessConstraints
_rootEntityGroupsForObjects:passingBlock:
dictionary
getCString:maxLength:encoding:
processInfo
hasExternalReferenceContent
_externalReferenceLocation
_originalData
stringWithUTF8String:
_safeguardLocation
preferredProtectionLevel
_bytesLengthForExternalReference
getBytes:range:
doCleanupOnDealloc
_safeguardLocationString
initWithContentsOfFile:options:error:
externalReferenceLocationString
defaultManager
fileExistsAtPath:
removeItemAtPath:error:
bytes
initWithBytesNoCopy:length:encoding:freeWhenDone:
valueTransformerName
valueTransformerForName:
transformedValue:
reverseTransformedValue:
initWithOrderedSet:
newCollection:fromCollection:byAddingItems:
_newCollectionFromCollection:forParentContext:andClass:
newOrderedSetFromCollection:byRemovingItems:
newMutableOrderedSetFromCollection:
newOrderedSetFromCollection:byAddingItems:
indexSetWithIndexesInRange:
replaceObjectsAtIndexes:withObjects:
removeObjectsAtIndexes:
insertObjects:atIndexes:
caseInsensitiveCompare:
createDictionaryPartitioningObjectsByRootEntity:
_createDictionaryPartitioningObjects:intoHierarchies:
superentity
isUbiquitousItemAtURL:
getResourceValue:forKey:error:
_generateObjectIDMaptableForArray:withMapping:andEntries:
_newObjectIDsArrayWithMapping:andEntries:andCoordinator:
_frameworkHash
_getPFBundleVersionNumber
_groupObjectsByRootEntity:
_coalescedPrefetchKeypaths:
_generateHashForString:
_getUUID
_doNameAndTypeCheck:
convertCString:toUnsignedInt64:withBase:
valueForProcessArgument:
writePFExternalReferenceDataToInterimFile:
moveInterimFileToPermanentLocation:
readExternalReferenceDataFromFile:
readBytesForExternalReferenceData:intoBuffer:range:
newMappedDataForExternalReference:
lengthOfFileAtExternalReferenceLocation:
deleteFileForPFExternalReferenceData:
createExternalReferenceLinkFromPath:toPath:protectionLevel:
cleanupExternalReferenceLink:
attemptToUpdatePermissionsForFileAtPath:toLevel:
setOrRemoveValue:forKey:inDictionary:
_createNicksBase64EncodedStringFromData:
getIndexes:fromCollection:forObjectsInCollection:
newOrderedSetFromCollection:
anyObjectFromCollection:
newArrayOfObjectIDsFromCollection:
newSetOfObjectIDsFromCollection:
newOrderedSetOfObjectIDsFromCollection:
_objectsInOrderedCollection:formSubstringInOrderedCollection:
newOrderedSetFromCollection:byInsertingItems:atIndex:
newSetFromCollection:byAddingItems:
newMutableSetFromCollection:byRemovingItems:
newMutableSetFromCollection:byIntersectingWithCollection:
newMutableArrayFromCollection:byRemovingItems:
newMutableArrayFromCollection:forParentContext:
newMutableSetFromCollection:forParentContext:
newMutableOrderedSetFromCollection:forParentContext:
_replaceBaseline:inOrderedSet:withOrderedSet:
_expressionIsCompoundIndexCompatible:
fetchHeterogeneousCollectionByObjectIDs:intoContext:
createDictionaryPartitioningObjectsByEntity:
createDictionaryPartitioningObjectsIntoHierarchies:
isUbiquitousURLUploaded:error:
isUbiquitousURLDownloaded:error:
isSanitizedVersionOf:equalTo:
sanitize:
_groupObjectsWithUniqueAttributesByRootEntity:
weakReferenceWithObject:
object
address
_object
_objectAddress
unlock
tryLock
_lock
_owner
_init__
fileSystemRepresentation
fileURLWithPath:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
allKeys
path
fileReferenceURL
_deleteIfNecessary:
stringByDeletingLastPathComponent
numberWithInteger:
_doCleanupForDir:exceptURLs:
externalDataReferencesDirectory
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
registerURLForCleanup:
lastPathComponent
contentsOfDirectoryAtPath:error:
temporaryLinksDirectoryForStore:
doCleanupForURL:
_storeLinksDirs
_filesToCleanUp
compare:
appendBytes:length:
getCharacters:
initWithCharactersNoCopy:length:freeWhenDone:
getBytes:maxLength:usedLength:encoding:options:range:remainingRange:
appendData:
initWithBytesNoCopy:length:freeWhenDone:
indexForKey:
isNSNumber__
_underlyingProperty
keys
_setupForKeys:count:table:inData:
initWithUTF8String:
getCharacters:range:
cString
_fastCStringContents:
getCString:
cStringLength
_reserved1
_length
_reserved2
_retainedURIString
maximumLengthOfBytesUsingEncoding:
initWithManagedObject:withRecordName:relatedToRecordWithRecordName:byRelationship:
initWithRecord:andValues:withManagedObjectModel:
mirroredRelationshipWithManyToManyRecord:values:andManagedObjectModel:
orderRelationships:
recordNamesFromManyToManyCKRecordName:
orderedRelationshipsForRecordType:andManagedObjectModel:
compare:options:
sortUsingComparator:
recordTypesToRecordNames
type
relationshipDescription
inverseRelationshipDescription
manyToManyRecordName
manyToManyRecordType
ckRecordName
relatedCKRecordName
_type
_relationshipDescription
_inverseRelationshipDescription
_manyToManyRecordName
_manyToManyRecordType
_ckRecordName
_relatedCKRecordName
_objectID
_relatedRecordName
_recordName
initWithPersistentStoreCoordinator:configurationName:URL:options:
configurationName
entitiesForConfiguration:
_registerCacheNode:
setWithArray:
_referenceData
setMetadata:
_updatedMetadataWithSeed:includeVersioning:
metadataForPersistentStoreWithURL:error:
save:
load:
addCacheNodes:
cacheNodes
willRemoveCacheNodes:
cacheNodeForObjectID:
newCacheNodeForManagedObject:
updateCacheNode:fromManagedObject:
newReferenceObjectForManagedObject:
objectIDForEntity:referenceObject:
referenceObjectForObjectID:
_rawMetadata__
metadata
_nodeCache
_entityCache
_storeMetadata
_nextReference
_reserved4
_reserved5
_insertNodeIntoMainCache:
_insertNodeIntoEntityCache:
executeFetchRequest:withContext:
executeSaveChangesRequest:withContext:
executeCountRequest:withContext:
executeRefreshRequest:withContext:
propertiesToGroupBy
_retrieveNodesSatisfyingRequest:
_retrieveNodeForObjectID:
_setHasRetainedStoreResources__:
values
expression
expressionValueWithObject:context:
isCountOnlyRequest
requestExpression
initForKeys:count:
initWithSearchStrategy:
setValues:
fetchOffset
removeObjectsInRange:
fetchLimit
numberWithUnsignedLong:
hasChanges
_isMetadataDirty
insertedObjects
_getNewIDForObject:
_changeIDsForManagedObjects:toIDs:
_addObject:
deletedObjects
_retrieveNodeForObject:
_removeObject:
updatedObjects
_updateObject:
_storeNextReferenceInMetadata
_setMetadataDirty:
arrayWithCapacity:
predicateWithValue:
sortDescriptors
_subentitiesIncludes:
sortUsingDescriptors:
_deleteNodeFromMainCache:
_deleteNodeFromEntityCache:
_versionNumber
_setVersionNumber:
executeRequest:withContext:error:
newValuesForObjectWithID:withContext:error:
newValueForRelationship:forObjectWithID:withContext:error:
_didLoadMetadata
_preflightCrossCheck
managedObjectContextDidRegisterObjectsWithIDs:
managedObjectContextDidUnregisterObjectsWithIDs:
obtainPermanentIDsForObjects:error:
_retainedObjectIDForEntity:referenceObject:
initWithURL:
setType:
setURL:
setOption:forKey:
numberWithDouble:
sqlitePragmas
configuration
setOption:forMirroringKey:
persistentStoreDescriptionWithURL:
inMemoryPersistentStoreDescription
isReadOnly
setReadOnly:
timeout
setTimeout:
setValue:forPragmaNamed:
shouldAddStoreAsynchronously
setShouldAddStoreAsynchronously:
shouldInvokeCompletionHandlerConcurrently
setShouldInvokeCompletionHandlerConcurrently:
shouldMigrateStoreAutomatically
setShouldMigrateStoreAutomatically:
shouldInferMappingModelAutomatically
setShouldInferMappingModelAutomatically:
setMirroringDelegate:
mirroringDelegate
setConfiguration:
_options
_configuration
_url
isFileURL
_propertyNamed:
initWithObjectID:
knownKeyValuesPointer
_snapshot_
propertyCache
setPropertyCache:
__versionNumber
_propertyCache
encodeInt:forKey:
attributeValueClassName
isIndexed
encodeBool:forKey:
_storeBinaryDataExternally
encodeInt32:forKey:
numberWithFloat:
decodeIntForKey:
_sortOutDefaultNumericValuesBecauseDoublesAndFloatsDontCompareEqualAndThatBreaksTests
initWithInt:
decodeInt32ForKey:
decodeInt64ForKey:
_extraIVars
decodeDoubleForKey:
decodeBoolForKey:
setIndexed:
_throwIfNotEditable
_classNameForType:
setAttributeValueClassName:
_hasMinValueInExtraIvars
_hasMaxValueInExtraIvars
validationPredicates
arrayWithArray:
numberWithLongLong:
absoluteString
predicateWithBlock:
validationWarnings
setAttributeType:
setDefaultValue:
setValueTransformerName:
allowsExternalBinaryDataStorage
setAllowsExternalBinaryDataStorage:
_attributeValueClass
_valueTransformerName
_attributeValueClassName
_defaultValue
_initWithName:
_initWithName:type:withClassName:
stringForAttributeType:
_isTriggerBacked
isNSDate__
timeIntervalSinceReferenceDate
_rawValidationPredicates
_rawValidationWarnings
_canConvertPredicate:andWarning:
_comparePredicatesAndWarnings:
_comparePredicatesAndWarningsWithUnoptimizedAttributeDescription:
_createCachesAndOptimizeState
_replaceValidationPredicates:andWarnings:
_nonPredicateValidateValue:forKey:inObject:error:
_generateErrorWithCode:andMessage:forKey:andValue:additionalDetail:
_versionHash:inStyle:
_initWithName:type:
initWithString:
initWithDouble:
initWithFloat:
initWithTimeIntervalSinceReferenceDate:
unarchiveObjectWithData:
_appendPropertyFieldsToData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:entitiesSlots:
replaceBytesInRange:withBytes:
_epsilonEquals:rhs:withFlags:
_initWithType:
setStoresBinaryDataExternally:
_writeIntoData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:entitiesSlots:fetchRequests:
initWithProperty:
setExternalType:
setExternalPrecision:
setExternalScale:
externalType
externalPrecision
externalScale
property
externalName
columnDefinition
_externalType
_externalPrecision
_externalScale
generatedNameSuffix
_retain_1
_release_1
isSubclassOfClass:
_modelsReferenceID
initWithUnsignedLongLong:
initWithBytes:length:encoding:
pathComponents
initWithEntity:andUUIDString:
_setPersistentStore:
setObjectStoreIdentifier:
_getURIBytes:length:
URLWithString:
automaticallyNotifiesObserversForKey:
classWithStore:andEntity:
allocateBatch:count:
version
managedObjectIDFromUTF8String:length:
managedObjectIDFromURIRepresentation:
_setStoreInfo1:
_storeInfo1
_storeDeallocated
_storeIdentifier
_isPersistentStoreAlive
URIRepresentation
entityForEntityDescription:
_referenceData48_cd_rc16
doURLStuff:createdStubFile:readOnly:error:options:
doFilesystemCleanupOnRemove:
initWithStore:fromPath:
initWithStore:
_setMap:
_theMap
saveToPath:
metadataForPersistentStoreWithURL:options:error:
setMetadata:forPersistentStoreWithURL:options:error:
readMetadataFromFile:error:
fullMetadata
setMetadata:forPersistentStoreWithURL:error:
setFullMetadata:
writeMetadataToFile:error:
saveDocumentToPath:
initWithSubresults:
subresults
_subresults
progress
cancel
initWithContext:andProgress:completetionBlock:
_cancelProgress
_isCancelled
setProgress:
operationError
setOperationError:
requestCompletionBlock
setRequestCompletionBlock:
_requestProgress
_requestError
_requestContext
_requestCompletionBlock
initForFetchRequest:withContext:andProgress:completetionBlock:
fetchRequest
finalResult
setFinalResult:
intermediateResultCallback
setIntermediateResultCallback:
_fetchRequest
_finalResult
_intermediateResultCallback
result
initWithObjects:forKeys:
initWithKey:ascending:
initWithResultType:andResult:
_aggregatedResult
_resultType
setDatabaseVersion:
setPrimaryKeyGeneration:
setMapData:
subdataWithRange:
initForReadingWithData:
finishDecoding
clearCurrentValues
readBinaryStoreFromData:originalPath:error:
fileHandleForUpdatingAtPath:
readDataOfLength:
seekToFileOffset:
initForWritingWithMutableData:
finishEncoding
_writeMetadataData:andMapDataData:toFile:error:
closeFile
fileHandleForReadingAtPath:
databaseVersion
primaryKeyGeneration
writeToFile:options:error:
mapData
readFromFile:error:
writeToFile:error:
_databaseVersion
_fullMetadata
_primaryKeyGeneration
_mapData
_storeOptions
_propertySearchMapping
fastIndexForKnownKey:
_doAttributeDecoding
dataForKey:
initWithValues:objectID:
attributeValues
_attributes
_attributesAsEncoded
_setMetadata:
fileExistsAtPath:isDirectory:
store
willAccessValueForKey:
_isValidRelationshipDestination__
setDestinations:forRelationship:
_nodeFromObject:objectIDMap:
removeObject:objectIDMap:
addObject:objectIDMap:
destinationsForRelationship:
dataWithCapacity:
initWithStore:fromArchivedData:
_theDictionary
updateObject:objectIDMap:
retainedObjectIDsForRelationship:forObjectID:
handleFetchRequest:
_archivedData
_entityForName:
entityForName:inManagedObjectContext:
_entityClass
allocWithEntity:
initWithEntity:insertIntoManagedObjectContext:
_entityDeallocated
isAbstract
encodeConditionalObject:forKey:
initWithDictionary:
versionHashModifier
_oldCompoundIndexStyleIndexes
initWithPropertyName:collationType:
_setAscending:
_indexElementFromJSONArray:
initWithName:elements:
_setEntity:
_indexDescriptionFromJSONArray:
_setIndexes:
setRenamingIdentifier:
setCompoundIndexes:
setUniquenessConstraints:
dataWithBytes:length:
JSONObjectWithData:options:error:
_setIndexesFromJSONObject:
_setSubentities:preserveIndices:
_setProperties:preserveIndices:
indexes
coreSpotlightDisplayNameExpression
setCoreSpotlightDisplayNameExpression:
managedObjectClassName
subentitiesByName
_propertiesOfType:
_dropIndexes
_removeSubentity:
_addSubentity:
_valueCountByEnumeratingWithState:objects:count:
_removeProperty:
_addProperty:
_isFlattened
_MOClassName
_subentityNamed:
_removeEntity:
_addEntity:
getBytes:length:
properties
sortDescriptorWithKey:ascending:
_versionHashInStyle:
_validateIndexNameChangeFrom:to:
elements
_attributeNamed:
_validateIndex:
_isMappedSinglePropertyIndex
_propertiesOnlySubsetFromIndexes:
string
lowercaseString
setExpression:
setExpressionResultType:
initWithProperty:collationType:
propertyName
collationType
isAscending
initWithPropertyName:property:collationType:ascending:
_hasIndexForProperty:
uniquenessConstraints
_checkForNonCascadeNoInverses
isKindOfEntity:
subentities
setSubentities:
relationshipsWithDestinationEntity:
setProperties:
setManagedObjectClassName:
setAbstract:
_newVersionHashInStyle:
setVersionHashModifier:
setIndexes:
compoundIndexes
_snapshotClass
_versionHashModifier
_versionHash
_model
_classNameForEntity
_instanceClass
_rootentity
_superentity
_subentities
_propertyMapping
_propertyRanges
_entityDescriptionFlags
_extraIvars
_userInfo
_flattenedSubentities
_kvcPropertyAccessors
_modelsReferenceIDForEntity
_setSuperentity:
_setEntityAndMaintainIndices:
isEditable
setElementID:
elementID
knownKeysMappingStrategy
_propertyWithRenamingIdentifier:
_keypathsToPrefetchForDeletePropagationPrefixedWith:toDepth:processedEntities:
_keypathsToPrefetchForDeletePropagation
initWithObjects:forKeys:count:
maxCount
_relationshipNamesByType:
instanceMethodForSelector:
_isGeneratedClass
classForEntity:
_setIsEditable:
_localRelationshipNamed:
_flattenProperties
_isEditable
_collectSubentities
sortUsingFunction:context:
isIndexedBySpotlight
isStoredInExternalRecord
isOrdered
mapping
_isInheritedPropertyNamed:
_setEntitysReferenceID:
_newMappingForPropertiesOfRange:
_hasUniquePropertiesUncached
_commonCachesAndOptimizedState
_removePropertyNamed:
_propertyRangesByType
initWithKey:ascending:selector:
_isOptimizedForEncoding
initWithPropertyDescription:
_setIsFlattened:
_stripForMigration
_restoreValidation
_compoundIndexRepresentation
_isIndexForProperty:
_hasUniquePropertiesDownInheritanceHiearchy
_constraintIsExtension:
_setValues:retain:
initWithName:predicate:elements:entity:
partialIndexPredicate
_nukeMOClassName__
_keypathsForDeletions
_setManagedObjectModel:
attributeKeys
toManyRelationshipKeys
toOneRelationshipKeys
inverseForRelationshipKey:
_hasCustomPrimitiveProperties
_localPropertyDescriptionNamed:
_relationshipNamed:
_hasPotentialHashSkew
_offsetRelationshipIndex:fromSuperEntity:andIsToMany:
_allPropertyNames
_newSnowLeopardStyleDictionaryContainingPropertiesOfType:
_leopardStyleRelationshipsByName
_leopardStyleAttributesByName
_new_implicitlyObservedKeys
_setModelsReferenceID:
_sortedSubentities
_skipValidation
_hasAttributesWithExternalDataReferences
_hasPropertiesIndexedBySpotlight
_hasPropertiesStoredInTruthFile
_addIndexForProperty:
_removeIndexForProperty:
_finalizeIndexes
_isPathologicalForConstraintMerging:
_hasUniqueProperties
_extensionsOfParentConstraint:
_hasUniquedAttributeWithName:
_writeIntoData:propertiesDict:uniquedPropertyNames:uniquedStrings:uniquedData:uniquedMappings:entities:
_createValuePrimitiveSetterWithContainerClassID:key:
ivar
method
containerClassID
_createValuePrimitiveGetterWithContainerClassID:key:
_createValueSetterWithContainerClassID:key:
_createValueGetterWithContainerClassID:key:
_initWithSourceEntityDescription:destinationEntityDescription:
sourceEntityVersionHash
destinationEntityVersionHash
sourceExpression
entityMigrationPolicyClassName
attributeMappings
relationshipMappings
initWithData:
setEntityMigrationPolicyClassName:
_reserved
_mappingsByName
_mappingType
_sourceEntityName
_sourceEntityVersionHash
_destinationEntityName
_destinationEntityVersionHash
_sourceExpression
_entityMigrationPolicyClassName
_attributeMappings
_relationshipMappings
_entityMappingFlags
_migrationPolicy
_addAttributeMapping:
_addRelationshipMapping:
_hasInferredMappingNeedingValidation
destinationContext
_migrationContext
setCurrentPropertyMapping:
valueExpression
associateSourceInstance:withDestinationInstance:forEntityMapping:
sourceInstancesForEntityMappingNamed:destinationInstances:
destinationEntityForEntityMapping:
orderedSetWithSet:
orderedSetWithArray:
orderedSetWithObject:
setWithObject:
mutableSetValueForKey:
beginEntityMapping:manager:error:
createDestinationInstancesForSourceInstance:entityMapping:manager:error:
endInstanceCreationForEntityMapping:manager:error:
createRelationshipsForDestinationInstance:entityMapping:manager:error:
endRelationshipCreationForEntityMapping:manager:error:
performCustomValidationForEntityMapping:manager:error:
endEntityMapping:manager:error:
_nonNilValueOrDefaultValueForAttribute:source:destination:
defaultMappingGenerator
externalNameForEntityName:
initWithExternalName:
setPropertyMappings:
setPrimaryKeys:
setSingleTableEntity:
setSubentityColumn:
setSubentityID:
propertyMappings
primaryKeys
isSingleTableEntity
subentityColumn
subentityID
columnDefinitions
constraintDefinitions
primaryKeyColumnDefinitions
attributeColumnDefinitions
foreignKeyColumnDefinitions
foreignKeyConstraintDefinitions
initWithEntity:
createTableStatement
_propertyMappings
_primaryKeys
_isSingleTableEntity
_subentityColumn
_subentityID
decodeIntegerForKey:
encodeInteger:forKey:
expressionResultType
_reservedtype1_1
_reservedtype1_2
_reservedtype1_3
_reservedtype1_4
_reservedtype1_5
_reservedtype1_6
_reservedtype2_1
_reservedtype2_2
_reservedtype2_3
_expression
_expressionResultType
entities
createCachesForEntity:forValidator:
registerObject:
validateForSave:
validateCaches
reset
initWithManagedObjectModel:
_addConstraintRoot:forEntity:
registerObjects:
validateForSave
_cachesByEntity
entityID
initWithKeyPath:
foreignKey
foreignOrderKey
initWithSQLCore:
inverseIsToOnePrefetchRequestForRelationshipNamed:onEntity:
manyToOnePrefetchRequestForRelationshipNamed:onEntity:
manyToManyPrefetchRequestsForRelationshipNamed:onEntity:
_sqlCore
_prefetchRequestsByEntity
_initializeRelationshipCaches
toManyOffsetForProperty:
initWithOptions:andTimestamp:
timestamp
setTimestamp:
incrementRefCount
decrementRefCount
externalReferenceCount
incrementExternalReferenceCount:
copyRelationshipCachesFrom:
releaseRelationshipCaches
updateMissingRelationshipCachesFromOriginal:
relatedObjectIDsForProperty:
timestampForProperty:
setRelatedObjectIDs:forProperty:options:andTimestamp:
ancillaryOrderKeysForProperty:
setAncillaryOrderKeys:forProperty:options:andTimestamp:
_externalReferenceCount
_externalRefFlags
_toManyMap
_birth
initWithPersistenceStore:
willFireFault
_disableChangeNotifications
_willChangeValuesForKeys:
lockObjectStore
_parentStore
unlockObjectStore
_didChangeValuesForKeys:
_enableChangeNotifications
didFireFault
awakeFromFetch
_isToManyRelationship
fulfillFault:withContext:forIndex:
predicateWithSubstitutionVariables:
localizedDescription
_newOrderedRelationshipInformationForRelationship:forObjectWithID:withContext:error:
willTurnIntoFault
_setSuppressingChangeNotifications__:
_clearRawPropertiesWithHint:
didTurnIntoFault
fulfillFault:withContext:error:
fulfillFault:withContext:
retainedOrderedFaultInformationForAggregateFaultForObject:andRelationship:withContext:error:
turnObject:intoFaultWithContext:
_fireFirstAndSecondLevelFaultsForObject:withContext:
_isUnprocessedDeletion__
_isPendingDeletion__
context:shouldHandleInaccessibleFault:forObjectID:andTrigger:
shouldHandleInaccessibleFault:forObjectID:triggeredByProperty:
_hasRetainedStoreResources__
_queryGenerationToken__
managedObjectContextDidRegisterObjectsWithIDs:generation:
_setSuppressingKVO__:
_forceRegisterLostFault:
_handleError:withError:
initWithName:
initWithName:managedObjectModel:
URLsForDirectory:inDomains:
persistentStores
URLForResource:withExtension:
initWithContentsOfURL:
_newModelForName:
initWithConcurrencyType:
setPersistentStoreCoordinator:
defaultDirectoryURL
persistentStoreDescriptions
addPersistentStoreWithDescription:completionHandler:
parentContext
setParentContext:
newBackgroundContext
performBlock:
persistentContainerWithName:
persistentContainerWithName:managedObjectModel:
viewContext
loadPersistentStoresWithCompletionHandler:
performBackgroundTask:
setPersistentStoreDescriptions:
_viewContext
_storeCoordinator
_storeDescriptions
persistentContainerWithPath:managedObjectModel:
persistentContainerWithPath:
persistentContainerWithPath:modelNamed:
setFetchRequest:
_reserved6
_lazyFetchRequestEntityName
initWithBool:
havingPredicate
includesPendingChanges
_newValidatedProperties:groupBy:error:
initWithEntityName:
fetchRequestWithEntityName:
execute:
groupByProperties
setGroupByProperties:
_groupByProperties
_havingPredicate
_additionalPrivateIvars
_valuesToFetch
_sortDescriptors
_fetchLimit
_relationshipKeyPathsForPrefetching
_isCachingFetchRequest__
_setAsyncResultHandle:
_asyncResultHandle
_copyForDirtyContext
_resolveEntityWithContext:
_incrementInUseCounter
stores
_XPCEncodedFlags
_setFlagsFromXPCEncoding:
initWithExpressionType:
initForFetch:context:countOnly:
countForFetchRequest:error:
predicateFormat
contextExpression
_expressionWithSubstitutionVariables:
_reserved3
_managedObjectContext
initWithSourceAttributeName:destinationAttributeName:
sourceAttributeName
destinationAttributeName
joinWithSourceAttributeName:destinationAttributeName:
_sourceAttributeName
_destinationAttributeName
numberWithShort:
_makeBranchTableForKeys:count:
_coreCreationForKeys:count:
_coreDealloc:
setWithObjects:
decodeObjectOfClasses:forKey:
encodeInt64:forKey:
supportsSecureCoding
initForKeys:
_table
_keys
decodeObjectOfClass:forKey:
allowedClasses
getObjects:andKeys:
initWithDictionary:copyItems:
_recount
initWithArray:forTarget:withReferenceValues:andRange:andCopyItems:
_countByEnumeratingWithState:objects:count:forKeys:
getKeys:
isEqualToDictionary:
setValue:atIndex:
valueAtIndex:
keyEnumerator
_keySearch
_invalidate
nextObject
_target
_list
_referenceItems
_range
newInstanceWithSearchStrategy:inData:
applyToSet:
_diffObject
initWithObject:index:
_setGenericValue:forKey:withIndex:flags:
_genericValueForKey:withIndex:flags:
dateWithTimeIntervalSinceReferenceDate:
_PFPlaceHolderSingleton
willChangeValueForKey:
didChangeValueForKey:
willChange:valuesAtIndexes:forKey:
didChange:valuesAtIndexes:forKey:
alloc_10_4
allocWithZone_10_4:
_queueForDealloc:
dictionaryWithCapacity:
substringToIndex:
_descriptionValues
insertObject:
_isPendingUpdate__
_isUnprocessedUpdate__
_transientPropertiesChangesMask__
didAccessValueForKey:
_validateValue:forProperty:andKey:withIndex:error:
_chainNewError:toOriginalErrorDoublePointer:
_validateForSave:
mutableArrayValueForKey:
_genericMutableSetValueForKey:withIndex:flags:
_genericMutableOrderedSetValueForKey:withIndex:flags:
mutableOrderedSetValueForKey:
setValuesForKeysWithDictionary:
_updateToManyRelationship:from:to:with:
dictionaryWithValuesForKeys:
_allProperties__
_originalSnapshot__
_newPersistentPropertiesWithRelationshipFaultsIntact__
_persistentProperties__
raise
_reservedCurrentEventSnapshot
_PFPlaceHolderSingleton_core
contextShouldIgnoreUnmodeledPropertyChanges
_batch_release__
isUpdated
hasFaultForRelationshipNamed:
setObservationInfo:
observationInfo
awakeFromInsert
awakeFromSnapshotEvents:
prepareForDeletion
willSave
didSave
validateValue:forKey:error:
validateForDelete:
validateForInsert:
validateForUpdate:
primitiveValueForKey:
setPrimitiveValue:forKey:
committedValuesForKeys:
changedValues
valueForUndefinedKey:
setValue:forUndefinedKey:
setNilValueForKey:
faultingState
changedValuesForCurrentEvent
hasPersistentChangedValues
objectIDsForRelationshipNamed:
_cd_lockingInfo
_cd_stateFlags
_cd_extraFlags
_cd_rawData
_cd_managedObjectContext
_cd_objectID
_cd_extras
_cd_queueReference
willRefresh:
didRefresh:
_lastSnapshot__
_calculateDiffsBetweenOrderedSet:andOrderedSet:
_newPropertiesForRetainedTypes:andCopiedTypes:preserveFaults:
_newPersistentPropertiesForConflictRecordFaultsIntact__
_transientProperties__
initWithIndex:
_implicitObservationInfoForEntity:forResultingClass:
isNSData__
decimalNumberWithString:
_isKindOfEntity:
addObjects:count:
initWithContainer:key:mutableOrderedSet:
initWithContainer:key:mutableOrderedSet:mutationMethods:
_excludeObject:fromPropertyWithKey:andIndex:
_includeObject:intoPropertyWithKey:andIndex:
_maintainInverseRelationship:forProperty:oldDestination:newDestination:
_maintainInverseRelationship:forProperty:forChange:onSet:
_propagateDelete:
_localizationPolicy
localizedEntityNameForEntity:
localizedPropertyNameForProperty:
replaceOccurrencesOfString:withString:options:range:
_generateErrorDetailForKey:withValue:
_substituteEntityAndProperty:inString:
_useFastValidationMethod
_validatePropertiesWithError:
localizedModelStringForKey:
dictionaryWithDictionary:
diffOrderedSets:::::::
removeObjectsInArray:
_genericUpdateFromSnapshot:
initWithSet:
_newSetFromSet:byApplyingDiffs:
_initWithEntity:withID:withHandler:withContext:
wasForgotten
_hasAnyObservers__
_hasPendingChanges
_clearPendingChanges__
_hasUnprocessedChanges__
_clearUnprocessedChanges__
_clearAllChanges__
_isSuppressingChangeNotifications__
_isSuppressingKVO__
_setPendingDeletion__:
_isPendingInsertion__
_setPendingInsertion__:
_setPendingUpdate__:
_setUnprocessedDeletion__:
_isUnprocessedInsertion__
_setUnprocessedInsertion__:
_setUnprocessedUpdate__:
_stateFlags
_setLastSnapshot__:
_nilOutReservedCurrentEventSnapshot__
_changedValuesForCurrentEvent
_versionReference__
_setVersionReference__:
_setObjectID__:
_setOriginalSnapshot__:
_referenceQueue__
_newChangedValuesForRefresh__
_newNestedSaveChangedValuesForParent:
_newSnapshotForUndo__
_newAllPropertiesWithRelationshipFaultsIntact__
_newCommittedSnapshotValues
_changedTransientProperties__
_implicitObservationInfo
_didChangeValue:forRelationship:named:withInverse:
_propagateDelete
_prepropagateDeleteForMerge
_updateFromSnapshot:
_updateFromRefreshSnapshot:includingTransients:
_updateFromUndoSnapshot:
_orderedObjectsAndKeys
_reorderObjectsToLocationsByOrderKey:error:
_orderKeysForRelationshipWithName__:
_updateLocationsOfObjectsToLocationByOrderKey:inRelationshipWithName:error:
signatureWithObjCTypes:
_isGeneratedClass_1
_PFMOClassFactoryData
isEqualToData:
allocBatch:withEntity:count:
allocateBatch:forEntity:count:
_initializeAccessorStubs
_initializePrimitiveAccessorStubs
_isOrdered
_defaultValidation:error:
methodSignatureForSelector:
implementsSelector:
batchAllocateWithEntity:insertIntoManagedObjectContext:count:
_hasOverriddenAwake
resolveClassMethod:
resolveInstanceMethod:
lastIndex
getIndexes:maxCount:inIndexRange:
replaceObjectsInRange:withObjects:count:
numberWithChar:
numberWithInt:
standardUserDefaults
integerForKey:
boolForKey:
stringForKey:
_registerForNotificationsWithCoordinator:
_setPersistentStoreCoordinator:
_setRetainsRegisteredObjects:
shouldDeleteInaccessibleFaults
discardEditing
_forgetObject:propagateToObjectStore:removeFromRegistry:
_resetAllChanges
managedObjectContextDidUnregisterObjectsWithIDs:generation:
_postObjectsDidChangeNotificationWithUserInfo:
unpinnedQueryGenerationToken
currentQueryGenerationToken
_setQueryGenerationFromToken:error:
assertOnImproperDealloc
_unregisterRunloopObservers
_unregisterForNotifications
_dispose:
callStackSymbols
_dealloc__
_stopObservingUndoManagerNotifications
_startObservingUndoManagerNotifications
_setUndoManager:
_processRecentChanges:
_retainedRegisteredObjects
_persistentStoreForIdentifier:
managedObjectIDForURIRepresentation:error:
_ignoringChangeNotifications
_insertObjectWithGlobalID:globalID:
_registerClearStateWithUndoManager
_establishEventSnapshotsForObject:
_enqueueEndOfEventNotification
_parentObtainPermanentIDsForObjects:context:error:
defaultCenter
postNotificationName:object:userInfo:
_prepareForPushChanges:
_newSaveRequestForCurrentState
_hasEntityWithUniquenessConstraints
registeredObjects
_doPreSaveConstraintChecksForObjects:error:
_generateOptLockExceptionForConstraintFailure:
_informParentStore:ofInterestInObjects:
setDebugDefault:
mergePolicy
resolveConflicts:error:
_retainedCurrentQueryGeneration
_thereIsNoSadnessLikeTheDeathOfOptimism
_didSaveChanges
objectRegisteredForID:
_retainedObjectWithID:
_retainedObjectWithID:error:
stalenessInterval
_setStalenessInterval:
initWithFetchRequest:completionBlock:
_executeAsynchronousFetchRequest:
_attemptCoalesceChangesForFetch
_countWithNoChangesForRequest:error:
_countWithMergedChangesForRequest:possibleChanges:possibleDeletes:error:
numberWithUnsignedInteger:
_createStoreFetchRequestForFetchRequest:
currentProgress
initWithParent:userInfo:
estimatedResultCount
setTotalUnitCount:
setKind:
completionBlock
setCancellationHandler:
completedUnitCount
setCompletedUnitCount:
propagatesDeletesAtEndOfEvent
setPropagatesDeletesAtEndOfEvent:
processPendingChanges
_committedSnapshotForObject:
_refaultObject:globalID:boolean:
_prepareUnprocessedDeletionAfterRefresh:
undo
redo
_initWithParentObjectStore:
decodeFloatForKey:
setMergePolicy:
encodeFloat:forKey:
_forceRemoveFromDeletedObjects:
_mergeRefreshObject:mergeChanges:withPersistentSnapshot:
_mergeRefreshEpilogueForObject:mergeChanges:
_mergeChangesFromRemoteContextSave:intoContexts:
_mergeChangesFromDidSaveDictionary:usingObjectIDs:
refreshObject:mergeChanges:
performWithOptions:andBlock:
_setParentContext:
nostoresQueryGenerationToken
_validateQueryGeneration:error:
automaticallyMergesChangesFromParent
setAutomaticallyMergesChangesFromParent:
_changeTrackingToken__
_setAutomaticallyMergesChangesFromParent:
removeObserver:name:object:
_automaticallyMergeChangesFromContextDidSaveNotification:
addObserver:selector:name:object:
mergeChangesFromContextDidSaveNotification:
__Multithreading_Violation_AllThatIsLeftToUsIsHonor__
mergeChangesFromRemoteContextSave:intoContexts:
setRetainsRegisteredObjects:
retainsRegisteredObjects
setShouldDeleteInaccessibleFaults:
setStalenessInterval:
setUndoManager:
undoManager
assignObject:toPersistentStore:
observeValueForKeyPath:ofObject:change:context:
_youcreatedanNSManagedObjectContextOnthemainthreadandillegallypassedittoabackgroundthread
_checkObjectForExistenceAndCacheRow:
executeRequest:error:
rollback
detectConflictsForObject:
refreshAllObjects
setTransactionAuthor:
transactionAuthor
setQueryGenerationFromToken:error:
_setChangeTrackingTokenFromToken:error:
changeTrackingToken
queryGenerationToken
_queueOwner
_dispatchQueue
_spinLock
_parentObjectStore
_unprocessedChanges
_unprocessedDeletes
_unprocessedInserts
_insertedObjects
_deletedObjects
_changedObjects
_lockedObjects
_refreshedObjects
_infoByGID
_cachedObsInfoByEntity
_undoTransactionID
_lockCount
_objectStoreLockCount
_fetchTimestamp
_referenceCallbackRegistration
_referenceQueue
_ignoreChangeNotification
_contextLabel
_newUnchangedLockedObjects
initWithInsertedObjects:updatedObjects:deletedObjects:lockedObjects:
_setSecureOperation:
substitutionVariables
_fetchLimitForRequest:
_unlimitRequest:
_registerObject:withID:
_informParentStore:noLongerInterestedInObjects:
_performCoordinatorActionAndWait:
_disposeObjects:count:notifyParent:
_contextDidDealloc
initForContext:
currentQueue
maxConcurrentOperationCount
_clearUnprocessedUpdates
_clearUpdates
_clearUnprocessedInsertions
_clearInsertions
_clearUnprocessedDeletions
_clearDeletions
_clearLockedObjects
_clearRefreshedObjects
isUndoRegistrationEnabled
removeAllActions
_incrementUndoTransactionID
_globalIDForObject:
_clearOriginalSnapshotForObject:
_validateObjects:forOperation:error:exhaustive:forSave:
mergeType
_clearOriginalSnapshotAndInitializeRec:
_postContextDidSaveNotificationWithUserInfo:
_forgetObject:propagateToObjectStore:
performFetch:error:
_globalIDsForObjects:
_batchRetainedObjects:forCount:withIDs:optionalHandler:withInlineStorage:
_validateDeletesUsingTable:withError:
_validateChangesForSave:
_informParentStoreOfInterestInObjectIDs:generation:
_informParentStoreNoLongerInterestedInObjectIDs:generation:
_retainedObjectsFromRemovedStore:
_stopsValidationAfterFirstError
_setStopsValidationAfterFirstError:
_debuggingOnly_localObjectForGlobalID:
_currentEventSnapshotForObject:
_growRegistrationCollectionForEntitySlot:toSize:
_setIsUbiquityImportContext:
_isImportContext
_isPreflightSaveInProgress
_setDisableDiscardEditing:
_isXPCServerContext
_setXPCServerContext:
_disableDiscardEditing
_setPostSaveNotifications:
_postSaveNotifications
_persistentStoreDidUpdateAdditionalRowsWithNewVersions:
objectWillChange:
_undoInsertions:
_registerUndoForOperation:withObjects:withExtraArguments:
_undoDeletionsMovedToUpdates:
registerUndoWithTarget:selector:object:
_createAndPostChangeNotification:deletions:updates:refreshes:deferrals:wasMerge:
_undoDeletions:
_undoUpdates:
groupsByEvent
isUndoing
isRedoing
beginUndoGrouping
_clearChangedThisTransaction:
disableUndoRegistration
enableUndoRegistration
_postRefreshedObjectsNotificationAndClearList
_updateUnprocessedOwnDestinations:
_propagatePendingDeletesAtEndOfEvent:
_processPendingDeletions:withInsertions:withUpdates:withNewlyForgottenList:withRemovedChangedObjects:
_processPendingInsertions:withDeletions:withUpdates:
_processPendingUpdates:
_registerUndoForModifiedObjects:
_registerUndoForInsertedObjects:
_registerUndoForDeletedObjects:withDeletedChanges:
_updateUndoTransactionForThisEvent:withDeletions:withUpdates:
_processRecentlyForgottenObjects:
_postContextDidMergeChangesNotificationWithUserInfo:
_processDeletedObjects:
endUndoGrouping
_processEndOfEventNotification:
_prefetchObjectsForDeletePropagation:
_propagateDeletesUsingTable:
_forceInsertionForObject:
_undoManagerCheckpoint:
_noop:
_processObjectStoreChanges:
_processNotificationQueue
removeAllActionsWithTarget:
_storeConfigurationChanged:
_sendOrEnqueueNotification:selector:
_processChangedStoreConfigurationNotification:
defaultQueue
enqueueNotification:postingStyle:
_objectsChangedInStore:
isEditing
commitEditing
invocationWithMethodSignature:
setSelector:
setArgument:atIndex:
invokeWithTarget:
performSelector:withObject:afterDelay:inModes:
_managedObjectContextEditor:didCommit:contextInfo:
_sendCommitEditingSelectorToTarget:sender:selector:flag:contextInfo:delayed:
commitEditingWithDelegate:didCommitSelector:contextInfo:
objectDidBeginEditing:
objectDidEndEditing:
setShouldPerformSecureOperation:
shouldPerformSecureOperation
performBlockWithResult:
_setDelegate:
_orderedSetWithResultsFromFetchRequest:
_stopConflictDetectionForObject:
_mergeChangesFromRemoteContextSave:
_queueCount
_signal
_queueBatchForDealloc:
_signalRunloop
_queue
_rlObserver
_processing
_copyChildObject:toParentObject:fromChildContext:
_parentObjectsForFetchRequest:inContext:error:
_parentProcessSaveRequest:inContext:error:
initWithOwnedKKsD:andVersion:
_snapshot
_version
_allOrderKeysForDestination:inRelationship:error:
_orderKeysForRelationshipWithName__:onObjectWithID:
_updateLocationsOfObjectsToLocationByOrderKey:inRelationshipWithName:onObjectWithID:error:
_newArchiveForScalarObjectIDs:
unarchivedScalarObjectIDsFromData:withCoordinator:
_modelPathsFromBundles:
modelByMergingModels:
fetchRequestTemplatesByName
fetchRequestTemplateForName:
addPolicy:
_setLocalizationPolicy:
_deepCollectEntitiesInArray:entity:
_addEntities:toConfiguration:
setFetchRequestTemplate:forName:
versionIdentifiers
_addVersionIdentifiers:
initWithPath:
fileURLWithPath:isDirectory:
modelByMergingModels:forStoreMetadata:
_modelForVersionHashes:
removeObjectsForKeys:
_initWithEntities:
optimizedVersionURL
currentVersionURL
pathExtension
initWithContentsOfOptimizedURL:
unarchiveObjectWithFile:
setEntities:
setEntities:forConfiguration:
setVersionIdentifiers:
_ensureFullLocalizationDictionaryIsLoaded
localizationDictionary
setLocalizationDictionary:
_entityVersionHashesByNameInStyle:
_isConfiguration:inStyle:compatibleWithStoreMetadata:
mergedModelFromBundles:
mergedModelFromBundles:forStoreMetadata:
configurations
fetchRequestFromTemplateWithName:substitutionVariables:
entityVersionHashesByName
isConfiguration:compatibleWithStoreMetadata:
_dataForOptimization
_optimizationHints
_entities
_configurations
_fetchRequestTemplates
_versionIdentifiers
_managedObjectModelFlags
_newModelFromOptimizedEncoding:error:
_setIsEditable:optimizationStyle:
_optimizedEncoding:
initWithManagedObjectModel:configurationName:retainHashHack:
archivedDataWithRootObject:
entityNamed:
_odiousHashHack
_updateInverse:
initWithContentsOfURL:forStoreMetadata:
allBundles
bundlePath
pathsForResourcesOfType:inDirectory:
_hasPrecomputedKeyOrder
_removeEntities:fromConfiguration:
_removeEntityNamed:
immutableCopy
_precomputedKeysForEntity:
_configurationsByName
_sortedEntitiesForConfiguration:
_entitiesByVersionHash
_versionIdentifiersAsArray
pathForResource:ofType:
dictionaryWithContentsOfFile:
reason
versionInfoDictionary
versionHashInfo
bundle
currentVersion
urlForModelVersionWithName:
URLsForResourcesWithExtension:subdirectory:
modelVersions
_modelForVersionHashes:inStyle:
_bundle
_versionInfoDictionary
getNewIDForObject:
_addObject:objectIDMap:
_removeObject:objectIDMap:
_updateObject:objectIDMap:
save
nextPK64
databaseUUID
_pathFromURI:
_entitiesToFetch
entityMappings
_newMappingModelFromPaths:forSourceHashes:destinationHashes:
_initWithEntityMappings:
entityMappingsByName
_addEntityMapping:
mappingModelFromBundles:forSourceModel:destinationModel:
inferredMappingModelForSourceModel:destinationModel:error:
_entityMappings
_entityMappingsByName
_modelMappingFlags
allFrameworks
_isInferredMappingModel
_sourceEntityVersionHashesByName
_destinationEntityVersionHashesByName
isDestination:compatibleDestinationFor:
initWithConstantValue:inScope:context:
propertyDescription
entityIDForName:
foreignEntityKey
isRelationship:compatibleWith:
initWithConstantValue:ofType:inScope:context:
generateVariableAlias
expressionForSubquery:usingIteratorVariable:predicate:
initWithExpression:trailingKeypath:inScope:
_subqueryIntermediateForToManyKeypathWithComponents:withFunction:inContext:
_generateSQLForKeypathWithComponents:onSQLEntity:inContext:
_generateSQLForRelationshipUpdate:sourceRelationship:inContext:
_generateSQLForAttributeUpdate:sourceAttribute:inContext:
_generateSQLToUpdateProperty:fromMultiStepKeypathComponents:inContext:
_generateSQLToUpdateProperty:fromSingleStepKeypath:inContext:
_generateSQLForRelationshipUpdate:destination:inContext:
_generateSQLForAttributeUpdate:value:inContext:
_generateSQLForExpression:allowToMany:inContext:
_generateSQLToUpdateProperty:fromKeypath:inContext:
_generateSQLToUpdateProperty:fromSubquery:inContext:
initWithProperties:values:inScope:
isUpdateColumnsScoped
governingAliasForKeypathExpression:
_propertiesToUpdate
_valuesToUpdateTo
performPrimitiveOperationUsingObject:andObject:
initWithSource:newVersion:oldVersion:cachedSnapshot:persistedSnapshot:
ancestorSnapshot
sourceObject
objectSnapshot
cachedSnapshot
persistedSnapshot
newVersionNumber
oldVersionNumber
_snapshot1
_snapshot2
_snapshot3
_newVersion
_oldVersion
constraint
databaseObject
conflictingObjects
initWithConstraint:databaseObject:databaseSnapshot:conflictingObjects:conflictingSnapshots:
_isDBConflict
constraintValues
conflictingSnapshots
databaseSnapshot
_constraint
_databaseObject
_databaseSnapshot
_conflictedValues
_conflictingObjects
_conflictingSnapshots
initWithMergeType:
_valuesOnObject:matchAgainstValues:
_mergeToManyUnionRelationshipsForObject:andObject:
_mergeToManyUnionRelationshipsForConstraintConflict:
_mergeToManyRelationshipsForObject:ontoObject:
_mergeToManyRelationshipsForConstraintConflict:withDesignatedOriginal:
_byPropertyObjectTrumpMergeObject:ontoObject:writeAll:
_electPreexistingDesignatedOriginalFrom:
_electNewlyInsertedDesignatedOriginalFrom:
_mergeValuesForObject:ontoObject:
_electDesignatedOriginalForConflict:
_mergeContendersResolveConstraintConflict:withKeeper:
_eliminateContendersResolveConstraintConflict:withKeeper:
_didSomethingElseResolveDBConflict:
_unresolvedObjectsForContextConflict:
_unresolvedConflictFor:
_byPropertyStoreTrumpResolveConstraintConflict:
_byPropertyObjectTrumpResolveConstraintConflict:
_rollbackResolveConstraintConflict:
_overwriteResolveConstraintConflict:
_resolveContextConstraintConflict:
_mergeChangesStoreUpdatesTrumpForObject:withRecord:
_mergeChangesObjectUpdatesTrumpForObject:withRecord:
mergeToManyRelationshipForSourceObject:withOldSnapshot:newSnapshot:andAncestor:andLegacyPath:
valueForPropertyDescription:
_mergeDeletionWithStoreChangesForObject:withRecord:
resolveOptimisticLockingVersionConflicts:error:
resolveConstraintConflicts:error:
resolveConstraintConflict:error:
resolveConflict:
load
errorMergePolicy
mergeByPropertyStoreTrumpMergePolicy
mergeByPropertyObjectTrumpMergePolicy
overwriteMergePolicy
rollbackMergePolicy
initWithType:
clearAssociationTables
setCurrentMigrationStep:
_createAssociationsBySource:withDestination:forEntityMapping:
_createAssociationsByDestination:fromSource:forEntityMapping:
initWithMigrationManager:
currentEntityMapping
setCurrentEntityMapping:
currentPropertyMapping
currentMigrationStep
destinationInstancesForEntityMapping:sourceInstance:
sourceInstancesForEntityMapping:destinationInstance:
_bySourceAssociationTable
_byDestinationAssociationTable
_byMappingBySourceAssociationTable
_byMappingByDestinationAssociationTable
_migrationManager
_currentMapping
_currentStep
_currentPropertyMapping
_doCleanupOnFailure:
_beginPowerAssertionWithAssert:
usesStoreSpecificMigrationManager
registeredStoreTypes
pointerValue
migrationManagerClass
_canMigrateWithMappingModel:
sourceModel
destinationModel
migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:
_migrateStoreFromURL:type:options:withMappingModel:toDestinationURL:destinationType:destinationOptions:error:
_endPowerAssertionWithAssert:andApp:
_mappingNamed:
sourceEntityForEntityMapping:
mappingModel
sourceContext
destinationInstancesForEntityMappingNamed:sourceInstances:
destinationInstancesForSourceRelationshipNamed:sourceInstances:
migrationProgress
cancelMigrationWithError:
setUsesStoreSpecificMigrationManager:
_sourceEntitiesByVersionHash
_destinationEntitiesByVersionHash
_mappingModel
_sourceManagedObjectContext
_destinationManagedObjectContext
_migrationManagerFlags
_migrationCancellationError
fetchRequestForSourceEntityNamed:predicateString:includesSubentities:
_evaluateSourceExpressionForMapping:entityPolicy:
_performSanityCheckForMapping:fromSourceModel:toDestinationModel:
addPersistentStoreWithType:configuration:URL:options:error:
_copyMetadataFromStore:toStore:migrationManager:
_doFirstPassForMapping:error:
_doSecondPassForMapping:error:
_validateAllObjectsAfterMigration:
_doThirdPassForMapping:error:
removePersistentStore:error:
fetchRequestForSourceEntityNamed:predicateString:
isWritableFileAtPath:
classForStore:
setIdentifier:
_unload:
willRemoveFromPersistentStoreCoordinator:
didAddToPersistentStoreCoordinator:
loadMetadata:
coreSpotlightExporter
_coordinator
_configurationName
_oidFactories
_defaultFaultHandler
_temporaryIDClass
_coreSpotlightDelegate
_activeRequests
faultHandlerClass
_objectIDClass
cachedModelForPersistentStoreWithURL:options:error:
initForNonGenerationalStore:
identifierIsForNonGenerationalStore:
currentQueryGeneration
objectIDClassForEntity:
_resetObjectIDFactoriesForStoreUUIDChange
_prepareForExecuteRequest:withContext:error:
_defaultMetadata
_updateMetadata
_storeInfoForEntityDescription:
incrementInUseCounter
decrementInUseCounter
supportsConcurrentRequestHandling
supportsGenerationalQuerying
freeQueryGenerationWithIdentifier:
reopenQueryGenerationWithIdentifier:error:
currentChangeToken
ancillaryModels
rowCacheClass
_replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:error:
_destroyPersistentStoreAtURL:options:error:
_figureOutWhereExternalReferencesEndedUpRelativeTo:
_createExternalDataDictWithValueCallbacks:
initWithValueCallbacks:preserveToManyRelationships:
_forgetRowForObjectID:
_registerRow:forObjectID:options:
registerRow:forObjectID:options:
rowForObjectID:afterTimestamp:
_registerToMany:withOrderKeys:forSourceObjectID:forProperty:options:andTimestamp:
registerToMany:withOrderKeys:forSourceObjectID:forProperty:options:andTimestamp:
initWithPersistentStore:
growRegistrationCollectionTo:
forgetAllExternalData
decrementRefCountForObjectID:
incrementRefCountForObjectID:
refCountForObjectID:
registerRow:forObjectID:
registerToMany:withOrderKeys:forSourceObjectID:forProperty:andTimestamp:
toManyInformationForSourceObjectID:forProperty:afterTimestamp:
toManyForSourceObjectID:forProperty:afterTimestamp:
ancillaryOrderKeysForSourceObjectID:forProperty:afterTimestamp:
_externalData
_capacity
_externalDataValueCallbacks
_persistentStoreCacheFlags
_registerDefaultStoreClassesAndTypes
_retainedPersistentStores
valueWithPointer:
isReadableFileAtPath:
_storeClassForStoreType:
_classForPersistentStoreAtURL:
metadataForPersistentStoreOfType:URL:options:error:
_metadataForPersistentStoreOfType:URL:options:error:
_setMetadata:forPersistentStoreOfType:URL:options:error:
_routeLightweightBlock:toStore:
_externalDataLinksDirectory
_checkForPostLionWriter:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
validateManagedObjectModel:forUseWithStoreWithDescription:error:
_attemptRecoveryFromAddPersistentStoreError:withDescription:
persistentStoreCoordinator:didSuccessfullyAddPersistentStore:withDescription:
_doAddPersistentStoreWithDescription:privateCopy:completionHandler:
arrayByAddingObjectsFromArray:
validateManagedObjectModel:forHistoryTrackingWithOptions:error:
stringByExpandingTildeInPath
_realStoreTypeForStoreWithType:URL:options:error:
_checkForSkewedEntityHashes:metadata:
setPersistentStoreCoordinator:sourceURL:configuration:metadata:options:
_gatherDataAndPerformMigration:
_addPersistentStore:identifier:
_postStoresChangedNotificationsForStores:changeKey:options:
postNotificationName:object:
_removePersistentStore:error:
_removePersistentStore:
_storeTypeForStore:
_retainedAllMigratedObjectsInStore:toStore:
managedObjectIDForURIRepresentation:
_destroyPersistentStoreAtURL:withType:options:error:
_replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
initWithResult:type:
_exceptionNoStoreSaveFailureForError:recommendedFrame:
_coordinator_you_never_successfully_opened_the_database_corrupted:
_coordinator_you_never_successfully_opened_the_database_schema_mismatch:
_coordinator_you_never_successfully_opened_the_database_device_locked:
_coordinator_you_never_successfully_opened_the_database_missing_directory:
_coordinator_you_never_successfully_opened_the_database_no_permission:
_coordinator_you_never_successfully_opened_the_database_cant_open:
_coordinator_you_never_successfully_opened_the_database_disk_full:
_coordinator_you_never_successfully_opened_the_database_io_error:
_coordinator_you_never_successfully_opened_the_database_so_saving_back_to_it_is_kinda_hard:
_storesForRequestRoutingFrom:error:
_generationalComponentForStore:
_routableStoresForContext:fromStores:
_retryHandlerCount
_setRetryHandlerCount:
_introspectLastErrorAndThrow
_coordinator_no_idea_what_kind_of_request_that_was_supposed_to_be
_checkRequestForStore:withContext:originalRequest:andOptimisticLocking:
_doPreSaveAssignmentsForObjects:intoStores:
_saveRequestForStore:withContext:originalRequest:andOptimisticLocking:
_processStoreResults:forRequest:
_retainedIdentifierFromStores:
_hasHistoryTracking:
_retainedChangeTokenFromStores:
_routeHeavyweightBlock:
_registerCoreDataStoreClass:forStoreType:
registerStoreClass:forStoreType:
metadataForPersistentStoreOfType:URL:error:
setMetadata:forPersistentStoreOfType:URL:options:error:
setMetadata:forPersistentStoreOfType:URL:error:
removeUbiquitousContentAndPersistentStoreAtURL:options:error:
setMetadata:forPersistentStore:
metadataForPersistentStore:
persistentStoreForURL:
URLForPersistentStore:
migratePersistentStore:toURL:options:withType:error:
destroyPersistentStoreAtURL:withType:options:error:
replacePersistentStoreAtURL:destinationOptions:withPersistentStoreFromURL:sourceOptions:storeType:error:
_canRouteToStore:forContext:
_miniLock
_managedObjectModel
_persistentStores
sharedApplication
beginBackgroundTaskWithExpirationHandler:
endBackgroundTask:
removeObjectIdenticalTo:
managedObjectIDFromUTF8String:length:error:
arrayByAddingObject:
_canSaveGraphRootedAtObject:intoStore:withPreviouslyChecked:withAcceptableEntities:
_assignObjects:toStore:
_newObjectGraphStyleRecordForRow:andObject:withContext:
_newConflictRecordForObject:andOriginalRow:withContext:
_conflictsWithRowCacheForObject:withContext:andStore:
lockedObjects
setDeletedObjects:
_fetchAllInstancesFromStore:intoContext:underlyingException:
_assignObject:toPersistentStore:forConfiguration:
ubiquityStoreURLForStoreURL:ubiquityIdentityToken:localPeerID:ubiquityName:
_setQosClassOptions:
_qosClassOptions
_setIsRegisteredWithCloudKit:
_isRegisteredWithCloudKit
_setIsRegisteredWithUbiquity:
_isRegisteredWithUbiquity
ubiquityStoreURLForStoreURL:ubiquityIdentityToken:ubiquityName:
_disconnectAllConnections
_destroyPersistentStoreAtURL:withType:error:
initWithCompoundValue:
_reopenQueryGenerationWithIdentifier:inStoreWithIdentifier:error:
_refreshTriggerValues:
_refreshTriggerValuesInStore:error:
storeTokens
localizedCaseInsensitiveCompare:
sortUsingSelector:
_retainedCurrentChangeTrackingToken
initWithObject:changeType:
changeType
startIndexPath
finalIndexPath
startSectionInfo
finalSectionInfo
setChangeType:
setStartSectionInfo:
setFinalSectionInfo:
setFinalIndexPath:
setStartIndexPath:
_changeType
_startIndexPath
_finalIndexPath
_startSectionInfo
_finalSectionInfo
mappingsDictForConfigurationWithName:inModel:
setDatabaseUUID:
externalMapping
_cheatAndLookAtCurrentValueOfnextPK64
_storeMetadataForSaving
_store
_databaseUUID
_nextPK64
_mappings
_initializeExtraIVars
setOptional:
setTransient:
setValidationPredicates:withValidationWarnings:
setIndexedBySpotlight:
setStoredInExternalRecord:
_validationPredicates
_validationWarnings
_propertyDescriptionFlags
_entitysReferenceIDForProperty
_setOrdered:
isSpotlightIndexed
setSpotlightIndexed:
isStoredInTruthFile
setStoredInTruthFile:
isStoredInTruth
setStoredInTruth:
_newValidatedPropertiesToUpdate:error:
_setValidatedPropertiesToUpdate:
batchUpdateRequestWithEntityName:
propertiesToUpdate
setPropertiesToUpdate:
_secureOperation
_columnsToUpdate
_initWithDestinationName:valueExpression:
_propertyTransforms
_transformValidations
_valueExpression
_propertyMappingFlags
initWithName:valueExpression:
newRTReeTableNameForAttribute:onEntity:
stringByReplacingOccurrencesOfString:withString:
components
validatePropertyWithDescription:andName:forUseAs:onAttributeNamed:onEntityNamed:error:
generateSQLStrings
userInfoObject
rtreeTableName
latProp
longProp
_userInfoObject
_components
_sqlEntity
_attributeName
_rtreeTableName
_attributeDescription
_latProp
_longProp
_dropSQLStrings
_bulkUpdateSQLStrings
externalNameForPropertyName:
setProperty:
_property
setPropertyName:
prerequisiteTransform
replaceMissingValueOnly
_propertyName
_prerequisiteTransform
_replaceMissingValueOnly
_validateContainerIdentifier:error:
_validateHistoryTrackingOptions:error:
_validateContainerOptions:error:
_validateAssetThreshold:error:
validateOptions:andStoreOptions:error:
parsedOptions
_parsedOptions
setMaxCount:
setMinCount:
setDestinationEntity:
setDeleteRule:
setInverseRelationship:
setOrdered:
_lazyDestinationEntityName
_inverseRelationship
_lazyInverseRelationshipName
_maxCount
_minCount
_deleteRule
_versionHash:inStyle:proxyContext:
_validateValuesAreOfDestinationEntity:source:
_setLazyDestinationEntityName:
setDestinationEntityExternalName:
setForeignKeys:
setJoins:
destinationEntityExternalName
foreignKeys
joins
joinSemantic
setJoinSemantic:
_destinationEntityExternalName
_foreignKeys
_joins
_joinSemantic
refCount
_refCount
initWithValue:whoIsResponsibleForThePointer:
pointerResponsibility
_pointerResponsibility
_updatedObjects
_optimisticallyLockedObjects
generateSubqueryVariableAlias
generateTempTableName
_nextTableAlias
_nextVariableAlias
_nextTempTableAlias
_tableBase
_variableBase
initWithEntity:propertyDescription:
_sqlTypeForAttributeType:flags:
_setSQLType:
addUniqueAttribute:
initForReadOnlyFetching
setAllowAliasing:
triggerKeys
setByAddingObject:
initForReadOnlyFetchWithExpression:
shouldIndex
isUnique
setConstrained:
isBackedByTrigger
initWithValue:sqlType:attributeDescription:allowCoercion:
setInt64:
setUnsignedInt:
int64
unsignedInt
setSQLType:
hasObjectValue
allowsCoercion
_sqlType
_int64
mappingGenerator
newGeneratedPropertyName:
_setColumnName:
copyValuesForReadOnlyFetch:
allowAliasing
initWithColumnName:sqlType:
roughSizeEstimate
fetchIndex
_setFetchIndex:
_setSlotIfDefault:
cloneForReadOnlyFetching
_columnName
initWithPredicate:inScope:
initWithPredicate:inScope:inContext:
disambiguatingEntity
disambiguationKeypath
disambiguationKeypathHasToMany
_generateMulticlauseStringInContext:
scope
isOrScoped
setDisambiguatingEntity:withKeypath:hasToMany:
_subclauses
_disambiguatingEntity
_disambiguationKeypath
_disambiguationKeypathHasToMany
isTargetColumnsScoped
governingEntityForKeypathExpression:
adapter
sqlTypeForExpressionConstantValue:
_lastScopedItem
isVariableBasedKeypathScopedBySubquery:
propertyAtEndOfKeyPathExpression:
sqlTypeForProperty:
_addBindVarForConstId:ofType:inContext:
isIndexScoped
_addBindVarForConstVal1:inContext:
_constantValue
distantPast
distantFuture
initWithBytesNoCopy:length:deallocator:
objectIDFactoryForSQLEntity:
newObjectIDForEntity:pk:
readMagicWordFromPath:options:
initWithManagedObjectModel:configurationName:brokenHashVersion:
coloredLoggingDefault
newPersistentHistoryModelWithStoreSQLModel:
newHistorySQLModelWithStoreSQLModel:
newMetadataModelForFrameworkVersion:
initWithManagedObjectModel:configurationName:entityIDOffset:
databaseKeyFromOptionsDictionary:
_ensureDatabaseMatchesModel
isLocalFS
setConnectionsAreLocal:
createdAncillaryTables
setCreatedAncillaryModelTables:
initWithSQLCore:seedConnection:
disconnect
sourceEntity
newRenameTableStatementFromManyToMany:toManyToMany:orToRandomSpot:
uniqueNameWithBase:
newCreateTableStatementForManyToMany:
newCopyAndInsertStatementForManyToMany:toManyToMany:intermediateTableName:invertColumns:
newDropTableStatementForTableNamed:
connect
beginTransaction
prepareAndExecuteSQLStatement:
commitTransaction
rollbackTransaction
_checkAndRepairCorrelationTables:storeVersionNumber:usingConnection:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
fetchTableCreationSQL
manyToManyRelationships
_dissectCorrelationTableCreationSQL:
_collectSkewedComponents:usingConnection:
_repairDatabaseCorrelationTables:brokenHashModel:storeVersionNumber:recurse:usingConnection:
fetchTableNames
isRootEntity
recreateIndices
_rebuildTriggerSchemaUsingConnection:recomputeValues:error:
rawIntegerRowsForSQL:
_hasOldHistoryTrackingTables
_dropOldHistoryTrackingTables
hasChangeTrackingTables
dropHistoryTrackingTables
createHistoryTrackingTables
hasCachedModelTable
saveCachedModel:
fetchMetadata
saveMetadata:
newSimplePrimaryKeyUpdateStatementForEntity:
_updateToVersion640PrimaryKeyTableUsingStatements:connection:
newComplexPrimaryKeyUpdateStatementForEntity:
_fixPrimaryKeyTableFromEntitiesAndJoinsUsingConnection:
_fixPrimaryKeyTableFromEntitiesUsingConnection:
schemaValidationConnection
canConnect
databaseIsEmpty
_doBasicTableNameCheckUsingConnection:
_checkAndRepairSchemaUsingConnection:
_doUnboundedGrowthCheckAndConstraintUsingConnection:
_cacheModelIfNecessaryUsingConnection:
_checkAndRepairTriggersUsingConnection:
_checkAndRepairHistoryTrackingUsingConnection:
_checkAndRepairCloudKitMetadata:
_fixPrimaryKeyTablesUsingConnection:
debugDefault
_setMetadata:clean:
initWithBlock:context:sqlCore:
dispatchRequest:withRetries:
_loadAndSetMetadata
_loadAndSetMetadataReadOnly
_clearBinding
disconnectAllConnections
rowCacheForGeneration:
removeRowCacheForGenerationWithIdentifier:
initWithObjectID:context:sqlCore:
exception
localError
initWithObjectID:relationship:context:sqlCore:
_newValuesForRelationship:forObjectWithID:withContext:error:
entityForFetchRequest:
setTransactionInMemorySequence:
transactionInMemorySequence
notificationWithName:object:userInfo:
postNotification:
hasHistoryTracking
token
isDelete
initWithTransactionID:delete:
entityForObject:
rootEntity
initForEntitiesAndCounts:context:sqlCore:
processFetchRequest:inContext:
processCountRequest:inContext:
processSaveChanges:forContext:
processRefreshObjects:inContext:
processBatchUpdate:inContext:error:
processBatchDelete:inContext:error:
processChangeRequest:inContext:error:
processCloudMetadataRequest:inContext:error:
stringByDeletingPathExtension
hasAttributesWithExternalDataReferences
externalDataLinksDirectory
fetchCachedModel
setLocalError:
sanityCheckFileAtURL:options:error:
cachedModelWithError:
removeItemAtURL:error:
copyItemAtURL:toURL:error:
moveItemAtURL:toURL:error:
initAsQueryGenerationTrackingConnectionForSQLCore:
supportsComplexFeatures
_registerNewQueryGenerationSnapshot:pointerResponsibility:
_initializeQueryGenerationTrackingConnection
currentQueryGenerationIdentifier
initWithValue:store:freeValueOnDealloc:
routeStoreRequest:
isUbiquitized
initForSQLCore:
resetExternalDataReferencesDirectories
setExclusiveLockingMode:
newFetchUUIDSForSubentitiesRootedAt:
insertImportOperation:
pendingRelationships
insertImportPendingRelationship:withOperationPrimaryKey:
fetchedPKNum
deleteCloudKitMetadataEntity:withPrimaryKeys:
insertAncillaryModelObject:withEntity:
updateAncillaryModelObject:withEntity:
_dropOldCloudKitTables
generateSQLStatmentForSourcesAndOrderKeysForDestination:inToMany:
generateSQLStatmentForSourcesAndOrderKeysForDestination:inManyToMany:
_forceDisconnectOnError
endFetchAndRecycleStatement:
initWithEntity:sqlString:
_aContextSomewhereCaresAboutGenerations
registerCurrentQueryGenerationWithStore:
ancillarySQLModels
fetchMaxPrimaryKeyForEntity:
initWithTransactionNumber:andStoreID:
setColoredLoggingDefault:
useConcurrentFetching
presentedItemURL
presentedItemOperationQueue
relinquishPresentedItemToReader:
relinquishPresentedItemToWriter:
savePresentedItemChangesWithCompletionHandler:
accommodatePresentedItemDeletionWithCompletionHandler:
presentedItemDidMoveToURL:
presentedItemDidChange
presentedItemDidChangeUbiquityAttributes:
presentedItemDidGainVersion:
presentedItemDidLoseVersion:
presentedItemDidResolveConflictVersion:
accommodatePresentedSubitemDeletionAtURL:completionHandler:
presentedSubitemDidAppearAtURL:
presentedSubitemAtURL:didMoveToURL:
presentedSubitemDidChangeAtURL:
presentedSubitemAtURL:didGainVersion:
presentedSubitemAtURL:didLoseVersion:
presentedSubitemAtURL:didResolveConflictVersion:
primaryPresentedItemURL
observedPresentedItemUbiquityAttributes
objectIDFactoryForPersistentHistoryEntity:
_newObjectIDForEntityDescription:pk:
newForeignKeyID:entity:
externalLocationForFileWithUUID:
safeguardLocationForFileWithUUID:
_updateAutoVacuumMetadataWithValues:
dispatchManager
connectionForMigration
_debugConnection
fileProtectionLevel
isInitialized
_cacheRows:
_uncacheRows:
shouldNotifyFOKChanges
_purgeRowCache
_newReservedKeysForEntities:counts:
_newObjectIDForEntity:referenceData64:
writeImportOperation:
fetchOutstandingImportOperations
evictResolvedRelationships:
fetchMirroredRelationshipsWithRecordNames:
fetchMirroredRelationshipsByCKRecordID:
updateMirroredRelationshipsByAddingRelationships:updatingRelationships:andDeletingRelationships:
hasAncillaryModels
hasCreatedAncillaryModelTables
_setHasAncillaryModels:
dbKey
entitiesToInclude
entitiesToExclude
_schemaValidationConnection
_dispatchManager
_generationalRowCache
_observer
_sqlCoreStateLock
_externalDataReferencesDirectory
_transactionInMemorySequence
_metadataIsClean
_sqlCoreFlags
_queryGenerationTrackingConnection
_ancillaryModels
_ancillarySQLModels
_historyTrackingOptions
_dbKey
_retainedBinding
_purgeCaches:
_core
_validateCollationType:forProperty:
_resolveProperty
_validateCollationTypeChangeFrom:to:
setCollationType:
setAscending:
indexDescription
_setIndexDescription:
_collationType
_indexDescription
_indexElementDescriptionFlags
rtreeIndexes
initForIndexDescription:sqlEntity:
_entityOffset
generateTableName:isAncillary:
_generateIndexes
_doPostModelGenerationCleanup
isColumn
columnsToFetch
toOneRelationship
isVirtual
hasSubentities
subentityMaxID
_addRootColumnToFetch:
_addColumnToFetch:
_addForeignOrderKeyForToOne:entity:
_modelHasPrecomputedKeyOrder
_recordHasVirtualToOnes
initWithEntity:inverseToMany:
_setInverseRelationship:
_addVirtualToOneForToMany:withInheritedProperty:
_useLeopardStyleHashing
_useSnowLeopardStyleHashing
_precomputedKeyOrderForEntity:
isRelationship
_setInverseManyToMany:
_generateProperties
setSuperentity:
_addIndexedEntity:
_generateIDWithSuperEntity:nextID:
multicolumnUniquenessConstraints
uniqueAttributes
containsIndex:
addIndexes:
_collectFKSlots:error:
setEntityForReadOnlyFetch:
_isBinary
binaryIndexForIndexDescription:
rtreeIndexForIndexDescription:
initWithModel:entityDescription:
toManyRelationships
fetchIndexForKey:
columnsToCreate
virtualForeignKeyColumns
hasInheritance
setEntityID:
isKindOfSQLEntity:
_sqlPropertyWithRenamingIdentifier:
_generateInverseRelationshipsAndMore
_organizeConstraints
_generateMulticolumnUniquenessConstraints
_entityIsBroken:
_toOneRange
addPropertiesForReadOnlyFetch:keys:context:
propertyMapping
_hasAttributesMonitoredByTriggers
_hasAttributesBackedByTriggers
indexForIndexDescription:
_entityDescription
_propertyAllCache
_propertiesAllToManysCache
_propertyManyToManyCache
_columnsToFetch
_ekColumns
_fkColumns
_fokColumns
_attrColumns
_virtualFKs
_primaryKey
_entityKey
_optLockKey
_mappingGenerator
_entityID
_subentityMaxID
_uniqueAttributes
_multicolumnUniquenessConstraints
_fetch_entity_plan
_rtreeIndices
_odiousHashHackStorage
_sqlentityFlags
attributes
_allowToMany
setLimitIntermediate:
selectIntermediate
setFetchColumns:
setUseDistinct:
setIsCount:
isFunctionScoped
setJoinType:
whereIntermediate
_promoteJoinsForSubqueryScopedKeypaths
_generateJoinSQLStringInContext:
fetchIntermediateForKeypathExpression:
fetchIntermediate
isDictionaryCountFetch
setDictionaryCountFetch:
setSelectIntermediate:
groupByIntermediate
setGroupByIntermediate:
addGroupByKeypath:
groupByClauseContainsKeypath:
havingIntermediate
setHavingIntermediate:
setOffsetIntermediate:
addJoinIntermediate:atKeypathWithComponents:
finalJoinForKeypathWithComponents:
promoteToOuterJoinsAlongKeypathWithComponents:
promoteToOuterJoinAtKeypathWithComponents:
joinIntermediates
selectDistinct
_selectClause
_groupByClause
_havingClause
_offsetClause
_groupByKeypaths
_isDictionaryCountFetch
_joinIntermediates
_joinKeypaths
uppercaseString
_setName:
initWithEntity:foreignKey:
initForReadOnlyFetchingOfEntity:toOneRelationship:
setFKForReadOnlyFetch:
_foreignKey
initWithEntity:toOneRelationship:
_toOne
_addBindVarForConstVal2:inContext:
initWithConstantValue:inScope:
count:
max:
min:
average:
sum:
isUpdateScoped
_generateUncorrelatedSubqueryStringWithSymbol:forAttribute:inContext:
_generateCorrelatedSubqueryStringWithSymbol:forExpression:inContext:
_generateArgumentStringForCollection:inContext:
_generateSQLForSubqueryExpression:trailingKeypath:inContext:
_functionExpressionIsSubqueryFollowedByKeypath:
onlyFetchesAggregates
_generateSelectForAggregateStringWithSymbol:argument:inContext:
isHavingScoped
function
generateType1SQLString:inContext:
uppercase:
generateType2SQLString:inContext:
lowercase:
onesComplement:
generateType3SQLString:keypathOnly:inContext:
abs:
noindex:
_generateType4SQLForSymbol:inContext:
_generateSQLForCountInContext:
add:to:
_generateMathStringWithSymbol:inContext:
from:subtract:
multiply:by:
divide:by:
modulus:by:
bitwiseAnd:with:
bitwiseOr:with:
leftshift:by:
rightshift:by:
distinct:
_generateDistinctStringInContext:
_generateNowStringInContext:
length:
_generateLengthStringInContext:
indexed:by:
_generateRtreeIndexStringInContext:
functionIsAcceptableAsAggregate:
_knownPrimaryKeyForObjectID:
_knownEntityKeyForObjectID:
_hasOrderKeys
numberWithLong:
_populateOrderKeysUsingSnapshot:orderKeys:newIndexes:reorderedIndexes:
_populateOrderKeysInOrderedSet:usingSourceObjectID:inverseRelationship:newIndexes:reorderedIndexes:
_orderKeyForObject:
_orderKeyForObject:fromSourceObjectID:inverseRelationship:inOrderedSet:
initWithArray:range:copyItems:
inverseToOne
_updateOrderKeysFromOrderOfObjectIDs:
createNestedObjectFaultContextForObjectWithID:
setForeignOrderKeySlot:orderKey:
_registerChangedFOKs:deletions:forSourceObject:andRelationship:
setForeignKeySlot:int64:
initForRelationship:
_newOrderKeys
_newRowCacheRowForToManyUpdatesForRelationship:rowCacheOriginal:originalOrderKeys:originalSnapshot:value:added:deleted:sourceRowPK:properties:sourceObject:newIndexes:reorderedIndexes:
_findOrCreateChangeSnapshotForGlobalID:
isMaster
_correlationTableUpdateTrackerForRelationship:
trackInserts:deletes:reorders:forObjectWithID:
trackReorders:forObjectWithID:
initWithLongLong:
_knownPrimaryKeyForObject:
_knownEntityKeyForObject:
setForeignEntityKeySlot:entityKey:
_knownOrderKeyForObject:from:inverseToMany:
_addExternalReferenceDataToDelete:
_createdByUbiquityImport
initForExternalLocation:safeguardLocation:data:protectionLevel:
_addExternalReferenceDataToSave:
_recordToManyChangesForObject:inRow:usingTimestamp:inserted:
allocForSQLEntity:
initWithSQLEntity:objectID:
_entityForObject:
_populateRow:fromObject:timestamp:inserted:
_prepareForDeletionOfExternalDataReferencesForObject:
_createCorrelationTrackerUpdatesForDeletedObject:
_createRowsForSave
_computeUpdatedRowSplit
getObjects:andKeys:count:
saveRequest
savingContext
newObjectsForFastLockConflictDetection
newObjectsForExhaustiveLockConflictDetection
newObjectsForUniquenessConflictDetectionGivenReportedFailures:
newRowsToRemoveFromRowCache
newRowsToAddToRowCache
newPrimaryRowsUpdatedForRowCache
newAncillaryRowsUpdatedForRowCache
newCorrelationTableUpdates
toManyRelationshipChanges
foreignOrderKeysBeingUpdated
foreignOrderKeysBeingDeleted
externalDataReferencesToSave
externalDataReferencesToDelete
_changeCache
_insertCache
_toManyCache
_rowsToDelete
_updatedByRequest
_updatedByForeignKey
_updatedFOKRowsInCurrentSave
_deletedFOKRowsInCurrentSave
_externalDataReferencesToSave
_externalDataReferencesToDelete
_toManyRelationshipChanges
initWithUpdatedRecords:deletedRecordTypeToRecordIDs:options:
encryptedValuesByKey
deleteMirroredRelationshipWithCKRecordID:
addObjectID:toCache:andUniqueIdentifier:
initializeForRecordNames:mirroredRelationshipRecordNames:withSQLCore:
addUnresolvedRecordName:forRecordType:toCache:
addObjectID:toCache:forRecordWithType:andUniqueIdentifier:
importOperations
_updatedRecords
_deletedRecordTypeToRecordID
_deletedObjectIDs
_modifiedRecords
_updatedRelationships
_deletedRelationships
_recordTypeToRecordNameToObjectID
_recordTypeToUnresolvedRecordNames
_importOperations
_invalidatedPendingRelationships
_pendingRelationshipsToTry
initWithUnsignedInt:
_predicateRestrictingSuperentitiesForEntity:
_predicateRestrictingToSubentitiesForEntity:
andPredicateWithSubpredicates:
_predicateForSpecificEntity:
governingAlias
initWithEntity:alias:fetchColumns:inScope:
setWhereIntermediate:
initWithSortDescriptors:inScope:
setOrderIntermediate:
initWithLimit:inScope:
initWithOffset:inScope:
initWithProperties:inScope:
allModifierPredicates
initWithEntity:alias:inScope:
generateWhereIntermediatesInContext:
generateGroupByIntermediatesForProperties:inContext:
generateHavingIntermediateForPredicate:inContext:
generateSelectIntermediateInContext:
generateOrderIntermediateInContext:
generateIntermediateForLimit:inContext:
limitIntermediate
generateIntermediateForOffset:inContext:
initWithFetchIntermediate:inScope:
setUpdateColumnsIntermediate:
initWithEntity:inScope:
generateUpdateColumnsIntermediateInContext:
updateColumnsIntermediate
entityNameToFetch
predicateForRequestInContext:
initializeContextForRequest:ignoreInheritance:nestingLevel:
prefetchingSubstitutionVariables
initializeContextForFetchRequest:ignoreInheritance:nestingLevel:nestIsWhereScoped:requestContext:
initializeContextForUpdateRequest:
newStatementWithEntity:
setImpossibleCondition:
setSQLString:
generateIntermediatesForFetchInContext:countOnly:
generateIntermediatesForUpdateInContext:
setBindIntarrays:
setBindVariables:
cacheFakeEntityForFetch:
setCachedStatementInfo:
newSQLStatementForRequest:ignoreInheritance:countOnly:nestingLevel:nestIsWhereScoped:requestContext:
initializeContextForIndexGeneration:inStore:
initForIndex:withScope:
newSQLStatementForFetchRequest:ignoreInheritance:countOnly:nestingLevel:nestIsWhereScoped:requestContext:
newSQLStatementForUpdateRequest:
newSQLStatementForChangeRequest:
newSQLStatmentForBinaryIndex:inStore:
_persistentStore
isWhereScoped
isIndexExpressionScoped
expressionIsBasicKeypath:
governingEntity
_entitySpecificationKeypath
_setEntitySpecificationKeypath:
_promoteJoinsForSubqueryScopedKeypath:
promoteJoinsInKeypathsForExpression:
trueExpression
falseExpression
_promoteJoinsForKeypathExpression:
_promoteJoinsForFunctionExpression:
_promoteJoinsForAggregateExpression:
_promoteJoinsForTernaryExpression:
_generateSQLForKeyPathExpression:allowToMany:inContext:
_generateSQLForConstantCollection:inContext:
_generateSQLForVariableExpression:allowToMany:inContext:
_canDoASubselectForExpression:inContext:
bindVariables
_generateSQLForFunctionExpression:allowToMany:inContext:
_generateSQLForExpressionCollection:allowToMany:inContext:
_generateSQLForFetchExpression:allowToMany:inContext:
_generateSQLForTernaryExpression:allowToMany:inContext:
isSimpleNoIndexFunction:
_scope
isPrimaryKey
newGeneratorWithStatement:
_statementForFetchRequestContext:ignoreInheritance:countOnly:nestingLevel:
newStatementWithoutEntity
typeStringForColumn:
newStatementWithSQLString:
_generateFragmentsForEntity:inArray:
columnSQLType
typeStringForSQLType:
orderColumnSQLType
newCreateIndexStatementForColumnWithName:inTableWithName:
createStatementsForStore:
newCreateIndexStatementForColumn:
newCreateIndexStatementForCorrelationTable:
newCreateBinaryIndexStatementsForIndex:onEntity:
newCreateRTreeIndexStatementsForIndex:onEntity:
newCreateIndexStatementsForEntity:defaultIndicesOnly:
createSQLStatementsForTriggerAttribute:withSQLEntity:
createSQLStatementsForRTreeTriggersForLocationAttribute:withSQLEntity:existingRtreeTables:
generateCorrelationTableTriggerStatementsForRelationship:existing:correlationTableTriggers:error:
generateTriggerForEntity:alreadyCreated:correlations:batchHistory:fragments:error:
_tombstonesForSubEntitiesOf:
createCleanupSQLForRelationship:existing:correlationTableTriggers:batchHistory:error:
generateTriggerStatementsForEntity:usingRelationshipCleanupSQL:error:
generateDeleteHistoryTriggerForEntity:error:
fetchRequestForObjectsToDelete
affectedObjectIDs
newSelectStatementWithFetchRequest:ignoreInheritance:
stringByReplacingCharactersInRange:withString:
isImpossibleCondition
setTrackChangedRowCount:
bindIntarrays
_cachedTriggersForEntity:
_cacheTriggers:forEntity:
generateSubselectForColumn:givenObjects:
generateStatementForCheckingUniqueAttributesOnObjects:usingSQLCore:
generateStatementForCheckingMulticolumnConstraint:onObjects:usingSQLCore:
sqliteVersion
newInsertStatementWithRow:
newUpdateStatementWithRow:originalRow:withMask:
newConstrainedValuesUpdateStatementWithRow:
newDeleteStatementWithRow:
newSelectStatementWithFetchRequestContext:ignoreInheritance:
newCountStatementWithFetchRequestContext:
newCorrelationInsertStatementForRelationship:
newCorrelationDeleteStatementForRelationship:
newCorrelationMasterReorderStatementForRelationship:
newCorrelationMasterReorderStatementPart2ForRelationship:
newCorrelationReorderStatementForRelationship:
newCreateTableStatementForEntity:
newCreatePrimaryKeyTableStatement
newPrimaryKeyInitializeStatementForEntity:withInitialMaxPK:
newDropTableStatementOrFailForTableNamed:
newRenameTableStatementFrom:to:
newCreateIndexStatementForColumns:name:
newCreateIndexStatementsForEntity:
newCreateTriggersForEntity:existingRtreeTables:
generateDeleteStatementsForRequest:error:
_cachedDeleteTriggersByEntity
_ensureWalFileExists
beginReadTransaction
_currentQueryGenerationSnapshot:
_freeQueryGenerationSnapshot:pointerResponsibility:
releaseSQLStatement
clearCachedStatements
_ensureNoStatementPrepared
_ensureNoFetchInProgress
_ensureDatabaseOpen
_fetchMaxPrimaryKeyForEntity:
isOpen
openAtPath:withKey:handle:flags:module:checkpointOnClose:
createTableForEntity:
createManyToManyTablesForEntity:
createIndexesForEntity:
createTriggersForEntities:
_executeSQLString:
performIntegrityCheck
query
setDictionary:
_databaseOpenURLStringForURL:
_registerExtraFunctions
_restoreBusyTimeOutSettings
_configureSynchronousMode
hasMetadataTable
_configureIntegrityCheck
createSchema
_configurePragmaOptions:createdSchema:
configureUbiquityMetadataTable
createAncillaryModelTables
forceTransactionClosed
_clearTransactionCaches
_clearCachedStatements
_finalizeStatement
hasOpenTransaction
_ensureNoTransactionOpen
prepareSQLStatement:
cacheCurrentDBStatementOn:
resetSQLStatement
transactionDidBegin
_setupVacuumIfNecessary
transactionDidCommit
transactionDidRollback
statementCacheForEntity:
insertStatement
setCachedSQLiteStatement:forConnection:
cacheInsertStatement:
addVMCachedStatement:
_bindVariablesWithInsertedRow:
execute
_clearBindVariablesForInsertedRow
_rowsChangedByLastExecute
debugLogLevel
newUpdateMaskFrom:
cachedUpdateStatementForEntity:andDeltasMask:
cacheUpdateStatement:forEntity:andDeltasMask:
_bindVariablesWithUpdatedRow:andOriginalRow:forDeltasMask:
_clearBindVariablesForUpdateStatement:forDeltasMask:
_dataMaskForEntity:andDeltaMask:
cachedUpdateConstrainedValuesStatmentForEntity:
cacheUpdateConstrainedValuesStatement:forEntity:
_bindVariablesForConstrainedValuesWithRow:
_clearBindVariablesForConstrainedValuesUpdateStatement:
deletionStatement
cacheDeletionStatement:
_bindVariablesWithDeletedRow:
hasInserts
correlationInsertStatementForRelationship:
cacheCorrelationInsertStatement:forRelationship:
executeCorrelationChangesForValue1:value2:value3:value4:
enumerateInsertsUsingBlock:
hasDeletes
correlationDeleteStatementForRelationship:
cacheCorrelationDeleteStatement:forRelationship:
enumerateDeletesUsingBlock:
hasMasterReorders
correlationMasterReorderStatementForRelationship:
cacheCorrelationMasterReorderStatement:forRelationship:
enumerateMasterReordersUsingBlock:
correlationMasterReorderStatementPart2ForRelationship:
enumerateMasterReordersPart2UsingBlock:
hasReorders
correlationReorderStatementForRelationship:
cacheCorrelationReorderStatement:forRelationship:
enumerateReordersUsingBlock:
writeCorrelationInsertsFromTracker:
writeCorrelationDeletesFromTracker:
writeCorrelationMasterReordersFromTracker:
writeCorrelationReordersFromTracker:
bindTempTableForBindIntarray:
bindTempTablesForStatementIfNecessary:
_endFetch
isFetchInProgress
setIntarrayTableName:
setIntarrayTable:
intarrayTable
intarrayTableName
sqlStatement
rangeValue
_bytesPtrForStore
_bytesLengthForStore
initWithUUIDString:
getUUIDBytes:
setColumnsToFetch:
_clearOtherStatements
initWithStoreBytes:length:externalLocation:safeguardLocation:protectionLevel:
stringWithFileSystemRepresentation:length:
initWithUUIDBytes:
valueWithRange:
_newValueForColumn:atIndex:inStatement:
containsString:
_tombstonesForEntity:
handleCorruptedDB:
entityForID:
newFetchedArray
createMetadata
dataWithPropertyList:format:options:error:
metadataColumns
propertyListWithData:options:format:error:
_hasTableWithName:
_decompressedModelWithData:
createCachedModelTable
_compressedDataWithModel:
_configurePageSize
_configureAutoVacuum
createTablesForEntities:
willCreateSchema
didCreateSchema
createPrimaryKeyTableForModel:knownEmpty:
_getCurrentAutoVacuumValue
_newTransactionForRequestContext:
insertChange:type:transactionID:relationshipChanges:context:
insertUpdate:transactionID:updatedAttributes:
_hasOldHistoryTrackingTablesV0
_hasOldHistoryTrackingTablesV1
_dropOldHistoryTrackingTablesV0
_dropOldHistoryTrackingTablesV1
isEqualToNumber:
insertBatchDeleteChange:transactionID:
clearBatchChangedObjectsForHistoryTracking
generatePrimaryKeysForEntity:batch:
prepareInsertStatementForAncillaryEntity:
bundleIdentifier
processName
_lastInsertRowID
_propertyDataForEntity:withSetOfPropertyNames:
setBindValue:
updatePKNumFromInsert:
isAttribute
attributesOfItemAtPath:error:
_adoptQueryGenerationWithSnapshot:
registerCurrentQueryGenerationWithStore:retries:
indexOfObjectPassingTest:
_performPostSaveTasks:andForceFullVacuum:
_setDebugFlags:
__INode_Changed_AllThatIsLeftToUsIsHonor__
connectionManager
queue
_isQueryGenerationTrackingConnection
isWriter
setIsWriter:
insertRow:
prefetchRequestCache
updateRow:forRequestContext:
updateConstrainedValuesForRow:
deleteRow:forRequestContext:
uncacheVMStatement:
writeCorrelationChangesFromTracker:
selectRowsWithStatement:cached:
selectCountWithStatement:
newFetchedChangesArray
fetchResultSet:usingFetchPlan:
setSecureDeleteMode:
rowsChangedByLastStatement
_vmstatement
hasPrimaryKeyTable
_buffersForRegisteredFunctions
logQueryPlanForStatement:
dropUbiquityTables
hasCloudKitTables
processSaveRequest:
processUpdateRequest:withOIDs:forAttributes:
hasHistoryTransactionWithNumber:
triggerBatchDeleteUpdatedRowForEntityID:primaryKey:relationshipName:
triggerBatchDeletedRowForEntityID:primaryKey:tombstone:
processDeleteRequest:
registerMigrationUpdateFunctionWithMigrator:
hasMirroredRelationshipTable
executeAttributeUniquenessCheckSQLStatement:returningColumns:
executeMulticolumnUniquenessCheckSQLStatement:returningColumns:
adoptQueryGenerationWithIdentifier:
_checkActiveGenerationsForIdentfier:
triggerUpdatedRowInTable:withEntityID:primaryKey:columnName:newValue:
_workingURL
_dbPath
_transactionIsOpen
_transactionIsCurrentlyReadOnly
_useSyntaxColoredLogging
_sqlStatement
_metadataColumns
_rowsProcessedCount
_lastEntityKey
_finalEntity
_lastEntity
_fetchPKStatement
_updatePKStatement
_beginStatement
_commitStatement
_rollbackStatement
_vmCachedStatements
_pragmaSettings
_mObjectIDsUpdatedByTriggers
_batchChangedObjectsForHistoryTracking
_statementCachesByEntity
_prefetchRequestCache
_cachedEntityUpdateStatements
_cachedEntityConstrainedValuesUpdateStatements
_timeOutOption
_timeOutIncrement
_extraBuffersForRegisteredFunctions
_dbPathRegisteredWithBackupd
_vacuumTracker
_temporaryTables
_sqliteConnectionFlags
_debugInode
_activeGenerations
initWithCString:encoding:
operatorWithType:modifier:options:
performOperationUsingObject:andObject:
retainedLocale
lengthOfBytesUsingEncoding:
srcModel
dstModel
_updatedPropertiesForEntity:andData:
_workBlock
destinationAlias
initForRelationship:sourceAlias:destinationAlias:correlationAlias:direct:inScope:
createToOneJoinIntermediateForProperty:lastStep:inScope:context:
createToManyJoinIntermediateForProperty:lastStep:inScope:context:
createManyToManyJoinIntermediateForProperty:direct:lastStep:inScope:context:
sourceAlias
setSourceAlias:
_generateToOneSQLStringInContext:
_generateToManySQLStringInContext:
_generateManyToManySQLStringInContext:
createJoinIntermediatesForKeypath:startEntity:startAlias:forScope:inStatementIntermediate:inContext:
isDirect
setDirect:
setDestinationAlias:
correlationAlias
joinType
_sourceAlias
_destinationAlias
_correlationAlias
_direct
_propertyDescriptionForKeypath:startingAtEntity:allowToMany:lastKeyVisited:inContext:
_propertyDescriptionsForKeypath:rootedAtEntity:allowToMany:lastKeyVisited:inContext:
_generateSQLForProperty:startEntity:startAlias:keypath:inContext:
substitutePK
_substitutePK
inverseManyToMany
_setCorrelationTableName:
_setOrderColumnName:
isTableSchemaEqual:
_correlationTableName
_orderColumnName
initWithManagedObjectModel:configurationName:retainHashHack:brokenHashVersion:entityIDOffset:
_generateModel:error:
initWithManagedObjectModel:configurationName:retainHashHack:brokenHashVersion:
_entityMapping
initWithManagedObjectModel:configurationName:
_sqlEntityWithRenamingIdentifier:
_retainHashHack
_mom
_entitiesByName
_entityDescriptionToSQLMap
_brokenHashVersion
_retainLeopardStyleDictionaries
_hasVirtualToOnes
_entityIDOffset
_lastEntityID
_checkElements:
_isCompoundIndexCompatible
setElements:
setPartialIndexPredicate:
_isPurelyModeledIndex
_elements
_partialIndexPredicate
ascending
_generateSQLForOrderedManyToManyInverse:inContext:
_generateSQLForOrderedToManyInverse:inContext:
comparator
localizedCompare:
localizedStandardCompare:
fetch_request
requested_batch_size
sql_core
sql_model
statement_entity
current_context
row_cache
entity_for_ek_funptr
flags
fetchPlan
fetchStatement
isUsingCachedStatement
totalUnitCount
isCancelled
useColoredLogging
sqlModel
newBatchRowAllocation:count:forSQLEntity:withOwnedObjectIDs:andTimestamp:
storeIsUbiquitized
initWithSQLEntity:ownedObjectID:andTimestamp:
addFaultsThatWereFired:
visitPredicateOperator:
keypaths
subqueries
setExpressions
_compoundPredicate
_allModifierPredicates
_setExpressions
_subqueries
initWithSQLCore:priority:seedConnection:
handleStoreRequest:
executeRequestUsingConnection:
scheduleBarrierBlock:
initializationConnection
scheduleConnectionsBarrier:
_maxCountOfTombstonesInModel:
createModelsWithTombstoneCount:
coordinatorWillRemoveStore:
removeObserver:
declareStoreDead
pfcloudstoremonitor_is_holding_your_store_open_waiting_for_cloudkit_activity_to_finish
initForStore:
monitorGroup
storeIsAlive
monitoredStore
retryCount
timeoutSeconds
_monitorGroup
_aliveLock
_storeIsAlive
_retryCount
_timeoutSeconds
_monitoredStore
cacheFaultingStatement:
createCorrelationCacheDictionary
insertOrReplaceStatement:forRelationship:inDictionary:
faultingStatement
cacheCorrelationMasterReorderStatementPart2:forRelationship:
preparedFaultingCachesForRelationship:
cacheFaultingStatement:andFetchRequest:forRelationship:
_insertStatementCache
_deletionStatementCache
_faultingStatementCache
_toManyRelationshipStatementCache
_correlationInsertCache
_correlationDeleteCache
_correlationMasterReorderCache
_correlationMasterReorderCachePart2
_correlationReorderCache
sqlTypeString
_storeTokens
stringWithString:
dropStatementsForStore:
bulkUpdateStatementsForStore:
setPropertyDescription:
isForeignKey
isForeignEntityKey
isForeignOrderKey
isEntityKey
isOptLockKey
_propertyDescription
_fetchIndex
_slot
variable
initForReadOnlyFetchWithEntity:propertyDescription:
inverseOrderKey:
resolveVariableExpression:inContext:
_onlyFetchesAggregates
_variableToAliasMappings
_propertyToAliasMappings
_setForeignOrderKey:
_inverse
newBatchAllocation:count:withOwnedObjectIDs:
newObjectIDForToOne:
_validateToOnes
newColumnMaskFrom:columnInclusionOptions:
setObjectID:
_debug
initForCorrelationTarget:alias:fetchColumns:inScope:
setColumnAlias:
setFetchEntity:
_entityAlias
_correlationTarget
_fetchColumns
_useDistinct
_columnAlias
_isCount
_isNilExpression:
_generateSQLType3InContext:
_sqlTokenForPredicateOperator:inContext:
_cfStringOptionsFromPredicateOptions:
insertString:atIndex:
_generateSQLForString:expressionPath:wildStart:wildEnd:allowToMany:inContext:
_upperBoundSearchStringForString:context:
_generateSQLSubstringWildStart:wildEnd:inContext:
_entityDestinationIfKeyOfSomeSort:
_prefetchSourceOfUnidirectionalVirtualInverse:
_generateSQLForConstKeyArray:targetEntity:reboundFrom:inContext:
_generateSQLForConst:inManyToMany:expression:inContext:
_generateSQLForConst:inToMany:inContext:
_generateSQLForConst:inAttribute:expression:inContext:
initWithWorkingEntity:target:bounds:scope:
_generateSQLType1InContext:
_generateSQLType2InContext:
_generateSQLForMatchingOperator:inContext:
_generateSQLBeginsWithStringInContext:
_generateSQLEndsWithStringInContext:
_generateSQLContainmentStringInContext:
_generateSQLBetweenStringInContext:
_generateSQLBoundByStringInContext:
_generateSQLForWildSubStringForGlob:wildStart:wildEnd:
_comparisonPredicateScopedItem
_effectiveLeftExpression
_effectiveRightExpression
fetchHistoryAfterToken:
transactionNumber
author
contextName
changes
changedObjectID
tombstone
shouldExportManagedObject:
purgeMirroredRelationshipsForDeletedRecordNames:
applyChangesToSQLCore:
processRecordsToSave:andRecordIDsToDelete:inTransaction:historyTransactionID:completion:
initWithRecordsToSave:recordIDsToDelete:
setSavePolicy:
markAccessedRelationshipsUploadedAndPrune
setModifyRecordsCompletionBlock:
addOperation:
initWithOptions:store:zone:andDatabase:
exportIfNecessaryInTransaction:onQueue:completion:
_monitor
_database
_generatedCache
removeAllBindVariables
addBindIntarray:
removeAllBindIntarrays
fakeEntityForFetch
cachedStatementInfo
trackChangedRowCount
_bindVariables
_bindIntarrays
_isImpossibleCondition
_trackChangedRowCount
_fakeEntityForFetch
_cachedStatementInfo
_cachedSQLiteStatement
newUniqueNameWithBase:withLength:
invalidate
_names
checkPredicate:
_foundKeypath
_isKeypathScopedToSubquery:
setGoverningAlias:
setCorrelationToken:
_setVariableColumn:
setGoverningEntity:
canDoDirectJoinGivenPredicate:
_createCollectionJoinsForFetchInContext:
_createSelectClauseInFetchWithContext:
_trailingKeypath
_variableExpression
_fetchIntermediate
_selectFromEntity
_selectFromCorrelationTarget
_selectEntityAlias
_governingEntityForVariable
_variableColumn
_variableAlias
_targetColumn
_targetAlias
_keypathsToPromote
_hasTrailingFunction
_onlyTrailIsCount
_subqueryHasTruePredicate
initWithObservedStore:zone:mirroringOptions:
representativeObjectForEntity:withManagedObjectContext:cache:populate:
populateValuesOnObject:
populateRelationshipsOnObject:withCache:
representativeValueFor:
date
dataUsingEncoding:
newRepresentativeRecords
coordinator
setPreviousServerChangeToken:
initWithRecordZoneIDs:optionsByRecordZoneID:
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
processAccumulatedChangesForServerChangeToken:withAccumulatedUpdates:andDeletes:inTransaction:completion:
setRecordZoneFetchCompletionBlock:
setChangeToken:
initWithFailedRelationship:andOperation:
importIfNecessaryInTransaction:onQueue:completion:
database
importOperation
monitor
_resolvedRelationships
_importOperation
initWithRequest:connection:context:sqlCore:parentContext:
_cachedInfoForRequestor:
_cacheInfo:forRequestor:
_setupBindVariablesForCachedStatement:usingValues:
cachedStatement
_createStatement
cacheStatement:
_fireFaultsForValue:
_preparePredicate:
objectIDsToRegisterWithContext
persistRows:
createChildContextForNestedFetchRequest:
ubiquitousExternalReferenceLocationForUUID:
addObjectIDsToRegister:
addObjectsToAwaken:
objectsToAwaken
setFetchStatement:
sqlEntityForFetchRequest
isFaultRequest
setIsFaultRequest:
originalRequest
shouldUseBatches
setPrefetchingSubstitutionVariables:
faultsThatWereFired
setIsUsingCachedStatement:
_sqlModel
_fetchPlan
_objectIDsToRegister
_objectsToAwaken
_resultFaultsThatWereFired
_parentContext
_fileProtectionLevel
_isFaultRequest
_originalRequest
_shouldUseBatches
_storeIsUbiquitized
_isUsingCachedStatement
_concurrentFetchingPipelineRows
_prefetchingSubstitutionVariables
initWithRequest:context:sqlCore:idSets:columnName:
_idSets
initWithEntity:propertyDescription:virtualForToMany:
_foreignEntityKey
_foreignOrderKey
_isVirtual
_relatedNodes
_map
_entityName
setExternalName:
_externalName
capitalizedString
mappingForAttribute:forConfigurationWithName:
mappingForRelationship:forConfigurationWithName:
primaryKeyForEntity:
joinsForRelationship:
mappingForEntity:forConfigurationWithName:
mappingsForConfigurationWithName:inModel:
internalNameForEntityName:version:
internalNameForPropertyName:version:
ckRecordID
cacheMirroredRelationship:noteAccess:
isPending
initWithMirroredManyToMany:
processDeleteForObjectWithRecordName:andObjectID:
_recordNameToMirroredRelationships
_recordNameToPendingRelationships
_ckRecordNameToMirroredRelationship
_pendingMirroredRelationships
_mtmKeyToMirroredRelationship
_accessedMtmKeys
_insertedMirroredRelationships
_updatedMirroredRelationships
_deletedMirroredRelationships
_deletedPendingRelationships
resourceBundles
sourceType
sourceOptions
sourceMetadata
setSourceMetadata:
destinationURL
destinationType
migrateStoreAtURL:toURL:storeType:options:withManager:error:
migrationStoreOptionsFromStoreOptions:
sourceModelForStoreAtURL:metadata:error:
createMigrationManagerForSourceModel:destinationModel:error:
migrateStoreAtURL:withManager:metadata:options:error:
_sourceURL
_sourceConfiguration
_sourceOptions
_sourceMetadata
_destinationURL
_destinationType
_destinationConfiguration
_destinationOptions
_resourceBundles
_workingWithSkewedSource
URLForDirectory:inDomain:appropriateForURL:create:error:
sourceConfiguration
sourceURL
stringByAppendingPathExtension:
externalDataReferencesURLForDestination:forStoreOfType:
setSourceModel:
mappingModelForSourceModel:destinationModel:error:
setMappingModel:
destinationOptionsForMigration:sourceMetadata:error:
setDestinationOptions:
destinationOptions
destinationTypeForMigration:sourceMetadata:error:
setDestinationType:
setMigrationManager:
migrationManager
destinationURLForMigrationSourceURL:createDocumentReplacementDirectory:error:
setDestinationURL:
willPerformMigrationWithManager:
handleMigrationError:inManager:
didPerformMigrationWithManager:
destinationConfiguration
addMigratedStoreToCoordinator:withType:configuration:URL:options:error:
setSourceURL:
setSourceConfiguration:
setSourceOptions:
setDestinationConfiguration:
destinationConfigurationForMigration:sourceMetadata:error:
setResourceBundles:
initWithBytes:
bits
_counter
_uuid128
_ensureLocalizationDictionaryIsInitialized
_localizedStringForKey:value:
_cachedObjectForKey:value:
_localizedPropertyNameForProperty:entity:
_localizationBundle
_modelStringsFileName
_localizationDictionary
_hasSetLocalizationDictionary
_mergedPolicies
_keyPathContainsNonPersistedProperties:
_managedObjectContextDidSave:
controller:didChangeObject:atIndexPath:forChangeType:newIndexPath:
controller:didChangeSection:atIndex:forChangeType:
controllerDidChangeContent:
controllerWillChangeContent:
controller:sectionIndexTitleForSectionName:
_managedObjectContextDidChange:
_managedObjectContextDidChangeObjectIDs:
_restoreCachedSectionInfo
_computeSectionInfo:error:
_recursivePerformBlockAndWait:withContext:
indexAtPosition:
_sectionNameForObject:
indexPathWithIndexes:length:
sectionIndexTitles
_CoreDataSectionCachesPath
_set__PF_LINKEDAFTERNORTHSTAR:
_set__PF_LINKEDAFTERWILDCAT:
_set__PF__SkipSimulatorAsserts:
deleteCacheWithName:
initWithFetchRequest:managedObjectContext:sectionNameKeyPath:cacheName:
performFetch:
objectAtIndexPath:
indexPathForObject:
sectionIndexTitleForSectionName:
sections
sectionForSectionIndexTitle:atIndex:
sectionNameKeyPath
cacheName
_sectionNameKeyPath
_sectionNameKey
_cacheName
_cache
_sortKeys
_sectionsByName
_sectionIndexTitles
_sectionIndexTitlesSections
_sectionCachePath
initWithContentsOfMappedFile:
dictionaryWithObjects:forKeys:
_computeSectionInfoWithGroupBy:error:
_resolveSectionIndexTitleForSectionName:
_makeMutableFetchedObjects
_indexOfFetchedID:
_objectInResults:
_createNewSectionForObject:
_insertIndexForObject:inArray:lowIdx:highIdx:sortDescriptors:
_insertObjectInFetchedObjects:atIndex:
_updateSectionOffsetsStartingAtSection:
_indexPathForIndex:
_sectionNumberForIndex:
_removeObjectInFetchedObjectsAtIndex:
_updateFetchedObjectsWithDeleteChange:
_updateFetchedObjectsWithInsertChange:
_fetchedObjectsArrayOfObjectIDs
_preprocessInsertedObjects:insertsInfo:newSectionNames:
_preprocessDeletedObjects:deletesInfo:sectionsWithDeletes:
_preprocessUpdatedObjects:insertsInfo:deletesInfo:updatesInfo:sectionsWithDeletes:newSectionNames:treatAsRefreshes:
_updateFetchedObjectsWithInsertedObjects:deletedObjects:updatedObjects:
filteredSetUsingPredicate:
_lowerMoveOperationsToUpdatesForSection:withInsertedObjects:deletedObjects:updatedObjects:
_core_managedObjectContextDidChange:
_appendAffectedStoreInfoToData:adjustedOffset:
_updateCachedStoreInfo
compareObject:toObject:
_hasFetchedObjects
_dumpSectionInfo
_generateSQLForPredicate:inContext:
_newMetadataModelV1
_newMetadataModel
addAttributes:toPropertiesOfEntity:
addRelationships:toPropertiesOfEntity:
exportedAt
exportUUID
operations
_exportedAt
_exportUUID
_operations
operationUUID
sortIndex
status
exportMetadata
_operationUUID
_sortIndex
_status
_exportMetadata
_objects
operation
_operation
initWithFetchResult:andSQLEntity:
_addPendingRelationship:
importDate
changeTokenBytes
mirroredRelationships
_importDate
_changeTokenBytes
_pendingRelationships
_mirroredRelationships
initWithFetchResult:operationsByPk:andSQLEntity:
_isDeleted
_relatedEntityName
_relationshipName
_fetchedPKNum
ckRecordSystemFields
_ckRecordID
_ckRecordSystemFields
_isPending
_isUploaded
_populateSQLValuesByPropertyFromTransforms:migrationContext:
_populateSQLValuesForVirtualToOnesWithMigrationContext:
entityMigrationDescriptionForEntity:
entityMapping
_populateSQLValuesForDestinationToOne:fromSourceToOne:
_unmappedRelationshipForFormerlyVirtualToOne:migrationContext:
_generateSQLValueMappingsWithMigrationContext:
initWithEntityMapping:sourceEntity:destinationEntity:
sourceEntitiesByToOneWithNewEntityKey
sqlValueForColumnName:migrationContext:
addedManyToManys
removedManyToManys
transformedManyToManys
nextPropertyTransform
migrationType
_sqlValuesByColumnName
_sourceEntitiesByToOneWithNewEntityKey
_dstEntity
_srcEntity
_migrationType
_addedManyToManys
_removedManyToManys
_transformedManyToManys
_processedTransforms
_pendingTransforms
_intarrayTable
_intarrayTableName
orderIntermediate
_updateColumns
_originalRootsForAddedEntity:
createEntityMigrationStatements
createStatementsForUpdatingEntityKeys
generatePKTableUpdateStatements
deleteStatementsForHistory
updateStatementsForHistoryChanges
_annotatesMigrationMetadata
validateMigratedDataFromEntityMapping:error:
_countNullsInColumn:forEntity:
_countUnreferencedPrimaryKeysForEntity:inForeignKeyColumnName:fromTable:
validateMandatoryAttribute:onEntity:error:
validateMandatoryRelationship:onEntity:error:
_populateTableMigrationDescriptions
appendStatementsToRenameTables:migrationContext:
appendStatementsToCreateOrDropTables:migrationContext:
appendStatementsToPerformMigration:migrationContext:
appendStatementsToCompleteMigration:migrationContext:
_determinePropertyDependenciesOnIDForEntity:
_determineAttributeTriggerToMigrateForAttributeNamed:withSourceEntity:andDestinationEntity:
_determineRTreeExtensionsToMigrateForAttributeNamed:withSourceEntity:andDestinationEntity:
_determineIndexesToMigrateForSourceEntity:andDestinationEntity:
_determineReindexedEntitiesAndAffectedProperties
_populateEntityMigrationDescriptionsAndEntityMap
_addEntityMigration:toTableMigrationForRootEntity:tableMigrationType:
initWithRootEntity:migrationType:
addEntityMigrationDescription:
_setAnnotatesMigrationMetadata:
initWithStore:destinationModel:mappingModel:
_disconnect
performMigration:
tableMigrationDescriptionForEntity:
_addReindexedProperty:toSetForEntity:
_dstModel
_srcModel
_existingTableNames
_reindexedEntities
_reindexedPropertiesByEntity
_sourceToDestinationEntityMap
_addedEntityMigrations
_removedEntityMigrations
_transformedEntityMigrations
_copiedEntityMigrations
_tableMigrationDescriptionsByEntity
_hasPKTableChanges
_pkTableUpdateStatements
_attributeExtensionsToUpdate
_indexesToCreate
_indexesToDrop
_generateSQLForExpressionDescription:inContext:
_isHandlingExpressions
_sourceRootEntity
_hasTransformedTableSchema
_tempNameForTableName:
createInsertStatementForEntityMigration:migrationContext:
createFEKUpdateStatementsForEntityMigration:migrationContext:
createUpdateStatementForEntityMigration:migrationContext:
createDeleteStatementForEntityMigrations:migrationContext:
newCopyAndInsertStatementForToOne:toManyToMany:fromTableName:invertColumns:migrationContext:
_retainedRemovedSubEntitiesOfEntity:
_migrationByEntity
_tempTableNames
_createStrings
_dropStrings
_updateStrings
_validateManagedObjectModel:error:
validateEntities:error:
validateEntity:hasAttributeNamed:ofType:andReturnFailureReason:
stringFromDeleteRule:
initWithManagedObjectModel:configuration:
_affectedStores
setEstimatedResultCount:
_estimatedResultCount
forwardingTargetForSelector:
_sourceBuffer
initWithBytesNoCopy:length:
privateCopy
rangeOfData:options:range:
writeToFile:atomically:
writeToURL:atomically:
_aData
_byteCount
_updateFileDescriptorsInUseReserveNew:
constructSafeguardStringFromString:
_releaseReservedMapFileDescriptor
_doCleanup
_bytesPtrForExternalReference
_reserveMapFileDescriptor
_attemptToMapData:
_exceptionForReadError:
_retrieveExternalData
_isEqualHelper:
initForUbiquityDictionary:store:
_setBytesForExternalReference:
_writeExternalReferenceToInterimLocation
_moveExternalReferenceToPermanentLocation
_deleteExternalReferenceFromPermanentLocation
_externalReferenceLocationString
filename
databaseValue
_ubiquitousLocation
_externalDataFlags
willHandleStoreRequest:
filter
setFilter:
_filter
cStringUsingEncoding:
_initializeConnectionsWithSeed:
_checkoutConnectionOfType:
_checkinConnection:
_availableConnections
_allConnections
_poolCounter
_connectionLock
_processingQueue
_assignOrderKeysUsingCount:
willChange
insertObjects:count:atIndex:
firstIndex
minusOrderedSet:
unionOrderedSet:
sortRange:options:usingComparator:
_setProcessingIdempotentKVO:
sortWithOptions:usingComparator:
_orderKeys
_grottyHack
_forcedKeys
initWithArray:copyItems:
indexOfObject:inSortedRange:options:usingComparator:
indexSetWithIndex:
moveObjectsAtIndexes:toIndex:
_connectionManagers
_cd_version
_cd_flags
_cd_nullFlags_
identifierForNewStoreAtURL:
_setMetadata:includeVersioning:
newObjectIDForEntity:referenceObject:
_lastIdentifier
_reserveda
_reservedb
changeID
updatedProperties
transaction
initWithLength:
mutableBytes
orderedSet
initWithChangeID:transaction:objectID:type:tombstone:columns:entity:
_changeID
_changedObjectID
_tombstone
_transaction
_columns
initWithValues:
_constraint:extends:
_alreadyHasChildForEntity:constraint:
initForEntity:constraint:extension:
_addChild:
extendConstraint:onParentEntity:parentCache:
keyForValues:
registerObject:forValues:
_intraStoreConflictsExistForValues:
extension
children
_extension
_knownValues
_children
initWithObjectID:fromSQLRow:
initWithObjectID:withValues:version:
updateWithValues:version:
updateFromSQLRow:
_realFetch
initWithOrderedSet:copyItems:
intersectsOrderedSet:
isSubsetOfOrderedSet:
reverseObjectEnumerator
reversedOrderedSet
indexesOfObjectsPassingTest:
exchangeObjectAtIndex:withObjectAtIndex:
setObject:atIndex:
intersectOrderedSet:
_mutableOrderedSet
_insertObjectMethod
_insertMethod
_replaceMethod
_replaceObjectMethod
_token
removeRowCacheForGeneration:
_primaryCache
_rowCachesByGenerationToken
_createFetchRequestContextForObjectsToDelete
_createDeleteStatements
fetchContext
deleteStatements
setAffectedObjectIDs:
_fetchRequestForObjectsToDelete
_deleteStatements
_fetchContext
forConflictAnalysis
notificationSourceObject
shouldRegisterQueryGeneration
_persistentStoreRequest
_exception
_result
_useColoredLogging
_useConcurrentFetching
_hasHistoryTracking
createFetchRequestContext
setForConflictAnalysis:
_forConflictAnalysis
_organizeValues:
_inserts
_deletes
_masterUpdates
_otherUpdates
initWithDate:delete:
initWithToken:
initWithToken:delete:
fetchHistoryAfterDate:
fetchHistoryAfterTransaction:
deleteHistoryBeforeDate:
deleteHistoryBeforeToken:
deleteHistoryBeforeTransaction:
initWithDate:
initWithTransactionIDs:
_date
_transactionIDs
_transactionNumber
_delete
_initWithValue:singleton:
_isUnmoored
initWithValue:store:
_expectedStores
_makeConcrete:
_moor:
_moor:error:
isUnmoored
_generationIdentifier
_isCompound
_isSingleton
_freeValueOnDealloc
initWithResultType:andObject:
updateStatement
createFetchRequestContextForObjectsToUpdate
createCountRequestContextForObjectsToUpdate
createDeleteTransactionsRequestContext
changeRequestStatement
createCountRequestContextForChanges
createRequestContextForChangesWithTransactionIDs:
initWithUnsignedLong:
stringWithCapacity:
entitiesAndCounts
initWithMirroringOptions:observedStore:zone:zoneSubscription:
_checkAccountStatus:
_createZoneIfNecessary:
_setupZoneSubscriptionIfNecessary:
_createSchemaIfNecessary:
_initializeAssetStorageURLError:
URLByAppendingPathComponent:isDirectory:
containerWithIdentifier:andOptions:
accountStatusWithCompletionHandler:
privateCloudDatabase
initWithRecordZonesToSave:recordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
_createSchema:
setShouldSendContentAvailable:
setNotificationInfo:
initWithSubscriptionsToSave:subscriptionIDsToDelete:
setModifySubscriptionsCompletionBlock:
containerWithIdentifier:
containerID
initWithContainerID:options:
_initializeCloudKitForObservedStore:
_setDatabase:
zoneSubscription
container
largeBlobDirectoryURL
observedStore
observedCoordinator
cloudKitSemaphore
_zoneSubscription
_largeBlobDirectoryURL
_observedStore
_observedCoordinator
_cloudKitSemaphore
storeID
bundleID
processID
notificationWithName:object:
objectIDNotification
_userInfoFromChanges
initWithTransactionRow:storeID:bundleID:processID:contextName:author:queryGeneration:timestamp:changes:
_rowIdentifier
_timestamp
_changes
_storeID
_bundleID
_processID
_contextName
_author
_queryGeneration
environment
setCatastrophicLoggingLevel
testPointForLoggingMessage:atLevel:
testGetLoggingOverride
testSetLoggingOverride:
initWithFetchRequest:
initWithObjectIDs:
_deleteTarget
coordinate
_bounds
_entitiesAndCounts
_governingEntity
_governingAlias
_correlationToken
_limitClause
_orderIntermediate
fetchRequestDescribingObjectsToUpdate
_createUpdateStatement
_updateStatement
fetchRequestDescribingChanges
_createChangeRequestStatement
_transactionFromResult:withChanges:
_changeFromResult:withTransaction:
_processResult:
_changeRequestStatement
initWithZoneName:
initWithZoneID:subscriptionID:
observeChangesForStore:inPersistentStoreCoordinator:
_setUpCloudKitIntegration
_beginWatchingForChanges
_openTransactionWithLabel:andExecuteWorkBlock:
managedObjectContextDidSave:
storesDidChange:
fetchChangesAndUpdateObservedStore
tearDown
logMessage:
isPrivateContextSave:
checkForNewChanges
recoverFromError:
wipeAllCloudDataAndPurgeHistoryToken:error:
initWithOptions:
_writeLargeData:forUID:error:
pruneExternalAssetFileAtURL:error:
_setObservedStore:observedCoordinator:
_setContainer:
ckDatabaseName
cloudKitQueueSemaphore
cloudKitQueue
lastInitializationError
hadObservedStore
_ckDatabaseName
_cloudKitQueueSemaphore
_cloudKitQueue
_lastInitializationError
_hadObservedStore
_generateIdentifier
_sanityCheckVariables:
_identifier
_substitutionVariables
_cachedInfo
_hasCachedInfo
 containerIdentifier:%@
 initializeSchema:%@
 ckAssetThresholdBytes:%@
 useEncryptedStorage:%@
 containerOptions:%@
containerIdentifier
T@"NSString",&,N,V_containerIdentifier
ckAssetThresholdBytes
T@"NSNumber",&,N,V_ckAssetThresholdBytes
initializeSchema
TB,N,V_initializeSchema
containerOptions
T@"CKContainerOptions",&,N,V_containerOptions
useEncryptedStorage
TB,N,V_useEncryptedStorage
metadataToWrite
T@"NSDictionary",R,N,V_metadataToWrite
savePlan
T@"NSSQLSavePlan",R,N,V_savePlan
model
T@"NSSQLModel",R,N
request
T@"NSSaveChangesRequest",R,N
faultHandler
T@"NSFaultHandler",R,N,V_faultHandler
originalCachedRows
T@"NSMutableDictionary",R,N,V_originalCachedRows
NSPullChangeHistoryRequest : < %@ >
CoreData+CloudKit: %s(%d): 
Failed to write CKAsset data for '%@' on '%@' backing record '%@'.
-[PFCloudKitSerializer newCKRecordsFromObject:fullyMaterializeRecords:]_block_invoke
v16@?0@"NSString"4@"NSAttributeDescription"8^B12
v16@?0@"NSString"4@"NSRelationshipDescription"8^B12
v16@?0@"PFMirroredRelationship"4I8^B12
v4@?0
Error attempting to read CKAsset file: %@
-[PFCloudKitSerializer fillManagedObject:fromRecord:importContext:]
%@ encountered CKEncryptedData blob on record (%@): %@
Unknown value class (%@) for attribute:
%@_%@
ckAssetFiles
_ckAsset
mirroringOptions
T@"NSCloudKitMirroringDelegateOptions",R,N,V_mirroringOptions
objectIDToCKRecordName
T@"NSDictionary",R,N
manyToManyRecordNameToRecord
delegate
T@"NSObject<PFCloudKitSerializerDelegate>",W,N,V_delegate
zone
T@"CKRecordZone",R,N,V_zone
writtenAssetURLs
T@"NSArray",R,N
relCache
T@"PFCloudKitMirroredRelationshipCache",R,N,V_relCache
CKRecordID
/System/Library/Frameworks/CloudKit.framework/CloudKit
### Failed to Soft Link: /System/Library/Frameworks/CloudKit.framework/CloudKit
CKRecord
CKAsset
CKEncryptedData
_NSCoreDataOptimisticLockingFailureConflictsKey
NSUnderlyingException
persistentStore
Bad compound predicate predicateOperator type
Invalid predicate: nil RHS
predicate
%@.%@
Too many KVC aggregates in keypath: %@
Malformed keypath: %@
valueForKey:
valueForKeyPath:
count:
supportedKVCAggregates
Unsupported KVC aggregate in keypath: %@
average
Relationship fault for %@ on %p
Relationship objects for %@ on %p: %@
source
T@"NSManagedObject",R,N
relationship
T@"NSPropertyDescription",R,N
fault
TB,R,N,GisFault
index
TI,V_index
value
T@,&,V_value
tableName
T@"NSString",&,V_tableName
Relationship '%@' fault on managed object (%p) %@
Relationship '%@' on managed object (%p) %@ with objects %@
add%sObject:
add%s:
remove%sObject:
remove%s:
intersect%s:
set%s:
IEM_
removedProperties
addedProperties
mappedProperties
couldFailValidation
Each source entity must have a unique renaming identifier
reason
Each destination entity must have a unique renaming identifier
manager
fetchRequestForSourceEntityNamed:predicateString:
TRUEPREDICATE
sourceContext
Each property must have a unique renaming identifier
(migration) destination model property (renaming identifier '%@') matches the renaming identifier for a different type of property (%@) in the source model. Properties cannot be mapped to other property types.
(migration) uninferrable, non-transient property type '%u' for destination model property (renaming identifier '%@'), source model property (renaming identifier '%@').
Remove
Copy
Transform
(migration) attribute mapping for (%@->%@) requires data validation during store migration, mapping a new, mandatory attribute without a default value.
property
entity
Source and destination attribute types are incompatible
(migration) attribute mapping for (%@->%@ to %@->%@) requires data validation during store migration, mapping a previously optional attribute to a mandatory attribute without a default value.
_prependExternalBlobToken:
Unable to use inferred mapping to move external reference into store.
entityPolicy
_nonNilValueOrDefaultValueForAttribute:source:destination:
destination
Reason
Unable to infer mapping for attribute
(migration) relationship mapping for (%@->%@) requires data validation during store migration, mapping a new, mandatory relationship.
(migration) relationship mapping for (%@->%@ to %@->%@) requires data validation during store migration, mapping a previously optional relationship to a mandatory relationship.
Can not map from a to-many to a to-one relationship
destinationInstancesForSourceRelationshipNamed:sourceInstances:
Unable to infer mapping for relationship
%@%@_%@
constantValue
store-file
model.mom
.support
_records
storeUUIDPath
__CD_UBIQUITY_TRANSACTIONS
__CD_UBIQUITY_BASE
objectContent
int16
int32
int64
decimal
double
float
string
bool
date
binary
UUID
encodable
_name
_indexTitle
_sectionOffset
_numberOfObjects
(NSFetchedResultsController) section '%@' not found in controller
name
T@"NSString",R,N
indexTitle
numberOfObjects
TI,R,N
objects
sectionOffset
TI,R,N,V_sectionOffset
sectionNumber
oldSectionNumber
TI,N,V_oldSectionNumber
T@"NSString",R,N,V_name
T@"NSString",R,N,V_indexTitle
TI,R,N,V_numberOfObjects
Invalid RHS for rtree query (should be an array but isn't) %@
properties
Invalid RHS for rtree query (array should have 2 elements) %@
Invalid RHS  element for rtree query (should be a constant value) %@
Mismatch between number of properties and number of ranges for rtree query
ranges
Invalid index name expression (should be a constant value)
indexNameExpression
Invalid index name (should be a string)
indexName
nestingLevel
Invalid LHS for rtree query %@
Unsupported predicate; can't generate SQL for %@
Unable to generate SQL for keypath %@
Invalid ranged property (relationship?!?) %@
(no index name specified, multiple indices available)
(no index found for name %@)
Can't find index for rtree query %@
Can't generate SQL; crosscheck failed
Invalid RHS for rtree query %@
%@ <= %@.%@_MIN AND %@.%@_MAX <= %@
 AND 
%@ IN (SELECT %@.Z_PK FROM %@ %@ WHERE (%@))
 WHERE  (1 = 1) 
INSERT INTO 
) VALUES(?, ?, ?
INSERT OR REPLACE INTO 
) VALUES (?, ?
UPDATE OR FAIL 
 SET 
 = ? WHERE 
 = ? AND 
 = ?
 WHERE 
DELETE FROM 
 WHERE Z_PK = ? AND (Z_OPT = ? OR Z_OPT IS NULL)
 WHERE Z_PK = ? AND Z_OPT = ?
 WHERE Z_PK = ?
 WHERE %@ = ? AND %@ = ?
limitedStatement
T@"NSSQLiteStatement",&,N,V_limitedStatement
unlimitedStatement
T@"NSSQLiteStatement",&,N,V_unlimitedStatement
substitutionBindVariableOrder
T@"NSArray",&,N,V_substVarBindOrdering
substitutionBindIntarrayOrder
T@"NSArray",&,N,V_substIntarrayBindOrdering
%@: index (%lu) beyond bounds (%lu)
iBooks
Music
batch
v16@?0@4I8^B12
%@: index (%lu) beyond bounds (%u)
%@ (%p) of %lu items for request %@
You're doing it wrong
Skanky class can only be used skankily.
NSOrderedSet wrapper '%@' for fetch request results: %@
objectID
batched fetch array received an error %@ with userInfo %@
 batched fetch request asked to fetch %d objects but received %d objects as %@
ZT_%@_%@_%@
%@_%@_INSERT_INCREMENT
DROP TRIGGER IF EXISTS %@
CREATE TRIGGER IF NOT EXISTS %@ AFTER INSERT ON %@ FOR EACH ROW
 BEGIN
 UPDATE %@ SET %@ = IFNULL(%@,0) + 1
 WHERE NEW.%@ IN (SELECT %@ FROM %@ WHERE %@)
 AND NEW.%@ = %@;
 SELECT NSCoreDataTriggerUpdateAffectedObjectValue('%@', %@, %@, '%@', %@) FROM %@ WHERE %@ = NEW.%@;
 END
%@_UPDATE_INCREMENT
CREATE TRIGGER IF NOT EXISTS %@
 AFTER UPDATE OF %@ ON %@ FOR EACH ROW
 WHEN %@
 WHERE %@ IN (SELECT %@ FROM %@ WHERE %@ = NEW.%@ AND (%@));
%@_UPDATE_DECREMENT
 UPDATE %@ SET %@ = MAX(0,IFNULL(%@,0) - 1)
%@_%@_DELETE_DECREMENT
CREATE TRIGGER IF NOT EXISTS %@ AFTER DELETE ON %@ FOR EACH ROW
 WHERE OLD.%@ IN (SELECT %@ FROM %@ WHERE %@)
 AND OLD.%@ = %@;
 SELECT NSCoreDataTriggerUpdateAffectedObjectValue('%@', %@, %@, '%@', %@) FROM %@ WHERE %@ = OLD.%@;
%@_DELETE_DECREMENT
CREATE TRIGGER IF NOT EXISTS %@ AFTER DELETE ON %@ FOR EACH ROW WHEN %@
 WHERE %@ IN (SELECT %@ FROM %@ WHERE %@ = OLD.%@ AND (%@));
COUNT_%@
CREATE TEMP TABLE %@ AS
 SELECT %@, COUNT(DISTINCT(%@.%@)) AS COUNT
 FROM %@, %@
 WHERE %@ AND %@.%@ == %@.%@
 GROUP BY %@;
 CREATE INDEX %@_INDEX ON %@(%@,COUNT);
 UPDATE %@ SET %@ = IFNULL((SELECT COUNT FROM %@ WHERE %@ = %@),0);
 DROP TABLE %@;
%@_INSERT_INCREMENT
 AFTER INSERT ON %@ FOR EACH ROW WHEN %@
 WHERE NEW.%@ = %@;
 AFTER UPDATE OF %@ ON %@
 FOR EACH ROW WHEN (%@) AND (%@) AND (NEW.%@ == OLD.%@)
 FOR EACH ROW WHEN (%@) AND (%@) AND (OLD.%@ == NEW.%@)
 WHERE OLD.%@ = %@;
 AFTER DELETE ON %@ FOR EACH ROW WHEN %@
 UPDATE %@ SET %@ = MAX(0,IFNULL(%@,0) - 1) WHERE OLD.%@ = %@;
 AFTER INSERT ON %@ FOR EACH ROW
 UPDATE %@ SET %@ = (SELECT COUNT(%@) FROM %@ WHERE (%@ = NEW.%@) AND (%@)) WHERE %@ = NEW.%@;
%@_%@_UPDATE_INCREMENT
 AFTER UPDATE OF %@ ON %@ WHEN (%@) AND
 ((NEW.%@ IS NOT NULL AND OLD.%@ IS NULL) OR (NEW.%@ != OLD.%@))
 UPDATE %@ SET %@ = IFNULL(%@,0) + 1 WHERE %@ = NEW.%@;
%@_%@_UPDATE_DECREMENT
 ((OLD.%@ IS NOT NULL AND NEW.%@ IS NULL) OR (NEW.%@ != OLD.%@))
 UPDATE %@ SET %@ = MAX(0,IFNULL(%@,0) - 1) WHERE %@ = OLD.%@;
 FROM %@
 WHERE %@
 UPDATE %@ SET %@ = IFNULL((SELECT COUNT FROM %@ WHERE %@ = %@), 0);
 FOR EACH ROW WHEN (%@) AND (%@)
%@_%@_UPDATE_TO_NULL
 AFTER UPDATE OF %@ ON %@ WHEN
 (NEW.%@ IS NULL AND OLD.%@ IS NOT NULL)
 UPDATE %@ SET %@ = 0 WHERE %@ = NEW.%@;
 UPDATE %@ SET %@ = (SELECT COUNT(%@) FROM %@ WHERE %@ = NEW.%@ AND (%@)) WHERE %@ = NEW.%@;
 SELECT %@, COUNT(DISTINCT(%@)) AS COUNT
offendingString
Unable to parse trigger predicate to an instance of NSPredicate.
 %@ 
offendingPredicate
Invalid trigger predicate, compound predicates must be AND or OR predicates.
Invalid trigger predicate, predicate must evaluate to an instance of NSComparisonPredicate or NSCompoundPredicate.
 OR (NEW.%@ %@ %ld AND OLD.%@ %@ %ld)
(NEW.%@ %@ %ld AND OLD.%@ %@ %ld)
 OR 
NEW.%@ != OLD.%@
%@ %@ %ld
OLD.%@ %@ %ld
NEW.%@ %@ %ld
offendingAttribute
Invalid trigger predicate, unable to find the attribute specified by this predicate.
Invalid trigger predicate, this predicate appears to reference a different relationship than other predicates in this trigger.
Invalid trigger predicate, failed to find the relationship identified by the keyPath.
Invalid trigger predicate, predicate operator must be one of:
NSLessThanPredicateOperatorType,
NSLessThanOrEqualToPredicateOperatorType,
NSGreaterThanPredicateOperatorType,
NSGreaterThanOrEqualToPredicateOperatorType,
NSEqualToPredicateOperatorType,
NSNotEqualToPredicateOperatorType
Invalid trigger predicate, right exprssion must evaluate to a constant integer value.
Invalid trigger predicate, right exprssion must evaluate to an instance of NSConstantValueExpressionType.
Invalid trigger predicate, left expression must be a key-path with only two components.
Invalid trigger predicate, left expression must evaluate to an instance of NSKeyPathExpressionType.
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
insertSQLStrings
dropSQLStrings
bulkUpdateSQLStrings
T@"NSSQLEntity",R,V_entity
attribute
T@"NSSQLAttribute",R,V_attribute
predicateString
T@"NSString",R,V_predicateString
T@"NSPredicate",R,V_predicate
T@"NSSQLRelationship",R,V_relationship
destinationEntity
T@"NSSQLEntity",R,V_destinationEntity
destinationAttributes
T@"NSArray",R,V_destinationAttributes
toManyInnerFetchWhereClause
T@"NSString",R
toManyDecrementWhenClause
toManyIncrementWhenClause
ofClause
oldMatchingClause
newMatchingClause
columnChangedClause
T@"NSArray",R,N,V_insertSQLStrings
unknown
com.apple.coredata
error
warning
annotation
CloudKit
debug
CoreData: %s: %s
hw.activecpu
hw.cpufrequency
hw.memsize
Frameworks/CoreData.framework
Common
%@ is not a valid initializer for %@. Use %@ instead.
CoreData
 Can't find CoreData image header.
Can't find the hash for some reason, using empty data
B8@?0@"NSManagedObject"4
.interim
Can't open externalDataReference interim file : %d
Problem Path
Can't create externalDataReference interim file : %d
Can't copy interim file to permanent location : %d
Problem object
Unable to open file with path %s (%d)
Unable to open file with path: %s (%d)
Missing bytes from file at path %s, expected %lu, got %lu
Unable to read content of file with path: %s (%d)
Unable to read requested number of bytes from path: %s (got %lu)
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~_
 Unable to find an instance of NSValueTransformer registered for the name: %@
 The requesting attribute is: 
self
self IN %@
v16@?0@4@8^B12
object
T@,R
address
Tl,R
_LOCK
B12@?0@"NSURL"4@"NSError"8
.LINKS
NSKnownKeysMappingStrategy2
Corrupted archive (unexpected data in pointer space).
Corrupted archive (failed to read row).
Corrupted branch row in optimized model detected:
details
Background Core Data task threw an exception.  Exception = %@ and userInfo = %@
_NSZombie_%s
_NSZombie_
PFMirroredRelationshipErrorDomain
CD_recordNames
CD_relationships
CD_entityNames
i12@?0@"NSRelationshipDescription"4@"NSRelationshipDescription"8
type
TI,R,N,V_type
relationshipDescription
T@"NSRelationshipDescription",R,N,V_relationshipDescription
inverseRelationshipDescription
T@"NSRelationshipDescription",R,N,V_inverseRelationshipDescription
manyToManyRecordName
T@"NSString",R,N,V_manyToManyRecordName
manyToManyRecordType
T@"NSString",R,N,V_manyToManyRecordType
ckRecordName
T@"NSString",R,N,V_ckRecordName
relatedCKRecordName
T@"NSString",R,N,V_relatedCKRecordName
T@"NSManagedObjectID",R,N,V_objectID
recordName
T@"NSString",R,N,V_recordName
relatedRecordName
T@"NSString",R,N,V_relatedRecordName
metadataForPersistentStoreWithURL:error: must be overriden by your store class to provide metadata
NSMappedObjectStore must be initialized with initWithPersistentStoreCoordinator:configurationName:URL:options
save: must be overriden by your store class to save data to the store
load: must be overriden by your store class to load data from the store
Store %@ cannot hold instances of entity %@
newCacheNodeForManagedObject: must be overriden by your store class to create a cache node from a managed object
updateCacheNode:fromManagedObject: must be overriden by your store class to update a cache node from a managed object
Cannot retrieve referenceObject from an objectID that was not created by this store
Unknown command type %@
Unsupported fetch request: store %@ does not support GROUP BY
NSCoreDataPrimaryError
Error saving the persistent store.
/dev/null
NSAddStoreAsynchronouslyOption
NSInvokeCompletionHandlerConcurrently
%@ (type: %@, url: %@)
NSPersistentStoreMirroringOptionsKey
T@"NSString",C,V_type
configuration
T@"NSString",C,V_configuration
T@"NSURL",C,V_url
options
T@"NSDictionary",R,C,N
readOnly
TB,GisReadOnly
timeout
sqlitePragmas
shouldAddStoreAsynchronously
shouldMigrateStoreAutomatically
shouldInferMappingModelAutomatically
NSAtomicStoreCacheNodes must be initialized using initWithObjectID:(NSManagedObjectID *)
NSAtomicStoreCacheNodes must be created with an objectID
T@"NSManagedObjectID",R,N
propertyCache
T@"NSMutableDictionary",&,N
NSAttributeType
NSAttributeValueClassName
NSDefaultValue
NSValueTransformerName
NSIsIndexed
NSFlagsKey
NSMaxValueName
NSMinValueName
%@, attributeType %lu , attributeValueClassName %@, defaultValue %@
Can't set attributeValueClassName to nil for a non-transient attribute.
Can't set attribute type to undefined for non-transient attribute.
Can't find class for type %lu
_NSCreateIndex
SELF >= %@
SELF =< %@
length >= %@
length =< %@
timeIntervalSinceReferenceDate >= %@
timeIntervalSinceReferenceDate =< %@
self >= %@
self =< %@
B12@?0@"NSURL"4@"NSDictionary"8
attributeType
attributeValueClassName
T@"NSString",C
defaultValue
T@,&
versionHash
T@"NSData",R,C
valueTransformerName
allowsExternalBinaryDataStorage
NSDoubleAttributeType
NSDateAttributeType
NSFloatAttributeType
NSStringAttributeType
NSBooleanAttributeType
NSDecimalAttributeType
NSObjectIDAttributeType
NSInteger16AttributeType
NSInteger32AttributeType
NSInteger64AttributeType
NSBinaryDataAttributeType
NSTransformableAttributeType
NSUndefinedAttributeType
length
timeIntervalSinceReferenceDate
no NSValueTransformer with class name '%@' was found for attribute '%@' on entity '%@'
NSTriggerKey
INTEGER
NUMERIC
DOUBLE
TEXT
BOOLEAN
TIMESTAMP
BLOB
Undefined attribute type.
"%@" %@
abstract
_NSCoreManagedObjectID
Entity name must not be nil.
Store must not be nil.
_NSObjectID_%s_%x
%@://%@/%@/p%@
x-coredata
x-coredata://
%@://%@/%@/p%qu
Cannot create a binary store with a nil URL.
CoreData binary stores only support file URLs (got %@).
Error validating url for store
Attempt to add read-only file at path %@ read/write. Adding it read-only instead. This will be a hard error in the future; you must specify the NSReadOnlyPersistentStoreOption.
Attempt to add read-only store read-write
NSBinaryObjectStore only supports file URLs right now.
Can't save store to %@ (read-only store)
subresults
T@"NSArray",R,V_subresults
progress
T@"NSProgress",&,V_requestProgress
operationError
T@"NSError",&,V_requestError
requestCompletionBlock
T@,C,V_requestCompletionBlock
managedObjectContext
T@"NSManagedObjectContext",R,V_requestContext
finalResult
T@"NSArray",&,V_finalResult
intermediateResultCallback
T@?,C,V_intermediateResultCallback
fetchRequest
T@"NSAsynchronousFetchRequest",R,V_fetchRequest
Mismatched result types during aggregation of history status results
Results
Mismatched result types during aggregation of history count results
Mismatched result types during aggregation of history object IDs results
Mismatched result types during aggregation of history results
timestamp
result
T@,R,V_aggregatedResult
resultType
Ti,R,V_resultType
metadata
mapData
NSAttributeValues
NSAttributes
Can't read binary data from file
Can't load binary data from file (file was created by an incompatible version of CoreData)
_NSStoreMapArchiveVersion
_NSStoreMapArchiveMetadata
_NSStoreMapArchiveNextPK
_NSStoreMapArchiveData
Can't load data from archived data (archived data was created by an incompatible version of CoreData)
Directory does not exist : %@
Not a directory : %@
Directory is not writable : %@
Binary store save failed.
Can't construct a node from nil.
Source object
Destination Object
Relationship
CoreData does not support persistent cross-store relationships
Can't find entity for object
_CoreDataEntityDescription
_CoreDataEntityName
NSKeyValueUndefinedSetter
NSKeyValueUndefinedGetter
+entityForName: nil is not a legal NSManagedObjectContext parameter searching for entity name '%@'
+entityForName: nil is not a legal NSPersistentStoreCoordinator for searching for entity name '%@'
+entityForName: could not locate an NSManagedObjectModel for entity name '%@'
+entityForName: could not locate an entity named '%@' in this model.
NSEntityName
NSClassNameForEntity
NSIsAbstract
NSManagedObjectModel
NSSuperentity
NSSubentities
NSProperties
NSUserInfo
NSVersionHashModifier
NSRenamingIdentifier
NSUniqueTuples
NSCoreSpotlightDisplayName
NSFetchIndexDescriptions
NSCompoundIndexes
ascending
desc
descending
rtree
(%@) name %@, managedObjectClassName %@, renamingIdentifier %@, isAbstract %u, superentity name %@, properties %@, subentities %@, userInfo %@, versionHashModifier %@, uniquenessConstraints %@
NSManagedObject
Can't add a subentity to an entity (missing name or bad properties).
Invalid property passed to setProperties: property has nil name or is an NSExpressionDescription.
Can't change name of entity from %@ to %@
can't find property named %@
can't create index %@, unsupported index element property type
element
Indexes must be declared at the highest applicable level. All properties are declared on superentity.
Cannot merge uniqueness constraints { %@ } on entity '%@' due to relationship '%@' having a mandatory to-one inverse relationship '%@' and not using a cascade delete rule on '%@'
Can't find attribute named %@
Problem name
Only attributes can be uniqued
Problem property
Uniqueness constraints must be defined at the highest level possible. All properties in constraint %@ are defined on parent entity.
Problem constraint
managedObjectModel
T@"NSManagedObjectModel",R
managedObjectClassName
TB,GisAbstract
subentitiesByName
T@"NSDictionary",R,C
subentities
T@"NSArray",&
superentity
T@"NSEntityDescription",R
propertiesByName
userInfo
T@"NSDictionary",&,N
attributesByName
relationshipsByName
versionHashModifier
renamingIdentifier
indexes
T@"NSArray",C
uniquenessConstraints
compoundIndexes
coreSpotlightDisplayNameExpression
T@"NSExpression",&,N
Can't add an entity to multiple superentities.
Can't add unnamed subentity.
Can't add multiple entities with duplicate names.
Can't add unnamed property to entity.
Entity already contains a property named %@.
Can't add NSExpressionDescriptions to NSEntityDescriptions
tried to add property %p '%@' to entity %p '%@' but it already belongs to entity %p '%@'
Model must be immutable before mapping strategy can be created
Can't use an entity in two models.
Unable to load class named '%@' for entity '%@'.  Class not found, using default NSManagedObject instead.
"%@" is not a subclass of NSManagedObject.
Class '%s' for entity '%@' has an illegal override of NSManagedObject -isEqual:
Class '%s' for entity '%@' has an illegal override of NSManagedObject -hash
Cannot make an immutable entity editable again.
Can't set superentity of self to self.
Bad model.  For entity '%@' superentity '%@' does not think I am a subentity
Bad model.  For entity '%@' subentity '%@' does not think I am its superentity
Bad model.  For entity '%@' subentity '%@ (%p)' is not registered in NSManagedModelModel.  Model has a reference to %@ (%p)
Cannot use uniqueness constraints { %@ } on entity '%@' due to relationship '%@' having a mandatory to-one inverse relationship '%@' and not using a cascade delete rule on '%@'
Can't remove property '%@' - doesn't belong to this entity.
Property named '%@' in entity '%@' conflicts with property inherited from parent entity '%@'
Entity %@ already has an index with name %@
Entity
Entity '%@' has unique constraints { %@ } with relationship '%@' and mandatory to-one inverse '%@' but is not using a cascade delete rule .
inverse
Entity '%@' has unique constraints { %@ } with a relationship and mandatory to-one inverse but is not using a cascade delete rule .
Can't read entity into shell: Missing entity frontside delimiter
Root cause
Can't read entity: Not enough bytes left
Can't read entity: Missing version hash value
Can't read entity: Missing entity name
Cant' read entity: Miswired subentities dictionary
Cant' read entity: Mismatched subentity count
Cant' read entity: Properties dictionary has content
Cant' read entity: Properties buffer has content
Cant' read entity: Property entity does not match entity being decoded (1)
Cant' read entity: Property entity does not match entity being decoded (2)
Cant' read entity: Mismatched number of fetch indexes
Cant' read entity: Mismatched number of fetch index elements
Can't read entity into shell: Missing entity back-end delimiter
Relationship properties should be @dynamic, not ivars (entity %@, class %s, property %@).  This will be an error in the future.
validate%s:error:
NSMappingName
NSMappingType
NSSourceEntityName
NSSourceEntityVersionHash
NSDestinationEntityName
NSDestinationEntityVersionHash
NSSourceExpression
NSEntityMigrationPolicyClassName
NSAttributeMappings
NSRelationshipMappings
(%@), name %@, mappingType %u, sourceEntityName %@, sourceEntityVersionHash %@, destinationEntityName %@, destinationEntityVersionHash %@, attributeMappings %@, relationshipMappings %@, sourceExpression %@, entityMigrationPolicyClassName %@, userInfo %@
%@->%@
mappingType
sourceEntityName
sourceEntityVersionHash
T@"NSData",C
destinationEntityName
destinationEntityVersionHash
attributeMappings
relationshipMappings
sourceExpression
T@"NSExpression",&
entityMigrationPolicyClassName
NSEntityMigrationPolicy
Couldn't create mapping policy for class named (%@)
Entity Mappings cannot become mutable after being marked immutable.
Can't modify an immutable entity mapping.
entityMapping
propertyMapping
Can't find source for destination in default mapping policy
More than one source for destination in default mapping policy
Unknown/unsupported type for ordered toMany relationship destination
relationshipDestinations
Unknown/unsupported type for toMany relationship destination
More than one relationship destination for a toOne relationship
Unknown/unsupported type for toOne relationship destination
%@ -> %@
property.name
"%@" INTEGER PRIMARY KEY
columnDefinition
CREATE TABLE "%@" (%@);
NSExpression
NSExpressionType
expression
expressionResultType
Conflicts
destinations
mtmObjects
NSKeyValueIvarSetter
NSKeyValueMethodSetter
NSKeyValueIvarGetter
NSKeyValueMethodGetter
During prefetching, materialized to-many relationship '%@' on object %@ was null
During prefetching, materialized to-one relationship '%@' on object %@ was not a managed object but instead %@
FETCH_SOURCE
FETCHED_PROPERTY
CoreData could not fulfill a fetched property because '%@'
Fetched Property
CoreData Debug Logging: Exception = %@ with error code = %ld and userInfo = %@
message
failed to retrieve ordering information from fault for object %@ and relationship %@ due to nil NSManagedObjectContext
An NSManagedObject must have a valid NSEntityDescription.
CoreData could not fulfill a fault for '%@'
<UNKNOWN objectID>
An NSManagedObjectContext delegate overrode fault handling behavior to silently substitute nil/0 for all property values for the object with ID '%@'.  This is very unwise.
An NSManagedObjectContext delegate returned an illegal result
 Found no possible URLs for directory type %lu
 Failed to create directory %@: %@
 File %@ already exists and is not a directory!
+[%@ %@] Could not conjure up a useful location for writing persistent stores.
 View context accessed for persistent container %@ with no stores loaded
Failed to call designated initializer on '%@' 
momd
 Failed to load model at path: %@
 Failed to load model named %@
%@.sqlite
-[NSPersistentContainer loadPersistentStoresWithCompletionHandler:] called on an instance with no store descriptions
 Background context created for persistent container %@ with no stores loaded
T@"NSString",R,C,V_name
viewContext
T@"NSManagedObjectContext",R,V_viewContext
persistentStoreCoordinator
T@"NSPersistentStoreCoordinator",R,V_storeCoordinator
persistentStoreDescriptions
T@"NSArray",C,V_storeDescriptions
Store failed to load.  %@ with error = %@ with userInfo %@
v12@?0@"NSPersistentStoreDescription"4@"NSError"8
NSFetchRequest
_NSFetchRequestEntityName
%@, fetchRequest %@
Can't use fetch request with fetched property description (entity model mismatch).
T@"NSFetchRequest",&
NSValuesToGroupBy
NSHavingPredicate
NSFetchOffset
NSValuesToFetch
NSEntity
NSPredicate
NSSortDescriptors
NSFetchLimit
NSBatchSize
NSRelationshipKeyPathsForPrefetching
NSResultType
NSHasFetchRequestFlags
NSFetchRequestFlags
%@ (entity: %@; predicate: (%@); sortDescriptors: (%@); 
limit: %u; 
offset: %u; 
batch size: %u; 
unknown request type
NSManagedObjectResultType
NSManagedObjectIDResultType
NSDictionaryResultType
NSCountResultType
type: %@; 
identifier
affected stores: (%@); 
includesSubentities: NO; 
includesPropertyValues: NO; 
returnsObjectsAsFaults: NO; 
includesPendingChanges: NO; 
returnsDistinctResults: YES; 
shouldRefreshRefetchedObjects: YES; 
relationshipKeyPathsForPrefetching: (%@); 
propertiesToFetch: (%@); 
havingPredicate: (%@); 
propertiesToGroupBy: (%@); 
Cannot fetch without an NSManagedObjectContext in scope
This fetch request (%p) was created with a string name (%@), and cannot respond to -entity until used by an NSManagedObjectContext
Invalid keypath %@ passed to %@
setPropertiesToGroupBy:
setPropertiesToFetch:
Invalid keypath %@ passed to setPropertiesToGroupBy:
Invalid keypath %@ passed to %@:
Invalid keypath %@ passed to %@ (non-terminal attribute)
Invalid to many relationship in setPropertiesToFetch: (%@)
Invalid keypath %@ passed to %@ (invalid property type)
Invalid property %@ passed to %@ (property is transient)
Attribute/relationship description names passed to %@ must match name on fetch entity (%@)
Invalid property (%@) passed to setPropertiesToFetch: (entity mismatch)
Invalid to many relationship (%@) passed to %@:
Invalid keypath expression (%@) passed to setPropertiesToFetch:
T@"NSEntityDescription",&,N
entityName
T@"NSPredicate",&,N
sortDescriptors
T@"NSArray",&,N
fetchLimit
TI,N
affectedStores
includesSubentities
TB,N
includesPropertyValues
returnsObjectsAsFaults
relationshipKeyPathsForPrefetching
T@"NSArray",C,N
includesPendingChanges
returnsDistinctResults
propertiesToFetch
fetchOffset
fetchBatchSize
shouldRefreshRefetchedObjects
propertiesToGroupBy
havingPredicate
NSFetchRequest could not locate an NSEntityDescription for entity name '%@'
Can't modify a named fetch request in an immutable model.
Invalid groupByProperty type in archive
Invalid propertyToFetch type in archive
NSFRExpression
NSMOCExpression
NSCountOnlyFlag
NSFetchRequestExpression could not evaluate its request or context.
FETCH(%@, %@, %@)
Cannot substitute a nil substitution dictionary.
requestExpression
T@"NSExpression",R
contextExpression
countOnlyRequest
TB,R,GisCountOnlyRequest
NSSourceAttributeName
NSDestinationAttributeName
branch row pointer is NULL
[%d]
branch row pointer%@ = %p flags.size = %d flags.operation = %d flags.parameter = %d flags.offset = %d lowerBound = %d lowerSlot = %d upperBound = %d upperSlot = %d generalSlots pointer = %p with contents = %@
mapping table pointer is NULL
mapping table has 0 branch rows
mapping table %p has %d branch rows:
NSConstantString
__NSCFString
%@ supports a maximum of 32,768 elements.  parameter was %lu
keys
version
mapping table %p has %d branch rows: (...)
%@ (%p) table of length %d with known keys:%@ and %@
*** -%s sent to an NSKnownKeysDictionary object
searchMapping
emptyToken
values
__empty_slot_token_4c24_98dc_ac1e_b773__
The key '%@' is not defined for this NSKnownKeysDictionary
NSTargetObjectUserInfoKey
NSUnknownUserInfoKey
supportsSecureCoding
TB,R
T^@,R,N
mapping
T@"NSKnownKeysMappingStrategy",R,N
NSDetailedErrors
NSValidationErrorObject
NSValidationErrorKey
NSValidationErrorPredicate
NSValidationErrorValue
NSAffectedStoresErrorKey
NSAffectedObjectsErrorKey
NSOriginalSnapshot
NSInsertedObjects
NSDeletedObjects
NSCurrentObjects
NSSQLiteErrorDomain
Delete: %@
Insert: %@ at index: %lu
Move: %@ to index: %lu
(...not nil..)
<relationship fault: %p '%@'>
(...and %ld more...)
%@ (entity: %@; id: %@ ; data: %@)
<fault>
%@ (entity: <null>; id: %@ ; data: <fault>)
An NSManagedObject of class '%@' must have a valid NSEntityDescription.
NSEntityDescription '%@' can only support a single custom class (tried to instantiate class '%@'). Use a subentity with 0 properties to further specialize the NSManagedObject subclass.
CoreData: error: Failed to call designated initializer on NSManagedObject class '%@' 
[<%@ %p> valueForUndefinedKey:]: the entity %@ is not key value coding-compliant for the key "%@".
Mutating a managed object %@ (%p) after it has been removed from its context.
NSManagedObjects of entity '%@' do not support -mutableArrayValueForKey: for the property '%@'
NSManagedObjects of entity '%@' do not support -mutableSetValueForKey: for the property '%@'
NSManagedObjects of entity '%@' do not support -mutableOrderedSetValueForKey: for the property '%@'
[<%@ %p> setValue:forUndefinedKey:]: the entity %@ is not key value coding-compliant for the key "%@".
[<%@ %p> setNilValueForKey]: instance of entity %@ could not set nil as the value for the key %@.
<null>
contextShouldIgnoreUnmodeledPropertyChanges
T@"NSManagedObjectContext",R,N
T@"NSEntityDescription",R,N
inserted
TB,R,N,GisInserted
updated
TB,R,N,GisUpdated
deleted
TB,R,N,GisDeleted
hasChanges
TB,R,N
hasPersistentChangedValues
faultingState
Unacceptable type of value for attribute: property = "%@"; desired type = %@; given type = %@; value = %@.
Cannot set value for attribute with undefined type: property = "%@"; entity = "%@"; value = %@
Illegal attempt to establish a relationship '%@' between objects in different contexts (source = %@ , destination = %@)
Unacceptable type of value in to-many relationship: property = "%@"; problem = %@; desired type = %@; given type = %@; value = %@.
Unacceptable type of value for %@ relationship: property = "%@"; desired type = %@; given type = %@; value = %@.
ordered to-many
to-many
Unacceptable type of value for to-one relationship: property = "%@"; desired type = %@; given type = %@; value = %@.
Impossible information to maintain inverse relationship "%@" for relationship: %@.
Insufficient information to maintain inverse relationship "%@" for relationship: %@.
Cannot maintain read-only inverse relationship "%@" for relationship: %@.
%{ENTITY}@
%{PROPERTY}@
Illegal validation warning: property = "%@"; predicate/warning index = %lu; warning = %@.
i12@?0r^v4r^v8
Object has pending changes
%@: null selector
%s_%s_
%s_%s_%x
contextShouldIgnoreChangesFor
_cd_bits_%p
Incorrect ivar generation
[%dI]
class_addIvar failed
NULL _cd_rawData but the object is not being turned into a fault
automaticallyNotifiesObserversOf
managedObjectOriginal_
Property '%s' is a 64 bit scalar type on class '%s' that does not match its entity's property's 32 bit scalar type.  Implicit coercion to 32 bits in the database is not recommended.
Property '%s' is a scalar type on class '%s' that does not match its Entity's property's scalar type.  Dynamically generated accessors do not support implicit type coercion.  Cannot generate a getter method for it.
Property '%s' is a scalar type on class '%s'.  Cannot generate a getter method for it.
dynamic accessors failed to find @property implementation for '%s' for entity %@ while resolving selector '%s' on class '%s'.  Did you remember to declare it @dynamic or @synthesized in the @implementation ?
setPrimitive
primitive
Property '%s' is marked __weak on class '%s'.  Cannot generate a setter method for it.
Property '%s' is a scalar type on class '%s' that does not match its Entity's property's scalar type.  Dynamically generated accessors do not support implicit type coercion.  Cannot generate a setter method for it.
Property '%s' is a scalar type on class '%s'.  Cannot generate a setter method for it.
Property '%s' is marked copy on class '%s'.  Cannot generate a copying setter method for NSManagedObject's to-one relationship.
Property '%s' is marked readonly on entity '%@'.  Cannot generate a setter method for it.
Object:
remove
AtIndex:
removeObjectFrom
v@:I
AtIndexes:
insert
insertObject:in
v@:@I
:AtIndexes:
v@:@@
replace
replaceObjectIn
AtIndex:withObject:
v@:I@
AtIndexes:with
validate
:error:
will
Change
Access
v@:@
v@:Q
v16@?0@4q8
v16@?0@4d8
v12@?0@4f8
q8@?0@4
d8@?0@4
f8@?0@4
^v8@?0@4
@8@?0@4
@12@?0@4@8
@16@?0@4@8@12
@12@?0@4L8
@12@?0@4I8
v@:Q@
@16@?0@4L8@12
@16@?0@4I8@12
v@:@Q
@16@?0@4@8L12
@16@?0@4@8I12
v8@?0@"NSKeyValueSetter"4
refreshed
invalidated
invalidatedAll
newQueryGeneration
newChangeToken
_NSTriggerModifiedObjectsKey
_NSTriggerModifiedObjectIDsKey
inserted_objectIDs
updated_objectIDs
deleted_objectIDs
refreshed_objectIDs
invalidated_objectIDs
NSObjectsChangedByMergeChangesKey
NSObjectsChangedInManagingContextNotification
_NSObjectsChangedInManagingContextPrivateNotification
NSManagingContextDidSaveChangesNotification
NSManagingContextWillSaveChangesNotification
NSManagedObjectContextWillSaveFromPersistentDocumentNotification
NSManagedObjectContextDidSaveFromPersistentDocumentNotification
NSManagedObjectContextDidSaveObjectIDsNotification
_NSManagedObjectContextDidSaveObjectIDsPrivateNotification
NSManagedObjectContextDidMergeChangesObjectIDsNotification
_NSManagedObjectContextDidMergeChangesObjectIDsPrivateNotification
ImplicitObservation
com.apple.CoreData.ConcurrencyDebug
com.apple.CoreData.Logging.SyntaxColoring
com.apple.CoreData.Logging.oslog
com.apple.CoreData.Logging.stderr
assetsd
xctest
accountsd
CalendarAgent
soagent
Radio
Core Data multi-threading assertions enabled.
Context already has a coordinator;  cannot replace.
An NSManagedObjectContext's retain policy cannot be changed while it has registered objects.  Trying using reset() first.
%@: %@
NSManagedObjectContext over-release triggered improper dealloc here:
Parameter #1 to -assignObject:toPersistentStore: must be an NSManagedObject or subclass.
Can't assign an object to a store that does not contain the object's entity.
storeURL
Can't reassign an object to a different store once it has been saved.
newStoreURL
originalStoreURL
-deleteObject: requires a non-nil argument
An NSManagedObjectContext cannot delete objects in other contexts.
Context does not have a coordinator;  cannot obtain permenant ids without a coordinator.
fatal: Unable to recover from optimistic locking failure.
fatal: This NSManagedObjectContext was created on the main thread and illegally passed to a background thread.
Attempting to generate a constraint exception for non constraint error.
constraint validation failure
attempt to recursively call -save: on the context aborted
stack trace
failed to resolve optimistic locking failure: %@ with %@
failed to resolve optimistic locking failure.  Old save request was: %@
failed to resolve optimistic locking failure.  Next attempt will be: %@
nil is not a valid object ID
NSSaveChangesRequest is not supported by executeRequest:error:
%@ %@ is not a valid NSFetchRequest.
%@ A fetch request must have an entity.
NSConfinementConcurrencyType context %@ cannot support asynchronous fetch request %@.
managed objects
An NSManagedObjectContext cannot refresh objects in other contexts.
NSConcurrencyType
NSFetchTimestamp
NSRetainsRegisteredObjects
NSPropagatesDeleted
NSMergePolicy
An NSManagedObjectContext cannot detect conflicts for objects in other contexts.
Can only use -performBlock: on an NSManagedObjectContext that was created with a queue.
Can only use -performBlockAndWait: on an NSManagedObjectContext that was created with a queue.
Parent NSManagedObjectContext must not be nil.
Parent NSManagedObjectContext must use either NSPrivateQueueConcurrencyType or NSMainQueueConcurrencyType.
NSManagedObjectContext %p: 
NSManagedObjectContext %p
reasom
Cannot set a query generation on an NSManagedObjectContext that does not have a coordinator
Child contexts inherit parent context generations and may not have their own
Automatic merging is not supported by contexts using NSConfinementConcurrencyType
T@"NSPersistentStoreCoordinator",&
parentContext
T@"NSManagedObjectContext",&
undoManager
T@"NSUndoManager",&,N
T@"NSMutableDictionary",R,N
concurrencyType
insertedObjects
T@"NSSet",R,N
updatedObjects
deletedObjects
registeredObjects
propagatesDeletesAtEndOfEvent
retainsRegisteredObjects
shouldDeleteInaccessibleFaults
stalenessInterval
mergePolicy
queryGenerationToken
T@"NSQueryGenerationToken",R,N
automaticallyMergesChangesFromParent
transactionAuthor
-performFetch:error: was called on a MOC of NSConfinementConcurrencyType unexpectedly.
cannot record object with null globalID
An NSManagedObject may only be in (or observed by) a single NSManagedObjectContext.
fatal: Failed to re-registered lost fault. fault %p with oid %@ has a moc of %p but we expected %p
deallocated NSManagedObjectContext
Could not allocate memory.
Multiple threads illegally accessing an NSManagedObjectContext (%p) during %@
The current thread is not the recognized owner of this NSManagedObjectContext(%p).  Illegal access during %@
attempt to insert a null object into this context
repairing validation failure %@ (%@) by deleting %@ because it no longer exists and the merge policy allows it
null
NSValidationErrorShouldAttemptRecoveryKey
validation recovery attempt FAILED with %@ and %@.
An observer of NSManagedObjectContextDidSaveNotification illegally threw an exception.  Objects saved = %@ and exception = %@ with userInfo = %@
Objects should not be both modified and additional
Mutating a managed object %@ (%p) that has a different context %p than the receiver %p.
Failed to process pending changes before save.  The context is still dirty after 1000 attempts.  Typically this recursive dirtying is caused by a bad validation method, -willSave, or notification handler.
Serious application error.  Exception was caught during Core Data change processing.  This is usually a bug within an observer of NSManagedObjectContextObjectsDidChangeNotification.  %@ with userInfo %@
Serious application error.  Unidentifiable exception was caught during Core Data change processing.  This is usually a bug within an observer of NSManagedObjectContextObjectsDidChangeNotification.
SELF IN %@
Delete propagation prefetching failed with error: %@
Delete propagation prefetching failed with exception: %@
isEditing
illegally invoked -performWithOptions* on dying NSManagedObjectContext at:
-performWithOptions:andBlock: was called on a MOC of NSConfinementConcurrencyType unexpectedly.
Mismatched PSCs in parameter contexts
shouldPerformSecureOperation
Context has pending changes
Destination object is not kind of [relationship destinationEntity]
Relationship must be a to-many.
Can't find the order of objects in an unordered relationship
com.apple.CoreData.NSManagedObjectContext.mainQueue
Temporary object ID refers to object in different NSPersistentStoreCoordinator
Object's persistent store is not reachable from this NSManagedObjectContext's coordinator
Invalid state for objectID or NSManagedObjectContext
%p <%@>
T@"NSPersistentStore",R,W
temporaryID
TB,R,GisTemporaryID
+mergedModelFromBundles: Failed to load model at URL %@
Can't merge models with two different entities named '%@'
Can't merge models with two different fetch request templates for name'%@'
 Cannot load NSManagedObjectModel.  nil is an illegal URL parameter
CoreData: Cannot load NSManagedObjectModel.  nil is an illegal URL parameter
 Failed to load model bundle at path '%@'
 Failed to load model as no file exists at path '%@'
 Failed to load optimized model at path '%@'
 Failed to load keyed archive model at path '%@'
 Failed to load NSManagedObjectModel with URL '%@'
NSEntities
PF_DEFAULT_CONFIGURATION_NAME
NSConfigurations
NSFetchRequestTemplates
NSVersionIdentifiers
(%@) isEditable %u, entities %@, fetch request templates %@
Can't add an entity to a managed object model (missing name or bad properties).
Entities for a configuration must already be in the model.
Cannot set fetch request template.  This model does not contain entity '%@'.
entitiesByName
entities
configurations
T@"NSArray",R
localizationDictionary
T@"NSDictionary",&
fetchRequestTemplatesByName
versionIdentifiers
T@"NSSet",C
entityVersionHashesByName
Unable to generate optimized model (sql model generation failed: %@)
Invalid property; can't optimize
Base error
Property
Invalid value in warnings array
momv2$[]77y234078nf3490324nfauh7kf77y7pjfauy72-918reiaprehuhfrew
Can't find hashorder for entity %@
Base Problem
momv2$[]23948dfkgn;w49bgswi4u[bn1`tfrxez5s65=0p97/;ihy2734fjha4e
Unknown archive format
Corrupted archive: malformed header
Malformed archive: skipping
Corrupted archive: Mismatched entity count
Corrupted archive: failed to read property name
Corrupted archive: Mismatched string count
Corrupted archive: failed to read entity name or warning string
Corrupted archive: Mismatched data count
Corrupted archive: failed to read data
Corrupted archive: Mismatched strategy count
Corrupted archive: failed to read kkd strategy
NSKnownKeysDictionary2
Allocation failure: unable to allocate properties buffer
Allocation failure: unable to allocate attributes buffer
Allocation failure: unable to allocate relationships buffer
Allocation failure: unable to allocate expressions buffer
Allocation failure: unable to allocate fetched properties buffer
Allocation failure: unable to allocate fetch requests buffer
Allocation failure: unable to allocate entities buffer
Allocation failure: unable to allocate fetchIndexes buffer
Allocation failure: unable to create attributes
Allocation failure: unable to create relationships
Allocation failure: unable to create expressions
Allocation failure: unable to create fetched properties
Allocation failure: unable to create fetch requests
Allocation failure: unable to create entities
Allocation failure: unable to create fetchIndexDescriptions
Allocation failure: unable to create fetchIndexElementDescriptions
Corrupt archive: mismatch between header and contents for attribute count
Corrupt archive: mismatch between header and contents for relationship count
Corrupt archive: mismatch between header and contents for expression count
Corrupt archive: mismatch between header and contents for fetched properties count
Corrupt archive: unable to read property at index: %lu
Corrupt archive: relationship with name (%@) has bad inverse index %@
Corrupt archive: mismatch between header and contents for entity count
Corrupt archive: unable to read entity at index: %lu
Bad: decoding optimized model smashed memory. Bailing.
Corrupt archive: mismatch between header and contents for fetch request count
Corrupt archive: unable to read fetch request at index: %lu
Can't add unnamed entity to model.
Model already contains an entity named %@.
Mismatch: strategy has %lu length, archive has %u values
Mismatch: frt strategy has %d length, archive has %u values
Mismatch: frt strategy has %lu length, archive has %u values
Corrupted archive (missing pointer space).
System
Library
Models cannot become mutable after being marked immutable.
Can't modify an immutable model.
Can't remove entity - doesn't belong to this model.
VersionInfo
plist
Info
Exception while loading versioned model plist for %@.
Name: %@
Reason: %@
UserInfo: %@
NSManagedObjectModel_VersionHashes
NSManagedObjectModel_CurrentVersionName
NSMappedObjectStore must be initialized with initWithPersistentStoreCoordinator:configurationName:URL:options:
file:/
-com.apple.CoreData.MigrationDebug
(migration) checking mapping model %@
 source hashes: 
 destination hashes: %@
(migration) mismatched %@%@%@ hashes for mapping model %@
 and 
(migration) no match found for %d of %d mapping model source hashes
(migration) no match found for %d of %d mapping model destination hashes
(migration) found compatible mapping model %@
(migration) looking for mapping model with 
 source hashes: 
 destination hashes: %@
(migration) no suitable mapping model found
Cannot create an inferred NSMappingModel with a nil source model
Cannot create an inferred NSMappingModel with a nil destination model
(migration) inferring a mapping model between data models with 
 source hashes: 
 destination hashes: %@
(migration) inferring mapping model failed with error: %@ userInfo: %@
NSEntityMappings
NSEntityMappingsByName
(%@), entityMappings %@
entityMappings
entityMappingsByName
Can't add unnamed entity mapping to model.
Model already contains an entity mapping named %@.
Mapping Models cannot become mutable after being marked immutable.
Can't modify an immutable mapping model.
Can't generate new column values for %@ - incompatible destination: %@
Can't generate new column value from destination: %@
 = %@
, %@ = %u
Can't generate new column values for destination - incompatible entity foreign key state: %@
%@ = %@
, %@ = %@
Can't generate new column value from value: %@
= %@
aliasGenerator
Can't generate SQL for keypath %@ : invalid location of keypath aggregate function
Can't generate SQL for keypath %@ : invalid keypath
Can't generate SQL for keypath %@ : invalid attribute name location
Can't generate SQL for keypath %@ : multiple to many keypath components
Can't generate SQL for keypath %@ : unexpected problem
Unable to generate sql for components %@
Invalid keypath for update (not an attribute or a to one) %@
Attempting to insert a relationship value into an attribute or vice versa is not supported %@/%@
Invalid keypath expression (%@) in propertiesToUpdate - joins unsupported here
Unable to generate sql for update expression %@
Can't find property %@ on entity %@
Invalid property for update (not an attribute or a to one) %@/%@
Fetch request expression evaluation (%@) failed
Invalid fetch expression (%@) in propertiesToUpdate - fetch has multiple results
Invalid new constant value %@ for %@ (not a managed object)
Invalid value expression (%@) in propertiesToUpdate : what does it mean to update a relationship to the result of a function?
Invalid expression (%@) in propertiesToUpdate
Can't generate new column value from expression %@
, Z_OPT = (Z_OPT + 1) 
_NSInMemoryStoreArchivedData
memory://%lx
conflictList
object snapshot
cached row
database row
%@ (%p) for NSManagedObject (%p) with objectID '%@' with oldVersion = %d and newVersion = %d and old %@ = %@ and new %@ = %@
%@ (%p) for NSManagedObject (%p) with objectID '%@' with oldVersion = %d and newVersion = <deleted> and old %@ = %@
snapshot
cachedRow
databaseRow
newVersion
oldVersion
sourceObject
T@"NSManagedObject",R,&,V_source
objectSnapshot
T@"NSDictionary",R,&,V_snapshot1
cachedSnapshot
T@"NSDictionary",R,&,V_snapshot2
persistedSnapshot
T@"NSDictionary",R,&,V_snapshot3
newVersionNumber
TI,R,V_newVersion
oldVersionNumber
TI,R,V_oldVersion
%@ (%p) for constraint %@: database: %@, conflictedObjects: %@
constraint
T@"NSArray",R,&,V_constraint
constraintValues
T@"NSDictionary",R,&,V_conflictedValues
databaseObject
T@"NSManagedObject",R,&,V_databaseObject
databaseSnapshot
T@"NSDictionary",R,&,V_databaseSnapshot
conflictingObjects
T@"NSArray",R,&,V_conflictingObjects
conflictingSnapshots
T@"NSArray",R,&,V_conflictingSnapshots
NSTypeCode
Can't merge conflict : missing context
Can't merge conflict : conflicting objects have different entities.
Can't merge conflict : resolution stage failed
That was unexpected. Error trying to get %@ from %@ (%@)
B12@?0@"NSMergeConflict"4@"NSDictionary"8
errorMergePolicy
T@"NSMergePolicy",R
rollbackMergePolicy
overwriteMergePolicy
mergeByPropertyObjectTrumpMergePolicy
mergeByPropertyStoreTrumpMergePolicy
mergeType
currentEntityMapping
currentPropertyMapping
migrationProgress
T@"NSEntityMapping",&
T@"NSPropertyMapping",&
currentMigrationStep
Cannot create an NSMigrationManager with a nil source model
Cannot create an NSMigrationManager with a nil destination model
Manager requires an entity mapping for associations
Can't find mapping for name (%@).
(migration) got more destinations for source than we expected. (%@, %@, %@)
Property mapping %@.%@ missing required relationship name argument to destinationInstancesForSourceRelationshipNamed:sourceInstances:
Can't find relationship for name (%@) for entity (%@) in source model.
more
fewer
(migration) got %@ destinations[%lu] for sources[%lu] than we expected. (%@, %@)
(migration) got more sources for destination than we expected. (%@, %@, %@)
usesStoreSpecificMigrationManager
mappingModel
T@"NSMappingModel",R
sourceModel
destinationModel
T@"NSManagedObjectContext",R
destinationContext
T@"NSEntityMapping",R
Tf,R
Can't find entity named %@ in source model
Mismatch between mapping and source/destination models
Can't add source store
journal_mode
journal_mode]
Can't add destination store
Failed to save new store after first pass of migration.
Failed to save new store after second pass of migration.
Failed to save new store.
%@ (URL: %@)
CoreSpotlight integration not supported on this platform.
T@"NSPersistentStoreCoordinator",R,W,N
configurationName
T@"NSDictionary",R
T@"NSURL",&
Unable to unload store file because file at path '%@' could not be removed
File appeared during sanity check; this seems suspicious
Failed to create file; code = %d
Component of path %@ is not a directory
Failed to access file: %d
Could not write to file.
Store does not support this method
NSStoreType
NSStoreUUID
NStoreMigrationPolicy
NSStoreModelVersionHashes
NSStoreModelVersionIdentifiers
added
removed
changedUUID
NSPersistentStoreCoordinatorStoresWillChangeNotification
NSPersistentStoreCoordinatorStoresDidChangeNotification
_NSPersistentStoreCoordinatorStoresDidChangePrivateNotification
NSPersistentStoreCoordinatorWillRemoveStoreNotification
NSPersistentStoreCoordinatorDidAutomigrateStoreNotification
_NSPersistentStoreCoorindatorPrivateWillRemoveStoreNotification
NSPersistentStoreTypeKey
SQLite
Binary
InMemory
NSXPCStore
NSReadOnlyPersistentStoreOption
NSSQLitePragmasOption
NSSQLitePersistWALOption
NSIgnorePersistentStoreVersioningOption
NSMigratePersistentStoresAutomaticallyOption
NSInferMappingModelAutomaticallyOption
NSPersistentStoreTimeoutOption
NSPersistentStoreOSCompatibility
NSPersistentStoreConnectionPoolMaxSize
NSPersistentStoreUnlinkDestroyOption
NSPersistentStoreForceDestroyOption
NSPersistentStoreUbiquitousContentNameKey
NSPersistentStoreUbiquitousContentURLKey
NSPersistentStoreUbiquitousPeerTokenOption
NSUbiquityIdentityTokenOverrideKey
NSPersistentStoreUbiquitousTransitionTypeKey
NSUbiquityImporterPrivateStoreKey
NSPersistentStoreUbiquitousContainerIdentifierKey
NSPersistentStoreRebuildFromUbiquitousContentOption
NSPersistentStoreUbiquitousSeedStoreURLKey
NSAffectedStoresKey
NSUbiquityOptionsRemovedDuringAutomaticMigrationKey
NSPersistentStoreCoordinatorDidImportExternalRecordsNotification
NSPersistentStoreFileProtectionKey
NSPersistentStoreRemoveUbiquitousMetadataOption
NSAutomaticMigrationUseDocumentDestinationOption
NSPersistentStoreForceLightweightMigrationOption
NSCoreDataCoreSpotlightExporter
NSExternalRecordsDirectoryOption
NSExternalRecordsFileFormatOption
NSExternalRecordExtensionOption
NSSQLiteAnalyzeOption
NSSQLiteManualVacuumOption
_NSSQLitePageCacheSizeStoreOption
_NSSQLiteTemporaryStoreOption
_NSSQLitePageSizeStoreOption
_NSNotifyObserversOfStoreChange
NSStoreModelVersionHashesVersion
NSPersistenceFrameworkVersion
NSStoreLastReferecedObjectKey
NSPersistentStoreOrderKeyUpdateNotification
NSPersistentHistoryTrackingKey
NSPersistentHistoryTombstoneAttributes
NSPersistentHistoryTrackingEntitiesToInclude
NSPersistentHistoryTrackingEntitiesToExclude
Can only use -performBlock: on an NSPersistentStoreCoordinator that was created with a queue.
Can only use -performBlockAndWait: on an NSPersistentStoreCoordinator that was created with a queue.
 API Misuse: Attempt to serialize store access on non-owning coordinator (PSC = %p, store PSC = %p)
NSPersistentStoreCoordinator %p: 
NSPersistentStoreCoordinator %p
Cannot register a store class using a 'nil' type.
Store type '%@' is reserved for Core Data, and cannot be re-registered.
SQLite f
Invalid store URL: nil
This is not the API you're looking for.
This is not the API you're looking for
Cannot set metadata in read-only store.
v8@?0@"NSPersistentStore"4
An NSPersistentStore illegally threw an exception from -willRemoveFromPersistentStoreCoordinator:
client failed to call designated initializer on NSPersistentStoreCoordinator
Cannot create an NSPersistentStoreCoordinator with a nil model
Use of the mirroring options requires that a mirroring delegate also be provided. The following options were set, but a mirroring delegate was not found at '%@':
iCloud Syncing is not supported on this platform.
NSPersistentStoreCloudKitContainerIdentifierKey
NSCloudKitEncryptRecordsOptionKey
NSCloudKitInitializeSchemaOptionKey
NSPersistentStoreMirroringDelegateOptionKey
%@ is only valid as a mirroring option. It should be set using '%@' on '%@'
Store options for external records must specify both the external records directory and the extension to be used
_UNITTESTING_IGNORE_EXTERNAL_RECORDS_PATH
/CoreData/
/Metadata/CoreData/
External records directory must live under ~/Library/CoreData/ or ~/Library/Caches/Metadata/CoreData/
CoreSpotlight integration is not supported on this platform. The following option key is forbidden: %@
Unsupported store type.
Default
Unable to initialize store.
Can't read store metadata.
The store type in the metadata does not match the specified store type.
The version hash version (and associated hashes) are incompatible with the current Core Data version.
 NOT 
Incompatible version schema for persistent store '%@'.  store metadata = %@ and current model versions = %@
(migration)
 will%@attempt automatic schema migration
CoreData: error: (migration) migration failed with error %@
Error User Info: %@
Underlying error: %@
(migration)
 Automatic schema migration succeeded for store at '%@'
The model used to open the store is incompatible with the one used to create the store
-addPersistentStoreWithType:%@ configuration:%@ URL:%@ options:%@ ... returned error %@ with userInfo dictionary %@
NSPersistentStoreCoordinator's current model hashes are %@
store is nil or not registered with this coordinator
nil is not a valid store.
nil is not a valid persistent store
nil is not a valid persistent store URL
The specified URI is not a valid Core Data URI: %@
(unknown)
(schema mismatch or migration failure)
(corrupt file)
(device locked)
(can't open)
(permission denied)
(I/O error)
(disk full)
This NSPersistentStoreCoordinator has no persistent stores %@.  It cannot perform a save operation.
Illegal attempt to save to a file that was never opened.  "%@".  Last recorded error = %@ / %@
Illegal attempt to save to a file that was never opened. "%@". No last error recorded.
optimistic locking failure
Save partially failed: %@
NSPersistentStoreRequest
NSPersistentStore
Store returned nil but no error.
NSPersistentStores
Operation unsupported by all stores on this coordinator.
Underlying errors
One or more stores returned an error.
v8@?0@"NSArray"4
registeredStoreTypes
persistentStores
UIApplication
URI is not a valid Core Data URI
Can't add the same store twice
Store is not valid for this context's generation
store
context
NSManagedObjectContext is nil for objects passed to obtainPermanentIDsForObjects
Can't resolve how to assign objects to stores; Coordinator does not have any stores
Can't resolve how to assign objects to stores; some objects may have been assigned to stores; use [[managedObject objectID] persistentStore] to find out what is going where now; use [managedObjectContext assignObject:toStore:] to straighten things out
problemObject
Cannot insert objects into a read only store.
Cannot update objects into a read only store.
Cannot update object that was never inserted.
Cannot delete objects into a read only store.
Cannot delete object that was never inserted.
Cannot lock object that was never inserted.
Can't find store type for store %@ (class == %@) in %@.
Cannot change an NSPersistentStoreCoordiantor's QoS after use
Fetch instances of entity %@ from store %@ failed, reason: %@
Referential integrity problem found during migratePersistentStore:toURL:options:withType:error: %@
Save failed during during migratePersistentStore:toURL:options:withType:error:, object added to store during fetch.
Save failed during migratePersistentStore:toURL:options:withType:error:, %d objects in store were removed during fetch.
Save failed.
Invalid destination store URL: nil
Invalid source store URL: nil
source and destination store are different classes of store: %@ != %@
Invalid generation token: this persistent store coordinator does not have any of the referenced stores
Provided persistent store must be of type NSSQLiteStoreType: %@
Provided persistent store must be from this coordinator: %@
%@ - One or more unknown attributes: %@
%@ - `@""` is not a valid value.
%@ - Wrong type: %@ but should be %@
The following entities did not have a valid configuration for %@. It should be a string of comma separated attribute names to tombstone on delete.
%@ expects an instance of %@ as its value but found: %@
Exception was caught during NSPersistentStoreCoordinator -performBlock: %@ with userInfo %@
Unidentifiable exception was caught during NSPersistentStoreCoordinator -performBlock.
Exception thrown during autorelease pool drain.
Move
Update
Delete
Insert
Unset
<%@: %p> { object: %p, type: %@%@%@ }
, startIndex: %@
, finalIndex: %@
T@"NSManagedObject",R,&,N,V_object
changeType
TI,N,V_changeType
startIndexPath
T@"NSIndexPath",&,N,V_startIndexPath
finalIndexPath
T@"NSIndexPath",&,N,V_finalIndexPath
startSectionInfo
T@"_NSDefaultSectionInfo",&,N,V_startSectionInfo
finalSectionInfo
T@"_NSDefaultSectionInfo",&,N,V_finalSectionInfo
NSIsOptional
NSIsReadOnly
NSIsTransient
NSIndexedBySpotlight
NSIsStoredInTruth
NSIsOrdered
NSPropertyName
NSValidationPredicates
NSValidationWarnings
(%@), name %@, isOptional %d, isTransient %d, entity %@, renamingIdentifier %@, validation predicates %@, warnings %@, versionHashModifier %@
 userInfo %@
Can't change name of property from %@ to %@
Mismatch between length of validation predicates and warnings
T@"NSString",C,N
optional
TB,GisOptional
transient
TB,GisTransient
validationPredicates
validationWarnings
indexed
TB,GisIndexed
indexedBySpotlight
TB,GisIndexedBySpotlight
storedInExternalRecord
TB,GisStoredInExternalRecord
Can't read property into shell: Not enough bytes left
Can't read property into shell: Unknown type
Can't read property into shell: Missing version hash value
Corrupted archive (missing property name).
Can't read property into shell: Can't read validation predicates
Can't read property into shell: Can't read validation warnings
<NSBatchUpdateRequest : entity = %@, properties = %@, subentities = %d
This batch update request (%p) was created with a string name (%@), and cannot respond to -entity until used by an NSManagedObjectContext
Invalid string keypath %@ passed to propertiesToUpdate:
Invalid string key %@ passed to propertiesToUpdate:
Attribute/relationship description names passed to propertiesToUpdate must match name on fetch entity (%@)
Invalid property %@ passed as key to propertiesToUpdate:
Invalid expressionDescription %@ passed as key to propertiesToUpdate:
Invalid relationship (%@) passed to propertiesToUpdate:
Can't find entity for batch update (%@)
TB,N,G_secureOperation,S_setSecureOperation:
T@"NSEntityDescription",R,V_entity
T@"NSPredicate",&,V_predicate
propertiesToUpdate
T@"NSDictionary",C,V_columnsToUpdate
NSPropertyTransformMandatoryPropertyValidation
NSDestinationPropertyName
NSValueExpression
NSPropertyTransforms
(%@), name %@, valueExpression %@, userInfo %@
valueExpression
Property Mappings cannot become mutable after being marked immutable.
Can't modify an immutable property mapping.
Z_RT_%@_%@
v16@?0@"NSString"4I8^B12
latitude
longitude
'%@' is not a valid description for a location index, it should include two comma separated components or be an array of two string identifying the attributes which make up the location index.
%@.%@ has an invalid description for a location index. It must be either an array or a comma separated string of two components identifying the latitude / longitude properties to use.
Unable to configure location index: %@.%@ type is %@ but should be %@.
RTree tables can only be created to back transient attributes. %@.%@ is not transient.
Unable to configure location index: couldn't find an attribute named '%@' on '%@'
Unable to configure location index (invalid %@ on %@.%@): 
Unable to configure location index (invalid %@ on %@.%@): %@.%@ is of type %@ and should be of type %@.
%@.%@ is a transient attribute.
%@.%@ is a relationship.
couldn't find an attribute named '%@' on '%@' to use as the %@.
CREATE VIRTUAL TABLE IF NOT EXISTS %@ USING RTREE (Z_PK INTEGER PRIMARY KEY, %@_MIN FLOAT, %@_MAX FLOAT, %@_MIN FLOAT, %@_MAX FLOAT)
DROP TABLE IF EXISTS %@
CREATE TRIGGER IF NOT EXISTS %@_INSERT AFTER INSERT ON %@ FOR EACH ROW BEGIN INSERT OR REPLACE INTO %@ (Z_PK, %@_MIN, %@_MAX, %@_MIN, %@_MAX) VALUES (NEW.Z_PK, NEW.%@ ,NEW.%@, NEW.%@, NEW.%@) ; END
DROP TRIGGER IF EXISTS %@_INSERT
CREATE TRIGGER IF NOT EXISTS %@_UPDATE AFTER UPDATE ON %@ FOR EACH ROW BEGIN DELETE FROM %@ WHERE Z_PK = NEW.Z_PK ; INSERT INTO %@ (Z_PK, %@_MIN, %@_MAX, %@_MIN, %@_MAX) VALUES (NEW.Z_PK, NEW.%@ ,NEW.%@, NEW.%@, NEW.%@) ; END
DROP TRIGGER IF EXISTS %@_UPDATE
CREATE TRIGGER IF NOT EXISTS %@_DELETE AFTER DELETE ON %@ FOR EACH ROW BEGIN DELETE FROM %@ WHERE Z_PK = OLD.Z_PK ; END
DROP TRIGGER IF EXISTS %@_DELETE
INSERT OR REPLACE INTO %@ (Z_PK, %@_MIN, %@_MAX, %@_MIN, %@_MAX) SELECT Z_PK, %@, %@, %@, %@ from %@ where %@ NOT NULL and %@ NOT NULL
userInfoObject
T@"NSObject",R,N,V_userInfoObject
components
T@"NSArray",R,N,V_components
attributeDescription
T@"NSAttributeDescription",R,N,V_attributeDescription
sqlEntity
T@"NSSQLEntity",R,N,V_sqlEntity
rtreeTableName
T@"NSString",R,N,V_rtreeTableName
latProp
T@"NSAttributeDescription",R,N,V_latProp
longProp
T@"NSAttributeDescription",R,N,V_longProp
NSPrerequisiteTransform
NSReplaceMissingValueOnly
(%@), propertyName %@, valueExpression %@, prerequisiteTransform %@, replaceMissingValueOnly %@
propertyName
T@"NSString",&,N,V_propertyName
T@"NSExpression",&,N,V_valueExpression
prerequisiteTransform
T@"NSPropertyTransform",&,N,V_prerequisiteTransform
replaceMissingValueOnly
TB,V_replaceMissingValueOnly
Validating options: %@
storeOptions: %@
-[PFCloudKitOptionsValidator validateOptions:andStoreOptions:error:]
A container identifier is required for the CloudKit integration.
%@ is required for the CloudKit integration.
NSCloudKitMirroringDelegateOptions.containerOptions only accepts values of type '%@'. The following is not a valid value:
The value for 'NSCloudKitMirroringDelegateOptions.ckAssetThresholdBytes' must be at least %@ bytes. The following value is invalid: %@
The value for 'NSCloudKitMirroringDelegateOptions.ckAssetThresholdBytes' must be an instance of '%@'. The following value is invalid: %@
parsedOptions
T@"NSCloudKitMirroringDelegateOptions",R,N,V_parsedOptions
CKContainerOptions
NSMaxCount
NSMinCount
NSDeleteRule
NSDestinationEntity
_NSDestinationEntityName
NSInverseRelationship
_NSInverseRelationshipName
%@, destination entity %@, inverseRelationship %@, minCount %lu, maxCount %lu, isOrdered %d, deleteRule %lu
T@"NSEntityDescription",N
inverseRelationship
T@"NSRelationshipDescription",N
maxCount
minCount
deleteRule
toMany
TB,R,GisToMany
ordered
TB,GisOrdered
repairing missing delete propagation for to-one relationship %@ on object %p (%@) with bad fault %p (%@)
Dangling reference to an invalid object.
Illegal container for relationship: value = %@; relationship = "%@".
repairing missing delete propagation for to-many relationship %@ on object %p (%@) with bad fault %p (%@)
"%@" INTEGER
FOREIGN KEY ("%@") REFERENCES "%@" ("%@")
T@,R,N
pointerResponsibility
TI,R,N,V_pointerResponsibility
%@ { inserts (%@), updates (%@), deletes (%@) locks (%@) }
T@"NSSet",R
lockedObjects
n%u_t%cu
__n%u_var%cu
__var%u
_Z_intarray%u
NSSQLAttributeTriggerAssociationKey
triggerKeys
constrained
TB,N,GisConstrained
%@: columnName = %@, type = %d, slot = %d, fetchIndex = %d propertyType = %d
Problem with subpredicate %@
 NOT (
Unknown compound predicate type %@
Unable to generate compound where clause for predicate (%@) (unknown problem)
entitySpecificationKeypath
entitySpecificationKeypathContainsToMany
selectBindVars
bindVars
'%@'
Can't specify non string/number/date value as part of index
valueSpecified
_NSSQLiteSEEKeychainItemOption
com.apple.CoreData.SQLDebug
com.apple.CoreData.ConcurrentFetching
v12@?0^v4I8
Keychain failed to return key for database encryption (error %d)
Keychain did not return a key for database encryption
path's fileSystemRepresentation returned NULL
 failed to open file due to illegal URL encoding.  error = %@ with userInfo %@
Cannot create an SQL store with a nil URL.
CoreData SQL stores only support file URLs (got %@).
NSPersistentStoreRemoveStoreOnCleanup
Got a nil sqlmodel
NSPersistentHistoryTrackingKey must be a NSNumber
NSPersistentHistoryTrackingEntitiesToInclude must be an NSArray of NSString
NSPersistentHistoryTrackingEntitiesToInclude has entities not included in the Managed Object Model
NSPersistentHistoryTrackingEntitiesToExclude must be an NSArray
NSPersistentHistoryTrackingEntitiesToExclude must be an NSArray of NSString
NSPersistentHistoryTrackingEntitiesToExclude has entities not included in the Managed Object Model
Persistent History is disabled - %@
NSXPCStoreDelegate
/var/mobile/Library/Accounts
/private/var/mobile/Library/Accounts
VersionSkewIntermediateFixTable
Bad correlation tables in read-only database
Can't find table for entity %@ in database at URL %@
Exception caught during index recreation %@ with userInfo %@
Exception caught during index recreation %@
Repairing old triggers failed with error = %@ and userInfo = %@
Exception caught during trigger recreation %@ with userInfo %@
Exception caught during trigger recreation %@
pragma auto_vacuum
pragma auto_vacuum=1
vacuum
Exception caught during drop of old history tracking tables %@ with userInfo %@
Exception caught during drop of old history tracking tables %@
Exception caught during drop/create of history tracking tables %@ with userInfo %@
Exception caught during drop/create of history tracking tables %@
Exception trying to update primary key table
finished upgrade checks, bumping metadata
Exception caught during _ensureDatabaseMatchesModel %@ with userInfo %@
Exception caught during _ensureDatabaseMatchesModel %@
v8@?0@"NSSQLiteConnection"4
v8@?0@"NSSQLStoreRequestContext"4
cannot find data for a temporary oid: %@
_NSSQLCoreTransactionStateChangeNotification
_NSSQLCoreTransactionType
_NSSQLCoreTransientSequenceNumber
_NSSQLCoreActiveSavingContext
-executeRequest: encountered exception = %@ with userInfo = %@
_SUPPORT
Can't write external data to non-file URL
_EXTERNAL_DATA
Can't create support directory (can't create directory)
Can't create external reference directory (file exists)
Could not connect to database.
_NSAutoVacuumLevel
Failed to delete support directory for store: %@
_transsrc_4052146efa0d85c9fbe0634c0e8bc4457ed82f7c
_transdst_878d188f109e9f52ae70b0b25413f6a38c8267a8
Failed to delete staging area for external support directory for store: %@
Failed to copy support directory from store: %@ to store: %@.  %@
Failed to delete support directory for store: %@.  %@
Failed to copy support directory from store: %@ to store: %@ (failed to move %@ to %@ due to %@)
Failed to unlink support directory %@ from old store location: %@ due to %@
Uncaught exception while initializing query generations feature:  %@
Unsupported feature in this configuration
Failed to geta currentQueryGeneration
exception handling request: %@ , %@ with userInfo of %@
YouTube
Can't fetch UUIDs for non-root entities
Invalid parameter value (missing parameter)
Invalid parameter value (bad entity)
Invalid parameter value (zero)
recordName IN %@ OR relatedRecordName IN %@
Fetch for mirrored relationships failed: %@
%K IN %@ OR isPending = 1
isPending = 1
Asked to delete a mirrored relationship that doesn't have a primary key: %@
failed to retrieve ordering information from fault for object %@ and relationship %@
presentedItemURL
T@"NSURL",R,C
presentedItemOperationQueue
T@"NSOperationQueue",R,&
primaryPresentedItemURL
observedPresentedItemUbiquityAttributes
isInitialized
UIApplicationSuspendedNotification
Threw during attempt to purge SQL row cache data
Invalid collation type (rtree indexes can only be created on attributes).
Invalid collation type (rtree indexes can only be created for floats or integers < 32 bit).
Can't create an index element without a property
Can't create an index element with an unnamed property
Can't create an index element with non-attribute property
NSIndexedProperty
NSFetchIndexElementType
NSFetchIndexDescription
NSAscending
<NSFetchIndexElementDescription : (%@ (%@), %d, %@)>
modeled property
Broken logic around index elements
offender
T@"NSPropertyDescription",R,&
T@"NSString",R,&,V_propertyName
collationType
TB,GisAscending
indexDescription
T@"NSFetchIndexDescription",R,N
columnName
i12@?0@4@8
<NSSQLEntity %@ id=%d>
Trying to add a non-attribute, non-to-one property to an entity: %@
rtreeIndexes
storeRequest
Z_PK
SELECT
COUNT(
DISTINCT
t0.Z_PK)
FROM
SELECT COUNT(*) FROM %@
SELECT COUNT(*) FROM (
 AND (
WHERE 
GROUP BY 
HAVING 
%@%d_%@
%@%@
Unable to generate sql for %@ as part of  expression (%@)
Wrong number of arguments to function add:to: (%@)
Unable to generate sql for add:to: argument 0(%@)
Unable to generate sql for add:to: argument 1(%@)
Unsupported expression in index description (%@)
(SELECT 
) FROM 
restrictingEntityPredicate
 WHERE (
 >= 
Can't generate sql for entityID
 <= 
Unsupported expression in index description (%@), '%@' not supported in this context
Unsupported join (min/max(key.path) not allowed in updates)
Invalid keypath element (not a relationship or attribute): %@
Invalid keypath (continues after attribute name): %@
Invalid keypath (request for aggregate operation on a toOne-only keypath): %@
Invalid keypath (too many toMany relationships): %@
count
Invalid keypath (no terminal attribute in call to math aggregate): %@
Failed to generate SQL for function expression: %@
Unsupported expression in index description (%@), aggregates not allowed here.
Non-attribute property passed to math function: %@
Unable to generate sql for %@, empty max/etc expression
Unable to generate sql for %@
Unable to generate sql for subquery: %@
Unsupported expression %@
Unable to generate sql for %@() : argument (%@) not supported
Unsupported expression in index description (%@), aggregate operations not allowed here
Unable to generate sql for %@, empty %@ expression
Unable to generate sql for %@, empty expression
Bad argument to upper/lower function (needs to be a keypath or a string) : %@
Invalid number of parameters passed to uppercase: function
Bad value
Unable to generate sql for %@, can't drop index on non-keypath
Invalid number of parameters passed to function (%@)
Unsupported expression in index description (%@), 'count' not supported in this context
Invalid number of arguments to count (requires at least 1 argument)
Unable to generate SQL for count expression %@
count(*)
COUNT(*)
.@count
distinct:
Unable to generate SQL for expression: %@
COUNT (
Unsupported function expression : %@
Invalid number of arguments to avg function : %@
_NSPredicateUtilities
Bad argument to %@ (can't get the %@ of collection) : %@
Bad argument to sum (non-numeric, non-collection argument) : %@
Unable to generate SQL for keypath: %@
Bad argument to aggregate %@ in select (must be a keypath or constant value) : %@
Non-attribute property passed to sum: %@
Unable to generate SQL for subquery: %@
Unsupported argument to sum : %@
Unsupported expression in index description (%@), 'distinct' not allowed here
Invalid number of arguments to distinct : %@
Invalid argument to distinct : %@
Unable to generate SQL for distinct : %@
DISTINCT 
Unsupported expression in index description (%@), 'now' not allowed here
Invalid number of arguments to now function : %@
Invalid number of arguments to length: function : %@
Invalid argument to length: : %@
Unable to generate SQL for length : %@
length(
You should not have made it here, scope failed at its job : %@
NSCoreDataToUpper(
NSCoreDataToLower(
abs(
total
 << 
 >> 
Unsupported function type passed as index component (either not a valid function at all, or just not valid in this context).
Unsupported function type passed to SQL store
Invalid rowCache row is nil
Optimistic locking failure for %@.  Original row was missing while recording to-many changes.  New row = %@
Optimistic locking failure for %@.  Original row was missing while recording to-many changes.
%d%@
saveRequest
T@"NSSaveChangesRequest",R
savingContext
transactionInMemorySequence
Ti,N
externalDataReferencesToSave
T@"<_NSCoreDataCollectionWithoutKeys>",R,V_externalDataReferencesToSave
externalDataReferencesToDelete
T@"<_NSCoreDataCollectionWithoutKeys>",R,V_externalDataReferencesToDelete
%@ - Skipping unknown updated relationship record: %@
-[PFCloudKitImportContext initializeCachesWithManagedObjectContext:andObservedStore:error:]_block_invoke_2
v16@?0@"NSString"4@"NSArray"8^B12
Failed to serialize many to many relationship from record: %@
-[PFCloudKitImportContext initializeCachesWithManagedObjectContext:andObservedStore:error:]_block_invoke
%@ - Skipping unknown updated record: %@
v16@?0@"CKRecord"4I8^B12
%@ - Skipping unknown deleted relationship recordID: %@ - %@
%@ - Skipping unknown deleted record: %@ - %@
%K in %@
v16@?0@"NSString"4@"NSMutableArray"8^B12
deletedObjectIDs
T@"NSSet",R,N,V_deletedObjectIDs
modifiedRecords
T@"NSArray",R,N,V_modifiedRecords
deletedRelationships
T@"NSArray",R,N,V_deletedRelationships
updatedRelationships
T@"NSArray",R,N,V_updatedRelationships
importOperations
T@"NSArray",R,N,V_importOperations
invalidatedPendingRelationships
T@"NSArray",R,N,V_invalidatedPendingRelationships
pendingRelationshipsToTry
T@"NSArray",R,N,V_pendingRelationshipsToTry
ignoreInheritance
outerFetch
Bad NSFetchRequestExpression (%@ propertiesToFetch)
Too few
Too many
Bad fetch request (NSManagedObjectResultType not compatible with contents of propertiesToFetch)
ZZ_PK
Unknown predicate type for predicate: %@
informationGatherer
havingPredicateAnalyser
Invalid fetch request: HAVING with no GROUP BY
Invalid fetch request: GROUP BY requires NSDictionaryResultType
substitutionVariables
Unsupported predicate %@
Unsupported nested update inside of %@
@min
@max
@sum
@avg
nestedWhereSelect
duringPrefetching
subOrder
columnSubOrder
SELECT 0 FROM %@ WHERE 0 = 1
bindIntarrays
fabricatedSQLEntityForReadOnlyFetch
bindIntarraysSubstitutionOrder
Unable to generate index for %@
Reason: %@, %@
Reason: predicate always evaluates to false
NSUnderlyingExceptionKey
Unsupported function expression %@
Undefined variable expression %@
Unsupported: collections not allowed in index expressions.
Unsupported element in aggregate expression %@
Fetch request expressions not allowed in indexes
Unsupported fetch request expression in update - too many results
Unsupported subquery collection expression type
subquery
Unsupported expression type (%u, %@)
disambiguatingEntity
T@"NSSQLEntity",R,N
disambiguationKeypath
disambiguationKeypathHasToMany
DECIMAL
CHAR
VARCHAR
FLOAT
CLOB
UNDEFINED
INTEGER PRIMARY KEY
entity required
statement required
empty row
missing original
missing fetch request
DELETE FROM %@ WHERE Z_PK = OLD.%@ ; 
UPDATE OR FAIL %@ SET Z_OPT = (Z_OPT + 1) WHERE Z_PK = OLD.%@ ; 
SELECT NSPersistentHistoryBatchDeleteUpdateTrigger(4, Z_PK, Z_ENT, '%@') FROM %@ WHERE Z_PK = OLD.%@; %@
Delete rule is not supported for batch deletes
CREATE TEMPORARY TRIGGER IF NOT EXISTS ZQ_%@_TRIGGER AFTER DELETE ON %@ FOR EACH ROW BEGIN %@
CREATE TEMPORARY TRIGGER IF NOT EXISTS ZQ_%@_TRIGGER AFTER DELETE ON %@ FOR EACH ROW BEGIN %@ END
DROP TRIGGER IF EXISTS ZQ_%@_TRIGGER
CREATE TABLE 
%@ %@ UNIQUE
%@ %@
, CONSTRAINT %@ UNIQUE (
 INTEGER PRIMARY KEY, 
 VARCHAR, 
 INTEGER, 
 INTEGER)
INSERT INTO %@(%@, %@, %@, %@) VALUES(%u, '%@', %u, %qd)
UPDATE OR FAIL %@ SET %@ = MAX((SELECT %@ FROM %@ WHERE %@ = '%@'), (SELECT CASE WHEN (SELECT COUNT(*) FROM %@ )== 0 THEN 0 ELSE (SELECT MAX(%@) FROM %@) END)) WHERE %@ = '%@'
SELECT CASE WHEN (SELECT COUNT(*) FROM %@) == 0 THEN 0 ELSE (SELECT MAX (%@) FROM %@) END
MAX((SELECT %@ FROM %@ WHERE %@ = '%@'), (%@))
MAX((SELECT %@ FROM %@ WHERE %@ = '%@'),
(%@)
UPDATE OR FAIL %@ SET %@ = (%@) WHERE %@ = '%@'
ALTER TABLE 
 RENAME TO 
) SELECT 
 FROM 
DROP TABLE IF EXISTS 
DROP TABLE 
, PRIMARY KEY (
%@_%@_INDEX
CREATE INDEX IF NOT EXISTS %@ ON %@ (%@)
CREATE INDEX IF NOT EXISTS %@ ON %@ (%@, %@)
_NSLocationAttributeDerivedComponents
Entity named:%@ not found for relationship named:%@
MissingEntity
Name: %@ Destination Entity:%@
DELETE FROM %@ WHERE Z_PK = OLD.%@
DELETE FROM %@ WHERE %@ = OLD.Z_PK
SELECT RAISE(FAIL, 'Batch delete failed due to mandatory OTO nullify inverse on %@/%@') FROM %@ WHERE Z_PK = OLD.%@
UPDATE OR FAIL %@ SET %@ = NULL, Z_OPT = (Z_OPT + 1) WHERE %@ = OLD.Z_PK
SELECT NSPersistentHistoryBatchDeleteUpdateTrigger(4, Z_PK, Z_ENT, '%@') FROM %@ WHERE %@ = OLD.Z_PK; %@
UPDATE OR FAIL %@ SET Z_OPT = (Z_OPT + 1) WHERE Z_PK = OLD.%@
SELECT RAISE(FAIL, 'Batch delete failed due to manadatory OTM nullify inverse on %@/%@') FROM %@ WHERE %@ = OLD.Z_PK
UPDATE OR FAIL %@ SET %@ = NULL, %@ = NULL, Z_OPT = (Z_OPT + 1) WHERE %@ = OLD.Z_PK
WITH ZCTE_INTERMEDIATE AS (SELECT %@, %@ FROM %@ WHERE %@ = OLD.Z_PK) SELECT RAISE(FAIL, 'Batch delete failed due to mandatory MTM nullify inverse on %@/%@') FROM ZCTE_INTERMEDIATE T0 WHERE (0 == (SELECT COUNT(*) FROM %@ T1 where T1.%@ = T0.%@ and T1.%@ != OLD.Z_PK))
SELECT NSPersistentHistoryBatchDeleteTrigger(%d, %@, %@
, '%@', OLD.%@
) FROM %@ WHERE %@ = OLD.%@;
CREATE TEMPORARY TRIGGER IF NOT EXISTS ZQ_%@_HISTORYBATCHDELETE_TRIGGER BEFORE DELETE ON %@ FOR EACH ROW BEGIN %@ END
DROP TRIGGER IF EXISTS ZQ_%@_HISTORYBATCHDELETE_TRIGGER
Can't fetch source objects
NSBatchDeleteRequest could not locate an Entity for entity name '%@'
Model Configuration
t0.Z_ENT, 
DELETE FROM %@
DELETE FROM %@ WHERE Z_PK IN (%@)
SELECT %@, %@, %@ FROM %@ WHERE Z_PK = %u
T1.%@
SELECT T0.%@, %@, T0.%@ from %@ T0 JOIN %@ T1 on t0.%@ = t1.Z_PK where T0.%@ = %u
SELECT %@, %@, %@ FROM %@ WHERE %@ = %u
Z_PK, Z_ENT
, %@
(%@ IN (
SELECT %@ FROM %@ WHERE 
SELECT Z_PK FROM %@ WHERE %@ IN (
SELECT %@, %@ FROM %@ WHERE Z_PK IN (
 INTERSECT 
Invalid trigger configuration.
Invalid location index configuration.
NSSQLConnectionBeginTransactionNotification
NSSQLConnectionCommitTransactionNotification
NSSQLConnectionRollbackTransactionNotification
NSSQLAdapterFailureKey
NSSQLAdapterOptimisticLockingFailure
NSGeneralAdapterException
/usr/lib/libsqlite3.dylib
sqlite3_activate_see
sqlite3_key_v2
db_config failed: %d
Failed to activate SQLite encryption extension
SQLQueue %p for %@
main
Failed to initialize query generation tracking connection (%@), retries left: %d
Attempted to perform an operation without an open database
Attempted to perform another operation with a statement prepared
Attempted to perform another operation with a fetch already in progress
Nested transactions are not supported
[32msql: 
[34m
[47m%@
I/O error for database at %@.  SQLite error code:%d, '%s' errno:%d
I/O error for database at %@.  SQLite error code:%d, '%s'
Fatal error.  The database at %@ is corrupted.  SQLite error code:%d, '%s'
[31m
[47mERROR:
[31m (%d) %s
(%d) %s
error during execution of SQL string '%s' : %s
The database operation timed out after %.2f seconds.
[31m
[47mERROR:
[31m (%d) %@
(%d) %@
error during SQL execution : %@
sql execution time: 
[31m%.4f
[0ms
sql execution time: %.4fs
SELECT MAX(%@) FROM %@
Fetching maximum primary key for entity failed
synchronous
integrity_check
Unable to create index: %@ (%@)
CREATE TABLE %@ (%@ INTEGER PRIMARY KEY, %@ VARCHAR(255), %@ BLOB)
CREATE TABLE %@ (%@ BLOB)
CREATE TABLE IF NOT EXISTS Y_UBMETA (Y_PK INTEGER PRIMARY KEY ASC, YPEERID VARCHAR UNIQUE, YTRANSACTIONNUMBER INTEGER)
CREATE TABLE IF NOT EXISTS Y_UBRANGE (Y_PK INTEGER PRIMARY_KEY ASC, YPEERID VARCHAR, YENTITYNAME VARCHAR, YRANGESTART INTEGER, YRANGEEND INTEGER, YPEERSTART INTEGER, YPEEREND INTEGER)
CREATE TABLE IF NOT EXISTS Y_UBKVS (Y_PK INTEGER PRIMARY KEY ASC, YKEY VARCHAR UNIQUE, YVALUE VARCHAR)
page_size
pragma %@=%@
pragma %@
pragma recursive_triggers=1
Database failed integrity check.  Corrupted SQLite database at path: %@
lock_proxy_file
pragma %@='%@'
pragma %@=''
auto_vacuum
incremental
:memory:
Connecting to sqlite database file at "%@"
recursive_triggers
webdav
delete
memory
File at path does not appear to be a SQLite database: %@
db_config failed (_qGTC): %d
Cannot create a new database file with the read only option at path: %@
ANALYZE
VACUUM
:auto:
pragma lock_proxy_file='%@'
Failed to set file locking on source database
Failed to open source database
Failed to set file locking on destination database
Failed to open destination database
Failed to replace destination database
Source database Path
%@ failed to close destination database %@
%@ failed to close source database %@
-journal
-wal
ignoring unsupported page_size specified as truncate option: %@
full
unsupported auto_vacuum setting specified as truncate option: %@
-shm
-conch
Failed to truncate database
Disconnecting from sqlite database due to an error.
Disconnecting from sqlite database.
Disconnected from database with pending transactions: %@
Un-finalized statement: %p
BEGIN EXCLUSIVE
BEGIN TRANSACTION
%@ -- %@ %p: attempted to commit a transaction while a fetch was in progress
COMMIT
%@ -- %@ %p: attempted to rollback a transaction while a fetch was in progress
ROLLBACK
Can't demote a connection from being a writer
Optimistic locking failure for %@.  During updateRow.  Original row = %@ New Row = %@ context version match = %d
Optimistic locking failure for %@. During updateRow.  Original row = %p context version match = %d
%u-%lld
Optimistic locking failure for %@.  During updateRow, rows processed = %d.  Original row = %@ New row = %@
Optimistic locking failure for %@.  During updateRow, rows processed = %d.
Optimistic locking failure for %@.  During updateConstrainedValuesForRow, rows processed = %d.  New Row = %@
Optimistic locking failure for %@.  During updateConstrainedValuesForRow, rows processed = %d.  Row was updated.
Optimistic locking failure for %@.  During deleteRow.  Original row = %@ New Row = %@ context version match = %d
Optimistic locking failure for %@. During deleteRow. version match = %d
correlation bindings: %qu, %qu, %qu, %qu
v40@?0Q4Q12Q20Q28^B36
correlation bindings:  %qu, %qu
v24@?0Q4Q12^B20
correlation bindings: %qu, %qu, %qu
v32@?0Q4Q12Q20^B28
SQL statement is still active / leaked.  sql:'%@'
statement is still active
Statement
error during prepareSQL for SQL string '%s' : %s
CoreData: SQLite: error: Can't bind intarray. SQLite error code: %d
Bound intarray %@
Bound intarray value %lu at %d
Bound intarray values.
sqlite3_bind* failed
SQLite bind[%ld] = %@
<NSData len=%lu>
SQLite bind[%ld] = "%@"
SQLite bind[%ld] = (timestamp)%f
SQLite bind[%ld] = (int64)%qd
SQLite bind[%ld] = nil
binding not implemented for this SQLType %d
Unexpected or improperly formatted URI parameter type %@, expected NSURL or well-formed NSString
%lu/%lu
Unexpected or improperly formatted UUID parameter with type %@, expected NSUUID or well-formed NSString
fetching not implemented for this value type
[31m
[47mERROR:
[31m %@
The database appears corrupt.  (invalid entity key)
The database appears corrupt.  (invalid primary key)
Row (pk = %lld) for entity '%@' is missing mandatory text data for property '%@'
pragma secure_delete=1
pragma secure_delete=0
pragma locking_mode=EXCLUSIVE
pragma locking_mode=NORMAL
pragma integrity_check
SELECT TBL_NAME FROM SQLITE_MASTER WHERE TYPE = "table" ORDER BY TBL_NAME
TBL_NAME
Encountered exception %@ with userInfo %@ while fetchTableNames from store: %@
SELECT TBL_NAME, SQL FROM SQLITE_MASTER WHERE TYPE = "table" ORDER BY TBL_NAME
Ubiquity: Encountered exception %@ with userInfo %@ while fetchTableCreationSQL from store: %@
SELECT 
 FROM %@ WHERE (
(%@ >= ?)
SELECT TBL_NAME FROM SQLITE_MASTER WHERE TBL_NAME = '%@'
Encountered exception %@ with userInfo %@ while checking table name from store: %@
metadata is not a dictionary: %@
The metadata is not a dictionary: %@
DELETE FROM %@ WHERE %@ = ?
failure writing metadata plist with data bytes: %@
An error %@ occurred converting the metadata plist data: %@
INSERT INTO %@ (%@, %@, %@) VALUES (?, ?, ?)
Saving new meta data; version = %@ ; UUID = %@
SELECT %@, %@, %@ FROM %@
failure reading metadata plist with data bytes: %@
Metadata table is missing database UUID.
Could not initialize compression decoder.
Failed to decompress model cache.
SELECT %@ FROM %@
Could not initialize compression encoder.
INSERT INTO %@ (%@) VALUES (?)
Saving new model cache
unable to cache model: %@
An internal error occurred while configuring functions in the SQLite database.
primary keys must be generated within a transaction
SELECT %@ FROM %@ WHERE %@ = ?
getting max pk for entityID = %u
Fetching maximum primary key failed
UPDATE OR FAIL %@ SET %@ = ? WHERE %@ = ? AND %@ = ?
updating max pk for entityID = %u with old = %qd and new = %qd
Updating max pk failed: %@
pragma auto_vacuum=%@
pragma page_size=%d
pragma journal_mode=wal
creating schema.
Creating primary key table.
re-adding all indices
pragma page_count
pragma freelist_count
pragma incremental_vacuum(%d)
pragma wal_checkpoint(TRUNCATE)
EXPLAIN QUERY PLAN %s
SQLite: %s
     
%d %d %d %s
DROP TABLE IF EXISTS Y_UBMETA
DROP TABLE IF EXISTS Y_UBRANGE
DROP TABLE IF EXISTS Y_KVS
Ubiquity: Encountered exception %@ with userInfo %@ while dropping tables from store: %@
ZCHANGETRACK
ZCHANGETRACKHISTORY
select sql from sqlite_master where name = 'ZCHANGETRACK'
ZCHANGETIMESTAMP FLOAT
ZBUNDLEID VARCHAR
ZCONTEXTNAME VARCHAR
ZPROCESSID VARCHAR
Unable to determine if old history table 1 Exists - %s
select sql from sqlite_master where name = 'ZCHANGETRACKHISTORY'
 ZCHANGETRACKHISTORYCHANGETYPE INTEGER
ZCHANGETRACKHISTORYENTITY INTEGER
ZCHANGETRACKHISTORYENTITYVERSION INTEGER
ZCHANGETRACKINGHISTORYTRANSACTIONID INTEGER
ZCHANGETRACKHISTORYTOMBSTONE BLOB
ZCHANGETRACKEHISTORYNTITYCOLUMNS BLOB
Unable to determine if old history table 2 Exists - %s
ZCHANGE
ZTRANSACTION
select sql from sqlite_master where name = 'ZCHANGE'
ZENTITY INTEGER, ZENTITYPK INTEGER
ZCHANGETYPE INTEGER
ZCOLUMNS BLOB
ZTRANSACTIONID INTEGER
select sql from sqlite_master where name = 'ZTRANSACTION'
 ZBUNDLEID VARCHAR
ZTIMESTAMP FLOAT
DROP TABLE ZCHANGETRACK
DROP TABLE ZCHANGETRACKHISTORY
DROP TABLE ZCHANGE
DROP TABLE ZTRANSACTION
SELECT COUNT(Z_PK) FROM %@ WHERE %@ = %@
entityID
tombstone
ent-%@:pk-%@
unable to generate primary keys for transaction
unable to generate primary keys
An internal error occurred while configuring migration functions in the SQLite database.
UPDATE %@ SET
 %@ = ?
 WHERE %@ = ?
DELETE FROM %@ WHERE %@ IN (
ANSCKMIRROREDRELATIONSHIP
ZNSCKEXPORTEDOBJECT
ZNSCKEXPORTMETADATA
ZNSCKEXPORTOPERATION
ZNSCKIMPORTOPERATION
ZNSCKIMPORTPENDINGRELATIONSHIP
INSERT INTO Z_METADATA (Z_VERSION) VALUES (999)
DELETE FROM Z_METADATA where Z_VERSION = 999
Something is wrong here 1
More code needs to be written
connection %p created snapshot: %p
Failed to get sqlite3_snapshot
Something is wrong here 3
connection %p adopting snapshot: %p
Failed to free sqlite3_snapshot
Connection can't register generation: Uncaught exception: %@
B16@?0@4I8^B12
Failed to geta currentQueryGeneration: %@
OK, malloc failed
Something is wrong here (reopen)
connection %p attempting to reopen snapshot: %p
Attempt to reopen snapshot failed; nonfatal error
SQL error code
isWriter
queue
T@"NSObject<OS_dispatch_queue>",R,N
SQLite format 3
Invalid class type '%@' for lock_proxy_file pragma value, must be an NSNull or NSString
Constraint violation
Constraint violation: %s
no message
error during SQL execution : %s
NSCoreDataPrependExternalReferenceMarker
NSCoreDataLike
NSCoreDataStringSearch
NSCoreDataToUpper
NSCoreDataToLower
NSCoreDataMatches
NSCoreDataStringCompare
NSCollateNoCase
NSCollateNumericallyNoCase
NSCollateLocaleSensitive
NSCollateLocaleSensitiveNoCase
NSCollateFinderlike
NSCoreDataTriggerUpdateAffectedObjectValue
NSPersistentHistoryBatchDeleteTrigger
NSPersistentHistoryBatchDeleteUpdateTrigger
NSPersistentHistoryMigrateUpdates
NSCoreDataPrependExternalReferenceMarker: malloc failure
NSCoreDataPrependExternalReferenceMarker: wrong number of parameters
NSCoreDataLike: variant must be an integer in the range [0,3]
NSCoreDataLike: requres 3 arguments (value, pattern, variant)
NSCoreStringSearch: requires 4 arguments (string1, string2, flags, localized)
NSCoreDataTo(Uppercase|Lowercase): requires one argument
NSCoreDataMatches: variant must be an integer in the range [0,3]
NSCoreDataMatches: requres 3 arguments (value, pattern, variant)
NSCoreDataStringCompare: unknown operation type
NSCoreDataStringCompare: incorrect number of arguments
NSPersistentHistoryMigrateUpdates: malloc failure
Join being created outside a fetch scope for keypath %@ entity %@
subqueryCollectionContext
Join being created inside an update scope for keypath %@ entity %@
source (%@, %@), destination (%@, %@), correlation (%@)
INNER 
LEFT OUTER 
JOIN 
 ON 
 INNER
 LEFT OUTER
 JOIN 
Unsupported property %@ in update
Unsupported property %@ in update - no joins allowed here
keypathExpressionDestinationRelationship
transient property used in fetch request
to-many key not allowed here
multiple to-many keys not allowed here
this should be inside a fetch or an update
keypaths (joins) not supported in batch update statements
invalid keypath : %@
invalid keypath %@
ambiguous keypath %@
found
propertyDescription
Ambiguous keypath %@
keypath %@ not found in entity %@
LastKeyPathWasTransientProperty
Keypath containing KVC aggregate where there shouldn't be one; failed to handle %@
Bad keypath: too many joins for an index
Bad keypath: can't find property
Unable to generate SQL for keypath
Bad keypath: indexes may not contain to many relationshps
SELECT clauses in queries with GROUP BY components can only contain properties named in the GROUP BY or aggregate functions (%@ is not in the GROUP BY)
substitutePK
TB,N,V_substitutePK
Unable to generate SQL - non-constant expression for limit substitution.
Unable to generate SQL - non-NSNumber value for limit substitution.
Invalid variable substitution - multiple values not supported for limit %@
 LIMIT %@
 LIMIT -1
 LIMIT %lu
%@_%d%@
REFLEXIVE
FOK_REFLEXIVE
Unsupported join (offsets not allowed in updates)
Invalid SQL (must specify a limit with an offset)
Unable to generate SQL - non-constant expression for offset substitution.
Unable to generate SQL - non-NSNumber value for offset substitution.
 OFFSET %@
 OFFSET %lu
Unsupported property type for index.
Can't mix and match collation types.
Can't create an index with no name
NSIndexName
NSIndexElements
NSPartialIndexPredicate
<NSFetchIndexDescription : (%@:%@, elements: %@, predicate: %@)>
Can't set an index name to nil
IndexDescription
Can't change an collation type in a multi-element index
Index
elements
partialIndexPredicate
T@"NSPredicate",C
Unsupported join (ordering by mtm not allowed in updates): %@
Unsupported join (ordering by tm not allowed in updates): %@
ORDER BY
unsupported NSSortDescriptor (comparator blocks are not supported)
 COLLATE NSCollateNoCase 
 COLLATE NSCollateNumericallyNoCase 
 COLLATE NSCollateLocaleSensitive 
 COLLATE NSCollateLocaleSensitiveNoCase 
 COLLATE NSCollateFinderlike 
unsupported NSSortDescriptor selector: %@
 DESC
sql connection fetch time: 
[31m%.4f
[0ms
sql connection fetch time: %.4fs
exception raised during multi-threaded fetch %@ (%@)
unidentifiable exception during multi-threaded fetch
result array has %lu entries, but we fetched %d rows
fetch using %@ returned %lu rows
 with values: %@
total fetch execution time: 
[31m%.4f
[0ms for %d rows.
total fetch execution time: %.4fs for %d rows.
Fetch cancelled.  Total fetch execution time: 
[31m%.4f
[0ms.
Fetch cancelled.  Total fetch execution time: %.4fs.
exception %@ raised processing result of multi-threaded fetch (%@)
unidentifiable processing result of multi-threaded fetch
exception %@ raised processing result of multi-threaded fetch while prepopulating objects (%@)
unidentifiable processing result of multi-threaded fetch while prepopulating objects
TRANSACTION
BUNDLEID
PROCESSID
CONTEXTNAME
AUTHOR
QUERYGEN
CHANGES
CHANGE
ENTITY
ENTITYPK
CHANGETYPE
COLUMNS
TOMBSTONE
TRANSACTIONID
%@%d
%@: Exporter / importer finished after %d tries. Allowing store to deallocate.
-[PFCloudKitStoreMonitor pfcloudstoremonitor_is_holding_your_store_open_waiting_for_cloudkit_activity_to_finish]
%@: Exporter / importer didn't tear down after 5 seconds, retrying (%d).
monitorGroup
T@"NSObject<OS_dispatch_group>",R,N,V_monitorGroup
retryCount
Ti,R,N,V_retryCount
timeoutSeconds
Ti,R,N,V_timeoutSeconds
storeIsAlive
TB,R,N,V_storeIsAlive
monitoredStore
T@"NSPersistentStore",R,W,N,V_monitoredStore
<NSPersistentHistoryToken - %@>
NSPersistentHistoryTokenDictionary
T@"NSEntityDescription",R,D
T@"NSManagedObjectID",R,D
Z_%@_%@
%@%@_MIN, %@_MAX
%@NEW.%@, NEW.%@
%@%@, %@
%@%@ NOT NULL
CREATE VIRTUAL TABLE IF NOT EXISTS %@ USING RTREE (Z_PK INTEGER PRIMARY KEY, %@)
CREATE TRIGGER IF NOT EXISTS %@_INSERT AFTER INSERT ON %@ FOR EACH ROW BEGIN INSERT OR REPLACE INTO %@ (Z_PK, %@) VALUES (NEW.Z_PK, %@) ; END
CREATE TRIGGER IF NOT EXISTS %@_UPDATE AFTER UPDATE ON %@ FOR EACH ROW BEGIN DELETE FROM %@ WHERE Z_PK = NEW.Z_PK ; INSERT INTO %@ (Z_PK, %@) VALUES (NEW.Z_PK, %@) ; END
INSERT OR REPLACE INTO %@ (Z_PK, %@) SELECT Z_PK, %@ from %@ where %@
T@"NSString",R,&,V_tableName
<%@ %@ (%@)>
Unable to resolve variable expression: %@
Can't generate select target token for expression: %@
Constant select targets must be values, not collections
Can't generate select target token for constant: %@
Can't generate select target token for fetch request expression: %@
Can't generate SQL for ternary expression: %@
Currently unsupported (%@), try again later
Unsupported value passed to valuesToFetch: (%@) not supported
 AS %@
%@{%@ %d-%qd-%qi
 %@=NULL
 %@=<NSData len=%lu>
 %@="%@"
 %@=%@
 %@=%qd
 %@=%u
 and to-manys=%p}
unexpected key found for: %@
COUNT( 
Unknown predicate operator type parameter
illegal comparison with NULL
IS NULL
IS NOT NULL
Unable to generate SQL for predicate (%@) (problem on LHS)
Unable to generate SQL for predicate (%@) (problem on RHS)
Unable to generate SQL for predicate (%@) (problem with operator)
You really shouldn't be here
NSCoreDataStringCompare(
 , %d, %lu, %d)
%lu) 
Unimplemented SQL generation for predicate (%@)
Unimplemented SQL generatio for predicate (%@)
 NSCoreDataStringSearch(
%lu, %u)
unimplemented SQL generation for predicate (%@).
Invalid input string
Unknown error during string conversion
Malformed string (%@)
Bad string
Malformed string 2 (%@)
%@%C
Unsupported join (not allowed in updates): %@
Unsupported clause (not allowed in updates): %@.
 IN (SELECT 
(SELECT * FROM %@) 
unimplemented SQL generation for predicate : (%@) (bad LHS)
unimplemented SQL generation for predicate : (%@) (bad RHS)
unimplemented SQL generation for predicate : (%@) (LHS and RHS both keypaths)
 IN 
unimplemented SQL generation for predicate : (%@)
 BETWEEN 
Unimplemented SQL generation for predicate : (%@)
Unsupported predicate, LHS of boundedBy: must be a keypath
Unsupported predicate, LHS of boundedBy: is a bad keypath a keypath
Unsupported predicate, LHS of boundedBy: has a keypath (can't find %@)
Malformed keypath: non-terminal attribute %@
Unsupported predicate, LHS of boundedBy: does not terminate with a location attribute
Bad LHS attribute, missing derived lat/long names
Unsupported predicate, LHS of boundedBy: does not terminate with a location
Unsupported predicate, LHS of boundedBy: can't find location attribute
%@.Z_PK IN 
(%@) 
ALL modifier is not implemented
can't use NULL on left hand side
 NSCoreDataLike(
 NSCoreDataMatches(
Unknown/unsupported comparison predicate operator type
Unable to generate where clause for predicate (%@) (unknown problem)
i12@?0@"NSPersistentHistoryTransaction"4@"NSPersistentHistoryTransaction"8
SELF IN (%@)
%@: Cancelled during export by store monitor.
-[PFCloudKitExporter exportIfNecessaryInTransaction:onQueue:completion:]_block_invoke_2
Exception thrown during record serialization: %@
Failed to execute a history fetch: %@
Modify records finished: %@
-[PFCloudKitExporter processRecordsToSave:andRecordIDsToDelete:inTransaction:historyTransactionID:completion:]_block_invoke
Failed to save record name updates: %@
-[PFCloudKitExporter processRecordsToSave:andRecordIDsToDelete:inTransaction:historyTransactionID:completion:]_block_invoke_3
Failed to delete asset file: %@
%@ - Exception thrown while trying to write mirrored relationship updates: %@
v16@?0@"NSArray"4@"NSArray"8@"NSError"12
CKModifyRecordsOperation
%s <%p> on entity '%@' with sql text '%@'
cachedStatementInfo
T@"NSCachedFetchRequestInfo",&,N,V_cachedStatementInfo
trackChangedRowCount
TB,N,V_trackChangedRowCount
Z_ENT
Z_OPT
Z_FOK
_ent
_opt
Z_METADATA
Z_VERSION
Z_UUID
Z_PLIST
Z_MODELCACHE
Z_CONTENT
Z_PRIMARYKEY
Z_NAME
Z_SUPER
Z_MAX
%c%@
@count
COUNT(%@)
COUNT(%@.%@)
@total
Aggregate functions need to work on attributes: %@
Unsupported KVC function in trailing keypath %@, %@
Can't have a non-relationship collection element in a subquery%@
Bad collection keypath (%@) can't find property named (%@) 
Only allowed one toMany/manyToMany relationship in subquery expression collection (%@)
Bad collection keypath in subquery %@ (attribute in non-terminal position)
Unsupported subquery with multiple joins in update columns %@
Unsupported subquery collection type (%@)
Subquery expressions not allowed in indexes
Unsupported subquery (too many functions): %@
.@min
.@max
.@sum
.@avg
Unsupported subquery (non-aggregate not allowed in select or update column): %@
Unknown predicate type
v12@?0@"NSManagedObject"4^B8
An example core data string
Some example data
coordinator
T@"NSPersistentStoreCoordinator",R,N,V_coordinator
T@"NSPersistentStore",R,W,N,V_store
T@"NSManagedObjectModel",R,N,V_model
T@"NSString",R,N,V_configurationName
T@"NSRelationshipDescription",R,N,V_relationship
sqlModel
v8@?0@"CKRecord"4
v12@?0@"CKRecordID"4@"NSString"8
%@ - Fetch finished with error: %@
-[PFCloudKitImporter importIfNecessaryInTransaction:onQueue:completion:]_block_invoke_2
v24@?0@"CKRecordZoneID"4@"CKServerChangeToken"8@"NSData"12B16@"NSError"20
Finished importing changes for token: %@
-[PFCloudKitImporter processAccumulatedChangesForServerChangeToken:withAccumulatedUpdates:andDeletes:inTransaction:completion:]_block_invoke
Failed to process changes for token (%@):
%@ - Exception thrown during import: %@
database
T@"CKDatabase",R,N,V_database
importOperation
T@"NSCKImportOperation",R,N,V_importOperation
monitor
T@"PFCloudKitStoreMonitor",R,N,V_monitor
T@"NSCloudKitMirroringDelegateOptions",R,N,V_options
CKFetchRecordZoneChangesOptions
CKFetchRecordZoneChangesOperation
missing variable binding for %@
bad substitution variable for %@, must be a constant value
bad substitution variable for %@, must not be a collection
bad substitution variable for %@, must be a collection
bad substitution variable for %@, must be a collection of objects or objectIDs
oid = %@ [oid class] = %s expecting entity %@
T@"NSSQLFetchRequestContext",R,N,V_parentContext
T@"NSFetchRequest",R,N
fetchStatement
T@"NSSQLiteStatement",&,N
originalRequest
T@"NSFetchRequest",R,N,V_originalRequest
storeIsUbiquitized
TB,R,N,V_storeIsUbiquitized
externalDataReferencesDirectory
T@"NSString",R,N,V_externalDataReferencesDirectory
externalDataLinksDirectory
T@"NSString",R,N,V_externalDataLinksDirectory
fileProtectionLevel
Ti,R,N,V_fileProtectionLevel
T@"NSSQLModel",R,N,V_sqlModel
sqlEntityForFetchRequest
fetchPlan
T@"_PFFetchPlanHeader",R,N,V_fetchPlan
objectIDsToRegisterWithContext
objectsToAwaken
isFaultRequest
TB,N,V_isFaultRequest
shouldUseBatches
TB,R,N,V_shouldUseBatches
isUsingCachedStatement
TB,N,V_isUsingCachedStatement
prefetchingSubstitutionVariables
T@"NSDictionary",&,N,V_prefetchingSubstitutionVariables
faultsThatWereFired
T@"NSArray",R,&,N,V_resultFaultsThatWereFired
NSPrimaryKey64
NSKey
NSRelatedNodes
Can't find entity %@ in model %@
sourceAttributeName
TI,R,V_resultType
%@:%@
Couldn't find cached relationship for key: %@ even though it was accessed.
-[PFCloudKitMirroredRelationshipCache markAccessedRelationshipsUploadedAndPrune]
Couldn't find cached relationship for key: %@ even though it is set up to be deleted.
pendingMirroredRelationships
T@"NSArray",R,N,V_pendingMirroredRelationships
Can't find model for source store
force
Can't find or automatically infer mapping model for migration
Can't find mapping model for migration
.migrationdestination_41b5a6b5c6e848c462a8480cd24caef3
_NSAutomaticMigrationResourceBundlesOption
Unable to delete file (backup external data references URL)
Migration source and destination URLs must be different
sourceURL
destinationURL
(migration) Failed to remove orphaned, partially migrated store file %@: %@
(migration) leaving incompletely migrated store on disk after automatic migration failure. (%@)
NSTemporaryObjectID
NSTemporaryObjectID_default
%s_%x
%@://%@/%@/t%@%d
%@://%@/%@/t%@
Contents
Model
strings
Entity/
Property/
/Entity/
ErrorString/
An instance of %@ requires a non-nil fetchRequest and managedObjectContext
An instance of %@ requires a fetch request with sort descriptors
%@ does not support both change tracking and fetch request's with NSDictionaryResultType
NSFetchedResultsController: cannot access fetched objects before -performFetch:
NSFetchedResultsController: no section at index %lu in sections list
cannot access fetched objects before -performFetch:
no section at index %lu
NSFetchedResultsController: no object at index %lu in section at index %lu
no object at index %lu in section at index %lu
invalid Section Index offset%li
Index title at %li is not equal to '%@'
T@"NSFetchRequest",R,N,V_fetchRequest
T@"NSManagedObjectContext",R,N,V_managedObjectContext
sectionNameKeyPath
T@"NSString",R,N,V_sectionNameKeyPath
cacheName
T@"NSString",R,N,V_cacheName
T@"<NSFetchedResultsControllerDelegate>",N,V_delegate
fetchedObjects
sectionIndexTitles
sections
41b5a6b5c6e848c462a8480cd24caef3
The fetched object at index %lu has an out of order section name '%@. Objects must be sorted by section name'
(%@) %@
sectionCount
Fetching ERROR during section computation with request = %@ and error = %@ and userInfo = %@
(NSFetchedResultsController) A section returned nil value for section name key path '%@'. Objects will be placed in unnamed section
i12@?0@"_PFChangeInfo"4@"_PFChangeInfo"8
(NSFetchedResultsController) rebuilding section caches
(NSFetchedResultsController) error refetching objects after context update: %@
B12@?0@"_PFChangeInfo"4@"NSDictionary"8
Serious application error.  An exception was caught from the delegate of NSFetchedResultsController during a call to -controllerDidChangeContent:.  %@ with userInfo %@
Serious application error.  Unidentifiable exception was caught from the delegate of NSFetchedResultsController during a call to -controllerDidChangeContent:.
 (%@): couldn't read cache file to update store info timestamps
 (%@): error writing section cached info at %@ with error %d
 (%@): couldn't create section info cache directory at %@ : %@
 (%@): couldn't create section info file at %@ : %d
.CoreDataCaches
SectionInfoCaches
Name: %@ offset: :%lu count: %lu
sectionInfo
Can't generate intermediate for ternary expression predicate.
Can't generate intermediate for ternary expression predicate (unknown type)
Ternary expression not supported as index component
(CASE (
Can't generate SQL for ternary expression predicate.
) when 1 then (
Can't generate SQL for ternary expression trueExpression.
) else (
Can't generate SQL for ternary expression falseExpression.
) end)
NSCKExportMetadata
NSCKExportedObject
NSCKExportOperation
exportedAt
exportUUID
operations
operationUUID
sortIndex
status
exportMetadata
operation
NSCKImportOperation
NSCKImportPendingRelationship
importDate
changeTokenBytes
pendingRelationships
relatedEntityName
relationshipName
isDeleted
NSCKMirroredRelationship
isPending
isUploaded
T@"NSDate",R,N,V_exportedAt
T@"NSUUID",R,N,V_exportUUID
T@"NSSet",R,N,V_operations
T@"NSUUID",R,N,V_operationUUID
T@"NSNumber",R,N,V_sortIndex
T@"NSNumber",R,N,V_status
T@"NSCKExportMetadata",R,N,V_exportMetadata
T@"NSSet",R,N,V_objects
T@"NSNumber",R,N,V_changeType
T@"NSCKExportOperation",R,N,V_operation
%@ - uuid:%@ token:%@ date:%@
T@"NSDate",R,N,V_importDate
T@"NSData",R,N,V_changeTokenBytes
T@"NSSet",R,N,V_pendingRelationships
mirroredRelationships
T@"NSSet",R,N,V_mirroredRelationships
%@ - %@:%@ related to %@:%@ by %@
T@"NSString",R,N,V_entityName
T@"NSString",R,N,V_relatedEntityName
T@"NSString",R,N,V_relationshipName
TB,R,N,V_isDeleted
T@"NSCKImportOperation",R,W,N,V_operation
fetchedPKNum
T@"NSNumber",R,N,V_fetchedPKNum
T@"NSNumber",R,N
ckRecordID
T@"NSString",R,N,V_ckRecordID
ckRecordSystemFields
T@"NSData",R,N,V_ckRecordSystemFields
TB,R,N,V_isPending
TB,R,N,V_isUploaded
T@"PFCloudKitMetadataRequest",R,N
%@ : %@ -> %@
Unrecognized destination property type in transform
transform
Invalid constant expression type for property type in transform
Unrecognized source property type in transform
NSCoreDataPrependExternalReferenceMarker(length(%@), %@)
Invalid source property type in transform
Unsupported value expression type in transform
Entity mapping includes property transform with unresolved prerequisite
pendingTransforms
sourceEntity
T@"NSSQLEntity",R,V_srcEntity
T@"NSSQLEntity",R,V_dstEntity
T@"NSEntityMapping",R,V_entityMapping
migrationType
Ti,R,V_migrationType
intarrayTable
T^{sqlite3_intarray=},V_intarrayTable
intarrayTableName
T@"NSString",&,V_intarrayTableName
UPDATE OR FAIL %@ SET 
_T_REINDEXINGTABLE
OLD_EN
NEW_EN
ALTER TABLE %@ RENAME TO %@_ORIG
UPDATE OR FAIL %@ SET %@ = (SELECT %@ FROM %@_ORIG WHERE %@ = %d) WHERE %@ = %d
UPDATE OR FAIL %@ SET %@ = 0 WHERE %@ = %d
DROP TABLE %@_ORIG
Failed to generate statements to perform migration
NSSQLiteInPlaceMigrationManager
migrationManagerClass
Failed to create migration statements
Failed to execute migration statements
constraint violation during attempted migration
SELECT count(*) FROM 
 is NULL
 = %d
 NOT IN (SELECT 
 IS NOT NULL)
Validation error missing attribute values on mandatory destination attribute
Validation error missing attribute values on mandatory destination relationship
Validation error missing relationship values on mandatory destination destination
Unrecognized transform validation in property mapping
 = ( CASE
 WHEN 
 = %d THEN %d
 ELSE 
 END ) WHERE 
 IN (
Can't find entity migration description for entity
Unsupported entity mapping type
DELETE FROM %@ WHERE Z_PK <= (SELECT MAX(%@) FROM %@ WHERE %@ IN (%@))
DELETE FROM %@ WHERE %@ <= (SELECT MAX(%@) FROM %@ WHERE %@ IN (%@))
DELETE FROM %@ WHERE Z_PK <= (SELECT MAX(%@) FROM %@ WHERE %@ == %ld AND %@ IN (%@))
DELETE FROM %@ WHERE %@ <= (SELECT MAX(%@) FROM %@ WHERE %@ == %ld AND %@ IN (%@))
ALTER TABLE %@ ADD Z%@%d BLOB;
ALTER TABLE %@ DROP COLUMN Z%@%d;
UPDATE OR FAIL %@ SET %@ = NSPersistentHistoryMigrateUpdates(3, %d, %d, %@) WHERE %@ == %d AND %@ == %ld;
adapter
T@"NSSQLiteAdapter",R,V_adapter
dstModel
T@"NSSQLModel",R,V_dstModel
srcModel
T@"NSSQLModel",R,V_srcModel
Joins not supported in index
Can't find property for keypath
Indexes cannot contain to many relationships
Indexes can only contain attribute/relationship properties
Unsupported expression type in index
CREATE INDEX IF NOT EXISTS Z_%@_%@ ON %@ (
Unsupported property in index
DESC
%@ COLLATE BINARY %@
SQL generation failure for property
SQL generation failure for index
SQL generation failure for index with predicate (1)
SQL generation failure for index with predicate (2)
%@ : %@ 
Unrecognized entity migration type
entityMigration
Cannot merge multiple root entity source tables into one destination entity root table
sourceRootEntities
destinationRootEntity
Unrecognized source property type for many-to-many migration
sourceRelationship
Unrecognized column in entity
column
Wrong number of columns in migration insert statement
Mismatched columns and values in migration insert statement
_T_%@
 = (SELECT _EKT.
 _EKT WHERE 
 = _EKT.
 WHERE %@ is NULL
, 2000
 IS NOT NULL
 NOT IN (
rootEntity
T@"NSSQLEntity",R,V_rootEntity
NSSQLiteInPlaceMigrationManager requires that the source and destination stores to be NSSQLiteStoreType
(migration) failed to copy store file from %@ to %@. (%@)
Can't copy source store to destination store path
Failed to open the store
Invalid destination data model
Cannot migrate store in-place: 
Cannot migrate store in-place
(migration) leaving incompletely migrated store on disk after in-place migration error. (%@, %@)
unknown error
(migration) in-place migration completed successfully in %2.2f seconds
T@"NSFetchIndexDescription",R,&,V_indexDescription
T@"NSSQLEntity",R,&,V_sqlEntity
Unsupported clause (group by not allowed in updates)
Failed to generate SQL for group by property: %@
Unknown predicate type for having predicate: %@
Unsupported clause (having not allowed in updates)
Unable to find a configuration named '%@' in the specified managed object model.
The configuration named '%@' does not contain any entities.
Cannot be used without an instance of %@.
%@: %@ - Cannot locate value transformer with name '%@'
%@: %@ - Unsupported attribute type (%@)
%@: %@ - Value must respond to '%@'
%@: %@ - attribute is not optional
%@: %@ - %@
%@:%@ - %@
%@ - Missing %@
CloudKit integration requires that all entities have the following attributes to store CloudKit metadata:
'%@' of type '%@'
'%@' of type '%@'
These entities do not:
CloudKit integration requires that all relationships have an inverse, the following do not:
CloudKit integration requires that all relationships be optional, the following are not:
CloudKit integration does not support all attribute types. The following entities have attributes of an unsupported type:
CloudKit integration requires that the value transformers for transformable attributes are available via +[%@ %@]:
CloudKit integration does not allow relationships to objects that aren't sync'd. The following relationships have destination entities that not in the specified configuration.
CloudKit integration requires that all entities include %@ and %@ as part of %@ in their userInfo. The following entities do not:
The following attributes have invalid values for '%@':
CloudKit integration does not support ignored relationships. The following entities and relationships are marked ignored using '%@':
The following relationships are configured with unsupported delete rules:
%@: %@ - incorrect type: %@ required, but was %@.
%@: %@ - not an attribute
%@: %@ - missing
Nullify
Deny
cascade
No-Action
requestType
%@ with fetch request %@
T@"NSFetchRequest",R,V_fetchRequest
completionBlock
T@?,R,V_requestCompletionBlock
estimatedResultCount
Ti,N,V_estimatedResultCount
NSUnderlyingProperty
NSReferenceID
NSEntityDescription
Proxy for prop named %@ on ed %@, real %@
Data may not be nil
%@_%p
databaseValue
External data reference can't find underlying file.
File URL
External data reference; unknown problem.
External data reference can't load ubiquitous file.
External Data Reference: <self = %p ; path = %s ; length = %qu>
External Data Reference: <self = %p ; path = nil ; length = %qu>
range {%lu, %lu} exceeds data length %lu
B8@?0@"NSSQLStoreRequestContext"4
filter
T@?,C,N,V_filter
SQLQueue: %@ : %p
dispatch_queue_attr_make_with_qos_class() returned NULL in %s
 NSSQLConnectionManager tried to blow a lock
You should not be here
Cannot mutate an immutable faulting NSOrderedSet
Index of object > number of objects
_NSFaultingMutableOrderedSet
nil order keys and %d objects in real set
self == %@
bad input oidsAndLocations => should have an even number
_CDSnapshot
_cd_nullFlags2_
[%dC]
_cd_nullFlags_
<deferred relationship fault>
snapshot is marked read only
warning snapshot_get_value_as_object called on NULL
warning snapshot_set_value_as_object called on NULL
_NSMetadataLastIdentifier
Unknown failure
Failed to load metadata
Keyspace exhausted
Problem
<NSPersistentHistoryChange: %lld %@ %lu %@ %@>
changeID
Tq,R
changedObjectID
T@"NSManagedObjectID",R,C
Ti,R
transaction
T@"NSPersistentHistoryTransaction",R
updatedProperties
T@"NSSet",R,C
v12@?0@"NSSQLEntity"4@"NSMutableOrderedSet"8
v12@?0@"NSSQLEntity"4@"NSMutableDictionary"8
<NSConstraintCacheKey: %@>
<NSConstraintCache : entity = %@, constraint = %@, extension = %@>
v16@?0@4@"NSArray"8^B12
T@"NSArray",R,&,N,V_constraint
extension
T@"NSArray",R,&,N,V_extension
children
T@"NSArray",R,&,N,V_children
%@ - %u
TQ,R,N
Unable to generate SQL for fetch
Bad request
SELECT COUNT(*) from (%@)
insertObject:in%sAtIndex:
insert%s:atIndexes:
removeObjectFrom%sAtIndex:
remove%sAtIndexes:
replaceObjectIn%sAtIndex:withObject:
replace%sAtIndexes:with%s
com.apple.coredata.ubiquity.importer.didfinishimport
T@"NSBatchDeleteRequest",R,N
fetchRequestForObjectsToDelete
T@"NSFetchRequest",R,&,N
deleteStatements
T@"NSArray",R,&,N,V_deleteStatements
fetchContext
T@"NSSQLFetchRequestContext",R,&,N
affectedObjectIDs
T@"NSArray",&,N,V_deletedObjectIDs
API misuse: there shouldn't be a connection here
Caught a non-object exception in the connectionManager
*RequestContext connection may not be reset
sqlCore
T@"NSSQLCore",R,N
connection
T@"NSSQLiteConnection",&,N,V_connection
persistentStoreRequest
T@"NSPersistentStoreRequest",R,N,V_persistentStoreRequest
T@"NSManagedObjectContext",R,N,V_context
localError
T@"NSError",&,N,V_error
debugLogLevel
Ti,R,N
useColoredLogging
TB,R,N,V_useColoredLogging
useConcurrentFetching
TB,R,N,V_useConcurrentFetching
T@,&,N,V_result
exception
T@,&,N,V_exception
rowCache
T@"NSSQLRowCache",R,N
isWritingRequest
shouldRegisterQueryGeneration
DROP INDEX IF EXISTS Z_%@_%@
forConflictAnalysis
TB,N,V_forConflictAnalysis
com.apple.coredata.ubiquity.eat
T@"NSSQLManyToMany",R,V_relationship
ANY TRANSACTIONID IN %@
ANY %@ %@ %d
ANY %@.%@ %@ %f
_pk %@ %d
%@ %@ %f
NSPersistentHistoryChangeRequest : %@ < %@ - %@-%@> %lu
Fetch
Ti,V_resultType
token
T@"NSPersistentHistoryToken",R,V_token
unpinned
current
nostore
<NSQueryGenerationToken: %p>
currentQueryGenerationToken
T@"NSQueryGenerationToken",R
unsupported
NSQueryTokenIsSingleton
NSQueryTokenWhichSingleton
NSQueryTokenIsCompound
NSQueryTokenStoreIdentifier
NSQueryTokenGenerationIdentifier
<NSQueryGenerationToken : {
, %p
<NSQueryGenerationToken : %@/%@>
Can't reattach all stores specified by token
expected stores
exception fetching row for object with ID: %@ with userInfo of %@
failed to resolve fault to exactly one object for %@
fault fulfilled from database for : %@ with row values: %@
fault fulfilled from database for : %@
orderKey
exception during newFetchedPKsForSourceID: %@ with userInfo of %@
to-many relationship fault "%@" for objectID %@ fulfilled from database.  Got %d rows with values: %@
to-many relationship fault "%@" for objectID %@ fulfilled from database.  Got %d rows
drop triggers during NSBatchDeleteRequest failed because %@ with userInfo %@
rollback during NSBatchDeleteRequest failed because %@ with userInfo %@
Unable to generate updateStatement for affected object IDs (cause unknown)
Short-circuiting batch update: impossible condition in where clause (2)
error: Unable to fetch affected object IDs : %@
Unable to fetch affected affected object IDs
Underlying issue
Unknown
error: Unable to delete transactions: %@
Short-circuiting change request: impossible condition in where clause (2)
error: Unable to fetch change count : %@
error: unexpected type of change : %lu
error: Unable to fetch changes : %@
Missing transaction scope for change tracking of changes.
, %qi
SELECT %@,%@ FROM %@ WHERE %@ IN (%@) ORDER BY %@
Optimistic locking failure for %@.  Row was deleted.  Original row = %@ New Row = <deleted>
Optimistic locking failure for %@.  Row was deleted.
Optimistic locking failure for %@.  Row was updated.  Original row = %@ New Row = %@
Optimistic locking failure for %@.  Row was updated.
Optimistic locking failure for %@.  During write changes, deletion failed.  Row was updated.  Original row = %@ New Row = %@
Optimistic locking failure for %@.  During write changes, deletion failed.  Row was updated.
SaveChanges: NSSQLCore: %p Transactions cannot be nested
_NSSQLCoreActiveSaveRequest
requestContext
_NSSQLCoreTransactionExternalDataReferencesToDelete
Missing transaction scope for commit changes.
addedOrUpdated
logically false count request %@ short circuits.
count request %@ returned %d
total count request execution time: 
[31m%.4f
[0ms for count of %d.
total count request execution time: %.4fs for count of %d.
%@ %@ JOIN %@ %@ %@%@
SELECT %@%@, %@%@ FROM 
SELECT %@%@ FROM 
SELECT 0, %@%@ FROM 
 %qi
 %@, %@
, %@.%@
%@ IN ( 
%qu, 
%qu ) 
AND 
i12@?0@"NSManagedObjectID"4@"NSManagedObjectID"8
Prefetching from join table for many-to-many relationship "%@" from database.  Got %lu rows with values: %@
Prefetching from join table for many-to-many relationship "%@" from database.  Got %lu rows
Prefetching with request %@.  Got %lu rows with values: %@
Prefetching with key '%@'.  Got %lu rows.
logically false fetch request %@ short circuits.
Unknown entity in metadata request: %@
_executeCloudKitMetadataRequest: Short-circuiting metadata request: impossible condition in where clause: %@
Failed to create largeBlobDirectoryURL with observed store: %@
%@: Could not create container: %@
-[PFCloudKitSetupAssistant _checkAccountStatus:]
Unable to determine the status of the iCloud account (CKAccountStatusCouldNotDetermine).
Unable to initialize without a valid iCloud account (CKAccountStatusRestricted).
Unable to initialize without an iCloud account (CKAccountStatusNoAccount).
Unknown account status: %d
v12@?0i4@"NSError"8
Failed to get a container back for the identifier: %@
Failed to get a database back from -privateCloudDatabase for container: %@
zoneSubscription
T@"CKRecordZoneSubscription",R,N,V_zoneSubscription
container
T@"CKContainer",R,N,V_container
largeBlobDirectoryURL
T@"NSURL",R,N,V_largeBlobDirectoryURL
observedStore
T@"NSPersistentStore",R,W,N,V_observedStore
observedCoordinator
T@"NSPersistentStoreCoordinator",R,N,V_observedCoordinator
cloudKitSemaphore
T@"NSObject<OS_dispatch_semaphore>",R,N,V_cloudKitSemaphore
CKModifyRecordZonesOperation
CKNotificationInfo
CKModifySubscriptionsOperation
CKContainer
<NSPersistentHistoryTransaction: %lld, %@, %@, %@, %@, %@, %@>
T@"NSDate",R,C
changes
T@"NSArray",R,C
transactionNumber
storeID
bundleID
processID
contextName
author
T@"NSPersistentHistoryToken",R
com.apple.CoreData.CloudKitDebug
Checking log level threw: %@
-[PFCloudKitLogging init]
Must supply a non-zero number of objectIDs to request during initialization
mismatched objectIDs in batch delete initializer
objectIDs
Must supply a fetch request during initialization
Fetch must have an entity
<NSBatchDeleteRequest : resultType : %ld, fetch :%@ >
TI,V_resultType
T@"NSFetchRequest",R,C
Mismatched result types during aggregation of batch delete results
Unsupported predicate, RHS of boundBy: must contain 2 values
Unsupported predicate, topLeft parameter of boundBy: RHS must be a constant or keypath
Unsupported predicate, bottomRight parameter of boundBy: RHS must be a constant or keypath
Unsupported predicate, RHS of boundBy: must be an aggregate or constant
Unsupported predicate, constant topLeft parameter of boundBy: RHS must respond to coordinate
Unsupported predicate, constant lowerRight parameter of boundBy: RHS must respond to coordinate
SELECT %@.Z_PK FROM %@ %@ WHERE ? <= %@.%@_MAX AND %@.%@_MIN <= ? AND ? <= %@.%@_MAX AND %@.%@_MIN <= ?
entitiesAndCounts
T@"NSDictionary",R,N,V_entitiesAndCounts
T@"NSSQLModel",R,N,V_model
T@"NSBatchUpdateRequest",R,N
updateStatement
T@"NSSQLiteStatement",R,N
T@"NSPersistentHistoryChangeRequest",R,N
changeRequestStatement
NSCloudKitMirroringDelegateIgnoredPropertyKey
NSCloudKitMirroringDelegateContainerOptionsKey
com.apple.coredata.cloudkit.zone
com.apple.coredata.cloudkit.zone.subscription
PFCloudKitServerChangeTokenKey
PFCloudKitErrorDomain
PFCloudKitMirroringDelegateDidImportChangesNotification
CD_M2M_
CD_FAKE_
PFCloudKitDidSchemaCheckKey
PFCloudKitDidExportNotificationName
PFCloudKitDidImportNotificationName
PFCloudKitDidInitializeNotificationName
NSCloudKitMirroringDelegateLastHistoryTokenKey
NSCloudKitMirroringDelegate.import
NSCloudKitMirroringDelegate.export
CDMR
private
com.apple.coredata.cloudkit.queue
CloudKit integration is only supported for %@ stores.
Instances of NSCloudKitMirroringDelegate are not reusable and should have a lifecycle tied to a given instance of NSPersistentStore.
com.apple.coredata.cloudkit.initialize
%@: Successfully set up CloudKit integration for store: %@
-[NSCloudKitMirroringDelegate _setUpCloudKitIntegration]_block_invoke
%@: Failed to set up CloudKit integration for store: %@
v8@?0@"NSObject<OS_os_transaction>"4
Managed object context saved: %@
Responding to context save: %@
com.apple.coredata.export.check
Finished export: %@
-[NSCloudKitMirroringDelegate checkForNewChanges]_block_invoke_2
%@: Export failed with error:
v16@?0B4B8@"NSError"12
com.apple.coredata.cloudkit.import
success
madeChanges
%@: Import failed with error:
-[NSCloudKitMirroringDelegate fetchChangesAndUpdateObservedStore]_block_invoke_2
%@ - Attempting recovery from error: %@
-[NSCloudKitMirroringDelegate recoverFromError:]
%@ - Failed to recover from error: %@
Recovery encountered the following error: %@
%@-%@
-[NSCloudKitMirroringDelegate logMessage:]
T@"NSCloudKitMirroringDelegateOptions",R,C,N,V_options
ckDatabaseName
T@"NSString",R,N,V_ckDatabaseName
cloudKitQueueSemaphore
T@"NSObject<OS_dispatch_semaphore>",R,N,V_cloudKitQueueSemaphore
cloudKitQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_cloudKitQueue
lastInitializationError
T@"NSError",R,N,V_lastInitializationError
T@"NSPersistentStoreCoordinator",R,W,N,V_observedCoordinator
hadObservedStore
TB,R,N,V_hadObservedStore
CKRecordZone
CKRecordZoneSubscription
CKErrorDomain
FETCH_REQUEST_LIMIT_SUBSTITUTION
FETCH_REQUEST_OFFSET_SUBSTITUTION
Unsupported substitution variable type for key %@
Mismatched variables dictionaries (count)
Mismatched variables dictionaries (missing value)
Mismatch: that which was once a collection is no longer (%@)
_identifier
T@,R,N,V_identifier
T@"NSDictionary",C,N
Invalid variable substitution - multiple values not supported here %@
unable to resolve variable expression: %@
NSCloudKitMirroringDelegateOptions
NSSQLSaveChangesRequestContext
NSPullChangeHistoryRequest
PFCloudKitSerializer
_NSCoreDataException
_NSCoreDataOptimisticLockingException
_NSCoreDataConstraintViolationException
_NSCoreDataSQLPredicateCategories
_NSFaultingMutableArray
NSSQLBindIntarray
_NSFaultingMutableSet
_NSFaultingMutableSetMutationMethods
_NSMappingModelBuilder
_NSMemoryStorePredicateRemapper
_NSChildContextPredicateRemapper
_NSNotifyingWrapperMutableSet
_CoreData_Extensions
_nop_missing_selectors
_NSPersistenceUtilities
_NSDefaultSectionInfo
NSFetchedResultsSectionInfo
NSSQLRTreeIndexQueryIntermediate
_NSProxyWrapperMutableSet
_NSSQLGenerator
NSCachedFetchRequestThunk
NSCachedFetchRequestInfo
_PFArray
_PFBatchFaultingArray
_PFMutableProxyArray
_PFEncodedArray
_PFFetchedResultOrderedSetWrapper
_PFCachedNumber
NSSQLAttributeTrigger
NSSQLAttributeExtension
NSObject
_PFContextMapTable
_PFTask
NSPrivateCoreDataClassForFindingBundle
_PFRoutines
_PFWeakReference
_PFLock
NSLocking
_PFGarbageManager
_PFString
_PFEncodedString
PFMirroredRelationship
PFMirroredManyToManyRelationshipV2
PFMirroredManyToManyRelationship
PFMirroredOneToManyRelationship
NSAtomicStore
_NSInternalMethods
NSPersistentStoreDescription
NSCopying
NSAtomicStoreCacheNode
NSAttributeDescription
_NSAttributeDescriptionPrivateMethods
NSAttributeStoreMapping
_NSCoreManagedObjectID
NSBasicObjectID
_NSScalarObjectID
NSScalarObjectID64
NSScalarObjectID48
NSBinaryObjectStore
NSPersistentStoreResult
NSUnknownRequestTypeResult
NSPersistentStoreAsynchronousResult
NSAsynchronousFetchResult
NSPersistentHistoryResult
NSBinaryObjectStoreFile
NSDictionaryMapNode
NSCoding
NSDictionaryStoreMap
NSEntityDescription
NSFastEnumeration
_NSEntityDescriptionPrivateMethods
NSEntityMapping
NSEntityMigrationPolicy
NSEntityStoreMapping
NSExpressionDescription
NSConstraintValidator
NSSQLitePrefetchRequestCache
NSPersistentCacheRow
NSFaultHandler
NSPersistentContainer
CoreDataSPI
NSFetchedPropertyDescription
NSFetchedResultSupport
NSFetchRequestResult
NSFetchRequest
_NSCoreDataSPI
NSFetchRequestExpression
NSJoin
NSKnownKeysMappingStrategy1
NSKnownKeysMappingStrategy2
NSKnownKeysDictionary1
_NSKnownKeysEnumerator
NSKnownKeysDictionary2
NSKnownKeysMappingStrategy
NSSecureCoding
NSKnownKeysDictionary
_NSOrderedSetDiff
_NSOrderedSetDiffDelete
_NSOrderedSetDiffChange
_NSOrderedSetDiffInsert
_NSOrderedSetDiffMove
NSManagedObject
_PhotosOrderKeyUpdateSupport
_PFDynamicAccessorsAndPropertySupport
_NSManagedObject_st
NSManagedObjectContext
_NSInternalAdditions
_NSInternalChangeProcessing
_NSInternalNotificationHandling
NSEditorAndEditorRegistration
_PFManagedObjectReferenceQueue
_NestedContextSupport
_PFTempNestedSnapshot
NSManagedObjectID
NSManagedObjectModel
_NSManagedObjectModelPrivateMethods
NSManagedObjectModelBundle
NSMappedObjectStore
NSMappingModel
NSSQLUpdateColumnsIntermediate
NSMemoryObjectStore
NSMemoryStoreEqualityPredicateOperator
NSMemoryStoreInPredicateOperator
NSMergeConflict
NSConstraintConflict
NSMergePolicy
NSMigrationContext
NSMigrationManager
InternalMethods
NSPersistentStore
NSPersistentStoreCache
NSPersistentStoreCoordinator
_NSPersistentStoreCoordinatorPrivateMethods
QueryGenerations
Triggers
ChangeTracking
_PFChangeInfo
NSPersistentStoreMap
NSPropertyDescription
_NSPropertyDescriptionPrivateMethods
NSBatchUpdateRequest
NSPredicatedStoreRequest
NSPropertyMapping
NSSQLLocationAttributeRTreeExtension
NSPropertyStoreMapping
NSPropertyTransform
PFCloudKitOptionsValidator
NSRelationshipDescription
_NSRelationshipDescriptionPrivateMethods
NSRelationshipStoreMapping
_PFRefCountableValue
_PFRefCountableValueOGTP
NSSaveChangesRequest
NSSaveChangesRequest_Internal
NSSQLAliasGenerator
NSSQLAttribute
NSSQLBindVariable
NSSQLColumn
NSSQLCompoundWhereIntermediate
NSSQLConstantValueIntermediate
NSSQLCore
NSFilePresenter
_NSSQLCoreConnectionObsever
NSFetchIndexElementDescription
NSSQLEntity
porting
NSSQLEntityKey
NSSQLExpressionIntermediate
NSSQLFetchCountIntermediate
NSSQLFetchIntermediate
NSSQLForeignEntityKey
NSSQLForeignKey
NSSQLForeignKeyIntermediate
NSSQLFunctionExpressionIntermediate
NSSQLSavePlan
PFCloudKitImportContext
NSSQLGenerator
NSSQLIntermediate
NSSQLiteAdapter
NSSQLiteConnection
NSSQLBlockRequestContext
NSSQLJoinIntermediate
NSSQLKeypathExpressionIntermediate
NSSQLLimitIntermediate
NSSQLManyToMany
NSSQLModel
NSSQLOffsetIntermediate
NSFetchIndexDescription
NSSQLOptLockKey
NSSQLOrderIntermediate
_PFFetchPlanHeader
NSSQLPredicateAnalyser
NSPredicateVisitor
NSSQLUbiquitizedStoreConnectionManager
_PFPersistentHistoryModel
PFCloudKitStoreMonitor
NSSQLiteStatementCache
NSSQLPrimaryKey
_NSPersistentHistoryToken
NSPersistentHistoryToken
NSManagedImmutableObject
NSSQLRTreeIndex
NSSQLProperty
NSSQLReadOnlySelectIntermediate
NSSQLRelationship
NSSQLRow
NSSQLRowCache
NSSQLSelectIntermediate
NSSQLSimpleWhereIntermediate
PFCloudKitExporter
NSSQLiteStatement
NSSQLStoreMappingGenerator
NSSQLSubqueryExpressionIntermediatePredicateVisitor
NSSQLSubqueryExpressionIntermediate
NSSQLToMany
PFCloudKitSchemaGenerator
NSSQLRelationshipFaultRequestContext
PFCloudKitImporter
PFCloudKitSerializerDelegate
NSSQLFetchRequestContext
NSSQLObjectIDSetFetchRequestContext
NSSQLToOne
NSSQLWhereIntermediate
NSStoreMapNode
NSStoreMapping
NSStoreMappingGenerator
NSBatchUpdateResult
PFCloudKitMirroredRelationshipCache
NSStoreMigrationPolicy
_NS128bitWrapper
NSTemporaryObjectID
_NSTemporaryObjectID2
NSValidationErrorLocalizationPolicy
NSMergedPolicyLocalizationPolicy
NSFetchedResultsController
PrivateMethods
NSSQLTernaryExpressionIntermediate
PFCloudKitMetadataModel
NSCKExportMetadata
NSCKExportOperation
NSCKExportedObject
NSCKImportOperation
NSCKImportPendingRelationship
NSCKMirroredRelationship
PFAncillaryModelObject
PFCloudKitMetadataRequest
NSSQLCKMetadataRequestContext
_NSSQLEntityMigrationDescription
NSSQLiteIntarrayTable
NSSQLUpdateIntermediate
_NSSQLiteStoreMigrator
NSSQLIndexIntermediate
_NSSQLTableMigrationDescription
NSSQLiteInPlaceMigrationManager
NSSQLIndex
NSSQLGroupByIntermediate
NSSQLHavingIntermediate
PFCloudKitModelValidator
NSPersistentStoreRequest
NSAsynchronousFetchRequest
_NSPropertyDescriptionProxy
_NSPropertyDescriptionProxy2
_PFEncodedData
_PFExternalReferenceData
NSSQLCountRequestContext
NSSQLConnectionManager
NSSQLDefaultConnectionManager
_NSFaultingMutableOrderedSet
NSSQLCoreDispatchManager
NSSQLForeignOrderKey
_CDSnapshot
NSMutableCopying
NSIncrementalStore
NSPersistentHistoryChange
_NSPersistentHistoryChange
NSConstraintCacheKey
NSConstraintCache
NSIncrementalStoreNode
NSSQLFetchDictionaryCountIntermediate
_NSNotifyingWrapperMutableOrderedSet
_NSFaultingMutableOrderedSetMutationMethods
_NSProxyWrapperMutableOrderedSet
NSGenerationalRowCache
NSSQLBatchDeleteRequestContext
NSSQLStoreRequestContext
NSSQLBinaryIndex
NSSQLObjectFaultRequestContext
NSSQLCorrelationTableUpdateTracker
NSPersistentHistoryChangeRequest
PFCloudKitEncryptedSerializer
NSQueryGenerationToken
_NSQueryGenerationToken
PFCloudKitSetupAssistant
NSPersistentHistoryTransaction
_NSPersistentHistoryTransaction
PFCloudKitLogging
NSBatchDeleteRequest
NSBatchDeleteResult
NSSQLBoundedByIntermediate
NSSQLObjectIDRequestContext
NSSQLStatementIntermediate
NSSQLBatchUpdateRequestContext
NSSQLPersistentHistoryChangeRequestContext
NSCloudKitMirroringDelegate
NSPersistentStoreMirroringDelegate
NSCachingFetchRequest
NSSQLVariableExpressionIntermediate
@12@0:4@8
@8@0:4
v8@0:4
v12@0:4@8
B8@0:4
v12@0:4B8
@"NSString"
@"NSNumber"
@"CKContainerOptions"
@20@0:4@8@12@16
v12@0:4^@8
v16@0:4@8@12
@"NSDictionary"
@"NSSQLSavePlan"
@"NSFaultHandler"
@"NSSet"
@"NSMutableDictionary"
I8@0:4
@"NSArray"
B12@0:4@8
@16@0:4@8B12
B28@0:4@8@12@16@20^@24
v20@0:4@8@12@16
@16@0:4@8@12
@"CKRecordZone"
@"NSCloudKitMirroringDelegateOptions"
@"NSObject<PFCloudKitSerializerDelegate>"
@"NSMutableArray"
@"PFCloudKitMirroredRelationshipCache"
@24@0:4@8l12@16@20
l8@0:4
B16@0:4@8@12
@12@0:4^{_NSZone=}8
Vv8@0:4
@20@0:4@8@12B16
@16@0:4@8I12
@12@0:4I8
I20@0:4^{?=L^@^L[5L]}8^@12I16
v16@0:4I8@?12
v20@0:4@8I12@?16
I16@0:4I8@?12
I20@0:4@8I12@?16
@16@0:4I8@?12
@20@0:4@8I12@?16
v16@0:4@8I12
v12@0:4I8
v16@0:4I8@12
@"NSManagedObject"
@"NSPropertyDescription"
{_NSFaultingMutableArrayFlags="_isFault"b1"_reserved"b31}
@24@0:4@8@12@16@20
v12@0:4:8
v16@0:4:8@12
#8@0:4
{_NSFaultingMutableSetFlags="_isFault"b1"_mustPropagateDelete"b1"_reserved"b14"_relationship"b16}
@16@0:4#8@12
^{objc_method=}
i8@0:4
v12@0:4i8
@12@0:4^@8
B16@0:4I8I12
@"NSManagedObjectModel"
@"NSEntityMapping"
@"NSError"
@"NSManagedObjectContext"
@"NSMutableSet"
i12@0:4@8
B20@0:4@8@12@16
I12@0:4@8
@"NSString"8@0:4
@"NSArray"8@0:4
@24@0:4@8@12@16I20
@"NSFetchedResultsController"
@28@0:4@8@12@16@20@24
@"NSSQLEntity"
@"NSExpression"
@"_NSFaultingMutableSetMutationMethods"
v20@0:4@8q12
v20@0:4@8@12^{__CFBitVector=}16
@"NSSQLiteStatement"
@"NSSQLiteAdapter"
@"NSMutableString"
@16@0:4r^@8I12
@20@0:4^@8I12I16
@24@0:4^@8I12I16@20
^@8@0:4
I20@0:4@8{_NSRange=II}12
@16@0:4{_NSRange=II}8
v20@0:4^@8{_NSRange=II}12
@"_PFWeakReference"
{_PFArrayFlags="shouldRetain"b1"shouldRelease"b1"useExtendedRelease"b1"freeBackingArray"b1"copyBackingArray"b1"managedObjects"b1"_RESERVED"b27}
@20@0:4{_NSRange=II}8B16
@16@0:4^?8^v12
@20@0:4^?8^v12@16
@12@0:4:8
@12@0:4@?8
@"_PFArray"
@"NSCachingFetchRequest"
{_PFBatchFaultingArrayFlags="_LRUIndex"b8"_uniformEntity"b1"_RESERVED"b23}
@20@0:4@8{_NSRange=II}12
^{__CFArray=}
r^@8@0:4
@"NSData"
@16@0:4r^v8r*12
v12@0:4^v8
r*8@0:4
c8@0:4
C8@0:4
s8@0:4
S8@0:4
L8@0:4
q8@0:4
Q8@0:4
f8@0:4
d8@0:4
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
B12@0:4^@8
@20@0:4@8@"NSString"12@"NSSQLEntity"16
B12@0:4@"NSObject<NSSQLAttributeExtension>"8
B16@0:4@8^@12
B12@0:4I8
@"NSPredicate"
@"NSSQLAttribute"
@"NSSQLRelationship"
@12@0:4B8
I12@0:4^@8
v16@0:4I8I12
^{__CFDictionary=}
^^{__CFDictionary}
{_contextMapTableFlags="_usesWeakReferences"b1"_garbageCollectionEnabled"b1"_reservedFlags"b30}
@20@0:4^?8^v12i16
{_opaque_pthread_mutex_t="__sig"l"__opaque"[40c]}
{_opaque_pthread_cond_t="__sig"l"__opaque"[24c]}
B20@0:4@8^@12^@16
@16@0:4@8@?12
B20@0:4r*8^Q12i16
^v12@0:4@8
v24@0:4@8^v12{_NSRange=II}16
q12@0:4r*8
B20@0:4r*8r*12i16
v12@0:4r*8
v16@0:4r*8i12
v20@0:4^I8@12@16
@20@0:4@8@12I16
@20@0:4#8@12@16
@20@0:4@8@12#16
^{__CFDictionary=}16@0:4@8B12
^{__CFDictionary=}12@0:4@8
^{_opaque_pthread_t=l^{__darwin_pthread_handler_rec}[4088c]}
S12@0:4I8
v12@0:4^S8
v20@0:4^S8{_NSRange=II}12
r*12@0:4B8
v12@0:4*8
B20@0:4@8@12^@16
@"NSRelationshipDescription"
@"NSManagedObjectID"
@16@0:4@8^@12
@20@0:4@8@12^@16
@24@0:4@8@12@16^@20
v16@0:4d8
@"NSURL"
@20@0:4@8I12@16
B20@0:4@8@12i16
i16@0:4@8@12
B24@0:4^@8@12@16^@20
v16@0:4*8I12
v36@0:4@8@12@16@20@24@28@32
*8@0:4
#16@0:4@8@12
I16@0:4^@8I12
@16@0:4r*8I12
i16@0:4*8i12
@16@0:4q8
B24@0:4@8@12@16^@20
@"NSProgress"
@24@0:4@8@12@16@?20
@?8@0:4
v12@0:4@?8
@"NSAsynchronousFetchRequest"
@16@0:4i8@12
v16@0:4Q8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@16@0:4^@8@12
v16@0:4@8B12
@"NSEntityDescription"
^{_NSRange=II}
{__entityDescriptionFlags="_isAbstract"b1"_shouldValidateOnSave"b1"_isImmutable"b1"_isFlattened"b1"_skipValidation"b1"_hasPropertiesIndexedBySpotlight"b1"_hasPropertiesStoredInTruthFile"b1"_rangesAreInDataBlob"b1"_hasAttributesWithExternalDataReferences"b1"_hasNonstandardPrimitiveProperties"b2"_hasUniqueProperties"b1"_validationUniqueProperties"b1"_isPersistentHistoryEntity"b1"_reservedEntityDescription"b19}
@20@0:4@8i12@16
^{_NSRange=II}8@0:4
L20@0:4L8@12B16
^v12@0:4I8
^v8@0:4
v12@0:4l8
{__entityMappingFlags="_isInUse"b1"_reservedEntityMapping"b31}
@"NSSQLCore"
@20@0:4I8d12
d12@0:4@8
v28@0:4@8@12I16d20
{_externalRefFlags_st="_invalidToOnes"b1"_hasTemporaryID"b1"_backgroundDealloc"b1"_reservedFlags"b1"_virtualfk_count"b14"_ordkey_count"b14}
@"NSPersistentStoreCoordinator"
@"NSFetchRequest"
@20@0:4@8B12^@16
{_fetchRequestFlags="distinctValuesOnly"b1"includesSubentities"b1"includesPropertyValues"b1"resultType"b3"returnsObjectsAsFaults"b1"excludePendingChanges"b1"isInUse"b1"entityIsName"b1"refreshesRefetched"b1"propertiesValidated"b1"disableCaching"b1"_RESERVED"b19}
{_fetchExpressionFlags="isCountOnly"b1"_RESERVED"b31}
^{__CFArray=}16@0:4r^*8L12
v16@0:4r^@8L12
@16@0:4^@8I12
@24@0:4^@8I12^v16@20
@20@0:4^@8^@12I16
v16@0:4^@8B12
I24@0:4^{?=L^@^L[5L]}8^@12I16B20
v16@0:4^@8^@12
@"NSKnownKeysMappingStrategy"
[0@]
@32@0:4r^@8@12r^@16{_NSRange=II}20B28
{_NSRange="location"I"length"I}
v20@0:4I8@12@16
v20@0:4@8I12@16
B20@0:4^@8@12^@16
@20@0:4^I8^I12B16
v16@0:4{_NSRange=II}8
v20@0:4@8@12I16
@20@0:4@8l12l16
v24@0:4@8@12@16@20
v24@0:4@8@12I16@20
@28@0:4i8@12@16@20@24
B28@0:4^@8@12@16I20^@24
v36@0:4@8@12^@16^@20^@24^@28^@32
B16@0:4^@8^@12
^?12@0:4:8
v24@0:4@8@12l16l20
^{?=i^v@LCI^v@*{_moFactoryClassFlags=b1b1b1b1b1b1b26}}8@0:4
#12@0:4@8
I20@0:4^@8@12I16
v24@0:4@8@12@16^v20
I16@0:4@8^@12
B20@0:4@8B12@16
{_managedObjectContextFlags="_registeredForCallback"b1"_propagatesDeletesAtEndOfEvent"b1"_exhaustiveValidation"b1"_processingChanges"b1"_useCommittedSnapshot"b1"_registeredUndoTransactionID"b1"_retainsAllRegisteredObjects"b1"_savingInProgress"b1"_wasDisposed"b1"_unprocessedChangesPending"b1"_isDirty"b1"_ignoreUndoCheckpoints"b1"_propagatingDeletes"b1"_isNSEditorEditing"b1"_isMainThreadBlessed"b1"_isImportContext"b1"_preflightSaveInProgress"b1"_disableDiscardEditing"b1"_isParentStoreContext"b1"_postSaveNotifications"b1"_isMerging"b1"_concurrencyType"b1"_deleteInaccessible"b1"_priority"b2"_autoMerge"b1"_isXPCServerContext"b1"_pushSecureDelete"b1"_reservedFlags"b4}
I24@0:4@8@12@16^@20
v20@0:4@8B12B16
v20@0:4^@8L12B16
@12@0:4L8
I28@0:4^@8I12^@16@20B24
v20@0:4@8@12B16
B28@0:4@8I12^@16B20B24
v20@0:4:8@12@16
v32@0:4@8@12@16@20@24B28
@16@0:4@8^#12
v16@0:4@8:12
v32@0:4@8@12:16B20^v24B28
v20@0:4@8:12^v16
v20@0:4@8B12^{?=@:^v}16
B12@0:4^{__CFArray=}8
^{__CFRunLoopObserver=}
@16@0:4@8L12
@"NSKnownKeysDictionary"
{__managedObjectModelFlags="_isInUse"b1"_isImmutable"b1"_isOptimizedForEncoding"b1"_hasEntityWithConstraints"b1"_reservedEntityDescription"b28}
B20@0:4@8I12@16
v16@0:4B8I12
@"NSBundle"
@"NSPersistentStoreMap"
{__modelMappingFlags="_isInUse"b1"_reservedModelMapping"b31}
@20@0:4@8B12@16
@28@0:4@8I12I16@20@24
B20@0:4@8@12B16
v28@0:4@8@12@16@20B24
@"NSMigrationManager"
@"NSPropertyMapping"
B40@0:4@8@12@16@20@24@28@32^@36
@"NSMappingModel"
@"NSMigrationContext"
{_migrationManagerFlags="_migrationWasCancelled"b1"_usesStoreSpecificMigrationManager"b1"_reservedMigrationManager"b30}
{_objectStoreFlags="isReadOnly"b1"cleanOnRemove"b1"isMDDirty"b1"_RESERVED"b29}
B28@0:4@8^B12^B16^@20@24
@16@0:4^v8B12
@20@0:4@8d12
v36@0:4@8@12@16@20I24d28
v32@0:4@8@12@16@20d24
@24@0:4@8@12d16
^{?=i^?^?^?^?}
{persistentStoreCacheFlags="_preserveToManyRelationships"b1"_reserved"b31}
v16@0:4#8@12
v16@0:4@?8@12
v20@0:4@8@12@?16
v16@0:4@8@?12
@28@0:4@8@12@16@20^@24
B32@0:4@8@12@16@20@24^@28
@16@0:4@8^i12
{_persistentStoreCoordinatorFlags="_isRegistered"b1"_canUseDirectDispatch"b1"_reservedFlags"b30}
@20@0:4r*8I12^@16
B24@0:4@8@12^{__CFSet=}16^{__CFSet=}20
@12@0:4^I8
@"NSIndexPath"
@"_NSDefaultSectionInfo"
@"NSMappedObjectStore"
{__propertyDescriptionFlags="_isReadOnly"b1"_isTransient"b1"_isOptional"b1"_isIndexed"b1"_skipValidation"b1"_isIndexedBySpotlight"b1"_isStoredInExternalRecord"b1"_extraIvarsAreInDataBlob"b1"_isOrdered"b1"_hasMaxValueInExtraIvars"b1"_hasMinValueInExtraIvars"b1"_storeBinaryDataExternally"b1"_reservedAttributeFlagOne"b1"_reservedPropertyDescription"b3}
^{_NSExtraPropertyIVars=@qq}8@0:4
v32@0:4@8@12@16@20@24@28
@"NSEntityDescription"8@0:4
@"NSPredicate"8@0:4
{_requestFlags="includesSubentities"b1"resultType"b2"entityIsName"b1"secureOperation"b1"_RESERVED"b27}
{__propertyMappingFlags="_isInUse"b1"_reservedPropertyMapping"b31}
@"NSObject"
@"NSAttributeDescription"
@"NSPropertyTransform"
v20@0:4*8I12@16
v12@0:4c8
C16@0:4I8I12
@20@0:4@8C12@16
@24@0:4@8C12@16B20
@20@0:4q8C16
@16@0:4I8C12
v16@0:4q8
v12@0:4C8
@16@0:4@8C12
@24@0:4@8C12@16@20
B20@0:4@8C12@16
C12@0:4@8
@"NSURL"8@0:4
@"NSOperationQueue"8@0:4
v12@0:4@?<v@?@?<v@?>>8
v12@0:4@?<v@?@"NSError">8
v12@0:4@"NSURL"8
v12@0:4@"NSSet"8
v12@0:4@"NSFileVersion"8
v16@0:4@"NSURL"8@?<v@?@"NSError">12
v16@0:4@"NSURL"8@"NSURL"12
v16@0:4@"NSURL"8@"NSFileVersion"12
@"NSSet"8@0:4
^{_NSScalarObjectID=#}20@0:4@8q12
@20@0:4@8q12
^{_NSScalarObjectID=#}20@0:4q8@16
v28@0:4@8@12@16B20@24
v20@0:4B8@12@16
i16@0:4@8I12
v16@0:4@8i12
@20@0:4@8Q12
B20@0:4@8B12^@16
@"NSSQLModel"
@"NSSQLiteConnection"
@"NSSQLCoreDispatchManager"
@"NSGenerationalRowCache"
{_sqlCoreFlags="useSyntaxColoredLogging"b1"checkedExternalReferences"b1"fileProtectionType"b3"notifyFOKChanges"b1"initializationComplete"b1"connectionsAreLocal"b1"isXPCDelegate"b1"queryGenerationInitializationFailed"b1"persistentHistoryTracking"b1"hasAncillaryModels"b1"createdAncillaryModelTables"b1"_RESERVED"b20}
@24@0:4@8@12I16B20
@"NSFetchIndexDescription"
{__indexElementDescriptionFlags="_ascending"b1"_propertyIsRetained"b1"_reservedEntityDescription"b30}
I16@0:4@8I12
{_NSRange=II}8@0:4
@"NSSQLPrimaryKey"
@"NSSQLEntityKey"
@"NSSQLOptLockKey"
@"NSSQLStoreMappingGenerator"
{__sqlentityFlags="_hasAttributesWithExternalDataReferences"b1"_hasAttributesMonitoredByTriggers"b1"_hasAttributesBackedByTriggers"b1"_reserved"b29}
@"NSSQLSelectIntermediate"
@"NSSQLGroupByIntermediate"
@"NSSQLHavingIntermediate"
@"NSSQLOffsetIntermediate"
@"NSSQLForeignKey"
@"NSSQLToOne"
q12@0:4@8
v28@0:4@8@12@16^^I20^*24
I24@0:4@8@12@16@20
I20@0:4@8@12@16
@60@0:4@8@12@16@20@24@28@32q36@44@48^^I52^*56
v28@0:4@8@12d16B24
@"NSSQLSaveChangesRequestContext"
{_sqlSaveFlags="notifyFOKChanges"b1"hasChanges"b1"reserved"b30}
@20@0:4@8B12I16
@28@0:4@8B12I16B20@24
@32@0:4@8B12B16I20B24@28
@"NSSQLIntermediate"
@12@0:4C8
@20@0:4@8@12^{__CFBitVector=}16
@24@0:4@8B12B16I20
B24@0:4@8^{__CFDictionary=}12^{__CFDictionary=}16^@20
@24@0:4@8@12@16B20
@28@0:4@8^{__CFDictionary=}12^{__CFDictionary=}16^{__CFDictionary=}20^@24
B32@0:4@8^{__CFDictionary=}12^{__CFDictionary=}16^{__CFDictionary=}20@24^@28
i32@0:4r*8@12^^{sqlite3}16i20r*24B28
i16@0:4r*8@12
r*12@0:4@8
^{__CFArray=}12@0:4@8
v16@0:4i8B12
v16@0:4@8^{__CFBitVector=}12
@16@0:4@8^{__CFBitVector=}12
v40@0:4Q8Q16Q24Q32
@20@0:4@8I12^{sqlite3_stmt=}16
i16@0:4^v8@12
^{sqlite3_stmt=}8@0:4
q16@0:4@8I12
^^v8@0:4
v16@0:4B8B12
v28@0:4q8q16r*24
v28@0:4q8q16@24
v32@0:4@8i12q16@24@28
v24@0:4@8q12@20
v40@0:4r*8q12q20r*28q32
@"NSObject<OS_dispatch_queue>"
^{sqlite3=}
^{sqlite3_stmt=}
@"NSSQLitePrefetchRequestCache"
[5^v]
{__sqliteConnectionFlags="_readyToBind"b1"_fetchInProgress"b1"_fileSystemType"b2"_proxyLocking"b1"_vacuumSetupNeeded"b1"_usingWAL"b1"_disallowReconnect"b1"_isWriter"b1"_didSnapshotRecovery"b1"_createdAncillaryTables"b1"_reserved"b21}
@20@0:4@?8@12@16
@28@0:4@8B12@16@20@24
@32@0:4@8@12@16@20@24@28
@32@0:4@8@12@16@20B24@28
@28@0:4@8@12B16^@20@24
@16@0:4I8@12
@24@0:4@8@12B16I20
@28@0:4@8@12B16I20I24
L12@0:4@8
@"NSPersistentStore"
@"NSSQLRowCache"
{?="principal_entity_has_subentities"b1"fetch_only_primary_keys"b1"fetch_results_style"b3"use_clean_memory"b1"_reserved"b26}
v12@0:4@"NSPredicate"8
v12@0:4@"NSExpression"8
v12@0:4@"NSPredicateOperator"8
@"NSObject<OS_dispatch_group>"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
^{__CFDictionary=}8@0:4
v20@0:4@8@12^{__CFDictionary=}16
{_sqlColumnFlags="_allowAliasing"b1"_unique"b1"_constrained"b1"_backedByTrigger"b1"_reservedFlags"b12}
I32@0:4^@8I12@16^^{_NSScalarObjectID}20d24
@16@0:4@8^{_NSScalarObjectID=#}12
@24@0:4@8^{_NSScalarObjectID=#}12d16
^{_NSScalarObjectID=#}12@0:4@8
^{_NSScalarObjectID=#}8@0:4
v12@0:4^{_NSScalarObjectID=#}8
v20@0:4I8q12
q12@0:4I8
I12@0:4I8
^{__CFBitVector=}16@0:4@8I12
^{__CFBitVector=}12@0:4@8
^{__CFBitVector=}8@0:4
@"_CDSnapshot"
l12@0:4I8
@20@0:4@8B12B16
@32@0:4@8@12B16B20B24@28
@20@0:4B8B12@16
v28@0:4@8@12@16@20@?24
@"PFCloudKitStoreMonitor"
@"CKDatabase"
v16@0:4^{sqlite3_stmt=}8@12
@"NSCachedFetchRequestInfo"
@16@0:4^S8I12
@"NSSQLFetchIntermediate"
@"NSSQLColumn"
v20@0:4@"PFCloudKitSerializer"8@"PFMirroredRelationship"12@"NSError"16
v16@0:4@"PFCloudKitSerializer"8@"NSCKImportPendingRelationship"12
@"NSCKImportOperation"
@"_PFFetchPlanHeader"
@"NSSQLFetchRequestContext"
@"NSSQLForeignEntityKey"
@"NSSQLForeignOrderKey"
@16@0:4@8i12
v28@0:4@8@12@16@20@24
@32@0:4@8@12@16@20@24^@28
@12@0:4*8
{_double_quad_uint="high64"Q"low64"Q}
@"_NS128bitWrapper"
@16@0:4@8^v12
i16@0:4@8i12
{_fetchResultsControllerFlags="_sendObjectChangeNotifications"b1"_sendSectionChangeNotifications"b1"_sendDidChangeContentNotifications"b1"_sendWillChangeContentNotifications"b1"_sendSectionIndexTitleForSectionName"b1"_changedResultsSinceLastSave"b1"_hasMutableFetchedResults"b1"_hasBatchedArrayResults"b1"_hasSections"b1"_usesNonpersistedProperties"b1"_includesSubentities"b1"_reservedFlags"b21}
v16@0:4@8^q12
I28@0:4@8@12i16i20@24
@"NSDate"
@"NSUUID"
@"NSCKExportMetadata"
@"NSCKExportOperation"
v12@0:4@"NSSQLBindVariable"8
@"NSNumber"8@0:4
v20@0:4B8B12B16
v12@0:4{_NSSQLMigrationContext=@}8
@16@0:4@8{_NSSQLMigrationContext=@}12
v16@0:4@8{_NSSQLMigrationContext=@}12
^{sqlite3_intarray=}8@0:4
v12@0:4^{sqlite3_intarray=}8
^{sqlite3_intarray=}
@"NSSQLUpdateColumnsIntermediate"
q16@0:4@8@12
q20@0:4@8@12@16
v20@0:4@8@12i16
@"NSSQLBinaryIndex"
@28@0:4@8@12@16B20{_NSSQLMigrationContext=@}24
@"NSSQLWhereIntermediate"
B24@0:4@8@12I16^@20
r^v8@0:4
v16@0:4^v8I12
v20@0:4^v8{_NSRange=II}12
{_NSRange=II}24@0:4@8I12{_NSRange=II}16
B20@0:4@8I12^@16
B16@0:4@8B12
B12@0:4B8
@24@0:4@8@12@16i20
@28@0:4r^v8I12@16@20i24
v12@0:4r^v8
{__externalDataFlags="_isStoredExternally"b1"_hasMappedData"b1"_cleanupOnDealloc"b1"_dataProtectionLevel"b3"_isStoredUbiquitously"b1"_createdByUbiquityImport"b1"_reserved"b24}
@"NSObject<OS_dispatch_semaphore>"
v24@0:4@8@12^^I16^*20
v16@0:4r^@8I12
v20@0:4r^@8I12I16
v24@0:4{_NSRange=II}8I16@?20
{_NSFaultingMutableOrderedSetFlags="_isFault"b1"_mustPropagateDelete"b1"_ignoringIdempotentKVO"b1"_mustCopyOnWrite"b1"_isImmutableCopy"b1"_reserved"b11"_relationship"b16}
I20@0:4^@8I12^@16
{_snapshotFlags_st="_readOnly"b1"_reservedFlags"b7}
@40@0:4q8@16@20i24@28@32@36
@"NSPersistentHistoryTransaction"
@24@0:4@8@12Q16
v20@0:4@8Q12
I12@0:4@?8
I28@0:4@8{_NSRange=II}12I20@?24
v20@0:4^@8I12I16
v24@0:4{_NSRange=II}8r^@16I20
@"NSMutableOrderedSet"
@"_NSFaultingMutableOrderedSetMutationMethods"
@"NSPersistentStoreCache"
@"NSPersistentStoreRequest"
@"NSException"
@"NSSQLManyToMany"
@"NSPersistentHistoryToken"
@"CKRecordZoneSubscription"
@"CKContainer"
@52@0:4q8@16@20@24@28@32@36d40@48
@"NSSQLLimitIntermediate"
@"NSSQLOrderIntermediate"
B20@0:4@"NSManagedObjectModel"8@"NSPersistentStoreDescription"12^@16
v20@0:4@"NSPersistentStoreCoordinator"8@"NSPersistentStore"12@"NSPersistentStoreDescription"16
B16@0:4B8^@12
@333333
@(#)PROGRAM:CoreData  PROJECT:PersistenceFramework-828
%{public}s: %{public}s
CoreData: %{public}s: %{public}s
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
