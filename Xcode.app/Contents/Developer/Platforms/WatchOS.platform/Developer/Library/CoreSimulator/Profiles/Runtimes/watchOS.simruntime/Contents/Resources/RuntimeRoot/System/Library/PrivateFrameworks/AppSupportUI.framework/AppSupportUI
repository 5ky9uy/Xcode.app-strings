MbP?
init
.cxx_destruct
.cxx_construct
_sizeCache
_customAlignmentInsets
_customTopBaseline
_customBottomBaseline
_flags
_wantsAutolayout
subviews
count
alloc
release
containerViewInfoCreateIfNeeded:
invalidateIntrinsicContentSize
class
stringWithFormat:
contentLayoutSizeCache
appendFormat:
stringByAppendingString:
supportsAsynchronousMeasurement
isLayoutSizeDependentOnPerpendicularAxis
setCustomAlignmentRectInsets:
customAlignmentRectInsets
setBaselineRelativeAlignmentRectInsets:
isBaselineRelativeAlignmentRectInsets
setAllowsBaselineOffsetApproximation:
allowsBaselineOffsetApproximation
setCustomBaselineOffsetFromBottom:
customBaselineOffsetFromBottom
setCustomFirstBaselineOffsetFromContentTop:
customFirstBaselineOffsetFromContentTop
setInvalidatingIntrinsicContentSizeAlsoInvalidatesSuperview:
invalidatingIntrinsicContentSizeAlsoInvalidatesSuperview
contentLayoutSizeCacheDescription
neverCacheContentLayoutSize
setNeverCacheContentLayoutSize:
countByEnumeratingWithState:objects:count:
nukeContentLayoutSizeCacheFromOrbit
alignmentRectInsets
effectiveAlignmentRectInsets
_autolayoutSpacingAtEdge:forAttribute:nextToNeighbor:edge:attribute:multiplier:
raise:format:
_autolayoutSpacingAtEdge:forAttribute:inContainer:isGuide:
systemLayoutSizeFittingSize:
_nui_isUIButtonType
effectiveBaselineOffsetFromContentBottom
effectiveFirstBaselineOffsetFromContentTop
systemSpacingToAdjecentSiblingView:axis:baselineRelative:multiplier:
systemSpacingToContainerView:edge:baselineRelative:multiplier:
effectiveLayoutSizeFittingSize:
numberOfLines
isScrollEnabled
state
titleForState:
attributedTitleForState:
contentRectForBounds:
titleRectForContentRect:
imageForState:
imageRectForContentRect:
_nui_rectInsetsForBaseline
separatorStyle
_separatorFrame
effectiveSeparatorHeight
viewForFirstBaselineLayout
titleLabel
_fontInfoForBaselineSpacing
ascender
_currentScreenScale
_hasFontInfoForVerticalBaselineSpacing
viewForLastBaselineLayout
descender
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
autorelease
retainCount
zone
hash
superclass
description
debugDescription
contentCompressionResistancePriorityForAxis:
contentHuggingPriorityForAxis:
populateGridArrangementCells:
populateGridArrangementDimension:withCells:axis:
layoutFrameForArrangedSubview:withProposedContentFrame:
contentLayoutSizeFittingSize:forArrangedSubview:
setNeedsLayout
_intrinsicContentSizeInvalidatedForChildView:
_prepareForFirstIntrinsicContentSizeCalculation
_prepareForSecondIntrinsicContentSizeCalculationWithLayoutEngineBounds:
_inSecondConstraintsPass
_setInSecondConstraintsPass:
_resetToBeginningOfDoublePass
sharedApplication
preferredContentSizeCategory
arrayWithObjects:count:
containsObject:
_nui_isAccessibilityEnabled
processInfo
environment
objectForKeyedSubscript:
boolValue
integerValue
isDebugBoundingBoxesEnabled
initWithArrangedSubviews:
setFrame:
initWithFrame:
layer
orangeColor
CGColor
setBorderColor:
setBorderWidth:
addArrangedSubview:
performBatchUpdates:
initWithCoder:
decodeObjectForKey:
setArrangedSubviews:
decodeBoolForKey:
setBaselineRelativeArrangement:
setLayoutMarginsRelativeArrangement:
_endObservingSubviewVisibility:
dealloc
setWithArray:
string
countForObject:
assertNotInLayoutPass:
containerViewDidInvalidateIntrinsicContentSize:
containerView:systemLayoutSizeFittingSize:forArrangedSubview:
containerView:layoutFrameForArrangedSubview:withProposedFrame:
containerView:willMeasureArrangedSubviewsFittingSize:forReason:
containerViewDidLayoutArrangedSubviews:
copy
removeFromSuperview
makeObjectsPerformSelector:
isHidden
predicateWithBlock:
filteredArrayUsingPredicate:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
invalidateIntrinsicContentSizeRequiringArrangedSubviewRemeasurement:
layoutMargins
visibleArrangedSubviews
firstObject
_firstBaselineOffsetFromTop
_baselineOffsetFromBottom
insertArrangedSubview:atIndex:
removeArrangedSubview:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
indexOfObject:
removeObjectAtIndex:
didRemoveArrangedSubview:atIndex:
superview
_setHostsLayoutEngine:
addSubview:
purpleColor
colorWithAlphaComponent:
_addAsSubviewIfNeeded:
_beginObservingSubviewVisibility:
insertObject:atIndex:
didInsertArrangedSubview:atIndex:
objectAtIndex:
replaceObjectAtIndex:withObject:
delegate
effectiveLayoutMargins
calculateArrangedSizeFittingSize:
_intrinsicSizeWithinSize:
layoutSubviews
bounds
layoutArrangedSubviewsInBounds:
layoutMarginsDidChange
isEqualToString:
visibilityDidChangeForArrangedSubview:
observeValueForKeyPath:ofObject:change:context:
intrinsicContentSizeDidInvalidateForArrangedSubview:
lastObject
length
substringToIndex:
arrangedDescription
stringByAppendingFormat:
requiresConstraintBasedLayout
initialize
wantsLayer
isFlipped
_verifyInternalConsistencyWarningOnly:
setDelegate:
arrangedSubviews
isInBatchUpdate
_didRemoveSubview:
replaceArrangedSubview:atIndex:
indexOfArrangedSubview:
sizeThatFits:
intrinsicContentSize
systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:
isBaselineRelativeArrangement
isLayoutMarginsRelativeArrangement
asynchronousMeasurement
setAsynchronousMeasurement:
_delegate
_arrangedSubviews
_visibleArrangedSubviews
_preferredMaxLayoutWidth
_cachedIntrinsicSizes
_containerFlags
_baselineRelativeArrangement
_layoutMarginsRelativeArrangement
_asynchronousMeasurement
_hasLayoutEngine
translatesAutoresizingMaskIntoConstraints
_nsis_bounds
updateConstraints
alignmentRectForFrame:
_needsDoubleUpdateConstraintsPass
appendString:
effectiveUserInterfaceLayoutDirection
callStackSymbols
isInLayoutPass
containerGridView:minimumSpacingAdjecentToArrangedSubview:
containerGridView:minimumDirectionalSpacingAdjecentToArrangedSubview:
containerGridView:horizontalAlignmentForArrangedSubview:
containerGridView:verticalAlignmentForArrangedSubview:
initWithArrangeSubviewRows:
initWithArrangedSubviewRows:
addRowWithArrangedSubviews:
addObjectsFromArray:
isEqualToSet:
mutableCopy
minusSet:
_updateArrangedSubviewsToMatchCurrentGrid
numberOfRows
objectAtIndexedSubscript:
orderedSetWithArray:
array
numberOfColumns
orderedSetWithCapacity:
addObject:
_setupViewRangesIfNeeded
getColumnRange:rowRange:forArrangedSubview:
insertRowAtIndex:withArrangedSubviews:
arrayWithCapacity:
arrayWithArray:
_invalidateIntrinsicContentSizeAndUpdateArrangedSubviewsToMatchCurrentGrid
insertColumnAtIndex:withArrangedSubviews:
enumerateObjectsUsingBlock:
arrangedSubviewInColumnAtIndex:rowAtIndex:
_baselineViewVendForFirstBaseline:fromViews:
_baselineViewForFirstBaseline:forRow:
_verifyInternalGridConsistencyWarningOnly:
_horizontalAlignmentOfView:inColumn:
_verticalAlignmentOfView:inColumn:
_widthOfColumnAtIndex:
_heightOfRowAtIndex:
viewForLastBaselineLayoutInRow:
viewForFirstBaselineLayoutInRow:
displayScale
arrangedSubviewsInRowAtIndex:
arrangedSubviewsInColumnAtIndex:
rowIndexForArrangedSubview:
columnIndexForArrangedSubview:
removeRowAtIndex:
addColumnWithArrangedSubviews:
removeColumnAtIndex:
replaceArrangedSubview:inColumnAtIndex:rowAtIndex:
setHorizontalAlignment:
setVerticalAlignment:
horizontalDistribution
setHorizontalDistribution:
verticalDistribution
setVerticalDistribution:
setRowSpacing:
rowSpacing
setColumnSpacing:
columnSpacing
setRowHeight:
setColumnWidth:
horizontalAlignment
verticalAlignment
rowHeight
columnWidth
_viewRows
_visibleArrangement
_visibleCount
_viewRanges
_rowBaselineViews
_spacing
_rows
_columns
_gridViewFlags
_horizontalAlignment
_verticalAlignment
_rowHeight
_columnWidth
setHidden:
setRowAtIndex:hidden:
isRowAtIndexHidden:
setColumnAtIndex:hidden:
isColumnAtIndexHidden:
setHorizontalAlignment:ofColumnAtIndex:
horizontalAlignmentOfColumnAtIndex:
setVerticalAlignment:ofColumnAtIndex:
verticalAlignmentOfColumnAtIndex:
setSpacing:afterRowAtIndex:
spacingAfterRowAtIndex:
setSpacing:afterColumnAtIndex:
spacingAfterColumnAtIndex:
setHeight:ofRowAtIndex:
heightOfRowAtIndex:
setWidth:ofColumnAtIndex:
widthOfColumnAtIndex:
numberWithInteger:
initWithObjectsAndKeys:
decodeIntegerForKey:
setAxis:
setDistribution:
setAlignment:
decodeDoubleForKey:
setSpacing:
_baselineViewVendForFirstBaseline:
containerStackViewDidInvalidateIntrinsicContentSize:
containerStackView:systemLayoutSizeFittingSize:forArrangedSubview:
containerStackView:layoutFrameForArrangedSubview:withProposedFrame:
containerStackViewDidLayoutArrangedSubviews:
containerStackView:minimumSpacingAdjecentToArrangedSubview:
containerStackView:minimumDirectionalSpacingAdjecentToArrangedSubview:
containerStackView:alignmentForArrangedSubview:
_effectiveAlignmentForArrangedSubview:
_calculateArrangedSizeFittingSize:forLayout:
setSpacingViewClass:
axis
effectiveAxis
distribution
alignment
spacing
spacingViewClass
_spacingViews
_spacingAfter
_smallestWidthKnownToCompress
_stackViewFlags
_axis
_effectiveAxis
_distribution
_alignment
_spacingViewClass
setSpacing:afterArrangedSubviewAtIndex:
spacingAfterArrangedSubviewAtIndex:
setCustomSpacing:afterView:
customSpacingAfterView:
numberOfItemsInBoxArrangement:
boxArrangement:itemAtIndex:horizontalAlignment:verticalAlignment:
container
mainScreen
scale
_cacheDisplayScaleIfNeeded
populateBoxArrangementCells:
initWithContainer:dataSource:
dataSource
reloadData
layoutSizeFittingSize:
positionItemsInBounds:block:
_arrangement
_container
_dataSource
_scale
containerBoxView:horizontalAlignmentForArrangedSubview:
containerBoxView:verticalAlignmentForArrangedSubview:
_effectiveHorizontalAlignmentForArrangedSubview:
_effectiveVerticalAlignmentForArrangedSubview:
_boxFlags
_createButtonWithGridView:item:
titleStyle
_createLabelForStyle:
blackColor
setTextColor:
widgetItemTitle
setText:
valueForKey:
setHyphenationFactor:
setObject:forKeyedSubscript:
text
initWithString:attributes:
setAttributedText:
currentFont
_scaledValueForValue:
widgetItemSubtitle
subtitleStyle
grayColor
itemWidth
widgetGridView:didTapItemAtIndex:
buttonWithType:
widgetItemImage
setImage:forState:
_didTapButton:
addTarget:action:forControlEvents:
imageView
setClipsToBounds:
imageStyle
setCornerRadius:
setFont:
clearColor
setBackgroundColor:
setTextAlignment:
setAdjustsFontSizeToFitWidth:
setNumberOfLines:
setLineBreakMode:
preferredFontForTextStyle:
pointSize
systemFontOfSize:
entitledExtraSpaceForCellAtIndex:
font
lineHeight
cellForGridViewItemAtIndex:
donatableSpaceAllowRemeasure:
borrowableSpaceForCellAtIndex:
centerAdjustmentAllowed
initWithWidgetGridView:item:index:
donatableSpace
index
subtitleLabel
gridView
_width
_measuredSize
_index
_donatableSpaceIsValid
_accessibilityEnabled
_donatableSpace
_gridView
initWithContentView:
setContentView:
setContentSize:
_nui_needsDoubleUpdateConstraintsPass
contentView
_containerViewFlags
_contentView
currentDevice
userInterfaceIdiom
defaultCenter
contentSizeDidChange
addObserver:selector:name:object:
maxNumberOfItems
itemsPerRow
labelMinSpacing
numberOfItemsInWidgetGridView:
widgetGridView:itemAtIndex:
widgetGridView:classForCellAtIndex:
null
horizontalMargin
generateItems
subarrayWithRange:
setLayoutMargins:
frame
currentLayout
labelOutset
_createGridViewIfNeeded
initWithDataSource:delegate:
setImageStyle:
setTitleStyle:
setSubtitleStyle:
setDataSource:
setCenterAdjustmentAllowed:
currentLabelOutset
_itemViews
_labelSizes
_currentLayout
_imageStyle
_titleStyle
_subtitleStyle
_centerAdjustmentAllowed
_currentLabelOutset
getSize:forItem:targetSize:
insertSize:forTargetSize:
invalidateCache
gridArrangement:widthOfColumnAtIndex:spacingAfter:
gridArrangement:heightOfRowAtIndex:spacingAfter:
numberOfItemsInGridArrangement:
gridArrangement:itemAtIndex:columns:rows:horizontalAlignment:verticalAlignment:
positionItemsInColumns:rows:inBounds:block:
unionFrameForItemsInColumns:rows:inBounds:
frameForColumns:rows:inBounds:
_NUIViewContainerViewInfo
NUIContainerView
_NUISizeCache
NUISubclassHelpers
_NUIGridArrangement
NUIArrangementItem
NSObject
NUIContainerViewHack
_UIMultilineTextContentSizing
NUIAccessibilitySupport
NUISubclassing
NUIContainerGridView
_NUIGridArrangementContainer
NUIArrangementContainer
NUIContainerGridViewCustomDimensionConfiguration
NUIContainerStackView
NUIContainerStackViewCustomConfiguration
NUIBoxArrangement
_NUIBoxArrangementContainer
NUIContainerBoxView
NUIWidgetGridViewCell
NUIContainerStackViewDelegate
NUIContainerViewDelegate
NUIWidgetGridViewEmptyCell
NUIContentScrollView
NUIWidgetGridView
NUISizeCache
NUIGridArrangement
@8@0:4
v8@0:4
{nui_size_cache="__tree_"{__tree<std::__1::__value_type<CGSize, CGSize>, std::__1::__map_value_compare<CGSize, std::__1::__value_type<CGSize, CGSize>, std::__1::less<CGSize>, true>, std::__1::allocator<std::__1::__value_type<CGSize, CGSize> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CGSize, CGSize>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<CGSize, std::__1::__value_type<CGSize, CGSize>, std::__1::less<CGSize>, true> >="__first_"L}}}
{UIEdgeInsets="top"f"left"f"bottom"f"right"f}
{?="baselineRelativeInsets"b1"allowFastBaselines"b1"alsoInvalidateSuperview"b1"neverCacheSize"b1}
B8@0:4
@12@0:4B8
v24@0:4{UIEdgeInsets=ffff}8
{UIEdgeInsets=ffff}8@0:4
v12@0:4B8
v12@0:4f8
f8@0:4
^{nui_size_cache={__tree<std::__1::__value_type<CGSize, CGSize>, std::__1::__map_value_compare<CGSize, std::__1::__value_type<CGSize, CGSize>, std::__1::less<CGSize>, true>, std::__1::allocator<std::__1::__value_type<CGSize, CGSize> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CGSize, CGSize>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<CGSize, std::__1::__value_type<CGSize, CGSize>, std::__1::less<CGSize>, true> >=L}}}8@0:4
i8@0:4
f24@0:4@8i12B16f20
f24@0:4@8I12B16f20
{CGSize=ff}16@0:4{CGSize=ff}8
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
f12@0:4i8
v12@0:4@8
v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
@24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
@12@0:4@8
B12@0:4B8
v12@0:4@?8
v16@0:4@8I12
I12@0:4@8
{CGSize=ff}8@0:4
{CGSize=ff}24@0:4{CGSize=ff}8f16f20
v24@0:4@8@12@16^v20
v12@0:4i8
@"<NUIContainerViewDelegate>"
@"NSMutableArray"
@"NSArray"
{?="hiddenArrangedSubviewCount"b16"inBatch"b1"delayState"b2"inLayoutPass"b1"determiningPreferredMaxLayoutWidth"b1"inSecondConstraintsPass"b1"delegateDidInvalidateIntrinsicContentSize"b1"delegateSystemLayoutSizeFittingSizeForArrangedSubview"b1"delegateLayoutFrameForArrangedSubview"b1"delegateWillMeasureFitting"b1"delegateDidLayout"b1}
B24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
{CGSize=ff}20@0:4{CGSize=ff}8@16
{CGRect={CGPoint=ff}{CGSize=ff}}28@0:4@8{CGRect={CGPoint=ff}{CGSize=ff}}12
v16@0:4@8i12
{CGSize=ff}20@0:4{CGSize=ff}8@"<NUIArrangementItem>"16
{CGRect={CGPoint=ff}{CGSize=ff}}28@0:4@"<NUIArrangementItem>"8{CGRect={CGPoint=ff}{CGSize=ff}}12
v12@0:4^{vector<_NUIGridArrangementCell, std::__1::allocator<_NUIGridArrangementCell> >=^{_NUIGridArrangementCell}^{_NUIGridArrangementCell}{__compressed_pair<_NUIGridArrangementCell *, std::__1::allocator<_NUIGridArrangementCell> >=^{_NUIGridArrangementCell}}}8
v20@0:4^{vector<_NUIGridArrangementDimension, std::__1::allocator<_NUIGridArrangementDimension> >=^{_NUIGridArrangementDimension}^{_NUIGridArrangementDimension}{__compressed_pair<_NUIGridArrangementDimension *, std::__1::allocator<_NUIGridArrangementDimension> >=^{_NUIGridArrangementDimension}}}8r^{vector<_NUIGridArrangementCell, std::__1::allocator<_NUIGridArrangementCell> >=^{_NUIGridArrangementCell}^{_NUIGridArrangementCell}{__compressed_pair<_NUIGridArrangementCell *, std::__1::allocator<_NUIGridArrangementCell> >=^{_NUIGridArrangementCell}}}12i16
@12@0:4i8
@16@0:4i8i12
v20@0:4^{_NSRange=II}8^{_NSRange=II}12@16
i12@0:4@8
v16@0:4i8@12
v20@0:4@8i12i16
@16@0:4B8@12
@16@0:4B8I12
i16@0:4@8i12
{_NUIGridArrangement="container"@"<_NUIGridArrangementContainer>""baselineRelative"B"horzDist"i"vertDist"i"cells"{vector<_NUIGridArrangementCell, std::__1::allocator<_NUIGridArrangementCell> >="__begin_"^{_NUIGridArrangementCell}"__end_"^{_NUIGridArrangementCell}"__end_cap_"{__compressed_pair<_NUIGridArrangementCell *, std::__1::allocator<_NUIGridArrangementCell> >="__first_"^{_NUIGridArrangementCell}}}"columns"{vector<_NUIGridArrangementDimension, std::__1::allocator<_NUIGridArrangementDimension> >="__begin_"^{_NUIGridArrangementDimension}"__end_"^{_NUIGridArrangementDimension}"__end_cap_"{__compressed_pair<_NUIGridArrangementDimension *, std::__1::allocator<_NUIGridArrangementDimension> >="__first_"^{_NUIGridArrangementDimension}}}"rows"{vector<_NUIGridArrangementDimension, std::__1::allocator<_NUIGridArrangementDimension> >="__begin_"^{_NUIGridArrangementDimension}"__end_"^{_NUIGridArrangementDimension}"__end_cap_"{__compressed_pair<_NUIGridArrangementDimension *, std::__1::allocator<_NUIGridArrangementDimension> >="__first_"^{_NUIGridArrangementDimension}}}"viewFrames"{vector<CGRect, std::__1::allocator<CGRect> >="__begin_"^{CGRect}"__end_"^{CGRect}"__end_cap_"{__compressed_pair<CGRect *, std::__1::allocator<CGRect> >="__first_"^{CGRect}}}}
{CGSize="width"f"height"f}
{unordered_map<UIView *, const std::__1::pair<_NSRange, _NSRange>, std::__1::hash<UIView *>, std::__1::equal_to<UIView *>, std::__1::allocator<std::__1::pair<UIView *const, const std::__1::pair<_NSRange, _NSRange> > > >="__table_"{__hash_table<std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, std::__1::__unordered_map_hasher<UIView *, std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, std::__1::hash<UIView *>, true>, std::__1::__unordered_map_equal<UIView *, std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, std::__1::equal_to<UIView *>, true>, std::__1::allocator<std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, void *> *> *> >="__first_"L}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<UIView *, std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, std::__1::hash<UIView *>, true> >="__first_"L}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<UIView *, std::__1::__hash_value_type<UIView *, const std::__1::pair<_NSRange, _NSRange> >, std::__1::equal_to<UIView *>, true> >="__first_"f}}}
{unordered_map<unsigned int, const std::__1::pair<UIView *, UIView *>, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, const std::__1::pair<UIView *, UIView *> > > >="__table_"{__hash_table<std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> > > >="__bucket_list_"{unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, void *> *> *> > >="__ptr_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, void *> *> *> > >="__first_"^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, void *> *>}"__second_"{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, void *> *> *> >="__data_"{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, void *> *> *> >="__first_"L}}}}"__p1_"{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, void *> > >="__first_"{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, void *> *>="__next_"^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, void *> *>}}}"__p2_"{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, std::__1::hash<unsigned int>, true> >="__first_"L}"__p3_"{__compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, const std::__1::pair<UIView *, UIView *> >, std::__1::equal_to<unsigned int>, true> >="__first_"f}}}
{vector<_NUIGridViewDimensionConfiguration, std::__1::allocator<_NUIGridViewDimensionConfiguration> >="__begin_"^{_NUIGridViewDimensionConfiguration}"__end_"^{_NUIGridViewDimensionConfiguration}"__end_cap_"{__compressed_pair<_NUIGridViewDimensionConfiguration *, std::__1::allocator<_NUIGridViewDimensionConfiguration> >="__first_"^{_NUIGridViewDimensionConfiguration}}}
{?="inInsertOrRemove"b1"pendingUpdate"b1"delegateMinSpacing"b1"delegateMinDirectionalSpacing"b1"delegateHorizontalAlignment"b1"delegateVerticalAlignment"b1}
v16@0:4i8B12
B12@0:4i8
v16@0:4i8i12
i12@0:4I8
v16@0:4f8i12
v12@0:4#8
{CGSize=ff}20@0:4{CGSize=ff}8B16
{vector<float, std::__1::allocator<float> >="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::__1::allocator<float> >="__first_"^f}}
{?="delegateMinSpacing"b1"delegateMinDirectionalSpacing"b1"delegateAlignment"b1}
v16@0:4f8@12
f12@0:4@8
v12@0:4^{vector<_NUIBoxArrangementCell, std::__1::allocator<_NUIBoxArrangementCell> >=^{_NUIBoxArrangementCell}^{_NUIBoxArrangementCell}{__compressed_pair<_NUIBoxArrangementCell *, std::__1::allocator<_NUIBoxArrangementCell> >=^{_NUIBoxArrangementCell}}}8
@16@0:4@8@12
v28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8@?24
{_NUIBoxArrangement="container"@"<_NUIBoxArrangementContainer>""baselineRelative"B"horzDist"i"vertDist"i"cells"{vector<_NUIBoxArrangementCell, std::__1::allocator<_NUIBoxArrangementCell> >="__begin_"^{_NUIBoxArrangementCell}"__end_"^{_NUIBoxArrangementCell}"__end_cap_"{__compressed_pair<_NUIBoxArrangementCell *, std::__1::allocator<_NUIBoxArrangementCell> >="__first_"^{_NUIBoxArrangementCell}}}"viewFrames"{vector<CGRect, std::__1::allocator<CGRect> >="__begin_"^{CGRect}"__end_"^{CGRect}"__end_cap_"{__compressed_pair<CGRect *, std::__1::allocator<CGRect> >="__first_"^{CGRect}}}}
@"<NUIArrangementContainer>"
@"<NUIBoxArrangementDataSource>"
{?="delegateHorizontal"b1"delegateVertical"b1}
{CGSize=ff}24@0:4@8{CGSize=ff}12@20
{CGRect={CGPoint=ff}{CGSize=ff}}32@0:4@8@12{CGRect={CGPoint=ff}{CGSize=ff}}16
v24@0:4@8{CGSize=ff}12i20
v12@0:4@"NUIContainerView"8
{CGSize=ff}24@0:4@"NUIContainerView"8{CGSize=ff}12@"UIView"20
{CGRect={CGPoint=ff}{CGSize=ff}}32@0:4@"NUIContainerView"8@"UIView"12{CGRect={CGPoint=ff}{CGSize=ff}}16
v24@0:4@"NUIContainerView"8{CGSize=ff}12i20
{UIEdgeInsets=ffff}16@0:4@8@12
{NSDirectionalEdgeInsets=ffff}16@0:4@8@12
i16@0:4@8@12
{UIEdgeInsets=ffff}16@0:4@"NUIContainerStackView"8@"UIView"12
{NSDirectionalEdgeInsets=ffff}16@0:4@"NUIContainerStackView"8@"UIView"12
i16@0:4@"NUIContainerStackView"8@"UIView"12
@20@0:4@8@12I16
{?=ff}8@0:4
{?=ff}12@0:4B8
@20@0:4@"NUIWidgetGridView"8@"<NUIWidgetGridViewItem>"12I16
{?="leading"f"trailing"f}
@"NUIWidgetGridView"
{?="determiningPreferredMaxLayoutWidth"b1"inSecondConstraintsPass"b1}
@"UIView"
{?=ff}12@0:4I8
@"NUIContainerGridView"
[8{CGSize="width"f"height"f}]
@"<NUIWidgetGridViewDataSource>"
@"<NUIWidgetGridViewDelegate>"
B24@0:4^{CGSize=ff}8@12{CGSize=ff}16
v24@0:4{CGSize=ff}8{CGSize=ff}16
v44@0:4{_NSRange=II}8{_NSRange=II}16{CGRect={CGPoint=ff}{CGSize=ff}}24@?40
{CGRect={CGPoint=ff}{CGSize=ff}}40@0:4{_NSRange=II}8{_NSRange=II}16{CGRect={CGPoint=ff}{CGSize=ff}}24
@"<NUIGridArrangementDataSource>"
{?="delegateWidth"b1"delegateHeight"b1}
containerViewInfoKey
v4@?0
allowsBaselineOffsetApproximation is deprecated, value will be ignored.
<%@ %p size cache:
%@ : %@
customAlignmentRectInsets
T{UIEdgeInsets=ffff},N
baselineRelativeAlignmentRectInsets
TB,N,GisBaselineRelativeAlignmentRectInsets
allowsBaselineOffsetApproximation
TB,N
customBaselineOffsetFromBottom
Tf,N
customFirstBaselineOffsetFromContentTop
invalidatingIntrinsicContentSizeAlsoInvalidatesSuperview
Invalid edge %lu
neverCacheContentLayoutSize
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
measureCells
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI-17.1/AppSupportUI/_NUIGridArrangement.mm
columns.size() == count.width
rows.size() == count.height
v12@?0^{_NUIGridArrangementCell=ii{?=ff}@{_NSRange=II}{_NSRange=II}{CGSize=ff}{CGSize=ff}}4I8
v24@?0@"<NUIArrangementItem>"4{CGRect={CGPoint=ff}{CGSize=ff}}8
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
com.apple.AppSupportUI-measure
v8@?0L4
NUICONTAINER_BOUNDING_BOXES
NUICONTAINER_ASYNC_MEASURE
UIStackViewArrangedSubviews
UIStackViewBaselineRelative
UIStackViewLayoutMarginsRelative
View is represented %lu times: %@
B12@?0@"UIView"4@"NSDictionary"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI-17.1/AppSupportUI/NUIContainerView.mm
<Unknown File>
Mismatching visible arranged subviews count
Invalid parameter not satisfying: %@
view != nil
hidden
stackIndex <= _arrangedSubviews.count
newView != nil
index < _arrangedSubviews.count
 %@>
asynchronousMeasurement
Ti,N,V_asynchronousMeasurement
arrangedSubviews
T@"NSArray",C,N
visibleArrangedSubviews
T@"NSArray",R,N
delegate
T@"<NUIContainerViewDelegate>",W,N
baselineRelativeArrangement
TB,N,GisBaselineRelativeArrangement,V_baselineRelativeArrangement
layoutMarginsRelativeArrangement
TB,N,GisLayoutMarginsRelativeArrangement,V_layoutMarginsRelativeArrangement
-[%@ %@] not implemented.
arrangedSubviews = %lu[%lu];
 layoutMarginsRelative = {%f, %f, %f, %f};
 baselineRelative = YES;
%@ called while in a layout or measurement pass.
WARNING: %@
ERROR: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI-17.1/AppSupportUI/NUIContainerGridView.mm
Use -[%@ initWithArrangedSubviewRows:] or -[%@ init]
Views managed by grid missing from arranged subviews: %@
Arranged subviews not being managed by grid: %@
index < self.numberOfRows
index < self.numberOfColumns
column < self.numberOfColumns
row < self.numberOfRows
colRangeOut != NULL || rowRangeOut != NULL
findView != nil
row <= self.numberOfRows
arrangedViews.count > 0
numberOfColumns == 0 || numberOfColumns == arrangedViews.count
column <= self.numberOfColumns
numberOfRows == 0 || numberOfRows == arrangedViews.count
v16@?0@"NSMutableArray"4I8^B12
row < self.numberOfColumns
v8@?0r^{_NUIGridArrangementCell=ii{?=ff}@{_NSRange=II}{_NSRange=II}{CGSize=ff}{CGSize=ff}}4
%@ size = {%ld, %ld} cells = 
[%@:%@]
(%@|%@)
-[%1$@ insertArrangedSubview:atIndex:] not supported, use -[%1$@ insert{Row|Column}AtIndex:withArrangedSubviews:] to insert arranged subviews.
-[%1$@ removeArrangedSubview:] not supported, use -[%1$@ remove{Row|Column}AtIndex:] to remove arranged subviews.
v16@?0@"UIView"4I8^B12
T@"<NUIContainerGridViewDelegate>",W,D,N
numberOfRows
Ti,R,N
numberOfColumns
horizontalAlignment
Ti,N,V_horizontalAlignment
verticalAlignment
Ti,N,V_verticalAlignment
horizontalDistribution
Ti,N
verticalDistribution
rowSpacing
columnSpacing
rowHeight
Tf,N,V_rowHeight
columnWidth
Tf,N,V_columnWidth
%lu-%lu
Fill
Top/Lead
Center
Bottom/Trail
Unknown(%ld)
UIStackViewAxis
UIStackViewDistribution
UIStackViewAlignment
UIStackViewSpacing
%@ axis = %@: distribution = %@; alignments = 
Horz
Vert
[%@]
T@"<NUIContainerStackViewDelegate>",W,D,N
axis
Ti,N,V_axis
effectiveAxis
Ti,R,N,V_effectiveAxis
distribution
Ti,N,V_distribution
alignment
Ti,N,V_alignment
spacing
Tf,N,V_spacing
spacingViewClass
T#,&,N,V_spacingViewClass
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI-17.1/AppSupportUI/NUIContainerStackView.mm
index < self.arrangedSubviews.count
FillEqual
FillProp
EqualSpacing
EqualCentering
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI-17.1/AppSupportUI/NUIBoxArrangement.mm
container != nil
dataSource != nil
container
T@"<NUIArrangementContainer>",R,W,N
dataSource
T@"<NUIBoxArrangementDataSource>",R,W,N
TB,N,GisBaselineRelativeArrangement
v12@?0^{_NUIBoxArrangementCell=ii{?=ff}@{CGSize=ff}{CGSize=ff}}4I8
%@ alignments = 
[%@|%@]
T@"<NUIContainerBoxViewDelegate>",W,D,N
_defaultAttributes
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI-17.1/AppSupportUI/NUIWidgetGridViewCell.m
Unknown title style.
NUIWidgetGridView - Layout item %d entitled:%@ borrowable:%@ fitting:%@ final:%@
index
TI,R,N
gridView
T@"NUIWidgetGridView",R,W,N,V_gridView
imageView
T@"UIImageView",R,N
titleLabel
T@"UILabel",R,N
subtitleLabel
{ %f, %f }
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI-17.1/AppSupportUI/NUIContentScrollView.m
NSCoding not supported
Invalid horizintal alignment %ld.
contentView
T@"UIView",&,N,V_contentView
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI-17.1/AppSupportUI/NUIWidgetGridView.m
no layout type set
Trying to do layout for items, when none exist.
currentLabelOutset
Tf,R,N,V_currentLabelOutset
T@"<NUIWidgetGridViewDataSource>",W,N,V_dataSource
T@"<NUIWidgetGridViewDelegate>",W,N,V_delegate
imageStyle
Ti,N,V_imageStyle
titleStyle
Ti,N,V_titleStyle
subtitleStyle
Ti,N,V_subtitleStyle
centerAdjustmentAllowed
Tf,N,V_centerAdjustmentAllowed
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AppSupportUI_Sim/AppSupportUI-17.1/AppSupportUI/NUIGridArrangement.mm
T@"<NUIGridArrangementDataSource>",R,W,N
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
