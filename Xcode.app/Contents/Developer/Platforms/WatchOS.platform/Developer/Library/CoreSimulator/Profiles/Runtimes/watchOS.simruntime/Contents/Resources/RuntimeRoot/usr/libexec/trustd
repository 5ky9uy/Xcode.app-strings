WAIT4DEBUGGER
SecCritical
com.apple.trustd
update-current
v8@?0r*4
update-full
update-full.gz
v8@?0^v4
v4@?0
serverxpc
anchorsOnly
keychainsAllowed
certificates
anchors
policies
responses
scts
trustedLogs
verifyDate
exceptions
result
details
info
chain
v24@?0I4^{__CFArray=}8^{__CFDictionary=}12^{__CFArray=}16^{__CFError=}20
SecWarning
SecError
Messages expect to be xpc dictionary, got: %@
{%string: %value}
no certs for key %s
xpc_array_create failed
v8@?0r^v4
modify-anchor-certificates
object for key %s failed to create certificate from data
object for key %s missing
escrowType
%@: %@ lacks entitlement %@
application-identifier
keychain-access-groups
com.apple.security.application-groups
logging
com.apple.securityd
Unknown data encoding, expected CCDER_CONSTRUCTED_SET
Failed to create dictionary
Unknown data encoding, expected CCDER_CONSTRUCTED_SEQUENCE
debug
%@%@
v12@?0L4*8
ZuluCalendar
Failed to create date
Not a decimal digit
Unexpected end of datetime
trailing garbage at end of datetime
fraction ends in 0
fraction without digits
Invalid datetime character
Invalid date.
yMdHms
Failed to encode date.
Library/Keychains
Library/Caches
/Library/Keychains/crls/%@
%@/%@
com.apple.utilities.sqlite3
%@: [%d]%@ %s
%@: [%d->%d]%@ %s
%@: [%d] %s sql: %s
%@: [%d->%d] %s sql: %s
SecDb
%@-commit
__OSINSTALL_ENVIRONMENT
#SecDB
file::memory:?cache=shared
Error with unexecuted sql remaining %@
SecDbStep SQLITE_ROW returned without a row handler
dbconn
B8@?0^{__OpaqueSecDbConnection={__CFRuntimeBase=IAI}^{__OpaqueSecDb}BBIBiB^{__CFError}^{sqlite3}^{__CFArray}}4
failed to get a db handle
bind_blob[%d]: blob bigger than INT_MAX
bind_blob[%d]
bind
bind_text[%d]: text bigger than INT_MAX
bind_text[%d]
bind_double[%d]
bind_int[%d]
bind_int64[%d]
v12@?0r*4L8
reset
finalize: %p
prepare_v2: sql bigger than INT_MAX
preparev2
prepare_v2: %@ unused sql: %@
SecDbWithSQL perform block missing
SecDbConnection
<SecDb path:%@ connections: %@>
step
BEGIN IMMEDIATE
BEGIN EXCLUSIVE
BEGIN
invalid transaction type %d
ROLLBACK
SQL DB %@ is corrupted already. Corruption error was: %d (previously %d)
/Library/Keychains/keychain-2.db
/Library/Keychains/ocspcache.sqlite3
/Library/Keychains/TrustStore.sqlite3
/Library/Keychains/caissuercache.sqlite3
PRAGMA integrity_check
NULL
v8@?0^{sqlite3_stmt=}4
mkpath_np %s: [%d] %s
open_v2 "%s" 0x%X
SQLProfile
unknown
busy_handler
SecDbHandleCorrupt handled error: [%d] %s
%s-corrupt
persist wal
replace database
close
rename %s %s
unlink %s
file_control
<SecDbConnection %s %s>
open
closed
com.apple.security.cfder.error
Unknown number encoding
Number too large
Number allocation failed
%@: [%d] %s
Unsupported DER Type
Null CFType
Unsupported CFType
Unknown string encoding
String allocation failed
String extraction failed
Unknown boolean encoding
Unknown data encoding
Failed to create data
Unknown null encoding
Unknown data encoding, expected CCDER_CONSTRUCTED_CFSET
Failed to create set
com.apple.security.xpc
code
userinfo
POST
:/?#[]@!$&'()*+,;=
Content-Type
application/ocsp-request
com.apple.trustd/1.0
cache-control
max-age
SecOTAPKI
SIMULATOR_ROOT
%s%@
Unable to get the current OTAPKIRef
Could not get escrow certificates from the current OTAPKIRef
<SecOTAPKIRef: version %d>
/System/Library/Security/Certificates.bundle
com.apple.security.OTAPKIQueue
AssetVersion
VersionNumber
%s%s
%s/%s%d
/var/Keychains/Assets
Version_
Blocked
%s/%@.%@
plist
GrayListedKeys
TrustedCTLogs
CertificatePinning
ValidUpdate
Version
Format
could not get valid snapshot
sqlite3
valid
AppleESCertificates
%s/AppleESCertificates.plist
ProductionEscrowKey
ProductionPCSEscrowKey
EVRoots
%s/certsIndex.data
%s/certsTable.data
certsIndex
certsTable
caissuercache.sqlite3
caissuercache
CREATE TABLE issuers(uri BLOB PRIMARY KEY,expires DOUBLE NOT NULL,certificate BLOB NOT NULL);CREATE INDEX iexpires ON issuers(expires);
caissuer
SecCertificateVC
SecCertificatePathVC
v12@?0^{__SecCertificate=}4^B8
<%@ certs: 
async
v8@?0^{__SecOCSPCache=^{__OpaqueSecDb}}4
ocspcache.sqlite3
B24@?0^{__OpaqueSecDb=}4^{__OpaqueSecDbConnection=}8B12^B16^^{__CFError}20
PRAGMA auto_vacuum = FULL
PRAGMA journal_mode = WAL
SELECT DISTINCT hashAlgorithm FROM ocsp WHERE serialNum=?
CREATE TABLE ocsp(issuerNameHash BLOB NOT NULL,issuerPubKeyHash BLOB NOT NULL,serialNum BLOB NOT NULL,hashAlgorithm BLOB NOT NULL,responseId INTEGER NOT NULL);CREATE INDEX iResponseId ON ocsp(responseId);CREATE INDEX iserialNum ON ocsp(serialNum);CREATE INDEX iSNumDAlg ON ocsp(serialNum,hashAlgorithm);CREATE TABLE responses(responseId INTEGER PRIMARY KEY,ocspResponse BLOB NOT NULL,responderURI BLOB,expires DOUBLE NOT NULL,lastUsed DOUBLE NOT NULL);CREATE INDEX iexpires ON responses(expires);CREATE TRIGGER tocspdel BEFORE DELETE ON responses FOR EACH ROW BEGIN DELETE FROM ocsp WHERE responseId=OLD.responseId; END;
v8@?0^B4
Create
Open
DELETE FROM responses WHERE responseId=?
B8@?0^{sqlite3_stmt=}4
INSERT INTO responses (ocspResponse,responderURI,expires,lastUsed) VALUES (?,?,?,?)
INSERT INTO ocsp (hashAlgorithm,issuerNameHash,issuerPubKeyHash,serialNum,responseId) VALUES (?,?,?,?,?)
v8@?0^{__OpaqueSecDbConnection=}4
VACUUM
DELETE FROM responses WHERE expires<?
SELECT ocspResponse,responseId FROM responses WHERE lastUsed>? AND responseId=(SELECT responseId FROM ocsp WHERE issuerNameHash=? AND issuerPubKeyHash=? AND serialNum=? AND hashAlgorithm=?) ORDER BY expires DESC
DELETE FROM responses
ValidUpdateEvent
timestamp
event
updateCanceled
downloadCanceled
download
updateStarted
updateFinished
downloadStarted
com.apple.trustd.valid.download
downloadFinished
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
handler
T@?,C,V_handler
revDbUpdateQueue
T@"NSObject<OS_dispatch_queue>",&,V_revDbUpdateQueue
transaction
T@"NSObject<OS_os_transaction>",&,V_transaction
currentUpdateFile
T@"NSFileHandle",&,V_currentUpdateFile
currentUpdateFileURL
T@"NSURL",&,V_currentUpdateFileURL
finishedDownloading
TB,V_finishedDownloading
com.apple.trustd.networking.background
User-Agent
com.apple.trustd/2.0
Accept
Accept-Encoding
gzip,deflate,br
https://%@/g3/v%ld
downloadScheduled
updateScheduled
Td,V_updateScheduled
backgroundSession
T@"NSURLSession",&,V_backgroundSession
ValidUpdateWiFiOnly
ValidUpdateBackground
ocsp
nextUpdate
thisUpdate + defaultTTL
policyName
domains
rules
suffix
labelRegex
PinningHostname
PinningPolicyName
PinningRules
com.apple.MobileAsset.CertificatePinning
PRAGMA user_version
PRAGMA user_version = %llu
SELECT ival FROM admin WHERE key='version'
INSERT OR REPLACE INTO admin (key,ival,value) VALUES (?,?,?)
pinningDb
INSERT OR REPLACE INTO rules (policyName,domainSuffix,labelRegex,policies) VALUES (?,?,?,?) 
v16@?0@4I8^B12
DELETE FROM rules;
CREATE TABLE IF NOT EXISTS admin(key TEXT PRIMARY KEY NOT NULL,ival INTEGER NOT NULL,value BLOB);
CREATE TABLE IF NOT EXISTS rules(policyName TEXT NOT NULL,domainSuffix TEXT NOT NULL,labelRegex TEXT NOT NULL,policies BLOB NOT NULL,UNIQUE(policyName, domainSuffix, labelRegex));
CREATE INDEX IF NOT EXISTS idomain ON rules(domainSuffix);
CREATE INDEX IF NOT EXISTS ipolicy ON rules(policyName);
CertificatePinning.plist
_ContentVersion
v8@?0i4
com.apple.MobileAsset.CertificatePinning.cached-metadata-updated
pinningrules.sqlite3
Pinning DB Queue
com.apple.security
AppleServerAuthenticationNoPinning
pinningQA
IdMS
AppleServerAuthenticationNoPinningIdMS
pinning logging charles
SELECT DISTINCT labelRegex,policyName,policies FROM rules WHERE domainSuffix=?
sslServer
SELECT DISTINCT policies FROM rules WHERE policyName=?
T^{__OpaqueSecDb=},V_db
queue
T@"NSObject<OS_dispatch_queue>",&,V_queue
dbPath
T@"NSURL",&,V_dbPath
CheckLeafMarkerOid
CheckLeafMarkersProdAndQA
CheckIntermediateMarkerOid
CheckIntermediateCountry
CheckIntermediateOrganization
policy
leaf
custom
force
kSecTrustSettingsResult
AppleServerAuthenticationAllowUATIdMS
kSecTrustSettingsPolicyOptions
kSecTrustSettingsAllowedError
WeakKeySize
BlackListedLeaf
BlackListedKey
UsageConstraints
Revocation
kSecTrustSettingsPolicy
kSecTrustSettingsPolicyName
kSecTrustSettingsPolicyString
kSecTrustSettingsKeyUsage
kSecTrustSettingsApplication
expiry
v12@?0r^v4r^v8
v8@?0^{__CFCalendar=}4
B8@?0r^v4
validupdate
/Library/Keychains/crls
-journal
-shm
-wal
update_check
1.2.840.113635.100.6.2.10
1.2.840.113635.100.6.51
v8@?0^{__SecRevocationDb=^{__OpaqueSecDb}^{dispatch_queue_s}BB}4
com.apple.trustd.valid
check-again
ValidUpdateServer
valid.apple.com
%s/%s
.valid_replace
1.2.11
ValidUpdateEnabled
ValidUpdateInterval
valid.sqlite3
SELECT DISTINCT groupid FROM issuers WHERE issuer_hash=?
CREATE TABLE admin(key TEXT PRIMARY KEY NOT NULL,ival INTEGER NOT NULL,value BLOB);CREATE TABLE issuers(groupid INTEGER NOT NULL,issuer_hash BLOB PRIMARY KEY NOT NULL);CREATE INDEX issuer_idx ON issuers(issuer_hash);CREATE TABLE groups(groupid INTEGER PRIMARY KEY AUTOINCREMENT,flags INTEGER,format INTEGER,data BLOB);CREATE TABLE serials(rowid INTEGER PRIMARY KEY AUTOINCREMENT,groupid INTEGER NOT NULL,serial BLOB NOT NULL,UNIQUE(groupid,serial));CREATE TABLE hashes(rowid INTEGER PRIMARY KEY AUTOINCREMENT,groupid INTEGER NOT NULL,sha256 BLOB NOT NULL,UNIQUE(groupid,sha256));CREATE TRIGGER group_del BEFORE DELETE ON groups FOR EACH ROW BEGIN DELETE FROM serials WHERE groupid=OLD.groupid; DELETE FROM hashes WHERE groupid=OLD.groupid; DELETE FROM issuers WHERE groupid=OLD.groupid; END;
full
DELETE FROM groups WHERE groupid=?
issuer-hash
format
serial
sha256
nto1
INSERT OR REPLACE INTO groups (groupid,flags,format,data) VALUES (?,?,?,?)
complete
check-ocsp
known-intermediates-only
require-ct
no-ca
SELECT flags,format,data FROM groups WHERE groupid=?
params
INSERT OR REPLACE INTO issuers (groupid,issuer_hash) VALUES (?,?)
INSERT OR REPLACE INTO serials (groupid,serial) VALUES (?,?)
INSERT OR REPLACE INTO hashes (groupid,sha256) VALUES (?,?)
db_version
db_format
db_source
SELECT value FROM admin WHERE key='db_source'
check_again
SELECT value FROM admin WHERE key='check_again'
DROP TABLE hashes; DROP TABLE serials; DROP TABLE issuers; DROP TABLE groups; DROP TABLE admin; DELETE from sqlite_sequence
SELECT rowid FROM serials WHERE groupid=? AND serial=?
SELECT rowid FROM hashes WHERE groupid=? AND sha256=?
SELECT ival FROM admin WHERE key='db_version'
SELECT ival FROM admin WHERE key='db_format'
1.3.6.1.5.5.7.48.1.5
v8@?0I4
https
OCSPSigner
http
v12@?0^{OpaqueSecPVC=^{SecPathBuilder}^{__CFArray}^{__CFDictionary}iB^{__CFArray}I^{__CFArray}I}4^B8
trust
builder
 source
reject
non 
accept
user
unknown domain: %@
truststore is NULL
truststore is readOnly
get normalized subject failed
get sha1 digest failed
CFArrayCreate failed
trustSettingsDictOrArray neither dict nor array
xml encode failed
BEGIN EXCLUSIVE TRANSACTION
sqlite3 error: %d
COMMIT TRANSACTION
ROLLBACK TRANSACTION
ts is NULL
trustStoreContents is NULL
sqlite3_step failed
TrustStore.sqlite3
truststore
CREATE TABLE tsettings(sha1 BLOB NOT NULL DEFAULT '',subj BLOB NOT NULL DEFAULT '',tset BLOB,data BLOB,PRIMARY KEY(sha1));CREATE INDEX isubj ON tsettings(subj);
sqlite3_bind_blob failed
operation
status
error
domain
digest
cert
settings
path
data
version
AccountSetToNew
OTAGetEscrowCertificates
OTAPKIGetNewAsset
AcceptApplicants
ApplyToARing
BailFromCircle
CanAuthenticate
CopyApplicantPeerInfo
CopyConcurringPeerPeerInfo
CopyEngineState
CopyGenerationPeerInfo
CopyIncompatibilityInfo
CopyMyPeerInfo
CopyNotValidPeerPeerInfo
CopyPeerPeerInfo
CopyRetirementPeerInfo
CopyValidPeerPeerInfo
CopyViewUnawarePeerInfo
DeviceInCircle
EnableRing
GetAllTheRings
GetLastDepartureReason
HandleIDSMessage
SyncKVSPeer
SyncIDSPeer
IDSDeviceID
kSecXPCOpClearKVSPeerMessage
LoggedOutOfAccount
PingTest
ProcessSyncWithAllPeers
ProcessSyncWithPeers
ProcessUnlockNotification
PurgeUserCredentials
RejectApplicants
RemoveThisDeviceFromCircle
RemovePeersFromCircle
RequestDeviceID
RequestEnsureFreshParameters
RequestToJoin
RequestToJoinAfterRestore
ResetToEmpty
ResetToOffering
RingStatus
RollKeys
SecurityProperty
SendIDSMessage
SetBagForAllSlices
SetDeviceID
SetLastDepartureReason
SetNewPublicBackupKey
SetUserCredentials
SetUserCredentialsAndDSID
TryUserCredentials
ValidateUserPublic
View
WithdrawlFromARing
add_shared_web_credential
copy_shared_web_credential
delete_all
get_log_settings
backup_copy_names
backup_handoff_fd
backup_restore
backup_set_confirmed_manifest
copy_matching
delete
update
keychain_backup
keychain_backup_syncable
keychain_restore
keychain_restore_syncable
keychain_sync_update_message
ota_pki_asset_version
otr_session_create_remote
otr_session_process_packet_remote
set_circle_log_settings
set_xpc_log_settings
trust_evaluate
trust_store_contains
trust_store_remove_certificate
trust_store_set_trust_settings
trust_store_copy_all
trust_store_copy_usage_constraints
ocsp_cache_flush
EnsurePeerRegistration
SetEscrowRecord
GetEscrowRecord
WhoAmI
TransmogrifyToSyncBubble
WrapToBackupSliceKeyBagForView
CopyAccountDataFromKeychain
DeleteAccountDataFromKeychain
CopyEngineDataFromKeychain
DeleteEngineDataFromKeychain
UpdateTokenItems
sec_delete_items_with_access_groups_id
kSecXPCOpPeersHaveViewsEnabled
RegisterRecoveryPublicKey
GetRecoveryPublicKey
CopyBackupInformation
MessageFromPeerIsPending
SendToPeerIsPending
copy_parent_certificates
certificate_exists
KeybagAdd
KeybagDelete
KeychainControlEndpoint
Unknown xpc operation
object for key %s is NULL
object for key %s not array but %@
no data for key %s
failed to create data for key %s
no object for key %s
trailing garbage after der decoded object for key %s
object for key %s failed to convert %s to CFString
object for key %s not string
data_array xpc value is not an array
failed to create CFArray of capacity %zu
data_array[%zu] failed to decode
SIGSTOPing self, awaiting debugger
Again, for good luck (or bad debuggers)
security failed to register xpc listener for %s, exiting
XPC [%@] operation: %@ (%llu)
Authentication is needed %@ %@ %@
%@ %@ %@
%@: returning error: %@
No keychain access group specified while running in simulator, falling back to default set
Could not set up sqlite global error logging to syslog: %d
SecDB: running from installer
#SecDB nested transaction asked to not be committed
acquire %s connection
Unable to create database: %@
got NULL dbconn at index: %ld skipping
called with NULL dbconn
release %@
bind_blob[%d]: %.*s: %@
bind_text[%d]: "%s" error: %@
bind_double[%d]: %f error: %@
bind_int[%d]: %d error: %@
bind_int64[%d]: %lld error: %@
SecDbConnectionCheckCode detected corruption twice: going to handle corrupt DB
operation returned code: %d integrity check=fail
operation returned code: %d: integrity check=pass
SecDBCheckCorrupted integrity_check returned %s
#SecDB warning error %{public}@ when running integrity check
#SecDB warning: failed to run integrity check due to corruption
SecDBCheckCorrupted ran integrity_check, and that didn't return ok
SecDBCheckCorrupted failed to run integrity check
sqlDb: sql trace mask: 0x%08x
#SecDB %{public}s
opened block failed: %@
opened block failed: error (%@) is being released and lost
#SecDB starting maintenance
Tried to rename corrupt database at path %@, but we failed: %@, trying explicit rename
Database at path %@ is corrupt. Copied it to %s for further investigation.
Tried to copy corrupt database at path %@, but we failed: %@
#SecDB Failed to delete db handle: %{public}@
sqlite busy/locked: %d ntries: %d totaltimeout: %d
sqlite busy/locked: too long: %d ms, giving up
Simulating crash, reason: %@, code=%08x
SimulateCrash not available in iOS simulator
Timeout during %@ %@.
Avoiding crash due to CFReadStream invoking us after we called CFReadStreamSetDispatchQueue(stream, NULL) on a different block on our serial queue
CFReadStream posix: %s
CFReadStream osstatus: %ld
CFReadStream domain: %ld error: %ld
handle_server_response unexpected event type: %lu
can't parse general name or not a type we support
read: %ld
resource: %@.%@ in %@ not found
file %@: %@
read plist from %@: %@
%s path
%s path as UTF8 string
EVRoot.plist is wrong type.
could not find certsIndex
could not find certsTable
caissuer db CREATE TABLES: %s
caissuer cache add failed: %s
caissuer cache lookup failed: %s
caissuer cache expire failed: %s
too many caIssuer entries (%ld)
skipping unsupported uri %@
policy tree failure on cert %u
policy mapping anyPolicy failure %u
policy tree failure on leaf
Leaf has invalid basic constraints
Leaf has invalid key usage %u
Leaf's public key is too small for issuance before 2014
Leaf's public key is too small for issuance after 2013
Leaf's validity period is more than 60 months
Leaf has validity period longer than 39 months and issued after 30 June 2016
Leaf was issued with SHA-1 after 2015
skipping CAIssuer fetch for expired %@
%s failed: %@
_SecOCSPCacheAddResponse failed: %@
_SecOCSPCacheAddResponse VACUUM failed: %@
ocsp cache lookup failed: %@
%s canceled at %f
update started at %f
failed to read %@ with error %d
unable to unmap current update %ld bytes at %p (error %d)
update finished at %f
Session %@ data task %@ returned response %ld, expecting %lld bytes
failed to find revocation info directory. canceling task %@
unable to open %@ (errno %d)
download started at %f
failed to open %@: %@. canceling task %@
received data, but output file is not open
Session %@ task %@ failed with error %@
download finished at %f
invalid update request
missing update queue, skipping update
postponing update until %f
scheduling update at %f
invalid update url
removing all old sessions for trustd
scheduled background data task %@ at %f
OCSPResponse: producedAt more than 1:15 from now
OCSPResponse: thisUpdate more than 1:15 from now
OCSPResponse: nextUpdate not present
OCSPResponse: latestNextUpdate more than 1:15 ago
OCSPResponse: decode failure at top level
OCSPResponse: no responseStatus
OCSPResponse: empty responseBytes
OCSPResponse: unknown responseType
OCSPResponse: decode failure at SecAsn1OCSPBasicResponse
OCSPResponse: decode failure at SecAsn1OCSPResponseData
OCSPResponse: bad producedAt
OCSPResponse: bad responderID
OCSPResponse: bad responderID tag
OCSPResponse: decode failure at responderID
OCSPSingleResponse: thisUpdate more than 1:15 from now
OCSPSingleResponse: %s %.2f days ago
Unknown hash algorithm in singleResponse
ocsp response cert failed to parse
OCSPSingleResponse: bad certStatus
OCSPSingleResponse: err decoding certStatus
OCSPResponse: bad thisUpdate DER
OCSPResponse: bad nextUpdate DER
OCSPResponse: single response has extension(s).
OCSPResponse: single response has an SCT extension.
OCSPResponse: single response has an SCT extension, parsed = %p.
SecPinningDb: failed to create admin table: %@
SecPinningDb: failed to set version %@ from pinning list: %@
Pinning database should update from version %@ to version %@
SecPinningDb: error reading content version from database %@
SecPinningDb: failed to serialize policies
SecPinningDb: failed to insert rule %@ for %@.%@ with error %@
SecPinningDb: rule entry in pinning plist is wrong class
SecPinningDb: failed to get required fields from rule entry %lu
SecPinningDb: domain entry %lu for %@ in pinning rule is wrong class
SecPinningDb: failed to get required fields for entry %lu for %@
SecPinningDb: failed to populate DB from pinning list: %@
SecPinningDb: failed to delete old values: %@
SecPinningDb: failed to create rules table: %@
SecPinningDb: missing url for downloaded asset
SecPinningDb: unable to create pinning list from asset file: %@
SecPinningDb: error installing updated pinning list version %@: %@
begin MobileAsset query for catalog
SecPinningDb: failed to download catalog: %ld
begin MobileAsset metadata sync request
SecPinningDb: failed to query MobileAsset metadata: %ld
SecPinningDb: no results in MobileAsset query
SecPinningDb: unknown asset state %ld
finished db update from installed asset. purging asset.
SecPinningDb: purge failed: %ld
SecPinningDb: pinning asset is unknown
pinning asset is downloading
begin download of CertificatePinning asset
SecPinningDb: failed to download pinning asset: %ld
SecPinningDb: failed to read pinning plist from bundle
Initial check with MobileAsset for newer pinning asset
Got a notification about a new pinning asset.
SecPinningDb: failed to find pinning plist in bundle
SecPinningDb: pinning plist in wrong format
Updating pinning database content from version %@ to version %@
Updating pinning database schema from version %@ to version %@
SecPinningDb: %s failed: %@
%@ disable pinning = %d
could not disable pinning: not an internal release
generic pinning disable = %d
SecPinningDb: error querying DB for hostname: %@
SecPinningDb: error querying DB for policyName: %@
Database Schema: %@ Content: %@
SecPinningDb: unable to initialize db: %@
could not create path: %s (%s)
cert[%d]: %@ =(%s)[%s]> %@
cert[%d]: skipped allowed error %@
cert[%d]: skipped exception error %@
name in excluded subtrees
name not in permitted subtrees
policy: unknown policy key %@, skipping
kSecTrustSettingsApplication is not yet supported on this platform
subordinate certificate is not ev
anchor certificate is not ev
valid_policies set is empty: chain not ev
SubCA missing certificate policies
SubCA missing CRLDP
SubCA has invalid basic constraints
SubCA has invalid key usage %u
SubCA's public key is too small for issuance before 2011 or expiration before 2014
SubCA's public key is too small for issuance after 2010 or expiration after 2013
SubCA was issued with SHA-1 after 2015
anchor not in plist
Anchor issued after October 2006 and is not v3
Anchor has invalid basic constraints
Anchor has invalid key usage %u
Anchor's public key is too weak for EV
SCT version unsupported: %d
SCT is in the future: %llu > %llu
SCT signature failed (log=%@)
unable to map %s (errno %d)
unable to unmap %ld bytes at %p (error %d)
invalid update data
failed to process valid update
failed to verify valid update
remove (%s): %s
initializing database
Skipping property list creation (length %ld is too short)
Skipping property list creation (dataLength=%ld, bytesRemaining=%ld)
Failed to deserialize update chunk %u of %u
unable to write %s
process exiting to replace db file
copyfile error %d
readValidFile error %d
unable to open %s (errno %d)
unable to read and map %s (errno %d)
starting update
_SecRevocationDbApplyUpdate failed: invalid args
_SecRevocationDbSetVersion failed: %@
_SecRevocationDbSetSchemaVersion failed: %@
_SecRevocationDbSetUpdateFormat failed: %@
_SecRevocationDbSetUpdateSource failed: %d
_SecRevocationDbSetUpdateSource failed: unable to get UTF-8 encoding
_SecRevocationDbSetUpdateSource failed: %@
_SecRevocationDbSetNextUpdate failed: %@
error processing filter params at index %ld
BAD certStatus (%d) for cert %ld
responder: %@ returned status: %d
ocsp responder: %@ did not include status of requested cert
ocsp responder: %@ response signed by issuer
ocsp responder: %@ response signed by cert issued by issuer
ocsp response signed by certificate which does not satisfy ocspSigner policy
ocsp responder: %@ no signer found for response
ocsp signer cert not signed by issuer
Sending http ocsp request for cert %ld
too many ocsp responders (%ld)
network access not allowed on WatchOS
network access disabled by policy
completed: %@ details: %@ result: %d
found pinning %lu %@ policies for hostname %@, policyName %@
unrestricted anchor%s
complex trust settings anchor
complex trust settings denied anchor
not building any more paths, already have %ld
replacing %sev %s score: %ld with %sev score: %ld %@
%sev score: %ld %@
%sev score: %ld lower than %ld %@
In ComputeDetails, we got a reject after an accept in DidValidatePath.
CREATE TABLE cert: %s
@(#)PROGRAM:trustd  PROJECT:Security-58286.50.176
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
060425214036Z
350209214036Z0b1
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
, op
https://www.apple.com/appleca/0
Reliance on this certificate by any party assumes acceptance of the then applicable standard terms and conditions of use, certificate policy and certification practice statements.0
=&g 
Sj[d
uu!0
Apple Root CA - G21&0$
Apple Certification Authority1
Apple Inc.1
140430181009Z
390430181009Z0g1
Apple Root CA - G21&0$
Apple Certification Authority1
Apple Inc.1
]>qf
%]'b
!hpg
Mq}Q
uAf"
fe(7
fCP?na
`CK
B0@0
}c7h
!I!9
o?!`
e]>7Gc1
Apple Root CA - G31&0$
Apple Certification Authority1
Apple Inc.1
140430181906Z
390430181906Z0g1
Apple Root CA - G31&0$
Apple Certification Authority1
Apple Inc.1
US0v0
/=@r
*wd{_N8
[O0O
B0@0
Apple Inc.1&0$
Apple Certification Authority1
Test Apple Root CA0
150422021548Z
350209214036Z0g1
Apple Inc.1&0$
Apple Certification Authority1
Test Apple Root CA0
$kzu$
]Ka.
PR#3
PR#3
https://www.apple.com/appleca/0
Reliance on this certificate by any party assumes acceptance of the then applicable standard terms and conditions of use, certificate policy and certification practice statements.0
Sq)f
M U)
gc P
_NZ/C
0n1"0 
Test Apple Global Root CA1&0$
Apple Certification Authority1
Apple Inc.1
150422024357Z
401226031337Z0n1"0 
Test Apple Global Root CA1&0$
Apple Certification Authority1
Apple Inc.1
US0v0
"Z %
c0a0
X2C0
X2C0
0l1 0
Test Apple Root CA - G31&0$
Apple Certification Authority1
Apple Inc.1
150422031744Z
401226031337Z0l1 0
Test Apple Root CA - G31&0$
Apple Certification Authority1
Apple Inc.1
US0v0
*j8"
B0@0
Pc4:
|O\uo0
m}se
<9:2
BEGIN EXCLUSIVE TRANSACTION
COMMIT TRANSACTION
DELETE FROM issuers WHERE expires<?
INSERT OR REPLACE INTO issuers (uri,expires,certificate) VALUES (?,?,?)
SELECT certificate FROM issuers WHERE uri=?
SALT LAKE CITY1
THE USERTRUST NETWORK1!0
HTTP://WWW.USERTRUST.COM1
UTN-USERFIRST-HARDWARE
iZtTp
DG9*CO
ki0!!
(+pw)
$[(9s
\.aK
u#"r
jCMl
INSERT INTO tsettings(sha1,subj,tset,data)VALUES(?,?,?,?)
UPDATE tsettings SET tset=? WHERE sha1=?
DELETE FROM tsettings WHERE sha1=?
BEGIN EXCLUSIVE TRANSACTION; DELETE from tsettings; COMMIT TRANSACTION; VACUUM;
SELECT data FROM tsettings WHERE subj=?
SELECT tset FROM tsettings WHERE sha1=?
SELECT data,tset FROM tsettings ORDER BY sha1
SELECT COUNT(*) FROM tsettings
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.trustd</string>
<key>com.apple.application-identifier</key>
<string>com.apple.trustd</string>
<key>com.apple.private.assets.accessible-asset-types</key>
<array>
<string>com.apple.MobileAsset.CertificatePinning</string>
</array>
<key>com.apple.private.keychain.certificates</key>
<true/>
<key>com.apple.private.necp.match</key>
<true/>
<key>com.apple.private.network.delegation-whitelist</key>
<true/>
<key>com.apple.private.network.socket-delegate</key>
<true/>
<key>com.apple.private.read-trustd-downloads</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>trustd</string>
</array>
</dict>
</plist>
date
timeIntervalSince1970
numberWithDouble:
reschedule
closeFile
taskDescription
cStringUsingEncoding:
statusCode
expectedContentLength
fileHandleForWritingToURL:error:
cancel
writeData:
description
versionFromTask:
updateDb:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
handler
setHandler:
revDbUpdateQueue
setRevDbUpdateQueue:
transaction
setTransaction:
currentUpdateFile
setCurrentUpdateFile:
currentUpdateFileURL
setCurrentUpdateFileURL:
finishedDownloading
setFinishedDownloading:
_finishedDownloading
_handler
_revDbUpdateQueue
_transaction
_currentUpdateFile
_currentUpdateFileURL
backgroundSessionConfigurationWithIdentifier:
setNetworkServiceType:
setDiscretionary:
ephemeralSessionConfiguration
setHTTPAdditionalHeaders:
setTLSMinimumSupportedProtocol:
setTLSMaximumSupportedProtocol:
set_requiresPowerPluggedIn:
setAllowsCellularAccess:
validUpdateConfiguration
setUpdateScheduled:
sessionWithConfiguration:delegate:delegateQueue:
updateScheduled
URLWithString:
_obliterateAllBackgroundSessionsWithCompletionHandler:
backgroundSession
createSession:
numberWithUnsignedInteger:
dataTaskWithURL:
setTaskDescription:
resume
scheduleUpdateFromServer:forVersion:withQueue:
setBackgroundSession:
_backgroundSession
_updateScheduled
numberWithInt:
stringWithFormat:
numberWithUnsignedLongLong:
unsignedLongLongValue
getContentVersion:error:
compare:
UTF8String
length
dataWithPropertyList:format:options:error:
bytes
objectForKey:
insertRuleWithName:domainSuffix:labelRegex:policies:dbConnection:error:
enumerateObjectsUsingBlock:
scheme
alloc
initWithFormat:
fileURLWithPath:isDirectory:
URLWithString:relativeToURL:
arrayWithContentsOfURL:
objectAtIndex:
shouldUpdateContent:
updateDb:error:pinningList:updateSchema:updateContent:
initWithType:
augmentResultsWithState:
queryMetaDataSync
results
countByEnumeratingWithState:objects:count:
assetProperty:
state
getLocalUrl
installDbFromURL:
purge:
startDownload:
startCatalogDownload:then:
downloadPinningAsset:
downloadPinningAsset
createOrAlterAdminTable:error:
createOrAlterRulesTable:error:
setSchemaVersion:error:
removeAllRulesFromDb:error:
populateDbFromBundle:dbConnection:error:
setContentVersion:dbConnection:error:
fileSystemRepresentation
copyCurrentPinningList
getSchemaVersion:error:
isEqualToNumber:
URLByAppendingPathComponent:
pinningDbPath
createAtPath
init
initializedDb
dealloc
initWithSuiteName:
boolForKey:
stringWithString:
appendString:
isEqualToString:
isPinningDisabled:
rangeOfString:
substringToIndex:
substringFromIndex:
array
stringWithUTF8String:
regularExpressionWithPattern:options:error:
numberOfMatchesInString:options:range:
dataWithBytes:length:
propertyListWithData:options:format:error:
addObjectsFromArray:
count
dictionaryWithObjects:forKeys:count:
queryForDomain:
queryForPolicyName:
.cxx_destruct
setDb:
queue
setQueue:
dbPath
setDbPath:
_queue
_dbPath
class
isKindOfClass:
ValidDelegate
NSURLSessionDelegate
NSObject
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
ValidUpdateRequest
SecPinningDb
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v16@0:4@8@12
v20@0:4@8@12@?16
v16@0:4@"NSURLSession"8@"NSError"12
v20@0:4@"NSURLSession"8@"NSURLAuthenticationChallenge"12@?<v@?i@"NSURLCredential">16
v12@0:4@"NSURLSession"8
v24@0:4@8@12@16@?20
v28@0:4@8@12@16@20@?24
v40@0:4@8@12q16q24q32
v20@0:4@8@12@16
v24@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLRequest"16@?<v@?i@"NSURLRequest">20
v16@0:4@"NSURLSession"8@"NSURLSessionTask"12
v28@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSHTTPURLResponse"16@"NSURLRequest"20@?<v@?@"NSURLRequest">24
v24@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLAuthenticationChallenge"16@?<v@?i@"NSURLCredential">20
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@?<v@?@"NSInputStream">16
v40@0:4@"NSURLSession"8@"NSURLSessionTask"12q16q24q32
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLSessionTaskMetrics"16
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSError"16
v24@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSURLResponse"16@?<v@?i>20
v20@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSURLSessionDownloadTask"16
v20@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSURLSessionStreamTask"16
v20@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSData"16
v24@0:4@"NSURLSession"8@"NSURLSessionDataTask"12@"NSCachedURLResponse"16@?<v@?@"NSCachedURLResponse">20
v12@0:4I8
i12@0:4@8
@?8@0:4
v12@0:4@?8
@"NSObject<OS_os_transaction>"
@"NSFileHandle"
B20@0:4@8I12@16
d8@0:4
v16@0:4d8
@"NSURLSession"
@16@0:4^{__OpaqueSecDbConnection=}8^^{__CFError}12
B16@0:4^{__OpaqueSecDbConnection=}8^^{__CFError}12
B20@0:4@8^{__OpaqueSecDbConnection=}12^^{__CFError}16
B12@0:4@8
B32@0:4@8@12@16@20^{__OpaqueSecDbConnection=}24^^{__CFError}28
v12@0:4B8
v8@0:4
@8@0:4
B28@0:4^{__OpaqueSecDbConnection=}8^^{__CFError}12@16B20B24
^{__OpaqueSecDb=}8@0:4
@12@0:4@8
v12@0:4^{__OpaqueSecDb=}8
v12@0:4@8
^{__OpaqueSecDb=}
@"NSObject<OS_dispatch_queue>"
@"NSURL"
zPLR
zPLR
