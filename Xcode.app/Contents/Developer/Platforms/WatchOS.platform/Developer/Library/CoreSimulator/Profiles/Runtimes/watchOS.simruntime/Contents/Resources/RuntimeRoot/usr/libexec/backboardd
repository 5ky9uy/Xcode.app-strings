(knN
alloc
class
initWithName:display:
autorelease
setLockBacklight:
initWithOverlayDescriptor:level:
_setType:
release
dealloc
init
setKeyPath:
_spinnyImageSequence
allImages
setValues:
setCalculationMode:
setRepeatCount:
setDuration:
contentLayer
addAnimation:forKey:
imageAtIndex:
layer
_bounds
setBounds:
setPosition:
setContents:
removeAllAnimations
_unloadSpinnyImageSequence
_setScale:
descriptionBuilderWithMultilinePrefix:
appendUnsignedInteger:withName:
bundleForClass:
_assetPrefix
_scale
initWithBasename:bundle:imageCount:scale:
_useLightBackground
overlayWithLevel:display:
_startAnimating
_stopAnimating
_prepareContentLayerForPresentation:
_cleanUpContentLayer
background
setBackground:
_background
_imageSequence
_animation
.cxx_destruct
observer
setObserver:
queue
setQueue:
_observer
_queue
propertyForKey:
copy
stringWithFormat:
stringWithUTF8String:
intValue
isKindOfClass:
boolValue
senderID
_coreInit
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
descriptionWithMultilinePrefix:
succinctDescriptionBuilder
build
builderWithObject:
appendObject:withName:
appendBool:withName:
_observerWorkQueue_addDisappearanceObserver:queue:
_observerWorkQueue_removeDisappearanceObserver:
serviceStatus
serviceDidDisappear:
addObject:
_observerWorkQueue_startIOServiceRemovalNotifications
countByEnumeratingWithState:objects:count:
removeObject:
count
_observerWorkQueue_stopIOServiceRemovalNotifications
retain
removeAllObjects
setServiceStatus:
_observerWorkQueue_serviceWasRemoved
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retainCount
zone
hash
superclass
description
debugDescription
displayUUID
eventSource
primaryUsagePage
primaryUsage
isAuthenticated
isBuiltIn
succinctDescription
initForTesting
initForSimulatorWithDisplayUUID:
initWithHIDServiceRef:
setProperty:forKey:
setElementValue:forUsagePage:usage:
addDisappearanceObserver:queue:
removeDisappearanceObserver:
disappearanceObservers
_serviceWasRemoved
IOHIDService
setIOHIDService:
setDisplayUUID:
setEventSource:
setSenderID:
setPrimaryUsagePage:
setPrimaryUsage:
setAuthenticated:
setBuiltIn:
_observerWorkQueue_removalNotification
_observerWorkQueue_disappearanceObservers
_observerWorkQueue
_authenticated
_builtIn
_serviceStatus
_IOHIDService
_displayUUID
_eventSource
_primaryUsagePage
_primaryUsage
_senderID
initWithServiceName:onQueue:
stringByAppendingString:
UTF8String
initForMessage:
sharedInstance
_newFenceHandle
sendReply:
_newAssertionForTriggerPort:
queue_handleMessage:client:
_requestFenceQueue
_createAssertionQueue
begin
initWithCapacity:
setObject:forKey:
remoteContextWithOptions:
commit
createFencePort
initWithPort:
rawPort
initFromReceiveRight:
localDefaults
fenceArbiterTimeoutInterval
signal
port
invalidate
hasBeenSignalled
isUsable
_initWithFenceName:fence:preFence:preFenceTrigger:shouldTrace:
_initWithFenceName:assertionName:preFence:shouldTrace:
_server
_context
_transactionQueue
_fenceLock
_fenceSemaphore
_fenceRunning
_fenceCount
_fenceName
_fenceInvalid
_fenceInvalidSemaphore
_caFencePort
_caFence
_preFenceReceiveRight
_preFenceGenerationToken
_preFenceTriggerReceiveRight
_lastAssertionName
displayLink
timestamp
duration
_thread_positionWithinCurrentFrameAtTime:duration:
setPaused:
isPaused
_thread_dispatchPendingEvents:
currentTime
_thread_shouldDispatchUsingDisplayLinkAtTime:
_thread_dispatchEventBlockAtNextVSync:
_thread_dispatchEventBlockImmediately:
_thread_displayLinkFired:
_thread_scheduleEventWithBlock:event:clientTaskPort:
setCurrentTime:
_blocks
_dispatchingTouchesOnDisplayLink
_currentTime
startHIDSystem
setEntitlementCache:
startEventProcessors
synchronizeALSPreferencesAndDisplayBrightness
startServer
startSystemAppCheckInServer
allowSystemAppCheckIn
loadPostMigrationPluginsWithCompletion:
migrateIfNecessaryWithCompletion:
startMonitoringSecureDrawing
sharedServer
drain
appendInteger:withName:
appendString:withName:
service
setService:
currentDestination
setCurrentDestination:
touchCount
setTouchCount:
maxForce
setMaxForce:
determinedMaxForce
setDeterminedMaxForce:
_determinedMaxForce
_service
_currentDestination
_touchCount
_maxForce
initWithMatchingDictionary:HIDSystem:
startObserving:queue:
numberWithUnsignedLongLong:
objectForKey:
allValues
firstObject
_queue_handleEvent:fromTouchPad:
_queue_sendCancelEventForTouchPad:
enumerateKeysAndObjectsUsingBlock:
_queue_touchPadRemoved:
removeObjectForKey:
senderCache
addSenderInfo:
_queue_touchPadsDetected:
enumerateObjectsUsingBlock:
contextID
destinationForEvent:onDisplay:
userEventOccurredOnDisplay:
_queue_sendEvent:fromTouchPad:toDestination:
matcher:servicesDidMatch:
filterEvent:fromSender:
sendCancelEventForDisplay:
sendCancelEventForAllDisplays
_touchPadQueue
_queue_currentTouchPads
_touchPadMatcher
numberWithInt:
dictionaryWithObjects:forKeys:count:
arrayWithObjects:count:
_thread_startRunLoop
initWithTarget:selector:object:
start
performSelector:onThread:withObject:waitUntilDone:modes:
displayLinkClass
displayLinkWithTarget:selector:
currentRunLoop
addToRunLoop:forMode:
distantFuture
runMode:beforeDate:
_performBlock:
scheduleEvent:fromDigitizer:toClient:
sendEvent:toClient:
performAsync:
performSync:
_displayLink
_thread
state
_handleEvent:
_gestureRecognizers
_addGestureRecognizer:
_removeGestureRecognizer:
setState:
delegate
setDelegate:
_recognizers
_state
_delegate
addGestureRecognizer:
removeGestureRecognizer:
clientRequestedProximityMode:processID:clientPort:
requestEstimatedProximityEventsWithTimeout:
resetCalibration
isObjectWithinProximity
setEventClientWithBundleID:
isDetectionActive
objectWithinProximityShouldIgnoreTouches
setObjectWithinProximityShouldIgnoreTouches:
setUILockState:source:
setPocketTouchesExpected:
hasEntitlement:forAuditToken:
initWithBytesNoCopy:length:freeWhenDone:
setWithObject:
bs_secureDecodedFromData:withAdditionalClasses:
mutableCopy
bs_containsObjectPassingTest:
properties
deferredProperties
clientID
pidForBundleID:
setPid:
setDeferrals:forClient:pid:
systemAppControlsFocusOnMainDisplay:
setForegroundApplicationOnMainDisplay:pid:
humanPresenceEventProcessor
getStatus:presence:proximityInCentimeters:forDisplayUUID:
getCString:maxLength:encoding:
setWithObjects:
bs_secureObjectFromData:ofClasses:
setResetIdleHackEnabled:
resetTimer:mode:
notifyOnNextUserEvent
lastUserEventTime
isSafeToResetIdleTimer
setCurrentUserInterfaceOrientation:
lastEffectiveInterfaceOrientation
effectiveDeviceOrientation
systemAppSetOrientationEventsClient:wantsOrientationEvents:auditToken:
lockDeviceOrientation:deviceOrientation:
unlockDeviceOrientation:
isDeviceOrientationLocked:
bksAccelerometerClientRequestedAccelerometerEvents:updateInterval:xThreshold:yThreshold:zThreshold:auditToken:
bksAccelerometerClientRequestedOrientationEvents:enabled:passiveEvents:auditToken:
tokenFromAuditToken:
processHandleForAuditToken:
name
bundleIdentifier
initWithIdentifier:
monitorSendRight:withHandler:
isValid
beginImplicitTransaction
setDisplayBrightness:permanently:
displayBrightness
displayBrightnessCurve
setDisplayBrightnessCurve:
restoreSystemDisplayBrightness
setAutoBrightnessEnabled:
configureEventRouters:forPID:
propertiesWithClientID:pid:displayUUID:contextID:
setKeyCommandDescriptors:forEventFocusProperties:
numberWithBool:
bs_map:
containsObject:
resetButtonCombos:
auditTokenRepresentsSystemApp:
descriptor
display
bounds
deviceClass
addObserver:forKeyPath:options:context:
dictionary
level
setLevel:
setLayer:
setBackgroundColor:
addSublayer:
_animationForContentLayerCrossfading:
setOpacity:
keyPath
_animationForBackgroundLayerCrossfading:
_cleanup
removeObserver:forKeyPath:
animationWithKeyPath:
applyToCAAnimation:
numberWithDouble:
setFromValue:
setToValue:
setBeginTimeMode:
setBeginTime:
setFillMode:
contextId
isEqualToString:
_setBounds:
animationDidStart:
animationDidStop:finished:
disablesDisplayUpdates
_presentWithAnimationSettings:
_dismissWithAnimationSettings:
_freeze
observeValueForKeyPath:ofObject:change:context:
_backgroundLayer
_outstandingAnimationsCount
_lightBackground
_contentLayer
initWithFireCount:interval:
_handleTimer:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
_timer
_firedCount
_numberOfTimesToFire
_interval
initWithHIDEventDescriptor:senderInfo:
senderInfo
dataLength
data
appendPointer:withName:
_fillWithHIDEvent:descriptor:senderInfo:
initWithHIDEventVendorDefinedDescriptor:senderInfo:
_event
isTokenSet
token
unsetToken
_revertToFirstBoot
_semaphoreExists
setDescriptor:
setSenderInfo:
_descriptor
_senderInfo
initWithPid:sendRight:queue:
initWithPid:sendRight:queue:processName:
_deathByPid
clientDied:
_queue_performDelegateCallout:
initWithPID:queue:deathHandler:
_deathBySendRight
initWithSendRight:
activateWithHandler:
_queue_invalidate
appendInt:withName:
initWithPid:sendRight:
sendRight
_queue_delegate
_queue_sendRight
_queue_pidWatcher
_queue_portSentinel
_queue_procName
_queue_pid
_queue_invalidated
mainManager
pluginBundlesForType:
loadPlugin:
_plugins
focusServer
mapTableWithKeyOptions:valueOptions:
clientForTaskPort:
_pidForClientPort:
noteTouchDetachedForIdentifier:context:pid:observers:
noteTouchUpOccuredForIdentifier:detached:context:pid:observers:
noteTouchDetached:context:clientPort:observers:
noteTouchUpOccured:detached:context:clientPort:observers:
_focusServer
_touchIdentifiersToContextIDs
_touchIdentifiersToPids
_touchMapQueue
displays
uniqueId
mainDisplay
numberWithFloat:
setUsesPreferredModeRefreshRate:
setIdealRefreshRate:
setBlanked:
serial
serviceClass:
willUnblank
disabled
setDisabled:
contextIdAtPosition:
convertPoint:toContextId:
contextIdAtPosition:excludingContextIds:
serverIfRunning
contextIdHostingContextId:
taskNamePortOfContextId:
serverWithOptions:
setRendererFlags:
displayId
displayWithDisplayId:
handleFailureInFunction:file:lineNumber:description:
isExternal
currentMode
preferredScale
forceMirroredOrientation
setOrientation:
updateSettings
updatePreferencesIfNeeded
prepareForRestart
flush
synchronize
displayWithUniqueId:
displayWithName:
_initWithPersistenceData:
image
progressIndicatorProperties
activate
setFrame:
setName:
setHidden:
blackColor
CGColor
_animationForKeyPath:withSettings:
_persistenceCoordinator
saveOverlay:
_applyProgressIndicatorPropertiesToKernelIfNecessary
destroyOverlay:
_persistenceData
setImage:
isSpringAnimation
style
position
_imageRef
defaultCenter
_updateRoutersForCurrentSystemApp
addObserverForName:object:queue:usingBlock:
_descriptorForHIDEvent:
destinationForDescriptor:onDisplay:
cachedDescriptorsToRouterDestinations
queue_routerDestinationForDescriptor:
eventFocusManager
destinationForFocusedEventWithDisplay:
destinationForSystemApplicationWithDisplay:
systemApplications
setEventRouters:
defaultEventRouters
systemApp
eventRouters
_queue_setEventRouters:
descriptorWithPage:usage:
descriptorWithBiometricEventType:
descriptorWithEventType:
routerDestinationForDescriptor:
systemAppDestinationWithDisplay:
setEventFocusManager:
setCachedDescriptorsToRouterDestinations:
_accessor_eventFocusManager
_cachedDescriptorsToRouterDestinations
bs_secureDecodedFromData:
setReplayCloneContextIDs:
setCloneMirroringMode:
setVirtualDisplayClientPID:
setCloneRotationDisabled:
isTethered
ignoreTetheringPreferences
setOrientationNotificationDisabled:
noteInterfaceOrientationChangedWithInterfaceOrientation:
usesDisplayPortTethering
isSteveNoteRotationEnabled
objectAtIndex:
orientation
removeOverlay:withAnimationSettings:
applyOverlay:withAnimationSettings:
activeOverlayWithDescriptor:
freezeOverlay:
bs_secureEncoded
bs_bytesForMIG
bs_lengthForMIG
isShowingBootUI
dismissSustainedOverlayWithAnimationSettings:
activeOverlays
isShowingNonBootUIOverlays
sustainOverlay
dataWithBytesNoCopy:length:freeWhenDone:
_classesRequiredToDecode
type
setBundleID:
setOptions:
bundleInfoOverrides
URLWithString:
applicationProxyForIdentifier:
isInstalled
_noteLaunchFailed:
applicationType
bundleURL
path
initWithPath:
executablePath
defaultMachServicesForBundleID:
infoDictionary
bs_safeObjectForKey:ofType:
addEntriesFromDictionary:
length
defaultEnvironment
specification
setBundleIdentifier:
setBundlePath:
setExecutablePath:
setLabelPrefix:
setExecutionOptions:
setEnvironment:
allKeys
setMachServices:
initWithBundleIdentifier:
bootstrapWithSpecification:error:
handle
_noteLaunchSucceeded
setProcess:
alternateSystemAppDidFailToLaunch:
alternateSystemAppDidLaunch:
alternateSystemAppExited:withContext:
_noteExitedWithContext:
process:taskStateDidChange:
processWillExpire:
process:isBeingDebugged:
process:didExitWithContext:
initWithBundleId:options:queue:
launch
terminate
bundleID
options
process
_bundleID
_options
_process
interfaceOrientation
lockBacklight
isInterstitial
_wrapInCATransaction:
animates
setOverlayType:
appendFloat:withName:decimalPrecision:
appendBodySectionWithName:multilinePrefix:block:
setAnimates:
presentWithAnimationSettings:
freeze
dismissWithAnimationSettings:
_setPersistenceCoordinator:
_type
_level
_visible
_disablesDisplayUpdates
_animates
initWithHIDEventKeyboardDescriptor:
gestureRecognizer:didChangeState:
initWithHIDEventKeyboardDescriptors:
_possibleRecognizers
_beganRecognizers
ping
isAlive
hidSystem
setHidSystem:
systemAppSentinel
setSystemAppSentinel:
_hidSystem
_systemAppSentinel
isResetIdleHackEnabled
injectGSEvent:
_resetIdleHackEnabled
requestedMode
setRequestedMode:
_requestedMode
sensorConfiguredForWatch
initWithHardware:
baseMode
lowLevelDescriptionForMode:pocketTouchesExpected:
_queue_effectiveMode
_queue_cancelEstimatedProximityEventShutoffTimerAndResetMode:
setMode:pocketTouchesExpected:
numberWithUnsignedInt:
estimatedProxPowerAssertionID
setEstimatedProxPowerAssertionID:
_queue_cancelEstimatedProximityEventShutoffTimer
_existingClientForPID:
_queue_updateProximityDetectionMode
_removeClient:
_updateProximityDetectionMode
_createClientForPID:sendRight:queue:
_addClient:
_queue_addClient:
_queue_removeClient:
requestProximityMode:
_effectiveMode
_updateClientPID:clientPort:withDetectionMode:
setEventsClientWithBundleID:
handleProximityEvent:fromSender:
_queue_requestEstimatedProximityEventsWithTimeout:
setLockSource:
_disableProximityDetection
_enableProximityDetectionWithMode:
estimatedProxShutoffTimer
setEstimatedProxShutoffTimer:
sensorHardware
setSensorHardware:
isDisabled
_currentMode
_pidToClients
_clientQueue
_pocketTouchesExpected
_objectWithinProximityShouldIgnoreTouches
_disabled
_estimatedProxShutoffTimer
_estimatedProxPowerAssertionID
_sensorHardware
setWithSet:
encodeFloat:forKey:
encodeInteger:forKey:
encodeObject:forKey:
decodeFloatForKey:
decodeIntegerForKey:
decodeObjectForKey:
_initWithDescriptor:overlayType:imageData:level:
classesRequiredToDecode
supportsSecureCoding
encodeWithCoder:
initWithCoder:
overlayType
_overlayType
_image
_imageData
shouldCacheResultForToken:
hasCacheResultForToken:andEntitlement:result:
cacheResult:forToken:andEntitlement:
hasEntitlement:forConnection:
entitlementCache
_entitlementCache
initWithHIDEventSystem:
initWithNonRetainingPort:
GSEventPortNameForBundleID:
bootstrapLookUpPortWithName:
copyClientForTaskPort:
copyClientForDestination:
keyboardManager:keyboardAttached:
keyboardManager:keyboardDetached:
isCapsLockOn
setKeyboardLayout:
keyboardLanguage
keyboardInfoForSenderID:
keyboardActivationChangeEventDescriptor
describes:
keyDownCount
setKeyDownCount:
capsLockRomanSwitchMode
anyObject
isSystemAppEvent
_gsKeyboard
_shouldMatchKeyCommandsWithKeyCode:gsKeyboard:
keyCommandDescriptorForEvent:gsKeyboard:
destinationsForFocusedKeyCommandDescriptor:withDisplay:
setSwallowEvents:
setCapsLockOn:
attachedKeyboards
setCapsLockRomanSwitchMode:
pointerArrayWithOptions:
setCount:
_idiomSuffix
_imageAtIndex:
_loadAllImages
allObjects
URLForResource:withExtension:
pointerAtIndex:
_createImageForIndex:basename:scale:idiom:bundle:
replacePointerAtIndex:withPointer:
maximumImageCount
scale
images
setImages:
bundle
setBundle:
basename
setBasename:
idiomSuffix
setIdiomSuffix:
_maximumImageCount
_images
_bundle
_basename
isOpen
initWithFloat:
floatValue
notificationWithName:object:
postNotification:
performSelectorOnMainThread:withObject:waitUntilDone:
initWithObjectsAndKeys:
lock
copyPropertyForKey:
unlock
isAlsSupported
unsignedCharValue
setBacklightLocked:forReason:
registerNotificationBlock:
activeMultilinePrefix
isDigitizerSignpostsEnabled
observeDefault:onQueue:withBlock:
enumerateDigitizersForDisplay:usingBlock:
accessAsynchronously:
enumerateDigitizersForAllDisplaysUsingBlock:
touchStreamInfoForDisplayUUID:createIfNeeded:
infoForDigitizerService:createIfNeeded:
unsignedIntegerValue
setTaskPort:
setContextID:
setShouldSendAmbiguityRecommendations:
setTouchStreamIdentifier:
addTouchStreamClient:toDisplayUUID:
accessSynchronously:
touchStreamClientForReference:
parent
shouldSendAmbiguityRecommendations
taskPort
ambiguityRecommendation
dispatchMode
setDispatchMode:
setAmbiguityRecommendation:
shouldAvoidHitTesting
enumerateClients:
enqueueEvent:fromDigitizer:toClient:
getAmbiguityRecommendation:dispatchMode:
mainDisplayDigitizerService
hasOrbCapability
initWithScheduler:
waitForMainDisplayDigitizerService
touchStreamIdentifier
string
stringByAppendingFormat:
shouldCancelTouchesDeliveredToContextId:withInitialTouchTimestamp:
contextIDsToAlwaysSendTouches
unsignedIntValue
contextIDsToExcludeFromHitTesting
shouldDeliverTouchesToContextIds:count:
valueForKey:
objectAtIndexedSubscript:
rect
_exclusiveTouchNormalizedSubRectInReferenceSpace
digitizer:touchingPathMaskDidChange:
appendFormat:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
initWithHIDEventKeyboardDescriptor:senderInfo:
wantsAccelerometerEvents
_passesThresholdForX:y:z:
_shouldSendSampleEventWithTimestamp:samplingInterval:
_setLastAccelerometerEventTimestamp:
handleAccelerometerEventWithTimestamp:x:y:z:samplingInterval:
handleOrientationEvent:orientationLocked:
removeSenderInfo:
unknownSenderInfo
sync
senderInfoForSenderID:
senderIDToSenderInfo
setSenderIDToSenderInfo:
_senderIDToSenderInfo
initWithUsagePage:usage:builtIn:HIDSystem:
addService:
removeService:
services
setProximityInCentimeters:
setHumanIsPresent:
humanIsPresent
proximityInCentimeters
status
_setPresence:forDisplayUUID:
_setProximityInCentimeters:forDisplayUUID:
displayUUIDToSensorRecords
setDisplayUUIDToSensorRecords:
presenceServiceMatcher
setPresenceServiceMatcher:
proximityServiceMatcher
setProximityServiceMatcher:
_queue_displayUUIDToSensorRecords
_presenceServiceMatcher
_proximityServiceMatcher
isSmartCoverSupported
initWithHIDSystemInterface:
existingServices
systemEventOfType:matchingEvent:options:
isSmartCoverClosed
reusableKeyboardDescriptorWithPage:usage:
finishedStartup
mainQueue
_queue_clearTimer
_queue_scheduleTimerWithTimeInterval:
_queue_userEventOccurredInIdleMode
_queue_userEventOccurredInPresenceMode
initWithFireInterval:queue:handler:
schedule
cancel
_currentTimeout
_lastUserEvent
_lastResetTimerRequest
_isIdle
_shouldNotify
_safeToResetIdleTimer
initWithSystemAppSentinel:firstBootToken:alternateSystemAppManager:
initWithOptions:capacity:
_systemAppDidFinishLaunching:
addObserver:selector:name:object:
_queue_finishBootingIfNecessaryAndTellObservers:
isFirstBoot
alternateSystemApp
firstBootDetectorDidFinishFirstBoot:
addObserver:
removeObserver:
alternateSystemAppManager
setAlternateSystemAppManager:
_firstBootToken
_alternateSystemAppManager
_queue_observers
arrayWithObject:
setALSEnabled:
ALSUserPreferences
setALSUserPreferences:
ALSEpoch
setALSEpoch:
keyboardInfoWithIOHIDService:
_queue_keyboardsDetected:
setExternalKeyboardEventSource
_queue_watchForGestures:
isKeyboardActive
_queue_usableKeyboardAttached:
_queue_keyboardRemoved:
_queue_stopWatchingForGestures:
_queue_usableKeyboardDetached:
shouldActivateByGesture
initWithSmartKeyboard:activationChangeEventDescriptor:
keyboard
keyboardServiceMatcher
setKeyboardServiceMatcher:
_attachedKeyboards
_usableKeyboards
_calloutQueue
_keyboardServiceMatcher
deferredPropertiesForProperties:
setClientID:
deferrals
setDeferrals:
_clientID
_deferrals
_sendEventRecord:
dispatchEnqueuedEvents
_sendEvent:toClient:
enqueuedEventBlocks
setEnqueuedEventBlocks:
_enqueuedEventBlocks
proximityService
isValidEvent:fromSender:
reallyResetCalibration
reallySetMode:pocketTouchesExpected:
_setPocketTouchesExpected:
setProximityService:
_proximityService
isDeviceOrientationLocked
orientationManager:deviceOrientationMayHaveChanged:isDeviceOrientationLocked:
setWantsAccelerometerEvents:
setAccelerometerUpdateInterval:
setXThreshold:
setYThreshold:
setZThreshold:
_handleAccelerometerRequestForPort:auditToken:updateBlock:
setWantsOrientationEvents:
setPassiveOrientationEvents:
_lock_systemAppSetOrientationEventsClient:wantsOrientationEvents:auditToken:
_updateSettings
isOrientationEventsEnabled
_lock_clearSystemAppOrientationClient
_lock_existingClientForPort:
accelerometerUpdateInterval
xThreshold
yThreshold
zThreshold
wantsOrientationEvents
passiveOrientationEvents
handleEvent:
_lock
_lock_accelerometerClients
_lock_cachedClients
_lock_systemAppOrientationClient
_lock_orientationManager
_lock_samplingInterval
_setBlockingSystemApp:
blockSystemApp
setPendingOpenResultBlock:
setPendingExitBlock:
setOpenBundleId:
setAlternateSystemApp:
_queue_cleanupAfterApp
terminateAlternateSystemApp:forReason:andReport:withDescription:completion:
unblockSystemApp
postNotificationName:object:
blockSystemAppForAlternateSystemAppWithCompletion:
openAlternateSystemApp:options:withResult:andExitBlock:
terminateAnyAlternateSystemApp
unblockSystemAppForAlternateSystemAppWithCompletion:
isBlockingSystemApp
openBundleId
pendingOpenResultBlock
pendingExitBlock
_blockingSystemApp
_alternateSystemApp
_openBundleId
_pendingOpenResultBlock
_pendingExitBlock
isDitheringEnabled
setDitheringEnabled:
initWithFormat:
_postDisplayPortNotificationCode:
_setTetherState:
_handleDemoModeChanged
_serviceExists:
_reverseTetheringActive
isOrientationNotificationDisabled
_tetherState
_lastOrientationCode
_orientationNotificationsDisabled
currentUserInterfaceOrientation
TVOutDisplay
width
height
_writeCurrentScreenSizeToAggregated:
setTvOutMode:
startListeningForSettingsChanges
array
stopListeningForSettingsChanges
server
availableModes
currentCarPlayExternalDevice
screenIDs
processInfo
environment
defaultManager
fileExistsAtPath:
dictionaryWithContentsOfFile:
objectForKeyedSubscript:
setTag:
clones
_queue_addClone:
removeClone:
disableCloneMirroring
dictionaryWithObjectsAndKeys:
disableCAOverscan
isSteveNoteOverscanEnabled
disableCAScaling
disableCAYUV
addClone:options:
forceCloneMirroring
setProcessId:
_queue_updateWirelessCloneDisplays
tvOutMode
_tetherSettingChanged:
removeObserver:name:object:
_queue_updateLayerKitSettings
_queue_setInitialTVModeIfNeeded
replayCloneContextIDs
_handleIapServerConnectionDied
_workQueue
_queue_replayCloneContextIDs
_queue_currentVirtualDisplayClientPID
_queue_starkSimulatorAttached
_queue_currentCloneMirroringMode
_queue_cloneRotationDisabled
_queue_forceTVOutMode
_tvOutMode
reportAndKillInsecureProcesses
isSecureModeEnabled
systemApplicationBundleIdentifier
initWithInsecureProcessIds:
sendActions:withResult:
setSecureModeEnabled:
_secureModeEnabled
setContentsScale:
doItHide
progressIndicatorWithStyle:position:
setProgressIndicatorProperties:
doItShowKernel
doItShow
_layer
stringByAppendingPathComponent:
bundleWithPath:
load
principalClass
initialize
injectHIDEvent:
_accessibilityProcessExternHIDEvent:
_accessibilitySetEventTapCallback:
_accessibilityEventTapCallback
_accessibilitySetHIDEventTapCallback:
_accessibilityHIDEventTapCallback
_displayConvertFromCAScreen:
_displayConvertToCAScreen:
_displayConvertFromCAScreen:withDisplayIntegerId:
_displayConvertToCAScreen:withDisplayIntegerId:
_objectWithinProximity
_isDisplayBacklightOff
_eventRoutingClientConnectionManager
_setCapsLockLightOn:
initWithConnection:
connectDate
setConnectDate:
checkedIn
setCheckedIn:
pendingCheckIn
setPendingCheckIn:
setFinishedStartup:
systemIdleSleepInterval
setSystemIdleSleepInterval:
bundlePath
jobLabel
setJobLabel:
_bundlePath
_connectDate
_checkedIn
_pendingCheckIn
_finishedStartup
_eventRouters
_bundleIdentifier
_jobLabel
_pid
_systemIdleSleepInterval
_lastAccelerometerEventTimestamp
_xThreshold
_yThreshold
_zThreshold
_passiveOrientationEvents
_wantsOrientationEvents
_wantsAccelerometerEvents
_accelerometerUpdateInterval
strongToStrongObjectsMapTable
appendArraySection:withName:skipIfEmpty:
lock_bootstrapSystemApp
pingSystemApp:timeout:
lock_blockSystemApp
lock_unblockSystemApp
objectEnumerator
lock_updatePrimarySystemApp
setHideAppleLogoOnLaunch:
refreshEffectiveDeviceOrientation
date
_handleRelaunchRequestFromSystemApp:withOptions:
lastExitReasonForLabel:
timeIntervalSinceNow
server:systemAppConnected:
server:systemAppCheckedIn:completion:
server:systemAppWantsRestart:
server:systemAppDisconnected:
server:systemAppFinishBooting:
server:systemApp:hasActions:
_systemApp
_connectedSystemApps
_checkinCompletionsBySystemApp
_readyForSystemApp
_systemAppBlocked
_heartbeat
_sharedQueue
_beginUpdateTransaction:
_queue_updateExpirationTimeWithIntervalSinceNow:
_queue_setTimerWithTimeIntervalSinceNow:
_endUpdateTransaction:
_identifier
_expirationTime
_invalidated
externalDefaults
springBoardDefaults
brightness
brightnessCurve
_lock_addBrightnessObserver
_lock_removeBrightnessObserver
_postDisplayBrightnessChangedForUIKit
_lock_commitDisplayBrightness
setBrightness:
setBrightnessCurve:
systemDisplayBrightness
_numPendingTransactions
_commitPending
_systemDisplayBrightness
_shouldRestoreSystemBrightness
_notificationObserver
initWithService:
_initWithPage:usage:eventType:
keyboardType
setCapsLockLEDOn:
shouldSwallowEvents
countryCode
setCountryCode:
setKeyboardType:
keyboardLayout
setKeyboardLanguage:
keyboardActivationEventDescriptor
setKeyboardActivationEventDescriptor:
_swallowEvents
_capsLockOn
_capsLockRomanSwitchMode
_countryCode
_shouldActivateByGesture
_keyDownCount
_keyboardType
_keyboardLayout
_keyboardLanguage
__gsKeyboard
_keyboardActivationEventDescriptor
_lastOrientation
setLockedHIDMode:
digitizerService
lockedHIDMode
_HIDDetectionModeForDetectionMode:pocketTouchesExpected:
sensorConfiguredForHandheld
_lockedHIDMode
_currentMaskForUsage:HIDSystem:mask:maskIfEngaged:
initWithHIDSystemInterface:supportedHES:disengagedHES:attached:unknownState:
sensorsRequiredForOpenState
supportedSensors
_smartCoverSensorsDidEngage:
_smartCoverSensorsDidDisengage:
_postEvent:toSender:
hidSystemInterface
setHidSystemInterface:
setSupportedSensors:
setSensorsRequiredForOpenState:
disengagedSensors
setDisengagedSensors:
isAttached
setAttached:
isUnknownState
setUnknownState:
_attached
_unknownState
_hidSystemInterface
_supportedSensors
_sensorsRequiredForOpenState
_disengagedSensors
initWithProgressBarVisibility:createContext:contextLevel:appearance:
setVisible:
_puiProgressWindow
appendFloat:withName:
_resetServiceStatus
setStatus:
setServices:
_humanIsPresent
_status
_proximityInCentimeters
_services
_clearButtonCombos
_takeStackshotForReason:
takeStackshotForReason:
_defaultCombos
setParent:
addClient:
removeClient:
clients
_clients
initWithMachServiceName:
setXpcListener:
setClientConnection:
resume
auditToken
hasEntitlement:
didBlockSystemAppForAlternateSystemApp
didUnblockSystemAppForAlternateSystemApp
alternateSystemAppWithBundleID:failedToOpenWithResult:
alternateSystemAppWithBundleID:didExitWithContext:
alternateSystemAppWithBundleIDDidOpen:
alternateSystemAppWithBundleIDDidTerminate:
interfaceWithProtocol:
setRemoteObjectInterface:
blockSystemAppForAlternateSystemApp
openAlternateSystemAppWithBundleID:
terminateAlternateSystemAppWithBundleID:
unblockSystemAppForAlternateSystemApp
setExportedInterface:
setExportedObject:
_handleInterruptedOrInvalidatedConnection
setInterruptionHandler:
setInvalidationHandler:
_queue_listener:shouldAcceptNewConnection:
remoteObjectProxy
errorWithDomain:code:userInfo:
listener:shouldAcceptNewConnection:
xpcListener
clientConnection
_xpcListener
_clientConnection
setKeyboard:
activationChangeEventDescriptor
setActivationChangeEventDescriptor:
_keyboard
_activationChangeEventDescriptor
initWithServiceName:
connection
sendMessage:toConnection:withMessagePacker:replyHandler:replyQueue:
bs_performSynchronously:timeout:
_queue_handleConnect:forClient:
_queue_handleCheckIn:forClient:
_queue_handleRestart:forClient:
_queue_handleFinishBooting:forClient:
_queue_handleActions:forClient:
_queue_handlePing:forClient:
_sendReplyForMessage:messagePacker:
setWithArray:
queue_shouldAcceptNewConnection:
queue_newClientForConnection:
queue_clientAdded:
queue_clientRemoved:
_queue_migrateBackBoard
timeIntervalSinceReferenceDate
_queue_removeUnusedFiles
migrateDefaultsIfNecessary
fileSystemRepresentation
arrayWithObjects:
stringByExpandingTildeInPath
_queue_moveRestoredFileAtPath:
stringByDeletingPathExtension
removeItemAtPath:error:
moveItemAtPath:toPath:error:
_setQueue:
setObservesFocusDeferralChanges:
setObservesTouchDelivery:forTouchIdentifier:
focusedDeferralPropertiesUpdatedWithProperties:
touchUpOccuredForIdentifier:detached:context:pid:
touchDetachedForIdentifier:context:pid:
setClasses:forSelector:argumentIndex:ofReply:
processIdentifier
currentConnection
tokenFromNSXPCConnection:
_propertiesGroupedByPidForProperties:
keyEnumerator
evaluateUpdatedDeferralPropertiesForProperties:
_listener
_remoteFocusObservers
_cachedDeferralProperties
_remoteTouchObservers
setDigitizerService:
isProximityDetectionInActiveMode
eventDestination
initWithPid:clientID:
setSendRight:
setEventDestination:
_setObjectWithinProximity:notify:
_sendProxEvent:toDestination:objectWithinProximity:
setProximityDetectionInActiveMode:
setBaseMode:
setObjectWithinProximity:
configureBaseModeForALS
lockSource
digitizerServiceMatcher
setDigitizerServiceMatcher:
_proximityDetectionInActiveMode
_baseMode
_lockSource
_digitizerServiceMatcher
_eventDestination
_digitizerService
initWithMatchingDictionary:serviceClass:HIDSystem:
IOHIDServicesMatching:
_servicesForIOHIDServiceRefs:
setObserverQueue:
registerIOHIDServicesCallback:matchingDictionary:target:refCon:
_servicesAdded:
unregisterIOHIDServicesCallback:matchingDictionary:target:refCon:
matchingDictionary
setMatchingDictionary:
serviceClass
setServiceClass:
observerQueue
HIDSystem
setHIDSystem:
_startedMatching
_matchingDictionary
_serviceClass
_observerQueue
_HIDSystem
numberWithUnsignedInteger:
componentsJoinedByString:
_initWithDeviceOrientationManager:
setUnderlyingQueue:
hashTableWithWeakObjects
_queue_setUpdateInterval:
_queue_setInterruptEventThresholds:
_queue_resetDeviceOrientation
ignoreAccelerometerAndOrientationEvents
_systemAppDidExit:
_queue_setHIDService:
_queue_HIDService
_queue_setOrientationEventsEnabled:
_queue_setCurrentUserInterfaceOrientation:
_queue_isOrientationLocked
_queue_isDeviceLockedForAllTypes:
_queue_lockDeviceOrientation:deviceOrientation:
_queue_unlockDeviceOrientationForType:
_queue_updateDeviceOrientation:
_queue_updateDeviceOrientationWithTemporaryManager
_queue_updateDeviceOrientationFromCoreMotion:
startDeviceOrientationUpdatesToQueue:withHandler:
_queue_updateDeviceOrientationSynchronously
stopDeviceOrientationUpdates
_queue_setEffectiveDeviceOrientation:affectingLastEffectiveInterfaceOrientation:
_queue_setLastUnambiguousDeviceOrientation:
_queue_postUpdatedOrientation:
_queue_postUpdatedRawAccelerometerDeviceOrientation:
_queue_postUpdatedLastUnambiguousDeviceOrientation:
deviceOrientationBlocking
_queue_setCurrentRawAccelerometerDeviceOrientation:
_queue_noteEffectiveOrRawDeviceOrientationDidChange:
_queue_postDeviceOrientationLockChangedNotification:
_queue_postDeviceOrientationLockChangedNotification
_queue_isDeviceLockedForAtLeastOneType:
interruptEventThresholds
setInterruptEventThresholds:
updateInterval
setUpdateInterval:
setOrientationEventsEnabled:
currentRawAccelerometerDeviceOrientation
isDeviceOrientationLockedForType:
updateDeviceOrientation:
_systemAppDidCheckin:
_observerCalloutQueue
_queue_updateInterval
_queue_interruptEventThresholds
_queue_isOrientationEventsEnabled
_queue_lastUnambiguousRawAccelerometerDeviceOrientation
_queue_currentUserInterfaceOrientation
_queue_currentRawAccelerometerDeviceOrientation
_queue_lastEffectiveInterfaceOrientation
_queue_effectiveDeviceOrientation
_queue_orientationLocksEnabled
_queue_ignoreAccelerometerAndOrientationEventsForTesting
_queue_orientationManagerOperationQueue
_queue_orientationManager
_queue_HIDServiceMatcher
_notifyQueue
connectionWithConnection:
task
_connection
_task
setSystemAppEvent:
_systemAppEvent
_sendRight
_contextID
setValid:
initWithCopyOfPort:
watchForPortDeathOnQueue:block:
reference
setReference:
portDeathSentinel
setPortDeathSentinel:
_touchStreamIdentifier
_shouldSendAmbiguityRecommendations
_dispatchMode
_ambiguityRecommendation
_valid
_reference
_parent
_taskPort
_portDeathSentinel
enumeratorAtPath:
hasSuffix:
initWithContentsOfFile:options:error:
_fileNameForOverlay:
_filePathForOverlay:
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
fileURLWithPath:isDirectory:
setResourceValue:forKey:error:
createFileAtPath:contents:attributes:
stringByAppendingPathExtension:
rebuildPersistentOverlays
_rootPersistencePath
initWithFirstBootDetector:
currentOverlayWithLevel:
_firstBootDetector
_systemAppChanged:
object
lock_setSystemApp:
_cachedEntitlementResults
_queue_pidForBundleID:
clientForDestination:
_clientConnectionAdded:
_clientConnectionRemoved:
_hidEventSystem
_taskPortToClientConnectionMapping
_pidToClientConnectionMapping
_pidToBundleIDMapping
_hidConnectionToBKConnection
_connectionQueue
initWithSenderID:
accessibilityHIDServices
initWithKeyOptions:valueOptions:capacity:
_noteSystemAppDidExit:
initWithString:
isCycle
conciseDescription
_clientWithPid:clientID:
_updateDeferralPropertiesForAllDisplays
_propertiesWithFocusStartingWithProperties:
_destinationForFocusDeferralProperties:display:applyPolicy:
_startingPointOfFocusChainOnDisplay:
_focusPropertiesWithDisplay:
descriptorMatchSpecifiesDescriptor:withEventFocusProperties:
isTextualDescriptor
addUniqueDestinationToSet:destination:
_propertiesWithFocusStartingWithProperties:depth:iterationBlock:
orderedSet
_visitFocusClient:propertyStack:didEncounterCycleWithProperties:
_visitFocusClient:propertyStack:currentDeferralProperties:
destinationForFocusedEventWithProperties:
clientQueue
_pidToClientMapping
_foregroundAppBundleID
_foregroundAppPID
_systemAppControlsFocusOnMainDisplay
hidEventDescriptors
matchesDescriptor:
routerWithDestination:
addHIDEventDescriptors:
integerValue
clearDescriptorsForPID:
_descriptorMap
_initWithPersistenceCoordinator:orientationManager:backlightManager:windowServer:
_updateWindowServerUpdatesForOverlays:
_queue_updateStateForActiveOverlayChange
_queue_setOverlaysDisablingUpdates:
_queue_freezeOverlay:
_queue_setLockedOrientation:
_queue_setBacklightLocked:
disablesUpdates
setDisablesUpdates:
overlaysDisablingUpdates
backlightLocked
lockedOrientation
_windowServer
_orientationManager
_backlightManager
_activeOverlays
_overlaysDisablingUpdates
_lockedOrientation
_backlightLocked
initWithSystemAppSentinel:alternateSystemAppManager:bootUIOverlayVendor:renderOverlayManager:
_systemAppFinishedLaunching:
_systemAppExited:
hideAppleLogoOnLaunch
_queue_removeUnderlay
_queue_addUnderlay
_queue_updateOverlay
appendObject:withName:skipIfNil:
_queue_removeOverlayWithAnimationSettings:
_queue_addOverlay
_setInterstitial:
_bootUIOverlayVendor
_renderOverlayManager
_overlay
_isOverlaySustained
_underlay
initWithQueue:
setOpen:
_beginHandlingEvents
systemPropertyForKey:
setSystemProperty:forKey:
setHumanPresenceEventProcessor:
setSenderCache:
isFullyInitialized
setFullyInitialized:
_HIDEventSystem
_HIDEventSystemClient
_gsEventQueue
_open
_fullyInitialized
_humanPresenceEventProcessor
_senderCache
reusableDescriptorWithEventType:
reusableVendorDefinedDescriptorWithPage:usage:
digitizerInfoForService:
removeDigitizerInfoForService:
digitizerServiceToInfoMapping
setDigitizerServiceToInfoMapping:
touchStreams
setTouchStreams:
_digitizerServiceToInfoMapping
_touchStreams
initWithQueue:scheduler:
setMainDisplayDigitizerService:
digitizerServiceDidDetach:
_arbiterInfo
_waitForMainDisplayGroup
_digitizerMatcher
_mainDisplayDigitizerService
setObject:forKeyedSubscript:
_displayInfoForDisplay:createIfNeeded:
enumerateTouchStreamsForAllDisplaysUsingBlock:
scheduler
setScheduler:
perDisplayInfo
setPerDisplayInfo:
referenceToTouchStreamClientsMapping
setReferenceToTouchStreamClientsMapping:
previousVendedTouchStreamReference
setPreviousVendedTouchStreamReference:
_scheduler
_perDisplayInfo
_referenceToTouchStreamClientsMapping
_previousVendedTouchStreamReference
policyByCombiningPolicies:
ipc_addPolicy:
selector
getArgument:atIndex:
_xpcConnection
matchSharingTouchesPolicy:orCancelTouchesPolicy:orCombinedPolicy:
reducePolicyToObjectWithBlock:
invoke
assertionEndpoint
_policy
policyExcludingPolicy:
_queue_setPolicy:
policyIncludingPolicy:
setObject:atIndexedSubscript:
replacementObjectForXPCConnection:encoder:object:
connection:handleInvocation:isReply:
_assertionConnections
contents
_background
darkspinny
lightspinny
background
TI,N,V_background
observer
T@"<BKIOHIDServiceDisappearanceObserver>",W,N,V_observer
queue
T@"NSObject<OS_dispatch_queue>",W,N,V_queue
%@-%p.workQueue
PrimaryUsagePage
PrimaryUsage
Authenticated
Built-In
IAPHIDAccessoryCategory
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKIOHIDService.m
<Unknown File>
Invalid parameter not satisfying: %@
hidService
0x%llX
0x%X
v4@?0
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
displayUUID
T@"NSString",R,C,N
eventSource
Ti,R,N
senderID
TQ,R,N
primaryUsagePage
TI,R,N
primaryUsage
authenticated
TB,R,N,GisAuthenticated
builtIn
TB,R,N,GisBuiltIn
IOHIDService
T^{__IOHIDService=},N,V_IOHIDService
T@"NSString",C,N,V_displayUUID
Ti,N,V_eventSource
TQ,N,V_senderID
TI,N,V_primaryUsagePage
TI,N,V_primaryUsage
TB,N,GisAuthenticated,V_authenticated
TB,N,GisBuiltIn,V_builtIn
serviceStatus
Ti,N,V_serviceStatus
<unknown>
matched
disappeared
<bogus:%d>
.requestFence
.createAssertion
v8@?0@"NSObject<OS_xpc_object>"4
-[BKFenceArbiterServer queue_handleMessage:client:]
com.apple.backboard.animation-fence-arbiter.transaction
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKFenceArbiter.m
_caFencePort should be MACH_PORT_NULL
_caFence should be nil
_preFenceReceiveRight should be nil
_preFenceTriggerReceiveRight should be nil
could not recv notify msg
failed to set up MACH_NOTIFY_NO_SENDERS result=%i
previous notification port should be MACH_PORT_NULL
_caFencePort must be a valid port number
_caFence should not be nil
_fenceName cannot be 0
systemAnimationFence failure: _preFenceReceiveRight
systemAnimationFence failure: _preFenceTriggerReceiveRight
systemAnimationFence failure: preFence {caFence=%x preFence=%x preFenceTrigger=%x}
systemAnimationFence failure: preFenceTrigger {caFence=%x preFence=%x preFenceTrigger=%x}
systemAnimationFence failure: handle {caFence=%x preFence=%x preFenceTrigger=%x}
systemAnimationFence failure: assertion {caFence=%x preFence=%x preFenceTrigger=%x}
currentTime
Td,N,V_currentTime
com.apple.backboardd
touchCount
maxForce
determinedMaxForce
currentDestination
service
T@"BKIOHIDService",&,N,V_service
T@"BKEventDestination",&,N,V_currentDestination
Ti,N,V_touchCount
Tf,N,V_maxForce
TB,N,V_determinedMaxForce
BKTouchPadQueue
v16@?0@"NSNumber"4@"BKTouchPadInfo"8^B12
v16@?0@"BKIOHIDService"4I8^B12
DeviceUsagePage
DeviceUsage
DeviceUsagePairs
-[BKDigitizerEventSchedulerWithDisplayLink scheduleEvent:fromDigitizer:toClient:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKDigitizerEventSchedulerWithDisplayLink.m
event
v8@?0B4
displayLink
T@"CADisplayLink",R,N,V_displayLink
State
v12@?0@4^B8
state
Ti,N,V_state
gestureRecognizers
T@"NSSet",R,N,G_gestureRecognizers
delegate
T@"<BKGestureRecognizerDelegate>",N,V_delegate
Possible
Began
Ended
BKGestureRecognizerEngine
_BKHIDXXGetBacklightFactor
_BKHIDXXSetBacklightFactorPending
_BKHIDXXSetBacklightFactorWithFadeDuration
_BKHIDXXSetBacklightFactorWithFadeDurationAsync
_BKHIDXXSetMinimumBrightnessLevelWithFadeDuration
_BKHIDXXAmbientLightSensorExists
_BKHIDXXAmbientLightSensorDisableAutoBrightness
_BKHIDXXAmbientLightSensorEnableAutoBrightness
_CoreHIDRequestProximityDetectionMode
_BKHIDXXRequestProximityDetectionMode
_BKHIDXXRequestEstimatedProximityEvents
_BKHIDXXResetProximityCalibration
_BKHIDXXSetProximityEventsClient
_BKHIDXXSetObjectInProximityIgnoresTouches
_BKHIDXXSetHIDUILockedState
_BKHIDXXSetPocketTouchesExpected
kern_return_t _BKHIDXXSetVolumeAndPowerButtonPrecedence(mach_port_t, uint8_t, audit_token_t)
B8@?0@4
v12@?0@"BKSEventFocusDeferral"4^B8
_BKHIDXXSystemAppControlsFocusOnMainDisplay
_BKHIDXXSetForegroundApplicationOnMainDisplay
_BKHIDXXCancelTouchesOnAllDisplays
_BKHIDXXCancelTouchesOnDisplay
_BKHIDXXCancelTouchesWithIdentifiers
_BKHIDXXSetHitTestRegionsForDisplay
_BKHIDXXApplyButtonDefinitions
_BKHIDXXTouchStreamCreate
_BKHIDXXTouchStreamSetEventDispatchMode
_BKHIDXXTouchStreamInvalidate
_BKHIDXXDigitizerTouchDetach
_BKHIDXXDigitizerTouchDetach_block_invoke
_BKHIDXXDigitizerTouchSetOffset
_BKHIDXXSetResetIdleCompatibilityHackEnabled
_BKHIDXXResetUserEventTimer
_BKHIDXXNotifyOnNextUserEvent
_BKHIDXXGetLastUserEventTime
_BKHIDXXSetDeviceInterfaceOrientation
_BKHIDXXSetOrientationClient
_BKHIDXXLockOrientation
_BKHIDXXUnlockOrientation
_BKHIDXXIsOrientationLockedWithOrientation
%@:%d
_BKHIDXXSetDisplayBrightnessValue
_BKHIDXXSetDisplayBrightnessCurveValue
_BKHIDXXRestoreSystemDisplayBrightness
_BKHIDXXSetAutoDisplayBrightnessEnabled
_BKHIDXXSetEventRouters
_BKHIDXXSetStackshotCombos
@8@?0@4
_BKHIDXXSetTouchHand
_BKHIDXXSetWristState
BKSDisplayRenderOverlayDescriptor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKDisplayBootUIRenderOverlay.m
Invalid condition not satisfying: %@
descriptor != nil
[descriptor isKindOfClass: BKSDisplayRenderOverlayDescriptorClass]
DeviceColorMapPolicy
Already have a context
bounds
Content layer not set
Couldn't create remote context
opacity
%x (%u)
contextID
contentLayer
T@"CALayer",R,N,V_contentLayer
lightBackground
TB,R,N,G_useLightBackground,V_lightBackground
T{CGRect={CGPoint=ff}{CGSize=ff}},N,G_bounds,S_setBounds:
com.apple.backboard.systemAppHeartbeat
<CFRunLoopSource MIG Server> {port = %u, subsystem = %p, context = %p}
<CFRunLoopSource MIG Server> mach_msg send error in reply: %s
descriptor
sender
dataLength
dataPtr
data
T*,R,N
backboardd.firstboot_check
isTokenSet
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKHIDEvent.m
senderInfo
hidEvent
T@"BKSHIDEventDescriptor",N,V_descriptor
T@"<BKHIDEventSenderInfo>",N,V_senderInfo
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKEventClient.m
use initWithPid:...
<%@: (pid: %d) %p>
v8@?0@"<BKEventClientDelegate>"4
_queue_invalidated
name
0x%x
port
T@"<BKEventClientDelegate>",N
Ti,R,N,V_queue_pid
sendRight
T@"BSMachPortSendRight",R,&,N,V_queue_sendRight
bkbundle
v8@?0#4
com.apple.backboard.BKTouchDeliveryObservationManager-touchMap
CAWindowServerDisplay:%p size:{%g,%g} scale:%g orientation:%g external:%d
v16@?0@"CADisplay"4I8^B12
com.apple.backboardd.libnotify-workaround
com.apple.springboard.hasBlankedScreen
void BKDisplayStartWindowServer()
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKDisplay.m
No window server display found
CADisplay
CGImageRef BKDisplayCaptureImage(CADisplay *)
display != nil
[display isKindOfClass: CADisplayClass]
com.apple.backboard.display.services
MainDisplayRotation
TVOut
screen-dimensions
main-screen-scale
CGFloat BKMainDisplayScale(void)_block_invoke
MainScreenScale is not valid: %f
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKDisplayRenderOverlayImage.m
_context == nil
BKDisplayRenderOverlayImage:%@
kern.progressoptions
image
T^{CGImage=},R,N
v8@?0@"NSNotification"4
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKHIDEventRouterManager.m
don't call this
cachedDescriptorsToRouterDestinations
T@"NSMapTable",&,N,V_cachedDescriptorsToRouterDestinations
_BKDisplayXXSetScreenBlanked
_BKDisplayXXWillUnblank
_BKDisplayXXIsDisabled
_BKDisplayXXSetDisabled
_BKDisplayXXSetReplayCloneContextIDs
_BKDisplayXXSetCloneMirroringMode
_BKDisplayXXSetVirtualDisplayClientPID
_BKDisplayXXDisplayIsTethered
_BKDisplayXXTetherPrefsNeedImmediateUpdate
_BKDisplayXXSetTetheredOrientationNotificationsDisabled
_BKDisplayXXUpdateTetheredDisplayOrientationIfNecessaryWithInterfaceOrientation
_BKDisplayXXUpdateMirroredDisplayOrientationWithInterfaceOrientation
_BKDisplayXXSetRefreshRateSettings
_BKDisplayXXApplyRenderOverlay
_BKDisplayXXRemoveRenderOverlay
_BKDisplayXXFreezeRenderOverlay
_BKDisplayXXRenderOverlay
_BKDisplayXXDismissInterstitialRenderOverlay
_BKDisplayXXSetSecureMode
v12@?0@"BKDisplayRenderOverlay"4^B8
com.apple.PreBoard
OverrideURL
file:///Applications/PreBoard.app
OverrideAppType
System
-[BKAlternateSystemApp launch]
Hidden
Internal
.jail.
com.apple.frontboard.systemappservices
com.apple.frontboard.workspace
BKSLaunchdPlist
MachServices
AlternateMachServices
v16@?0@"NSString"4@"NSString"8^B12
-[BKAlternateSystemApp _noteLaunchFailed:]
-[BKAlternateSystemApp _noteLaunchSucceeded]
-[BKAlternateSystemApp _noteExitedWithContext:]
bundleID
options
T@"NSString",C,N,V_bundleID
T@"NSDictionary",C,N,V_options
process
T@"BKSProcess",&,N,V_process
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"<BKAlternateSystemAppDelegate>",N,V_delegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKDisplayRenderOverlay.m
Must dismiss before releasing
Can't freeze a hidden overlay
level
visible
display
T@"CADisplay",R,&,N
interfaceOrientation
lockBacklight
TB,R,N
progressIndicatorProperties
T@"BKSDisplayProgressIndicatorProperties",R,N
interstitial
TB,R,N,GisInterstitial
persistenceCoordinator
T@"BKDisplayRenderOverlayPersistenceCoordinator",&,N,G_persistenceCoordinator,S_setPersistenceCoordinator:,V_persistenceCoordinator
type
Ti,N,S_setType:,V_type
scale
Tf,N,G_scale,S_setScale:,V_scale
T@"BKSDisplayRenderOverlayDescriptor",R,&,N,V_descriptor
Tf,R,N,V_level
disablesDisplayUpdates
TB,R,N,V_disablesDisplayUpdates
animates
TB,N,V_animates
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKButtonComboPressGestureRecognizer.m
keyboardDescriptors
hidSystem
T@"BKHIDSystemInterface",&,N,V_hidSystem
systemAppSentinel
T@"BKSystemAppSentinel",&,N,V_systemAppSentinel
-[BKGSEventSystem _handleEvent:]
resetIdleHackEnabled
TB,N,GisResetIdleHackEnabled,V_resetIdleHackEnabled
%d (%@)
requestedMode
valid
TB,R,N,GisValid
Ti,V_requestedMode
AssertType
NoIdleSleepAssertion
AssertLevel
AssertName
com.apple.backboardd.pocketDetection
-[BKProximitySensorInterface _queue_requestEstimatedProximityEventsWithTimeout:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKProximitySensorInterface.m
IsBKProximityDetectionModeSupportedForClientRequests(proxMode)
-[BKProximitySensorInterface clientRequestedProximityMode:processID:clientPort:]
estimatedProxShutoffTimer
T@"NSObject<OS_dispatch_source>",&,N,V_estimatedProxShutoffTimer
estimatedProxPowerAssertionID
TI,N,V_estimatedProxPowerAssertionID
sensorHardware
T@"BKProximitySensorHardwareBase",&,N,V_sensorHardware
disabled
TB,N,GisDisabled,V_disabled
objectWithinProximityShouldIgnoreTouches
TB,N,V_objectWithinProximityShouldIgnoreTouches
none
standard
passive
passiveMonitoring
passiveEngaged
active
estimated
locked
supportsSecureCoding
TB,R
Tf,N,V_level
overlayType
Ti,N,V_overlayType
T@"BKSDisplayRenderOverlayDescriptor",&,N,V_descriptor
T^{CGImage=},N,V_image
/System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons
### Failed to Soft Linked: /System/Library/PrivateFrameworks/MobileIcons.framework/MobileIcons
LICreateImageFromUncompressedBitmapData
LICreateUncompressedBitmapDataFromImageWithOptions
imageData
com.apple.backboard.securityManager
entitlementCache
T@"<BKEntitlementCache>",&,D,N
BKSendGSEvent
BKKeyboardDispatchQueue
DOWN
%@.%d%@%@
@%dx
.png
~iphone
~ipad
~appletv
~watch
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKImageSequence.m
imageIndex < _maximumImageCount
images
T@"NSPointerArray",&,N,V_images
bundle
T@"NSBundle",&,N,V_bundle
basename
T@"NSString",C,N,V_basename
idiomSuffix
T@"NSString",&,N,V_idiomSuffix
maximumImageCount
Ti,R,N,V_maximumImageCount
Tf,R,N,V_scale
DisplayBrightnessFactor
DisplayBrightnessFactorPending
DisplayBrightnessFadePeriod
DisplayBrightnessFactorWithFade
com.apple.backboardd.backlight.changed
BacklightCapability
v12@?0@"NSString"4@8
BrightnessMinPhysicalWithFade
BrightnessMinPhysical
Brightness
Commit
DisplayInitialBrightness
DisplayBrightness
BrightnessCurveLevel
DisplayBackLightArchitecture
FreezeBrightnessEnable
FreezeBrightnessRequestors
FreezeBrightnessPeriod
FreezeBrightness
digitizerSignpostsEnabled
v12@?0^{BKDigitizerInfo=@@@^{?}[30{BKTouchEventInfo={CGRect={CGPoint=ff}{CGSize=ff}}{CGRect={CGPoint=ff}{CGSize=ff}}III{CGPoint=ff}{BKPointTriple=BBB{CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}@{CGPoint=ff}BBB{DynamicArray<BKDigitizerContext, 10>=^{BKDigitizerContext}II[10{BKDigitizerContext=II}]B}[10{BKDigitizerContext=II}]@}]^{?}{Dictionary<BKDigitizerContext, BKPerContextHandInfo>={DynamicArray<BKDigitizer::Dictionary<BKDigitizerContext, BKPerContextHandInfo>::Node, 10>=^{Node}II[10{Node={BKDigitizerContext=II}{BKPerContextHandInfo={BKPathIndexSet=I}d}B}]B}I}{Dictionary<unsigned int, BKCentroidCalculator>={DynamicArray<BKDigitizer::Dictionary<unsigned int, BKCentroidCalculator>::Node, 10>=^{Node}II[10{Node=I{BKCentroidCalculator=i{CGPoint=ff}}B}]B}I}{DynamicArray<BKDigitizerContext, 10>=^{BKDigitizerContext}II[10{BKDigitizerContext=II}]B}{BKPathIndexSet=I}{BKPathIndexSet=I}i{BKPathIndexSet=I}d^{?}@^{BKPendingUpdateEvent}fBB}4@"BKDigitizerTouchStreamAggregate"8
v8@?0@"BKDigitizerArbiterInfo"4
v12@?0r^{BKDigitizerContext=II}4r^{BKPathIndexSet=I}8
v8@?0@"BKDigitizerTouchStreamClient"4
void _arbiter_BKDigitizerHandleUpdateEventForDigitizerWithInfo(IOHIDEventRef, BKDigitizerInfo *, BKDigitizerTouchStreamAggregate *)_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKDigitizer.mm
pathID:%ld >= MAX_PATH_COUNT
v20@?0^{__IOHIDEvent=}4I8l12^B16
void _arbiter_BKDigitizerHandleUpdateEventForDigitizerWithInfo(IOHIDEventRef, BKDigitizerInfo *, BKDigitizerTouchStreamAggregate *)
pending/removed items don't match: %@/%@
clientPort
v16@?0r^{BKDigitizerContext=II}4^{__IOHIDEvent=}8r^{DynamicArray<BKSDigitizerEventSubEventInfo, 30>=^{?}II[30{?=IIICf{?=ffff}}]B}12
v12@?0r^{BKDigitizerContext=II}4r^{EventItem=^{__IOHIDEvent}{DynamicArray<BKSDigitizerEventSubEventInfo, 30>=^{?}II[30{?=IIICf{?=ffff}}]B}}8
unspecified
sending
stealing
ignoring
defer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKDigitizerInfo_Internal.h
pathIndex < MAX_PATH_COUNT
v12@?0r^{BKDigitizerContext=II}4r^{BKPerContextHandInfo={BKPathIndexSet=I}d}8
CFIndex BKDigitizerUpdateGenerationCount(IOHIDEventRef)
passing a NULL IOHIDEventRef is not recommended
generation: %ld%@
[%lu] pathID:%lu mask:%lX
 <client port:%x contextID:%x pathIDMask:%lX>
_arbiter_BKDigitizerCreateHandHIDEventFromPathCollectionForClient
pathCollectionEvent
pathEvents
RemovePathIndex
_arbiter_BKDigitizerCreateSystemGestureEventFromPathCollectionEvent
BKPendingUpdateEvent *_arbiter_BKDigitizerSaveClientExpectingEventUpdates(IOHIDEventRef, BKDigitizerInfo *, mach_port_t, uint32_t)
must be a digitizer event
this is Unix, that can't happen
too many clients
BKPendingUpdateEvent *_arbiter_BKDigitizerSaveClientExpectingEventUpdates(IOHIDEventRef, BKDigitizerInfo *, mach_port_t, uint32_t)_block_invoke
pathID (%ld) >= MAX_PATH_COUNT
v16@?0^{__IOHIDEvent=}4I8^B12
_arbiter_BKDigitizerSynthesizeAndPostEvents_block_invoke
clientEvent
v16@?0r^{BKDigitizerContext=II}4I8r^{DynamicArray<BKDigitizer::TransformedPathLocation, 16>=^{TransformedPathLocation}II[16{TransformedPathLocation=i{BKPointTriple=BBB{CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}i}]B}12
_arbiter_BKDigitizerDetermineContextsInterestedInTouchesInEvent
void _arbiter_BKDigitizerDetermineContextsInterestedInTouchesInEvent(BKDigitizerInfo *, const IOHIDEventRef, BKHandHitInfo *, BOOL *, BKDigitizer::PerContextHitTestResults &)
shouldn't be hit testing an update subevent
MAX_HOST_DEPTH > hostingChainClientCount
_policy
v12@?0r^{BKDigitizerContext=II}4r^{TransformedPathLocation=i{BKPointTriple=BBB{CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}i}8
v16@?0@"BKSHitTestRegion"4I8^B12
v12@?0r^{ContextWithUserIdentifier={BKDigitizerContext=II}I}4r^{DynamicArray<BKDigitizer::TransformedPathLocation, 16>=^{TransformedPathLocation}II[16{TransformedPathLocation=i{BKPointTriple=BBB{CGPoint=ff}{CGPoint=ff}{CGPoint=ff}}i}]B}8
_arbiter_BKDigitizerHandlePathCollectionEventForDigitizerWithInfo_block_invoke
_BKPathCollectionEventTouchingPathCount
updatePathZGradientInfoForPathCollectionEvent
down
com.apple.backboard.HIDEventSenderCache
senderIDToSenderInfo
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKHIDEventSenderCache.m
senders != nil
T@"NSMutableDictionary",&,N,V_senderIDToSenderInfo
com.apple.BKHumanPresenceHIDEventProcessor
sensors
displayUUIDToSensorRecords
T@"NSMutableDictionary",&,N,V_queue_displayUUIDToSensorRecords
presenceServiceMatcher
T@"BKIOHIDServiceMatcher",&,N,V_presenceServiceMatcher
proximityServiceMatcher
T@"BKIOHIDServiceMatcher",&,N,V_proximityServiceMatcher
mainDisplay
testDisplay
UsagePage
Usage
SetButtonPriority
SetButtonProperties
source
phase
pressCount
longPress
Ringer
ObsoleteHold
Headset
HeadsetAvailability
Menu
SystemWakeUp
Microphone
Home
Side
DigitalWallet
Snapshot
ACHome
VolumeDecrement
VolumeIncrement
Lock
VoiceCommand
Slideshow
ScanPreviousTrack
Rewind
ScanNextTrack
FastForward
PlayOrPause
Play
Pause
ACSearch
ToggleMute
ToggleRepeat
ToggleShuffle
PlaybackSpeedNormal
PlaybackSpeedFaster
PlaybackSpeedSlower
Like
Dislike
AddToWishlist
DisplayBrightnessIncrement
DisplayBrightnessDecrement
SmartCoverOpen
SmartCoverFlap1
SmartCoverFlap2
SmartCoverFlap3
SmartCoverStateUnknown
BrightnessDown
BrightnessUp
Unknown
:%@ 
:0x%lX 
:%d 
began
timeout
long press
unknown
com.apple.backboardd.idletimer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKUserEventTimer.m
this object should never deallocate
_firstBootToken
alternateSystemAppManager
T@"BKAlternateSystemAppManager",&,N,V_alternateSystemAppManager
firstBoot
TB,R,N,GisFirstBoot
v16@?0@"NSString"4I8^B12
DisplayBrightnessAuto
BKALSWeightMax
DisplayBrightnessAutoWeightMax
BKALSWeightMin
DisplayBrightnessAutoWeightMin
BKALSIntPeriod
ALSIntPeriod
BKALSIntPeriodOrientationEnabled
ALSIntPeriodOrientationEnabled
BKALSIntPeriodOrientationLandscape
ALSIntPeriodOrientationLandscape
BKALSIntPeriodOrientationPortrait
ALSIntPeriodOrientationPortrait
BKALSIntPeriodOrientationPortraitInv
ALSIntPeriodOrientationPortraitInv
BKHIDSessionLogLevel
LogLevel
BKALSFadeSlope
DisplayBrightnessFadeSlope
BKHIDALSInternalSettings
ALSInternalSettings
ALSEnabled
ALSUserPreference
ALSResetCurve
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKButtonPressGestureRecognizer.m
keyboardDescriptor
T@"BKSHIDEventKeyboardDescriptor",&,N,V_descriptor
BKKeyboardManagerQueue
BKKeyboardManagerCalloutQueue
v16@?0@"BKGestureRecognizer"4I8^B12
_attachedKeyboards
_usableKeyboards
@8@?0@"BKIOHIDService"4
v16@?0@"BKKeyboardInfo"4I8^B12
keyboardServiceMatcher
T@"BKIOHIDServiceMatcher",&,N,V_keyboardServiceMatcher
attachedKeyboards
T@"NSArray",R,C,N
T@"<BKKeyboardManagerDelegate>",N,V_delegate
Backlight
BootUI
Button
IdleTimer
Keyboard
ProximitySensor
RenderOverlay
SystemAppSentinel
TouchEvents
TouchDeliveryPolicy
Accelerometer
KeyPresses
MotionEvents
SendHIDEvent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKEventFocusClient.m
pid > 0
clientID
deferrals
T@"NSString",C,N,V_clientID
T@"NSSet",&,N,V_deferrals
-[BKDigitizerEventSchedulerBase scheduleEvent:fromDigitizer:toClient:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKDigitizerEventScheduler.m
digitizer
MACH_PORT_VALID(clientTaskPort)
enqueuedEventBlocks
T@"NSMutableArray",&,N,V_enqueuedEventBlocks
not supported on this platform
proximityService
T@"BKIOHIDService",&,V_proximityService
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKAccelerometerInterface.m
this object should not be deallocated
v8@?0@"BKAccelerometerClient"4
eventsEnabled
clients
systemAppOrientationClient
v12@?0@"BKAccelerometerClient"4^B8
BKAlternateSystemAppManagerDidBlockSystemApp
BKAlternateSystemAppManagerDidUnblockSystemApp
com.apple.backboardd.altsysapp
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKAlternateSystemAppManager.m
dealloc'ing without calling the exit block
dealloc'ing without calling the open result block
openBundleId
T@"NSString",C,N,V_openBundleId
pendingOpenResultBlock
T@?,C,N,V_pendingOpenResultBlock
pendingExitBlock
T@?,C,N,V_pendingExitBlock
alternateSystemApp
T@"BKAlternateSystemApp",&,N,V_alternateSystemApp
blockingSystemApp
TB,N,GisBlockingSystemApp,S_setBlockingSystemApp:,V_blockingSystemApp
BKTetherControllerTetherStateChangedNotification
com.apple.mobile.demo_mode_changed
com.apple.mobile.demo.mode-%d
com.apple.backboardd.deviceinterfaceorientation
displayport
orientationNotificationDisabled
TB,N,GisOrientationNotificationDisabled,V_orientationNotificationsDisabled
BKStarkSimulatorDidConnectNotification
BKStarkSimulatorDidDisconnectNotification
com.apple.backboardd.BKTVOutController.workQueue
currentMode
Wireless
availableModes
PurpleTVOut
SIMULATOR_EXTENDED_DISPLAY_PROPERTIES
stark
display-mirroring
com.apple.TVOut.preferredMode.hres
com.apple.TVOut.preferredMode.vres
com.apple.iapd.videoout.SettingsChanged
kIAPDServerDiedNotification
tvOutMode
Ti,V_tvOutMode
replayCloneContextIDs
T@"NSSet",&,N
com.apple.CoreAnimation.CAWindowServer.SecureModeViolation
v8@?0i4
secureModeEnabled
TB,GisSecureModeEnabled,V_secureModeEnabled
FBSSystemService
/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
### Failed to Soft Linked: /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
FBSOpenApplicationOptionKeyActions
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKDisplayRenderOverlayPinkForTesting.m
Already have a _context
Testing
System/Library/AccessibilityBundles/BackBoard.axbundle
checkedIn
pendingCheckIn
finishedStartup
bundleIdentifier
T@"NSString",C,N,V_bundleIdentifier
bundlePath
T@"NSString",C,N,V_bundlePath
jobLabel
T@"NSString",C,N,V_jobLabel
systemIdleSleepInterval
Td,N,V_systemIdleSleepInterval
Ti,R,N,V_pid
connectDate
T@"NSDate",&,N,V_connectDate
TB,N,V_pendingCheckIn
TB,N,V_checkedIn
TB,N,V_finishedStartup
eventRouters
T@"NSArray",C,N,V_eventRouters
wantsOrientationEvents
passiveEvents
wantsAccelerometerEvents
lastAccelerometerEventTimestamp
Td,N,G_lastAccelerometerEventTimestamp,S_setLastAccelerometerEventTimestamp:,V_lastAccelerometerEventTimestamp
TB,N,V_wantsAccelerometerEvents
accelerometerUpdateInterval
Td,N,V_accelerometerUpdateInterval
xThreshold
Tf,N,V_xThreshold
yThreshold
Tf,N,V_yThreshold
zThreshold
Tf,N,V_zThreshold
passiveOrientationEvents
TB,N,V_passiveOrientationEvents
TB,N,V_wantsOrientationEvents
BKSystemAppSentinelChangedSystemAppNotification
BKSystemApplicationDidFinishLaunchingNotification
BKSystemApplicationDidExitNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKSystemAppSentinel.m
this shouldn't dealloc
systemAppBlocked
systemApp
connectedSystemApps
v12@?0@"BKSystemApplication"4^B8
BKDisplayBrightnessDidChangeNotification
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKDisplayBrightnessInterface.m
_invalidated == YES
(implicit)
BKDisplayBrightnessUpdateTransaction
identifier
There shouldn't be a negative number of pending transactions
shouldActivateByGesture
keyboardLanguage
keyboardLayout
countryCode
keyboardType
keyDownCount
swallowEvents
capsLockOn
capsLockRomanSwitchMode
gsKeyboard
KeyboardEnabled
KeyboardEnabledEvent
EventType
keyboardActivationEventDescriptor
T@"BKSHIDEventDescriptor",&,N,V_keyboardActivationEventDescriptor
TI,N,V_keyDownCount
TB,N,GshouldSwallowEvents,V_swallowEvents
TB,N,GisCapsLockOn,V_capsLockOn
TB,N,V_capsLockRomanSwitchMode
TC,N,V_countryCode
TI,N,V_keyboardType
T@"NSString",C,N,V_keyboardLayout
T@"NSString",C,N,V_keyboardLanguage
_gsKeyboard
T^{__GSKeyboard=},R,N,V__gsKeyboard
TB,R,N,V_shouldActivateByGesture
keyboardActive
TB,R,N,GisKeyboardActive
keyboardActivationChangeEventDescriptor
T@"BKSHIDEventDescriptor",R,N
lastOrientation
_wrapRunLoopWithAutoreleasePoolHandler
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKAutoreleasePoolRunLoopSupport.m
count > 0
com.apple.backboard.client
com.apple.backboardd.replacesystemapp
com.apple.backboard.displaybrightness
com.apple.backboardd.lastUserEventTime
com.apple.backboardd.proximityDetection
com.apple.backboardd.estimatedProximityDetection
com.apple.backboardd.hostCanRequireTouchesFromHostedContent
com.apple.backboardd.cancelsTouchesInHostedContent
com.apple.backboardd.touchStreams
com.apple.backboardd.detachTouches
com.apple.backboardd.cancelTouches
com.apple.backboardd.virtualDisplay
com.apple.backboardd.disableDisplays
com.apple.backboardd.replayClone
com.apple.backboardd.touchDeliveryObservation
ReceiverProximityReset
InputDetectionMode
lockedWakeAndMuteMonitoring
faceExpected
facePresent
faceMonitoring
faceExpectedFromMonitoring
pocketTouchesExpected
pocketTouchesExpectedAndFaceMonitoring
BK:%@ HID:%@
lockedHIDMode
Ti,V_lockedHIDMode
hall-effect-sensor
closed
open
engaged
disengaged
smartCoverSupported
TB,R,N,GisSmartCoverSupported
hidSystemInterface
T@"BKHIDSystemInterface",&,N,V_hidSystemInterface
supportedSensors
TI,N,V_supportedSensors
sensorsRequiredForOpenState
TI,N,V_sensorsRequiredForOpenState
disengagedSensors
TI,N,V_disengagedSensors
attached
TB,N,GisAttached,V_attached
unknownState
TB,N,GisUnknownState,V_unknownState
smartCoverClosed
TB,R,N,GisSmartCoverClosed
puiProgressWindow
com.apple.backboard.watchdog
status
proximityInCentimeters
humanIsPresent
services
T@"NSMutableArray",&,N,V_services
TI,N,V_status
Tf,N,V_proximityInCentimeters
TB,N,V_humanIsPresent
Retrieving stackshot via backboardd
T@"NSMutableArray",R,N,V_clients
com.apple.backboard.altsysapp
com.apple.backboard.altsysappserver
v8@?0@"BKSProcessExitContext"4
xpcListener
T@"NSXPCListener",&,N,V_xpcListener
clientConnection
T@"NSXPCConnection",&,N,V_clientConnection
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKSmartKeyboardGestureRecognizer.m
keyboard
eventDescriptor
activationChangeEventDescriptor
T@"BKKeyboardInfo",&,N,V_keyboard
T@"BKSHIDEventDescriptor",&,N,V_activationChangeEventDescriptor
.calloutQueue
v8@?0@?<v@?>4
-[BKSystemApplicationServer queue_handleMessage:client:]
T@"<BKSystemApplicationServerDelegate>",N,V_delegate
com.apple.backboardd.migration
/tmp/RestoreRunning
~/Library/Calendar/Calendar.sqlitedb.restored
~/Library/AddressBook/AddressBook.sqlitedb.restored
~/Library/AddressBook/AddressBookImages.sqlitedb.restored
~/Library/SpringBoard/IconState.plist.restored
~/Library/Preferences/com.apple.springboard.plist.restored
com.apple.backboardd.hid.focus-server
com.apple.backboard.hid.focus
v12@?0@"BKSEventFocusDeferralProperties"4^B8
DisplayIntegrated
TRUE
FALSE
ALSRequiresProx
com.apple.backboard.proximity.changed
digitizerServiceMatcher
T@"BKIOHIDServiceMatcher",&,N,V_digitizerServiceMatcher
eventDestination
T@"BKEventDestination",&,V_eventDestination
objectWithinProximity
TB,GisObjectWithinProximity,V_objectWithinProximity
proximityDetectionInActiveMode
TB,GisProximityDetectionInActiveMode,V_proximityDetectionInActiveMode
digitizerService
T@"BKIOHIDService",&,N,V_digitizerService
baseMode
Ti,V_baseMode
lockSource
TI,N,V_lockSource
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKIOHIDServiceMatcher.m
dealloc without invalidation
already started matching -- only one observer per matcher, plz
must have a HIDSystem
v16@?0@4I8^B12
matchingDictionary
T@"NSDictionary",C,N,V_matchingDictionary
serviceClass
T#,N,V_serviceClass
T@"<BKIOHIDServiceMatchObserver>",W,N,V_observer
observerQueue
T@"NSObject<OS_dispatch_queue>",W,N,V_observerQueue
HIDSystem
T@"BKHIDSystemInterface",&,N,V_HIDSystem
user
system
overlay
(%@)
com.apple.backboardd.orientationManager
com.apple.backboardd.orientationManager.observerCallout
com.apple.backboardd.orientationManagerNotify
ThresholdX
ThresholdY
ThresholdZ
ThresholdPeriod
Shake
ReportInterval
v12@?0@"CMDeviceOrientation"4@"NSError"8
com.apple.backboardd.orientation
com.apple.backboardd.rawOrientation
com.apple.backboardd.unambiguousOrientation
com.apple.backboardd.orientationlock
queue_HIDService
T@"BKIOHIDService",&,N,G_queue_HIDService,S_queue_setHIDService:,V_queue_HIDService
interruptEventThresholds
Tf,N
updateInterval
Td,N
orientationEventsEnabled
TB,N,GisOrientationEventsEnabled
currentUserInterfaceOrientation
Ti,N
currentRawAccelerometerDeviceOrientation
lastEffectiveInterfaceOrientation
effectiveDeviceOrientation
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKHIDClientConnection.m
The connection %@ doesn't have a pid set
The connection %@ doesn't have a bundleID
IOHIDEventSystemConnectionRef
taskPort
isSystemAppEvent
T@"NSString",R,C,N,V_clientID
T@"BSMachPortSendRight",&,N,V_sendRight
TI,N,V_contextID
systemAppEvent
TB,N,GisSystemAppEvent,V_systemAppEvent
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKDigitizerTouchStreamClient.m
dealloc without previous -invalidate
isValid
dispatchMode
ambiguityRecommendation
TB,GisValid,V_valid
portDeathSentinel
T@"BSPortDeathSentinel",&,N,V_portDeathSentinel
reference
TI,N,V_reference
parent
T@"BKDigitizerTouchStreamAggregate",N,V_parent
TI,N,V_taskPort
touchStreamIdentifier
TC,N,V_touchStreamIdentifier
shouldSendAmbiguityRecommendations
TB,N,V_shouldSendAmbiguityRecommendations
TC,N,V_dispatchMode
TC,N,V_ambiguityRecommendation
libitmap
TMPDIR
/tmp
%@|%@
main
com.apple.backboard.entitlement.cache
BKHIDEventSystemClientConnectionQueue
TaskPort->ClientConnection
pid->ClientConnection
pid->bundleID
HIDConnection->BKConnection
systemAppControlsFocusOnMainDisplay
foregroundAppBundleID
foregroundAppPID
pidToClientMapping
source -> destination -- client
(pid:%d clientID:%@ display:%@ contextID:%X) -> (pid:%d clientID:%@ display:%@ contextID:%X) %@ clientID:%@ pid:%d
**cycle** 
(none)
clientQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_clientQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKDisplayRenderOverlayManager.m
windowServer
backlightManager
orientationManager
activeOverlays
v16@?0@"CAWindowServerDisplay"4I8^B12
T@"NSMutableSet",R,&,N,V_activeOverlays
overlaysDisablingUpdates
T@"NSMutableSet",R,&,N,V_overlaysDisablingUpdates
lockedOrientation
Ti,R,N,V_lockedOrientation
backlightLocked
TB,R,N,V_backlightLocked
hideAppleLogoOnLaunch
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKBootUIPresenter.m
Must dismiss overlay / underlay before releasing
_overlay
_underlay
showingBootUI
TB,R,N,GisShowingBootUI
com.apple.backboard.gsEventQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKHIDSystemInterface.m
IOHIDEventSystem creation failed
Failed to open HID system fullly
BKHID: Failed to create system client
_open
_HIDEventSystem
TB,GisOpen,V_open
fullyInitialized
TB,GisFullyInitialized,V_fullyInitialized
humanPresenceEventProcessor
T@"BKHumanPresenceHIDEventProcessor",&,N,V_humanPresenceEventProcessor
senderCache
T@"BKHIDEventSenderCache",&,V_senderCache
BKHIDZone
com.apple.backboard.hid.services
com.apple.button.lisa.rotate.ccw
com.apple.button.lisa.rotate.cw
void _BKHID_zoneAllocator_Release(const void *)
BKHIDZone allocator is a singleton and should never be released
BKHIDZoneAllocator
digitizerServiceToInfoMapping
T@"NSMapTable",&,N,V_digitizerServiceToInfoMapping
touchStreams
T@"BKDigitizerTouchStreamAggregate",&,N,V_touchStreams
BKDigitizerInfoArbiterDispatchQueue
mainDisplayDigitizerService
T@"BKIOHIDService",&,V_mainDisplayDigitizerService
-[BKDigitizerArbiterInfo digitizerServiceDidDetach:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/backboarddaemon_Sim/backboarddaemon-195.5/megatrond/BKDigitizerInfoArbiter.m
-[BKDigitizerArbiterInfo _displayInfoForDisplay:createIfNeeded:]
v16@?0@"NSString"4@"BKDigitizerArbiterInfoPerDisplay"8^B12
perDisplayInfo
T@"NSMutableDictionary",&,N,V_perDisplayInfo
referenceToTouchStreamClientsMapping
T@"NSMapTable",&,N,V_referenceToTouchStreamClientsMapping
previousVendedTouchStreamReference
TI,N,V_previousVendedTouchStreamReference
scheduler
T@"BKDigitizerEventSchedulerBase",&,N,V_scheduler
com.apple.backboardd.TouchDeliveryPolicyServer
@12@?0I4I8
@16@?0I4d8
@8@?0@"NSArray"4
@8@?0@"BKSTouchDeliveryPolicy"4
T@"BKSTouchDeliveryPolicy",&,S_queue_setPolicy:,V_policy
%p load spinny
%p unload spinny
%{public}@%{public}@ no service
%{public}@ no service
Got a service removed callback: %{public}@
%{public}@ - %s Ignoring unknown message type %d.
waited 100ms for critical section lock - request fence begin
starting up fence %llx
waited 100ms for critical section lock - fence %llx set up
fence %llx set up for port %x
preFenceTimeoutInterval set to %llims for fence %llx
notify msg came in for an unexpected type (%i) for fence %llx
fence %llx listening for no more senders
fence %llx sleeping till next event
fence %llx waking for event
waited 100ms for critical section lock - fence %llx check
fence %llx timed out after %llims
fence %llx synchronization successful
fence %llx detected no more senders but the generation token is out of date - looping again
shutting down fence %llx
waited 100ms while waiting for critical section lock - request fence ready
returning handle to fence %llx
failed to acquire handle to fence %llx : failed to copy caFence (%x)
waited 100ms while waiting for fence invalidation
waited 100ms while waiting for critical section lock - request fence invalidated
failed to acquire fence handle : not running
waited 100ms for critical section lock - create assertion begin
returning assertion of fence %llx
failed to acquire assertion (port mismatch)
failed to acquire assertion (fence not running)
starting %{public}s...
starting HID system...
starting window server...
starting GSEvents...
starting HID event processors...
starting ALS...
starting display server...
starting HID server...
%{public}s exiting...
unknown touch pad sender 0x%llX
TouchPad was removed: %{public}@
Found a new touchpad %{public}@
touchpad %{public}@
touchpad: Cancel (%{public}@)
cannot set event router thread priority (error %d)
%s ERROR: pid %d requested invalid proximity detection mode: %d
%s ERROR: invalid port for pid %d
Entitlement %@ required to use %s
Error unarchiving deferrals
Decoded event focus deferrals contains unexpected non-BKSEventFocusDeferral elements: %{public}@
Warning, I couldn't find the pid for the properties of this deferral: %{public}@ - dropping it on the floor
Warning, I couldn't find the pid for the deferred properties of this deferral: %{public}@ - dropping it on the floor
Error unarchiving touchIdentifiers
Error unarchiving hittestRegions
%s: Error unarchiving policy
%s: no policy data received
Beginning explicit brightness transaction on behalf of %{public}@
Ignoring explicit brightness transaction request because sender is invalid: %{public}@
Ignoring implicit brightness transaction request because sender is invalid: %{public}@
Error unarchiving event routers
Decoded event routers contains unexpected non-BKSHIDEventRouter elements: %{public}@
Error unarchiving key commands
Error unarchiving stackshot combos
Decoded stackshot combos contains malformatted elements: %{public}@
Entitlement %{public}@ required to use %{public}s; ignoring request from pid %d
Only system apps with entitlement %{public}@ may use %{public}s; ignoring request from pid %d
Only system apps with entitlement %{public}@ or processes with entitlement %{public}@ may use %{public}s; ignoring request from pid %d
midBounds:%g,%g
%p present
%p dismiss
-----------> %p: bounds of display changed: size.width: %f size.height: %f, updating overlay position
Failed to create semaphore %{public}s for first boot token. Error = %d
Failed to delete semaphore %{public}s for first boot token. Error = %d
BKEventClient died (pid): %{public}@
BKEventClient died (port): %{public}@
Loaded plugin controller: %@
Setting main screen size to %{public}@ and scale to %{public}@
Actually swapping the size because the display orientation is %f radians - new size:  %{public}@
Setting usesPreferredModeRefreshRate to %d for display %{public}@
Setting idealRefreshRate to %f for display %{public}@
Set Blanked: %@
will unblank
BKDisplayIsDisabled: unknown displayUUID:%{public}@ 
BKDisplaySetDisabled: unknown displayUUID:%{public}@
Disabling framebuffer changes on display (%d) at boot until we are ready for them.
Invalid starting scale found: %f; assuming scale of 1.0.
BKDisplayStartWindowServer: main display info:%{public}@ -- display:%{public}@ serverDisplay:%{public}@
BKDisplayStartWindowServer: main display not found (yet) -- serverDisplay:%{public}@
[BKDisplayRenderOverlay] No CADisplay found for UUID: %{public}@
[BKDisplayRenderOverlay] Unable to capture display image for display! %{public}@
No image
Setting progress indicator (style = %d) for overlay at position (%u, %u).
Unable to apply kernel progress indicator - error %d.
Successfully applied kernel progress indicator.
Configuring event routers for %{public}@: %{public}@
No system app found for pid %d; unable to save event routers %{public}@
Configuring %{public}@ with default event routers
Error unarchiving contextIDs
Updating external display interface orientation to %{public}@
%s: app = %{public}@
Using built-in information for bundle ID %{public}@: URL="%{public}@" appType="%{public}@"
[%{public}@] Ignoring alternate mach service for "%{public}@" because mapped service "%{public}@" does not exist.
[%@] Registering alternate mach service "%@" in place of "%@".
%s: launch failed: %{public}@
%s: bootstrap succeeded but process is invalid
%s: app = %{public}@ error = %{public}@ (%d)
%s: self = %{public}@ exitContext = %{public}@
Presenting overlay: %{public}@ with animation settings: %{public}@
Freezing overlay: %{public}@
Dismissing render overlay %{public}@ with animation settings: %{public}@
GSEventResetIdleTimer received from %d
%s Unknown GSEvent, type = %d; Ignoring.
Updating proximity detection mode. clients = %{public}@
updating current mode:(%{public}@), but we are still locked in mode:(%{public}@)]
Updated mode to (%{public}@). Prevailing client = %{public}@
Adding client: %{public}@
Not adding invalid client: %{public}@
Removing client: %{public}@
Estimated prox shutting off
Releasing estimated prox power assertion
Ignoring request for estimated prox events: we're not locked
Restarting estimated prox timer with timeout %gs
Starting estimated prox timer with timeout %gs
%s - Unable to take estimated prox power assertion - returned %#x
Acquired estimated prox power assertion with id: %d
Trying to enable estimated proximity events, but we already have a power assertion taken out with id: %d
Estimated prox shutoff timer fired
pid %d requesting mode %{public}@
client requested 'none' mode; unregistering: %{public}@
client requested 'none' mode but we're not tracking this client... ignoring request
Set client prox mode: %{public}@
client sendRight is invalid: %{public}@
disabling/locking proximity detection
enabling proximity detection
Setting pocket touches expected: %@
setUILockState:{%{public}@} source:%{public}@
%s ERROR sending event type %d: %{public}s (0x%X)
BKEventPortForSystemApp: system app port invalid!
no client connection for port 0x%X
#BKSendHIDEvent: Sending event to client connection: %{public}@
#BKSendHIDEvent: IOHIDEventSystemConnectionDispatchEvent error:0x%X -- %{public}@ event dropped
dropping KeyboardEnabledEvent %{public}@
KeyCode: %ld up/down: %@ destination: %@ keyDownCount: %ld
Sending event to purple system app port because backlight is dim or off
...or not sending the system app the event. I can't find him
Unicode: %{public}@ destination: %{public}@
loading image:%d for basename:%{public}@ scale:%g idiom:%{public}@
Can't find requested image: %{public}@
Loaded: %{public}@
missing image index:%d basename:%{public}@ scale:%g
Setting backlight factor pending: %f
Setting backlight factor: %f with fade duration %f
Setting minimum brightness level: %f with fade duration %f
_SetDisplayBrightness:%g commit:%{bool}u key:%{public}@
Restoring display brightness to %.3f
Locking backlight to current value: %@ for reason: %{public}@
Update last requested backlight factor: %g permanently:YES
too many touch identifiers passed to CancelTouchesWithIdentifiers (%d)
Setting hittest regions to: %{public}@ for digitizer: %{public}@
sg transition (%{public}@, %{public}@) -> (%{public}@, %{public}@) shouldNotify:%@ didNotify:%@
detaching:%X
tried to detach a touch (%d) that was already detached
BKDigitizer: got an event update with generation:%ld but I can't find any pending items waiting for an update: %{public}@
remainingUpdatesMask for path %ld is zero, but we got updates:%lX
touchstreams: start sending isFirstDown:%{bool}u lifted:%{bool}u
Not supported: accessibility digitizer for external display (%{public}@)
ignoring digitizer event from non-digitizer sender (%{public}@):%{public}@
using %{public}@
array:%p exceeded capacity:%d; moving to heap
Cancel (<%p> - %{public}@) causedByTouchStream: %{public}@
System gestures no longer possible (<%p> - %{public}@) causedByTouchStream: %{public}@
bad path count:%d
-------> Skipping %d for %X
-------> Should send cancel due to client change to contextID: 0x%x
-------> Should send begin due to client change to contextID: 0x%x
failed to find %X, %X
-------> hand cancel contextID: 0x%X (canceled:%X prevTouching:%X nowTouching:%X)
bad path index:%d
synth and post:%X
no events for regular clients
TDPS said this context should cancel: %X
Allocate: %X
bad path index %d, skipping subevent %{public}@
using centroid %{public}@
bogus client:%X port:%X hostIndex:%d
policies: %{public}@
examining %x policy response %d
bad pathIndex %d from event:%{public}@
Touch moved from this region: %{public}@ to this region: %{public}@
Touch entered exclusive touch region of this touch region: %{public}@ exclusiveHitTestRegion: %{public}@, so no longer a candidate for hit testing
digitizer event ignored because object is within proximity (%{public}@)
allowing touch thru even though we have an object in proximity...
touch event ignored for idle timer
remove ctx:%X
Sending no longer possible to latent client: %x
[%d] digitizer:%p contextID:%x clientPort:%x touches:{%{public}@} - %{public}@
bogus path index %d
received cancel without child paths from senderID:0x%llX
stop tracking:%d
reset:%d
Assuming system gestures are possible (%{public}@)
Assuming system gestures are not possible (lost race with SpringBoard) (%{public}@)
unknown senderID: 0x%llX
cache sender info for senderID:%llX -- %{public}@
purge sender info for senderID:%llX -- %{public}@
different sender instance for senderID:%llX, skipping purge for desired:%{public}@ cached:%{public}@
%{public}@: found %{public}@
%{public}@: removing %{public}@
%{public}@: missing sensor record for displayUUID %{public}@
%{public}@: human presence event %g
%{public}@: human proximity event %g
%{public}@: ignoring unknown event type:%d
no button service available!
Failed to set new button priorities.
%{public}@ usagePage:0x%x usage:0x%x downEvent:%d %{public}@%{public}@%{public}@%{public}@%{public}@
Resetting user event timer to %{public}@ with duration %gs
Disabling timer because scheduled interval exceeds 'forever' threshold
Timer fired after interval: %gs
Notifying that manual timer expired
Notifying that automatic timer expired
Rescheduling timer with new interval of %gs (last user event was %gs ago)
First boot is finished
resetting ALS curve
Resetting ALS preferences on upgrade from epoch %ld to %ld
Keyboard attached: %{public}@
Keyboard detached: %{public}@
Keyboard not found for IOHIDService: %{public}@
Usable keyboard attached: %{public}@
Usable keyboard detached: %{public}@
%{public}@ didChangeState:%d
send %{public}@
New client is %{public}@, events enabled? %{public}@
Acc (type %d): %f %f %f
Setting system app orientation client to: %{public}@ currentOrientation: %d, orientationLocked: %{public}@
[Manager] Blocking the system app
[Manager] Open alternate system app with bundleID: %{public}@
[Manager] Terminating alternate system app with bundleID: %{public}@
[Manager] Unblocking the system app
[Manager] Alternate system app with bundleID: %{public}@ did fail to launch
[Manager] Alternate system app with bundleID: %{public}@ did launch
[Manager] Alternate system app with bundleID: %{public}@ exited with context: %{public}@
DEMO MODE NOTIFICATION: %d
Current mode changed on %{public}@ -> %{public}@
preferredScale is %{public}@, using 1.0 instead
Available modes changed on %{public}@
Making display 'PurpleTVOut' a car display for the simulator...............
Making display 'PurpleTVOut' a tvOut display for the simulator............
Setting up Car display
There are no available modes, clearing the tag of %{public}@
Removing wireless clone
%{public}@ changed on %{public}@ -> %{public}@
Can't clone display %{public}@ to itself
Add display clone %{public}@ to %{public}@
Updating primary system app to: %{public}@
Updating primary system the alternate system app: %{public}@
Updating primary system to nil because we are waiting for the alternate system app to launch
Updating primary system app to the old _systemApp: %{public}@
Updating primary system random app: %{public}@
Now monitoring "%{public}@"
No system apps remain. Waiting for one to spawn...
Handling exit request from %{public}@ with options: %{public}@
Blocking system apps.
Killing %{public}@.
Unblocking system apps.
System app connected: %{public}@
System app checked-in: %{public}@
Telling system app "%{public}@" that it can start immediately
System app wants restart: %{public}@
System app disconnected: %{public}@
No more system apps
System app "%{public}@" finished startup after %.2fs.
Posting brightness changed for UIKit
Begin transaction: %{public}@; %d now exist
Ending transaction: %{public}@; %d remain
Sending orientation: %d event to %{public}@
Setting proximity mode: %d (HID %d); pocket touches expected: %@
SmartCover sensor count:%d available:%x disengaged:%x trigger:%x; effective state:%{public}@
No SmartCover sensors detected
HES disengaged:%x smart cover is CLOSED
HES disengaged:%x smart cover is OPEN
dropping smart cover event because we don't have any HES sensors
Smart Cover HES (usage 0x%x): %s
Sending BKSHIDEventSmartCoverClosed
Sending BKSHIDEventSmartCoverOpen
bad smart cover state
Ignoring smart cover event; no state change
Smart Cover StateUnknown:%{BOOL}u
Sending BKSHIDEventSmartCoverAmbiguousOpen
why are we here?
[Server] Entitlement %{public}@ required to open alternate system app.
[Server] Rejecting BKAlternateSystemAppServer connection because we already have one
[Server] Accepted connection request
[Server] Got a connection request on listener %{public}@: connection %{public}@
[Server] Received request to block primary system app for alternate system app
[Server] Sent notification that system app is blocked for alternate system app
[Server] Received request to unblock primary system app for alternate system app
[Server] Sent notification that system app is no longer blocked for alternate system app
[Server] Received request to open alternate system app "%{public}@"
[Server] Sent notification that alternate system app "%{public}@" failed to open with error %{public}@
[Server] Sent notification that alternate system app "%{public}@" did open
[Server] Sent notification that alternate system app "%{public}@" did exit with reason %{public}@
[Server] Received request to terminate alternate system app "%{public}@"
[Server] Sent notification that alternate system app "%{public}@" did terminate
%s Ignoring unknown message type %llu from client: %{public}@
Migration complete (if performed). (Elapsed time: %.2f seconds)
A restore is currently running. Waiting to move restored preferences into place until later
Moving restored file into place from %{public}@ to %{public}@
Unable to move file at path %{public}@ to %{public}@: %{public}@
Reseting prox calibration
Ignoring prox event from unknown sender (%{public}@)
Ignoring prox event sent outside of active mode
Proximity receiver state event: %s
Services discovered: %{public}@ for:%{public}@
%p %{public}@ started matching %{public}@ with dictionary %{public}@
%p %{public}@ stopped matching %{public}@ with dictionary %{public}@
Services added: %{public}@
IOServices added: %{public}@
Empty IOService array for sender %{public}@; ignoring
Updating device orientation for system app boot
missing accel HID service plugin
Turning on orientation events.
Turning off orientation events.
Resetting device orientation.
Current user interface orientation is now %{public}@
Last effective interface orientation changed to: %{public}@
WARNING: Attempting synchronous device orientation update while events disabled!
Fetching effective device orientation with temporary manager: %{public}@
Updating device orientation from CoreMotion to: %{public}@
Locking device orientation for lock type: %{public}@ to: %{public}@
Locked device orientation for lock type: %{public}@ to: %{public}@
Unlocking device orientation for lock type: %{public}@
Effective device orientation changed to: %{public}@
Current raw accelerometer device orientation changed to: %{public}@
Last unambiguous device orientation changed to: %{public}@
This client connection pid: %d bundleID: %{public}@ doesn't have a valid task port, releasing...
trying to create a BKHIDClientConnection with a nil connection
[BKDisplayRenderOverlayPersistenceCoordinator] Loaded overlay from persistence: %{public}@ from location: %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Persisting overlay: %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Unable to create path: %{public}@: %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Unable to exclude path from backups: %{public}@: %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Unable to save temporary snapshot to disk at %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Wrote overlay to file: %{public}@
[BKDisplayRenderOverlayPersistenceCoordinator] Unable to move temporary file (%{public}@) to real location in the shared container (%{public}@): %{public}@
Current bootUI is an Apple Logo
Adding client connection: %{public}@ for client: %{public}@
Removing client connection %{public}@ for client: %{public}@
Got a client addition callback: %{public}@
Got a client removal callback: %{public}@
[%{public}@] systemAppControlsFocusOnMainDisplay:%{bool}u
[%{public}@] Setting foreground application to: %{public}@ (%d)
client %{public}@ - (%d) updated deferrals
client %{public}@ - (%d); deferral: %{public}@
Warning, there is no system app, therefore I can't find the proper event destination
Please file a radar - we found a cycle in the event focus manager.  We already saw this property: %{public}@ 
 %{public}@
Freezing display: %{public}@
Conflicting choices for orientation lock, choosing orientation for this overlay: %{public}@
Disabling framebuffer changes on display (%d) because we have overlays that require disabled updates.
Enabling framebuffer changes on display (%d) because we have don't have any overlays that require disabled updates.
Dismissing sustained boot logo
Sustaining the boot logo
Can't persist a boot overlay that isn't there yet
Re-evalutate - _systemAppFinishedLaunching - %{public}@
Toggling underlay.
Re-evalutate overlay - _systemAppChanged - %{public}@
Re-evalutate overlay - _allSystemAppsExited - %{public}@
Not showing the boot UI because we were told to hide it
System app hasn't finished starting so show boot UI
Not dismissing overlay because it has been sustained by the system app
Removing the overlay
Not showing the boot UI overlay because we were told to hide it
Adding the overlay
Overlay already in place
Not showing the boot UI underlay because we were told to hide it
Adding the underlay
Underlay already in place
Removing the underlay
BKHID: Unable to open Indigo HID system
Dropping GS event (type %d) on the floor because the hid system is not fully initialized
%{public}@: _HIDEventSystem not initialized
game controller event occurred; notifying user event timer
populating sender cache for unknown sender with senderID:%llX
no IOHIDServiceRef for unknown senderID:%llX
biometric event occurred; notifying user event timer for display %{public}@
Motion event usagePage:0x%lX usage:%ld 
VendorDefinedEvent usagePage:0x%lX usage:%ld 
Got an external interaction event meant for display: %{public}@, %{public}@
Got an external interaction event of type %d, but there is no destination set for it
Got an orientation event from a GSEvent: %d
Received a GSEvent that is not designated as being routed to frontmost (type %d), forwarding to the System App
Redirecting HID event (of type: %u) to destination: %{public}@
Cleaning up objects for display %{public}@ since there are no digitizers left
digitizer attached (sender %llX) builtIn:%d
already have a main display digitizer - ignoring this one
acquired main display digitizer
digitizer detached (sender %llX) builtIn:%d
*** lost main display digitizer -- not really prepared for that yet ***
Cleaning up digitizerInfo for %{public}@ since it was removed
******************* SUPER BAD ****************** no main display digitizer
create touch stream contextID:%X
invalidate touch stream contextID:%X
TDPS got a connection %{public}@
not allowing %{public}@ to include policies because it does not have appropriate permissions
Received policy invalidation on the server side %{public}@
Policy was %{public}@
Policy is %{public}@
Got new policy %{public}@, [self _policy] is now %{public}@
BKDisplayRenderOverlaySpinny
_BKIOHIDServiceDisappearanceObserverInfo
BKIOHIDService
BKHIDEventSenderInfo
NSObject
BSDescriptionProviding
BKFenceArbiterServer
0"0@
BKFenceArbiter
BKDigitizerEventSchedulerWithPostponementToNextVSync
BKTouchPadInfo
BKTouchPadManager
BKIOHIDServiceMatchObserver
BKIOHIDServiceDisappearanceObserver
BKDigitizerEventSchedulerWithDisplayLink
BKGestureRecognizer
BKGestureRecognizerEngine
BKDisplayBootUIRenderOverlay
CAAnimationDelegate
BKSystemAppHeartbeat
BKVendorDefinedEvent
BKFirstBootKernelSemaphoreToken
BKFirstBootTokenProviding
BKHIDEvent
BKEventClient
BKPluginManager
BKTouchDeliveryObservationManager
BKDisplayRenderOverlayImage
_BKMockIOHIDService
BKHIDEventRouterManager
BKAlternateSystemApp
BKSProcessDelegate
BKDisplayRenderOverlay
BKSDisplayRenderOverlayDescribing
BKButtonComboPressGestureRecognizer
BKGestureRecognizerDelegate
BKWatchdogService
BKGSEventSystem
BKProximityDetectionClient
BKProximitySensorInterface
BKEventClientDelegate
_BKDisplayRenderOverlayPersistenceData
NSSecureCoding
NSCoding
BKSecurityManager
BKKeyboardManagerDelegateImpl
BKKeyboardManagerDelegate
BKImageSequence
BKBacklightManager
BKButtonEvent
BKAccelerometerClientBKSAccelerometer
BKHIDEventSenderCache
BKHumanPresenceHIDEventProcessor
BKUserEventTimer
BKFirstBootDetector
BKUnknownHIDSender
BKButtonPressGestureRecognizer
BKKeyboardManager
BKEventFocusClient
BKGSEventClient
BKDigitizerEventSchedulerBase
BKDigitizerEventSchedulerImmediate
BKDiscreteProximitySensorHardware
BKAccelerometerInterface
BKOrientationManagerObserver
BKAlternateSystemAppManager
BKAlternateSystemAppDelegate
BKTetherController
BKTVOutController
BKSecureDrawingMonitor
BKDisplayRenderOverlayPinkForTesting
BKAccessibility
BKSystemApplication
BKAccelerometerClient
BKSystemAppSentinel
BKSystemApplicationServerDelegate
BKDisplayBrightnessUpdateTransaction
BSInvalidatable
BKDisplayBrightnessInterface
BKKeyboardInfo
BKAccelerometerClientUIApp
BKGrapeIntegratedProximitySensorHardware
BKSmartCoverHIDEventProcessor
BKDisplayRenderOverlayAppleLogo
_BKHIDHumanPresenceSensorRecord
BKStackshotter
BKDigitizerTouchStreamAggregate
BKSAlternateSystemAppClientProtocol
BKSAlternateSystemAppServerProtocol
BKAlternateSystemAppServer
NSXPCListenerDelegate
BKSmartKeyboardGestureRecognizer
BKSystemApplicationServer
BKMigrator
BKEventFocusManagerServerInterface
BKSEventFocusManagerClientInterface
BKEventFocusManagerServer
BKProximitySensorHardwareBase
BKIOHIDServiceMatcher
BKOrientationManager
BKHIDClientConnection
BKEventDestination
BKDigitizerTouchStreamClient
BKDisplayRenderOverlayPersistenceCoordinator
BKBootUIOverlayVendor
BKSystemAppEntitlementCache
BKEntitlementCache
BKHIDClientConnectionManager
BKAccessibilityHIDSender
BKEventFocusManager
BKSHIDEventKeyCommandRouter
BKHIDEventKeyCommandDescriptorMap
BKDisplayRenderOverlayManager
BKBootUIPresenter
BKHIDSystemInterface
BKDigitizerArbiterInfoPerDisplay
BKDigitizerArbiterAccess
BKDigitizerArbiterInfo
BKSTouchDeliveryPolicyServerInterface
BKTouchDeliveryPolicyServer
NSXPCConnectionDelegate
@16@0:4f8@12
@16@0:4@8f12
v8@0:4
@12@0:4@8
v12@0:4f8
@8@0:4
B8@0:4
I8@0:4
v12@0:4I8
@"BKImageSequence"
@"CAKeyframeAnimation"
v12@0:4@8
@"<BKIOHIDServiceDisappearanceObserver>"
@"NSObject<OS_dispatch_queue>"
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
i8@0:4
Q8@0:4
@"NSString"12@0:4@"NSString"8
@"BSDescriptionBuilder"12@0:4@"NSString"8
@"BSDescriptionBuilder"8@0:4
@12@0:4^{__IOHIDService=}8
B16@0:4@8@12
i20@0:4I8I12I16
v16@0:4@8@12
v12@0:4i8
^{__IOHIDService=}8@0:4
v12@0:4^{__IOHIDService=}8
v16@0:4Q8
v12@0:4B8
^{__IOHIDNotification=}
@"NSMutableArray"
^{__IOHIDService=}
@"NSString"
@16@0:4@8@12
@12@0:4I8
@"BKFenceArbiterServer"
@"CAContext"
@"NSObject<OS_dispatch_semaphore>"
@"BSAtomicSignal"
@"BSMachPortSendRight"
@"BSMachPortReceiveRight"
d8@0:4
d20@0:4d8^d16
B16@0:4d8
v12@0:4@?8
v20@0:4@?8^{__IOHIDEvent=}12I16
v16@0:4d8
f8@0:4
@"BKIOHIDService"
@"BKEventDestination"
v16@0:4@"BKIOHIDServiceMatcher"8@"NSArray"12
v12@0:4@"BKIOHIDService"8
B16@0:4^{__IOHIDEvent=}8@12
v20@0:4^{__IOHIDEvent=}8@12@16
v16@0:4^{__IOHIDEvent=}8@12
@"NSMutableDictionary"
@"BKIOHIDServiceMatcher"
v20@0:4^{__IOHIDEvent=}8^{OpaqueBKDigitizerInfo=}12I16
@"CADisplayLink"
@"NSThread"
@"NSMutableSet"
@"<BKGestureRecognizerDelegate>"
v16@0:4@8B12
v12@0:4@"CAAnimation"8
v16@0:4@"CAAnimation"8B12
{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4
v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
v24@0:4@8@12@16^v20
@"CALayer"
@20@0:4I8d12
@"NSTimer"
*8@0:4
^{__IOHIDEvent=}
@"BKSHIDEventDescriptor"
@"<BKHIDEventSenderInfo>"
@16@0:4i8@12
@20@0:4i8@12@16
@24@0:4i8@12@16@20
@"<BKEventClientDelegate>"
@"BSProcessDeathWatcher"
@"BSPortDeathSentinel"
i12@0:4I8
v24@0:4I8I12I16@20
v28@0:4I8B12I16I20@24
@"BKEventFocusManagerServer"
@"NSMapTable"
^{CGImage=}8@0:4
^{CGImage=}
@16@0:4^{__IOHIDEvent=}8@12
v16@0:4@8i12
@12@0:4^{__IOHIDEvent=}8
i12@0:4@8
@"BKEventFocusManager"
v16@0:4@"BKSProcess"8i12
v12@0:4@"BKSProcess"8
v16@0:4@"BKSProcess"8B12
v16@0:4@"BKSProcess"8@"BKSProcessExitContext"12
@20@0:4@8@12@16
@"<BKAlternateSystemAppDelegate>"
@"NSDictionary"
@"BKSProcess"
@"CADisplay"8@0:4
@"BKSDisplayProgressIndicatorProperties"8@0:4
@"BKSDisplayRenderOverlayDescriptor"
@"BKDisplayRenderOverlayPersistenceCoordinator"
v16@0:4@"BKGestureRecognizer"8i12
@"BKHIDSystemInterface"
@"BKSystemAppSentinel"
v12@0:4^{__GSEvent=}8
v12@0:4@"BKEventClient"8
I16@0:4d8
v20@0:4i8@12i16
@12@0:4i8
B20@0:4i8i12@16
v16@0:4I8I12
@"NSObject<OS_dispatch_source>"
@"BKProximitySensorHardwareBase"
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@24@0:4@8i12@16f20
v12@0:4^{CGImage=}8
@"NSData"
B16@0:4@8^{?=[8I]}12
@"<BKEntitlementCache>"
v16@0:4@"BKKeyboardManager"8@"BKKeyboardInfo"12
@24@0:4@8@12i16f20
^{CGImage=}12@0:4i8
^{CGImage=}28@0:4I8@12f16@20@24
@"NSPointerArray"
@"NSBundle"
v16@0:4B8@12
v36@0:4d8f16f20f24d28
v16@0:4i8B12
@16@0:4Q8
v16@0:4f8@12
v24@0:4^I8^B12^f16@20
v20@0:4d8i16
@"BSTimer"
@"<BKFirstBootTokenProviding>"
@"BKAlternateSystemAppManager"
@"NSHashTable"
@"BKSHIDEventKeyboardDescriptor"
@"<BKKeyboardManagerDelegate>"
@"NSSet"
v12@0:4^{?=ii{CGPoint=ff}{CGPoint=ff}IQ^viiI[0C]}8
v16@0:4^{OpaqueBKDigitizerInfo=}8I12
v16@0:4^{__IOHIDEvent=}8I12
@16@0:4i8B12
v20@0:4@8i12B16
v20@0:4@"BKOrientationManager"8i12B16
v36@0:4@8d12f20f24f28r^{?=[8I]}32
v24@0:4@8B12B16r^{?=[8I]}20
v20@0:4@8B12r^{?=[8I]}16
v12@0:4^{__IOHIDEvent=}8
v20@0:4@8r^{?=[8I]}12@?16
@"NSLock"
@"BKAccelerometerClient"
@"BKOrientationManager"
v12@0:4@"BKAlternateSystemApp"8
v16@0:4@"BKAlternateSystemApp"8@"BKSProcessExitContext"12
v24@0:4@8@12@?16@?20
v28@0:4@8i12B16@20@?24
@?8@0:4
@"BKAlternateSystemApp"
B12@0:4^{__CFString=}8
v16@0:4{CGSize=ff}8
v12@0:4^?8
^?8@0:4
{CGPoint=ff}16@0:4{CGPoint=ff}8
{CGPoint=ff}20@0:4{CGPoint=ff}8I16
@"NSDate"
@"NSArray"
B20@0:4f8f12f16
B24@0:4d8d16
v20@0:4@8@12@?16
v20@0:4@8@12@16
v16@0:4@"BKSystemApplicationServer"8@"BKSystemApplication"12
v20@0:4@"BKSystemApplicationServer"8@"BKSystemApplication"12@?<v@?>16
v20@0:4@"BKSystemApplicationServer"8@"BKSystemApplication"12@"NSSet"16
v16@0:4@8I12
@"BKSystemApplicationServer"
@"BKSystemApplication"
@"BKSystemAppHeartbeat"
v16@0:4f8B12
C8@0:4
v12@0:4C8
^{__GSKeyboard=}8@0:4
^{__GSKeyboard=}
i16@0:4i8B12
@28@0:4@8I12I16B20B24
I24@0:4I8@12^I16^I20
B12@0:4I8
@"PUIProgressWindow"
B16@0:4^C8^C12
v16@0:4@"NSString"8@"NSError"12
v16@0:4@"NSString"8@"BKSProcessExitContext"12
v12@0:4@"NSString"8
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
@"NSXPCListener"
@"NSXPCConnection"
@"BKKeyboardInfo"
B20@0:4@8d12
B12@0:4^{?=[8I]}8
@"<BKSystemApplicationServerDelegate>"
v16@0:4B8I12
v24@0:4I8B12I16i20
v20@0:4I8I12i16
v12@0:4@"NSSet"8
v28@0:4I8B12I16i20@24
v24@0:4I8I12i16@20
v20@0:4^{__IOHIDEvent=}8@12B16
v16@0:4B8B12
@24@0:4i8i12B16@20
@20@0:4@8#12@16
v12@0:4#8
@"<BKIOHIDServiceMatchObserver>"
B12@0:4^i8
v16@0:4I8i12
@"NSOperationQueue"
@"CMDeviceOrientationManager"
@12@0:4^{__IOHIDEventSystemConnection=}8
^{__IOHIDEventSystemConnection=}8@0:4
^{__IOHIDEventSystemConnection=}
v16@0:4@8@?12
@"BKDigitizerTouchStreamAggregate"
@12@0:4f8
@"BKFirstBootDetector"
B20@0:4^{?=[8I]}8@12^B16
v20@0:4B8^{?=[8I]}12@16
B20@0:4^{?=[8I]}8@"NSString"12^B16
v20@0:4B8^{?=[8I]}12@"NSString"16
@12@0:4^{__IOHIDEventSystem=}8
^{__IOHIDEventSystemConnection=}12@0:4I8
^{__IOHIDEventSystemConnection=}12@0:4@8
v12@0:4^{__IOHIDEventSystemConnection=}8
^{__IOHIDEventSystem=}
^{__CFDictionary=}
v20@0:4@8@12i16
@20@0:4@8@12B16
@20@0:4@8i12@?16
i16@0:4@8@12
@24@0:4@8@12@16@20
@"CAWindowServer"
@"BKBacklightManager"
@"BKBootUIOverlayVendor"
@"BKDisplayRenderOverlayManager"
@"BKDisplayRenderOverlay"
^{__IOHIDEvent=}20@0:4I8^{__IOHIDEvent=}12L16
v24@0:4^?8@12^v16^v20
^{__IOHIDEventSystemClient=}
@"BKHumanPresenceHIDEventProcessor"
@"BKHIDEventSenderCache"
^{OpaqueBKDigitizerInfo=}12@0:4@8
@"BKDigitizerArbiterInfo"
@"NSObject<OS_dispatch_group>"
@16@0:4@8B12
^{OpaqueBKDigitizerInfo=}16@0:4@8B12
I16@0:4@8@12
@"BKDigitizerEventSchedulerBase"
v12@0:4@"BKSTouchDeliveryPolicy"8
v20@0:4@8@12B16
@"<NSSecureCoding>"20@0:4@"NSXPCConnection"8@"NSXPCCoder"12@16
v20@0:4@"NSXPCConnection"8@"NSInvocation"12B16
@16@0:4^I8i12
B20@0:4I8d12
@"BKSTouchDeliveryPolicy"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleIdentifier</key>
<string>com.apple.backboardd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>BSPluginDirectoryName</key>
<string>BackBoardPlugins</string>
<key>BSPluginSpecification</key>
<array>
<dict>
<key>BSPluginType</key>
<string>bkbundle</string>
<key>BSPluginBundleController</key>
<string>BKSPluginBundleController</string>
<key>BSPluginWhitelist</key>
<array>
<string>CheckerBoard</string>
</array>
</dict>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.global-capture</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.RootedSimulatorPath</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.backboardd</key>
<true/>
<key>com.apple.backboardd.replacesystemapp</key>
<true/>
<key>com.apple.coreduetd.allow</key>
<true/>
<key>com.apple.coreduetd.context</key>
<true/>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.backboardd</string>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.frontboardservices.display-layout-monitor</key>
<true/>
<key>com.apple.gasgauge.user-access-device</key>
<true/>
<key>com.apple.hid.multitouch.user-access</key>
<true/>
<key>com.apple.hid.system.user-access-service</key>
<true/>
<key>com.apple.private.IOSurface.protected-access</key>
<true/>
<key>com.apple.private.aea.haptics.user-access</key>
<true/>
<key>com.apple.private.allow-explicit-graphics-priority</key>
<true/>
<key>com.apple.private.applepearl.allow</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.cecd.control</key>
<true/>
<key>com.apple.private.cecd.observer</key>
<true/>
<key>com.apple.private.graphics-restart-no-kill</key>
<true/>
<key>com.apple.private.hid.client.event-dispatch</key>
<true/>
<key>com.apple.private.hid.client.event-filter</key>
<true/>
<key>com.apple.private.hid.client.event-monitor</key>
<true/>
<key>com.apple.private.hid.manager.client</key>
<true/>
<key>com.apple.private.kernel.work-interval</key>
<true/>
<key>com.apple.private.ubiquity-kvstore-access</key>
<array>
<string>com.apple.springboard</string>
<string>com.apple.Accessibility</string>
<string>com.apple.Accessibility.SwitchControl</string>
<string>com.apple.Accessibility.TouchAccommodations</string>
<string>com.apple.AssistiveTouch</string>
<string>com.apple.HearingAids</string>
<string>com.apple.SpeakSelection</string>
<string>com.apple.VoiceOverTouch</string>
<string>com.apple.ZoomTouch</string>
</array>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.backlightd</string>
</array>
<key>com.apple.security.system-container</key>
<true/>
<key>com.apple.spd.anypidmonitoring</key>
<true/>
<key>com.apple.springboard.opensensitiveurl</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.springboard</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
