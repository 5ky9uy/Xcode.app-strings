init
playerRequest
tracklistRange
rangeFromTracklistRange:
playingItemProperties
relationships
objectForKeyedSubscript:
queueItemProperties
middleware
controller
playQueueIdentifiersForRequest:
setPlayQueueIdentifiersFuture:
playQueueIdentifiersFuture
onInvalid:
arrayWithObjects:count:
isCancelled
finish
count
arrayWithCapacity:
contentItemForIdentifier:
addObject:
stringByAppendingString:
replaceObjectAtIndex:withObject:
MPCErrorWithDomain:code:debugDescription:
onCompletion:
enumerateObjectsUsingBlock:
arrayByAddingObject:
qualityOfService
MPCErrorWithDomain:code:underlyingError:debugDescription:
onSuccess:
onFailure:
playingIdentifier
setPlayingIdentifierFuture:
playingIdentifierFuture
cancel
finishWithError:
alloc
firstObject
appendSection:
objectAtIndexedSubscript:
collectionIdentifier
isEqualToString:
collectionInfo
isEqualToDictionary:
appendItem:
setQueueContentItems:
identifier
setPlayingIndexPath:
enumerateItemsUsingBlock:
_loadPlayingIdentifierWithCompletion:
_loadItemsWithCompletion:
stringWithFormat:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
error
invalidationHandler
setInvalidationHandler:
invalidationObservers
timeoutDescription
initWithMiddleware:playerRequest:
execute
.cxx_destruct
setMiddleware:
setPlayerRequest:
_invalidationHandler
_invalidationObservers
_middleware
_playerRequest
_playQueueIdentifiersFuture
_playingIdentifierFuture
isValidReportingEvent
reportingEventType
setError:
setupDuration
setSetupDuration:
_error
_setupDuration
flattenedGenericObject
copy
_createStoreRequestContext
defaultCenter
_contentTasteControllerDidChangeNotification:
sharedController
addObserver:selector:name:object:
removeObserver:name:object:
standardUserDefaults
endAutomaticallyRefreshingLease
stopLeaseSession:completion:
dealloc
mainTitle
type
song
album
title
artist
name
tvEpisode
season
show
identifiers
storeAdamID
storePurchasedAdamID
storeSubscriptionAdamID
volumeNormalization
setSoundCheckVolumeNormalization:
setLoudnessInfoVolumeNormalization:
composer
copyrightText
duration
movie
_shouldRememberBookmarkTime
storeItemInt64ID
genre
isAssetLoaded
playerItem
status
_playerItemDurationIfAvailable
isExplicitSong
isRadioPlayback
itemError
hasCommonIdentifierWithIdentifierSet:
_storeRequestContext
homeSharingAsset
localFileAsset
storeAsset
hasVideo
gaplessInfo
volumeAdjustment
isArtistUploadedContent
identityStore
identity
getPropertiesForUserIdentity:completionHandler:
delegatedIdentity
DSID
unsignedLongLongValue
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
isDelegated
setItemError:
sharedMonitor
networkType
lastKnownNetworkType
_prefersHighQualityVideoContentForNetworkType:
_prefersHighQualityAudioContentForNetworkType:
newHierarchyTokenFromParentToken:
_getSubscriptionLeasePropertiesWithCompletion:
endpointType
setAllowsHLSContent:
setPrefersVideoContent:
setAssetCacheProvider:
setFileAsset:
setGenericObject:
setItemIdentifiers:
setPrefersHighQualityContent:
setRadioPlayback:
setStoreAsset:
setAccountID:
assetSourceStoreFrontID
setAssetSourceStorefrontID:
storefrontIdentifier
setStorefrontID:
setHomeSharingAsset:
setDelegatedAccountID:
setMaxConcurrentOperationCount:
setName:
setQualityOfService:
setAssetLoadProperties:
setRequirePreferredAssetQuality:
setResponseHandler:
addOperation:
assetURL
_allowsStreamingPlayback
hasValidAsset
accountID
delegatedAccountID
setRequestType:
setStoreRadioAdamID:
sharedCache
cachedResponseForRequest:
assetLoadResultWithStoreAssetPlaybackResponse:assetLoadProperties:error:
sharedBagProvider
mediaTypeNetworkConstraintsFromURLBag:
objectForKey:
getBagForRequestContext:withCompletionHandler:
isSubscriptionRequired
hasPlaybackCapability
setRequestContext:
shouldUseAccountLessStreaming
setOperationType:
setSubscriptionLeaseSession:
assetProtectionType
purchaseBundleDictionary
setObject:forKey:
protectedContentSupportStorageFileURL
isHLSAsset
isCloudStreamingAsset
numberWithBool:
userAgent
isHomeSharingAsset
storeCloudID
numberWithUnsignedLongLong:
numberWithLongLong:
initWithCapacity:
redownloadParameters
accountIdentifier
reloadFairPlayKeyStatusWithCompletionHandler:
leaseStatus
hasOnlinePlaybackKeys
hasOfflinePlaybackKeys
requestContext
initWithRequestContext:
performPlaybackRequest:completionHandler:
assetQualityType
allowsAssetCaching
isFileURL
_allowsAssetCaching
assetPathExtension
getPlaybackAssetCacheDestinationURL:purchaseBundleDestinationURL:forGenericObject:assetQualityType:pathExtension:
sharedNetworkObserver
isMusicCellularStreamingAllowed
sizeLimitForNetworkType:
doubleValue
_rtcReportingServiceIdentifierWithAssetURL:
URLAssetWithURL:options:
dataWithPropertyList:format:options:error:
writeToURL:options:error:
initWithBlock:
relativePath
setFilePath:
setQualityType:
setNonPurgeable:
setProtectionType:
setPurchaseBundleFilePath:
initWithIdentifiers:block:
setPlaybackAssetCacheFileAsset:forGenericObject:withCompletionHandler:
defaultManager
removeItemAtURL:error:
mpc_addDownloadCompletionHandler:
resourceLoader
setDelegate:queue:
playerItemWithAsset:
setVolumeAdjustment:
setAudioTimePitchAlgorithm:
setPlaybackLikelyToKeepUpTrigger:
setMediaKind:
heuristicInfo
numberWithUnsignedInt:
encodingDelayInFrames
encodingDrainInFrames
durationInFrames
lastPacketsResync
setGaplessInfo:
metadataIdentifiers
initWithIdentifiers:
addOutput:
addObserver:
_allowsHighQualityMusicStreamingOnCellularDidChangeNotification:
_applyPreferredPeakBitRateToPlayerItem:withItemType:
setPlayerItem:
willBecomeActivePlayerItemHandler
streamingKeyCertificateURL
streamingKeyServerURL
isiTunesStoreStream
suzeLeaseID
initWithRequestContext:leaseID:mediaType:
startLeaseSessionWithConfiguration:completion:
_suzeLeaseSessionRenewDidFailNotification:
beginAutomaticallyRefreshingLease
userInfo
mutableCopy
domain
code
persistentID
mediaLibrary
itemWithPersistentID:verifyExistence:
deviceLibraryPersistentID
cloudUniversalLibraryID
storeCloudAlbumID
notePlaybackFinishedByHittingEnd
durationIfAvailable
_handlePlaybackFinishedTime:didFinishByHittingEnd:
flushNowPlayingCaches
playbackError
longLongValue
_fileSize
shouldShowComposer
shouldPlaybackRequireOnlineKeys
shouldUseLease
setShouldRequireLeaseAcquisition:
serverError
_updatePreventionStatusWithLeaseSession:
_getUnverifiedSubscriptionLeaseSessionWithCompletion:
reevaluateType
_applyLoudnessInfo
mediaItem
numberWithFloat:
setValue:forProperty:withCompletionBlock:
postNotificationName:object:userInfo:
shouldReportPlayEvents
_radioStation
allowsItemLiking
performWithoutEnforcement:
radioStationID
radioStationHash
radioStationStringID
lyrics
text
hasStoreLyrics
queueIdentifier
playbackInfoForIdentifier:
_startTime
_stopTime
numberWithDouble:
durationFromExternalMetadata
_bookmarkTime
addEntriesFromDictionary:
userRating
_updateBookmarkTime:isCheckpoint:
setPlaybackCheckpointCurrentTime:
setPlaybackFinishedTime:
sharedApplication
endBackgroundTask:
beginBackgroundTaskWithExpirationHandler:
_updateHasBeenPlayedWithElapsedTime:completion:
setPlaybackStoppedTime:
_currentPlaybackRateDidChange:
_updateAutomaticSubscriptionLeaseRefresh
stationAllowsItemLiking
stationID
setStationID:
stationHash
setStationHash:
stationStringID
setStationStringID:
setStoreAdamID:
setLikeState:
performWithResponseHandler:
setTasteType:forModel:withCompletionHandler:
tasteTypeForModel:
_willBecomeActivePlayerItem
_willResignActivePlayerItem
artworkCatalog
equivalencySourceAdamID
isRadioStreamPlayback
mpcReporting_itemType
initWithPlaybackRequestEnvironment:
jingleTimedMetadata
requestingBundleIdentifier
requestingBundleVersion
isAlwaysLive
shouldReportPlayEventsToStore
_isPrivateListeningEnabled
isSiriInitiated
didAttemptToLoadAsset
date
setShouldIncludeDeviceGUID:
setCertificateURL:
setKeyServerURL:
setLeaseActionType:
configureUsingAssetResourceLoadingRequest:
setITunesStoreRequest:
setRentalID:
setSkippedRentalCheckout:
initWithObjectsAndKeys:
finishAssetResourceLoadingRequest:withError:
urlForBagKey:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
_reloadTimedMetadataRequest
_updateJingleTimedMetadata
_invalidateContentItem
_setNeedsPersistedLikedStateUpdate
_postInvalidationNotifications
initWithGenericObject:timedMetadataGroups:storeRequestContext:
setPreviousResponse:
setItemProperties:
_timedMetadataResponseDidInvalidateNotification:
results
firstItem
newOperationWithResponseHandler:
anyObject
length
setSong:
initWithIdentifier:userInfo:
initWithLyrics:userProvided:token:
deviceMediaLibrary
invalidateContentItemDeviceSpecificUserInfo
object
allowsHighQualityMusicStreamingOnCellular
preferredVideosAssetQualityOnWifi
isVideoCellularStreamingAllowed
preferredVideosAssetQualityOnCellular
currentDeviceInfo
isAudioAccessory
asset
statusOfValueForKey:error:
mediaKind
loudnessInfoVolumeNormalization
tracks
countByEnumeratingWithState:objects:count:
isEnabled
assetTrack
mediaType
setLoudnessInfo:
preferredPeakBitRate
setPreferredPeakBitRate:
_modelPlaybackPosition
bookmarkTime
initWithStoreRequestContext:
setMaximumRetryCount:
setShouldIgnoreCache:
setAllowsFallbackToExpiredStatus:
setAllowsFallbackToStatusNeedingReload:
sharedStatusController
subscriptionStatus
initWithICSubscriptionStatus:
performSubscriptionStatusRequest:withCompletionHandler:
_subscriptionLeaseStatusDidChangeNotification:
getLeaseSessionWithRequestContext:completionHandler:
setUserSkippedPlayback:
boolValue
initWithModel:
setMediaLibrary:
_utilitySerialQueue
shouldIncrementPlayCountForElapsedTime:startTime:stopTime:
hasNominalAmountBeenPlayedForElapsedTime:startTime:stopTime:
feeder
generateContentIDForItem:
privateListeningStateSource
currentValue
playbackPosition
postNotificationName:object:
modelPlayEvent
itemType
radioStation
isRedownloadable
filePath
isNonPurgeable
shouldRememberBookmarkTime
startTime
stopTime
storeUbiquitousIdentifier
_currentPlaybackRate
userSkippedPlayback
playbackInfo
_expectedStopTimeWithPlaybackInfo:
items
keySpace
extraAttributes
dataValue
isEqualToData:
hasPendingLeaseAcquisition
leaseState
shouldPreventPlayback
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
outputSequenceWasFlushed:
metadataOutput:didOutputTimedMetadataGroups:fromPlayerItemTrack:
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeTelephonyStatus:
leasePlaybackPreventionState
rtcReportingParentHierarchyToken
rtcReportingServiceIdentifier
rtcReportingAssetType
initWithGenericObject:itemProperties:playbackRequestEnvironment:
albumArtist
albumStoreID
artistStoreID
allowsEQ
applyVolumeNormalizationWithSoundCheckEnabled:
artworkTimeMarkers
chapterTimeMarkers
externalContentIdentifier
isAssetURLValid
isExplicitTrack
isLikedStateEnabled
isRadioItem
isStreamable
isValidPlayerSubstituteForItem:
loadAssetAndPlayerItem
modelGenericObject
cloudID
cloudAlbumID
albumPersistentID
albumArtistPersistentID
artistPersistentID
genrePersistentID
composerPersistentID
prefersSeekOverSkip
prepareForRate:completionHandler:
setRating:
stationName
supportsLikedState
libraryLyrics
urlTimeMarkers
useEmbeddedChapterData
allowsAirPlayFromCloud
allowsExternalPlayback
requiresLoadedAssetForAirPlayProperties
resolvePlaybackError:withCompletion:
_handleUpdatedLikedState:completion:
_persistedLikedState
artworkCatalogBlock
mpcReporting_equivalencySourceAdamID
mpcReporting_identityPropertiesLoader
mpcReporting_jingleTimedMetadata
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_privateListeningEnabled
mpcReporting_siriInitiated
nowPlayingInfoCenter:lyricsForContentItem:completion:
_storeUbiquitousIdentifier
supportsRadioTrackActions
setSupportsRadioTrackActions:
assetCacheProvider
setAssetSourceStoreFrontID:
setEquivalencySourceAdamID:
genericObject
setSiriInitiated:
setRadioStreamPlayback:
playbackRequestEnvironment
stationItemLikedState
setStationItemLikedState:
_accessQueue
_allowsAirPlayFromCloud
_hasLoadedSubscriptionLeaseSession
_subscriptionLeaseSessionLoadQueue
_subscriptionLeaseSession
_hasLoadedSubscriptionPlaybackInformation
_subscriptionPlaybackInformation
_subscriptionPlaybackInformationLoadQueue
_shouldAutomaticallyRefreshSubscriptionLease
_isAssetSubscriptionProtectionType
_isSubscriptionPolicyContent
_lastPreparedForNonZeroRate
_subscriptionLeaseRequestCount
_didDeferPreventionStatusUpdate
_suzeLeaseSession
_isAutomaticallyRefreshingSuzeLeaseSession
_firstBecomeActivePlayerItemBlock
_currentGlobalTimedMetadataGroups
_flattenedGenericObject
_flattenedMetadataGenericObject
_metadataGenericObject
_itemProperties
_identityPropertiesLoader
_timedMetadataRequest
_timedMetadataResponse
_timedMetadataOperationQueue
_isMusicCellularStreamingAllowed
_maximumSizeAllowedForCellularAccess
_isHLSAsset
_isiTunesStoreStream
_streamingKeyCertificateURL
_streamingKeyServerURL
_rtcReportingParentHierarchyToken
_rtcReportingServiceIdentifier
_radioPlayback
_radioStreamPlayback
_leasePlaybackPreventionState
_assetCacheProvider
_assetSourceStoreFrontID
_genericObject
_jingleTimedMetadata
_mediaLibrary
_siriInitiated
_playbackRequestEnvironment
_stationItemLikedState
_equivalencySourceAdamID
_downloadCompleteSuccessNotification:
_downloadCompleteFailedNotification:
_notifyCompletionHandlerWithSuccess:error:
completionHandler
setCompletionHandler:
initWithAsset:
_asset
_completionHandler
initWithWritingStyle:
setShouldReportPlayActivityEvents:
initWithPlayer:reportingController:
setOffline:
removeObserver:
endObservingSubscriptionStatus
defaultRequestEnvironment
setIdentityPropertiesLoader:
modelSong
emptyIdentifierSet
setItemGenericObject:
lyricsID
setLyricsID:
setModelPlayEvent:
featureName
setFeatureName:
recommendationData
setRecommendationData:
newPlayActivityEvent
setEventType:
visibleDuration
setItemEndTime:
sourceType
setSourceType:
recordPlayActivityEvents:forEventSource:
recordLyricsViewEvent:
jinglePlayActivityReportingController
setJinglePlayActivityReportingController:
reportingPlaybackObserver
setReportingPlaybackObserver:
_jinglePlayActivityReportingController
_reportingPlaybackObserver
sharedRestrictionsMonitor
allowsExplicitContent
_prepareRequestInformation
lastBatchItemIdentifiers
sectionedModelObjects
_originalIndexPathsForStoreID:
storeItemMetadataForItemIdentifier:
item
itemAtIndexPath:
section
_shouldUsePlaylistEntriesForSectionAtIndex:
_modelObjectWithStoreItemMetadata:requestModelObject:shouldUsePlaylistEntries:
_eligibilityForItem:
initWithModel:personalizationStyle:
_indexPathAccountingForRemovalsWithOriginalIndexPath:
replaceObjectAtIndexPath:withObject:
_removeItemAtOriginalIndexPath:
sectionAtIndex:
replaceSectionAtIndex:withObject:
_addEquivalencyForMetadata:requestStoreIdentifier:
removeObject:
containsObject:
_appendProgressiveContentDescriptorsWithStoreItemMetadata:
removeObjectAtIndex:
isFinalResponse
numberOfSections
childStoreItemMetadatas
clientIdentifier
setClientIdentifier:
setReason:
setTimeoutInterval:
setRetryDelay:
allowLocalEquivalencies
setAllowLocalEquivalencies:
setPersonalizationStyle:
clientInfo
setClientInfo:
setDelegatedUserIdentity:
setUserIdentity:
setUserIdentityStore:
isNSArray__
initWithObjects:
playlistEntry
numberWithInteger:
countOfIndexesInRange:
indexPathForItem:inSection:
genericObjectWithModelObject:
setShouldUsePlaylistEntry:
modelObjectWithStoreItemMetadata:sourceModelObject:
contentItemID
initWithKeyOptions:valueOptions:capacity:
stringByAppendingFormat:
setContentItemID:
copyWithBlock:
copyWithIdentifiers:block:
totalItemCount
initWithStorePlatformDictionary:
playbackPrioritizedIndexPaths
storeItemMetadataRequestItemIdentifierForIdentifiers:
storeItemMetadataRequestNeedsPersonalizationForIdentifiers:
indexPathWithIndex:
_addOriginalIndexPath:forStoreID:
enumerateItemsInSectionAtIndex:usingBlock:
enumerateSectionsUsingBlock:
addObjectsFromArray:
removeObjectsInArray:
indexSetWithIndexesInRange:
insertObjects:atIndexes:
storeIDs
indexSetWithIndex:
addIndex:
initWithRequest:shouldLibraryPersonalize:
equivalencyMapping
unpersonalizedContentDescriptors
handleResponse:
newStoreItemMetadataRequest
batchSize
setBatchSize:
earliestExpirationDate
storePersonalizationStyle
request
shouldLibraryPersonalize
_currentBatchCount
_defaultLibraryPersonalizationStyle
_equivalencyMapping
_baseContentItemIDToOccurrenceCount
_genericObjectBuilder
_lastStoreIDBasedSectionWasPlaylist
_orderedStoreIDs
_pendingOrderedStoreIDs
_pendingPrioritizedStoreIDs
_progressiveContentDescriptors
_sectionIndexToDeletedIndexSet
_storeIDToIndexPathReference
_unknownEndpointLibraryPersonalizationStyle
_allowsExplicitContent
_shouldLibraryPersonalize
_batchSize
_earliestExpirationDate
_storePersonalizationStyle
_request
itemKind
sectionProperties
sectionKind
modelClass
requiredStoreLibraryPersonalizationProperties
propertySetByCombiningWithPropertySet:
wantsDetailedKeepLocalRequestableResponse
supportsKeepLocalStatusObservation
requiredKeepLocalStatusObservationProperties
itemProperties
emptyPropertySet
propertySetWithProperties:
initWithProperties:relationships:
initWithRequestedPropertySet:
initWithRequest:
setResults:
_personalizationResponseDidInvalidateNotification:
isValid
_invalidate
initWithRequest:personalizationResponse:
adamIDData
setAdamIDData:
streamFields
setStreamFields:
setUnpersonalizedContentDescriptors:
_personalizationResponse
_adamIDData
_streamFields
_unpersonalizedContentDescriptors
setTitle:
setArtist:
setAlbum:
isExplicitContent
setExplicitContent:
artworkDictionaries
setArtworkDictionaries:
_explicitContent
_title
_artist
_album
_artworkDictionaries
allowsHLSContent
hlsAssetInfo
playlistURL
setAssetURL:
keyServerURL
setStreamingKeyServerURL:
keyCertificateURL
setStreamingKeyCertificateURL:
setITunesStoreStream:
setIsHLSAsset:
setAllowsAssetInfoCaching:
setIsCloudStreamingAsset:
prefersHighQualityContent
prefersVideoContent
fileAssetInfoList
flavorType
indexOfObject:
sortUsingComparator:
setAssetQualityType:
fileExtension
setAssetPathExtension:
fairPlayInfoList
purchaseBundleSinfDictionary
protectionType
setAssetProtectionType:
setSuzeLeaseID:
setPurchaseBundleDictionary:
setAllowsAssetCaching:
updateForPlaybackOfFileAsset:fromResponse:
setWillBecomeActivePlayerItemHandler:
allowsAssetInfoCaching
setIsHomeSharingAsset:
setProtectedContentSupportStorageFileURL:
_allowsAssetInfoCaching
_isHomeSharingAsset
_isCloudStreamingAsset
_iTunesStoreStream
_assetPathExtension
_assetProtectionType
_assetQualityType
_assetURL
_protectedContentSupportStorageFileURL
_purchaseBundleDictionary
_suzeLeaseID
_willBecomeActivePlayerItemHandler
defaultStore
activeAccount
uniqueIdentifier
setStoreAccountID:
currentDevice
storeFrontIdentifier
setStoreFrontID:
MP_capabilities
setHasSubscriptionPlaybackCapability:
sharedLoader
loadReportingIdentityPropertiesWithCompletionHandler:
_calloutQueue
_serialWorkQueue
defaultInfo
initWithClientInfo:
deviceInfo
deviceGUID
setDeviceGUID:
setDeviceName:
systemReleaseType
setSystemReleaseType:
setRequestUserAgent:
defaultTimeZone
setTimeZoneName:
isPrivateListeningEnabled
setPrivateListeningEnabled:
currentDeviceDelegateInfo
staticAssets
sharedNetworkPlayabilityMonitor
_allowsCellularPlayback
mediaClip
_currentPreferredStaticAsset
setMediaClip:
previewArtworkCatalog
_isVideoAsset
effectiveNetworkTypeForPlayback
requiredMediaClipProperties
initWithMediaClip:
isCloudItem
_modelGenericObject
_mediaClip
addEngineObserver:
playerID
initWithPlayerID:
setPlaybackQueueDataSource:
setPlaybackEngine:
setLyricsDelegate:
lastSiriPlaybackContextIDForPlayerID:
_durationAvailableNotification:
_likedStateChangedNotification:
_disableQueueModificationsChangedNotification:
sharedCommandCenter
becomeActive
isEngineRestoringState
hasInitializedSupportedCommands
_performCommandEvent:completion:
playCommand
hasTargets
removeTarget:action:
addTarget:action:
pauseCommand
stopCommand
togglePlayPauseCommand
nextTrackCommand
previousTrackCommand
playItemInQueueCommand
setPlaybackQueueCommand
registerSupportedQueueType:
registerSupportedCustomQueueIdentifier:
prepareForSetPlaybackQueueCommand
insertIntoPlaybackQueueCommand
removeFromPlaybackQueueCommand
createRadioStationCommand
skipForwardCommand
numberWithInt:
setPreferredIntervals:
skipBackwardCommand
likeCommand
bundleWithIdentifier:
localizedStringForKey:value:table:
setLocalizedTitle:
setLocalizedShortTitle:
dislikeCommand
setInitializedSupportedCommands:
_updateSupportedCommands
registerSpecializedQueueIdentifier:localizedName:queueType:queueParameters:
unregisterSpecializedQueueIdentifier:
invalidatePlaybackQueue
setPlaybackState:
_updateUpNextItemCount
changeRepeatModeCommand
setCurrentRepeatType:
changeShuffleModeCommand
setCurrentShuffleType:
startDate
token
endDate
timeIntervalSinceDate:
playbackEngine
implementation
_playlistManager
itemForContentItemID:
setModelSong:
setVisibleDuration:
reportingController
currentItem
canSeekItem:
changePlaybackPositionCommand
seekForwardCommand
seekBackwardCommand
setCanBeControlledByScrubbing:
canSkipToPreviousItemForItem:
setEnabled:
canSkipItem:
userCanChangeShuffleAndRepeatType
advanceRepeatModeCommand
advanceShuffleModeCommand
activeShuffleType
activeRepeatType
preventsHardQueueModificationsForItem:
supportsAddToQueue
setSupportedInsertionPositions:
disableQueueModifications
reorderQueueCommand
setPresentationStyle:
likedState
setActive:
ratingCommand
upNextItemCount
setUpNextItemCount:
command
mediaRemoteCommandType
isNegative
contextID
play
pause
isPlaying
togglePlayback
isAd
indexForContentItemID:
playItemAtIndex:withOptions:
isRequestingDefermentToPlaybackQueuePosition
changePlaybackIndexBy:deltaType:ignoreElapsedTime:
beginSeek:
endSeek
positionTime
setCurrentTime:
playbackQueue
setSiriReferenceIdentifier:
insertionPosition
addPlaybackContext:toQueueWithInsertionType:completionHandler:
stringWithUTF8String:
getPlaybackContextWithCompletion:
insertAfterContextItemID
moveItemAtPlaybackIndex:toPlaybackIndex:intoHardQueue:
repeatType
setRepeatType:
preservesRepeatMode
setMusicRepeatType:
shuffleType
setShuffleType:
preservesShuffleMode
setMusicShuffleType:
removeItemAtPlaybackIndex:
prepareForImminentPlaybackIntent
replaceIntent
verifyWithError:
endPlayback
setLastSiriPlaybackContextID:forPlayerID:
reloadWithPlaybackContext:completionHandler:
stationURL
radioPlaybackIntentWithStationURL:
isRequestingPlaybackInitialization
setShouldStartPlayback:
durationIsValid
durationInSeconds
interval
currentTime
setLikedState:
rating
engine:didChangeToState:
engine:willChangeToItem:fromItem:
engine:didChangeToItem:
engine:willResetQueueWithPlaybackContext:
engine:didResetQueueWithPlaybackContext:error:
engine:didChangeQueueWithReason:
engine:didChangeShuffleType:
engine:didChangeRepeatType:
engineWillBeginStateRestoration:
engineDidEndStateRestoration:
initWithPlaybackEngine:
publishIfNeeded
addSupportedSpecializedQueueIdentifier:localizedName:queueType:queueParameters:
removeSupportedSpecializedQueueIdentifier:
nowPlayingInfoCenter:didBeginLyricsEvent:
nowPlayingInfoCenter:didEndLyricsEvent:
setEngineRestoringState:
infoCenter
commandCenter
_libraryAddStatusObserver
_lastContextID
_initializedSupportedCommands
_engineRestoringState
_playbackEngine
_infoCenter
_commandCenter
currentIndex
contentItemIDForPlaylistIndex:
isPlaceholderItemForContentItemID:
updateLocationDependentPropertiesForItem:
contentItem
progressWithTotalUnitCount:
nowPlayingInfoCenter:artworkCatalogForContentItem:
setFittingSize:
setCompletedUnitCount:
requestImageWithCompletionHandler:
artworkCatalogForPlaybackTime:
nowPlayingInfoCenter:contentItemIDForOffset:
nowPlayingInfoCenter:contentItemForID:
nowPlayingInfoCenter:artworkForContentItem:size:completion:
nowPlayingInfoCenter:infoForContentItem:completion:
nowPlayingInfoCenter:availableLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:currentLanguageOptionsForContentItem:completion:
nowPlayingInfoCenter:contentItemIDsFromOffset:toOffset:nowPlayingIndex:
nowPlayingInfoCenter:childContentItemIDAtIndex:ofItem:
contentItemForOffset:
requestedProperties
initWithRequestedProperties:
properties
storePlatformMetadata
genericObjectForStorePlatformMetadata:
offerWithType:
setStoreSubscriptionAdamID:
setBookmarkTime:
setHasBeenPlayed:
setShouldRememberBookmarkTime:
setUserPlayCount:
setStartTime:
setStopTime:
setStoreUbiquitousIdentifier:
setPlaybackPosition:
genericObjectForRadioStationTrack:contentItemID:
_storePlatformBuilder
_requestedSongProperties
_requestedProperties
assetLoadProperties
fileAsset
qualityType
itemIdentifiers
initWithFileAsset:sourceItemIdentifiers:
setSourceItemIdentifiers:
purchaseBundleFilePath
fileExistsAtPath:isDirectory:
fileURLWithPath:isDirectory:
pathExtension
initWithContentsOfFile:
propertyListWithData:options:format:error:
isNSDictionary__
clearPlaybackAssetCacheFileAssetForGenericObject:withCompletionHandler:
requirePreferredAssetQuality
responseHandler
_requirePreferredAssetQuality
_assetLoadProperties
_responseHandler
setStoreID:
_radioStationMatchMetadata
setMatchMetadata:
_shouldMatchArtist
setShouldMatchArtist:
radioStationMatchContext
setKind:
setAlbumName:
setArtistName:
setComposerName:
setCopyright:
discNumber
setDiscCount:
setGenreName:
isCompilation
setCompilation:
setDuration:
trackNumber
setTrackNumber:
trackCount
setTrackCount:
year
setYear:
setStoreCloudID:
hasLoadedValueForKey:
setArtistStoreID:
setRepresentativeCloudID:
setAlbumStoreID:
_initWithMediaLibrary:
populateLocationPropertiesWithPath:assetProtectionType:completionBlock:
_highQualityCachedAssetDestinationDirectory
_lowQualityCachedAssetDestinationDirectory
UUID
UUIDString
lowercaseString
stringByAppendingPathComponent:
stringByAppendingPathExtension:
setWithObjects:
valuesForProperties:
setShouldLibraryAdd:
pathForResourceFileOrFolder:
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
deviceLibraryProvider
decodeInt64ForKey:
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeInt64:forKey:
encodeObject:forKey:
encodeInteger:forKey:
_copyWithClass:zone:
allocWithZone:
initWithStoreAccountID:deviceGUID:privateListeningStateSource:
copyWithZone:
supportsSecureCoding
mutableCopyWithZone:
encodeWithCoder:
initWithCoder:
storeAccountID
deviceName
requestUserAgent
timeZone
_deviceGUID
_deviceName
_privateListeningStateSource
_systemReleaseType
_requestUserAgent
_storeAccountID
_timeZone
setPrivateListeningStateSource:
setTimeZone:
valueTransformer
setValueTransformer:
_valueTransformer
relationshipModelClass
translatorForMPModelClass:
entityTranslator
setRelationshipModelClass:
_relationshipModelClass
_translatorForMPModelClass:create:
mapPropertyKey:toValueTransformer:
valueForKey:
setObject:forKeyedSubscript:
objectForPropertySet:contentItem:middleware:baseTranslator:prependKeyPath:
_valueForKeyPath:forContentItem:middleware:
MPModelClass
setValue:forKey:
enumerateKeysAndObjectsUsingBlock:
_propertyTranslatorForKeyPath:
lastObject
subarrayWithRange:
_translatorForMPModelClass:
mapIdentifierCreationBlock:
mapPropertyKey:toMPContentItemSelector:
mapRelationshipKey:toModelClass:
objectForPropertySet:contentItem:middleware:
identifiersForContentItem:middleware:
_propertiesToTranslators
_relationshipsToTranslators
_MPModelClass
insertString:atIndex:
tracklistDataSourceForSource:
tracklistDataSource
getPlaybackContextForIntent:withCompletion:
getRemotePlaybackQueueForIntent:playerPath:withCompletion:
referenceWithMPModelObject:
setSeedContentReference:
setTracklistSource:
setTracklistToken:
setStationName:
setRadioStationPlaybackMetadata:
initWithStationStringID:
setStationURL:
radioPlaybackIntentFromAlbum:
radioPlaybackIntentFromArtist:
radioPlaybackIntentFromSong:
radioPlaybackIntentWithStation:
radioPlaybackIntentWithStationStringID:
getRemotePlaybackQueueRepresentationWithPlayerPath:completion:
localizedTitle
tracklistSource
tracklistToken
shuffleMode
setShuffleMode:
playActivityFeatureName
setPlayActivityFeatureName:
playActivityRecommendationData
setPlayActivityRecommendationData:
_resolvedTracklistDataSource
_localizedTitle
_tracklistSource
_tracklistToken
_shuffleMode
_playActivityFeatureName
_playActivityRecommendationData
setRadioStationStringID:
setRadioStationHash:
setRadioStationID:
setBeats1:
descriptionText
setEditorNotes:
setShortEditorNotes:
setHasExplicitContent:
artworkInfo
responseDictionary
responseArray
artworkURL
absoluteString
artworkRequestTokenForStorePlatformArtworkValue:
sharedStoreArtworkDataSource
initWithToken:dataSource:
setArtworkCatalogBlock:
setAllowsItemLiking:
modelRadioStationForMetadata:
_requestedRadioStationProperties
setMediaRemoteMuxer:
_registerForPlayer:
_setActivePlayer:
_unregisterForPlayer:
stopMediaRemoteSync
_removeSupportedCommands
_updateSupportedCommandsForPlayer:
null
integerValue
parentAppBundleID
_updateParentApplication:
stopSyncingNowPlayingInfo
startSyncingNowPlayingInfo
updateSupportedCommandsForCommandCenter:muxer:action:
_activeCommands
removeTarget:
mediaRemoteOptions
performCommandEvent:completion:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:
initWithSystemPlayer:
invalidateSupportedCommandsForPlayer:
setApplicationPlayer:
observeValueForKeyPath:ofObject:change:context:
systemPlayer
applicationPlayer
_activePlayer
_systemPlayer
_applicationPlayer
inputOperations
resolvedPlayerPath
isInProcess
playerPath
infoCenterForPlayerID:
initWithName:object:handler:
inputsProtocols
outputProtocols
setInputOperations:
_inputOperations
lastRecordedPlayEvent
playlist
currentRepeatType
setPlayEvent:
setAllowsStoreContainerImport:
operationQueue
setOperationQueue:
setLastRecordedPlayEvent:
_operationQueue
_lastRecordedPlayEvent
_currentRepeatType
playbackState
setPlaybackStateFuture:
playbackStateFuture
setPlayerState:
_playbackStateFuture
artworkProperties
artworkIdentifier
initWithIdentifier:artworkProperties:artworkIdentifier:
stringRepresentation
_identifier
_artworkIdentifier
_artworkProperties
valueWithCGSize:
sizeInfo
bestArtworkSizes
hasMaxSupportedSize
systemConfiguration
mediaLibraryArtworkType
supportedSizesForMediaType:artworkType:
allObjects
maxSupportedSize
supportedSizes
artworkURLWithSize:cropStyle:format:preferP3ColorSpace:
requestWithURL:cachePolicy:timeoutInterval:
areRepresentationsAvailableForCatalog:
supportedSizesForCatalog:
requestForCatalog:size:
getExportableArtworkPropertiesForCatalog:completionHandler:
CGSizeValue
performRequest:options:completion:
requestWithCommandRequests:
setOptions:
performWithCompletion:
initWithCommandRequests:
options
blockOperationWithBlock:
initWithCommandRequest:options:
addDependency:
performRequest:completion:
commands
setCommands:
_options
_commands
label
initWithMediaRemoteCommand:options:response:
userInitiatedOptions
setUserInitiatedOptions:
requestLabel
setRequestLabel:
_command
_userInitiatedOptions
_controller
_requestLabel
dependencies
dictionary
unsignedIntValue
sendCommand:options:completion:
deviceActivePlayerPath
stringByReplacingCharactersInRange:withString:
responseClass
setPlayerPath:
middlewareClasses
setTracklistRange:
setPlayingItemProperties:
queueSectionProperties
setQueueSectionProperties:
setQueueItemProperties:
_playerPath
_playingItemProperties
_queueSectionProperties
_queueItemProperties
_tracklistRange
controller:chain:
playerState:chain:
playerRepeatType:chain:
playerShuffleType:chain:
playerLastChangeDirection:chain:
playerUpNextItemCount:chain:
playerNumberOfSections:chain:
playerNumberOfItems:inSection:chain:
playerItemDuration:atIndexPath:chain:
playerItemEditingStyleFlags:atIndexPath:chain:
playerModelObject:propertySet:atIndexPath:chain:
playerPlayingItemIndexPath:chain:
playerPlayingItemGlobalIndex:chain:
playerGlobalItemCount:chain:
playerCommandSupported:command:chain:
playerCommandEnabled:command:chain:
playerCommandOptionValue:forKey:command:chain:
playerVideoView:chain:
initWithRequest:middleware:
initWithResponse:
builder
chain
state
_commandRequestForMediaRemoteCommand:
builderProtocol
stop
tracklist
videoView
setVideoView:
_tracklist
_state
_videoView
response
setResponse:
_response
descriptionComponents
seedContentReference
playerCurrentItem
ICRadioContentReference
storeIdentifier
storeAdamIdentifier
storeCloudIdentifier
queueFeederClass
prefixItem
setPlaybackRequestEnvironment:
nowPlayingContentReference
setNowPlayingContentReference:
_nowPlayingContentReference
_seedContentReference
_stationHash
_stationName
_stationStringID
_stationURL
_stationID
kindWithVariants:
kindWithSongKind:
kindWithKinds:
kindWithVariants:playlistEntryKind:options:
kindWithRelationshipKinds:
setItemKind:
setSectionKind:
setShouldBatchResultsWithPlaceholderObjects:
initWithRequest:responseHandler:
decodeBoolForKey:
decodeObjectOfClasses:forKey:
objectAtIndex:
isNSString__
isSubclassOfClass:
encodeBool:forKey:
setShouldExcludeNonShuffleItems:
setPlaybackPrioritizedIndexPaths:
setAllowsPlaybackResponseBatching:
playbackSourceModelObjects
setWantsDetailedKeepLocalRequestableResponse:
rtcReportingPlayQueueSourceIdentifier
previousResponse
shouldBatchResultsWithPlaceholderObjects
setSectionedModelObjects:
setStoreIDs:
_shouldBatchResultsWithPlaceholderObjects
_wantsDetailedKeepLocalRequestableResponse
_allowLocalEquivalencies
_previousResponse
_clientIdentifier
_sectionedModelObjects
_storeIDs
_playbackPrioritizedIndexPaths
MPC_contentItemIdentifierCollection
playerLayer
player
presentationSize
isReadyForDisplay
videoGravity
setScaleMode:
preferredContentSize
setVideoGravity:
keyPathsForValuesAffectingReadyForDisplay
keyPathsForValuesAffectingPreferredContentSize
operationsForPlayerRequest:
operationsForRequest:
setInvalidationObservers:
nextObject
_MPCErrorWithDomain:code:underlyingError:debugDescriptionFormat:arguments:
dictionaryWithCapacity:
initWithFormat:arguments:
initWithOptions:
weakToWeakObjectsMapTable
sharedInstance
setCategory:error:
avPlayer
_player
setVolume:
setMpcPlayer:
setShouldResetQueueWhenReachingEnd:
initWithPlayer:
addPlayer:
_playerDidPauseForPlaybackPreventionNotification:
registerPlayer:
setCommandCenter:
_availableRoutesDidChangeNotification:
_currentItemChangedNotification:
_playbackStateChangedNotification:
_repeatShuffleTypeChangedNotification:
_contentsDidChangeNotification:
_playerPlaybackErrorNotification:
_soundCheckEnabledChangedNotification:
preheatPlayback
setIAmTheiPod:
_displayPlaybackState
playbackIntentObservers
player:willAddPlaybackIntent:withOptions:
player:didAddPlaybackIntent:withOptions:error:
setShouldRestartPlayback:
playlistFeeder
initWithQueueFeeder:
_reloadPlayerWithPlaybackContext:completionHandler:
_adjustedPlaybackContextForContext:
jumpToItemWithContentID:
_handleInsertIntoQueueCommandEvent:completionHandler:
_indexForStringIdentifier:
_handleCreateRadioStationCommandEvent:completionHandler:
_handleSetQueueCommandEvent:completionHandler:
_notifySupportedCommandsChanged
currentStatus
setModelObject:
setModelObjects:
dispatchCommandEvent:completion:
preservePlaybackStateImmediately
shouldRestorePlaybackState
supportsStateRestoration
initForWritingWithMutableData:
encodedData
setPlaylistManagerUUID:
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:
stringForKey:
playlistManagerUUID
integerForKey:
setInteger:forKey:
synchronize
initWithContentsOfURL:options:error:
dataForKey:
initForReadingWithData:
decodeObjectForKey:
finishDecoding
initWithUUIDString:
setPlaylistManager:
setAutoPlayWhenLikelyToKeepUp:
finalizeStateRestorationWithCompletionHandler:
setFallbackPlaybackContext:
videoLayer
routingController
pickedRoute
isDeviceRoute
routeName
sharedAVSystemController
setAttribute:forKey:error:
_refreshIAmTheiPod
hardQueuePlaylistIndexRange
_shouldVendContentItemForOffset:
_nowplayingContentItemForIndex:
_nowplayingContentItemIdentifierForIndex:
softQueueFeeder
isRadioQueueFeeder
softQueuePlaylistIndexRange
displayIndexForItem:
displayCountForItem:
numberWithUnsignedInteger:
setNowPlayingInfo:
createPlaybackContextWithCompletion:
isRequestingImmediatePlayback
_getPlaybackContextForPlaybackQueue:withCompletionHandler:
_updateSupportedCommandsForCommandCenter:target:action:
mediaRemoteMuxer
canSeek
setDelegate:
addNowPlayingItemToLibraryCommand
setStatusBlock:
configureWithModelObject:
addItemToLibraryCommand
willChangeValueForKey:
didChangeValueForKey:
avItem
queueFeeder
_currentItemInvalidedCommandsNotification:
schedulePlaybackStatePreservation
initWithAVItem:
setContainer:
playbackErrorObservers
playerDidPauseForLeaseEnd:
_playerItemForAVItem:
player:didFailToPlayItem:error:
player:didFailToPlayFirstItem:error:
query
setLegacyMediaQuery:
setRequest:
startIndex
setStartIndex:
shouldStartPlayback
shouldRestartPlayback
siriReferenceIdentifier
updateForSoundCheckDefaultsChange
isMainThread
isSupported
itemForPlaylistIndex:
queueRequestOperationClass
remoteCommand:isSupportedForContentItemIdentifier:
remoteCommand:isEnabledForContentItemIdentifier:
currentContainer
addPlaybackIntent:withOptions:completion:
clearPlaybackQueueWithCompletion:
pictureInPictureSupported
setPictureInPictureSupported:
registerWithPlaybackLeaseController:
isRestoringPlaybackState
restorePlaybackStateCompletionHandler:
setFallbackPlaybackIntent:
isMediaRemoteSyncing
isSyncingNowPlayingInfo
activeRouteName
avController
startPictureInPicture
hardQueueItemCount
contentItemIdentifierForOffset:
_playerDidPausePlaybackForLeaseEndNotification:
startMediaRemoteSync
fallbackPlaybackIntent
setPlayer:
playerObserver
setPlayerObserver:
setReportingController:
iAmTheiPod
_avItemToPlayerItemWeakMap
_currentContainer
_currentItem
_hasScheduledPlaybackStatePreservation
_isRestoringPlaybackState
_hasReceivedAddPlaybackIntent
_mediaRemoteSync
_stateRestorationSerialQueue
_allowsNewPlaybackErrorItem
_firstPlaybackErrorItem
_iAmTheiPod
_fallbackPlaybackIntent
_playerObserver
_reportingController
initWithController:
addChildReportingController:
processInfo
processName
defaultClientVersion
initWithPlayer:clientName:clientType:clientVersion:
beginObservingSubscriptionLease
beginObservingSubscriptionStatus
beginObservingCloudLibraryEnabled
endObservingSubscriptionLease
endObservingCloudLibraryEnabled
_rtcReportingController
_playbackUserDefaultsEQPresetDidChangeNotification:
_setState:
playWithOptions:
_connectAVPlayer
musicEQPreset
_setEQPreset:
_registerForPlaylistManager:
_queueModificationsDidChangeNotification
_unregisterForPlaylistManager:
defaultItemEQPresetType
setupEQPresetWithDefaultPreset:
playlistManagerClass
_expectedAssetTypesForPlaybackMode:
fallbackPlaybackContext
mpcPlayer
_fallbackPlaybackContext
_mpcPlayer
_playlistManagerUUID
_allowsExplicitContentDidChangeNotification:
newOperationForDetailedKeepLocalStatusConfigurationForSectionAtIndex:responseHandler:
timeIntervalSinceNow
equivalencySourceStoreAdamIDForLocalStoreAdamID:
setInvalidationDate:
setFinalResponse:
isInvalidForPersonalization
localStoreAdamIDToEquivalencySourceStoreAdamIDMap
setLocalStoreAdamIDToEquivalencySourceStoreAdamIDMap:
invalidationDate
_invalidationTimer
_finalResponse
_invalidForPersonalization
_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
_invalidationDate
_commonInit
sourceContexts
restoreState:
indexSet
setDisableQueueModifications:
strongToWeakObjectsMapTable
setPlaybackContextUniqueIdentifier:
_handleConfiguredQueueFeeder:fromPlaybackContext:
itemCount
setQueueFeeder:
identifierAtIndex:queueFeeder:
setItemIdentifier:
_softQueuePlaylistIndexRangeIncludingCurrentItem:
_hardQueuePlaylistIndexRangeIncludingCurrentItem:
_insertSoftQueueSourceContext:atIndex:
playlistIdentifier
_playlistIndexOfItemIdentifier:
_prepareToQueuePlaybackIndex:selectionDirection:
queueCoordinator
reloadItemsKeepingCurrentItem:
_notifyQueueFeederContentsChanged
reloadWithPlaybackContext:requireFinalTracklist:completionHandler:
_removeHardQueueItems
_itemIsSoftQueueItem:
itemIdentifier
indexOfItemWithIdentifier:
_playlistIterationForQueueFeeder:withMaxQueueIndexToPreload:
setCount:
_itemIsHardQueueItem:
_hardQueueIndexForIndex:
_removeSoftQueueSourceContextAtIndex:
insertObject:atIndex:
_removeSourceContextAtIndex:
playlistIndexOfItem:
_sourceContextForPlaylistIndex:
handlePlaybackFailureForItem:
indexOfItemWithIdentifier:queueFeeder:
delegate
playlistManager:didFailLoadingAllItemsForQueueFeeder:
hasPerformedErrorResolution
_itemForPlaylistIndex:
sectionIdentifier
queueIdentifierForItemID:
isPlaceholderItemForQueueIdentifier:
setLegacyUniqueID:
contentItemIDAtIndex:
playlistIndexOfQueueIdentifier:inPlaylistFeeder:
_metadataItemForSourceContext:
_invalidateCachedMusicPlayerControllerQueue
applyVolumeNormalizationForItem:
player:currentItemWillChangeFromItem:
player:currentItemDidChangeToItem:
_softQueueSourceContextForIndex:
playlistIndexOfItemIdentifier:
removeObjectsInRange:
removeAllObjects
clearHardQueue
removeAllIndexes
setPlaylistFeeder:startIndex:keepPlaying:
repeatMode
setRepeatMode:
_playbackIndexForDelta:fromIndex:ignoreElapsedTime:totalItemCount:didReachEnd:
allowsQueueResetWhenReachingEnd
replaceObjectsInRange:withObjectsFromArray:
playlistIndexOfIndex:inPlaylistFeeder:
queueFeederDidInvalidateRealShuffleType:
_willFinishReloadWithQueueFeeder:fromPlaybackContext:
containsIndex:
uuid
_updateMusicPlayerControllerQueueWithCompletionHandler:
removals
_indexOfMediaItem:
queueDescriptorsToPrepend
playbackContext
queueInsertions
allKeys
reverseObjectEnumerator
mediaItemForIdentifier:
valueForProperty:
initWithMediaItems:uuid:
_softQueueIndexForIndex:
_itemForSourceContext:
_queueFeeder:itemForIdentifier:
setPlaylistIdentifier:
metadataItemForIdentifier:
setSourceContexts:
indexToFaultIn
setIndexToFaultIn:
itemForIdentifier:
setPlayerIdentifier:
removeObjectAtIndex:returningRemovedObject:
hasItemForIndex:
unsignedIntegerValue
keyForObject:
identifierAtIndex:
allowsUserVisibleUpcomingItems
canSkipToPreviousItem
playbackMode
clearSoftQueue
metadataItemForPlaylistIndex:
player:currentItemDidChangeFromItem:toItem:
playlistFeederForPlaylistIndex:
setCurrentIndex:selectionDirection:
playlistIndexWithDelta:fromIndex:ignoreElapsedTime:didReachEnd:
playlistItemCount
queueFeeder:didChangeContentsWithPreferredStartIndex:error:
queueFeeder:didChangeContentsWithReplacementPlaybackContext:
queueCoordinator:itemToFollowItem:
currentQueueUUID
musicPlayerControllerQueueForUUID:
requestMusicPlayerControllerQueueWithCompletionHandler:
setMusicPlayerControllerQueue:withCompletionHandler:
setSoftQueueFeeder:
hardQueueSourceContexts
setHardQueueSourceContexts:
lastPlayedSoftQueueItem
setLastPlayedSoftQueueItem:
nextCurrentIndex
setNextCurrentIndex:
hardQueueInsertionIndex
setHardQueueInsertionIndex:
repeatPlaylistIdentifer
setRepeatPlaylistIdentifer:
softQueueModifications
setSoftQueueModifications:
_ignoreNextIndexChanges
_disableSoftQueueFaulting
_ignoreSoftQueueInvalidation
_ignoreHardQueueInvalidation
_maximumModifiedPlaylistIterationIndex
_minimumPlaylistIndex
_maximumPlaylistIndex
_failedSoftQueueIndexes
_identifiersToIndexes
_musicPlayerControllerAccessQueue
_currentMusicPlayerControllerQueue
_queueFeederLookup
_disableQueueModifications
_softQueueFeeder
_hardQueueSourceContexts
_lastPlayedSoftQueueItem
_nextCurrentIndex
_hardQueueInsertionIndex
_repeatPlaylistIdentifer
_softQueueModifications
_itemIdentifier
_queueFeeder
iterationIndex
setIterationIndex:
_sourceContexts
_iterationIndex
_count
_indexToFaultIn
assetSourceStorefrontID
householdID
setHouseholdID:
storefrontID
_allowsHLSContent
_prefersVideoContent
_prefersHighQualityContent
_assetSourceStorefrontID
_fileAsset
_homeSharingAsset
_itemIdentifiers
_storeAsset
_householdID
_storefrontID
_accountID
_delegatedAccountID
controllerForPlayerPath:
setControllerFuture:
controllerFuture
setController:
_controllerFuture
handleStoreDialogResponse:usingRequestContext:withDialogTimeout:withCompletionHandler:
_artworkDidChangeNotification:
_titlesDidChangeNotification:
_durationAvailablityDidChangeNotification:
_modelGenericObjectDidChangeNotification:
_explicitDidChangeNotification:
_timeDidJumpNotification:
_rateDidChangeNotification:
modelGenericObjectRepresentation
_updateSnapshot
timeIntervalSinceReferenceDate
timeOfSeekableStart
timeOfSeekableEnd
defaultPlaybackRate
durationSnapshot
albumName
artistName
isExplicit
composerName
_snapshot
_avItem
supportedCommands
setSupportedCommandsFuture:
supportedCommandsFuture
setSupportedCommands:
_supportedCommandsFuture
registerReturnType:returnValueBlock:
queueContentItems
playingIndexPath
playerState
_queueContentItems
_supportedCommands
_playingIndexPath
_playerState
_supportedCommands:infoValueForKey:
commandInfoForCommand:
numberOfItemsInSection:
elapsedTimeTimestamp
elapsedTime
_playbackRateForContentItem:
isAlwaysLiveItem
editingStyleFlags
_sectionGenericObjectPropertySetForContentItem:propertySet:
_itemGenericObjectPropertySetForContentItem:propertySet:
auxiliaryNowPlayingInfo
deviceSpecificUserInfo
_genericObjectPropertySetForContentItem:preferredRelationships:propertySet:
playbackRate
_mediaRemoteContentItem
cancellationHandler
operationType
subscriptionLeaseSession
isDelegatedLeaseSession
setStorePurchasedAdamID:
setCloudUniversalLibraryID:
setCancellationHandler:
_handlePlaybackResponse:withPlaybackCacheRequest:error:
dialog
initWithRequestContext:storeSubscriptionAdamID:
assetExpirationDate
setExpirationDate:
setDialogDictionary:
fileAssets
initWithiTunesCloudStoreFileAssetInfo:
setFileAssetInfoList:
hlsAsset
initWithiTunesCloudStoreHLSAssetInfo:
setHlsAssetInfo:
addCachedResponse:forRequest:
_cancellationHandler
_operationType
_requestContext
startItem
isPlaylistItemsQuery
_playlistItemPersistentIDForItemPersistentID:
setDeviceLibraryPersistentID:
setStartItemIdentifiers:
startItemID
startTimes
setStartTimeModifications:
endTimes
setEndTimeModifications:
playParametersQueue
startItemPlayParameters
contentItemCollectionInfo
_createNowPlayingInfoForItem:completionHandler:
setDataSource:
_reloadForInitialRequest
soundCheckEnabled
_hasPlaceholderItemAtIndex:
_songShuffledIndexForIndex:
_modelObjectAtIndex:
_genericObjectForModelObject:
_equivalencySourceAdamIDForIdentifierSet:
weakObjectsHashTable
_identifierSetAtIndex:
_indexOfItemWithIdentifier:shouldIgnoreShuffle:
initWithModelObject:
intValue
itemIndexForShuffledIndex:
legacyMediaQuery
musicRepeatType
realRepeatType
musicShuffleType
realShuffleType
requireFinalTracklist
cancelAllOperations
startItemIdentifiers
setLabel:
siriAssetInfo
setActiveShuffleType:
startTimeModifications
endTimeModifications
assetStoreFronts
invalidate
shuffleWithStartingIndex:
shuffle
contentsDidChangeWithPreferredStartIndex:error:
_reloadModelRequestForInvalidation
firstSection
setPlaylist:
_resultsForShuffleController
indexPathForGlobalIndex:
identifiersForItemAtIndexPath:
invalidateAssets
invalidateRealRepeatType
invalidateRealShuffleType
mqf_requiredPlaybackProperties
beginBackgroundTaskWithName:expirationHandler:
indexPathForItemWithIdentifiersIntersectingSet:
globalIndexForIndexPath:
setPlaylistEntry:
setMovie:
setTvEpisode:
setShouldIncludeContentItemID:
setSectionProperties:
_responseDidInvalidateNotification:
mediaPlayerBundle
setMainTitle:
setSupportsLikedState:
setLikedStateEnabled:
setPlaceholderTitle:
_currentPreferredStartIndexWithFinalResponse:
_handleFinalResponseWithPreferredStartIndex:
_reloadModelRequestWithCompletionHandler:
MPC_consumeSiriAssetInfo:withCompletion:
_newModelRequest
shuffledIndexForItemIndex:
_unregisterNotificationsForResponse:
_registerNotificationsForResponse:
_endBackgroundTaskAssertion
hasSameContentAsSectionedCollection:
_beginBackgroundTaskAssertion
requiredPropertiesForStaticMediaClips
rtcReportingSessionAdditionalUserInfo
itemCountForShuffleController:
shuffleController:identifierForItemAtIndex:
shuffleController:countOfItemIdentifier:withMaximumCount:
audioSessionModeForItemAtIndex:
copyRawItemAtIndex:
hasValidItemAtIndex:
initialPlaybackQueueDepthForStartingIndex:
itemClass
itemTypeForIndex:
mediaItemAtIndex:
indexOfMediaItem:
playerPreparesItemsForPlaybackAsynchronously
shouldReuseQueueFeederForPlaybackContext:
shuffleItemsWithAnchor:
_playbackUserDefaultsMusicRepeatTypeDidChangeNotification:
_playbackUserDefaultsMusicShuffleTypeDidChangeNotification:
_shouldRecordReturnedItemIDs
.cxx_construct
_activeModelGenericAVItems
_assetStoreFronts
_backgroundTaskIdentifier
_backgroundTasks
_currentRevisionID
_endTimeModifications
_finalTracklistLoadingCompletionHandler
_hasFoundStartItem
_hasLoadedFinalResponse
_hasShuffledInitialResult
_itemListChangeDetectionQueue
_placeholderAVItem
_placeholderMediaItem
_requireFinalTracklist
_rtcReportingPlayQueueSourceIdentifier
_shuffleController
_siriAssetInfo
_isSiriInitiated
_startItemIdentifiers
_retrievedIndexToIdentifiers
_startTimeModifications
mqf_newPlaybackItemMetadata
mqf_configurePlaybackItemMetadata:
mqf_playbackItemMetadataModelObject
requiredProperties
setEpisode:
episode
identifierForIdentifierType:
predicateWithProperty:equalToInt64:
_MPC_ML3QueryWithEntityClass:predicate:options:
hasEntities
predicateWithProperty:equalToInteger:
predicateMatchingPredicates:
anyEntityPersistentID
predicateWithProperty:equalToValue:
enumeratePersistentIDsAndProperties:ordered:usingBlock:
playlistWithPersistentID:
collectionWithPersistentID:groupingType:verifyExistence:
libraryDataProvider
library
queryWithLibrary:predicate:orderingTerms:usingSections:options:
MPC_entityWithContentItemIdentifierCollection:options:
initWithRadioStationTracks:
kindWithModelClass:
MSVBase64UUIDString
initWithUnpersonalizedRequest:unpersonalizedContentDescriptors:
setRepresentedObjects:
initWithStartHandler:
_radioStationTracks
representedObjectResults
setRadioStationTracks:
radioStationTracks
_init
initWithQueue:
finishWithValue:
_shouldRegisterForNotifications
playbackStateCacheState
supportedCommandsCacheState
playQueueIdentifiersCacheStateForRange:
playQueueIdentifiersForRange:
playingIdentifierCacheState
contentItemCacheStateForIdentifier:
contentItemArtworkCacheStateForIdentifier:size:
contentItemArtworkForContentItemIdentifier:artworkIdentifier:size:
invalidateAllTokens
_contentItemForIdentifierFuture
_contentItemArtworkForIdentifierFuture
initWithModelGenericObject:response:
remove
metadataObject
_metadataObject
initWithRoute:bundleID:playerID:
pathWithRoute:bundleID:playerID:
route
bundleID
appendFormat:
appendString:
resolveWithRouteResolvedHandler:completion:
_createMediaRemotePlayerPathWithOrigin:
pathWithRoute:mediaRemotePlayerPath:
connection
externalDevice
isConnected
isInvalidated
connectWithCompletion:
mainBundle
bundleIdentifier
processIdentifier
systemMusicPathWithRoute:playerID:
resolveWithCompletion:
mediaRemotePlayerPath
_bundleID
_playerID
_mediaRemotePlayerPath
_route
mpc_radioContentReference
initWithICRadioContentReference:
_ICRadioContentReference
setRepresentativeCloudIdentifier:
setStoreIdentifier:
setAlbumArtistName:
discCount
setDiscNumber:
fileSize
setFileSize:
setStoreAdamIdentifier:
setStoreCloudIdentifier:
playbackIntentWithStartItemIdentifiers:
setParentReportingController:
_recordReportingEvents:
parentReportingController
childReportingControllers
recordReportingEvents:
removeChildReportingController:
_childReportingControllers
_parentReportingController
future
setFuture:
_future
array
weakToStrongObjectsMapTable
_onQueue_finalize
objectEnumerator
result
isFinalized
isInvalid
debugLabel
setDebugLabel:
accessQueue
calloutQueue
successBlocks
failureBlocks
completionBlocks
invalidBlocks
_finalized
_invalid
_result
_debugLabel
_successBlocks
_failureBlocks
_completionBlocks
_invalidBlocks
_applicationWillTerminateNotification:
playActivityEvent
eventType
shouldReportToStore
eventDate
_captureNonCatalogAggregatePlayActivityEventWithNonCatalogAggregateEndTime:
isSBEnabled
storeFrontID
isOffline
endReasonType
itemEndTime
itemStartTime
initWithIdentity:
valueForBagKey:
reasonHintType
containerType
flushPendingPlayActivityEventsForEndpointIdentifier:withCompletionHandler:
recordPlayActivityEvents:withCompletionHandler:
_clearNonCatalogAggregatePlayActivityEventData
acquirePendingPlayActivityEventsForEndpointIdentifier:withStoreAccountID:completionHandler:
completePendingPlayActivityEvents:forSessionToken:withResult:completionHandler:
setEventDate:
setItemDuration:
setItemType:
setSBEnabled:
acquirePendingPlayActivityEventsForStoreAccountID:completionHandler:
playActivityController
shouldReportAggregateTimePlayActivityEvents
setShouldReportAggregateTimePlayActivityEvents:
shouldReportPlayActivityEvents
_accessSerialQueue
_nonCatalogAggregatePlayDuration
_nonCatalogAggregateStartTime
_nonCatalogDeviceName
_nonCatalogOffline
_nonCatalogSBEnabled
_nonCatalogSourceType
_nonCatalogStoreAccountID
_nonCatalogStoreFrontID
_shouldReportAggregateTimePlayActivityEvents
_shouldReportPlayActivityEvents
_playActivityController
_handleDidEnterBackgroundNotification:
_handleDidReceiveMemoryWarningNotification:
_handleWillEnterForegroundNotification:
artworks
scaledFittingSize
bestArtworkForPixelSize:
representationSize
pixelSize
cachedImageDataForRadioArtwork:MIMEType:
destinationScale
mainScreen
scale
imageWithData:scale:
representationWithSize:image:
_cacheArtworkRepresentation:forKey:
requestWithURL:
_initWithData:immediateLoadWithMaxSize:scale:renderingIntent:
CGImage
loadImageForRadioArtwork:withCompletionHandler:
isSuspendedUnderLock
_setCacheSize:preserveExisting:
_clearCache
initWithMaximumCapacity:
sharedRadioArtworkDataSource
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
_backgroundCacheSize
_cacheSize
_cachedArtworkRepresentations
_cachedArtworkRepresentationsAccessQueue
_resumeToForegroundCacheSize
variants
kindWithVariants:options:
shouldExcludeNonShuffleItems
initWithResponse:playingItemIndexPath:
initWithDataSource:
setSupportsSetQueueCommand:
setSupportedSpecializedQueues:
setWithArray:
setSupportedQueueTypes:
setSupportedCustomDataQueueIdentifiers:
setSupportsChangeRepeat:
setSupportsAdvanceRepeat:
setSupportedRepeatTypes:
setSupportsChangeShuffle:
setSupportsAdvanceShuffle:
setSupportedShuffleTypes:
setSupportsPreviousItem:
setSupportsPreviousSection:
setSupportsPreviousChapter:
setSupportsNextItem:
setSupportsNextSection:
setSupportsNextChapter:
setSupportsJumpToItem:
resetCommand
insertCommand
reorderCommand
repeatCommand
shuffleCommand
changeItemCommand
lastChangeDirection
playingItemIndexPath
playingItemGlobalIndex
globalItemCount
_lastChangeDirection
_upNextItemCount
_repeatType
_shuffleType
_items
_playingItemIndexPath
_playingItemGlobalIndex
_globalItemCount
initWithModelGenericObject:indexPath:response:
sectionIndexTitles
optionalSectionIndexTitlesRange
indexOfSectionForSectionIndexTitleAtIndex:
hasSameContentAsDataSource:
setPlayingItemIndexPath:
supportedQueueTypes
replaceWithPlaybackIntent:replaceIntent:
supportsSetQueueCommand
supportedCustomDataQueueIdentifiers
clear
replaceWithPlaybackIntent:
specializedIntents
supportedSpecializedQueues
_supportsSetQueueCommand
_supportedSpecializedQueues
_supportedQueueTypes
_supportedCustomDataQueueIdentifiers
supportedInsertionPositions
_isSupportedPlaybackIntent:forRemotePlayer:atInsertionPosition:
insertAfterPlayingItemWithPlaybackIntent:
insertPlaybackIntent:afterItem:
insertAtEndOfTracklistWithPlaybackIntent:
_supportedInsertionPositions
indexPath
canMoveItem:
moveItem:afterItem:
supportsChangeRepeat
supportsAdvanceRepeat
supportedRepeatTypes
advance
_supportsChangeRepeat
_supportsAdvanceRepeat
_supportedRepeatTypes
supportsChangeShuffle
supportsAdvanceShuffle
supportedShuffleTypes
currentShuffleType
_supportsChangeShuffle
_supportsAdvanceShuffle
_currentShuffleType
_supportedShuffleTypes
supportsPreviousItem
supportsPreviousSection
supportsPreviousChapter
supportsNextItem
supportsNextSection
supportsNextChapter
supportsJumpToItem
previousItem
previousSection
previousChapter
nextItem
nextSection
nextChapter
changeToSection:
changeToItem:
_supportsPreviousItem
_supportsPreviousSection
_supportsPreviousChapter
_supportsNextItem
_supportsNextSection
_supportsNextChapter
_supportsJumpToItem
getLastKnownHouseholdIDWithCompletion:
setDelegatedIdentity:
storefrontHeaderSuffix
setIdentity:
delegationProperties
setBuildVersion:
setEnqueuerProperties:
_getHasSubscriptionPlaybackCapabilityForUserIdentity:completion:
getSubscriptionStatusForUserIdentity:withCompletionHandler:
storeID
storeSubscriptionID
setStoreCloudAlbumID:
isExplicitItem
floatValue
supportsArtworkCatalogLoading
_artworkCatalogForContentItem:
remotePlayerArtworkDataSource
mediaRemoteArtworkDataSource
initWithIdentifier:artworkIdentifier:
artworkURLTemplates
setArtworkTemplateItems:
setResolvedURLString:
setMediaType:
setMediaLibraryArtworkType:
storeAlbumID
setGlobalPlaylistID:
albumArtistName
storeArtistID
trackArtistName
genreName
episodeNumber
seasonNumber
radioStationStringIdentifier
radioStationName
URLWithString:
setVendorID:
info
_playbackErrorNotification:
eventObserver
setAllowsNewPlaybackErrorItem:
engine:didFailToPlayItem:withError:
firstPlaybackErrorItem
engine:didFailToPlayFirstItem:withError:
changePlaybackIndexBy:deltaType:
_configureAudioSession
setCategory:mode:routeSharingPolicy:options:error:
isSystemMusicApplication
_contentsChanged
_itemWillChange:
_itemDidChange:
allowsNewPlaybackErrorItem
setFirstPlaybackErrorItem:
prefersApplicationAudioSession
_networkPolicyItemCellularRestrictedNotification:
_initWithValue:
localDeviceSource
staticSourceWithValue:
_currentValue
_value
mpcReporting_isQuickPlay
setSupportsBeginFastForward:
setSupportsEndFastForward:
setSupportsBeginRewind:
setSupportsEndRewind:
setSupportsSkipForward:
setSupportsSkipBackward:
setSupportsSeekToPlaybackPosition:
supportsSkipForward
setPreferredForwardJumpIntervals:
supportsSkipBackward
setPreferredBackwardJumpIntervals:
preferredBackwardJumpIntervals
setPrefersNegativeBackwardSkipIntervals:
setSupportedPlaybackRates:
setPreferredPlaybackRate:
_feedbackCommandWithMediaRemoteCommand:
setMinimumValue:
setMaximumValue:
initWithResponse:mediaRemoteCommand:
setValue:
seekCommand
playbackRateCommand
wishlistCommand
rateCommand
contentItemIdentifier
revision
_contentItemIdentifier
_revision
_indexPath
_duration
_contentItemID
supportsBeginFastForward
_seekCommandWithMediaRemoteCommand:options:
supportsBeginRewind
supportsEndFastForward
supportsEndRewind
prefersNegativeBackwardSkipIntervals
supportsSeekToPlaybackPosition
beginSeekWithDirection:
jumpByInterval:
changePositionToElapsedInterval:
preferredForwardJumpIntervals
_supportsBeginFastForward
_supportsEndFastForward
_supportsBeginRewind
_supportsEndRewind
_supportsSkipForward
_supportsSkipBackward
_prefersNegativeBackwardSkipIntervals
_supportsSeekToPlaybackPosition
_preferredBackwardJumpIntervals
_preferredForwardJumpIntervals
supportedPlaybackRates
setPlaybackRate:
preferredPlaybackRate
_supportedPlaybackRates
_preferredPlaybackRate
changeValue:
localizedShortTitle
presentationStyle
value
_localizedShortTitle
_presentationStyle
minimumValue
maximumValue
_minimumValue
_maximumValue
_itemReportingJingleTimedMetadataDidChangeNotification:
_playerItemDidChangeNotification:
_playerItemWillChangeNotification:
_playerPlaybackStateDidChangeNotification:
_playerDidReloadWithPlaybackContextNotification:
_playerWillReloadWithPlaybackContextNotification:
_playerDidSetCurrentTimeNotification:
_playerWillSetCurrentTimeNotification:
systemTimeZone
setEventTimeZone:
identityPropertiesLoader
eventDuration
itemGenericObject
overrideItemType
trackInfo
originalIdentifierSet
setAdamID:
setCloudAlbumID:
globalPlaylistID
setCloudPlaylistID:
cloudVersionHash
setPlaylistVersionHash:
setSubscriptionAdamID:
setRadioAdamID:
setPurchasedAdamID:
subscriptionAdamID
purchasedAdamID
setCloudID:
setTrackInfo:
setRequestingBundleIdentifier:
setRequestingBundleVersion:
setContainerType:
setContainerIDs:
setItemIDs:
timedMetadata
setTimedMetadata:
enqueuerProperties
hasSubscriptionPlaybackCapability
_newReportingPlaybackActivityEventForPlayActivityEvent:eventSource:
mpcReporting_isValidReportingItem
setEndReasonType:
_itemStartTimeForItem:
setItemStartTime:
_itemEndTimeForItem:withProposedEndTime:
_setLastPlayEventEndTimeForCurrentItem:
_reportPlaybackEndedForTimeoutWithItem:
initialPlaybackStartTime
userChangedItemsDuringPlayback
setReasonHintType:
setPlayActivityEvent:
setShouldReportToStore:
didHitPlaybackTimeoutEndingPlayback:withCurrentItem:
didTransitionItemForBan:
recordUserSeekFromTime:toTime:forItem:
willHitPlaybackTimeoutEndingPlayback:withCurrentItem:
willTransitionItemForBan:
_currentJingleReportingTimedMetadata
_hasPendingContainerChange
_hasSetLastPlayEventTimeStamp
_isReloadingWithPlaybackContext
_isScrubbing
_itemForCurrentTimeChange
_recordEventOperationQueue
_lastPlayEventEndTimeForCurrentItem
_lastPlayEventTimeStamp
_shouldReportAsPlaying
_startTimeForCurrentTimeChange
_offline
_SBEnabled
_storeFrontID
mpcReporting_trackInfo
setEventDuration:
setOverrideItemType:
setShouldReportPlayEventsToStore:
setJingleTimedMetadata:
_shouldReportPlayEventsToStore
_overrideItemType
_lyricsID
_itemGenericObject
_privateListeningEnabled
_trackInfo
_modelPlayEvent
_featureName
_recommendationData
_requestingBundleIdentifier
_requestingBundleVersion
_eventDuration
resolvedPlayerPathForPlayerPath:
removeObjectForKey:
setInvalidationToken:
setResolvedPlayerPath:
_playbackStateDidChangeNotification:
_supportedCommandsDidChangedNotification:
_playbackQueueChangedNotification:
_playbackQueueContentItemsChangedNotification:
_contentItemArtworkChangedNotification:
_legacyCommands
_sendLocalCommand:options:completion:
_sendRemoteCommand:options:completion:
commandCenterForPlayerID:
initWithPlaybackContext:
setReplaceIntent:
initWithCommand:playbackQueue:
initWithCommand:playbackQueue:options:
_pushMediaRemoteCommand:withOptions:completion:
valueWithBytes:objCType:
_onQueue_updateOptimisticStateForCommand:options:
_mediaRemotePlaybackQueue
initWithName:
dateWithTimeIntervalSinceNow:
sharedService
addAssertion:
_onQueue_identifiersForRange:
beginTransaction
_onQueue_mergeContentItems:queueRange:
endTransaction
_initWithMediaRemoteContentItem:
imageWithData:
_onQueue_invalidateArtworkFuturesForContentItemID:
_onQueue_purgeArtworkForContentItemIdentifier:
_onQueue_purgeArtworkForContentItemIdentifier:artworkIdentifier:
allValues
maximumCapacity
setMaximumCapacity:
performTransaction:
_onQueue_updateOptimisticElapsedTimeForContentItem:elapsedTime:rate:
_onQueue_setOptimisticPlaybackState:withOptions:
initWithIdentifier:
setElapsedTime:
performSuppressingChangeNotifications:
dictionary:willRemoveObject:forKey:
contentItemArtworkCacheStateForArtworkIdentifier:size:
_onQueue_setOptimisticPlaybackPositionWithOptions:
setAccessQueue:
setCalloutQueue:
invalidationToken
_playbackStateCacheState
_supportedCommandsCacheState
_playingIdentifierCacheState
_playingItemIdentifier
_maximumLoadedRange
_contentItemIDs
_contentItems
_optimisticStateContentItems
_contentItemChanges
_contentItemArtwork
_contentItemArtworkIdentifiers
_playingItemIdentifierFuture
_contentItemIDsFutures
_contentItemFutures
_contentItemArtworkFutures
_resolvedPlayerPath
_mediaRemoteArtworkDataSource
_remotePlayerArtworkDataSource
_invalidationToken
radioStationPlaybackMetadata
nowPlayingContext
setNowPlayingContext:
stationMatchContext
setStationMatchContext:
_radioStationPlaybackMetadata
_nowPlayingContext
_stationMatchContext
defaultIdentityStore
dataUsingEncoding:
JSONObjectWithData:options:error:
initWithStorePlatformDictionary:expirationDate:
sharedStoreItemMetadataRequestController
addStoreItemMetadata:
initWithItemResponseDictionary:urlBag:
modelPlayEventRepresentation
currentThread
getStoreItemMetadataForRequest:responseHandler:
_getShouldLibraryPersonalizeRequest:completionHandler:
autoupdatingActiveAccount
_activeProgress
dictionaryRepresentation
addItem:
mergeFrom:
setIdentifierSet:
setHasContainerType:
hasContainerType
hasIdentifierSet
clearItems
itemsCount
itemAtIndex:
hasPlayActivityFeatureName
readFrom:
writeTo:
identifierSet
setItems:
_containerType
_identifierSet
_has
setStorePlaylistGlobalID:
setStorePlaylistVersionHash:
setCloudCollectionID:
setDelegateInfoID:
setHasDelegateInfoID:
hasDelegateInfoID
setHasStoreAdamID:
hasStoreAdamID
hasStorePlaylistGlobalID
hasStorePlaylistVersionHash
setHasCloudID:
hasCloudID
hasCloudCollectionID
hasRadioStationID
hasCloudUniversalLibraryID
delegateInfoID
storePlaylistGlobalID
storePlaylistVersionHash
cloudCollectionID
_cloudID
_delegateInfoID
_storeAdamID
_cloudCollectionID
_cloudUniversalLibraryID
_radioStationID
_storePlaylistGlobalID
_storePlaylistVersionHash
setUuid:
setHasAccountID:
hasAccountID
hasUuid
hasDeviceGUID
hasDeviceName
setHasSystemReleaseType:
hasSystemReleaseType
hasRequestUserAgent
hasTimeZoneName
setHasPrivateListeningEnabled:
hasPrivateListeningEnabled
timeZoneName
privateListeningEnabled
_timeZoneName
_uuid
setHasMediaType:
hasMediaType
setExcludeFromShuffle:
setHasExcludeFromShuffle:
hasExcludeFromShuffle
excludeFromShuffle
_mediaType
_excludeFromShuffle
hasContentItemID
setHasStoreSubscriptionAdamID:
hasStoreSubscriptionAdamID
setPurchaseHistoryID:
setHasPurchaseHistoryID:
hasPurchaseHistoryID
purchaseHistoryID
_purchaseHistoryID
_storeSubscriptionAdamID
setLibraryAlbumContentReference:
setLibraryArtistContentReference:
setLibraryItemContentReference:
setStoreContentReference:
hasLibraryAlbumContentReference
hasLibraryArtistContentReference
hasLibraryItemContentReference
hasStoreContentReference
libraryAlbumContentReference
libraryArtistContentReference
libraryItemContentReference
storeContentReference
_libraryAlbumContentReference
_libraryArtistContentReference
_libraryItemContentReference
_storeContentReference
hasAlbumName
setRepresentativeItemCloudID:
setHasRepresentativeItemCloudID:
hasRepresentativeItemCloudID
representativeItemCloudID
_representativeItemCloudID
_albumName
hasArtistName
_artistName
setCopyrightText:
hasAlbumArtistName
hasComposerName
contentType
setContentType:
setHasContentType:
hasContentType
hasCopyrightText
setAlbumDiscCount:
setHasAlbumDiscCount:
hasAlbumDiscCount
setHasDiscNumber:
hasDiscNumber
setHasFileSize:
hasFileSize
hasGenreName
setIsCompilation:
setHasIsCompilation:
hasIsCompilation
setHasDuration:
hasDuration
hasTitle
setAlbumTrackCount:
setHasAlbumTrackCount:
hasAlbumTrackCount
setHasTrackNumber:
hasTrackNumber
setHasYear:
hasYear
albumDiscCount
albumTrackCount
_albumArtistName
_albumDiscCount
_albumTrackCount
_composerName
_contentType
_copyrightText
_discNumber
_genreName
_trackNumber
_year
_isCompilation
setRadioStationURLString:
setAccountInfo:
hasRadioStationURLString
hasSeedContentReference
hasNowPlayingContentReference
hasAccountInfo
radioStationURLString
accountInfo
_accountInfo
_radioStationURLString
addAccountInfo:
addContainer:
setStartingItemIndexPath:
accountInfoType
clearAccountInfos
accountInfosCount
accountInfoAtIndex:
clearContainers
containersCount
containerAtIndex:
hasStartingItemIndexPath
setHasShuffleMode:
hasShuffleMode
accountInfos
setAccountInfos:
containers
setContainers:
startingItemIndexPath
_accountInfos
_containers
_startingItemIndexPath
setContainerIndex:
setHasContainerIndex:
hasContainerIndex
setItemIndex:
setHasItemIndex:
hasItemIndex
containerIndex
itemIndex
_containerIndex
_itemIndex
initWithRequestContext:redownloadParametersString:
setUsePrioritizedURLSession:
setRedownloadParameters:
isAppleTV
setPlaybackRequest:
performRequestWithResponseHandler:
_mediaDownloadRequest
reasonType
initWithGetTracksRequest:siriAssetInfo:playActivityController:
playActitySessionToken
playActivityEvents
_runStep:withFinishHandler:
flattenedTracksWithTracks:
delegatedIdentityProperties
identityProperties
expirationDate
isFinished
tracklistActionType
_cacheTracksForStep:
appendItems:
initWithTracks:tracklistAction:
performWithCompletionHandler:
tracklistAction
_tracklistAction
_tracks
stationMetadata
data
initWithData:
setSiriAssetInfo:
siriRecommendationIdentifier
_getPlaybackRequestEnvironmentWithBaseEnvironment:completion:
mediaQuery
trackIdentifiers
firstTrackIdentifier
seedTrack
_getPlaybackContextWithRecommendedContentWithSeedAdamID:completion:
stringByRemovingPercentEncoding
initWithBase64EncodedString:options:
initWithMultiverseIdentifier:
initWithPersistentID:
sharedCloudController
isGeniusEnabled
_getPlaybackContextFromCloudControllerWithSeedItem:completion:
_getPlaybackContextFromMediaLibraryWithSeedItem:completion:
fetchRecommendedContentWithSeedTrackID:seedTrackIDType:count:completion:
songsQuery
predicateWithPersistentIDs:count:shouldContain:
addFilterPredicate:
geniusItemsForSeedItem:completion:
predicateWithProperty:values:
loadGeniusItemsForSagaID:completionHandler:
initWithMediaRemotePlaybackQueue:
_playbackContext
_replaceIntent
specificAccountWithDSID:
identityAllowingDelegation:
setDelegated:
timeZoneWithName:
setDelegationProperties:
addDelegationUUIDs:forUserIdentity:completionHandler:
insertPropertiesForUserIdentity:usingBlock:completionHandler:
setCloudVersionHash:
_createRemoteCommandWithConcreteClass:mediaRemoteType:
startPictureInPictureCommand
mpc_remotePlaybackQueueRequiredProperties
mpc_protoContainerRepresentation
mpc_protoItemRepresentation
getDelegationUUIDsForUserIdentity:completionHandler:
initWithIdentifier:data:
setRequestingImmediatePlayback:
initWithData:encoding:
setSiriRecommendationIdentifier:
shouldExcludeFromShuffle
proxyForObjects:protocol:
_restorePlaybackStateWithCompletion:
beginUsingVideoLayer
endUsingVideoLayer
objects
reportUserSeekFromTime:toTime:
initWithURL:requestContext:
sharedSAPSessionWithVersion:URLBag:requestContext:
signData:withCompletionHandler:
buildURLRequestWithCompletionHandler:
setShouldPreventLeaseAcquisition:
hasScheduledPlaybackStatePreservation
setScheduledPlaybackStatePreservation:
_preservePlaybackStateImmediately
isStateRestorationSupported
archiveRootObject:toFile:
removeItemAtPath:error:
unarchiveObjectWithFile:
start
restoreStateWithCompletion:
setVideoSupported:
removeEngineObserver:
setSystemMusicApplication:
_playerForMusicPlayerServer
isPictureInPictureSupported
isVideoSupported
setStateRestorationSupported:
mediaRemotePublisher
leaseManager
_isPreparingForImminentPlaybackIntent
_pictureInPictureSupported
_videoSupported
_stateRestorationSupported
_scheduledPlaybackStatePreservation
_systemMusicApplication
_delegate
_eventObserver
_implementation
_mediaRemotePublisher
_leaseManager
_onQueue_registerForInvalidationWithUnresolvedPlayerPath:invalidationPlayerPath:
playerPathResolutions
observers
_playerPathResolutions
_observers
leaseID
initWithConfiguration:
initWithICLeaseSession:
strongToStrongObjectsMapTable
clientCount
setClientCount:
icLeaseSession
mpcLeaseSession
startLeaseSessionWithCompletionHandler:
icSuzeLeaseSession
configuration
stopLeaseSessionWithCompletionHandler:
suzeLeaseSession:leaseRenewalDidFailWithError:
_leaseIDToLeaseSessionInfo
initWithICSuzeLeaseSession:
shouldStopWhenFinished
setShouldStopWhenFinished:
_shouldStopWhenFinished
_clientCount
_icLeaseSession
_mpcLeaseSession
setShouldRestorePlaybackState:
addPointer:
pointerAtIndex:
removePointerAtIndex:
registerPlaybackErrorObserver:
registerPlaybackIntentObserver:
unregisterPlaybackErrorObserver:
unregisterPlaybackIntentObserver:
setState:
setCurrentItem:
setCurrentContainer:
setParentAppBundleID:
_playbackErrorObservers
_playbackIntentObservers
_shouldRestorePlaybackState
_restoringPlaybackState
_syncingNowPlayingInfo
_videoLayer
_activeRouteName
_mediaRemoteMuxer
_parentAppBundleID
_modelSong
_sourceType
_visibleDuration
initWithPlaylistManager:
initWithRequest:avController:
playlistManager
_hardQueueRange
_softQueueRange
_controllerContentsDidChangeNotification:
_controllerDidChangeItemNotification:
UTF8String
loadStoreBagWithOptions:completionHandler:
sharedQueue
loadRadioConfigurationWithCompletionBlock:
_serialQueue
_enumerateStoreItemMetadataItemsWithMetadata:block:
childrenStoreIDs
childStorePlatformDictionaryForStoreID:
initWithStorePlatformDictionary:parentStoreItemMetadata:
initWithLookupDictionaries:
enumerateContainerItemsUsingBlock:
_lookupDictionaries
_icSuzeLeaseSession
engineDidPauseForLeaseEnd:
_hasSubscriptionPlaybackCapability
_enqueuerProperties
setClientVersion:
setAssetStoreFronts:
_shouldReportToStore
_playActivityEvent
resolvedURLString
artworkTemplateItems
initWithArtworkResponseArray:
initWithArtworkResponseDictionary:
initWithArtworkURL:
_resolvedURLString
_artworkTemplateItems
_mediaLibraryArtworkType
_finishChangeRequestOperationWithError:
playEvent
itemExistsInDatabaseWithPersistentID:
playbackHistoryPlaylist
removeItems:atFilteredIndexes:completionBlock:
appendItems:completion:
recordPlayEventForAlbumPersistentID:
allowsStoreContainerImport
recordPlayEventForPlaylistPersistentID:
representativeCloudIdentifier
copyright
kind
storeItemWithIdentifier:
assistantAnalyticsController
setAssistantAnalyticsController:
rtcReportingController
setRtcReportingController:
playbackHistoryController
setPlaybackHistoryController:
lyricsReportingController
setLyricsReportingController:
_assistantAnalyticsController
_playbackHistoryController
_lyricsReportingController
playbackItemMetadata
enumerateIdentifiersUsingBlock:
_setIdentifier:forIdentifierType:
_copyWithZone:class:
initWithItemType:
isNSNumber__
identifierCount
_identifierTypeToIdentifier
_itemType
setIdentifier:forIdentifierType:
initWithResponseDictionary:expirationDate:
initWithPreviousStep:
_performDefaultHandlingForButtonAction:
_presentServerDialog:completionHandler:
handleButtonAction:usingRequestContext:withCompletionHandler:
initWithStoreDialog:
setAllowInCar:
createCFUserNotification
action
initWithCFUserNotification:
showWithCompletionHandler:
nextStepWithError:
_fireAndForgetServerDialog:
siriAssetInfoGetTracksResponse
_delegatedIdentityProperties
_finished
_identityProperties
_playActivitySessionToken
_siriAssetInfoGetTracksResponse
_playActitySessionToken
setInteractionLevel:
initWithVerificationContext:
getVerificationContextForUserIdentity:completionHandler:
nextStepWithIdentityProperties:delegatedIdentityProperties:
setPlayActivityEvents:
nextStepWithResponse:error:
actionDictionary
setAdditionalRequestParameters:
nextStepByPerformingButtonAction:
buttons
playableContentManager:initiatePlaybackOfContentItemAtIndexPath:completionHandler:
playableContentManager:initializePlaybackQueueWithCompletionHandler:
playableContentManager:initializePlaybackQueueWithContentItems:completionHandler:
playableContentManager:didUpdateContext:
isAvailable
clientVersion
_copyWithPlaybackRequestEnvironmentClass:
setIdentityStore:
setStoreDialogResponseHandler:
setAllowsExpiredBags:
_clientVersion
_delegationProperties
_userIdentity
sectionWithAVItem:
placeholderSectionWithStationName:
identifiersIdentifyRadioStation:
_indexPathForGlobalIndex:
AVItemAtIndex:
AVItemQueueIdentifierAtIndex:
numberOfItems
isExplicitItemAtIndex:
indexOfObjectIdenticalTo:
trackForItemAtIndex:
trackType
_globalIndexForIndexPath:
playbackHistory
removeExplicitItems
removeObjectIdenticalTo:
savePlaybackHistoryWithUpdates:completionHandler:
initWithIdentityStore:
stationIdentifier
currentTrack
setCurrentTrack:
numberOfSkips
setNumberOfSkips:
setTracks:
updateHistoryForStationWithIdentifier:userIdentity:usingBlock:completionHandler:
trackModels
setRadioStation:
updateWithPersonalizedResponse:
indexOfItemWithAVItemQueueIdentifier:
isPlaceholderAVItem:
needsMoreTracksForPlaybackIndex:
removeTrailingLoadingPlaceholder
savePlaybackHistoryWithUpdates:
tracksByApplyingTracksResponse:currentIndex:
_originalStationName
_placeholderItemSection
_playbackHistoryStore
_prefixItemSection
_sections
_stationTracksSection
setQueueIdentifier:
_item
initWithStationIdentifier:
initWithIndexesInRange:
removeTracksAtIndexes:
initWithTrack:
addTrack:
likeState
parentTrack
_playbackHistory
_trackModels
container
setUserInfo:
_explicit
_container
_userInfo
_modelPlayEventRepresentation
setRepresentations:
comparePlaybackOrder:
_modelGenericObjectRepresentation
_durationSnapshot
newItem
insertItem:afterEntity:
removeItem:
removeAllItems
storeBagDictionary
initWithBagDictionary:
initWithURLBagDictionary:
objectsAtIndexes:
initWithPlatformContext:
setKeyProfile:
setValue:forRequestParameter:
storeFrontSuffix
setStoreFrontSuffix:
setResponseBlock:
setStoreBagDictionary:
_storeBagDictionary
initWithInteger:
model
stationDictionary
isEffectivelyEqualStationWithPlaybackMetadata:
artworkCollection
_artworkCollection
_hasSetArtworkCollection
_hasSetStationHash
_hasSetStationID
_hasSetStationName
_hasSetStationStringID
setArtworkCollection:
_allowsStoreContainerImport
_playEvent
userAdvancedDuringPlayback
setSkipDate:
replaceTrackAtIndex:withTrack:
_loadAdditionalItemsIfNeeded
_endObservingIdentityStoreForSignOut
_startPlaybackRequestWithPlaybackContext:
setReasonType:
_loadTracksWithRequest:
setPlaybackContext:
getHistoryForStationWithIdentifier:userIdentity:completionHandler:
isSkippable
_detectSignOutForIdentityStore:
_responseDidInvalidate
_detectSignOutForIdentityStoreChangeNotification:
setAllowsExplicitContent:
setShouldResponseContainStationMetadata:
setDelegatedPrivateListeningEnabled:
_failAfterRequest:withError:
_handlePersonalizationResponse:personalizationError:fromRequest:
_observePersonalizationResponse:
_savePlaybackHistoryWithCurrentIndex:
contentsDidChangeWithPreferredStartIndex:
_beginObservingIdentityStoreForSignOut
_defaultGetTracksRequestWithContext:radioStation:
_handleGetTracksResponse:getTracksError:fromRequest:
_indexOfAVItem:
_removeRestrictedTracks
_repersonalizeCurrentTracks
synchronizeWithCompletionHandler:
setPreservingCurrentlyPlayingItem:
canReorder
_hasLoadedAdditionalItemsForCurrentItem
_lastCleanPlayedIdentifier
_lastPlayedIdentifier
_lastResponse
_loadingOperationDepth
_loadingOperationQueue
_mayHaveRestrictedContent
_observedIdentityStore
_playbackQueue
_queueGeneration
setIdentifier:
setArtworkIdentifier:
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
hasExistingRepresentationOnDiskForArtworkCatalog:
timedMetadataGroups
stringValue
getBytes:length:
charValue
scannerWithString:
scanString:intoString:
scanUpToString:intoString:
isAtEnd
initWithLookupDictionary:
setLookupItemArtworks:
setExplicitSong:
setTimedMetadataData:
storeRequestContext
setStoreRequestContext:
allStorePlatformMetadata
_timedMetadataGroups
Play Queue Identifiers Changed
v4@?0
Item Changed: 
Content item completed without error or value: %@
v12@?0@"MPNowPlayingContentItem"4@"NSError"8
v16@?0@"NSString"4I8^B12
Failed to get play queue identifers
v8@?0@"NSArray"4
v8@?0@"NSError"4
Playing Identifier Changed
Failed to get playing identifer
v12@?0@"NSString"4@"NSError"8
v16@?0@"MPNowPlayingContentItem"4@"NSIndexPath"8^B12
v12@?0@"NSArray"4@"NSError"8
playQueueIdentifiersFuture=%@ playingIdentifierFuture=%@
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
error
T@"NSError",R,N
invalidationHandler
T@?,C,N
invalidationObservers
T@"NSArray",R,N
middleware
T@"MPCMediaRemoteMiddleware",&,N,V_middleware
playerRequest
T@"MPCPlayerRequest",&,N,V_playerRequest
playQueueIdentifiersFuture
T@"MPCFuture",&,N,V_playQueueIdentifiersFuture
playingIdentifierFuture
T@"MPCFuture",&,N,V_playingIdentifierFuture
T@?,C,N,V_invalidationHandler
T@"NSArray",R,N,V_invalidationObservers
<%@ %p setupDuration:%f error:%@>
T@"NSError",&,N,V_error
setupDuration
Td,N,V_setupDuration
MPCModelGenericAVItemJingleTimedMetadataDidChangeNotification
MPCModelGenericAVItemPlaybackPreventionStateDidChangeNotification
movie
musicvideo
uploadedaudio
uploadedvideo
tvshow
music
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.accessQueue
%@ %@
%lli
v12@?0@"ICUserIdentityProperties"4@"NSError"8
 not
v12@?0@"ICMusicSubscriptionLeaseSession"4@"MPSubscriptionStatusPlaybackInformation"8
com.apple.MediaPlayer.MPCModelGenericAVItem.assetLoadOperationQueue
v12@?0@"MPCModelGenericAVItemAssetLoadResult"4@"NSError"8
v12@?0@"ICURLBag"4@"NSError"8
match
purchaseHistory
v12@?0@"ICMusicSubscriptionLeaseStatus"4@"NSError"8
v12@?0@"ICMusicSubscriptionPlaybackResponse"4@"NSError"8
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.sCompletionSerialQueue
v8@?0@"MPIdentifierSet"4
v8@?0@"MPModelFileAsset"4
v12@?0B4@"NSError"8
v12@?0@"MPCSuzeLeaseSession"4@"NSError"8
not specified
v8@?0@"ICMusicSubscriptionLeaseSession"4
/BuildRoot/Library/Caches/com.apple.xbs/Sources/MobileMusicPlayer_Sim/MobileMusicPlayer-4015.300.42/MediaPlaybackCore/MPCModelGenericAVItem.m
v12@?0@"ICRadioLikeResponse"4@"NSError"8
@"MPArtworkCatalog"12@?0d4
v12@?0@"ICSecureKeyDeliveryResponse"4@"NSError"8
v12@?0@"MPCModelGenericAVItemTimedMetadataResponse"4@"NSError"8
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.timedMetadataOperationQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.LyricsOperationQueue
v12@?0@"MPModelSong"4@"NSError"8
AlwaysUse64kbpsQuality
com.apple.mobileipod
AlwaysUse256kbpsQuality
/bfa1LxXd7G1WqHujpjsdA
tracks
not 
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseSessionLoadQueue
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.subscriptionLeaseLoadCalloutQueue
v12@?0@"ICMusicSubscriptionStatusResponse"4@"NSError"8
v12@?0@"ICMusicSubscriptionLeaseSession"4@"NSError"8
app.music.tilt.stream-track
app.music.tilt.track
app.music.uploaded-content
app.music.match
app.music.purchase
app.music.subscription
app.music.synced
.cloud
info
com.apple.radio.ping.jingle
com.apple.MediaPlaybackCore.MPCModelGenericAVItem.utilitySerialQueue
leasePlaybackPreventionState
Ti,R,N
rtcReportingParentHierarchyToken
T@,R,N
rtcReportingServiceIdentifier
T@"NSString",R,C,N
rtcReportingAssetType
assetCacheProvider
T@"<MPCModelPlaybackAssetCacheProviding>",&,N,V_assetCacheProvider
assetSourceStoreFrontID
T@"NSString",C,N,V_assetSourceStoreFrontID
equivalencySourceAdamID
Tq,N,V_equivalencySourceAdamID
genericObject
T@"MPModelGenericObject",&,N,V_genericObject
jingleTimedMetadata
T@"NSData",R,C,N,V_jingleTimedMetadata
mediaLibrary
T@"MPMediaLibrary",&,N,V_mediaLibrary
siriInitiated
T@"NSNumber",C,N,GisSiriInitiated,V_siriInitiated
radioPlayback
TB,N,GisRadioPlayback,V_radioPlayback
radioStreamPlayback
TB,N,GisRadioStreamPlayback,V_radioStreamPlayback
shouldReportPlayEventsToStore
TB,R,N
playbackRequestEnvironment
T@"MPCPlaybackRequestEnvironment",R,C,N,V_playbackRequestEnvironment
stationItemLikedState
Ti,N,V_stationItemLikedState
supportsRadioTrackActions
TB,N,VsupportsRadioTrackActions
Ti,R,N,V_leasePlaybackPreventionState
asset
T@"AVURLAsset",R,W,N,V_asset
completionHandler
T@?,C,N,V_completionHandler
v8@?0@"MPModelGenericObject"4
jinglePlayActivityReportingController
T@"MPCJinglePlayActivityReportingController",&,N,V_jinglePlayActivityReportingController
reportingPlaybackObserver
T@"MPCReportingPlaybackObserver",&,N,V_reportingPlaybackObserver
--%li
v16@?0@"MPModelObject"4i8^B12
allowsExplicitContent
TB,R,N,V_allowsExplicitContent
batchSize
Ti,N,V_batchSize
earliestExpirationDate
T@"NSDate",R,C,N,V_earliestExpirationDate
equivalencyMapping
T@"NSDictionary",R,C,N
storePersonalizationStyle
Ti,R,N,V_storePersonalizationStyle
request
T@"MPCModelStorePlaybackItemsRequest",R,C,N,V_request
shouldLibraryPersonalize
TB,R,N,V_shouldLibraryPersonalize
unpersonalizedContentDescriptors
T@"MPSectionedCollection",R,N
adamIDData
T@"NSData",C,N,V_adamIDData
streamFields
T@"MPCModelGenericAVItemTimedMetadataStreamFields",&,N,V_streamFields
T@"MPSectionedCollection",C,N,V_unpersonalizedContentDescriptors
title
T@"NSString",C,N,V_title
artist
T@"NSString",C,N,V_artist
album
T@"NSString",C,N,V_album
explicitContent
TB,N,GisExplicitContent,V_explicitContent
artworkDictionaries
T@"NSArray",C,N,V_artworkDictionaries
i12@?0@"MPStoreFileAssetInfo"4@"MPStoreFileAssetInfo"8
allowsAssetCaching
TB,N,V_allowsAssetCaching
allowsAssetInfoCaching
TB,N,V_allowsAssetInfoCaching
assetPathExtension
T@"NSString",C,N,V_assetPathExtension
assetProtectionType
Ti,N,V_assetProtectionType
assetQualityType
Ti,N,V_assetQualityType
assetURL
T@"NSURL",C,N,V_assetURL
isHomeSharingAsset
TB,N,V_isHomeSharingAsset
isHLSAsset
TB,N,V_isHLSAsset
isCloudStreamingAsset
TB,N,V_isCloudStreamingAsset
protectedContentSupportStorageFileURL
T@"NSURL",C,N,V_protectedContentSupportStorageFileURL
purchaseBundleDictionary
T@"NSDictionary",C,N,V_purchaseBundleDictionary
streamingKeyCertificateURL
T@"NSURL",C,N,V_streamingKeyCertificateURL
streamingKeyServerURL
T@"NSURL",C,N,V_streamingKeyServerURL
suzeLeaseID
T@,&,N,V_suzeLeaseID
iTunesStoreStream
TB,N,GisiTunesStoreStream,V_iTunesStoreStream
willBecomeActivePlayerItemHandler
T@?,C,N,V_willBecomeActivePlayerItemHandler
hasValidAsset
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.serialWorkQueue
com.apple.MediaPlaybackCore.MPCReportingDeviceIdentityPropertiesLoader.calloutQueue
sharedLoader
T@"MPCReportingDeviceIdentityPropertiesLoader",R
HierarchyToken
app.music.media-clip
mediaClip
T@"MPModelMediaClip",R,N,V_mediaClip
com.apple.MediaPlaybackCore
REMOTE_CONTROL_LIKE_TRACK_RADIO
Radio
REMOTE_CONTROL_LIKE_TRACK_SHORT
REMOTE_CONTROL_DISLIKE_TRACK_RADIO
REMOTE_CONTROL_DISLIKE_TRACK_SHORT
now_playing
 (%lu)
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]
-[_MPCMediaRemotePublisher _performCommandEvent:completion:]_block_invoke
v8@?0i4
v12@?0@"MPQueueFeeder"4@"NSError"8
v12@?0@"MPPlaybackContext"4@"NSError"8
initializedSupportedCommands
TB,N,GhasInitializedSupportedCommands,V_initializedSupportedCommands
engineRestoringState
TB,N,GisEngineRestoringState,V_engineRestoringState
infoCenter
T@"MPNowPlayingInfoCenter",R,N,V_infoCenter
commandCenter
T@"MPRemoteCommandCenter",R,N,V_commandCenter
playbackEngine
T@"MPCPlaybackEngine",R,W,N,V_playbackEngine
v8@?0@"UIImage"4
v8@?0@"MPModelPlaybackPosition"4
v8@?0@"MPModelSong"4
requestedProperties
T@"MPPropertySet",R,C,N,V_requestedProperties
assetLoadProperties
T@"MPCModelGenericAVItemAssetLoadProperties",&,N,V_assetLoadProperties
requirePreferredAssetQuality
TB,N,V_requirePreferredAssetQuality
responseHandler
T@?,C,N,V_responseHandler
com.apple.amp.mediaplaybackcore
Default
Default_Oversize
MediaRemote
MediaRemote_Oversize
Middleware
Middleware_Oversize
Playback
Playback_Oversize
Queue
Queue_Oversize
Reporting
Reporting_Oversize
MPCMediaLibraryPlaybackAssetCacheProviderErrorDomain
plist
deviceLibraryProvider
T@"MPCMediaLibraryPlaybackAssetCacheProvider",R
storeAccountID
deviceGUID
deviceName
privateListeningStateSource
requestUserAgent
systemReleaseType
timeZone
supportsSecureCoding
TB,R
TQ,R,N,V_storeAccountID
T@"NSString",R,C,N,V_deviceGUID
T@"NSString",R,C,N,V_deviceName
T@"MPCPrivateListeningStateSource",R,C,N,V_privateListeningStateSource
Ti,R,N,V_systemReleaseType
T@"NSString",R,C,N,V_requestUserAgent
T@"NSTimeZone",R,C,N,V_timeZone
TQ,D,N
T@"NSString",C,D,N
T@"MPCPrivateListeningStateSource",C,D,N
Ti,D,N
T@"NSTimeZone",C,D,N
valueTransformer
T@?,C,N,V_valueTransformer
relationshipModelClass
T#,N,V_relationshipModelClass
entityTranslator
T@"MPCMediaRemoteEntityTranslator",R,N
_identifiers
@12@?0@"MPNowPlayingContentItem"4@"MPCMediaRemoteMiddleware"8
__%@__PROPERTY
v16@?0@"NSString"4@"MPPropertySet"8^B12
v8@?0@"MPModelObject"4
MPModelClass
T#,R,N,V_MPModelClass
 source=%@
tracklistDataSource
T@"<MPCPlaybackIntentDataSource>",R,N
localizedTitle
T@"NSString",C,N,V_localizedTitle
tracklistSource
Ti,N,V_tracklistSource
tracklistToken
T@"<NSSecureCoding>",&,N,V_tracklistToken
shuffleMode
Ti,N,V_shuffleMode
playActivityFeatureName
T@"NSString",C,N,V_playActivityFeatureName
playActivityRecommendationData
T@"NSData",C,N,V_playActivityRecommendationData
@"MPArtworkCatalog"8@?0@"MPModelRadioStation"4
v8@?0@"MPModelRadioStation"4
currentItem
state
parentAppBundleID
systemPlayer
T@"MPCPlayer",R,N,V_systemPlayer
applicationPlayer
T@"MPCPlayer",&,N,V_applicationPlayer
controller
T@"MPCMediaRemoteController",R,N
PlaybackEngine.implementation.currentItem.type didChange
v8@?0@"NSNotification"4
inputsProtocols
outputProtocols
inputOperations
T@"NSMapTable",&,N
T@"MPCPlaybackEngineMiddleware",&,N,V_middleware
T@"NSMapTable",&,N,V_inputOperations
com.apple.MediaPlaybackCore.MPCPlaybackHistoryController.operationQueue
operationQueue
T@"NSOperationQueue",&,N,V_operationQueue
lastRecordedPlayEvent
T@"MPModelPlayEvent",&,N,V_lastRecordedPlayEvent
currentRepeatType
Ti,N,V_currentRepeatType
Playback State Changed
v8@?0@?<I@?>4
Failed to get playback state
playbackStateFuture=%@
playbackStateFuture
T@"MPCFuture",&,N,V_playbackStateFuture
identifier
T@"NSString",R,C,N,V_identifier
artworkIdentifier
T@"NSString",R,C,N,V_artworkIdentifier
artworkProperties
T@"MPExportableArtworkProperties",R,C,N,V_artworkProperties
MPCPlayerCommandRequestMediaRemoteOptionPlaybackIntent
MPCPlayerCommandRequestMediaRemoteOptionReplaceIntent
commands
T@"NSArray",&,N,V_commands
options
TI,N,V_options
command
TI,R,N,V_command
T@"NSDictionary",R,C,N,V_options
userInitiatedOptions
T@"NSDictionary",C,N,V_userInitiatedOptions
T@"MPCMediaRemoteController",R,N,V_controller
requestLabel
T@"NSString",C,N,V_requestLabel
Failed to send command %d
T@"MPCPlayerCommandRequest",R,N,V_request
TI,R,N,V_options
com.apple.music.playbackqueue.tracklist
com.apple.music.playbackqueue.radio
MPCPlayerErrorKeyMediaRemoteCommandHandlerStatus
MPCPlayerRequestErrorDomain
 playerPath=%@
v12@?0@4@"NSError"8
playerPath
T@"MPCPlayerPath",&,N,V_playerPath
playingItemProperties
T@"MPPropertySet",C,N,V_playingItemProperties
queueSectionProperties
T@"MPPropertySet",C,N,V_queueSectionProperties
queueItemProperties
T@"MPPropertySet",C,N,V_queueItemProperties
tracklistRange
T{?=ii},N,V_tracklistRange
builder
T@"<MPCPlayerResponseBuilder>",R,D,N
videoView
T@"UIView<MPCVideoView>",&,N,V_videoView
tracklist
T@"MPCPlayerResponseTracklist",R,N,V_tracklist
Ti,R,N,V_state
response
T@"MPCPlayerResponse",&,N,V_response
nowPlaying
seed
stationHash
stationName
stationStringID
stationURL
prefixItem
T@"MPAVItem",R,N
T@"MPCPlaybackRequestEnvironment",C,N,V_playbackRequestEnvironment
nowPlayingContentReference
T@"MPCModelRadioContentReference",C,N,V_nowPlayingContentReference
seedContentReference
T@"MPCModelRadioContentReference",C,N,V_seedContentReference
T@"NSString",C,N,V_stationHash
T@"NSString",C,N,V_stationName
T@"NSString",C,N,V_stationStringID
stationID
Tq,N,V_stationID
T@"NSURL",C,N,V_stationURL
app.music.queue-source.catalog
MPCModelStorePlaybackItemsRequestAllowLocalEquivalencies
MPCModelStorePlaybackItemsRequestClientIdentifier
MPCModelStorePlaybackItemsRequestWantsDetailedKeepLocalRequestableResponse
MPCModelStorePlaybackItemsRequestPlaybackRequestEnvironment
MPCModelStorePlaybackItemsRequestStoreIDs
MPCModelStorePlaybackItemsRequestSectionedModelObjects
MPCModelStorePlaybackItemsRequestShouldBatchResultsWithPlaceholderObjects
playbackSourceModelObjects
T@"MPCPlaybackRequestEnvironment",C,N
wantsDetailedKeepLocalRequestableResponse
TB,N
rtcReportingPlayQueueSourceIdentifier
previousResponse
T@"MPModelResponse",&,N
playbackPrioritizedIndexPaths
T@"NSArray",C,N,V_playbackPrioritizedIndexPaths
T@"MPModelResponse",&,N,V_previousResponse
shouldBatchResultsWithPlaceholderObjects
TB,N,V_shouldBatchResultsWithPlaceholderObjects
TB,N,V_wantsDetailedKeepLocalRequestableResponse
allowLocalEquivalencies
TB,N,V_allowLocalEquivalencies
clientIdentifier
T@"NSString",C,N,V_clientIdentifier
sectionedModelObjects
T@"MPSectionedCollection",C,N,V_sectionedModelObjects
storeIDs
T@"NSArray",C,N,V_storeIDs
MPCQueueFeederContentItemIdentifierCollectionDidChangeNotification
MPC_contentItemIdentifierCollection
T@"MPCContentItemIdentifierCollection",R,N
playerLayer.readyForDisplay
playerLayer.player.currentItem.presentationSize
readyForDisplay
TB,R,N,GisReadyForDisplay
preferredContentSize
T{CGSize=ff},R,N
videoGravity
T@"NSString",&,N
playerLayer
T@"AVPlayerLayer",R,N
T@"NSArray",&,N
T@"MPCPlaybackEngine",&,N,V_playbackEngine
T@"NSArray",&,N,V_invalidationObservers
MediaPlaybackCoreErrorDomain
MPCErrorUserInfoKeyStoreDialogDictionary
com.apple.MediaPlaybackCore.MPCMediaPlayerLegacyPlayer.stateRestorationSerialQueue
SIM_VOLUME
v12@?0@"MPCPlayerItemContainer"4@"NSError"8
playback_archive
MPCPlayerStateRestorationPlaylistManagerID
MPCPlayerStateRestorationPreviousAttemptPlaylistManagerID
MPCPlayerRestorationPreviousAttemptCount
MPCPlayerStateRestorationPlaylistManagerCoderData
v8@?0I4
activeRouteName
currentContainer
player
T@"MPCMediaPlayerLegacyAVController",&,N,V_player
playerObserver
T@"MPCMediaPlayerLegacyNowPlayingObserver",&,N,V_playerObserver
reportingController
T@"MPCMediaPlayerLegacyReportingController",&,N,V_reportingController
avController
T@"MPAVController",R,N
iAmTheiPod
TB,N,V_iAmTheiPod
hardQueueItemCount
TI,R,N
pictureInPictureSupported
fallbackPlaybackIntent
T@"MPCPlaybackIntent",&,N,V_fallbackPlaybackIntent
mediaRemoteSync
TB,R,N,GisMediaRemoteSyncing
T@"MPCMediaPlayerLegacyPlayer",W,N,V_player
fallbackPlaybackContext
T@"MPPlaybackContext",&,N,V_fallbackPlaybackContext
mpcPlayer
T@"MPCMediaPlayerLegacyPlayer",W,N,V_mpcPlayer
playlistManagerUUID
T@"NSUUID",&,N,V_playlistManagerUUID
invalidForPersonalization
TB,R,N,GisInvalidForPersonalization,V_invalidForPersonalization
localStoreAdamIDToEquivalencySourceStoreAdamIDMap
T@"NSDictionary",C,N,V_localStoreAdamIDToEquivalencySourceStoreAdamIDMap
_personalizationResponse
T@"MPStoreLibraryPersonalizationResponse",R,N,V_personalizationResponse
finalResponse
TB,N,GisFinalResponse,V_finalResponse
invalidationDate
T@"NSDate",C,N,V_invalidationDate
MPCAVPlaylistManagerDisableQueueModificationsDidChange
playlistManagerArchiveVersion
hardQueueSourceContexts
hardQueueInsertionIndex
repeatPlaylistIdentifier
softQueueFeeder
disableSoftQueueFaulting
maximumModifiedPlaylistIterationIndex
ignoreSoftQueueInvalidation
ignoreHardQueueInvalidation
softQueueModifications
v16@?0@"_MPCAVItemSourceContext"4I8^B12
com.apple.MediaPlaybackCore.MPCMediaPlayerLegacyPlaylistManager.accessQueue
com.apple.MediaPlaybackCore.MPCMediaPlayerLegacyPlaylistManager.musicPlayerControllerAccessQueue
ignoreUpNextDisabled
com.apple.Music
UpNextDisabled
-[MPCMediaPlayerLegacyPlaylistManager addPlaybackContext:toQueueWithInsertionType:completionHandler:]
Could not add tracks to Up Next
v12@?0I4@"NSError"8
-[MPCMediaPlayerLegacyPlaylistManager clearHardQueue]
-[MPCMediaPlayerLegacyPlaylistManager clearSoftQueue]
-[MPCMediaPlayerLegacyPlaylistManager moveItemAtPlaybackIndex:toPlaybackIndex:intoHardQueue:]
-[MPCMediaPlayerLegacyPlaylistManager removeItemAtPlaybackIndex:]
keepingCurrentItem because currentItem was found after invalidation at index %lu.
not keepingCurrentItem because currentItem was not found in active queue feeder.
keepingCurrentItem because preferredStartIndex (%lu) was still currentItem.
not keepingCurrentItem because currentItem was not at the preferredStartIndex (%lu).
keepingCurrentItem because queue changes were not for the active queue feeder.
v8@?0@"MPMusicPlayerControllerQueue"4
allowsUserVisibleUpcomingItems
canSeek
canSkipToPreviousItem
playbackMode
userCanChangeShuffleAndRepeatType
T@"MPQueueFeeder",&,N,V_softQueueFeeder
T@"NSMutableArray",&,N,V_hardQueueSourceContexts
lastPlayedSoftQueueItem
T@"MPAVItem",&,N,V_lastPlayedSoftQueueItem
nextCurrentIndex
Ti,N,V_nextCurrentIndex
Ti,N,V_hardQueueInsertionIndex
repeatPlaylistIdentifer
T@"_MPCAVItemSourceContext",C,N,V_repeatPlaylistIdentifer
T@"_MPCAVPlaylistIteration",&,N,V_softQueueModifications
disableQueueModifications
TB,N,V_disableQueueModifications
hardQueuePlaylistIndexRange
T{_NSRange=II},R,N
softQueuePlaylistIndexRange
queueFeeder
%@ queueFeeder:%@ itemIdentifier:%@
itemIdentifier
T@"<MPAVItemQueueIdentifier>",&,N,V_itemIdentifier
T@"MPQueueFeeder",&,N,V_queueFeeder
sourceContexts
iterationIndex
count
indexToFaultIn
T@"MPSparseArray",&,N,V_sourceContexts
TI,N,V_iterationIndex
TI,N,V_count
TI,N,V_indexToFaultIn
allowsHLSContent
TB,N,V_allowsHLSContent
assetSourceStorefrontID
T@"NSString",C,N,V_assetSourceStorefrontID
prefersVideoContent
TB,N,V_prefersVideoContent
fileAsset
T@"MPModelFileAsset",&,N,V_fileAsset
homeSharingAsset
T@"MPModelHomeSharingAsset",&,N,V_homeSharingAsset
itemIdentifiers
T@"MPIdentifierSet",&,N,V_itemIdentifiers
prefersHighQualityContent
TB,N,V_prefersHighQualityContent
storeAsset
T@"MPModelStoreAsset",&,N,V_storeAsset
accountID
TQ,N,V_accountID
delegatedAccountID
TQ,N,V_delegatedAccountID
householdID
T@"NSString",C,N,V_householdID
storefrontID
T@"NSString",C,N,V_storefrontID
Controller Invalidated
v8@?0@"MPCMediaRemoteController"4
controllerFuture=%@
controllerFuture
T@"MPCFuture",&,N,V_controllerFuture
artworkCatalog
durationSnapshot
explicit
modelGenericObjectRepresentation
composerName
avItem
T@"MPAVItem",R,N,V_avItem
Supported Commands Changed
v8@?0@"<MPCSupportedCommands>"4
Failed to get supported commands
supportedCommandsFuture=%@
supportedCommandsFuture
T@"MPCFuture",&,N,V_supportedCommandsFuture
{?=dddddffBB}
{?=dddddffBB}60@?0@4{?=dddddffBB}8
T@"MPCMediaRemoteController",&,N,V_controller
queueContentItems
T@"MPSectionedCollection",&,N,V_queueContentItems
supportedCommands
T@"<MPCSupportedCommands>",&,N,V_supportedCommands
playingIndexPath
T@"NSIndexPath",N,V_playingIndexPath
playerState
Ti,N,V_playerState
com.apple.MediaPlaybackCore.MPCModelGenericAVItemSubscriptionAssetLoadOperation.accessQueue
operationType
Ti,N,V_operationType
requestContext
T@"ICStoreRequestContext",C,N,V_requestContext
subscriptionLeaseSession
T@"ICMusicSubscriptionLeaseSession",&,N,V_subscriptionLeaseSession
v8@?0@"MPModelAlbum"4
v8@?0@"MPModelPlaylist"4
v8@?0@"NSDictionary"4
com.apple.MediaPlayer.MPCModelQueueFeeder.PlaceholderItemIdentifier
shuffleController
startTimeModifications
endTimeModifications
assetStoreFronts
v12@?0i4@"NSError"8
v16@?0@"MPIdentifierSet"4@"NSNumber"8^B12
com.apple.MediaPlayer.MPCModelQueueFeeder: 
v8@?0@"MPModelPlayEvent"4
LOADING_AUDIO_LABEL
MediaPlayer
v16@?0B4B8@"NSError"12
com.apple.MediaPlayer.MPCModelQueueFeeder.operationQueue
v8@?0B4
v12@?0@"MPModelResponse"4@"NSError"8
rtcReportingSessionAdditionalUserInfo
requiredPropertiesForStaticMediaClips
T@"MPPropertySet",R,N
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.accessQueue
com.apple.MediaPlaybackCore.MPCModelQueueFeeder.itemListChangeDetectionQueue
v24@?0q4r^@12I16^B20
v16@?0@"ICRadioStationTrack"4i8^B12
v16@?0@"MPModelRadioStation"4i8^B12
v12@?0@"MPStoreLibraryPersonalizationResponse"4@"NSError"8
v8@?0@"MPAsyncBlockOperation"4
radioStationTracks
T@"MPSectionedCollection",C,N,V_radioStationTracks
results
T@"MPSectionedCollection",R,C,D,N
T@"MPCPlayerResponse",R,W,N,V_response
metadataObject
T@"MPModelGenericObject",R,N,V_metadataObject
<%@:
 route=%@
 origin=%@
 [system media app]
 bundleID=%@
 playerID=%@
 local active
resolved player path %@ did not have an origin. (unresolved player path %@)
v12@?0^v4^{__CFError=}8
v8@?0^v4
v12@?0C4^v8
external device %@ did not have an origin. (connection %@, isConnected:%d isInvalidated:%d)
%@ did not have connection
mediaRemotePlayerPath
T^v,R,N,V_mediaRemotePlayerPath
route
T@"MPAVRoute",R,N,V_route
bundleID
T@"NSString",R,C,N,V_bundleID
playerID
T@"NSString",R,C,N,V_playerID
inProcess
TB,R,N,GisInProcess
MPCModelPlaybackIntentTracklistTokenRequest
MPCModelPlaybackIntentTracklistTokenStartItemIdentifiers
T@"MPModelRequest",C,N,V_request
startItemIdentifiers
T@"MPIdentifierSet",C,N,V_startItemIdentifiers
ICRadioContentReference
T@"ICRadioContentReference",R,N,V_ICRadioContentReference
com.apple.MediaPlayer.MPCReportingController.accessQueue
parentReportingController
T@"MPCReportingController",W,N
childReportingControllers
T@"NSArray",R,C,N
future
T@"MPCFuture",&,N,V_future
com.apple.MediaPlaybackCore/MPCFuture.accessQueue
<%@ %p:
 debugLabel=%@
 finalized=YES
 invalid=YES
 error=%@
accessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_accessQueue
calloutQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_calloutQueue
successBlocks
T@"NSMutableArray",R,N,V_successBlocks
failureBlocks
T@"NSMutableArray",R,N,V_failureBlocks
completionBlocks
T@"NSMutableArray",R,N,V_completionBlocks
invalidBlocks
T@"NSMapTable",R,N,V_invalidBlocks
result
T@,R,N,V_result
T@"NSError",R,N,V_error
finalized
TB,R,N,GisFinalized,V_finalized
invalid
TB,R,N,GisInvalid,V_invalid
debugLabel
T@"NSString",C,N,V_debugLabel
MPCJinglePlayActivityReportingControllerDidFlushEventsNotification
MPCJinglePlayActivityReportingControllerUserInfoKeyDidIncludeContainerChangeEvent
MPCJinglePlayActivityReportingControllerUserInfoDidIncludeRadioStationStartEvent
com.apple.MPCFoundation.MPCJinglePlayActivityReportingController.accessSerialQueue
play-activity-feed-post-all-play-starts
playActivityController
T@"SSVPlayActivityController",R,N,V_playActivityController
shouldReportAggregateTimePlayActivityEvents
TB,N,V_shouldReportAggregateTimePlayActivityEvents
shouldReportPlayActivityEvents
TB,N,V_shouldReportPlayActivityEvents
com.apple.MediaPlaybackCore.MPCRadioArtworkDataSouce.cachedArtworkRepresentationsAccessQueue
image/jpeg
v16@?0@"NSData"4@"NSString"8@"NSError"12
v16@?0@"<NSCopying><NSObject>"4@"MPArtworkRepresentation"8^B12
app.music.queue-source.library
MPCPlayerEnqueueErrorDomain
items
T@"MPSectionedCollection",R,C,N,V_items
playingItemIndexPath
T@"NSIndexPath",R,C,N,V_playingItemIndexPath
playingItemGlobalIndex
Ti,R,N,V_playingItemGlobalIndex
globalItemCount
Ti,R,N,V_globalItemCount
lastChangeDirection
Ti,R,N,V_lastChangeDirection
upNextItemCount
Ti,R,N,V_upNextItemCount
repeatType
Ti,R,N,V_repeatType
shuffleType
Ti,R,N,V_shuffleType
T@"NSIndexPath",&,N,V_playingItemIndexPath
specializedIntents
supportedSpecializedQueues
T@"NSDictionary",&,N,V_supportedSpecializedQueues
supportsSetQueueCommand
TB,N,V_supportsSetQueueCommand
supportedQueueTypes
T@"NSSet",&,N,V_supportedQueueTypes
supportedCustomDataQueueIdentifiers
T@"NSSet",&,N,V_supportedCustomDataQueueIdentifiers
supportedInsertionPositions
T@"NSSet",&,N,V_supportedInsertionPositions
supportedRepeatTypes
T@"NSArray",&,N,V_supportedRepeatTypes
supportsChangeRepeat
TB,N,V_supportsChangeRepeat
supportsAdvanceRepeat
TB,N,V_supportsAdvanceRepeat
supportedShuffleTypes
currentShuffleType
Ti,N,V_currentShuffleType
T@"NSArray",&,N,V_supportedShuffleTypes
supportsChangeShuffle
TB,N,V_supportsChangeShuffle
supportsAdvanceShuffle
TB,N,V_supportsAdvanceShuffle
supportsPreviousItem
TB,N,V_supportsPreviousItem
supportsPreviousSection
TB,N,V_supportsPreviousSection
supportsPreviousChapter
TB,N,V_supportsPreviousChapter
supportsNextItem
TB,N,V_supportsNextItem
supportsNextSection
TB,N,V_supportsNextSection
supportsNextChapter
TB,N,V_supportsNextChapter
supportsJumpToItem
TB,N,V_supportsJumpToItem
v12@?0@"MPCReportingIdentityProperties"4@"NSError"8
v8@?0@"ICStoreRequestContext"4
PASShouldReportPlayActivityEvents
com.apple.PlayActivitySync
v12@?0@"ICMusicSubscriptionStatus"4@"NSError"8
v12@?0@"MPNowPlayingContentItem"4@"MPIdentifierSet"8
com.apple.MediaPlayer
@"MPArtworkCatalog"8@?0@"MPModelObject"4
Queue Controller Contents Changed
allowsNewPlaybackErrorItem
TB,N,V_allowsNewPlaybackErrorItem
firstPlaybackErrorItem
T@"MPAVItem",&,N,V_firstPlaybackErrorItem
currentValue
T@"NSNumber",R,C,N,V_currentValue
value
mpcReporting_quickPlay
TB,R,N,GmpcReporting_isQuickPlay
indexPath
T@"NSIndexPath",R,N,V_indexPath
contentItemIdentifier
T@"NSString",R,N,V_contentItemIdentifier
revision
Ti,R,N,V_revision
duration
T{?=dddddffBB},R,N,V_duration
contentItemID
T@"NSString",C,N,V_contentItemID
preferredBackwardJumpIntervals
preferredForwardJumpIntervals
supportsBeginFastForward
TB,N,V_supportsBeginFastForward
supportsEndFastForward
TB,N,V_supportsEndFastForward
supportsBeginRewind
TB,N,V_supportsBeginRewind
supportsEndRewind
TB,N,V_supportsEndRewind
supportsSkipForward
TB,N,V_supportsSkipForward
supportsSkipBackward
TB,N,V_supportsSkipBackward
prefersNegativeBackwardSkipIntervals
TB,N,V_prefersNegativeBackwardSkipIntervals
supportsSeekToPlaybackPosition
TB,N,V_supportsSeekToPlaybackPosition
T@"NSArray",C,N,V_preferredBackwardJumpIntervals
T@"NSArray",C,N,V_preferredForwardJumpIntervals
supportedPlaybackRates
preferredPlaybackRate
Tf,R,N
T@"NSArray",C,N,V_supportedPlaybackRates
Tf,N,V_preferredPlaybackRate
localizedShortTitle
presentationStyle
T@"NSString",C,N,V_localizedShortTitle
Ti,N,V_presentationStyle
TB,N,V_value
minimumValue
maximumValue
Tf,N,V_minimumValue
Tf,N,V_maximumValue
com.apple.MediaPlaybackCore.MPCReportingPlaybackObserver.recordEventOperationQueue
T@"MPAVController",R,N,V_player
offline
TB,N,GisOffline,V_offline
T@"MPCReportingController",R,N,V_reportingController
SBEnabled
TB,N,GisSBEnabled,V_SBEnabled
TQ,N,V_storeAccountID
storeFrontID
T@"NSString",C,N,V_storeFrontID
identityPropertiesLoader
T@"<MPCReportingIdentityPropertiesLoading>",&,N,V_identityPropertiesLoader
eventDuration
Td,N,V_eventDuration
overrideItemType
TI,N,V_overrideItemType
lyricsID
T@"NSString",C,N,V_lyricsID
itemGenericObject
T@"MPModelGenericObject",&,N,V_itemGenericObject
privateListeningEnabled
T@"NSNumber",C,N,GisPrivateListeningEnabled,V_privateListeningEnabled
TB,N,V_shouldReportPlayEventsToStore
trackInfo
T@"NSData",C,N,V_trackInfo
modelPlayEvent
T@"MPModelPlayEvent",&,N,V_modelPlayEvent
featureName
T@"NSString",C,N,V_featureName
T@"NSData",C,N,V_jingleTimedMetadata
recommendationData
T@"NSData",C,N,V_recommendationData
requestingBundleIdentifier
T@"NSString",C,N,V_requestingBundleIdentifier
requestingBundleVersion
T@"NSString",C,N,V_requestingBundleVersion
SSVMutablePlayActivityEvent
Unable to find class %s
/System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
com.apple.MPCMediaRemoteController/access
future controller
v8@?0@"MPCPlayerPath"4
com.apple.MediaPlaybackCore/MPCMediaRemoteController
com.apple.MediaPlaybackCore/MPCMediaRemoteController.callout
playbackState [was nil before]
I4@?0
supportedCommands [was nil before]
v12@?0^{__CFArray=}4^{__CFError=}8
Failed to create playback context from playback intent %@
Unsupported queue command %d
NSDebugDescription
Failed to send command %d (MRMediaRemoteCommandHandlerStatus = %d)
{_MSVSignedRange=ii}
Failed to send command %d (MRSendCommandError = %d)
v12@?0I4^{__CFArray=}8
Failed to create playback queue from playback intent %@
Failed to create external representation from playback queue %@
com.apple.MediaPlaybackCore.performRemoteQueueCommand-%@
v12@?0@"MPRemotePlaybackQueue"4@"NSError"8
Requested content item %@ state does not exist.
Got error from MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got nil items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got zero items for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got a different artwork identifier from remote artwork loading than whan we requested %@ -> %@
Got no image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
Got invalid image data for MRMediaRemoteRequestNowPlayingPlaybackQueueForPlayerSync artwork request.
playbackState [from notification]
playbackState [optimistic state]
resolvedPlayerPath
T@"MPCPlayerPath",&,N,V_resolvedPlayerPath
mediaRemoteArtworkDataSource
T@"<MPArtworkDataSource>",R,N,V_mediaRemoteArtworkDataSource
remotePlayerArtworkDataSource
T@"<MPArtworkDataSource>",R,N,V_remotePlayerArtworkDataSource
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_calloutQueue
invalidationToken
T@,&,N,V_invalidationToken
playbackStateCacheState
Ti,R,N,V_playbackStateCacheState
playbackState
T@"MPCFuture",R,N
supportedCommandsCacheState
Ti,R,N,V_supportedCommandsCacheState
playingIdentifierCacheState
Ti,R,N,V_playingIdentifierCacheState
playingIdentifier
MPCRadioPlaybackIntentTracklistToken
radioStationPlaybackMetadata
T@"MPCRadioStationPlaybackMetadata",C,N,V_radioStationPlaybackMetadata
nowPlayingContext
T@"RadioStationMatchContext",&,N,V_nowPlayingContext
stationMatchContext
T@"RadioStationMatchContext",&,N,V_stationMatchContext
v16@?0@"MPStoreAssetInfoPlaybackCacheRequest"4@"MPStoreAssetPlaybackResponse"8^B12
v16@?0@"NSString"4@"NSDictionary"8^B12
kind
offers
type
downloadAssets
v16@?0@"NSDictionary"4I8^B12
childrenIds
children
T@"MPQueueFeeder",R,N,V_queueFeeder
com.apple.MediaPlayer.MPCModelStorePlaybackItemsRequestOperation.operationQueue
v16@?0@"NSString"4@"NSString"8^B12
v12@?0@"MPStoreItemMetadataResponse"4@"NSError"8
T@?,R,C,N,V_responseHandler
containerType
identifierSet
item
hasContainerType
Ti,N,V_containerType
hasIdentifierSet
T@"_MPCProtoContainerIdentifierSet",&,N,V_identifierSet
T@"NSMutableArray",&,N,V_items
hasPlayActivityFeatureName
T@"NSString",&,N,V_playActivityFeatureName
delegateInfoID
storeAdamID
storePlaylistGlobalID
storePlaylistVersionHash
cloudID
cloudCollectionID
radioStationID
cloudUniversalLibraryID
hasDelegateInfoID
Tq,N,V_delegateInfoID
hasStoreAdamID
Tq,N,V_storeAdamID
hasStorePlaylistGlobalID
T@"NSString",&,N,V_storePlaylistGlobalID
hasStorePlaylistVersionHash
T@"NSString",&,N,V_storePlaylistVersionHash
hasCloudID
Tq,N,V_cloudID
hasCloudCollectionID
T@"NSString",&,N,V_cloudCollectionID
hasRadioStationID
T@"NSString",&,N,V_radioStationID
hasCloudUniversalLibraryID
T@"NSString",&,N,V_cloudUniversalLibraryID
uuid
timeZoneName
hasAccountID
hasUuid
T@"NSString",&,N,V_uuid
hasDeviceGUID
T@"NSString",&,N,V_deviceGUID
hasDeviceName
T@"NSString",&,N,V_deviceName
hasSystemReleaseType
Ti,N,V_systemReleaseType
hasRequestUserAgent
T@"NSString",&,N,V_requestUserAgent
hasTimeZoneName
T@"NSString",&,N,V_timeZoneName
hasPrivateListeningEnabled
TB,N,V_privateListeningEnabled
mediaType
excludeFromShuffle
hasMediaType
Ti,N,V_mediaType
T@"_MPCProtoItemIdentifierSet",&,N,V_identifierSet
hasExcludeFromShuffle
TB,N,V_excludeFromShuffle
storeSubscriptionAdamID
purchaseHistoryID
hasContentItemID
T@"NSString",&,N,V_contentItemID
hasStoreSubscriptionAdamID
Tq,N,V_storeSubscriptionAdamID
hasPurchaseHistoryID
Tq,N,V_purchaseHistoryID
libraryAlbumContentReference
libraryArtistContentReference
libraryItemContentReference
storeContentReference
hasLibraryAlbumContentReference
T@"_MPCProtoRadioContentReferenceLibraryAlbumContentReference",&,N,V_libraryAlbumContentReference
hasLibraryArtistContentReference
T@"_MPCProtoRadioContentReferenceLibraryArtistContentReference",&,N,V_libraryArtistContentReference
hasLibraryItemContentReference
T@"_MPCProtoRadioContentReferenceLibraryItemContentReference",&,N,V_libraryItemContentReference
hasStoreContentReference
T@"_MPCProtoRadioContentReferenceStoreContentReference",&,N,V_storeContentReference
albumName
representativeItemCloudID
hasAlbumName
T@"NSString",&,N,V_albumName
hasRepresentativeItemCloudID
Tq,N,V_representativeItemCloudID
artistName
hasArtistName
T@"NSString",&,N,V_artistName
albumArtistName
contentType
copyrightText
albumDiscCount
discNumber
fileSize
genreName
isCompilation
albumTrackCount
trackNumber
year
hasAlbumArtistName
T@"NSString",&,N,V_albumArtistName
hasComposerName
T@"NSString",&,N,V_composerName
hasContentType
Ti,N,V_contentType
hasCopyrightText
T@"NSString",&,N,V_copyrightText
hasAlbumDiscCount
Ti,N,V_albumDiscCount
hasDiscNumber
Ti,N,V_discNumber
hasFileSize
Td,N,V_fileSize
hasGenreName
T@"NSString",&,N,V_genreName
hasIsCompilation
TB,N,V_isCompilation
hasDuration
Td,N,V_duration
hasTitle
T@"NSString",&,N,V_title
hasAlbumTrackCount
Ti,N,V_albumTrackCount
hasTrackNumber
Ti,N,V_trackNumber
hasYear
Ti,N,V_year
radioStationURLString
accountInfo
hasRadioStationURLString
T@"NSString",&,N,V_radioStationURLString
hasSeedContentReference
T@"_MPCProtoRadioContentReference",&,N,V_seedContentReference
hasNowPlayingContentReference
T@"_MPCProtoRadioContentReference",&,N,V_nowPlayingContentReference
hasAccountInfo
T@"_MPCProtoDelegateInfo",&,N,V_accountInfo
container
startingItemIndexPath
accountInfos
T@"NSMutableArray",&,N,V_accountInfos
containers
T@"NSMutableArray",&,N,V_containers
hasStartingItemIndexPath
T@"_MPCProtoTracklistIndexPath",&,N,V_startingItemIndexPath
hasShuffleMode
containerIndex
itemIndex
hasContainerIndex
Tq,N,V_containerIndex
hasItemIndex
Tq,N,V_itemIndex
com.apple.MediaPlaybackCore.MPCModelGenericAVItemMediaRedownloadOperation.accessQueue
v12@?0@"ICMediaRedownloadResponse"4@"NSError"8
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksOperation
v16@?0@"MPCModelRadioGetTracksStep"4@"MPCModelRadioGetTracksResponse"8@"NSError"12
v8@?0@"MPCModelRadioGetTracksStep"4
tracklistAction
Ti,R,N,V_tracklistAction
T@"MPSectionedCollection",R,C,N,V_tracks
v16@?0@"_MPCProtoItem"4I8^B12
v16@?0@"_MPCProtoContainer"4I8^B12
v12@?0@"MPCPlaybackRequestEnvironment"4@"NSError"8
Missing tracklist data in playback queue.
Missing creation properties data in playback queue.
Unknown queue identifier: %@
Cannot play fuse content
Genius is Disabled
Genius is not avialable for this item
<%@: %p, playbackContext=%@>
v12@?0@"ICMutableUserIdentityProperties"4B8
unknown-guid
Failed to create delegated account.
startPictureInPictureCommand
T@"MPRemoteCommand",R,N
com.apple.MediaPlaybackCore.MPCModelPlaybackIntentDataSource.serialQueue
com.apple.MediaPlaybackCore.MPCModelPlaybackIntentDataSource.remotePlaybackQueueResolution
v16@?0@4i8^B12
Tracklist token missing model request (nil).
https://itunes.apple.com/
v12@?0@"NSData"4@"NSError"8
v12@?0@"NSURLRequest"4@"NSError"8
NSKeyedUnarchiver unarchiveObjectWithFile returned nil for archiveFile: %@
scheduledPlaybackStatePreservation
TB,N,GhasScheduledPlaybackStatePreservation,V_scheduledPlaybackStatePreservation
eventObserver
T@"MPProtocolProxy<MPCPlaybackEngineEventObserving>",R,N,V_eventObserver
implementation
T@"_MPCAVController",R,N,V_implementation
mediaRemotePublisher
T@"_MPCMediaRemotePublisher",R,N,V_mediaRemotePublisher
T@"_MPCReportingController",R,N,V_reportingController
leaseManager
T@"_MPCLeaseManager",R,N,V_leaseManager
T@"UIView",R,N
systemMusicApplication
TB,N,GisSystemMusicApplication,V_systemMusicApplication
delegate
T@"<MPCPlaybackEngineDelegate>",W,N,V_delegate
TB,N,GisPictureInPictureSupported,V_pictureInPictureSupported
videoSupported
TB,N,GisVideoSupported,V_videoSupported
stateRestorationSupported
TB,N,GisStateRestorationSupported,V_stateRestorationSupported
MPNowPlayingInfoCenter_MPCPlaybackEngine
@"MPCPlaybackEngine"4@?0
T@"MPCPlaybackEngine",W,N
playbackengine-%@.archive
playbackengine.archive
com.apple.MediaPlaybackCore/MPCPlayerPathCache
com.apple.MediaPlaybackCore/MPCPlayerPathCache.callout
resolvedPlayerPath and error was nil
v12@?0@"MPCPlayerPath"4@"NSError"8
sharedCache
T@"_MPCPlayerPathCache",R,N
playerPathResolutions
T@"NSMutableDictionary",R,N,V_playerPathResolutions
observers
T@"NSMutableDictionary",R,N,V_observers
MPCSuzeLeaseSessionControllerLeaseSessionRenewDidFailNotification
MPCSuzeLeaseControllerUserInfoKeySession
MPCSuzeLeaseControllerUserInfoKeyError
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.accessQueue
com.apple.MediaPlaybackCore.MPCSuzeLeaseSessionController.calloutQueue
sharedController
T@"MPCSuzeLeaseSessionController",R
clientCount
Ti,N,V_clientCount
icLeaseSession
T@"ICSuzeLeaseSession",R,N,V_icLeaseSession
mpcLeaseSession
T@"MPCSuzeLeaseSession",R,N,V_mpcLeaseSession
shouldStopWhenFinished
TB,N,V_shouldStopWhenFinished
T@"MPRemoteCommandCenter",&,N,V_commandCenter
videoLayer
T@"AVPlayerLayer",R,N,V_videoLayer
T@"NSString",R,C,N,V_activeRouteName
T@"MPCPlayerItemContainer",N,V_currentContainer
T@"MPCPlayerItem",N,V_currentItem
playbackErrorObservers
playbackIntentObservers
shouldRestorePlaybackState
TB,N,V_shouldRestorePlaybackState
restoringPlaybackState
TB,R,N,GisRestoringPlaybackState,V_restoringPlaybackState
syncingNowPlayingInfo
TB,R,N,GisSyncingNowPlayingInfo,V_syncingNowPlayingInfo
mediaRemoteMuxer
T@"MPCMediaRemoteMuxer",W,N,V_mediaRemoteMuxer
T@"NSString",C,N,V_parentAppBundleID
Ti,N,V_state
modelSong
T@"MPModelSong",&,N,V_modelSong
visibleDuration
Td,N,V_visibleDuration
sourceType
Ti,N,V_sourceType
T@"MPCPlayerQueueRequest",C,N
T@"MPCPlayerQueueRequest",C,N,V_request
playlistManager
T@"MPCMediaPlayerLegacyPlaylistManager",R,N,V_playlistManager
MPCRadioOperationErrorDomain
com.apple.MediaPlaybackCore.%@.%p
v12@?0@"RadioStoreBag"4@"NSError"8
T@"RadioRequestContext",C,N,V_requestContext
v12@?0@"MPStoreItemMetadata"4^B8
v16@?0@4@"NSDictionary"8^B12
icSuzeLeaseSession
T@"ICSuzeLeaseSession",R,N,V_icSuzeLeaseSession
hasSubscriptionPlaybackCapability
TB,N,V_hasSubscriptionPlaybackCapability
enqueuerProperties
T@"SSVPlayActivityEnqueuerProperties",C,N,V_enqueuerProperties
MPCModelPlaybackContextRequest
MPCModelPlaybackContextPlaybackRequestEnvironment
MPCModelPlaybackContextStartItemIdentifiers
MPCModelPlaybackContextStartTimeModifications
MPCModelPlaybackContextEndTimeModifications
MPCModelPlaybackContextAssetStoreFronts
AirMusic
Music
defaultRequestEnvironment
T@"MPCPlaybackRequestEnvironment",R
T@"NSDictionary",C,N,V_startTimeModifications
T@"NSDictionary",C,N,V_endTimeModifications
T@"NSDictionary",C,N,V_assetStoreFronts
<%@ %p shouldReportToStore:%@ playActivityEvent:%@>
playActivityEvent
T@"SSVPlayActivityEvent",C,N,V_playActivityEvent
shouldReportToStore
TB,N,V_shouldReportToStore
<%@: %p resolvedURL:%@ artworkTemplateItems:%@ mediaType:%ld artworkType:%ld>
artworkInfo
T@"ICStoreArtworkInfo",R,N
resolvedURLString
T@"NSString",C,N,V_resolvedURLString
artworkTemplateItems
T@"NSArray",C,N,V_artworkTemplateItems
TI,N,V_mediaType
mediaLibraryArtworkType
Ti,N,V_mediaLibraryArtworkType
valid
TB,R,N,GisValid
com.apple.MediaPlaybackCore.MPCPlaybackHistoryRecordChangeRequestOperation.operationQueue
T@"MPCPlaybackHistoryRecordChangeRequest",C,N,V_request
assistantAnalyticsController
T@"MPAssistantAnalyticsReportingController",&,N,V_assistantAnalyticsController
rtcReportingController
T@"MPRTCReportingController",&,N,V_rtcReportingController
playbackHistoryController
T@"MPCPlaybackHistoryController",&,N,V_playbackHistoryController
lyricsReportingController
T@"MPCLyricsReportingController",&,N,V_lyricsReportingController
T@"MPCPlayer",&,N,V_player
MPCAVItemReportingJingleTimedMetadataDidChangeNotification
mpcReporting_identityPropertiesLoader
T@"<MPCReportingIdentityPropertiesLoading>",R,N
mpcReporting_equivalencySourceAdamID
Tq,R,N
mpcReporting_isValidReportingItem
mpcReporting_itemType
mpcReporting_jingleTimedMetadata
T@"NSData",R,C,N
mpcReporting_privateListeningEnabled
T@"NSNumber",R,C,N
mpcReporting_requestingBundleIdentifier
mpcReporting_requestingBundleVersion
mpcReporting_shouldReportPlayEventsToStore
mpcReporting_shouldUseRelativeTimePositions
mpcReporting_siriInitiated
mpcReporting_trackInfo
<%@ %p itemType:%@
 identifiers: {
%@: %@
v16@?0I4@8^B12
MPCContentItemIdentifierCollectionItemType
MPCContentItemIdentifierCollectionIdentifierTypeNumberToIdentifier
identifierCount
itemType
TI,R,N,V_itemType
TI,D,N
adamID
globalPlaylistID
mediaLibraryPersistentID
storeCloudID
unknown
album-artist
composer
genre
music-video
playlist
radio-station
song
activity
apple-editor
curator
uploaded-audio
uploaded-video
additionalData
getTracks
v8@?0@"ICStoreDialogResponseButtonAction"4
v16@?0@"MPUserNotification"4L8@"NSDictionary"12
delegatedIdentityProperties
T@"ICUserIdentityProperties",R,C,N,V_delegatedIdentityProperties
T@"NSError",R,C,N,V_error
finished
TB,R,N,GisFinished,V_finished
identityProperties
T@"ICUserIdentityProperties",R,C,N,V_identityProperties
T@"SSVPlayActivityController",R,C,N,V_playActivityController
playActitySessionToken
TQ,R,N,V_playActitySessionToken
T@"ICRadioGetTracksRequest",R,C,N,V_request
T@"ICRadioGetTracksResponse",R,C,N,V_response
siriAssetInfoGetTracksResponse
T@"ICRadioGetTracksResponse",R,N,V_siriAssetInfoGetTracksResponse
v12@?0@"ICUserVerificationContext"4@"NSError"8
com.apple.MediaPlaybackCore.MPCModelRadioGetTracksPrepareIdentityStep
v20@?0@"NSArray"4Q8@"NSError"16
v12@?0@"ICRadioGetTracksResponse"4@"NSError"8
v16@?0@"ICStoreDialogResponseButton"4I8^B12
clientVersion
delegationProperties
userIdentity
T@"NSString",R,C,N,V_clientIdentifier
T@"NSString",R,C,N,V_clientVersion
T@"NSString",R,C,N,V_requestingBundleIdentifier
T@"NSString",R,C,N,V_requestingBundleVersion
T@"MPCPlaybackDelegationProperties",R,C,N,V_delegationProperties
T@"MPCPlaybackDelegationProperties",C,D,N
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.PlaceholderItemIdentifier
v16@?0@"<_MPCModelRadioPlaybackQueueSection>"4I8^B12
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue
v8@?0@"ICMutableRadioPlaybackHistory"4
v16@?0@"ICRadioStationTrack"4@"NSIndexPath"8^B12
numberOfItems
radioStation
T@"MPModelRadioStation",&,N,V_radioStation
playbackHistory
T@"ICRadioPlaybackHistory",R,C,N
trackModels
com.apple.MediaPlaybackCore.MPCModelRadioPlaybackQueue.accessQueue.StationTracksSection
v16@?0@"MPModelGenericObject"4i8^B12
T@"ICMutableRadioPlaybackHistory",R,N
T@"MPSectionedCollection",R,C,N,V_trackModels
modelPlayEventRepresentation
T@"MPModelPlayEvent",R,N,V_modelPlayEventRepresentation
T@"MPCPlayerItemContainer",W,N,V_container
userInfo
T@"NSDictionary",C,N,V_userInfo
TB,R,N,GisExplicit,V_explicit
T@"MPModelGenericObject",R,N,V_modelGenericObjectRepresentation
T@"NSString",C,N,V_albumName
T@"NSString",C,N,V_artistName
T@"NSString",C,N,V_composerName
T{?=dddddffBB},R,N,V_durationSnapshot
com.apple.MediaPlaybackCore.MPCStoreContentMetadataOperation.accessQueue
com.apple.MediaPlaybackCore.MPCStoreContentMetadataOperation.internalQueue
com.apple.MediaPlaybackCore.MPCStoreContentMetadataOperation.responseQueue
v12@?0@"SSLookupResponse"4@"NSError"8
storeBagDictionary
T@"NSDictionary",C
T@"NSArray",C
T@"MPCStoreContentMetadataResponse",R
MPCRadioPlaybackErrorCategoryKey
ADD_STATION_FAILED_ALBUM_ALERT_MESSAGE
ADD_STATION_FAILED_ARTIST_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_MESSAGE
EXPLICIT_CONTENT_NOT_ALLOWED_DUE_TO_RESTRICTIONS_%@
EXPLICIT_CONTENT_NOT_ALLOWED_TITLE
EXPLICIT_CONTENT_NOT_ALLOWED_SETTINGS_BUTTON_TITLE
prefs:root=General&path=RESTRICTIONS
ADD_STATION_FAILED_TEMPORARY_ALERT_MESSAGE
ADD_STATION_FAILED_ALERT_TITLE
StationHash
StationID
StationName
StationStringID
StationURL
<%@ %p stationHash:%@ stationID:%lli stationName:%@ stationStringID:%@>
station-hash
station-id
name
radio-station-id
artworkCollection
T@"RadioArtworkCollection",R,N,V_artworkCollection
stationDictionary
T@"NSString",R,C,N,V_stationName
T@"NSString",R,C,N,V_stationHash
Tq,R,N,V_stationID
T@"NSString",R,C,N,V_stationStringID
T@"NSURL",R,C,N,V_stationURL
T@"RadioArtworkCollection",&,D,N
Tq,D,N
T@"NSURL",C,D,N
allowsStoreContainerImport
TB,N,V_allowsStoreContainerImport
playEvent
T@"MPModelPlayEvent",&,N,V_playEvent
Ti,N,V_repeatType
MPCModelRadioQueueFeederErrorDomain
com.apple.MediaPlaybackCore.MPCModelRadioQueueFeeder.loadingOperationQueue
v12@?0@"ICRadioPlaybackHistory"4@"NSError"8
app.music.queue-source.tilt
RadioStationID
v12@?0@"MPCModelRadioPersonalizationResponse"4@"NSError"8
v12@?0@"MPCModelRadioGetTracksResponse"4@"NSError"8
MPCAVItemContentItemIdentifierCollectionDidChangeNotification
T@"NSString",C,N,V_identifier
T@"NSString",C,N,V_artworkIdentifier
v12@?0@"UIImage"4@"NSError"8
T@"MPCMediaRemoteController",W,N,V_controller
com.apple.radio.adamid
com.apple.radio.explicit
artworkURL_
width
height
v8@?0@"MPModelArtist"4
v8@?0@"MPSectionedCollection"4
v12@?0@"ICRadioFetchMetadataResponse"4@"NSError"8
metadataIdentifiers
T@"NSArray",R
T@"MPCModelGenericAVItemTimedMetadataResponse",&,N,V_previousResponse
T@"MPModelGenericObject",R,N,V_genericObject
storeRequestContext
T@"ICStoreRequestContext",R,C,N,V_storeRequestContext
timedMetadataGroups
T@"NSArray",R,C,N,V_timedMetadataGroups
MPCMediaRemoteMiddlewareMetadataOperation
MPMiddlewareOperation
NSObject
MPCReportingMescalSetupCompletionEvent
MPCReportingEvent
0"0P
0$0AP
MPCModelGenericAVItem
AVAssetResourceLoaderDelegate
AVPlayerItemMetadataOutputPushDelegate
AVPlayerItemOutputPushDelegate
ICEnvironmentMonitorObserver
MPMusicSubscriptionLeasePlaybackParticipating
MPRTCReportingItemSessionCreating
_MPCURLAssetDownloadCompletionObserver
MPCModelPlaybackAssetCacheProvidingInternalAdditions
MPCLyricsReportingController
MPCModelStorePlaybackItemsRequestAccumulator
MPCModelGenericAVItemTimedMetadataResponse
MPCModelGenericAVItemTimedMetadataStreamFields
MPCModelGenericAVItemAssetLoadResult
MPCReportingDeviceIdentityPropertiesLoader
MPCReportingIdentityPropertiesLoading
MPCAdditions
MPCModelMediaClipAVItem
_MPCMediaRemotePublisher
MPCPlaybackEngineEventObserving
PlaybackQueue
MPNowPlayingPlaybackQueueDataSourcePrivate
MPNowPlayingPlaybackQueueDataSource
MPNowPlayingInfoLyricsDelegate
MPCModelRadioStationTrackGenericObjectBuilder
MPCModelGenericAVItemLocalFileLoadOperation
RadioStationMatchContext
MPCMediaLibraryPlaybackAssetCacheProvider
MPCModelPlaybackAssetCacheProviding
MPCPlaybackDelegationProperties
NSCopying
NSMutableCopying
NSSecureCoding
NSCoding
MPCMutablePlaybackDelegationProperties
_MPCMediaRemoteEntityPropertyTranslator
_MPCMediaRemoteEntityRelationshipTranslator
MPCMediaRemoteEntityTranslator
MPCPlaybackIntent
MPCModelRadioStationBuilder
MPCMediaRemoteMuxer
MPCMediaRemoteMiddlewareControllerProviding
MPCPlaybackEngineMiddlewareOperation
MPMiddlewareAutomaticDependencyOperation
MPCPlaybackHistoryController
MPCMediaRemoteMiddlewarePlaybackStateOperation
MPNowPlayingContentItemRemoteArtworkToken
MPArtworkDataSourceVisualIdenticality
MPCRemotePlayerArtworkDataSource
MPCPlayerChangeRequest
MPCPlayerCommandRequest
MPCMediaRemoteCommandOperation
MPCPlayerRequest
MPCPlayerResponseBuilder
MPCPlayerResponse
_MPCPlayerCommand
MPCModelRadioPlaybackContext
MPCModelStorePlaybackItemsRequest
MPCModelPlaybackRequesting
MPCModelPlaybackRequestEnvironmentConsuming
MPModelRequestDetailedKeepLocalStatusRequesting
MPCModelRequestRTCReporting
MPCModelStorePreviousRequestStoring
MPCContentItemIdentifierCollectionAdditions
MPCPlaybackEngineMiddlewareAdditions
MPCVideoView
MPCPlaybackEngineMiddleware
MPMiddleware
MPCErrorAdditions
MPCMediaPlayerLegacyPlayer
MPRemoteCommandDelegate_Private
MPCMediaPlayerLegacyReportingController
MPCMediaPlayerLegacyAVController
MPCModelStorePlaybackItemsResponse
MPModelStoreEquivalencyMapping
MPModelResponseDetailedKeepLocalStatusRequesting
MPCMediaPlayerLegacyPlaylistManager
MPCQueueBehaviorManaging
MPQueueBehaviorManaging
_MPCAVItemSourceContext
MPAVItemPlaylistIdentifier
MPAVItemQueueIdentifier
_MPCAVPlaylistIteration
MPCModelGenericAVItemAssetLoadProperties
MPCMediaRemoteMiddlewareControllerOperation
ControllerProviding
MPCPlaybackStoreDialogResponseHandler
MPCMediaPlayerLegacyItem
MediaPlayerLegacy
MPCMediaRemoteMiddlewareCommandsOperation
MPCMediaRemoteMiddleware
MPCModelGenericAVItemSubscriptionAssetLoadOperation
MPCModelPlaybackAdditions
MPCMediaPlayerLegacyNowPlayingObserver
MPCModelQueueFeeder
MPRTCReportingItemSessionContaining
MPShuffleControllerDataSource
MPCModelQueueFeederAdditions
MPCModelRadioPersonalizationRequest
MPCModelRadioPersonalizationResponse
_MPCMediaRemoteNullController
MPCPlayerResponseSection
MPCPlayerPath
MPCModelPlaybackIntentTracklistToken
MPCModelRadioContentReference
ICRadioContentReference
MPCReportingController
MPCFutureInvalidationToken
MPCFuture
MPCJinglePlayActivityReportingController
MPCRadioArtworkDataSource
MPCPlaybackQueue
MPCPlayerResponseTracklist
_MPCPlayerResponseTracklistDataSource
MPLazySectionedCollectionDataSource
_MPCPlayerResetTracklistCommand
MPCPlayerResetTracklistCommand
MPCPlayerCommand
_MPCPlayerInsertItemsCommand
MPCPlayerInsertItemsCommand
_MPCPlayerReorderItemsCommand
MPCPlayerReorderItemsCommand
_MPCPlayerRepeatCommand
MPCPlayerRepeatCommand
_MPCPlayerShuffleCommand
MPCPlayerShuffleCommand
_MPCPlayerChangeItemCommand
MPCPlayerChangeItemCommand
MPCReportingPlaybackEnvironmentPropertiesLoader
_MPModelMediaRemoteItemArtist
_MPModelMediaRemotePodcastEpisodeAuthor
_MPCAVController
MPCPrivateListeningStateSource
_MPCPrivateListeningStateLocalDeviceSource
_MPCPrivateListeningStateStaticSource
MPCReportingAdditions
MPCPlayerResponseItem
_MPCPlayerItemCommand
_MPCPlayerSeekCommand
MPCPlayerSeekCommand
_MPCPlayerPlaybackRateCommand
MPCPlayerPlaybackRateCommand
_MPCPlayerFeedbackCommand
MPCPlayerFeedbackCommand
_MPCPlayerRateCommand
MPCPlayerRateCommand
MPCReportingPlaybackObserver
MPCReportingPlaybackEventSource
MPCMediaRemoteController
MSVLRUDictionaryDelegate
MPCSupportedCommands
MPCRadioPlaybackIntentTracklistToken
MPCSiriPlaybackAdditions
0"0A
0$1B
MPCMediaPlayerLegacyItemContainer
MPCModelStorePlaybackItemsRequestOperation
_MPCProtoContainer
_MPCProtoContainerIdentifierSet
_MPCProtoDelegateInfo
_MPCProtoItem
_MPCProtoItemIdentifierSet
_MPCProtoRadioContentReference
_MPCProtoRadioContentReferenceLibraryAlbumContentReference
_MPCProtoRadioContentReferenceLibraryArtistContentReference
_MPCProtoRadioContentReferenceLibraryItemContentReference
_MPCProtoRadioContentReferenceStoreContentReference
_MPCProtoRadioCreationProperties
_MPCProtoTracklist
_MPCProtoTracklistIndexPath
MPCModelGenericAVItemMediaRedownloadOperation
MPCModelRadioGetTracksOperation
MPCModelRadioGetTracksResponse
MPCPlaybackContextCreating
MPPlaybackContextRemotePlaybackQueue
MPCRemoteQueueAdditions
MPCCustomCommands
MPCModelPlaybackIntentDataSource
MPCPlaybackIntentDataSource
MPCModelPlaybackIntentDataSourceAdditions
MPCPlaybackEngine
_MPCPlayerPathCache
MPCSuzeLeaseSessionController
ICSuzeLeaseSessionDelegate
_MPCSuzeLeaseSessionInfo
MPCPlayer
MPCMediaRemoteMuxerDelegate
MPCReportingLyricsViewEvent
MPCMediaPlayerLegacyQueueRequestOperation
MPCPlayerQueueRequestOperation
MPCMediaPlayerLegacyPlayerQueueLazySectionedCollectionDataSource
MPCMediaPlayerLegacyPlayerQueueResponse
MPCRadioOperationQueue
MPCStoreContentMetadataResponse
MPCSuzeLeaseSession
_MPCLeaseManager
MPCReportingIdentityProperties
MPCModelPlaybackContext
MPCReportingPlaybackActivityEvent
MPExportableArtworkProperties
MPCPlaybackHistoryRecordChangeRequestOperation
_MPCReportingController
MPCPlayerQueueRequest
MPCPlayerQueueResponse
MPCRadioPlaybackIntentDataSource
MPCContentItemIdentifierCollection
MPCMutableContentItemIdentifierCollection
MPCModelRadioGetTracksStep
MPCModelRadioGetTracksEstablishAccountStep
MPCModelRadioGetTracksPrepareIdentityStep
MPCModelRadioGetTracksPreparePlayActivityStep
MPCModelRadioGetTracksRequestStep
MPCModelRadioGetTracksRetryDialogStep
MPCPlayableContentDelegate
MPPlayableContentDelegate
MPCModelGenericAVItemHomeSharingLoadOperation
MPCPlaybackRequestEnvironment
MPCMutablePlaybackRequestEnvironment
MPCModelRadioPlaybackQueue
_MPCModelRadioPlaybackQueueAVItemSection
_MPCModelRadioPlaybackQueueSection
_MPCModelRadioPlaybackQueueStationTracksSection
MPCPlayerEntity
MPCPlayerItem
MPCPlayerItemContainer
MPCStoreContentMetadataOperation
MPCRadioStationPlaybackMetadata
MPCMutableRadioStationPlaybackMetadata
MPCPlaybackHistoryRecordChangeRequest
MPCModelRadioQueueFeeder
MPCModelRadioQueueFeederAdditions
MPNowPlayingContentItemArtworkToken
MPCMediaRemoteArtworkRemoteDataSource
MPArtworkDataSource
MPCModelGenericAVItemTimedMetadataRequest
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
@?8@0:4
v12@0:4@?8
@"NSError"8@0:4
@?<v@?@"NSString">8@0:4
v12@0:4@?<v@?@"NSString">8
@"NSArray"8@0:4
@16@0:4@8@12
v8@0:4
{_MSVSignedRange=ii}16@0:4{?=ii}8
v12@0:4@8
@"NSArray"
@"MPCMediaRemoteMiddleware"
@"MPCPlayerRequest"
@"MPCFuture"
d8@0:4
v16@0:4d8
@"NSError"
B12@0:4i8
B16@0:4@8@12
v16@0:4@8@12
B16@0:4@"AVAssetResourceLoader"8@"AVAssetResourceLoadingRequest"12
B16@0:4@"AVAssetResourceLoader"8@"AVAssetResourceRenewalRequest"12
v16@0:4@"AVAssetResourceLoader"8@"AVAssetResourceLoadingRequest"12
B16@0:4@"AVAssetResourceLoader"8@"NSURLAuthenticationChallenge"12
v16@0:4@"AVAssetResourceLoader"8@"NSURLAuthenticationChallenge"12
v12@0:4@"AVPlayerItemOutput"8
v20@0:4@8@12@16
v20@0:4@"AVPlayerItemMetadataOutput"8@"NSArray"12@"AVPlayerItemTrack"16
v12@0:4@"ICEnvironmentMonitor"8
i8@0:4
@20@0:4@8@12@16
q8@0:4
v12@0:4B8
Q8@0:4
v16@0:4f8@?12
v12@0:4f8
f8@0:4
v16@0:4@8@?12
v16@0:4i8@?12
v20@0:4@8@12@?16
v16@0:4@8i12
v20@0:4d8B16
v20@0:4d8@?16
@12@0:4@8
v16@0:4q8
v12@0:4i8
@"NSObject<OS_dispatch_queue>"
@"NSNumber"
@"NSOperationQueue"
@"ICMusicSubscriptionLeaseSession"
@"MPSubscriptionStatusPlaybackInformation"
@"MPCSuzeLeaseSession"
@"MPModelGenericObject"
@"MPPropertySet"
@"<MPCReportingIdentityPropertiesLoading>"
@"MPCModelGenericAVItemTimedMetadataRequest"
@"MPCModelGenericAVItemTimedMetadataResponse"
@"ICStoreRequestContext"
@"NSURL"
@"NSString"
@"<MPCModelPlaybackAssetCacheProviding>"
@"NSData"
@"MPMediaLibrary"
@"MPCPlaybackRequestEnvironment"
v16@0:4B8@12
@"AVURLAsset"
@"MPCJinglePlayActivityReportingController"
@"MPCReportingPlaybackObserver"
@16@0:4@8B12
{MPCModelStorePlaybackItemsRequestAccumulatorResult=BB}12@0:4@8
i12@0:4@8
{_MPCModelStorePlaybackItemEligibility=Bi}12@0:4@8
@20@0:4@8@12B16
@"NSMutableDictionary"
@"NSMapTable"
@"MPStoreModelGenericObjectBuilder"
@"NSMutableArray"
@"MPMutableSectionedCollection"
@"NSDate"
@"MPCModelStorePlaybackItemsRequest"
@"MPModelResponse"
@"MPCModelGenericAVItemTimedMetadataStreamFields"
@"MPSectionedCollection"
@20@0:4@8@12^@16
@"NSDictionary"
v12@0:4@?<v@?@"MPCReportingIdentityProperties"@"NSError">8
@"MPModelMediaClip"
v16@0:4@8I12
v16@0:4@"MPCPlaybackEngine"8I12
v20@0:4@"MPCPlaybackEngine"8@"MPAVItem"12@"MPAVItem"16
v16@0:4@"MPCPlaybackEngine"8@"MPAVItem"12
v16@0:4@"MPCPlaybackEngine"8@"MPPlaybackContext"12
v20@0:4@"MPCPlaybackEngine"8@"MPPlaybackContext"12@"NSError"16
v16@0:4@"MPCPlaybackEngine"8@"NSString"12
v16@0:4@"MPCPlaybackEngine"8i12
v12@0:4@"MPCPlaybackEngine"8
v24@0:4@8@12i16@20
@"MPLibraryAddStatusObserver"
@"MPCPlaybackEngine"
@"MPNowPlayingInfoCenter"
@"MPRemoteCommandCenter"
@16@0:4@8i12
@28@0:4@8@12{CGSize=ff}16@?24
@20@0:4@8@12@?16
@24@0:4@8i12i16^i20
@20@0:4@8i12@16
@12@0:4i8
@"NSString"16@0:4@"MPNowPlayingInfoCenter"8i12
@"MPNowPlayingContentItem"16@0:4@"MPNowPlayingInfoCenter"8@"NSString"12
@"NSProgress"28@0:4@"MPNowPlayingInfoCenter"8@"MPNowPlayingContentItem"12{CGSize=ff}16@?<v@?@"UIImage"@"NSError">24
@"NSProgress"20@0:4@"MPNowPlayingInfoCenter"8@"MPNowPlayingContentItem"12@?<v@?@"MPNowPlayingInfoLyricsItem"@"NSError">16
@"NSProgress"20@0:4@"MPNowPlayingInfoCenter"8@"MPNowPlayingContentItem"12@?<v@?@"NSString"@"NSError">16
@"NSProgress"20@0:4@"MPNowPlayingInfoCenter"8@"MPNowPlayingContentItem"12@?<v@?@"NSArray"@"NSError">16
@"NSArray"24@0:4@"MPNowPlayingInfoCenter"8i12i16^i20
@"NSString"20@0:4@"MPNowPlayingInfoCenter"8i12@"MPNowPlayingContentItem"16
@"MPNowPlayingContentItem"12@0:4i8
@"MPArtworkCatalog"16@0:4@"MPNowPlayingInfoCenter"8@"MPNowPlayingContentItem"12
v16@0:4@"MPNowPlayingInfoCenter"8@"MPNowPlayingInfoLyricsEvent"12
@"MPModelStorePlatformMetadataGenericObjectBuilder"
{?="initialized"b1"playbackPosition"{?="identifiers"b1"bookmarkTime"b1"shouldRememberBookmarkTime"b1"hasBeenPlayed"b1"startTime"b1"stopTime"b1"storeUbiquitousIdentifier"b1"userPlayCount"b1}}
@"MPCModelGenericAVItemAssetLoadProperties"
v28@0:4^@8^@12@16i20@24
v16@0:4@"MPModelGenericObject"8@?<v@?@"NSError">12
v28@0:4^@8^@12@"MPModelGenericObject"16i20@"NSString"24
v20@0:4@"MPModelFileAsset"8@"MPModelGenericObject"12@?<v@?@"NSError">16
@12@0:4^{_NSZone=}8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@24@0:4Q8@16@20
@16@0:4#8^{_NSZone=}12
@"MPCPrivateListeningStateSource"
@"NSTimeZone"
v16@0:4Q8
v12@0:4#8
@16@0:4#8B12
@12@0:4#8
v16@0:4@8:12
v16@0:4@8#12
@28@0:4@8@12@16@20@24
@"<MPCPlaybackIntentDataSource>"
@"<NSSecureCoding>"
{?="initialized"b1"beats1"b1"name"b1"editorNotes"b1"shortEditorNotes"b1"explicit"I"artwork"b1"allowsItemLiking"b1}
v24@0:4@8@12@16^v20
@"MPCPlayer"
@"MPCMediaRemoteController"8@0:4
^{NSMapTable=#}8@0:4
v12@0:4^{NSMapTable=#}8
^{NSMapTable=#}
@"MPCPlaybackEngineMiddleware"
@"MPModelPlayEvent"
@"MPExportableArtworkProperties"
@20@0:4@8{CGSize=ff}12
v20@0:4@8I12@?16
v12@0:4I8
@20@0:4I8@12@16
@"MPCMediaRemoteController"
@16@0:4@8I12
@"MPCPlayerCommandRequest"
@12@0:4@?8
{?=ii}8@0:4
v16@0:4{?=ii}8
@"MPCPlayerPath"
{?="reverseCount"i"forwardCount"i}
i16@0:4i8@12
I16@0:4I8@12
I20@0:4I8I12@16
{?=dddddffBB}68@0:4{?=dddddffBB}8@60@64
i20@0:4i8@12@16
@24@0:4@8@12@16@20
B20@0:4B8I12@16
@24@0:4@8@12I16@20
@"MPCMediaRemoteController"16@0:4@"MPCMediaRemoteController"8@"MPMiddlewareChain"12
i16@0:4i8@"MPMiddlewareChain"12
I16@0:4I8@"MPMiddlewareChain"12
I20@0:4I8I12@"MPMiddlewareChain"16
{?=dddddffBB}68@0:4{?=dddddffBB}8@"NSIndexPath"60@"MPMiddlewareChain"64
i20@0:4i8@"NSIndexPath"12@"MPMiddlewareChain"16
@"MPModelGenericObject"24@0:4@"MPModelGenericObject"8@"MPPropertySet"12@"NSIndexPath"16@"MPMiddlewareChain"20
@"NSIndexPath"16@0:4@"NSIndexPath"8@"MPMiddlewareChain"12
B20@0:4B8I12@"MPMiddlewareChain"16
@24@0:4@8@"NSString"12I16@"MPMiddlewareChain"20
@"UIView<MPCVideoView>"16@0:4@"UIView<MPCVideoView>"8@"MPMiddlewareChain"12
@12@0:4I8
@"MPCPlayerResponseTracklist"
@"UIView<MPCVideoView>"
@"MPCPlayerResponse"
@"MPCModelRadioContentReference"
v12@0:4@"NSArray"8
@"MPSectionedCollection"8@0:4
@"MPCPlaybackRequestEnvironment"8@0:4
v12@0:4@"MPCPlaybackRequestEnvironment"8
@"MPModelResponse"8@0:4
v12@0:4@"MPModelResponse"8
{CGSize=ff}8@0:4
v12@0:4@"NSString"8
@"AVPlayerLayer"8@0:4
@"NSArray"12@0:4@"MPRequest"8
@24@0:4@8i12@16@20
@28@0:4@8i12@16@20*24
B16@0:4@"MPRemoteCommand"8@"NSString"12
v20@0:4@8@12:16
@"MPCMediaPlayerLegacyItemContainer"
@"MPCMediaPlayerLegacyItem"
@"MPAVItem"
@"MPCPlaybackIntent"
@"MPCMediaPlayerLegacyAVController"
@"MPCMediaPlayerLegacyNowPlayingObserver"
@"MPCMediaPlayerLegacyReportingController"
@"MPRTCReportingController"
@"MPCMediaPlayerLegacyPlayer"
@"MPPlaybackContext"
@"NSUUID"
@16@0:4q8
@"NSNumber"16@0:4q8
@16@0:4i8@?12
@"NSOperation"16@0:4i8@?<v@?@"MPLibraryKeepLocalStatusObserverConfiguration"@"NSError">12
@"NSObject<OS_dispatch_source>"
@"MPStoreLibraryPersonalizationResponse"
B12@0:4@"MPAVItem"8
v20@0:4@8i12@?16
{_NSRange=II}8@0:4
v20@0:4i8i12B16
I12@0:4@8
i16@0:4@8@12
i16@0:4i8i12
v16@0:4i8i12
B20@0:4@8i12B16
i24@0:4i8i12B16^B20
v20@0:4@8I12@16
B16@0:4@8@?12
i12@0:4i8
{_NSRange=II}12@0:4B8
I16@0:4@8@12
@16@0:4I8@12
@"NSMutableIndexSet"
@"MPMutableBidirectionalDictionary"
@"MPMusicPlayerControllerQueue"
@"MPQueueFeeder"
@"_MPCAVItemSourceContext"
@"_MPCAVPlaylistIteration"
@"<MPAVItemQueueIdentifier>"
@"MPSparseArray"
@"MPModelFileAsset"
@"MPModelHomeSharingAsset"
@"MPIdentifierSet"
@"MPModelStoreAsset"
v28@0:4@8@12d16@?24
{?=dddddffBB}8@0:4
{?="snapshotTime"d"startTime"d"endTime"d"duration"d"elapsedDuration"d"rate"f"defaultRate"f"isLiveContent"B"isLoading"B}
@"<MPCSupportedCommands>"
@"NSIndexPath"
f12@0:4@8
@"NSDictionary"8@0:4
I20@0:4@8@12I16
I12@0:4@"MPShuffleController"8
@16@0:4@"MPShuffleController"8I12
I20@0:4@"MPShuffleController"8@12I16
B12@0:4I8
I12@0:4I8
i12@0:4I8
v20@0:4@8B12@?16
v12@0:4^I8
i12@0:4B8
I16@0:4@8B12
@"NSHashTable"
@"MPPlaceholderAVItem"
@"MPPlaybackPlaceholderMediaItem"
@"MPModelRequest"
@"MPShuffleController"
{map<unsigned int, MPIdentifierSet *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, MPIdentifierSet *> > >="__tree_"{__tree<std::__1::__value_type<unsigned int, MPIdentifierSet *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, MPIdentifierSet *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, MPIdentifierSet *> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, MPIdentifierSet *>, void *> > >="__first_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, MPIdentifierSet *>, std::__1::less<unsigned int>, true> >="__first_"L}}}
@20@0:4#8@12I16
v20@0:4I8@12@?16
i16@0:4{_MSVSignedRange=ii}8
@16@0:4{_MSVSignedRange=ii}8
@12@0:4^v8
i20@0:4@8{CGSize=ff}12
@24@0:4@8@12{CGSize=ff}16
@16@0:4@8^v12
v16@0:4@?8@?12
^v12@0:4^v8
^v8@0:4
@"MPAVRoute"
@"ICRadioContentReference"
@"MPCReportingController"
v20@0:4Q8@?16
v28@0:4@8Q12I20@?24
@16@0:4d8
@"SSVPlayActivityController"
v16@0:4I8B12
@"CPLRUDictionary"
@12@0:4@"NSIndexPath"8
B12@0:4@"<MPLazySectionedCollectionDataSource>"8
@"MPCPlayerCommandRequest"8@0:4
@"MPCPlayerCommandRequest"12@0:4@"MPCPlaybackIntent"8
@"MPCPlayerCommandRequest"16@0:4@"MPCPlaybackIntent"8i12
@"NSSet"
@"MPCPlayerCommandRequest"16@0:4@"MPCPlaybackIntent"8@"MPCPlayerResponseItem"12
B20@0:4@8B12i16
B12@0:4@"MPCPlayerResponseItem"8
@"MPCPlayerCommandRequest"16@0:4@"MPCPlayerResponseItem"8@"MPCPlayerResponseItem"12
@"MPCPlayerCommandRequest"12@0:4i8
@"MPCPlayerCommandRequest"12@0:4@"MPCPlayerResponseSection"8
@"MPCPlayerCommandRequest"12@0:4@"MPCPlayerResponseItem"8
@"MPCPlayerCommandRequest"16@0:4d8
@12@0:4f8
@"MPCPlayerCommandRequest"12@0:4f8
@12@0:4B8
@"MPCPlayerCommandRequest"12@0:4B8
v28@0:4d8d16@24
d20@0:4@8d12
d12@0:4@8
@"MPAVController"
v20@0:4@"MSVLRUDictionary"8@12@16
v20@0:4@8{_MSVSignedRange=ii}12
v16@0:4I8@12
v24@0:4@8d12f20
{_MSVSignedRange="location"i"length"i}
@"MSVLRUDictionary"
@"<MPArtworkDataSource>"
^{_MRMediaRemoteCommandInfo=}12@0:4I8
@"MPCRadioStationPlaybackMetadata"
@"RadioStationMatchContext"
@16@0:4@8@?12
@"NSProgress"
@"_MPCProtoContainerIdentifierSet"
{?="containerType"b1}
{?="cloudID"b1"delegateInfoID"b1"storeAdamID"b1}
{?="accountID"b1"delegateInfoID"b1"systemReleaseType"b1"privateListeningEnabled"b1}
@"_MPCProtoItemIdentifierSet"
{?="mediaType"b1"excludeFromShuffle"b1}
{?="cloudID"b1"delegateInfoID"b1"purchaseHistoryID"b1"storeAdamID"b1"storeSubscriptionAdamID"b1}
@"_MPCProtoRadioContentReferenceLibraryAlbumContentReference"
@"_MPCProtoRadioContentReferenceLibraryArtistContentReference"
@"_MPCProtoRadioContentReferenceLibraryItemContentReference"
@"_MPCProtoRadioContentReferenceStoreContentReference"
{?="representativeItemCloudID"b1"storeAdamID"b1}
{?="cloudID"b1"duration"b1"fileSize"b1"storeAdamID"b1"albumDiscCount"b1"albumTrackCount"b1"contentType"b1"discNumber"b1"trackNumber"b1"year"b1"isCompilation"b1}
{?="storeAdamID"b1}
@"_MPCProtoDelegateInfo"
@"_MPCProtoRadioContentReference"
@"_MPCProtoTracklistIndexPath"
{?="shuffleMode"b1}
{?="containerIndex"b1"itemIndex"b1}
@"ICMediaRedownloadRequest"
@"ICRadioGetTracksRequest"
v12@0:4@?<v@?@"MPPlaybackContext"@"NSError">8
v20@0:4q8@?16
v16@0:4@"MPCPlaybackIntent"8@?<v@?@"MPPlaybackContext"@"NSError">12
v20@0:4@"MPCPlaybackIntent"8@"MPCPlayerPath"12@?<v@?@"MPRemotePlaybackQueue"@"NSError">16
v24@0:4d8d16
@"<MPCPlaybackEngineDelegate>"
@"MPProtocolProxy<MPCPlaybackEngineEventObserving>"
@"_MPCAVController"
@"_MPCMediaRemotePublisher"
@"_MPCReportingController"
@"_MPCLeaseManager"
v16@0:4@8^v12
v16@0:4@"ICSuzeLeaseSession"8@"NSError"12
@"ICSuzeLeaseSession"
v20@0:4@"MPRemoteCommandCenter"8@"MPCMediaRemoteMuxer"12:16
@"NSPointerArray"
@"MPCPlayerItem"
@"AVPlayerLayer"
@"MPCPlayerItemContainer"
@"MPCMediaRemoteMuxer"
@"MPModelSong"
@"MPCPlayerQueueRequest"8@0:4
v12@0:4@"MPCPlayerQueueRequest"8
@?<v@?@"MPCPlayerQueueResponse"@"NSError">8@0:4
v12@0:4@?<v@?@"MPCPlayerQueueResponse"@"NSError">8
@"MPCPlayerQueueRequest"
{_NSRange="location"I"length"I}
@"MPCMediaPlayerLegacyPlaylistManager"
@"RadioRequestContext"
@"SSVPlayActivityEnqueuerProperties"
@"SSVPlayActivityEvent"
@"MPCPlaybackHistoryRecordChangeRequest"
@"MPAssistantAnalyticsReportingController"
@"MPCPlaybackHistoryController"
@"MPCLyricsReportingController"
@16@0:4^{_NSZone=}8#12
@"ICUserIdentityProperties"
@"ICRadioGetTracksResponse"
v20@0:4@"MPPlayableContentManager"8@"NSIndexPath"12@?<v@?@"NSError">16
v16@0:4@"MPPlayableContentManager"8@?<v@?@"NSError">12
v20@0:4@"MPPlayableContentManager"8@"NSArray"12@?<v@?@"NSError">16
v16@0:4@"MPPlayableContentManager"8@"MPPlayableContentManagerContext"12
@"MPCPlaybackDelegationProperties"
@"ICUserIdentity"
@"_MPCModelRadioPlaybackQueueAVItemSection"
@"ICRadioPlaybackHistoryStore"
@"MPModelRadioStation"
@"_MPCModelRadioPlaybackQueueStationTracksSection"
@"MPAVItem"12@0:4i8
@"<MPAVItemQueueIdentifier>"12@0:4i8
@"ICRadioStationTrack"12@0:4i8
@"ICMutableRadioPlaybackHistory"
@"MPCStoreContentMetadataResponse"
@"RadioArtworkCollection"
@"MPCModelRadioPersonalizationResponse"
@"ICUserIdentityStore"
@"MPCModelRadioPlaybackQueue"
@20@0:4i8@12@16
v28@0:4i8@12@16@?20@?24
B12@0:4@"MPArtworkCatalog"8
B16@0:4@"MPArtworkRepresentation"8@"MPArtworkCatalog"12
@"MPArtworkRepresentation"12@0:4@"MPArtworkCatalog"8
v16@0:4@"MPArtworkCatalog"8@?<v@?@"MPArtworkRepresentation"@"NSError">12
v12@0:4@"MPArtworkCatalog"8
@"<MPArtworkDataSourceVisualIdenticality>"12@0:4@"MPArtworkCatalog"8
@20@0:4i8@"MPArtworkCatalog"12@"NSDictionary"16
v28@0:4i8@"MPArtworkCatalog"12@"NSDictionary"16@?<v@?@?<v@?@@"NSError">>20@?<v@?@@"NSError">24
v16@0:4@"MPArtworkCatalog"8@?<v@?@"MPExportableArtworkProperties"@"NSError">12
@(#)PROGRAM:MediaPlaybackCore  PROJECT:MediaPlayerFramework-1
%{public}@: Starting asset load...
%{public}@: Loading user identity properties...
%{public}@: Finished loading user identity properties: %@
%{public}@: Loading delegated identity properties...
%{public}@: Finished loading delegated identity properties: %@ with error: %{public}@
%{public}@: Returning asset load early with error: %{public}@
%{public}@: Based on network type of %li and last known network type of %li, we are%{public}@ preferring high quality content.
%{public}@: Finished loading subscription lease properties.
%{public}@: Timed out loading subscription lease properties.
%{public}@: Using local file asset at path: %{public}@.
%{public}@: Using home sharing asset.
%{public}@: Using existing Radio cached playback response: %{public}@
%{public}@: No cached Radio playback response found.
%{public}@: No local file of appropriate quality, using cloud streaming.
%{public}@: Loading network constraints...
%{public}@: Finished loading network constraints: %{public}@ with error: %{public}@.
%{public}@: Finished loading network constraints: %{public}@.
%{public}@: Timed out loading network constraints.
%{public}@: Subscription is required, and the user does not have subscription playback capability, setting error to subscription required.
%{public}@: Subscription is required, and we failed to load the subscription status.
%{public}@: Timed out while attempting to load subscription asset.
%{public}@: Timed out while attempting to load media redownload asset.
%{public}@: No valid endpoint type (%ld), skipping streaming redownload.
%{public}@: Using iTunes Store Content Info: %@
%{public}@: Protection type is %li, skipping subscription key check.
%{public}@: Not subscription content, skipping playback key check.
%{public}@: Lease session invalid, skipping key loading.
%{public}@: Reloading FairPlay key status to ensure the latest value is known...
%{public}@: Finished reload of FairPlay key status: %{public}@ with error: %{public}@
%{public}@: Finished reload of FairPlay key status: %{public}@
%{public}@: Timed out reloading FairPlay key status; using the last known status
%{public}@: Already have playback keys from lease status: %{public}@, no need to do another request.
%{public}@: Requesting playback keys because the lease status indicates none available: %{public}@
%{public}@: Finished subscription lease request for playback keys with error: %{public}@.
%{public}@: Timed out while attempting to acquire lease for playback keys.
%{public}@: Asset download completed successfully.
%{public}@: Asset download completed with error: %{public}@
%{public}@: Error caching file asset: %{public}@.
%{public}@: Finished caching file asset.
%{public}@: Removed incomplete download at URL: %{public}@
%{public}@: Failed to remove incomplete downloaded file at URL: %{public}@ error: %{public}@.
%{public}@: Setting gapless info: %{public}@
%{public}@: Starting Suze lease session...
%{public}@: Failed to create suze lease with error: %{public}@.
%{public}@: Timed out creating Suze lease session: %{public}@.
%{public}@: Asset load finished.
%{public}@: Player item has not connected to internet error, current network type is %li, cellular allowed is %{public}@ and max size for cellular is %{public}@
%{public}@: Transforming error to cellular restricted error instead of original: %{public}@
%{public}@: (Watch) Transforming error to cellular restricted error instead of original: %{public}@
%{public}@: Transforming error to exceeded bag file size limit instead of original: %{public}@
%{public}@: Transforming error network unavailable instead of original: %{public}@
%{public}@: Preparing for rate: %f.
%{public}@: Finished preparing for rate: %f.
%{public}@: Getting subscription lease session for rate preparation.
%{public}@: Sending subscription lease request for rate preparation.
%{public}@: Finished sending subscription lease request for rate preparation.
%{public}@: Failed sending subscription lease request for rate preparation with error: %{public}@.
%{public}@ Using start time: %f
%{public}@ Using stop time: %f
%{public}@ Using bookmark start time: %f
BackgroundTask: End assertion (%lli) at %{public}s:%d
BackgroundTask: Took assertion (%lli) at %{public}s:%d
No lyrics available. Error: %{public}@, modelObject: %{public}@
Unable to provide lyrics for contentItemID %{public}@, modelObject: %{public}@
%{public}@: Setting loudness info %{public}@ on player item %{public}@
%{public}@: Setting preferred peak bit rate to %f due to last known network type of %li and %{public}@preferring high quality content
%{public}@: Loading subscription status...
%{public}@: Finished loading subscription status: %{public}@
%{public}@: Skipping subscription lease load since the subscription status indicated it shouldn't be used
%{public}@: Finished loading subscription status: %{public}@ with error: %{public}@
%{public}@: Loading subscription lease session...
%{public}@: Finished loading subscription lease session: %{public}@
%{public}@: Failed to load subscription lease session with error: %{public}@
%{public}@: Lease playback prevention state did change to: %li
Invalidating playback queue because %{public}@
Lyrics begin event: %{public}@, Lyrics ID = %{public}@, Info = %{public}@
Lyrics end event: %{public}@ - %{public}@, ID = %{public}@, Info = %{public}@
Lyrics end event: invalid duration for reporting. Duration = %{public}g
Lyrics end event: no song found for contentItemID %{public}@
Lyrics end event: missing lyrics identifier. Token = %{public}@
-[_MPCMediaRemotePublisher _performCommandEvent:]
%{public}s: received MRMediaRemoteCommand type=%{public}@
%{public}s: type=%{public}@ status=%{public}@
%{public}s: type=%{public}@ status=MPRemoteCommandHandlerStatusSuccess
Current item was nil, not playing
InsertIntoPlaybackQueue failed. Could not create playback context. (error = %{public}@)
Add to playback context failed: %ld
MPRemoteCommandHandlerStatus = %ld
Cannot override manually curated queue.
Play queue verification failed with error: %{public}@
Create playback context failed with error: %{public}@
Reload with playback context failed with error: %{public}@
Radio station getPlaybackContext failed with error: %{public}@
Unsupported command: %{public}@
%{public}@: File asset missing file path, finishing.
%{public}@: Writing path %{public}@ for media item: %{public}@
Setting active player: %{public}@
%{public}@ setting parentApplicationBundleID: %{public}@
Failed to delete from library, object: %{public}@, error: %{public}@
Successfully deleted from library, object: %{public}@
Failed to import to library, object: %{public}@, error: %{public}@
Successfully imported to library, object: %{public}@
Skipping playback state preservation for player: %{public}@
Failed to encode playlist manager with exception: %{public}@
Could not open caches url: %{public}@
Failed to write queue archive: %{public}@
Playlist manager has already been restored, skipping restoration
Decoding playlist manager with UUID: %@ [attempt %lu]
Could not open caches url for read: %{public}@
Could not fetch playlist manager archive: %{public}@
Found playlist manager in userDefaults, clearing out
Failed to decode playlist manager with exception: %{public}@
%{public}@ receieved a playback intent while a restore was in flight. Ignoring queue restoration
Failed decoding playlist manager %lu times. Skipping.
Could not find playlist manager data to restore, deferring
InsertIntoPlaybackQueue failed. Inserting a radio context is not supported
Play queue verification failed with error: %ld
Create playback context failed with error: %ld
Reload with playback context failed with error: %ld
Error setting up playback queue with context. %{public}@
Ending playback due to failure from the first item.
Attempting reload with fallback playback context
Failed with fallback reload with error: %{public}@
Setting %@ EQ to %d
Setting up EQ for %@
%{public}@ Beginning queue restoration.
%{public}@ finalizing queue restoration.
%{public}@ did not find any queue feeders that support state restoration.
%{public}@ playbackContext: %{public}@ insertionType: %d
Refusing hard queue insert for currentItem: %{public}@ soft queue: %{public}@
Setting hard queue with insertion type: %d without a soft queue, using %{public}@ to create a soft queue
Could not find index to append to queue
Hard queue insertion index set to %ld
%{public}@
Ignoring disabling Up Next
Setting disable up next to %d
Moving sourceContext:%{public}@ to index: %lu
%{public}@ skipping because queue modifications are disabled
sourceIndex: %ld
destinationIndex: %ld
Removing last hard queue item
ENDING PLAYBACK -- We failed to load assets for all of the items in the queue. Failed index count: %lu soft queue count: %lu
Preparing to queue index: %ld
Skipping past _hardQueueInsertionIndex: %ld
Popping hard queue source context for range %{public}@
Clearing hard queue because we have skipped over the tracks
Adjusting _nextCurrentIndex to %ld
Adjusting _hardQueueInsertionIndex to %ld
Setting min playlist index to %ld
Setting max playlist index to %ld
Invalidating: %{public}@
Invalidating soft queue, dropping iteration modifications
Soft queue invalidated when we're ignorning changes
%{public}@ invalidated with an error or to 0 items: %{public}@
Setting min playlist index to %lu
Setting max playlist index to %lu
Current queue has been invalidated, preparing to queue index: %lu
Reloading queue coordinator %{public}@
ENDING PLAYBACK -- We have failed all items in the queue at least once.
ENDING PLAYBACK -- We have failed to play the item on repeat at least once.
%{public}@ couldn't find an media item for %{public}@
keeping current hard queue item %{public}@
Requesting source context for index >= NSNotFound, returning nil
Queue Feeder: %{public}@ couldn't find item for queue index: %{public}@
Soft queue faulting disabled for playlist index: %ld
%{public}@: Using subscription playback endpoint with operation type: %li
%{public}@: Has subscription lease session, using it.
%{public}@: Using existing cached playback response: %{public}@
%{public}@: Performing subscription playback request...
%{public}@: Finished subscription playback request with response: %{public}@, error: %{public}@
%{public}@: Failed loading subscription asset due to missing lease session.
%{public}@: Performing subscription accountless playback request...
%{public}@: Finished subscription accountless playback request with response: %{public}@, error: %{public}@
Could not restore queue feeder: %{public}@
Restoring queue feeder: %{public}@
Queue feeder: %{public}@ has already restored the queue. Nothing to do here
Beginning intial request for queue feeder: %{public}@
Finished queue restoration for %{public}@ with error: %{public}@
%{public}@ setting override start time: %{public}@ for item with identifier: %{public}@
%{public}@ setting override stop time: %{public}@ for item with identifier: %{public}@
%{public}@: Siri asset info is present on the playback context.
%{public}@: No Siri asset info present on the playback context.
[BackgroundTasks] %{public}@ Expired.
[BackgroundTasks] %{public}@ Background Task Failed to Start.
[BackgroundTasks] %{public}@ Start [%lu]
[BackgroundTasks] %{public}@ End [%lu]
%{public}@ loaded final response with %lu tracks.
Invalid request item class: %{public}@ for %{public}@
Using preferred start identifiers from Siri Asset Info: %{public}@
Reporting event not recorded due to it being invalid: %{public}@
[MPCReportingController] Recording reporting events: %{public}@
Failed to generate fallback playback context: %{public}@ %{public}@
Failed to load fallback playback context: %{public}@ %{public}@
Unable to set audio session catogory to AVAudioSessionCategoryPlayback: %{public}@
Setting simulator volume to %f
Setting %{public}@ EQ to %d
Setting up EQ for %{public}@
[MPCReportingPlaybackObserver] Item will change from: %p to: %p
MRC: Resolving player path %@
MRC: Resolved player path %@ (resolved = %@)
[MPCModelStorePlaybackItemsRequest] Siri asset info present, starting URL bag load...
[MPCModelStorePlaybackItemsRequest] Failed to load URL bag for Siri asset info due to error: %{public}@
[MPCModelStorePlaybackItemsRequest] Successfully loaded URL bag for Siri asset info, loading identity properties...
[MPCModelStorePlaybackItemsRequest] Failed to load identity properties for Siri asset info.
[MPCModelStorePlaybackItemsRequest] Finished loading identity properties for Siri asset info.
[MPCModelStorePlaybackItemsRequest] Siri asset info expected to be dictionary, was another type: %{public}@
[MPCModelStorePlaybackItemsRequest] Siri asset info expected to have results dictionary, found %{public}@ instead.
[MPCModelStorePlaybackItemsRequest] Siri asset info has results dictionary key, but no objects inside.
[MPCModelStorePlaybackItemsRequest] Siri asset info has results dictionary with invalid key or value format.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no metadata.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu metadata entities.
[MPCModelStorePlaybackItemsRequest] Siri asset info contained no assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info contains %lu assets.
[MPCModelStorePlaybackItemsRequest] Siri asset info resulting in preferred shuffled starting subscription adam ID %llu
%{public}@: Falling back to existing previous response from errors: %{public}@, current item count: %li, previous item count: %li
%{public}@: Using existing subscription cached playback response despite redownload request: %{public}@
%{public}@: Performing media redownload request...
%{public}@: Finished media redownload request with response: %{public}@, error: %{public}@
%{public}@: Missing redownload parameters.
%{public}@: Missing store request context.
[RemotePlaybackQueue] Could not set playback queue. Media query is nil for queue %{public}@
[RemotePlaybackQueue] Could not set playback queue. Missing both station string ID and station ID queue %{public}@
[RemotePlaybackQueue] Attempting to prepare Genius Playlist for store item %{public}@
[RemotePlaybackQueue] Could not set PlaybackContext for GeniusPlaybackQueue. %{public}@. <%{public}@>
-[MPCPlayerEngine setPictureInPictureSupported:] has no effect on non-iOS platforms.
Starting playback preheating...
Finished preheating playback
Preparing for imminent playback intent...
Renewing lease for imminent playback preparation.
Imminent playback preparation finished subscription request error: %{public}@
Imminent playback preparation finished subscription request
Imminent playback preparation had lease status with playback keys, skipping lease renewal. Status: %{public}@
Imminent playback preparation finished, subscription status session was nil with error: %{public}@
Imminent playback preparation finished, subscription status does not indicate lease should be used: %{public}@
Imminent playback preparation finished, subscription status is nil (error: %{public}@)
MRCPPC: Registering for invalidation with player path %@ (unresolved %@)
MRCPPC: Received invalidation for player path %@ (future player path: %@)
%{public}@: Invalid identifier (%{public}@: %{public}@) provided for type: %{public}@. Undefined results when using this identifier.
[MPCModelRadioGetTracksStep] Using Siri Asset Info as side-packed getTracks response.
[MPCModelRadioGetTracksStep] Siri Asset Info provided with invalid content: %{public}@
[MPCModelRadioGetTracksStep] Siri Asset Info failed to deserialize with error: %{public}@.
[MPCModelRadioGetTracksStep] Siri Asset Info expected to be a dictionary, but is %{public}@ instead.
[MPCModelRadioGetTracksStep] Failed to convert Siri Asset Info into UTF-8 data.
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
