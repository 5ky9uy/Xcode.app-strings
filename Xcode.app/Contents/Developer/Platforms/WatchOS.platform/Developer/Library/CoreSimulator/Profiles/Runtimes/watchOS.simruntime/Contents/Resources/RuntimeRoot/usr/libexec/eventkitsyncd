NEKDatabaseChangedExternallyNotification
NEKTriggerFullSyncTestingNotification
NEKTriggerMigrationSyncCheckNotificaiton
NEKTriggerNightlySyncNotification
NEKChangeLogWasPurged
NEKDefaultCalendarChanged
<NEKICSWrapperMetadata (%p): 
  entityType: %d
  identifier: %@
  externalID: %@
  selfAttendeeEmail: %@
  selfAttendeeUUID: %@
  selfOrganizerEmail: %@
  selfOrganizerUUID: %@
  attendeeStatus: %d
  invitationStatus: %d
  locationPredictionState: %d
  dateChanged: %d
  timeChanged: %d
  titleChanged: %d
  locationChanged: %d
  attendeeComment: %d
  attendeeStatusFlag: %d
entityType
TI,N,V_entityType
selfAttendeeEmail
T@"NSString",&,N,V_selfAttendeeEmail
selfAttendeeUUID
T@"NSString",&,N,V_selfAttendeeUUID
selfOrganizerEmail
T@"NSString",&,N,V_selfOrganizerEmail
selfOrganizerUUID
T@"NSString",&,N,V_selfOrganizerUUID
attendeeStatus
Ti,N,V_attendeeStatus
invitationStatus
TI,N,V_invitationStatus
identifier
T@"NSString",C,N,V_identifier
dateChanged
TB,N,V_dateChanged
timeChanged
TB,N,V_timeChanged
titleChanged
TB,N,V_titleChanged
locationChanged
TB,N,V_locationChanged
attendeeComment
TB,N,V_attendeeComment
attendeeStatusFlag
TB,N,V_attendeeStatusFlag
externalID
T@"NSString",C,N,V_externalID
locationPredictionState
Ti,N,V_locationPredictionState
watch.eventsync
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@; title='%@'>
<%@ %p; identifier=%@; calendarIdentifier=%@; oldCalendarIdentifier=%@>
<%@ %p, calendarIdentifier = %@; oldCalendarIdentifier = %@; count = %@>
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
objectIdentifier
T@"NSString",R,N
sequencer
changeType
Ti,R,N
properties
T@"NSMutableDictionary",&,N,V_properties
calendarItemCount
Ti,N,V_calendarItemCount
syncId
T@"NSString",C,N,V_syncId
zICSData
T@"NSData",&,N,V_zICSData
ICSData
T@"NSData",&,N
calendarIdentifier
T@"NEKCalendarID",&,N,V_calendarIdentifier
oldCalendarIdentifier
T@"NSString",&,N,V_oldCalendarIdentifier
oldIdentifier
T@"NSString",&,N,V_oldIdentifier
nuevoIdentifier
T@"NSString",&,N,V_nuevoIdentifier
title
T@"NSString",R,N,V_title
taskCompleted
TB,N,GisTaskCompleted,V_taskCompleted
taskCompletionDate
Td,N,V_taskCompletionDate
displayOrder
Tq,N,V_displayOrder
isReminderWithLocation
TB,N,V_isReminderWithLocation
v4@?0
%@/RID=%llu
GARBAGE:%@
NEKEnvironment
dbFileManager
T@"NEKDatabaseFileManager",&,N,V_dbFileManager
tinyStore
T@"NEKTinyStore",&,N,V_tinyStore
recordMap
T@"NEKRecordMap",&,N,V_recordMap
seenMap
T@"NEKSeenMap",&,N,V_seenMap
syncController
T@"NEKSyncController",&,N,V_syncController
syncCoordinator
T@"NEKSyncCoordinator",&,N,V_syncCoordinator
daemon
T@"NEKDaemon",&,N,V_daemon
<%@ %p, source = %@, calendarIdentifier = %@>
T@"NSString",&,N,V_calendarIdentifier
storeIdentifier
T@"NEKSourceID",R,N,V_storeIdentifier
attributes
T@"NEKCalendarAttributes",R,N,V_attributes
isDefaultTaskCalendar
TB,N,V_isDefaultTaskCalendar
isDefaultEventCalendar
TB,N,V_isDefaultEventCalendar
batch
T@"NSArray",&,N,V_batch
interimBatch
T@"NSMutableArray",&,N,V_interimBatch
hasBatch
T@"NSObject<OS_dispatch_semaphore>",&,N,V_hasBatch
wantsBatch
T@"NSObject<OS_dispatch_semaphore>",&,N,V_wantsBatch
exitNow
TB,N,V_exitNow
batchSize
Ti,N,V_batchSize
count
Ti,N,V_count
startTime
Td,N,V_startTime
error
T@"NSError",&,N,V_error
%@ %@
persistentID
isLocalStore
hasPersistentID
TB,R,N
T@"NSString",&,N,V_persistentID
hasIsLocalStore
TB,N
TB,N,V_isLocalStore
/tmp/pleasePassAPath
NDTSQFile
%04d%02d%02d-%02d%02d%02d
NDTSQBootstrapLoop
Attempt to create database failed.
:memory:
mobile
NDTSQOpenDatabase
Cannot open database for writing
pragma journal_mode=wal
_SQ_Versions
SQLExecuteError
Error in executing SQL
i4@?0
NDTSQExecuteSql
Error parsing or executing SQL in executeSql:
NDTSQParse
Error parsing or executing SQL in parseSql:andExecute:
SQLParseError
Error parsing or executing SQL in parseMultipleSql:andExecute:
BEGIN
SQLTransactionError
Error executing begin.
COMMIT
Error executing commit.
ROLLBACK
Error executing rollback.
T^{sqlite3=},N,V_db
pathTemplate
T@"NSString",&,N,V_pathTemplate
path
T@"NSString",&,N,V_path
delegate
T@"<NDTSQFileDelegate>",W,N,V_delegate
NDTTimedCache
timer
T@"NSObject<OS_dispatch_source>",&,N,V_timer
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
expiration
Td,N,V_expiration
action
T@?,C,N,V_action
usedRecently
TB,N,V_usedRecently
sourceIdentifier
hasSourceIdentifier
T@"NEKPBSourceID",&,N,V_sourceIdentifier
hasCalendarIdentifier
hasAttributes
T@"NEKPBCalendarAttributes",&,N,V_attributes
hasIsDefaultTaskCalendar
hasIsDefaultEventCalendar
hasOldCalendarIdentifier
UUID
isReadonly
isHidden
isImmutable
isInbox
isNotificationsCollection
isSharingInvitation
isSubscribed
isHolidayCalendar
isFamilyCalendar
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isSchedulingProhibited
isDefaultCalendarForStore
type
digest
symbolicColorName
colorString
sharingStatus
sharedOwnerName
sharedOwnerAddress
sharingInvitationResponse
publishedURLString
canBePublished
canBeShared
isPublished
externalIdentificationTag
syncToken
externalModificationTag
externalRepresentation
supportedEntityTypes
hasBeenAlerted
notes
subCalAccountID
pushKey
selfIdentityDisplayName
selfIdentityEmail
selfIdentityAddressString
selfIdentityFirstName
selfIdentityLastName
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityAddressString
ownerIdentityFirstName
ownerIdentityLastName
hasUUID
uUID
T@"NSString",&,N,V_uUID
hasTitle
T@"NSString",&,N,V_title
hasIsReadonly
TB,N,V_isReadonly
hasIsHidden
TB,N,V_isHidden
hasIsImmutable
TB,N,V_isImmutable
hasIsInbox
TB,N,V_isInbox
hasIsNotificationsCollection
TB,N,V_isNotificationsCollection
hasIsSharingInvitation
TB,N,V_isSharingInvitation
hasIsSubscribed
TB,N,V_isSubscribed
hasIsHolidayCalendar
TB,N,V_isHolidayCalendar
hasIsFamilyCalendar
TB,N,V_isFamilyCalendar
hasIsIgnoringEventAlerts
TB,N,V_isIgnoringEventAlerts
hasIsIgnoringSharedCalendarNotifications
TB,N,V_isIgnoringSharedCalendarNotifications
hasIsSchedulingProhibited
TB,N,V_isSchedulingProhibited
hasIsDefaultCalendarForStore
TB,N,V_isDefaultCalendarForStore
hasType
T@"NSString",&,N,V_type
hasDigest
T@"NSData",&,N,V_digest
hasSymbolicColorName
T@"NSString",&,N,V_symbolicColorName
hasColorString
T@"NSString",&,N,V_colorString
hasDisplayOrder
Ti,N,V_displayOrder
hasSharingStatus
TQ,N,V_sharingStatus
hasSharedOwnerName
T@"NSString",&,N,V_sharedOwnerName
hasSharedOwnerAddress
T@"NSString",&,N,V_sharedOwnerAddress
hasSharingInvitationResponse
TQ,N,V_sharingInvitationResponse
hasPublishedURLString
T@"NSString",&,N,V_publishedURLString
hasCanBePublished
TB,N,V_canBePublished
hasCanBeShared
TB,N,V_canBeShared
hasIsPublished
TB,N,V_isPublished
hasExternalID
T@"NSString",&,N,V_externalID
hasExternalIdentificationTag
T@"NSString",&,N,V_externalIdentificationTag
hasSyncToken
T@"NSString",&,N,V_syncToken
hasExternalModificationTag
T@"NSString",&,N,V_externalModificationTag
hasExternalRepresentation
T@"NSData",&,N,V_externalRepresentation
hasSupportedEntityTypes
TQ,N,V_supportedEntityTypes
hasInvitationStatus
TQ,N,V_invitationStatus
hasHasBeenAlerted
TB,N,V_hasBeenAlerted
hasNotes
T@"NSString",&,N,V_notes
hasSubCalAccountID
T@"NSString",&,N,V_subCalAccountID
hasPushKey
T@"NSString",&,N,V_pushKey
hasSelfIdentityDisplayName
T@"NSString",&,N,V_selfIdentityDisplayName
hasSelfIdentityEmail
T@"NSString",&,N,V_selfIdentityEmail
hasSelfIdentityAddressString
T@"NSString",&,N,V_selfIdentityAddressString
hasSelfIdentityFirstName
T@"NSString",&,N,V_selfIdentityFirstName
hasSelfIdentityLastName
T@"NSString",&,N,V_selfIdentityLastName
hasOwnerIdentityDisplayName
T@"NSString",&,N,V_ownerIdentityDisplayName
hasOwnerIdentityEmail
T@"NSString",&,N,V_ownerIdentityEmail
hasOwnerIdentityAddressString
T@"NSString",&,N,V_ownerIdentityAddressString
hasOwnerIdentityFirstName
T@"NSString",&,N,V_ownerIdentityFirstName
hasOwnerIdentityLastName
T@"NSString",&,N,V_ownerIdentityLastName
TinyStore
tinyStore.plist
setString
-[NEKTinyStore setIntegerValue:forKey:]
-[NEKTinyStore setDoubleValue:forKey:]
-[NEKTinyStore _savePlist]
-[NEKTinyStore _loadPlist]
msgType
data
T@"NSData",&,N,V_data
T@"NSString",&,N,V_msgType
responseIdentifier
T@"NSString",&,N,V_responseIdentifier
NDTMessaging
-[NDTMessaging sendMessage:responseHandler:completion:]
-[NDTMessaging reply:to:completion:]
-[NDTMessaging service:account:incomingData:fromID:context:]
-[NDTMessaging service:account:incomingResourceAtURL:metadata:fromID:context:]
idsOptions
T@"NSDictionary",&,N,V_idsOptions
%s/%@
select value from %@ where key = ?
insert or replace into %@ (key, value) values (?, ?)
create table if not exists %@ (key text unique, value text)
NDTSQKeyValueStore:%@
i8@?0@"NDTSQStatement"4
rowID
Ti,N,V_rowID
Ti,N,V_entityType
entityRowID
Ti,N,V_entityRowID
T@"NSString",C,N,V_UUID
SELECT rowId, entityType, entityRowID, UUID FROM record WHERE entityType = ? AND entityRowID = ?;
UPDATE record SET UUID=? where rowId=?;
INSERT INTO record(entityType, entityRowID, UUID) VALUES(?, ?, ?);
DELETE FROM record WHERE entityType = ? AND entityRowID = ?
CREATE TABLE IF NOT EXISTS record(rowid INTEGER PRIMARY KEY ASC, entityType INT, entityRowID INT, UUID TEXT);
CREATE UNIQUE INDEX IF NOT EXISTS entityIndex ON record (entityType, entityRowID); 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-231.17/NEKSyncBundle/Models/_NEKRecordMapImpl.m
-[_NEKRecordMapSqliteImpl _beginTransaction]
-[_NEKRecordMapSqliteImpl commit:]
EventKitSync
-[_NEKRecordMapSqliteImpl reset]
-[_NEKRecordMapSqliteImpl removeAllRecords]
DELETE FROM record
SELECT COUNT(*) FROM record
/System/Library/LaunchDaemons/com.apple.SpringBoard.plist
stores
T@"NSArray",&,N,V_stores
calendars
T@"NSArray",&,N,V_calendars
tasks
T@"NSArray",&,N,V_tasks
events
T@"NSArray",&,N,V_events
com.apple.eventkitsync.nekeventstore
com.apple.eventkitsync.dbidleblocks
SaveDB
removeAllItems
B8@?0@"EKObject"4
updateSource:
updateCalendar:
updateICS:
deleteItemWithIdentifier:
deleteItem:
-[NEKEventStore handleNewEntity:withWrapper:]
/RID=
%@%@%llu
-[NEKEventStore handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:]
-[NEKEventStore handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:]
v8@?0@"NSString"4
-[NEKEventStore performUpdateWithICSWrappers:store:]
v12@?0@"EKObjectID"4i8
%@%@%@
T@"NEKRecordMap",R,N
T@"NEKSeenMap",R,N
changeObserver
T@"NEKChangeObserver",&,N,V_changeObserver
com.apple.mobilecal
InviteeDeclineAlerts-rebroadcast
ShowDeclinedEvents-rebroadcast
LastDeselectedCalendarSyncHashes
ViewedTimeZoneAutomatic
ViewedTimeZone
ViewedTimeZoneChosen
TimeZoneCityArray
kCalTimeZonePrefChangedDistributedNotification
overlayCalendarID
CalEventDeclineEventPrefChangedRebroadcast
CalEventShowInviteeDeclinesPrefChangedRebroadcast
CalEventDeclineEventPrefChanged
CalEventShowInviteeDeclinesPrefChanged
v16@?0@"NSString"4@"NSSet"8^B12
com.apple.eventkitsync
backchannel
com.apple.private.alloy.eventkitmutation
setRemCom
v8@?0@"NDTMessage"4
setParStt
setAlmSno
deleEvent
internal_disablePhoneMutator
com.apple.EventKitSync
v12@?0@"NSError"4@"NSString"8
<%@ %p; type=%@; identifier=%@; calendarIdentifier=%@>
Calendar
Event
Reminder
Source
None
watch
com.apple.eventkitsyncd.daemon
com.apple.eventkitsyncd.notifications
com.apple.notifyd.matching
HandleNotifications
_CalDatabaseChangedNotification
EventKitSyncTesting
com.apple.eventkitsync.force
com.apple.datamigrator.migrationDidFinish
SignificantTimeChangeNotification
CalDatabaseIdleChangeTrackingClientWasPurgedNotification
CalDefaultCalendarChangedNotification
v8@?0@"NSObject<OS_xpc_object>"4
com.apple.eventkitsync.retry
xpc_activity
windowStart
windowEnd
testWindowStart
testWindowEnd
enableInfiniteWindow
NEKSyncWindow
16R0
spanStart
Td,N,V_spanStart
spanEnd
Td,N,V_spanEnd
taskCutoff
Td,N,V_taskCutoff
timeZone
T@"NSTimeZone",N,V_timeZone
startDate
T@"NSDate",&,N,V_startDate
endDate
T@"NSDate",&,N,V_endDate
taskCutoffDate
T@"NSDate",&,N,V_taskCutoffDate
InternalBuild
Oji6HRoPi7rH7HPdWVakuw
[VOID]
[%08lx]
Obfuscate
connection
T@"NSXPCConnection",&,N,V_connection
rpcEndpoint
T@"NEKRPCEndpoint",&,N,V_rpcEndpoint
com.apple.NanoRemoteEventKit.Mutator
RecordMap.db
com.apple.eventkitsync.recordmap
isComplete
calendarName
reminderTitle
externalIdentifier
hasIsComplete
TB,N,V_isComplete
hasCalendarName
T@"NSString",&,N,V_calendarName
hasReminderTitle
T@"NSString",&,N,V_reminderTitle
hasExternalIdentifier
T@"NSString",&,N,V_externalIdentifier
>>LOCAL<<
Default local calendar
UUID: %@
<%@ %p; %@>
T@"NSString",R,N,V_identifier
isDefaultLocalCalendar
TB,R,N,V_isDefaultLocalCalendar
name
defaultAlarmOffset
isEnabled
isFacebook
usesSelfAttendee
constraintsDescriptionPath
creatorBundleID
creatorCodeSigningIdentity
accountPersistentID
supportsSharedCalendars
allowsTasks
allowsEvents
allowsCalendarAddDeleteModify
onlyCreatorCanModify
snoozeAlarmRequiresDetach
supportsAlarmAcknowledgedDate
hasName
T@"NSString",&,N,V_name
hasDefaultAlarmOffset
TI,N,V_defaultAlarmOffset
TI,N,V_type
hasIsEnabled
TB,N,V_isEnabled
hasIsFacebook
TB,N,V_isFacebook
hasUsesSelfAttendee
TB,N,V_usesSelfAttendee
hasConstraintsDescriptionPath
T@"NSString",&,N,V_constraintsDescriptionPath
hasCreatorBundleID
T@"NSString",&,N,V_creatorBundleID
hasCreatorCodeSigningIdentity
T@"NSString",&,N,V_creatorCodeSigningIdentity
hasAccountPersistentID
T@"NSString",&,N,V_accountPersistentID
hasSupportsSharedCalendars
TB,N,V_supportsSharedCalendars
hasAllowsTasks
TB,N,V_allowsTasks
hasAllowsEvents
TB,N,V_allowsEvents
hasAllowsCalendarAddDeleteModify
TB,N,V_allowsCalendarAddDeleteModify
hasOnlyCreatorCanModify
TB,N,V_onlyCreatorCanModify
hasSnoozeAlarmRequiresDetach
TB,N,V_snoozeAlarmRequiresDetach
hasSupportsAlarmAcknowledgedDate
TB,N,V_supportsAlarmAcknowledgedDate
FaultCount
environment
T@"NEKEnvironment",W,N,V_environment
com.apple.eventkitsync.statusreporter
listener
T@"NSXPCListener",&,N,V_listener
v12@?0@"NSString"4@"NSUUID"8
SeenMap.db
com.apple.eventkitsync.seenmap
drop table if exists seen
create table if not exists seendata (uuid TEXT, start_date REAL, end_date REAL, location TEXT, primary key (uuid))
B12@?0^^{sqlite3_stmt}4*8
insert or replace into seendata values ( ?, ?, ?, ?);
select start_date, end_date, location from seendata where uuid = ?;
delete from seendata where uuid = ?;
delete from seendata where end_date < ?;
-[NEKSeenMap didShowInvite:withUUID:]
-[NEKSeenMap deleteInviteByUUID:]
-[NEKSeenMap sweep]
dbFilename
T@"NSString",&,N,V_dbFilename
com.apple.eventkitsync.retrysync
NEKSyncController
DeltaEstRate
FullEstRate
com.apple.private.alloy.eventkitsync
RetryMustBeReset
maxDeltaRetries
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-231.17/NEKSyncBundle/Models/NEKSyncController.m
-[NEKSyncController service:willPreferSession:overSession:]
sending
receiving
delta
Session already in progress.
minSessionTimeout
maxSessionTimeout
internal_enableLongTimeouts
internal_probabilityOfSyncFailure
v8@?0@?<v@?>4
 (FAKE)
nightly
reset
MigrationSyncCount
heardFromPhone
T@"<NEKSyncControllerDelegate>",W,N,V_delegate
isCurrentlySyncing
TB,R,N,V_isCurrentlySyncing
eventStore
T@"NEKEventStore",R,N,V_eventStore
SQLBindError
Index out of bounds
SQLFetchError
Column out of bounds
parsed
T^{sqlite3_stmt=},N,V_parsed
v16@?0@"NSString"4@"NEKPBICSWrapperMetadata"8^B12
v16@?0@"NSString"4I8^B12
B8@?0@"EKObjectID"4
v12@?0@"NSArray"4i8
<%@ %p; empty changeset>
<%@ %p; %d inserts; %d updates; %d deletes>
changeNumber
Tq,N,V_changeNumber
completion
T@?,C,N,V_completion
truncated
TB,N,V_truncated
packetNumber
storeWrapper
calendarWrapper
ICSWrapper
deletionWrapper
setReminderComplete
setParticipantStatus
setAlarmSnooze
deleteEvent
hasPacketNumber
TI,N,V_packetNumber
hasStoreWrapper
T@"NEKPBSourceWrapper",&,N,V_storeWrapper
hasCalendarWrapper
T@"NEKPBCalendarWrapper",&,N,V_calendarWrapper
hasICSWrapper
iCSWrapper
T@"NEKPBICSWrapper",&,N,V_iCSWrapper
hasDeletionWrapper
T@"NEKPBDeletionWrapper",&,N,V_deletionWrapper
hasSetReminderComplete
T@"NEKPBSetReminderComplete",&,N,V_setReminderComplete
hasSetParticipantStatus
T@"NEKPBSetParticipantStatus",&,N,V_setParticipantStatus
hasSetAlarmSnooze
T@"NEKPBSetAlarmSnooze",&,N,V_setAlarmSnooze
hasDeleteEvent
T@"NEKPBDeleteEvent",&,N,V_deleteEvent
<%@ %p; persistentID=%@; type=%@>
T@"NEKSourceAttributes",R,N,V_attributes
Local
Exchange
CalDAV
MobileMe
Subscribed
Birthdays
Unknown
publishedURL
selfIdentityAddress
ownerIdentityAddress
T@"NSString",C,N,V_title
isHolidyCalendar
TB,N,V_isHolidyCalendar
T@"NSData",C,N,V_digest
T@"NSString",C,N,V_symbolicColorName
T@"NSString",C,N,V_colorString
TI,N,V_sharingStatus
T@"NSString",C,N,V_sharedOwnerName
T@"NSString",C,N,V_sharedOwnerAddress
TI,N,V_sharingInvitationResponse
T@"NSURL",C,N,V_publishedURL
T@"NSString",C,N,V_externalIdentificationTag
T@"NSString",C,N,V_syncToken
T@"NSString",C,N,V_externalModificationTag
T@"NSData",C,N,V_externalRepresentation
Ti,N,V_supportedEntityTypes
T@"NSString",C,N,V_notes
T@"NSString",C,N,V_subCalAccountID
T@"NSString",C,N,V_pushKey
T@"NSString",C,N,V_selfIdentityDisplayName
T@"NSString",C,N,V_selfIdentityEmail
T@"NSURL",C,N,V_selfIdentityAddress
T@"NSString",C,N,V_selfIdentityFirstName
T@"NSString",C,N,V_selfIdentityLastName
T@"NSString",C,N,V_ownerIdentityDisplayName
T@"NSString",C,N,V_ownerIdentityEmail
T@"NSURL",C,N,V_ownerIdentityAddress
T@"NSString",C,N,V_ownerIdentityFirstName
T@"NSString",C,N,V_ownerIdentityLastName
encoding
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-231.17/NEKSyncBundle/Models/NEKSyncSession.m
-[NEKSyncSession init]
internal_disableSync
changeSupplier
T@"NEKResultsPipe",&,N,V_changeSupplier
progressLiar
T@"NEKProgressLiar",&,N,V_progressLiar
changeCount
Ti,N,V_changeCount
start
Td,N,V_start
syncKind
T@"NSString",&,N,V_syncKind
T@"NEKEnvironment",&,N,V_environment
com.apple.eventkitsync.recievedpairedsyncstart
com.apple.eventkitsync.recievedreunionsyncstart
session
T@"PSYServiceSyncSession",&,N,V_session
Local store
persistentID: %@
hasIdentifier
T@"NSString",&,N,V_identifier
hasIsDefaultLocalCalendar
TB,N,V_isDefaultLocalCalendar
invitationChangedPropertyFlagDate
invitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
invitationChangedPropertyFlagLocation
invitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
hasSelfAttendeeEmail
hasEntityType
TQ,N,V_entityType
hasInvitationChangedPropertyFlagDate
TB,N,V_invitationChangedPropertyFlagDate
hasInvitationChangedPropertyFlagTime
TB,N,V_invitationChangedPropertyFlagTime
hasInvitationChangedPropertyFlagTitle
TB,N,V_invitationChangedPropertyFlagTitle
hasInvitationChangedPropertyFlagLocation
TB,N,V_invitationChangedPropertyFlagLocation
hasInvitationChangedPropertyFlagAttendeeComment
TB,N,V_invitationChangedPropertyFlagAttendeeComment
hasInvitationChangedPropertyFlagAttendeeStatus
TB,N,V_invitationChangedPropertyFlagAttendeeStatus
hasSelfAttendeeUUID
hasSelfOrganizerEmail
hasSelfOrganizerUUID
hasAttendeeStatus
TQ,N,V_attendeeStatus
hasLocationPredictionState
TQ,N,V_locationPredictionState
<%@:%p cpu=%lld, wall=%lld, dmem=%lld>
wallTime
Tq,N,V_wallTime
cpuTime
Tq,N,V_cpuTime
dirtyMemory
Tq,N,V_dirtyMemory
snoozeAmount
alarmIdentifier
itemIdentifier
hasSnoozeAmount
Td,N,V_snoozeAmount
hasAlarmIdentifier
T@"NSString",&,N,V_alarmIdentifier
hasItemIdentifier
T@"NSString",&,N,V_itemIdentifier
hasStoreIdentifier
T@"NSString",&,N,V_storeIdentifier
changeObserver.keyqueue
com.apple.eventkitsync.changeobserver.%@
com.apple.eventkitsync.changeobserver.sequencenumber
taskCalendarId
eventCalendarId
CalSyncClientBeginningMultiSave
CalSyncClientFinishedMultiSave
-[NEKChangeObserver databaseDidChange]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/EventKitSync_Sim/EventKitSync-231.17/NEKSyncBundle/Models/NEKChangeObserver.m
-[NEKChangeObserver fetchChanges]
Inserts: 
Updates: 
Deletes: 
v24@?0B4i8@"NSArray"12@"NSArray"16@"NSArray"20
-[NEKChangeObserver fetchEverything]
-[NEKChangeObserver fetchNightly]
-[NEKChangeObserver syncBeginning]
-[NEKChangeObserver syncFinished]
-[NEKChangeObserver syncTimerFired:]
-[NEKChangeObserver invalidateSyncTimer]
-[NEKChangeObserver setSyncTimeout:]
T@"<NEKChangeObserverDelegate>",W,N,V_delegate
weakDatabaseController
T@"NEKEventStore",W,N,V_weakDatabaseController
metadataKeys
metadataValues
syncID
hasICSData
iCSData
T@"NSData",&,N,V_iCSData
T@"NEKPBCalendarIdentifier",&,N,V_calendarIdentifier
hasCalendarItemCount
TI,N,V_calendarItemCount
T@"NSMutableArray",&,N,V_metadataKeys
T@"NSMutableArray",&,N,V_metadataValues
hasSyncID
T@"NSString",&,N,V_syncID
hasTaskCompletionDate
hasOldIdentifier
hasNuevoIdentifier
TQ,N,V_displayOrder
B12@?0@"NSString"4@"NSString"8
B12@?0@"NSNumber"4@"NSNumber"8
@"NSString"8@?0B4
<NEKSourceAttributes (%p)
  name: %@
  defaultAlarmOffset: %@
  type: %d
  isEnabled: %d
  isFacebook: %d
  usesSelfAttendee: %d
  constraintsDescriptionPath: %@
  externalModificationTag: %@
  creatorBundleID: %@
  creatorCodeSigningIdentity: %@
  accountPersistentID: %@
  supportsSharedCalendars: %d
  allowsTasks: %d
  allowsEvents: %d
  allowsCalendarAddModifyDelete: %d
  onlyCreatorCanModify: %d
  snoozeAlarmRequiresDetach: %d
  supportsAlarmAcknowledgedDate: %d
  isLocalStore: %d
T@"NSString",C,N,V_name
T@"NSNumber",&,N,V_defaultAlarmOffset
Ti,N,V_type
T@"NSString",C,N,V_constraintsDescriptionPath
T@"NSString",C,N,V_creatorBundleID
T@"NSString",C,N,V_creatorCodeSigningIdentity
T@"NSString",C,N,V_accountPersistentID
SQLErrString
SQLErrMessage
SQLErrCode
T@"NDTSQFile",&,N,V_db
isEffectivelyEmpty
TB,N,V_isEffectivelyEmpty
isTruncated
TB,N,V_isTruncated
eventIdentifier
eventTitle
eventStart
calendarTitle
span
hasEventIdentifier
T@"NSString",&,N,V_eventIdentifier
hasEventTitle
T@"NSString",&,N,V_eventTitle
hasEventStart
Td,N,V_eventStart
hasCalendarTitle
T@"NSString",&,N,V_calendarTitle
hasSpan
TI,N,V_span
1.2.11
hasSyncId
T@"NSString",&,N,V_syncId
status
hasStatus
TI,N,V_status
T@"NEKPBSourceAttributes",&,N,V_attributes
A333333
stringWithFormat:
appendFormat:
appendString:
copy
description
.cxx_destruct
entityType
setEntityType:
selfAttendeeEmail
setSelfAttendeeEmail:
selfAttendeeUUID
setSelfAttendeeUUID:
selfOrganizerEmail
setSelfOrganizerEmail:
selfOrganizerUUID
setSelfOrganizerUUID:
attendeeStatus
setAttendeeStatus:
invitationStatus
setInvitationStatus:
identifier
setIdentifier:
dateChanged
setDateChanged:
timeChanged
setTimeChanged:
titleChanged
setTitleChanged:
locationChanged
setLocationChanged:
attendeeComment
setAttendeeComment:
attendeeStatusFlag
setAttendeeStatusFlag:
externalID
setExternalID:
locationPredictionState
setLocationPredictionState:
_dateChanged
_timeChanged
_titleChanged
_locationChanged
_attendeeComment
_attendeeStatusFlag
_entityType
_selfAttendeeEmail
_selfAttendeeUUID
_selfOrganizerEmail
_selfOrganizerUUID
_attendeeStatus
_invitationStatus
_identifier
_externalID
_locationPredictionState
properties
allValues
init
UUID
UUIDString
alloc
NEKFluff
NEKSqueeze
eks_garbageUUID
objectForKey:
setObject:forKey:
propertiesForCalendarItemIdentifier:
numberWithUnsignedInteger:
numberWithInteger:
keyEnumerator
countByEnumeratingWithState:objects:count:
class
isKindOfClass:
uniqueId
isDetached
originalItem
hasRecurrenceRules
alarms
structuredLocation
calendar
initWithCalendar:
setCalendarIdentifier:
setCalendarItemCount:
eventStore
arrayWithObjects:count:
setPropertiesForWrapper:withCalendarItems:needsInvite:sendAllProperties:eventStore:calendar:originalEvent:
detachedItems
allObjects
count
ICSDataForCalendarItems:preventLineFolding:
initWithData:encoding:
setZICSData:
setSyncId:
title
setIsReminderWithLocation:
displayOrder
setDisplayOrder:
selfAttendee
participantStatus
setAttendeeStatus:forIdentifier:
emailAddress
setSelfAttendeeEmail:forIdentifier:
absoluteString
setSelfAttendeeUUID:forIdentifier:
organizer
isCurrentUser
setSelfOrganizerEmail:forIdentifier:
setSelfOrganizerUUID:forIdentifier:
setDateChanged:forIdentifier:
setTimeChanged:forIdentifier:
setTitleChanged:forIdentifier:
setLocationChanged:forIdentifier:
setAttendeeComment:forIdentifier:
setAttendeeStatusFlag:forIdentifier:
containsObject:
setInvitationStatus:forIdentifier:
setExternalID:forIdentifier:
calendarIdentifierInRowMappingForEventOrTask:
setOldCalendarIdentifier:
hasRowMappingForEntity:
objectID
completionDate
setTaskCompleted:
timeIntervalSinceReferenceDate
setTaskCompletionDate:
setAllPropertiesForItem:identifier:wrapper:needsInvite:eventStore:calendar:
setMinimalPropertiesForItem:identifier:wrapper:
oldCalendarIdentifier
wrapperForCalendarItem:needsInvite:eventStore:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
objectIdentifier
sequencer
changeType
ICSWrapperMetadata
ICSData
setICSData:
setMetadata:forCalendarItemIdentifier:
dateChangedForIdentifier:
timeChangedForIdentifier:
titleChangedForIdentifier:
locationChangedForIdentifier:
attendeeCommentForIdentifier:
selfAttendeeEmailForIdentifier:
selfAttendeeUUIDForIdentifier:
selfOrganizerEmailForIdentifier:
selfOrganizerUUIDForIdentifier:
invitationStatusForIdentifier:
setLocationPredictionState:forIdentifier:
locationPredictionStateForIdentifier:
attendeeStatusForIdentifier:
attendeeStatusFlagForIdentifier:
externalIDForIdentifier:
enumerateCalendarItemIdentifiersUsingBlock:
entityTypeForCalendarItemWithIdentifier:
objectTypeForCalendarItemWithIdentifier:
zICSData
calendarIdentifier
oldIdentifier
setOldIdentifier:
nuevoIdentifier
setNuevoIdentifier:
calendarItemCount
isTaskCompleted
taskCompletionDate
isReminderWithLocation
setProperties:
syncId
_taskCompleted
_isReminderWithLocation
_zICSData
_calendarIdentifier
_oldCalendarIdentifier
_oldIdentifier
_nuevoIdentifier
_calendarItemCount
_title
_properties
_syncId
_taskCompletionDate
_displayOrder
initWithExpiration:
setCountLimit:
startDate
dbFileManager
initWithDatabaseManager:
initWithEnvironment:
tinyStore
recordMap
seenMap
syncCoordinator
syncController
setDbFileManager:
setTinyStore:
setRecordMap:
setSeenMap:
setSyncController:
setSyncCoordinator:
daemon
setDaemon:
_dbFileManager
_tinyStore
_recordMap
_seenMap
_syncController
_syncCoordinator
_daemon
source
initWithSource:
initWithCalendarRef:useAttributes:
initWithCalendarRef:
initWithSourceIdentifier:attributes:calendarIdentifier:
storeIdentifier
attributes
isDefaultTaskCalendar
setIsDefaultTaskCalendar:
isDefaultEventCalendar
setIsDefaultEventCalendar:
_isDefaultTaskCalendar
_isDefaultEventCalendar
_storeIdentifier
_attributes
initWithBatchSize:
initWithCapacity:
supplyOneResult:
finish
exitNow
interimBatch
wantsBatch
setBatch:
hasBatch
removeAllObjects
addObject:
setCount:
batchSize
_supplyResults
setInterimBatch:
batch
setExitNow:
pipeForArray:
waitForBatch
terminate
error
setError:
setHasBatch:
setWantsBatch:
setBatchSize:
startTime
setStartTime:
_exitNow
_error
_batch
_interimBatch
_hasBatch
_wantsBatch
_batchSize
_count
_startTime
dictionaryRepresentation
dictionary
numberWithBool:
setPersistentID:
allocWithZone:
copyWithZone:
hasPersistentID
setIsLocalStore:
setHasIsLocalStore:
hasIsLocalStore
readFrom:
writeTo:
copyTo:
mergeFrom:
persistentID
isLocalStore
_persistentID
_isLocalStore
_has
initWithPath:
path
initWithOptions:capacity:
_bootstrap
date
initWithCalendarIdentifier:
components:fromDate:
year
month
hour
minute
second
stringByReplacingOccurrencesOfString:withString:
_recreatePath
_createParentDirectory
_openDatabase
_prepDatabase
_addSchemas
_makeErrorDictionary
exceptionWithName:reason:userInfo:
delegate
newFileName:
_newPath
defaultManager
stringByDeletingLastPathComponent
length
numberWithInt:
dictionaryWithObjects:forKeys:count:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
domain
isEqualToString:
code
UTF8String
executeSql:
initWithName:
addSchema:
setDb:
member:
createTables
instanceName
currentVersion
_instanceVersion:
migrateFrom:
_setInstance:version:
stringWithUTF8String:
setParsed:
resetBindCursor
parsed
getIntegerForKey:default:
setInteger:forKey:
cache:willEvictObject:
initWithURL:
parseSql:andRun:
parseMultipleSql:andRun:
begin
commit
rollback
setPath:
setDelegate:
pathTemplate
setPathTemplate:
_readSource
_readFd
_bootstrapDepth
_statementCache
_instanceVersions
_memberSchemas
_path
_delegate
_pathTemplate
usedRecently
setUsedRecently:
timer
setTimer:
callRemoveAllObjects
queue
_tickleTimer
expiration
action
setQueue:
setExpiration:
setAction:
_usedRecently
_timer
_queue
_action
_expiration
setSourceIdentifier:
setAttributes:
hasSourceIdentifier
hasCalendarIdentifier
hasAttributes
setHasIsDefaultTaskCalendar:
hasIsDefaultTaskCalendar
setHasIsDefaultEventCalendar:
hasIsDefaultEventCalendar
hasOldCalendarIdentifier
sourceIdentifier
_sourceIdentifier
predicateWithBlock:
sourceType
defaultLocalCalendar
numberWithUnsignedLongLong:
setUUID:
setTitle:
setType:
setDigest:
setSymbolicColorName:
setColorString:
setSharedOwnerName:
setSharedOwnerAddress:
setPublishedURLString:
setExternalIdentificationTag:
setSyncToken:
setExternalModificationTag:
setExternalRepresentation:
setNotes:
setSubCalAccountID:
setPushKey:
setSelfIdentityDisplayName:
setSelfIdentityEmail:
setSelfIdentityAddressString:
setSelfIdentityFirstName:
setSelfIdentityLastName:
setOwnerIdentityDisplayName:
setOwnerIdentityEmail:
setOwnerIdentityAddressString:
setOwnerIdentityFirstName:
setOwnerIdentityLastName:
hasUUID
hasTitle
setIsReadonly:
setHasIsReadonly:
hasIsReadonly
setIsHidden:
setHasIsHidden:
hasIsHidden
setIsImmutable:
setHasIsImmutable:
hasIsImmutable
setIsInbox:
setHasIsInbox:
hasIsInbox
setIsNotificationsCollection:
setHasIsNotificationsCollection:
hasIsNotificationsCollection
setIsSharingInvitation:
setHasIsSharingInvitation:
hasIsSharingInvitation
setIsSubscribed:
setHasIsSubscribed:
hasIsSubscribed
setIsHolidayCalendar:
setHasIsHolidayCalendar:
hasIsHolidayCalendar
setIsFamilyCalendar:
setHasIsFamilyCalendar:
hasIsFamilyCalendar
setIsIgnoringEventAlerts:
setHasIsIgnoringEventAlerts:
hasIsIgnoringEventAlerts
setIsIgnoringSharedCalendarNotifications:
setHasIsIgnoringSharedCalendarNotifications:
hasIsIgnoringSharedCalendarNotifications
setIsSchedulingProhibited:
setHasIsSchedulingProhibited:
hasIsSchedulingProhibited
setIsDefaultCalendarForStore:
setHasIsDefaultCalendarForStore:
hasIsDefaultCalendarForStore
hasType
hasDigest
hasSymbolicColorName
hasColorString
setHasDisplayOrder:
hasDisplayOrder
setSharingStatus:
setHasSharingStatus:
hasSharingStatus
hasSharedOwnerName
hasSharedOwnerAddress
setSharingInvitationResponse:
setHasSharingInvitationResponse:
hasSharingInvitationResponse
hasPublishedURLString
setCanBePublished:
setHasCanBePublished:
hasCanBePublished
setCanBeShared:
setHasCanBeShared:
hasCanBeShared
setIsPublished:
setHasIsPublished:
hasIsPublished
hasExternalID
hasExternalIdentificationTag
hasSyncToken
hasExternalModificationTag
hasExternalRepresentation
setSupportedEntityTypes:
setHasSupportedEntityTypes:
hasSupportedEntityTypes
setHasInvitationStatus:
hasInvitationStatus
setHasBeenAlerted:
setHasHasBeenAlerted:
hasHasBeenAlerted
hasNotes
hasSubCalAccountID
hasPushKey
hasSelfIdentityDisplayName
hasSelfIdentityEmail
hasSelfIdentityAddressString
hasSelfIdentityFirstName
hasSelfIdentityLastName
hasOwnerIdentityDisplayName
hasOwnerIdentityEmail
hasOwnerIdentityAddressString
hasOwnerIdentityFirstName
hasOwnerIdentityLastName
uUID
isReadonly
isHidden
isImmutable
isInbox
isNotificationsCollection
isSharingInvitation
isSubscribed
isHolidayCalendar
isFamilyCalendar
isIgnoringEventAlerts
isIgnoringSharedCalendarNotifications
isSchedulingProhibited
isDefaultCalendarForStore
type
digest
symbolicColorName
colorString
sharingStatus
sharedOwnerName
sharedOwnerAddress
sharingInvitationResponse
publishedURLString
canBePublished
canBeShared
isPublished
externalIdentificationTag
syncToken
externalModificationTag
externalRepresentation
supportedEntityTypes
hasBeenAlerted
notes
subCalAccountID
pushKey
selfIdentityDisplayName
selfIdentityEmail
selfIdentityAddressString
selfIdentityFirstName
selfIdentityLastName
ownerIdentityDisplayName
ownerIdentityEmail
ownerIdentityAddressString
ownerIdentityFirstName
ownerIdentityLastName
_sharingInvitationResponse
_sharingStatus
_supportedEntityTypes
_colorString
_digest
_externalIdentificationTag
_externalModificationTag
_externalRepresentation
_notes
_ownerIdentityAddressString
_ownerIdentityDisplayName
_ownerIdentityEmail
_ownerIdentityFirstName
_ownerIdentityLastName
_publishedURLString
_pushKey
_selfIdentityAddressString
_selfIdentityDisplayName
_selfIdentityEmail
_selfIdentityFirstName
_selfIdentityLastName
_sharedOwnerAddress
_sharedOwnerName
_subCalAccountID
_symbolicColorName
_syncToken
_type
_uUID
_canBePublished
_canBeShared
_hasBeenAlerted
_isDefaultCalendarForStore
_isFamilyCalendar
_isHidden
_isHolidayCalendar
_isIgnoringEventAlerts
_isIgnoringSharedCalendarNotifications
_isImmutable
_isInbox
_isNotificationsCollection
_isPublished
_isReadonly
_isSchedulingProhibited
_isSharingInvitation
_isSubscribed
syncStateDBPathFor:
_loadPlist
setValue:forKey:
_savePlist
objectForKeyedSubscript:
integerValue
numberWithDouble:
doubleValue
dataWithPropertyList:format:options:error:
writeToFile:atomically:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
setStringValue:forKey:
getStringValueForKey:default:
setIntegerValue:forKey:
getIntegerValueForKey:default:
setDoubleValue:forKey:
getDoubleValueForKey:default:
_plistContents
initWithFile:
initWithData:
data
setData:
msgType
setMsgType:
responseIdentifier
setResponseIdentifier:
_data
_msgType
_responseIdentifier
initWithIDSServiceName:logging:
initWithService:
addDelegate:queue:
setObject:forKeyedSubscript:
dataUsingEncoding:
appendBytes:length:
appendData:
getBytes:range:
subdataWithRange:
idsOptions
mutableCopy
_makeWireMessageType:content:
setWithObject:
sendData:toDestinations:priority:options:identifier:error:
fileURLWithPath:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
_rawSendData:type:responseIdentifier:error:
_rawSendFile:type:responseIdentifier:error:
removeObjectForKey:
_makeMessageFromWireData:
incomingResponseIdentifier
outgoingResponseIdentifier
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithIDSServiceName:
registerMessageType:handler:
resume
setPriority:
setCloudFallback:
sendMessage:responseHandler:completion:
reply:to:completion:
setIdsOptions:
_outstanding
_handlers
_service
_priority
_logFacility
_suspended
_cloudFallback
_idsOptions
lastPathComponent
fileSystemRepresentation
bindString:
step
fetchInteger
bindInteger:
fetchDouble
bindDouble:
fetchString
fetchBlob
bindBlob:
getDoubleForKey:default:
setDouble:forKey:
getStringForKey:default:
setString:forKey:
getDataForKey:default:
setData:forKey:
_insert
_select
_baseName
identifierForRecordID:
setIdentifier:forRecordID:
deleteIdentifierForRecordID:
commit:
reset
removeAllRecords
rowID
setRowID:
entityRowID
setEntityRowID:
_rowID
_entityRowID
_UUID
insertTableIfNeeded
prepareStatements
_beginTransaction
dealloc
recordForRecordID:
stringWithCString:encoding:
errorWithDomain:code:userInfo:
_selectRecord
_updateRecord
_insertRecord
_deleteRecord
fileExistsAtPath:
stores
setStores:
calendars
setCalendars:
tasks
setTasks:
events
setEvents:
_stores
_calendars
_tasks
_events
environment
initWithQueue:environment:
setWeakDatabaseController:
clientName
initWithCustomClientId:
initWithEKOptions:path:changeTrackingClientId:enablePropertyModificationLogging:
nowMinusPrevious:
dirtyMemory
wallTime
_commitPendingRecordMapChanges
freshEventStore
removeDeletableCalendars:
saveEventStore:
removeDeletableSources:
_deletableSources
deleteStore:
_deletableCalendars
deleteCalendar:
removeAllRecordsInCalendar:
predicateForCalendarItemsOfType:inCalendar:
eventObjectIDsMatchingPredicate:
publicObjectWithObjectID:
removeEvent:span:error:
reminderObjectIDsMatchingPredicate:
removeReminder:commit:error:
shouldSendEntity:
_hasRowMappingForEntity:
sources
_updateRowMappingForEntity:
_getDefaultTaskCalendar:defaultEventCalendar:store:
allCalendars
predicateForMasterEventsInCalendars:
eventInWindow:inStore:
predicateForRemindersInCalendars:
defaultCalendarForNewReminders
defaultCalendarForNewEvents
isPhantom
localSource
accountPersistentID
sourceWithIdentifier:
_updateSource:withSourceWrapper:store:
saveSource:commit:error:
_createSourceForWrapper:store:
calendarWithIdentifier:
_updateCalendar:withCalendarWrapper:
saveCalendar:commit:error:
_createCalendarForWrapper:store:
_checkAndSetDefaultCalendar:calendarWrapper:store:
performUpdateWithICSWrappers:store:
_deleteSourceWithIdentifier:store:
_deleteCalendarWithIdentifier:store:
_deleteEventWithIdentifier:calendarIdentifier:store:
_deleteReminderWithIdentifier:calendarIdentifier:store:
applySidePropertiesToEntity:withWrapper:
isTemporary
_didCreateEntity:
setParticipationStatus:
isMaster
saveEvent:span:commit:error:
dateWithTimeIntervalSinceReferenceDate:
setCompletionDate:
participationStatus
dictionaryWithCapacity:
calendarItemsWithExternalIdentifier:
calendarItemExternalIdentifier
updateEvent:identifier:eventStore:occurrenceDate:participationStatus:masterIdentifier:isMaster:
originalStartDate
longLongValue
persistentObject
initWithPersistentObject:occurrenceDate:
eventForUID:occurrenceDate:
intValue
eventWithUniqueId:
componentsSeparatedByString:
objectAtIndexedSubscript:
eventsWithExternalIdentifier:inCalendars:
handleUpdatedItemFromGizmo:type:withWrapper:identifier:
detacheesForIdentifierCreatingIfNeeded:detachedEventMap:
remindersWithExternalIdentifier:inCalendars:
calendarInStore:withNEKCalendarID:
handleCalendarTaskWithUniqueIdentifierFromGizmo:calendar:wrapper:
handleCalendarEventWithUniqueIdentifierFromGizmo:calendar:wrapper:detachedEventMap:
calendarItemsWithExternalIdentifier:inCalendars:
updateMasterEvent:masterIdentifier:calendarIdentifier:masterParticipationStatus:detachedEvents:
_deleteCalendarItemsInICSWrapperFromOldCalendar:store:
_deleteCalendarItemsMovedToCalendar:inICSWrapper:
importICSData:intoCalendars:options:
objectAtIndex:
handleNewEntity:withWrapper:
_removeIdentifierForDeletedEntity:
calendarItemsWithUniqueIdentifier:inCalendar:
_deleteDetachedCalendarItemsFromOldCalendar:deletedEvents:
updateSelfAttendeeForCalendarItem:identifier:withWrapper:
isExternallyOrganizedInvitation
endDate
status
deleteInviteByUUID:
shouldShowInvite:withUUID:
didShowInvite:withUUID:
unsignedIntegerValue
updateInvitationStatusForCalendarItem:identifier:withWrapper:
saveEvent:span:error:
saveReminder:error:
attendees
setSelfAttendee:
setCurrentUser:
setOrganizer:
completion
setCompletion:
isEmpty
setIsEffectivelyEmpty:
truncated
setIsTruncated:
isTruncated
isEffectivelyEmpty
addAttendeeEvents:store:
storeWrappersForChangeSet:pipe:store:
calendarWrappersForChangeSet:pipe:store:
deletionWrappersForChangeSet:pipe:
ICSWrappersForChangeSet:pipe:store:
owner
updates
setUpdates:
enumerateChanges:forEntitiesOfClass:withBlock:
wrapperForCalEntity:
_compoundIdentifierForEntity:
startMappingEntities
initForFullSync:tinyStore:
eventInFuture:inStore:
stringRepresentation
endMappingEntities
deletes
deletionWrapperForRecordID:eventStore:
wrapperForSource:
wrapperForCalendar:
wrapperForCalendarItem:
wrapperForCalendar:useAttributes:
_identifierInRowMapping:
isIdentifierPresent:forRecordID:
sweep
removeSource:commit:error:
removeCalendar:commit:error:
_deleteAndLogEvent:identifier:store:
configureSource:inStore:withAttributes:
sourceWithEventStore:
setDefaultCalendarForNewReminders:
setDefaultCalendarForNewEvents:
didCalendarChange:
configureCalendar:inDatabase:withAttributes:
calendarForEntityTypes:eventStore:
calendarForEntityType:eventStore:
eventSourceForDatabase:identifier:
setSource:
setImmutable:
changeObserver
_sendChangesIfAvailable
removeAllItems
allItemsWithEventFilter:taskWindow:
purgeRecordMap
updateSource:store:
updateCalendar:store:
updateICS:store:
deleteItemWithIdentifier:store:
deleteItem:store:
wrappersForChangeSet:
identifierInRowMappingForEventOrTask:
identifierInRowMappingForRecordIDRef:
calendarIdentifierInRowMappingForRecordIDRef:
removeIdentifiersForDeletedRecordIDs:
commitRecordMap
sweepSeenMap
deleteEvent:
deleteTask:
_ICSLogTestForWrapper:
_flushQueue
setChangeObserver:
_createdEntities
_idleBlockQueue
_syncedEntityUniqueIdentifiers
_environment
_changeObserver
initWithDomain:
setWithObjects:
shared
alertInviteeDeclines
_broadcastBool:forKey:
showDeclinedEvents
rebroadcastShowDeclinedChangeNotification
rebroadcastAlertInviteeDeclinesChangeNotification
setBool:forKey:
synchronize
synchronizeNanoDomain:keys:
boolForKey:keyExistsAndHasValidFormat:
setAlertInviteeDeclines:
setShowDeclinedEvents:
applyRebroadcastShowDeclinedEvents
applyRebroadcastAlertInviteeDeclines
synchronizeUserDefaultsDomain:keys:
enumerateKeysAndObjectsUsingBlock:
rebroadcastAllObservedNotifications
handleDarwinNotificationOfName:
_npsManager
_domainAccessor
_keysToDirectMirrorCompanionToGizmo
_ekPrefs
writeStackshot:
writeCrashReport:
facilityWithSubsystem:category:
_recvSetReminderCompletedEndpoint:
_recvSetParticipantStatusEndpoint:
_recvSetAlarmSnoozeEndpoint:
_recvDeleteEventEndpoint:
setSetParticipantStatus:
setParticipantStatus
setStatus:
setSpan:
setStoreIdentifier:
setItemIdentifier:
setDeleteEvent:
deleteEvent
setEventIdentifier:
setEventTitle:
setEventStart:
setCalendarTitle:
setSetReminderComplete:
setReminderComplete
setIsComplete:
setCalendarName:
setReminderTitle:
setExternalIdentifier:
setSetAlarmSnooze:
setAlarmSnooze
setSnoozeAmount:
setAlarmIdentifier:
snoozeAlarm:withTimeIntervalFromNow:
initWithStore:
_disableMutation
sendSetParticipantStatus:span:storeId:eventId:
sendDeleteEventId:title:start:inCalendarId:title:inSource:span:
sendSetCompleted:calendarName:title:externalIdentifier:
sendSetReminderAlarmSnooze:calendarName:title:externalIdentifier:alarmIdentifier:
sendSetEventAlarmSnooze:calendarName:storeId:eventId:alarmIdentifier:
_calendarItem:snoozeAlarmID:withTimeIntervalFromNow:
_store
_messaging
_messageLogging
initWithIdentifier:calendarIdentifier:type:
_enableDisableLogging
userInfo
_blockUntilUnlock
_registerForNotifications
_registerForXpcActivity
startSyncControllerIfNeeded
start
mainRunLoop
defaultCenter
didReceiveStartSyncCommand:
receivedStartSyncNotificationString
addObserver:selector:name:object:
didReceiveReunionSyncCommand:
receivedReunionSyncNotificationString
_databaseChangedExternally
startSyncControllerIfNeededAndPossible
_triggerFullSync
clearRetryState
_triggerMigrationSync
shouldSyncBasedOnTime:
_triggerNightlySync
postNotificationName:object:
scheduleRetry
setNeedsFullSync
setNeedsReunionSync
_notificationQueue
_daemonQueue
_preferencesObserver
_unlocked
_logDbFile
compare:
isBefore:
isAfter:
_setWindowToNow
_loadLastSyncWindow
_getTestWindowStart
_getTestWindowEnd
_getEnableInfiniteWindow
distantPast
distantFuture
targetableDevice
systemBuildVersion
compare:options:
setTaskCutoff:
_computeDerived
_getWindowStart
_getWindowEnd
initWithTimeIntervalSinceReferenceDate:
setStartDate:
setEndDate:
setTaskCutoffDate:
defaultTimeZone
setTimeZone:
timeZone
occurrencesExistInRangeForEvent:startDate:endDate:mustStartInInterval:timezone:
taskCutoffDate
taskCutoff
spanStart
setSpanStart:
spanEnd
setSpanEnd:
_startDate
_endDate
_timeZone
_taskCutoffDate
_spanStart
_spanEnd
_taskCutoff
os_log_facility
setObfuscate:
isInternalDevice
rpcEndpoint
setParticipantStatus:span:storeId:eventId:
deleteEventId:title:start:inCalendarId:title:inSource:span:
setCompleted:calendarName:title:externalIdentifier:
setReminderAlarmSnooze:calendarName:title:externalIdentifier:alarmIdentifier:
setEventAlarmSnooze:calendarName:storeId:eventId:alarmIdentifier:
connection
setConnection:
setRpcEndpoint:
_connection
_rpcEndpoint
initWithMachServiceName:
interfaceWithProtocol:
setExportedInterface:
setExportedObject:
listener:shouldAcceptNewConnection:
initWithEndpoint:
_listener
impl
setHasIsComplete:
hasIsComplete
hasCalendarName
hasReminderTitle
hasExternalIdentifier
isComplete
calendarName
reminderTitle
externalIdentifier
_calendarName
_externalIdentifier
_reminderTitle
_isComplete
initWithIdentifier:isDefaultLocalCalendar:
isDefaultLocalCalendar
_isDefaultLocalCalendar
numberWithUnsignedInt:
setName:
setConstraintsDescriptionPath:
setCreatorBundleID:
setCreatorCodeSigningIdentity:
setAccountPersistentID:
hasName
setDefaultAlarmOffset:
setHasDefaultAlarmOffset:
hasDefaultAlarmOffset
setHasType:
setIsEnabled:
setHasIsEnabled:
hasIsEnabled
setIsFacebook:
setHasIsFacebook:
hasIsFacebook
setUsesSelfAttendee:
setHasUsesSelfAttendee:
hasUsesSelfAttendee
hasConstraintsDescriptionPath
hasCreatorBundleID
hasCreatorCodeSigningIdentity
hasAccountPersistentID
setSupportsSharedCalendars:
setHasSupportsSharedCalendars:
hasSupportsSharedCalendars
setAllowsTasks:
setHasAllowsTasks:
hasAllowsTasks
setAllowsEvents:
setHasAllowsEvents:
hasAllowsEvents
setAllowsCalendarAddDeleteModify:
setHasAllowsCalendarAddDeleteModify:
hasAllowsCalendarAddDeleteModify
setOnlyCreatorCanModify:
setHasOnlyCreatorCanModify:
hasOnlyCreatorCanModify
setSnoozeAlarmRequiresDetach:
setHasSnoozeAlarmRequiresDetach:
hasSnoozeAlarmRequiresDetach
setSupportsAlarmAcknowledgedDate:
setHasSupportsAlarmAcknowledgedDate:
hasSupportsAlarmAcknowledgedDate
name
defaultAlarmOffset
isEnabled
isFacebook
usesSelfAttendee
constraintsDescriptionPath
creatorBundleID
creatorCodeSigningIdentity
supportsSharedCalendars
allowsTasks
allowsEvents
allowsCalendarAddDeleteModify
onlyCreatorCanModify
snoozeAlarmRequiresDetach
supportsAlarmAcknowledgedDate
_accountPersistentID
_constraintsDescriptionPath
_creatorBundleID
_creatorCodeSigningIdentity
_defaultAlarmOffset
_name
_allowsCalendarAddDeleteModify
_allowsEvents
_allowsTasks
_isEnabled
_isFacebook
_onlyCreatorCanModify
_snoozeAlarmRequiresDetach
_supportsAlarmAcknowledgedDate
_supportsSharedCalendars
_usesSelfAttendee
isSyncingReply:
setEnvironment:
listener
setListener:
stringByAppendingPathComponent:
sharedInstance
waitForPairingStorePathPairingID:
pairingID
pairingStorePath
_createDb
_prepareStatements
dbFilename
_executeSql:
location
localizedStandardCompare:
setDbFilename:
_dbQueue
_dbConn
_update
_fetch
_delete
_sweep
_dbFilename
_unregisterForNotifications
_retrySync:
removeObserver:name:object:
initWithService:priority:asMasterStore:options:
setOptions:
setEngineType:
setDelegate:queue:
resume:
setNeedsResetSync
maxDeltaRetries
_deleteSYObject:store:
isResetSync
setHasChangesAvailable
isSending
_retrySession:
valueForKey:
fetchEverything
setChangeSupplier:
fetchNightly
fetchChanges
changeSupplier
setChangeCount:
changeCount
setStart:
setFullSessionTimeout:
fullSessionTimeout
setPerMessageTimeout:
setSessionMetadata:
setSerializer:
setCanRestart:
setCanRollback:
_nextDelay:
currentSession
_shouldFakeFailure
bumpFaultsAndScheduleRetry
okToPerformDeltaSync
changeObserverDidObserveChanges:
changeObserverDidObserveNightlySync:
changeObserverDidObserveResetSync:
changeObserverDidObserveMigration:
service:startSession:error:
service:sessionEnded:error:
service:incomingData:completion:
service:incomingStream:metadata:completion:
service:encounteredError:context:
service:willPreferSession:overSession:
service:willSwitchFromPairingID:toPairingID:
service:didSwitchFromPairingID:toPairingID:
service:targetDeviceProximityChanged:
serviceDidPairDevice:
serviceDidUnpairDevice:
createOrUpdateSYObject:store:
deleteSYObject:store:
isCurrentlySyncing
_syncService
_eventStore
_observer
_syncSession
_completion
_isNightlySync
_deltaRateEstimate
_fullRateEstimate
_mutatorListener
_statusReporter
_isCurrentlySyncing
bytes
resetFetchCursor
dataWithBytes:length:
bindUint64:
fetchUint64
bindPosition
fetchPosition
columnCount
bindCount
_parsed
setSyncID:
addMetadataKeys:
addMetadataValues:
syncID
hasTaskCompletionDate
hasICSData
iCSData
hasOldIdentifier
metadataKeys
metadataValues
enumerateObjectsUsingBlock:
initWithAttributes:
isHolidyCalendar
publishedURL
selfIdentityAddress
ownerIdentityAddress
initWithPersistentID:isLocalStore:
setIsHolidyCalendar:
URLWithString:
setPublishedURL:
setSelfIdentityAddress:
setOwnerIdentityAddress:
setIsDefaultLocalCalendar:
setInvitationChangedPropertyFlagDate:
setInvitationChangedPropertyFlagTime:
setInvitationChangedPropertyFlagTitle:
setInvitationChangedPropertyFlagLocation:
setInvitationChangedPropertyFlagAttendeeComment:
setInvitationChangedPropertyFlagAttendeeStatus:
invitationChangedPropertyFlagDate
hasInvitationChangedPropertyFlagDate
invitationChangedPropertyFlagTime
hasInvitationChangedPropertyFlagTime
invitationChangedPropertyFlagTitle
hasInvitationChangedPropertyFlagTitle
invitationChangedPropertyFlagLocation
hasInvitationChangedPropertyFlagLocation
invitationChangedPropertyFlagAttendeeComment
hasInvitationChangedPropertyFlagAttendeeComment
invitationChangedPropertyFlagAttendeeStatus
hasInvitationChangedPropertyFlagAttendeeStatus
initWithInserts:updates:deletes:database:changeNumber:
inserts
setInserts:
setDeletes:
changeNumber
setChangeNumber:
setTruncated:
_inserts
_updates
_deletes
_database
_truncated
_changeNumber
setStoreWrapper:
setCalendarWrapper:
setICSWrapper:
setDeletionWrapper:
setPacketNumber:
setHasPacketNumber:
hasPacketNumber
hasStoreWrapper
hasCalendarWrapper
hasICSWrapper
hasDeletionWrapper
hasSetReminderComplete
hasSetParticipantStatus
hasSetAlarmSnooze
hasDeleteEvent
packetNumber
storeWrapper
calendarWrapper
iCSWrapper
deletionWrapper
_calendarWrapper
_deleteEvent
_deletionWrapper
_iCSWrapper
_packetNumber
_setAlarmSnooze
_setParticipantStatus
_setReminderComplete
_storeWrapper
allowsContentModifications
isSubscribedHolidayCalendar
allowsScheduling
isDefaultSchedulingCalendar
publishURL
externalIDTag
allowEvents
allowReminders
subcalAccountID
unlocalizedTitle
setAllowsContentModifications:
setHidden:
setInbox:
setNotificationsCollection:
setSharingInvitation:
setSubscribed:
setSubscribedHolidayCalendar:
setFamilyCalendar:
setAllowsScheduling:
setIsDefaultSchedulingCalendar:
setPublishURL:
setExternalIDTag:
setSubcalAccountID:
_isHolidyCalendar
_publishedURL
_selfIdentityAddress
_ownerIdentityAddress
syncSession:enqueueChanges:error:
syncSession:applyChanges:completion:
syncSession:didEndWithError:
syncSession:resetDataStoreWithError:
resetDataStoreForSyncSession:completion:
syncSession:rollbackChangesWithError:
syncSession:restartChanges:
syncSession:successfullySynced:
progressLiar
setProgressLiar:
syncKind
setSyncKind:
_isFirst
_changeQueue
_ct_logger
_changeSupplier
_progressLiar
_changeCount
_syncKind
_start
session
setSession:
_session
hasIdentifier
setHasIsDefaultLocalCalendar:
hasIsDefaultLocalCalendar
hasSelfAttendeeEmail
setHasEntityType:
hasEntityType
setHasInvitationChangedPropertyFlagDate:
setHasInvitationChangedPropertyFlagTime:
setHasInvitationChangedPropertyFlagTitle:
setHasInvitationChangedPropertyFlagLocation:
setHasInvitationChangedPropertyFlagAttendeeComment:
setHasInvitationChangedPropertyFlagAttendeeStatus:
hasSelfAttendeeUUID
hasSelfOrganizerEmail
hasSelfOrganizerUUID
setHasAttendeeStatus:
hasAttendeeStatus
setHasLocationPredictionState:
hasLocationPredictionState
_invitationChangedPropertyFlagAttendeeComment
_invitationChangedPropertyFlagAttendeeStatus
_invitationChangedPropertyFlagDate
_invitationChangedPropertyFlagLocation
_invitationChangedPropertyFlagTime
_invitationChangedPropertyFlagTitle
setDirtyMemory:
cpuTime
setCpuTime:
setWallTime:
_wallTime
_cpuTime
_dirtyMemory
setHasSnoozeAmount:
hasSnoozeAmount
hasAlarmIdentifier
hasItemIdentifier
hasStoreIdentifier
snoozeAmount
alarmIdentifier
itemIdentifier
_snoozeAmount
_alarmIdentifier
_itemIdentifier
dataFromChange:
changeFromData:ofType:
dataWithSYObject:
SYObjectWithData:
encodeSYChangeForBackwardCompatibility:protocolVersion:
decodeChangeData:fromProtocolVersion:ofType:
beginObservingChanges
registerForDetailedChangeTracking:
stopObservingChanges
weakDatabaseController
_freshStoreAndChangeNumber:
setLastSequenceNumber:
databaseDidChange
_migrationSync
_changeTrackingWasPurged:
invalidateSyncTimer
notifyForDatabaseUpdatesIfNeeded
isWaitingOnSync
notifyForDatabaseUpdates
databaseController
lastSequenceNumber
_fetchChangesInto:from:inside:
markChangedObjectIDsConsumedUpToToken:
previousDefaultTaskCalendar
previousDefaultEventCalendar
setPreviousDefaultTaskCalendar:
setPreviousDefaultEventCalendar:
fetchChangedObjectIDsSinceToken:resultHandler:
moveChangeNumber:store:
_sequenceKey
_taskCalendarKey
_eventCalendarKey
setSyncTimeout:
invalidate
isValid
dateWithTimeIntervalSinceNow:
setFireDate:
syncTimerFired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
syncBeginning
syncFinished
_databaseHasPendingChanges
_keyQueue
_sawSeqnoFailure
_lastSequenceNumber
_syncTimer
_syncState
_clientName
_weakDatabaseController
metadataKeysCount
clearMetadataKeys
metadataKeysAtIndex:
metadataValuesCount
clearMetadataValues
metadataValuesAtIndex:
metadataKeysType
metadataValuesType
setHasCalendarItemCount:
hasCalendarItemCount
hasSyncID
setHasTaskCompletionDate:
hasNuevoIdentifier
setMetadataKeys:
setMetadataValues:
_iCSData
_metadataKeys
_metadataValues
_syncID
isFacebookSource
calendarsForEntityType:
deleteWhatever:calendarsInSource:inStore:
setSourceType:
setEnabled:
deleteSourcesTaskCalendars:inStore:
deleteSourcesEventCalendars:inStore:
lastInsertedRowId
batcherForArray:
_isEffectivelyEmpty
_isTruncated
hasEventIdentifier
hasEventTitle
setHasEventStart:
hasEventStart
hasCalendarTitle
setHasSpan:
hasSpan
eventIdentifier
eventTitle
eventStart
calendarTitle
span
_eventStart
_calendarTitle
_eventIdentifier
_eventTitle
_span
hasSyncId
setHasStatus:
hasStatus
_status
NEKICSWrapperMetadata
NEKICSWrapper
SYChange
NSObject
EventKitSync
NEKEnvironment
NEKCalendarWrapper
NDTResultsPipe
NEKPBSourceID
NSCopying
NDTSQException
NDTSQFile
NSCacheDelegate
NDTTimedCache
NEKPBCalendarWrapper
NEKPBCalendarAttributes
NEKTinyStore
NDTMessage
NDTMessaging
IDSServiceDelegate
NDTSQKeyValueStore
_NEKRecordMapImpl
_NEKRecordMapSqliteRecord
_NEKRecordMapSqliteImpl
_NEKSyncSet
NEKEventStore
NEKPreferencesObserver
NDTCrashSynthesizer
NEKRPCEndpoint
NEKDeletionWrapper
NEKDaemon
KeepItSimple
NEKSyncWindow
NDTLogFacility
NDTLog
NEKMutatorXPCEndpoint
NEKRemoteMutatorDaemonInterface
NEKMutatorListener
NSXPCListenerDelegate
NEKRecordMap
NEKPBSetReminderComplete
NEKCalendarID
NEKPBSourceAttributes
NEKStatusReporterEndpoint
NEKStatusReporterProtocol
NEKStatusReporter
NEKDatabaseFileManager
NEKSeenMap
NEKSyncController
NEKChangeObserverDelegate
SYServiceDelegate
NDTSQStatement
NEKChangeSet
NEKPBProtoBuffMessage
NEKSourceWrapper
NEKCalendarAttributes
NEKSyncSession
SYSessionDelegate
NEKSyncCoordinator
NEKSourceID
NEKPBCalendarIdentifier
NEKPBICSWrapperMetadata
NDTPerf
NEKPBSetAlarmSnooze
NEKProtobufSerializer
SYChangeSerializer
NEKChangeObserver
NEKPBICSWrapper
NEKSourceAttributes
NDTSQSchema
NEKResultsPipe
NEKPBDeleteEvent
NEKPBDeletionWrapper
NEKPBSetParticipantStatus
NEKPBSourceWrapper
@8@0:4
v8@0:4
I8@0:4
v12@0:4I8
v12@0:4@8
i8@0:4
v12@0:4i8
B8@0:4
v12@0:4B8
@"NSString"
@20@0:4@8@12@16
v32@0:4@8@12@16@20@24@28
v20@0:4@8@12@16
v36@0:4@8@12@16B20@24@28@32
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
@12@0:4@8
v16@0:4@8@12
v16@0:4B8@12
v16@0:4I8@12
v16@0:4i8@12
i12@0:4@8
v12@0:4@?8
I12@0:4@8
d8@0:4
v16@0:4d8
q8@0:4
v16@0:4q8
@"NSData"
@"NEKCalendarID"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_queue>"
@"NEKDatabaseFileManager"
@"NEKTinyStore"
@"NEKRecordMap"
@"NEKSeenMap"
@"NEKSyncController"
@"NEKSyncCoordinator"
@"NEKDaemon"
@16@0:4@8B12
@"NEKSourceID"
@"NEKCalendarAttributes"
@12@0:4i8
@"NSError"
@"NSArray"
@"NSMutableArray"
@"NSObject<OS_dispatch_semaphore>"
@12@0:4^{_NSZone=}8
{?="isLocalStore"b1}
v16@0:4@"NSCache"8@12
v16@0:4@8@?12
v16@0:4@8i12
^{sqlite3=}8@0:4
v12@0:4^{sqlite3=}8
@"NSObject<OS_dispatch_source>"
@"NSCache"
@"NDTSQKeyValueStore"
@"NSHashTable"
^{sqlite3=}
@"<NDTSQFileDelegate>"
@16@0:4d8
@?8@0:4
@"NEKPBCalendarAttributes"
@"NEKPBSourceID"
{?="isDefaultEventCalendar"b1"isDefaultTaskCalendar"b1}
v16@0:4Q8
Q8@0:4
{?="invitationStatus"b1"sharingInvitationResponse"b1"sharingStatus"b1"supportedEntityTypes"b1"displayOrder"b1"canBePublished"b1"canBeShared"b1"hasBeenAlerted"b1"isDefaultCalendarForStore"b1"isFamilyCalendar"b1"isHidden"b1"isHolidayCalendar"b1"isIgnoringEventAlerts"b1"isIgnoringSharedCalendarNotifications"b1"isImmutable"b1"isInbox"b1"isNotificationsCollection"b1"isPublished"b1"isReadonly"b1"isSchedulingProhibited"b1"isSharingInvitation"b1"isSubscribed"b1}
@16@0:4@8@12
i16@0:4@8i12
v20@0:4d8@16
d20@0:4@8d12
v28@0:4@8@12@16@20@24
v28@0:4@8@12@16B20@24
v32@0:4@8@12@16B20@24@28
v28@0:4@8@12@16i20i24
v24@0:4@8@12@16@20
v20@0:4@8@12@?16
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16i20i24
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@"NSString"20@24
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v20@0:4@"IDSService"8@"IDSAccount"12@"IDSGroupSessionParticipantUpdate"16
v12@0:4@"IDSService"8
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
@24@0:4@8@12@16^@20
v20@0:4@8@?12@?16
@"IDSService"
@"NDTLogFacility"
@"NSDictionary"
B12@0:4^@8
^{sqlite3_stmt=}
@16@0:4i8@12
v20@0:4^@8^@12@16
v24@0:4@8i12@16@20
B36@0:4@8@12@16@20i24@28B32
B28@0:4@8@12@16i20@24
B20@0:4@8@12@16
B16@0:4@8@12
@"NEKEnvironment"
@"NEKChangeObserver"
@"NPSManager"
@"NPSDomainAccessor"
@"EKPreferences"
v24@0:4i8i12@16@20
v40@0:4@8@12d16@24@28@32i36
v24@0:4B8@12@16@20
v32@0:4d8@16@20@24@28
B24@0:4@8@12d16
@"NEKEventStore"
@"NDTMessaging"
@20@0:4@8@12i16
@"NEKPreferencesObserver"
@"NDTSQFile"
@16@0:4B8@12
B16@0:4d8
@"NSDate"
@"NSTimeZone"
@"NSObject<OS_os_log>"
v24@0:4i8i12@"NSString"16@"NSString"20
v40@0:4@"NSString"8@"NSString"12d16@"NSString"24@"NSString"28@"NSString"32i36
v24@0:4B8@"NSString"12@"NSString"16@"NSString"20
v32@0:4d8@"NSString"16@"NSString"20@"NSString"24@"NSString"28
@"NSXPCConnection"
@"NEKRPCEndpoint"
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
@"NSXPCListener"
@"_NEKRecordMapImpl"
{?="isComplete"b1}
{?="defaultAlarmOffset"b1"type"b1"allowsCalendarAddDeleteModify"b1"allowsEvents"b1"allowsTasks"b1"isEnabled"b1"isFacebook"b1"isLocalStore"b1"onlyCreatorCanModify"b1"snoozeAlarmRequiresDetach"b1"supportsAlarmAcknowledgedDate"b1"supportsSharedCalendars"b1"usesSelfAttendee"b1}
v12@0:4@?<v@?B>8
v12@0:4@"NEKChangeObserver"8
B20@0:4@8@12^@16
v24@0:4@8@12@16@?20
v16@0:4@8B12
B20@0:4@"SYService"8@"SYSession"12^@16
v20@0:4@"SYService"8@"SYSession"12@"NSError"16
v20@0:4@"SYService"8@"NSData"12@?<v@?B@"NSError">16
v24@0:4@"SYService"8@"NSInputStream"12@"NSDictionary"16@?<v@?B@"NSError">20
v20@0:4@"SYService"8@"NSError"12@"NSDictionary"16
@"SYSession"20@0:4@"SYService"8@"SYSession"12@"SYSession"16
v20@0:4@"SYService"8@"NSUUID"12@"NSUUID"16
v16@0:4@"SYService"8B12
v12@0:4@"SYService"8
d12@0:4i8
@"SYService"
@"NEKSyncSession"
@"NEKMutatorListener"
@"NEKStatusReporter"
@"<NEKSyncControllerDelegate>"
i12@0:4i8
i16@0:4Q8
i16@0:4d8
v12@0:4^{sqlite3_stmt=}8
^{sqlite3_stmt=}8@0:4
@32@0:4@8@12@16@20q24
v20@0:4i8#12@?16
@"EKEventStore"
@"NEKPBCalendarWrapper"
@"NEKPBDeleteEvent"
@"NEKPBDeletionWrapper"
@"NEKPBICSWrapper"
@"NEKPBSetAlarmSnooze"
@"NEKPBSetParticipantStatus"
@"NEKPBSetReminderComplete"
@"NEKPBSourceWrapper"
{?="packetNumber"b1}
@"NEKSourceAttributes"
@"NSURL"
i20@0:4@8@?12^@16
B16@0:4@8^@12
i20@0:4@"SYSession"8@?<B@?@"<SYChange>">12^@16
v20@0:4@"SYSession"8@"NSArray"12@?<v@?B@"NSError">16
v16@0:4@"SYSession"8@"NSError"12
B16@0:4@"SYSession"8^@12
v16@0:4@"SYSession"8@?<v@?B@"NSError">12
v16@0:4@"SYSession"8@"NSSet"12
^{ct_green_tea_logger_s=}
@"NEKResultsPipe"
@"NEKProgressLiar"
@"PSYServiceSyncSession"
{?="isDefaultLocalCalendar"b1}
{?="attendeeStatus"b1"entityType"b1"invitationStatus"b1"locationPredictionState"b1"invitationChangedPropertyFlagAttendeeComment"b1"invitationChangedPropertyFlagAttendeeStatus"b1"invitationChangedPropertyFlagDate"b1"invitationChangedPropertyFlagLocation"b1"invitationChangedPropertyFlagTime"b1"invitationChangedPropertyFlagTitle"b1}
{?="snoozeAmount"b1}
@16@0:4@8i12
@20@0:4@8i12i16
@"NSData"12@0:4@"<SYChange>"8
@"<SYChange>"16@0:4@"NSData"8i12
@"NSData"12@0:4@"<SYObject>"8
@"<SYObject>"12@0:4@"NSData"8
@"NSData"16@0:4@"<SYChange>"8i12
@"<SYChange>"20@0:4@"NSData"8i12i16
@12@0:4^i8
B20@0:4@8i12@16
v20@0:4q8@16
@"NSTimer"
@"<NEKChangeObserverDelegate>"
@12@0:4I8
@"NEKPBCalendarIdentifier"
{?="displayOrder"b1"taskCompletionDate"b1"calendarItemCount"b1}
v20@0:4I8@12@16
@"NSNumber"
{?="eventStart"b1"span"b1}
{?="type"b1}
{?="span"b1"status"b1}
@"NEKPBSourceAttributes"
Entity with identifier %{public}@ is detached, master identifier is %@
Entity with identifier %{public}@ is detached, but can't get master
Entity with identifier %{public}@ is master for a recurring series
Read in location for a reminder
Handling detached event with identifier %{public}@
Done handling detached event with identifier %{public}@, count=%d
Adding ICS to wrapper to send: %{public}@
self attendee email = %{public}@, uuid = %{public}@, status = %d for event with identifier %{public}@
organizer is self: email = %{public}@, uuid = %{public}@ for event with identifier %{public}@
saving externalID %{public}@ in metadata for event with identifier %{public}@
No externalID for event with identifier %{public}@
self attendee status is 0x%08x for event with identifier %{public}@
Setting task with identifier %{public}@ as completed, completion date is %{public}@
Can't create canonical unique identifier for event %{public}@. Identifier returned by CalCalendarItemCopyUniqueIdentifier is %{public}@
Created canonical unique identifier %{public}@ for event %{public}@ with value from CalCalendarItemCopyUniqueIdentifier %{public}@
Can't create canonical unique identifier for event %{public}@. Original event has no unique identifier %{public}@
Error serializing out plist: %{public}@
Error writing out plist
dataWithContentsOfFile gave us nothing
propertyListWithData gave us nothing. Error: %{public}@
_rawSendData assigned IDS identifier: %@
_rawSendData has an error: %{public}@
_rawSendFile assigned IDS identifier: %@
_rawSendFile has an error: %{public}@
No identifier returned. Error: %{public}@
Incoming reply message but no handler registered.
Can't find a handler for this message
didSend:%c IDS id: %{public}@, error: %{public}@
Sqlite create failed, path: %{public}@, error: (%d)
SQL not understood: %s
setIdentifier: passed invalid parameters.
setIdentifier_update:%{public}@ forRecordID: %{public}@
setIdentifier_insert:%{public}@ forRecordID: %{public}@
setIdentifier: Error inserting/updating data into record map: %d
deleteIdentifierForRecordID:%{public}@
deleteIdentifierForRecordID: Error deleting record: %d
%{public}s:%d %s --mark--
NEKRecordMap removeAllRecords
Memory delta from save: %lld #perf
Database save time: %fs #perf
Error saving EventKit database: %{public}@
Database changes saved successfully
Error deleting future events in calendar purge: %{public}@
Error deleting single event in calendar purge: %{public}@
Error deleting reminder in calendar purge: %{public}@
%{public}@
Marking default task calendar in wrapper to calendar with name %{public}@, identifier %{public}@
Marking default event calendar in wrapper to calendar with name %{public}@, identifier %{public}@
publicObjectWithObjectID returned nil. ObjectID: %{public}@
Reading events
Entity with summary "%{public}@" and identifier %{public}@ is a phantom master.  Ignoring.
Entity with summary "%{public}@" and identifier %{public}@ is detached, master identifier is %{public}@
Entity with summary "%{public}@" and identifier %{public}@ is detached, but can't get master, so using the actual detached event
No calendar for event with summary "%{public}@" and identifier %{public}@, event won't be tracked for sending duplicates, but we'll soldier on and likely fail somewhere later down the line.
Calendar identifier is nil for event "%{public}@/%{public}@". This is probably very bad.
Entity with summary "%{public}@" and identifier %{public}@ already in set for calendar with identifier %{public}@, not sending again
Entity with summary "%{public}@" and identifier %{public}@ not in set for calendar with identifier %{public}@, adding
Selecting reminder "%{public}@"
Completion: %{public}@
Create or update source: %{public}@
Saving after updating a source (%{public}@) failed: %{public}@
Updated source (%{public}@) saved successfully.
Saving after creating a source (%{public}@) failed: %{public}@
New source (%{public}@) saved successfully.
Received source wrapper that I'm not sure how to process: %{public}@
Error saving new/updated source (%{public}@): %{public}@
Create or update calendar: %{public}@
Error saving updated calendar (%{public}@): %{public}@
Error saving new calendar (%{public}@): %{public}@
%{public}s: Ignoring sidecar data for phantom master with identifier: [%{public}@]
Handling updated event from gizmo with summary "%{public}@" and identifier %{public}@
Set self attendee status to 0x%08x for event with identifier %{public}@
Set invitation status to none for event with identifier %{public}@
Error saving database while setting event invitation status: %{public}@
No need to set attendee status, synced value is the same as existing value: 0x%08x for event with identifier %{public}@
Handling updated task from gizmo with summary "%{public}@" and identifier %{public}@
Task with identifier %{public}@ is completed, completion date is %{public}@
Saved event with identifier %{public}@, externalID is %{public}@
Failed to save event with identifier %{public}@. Error =  %{public}@
Participant status did not change. No need to save event with identifier %{public}@, externalID is %{public}@
Handling updated master event from gizmo with participationStatus %d, summary "%{public}@", and identifier %{public}@
Can't get row id for master with identifier %{public}@ to set attendee status for recurring series
Checking for calendar match for event %{public}@ with identifier %{public}@
Checking for match on calendar, we want %{public}@, calendarIdentifier is %{public}@
Handling master event from gizmo with participation status %d, summary "%{public}@", and identifier %{public}@
Couldn't get master event for recurring event sequence with identifier %{public}@, but we'll check for detached events in case those are still around
Using existing detached event
Grabbing recurrence to use for detached event
Handling updated detached event from gizmo with participation status %d, summary "%{public}@", and identifier %{public}@.
Failed to get/create event with identifier %{public}@ to set attendee status %d, skipping event
Failed to commit after saving recurring event series with master identifier %{public}@. Error =  %{public}@
Found event with identifer %{public}@ but in the wrong calendar.
%{public}s: No calendar item with identifier %{public}@ in calendar with identifier %{public}@
performUpdateWithICSWrappers received %d items
Received ICS wrapper: %{public}@
recv: %{public}@
Calendar %{public}@ does not exist, aborting
Processing update from the watch, main identifier is %{public}@
Cannot find object of type %d to update.
No calendar item found for main event in recurring series with identifier %{public}@ in calendar with identifier %{public}@
Processing add/update from companion, or a new record from the watch
Error deleting event for identifier remap: %{public}@
Item ID remapping complete: %{public}@ => %{public}@
Got an update/add for calendar item, old calendar id = %{public}@, current calendar id = %{public}@
Calendars don't match, so deleting from old calendar: old calendar id = %{public}@, current calendar id = %{public}@
Calendars match, so event didn't move: old calendar id = %{public}@, current calendar id = %{public}@
Got an update/add for event "%{public}@", no old calendar id was sent, so this is from an old record map and falling back to old code to check and delete from any old calendar. The current calendar id = %{public}@
ICS Import: %fs #perf
We have a recurring event with summary "%{public}@" and identifier %{public}@, checking to see if any detached events need attention
Handling detached event with summary "%{public}@" and identifier %{public}@
We have a recurring event with summary "%{public}@" and identifier %{public}@, deleting all detached events too, since they have also moved calendars
Deleting detached event from old calendar since it has moved. Event summary "%{public}@", identifier %{public}@
No calendar for calendar identifier %{public}@
Skipping deletion for event with identifier %{public}@ in calendar with identifier %{public}@, we already detected and deleted it as part of a recurring master's detached events
Found no matches for potential deletion of calendar item %{public}@
Found multiple matches for potential deletion of calendar item %{public}@
Error deleting item: %{public}@
we are considering a notification for invitations for event with identifier %{public}@, attendeeStatus: %d
We've concluded this event needs a response, so set invitation status to unalerted (%d) for event with identifier %{public}@
setting externalID %{public}@ for event with identifier %{public}@
No externalID in metadata for event with identifier %{public}@
Changed date changed flag to %d for event %{public}@
Changed time changed flag to %d for event %{public}@
Changed title changed flag to %d for event %{public}@
Changed location changed flag to %d for event %{public}@
Changed attendee comment changed flag to %d for event %{public}@
Changed attendee status changed flag to %d for event %{public}@
Setting location prediction state to %d for event %{public}@
Error saving event in applySidePropertiesToEntity: %{public}@
Self attendee email is %{public}@, and uuid is %{public}@ for event with identifier %{public}@
Found self attendee for event with identifier %{public}@, email = %{public}@, address = %{public}@
No self attendee email in wrapper for event with identifier %{public}@
Determined user is organizer for event with identifier %{public}@, email = %{public}@, address = %{public}@
Setting invitation status %{public}@ for event with identifier %{public}@
No invitation status in wrapper for event with identifier %{public}@
Surreptitiously adding event to changeset: %{public}@ due to attendee change
CalendarID remap detected: %{public}@ => %{public}@
Could not create calendar wrapper for entity: %{public}@
CalendarItem remap detected: %{public}@ => %{public}@
Decided not to send %{public}@
publicObjectWithObjectID returned nil, objectID: %{public}@
Event %{public}@ returned a unique id of nil.
Deletion wrapper: %@
Could not create deletion wrapper for recordID: %{public}@
Attempt to create wrapper for unknown type: %{public}@
Entity with summary "%{public}@" and identifier %{public}@ is detached, but has no master. Skipping adding to table
Error committing record map: %{public}@
Error deleting source with identifier %{public}@
Deleted source with identifier %{public}@
Cannot delete source; no source exists for %{public}@
Error deleting calendar with identifier %{public}@
Deleted calendar with identifier %{public}@
Cannot delete; no calendar exists for %{public}@
Deleting event with identifier %{public}@, recordID %{public}@
Error deleting event %{public}@
Deleting event with identifier %{public}@, from calendar with identifier %{public}@
Deleting event with identifier %{public}@, from any calendar, old mapping didn't send calendar to delete from so falling back to old code
Deleting event %{public}@ failed as we were not handed an event by the store.
No event exists for %{public}@
Failure to delete reminder: %{public}@
No reminder exists for %{public}@
Setting default task calendar to calendar with name %{public}@, identifier %{public}@
Setting default event calendar to calendar with name %{public}@, identifier %{public}@
Updating calendar with title %{public}@, identifier %{public}@
Source not found with sourceID: %@
Created calendar with title %{public}@, identifier %{public}@
Asked to set a nonexistent calendar as the default. Ignoring. Calendar identifier = %{public}@, store identifier = %{public}@
Failure deleting source "%{public}@", %{public}@
Error deleting calendar "%@": %{public}@
Error removing event: %{public}@
Error deleting reminder: %{public}@
Sent setParticipantStatus message, identifier: %@
Send failed.
Sent deleteEvent message, identifier: %@
Sent setCompleted message, identifier: %@
Sent setReminderSnooze message, identifier: %@
Sent setEventSnooze message, identifier: %@
Called on watch.
Called with nil recordID or nil event store
Failure to initialize SQL log: %@, userInfo: %@
Started EventKitSync_Sim-231.17
Pre prefs observer init
Post prefs observer init
NEKSyncController NOT started.
Beginning XPC transaction for com.apple.notifyd.matching notification named %{public}@
Launched from IDS
Triggering full sync for testing notification %{public}@
Class C locked, full sync request ignored
Thinking about a migration sync.
SignificantTimeChange incremental sync
SignificantTimeChange ignored
Calling pref observer for notification: %{public}@
Ending XPC transaction for com.apple.notifyd.matching notification named %{public}@
Registered for notifications.
Retry: fetched XPC_ACTIVITY_STATE: %d
Retry: Cannot set XPC_ACTIVITY_STATE to continue.
Registered for XPC activities. All the fun ones, anyway.
Received full sync command from NEKSyncCoordinator.
Prefs synced. Starting sync controller.
Received reunion sync command.
Asked for incremental sync window when there was no previous sync window data
Someone asked us if an instance of an unrecognized class %{public}@ is in the sync window.
storeID: %@ eventID: %@
calendar: '%{public}@' reminder: '%{public}@' externalId: %@
time:%.1f calendar: '%{public}@' reminder: '%{public}@' externalId: %@
time:%.1f calendar: '%{public}@' storeId: %@ eventID: %@
Delete for storeId: %@ calendarId: %@ eventId: %@
Returning suggested db path: %@
Sqlite create failed, path: %s, error: (%d)
Sqlite statement prepare failed for "%{public}s"
Starting NEKSyncController
Failed to resume SYService: %{public}@
Enqueueing a full sync
Enqueueing a delta reunion sync
Reunion sync with faults- Forcing full sync
Remove all items
Retrying a failed sync (%d) (delta)
object is not of recognized class: %{public}@
Got a deletion wrapper from SYStore: %{public}@
passed weird class: %{public}@
startSession-mark-#perf
startSession %{public}@ %{public}@ session: %{public}@
Delta sync fired but it really wants to be a reset sync.
Change set was empty, not starting a sync session.
Second check of change set was empty, not starting a sync session.
Change count: %d, rate estimate: %f
Comically long session timeouts enabled!
Session timeout: %f
Scheduling retry sync in %f seconds
sessionEnded-mark-#perf
Session is nil
service.currentSession is nil, clearing user session.
Current session [%{public}@] != ending session [%{public}@]. Error: %{public}@ Dropping notificaiton on floor.
sessionEnded %{public}@ session: %{public}@
Send complete with error: %{public}@
Sync failed.
There was a sync error%{public}@.
Failed session was a %{public}s so setting up retry to be a reset.
UserCancelled error, retry should already be scheduled.
LostCollisionTest error, retry should already be scheduled.
Looks like I didn't schedule  retry. That's bad.
Following nightly sync with request for delta
Computed rate: %f
New estimated rates: full %f, delta %f
Recv complete with error: %{public}@
Resuming SYService on device-paired returned (possibly benign) error: %{public}@
Poking CS for delta sync
Delta sync requested but we have too many retries. Ignoring request.
Poking CS for nightly sync
Nightly sync requested but we have faults. Ignoring request.
Poking CS for full sync
Requested migration sync
Migration number is fine, no migration sync needed.
Migration check dropped as we haven't heard from the phone yet.
For %{public}@ we are sending attendee stats (ek %d, wire %d)
For %{public}@ setting attendee status to (wire %d, ek %d)
Checking to see if calendar with title %{public}@ identifier %{public}@ and syncToken %{public}@ and externalModificationTag %{public}@ and externalIdentificationTag %{public}@ has changed. New syncToken and externalModificationTag and externalIdentificationTag are %{public}@ and %{public}@ and %{public}@
No changes for calendar with title %{public}@, identifier %{public}@
_calendarPropertyIsEqualToAttributeProperty: Calendar and attributes property %{public}@ are different: (calendar) %{public}@ != (attributes) %{public}@
Enqueued last change.
Sending events
Applying changes
Sync disabled. Dropping changes on floor.
Chunk perf data: %{public}@ #perf
Memory consumed by change: %lld #perf
Dirty memory limit hit, saving.
Calling sync session completion.
Sync disabled. Ignoring reset request.
Sync request supressed as we haven't heard from the phone
dataWithSYChange: serializing object of class: %@ S_PKT_NUM:%u
Sending reminder with location
SYChangeWithData - unrecognized type: %{public}@
SYChangeWithData: returning object of type: %{public}@ R_PKT_NUM:%u
Could not create wrapper object
Registered for change tracking, seqNo: %d
Ignoring delta sync request as sync coordinator says it is not time.
Sync attempt deferred as dataaccess is busy.
Sync attempt ignored as there are no pending changes.
Reverting database for external change.
Timed out trying to fetch changes from database.
Previous sequence number: %d, current sequence number: %d
Change log numbers went backward, forcing full sync
Change log truncated
Changed default task calendar
Changed default event calendar
Updates is NULL. This shouldn't happen.
Change set is empty.
fetchChanges: Timeout out waiting for database to respond.
It's kinda weird but I'm rolling the changelog sequence number back.
Moved stored change number from %d to %d
Setting anchor sequence number: %d
SYNCING IS NOW VERBOTEN! VERBOTEN!
SYNCING IS NOW fine. Just fine.
%{public}s%{public}@, %{public}@, %{public}@, %{public}@
%{public}s%{public}@
%{public}s%{public}@, %{public}@
%{public}s%{public}@, %{public}@, %{public}@
--empty--
Performing a priori deletion of calendar %{public}@
Deletion of calendar %{public}@ didn't go so well: %{public}@
Error committing store after preemptive deletion of calendars: %{public}@
Successful save after deleting very suspicious calendars.
Starting configuration of source with persistent ID: [%{public}@].
Source's 'name' has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'defaultAlarmOffset' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'type' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'enabled' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's '%@' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'usesSelfAttendee' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'constraintsDescriptionPath' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'externalID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'externalModificationTag' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'creatorBundleID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'creatorCodeSigningIdentity' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'accountPersistentID' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'supportsSharedCalendars' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'allowsTasks' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'allowsEvents' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'allowsCalendarAddDeleteModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'onlyCreatorCanModify' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'snoozeAlarmRequiresDetach' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Source's 'supportsAlarmAcknowledgedDate' property has changed from [%@] to [%@].  Source's persistent ID: [%{public}@]
Completed configuration of source with persistent ID: [%{public}@].
Compressed ICS %d->%d (%%%f)
Aborting ICS decompression: %{public}s
SignalHandler, SIGTERM/SIGQUIT
Manually triggered state dump
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.nano.nanoregistry</key>
<true/>
<key>com.apple.private.calendar.changeIdTrackingOverride</key>
<true/>
<key>com.apple.private.calendar.syncclient</key>
<true/>
<key>com.apple.private.calendar.watchos-mutable-database</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.eventkitmutation</string>
<string>com.apple.private.alloy.eventkitsync</string>
</array>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceCalendar</string>
<string>kTCCServiceReminders</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
