%@ %@
requestUUIDString
assertionType
pending
-[NPKProtoAssertionRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoAssertionRequest.m
nil != self->_requestUUIDString
T@"NSString",&,N,V_requestUUIDString
hasAssertionType
TB,N
Ti,N,V_assertionType
hasPending
TB,N,V_pending
Unknown
Provisioning
(unknown: %i)
uniqueID
hasUniqueID
TB,R,N
T@"NSString",&,N,V_uniqueID
passRelevancyTuples
T@"NSMutableArray",&,N,V_passRelevancyTuples
transactionsBytes
transactionPassIDs
T@"NSMutableArray",&,N,V_transactionsBytes
T@"NSMutableArray",&,N,V_transactionPassIDs
catalogData
-[NPKProtoCatalog writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoCatalog.m
nil != self->_catalogData
T@"NSData",&,N,V_catalogData
com.apple.nanopassd.passsync
com.apple.private.alloy.passbook.general
v4@?0
passSettings-%@
v8@?0@"NSError"4
passCatalog
v12@?0@"NPKProtoPassSyncStateChange"4@"NSString"8
passSyncStateChange-%u
v16@?0@"NSData"4I8^B12
passSyncStateChange
passSyncStateChangeProcessed
passSyncReconciledStateUnrecognized
TI,R
T#,R
debugDescription
passSyncEngine
T@"NPKPassSyncEngine",&,N,V_passSyncEngine
passSyncService
T@"IDSService",&,N,V_passSyncService
passSyncQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_passSyncQueue
passSyncEngineArchiveTimer
T@"NSObject<OS_dispatch_source>",&,N,V_passSyncEngineArchiveTimer
passSyncEngineSyncTimer
T@"NSObject<OS_dispatch_source>",&,N,V_passSyncEngineSyncTimer
passSyncEngineSyncTimerCandidateChange
T@"NPKPassSyncChange",&,N,V_passSyncEngineSyncTimerCandidateChange
passSyncEngineSyncTimerProcessingChange
T@"NPKPassSyncChange",&,N,V_passSyncEngineSyncTimerProcessingChange
dropAllMessages
TB,N,V_dropAllMessages
needsRelevancyInformation
TB,N,V_needsRelevancyInformation
com.apple.NanoPassbook.NPKLibrary.NPKLibraryDisplayedRelevantPassesDidChangeNotification
success
actualExpressPassInformation
currentExpressPasseInformation
hasSuccess
TB,N,V_success
hasActualExpressPassInformation
T@"NSData",&,N,V_actualExpressPassInformation
currentExpressPasseInformations
T@"NSMutableArray",&,N,V_currentExpressPasseInformations
configurationDataBytes
hasConfigurationDataBytes
T@"NSData",&,N,V_configurationDataBytes
seid
command
infoDictionary
-[NPKProtoRemoteAdminPerformRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoRemoteAdminPerformRequest.m
nil != self->_url
nil != self->_seid
nil != self->_command
T@"NSData",&,N,V_url
T@"NSString",&,N,V_seid
T@"NSString",&,N,V_command
hasInfoDictionary
T@"NSData",&,N,V_infoDictionary
availableProductsData
errorData
hasAvailableProductsData
T@"NSData",&,N,V_availableProductsData
hasErrorData
T@"NSData",&,N,V_errorData
TransitValuePending
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/PKPass+NanoPassKit.m
date
amount
balance
npkSupportsHidingAccessory
TB,R
npkWatchBarcode
T@"PKBarcode",R
npkExpired
npkCompleteHash
T@"NSData",R
hasLogoImageSet
npkHasValidNFCPayload
B12@?0@"PKPaymentApplication"4@"NSDictionary"8
i12@?0@"PKPaymentApplication"4@"PKPaymentApplication"8
v12@?0@"PKPaymentApplication"4^B8
{length = %lu, bytes = 0x
... 
peerPaymentWebServiceContextData
peerPaymentAccountData
hasPeerPaymentWebServiceContextData
T@"NSData",&,N,V_peerPaymentWebServiceContextData
hasPeerPaymentAccountData
T@"NSData",&,N,V_peerPaymentAccountData
UniqueID
RelevantText
NPKRelevantPassesRequestDistributedNotification
NPKRelevantTransitNotifictionsCheckDistributedNotification
NPKRelevantPassesDistributedNotification
tuples
npkRelevancyUniqueID
T@"NSString",R
npkRelevancyRelevantText
v16@?0@"NSDictionary"4I8^B12
NPKPeerPaymentStatusUnknown
NPKPeerPaymentStatusExpired
NPKPeerPaymentStatusRejected
NPKPeerPaymentStatusComplete
NPKPeerPaymentStatusPending
NPKPeerPaymentStatusFailed
NPKPeerPaymentStatusAccepting
NPKPeerPaymentStatusCancelled
NPKPeerPaymentStatusCanceling
NPKPeerPaymentStatusNeedAccept
NPKPeerPaymentStatusDisabled
NPKUserPreferenceTransactionsStatus
kNPKIgnoreUserPreferenceTransactionsStatus
serviceURL
forceReRegistration
hasServiceURL
T@"NSString",&,N,V_serviceURL
hasForceReRegistration
TB,N,V_forceReRegistration
webServiceContextBytes
hasWebServiceContextBytes
T@"NSData",&,N,V_webServiceContextBytes
pushToken
hasPushToken
T@"NSString",&,N,V_pushToken
proposedReconciledState
hasProposedReconciledState
T@"NPKProtoPassSyncState",&,N,V_proposedReconciledState
Currency
CurrencyType
CurrencyValue
supportedCurrencyCodes
T@"NSSet",R,N,V_supportedCurrencyCodes
allowedPayloadIDs
T@"NSSet",R,N,V_allowedPayloadIDs
actualExpressPassInformations
T@"NSMutableArray",&,N,V_actualExpressPassInformations
dataToSign
digestToSign
entanglementMode
hasDataToSign
T@"NSData",&,N,V_dataToSign
hasDigestToSign
T@"NSData",&,N,V_digestToSign
hasEntanglementMode
Ti,N,V_entanglementMode
hasAid
T@"NSString",&,N,V_aid
PlatformIdentifier
JCOPInfo
_internal
passTypeIdentifier
-[NPKProtoUpdatePaymentPassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoUpdatePaymentPassRequest.m
nil != self->_passTypeIdentifier
T@"NSString",&,N,V_passTypeIdentifier
isAvailable
hasIsAvailable
TB,N,V_isAvailable
com.apple.NanoPassbookDataUsageREsolver
cellular-data
green-tea
internalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
currentlyResolving
TB,N,V_currentlyResolving
passData
-[NPKProtoGizmoInitiatedAddPassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoGizmoInitiatedAddPassRequest.m
nil != self->_passData
T@"NSData",&,N,V_passData
NPKQuickPaymentSessionSource
com.apple.fake-payment-activation
v8@?0i4
productsActionData
hasProductsActionData
T@"NSData",&,N,V_productsActionData
passSyncStateItems
T@"NSMutableArray",&,N,V_passSyncStateItems
expectedHash
uniqueIDs
manifestHashes
fullResyncNeeded
resyncID
hasExpectedHash
T@"NPKProtoHash",&,N,V_expectedHash
T@"NSMutableArray",&,N,V_uniqueIDs
T@"NSMutableArray",&,N,V_manifestHashes
hasFullResyncNeeded
TB,N,V_fullResyncNeeded
hasResyncID
TI,N,V_resyncID
cryptogram
challengeResponse
hasCryptogram
T@"NSData",&,N,V_cryptogram
hasChallengeResponse
T@"NSData",&,N,V_challengeResponse
(%@ outgoingResponseIdentifier %@ incomingResponseIdentifier %@ expectsPeerResponse %d)
%@, <%p> type %d isResponse %d context %@ length %lu
v16@?0B4@"NSError"8@"NSArray"12
v12@?0@"PKPaymentRequirementsResponse"4@"NSError"8
v12@?0@"PKPaymentEligibilityResponse"4@"NSError"8
v12@?0@"PKPaymentPass"4@"NSError"8
<none>
webService
T@"PKPaymentWebService",&,N,V_webService
provisioningController
T@"PKPaymentProvisioningController",&,N,V_provisioningController
currentStep
TI,N,V_currentStep
fieldsModel
T@"PKPaymentSetupFieldsModel",&,N,V_fieldsModel
delegate
T@"<NPKPaymentProvisioningFlowControllerDelegate>",W,N,V_delegate
NPKPaymentProvisioningFlowStepInitialized
NPKPaymentProvisioningFlowStepPreconditions
NPKPaymentProvisioningFlowStepWelcome
NPKPaymentProvisioningFlowStepRemoteCredentials
NPKPaymentProvisioningFlowStepManualEntry
NPKPaymentProvisioningFlowStepSecondaryManualEntry
NPKPaymentProvisioningFlowStepTermsAndConditions
NPKPaymentProvisioningFlowStepProvisioningProgress
NPKPaymentProvisioningFlowStepProvisioningResult
unknown
service
T@"IDSService",&,N,V_service
pendingStatusProtobuf
T@"IDSProtobuf",&,N,V_pendingStatusProtobuf
messagePriority
Ti,N,V_messagePriority
responseIdentifier
T@"NSString",C,N,V_responseIdentifier
statusTimer
T@"NSObject<OS_dispatch_source>",&,N,V_statusTimer
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
sendOptions
T@"NSDictionary",&,N,V_sendOptions
updatesSent
TI,N,V_updatesSent
maxUpdates
TI,N,V_maxUpdates
authToken
hasAuthToken
T@"NSString",&,N,V_authToken
passID
preferredApplicationAID
hasPassID
T@"NSString",&,N,V_passID
hasPreferredApplicationAID
T@"NSString",&,N,V_preferredApplicationAID
registrationDataBytes
hasRegistrationDataBytes
T@"NSData",&,N,V_registrationDataBytes
groupID
manifestHash
style
relevantDate
ingestionDate
logoText
backgroundColor
foregroundColor
labelColor
devicePaymentApplications
devicePrimaryPaymentApplication
devicePrimaryContactlessPaymentApplication
devicePrimaryInAppPaymentApplication
preferredPaymentApplication
effectivePaymentApplicationState
privateLabel
cobranded
deletePending
hasUserSelectablePaymentApplications
logoImageEncoded
backgroundImageEncoded
localizedDescription
nfcPayload
completeHash
hasStoredValue
settings
issuerCountryCode
availableActions
organizationName
felicaTransitAppletState
frontFieldBuckets
backFieldBuckets
lastAddValueAmount
pendingAddValueDate
expressPassTypesMask
hasAssociatedPeerPaymentAccount
<%@> (uniqueID %@ groupID %@ passTypeIdentifier %@ manifestHash %@ style %d relevantDate %@ ingestionDate %@ logoText %@ logoImage %@ logoImageEncoded %p backgroundColor %@ foregroundColor %@ labelColor %@ backgroundImage %@ backgroundImageEncoded %p, localizedDescription %@, devicePaymentApplications (%@) devicePrimaryPaymentApplication (%@) devicePrimaryContactlessPaymentApplication (%@) devicePrimaryInAppPaymentApplication (%@) preferredPaymentApplication (%@) effectivePaymentApplicationState %d privateLabel %d cobranded %d deletePending %d hasUserSelectableContactlessPaymentApplications %d nfcPayload %@ completeHash %@ hasStoredValue %d settings %d issuerCountryCode %@ expressPassTypesMask %lu)
 (availableActions %@ organizationName %@ transitAppletState %@ frontFieldBuckets %@ backFieldBuckets %@ lastAddValueAmount %@ pendingAddValueDate %@  hasAssociatedPeerPaymentAccount %d)
supportsSecureCoding
T@"NSData",&,N,V_logoImageEncoded
T@"NSData",&,N,V_backgroundImageEncoded
lazyLoadEncodedImages
TB,N,V_lazyLoadEncodedImages
T@"NSNumber",&,N,V_groupID
T@"NSData",&,N,V_manifestHash
Ti,N,V_style
T@"NSDate",&,N,V_relevantDate
T@"NSDate",&,N,V_ingestionDate
T@"PKNFCPayload",&,N,V_nfcPayload
TB,N,V_hasStoredValue
T@"NSData",&,N,V_completeHash
TI,N,V_settings
T@"NSString",&,N,V_logoText
logoImage
T@"PKImage",&,N,V_logoImage
T@"PKColor",&,N,V_backgroundColor
T@"PKColor",&,N,V_foregroundColor
T@"PKColor",&,N,V_labelColor
backgroundImage
T@"PKImage",&,N,V_backgroundImage
T@"NSString",&,N,V_localizedDescription
T@"NSSet",&,N,V_devicePaymentApplications
T@"PKPaymentApplication",&,N,V_devicePrimaryPaymentApplication
T@"PKPaymentApplication",&,N,V_devicePrimaryContactlessPaymentApplication
T@"PKPaymentApplication",&,N,V_devicePrimaryInAppPaymentApplication
T@"PKPaymentApplication",&,N,V_preferredPaymentApplication
Ti,N,V_effectivePaymentApplicationState
TB,N,GisPrivateLabel,V_privateLabel
TB,N,GisCobranded,V_cobranded
TB,N,V_deletePending
hasUserSelectableContactlessPaymentApplications
TB,N,V_hasUserSelectableContactlessPaymentApplications
T@"NSString",&,N,V_issuerCountryCode
effectiveContactlessPaymentApplicationState
Ti,R,N
T@"NSArray",&,N,V_availableActions
T@"NSString",&,N,V_organizationName
transitAppletState
T@"PKTransitAppletState",&,N,V_transitAppletState
T@"NSArray",&,N,V_frontFieldBuckets
T@"NSArray",&,N,V_backFieldBuckets
T@"NSDecimalNumber",&,N,V_lastAddValueAmount
T@"NSDate",&,N,V_pendingAddValueDate
TB,N,V_hasAssociatedPeerPaymentAccount
TI,N,V_expressPassTypesMask
pass
libraryHash
previousManifestHash
catalog
lastKnownResyncID
syncID
-[NPKProtoUpdatePassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoUpdatePassRequest.m
self->_pass != nil
T@"NPKProtoPass",&,N,V_pass
hasLibraryHash
T@"NPKProtoHash",&,N,V_libraryHash
hasPreviousManifestHash
T@"NSData",&,N,V_previousManifestHash
hasCatalog
T@"NPKProtoCatalog",&,N,V_catalog
hasLastKnownResyncID
TI,N,V_lastKnownResyncID
hasSyncID
TI,N,V_syncID
NPKCompanionAgentDeferredActionHandler
v12@?0@"PKPaymentPass"4^B8
v16@?0@"NSUUID"4@"PKPaymentWebServiceContext"8^B12
v16@?0@"NSUUID"4@"NSArray"8^B12
v16@?0@?<v@?@"NPKCompanionAgentConnection">4I8^B12
v16@?0@"NRDevice"4I8^B12
v12@?0@"NSUUID"4^B8
deferredActions
T@"NSMutableDictionary",&,N,V_deferredActions
deferredSharedPaymentWebServiceContexts
T@"NSMutableDictionary",&,N,V_deferredSharedPaymentWebServiceContexts
deferredAddedPaymentPasses
T@"NSMutableDictionary",&,N,V_deferredAddedPaymentPasses
width
height
bitsPerComponent
bitsPerPixel
bytesPerRow
bitmapInfo
bitmapData
-[NPKProtoBitmap writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoBitmap.m
nil != self->_bitmapData
TQ,N,V_width
TQ,N,V_height
TQ,N,V_bitsPerComponent
TQ,N,V_bitsPerPixel
TQ,N,V_bytesPerRow
TI,N,V_bitmapInfo
T@"NSData",&,N,V_bitmapData
v16@?0@"PKPaymentPass"4I8^B12
B12@?0@"PKPaymentPass"4@"NSDictionary"8
com.apple.private.alloy.passbook.maintenance
com.apple.private.alloy.passbook.provisioning
DEVICE_PROVISIONING_EXCEEDED_MESSAGE
DEVICE_PROVISIONING_EXCEEDED_TITLE
v8@?0@"NSSet"4
v20@?0B4B8B12@"NSError"16
com.apple.Carousel
DisableWristDetection
v8@?0B4
WRIST_DETECT_REQUIRED_ALERT_TITLE
NanoPassKit
WRIST_DETECT_REQUIRED_ALERT_MESSAGE
WRIST_DETECT_REQUIRED_ALERT_BUTTON
bridge:root=PASSCODE_ID
GIZMO_ACCOUNT_REQUIRED_ALERT_TITLE
GIZMO_ACCOUNT_REQUIRED_ALERT_MESSAGE
GIZMO_ACCOUNT_REQUIRED_ALERT_BUTTON
bridge:root=GENERAL_LINK&path=LINK_WITH_ICLOUD_LINK
PASSCODE_REQUIRED_ALERT_TITLE
PASSCODE_REQUIRED_ALERT_MESSAGE
PASSCODE_REQUIRED_ALERT_BUTTON
UNLOCK_REQUIRED_ALERT_TITLE
UNLOCK_REQUIRED_ALERT_MESSAGE
GIZMO_UNREACHABLE_ALERT_TITLE
GIZMO_UNREACHABLE_ALERT_MESSAGE
passcodeConnection
T@"PUConnection",&,N,V_passcodeConnection
systemSettingsManager
T@"NSSManager",&,N,V_systemSettingsManager
checkedWatchPasscodeAndUnlockedStatus
TB,N,V_checkedWatchPasscodeAndUnlockedStatus
checkedCompanioniCloudStatus
TB,N,V_checkedCompanioniCloudStatus
checkedWatchiCloudStatus
TB,N,V_checkedWatchiCloudStatus
checkedWristDetectionStatus
TB,N,V_checkedWristDetectionStatus
authRandomSetIfNecessary
TB,N,V_authRandomSetIfNecessary
watchConnected
TB,N,V_watchConnected
spaceAvailableOnSecureElement
TB,N,V_spaceAvailableOnSecureElement
needsPasscode
TB,N,V_needsPasscode
needsUnlock
TB,N,V_needsUnlock
needsCompanioniCloudAccount
TB,N,V_needsCompanioniCloudAccount
needsWatchiCloudAccount
TB,N,V_needsWatchiCloudAccount
needsWristDetection
TB,N,V_needsWristDetection
preflightCompletionHandler
T@?,C,N,V_preflightCompletionHandler
companionAgentConnection
T@"NPKCompanionAgentConnection",&,N,V_companionAgentConnection
preflighting
TB,N,GisPreflighting,V_preflighting
watchPasscodeAndUnlockedQueryDate
T@"NSDate",&,N,V_watchPasscodeAndUnlockedQueryDate
PUConnection
Unable to find class %s
/System/Library/PrivateFrameworks/PairedUnlock.framework/PairedUnlock
hashData
hasHashData
T@"NSData",&,N,V_hashData
-[NPKProtoNewLibraryHashRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoNewLibraryHashRequest.m
self->_libraryHash != nil
NPKTransitAppletHistoryFetcher
aidToFetch
T@"NSString",&,N,V_aidToFetch
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"<NPKTransitAppletHistoryFetcherDelegate>",W,N,V_delegate
<%@:%p> {transitProperties:%@, balanceFields:%@
transitProperties
T@"PKTransitPassProperties",R,N,V_transitProperties
balanceFields
T@"NSArray",R,N,V_balanceFields
balanceBytes
T@"NSMutableArray",&,N,V_balanceBytes
resultCode
responseDictionary
httpStatus
TI,N,V_resultCode
hasResponseDictionary
T@"NSData",&,N,V_responseDictionary
hasHttpStatus
Ti,N,V_httpStatus
com.apple.NPKTransientPassServer
NPKTransientPassAssertionQueue
xpcConnection
T@"NSXPCConnection",&,N,V_xpcConnection
requestServiceMode
TB,N,V_requestServiceMode
updateRequestData
cancelUpdate
requestAuthoriztion
shouldNotifyUser
-[NPKProtoRemotePassUpdateRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoRemotePassUpdateRequest.m
nil != self->_passID
hasUpdateRequestData
T@"NSData",&,N,V_updateRequestData
hasCancelUpdate
TB,N,V_cancelUpdate
hasPass
hasRequestAuthoriztion
TB,N,V_requestAuthoriztion
hasShouldNotifyUser
TB,N,V_shouldNotifyUser
-[NPKProtoCatalogChangedRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoCatalogChangedRequest.m
self->_catalog != nil
passAppletStates
T@"NSMutableArray",&,N,V_passAppletStates
expressPassInformation
referenceExpressPassesInformation
hasExpressPassInformation
T@"NSData",&,N,V_expressPassInformation
referenceExpressPassesInformations
T@"NSMutableArray",&,N,V_referenceExpressPassesInformations
authRandomSet
hasAuthRandomSet
TB,N,V_authRandomSet
<%@: %p manifest %@ featured networks %@>
heroImageManifest
T@"PKPaymentHeroImageManifest",&,N,V_heroImageManifest
featuredNetworks
T@"NSArray",&,N,V_featuredNetworks
<%@: %p credentials %@ allows manual entry %d product %@>
credentials
T@"NSArray",&,N,V_credentials
allowsManualEntry
TB,N,V_allowsManualEntry
product
T@"PKPaymentSetupProduct",&,N,V_product
<%@: %p camera first provisioning enabled %d setup fields %@>
cameraFirstProvisioningEnabled
TB,N,V_cameraFirstProvisioningEnabled
setupFields
T@"NSArray",&,N,V_setupFields
<%@: %p terms URL %@ allow non-secure HTTP %d>
termsURL
T@"NSURL",&,N,V_termsURL
allowNonSecureHTTP
TB,N,V_allowNonSecureHTTP
<%@: %p card added %d error %@>
cardAdded
TB,N,V_cardAdded
error
T@"NSError",&,N,V_error
incompatible
TB,N,GisIncompatible,V_incompatible
T@"NSDate",&,N,V_date
paymentPass
T@"PKPaymentPass",&,N,V_paymentPass
paymentApplication
T@"PKPaymentApplication",&,N,V_paymentApplication
transaction
T@"PKPaymentTransaction",&,N,V_transaction
valueAddedServicePasses
T@"NSArray",&,N,V_valueAddedServicePasses
valueAddedServiceTransactions
T@"NSArray",&,N,V_valueAddedServiceTransactions
transitHistory
T@"PKTransitAppletHistory",&,N,V_transitHistory
felicaHistory
T@"PKFelicaAppletHistory",R,N,V_felicaHistory
expressState
T@"PKExpressTransactionState",&,N,V_expressState
FakePaymentSessionInternal
com.apple.NPKFakePaymentSession.TransactionComplete
ourCurrentPass
T@"PKPass",&,N,V_ourCurrentPass
ourVasPasses
T@"NSDictionary",&,N,V_ourVasPasses
ourCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_ourCallbackQueue
ourInternalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_ourInternalQueue
ourConfirmed
TB,N,V_ourConfirmed
ourInServiceMode
TB,N,V_ourInServiceMode
timeoutTimer
T@"NSObject<OS_dispatch_source>",&,N,V_timeoutTimer
fieldDetector
T@"PKFieldDetector",&,N,V_fieldDetector
invalidated
TB,N,V_invalidated
changeCardToken
TI,N,V_changeCardToken
paymentWebServiceContextData
hasPaymentWebServiceContextData
T@"NSData",&,N,V_paymentWebServiceContextData
currencyCode
T@"NSString",C,N,V_currencyCode
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/NPKContinuityCoordinator.m
com.apple.NanoPassKit.NPKContinuityCoordinator
-[NPKContinuityCoordinator userViewingPassWithUniqueID:isPaymentPass:]
-[NPKContinuityCoordinator userNeedsToProvisionPassWithUniqueID:]
passUniqueID
com.apple.nano.passbook.provisioning
provisionPassUserActivity
T@"NSUserActivity",&,N,V_provisionPassUserActivity
getPaymentPassesUserActivity
T@"NSUserActivity",&,N,V_getPaymentPassesUserActivity
passListUserActivity
T@"NSUserActivity",&,N,V_passListUserActivity
individualPassUserActivity
T@"NSUserActivity",&,N,V_individualPassUserActivity
setUpPeerPaymentUserActivity
T@"NSUserActivity",&,N,V_setUpPeerPaymentUserActivity
viewPeerPaymentUserActivity
T@"NSUserActivity",&,N,V_viewPeerPaymentUserActivity
currentUserActivity
T@"NSUserActivity",W,N,V_currentUserActivity
IMChatRegistryContinuityActivityType
/System/Library/PrivateFrameworks/IMCore.framework/IMCore
assertionUUID
T@"NSUUID",&,N,V_assertionUUID
assertType
Ti,N,V_assertType
com.apple.NanoPassKit.TargetDevice.AssertionManager
AssertRequest
outstandingAssertionStatusUpdaters
T@"NSMutableDictionary",&,N,V_outstandingAssertionStatusUpdaters
assertTypesUUIDsMap
T@"NSMutableDictionary",&,N,V_assertTypesUUIDsMap
transportationService
T@"IDSService",R,N,V_transportationService
v16@?0B4f8@"NSError"12
v12@?0I4@"PKPaymentPass"8
.GlobalPreferences
v12@?0B4@"NSError"8
v20@?0B4@"NSError"8@"PKPeerPaymentWebServiceContext"12@"PKPeerPaymentAccount"16
AppleLocale
globalDomainAccessor
T@"NPSDomainAccessor",&,N,V_globalDomainAccessor
preferencesSyncManager
T@"NPSManager",&,N,V_preferencesSyncManager
v8@?0I4
TL,V_width
TL,V_height
TL,V_bitsPerComponent
TL,V_bitsPerPixel
TL,V_bytesPerRow
TI,V_bitmapInfo
T@"NSData",&,V_bitmapData
appDisplayName
hasAppDisplayName
T@"NSString",&,N,V_appDisplayName
cancelOutstandingRequests
hasCancelOutstandingRequests
TB,N,V_cancelOutstandingRequests
NPKQuickPaymentSessionInternalQueue
NPKQuickPaymentSessionQueue
v20@?0Q4Q12
v12@?0Q4
v8@?0@"PKContactlessInterfaceSession"4
HasSEP
v16@?0@"PKValueAddedServiceTransaction"4I8^B12
v16@?0@?<v@?>4I8^B12
paymentSessionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_paymentSessionQueue
contactlessSessionHandle
T@"PKPaymentSessionHandle",&,N,V_contactlessSessionHandle
contactlessSession
T@"PKContactlessInterfaceSession",&,N,V_contactlessSession
contactlessValidity
TQ,N,V_contactlessValidity
authorizationValidity
TQ,N,V_authorizationValidity
confirmed
TB,N,GisConfirmed,V_confirmed
deactivating
TB,N,GisDeactivating,V_deactivating
deactivated
TB,N,GisDeactivated,V_deactivated
deactivationCompletionBlocks
T@"NSMutableArray",&,N,V_deactivationCompletionBlocks
T@"<NPKQuickPaymentSessionDelegate>",W,N,V_delegate
currentPass
T@"PKPass",&,N,V_currentPass
vasPasses
T@"NSDictionary",&,N,V_vasPasses
deferAuthorization
TB,N,V_deferAuthorization
inServiceMode
TB,N,V_inServiceMode
deviceMetadata
hasDeviceMetadata
T@"NSData",&,N,V_deviceMetadata
accountData
hasAccountData
T@"NSData",&,N,V_accountData
Free Shipping
free
FedEx Ground
fedexg
Arrives in 5-7 days
8.95
UPS Next Day
upsnda
Arrives tomorrow
23.95
37.50
0.0875
Items
Sales Tax
Shipping
Target
mock-1
John
Appleseed
john@apple.com
(408) 577-1010
1 Infinite Loop
Cupertino
95014
United States
NanoPassKit one-shot fetcher requested location
completionHandler
T@?,C,N,V_completionHandler
locationFixTimeout
T@"NSObject<OS_dispatch_source>",&,N,V_locationFixTimeout
locationManager
T@"CLLocationManager",&,N,V_locationManager
inUseAssertion
T@"CLInUseAssertion",&,N,V_inUseAssertion
Watch
Companion
libraryState
reconciledState
backupState
candidateState
candidateChange
engineRole
v8@?0@?<v@?B>4
T@"<NPKPassSyncEngineDelegate>",W,N,V_delegate
dataSource
T@"<NPKPassSyncEngineDataSource>",W,N,V_dataSource
T@"NPKPassSyncState",&,N,V_libraryState
T@"NPKPassSyncState",&,N,V_backupState
T@"NPKPassSyncState",&,N,V_reconciledState
T@"NPKPassSyncState",&,N,V_candidateState
T@"NPKPassSyncChange",&,N,V_candidateChange
processingChange
T@"NPKPassSyncChange",&,N,V_processingChange
engineName
T@"NSString",R,N
TI,R,N,V_engineRole
accountInfoData
cloudStoreIsSetup
hasAccountInfoData
T@"NSData",&,N,V_accountInfoData
hasCloudStoreIsSetup
TB,N,V_cloudStoreIsSetup
passAppletState
hasPassAppletState
T@"NSData",&,N,V_passAppletState
tsmRegionPushTopics
tsmRegionURLs
brokerRegionPushTopics
primaryRegionTopic
T@"NSMutableArray",&,N,V_tsmRegionPushTopics
T@"NSMutableArray",&,N,V_tsmRegionURLs
T@"NSMutableArray",&,N,V_brokerRegionPushTopics
hasPrimaryRegionTopic
T@"NSString",&,N,V_primaryRegionTopic
npkPassSync-%@-segment%u
npkPassSync-%@-fullPass
kNPKPeerPaymentMessagesTransactionsManagerTransactionStatus
kNPKPeerPaymentMessagesTransactionsManagerAvailableActions
 (service identifier %@ payment status %@ available actions %@ transaction %@ actionFetchDate:%@)
serviceIdentifier
T@"NSString",&,N,V_serviceIdentifier
paymentStatus
TI,N,V_paymentStatus
availableActionsFetchDate
T@"NSDate",&,N,V_availableActionsFetchDate
com.apple.nanopasskit.peerPaymentmessagesTransactionManager.transactions
com.apple.nanopasskit.peerPaymentmessagesTransactionManager.peerPaymentPass
v8@?0@"NSNotification"4
v12@?0@"PKPeerPaymentStatusResponse"4@"NSError"8
v16@?0@"NSString"4@"NPKPeerPaymentTransactionDetails"8^B12
v16@?0@"NSString"4I8^B12
v12@?0@"PKPaymentTransaction"4^B8
paymentService
T@"PKPaymentService",R,N,V_paymentService
transactionDetails
T@"NSMutableDictionary",R,N,V_transactionDetails
currentLookupIdentifiers
T@"NSMutableSet",R,N,V_currentLookupIdentifiers
peerPaymentPassUniqueID
T@"NSString",C,V_peerPaymentPassUniqueID
defaultShippingAddress
defaultBillingAddresses
defaultContactEmail
defaultContactPhone
defaultContactName
hasDefaultShippingAddress
T@"NSData",&,N,V_defaultShippingAddress
hasDefaultBillingAddresses
T@"NSData",&,N,V_defaultBillingAddresses
hasDefaultContactEmail
T@"NSData",&,N,V_defaultContactEmail
hasDefaultContactPhone
T@"NSData",&,N,V_defaultContactPhone
hasDefaultContactName
T@"NSData",&,N,V_defaultContactName
pushTopic
hasPushTopic
T@"NSString",&,N,V_pushTopic
com.apple.NPKInAppPaymentServer
NPKRemoteInterfacePresenterQueue
T@"<NPKRemoteInterfacePresenterDelegate>",W,N,V_delegate
Update
Remove
<%@: %p change UUID %@ reconciled state hash %@ change type %@ unique ID %@ sync state item %@ pass data %@>
changeUUID
reconciledStateHash
changeType
syncStateItem
T@"NSUUID",&,N,V_changeUUID
T@"NSData",&,N,V_reconciledStateHash
TI,N,V_changeType
T@"NPKPassSyncStateItem",&,N,V_syncStateItem
NPKPeerPaymentAccountManagerAccountDidChangeNotification
v8@?0@"PKPeerPaymentAccount"4
account
T@"PKPeerPaymentAccount",&,V_account
peerPaymentService
T@"PKPeerPaymentService",R,N,V_peerPaymentService
-[NPKProtoGizmoInitiatedDeletePassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoGizmoInitiatedDeletePassRequest.m
hasReconciledStateHash
CREATE TABLE IF NOT EXISTS pass (unique_id TEXT NOT NULL, type_id TEXT NOT NULL, style INTEGER, hash BLOB NOT NULL, encoded_pass BLOB NOT NULL, encoded_diff BLOB, logo_text TEXT, logo_image BLOB, background_color BLOB, label_color BLOB, foreground_color BLOB, delete_pending INTEGER DEFAULT 0, background_image BLOB);
CREATE UNIQUE INDEX IF NOT EXISTS pass_unique_id_idx ON pass(unique_id)
CREATE TABLE IF NOT EXISTS key_value_store (key TEXT NOT NULL, value TEXT);
CREATE UNIQUE INDEX IF NOT EXISTS key_value_store_idx1 ON key_value_store(key)
ALTER TABLE pass ADD preferred_aid TEXT;
ALTER TABLE pass ADD nfc_payload BLOB;
ALTER TABLE pass ADD private_label INTEGER DEFAULT 0;
ALTER TABLE pass ADD cobranded INTEGER DEFAULT 0;
ALTER TABLE pass ADD device_primary_payment_application BLOB;
ALTER TABLE pass ADD preferred_payment_application BLOB;
ALTER TABLE pass ADD ingested_date INTEGER;
ALTER TABLE pass ADD complete_hash BLOB
ALTER TABLE pass ADD effective_payment_application_state INTEGER DEFAULT 0
ALTER TABLE pass ADD has_user_selectable_payment_applications INTEGER DEFAULT 0
ALTER TABLE pass ADD has_stored_value INTEGER DEFAULT 0
ALTER TABLE pass ADD settings INTEGER DEFAULT 0
ALTER TABLE pass ADD complete_hashes BLOB
ALTER TABLE pass ADD available_actions BLOB
CREATE TABLE IF NOT EXISTS transactions (pass_unique_id TEXT NOT NULL, transaction_id TEXT NOT NULL UNIQUE ON CONFLICT REPLACE, transaction_date INTEGER, transaction_sources INTEGER, encoded_transaction BLOB NOT NULL);
CREATE INDEX IF NOT EXISTS transactions_pass_unique_id_index ON transactions(pass_unique_id)
ALTER TABLE pass ADD organization_name TEXT
ALTER TABLE transactions ADD transaction_source INTEGER
ALTER TABLE transactions ADD has_notification_service_data INTEGER
ALTER TABLE pass ADD device_payment_applications BLOB
ALTER TABLE pass ADD felica_transit_applet_state BLOB
ALTER TABLE pass ADD front_field_buckets BLOB
ALTER TABLE pass ADD back_field_buckets BLOB
ALTER TABLE transactions ADD transaction_type INTEGER
ALTER TABLE pass ADD device_primary_contactless_payment_application BLOB;
ALTER TABLE pass ADD device_primary_in_app_payment_application BLOB;
CREATE TABLE IF NOT EXISTS ephemeral_transactions (pass_unique_id TEXT NOT NULL UNIQUE ON CONFLICT REPLACE, transaction_id TEXT NOT NULL);
CREATE INDEX IF NOT EXISTS ephemeral_transactions_pass_index ON ephemeral_transactions(pass_unique_id)
ALTER TABLE pass ADD last_add_value_amount TEXT
ALTER TABLE pass ADD localized_description TEXT
ALTER TABLE pass ADD pending_add_value_date INTEGER
ALTER TABLE pass ADD encoded_image_sets BLOB
ALTER TABLE pass ADD issuer_country_code BLOB
ALTER TABLE pass ADD express_pass_types_mask INTEGER DEFAULT 0
ALTER TABLE pass ADD complete_remote_hashes BLOB
ALTER TABLE transactions ADD cloudkit_archived INTEGER
ALTER TABLE pass ADD supports_pp INTEGER
ALTER TABLE transactions ADD service_identifier TEXT
ALTER TABLE pass ADD balances BLOB
nanopasses.sqlite3
(uniqueID %@ localHashes %@ remoteHashes %@)
localManifestHashes
T@"NSArray",&,N,V_localManifestHashes
remoteManifestHashes
T@"NSArray",&,N,V_remoteManifestHashes
NPKGizmoDatabaseMigrationDataSourceSetNotification
NPKGizmoDatabaseMigrationDelegateQueue
com.apple.NanoPassbook.NPKGizmoDatabase
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/NPKGizmoDatabase.m
PRAGMA journal_mode = WAL;
issuer_country_code
encodedPass
ingestedDate
completeLocalHashes
encodedImageSets
encodedPassWithoutImageSets
encodedLogoImageData
encodedBackgroundImageData
migrateCompleteHashes
v12@?0@"PKPass"4@"NSString"8
B12@?0i4i8
%@-shm
%@-wal
DELETE FROM pass WHERE unique_id = ?
INSERT INTO pass (unique_id, type_id, style, hash, encoded_pass, encoded_image_sets, encoded_diff, logo_text, logo_image, background_color, label_color, foreground_color, background_image, nfc_payload, private_label, cobranded, device_payment_applications, device_primary_payment_application, device_primary_contactless_payment_application, device_primary_in_app_payment_application, preferred_aid, preferred_payment_application, ingested_date, complete_hash, delete_pending, effective_payment_application_state, has_user_selectable_payment_applications, has_stored_value, settings, complete_hashes, issuer_country_code, available_actions, organization_name, felica_transit_applet_state, front_field_buckets, back_field_buckets, last_add_value_amount, localized_description, pending_add_value_date, express_pass_types_mask, complete_remote_hashes, supports_pp, balances) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
UPDATE pass SET encoded_diff = ? WHERE unique_id = ?
UPDATE pass SET delete_pending = ? WHERE unique_id = ?
SELECT delete_pending FROM pass WHERE unique_id = ?
UPDATE pass SET preferred_aid = ?, preferred_payment_application = ? WHERE unique_id = ?
SELECT preferred_aid FROM pass WHERE unique_id = ?
SELECT encoded_pass FROM pass WHERE unique_id = ?
SELECT encoded_pass, encoded_image_sets FROM pass WHERE unique_id = ?
SELECT encoded_diff FROM pass WHERE unique_id = ?
INSERT INTO transactions (pass_unique_id, transaction_id, transaction_date, transaction_source, transaction_type, has_notification_service_data, encoded_transaction, cloudkit_archived, service_identifier) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)
DELETE FROM transactions  WHERE pass_unique_id = ? AND transaction_id = ?
DELETE FROM transactions  WHERE pass_unique_id = ? AND service_identifier = ?
SELECT encoded_transaction FROM transactions WHERE pass_unique_id = ? AND ((? OR has_notification_service_data == ?) OR ((? OR transaction_type == ?) AND (? OR transaction_type != ?))) AND transaction_date >= ? AND transaction_date <= ?
ORDER BY transaction_date ASC LIMIT ?
ORDER BY transaction_date DESC LIMIT ?
%@ AND transaction_source != 0 %@
%@ AND transaction_source == 0 %@
SELECT encoded_transaction FROM transactions WHERE transaction_id = ?
SELECT encoded_transaction FROM transactions WHERE service_identifier = ?
SELECT pass_unique_id FROM transactions WHERE transaction_id = ?
SELECT pass_unique_id FROM transactions WHERE service_identifier = ?
DELETE FROM transactions WHERE pass_unique_id = ?
DELETE FROM transactions WHERE pass_unique_id = ? AND transaction_id NOT IN (SELECT transaction_id FROM transactions WHERE pass_unique_id = ? ORDER BY transaction_date DESC LIMIT ?)
SELECT felica_transit_applet_state FROM pass WHERE unique_id = ?
UPDATE pass SET felica_transit_applet_state = ? WHERE unique_id = ?
INSERT INTO ephemeral_transactions (pass_unique_id, transaction_id) VALUES (?, ?)
DELETE FROM ephemeral_transactions WHERE pass_unique_id = ?
SELECT transaction_id FROM ephemeral_transactions WHERE pass_unique_id = ? LIMIT 1
SELECT last_add_value_amount FROM pass WHERE unique_id = ?
UPDATE pass SET last_add_value_amount = ? WHERE unique_id = ?
SELECT pending_add_value_date FROM pass WHERE unique_id = ?
UPDATE pass SET pending_add_value_date = ? WHERE unique_id = ?
SELECT encoded_transaction FROM transactions WHERE cloudkit_archived = ?
SELECT balances FROM pass WHERE unique_id = ?
UPDATE pass SET balances = ? WHERE unique_id = ?
SELECT unique_id, type_id, style, hash, logo_text, logo_image, background_color, label_color, foreground_color, delete_pending, background_image, nfc_payload, private_label, cobranded, device_payment_applications, device_primary_payment_application, device_primary_contactless_payment_application, device_primary_in_app_payment_application, preferred_payment_application, ingested_date, complete_hash, effective_payment_application_state, has_user_selectable_payment_applications, has_stored_value, settings, complete_hashes, issuer_country_code, available_actions, organization_name, felica_transit_applet_state, front_field_buckets, back_field_buckets, last_add_value_amount, localized_description, pending_add_value_date, express_pass_types_mask, complete_remote_hashes, supports_pp FROM pass
BEGIN IMMEDIATE TRANSACTION;
COMMIT;
ROLLBACK;
B4@?0
v16@?0@"NPKPassDescription"4I8^B12
v16@?0@"PKPaymentTransaction"4I8^B12
v8@?0@"NPKGizmoDatabase"4
-[NPKGizmoDatabase _setTransitAppletStateLocked:forPassWithUniqueID:]
-[NPKGizmoDatabase _setCurrentEphemeralTransactionIdentifier:forPassWithUniqueID:]
-[NPKGizmoDatabase _currentEphemeralTransactionIdentifierForPassWithUniqueID:]
-[NPKGizmoDatabase _setLastAddValueAmountLocked:forPassWithUniqueID:]
-[NPKGizmoDatabase _setPendingAddValueDateLocked:forPassWithUniqueID:]
-[NPKGizmoDatabase _setPaymentBalancesLocked:forPassWithUniqueID:]
SELECT encoded_pass, encoded_image_sets, preferred_aid FROM pass
v12@?0B4^{sqlite3_stmt=}8
UPDATE pass SET nfc_payload=? WHERE unique_id=?
UPDATE pass SET private_label=?, cobranded=? WHERE unique_id=?
UPDATE pass SET device_primary_payment_application=?, preferred_payment_application=? WHERE unique_id=?
UPDATE pass SET device_primary_contactless_payment_application=?, device_primary_in_app_payment_application=? WHERE unique_id=?
UPDATE pass SET encoded_pass=?, encoded_image_sets=? WHERE unique_id=?
UPDATE pass SET logo_image=? WHERE unique_id=?
UPDATE pass SET background_image=? WHERE unique_id=?
UPDATE pass SET issuer_country_code=? WHERE unique_id=?
UPDATE pass SET express_pass_types_mask=? WHERE unique_id=?
UPDATE pass SET device_payment_applications=? WHERE unique_id=?
UPDATE pass SET ingested_date=? WHERE unique_id=?
UPDATE pass SET complete_hash=?, complete_hashes=? WHERE unique_id=?
UPDATE pass SET front_field_buckets=?, back_field_buckets=? WHERE unique_id=?
UPDATE pass SET available_actions=? WHERE unique_id=?
UPDATE pass SET organization_name=? WHERE unique_id=?
UPDATE pass SET localized_description=? WHERE unique_id=?
UPDATE pass SET effective_payment_application_state=? WHERE unique_id=?
UPDATE pass SET has_user_selectable_payment_applications=? WHERE unique_id=?
UPDATE pass SET encoded_pass=? WHERE unique_id=?
UPDATE pass SET has_stored_value=? WHERE unique_id=?
UPDATE pass SET settings=? WHERE unique_id=?
UPDATE pass SET complete_remote_hashes=complete_hashes
-[NPKGizmoDatabase setPreferredPaymentApplication:forPaymentPass:]
-[NPKGizmoDatabase preferredPaymentApplicationForPaymentPass:]
@8@?0@"NSArray"4
v16@?0@"NSString"4@"NPKGizmoDatabaseManifestEntry"8^B12
v32@?0@"PKPass"4@"NPKPassDescription"8Q12Q20^B28
SELECT value FROM key_value_store WHERE KEY="version"
INSERT INTO key_value_store (key, value) VALUES ("version", "%ld")
UPDATE key_value_store SET value="%ld" WHERE key="version"
PRAGMA table_info('%@')
passDBIsAvailable
TB,N,V_passDBIsAvailable
database
T^{sqlite3=},R,D
deleteStatement
T^{sqlite3_stmt=},R,D
insertStatement
selectPassDataStatement
selectPassAndImageSetsDataStatement
selectPassDiffStatement
insertDiffStatement
T^{sqlite3_stmt=},R
updateDeletePendingStatement
updatePreferredAIDStatement
selectPreferredAIDStatement
selectTransactionWithIdentifierStatement
selectTransactionWithServiceIdentifierStatement
deleteTransactionsForPassStatement
trimTransactionsForPassStatement
selectTransitAppletStateForPassStatement
updateTransitAppletStateForPassStatement
insertEphemeralTransactionStatement
deleteEphemeralTransactionByPassUniqueIDStatement
currentEphemeralTransactionIdentifierStatement
selectLastAddValueAmountForPassStatement
updateLastAddValueAmountForPassStatement
selectPendingAddValueDateForPassStatement
updatePendingAddValueDateForPassStatement
selectCloudKitArchivedTransactionsStatement
T@"NSData",R,D
T@"NSDictionary",R,D
passDescriptions
T@"NSArray",R
numberOfPasses
TI,R,N
NPKGizmoDatabaseChangedNotification
_NPKGizmoDatabaseExternallyChanged
WasNo-Op
WasFirstUnlock
NPKGizmoDatabasePassAddedNotification
NPKGizmoDatabasePassUpdatedNotification
NPKGizmoDatabasePassRemovedNotification
NPKGizmoDatabaseTransactionAddedOrUpdatedNotificationName
NPKGizmoDatabaseTransactionExplicitlyRemovedNotificationName
NPKGizmoDatabaseTransactionNotificationTransactionKey
NPKGimzoDatabaseTransactionNotificationPassUniqueIdentifierKey
Pass
PrimaryUsagePage
PrimaryUsage
NPSButtonListener
v20@?0^v4^v8^v12^{__IOHIDEvent=}16
buttonHandler
T@?,C,N,V_buttonHandler
hidSystemClient
T^{__IOHIDEventSystemClient=},N,V_hidSystemClient
hidSystemQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_hidSystemQueue
-[NPKProtoRemovePassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoRemovePassRequest.m
unrecognizedReconciledStateHash
libraryPassSyncState
hasUnrecognizedReconciledStateHash
T@"NSData",&,N,V_unrecognizedReconciledStateHash
hasLibraryPassSyncState
T@"NPKProtoPassSyncState",&,N,V_libraryPassSyncState
NPKServiceModeRequestStateChanged
serviceModeRequested
TB,N,V_serviceModeRequested
provisioningDataBytes
hasProvisioningDataBytes
T@"NSData",&,N,V_provisioningDataBytes
setAuthRandomIfNotPaired
hasSetAuthRandomIfNotPaired
TB,N,V_setAuthRandomIfNotPaired
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/NPKWorkQueue.m
remainingWork
T@"NSMutableArray",&,N,V_remainingWork
performingWork
TB,N,V_performingWork
T@"NSObject<OS_dispatch_queue>",N,V_callbackQueue
takeOutTransactions
TB,N,V_takeOutTransactions
workQueueName
T@"NSString",&,N,V_workQueueName
cardAIDs
T@"NSMutableArray",&,N,V_cardAIDs
com.apple.expressPassController
v16@?0@"NSString"4@"NSSet"8^B12
v12@?0@"PKExpressPassInformation"4^B8
currentTransactionPass
T@"PKPass",&,N,V_currentTransactionPass
passLibrary
T@"PKPassLibrary",R,W,N,V_passLibrary
expressPassesInformation
T@"NSSet",&,V_expressPassesInformation
expressPasses
T@"NSDictionary",&,V_expressPasses
distributedNotificationCenter
T@"NSDistributedNotificationCenter",R,W,N,V_distributedNotificationCenter
T@"<NPKExpressPassControllerDelegate>",W,V_delegate
NPKExpressPassControllerStatusWaitingForField
NPKExpressPassControllerStatusFieldDetected
NPKExpressPassControllerStatusTransactionStarted
NPKExpressPassControllerStatusTransactionCompleted
NPKExpressPassControllerStatusTransactionFailed
Unknown NPKExpressPassControllerStatus %lu
missing
hasMissing
TB,N,V_missing
com.apple.nanopassbook.lacoordinator
v12@?0@"NSDictionary"4@"NSError"8
localAuthenticationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_localAuthenticationQueue
inProgressContext
T@"LAContext",&,N,V_inProgressContext
completedContext
T@"LAContext",&,N,V_completedContext
completedCredential
T@"NSData",&,N,V_completedCredential
completedError
T@"NSError",&,N,V_completedError
-[NPKProtoPass writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoPass.m
unlockRequired
hasUnlockRequired
TB,N,V_unlockRequired
-[NPKProtoMarkPaymentPassForDeleteRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoMarkPaymentPassForDeleteRequest.m
relevantText
-[NPKProtoRelevantPassTuple writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoRelevantPassTuple.m
hasRelevantText
T@"NSString",&,N,V_relevantText
signedData
certsBytes
signatureInfoBytes
hasSignedData
T@"NSData",&,N,V_signedData
hasCertsBytes
T@"NSData",&,N,V_certsBytes
hasSignatureInfoBytes
T@"NSData",&,N,V_signatureInfoBytes
cardType
hasCardType
T@"NSString",&,N,V_cardType
v16@?0@"<NPKBalanceField>"4I8^B12
com.apple.NanoPassKitUI
PASS_DETAILS_HEADER_TRANSIT_BALANCE
NanoPassKitUI-Transit
v12@?0@"PKPaymentBalance"4^B8
T@"PKPaymentPass",R,N,V_pass
transitBalanceFields
T@"NSArray",R,N,V_transitBalanceFields
transitPassProperties
T@"PKTransitPassProperties",&,N,V_transitPassProperties
serverBalances
T@"NSSet",C,N,V_serverBalances
com.apple.NanoPasskit.NPKAccountPassManager
v12@?0@"PKAccount"4@"NSError"8
header
ACCOUNTPASS_INFO_AVAILABLE_CREDIT
AccountPass
value
ACCOUNTPASS_INFO_ACCOUNT_BALANCE
ACCOUNTPASS_INFO_AVAILABLE_CREDIT_FORMAT
T@"PKAccount",&,N,V_account
lastAccountUpdateDate
T@"NSDate",&,N,V_lastAccountUpdateDate
accountDetails
T@"NSMutableArray",&,N,V_accountDetails
accountIdentifier
T@"NSString",R,N,V_accountIdentifier
T@"<NPKAccountPassManagerDelegate>",W,N,V_delegate
NPKSharedWebServiceDidChangeNotification
NPKSharedPeerPaymentWebServiceDidChangeNotification
NPKSharedPeerPaymentAccountDidChangeNotification
peerPaymentWebService
T@"PKPeerPaymentWebService",&,N,V_peerPaymentWebService
peerPaymentAccount
T@"PKPeerPaymentAccount",&,N,V_peerPaymentAccount
targetDevice
T@"NPKPaymentWebServiceCompanionTargetDevice",&,N,V_targetDevice
peerPaymentTargetDevice
T@"NPKPeerPaymentWebServiceCompanionTargetDevice",&,N,V_peerPaymentTargetDevice
connection
T@"NPKCompanionAgentConnection",&,N,V_connection
applicationIdentifier
requestAuthorization
hasApplicationIdentifier
T@"NSString",&,N,V_applicationIdentifier
hasRequestAuthorization
TB,N,V_requestAuthorization
conflictingExpressPassIdentifiers
conflictingReferenceExpressPassIdentifiers
T@"NSMutableArray",&,N,V_conflictingExpressPassIdentifiers
T@"NSMutableArray",&,N,V_conflictingReferenceExpressPassIdentifiers
NPKPeerPaymentConversationManagerRecipientUpdatedNotification
kNPKPeerPaymentConversationManagerRecipientPhoneOrEmail
kNPKPeerPaymentConversationManagerRecipient
kNPKPeerPaymentConversationManagerError
NPKPeerPaymentConversationManagerErrorDomain
com.apple.passkit.peerpayment.conversationmanager
v20@?0B4@"MSConversation"8@"PKPeerPaymentPerformResponse"12@"NSError"16
v16@?0B4@"PKPeerPaymentQuote"8@"NSError"12
v16@?0B4@"PKPeerPaymentPerformResponse"8@"NSError"12
v16@?0I4@"PKPeerPaymentRecipient"8@"NSError"12
PEER_PAYMENT_NEGATIVE_BALANCE_ERROR_BODY
PeerPayment
PEER_PAYMENT_NEGATIVE_BALANCE_ERROR_BODY_NO_VALUE
PEER_PAYMENT_NEGATIVE_BALANCE_ERROR_TITLE
PEER_PAYMENT_NEGATIVE_BALANCE_ERROR_COMPACT_BODY
PEER_PAYMENT_UNAVAILABLE_ERROR_TITLE
PEER_PAYMENT_SEND_ERROR_MESSAGE_AMBIGUOUS_SENDER_ADDRESS
PEER_PAYMENT_SEND_ERROR_TITLE_CLOSED_OR_LOCKED
PEER_PAYMENT_SEND_ERROR_MESSAGE_CLOSED_OR_LOCKED
PEER_PAYMENT_SEND_MONEY_GENERIC_ERROR_TITLE
PEER_PAYMENT_SEND_MONEY_GENERIC_ERROR_MESSAGE
currentBalance
currentBalanceCurrency
quoteItems
totalFees
totalReceiveAmount
totalReceiveAmountCurrency
countryCode
type
fees
feesCurrency
sendAmount
sendAmountCurrency
receiveAmount
receiveAmountCurrency
totalAmount
totalAmountCurrency
supportedNetworks
merchantIdentifier
merchantCapabilities
currentRecipientAddressLookup
T@"NSString",&,N,V_currentRecipientAddressLookup
currentPeerPaymentController
T@"PKPeerPaymentController",W,N,V_currentPeerPaymentController
activeConversation
T@"MSConversation",&,V_activeConversation
senderPhoneOrEmail
recipientPhoneOrEmail
recipientDisplayName
T@"NSString",R,C,N
recipientFoundInContacts
recipient
T@"PKPeerPaymentRecipient",R,V_recipient
conversationContext
T@"NPKPeerPaymentConversationContext",&,N,V_conversationContext
-[NPKProtoAddPassRequest writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoAddPassRequest.m
hasAccountIdentifier
T@"NSString",&,N,V_accountIdentifier
<%@: %p unique ID %@ manifest hash %@ (pass type identifier %@, serial number %@, sequence counter %@)>
serialNumber
sequenceCounter
T@"NSString",&,N,V_serialNumber
T@"NSNumber",&,N,V_sequenceCounter
<%@: %p sync state hash: %@, items: %@>
syncStateItems
T@"NSMutableDictionary",&,N,V_syncStateItems
syncStateHash
T@"NSData",R,N
passSettings
hasPassSettings
TQ,N,V_passSettings
acceptedChangeUUID
changeAccepted
-[NPKProtoPassSyncStateChangeProcessed writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoPassSyncStateChangeProcessed.m
nil != self->_acceptedChangeUUID
T@"NSData",&,N,V_acceptedChangeUUID
hasChangeAccepted
TB,N,V_changeAccepted
Unknown state %s
Morgan
4002290000002046
MM yyyy
01 2017
%s (%s): %s
Accepting terms and conditions at URL %s.%s
 (Non-secure HTTP allowed for terms URL.)
Error: %s
hash
superclass
description
T@"NSString",R,C
flowController
T@"NPKPaymentProvisioningFlowController",&,N,V_flowController
Starting Apple
Pay provisioning
Checking preconditions
Got remote credentials. Choosing manual entry instead.
Enter your card details.
If a command-line interface had a camera, we'd fetch your details that way. But it doesn't.
Provisioning in progress
Provisioning finished.
Card not added.
Card added.
com.apple.NanoPasskit.TransitPassesInfoManager
v16@?0@"NSString"4@"NPKTransitPassBalanceModel"8^B12
B8@?0@"NPKTransitPassBalanceModel"4
v8@?0@"PKTransitAppletState"4
passes
T@"NSSet",C
T@"<NPKTransitPassesInfoManagerDelegate>",W,V_delegate
objectUniqueID
T@"NSString",&,N,V_objectUniqueID
accountsRequiringProvisioningData
accountsOnDeviceData
hasAccountsRequiringProvisioningData
T@"NSData",&,N,V_accountsRequiringProvisioningData
hasAccountsOnDeviceData
T@"NSData",&,N,V_accountsOnDeviceData
B12@?0@"PKExpressPassInformation"4^B8
dismissalTimer
T@"NSObject<OS_dispatch_source>",&,N,V_dismissalTimer
appletHistoryFetcher
T@"NPKTransitAppletHistoryFetcher",&,N,V_appletHistoryFetcher
expressTransitPass
T@"PKPass",&,N,V_expressTransitPass
expressTransitPaymentApplication
T@"PKPaymentApplication",&,N,V_expressTransitPaymentApplication
expressPassController
T@"NPKExpressPassController",R,N,V_expressPassController
transactionStartAppletState
T@"PKTransitAppletState",&,N,V_transactionStartAppletState
T@"<NPKExpressTransitInterfaceControllerDelegate>",W,N,V_delegate
T@"<NPKExpressTransitInterfaceControllerDataSource>",W,N,V_dataSource
lastKnownReconciledPassSyncStateHash
passSegmentIndex
passSegmentTotal
-[NPKProtoPassSyncStateChange writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoPassSyncStateChange.m
nil != self->_changeUUID
nil != self->_uniqueID
T@"NSData",&,N,V_changeUUID
hasLastKnownReconciledPassSyncStateHash
T@"NSData",&,N,V_lastKnownReconciledPassSyncStateHash
Ti,N,V_changeType
hasSyncStateItem
T@"NPKProtoPassSyncStateItem",&,N,V_syncStateItem
hasPassData
hasPassSegmentIndex
TI,N,V_passSegmentIndex
hasPassSegmentTotal
TI,N,V_passSegmentTotal
idx (%tu) is out of range (%tu)
lifecycleStates
activationStates
appletsBytes
lifecycleStatesCount
T^I,R,N
activationStatesCount
T@"NSMutableArray",&,N,V_appletsBytes
NPKBalanceFieldValueTransitPropertiesIdentifier_c3d70481-6a87-4a4d-adb0-4d92e778ad5d
label
formattedValue
identifier
isPrimaryBalance
<%@:%p> {label:%@ formattedValue:%@ isPrimaryBalance:%@ ID:%@}
T@"NSString",R,N,V_label
T@"NSString",R,N,V_formattedValue
T@"NSString",R,N,V_identifier
TB,R,N,V_isPrimaryBalance
true
false
messageIdentifier
T@"NSString",C,N,V_messageIdentifier
T@,C,N,V_completionHandler
errorHandler
T@?,C,N,V_errorHandler
%@;%@;%@
%@/%@ (%@/%@)
<%@> <%@> <%@>
com.apple.NPKPaymentWebServiceCompanionTargetDevice
v12@?0@"NSError"4@"NRActiveDeviceAssertion"8
passesOfTypeQueue
v8@?0@"PKPaymentPass"4
v12@?0@"NSString"4^B8
v20@?0B4@"NSData"8@"NSData"12@"NSError"16
v16@?0B4@"NSData"8@"NSData"12
v16@?0@"PKPaymentDeviceRegistrationData"4@"NSString"8@"NSError"12
v8@?0@"CLLocation"4
v12@?0@"PKPaymentDeviceProvisioningData"4@"NSError"8
not present
present
6BD289D4-EFF7-4E48-A3AD-776E924C8723
com.apple.seld
v16@?0@"NSString"4@"NSString"8^B12
Configuration
passcode
wrist detection
retrieveTransactions-%@
SetExpressPassIdentifier-%@
v16@?0I4@"NSString"8@"NSSet"12
RemoveExpressPasses-%@
RemoveExpressPass-%@
v12@?0@"NSSet"4@"NSSet"8
ConflictingPassIdentifiers-%@
EnableServiceModeIdentifier
remotePassUpdate
DC264F98-B0E2-4D96-9248-663A801E4FB1
B8@?0i4
v20@?0@"NSError"4@"PKPaymentPass"8@"NSSet"12i16
v12@?0I4@"NSSet"8
NPKTransactionDefaultsQueueOne
NPKWebServiceContextQueueOne
NPKCompanionPeerPaymentRegistrationQueueOne
NPKCompanioniCloudSignoutQueueOne
AB2653AC-2D55-4D7D-9BFB-7D99AA89708B
context
TI,N,V_context
provisioningService
T@"IDSService",&,N,V_provisioningService
outstandingRequests
T@"NSMutableDictionary",&,N,V_outstandingRequests
responseQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_responseQueue
provisioningActiveDeviceAssertion
T@"NRActiveDeviceAssertion",&,N,V_provisioningActiveDeviceAssertion
remoteDeviceAssertionManager
T@"NPKTargetDeviceAssertionManager",&,N,V_remoteDeviceAssertionManager
T@"<NPKPaymentWebServiceCompanionTargetDeviceDelegate>",W,N,V_delegate
upgradeStatus
hasUpgradeStatus
Ti,N,V_upgradeStatus
expressPassInformations
T@"NSMutableArray",&,N,V_expressPassInformations
KeepAlive
UpgradeStarted
UpgradedCompleted
ExpressModeSetupCompleted
com.apple.NPKCompanionServer.PaymentPassesChanged
com.apple.NPKCompanionServer.DefaultCardChanged
com.apple.NPKCompanionAgent.Server
bridge:root=com.apple.NanoPassbookBridgeSettings&path=ADD_CARD
bridge:root=com.apple.NanoPassbookBridgeSettings&path=ADD_CARD&passTypeIdentifier=%@&passSerialNumber=%@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/NPKCompanionAgentConnection.m
6C4614A2-1ECC-4405-9FEE-B5F0A5666961
v16@?0I4I8@"NSError"12
v8@?0@"PKPaymentApplication"4
v8@?0@"PKPaymentWebServiceContext"4
v8@?0@"NPKCompanionAgentConnection"4
v8@?0@"PKPeerPaymentWebServiceContext"4
Error connecting to target device.
T@"NSXPCConnection",R
cachedUniqueIDs
T@"NSMutableSet",&,V_cachedUniqueIDs
cachedPasses
T@"NSMutableDictionary",&,V_cachedPasses
connectionAvailableActions
T@"NSMutableDictionary",&,N,V_connectionAvailableActions
connectionUnavailableWebServiceContext
T@"PKPaymentWebServiceContext",&,N,V_connectionUnavailableWebServiceContext
queueAppropriateFailedActions
TB,N,V_queueAppropriateFailedActions
hasQueuedPaymentPasses
TB,N,V_hasQueuedPaymentPasses
T@"<NPKCompanionAgentConnectionDelegate>",W,N,V_delegate
com.apple.NanoPassKit.NPKCompanionAgentConnection.PassesChanged
com.apple.NanoPassKit.NPKCompanionAgentConnection.DefaultCardChanged
metadataFields
TI,N,V_metadataFields
-[NPKProtoPassSyncStateItem writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/Generated/NPKProtoPassSyncStateItem.m
nil != self->_serialNumber
nil != self->_manifestHash
hasSequenceCounter
TI,N,V_sequenceCounter
failedPrecondition
passIDs
Ti,N,V_failedPrecondition
T@"NSMutableArray",&,N,V_passIDs
Passcode
WristDetection
AppleAccount
identifiers
T@"NSMutableArray",&,N,V_identifiers
com.apple.passkit
General
Payment
Relevance
Sync
cancelled
actualUniqueID
currentUniqueIDs
hasCancelled
TB,N,V_cancelled
hasNeedsUnlock
hasActualUniqueID
T@"NSString",&,N,V_actualUniqueID
T@"NSMutableArray",&,N,V_currentUniqueIDs
com.apple.mockPeerPaymentAccountManager
currency
minimumTransferAmounts
maximumTransferAmounts
2000.0
state
active
com.apple.NanoPassbook.Relevancy
com.apple.nanopassbook
DefaultPaymentPass
KnownPaymentPushTopics
IEFTPPUniqueID
IEFTPPApplicationIdentifier
NeedsPaymentOptions
com.apple.NPKErrorDomain
com.apple.NanoPassKit.NPKAppleAccountChanged
com.apple.NanoPassKit.NPKAppleAccountDeleted
com.apple.NanoPassKit.NPKSharedPaymentWebServiceChanged
com.apple.NanoPassKit.NPKSharedPeerPaymentWebServiceChanged
com.apple.NanoPassKit.NPKPeerPaymentAccountChangedDarwinNotification
com.apple.managedconfiguration.passcodechanged
NPKEndedServiceModeRequestDarwinNotification
NPKPeerPaymentTermsAndConditionsAcceptanceNeededDarwinNotification
NPKProvisionAccountPassOnUnlock
NPKDeviceUnlockedForPendingProvisioningDarwinNotification
com.apple.NanoPassKit.PresentApplePaySetupAlert
AppName
NPKSandboxPresentationRequestNotification
NPKSandboxPassesUniqueIDsKey
NPKSandboxkSelectedPassUniqueID
v16@?0@4I8^B12
npkHasContent
isAllCaps
NPKClassFromString
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoPassbook_Sim/NanoPassbook-886.60/NanoPassKit/NPKUtilities.m
com.apple.NanoPassKit.LastReturnedDevice
B8@?0@"NRDevice"4
com.apple.private.alloy.connectivityindicator
CPSharedResourcesDirectory
AppSupport
/Library/NanoPasses/
PaymentCards
NanoPaymentWebServiceContext.archive
NanoPaymentWebServiceBackgroundContext.archive
NanoPeerPaymentWebServiceContext.archive
NanoPeerPaymentAccount.archive
RasterizedPasses
PassSyncEngine.archive
NPKInternalSyncedSettingsChangedRemotely
NPKInternalExpressPassesInformationChangedRemotely
NPKSyncedSettings
com.apple.nanopassbook.syncedsettingschanged
NPKExpressPassesInformation
com.apple.nanopassbook.expresspassesinformationchanged
~watch
main-screen-scale
NPSFixedPriorityRootQueue
did not set
v16@?0@4@8^B12
/Library/Managed Preferences/mobile
plist
mobile
WatchOS
@"NSString"8@?0@"<NSObject>"4
self <> ''
NPKRemotePassUpgradeStatusUpgradeStarted
NPKRemotePassUpgradeStatusUpgradeCompleted
NPKRemotePassUpgradeStatusExpressModeSetupCompleted
unkown Pass Upgrade status:%ld
IDS_COMMUNICATION_ERROR
file
%@.%@
NPKRelevantTransitNotificationsCheckInterval
B8@?0@"NSDictionary"4
com.apple.nanopassbook.payment.field-detect-warning.outside-quick-pay
com.apple.nanopassbook.payment.field-detect-warning.in-quick-pay
com.apple.nanopassbook.payment.requested
com.apple.nanopassbook.payment.requested.no-passes
com.apple.nanopassbook.payment.requested.no-passcode
com.apple.nanopassbook.payment.requested.while-locked
com.apple.nanopassbook.payment.requested.while-busy
com.apple.nanopassbook.payment.requested.while-restricted
com.apple.NPKCompanionAgent.bulletins
com.apple.NPKCompanionAgent.started
com.apple.NPKCompanionAgent.WillSetExpressTransit
NPKDefaultExpressPassUniqueID
NPKDefaultApplicationIdentifier
ECFC47E2-4B1A-404F-ADA3-D23DF4B06A29
C9D5B8D6-68B4-4C31-9CB7-4CA5309D4C83
14EA79AF-4D88-460A-8900-04EA1EB9503C
4CAAF5A2-6DD3-43EE-B2D8-C3D8C4997856
en_US
DisablePassSync
MigrationReregisterNeeded
81603B90-6702-446B-A559-CBA22E92C0B8
%@:%ld
. %@
v12@?0@"PKAssertion"4@"NSError"8
NPKCompanionAgent
StoreDemoMode
com.apple.demo-settings
ENABLED
disabled
PKBarcodeFormat
PKBarcodeFormatUnknown, PKBarcodeFormatQR, PKBarcodeFormatPDF417, PKBarcodeFormatAztec, PKBarcodeFormatCode128
description
dictionaryRepresentation
stringWithFormat:
dictionary
class
allocWithZone:
init
isMemberOfClass:
copyWithZone:
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
setObject:forKey:
numberWithBool:
setRequestUUIDString:
assertionType
setAssertionType:
setHasAssertionType:
hasAssertionType
assertionTypeAsString:
StringAsAssertionType:
setPending:
setHasPending:
hasPending
.cxx_destruct
requestUUIDString
pending
_assertionType
_requestUUIDString
_pending
_has
isEqualToString:
setUniqueID:
hasUniqueID
uniqueID
_uniqueID
removeAllObjects
alloc
addObject:
count
objectAtIndex:
initWithCapacity:
countByEnumeratingWithState:objects:count:
addPassRelevancyTuples:
passRelevancyTuplesCount
clearPassRelevancyTuples
passRelevancyTuplesAtIndex:
passRelevancyTuplesType
passRelevancyTuples
setPassRelevancyTuples:
_passRelevancyTuples
addTransactionsBytes:
addTransactionPassIDs:
transactionsBytesCount
clearTransactionsBytes
transactionsBytesAtIndex:
transactionPassIDsCount
clearTransactionPassIDs
transactionPassIDsAtIndex:
transactionsBytesType
transactionPassIDsType
transactionsBytes
setTransactionsBytes:
transactionPassIDs
setTransactionPassIDs:
_transactionPassIDs
_transactionsBytes
setCatalogData:
catalogData
_catalogData
initWithService:
syncStateChanged:
setProtobufAction:forIncomingRequestsOfType:
syncStateChangeProcessed:
reconciledStateUnrecognized:
proposedReconciledState:
reconciledStateAccepted:
passSettingsChanged:
catalogChanged:
addDelegate:queue:
_archiveTimerFired
_syncTimerFired
_archivedPassSyncEngine
initWithRole:
setDelegate:
setDataSource:
_provideUpdatedLibraryStateToSyncEngineAndSyncIfNecessary:
setPassSettings:
data
initWithProtobufData:type:isResponse:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
setCatalog:
_syncSubjectToSyncTimer
initWithData:
initWithProtoPassSyncChange:
hasPassSegmentIndex
passSegmentIndex
changeUUID
passSegmentTotal
passData
hasPassSegmentTotal
npkDescription
setPassData:
handleStateChange:
hasCatalog
catalog
handleIncomingCatalog:
acceptedChangeUUID
bytes
initWithUUIDBytes:
hasChangeAccepted
changeAccepted
handleStateChangeProcessedWithUUID:changeAccepted:
unrecognizedReconciledStateHash
libraryPassSyncState
initWithProtoSyncState:
handleReconciledStateUnrecognizedWithHash:passSyncState:
proposedReconciledState
handleProposedReconciledState:
reconciledStateHash
handleReconciledStateAcceptedWithHash:
hasPassSettings
passSettings
handleIncomingPassSettings:forPassWithUniqueID:
protoPassSyncChange
catalogToSend
length
setPassSegmentIndex:
setPassSegmentTotal:
enumerateObjectsUsingBlock:
getUUIDBytes:
dataWithBytes:length:
setAcceptedChangeUUID:
setChangeAccepted:
setUnrecognizedReconciledStateHash:
protoSyncState
setLibraryPassSyncState:
setProposedReconciledState:
setReconciledStateHash:
changeType
settingsForPassWithUniqueID:
handleSettingsChanged:forPassWithUniqueID:
reconciledState
currentLibraryPassSyncStateWithReconciledState:
libraryState
setLibraryState:
diffWithBaselineState:representsMaterialDifferenceFromState:
processingChange
passSyncStateByApplyingChange:
writeToFile:options:error:
candidateChange
_syncNow
_setSyncTimerWithCandidateChange:processingChange:
syncIfNecessary
dataWithContentsOfFile:options:error:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
passSyncEngine:sendStateChange:
passSyncEngine:sendStateChangeProcessedWithUUID:changeAccepted:
passSyncEngine:sendReconciledStateUnrecognizedWithHash:currentPassSyncState:
passSyncEngine:sendProposedReconciledState:
passSyncEngine:sendReconciledStateAcceptedWithHash:
passSyncEngine:requestsAddPassData:forSyncStateItem:completion:
passSyncEngine:requestsUpdatePassData:forSyncStateItem:completion:
passSyncEngine:requestsRemovePassWithUniqueID:completion:
passSyncEngineStateChanged:
passSyncEngineEncounteredUnexpectedEvent:
passSyncEngine:receivedStateChangeProcessed:changeAccepted:
passSyncEngine:finishedProcessingChange:
passSyncEngine:dataForPassWithUniqueID:
initWithPassSyncEngineRole:
start
handlePassLibraryChanged
handleCatalogChanged:
suggestSync
dropAllMessages
setDropAllMessages:
passSyncEngine
setPassSyncEngine:
passSyncService
setPassSyncService:
passSyncQueue
setPassSyncQueue:
passSyncEngineArchiveTimer
setPassSyncEngineArchiveTimer:
passSyncEngineSyncTimer
setPassSyncEngineSyncTimer:
passSyncEngineSyncTimerCandidateChange
setPassSyncEngineSyncTimerCandidateChange:
passSyncEngineSyncTimerProcessingChange
setPassSyncEngineSyncTimerProcessingChange:
_dropAllMessages
_passSyncEngine
_passSyncService
_passSyncQueue
_passSyncEngineArchiveTimer
_passSyncEngineSyncTimer
_passSyncEngineSyncTimerCandidateChange
_passSyncEngineSyncTimerProcessingChange
sharedInstance
addPassData:completion:
needsRelevancyInformation
setNeedsRelevancyInformation:
_needsRelevancyInformation
addCurrentExpressPasseInformation:
setActualExpressPassInformation:
currentExpressPasseInformationsCount
clearCurrentExpressPasseInformations
currentExpressPasseInformationAtIndex:
currentExpressPasseInformationType
setSuccess:
setHasSuccess:
hasSuccess
hasActualExpressPassInformation
success
actualExpressPassInformation
currentExpressPasseInformations
setCurrentExpressPasseInformations:
_actualExpressPassInformation
_currentExpressPasseInformations
_success
setConfigurationDataBytes:
hasConfigurationDataBytes
configurationDataBytes
_configurationDataBytes
setUrl:
setSeid:
setCommand:
setInfoDictionary:
hasInfoDictionary
seid
command
infoDictionary
_command
_infoDictionary
_seid
_url
setAvailableProductsData:
setErrorData:
hasAvailableProductsData
hasErrorData
availableProductsData
errorData
_availableProductsData
_errorData
style
npkWatchBarcode
messageData
barcode
format
npkAccessoryType
nfcPayload
expirationDate
date
compare:
npkCompleteHashForWatchOSVersion:
manifestHash
dataWithData:
settings
appendBytes:length:
isImageSetLoaded:
message
encryptionPublicKeyData
initWithDomain:
objectForKey:
timeIntervalSinceNow
mutableCopy
removeObjectForKey:
npkSupportsHidingAccessory
npkExpired
npkCompleteHash
hasLogoImageSet
npkHasValidNFCPayload
npkIsAddValuePending
npkLastAddValueAmount
npkHandleTransitValuePendingAmount:withBalance:forPassWithID:
npkClearTransitValuePendingStateIfNecessaryForPassWithID:withBalance:
devicePaymentApplications
supportsContactlessPayment
predicateWithBlock:
filteredSetUsingPredicate:
supportsInAppPayment
isPaymentOptionSelectable
npkDeviceContactlessPaymentApplications
npkDeviceInAppPaymentApplications
allObjects
displayName
sortedArrayUsingComparator:
applicationIdentifier
devicePrimaryContactlessPaymentApplication
npkHasUserSelectableContactlessPaymentApplications
defaultPaymentApplicationForPassUniqueIdentifier:
containsObject:
devicePrimaryInAppPaymentApplication
npkHasUserSelectableInAppPaymentApplications
setDefaultPaymentApplication:forPassUniqueIdentifier:completion:
npkSortedDeviceContactlessPaymentApplications
npkSortedDeviceInAppPaymentApplications
npkDevicePaymentApplicationForAID:
npkPreferredContactlessPaymentApplication
npkPreferredInAppPaymentApplication
npkSetPreferredPaymentApplication:
appendFormat:
appendString:
setPeerPaymentWebServiceContextData:
setPeerPaymentAccountData:
hasPeerPaymentWebServiceContextData
hasPeerPaymentAccountData
peerPaymentWebServiceContextData
peerPaymentAccountData
_peerPaymentAccountData
_peerPaymentWebServiceContextData
setObject:forKeyedSubscript:
dictionaryWithDictionary:
objectForKeyedSubscript:
npkRelevancyUniqueID
npkRelevancyRelevantText
npkRelevancyTupleWithUniqueID:relevantText:
stringWithString:
array
groups
uniqueIDs
passType
copy
minusSet:
setWithArray:
intersectSet:
anyObject
addObjectsFromArray:
catalogByMergingCompanionCatalog:intoWatchCatalog:watchPasses:
unsignedIntegerValue
setServiceURL:
hasServiceURL
setForceReRegistration:
setHasForceReRegistration:
hasForceReRegistration
serviceURL
forceReRegistration
_serviceURL
_forceReRegistration
setWebServiceContextBytes:
hasWebServiceContextBytes
webServiceContextBytes
_webServiceContextBytes
setPushToken:
hasPushToken
pushToken
_pushToken
hasProposedReconciledState
_proposedReconciledState
parsePayload:payloadID:maxCount:
allowedPayloadIDs
supportedCurrencyCodes
npk_objectForKey:class:
decimalNumberWithString:
notANumber
initWithSupportedCurrencyCodes:allowedPayloadIDs:
parsePayload:payloadID:
_supportedCurrencyCodes
_allowedPayloadIDs
domain
code
userInfo
npk_errorWithDomain:code:
addEntriesFromDictionary:
errorWithDomain:code:userInfo:
addActualExpressPassInformation:
actualExpressPassInformationsCount
clearActualExpressPassInformations
actualExpressPassInformationAtIndex:
actualExpressPassInformationType
actualExpressPassInformations
setActualExpressPassInformations:
_actualExpressPassInformations
setDataToSign:
setDigestToSign:
setAid:
hasDataToSign
hasDigestToSign
entanglementMode
setEntanglementMode:
setHasEntanglementMode:
hasEntanglementMode
entanglementModeAsString:
StringAsEntanglementMode:
hasAid
dataToSign
digestToSign
_aid
_dataToSign
_digestToSign
_entanglementMode
removeObserver:name:object:
_handleNotification:
addObserver:selector:name:object:
defaultCenter
_internalNameForNotificationName:
weak_removeObserver:name:object:
stringByAppendingString:
name
object
postNotificationName:object:userInfo:
weak_addObserver:selector:name:object:
weak_removeObserver:
setPassTypeIdentifier:
passTypeIdentifier
_passTypeIdentifier
setIsAvailable:
setHasIsAvailable:
hasIsAvailable
isAvailable
_isAvailable
resolveGreenTeaDataUsageIfNecessary
_resolveGreenTeaDataUsageIfNecessaryWithCompletion:
internalQueue
setInternalQueue:
currentlyResolving
setCurrentlyResolving:
_currentlyResolving
_internalQueue
_passData
_handlePMUButtonEvent
initWithHandler:
paymentSessionSourceReceivedDelegatedButtonEvent:
_performDelegateCallback:
hasOutstandingSessions
beginLocalAuthenticationWithCompletion:
initWithQueue:
setDeferAuthorization:
startSession
setCurrentPass:
setVasPasses:
paymentSessionSource:startedPaymentSession:dueToButtonEventAtDate:
invalidateLocalAuthenticationContexts
paymentSessionSource:declinedToStartPaymentSessionDueToPreconditionState:
initWithDelegate:callbackQueue:
setDelegateHandlingButtonEvents:
setPreconditionState:
setInitialPass:
setLocalAuthenticationCoordinator:
_delegate
_buttonListener
_sessionSourceQueue
_callbackQueue
_delegateHandlingButtonEvents
_deferAuthorization
_preconditionState
_initialPass
_vasPasses
_localAuthenticationCoordinator
setProductsActionData:
hasProductsActionData
productsActionData
_productsActionData
addPassSyncStateItems:
passSyncStateItemsCount
clearPassSyncStateItems
passSyncStateItemsAtIndex:
passSyncStateItemsType
passSyncStateItems
setPassSyncStateItems:
_passSyncStateItems
numberWithUnsignedInt:
addUniqueIDs:
addManifestHashes:
setExpectedHash:
uniqueIDsCount
clearUniqueIDs
uniqueIDsAtIndex:
manifestHashesCount
clearManifestHashes
manifestHashesAtIndex:
uniqueIDsType
manifestHashesType
hasExpectedHash
setFullResyncNeeded:
setHasFullResyncNeeded:
hasFullResyncNeeded
setResyncID:
setHasResyncID:
hasResyncID
expectedHash
setUniqueIDs:
manifestHashes
setManifestHashes:
fullResyncNeeded
resyncID
_expectedHash
_manifestHashes
_resyncID
_uniqueIDs
_fullResyncNeeded
setCryptogram:
setChallengeResponse:
hasCryptogram
hasChallengeResponse
cryptogram
challengeResponse
_challengeResponse
_cryptogram
setWithObject:
sendProtobuf:toDestinations:priority:options:identifier:error:
outgoingResponseIdentifier
incomingResponseIdentifier
expectsPeerResponse
type
isResponse
context
initWithWebService:
_performTransitionToStep:withContext:
_handlePreconditionsVerified
_endProvisioningFlowWithError:
validatePreconditionsRegisterAndAssociateRemoteCredentials:
associatedCredentials
_transitionToRemoteCredentials:
_transitionToManualEntry
paymentSetupFields
identifier
paymentSetupFieldWithIdentifier:
currentValue
setCurrentValue:
_performNextActionForProvisioningState
acceptTerms
webService
targetDevice
deviceRegion
manifestForRegion:
setHeroImageManifest:
configuration
paymentSetupFeaturedNetworksForRegion:
setFeaturedNetworks:
state
_requestRequirements
_performEligibility
_performTerms
_performProvision
_handleFinished
submissionString
setCardholderName:
setPrimaryAccountNumber:
isCurrentValueFromCameraCapture
setCardholderNameInputMethod:
setPrimaryAccountNumberInputMethod:
setExpiration:
setExpirationInputMethod:
productIdentifier
setProductIdentifier:
fieldsModel
submissionValuesForDestination:
setOverlayParameters:
secureSubmissionValuesForDestination:
setSecureOverlayParameters:
eligibilityResponse
setEligibilityResponse:
setCardSecurityCode:
_newPaymentRequirementsRequest
status
requiredPaymentSetupFields
_transitionToSecondaryManualEntryWithFields:
requestRequirements:withCompletionHandler:
_newPaymentEligibilityRequest
eligibilityStatus
requestEligibility:withCompletionHandler:
termsURL
setTermsURL:
devSigned
setAllowNonSecureHTTP:
_newPaymentProvisioningRequest
requestProvisioning:withCompletionHandler:
setCardAdded:
setCredentials:
setAllowsManualEntry:
defaultPaymentSetupProvisioningFields
initWithPaymentSetupFields:
cameraFirstProvisioningEnabledForRegion:
setCameraFirstProvisioningEnabled:
setSetupFields:
updateWithPaymentSetupFields:
setError:
_sendDidTransitionFromStep:toStep:withContext:
delegate
paymentProvisioningFlowController:didTransitionFromStep:toStep:withContext:
startProvisioningFlow
acknowledgeWelcome
chooseManualEntry
handleManualEntryFields:
setWebService:
provisioningController
setProvisioningController:
currentStep
setCurrentStep:
setFieldsModel:
_webService
_provisioningController
_currentStep
_fieldsModel
initWithPendingStatusProtobuf:service:priority:maxUpdates:responseIdentifier:sendOptions:queue:updateInterval:
_sendStatusUpdate
service
pendingStatusProtobuf
responseIdentifier
statusTimer
setStatusTimer:
invalidate
dealloc
sendOptions
messagePriority
updatesSent
setUpdatesSent:
maxUpdates
initWithPendingStatusProtobuf:service:priority:maxUpdates:responseIdentifier:sendOptions:queue:
setService:
setPendingStatusProtobuf:
setMessagePriority:
setResponseIdentifier:
queue
setQueue:
setSendOptions:
setMaxUpdates:
_service
_pendingStatusProtobuf
_messagePriority
_responseIdentifier
_statusTimer
_queue
_sendOptions
_updatesSent
_maxUpdates
setAuthToken:
hasAuthToken
authToken
_authToken
setPassID:
setPreferredApplicationAID:
hasPassID
hasPreferredApplicationAID
passID
preferredApplicationAID
_passID
_preferredApplicationAID
pathForResource:ofType:
defaultManager
fileExistsAtPath:
fileURLWithPath:
initWithCGImage:scale:orientation:
resizedImageWithSize:shouldCover:
size
constraintsWithMaxSize:
resizedImage:
resizedImageToCover:
resizedImageToFit:
logoImage
setLogoImage:
backgroundImage
setBackgroundImage:
thumbnailImage
setThumbnailImage:
stripImage
setStripImage:
footerImage
setFooterImage:
bankLogoImage
setBankLogoImage:
networkLogoImage
setNetworkLogoImage:
cobrandLogoImage
setCobrandLogoImage:
cardBackgroundImage
setCardBackgroundImage:
cardBackgroundCombinedImage
setCardBackgroundCombinedImage:
loadPDFArtFromBundle:targetSize:scale:
resizeWithScreenSize:
loadPDFArtFromBundle:
setRegistrationDataBytes:
hasRegistrationDataBytes
registrationDataBytes
_registrationDataBytes
initWithPass:lazyLoadEncodedImages:
paymentPass
setLazyLoadEncodedImages:
setManifestHash:
setStyle:
relevantDate
setRelevantDate:
logoText
setLogoText:
displayProfile
backgroundColor
setBackgroundColor:
foregroundColor
setForegroundColor:
labelColor
setLabelColor:
ingestedDate
setIngestionDate:
setDevicePaymentApplications:
devicePrimaryPaymentApplication
setDevicePrimaryPaymentApplication:
setDevicePrimaryContactlessPaymentApplication:
setDevicePrimaryInAppPaymentApplication:
isPrivateLabel
setPrivateLabel:
isCobranded
setCobranded:
setDeletePending:
constraintsWithFixedSize:
blurredImageWithRadius:constraints:
localizedDescription
setLocalizedDescription:
setNfcPayload:
setCompleteHash:
hasStoredValue
setHasStoredValue:
setSettings:
issuerCountryCode
setIssuerCountryCode:
availableActions
setAvailableActions:
organizationName
setOrganizationName:
setExpressPassTypesMask:
hasAssociatedPeerPaymentAccount
setHasAssociatedPeerPaymentAccount:
decodeObjectOfClass:forKey:
setGroupID:
decodeIntegerForKey:
setWithObjects:
decodeObjectOfClasses:forKey:
setPreferredPaymentApplication:
setEffectivePaymentApplicationState:
decodeBoolForKey:
setHasUserSelectableContactlessPaymentApplications:
setLogoImageEncoded:
setBackgroundImageEncoded:
setTransitAppletState:
setFrontFieldBuckets:
setBackFieldBuckets:
setLastAddValueAmount:
setPendingAddValueDate:
encodeObject:forKey:
groupID
encodeInteger:forKey:
ingestionDate
preferredPaymentApplication
effectivePaymentApplicationState
encodeBool:forKey:
deletePending
hasUserSelectableContactlessPaymentApplications
logoImageEncoded
backgroundImageEncoded
completeHash
numberWithUnsignedInteger:
transitAppletState
frontFieldBuckets
backFieldBuckets
lastAddValueAmount
pendingAddValueDate
expressPassTypesMask
isEqualToData:
isEqualToDate:
numberWithInteger:
arrayWithObjects:count:
stringByAppendingFormat:
encodeAsData:
lazyLoadEncodedImages
isCachingEnabled
supportsInAppPaymentOnNetworks:capabilities:issuerCountryCodes:paymentApplicationStates:
acceptedForNonWebPaymentWithSupportedNetworkIdentifiers:merchantCapabilities:paymentMode:
transitPassPropertiesWithPaymentApplication:
transitProperties
isInStation
felicaProperties
isInShinkansenStation
supportsSecureCoding
setCachingEnabled:
encodeWithCoder:
initWithCoder:
initWithPass:
encodeObject:asDataInCoder:withKey:
supportsInAppPaymentOnNetworks:issuerCountryCodes:
effectiveContactlessPaymentApplicationState
fieldForKey:
isAddValuePending
isEnroute
hasValidNFCPayload
_hasStoredValue
_privateLabel
_cobranded
_deletePending
_hasUserSelectableContactlessPaymentApplications
_hasAssociatedPeerPaymentAccount
_lazyLoadEncodedImages
_logoImage
_backgroundImage
_expressPassTypesMask
_backgroundImageEncoded
_logoImageEncoded
_groupID
_manifestHash
_style
_relevantDate
_ingestionDate
_nfcPayload
_completeHash
_settings
_logoText
_backgroundColor
_foregroundColor
_labelColor
_localizedDescription
_devicePaymentApplications
_devicePrimaryPaymentApplication
_devicePrimaryContactlessPaymentApplication
_devicePrimaryInAppPaymentApplication
_preferredPaymentApplication
_effectivePaymentApplicationState
_issuerCountryCode
_availableActions
_organizationName
_transitAppletState
_frontFieldBuckets
_backFieldBuckets
_lastAddValueAmount
_pendingAddValueDate
isTransitPass
isAccessPass
setPass:
setLibraryHash:
setPreviousManifestHash:
hasLibraryHash
hasPreviousManifestHash
setLastKnownResyncID:
setHasLastKnownResyncID:
hasLastKnownResyncID
setSyncID:
setHasSyncID:
hasSyncID
pass
libraryHash
previousManifestHash
lastKnownResyncID
syncID
_catalog
_lastKnownResyncID
_libraryHash
_pass
_previousManifestHash
_syncID
_handleDeviceUnpaired:
_handleDevicePaired:
_handleDeviceBecameActive:
_handleDevicePairingFailure:
UTF8String
_handleCompanionAgentStarted
removeObserver:
valueForProperty:
deferredActions
deferredSharedPaymentWebServiceContexts
deferredAddedPaymentPasses
removeObject:
deferredPaymentPassesForDevice:
setQueueAppropriateFailedActions:
enumerateKeysAndObjectsUsingBlock:
_performDeferredActions
_cleanUpDeferredDataForPairingID:
getPairedDevices
allKeys
unionSet:
sharedDeferredActionHandler
performActionWhenCompanionAgentIsAvailable:forDevice:
deferredSharedPaymentWebServiceContextForDevice:
setDeferredSharedPaymentWebServiceContext:forDevice:
addDeferredPaymentPass:forDevice:
deferredPaymentPassUniqueIDsForDevice:
deferredPaymentPassWithUniqueID:forDevice:
setDeferredActions:
setDeferredSharedPaymentWebServiceContexts:
setDeferredAddedPaymentPasses:
_deferredActions
_deferredSharedPaymentWebServiceContexts
_deferredAddedPaymentPasses
numberWithUnsignedLongLong:
setBitmapData:
width
setWidth:
height
setHeight:
bitsPerComponent
setBitsPerComponent:
bitsPerPixel
setBitsPerPixel:
bytesPerRow
setBytesPerRow:
bitmapInfo
setBitmapInfo:
bitmapData
_bitsPerComponent
_bitsPerPixel
_bytesPerRow
_height
_width
_bitmapData
_bitmapInfo
acceptedPasses
beginUpdates
setPaymentApplication:
endUpdates
peerPaymentQuote
npkIsPeerPayment
paymentRequest
paymentSummaryItems
lastObject
firstQuoteItemOfType:
npkIsSplitPeerPayment
_hasNonPeerPaymentAcceptedPasses
filteredArrayUsingPredicate:
npkSetPassAndPaymentApplicationForAID:
npkIsSkeletonPeerPayment
npkIsSplitPeerPaymentWithAnotherPaymentMethod
npkIsSplitPeerPaymentWithoutAnotherPaymentMethod
devices
deviceForNRDevice:fromIDSDevices:
isConnected
setPasscodeConnection:
setSystemSettingsManager:
setPreflighting:
setPreflightCompletionHandler:
_checkSpaceAvailableOnSecureElement
_checkWatchConnected
_checkCompanioniCloudAccount
_checkWatchiCloudAccount
_checkPasscodeEnabledAndUnlockedState
_checkWristDetectEnabledState
_finishPresentingSetupControllerIfReadyWithSuccess:error:
watchConnected
_errorForConnectionIssue
companionAgentConnection
setSpaceAvailableOnSecureElement:
localizedStringFromNumber:numberStyle:
paymentPassUniqueIDs:
setWatchConnected:
setNeedsCompanioniCloudAccount:
setCheckedCompanioniCloudStatus:
_errorForCompanionAccountNeeded
setNeedsWatchiCloudAccount:
setCheckedWatchiCloudStatus:
_currentlyPairing
setCheckedWatchPasscodeAndUnlockedStatus:
setNeedsPasscode:
setNeedsUnlock:
setAuthRandomSetIfNecessary:
setWatchPasscodeAndUnlockedQueryDate:
passcodeConnection
checkedWatchPasscodeAndUnlockedStatus
needsPasscode
needsUnlock
_setAuthRandomIfNecessary
getRemoteDeviceState:
watchPasscodeAndUnlockedQueryDate
boolValue
setNeedsWristDetection:
boolForKey:
setCheckedWristDetectionStatus:
_errorForGenericIssue
setNewAuthRandomIfNecessaryAtBeginningOfProvisioningFlow:
isPreflighting
checkedCompanioniCloudStatus
checkedWatchiCloudStatus
checkedWristDetectionStatus
needsWatchiCloudAccount
needsWristDetection
spaceAvailableOnSecureElement
authRandomSetIfNecessary
_errorForWristDetectNeeded
needsCompanioniCloudAccount
_errorForGizmoAccountNeeded
_errorForPasscodeNeeded
_errorForUnlockNeeded
preflightCompletionHandler
bundleForClass:
localizedStringForKey:value:table:
URLWithString:
getActivePairedDevice
initWithWebService:companionAgentConnection:
addCardPreflightWithCompletion:
transferToCompanionPreflightWithCompletion:
systemSettingsManager
setCompanionAgentConnection:
_checkedWatchPasscodeAndUnlockedStatus
_checkedCompanioniCloudStatus
_checkedWatchiCloudStatus
_checkedWristDetectionStatus
_authRandomSetIfNecessary
_watchConnected
_spaceAvailableOnSecureElement
_needsPasscode
_needsUnlock
_needsCompanioniCloudAccount
_needsWatchiCloudAccount
_needsWristDetection
_preflighting
_passcodeConnection
_systemSettingsManager
_preflightCompletionHandler
_companionAgentConnection
_watchPasscodeAndUnlockedQueryDate
setHashData:
hasHashData
hashData
_hashData
_performFakeTransitHistoryFetch
transitAppletHistoryFetcher:gotTransitAppletHistory:forAppletWithAID:
initWithCallbackQueue:
setAIDToFetch:
requestTransitHistoryFetch
aidToFetch
setAidToFetch:
callbackQueue
setCallbackQueue:
_aidToFetch
initWithTransitProperties:balanceFields:
balanceFields
_transitProperties
_balanceFields
addBalanceBytes:
balanceBytesCount
clearBalanceBytes
balanceBytesAtIndex:
balanceBytesType
balanceBytes
setBalanceBytes:
_balanceBytes
numberWithInt:
setResponseDictionary:
hasResponseDictionary
setHttpStatus:
setHasHttpStatus:
hasHttpStatus
resultCode
setResultCode:
responseDictionary
httpStatus
_httpStatus
_responseDictionary
_resultCode
initWithMachServiceName:options:
setTransientPassUniqueID:
setServiceModeRequested:
interfaceWithProtocol:
setRemoteObjectInterface:
_resyncState
setInterruptionHandler:
setXpcConnection:
setInvalidationHandler:
_setQueue:
resume
_remoteObjectProxy
remoteObjectProxyWithErrorHandler:
initWithPassWithUniqueID:
setRequestServiceMode:
requestServiceMode
xpcConnection
_requestServiceMode
_xpcConnection
setUpdateRequestData:
hasUpdateRequestData
setCancelUpdate:
setHasCancelUpdate:
hasCancelUpdate
hasPass
setRequestAuthoriztion:
setHasRequestAuthoriztion:
hasRequestAuthoriztion
setShouldNotifyUser:
setHasShouldNotifyUser:
hasShouldNotifyUser
updateRequestData
cancelUpdate
requestAuthoriztion
shouldNotifyUser
_updateRequestData
_cancelUpdate
_requestAuthoriztion
_shouldNotifyUser
addPassAppletStates:
passAppletStatesCount
clearPassAppletStates
passAppletStatesAtIndex:
passAppletStatesType
passAppletStates
setPassAppletStates:
_passAppletStates
addReferenceExpressPassesInformation:
setExpressPassInformation:
referenceExpressPassesInformationsCount
clearReferenceExpressPassesInformations
referenceExpressPassesInformationAtIndex:
referenceExpressPassesInformationType
hasExpressPassInformation
expressPassInformation
referenceExpressPassesInformations
setReferenceExpressPassesInformations:
_expressPassInformation
_referenceExpressPassesInformations
setAuthRandomSet:
setHasAuthRandomSet:
hasAuthRandomSet
authRandomSet
_authRandomSet
welcomeStepContext
remoteCredentialsStepContext
manualEntryStepContext
termsAndConditionsStepContext
provisioningProgressStepContext
provisioningResultStepContext
heroImageManifest
featuredNetworks
_heroImageManifest
_featuredNetworks
credentials
allowsManualEntry
product
setProduct:
_allowsManualEntry
_credentials
_product
cameraFirstProvisioningEnabled
setupFields
_cameraFirstProvisioningEnabled
_setupFields
allowNonSecureHTTP
_allowNonSecureHTTP
_termsURL
cardAdded
error
_cardAdded
_error
isIncompatible
setIncompatible:
setDate:
setPaymentPass:
paymentApplication
transaction
setTransaction:
valueAddedServicePasses
setValueAddedServicePasses:
valueAddedServiceTransactions
setValueAddedServiceTransactions:
transitHistory
setTransitHistory:
felicaHistory
expressState
setExpressState:
_incompatible
_date
_paymentPass
_paymentApplication
_transaction
_valueAddedServicePasses
_valueAddedServiceTransactions
_transitHistory
_felicaHistory
_expressState
registerObserver:
_handleTimeoutTimer
_setTimeoutTimer
_handleTransactionCompleteDarwinNotification
unregisterObserver:
ourInternalQueue
setOurCurrentPass:
invalidated
ourCallbackQueue
paymentSession:didMakePassCurrent:
paymentSession:willActivatePass:
_scheduleDidActivateEventForPass:
ourCurrentPass
setOurVasPasses:
ourVasPasses
setOurInServiceMode:
ourInServiceMode
paymentSession:didCompleteForReason:withTransactionContext:
ourConfirmed
setOurConfirmed:
paymentSessionDidReceiveCredential:
setInvalidated:
changeCardToken
setChangeCardToken:
paymentSession:didActivatePass:
timeoutTimer
fieldDetectorDidEnterField:withProperties:
fieldDetectorDidExitField:
currentPass
setCredential:
vasPasses
deferAuthorization
setInServiceMode:
inServiceMode
confirmOrRenewSession
renewSession
deactivateSessionWithCompletion:
setOurCallbackQueue:
setOurInternalQueue:
setTimeoutTimer:
fieldDetector
setFieldDetector:
_ourConfirmed
_ourInServiceMode
_invalidated
_ourCurrentPass
_ourVasPasses
_ourCallbackQueue
_ourInternalQueue
_timeoutTimer
_fieldDetector
_changeCardToken
setPaymentWebServiceContextData:
hasPaymentWebServiceContextData
paymentWebServiceContextData
_paymentWebServiceContextData
initWithCurrencyCode:
setCurrencyCode:
stringFromNumber:
currencySymbol
currencyCode
_decimalNumberFormatter
_nonDecimalNumberFormatter
_currencyCode
dataAccessor
archiveData
npkArchiveData
_init
currentUserActivity
passListUserActivity
initWithActivityType:
setPassListUserActivity:
_saveUserActivity:
provisionPassUserActivity
_skeletonBridgeUserActivity
setProvisionPassUserActivity:
individualPassUserActivity
setIndividualPassUserActivity:
addUserInfoEntriesFromDictionary:
getPaymentPassesUserActivity
setGetPaymentPassesUserActivity:
setUpPeerPaymentUserActivity
setSetUpPeerPaymentUserActivity:
viewPeerPaymentUserActivity
setViewPeerPaymentUserActivity:
setCurrentUserActivity:
becomeCurrent
sharedContinuityCoordinator
userViewingPassList
userViewingPassWithUniqueID:isPaymentPass:
userNeedsToProvisionPassWithUniqueID:
userNeedsPaymentPasses
userNeedsToSetUpPeerPayment
userNeedsToViewPeerPaymentForHandle:
userActivityForPassWithUniqueID:
invalidateAllActivities
_provisionPassUserActivity
_getPaymentPassesUserActivity
_passListUserActivity
_individualPassUserActivity
_setUpPeerPaymentUserActivity
_viewPeerPaymentUserActivity
_currentUserActivity
assertionUUID
setAssertionUUID:
assertType
setAssertType:
_assertionUUID
_assertType
UUID
UUIDString
_sendAssertionRequest:
_outstandingAssertionStatusUpdaterWithRequest:assertionUUID:
_addOutstandingAssertionStatusUpdater:withAssertType:
_removeOutstandingAssertionStatusUpdaterWithUUID:
assertTypesUUIDsMap
transportationService
_IDSSendOptions
outstandingAssertionStatusUpdaters
initWithTransportationService:
acquireAssertionOfType:
invalidateAssertionWithUUID:
assertionsUUIDsOfType:
setOutstandingAssertionStatusUpdaters:
setAssertTypesUUIDsMap:
_transportationService
_outstandingAssertionStatusUpdaters
_assertTypesUUIDsMap
paymentWebService:addPaymentPass:withCompletionHandler:
downloadRemoteAssetsWithCompletion:
passAtURL:completion:
_handleAccountChanged:
sharedWebServiceProvider
peerPaymentAccount
updatePeerPaymentAccountWithCompletion:
bridgedClientInfoHTTPHeader
globalDomainAccessor
setBool:forKey:
synchronize
preferencesSyncManager
synchronizeNanoDomain:keys:
account
associatedPassURL
attemptToDownloadPeerPaymentPassAtURL:withWebService:completion:
provisionPeerPaymentPassWithCompletion:
initializeCloudStoreIfNecessaryWithCompletion:
initializeCloudStoreIfNecessaryWithHandler:
checkTLKsMissingWithCompletion:
resetApplePayManateeViewWithCompletion:
cloudStoreStatusWithCompletion:
peerPaymentRegisterWithURL:forceReRegistration:completion:
componentsFromLocaleIdentifier:
downloadPassIfNecessaryWithCompletion:
updateAccountWithCompletion:
bridgedClientInfo
secureElementIdentifiers
userHasDisabledPeerPayment
setUserHasDisabledPeerPayment:
provisionPeerPaymentPassWithProvisioningController:credential:completion:
initalizeCloudStoreIfNecessaryWithHandler:
peerPaymentReRegisterWithURL:pushToken:peerPaymentWebService:completion:
peerPaymentReRegisterWithURL:pushToken:completion:
initalizeCloudStoreIfNecessaryWithCompletion:
appleAccountInformation
renewAppleAccountWithCompletionHandler:
setGlobalDomainAccessor:
setPreferencesSyncManager:
_globalDomainAccessor
_preferencesSyncManager
pairingStateWithCompletion:
npkSafePairingStateWithCompletion:
dataWithBytesNoCopy:length:freeWhenDone:
initWithCGImageRef:
initWithEncodedImage:
encodedImage
createImageRef
enumerateAllPixels:
setAppDisplayName:
hasAppDisplayName
appDisplayName
_appDisplayName
transitBalance
zero
isEqualToNumber:
npkIsEnroute
npkHasTransitBalance
setCancelOutstandingRequests:
setHasCancelOutstandingRequests:
hasCancelOutstandingRequests
cancelOutstandingRequests
_cancelOutstandingRequests
weakObjectsHashTable
_outstandingSessionHashTable
isDeactivated
_handleNewContactlessSession:
_internalQueue_updateSessionWithCurrentPassAndLoyaltyState
_sessionQueue_enablePersistentCardEmulation
_sessionQueue_startContactlessSessionWithSuccessfulCompletionOnInternalQueue:
isConfirmed
setConfirmed:
contactlessSession
activatedPaymentApplication
_sessionQueue_authorizeWithDeferredAuthorization:useCredential:
_sessionQueue_invokeAppropriateCallbackForActivationWithSuccess:invokeOnSuccess:contactlessValidity:forPass:
_checkContactlessValidity:authorizationValidity:performWork:
_internalQueue_getContactlessAndAuthorizationValidityAndPerformWork:
isDeactivating
_internalQueue_deactivateSessionWithCompletion:
contactlessSessionHandle
deactivationCompletionBlocks
setDeactivationCompletionBlocks:
setDeactivating:
setDeactivated:
_internalQueue_invokeDeactivationCompletionBlocks
invalidateSessionWithCompletion:
setContactlessSessionHandle:
setContactlessSession:
_internalQueue_updateContactlessValidityAndPerformWork:
activationState
_sessionQueue_updateContactlessSessionForPass:paymentApplication:vasPasses:sessionConfirmed:deferAuthorization:
activatedValueAddedServicePasses
_checkContactlessValidity:performWork:
activateValueAddedServicePasses:
activatePaymentApplication:forPaymentPass:
startContactlessInterfaceSessionWithCompletion:targetQueue:
isFirstInQueue
invalidateSession
queuePersistentCardEmulation
authorizeAndStartCardEmulationWithCredential:deferAuthorization:
_updateAuthorizationValidity
allValues
_internalQueue_updateContactlessSessionForPass:vasPasses:
paymentSessionDidEnterField:
paymentSessionDidExitField:
paymentSessionDidReceiveStartTransaction:
paymentSessionDidReceiveActivityTimeout:
_handleTransitTransactionWithContext:
_handleConventionalTransactionWithContext:
contactlessInterfaceSession:didFinishTransactionWithContext:
paymentSessionDidSelectPayment:
paymentSessionDidSelectValueAddedService:
didSucceed
paymentSession:didFailTransactionForPass:withValueAddedServiceTransactions:forValueAddedServicePasses:
contactlessInterfaceSessionHasPendingServerRequest:
contactlessInterfaceSessionDidFailTransaction:forPaymentApplication:paymentPass:
contactlessInterfaceSessionDidTimeout:forPaymentApplication:paymentPass:valueAddedServicePasses:
contactlessInterfaceSessionDidFail:forPaymentApplication:paymentPass:valueAddedServicePasses:
contactlessInterfaceSessionDidTerminate:
contactlessInterfaceSessionDidStartTransaction:
contactlessInterfaceSessionDidReceiveActivityTimeout:
contactlessInterfaceSession:didEndPersistentCardEmulationWithContext:
contactlessInterfaceSession:didTransitionFromState:toState:
contactlessInterfaceSessionDidEnterField:withProperties:
contactlessInterfaceSession:didReceiveExpressState:
contactlessInterfaceSessionDidExitField:
contactlessInterfaceSessionDidSelectPayment:
contactlessInterfaceSessionDidSelectValueAddedService:
contactlessInterfaceSessionDidFailDeferredAuthorization:
_loyaltyEngineConfigurationChanged:
paymentSessionQueue
setPaymentSessionQueue:
contactlessValidity
setContactlessValidity:
authorizationValidity
setAuthorizationValidity:
_credential
_inServiceMode
_confirmed
_deactivating
_deactivated
_currentPass
_paymentSessionQueue
_contactlessSessionHandle
_contactlessSession
_deactivationCompletionBlocks
_contactlessValidity
_authorizationValidity
setDeviceMetadata:
hasDeviceMetadata
deviceMetadata
_deviceMetadata
setAccountData:
hasAccountData
accountData
_accountData
setLabel:
setIdentifier:
setAmount:
setDetail:
arrayWithObjects:
decimalNumberByMultiplyingBy:
decimalNumberByAdding:
amount
summaryItemWithLabel:amount:
setMerchantIdentifier:
setCountryCode:
setSupportedNetworks:
setMerchantCapabilities:
setRequiredShippingContactFields:
setRequiredBillingContactFields:
setBillingContact:
setShippingContact:
setShippingMethods:
shippingMethods
firstObject
setPaymentSummaryItems:
setGivenName:
setFamilyName:
setName:
setEmailAddress:
phoneNumberWithStringValue:
setPhoneNumber:
setStreet:
setCity:
setState:
setPostalCode:
setCountry:
setISOCountryCode:
setPostalAddress:
stopUpdatingLocation
setCompletionHandler:
initWithEffectiveBundle:
newAssertionForBundle:withReason:
requestWhenInUseAuthorization
location
completionHandler
startUpdatingLocation
setLocationFixTimeout:
setLocationManager:
setInUseAssertion:
_finishLocationFixWithLocation:
locationManager
locationFixTimeout
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
fetchLocationWithCompletion:
inUseAssertion
_completionHandler
_locationFixTimeout
_locationManager
_inUseAssertion
authorizationStatusForBundle:
locationServicesEnabled
horizontalAccuracy
timestamp
backupState
candidateState
engineRole
engineName
_sendNextStateChange
syncStateItem
syncStateHash
setReconciledState:
setBackupState:
_unexpectedEventOccurred
_sendStateChangeProcessedWithUUID:changeAccepted:
passSyncStateByAddingOrUpdatingSyncStateItem:
passSyncStateByRemovingPassWithUniqueID:
_requestAddPassData:forSyncStateItem:completion:
_requestUpdatePassData:forSyncStateItem:completion:
_requestRemovePassWithUniqueID:completion:
syncStateItems
_shouldProcessAddOrUpdateChangeOfType:changeSyncStateItem:librarySyncStateItem:reconciledSyncStateItem:candidateChange:shouldApplyToPassLibrary:shouldApplyToReconciledState:
setProcessingChange:
_finishedProcessingChange:
_sendReconciledStateUnrecognizedWithHash:currentPassSyncState:
setCandidateChange:
_receivedStateChangeProcessed:changeAccepted:
setCandidateState:
commonBaselinePassSyncStateWithState:
_sendProposedReconciledState:
stateIsSubsetOfUnionOfPassSyncStates:
_sendReconciledStateAcceptedWithHash:
_engineStateChanged
compareWithBaselinePassSyncState:outAddedPassUniqueIDs:outUpdatedPassUniqueIDs:outRemovedPassUniqueIDs:
dataSource
initWithChangeUUID:reconciledStateHash:changeType:uniqueID:syncStateItem:passData:
_sendStateChange:
sequenceCounter
_libraryState
_backupState
_reconciledState
_candidateState
_engineRole
_dataSource
_candidateChange
_processingChange
setAccountInfoData:
hasAccountInfoData
setCloudStoreIsSetup:
setHasCloudStoreIsSetup:
hasCloudStoreIsSetup
accountInfoData
cloudStoreIsSetup
_accountInfoData
_cloudStoreIsSetup
setPassAppletState:
hasPassAppletState
passAppletState
_passAppletState
addTsmRegionPushTopics:
addTsmRegionURLs:
addBrokerRegionPushTopics:
tsmRegionPushTopicsCount
clearTsmRegionPushTopics
tsmRegionPushTopicsAtIndex:
tsmRegionURLsCount
clearTsmRegionURLs
tsmRegionURLsAtIndex:
brokerRegionPushTopicsCount
clearBrokerRegionPushTopics
brokerRegionPushTopicsAtIndex:
setPrimaryRegionTopic:
tsmRegionPushTopicsType
tsmRegionURLsType
brokerRegionPushTopicsType
hasPrimaryRegionTopic
tsmRegionPushTopics
setTsmRegionPushTopics:
tsmRegionURLs
setTsmRegionURLs:
brokerRegionPushTopics
setBrokerRegionPushTopics:
primaryRegionTopic
_brokerRegionPushTopics
_primaryRegionTopic
_tsmRegionPushTopics
_tsmRegionURLs
writeToFile:atomically:
removeItemAtPath:error:
createFileAtPath:contents:attributes:
fileHandleForWritingAtPath:
writeData:
closeFile
stringByAppendingPathComponent:
serviceIdentifier
paymentStatus
availableActionsFetchDate
setServiceIdentifier:
setPaymentStatus:
setAvailableActionsFetchDate:
_serviceIdentifier
_paymentStatus
_availableActionsFetchDate
peerPaymentPassUniqueID
initWithPeerPaymentPassUniqueID:
initWithPeerPaymentPassUniqueID:paymentService:
initWithDelegate:
_fetchAllPeerPaymentTransactionsWithPeerPaymentPassID:
setPeerPaymentPassUniqueID:
addObserverForName:object:queue:usingBlock:
_transactionQueue_statusOfPaymentTransactionWithServiceIdentifier:
transactionDetails
peerPaymentStatus
_transactionsQueue_setStatus:forPaymentTransactionWithServiceIdentifier:notifyUpdate:
_transactionsQueue_transactionDetailsCreatedIfNecessaryForServiceIdentifier:
_transactionsQueue_notifyStatusUpdateOfTransactionWithServiceIdentifier:
currentLookupIdentifiers
_sharedPeerPaymentWebService
actions
peerPaymentStatusWithPaymentIdentifier:completion:
paymentService
transactionsForPaymentPassWithUniqueIdentifier:withTransactionSource:withBackingData:limit:completion:
sharedService
paymentServiceReceivedInterruption
paymentDeviceDidEnterFieldWithProperties:
paymentDeviceDidExitField
didUpdateDefaultPaymentPassWithUniqueIdentifier:
paymentPassWithUniqueIdentifier:didReceiveMessage:
paymentPassWithUniqueIdentifier:didReceiveTransaction:
paymentPassWithUniqueIdentifier:didRemoveTransactionWithIdentifier:
paymentPassWithUniqueIdentifier:didReceiveBalanceUpdate:
paymentPassWithUniqueIdentifier:didEnableMessageService:
paymentPassWithUniqueIdentifier:didEnableTransactionService:
passWithUniqueIdentifier:didReceiveValueAddedServiceTransaction:
paymentPassWithUniqueIdentifier:didUpdateWithTransitPassProperties:
paymentPassWithUniqueIdentifier:didUpdateCategoryVisualizationWithStyle:
featureApplicationAdded:
featureApplicationRemoved:
featureApplicationChanged:
statusOfPaymentTransactionWithServiceIdentifier:
availableActionsForPaymentTransactionWithServiceIdentifier:
setStatus:forPaymentTransactionWithServiceIdentifier:
peerPaymentTransactionWithServiceIdentifier:
lookupTransactionActionsIfNeededWithServiceIdentifier:
_transactionsQueue
_peerPaymentPassQueue
_peerPaymentPassUniqueID
_paymentService
_transactionDetails
_currentLookupIdentifiers
setDefaultShippingAddress:
setDefaultBillingAddresses:
setDefaultContactEmail:
setDefaultContactPhone:
setDefaultContactName:
hasDefaultShippingAddress
hasDefaultBillingAddresses
hasDefaultContactEmail
hasDefaultContactPhone
hasDefaultContactName
defaultShippingAddress
defaultBillingAddresses
defaultContactEmail
defaultContactPhone
defaultContactName
_defaultBillingAddresses
_defaultContactEmail
_defaultContactName
_defaultContactPhone
_defaultShippingAddress
setPushTopic:
hasPushTopic
pushTopic
_pushTopic
showInAppInterfaceWithPaymentRequest:forHostApplicationName:hostBundleIdentifier:hostProcessIdentifier:hostIdentifier:orientation:activationHandler:
showInAppInterfaceWithRemotePaymentRequest:activationHandler:
showInAppInterfaceWithSkeletonPeerPaymentQuote:activationHandler:
clearInAppInterfaceForSkeletonPeerPaymentQuote:withError:
remoteInterfacePresenterConnectionInterrupted:
presentInAppPaymentInterfaceWithPaymentRequest:forHostApplicationName:hostBundleIdentifier:hostProcessIdentifier:hostIdentifier:orientation:completion:
presentContinuityPaymentInterfaceWithRemotePaymentRequest:completion:
showInAppInterfaceWithSkeletonPeerPaymentQuote:completion:
presentSetupApplePayAlert:
isEqualToChange:
safelyAddObject:
setChangeUUID:
setChangeType:
setSyncStateItem:
unsignedIntValue
_changeUUID
_reconciledStateHash
_changeType
_syncStateItem
peerPaymentService
setAccount:
_updateAccount
initWithPeerPaymentService:
postNotificationName:object:
accountWithCompletion:
_peerPaymentService
_account
hasReconciledStateHash
localManifestHashes
remoteManifestHashes
setLocalManifestHashes:
setRemoteManifestHashes:
_localManifestHashes
_remoteManifestHashes
_migrationDelegateQueue
_handleHasMigrationDataSource
setPassDBIsAvailable:
database
_preconditionsMetForDatabaseOpen
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
_executeSQL:
_table:containsColumn:
_migrationDataSource
updateDevicePaymentApplicationsWithSecureElementIdentifiers:
latestWatchOSMajorVersion
setObject:atIndexedSubscript:
initWithDictionary:bundle:
setMissingImageSetsFromObject:
flushLoadedImageSets
_enumerateAllPassesForMigration:
_updateNFCPayloadDuringMigration:
_updatePrivateLabelAndCobrandDuringMigration:
_updateDeviceAndPreferredPaymentApplicationsDuringMigration:
_updateIngestedDatesDuringMigration:
_updateEffectivePaymentApplicationStateDuringMigration:
_updateHasUserSelectableContactlessPaymentApplications:
_updateEncodedPaymentPassDuringMigration:
_updateHasStoredValueDuringMigration:
_updateSettingsDuringMigration:
_updateCompleteLocalHashesDuringMigration:
_updateAvailableActionsDuringMigration:
_updateOrganizationNamesDuringMigration:
_updateFrontAndBackFieldBucketsDuringMigration:
_updateLocalizedDescriptionDuringMigration:
_updateDevicePaymentApplicationsDuringMigration:
_updatePrimaryContactlessAndInAppPaymentApplicationsDuringMigration:
_updateEncodedImageSetsDuringMigration:
_repairEncodedImagesDuringMigration:
_updateIssuerCountryCodesDuringMigration:
_updateExpressPassTypesMaskDuringMigration:
_updateCompleteRemoteHashesDuringMigration
_migrateDatabase:
_notifyDatabaseChangedExternally
_notifyForFirstUnlock
stringWithUTF8String:
_decodeObjectOfClass:fromStatement:column:
_decodeObjectOfClasses:fromStatement:column:
dateWithTimeIntervalSinceReferenceDate:
initForReadingFromData:error:
_loadInitialManifestLocked
_savePassLocked:locallyAdded:wasUpdate:
_libraryHashLockedForWatchOSMajorVersion:
_notifyDatabaseChangedWithNoop:
_saveDiffLocked:forPassWithUniqueID:
_removePassWithUniqueIDLocked:
_performTransactionWithBlock:
_saveTransaction:forPassWithUniqueID:withPaymentCredentialType:shouldTrim:
paymentNetworkIdentifier
isCloudKitArchived
_removeTransactionWithServiceIdentifierLocked:forPassWithUniqueID:
_saveTransactionLocked:forPassWithUniqueID:
_trimTransactionsForPassWithUniqueIDLocked:withPaymentCredentialType:
_notifyTransactionAddedOrUpdated:forPassWithUniqueID:
_transactionWithIdentifierLocked:
_removeTransactionWithIdentifier:forPassWithUniqueID:
_notifyTransactionRemoved:forPassWithUniqueID:
_transactionsForUniqueIDLocked:withTransactionSource:withBackingData:startDate:endDate:orderByDate:limit:
_transactionWithServiceIdentifierLocked:
_passUniqueIDForTransactionWithIdentifier:
_passUniqueIDForTransactionWithServiceIdentifier:
_transitAppletStateForPassWithUniqueIDLocked:
_setTransitAppletStateLocked:forPassWithUniqueID:
_paymentBalancesForPassWithUniqueIDLocked:
_setPaymentBalancesLocked:forPassWithUniqueID:
_setCurrentEphemeralTransactionIdentifier:forPassWithUniqueID:
_currentEphemeralTransactionIdentifierForPassWithUniqueID:
_transactionsWithCloudKitArchivedState:
_setLastAddValueAmountLocked:forPassWithUniqueID:
_lastAddValueAmountForPassWithUniqueIDLocked:
_setPendingAddValueDateLocked:forPassWithUniqueID:
_pendingAddValueDateForPassWithUniqueIDLocked:
passDescriptions
transactionsForPassWithUniqueID:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:
currentEphemeralTransactionIdentifierForPassWithUniqueID:
paymentBalancesForPassWithUniqueID:
setTransitAppletState:forPassWithUniqueID:
setLastAddValueAmount:forPassWithUniqueID:
setPendingAddValueDate:forPassWithUniqueID:
sharedDatabase
passForUniqueID:
setPreferredPaymentApplication:forPaymentPass:
saveTransaction:forPassWithUniqueID:withPaymentCredentialType:
setCurrentEphemeralTransactionIdentifier:forPassWithUniqueID:
setPaymentBalances:forPassWithUniqueID:
_notifyDatabaseChangedWithNoop:firstUnlock:
_passDBIsAvailableLocked
_passForUniqueIDLocked:includeImageSets:
_getPreferredPaymentApplicationForPaymentPass:aid:
_getDeletePendingForUniqueID:
diff:
deleteStatement
insertStatement
setIngestedDate:
timeIntervalSinceReferenceDate
stringValue
deleteTransactionsForPassStatement
insertTransactionStatement
transactionDate
transactionSource
transactionType
hasNotificationServiceData
removeTransactionWithServiceIdentifierStatement
removeTransactionStatement
trimTransactionsForPassStatement
selectTransactionsStatementWithTransactionSource:orderByDate:
distantPast
distantFuture
selectCloudKitArchivedTransactionsStatement
selectTransactionWithIdentifierStatement
selectTransactionWithServiceIdentifierStatement
selectPassUniqueIDAsssociateToTransactionWithIdentifierStatement
selectPassUniqueIDAsssociateToTransactionWithServiceIdentifierStatement
selectTransitAppletStateForPassStatement
updateTransitAppletStateForPassStatement
insertEphemeralTransactionStatement
deleteEphemeralTransactionByPassUniqueIDStatement
currentEphemeralTransactionIdentifierStatement
selectLastAddValueAmountForPassStatement
updateLastAddValueAmountForPassStatement
selectPendingAddValueDateForPassStatement
updatePendingAddValueDateForPassStatement
selectBalancesForPassStatement
updateBalancesForPassStatement
stringWithCString:encoding:
_executeSQLQuery:processResultsBlock:
integerValue
intValue
selectPassAndImageSetsDataStatement
selectPassDataStatement
selectPassDiffStatement
insertDiffStatement
passForUniqueID:includeImageSets:
_diffForUniqueIDLocked:
updateDeletePendingStatement
selectDeletePendingStatement
paymentApplications
updatePreferredAIDStatement
selectPreferredAIDStatement
arrayWithArray:
libraryHashForWatchOSMajorVersion:
objectAtIndexedSubscript:
caseInsensitiveCompare:
sortedArrayUsingSelector:
npkComprehension:
manifestHashesForWatchOSMajorVersion:
dictionaryWithCapacity:
enumerateAllPassesAndDescriptionsWithBlock:includeImageSets:
evaluateWithObject:
_databaseVersionExists:valid:
maxDatabaseVersion
_updateDatabaseVersionRow:
_insertDatabaseVersionRow:
_attemptDatabaseOpen
setMigrationDataSource:
savePass:isLocalPass:
saveDiff:forPassWithUniqueID:
removePassWithUniqueID:
rebuildDatabaseWithPasses:
saveTransaction:forPass:
removeTransactionWithIdentifier:forPassWithUniqueID:
transactionWithIdentifier:
transactionWithServiceIdentifier:
passUniqueIDForTransactionWithIdentifier:
passUniqueIDForTransactionWithServiceIdentifier:
transitAppletStateForPassWithUniqueID:
transactionsWithCloudKitArchivedState:
lastAddValueAmountForPassWithUniqueID:
pendingAddValueDateForPassWithUniqueID:
restoreBlockForVolatilePassData
passDBIsAvailable
numberOfPasses
diffForUniqueID:
setDeletePending:forUniqueID:
preferredPaymentApplicationForPaymentPass:
enumerateAllPassesWithBlock:includeImageSets:
hasPassesMatchingPassDescriptionPredicate:
filteredPassesUsingPassDescriptionPredicate:includeImageSets:
_handleDatabaseChangedExternally
_handleFirstUnlock
_database
_deleteStatement
_insertStatement
_insertDiffStatement
_selectPassDataStatement
_selectPassAndImageSetsDataStatement
_selectPassDiffStatement
_updateDeletePendingStatment
_selectDeletePendingStatement
_updatePreferredAIDStatement
_selectPreferredAIDStatement
_insertTransactionStatement
_removeTransactionStatement
_removeTransactionWithServiceIdentifier
_selectTransactionsStatement
_selectTransactionsStatementWithSource
_selectTransactionsStatementWithoutSource
_selectTransactionWithIdentifierStatement
_selectTransactionWithServiceIdentifierStatement
_selectPassUniqueIDAsssociateToTransactionWithIdentifierStatement
_selectPassUniqueIDAsssociateToTransactionWithServiceIdentifierStatement
_deleteTransactionsForPassStatement
_trimTransactionsForPassStatement
_selectTransitAppletStateForPassStatement
_updateTransitAppletStateForPassStatement
_insertEphemeralTransactionStatement
_deleteEphemeralTransactionByPassUniqueIDStatement
_currentEphemeralTransactionIdentifierStatement
_selectLastAddValueAmountForPassStatement
_updateLastAddValueAmountForPassStatement
_selectPendingAddValueDateForPassStatement
_updatePendingAddValueDateForPassStatement
_selectCloudKitArchivedTransactionsStatement
_selectBalancesForPassStatement
_updateBalancesForPassStatement
_dbQueue
_isInTransaction
_manifest
_passDescriptions
_libraryHashes
_externallyChangedBroadcasts
_sendingLocalNotifyDatabaseChanged
_needsMoreLocalNotifyDatabaseChanged
_passDBIsAvailable
_initializeHIDClient
_handleButtonEvent:
setHidSystemClient:
setHidSystemQueue:
buttonHandler
setButtonHandler:
hidSystemClient
hidSystemQueue
_buttonHandler
_hidSystemClient
_hidSystemQueue
hasUnrecognizedReconciledStateHash
hasLibraryPassSyncState
_libraryPassSyncState
_unrecognizedReconciledStateHash
sharedServiceModeRequestController
serviceModeRequested
_serviceModeRequested
setProvisioningDataBytes:
hasProvisioningDataBytes
provisioningDataBytes
_provisioningDataBytes
setSetAuthRandomIfNotPaired:
setHasSetAuthRandomIfNotPaired:
hasSetAuthRandomIfNotPaired
setAuthRandomIfNotPaired
_setAuthRandomIfNotPaired
_rawDefaultBillingAddresses
_contactFromEncodedData:
deleteDefaultShippingAddress
deleteDefaultContactEmail
deleteDefaultContactPhone
deleteDefaultContactName
_billingAddressDictionaryFromEncodedData:
_setRawDefaultBillingAddresses:
_deleteAllDefaultBillingAddresses:
setTransactionDefaultsRequest
handleSetTransactionDefaultsRequest:
initWithQueue:takeOutTransactions:
setRemainingWork:
setTakeOutTransactions:
performingWork
remainingWork
setPerformingWork:
removeObjectAtIndex:
workQueueName
takeOutTransactions
_onQueue_doWorkIfNecessary
performWork:
setWorkQueueName:
_performingWork
_takeOutTransactions
_workQueueName
_remainingWork
addCardAIDs:
cardAIDsCount
clearCardAIDs
cardAIDsAtIndex:
cardAIDsType
cardAIDs
setCardAIDs:
_cardAIDs
_queue_updateExpressPasses
updateExpressPasses
initWithPaymentService:passLibrary:distributedNotificationCenter:delegate:
_transitionToStatus:forExpressPass:
expressPassController:didStartTransactionForPass:
expressPassController:didCompleteTransactionForPass:
expressPassController:didFailTransactionForPass:
distributedNotificationCenter
_handleEnterNearFieldNotification:
_handleExpressTransactionStartNotification:
_handleExpressTransactionTimeOutNotification:
_handleExpressTransactionEndNotification:
_handleExpressTransactionFailedNotification:
_handleExitNearFieldNotification:
_handlePassesLibraryChangedNotification:
_expressPassesInformationWithAutomaticSelectionTechnologyType:
passUniqueIdentifier
expressPasses
_transactionStartedWithApplicationIdentifier:
_transactionEndedWithApplicationIdentifier:
_transactionFailedWithApplicationIdentifier:
_queue_expressPassForTransactionApplicationIdentifier:
paymentApplicationIdentifiers
enumerateCriteriaWithHandler:
_queue_paymentService
expressPassesInformation
_startListeningNotifications
passLibrary
passWithUniqueID:
_stopListeningNotifications
setExpressPassesInformation:
setExpressPasses:
expressPassController:didUpdateExpressPasses:expressPassesInformation:
supportsExpress
technologyType
reset
currentTransactionPass
setCurrentTransactionPass:
_expressPassChangedNotifyToken
_transactionStatus
_currentTransactionPass
_expressPassesInformation
_passLibrary
_distributedNotificationCenter
_expressPasses
setMissing:
setHasMissing:
hasMissing
missing
_missing
peerPaymentServiceURL
npkPossiblyOverriddenPeerPaymentServiceURL
_invokeCompletionHandlerForInvalidation
externalizedContext
evaluatePolicy:options:reply:
localAuthenticationQueue
setLocalAuthenticationQueue:
inProgressContext
setInProgressContext:
completedContext
setCompletedContext:
completedCredential
setCompletedCredential:
completedError
setCompletedError:
_localAuthenticationQueue
_inProgressContext
_completedContext
_completedCredential
_completedError
setUnlockRequired:
setHasUnlockRequired:
hasUnlockRequired
unlockRequired
_unlockRequired
setRelevantText:
hasRelevantText
relevantText
_relevantText
setSignedData:
setCertsBytes:
setSignatureInfoBytes:
hasSignedData
hasCertsBytes
hasSignatureInfoBytes
signedData
certsBytes
signatureInfoBytes
_certsBytes
_signatureInfoBytes
_signedData
insertOrUpdatePaymentTransaction:forPassUniqueIdentifier:paymentApplication:completion:
processTransitTransactionEventWithHistory:transactionDate:forPaymentApplication:withPassUniqueIdentifier:expressTransactionState:
setCardType:
hasCardType
cardType
_cardType
passPropertiesForPass:
_updateTransitBalanceFields
_balanceByIDWithBalances:
_primaryDisplayableBalanceFieldWithBalancesByID:
_backOfThePassBalanceFieldsWithBalancesByID:
displayableTransitBalance
bundleWithIdentifier:
initWithLabel:formattedValue:identifier:primaryBalance:
isContentLoaded
_balanceFieldsWithBalancesByID:passFields:maximumCount:
label
formattedValue
foreignReferenceType
foreignReferenceIdentifier
_fieldWithBalance:
localizedTitle
initWithLabel:formattedValue:identifier:
setTransitPassProperties:
setServerBalances:
transitBalanceFields
transitPassProperties
serverBalances
_transitBalanceFields
_transitPassProperties
_serverBalances
handleAccountsChangedNotification:
lastAccountUpdateDate
forceAccountRefresh
updateAccountWithIdentifier:completion:
accountDetails
setLastAccountUpdateDate:
_updateAccountDetailsWithAccount:
accountWithIdentifier:completion:
setAccountDetails:
creditDetails
accountSummary
requiresDebtCollectionNotices
availableCredit
currentBalance
balanceSummary
pendingPurchases
accountPassManager:didUpdateAccount:
initForAccountIdentifier:
refreshAccountIfNecessary
accountPassDetails
accountIdentifier
_delegateCallbackQueue
_accountIdentifier
_lastAccountUpdateDate
_accountDetails
initWithContext:responseQueue:
_webServiceContext
setContext:
_peerPaymentWebServiceContext
peerPaymentWebService
_peerPaymentAccount
setPeerPaymentAccount:
_deviceFailedToPair:
secureElementID
setDeviceID:
initWithContext:targetDevice:archiver:
initWithCompanionAgentConnection:
peerPaymentTargetDevice
setPeerPaymentService:
setPeerPaymentWebService:
sharedPaymentWebServiceContextForDevice:
setTransactionServiceDisabled:
setMessageServiceDisabled:
setIgnoreProvisioningEnablementPercentage:
sharedPeerPaymentWebServiceContextForDevice:
peerPaymentAccountForDevice:
archiveContext:
archiver
setSharedPaymentWebServiceContext:forDevice:
sendWebServiceContextToWatch:
handlePreconditionNotMetWithUniqueIDs:preconditionDescription:shouldUnregister:
handlePushToken:
handleUpdatePaymentPassWithTypeIdentifier:
handlePreferredAID:forPassWithUniqueID:
handlePaymentTransactions:appletStates:forUniqueIDs:
handleAppletState:forUniqueID:
handleRemoveTransactionsWithIdentifiers:
handleBalanceUpdate:forUniqueID:
archiveWebServiceContext:
archiveWebServiceBackgroundContext:
setNewAuthRandom:
handlePaymentWebServiceContextFromWatch:
sendWebServiceContextToWatch
showPaymentSetupForAppDisplayName:
sendPaymentOptionsDefaultsToWatch
handleUpdatedPeerPaymentWebServiceContext:account:
handleDownloadAllPaymentPasses
checkCompanionPeerPaymentRegistrationState
loadWebService
setTargetDevice:
setPeerPaymentTargetDevice:
_targetDevice
_peerPaymentWebService
_peerPaymentTargetDevice
connection
setSharedPeerPaymentWebServiceContext:forDevice:
setConnection:
_connection
setApplicationIdentifier:
hasApplicationIdentifier
setRequestAuthorization:
setHasRequestAuthorization:
hasRequestAuthorization
requestAuthorization
_applicationIdentifier
_requestAuthorization
addConflictingExpressPassIdentifiers:
addConflictingReferenceExpressPassIdentifiers:
conflictingExpressPassIdentifiersCount
clearConflictingExpressPassIdentifiers
conflictingExpressPassIdentifiersAtIndex:
conflictingReferenceExpressPassIdentifiersCount
clearConflictingReferenceExpressPassIdentifiers
conflictingReferenceExpressPassIdentifiersAtIndex:
conflictingExpressPassIdentifiersType
conflictingReferenceExpressPassIdentifiersType
conflictingExpressPassIdentifiers
setConflictingExpressPassIdentifiers:
conflictingReferenceExpressPassIdentifiers
setConflictingReferenceExpressPassIdentifiers:
_conflictingExpressPassIdentifiers
_conflictingReferenceExpressPassIdentifiers
serialNumber
hasSequenceCounter
initWithPassTypeIdentifier:serialNumber:sequenceCounter:manifestHash:
setSerialNumber:
setSequenceCounter:
setHasSequenceCounter:
initWithProtoSyncStateItem:
protoSyncStateItem
initWithSyncStateItems:
senderAddress
recipientAddresses
_internalQueue_lookupRecipientInformationWithAddress:senderAddress:
activeConversation
_newPeerPaymentController
recipientPhoneOrEmail
displayNameForRecipientAddress:
displayNameForRecipientAddress:foundInContacts:
_internalQueue_performPaymentWithAmount:requestToken:completion:
currentPeerPaymentController
setCurrentPeerPaymentController:
_displayableErrorWithError:
receiveCurrency
currency
_skeletonPeerPaymentQuoteWithPeerPaymentController:selectedAmount:recipient:
selectMode:
quoteWithAmount:requestToken:completion:
performQuote:completion:
identifyRecipientWithAddress:senderAddress:completion:
currentRecipientAddressLookup
phoneOrEmail
setCurrentRecipientAddressLookup:
setPhoneOrEmail:
_postNotificationWithRecipient:error:
_negativeBalanceErrorWithUnderlyingError:
_ambiguousSenderAddressErrorWithUnderlyingError:
_lockedOrRestrictedAccountErrorWithUnderlyingError:
_unknownPaymentErrorWithUnderlyingError:
countryCode
sendToUserFeatureDescriptor
supportedNetworks
merchantIdentifier
merchantCapabilities
decimalNumberBySubtracting:
initWithDictionary:
setRecipient:
initWithPeerPaymentWebService:
setActiveConversation:
senderPhoneOrEmail
recipientDisplayName
recipientFoundInContacts
recipient
lookupRecipientInformationIfNecessary
performPaymentWithAmount:requestToken:completion:
lookupRecipientInformationWithAddress:senderAddress:
conversationContext
setConversationContext:
_activeConversation
_recipient
_conversationContext
_currentRecipientAddressLookup
_currentPeerPaymentController
setAccountIdentifier:
hasAccountIdentifier
isEqualToPassSyncStateItem:
_serialNumber
_sequenceCounter
arrayByAddingObjectsFromArray:
appendData:
SHA256Hash
isEqualToPassSyncState:
setSyncStateItems:
initWithPasses:
stateContainsSyncStateItem:
_syncStateItems
setHasPassSettings:
_passSettings
setHasChangeAccepted:
_acceptedChangeUUID
_changeAccepted
startTest
_handlePreconditionsStep
_handleWelcomeStepWithContext:
_handleRemoteCredentialsStepWithContext:
_handleManualEntryStepWithContext:
_handleTermsAndConditionsStepWithContext:
_handleProvisioningProgressStepWithContext:
_handleProvisioningResultStepWithContext:
setDateFormat:
dateFromString:
localizedDisplayName
localizedPlaceholder
absoluteString
flowController
setFlowController:
_flowController
initWithPaymentService:delegate:
_transitPassBalanceModelWithPass:currentModel:
_loadPassContentIfNeeded:
_fetchMostRecentInfoForPass:
_notifyDelegateOfUpdatedTransitPassInfoForModel:
_updatePassTransitPassesInfoManagerForPassUiniqueID:updateBlock:
_fetchMostRecentTransitPropertiesForPass:
_fetchMostRecentBalancesForPass:
loadContentAsyncWithCompletion:
balancesForPaymentPassWithUniqueIdentifier:completion:
transitStateWithPassUniqueIdentifier:paymentApplication:completion:
transitPassesInfoManager:didUpdatePassInfo:withPassUniqueID:
setPasses:
passes
addPass:
refreshAllPasses
passInfoForForPassWithUniqueID:
_transitPassBalanceModelsByPassUniqueID
objectUniqueID
updateSettings:forPassWithUniqueID:
updateSettings:
setObjectUniqueID:
_objectUniqueID
setAccountsRequiringProvisioningData:
setAccountsOnDeviceData:
hasAccountsRequiringProvisioningData
hasAccountsOnDeviceData
accountsRequiringProvisioningData
accountsOnDeviceData
_accountsOnDeviceData
_accountsRequiringProvisioningData
_dismissExpressTransitAlert
expressTransitInterfaceController:transitAppletStateForUniqueID:
setTransactionStartAppletState:
expressTransitPass
expressTransitPaymentApplication
expressTransitInterfaceControllerRequestsInterfaceUpdate:concreteTransactions:ephemeralTransaction:transactionStatus:forPass:paymentApplication:withAppletState:presentIfNecessary:completion:
_scheduleDismissalOfExpressTransitAlertWithTimeout:
expressTransitInterfaceController:requestsPlayingOfSystemSoundID:
transactionStartAppletState
appletHistoryFetcher
objectsPassingTest:
setExpressTransitPass:
setExpressTransitPaymentApplication:
dismissalTimer
expressTransitInterfaceControllerRequestsDismissalOfInterfaceForExpressTransitTransactionComplete:
processUpdateWithAppletHistory:concreteTransactions:ephemeralTransaction:
candHandleExpressEventsFromPass:
setDismissalTimer:
setAppletHistoryFetcher:
expressPassController
_dismissalTimer
_appletHistoryFetcher
_expressTransitPass
_expressTransitPaymentApplication
_expressPassController
_transactionStartAppletState
setLastKnownReconciledPassSyncStateHash:
hasLastKnownReconciledPassSyncStateHash
changeTypeAsString:
StringAsChangeType:
hasSyncStateItem
hasPassData
setHasPassSegmentIndex:
setHasPassSegmentTotal:
lastKnownReconciledPassSyncStateHash
_lastKnownReconciledPassSyncStateHash
_passSegmentIndex
_passSegmentTotal
exceptionWithName:reason:userInfo:
raise
addAppletsBytes:
lifecycleStatesCount
clearLifecycleStates
lifecycleStatesAtIndex:
addLifecycleStates:
activationStatesCount
clearActivationStates
activationStatesAtIndex:
addActivationStates:
appletsBytesCount
clearAppletsBytes
appletsBytesAtIndex:
appletsBytesType
lifecycleStates
setLifecycleStates:count:
activationStates
setActivationStates:count:
appletsBytes
setAppletsBytes:
_activationStates
_lifecycleStates
_appletsBytes
isPrimaryBalance
_isPrimaryBalance
_label
_formattedValue
_identifier
messageIdentifier
setMessageIdentifier:
errorHandler
setErrorHandler:
_messageIdentifier
_errorHandler
mainBundle
bundleIdentifier
setResponseQueue:
queueTSMConnectionResponse:
setProtobufAction:forIncomingResponsesOfType:
provisioningDataResponse:
registrationDataResponse:
configurationDataResponse:
signDataResponse:
secureElementGetAppletsResponse:
secureElementRemoveAppletsResponse:
setNewAuthRandomResponse:
didRegisterResponse:
dumpLogsResponse:
pendingRemovalResponse:
updatePaymentPass:
updatePushToken:
preconditionNotMet:
handleValueAddedServiceTransactions:
preferredAIDRequest:
preferredAIDResponse:
handleWebServiceContextDidChangeRequest:
handleWebServiceContextNeededRequest:
handlePaymentTransactions:
handleRemovedTransaction:
setExpressPassResponse:
removeExpressPassesWithCardTypeResponse:
removeExpressPassWithUniqueIdentifierResponse:
conflictingExpressPassIdentifiersForPassInformationResponse:
handleUpdatedAppletState:
getPairingInfoResponse:
handleShowPaymentSetupRequest:
enableServiceModeResponse:
handleTransactionDefaultsNeededRequest:
handleCompanionMigrationResponse:
peerPaymentRegisterResponse:
peerPaymentUnregisterResponse:
handleUpdatedPeerPaymentWebServiceContext:
provisionPeerPaymentPassResponse:
updatePeerPaymentAccountResponse:
handlePeerPaymentTermsAndConditionsAcceptanceRequest:
updatedAccountsForProvisioningResponse:
deviceMetadataResponse:
updateAccountWithIdentifierResponse:
handleDeviceUnlockedForPendingProvisioningRequest:
performDeviceCheckInResponse:
availableProductsResponse:
performProductActionResponse:
checkTLKsMissingResponse:
initializeCloudStoreIfNecessaryWithHandlerResponse:
resetApplePayManateeViewResponse:
downloadAllPaymentPasses:
checkCompanionPeerPaymentRegistrationState:
initializeCloudStoreIfNecessaryResponse:
cloudStoreStatusResponse:
markAllAppletsForDeletionResponse:
handleBalanceChange:
remotePassUpgradeResponse:
setProvisioningService:
setOutstandingRequests:
outstandingRequests
remoteDeviceAssertionManager
provisioningActiveDeviceAssertion
setProvisioningActiveDeviceAssertion:
setActivePairedDevice:withActiveDeviceAssertionHandler:
paymentPassWithUniqueID:reply:
paymentPassesWithPrimaryAccountIdentifier:completion:
_setOrResetCleanupTimerForRequest:
_sendProtobuf:responseExpected:
_deviceIsDaytonaOrLater
_deviceIsFortuneOrLater
_getPairingInfoAndSetAuthRandomIfNotPaired:completion:
_setNewAuthRandomReturningPairingState:
_setNewAuthRandomIfNecessaryReturningPairingState:
responseQueue
setLocation:
deviceName
phoneNumber
setDeviceName:
setDeviceSerialNumber:
setDeviceUDID:
setProductType:
setSecureElementIdentifier:
initWithUUIDString:
supportsCapability:
setSupportsAccessExpressMode:
paymentWebService:signData:withCompletionHandler:
paymentWebService:didRegisterWithRegionMap:primaryRegionTopic:
regions
_supportedRegionsForWebService:
removeAIDsFromSecureElement:withCompletion:
savePaymentPass:forDevice:completion:
downloadRemoteAssetsWithScreenScale:suffix:completion:
removePaymentPassWithUniqueID:forDevice:waitForConfirmation:completion:
redownloadAllPaymentPassesWithCompletion:
initWithIdentifier:lifecycleState:
_sendProtobuf:responseExpected:extraOptions:
failedPrecondition
passIDs
insertOrUpdateValueAddedServiceTransaction:forPassUniqueIdentifier:paymentTransaction:completion:
scheduleAutomaticPresentationAvailableNotificationForPassWithUniqueIdentifier:handler:
identifiers
provisioningService
setIdentifiers:
setPassIDs:
actualUniqueID
_expressPassesInformationFromDataArray:
cancelled
expressMode
paymentApplicationIdentifier
initForExpressMode:withPassUniqueIdentifier:paymentApplicationIdentifier:
conflictingExpressPassIdentifiersForPassInformation:withReferenceExpressState:completion:
upgradeStatus
expressPassInformations
handlePeerPaymentTermsAndConditionsRequestFromGizmo
handleDeviceUnlockedForPendingProvisioningRequestFromGizmo
needsRegistration
primaryRegion
accountServiceURL
hasAccounts
accountServiceEnabledForRegion:
setMetadataFields:
applyServiceURL
hasApplications
applyServiceEnabledForRegion:
applyServiceFeaturesForRegionMeetingEnablementThreshold:
_deviceSupportedFeatureIdentifiers
setByRemovingObject:
availableProducts
setDefaultCardUniqueID:completion:
supportsExpressForAutomaticSelectionTechnologyType:
initForPaymentPass:withTechologyTest:
_upgradeExpressAutomaticSelectionCriteriaRequestForPass:
_expressPassInformationWithPass:upgradeRequst:
deviceSupportMultipleExpressPasses
_multipleExpressTransitPassPaymentWebService:handlePotentialExpressPassInformation:upgradeRequest:pass:withCompletionHandler:
_singleExpressTransitPassPaymentWebService:handlePotentialExpressPassInformation:withCompletionHandler:
paymentWebService:passesOfType:
_categoryIdentifierForPass:
associatedAccountServiceAccountIdentifier
_expressModesFromExpressPassesInformation:
remotePassUpgradeWithRequest:pass:requireAuthorization:notifyUserOnPairedDevice:updateBlock:
setExpressWithPassInformation:requestAuthorization:completion:
initDummyExpressInfoForAutomaticSelectionCriteriaUpgradeRequest:paymentPass:withTechologyTest:
instancesRespondToSelector:
deviceClass
deviceVersion
_upgradeExpressAutomaticSelectionCriteriaRequestForPass:deviceClass:OSVersion:SEID:
upgradeRequests
minimumOSVersion
initWithMinimumVersion:maximumVersion:
versionMeetsRequirements:deviceClass:
secureElementIdentifier
technologyTypes
registrationDate
getAllDevices
paymentWebServiceDidUpdateConfiguration:
paymentWebService:queueConnectionToTrustedServiceManagerForPushTopic:withCompletion:
paymentWebService:configurationDataWithCompletionHandler:
paymentWebService:registrationDataWithAuthToken:completionHandler:
paymentWebService:signData:signatureEntanglementMode:withCompletionHandler:
paymentWebService:provisioningDataWithCompletionHandler:
paymentWebService:deleteApplicationWithAID:
paymentWebService:filterVerificationChannels:
paymentSupportedInCurrentRegionForWebService:
deviceDescriptionForPaymentWebService:
supportsAutomaticPassPresentation
noteProvisioningUserInterfaceDidAppear
noteProvisioningUserInterfaceDidDisappear
noteProvisioningDidBegin
noteProvisioningDidEnd
paymentWebService:setNewAuthRandomIfNecessaryReturningPairingState:
paymentWebService:setNewAuthRandom:
paymentWebService:hasPassesOfType:
paymentWebService:canProvisionPaymentPassWithPrimaryAccountIdentifier:
paymentWebService:validateAddPreconditionsWithCompletion:
downloadAllPaymentPassesForPaymentWebService:
paymentWebService:validateTransferPreconditionsWithCompletion:
paymentWebService:requestPassUpgrade:pass:completion:
claimSecureElementForCurrentUser
claimSecureElementForCurrentUserWithCompletion:
secureElementOwnershipStateForCurrentUser
paymentWebService:registrationDataWithCompletionHandler:
trustedDeviceEnrollmentInfoForWebService:
signatureForAuthToken:webService:completion:
applePayTrustKeyForIdentifier:completion:
createApplePayTrustKeyWithRequest:completion:
deleteApplePayTrustKeyWithIdentifier:completion:
cellularNetworkRegion
noteForegroundVerificationObserverActive:
startBackgroundVerificationObserverForPass:verificationMethod:
maximumPaymentCards
setMaximumPaymentCards:
paymentWebService:handlePotentialExpressPass:withCompletionHandler:
felicaSecureElementIsAvailable
secureElementIsAvailable
supportsExpressModeForExpressPassType:
supportsExpressMode:
supportsCredentialType:
paymentWebService:addPaymentPass:withCompletionHandlerV2:
paymentWebService:removePass:withCompletionHandler:
paymentWebServiceSupportsPeerPaymentRegistration:
paymentWebServiceSupportsAccounts:
supportedFeatureIdentifiersWithPaymentWebService:
updatedAccountsForProvisioningWithCompletion:
featureApplicationsForProvisioningWithCompletion:
paymentWebService:deviceMetadataWithFields:completion:
paymentWebService:updateAccountWithIdentifier:completion:
paymentWebService:setDefaultPaymentPassUniqueIdentifier:
availableProductsWithCompletion:
performProductActionRequest:completion:
performDeviceCheckInWithCompletion:
paymentWebService:storePassOwnershipToken:withIdentifier:
paymentWebService:passOwnershipTokenWithIdentifier:completion:
archiveBackgroundContext:
markAllAppletsForDeletionWithCompletion:
paymentWebService:didRegisterWithRegionMap:
secureElementCardsWithCompletion:
dumpLogsWithCompletion:
handlePendingRemovalOfPassWithUniqueID:completion:
handlePreferredAID:forPassWithUniqueID:completion:
retrieveTransactionsForPassWithUniqueID:
handleDeletePaymentTransactionWithIdentifier:passUniqueIdentifier:
removeExpressPassesWithCardType:completion:
removeExpressPassWithUniqueIdentifier:completion:
conflictingExpressPassIdentifiersForPassInformation:completion:
cancelOutstandingSetDefaultExpressPassRequestsWithExpressMode:
enableServiceModeForPassWithUniqueIdentifier:completion:
cancelOutstandingEnableServiceModeRequests
cancelOutstandingRemotePassUpdateRequest:pass:
peerPaymentUnregisterWithCompletion:
handleCompanionMigrationWithCompletion:
handleCompanionPeerPaymentRegistration
handleCompanioniCloudSignout
_serialNumbersOfAllPairedDevices
setRemoteDeviceAssertionManager:
_context
_provisioningService
_outstandingRequests
_responseQueue
_provisioningActiveDeviceAssertion
_remoteDeviceAssertionManager
addExpressPassInformation:
expressPassInformationsCount
clearExpressPassInformations
expressPassInformationAtIndex:
expressPassInformationType
setUpgradeStatus:
setHasUpgradeStatus:
hasUpgradeStatus
upgradeStatusAsString:
StringAsUpgradeStatus:
setExpressPassInformations:
_expressPassInformations
_upgradeStatus
connect
noteWatchOfferDisplayedForPaymentPassWithUniqueID:
beginProvisioningFromWatchOfferForPaymentPass:withCompletion:
noteProvisioningPreflightCompleteWithSuccess:error:completion:
provisionPassForAccountIdentifier:makeDefault:completion:
registerDeviceWithCompletion:
paymentPassWithDeviceAccountIdentifier:completion:
savePaymentPassAtURL:withUniqueID:forPairingID:completion:
removePaymentPassWithUniqueID:forPairingID:waitForConfirmation:completion:
setDefaultCard:completion:
defaultCard:
defaultPaymentApplicationForPassWithUniqueID:completion:
setDefaultPaymentApplication:forPassWithUniqueID:completion:
initiateConsistencyCheckWithCompletion:
handlePendingUnpairingWithCompletion:
handlePendingiCloudSignoutWithCompletion:
setSharedPaymentWebServiceContext:forPairingID:completion:
sharedPaymentWebServiceContextForPairingID:withCompletion:
setSharedPeerPaymentWebServiceContext:forPairingID:completion:
sharedPeerPaymentWebServiceContextForPairingID:withCompletion:
setPeerPaymentAccount:forPairingID:completion:
peerPaymentAccountForPairingID:withCompletion:
initiateLostModeExitAuthWithCompletion:
transactionsForPaymentPassWithUniqueIdentifier:withTransactionSource:withBackingData:startDate:endDate:orderedByDate:limit:completion:
deletePaymentTransactionWithIdentifier:passUniqueIdentifier:fromDeviceWithPairingID:completion:
trustedDeviceEnrollmentSignatureWithAccountDSID:sessionData:handler:
setClasses:forSelector:argumentIndex:ofReply:
paymentPassWithUniqueIdentifier:didUpdateWithBalances:
setExportedInterface:
setExportedObject:
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
_handleServerPaymentPassesChanged:
_handleDefaultCardChanged:
remoteObjectProxy
_clearCaches
primarySecureElementIdentifier
_isApplePaySupportedInCurrentRegion
_remoteObjectProxyWithFailureHandler:
_cachedUniqueIDs
queueAppropriateFailedActions
_setCachedUniqueIDs:
_cachedPassForUniqueID:
_addPassToCache:
_applyPropertiesToPass:
_removePassWithUniqueIDFromCache:
fileURL
_savePaymentPass:atURL:forDevice:completion:
_sharedPaymentWebServiceContextForDevice:withCompletion:
watchPaymentWebService
_errorHandlerWithCompletion:
cachedUniqueIDs
setWithSet:
setCachedUniqueIDs:
cachedPasses
setCachedPasses:
initWithFileURL:error:
setDataAccessor:
setPreferredImageScale:
setPreferredImageSuffix:
setRemotePass:
_invalidateCachedPassWithUniqueID:
watchProvisioningURL
watchProvisioningURLForPaymentPass:
isSetupAssistantProvisioningSupported
isIssuerAppProvisioningSupported
watchPeerPaymentWebService
shouldShowWatchOfferForPaymentPass:withCompletion:
noteWatchOfferShownForPaymentPass:
defaultCardUniqueID:
consistencyCheckWithCompletion:
sharedPaymentWebServiceContext
setPeerPaymentAccount:forDevice:
shouldShowApplePaySettingsWithCompletion:
deletePaymentTransactionWithIdentifier:passUniqueIdentifier:fromDevice:completion:
hasQueuedPaymentPasses
setHasQueuedPaymentPasses:
connectionAvailableActions
setConnectionAvailableActions:
connectionUnavailableWebServiceContext
setConnectionUnavailableWebServiceContext:
_xpcConnectionQueue
_cacheQueue
_notifyToken
_queueAppropriateFailedActions
_hasQueuedPaymentPasses
_cachedPasses
_connectionAvailableActions
_connectionUnavailableWebServiceContext
metadataFields
_metadataFields
addPassIDs:
passIDsCount
clearPassIDs
passIDsAtIndex:
passIDsType
failedPreconditionAsString:
StringAsFailedPrecondition:
setFailedPrecondition:
_failedPrecondition
_passIDs
addIdentifiers:
identifiersCount
clearIdentifiers
identifiersAtIndex:
identifiersType
_identifiers
addCurrentUniqueIDs:
setActualUniqueID:
currentUniqueIDsCount
clearCurrentUniqueIDs
currentUniqueIDsAtIndex:
currentUniqueIDsType
setCancelled:
setHasCancelled:
hasCancelled
setHasNeedsUnlock:
hasNeedsUnlock
hasActualUniqueID
currentUniqueIDs
setCurrentUniqueIDs:
_actualUniqueID
_currentUniqueIDs
_cancelled
initWithDictionary:lastUpdated:
_updateMockBalance
_mockAccount
_accountQueue
_balanceOffset
npkSetObject:forKey:
_processArgumentWithMutableDictionary:object:key:
npkDictionaryWithObjectsAndKeys:
npkFindFirstObjectMatchingCondition:
npkSafeObjectAtIndex:
npkSafelyAddObject:
npkFakeArcRetain
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
uppercaseString
npkHasContent
isAllCaps
activeDeviceSelectorBlock
getDevicesMatching:
synchronizeUserDefaultsDomain:keys:
floatValue
valueWithPointer:
characterAtIndex:
substringFromIndex:
isMainThread
stringByAppendingPathExtension:
dictionaryWithContentsOfFile:
currentLocale
initWithConfiguration:url:
componentsSeparatedByCharactersInSet:
predicateWithFormat:
componentsJoinedByString:
supportedRegionsForOSVersion:deviceClass:platform:
scheme
path
copyItemAtPath:toPath:error:
setDPANSuffix:
setSupportsInAppPayment:
setSupportsContactlessPayment:
setDPANIdentifier:
setTransitProperties:
doubleValue
currentCalendar
component:fromDate:
locale
bundle
initWithPassDictionary:bundle:
bundleInfoValueForKey:PID:
applicationProxyForIdentifier:
localizedNameForContext:
pluginKitProxyForIdentifier:
containingBundle
localizedName
hasPeerPaymentAccount
peerPaymentEnabledForRegion:
initWithLocaleIdentifier:
setAlwaysShowsDecimalSeparator:
setMinimumFractionDigits:
setMaximumFractionDigits:
setLocale:
decimalNumberHandlerWithRoundingMode:scale:raiseOnExactness:raiseOnOverflow:raiseOnUnderflow:raiseOnDivideByZero:
decimalNumberByRoundingAccordingToBehavior:
supportsSerialNumberBasedProvisioning
requiresTransferSerialNumberBasedProvisioning
initRequiringSecureCoding:
finishEncoding
encodedData
watch
appletDataFormat
processInfo
processName
processIdentifier
setInvalidateWhenBackgrounded:
acquireAssertionOfType:withReason:completion:
deviceID
initWithBytes:length:
hexEncoding
NPKProtoCheckTLKsMissingRequest
NSCopying
NPKProtoAssertionRequest
NPKProtoRemoveExpressPassWithUniqueIdentifierRequest
NPKProtoRelevantPassesRequest
NPKProtoRetrievePaymentTransactionsResponse
NPKProtoCatalog
NPKPassSyncService
IDSServiceDelegate
NSObject
NPKPassSyncEngineDelegate
NPKPassSyncEngineDataSource
NPKProtoPerformDeviceCheckInRequest
NPKLibrary
NPKProtoCheckCompanionPeerPaymentRegistrationStateRequest
NPKProtoRemoveExpressPassWithUniqueIdentifierResponse
NPKProtoConfigurationDataResponse
NPKProtoRemoteAdminPerformRequest
NPKProtoAvailableProductsResponse
NPKProtoPerformDeviceCheckInResponse
NanoPassKit
NPKProtoPeerPaymentWebServiceContextDidChangeRequest
NPKRelevancy
NPKProtoConfigurationDataRequest
NPKCatalogUtilities
NPKProtoInitializeCloudStoreIfNecessaryWithHandlerRequest
NPKProtoPeerPaymentRegistrationRequest
NPKProtoWebServiceContextDidChangeRequest
NPKProtoHandleCompanionPeerPaymentRegistrationRequest
NPKProtoQueueTSMConnectionResponse
NPKProtoUpdatePushTokenRequest
NPKProtoPeerPaymentRegistrationResponse
NPKProtoPassSyncProposedReconciledState
NPKPeerPaymentQuickTypeParser
NPKProtoRemoveExpressPassesWithCardTypeResponse
NPKProtoSignDataRequest
WeakObservers
NPKProtoMarkAllAppletsForDeletionResponse
NPKProtoDeviceUnlockedForPendingProvisioningRequest
NPKProtoUpdatePaymentPassRequest
NPKProtoMarkPaymentPassForDeleteResponse
NPKProtoRemoteAdminAvailabilityChangeRequest
NPKGreenTeaDataUsageResolver
NPKProtoDumpLogsRequest
NPKProtoGizmoInitiatedAddPassRequest
NPKQuickPaymentSessionSource
NPKProtoPerformProductActionRequest
NPKProtoRelevantPassesPendingRequest
NPKProtoPassSyncState
NPKProtoResyncNeededRequest
NPKProtoSecureElementSetNewAuthRandomResponse
NPKProtoAdditions
NPKPaymentProvisioningFlowController
NPKProvisioningServiceAgentStatusUpdater
NPKProtoRegistrationDataRequest
NPKProtoSetPreferredPaymentApplicationResponse
NPKProtoPeerPaymentUnregistrationResponse
NPKProtoRegistrationDataResponse
NPKProtoResetApplePayManateeViewRequest
NPKPassDescription
NSSecureCoding
NSCoding
NPKProtoUpdatePassRequest
NPKCompanionAgentConnectionDeferredActionHandler
NPKProtoRemoteAdminAvailabilityRequest
NPKProtoBitmap
NPKPaymentPreflighter
NPKProtoRetrievePaymentTransactionsRequest
NPKProtoSecureElementGetAppletsRequest
NPKProtoHash
NPKProtoNewLibraryHashReceivedRequest
NPKProtoPerformProductActionResponse
NPKProtoNewLibraryHashRequest
NPKTransitAppletHistoryFetcher
NPKTransitPassInfo
NPKProtoHandleBalanceChangeRequest
NPKProtoRemoteAdminPerformResponse
NPKProtoAvailableProductsRequest
NPKTransientPassAssertionServerProtocol
NPKTransientPassAssertion
NPKProtoRemotePassUpdateRequest
NPKProtoCatalogChangedRequest
NPKProtoHandlePaymentTransactionsRequest
NPKProtoConflictingExpressPassIdentifiersForPassInformationRequest
NPKProtoSecureElementGetPairingInfoResponse
NPKProtoDownloadAllPaymentPassesRequest
NPKPaymentProvisioningFlowStepContext
NPKPaymentProvisioningFlowControllerWelcomeStepContext
NPKPaymentProvisioningFlowControllerRemoteCredentialsStepContext
NPKPaymentProvisioningFlowControllerManualEntryStepContext
NPKPaymentProvisioningFlowControllerSecondaryManualEntryStepContext
NPKPaymentProvisioningFlowControllerTermsAndConditionsStepContext
NPKPaymentProvisioningFlowControllerProvisioningProgressStepContext
NPKPaymentProvisioningFlowControllerProvisioningResultStepContext
NPKPaymentProvisioningFlowControllerIssuerVerificationStepContext
PKContactlessInterfaceTransactionContext
NPKFakePaymentSession
PKFieldDetectorObserver
NPKProtoCompanionMigratedResponse
NPKPeerPaymentNumberFormatter
WatchKitSupport
NPKContinuityCoordinator
NPKProtoProvisioningDataRequest
NPKOutstandingAssertionStatusUpdater
NPKTargetDeviceAssertionManager
NPKProtoRelevantPassesNeededRequest
NPKPeerPaymentWebServiceCompanionTargetDevice
PKPeerPaymentWebServiceTargetDeviceProtocol
NPKAdditions
NPKBitmapImage
NPKProtoShowPaymentSetupRequest
NPKProtoEnableServiceModeRequest
NPKQuickPaymentSession
PKContactlessInterfaceSessionDelegate
NPKProtoDeviceMetadataWithFieldsReponse
NPKProtoUpdateAccountWithIdentifierResponse
NPKOneShotLocationFetcher
CLLocationManagerDelegate
NPKPassSyncEngine
NPKProtoCloudStoreStatusResponse
NPKProtoRemoteAdminAvailabilityResponse
NPKProtoHandleAppletStateChangeRequest
NPKProtoDeviceDidRegisterRequest
NPKPeerPaymentTransactionDetails
NPKPeerPaymentMessagesTransactionsManager
PKPaymentServiceDelegate
NPKProtoDumpLogsResponse
NPKProtoSetTransactionDefaultsRequest
NPKProtoQueueTSMConnectionRequest
NPKInAppPaymentInterfaceServerExportedInterface
NPKRemoteInterfacePresenter
NPKPassSyncChange
NPKProtoProvisionPeerPaymentPassRequest
NPKPeerPaymentAccountManager
NPKProtoGizmoInitiatedDeletePassRequest
NPKProtoPassSyncReconciledStateAccepted
NPKGizmoDatabaseManifestEntry
0"0@
NPKGizmoDatabase
NPKPMUButtonListener
NPKProtoRemovePassRequest
NPKProtoPassSyncReconciledStateUnrecognized
NPKProtoUpdatePeerPaymentAccountResponse
NPKProtoPeerPaymentUnregistrationRequest
NPKServiceModeRequestController
NPKProtoProvisioningDataResponse
NPKProtoCloudStoreStatusRequest
NPKProtoSecureElementGetPairingInfoRequest
NPKPaymentOptionsSerialization
NPKWorkQueue
NPKProtoWebServiceContextNeededRequest
NPKProtoInitializeCloudStoreIfNecessaryRequest
NPKProtoSecureElementRemoveAppletsRequest
NPKExpressPassController
NPKProtoCheckTLKsMissingResponse
NPKProtoSetPreferredPaymentApplicationRequest
NPKQuickPaymentSessionLocalAuthenticationCoordinator
NPKProtoPass
NPKProtoEnableServiceModeResponse
NPKProtoRequestPeerAccountTermsAndConditionsAcceptance
NPKProtoMarkPaymentPassForDeleteRequest
NPKProtoRelevantPassTuple
NPKProtoSignDataResponse
NPKQuickPaymentSessionCleanupDelegate
NPKQuickPaymentSessionDelegate
NPKProtoRemoveExpressPassesWithCardTypeRequest
NPKProtoMarkAllAppletsForDeletionRequest
NPKTransitPassBalanceModel
NPKAccountPassManager
NPKSharedWebServiceProvider
NPKPaymentWebServiceCompanionTargetDeviceDelegate
NPKSharedPeerPaymentWebServiceArchiver
PKPeerPaymentWebServiceArchiver
PKWebServiceArchiver
NPKProtoUpdatePeerPaymentAccountRequest
NPKProtoSetExpressPassRequest
NPKProtoConflictingExpressPassIdentifiersForPassInformationResponse
NPKProtoTransactionDefaultsNeededRequest
ProtobufSupport
NPKPeerPaymentConversationManager
NPKProtoInitializeCloudStoreIfNecessaryResponse
NPKProtoAddPassRequest
NPKProtoUpdateAccountWithIdentifierRequest
NPKPassSyncStateItem
NPKPassSyncState
NPKProtoPassSettingsChangedRequest
NPKProtoPassSyncStateChangeProcessed
NPKPaymentProvisioningFlowTest
NPKPaymentProvisioningFlowControllerDelegate
NPKTransitPassesInfoManager
NPKSettingsPreservingFileDataAccessor
NPKProtoUpdatedAccountsForProvisioningResponse
NPKExpressTransitInterfaceController
NPKTransitAppletHistoryFetcherDelegate
NPKExpressPassControllerDelegate
NPKProtoPassSyncStateChange
NPKProtoUpdatedAccountsForProvisioningRequest
NPKProtoSecureElementGetAppletsResponse
NPKProtoInitializeCloudStoreIfNecessaryWithHandlerResponse
NPKProtoResetApplePayManateeViewResponse
NPKBalanceField
NPKPaymentWebServiceCompanionTargetDeviceOutstandingRequest
NPKPaymentWebServiceCompanionTargetDevice
PKPaymentWebServiceTargetDeviceProtocol
PKPaymentWebServiceArchiver
NPKProtoHandleValueAddedServiceTransactionsRequest
NPKProtoSecureElementSetNewAuthRandomRequest
NPKProtoDeviceDidRegisterResponse
NPKProtoRemotePassUpdateResponse
NPKCompanionServerProtocol
NPKCompanionClientProtocol
NPKCompanionAgentConnection
NPKProtoDeviceMetadataWithFieldsRequest
NPKProtoSecureElementRemoveAppletsResponse
NPKProtoPassSyncStateItem
NPKProtoProvisionPeerPaymentPassResponse
DescriptionSupport
NPKProtoPaymentPreconditionsNotMetRequest
NPKProtoCompanionMigratedRequest
NPKProtoHandleRemoveTransactionsRequest
NPKProtoHandleCompanioniCloudSignoutRequest
NPKProtoSetExpressPassResponse
NPKMockPeerPaymentAccountManager
NPKSafeObjects
NilProtection
NPKMutableArrayAdditions
@12@0:4^{_NSZone=}8
@8@0:4
B12@0:4@8
v12@0:4@8
I8@0:4
i8@0:4
v12@0:4i8
v12@0:4B8
B8@0:4
@12@0:4i8
i12@0:4@8
v8@0:4
@"NSString"
{?="assertionType"b1"pending"b1}
#8@0:4
@12@0:4I8
@"NSMutableArray"
@"NSData"
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v28@0:4@8@12@16@20@24
v32@0:4@8@12@16@20@24@28
v16@0:4@8@12
v28@0:4@8@12@16B20@24
v32@0:4@8@12@16B20@24@28
v28@0:4@8@12@16i20i24
v24@0:4@8@12@16@20
v20@0:4@8@12@16
v20@0:4@8@12@?16
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16i20i24
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@"NSString"20@24
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v20@0:4@"IDSService"8@"IDSAccount"12@"IDSGroupSessionParticipantUpdate"16
v12@0:4@"IDSService"8
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
v20@0:4@8@12B16
v24@0:4@8@12@16@?20
v16@0:4@"NPKPassSyncEngine"8@"NPKPassSyncChange"12
v20@0:4@"NPKPassSyncEngine"8@"NSUUID"12B16
v20@0:4@"NPKPassSyncEngine"8@"NSData"12@"NPKPassSyncState"16
v16@0:4@"NPKPassSyncEngine"8@"NPKPassSyncState"12
v16@0:4@"NPKPassSyncEngine"8@"NSData"12
v24@0:4@"NPKPassSyncEngine"8@"NSData"12@"NPKPassSyncStateItem"16@?<v@?B>20
v20@0:4@"NPKPassSyncEngine"8@"NSString"12@?<v@?B>16
v12@0:4@"NPKPassSyncEngine"8
v20@0:4@"NPKPassSyncEngine"8@"NPKPassSyncChange"12B16
@16@0:4@8@12
@"NSData"16@0:4@"NPKPassSyncEngine"8@"NSString"12
v16@0:4I8@12
@12@0:4@8
I12@0:4@8
@"NPKPassSyncEngine"
@"IDSService"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@"NPKPassSyncChange"
v16@0:4@8@?12
{?="pending"b1"success"b1}
{?="pending"b1}
@20@0:4@8@12@16
{?="forceReRegistration"b1}
@"NPKProtoPassSyncState"
@20@0:4@8@12I16
@"NSSet"
@16@0:4@8i12
{?="entanglementMode"b1}
v24@0:4@8:12@16@20
{?="isAvailable"b1}
v12@0:4@?8
v12@0:4I8
@"<NPKQuickPaymentSessionSourceDelegate>"
@"NPKPMUButtonListener"
@"PKPass"
@"NSDictionary"
@"NPKQuickPaymentSessionLocalAuthenticationCoordinator"
@"NPKProtoHash"
{?="resyncID"b1"fullResyncNeeded"b1}
v20@0:4I8I12@16
@"<NPKPaymentProvisioningFlowControllerDelegate>"
@"PKPaymentWebService"
@"PKPaymentProvisioningController"
@"PKPaymentSetupFieldsModel"
@36@0:4@8@12i16I20@24@28@32
@44@0:4@8@12i16I20@24@28@32d36
@"IDSProtobuf"
@16@0:4{CGSize=ff}8
@20@0:4{CGSize=ff}8B16
v16@0:4{CGSize=ff}8
v24@0:4@8{CGSize=ff}12f20
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@16@0:4@8B12
B16@0:4@8@12
B24@0:4@8I12@16@20
@"PKImage"
@"NSNumber"
@"NSDate"
@"PKNFCPayload"
@"PKColor"
@"PKPaymentApplication"
@"NSArray"
@"PKTransitAppletState"
@"NSDecimalNumber"
@"NPKProtoCatalog"
@"NPKProtoPass"
{?="lastKnownResyncID"b1"resyncID"b1"syncID"b1}
v16@0:4@?8@12
@"NSMutableDictionary"
Q8@0:4
v16@0:4Q8
v16@0:4B8@12
@?8@0:4
@"PUConnection"
@"NSSManager"
@"NPKCompanionAgentConnection"
@"<NPKTransitAppletHistoryFetcherDelegate>"
@"PKTransitPassProperties"
{?="httpStatus"b1}
v12@0:4@"NSString"8
@"NSXPCConnection"
{?="cancelUpdate"b1"requestAuthoriztion"b1"shouldNotifyUser"b1}
{?="authRandomSet"b1"pending"b1"success"b1}
@"PKPaymentHeroImageManifest"
@"PKPaymentSetupProduct"
@"NSURL"
@"NSError"
@"PKPaymentPass"
@"PKPaymentTransaction"
@"PKTransitAppletHistory"
@"PKFelicaAppletHistory"
@"PKExpressTransactionState"
v16@0:4@"PKFieldDetector"8@"PKFieldProperties"12
v12@0:4@"PKFieldDetector"8
@"PKFieldDetector"
@"NSNumberFormatter"
v16@0:4@8B12
@"NSUserActivity"
@"NSUUID"
v16@0:4@8i12
v12@0:4@?<v@?B>8
@"PKPeerPaymentAccount"8@0:4
v12@0:4@?<v@?@"PKPeerPaymentAccount">8
@"NSArray"8@0:4
v20@0:4@"PKPaymentProvisioningController"8@"PKPeerPaymentCredential"12@?<v@?B@"NSError">16
v12@0:4@?<v@?@"CKAccountInfo"B@"NSError">8
v12@0:4@?<v@?B@"NSError">8
v24@0:4@"NSURL"8@"NSString"12@"PKPeerPaymentWebService"16@?<v@?B@"NSError">20
v20@0:4@"NSURL"8@"NSString"12@?<v@?B@"NSError">16
@"PKAppleAccountInformation"8@0:4
v12@0:4@?<v@?i@"PKAppleAccountInformation">8
@"NPSDomainAccessor"
@"NPSManager"
@12@0:4^{CGImage=}8
^{CGImage=}8@0:4
L8@0:4
v12@0:4L8
{?="cancelOutstandingRequests"b1}
v20@0:4@8I12I16
v16@0:4@8I12
v12@0:4@"PKContactlessInterfaceSession"8
v20@0:4@"PKContactlessInterfaceSession"8@"PKPaymentApplication"12@"PKPaymentPass"16
v24@0:4@"PKContactlessInterfaceSession"8@"PKPaymentApplication"12@"PKPaymentPass"16@"NSArray"20
v16@0:4@"PKContactlessInterfaceSession"8@"PKContactlessInterfaceTransactionContext"12
v20@0:4@"PKContactlessInterfaceSession"8I12I16
v16@0:4@"PKContactlessInterfaceSession"8@"PKFieldProperties"12
v16@0:4@"PKContactlessInterfaceSession"8I12
B28@0:4@8@12@16B20B24
v28@0:4B8B12Q16@24
B12@0:4@?8
B16@0:4B8B12
v20@0:4Q8@?16
v28@0:4Q8Q16@?24
@"<NPKQuickPaymentSessionDelegate>"
@"PKPaymentSessionHandle"
@"PKContactlessInterfaceSession"
v20@0:4@8i12@16
v20@0:4@"CLLocationManager"8@"CLLocation"12@"CLLocation"16
v16@0:4@"CLLocationManager"8@"NSArray"12
v16@0:4@"CLLocationManager"8@"CLHeading"12
B12@0:4@"CLLocationManager"8
v20@0:4@"CLLocationManager"8i12@"CLRegion"16
v20@0:4@"CLLocationManager"8@"NSArray"12@"CLBeaconRegion"16
v20@0:4@"CLLocationManager"8@"CLBeaconRegion"12@"NSError"16
v16@0:4@"CLLocationManager"8@"CLRegion"12
v16@0:4@"CLLocationManager"8@"NSError"12
v20@0:4@"CLLocationManager"8@"CLRegion"12@"NSError"16
v16@0:4@"CLLocationManager"8i12
v12@0:4@"CLLocationManager"8
v16@0:4@"CLLocationManager"8@"CLVisit"12
@"CLLocationManager"
@"CLInUseAssertion"
v36@0:4I8@12@16@20@24^B28^B32
@"NPKPassSyncState"
@"<NPKPassSyncEngineDelegate>"
@"<NPKPassSyncEngineDataSource>"
{?="cloudStoreIsSetup"b1"pending"b1}
v12@0:4@"PKFieldProperties"8
v16@0:4@"NSString"8@"PKPaymentMessage"12
v16@0:4@"NSString"8@"PKPaymentTransaction"12
v16@0:4@"NSString"8@"NSString"12
v16@0:4@"NSString"8@"NSSet"12
v16@0:4@"NSString"8B12
v16@0:4@"NSString"8@"PKValueAddedServiceTransaction"12
v16@0:4@"NSString"8@"PKTransitPassProperties"12
v16@0:4@"NSString"8i12
v12@0:4@"PKFeatureApplication"8
v20@0:4I8@12B16
@"PKPaymentService"
@"NSMutableSet"
{?="success"b1}
v36@0:4@8@12@16i20@24@28@?32
v36@0:4@"PKPaymentRequest"8@"NSString"12@"NSString"16i20@"NSString"24@"NSNumber"28@?<v@?B@"NSError">32
v16@0:4@"PKRemotePaymentRequest"8@?<v@?B>12
v16@0:4@"PKPeerPaymentQuote"8@?<v@?B>12
v16@0:4@"PKPeerPaymentQuote"8@"NSError"12
@"<NPKRemoteInterfacePresenterDelegate>"
@32@0:4@8@12I16@20@24@28
@"NPKPassSyncStateItem"
@"PKPeerPaymentService"
@"PKPeerPaymentAccount"
^{sqlite3=}8@0:4
^{sqlite3_stmt=}8@0:4
^{sqlite3_stmt=}16@0:4I8i12
@20@0:4@8^{sqlite3_stmt=}12i16
@20@0:4#8^{sqlite3_stmt=}12i16
v20@0:4@8@12i16
v24@0:4@8@12i16B20
@36@0:4@8I12I16@20@24i28i32
@12@0:4B8
v16@0:4B8B12
v20@0:4@8B12^B16
@36@0:4@8I12I16@20@24i28I32
@16@0:4@8^@12
v16@0:4@?8B12
i16@0:4^B8^B12
^{sqlite3=}
^{sqlite3_stmt=}
@12@0:4@?8
v12@0:4^{__IOHIDEvent=}8
^{__IOHIDEventSystemClient=}8@0:4
v12@0:4^{__IOHIDEventSystemClient=}8
^{__IOHIDEventSystemClient=}
{?="setAuthRandomIfNotPaired"b1}
@24@0:4@8@12@16@20
@"PKPassLibrary"
@"NSDistributedNotificationCenter"
@"<NPKExpressPassControllerDelegate>"
{?="missing"b1"pending"b1}
@"LAContext"
{?="pending"b1"unlockRequired"b1}
v20@0:4@8I12@16
v16@0:4@"NPKQuickPaymentSession"8@"PKPass"12
v24@0:4@"NPKQuickPaymentSession"8@"PKPass"12@"NSArray"16@"NSArray"20
v20@0:4@"NPKQuickPaymentSession"8I12@"PKContactlessInterfaceTransactionContext"16
v12@0:4@"NPKQuickPaymentSession"8
@"<NPKAccountPassManagerDelegate>"
@"PKAccount"
v20@0:4@"NSArray"8@"NSString"12B16
v20@0:4@"NSArray"8@"NSDictionary"12@"NSArray"16
v16@0:4@"PKTransitAppletState"8@"NSString"12
v12@0:4@"NSArray"8
v16@0:4@"NSSet"8@"NSString"12
v12@0:4@"PKPaymentWebServiceContext"8
v12@0:4@"PKPaymentWebServiceBackgroundContext"8
v16@0:4@"PKPeerPaymentWebServiceContext"8@"PKPeerPaymentAccount"12
@"NPKPaymentWebServiceCompanionTargetDevice"
@"PKPeerPaymentWebService"
@"NPKPeerPaymentWebServiceCompanionTargetDevice"
v12@0:4@"PKWebServiceContext"8
{?="cancelOutstandingRequests"b1"requestAuthorization"b1}
@"MSConversation"
@"PKPeerPaymentRecipient"
@"NPKPeerPaymentConversationContext"
@"PKPeerPaymentController"
v24@0:4@8^@12^@16^@20
{?="passSettings"b1}
{?="changeAccepted"b1}
v24@0:4@8I12I16@20
v24@0:4@"NPKPaymentProvisioningFlowController"8I12I16@"NPKPaymentProvisioningFlowStepContext"20
@"NPKPaymentProvisioningFlowController"
@"<NPKTransitPassesInfoManagerDelegate>"
v20@0:4@"NPKTransitAppletHistoryFetcher"8@"PKTransitAppletHistory"12@"NSString"16
v16@0:4@"NPKExpressPassController"8@"PKPass"12
v20@0:4@"NPKExpressPassController"8@"NSSet"12@"NSSet"16
v16@0:4d8
@"<NPKExpressTransitInterfaceControllerDelegate>"
@"<NPKExpressTransitInterfaceControllerDataSource>"
@"NPKTransitAppletHistoryFetcher"
@"NPKExpressPassController"
@"NPKProtoPassSyncStateItem"
{?="passSegmentIndex"b1"passSegmentTotal"b1}
^I8@0:4
I12@0:4I8
v16@0:4^I8I12
{?="list"^I"count"I"size"I}
@24@0:4@8@12@16B20
v24@0:4@8@12I16@?20
B16@0:4@8I12
@16@0:4@8I12
B12@0:4i8
v20@0:4@8I12@?16
v12@0:4@"PKPaymentWebService"8
v20@0:4@"PKPaymentWebService"8@"NSString"12@?<v@?B@"NSError">16
v16@0:4@"PKPaymentWebService"8@?<v@?@"PKPaymentDeviceConfigurationData"@"NSError">12
v20@0:4@"PKPaymentWebService"8@"NSString"12@?<v@?@"PKPaymentDeviceRegistrationData"@"NSError">16
v24@0:4@"PKPaymentWebService"8@"NSData"12I16@?<v@?@"NSData"@"PKSecureElementSignatureInfo"@"NSError">20
v16@0:4@"PKPaymentWebService"8@?<v@?@"PKPaymentDeviceProvisioningData"@"NSError">12
v16@0:4@"PKPaymentWebService"8@"NSString"12
v20@0:4@"PKPaymentWebService"8@"NSDictionary"12@"NSString"16
@"NSArray"16@0:4@"PKPaymentWebService"8@"NSArray"12
i12@0:4@"PKPaymentWebService"8
@"NSString"12@0:4@"PKPaymentWebService"8
@"PKOSVersionRequirement"8@0:4
v16@0:4@"PKPaymentWebService"8@?<v@?B@"NSData"@"NSData">12
v16@0:4@"PKPaymentWebService"8@?<v@?B>12
B16@0:4@"PKPaymentWebService"8I12
B16@0:4@"PKPaymentWebService"8@"NSString"12
v16@0:4@"PKPaymentWebService"8@?<v@?B@"NSError">12
v20@0:4@"PKPaymentWebService"8@"PKPaymentPass"12@?<v@?>16
v24@0:4@"PKPaymentWebService"8@"PKPassUpgradeRequest"12@"PKPaymentPass"16@?<v@?@"NSError"@"PKPaymentPass">20
v16@0:4@"PKPaymentWebService"8@?<v@?@"PKPaymentDeviceRegistrationData"@"NSError">12
@"PKTrustedDeviceEnrollmentInfo"12@0:4@"PKPaymentWebService"8
v20@0:4@"NSString"8@"PKPaymentWebService"12@?<v@?@"NSString"@"NSError">16
v16@0:4@"NSString"8@?<v@?@"PKApplePayTrustKey">12
v16@0:4@"PKApplePayTrustKeyRequest"8@?<v@?@"PKApplePayTrustKey"@"NSError">12
v16@0:4@"NSString"8@?<v@?B>12
v16@0:4@"PKPaymentPass"8@"PKVerificationChannel"12
@"NSArray"16@0:4@"PKPaymentWebService"8I12
v20@0:4@"PKPaymentWebService"8@"PKPaymentPass"12@?<v@?@"NSSet">16
B12@0:4@"NSString"8
v20@0:4@"PKPaymentWebService"8@"PKPaymentPass"12@?<v@?@"PKPaymentPass">16
v20@0:4@"PKPaymentWebService"8@"PKPass"12@?<v@?B@"NSError">16
B12@0:4@"PKPaymentWebService"8
@"NSSet"12@0:4@"PKPaymentWebService"8
v12@0:4@?<v@?@"NSArray"@"NSArray">8
v12@0:4@?<v@?@"NSArray">8
v20@0:4@"PKPaymentWebService"8I12@?<v@?@"PKPaymentDeviceMetadata">16
v20@0:4@"PKPaymentWebService"8@"NSString"12@?<v@?@"PKAccount"@"NSError">16
v12@0:4@?<v@?@"PKPaymentAvailableProductsResponse"@"NSError">8
v16@0:4@"PKPaymentProductsActionRequest"8@?<v@?@"PKPaymentAvailableProductsResponse"@"NSError">12
v20@0:4@"PKPaymentWebService"8@"NSString"12@"NSString"16
v20@0:4@"PKPaymentWebService"8@"NSString"12@?<v@?@"NSString">16
@16@0:4I8@12
v16@0:4B8@?12
v20@0:4@8B12@?16
v16@0:4i8@?12
v28@0:4@8@12B16B20@?24
v28@0:4@8@12@16@20@?24
@20@0:4@8B12@16
@"<NPKPaymentWebServiceCompanionTargetDeviceDelegate>"
@"NRActiveDeviceAssertion"
@"NPKTargetDeviceAssertionManager"
{?="upgradeStatus"b1"pending"b1}
v20@0:4B8@12@?16
v24@0:4@8@12B16@?20
v40@0:4@8I12I16@20@24i28i32@?36
v16@0:4@"PKPaymentPass"8@?<v@?B@"NSError">12
v20@0:4B8@"NSError"12@?<v@?>16
v20@0:4@"NSString"8B12@?<v@?B@"NSError">16
v12@0:4@?<v@?II@"NSError">8
v12@0:4@?<v@?@"NSSet">8
v16@0:4@"NSString"8@?<v@?@"PKPaymentPass">12
v16@0:4@"NSString"8@?<v@?@"NSSet">12
v24@0:4@"NSURL"8@"NSString"12@"NSUUID"16@?<v@?B>20
v24@0:4@"NSString"8@"NSUUID"12B16@?<v@?B@"NSError">20
v12@0:4@?<v@?@"NSString">8
v16@0:4@"NSString"8@?<v@?@"PKPaymentApplication">12
v20@0:4@"PKPaymentApplication"8@"NSString"12@?<v@?@"PKPaymentPass">16
v12@0:4@?<v@?>8
v20@0:4@"PKPaymentWebServiceContext"8@"NSUUID"12@?<v@?>16
v16@0:4@"NSUUID"8@?<v@?@"PKPaymentWebServiceContext">12
v16@0:4I8@"NSString"12
v20@0:4@"PKPeerPaymentWebServiceContext"8@"NSUUID"12@?<v@?>16
v16@0:4@"NSUUID"8@?<v@?@"PKPeerPaymentWebServiceContext">12
v20@0:4@"PKPeerPaymentAccount"8@"NSUUID"12@?<v@?>16
v16@0:4@"NSUUID"8@?<v@?@"PKPeerPaymentAccount">12
v12@0:4@?<v@?@"NSError">8
v40@0:4@"NSString"8I12I16@"NSDate"20@"NSDate"24i28i32@?<v@?@"NSSet">36
v24@0:4@"NSString"8@"NSString"12@"NSUUID"16@?<v@?@"NSError">20
v20@0:4@"NSString"8@"PKPaymentApplication"12@?<v@?@"PKTransitAppletState">16
v20@0:4@"NSString"8@"NSData"12@?<v@?@"NSString"I@"NSData"@"NSError">16
@?12@0:4@?8
@"<NPKCompanionAgentConnectionDelegate>"
@"PKPaymentWebServiceContext"
{?="sequenceCounter"b1}
{?="cancelled"b1"needsUnlock"b1"pending"b1"success"b1}
@16@0:4@8#12
B20@0:4@8@12@16
Notice: Pass sync service: starting
Notice: Pass sync service: pass library changed
Notice: Pass sync service: pass settings changed for pass with unique ID %@
Error: Failed to send pass settings: %@
Notice: Pass sync service: sent pass settings
Message ID: %@
Protobuf: %@
Notice: Pass sync service: catalog changed
Error: Failed to send catalog: %@
Notice: Pass sync service: sent catalog
Message ID: %@
Protobuf: %@
Notice: Pass sync service: storing large pass data segment
change UUID: %@
segment index: %u
total pass segments: %u
Notice: Pass sync service: this is the last segment of pass data
retrieved combined pass data: %@
Notice: Pass sync service: not providing state change to sync engine
change UUID: %@
Notice: Pass sync service: pass settings changed with protobuf %@
Warning: Pass sync service: No unique ID or no pass settings in protobuf
Notice: Pass sync service: catalog changed with protobuf %@
Warning: Dropping state change message
Error: Failed to send pass sync state change: %@
Notice: Pass sync service: sent state change IDS message
Message ID: %@
Protobuf: %@
Notice: Pass sync service: splitting state change into %u pieces
Notice: Pass sync service: sending state change IDS message for segment index %u (%u total segments)
Change UUID: %@
Warning: Dropping state change processed message
Error: Failed to send pass sync change accepted: %@
Notice: Pass sync service: sent state change processed IDS message
Message ID: %@
Protobuf: %@
Warning: Dropping reconciled state unrecognized message
Error: Failed to send pass sync reconciled state unrecognized: %@
Notice: Pass sync service: sent reconciled state unrecognized IDS message
Message ID: %@
Protobuf: %@
Warning: Dropping proposed reconciled state message
Error: Failed to send pass sync proposed reconciled state message: %@
Notice: Pass sync service: sent proposed reconciled state IDS message
Message ID: %@
Protobuf: %@
Warning: Dropping reconciled state accepted message
Error: Failed to send pass sync reconciled state accepted: %@
Notice: Pass sync service: sent reconciled state accepted IDS message
Message ID: %@
Protobuf: %@
Notice: Pass sync service: got pass sync engine state changed
Notice: Pass sync service: received state change processed delegate method invoked
Change: %@
Accepted: %d
Notice: Pass sync service: finished processing change delegate method invoked
Change: %@
Timer processing change: %@
Notice: Companion pass sync service: syncing subject to sync timer following change processed
Notice: Pass sync service: Providing updated library state
Sync state: %@
Will sync if necessary: %s
Notice: Pass sync service: Not syncing after providing updated library state, since change is already accounted for in reconciled state
Notice: Pass sync service: Not syncing after providing updated library state, since change is already accounted for in processing change on top of reconciled state
Notice: Pass sync service: requesting sync subject to sync timer
Notice: Pass sync service: Archive timer fired; writing pass sync engine archive to disk
Error: Pass sync service: unable to write pass sync engine archive to disk
Error: %@
Notice: Pass sync service: Syncing immediately because candidate and processing changes are nil
Notice: Pass sync service: Not setting sync timer because there is already a timer candidate or processing change
Candidate change: %@
Processing change: %@
Notice: Pass sync service: Setting timer for %.2f seconds before syncing
Candidate change: %@
Processing change: %@
Notice: Pass sync service: Syncing immediately after timer fired because current candidate and processing changes are nil
Notice: Pass sync service: Syncing immediately after timer fired because engine is still on the same candidate/processing change
Candidate change: %@
Processing change: %@
Notice: Pass sync service: Setting sync timer again because of new candidate/processing change change
Current candidate: %@
Previous candidate: %@
Current processing: %@
Previous processing: %@
Warning: Pass sync service: Unable to read pass sync engine archive. This is expected in the case of a fresh device install.
Error: %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot calculate npk complete hash for version %llu)
Notice: addValuePending: %@ for pass %@ time delta %f
Notice: addValuePending: npkHandleTransitValuePendingAmount %@ withBalance %@ forPassWithID %@
Notice: addValuePending: npkClearTransitValuePendingStateIfNecessaryForPassWithID %@ withBalance %@
Notice: addValuePending: Balance is greater than before pending top up, clearing value pending state
Error: Request create NPKPeerPaymentStatus with unexpected number:%@
Notice: Starting Parse payload for PayloadID:%@ payload:%@
Notice: found valid amount:%@
Warning: Not supported value from info:%@
Warning: Not supported currency code from info:%@
Warning: PayloadID:%@ Not allowed
Notice: Device may need data usage resolution
Notice: Currently resolving data usage
Notice: Session source received PMU button event
Notice: Sesssion source is delegating button event
Notice: Outstanding payment sessions; ignoring
Notice: Session source initial precondition state is %d
Notice: No initial pass; session source reporting no cards
Notice: Session source providing session to delegate
Notice: Payment session failed to start; session source reporting busy
Notice: Service %@ sent protobuf (%@) destinations %@ priority %ld options %@: identifier %@ success %d error %@
Error: Not on welcome step; cannot acknowledge welcome!
Notice: Handling manual entry fields: %@ with fields model fields: %@
Error: Not on terms step; cannot accept terms!
Error: %{public}@ does not know how to handle provisioning state : %{public}@.
Notice: Flow controller change step from %@ to %@ with context: %@
Notice: Started providing periodic updates:
service: %@
message type: %u
response identifier: %@
Notice: Provisioning service agent status updater invalidating: %@
Notice: Provisioning service agent status updater sending status update: %@
Error: Not able to send status update:
service: %@
message type: %u
response identifier: %@
Warning: Reached limit of %lu updates for response identifier %@; will not send further updates.
Notice: Get PDF image from bundle: %@ prefix: %@ taragetSize:{%f,%f} scale:%f
Notice: Get PDF image from path: %@ taragetSize:{%f,%f}
Notice: unable to find resource at path %@
Notice: Could not find PDF document at path: %@
Notice: PDF document is empty
Notice: No target size provided we will not scale down the given PDF resource
Notice: target size to create PDF:{%fx%f}
Notice: returning PDF image %@
Notice: Resizing image %@ from %f x %f to %f x %f to fit/cover %f x %f
Notice: Resizing image %@ from %f x %f to fit/cover %f x %f would upscale, ignoring
Notice: Load PDF art from bundle: %@
Notice: decoding logo image from data on demand
Notice: decoding background image from data on demand
Notice: Perform action when companion agent is available: %@
Error: Not performing action when companion agent is available because pairing ID is nil! Device: %@, action: %@
Notice: Fetched deferred shared web service context %@ for device %@
Notice: Setting deferred shared web service context: %@
Error: Not setting deferred shared web service context because pairing ID is nil! Device: %@, context: %@
Notice: Setting deferred added payment pass: %@ for device: %@
Notice: Returning deferred added payment passes: %@ for device: %@
Notice: Performing deferred actions
Notice: Pairing ID %@: shared web service context %@
Notice: Pairing ID %@: %u actions
Notice: Removing deferred data for pairing ID %@ (deferred action count %u deferred shared context %@)
Notice: Deferred action handler: companion agent started
Notice: Deferred action handler: device became active
Notice: Deferred action handler: device paired
Notice: Deferred action handler: device unpaired (pairing ID %@)
Notice: Deferred action handler: device pairing failure
Notice: Transfer to companion preflight: watch is connected
Notice: Transfer to companion preflight: watch is not connected
Notice: Checking watch connected state
Notice: gizmo connected
Notice: gizmo not connected
Notice: Checking companion iCloud account state
Notice: has companion account
Notice: does not have companion account
Notice: Checking watch iCloud account state
Notice: Device is pairing
Notice: Checking passcode enabled and unlocked state with query date: %@
Notice: passcode enabled %d device passcode locked %d error %@
Notice: Setting auth random if necessary
Notice: query date %@ now %@
Notice: Watch has SEP: %d; has required software version: %d
Notice: Setting auth random if necessary at the beginning of the provisioning flow
Notice: Auth random set if necessary (success %d)
Notice: success: %d
error: %@
preflighting: %d
checked passcode/unlocked: %d
checked companion iCloud account: %d
checked watch iCloud account: %d
checked wrist detect: %d
needsPasscode: %d
needsUnlock: %d
needsGizmoiCloudAccount: %d
needsWristDetection: %d
gizmo connected: %d
space available on SE: %d
auth random set if necessary: %d
Notice: Invoking preflight handler with success %d error %@
Notice: History fetcher set AID to %@
Notice: History fetcher received fetch request
Notice: Transient pass assertion connection interrupted
Notice: Transient pass assertion: resyncing state
Error: Couldn't get remote object proxy
Notice: Fake payment session: setting current pass %@
Notice: Fake payment session: setting VAS passes %@
Notice: Fake payment session: detected field
Notice: Fake payment session: confirming session for pass %@
Notice: Fake payment session: renewing session for pass %@
Notice: Fake payment session: deactivating session
Notice: Fake payment session: setting timer
Notice: Fake payment session: handling timeout
Notice: Fake payment session: Got transaction complete Darwin notification
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Don't call -[NPKContinuityController init] but instead use singleton!)
Notice: Continuity: user is viewing pass list
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil uniqueID)
Notice: User viewing pass with unique ID %@ (payment pass: %d)
Notice: User needs to provision pass with unique ID %@
Notice: Continuity: user needs payment passes
Notice: Continuity: user needs to set up peer payment
Notice: Continuity: user needs to view peer payment
Notice: Saving user activity %@
Notice: Invalidating old activity %@
Notice: New activity was already current, calling -becomeCurrent again: %@
Notice: Remote Assertion - Request acquire assertion of type:%lu with UUID:%@
Error: Remote Assertion - Failed to send Assertion request type:%@
Notice: Remote Assertion - Request to invalidate assertion with UUID:%@
Notice: Remote Assertion - Sending assertion request of type:%@ UUID:%@
Error: Remote Assertion - Failed to sendAssertionrequest of type:%@ UUID:%@
Notice: Attempting to download peer payment pass following provisioning
Notice: Added payment pass following provisioning
Notice: Calling peerPaymentReRegisterWithURL:pushToken: completion with success %i error %@
Warning: Auth random is not accessible after fetching pairing state
Warning: Auth random is not accessible before fetching pairing state
Notice: session: %@ deactivated %d
Notice: Handling new contactless session: %@
Notice: Payment session: setting current pass to %@
Notice: Setting defer authorization on quick payment session: %@
Warning: Failed to enable service mode!
Warning: Cannot disable persistent card emulation on a session!
Notice: Quick payment session: confirming session
Notice: Confirm or renew quick payment session: session state is %u
Notice: Quick payment session: deactivating session
Notice: Deactivate quick payment session: deactivating %d deactivated %d
Notice: Deactivate quick payment session: underlying session deactivated
Notice: Internal queue: updating contactless session for pass %@ auto-select VAS passes %@
Notice: Internal queue update contactless session: success %d now activated %d session confirmed %d
Notice: Session queue update contactless session: pass %@ auto-select VAS passes %@ (session %@)
Notice: Using VAS passes when updating contactless session: %@
Notice: Session queue update contactless session: VAS success %d payment success %d session confirmed %d
Notice: Invoking callback for activation: success %d invokeOnSuccess %d contactlessValidity %u pass %@
Notice: Quick payment session: Starting contactless session on session queue
Notice: Was not first in queue; tearing down and invalidating session
Notice: No contactless session; marking as deactivated
Notice: Enabling persistent card emulation
Notice: No contactless session; not yet enabling persistent card emulation
Notice: Authorizing deferred authorization: %d use credential: %d credential: %@
Notice: Quick payment session: updating with current pass and loyalty state
Notice: Quick payment session: did enter field
Notice: Quick payment session: did exit field
Notice: Quick payment session: did fail transaction for AID %@ and pass with unique ID %@
Notice: Quick payment session: Session timed out for AID %@ and pass with unique ID %@
Notice: Ignoring timeout for service mode (should get persistent card emulation event instead)
Notice: Quick payment session: Session failed for AID %@ and pass with unique ID %@
Notice: Quick payment session: Received Start Transaction
Notice: In service mode; ignoring Start Transaction
Notice: Quick payment session: Received activity timeout
Notice: In service mode; ignoring activity timeout
Notice: Quick payment session: Received Finish Transaction
Notice: Handling mercury transaction
Notice: Handling transit transaction
Notice: Handling conventional
Notice: Quick payment session: ended persistent card emulation
Notice: Quick payment session: selected payment
Notice: Quick payment session: selected VAS
Notice: Quick payment session: failed deferred authorization
Notice: Quick payment session: has pending server request, sending timeout event
Notice: Transaction: %@ AID: %@ UniqueID: %@ valueAddedServiceTransactions: %@ valueAddedServicePasses: %@ success: %u
Notice: Quick payment session: Loyalty engine configuration changed
Notice: Can determine device location.
Notice: Start updating location
Notice: Event handler fired
Notice: Immediately retrieved location
Notice: Returning provisioning device data without location
Notice: Location did update
Notice: Found candidate location
Notice: Location did fail
Notice: Sync state engine (%@): Sync is necessary.
Notice: Sync engine (%@): No sync necessary.
Notice: Sync state engine (%@): Received state change
Change UUID: %@
Reconciled state hash: %@
Change type: %@
unique ID: %@
sync state item: %@
pass data: %@
Warning: Sync state engine (%@): State change based on backup hash (%@), not reconciled hash (%@); moving backup to reconciled
Notice: Sync state engine (%@): State change processed
Change accepted: %d
Change UUID: %@
New reconciled state: %@
Notice: Sync state engine (%@): Setting new backup and reconciled state
Backup state hash: %@
Reconciled state hash: %@
Notice: Sync state engine (%@): Applying change to pass library
Change UUID: %@
Warning: Sync state engine (%@): Not applying change to reconciled state because we failed to apply it to the pass library
Sync state item: %@
Notice: Sync state engine (%@): Applying change to reconciled state and accepting
Change UUID: %@
Notice: Sync state engine (%@): Not applying change to reconciled state and accepting
Change UUID: %@
Notice: Sync state engine (%@): Not applying change to pass library, but applying to reconciled state and accepting
Change UUID: %@
Notice: Sync state engine (%@): Rejecting change
Change UUID: %@
Warning: Sync state engine (%@): Unrecognized reconciled state hash %@
Notice: Sync state engine (%@): Received state change processed
Change UUID: %@
Accepted: %d
Our candidate change: %@
Notice: Sync state engine (%@): Reconciled state after state change processed: %@
Notice: Sync state engine (%@): change not being accepted is expected because current library sync state item (%@) no longer matches change sync state item (%@)
Notice: Sync state engine (%@): change not being accepted is unexpected
Current library sync state item: %@
Change sync state item: %@
Error: Candidate change has no unique ID!
Warning: Sync state engine (%@): Did not recognize change UUID (%@) in change state accepted message; candidate change UUID is %@
Notice: Sync state engine (%@): Received reconciled state unrecognized
Reconciled state hash: %@
Pass sync state: %@
Notice: Sync state engine (%@): Received proposed reconciled state
Proposed pass sync state: %@
Notice: Sync state engine (%@): Received proposed reconciled state accepted
Reconciled state hash: %@
Warning: Sync state engine (%@): Did not recognize hash (%@) in reconciled state accepted message; reconciled state hash is %@
Notice: Sync state engine (%@): No state changes to send; settling on reconciled state hash %@.
Notice: Sync state engine (%@): Ignoring request to apply pass update with unique ID %@ to local library since the pass is not in our library state: %@
Notice: Sync state engine (%@): Pass has been added/updated in local library also.
Reconciled sync state item: %@
Local library sync state item: %@
Change sync state item: %@
Notice: Sync state engine (%@): local pass has higher sequence counter (%@) than change (%@); not applying change to local library
Notice: Sync state engine (%@): Applying change in the absence of sync state counters
Notice: Sync state engine (%@): Not applying change in the absence of sync state counters
Notice: Sync state engine (%@): Applying change to reconciled state because it matches our library state
Local library sync state item: %@
Change sync state item: %@
Candidate change: %@
Notice: Sync state engine (%@): Not applying change to reconciled state since we are not applying it to the local library and have an outstanding candidate change for pass with unique ID %@: %@
Notice: Sync state engine (%@): Applying change to reconciled state even though we have an outstanding candidate change for pass with unique ID %@: %@
Notice: Sync state engine (%@): Sending state change
Change: %@
Notice: Sync state engine (%@): Sending state change processed
Change UUID: %@
Notice: Sync state engine (%@): Sending reconciled state unrecognized
Reconciled state hash: %@
Pass sync state: %@
Notice: Sync state engine (%@): Sending reconciled state accepted
Reconciled state hash: %@
Notice: Sync state engine (%@): Sending proposed reconciled state
Proposed pass sync state: %@
Notice: Sync state engine (%@): Requesting that delegate add pass to local pass library
Data: %@
Sync state item: %@
Notice: Sync state engine (%@): Delegate invoked add completion
sync state item: %@
added: %d
Notice: Sync state engine (%@): Requesting that delegate update pass in local pass library
Data: %@
Sync state item: %@
Notice: Sync state engine (%@): Delegate invoked update completion
sync state item: %@
updated: %d
Notice: Sync state engine (%@): Requesting that delegate remove pass in local pass library
unique ID: %@
Notice: Sync state engine (%@): Delegate invoked remove completion
unique ID: %@
removed: %d
Notice: Sync state engine (%@): encountered unexpected event
Notice: Sync state engine (%@): Engine state changed
Notice: Wrote pass data segment
File path: %@
Change UUID: %@
segment index: %u
data: %@
Warning: Missing segment for large pass; unable to return full data
Change UUID: %@
segment index: %u
Warning: Unable to get file handle for large pass; unable to return full data
Change UUID: %@
path: %@
Warning: Returning data for large pass
Change UUID: %@
Number of segments: %u
data: %@
Notice: Splitting pass data into segments
Maximum segment length: %u
data: %@
Notice: Adding pass data segment
data: %@
Warning: No need to split pass data into segments
Maximum segment length: %u
data: %@
Warning: Unable to split nil pass data into segments!
Notice: Got pass data segment segment
File path: %@
Change UUID: %@
segment index: %u
data: %@
Notice: Returning status %@ (service identifier %@). We don't have a peer payment pass setup.
Notice: Using mock SURF server; will return status %@ for transaction with identifier %@
Notice: Returning status %@ for transaction details %@ (service identifier %@)
Notice: Setting new peer payment transaction status %@ for transaction with identifier: %@
Notice: Ignoring new peer payment transaction status %@ for transaction with identifier: %@ transaction: %@
Notice: We are currently looking up actions for transaction with service identifier: %@
Notice: Starting looking up actions for transaction with service identifier: %@
Notice: Finished looking up actions for transaction with service identifier %@: actions %@, status %@
Warning: Error when looking up actions for transaction with service identifier %@: %@
Notice: TransactionManager: paymentPassWithUniqueIdentifier:%@ didReceiveTransaction:%@
Notice: TransactionManager: did update transaction detail with service Identifier:%@
Notice: Start fetching all peer payment transactions With peer payment pass ID: %@
Notice: New peer payment pass identifier is nil. Removing existing transactions.
Notice: Received %ld transactions for peer payment pass with unique ID %@
Notice: Remote interface presenter connection interrupted
Notice: Remote interface presenter connection invalidated
Notice: Request to present in-app payment interface for host application: %@ payment request: %@
Error: Remote object proxy error handler for present in-app payment interface invoked: %@
Notice: Request to present continuity payment interface for remote payment request: %@
Error: Remote object proxy error handler for present continuity payment interface invoked: %@
Notice: Request to present in-app interface for skeleton peer payment quote: %@
Error: Remote object proxy error handler for present in-app interface for skeleton peer payment quote invoked: %@
Notice: Request to clear skeleton peer payment quote: %@ error: %@
Error: Remote object proxy error handler for clear peer payment quote invoked: %@
Notice: Request to present set up Apple
Pay alert for %@
Error: %@: Could not execute SQL: %@: [%d, %s]
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "%@" statement)
Notice: Not opening database because we don't have what we need to migrate it
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Couldn't open %@ because of auth failure)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Couldn't open %@ (result %d))
Error: Couldn't set journal mode on database (result %d)
Notice: Solving DB corruption cause by DB v48
Notice: NPKGizmoDatabase: schema applied successfully: %d
Notice: Generating potentially-missing description fields
Error: Database is in a bad state; deleting and recreating
Notice: Gizmo database opened! Broadcasting database changed notification
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare deletion statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare pass insertion statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare diff insertion statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update delete pending" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pass diff" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pass data" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "insert transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "remove transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "remove transaction with service identifier" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transactions for pass" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transactions with source for pass" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transactions without source for pass" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transaction with service identifier" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pass unique ID for transaction identifier" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pass unique ID for transaction service identifier" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select delete transactions" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select transit applet state" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update transit applet state" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "insert ephemeral transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "delete ephemeral transaction" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select last add value amount" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update last add value amount" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select pending add value date" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update pending add value date" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "select balances state" statement)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare "update balances state" statement)
Notice: Lazily loading initial manifest
Error: *** CORRUPTED / INVALID PASS DATABASE: Unable to prepare "select pass descriptions" statement; this most likely means you need to delete the database at "%@" and kill %@
Notice: Initial manifest encountered key %@ local %@ remote %@
Notice: Loaded initial manifest: %@
Warning: failed to unarchive: %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot save nil pass)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Pass %@ has nil unique ID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Pass %@ has nil complete hash)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Nil database handle; did you check passDBIsAvailable before calling?)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unique ID %@ is nil)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot remove pass with nil unique ID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Transaction is nil)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Transaction Unique ID is nil)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: pass Unique ID cannot not be nil)
Notice: Fetching Volatile Pass Data from DB
Notice: Restoring Volatile Pass Data on DB
Error: Requested to notify for an add or update of a nil transaction
Error: Requested to notify for removal of a nil transaction
Notice: NPKGizmoDatabase already sending DB change, so coalescing
Notice: NPKGizmoDatabase alerting of DB change
Notice: Finished alerting of DB change, but a coalesced change was detected...rebroadcasting
Notice: Alerting external clients of DB change...
Notice: Saving diff %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Delete failed: %s; %s)
Notice: (PKPaymentBalance restore) restoring old balances for pass %@ %@
Notice: (PKPaymentBalance restore) archiving old balances for pass %@ %@ returned nil
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Insert failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Insert transaction failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Delete transaction failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Trim transactions failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil unique ID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Updating transit applet state failed: %s; %s)
Notice: Updating description %@ with new transit applet state %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil pass unique ID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Delete ephemeral transaction failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Setting last add value amount failed: %s; %s)
Notice: Updating description %@ with new last add value amount %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Setting pending add value date failed: %s; %s)
Notice: Updating description %@ with new pending add value date %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Updating balances failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Save diff failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: setDeletePending:forUniqueID: can't accept nil uniqueID)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Update delete pending failed: %s; %s)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: %s cannot take nil payment pass)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ did not contain payment application %@ (has applications = %@))
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Update preferred AID failed: %s; %s)
Notice: Updating description %@ with new preferred payment application %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Received invalid watch OS version %lu)
Notice: Skipping pass with unique ID %@ because it has no remote manifest hashes
Warning: Skipping pass with unique ID %@ from manifest calculation because it is missing manifest hash for this version
Notice: Skipping pass with unique ID %@ from manifest calculation because it has no remote manifest hash
Notice: NPKGizmoDatabase: on-disk version %ld out of date, migrating to current version %ld
Notice: NPKGizmoDatabase: migration success = %d
Notice: NPKGizmoDatabase: on-disk version %ld matches current version
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Invalid pass DB version string: %@)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Cannot save unsupported database version %ld)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to save version number to DB: %ld)
Notice: We were expecting a DB change, so suppressing DB reload
Notice: NPKGizmoDatabase DB changed externally, reloading
Notice: First unlock detected
Notice: Retrying opening database
Notice: Start search column:%@ in table:%@
Notice: found column:%@ in table:%@
Notice: Could not find column:%@ in table:%@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Unable to prepare statement to find column:%@ in table:%@)
Notice: initializing HID client
Error: ButtonController:IOHIDEventSystemClientCreate create failed
Notice: Sending default shipping address
Notice: Sending default contact email
Notice: Sending default contact phone
Notice: Sending default contact name
Notice: Sending %d default billing addresses
Notice: Decoded default shipping address
Notice: Decoded default contact email
Notice: Decoded default contact phone
Notice: Decoded default contact name
Notice: Decoded %d default billing addresses
Error: Unable to decode billing address: %@
Notice: Work queue %@: ended work block
Notice: ending XPC transaction for work
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: NPKWorkQueue was performing work, but somehow self.performingWork was NO)
Notice: Work queue %@: starting next work block
Notice: taking out XPC transaction for work
Notice: Got express passes changed notification in express pass controller
Warning: Accepting new express status because express transit pass changed from %@ to %@.
Warning: Accepting new express status because it is greater than the previous express status.
Notice: Accepting reset of express status.
Notice: %@ transition from status %@ to %@
Notice: %@ Start listening for notifications
Notice: %@ Stop listening for notifications
Notice: Received Enter Near Field Notification for automatic selection technology type %d
Error: Received Enter Near Field Notification, but we have no express pass for matching express pass information %@. Will try to recover by updating the pass.
Notice: Suica technology detected. Suica express passes information: %@
Notice: Received Express Transaction Start Notification for application identifier %@
Notice: Received Express Transaction Time Out Notification for application identifier %@
Notice: Received Express Transaction End Notification for application identifier %@
Notice: Received Express Transaction Failed Notification for application identifier %@
Error: Received Express Transaction Started Notification for application identifier %@, but no pass.
Error: Received Express Transaction Ended Notification for application identifier %@, but no pass.
Error: Received Express Transaction Failed Notification for application identifier %@, but no pass.
Notice: Received Exit Near Field Notification for automatic selection technology type %d
Notice: Received Library Passes Changed Notification %@
Notice: Transaction application identifier: %@, express pass information %@, express pass unique ID %@
Notice: Updating current express passes with new information: %@ (previous: %@)
Notice: fetch pass %@ Unique Identifier %@ for express pass information %@
Error: Express pass controller could not find pass for express pass information: %@
Notice: Using overridden peer payment service url '%@' for registration.
Notice: Local authentication coordinator: begin local authentication
Notice: Local authentication coordinator: existing completion handler
Notice: Local authentication coordinator: already-completed context
Notice: Local authentication coordinator: in-progress context
Notice: Local authentication coordinator: created new context
Notice: Local authentication coordinator: policy evaluated
Notice: Local authentication coordinator: have completion handler for evaluate policy
Notice: Local authentication coordinator: no completion handler for evaluate policy
Notice: Cleanup delegate got session complete for reason %d with transaction %@ and transit history %@ for unique ID %@
Notice: Missing data from balance:%@ localizedTitle:%@ formattedValue:%@
Notice: Time since account refresh %f shouldRefresh %@
Notice: Forcing periodic update of account %@
Notice: Received PKAccountServiceAccountsChangedNotification
Error: Can't update pass account with a nil accountIdentifier
Notice: Setting account state %@
Error: Error getting account pass for identifier %@: %@
Notice: account-pass: account %@ collection notice state %@
Notice: Loading web service context
Notice: Loading peer payment web service context
Notice: Loading peer payment account
Notice: Device unpaired
Error: No web service context from daemon; starting fresh!
Error: No peer payment web service context from daemon; starting fresh!
Error: No peer payment web service account from daemon
Notice: Device failed to pair: %@
Error: Should not be receiving precondition not met messages from Bridge (%@)
Error: Should not be receiving payment transactions from Bridge (%@ %@ %@)
Error: Should not be receiving applet state from Bridge (%@ %@)
Error: Should not be receiving remove transactions from Bridge (%@)
Error: Should not be receiving balance update from Bridge (%@ %@)
Error: Should not be receiving update payment pass requests from Bridge (%@)
Error: Should not be receiving preferred AID updates from Bridge (%@)
Notice: Archive web service context: %@
Error: Should not be archiving web service background context from Bridge
Error: Should not be receiving web service context from watch from Bridge
Notice: Shared web service provider: Sending web service context to watch
Error: Should not be receiving show payment setup requests from Bridge
Error: Should not be receiving send payment options defaults requests from Bridge
Error: Should not be receiving updated peer payment web service context from Bridge
Error: Should not be receiving download all payment passes from Bridge
Error: Should not be receiving check companion peer payment registration state from Bridge
Notice: Telling daemon to archive peer payment web service context
Notice: Set new conversation:%@ sender address:%@ recipient addresses:%@
Notice: Requested Lookup recipient Information if necessary
Notice: We already have a current peer payment controller. Resetting.
Notice: perform Payment with amount:%@ requestToken:%@, recipient:%@, sender:%@
Notice: Send and receive currencies match. Showing skeleton peer payment quote
Notice: Send and receive currencies differ (%@ vs %@). Not using skeleton peer payment quote.
Notice: Finish perform Payment with amount:%@ requestToken:%@, conversation:%@ response:%@, error:%@ success:%d
Notice: Not performing payment because we are no longer the current peer payment controller (current %@ vs ours %@)
Error: Error fetching quote: %@
Error: Could not identify recipient %@ with error %@
Notice: Currently performing a look up for given recipient address:%@
Notice: We already lookup for recipient with addres:%@ recipient:%@
Notice: Start lookup recipient information with with recipientAddress:%@ senderAddress:%@
Notice: Finish lookup information with recipient:%@ status:%@
Notice: Will not lookup recipient information with nil recipient Address
Notice: %@: post Recipient Updated Notification notification
Notice: TransitPassInfoManager: setting Passes:%@ to:%@
Notice: TransitPassInfoManager: Ignore non-transit pass with uniqueID:%@ to:%@
Notice: TransitPassInfoManager: Adding pass with uniqueID:%@ to:%@
Notice: TransitPassInfoManager: Requested refresh all pass Balance
Notice: TransitPassInfoManager: Updating refresh balance for with uniqueID:%@
Notice: TransitPassInfoManager: transit pass info:%@ for pass with uniqueID:%@
Notice: TransitPassInfoManager: didReceiveBalanceUpdate:%@ for pass uniqueID:%@
Notice: TransitPassInfoManager: didUpdateWithTransitPassProperties:%@ for pass uniqueID:%@
Notice: TransitPassInfoManager: Requested fetch most recent Balances for pass with uniqueID:%@
Notice: TransitPassInfoManager: received most recent Balances:%@ for pass with uniqueID:%@
Notice: TransitPassInfoManager: Requested fetch most recent trasit psas properties for pass with uniqueID:%@ payment Application:%@
Notice: TransitPassInfoManager: Received most recent trasit psas properties:%@ for pass with uniqueID:%@ payment Application:%@ 
Notice: TransitPassInfoManager: Requested to update trasit balance model for pass uniqueID:%@
Notice: TransitPassInfoManager: Missing transit balance model for pass uniqieID:%@. Will not update it
Notice: NPKExpressTransitInterfaceController initializing
Notice: %@ Got transit express started for pass with unique ID %@
Notice: %@ Got transit express completed for unique ID %@
Warning: %@ No transaction start applet state; fetched %@ from data source
Notice: %@ Got transit express mode failed for unique ID %@
Notice: Updating express transit cards: %@
Warning: More than one transit express pass! This isn't supported.
Warning: More than one express payment application identifier for a transit pass! This isn't supported.
Notice: Scheduling dismissal of express transit alert
Notice: Dismissing express transit alert
Notice: Transit history fetcher got updated applet history %@ for AID %@
Warning: %@ No transaction start applet state from data source; creating fresh
Warning: Got updated transit applet history for AID that is not the express transit AID
Error: No express transit pass for transit applet history!
Notice: Active accounts changed: %@
Notice: Devices changed: %@
Error: Incoming unhandled protobuf: %@ %@ %@ %@ %@
Notice: Service sent with success: %@ %@ %@ %d %@
Notice: identifier %@ request %@ error handler %@
Notice: Noting that provisioning began
Notice: Noting that provisioning ended
Warning: We don't have any assertion to invalidate
Notice: Noting that the provisioning UI appeared
Notice: error %@ assertion %@
Notice: Noting that the provisioning UI disappeared
Notice: Archiving web service context: %@
Notice: Archiving web service background context: %@
Notice: Payment web service has passes of type %lu? %d
Notice: Can provision payment pass with primary account identifier %@
Notice: incoming protobuf %@
Warning: got response with no associated message handler
Error: No associated message ID in response
Warning: No response identifier for message with identifier %@
Error: No message identifier for protobuf %@
Notice: Pairing info response: set auth random %d
Notice: Device is pre-Daytona; not sending pairing info request
Warning: Device is not Fortune or later; falling back to previous auth random setting logic.
Notice: Setting auth random
Notice: Not necessary to set auth random; returning pairing state
Notice: currentlyPairing %d
Notice: Do not need to set auth random from PassKit request; returning pairing info
Notice: Got balance update for unique ID %@ with %u balances
Notice: Handling balance update %@ for unique ID %@
Notice: Push token from gizmo is %@
Error: Received nil SE registration data!
Notice: Fetcher %@ fetched location %@
Notice: Fetched provisioning data %@
Notice: Got provisioning error %@
Notice: Device provisioning data:
device name is %s
phone number is %s
location is %s
Notice: Requested Trusted Device Enrollment Info for WebService: %@
Notice: Request to sign data of length %lu with signature entanglement mode %d
Notice: Falling back to pre-Daytona signing method
Notice: Request to sign data of length %lu
Notice: did register with region map %@ (primary topic %@)
Notice: completed %d %@
Notice: error %@
Notice: Payment web service updated configuration: %@
Notice: region %@ support %d
Notice: Delete application with AID %@
Notice: Delete AID %@ completed %d %@
Notice: Add payment pass: %@
Notice: finished %d progress %f error %@
Notice: Redownloading all payment passes as requested by web service %@
Notice: Redownload of all payment passes complete as requested by web service %@
Error: Returned card protobuf does not have matching array lengths (%u %u %u)!
Notice: Handle pending removal of unique ID %@
Warning: No response expected for message with identifier %@
Notice: unique ID %@ AID %@
Notice: Handle preferred AID %@ for unique ID %@
Notice: Incoming update payment pass protobuf: %@
Notice: Incoming update push token protobuf: %@
Notice: Precondition not met: %d unique IDs %@ should unregister %d
Notice: %u transactions
Error: VAS transaction protobuf does not have matching array lengths (%u %u)!
Notice: pass %@ has valid payload %d
Notice: Scheduling automatic presentation notification for unique ID %@
Notice: Automatic presentation notification scheduled for unique ID %@: %d
Error: Payment transaction protobuf does not have matching array lengths (%u %u)!
Notice: Transaction: %@ for unique ID %@
Error: Applet state protobuf does not have matching array lengths (%u %u)!
Notice: Will handle Transactions: %@ appletStates: %@ for uniqueIDs:%@
Notice: Request to remove transactions with identfiers: %@
Notice: Retrieving transactions for unique ID %@
Error: IDS failed to send protobuf %@
Notice: Received updated applet state for pass with unique ID %@
Notice: Decoded applet state: %@
Notice: Target device: set express mode: %@ unique ID %@, AID %@, request authorization %d
Notice: remove express passes with card type: incoming protobuf %@
Notice: Target device: remove express passes with card type: %@
Notice: remove express pass with unique identifier: incoming protobuf %@
Notice: Target device: remove express pass with unique ID: %@
Notice: Target device: conflicting express pass identifiers with passInfo %@, referenceExpressPassesInformation:%@
Notice: conflicting express pass identifiers incoming protobuf %@
Notice: Target device: Received conflictingPassesUniqueIDs:%@ conflictingReferencePassIdentifier:%@
Notice: Sending message to cancel outstanding set default express pass requests with mode: %@
Notice: Target device: enable service mode for unique ID %@
Notice: Ignoring set enable express transit request to pre-Daytona watch
Notice: Sending message to cancel outstanding service mode requests
Notice: Remote update pass. Received response:%@
Error: Remote update pass. No associated message ID in response
Warning: Remote update pass. Got response with no associated message handler
Notice: Remote update pass with uniqueID:%@. Sending message
Error: Remote update pass with uniqueID:%@. No message identifier for protobuf %@
Notice: Sending message to cancel outstanding remote pass Update Reques for pass UniqueID:%@
Notice: Peer payment register: incoming protobuf %@
Notice: Peer payment register with URL %@ forceReRegistration %i
Notice: Target device peer payment unregister: incoming protobuf %@
Notice: Target device peer payment unregister
Notice: Target device provision peer payment pass: incoming protobuf %@
Notice: Target device provision peer payment pass
Notice: Target device update peer payment account: incoming protobuf %@
Notice: Target device update peer payment account with completion
Notice: Companion received handlePeerPaymentTermsAndConditionsAcceptanceRequest: message
Notice: (account-pass-provisioning) Companion received handleDeviceUnlockedForPendingProvisioningRequest: message
Notice: Payment web service supports accounts = %d, hasAccount: %d, regionEnabled: %d, hasURL: %d
Notice: Payment web service supports accounts = %d, webService needs registration
Notice: Target update accounts for provisioning (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: accounts for provisioning
Notice: Target device updatedAccountsForProvisioningWithCompletion
Notice: Target deviceMetadataWithFields (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: deviceMetadataWithFields
Notice: Target device deviceMetadataWithFields: %lu
Notice: Target device supportedFeatureIdentifiersWithPaymentWebService
Notice: Payment web service supports apply service: %d, hasApplications: %d, hasAccounts: %d, regionEnabled: %d, hasURL: %d
Notice: Device supported feature identifiers: %@
Notice: NRDevicePropertySupportedFeatureIdentifiers returned a nil set
Notice: Config supported feature identifiers: %@
Notice: Final supported feature identifiers: %@
Notice: primary region: %@
Notice: (account-pass-provisioning) Target updateAccountWithIdentifier (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: updateAccountWithIdentifier
Notice: (account-pass-provisioning) Target device updateAccountWithIdentifier: %@
(account-pass-feature-check) watchOSVersion %@ does not support Apple card capability. Removing from features %@
(account-pass-feature-check) watchOSVersion %@ does support Apple card capability.
Notice: (account-pass-provisioning) Target performDeviceCheckInResponse (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: performDeviceCheckInResponse
Notice: (account-pass-provisioning) Target device performDeviceCheckInWithCompletion
Notice: (account-pass-provisioning) Target availableProductsResponse (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: availableProductsResponse
Notice: (account-pass-provisioning) calling completion for availableProductsWithCompletion %@ (%@) %@
Notice: (account-pass-provisioning) Target device availableProductsWithCompletion
Notice: (account-pass-provisioning) Target performProductActionResponse (account-pass-protobuf): incoming protobuf %@
Notice: got pending response for account-pass-protobuf: performProductActionResponse
Notice: (account-pass-provisioning) calling completion for performProductActionRequest %@ (%@) %@
Notice: (account-pass-provisioning) Target device performProductActionRequest %@
Notice: (account-pass-provisioning) Target device setDefaultPaymentPassUniqueIdentifier: %@
Notice: (account-pass-provisioning) completion of setDefaultCardUniqueID %@ resulted in success = %@
Notice: Target device initialize cloud store if necessary: incoming protobuf %@
Notice: Target device initialize cloud store if necessary
Notice: Target device initialize cloud store if necessary with handler: incoming protobuf %@
Notice: Target device initialize cloud store if necessary with handler
Notice: Target device check TLKs missing: incoming protobuf %@
Notice: Target device check TLK missing
Notice: Target device reset Apple Pay manetee view: incoming protobuf %@
Notice: Target device reset Apple Pay manatee view
Notice: Target device cloud store status: incoming protobuf %@
Notice: Target device cloud store status
Notice: Target device download all payment passes: incoming protobuf %@
Notice: Target device check companion peer payment registration state: incoming protobuf %@
Notice: Target device: handling potential express pass %@
Notice: Target device: missing complition block will not handling potential express pass %@
Notice: passupgrade request:%@ express pass information:%@ for uniqueID:%@
Notice: Not setting pass as express because of nil express pass information
Notice: Express passes information to use as reference:%@ from local DB
Notice: Cheking Conflicting reference passes
Notice: Found conflicting category:%@ for pass with unique ID:%@
Notice: Found peer payment pass with uniqueID:%@ conflicting with new pass. Will ignore it
Notice: Conflicting reference passes doesn't belong to the same express category:%@. Will handle potential express pass with unique ID %@
Notice: express pases setup in express mode:%@ conflict with givent pass. Will not set in express mode pass with uniqueID:%@
Notice: Not conflicting express passes found. Will handle potential express pass with unique ID %@
Notice: Target Device: handle potential express pass received Remote pass upgrade updated for  pass with uniqueID:%@ received, Status:%@ updatedPass:%@ error:%@
Notice: Expected to be able to get express pass from updated pass but fail. Using current express pass information:%@
Notice: did finish handle potential express pass with result %lu, current express passes information: %@
Notice: Target device: legacy handling potential express pass %@
Notice: Will handle potential express pass with unique ID %@
Notice: SPI not available. Can't create dummy express pass information for pass with uniqueID:%@
Notice: Sending updated payment options defaults to watch
Error: Failed to send updated payment options defaults to watch %@!
Notice: Sent updated payment options defaults to watch with message ID %@
Warning: Not sending unregistered web service context to watch (%@) while companion migration is needed
Warning: Not sending invalid web service context to watch (%@)
Notice: Sending web service context to watch: %@
Notice: (account-pass-context) sending web service context applyServiceURL %@ primaryRegion %@
Error: Failed to send web service context to watch %@!
Notice: Sent web service context to watch with message ID %@
Notice: Telling watch to handle companion migration
Notice: Sent companion migration event to watch with message ID %@
Notice: Sending companion peer payment registration event to watch
Error: Failed to send companion peer payment registration event to watch %@!
Notice: Sent companion peer payment registration event to watch with message ID %@
Notice: Sending companion iCloud signout event to watch
Error: Failed to send iCloud signout event to watch %@!
Notice: Sent companion iCloud signout event to watch with message ID %@
Notice: Got updated web service context from watch: %@
Notice: (account-pass-context) received updated web service context applyServiceURL %@ primaryRegion %@
Notice: Watch requested web service context
Notice: Watch requested that we show payment setup for app %@
Notice: Watch requested transaction defaults
Notice: Watch provided updated peer payment context and account
Warning: Got updated peer payment web service message, but could not decode context
Notice: Target Device: Received Remote pass upgrade updated for  pass with uniqueID:%@ received, Status:%@ updatedPass:%@ error:%@
Notice: Setting or resetting cleanup timer for message with identifier %@
Notice: Timed out waiting for response; invoking error handler for message %@
Error: Connection to NPKCompanionAgent invalidated
Error: Connection to NPKCompanionAgent interrupted
Notice: New NPKCompanionAgentConnection created: %@
Notice: NPKCompanionAgentConnection deallocating: %@
Notice: NPKCompanionAgentConnection (%@): XPC connection to daemon was invalidated
Notice: NPKCompanionAgentConnection (%@): XPC connection to daemon was interrupted
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: -[NPKCompanionAgentConnection (%@) xpcConnection] would have returned nil)
Notice: NPKCompanionAgentConnection (%@): Server payment passes changed
Notice: NPKCompanionAgentConnection (%@): default card changed
Notice: Card on Felica secure element cannot be transferred to non-Felica watch
Notice: NPKCompanionAgentConnection (%@): Request to determine if we should show the watch offer for %@ (have paired watch %d can be transferred %d)
Notice: Should show watch offer: supported in region %d hasPassOnWatch %d hasMaximumPassesOnWatch %d
Notice: NPKCompanionAgentConnection (%@): Note watch offer shown for %@
Notice: NPKCompanionAgentConnection (%@): Requesting that provisioning begin from watch offer for %@
Notice: NPKCompanionAgentConnection (%@): (account-pass-provisioning) handleDeviceUnlockedForPendingProvisioningRequestFromGizmo
Notice: NPKCompanionAgentConnection (account-pass-provisioning) (%@): provisionPassForAccountIdentifier %@ makeDefault %@
Notice: NPKCompanionAgentConnection (%@): Requesting registration of paired device
Notice: NPKCompanionAgentConnection (%@): Note provisioning preflight complete with success %d error %@
Notice: NPKCompanionAgentConnection (%@): Client requested payment pass unique IDs
Notice: NPKCompanionAgentConnection (%@): Reply with cached unique IDs: %@
Notice: NPKCompanionAgentConnection (%@): No cached unique IDs available; requesting from daemon
Notice: NPKCompanionAgentConnection (%@): Reply with newly-fetched unique IDs: %@
Notice: NPKCompanionAgentConnection (%@): Requesting payment pass with unique ID %@ from daemon
Notice: NPKCompanionAgentConnection (%@): Reply with cached payment pass: %@
Notice: NPKCompanionAgentConnection (%@): Reply with newly-fetched payment pass: %@
Notice: NPKCompanionAgentConnection (%@): Requesting payment passes with FPANID %@
Notice: NPKCompanionAgentConnection (%@): Requesting payment pass with DPANID %@
Notice: NPKCompanionAgentConnection (%@): Requesting save of payment pass with unique ID %@
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ has data accessor %@)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ had nil file URL)
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: Payment pass %@ had nil uniqueID)
Error: Unable to copy file from %@ to %@
Notice: Success, deleting temporary pass file %@
Notice: For current device; posting ntoification
Notice: Request to remove payment pass with unique ID %@
Notice: NPKCompanionAgentConnection (%@): Request to set default card with unique ID %@
Notice: NPKCompanionAgentConnection (%@): Fetching default card unique ID
Notice: NPKCompanionAgentConnection (%@): Fetching default payment application for pass with unique ID %@
Notice: NPKCompanionAgentConnection (%@): Setting default payment application for unique ID %@: %@
Notice: NPKCompanionAgentConnection (%@): Requesting consistency check
Notice: NPKCompanionAgentConnection (%@): Requesting redownload all payment passes
Notice: NPKCompanionAgentConnection (%@): Sending pending unpairing request
Notice: NPKCompanionAgentConnection (%@): Sending pending iCloud signout request
Notice: NPKCompanionAgentConnection (%@): handlePeerPaymentTermsAndConditionsRequestFromGizmo
Notice: Should show Apple Pay settings: %s (supported in region %d hasPaymentPasses %d)
Notice: NPKCompanionAgentConnection (%@): Request to delete from device with Pairing ID: %@ Transaction with Identifier: %@ for Pass Unique Identifier: %@
Notice: Error while creating connection to delete transaction with Identifier: %@ for Pass Unique Identifier: %@. Error: %@
Warning: TrustedDeviceEnrollmentInfo ignore request. handler not provided
Notice: Requested gizmo trusted device enrollment signature
Error: TrustedDeviceEnrollmentInfo: Error connecting to gizmo target device.
Error: *** NPKAssertion failure in %{public}@, %{public}s:%ld (reason: -[NPKCompanionAgentConnection remoteObjectProxy] would have returned nil)
Error: Error on NPKCompanionAgentConnection connection: %@
Notice: Setting screen scale for pass with unique ID %@ to %.2f
Notice: NPKCompanionAgentConnection (%@): Payment pass did enable transaction service: %@
Notice: NPKCompanionAgentConnection (%@): Payment pass did receive transaction: %@ transaction %@
Notice: NPKCompanionAgentConnection (%@): Payment pass did remove transaction: %@, transaction %@
Notice: NPKCompanionAgentConnection (%@): Payment pass did update transit pass properties: %@, properties %@
Notice: NPKCompanionAgentConnection (%@): Payment pass did update balances: %@, balances %@
Error: Tried to access invalid object at index %lu in array %@ with %lu elements
Error: *** NPKAssertion failure in %{public}s, %{public}s:%ld (reason: Unable to find class for string %@)
Notice: Paired or pairing device has advertised name %@
Notice: Synced settings changed remotely
Notice: Express passes information changed remotely
Notice: Adding handler to runloop...
Notice: setting defaults for %@
Notice: 
%@ %@: old %@ new %@ (%@)
Notice: synchronizing and sending '%@' notification for domain %@
Notice: 
managed %@ %@: old %@ new %@ (%@)
Notice: countryCode %@ configuration dict %@ support %d
Debug: this device class 
 OS version 
 platform 
 supported regions %@
Debug: paired device class 
 OS version 
 platform 
 supported regions %@
Debug: Final supported regions: %@
Error: NPKCopyFileAtURL: one of the source URL (%@) or destination URL (%@) were invalid
Notice: Max payment cards is zero. Returning companion value of %u.
Notice: Applet state is %@
Notice: Transit properties are %@ (%@)
Notice: LaunchServices yielded localized app name '%@' for pid %d
Notice: proc_name yielded process name '%@' for pid %d
Notice: Supports express for technology type %d: %d
Notice: Paired device does not support peer payment; not allowing peer payment registration
Notice: Secure element is not available on local device; not allowing peer payment registration
Notice: Payment preconditions not satisfied; not allowing peer payment registration
Notice: Peer payment web service has account: %d region enabled: %d has URL: %d
Notice: Web service does not support peer payment; not allowing peer payment registration
Notice: Should allow peer payment registration? %d
Warning: failed to archive: %@
Notice: Secure Element Available: %{public}@
Notice: Passcode is enabled: %{public}@
Notice: Wrist Detection is enabled if necessary: %{public}@
Notice: Marking companion migration needed: %d
Notice: Device:%@ supports %u credential type:%lu (%@)
Notice: could not get device class from pairing/paired device:%@
Warning: Unexpected instance class:%@ for pairing/paired device DeviceClass property. Will drop it
Warning: could not create device version with deviceClass:%@ OSVersion:%@
Notice: Missing completion block. Could not acquire assertion with description:%@
Notice: Requesting provisioning assertion with reason:%@
Notice: Received provisioning assertion with reason:%@ assertion:%@ error:%@
Warning: Cannot validate web service context (%@) without paired device SEIDs
Warning: Web service context (%@) is invalid because the device ID (%@) does not match the watch's SEIDs (%@)
Notice: Home directory is %@
Notice: Got device paired notification; updating home directory path
Notice: Got device active notification; updating home directory path
Notice: Demo mode values updated:
Store demo mode is %s
Hands-on demo mode is %s
UI-only demo mode is %s
N@q=
i@q=
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
