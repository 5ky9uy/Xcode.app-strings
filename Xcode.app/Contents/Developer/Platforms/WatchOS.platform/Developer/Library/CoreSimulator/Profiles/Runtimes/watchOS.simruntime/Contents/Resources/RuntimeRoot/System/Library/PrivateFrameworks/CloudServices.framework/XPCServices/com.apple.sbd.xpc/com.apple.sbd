init
dsid
passphrase
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
validateInput
recordLabel
recoveryPassphrase
escrowRecord
recordID
initWithSecureBackup:
.cxx_destruct
setRecordLabel:
setEscrowRecord:
setRecordID:
_recordLabel
_escrowRecord
_recordID
getAccountInfoWithRequest:reply:
enableWithRequest:reply:
recoverWithRequest:reply:
stashRecoveryDataWithRequest:reply:
disableWithRequest:reply:
updateMetadataWithRequest:reply:
cachePassphraseWithRequest:reply:
uncachePassphraseWithRequest:reply:
cacheRecoveryKeyWithRequest:reply:
uncacheRecoveryKeyWithRequest:reply:
changeSMSTargetWithRequest:reply:
startSMSChallengeWithRequest:reply:
getCountrySMSCodesWithRequest:reply:
backOffDateWithRequest:reply:
setBackOffDateWithRequest:reply:
cachePassphraseWithRequestAsync:
uncachePassphraseWithRequestAsync:
backupWithInfo:reply:
notificationOccurred:
stateCaptureWithReply:
interfaceWithProtocol:
alloc
initWithServiceName:
setRemoteObjectInterface:
resume
_CreateSecureBackupConnection
initWithFormat:
UUID
UUIDString
initWithUserActivityLabel:
appleID
encodeObject:forKey:
authToken
backOffDate
countryDialCode
countryCode
deleteAll
encodeBool:forKey:
emcsCred
emcsDict
emcsMode
escrowProxyURL
fmipRecovery
fmipUUID
icdp
iCloudEnv
iCloudIdentityData
iCloudPassword
idmsData
idmsRecovery
metadata
metadataHash
oldEMCSCred
recoveryKey
smsTarget
silent
stingray
synchronize
useCachedPassphrase
useRecoveryPET
usesMultipleiCSC
usesRandomPassphrase
usesRecoveryKey
verificationToken
activityLabel
activityUUID
decodeObjectOfClass:forKey:
decodeBoolForKey:
decodePropertyListForKey:
reason
setObject:forKeyedSubscript:
errorWithDomain:code:userInfo:
objectForKeyedSubscript:
setAppleID:
setAuthToken:
setBackOffDate:
setCountryDialCode:
setCountryCode:
numberWithBool:
setDeleteAll:
setDsid:
setEmcsCred:
setEmcsDict:
setEmcsMode:
setEscrowProxyURL:
setFmipRecovery:
setFmipUUID:
setIcdp:
setICloudEnv:
setICloudIdentityData:
setICloudPassword:
setIdmsData:
setIdmsRecovery:
setMetadata:
setMetadataHash:
setOldEMCSCred:
setPassphrase:
setRecoveryKey:
setSmsTarget:
setSilent:
setStingray:
setSynchronize:
setUseCachedPassphrase:
setUseRecoveryPET:
setUsesMultipleiCSC:
setUsesRandomPassphrase:
setUsesRecoveryKey:
setVerificationToken:
code
remoteObjectProxyWithErrorHandler:
invalidate
remoteObjectProxy
addBarrierBlock:
synchronousRemoteObjectProxyWithErrorHandler:
populateWithInfo:
getAccountInfoWithError:
getAccountInfoWithResults:
getAccountInfoWithInfo:completionBlockWithResults:
updateMetadataWithError:
updateMetadataWithCompletionBlock:
enableWithError:
enableWithCompletionBlock:
recoverWithError:
recoverWithResults:
recoverWithInfo:completionBlockWithResults:
disableWithError:
disableWithCompletionBlock:
stashRecoveryDataWithCompletionBlock:
cachePassphrase
cachePassphraseWithCompletionBlock:
uncachePassphrase
uncachePassphraseWithCompletionBlock:
startSMSChallengeWithError:
startSMSChallengeWithResults:
startSMSChallengeWithInfo:completionBlockWithResults:
getCountrySMSCodesWithResults:
changeSMSTargetWithError:
changeSMSTargetWithCompletionBlock:
backOffDateWithCompletionBlock:
setBackOffDateWithCompletionBlock:
initWithRequest:
setSes:
srpInitBlob
srpRecoveryBlobFromData:error:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
cacheRecoveryKeyWithCompletionBlock:
uncacheRecoveryKeyWithCompletionBlock:
backupWithInfo:completionBlock:
stateCaptureWithCompletionBlock:
getAccountInfoWithInfo:results:
getAccountInfoWithInfo:completionBlock:
updateMetadataWithInfo:
updateMetadataWithInfo:completionBlock:
enableWithInfo:
enableWithInfo:completionBlock:
recoverWithInfo:results:
recoverWithInfo:completionBlock:
disableWithInfo:
disableWithInfo:completionBlock:
stashRecoveryDataWithInfo:completionBlock:
cachePassphraseWithInfo:
cachePassphraseWithInfo:completionBlock:
uncachePassphraseWithInfo:
uncachePassphraseWithInfo:completionBlock:
startSMSChallengeWithInfo:results:
startSMSChallengeWithInfo:completionBlock:
getCountrySMSCodesWithInfo:completionBlockWithResults:
changeSMSTargetWithInfo:
changeSMSTargetWithInfo:completionBlock:
backupWithInfo:
backOffDateWithInfo:completionBlock:
setBackOffDateWithInfo:completionBlock:
srpInitNonce
srpRecoveryBlobFromSRPInitResponse:
certData
setCertData:
encodedMetadata
setEncodedMetadata:
queue
setQueue:
error
setError:
setActivityLabel:
setActivityUUID:
_deleteAll
_emcsMode
_fmipRecovery
_icdp
_idmsRecovery
_silent
_stingray
_synchronize
_useCachedPassphrase
_useRecoveryPET
_usesMultipleiCSC
_usesRandomPassphrase
_usesRecoveryKey
_appleID
_authToken
_backOffDate
_certData
_countryDialCode
_countryCode
_dsid
_emcsCred
_emcsDict
_encodedMetadata
_escrowProxyURL
_fmipUUID
_iCloudEnv
_iCloudIdentityData
_iCloudPassword
_idmsData
_metadata
_metadataHash
_oldEMCSCred
_passphrase
_recoveryKey
_smsTarget
_verificationToken
_queue
_error
_activityLabel
_activityUUID
_ses
processInfo
processName
initWithURLResponse:data:
httpResponse
allHeaderFields
host
path
status
errorCode
responseDictionary
localizedDescription
message
errorMessage
userInfo
mutableCopy
integerValue
version
initWithBase64EncodedString:options:
cert
clubID
_clubID
bypassToken
srpData
propertyListWithData:options:format:error:
recoveryData
fmipRecoveryData
smsVerificationCodeLength
countByEnumeratingWithState:objects:count:
numberWithInt:
addObject:
accountInfo
smsTargetsInfo
countrySMSCodes
bskb
length
enumerateByteRangesUsingBlock:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytesNoCopy:length:freeWhenDone:
sha1Digest
hexString
enumeratePeersWithBlock:
peerIDs
peersAndBackupKeyDigests
backupKeyDigests
peerIDForKeybagDigest:
fileSystemRepresentation
URLByAppendingPathComponent:
URLByAppendingPathExtension:
openDBWithURL:truncate:
stringWithUTF8String:
dictionaryWithObjects:forKeys:count:
bytes
UTF8String
appendBytes:length:
initWithBytes:length:
initWithUTF8String:
setDb:
initWithURL:recordID:
addItem:withKey:forClass:error:
removeItemWithKey:error:
enumerateKeysAndItemsUsingBlock:
resetDBWithKeybag:
closeDB
sqliteExec:
keybag
keybagDigest
manifestHash
_url
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLForViewName:
migrateView:
count
viewName
defaultStore
dictionaryForKey:
addItem:error:
lastPathComponent
initWithContentsOfURL:
resetWithKeybag:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
pathExtension
isEqualToString:
stringByDeletingPathExtension
migrateBTree:keyClass:
migrateFromKVS
initWithViewName:recordID:
backupDict
backupData
closeStore
_viewName
statusCode
localizedStringForStatusCode:
dictionary
initWithLocaleIdentifier:
setLocale:
setDateFormat:
dateFromString:
longLongValue
dateWithTimeIntervalSinceNow:
localString
_parsePlistFromData:error:
initWithData:encoding:
_responseDictionary
_httpResponse
dataWithPropertyList:format:options:error:
base64EncodedStringWithOptions:
base64EncodedStringFromDict
iCDP
errorWithCode:error:format:
baseURL
protocolVersion
command
stringWithFormat:
dataUsingEncoding:
authorizationHeaderWithUser:password:authType:
urlRequest
bodyDictionary
setHTTPBody:
setHTTPMethod:
lowercaseString
stringByAppendingFormat:
authorizationHeader
urlString
protocol
phoneNumber
challengeCode
silentAttempt
blob
setBlob:
baseRootCertVersions
setBaseRootCertVersions:
trustedRootCertVersions
setTrustedRootCertVersions:
setBypassToken:
_iCDP
_silentAttempt
_recoveryPassphrase
_baseURL
_protocol
_command
_phoneNumber
_challengeCode
_blob
_baseRootCertVersions
_trustedRootCertVersions
_bypassToken
stringByAppendingString:
responseClass
aa_primaryAppleAccount
aa_isPrimaryEmailVerified
aa_personID
aa_altDSID
credentialForAccount:error:
token
propertiesForDataclass:
objectForKey:
dataclassProperties
numberWithLongLong:
logEvent:action:force:
posixDateFormatter
date
stringFromDate:
setDictionary:forKey:
traceValue:forKey:icdp:
rangeOfString:
substringToIndex:
backupSliceKeybagHasRecoveryKey:
cachedKeychainURL
removeItemAtURL:error:
enumerateKeysAndObjectsUsingBlock:
createDERDataFromPlist:
copyMyPeerInfo:
copyPeerID:
copyBackupKey:
kvsQueue
_getProtectedKeychainAndKeybagDigestFromKVS:
_storeProtectedKeychainInKVS:keybagDigest:
_storeVeeTwoBackupInKVS:forViewName:withKeyStore:manifestDigest:keybagDigest:
backupWithRegisteredBackupsWithError:handler:
removeObjectForKey:
_removeCachedKeychain
boolForKey:
setBool:forKey:
setString:forKey:
dataForKey:
setData:forKey:
additionalStoreWithIdentifier:
compare:
dictionaryRepresentation
hasPrefix:
hasSuffix:
_getKeychainItemForKey:status:
iCloudEnvironment
connectionQueue
verifyCertificateWithRequest:completionBlock:
_backupFullKeychainWithReply:
setNeedInitialBackup:
_setAutobackupEnabledWithReply:
_backupKeychainFully:reply:
_backupEnabled
_usesEscrow
_checkEscrowTrust
backupQueue
_consumeFullBackup
_pushCachedKeychainToKVS
_consumeBackupJournal
copyMyPeerID
backupWithChanges:error:handler:
domain
backupSetConfirmedManifest:digest:manifest:error:
_removeKeychainItemForKey:
_removeKVSKeybag
_removeMetadata
_removeProtectedKeychain
_setBackupEnabled:iCDP:
_removeVeeTwoBackup
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:options:
characterAtIndex:
stringWithCharacters:length:
_createBackupKeybagWithPassword:
_saveKeychainItem:forKey:
derDataFromDict:
storeDERBackupInKVS:
_getICDPBackupFromKVSForView:
_getDERBackupFromKVS
_getLastBackupTimestamp
_iCDPBackupEnabled
_setUsesEscrow:
_removeUsesEscrow
_setMetadata:
_setKVSKeybag:
_KVSKeybag
_setEMCSBackup:keybag:
_EMCSBackup
_EMCSBackupDictForKeybagDigest:
garbageCollectEMCSBackupsExcluding:
_setAutobackupEnabled
_backupFullKeychain
_backupKeychain
_disableBackup
disableiCDPBackup
normalizeSMSTarget:error:
setCacheDirURL:
_stateCapture
allViews
copyKVSState
cacheDirURL
valueForEntitlement:
processIdentifier
setExportedInterface:
setExportedObject:
_setQueue:
circleChangedNotification
needInitialBackup
boolValue
intValue
containsObject:
allObjects
getAccountInfoWithRequest:completionBlock:
secureBackupDate
massageIncomingMetadataFromInfo:
substringFromIndex:
createPeerInfoFromData:error:
copySerialNumber:
copyOSVersion:
filteriCDPRecords:
hasRecoveryKey
objectAtIndexedSubscript:
forceICDP
listSMSTargetsWithRequest:completionBlock:
synchronizeWithCompletionHandler:
_getAccountInfoWithRequest:reply:
synchronizeKVSWithHandler:
_stashRecoveryDataWithRequest:reply:
setICloudEnvironment:
massageOutgoingMetadataFromRequest:
cachedPassphrase
createiCloudRecoveryPasswordWithError:
copyMyPeerWithNewDeviceRecoverySecret:error:
initWithDomain:code:userInfo:
copyEncodedData:error:
registerSingleRecoverySecret:iCDP:error:
initWithCapacity:
storeRecordWithRequest:completionBlock:
callStackSymbols
name
timeIntervalSinceNow
deleteRecordWithRequest:completionBlock:
garbageCollectEscrowRecords:
backupWithInfo:garbageCollect:reply:
createPlistFromDERData:
createEncodedDirectBackupSliceKeybagFromData:error:
restoreBackupName:peerID:keybag:password:backup:reply:
allKeys
caseInsensitiveCompare:
sortedArrayUsingSelector:
appendString:
currentViews
restoreBackup:withName:keybagDigest:keybag:password:
encodedStatsForViews:
cachedRecordID
backups
recordIDForSilentAttemptFromRecords:passphraseLength:platform:reply:
restoreEMCSBackup:keybag:password:
recoverRecordWithRequest:completionBlock:
uncacheRecordIDPassphrase
_restoreKeychainWithBackupBag:password:keybagDigest:
setCachedRecordIDPassphrase:
setCachedRecordID:
cachedRecoveryKey
cachedRecordIDPassphrase
recoverEscrowWithRequest:reply:
recordIDForSilentAttempt:passphraseLength:platform:reply:
_recoverWithRequest:reply:
registerRecoveryPublicKey:error:
deleteAlliCDPRecordsWithRequest:reply:
timeIntervalSinceReferenceDate
updateRecordMetadataWithRequest:completionBlock:
stringByAppendingPathComponent:
storeCachedPassphrase:
setCachedPassphraseFD:
setCachedRecordIDPassphraseFD:
setCachedRecoveryKeyFD:
initWithLength:
mutableBytes
cachedPassphraseFD
cachedPassphraseForFD:
cachedRecordIDPassphraseFD
cachedRecoveryKeyFD
setCachedPassphrase:
setCachedRecoveryKey:
startSMSChallengeWithRequest:completionBlock:
getCountrySMSCodesWithRequest:completionBlock:
changeSMSTargetWithRequest:completionBlock:
listener:shouldAcceptNewConnection:
cachedManifestURL
getStingrayMetadataWithRequest:reply:
backupAllowed
setBackupAllowed:
restoreEMCSBackup:withPassword:
recoverStingrayWithRequest:reply:
iCDPKeybag
_needInitialBackup
_cacheDirURL
_iCDPKeybag
_connectionQueue
_backupQueue
_kvsQueue
_cachedRecordID
_cachedPassphraseFD
_cachedRecordIDPassphraseFD
_cachedRecoveryKeyFD
_iCloudEnvironment
setWithArray:
isEqualToSet:
errorWithCode:format:
initWithString:
initWithURL:
ak_addDeviceUDIDHeader
ak_addClientInfoHeader
activity
currentRequest
originalRequest
setURL:
ephemeralSessionConfiguration
set_appleIDContext:
set_tlsTrustPinningPolicyName:
setTimeoutIntervalForResource:
setHTTPAdditionalHeaders:
sessionConfig
sessionWithConfiguration:delegate:delegateQueue:
setActivity:
pinningFailure
dataTaskWithRequest:completionHandler:
finishTasksAndInvalidate
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
credential
protectionSpace
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
performRequestWithHandler:
setUrlString:
setPinningFailure:
_pinningFailure
_responseClass
_urlString
_activity
scanUnsignedLongLong:
numberWithUnsignedLongLong:
_certVersion:
numberWithUnsignedLong:
_rootTrustedVersionsForRootType:inEnvironment:
unsignedLongLongValue
_saveBypassToken:
_removeBypassToken
_getBypassToken
_rootBaseVersionsForRootType:inEnvironment:
_rootCurrentVersionForRootType:inEnvironment:
errorWithDomain:code:format:
encodedEscrowRecordWithPublicKey:error:
sleepUntilDate:
decodedEscrowRecordFromData:
decodedLabel
escrowDate
recoverQueue
group
_recoverRecordWithRequest:completionBlock:
updateRecordWithRequest:completionBlock:
setGroup:
setRecoverQueue:
_group
_recoverQueue
initFileURLWithPath:isDirectory:
arrayWithObjects:count:
enableTransactions
serviceListener
setDelegate:
setEvents:
setAllowInvalidCert:
URLWithString:
scheme
dataTaskWithURL:completionHandler:
configurationInfoWithIdentifiers:forAltDSID:completion:
events
splunkUploadURL
dataWithJSONObject:options:error:
removeAllObjects
previousFailureCount
authenticationMethod
serverTrust
allowInvalidCert
credentialForTrust:
postEvents
isDataCollectionEnabled
logEventNamed:value:
flush
setPath:
_allowInvalidCert
_splunkUploadURL
_path
_events
timeIntervalSince1970
numberWithLong:
keysOfEntriesPassingTest:
keysOfEntriesContainingObject:
compareMembershipOfObject:withSet:
countOfObjectsWithPrefix:
unsignedIntegerValue
compare:with:
codeForNSError:
codeForErrno:
dictionaryWithObjectsAndKeys:
sanitizedError:
errorWithCode:URL:format:
errorWithCode:error:URL:format:
errorForNSError:path:format:
stringForKey:
objectsPassingTest:
timeZoneForSecondsFromGMT:
setTimeZone:
legacyDateFormatter
localTimeZone
request
ccses
dataWithBytes:length:
dataWithLength:
label
cStringUsingEncoding:
initWithFormat:arguments:
setRecoveryBlob:
srpResponseForEscrowBlob:withKey:
recoveryResponseForBlob:
initWithBytes:length:encoding:
setEscrowDate:
setDecodedLabel:
recoveryBlob
setEscrowBlob:
escrowBlob
dealloc
_decodedLabel
_escrowDate
_recoveryBlob
_ccses
_srp
_escrowBlob
_request
SRPInit
SRPClientRequest
NSObject
SecureBackupProtocol
Internal
SecureBackup
NSSecureCoding
NSCoding
EscrowGenericResponse
EscrowCertificateResponse
EscrowEnrollmentResponse
EscrowSRPResponse
EscrowRecoveryResponse
EscrowDeleteResponse
EscrowUpdateMetadataResponse
EscrowUpdateBlobResponse
EscrowSMSChallengeResponse
EscrowAccountInfoResponse
EscrowChangeSMSTargetResponse
EscrowListSMSTargetsResponse
EscrowGetCountrySMSCodesResponse
SecureBackupSQLite
SecureBackupDB
SecureBackupViewStore
LakituResponse
EscrowRequest
EscrowGenericRequest
EscrowPasswordAuthenticatedRequest
EscrowCertificateRequest
EscrowEnrollmentRequest
EscrowSRPRequest
EscrowRecoveryRequest
EscrowDeleteRequest
EscrowUpdateMetadataRequest
EscrowUpdateBlobRequest
EscrowSMSChallengeRequest
EscrowAccountInfoRequest
EscrowChangeSMSTargetRequest
EscrowListSMSTargetsRequest
EscrowGetCountrySMSCodesRequest
SecureBackupDaemon
NSXPCListenerDelegate
LakituRequest
NSURLSessionDelegate
EscrowService
SplunkLogger
SecureBackupTestWrapper
CloudServicesError
POSIXDate
SBDate
SESWrapper
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
@"NSError"8@0:4
@"NSDictionary"8@0:4
@12@0:4@8
v8@0:4
v12@0:4@8
@"NSString"
@"NSDictionary"
@"SecureBackup"
v16@0:4@8@?12
v12@0:4@?8
v16@0:4@"SecureBackup"8@?<v@?@"NSDictionary"@"NSError">12
v16@0:4@"SecureBackup"8@?<v@?@"NSError">12
v12@0:4@"SecureBackup"8
v16@0:4@"NSDictionary"8@?<v@?@"NSError">12
v12@0:4@"NSString"8
v12@0:4@?<v@?@"NSDictionary"@"NSError">8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@12@0:4^@8
@16@0:4@8^@12
B12@0:4^@8
v12@0:4B8
@"NSDate"
@"NSData"
@"NSObject<OS_dispatch_queue>"
@"NSError"
@"SESWrapper"
@16@0:4@8@12
i8@0:4
^{sqlite3=}16@0:4@8B12
B24@0:4@8@12@16^@20
B16@0:4@8^@12
@16@0:4@"NSURL"8@"NSString"12
B24@0:4@"NSData"8@"NSData"12@"NSString"16^@20
B16@0:4@"NSData"8^@12
v12@0:4@?<v@?@"NSData"@"NSString"@"NSData">8
v12@0:4@"NSData"8
B12@0:4@"NSString"8
@"NSData"8@0:4
^{sqlite3=}8@0:4
v12@0:4^{sqlite3=}8
^{sqlite3=}
@"NSURL"
B16@0:4@8@12
@"<SecureBackupDB>"
@"NSHTTPURLResponse"
@20@0:4@8@12@16
@"NSNumber"
@"NSArray"
v24@0:4q8@16B20
v16@0:4@8@12
@16@0:4@8^i12
v28@0:4@8@12@16@20@24
v16@0:4B8B12
v16@0:4B8@?12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}8@0:4
v20@0:4@8B12@?16
@28@0:4@8@12@16@20@24
v24@0:4@8I12i16@?20
i12@0:4@8
@12@0:4i8
v12@0:4i8
v20@0:4@8@12@?16
v16@0:4@"NSURLSession"8@"NSError"12
v20@0:4@"NSURLSession"8@"NSURLAuthenticationChallenge"12@?<v@?i@"NSURLCredential">16
v12@0:4@"NSURLSession"8
v28@0:4@8@12@16@20@?24
@"NSObject<OS_os_activity>"
@12@0:4^{__SecCertificate=}8
@16@0:4I8@12
@"NSObject<OS_dispatch_group>"
v20@0:4@8@12B16
@"NSMutableArray"
v32@0:4@8@12@16@20@24@?28
B16@0:4^@8@?12
B20@0:4@8^@12@?16
B20@0:4@8B12^@16
i16@0:4@8@12
l12@0:4@8
l12@0:4l8
@16@0:4i8@12
@20@0:4i8@12@16
@24@0:4i8@12@16@20
@20@0:4@8i12@16
I12@0:4@8
@16@0:4^{__SecKey=}8^@12
@16@0:4@8^{__SecKey=}12
^{ccses_crypto_t=^{ccdigest_info}(?=(?=^I^{cczp}(?=^I^{cczp}))^{?}(?=(?=^I^{cczp})^{?}))^{ccmode_ecb}^{ccmode_ecb}^{ccmode_cbc}^{ccmode_cbc}^{ccrng_state}IIII}8@0:4
^{ccsrp_ctx={ccsrp_ctx_header=^{ccdigest_info}(?=(?=^I^{cczp}(?=^I^{cczp}))^{?}(?=(?=^I^{cczp})^{?}))^{ccrng_state}{?=b1b1b1b16}[19C][1I]}}8@0:4
^{ccses_crypto_t=^{ccdigest_info}(?=(?=^I^{cczp}(?=^I^{cczp}))^{?}(?=(?=^I^{cczp})^{?}))^{ccmode_ecb}^{ccmode_ecb}^{ccmode_cbc}^{ccmode_cbc}^{ccrng_state}IIII}
^{ccsrp_ctx={ccsrp_ctx_header=^{ccdigest_info}(?=(?=^I^{cczp}(?=^I^{cczp}))^{?}(?=(?=^I^{cczp})^{?}))^{ccrng_state}{?=b1b1b1b16}[19C][1I]}}
@"<SRPClientRequest>"
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
dsid
T@"NSString",R,C,N
recordLabel
recoveryPassphrase
escrowRecord
T@"NSDictionary",R,&,N
recordID
T@"NSString",C,N,V_recordLabel
T@"NSDictionary",&,N,V_escrowRecord
T@"NSString",C,N,V_recordID
T@"SecureBackup",R,&,N,V_sb
%@: %@
unknown activity
v8@?0@"NSError"4
no error
v12@?0@"NSDictionary"4@"NSError"8
v4@?0
-[SecureBackup getAccountInfoWithError:]
-[SecureBackup updateMetadataWithError:]
-[SecureBackup enableWithError:]
-[SecureBackup recoverWithError:]
-[SecureBackup disableWithError:]
-[SecureBackup startSMSChallengeWithError:]
-[SecureBackup changeSMSTargetWithError:]
-[SecureBackup backupWithInfo:]
supportsSecureCoding
TB,R
T@"SESWrapper",&,N,V_ses
appleID
T@"NSString",C,N,V_appleID
authToken
T@"NSString",C,N,V_authToken
backOffDate
T@"NSDate",&,N,V_backOffDate
certData
T@"NSData",&,N,V_certData
countryDialCode
T@"NSString",C,N,V_countryDialCode
countryCode
T@"NSString",C,N,V_countryCode
deleteAll
TB,N,V_deleteAll
T@"NSString",C,N,V_dsid
emcsCred
T@"NSString",C,N,V_emcsCred
emcsDict
T@"NSDictionary",&,N,V_emcsDict
emcsMode
TB,N,V_emcsMode
encodedMetadata
T@"NSString",C,N,V_encodedMetadata
escrowProxyURL
T@"NSString",C,N,V_escrowProxyURL
fmipRecovery
TB,N,V_fmipRecovery
fmipUUID
T@"NSString",C,N,V_fmipUUID
icdp
TB,N,V_icdp
iCloudEnv
T@"NSString",C,N,V_iCloudEnv
iCloudIdentityData
T@"NSData",&,N,V_iCloudIdentityData
iCloudPassword
T@"NSString",C,N,V_iCloudPassword
idmsData
T@"NSData",&,N,V_idmsData
idmsRecovery
TB,N,V_idmsRecovery
metadata
T@"NSDictionary",&,N,V_metadata
metadataHash
T@"NSDictionary",&,N,V_metadataHash
oldEMCSCred
T@"NSString",C,N,V_oldEMCSCred
passphrase
T@"NSString",C,N,V_passphrase
recoveryKey
T@"NSString",C,N,V_recoveryKey
smsTarget
T@"NSString",C,N,V_smsTarget
silent
TB,N,V_silent
stingray
TB,N,V_stingray
synchronize
TB,N,V_synchronize
useCachedPassphrase
TB,N,V_useCachedPassphrase
useRecoveryPET
TB,N,V_useRecoveryPET
usesMultipleiCSC
TB,N,V_usesMultipleiCSC
usesRandomPassphrase
TB,N,V_usesRandomPassphrase
usesRecoveryKey
TB,N,V_usesRecoveryKey
verificationToken
T@"NSString",C,N,V_verificationToken
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
error
T@"NSError",&,N,V_error
activityLabel
T@"NSString",C,N,V_activityLabel
activityUUID
T@"NSString",C,N,V_activityUUID
X-Apple-Request-UUID
uuid
version
status
message
errorMessage
errorCode
Ti,R,N
T@"NSString",R,N
clubCert
clubID
Ti,R,N,V_clubID
cert
T@"NSData",R,N
phoneNumberToken
bypassToken
respBlob
srpData
fmipRecoveryData
recoveryData
T@"NSDictionary",R,N
smsChallengeLength
smsVerificationCodeLength
T@"NSNumber",R,N
metadataList
label
recordStatus
silentAttemptAllowed
SecureBackupRemainingAttempts
remainingAttempts
coolOffEnd
SecureBackupCoolOffEnd
recoveryStatus
SecureBackupRecoveryStatus
triggerUpdate
SecureBackupTriggerUpdate
accountInfo
T@"NSArray",R,N
smsTargetsInfo
countrySMSCodes
com.apple.sbd
0123456789ABCDEF
v20@?0r^v4{_NSRange=II}8^B16
%@ (%@)
v8@?0^{__OpaqueSOSPeerInfo=}4
recovery key (%@)
backup
sqlite3
INSERT OR IGNORE INTO items (hash, class, data) VALUES (?, ?, ?);
DELETE FROM items where hash = ?;
SELECT hash from items ORDER BY hash;
SELECT digest from keybag;
SELECT data from keybag;
SELECT hash, class, data from items;
-[SecureBackupSQLite sqliteExec:]
DROP TABLE items; DROP TABLE keybag;
INSERT INTO keybag (digest, recordID, data) VALUES (?, ?, ?);
VACUUM;
keybag
T@"NSData",R
keybagDigest
manifestHash
T^{sqlite3=},V_db
T@"NSURL",R,V_url
T@"NSString",C,V_recordID
Unexpected item type for kSecBackupEventAdd
data
class
Unexpected item type for kSecBackupEventRemove
v16@?0@"NSData"4@"NSString"8@"NSData"12
Unexpected item type for resetWithKeybag
com.apple.securebackup.record
com.apple.securebackup.keychain
BEGIN TRANSACTION;
keybag.plist
SAVEPOINT migrate_start;
manifest
KeychainV0-tomb
ROLLBACK TO migrate_start;
COMMIT TRANSACTION;
viewName
T@"NSString",R,C,V_viewName
T@"NSURL",R,C,V_url
T@"<SecureBackupDB>",R,V_db
backupData
backupDict
pragma journal_mode = WAL;CREATE TABLE IF NOT EXISTS items(hash BLOB PRIMARY KEY NOT NULL,class TEXT NOT NULL, data BLOB NOT NULL );CREATE TABLE IF NOT EXISTS keybag(digest BLOB PRIMARY KEY NOT NULL,recordID TEXT NOT NULL,data BLOB NOT NULL,timestamp DATETIME DEFAULT CURRENT_TIMESTAMP);
EscrowProxyErrorDomain
Escrow response not a dictionary
Retry-After
en_US_POSIX
EEE, dd MMM yyyy HH:mm:ss Z
retryAfterDate
unexpected response from escrow proxy: URL: %@, headers: %@, data: %@
responseDictionary
T@"NSDictionary",R,N,V_responseDictionary
httpResponse
T@"NSHTTPURLResponse",R,N,V_httpResponse
No valid user found
Missing base URL
%@.%@
transactionUUID
userActionLabel
%@:%@
%@ %@
Basic
X-MobileMe-Recovery-PET
X-MobileMe-AuthToken
POST
/escrowproxy/api/%@
T@"NSDictionary",R,N,V_escrowRecord
T@"NSString",C,N,V_metadataHash
protocol
T@"NSNumber",R,N,V_protocol
command
T@"NSString",R,C,N,V_command
T@"NSString",R,C,N,V_countryDialCode
T@"NSString",R,C,N,V_countryCode
phoneNumber
T@"NSString",R,C,N,V_phoneNumber
challengeCode
T@"NSString",R,C,N,V_challengeCode
T@"NSString",R,C,N,V_appleID
T@"NSString",R,C,N,V_iCloudPassword
T@"NSString",R,C,N,V_dsid
T@"NSString",R,C,N,V_authToken
T@"NSString",R,C,N,V_recordID
baseURL
T@"NSString",R,C,N,V_baseURL
T@"NSString",R,C,N,V_iCloudEnv
T@"NSString",R,C,N,V_recoveryPassphrase
TB,R,N,V_stingray
iCDP
TB,R,N,V_iCDP
silentAttempt
TB,R,N,V_silentAttempt
TB,R,N,V_useRecoveryPET
TB,R,N,V_fmipRecovery
blob
T@"NSData",&,N,V_blob
baseRootCertVersions
T@"NSArray",&,N,V_baseRootCertVersions
trustedRootCertVersions
T@"NSArray",&,N,V_trustedRootCertVersions
T@"NSString",C,N,V_bypassToken
Missing required parameters
/escrowproxy/api/get_club_cert
GETCLUB
ENROLL
countryISOCode
blobDigest
Missing DSID
SRP_INIT
smsChallengeCode
RECOVER
DELETE
UPDATE_RECORD
oldMetadata
newMetadata
/escrowproxy/api/update_blob
GENERATE_SMS_CHALLENGE
/escrowproxy/api/get_records
GETRECORDS
ALTER_SMS_TARGET
Missing parameters
GET_SMS_TARGETS
GET_COUNTRY_SMS_CODES
escrowProxyUrl
com.apple.security.keychainchanged
com.apple.securebackupd.access
com.apple.security.itembackup
com.apple.sbd.kvstorechange
com.apple.securebackup.enabled
com.apple.icdpbackup.enabled
com.apple.icdp.backup
DERBackup
com.apple.securebackup.timestamp
SecureBackupService
SecureBackupPublicKeybag
SecureBackupEscrowCert
BackupKeybag
BackupKeybagDigest
BackupBagPassword
BackupVersion
EMCSBackup
EMCSBackupDict
com.apple.sbd.emcs
digest
BackupUsesEscrow
secureEscrowServiceCnt
disabledKeychainRecoveryCnt
attemptRecoverEscrowPasswdCnt
keychainBackedUpCnt
SecureBackupMetadataTimestamp
escrowPassphraseType
com.apple.cloudkeychain
com.apple.icdp
-tomb
peer
view
v16@?0@"NSString"4@"NSDictionary"8^B12
unknown
 not
v8@?0@"NSString"4
%@.%@-tomb
timestamp
%@-%@
Attempt to back up when backup not enabled
Escrow cert no longer trusted
com.apple.EscrowSecurityAlert.server
v16@?0i4@"NSData"8@"NSDictionary"12
true
false
attempt to enable backup with non-decimal digits in SMS target: %@
com.apple.sbd.connectionQueue
com.apple.sbd.backupQueue
com.apple.sbd.kvsQueue
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}8@?0^{os_state_hints_s=I*II}4
backup enabled
iCDP backup enabled
uses escrow
backup timestamp
keybag digest
creator
peerIDs
%@ (direct keybag)
backups
sbd KVS data
plist
application-identifier
iCloudIdentity
no keybag found in iCloudIdentity backup:
-[SecureBackupDaemon getStingrayMetadataWithRequest:reply:]
Could not find stingray metadata
-[SecureBackupDaemon _getAccountInfoWithRequest:reply:]
kPCSMetadataiCDP
UNKNOWN
KVS not available
KVS synchronizeWithCompletionHandler failed
731C3DF1-AB61-409D-9B4E-72CC478601CD
error decoding request properties
-[SecureBackupDaemon _stashRecoveryDataWithRequest:reply:]
stashRecoveryDataWithRequest called without EMCS mode set?
-[SecureBackupDaemon enableWithRequest:reply:]
SecRKRegisterBackupPublicKey() failed
enableRK
SecRKCreateRecoveryKey() failed
non-
attempted to store stingray identities, with invalid parameters: %@, %@nil iCloud password, %@nil iCloud identity data
Missing cached passphrase
attempted to enable backup, with invalid parameters: %@nil recovery password, %@, %@, %@nil iCloud password
could not create backup bag password
could not create backup keybag
SOSCCCopyMyPeerWithNewDeviceRecoverySecret() failed
SOSPeerInfoGetPeerID() failed
SOSPeerInfoCopyBackupKey() returned no backup public key for peer
SOSCCRegisterSingleRecoverySecret() failed
enable
record
delete
-[SecureBackupDaemon backupWithInfo:garbageCollect:reply:]
could not create plist from DER backup
v16@?0@4@8^B12
AccessoryPairing
AppleTV
BackupBagV0
ContinuityUnlock
CreditCards
HomeKit
NanoRegistry
OtherSyncable
Passwords
PCS-Backup
PCS-CloudKit
PCS-Escrow
PCS-FDE
PCS-Feldspar
PCS-iCloudDrive
PCS-iMessage
PCS-Maildrop
PCS-MasterKey
PCS-Notes
PCS-Photos
PCS-Sharing
WiFi
KeychainV0
%@-tomb
views
restorestats
Can't restore legacy backup with no keybag
Can't find protected keychain; nothing to restore
could not create DER data from dict
_SecKeychainRestoreBackup() failed
before we saved timestamps
attempted restore with backup = %@nil, keybag = %@nil
%@ (%@) failed to recover stingray: %@
backup data version does not match version in escrow
backup keybag digest does not match version in escrow
-[SecureBackupDaemon _recoverWithRequest:reply:]
silent attempt with missing cached recovery key
invalid/malformed recovery key
attempted to recover with empty passphrase
silent attempt failed: no valid record found
v12@?0@"NSString"4I8
-[SecureBackupDaemon deleteAlliCDPRecordsWithRequest:reply:]
-[SecureBackupDaemon backOffDateWithRequest:reply:]
-[SecureBackupDaemon setBackOffDateWithRequest:reply:]
have
missing
missing parameter: %@ metadataHash, %@ backOffDate, %@ encodedMetadata
encodedMetadata not base64
metadata could not be decoded
missing kSecureBackupClientMetadataKey
-[SecureBackupDaemon disableWithRequest:reply:]
deleteRK
com.apple.EscrowSecurityAlert.reset
-[SecureBackupDaemon updateMetadataWithRequest:reply:]
 metadata only supported for stingray records
attempted to update stingray metadata, with incomplete metadata hash
-[SecureBackupDaemon cachePassphraseWithRequest:reply:]
-[SecureBackupDaemon uncachePassphraseWithRequest:reply:]
-[SecureBackupDaemon cacheRecoveryKeyWithRequest:reply:]
-[SecureBackupDaemon uncacheRecoveryKeyWithRequest:reply:]
-[SecureBackupDaemon startSMSChallengeWithRequest:reply:]
-[SecureBackupDaemon getCountrySMSCodesWithRequest:reply:]
-[SecureBackupDaemon changeSMSTargetWithRequest:reply:]
attempted to change SMS target, but backup is not enabled
attempted to change SMS target, but not using escrow
attempted to change SMS target with invalid parameters
cacheDirURL
T@"NSURL",&,N,V_cacheDirURL
cachedKeychainURL
T@"NSURL",R,&,N
cachedManifestURL
iCDPKeybag
T@"NSData",R,N,V_iCDPKeybag
forceICDP
TB,R,N
connectionQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_connectionQueue
backupQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_backupQueue
kvsQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_kvsQueue
needInitialBackup
TB,V_needInitialBackup
cachedPassphrase
T@"NSString",C,N
cachedRecordIDPassphrase
cachedRecordID
T@"NSString",C,N,V_cachedRecordID
cachedPassphraseFD
Ti,V_cachedPassphraseFD
cachedRecordIDPassphraseFD
Ti,V_cachedRecordIDPassphraseFD
cachedRecoveryKeyFD
Ti,V_cachedRecoveryKeyFD
backupAllowed
TB,N
iCloudEnvironment
T@"NSString",C,N,V_iCloudEnvironment
EMCSBackupUUID
ForceICDP
com.apple.sbd.backupAllowed
retry-after date has not passed, throttling calls to escrow proxy until %@
Content-Type
application/x-apple-plist
Authorization
Certificate pinning error, please see rdar://problem/15631298
Certificate pinning error
-[LakituRequest performRequestWithHandler:]_block_invoke_2
v16@?0@"NSData"4@"NSURLResponse"8@"NSError"12
pinningFailure
TB,V_pinningFailure
urlRequest
T@"NSMutableURLRequest",R,N
responseClass
T#,R,N,V_responseClass
protocolVersion
urlString
T@"NSString",C,N,V_urlString
activity
T@"NSObject<OS_os_activity>",&,N,V_activity
EscrowService
EscrowServiceBypassToken
Issuer Name
value
2.5.4.5
com.apple.sbd.recoverQueue
Error getting account info
v12@?0@"LakituResponse"4@"NSError"8
Can't get iCloud environment
Can't get base cert versions for root type %u in %@ environment
Can't get cert versions for root type %u in %@ environment
Unauthorized
Unexpected error getting club cert
Unexpected error with encoded certificate
Unexpected error with certificate
Mismatched user credential
srpFail
Error authenticating
Error deserializing data
Error deleting record
Error updating metadata
SMS challenge error
Unable to change SMS Target
Unable to get target list
Unable to get country SMS code list
Missing certificate data
Cert is newer than trust policy
Cert does not match our trust policy
group
T@"NSObject<OS_dispatch_group>",&,N,V_group
recoverQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recoverQueue
PROD
/AppleInternal/Library/CloudServices/iCloudDevCert.der
Error creating SecCertificateRef
Error copying escrow trust policy
Error copying root cert array
Invalid trust result
SecTrustEvaluate failed: %u
Unable to extract public key
daemon
https://init.itunes.apple.com/bag.xml?ix=5
postTime
events
eventTime
topic
eventType
xp_coreos_securebackup
com.apple.sbd.SplunkLogger
metrics
metricsUrl
/2/xp_coreos_securebackup
https
com.apple.idms.config.privacy.icloud.data
sbdEvent
path
T@"NSString",&,N,V_path
T@"NSMutableArray",&,N,V_events
allowInvalidCert
TB,N,V_allowInvalidCert
splunkUploadURL
T@"NSURL",R,N,V_splunkUploadURL
v8@?0^{__CFError=}4
v8@?0^{__CFString=}4
v16@?0i4^v8^v12
SecPasswordGenerate() failed
OSVersion
SecureBackupPassphrase
SecureBackupSMSTarget
SecureBackupSynchronize
SecureBackupCountrySMSCodes
SecureBackupVerifcationToken
SecureBackupUseCachedPassphrase
SecureBackupMetadata
ClientMetadata
SecureBackupStingrayMetadataHash
SecureBackupStingrayMetadata
SecureBackupEscrowTimestamp
SecureBackupEscrowDate
SecureBackupEscrowDigest
SecureBackupAuthenticationAppleID
SecureBackupAuthenticationPassword
SecureBackupAuthenticationAuthToken
SecureBackupAuthenticationEscrowProxyURL
SecureBackupAuthenticationDSID
SecureBackupAuthenticationiCloudEnvironment
SecureBackupRecoveryKey
SecureBackupUsesRandomPassphrase
SecureBackupUsesComplexPassphrase
SecureBackupUsesNumericPassphrase
SecureBackupNumericPassphraseLength
SecureBackupEnabled
SecureBackupAccountIsHighSecurity
SecureBackupRecoveryRequiresVerificationToken
SecureBackupRecoveryVerificationTokenLength
SecureBackupLastBackupTimestamp
SecureBackupLastBackupDate
SecureBackupEscrowTrustStatus
peerInfo
peerInfoSerialNumber
osVersion
SecureBackupiCDPRecords
SecureBackupAlliCDPRecords
valid
invalid
SecureBackupErrorDomain
EscrowServiceErrorDomain
SecureBackupiCloudIdentityData
SecureBackupIDMSData
SecureBackupIDMSRecovery
SecureBackupFMiPDataKey
SecureBackupFMiPUUIDKey
SecureBackupFMiPRecoveryKey
SecureBackupEMCSIDMSDict
SecureBackupEMCSManagedCredential
SecureBackupEMCSOldManagedCredential
SecureBackupContainsiCloudIdentity
SecureBackupUsesMultipleiCSCs
SecureBackupUsesRecoveryKey
SecureBackupSilentRecoveryAttempt
SecureBackupContainsiCDPData
SecureBackupContainsEMCSData
SecureBackupiCloudDataProtectionEnabled
SecureBackupiCloudDataProtectionDeleteAllRecords
SecureBackupBackOffDate
CloudServicesErrorDomain
clubh_key_escrow_data_t pkt too small: len=%u
clubh_key_escrow_data_check_hdr failed=%d
clubh_key_escrow_data_t sect %d is malformed
B16@?0@"NSString"4@"NSSet"8^B12
device_platform
better
first
not 
pki_size %zd < B_len %zd
pki_size %zd > B_len %zd
ccses_unpack_srp_init_resp_rec failed
ccses->salt_len %zd != salt_len %zd
ccsrp_client_process_challenge failed: %d
ccses_pack_srp_recovery_rec failed
operation
exception_code
com.apple.ReportCrash.SimulateCrash
v8@?0@"NSObject<OS_xpc_object>"4
result
BackupUUID
EscrowServiceEscrowData
date
com.apple.protectedcloudstorage.record
com.apple.icdp.record
EscrowServiceCertificate
EscrowServiceAccountInfo
EscrowServiceSMSTargetInfo
EscrowServiceCountrySMSCodes
isHSAEnabled
recoveryRequiresChallengeCode
recoveryChallengeCodeLength
challengeDevices
EscrowOperationStatus
EscrowOperationSucceeded
EscrowServiceFMiPData
B12@?0@"NSString"4^B8
dd-MM-yyyy HH:mm:ss
yyyy-MM-dd HH:mm:ss
yyyy-MM-dd HH:mm:ssZZZZZ
can't process recovery blob with no username
username could not be converted to cstring
v8@?0r*4
Escrow data too long
Could not create keys
SecKeyCopyPublicKey() failed
Escrow error encrypting data
Local SRP verify failed
could not create local SRP recovery blob
ccses
T^{ccses_crypto_t=^{ccdigest_info}(?=(?=^I^{cczp}(?=^I^{cczp}))^{?}(?=(?=^I^{cczp})^{?}))^{ccmode_ecb}^{ccmode_ecb}^{ccmode_cbc}^{ccmode_cbc}^{ccrng_state}IIII},R,N,V_ccses
T^{ccsrp_ctx={ccsrp_ctx_header=^{ccdigest_info}(?=(?=^I^{cczp}(?=^I^{cczp}))^{?}(?=(?=^I^{cczp})^{?}))^{ccrng_state}{?=b1b1b1b16}[19C][1I]}},R,N,V_srp
decodedLabel
T@"NSString",C,N,V_decodedLabel
escrowDate
T@"NSDate",C,N,V_escrowDate
escrowBlob
T@"NSData",&,N,V_escrowBlob
request
T@"<SRPClientRequest>",R,&,N,V_request
recoveryBlob
T@"NSData",&,V_recoveryBlob
creating connection to sbd: uid %d, progname %s
sbd connection created
new SecureBackup object: %@ %@
remote proxy error: %ld
calling getAccountInfoWithRequest in daemon
getAccountInfoWithRequest in daemon came back with %@
calling enableWithRequest in daemon
enableWithRequest in daemon came back with %@
calling recoverWithRequest in daemon
recoverWithRequest came back with %@
calling disableWithRequest in daemon
disableWithRequest came back with %@
calling stashRecoveryDataWithRequest in daemon
stashRecoveryDataWithRequest came back with %@
updateMetadata remote proxy error: %ld
calling updateMetadata in daemon
updateMetadata came back with %@
invalidating connection
calling cachePassphraseWithRequestAsync in daemon
calling cachePassphraseWithRequest in daemon
calling uncachePassphraseWithRequest in daemon
calling cacheRecoveryKeyWithRequest in daemon
calling uncachePassphraseWithRequestAsync in daemon
calling startSMSChallengeWithRequest in daemon
startSMSChallengeWithRequest came back with %@
calling getCountrySMSCodesWithRequest in daemon
getCountrySMSCodesWithRequest came back with %@
calling changeSMSTargetWithRequest in daemon
changeSMSTargetWithRequest came back with %@
calling backupWithInfo in daemon
backupWithInfo came back with %@
calling backOffDateWithRequest in daemon
backOffDateWithRequest came back with %@
calling setBackOffDateWithRequest in daemon
setBackOffDateWithRequest came back with %@
calling stateCapture in daemon
stateCapture came back with %@
calling %s from the main thread
getAccountInfoWithRequest came back with %@
calling updateMetadataWithRequest in daemon
updateMetadataWithRequest came back with %@
enableWithRequest came back with %@
calling notificationOccurred in daemon
got response from host %@ path %@ uuid %@
Error returned from iCloud: %@
HTTP Error: %@
got bad dict from iCloud: %@
iCloud gave us junk for metadata: %@
SOSBackupSliceKeyBagCreateFromData() failed: %@
found peer %@
could not find peer id for peer %@
No peer for digest %@ found
opening %@ failed: %s
table create for %@ failed: %s
sqlite3_prepare(insert) for %@ failed: %s
sqlite3_bind_text for %@ failed: %s
sqlite3_bind_blob64 for %@ failed: %s
sqlite3_step for %@ failed: %s
sqlite3_finalize for %@ failed: %s
sqlite3_prepare(delete) for %@ failed: %s
sqlite3_changes for remove %@ in %@ != 1
sqlite3_prepare_v2(%s) for %@ failed: %s
%s: %@
%@ on %@ failed: %s
table drop for %@ failed: %s
create table for %@ failed: %s
vacuum for %@ failed: %s
sqlite3_close for %@ failed: %d
could not create %@: %@
no keybag digest found, migrating view %@
unexpected item type for kSecBackupEventAdd: %@
unexpected item type for kSecBackupEventRemove: %@
CFPropertyListCreateDERData failed: %@
unexpected item type for resetWithKeybag: %@
reset manifest for view %@
backup keybag peers: %@
failed to add item %@
migrating %@
migrating %@ failed, resetting local backup db to empty
could not reset store with keybag: %@
unexpected key size: %zd, corrupt btree at %@
duplicate key, corrupt btree at %@
failed to add item: %@
seq failed: %s
migrated %lu item%s in class %@
not a btree file 
could not open %@: %s 
Escrow response not a dictionary: %@
Error processing plist: %@
Error from escrow proxy: %ld, %@
Got retry-after header: %@
will be available for retry after %@
unexpected response from escrow proxy: URL: %@, headers: %@, data: %@
No user signed in: %@ %@
Missing base URL
auth type %@, sha1 %@
Failed to encode body: %@
Missing required parameters AppleID: %@
%@iCloud password:
Missing required parameters passphrase: %@
data: %@
sms target: %@
Missing DSID
Missing parameters
getting dsid
got dsid: %@
account email not verified
getting auth token
Error accessing auth token: %@
got auth token
getting escrowURL
got escrowURL
getting iCloud env
got iCloud env
tracing %@ %@ %lld
SecItemAdd() returned %ld
SecItemDelete() returned %ld
SecItemCopyMatching() returned %ld
Storing keychain in KVS @%@
NSUbiquitousKeyValueStore synchronize failed
skipping identical backup for %@
backing up manifest digest %@, keybag digest %@, view %@
error removing keychain: %@
no data value in dict
Storing DER keychain in KVS @%@
backing up peer ID %@
using backup key: %@
SOSCCCopyMyPeerInfo() failed: %@
Couldn't back up view %@: backup is%s nil, keybag is%s nil
skipping empty backup for view %@
getting registered backup names failed: %@
Removing backup record from @%@
Retrieving keychain from @%@
Removing view-based backup from @%@
Changing backup status %u->%u
Changing escrow usage %u->%u
Changing metadata old: %@
new: %@
Removing metadata: %@
Overwriting keybag in KVS! Old digest: %@
Saving keybag in KVS digest: %@
Saving EMCS backup
looking for non-tagged EMCS backup
looking for old-style EMCS backup
Found non-tagged EMCS backup with more recent timestamp
garbage collecting backup %@
Removing keybag from KVS digest: %@
Can't get escrow cert from keychain
Attempt to back up when backup not enabled
Escrow cert is newer than trust policy; ignoring for now.
Escrow no longer trusted
calling %ssynchronous backup
backup complete
consuming full backup
consuming backup for view %@
calling SecItemBackupWithChanges()
SecKeychainBackupWithChanges: unexpected event: %d
SecItemBackupWithChanges() returned %s (%d reset, %d add, %d remove)
SecKeychainBackupWithChanges: no journal file, skipping %@
SecKeychainBackupWithChanges for view %@ failed: %@
Handling events for view %@ failed: %@
SecItemBackupSetConfirmedManifest for view %@ failed: %@
SecItemBackupWithRegisteredBackups() returned %s
SecItemBackupWithRegisteredBackups failed: %@
forcing KVS push
attempt to enable backup with non-decimal digits in SMS target: %@
capturing KVS state
Error serializing dictionary for State Capture: %@
captured %zd bytes of KVS data
calloc() failed?
could not get KVS dictionary representation
no uuid, could not create cache file URL
no uuid, could not create manifest file URL
sbd listener begin from pid %d (%@)
connection attempt from pid %d missing entitlement: %@
got notification: %@
Backing up EMCS in response to keychain changed
Backup returned %@
Performing initial backup
ignoring circle changed notification
handling notification %@
NSUbiquitousKeyValueStore failed
no keybag found in iCloudIdentity backup: %@
record id %@ cannot recover iCloudIdentity backup!
iCloudIdentity backup keybag peers: %@
could not get iCloudIdentity backup!
In %s
calling getAccountInfoWithInfo: in daemon
getAccountInfoWithInfo: in daemon came back
getAccountInfoWithInfo failed: %@
got %ld records
found a kEscrowServiceStingrayLabel
Could not find stingray metadata!
calling getAccountInfoWithRequest: in daemon
getAccountInfoWithRequest: in daemon came back
escrowService getAccountInfoWithRequest: returned %@
getAccountInfoWithRequest: error: %ld
got %lu records
could not create peer info from data: %@
unexpected label: %@
%@ %@ %@ %@ %@
%@ %@ %@ %@
backup enabled
account uses escrow
calling listSMSTargets: in daemon
listSMSTargets: came back
escrowService listSMSTargetsWithRequest: returned %@
account does not use escrow
account does not use escrow, says backup is enabled, but has no backup timestamp
backup not enabled
waiting for sync group
calling synchronizeWithCompletionHandler
got error back from synchronizeWithCompletionHandler: %@
calling handler on connection queue
Unknown passphrase type: %d
stashRecoveryDataWithRequest called without EMCS mode set?
SecRKRegisterBackupPublicKey() failed: %@
SecRKCreateRecoveryKey() failed: %@
Backup already enabled
attempted to store stingray identities, with invalid parameters: %@, %@nil iCloud password, %@nil iCloud identity data
FORCING ICDP + MULTIPLE ICSC
Missing cached passphrase
attempted to enable backup, with invalid parameters: %@nil recovery password, %@, %@, %@nil iCloud password
could not create backup bag password
could not create backup keybag
SOSCCCopyMyPeerWithNewDeviceRecoverySecret() failed: %@
SOSPeerInfoGetPeerID() failed
SOSCCCopyMyPeerWithNewDeviceRecoverySecret() called got peer ID: %@, backup key: %@, digest: %@
SOSPeerInfoCopyBackupKey() returned no backup public key for peer: %@
SOSPeerInfoCopyEncodedData failed: %@
SOSCCRegisterSingleRecoverySecret() failed: %@
escrowService storeRecordWithRequest: returned: %@
calling PCSBackupSetupNewDeviceSecret()
PCSBackupSetupNewDeviceSecret() failed: %@
PCSBackupSetupNewDeviceSecret() finished
%s caught exception: %@: %@
no recordID in record
found record %@ from %@
garbage collecting escrow record with ID %@, from %@
deleting escrow record failed: %@
failed creating backup semaphore: %s
%@: %ld item%s
obj for key %@ does not respond to count!
backup is not a dictionary!
using peerID %@ from backup keybag peers: %@
SecItemBackupRestore for view %@ failed: %@
SecItemBackupRestore for view %@ succeeded
restoring view-based backup for keybag digest %@
skipping KeychainV0-tomb in view-based backups
Retrieving backup for view %@ from %@
restoring backup view %@
Can't restore legacy backup with no keybag
Can't find protected keychain; nothing to restore
restoring legacy backup
looking for record for silent attempt of passphrase length %lu
found preferred record: %@ from %@
no iCDP backups found!
no iCDP records found!
got error back from getAccountInfo: %@
_SecKeychainRestoreBackup() returned %ld
found backup from %@, keybag digest %@, metadataDigest %@, uuid %@
Found matching backup from this device, skipping keychain restore
Backup does not match this device's last backup uuid (%@)
attempted restore with backup = %@nil, keybag = %@nil
escrowService stingray recoverRecordWithInfo: returned: %@
=== Escrow record ===
Time of escrow: %@
Escrow version: %@
Keybag digest: %@
backup data version does not match version in escrow
escrowService recoverRecordWithRequest: returned: %@
silent attempt succeeded for record ID %@
backup keybag digest does not match version in escrow: %@
calling PCSBackupRecoveryUsingDeviceSecret()
PCSBackupRecoveryUsingDeviceSecret() returned %@
PCSBackupRecoveryUsingDeviceSecret() finished
escrowService iDMS recoverRecordWithRequest: returned: %@
=== Escrow record ===
Time of escrow: %@
Escrow version: %@
caching recordID %@
FMiP recovery attempt successful
escrowService stingray recoverRecordWithRequest: returned: %@
silent attempt with missing cached recovery key
invalid/malformed recovery key
attempted to recover with empty passphrase
silent attempt failed: no valid record found
escrowService deleteRecordWithRequest: returned: %@
missing parameter: %s metadataHash, %s backOffDate, %s encodedMetadata
encodedMetadata not base64
metadata could not be decoded: %@
missing kSecureBackupClientMetadataKey
SOSCCRegisterRecoveryPublicKey(NULL) failed: %@
update metadata only supported for stingray records
attempted to update stingray metadata, with invalid parameters: %@, %@ metadata hash
updateRecordMetadataWithRequest: returned: %@
attempt to set empty passphrase
error opening temp file: %s
error unlinking temp file: %s
error serializing data: %@
error truncating temp file: %s
error writing temp file: %s
writing temp file count = %ld, expected = %lu
saving uuid %@
error closing temp file: %s
fstat(%d) failed: %s
error reading temp file: %s
reading temp file count = %ld, expected = %zd
error deserializing temp file: %@
fetched uuid %@
uncaching recordID %@
escrowService startSMSChallengeWithRequest: returned: %@
escrowService getCountrySMSCodesWithRequest: returned: %@
attempted to change SMS target, but backup is not enabled
attempted to change SMS target, but not using escrow
attempted to change SMS target, with invalid parameters: %@, %@, %@nil iCloud password
escrowService changeSMSTargetWithRequest: returned: %@
retry-after date has not passed, throttling calls to escrow proxy until %@
clearing retry-after date
redirect: current URL = %@, original URL = %@, new URL = %@, response headers = %@
url session: %@
start data task
%@: escrow proxy request returned
response retry after date = %@
Certificate pinning error
%s: returned error: %@
%@: starting escrow proxy request
SecItemAdd() for bypass token returned %ld
SecItemDelete() for bypass token returned %ld
SecItemCopyMatching() for bypass token returned %ld
in getAccountInfoWithRequest:
calling iCloud accountInfoRequest
Can't get iCloud environment
empty base version array for root type %u in %@ environment
empty cert version array for root type %u in %@ environment
Platform trust versions: %@
Requesting cert for versions: %@
Error getting cert: %@
Certificate encoding error: %@
Error extracting public key from cert: %@
enrollRequest dsid != %@, certResponse.dsid = %@
Missing bypass token (might not be hooked up in iCloud yet)
dispatching to recover queue
waiting for recover group
Missing certificate data
Current Trust Version: %@; Current Cert Version: %@
Cert is newer than trust policy
Cert does not match our trust policy: %@
cert URL = %@
Unable to create SecCertificateRef from response data: %@
Error copying escrow trust policy
SecTrustCreateWithCertificates failed: %ld
Error copying root cert array
SecTrustEvaluate() trust result = %u
SecTrustEvaluate failed: %ld
Invalid trust result
SecTrustCopyProperties() = %@
SecTrustEvaluate result: %lu
Error extracting public key from certificate
running as uid %d, gid %d
resuming listener
got endpoint: %@
Unable to fetch splunk endpoint: %@
Malformed iTunes bag payload!
fetching iCloud Analytics value from idms
no iCloud Analytics value found in idms
Unable to fetch iCloud Analytics value from idms.
Failed to serialize Splunk payload: %@
Error in uploading the events to splunk: %@
Received the wrong kind of response: %@
Splunk upload unexpected status: %d
Force Accepting Splunk Credential
No iCloud account yet
setting manifest hash: %@, digest: %@
SOSBSKBCopyEncoded() failed: %@
SOSBackupSliceKeyBagCreateDirect() failed: %@
CFPropertyListCreateWithDERData failed: %@
SecPasswordGenerate() failed: %@
candidate can recover same views but is newer
candidate can recover same views but is not newer
candidate can recover %@
candidate cannot recover %@
candidate can recover fewer PCS views
candidate can recover more PCS views
candidate can recover fewer total views
candidate can recover more total views
candidate can recover same number of views but is newer
candidate can recover same number of views but is not newer
checking escrow record: %@ from %@
found clean record with passlen: %lu
escrow passphrase length (%lu) longer than silent attempt passphrase (%lu), skipping
found %@ candidate
keeping current candidate
escrow record not same platform, skipping
candidate not eligible: remaining attempts = %d, silent attempt %@allowed
found silent attempt record with id %@
No code for POSIX error: %s (%d)
invalid request: %@
can't process recovery blob with no username
username could not be converted to cstring
ccses_srp_challenge_process failed: %d, %@
error serializing escrow data: %@
Escrow data too long: %lu
Could not create keys: %@
SecKeyCopyPublicKey() failed
Escrow error encrypting data
could not create local SRP recovery blob
Local SRP verify failed
Error decoding secret
Error deserializing data: %@
SecKey_cylon_process_blob failed
Server Start Fails
ccses_unpack_clubh_recover_req_pkt Fails
ccsrp_server_verify_session failed
clubh_srp_init_resp_t pkt too small: len=%lu
clubh_srp_init_resp_check_hdr failed=%d
clubh_srp_init_resp_t sect %d is malformed
clubh_recover_resp_t pkt too small: len=%lu
clubh_recovery_rec_t pkt too small: len=%lu
clubh_recovery_rec_check_hdr failed=%d
clubh_recovery_rec_t sect %d is malformed
clubh_key_escrow_data_t pkt too small: len=%u
clubh_key_escrow_data_check_hdr failed=%d
clubh_key_escrow_data_t sect %d is malformed
clubh_recover_req_pkt_t too small: %lu
clubh_recover_req_pkt_check_hdr failed=%d
clubh_recover_req_pkt_t sect %d is malformed
@(#)PROGRAM:com.apple.sbd  PROJECT:CloudServices-297.20.1
33333
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.sbd</string>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.sbd3</string>
<key>com.apple.escrowservice.access</key>
<true/>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.securebackup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.iaaccounts</key>
<true/>
<key>com.apple.private.keychain-backup-client</key>
<true/>
<key>com.apple.private.protectedcloudstorage.keysyncing</key>
<true/>
<key>com.apple.private.ubiquity-additional-kvstore-identifiers</key>
<array>
<string>com.apple.sbd.emcs</string>
</array>
<key>keychain-access-groups</key>
<array>
<string>com.apple.sbd</string>
<string>com.apple.lakitu</string>
<string>com.apple.ProtectedCloudStorage.backup</string>
<string>com.apple.ProtectedCloudStorage</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
<key>platform-application</key>
<true/>
<key>restore-keychain</key>
<true/>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
