alloc
init
objectForKeyedSubscript:
count
firstObject
addObject:
addObjectsFromArray:
lastObject
coalescedRequests:
standardUserDefaults
boolForKey:
persistentDomainForName:
objectForKey:
boolValue
setObject:forKey:
archivedDataWithRootObject:
initForReadingWithData:
setRequiresSecureCoding:
class
decodeObjectOfClass:forKey:
setMinimumDayDuration:
setPercentOfDay:
coachingPreferences
preferenceEnabledForKey:
percentageOfTypicalDayMoveComparedToNow
percentageOfTypicalDayBriskMinutesEarnedComparedToNow
valueOfTypicalDayMoveEarnedByNow
valueOfTypicalDayBriskMinutesEarnedByNow
currentMoveGoalPercentage
willCompleteStandGoalOrItIsTooLateWithBufferPercentage:
numberWithUnsignedInteger:
arrayByAddingObject:
numberWithDouble:
dictionaryWithObjects:forKeys:count:
eventIdentifier
reason
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
shouldFireWithTypicalDayModel:evaluationDelegate:
goalType
setGoalType:
userInfoForCoachingAlertRequestWithModel:
removeObject:
countByEnumeratingWithState:objects:count:
showSedentaryAlertOfType:withTimeoutDate:withActiveHourCount:withTotalCount:experimentInstance:
hideSedentaryActivityAlert
showCoachingAlertRequests:
showAchievementDefinitionAlertForIdentifier:
fetchWellnessComplicationOnCurrentClockFaceWithCompletion:
registerForActivityAlerts:notificationTypes:
unregisterForActivityAlerts:
.cxx_destruct
_sedentaryObservers
_coachingObservers
_achievementDefinitionAlertObservers
_carouselServiceObservers
_queue
willCompleteEnergyBurnedGoalWithBufferPercentage:
currentExerciseGoalPercentage
willCompleteExerciseGoalWithBufferPercentage:
willCompletingMoveRingEarnStreakAchievement
setPercentOfGoalCompleted:
lastFiredDateForProgressEventIdentifier:
timeIntervalSinceReferenceDate
currentDate
arrayWithObjects:count:
initWithGoalType:
initWithRestorationIdentifier:
addSettingsObserver:
setShouldFireOnNextPoll:
_setScheduledAlertDate:
coachingSubmanagerDelegate
firstOnWristTodayDate
_nextFireDateForIntervalWithFirstOnWristTodayDate:
deepBreathingSettingForKey:
integerValue
typicalDayModel
projectedDayDuration
_remindersPerDay
stringWithFormat:
initWithName:conditions:
array
dateIntervals
copy
fetchPredictedConditionsForAction:handler:
duration
intersectionWithDateInterval:
containsDate:
endDate
dateByAddingTimeInterval:
startDate
_alertInterval
timeIntervalSinceDate:
initWithStartDate:endDate:
_closestAvailableDateToDate:inInterval:
invalidate
scheduleTaskForSubmanager:withIdentifier:atDate:
cancelScheduledTaskForSubmanager:withIdentifier:
_rescheduleAlert
submanagerIdentifier
requestWithSubmanagerIdentifier:userInfo:
setDelayable:
shouldFireOnNextPoll
currentCalendar
isDate:inSameDayAsDate:
timeIntervalSinceNow
requestPollForSubmanager:
initWithTaskName:activityMonitorType:duration:timeout:handler:
start
settingsDidChange:
privacySettingsDidChange:
daemonAndCoachingManagerReady
wristOnStateChangedTo:
alertsEnabled
coachingAlertRequestsForPollingReason:
coachingAlertRequestsWhenForcedWithArguments:
coachingAlertRequestsWereProcessed:acceptedRequests:
coachingAlertRequestDidCompleteWithResponse:
requiresMoveGoal
minimumRecentActiveDays
setCoachingSubmanagerDelegate:
setTypicalDayModel:
protectedDataDidBecomeAvailable:
initWithHealthDaemon:bridgeSettings:
requiresCoachingConditionsOnRequests
_healthDaemon
_bridgeSettings
_routineManager
_alarmMonitor
_shouldFireOnNextPoll
hk_startOfFitnessWeekBeforeDate:
hk_startOfDateBySubtractingDays:fromDate:
hk_activitySummaryDateComponentsFromDate:
initWithProfile:
activitySummariesWithPredicate:handler:
_activitySummariesByRemovingIncompleteFirstWeekIfNecessary:
_recommendedNewWeeklyGoalForActivitySummaries:
hk_gregorianCalendarWithUTCTimeZone
dateComponentsForCalendar:
dateFromComponents:
components:fromDate:
weekday
activeEnergyBurnedGoal
_isZero
subarrayWithRange:
activeEnergyBurned
compare:
sortedArrayUsingComparator:
kilocalorieUnit
objectAtIndexedSubscript:
doubleValueForUnit:
_isMoveGoalAchievedForActivitySummary:
enumerateObjectsWithOptions:usingBlock:
calendarWithIdentifier:
_gregorianDateComponents
dateByAddingUnit:value:toDate:options:
earlierDate:
isEqualToDate:
_numberOfInvalidDaysFromActivitySummaries:forExpectedNumberOfSamples:
arrayWithArray:
_numberOfDaysGoalAchievedInSummaries:
_numberOfDaysInMostRecentWinningStreakForSummariesOrderedByDate:
_numSamplesWithEnergyBurnGreaterThanTheGoalByPercent:forSummaries:
_activitySummariesSortedByEnergyBurn:
_averageEnergyBurnFromActivitySummaries:forNumberOfSamples:
weeklyGoalRecommendationInCaloriesForDate:profile:error:
initWithCategory:domainName:profile:
dictionary
setObject:forKeyedSubscript:
addEntriesFromDictionary:
setDate:forKey:error:
dateForKey:error:
setData:forKey:error:
dataForKey:error:
setQuantity:unit:forKey:error:
quantityForKey:unit:error:
setNumber:forKey:error:
numberForKey:error:
setString:forKey:error:
stringForKey:error:
setValuesWithDictionary:error:
valuesForKeys:error:
allValuesWithError:
_dataStore
initWithProfile:bridgeSettings:dataLogger:
initWithCapacity:
_setNeedsPollForReason:
registerClientWithName:taskHandler:
addWristEventObserver:
daemon
registerForDaemonReady:
unregisterClientWithName:
removeWristEventObserver:
database
removeProtectedDataObserver:
currentActivitySummaryHelper
removeObserver:
dealloc
futureScheduledRunDates
date
wristStateChangedToOnWrist
startOfDayForDate:
activitySummary
setActivitySummary:
isEqualToString:
uuid
UUIDString
logCoachingResponse:
_setNeedsPollForReason:completion:
alertSuppressionService
hk_error:description:
allValues
setForced:
_coalesceAndAlertRequestsFromDictionary:
fetchActivityAlertSuppressionStateWithCompletion:
totalActiveDays
runImmediatelyWithCompletion:
_pollingQueue_persistFutureScheduledRunDate:forTaskIdentifier:
setStartDate:
setEndDate:
addTask:withName:forClientNamed:
taskWithName:forClientNamed:
removeTaskWithName:forClientNamed:
_pollingQueue_removeFutureScheduledRunDateForTaskIdentifier:
mostRecentOnWristDate
canCreateNewMonthlyChallenge
_performStartOfDayTasks
_gizmoWristOnChangedTo:
_performScheduledRunIfNeededUponOnWrist
updateFirstWristOnForDate:
updateForOffWristAtDate:
addProtectedDataObserver:
registerAlertSuppressionObserver:
_registerForDataCollection
_typicalDayModelForCurrentDate
setDelegate:
initWithDataSource:
addObserver:
performWhenDataProtectedByFirstUnlockIsAvailable:
isProtectedDataAvailable
_performScheduledRunIfNeededUponUnlock
UTF8String
_significantTimeChangeOccurred:
defaultCenter
addObserver:selector:name:object:
quantityTypeForIdentifier:
dataCollectionManager
_pertinentTypesForDataCollection
startDataCollectionForType:observer:collectionInterval:
protectedDataDidBecomeAvailable
activitySummaryIndexForAggdRingCountReportingForDate:
_sendAggdYesterdayRingCompletionsForActivitySummaryIndex:
_activitySummaryQueue_sendAggdActivityIsSetupIfNeeded
_pollingQueue_needsPollForScheduledRun
_saveAggdRingCompletionsIfNeeded
hk_isDatabaseAccessibilityError
_standHoursCompletionPercentage
_exerciseTimeCompletionPercentage
_activeEnergyCompletionPercentage
handleUpdatedCurrentActivitySummary:
_deepBreathingDuration
secondUnit
_isDataLoading
_performPollAfterMoveGoalCheckWithCompletion:
_typicalDayIntervalFromToday
rebuildWithInterval:
_pollingDelayForPollingReason:
_pollingQueue_performPollWithCompletion:isMoveGoalSet:
mutableCopy
removeObjectForKey:
enumerateKeysAndObjectsUsingBlock:
_priorityForPollingReason:
wristState
removeAllObjects
allObjects
_sortedPollingReasonsByPriority:
unsignedIntegerValue
_pollingQueue_perform3StepHandshakeForPollingReason:moveGoalIsSet:
enumerateObjectsUsingBlock:
_pollingQueue_clearPersistedFutureScheduledRunDatesUpToDate:
fetchActivityAlertSuppressionStateForReason:completion:
numberOfRecentActiveDays
userCharacteristicsManager
characteristicTypeForIdentifier:
userCharacteristicForType:error:
setWheelchairUser:
_attachActivitySummaryToRequests:
_attachIsWheelchairUserToRequests:
runIfNecessaryWithCompletion:
initForDateInterval:delegate:
currentMoveStreak
bestMoveStreak
bestMoveValue
totalMoveGoalsAttempted
wristStateChangedToOffWrist
wristStateDetectionDisabled
daemonReady:
database:protectedDataDidBecomeAvailable:
currentActivitySummaryHelper:didUpdateTodayActivitySummary:changedFields:
currentActivitySummaryHelper:didUpdateYesterdayActivitySummary:changedFields:
alertSuppressionInvalidatedForSuppressionId:reason:
firstOnWristDateToday
activitySummariesFromDateComponents:toDateComponents:
runAchievementManagerWithCompletion:
isTaskScheduledForSubmanager:withIdentifier:
mostRecentOnWristDateForSubmanager:
currentActivitySummary
initWithSubmanagers:profile:alertNotifier:currentActivitySummaryHelper:backgroundTaskScheduler:wristEventsManager:achievementDataStore:bridgeSettings:dataLogger:
setCurrentCalendar:
setCurrentDateOverride:
setRecentActiveDaysOverride:
pollNowWithCompletion:
forceCoachingNowWithArguments:completion:
monthlyChallengeEngine
_profile
_alertNotifier
_backgroundTaskScheduler
_achievementDataStore
_currentActivitySummaryHelper
_wristEventsManager
_dataLogger
_coachingPreferences
_pedometer
_pollingReasons
_pollingQueue
_submanagers
_activitySummaryQueue
_currentActivitySummary
_currentCalendarOverride
_currentDateOverride
_recentActiveDaysOverride
_lastAggdSubmittedActivitySummaryIndex
_aggdActivitySetupSent
_significantTimeChangeToken
_mostRecentStartOfDayTasksRunDate
_typicalDayModel
_monthlyChallengeEngine
dictionaryRepresentation
numberWithUnsignedLongLong:
numberWithBool:
allocWithZone:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
setOnWrist:
setHasOnWrist:
hasOnWrist
readFrom:
writeTo:
copyTo:
mergeFrom:
timestamp
onWrist
_timestamp
_onWrist
_has
_queue_clearAllDailyGoalTypesMetForCacheIndex:
numberWithLongLong:
_queue_goalTypesMetForCacheIndex:
_queue_setGoalTypesMet:forCacheIndex:
_userDefaultsDomain
unarchiveObjectWithData:
allKeys
sortedArrayUsingSelector:
unsignedLongLongValue
settingForKey:
_queue_isDailyGoalTypeMet:cacheIndex:
_queue_addGoalTypeToDailyGoalTypesMet:cacheIndex:
_queue_addDailyGoalTypePreviouslyMet:cacheIndex:
isAppleInternalInstall
_queue_allGoalTypesMetForCacheIndex:
_queue_addGoalTypeToNotify:cacheIndex:
_queue_resetDailyGoalTypesMetCacheIndex:
_cacheIndexForDate:
caseInsensitiveCompare:
setByAddingObject:
setByAddingObjectsFromArray:
_areGoalCompletionAlertsEnabled
setWithSet:
isEqualToSet:
userInfo
runDailyGoalCompletionDetectionForGoalType:cacheIndex:previousValue:currentValue:goalValue:shouldAlert:goalMetHandler:completion:
concludeRunWithSuccess:cacheIndex:
initWithProfile:bridgeSettings:
_goalTypesToFireByCacheIndex
_queue_generateObserverToken
_queue_startMonitoringActionConditions:withToken:block:
initWithAction:block:
conditions
action
_queue_stopMonitoringConditionsForAction:
_fakeActionConditionsFromFreeCalendarDateIntervals:motionState:inCarState:
setPredictedActionConditions:
_notifyObserversOfCurrentState
intValue
numberWithInt:
_observedActionForNLActionConditions:token:
initWithAction:dateIntervals:
_areConditionsCurrentlyMetWithActionConditions:
_dateIntervalsFromActionConditions:
startMonitoringPredictedConditionsForAction:handler:
stopMonitoringPredictedConditionsForAction:handler:
_queue_currentRoutineManager
block
startMonitoringConditions:inDateInterval:block:
stopMonitoringConditionsWithToken:
fakeFreeCalendarDateIntervals:motionState:inCarState:
stopFaking
_nextObserverToken
_observersByToken
_realRoutineManager
_fakeRoutineManager
_isFaking
_action
_block
weakObjectsHashTable
initWithHealthDaemon:
registerForLaunchNotification:
_settingsDidChange
_privacySettingsDidChange
objectEnumerator
nextObject
settingDefaultForKey:
settingForKey:defaultSetting:
privacySettingDefaultForKey:
privacySettingForKey:defaultSetting:
deepBreathingSettingDefaultForKey:
deepBreathingSettingForKey:defaultSetting:
_settingForKey:defaultSetting:inDomain:
numberWithInteger:
setRepresentation
daemonDidReceiveNotification:
removeSettingsObserver:
privacySettingForKey:
_allObservers
_observerQueue
_observers
valueForKey:
identifier
notifyAchievementDefinitions:
achievementDefinitionsDidExpire:
initWithAlertNotifier:
_notifier
numberWithUnsignedInt:
setAwdCodableData:
setAwdMetricId:
setHasAwdMetricId:
hasAwdMetricId
hasAwdCodableData
awdMetricId
awdCodableData
_awdCodableData
_awdMetricId
setCacheIndex:
setHasCacheIndex:
hasCacheIndex
setEnergyBurned:
setHasEnergyBurned:
hasEnergyBurned
setBriskMinutes:
setHasBriskMinutes:
hasBriskMinutes
setActiveHours:
setHasActiveHours:
hasActiveHours
setStepCount:
setHasStepCount:
hasStepCount
setEnergyBurnedGoal:
setHasEnergyBurnedGoal:
hasEnergyBurnedGoal
setWalkingAndRunningDistance:
setHasWalkingAndRunningDistance:
hasWalkingAndRunningDistance
setEnergyBurnedGoalDate:
setHasEnergyBurnedGoalDate:
hasEnergyBurnedGoalDate
setHasStartDate:
hasStartDate
setHasEndDate:
hasEndDate
cacheIndex
energyBurned
briskMinutes
activeHours
stepCount
energyBurnedGoal
walkingAndRunningDistance
energyBurnedGoalDate
_activeHours
_briskMinutes
_cacheIndex
_endDate
_energyBurned
_energyBurnedGoal
_energyBurnedGoalDate
_startDate
_stepCount
_walkingAndRunningDistance
_dateForKey:
_setDate:forKey:
sharedBehavior
categoryTypeForIdentifier:
categorySampleWithType:value:startDate:endDate:metadata:
dataProvenanceManager
defaultLocalDataProvenance
dataManager
insertDataObjects:withProvenance:creationDate:error:
_firstWristOnDateToday
_setFirstWristOnDateToday:
_saveWristOnCoachingEventWithActualWristOnDate:
_sendAggdSettings
logWristOnNowIsFirst:
logFirstWristOnSettings
logWristOffNow
_sendAggdSetting:
clearFirstWristOnDateToday
_defaultsDomain
setLocationUUID:
hasLocationUUID
locationType
setLocationType:
setHasLocationType:
hasLocationType
locationTypeAsString:
StringAsLocationType:
setUncertaintyMillis:
setHasUncertaintyMillis:
hasUncertaintyMillis
setConfidenceMillis:
setHasConfidenceMillis:
hasConfidenceMillis
setRecentVisitCount:
setHasRecentVisitCount:
hasRecentVisitCount
locationUUID
uncertaintyMillis
confidenceMillis
recentVisitCount
_confidenceMillis
_recentVisitCount
_uncertaintyMillis
_locationType
_locationUUID
setExperimentIdentifier:
hasExperimentIdentifier
setTestCondition:
setHasTestCondition:
hasTestCondition
experimentIdentifier
testCondition
_testCondition
_experimentIdentifier
_registerForForceShowSummaryNotification
_queue_forceShowSummary
_scheduleAlertIfRequired
firstGlanceTypeForToday
weeklySummaryInfo
_addToUserInfo:key:value:
recommendedGoalInCalories
monthlyChallengeAchievement
progressAchievement
completedAchievementForYesterday
yesterdayActivitySummary
bestCompletedActivitySummaryThisWeek
bestWorkoutYesterday
initWithProfile:coachingSubmanagerDelegate:typicaDayModel:
setMockFirstGlanceTypeArgument:
mockFirstGlanceTypeArgument
setMockProgressAchievementIdentifier:
setMockProgressAchievementMilestone:
doubleValue
setMockYesterdayActivitySummaryMovePercentage:
setMockYesterdayActivitySummaryExercisePercentage:
setMockYesterdayActivitySummaryStandPercentage:
_queue_createFirstGlanceAlertWithEngine:
_areFirstGlanceNotificationsEnabled
_shouldShowFirstGlance
_shouldScheduleFirstGlance
setMostRecentFirstGlanceAlertDate:profile:
mostRecentFirstGlanceAlertDateWithProfile:
_energyBurnedGoalExistsBeforeDate:
_delayAfterWristOnForSummaryPresentation
calorieGoal
anySampleOfType:profile:encodingOptions:predicate:error:
_userDefaultsDomainWithProfile:
_forceShow
_forceShowNotifyToken
projectedToBeatMoveRecordByEndOfDay
_settingsController
setExperimentalCondition:
hasExperimentalCondition
experimentalCondition
_experimentalCondition
_startHIDListener
_stopHIDListener
_notifyObserversDidReceiveOnWristEvent:
hidHandler:didReceiveWristDetectEvent:
_hidQueue_forceWristDetect:
_hidQueue_handleHIDEvent:sender:
_hidQueue_handleOnWristEventWithProximityMask:
addHIDHandlerObserver:
removeHIDHandlerObserver:
forceWristDetectAfterDelay:
_handleHIDServiceRegister:refcon:
_handleHIDEvent:sender:
_hidEventQueue
_ioHIDEventSystemClientRef
_ioHIDWristProximityService
_ioHIDWristProximityServiceID
setDwelltimeMs:
setHasDwelltimeMs:
hasDwelltimeMs
dismissReason
setDismissReason:
setHasDismissReason:
hasDismissReason
dismissReasonAsString:
StringAsDismissReason:
scrollBehavior
setScrollBehavior:
setHasScrollBehavior:
hasScrollBehavior
scrollBehaviorAsString:
StringAsScrollBehavior:
dwelltimeMs
_dwelltimeMs
_dismissReason
_scrollBehavior
setWeightKg:
setHasWeightKg:
hasWeightKg
setHeightCm:
setHasHeightCm:
hasHeightCm
setBiologicalSex:
setHasBiologicalSex:
hasBiologicalSex
setAgeYears:
setHasAgeYears:
hasAgeYears
weightKg
heightCm
biologicalSex
ageYears
_ageYears
_biologicalSex
_heightCm
_weightKg
objectAtIndex:
addPast:
addFuture:
pastsCount
clearPasts
pastAtIndex:
futuresCount
clearFutures
futureAtIndex:
pastType
futureType
pasts
setPasts:
futures
setFutures:
_futures
_pasts
setCollectionType:
setSourceType:
setPriority:
sharedDiagnosticManager
healthDaemon
_startObservingPowerSavingModeSetting
_startObservingCurrentWorkoutChanges
unregisterDataCollector:
_stopObservingPowerSavingModeSetting
aggregatorForType:
registerDataCollector:state:
_queue_createHealthLiteManager
_queue_updateHeartRateCollectionType
localDevice
_localDeviceSource
heartRate
unitFromString:
behavior
feedCatherine:confidence:
collectionType
_queue_isPowerSavingModePreventingStreaming
dataCollector:didChangeState:
_workoutManagerStateDidChange
workoutManager
isPowerSavingEnabledForCurrentActivity
_queue_updateAllCollectionTypes
diagnosticDescription
beginCollectionForDataAggregator:lastPersistedSensorDatum:
dataAggregator:wantsCollectionWithConfiguration:
deviceForDataAggregator:
sourceForDataAggregator:
identifierForDataAggregator:
dataCollector:didCollectHeartRate:device:source:
_powerSavingModeDidChange
_registerPowerLogEvent:
_setCatherineFeeder:
_setBridgeSettings:
_heartRateEnabledInPrivacy
_heartRateAggregator
_heartRateCollectionConfiguration
_heartRateCollectionState
_catherineFeeder
_localDeviceEntity
setThirdPartyAppsCount:
setHasThirdPartyAppsCount:
hasThirdPartyAppsCount
setThirdPartyAppsWroteDataCount:
setHasThirdPartyAppsWroteDataCount:
hasThirdPartyAppsWroteDataCount
setDatabaseSizeMB:
setHasDatabaseSizeMB:
hasDatabaseSizeMB
setRowCountObjects:
setHasRowCountObjects:
hasRowCountObjects
setPercentageDeletedObjects:
setHasPercentageDeletedObjects:
hasPercentageDeletedObjects
setManuallyEnteredTypesCount:
setHasManuallyEnteredTypesCount:
hasManuallyEnteredTypesCount
setHighFrequencyDataSizeMB:
setHasHighFrequencyDataSizeMB:
hasHighFrequencyDataSizeMB
setHasWatchSource:
setHasHasWatchSource:
hasHasWatchSource
rowCountCDA
setRowCountCDA:
setHasRowCountCDA:
hasRowCountCDA
rowCountCDAAsString:
StringAsRowCountCDA:
setLastMonthRowsAdded:
setHasLastMonthRowsAdded:
hasLastMonthRowsAdded
setLastMonthDatabaseSizeIncreaseMB:
setHasLastMonthDatabaseSizeIncreaseMB:
hasLastMonthDatabaseSizeIncreaseMB
thirdPartyAppsCount
thirdPartyAppsWroteDataCount
databaseSizeMB
rowCountObjects
percentageDeletedObjects
manuallyEnteredTypesCount
highFrequencyDataSizeMB
hasWatchSource
lastMonthRowsAdded
lastMonthDatabaseSizeIncreaseMB
_databaseSizeMB
_highFrequencyDataSizeMB
_lastMonthDatabaseSizeIncreaseMB
_lastMonthRowsAdded
_manuallyEnteredTypesCount
_percentageDeletedObjects
_rowCountObjects
_thirdPartyAppsCount
_thirdPartyAppsWroteDataCount
_rowCountCDA
_hasWatchSource
setUserCharacteristics:
setAchievementStatistics:
setFirstCalendarItemOfDay:
setEnableStandReminders:
setHasEnableStandReminders:
hasEnableStandReminders
setProgressUpdateFrequency:
setHasProgressUpdateFrequency:
hasProgressUpdateFrequency
setEnableGoalCompletions:
setHasEnableGoalCompletions:
hasEnableGoalCompletions
setEnableAchievements:
setHasEnableAchievements:
hasEnableAchievements
setEnableWeeklySummary:
setHasEnableWeeklySummary:
hasEnableWeeklySummary
setTimeZoneOffset:
setHasTimeZoneOffset:
hasTimeZoneOffset
setNumberOfEvents:
setHasNumberOfEvents:
hasNumberOfEvents
setEventBusyTime:
setHasEventBusyTime:
hasEventBusyTime
setDaysSinceFirstCalorieGoal:
setHasDaysSinceFirstCalorieGoal:
hasDaysSinceFirstCalorieGoal
hasUserCharacteristics
hasAchievementStatistics
setWellnessComplicationOnWatchFace:
setHasWellnessComplicationOnWatchFace:
hasWellnessComplicationOnWatchFace
hasFirstCalendarItemOfDay
enableStandReminders
progressUpdateFrequency
enableGoalCompletions
enableAchievements
enableWeeklySummary
timeZoneOffset
numberOfEvents
eventBusyTime
daysSinceFirstCalorieGoal
userCharacteristics
achievementStatistics
wellnessComplicationOnWatchFace
firstCalendarItemOfDay
_daysSinceFirstCalorieGoal
_eventBusyTime
_numberOfEvents
_progressUpdateFrequency
_timeZoneOffset
_achievementStatistics
_firstCalendarItemOfDay
_userCharacteristics
_enableAchievements
_enableGoalCompletions
_enableStandReminders
_enableWeeklySummary
_wellnessComplicationOnWatchFace
nl_dateByAddingDays:toDate:
nl_dateByAddingHours:toDate:
nl_dateByAddingMinutes:toDate:
nl_dateByAddingSeconds:toDate:
initWithState:
delegate
timerState
canStartTimer
canStopTimer
startingTimer
stoppingTimer
didStartTimer
didStopTimer
state
failedToStartTimer
failedToStopTimer
setState:
_delegate
_state
defaultManager
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
localizedDescription
closeFile
data
_appendData:error:
lock
unlock
length
_nameOfNextLogFile
hk_error:format:
stringByAppendingPathComponent:
createFileAtPath:contents:attributes:
fileHandleForWritingAtPath:
removeItemAtPath:error:
fileDescriptor
setAttributes:ofItemAtPath:error:
hk_error:description:underlyingError:
hk_writeValue:size:error:
initWithLength:
replaceBytesInRange:withBytes:
bytes
offsetInFile
writeData:
truncateFileAtOffset:
_executeAtomically:
_sortedListOfLogFiles
reverseObjectEnumerator
stringByDeletingPathExtension
initWithString:
scanInteger:
contentsOfDirectoryAtPath:error:
readDataOfLength:
initWithData:
dataWithBytesNoCopy:length:freeWhenDone:
fileURLWithPath:
fileHandleForReadingFromURL:error:
_enumerateLogFile:fileHandle:mapping:length:handler:error:
hk_readValue:ofSize:error:
_enumerateLogWithVersion:fileHandle:mapping:size:headerLength:handler:error:
mutableBytes
_enumerateLogFromMapping:size:headerLength:handler:error:
_enumerateLogWithFileHandle:handler:error:
enumerateLogFileEntries:handler:error:
initWithPath:
addLogMessage:metricId:error:
path
setPath:
logLock
setLogLock:
fileHandle
setFileHandle:
_path
_logLock
_fileHandle
_settingForKey:defaultSetting:
setSettingValue:forKey:
setPrivacySettingValue:forKey:
_registerForSettingsNotificationForKey:
_unregisterForSettingsNotificationForKey:
_settings
setProfile:
sharedLoader
achievementDefinitionForIdentifier:
profile
achievementEvaluationDelegate
createEvaluatedAchievementWithDefinition:
evaluateAchievementExpression:
weeklySummaryInfoForDate:profile:error:
achievementsWithPredicate:profile:error:
predicateForObjectsFromAppleWatchSources:profile:error:
predicateWithProperty:greaterThanOrEqualToValue:
predicateWithProperty:lessThanOrEqualToValue:
compoundPredicateWithPredicate:otherPredicate:
entityEnumeratorWithProfile:
setPredicate:
enumerateWithError:handler:
firstDayOfFitnessWeek
definitionWithIdentifier:
evaluatedAchievementWithDefinitionIdentifier:
evaluatedAchievementExpression:
weeklySummaryInfoForDate:
achievementsCompletedDuringInterval:
workoutsCompletedDuringInterval:
recommendedGoalInCaloriesForDate:
activitySummariesDuringInterval:calendar:
monthlyChallengeAchievementForIdentifier:
initWithProfile:typicalDayModel:
isAvailable
primaryProfile
stopUpdates
startUpdatesFromRecord:handler:
querySwimUpdatesFromRecord:handler:
quantitySamplesFromSwimData:toSwimData:startDate:endDate:
createCollectorsForCurrentHardware:
sensorDatumClass
stopPerformingUpdatesWithErrorEncountered:
beginUpdatesFromDatum:withHandler:
fetchHistoricalSensorDataSinceDatum:databaseIdentifier:completion:
hkObjectsFromSensorData:baseSensorDatum:startDate:endDate:
_swimTracker
distance
meterUnit
quantityWithUnit:doubleValue:
quantitySampleWithType:quantity:startDate:endDate:device:metadata:
observedType
domain
strokeCount
countUnit
strokeType
setLocation:
hasLocation
setArrivalDate:
setHasArrivalDate:
hasArrivalDate
location
arrivalDate
_arrivalDate
_location
exceptionWithName:reason:userInfo:
raise
addViews:
setCalendarItem:
viewsCount
clearViews
viewsAtIndex:
setActivityCache:
setAchievement:
setWeeklySummaryDetail:
goalTypesCount
clearGoalTypes
goalTypesAtIndex:
addGoalTypes:
setResponseFlags:
viewsType
alertType
setAlertType:
setHasAlertType:
hasAlertType
alertTypeAsString:
StringAsAlertType:
setDndEnabled:
setHasDndEnabled:
hasDndEnabled
setFailedPosting:
setHasFailedPosting:
hasFailedPosting
testAction
setTestAction:
setHasTestAction:
hasTestAction
testActionAsString:
StringAsTestAction:
hasCalendarItem
hasActivityCache
hasAchievement
hasWeeklySummaryDetail
goalTypes
setGoalTypes:count:
hasResponseFlags
dndEnabled
failedPosting
calendarItem
views
setViews:
activityCache
achievement
weeklySummaryDetail
responseFlags
_goalTypes
_achievement
_activityCache
_alertType
_calendarItem
_responseFlags
_testAction
_views
_weeklySummaryDetail
_dndEnabled
_failedPosting
_trackingOffWristEvents
_shouldPauseWorkouts
_pauseActiveWorkouts
_stopTrackingOffWristEvents
_incrementOffWristCount
_shouldTrackOffWristEvents
_handleOnWristEvent
_handleOffWristEvent
hasAnyActiveWorkouts
pauseActiveWorkoutsWithCompletion:
initWithHealthDaemon:hidHandler:
_hidHandler
_consecutiveOffWristEvents
_lastOffWristDetectionDate
setWalking:
setHasWalking:
hasWalking
setAutomotive:
setHasAutomotive:
hasAutomotive
setCycling:
setHasCycling:
hasCycling
setRunning:
setHasRunning:
hasRunning
setOther:
setHasOther:
hasOther
setWorkout:
setHasWorkout:
hasWorkout
setHeartRate:
setHasHeartRate:
hasHeartRate
setActiveCalories:
setHasActiveCalories:
hasActiveCalories
setDuration:
setHasDuration:
hasDuration
setUnknown:
setHasUnknown:
hasUnknown
walking
automotive
cycling
running
other
workout
activeCalories
unknown
_activeCalories
_automotive
_cycling
_duration
_heartRate
_other
_running
_unknown
_walking
_workout
activityType
setActivityType:
setHasActivityType:
hasActivityType
activityTypeAsString:
StringAsActivityType:
setDurationMs:
setHasDurationMs:
hasDurationMs
setTotalEnergyBurned:
setHasTotalEnergyBurned:
hasTotalEnergyBurned
setTotalDistance:
setHasTotalDistance:
hasTotalDistance
setTotalSteps:
setHasTotalSteps:
hasTotalSteps
durationMs
totalEnergyBurned
totalDistance
totalSteps
_durationMs
_totalDistance
_totalEnergyBurned
_totalSteps
_activityType
setConsecutiveStandingHoursGoalsMet:
setHasConsecutiveStandingHoursGoalsMet:
hasConsecutiveStandingHoursGoalsMet
setConsecutiveBriskMinuteGoalsMet:
setHasConsecutiveBriskMinuteGoalsMet:
hasConsecutiveBriskMinuteGoalsMet
setCurrentCalorieGoalConsecutiveCompleteDays:
setHasCurrentCalorieGoalConsecutiveCompleteDays:
hasCurrentCalorieGoalConsecutiveCompleteDays
setConsecutiveCompleteDays:
setHasConsecutiveCompleteDays:
hasConsecutiveCompleteDays
consecutiveStandingHoursGoalsMet
consecutiveBriskMinuteGoalsMet
currentCalorieGoalConsecutiveCompleteDays
consecutiveCompleteDays
_consecutiveBriskMinuteGoalsMet
_consecutiveCompleteDays
_consecutiveStandingHoursGoalsMet
_currentCalorieGoalConsecutiveCompleteDays
setDefinitionIdentifier:
achievementType
setAchievementType:
setHasAchievementType:
hasAchievementType
achievementTypeAsString:
StringAsAchievementType:
setCompletedDate:
setHasCompletedDate:
hasCompletedDate
setValue:
setHasValue:
hasValue
hasDefinitionIdentifier
workoutActivityType
setWorkoutActivityType:
setHasWorkoutActivityType:
hasWorkoutActivityType
workoutActivityTypeAsString:
StringAsWorkoutActivityType:
completedDate
value
definitionIdentifier
_completedDate
_value
_achievementType
_definitionIdentifier
_workoutActivityType
application
setApplication:
setHasApplication:
hasApplication
applicationAsString:
StringAsApplication:
_application
dictionaryWithDictionary:
dataSource
achievementWithDefinitionIdentifier:completedDate:progressValue:goalValue:value:workoutActivityType:
_mockAchievementEarned:
_randomStringIndexForKeyPrefix:achievement:
setProgressMilestoneLocalizationKeyPrefix:
mockYesterdayActivitySummaryMovePercentage
mockYesterdayActivitySummaryExercisePercentage
mockYesterdayActivitySummaryStandPercentage
_setActivitySummaryIndex:
_setStartDate:
hk_startOfDateByAddingDays:toDate:
_setEndDate:
setActiveEnergyBurned:
setActiveEnergyBurnedGoal:
minuteUnit
setAppleExerciseTime:
setAppleExerciseTimeGoal:
setAppleStandHours:
setAppleStandHoursGoal:
_mockSummary
workoutWithActivityType:startDate:endDate:duration:totalEnergyBurned:totalDistance:metadata:
mockProgressAchievementIdentifier
mockProgressAchievementMilestone
_mockFirstGlanceTypeArgument
_mockProgressAchievementIdentifier
_mockProgressAchievementMilestone
_mockYesterdayActivitySummaryMovePercentage
_mockYesterdayActivitySummaryExercisePercentage
_mockYesterdayActivitySummaryStandPercentage
_createProgressEvents
_queue_rescheduleTasksForScheduledAlerts
postNotificationName:object:
_queue_runGoalProgressEventDetection
_queue_cancelScheduledAlerts
nextScheduledDatesByEventIdentifiersForEvents:model:evaluationDelegate:
_setDate:forUnprotectedKey:
anyEventsShouldFireForGoalProgress:withModel:evaluationDelegate:
_queue_updateLastRunValues
_queue_persistLastRunGoalProgress
currentStandGoalPercentage
_setNumber:forUnprotectedKey:
dateForKey:domain:category:profile:entity:error:
numberForKey:domain:category:profile:entity:error:
setDate:forKey:domain:category:profile:error:
setNumber:forKey:domain:category:profile:error:
_unprotectedDateForKey:
_unprotectedNumberForKey:
_unprotectedUserDefaultsDidSync:
_calendarDayChanged:
_todayActivityChanged:
_rescheduleTasksForScheduledAlerts
_isScheduledFireDateStillValid
evaluateEvents:forScheduledDayProgress:goalProgress:withModel:evaluationDelegate:
_queue_generateAlertRequestForProgressEvent:
containsString:
_runGoalProgressEventDetection
previousMoveGoalPercentage
previousExerciseGoalPercentage
_progressEvents
_lastRunMovePercentage
_lastRunExercisePercentage
_lastRunStandPercentage
fetchPredictedConditionsForAction:withHandler:
_handlerBlocksByAction
_actionConditions
alertSuppressionStatusDidChange:
_taskIsScheduled
_cancelScheduledTask
_hasMoveGoal
wantsToAlert
alertsAreSuppressed
initWithCurrentActivitySummaryHelper:wristEventsManager:backgroundTaskScheduler:bridgeSettings:
_activityGoalIsSet
sharedInstance
initWithHandler:
observerForBacklightOffWithHandler:
backlightDidChange:from:to:
backlightDidTurnOn:forReason:
backlightDidTurnOff:forReason:
_handler
_alertSuppressionQueue_refreshActivityAlertSuppression
_fetchActivityAlertSuppressionStateForReason:completion:
_clientExistsWithId:
_invalidateClientsWithIds:
_addActivityAlertSuppressionClientWithIdentifier:suppressionReason:timeoutUntilDate:
_maxClientSuppressionEndTimeForReason:
_currentDate
removeObjectsForKeys:
_notifyAfterBacklightOffForSuppressionId:reason:
_notifyObserversOfInvalidationForSuppressionId:reason:
_performInvalidationBehaviorIfAnyForClientWithId:
_deleteClientsWithIds:
_isEmptyClientsList
arrayWithCapacity:
_cleanupClientsWithTimeoutBefore:
_maxClientSuppressionEndTime
_alertSuppressionQueue_restartActivityAlertSuppressionTimer
_alertSuppressionQueue_cancelActivityAlertSuppressionTimer
_alertSuppressionQueue_startActivityAlertSuppressionTimerWithDuration:
isEqualToNumber:
laterDate:
unregisterAlertSuppressionObserver:
suppressActivityAlertsForIdentifier:suppressionReason:timeoutUntilDate:
invalidateActivityAlertSuppressionForIdentifier:
_alertSuppressionQueue
_alertSuppressionObserverQueue
_backlightQueue
_alertSuppressionTimerSource
_backlightObservers
_alertSuppressionObservers
_unitTesting_synthesizeBacklightOffEvent
_refreshCurrentWristDetectionAndOnWristState
_notifyObserver:forWristState:
_internalQueue_updateCachesFromPersistentStore
_internalQueue_onWristMonitorStateDidChangeToState:
setChangeHandler:
_backgroundTaskWristEventFired
addObserver:forDataType:
_internalQueue_transferSamplesFromDefaultsToDatabase
categorySampleWithType:value:startDate:endDate:device:metadata:
healthDatabase
isDataProtectedByFirstUnlockAvailable
_internalQueue_persistSamplesToDatabase:
_internalQueue_persistSamplesToDefaults:
deviceManager
currentDeviceEntityWithError:
defaultLocalDataProvenanceWithDeviceEntity:
_internalQueue_now
_internalQueue_sortedSamplesFromDefaults
arrayByAddingObjectsFromArray:
_internalQueue_calendar
_fetchSortedOnWristDatesTodayDateWithProfile:currentState:currentCalendar:currentDate:
predicateMatchingAllPredicates:
samplesWithType:profile:encodingOptions:predicate:limit:anchor:error:
_sortedOnWristSamplesTodayWithProfile:currentState:currentCalendar:currentDate:
_internalQueue_notifyObserversForWristState:async:
getWristState:
_fetchErrorHandledWristDetectionStateWithCompletion:
requestWristDetectionDisabledStatusWithCompletion:
_refreshCurrentOnWristState
_wristStateChangedTo:
_fetchWristDetectionStateWithCompletion:
_internalQueue_handleGizmoOnWristState
_internalQueue_handleGizmoOffWristState
_internalQueue_handleGizmoDisabledWristState
_internalQueue_cancelDebounceTimer
_internalQueue_scheduleTaskAtDate:
_internalQueue_performLastChanceSyncAndWait
nanoSyncManager
syncHealthDataWithOptions:reason:completion:
setSecond:
dateByAddingComponents:toDate:options:
_internalQueue_persistWristStateChangeToState:date:
initialize
samplesAdded:anchor:
samplesJournaled:type:
samplesOfTypesWereRemoved:anchor:
initWithProfile:backgroundTaskScheduler:onWristMonitor:
_clearCachedState
_onWristMonitor
_internalQueue
_lastNotifiedState
_wristDetectionStateErrorCounter
_lastMonitorOnWristState
_mostRecentOnWristDate
_firstOnWristDateToday
_calendarOverride
_dateOverride
_setCalendarOverride:
_setDateOverride:
_reset
categoryType
initWithProfile:bridgeSettings:wristManager:dataLogger:
_sedentaryTimerState
_registerForFakeStandTriggerNotifications
_queue_fireReminderNotificationIfRequiredOfType:forHourWithStartDate:force:
startSedentaryTimerIfPossible
stopSedentaryTimer
_queue_processCachedSedentaryHourSamples
_registerDaemonLaunchForSedentaryTimerFiredNotification
_checkIfSedentaryTimerNeedsStart
_timer
isActive
_queue_stopSedentaryTimerIfRequired
_queue_startSedentaryTimerIfRequired
pairingID
_canStartSedentaryTimer
_queue_stopSedentaryTimer
_queue_stopTimerHandlerWithError:
stopTimerWithHandler:
code
_timerStopped
_queue_startTimer
_queue_registerTimerHandler
_startDateForSedentaryTimer
_queue_startTimerHandlerWithError:
startTimerWithStartTime:periodInterval:reminderInterval:autoReschedule:handler:
_timerStarted
_checkIfSedentaryTimerNeedsStop
_queue_processDataObjectsInArray:
registerForAlarmsWithHandler:
alarmType
didWake
_roundedDateForDate:
logStandHourDidStand:date:
_saveMissedHourDetailsIntoDBWithStartDate:
_saveActiveHourDetailsIntoDBWithStartDate:
_queue_fireCongratulatoryNotificationIfRequiredForHourWithStartDate:
minute
setMinute:
_shouldFireReminderForHourWithStartDate:
_numberOfActiveHoursToday
_timeoutDateForSedentaryTimerAlertOfType:withHourStartDate:
generateSedentaryAlertExperimentInstance
_queue_showSedentaryAlertOfType:withTimeoutDate:experimentInstance:
_queue_isReminderNotificationRequiredOfType:forHourWithStartDate:
_queue_fireReminderNotificationImmediatelyOfType:forHourWithStartDate:
shouldDelayNotificationsUntilSettled
_fireReminderNotificationImmediatelyIfRequiredOfType:forHourWithStartDate:force:
_shouldFireCongratulatoryAlertForHourWithStartDate:
_saveSedentaryHourDataIfRequired:
_cacheSedentaryHourStartDate:state:
_keyFromDate:
_dateFromKey:
_dataExistsForHourStart:
performReadTransactionWithHealthDatabase:error:usingBlock:
_saveSedentaryHourDataObjects:error:
countOfSamplesWithType:profile:matchingPredicate:withError:
insertDataObjects:withProvenance:creationDate:skipInsertionFilter:error:
stringValue
dateWithTimeIntervalSinceReferenceDate:
mostRecentSampleWithType:profile:encodingOptions:predicate:anchor:error:
_isSedentaryTimerNotificationEnabled
_numberOfAwakeHoursToday
testShouldSkipSedentaryAlert
UUID
initWithSubmanagerIdentifier:UUID:userInfo:
setExperimentInstance:
logSkippedCoachingRequest:
_sedentaryTimer
_wristManager
_sedentaryTimerStateEngine
_retryInCaseOfErrorCounter
_reminderInterval
_currentExperimentInstance
_notifyToken
isExerciseMinuteAvailable
_exerciseMinuteDataStore
startUpdatesWithHandler:
queryExerciseMinutesFromRecord:handler:
briskMinuteDataType
_shouldSkipInitialResults
_queue_lastReceivedSecondaryContext
recordId
recordID
_primaryContextExistsForDomain:profile:
_hasEstablishedSecondaryContext
_didMigrateFromOldBriskMinuteCalculation
_queue_updateLastReceivedSecondaryContext:
_appendSecondaryContextWithValue:forKey:
requiresSampleAggregation
willPersistHKObjects:
_queue_aggregationInterval
encodeWithCoder:
initWithCoder:
supportsSecureCoding
sourceId
setFrom:
setTo:
hasFrom
hasTo
mode
setMode:
setHasMode:
hasMode
modeAsString:
StringAsMode:
from
_from
_mode
batteryState
setBatteryState:
setHasBatteryState:
hasBatteryState
batteryStateAsString:
StringAsBatteryState:
_batteryState
year
month
setWithObjects:
achievementTypeString
containsObject:
setDataProvider:
setSerialQueue:
_achievementDefinitionsChanged
dataProvider
_hasMinimumActiveDays
_isFirstWeekOfCurrentMonth
serialQueue
_queue_runIfNecessaryWithCompletion:
runBlockAfterUpdatingAchievementData:
_queue_createMonthlyChallengeType:goalOverride:completion:
_queue_deleteMonthlyChallengeWithCompletion:
_monthlyChallengeAchievementExistsForCurrentMonth
_createMonthlyChallengeAchievementWithCompletion:
_challengeTypeFromString:
_randomAvailableChallengeType
_definitionForChallengeType:
expressionForConstantValue:
setExpressionForGoalValue:
_persistAchievementDefinition:completion:
_definitionIdentifierForCurrentMonth
removeAchievementDefinitionWithIdentifier:completion:
isDefinitionWithIdentifierLoaded:
weekOfMonth
_achievementDefinitionForCurrentMonth
addAchievementDefinition:completion:
valueForAchievementPredicateEnvironmentExpression:
expressionForDaysMeetingAllGoalsInMonthOffset:
_numberValueForExpression:
rangeOfUnit:inUnit:forDate:
_achievementDefinitionForDaysMeetingAllGoals:referenceProgressNumber:
expressionForDaysMeetingMoveGoalInMonthOffset:
_achievementDefinitionForDaysMeetingMoveGoal:referenceProgressNumber:
expressionForDaysMeetingExerciseGoalInMonthOffset:
_achievementDefinitionForDaysMeetingExerciseGoal:referenceProgressNumber:
expressionForDaysMeetingStandGoalInMonthOffset:
_achievementDefinitionForDaysMeetingStandGoal:referenceProgressNumber:
expressionForDailyAverageActiveCaloriesBurnedInMonthOffset:
_achievementDefinitionForAverageActiveEnergyBurn:referenceProgressNumber:
expressionForDailyAverageExerciseMinutesPerDayInMonthOffset:
_achievementDefinitionForAverageExerciseMinutes:referenceProgressNumber:
expressionForActiveCaloriesBurnedInMonthOffset:
_achievementDefinitionForActiveEnergyBurn:referenceProgressNumber:
expressionForExerciseMinutesInMonthOffset:
_achievementDefinitionForTotalExerciseMinutes:referenceProgressNumber:
expressionForWorkoutsCompletedInMonthOffset:
_achievementDefinitionForTotalWorkouts:referenceProgressNumber:
expressionForDistanceTraveledInMonthOffset:
_achievementDefinitionForTotalDistance:referenceProgressNumber:
expressionForDaysMeetingMoveGoalByFactorOfTwoInMonthOffset:
_achievementDefinitionForDaysDoublingMoveGoal:referenceProgressNumber:
achievementsCompletedDuringDateInterval:achievementIdentifier:
activitySummariesInDateInterval:calendar:
_activitySummaryIndex
_dateIntervalForLastMonth
_challengeTypeSuggestedOnDate:
_achievementEarnedCountInDateInterval:achievementIdentifier:
_numberOfMoveGoalIncreasesDuringDateInterval:
isWheelchairUser
_isChallengeOfTypeAvailable:
_daysClosingAllThreeRingsDefinitionForCurrentMonth
_daysClosingMoveRingDefinitionForCurrentMonth
_daysClosingExerciseRingDefinitionForCurrentMonth
_daysClosingStandRingDefinitionForCurrentMonth
_averageDailyActiveEnergyBurnDefinitionForCurrentMonth
_totalActiveEnergyBurnDefinitionForCurrentMonth
_averageDailyExerciseMinutesDefinitionForCurrentMonth
_totalExerciseMinutesDefinitionForCurrentMonth
_totalWorkoutsDefinitionForCurrentMonth
_totalDistanceDefinitionForCurrentMonth
_daysDoublingMoveGoalDefinitionForCurrentMonth
availableChallengeTypes
setIdentifier:
setDisplayOrder:
setBadgeShapeName:
setCalendarUnitForEqualityCheck:
setReferenceProgressValue:
setDeduplicationStrategy:
_dateIntervalForCurrentMonth
setAvailableStartDateUTC:
setAvailableEndDateUTC:
expressionWithFormat:
predicateWithLeftExpression:rightExpression:modifier:type:options:
setExpressionForProgressValue:
setExpressionForEarnedValue:
_monthlyAchievementDefinitionTemplateForCurrentMonthWithProgressExpression:goalExpression:referenceProgress:
setTitle:
setTriggers:
setAchievementTypeString:
isChallengeProgressInAverages:
isChallengeProgressInDays:
createMonthlyChallengeType:goalOverride:completion:
deleteMonthlyChallengeWithCompletion:
setCurrentCalendarOverride:
_dataProvider
_serialQueue
errorWithDomain:code:userInfo:
initWithDataSource:coachingSubmanagerDelegate:
setDataSource:
component:fromDate:
referenceProgressValue
goalValue
_firstDefinitionIdentifierInDefinitionIdentifiers:passingMilestoneTest:completion:
setProgressValue:
setPaceToReachGoal:
_canCoachWithProgressNumber:goalNumber:
_dateIntervalForYesterday
predicateWithBlock:
filteredArrayUsingPredicate:
expressionForProgressValue
expressionForGoalValue
_dataSource
_coachingSubmanagerDelegate
indexOfObjectPassingTest:
newSensorDatumBuffer
stopOdometerUpdates
odometerActivity
startOdometerUpdatesForActivity:withHandler:
addSensorDatum:
beginUpdatesWithHandler:
hkObjectsFromSensorDatum:context:
_odometer
_currentSensorDatumBuffer
setBufferAggregationInterval:
_generateHKObjectsFromOdometerData:toOdometerData:
setObjectCreationBlock:
setSensorDatumComparisonBlock:
setPoorTiming:
setHasPoorTiming:
hasPoorTiming
setAlreadyDoing:
setHasAlreadyDoing:
hasAlreadyDoing
poorTiming
alreadyDoing
_alreadyDoing
_poorTiming
setIsBusy:
setHasIsBusy:
hasIsBusy
isBusy
_isBusy
setStandHourTimestamp:
setHasStandHourTimestamp:
hasStandHourTimestamp
setDidStand:
setHasDidStand:
hasDidStand
standHourTimestamp
didStand
_standHourTimestamp
_didStand
setActiveSeconds:
setHasActiveSeconds:
hasActiveSeconds
setEventTimestamp:
setHasEventTimestamp:
hasEventTimestamp
setHeight:
setHasHeight:
hasHeight
setWeight:
setHasWeight:
hasWeight
setAge:
setHasAge:
hasAge
activeSeconds
eventTimestamp
height
weight
_eventTimestamp
_activeSeconds
_age
_height
_weight
isRunningStoreDemoMode
_beginSessionTransaction
_queue_endSessionWithReason:
_shouldUseHealthLiteSession
_queue_alertClientSessionDidReceiveHeartRate:
_queue_deactivate
deepBreathingServerDidDeactivate:
_endSessionTransaction
remoteObjectProxyWithErrorHandler:
clientWithErrorHandler:
sessionDidReceiveHeartRate:
sessionDidReceiveError:
_transactionIdentifier
startSessionWithStartDate:completion:
startGuiding
endSessionWithEndReason:
deactivate
sessionUUID
initWithClient:sessionConfiguration:daemon:delegate:
_queue_alertClientSessionDidReceiveError:
queue
setQueue:
healthLiteQueue
setHealthLiteQueue:
client
sessionConfiguration
serverState
setServerState:
_healthLiteQueue
_client
_daemon
_sessionConfiguration
_serverState
isNatalimeterAvailable
_calorimeter
startAbsoluteNatalimetryDataUpdatesWithHandler:
queryAbsoluteNatalimetryDataSinceDataRecord:withHandler:
stopAbsoluteNatalimetryDataUpdates
setMaxDatumDuration:
basalNatalies
defaultCollectionInterval
natalies
goalTypeAtIndex:
addGoalType:
setFeatures:
setEventType:
setHasEventType:
hasEventType
setRecommendedGoal:
setHasRecommendedGoal:
hasRecommendedGoal
setNewGoal:
setHasNewGoal:
hasNewGoal
hasFeatures
eventType
recommendedGoal
newGoal
features
_eventType
_features
_newGoal
_recommendedGoal
setTypeIdentifier:
setHasTypeIdentifier:
hasTypeIdentifier
setInSession:
setHasInSession:
hasInSession
setMinDelayUs:
setHasMinDelayUs:
hasMinDelayUs
setMaxDelayUs:
setHasMaxDelayUs:
hasMaxDelayUs
setMeanDelayUs:
setHasMeanDelayUs:
hasMeanDelayUs
setStdDelayUs:
setHasStdDelayUs:
hasStdDelayUs
setSampleCount:
setHasSampleCount:
hasSampleCount
setIndexInSession:
setHasIndexInSession:
hasIndexInSession
typeIdentifier
inSession
minDelayUs
maxDelayUs
meanDelayUs
stdDelayUs
sampleCount
indexInSession
_indexInSession
_maxDelayUs
_meanDelayUs
_minDelayUs
_sampleCount
_stdDelayUs
_typeIdentifier
_inSession
isPresentedOnFollowingDay
_nl_isNextDayScheduled
_nl_earnedOnDayContainingDate:
_nl_isNewerThanDaysAgo:now:
initWithProfile:mode:
initWithProfile:store:
setDailyGoalDetectionDelegate:
setCallbackQueue:
setShouldObserveCurrentActivitySummaries:
setAchievementEvaluationDelegate:
raise:format:
_unregisterForDataCollection
_unregisterForWorkoutUpdates
_queue_scheduleAlertsForAchievements:
todayActivitySummary
achievementStore
didCommitAchievementsHandler
_achievementCommitHandler
setDidCommitAchievementsHandler:
_queue_incrementCurrentRunCount
_queue_runDetectiveWithCompletion:
_queue_decrementCurrentRunCount
lastRunDate
distantPast
_queue_setNeedsRunWhenProtectedDataIsAvailable:
setLastRunDate:
_queue_performDatabaseIdentifierCheck
_queue_runDetectiveWithNow:completion:
_queue_runForFirstMoveGoal
detective
_injectNow:
resetForNewInboxValues
clearValuesForGizmoRun
storeValuesValidBeforeSummaryIndex
runAchievementDetectionFromActivitySummaryIndex:toActivitySummaryIndex:didDetectNewWorkouts:
dailyGoalDetectionDelegate
runAchievementDetectionFromActivitySummaryIndex:toActivitySummaryIndex:
_storeAggregateStatisticsForAchievements:
retrieveDatabaseIdentifierFromProfile:error:
hk_UUIDWithData:
runDatabaseIdentifierCheckWithCurrentDatabaseIdentifier:identifierChanged:error:
oldestSampleWithType:profile:encodingOptions:predicate:error:
quantity
_queue_needsRunWhenProtectedDataIsAvailable
_runAfterDelay:completion:
stopDataCollectionForType:observer:
_workoutDataType
removeObserver:forDataType:
setTodayActivitySummary:
_queue_firstMoveGoal
setYesterdayActivitySummary:
sampleType
stringByAppendingString:
_registerForWorkoutUpdates
bridgeSettings
_areAchievementNotificationsEnabled
unalertedAchievements
_markAlertRequestsProcessed:
_sortCoachingAlertRequests:
achievementWithDefinitionIdentifier:completedDate:value:workoutActivityType:
markAchievementAlerted:error:
_lastScheduledWristOnTaskDate
_delayAfterWristOnForNextDayScheduledAchievements
_setLastScheduledWristOnTaskDate:
workoutType
isDefinitionWithIdentifierRemotelyDefined:
compareDisplayOrderOfDefinition:
sortUsingComparator:
addAchievements:
commitWithError:
_moveGoalDataType
initWithProfile:dailyGoalDetectionDelegate:bridgeSettings:
_queue_currentRunCount
_queue_setCurrentRunCount:
_queue_didPerformDatabaseIdentifierCheck
_queue_activitySummariesAreAvailable
injectAchievement:
setAchievementStore:
setDetective:
setBridgeSettings:
_currentRunCount
_needsRunWhenProtectedDataIsAvailable
_didPerformDatabaseIdentifierCheck
_didCollectAWDMetrics
_needsRunForWorkouts
_needsRunForFirstMoveGoal
_didFetchFirstMoveGoal
_firstMoveGoal
_achievementStore
_detective
_dailyGoalDetectionDelegate
_todayActivitySummary
_yesterdayActivitySummary
_lastRunDate
serverWithClient:profile:error:
setNanoHealthPlugin:
nanoHealthPlugin
registerServer:notificationTypes:
coachingManager
actionConditionMonitor
achievementManager
connectionInvalidated
unregisterServerForNotifications:
serverWithClient:plugin:error:
remote_registerForAchievementNotificationsAndFetchUnalertedCountWithCompletion:
remote_fetchAchievementsWithCompletedDateBetweenStart:end:completion:
remote_markAchievementsAlerted:completion:
remote_fetchNumberOfUnviewedAchievementsWithCompletion:
remote_markAchievementAsViewed:completion:
remote_fetchHiddenUnearnedAchievementDefinitionIdentifiersAmongIdentifiers:completion:
remote_registerForAchievementDefinitionNotificationsWithCompletion:
remote_fetchUnviewedAchievementDefinitionIdentifiersWithCompletion:
remote_markAchievementDefinitionIdentifierAlertViewed:completion:
remote_fetchAchievementAssetsServerURLWithCompletion:
remote_setAchievementAssetsServerURL:completion:
remote_createMonthlyChallengeAchievementForMonth:year:predicateString:progressExpressionString:goalExpressionString:completion:
remote_progressAchievementWithIdentifier:completion:
remote_fetchDynamicAchievementDefinitionsWithCompletion:
remote_updateAllAchievementAssetsWithCompletion:
remote_addAchievement:completion:
remote_runAchievementsFixupAsDryRun:completion:
remote_runCompanionAchievementManagerWithCompletion:
remote_setCurrentActivityCacheOverrideDate:timeZone:completion:
remote_deleteAchievementWithUUID:completion:
remote_deleteAllAchievementsWithCompletion:
remote_nextScheduledAchievementDefinitionAlertTaskDateWithCompletion:
remote_achievementAssetAvailabilityOnPairedDeviceForIdentifiers:completion:
remote_resetAchievementDefinitionAlertedStates:availabilityStates:completion:
remote_expressionValue:completion:
coachingAlertDidCompleteWithResponse:completion:
registerForUpdatesOfTypes:
runCoachingManagerWithCompletion:
forceCoachingWithArguments:completion:
fakeFreeCalendarDateIntervals:motionState:inCarState:completion:
stopFakingWithCompletion:
showTypicalDayWithCompletion:
remote_runMonthlyChallengeEngineWithCompletion:
remote_createMonthlyChallengeType:goalOverride:completion:
remote_deleteMonthlyChallengeWithCompletion:
remote_runAchievementManagerWithCompletion:
exportedInterface
remoteInterface
_nanoHealthPlugin
sourceRevision
source
_isLocalDevice
_reportAndReset
ingestionTracker:didGenerateLatencyEvent:
reset
initWithSampleType:
appendSamples:atTime:inSession:
dataTypeCode
_sumx
_sumxx
_minDelay
_maxDelay
_count
_reportIndex
_dataTypeCode
testShouldSkipDailyProgressAlert
testActionForCodableAlertType:
initWithSuiteName:
addSuiteNamed:
synchronize
_queue_readDataCollectionSetting
_registerForSettingChangeNotifications
initWithComponentId:
currentDevice
setBatteryMonitoringEnabled:
batteryStateDidChange:
_registerForActivityAppLaunchNotifications
_isDataLogEnabled
_logDirectoryPath
_queue_startTrackingAfterDaemonReady
addWorkoutEventObserver:
removeWorkoutEventObserver:
removeObserver:name:object:
_queue_logActivityAppDidLaunch
directoryPath
_queue_logCodable:metricId:
_onQueueIfEnabled:
setMostRecentGoal:
setNumTimesGoalAchieved:
setSelectedGoal:
responseOptions
appleExerciseTime
appleStandHours
experimentInstance
_queue_updateEvent:withExperimentInstance:
_queue_updateEvent:withAchievement:
_queue_updateEvent:withWeeklySummaryInfo:lastResponseInfo:recommendedGoal:
_queue_updateEvent:withGoalTypes:
_queue_codableActivityCacheForActivitySummary:
_queue_concurrentCalendarItemForDate:
availability
predicateForEventsWithStartDate:endDate:calendars:
isAllDay
_queue_concurrentCalendarItemFromEvent:
enumerateEventsMatchingPredicate:usingBlock:
failed
actions
presentationDate
dwelltime
responseUserInfo
_queue_updateEvent:withResponseOptionsFromActions:
consecutiveBriskMinutesGoalsMet
compareStartDateWithEvent:
components:fromDate:toDate:options:
_creationDate
_dateAsDays:
_dateComponentsAsAge:
meterUnitWithMetricPrefix:
gramUnitWithMetricPrefix:
timeZone
secondsFromGMT
_queue_codableUserCharacteristics
_queue_daysSinceFirstCalorieGoal
_queue_updateAchievementStatisticsForWristOnSettings:
_queue_updateCalendarSummaryForWristOnSettings:
_queue_logFirstWristOnSettings
_queue_logExperimentalCondition:
filterWithOperatorType:comparisonDate:
filterByCombiningFilters:compoundType:
entityEnumeratorWithType:profile:
setFilter:
enumerateIncludingDeletedObjects:error:handler:
_queue_stepsFromDate:toDate:
currentWorkoutActivityType
sessionId
setSessionUUID:
_queue_startTracking
_queue_endTracking
_queue_logWorkoutEvent:workoutManager:
bundleIdentifier
_queue_logWorkout:
hasLoadedActivitySummaries
logActivitySummary:
getAWDTimestamp
newMetricContainerWithIdentifier:
setMetric:
submitMetric:
workoutManager:didReceiveEvent:
initWithProfile:coachingAlertNotifier:bridgeSettings:
logExperimentalCondition:
_lastUploadedActivityCacheIndex
_eventStore
_log
_activityNotifyToken
_managedConfigurationNotifyToken
_settingChangeNotifyToken
_dataCollectionEnabled
_awdServerConnection
_logSettingsAtNextUnlock
_daemonReady
_lastBatteryState
_ingestionTrackers
dictionaryWithCapacity:
initWithCalendarIdentifier:
dynamicAchievementDefinitionDataStore
setWithObject:
predicateForAchievementsWithDefinitionIdentifiers:
runBlockAfterInitialization:
healthStore
setHealthStore:
_healthStore
deepBreathingWeeklySummaryInfoForDate:profile:error:
_queue_coachingAlertRequest
_areWeeklySummaryNotificationsEnabled
_shouldShowWeeklySummary
_shouldScheduleWeeklySummary
_setMostRecentWeeklySummaryAlertDate:profile:
_weeklySummaryHasData
_mostRecentWeeklySummaryAlertDateWithProfile:
eventTypeAsString:
StringAsEventType:
hasSessionUUID
_sessionUUID
isScheduled
minimumDayDuration
_minimumDayDuration
timeIntervalAfterOnWrist
setTimeIntervalAfterOnWrist:
_timeIntervalAfterOnWrist
percentOfDay
_percentOfDay
percentOfGoalCompleted
_percentOfGoalCompleted
_nextFireDateForEvent:model:
_eventDidCrossScheduledThreshold:withModel:evaluationDelegate:
didCrossActivityThresholdWithModel:evaluationDelegate:forGoalType:
nextFireDateWithModel:
startOfToday
endOfToday
setHasMostRecentGoal:
hasMostRecentGoal
setHasNumTimesGoalAchieved:
hasNumTimesGoalAchieved
setHasSelectedGoal:
hasSelectedGoal
mostRecentGoal
numTimesGoalAchieved
selectedGoal
_mostRecentGoal
_numTimesGoalAchieved
_selectedGoal
com.apple.nanolifestyle.NLMockCoachingSubmanager
EnableStandReminders
EnableProgressUpdates
EnableGoalCompletions
RemindersPerDay
EnableWeeklySummary
InternalABTestingConditionOverride
AppleInternalDataCollectionEnabled
SeedStudyDataCollectionEnabled
AllowInternalABTesting
cachedSedentaryHours
sedentaryTimerMostRecentRemindedHour
sedentaryTimerMostRecentReminderExperimentInstance
sedentaryTimerMostRecentCongratulatedHour
sedentaryTimerMostRecentMovedHour
presentWeeklySummaryImmediately
com.apple.managedconfiguration.defaultsdidchange
NLDisableActivityAlerts
v4@?0
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
goalType
TI,N
TI,N,VgoalType
queue
NLDeepBreathingDowntime
DeepBreathing
v12@?0@"NSArray"4@"NSError"8
NLDeepBreathingReminderAlertFireDate
DeepBreathingReminder
com.apple.nanolifestyle.deepBreathing
settled
moving
v16@?0@"NLActivityAlarmMonitor"4B8@"NSError"12
coachingSubmanagerDelegate
T@"<NLCoachingSubmanagerDelegate>",W,N
typicalDayModel
T@"FITypicalDayActivityModel",W,N
shouldFireOnNextPoll
TB,V_shouldFireOnNextPoll
T@"<NLCoachingSubmanagerDelegate>",W,N,VcoachingSubmanagerDelegate
T@"FITypicalDayActivityModel",W,N,VtypicalDayModel
v24@?0@"NSArray"4@"NSDictionary"8q12@"NSError"20
i12@?0@"HKActivitySummary"4@"HKActivitySummary"8
v16@?0@"HKActivitySummary"4I8^B12
com.apple.nanolifestyle.NLCoachingManager
pollingQueue
activitySummaryQueue
v12@?0@"NSString"4@"HDBackgroundTask"8
NLCoachingManagerForceCoaching
Activity alerts suppressed (workout in progress)
v8@?0B4
SignificantTimeChangeNotification
v8@?0i4
com.apple.nanolifestyle.rings.completed
com.apple.nanolifestyle.settings.ActivitySetup
not 
NLCoachingManagerScheduledRunDates
v16@?0@"NSString"4@"NSDate"8^B12
i12@?0@"NSNumber"4@"NSNumber"8
No polling reasons
Not on wrist, polling skipped
NLCoachingManagerPerformPoll
Protected data not available
v16@?0@"NSNumber"4I8^B12
Polling did not complete
T@"FITypicalDayActivityModel",R,N,V_typicalDayModel
monthlyChallengeEngine
T@"NLMonthlyChallengeEngine",R,N,V_monthlyChallengeEngine
%@ %@
timestamp
onWrist
hasTimestamp
TB,N
TQ,N,V_timestamp
hasOnWrist
TB,N,V_onWrist
com.apple.nanolifestyle.coaching.goalCompletion
dailyGoalCompletionData
move
exercise
stand
None
Move
Exercise
Stand
NLActionConditionMonitor
%@-%d
no error
v8@?0@"NSError"4
action
T@"RTAction",R,N,V_action
block
T@?,R,N,V_block
NanoLifestyleEnableFitnessDataCollectionSettingDidChangeNotification
observerQueue
NanoLifestylePreferencesChangedNotification
NanoLifestyleDeepBreathingPreferencesChangedNotification
NanoLifestylePrivacyPreferencesChangedNotification
identifier
awdMetricId
awdCodableData
hasAwdMetricId
TI,N,V_awdMetricId
hasAwdCodableData
TB,R,N
T@"NSData",&,N,V_awdCodableData
cacheIndex
energyBurned
briskMinutes
activeHours
stepCount
energyBurnedGoal
walkingAndRunningDistance
energyBurnedGoalDate
startDate
endDate
hasCacheIndex
Tq,N,V_cacheIndex
hasEnergyBurned
Tq,N,V_energyBurned
hasBriskMinutes
Tq,N,V_briskMinutes
hasActiveHours
Tq,N,V_activeHours
hasStepCount
Tq,N,V_stepCount
hasEnergyBurnedGoal
Tq,N,V_energyBurnedGoal
hasWalkingAndRunningDistance
Tq,N,V_walkingAndRunningDistance
hasEnergyBurnedGoalDate
Tq,N,V_energyBurnedGoalDate
hasStartDate
Tq,N,V_startDate
hasEndDate
Tq,N,V_endDate
com.apple.nanolifestyle.coaching.progress
NLDailyGoalProgressManagerFirstWristOnDateToday
com.apple.nanolifestyle.setting.%@.wriston
locationUUID
locationType
uncertaintyMillis
confidenceMillis
recentVisitCount
hasLocationUUID
T@"NSString",&,N,V_locationUUID
hasLocationType
Ti,N,V_locationType
hasUncertaintyMillis
Tq,N,V_uncertaintyMillis
hasConfidenceMillis
Tq,N,V_confidenceMillis
hasRecentVisitCount
Tq,N,V_recentVisitCount
Unknown
Home
Work
(unknown: %i)
experimentIdentifier
testCondition
hasExperimentIdentifier
T@"NSString",&,N,V_experimentIdentifier
hasTestCondition
Tq,N,V_testCondition
com.apple.nanolifestyle.NLFirstGlanceManager.dayafterwriston
mostRecentFirstGlanceAlertDate
NLFirstGlanceManagerPresentationDelay
NLForceShowFirstGlanceNotification
experimentalCondition
hasExperimentalCondition
T@"NLAWDHealthKitExperimentalCondition",&,N,V_experimentalCondition
observer_queue
hid_event_queue
Placement
DeviceUsagePage
DeviceUsage
dwelltimeMs
dismissReason
scrollBehavior
hasDwelltimeMs
TQ,N,V_dwelltimeMs
hasDismissReason
Ti,N,V_dismissReason
hasScrollBehavior
Ti,N,V_scrollBehavior
AutoDismissNotDisplayed
AutoDismissDisplayed
CrownPressed
SwipeToDismiss
ActionButton
DismissButton
Other
DisableButton
Mute
Timeout
DoNotDisturb
Snooze
PositiveAction
UnknownReason
Bottom
weightKg
heightCm
biologicalSex
ageYears
hasWeightKg
Tq,N,V_weightKg
hasHeightCm
Tq,N,V_heightCm
hasBiologicalSex
Tq,N,V_biologicalSex
hasAgeYears
Tq,N,V_ageYears
past
future
pasts
T@"NSMutableArray",&,N,V_pasts
futures
T@"NSMutableArray",&,N,V_futures
healthlite_event
bundleid
client_connected
client_disconnected
start_passive
start_active
stop_updates
NLHealthLiteDataCollector
count/min
com.apple.nanolifestyle.sessiontrackerapp
EnablePowerSavingMode
NanoLifestyleSessionTrackerAppPreferencesChangedNotification
enabled
disabled
Heart enabled in privacy: %@
Power saving move enabled: %@
Heart Rate Collection: %@
thirdPartyAppsCount
thirdPartyAppsWroteDataCount
databaseSizeMB
rowCountObjects
percentageDeletedObjects
manuallyEnteredTypesCount
highFrequencyDataSizeMB
hasWatchSource
rowCountCDA
lastMonthRowsAdded
lastMonthDatabaseSizeIncreaseMB
hasThirdPartyAppsCount
Tq,N,V_thirdPartyAppsCount
hasThirdPartyAppsWroteDataCount
Tq,N,V_thirdPartyAppsWroteDataCount
hasDatabaseSizeMB
Tq,N,V_databaseSizeMB
hasRowCountObjects
Tq,N,V_rowCountObjects
hasPercentageDeletedObjects
Tq,N,V_percentageDeletedObjects
hasManuallyEnteredTypesCount
Tq,N,V_manuallyEnteredTypesCount
hasHighFrequencyDataSizeMB
Tq,N,V_highFrequencyDataSizeMB
hasHasWatchSource
TB,N,V_hasWatchSource
hasRowCountCDA
Ti,N,V_rowCountCDA
hasLastMonthRowsAdded
Tq,N,V_lastMonthRowsAdded
hasLastMonthDatabaseSizeIncreaseMB
Tq,N,V_lastMonthDatabaseSizeIncreaseMB
Zero
OneToFive
SixToForty
MoreThanForty
enableStandReminders
progressUpdateFrequency
enableGoalCompletions
enableAchievements
enableWeeklySummary
timeZoneOffset
numberOfEvents
eventBusyTime
daysSinceFirstCalorieGoal
userCharacteristics
achievementStatistics
wellnessComplicationOnWatchFace
firstCalendarItemOfDay
hasEnableStandReminders
TB,N,V_enableStandReminders
hasProgressUpdateFrequency
Tq,N,V_progressUpdateFrequency
hasEnableGoalCompletions
TB,N,V_enableGoalCompletions
hasEnableAchievements
TB,N,V_enableAchievements
hasEnableWeeklySummary
TB,N,V_enableWeeklySummary
hasTimeZoneOffset
Tq,N,V_timeZoneOffset
hasNumberOfEvents
Tq,N,V_numberOfEvents
hasEventBusyTime
Tq,N,V_eventBusyTime
hasDaysSinceFirstCalorieGoal
Tq,N,V_daysSinceFirstCalorieGoal
hasUserCharacteristics
T@"NLAWDHealthKitUserCharacteristics",&,N,V_userCharacteristics
hasAchievementStatistics
T@"NLAWDHealthKitAchievementStatistics",&,N,V_achievementStatistics
hasWellnessComplicationOnWatchFace
TB,N,V_wellnessComplicationOnWatchFace
hasFirstCalendarItemOfDay
T@"NLAWDHealthKitConcurrentCalendarItem",&,N,V_firstCalendarItemOfDay
state
Ti,N,V_state
delegate
T@"<NLSedentaryTimerStateEngineDelegate>",W,N,V_delegate
*** Unable to create log name.
*** Error creating log file at %@
*** Error setting protection class for %@, %@
*** Error writing journal version %ld.
BuildVersion
*** Error writing os build %@.
*** Wrote wrong number of bytes to log, expected: %lu, actual: %llu (error %d: %s)
*** Exception writing to log: %@
%05ld.log
*** Log file too short for expected data, Offset: %lu Length: %ld, fileSize: %llu
*** Unknown entry (%lu bytes at offset %llu) found in log, stopping.
*** Log file too short for expected data, Offset: %lu Length: %d, fileSize: %ld
*** Unknown entry (%d bytes at offset %lu) found in log, stopping.
*** Error opening log file %@, %@
*** Log file fstat failed: %s
*** Could not read the version from the log.
Unable to read build length from log file
Unable to read build number from log file
path
T@"NSString",C,N,V_path
logLock
T@"NSLock",&,N,V_logLock
fileHandle
T@"NSFileHandle",&,N,V_fileHandle
B20@?0@"HKObject"4q8^@16
profile
T@"HDProfile",W,N,V_profile
T@"FITypicalDayActivityModel",W,N,V_typicalDayModel
i8@?0i4
location
arrivalDate
hasLocation
T@"NLAWDHealthKitRoutineLocation",&,N,V_location
hasArrivalDate
Tq,N,V_arrivalDate
idx (%tu) is out of range (%tu)
alertType
dndEnabled
failedPosting
testAction
calendarItem
views
activityCache
achievement
weeklySummaryDetail
goalTypes
responseFlags
hasAlertType
Ti,N,V_alertType
hasDndEnabled
TB,N,V_dndEnabled
hasFailedPosting
TB,N,V_failedPosting
hasTestAction
Ti,N,V_testAction
hasCalendarItem
T@"NLAWDHealthKitConcurrentCalendarItem",&,N,V_calendarItem
T@"NSMutableArray",&,N,V_views
hasActivityCache
T@"NLAWDHealthKitActivityCache",&,N,V_activityCache
hasAchievement
T@"NLAWDHealthKitAchievement",&,N,V_achievement
hasWeeklySummaryDetail
T@"NLAWDHealthKitWeeklySummaryDetail",&,N,V_weeklySummaryDetail
goalTypesCount
TI,R,N
T^I,R,N
hasResponseFlags
T@"NLAWDHealthKitNotificationResponseFlags",&,N,V_responseFlags
GoalProgress
GoalCompletion
StandAlert
WeeklyGoal
StandActive
StandSuccess
Achievement
DeepBreathingWeekly
Allow
Ignore
walking
automotive
cycling
running
other
workout
heartRate
activeCalories
duration
unknown
hasWalking
TI,N,V_walking
hasAutomotive
TI,N,V_automotive
hasCycling
TI,N,V_cycling
hasRunning
TI,N,V_running
hasOther
TI,N,V_other
hasWorkout
TI,N,V_workout
hasHeartRate
TI,N,V_heartRate
hasActiveCalories
TI,N,V_activeCalories
TI,N,V_briskMinutes
hasDuration
TI,N,V_duration
hasUnknown
TI,N,V_unknown
activityType
durationMs
totalEnergyBurned
totalDistance
totalSteps
hasActivityType
Ti,N,V_activityType
hasDurationMs
Tq,N,V_durationMs
hasTotalEnergyBurned
Tq,N,V_totalEnergyBurned
hasTotalDistance
Tq,N,V_totalDistance
hasTotalSteps
Tq,N,V_totalSteps
AmericanFootball
Archery
AustralianFootball
Badminton
Baseball
Basketball
Bowling
Boxing
Climbing
Cricket
CrossTraining
Curling
Cycling
Dance
DanceInspiredTraining
Elliptical
EquestrianSports
Fencing
Fishing
FunctionalStrengthTraining
Golf
Gymnastics
Handball
Hiking
Hockey
Hunting
Lacrosse
MartialArts
MindAndBody
MixedMetabolicCardioTraining
PaddleSports
Play
PreparationAndRecovery
Racquetball
Rowing
Rugby
Running
Sailing
SkatingSports
SnowSports
Soccer
Softball
Squash
StairClimbing
SurfingSports
Swimming
TableTennis
Tennis
TrackAndField
TraditionalStrengthTraining
Volleyball
Walking
WaterFitness
WaterPolo
WaterSports
Wrestling
Yoga
Barre
CoreTraining
CrossCountrySkiing
DownhillSkiing
Flexibility
HighIntensityIntervalTraining
JumpRope
Kickboxing
Pilates
Snowboarding
Stairs
StepTraining
WheelchairWalk
WheelchairRun
HandCycling
TaiChi
Wheelchair
consecutiveStandingHoursGoalsMet
consecutiveBriskMinuteGoalsMet
currentCalorieGoalConsecutiveCompleteDays
consecutiveCompleteDays
hasConsecutiveStandingHoursGoalsMet
Tq,N,V_consecutiveStandingHoursGoalsMet
hasConsecutiveBriskMinuteGoalsMet
Tq,N,V_consecutiveBriskMinuteGoalsMet
hasCurrentCalorieGoalConsecutiveCompleteDays
Tq,N,V_currentCalorieGoalConsecutiveCompleteDays
hasConsecutiveCompleteDays
Tq,N,V_consecutiveCompleteDays
achievementType
completedDate
value
definitionIdentifier
workoutActivityType
hasAchievementType
Ti,N,V_achievementType
hasCompletedDate
Tq,N,V_completedDate
hasValue
Tq,N,V_value
hasDefinitionIdentifier
T@"NSString",&,N,V_definitionIdentifier
hasWorkoutActivityType
Ti,N,V_workoutActivityType
FirstSessionOfType
BestSessionCalories
SevenWorkoutsInWeek
OneTimeStepCountMilestone
StepCountMilestone
BestDailyCalories
BestDailyBriskMinutes
DailyGoalExceeded50
DailyGoalExceeded100
DailyGoalExceeded200
DailyGoalExceeded300
DailyGoalComplete
DailyGoalCompleteWeek
DailyGoalCompleteMonth
DailyGoalComplete10Weeks
DailyGoalLongestStreak
DailyGoalLifetimeMilestone
application
hasApplication
Ti,N,V_application
ActivityMonitorApp
HKAchievementTypeDailyGoalLifetimeMilestone_365
mockFirstGlanceTypeArgument
T@"NSString",&,N,V_mockFirstGlanceTypeArgument
mockProgressAchievementIdentifier
T@"NSString",&,N,V_mockProgressAchievementIdentifier
mockProgressAchievementMilestone
T@"NSString",&,N,V_mockProgressAchievementMilestone
mockYesterdayActivitySummaryMovePercentage
T@"NSNumber",&,N,V_mockYesterdayActivitySummaryMovePercentage
mockYesterdayActivitySummaryExercisePercentage
T@"NSNumber",&,N,V_mockYesterdayActivitySummaryExercisePercentage
mockYesterdayActivitySummaryStandPercentage
T@"NSNumber",&,N,V_mockYesterdayActivitySummaryStandPercentage
NLDailyGoalProgressManagerDidReschedule
ProgressUpdate
ProgressUpdateLastMovePercentage
ProgressUpdateLastMovePercentageDate
ProgressUpdateLastExercisePercentageKey
ProgressUpdateLastExercisePercentageDateKey
ProgressUpdateLastScheduledFireDate
%@-%@
NLNanoAchievementDefinitionAlertSuppressor
SuppressionTimerAfterWristOn
T@"<HDAchievementDefinitionAlertSuppressorDelegate>",W,N
T@"<HDAchievementDefinitionAlertSuppressorDelegate>",W,N,Vdelegate
NLAlertSuppressionReason
NLAlertSuppressionClientTimeout
NLAlertSuppressionClients
alertSuppressionQueue
alertSuppressionObserverQueue
backlightQueue
v8@?0@"_NLCoachingBacklightObserver"4
NLWristEventsManagerQueuedWristEventSamples
NLWristEventStartDate
NLWristEventEndDateKey
NLWristEventValueKey
com.apple.nanolifestyle.NLGizmoWristEventsManager
GizmoWristEventsManagerGizmoOffWristEvent
internalQueue
i12@?0@"HKCategorySample"4@"HKCategorySample"8
i12@?0@"NSDate"4@"NSDate"8
v12@?0B4@"NSError"8
Off-wrist
wristState
mostRecentOnWristDate
T@"NSDate",R
firstOnWristTodayDate
OFF wrist
ON wrist
wrist detection disabled
SedentaryTimerDataObjectsTransaction
SedentaryTimerStartTransaction
SedentaryTimerStopTransaction
com.apple.nanolifestyle.sedentaryTimer
B12@?0@"HDSQLiteDatabase"4^@8
T@"<NLSedentaryTimerAlertDelegate>",W,N,V_delegate
com.apple.nanolifestyle.fakestand
com.apple.locationd.sedentarytimer
hasMigrated
supportsSecureCoding
TB,R
from
mode
start_date
end_date
hasFrom
T@"NLAWDHealthKitRoutineLocation",&,N,V_from
hasTo
T@"NLAWDHealthKitRoutineLocation",&,N,V_to
hasMode
Ti,N,V_mode
Automotive
Pedestrian
batteryState
hasBatteryState
Ti,N,V_batteryState
Unplugged
Charging
Full
com.apple.nanolifestyle.monthlychallenge
%@_%lu_%02ld
hexagon
NLMonthlyChallengeOverrideType
NLMonthlyChallengeOverrideGoal
Monthly Challenge: Goal
Monthly Challenge: Type
MonthlyChallengeTypeAverageDailyEnergyBurn
MonthlyChallengeTypeAverageDailyExerciseMinutes
MonthlyChallengeTypeAllThreeRings
MonthlyChallengeTypeMoveRing
MonthlyChallengeTypeExerciseRing
MonthlyChallengeTypeStandRing
MonthlyChallengeTypeTotalWorkouts
MonthlyChallengeTypeDaysDoublingMoveGoal
internal
Couldn't create definition of monthly type %@
HKAchievementTypeDailyGoalCompleteMonth
received a Perfect Month Achievement during the previous month(%d)
HKAchievementTypeDailyGoalCompleteWeek_HKDailyGoalTypeMove
received a Perfect Month Achievement(%d), Perfect Week (Move) Achievement 3 times during the previous month(%d)
HKAchievementTypeDailyGoalCompleteWeek_HKDailyGoalTypeExercise
received a Perfect Week (Exercise) Achievement 3 or more times during the previous month(%d)
HKAchievementTypeDailyGoalCompleteWeek_HKDailyGoalTypeStand
received a Perfect Week (Stand) Achievement 3 or more times during the previous month(%d)
increased their Move goal 3 or more times during the previous month(%d)
required 30 min of exercise last month(%@)
required 1 total workout last month(%@)
required 1 days doubled move goal last month(%@)
required non-wheelchair user
Always available
Invalid type: %ld
MonthlyChallengeTypeTotalEnergyBurn
MonthlyChallengeTypeTotalExerciseMinutes
MonthlyChallengeTypeTotalDistance
Meet All Goals %@ Times
Meet Move Goal %@ Times
Meet Exercise Goal %@ Times
Meet Stand Goal %@ Times
Average %@ Active Calories Per Day During This Month
Average %@ Exercise Minutes Per Day During This Month
Burn %@ Calories During This Month
Earn %@ Exercise Minutes During This Month
Work Out %@ Times During This Month
Walk %@ Kilometers During This Month
Double Your Move Goal %@ Times During This Month
dataProvider
T@"<NLMonthlyChallengeEngineDataSource>",&,N,V_dataProvider
serialQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serialQueue
canCreateNewMonthlyChallenge
progressAchievementMilestoneOverride
progressAchievementIdentifierOverride
THREE_AWAY
ACHIEVEMENT_UNACHIEVED_PROGRESS_%@_DESC%@
ACHIEVEMENT_YESTERDAY_DESC%@
AHEAD
BEHIND
MATCH
ONE_AWAY
HALFWAY
QUARTER_IN
THREE_QUARTERS_IN
ACHIEVEMENT_ALERT_NEW_%@_DESC
BEAT
REPEAT
NO_DATA
v12@?0@"NSString"4@"NSString"8
@"NSString"12@?0@"NSNumber"4@"NSNumber"8
HKAchievementTypeDailyGoalLifetimeMilestone_1000
HKAchievementTypeDailyGoalLifetimeMilestone_500
HKAchievementTypeDailyGoalLifetimeMilestone_100
HKAchievementTypeDailyGoalLongestStreak
HKAchievementTypeDailyGoalCompleteWeek_HKDailyGoalTypeAll
HKAchievementType7WorkoutsInWeek
HKAchievementTypeBestDailyCalories
HKAchievementTypeBestDailyBriskMinutes
B12@?0@"_HKAchievement"4@"NSDictionary"8
i12@?0@"_HKAchievement"4@"_HKAchievement"8
i12@?0@"HKWorkout"4@"HKWorkout"8
dataSource
T@"<NLFirstGlanceEngineDataSource>",&,N,V_dataSource
T@"<NLCoachingSubmanagerDelegate>",W,N,V_coachingSubmanagerDelegate
HKAchievementTypeDailyGoalExceeded300
HKAchievementTypeDailyGoalExceeded200
HKAchievementTypeDailyGoalExceeded100
HKAchievementTypeBestSessionCalories
HKAchievementTypeFirstSessionOfType
HKAchievementTypeDailyGoalComplete
B16@?0@"NSString"4I8^B12
v12@?0@"CMOdometerData"4@"NSError"8
@"NSArray"12@?0@"NSArray"4@"CMOdometerData"8
i12@?0@"CMOdometerData"4@"CMOdometerData"8
poorTiming
alreadyDoing
hasPoorTiming
TB,N,V_poorTiming
hasAlreadyDoing
TB,N,V_alreadyDoing
isBusy
hasIsBusy
TB,N,V_isBusy
standHourTimestamp
didStand
hasStandHourTimestamp
Tq,N,V_standHourTimestamp
hasDidStand
TB,N,V_didStand
activeSeconds
eventTimestamp
height
weight
TI,N,V_energyBurned
hasActiveSeconds
TI,N,V_activeSeconds
TI,N,V_energyBurnedGoal
hasEventTimestamp
TQ,N,V_eventTimestamp
TI,N,V_biologicalSex
hasHeight
TI,N,V_height
hasWeight
TI,N,V_weight
hasAge
TI,N,V_age
HealthLite
EnableDemoMode
com.apple.DeepBreathing
DeepBreathingSessionServerTransaction
%@.%@
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
healthLiteQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_healthLiteQueue
client
T@"<NSXPCProxyCreating>",R,N,V_client
daemon
T@"<HDHealthDaemon>",R,N,V_daemon
T@"<HDDeepBreathingSessionServerDelegate>",R,W,N,V_delegate
sessionConfiguration
T@"_HKDeepBreathingSessionConfiguration",R,N,V_sessionConfiguration
serverState
Ti,N,V_serverState
sessionUUID
T@"NSUUID",R
v12@?0@"CMNatalieData"4@"NSError"8
eventType
recommendedGoal
newGoal
features
hasEventType
TI,N,V_eventType
TI,N,V_dismissReason
hasRecommendedGoal
TI,N,V_recommendedGoal
hasNewGoal
TI,N,V_newGoal
TQ,N,V_duration
hasFeatures
T@"NLAWDHealthKitCoachingFeatureGroup",&,N,V_features
typeIdentifier
inSession
minDelayUs
maxDelayUs
meanDelayUs
stdDelayUs
sampleCount
indexInSession
hasTypeIdentifier
Tq,N,V_typeIdentifier
hasInSession
TB,N,V_inSession
hasMinDelayUs
Tq,N,V_minDelayUs
hasMaxDelayUs
Tq,N,V_maxDelayUs
hasMeanDelayUs
Tq,N,V_meanDelayUs
hasStdDelayUs
Tq,N,V_stdDelayUs
hasSampleCount
Tq,N,V_sampleCount
hasIndexInSession
Tq,N,V_indexInSession
NLAchievementManagerQueue
The -%@ method is not available on %@
v8@?0@"NSArray"4
NLAchievementManagerV2RunAchievementDetective
B8@?0@"_HKAchievement"4
B8@?0@"HKActivitySummary"4
non-nil
com.apple.health.achievements
.didrun
%@.earned.%@.workout.%lu
%@.earned.%@
.value
.completioninterval
Last run: %@
Last seen activity summary index: %@
Today activity summary index: %@
AchievementTenMinutesAfterWristOn
NLAchievementManagerLastScheduledWristOnTaskDate
NLAchievementManagerScheduledAchievementDelay
i12@?0@"NLCoachingAlertRequest"4@"NLCoachingAlertRequest"8
achievementStore
T@"HDAchievementDataStoreV2",&,N,V_achievementStore
detective
T@"HDAchievementDetective",&,N,V_detective
dailyGoalDetectionDelegate
T@"<HDDailyActivityGoalDetectionDelegate>",W,N,V_dailyGoalDetectionDelegate
bridgeSettings
T@"NLBridgeSettings",&,N,V_bridgeSettings
todayActivitySummary
T@"HKActivitySummary",&,N,V_todayActivitySummary
yesterdayActivitySummary
T@"HKActivitySummary",&,N,V_yesterdayActivitySummary
lastRunDate
T@"NSDate",&,N,V_lastRunDate
 No scheduled coaching events
nanoHealthPlugin
T@"NLNanoHealthPlugin",W,N,V_nanoHealthPlugin
T@"<NLIngestionTrackerDelegate>",W,N,V_delegate
dataTypeCode
Ti,R,N,V_dataTypeCode
NLDataLogEnabled
DataLogs
v12@?0@"EKEvent"4^B8
v16@?0B4B8@"NSError"12
B24@?0@"HKQuantitySample"4@"HKDeletedObject"8q12^@20
EKEventStore
Unable to find class %s
/System/Library/Frameworks/EventKit.framework/EventKit
healthStore
T@"HKHealthStore",&,N,V_healthStore
T@"<NLMonthlyChallengeEngineDataSourceDelegate>",W,N,V_delegate
NLDeepBreathingWeeklySummary
com.apple.nanolifestyle.coaching.deepBreathingWeeklySummary
mostRecentDeepBreathingWeeklySummaryAlertDate
NLDeepBreathingWeeklySummaryShowEveryDay
NLDeepBreathingWeeklySummarySubmanagerPresentationDelay
NLForceShowDeepBreathingWeeklySummaryNotification
Ti,N,V_eventType
hasSessionUUID
T@"NSString",&,N,V_sessionUUID
NotStarted
Ended
minimumDayDuration
Td,N,V_minimumDayDuration
isScheduled
timeIntervalAfterOnWrist
Td,N,V_timeIntervalAfterOnWrist
percentOfDay
Td,N,V_percentOfDay
percentOfGoalCompleted
Td,N,V_percentOfGoalCompleted
mostRecentGoal
numTimesGoalAchieved
selectedGoal
hasMostRecentGoal
Tq,N,V_mostRecentGoal
hasNumTimesGoalAchieved
Tq,N,V_numTimesGoalAchieved
hasSelectedGoal
Tq,N,V_selectedGoal
NLCoachingAlertRequestCoalescer
NLCoachingProgressMorningUpdateEvent
NLCoachingProgressEvent
NSObject
NLCoachingAlertNotifier
NLActivitySedentaryAlertObserver
NLActivityCoachingAlertObserver
NLActivityAchievementDefinitionAlertObserver
NLActivityCarouselServiceProvider
NLCoachingProgressAlmostThereEvent
NLDeepBreathingCoachingSubmanager
NLBridgeSettingsObserver
NLCoachingSubmanager
NLWeeklyGoalRecommendationEngine
NLMockKeyValueDomain
NLCoachingManager
NLWristStateObserver
HDHealthDaemonReadyObserver
HDDatabaseProtectedDataObserver
HDCurrentActivitySummaryHelperObserver
HDNanoAlertSuppressionObserver
FITypicalDayActivityModelDelegate
NLMonthlyChallengeEngineDataSourceDelegate
NLCoachingSubmanagerDelegate
NLAWDHealthKitWristEvent
NSCopying
NLDailyGoalCompletionManager
HDDailyActivityGoalDetectionDelegate
NLActionConditionMonitor
_NLActionConditionMonitorObserver
NLBridgeSettings
NLNanoAchievementDefinitionAlertNotifier
HDAchievementDefinitionAlertNotifier
NLLogCodableLogMessage
NLAWDHealthKitActivityCache
NLCoachingPreferences
NLAWDHealthKitRoutineLocation
NLAWDHealthKitExperimentalCondition
NLFirstGlanceManager
NLCoachingProgressEveningUpdateEvent
NLAWDHealthKitExperimentalConditionEvent
NLHIDHandler
NLAWDHealthKitNotificationView
NLAWDHealthKitUserCharacteristics
NLAWDHealthKitCoachingFeatureGroup
NLHealthLiteDataCollector
HDDiagnosticObject
HDDataCollector
HDHeartRateDataCollector
NLAWDHealthKitDatabaseLastWeekUsageEvent
NLAWDHealthKitWristOnSettings
NanoHealth
NLSedentaryTimerStateEngine
NLDataLog
NLMockBridgeSettings
NLFirstGlanceEngineDataSource
NLSwimmingDataCollector
_NLSwimmingDistanceDataCollector
_NLSwimmingStrokesDataCollector
NLAWDHealthKitRoutineLocationVisitEvent
NLAWDHealthKitNotificationEvent
NLWorkoutAutopauseManager
NLHIDHandlerObserver
NLAWDHealthKitCoachingFeatures
NLAWDHealthKitWorkout
NLAWDHealthKitAchievementStatistics
NLAWDHealthKitAchievement
NLAWDHealthKitApplicationLaunchEvent
NLAWDHealthKitActivityCacheEvent
NLFirstGlanceEngineMock
NLDailyGoalProgressManager
NLCoachingProgressEventEvaluationDelegate
NLFakeRTRoutineManager
NLNanoAchievementDefinitionAlertSuppressor
HDAchievementDefinitionAlertSuppressor
_NLCoachingBacklightObserver
CSLSBacklightObserver
NLAlertSuppressionManager
HDNanoAlertSuppressionService
UnitTesting
NLGizmoWristEventsManager
HDDataObserver
Internal
NLSedentaryTimer
NLSedentaryTimerStateEngineDelegate
NLAppleExerciseTimeDataCollector
NLAppleExerciseTimeDataCollectorExtensions
HDSensorDatum
NSSecureCoding
NSCoding
NLAWDHealthKitRoutineTransitionEvent
NLAWDHealthKitBatteryStateEvent
NLMonthlyChallengeEngine
NLFirstGlanceEngine
NLOdometerDataCollector
_NLDistanceCyclingDataCollector
_NLDistanceWheelchairDataCollector
NLOdometerDataCollectorExtensions
NLAWDHealthKitNotificationResponseFlags
NLAWDHealthKitConcurrentCalendarItem
NLAWDHealthKitStandHourEvent
NLAWDHealthKitActivityRingEvent
NLDeepBreathingSessionServer
_HKDeepBreathingSessionServer
HDDeepBreathingSessionServer
NLCalorimetryDataCollector
_NLActiveEnergyDataCollector
_NLBasalEnergyDataCollector
NLCalorimetryDataCollectorExtensions
NLAWDHealthKitCoachingEvent
NLAWDHealthKitIngestionLatencyEvent
NLAchievementManager
NLAchievementManagerV2
NLNanoHealthServer
NLNanoHealthServerInterface
HKExtendedServerInterface
NLActivityAlertResponder
NLIngestionTracker
NLDataLogger
HDWorkoutEventObserver
NLIngestionTrackerDelegate
NLMonthlyChallengeEngineDataSource
NLDeepBreathingWeeklySummarySubmanager
NLAWDHealthKitWorkoutSessionEvent
NLCoachingProgressReason
NLCoachingProgressOnWristReason
NLCoachingProgressDayProgressReason
NLCoachingProgressGoalProgressReason
NLCoachingProgressEventEvaluator
Evaluation
NLAWDHealthKitWeeklySummaryDetail
@12@0:4@8
@8@0:4
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
B16@0:4@8@12
v12@0:4I8
B16@0:4@"FITypicalDayActivityModel"8@"<NLCoachingProgressEventEvaluationDelegate>"12
@"NLCoachingProgressReason"8@0:4
@"NSDictionary"12@0:4@"FITypicalDayActivityModel"8
v28@0:4i8@12i16i20@24
v8@0:4
v28@0:4i8@"NSDate"12i16i20@"NLExperimentInstance"24
v12@0:4@8
v12@0:4@"NSArray"8
v12@0:4@"NSString"8
v12@0:4@?8
v12@0:4@?<v@?BB@"NSError">8
v16@0:4@8I12
@"NSMutableSet<NLActivitySedentaryAlertObserver>"
@"NSMutableSet<NLActivityCoachingAlertObserver>"
@"NSMutableSet<NLActivityAchievementDefinitionAlertObserver>"
@"NSMutableSet<NLActivityCarouselServiceProvider>"
@"NSObject<OS_dispatch_queue>"
@12@0:4I8
v12@0:4@"NLBridgeSettings"8
v12@0:4B8
v16@0:4@8@12
i8@0:4
@"NSArray"12@0:4I8
@"NSArray"12@0:4@"NSArray"8
v16@0:4@"NSArray"8@"NSArray"12
v12@0:4@"NLCoachingAlertResponse"8
@"<NLCoachingSubmanagerDelegate>"8@0:4
v12@0:4@"<NLCoachingSubmanagerDelegate>"8
@"FITypicalDayActivityModel"8@0:4
v12@0:4@"FITypicalDayActivityModel"8
@16@0:4@8@12
d8@0:4
@"<HDHealthDaemon>"
@"NLBridgeSettings"
@"RTRoutineManager"
@"NLActivityAlarmMonitor"
@"<NLCoachingSubmanagerDelegate>"
@"FITypicalDayActivityModel"
d20@0:4@8@12^@16
d16@0:4@8i12
I12@0:4@8
I20@0:4d8@16
d12@0:4@8
i12@0:4@8
I16@0:4@8I12
@20@0:4i8@12@16
B20@0:4@8@12^@16
@16@0:4@8^@12
B24@0:4@8@12@16^@20
@20@0:4@8@12^@16
B16@0:4@8^@12
@12@0:4^@8
@"NSMutableDictionary"
q12@0:4@8
v12@0:4@"<HDHealthDaemon>"8
v16@0:4@8B12
v16@0:4@"<HDHealthDatabase>"8B12
v20@0:4@8@12I16
v20@0:4@"HDCurrentActivitySummaryHelper"8@"HKActivitySummary"12I16
v16@0:4@8i12
v16@0:4@"NSString"8i12
@"NSDate"8@0:4
@"NSCalendar"8@0:4
@"NSArray"16@0:4@"NSDateComponents"8@"NSDateComponents"12
v12@0:4@?<v@?B>8
v20@0:4@8@12@16
v12@0:4@"<NLCoachingSubmanager>"8
v20@0:4@"<NLCoachingSubmanager>"8@"NSString"12@"NSDate"16
B16@0:4@"<NLCoachingSubmanager>"8@"NSString"12
v16@0:4@"<NLCoachingSubmanager>"8@"NSString"12
@"NSDate"12@0:4@"<NLCoachingSubmanager>"8
@"NLCoachingPreferences"8@0:4
@"HKActivitySummary"8@0:4
@44@0:4@8@12@16@20@24@28@32@36@40
v16@0:4@8@?12
B16@0:4q8
d12@0:4I8
v16@0:4I8@?12
i12@0:4I8
v16@0:4@?8B12
@16@0:4I8B12
@"HDProfile"
@"NLCoachingAlertNotifier"
@"HDBackgroundTaskScheduler"
@"HDAchievementDataStoreV2"
@"HDCurrentActivitySummaryHelper"
@"NLGizmoWristEventsManager"
@"NLDataLogger"
@"NLCoachingPreferences"
@"CMPedometer"
@"NSMutableSet"
@"NSDictionary"
@"HKActivitySummary"
@"NSCalendar"
@"NSDate"
@"NSNumber"
@"NLMonthlyChallengeEngine"
@12@0:4^{_NSZone=}8
v16@0:4Q8
Q8@0:4
{?="timestamp"b1"onWrist"b1}
v56@0:4I8q12d20d28d36B44@?48@?52
v20@0:4B8q12
v56@0:4I8q12d20d28d36B44@?<B@?dd>48@?<v@?BB>52
v16@0:4q8
@16@0:4q8
v20@0:4I8q12
B20@0:4I8q12
I16@0:4q8
@16@0:4i8@12
@20@0:4@8B12B16
@20@0:4i8@12@?16
v20@0:4@8B12B16
@"NLFakeRTRoutineManager"
@16@0:4@8@?12
@?8@0:4
@"RTAction"
B12@0:4r*8
@20@0:4@8@12@16
@"NSHashTable"
@"NSData"
{?="awdMetricId"b1}
q8@0:4
{?="activeHours"b1"briskMinutes"b1"cacheIndex"b1"endDate"b1"energyBurned"b1"energyBurnedGoal"b1"energyBurnedGoalDate"b1"startDate"b1"stepCount"b1"walkingAndRunningDistance"b1}
@"HDKeyValueDomain"
v12@0:4i8
@12@0:4i8
@"NSString"
{?="confidenceMillis"b1"recentVisitCount"b1"uncertaintyMillis"b1"locationType"b1}
{?="testCondition"b1}
@"FIActivitySettingsController"
@"NLAWDHealthKitExperimentalCondition"
{?="timestamp"b1}
v16@0:4d8
v16@0:4^{__IOHIDServiceClient=}8^v12
v16@0:4^{__IOHIDEvent=}8^v12
B12@0:4^B8
^{__IOHIDEventSystemClient=}
^{__IOHIDServiceClient=}
{?="dwelltimeMs"b1"endDate"b1"startDate"b1"dismissReason"b1"scrollBehavior"b1}
{?="ageYears"b1"biologicalSex"b1"heightCm"b1"weightKg"b1}
@"NSMutableArray"
v16@0:4@"HDDataAggregator"8@"HDDataCollectorSensorDatum"12
v16@0:4@"HDDataAggregator"8@"HDDataCollectorConfiguration"12
@"HKDevice"12@0:4@"HDDataAggregator"8
@"HKSource"12@0:4@"HDDataAggregator"8
@"NSString"12@0:4@"HDDataAggregator"8
v24@0:4@8@12@16@20
v24@0:4@"<HDDataCollector>"8@"HDHeartRateSensorDatum"12@"HKDevice"16@"HKSource"20
@"HDHeartRateDataAggregator"
@"HDDataCollectorConfiguration"
@"HDDataCollectorState"
@"CMCatherineFeeder"
@"HDDeviceEntity"
{?="databaseSizeMB"b1"highFrequencyDataSizeMB"b1"lastMonthDatabaseSizeIncreaseMB"b1"lastMonthRowsAdded"b1"manuallyEnteredTypesCount"b1"percentageDeletedObjects"b1"rowCountObjects"b1"thirdPartyAppsCount"b1"thirdPartyAppsWroteDataCount"b1"timestamp"b1"rowCountCDA"b1"hasWatchSource"b1}
@"NLAWDHealthKitAchievementStatistics"
@"NLAWDHealthKitConcurrentCalendarItem"
@"NLAWDHealthKitUserCharacteristics"
{?="daysSinceFirstCalorieGoal"b1"eventBusyTime"b1"numberOfEvents"b1"progressUpdateFrequency"b1"timeZoneOffset"b1"timestamp"b1"enableAchievements"b1"enableGoalCompletions"b1"enableStandReminders"b1"enableWeeklySummary"b1"wellnessComplicationOnWatchFace"b1}
@"<NLSedentaryTimerStateEngineDelegate>"
B20@0:4@8@?12^@16
B28@0:4^v8L12L16@?20^@24
B32@0:4@8@12^v16L20@?24^@28
B36@0:4I8@12^v16L20L24@?28^@32
B20@0:4@8L12^@16
@"NSLock"
@"NSFileHandle"
@"_HKAchievementDefinition"12@0:4@"NSString"8
@"_HKAchievement"12@0:4@"NSString"8
@"NSNumber"12@0:4@"NSExpression"8
@"NSDictionary"12@0:4@"NSDate"8
@"NSArray"12@0:4@"NSDateInterval"8
d12@0:4@"NSDate"8
@"NSArray"16@0:4@"NSDateInterval"8@"NSCalendar"12
v20@0:4@8@12@?16
@24@0:4@8@12@16@20
@"CMSwimTracker"
@"NLAWDHealthKitRoutineLocation"
{?="arrivalDate"b1"timestamp"b1}
^I8@0:4
I12@0:4I8
v16@0:4^I8I12
{?="list"^I"count"I"size"I}
@"NLAWDHealthKitAchievement"
@"NLAWDHealthKitActivityCache"
@"NLAWDHealthKitNotificationResponseFlags"
@"NLAWDHealthKitWeeklySummaryDetail"
{?="endDate"b1"startDate"b1"timestamp"b1"alertType"b1"testAction"b1"dndEnabled"b1"failedPosting"b1}
v16@0:4@"NLHIDHandler"8B12
@"NLHIDHandler"
{?="activeCalories"b1"automotive"b1"briskMinutes"b1"cycling"b1"duration"b1"heartRate"b1"other"b1"running"b1"unknown"b1"walking"b1"workout"b1}
{?="durationMs"b1"endDate"b1"startDate"b1"timestamp"b1"totalDistance"b1"totalEnergyBurned"b1"totalSteps"b1"activityType"b1}
{?="consecutiveBriskMinuteGoalsMet"b1"consecutiveCompleteDays"b1"consecutiveStandingHoursGoalsMet"b1"currentCalorieGoalConsecutiveCompleteDays"b1}
{?="completedDate"b1"value"b1"achievementType"b1"workoutActivityType"b1}
{?="timestamp"b1"application"b1}
@12@0:4B8
@"NSDate"12@0:4@"NSString"8
@"NSArray"
@"<HDAchievementDefinitionAlertSuppressorDelegate>"8@0:4
v12@0:4@"<HDAchievementDefinitionAlertSuppressorDelegate>"8
@"<HDAchievementDefinitionAlertSuppressorDelegate>"
@12@0:4@?8
v20@0:4@8i12i16
v20@0:4@"NSString"8i12i16
v16@0:4@"NSString"8I12
v20@0:4@8i12@16
v16@0:4i8@?12
v12@0:4@"<HDNanoAlertSuppressionObserver>"8
v20@0:4@"NSString"8i12@"NSDate"16
v16@0:4i8@?<v@?B>12
@"NSObject<OS_dispatch_source>"
@24@0:4@8i12@16@20
v16@0:4@"NSArray"8@"NSNumber"12
v16@0:4@"NSArray"8@"HKSampleType"12
v16@0:4I8@12
v16@0:4I8B12
@"CSLSOnWristMonitor"
B16@0:4i8@12
v16@0:4i8@12
v20@0:4i8@12B16
v20@0:4i8@12@16
@"CMSedentaryTimer"
@"NLSedentaryTimerStateEngine"
@"NLExperimentalCondition"
@"NLExperimentInstance"
@"<NLSedentaryTimerAlertDelegate>"
@"CMExerciseMinute"
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@"NSUUID"8@0:4
{?="endDate"b1"startDate"b1"timestamp"b1"mode"b1}
{?="timestamp"b1"batteryState"b1}
I16@0:4@8@12
B12@0:4I8
@"<NLMonthlyChallengeEngineDataSource>"
v20@0:4@8@?12@?16
@"<NLFirstGlanceEngineDataSource>"
@"CMOdometer"
@"HDLiveDataCollectorBuffer"
{?="alreadyDoing"b1"poorTiming"b1}
{?="endDate"b1"startDate"b1"isBusy"b1}
{?="standHourTimestamp"b1"timestamp"b1"didStand"b1}
{?="eventTimestamp"b1"timestamp"b1"activeSeconds"b1"age"b1"biologicalSex"b1"briskMinutes"b1"energyBurned"b1"energyBurnedGoal"b1"height"b1"weight"b1}
v16@0:4@"NSDate"8@?<v@?B@"NSError">12
@"<NSXPCProxyCreating>"
@"<HDDeepBreathingSessionServerDelegate>"
@"_HKDeepBreathingSessionConfiguration"
@"CMNatalimeter"
@"NLAWDHealthKitCoachingFeatureGroup"
{?="duration"b1"eventTimestamp"b1"timestamp"b1"dismissReason"b1"eventType"b1"newGoal"b1"recommendedGoal"b1}
{?="endDate"b1"indexInSession"b1"maxDelayUs"b1"meanDelayUs"b1"minDelayUs"b1"sampleCount"b1"startDate"b1"stdDelayUs"b1"timestamp"b1"typeIdentifier"b1"inSession"b1}
v20@0:4d8@?16
@"HKQuantity"
@"HDAchievementDetective"
@"<HDDailyActivityGoalDetectionDelegate>"
v32@0:4i8i12@16@20@24@?28
v16@0:4B8@?12
v20@0:4B8B12@?16
v12@0:4@?<v@?i@"NSError">8
v20@0:4@"NSDate"8@"NSDate"12@?<v@?@"NSArray"@"NSError">16
v16@0:4@"NSArray"8@?<v@?B@"NSError">12
v16@0:4@"_HKAchievement"8@?<v@?@"_HKAchievement"@"NSError">12
v16@0:4@"NSArray"8@?<v@?@"NSArray"@"NSError">12
v12@0:4@?<v@?B@"NSError">8
v12@0:4@?<v@?@"NSArray"@"NSError">8
v16@0:4@"NSString"8@?<v@?B@"NSError">12
v12@0:4@?<v@?@"NSURL"@"NSError">8
v16@0:4@"NSURL"8@?<v@?B@"NSError">12
v32@0:4i8i12@"NSString"16@"NSString"20@"NSString"24@?<v@?B@"NSError">28
v16@0:4@"NSString"8@?<v@?@"_HKAchievement"@"NSError">12
v16@0:4@"_HKAchievement"8@?<v@?B@"NSError">12
v16@0:4B8@?<v@?@"NSArray"B@"NSError">12
v12@0:4@?<v@?@"NSArray"B@"NSError">8
v20@0:4@"NSDate"8@"NSTimeZone"12@?<v@?B@"NSError">16
v16@0:4@"NSUUID"8@?<v@?B@"NSError">12
v12@0:4@?<v@?@"NSDate"@"NSError">8
v20@0:4B8B12@?<v@?B@"NSError">16
v16@0:4@"NSString"8@?<v@?@"NSNumber"@"NSError">12
v16@0:4@"NLCoachingAlertResponse"8@?<v@?B@"NSError">12
v24@0:4@8B12B16@?20
v24@0:4@"NSArray"8B12B16@?<v@?B@"NSError">20
v12@0:4@?<v@?@"NSString"@"NSError">8
v20@0:4@"NSString"8@"NSNumber"12@?<v@?B@"NSError">16
@"NLNanoHealthPlugin"
v24@0:4@8d12B20
@"<NLIngestionTrackerDelegate>"
i12@0:4i8
v16@0:4@"HDWorkoutManager"8@"_HKWorkoutEvent"12
v16@0:4@"NLIngestionTracker"8@"NLAWDHealthKitIngestionLatencyEvent"12
v28@0:4@8@12@16d20
v16@0:4B8@12
v16@0:4@8L12
@"EKEventStore"
@"NLDataLog"
@"AWDServerConnection"
v16@0:4@"_HKAchievementDefinition"8@?<v@?B@"NSError">12
@12@0:4@"NSExpression"8
@"NSArray"16@0:4@"NSDateInterval"8@"NSString"12
B12@0:4@"NSString"8
v12@0:4@?<v@?>8
@"<NLMonthlyChallengeEngineDataSourceDelegate>"
@"HKHealthStore"
{?="timestamp"b1"activityType"b1"eventType"b1}
@28@0:4@8B12B16@20@24
B20@0:4@8@12@16
B20@0:4@8@12I16
{?="mostRecentGoal"b1"numTimesGoalAchieved"b1"selectedGoal"b1}
?333333
?333333
?@(#)PROGRAM:NanoHealthDaemon  PROJECT:NanoLifestyle-1
Morning update can't use move or exercise to determine relative progress!
Today was significantly better than normal; showing morning update
Today was significantly worse than normal; showing morning update
Morning update trigger determined from: canUseMoveForPrediction=%{BOOL}d, canUseExerciseForPrediction=%{BOOL}d, percentageOfTypicalMove=%f, percentageOfTypicalExercise=%f, moveRingClosedToday=%{BOOL}d, exerciseRingClosedToday=%{BOOL}d
%@ in %@ with alertType: %ld and timeout: %@
Enough already, it's been less than %f seconds since the last Almost There update; not firing another almost there update.
AlmostThere reason evaluating whether to fire for goal type %zd,  willEndDayWithGoalIncomplete: %{BOOL}d, couldEarnAchievement: %{BOOL}d, result: %{BOOL}d
First on-wrist: %{public}@
%{public}@ has never been on wrist.
Processing intervals for action conditions
Possible scheduling interval: %@
Timeout waiting for available time intervals from CoreRoutine
Error when fetching available time intervals: %{public}@
%{public}@ frequency is set to 0. Returning early.
%{public}@ first on wrist is nil. Returning early.
frequency is %zd, interval is %f, base date is %{public}@, now is %{public}@, target date is %{public}@, free time interval (%{public}@ -> %{public}@ -> %{public}@), fire date is %{public}@
_setScheduledAlertDate %{public}@
Poll requested for deep breathing reminder: %zd
Creating deep breathing reminder request
%{public}@ scheduled fire date %{public}@ was from a different day than today. Not showing deep breathing reminder.
%{public}@ actual fire date %{public}@ is before the scheduled fire date of (%{public}@). Not showing deep breathing reminder.
Starting Activity alarm to wait for sedentary period
Breathe reminder firing after delay %.1f seconds (%{public}@) %{public}@
Requesting an immediate Breathe reminder
Already waiting for a NLActivityAlarmMonitor to fire, we only want one at at time.
Deep breathing not enabled
Error fetching activity caches for the past 4 weeks: %@
Current date/time was overridden to: %@
Response %@ received for fake sedentary timer submanager
Response %{public}@ received for missing submanager %{public}@
Response received: %@
Coaching submanager %@ added forced requests %@
Submanager %@ requested poll
Submanager %@ added scheduled task with identifier %@ at %@
Submanager %@ canceled scheduled task with identifier %@
Wrist state changed to on wrist
Watch went %{public}@ wrist, notifying submanagers
Submitting activity summary index %ld
Not submitting activity summary index %ld - already submitted
Protected data is now available, and we tried to run earlier. Running now.
Watch on wrist, and we tried to run earlier. Running now.
aggd: activity setup <- %ld
Error fetching activity summary: %{public}@
No activity summary found for yesterday and error was nil
aggd: rings completed <- %ld
Activity summary is now loaded, performing poll if it's set
Yesterday summary changed, rebuilding typical day model (changed fields = %zd
Poll was requested for reason %ld
Polling reasons are %@, pollingDelay=%.1lf
Will perform poll after move goal check
Performing poll; move goal is %{public}@set and %{public}@loaded
Needs to poll for scheduled date %@
Persisted future scheduled run date for %@, scheduled dates are now %@
Removed future scheduled run date for task %@, scheduled dates are now %@
Cleared future scheduled run dates, scheduled dates are now %@
Skipping poll, no polling reasons
Skipping poll, not on wrist
Skipping poll, activity alerts are suppressed due to a workout in progress
Coaching manager performing 3-step handshake for reasons %@
Coaching manager tried to do a scheduled run, but protected data wasn't available. Holding off until unlock.
Poll finished for scheduled run
Poll finished successfully
Poll finished unsuccessfully
Recent active days: %ld
Alerts are not enabled for coaching submanager %{public}@
Move goal is required but not present for %{public}@
Number of active days %ld doesn't meet minimum requirement of %ld for %{public}@
Asking for alert requests for coaching submanager %{public}@
Coaching submanager %{public}@ added requests %{public}@
Significant time change occurred
Skipping start of day tasks, last date tasks were run is %{public}@ and current date is %{public}@
Running start of day tasks, last date tasks were run is %{public}@ and current date is %{public}@
Skipping start of day tasks, protected data is not available, should try again at unlock or on-wrist
Error fetching activity summaries: %{public}@
Resetting daily goal types met for cacheIndex %lld and removing any goal types we might have tried to fire.
Goal type %ld was previously met for cacheIndex: %lld
Adding goal type to be notified: %ld
Goal type %@ for cacheIndex %lld went from %f to %f; goal is %f
Goal type %@ today value updated
Attempted to add goal type %{public}@ that was already added for cacheIndex: %lld; existing set is %@
Goal type %{public}@ was just met
Concluded daily goal completion detection run unsuccessfully for cacheIndex: %lld
Requesting poll for %ld completed goal types
_goalTypesToFireByCacheIndex not empty: %{public}@, cacheIndex: %lld, goalTypesToFireForToday: %{public}@
Evaluating goal types for alerts because goalTypesToFireForToday not empty: %{public}@
All goals were met today, displaying all goals.
Goal types to display are %{public}@
Alert request was processed: %@, goal types alerted: %{public}@, goal types to be alerted: %{public}@
After removing types from processed alert, final goal types to be alerted are (cacheIndex: %lld): %{public}@
Started monitoring conditions %ld (RT conditions %ld) for token %{public}@ in date interval %{public}@
Stopped monitoring RT conditions %ld for token %{public}@
Started faking RT conditions %ld
Stopped faking action
Error when stopping monitoring actions: %{public}@
Real routine manager called us with %ld action conditions and %{public}@
Real routine manager called us while we were faking with %ld action conditions
Fake routine manager called us with %ld action conditions and %{public}@
Fake routine manager called us while we were not faking with %ld action conditions
Bridge settings changed notification received from launchd
Bridge privacy settings changed notification received from launchd
Received achievement definitons to notify for alert: %@
Sending definiton alert notifier: %@
Error when trying to read data from key value domain for key %@. Error: %@.
Error when trying to save data to key value domain: %{public}@. %@:%@
Saving coaching event, category sample = %@.
Could not save coaching event to HealthKit database: %@
Updating first wrist-on date today to %@
Adding wrist-on coaching event
Error registering for %s: %d
Protected data became available, scheduling summary if needed
Added to First Glance alert userInfo 
 key: %@, value: %@
Protected data unavailable, holding off on showing the weekly summary until unlock
Invalid First Glance Type for today %d
First Glance engine determined %zd for the type today.
No data to make an informative First Glance alert.
healthd has launched and protected data is available, scheduling summary if needed.
healthd has launched, but protected data isn't available yet. Holding off scheduling summary if needed.
%{public}@ not showing alert because poll reason is not valid for first glance: %zd
Marking daily first glance as last alerted at %@
Let's get this day started! - hasFirstGlanceBeenShownToday: %ld, energyBurnGoalExistsBeforeToday: %ld, hasBeenOnWristToday: %ld
Current date is %@, wrist on date is %@, showFirstGlance = %ld
Scheduled task already exists for weekly summary.
Error when trying to read data from key value domain. Error: %@.
Error when trying to save data to key value domain: %{public}@. mostRecentFirstGlanceAlertDate:%@
Less than %f seconds since the last Almost There update; not showing evening update
Could extend move streak, but seems unlikely at this point; showing evening update
Could break Move record and likely to complete Move goal; showing evening update
Unlikely to complete a goal today; showing evening update
[HID] Notifying observers of wrist event %@
Requested forceWristDetect, but valid event was returned so we're not starting detection.
aggregator %{public}@ wants collection with configuration: %{public}@
feeding %.0f to catherine
heart rate collection transitioning from %{public}@ to %{public}@
heart rate collection is disabled due to privacy
power saving mode preference may have changed, updating data collection type
heart rate privacy setting changed to %s
PowerLog %@: %@
[SEDT] %@ for state: %ld returns: %ld
[NLLog] *** Error creating log directory %@: %@
[NLLog] *** Added %lu of %lu entries, error: %@
[NLLog] Creating new log file %@
[NLLog] Error setting F_NOCACHE on file at %@: %s
[NLLog] *** Failed to set up log file, deleting %@, error: %@
[NLLog] *** Failed to delete log file %@, error: %@
[Log] *** Encountered log index %ld. Dropping entry
[Log] Processed file size %lluK.
[NLDL] Processed file size %luK.
*** Log file could not be mapped: %d
*** Unexpected log version %u at path %@
[NLDL] Map load time: %0.2f
[NLDL] *** Map load time: %0.2f, error: %@
[NLDL] Load time: %0.2f
[NLDL] *** Load time: %0.2f, error: %@
Failed to construct weekly summary info for date %{public}@ with error %{public}@
Failed to fetch achievements for date interval %{public}@ with error %{public}@
Failed to fetch workouts for date interval %{public}@ with error %{public}@
Failed create sources predicate for workouts with error %{public}@
Error when fetching weekly summary and recommended goal, will try again when protected data becomes available again
Failed to fetch activity summaries for date interval %{public}@ with error %{public}@
Registering for swimming data updates
[AUTO] Pausing active workouts
[AUTO] Encountered wrist on event, resetting _consecutiveOffWristEvents from %ld
[AUTO] %@: Incrementing off wrist event count from %ld
Overriding First Glance progress achievement identifier from mock configuration to '%@'
Overriding First Glance progress achievement identifier from user defaults to '%@'
Overriding First Glance progress achievement milestone to '%@'
Scheduled date %{public}@ for progress event %{public}@
Ran detection for updated activity data and a progress event wanted to fire
Ran detection for updated activity data and no progress events wanted to fire
Failed to fetch date for key %{public}@: %{public}@
Failed to fetch number for key %{public}@: %{public}@
Failed to set date for key %{public}@: %{public}@
Failed to set number for key %{public}@: %{public}@
Scheduled fire date %@ was from a different day than today. Not showing progress update.
Actual fire date %@ is sooner than the scheduled fire date of (%@). Not showing progress update.
Progress update alert %{public}@ was shown on %{public}@
Decided not to reschedule for changed keys %@
Achievement alert suppression task fired
Watch went on wrist, rescheduling achievement definition alert if needed
Watch wrist state detection disabled, rescheduling achievement definition alert if needed
A move goal has been set; notifying definition alert suppression observers that we're no longer suppressed
Scheduled achievement alert suppression task for %f
Went to reschedule achievement alert suppression task, but nobody wanted to alert
%@ in %@
%@ does not have a completion block passed in.
In %@. Current date %@ is later than alert suppression timeout date %@ for reason: %@. Why does the timeout date still exist?
Alert suppression state for %@ = %ld
Workout ended for client %@
maxTimeoutDate = %@
[WRIST] Wrist detection state changed notification received
[WRIST] Notifying of state %{public}@ to new observer %{public}@
[WRIST] Firing a fake wrist state notification at daemon ready
Error persisting wrist state change: %{public}@
[WRIST] Persisting %zd samples to defaults %{public}@
[WRIST] Persisting %zd queued samples to database: %{public}@
[WRIST] No queued samples to persist to database
[WRIST] Fetched %zd on-wrist dates from database: %{public}@
[WRIST] Fetched %zd on-wrist dates from defaults (queue): %{public}@
[WRIST] Cached first on-wrist date is now %{public}@
[WRIST] Cached most recent on-wrist date is now %{public}@
[WRIST] Not updating caches because we got zero dates.
[WRIST] Error fetching first on-wrist date today: %{public}@
[WRIST] Got wrist event samples from database: %{public}@
[WRIST] No wrist samples exist for today, but watch is still on wrist. Using midnight of today (%{public}@) as an on-wrist date
[WRIST] Wrist debounce timer fired; checked current wrist state and found %{public}@
[WRIST] Error %{public}@ requesting wrist detection disabled status from Carousel
[WRIST] Gave up trying to wrist detection disabled status from Carousel, assuming NO
[WRIST] Wrist detection state is ENABLED
[WRIST] Wrist detection state is DISABLED or UNKNOWN.
[WRIST] Wrist state fetched from monitor is %{public}@
[WRIST] Debounce timer is already running with end date %{public}@.
[WRIST] Scheduling debounce timer for %{public}@
[WRIST] Ignoring duplicate state %{public}@
[WRIST] Sending state %{public}@ to registered observers.
[SEDT] init sedentaryTimer.
[SEDT] fake stand notification triggered
[SEDT] Failed to register for fake stand trigger notifications
[SEDT] %@ initial state is %ld
[SEDT] sedentaryTimer CoreMotion FiredNotification from launchd
[SEDT] device just PAIRED.
[SEDT] device just UNPAIRED
%@: %ld. isFitnessTrackingON: %ld, isDevicePaired: %ld, isOnWrist: %ld
[SEDT] %@
[SEDT] Method: %@ in class: %@
[SEDT] Successfully stopped sedentarytimer.
[SEDT] Timer seems to have already been stopped.
[SEDT] Error stopping sedentaryTimer: %ld, timer state: %ld
[SEDT] sedentaryTimer NOT isActive. so startTimer.
[SEDT] sedentaryTimer IS isActive. so register.
[SEDT] parameters passed into sedentaryTimer start method:- startDate %@, periodInterval %f, reminderInterval %f, autoReschedule %d
[SEDT] Successfully started sedentaryTimer.
[SEDT] Timer seems to have already been started.
[SEDT] Error starting sedentaryTimer: %ld, timer state: %ld
[SEDT] sedentaryTimer: %@ in class: %@
[SEDT] sedentaryTimer handler called with data.
[SEDT] sedentaryTimer Reminder object received. %@
[SEDT] sedentaryTimer didWake reminder object received.
[SEDT] sedentaryTimer skipping reminder because muting while in-vehicle is enabled.
[SEDT] sedentaryTimer firing reminder for start date %@.
[SEDT] sedentaryTimer Active Reminder object received. %@
[SEDT] sedentaryTimer Final object received. %@
[SEDT] sedentaryTimer Reset object received. %@
[SEDT] sedentaryTimer MAX object received. %@
[SEDT] lastremindeddate is %@, lastmoveddate is %@, startdate is %@
[SEDT] method: %@. RemindedThisHour: %ld, MovedThisHour: %ld, ShouldFire: %ld
[SEDT] method: %@ not firing alert as the reminder is not for this hour.
[SEDT] method: %@, %ld, %ld, ShouldFire: %ld
[SEDT] already fired reminder/reset this hour, don't fire reminder alert
[SEDT] gizmo not on wrist for %ldmins, don't fire reminder alert
[SEDT] protected data unavailable, don't fire reminder alert
[SEDT] already completed daily goal, don't fire reminder alert
[SEDT] sedentaryTimer is on wrist, show reminder alert.
[SEDT] sedentaryTimer is not on wrist, don't fire reminder alert.
[SEDT] sedentaryTimer firing after delay %.1f seconds (%@) %@
[SEDT] %@. StartDate is %@. Timeout date is %@
[SEDT] protected data unavailable, don't fire congratulatory alert
[SEDT] already completed daily goal, don't fire congratulatory alert
[SEDT] Firing congratulatory alert.
[SEDT] Not firing congratulatory alert.
[SEDT] sedentaryTimer saving missed hour object %@
[SEDT] device locked. caching sedentaryTimer missed hour start date %@
[SEDT] sedentaryTimer saving active hour object if required %@
[SEDT] device locked. caching sedentaryTimer active hour date object %@
[SEDT] %@ oldDict is %@, newDict is %@
[SEDT] Device unlocked. Save sedentaryTimer cached hours if required.
[SEDT] Device unlocked. Saving sedentaryTimer cached hour %@.
[SEDT] Database locked, will try to save cached value next time DB unlocks.
[SEDT] Error: %@ in %@
Error counting missed hour data samples %@
[SEDT] DB doesn't have any data for hour %@. Saving %@
[SEDT] sedentaryTimer: %@ : %ld
[SEDT] sedentaryTimer: %@ : %@
[SEDT] %@. Not firing sedentary reminder as alerts are disabled for testing.
[SEDT] %@. Not firing sedentary reminder as they are turned OFF in Bridge.
[SEDT] %@ Not firing alert as protected data is not available.
[SEDT] %@. Not firing sedentary reminder as skipped by test configuration.
Registering for update handlers from %{public}@
Secondary context implies content has not been migrated. Skipping (%ld) samples. %@
Detected that we have not established a secondary context
Achievement definitions changed, running monthly challenge engine if necessary.
Not creating monthly challenge because it already exists
Not creating monthly challenge because it's not beginning of month
Failed to run in response to achievement definitions changing with error %{public}@
%{public}@ - can create monthly challenge(%d) - has minimum active days(%d), is first week of current month(%d)
Not creating monthly challenge achievement because one already exists for current month.
Not creating monthly challenge achievement because today is not the first week of the month.
Not creating monthly challenge achievement because there's not enough recent activity.
Creating monthly challenge.
Failed to create monthly challenge achievement with error %{public}@
Created current monthly chanllenge successfully.
%{public}@: Overriding challenge type to: %@
%{public}@: Overriding goal to: %@
Failed to persist monthly challenge achievement with error %{public}@
Failed to delete monthly challenge achievement with error %{public}@
Deleted current monthly chanllenge successfully.
Failed to create monthly challenge achievement.
Failed to persist definition %{public}@ (%@) with error %{public}@
Persisted definition %{public}@ (%@) successfully.
%{public}@: type %lu is not available because it was offered last month.
%{public}@: Type: (%ld) Available: (%d) Reason: %@
%{public}@: Skipping monthly challenge type %lu because its definition couldn't be created
%{public}@: Overriding monthly challenge type to %@
Overriding goal expression to %@
%{public}@: lastMonth: %@ twoMonthsAgo: %@
%{public}@: no data two months ago, just match last month
%{public}@: (user increased more than 30%%), then do not suggest this type (pick another one).
%{public}@: (user has increased between 20 and 30%%), then goal matches last month
%{public}@: goal is lastMonth * 110%%
%{public}@: (user has decreased but less than 50%% decrease), then goal is average of last two months
%{public}@: (user has decreased more than 50%%), then goal is B * 110%%
%{public}@: last month is < 1
%{public}@: target %@ is less than 10. Assigning %@.
%{public}@: target %@ is over maximum. Assigning %@
%{public}@: rounded target is %@
%{public}@: nil goal.
Overriding First Glance progress achievement identifier to '%@'
Not coaching to Monthly Challenge - progress (%@) already matches or exceeds goal (%@).
Not coaching to Monthly Challenge - days needed (%ld) exceed days remaining in month (%ld)
Not coaching to Monthly Challenge - required average on remaining days (%ld) is >= the goal (%ld)
%{public}@: Registering for odometer updates
%{public}@: Received odometer data :: %@
%{public}@: Ignoring data received out of context :: %@
Discarding new pedometer data (%@ -> %@)
%@{public}: Discarding new pedometer data (%@ -> %@)
start session with start date: %@, configuration: %@
%@ called on server that has already been started. Returning early.
start guiding
ending session with endReason=%@
returning fake heartrate for simulator
not using healthlite, returning no heartrate
%@ deactivate
(%@) error fetching client proxy: %@
%{public}@: Registering for update handlers from %{public}@
New achievements added to database: %@
No new achievements found.
Achievements Manager returning early because remaining run count (%@) > 0 and intervalSinceLastRun (%f) < Max Delay (%f)
Attempted to run with protected data unavailable. Will run when it becomes available.
Current date %@ is before the reference date. Avoiding running achievement detection until we have a sane date.
Starting achievement detective run.
Skipping achievement run because the companion engine hasn't updated our key-value pairs in over %{public}@ days.
Running in compaion mode for first move goal ever set on this watch
Successfully ran detective for first move goal
Ran detective for first move goal, but hit an error
Will notify for %ld achievements: %@
Will not notify for achievements since they're all scheduled for the next day: %@
Checking database identifier...
Failed to run database identifier check: %{public}@
Failed to retrieve last database identifier: %{public}@
Failed to load first move goal: %{public}@
Fetched oldest Move goal and it was %{public}@
Protected data became available and achievement manager needs a run. Starting achievement detection.
Detected first move goal; will run for it soon
NLAchievementManager polled for achievement alerts
Will alert %@
Missing achievement in userInfo dictionary for alert request %@
Error marking achievement alerted: %@
Bridge Settings changed
Error marking achievement %@ as alerted: %@
%{public}@ Running immediately!
%@ in %@: poll completion
%@ in %@: forced coaching completed
%@ in %@: %@
Error: %@. Method: %@ in class: %@
Error: %@. Couldn't show achievement definition alert for %@
[NLDL] Activity app launch detected
[NLDL] Failed to register for activity app launch
[NLDL] Error fetching calorie goal: %@
[NLDL] Failed to get date of birth: %@
[NLDL] Failed to get biological sex: %@
[NLDL] Failed to get height: %@
[NLDL] Failed to get weight: %@
Error registering for managed configuration notifications: %d
[NLDL] Read data collection setting: %@
[NLDL] samplesAdded: %ld type=%@ source=%@
[NLDL] Error writing to log: %@
[NLDL] Submitted metric %x ignored
[NLDL] Submitted metric %x accepted
[NLDL] No HealthKit metric container for metric %x
[NLDL] Unexpected HKDailyGoalTypeAll while converting to goal type
Fetching achievements during date interval %{public}@ failed with error %{public}@
%{public}@ Not running block because achievement manager run returned failure.
Unable to determine if user is wheelchair user: %@
forcing weekly summary
Error when fetching deep breathing weekly summary, will try again when protected data becomes available again: %@
Protected data unavailable, holding off on showing the deep breathing weekly summary until unlock
Marking weekly summary as last alerted at %@
weeklySummaryEnabled: %ld, hasData: %ld
overrideMondayCheck = %ld
isMonday == TRUE, hasWeeklySummaryBeenShownToday: %ld, hasBeenOnWristToday: %ld
%@ returns %ld
Current date is %@, wrist on date is %@, showWeeklySummary = %ld
Error when trying to save data to key value domain: %{public}@. mostRecentWeeklySummaryAlertDate:%@
Coaching progress reason %{public}@ returned a fire date outside the bounds of the current day. %f was outside of [%f, %f]
Evaluating if event %{public}@ crossed the scheduled threshold - lastFired: %@, scheduledFireDate: %@, now: %@, durationOfToday: %lf, intervalBetweenScheduledDateAndNow: %lf
Evaluating if event %{public}@ crossed the scheduled threshold - isScheduled: %{BOOL}d, scheduledDateInPast: %{BOOL}d, lastFiredDateWasToday: %{BOOL}d, scheduledDateIsTooFarFromNow: %{BOOL}d
Event %{public}@ scheduled date is too long ago! lastFired: %@, scheduledFireDate: %@, now: %@, durationOfToday: %lf (maximum interval allowed before now: %lf), intervalBetweenScheduledDateAndNow: %lf
Goal progress reason evaluating %{public}@ goal, transitioning from %f to %f percent
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
