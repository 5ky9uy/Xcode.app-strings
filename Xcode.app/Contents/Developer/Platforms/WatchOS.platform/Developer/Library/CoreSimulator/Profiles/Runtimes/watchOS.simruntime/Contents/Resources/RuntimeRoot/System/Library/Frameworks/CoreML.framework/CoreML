%R 
% R 
%$R 
%(R 
%,R 
%0R 
%4R 
%8R 
%<R 
%@R 
%DR 
%HR 
%LR 
%PR 
%TR 
%XR 
%\R 
%`R 
%dR 
%hR 
%lR 
%pR 
%tR 
%xR 
%|R 
%S 
% S 
%$S 
%(S 
%,S 
%0S 
%4S 
%8S 
%<S 
%@S 
%DS 
%HS 
%LS 
%PS 
%TS 
%XS 
%\S 
%`S 
%dS 
%hS 
%lS 
%pS 
%tS 
%xS 
%|S 
%T 
% T 
%$T 
%(T 
%,T 
%0T 
%4T 
%8T 
%<T 
%@T 
%DT 
%HT 
%LT 
%PT 
%TT 
%XT 
%\T 
%`T 
%dT 
%hT 
%lT 
%pT 
%tT 
%xT 
%|T 
%U 
% U 
%$U 
%(U 
%,U 
%0U 
%4U 
%8U 
%<U 
%@U 
%DU 
%HU 
%LU 
%PU 
%TU 
%XU 
%\U 
%`U 
%dU 
%hU 
validateClassifierInterfaceWithError:
initWithInterface:metadata:configuration:
predictionFromFeatures:classifier:options:error:
genericErrorWithString:
predictionFromFeatures:error:
predictionFromFeatures:options:error:
predictionsFromBatch:options:error:
modelDescription
interface
metadata
classLabels
classify:options:error:
initWithInterface:metadata:configuration:error:
init
alloc
initWithKeyType:
isUndefined
dictionaryValue
featureTypeErrorWithString:
type
class
countByEnumeratingWithState:objects:count:
isKindOfClass:
descriptionForType:
allocWithZone:
stringWithFormat:
constraintWithStringKeys
constraintWithInt64Keys
isAllowedValue:error:
copyWithZone:
description
keyType
_keyType
sharedHandle
isValid
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
inputDescriptionsByName
count
allValues
objectAtIndexedSubscript:
outputDescriptionsByName
objectForKeyedSubscript:
initializeSentenceClassifierModelWithData:error:
allKeys
featureValueForName:
stringValue
predictLabelsForSentenceString:inputString:error:
initWithDictionary:error:
initWithModelDescription:parameterDictionary:error:
.cxx_destruct
setModelDescription:
_sentenceClassifierModel
_modelDescription
initWithFilePath:inputLayerNames:outputLayerNames:parameters:
boolValue
UTF8String
floatValue
initWithFeatureDescriptions:inputDesc:outputDesc:outputLayerNames:parameters:
specFromFilePath:inputLayerNames:outputLayerNames:parameters:
specFromFeatureDescriptions:inputDesc:outputDesc:outputLayerNames:parameters:
.cxx_construct
modelFilePath
setModelFilePath:
inputLayerNames
outputLayerNames
name
setName:
inputDescription
setInputDescription:
outputDescription
setOutputDescription:
precision
setPrecision:
engine
setEngine:
setQos:
isOrderedBgr
setOrderedBgr:
isGrayScale
setIsGrayScale:
blueBias
setBlueBias:
greenBias
setGreenBias:
redBias
setRedBias:
grayBias
setGrayBias:
scale
setScale:
isBiasPreprocessingShared
setIsBiasPreprocessingShared:
_isBiasPreprocessingShared
_modelFilePath
_inputLayerNames
_outputLayerNames
_name
_inputDescription
_outputDescription
_precision
_engine
_qos
_orderedBgr
_isGrayScale
_blueBias
_greenBias
_redBias
_grayBias
_scale
classifyTopK
classScoreVectorName
multiArrayValue
dataType
dataPointer
shape
initWithShape:dataType:error:
vectorizeIntoMultiArray:storageOrder:error:
initWithCapacity:
setObject:atIndexedSubscript:
probabilityDictionaryForLabels:
replaceDoubleVectorWith:
copy
classLabelOfMaxProbability:
resultWithClassProbability:additionalFeatures:classLabelOfMaxProbability:
convertPredictionToClassifierResult:withOptions:error:
predictedClassFeatureDescription
classProbabilityFeatureDescription
asFeatureDictionaryWithPredictedClassDescription:classProbabilityDescription:
predictedFeatureName
resultWithValue:
coreChannel
errorWithCode:string:
serializeMetadataAndInterfaceFromSpecification:archive:error:
stringWithUTF8String:
versionInfoWithMajor:minor:patch:variant:
network
initWithUTF8String:
addObject:
majorVersion
versionNumberString
deserializeMetadataAndInterfaceFromArchive:error:
olderThan:
dictionary
numberWithBool:
numberWithFloat:
arrayWithObjects:
doubleValue
setObject:forKeyedSubscript:
dataWithContentsOfFile:
JSONObjectWithData:options:error:
objectForKey:
isEqualToString:
integerValue
isOptional
containsString:
setOptionalInputTypes:
setHasBidirectionalLayer:
setHas1DConvOptional:
initWithSpec:classScoreVectorName:classLabels:configuration:error:
processInfo
globallyUniqueString
stringByAppendingPathComponent:
fileURLWithPath:isDirectory:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
defaultOptions
fileSystemRepresentation
compileSpecification:toArchive:options:error:
compiledVersionForSpecification:options:error:
loadModelFromCompiledArchive:modelVersionInfo:compilerVersionInfo:configuration:error:
usesCPUOnly
globalSettings
restrictNeuralNetworksToUseCPUOnly
configuration
computeUnits
_deallocContextAndPlan
_setupContextAndPlanWithForceCPU:error:
initWithSpec:classScoreVectorName:classLabels:error:
initWithConfiguration:
_setupContextAndPlanWithConfiguration:error:
mutableCopy
length
replaceOccurrencesOfString:withString:options:range:
numInputs
inputLayers
intValue
initWithComputeUnits:
customLayerErrorWithUnderlyingError:withString:
fillInInitialShapeFromEspressoNet:
evaluateNoAutoRelease:error:
featureNames
multiArrayConstraint
isAllowedValue:neuralNetworkInput:error:
imageConstraint
setValue:forKey:
optionalInputTypes
numberWithDouble:
fillWithNumber:
featureValueWithMultiArray:
numberWithInt:
arrayWithObjects:count:
arrayWithArray:
initWithFeatureValueDictionary:
imageBufferValue
numberWithUnsignedLong:
initWithDataPointer:shape:dataType:strides:deallocator:error:
copyIntoMultiArray:error:
verifyInputs:error:
resetSizes:error:
obtainBuffer
bindInputsAndOutputs:allocatedImageData:bufferIndex:error:
releaseBuffer:
submitSemaphore
plan
unlockCVPixelBuffers:error:
populateOutputs:error:
_pixelBufferFromEbuf:description:error:
featureValueWithPixelBuffer:
shapeConstraint
isAllowedShape:error:
findAvailableShape:
arrayByAddingObjectsFromArray:
sizeConstraint
allowedImageSizeClosestToPixelsWide:pixelsHigh:preferDownScaling:preferInputAspectRatio:
pixelsWide
pixelsHigh
pixelType
pixelBufferGray8FromMultiArrayHW:error:
pixelBufferBGRA8FromMultiArrayCHW:channelOrderIsBGR:error:
dealloc
featuresAtIndex:
getFeatureSize:
numberWithInteger:
setObject:forKey:
lazyBatchIndexIntoBatch:indices:error:
resetSizesNoAutoRelease:error:
numberWithUnsignedInt:
_matchEngineToOptions:error:
errorWithCode:underlyingError:string:
espressoQueue
null
addClassifierInformationToOutput:options:error:
initWithFeatureProviderArray:
evaluate:error:
predictionsFromLoopingOverBatch:model:options:error:
sortBatchByShape:withMap:error:
evaluateBatch:options:error:
unsignedIntegerValue
loadModelFromSpecification:configuration:error:
neuralNetworkFromSpec:error:
neuralNetworkFromSpec:classScoreVectorName:classLabels:error:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
regress:options:error:
getAvailableOutputBlobList
setClassLabels:
setClassScoreVectorName:
outputLayers
numOutputs
inputBuffers
setInputBuffers:
outputBuffers
setOutputBuffers:
usingCPU
setUsingCPU:
setPlan:
setNetwork:
params
setParams:
context
setContext:
isEspresoBiasPreprocessingShared
setIsEspresoBiasPreprocessingShared:
widths
setWidths:
heights
setHeights:
setKs:
batches
setBatches:
sequences
setSequences:
probDict
setProbDict:
hasBidirectionalLayer
has1DConvOptional
bufferSemaphore
setBufferSemaphore:
setEspressoQueue:
predictionsQueue
setPredictionsQueue:
bufferAvailable
setBufferAvailable:
setSubmitSemaphore:
isGPUPathForbidden
setIsGPUPathForbidden:
isEnergyEfficientPathForbidden
setIsEnergyEfficientPathForbidden:
_usingCPU
_isEspresoBiasPreprocessingShared
_hasBidirectionalLayer
_has1DConvOptional
_isGPUPathForbidden
_isEnergyEfficientPathForbidden
_classLabels
_classScoreVectorName
_inputLayers
_outputLayers
_numInputs
_numOutputs
_plan
_context
_probDict
_bufferSemaphore
_espressoQueue
_predictionsQueue
_submitSemaphore
_network
_inputBuffers
_outputBuffers
_params
_widths
_heights
_batches
_sequences
_optionalInputTypes
_bufferAvailable
resultWithOutputFiles:
numberWithLongLong:
isEqualToImageSize:
initWithPixelsWide:pixelsHigh:
_pixelsWide
_pixelsHigh
stringForDataType:
initWithShape:dataType:storageOrder:error:
indexVectorFromArray:
numberAtOffset:
setNumber:atOffset:
offsetForKeyedSubscript:
arrayWithCapacity:
string
appendString:
componentsJoinedByString:
appendFormat:
numberWithUnsignedInteger:
arrayFromIndexVector:
strides
_pArray
_managingData
_deallocator
_shape
_strides
cppStorageOrder:
isEqualToMultiArray:
numberOfBytesPerElement
isManagingData
isContiguous
isContiguousInOrder:
doublePointer
doubleMultiArrayWithCopyOfMultiArray:
doubleVectorWithValues:
doubleMultiArrayWithShape:valueArray:error:
doubleMatrixWithValues:error:
initWrappingMultiArray:
setRangeWithRawData:destIndex:error:
numberArray
objectAtIndex:
multiArray
setMultiArray:
_multiArray
unsignedIntValue
isSqueezableShape:
squeezeShape:strides:resultingShape:resultingStrides:
isSqueezableShape:dimensions:
indexSet
addIndex:
removeObjectsAtIndexes:
initSlicingMultiArray:origin:shape:squeeze:error:
initSqueezingMultiArray:dimensions:error:
parent
_parent
sliceAtOrigin:shape:squeeze:error:
sequeeze
sequeezeDimensions:error:
multiArrayBuffer
debugQuickLookObject
dictionaryWithCapacity:
additionalFeatures
initWithFeatureProvider:
predictedValue
featureValueWithDouble:
asFeatureDictionaryWithPredictedValueDescription:
predictedValueFeatureDescription
resultWithValue:additionalFeatures:
regressorResultFromOutputFeatures:error:
predictionFromFeatures:regressor:options:error:
initWithSVMModel:freeOnDealloc:isInputSizeLowerBoundOnly:inputSize:
allocSVMNodeVector:
fillSVMNodeVector:values:count:
deallocSVMNodeVector:
initWithLibSVMFile:
predict:
isInputSizeLowerBoundOnly
inputSize
model
setModel:
freeModelOnDealloc
setFreeModelOnDealloc:
_isInputSizeLowerBoundOnly
_freeModelOnDealloc
_inputSize
_model
numberWithLong:
initWithFormat:arguments:
errorWithCode:underlyingError:format:args:
errorWithCode:format:args:
IOErrorWithString:
customModelWithName:modelDescription:parameterDictionary:error:
dataWithBytes:length:
initWithModelDescriptionSpecification:error:
parametersFromCustomModelSpec:error:
initWithModelDescription:customModel:configuration:
initWithDescription:configuration:
customModel
setCustomModel:
_customModel
isEqualToModelConfiguration:
defaultConfiguration
setComputeUnits:
_computeUnits
initWithSpecification:error:
metadataWithSpecification:
initWithEngine:interface:metadata:error:
sharedKeySetForKeys:
dictionaryWithSharedKeySet:
featureTypeForValuesInArray:error:
featureValueOfType:fromObject:error:
array
_array
orderedSetWithArray:
initWithInterfaceFormat:error:
metadataWithFormat:
predictedProbabilitiesName
inputFeatureNames
outputFeatureNames
isEqualToDescription:
initWithInputDescriptions:outputDescriptions:predictedFeatureName:predictedProbabilitiesName:metadata:
verifyInput:error:
setInputFeatureNames:
setOutputFeatureNames:
_inputDescriptionsByName
_outputDescriptionsByName
_predictedFeatureName
_predictedProbabilitiesName
_metadata
_inputFeatureNames
_outputFeatureNames
initDescriptionOnlyWithSpecification:configuration:error:
classifierResultFromOutputFeatures:error:
pipeline
initWithEngine:interface:metadata:configuration:error:
initUnspecified
valueWithRange:
rangeValue
containsObject:
canShapeArrayBePromotedFrom:to:
initWithSizeRangeForDimension:
initWithEnumeratedShapes:
enumeratedShapes
sizeRangeForDimension
shapeSet
_type
_sizeRangeForDimension
_shapeSet
format
setFormat:
confidenceFeatureName
setConfidenceFeatureName:
coordinatesFeatureName
setCoordinatesFeatureName:
labelNames
setLabelNames:
_format
_confidenceFeatureName
_coordinatesFeatureName
_labelNames
models
lastObject
parameters
objectBoundingBoxOutputDescription
validateRegressorInterfaceWithError:
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initWithMajor:minor:patch:variant:
scannerWithString:
scanInteger:
decimalDigitCharacterSet
scanUpToCharactersFromSet:intoString:
scanUpToString:intoString:
minorVersion
patchVersion
versionInfoWithString:
versionString
variantString
_variantString
_majorVersion
_minorVersion
_patchVersion
initWithSVMModel:freeOnDealloc:isInputSizeLowerBoundOnly:inputSize:classLabels:
initWithLibSVMFile:classLabels:
numberOfClasses
hasProbabilityPredictionEnabled
predictProbabilities:probabilities:
setIsInputSizeLowerBoundOnly:
setInputSize:
sequence
batch
channels
height
width
espressoShapeToCoremlShape:
setSequence:
setBatch:
setChannels:
setHeight:
setWidth:
coremlShapeToEspressoShape:
getStrides:
rawPointer
texture
espressoTensorToCoremlTensor:
espressoShapesToCoremlShapes:
factory
createCustomLayer:withParameters:error:
initWithParameterDictionary:error:
setWeightData:error:
outputShapesForInputShapes:error:
evaluateOnCPUWithInputs:outputs:error:
encodeToCommandBuffer:inputs:outputs:error:
coremlShapesToEspressoShapes:
espressoTensorsToCoremlTensors:
intFromFourBytes:
dataWithBytesNoCopy:length:freeWhenDone:
espressoTensorsToCoremlTensorsGPU:
setupForInputShapes:withParameters:
initWithParameters:
hasGPUSupport
setMappedWeights:sizeInBytes:
computeOnCPUWithInputTensors:outputTensors:
encodeToMetalCommandBuffer:inputTensors:outputTensors:
className
customImpl
setCustomImpl:
_className
_customImpl
int64Value
_featureValuesForNames:providedBy:error:
_vectorizedSizeOfFeatureValues:error:
_vectorizeWithoutSizeCheckFeatureValues:intoDoubleVector:stride:error:
canVectorizeFeatureWithDescription:
vectorizeFeaturesProvidedBy:featureNames:intoDoubleVector:length:stride:error:
vectorizeFeaturesProvidedBy:featureNames:error:
canVectorizeAllFeaturesWithDescriptions:
setByAddingObjectsFromSet:
allObjects
initWithFeaturesFrom:addedToFeaturesFrom:
unionFeatureProvider
first
setFirst:
second
setSecond:
_first
_second
providerWithSubsetOfFeaturesNamed:providedBy:
lazyProviderWithFeaturesProvidedBy:addedToFeaturesProvidedBy:
loadModelFromSpecificationWithCompilationOptions:options:error:
serializeInterfaceAndMetadata:toArchive:error:
initInterfaceAndMetadataWithCompiledArchive:error:
vectorizeInput:error:
numberWithUnsignedLongLong:
_model_data
scalarRegress:error:
scalarRegress:
vectorRegress:dest:
_mmapped_model
_cached_model
num_dimensions
output_classes
substringToIndex:
uppercaseString
substringFromIndex:
deserializeInterfaceFormat:archive:error:
serializeInterfaceFormat:archive:error:
initWithPixelsWide:pixelsHigh:pixelType:sizeConstraint:
initWithEnumeratedImageSizes:
constraintWithPixelsWide:pixelsHigh:pixelType:sizeConstraint:
osType:isAcceptedForPixelType:
_stringForAllowedOSTypes
_stringForOSType:
isAllowedImageSize:error:
pixelFormatType
constraintWithPixelsWide:pixelsHigh:pixelType:
imagePixelTypeFromOSType:
osType
imageHeight
imageWidth
_sizeConstraint
_pixelType
modelAssetWithURL:configuration:error:
initWithURL:configuration:error:
URLByAppendingPathComponent:
modelAssetWithSpecificationURL:error:
compileSpecificationAtURL:toURL:options:error:
URLByDeletingPathExtension
lastPathComponent
URLWithString:relativeToURL:
URLByAppendingPathExtension:
initWithURL:error:
fileExistsAtPath:
loadModelFromAssetAtURL:configuration:error:
modelWithError:
load:
classifierWithError:
regressorWithError:
modelAssetWithURL:error:
modelAssetWithSpecification:error:
classifier
regressor
compiledURL
ranLoad
setRanLoad:
asset
setAsset:
loadConfiguration
_ranLoad
_compiledURL
_asset
_loadConfiguration
longLongValue
initWithUndefinedValueAndType:
initWithValue:type:
undefinedFeatureValueWithType:
featureTypeForObject:
featureValueWithDictionary:error:
initWithArray:type:
featureValueWithSequence:
value
isEqualToNumber:
isEqualToDictionary:
values
isEqualToArray:
isEqualToFeatureValue:
featureValueWithInt64:
featureValueWithString:
featureValueWithStringKeyDictionary:
featureValueWithInt64KeyDictionary:
sequenceValue
objectValue
setValue:
setObjectValue:
_undefined
_value
_objectValue
elementCountForScenePrintRequestRevision:
bytes
scenePrintsFromPixelBuffers:version:augmentationOptions:useCPUOnly:error:
featureValueFromScenePrint:elementSize:
scenePrintRequestRevision
_scenePrintRequestRevision
_configuration
initializeWordTaggingModelWithData:error:
predictTokensLabelsLocationsLengthsForString:inputString:error:
sequenceWithStringArray:
sequenceWithInt64Array:
_wordTaggingModel
defaultCStringEncoding
cStringUsingEncoding:
stringByDeletingPathExtension
sharedInstance
classForLoadingModelType:
classForCompilingModelType:
lengthInBytesForScenePrintRequestRevision:
scenePrintsFromPixelBuffersImpl
scenePrintsFromPixelBuffersUsesCPUOnlyImpl
scenePrintElementCountImpl
scenePrintLengthImpl
_valid
_scenePrintsFromPixelBuffersImpl
_scenePrintsFromPixelBuffersUsesCPUOnlyImpl
_scenePrintElementCountImpl
_scenePrintLengthImpl
_setSingleArrayLookupField
resultWithIntClassProbability:
resultWithStringClassProbability:
_buildClassificationClasses:topk:error:
_classes_by_string
_classes_by_int64_t
_class_type
_class_values
_single_array_key
loadModelFromArchive:configuration:error:
deserializeVersionInfoFromArchive:error:
loadFromModelSpecificationInArchive:withClass:versionInfo:configuration:error:
loadModelFromAssetAtURL:error:
loadModelFromArchive:error:
inputDescriptionFromInterface:
outputDescriptionFromInterface:
orderedFeatureNamesFromInterface:forInput:
modelInterfaceWithInputDescription:orderedInputFeatureNames:outputDescription:orderedOutputFeatureNames:predictedFeatureName:predictedProbabilitiesName:
initWithName:type:optional:contraints:
dictionaryConstraint
sequenceConstraint
featureDescriptionWithName:type:optional:constraints:
isAllowedValue:
allowsValuesWithDescription:
valueConstraints
setValueConstraints:
multiArrayConstraintCached
imageConstraintCached
dictionaryConstraintCached
sequenceConstraintCached
_optional
_valueConstraints
_multiArrayConstraintCached
_imageConstraintCached
_dictionaryConstraintCached
_sequenceConstraintCached
version
setVersion:
postVisionFeaturePrintModel
setPostVisionFeaturePrintModel:
_version
_postVisionFeaturePrintModel
firstObject
featureExtractorParameters
scenePrintVersion
visionFeaturePrintInfo
fileURLWithPath:
compileWithModels:toArchive:options:error:
stringWithString:
lazyBatchWithFeaturesInBatch:addedToBatch:error:
setWithArray:
batchWithSubsetOfFeaturesNamed:fromBatch:
initModelFromMetadataAndArchive:versionInfo:interface:metadata:configuration:error:
_models
initWithInterface:metadata:error:
initWithLRSpec:configuration:error:
initWithSpecification:configuration:error:
intercept
weights
postEvalTransForm
m_spec
setFrameworkVersionNumber:
frameworkVersionNumber
getInternalFrameworkVersion
_frameworkVersionNumber
_init
set_attributes:
set_objectStore:
_objectStore
_attributes
indexOfObject:
predicateFormat
characterAtIndex:
archivedDataWithRootObject:requiringSecureCoding:error:
writeToURL:options:error:
initWithContentsOfURL:options:error:
unarchivedObjectOfClasses:fromData:error:
dictionaryWithDictionary:
predictedClass
_initWithFlattenedTree:
_saveModelAssetWithModelToPath:withError:
_loadModelAssetWithModelAtPath:withError:
_makeInferenceFromAnswers:withError:
_trc
_treeClassifier
__attributes
__objectStore
emptySequenceWithType:
sequenceFromArray:error:
stringValues
int64Values
_values
initWrappingSequence:
_sequence
featureValues
initWithInputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:predictedFeatureName:predictedProbabilitiesName:
setWithSet:
minusSet:
validateSingleFeatureInDescription:withSet:
isValidRegressorInterface
isValidClassifierInterface
dataWithJSONObject:options:error:
localizedDescription
stringByReplacingOccurrencesOfString:withString:
dryRun
setDryRun:
platform
setPlatform:
platformVersion
setPlatformVersion:
_dryRun
_platform
_platformVersion
setOutputFiles:
outputFiles
_outputFiles
stringByAppendingPathExtension:
serializeVersionInfo:archive:error:
code
userInfo
initWithDictionary:
serializeSpecification:toArchive:error:
versionForSerializedSpecification:options:error:
versionInfo
compiledVersionForSpecificationAtURL:options:error:
saveModelToArchive:model:error:
saveModelToArchive:model:compilerOptions:error:
saveModelToSpecification:
saveModelToAssetAtURL:model:error:
classProbability
predictedClassFeatureType
resultWithIntClassProbability:additionalFeatures:
resultWithStringClassProbability:additionalFeatures:
initWithName:
modelWithContentsOfURL:configuration:error:
modelWithContentsOfURL:error:
initWithDescription:
initWithName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
setConfiguration:
_interface
initWithSpec:error:
setScenePrintVersion:
_scenePrintVersion
initWithScenePrintParameters:error:
_featureExtractorParameters
initWithParameters:modelDescription:featureExtractorType:configuration:error:
computeScenePrintFeatures:handle:useCPUOnly:error:
_inputFeatureName
_outputFeatureName
_outputDataType
_extractorType
_parameters
initWithValue:additionalFeatures:
_predictedValue
_additionalFeatures
constraintWithShape:dataType:
stringByAppendingString:
featureDescriptionWithName:consistentWithFeatureValues:error:
initWithValueDescription:countRange:
exceptionWithName:reason:userInfo:
enumerateObjectsUsingBlock:
featureValuesWithConsistentTypeFromArray:error:
saveCustomWordTaggingModelToURL:modelData:stringInputName:classname:NSError:
saveCustomSentenceClassifierModelToURL:modelData:stringInputName:classname:NSError:
saveCustomSequenceModelToURL:modelData:stringInputName:classname:NSError:
saveCustomSentenceModelToURL:modelData:stringInputName:classname:NSError:
setDictionary:
_dictionary
initWithFeatureProvider:featureNames:
featureValueWithObject:
initWithStringClassProbability:classFeatureType:additionalFeatures:
initWithIntClassProbability:classFeatureType:additionalFeatures:
initWithClassProbability:additionalFeatures:classLabelOfMaxProbability:
_predictedClass
_classProbability
_predictedClassFeatureType
initWithData:language:inputFeatureName:outputFeatureName:modelData:labelNames:error:
revision
setRevision:
language
setLanguage:
inputFeatureName
setInputFeatureName:
outputFeatureName
setOutputFeatureName:
modelParameterData
setModelParameterData:
_revision
_language
_modelParameterData
initWithParameters:modelDescription:nlpHandle:configuration:error:
stringByAppendingFormat:
stringByReplacingCharactersInRange:withString:
saveAppleTextClassifierModelToURL:textClassifierParameters:error:
textClassifierModel
stringWithCapacity:
confidenceOutputFeatureName
coordinatesOutputFeatureName
suppressionMethod
setSuppressionMethod:
iouThreshold
setIouThreshold:
confidenceThreshold
setConfidenceThreshold:
minBoxes
setMinBoxes:
maxBoxes
setMaxBoxes:
numClasses
setNumClasses:
perClass
setPerClass:
confidenceInputFeatureName
setConfidenceInputFeatureName:
coordinatesInputFeatureName
setCoordinatesInputFeatureName:
iouThresholdInputFeatureName
setIouThresholdInputFeatureName:
confidenceThresholdInputFeatureName
setConfidenceThresholdInputFeatureName:
setConfidenceOutputFeatureName:
setCoordinatesOutputFeatureName:
_perClass
_suppressionMethod
_minBoxes
_maxBoxes
_numClasses
_confidenceInputFeatureName
_coordinatesInputFeatureName
_iouThresholdInputFeatureName
_confidenceThresholdInputFeatureName
_confidenceOutputFeatureName
_coordinatesOutputFeatureName
_iouThreshold
_confidenceThreshold
initWithParameters:modelDescription:configuration:error:
unsignedLongValue
lazyBatchWindowIntoBatch:startIndex:windowLength:error:
batchFromConcatinatingBatches:
predictionsFromSubbatchingBatch:maxSubbatchLength:predictionBlock:options:error:
NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl
NLPSequenceModelCreateWithDataImpl
NLPSequenceModelGetRevisionImpl
NLPSequenceModelIsRevisionSupportedImpl
NLPSequenceModelGetCurrentRevisionImpl
NLPClassifierModelCopyPredictedLabelForTextImpl
NLPClassifierModelCreateWithDataImpl
NLPClassifierModelGetRevisionImpl
NLPClassifierModelIsRevisionSupportedImpl
NLPClassifierModelGetCurrentRevisionImpl
_NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl
_NLPSequenceModelCreateWithDataImpl
_NLPSequenceModelGetRevisionImpl
_NLPSequenceModelIsRevisionSupportedImpl
_NLPSequenceModelGetCurrentRevisionImpl
_NLPClassifierModelCopyPredictedLabelForTextImpl
_NLPClassifierModelCreateWithDataImpl
_NLPClassifierModelGetRevisionImpl
_NLPClassifierModelIsRevisionSupportedImpl
_NLPClassifierModelGetCurrentRevisionImpl
initWithUsesCPUOnly:
initWithUseCPUOnly:
useCPUOnly
setUseCPUOnly:
setUsesCPUOnly:
setClassifyTopK:
maxComputationBatchSize
setMaxComputationBatchSize:
_usesCPUOnly
_classifyTopK
_maxComputationBatchSize
initWithData:language:inputFeatureName:tokensFeatureName:tokenTagsFeatureName:tokenLocationsFeatureName:tokenLengthsFeatureName:modelData:tagNames:error:
tokensOutputFeatureName
setTokensOutputFeatureName:
tokenTagsOutputFeatureName
setTokenTagsOutputFeatureName:
tokenLocationsOutputFeatureName
setTokenLocationsOutputFeatureName:
tokenLengthsOutputFeatureName
setTokenLengthsOutputFeatureName:
tagNames
setTagNames:
_tokensOutputFeatureName
_tokenTagsOutputFeatureName
_tokenLocationsOutputFeatureName
_tokenLengthsOutputFeatureName
_tagNames
saveAppleWordTaggingModelToURL:wordTaggerParameters:error:
wordTaggingModel
addObjectsFromArray:
featureNamesInBatch:
dictionaryFromBatch:featureNames:
setWithObjects:
dictionaryFromBatch:
featureProviderArrayFromBatch:
featureValueArrayForName:batch:error:
featureDescriptionsByNameForBatch:error:
initWithFeaturesFrom:addedToFeaturesFrom:error:
initWithBatch:startIndex:windowLength:error:
fullBatch
setFullBatch:
startIndex
setStartIndex:
windowLength
setWindowLength:
_fullBatch
_startIndex
_windowLength
initWithBatch:indices:error:
indices
setIndices:
_indices
vectorizeFeaturesNamed:fromBatch:intoRowsOfDoubleMatrix:error:
initWith:imputeValue:replaceValue:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:error:
imputeValueFrom:replaceValue:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
imputeValueFrom:replaceValue:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
imputeValue
replaceValue
_imputeValue
_replaceValue
rangeFromAllowedSizeRangeProtoMessage:
constraintWithShape:dataType:shapeConstraint:
initWithPixelsWideRange:pixelsHighRange:
populateConstraintsForFeatureDescription:
descriptionFromProto:
orderedNamesFromProto:
stringWithCString:encoding:
calculateClassProbability:input:error:
classify:error:
classify:topK:error:
classType
classEncoding
valueDescription
countRange
_valueDescription
_countRange
getImageFeatureTypeFromConstraint:
getArrayFeatureTypeFromConstraint:
getDictionaryFeatureTypeFromConstraint:error:
getSequenceFeatureTypeFromConstraint:error:
createFeatureTypeFromFeatureDescription:error:
createMetaData:
copyFeatureDescriptionFrom:to:error:
createModelDescription:error:
saveModelDescription:toSpecification:error:
initWithName:shortDescription:versionString:author:license:creatorDefined:
shortDescription
author
license
creatorDefined
_shortDescription
_versionString
_author
_license
_creatorDefined
initWith:dimensionEncoding:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
replaceObjectAtIndex:withObject:
vectorizeOneHotEncoderDict:index:error:
columnNameEncoding
dimensionEncoding
_output_array_shape
index_mapping
_columnNameEncoding
_dimensionEncoding
initWith:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:error:
initWithArray:
constructDictionary:error:
categoryName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
categoryName:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:error:
categoryName
_categoryName
URLForDirectory:inDomain:appropriateForURL:create:error:
compileModelAtURL:error:
initWith:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
computeSingleNorm:lastValue:
inputDescriptionFrom:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
normFrom:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
normFrom:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
norm
_norm
initWithMapping:valueOnUnknown:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
mapFeature:error:
mapping
valueOnUnknown
_mapping
_valueOnUnknown
initWith:scaleValue:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:error:
shiftValue
scaleValue
_shiftValue
_scaleValue
initWith:dataTransformerName:ouputSparse:handleUnknown:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
encodeFeatureValue:
encodeFeatureValueIntString:
handleUnknown
unknownDenseVector
featureEncoderFrom:inputDescription:orderedInputFeatureNames:
featureEncoderFrom:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
featureEncoderFrom:dataTransformerName:ouputSparse:handleUnknown:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
featureEncoding
ouputSparse
_ouputSparse
_handleUnknown
_featureEncoding
setRestrictNeuralNetworksToUseCPUOnly:
isNeuralNetworkGPUPathForbidden
_restrictNeuralNetworksToUseCPUOnly
_isNeuralNetworkGPUPathForbidden
setFeatureName:to:descriptions:
setInputFeatureName:to:
setOutputFeatureName:to:
validateModelDescription:
initWithDescription:numberOfFeatures:priorMean:regressionInputName:optimismInputName:samplingScaleInputName:samplingTruncationInputName:meanOutputName:varianceOutputName:pessimisticProbabilityOutputName:sampledProbabilityOutputName:
getArrayFeatureValue:
getFeatureValue:forName:withType:
getOneHotFeatureValues:error:
getOptimism:
getSamplingScale:
getSamplingTruncation:
createRegressorResult:
updateModelFromFeatures:toTarget:error:
convertOutputFeatureToPredictionValues:event:importance:error:
isEqualToBopr:
reset
updateModelFromFeatures:toTarget:options:error:
setFeatureCount:
FeatureCount
initWithDescription:numberOfFeatures:priorMean:
createCheckpoint
resetToLastCheckpointBeforeDate:
_regressionInputFeatureName
_optimismInputFeatureName
_meanOutputFeatureName
_varianceOutputFeatureName
_pessimisticProbabilityOutputFeatureName
_sampledProbabilityOutputFeatureName
_samplingScaleInputFeatureName
_samplingTruncationInputFeatureName
probabilityDictionaryForStringLabels:
probabilityDictionaryForInt64Labels:
initWithObjects:forKeys:count:
initWithStrLabels:
enumeratorFromMap:
removeObjectForKey:
keyEnumerator
mapStrLabelToIndex
setMapStrLabelToIndex:
_mapStrLabelToIndex
initWithIntLabels:
mapIntLabelToIndex
setMapIntLabelToIndex:
_mapIntLabelToIndex
initWithStrMap:
nextObject
iter
setIter:
iterEnd
setIterEnd:
_iter
_iterEnd
initWithIntMap:
initWithShape:dataType:shapeConstraint:
isAllowedDataType:error:
_dataType
_shapeConstraint
enumeratedImageSizes
pixelsWideRange
pixelsHighRange
imageSizeSet
_imageSizeSet
_pixelsWideRange
_pixelsHighRange
locationClosestTo:inRange:
closestImageSizeInArray:toImageSize:preferDownScaling:
closestImageSizeInPixelsWideRange:pixelsHighRange:toImageSize:preferInputAspectRatio:
initWith:indices:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:configuration:
extractArrayElement:indices:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
extractArrayElement:indices:dataTransformerName:inputDescription:outputDescription:orderedInputFeatureNames:orderedOutputFeatureNames:
arrayColumnName
extractIndices
outputType
_arrayColumnName
_extractIndices
_outputType
classify:topK:error be implemented by derived class!
modelDescription
T@"MLModelDescription",R,N
interface
T@"MLModelInterface",R
metadata
T@"MLModelMetadata",R
WARNING: using -h 0 may be faster
WARNING: reaching max number of iterations
optimization finished, #iter = %d
WARNING: training data in only one class. See README for details.
WARNING: class label %d specified in weight is not found
Total nSV = %d
WARNING: # folds > # data. Will use # folds = # data instead (i.e., leave-one-out cross validation)
Model doesn't contain information for SVR probability inference
svm_type %s
kernel_type %s
degree %d
gamma %g
coef0 %g
nr_class %d
total_sv %d
label
probA
probB
nr_sv
%.16g 
0:%d 
%d:%.8g 
%80s
svm_type
unknown svm type.
kernel_type
unknown kernel function.
degree
gamma
coef0
nr_class
total_sv
unknown text in model file: [%s]
ERROR: fscanf failed to read model
unknown svm type
unknown kernel type
gamma < 0
degree of polynomial kernel < 0
cache_size <= 0
eps <= 0
C <= 0
nu <= 0 or nu > 1
p < 0
shrinking != 0 and shrinking != 1
probability != 0 and probability != 1
one-class SVM probability output not supported yet
specified nu is infeasible
Prob. model for test data: target value = predicted value + z,
z: Laplace distribution e^(-|z|/sigma)/(2sigma),sigma= %g
obj = %f, rho = %f
nSV = %d, nBSV = %d
nu = %f
C = %f
epsilon = %f
Line search fails in two-class probability estimates
Reaching maximal iterations in two-class probability estimates
Exceeds max_iter in multiclass_prob
c_svc
nu_svc
one_class
epsilon_svr
nu_svr
linear
polynomial
sigmoid
precomputed
MLDictionaryConstraint cannot check undefined values
MLDictionaryConstraint only allows Dictionary values
Dicitonary keys are not all expected type %@
String
Int64
keyType
Ti,R,N,V_keyType
MLModelDescriptionKey
MLModelVersionStringKey
MLModelAuthorKey
MLModelCreatorDefinedKey
MLModelLicenseKey
_MLNLPSentenceClassifierModel
NaturalLanguage framework not available on this OS version
com.apple
Must only have one string input feature
Must only have one string output feature
modelData
parameters['modelData'] does not exist or is not a string
initialization of classifier model with model data failed
Input string feature '%@' not found
Prediction failed
T@"MLModelDescription",&,V_modelDescription
isOrderedBgr
isGrayScale
blueBias
greenBias
redBias
grayBias
scale
placeHolderInputName
precision
Ti,N,V_precision
engine
Ti,N,V_engine
Ti,N,V_qos
orderedBgr
T{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,GisOrderedBgr,V_orderedBgr
T{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,V_isGrayScale
T{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,V_blueBias
T{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,V_greenBias
T{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,V_redBias
T{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,V_grayBias
T{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,V_scale
isBiasPreprocessingShared
TB,N,V_isBiasPreprocessingShared
modelFilePath
T@"NSString",&,N,V_modelFilePath
inputLayerNames
T@"NSArray",R,N,V_inputLayerNames
outputLayerNames
T@"NSArray",R,N,V_outputLayerNames
name
T@"NSString",&,N,V_name
inputDescription
T@"NSDictionary",&,N,V_inputDescription
outputDescription
T@"NSDictionary",&,N,V_outputDescription
Neural network classifier does not contain class labels.
The size of the output layer '%@' in the neural network does not match the number of classes in the classifier.
Classify can only be called on neural network classifiers.
Regress can only be called on neural network regressors.
Attempted to compile a non-neural-network model as a neural network.
Encountered an unexpected error while compiling a neural network model.
Encountered an error while compiling a neural network model: %@
generic
compiler major version for compiled model is %@ and is more recent than this framework major version %@.
model
.espresso.net
layers
type
rnn_arch
encoder_bidirectional_mode
bottom
com.apple.CoreMLBatchProcessingQueue
com.apple.CoreMLNNProcessingQueue
Invalid path %@ to compiled model.
.net
.shape
Invalid path to compiled model.
Unable to load information from compiled model path %@.
layer_shapes
Model .net file not found.
Error in declaring network.
Error declaring input for NN engine.
Error declaring output for NN engine.
Error in passing image pre-processing parameters to network.
Error allocating buffer space for NN.
The model expects input feature %@ to be an image, but the input is of type %ld.
Input image feature %@ does not match model description
Required input feature not passed to neural network.
Image inputs are not supported on watchOS.
Failed to lock pixel buffer
Error binding image input buffer %@.
Error binding input buffer %@.
Error passing input %s to NN engine.
Error passing input %@ to NN engine.
Unsupported input type for neural network.
Error binding output buffer.
Image value is nil.
Unable to obtain strong reference for NN Engine for single evaluation.
Error computing NN outputs.
v4@?0
Image output %@ is missing width, height, and pixel info in its description
Batch or sequence image output is unsupported for image output %@
Failed to convert output %@ to image
Unable to sort input batch,  [MLBatchProvider featureNames] returned empty or nil.
Passing empty input dictionary for resetSizes.
Incorrect input number of dimensions (must be between 1, 3, or 5 dimensions.
Cannot evaluate a batch of size %@, which is larger than maximum of %@.
Cannot evaluate a sequence of length %@, which is longer than maximum of %@ for bidirectional models.
Failure setting up to dynamically allocate for sequence size.
Failure dynamically resizing for sequence length.
Error in re-declaring input %@.
Error in declaring output %@.
Error in re-allocating network for longer sequences.
Unable to obtain strong reference for NN Engine for batch evaluation.
Unable to verify the first input of the batch.
Unable to reset sizes for an element of a batch computation.
Error calling plan submit.
v8@?0^{?=ii*}4
Error calling plan_submit in batch processing.
Error calling plan submit for batch processing.
Failure checking availability of plan submit.
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
numInputs
TI,R,N,V_numInputs
numOutputs
TI,R,N,V_numOutputs
inputBuffers
T{vector<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}{__compressed_pair<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > *, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}}},N,V_inputBuffers
outputBuffers
T{vector<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}{__compressed_pair<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > *, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}}},N,V_outputBuffers
usingCPU
TB,N,V_usingCPU
plan
T^v,N,V_plan
network
T{?=^vi},N,V_network
params
T{map<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,V_params
context
T^v,N,V_context
isEspresoBiasPreprocessingShared
TB,N,V_isEspresoBiasPreprocessingShared
widths
T{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,V_widths
heights
T{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,V_heights
T{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,V_ks
batches
T{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,V_batches
sequences
T{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,V_sequences
classLabels
T@"NSArray",&,N,V_classLabels
classScoreVectorName
T@"NSString",&,N,V_classScoreVectorName
probDict
T@"MLProbabilityDictionary",&,N,V_probDict
optionalInputTypes
T{map<std::__1::basic_string<char>, MLOptionalNNInputType, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, MLOptionalNNInputType> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,V_optionalInputTypes
hasBidirectionalLayer
TB,N,V_hasBidirectionalLayer
has1DConvOptional
TB,N,V_has1DConvOptional
bufferSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_bufferSemaphore
espressoQueue
T@"NSObject<OS_dispatch_queue>",&,V_espressoQueue
predictionsQueue
T@"NSObject<OS_dispatch_queue>",&,V_predictionsQueue
bufferAvailable
T{vector<bool, std::__1::allocator<bool> >=^LI{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=L}},V_bufferAvailable
submitSemaphore
T@"NSObject<OS_dispatch_semaphore>",&,V_submitSemaphore
isGPUPathForbidden
TB,V_isGPUPathForbidden
isEnergyEfficientPathForbidden
TB,V_isEnergyEfficientPathForbidden
inputLayers
T@"NSArray",R,N,V_inputLayers
outputLayers
T@"NSArray",R,N,V_outputLayers
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
map::at:  key not found
%@ x %@
pixelsWide
Ti,R,V_pixelsWide
pixelsHigh
Ti,R,V_pixelsHigh
MLMultiArrayDataTypeDouble
MLMultiArrayDataTypeFloat32
MLMultiArrayDataTypeInt32
MLMultiArrayDataTypeInvalid (%d)
Float32
Int32
Double
 vector
 matrix
 array
dataPointer
T^v,R,N
dataType
Ti,R,N
shape
T@"NSArray",R,N,V_shape
strides
T@"NSArray",R,N,V_strides
count
numberOfBytesPerElement
TI,R,N
managingData
TB,R,N,GisManagingData
contiguous
TB,R,N,GisContiguous
Unable to copy %@ into %@
Unable to vectorize %@ into %@
value count (%@) does not match array count (%@)
Inconsistent row size
setRangeWithRawData: range out of bounds.
setRangeWithRawData: non-contiguous %@d destination unsupported
setRangeWithRawData: failed to vectorize source
multiArray
T@"MLMultiArray",&,V_multiArray
Invalid origin %@ for slicing %@
Invalid shape %@ for slicing %@
Slice at %@ with shape %@ is out of bounds
Shape %@ is not squeezable at dimensions %@
parent
T@"MLMultiArray",R,N,V_parent
Cannot determine predictedFeatureName for this regressor
Invalid regressor: predicted feature '%@' is not described as double or MultiArray
Predicted feature named '%@' was not output by pipeline
Predicted feature '%@' is of type %@ not the expected %@
Regressed feature named '%@' is not a Double or MultiArray
T^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii},V_model
freeModelOnDealloc
TB,V_freeModelOnDealloc
isInputSizeLowerBoundOnly
TB,R,V_isInputSizeLowerBoundOnly
inputSize
TI,R,V_inputSize
Internal error: support vectors not set.
Invalid array shape %@ for converting to gray image
Failed to create temporary buffer for conversion to image
Failed to create gray image %@ x %@
Failed to convert planar to BGRAX888: Code=%@
Failed to create BGRA image %@ x %@
This custom model requires an implementation named '%@' which was not found in the gloabl namespace
Custom model implmenetantion class named '%@' does not conform to MLCustomModel protocol
Parameter '%s' has no value
Model type is not a CustomModel
customModel
T@"NSObject<MLCustomModel>",&,V_customModel
computeUnits
Ti,V_computeUnits
The must be the same value count for each feature. Feature '%@' has %@ values. Expected %@
Failed to determine type of feature '%@'.
Error initializing sample $@ of feature `%@`
array
T@"NSArray",R,N,V_array
MLModelDescription: %@ inputDescriptionsByName: %@ outputDescriptionsByName: %@ predictedFeatureName: %@ predictedProbabilitiesName: %@ metadata: %@
inputFeatureNames
T@"NSOrderedSet",&,V_inputFeatureNames
outputFeatureNames
T@"NSOrderedSet",&,V_outputFeatureNames
inputDescriptionsByName
T@"NSDictionary",R,N,V_inputDescriptionsByName
outputDescriptionsByName
T@"NSDictionary",R,N,V_outputDescriptionsByName
predictedFeatureName
T@"NSString",R,C,N,V_predictedFeatureName
predictedProbabilitiesName
T@"NSString",R,C,N,V_predictedProbabilitiesName
T@"NSDictionary",R,N,V_metadata
T@"MLPipeline",&,V_engine
pipeline
T@"MLPipeline",R
Input %@-d shape is not the allowed, expected %@-d
Size (%@) of dimension (%@) is not in allowed range (%@..%@)
Shape (%@) was not in enumerated set of allowed shapes
shapeSet
T@"NSOrderedSet",R,N,V_shapeSet
Ti,R,N,V_type
sizeRangeForDimension
T@"NSArray",R,N,V_sizeRangeForDimension
enumeratedShapes
T@"NSArray",R,N
format
Ti,V_format
confidenceFeatureName
T@"NSString",&,V_confidenceFeatureName
coordinatesFeatureName
T@"NSString",&,V_coordinatesFeatureName
labelNames
T@"NSArray",&,V_labelNames
Error: Attempted multiple write-open of data blob 
.DAT
non-directory file already exists at archive path
error creating directory: %@
Error creating directory.
%lld.%lld.%lld
%@%@
majorVersion
Tq,R,V_majorVersion
minorVersion
Tq,R,V_minorVersion
patchVersion
Tq,R,V_patchVersion
variantString
T@"NSString",R,V_variantString
versionNumberString
T@"NSString",R,N
versionString
debug_fatpack
Unrecognized profile number 
TB,V_isInputSizeLowerBoundOnly
TI,V_inputSize
numberOfClasses
SVM has invalid number of support vectors or clases
engineName
Error creating Core ML custom layer implementation from factory for layer "
Core ML custom Layer implementation '
' does not coform to the MLCustomLayer protocol
Error getting Core ML custom layer output shapes for layer "
Evaluation on Core ML custom layer "
" called before the layer is constructed.
Error evaluating Core ML custom layer "
" on CPU.
' does not conform to the MLCustomLayer protocol'
Error initializing Core ML custom layer implementation with parameter dictionary for layer "
Error setting weights in Core ML custom layer "
" on GPU.
className
T@"NSString",R,N,V_className
customImpl
T@"NSObject<MLCustomLayer>",&,N,V_customImpl
Feature '%@' not provided.
Feature type %@ cannot be vectorized
Failed to vectorize %@ (%p)
Internal programming error.
Incorrect 'doubleVector' length of %@ (expected %@)
featureNames
T@"NSSet",R,N
first
T@"<MLFeatureProvider>",&,N,V_first
second
T@"<MLFeatureProvider>",&,N,V_second
Interface type is not an TreeEnsembleRegressor
Could not construct tree ensemble compiler.
Internal error: model too large to be compiled.
Dimension must equal one when using scalarRegress.
%@ %@
dictionary
INVALID
32RGBA
32BGRA
32ARGB
OneComponent8
24RGB
24BGRA
Unsupported (%@)
32BGRA or 32ARGB
Image constraint can not accept missing values.
Image is not expected type %@, instead is %@
%@, %@ x %@
Grayscale
Color
imageHeight
TQ,R
imageWidth
pixelType
TI,R,V_pixelType
osType
TL,R
Ti,R,N,V_pixelsHigh
Ti,R,N,V_pixelsWide
pixelFormatType
TL,R,N
sizeConstraint
T@"MLImageSizeConstraint",R,N,V_sizeConstraint
model.mlmodel
mlmodelc
%@ does not exist
(Loaded)
(Failed Load)
(Not loaded)
Model is not a classifier.
MLModelAsset: classifierWithError: load failed.
Model is not a regressor.
ranLoad
TB,V_ranLoad
asset
T@"NSObject<MLModeling>",&,V_asset
loadConfiguration
T@"MLModelConfiguration",R,N,V_loadConfiguration
compiledURL
T@"NSURL",R,V_compiledURL
T@"<MLModeling>",R,N
regressor
T@"<MLRegressor>",R,N
classifier
T@"<MLClassifier>",R,N
%@ : %@
Dictionary keys must be NSStrings or NSNumbers.
Object not consistent with type supplied
Attempting to hash an MLFeatureValue that is not an image or multi array.
value
T@,&,V_value
objectValue
T@"NSObject",&,N,V_objectValue
undefined
TB,R,N,GisUndefined,V_undefined
int64Value
Tq,R,N
doubleValue
Td,R,N
stringValue
T@"NSString",R,C,N
multiArrayValue
T@"MLMultiArray",R,N
dictionaryValue
T@"NSDictionary",R,N
imageBufferValue
T^{__CVBuffer=},R,N
sequenceValue
T@"MLSequence",R,N
_MLVNScenePrintCustomModel
MLScenePrintRequestRevision
MLScenePrintConfiguration
ScenePrint not available on this version
Must only have one input image feature
Must only have one output multiarray feature
Must allow %lu-element vector as output
v8@?0^v4
Input image feature '%@' not found
T@"MLModelDescription",R,N,V_modelDescription
scenePrintRequestRevision
Ti,R,N,V_scenePrintRequestRevision
configuration
T@"MLModelConfiguration",R,N,V_configuration
_MLNLPWordTaggingModel
Must only have three sequence output features
initialization of sequence model with model data failed
/System/Library/Frameworks/Vision.framework/Vision
VNScenePrintsFromPixelBuffers
VNScenePrintsFromPixelBuffersUsesCPUOnly
VNElementCountForScenePrintRequestRevision
VNLengthInBytesForScenePrintRequestRevision
scenePrintsFromPixelBuffersImpl
T^?,R,N,V_scenePrintsFromPixelBuffersImpl
scenePrintsFromPixelBuffersUsesCPUOnlyImpl
T^?,R,N,V_scenePrintsFromPixelBuffersUsesCPUOnlyImpl
scenePrintElementCountImpl
T^?,R,N,V_scenePrintElementCountImpl
scenePrintLengthImpl
T^?,R,N,V_scenePrintLengthImpl
valid
TB,R,N,GisValid,V_valid
Interface type is not an TreeEnsembleClassifier
Could not construct tree ensemble regressor.
INTERNAL ERROR -- feature not present that should have been.
Incorrect number of classes given (TreeEnsembleClassifier).
URL has nil fileSystemRepresentation
Nothing found at %@
Unable to extract model type from stream in compiled model: %@
No known class for loading model type %@
IO Error loading model from compiled model archive: %@
Loading class must conform to serializable protocols
MLModelType_pipelineClassifier
MLModelType_pipelineRegressor
MLModelType_pipeline
MLModelType_glmRegressor
MLModelType_supportVectorRegressor
MLModelType_treeEnsembleRegressor
MLModelType_neuralNetworkRegressor
MLModelType_bayesianProbitRegressor
MLModelType_glmClassifier
MLModelType_supportVectorClassifier
MLModelType_treeEnsembleClassifier
MLModelType_neuralNetworkClassifier
MLModelType_neuralNetwork
MLModelType_customModel
MLModelType_oneHotEncoder
MLModelType_imputer
MLModelType_featureVectorizer
MLModelType_dictVectorizer
MLModelType_scaler
MLModelType_categoricalMapping
MLModelType_normalizer
MLModelType_arrayFeatureExtractor
MLModelType_nonMaximumSuppression
MLModelType_identity
MLModelType_textClassifier
MLModelType_wordTagger
MLModelType_visionFeaturePrint
Expected feature of type %@ but got %@
Feature description does not allow missing %@ values
%@ : Dictionary (%@)%@
%@ : Image (%@)%@
%@ : MultiArray (%@)%@
%@ : Sequence (%@)%@
%@ : %@%@
valueConstraints
T@"NSDictionary",&,V_valueConstraints
multiArrayConstraintCached
T@"MLMultiArrayConstraint",R,N,V_multiArrayConstraintCached
imageConstraintCached
T@"MLImageConstraint",R,N,V_imageConstraintCached
dictionaryConstraintCached
T@"MLDictionaryConstraint",R,N,V_dictionaryConstraintCached
sequenceConstraintCached
T@"MLSequenceConstraint",R,N,V_sequenceConstraintCached
T@"NSString",R,C,N,V_name
optional
TB,R,N,GisOptional,V_optional
version
Ti,N,V_version
postVisionFeaturePrintModel
T@"MLModel",&,N,V_postVisionFeaturePrintModel
.model%lluv%@
Failed to evaluatue model %@ in pipeline
Failed to carry forward results for model %@ in pipeline
models
T@"NSArray",R,V_models
Input feature length mismatch. Got features of length %d expected length of at least %d
Input feature length mismatch. Got features of length %d expected length of %d
T@"MLSVREngine",&,V_engine
Input feature length mismatch. Got features of length %d expected length %d
frameworkVersionNumber
T@"NSNumber",C,N,V_frameworkVersionNumber
strides must be 
 elements for shape
Shape must have at least one element
attribute
children
branch
branchValue
model.pb
attributes.gk
model.mlmodelc
_attributes
T@"NSMutableArray",&,N,V__attributes
_objectStore
T@"NSMutableOrderedSet",&,N,V__objectStore
values
T@"NSArray",R,N,V_values
stringValues
int64Values
sequence
T@"MLSequence",R,N,V_sequence
featureValues
validateDataTransformDescription: Invalid FeatureType %@
T@"NSDictionary",R,V_inputDescription
T@"NSDictionary",R,V_outputDescription
T@"NSOrderedSet",R,V_inputFeatureNames
T@"NSOrderedSet",R,V_outputFeatureNames
T@"NSString",R,V_predictedFeatureName
T@"NSString",R,V_predictedProbabilitiesName
predictedValueFeatureDescription
T@"MLFeatureDescription",R
predictedClassFeatureDescription
classProbabilityFeatureDescription
Regressor must specify predictedValueOutput.
Classifier must specify predictedClassOutput and/or probabilityOutput
validRegressorInterface
TB,R,GisValidRegressorInterface
validClassifierInterface
TB,R,GisValidClassifierInterface
shortDescription
license
author
dryRun
TB,V_dryRun
platform
T@"NSString",&,V_platform
platformVersion
T@"NSString",&,V_platformVersion
outputFiles
T@"NSArray",&,V_outputFiles
compiler error: 
Error reading protobuf spec. %s
%@ No known class for compiling model type %@
%@ Invalid compiling class %@ for model type %@
%@ Error reading protobuf spec. %s
No known class for compiling model type %@
Invalid compiling class %@ for model type %@
model does not implement protocol MLModelSpecificationSaver
Serializing model to compiled format is not yet supported.  Try with compilerOptions=nil
Cannot determine predictedFeatureName for this classifier
Invalid classifier: predicted feature '%@' is not described as int or string
Invalid classifier: predicted probs '%@' is not described as dictionary
Predicted probabilities '%@' is of type %@ not the expected %@
coreml
com.apple.coreml
sparse features not yet supported
an error occurred when trying to create specification for BayesianProbitRegression
Missing predictionFromFeatures:error implementation
MLModel : %@ modelDescription: %@
T@"MLModelDescription",&,N,V_modelDescription
T@"MLModelConfiguration",&,N,V_configuration
T@"MLModelInterface",R,V_interface
T@"MLModelMetadata",R,V_metadata
Initialization of sceneprint parameters failed
scenePrintVersion
Ti,V_scenePrintVersion
Initialization of image feature extractor parameters failed
featureExtractorParameters
T@,R,V_featureExtractorParameters
Invalid parameters for vision feature print
Model type is not a vision feature print
Model description is invalid
Vision framework not available on this OS version
Feature extractor type not set
parameters
T@"MLAppleImageFeatureExtractorParameters",R,V_parameters
com.apple.CoreML
predictedValue
T@"MLMultiArray",R,V_predictedValue
additionalFeatures
T@"<MLFeatureProvider>",R,V_additionalFeatures
regress:error must be implemented by derived class!
Inconsistent value types in array
Cannot form description from nothing
Inconsistent value constraints in array
Image found with unsupported pixel type
.values
MultiArray
Dictionary
Image
Sequence
Invalid
UnknownValue
Illegal value in MLFeatureType enum
v16@?0@"NSNumber"4I8^B12
A model for tagging words constructed in memory
Input text
labels
Output labels
locations
Output locations
lengths
Output lengths
Unable to save model to %@. %s
A model for classifying sentences constructed in memory
Input sentence
Output label
Execution Profile not recognized.
ERROR: profile=
; idx=
; ref_value=
; pred=
Validation failure loading ML tree model; possibly corrupt image.
Feature description 
 must specify a valid feature type.
Description of multiarray feature '
' has an invalid shape. Element 
 has non-positive value 
Description of dictionary feature '
' must contain a key type of either Int64 or String.
Description of image feature '
' has missing or non-positive width 
' has missing or non-positive height 
' has missing or invalid colorspace. It must be RGB, BGR or GRAYSCALE.
Feature description has an unspecified or invalid type for feature '
T@"NSDictionary",&,N,V_dictionary
T@"MLSVMEngine",&,V_engine
predictedClass
T@"MLFeatureValue",R,V_predictedClass
classProbability
T@"NSDictionary",R,V_classProbability
predictedClassFeatureType
Ti,R,V_predictedClassFeatureType
Initialization of Text classifier parameters failed
revision
TI,V_revision
language
T@"NSString",&,V_language
inputFeatureName
T@"NSString",&,V_inputFeatureName
outputFeatureName
T@"NSString",&,V_outputFeatureName
modelParameterData
T@"NSData",&,V_modelParameterData
Model type is not a Word tagger
Invalid parameters for Text Classifier
parameters.modelParameterData does not exist or is not a NSData
initialization of text classifier model with model data failed
Text label
This model is a text classifier (version %lu) which classifies %@ text according to set {
This model is a text classifier (version %lu) which classifies text according to set {
T@"MLAppleTextClassifierParameters",R,V_parameters
This PipelineClassifier was created with unreleased beta CoreML and is no longer supported. Please re-create/convert your model with the the current Core ML
Invalid model type found in compiled pipeline model.
A Core ML custom neural network layer requires an implementation named '
' which was not found in the global namespace.
A custom neural network layer implementation class named '
' does not conform to the MLCustomLayer protocol.
suppressionMethod
Ti,V_suppressionMethod
iouThreshold
Td,V_iouThreshold
confidenceThreshold
Td,V_confidenceThreshold
minBoxes
TL,V_minBoxes
maxBoxes
Tl,V_maxBoxes
numClasses
TL,V_numClasses
perClass
TB,V_perClass
confidenceInputFeatureName
T@"NSString",&,V_confidenceInputFeatureName
coordinatesInputFeatureName
T@"NSString",&,V_coordinatesInputFeatureName
iouThresholdInputFeatureName
T@"NSString",&,V_iouThresholdInputFeatureName
confidenceThresholdInputFeatureName
T@"NSString",&,V_confidenceThresholdInputFeatureName
confidenceOutputFeatureName
T@"NSString",&,V_confidenceOutputFeatureName
coordinatesOutputFeatureName
T@"NSString",&,V_coordinatesOutputFeatureName
Model type is not a NonMaximumSuppression
Dimension 1 of input confidence (%d) is not consistent with the number of classes (%d)
T@"MLNonMaximumSuppressionParameters",R,V_parameters
Batch produced nil feature provider for index %@
Failed to obtain prediction for sample %@
Error opening file stream: 
File 
 already opened as stream attempted to open as mmapped file.
/System/Library/Frameworks/NaturalLanguage.framework/NaturalLanguage
NLPSequenceModelCopyPredictedTokensAndLabelsForText
NLPSequenceModelCreateWithData
NLPSequenceModelGetRevision
NLPSequenceModelIsRevisionSupported
NLPSequenceModelGetCurrentRevision
NLPClassifierModelCopyPredictedLabelForText
NLPClassifierModelCreateWithData
NLPClassifierModelGetRevision
NLPClassifierModelIsRevisionSupported
NLPClassifierModelGetCurrentRevision
Model revision %ld not supported by NaturalLanguage framwork on this OS version (support revision %ld).
NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl
T^?,R,N,V_NLPSequenceModelCopyPredictedTokensAndLabelsForTextImpl
NLPSequenceModelCreateWithDataImpl
T^?,R,N,V_NLPSequenceModelCreateWithDataImpl
NLPSequenceModelGetRevisionImpl
T^?,R,N,V_NLPSequenceModelGetRevisionImpl
NLPSequenceModelIsRevisionSupportedImpl
T^?,R,N,V_NLPSequenceModelIsRevisionSupportedImpl
NLPSequenceModelGetCurrentRevisionImpl
T^?,R,N,V_NLPSequenceModelGetCurrentRevisionImpl
NLPClassifierModelCopyPredictedLabelForTextImpl
T^?,R,N,V_NLPClassifierModelCopyPredictedLabelForTextImpl
NLPClassifierModelCreateWithDataImpl
T^?,R,N,V_NLPClassifierModelCreateWithDataImpl
NLPClassifierModelGetRevisionImpl
T^?,R,N,V_NLPClassifierModelGetRevisionImpl
NLPClassifierModelIsRevisionSupportedImpl
T^?,R,N,V_NLPClassifierModelIsRevisionSupportedImpl
NLPClassifierModelGetCurrentRevisionImpl
T^?,R,N,V_NLPClassifierModelGetCurrentRevisionImpl
Error reading from archive.
Error writing to archive.
classifyTopK
TI,V_classifyTopK
useCPUOnly
maxComputationBatchSize
TI,V_maxComputationBatchSize
usesCPUOnly
TB,N,V_usesCPUOnly
Initialization of word tagger parameters failed
tokensOutputFeatureName
T@"NSString",&,V_tokensOutputFeatureName
tokenTagsOutputFeatureName
T@"NSString",&,V_tokenTagsOutputFeatureName
tokenLocationsOutputFeatureName
T@"NSString",&,V_tokenLocationsOutputFeatureName
tokenLengthsOutputFeatureName
T@"NSString",&,V_tokenLengthsOutputFeatureName
tagNames
T@"NSArray",&,V_tagNames
Model type is not a word tagger
Invalid parameters for Word Tagger
initialization of word tagger model with model data failed
Token tags
Token lengths
Token locations
Tokens
This model is a word tagger (version %lu) which tags %@ words according to set {
This model is a word tagger (version %lu) which tags words according to set {
T@"MLAppleWordTaggerParameters",R,V_parameters
Feature '%@' is not provided
Cannot merge batch of size %@ with batch of size %@
T@"<MLBatchProvider>",&,N,V_first
T@"<MLBatchProvider>",&,N,V_second
Invalid window starting at %@ of length %@ for batch size %@
fullBatch
T@"<MLBatchProvider>",&,N,V_fullBatch
startIndex
Ti,N,V_startIndex
windowLength
Ti,N,V_windowLength
indices
T@"NSArray",&,N,V_indices
Expected to vectorize into matrix, but was passed a %@ multiarray
Row count of matrix (%@) does not match batch size (%@)
Interface type is not an Support Vector Classifier
Only integer values with magnitude less than 2^48 are supported in the imputer.
imputer
MLimputer
imputed feature value not set.
Invalid combination of input/output/feature value types.
Invalid combination of replace value type and input/output/feature value types.
imputeValue
T@"MLFeatureValue",R,N,V_imputeValue
replaceValue
T@"MLFeatureValue",R,N,V_replaceValue
spec
MLSequenceConstraint cannot check undefined values
MLSequenceConstraint only allows MLSequence values
MLSequenceConstraint count constraint does not allow count of %@
MLSequenceConstraint only allows sequence value of type %@. This sequence is type %@
Value at index %d of sequence is not allowed
valueDescription
T@"MLFeatureDescription",R,N,V_valueDescription
countRange
T{_NSRange=II},R,N,V_countRange
Unsupported key type for dictionary feature
Unsupported sequence type
Could not save MLModelDescription to MLModelSpecification
Error opening file 
Error reading file statistics of 
: not a regular file.
: error opening mmap: 
: error unmapping memory; msg=
: Error closing file; msg=
name: %@, version: %@ author: %@ description: %@ creatorDefined: %@
T@"NSString",R,V_name
T@"NSString",R,V_shortDescription
T@"NSString",R,V_versionString
T@"NSString",R,V_author
T@"NSString",R,V_license
creatorDefined
T@"NSDictionary",R,V_creatorDefined
feature vectorizer
Expected value for feature '%@'.
MLFeatureVectorizer: Array length incorrect.
MLFeatureVectorizer: Dictionary key type must be NSNumber.
MLFeatureVectorizer: Dictionary index out of range.
MLFeatureVectorizer: Incorrect Type.
MLFeatureVectorizer: Dict key type must be NSNumber.
MLFeatureVectorizer: Dict idx out of range.
columnNameEncoding
T@"NSArray",R,N,V_columnNameEncoding
dimensionEncoding
T@"NSArray",R,N,V_dimensionEncoding
dict vectorizer
MLDictVectorizer
Invalid input description.
Invalid output description.
Expected input column '%@ not present.
Type of input not dictionary as expected.
categoryName
T@"NSOrderedSet",R,N,V_categoryName
normalizer
MLNormalizer
norm
Ti,R,N,V_norm
categorical mapping
MLCategoricalMapping: Unknown input value.
mapping
T@"NSDictionary",R,N,V_mapping
valueOnUnknown
T@"MLFeatureValue",R,N,V_valueOnUnknown
scaler
shiftValue
T@"MLFeatureValue",R,N,V_shiftValue
scaleValue
T@"MLFeatureValue",R,N,V_scaleValue
one hot encoder
MLOneHotEncoder
%@: Output description type must be MLTypeDictionary (ouputSparse On) or                       MLFeatureTypeMultiArray (ouputSparse Off) 
MLOneHotEncoder: unknown category %@, expected one of %@
featureEncoding
T@"NSOrderedSet",R,N,V_featureEncoding
ouputSparse
TB,R,N,V_ouputSparse
handleUnknown
TB,R,N,V_handleUnknown
restrictNeuralNetworksToUseCPUOnly
TB,V_restrictNeuralNetworksToUseCPUOnly
isNeuralNetworkGPUPathForbidden
TB,R,N,V_isNeuralNetworkGPUPathForbidden
Could not save BOPR model to MLModelSpecification
Interface type is not a Bayesian Online Probit Regressor
no features
require feature type of MLMultiArray with one of Int32 values
incorrect number of features: expected %d but got %d
invalid prediction feature type
invalid prediction features
updateModelFromFeatures failed
mapStrLabelToIndex
T{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}},N,V_mapStrLabelToIndex
mapIntLabelToIndex
T{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >={__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >=L}}},N,V_mapIntLabelToIndex
iter
T{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, int> >={__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, int>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}},N,V_iter
iterEnd
T{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, int> >={__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, int>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}},N,V_iterEnd
T{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, int> >={__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, int>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}},N,V_iter
T{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, int> >={__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, int>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}},N,V_iterEnd
MultiArray dataType should be %@ but is %@
MultiArrayConstraint cannot check undefined values
MultiArrayConstraint only allows MultiArrays
Neural network model expects vector inputs, but non-unit height or width dimensions were provided.
Neural Network inputs can only be of size 1, 3, or 5.
%@, %@
Ti,R,N,V_dataType
shapeConstraint
T@"MLMultiArrayShapeConstraint",R,N,V_shapeConstraint
Image width (%@) is not in allowed range (%@..%@)
Image height (%@) is not in allowed range (%@..%@)
Image size %@ not in allowed set of image sizes
imageSizeSet
T@"NSOrderedSet",R,N,V_imageSizeSet
pixelsWideRange
T{_NSRange=II},R,N,V_pixelsWideRange
pixelsHighRange
T{_NSRange=II},R,N,V_pixelsHighRange
enumeratedImageSizes
array feature extractor
arrayFeatureExtractor
got nil array input to MLArrayFeatureExtractor predict:error:
Lossy cast to integer by ArrayFeatureExtractor; use double as output type.
Invalid output type of ArrayFeatureExtractor.
arrayColumnName
T@"NSString",R,N,V_arrayColumnName
extractIndices
T@"NSArray",R,N,V_extractIndices
outputType
Ti,R,N,V_outputType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/deps/protobuf/src/google/protobuf/arena.cc
CHECK failed: (n) <= (std::numeric_limits<size_t>::max() - kHeaderSize): 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/deps/protobuf/src/google/protobuf/io/coded_stream.cc
A protocol message was rejected because it was too big (more than 
 bytes).  To increase the limit (or to disable these warnings), see CodedInputStream::SetTotalBytesLimit() in google/protobuf/io/coded_stream.h.
CHECK failed: (buffer_size) >= (0): 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/deps/protobuf/src/google/protobuf/stubs/common.cc
This program requires version 
 of the Protocol Buffer runtime library, but the installed version is 
.  Please update your library.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
This program was compiled against version 
 of the Protocol Buffer runtime library, which is not compatible with the installed version (
).  Contact the program author for an update.  If you compiled the program yourself, make sure that your headers are from the same version of Protocol Buffers as your link-time library.  (Version verification failed in "
%d.%d.%d
INFO
WARNING
ERROR
FATAL
[libprotobuf %s %s:%d] %s
pthread_mutex_lock: 
pthread_mutex_unlock: 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/deps/protobuf/src/google/protobuf/wire_format_lite.cc
CHECK failed: (value.size()) <= (kint32max): 
parsing
serializing
 '%s'
String field
 contains invalid 
UTF-8 data when 
 a protocol 
buffer. Use the 'bytes' type if you intend to send raw 
bytes. 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/deps/protobuf/src/google/protobuf/io/zero_copy_stream_impl_lite.cc
CHECK failed: (last_returned_size_) > (0): 
BackUp() can only be called after a successful Next().
CHECK failed: (count) <= (last_returned_size_): 
CHECK failed: (count) >= (0): 
CHECK failed: backup_bytes_ == 0 && buffer_.get() != NULL: 
 BackUp() can only be called after Next().
CHECK failed: (count) <= (buffer_used_): 
 Can't back up over more bytes than were returned by the last call to Next().
 Parameter to BackUp() can't be negative.
CHECK failed: (backup_bytes_) == (0): 
CHECK failed: (buffer_used_) == (buffer_size_): 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/deps/protobuf/src/google/protobuf/io/zero_copy_stream.cc
This ZeroCopyOutputStream doesn't support aliasing. Reaching here usually means a ZeroCopyOutputStream implementation bug.
AuthenticAMD
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/deps/protobuf/src/google/protobuf/repeated_field.cc
CHECK failed: (new_size) <= ((std::numeric_limits<size_t>::max() - kRepHeaderSize) / sizeof(old_rep->elements[0])): 
Requested size is too large to fit into size_t.
(cannot determine missing fields for lite message)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/deps/protobuf/src/google/protobuf/message_lite.cc
CHECK failed: !coded_out.HadError(): 
Exceeded maximum protobuf size of 2GB: 
parse
Can't 
 message of type "
" because it is missing required fields: 
CHECK failed: (byte_size_before_serialization) == (byte_size_after_serialization): 
 was modified concurrently during serialization.
CHECK failed: (bytes_produced_by_serialization) == (byte_size_before_serialization): 
Byte size calculation and serialization were inconsistent.  This may indicate a bug in protocol buffers or it may be caused by concurrent modification of 
This shouldn't be called if all the sizes are equal.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/CategoricalMapping.pb.cc
CoreML.Specification.CategoricalMapping.strValue
CoreML.Specification.CategoricalMapping
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/Model.pb.cc
CoreML.Specification.PipelineClassifier
CoreML.Specification.PipelineRegressor
CoreML.Specification.FeatureDescription.name
CoreML.Specification.FeatureDescription.shortDescription
CoreML.Specification.FeatureDescription
CoreML.Specification.Metadata.shortDescription
CoreML.Specification.Metadata.versionString
CoreML.Specification.Metadata.author
CoreML.Specification.Metadata.license
CoreML.Specification.Metadata.UserDefinedEntry.key
CoreML.Specification.Metadata.UserDefinedEntry.value
CoreML.Specification.ModelDescription.predictedFeatureName
CoreML.Specification.ModelDescription.predictedProbabilitiesName
CoreML.Specification.ModelDescription
Model specification version field missing or corrupt.
The .mlmodel supplied is of version 
, intended for a newer version of Xcode. This version of Xcode supports model version 
 or earlier.
Model did not specify a valid model-parameter type.
Dimension size must be greater tha zero.
Int64 class labels must be supplied for SVM classifier.
coefficient array must be size numberOfClasses - 1 (
). Instead it is size 
Must specify sparse or dense support vectors
numberOfSupportVectoresPerClass array must be size numberOfClasses 
 instead it is size 
sum of numberOfSupportVectorsPerClass 
 must sum to total number of support vectors 
Incorrect number of coefficients: There should be 
 not 
probA and probB must be same size
Expected length of probA is number of class pairs: 
The number of coefficients must match the number of support vectors.
Gamma must be greater than or equal to zero
Degree must be greater than or equal to zero
You must specify a supported kernel type
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/Identity.pb.cc
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/VisionFeaturePrint.pb.cc
CoreML.Specification.CoreMLModels.VisionFeaturePrint.Scene
CoreML.Specification.CoreMLModels.VisionFeaturePrint
Size range is invalid (
Feature description must have a non-empty name.
' has enumerated zero permitted sizes.
' has enumerated shapes with zero dimensions.
' has a default shape specified 
 which is not within the allowed enumerated shapes specified.
' has an invalid range for dimension 
' has a default 
-d shape but a 
-d shape range
' has a default shape that is out of the specified shape range
' has missing shape constraints.
' has an invalid or unspecified dataType. It must be specified as DOUBLE, FLOAT32 or INT32
' has a default size of 
 which is not within the allowed enumerated sizes specified.
' has an invalid flexible width range. 
' has an invalid flexible height range. 
' default width 
 is not within specified flexible width range
' default height 
 is not within specified flexible height range
Sequence types are only valid in specification verison >= 
. This model has version 
Description of sequence feature '
' has invalid allowed sizes. 
' has invalid or missing type. Only Int64 and String sequences are currently supported
Models must have one or more inputs.
Models must have one or more outputs.
Specification is missing regressor predictedFeatureName.
At least one feature for a neural network must NOT be optional.
Features cannot be optional to this type of model.
Expected feature '
' to the model is not present in the model description.
Unsupported type "
" for feature "
". Should be one of: 
MLFeatureTypeType_int64Type
MLFeatureTypeType_doubleType
MLFeatureTypeType_stringType
MLFeatureTypeType_imageType
MLFeatureTypeType_multiArrayType
MLFeatureTypeType_dictionaryType
MLFeatureTypeType_sequenceType
For this neural network classifier, the probabilities are obtained from the layer '
' which was not found in the network.
Output layer '
' is not produced by any layer of the neural network.
Neural Network outputs must be either an image or MLMultiArray.
Interface specifies output '
' which is not produced by any layer in the neural network.
Neural networks require at least one input.
Neural networks produce at least one output.
Neural networks require at least one non-optional input.
Neural Networks require inputs to be images or MLMultiArray.
__input
Input MLMultiArray to neural networks must have dimension 1 (vector) or 3 (image-like arrays).
Layer '
' consumes an input named '
' which is not present in this network.
' produces an output named '
' which is also an output produced by the layer '
Error determining network blob shapes: 
Padding type for convolution layer '
' is not set.
Convolution layer '
'  has invalid weights/bias fields.
Convolution layer 
has unmatched precisions of weights/bias They should either be half or full precision.
Deconvolution layer '
' has weight matrix of size 
 to encode a 
 convolution.
Layer 
has not specified weights.
' has a bias vector of size 
 but should be 
has not specified bias.
' of type 
 has 
 inputs but expects exactly 
 inputs but expects at least 
 inputs but expects at most 
 outputs but expects exactly 
 outputs but expects at least 
 outputs but expects at most 
' has incorrect 
 size 
 (expected 
' has insufficient bytes for quantized 
 with 
units.
' has invalid quantization parameters for quantized 
' has unspecified 
' has empty 
Inner product layer '
' has invalid weights/bias fields.
 has incorrect weight matrix size 
 inner product.
' has incorrect bias vector size 
Batchnorm layer '
' parameters have values for both full and half precision. Parameters should either be specified in half or full precision, mixed parameters are not supported.
' is missing mean and variance.
Nonlinearity type 
 has inconsistent weight parameter types.
 is not supported in this version of CoreML.
MLActivationParamsNonlinearityType_linear
MLActivationParamsNonlinearityType_ReLU
MLActivationParamsNonlinearityType_leakyReLU
MLActivationParamsNonlinearityType_thresholdedReLU
MLActivationParamsNonlinearityType_PReLU
MLActivationParamsNonlinearityType_tanh
MLActivationParamsNonlinearityType_scaledTanh
MLActivationParamsNonlinearityType_sigmoid
MLActivationParamsNonlinearityType_sigmoidHard
MLActivationParamsNonlinearityType_ELU
MLActivationParamsNonlinearityType_softsign
MLActivationParamsNonlinearityType_softplus
MLActivationParamsNonlinearityType_parametricSoftplus
Padding type for the pooling layer '
Padding layer 
 specifies 
 padding amounts but it must either specify 2 (for x and y axes), or 0 for the default values.
 padding type is not set.
Parameter 'K' for the LRN layer '
' must be positive.
Scaling factor in the upsampling layer '
' must be a vector of size 2 (i.e height, width) but is a vector of size 
Bias product layer '
' has both full precision and half precision weights and/or bias fields populated
Bias layer '
' cannot be 
 dimensional. Must be 1D, 2D, or 3D.
Reshape layer '
' target shape must be 3D or 4D.
Permute layer '
' must have 4D axis parameters.
Load constant layer '
' has both full precision and half precision weight fields populated
' must be a 3D constant.
Scale layer '
' has invalid scale/bias fields.
' has invalid scale/bias fields. Field value types should match and should either be half or full precision.
The shape vector for the scale layer '
' is 
 dimensional but should be 1D or 3D.
The bias vector for scale layer '
 dimensional but should be either 1D or 3D.
Simple recurrent layer '
' has invalid weightMatrix/recusionMatrix/Bias fields.
' has invalid weightMatrix/recusionMatrix/Bias fields. Field value types should match and should either be half or full precision.
Recurrent non-linearity type 
GRU layer '
' has invalid weight/recursion matrix or bias fields. Field value types should match and should be either half or full precision
Unidirectional LSTM layer:
 must provide 3 activations
block input gate recursion matrix
LSTM weight parameters have inconsistent field value types. Types should match and should be either half or full precision
Bidirectional LSTM layer:
 forward lstm must provide 3 activations
 backward lstm must provide 3 activations
forward forget gate weight matrix
forward block input gate weight matrix
forward output gate weight matrix
forward input gate recursion matrix
forward forget gate recursion matrix
forward block input gate recursion matrix
forward output gate recursion matrix
backward input gate weight matrix
backward forget gate weight matrix
backward block input gate weight matrix
backward output gate weight matrix
backward input gate recursion matrix
backward forget gate recursion matrix
backward block input gate recursion matrix
backward output gate recursion matrix
forward forget gate bias vector
forward block input bias vector
forward output gate bias vector
backward input gate bias vector
forward input gate peephole vector
forward forget gate peephole vector
forward output gate peephole vector
backward input gate peephole vector
backward forget gate peephole vector
backward output gate peephole vector
cropAmounts parameter for the crop layer '
' is of length 
 but requires exactly two crop constraints (for X,Y axes).
Offset parameter for the crop layer '
 but requires exactly two offsets (for X,Y axes).
Embedding layer '
' has invalid weights/bias fields. Field value types should match and should either be half or full precision.
Block size for layer '
' must be > 1.
Stride length for the slice layer '
Slice layer 
 has an end index before the start index.
Custom layer 
 has an empty 'className' field. This field is required in order for Core ML to link to the implementation for this custom class.
 has a weights parameter with multiple types filled in.  The WeightParams message should be treated as a oneof.
Target Size in the resize bilinear layer '
Target Size in the crop resize layer '
Unsupported layer type (
) for layer '
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/OneHotEncoder.pb.cc
CoreML.Specification.OneHotEncoder
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/TextClassifier.pb.cc
CoreML.Specification.CoreMLModels.TextClassifier.language
CoreML.Specification.CoreMLModels.TextClassifier
Convolution padding type not set
Pooling padding type not set
Reduce layer axis not set -- should have been caught in validator.
Slice layer axis incorrect -- should be caught in validator.
Layer type not found.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/Scaler.pb.cc
Weights and offsets must be the same size.
All weight coefficients must be the same size.
Invalid post evaluation transform
The number of DoubleArrays in weights must be greater than zero
The number of DoubleArrays in weights must match number of offsets
With ReferenceClass encoding the number of DoubleArrays in weights must be one less than number of classes
When using OneVsRest encoding for only two classes, the number of DoubleArrays in weights must be one
With OneVsRest encoding the number of DoubleArrays in weights must equal the number of classes
Probit post evaluation transform is only supported for binary classification
Weight DoubleArrays must have nonzero length
Weight DoubleArrays must have the same length
Classifier declared to have Int64 class labels must provide labels.
Classifier declared with Int64 class labels must provide exclusively Int64 class labels.
Classifier declared to have String class labels must provide labels.
Classifier declared with String class labels must provide exclusively String class labels.
Classifier models must provide class labels.
Specification is missing classifier predictedFeatureName
Attempting to access unbound size_t val from RangeVal.
Dividing range 
 by 0.
Constructing invalid ShapeRange with 
Constructing invalid ShapeRange unbound minimum value.
Dividing ShapeRange 
 by negative or zero value 
Invalid setLower 
 for range: 
Invalid setUpper 
Invalid setValue 
Invalid intersection between 
 and 
Attempting to constrain an input or output feature "
" with an invalid array shape constraint.
Attempting to update feature constraint 
 with a type description which is not a multi array or image.
Invalid sequence range in blob 
Invalid batch range in blob 
Invalid channel range in blob 
Invalid height range in blob 
Invalid width range in blob 
Type of input feature does not match the output type feature.
Only 1 dimensional arrays input features are supported by the imputer.
Shape of output array does not match shape of input array.
Shape of imputed array value does not match shape of input array.
Type of input feature "
" is not compatible with given imputed value type.
Type of given replace value not compatible with input feature type.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/GLMClassifier.pb.cc
CoreML.Specification.GLMClassifier.DoubleArray
CoreML.Specification.GLMClassifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/Imputer.pb.cc
CoreML.Specification.Imputer.imputedStringValue
CoreML.Specification.Imputer.replaceStringValue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/CustomModel.pb.cc
CoreML.Specification.CustomModel.CustomModelParamValue.stringValue
CoreML.Specification.CustomModel.CustomModelParamValue
CoreML.Specification.CustomModel.className
CoreML.Specification.CustomModel.ParametersEntry.key
CoreML.Specification.CustomModel.description
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/deps/protobuf/src/google/protobuf/map_entry_lite.h
CHECK failed: default_instance_ != NULL: 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/SVM.pb.cc
CoreML.Specification.LinearKernel
CoreML.Specification.PolyKernel
CoreML.Specification.SigmoidKernel
CoreML.Specification.SparseNode
CoreML.Specification.SparseVector
CoreML.Specification.SparseSupportVectors
CoreML.Specification.DenseSupportVectors
CoreML.Specification.Coefficients
CoreML.Specification.SupportVectorRegressor
CoreML.Specification.SupportVectorClassifier
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/Normalizer.pb.cc
CoreML.Specification.Normalizer
Input feature '
' was not requested by any of the input feature names (e.g. confidenceInputFeatureName).
' (as defined by confidenceInputFeatureName) to the model is not present in the model description.
' (as defined by coordinatesInputFeatureName) to the model is not present in the model description.
' was not requested by any of the output feature names (e.g. confidenceOutputFeatureName).
' (as defined by confidenceOutputFeatureName) from the model is not present in the model description.
' (as defined by coordinatesOutputFeatureName) from the model is not present in the model description.
iouThreshold must be a value between 0.0 and 1.0.
confidenceThreshold must be a non-negative value. If you do not want to eliminate any predictions based on confidence, set it to 0.0.
Input confidence must have dataType DOUBLE
Output confidence must have dataType DOUBLE
Input coordinates must have dataType DOUBLE
If shape information is provided for confidence output, 2 dimensions must be specified using either shape (deprecated) or allowedShapes.
Confidence and coordinates output shapes must be consistent (must have the same size along dimension 0).
Confidence and coordinates output shapes fexibility must both be ranges
Confidence and coordinates output shapes must be consistent (must have the same range of sizes along dimension 0).
Number of classes is not consistent for class labels (
) and dimension 1 of output confidence shape (
) and dimension 1 of output confidence shape range
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/DataStructures.pb.cc
CoreML.Specification.StringToInt64Map.MapEntry.key
CoreML.Specification.StringToInt64Map
CoreML.Specification.Int64ToStringMap.MapEntry.value
CoreML.Specification.Int64ToStringMap
CoreML.Specification.StringToDoubleMap.MapEntry.key
CoreML.Specification.StringToDoubleMap
CoreML.Specification.Int64ToDoubleMap
CoreML.Specification.StringVector.vector
CoreML.Specification.StringVector
CoreML.Specification.DoubleVector
Pipeline must contain one or more models.
Pipeline: Input '
' of model '
' not present in pipeline input or previous model.
' does not match the type previously specified by the pipeline input or the output of a previous model.
Pipeline output '
' not present in pipeline input or a contained model.
Type of pipeline output '
' does not match type produced in pipeline input.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/BayesianProbitRegressor.pb.cc
CoreML.Specification.BayesianProbitRegressor.Gaussian
CoreML.Specification.BayesianProbitRegressor.FeatureValueWeight
CoreML.Specification.BayesianProbitRegressor.FeatureWeight
CoreML.Specification.BayesianProbitRegressor.regressionInputFeatureName
CoreML.Specification.BayesianProbitRegressor.optimismInputFeatureName
CoreML.Specification.BayesianProbitRegressor.samplingScaleInputFeatureName
CoreML.Specification.BayesianProbitRegressor.samplingTruncationInputFeatureName
CoreML.Specification.BayesianProbitRegressor.meanOutputFeatureName
CoreML.Specification.BayesianProbitRegressor.varianceOutputFeatureName
CoreML.Specification.BayesianProbitRegressor.pessimisticProbabilityOutputFeatureName
CoreML.Specification.BayesianProbitRegressor.sampledProbabilityOutputFeatureName
CoreML.Specification.BayesianProbitRegressor
Model not a vision feature print.
Type for vision feature print not set
Model is not a tree ensemble.
Tree Node with TreeID=
and NodeID=
 duplicated in specification.
False child and parent have same ID (TreeID=
, NodeID=
In TreeID=
, false child of NodeID=
 is already the child of node NodeID=
True child and parent have same ID (TreeID=
, true child of NodeID=
Tree TreeID=
 has multiple root nodes: 
NodeID=
Internal error: null child node; likely specification error.
Node detected that are not connected to any single root node. Note: 
(TreeID=
Dimension of default value array (
) does not match specified output dimension (
Specified output dimension (
) does not match the given number of classes (
Error(s) in tree structure: 
FATAL: 
  FATAL: maximum number of errors reached; aborting processing.
Errors encountered during processing tree model:
Branch mode hit bad value -- this is confusing; error in validator?
Leaf Node (TreeID=
) has no evaluation value(s) specified.
) specifies evaluation value applied to dimension 
; which is out of range. Dimension must be less than 
) specifies multipule evaluation values applied to dimension 
 and NodeID=
 referenced but not declared in specification.
Model not an array feature extractor.
Exactly one input array column must be specified.
If output type is Double in interface, exactly one extraction index must be specified.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/NonMaximumSuppression.pb.cc
CoreML.Specification.NonMaximumSuppression.PickTop
CoreML.Specification.NonMaximumSuppression.confidenceInputFeatureName
CoreML.Specification.NonMaximumSuppression.coordinatesInputFeatureName
CoreML.Specification.NonMaximumSuppression.iouThresholdInputFeatureName
CoreML.Specification.NonMaximumSuppression.confidenceThresholdInputFeatureName
CoreML.Specification.NonMaximumSuppression.confidenceOutputFeatureName
CoreML.Specification.NonMaximumSuppression.coordinatesOutputFeatureName
CoreML.Specification.NonMaximumSuppression
OneHotEncoder parameter incorrect type
More model output features than the output features of the word tagger model.
Output feature '
' was not required by the output features of the word tagger model.
' (defined by tokenTagsOutputFeatureName) to the model is not present in the model description.
". Should be: 
Model output tags not set. Must have at least one tag
Model revision number not set. Must be >= 1
Model output class label not set. Must have at least one class label
Feature descriptions exceeded 
NormalizerValidator normLx invalid
Input type Int64 must output to Int64 or Double.
Only 1 dimensional arrays input features are supported by the scaler.
For input type array, specified shift values must be empty, a scalar, or a vector of the matching length.
For input type array, specified scale values must be empty, a scalar, or a vector of the matching length.
For a scalar imput type, specified shift value must be empty or a scalar.
For input type array, specified scale values must be empty or a scalar.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/FeatureVectorizer.pb.cc
CoreML.Specification.FeatureVectorizer.InputColumn.inputColumn
CoreML.Specification.FeatureVectorizer.InputColumn
CoreML.Specification.FeatureVectorizer
DictVectorizerValidator parameter not set
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/WordTagger.pb.cc
CoreML.Specification.CoreMLModels.WordTagger.language
CoreML.Specification.CoreMLModels.WordTagger.tokensOutputFeatureName
CoreML.Specification.CoreMLModels.WordTagger.tokenTagsOutputFeatureName
CoreML.Specification.CoreMLModels.WordTagger.tokenLocationsOutputFeatureName
CoreML.Specification.CoreMLModels.WordTagger.tokenLengthsOutputFeatureName
CoreML.Specification.CoreMLModels.WordTagger
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/TreeEnsemble.pb.cc
CoreML.Specification.TreeEnsembleParameters.TreeNode.EvaluationInfo
CoreML.Specification.TreeEnsembleParameters.TreeNode
CoreML.Specification.TreeEnsembleParameters
CoreML.Specification.TreeEnsembleClassifier
CoreML.Specification.TreeEnsembleRegressor
validator error: 
Invalid dictionary key type. Expected one of: {int64, string}.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/DictVectorizer.pb.cc
CoreML.Specification.DictVectorizer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/NeuralNetwork.pb.cc
CoreML.Specification.NeuralNetwork
CoreML.Specification.NeuralNetworkImageScaler
CoreML.Specification.NeuralNetworkMeanImage
CoreML.Specification.NeuralNetworkPreprocessing.featureName
CoreML.Specification.NeuralNetworkPreprocessing
CoreML.Specification.ActivationReLU
CoreML.Specification.ActivationLeakyReLU
CoreML.Specification.ActivationTanh
CoreML.Specification.ActivationScaledTanh
CoreML.Specification.ActivationSigmoid
CoreML.Specification.ActivationLinear
CoreML.Specification.ActivationSigmoidHard
CoreML.Specification.ActivationPReLU
CoreML.Specification.ActivationELU
CoreML.Specification.ActivationThresholdedReLU
CoreML.Specification.ActivationSoftsign
CoreML.Specification.ActivationSoftplus
CoreML.Specification.ActivationParametricSoftplus
CoreML.Specification.ActivationParams
CoreML.Specification.NeuralNetworkLayer.name
CoreML.Specification.NeuralNetworkLayer.input
CoreML.Specification.NeuralNetworkLayer.output
CoreML.Specification.NeuralNetworkLayer
CoreML.Specification.BorderAmounts.EdgeSizes
CoreML.Specification.BorderAmounts
CoreML.Specification.ValidPadding
CoreML.Specification.SamplingMode
CoreML.Specification.BoxCoordinatesMode
CoreML.Specification.WeightParams
CoreML.Specification.QuantizationParams
CoreML.Specification.LinearQuantizationParams
CoreML.Specification.LookUpTableQuantizationParams
CoreML.Specification.ConvolutionLayerParams
CoreML.Specification.InnerProductLayerParams
CoreML.Specification.EmbeddingLayerParams
CoreML.Specification.BatchnormLayerParams
CoreML.Specification.PoolingLayerParams.ValidCompletePadding
CoreML.Specification.PoolingLayerParams
CoreML.Specification.PaddingLayerParams.PaddingConstant
CoreML.Specification.PaddingLayerParams.PaddingReflection
CoreML.Specification.PaddingLayerParams.PaddingReplication
CoreML.Specification.PaddingLayerParams
CoreML.Specification.ConcatLayerParams
CoreML.Specification.LRNLayerParams
CoreML.Specification.SoftmaxLayerParams
CoreML.Specification.SplitLayerParams
CoreML.Specification.AddLayerParams
CoreML.Specification.MultiplyLayerParams
CoreML.Specification.UnaryFunctionLayerParams
CoreML.Specification.UpsampleLayerParams
CoreML.Specification.ResizeBilinearLayerParams
CoreML.Specification.CropResizeLayerParams
CoreML.Specification.BiasLayerParams
CoreML.Specification.ScaleLayerParams
CoreML.Specification.LoadConstantLayerParams
CoreML.Specification.L2NormalizeLayerParams
CoreML.Specification.FlattenLayerParams
CoreML.Specification.ReshapeLayerParams
CoreML.Specification.PermuteLayerParams
CoreML.Specification.ReorganizeDataLayerParams
CoreML.Specification.SliceLayerParams
CoreML.Specification.ReduceLayerParams
CoreML.Specification.CropLayerParams
CoreML.Specification.AverageLayerParams
CoreML.Specification.MaxLayerParams
CoreML.Specification.MinLayerParams
CoreML.Specification.DotProductLayerParams
CoreML.Specification.MeanVarianceNormalizeLayerParams
CoreML.Specification.SequenceRepeatLayerParams
CoreML.Specification.SimpleRecurrentLayerParams
CoreML.Specification.GRULayerParams
CoreML.Specification.LSTMParams
CoreML.Specification.LSTMWeightParams
CoreML.Specification.UniDirectionalLSTMLayerParams
CoreML.Specification.BiDirectionalLSTMLayerParams
CoreML.Specification.CustomLayerParams.CustomLayerParamValue.stringValue
CoreML.Specification.CustomLayerParams.CustomLayerParamValue
CoreML.Specification.CustomLayerParams.className
CoreML.Specification.CustomLayerParams.ParametersEntry.key
CoreML.Specification.CustomLayerParams.description
CoreML.Specification.CustomLayerParams
CoreML.Specification.NeuralNetworkClassifier.labelProbabilityLayerName
CoreML.Specification.NeuralNetworkClassifier
CoreML.Specification.NeuralNetworkRegressor
ValueOnUnknown set to string value while mapping produces int64.
ValueOnUnknown set to Int64 value while mapping produces string.
Input sequence type does not match input type 
of categorical mapping.
Output of a sequence categorical mapping must be a sequence
Output sequence type does not match input type 
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/ArrayFeatureExtractor.pb.cc
CoreML.Specification.ArrayFeatureExtractor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/GLMRegressor.pb.cc
CoreML.Specification.GLMRegressor.DoubleArray
CoreML.Specification.GLMRegressor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreML_Sim/CoreML-244.200.150.54.1/coremltools/mlmodel/build/format/FeatureTypes.pb.cc
CoreML.Specification.Int64FeatureType
CoreML.Specification.DoubleFeatureType
CoreML.Specification.StringFeatureType
CoreML.Specification.ImageFeatureType.ImageSize
CoreML.Specification.ImageFeatureType.EnumeratedImageSizes
CoreML.Specification.ImageFeatureType.ImageSizeRange
CoreML.Specification.ImageFeatureType
CoreML.Specification.ArrayFeatureType.Shape
CoreML.Specification.ArrayFeatureType.EnumeratedShapes
CoreML.Specification.ArrayFeatureType.ShapeRange
CoreML.Specification.ArrayFeatureType
CoreML.Specification.DictionaryFeatureType
CoreML.Specification.SequenceFeatureType
Setup routine not called yet for node with treeId=
, nodeID=
Setup routine called multiple times for treeId=
Should be of: 
 with data type of: 
Unsupported array type "
Unsupported array rank 
 should be in range [
MLArrayDataTypeFLOAT32
MLArrayDataTypeDOUBLE
MLArrayDataTypeINT32
CustomModel must have non-empty className.
CustomModel.parameters must have non-empty string keys.
CustomModel.parameters['
'] does not have a set value
MLClassifier
MLModeling
MLDictionaryConstraint
MLFeatureValueConstraint
NSCopying
_MLNLPSentenceClassifierModel
MLCustomModel
MLNeuralNetworkSpecification
MLNeuralNetworkEngine
MLNeuralNetwork
MLModelSpecificationLoader
NSObject
MLCompiledModelLoader
MLSpecificationCompiler
MLRegressor
MLImageSize
MLMultiArrayUtils
MLMultiArray
Attributes
PrivateConstruction
CopyingAndVectorization
ConvenientConstruction
Filling
MLMultiArrayAsNSArrayWrapper
MLMultiArrayView
Views
RawAccess
QuickLook
Utilities
MLSVREngine
ModelConstructible
ImageUtils
MLModelErrorUtils
MLDefaultCustomModelFactory
MLCustomModelFactory
MLCustomModelLoader
MLCustomModelWrapper
MLModelConfiguration
MLSVRLoader
MLArrayBatchProvider
MLBatchProvider
MLModelDescription
ModelSpecification
MLPipelineClassifier
MLMultiArrayShapeConstraint
MLObjectBoundingBoxOutputDescription
MLObjectBoundingBoxOutput
Model
MLIdentity
MLVersionInfo
MLSVMEngine
MLCustomLayer
MLCustomLayerWrapper
EspressoBrick
MLFeatureProviderUtils
MLLazyUnionFeatureProvider
MLFeatureProvider
MLNewProviderConstruction
MLTreeEnsembleRegressor
ModelAsset
MLImageConstraint
MLModelAsset
MLFeatureValue
_MLVNScenePrintCustomModel
_MLNLPWordTaggingModel
MLModelTypeRegistry
_MLVNFrameworkHandle
MLTreeEnsembleClassifier
MLLoader
MLFeatureDescription
MLModelVisionFeaturePrintInfo
MLPipeline
MLSupportVectorRegressor
MLGLMRegression
CoreMLVersion
MLGKDecisionTree
MLSequence
MLSequnceAsFeatureValueArray
MLFeatureValueAccess
MLModelInterface
FeatureAccessors
Validation
MLCompilerOptions
MLCompilerResult
MLCompiler
MLModelSpecificationSaver
MLSaver
MLLogging
MLModel
MLAppleImageFeatureExtractorScenePrintParameters
MLAppleImageFeatureExtractorParameters
MLAppleImageFeatureExtractor
MLRegressorResult
MLFeatureTypeUtils
_MLInternalNLPModelWriter
MLDictionaryFeatureProvider
NSFastEnumeration
FromGenericFeatureProvider
MLPipelineRegressor
MLSupportVectorClassifier
MLClassifierResult
MLAppleTextClassifierParameters
MLAppleTextClassifier
MLPipelineLoader
MLDefaultCustomLayerFactory
MLCustomLayerFactory
MLNonMaximumSuppressionParameters
MLNonMaximumSuppression
_MLNLPFrameworkHandle
MLPredictionOptions
MLAppleWordTaggerParameters
MLAppleWordTagger
MLBatchProviderUtils
MLLazyUnionBatchProvider
MLWindowedBatchProvider
MLIndexedBatchProvider
MLNewBatchConstruction
MLBatchCopyToMultiArray
MLSVMLoader
MLImputer
MLSupervisedOnlineUpdateOptions
MLModelIOUtils
MLGLMClassification
MLSequenceConstraint
MLModelDescriptionUtils
MLModelMetadata
MLFeatureVectorizer
MLDictVectorizer
MLModelCompilation
MLNormalizer
MLCategoricalMapping
MLScaler
MLOneHotEncoder
MLInternalSettings
MLBayesianProbitRegression
MLSupervisedOnlineUpdatable
MLProbabilityDictionary
MLStringProbabilityDictionary
MLInt64ProbabilityDictionary
MLStringProbabilityDictionaryEnumerator
MLInt64ProbabilityDictionaryEnumerator
MLMultiArrayConstraint
MLImageSizeConstraint
ClosestAllowedSize
MLArrayFeatureExtractor
@16@0:4@8^@12
@20@0:4@8@12^@16
@8@0:4
@"<MLFeatureProvider>"16@0:4@"<MLFeatureProvider>"8^@12
@"<MLFeatureProvider>"20@0:4@"<MLFeatureProvider>"8@"MLPredictionOptions"12^@16
@"<MLBatchProvider>"20@0:4@"<MLBatchProvider>"8@"MLPredictionOptions"12^@16
@"MLModelDescription"8@0:4
@"MLModelInterface"8@0:4
@"MLModelMetadata"8@0:4
@"NSArray"8@0:4
@"MLClassifierResult"20@0:4@"<MLFeatureProvider>"8@"MLPredictionOptions"12^@16
@24@0:4@8@12@16^@20
B16@0:4@8^@12
B16@0:4@"MLFeatureValue"8^@12
@12@0:4^{_NSZone=}8
@12@0:4i8
i8@0:4
@20@0:4@"MLModelDescription"8@"NSDictionary"12^@16
v8@0:4
v12@0:4@8
@"MLModelDescription"
@24@0:4@8@12@16@20
@28@0:4@8@12@16@20@24
v12@0:4i8
{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8@0:4
v20@0:4{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8
{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8@0:4
v20@0:4{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8
B8@0:4
v12@0:4B8
@"NSString"
@"NSArray"
@"NSDictionary"
{map<std::__1::basic_string<char>, bool, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, bool> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, bool> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, bool>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, bool>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"L}}}
{map<std::__1::basic_string<char>, float, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, float> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, float> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, float>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, float>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"L}}}
@24@0:4^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}8^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}12@16^@20
@20@0:4^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}8@12^@16
@28@0:4^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}8@12@16@20^@24
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
@"<MLModeling>"20@0:4^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}8@"MLModelConfiguration"12^@16
@28@0:4^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}8@"MLVersionInfo"12@"MLVersionInfo"16@"MLModelConfiguration"20^@24
@"MLCompilerResult"24@0:4^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}8^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}12@"MLCompilerOptions"16^@20
@"MLVersionInfo"20@0:4^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}8@"MLCompilerOptions"12^@16
@"MLRegressorResult"20@0:4@"<MLFeatureProvider>"8@"MLPredictionOptions"12^@16
@28@0:4@8@12@16@20^@24
B12@0:4^@8
B16@0:4B8^@12
v12@0:4I8
B24@0:4@8^{vector<std::__1::shared_ptr<unsigned char>, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}^{shared_ptr<unsigned char>}{__compressed_pair<std::__1::shared_ptr<unsigned char> *, std::__1::allocator<std::__1::shared_ptr<unsigned char> > >=^{shared_ptr<unsigned char>}}}12I16^@20
@16@0:4I8^@12
^{__CVBuffer=}20@0:4^{?=^v^v[4L][4L]IIIIIIIIIIi}8@12^@16
@20@0:4@8^@12^@16
{vector<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}{__compressed_pair<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > *, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}}}8@0:4
v20@0:4{vector<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}{__compressed_pair<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > *, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >=^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}}}8
^v8@0:4
v12@0:4^v8
{?=^vi}8@0:4
v16@0:4{?=^vi}8
{map<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8@0:4
v20@0:4{map<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8
{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8@0:4
v20@0:4{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8
{map<std::__1::basic_string<char>, MLOptionalNNInputType, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, MLOptionalNNInputType> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8@0:4
v20@0:4{map<std::__1::basic_string<char>, MLOptionalNNInputType, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, MLOptionalNNInputType> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8
{vector<bool, std::__1::allocator<bool> >=^LI{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=L}}8@0:4
v20@0:4{vector<bool, std::__1::allocator<bool> >=^LI{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >=L}}8
@"MLProbabilityDictionary"
@"NSObject<OS_dispatch_semaphore>"
@"NSObject<OS_dispatch_queue>"
{?="plan"^v"network_index"i}
{vector<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >="__begin_"^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}"__end_"^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}"__end_cap_"{__compressed_pair<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > *, std::__1::allocator<std::__1::map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > > > >="__value_"^{map<std::__1::basic_string<char>, espresso_buffer_t *, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_buffer_t *> > >}}}
{map<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, espresso_simple_image_preprocessing_params_t>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"L}}}
{map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, int> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, int>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, int>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"L}}}
{map<std::__1::basic_string<char>, MLOptionalNNInputType, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, MLOptionalNNInputType> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, MLOptionalNNInputType>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"L}}}
{vector<bool, std::__1::allocator<bool> >="__begin_"^L"__size_"I"__cap_alloc_"{__compressed_pair<unsigned long, std::__1::allocator<unsigned long> >="__value_"L}}
@16@0:4i8i12
@12@0:4r^{vector<unsigned long, std::__1::allocator<unsigned long> >=^L^L{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^L}}8
{vector<unsigned long, std::__1::allocator<unsigned long> >=^L^L{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^L}}12@0:4@8
@20@0:4@8i12^@16
@32@0:4^v8@12i16@20@?24^@28
@12@0:4L8
v16@0:4@8L12
v16@0:4@8i12
L12@0:4@8
@12@0:4@8
v16@0:4@8@12
^{MultiArrayBuffer=^^?{shared_ptr<unsigned char>=*^{__shared_weak_count}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^L^L{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^L}}{vector<unsigned long, std::__1::allocator<unsigned long> >=^L^L{__compressed_pair<unsigned long *, std::__1::allocator<unsigned long> >=^L}}iIS}
B12@0:4i8
^d8@0:4
i12@0:4i8
@24@0:4@8i12i16^@20
B20@0:4@8i12^@16
B20@0:4@8L12^@16
@12@0:4I8
@"MLMultiArray"
B16@0:4@8@12
v24@0:4@8@12^@16^@20
@28@0:4@8@12@16B20^@24
@24@0:4@8@12B16^@20
@24@0:4^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}8B12B16I20
^{svm_node=id}12@0:4I8
v20@0:4^{svm_node=id}8^d12I16
v12@0:4^{svm_node=id}8
^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}8@0:4
v12@0:4^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}8
^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}
^{__CVBuffer=}16@0:4@8^@12
^{__CVBuffer=}20@0:4@8B12^@16
@24@0:4i8@12@16*20
@20@0:4i8@12*16
@20@0:4i8@12@16
@16@0:4i8@12
@16@0:4@8@12
@"NSObject<MLCustomModel>"24@0:4@"NSString"8@"MLModelDescription"12@"NSDictionary"16^@20
@16@0:4^{CustomModel=^^?{InternalMetadataWithArenaLite=^v}{MapFieldLite<google::protobuf::internal::MapEntryLite<std::__1::basic_string<char>, CoreML::Specification::CustomModel_CustomModelParamValue, google::protobuf::internal::WireFormatLite::TYPE_STRING, google::protobuf::internal::WireFormatLite::TYPE_MESSAGE, 0>, std::__1::basic_string<char>, CoreML::Specification::CustomModel_CustomModelParamValue, google::protobuf::internal::WireFormatLite::TYPE_STRING, google::protobuf::internal::WireFormatLite::TYPE_MESSAGE, 0>=^{Arena}{Map<std::__1::basic_string<char>, CoreML::Specification::CustomModel_CustomModelParamValue>=^{Arena}i^{InnerMap}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}i}8^@12
@20@0:4@8@12@16
@"NSObject<MLCustomModel>"
@"<MLFeatureProvider>"12@0:4i8
@12@0:4^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}8
@12@0:4^{_MLModelMetadataSpecification={shared_ptr<CoreML::Specification::Metadata>=^{Metadata}^{__shared_weak_count}}}8
@16@0:4^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}8^@12
@"NSOrderedSet"
@"MLPipeline"
@20@0:4^{_MLModelSpecification=}8@12^@16
@36@0:4q8q16q24@32
q8@0:4
@28@0:4^{svm_model={svm_parameter=iiidddddi^i^dddii}ii^^{svm_node}^^d^d^d^d^i^i^ii}8B12B16I20@24
v16@0:4@8^d12
B20@0:4@8@12^@16
B24@0:4@8@12@16^@20
@16@0:4@"NSDictionary"8^@12
B16@0:4@"NSArray"8^@12
@"NSArray"16@0:4@"NSArray"8^@12
B20@0:4@"NSArray"8@"NSArray"12^@16
B24@0:4@"<MTLCommandBuffer>"8@"NSArray"12@"NSArray"16^@20
i12@0:4*8
v16@0:4^v8L12
v20@0:4@8@12@16
@"NSArray"16@0:4@"NSArray"8@"NSDictionary"12
@12@0:4@"NSDictionary"8
v16@0:4@"NSArray"8@"NSArray"12
v20@0:4@"<MTLCommandBuffer>"8@"NSArray"12@"NSArray"16
@"NSObject<MLCustomLayer>"
i16@0:4@8^@12
B24@0:4@8^d12I16^@20
B32@0:4@8@12^d16I20I24^@28
@"MLFeatureValue"12@0:4@"NSString"8
@"NSSet"8@0:4
@"<MLFeatureProvider>"
r*8@0:4
d16@0:4@8^@12
d12@0:4^d8
v16@0:4^d8^d12
{shared_ptr<Archiver::MMappedFile>="__ptr_"^{MMappedFile}"__cntrl_"^{__shared_weak_count}}
{vector<unsigned char, std::__1::allocator<unsigned char> >="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >="__value_"*}}
@16@0:4^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}8^@12
B20@0:4^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}8^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}12^@16
B16@0:4L8I12
@24@0:4i8i12I16@20
@20@0:4i8i12I16
I12@0:4L8
L8@0:4
Q8@0:4
@"MLImageSizeConstraint"
@16@0:4^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}8^@12
@12@0:4^@8
@"NSURL"
@"NSObject<MLModeling>"
@"MLModelConfiguration"
@16@0:4q8
@16@0:4d8
@12@0:4^{__CVBuffer=}8
@20@0:4i8@12^@16
@16@0:4@8i12
d8@0:4
^{__CVBuffer=}8@0:4
@"NSObject"
@16@0:4@8I12
#12@0:4i8
@28@0:4^{__CVBuffer=}8i12@16B20^@24
I12@0:4i8
^?8@0:4
@20@0:4^d8L12^@16
{vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >="__begin_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}"__end_cap_"{__compressed_pair<std::__1::basic_string<char> *, std::__1::allocator<std::__1::basic_string<char> > >="__value_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}}
{vector<long long, std::__1::allocator<long long> >="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long long *, std::__1::allocator<long long> >="__value_"^q}}
@20@0:4^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}8@12^@16
@24@0:4@8i12B16@20
@"MLMultiArrayConstraint"
@"MLImageConstraint"
@"MLDictionaryConstraint"
@"MLSequenceConstraint"
@"MLModel"
@24@0:4r^{RepeatedPtrField<CoreML::Specification::Model>=^{Arena}ii^{Rep}}8^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}12@16^@20
@32@0:4^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}8@12@16@20@24^@28
@"MLSVREngine"
{vector<double, std::__1::allocator<double> >="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::__1::allocator<double> >="__value_"^d}}
{vector<std::__1::vector<double, std::__1::allocator<double> >, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >="__begin_"^{vector<double, std::__1::allocator<double> >}"__end_"^{vector<double, std::__1::allocator<double> >}"__end_cap_"{__compressed_pair<std::__1::vector<double, std::__1::allocator<double> > *, std::__1::allocator<std::__1::vector<double, std::__1::allocator<double> > > >="__value_"^{vector<double, std::__1::allocator<double> >}}}
{shared_ptr<CoreML::Specification::Model>="__ptr_"^{Model}"__cntrl_"^{__shared_weak_count}}
@"NSNumber"
^{TreeEnsembleClassifier=^^?{shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}{map<std::__1::pair<unsigned long, unsigned long>, int, std::__1::less<std::__1::pair<unsigned long, unsigned long> >, std::__1::allocator<std::__1::pair<const std::__1::pair<unsigned long, unsigned long>, int> > >={__tree<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, int>, std::__1::__map_value_compare<std::__1::pair<unsigned long, unsigned long>, std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, int>, std::__1::less<std::__1::pair<unsigned long, unsigned long> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<unsigned long, unsigned long>, std::__1::__value_type<std::__1::pair<unsigned long, unsigned long>, int>, std::__1::less<std::__1::pair<unsigned long, unsigned long> >, true> >=L}}}^{TreeEnsembleParameters}^{TreeEnsembleClassifier}}
@"MLTreeEnsembleClassifier"
@"NSMutableArray"
@"NSMutableOrderedSet"
@"MLSequence"
@32@0:4@8@12@16@20@24@28
^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}12@0:4^@8
B20@0:4^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}8@12^@16
B24@0:4^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}8@12@16^@20
@"MLModelInterface"
@"MLModelMetadata"
@16@0:4r^{VisionFeaturePrint=^^?{InternalMetadataWithArenaLite=^v}(VisionFeaturePrintTypeUnion=^{VisionFeaturePrint_Scene})i[1I]}8^@12
@28@0:4@8@12i16@20^@24
@24@0:4^{__CVBuffer=}8@12B16^@20
@"MLAppleImageFeatureExtractorParameters"
i12@0:4@8
B28@0:4@8@12@16@20^@24
I20@0:4^{?=L^@^L[5L]}8^@12I16
@"MLSVMEngine"
@20@0:4@8i12@16
@"MLFeatureValue"
@36@0:4I8@12@16@20@24@28^@32
@"NSData"
@"MLAppleTextClassifierParameters"
@"NSObject<MLCustomLayer>"20@0:4@"NSString"8@"NSDictionary"12^@16
v16@0:4d8
v12@0:4L8
l8@0:4
v12@0:4l8
@"MLNonMaximumSuppressionParameters"
@28@0:4@8i12@?16@20^@24
r^v16@0:4@8^@12
@20@0:4^v8@12^@16
@12@0:4B8
@48@0:4I8@12@16@20@24@28@32@36@40^@44
@"MLAppleWordTaggerParameters"
@"<MLBatchProvider>"
@24@0:4@8I12I16^@20
@36@0:4@8@12@16@20@24@28^@32
@40@0:4@8@12@16@20@24@28@32^@36
@44@0:4@8@12@16@20@24@28@32@36^@40
@28@0:4^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}8#12@16@20^@24
@20@0:4^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}8^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}12^@16
B20@0:4^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}8^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}12^@16
B20@0:4^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}8^{_MLModelInputArchiver={IArchive={shared_ptr<Archiver::_IArchiveImpl>=^{_IArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, IArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, IArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, IArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, IArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, IArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}12^@16
{_NSRange=II}12@0:4r^{SizeRange=^^?{InternalMetadataWithArenaLite=^v}Qqi}8
@12@0:4r^{FeatureDescription=^^?{InternalMetadataWithArenaLite=^v}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{FeatureType}i}8
@12@0:4r^{RepeatedPtrField<CoreML::Specification::FeatureDescription>=^{Arena}ii^{Rep}}8
B20@0:4@8^{_MLModelOutputArchiver={OArchive=B{shared_ptr<Archiver::_OArchiveImpl>=^{_OArchiveImpl}^{__shared_weak_count}}{map<std::__1::basic_string<char>, OArchive, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, OArchive> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, OArchive> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, OArchive>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, OArchive>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}}}12^@16
@12@0:4^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}8
@16@0:4^{_MLModelDescriptionSpecification={shared_ptr<CoreML::Specification::ModelDescription>=^{ModelDescription}^{__shared_weak_count}}}8B12
B20@0:4^d8@12^@16
@20@0:4@8I12^@16
@20@0:4@8{_NSRange=II}12
{_NSRange=II}8@0:4
@"MLFeatureDescription"
{_NSRange="location"I"length"I}
^{Metadata=^^?{InternalMetadataWithArenaLite=^v}{MapFieldLite<google::protobuf::internal::MapEntryLite<std::__1::basic_string<char>, std::__1::basic_string<char>, google::protobuf::internal::WireFormatLite::TYPE_STRING, google::protobuf::internal::WireFormatLite::TYPE_STRING, 0>, std::__1::basic_string<char>, std::__1::basic_string<char>, google::protobuf::internal::WireFormatLite::TYPE_STRING, google::protobuf::internal::WireFormatLite::TYPE_STRING, 0>=^{Arena}{Map<std::__1::basic_string<char>, std::__1::basic_string<char> >=^{Arena}i^{InnerMap}}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}i}12@0:4@8
^{ImageFeatureType=^^?{InternalMetadataWithArenaLite=^v}qqi(SizeFlexibilityUnion=^{ImageFeatureType_EnumeratedImageSizes}^{ImageFeatureType_ImageSizeRange})i[1I]}12@0:4@8
^{ArrayFeatureType=^^?{InternalMetadataWithArenaLite=^v}{RepeatedField<long long>=ii^{Rep}}ii(ShapeFlexibilityUnion=^{ArrayFeatureType_EnumeratedShapes}^{ArrayFeatureType_ShapeRange})i[1I]}12@0:4@8
^{DictionaryFeatureType=^^?{InternalMetadataWithArenaLite=^v}(KeyTypeUnion=^{Int64FeatureType}^{StringFeatureType})i[1I]}16@0:4@8^@12
^{SequenceFeatureType=^^?{InternalMetadataWithArenaLite=^v}^{SizeRange}(TypeUnion=^{Int64FeatureType}^{StringFeatureType})i[1I]}16@0:4@8^@12
^{FeatureType=^^?{InternalMetadataWithArenaLite=^v}B(TypeUnion=^{Int64FeatureType}^{DoubleFeatureType}^{StringFeatureType}^{ImageFeatureType}^{ArrayFeatureType}^{DictionaryFeatureType}^{SequenceFeatureType})i[1I]}16@0:4@8^@12
v20@0:4@8^{FeatureDescription=^^?{InternalMetadataWithArenaLite=^v}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{FeatureType}i}12^@16
^{ModelDescription=^^?{InternalMetadataWithArenaLite=^v}{RepeatedPtrField<CoreML::Specification::FeatureDescription>=^{Arena}ii^{Rep}}{RepeatedPtrField<CoreML::Specification::FeatureDescription>=^{Arena}ii^{Rep}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{Metadata}i}16@0:4@8^@12
B20@0:4@8^{_MLModelSpecification={shared_ptr<CoreML::Specification::Model>=^{Model}^{__shared_weak_count}}}12^@16
@40@0:4@8@12@16@20@24@28@32@36
{vector<std::__1::pair<unsigned long, unsigned long>, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >="__begin_"^{pair<unsigned long, unsigned long>}"__end_"^{pair<unsigned long, unsigned long>}"__end_cap_"{__compressed_pair<std::__1::pair<unsigned long, unsigned long> *, std::__1::allocator<std::__1::pair<unsigned long, unsigned long> > >="__value_"^{pair<unsigned long, unsigned long>}}}
@32@0:4@8@12@16@20@24^@28
@28@0:4i8@12@16@20@24
@32@0:4i8@12@16@20@24@28
@36@0:4i8@12@16@20@24@28@32
v20@0:4d8^d16
@40@0:4@8@12B16B20@24@28@32@36
@44@0:4@8@12B16B20@24@28@32@36@40
B20@0:4^@8@12@16
v24@0:4@8@12@16^@20
v24@0:4@"<MLFeatureProvider>"8@"<MLFeatureProvider>"12@"MLSupervisedOnlineUpdateOptions"16^@20
B16@0:4^@8@12
B12@0:4I8
@52@0:4@8i12@16@20@24@28@32@36@40@44@48
{shared_ptr<CoreML::BayesianProbitRegression::FeatureValues>=^{FeatureValues}^{__shared_weak_count}}16@0:4@8^@12
@12@0:4^{Prediction=dddddB}8
d20@0:4@8@12i16
d12@0:4@8
B24@0:4@8^B12^d16^@20
v20@0:4@8@12^@16
{shared_ptr<CoreML::BayesianProbitRegression::BayesianProbitRegression>=^{BayesianProbitRegression}^{__shared_weak_count}}8@0:4
{shared_ptr<CoreML::BayesianProbitRegression::BayesianProbitRegression>="__ptr_"^{BayesianProbitRegression}"__cntrl_"^{__shared_weak_count}}
v12@0:4^d8
@20@0:4r^@8r^@12I16
{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8@0:4
v20@0:4{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8
{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >="__tree_"{__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >="__value_"L}}}
{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >={__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >=L}}}8@0:4
v20@0:4{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >={__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >=L}}}8
{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >="__tree_"{__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >="__begin_node_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}"__pair1_"{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >="__value_"{__tree_end_node<std::__1::__tree_node_base<void *> *>="__left_"^{__tree_node_base<void *>}}}"__pair3_"{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >="__value_"L}}}
@12@0:4^{map<std::__1::basic_string<char>, unsigned long, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, unsigned long> > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::less<std::__1::basic_string<char> >, true> >=L}}}8
{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, int> >={__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, int>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}8@0:4
v12@0:4{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, int> >={__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, int>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}8
{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, int> >="__i_"{__tree_iterator<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, unsigned long>, void *> *, int>="__ptr_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}
@12@0:4^{map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long> > >={__tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true> >=L}}}8
{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, int> >={__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, int>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}8@0:4
v12@0:4{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, int> >={__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, int>=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}8
{__map_iterator<std::__1::__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, int> >="__i_"{__tree_iterator<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *> *, int>="__ptr_"^{__tree_end_node<std::__1::__tree_node_base<void *> *>}}}
B16@0:4i8^@12
B20@0:4@8B12^@16
@"MLMultiArrayShapeConstraint"
@24@0:4{_NSRange=II}8{_NSRange=II}16
@24@0:4i8i12B16B20
I20@0:4I8{_NSRange=II}12
@32@0:4{_NSRange=II}8{_NSRange=II}16@24B28
@20@0:4@8@12B16
@36@0:4@8@12@16@20@24@28@32
6Kernel
7QMatrix
6Solver
9Solver_NU
5SVC_Q
11ONE_CLASS_Q
5SVR_Q
22MLCustomLayerException
NSt3__120__shared_ptr_emplaceIN8Archiver13_OArchiveImplENS_9allocatorIS2_EEEE
NSt3__114basic_ofstreamIcNS_11char_traitsIcEEEE
NSt3__113basic_filebufIcNS_11char_traitsIcEEEE
NSt3__120__shared_ptr_emplaceIN8Archiver13_IArchiveImplENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_pointerIPhZ83-[MLNeuralNetworkEngine bindInputsAndOutputs:allocatedImageData:bufferIndex:error:]E3$_1NS_9allocatorIhEEEE
Z83-[MLNeuralNetworkEngine bindInputsAndOutputs:allocatedImageData:bufferIndex:error:]E3$_1
NSt3__120__shared_ptr_pointerIPN8Archiver14_ODataBlobImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8Archiver14_ODataBlobImplEEE
NSt3__120__shared_ptr_emplaceIN8Archiver14_ODataBlobImplENS_9allocatorIS2_EEEE
N6CoreML13TreeEnsembles8Internal30incompatible_execution_profileE
NSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__117bad_function_callE
NSt3__110__function6__funcIZN6CoreML13TreeEnsembles8Internal16gatherPropertiesERKNS_10shared_ptrINS3_13_TreeEnsembleEEEE3$_2NS_9allocatorISA_EEFvRKNS5_INS3_20_TreeComputationNodeEEEEEE
NSt3__110__function6__baseIFvRKNS_10shared_ptrIN6CoreML13TreeEnsembles20_TreeComputationNodeEEEEEE
ZN6CoreML13TreeEnsembles8Internal16gatherPropertiesERKNSt3__110shared_ptrINS0_13_TreeEnsembleEEEE3$_2
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification8MetadataENS_9allocatorIS3_EEEE
NSt3__119basic_ostringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
?NSt3__120__shared_ptr_emplaceIN6CoreML13Specification5ModelENS_9allocatorIS3_EEEE
N6CoreML16MultiArrayBufferE
NSt3__120__shared_ptr_pointerIPhZN6CoreML16MultiArrayBufferC1ERKNS_6vectorImNS_9allocatorImEEEENS2_10ScalarTypeENS2_12StorageOrderEE3$_0NS5_IhEEEE
ZN6CoreML16MultiArrayBufferC1ERKNSt3__16vectorImNS1_9allocatorImEEEENS_10ScalarTypeENS_12StorageOrderEE3$_0
NSt3__120__shared_ptr_pointerIPhZN6CoreML16MultiArrayBufferC1ES1_RKNS_6vectorImNS_9allocatorImEEEES9_NS2_10ScalarTypeEE3$_1NS5_IhEEEE
ZN6CoreML16MultiArrayBufferC1EPhRKNSt3__16vectorImNS2_9allocatorImEEEES8_NS_10ScalarTypeEE3$_1
NSt3__120__shared_ptr_pointerIP21_MLModelSpecificationNS_14default_deleteIS1_EENS_9allocatorIS1_EEEE
NSt3__114default_deleteI21_MLModelSpecificationEE
]6MNw<@
X_<p
@ko#!(
f}/@
il]@
G!c?m
rKa@
yTW 
2d@&x
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__121__basic_string_commonILb1EEE
NSt3__114basic_ifstreamIcNS_11char_traitsIcEEEE
NSt3__120__shared_ptr_pointerIPN8Archiver11MMappedFileENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8Archiver11MMappedFileEEE
NSt3__120__shared_ptr_pointerIPN8Archiver14_IDataBlobImplENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN8Archiver14_IDataBlobImplEEE
NSt3__120__shared_ptr_emplaceIN8Archiver14_IDataBlobImplENS_9allocatorIS2_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification16ModelDescriptionENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML24BayesianProbitRegression24BayesianProbitRegressionENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML24BayesianProbitRegression13FeatureValuesENS_9allocatorIS3_EEEE
@(#)PROGRAM:CoreML  PROJECT:CoreML-1
N6google8protobuf14FatalExceptionE
N6google8protobuf7ClosureE
N6google8protobuf8internal16FunctionClosure0E
N6google8protobuf2io17ArrayOutputStreamE
N6google8protobuf2io18CopyingInputStreamE
N6google8protobuf2io25CopyingInputStreamAdaptorE
N6google8protobuf2io19CopyingOutputStreamE
N6google8protobuf2io26CopyingOutputStreamAdaptorE
N6google8protobuf2io19ZeroCopyInputStreamE
N6google8protobuf2io20ZeroCopyOutputStreamE
N6google8protobuf2io18IstreamInputStreamE
N6google8protobuf2io18IstreamInputStream25CopyingIstreamInputStreamE
N6google8protobuf2io19OstreamOutputStreamE
N6google8protobuf2io19OstreamOutputStream26CopyingOstreamOutputStreamE
N6google8protobuf11MessageLiteE
N6CoreML13Specification18CategoricalMappingE
N6CoreML13Specification8PipelineE
N6CoreML13Specification18PipelineClassifierE
N6CoreML13Specification17PipelineRegressorE
N6CoreML13Specification18FeatureDescriptionE
N6CoreML13Specification8MetadataE
N6CoreML13Specification16ModelDescriptionE
N6CoreML13Specification5ModelE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEES9_LNS1_14WireFormatLite9FieldTypeE9ELSB_9ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_LNS1_14WireFormatLite9FieldTypeE9ELSC_9ELi0EEENS0_11MessageLiteESA_SA_LSC_9ELSC_9ELi0EEE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES8_E8InnerMapE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEESA_LNS1_14WireFormatLite9FieldTypeE9ELSC_9ELi0EEENS0_11MessageLiteESA_SA_LSC_9ELSC_9ELi0EE15MapEntryWrapperE
N6CoreML5ModelE
NSt3__120__shared_ptr_pointerIPN6CoreML13Specification5ModelENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN6CoreML13Specification5ModelEEE
NSt3__120__shared_ptr_pointerIPN6CoreML13Specification8MetadataENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN6CoreML13Specification8MetadataEEE
NSt3__120__shared_ptr_pointerIPN6CoreML13Specification16ModelDescriptionENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN6CoreML13Specification16ModelDescriptionEEE
N6CoreML13Specification8IdentityE
N6CoreML13Specification12CoreMLModels24VisionFeaturePrint_SceneE
N6CoreML13Specification12CoreMLModels18VisionFeaturePrintE
NSt3__110__function6__funcIPFN6CoreML6ResultERKNS2_13Specification18NeuralNetworkLayerEENS_9allocatorIS9_EES8_EE
NSt3__110__function6__baseIFN6CoreML6ResultERKNS2_13Specification18NeuralNetworkLayerEEEE
PFN6CoreML6ResultERKNS_13Specification18NeuralNetworkLayerEE
FN6CoreML6ResultERKNS_13Specification18NeuralNetworkLayerEE
N6CoreML13Specification13OneHotEncoderE
N6CoreML13Specification12CoreMLModels14TextClassifierE
N6CoreML13Specification6ScalerE
N6CoreML13Specification25GLMClassifier_DoubleArrayE
N6CoreML13Specification13GLMClassifierE
N6CoreML13Specification7ImputerE
N6CoreML13Specification33CustomModel_CustomModelParamValueE
N6CoreML13Specification11CustomModelE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6CoreML13Specification33CustomModel_CustomModelParamValueELNS1_14WireFormatLite9FieldTypeE9ELSE_11ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification33CustomModel_CustomModelParamValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEENS0_11MessageLiteESA_SD_LSF_9ELSF_11ELi0EEE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN6CoreML13Specification33CustomModel_CustomModelParamValueEE8InnerMapE
N6google8protobuf4hashINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification33CustomModel_CustomModelParamValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEENS0_11MessageLiteESA_SD_LSF_9ELSF_11ELi0EE15MapEntryWrapperE
N6CoreML13Specification12LinearKernelE
N6CoreML13Specification9RBFKernelE
N6CoreML13Specification10PolyKernelE
N6CoreML13Specification13SigmoidKernelE
N6CoreML13Specification6KernelE
N6CoreML13Specification10SparseNodeE
N6CoreML13Specification12SparseVectorE
N6CoreML13Specification20SparseSupportVectorsE
N6CoreML13Specification11DenseVectorE
N6CoreML13Specification19DenseSupportVectorsE
N6CoreML13Specification12CoefficientsE
N6CoreML13Specification22SupportVectorRegressorE
N6CoreML13Specification23SupportVectorClassifierE
N6CoreML13Specification10NormalizerE
N6google8protobuf8internal29InternalMetadataWithArenaBaseINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS1_29InternalMetadataWithArenaLiteEE9ContainerE
N6CoreML13Specification16StringToInt64MapE
N6CoreML13Specification16Int64ToStringMapE
N6CoreML13Specification17StringToDoubleMapE
N6CoreML13Specification16Int64ToDoubleMapE
N6CoreML13Specification12StringVectorE
N6CoreML13Specification11Int64VectorE
N6CoreML13Specification12DoubleVectorE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSB_3ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSC_3ELi0EEENS0_11MessageLiteESA_xLSC_9ELSC_3ELi0EEE
N6google8protobuf8internal12MapEntryLiteIxNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSB_9ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSC_9ELi0EEENS0_11MessageLiteExSA_LSC_3ELSC_9ELi0EEE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSB_1ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSC_1ELi0EEENS0_11MessageLiteESA_dLSC_9ELSC_1ELi0EEE
N6google8protobuf8internal12MapEntryLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS4_1ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS5_1ELi0EEENS0_11MessageLiteExdLS5_3ELS5_1ELi0EEE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEExE8InnerMapE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEExLNS1_14WireFormatLite9FieldTypeE9ELSC_3ELi0EEENS0_11MessageLiteESA_xLSC_9ELSC_3ELi0EE15MapEntryWrapperE
N6google8protobuf3MapIxNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEE8InnerMapE
N6google8protobuf4hashIxEE
NSt3__14hashIxEE
NSt3__113__scalar_hashIxLm2EEE
NSt3__114unary_functionIxmEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEELNS1_14WireFormatLite9FieldTypeE3ELSC_9ELi0EEENS0_11MessageLiteExSA_LSC_3ELSC_9ELi0EE15MapEntryWrapperE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEdE8InnerMapE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEdLNS1_14WireFormatLite9FieldTypeE9ELSC_1ELi0EEENS0_11MessageLiteESA_dLSC_9ELSC_1ELi0EE15MapEntryWrapperE
N6google8protobuf3MapIxdE8InnerMapE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteIxdLNS1_14WireFormatLite9FieldTypeE3ELS5_1ELi0EEENS0_11MessageLiteExdLS5_3ELS5_1ELi0EE15MapEntryWrapperE
N6CoreML13Specification32BayesianProbitRegressor_GaussianE
N6CoreML13Specification42BayesianProbitRegressor_FeatureValueWeightE
N6CoreML13Specification37BayesianProbitRegressor_FeatureWeightE
N6CoreML13Specification23BayesianProbitRegressorE
NSt3__120__shared_ptr_emplaceIN6CoreML13TreeEnsembles20_TreeComputationNodeENS_9allocatorIS3_EEEE
NSt3__120__shared_ptr_emplaceIN6CoreML13TreeEnsembles13_TreeEnsembleENS_9allocatorIS3_EEEE
N6CoreML13Specification29NonMaximumSuppression_PickTopE
N6CoreML13Specification21NonMaximumSuppressionE
N6CoreML13Specification29FeatureVectorizer_InputColumnE
N6CoreML13Specification17FeatureVectorizerE
N6CoreML13Specification12CoreMLModels10WordTaggerE
N6CoreML13Specification46TreeEnsembleParameters_TreeNode_EvaluationInfoE
N6CoreML13Specification31TreeEnsembleParameters_TreeNodeE
N6CoreML13Specification22TreeEnsembleParametersE
N6CoreML13Specification22TreeEnsembleClassifierE
N6CoreML13Specification21TreeEnsembleRegressorE
NSt3__120__shared_ptr_emplaceIN6CoreML13Specification11FeatureTypeENS_9allocatorIS3_EEEE
N6CoreML13Specification14DictVectorizerE
N6CoreML13Specification13NeuralNetworkE
N6CoreML13Specification24NeuralNetworkImageScalerE
N6CoreML13Specification22NeuralNetworkMeanImageE
N6CoreML13Specification26NeuralNetworkPreprocessingE
N6CoreML13Specification14ActivationReLUE
N6CoreML13Specification19ActivationLeakyReLUE
N6CoreML13Specification14ActivationTanhE
N6CoreML13Specification20ActivationScaledTanhE
N6CoreML13Specification17ActivationSigmoidE
N6CoreML13Specification16ActivationLinearE
N6CoreML13Specification21ActivationSigmoidHardE
N6CoreML13Specification15ActivationPReLUE
N6CoreML13Specification13ActivationELUE
N6CoreML13Specification25ActivationThresholdedReLUE
N6CoreML13Specification18ActivationSoftsignE
N6CoreML13Specification18ActivationSoftplusE
N6CoreML13Specification28ActivationParametricSoftplusE
N6CoreML13Specification16ActivationParamsE
N6CoreML13Specification18NeuralNetworkLayerE
N6CoreML13Specification23BorderAmounts_EdgeSizesE
N6CoreML13Specification13BorderAmountsE
N6CoreML13Specification12ValidPaddingE
N6CoreML13Specification11SamePaddingE
N6CoreML13Specification12SamplingModeE
N6CoreML13Specification18BoxCoordinatesModeE
N6CoreML13Specification12WeightParamsE
N6CoreML13Specification18QuantizationParamsE
N6CoreML13Specification24LinearQuantizationParamsE
N6CoreML13Specification29LookUpTableQuantizationParamsE
N6CoreML13Specification22ConvolutionLayerParamsE
N6CoreML13Specification23InnerProductLayerParamsE
N6CoreML13Specification20EmbeddingLayerParamsE
N6CoreML13Specification20BatchnormLayerParamsE
N6CoreML13Specification39PoolingLayerParams_ValidCompletePaddingE
N6CoreML13Specification18PoolingLayerParamsE
N6CoreML13Specification34PaddingLayerParams_PaddingConstantE
N6CoreML13Specification36PaddingLayerParams_PaddingReflectionE
N6CoreML13Specification37PaddingLayerParams_PaddingReplicationE
N6CoreML13Specification18PaddingLayerParamsE
N6CoreML13Specification17ConcatLayerParamsE
N6CoreML13Specification14LRNLayerParamsE
N6CoreML13Specification18SoftmaxLayerParamsE
N6CoreML13Specification16SplitLayerParamsE
N6CoreML13Specification14AddLayerParamsE
N6CoreML13Specification19MultiplyLayerParamsE
N6CoreML13Specification24UnaryFunctionLayerParamsE
N6CoreML13Specification19UpsampleLayerParamsE
N6CoreML13Specification25ResizeBilinearLayerParamsE
N6CoreML13Specification21CropResizeLayerParamsE
N6CoreML13Specification15BiasLayerParamsE
N6CoreML13Specification16ScaleLayerParamsE
N6CoreML13Specification23LoadConstantLayerParamsE
N6CoreML13Specification22L2NormalizeLayerParamsE
N6CoreML13Specification18FlattenLayerParamsE
N6CoreML13Specification18ReshapeLayerParamsE
N6CoreML13Specification18PermuteLayerParamsE
N6CoreML13Specification25ReorganizeDataLayerParamsE
N6CoreML13Specification16SliceLayerParamsE
N6CoreML13Specification17ReduceLayerParamsE
N6CoreML13Specification15CropLayerParamsE
N6CoreML13Specification18AverageLayerParamsE
N6CoreML13Specification14MaxLayerParamsE
N6CoreML13Specification14MinLayerParamsE
N6CoreML13Specification21DotProductLayerParamsE
N6CoreML13Specification32MeanVarianceNormalizeLayerParamsE
N6CoreML13Specification25SequenceRepeatLayerParamsE
N6CoreML13Specification26SimpleRecurrentLayerParamsE
N6CoreML13Specification14GRULayerParamsE
N6CoreML13Specification10LSTMParamsE
N6CoreML13Specification16LSTMWeightParamsE
N6CoreML13Specification29UniDirectionalLSTMLayerParamsE
N6CoreML13Specification28BiDirectionalLSTMLayerParamsE
N6CoreML13Specification39CustomLayerParams_CustomLayerParamValueE
N6CoreML13Specification17CustomLayerParamsE
N6CoreML13Specification23NeuralNetworkClassifierE
N6CoreML13Specification22NeuralNetworkRegressorE
N6google8protobuf8internal12MapEntryLiteINSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEN6CoreML13Specification39CustomLayerParams_CustomLayerParamValueELNS1_14WireFormatLite9FieldTypeE9ELSE_11ELi0EEE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification39CustomLayerParams_CustomLayerParamValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEENS0_11MessageLiteESA_SD_LSF_9ELSF_11ELi0EEE
N6google8protobuf3MapINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEN6CoreML13Specification39CustomLayerParams_CustomLayerParamValueEE8InnerMapE
N6google8protobuf8internal12MapEntryImplINS1_12MapEntryLiteINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEEN6CoreML13Specification39CustomLayerParams_CustomLayerParamValueELNS1_14WireFormatLite9FieldTypeE9ELSF_11ELi0EEENS0_11MessageLiteESA_SD_LSF_9ELSF_11ELi0EE15MapEntryWrapperE
N6CoreML13Specification21ArrayFeatureExtractorE
N6CoreML13Specification24GLMRegressor_DoubleArrayE
N6CoreML13Specification12GLMRegressorE
N6CoreML13Specification16Int64FeatureTypeE
N6CoreML13Specification17DoubleFeatureTypeE
N6CoreML13Specification17StringFeatureTypeE
N6CoreML13Specification9SizeRangeE
N6CoreML13Specification26ImageFeatureType_ImageSizeE
N6CoreML13Specification37ImageFeatureType_EnumeratedImageSizesE
N6CoreML13Specification31ImageFeatureType_ImageSizeRangeE
N6CoreML13Specification16ImageFeatureTypeE
N6CoreML13Specification22ArrayFeatureType_ShapeE
N6CoreML13Specification33ArrayFeatureType_EnumeratedShapesE
N6CoreML13Specification27ArrayFeatureType_ShapeRangeE
N6CoreML13Specification16ArrayFeatureTypeE
N6CoreML13Specification21DictionaryFeatureTypeE
N6CoreML13Specification19SequenceFeatureTypeE
N6CoreML13Specification11FeatureTypeE
N6CoreML16TreeEnsembleBaseE
N6CoreML22TreeEnsembleClassifierE
Entering NN constructor
Plan created, now adding network
File: %s not found.
Finding model in: %s
Error in adding network %d
Error in loading user-provided custom layer during neural network evaluation.
Error in adding network %d.
Error in declaring input %d.
inputLayer: %s
Error in declaring output: %d.
outputLayer: %s
Error in passing image pre-processing parameters for %s to network: %d.
Error in building plan %d.
Plan built
Input feature %s required but not passed to neural network.
Error binding image input buffer %s: %d
Error binding input buffer %s: %d
Error passing input to NN engine.
Error: unsupported input type for neural network.
Error binding output buffer %s: %d
Failure verifying inputs.
Failure in resetSizes.
Failure in bindInputsAndOutputs.
Error computing NN outputs, caught unknown exception.
Error in computing user-provided custom layer during neural network evaluation.
Error computing NN outputs %d
Error unlocking pixel buffers.
WARNING: The computed output shape does not match any output shape allowed in the model's description. Please update the model description.
Empty input feature dictionary passed to resetSizes.
Incorrect input number of dimensions %lul (must be between 1 and 5 dimensions.
Cannot evaluate a batch of size %d on GPU, which is larger than maximum of %d.
Cannot evaluate a sequence of length %d, which is longer than maximum of %d for bidirectional models.
Failure setting up to dynamically allocate for sequence size.
Failure dynamically resizing for sequence length
Error in computing user-provided custom layer output shapes during neural network construction.
Failure dynamically resizing for sequence length.
Error in re-allocating network: %d.
Failure in resetSizes in batch computation.
Failure verifying input %@ in batch computation.
Failure in bindInputsAndOutputs in batch computation.
Error unlocking pixel buffers in batch processing.
This model is not suitable for faster batch prediction, so it is falling back on a for-loop-based approach.
Error creating Core ML custom layer implementation from factory for layer "%s".
Core ML custom Layer implementation '%s' does not coform to the MLCustomLayer protocol.
Error getting Core ML custom layer output shapes for layer "%s".
Evaluation on Core ML custom layer "%s" called before the layer is constructed.
Error evaluating Core ML custom layer "%s" on CPU.
Core ML custom Layer implementation '%s' does not conform to the MLCustomLayer protocol'
Error initializing Core ML custom layer implementation with parameter dictionary for layer "%s".
Error setting weights in Core ML custom layer "%s".
Error evaluating Core ML custom layer "%s" on GPU.
%s thrown on construction
MLModelAsset: load has already been run successfully.
MLModelAsset: load failed with error %@
MLModelAsset: load failed.
MLModelAsset: modelWithError: load failed with error %@
MLModelAsset: classifierWithError: load failed.
MLModelAsset: regressorWithError: load failed.
Incorrect number of classes given (TreeEnsembleClassifier).
Couldn't create os_log_t coreChannel
A Core ML custom neural network layer requires an implementation named '%s' which was not found in the global namespace.
A Core ML custom neural network layer implementation class named '%s' does not conform to the MLCustomLayer protocol.
Image descripition included empty set of enumerated sizes
Using the default size
Image descripition width and height and are not valid according to the enumerated sizes
Changing default height and width to be the first enumerated size
Image descripition width and height and are not valid according to the specified flexible ranges
Changing default height and width to minimum size in range
aP 
T~$
Tt)
TTQ
T*h
Tbs
TBy
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
    
