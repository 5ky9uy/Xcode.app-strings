%pq
%tq
%xq
%|q
%r
% r
%$r
%(r
%,r
%0r
%4r
%8r
%<r
%@r
%Dr
%Hr
%Lr
%Pr
%Tr
%Xr
%\r
%`r
%dr
%hr
%lr
%pr
%tr
%xr
%|r
RDTemplate
com.apple.nanomail.retailDemoMigrationQueue
v4@?0
isMigrating
TB,N,V_isMigrating
migrationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_migrationQueue
executionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_executionQueue
demoContentWillReplaceDatabase
T@?,C,N,V_demoContentWillReplaceDatabase
demoContentMigrationCompletionBlock
T@?,C,N,V_demoContentMigrationCompletionBlock
messageDatesUpdatedCompletionBlock
T@?,C,N,V_messageDatesUpdatedCompletionBlock
accountSourceTypeDictionaryUserDefaultName
previousExecutionStandaloneModeState
v16@?0@"NSNumber"4@"NSMutableArray"8^B12
Dispatch After Database Attached attempt block
com.apple.nanomail.icloudpush.reregister
v8@?0@"NSObject<OS_xpc_object>"4
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
delegate
T@"<NNMKMessageServiceDelegate>",W,N
syncReceiver
T@"NNMKSyncReceiver",&,N,V_syncReceiver
standaloneService
T@"NNMKStandaloneMessageService",&,N,V_standaloneService
accountManager
T@"NNMKAccountManager",R,N,V_accountManager
previouslyUsedService
T@"<NNMKMessageService>",W,N,V_previouslyUsedService
transientService
T@"NNMKTransientMessageService",&,N,V_transientService
messageDataSource
T@"NNMKMessageDataSource",&,N,V_messageDataSource
databaseFactory
T@"NNMKDatabaseFactory",&,N,V_databaseFactory
database
T@"NNMKDatabase",&,N,V_database
vipLibraryManager
T@"NNMKVIPLibraryManager",&,N,V_vipLibraryManager
pendingFullSyncRequest
TB,N,V_pendingFullSyncRequest
executeFullSyncAfterFirstUnlock
TB,N,V_executeFullSyncAfterFirstUnlock
lastBatchFetchRequestDateByMailboxId
T@"NSMutableDictionary",&,N,V_lastBatchFetchRequestDateByMailboxId
connectionFailed
TB,N,V_connectionFailed
isStandaloneMode
TB,N,V_isStandaloneMode
canStartStandaloneServiceWhenAppNotRunningAndConnectivityChanges
TB,N,V_canStartStandaloneServiceWhenAppNotRunningAndConnectivityChanges
accountSourceTypeById
T@"NSMutableDictionary",&,N,V_accountSourceTypeById
bulletinBoardObserver
T@"NNMKBulletinBoardObserver",&,N,V_bulletinBoardObserver
networkCheckUtility
T@"NNMKNetworkCheckUtility",&,N,V_networkCheckUtility
nanoMailProcessMonitor
T@"<NNMKNanoMailProcessMonitor>",&,N,V_nanoMailProcessMonitor
T@"<NNMKMessageServiceDelegate>",W,N,V_delegate
@"NNMKMFMailMessage"8@?0@"NNMKMessage"4
v8@?0@"NSArray"4
@8@?0@"NNMKMessage"4
@"NSString"8@?0@"MFLibraryMessage"4
@8@?0@"MFLibraryMessage"4
@"NSString"8@?0@"MFMessageDetails"4
v8@?0@"NNMKMessage"4
@"NNMKMessage"8@?0@"MFLibraryMessage"4
"%@ %@"
isFetching
TB,N,V_isFetching
messageStore
T@"MFLibraryStore",&,N,V_messageStore
fetchMessageOptions
TI,N,V_fetchMessageOptions
fetchOlderMessagesOptions
TI,N,V_fetchOlderMessagesOptions
requestQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_requestQueue
manuallyInsertedMessageIds
T@"NSMutableSet",&,N,V_manuallyInsertedMessageIds
manuallyDeletedMessageIds
T@"NSMutableSet",&,N,V_manuallyDeletedMessageIds
messageBodyParser
T@"NNMKMessageBodyParser",&,N,V_messageBodyParser
isActivate
TB,N,V_isActivate
sourceLibrary
T@"NNMKSourceLibrary",&,N,V_sourceLibrary
T@"<NNMKMailboxSourceDelegate>",W,N,V_delegate
fetchWindow
TI,N,V_fetchWindow
isForeground
TB,N,V_isForeground
mailboxId
T@"NSString",&,N,V_mailboxId
mailboxIds
T@"NSArray",&,N,V_mailboxIds
<div style="border:1px solid black;">%@<div style="background:yellow;"><xmp>%@</xmp></div></div>
v8@?0@"NSString"4
ShowAttachmentMarkup
NO_BODY
%@/%@
multipart
alternative
htmlParser
T@"NNMKContentAttributedStringHTMLParser",&,N,V_htmlParser
attachmentManager
T@"MFAttachmentLibraryManager",&,N,V_attachmentManager
%lld
action
title
subtitle
type
MFAttachmentDisplayabilityCheckedKey
MFAttachmentIsDisplayableKey
application/pdf
image/pdf
application/atom+xml
application/xml
application/rss+xml
application/x-webarchive
application/x-javascript
image/jpeg
image/png
image/gif
image
application
<img src="%@" id="%@"
&quot;
<attachment
 %@="%@"
v16@?0@"NSString"4@8^B12
_mf_downloadingStatus
DOWNLOADING
_mf_downloadableStatus
></attachment>
NNMKBulletinBoardObserverChangedNotification
com.apple.nanomail.NNMKBulletinBoardObserver
com.apple.NanoMail
com.apple.Mail
internalQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_internalQueue
T@"BBObserver",&,N,V_bulletinBoardObserver
systemBBSectionInfo
T@"BBSectionInfo",&,N,V_systemBBSectionInfo
subsectionsById
T@"NSMutableDictionary",&,N,V_subsectionsById
bulletinBoardTimedOut
TB,N,V_bulletinBoardTimedOut
hasNotificationsEnabled
TB,R,N
hasOnlyVIPNotificationsEnabled
Message
ComposedMessage
MailboxSelection
WatchAccounts
AccountSourceType
WebKitStatus
B8@?0@"NSString"4
%lu|%@
v12@?0@"NSArray"4@"NNMKMailbox"8
@"NNMKMessage"8@?0@"NNMKProtoMessage"4
v12@?0@"NSArray"4B8
v16@?0@"NSData"4@"NSString"8@"NSString"12
messagesSyncService
T@"NNMKMessagesSyncServiceClient",&,N,V_messagesSyncService
contentSyncService
T@"NNMKMessageContentSyncServiceClient",&,N,V_contentSyncService
accountsSyncService
T@"NNMKAccountsSyncServiceClient",&,N,V_accountsSyncService
fetchesSyncService
T@"NNMKFetchesSyncServiceClient",&,N,V_fetchesSyncService
protectedSyncService
T@"NNMKProtectedSyncServiceClient",&,N,V_protectedSyncService
protectedContentSyncService
T@"NNMKProtectedContentSyncServiceClient",&,N,V_protectedContentSyncService
session
T@"NNMKSyncReceiverSession",&,N,V_session
messagesProcessedHandler
T@"NNMKMessagesProcessedHandler",&,N,V_messagesProcessedHandler
messagesProcessedConversationHandler
T@"NNMKMessagesProcessedHandler",&,N,V_messagesProcessedConversationHandler
wasConnectedInRange
TB,N,V_wasConnectedInRange
T@"<NNMKSyncReceiverDelegate>",W,N,V_delegate
dataSource
T@"<NNMKMessageDataSource>",&,N,V_dataSource
connectivityState
TI,N,V_connectivityState
MFMessageViewingContext_Lock
-[MMMKMessageLoader loadAsPlainText:asHTML:downloadIfNecessary:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/NanoMail_Sim/NanoMail-554.4/nanomaild/MessageService/MailboxSource/Parser/MMMKMessageLoader.m
[NSThread isMainThread] == NO
text
plain
enriched
<html><body><i><font color="#888888">%@</font></i></body></html>
body
contentLock
T@"MFLock",&,N,V_contentLock
loadAlternative
Ti,N,V_loadAlternative
messageBody
T@"MFMessageBody",&,N,S_setMessageBody:,V_messageBody
loadedPart
T@"MFMimePart",&,N,S_setLoadedPart:,V_loadedPart
signers
T@"NSArray",C,N,S_setSigners:,V_signers
secureMimeError
T@"MFError",&,N,S_setSecureMIMEError:,V_secureMimeError
messageAnalysisError
T@"NSError",&,N,S_setMessageAnalysisError:,V_messageAnalysisError
content
T@,&,N,S_setContent:,V_content
contentOffset
TI,N,S_setContentOffset:,V_contentOffset
secureMIMEError
T@"MFError",&,N,V_secureMIMEError
failedToLoad
TB,N,V_failedToLoad
loadedFullData
TB,N,V_loadedFullData
hasNoContent
TB,N,V_hasNoContent
isReload
TB,N,V_isReload
message
T@"MFMailMessage",R,N,V_message
NNMKPushNotificationManager
com.apple.nanomail.standalone-service
Initial Fetch Request
v16@?0@"NSString"4@"NNMKAccount"8^B12
User
@8@?0@"NSString"4
Retry initial fetch transaction
v8@?0B4
B8@?0@"NNMKMessage"4
v12@?0@"NSString"4@"NSArray"8
Standalone push delay transaction
i12@?0@"NNMKMessage"4@"NNMKMessage"8
Pending Changes
T@"NNMKAccountManager",&,N,V_accountManager
pushNotificationManager
T@"NNMKPushNotificationManager",&,N,V_pushNotificationManager
contentLoader
T@"NNMKStandaloneMessageContentLoader",&,N,V_contentLoader
deliveryService
T@"NNMKMessageDeliveryService",&,N,V_deliveryService
emailService
T@"NNMKEmailService",&,N,V_emailService
isConnected
TB,N,V_isConnected
backgroundQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_backgroundQueue
replicateOnStandaloneSource
TB,N,V_replicateOnStandaloneSource
isSetup
TB,N,V_isSetup
isWaitingForAccounts
TB,N,V_isWaitingForAccounts
pushNotificationEnabled
TB,N,V_pushNotificationEnabled
retryOperationController
T@"NNMKRetryOperationController",&,N,V_retryOperationController
messageIdFromPushNotificationContentRequested
T@"NSString",&,N,V_messageIdFromPushNotificationContentRequested
delayTimerSource
T@"NSObject<OS_dispatch_source>",&,N,V_delayTimerSource
T@"<NNMKStandaloneMessageServiceDelegate>",W,N,V_delegate
isActive
v20@?0@"NSDictionary"4{_NSRange=II}8^B16
v16@?0{_NSRange=II}4^B12
v16@?0@4I8^B12
icloud.com
me.com
mac.com
%@@%@
NNMKAccountManagerAccountsChangedNotification
Gmail
com.apple.nanomail.account.requestQueue
v8@?0@"MailAccount"4
AccountValidation
Validate account retry transaction
v8@?0@"ACAccount"4
v12@?0B4@"NSError"8
GmailAccount
Saving new account transaction
completed
failed
Renew account credentials transaction
v12@?0I4@"NSError"8
Removing existing account transaction
Saving account transaction
accountStore
T@"ACAccountStore",&,N,V_accountStore
outstandingAccountIdentityByAccountId
T@"NSMutableDictionary",&,N,V_outstandingAccountIdentityByAccountId
retryController
T@"NNMKRetryOperationController",&,N,V_retryController
receivedNetworkFailure
TB,N,V_receivedNetworkFailure
lastNetworkFailureTimeInterval
Td,N,V_lastNetworkFailureTimeInterval
accountValidatorTransaction
T@"NSObject<OS_os_transaction>",&,N,V_accountValidatorTransaction
T@"<NNMKAccountManagerDelegate>",W,N,V_delegate
subject
T@"NSString",&,N,V_subject
from
T@"NSString",&,N,V_from
T@"NSArray",&,N,V_to
T@"NSArray",&,N,V_cc
T@"NSArray",&,N,V_bcc
messageIDHeader
T@"NSString",&,N,V_messageIDHeader
database.sql
database-protected.sql
database-migration
database-protected-migration
%@-v%lu.sql
index.sqlite
protected.sqlite
Journal
scriptFileDirectory
T@"NSString",C,N,V_scriptFileDirectory
databaseCreationScriptFileName
T@"NSString",C,N,V_databaseCreationScriptFileName
protectedDatabaseCreationScriptFileName
T@"NSString",C,N,V_protectedDatabaseCreationScriptFileName
databaseMigrationScriptFileNamePrefix
T@"NSString",C,N,V_databaseMigrationScriptFileNamePrefix
protectedDatabaseMigrationScriptFileNamePrefix
T@"NSString",C,N,V_protectedDatabaseMigrationScriptFileNamePrefix
databaseFileName
T@"NSString",C,N,V_databaseFileName
protectedDatabaseFileName
T@"NSString",C,N,V_protectedDatabaseFileName
journalDirectoryName
T@"NSString",C,N,V_journalDirectoryName
v16@?0@"NSString"4@"NNMKMessage"8^B12
[Messages to add: %@],   [Messages to update: %@],   [Messages to delete: %@]
messagesToAdd
T@"NSMutableArray",&,N,V_messagesToAdd
messagesToUpdate
T@"NSMutableArray",&,N,V_messagesToUpdate
messagesToDelete
T@"NSMutableArray",&,N,V_messagesToDelete
com.apple.nanomail.dbfactory
com.apple.nanomail.db
INSERT OR REPLACE INTO CONTROL (KEY, VALUE) VALUES ('%@', 1); 
%@; DELETE FROM CONTROL WHERE KEY = '%@';  
v8@?0@"NNMKRetailDemoUtility"4
v12@?0@"NNMKRetailDemoUtility"4@"NSError"8
PROTECTED
CONTROL
/private/var/mobile/Library/Mail
databaseQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_databaseQueue
connection
T@"NNMKProtectedSQLiteConnection",&,N,V_connection
journal
T@"NNMKSQLJournal",&,N,V_journal
demoUtility
T@"NNMKRetailDemoUtility",&,N,V_demoUtility
databaseProtectionManager
T@"<NNMKDatabaseProtectionManager>",&,N,V_databaseProtectionManager
databaseFileProvider
T@"NNMKDatabaseFileProvider",&,N,V_databaseFileProvider
observer
T@"<NNMKDatabaseLifecycleObserver>",W,N,V_observer
createdDatabaseFromScratch
TB,N,V_createdDatabaseFromScratch
B12@?0@"NSURL"4@"NSError"8
com.apple.nanomail.multipleMailboxSource.executionQueue
v8@?0@"NNMKMailboxSource"4
v16@?0@"NSString"4@"NSArray"8^B12
Multiple mailboxes: 
%@ ,
sources
T@"NSArray",&,N,V_sources
sourcesByAccountId
T@"NSMutableDictionary",&,N,V_sourcesByAccountId
sourcesBeingFetched
T@"NSMutableSet",&,N,V_sourcesBeingFetched
mailboxIdsBeingfetched
T@"NSMutableArray",&,N,V_mailboxIdsBeingfetched
errorsByMailboxIdBeingfetched
T@"NSMutableDictionary",&,N,V_errorsByMailboxIdBeingfetched
resultForCurrentFetch
Ti,N,V_resultForCurrentFetch
machServiceName
T@"NSString",&,N,V_machServiceName
messageIdsContentArrivedBeforeActualMessage
T@"NSMutableSet",&,N,V_messageIdsContentArrivedBeforeActualMessage
fullSyncRecoveredInThisSession
TB,N,V_fullSyncRecoveredInThisSession
lastFetchMoreMessagesIDSIdentifier
T@"NSString",&,N,V_lastFetchMoreMessagesIDSIdentifier
lastFetchRequestIDSIdentifier
T@"NSString",&,N,V_lastFetchRequestIDSIdentifier
lastFetchRequestForBatchedResponseInterval
Td,N,V_lastFetchRequestForBatchedResponseInterval
syncingAccounts
T@"NSArray",&,N,V_syncingAccounts
outstandingMailboxFetchIds
T@"NSMutableSet",&,N,V_outstandingMailboxFetchIds
pendingWebKitStatusNotification
T@"NNMKProtoWebKitStatusNotification",&,N,V_pendingWebKitStatusNotification
com.apple.nanomail.messageDeliveryService.networkQueue
com.apple.nanomail.messageDeliveryService.executionQueue
networkQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_networkQueue
outgoingComposedMessage
T@"NNMKComposedMessage",&,N,V_outgoingComposedMessage
T@"<NNMKMessageDeliveryServiceDelegate>",W,N,V_delegate
ECSubjectParser
%@%@%@
(No Subject)
nnmkMessage
T@"NNMKMessage",&,N,V_nnmkMessage
mailboxUid
T@"MFMailboxUid",&,N,V_mailboxUid
messagesAddedHandler
T@?,C,N,V_messagesAddedHandler
messagesUpdatedHandler
T@?,C,N,V_messagesUpdatedHandler
messagesDeletedHandler
T@?,C,N,V_messagesDeletedHandler
messageContentHandler
T@?,C,N,V_messageContentHandler
imageAttachmentHandler
T@?,C,N,V_imageAttachmentHandler
conversationOperationsHandler
T@?,C,N,V_conversationOperationsHandler
 FILTER_TYPE = ? 
 SYNC_ACTIVE = ? 
 SYNC_REQUESTED = ? 
 SYNC_ENABLED = ? 
 ACCOUNT_ID = ? 
 DATABASE_CONTENT_VERIFIED = ? 
 SET 
 SET CUSTOM_NAME = %Q 
 SET CUSTOM_NAME = ? 
[filter_type: %@, 
syncActive: %@, 
syncRequested: %@, 
syncEnabled: %@, 
accountId: %@, 
databaseContentVerified: %@, 
hasCustomName: %lu
filterType
T@"NSNumber",&,N,V_filterType
syncActive
T@"NSNumber",&,N,V_syncActive
syncRequested
T@"NSNumber",&,N,V_syncRequested
syncEnabled
T@"NSNumber",&,N,V_syncEnabled
databaseContentVerified
T@"NSNumber",&,N,V_databaseContentVerified
customName
T@"NSString",&,N,V_customName
accountId
T@"NSString",&,N,V_accountId
com.apple.nanomail.mailboxSource.executionQueue
@"NSString"8@?0@"MailAccount"4
@8@?0@"MFMailboxUid"4
com.apple.nanomail.mailboxSource.requestQueue.%@
com.apple.nanomaild.ProcessMonitor
v8@?0@"NSDictionary"4
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
accumulatedPoints
TI,N,V_accumulatedPoints
lastNanoMailSnapshotRequest
T@"NSDate",&,N,V_lastNanoMailSnapshotRequest
numberOfUnprocessedOperations
TI,N,V_numberOfUnprocessedOperations
interruptedConnectionWithNanoMail
TB,N,V_interruptedConnectionWithNanoMail
deviceLocked
TB,N,V_deviceLocked
nanoMailState
TI,N,V_nanoMailState
nanoMailStateMonitor
T@"BKSApplicationStateMonitor",&,N,V_nanoMailStateMonitor
T@"<NNMKNanoMailSnapshotRequesterDelegate>",W,N,V_delegate
T@"NNMKProtectedSQLiteConnection",W,N,V_connection
com.apple.mobilemail.push.com.me.mail.castle
SwizzlingMailAccountContentsDidChange
MailAccountContentsDidChangeNotificationPayload
com.apple.aps.nanomaild.notification
com.apple.nanomail.pushNotificationQueue
account-id
NONE
currentAccountsListening
T@"NSMutableSet",&,N,V_currentAccountsListening
isWatchingForTopic
TB,N,V_isWatchingForTopic
T@"<NNMKPushNotificationManagerDelegate>",W,N,V_delegate
kUserDefaultVIPLibraryKey
userDefaults
T@"NSUserDefaults",&,N,V_userDefaults
isMonitoring
TB,N,V_isMonitoring
messageId
T@"NSString",C,N,V_messageId
messageContent
T@"NNMKMessageContent",&,N,V_messageContent
preview
T@"NSString",&,N,V_preview
imageAttachmentsLoadedByContentId
T@"NSDictionary",&,N,V_imageAttachmentsLoadedByContentId
DBSchemaVersion
FullSyncVersion
ReceivedFullSyncMessages
RequestedHaltSync
DatabaseRecentlyMigrated
AppLastLaunchedDate
NotificationSettingsEnabled
PENDING_PROTECTED_DATABASE_MIGRATION
LastIDSIdentifierForFullSyncRequest
LastIDSIdentifierForHaltSyncRequest
kControlKeyLastIDSIdentifierForWebKitStatusNotification
kControlKeyMailboxFilterIds
kControlKeyMailboxFilterType
M.ID = ?
v12@?0^{sqlite3_stmt=}4^I8
M.SERVER_ID = ?
M.MAILBOX_ID = ?
M.ACCOUNT_ID = ?
UPDATE MAILBOX SET DATABASE_CONTENT_VERIFIED = ? 
 WHERE ID = ? 
SELECT DATABASE_CONTENT_VERIFIED FROM MAILBOX WHERE ID = ?
SELECT MAILBOX_ID FROM MESSAGE WHERE ID = ?
SELECT 1 FROM MESSAGE WHERE ID = ?
SELECT 1 FROM MESSAGE WHERE NOTIFICATION_MESSAGE_ID = ?
M.ID IN (%@)
M.SERVER_ID IN (%@)
SELECT SERVER_ID FROM MESSAGE WHERE ID = ? 
SELECT ID FROM MESSAGE WHERE SERVER_ID = ? 
OR (STATUS & ?)
AND M.ID NOT IN (%@)
(DATE_RECEIVED >= ?) AND (STATUS & ?) AND (CONTENT_SYNCED = ?) AND ((ACCOUNT_ID IN (%@)) %@ %@) %@
DATE_RECEIVED <= ?
SELECT ME.DATE_RECEIVED FROM CONVERSATION C LEFT OUTER JOIN MESSAGE ME ON ME.CONVERSATION_ID = C.ID 
 C.MAILBOX_ID IN (%@) 
 WHERE 
 ORDER BY ME.date_received ASC limit 1
-[NNMKDatabase conversationsAtIndexRange:messagesByConversationId:mailboxFilter:]_block_invoke
W.DATE_RECEIVED <= ?
-[NNMKDatabase conversationsReceivedBefore:count:initialIndex:messagesByConversationId:mailboxFilter:]_block_invoke
W.ID IN (%@)
CONVERSATION AS W
AND C.MAILBOX_ID IN  (%@) 
AND W.MAILBOX_ID IN  (%@) 
(SELECT DISTINCT W.* FROM CONVERSATION W LEFT OUTER JOIN MESSAGE ME ON ME.CONVERSATION_ID = W.ID WHERE %@) AS W
LEFT OUTER JOIN MESSAGE ME ON ME.CONVERSATION_ID = C.ID
 AND 
SELECT DISTINCT C.ID,                          (SELECT COUNT(W.ID) FROM %1$@ WHERE ((W.DATE_RECEIVED > C.DATE_RECEIVED) OR (W.DATE_RECEIVED = C.DATE_RECEIVED AND ID < C.ID)) %2$@) AS C_INDEX                          FROM CONVERSATION C %3$@ WHERE C.ID IN (%4$@) %5$@ %6$@
W.ID = ?
W.ID = (SELECT CONVERSATION_ID FROM MESSAGE WHERE ID = ?)
LEFT OUTER JOIN MESSAGE ME ON ME.CONVERSATION_ID = C.ID 
SELECT COUNT(*) FROM (SELECT DISTINCT C.ID FROM CONVERSATION C %@ %@)
A.ID = ?
v8@?0^{sqlite3_stmt=}4
A.PARENT_ID = ?
A.USERNAME = ?
 SOURCE_TYPE = ?
 ACCOUNT_ID = ?
 M.ID = ? 
UPDATE MAILBOX SET LAST_UPDATE = ? WHERE ID = ?
SELECT LAST_UPDATE FROM MAILBOX WHERE MAILBOX_ID = ? 
 SYNC_ACTIVE = 1 
 SYNC_ENABLED = 1 OR SYNC_REQUESTED = 1
SELECT SYNC_VERSION FROM MAILBOX_SYNC_VERSION WHERE MAILBOX_ID = ?
INSERT OR REPLACE INTO MAILBOX_SYNC_VERSION (MAILBOX_ID, SYNC_VERSION) VALUES (?, ?)
DELETE FROM MAILBOX_SYNC_VERSION 
INSERT OR REPLACE INTO PENDING_MESSAGE_CHANGE (MESSAGE_ID, STATUS, ACTION_DELETE) VALUES (?, ?, ?)
SELECT MESSAGE_ID, STATUS, ACTION_DELETE FROM PENDING_MESSAGE_CHANGE WHERE MESSAGE_ID = ?
DELETE FROM PENDING_MESSAGE_CHANGE WHERE MESSAGE_ID = ?
INSERT INTO MESSAGE (ID, CONVERSATION_ID, ACCOUNT_ID, DATE_SENT, DATE_RECEIVED, MESSAGE_ID_HEADER, STATUS, VISIBLE_STATUS, STATUS_VERSION, CONTENT_SYNCED, NOTIFICATION_MESSAGE_ID, MAILBOX_ID, THREAD_SPECIFIC, SPECIAL_MAILBOX_SPECIFIC, SERVER_ID, SOURCE, PUBLISHER_BULLETIN_ID) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
INSERT INTO PROTECTED.MESSAGE (ID, "FROM", SUBJECT, PREVIEW, "TO", CC, BCC, MAILBOX_ID) VALUES (?, ?, ?, ?, ?, ?, ?, ?)
INSERT INTO PROTECTED.MESSAGE (ID, "FROM", SUBJECT, PREVIEW, "TO", CC, BCC, MAILBOX_ID) VALUES (%Q, %Q, %Q, %Q, %Q, %Q, %Q, %Q)
, STATUS_VERSION = ?
, SERVER_ID = ?
UPDATE MESSAGE SET THREAD_SPECIFIC = ?, SPECIAL_MAILBOX_SPECIFIC = ?,  VISIBLE_STATUS = ?, STATUS = ? %@ , SOURCE = ? %@ WHERE ID = ?
UPDATE PROTECTED.MESSAGE SET PREVIEW = ? WHERE ID = ?
UPDATE PROTECTED.MESSAGE SET PREVIEW = %Q WHERE ID = %Q
UPDATE MESSAGE SET DATE_RECEIVED = ? WHERE ID = ?
UPDATE MESSAGE SET VISIBLE_STATUS = STATUS WHERE VISIBLE_STATUS != STATUS
SELECT 1 FROM MESSAGE WHERE VISIBLE_STATUS != STATUS 
SELECT ACCOUNT_IDENTIFIER FROM PROTECTED.ACCOUNT_IDENTITY 
SELECT ID FROM MESSAGE WHERE DATE_RECEIVED < ? 
 AND MAILBOX_ID = ? 
UPDATE MESSAGE SET CONTENT_SYNCED = ? WHERE ID = ?
INSERT OR REPLACE INTO IMAGE_ATTACHMENT (ID, URL, MESSAGE_ID, SYNC_STATE) VALUES 
(?, ?, ?, ?)
SELECT ID, URL, SYNC_STATE, MESSAGE_ID FROM IMAGE_ATTACHMENT WHERE ID = ? AND MESSAGE_ID = ?
UPDATE IMAGE_ATTACHMENT SET SYNC_STATE = ? WHERE ID = ? AND MESSAGE_ID = ? 
SELECT ID, URL, SYNC_STATE FROM IMAGE_ATTACHMENT WHERE MESSAGE_ID = ? 
 AND SYNC_STATE = ?
INSERT INTO CONVERSATION (ID, DATE_RECEIVED, MAILBOX_ID) VALUES (?, ?, ?)
UPDATE CONVERSATION SET DATE_RECEIVED = ? WHERE ID = ?
INSERT OR REPLACE INTO ACCOUNT (ID, SOURCE_TYPE, LOCAL_ID, USERNAME, PARENT_ID) VALUES (?, ?, ?, ?, ?)
INSERT OR REPLACE INTO PROTECTED.ACCOUNT (ID, DISPLAY_NAME, SHOULD_ARCHIVE, EMAIL_ADDRESSES) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO PROTECTED.ACCOUNT (ID, DISPLAY_NAME, SHOULD_ARCHIVE, EMAIL_ADDRESSES) VALUES (%Q, %Q, %i, %Q)
UPDATE PROTECTED.ACCOUNT SET DISPLAY_NAME = ?, SHOULD_ARCHIVE = ?, EMAIL_ADDRESSES = ? WHERE ID = ?
UPDATE PROTECTED.ACCOUNT SET DISPLAY_NAME = %Q, SHOULD_ARCHIVE = %i, EMAIL_ADDRESSES = %Q WHERE ID = %Q
DELETE FROM PROTECTED.MAILBOX WHERE ID in  (SELECT ID FROM MAILBOX WHERE ACCOUNT_ID = ?)
DELETE FROM PROTECTED.MAILBOX WHERE ID = %Q
DELETE FROM MAILBOX WHERE ACCOUNT_ID = ?
DELETE FROM MAILBOX WHERE ID = ?
DELETE FROM PROTECTED.MAILBOX WHERE ID = ?
DELETE FROM CONVERSATION WHERE NOT EXISTS (SELECT ID FROM MESSAGE WHERE CONVERSATION_ID = CONVERSATION.ID)
DELETE FROM ACCOUNT WHERE ID = ?
DELETE FROM PROTECTED.ACCOUNT WHERE ID = ?
DELETE FROM PROTECTED.ACCOUNT WHERE ID = %Q
SELECT A.SOURCE_TYPE FROM MESSAGE ME LEFT OUTER JOIN ACCOUNT A ON ME.ACCOUNT_ID = A.ID WHERE ME.ID = ? 
SELECT A.SOURCE_TYPE FROM CONVERSATION C LEFT OUTER JOIN MAILBOX M ON M.ID = C.MAILBOX_ID LEFT OUTER JOIN ACCOUNT A ON M.ACCOUNT_ID = A.ID WHERE C.ID = ? 
SELECT SOURCE_TYPE FROM ACCOUNT WHERE ID = ? 
SELECT A.SOURCE_TYPE FROM MAILBOX M LEFT OUTER JOIN ACCOUNT A ON M.ACCOUNT_ID = A.ID WHERE M.ID = ? 
INSERT INTO MAILBOX (ID, TYPE, FILTER_TYPE, ACCOUNT_ID, URL, SYNC_ENABLED, SYNC_REQUESTED, SYNC_ACTIVE, LAST_UPDATE, DATABASE_CONTENT_VERIFIED) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
INSERT INTO PROTECTED.MAILBOX (ID, CUSTOM_NAME) VALUES (?, ?)
INSERT INTO PROTECTED.MAILBOX (ID, CUSTOM_NAME) VALUES (%Q, %Q)
UPDATE MAILBOX %@ WHERE ID = ?
UPDATE PROTECTED.MAILBOX %@ WHERE ID = ?
UPDATE PROTECTED.MAILBOX %@ WHERE ID = %@
INSERT INTO IDS_IDENTIFIER_NOT_YET_ACKD (IDS_IDENTIFIER, OBJECT_ID, OBJECT_TYPE, DATE_TO_RESEND, RESEND_INTERVAL) VALUES (?, ?, ?, NULL, ?)
SELECT OBJECT_ID, OBJECT_TYPE, RESEND_INTERVAL FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE IDS_IDENTIFIER = ?
DELETE FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE IDS_IDENTIFIER = ?
UPDATE IDS_IDENTIFIER_NOT_YET_ACKD SET RESEND_INTERVAL = ?, DATE_TO_RESEND = ? WHERE IDS_IDENTIFIER = ?
SELECT IDS_IDENTIFIER, DATE_TO_RESEND FROM IDS_IDENTIFIER_NOT_YET_ACKD WHERE DATE_TO_RESEND IS NOT NULL
INSERT INTO COMPOSED_MESSAGE (ID, REFERENCE_MESSAGE_ID, IDS_IDENTIFIER, PROGRESS, DATE_SENT) VALUES (?, ?, ?, ?, ?)
INSERT INTO PROTECTED.COMPOSED_MESSAGE (ID, SENDING_TYPE, "TO", CC, SUBJECT, BODY, REFERENCE_MESSAGE_ID, INCLUDE_ATTACHMENTS, DATE_SENT, IDS_IDENTIFIER) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
INSERT INTO PROTECTED.COMPOSED_MESSAGE (ID, SENDING_TYPE, "TO", CC, SUBJECT, BODY, REFERENCE_MESSAGE_ID, INCLUDE_ATTACHMENTS, DATE_SENT, IDS_IDENTIFIER) VALUES (%Q, %lu, %Q, %Q, %Q, %Q, %Q, %i, datetime(%f, 'unixepoch'), %Q)
UPDATE COMPOSED_MESSAGE SET PROGRESS = ? WHERE ID = ?
DELETE FROM COMPOSED_MESSAGE WHERE ID = ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE ID = ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE ID = %Q
DELETE FROM COMPOSED_MESSAGE WHERE DATE_SENT < ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE DATE_SENT < ?
DELETE FROM PROTECTED.COMPOSED_MESSAGE WHERE DATE_SENT < datetime(%f, 'unixepoch')
IDS_IDENTIFIER = ?
ID = ?
SELECT REFERENCE_MESSAGE_ID, ID, PROGRESS FROM COMPOSED_MESSAGE WHERE REFERENCE_MESSAGE_ID IS NOT NULL ORDER BY REFERENCE_MESSAGE_ID
SELECT ID, PROGRESS, REFERENCE_MESSAGE_ID FROM COMPOSED_MESSAGE WHERE IDS_IDENTIFIER = ?
SELECT C.ID, P.SUBJECT, C.PROGRESS FROM COMPOSED_MESSAGE C INNER JOIN PROTECTED.COMPOSED_MESSAGE P ON C.ID = P.ID WHERE PROGRESS = ?
-[NNMKDatabase failedComposedMessageIdsAndSubjects]_block_invoke
SELECT REFERENCE_MESSAGE_ID FROM COMPOSED_MESSAGE WHERE ID = ?
SELECT COUNT(ID) FROM MESSAGE
M.ID is not null
SELECT MIN(DATE_RECEIVED) FROM MESSAGE WHERE MAILBOX_ID = ? AND THREAD_SPECIFIC = 0 
AND ((SPECIAL_MAILBOX_SPECIFIC & ? > 0) OR SPECIAL_MAILBOX_SPECIFIC = 0)
AND SPECIAL_MAILBOX_SPECIFIC = 0
 ORDER BY DATE_RECEIVED ASC 
INSERT OR REPLACE INTO ACCOUNT_IDENTITY (ID) VALUES (?) 
INSERT OR REPLACE INTO PROTECTED.ACCOUNT_IDENTITY (ID, USERNAME, DISPLAY_NAME, TOKEN, REFRESH_TOKEN, TYPE) VALUES (?, ?, ?, ?, ?, ?) 
INSERT OR REPLACE INTO PROTECTED.ACCOUNT_IDENTITY (ID, USERNAME, DISPLAY_NAME, TOKEN, REFRESH_TOKEN, TYPE) VALUES (%s, %s, %s, %s, %s, %u) 
SELECT COUNT(ID) FROM ACCOUNT_IDENTITY
SELECT ID, USERNAME, DISPLAY_NAME, TOKEN, REFRESH_TOKEN, TYPE FROM PROTECTED.ACCOUNT_IDENTITY
SELECT ID FROM ACCOUNT_IDENTITY
Protected
Public
DELETE FROM ACCOUNT_IDENTITY WHERE ID = ?
DELETE FROM PROTECTED.ACCOUNT_IDENTITY WHERE ID = ?
DELETE FROM PROTECTED.ACCOUNT_IDENTITY WHERE ID = %Q
DELETE FROM ACCOUNT
DELETE FROM PROTECTED.ACCOUNT
DELETE FROM MAILBOX
DELETE FROM PROTECTED.MAILBOX
v12@?0^{sqlite3_stmt=}4i8
SELECT KEY, VALUE FROM CONTROL
SELECT VALUE FROM CONTROL WHERE KEY = '%@'
SELECT VALUE FROM %@CONTROL WHERE KEY = ?
PROTECTED.
INSERT OR REPLACE INTO %@CONTROL (KEY, VALUE) VALUES (?, ?)
INSERT OR REPLACE INTO PROTECTED.CONTROL (KEY, VALUE) VALUES (%s, %s)
SELECT ID FROM MAILBOX WHERE ACCOUNT_ID = ?
LIMIT ?, ?
 M.MAILBOX_ID IN (%@) 
SELECT %@ FROM MESSAGE M INNER JOIN PROTECTED.MESSAGE P ON M.ID == P.ID WHERE %@ ORDER BY %@ %@
SELECT %@ FROM MESSAGE M WHERE %@ ORDER BY %@ %@
CONVERSATION_ID
%@ID,                 %@ AS CONVERSATION_ID,                 %@ACCOUNT_ID,                 NULL AS "FROM",                 %@DATE_SENT,                 NULL AS SUBJECT,                 %@DATE_RECEIVED,                 %@MESSAGE_ID_HEADER,                 NULL AS PREVIEW,                 %@STATUS,                 %@VISIBLE_STATUS,                 NULL AS "TO",                 NULL AS CC,                 NULL AS BCC,                 %@NOTIFICATION_MESSAGE_ID,                 %@STATUS_VERSION,                 %@MAILBOX_ID,                 %@THREAD_SPECIFIC ,                 %@SPECIAL_MAILBOX_SPECIFIC ,                 %@SERVER_ID ,                 %@SOURCE ,                 %@PUBLISHER_BULLETIN_ID
%@ID,                 %@ AS CONVERSATION_ID,                 %@ACCOUNT_ID,                 %@"FROM",                 %@DATE_SENT,                 %@SUBJECT,                 %@DATE_RECEIVED,                 %@MESSAGE_ID_HEADER,                 %@PREVIEW,                 %@STATUS,                 %@VISIBLE_STATUS,                 %@"TO",                 %@CC,                 %@BCC,                 %@NOTIFICATION_MESSAGE_ID,                 %@STATUS_VERSION,                 %@MAILBOX_ID,                 %@THREAD_SPECIFIC ,                 %@SPECIAL_MAILBOX_SPECIFIC,                 %@SERVER_ID ,                 %@SOURCE ,                 %@PUBLISHER_BULLETIN_ID
%@DATE_RECEIVED DESC, %@ID ASC
WHERE ID IN (%@)
DELETE FROM PROTECTED.MESSAGE %@
DELETE FROM PROTECTED.MESSAGE 
DELETE FROM MESSAGE %@
DELETE FROM IMAGE_ATTACHMENT %@
WHERE (%@)
MAILBOX_ID IN (%@) 
 WHERE W.%@ 
 AND W.%@ 
LEFT OUTER JOIN MESSAGE ME ON ME.CONVERSATION_ID = W.ID
 WHERE %@ 
 AND %@ 
CONVERSATION
(SELECT DISTINCT X.* FROM CONVERSATION X LEFT OUTER JOIN MESSAGE ME ON ME.CONVERSATION_ID = X.ID WHERE %@)
AND %@
, (SELECT COUNT(ID) FROM %@ WHERE ((DATE_RECEIVED > C.DATE_RECEIVED) OR (DATE_RECEIVED = C.DATE_RECEIVED AND ID < C.ID)) %@) AS C_INDEX 
 AND C.%@ 
 LEFT OUTER JOIN PROTECTED.MESSAGE P ON M.ID == P.ID 
SELECT C.MAILBOX_ID %1$@, %2$@ FROM CONVERSATION C                          LEFT OUTER JOIN MESSAGE M ON M.CONVERSATION_ID = C.ID                          %3$@                          WHERE                          C.ID IN (SELECT DISTINCT W.ID FROM CONVERSATION W %4$@ %5$@ ORDER BY %6$@ LIMIT ?, ?)                            %7$@                          ORDER BY %8$@, %9$@
WHERE %@
SELECT %@ FROM ACCOUNT A INNER JOIN PROTECTED.ACCOUNT P_ACCOUNT ON A.ID == P_ACCOUNT.ID %@
P_ACCOUNT
SELECT %@ FROM ACCOUNT A %@
SELECT %@ FROM MAILBOX M LEFT OUTER JOIN PROTECTED.MAILBOX P_MAILBOX ON M.ID == P_MAILBOX.ID %@
P_MAILBOX
SELECT %@ FROM MAILBOX M %@
%@ID, NULL, NULL, NULL, %@SOURCE_TYPE, %@LOCAL_ID, %@USERNAME, %@PARENT_ID
%@ID, %@DISPLAY_NAME, %@SHOULD_ARCHIVE, %@EMAIL_ADDRESSES, %@SOURCE_TYPE, %@LOCAL_ID, %@USERNAME, %@PARENT_ID
%@ID, %@TYPE, %@FILTER_TYPE, NULL, %@ACCOUNT_ID, %@URL, %@SYNC_ENABLED, %@SYNC_REQUESTED, %@SYNC_ACTIVE, %@LAST_UPDATE, %@DATABASE_CONTENT_VERIFIED 
%@ID, %@TYPE, %@FILTER_TYPE, %@CUSTOM_NAME, %@ACCOUNT_ID, %@URL, %@SYNC_ENABLED, %@SYNC_REQUESTED, %@SYNC_ACTIVE, %@LAST_UPDATE, %@DATABASE_CONTENT_VERIFIED 
SELECT ID, SENDING_TYPE, "TO", CC, SUBJECT, BODY, REFERENCE_MESSAGE_ID, INCLUDE_ATTACHMENTS FROM PROTECTED.COMPOSED_MESSAGE WHERE %@
SELECT ID, NULL, NULL, NULL, NULL, NULL, REFERENCE_MESSAGE_ID, NULL FROM COMPOSED_MESSAGE WHERE %@
DELETE FROM IDS_IDENTIFIER_NOT_YET_ACKD
%@DATE_RECEIVED >= %f
(%@VISIBLE_STATUS & %lu) > 0
loadedSyncedMailboxProtectedData
TB,N,V_loadedSyncedMailboxProtectedData
protectedDatabaseAttached
requiresMigration
currentDatabaseSchemaVersion
TI,N,V_currentDatabaseSchemaVersion
expectedDatabaseVersion
TI,R,N
fullSyncVersion
TI,N,V_fullSyncVersion
receivedFullSyncMessages
TB,N,V_receivedFullSyncMessages
requestedHaltSync
TB,N,V_requestedHaltSync
lastIDSIdentifierForFullSyncRequest
T@"NSString",&,N,V_lastIDSIdentifierForFullSyncRequest
lastIDSIdentifierForHaltSyncRequest
T@"NSString",&,N,V_lastIDSIdentifierForHaltSyncRequest
lastIDSIdentifierForWebKitStatusNotification
T@"NSString",&,N,V_lastIDSIdentifierForWebKitStatusNotification
databaseRecentlyMigrated
TB,N,V_databaseRecentlyMigrated
mailboxFilter
T@"NNMKMailboxFilter",&,N,V_mailboxFilter
appLastLaunchedDate
T@"NSDate",&,N,V_appLastLaunchedDate
notificationSettingsEnabled
TB,N,V_notificationSettingsEnabled
isProtectedDatabaseAvailable
T@"NSString",&,N,V_messageId
status
TI,N,V_status
actionDeleted
TB,N,V_actionDeleted
data
T@"NSData",&,N,V_data
contentId
T@"NSString",C,N,V_contentId
uncompressedImage
TB,N,V_uncompressedImage
T@"<NNMKMessageDataSource>",&,N,V_messageDataSource
messageContentOperationQueue
T@"NSOperationQueue",&,N,V_messageContentOperationQueue
attachmentsOperationQueue
T@"NSOperationQueue",&,N,V_attachmentsOperationQueue
highestPriorityOperation
T@"NSOperation",W,N,V_highestPriorityOperation
messageIdWithHighestPriorityForRequestingAttachments
T@"NSString",&,N,V_messageIdWithHighestPriorityForRequestingAttachments
T@"<NNMKStandaloneMessageContentLoaderDelegate>",W,N,V_delegate
handler
T@"NNMKMessagesProcessedHandler",&,N,V_handler
cachedSources
T@"NSMutableDictionary",&,N,V_cachedSources
mailboxSourceDelegate
T@"<NNMKMailboxSourceDelegate>",W,N,V_mailboxSourceDelegate
NNMKMessageDataSourceResetMailboxFilterNotification
v8@?0@"<NNMKMessageDataSourceObserver>"4
Database compact procedure transaction
@"NNMKConversationOperation"20@?0@"NSString"4@"NSMutableArray"8@"NNMKConversation"12@"NSArray"16
@"NNMKConversationOperation"20@?0@"NSString"4@"NSArray"8@"NNMKConversation"12@"NSArray"16
@8@?0@"<NNMKMessageUpdate>"4
@8@?0@"<NNMKMessageDeletion>"4
v16@?0@"NNMKMessage"4I8^B12
T@"NNMKMailboxFilter",&,N
compactDatabaseProcedureContext
TI,N,V_compactDatabaseProcedureContext
T@"<NNMKMessageDataSourceDelegate>",W,N,V_delegate
observers
T@"NSHashTable",&,N,V_observers
com.apple.nanomail.receiverServerQueue
Flushing pending operations transaction
NanoMail's Main Transaction
v8@?0@"<NNMKNanoMailServiceXPCBasicClientInterface>"4
v8@?0@"<NNMKNanoMailServiceXPCAdHocClientInterface>"4
v8@?0@"<NNMKNanoMailServiceXPCMessageUpdatesBasedClientInterface>"4
v8@?0@"<NNMKNanoMailServiceXPCConversationsBrowsingBasedClientInterface>"4
v8@?0@"NSError"4
serviceCoordinator
T@"NNMKServiceCoordinator",&,N,V_serviceCoordinator
serverQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_serverQueue
xpcClientConnections
T@"NSMutableSet",&,N,V_xpcClientConnections
xpcNanoMailAppConnections
T@"NSMutableSet",&,N,V_xpcNanoMailAppConnections
xpcMessageUpdatesBasedConnections
T@"NSMutableSet",&,N,V_xpcMessageUpdatesBasedConnections
currentTransaction
T@"NSObject<OS_os_transaction>",&,N,V_currentTransaction
nanoMailSnapshotRequester
T@"NNMKNanoMailSnapshotRequester",&,N,V_nanoMailSnapshotRequester
connectionsWaitingForConversationsFromFetch
T@"NSMutableSet",&,N,V_connectionsWaitingForConversationsFromFetch
connectionListeners
T@"NSSet",&,N,V_connectionListeners
connectionLookup
T@"<NNMKXPCConnectionLookup>",&,N,V_connectionLookup
pendingOperationsQueue
T@"NNMKQueue",&,N,V_pendingOperationsQueue
scheduledToFlushPendingOperations
TB,N,V_scheduledToFlushPendingOperations
init
defaultCenter
_watchDidStartPlayingDemoMovie
addObserver:selector:name:object:
_watchDidStopPlayingDemoMovie
removeObserver:name:object:
dealloc
forceDatabaseReplace
isMigrating
setIsMigrating:
demoContentWillReplaceDatabase
sharedInstance
registryBasePath
stringByAppendingPathComponent:
defaultManager
contentsOfDirectoryAtPath:error:
countByEnumeratingWithState:objects:count:
removeItemAtPath:error:
copyItemAtPath:toPath:error:
demoContentMigrationCompletionBlock
date
messagesReceivedBefore:mailboxFilter:
count
objectAtIndexedSubscript:
dateReceived
timeIntervalSinceNow
dateByAddingTimeInterval:
setDateReceived:
dateSent
setDateSent:
updateMessageDatesForMessage:
messageDatesUpdatedCompletionBlock
initWithExecutionQueue:
shiftContentDatesForDatabase:
.cxx_destruct
setDemoContentWillReplaceDatabase:
setDemoContentMigrationCompletionBlock:
setMessageDatesUpdatedCompletionBlock:
migrationQueue
setMigrationQueue:
executionQueue
setExecutionQueue:
_isMigrating
_demoContentWillReplaceDatabase
_demoContentMigrationCompletionBlock
_messageDatesUpdatedCompletionBlock
_migrationQueue
_executionQueue
alloc
database
initWithQueue:database:delegate:
initWithQueue:dataSource:database:
initWithExecutionQueue:database:delegate:
initWithQueue:delegate:syncReceiver:standaloneService:messageDataSource:databaseFactory:accountManager:vipLibraryManager:nanoMailProcessMonitor:
setObserver:
registerObserver:
setDelegate:
createStandaloneService
fixAccountsInFrameworkWithIncorrectIdentifier
requestFullSyncIfNeeded
checkConnectivityForStandaloneMode
previousExecutionStandaloneModeState
persisteStandaloneModeState
stopListeningForPushNotifications
_unregisterForXPCActivity
checkForMailSyncUsage
_deviceLockStateChanged
_nanoMailAppUninstalled
bulletInSubsectionListChangedNotification:
startStandaloneServiceForcing:
_cancelTimerToActivateStandaloneMode
isRunningInStoreDemoMode
canStartStandaloneService
isStandaloneMode
accountManager
hasPendingAccountIdentities
validatePendingAccountIdentities
isSetup
setup
isActive
standaloneEnabledAccounts
syncAccountSourceTypeForAccounts:
isNanoMailRunningInForeground
isNetworkConnectionAllowed
isStandaloneServiceEnabled
initWithQueue:dataSource:database:accountManager:
setVipLibraryManager:
databaseRecentlyMigrated
createdDatabaseFromScratch
receivedFullSyncMessages
setCreatedDatabaseFromScratch:
setDatabaseRecentlyMigrated:
requestFullSync
reportFullSyncRequestedFromWatch:corruptionDetected:migrationRelated:idsFailureRelated:fullSyncVersionMatchRelated:
messageId
accountSourceTypeForMessageId:
serviceForAccountSourceType:
messageWithId:
source
accountSourceTypeForConversationId:
accountSourceTypeForMailboxId:
isWaitingForAccounts
initWithService:database:
class
hasFilter
messageDataSource
setMailboxFilter:
defaultMailboxFilter
startStandaloneServiceIfPosible
conversations:shouldFetchMoreMessages:
mailboxFilter
mailboxIds
hasMailboxSyncActiveForMailbox:
errorWithDomain:code:userInfo:
requestFetchManuallyTriggered:filteredConversationId:mailboxIds:forceBatchResponse:
requestOlderMessages
conversationsBeforeDate:count:shouldFetchMoreMessages:
lastObject
conversation
oldestMessageDateForMailboxId:
compare:
serviceForMailboxId:
arrayWithObjects:count:
mailboxType
initWithMailboxIds:mailboxType:
requestOlderMessagesWithFilter:
reportFetchOlderMessages
mailboxSelection
accounts
initWithAccounts:
isEqual:
mailboxChangesApplyingSelection:previousSelection:
mailboxesToUpdate
mailboxesToReSync
mailboxesToDisableSync
mailboxId
mailboxWithId:
syncEnabled
syncRequested
filterType
updatesWithSyncEnabled:syncRequested:filterType:accountId:
updateMailboxWithId:mailboxUpdates:
updatesWithSyncEnabled:syncRequested:
resetMailboxAndContentForMailboxId:applyingUpdates:
resetMailboxAndContentForMailboxId:
updateMailboxSelection:
messageWithServerId:
unreadMessagesWithContentAtIndexRange:sinceDate:fromAccountsWithIds:orVIPs:orNotifyConversation:excludingMessageIds:
totalNumberOfConversationsWithMailboxFilter:
messagesCount
dictionary
lastUpdate
setObject:forKeyedSubscript:
deleteAllMessages
initWithFilterType:
setMailboxId:
setCustomName:
setAccountId:
setSyncEnabled:
setSyncRequested:
setSyncActive:
addMailboxResetingPreviousContent:
messagesProcessedHandler
handleMessagesAdded:handler:
allMessages
resetVisibleStatusForMessages
isFilteredByType
messageService:didRequireReloadCacheWithFirstConversations:
setMailboxFilter:persist:
isClassCDataAvailable
startStandaloneService
setWithArray:
objectForKeyedSubscript:
timeIntervalSince1970
removeObject:
mailboxIdsBySourceType:
unsignedIntegerValue
nnmk_description
enumerateKeysAndObjectsUsingBlock:
syncReceiver
numberWithUnsignedInteger:
array
addObject:
networkLatencyTestMode
serviceForConversationId:
requestMoreMessagesForConversationId:
serviceForMessageWithId:
requestMessageContentForMessageId:onlyIfNotAvailable:highPriority:
isConnected
requestImageAttachment:forMessageId:
firstObject
serviceForMessage:
updateMessageStatus:
deleteMessages:
referenceMessageId
hasPrefix:
standaloneService
sendComposedMessage:
deleteComposedMessageWithId:
composedMessageWithId:
copyWithNewId
composedMessageId
composedMessageIdsByReferenceMessageIdsAndProgress:
failedComposedMessageIdsAndSubjects
addStandaloneAccount:
accountAuthenticationStatus
syncAccountAuthenticationStatus:
accountWithId:
syncAccountSourceTypeForAccounts:resendInterval:
vipLibraryManager
updateVIPList:
username
emailAddresses
dictionaryWithObjects:forKeys:count:
errorWithCode:userInfo:
delegate
messageService:didFailWithError:
messageService:didReceiveMessage:replacingPreviousMessageWithId:
connectivityState
setIsStandaloneMode:
accountsForSourceType:
tearDown
_registerForXPCActivity
_scheduleTimerToActivateStandaloneMode
startListeningForPushNotifications
handleTimerTriggeredToStartStandaloneService
performSelector:withObject:afterDelay:
cancelPreviousPerformRequestsWithTarget:selector:object:
standardUserDefaults
objectForKey:
boolValue
numberWithBool:
setObject:forKey:
mutableCopy
accountSourceTypeById
sourceType
setSourceType:
accountId
saveAccountSourceTypeById
syncAccountSourceType:resendInterval:
connectionFailed
messageService:didChangeConnectivity:
pauseNetworkActivity
resumeNetworkActivity
setAppLastLaunchedDate:
setNotificationSettingsEnabled:
isDeviceUnlocked
_isNotificationEnabled
appLastLaunchedDate
requestedHaltSync
setRequestedHaltSync:
requestHaltSync
reportHaltSyncRequestedFromWatch:
requestFetchManuallyTriggered:filteredConversationId:forceBatchResponse:
bulletinBoardObserver
hasNotificationsEnabled
hasOnlyVIPNotificationsEnabled
hasVIP
requestCompactMessagesBeforeDate:
startDelayedDatabaseCompactProcedure
cancelDelayedDatabaseCompactProcedure
messageService:didAddMessages:containsNewMessages:
messageService:didUpdateMessages:
messageService:didDeleteMessages:
messageService:didExecuteConversationOperations:
messageService:didReceiveImageAttachmentOfMessageWithId:contentId:
messageService:didFailSyncingAttachmentWithId:messageId:
messageService:didReceiveMessageContentForMessageId:
messageService:didChangeSendingProgressForComposeMessage:composedMessageWithId:referenceMessageId:
messageService:didFailSendingComposedMessageWithId:subject:
messageService:didStartSendingComposedMessageWithId:referenceMessageId:
messageService:didFailSyncingMessagesWithError:
messageService:didReplyWithMessageContentLoadFailedForMessageWithId:
setReceivedFullSyncMessages:
messageService:didFinishSyncingMessages:isInitialSync:
isMailboxVisible:
messageServiceDidReceiveOldMessageAvailableNotification:forMailboxId:
messageServiceDidCompleteFetchRequest:mailboxIds:batchResponse:
setConnectionFailed:
messageServiceDidDeleteAllMessages:
handleNewAccountFromCompanion:
messageService:didAddAccount:
messageService:didUpdateAccount:
deleteMailboxesWithAccountId:
deleteAccountWithId:
messageService:didChangeMailboxSelection:
deleteAccount:
removeObjectForKey:
messageService:didDeleteAccount:
code
messageService:didUpdateMailbox:lastUpdate:
resendReadyIDSIdentifiers
notifyMailboxSelectionChanged
deleteDatabaseDirectoryCompletely
recreateConnection
databaseFactory
isProtectedDatabaseAttached
_doDispatchAfterProtectedDatabaseAttachedWithAttempsRemaining:block:
attemptToLoadProtectedData
resetPushNotificationAccountCache
numberWithLong:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
messageDataSource:didInsertMessages:
messageDataSource:didUpdateMessages:
messageDataSource:didRemoveMessages:
messageDataSourceDidRemoveAllMessages:
messageDataSource:didFinishCompactingDatabaseWithDateForCap:
messageDataSource:shouldUpdateExistingMessage:updatedMessage:
handleDatabaseUnlocked
handleDatabaseChangedForRetailDemo
handleDatababaseDirectoryRecreated
handleDatabaseMigrated
messageService:didSucceedToCommunicate:
standaloneService:didChangeAccountSourceType:
standaloneService:didRequireAccountCredentialsRenewalForAccount:
standaloneServiceShouldEnableNetworkActivity:
syncReceiver:didReceiveStandaloneAccountIdentity:
syncReceiverDidRequestAccountAuthenticationStatus:
syncReceiver:didRequestAccountSourceTypeForAccountId:resendInterval:
syncReceiver:didReceiveVIPList:
syncReceiver:shouldHandleInitialSyncForMailbox:
nanoMailProcessMonitor:didChangeNanoMailApplicationState:
accountManagerIsNetworkAvailable:
accountManagerDidFinishValidatingAccountIdentities:
accountManagerDidFailValidatingAccountIdentities:error:
requestMessageContentForMessageIds:onlyIfNotAvailable:highPriority:
initWithQueue:delegate:nanoMailProcessMonitor:
retrieveFirstConversations:fetchIfNotAvailable:willFetchMoreMessages:forMailboxFilter:error:
conversationsReceivedBefore:count:fetchIfNotAvailable:willFetchMoreMessages:error:
totalNumberOfConversations
lastUpdateByMailboxId
addMessage:
addMailbox:
cleanUpMessagesForFilteredMailbox
handleAppConnectionInvalidated
resendComposedMessageWithId:
accountsWithError:
updateAppLastLaunchedDate
messageDataSourceDidRecreateDatabase:
dispatchAfterProtectedDatabaseAttached:
waitUntilDone
setSyncReceiver:
setStandaloneService:
previouslyUsedService
setPreviouslyUsedService:
transientService
setTransientService:
setMessageDataSource:
setDatabaseFactory:
setDatabase:
pendingFullSyncRequest
setPendingFullSyncRequest:
executeFullSyncAfterFirstUnlock
setExecuteFullSyncAfterFirstUnlock:
lastBatchFetchRequestDateByMailboxId
setLastBatchFetchRequestDateByMailboxId:
canStartStandaloneServiceWhenAppNotRunningAndConnectivityChanges
setCanStartStandaloneServiceWhenAppNotRunningAndConnectivityChanges:
setAccountSourceTypeById:
setBulletinBoardObserver:
networkCheckUtility
setNetworkCheckUtility:
nanoMailProcessMonitor
setNanoMailProcessMonitor:
_pendingFullSyncRequest
_executeFullSyncAfterFirstUnlock
_connectionFailed
_isStandaloneMode
_canStartStandaloneServiceWhenAppNotRunningAndConnectivityChanges
_delegate
_syncReceiver
_standaloneService
_accountManager
_previouslyUsedService
_transientService
_messageDataSource
_databaseFactory
_database
_vipLibraryManager
_lastBatchFetchRequestDateByMailboxId
_accountSourceTypeById
_bulletinBoardObserver
_networkCheckUtility
_nanoMailProcessMonitor
setupIfNeeded
openSynchronously
library
initWithLibrary:
registerStore:
unregisterStore:
setIsForeground:
_messageAddedNotification:
_messageFlagsChangedNotification:
_messagesCompactedNotification:
sourceForMailbox:
sourceForMailboxFilter:mailboxesById:
initWithSources:
requestQueue
fetchWindow
_fetchWithOptions:fetchWindow:
mailboxSourceDidIgnoreFetchRequest:
_executeOnlyIfNotFetching:elseBlock:
fetchOldMessagesWindow
_libraryMessagesForConversationId:
loadMoreMessagesForThreadContainingMessage:hasNoMoreMessages:
currentMonitor
error
mailboxSource:didCompleteFetchRequestForMailboxes:errorsByMailboxId:
_libraryMessageForServerId:
messageSize
screenWidth
parseMessage:maxImageWidth:imageAttachmentsLoaded:preview:
reportContentDownloadDuration:
setMessageId:
setMessageContent:
setPreview:
setImageAttachmentsLoadedByContentId:
reportStandaloneContentDownloadFailed
messageBodyIfAvailable
mf_lastPartNumber
partWithNumber:
messageBodyParser
attachmentForURL:mimePart:
contentID
fetchDataSynchronously:
reportStandaloneAttachmentDownloadFailed
shouldLogEvent:
numberWithDouble:
logEvent:eventDictionary:
reportAttachmentDownloadDuration:
serverId
mailboxID
urlForMailboxID:
mailboxUidFromActiveAccountsForURL:
fullPath
fileURLWithPath:
deleteAttachmentsForMessages:inMailboxFileURL:
deleteBodiesForMessages:inMailboxFileURL:
messageStore
mailbox
initWithNNMKMessage:mailboxUid:
nnmk_map:
duplicateMessages:newRemoteIDs:forMailbox:setFlags:clearFlags:messageFlagsForMessages:createNewCacheFiles:
_updateMessages:sync:
_deleteMessages:sync:
mailboxUid
_removeMessagesFromMailbox:
account
mailboxUidOfType:createIfNeeded:
copyOfAllMessagesWithOptions:
_messagesFromMFLibraryMessages:
URLString
removeAllMessagesFromMailbox:removeMailbox:andNotify:
fetchMobileSynchronously:preservingUID:options:
reportStandaloneFetchFailed
mailboxSourceDidActivate:
mailboxSourceDidRequireAccountCredentialsRenewal:
notifyDelegateAboutMissingMessages:isDeletion:
_mapLibraryMessages:missingMessagesHandler:
deleteMessages:moveToTrash:
manuallyDeletedMessageIds
compactMessages:permanently:
status
messageFlagsFromMessageStatus:
dictionaryFromMessageFlags:
setFlagsFromDictionary:forMessages:
setFlagsLocallyFromDictionary:forMessages:
mailboxSource:didRequestToChangeMissingMessages:isDeletion:
object
userInfo
mf_boolForKey:
messageIDHashString
_handleMessageIdsDeleted:
_handleMessagesUpdated:
messageIDHash
manuallyInsertedMessageIds
containsObject:
_handleMessagesAdded:
numberWithLongLong:
stringValue
messageIdHeader
_messagesFromMFLibraryMessages:executionBlock:
mailboxSource:didAddMessages:
mailboxSource:didUpdateMessages:
messageFromMFLibraryMessage:
setSource:
mailboxSource:didDeleteMessageIds:
initWithType:qualifier:expression:
messagesMatchingCriterion:options:
store
setMessageStore:
path
accountRelativePath
stringWithFormat:
timeIntervalSinceReferenceDate
compoundSourceFromSources:
initWithStore:executionQueue:requestQueue:
fetchMessages
fetchOlderMessages
fetchMessagesForConversationId:
downloadContentForMessageId:
downloadImageAttachment:forMessageId:contentId:
deleteContentForMessage:
insertMessages:
updateMessages:sync:
deleteMessages:sync:
removeAllMessages
allMessages:
setFetchWindow:
isForeground
setMailboxIds:
isFetching
setIsFetching:
fetchMessageOptions
setFetchMessageOptions:
fetchOlderMessagesOptions
setFetchOlderMessagesOptions:
setRequestQueue:
setManuallyInsertedMessageIds:
setManuallyDeletedMessageIds:
setMessageBodyParser:
isActivate
setIsActivate:
sourceLibrary
setSourceLibrary:
_isForeground
_isFetching
_isActivate
_fetchWindow
_mailboxId
_mailboxIds
_messageStore
_fetchMessageOptions
_fetchOlderMessagesOptions
_requestQueue
_manuallyInsertedMessageIds
_manuallyDeletedMessageIds
_messageBodyParser
_sourceLibrary
initWithPrimaryLibrary:
initWithMessage:
loadAsPlainText:asHTML:downloadIfNecessary:
failedToLoad
hasNoContent
content
messageBody
_parseMimeParts:messageBody:attributedString:maxLength:maxImageWidth:maxImageAttachments:shouldTryAlternatives:urlsForValidation:nanoAttachmentsList:imageAttachmentsURLsToLoad:imageAttachmentsLoaded:usingAlternativePart:partiallyLoaded:
nano_mailboxId
prepareAttributedStringForDisplay:messageId:mailboxId:attachments:
setMainAlternativeValid:
setAttachments:
setPartiallyLoaded:
length
attributedSubstringFromRange:
string
stringByReplacingOccurrencesOfString:withString:
mainAlternativeValid
trimAttributedString:
archivedDataWithRootObject:requiringSecureCoding:error:
setTextData:
retrieveHTMLContent:
setHtmlContentData:
initWithString:attributes:
dataUsingEncoding:
appendData:
attachmentManager
message
messageID
attachmentForTextAttachment:error:
fetchLocalData
markupStringForDisplayWithData:
boolForKey:
htmlData
preferredCharacterSet
LocalizedStringFromFramework:
done
data
attachmentForURL:error:
setPart:
type
subtype
setMimeType:
attachmentFilename
setFileName:
approximateRawSize
setEncodedFileSize:
disposition
setDisposition:
_parseTextAttachmentMimePart:messageBody:maxImageAttachments:nanoAttachmentsList:imageAttachmentsURLsToLoad:
appendAttributedString:
_parseStringMimePart:maxLength:
_parseWebMessageDocumentMimePart:messageBody:maxLength:maxImageWidth:maxImageAttachments:shouldTryAlternatives:urlsForValidation:finalNanoAttachmentsList:finalImageAttachmentsURLsToLoad:finalImageAttachmentsLoaded:usingAlternativePart:partiallyLoaded:
topLevelPart
_parseAttachmentsFromMimePart:messageBody:maxImageAttachments:nanoAttachmentsList:imageAttachmentsURLsToLoad:
substringToIndex:
initWithString:
parseHTMLBody:encoding:maxLength:maxImageWidth:partiallyParsed:imageAttachmentsLoaded:urlsFound:
parseHTMLBody:encoding:maxLength:maxImageWidth:partiallyParsed:imageAttachmentsLoaded:urlsForValidation:
mimePart
parentPart
isEqualToString:
numberOfAlternatives
alternativeAtIndex:
contentToOffset:resultOffset:asHTML:
addObjectsFromArray:
allObjects
addEntriesFromDictionary:
allKeys
setContentId:
setFileSize:
setType:
setRenderOnClient:
setMimeBody:
nanoAttachmentType
imageAttachmentAttributedStringWithContentId:imageSize:mergingAttributes:
attachmentAttributedStringWithContentId:mergingAttributes:
attachmentURLs
_nanoAttachmentForURL:mimePart:
contentId
absoluteString
setUrl:
fileName
encodedFileSize
htmlParser
setHtmlParser:
setAttachmentManager:
_htmlParser
_attachmentManager
setServerId:
nano_accountId
conversationID
generateConversationIdWithAccountId:conversationId:
setConversationId:
firstSender
setFrom:
setTo:
setCc:
setBcc:
subject
setSubject:
subjectString
messageIDHeader
setMessageIdHeader:
summary
messageFlags
conversationFlags
_messageStatusFromMessageFlags:conversationFlags:
setStatus:
generateMessageHashForMessage:
name
remoteID
generateNotificationIdWithFolderId:remoteId:
setNotificationMessageId:
setIsThreadSpecific:
checkStatus:stateToCheck:
boolToString:
isPDFFile
isImageFile
mimeType
caseInsensitiveCompare:
setWithObjects:
initWithObjects:
metadataValueForKey:
isDisplayableImage
hasSuffix:
isRestrictedMIMEType
isContentOpenable
isDataAvailableLocally
setMetadataValue:forKey:
isDisplayableInline
appendString:
attachmentContentTypeForFileName:
decodedFileSize
attachmentElementHTMLStringWithAttributes:
stringWithString:
appendFormat:
setObserverFeed:
retrieveCurrentSystemBBSectionInfo
_hasNotificationsEnabled
_hasOnlyVIPNotificationsEnabled
_allowNotificationForVIPs
_allowNotificationForAccount:
sectionIdentifier
universalSectionIdentifier
getSectionInfoForSectionIDs:withCompletion:
subsections
dictionaryWithCapacity:
subsectionID
allowsNotifications
alertType
subsectionsById
_allowNotificationForBBSectionInfo:
allValues
_activeSubsectionsCount
updateSubsectionList
postNotificationName:object:
systemBBSectionInfo
observer:addBulletin:forFeed:playLightsAndSirens:withReply:
observer:addBulletin:forFeed:
observer:modifyBulletin:forFeed:
observer:modifyBulletin:
observer:removeBulletin:forFeed:
observer:removeBulletin:
observer:updateSectionInfo:
observer:removeSection:
observer:noteSectionParametersChanged:forSectionID:
observer:purgeReferencesToBulletinID:
observer:noteInvalidatedBulletinIDs:
observer:noteServerConnectionStateChanged:
observer:noteServerReceivedResponseForBulletin:
observer:prepareAttachment:beforeDeliveringBulletin:withCompletionHandler:
observerShouldFetchAttachmentImageBeforeBulletinDelivery:
observerShouldFetchAttachmentSizeBeforeBulletinDelivery:
observer:thumbnailSizeConstraintsForAttachment:bulletin:
observer:thumbnailSizeConstraintsForAttachmentType:
observer:processData:forAttachment:bulletin:completionHandler:
observer:composedImageFromThumbnailData:forAttachment:bulletin:completionHandler:
observer:composedImageSizeForAttachment:bulletin:thumbnailSize:
observer:composedAttachmentImageForType:thumbnailData:key:
observer:composedAttachmentSizeForType:thumbnailWidth:height:key:
load
allowNotificationForVIPs
allowNotificationForAccount:
internalQueue
setInternalQueue:
setSystemBBSectionInfo:
setSubsectionsById:
bulletinBoardTimedOut
setBulletinBoardTimedOut:
_bulletinBoardTimedOut
_internalQueue
_systemBBSectionInfo
_subsectionsById
initWithQueue:
updateConnectivity
datesForIDSIdentifiersScheduledToBeResent
enqueueIDSIdentifiersForResend:
_sendComposedMessage:resendInterval:
syncActiveMailboxes
requestCompactMessagesBeforeDate:mailbox:
fullSyncVersion
setFullSyncVersion:
setBeforeDateReceived:
requestCompactMessages:
isPossiblyConnected
_requestContentFromProviderForMessageWithIds:highPriority:
dataSource
containsMessageContentAndAttachmentsForMessageId:
nnmk_filter:
serverIdForMessageId:
setHighPriority:
_isPossiblyConnectedToPhoneThroughCloudMessaging
requestContent:highPriority:
attachmentWithId:messageId:
_isPossiblyConnectedToPhoneThroughMagnetOrWifi
setWantsBatchedResponse:
session
outstandingMailboxFetchIds
_fetchRequestProtobufFilteredConversationId:mailboxId:batchResponse:
addFetchRequest:
wantsBatchedResponse
reportFetchManualCloud
reportFetchResumeCloud
setLastFetchRequestForBatchedResponseInterval:
reportFetchManualInRange
reportFetchResumeInRange
requestFetch:
setLastFetchRequestIDSIdentifier:
initWithMailboxIds:
allMessagesWithMailboxFilter:
subarrayWithRange:
setWillTrimDatabaseAfterResults:
compressedData
setCurrentMessageIdsAndStatus:
setCurrentDateForRequestingMoreMessages:
oldestMessageDateForMailboxId:specialMailboxFilterType:
setFilterType:
addMoreMessagesRequest:
moreMessagesRequestsCount
requestMoreMessagesInBatch:
setLastFetchMoreMessagesIDSIdentifier:
lastFetchMoreMessagesIDSIdentifier
messageIdsFromMessages:
statusVersion
setStatusVersion:
setUpdatedStatus:
addMessageStatusUpdate:
updateMessagesStatus:
addObjectId:objectType:resendInterval:forIDSIdentifierNotYetAckd:
handleMessagesUpdated:handler:
arrayWithCapacity:
setDeletionState:
addMessageDeletion:
_deleteMessages:
warnMessagesFilteredOut:mailbox:
_groupMessagesByMailbox:block:
addRemovedMessageId:
warnMessagesFilteredOut:
conversationWithId:messages:index:
lastMessageDateOfConversationWithId:
requestMoreMessagesForConversation:
_verifyDatabaseOkForFullSyncVersion:
activeMailboxIds
enabledMailboxIds
deleteAllAccounts
deleteAllMailboxes
initialAccounts
displayName
setDisplayName:
shouldArchive
setShouldArchive:
emails
setEmailAddresses:
setUsername:
localId
setLocalId:
parentId
setParentAccountIdentifier:
mailboxes
addAccount:
mailboxesWithAccountId:
setMailboxes:
_notifyDelegateThatAccountWasReceived:
customName
updatesWithCustomName:
updatesWithSyncEnabled:
deleteMailboxWithId:
updateAccount:
_notifyDelegateThatAccountWasUpdated:
accountIdentifier
token
setToken:
refreshToken
setRefreshToken:
identityType
setIdentityType:
vipList
objectIdForIDSIdentifierNotYetAckd:objectType:resendInterval:
newResendIntervalForPreviousResendInterval:errorCode:
_resendObjectId:objectType:resendInterval:idsIdentifier:
_scheduleIdsIdentifierForResend:currentResendInterval:newResendInterval:
markIDSIdentifierAsAckd:
dequeueIDSIdentifierForResend:
composedMessageIdForIDSIdentifier:progress:referenceMessageId:
_updateProgress:forComposedMessageWithId:referenceMessageId:
scheduleToResendAllIDSFailedMessages
cancelResendAllIDSFailedMessages
resendAllIDSFailedMessages
resendAllIDSIdentifiers
initialMessagesSyncs
initWithMailboxes:
_handleMailboxMessageSync:
isWebKitSupported
notifyCompanionAboutWebKitSupport:
mailboxSyncVersion
initialMessages
syncVersionForMailboxId:
updateSyncVersion:forMailboxId:
syncActive
updatesWithSyncActive:syncEnabled:
initialMessagesCount
_messageFromMessageProtobuf:
replaceMailboxContentWithInitialMessages:mailboxId:handler:
messageIdMissingContent:
_notifyDelegateThatFinishedSyncingMessagesSuccessfullyReceivingMessages:isInitialSync:
dateSynced
unarchivedObjectOfClass:fromData:error:
_updateMailboxLastUpdate:mailboxId:
_verifyDatabaseOkForFullSyncVersion:mailboxId:mailboxSyncVersion:
messageAdditions
messagesAreNew
reportMessageReceivedWithId:willGenerateNotification:fullSyncVersion:dateSynced:
_handleMessagesAdded:shouldHandleOnlyConversationOperationUpdates:
reportMoreMessagesReceivedConversationSpecific:fullSyncVersion:dateSynced:
addedMessagesCount
addedMessages
conversationId
messageStatusUpdates
updatedStatus
reportMessageUpdateReceivedForMessageWithId:fullSyncVersion:dateSynced:
messageIdForServerId:
messageDeletions
reportMessageDeletionReceivedForMessageWithId:fullSyncVersion:dateSynced:
fetchResults
shouldTrimDatabase
hasDateForRequestingMoreMessages
_handleBatchedFetchResult:isProtectedData:handler:
removeAllObjects
lastFetchRequestForBatchedResponseInterval
reportFetchForBatchResponseLatency:
messageUpdates
dateForRequestingMoreMessages
deleteMessagesOlderThan:mailboxId:
reportNewMessageCountFetchedOverCloudMessaging:
reportMessageUpdateCountFetchedOverCloudMessaging:
reportMessageDeletionCountFetchedOverCloudMessaging:
_messageIdsForMessageProtobufs:
messagesWithServerIds:
handleMessagesDeleted:handler:
updatesWithSyncEnabled:filterType:
resetMailboxForMailboxId:applyingUpdates:
hasNotificationMessage
notificationMessage
notificationMessageId
containsMessageWithId:
deleteMessageWithId:
setReplaceStandaloneNotification:
reportNotificationReceivedOverCloudMessaging
messageIdsContentArrivedBeforeActualMessage
containsMessageContentForMessageId:
partiallyLoaded
htmlContentData
decompressedData
attachmentsCount
attachments
renderOnClient
imageWidth
imageHeight
setImageSize:
fileSize
mimePartNumber
setMimePartNumber:
text
reportContentReceivedForMessageWithId:sizeInBytes:fullSyncVersion:dateSynced:
classesForUnarchivingTextData
unarchivedObjectOfClasses:fromData:error:
mailboxIdForMessageId:
preview
initWithData:encoding:
handleMessageContentAdded:preview:messageId:handler:
imageData
reportImageAttachmentReceivedForMessageWithId:contentId:sizeInBytes:fullSyncVersion:dateSynced:
handleImageDataAdded:forImageAttachmentOfMessageWithId:contentId:handler:
notifyInitialSyncFinished:
_errorWithCode:
_notifyDelegateThatFailedSyncingMessagesWithError:
lastFetchRequestIDSIdentifier
reportFetchForBatchedResponse:
lastIDSIdentifierForFullSyncRequest
lastIDSIdentifierForHaltSyncRequest
setLastIDSIdentifierForFullSyncRequest:
setLastIDSIdentifierForHaltSyncRequest:
updateLastUpdate:mailboxId:
progress
referenceMessageIdForComposedMessageId:
dateWithTimeIntervalSinceNow:
rescheduleIDSIdentifier:resendInterval:withDateToResend:
enqueueIDSIdentifierForResend:atDate:silent:
_resendPendingMessagesWithIds:forIDSIdentifier:newResendInterval:
_resendPendingComposedMessageForIDSIdentifier:newResendInterval:
sendMailboxSelection:resendInterval:
syncingAccounts
_sendCurrentAccountAuthenticationStatus:resendInterval:
pendingWebKitStatusNotification
_sendWebKitStateNotification:
composedMessageWithIDSIdentifier:
_scheduleIdsIdentifierForResendAfterUnlock:resendInterval:
setComposedMessageId:
sendingType
setSendingType:
addTo:
body
setBody:
setReferenceMessageId:
includeAttachments
setIncludeAttachments:
sendMessage:
null
recordComposedMessage:IDSIdentifier:
updateProgress:forComposedMessageWithId:
messagesProcessedConversationHandler
_verifyDatabaseOkForMailboxId:mailboxSyncVersion:
requiresMigration
resetRepeatPreventionHistory
resetMailboxSyncVersions
requestFullSync:
requestHaltSync:
setSupportsWebKit:
supportsWebKit
notifyCompanionAboutWebKitStatus:
setSyncingAccounts:
state
setStandaloneState:
addAccountsStatus:
accountsSyncService
sendAccountAuthenticationStatus:
protoMailboxSelectionFromMailboxSelection:fullSyncVersion:
from
bccs
isThreadSpecific
isSpecialMailboxSpecific
setIsSpecialMailboxSpecific:
publisherBulletinId
setPublisherBulletinId:
setConversationOperationsHandler:
setMessagesAddedHandler:
setMessagesUpdatedHandler:
setMessagesDeletedHandler:
setMessageContentHandler:
setImageAttachmentHandler:
updateAccountSourceTypeForAccount:
_groupMessagesByMailboxId:
currentInstance
messagesSyncServiceClient:didFailSendingProtobufWithIDSIdentifier:errorCode:
messagesSyncServiceClient:didSendProtobufSuccessfullyWithIDSIdentifier:
messagesSyncServiceClientConnectivityDidChange:
messagesSyncServiceClient:didAddMessages:
messagesSyncServiceClient:didSendInitialMessagesSync:
messagesSyncServiceClient:didFetchMoreMessages:
messagesSyncServiceClient:didFetchMoreMessagesForConversation:
messagesSyncServiceClient:didReceivedCoalescedBatchedFetchResult:
messagesSyncServiceClient:didUpdateMessagesStatus:
messagesSyncServiceClient:didDeleteMessages:
messagesSyncServiceClient:didUpdateMailboxSelection:
messageContentSyncServiceClient:didSyncMessageContent:
messageContentSyncServiceClient:didSyncImageAttachment:
messageContentSyncServiceClient:didNotifyInitialContentSyncCompleted:
accountsSyncServiceClient:didFailSendingProtobufWithIDSIdentifier:errorCode:
accountsSyncServiceClient:didSendProtobufSuccessfullyWithIDSIdentifier:
accountsSyncServiceClient:didAddOrUpdateAccount:
accountsSyncServiceClient:didDeleteAccount:
accountsSyncServiceClient:didSyncInitialAccounts:
accountsSyncServiceClient:didReceiveStandaloneAccountIdentity:
accountsSyncServiceClientDidRequestAccountAuthenticationStatus:
accountsSyncServiceClient:didReceiveVIPList:
fetchesSyncServiceClient:didFailSendingProtobufWithIDSIdentifier:errorCode:
fetchesSyncServiceClient:didSendProtobufSuccessfullyWithIDSIdentifier:
fetchesSyncServiceClient:didRequestPrepareForFullSync:
fetchesSyncServiceClient:didWarnErrorDownloadingContentForMessage:
fetchesSyncServiceClient:didNotifyOldMessagesAvailable:
fetchesSyncServiceClient:didNotifyFetchRequestCompleted:
fetchesSyncServiceClient:didReportComposedMessageSendingProgress:
requestFetchManuallyTriggered:filteredConversationId:mailboxIds:
resendObjectsForIDSIdentifier:
syncAccountSourceType:
syncServiceEndpoints
setDataSource:
setConnectivityState:
messagesSyncService
setMessagesSyncService:
contentSyncService
setContentSyncService:
setAccountsSyncService:
fetchesSyncService
setFetchesSyncService:
protectedSyncService
setProtectedSyncService:
protectedContentSyncService
setProtectedContentSyncService:
setSession:
setMessagesProcessedHandler:
setMessagesProcessedConversationHandler:
wasConnectedInRange
setWasConnectedInRange:
_wasConnectedInRange
_dataSource
_connectivityState
_messagesSyncService
_contentSyncService
_accountsSyncService
_fetchesSyncService
_protectedSyncService
_protectedContentSyncService
_session
_messagesProcessedHandler
_messagesProcessedConversationHandler
initWithName:andDelegate:
isMainThread
shouldCancel
_setMessageBody:
_setContentOffset:
_setContent:
setPreferredAlternative:
contentOffset
totalTextSize
nextOffsetForOffset:totalLength:requestedAmount:
contentToOffset:resultOffset:downloadIfNecessary:asHTML:isComplete:
bestAlternativeInPart:
defaultAlternativeInPart:
_setLoadedPart:
rfc822DecodedMessageBody
numberOfAttachmentsSigned:encrypted:
numberOfAttachments
setNumberOfAttachments:isSigned:isEncrypted:
SMIMEError
copySigners
_setSigners:
_setSecureMIMEError:
arrayWithObject:
localizedDescription
isHTML
objectAtIndex:
bytes
attachmentsInDocument
lock
unlock
persistentID
isMailDrop
currentDownloadLimit
isAttachmentTooLargeToDownload:
hasLoaded
isPartial
isMessageSigned
isMessageEncrypted
uniqueID
signers
loadedFullData
setLoadedFullData:
contentLock
setContentLock:
loadAlternative
setLoadAlternative:
loadedPart
secureMimeError
messageAnalysisError
_setMessageAnalysisError:
secureMIMEError
setSecureMIMEError:
setFailedToLoad:
setHasNoContent:
isReload
setIsReload:
_loadedFullData
_failedToLoad
_hasNoContent
_isReload
_content
_signers
_message
_messageBody
_contentLock
_loadAlternative
_loadedPart
_secureMimeError
_messageAnalysisError
_contentOffset
_secureMIMEError
create
cStringUsingEncoding:
updateAccounts
initWithIdentifier:
setTimeIntervalToResetCount:
setNumberOfAttempts:
initWithAccountManager:database:
emailService
setMailboxSourceDelegate:
initWithMessageDataSource:executionQueue:
setHandler:
stopActivity
setNeedsVerificationForAllMailboxes
stopAllOperations
setEmailService:
removeObserver:
resetCache
standaloneAccounts
startListeningForPushNotificationForAccount:
stopListeningForPushNotificationForAccount:
setForegroundMode:
_updateAccounts
parentAccountIdentifier
updateAccount:contaisProtectedData:
defaultFilterTypes
setNeedsVerification:mailbox:
startMonitoringMessages
_requestFetchManuallyTriggered:filteredConversationId:mailboxIds:forceBatchResponse:
currentMailAccounts:
mailboxSourceForMailboxId:
contentLoader
resume
cancelScheduleStopEmailActivity
pause
scheduleStopEmailActivity
delayTimerSource
setDelayTimerSource:
_resetIMAPConnections
reportFetchManualStandalone
reportFetchResumeStandalone
mailboxNeedsVerification:
mailboxSourceForMessageId:
deletionChange:
addPendingMessageChange:
updateMessageStatus:reason:
updateChange:
requestMessageContentForMessageId:priority:
downloadImageAttachmentWithId:messageId:
_saveNewMessagesInDataSource:
_prefetchContentForMessages:
insureConnectionIsTornDownIfRequired
_updateMessagessInDataSource:
_deleteMessagesInDataSource:
retryOperationController
canRetry
_executeDatabaseVerification:
reportCredentialsExpired
errorWithCode:
healAccount:forError:completion:
groupMessages:mailboxGroupingBlock:
messagesByMailboxId:
deleteAllContent
pushNotificationEnabled
containsMessageWithNotificationId:
sortMessagesByPriority:
checkState:
sortedArrayUsingComparator:
initWithCapacity:
applyPendingChangesOnMessages:
pendingMessageChangeForMessageId:
actionDeleted
deletePendingMessageChangeForMessageId:
verifyWithPrevalentSource:otherSource:
messagesToDelete
messagesToUpdate
messagesToAdd
messageDeliveryService:didStartDeliveringComposedMessage:
messageDeliveryService:didUpdateComposedMessage:progress:
messageDeliveryService:didDeliverComposedMessage:
messageDeliveryService:didFailDeliveringComposedMessage:
pushNotificationManagerDidChangePushConfiguration:
pushNotificationManager:didReceiveNotification:
contentLoaderMailboxSourceForMessageId:
contentLoader:didFinishDownloadingContentForMessageWithId:
contentLoader:didFailDownloadingContentForMessageWithId:
contentLoader:didFinishDownloadingAttachmentForMessageWithId:contentId:
messageDataSourceDidDeleteDatabaseDirectory:
setIsSetup:
setIsWaitingForAccounts:
setAccountManager:
pushNotificationManager
setPushNotificationManager:
setContentLoader:
deliveryService
setDeliveryService:
setIsConnected:
backgroundQueue
setBackgroundQueue:
replicateOnStandaloneSource
setReplicateOnStandaloneSource:
setPushNotificationEnabled:
setRetryOperationController:
messageIdFromPushNotificationContentRequested
setMessageIdFromPushNotificationContentRequested:
_isSetup
_isWaitingForAccounts
_isConnected
_replicateOnStandaloneSource
_pushNotificationEnabled
_pushNotificationManager
_contentLoader
_deliveryService
_emailService
_backgroundQueue
_retryOperationController
_messageIdFromPushNotificationContentRequested
_delayTimerSource
orderedSetWithArray:
defaultParagraphStyle
setHyphenationFactor:
setQuoteLevel:
setFirstLineHeadIndent:
setHeadIndent:
setAlignment:
addAttribute:value:range:
nnmlTextForegroundColorForQuoteLevel:
indexSet
copy
nnmlAppBackgroundColor
attributesAtIndex:effectiveRange:
setSpacingBeforeLeadingOfBody:
setSpacingAfterLeadingOfBody:
colorWithRed:green:blue:alpha:
nnmlTextWarningColor
_bestForegroundColorForForegroundColor:backgroundColor:
nnmlTextForegroundColorLinks
numberWithInteger:
_textAttachmentForAttachment:messageId:mailboxId:
containsIndex:
attribute:atIndex:effectiveRange:
addIndexesInRange:
enumerateAttributesInRange:options:usingBlock:
replaceCharactersInRange:withString:
nnmlCollapsedURLColor
addAttributes:range:
enumerateRangesWithOptions:usingBlock:
attributedStringWithAttachment:
imageSize
setBounds:
mf_uncommentedAddress
mf_uncommentedAddressList
rangeOfString:options:
characterAtIndex:
enumerateObjectsUsingBlock:
mf_indexOfRecipientWithEmailAddress:
mf_receivingEmailAddressesCache
compatilibity_uniqueId
emailAddressesAndAliasesList
lowercaseString
componentsSeparatedByString:
mf_copyReceivingEmailAddresses
mf_emptyReceivingEmailAddressesCache
_accountStoreDidChange:
accountIdentities
setState:
accountWithMailAccount:
fetchMailboxListForAccount:
allMailboxUids
nano_mailbox
enumerateActiveAccounts:
saveAccountIdentity:
resetPreviousNetworkErrorState
protectedDatabaseAttached
_validatePendingAccountIdentities
_startValidatingAccountIdentity:
containsAccountIdentities
accountWithPersistentAccount:
validateAccount:useSSL:
removeAccountIdentityFromOutstandingOperations:username:deleteAccountIdentity:
_validateUniquenessAndAddAccountWithAccountId:username:fullUserName:token:refreshToken:completion:
deleteAccountIdentityWithAccountId:
accountWithUniqueId:
persistentAccount
accountStore
removeAccount:withCompletionHandler:
hostname
existingAccountWithType:hostname:username:
hasAccountWithDescription:
newAccountWithDictionary:
setIdentifier:
setFullUserName:
accountIsValid
deliveryAccount
sharedInvocationQueue
updateEmailAliases
mf_invocationWithSelector:target:
addInvocation:
saveAccount:withCompletionHandler:
_scheduleReloadAccounts
_renewCredentialsForAccount:error:completionHandler:
renewCredentialsWithOptions:completion:
_cancelScheduleReloadAccounts
_reloadAccounts
reloadAccounts
nano_account
accountsWithParentId:
_recreateAccountFromFrameworkWithCorrectIdentifier:
accountsWithAccountTypeIdentifiers:error:
identifier
parentAccount
_createNewIMAPMailAccountForParentAccount:withIdentifier:
childAccountsWithAccountTypeIdentifier:
newChildAccountWithParentAccount:error:
setEnabled:forDataclass:
isEnabledForDataclass:
mailAccountsWithError:
fetchMailboxList
connectionError
standaloneActiveMailboxes
accountValidator:finishedValidationOfAccount:usedSSL:
setAccountStore:
outstandingAccountIdentityByAccountId
setOutstandingAccountIdentityByAccountId:
retryController
setRetryController:
receivedNetworkFailure
setReceivedNetworkFailure:
lastNetworkFailureTimeInterval
setLastNetworkFailureTimeInterval:
accountValidatorTransaction
setAccountValidatorTransaction:
_receivedNetworkFailure
_accountStore
_outstandingAccountIdentityByAccountId
_retryController
_accountValidatorTransaction
_lastNetworkFailureTimeInterval
generateMailboxIdWithAccountId:mailboxName:
displayNameUsingSpecialNames
nano_mailboxType
nano_displayName
criterionType
_evaluateAnyRecipientCriterion:
doesMessageSatisfyCriterion:
qualifier
expression
emailAddress
activeAccounts
unionSet:
orCompoundCriterionWithCriteria:
accountAddressesCriterion
firstHeaderForKey:
copyAddressListForSender
copyAddressListForTo
copyAddressListForCc
copyAddressListForBcc
copyFirstStringValueForKey:
references
setMessageIDHeader:
_subject
_from
_bcc
_messageIDHeader
bundleForClass:
bundlePath
databaseMigrationScriptFileNamePrefix
protectedDatabaseMigrationScriptFileNamePrefix
scriptFileDirectory
databaseCreationScriptFileName
protectedDatabaseCreationScriptFileName
databaseMigrationScriptFileNameForVersion:
protectedDatabaseMigrationScriptFileNameForVersion:
databaseFileName
protectedDatabaseFileName
journalDirectoryName
setScriptFileDirectory:
setDatabaseCreationScriptFileName:
setProtectedDatabaseCreationScriptFileName:
setDatabaseMigrationScriptFileNamePrefix:
setProtectedDatabaseMigrationScriptFileNamePrefix:
setDatabaseFileName:
setProtectedDatabaseFileName:
setJournalDirectoryName:
_scriptFileDirectory
_databaseCreationScriptFileName
_protectedDatabaseCreationScriptFileName
_databaseMigrationScriptFileNamePrefix
_protectedDatabaseMigrationScriptFileNamePrefix
_databaseFileName
_protectedDatabaseFileName
_journalDirectoryName
currentConnection
_messagesByIds:
setMessagesToAdd:
setMessagesToUpdate:
setMessagesToDelete:
_messagesToAdd
_messagesToUpdate
_messagesToDelete
nnmk_swizzleSelector:forSelector:
currentRunLoop
initWithExecutionQueue:databaseProtectionManager:fileProvider:
_checkCurrentDeviceLockStatus
isNanoMailInstalled
performDatabaseMigrationIfNeeded
_setupDatabases
currentDatabaseSchemaVersion
hasAccountIdentifierColumn
setCurrentDatabaseSchemaVersion:
_perfomIncrementalMigration
_perfomDatabaseObliteration
expectedDatabaseVersion
_scriptContentFromFile:
executeSQL:
lastErrorMessage
appendSQLStatement:
loadControlValues
observer
_handleDeviceLockStatusChanged:
_setupDatabaseForRetailDemo
_doSetupDatabase
setupConnection
_checkForDatabaseCorruptionFromErrorCode:
notifyProtectionDataAvailable:mergedJournalSuccessfully:
errorCodeMeansCorruptedDatabase:
handleRecreateDatabase
_recreateDatabaseFromScratch:
demoUtility
setDemoUtility:
_forceClosingDatabaseConnection
databaseDirectory
initWithUnprotectedDatabaseFileName:protectedDatabaseFileName:inDirectory:protectedDatabaseName:errorCode:
updateConnection:
tableExists:inDatabase:
_createTablesUsingFile:
initWithPath:
databaseProtectionManager
initWithConnection:journal:queue:databaseProtectionManager:
setNewConnection:journal:
setSchemaVersionToExpected
initWithConnection:
reloadMobileKeyBag
attachProtectedDatabase
_mergeJournal
dettachProtectedDatabase
beginTransaction
isProtectedDatabasePendingMigrationWithConnection:
mergeUsingBlock:
commitTransaction
stringWithContentsOfFile:encoding:error:
messageFrameworkDatabaseDiretory
currentDatabase
initWithDatabaseProtectionManager:
databaseQueue
setDatabaseQueue:
connection
setConnection:
journal
setJournal:
setDatabaseProtectionManager:
databaseFileProvider
setDatabaseFileProvider:
_createdDatabaseFromScratch
_observer
_databaseQueue
_connection
_journal
_demoUtility
_databaseProtectionManager
_databaseFileProvider
focusedMessage
autofetchAccount:mailboxUid:
networkActivityStarted:
networkActivityEnded:
isMobileMail
isAllowedToAccessProtectedData
canRegisterForAPSPush
canUseSpotlightIndex
defaultInstance
deleteAttachmentsForMessage:inMailboxFileURL:
compatibility_map:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
longLongValue
_service
enumateSources:
sources
_messagesByAccountId:
setSources:
sourcesByAccountId
setSourcesByAccountId:
sourcesBeingFetched
setSourcesBeingFetched:
mailboxIdsBeingfetched
setMailboxIdsBeingfetched:
errorsByMailboxIdBeingfetched
setErrorsByMailboxIdBeingfetched:
resultForCurrentFetch
setResultForCurrentFetch:
_sources
_sourcesByAccountId
_sourcesBeingFetched
_mailboxIdsBeingfetched
_errorsByMailboxIdBeingfetched
_resultForCurrentFetch
initWithMachServiceName:
machServiceName
setMachServiceName:
_machServiceName
setMessageIdsContentArrivedBeforeActualMessage:
fullSyncRecoveredInThisSession
setFullSyncRecoveredInThisSession:
setOutstandingMailboxFetchIds:
setPendingWebKitStatusNotification:
_fullSyncRecoveredInThisSession
_messageIdsContentArrivedBeforeActualMessage
_lastFetchMoreMessagesIDSIdentifier
_lastFetchRequestIDSIdentifier
_syncingAccounts
_outstandingMailboxFetchIds
_pendingWebKitStatusNotification
_lastFetchRequestForBatchedResponseInterval
UUID
UUIDString
_handleComposedMessageStarted:
senderAccount
_outgoingMessageForComposedMessage:account:referenceMessage:
deliveryAccountForAccount:
_handleComposedMessageFailed:
newDeliveryWithMessage:
setAccount:
setArchiveAccount:
setIsUserRequested:
deliverSynchronously
reportMessageDeliveryDuration:
_handleComposedMessageSent:
reportStandaloneMessageDeliveryFailed
_headersWithComposedMessage:account:referenceMessage:
appendString:withQuoteLevel:
initWithCompositionSpecification:
createMessageWithPlainTextDocumentsAndAttachments:headers:
headersIfAvailable
compatilibity_subjectNotIncludingReAndFwdPrefix
arrayByAddingObject:
additionalHeadersForReply
setHeader:forKey:
setReferences:
allHeaderKeys
copyAddressListForReplyTo
mf_displayEmailAddressList
firstEmailAddress
containsString:
setAddressListForTo:
fullUserName
mf_formattedAddressWithName:email:useQuotes:
setAddressListForSender:
setPercentDone:
notifyUserDeliverySucceeded:
networkQueue
setNetworkQueue:
outgoingComposedMessage
setOutgoingComposedMessage:
_networkQueue
_outgoingComposedMessage
mf_subjectPrefixLength
substringFromIndex:
subjectWithoutPrefixForSubject:
nnmkMessage
senders
remoteMailboxURL
modSequenceNumber
headers
dateReceivedAsTimeIntervalSince1970
dateSentAsTimeIntervalSince1970
sendersIfCached
toIfCached
ccIfCached
bccIfCached
originalMailboxURL
setNnmkMessage:
setMailboxUid:
_nnmkMessage
_mailboxUid
handlerWithMessagesAddedHandler:messagesUpdatedHandler:messagesDeletedHandler:messageContentHandler:imageAttachmentHandler:conversationOperationsHandler:
messagesAddedHandler
messagesUpdatedHandler
messagesDeletedHandler
messageContentHandler
imageAttachmentHandler
conversationOperationsHandler
_messagesAddedHandler
_messagesUpdatedHandler
_messagesDeletedHandler
_messageContentHandler
_imageAttachmentHandler
_conversationOperationsHandler
supportsArchiving
shouldArchiveByDefault
generateAccountIdForAccount:
activeAccountsWithError:
nano_activeMailAccounts
hasUnprotectedChanges
insertString:atIndex:
bindUnsignedInteger:intoStatement:paramIndex:
bindBool:intoStatement:paramIndex:
bindString:intoStatement:paramIndex:
UTF8String
stringWithUTF8String:
updatesWithSyncActive:
updatesWithSyncEnabled:customName:
hasProtectedChanges
unprotectedFieldsSqlUpdate
bindUnprotectedValuesIntoStatement:paramIndex:
bindProtectedValuesIntoStatement:paramIndex:
protectedFieldsSqlUpdateWithValues
protectedFieldsSqlUpdate
databaseContentVerified
setDatabaseContentVerified:
_filterType
_syncActive
_syncRequested
_syncEnabled
_databaseContentVerified
_customName
_accountId
customMailboxSourceWithMailboxId:accountId:criterion:
criterionForMailboxFilterType:
flaggedMessageCriterion
unreadMessageCriterion
todayMessageCriterion
requestQueueForAccount:
mapAccountsInboxes:
mailboxSourceWithSources:
mapAccountsMailboxes:
mailboxWithCriterion:
allInboxSource
inboxSourceForAccountId:
toAndCCMailboxSource
todayMailboxSource
flaggedMessagesMailboxSource
unreadMessagesMailboxSource
VIPMessagesMailboxSource
threadNotificationMailboxSource
initWithBundleIDs:states:
applicationStateForApplication:
_resetAccumulatedPoints
queue
nanoMailState
_isApplicationStateActive:
accumulatedPoints
setNanoMailState:
invalidate
_requestSnapshotUpdateIfNeeded
_incrementPointsIfAllowed:includeTimeExtraPoints:
_isApplicationStateLaunched:
nanoMailSnapshotRequesterDidRequestNanoMailConnectionInterruption:
isDocked:
initWithPreferredDate:userString:
submitBackgroundTaskRequest:forBundleID:
notifyDeviceLocked:
notifyOperationsProcessed
notifyNewMessageReceived
setQueue:
setAccumulatedPoints:
lastNanoMailSnapshotRequest
setLastNanoMailSnapshotRequest:
numberOfUnprocessedOperations
setNumberOfUnprocessedOperations:
interruptedConnectionWithNanoMail
setInterruptedConnectionWithNanoMail:
deviceLocked
setDeviceLocked:
nanoMailStateMonitor
setNanoMailStateMonitor:
_interruptedConnectionWithNanoMail
_deviceLocked
_queue
_accumulatedPoints
_lastNanoMailSnapshotRequest
_numberOfUnprocessedOperations
_nanoMailState
_nanoMailStateMonitor
postNotificationName:object:userInfo:
nnmkswizzling_connection:didReceiveIncomingMessage:
_handlePushNotification:
sharedManager
setLaunchMachServiceName:
connection:didReceiveIncomingMessage:
decodeString:
floatValue
dateWithTimeIntervalSince1970:
isMessageValid:
stringByRemovingPercentEncoding
shouldEnableNotificationForAccount:
apsVersion
setApsVersion:
vipSenderTypeForAccount:
setApsSenderArgument:
startWatchingForTopic:
apsSenderArgument
startListeningForNotifications
_stopListeningForPushNotificationForMailAccount:
stopWatchingForTopic:
stopListeningForNotifications
bypassBBForNotifications
isiCloud
pushNotificationVersion
integerValue
currentAccountsListening
setCurrentAccountsListening:
isWatchingForTopic
setIsWatchingForTopic:
_isWatchingForTopic
_currentAccountsListening
addMiddleware:
userDefaults
synchronize
allVIPEmailAddresses
arrayForKey:
mf_copyIDNAEncodedEmailAddress
mf_copyIDNADecodedEmailAddress
setMessageFlags:
library:willAddMessage:
library:didIndexMessages:
library:didAddMessages:
library:didAddMessages:newMessagesByOldMessage:
setUserDefaults:
isMonitoring
setIsMonitoring:
_isMonitoring
_userDefaults
uniqueId
ef_map:
mf_map:
subjectNotIncludingReAndFwdPrefix
subjectWithoutPrefix
messageContent
imageAttachmentsLoadedByContentId
_messageId
_messageContent
_preview
_imageAttachmentsLoadedByContentId
_loadControlValues
_selectMessagesWhere:limitRange:mailboxFilter:blockForBinding:
_messagesForMailboxId:
_messagesForAccountId:
_mailboxIdForMessageId:
_setNeedsVerification:mailbox:
preparedStatementForPattern:
stepPreparedStatement:
isResponseOkFromPreparedStatementExecution:
closeExecutedPreparedStatement:
boolFromStatement:columnIndex:
stringFromStatement:columnIndex:
_paramsStringWithString:count:
bindDate:intoStatement:paramIndex:
_selectConversationWhere:limitRange:index:messagesByConversationId:mailboxFilter:blockForBinding:
_sqlFilterForMailboxType:tablePrefix:
_appendContent:toWhereClause:
dateFromStatement:columnIndex:
_selectConversationsWhere:limitRange:messagesByConversationId:indexesByConversationId:mailboxFilter:blockForBinding:
_indexForConversation:mailboxFilter:
_indexesForConversationsWithIds:mailboxFilter:
unsignedIntegerFromStatement:columnIndex:
conversationsCountWithMailboxFilter:
_selectAccountsWhere:blockForBinding:
_selectMailboxesWhere:blockForBinding:
integerFromStatement:columnIndex:
setActionDeleted:
rollbackTransaction
visibleStatus
componentsJoinedByString:
flushIfNeeded
_containsMessagesWithVisibleStatusDifferentThanStatus
_deleteMessagesWithIds:
_deleteMessagesAndContentForMailboxId:
_addImageAttachments:forMessageId:
urlForMessageContentWithId:mailboxId:
_storeProtectedData:atURL:
urlForMessageHtmlContentWithId:mailboxId:
syncState
setSyncState:
_updateAttachmentSyncState:attachmentId:messageId:
bindInteger:intoStatement:paramIndex:
imageAttachmentsForMessageId:syncState:
addAccount:contaisProtectedData:
_mailboxIdsWithAccountId:
urlForMessageContentsFolderForMailboxId:
urlForImageAttachmentsFolderForMailboxId:
fileExistsAtPath:isDirectory:
removeItemAtURL:error:
_deleteMessagesWithMailboxId:
_deleteMessagesWithIdsWithoutTransaction:
uncompressedImage
urlForImageAttachmentOfMessageWithId:mailboxId:contentId:
urlForUncompressedImageAttachmentOfMessageWithId:mailboxId:contentId:
_updateUnprotectedFieldsForMailboxWithId:mailboxUpdates:
_updateProtectedFieldsForMailboxWithId:mailboxUpdates:
bindData:intoStatement:paramIndex:
nnmk_whitelistedClasses
dataFromStatement:columnIndex:
_selectComposedMessageWhere:blockForBinding:
allMessagesWithMailboxFilter:limit:
_deleteAllIDSIdentifiers
_setControlObjectForKey:protected:protectedBoundValue:withBlockForBinding:
_sqlFilterForMailboxType:
_messageFieldsInExpectedOrderWithUnprotectedPrefix:protectedPrefix:conversationPrefix:nullifyProtected:
_messageOrderByWithPrefix:
_messageFromCurrentRowInStatement:
stringByAppendingString:
_messageFromCurrentRowInStatement:startIndex:
setVisibleStatus:
_deleteEmptyConversations
urlForMessageContentsFolder
urlForImageAttachmentsFolder
urlForImageAttachmentsFolderForMessageWithId:mailboxId:
whereStatementForFilterTypeWithMailboxFilter:messageTablePrefix:
_conversationOrderByWithPrefix:
addMessageId:dateReceived:
_accountFieldsInExpectedOrderWithPrefix:nonProtectedPrefix:nullifyProtected:
_accountFromCurrentRowInStatement:
_mailboxFieldsInExpectedOrderWithPrefix:nonProtectedPrefix:nullifyProtected:
_mailboxFromCurrentRowInStatement:
URLWithString:
setLastUpdate:
preparedStatementForPattern:cacheStatement:
writeToURL:options:error:
stringByPaddingToLength:withString:startingAtIndex:
nnmk_startOfCurrentDay
messageStateForMailboxFilterType:
isProtectedDatabaseAvailable
messagesForMailboxId:
messagesForAccountId:
messagesWithIds:
conversationAtIndex:messages:mailboxFilter:
oldestConversationDateWithMailboxFilter:
conversationsAtIndexRange:messagesByConversationId:mailboxFilter:
conversationsReceivedBefore:count:initialIndex:messagesByConversationId:mailboxFilter:
conversationsWithIds:indexesByConversationId:messagesByConversationId:mailboxFilter:
indexesForConversationsWithIds:mailboxFilter:
conversationForMessageWithId:messages:index:mailboxFilter:
conversationsCount
accountWithUsername:
lastUpdateForMailboxId:
syncEnabledMailboxes
updateMessageStatusForMessageWithId:newStatus:newVisibleStatus:statusVersion:threadSpecific:specialMailboxSpecific:serverId:source:
updateMessagePreviewForMessageWithId:newPreview:
deleteMessagesFromMailbox:
deleteMessagesWithIds:
addMessageContent:
imageAttachmentWithId:messageId:
updateAttachmentSyncState:attachmentId:messageId:
imageAttachmentsForMessageId:
addConversation:
updateConversation:
accountSourceTypeForAccountId:
addImageData:
deleteComposedMessagesOlderThan:
startTransaction:
setLastIDSIdentifierForWebKitStatusNotification:
isProtectedDatabasePendingMigration
_controlValueForKey:protected:withBlockForColumn:
lastIDSIdentifierForWebKitStatusNotification
notificationSettingsEnabled
loadedSyncedMailboxProtectedData
setLoadedSyncedMailboxProtectedData:
_receivedFullSyncMessages
_requestedHaltSync
_databaseRecentlyMigrated
_notificationSettingsEnabled
_loadedSyncedMailboxProtectedData
_currentDatabaseSchemaVersion
_fullSyncVersion
_lastIDSIdentifierForFullSyncRequest
_lastIDSIdentifierForHaltSyncRequest
_lastIDSIdentifierForWebKitStatusNotification
_mailboxFilter
_appLastLaunchedDate
_actionDeleted
_status
setData:
setUncompressedImage:
_uncompressedImage
_data
_contentId
setMaxConcurrentOperationCount:
setQualityOfService:
waitUntilAllOperationsAreFinished
_shouldFetchMessageContentForMessageId:
_shouldAutoDownloadImageAttachmentsForMessageId:
_scheduleNextAttachmentToDownloadAfterMessageId:
setQueuePriority:
_bumpUpOperationPriorityIfNeeded:
_requestContentForMessageWithId:currentOperation:
addExecutionBlock:
limitOperationQueueIfNecessary
addOperation:
operations
isCancelled
cancel
downloadImageAttachment:
attachmentsNotSyncedYetForMessageId:
_shouldDownloadAttachment:
_downloadImageAttachment:currentOperation:
messageContentOperationQueue
isSuspended
setSuspended:
attachmentsOperationQueue
cancelAllOperations
queuePriority
qualityOfService
handler
_saveImageAttachmentsLoadedFromContent:
handleImageData:handler:
downloadImageAttachmentsForMessageId:
setMessageContentOperationQueue:
setAttachmentsOperationQueue:
highestPriorityOperation
setHighestPriorityOperation:
messageIdWithHighestPriorityForRequestingAttachments
setMessageIdWithHighestPriorityForRequestingAttachments:
_handler
_messageContentOperationQueue
_attachmentsOperationQueue
_highestPriorityOperation
_messageIdWithHighestPriorityForRequestingAttachments
mailAccounts
releaseAllConnections
cachedSources
mailboxSourceDelegate
setCachedSources:
_mailboxSourceDelegate
_cachedSources
initWithOptions:capacity:
resetMailboxFilter
isMailboxFilterValid:
observers
messageContentHasBeenDownloadedForMessageWithId:mailboxId:
imageHasBeenDownloadedForMessageWithId:mailboxId:contentId:
_removeAllMessages
enumerateObservers:
_insertMessageOnDatabases:
removeObjectsInArray:
updateConversationCalculatedFieldsWithMessages:
conversationAddOperationForConversation:index:messages:
setWithCapacity:
indexOfMessageId:
addIndex:
removeMessageWithId:
_updateMessageOnDatabase:
conversationUpdateOperationForConversation:previousIndex:newIndex:messagesAdded:messagesAddedIndexes:messagesUpdated:messagesUpdatedIndexes:messagesDeleted:messagesDeletedIndexes:messagesUnchanged:
runDatabaseCompactProcedure
deleteMessagesOlderThan:
messagesByIdsForMessages:
_filterMessageAdditions:messagesToAdd:messagesToUpdate:
_processMessagesAdded:handler:
_processMessagesUpdated:handler:
_filterMessageUpdates:
_filterMessageDeletions:
_processMessagesDeleted:handler:
notifyMessageContentUpdatedForMessageId:handler:
indexSetWithIndex:
_filterOperation:forMailboxFilter:dateReceivedBeforeUpdate:
_addMessagesOnLocalDatabase:toNewConversationWithId:
_addOrUpdateMessagesOnLocalDatabase:toExistingConversation:existingMessagesOnConversation:
_processConversationsFromMessages:handler:processor:
indexesOfMessages:
_deleteMessageWithId:fromMessagesArray:
_removeMessagesOnDatabases:
conversationDeleteOperationForConversationId:previousIndex:messagesDeleted:
_mapMessages:byConversationId:
_processConversationIds:messagesByConversationId:handler:processor:
removeObjectsInRange:
_mapConversationsByIds:
_updateMessageVisibleStatusIfNeeded:existingMessages:mailboxFilter:
messagesAdded
messagesUpdated
messagesDeleted
_convertOperationIfNeeded:dateReceivedBeforeUpdate:newMessagesBasedOnMailboxFilter:mailboxFilter:
_setIndexesForConversationOperations:newIndexesByConversationId:previousIndexesByConversationId:handler:
messagesUnchanged
nnmk_isToday
convertUpdateOperationToAddOperation:
convertUpdateOperationToDeleteOperation:
setWithObject:
intersectSet:
previousIndex
newIndex
setNewIndex:
setPreviousIndex:
_handleConversationFromDatabase:initialIndex:messagesByConversationId:shouldFetchMoreMessages:
conversationAtRange:messagesByConversationId:mailboxFilter:
_resetMailboxAndContentForMailboxId:applyingUpdates:deleteContent:
removeObjectAtIndex:
nameForMailboxFilter:
setName:
_ensureMailboxFilterIsValid
containsMailboxFilter:
messagesReceivedBefore:
firstMessages:mailboxId:
filterForFirstMailboxActive
compactDatabaseProcedureContext
setCompactDatabaseProcedureContext:
setObservers:
_compactDatabaseProcedureContext
_observers
initWithServiceCoordinatorCreationBlock:nanoMailProcessMonitor:
_handleDeviceLockStatusChangedNotification:
serviceCoordinator
_initializeConnectionListeners
postNotification:
_connectionHasRequiredEntitlement:
setExportedInterface:
setExportedObject:
setRemoteObjectInterface:
addBasicConnection:
addMessageUpdatesBasedConnection:
_flushPendingOperations
addNanoMailAppConnections:
setCurrentTransaction:
addAdHocConnection:
setInvalidationHandler:
processIdentifier
_doRequestFirstConversations:connectionToReply:forMailboxFilter:
_doRequestConversationsReceivedBefore:count:connectionToReply:
receiverXPCServerDidReplyWithMessage:
_replyToClientConnection:notificationBlock:
receiverXPCServerDidReplyWithMessageContentLoadFailedForMessageWithId:
receiverXPCServerDidReplyWithAccounts:error:
receiverXPCServerDidReplyWithMailboxSelection:
receiverXPCServerDidReplyWithComposedMessageIds:progress:
receiverXPCServerDidReplyWithFailedComposedMessageIdsAndSubjects:
receiverXPCServerDidReplyWithFirstUnreadMessages:
receiverXPCServerDidReplyWithIsConnected:
receiverXPCServerDidReplyWithMessagesCount:
receiverXPCServerDidReplyWithAllMessages:
receiverXPCServerDidAddNewMessage:
_notifyMessageUpdatesBasedClients:
receiverXPCServerDidReceiveMessage:replacingPreviousMessageWithId:
_notifyAllClients:
receiverXPCServerDidUpdateMessage:
receiverXPCServerDidDeleteMessageWithId:
receiverXPCServerDidExecuteConversationOperations:
_notifyNanoMailAppClientConnections:
receiverXPCServerDidReceiveImageAttachmentForMessageWithId:contentId:
receiverXPCServerDidFailSyncingAttachment:messageId:
receiverXPCServerDidReceiveContentForMessageWithId:
receiverXPCServerDidReportProgress:forComposedMessageWithId:referenceMessageId:
receiverXPCServerDidReportFailureSendingComposedMessageWithId:subject:
receiverXPCServerDidReportSendingComposedMessageStartedWithId:referenceMessageId:
receiverXPCServerDidFailSyncingMessagesWithError:
receiverXPCServerDidNotifyOldMessagesAvailable
receiverXPCServerDidNotifyFetchRequestCompleted:mailboxIds:
receiverXPCServerDidFinishSyncingMessagesSuccessfullyReceivingMessages:initialMessages:
receiverXPCServerConnectivityDidChange:
receiverXPCServerDidRequestReloadCache
receiverXPCServerDidReplyWithConversationOperations:totalConversationsCount:willFetch:error:reloadCache:lastUpdateByMailboxId:
receiverXPCServerDidDeleteAllMessages
receiverXPCServerDidAddNewAccount:
receiverXPCServerDidUpdateAccount:
receiverXPCServerDidDeleteAccountWithId:
receiverXPCServerDidChangeMailboxSelection:
receiverXPCServerDidFailWithError:
receiverXPCServerDidUpdateMailboxWithId:lastUpdate:
_notifyClientConnection:notificationBlock:
xpcMessageUpdatesBasedConnections
_enqueueOperation:
remoteObjectProxyWithErrorHandler:
setMaxSize:
maxSize
pendingOperationsQueue
enqueue:
dequeue
_invalidateNanoMailAppConnections
requestFirstConversations:forMailboxFilter:
requestConversationsReceivedBefore:count:
requestMoreMessagesForConversationWithId:
requestMessageWithId:
notifyOpenedMessageWithId:
requestAccounts
requestMailboxSelection
requestSendingProgress
requestFailedComposedMessages
requestFirstUnreadMessagesWithContent:sinceDate:fromAccountsWithIds:orVIPs:orNotifyConversation:excludingMessageIds:
requestIsConnected
requestSyncOfPreviewForMessageWithId:
requestFetchResume
requestFetchManualForceBatchResponse:
requestFetchManualForConversationWithId:
removeMessagesBasedOnCurrentMailboxType
permitDatabaseCompactingProcedure
preventDatabaseCompactingProcedure
recordEventAppLaunched
recordNotificationSettingsEnabled:
discardComposedMessageWithId:
ping
requestMessagesCount
requestAllMessages
requestFetchOldMessages
listener:shouldAcceptNewConnection:
setServiceCoordinator:
serverQueue
setServerQueue:
xpcClientConnections
setXpcClientConnections:
xpcNanoMailAppConnections
setXpcNanoMailAppConnections:
setXpcMessageUpdatesBasedConnections:
currentTransaction
nanoMailSnapshotRequester
setNanoMailSnapshotRequester:
connectionsWaitingForConversationsFromFetch
setConnectionsWaitingForConversationsFromFetch:
connectionListeners
setConnectionListeners:
connectionLookup
setConnectionLookup:
setPendingOperationsQueue:
scheduledToFlushPendingOperations
setScheduledToFlushPendingOperations:
_scheduledToFlushPendingOperations
_serviceCoordinator
_serverQueue
_xpcClientConnections
_xpcNanoMailAppConnections
_xpcMessageUpdatesBasedConnections
_currentTransaction
_nanoMailSnapshotRequester
_connectionsWaitingForConversationsFromFetch
_connectionListeners
_connectionLookup
_pendingOperationsQueue
Watch started playing demo movie.
Watch stopped playing demo movie.
It will start replacing retail database...
Replacing retail database...
Error removing existing file (%{public}@).
Error replacing database (%{public}@).
Finished replacing database.
It won't replace retail database because there is one process already in progress...
Starting to refresh messages dates (Fetched %lu messages)...
Shifting dates by interval of %ld seconds...
Finished refreshing message dates.
#aps-push Unregistering for push notification because we are not in standalone mode anymore
Standalone start request while NanoMail app not in foreground.
Standalone Message Service won't be instantiated. (Network connection Allowed: %lu - Demo Mode: %lu)
Requesting full sync. (Pending full sync: %lu), (Created database from scratch: %lu), (Database recently migrated: %lu), (Received full sync messages: %lu)
It won't request full sync. (ResquestPending: %lu, Recently Migrated: %lu)
Using standalone service to request content for message from push notification. %{public}@
Standalone Service is pending setup.
Using %{public}@
App requested first conversations for mailbox filter: %{public}@ - count: %lu
Requesting fetch for first conversations.
It should fetch older messages while attempting to retrieve first conversations for App. %{public}@ - count: %lu
Requesting more messages %lu before data %{public}@.
Requesting old messages for %{public}@ because other mailbox has oldest data.
Requesting old messages for %{public}@ because there is not enough to respond to app.
Mailbox selection changed from App. New Selection: [%{public}@], Previous Selection: [%{public}@]
Mailboxes to udpate. %{public}@
Mailboxes to re-sync. %{public}@
Mailboxes to disable sync. %{public}@
Ignoring mailbox selection update from app because it has not changed.
Looking up for message with id failed. Falling back to server id.
Requesting total number of conversation, but no mailbox filter was passed. It will count all conversations on database.
Deleting all message requested from adhoc service
Requesting reload cache due to reseting visible status
Fetch requested from nanomail service client.
Ignoring fetch request because NanoMail App is not running in foreground.
Ignoring fetch request because it was already requested. %{public}@
Using service %{public}@ to fetch for messages. Mailboxes: %{public}@
No mailbox id to fetch. It will fetch anyway to check for out of sync version.
Mailbox: %{public}@ - Source type: %lu
It will not fetch older messages becase network latency test mode is enabled or app is not running.
App requested image attachment. Id: %{public}@, Message Id: %{public}@
Requested to send reply to a UITrigger message. Ignoring...
Requested to send composed message... Using standalone service.
Requested to send message... Using sync service.
Resending composed message (Original Id: %{public}@ - New Id: %{public}@).
User requested to resend composed message that doesn't exist (Id: %{public}@).
Requested to resend account source type but there is no account for id %{public}@
Mailbox is from IMAP but standalone mode is not active. Allowing Sync receiver to reset mailbox.
Disabling Standalone Mode due to change in #Connectivity. Connected: %lu, Nearby: %lu
Enabling Standalone Mode due to change in #Connectivity. Connected: %lu, Nearby: %lu
Enabling Standalone Mode due to change in #Connectivity. Standalone Service is ready to be active on App request. %lu
Updating Account source type for account. %{public}@ - %lu
User hasn't been using NanoMail for a while and notifications are disabled. #halt-sync requested... (Date: %{public}@)
Resuming Mail sync...
It will check for mail usage after device is unlocked
Ignoring message update from companion. Standalone version should prevail. %{public}@
Requesting reload cache due to database compact procedure
Suppressing "received old message" notification for mailbox not visible. %{public}@
#Connectivity Reseting connection failed because connectivity changed. Connection failed: %lu
#Connectivity Connection failed. (Succeed to communicate: %lu, Connected: %lu)
#Connectivity (Succeed to communicate: %lu, Connected: %lu)
It won't reload cache because mailbox filter is not set.
Account DELETED from Provider (Id: %{public}@)
Requesting reload cache due to database unlocked
handleDatababaseDirectoryRecreated
NanoMail app state changed. %lu
Waiting for device to #lock-state unlock to perform requested operation...
Device is still #lock-state locked. Attempts Remaining: %lu
We couldn't #lock-state unlock the device and attach the protected database before executing an operation that requires protected data. This might affect the UI.
Registering for #XPCActivity: %s...
#XPCActivity running. Re-registering for icloud push notification.
#XPCActivity Re-registering for push notification...
#XPCActivity for icloud push notification re-registration completed!
#XPCActivity failed to set continue state.
#XPCActivity running but we are not in standalone mode... Ignoring.
#XPCActivity registration complete. State: %@.
Unregistering for #XPCActivity: %s...
Failed to fetch more messages for conversation %@ with error: %@
Mailbox Source received fetch result by no mailbox id is set. Ignoring it
Message with id %@ does not exist - Will not fetch content
Message exceeded size limite. Content won't be downloaded. S-Id: %@, Size: %.2f KB
Starting download message. S-Id: %@, Size: %.2f KB
Failed to download message body error: %@
Failed to download image data (Id:%@, Error:%@)
Failed to download image - body is not available %{public}@
Purging content for message. %{public}@
Freed %lu bytes for %{public}@
Insert messages (Count: %@)
Message %@, already exist in mailbox. It will not be saved
%@ Message(s) ADDED added in mailbox.
Removing all messages
#FETCH started. %{public}@ - Window: %lu
#FETCH failed: %{public}@, %{public}@
#FETCH succeed: %lu, %{public}@
Delete message - (Count:%@, sync: %@)
Executing deletion %{public}@
Update messages (Count: %@, Sync:%@)
Message flag modified - id: %@ - %lu
Message flag modified (Locally) - id %@
Failed to modify message flag - id %@
Failed to update message flag. %{public}@
Message mapped not available in mailbox. id = %@, serverId: %@
Message ADDED (Id: %{public}@ - S-Id: %{public}@ - Date Received: %{public}@ - Status: %lu - Message ID Header %{public}@ - Reason: #standalone)
Message Status UPDATED (Id: %{public}@ - S-Id: %{public}@ - Status: %lu - Source: Standalone)
#FETCH took %.2f seconds. Mailbox: %{public}@
Ignoring #FETCH new messages request because there is already one in progress
We could not parse it. Returning html...
loading message %{public}@ had error.
Attachment %@ translates to HTML:"%@"
Retrieved subsection ids. %{public}@
Bulletin board timed out to retrieve subsection ids.
#Subsection Id: %{public}@ - Allow Notifications: %lu - Alert Type: %lu
BBSubsection: %{public}@ - Allows notification: %lu - Alert Type: %lu
New System BB Section Info received: %{public}@
SyncReceiver Created (Connectivity: %lu)...
No mailbox selected - Ignoring request to compact messages before date
Database Compact Procedure requested for messages older than %{public}@.
Requesting Content (Message Id: %{public}@ - High Priority: %d - IDS Identifier: %{public}@)...
#FETCH requested (IDS Identifier: %{public}@). mailboxId: %{public}@ - manuallyTriggered: %{public}@ - filteredConversationId: %{public}@.
Preparing to request #FETCH #BATCHED_RESPONSE from Companion. Connectivity: Cloud. (Message count: %lu, Should Trim: %lu, Mailbox: %{public}@) 
Preparing #FETCH from Companion. Connectivity: In-range. (Mailbox: %{public}@)
No filter to fetch older messages.
Assuming the mailbox is empty. Requesting #LOAD_MORE_MESSAGES older than now. (Mailbox Id: %{public}@, Filter: %lu)
#LOAD_MORE_MESSAGES Requested (Date Request: %{public}@, Filter type: %lu, Mailbox: %{public}@)
Batching #LOAD_MORE_MESSAGES request to send to Companion (Mailbox Ids: %{public}@, Filter: %lu - IDS Identifier: %{public}@).
Message Status UPDATED (Id: %{public}@ - S-Id: %{public}@ - Status: %lu - Status Version: %lu - Source: User).
Sending message updates to companion. IDS Identifier: %{public}@
Message DELETED (Id: %{public}@ - S-Id: %{public}@ - Status: %lu - Source: User).
Will warn messages filtered out
There is no message for conversation with id - %{public}@ - It won't request #LOAD_MORE_MESSAGES
Requesting #LOAD_MORE_MESSAGES from Companion for Specific Conversation (Last Date Received: %{public}@ - Conversation Id: %{public}@).
Could not find mailbox for conversation with id %{public}@. It won't request #LOAD_MORE_MESSAGES
Accounts from #initial-sync Received.
Mailbox Synced from Provider (Id: %{public}@)
Account from #initial-sync received from Provider (Id: %{public}@)
Account ADDED from Provider (Id: %{public}@)
Adding Mailbox from Provider (Id: %{public}@, Account Id: %{public}@)
Account UPDATED from Provider (Id: %{public}@)
No account to delete with id. %{public}@
Watch accounts requested from provider.
Error sending IDS Messages (IDS Identifier: %{public}@ - Object Type: %{public}@ - Resend Interval: %lu - Error code: %li).
IDS Message sent successfully by IDS (IDS Identifier: %{public}@).
Changing progress (Composed message Id: %{public}@ - Progress: %li).
Connectivity did change (Is connected: %i - Connectivity type: %lu).
Received #full-sync batch of messages from provider. Mailbox count: %lu
#full-sync received for mailbox. (Mailbox id: %{public}@, #mailbox-sync-version: %lu, Filter Type: %lu, Count: %lu)
Ignoring mailbox #full-sync because standalone mode is enabled for it. %{public}@
Received higher #mailbox-sync-version in initial-sync... (Id:%{public}@ - MSV:%lu - Local MSV:%lu)
Message ADDED (Id: %{public}@ - S-Id: %{public}@ - Date Received: %{public}@ - Status: %lu - Message ID Header %{public}@ - Reason: #full-sync)
Received new messages. (Mailbox: %{public}@, #mailbox-sync-version: %lu)
'Add Message ADDED (Id:.
Message ADDED (Id: %{public}@ - S-Id: %{public}@ - Date Received: %{public}@ - Status: %lu - Message ID Header %{public}@ - Protected Channel: %d - Reason: New)
#LOAD_MORE_MESSAGES response ignored.
#LOAD_MORE_MESSAGES Response Received. (Mailbox: %{public}@)
Message ADDED (Id: %{public}@ - S-Id: %{public}@ - Date Received: %{public}@ - Status: %lu - Message ID Header %{public}@ - Reason: #LOAD_MORE_MESSAGES)
Fetching finished successfully.
#LOAD_MORE_MESSAGES for conversation response ignored.
#LOAD_MORE_MESSAGES Response Received for Conversation (Conversation Id: %{public}@)
Message ADDED (Id: %{public}@ - S-Id: %{public}@ - Date Received: %{public}@ - Status: %lu - Message ID Header %{public}@ - Reason: #LOAD_MORE_MESSAGES for Conversation)
Message Status UPDATED (Id: %{public}@ - Status: %lu - Protected Channel: %d - Source: Companion)
Could not find message id from server id. Dropping message status udpate. (Server Id: %{public}@)
Message DELETED from Provider (Id: %{public}@ - Date Received: %{public}@ - Protected Channel: %d)
Could not find message id from server id. Dropping message deletion. (Server Id: %{public}@)
Requesting reload cache due to batch request response. Trimming database
Received didSendBatchedFetchResult
'didSendBatchedFetchResult' response ignored.
Updating #mailbox-sync-version because we received a batchedFetchResult with a higher version. LMSV:%lu, NMSV:%lu
'didSendBatchedFetchResult' response ignored because #mailbox-sync-version is lower.
Batched fetch result received (Additions: %lu - Updates: %lu - Deletions: %lu.
Trimming database. Deleting messages older than %{public}@...
Message ADDED (Id: %{public}@ - S-Id: %{public}@ - Date Received: %{public}@ - Status: %lu - Message ID Header %{public}@ - Protected Channel: %d - Reason: #BATCHED_RESPONSE)
Message Status UPDATED (Id: %{public}@ - S-Id: %{public}@ - Status: %lu - Date Received: %{public}@ - Protected Channel: %d - Source: #BATCHED_RESPONSE)
Message Status UPDATED but message did not exist. Ignoring... (Id: %{public}@ - Protected Channel: %d - Source: #BATCHED_RESPONSE)
Message Status UPDATE in #BATCHED_RESPONSE ignored, as it's outdated... (Id: %{public}@ - Existing Status Version: %lu - Request Status Version: %lu - Protected Channel: %d)
Message Status UPDATED (Id: %{public}@ - Status: %lu - Date Received: %{public}@ - Status Version: %lu - Protected Channel: %d - Source: #BATCHED_RESPONSE)
Message DELETED from Provider in #BATCHED_RESPONSE but message did not exist. Ignoring... (Id: %{public}@ - Protected Channel: %d)
Message DELETED from Provider in #BATCHED_RESPONSE Result (Id: %{public}@ - Date Received: %{public}@ - Protected Channel: %d)
#FETCH #BATCHED_RESPONSE Completed. %{public}@
Mailbox selection changed from Companion. New Selection: [%{public}@], Previous Selection: [%{public}@]
Ignoring mailbox selection update from companion because it has not changed. %{public}@
Message ADDED (Id: %{public}@ - S-d: %{public}@ - Date Received: %{public}@ - Status: %lu - Notification Id: %{public}@ - Protected Channel: %d - Reason: Notification along with Content)
Received message to replace one from push notification. %{public}@ - %{public}@
Message Content Received before actual message. Will request again when message arrives... (Id: %{public}@ - Protected Channel: %d)
Message Content Received from Provider but had already been received. Discarding... (Id: %{public}@ - Protected Channel: %d)
Error unarchiving content. Will assume message has no content. (Message Id: %{public}@ - Exception: %{public}@).
Message Content Received from Provider (Id: %{public}@ - String Length: %lu - Compressed Data: %lu - Decompressed Data: %lu - Protected Channel: %d)
Notifying clients we failed saving content (Message Id: %{public}@)...
Image Attachment does not have message id. Dropping it.
Image Attachment Received before actual message. Will request full content again when message arrives... (Id: %{public}@)
Image Attachment ADDED from Provider (Message Id: %{public}@ - Content Id: %{public}@)
Notification that all content has been sync'ed received (#sync-version: %lu - Callback IDS Identifier: %{public}@).
Error sending IDS Messages (IDS Identifier: %{public}@ - Error code: %li).
Last Fetch More Messages Request Failed being sent by IDS. Will inform NanoMail... (IDS Identifier: %{public}@ - Error code: %li)
Last Fetch Request Failed being sent by IDS. Will inform NanoMail... (IDS Identifier: %{public}@ - Error code: %li)
Last #full-sync request Failed being sent by IDS. Will re-try... (IDS Identifier: %{public}@ - Error code: %li)
Last Halt Sync Request Failed being sent by IDS. Will re-try... (IDS Identifier: %{public}@ - Error code: %li)
Last Fetch More Messages Request sent successfully by IDS (IDS Identifier: %{public}@)
Last Fetch Request sent successfully by IDS. (IDS Identifier: %{public}@)
#full-sync Request sent successfully by IDS (IDS Identifier: %{public}@)
Halt Sync Request sent successfully by IDS (IDS Identifier: %{public}@)
Requested to prepare for #initial-sync #sync-version: %lu.
Companion responded with error for downloading message (Message id: %{public}@)... informing client.
Companion notified old messages are available. Mailbox Id: %{public}@
#FETCH Request Completed.
Received progress (Composed Message Id: %{public}@ - Progress: %li - Reference Message Id: %{public}@).
Requested to resend sync account, but there is no account in memory. Ignoring it
Requested to resend WebKitStatusNotification, but there is no pending WebKitStatusNotification. Ignoring it
It will retry sending account source type.
Resending Message... (Id: %{public}@ - IDS Identifier: %{public}@ - Operation: Update).
Resending Message... (Id: %{public}@ - IDS Identifier: %{public}@ - Operation: Delete).
Resending Composed Message... (IDS Identifier: %{public}@).
Sending message (Composed Message Id %{public}@ - IDS Identifier: %{public}@).
Ignoring messages because #mailbox-sync-version is lower than local version. (Id: %{public}@ - MSV:%lu - Local MSV:%lu)
Received higher #mailbox-sync-version. But we won't reset mailbox because standalone mode is active for it (Id:%{public}@ - MSV:%lu - Local MSV:%lu)
Received higher #mailbox-sync-version. Reseting mailbox... (Id:%{public}@ - MSV:%lu - Local MSV:%lu)
Message discarded because database is waiting for migration.
Message discarded because #sync-version is different (Local: %lu - Companion: %lu).
Received new #sync-version: %lu.
Requesting #full-sync... (IDS Identifier: %{public}@)
Incrementing #sync-version to ignore other messages from Provider.... New #sync-version: %lu
Notifying companion about isWebKitSupported: %lu
Companion was notified about isWebKitSupported Status
Watch account: %{}@ - Standalone State: %lu
Watch accounts synced to provider.
Sending mailbox selection. (resend interval: %lu)
Account source type synced to companion. AccountId: %{public}@, Source Type: %lu, IDS Identifier: %{public}@
Could not find mailbox for messages arrived %{public}@
Grouping message with default mailbox id. Multiple mailboxes is not supported with paired device
Initializing Standalone Message Service
There is no standalone account to register for push
There is no standalone account to unregister for push
Retrieving accounts available on watch
Local Standalone Accounts: %lu - Standalone-enabled accounts: %lu
Adding account: %{public}@
Updating account: %{public}@, Source: %lu
Adding standalone account's mailbox: %{public}@
Marking mailbox as need to run database verification. %{public}@
Account not found on watch anymore. Changing source type and notifying companion. (Id: %{public}@)
Requesting initial fetch for current mailbox filter.
No Mailbox Source for message id: %{public}@
Will fetch for mailboxes %{public}@
Fetch messages for conversation is not supported
Fetch request started - %{public}@
Will fetch for older message for mailboxes %{public}@
Fetching recent messages instead. - %{public}@
Fetch request started - old messages. %{public}@
Fetch request started - more messages for conversation. %{public}@ - %{public}@
Requested more messages from conversation ignored. No mailbox filter.
Message being deleted is not available on standalone service yet. Saving pending change. Id: %{public}@, ServerId: %{public}@
Deleting on local database. Id: %{public}@, ServerId: %{public}@
Message Status UPDATED (Id: %{public}@ - S-Id: %{public}@ - Status: %lu - Status Version: %lu - Source: %{public}@).
Message being updated is not available on standalone service yet. Saving pending change. (Id: %{public}@, ServerId: %{public}@, Status: %lu)
Updating on local database. (Id: %{public}@, ServerId: %{public}@, Status: %lu)
Request message fetch because we received message status change for messages not yet available.
Triggering fetch because message content requested is from a standalone push notification message and is not available yet.
Messages added from mailboxSource - Count: %@, Mailbox: %{public}@, Messages: %@
Messages updated from mailboxSource - Count: %@, Mailbox: %{public}@, Messages: %@
Messages deleted from mailboxSource - Count: %@, Mailbox: %{public}@, Messages: %@
Message DELETED (Id: %{public}@ - Source: Standalone)
Fetch request succeeded for mailbox id: %{public}@
Retrying initial fetch request.
Exceeded attempts to fetch server while standalone is pending verification.
Fetch request was ignored
Attempt to update/delete unknown message on mailbox source. Pending changes will be saved. Missing Messages: %{public}@
Account renewal requested.
Re-fetching again after credential renewal succedded.
Setting account source type back to companion for account. %{public}@
Account renewal ignored. Account for id. %{public}@
Account renewal ignored. No Mailbox with Id. %{public}@
Account renewal ignored. Source has no mailbox id. %{public}@
#aps-push  Received Standalone Push notification but waiting for %.0f seconds to wait for cloud messaging notification. Message Id: %{public}@
#aps-push  Handling Standalone Push notification. %{public}@
#aps-push  Received Standalone Push notification but message already exist. Ignoring it. %{public}@
#aps-push  Received Standalone Push notification while service was inactive. %{public}@
Requesting content for replaced message. %{public}@ - %{public}@
Message received from standalone service already deleted. Ignoring... %{public}@
Message received contains pending changes. Applying it. %{public}@
Ignoring database verification, mailbox does not need validation. Mailbox Id: %{public}@
Database verification started. Mailbox Id: %{public}@.
Database verification - Received all messages from source - Starting verification
Database verification (%{public}@) result: %{public}@
Database verification result applied. (%{public}@)
Standalone is not active anymore. Ignoring database verification
Standalone Account: %{public}@
Adding account identity on database. Type: %lu
Received network failure in latest attempt. Ignoring for now.
Validation in progress. Ignoring another request
Network is not available. Account identity validation deferred for later. NetworkAvailable: %lu, ProtectedDatabaseAvailable: %lu
Starting validating pending account identities.
No pending account identities.
It contains pending account identities. Count: %lu
It does not contain pending account identities.
There is already exist an outstanding operation for this identity. Ignoring it. %{public}@
Validating account. %{public}@
Creating Account Validator. %{public}@
Error validating account identity. It won't be saved. %{public}@
Account Identity is invalid. Deleting account identity from database. %{public}@ - %lu
Deleting standalone account
Standalone Account successfully deleted
Failed to delete Standalone Account. %{public}@
Validating uniqueness of account.
Account deleted, continuing now. Success: %lu, Error: %{public}@
Validated account. %{public}@
Account saved. %{public}@
Error saving standalone account. %{public}@
Account saved successfully. Deleting account identity from database. %{public}@
Account failed to save. %{public}@ - %{public}@
Failed validating account. %{public}@ - %{public}@
Validation operation finished but there are still Account Identities waiting for validation.
Retrying in %.0f second.
Exceeded number of attempts to validate account identities. Deleting account identity from database. %{public}@
Exceeded number of attempts to validate account identities because network was not available. Keeping pending account identity for later. %{public}@
Finished validating account identities.
Scheduling to reload accounts due to Account did change notification from Accounts framework. %{public}@
Ignoring account did change notification from Accounts framework.
#CREDENTIALS_RENEW No Mail account for account id: %{public}@
#CREDENTIALS_RENEW Attempting renewal of credentials for account: %{public}@
#CREDENTIALS_RENEW Credential renewal for account %{public}@  %@
Cannot handle error code to renew account. %lu , %{public}@
#CREDENTIALS_RENEW Credential renewal succeded. %{public}@
#CREDENTIALS_RENEW Credential renewal failed. Error: %{public}@ - %{public}@
Reloading accounts.
#REPLACING_ACCOUNT Deleting previous account with parent id. %{public}@ - %{public}@
#REPLACING_ACCOUNT NanoAccount has not parent identifier
#REPLACING_ACCOUNT Will attempt to find local acAccount that matches account. nanoAccount: %{public}@, nanoAccount.sourceType: %{public}lu, nanoAccount.parent: %{public}@, acAccount: %{public}@, acAccount.parent: %{public}@
#REPLACING_ACCOUNT Found acAccount with same parent id. We will delete it and create a new one. Id:%{public}@, Companion account Id: %{public}@
#REPLACING_ACCOUNT Successfully deleted account for parent account. Id: %{public}@, Parent Id: %{public}@
#REPLACING_ACCOUNT Deleting account failed. Account id:%{public}@, Parent Id: %{public}@, Error: %{public}@
#REPLACING_ACCOUNT No acAccount for type ACAccountTypeIdentifierIMAPMail
#REPLACING_ACCOUNT Creating child mail account. Parent account: %{public}@
#REPLACING_ACCOUNT No accounts for type ACAccountTypeIdentifierAppleAccount
#REPLACING_ACCOUNT New Account saved. Id:%{public}@, Parent Id: %{public}@
#REPLACING_ACCOUNT Parent Account dataclass Mail added. Id:%{public}@, Mail Data Class Active: %lu
#REPLACING_ACCOUNT Failed updating parent dataclass. Id:%{public}@, %{public}@
#REPLACING_ACCOUNT Failed to save account. Id:%{public}@, Parent Id: %{public}@, %{public}@
#REPLACING_ACCOUNT Failed creating mailAccount for parent Account. Account id:%{public}@, Parent Id: %{public}@, Error: %{public}@
Enumerating accounts.
Error retrieving active accounts: %@
Account is not active. Ignoring it. %{public}@
Local Account ignored. %{public}@
Account returned a connection error while fetching mailbox list %@
Message to Add:  %@
Message to Update:  %@, %lu
#SignalHandler, SIGTERM. exit(0)
#SignalHandler, SIGQUIT. It is dirty, this will cause nanomaild to exit the next time it becomes clean.
Deleting database directory on startup because NanoMail app is not installed.
fake 39 db schema version found - bumping to 41 - continue to #Migration
it's a real 39 version - #Migration should be performed
Starting Incremental #Migration 
#Migration Running script file %{public}@
Failed to perform incremental #Migration. %d -  %{public}@ - %{public}@
Starting Obliteration #Migration.
#Migration FullSyncVersion to migrate loaded (%lu).
#Migration Deleting database directory and recreating Database. (instance: %{public}@)
#Migration Full sync version set. %lu
#Migration Recently migrated set. %lu
#Migration Database migrated. (Requires migration: %lu)
Checking device #lock-state: (Unlocked: %i)
Database created. Attempting to attach protected database. #lock-state (Unlock: %lu)
Database corrupted
Found corrupted database. %d
Attempting to recover by recreating database from scratch...
Attempting to recover by replacing demo content...
Database created successfully
Couldn't handle protection database.
Couldn't recreate database.
Creating tables.
Error creating unprotected database Database-Unprotected.sql (%{public}@)
Database loaded.
Database not created from scratch: (Schema version: %lu)
We're able to attach the protected database, it means we're definitely #lock-state unlocked, even though no one notified us.
MKB told us we are unlocked, even though no one notified us.
Handling device #lock-state changed (Unlocked: %i)
#lock-state changed (Unlocked: %i)
Device #lock-state unlocked. Attaching database.
Error creating protected database. (%{public}@)
Device #lock-state is still locked while attempting to attach protected database.
Device #lock-state locked. Dettaching protected database.
Error executing SQL statement from journal (Error: %{public}@).
Protected Database migration pending failed... It will obliterate database.
Journal merged sucessfully.
Reseting connection and deleting database directory
Database directory deleted (Path: %{public}@).
Failed to enumerate %@ due to error: %{public}@
Registering pending message update. Message Id:%{public}@, Status: %lu
Registering pending message deletion. Message Id:%{public}@
Fetch messages from multiple mailboxes. Sources %lu
Ignoring fetchMessages because there is a source being fetched
Ignoring fetchOlderMessages because there is a source being fetched
NNMKMultipleMailboxSource: fetchMessagesForConversationId is not supported
No reference message for id: %{public}@
#Delivery Handling composed message.
#Delivery Delivering outgoing message. %{public}@
Failed to retrieve delivery account
#Delivery Delivery succeed. Message: %{public}@.
#Delivery failed. Message: %{public}@. Error: %{public}@
#Delivery Failed to create outgoing message for composed message. %{public}@
No delivery account for account. %{public}@
Using account to retrieve mail account. %{public}@
No mail account for account. %{public}@
Composed message progress updated. %.2f
NNMKMailboxSourceFactory: Failed to create source for mailbox - type: %@, Current active accounts: %@
NNMKMailboxSourceFactory: Inbox sources: %@
NanoMail's state changed. (State: %lu - Previous state: %lu - Foreground running: %d - Previously foreground running: %d - Number of accumulated points: %lu)
Interrupting the connection with NanoMail... (Number of unprocessed operations: %lu - Accumulated points: %lu)
Requesting NanoMail to process enqueued messages and take a snapshot. Reason: NanoMail is running in background and we're still XPC Connected with it. (Number of accumulated points: %lu)
Requesting NanoMail to process enqueued messages and take a snapshot. Reason: NanoMail is in the Dock. (Number of accumulated points: %lu)
We currently have enough accumulated points to request NanoMail to process messages and take a snapshot. However, NanoMail is not running in background and is not in the Dock. Ignoring and reseting counters... (Number of accumulated points: %lu)
#aps-push APSConnection empty incoming message %{public}@
#aps-push Ignoring MailAccountContentsDidChange notification without push notification payload. %{public}@
#aps-push Push Notification payload: %{public}@
#aps-push Received Push notification. (Id: %{public}@ - Date Received: %{public}@)
#aps-push Generated message is invalid. %{public}@, %{public}@
#aps-push Received Push notification with unrecognized payload. %{public}@
#aps-push Resetting Push Notification account cache.
Already listening for notification for this account %{public}@
#aps-push Started listening for push notification. Account: %{public}@ - SenderArgument: %{public}@
Push notification won't be registered for account. %{public}@ - %{public}@
#aps-push It is not listening for notification for this account %{public}@. Doing it anyways...
#aps-push Stopping listening for push notifications for account %{public}@
Ignoring BB to enable notifications
Ignoring BB to enable notifications sender ALL
SenderALL will be used for account %{public}@
SenderVIP will be used for account %{public}@
SenderNONE will be used for account %{public}@
#aps-push Using push notification version from defaults. %{public}@
#aps-push Push notification version: %lu
VIPLibraryManager is monitoring for Message additions on database.
Updating VIP list. Count: %{public}@
Setting Database schema version - %lu
Error updating database content verified for mailbox. (%{public}@)
Error retrieving content verified state for mailbox (%{public}@).
Error fetching mailbox id for message (Id: %{public}@, %{public}@).
Error checking if message exists (%{public}@).
Error checking if message exists for notification Id (%{public}@ - %{public}@).
Error retrieving server id. (Error: %{public}@).
No Message Id for Server id. %{public}@
Error retrieving message id from server id. (Error: %{public}@).
Error getting oldest conversation date (Error: %{public}@).
%s Line: %d - Tried to access protected when it's unavailable (device is probably locked).
Error selecting indexes for conversations (%{public}@).
Error getting conversations count (%{public}@).
Error updating last update for mailbox. (%{public}@)
Error selecting last update from mailbox. %{public}@
Error selecting sync version for mailbox. (%{public}@).
Error updating/adding sync version for mailbox (%{public}@).
Error deleting mailbox_sync_versions. %{public}@
Deleting mailbox_sync_versions.
Pending change ADDED to SQLite database (Id: %{public}@).
Error ADDING pending message change to SQLite database (%{public}@).
PendingMessageChange DELETED from SQLite database (Id: %{public}@).
Error DELETING pendingMessageChange from SQLite database (%{public}@).
Message ADDED to SQLite database (Id: %{public}@ - Date Received: %{public}@).
Error ADDING Message to SQLite database (%{public}@) - Id: %{public}@.
Message Status UPDATED on SQLite database (Id: %{public}@ - Status: %lu).
Error UPDATING Message status on SQLite database (Id: %{public}@ - Error: %{public}@).
Message preview UPDATED on SQLite database (Id: %{public}@).
Error UPDATING Message preview on SQLite database (Id: %{public}@ - Error: %{public}@).
Message dateRecieved UPDATED on SQLite database (Id: %{public}@).
Error UPDATING dateRecieved for Message on SQLite database (%{public}@).
Updated visibleStatus for messages
Error UPDATING visibleStatus for messages. %{public}@
Error selecting messages where visibleStatus != status. %{public}@
Error retrieving messages for deletion (%{public}@).
Message Content ADDED to SQLite database (Id: %{public}@).
Error ADDING Message Content to SQLite database (%{public}@).
Error inserting image attachments to download. (MessageId: %@, URL: %@ Error: %@)
Error selecting image attachment. (Id: %@, Error: %@)
Error updating sync state for attachment. (Id: %@, Error: %@)
Error selecting image attachments. (MessageId: %@, Error: %@)
Conversation ADDED to SQLite database (Id: %{public}@).
Error ADDING Conversation to SQLite database (%{public}@).
Conversation UPDATED on SQLite database (Id: %{public}@).
Error UPDATING Conversation on SQLite database (%{public}@).
Account ADDED to SQLite database (Id: %{public}@).
Error ADDING Account to SQLite database (%{public}@).
Account UPDATED on SQLite database (Id: %{public}@).
Error UPDATING Account on SQLite database (%{public}@).
Mailboxes for account DELETED from SQLite database (Account Id: %{public}@).
Error DELETING Mailboxes for account from SQLite database (%{public}@).
Mailbox can not be nil.
Mailbox DELETED from SQLite database (Id: %{public}@).
Error DELETING Mailbox from SQLite database (%{public}@).
Can not delete mailbox with empty id.
Error trying to delete message content for mailbox. (Id: %{public}@, Content Error: %{public}@, Attachments Error: %{public}@)
Error selecting deleting messages for mailbox id. %{public}@
Error deleting empty conversations. %{public}@
Account DELETED from SQLite database (Id: %{public}@).
Error DELETING Account from SQLite database (%{public}@).
No account source type for messageId: %{public}@).
Error retrieving account source type for message. (Error: %{public}@).
No account source type for conversationId: %{public}@).
No account source type for accountId: %{public}@).
Error retrieving account source type for account. (Error: %{public}@).
Error retrieving account source type for mailbox. (Error: %{public}@).
Mailbox ADDED OR UPDATED to SQLite database (Id: %{public}@).
Error ADDING Mailbox to SQLite database (%{public}@).
Mailbox UPDATED on SQLite database (Id: %{public}@ - Status: %{public}@).
Error UPDATING Mailbox on SQLite database (Id: %{public}@ - Error: %{public}@).
Protected Mailbox UPDATED on SQLite database (Id: %{public}@ - Status: %{public}@).
Error UPDATING Protected Mailbox on SQLite database (Id: %{public}@ - Error: %{public}@).
Failed to archive object id. It won't be saved in database. Error: %{public}@
Error adding Object for IDS Identifier (%{public}@).
Error unarchiving object id for IDS identifier (%{public}@).
Error retrieving Object for IDS identifier (%{public}@).
Error marking IDS Identifier as Ack'd (IDS Identifier: %{public}@ - Error: %{public}@).
Error rescheduling Object for IDS Identifier (IDS Identifier: %{public}@ - Error: %{public}@).
Error selecting IDS Identifiers scheduled to be resent (%{public}@).
Error ADDING Composed Message to Protected SQLite database (%{public}@).
Error ADDING Composed Message to SQLite database (%{public}@).
Error UPDATING Composed Message to SQLite database (%{public}@).
Error DELETING Composed Message from Protected SQLite database (%{public}@).
Error DELETING Composed Message from SQLite database (%{public}@).
Error DELETING Composed Message from Protected SQLite database before date (%{public}@).
Error selecting progress for Composed Message from IDS Identifier (%{public}@).
Error selecting message id for Composed Message (%{public}@).
Error getting messages count (%{public}@).
Error getting oldest message date (Mailbox Id: %{public}@, Mailbox Specific: %lu).
Protected data is not available. Saving journal file (Id: %@).
Account Identity ADDED to SQLite database (Id: %@).
Error ADDING Account Identity to SQLite database (%{public}@).
Error getting Account Identity count (%{public}@).
Account Identity SELECTED from %{public}@ SQLite database (username: %@).
Error selecting Account Identity from %{public}@ SQLite database (%{public}@).
Account Identity Deleted from SQLite database (Id: %{public}@).
Error DELETING Account Identity from SQLite database (%{public}@).
All Accounts deleted successfully.
Error deleting all accounts (%{public}@).
All mailboxes deleted successfully.
Error deleting all mailboxes (%{public}@).
Notifying database #initial-sync received: %lu
Notifying database requestedHaltSync changed: %lu
Error loading control values (%{public}@).
Error getting Control Object from SQLite database (Key: %{public}@ - Error: %{public}@).
Connection is nil!
Control Object CHANGED in SQLite database (Key: %{public}@).
Error CHANGING Control Object in SQLite database (Key: %{public}@ - Error: %{public}@).
Error feching mailbox ids for account. (%{public}@).
Error selecting messages where %{public}@ (%{public}@).
Messages deleted successfully. %lu
Error deleting messages (Error: %{public}@).
Error selecting messages and conversations where %{public}@ (%{public}@).
Error selecting accounts where %{public}@ (%{public}@).
Error selecting mailboxes where %{public}@ (%{public}@).
Error selecting Composed Message from IDS Identifier (%{public}@).
Error DELETING All IDS Identifiers from SQLite database (%{public}@).
Error writing protected file to disk (URL: %{public}@ - Data Length: %lu - Error: %{public}@).
#Content_Loader Enqueued message content download operation. %{public}@
#Content_Loader Cancelling operation before enqueue another one. %{public}@
#Content_Loader Enqueued attachment download operation. %{public}@
#Content_Loader It won't download for attachment. %{public}@
#Content_Loader Pausing network activity.
#Content_Loader Operation queue suspended
#Content_Loader Resuming network activity.
#Content_Loader Operation queue resumed
#Content_Loader Message content request started (Id: %@), (Priority: %@), (QoS: %@)
#Content_Loader Message content request finished (Id: %@)
#Content_Loader Message content request failed (Id: %@)
#Content_Loader Message content request cancelled (Id: %@)
#Content_Loader Attachment download operation cancelled. %{public}@
#Content_Loader Download image attachment started (Id: %@, URL: %@)
#Content_Loader Download image attachment succeed (Id: %@, URL: %@)
#Content_Loader Download image attachment failed (Id: %@, URL: %@)
#Content_Loader It should not download for attachment. %{public}@
It won't auto download attachments for message id. %{public}@
Releasing connections for account. %{public}@
Failed to create source. %{public}@
No Mailbox Source for ID: %{public}@
New Conversation ADDED (Id: %{public}@ - Messages Count: %lu)
Conversation UPDATED (Id: %{public}@ - Messages Count: %lu - Status: %lu)
Compact database procedure started delayed.
Compact database procedure cancelled.
Compact database procedure will now run.
Compacting messages in database. (Date: %@)
Compact database procedure didn't compact messages because database doesn't have messages to compact (Count: %lu).
No mailbox id passed to replace mailbox content method
Messages to be deleted while replacing content. Ids: %{public}@ - Mailbox: %{public}@
Replacing content and deleting messages older than date: %{public}@ - Mailbox: %{public}@
Dropping message content. It could not find message in conversation. (Message Id: %{public}@, Conversation Id: %{public}@, Index: %lu, Conversation message count: %lu, Existing message count: %lu)
Message Preview UPDATED in Conversation (Conversation Id: %{public}@)
Mailbox filter is not set, it won't generate conversation operation for message content updated
No conversation for message content.
Conversation DELETED (Id: %{public}@)
Conversation UPDATED (Id: %{public}@ - Messages Count: %lu)
Ignoring message update (Id: %{public}@, Message exist: %lu, Status changed: %lu, Status version: %lu, Local status version: %lu)
Ignoring message deletion, message does not exist. - (Id: %{public}@)
Ignoring message update from new message because delegate told to do so. %{public}@
Message will update (Thread Specific: %lu)
Message will update (Special Mailbox Specific: [previous: %lu, new: %lu])
Dropping message update. Id: %{public}@ - ServerId: %{public}@ - %lu - %lu
Mailbox filter is not set, it won't generate conversation operation for message changes
Converting conversation operation of type "update" to type "add" based on visible mailbox type. (Conversation Id: %{public}@, Mailbox Type: %lu)
Converting conversation operation of type "update" to type "delete" based on visible mailbox type. (Conversation Id: %{public}@, Mailbox Type: %lu)
Visible status for message will update when user walks away from the app. (Message Id: %{public}@, Visible status: %lu, Status: %lu)
Marking message-update to be converted to new-message. (Message Id: %{public}@, Visible status: %lu, Status: %lu, Visible mailbox state type: %lu)
Filtering conversation operation out because it does not belong to visible mailbox type. (Conversation Id: %{public}@, Mailbox Type: %lu)
Filtering message out of conversation operations because it does not belong to visible mailbox. (Message Id: %{public}@, Visible Mailboxes id: %{public}@)
Adding mailbox. %{public}@
Deleting all message for mailbox. %{public}@
Reseting mailbox: %{public}@ - updates: %{public}@ - delete content: %lu
Updating mailbox. (Id: %{public}@, updates: %{public}@)
Will respond with conversations to client (Count: %lu - Initial Index: %lu - Will Fetch: %d).
Resetting "status visible" from messages in database
Setting mailbox filter: %{public}@
Starting nanomaild...
Dealloc'ed...
#XPC_PENDING_OPERATION Received connection, scheduling to flush pending operations in 2 seconds...
#XPC_PENDING_OPERATION Flushing operations
XPC Connection invalidated.
XPC Connection added... (pid: %d)
XPC Connection does NOT have required entitlements. (pid: %d)
Reseting xpc conections waiting for fetch response.
Fetch resume requested.
Requested to send Composed Message (Id: %{public}@ - Reference Message Id: %{public}@).
Deleting composed message (Id: %{public}@).
Ping received successfully.
Adding ad-hoc message (Id: %{public}@).
Adding ad-hoc mailbox (Id: %{public}@).
Replying with mailbox-selection (Id: %{public}@).
Notifying client messages was added - count: %{public}@
It will notifying client message replaced
Notifying client message replaced
Notifying client messages was updated - count: %{public}@
Notifying client messages was deleted - count: %{public}@
Notifying client conversation operations was executed - count: %{public}@
Reseting xpc  conections waiting for fetch response.
Notifying client message finished syncing - isInitialSync %{public}@
Error retrieving Remote Object Proxy: %{public}@
#XPC_PENDING_OPERATION Operation previously enqueue will be dropped because it exceed queue max size.
#XPC_PENDING_OPERATION Enqueing pending operation for future connection
#XPC_PENDING_OPERATION Executing pending operation on connections.
Invalidating connection because SnapshotRequester requested
Adding connection to wait for fetch response. Request First conversations
Adding connection to wait for fetch response. Request more message before date.
NNMKRetailDemoUtility
NNMKServiceCoordinator
NNMKMessageDataSourceObserver
NSObject
NNMKMessageDataSourceDelegate
NNMKDatabaseLifecycleObserver
NNMKStandaloneMessageServiceDelegate
NNMKMessageServiceDelegate
NNMKSyncReceiverDelegate
NNMKNanoMailProcessMonitorObserver
NNMKAccountManagerDelegate
NNMKMessageService
NNMKMailboxSource
NNMKMessageBodyParser
MFMessage
NNMKUtilities
MessageDataSource
NNMKMessageDeletion
NNMKBulletinBoardObserver
BBObserverDelegate
NNMKSyncReceiver
NNMKMessagesSyncServiceClientDelegate
NNMKMessageContentSyncServiceClientDelegate
NNMKAccountsSyncServiceClientDelegate
NNMKFetchesSyncServiceClientDelegate
MMMKMessageLoader
NNMKStandaloneMessageService
NNMKMailboxSourceDelegate
NNMKMessageDeliveryServiceDelegate
NNMKPushNotificationManagerDelegate
NNMKStandaloneMessageContentLoaderDelegate
NanoMail
NNMKBodyContentPreparer
NSEmailAddressArray
RecipientUtilities
NNMKAccountManager
NNMKAdditions
NNMKMessageCriterion
NNMKMFMessageHeaders
NNMKDatabaseFileProvider
NNMKXPCConnectionLookup
NNMKMessageDatabaseVerifier
NNMKMessageDatabaseVerificationResult
NNMKSwizzling
NNMKDatabaseFactory
NNMKMFUserAgent
MFUserAgent
NNMKSourceLibrary
NNMKTransientMessageService
NNMKMultipleMailboxSource
NNMKXPCListener
NNMKSyncReceiverSession
NNMKMessageDeliveryService
MFDeliveryDelegate
NNMKMFMailMessage
NNMKMessagesProcessedHandler
NNMKMailboxUpdates
NNMKMailboxSourceFactory
NNMKNanoMailSnapshotRequester
NNMKDatabaseProtectionManager
Swizzling
NNMKPushNotificationManager
NNMKVIPLibraryManager
MFMailMessageLibraryMiddleware
NNMKCompatibilityDeclarations
NNMKMessageUpdate
NNMKMessageContentInfo
NNMKDatabase
NNMKPendingMessageChange
NNMKImageData
NNMContentDownloadOperation
NNMKStandaloneMessageContentLoader
NNMKEmailService
NNMKMessageDataSource
NNMKXPCServer
NNMKNanoMailSnapshotRequesterDelegate
NNMKNanoMailServiceXPCServerInterface
NSXPCListenerDelegate
@12@0:4@8
v8@0:4
v12@0:4@8
@?8@0:4
v12@0:4@?8
B8@0:4
v12@0:4B8
@8@0:4
@"NSObject<OS_dispatch_queue>"
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v16@0:4@8@12
v16@0:4@"NNMKMessageDataSource"8@"NSArray"12
v12@0:4@"NNMKMessageDataSource"8
v16@0:4@"NNMKMessageDataSource"8@"NSDate"12
B20@0:4@8@12@16
B20@0:4@"NNMKMessageDataSource"8@"NNMKMessage"12@"<NNMKMessageUpdate>"16
v20@0:4@8@12B16
v20@0:4@8@12@16
v24@0:4@8i12@16@20
v20@0:4@8B12B16
v16@0:4@8B12
v20@0:4@"<NNMKMessageService>"8@"NSArray"12B16
v16@0:4@"<NNMKMessageService>"8@"NSArray"12
v20@0:4@"<NNMKMessageService>"8@"NNMKMessage"12@"NSString"16
v16@0:4@"<NNMKMessageService>"8@"NSString"12
v20@0:4@"<NNMKMessageService>"8@"NSString"12@"NSString"16
v24@0:4@"<NNMKMessageService>"8i12@"NSString"16@"NSString"20
v16@0:4@"<NNMKMessageService>"8@"NSError"12
v20@0:4@"<NNMKMessageService>"8B12B16
v16@0:4@"<NNMKMessageService>"8@"NNMKAccount"12
v16@0:4@"<NNMKMessageService>"8@"NNMKMailboxSelection"12
v16@0:4@"<NNMKMessageService>"8B12
v12@0:4@"<NNMKMessageService>"8
v20@0:4@"<NNMKMessageService>"8@"NSString"12@"NSDate"16
v16@0:4@"NNMKStandaloneMessageService"8@"NNMKAccount"12
B12@0:4@"NNMKStandaloneMessageService"8
v20@0:4@8@12I16
B16@0:4@8@12
v16@0:4@"NNMKSyncReceiver"8@"NNMKAccountIdentity"12
v12@0:4@"NNMKSyncReceiver"8
v20@0:4@"NNMKSyncReceiver"8@"NSString"12I16
v16@0:4@"NNMKSyncReceiver"8@"NSArray"12
B16@0:4@"NNMKSyncReceiver"8@"NSString"12
v16@0:4@8I12
v16@0:4@"NNMKNanoMailProcessMonitor"8I12
B12@0:4@"NNMKAccountManager"8
v12@0:4@"NNMKAccountManager"8
v16@0:4@"NNMKAccountManager"8@"NSError"12
v24@0:4B8@12@16B20
B20@0:4@8B12B16
v24@0:4B8@"NSString"12@"NSArray"16B20
v12@0:4@"NSString"8
B20@0:4@"NSString"8B12B16
B20@0:4@"NSArray"8B12B16
v16@0:4@"NSString"8@"NSString"12
B12@0:4@"NNMKMailboxFilter"8
v12@0:4@"NSArray"8
v12@0:4@"NNMKComposedMessage"8
@"<NNMKMessageServiceDelegate>"8@0:4
v12@0:4@"<NNMKMessageServiceDelegate>"8
@20@0:4@8@12@16
@44@0:4@8@12@16@20@24@28@32@36@40
@12@0:4I8
@28@0:4I8B12o^B16@20o^@24
@28@0:4@8I12B16o^B20o^@24
@36@0:4{_NSRange=II}8@16@20B24B28@32
v20@0:4B8@12B16
@12@0:4^@8
@12@0:4o^@8
v16@0:4I8@?12
@"<NNMKMessageServiceDelegate>"
@"NNMKSyncReceiver"
@"NNMKStandaloneMessageService"
@"NNMKAccountManager"
@"<NNMKMessageService>"
@"NNMKTransientMessageService"
@"NNMKMessageDataSource"
@"NNMKDatabaseFactory"
@"NNMKDatabase"
@"NNMKVIPLibraryManager"
@"NSMutableDictionary"
@"NNMKBulletinBoardObserver"
@"NNMKNetworkCheckUtility"
@"<NNMKNanoMailProcessMonitor>"
@16@0:4@8@12
@20@0:4@8@12o^@16
v16@0:4I8I12
@16@0:4@8@?12
v16@0:4@?8@?12
v12@0:4I8
@"<NNMKMailboxSourceDelegate>"
@"NSString"
@"NSArray"
@"MFLibraryStore"
@"NSMutableSet"
@"NNMKMessageBodyParser"
@"NNMKSourceLibrary"
@24@0:4@8f12^@16^@20
B60@0:4@8@12@16I20f24I28B32@36@40@44@48^B52^B56
@16@0:4@8I12
@56@0:4@8@12I16f20I24B28@32@36@40@44^B48^B52
@28@0:4@8@12I16@20@24
v28@0:4@8@12I16@20@24
@"NNMKContentAttributedStringHTMLParser"
@"MFAttachmentLibraryManager"
I20@0:4Q8I16
Q12@0:4I8
@16@0:4Q8
@12@0:4B8
v28@0:4@8@12I16B20@?24
v24@0:4@8@12@16@?20
@16@0:4@8i12
v28@0:4@8@12@16@20@?24
{CGSize=ff}28@0:4@8@12@16{CGSize=ff}20
@24@0:4@8i12@16@20
{CGSize=ff}28@0:4@8i12f16f20@24
v28@0:4@"BBObserver"8@"BBBulletin"12I16B20@?<v@?B>24
v20@0:4@"BBObserver"8@"BBBulletin"12I16
v16@0:4@"BBObserver"8@"BBBulletin"12
v16@0:4@"BBObserver"8@"BBSectionInfo"12
v16@0:4@"BBObserver"8@"NSString"12
v20@0:4@"BBObserver"8@"BBSectionParameters"12@"NSString"16
v16@0:4@"BBObserver"8@"NSSet"12
v16@0:4@"BBObserver"8B12
v24@0:4@"BBObserver"8@"BBAttachmentMetadata"12@"BBBulletin"16@?<v@?I>20
B12@0:4@"BBObserver"8
@"BBThumbnailSizeConstraints"20@0:4@"BBObserver"8@"BBAttachmentMetadata"12@"BBBulletin"16
@"BBThumbnailSizeConstraints"16@0:4@"BBObserver"8i12
v28@0:4@"BBObserver"8@"NSData"12@"BBAttachmentMetadata"16@"BBBulletin"20@?<v@?@"NSData">24
v28@0:4@"BBObserver"8@"NSData"12@"BBAttachmentMetadata"16@"BBBulletin"20@?<v@?@"UIImage">24
{CGSize=ff}28@0:4@"BBObserver"8@"BBAttachmentMetadata"12@"BBBulletin"16{CGSize=ff}20
@"UIImage"24@0:4@"BBObserver"8i12@"NSData"16@"NSString"20
{CGSize=ff}28@0:4@"BBObserver"8i12f16f20@"NSString"24
@"BBObserver"
@"BBSectionInfo"
v20@0:4@8@12i16
v20@0:4@"NNMKMessagesSyncServiceClient"8@"NSString"12i16
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NSString"12
v12@0:4@"NNMKMessagesSyncServiceClient"8
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoMessageAdditions"12
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoInitialMessagesSyncBatch"12
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoMoreMessages"12
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoMoreMessagesForConversation"12
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoCoalescedBatchedFetchResult"12
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoMessageStatusUpdates"12
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoMessageDeletions"12
v16@0:4@"NNMKMessagesSyncServiceClient"8@"NNMKProtoMailboxSelection"12
v16@0:4@"NNMKMessageContentSyncServiceClient"8@"NNMKProtoMessageContentSync"12
v16@0:4@"NNMKMessageContentSyncServiceClient"8@"NNMKProtoImageAttachmentSync"12
v16@0:4@"NNMKMessageContentSyncServiceClient"8@"NNMKProtoInitialContentSyncCompletedNotification"12
v20@0:4@"NNMKAccountsSyncServiceClient"8@"NSString"12i16
v16@0:4@"NNMKAccountsSyncServiceClient"8@"NSString"12
v16@0:4@"NNMKAccountsSyncServiceClient"8@"NNMKProtoAccountAdditionOrUpdate"12
v16@0:4@"NNMKAccountsSyncServiceClient"8@"NNMKProtoAccountDeletion"12
v16@0:4@"NNMKAccountsSyncServiceClient"8@"NNMKProtoInitialAccountsSync"12
v16@0:4@"NNMKAccountsSyncServiceClient"8@"NNMKProtoStandaloneAccountIdentity"12
v12@0:4@"NNMKAccountsSyncServiceClient"8
v16@0:4@"NNMKAccountsSyncServiceClient"8@"NNMKProtoVIPSenderList"12
v20@0:4@"NNMKFetchesSyncServiceClient"8@"NSString"12i16
v16@0:4@"NNMKFetchesSyncServiceClient"8@"NSString"12
v16@0:4@"NNMKFetchesSyncServiceClient"8@"NNMKProtoPrepareForFullSyncRequest"12
v16@0:4@"NNMKFetchesSyncServiceClient"8@"NNMKProtoErrorDownloadingContentForMessageWarning"12
v16@0:4@"NNMKFetchesSyncServiceClient"8@"NNMKProtoOldMessagesAvailableNotification"12
v16@0:4@"NNMKFetchesSyncServiceClient"8@"NNMKProtoFetchRequestCompletedNotification"12
v16@0:4@"NNMKFetchesSyncServiceClient"8@"NNMKProtoComposedMessageSendingProgressReport"12
v20@0:4B8@12@16
@20@0:4@8@12B16
v20@0:4@8B12@16
v20@0:4@8I12I16
v24@0:4@8@12I16@20
v20@0:4i8@12@16
v16@0:4B8B12
B20@0:4I8@12I16
B16@0:4@8I12
B12@0:4I8
@12@0:4i8
v16@0:4@8@?12
@"<NNMKSyncReceiverDelegate>"
@"<NNMKMessageDataSource>"
@"NNMKMessagesSyncServiceClient"
@"NNMKMessageContentSyncServiceClient"
@"NNMKAccountsSyncServiceClient"
@"NNMKFetchesSyncServiceClient"
@"NNMKProtectedSyncServiceClient"
@"NNMKProtectedContentSyncServiceClient"
@"NNMKSyncReceiverSession"
@"NNMKMessagesProcessedHandler"
I20@0:4I8I12I16
v20@0:4B8B12B16
i8@0:4
v12@0:4i8
@"MFMailMessage"
@"MFMessageBody"
@"MFLock"
@"MFMimePart"
@"MFError"
@"NSError"
v16@0:4@"NNMKMailboxSource"8@"NSMutableArray"12
v20@0:4@"NNMKMailboxSource"8@"NSArray"12@"NSDictionary"16
v12@0:4@"NNMKMailboxSource"8
v20@0:4@"NNMKMailboxSource"8@"NSArray"12B16
v16@0:4@"NNMKMessageDeliveryService"8@"NNMKComposedMessage"12
v20@0:4@"NNMKMessageDeliveryService"8@"NNMKComposedMessage"12i16
v12@0:4@"NNMKPushNotificationManager"8
v16@0:4@"NNMKPushNotificationManager"8@"NNMKMessage"12
@"NNMKMailboxSource"12@0:4@"NSString"8
v16@0:4@"NNMKStandaloneMessageContentLoader"8@"NSString"12
v20@0:4@"NNMKStandaloneMessageContentLoader"8@"NSString"12@"NSString"16
@24@0:4@8@12@16@20
@"<NNMKStandaloneMessageServiceDelegate>"
@"NNMKPushNotificationManager"
@"NNMKStandaloneMessageContentLoader"
@"NNMKMessageDeliveryService"
@"NNMKEmailService"
@"NNMKRetryOperationController"
@"NSObject<OS_dispatch_source>"
@16@0:4i8@12
v24@0:4@8@12@16@20
I12@0:4@8
v32@0:4@8@12@16@20@24@?28
v20@0:4@8@12@?16
d8@0:4
v16@0:4d8
@"<NNMKAccountManagerDelegate>"
@"ACAccountStore"
@"NSObject<OS_os_transaction>"
@"NSXPCConnection"8@0:4
@"NSMutableArray"
v16@0:4:8:12
B12@0:4i8
B12@0:4B8
i16@0:4B8o^B12
@"<NNMKDatabaseLifecycleObserver>"
@"NNMKProtectedSQLiteConnection"
@"NNMKSQLJournal"
@"NNMKRetailDemoUtility"
@"<NNMKDatabaseProtectionManager>"
@"NNMKDatabaseFileProvider"
@"MFMessage"8@0:4
v16@0:4@"MailAccount"8@"MFMailboxUid"12
I16@0:4@8@12
@"NNMKProtoWebKitStatusNotification"
v12@0:4@"MFOutgoingMessageDelivery"8
@"<NNMKMessageDeliveryServiceDelegate>"
@"NNMKComposedMessage"
q8@0:4
Q8@0:4
@"NNMKMessage"
@"MFMailboxUid"
@32@0:4@?8@?12@?16@?20@?24@?28
@16@0:4B8B12
@16@0:4B8I12
@24@0:4B8B12I16@20
@16@0:4B8@12
v16@0:4^{sqlite3_stmt=}8^i12
@"NSNumber"
@12@0:4@?8
v16@0:4I8B12
@"<NNMKNanoMailSnapshotRequesterDelegate>"
@"NSDate"
@"BKSApplicationStateMonitor"
v12@0:4@"NNMKProtectedSQLiteConnection"8
@"<NNMKPushNotificationManagerDelegate>"
@"MFMailMessage"16@0:4@"MFMailMessageLibrary"8@"MFMailMessage"12
v16@0:4@"MFMailMessageLibrary"8@"NSArray"12
v20@0:4@"MFMailMessageLibrary"8@"NSArray"12@"NSDictionary"16
@"NSUserDefaults"
@"NNMKMessageContent"
@"NSDictionary"
v16@0:4B8@12
@20@0:4I8^@12@16
@24@0:4{_NSRange=II}8^@16@20
@28@0:4@8I12^I16^@20@24
@24@0:4@8^@12^@16@20
@20@0:4@8^@12^I16
@24@0:4@8^@12^I16@20
v16@0:4I8@12
v40@0:4@8I12I16I20B24I28@32I36
i16@0:4@8@12
v20@0:4I8@12@16
v20@0:4@8I12@16
v16@0:4i8@12
@20@0:4@8^i12^@16
@20@0:4@8{_NSRange=II}12
v20@0:4@8B12@?16
v24@0:4@8B12*16@?20
@28@0:4@8{_NSRange=II}12@20@?24
@24@0:4@8@12@16B20
@12@0:4^{sqlite3_stmt=}8
@16@0:4^{sqlite3_stmt=}8i12
@36@0:4@8{_NSRange=II}12^I20^@24@28@?32
@36@0:4@8{_NSRange=II}12^@20^@24@28@?32
@16@0:4I8@12
@"NNMKMailboxFilter"
@"NSData"
v16@0:4@8i12
@"<NNMKStandaloneMessageContentLoaderDelegate>"
@"NSOperationQueue"
@"NSOperation"
@16@0:4I8o^B12
@20@0:4@8I12o^B16
B24@0:4@8@12@16@20
v12@0:4@"<NNMKMessageDataSourceObserver>"8
v16@0:4@"NNMKMailboxFilter"8B12
v12@0:4@"NSDate"8
v16@0:4@"NSDate"8@"NSString"12
@"NNMKMessage"12@0:4@"NSString"8
@"NSDictionary"12@0:4@"NSArray"8
B12@0:4@"NSString"8
@"NSArray"12@0:4@"NSDate"8
@"NSArray"8@0:4
@"NSArray"12@0:4@"NNMKMailboxFilter"8
@"NSDate"12@0:4@"NSString"8
@"NSDate"16@0:4@"NSString"8I12
@"NSArray"16@0:4I8@"NSString"12
@"NNMKMailboxFilter"8@0:4
@"NSString"12@0:4@"NSString"8
@"NSArray"12@0:4@"NSString"8
@"NNMKAttachment"16@0:4@"NSString"8@12
v20@0:4I8@"NSString"12@"NSString"16
@"NSArray"36@0:4{_NSRange=II}8@"NSDate"16@"NSArray"20B24B28@"NSArray"32
@"NSArray"24@0:4{_NSRange=II}8^@16@"NNMKMailboxFilter"20
I12@0:4@"NNMKMailboxFilter"8
@"NSArray"16@0:4I8o^B12
@"NSArray"20@0:4@"NSDate"8I12o^B16
v12@0:4@"NNMKMailbox"8
v16@0:4@"NSString"8@"NNMKMailboxUpdates"12
@"NNMKMailbox"12@0:4@"NSString"8
@"NSSet"8@0:4
v20@0:4@"NSArray"8@"NSString"12@"NNMKMessagesProcessedHandler"16
v16@0:4@"NSArray"8@"NNMKMessagesProcessedHandler"12
B24@0:4@"NNMKMessageContent"8@"NSString"12@"NSString"16@"NNMKMessagesProcessedHandler"20
B16@0:4@"NSString"8@"NNMKMessagesProcessedHandler"12
@"NSArray"12@0:4@"NSArray"8
v24@0:4@"NSData"8@"NSString"12@"NSString"16@"NNMKMessagesProcessedHandler"20
v16@0:4@"NNMKImageData"8@"NNMKMessagesProcessedHandler"12
v12@0:4@"NNMKMailboxFilter"8
v20@0:4@8^@12^@16
@24@0:4@8I12@16^B20
@"<NNMKMessageDataSourceDelegate>"
@"NSHashTable"
v12@0:4@"NNMKNanoMailSnapshotRequester"8
Vv16@0:4I8@12
Vv16@0:4@8I12
Vv12@0:4@8
Vv32@0:4I8@12@16B20B24@28
Vv12@0:4B8
Vv16@0:4I8@"NNMKMailboxFilter"12
Vv16@0:4@"NSDate"8I12
Vv12@0:4@"NSString"8
Vv12@0:4@"NNMKMailboxSelection"8
Vv32@0:4I8@"NSDate"12@"NSArray"16B20B24@"NSArray"28
Vv12@0:4@"NSArray"8
Vv12@0:4@"NNMKComposedMessage"8
Vv12@0:4@"NNMKMessage"8
Vv12@0:4@"NNMKMailbox"8
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
@16@0:4@?8@12
@"NNMKServiceCoordinator"
@"NNMKNanoMailSnapshotRequester"
@"NSSet"
@"<NNMKXPCConnectionLookup>"
@"NNMKQueue"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.authkit.client.private</key>
<true/>
<key>com.apple.bulletinboard.observer</key>
<true/>
<key>com.apple.messages.supportsattachments</key>
<true/>
<key>com.apple.private.accounts.allaccounts</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.mail.sync.messages</string>
<string>com.apple.private.alloy.mail.sync.content</string>
<string>com.apple.private.alloy.mail.sync.protected</string>
<string>com.apple.private.alloy.mail.sync.protected.content</string>
<string>com.apple.private.alloy.mail.sync.accounts</string>
<string>com.apple.private.alloy.mail.fetches</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.mail.sync.messages</string>
<string>com.apple.private.alloy.mail.sync.content</string>
<string>com.apple.private.alloy.mail.sync.protected</string>
<string>com.apple.private.alloy.mail.sync.protected.content</string>
<string>com.apple.private.alloy.mail.sync.accounts</string>
<string>com.apple.private.alloy.mail.fetches</string>
</array>
<key>com.apple.security.network.client</key>
<true/>
<key>com.apple.springboard.launchapplications</key>
<true/>
<key>com.apple.telephony.cupolicy-monitor-access</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>com.apple.gstore</string>
<string>apple</string>
<string>appleaccount</string>
<string>com.apple.mobilemail.smime</string>
<string>com.apple.identities</string>
<string>com.apple.certificates</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>nanomaild</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
