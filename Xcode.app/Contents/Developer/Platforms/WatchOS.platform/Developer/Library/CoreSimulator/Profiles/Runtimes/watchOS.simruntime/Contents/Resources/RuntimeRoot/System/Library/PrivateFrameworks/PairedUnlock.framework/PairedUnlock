kPURemoteDeviceState_Version
kPURemoteDeviceState_PasscodeSet
kPURemoteDeviceState_PasscodeLocked
kPURemoteDeviceState_UnlockOnly
kPURemoteDeviceState_WristDetectEnabled
version = %@, passcodeSet = %@, isUnlockOnly = %@, isPasscodeLocked = %@, wristDetectEnabled = %@
supportsSecureCoding
TB,R
version
TI,N,V_version
passcodeSet
TB,N,GhasPasscodeSet,V_passcodeSet
passcodeLocked
TB,N,GisPasscodeLocked,V_passcodeLocked
unlockOnly
TB,N,GisUnlockOnly,V_unlockOnly
wristDetectEnabled
TB,N,GisWristDetectEnabled,V_wristDetectEnabled
com.apple.pairedunlock
PasscodeCreate
PasscodeChange
PasscodeRemove
PairForUnlock
DisableWristDetection
EnableWristDetection
PasscodeReenter
Cancel
com.apple.pairedunlock.removed-lockout
connection
delegate
%@-%@
com.apple.paired-unlock
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v4@?0
Unlock manager connection interrupted
Unlock manager connection INVALIDATED
PairedUnlock connection failed to check in, error = %@!
v8@?0@"NSError"4
v12@?0@"PURemoteDeviceState"4@"NSError"8
com.apple.nanosystemsettings
simple-passcode
remoteDeviceRemoveLockoutHandler
T@?,C,N,V_remoteDeviceRemoveLockoutHandler
T@"<PUConnectionDelegate>",W,V_delegate
T@"PUConnection",W,N,V_connection
com.apple.PairedUnlock
pairedunlock
class
isKindOfClass:
hash
hasPasscodeSet
isUnlockOnly
isPasscodeLocked
isWristDetectEnabled
numberWithUnsignedInt:
numberWithBool:
stringWithFormat:
init
decodeIntegerForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
isEqual:
description
version
setVersion:
setPasscodeSet:
setPasscodeLocked:
setUnlockOnly:
setWristDetectEnabled:
_passcodeSet
_passcodeLocked
_unlockOnly
_wristDetectEnabled
_version
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
errorWithCode:description:
queueNameWithSuffix:
alloc
initWithConnection:
initWithDelegate:
UTF8String
invalidate
dealloc
initWithMachServiceName:options:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
checkIn
pairForUnlockWithPasscode:
unpairForUnlock
enableOnlyRemoteUnlockWithPasscode:
disableOnlyRemoteUnlock
requestRemoteDeviceRemoteAction:type:
requestRemoteDeviceUnlockNotification
requestRemoteDeviceRemoveLockout
didCompleteRemoteAction:error:
queryRemoteDeviceState:
requestDeviceSetWristDetectionDisabled:completion:
interfaceWithProtocol:
setRemoteObjectInterface:
didPairForUnlock:error:
didUnpairForUnlock:error:
didEnableOnlyRemoteUnlock:error:
didDisableOnlyRemoteUnlock:error:
remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
remoteDeviceDidUnlock
remoteDeviceDidRemoveLockout:error:
didGetRemoteDeviceState:error:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
setServerConnection:
setInvalidationHandler:
resume
remoteObjectProxyWithErrorHandler:
serverConnection
remoteObjectProxy
copy
setRemoteDeviceRemoveLockoutHandler:
delegate
unlockConnection:didPairForUnlock:error:
delegateIfRespondsToSelector:
unlockConnection:didUnpairForUnlock:error:
unlockConnection:didEnableOnlyRemoteUnlock:error:
unlockConnection:didDisableOnlyRemoteUnlock:error:
unlockConnection:remoteDeviceDidCompleteRemoteAction:remoteDeviceState:error:
unlockConnectionRemoteDeviceDidUnlock:
unlockConnection:remoteDeviceDidNotifyState:
remoteDeviceRemoveLockoutHandler
sharedConnection
unlockScreenTypeWithOutSimplePasscodeType:
isPasscodeSet
setWithObject:
synchronizeUserDefaultsDomain:keys:
syncPasscodeState
requestRemoteDeviceRemoveLockout:
getRemoteDeviceState:
.cxx_destruct
setDelegate:
_serverConnection
_serverConnectionQueue
_delegateQueue
_unlockClient
_delegate
_remoteDeviceRemoveLockoutHandler
connection
setConnection:
_connection
PURemoteDeviceState
NSSecureCoding
NSCoding
PUError
PUUnlockServer
NSObject
PUUnlockClient
PUConnection
PUConnectionUnlockClient
B8@0:4
v12@0:4@8
@12@0:4@8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
B12@0:4@8
I8@0:4
@8@0:4
v12@0:4I8
v12@0:4B8
@16@0:4I8@12
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v8@0:4
v16@0:4i8i12
v16@0:4B8@12
v12@0:4@?8
v16@0:4B8@?12
v12@0:4@"NSString"8
v16@0:4B8@"NSError"12
v12@0:4@?<v@?@"PURemoteDeviceState"@"NSError">8
v16@0:4B8@?<v@?@"NSError">12
v20@0:4B8@12@16
v16@0:4@8@12
v20@0:4B8@"PURemoteDeviceState"12@"NSError"16
v16@0:4@"PURemoteDeviceState"8@"NSError"12
r*12@0:4@8
@?8@0:4
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"PUConnectionUnlockClient"
@"<PUConnectionDelegate>"
@"PUConnection"
connection requestDeviceSetWristDetectionDisabled: %@
zPLR
