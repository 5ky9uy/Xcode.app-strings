N7CoreNLP13SubWordTaggerE
 9 : 0
N7CoreNLP13AbstractModelE
N7CoreNLP15ParagraphTaggerE
N7CoreNLP9MeCabImplE
N7CoreNLP14MeCabInterfaceE
N7CoreNLP18WordDispatchTaggerE
N7CoreNLP10WordTaggerE
N7CoreNLP8crfsuite7LexiconE
PSt9exception
N7CoreNLP11MaxEntModelE
N7CoreNLP6TaggerE
N7CoreNLP29ReadOnlyFileCreationExceptionE
N7CoreNLP25ResourceCreationExceptionE
N7CoreNLP20DefaultSubWordTaggerE
N7CoreNLP17MeCabSubTokenizerE
N7CoreNLP21SubTokenizerInterfaceE
NSt3__117bad_function_callE
NSt3__110__function6__funcIPFPK10__CFStringPN7CoreNLP14MeCabInterfaceEPK12mecab_node_tmbENS_9allocatorISC_EESB_EE
NSt3__110__function6__baseIFPK10__CFStringPN7CoreNLP14MeCabInterfaceEPK12mecab_node_tmbEEE
PFPK10__CFStringPN7CoreNLP14MeCabInterfaceEPK12mecab_node_tmbE
FPK10__CFStringPN7CoreNLP14MeCabInterfaceEPK12mecab_node_tmbE
NSt3__110__function6__funcIPF7CFRangePKtPPK12mecab_node_tbmENS_9allocatorISA_EES9_EE
NSt3__110__function6__baseIF7CFRangePKtPPK12mecab_node_tbmEEE
PF7CFRangePKtPPK12mecab_node_tbmE
F7CFRangePKtPPK12mecab_node_tbmE
NSt3__110__function6__funcIPFvPK12mecab_node_tP7NLTokenmENS_9allocatorIS8_EES7_EE
NSt3__110__function6__baseIFvPK12mecab_node_tP7NLTokenmEEE
PFvPK12mecab_node_tP7NLTokenmE
FvPK12mecab_node_tP7NLTokenmE
NSt3__110__function6__funcIPFbPK12mecab_node_tENS_9allocatorIS6_EES5_EE
NSt3__110__function6__baseIFbPK12mecab_node_tEEE
PFbPK12mecab_node_tE
FbPK12mecab_node_tE
NSt3__110__function6__funcIZN7CoreNLP17MeCabSubTokenizer12initFunctorsEvE3$_0NS_9allocatorIS4_EEFbPK12mecab_node_tEEE
ZN7CoreNLP17MeCabSubTokenizer12initFunctorsEvE3$_0
NSt3__110__function6__funcINS_6__bindIRFmPKtiEJRKNS_12placeholders4__phILi1EEERKNS8_ILi2EEEEEENS_9allocatorISF_EES5_EE
NSt3__110__function6__baseIFmPKtiEEE
NSt3__16__bindIRFmPKtiEJRKNS_12placeholders4__phILi1EEERKNS6_ILi2EEEEEE
NSt3__118__weak_result_typeIPFmPKtiEEE
NSt3__115binary_functionIPKtimEE
N7CoreNLP14LMSubTokenizerE
A!"$%&'()*DEFGHIARSJKLMNOPQ
N7CoreNLP23TaggingFeatureExtractorE
N7CoreNLP24AbstractFeatureExtractorE
N7CoreNLP19KoreanSubWordTaggerE
N7CoreNLP21JapaneseSubWordTaggerE
N7CoreNLP12UStringPieceE
N7CoreNLP20ChineseSubWordTaggerE
N7CoreNLP15LineBreakTaggerE
N7CoreNLP21PunctFeatureExtractorE
N7CoreNLP22ChineseLMTokenizerImplE
N7CoreNLP27ChineseLMTokenizerInterfaceE
?333333
N7CoreNLP5mecab20DefaultNameTokenizerE
N7CoreNLP5mecab22NameTokenizerInterfaceE
N7CoreNLP5mecab21JapaneseNameTokenizerE
N7CoreNLP5mecab30SimplifiedChineseNameTokenizerE
N7CoreNLP5mecab19KoreanNameTokenizerE
N7CoreNLP8crfsuite8InstanceE
NSt3__120__shared_ptr_pointerIPN7CoreNLP12ReadOnlyFileIcEENS_14default_deleteIS3_EENS_9allocatorIS3_EEEE
NSt3__114default_deleteIN7CoreNLP12ReadOnlyFileIcEEEE
N7CoreNLP8crfsuite13ReadingLookupE
NSt3__120__shared_ptr_pointerIPN7CoreNLP13TaggerManagerENS_14default_deleteIS2_EENS_9allocatorIS2_EEEE
NSt3__114default_deleteIN7CoreNLP13TaggerManagerEEE
/System/Library/LinguisticData/zh/Hans/tokenizer.dat
/System/Library/LinguisticData/zh/Hant/tokenizer.dat
N7CoreNLP20CRFSuiteSubTokenizerE
N7CoreNLP12ICUTextBreakE
N7CoreNLP14SentenceTaggerE
N7CoreNLP6CFTypeE
N7CoreNLP28ICUTextBreakWithBuiltInRulesE
N7CoreNLP12CRFSuiteImplE
N7CoreNLP17CRFSuiteInterfaceE
N7CoreNLP8crfsuite16FeatureExtractorE
N7CoreNLP15CompositeTaggerE
N7CoreNLP20TaggerManagerWrapperE
N7CoreNLP8crfsuite12AttributeMapE
tcrf
/System/Library/LinguisticData/zh/Hans/tokenizer.dat
/System/Library/LinguisticData/zh/Hant/tokenizer.dat
N7CoreNLP8crfsuite5ModelE
N7CoreNLP31ICUTextBreakWithCustomizedRulesE
N7CoreNLP11OrthographyE
Nk[lQY[lQk[
NN7CoreNLP8crfsuite6StringE
N7CoreNLP17ThaiSubWordTaggerE
N7CoreNLP8CRFModel18modelLoadExceptionE
N7CoreNLP8CRFModelE
@(#)PROGRAM:CoreNLP  PROJECT:CoreNLP-130.5.3
v4@?0
[[:Hani:][:Hang:][:Katakana:][:Hiragana:][:Katakana_Or_Hiragana:][:Thai:][\u30FC]]
Arab
Cyrl
Deva
Hans
Latn
Hebr
Grek
Thai
Kore
zh-Hans
zh-Hant
/System/Library/PrivateFrameworks/LinguisticData.framework/LinguisticData
/System/Library/PrivateFrameworks/LanguageModeling.framework/LanguageModeling
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
 -l1
v12@?0{?=ii}4
Should not be here as default tagger should handle everything.
com.apple.CoreNLP.CopyPossibleStringLanguages
v20@?0^{?={?=ii}I}4^{__CFString=}8L12^B16
v12@?0^{?={?=ii}I}4^B8
NLStringTokenizer
v8@?0^B4
^{ReadOnlyFile<char>=*I{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}iB}4@?0
root
word
com.apple.CoreNLP.SingletonResourceManager
unknown open mode for file 
could not open file 
failed to get file size for 
mmap failed for 
failed to read from 
unknown error opening 
v20@?0{?=ii}4^B12@?<v@?^{?={?=ii}I}^B>16
Katakana; Latin; NFD
NumericPinyin-Latin
Other
Latin-NumericPinyin
lid_arbc.dat
lid_cyrl.dat
lid_devn.dat
lid_han.dat
lid_latn.dat
LanguageIdentification
fileLocation
/System/Library/PrivateFrameworks/Montreal.framework/Montreal
MRLModelCreate
MRLModelGetIOMappings
MRLModelGetOutputSize
MRLModelRecognize
MRLModelRelease
MRLModelSetMaxSequenceLength
Tokenization
model.maxent
:NUM
LMLanguageModelCreate
LMLanguageModelRelease
LMLanguageModelGetTokenIDForString
LMLanguageModelCreateStringForTokenID
LMLanguageModelGetLemmaForTokenWithPOS
LMLanguageModelEnumerateLemmasForToken
kLMLanguageModelLocaleKey
kLMLanguageModelAdaptationEnabledKey
kLMLanguageModelUseMontrealKey
LMLanguageModelHasLemmas
com.apple.CoreNLP.LemmaTagger
en_US
es_ES
pt_BR
came
v16@?0I4C8^B12
have
will
LegacyTokenBreak
LSTMLanguageIdentifier
LineBreak
CustomizedModelPropertyArray
CustomizedModelPropertyLanguage
CustomizedModelPropertyScheme
CustomizedModelPropertyModelPath
TokenType
Language
Script
LexicalClass
NameType
NameTypeOrLexicalClass
Lemma
Transcription
DerivedSubToken
InternalClass
Word
Punctuation
Whitespace
Noun
Verb
Adjective
Adverb
Pronoun
Determiner
Particle
Preposition
Number
Conjunction
Interjection
Classifier
Idiom
OtherWord
SentenceTerminator
OpenQuote
CloseQuote
OpenParenthesis
CloseParenthesis
WordJoiner
Dash
ParagraphBreak
PersonalName
PlaceName
OrganizationName
suggestd
Tagging
pos.dat
ner_v2.dat
ner.dat
^{USet=}4@?0
Unknown tokenization unit: %u
v16@?0{unique_ptr<CoreNLP::Resource, std::__1::default_delete<CoreNLP::Resource> >={__compressed_pair<CoreNLP::Resource *, std::__1::default_delete<CoreNLP::Resource> >=^{Resource}}}4^{__CFString=}8^B12
standard
extractRangesFromLabels
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreNLPFramework_Sim/CoreNLPFramework-130.5.3/Tagger.subproj/Source/WordTagger/SubWordTagger/CRFSuiteInterface.cpp
false
setMaxWordLength
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreNLPFramework_Sim/CoreNLPFramework-130.5.3/Tagger.subproj/Source/WordTagger/SubWordTagger/crfsuite/String.h
len <= UCHAR_MAX
SmartTokenBreak
EnableSmartTokenizer
com.apple.CoreNLP
v20@?0{?={?=ii}I}4^B16
v16@?0^{NLAttributedToken={?={?=ii}I}{map<CoreNLP::NLTagSchemeType, int, std::__1::less<CoreNLP::NLTagSchemeType>, std::__1::allocator<std::__1::pair<const CoreNLP::NLTagSchemeType, int> > >={__tree<std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::__map_value_compare<CoreNLP::NLTagSchemeType, std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::less<CoreNLP::NLTagSchemeType>, true>, std::__1::allocator<std::__1::__value_type<CoreNLP::NLTagSchemeType, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<CoreNLP::NLTagSchemeType, std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::less<CoreNLP::NLTagSchemeType>, true> >=L}}}Q{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}B}4B8^B12
v20@?0^{NLAttributedToken={?={?=ii}I}{map<CoreNLP::NLTagSchemeType, int, std::__1::less<CoreNLP::NLTagSchemeType>, std::__1::allocator<std::__1::pair<const CoreNLP::NLTagSchemeType, int> > >={__tree<std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::__map_value_compare<CoreNLP::NLTagSchemeType, std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::less<CoreNLP::NLTagSchemeType>, true>, std::__1::allocator<std::__1::__value_type<CoreNLP::NLTagSchemeType, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<CoreNLP::NLTagSchemeType, std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::less<CoreNLP::NLTagSchemeType>, true> >=L}}}Q{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}B}4^{NLAttributedToken={?={?=ii}I}{map<CoreNLP::NLTagSchemeType, int, std::__1::less<CoreNLP::NLTagSchemeType>, std::__1::allocator<std::__1::pair<const CoreNLP::NLTagSchemeType, int> > >={__tree<std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::__map_value_compare<CoreNLP::NLTagSchemeType, std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::less<CoreNLP::NLTagSchemeType>, true>, std::__1::allocator<std::__1::__value_type<CoreNLP::NLTagSchemeType, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<CoreNLP::NLTagSchemeType, std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::less<CoreNLP::NLTagSchemeType>, true> >=L}}}Q{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}B}8B12^B16
v12@?0^{NLAttributedToken={?={?=ii}I}{map<CoreNLP::NLTagSchemeType, int, std::__1::less<CoreNLP::NLTagSchemeType>, std::__1::allocator<std::__1::pair<const CoreNLP::NLTagSchemeType, int> > >={__tree<std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::__map_value_compare<CoreNLP::NLTagSchemeType, std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::less<CoreNLP::NLTagSchemeType>, true>, std::__1::allocator<std::__1::__value_type<CoreNLP::NLTagSchemeType, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<CoreNLP::NLTagSchemeType, std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::less<CoreNLP::NLTagSchemeType>, true> >=L}}}Q{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}B}4^B8
v16@?0^{NLAttributedToken={?={?=ii}I}{map<CoreNLP::NLTagSchemeType, int, std::__1::less<CoreNLP::NLTagSchemeType>, std::__1::allocator<std::__1::pair<const CoreNLP::NLTagSchemeType, int> > >={__tree<std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::__map_value_compare<CoreNLP::NLTagSchemeType, std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::less<CoreNLP::NLTagSchemeType>, true>, std::__1::allocator<std::__1::__value_type<CoreNLP::NLTagSchemeType, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<CoreNLP::NLTagSchemeType, std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::less<CoreNLP::NLTagSchemeType>, true> >=L}}}Q{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}B}4^{NLAttributedToken={?={?=ii}I}{map<CoreNLP::NLTagSchemeType, int, std::__1::less<CoreNLP::NLTagSchemeType>, std::__1::allocator<std::__1::pair<const CoreNLP::NLTagSchemeType, int> > >={__tree<std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::__map_value_compare<CoreNLP::NLTagSchemeType, std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::less<CoreNLP::NLTagSchemeType>, true>, std::__1::allocator<std::__1::__value_type<CoreNLP::NLTagSchemeType, int> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<CoreNLP::NLTagSchemeType, std::__1::__value_type<CoreNLP::NLTagSchemeType, int>, std::__1::less<CoreNLP::NLTagSchemeType>, true> >=L}}}Q{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}B}8^B12
v20@?0i4i8i12^B16
AppleTextBreakLocale
AppleLanguages
Hant
IPHONE_SIMULATOR_ROOT
createSystemRootPath
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreNLPFramework_Sim/CoreNLPFramework-130.5.3/Common/NLUtils.cpp
simulatorRoot
TaggerManagerWrapper
MaskSurfaceUnigram
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreNLPFramework_Sim/CoreNLPFramework-130.5.3/Tagger.subproj/Source/WordTagger/SubWordTagger/crfsuite/AttributeMap.cpp
GetIDForSurfaceUnigram
wordPositionAttributeID
maskForWordPosition
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreNLPFramework_Sim/CoreNLPFramework-130.5.3/Tagger.subproj/Source/WordTagger/SubWordTagger/crfsuite/AttributeMap.h
maskForWordPositionAttributeType
^{ReadOnlyFile<unsigned char>=*I{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=II*}{__short=(?=Cc)[11c]}{__raw=[3L]})}}}iB}4@?0
tokruleLE.data
/System/Library/LinguisticData/en/tokcompound.dat
pa-Guru
iu-Cans
mn-Mong
Jpan
Armn
Beng
Guru
Gujr
Orya
Taml
Telu
Knda
Mlym
Sinh
Laoo
Tibt
Mymr
Geor
Ethi
Cher
Cans
Khmr
Mong
com.apple.CoreNLP.Orthography
init
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreNLPFramework_Sim/CoreNLPFramework-130.5.3/Tagger.subproj/Source/WordTagger/SubWordTagger/crfsuite/String.cpp
offset - ch.offset <= SCHAR_MAX
v24@?0^{__CFURL=}4i8^{__CFLocale=}12^{__CFString=}16^B20
LDEnumerateAssetDataItems
Statistics the training data set(s)
Number of instances: 
Number of items: 
Number of attributes: 
Number of labels: 
%Y-%m-%dT%H:%M:%SZ
Start time of the training: 
End time of the training:
ERROR: CRFModelTrainer: Unable to train the crf model.
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
