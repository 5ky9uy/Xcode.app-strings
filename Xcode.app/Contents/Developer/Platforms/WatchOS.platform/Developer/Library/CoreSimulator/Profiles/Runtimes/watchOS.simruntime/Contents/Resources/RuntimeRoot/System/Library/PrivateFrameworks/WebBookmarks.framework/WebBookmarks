init
changeTypeDescription
stringWithFormat:
initWithBookmarkCollection:bookmark:changeType:
description
.cxx_destruct
collection
bookmark
changeType
_collection
_bookmark
_changeType
class
unlockSyncAsynchronously
dealloc
initWithBookmarkCollection:bookmark:
setBookmark:
beginSyncTransaction
commitSyncTransaction
_postBookmarksDidReloadNotificationAndStartReadingListFetcherIfChangesWereMade
_restoreMissingSpecialBookmarks
rollbackSyncTransaction
isKindOfClass:
unlockSync
syncDataForKey:
setSyncData:forKey:
_clearAllDAVSyncData
alloc
initWithTitle:address:
initFolderWithParentID:
_markSpecial:
_bookmarkWithServerID:excludeDeletedBookmarks:
isFolder
serverID
copy
isInserted
_setServerID:forBookmark:
setServerID:
parentID
_serverIDForBookmarkID:
syncKey
_setSyncKey:forBookmark:
setSyncKey:
syncData
_setSyncData:forBookmark:
setSyncData:
title
setTitle:
_saveBookmark:withSpecialID:updateGenerationIfNeeded:
extraAttributes
wb_boolForKey:
setExtraAttributes:
cleanupRedundantPreviewText
identifier
_updateSelectedFavoritesFolderWithBookmarkID:wasFavoritesFolder:isFavoritesFolder:
address
initWithString:
absoluteString
setAddress:
specialID
_orderChildrenWithServerIDs:inFolderWithServerID:excludeDeletedBookmarks:
_syncKeysForServerIDs:
_serverIDsInFolderWithServerID:excludeDeletedBookmarks:
_serverIDAtOrderIndex:inFolderWithServerID:
isReadingListItem
UUID
clearReadingListArchiveWithUUID:
isReadingListFolder
clearAllReadingListArchives
_deleteBookmark:leaveTombstone:
readingListWithUnreadOnly:
_orderIndex
_reverseOrderIndex:
_changeList
_DAVGeneration
initWithInt:
_clearChangeList
_setMergeMode:
lockSync
initSafariBookmarkCollectionCheckingIntegrity:
_syncType
_bookmarkIDForServerID:excludeDeletedBookmarks:
isMerging
_bookmarkWithSpecialID:
_mergeMode
_mergeCandidateFolderWithTitle:parent:mergeMode:
_mergeCandidateBookmarkWithTitle:address:parent:mergeMode:
_mergeBookmark:withOriginalBookmark:prioritizeOriginalBookmarkAttributes:generateChangesIfNeeded:
_markBookmarkID:added:
_setParentID:
_moveBookmark:toFolderWithID:detectCycles:
domain
code
wb_privacyPreservingDescription
modifiedBookmarksInBookmarkFolder:
dateLastViewed
_bookmarksIDsFromBookmarks:fromChangeSet:withFilter:
changes
countByEnumeratingWithState:objects:count:
replayChangesToBookmark:
attributesMarkedAsModify:
numberWithInt:
addObject:
allObjects
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
bookmarkIDsModifiedInMemoryPassingFilterFromChangeSet:inFolder:
bookmarkIDsModifiedInMemoryNotPassingFilterFromChangeSet:inFolder:
array
removeAllObjects
initWithOriginalBookmark:
duplicates
duplicatesToKeep
addDuplicateBookmark:replaceOriginal:
addDuplicateBookmarkToKeep:
exchangeOriginalBookmarkWithBookmark:
removeAllDuplicates
originalBookmark
foundDuplicates
_dupicateBookmarks
_dupicateBookmarksToKeep
_foundDuplicates
_originalBookmark
initWithBookmark:bookmarkID:parentID:changeType:
_setUsedForInMemoryChangeTracking:
_setModifiedAttributesIfSupported
wb_numberForKey:isValid:
intValue
integerValue
wb_dictionaryForKey:isValid:
initWithDictionaryRepresentationForInMemoryChangeTracking:
setDateLastViewed:
dictionary
setObject:forKeyedSubscript:
numberWithInteger:
numberWithUnsignedLongLong:
dictionaryRepresentationForInMemoryChangeTracking
_attributesMarkedAsModified:
bookmarkAddChangeWithBookmark:
bookmarkModifyChangeWithBookmark:
initWithBookmarkID:parentID:changeType:
initWithDictionaryRepresentation:
applyModificationsToBookmark:
dictionaryRepresentation
bookmarkID
setBookmarkID:
setParentID:
modifiedAttributes
_bookmarkID
_parentID
_modifiedAttributes
UTF8String
callStackSymbols
sharedAggregateDictionary
incrementKey:
orderedSet
_readPersistedChanges
_addChange:
objectForKeyedSubscript:
removeObject:
count
removeObjectForKey:
_removeAllChanges
defaultManager
removeItemAtURL:error:
containsObject:
_setID:
_setInserted:
arrayWithCapacity:
dictionaryWithObjects:forKeys:count:
dataWithPropertyList:format:options:error:
writeToURL:options:error:
dataWithContentsOfURL:options:error:
propertyListWithData:options:format:error:
wb_arrayForKey:isValid:
setSharedChangeSet:
sharedChangeSet
initWithFileURL:
nextBookmarkIDForAddingBookmarkInMemory
addChange:
removeChange:
removeAllChanges
isBookmarkDeleted:
deletedBookmarkIDsInBookmarkFolder:
addedBookmarksInBookmarkFolder:
numberOfAddedBookmarksInBookmarkFolder:
updateAddChangesWithInMemoryBookmarkID:toDatabaseGeneratedID:
bookmarkIsAddedInMemory:
persistChangesWithCompletion:
fileURL
_queue
_lastBookmarkIDForAddingInMemoryBookmark
_changes
_bookmarkIDToChanges
_folderIDToDeletedChildrenChanges
_folderIDToAddedChildrenChanges
_folderIDToModifiedChildrenChanges
_fileURL
initClientForMachService:
_serverConnection
messageWithName:
sendMessage:
didToggleCloudTabs:terminateAfterUpdating:
clearAllCloudTabDevices
clearTabsForCurrentDevice
didToggleCloudTabs:
didTogglePrivateBrowsing:
_trimmedTitle:
_trimmedPreviewText:
sharedFeatureManager
isOfflineReadingListAvailable
startReadingListFetcher
_addReadingListItemWithURL:title:previewText:
_connection
_webBookmarks_isHTTPFamilyURL
_init
exceptionWithName:reason:userInfo:
supportsURL:
errorWithDomain:code:userInfo:
defaultReadingList
addReadingListItemWithURL:title:previewText:error:
_private
_serialQueue
_uniqueExternalUUID
_setUUID:
mutableCopy
numberWithBool:
setValue:forKey:
setLocalAttributes:
initBuiltinDeviceBookmarkWithTitle:address:
isEqualToBookmark:
isEqualToString:
string
shortTypeDescription
appendFormat:
_markAttributesAsModified:
_web_bestURLForUserTypedString
copyWithZone:
initCarrierBookmarkWithTitle:address:
initWhiteListBookmarkWithTitle:address:
localizedTitle
isBookmarksBarFolder
isBookmarksMenuFolder
isWebFilterWhiteListFolder
isFrequentlyVisitedSitesFolder
isEditable
isDeletable
isHidden
isSyncable
needsSyncUpdate
setNeedsSyncUpdate:
fetchedIconData
setFetchedIconData:
iconData
setIconData:
localAttributes
_folder
_title
_url
_UUID
_serverID
_syncKey
_syncData
_editable
_deletable
_hidden
_syncable
_fetchedIconData
_iconData
_locallyAdded
_archiveStatus
_webFilterStatus
_extraAttributes
_localAttributes
_specialID
_inserted
_needsSyncUpdate
_usedForInMemoryChangeTracking
_setupWithPath:checkIntegrity:
_setupInMemoryChangeSet
_trackChangesInMemoryIfDatabaseWriteIsNotAllowed
initWithWebBookmarkCollectionClass:
setDelegate:
_openDatabaseAtPath:checkIntegrity:error:
isLockedSync
fileExistsAtPath:isDirectory:
_primaryCollection
lastPathComponent
_removeCorruptedBookmarksDatabaseAtPath:
userInfo
objectForKey:
syncSetString:forKey:
_registerForSyncBookmarksFileChangedNotification
stringByAppendingPathExtension:
_web_pathWithUniqueFilenameForPath:
moveItemAtPath:toPath:error:
stringByAppendingPathComponent:
_web_removeFileOnlyAtPath:
stringByAppendingString:
fileExistsAtPath:
initWithPath:checkIntegrity:
initSafariBookmarkCollectionCheckingIntegrity:readonlyCollection:
safariDirectoryPath
stringByResolvingSymlinksInPath
initWithPath:migratingBookmarksPlist:syncAnchorPlist:checkIntegrity:readonlyCollection:
_errorForMostRecentSQLiteError
_createSchema
_errorForMostRecentSQLiteErrorWithErrorCode:
_verifyAllTablesExist:
_checkDatabaseIntegrity
_migrateToCurrentSchema
initWithUTF8String:
arrayWithObjects:count:
_setupWithPath:migratingBookmarksPlist:syncAnchorPlist:checkIntegrity:
_migrateBookmarksPlist:syncAnchorPlist:
stringWithUTF8String:
_currentProcessContainerPath
applicationProxyForIdentifier:placeholder:
dataContainerURL
path
_safariContainerPath
objectAtIndex:
_web_createDirectoryAtPathWithIntermediateDirectories:attributes:
readingListArchivesDirectoryPath
enumeratorAtPath:
attributesOfItemAtPath:error:
fileSize
contentsOfDirectoryAtPath:error:
readingListFolderBookmarkID
_fastFetchBookmarksInBookmarkFolder:options:offset:limit:
archiveStatus
removeItemAtPath:error:
_executeSQL:
_safariFetcherServerProxy
length
sharedWebFilterSettings
userSettings
_readingListItemsWhere:filteredBy:withInMemoryFilter:
contentFilterOverridesEnabled
whiteListEnabled
markWebContentFilterAllowsAllReadingListItems
bookmarkArray
URLWithString:
contentFilterListsAllowURL:
setWebFilterStatus:
saveBookmark:startReadingListFetcher:
_executeSQLWithCString:
defaultCenter
postNotificationName:object:
initWithFormat:
initWithBookmarksWhere:orderBy:usingFilter:
initWithQuery:skipOffset:collection:
bookmarkCount
initWithCalendarIdentifier:
setDay:
dateByAddingComponents:toDate:options:
compare:
purgeableReadingListItems
archiveSize
date
setArchiveStatus:
setDateLastArchived:
saveBookmark:
clearArchiveSynchronously
vacuum
_selectBookmarksWhere:
_finalizeStatementIfNotNull:
_initWithSqliteRow:
isWebFilterWhiteListOnlyModeEnabled
rootBookmark
subarrayWithRange:
lastObject
bookmarkWithID:
listWithID:skipOffset:
_intFromExecutingSQL:
listWithID:
listWithID:skipOffset:includeHidden:
listWithID:skipOffset:includeHidden:filteredUsingString:
initWithFolderID:inCollection:includeHidden:usingFilter:
listWithSpecialID:
readingListWithUnreadOnly:filteredUsingString:
insertString:atIndex:
initWithBookmarksWhere:folderID:orderBy:usingFilter:
setInMemoryFilter:
favoritesFolder
webFilterWhiteListFolderBookmarkID
frequentlyVisitedSitesFolderBookmarkID
arrayWithObject:
_webBookmarks_hasCaseInsensitivePrefix:
_parentIdentifiersOfBookmarksNeedingIcons
componentsJoinedByString:
_simulateCrashWithDescription:
applyInMemoryChangesToDatabase
_specialIDForBookmarkBeingSaved:
_postBookmarksChangedSyncNotification
_postBookmarksSpecialFoldersDidChangeNotification
unsignedIntValue
_postBookmarksFolderContentsDidChangeNotification:
_saveBookmark:startReadingListFetcher:forApplyingInMemoryChanges:
_startReadingListFetcher
_deleteBookmark:postChangeNotification:forApplyingInMemoryChanges:
_incrementGeneration
clearArchive
deleteBookmark:postChangeNotification:
_moveBookmark:toIndex:
_setOrderIndex:
bookmarkAtIndex:
_moveBookmarkAtIndex:toIndex:
saveBookmarks:postNotification:
moveBookmark:toFolderWithID:
characterAtIndex:
stringWithString:
stringWithCharacters:length:
replaceCharactersInRange:withString:
rangeOfString:options:
_normalizeSearchString:
_enumerateBookmarksForMatchStatement:normalizedQuery:usingBlock:
_web_possibleURLPrefixesForUserTypedString
_addBookmarksForReadingListMatchStatement:normalizedQuery:toArray:maxResults:
sortUsingComparator:
removeObjectsInRange:
_firstBookmarkWithURLMatchingString:prefixMatch:inParent:
_inMemoryChangeSet
addObjectsFromArray:
stringValue
appendString:
_postBookmarksDidReloadNotification
_orderedWhereClauseForArchiveMode:
_tableExpressionForArchiveMode:
countReadingListBookmarksNeedingArchiveInMode:
_selectBookmarksWhere:returnType:
firstReadingListBookmarkNeedingArchiveInMode:
readingListBookmarksNeedingArchiveInMode:
fullArchiveAvailable
rollingListOfArchivedReadingListItems
_cullReadingListBookmarksList:toSize:
boolValue
UUIDString
_clearAndCreateBookmarksTables
_clearAndCreateAncestorTable
_clearAndCreateBookmarksTitleWordTable
_indexAllTitleWords
_normalizeDatabaseURLs
_rebuildAncestorTable
dateWithTimeIntervalSince1970:
setObject:forKey:
initWithObjects:forKeys:
deleteAllFavoriteIcons
markAllFavoritesAsNeedingIcons
_migrateSchemaVersion3ToVersion4
_migrateSchemaVersion4ToVersion5
_migrateSchemaVersion5ToVersion6
_migrateSchemaVersion6ToVersion7
_migrateSchemaVersion7ToVersion8
_migrateSchemaVersion8ToVersion9
_migrateSchemaVersion9ToVersion10
_migrateSchemaVersion10ToVersion11
_migrateSchemaVersion11And12And13ToVersion14
_migrateSchemaVersion14ToVersion15
_migrateSchemaVersion15ToVersion16
_migrateSchemaVersion16AndVersion17AndVersion18ToVersion19
_migrateSchemaVersion21ToVersion22
_migrateSchemaVersion22ToVersion23
_migrateSchemaVersion23ToVersion24
_migrateSchemaVersion24ToVersion25
_userVersion
_migrateSchemaVersion0ToVersion1
_migrateSchemaVersion1And2ToVersion3
_migrateSchemaVersion19And20ToVersion21
_migrateSchemaVersion25ToVersion26
_migrateSchemaVersion26ToVersion27
_migrateSchemaVersion27ToVersion28
_migrateSchemaVersion28ToVersion29
_migrateSchemaVersion29ToVersion30
_migrateSchemaVersion30ToVersion31
_migrateSchemaVersion31ToVersion32
_migrateSchemaVersion32ToVersion33
_migrateSchemaVersion33ToVersion34
_migrateSchemaVersion34ToVersion35
_migrateSchemaVersion35ToVersion36
_migrateSchemaVersion36ToVersion37
_migrateSchemaVersion37ToVersion38
_rerunMigrationsIfNecessary
_importBookmarksPlist:
_importSyncAnchorPlist:
_insertAncestorTableEntriesForBookmarkID:withAncestorIDs:
_restoreBookmarkBarIfMissing
_restoreOrMergeReadingListFolderWithChangeNotification:
restoreOrMergeWhiteListFolderAndContentsWithChangeNotification:
initWithDomain:code:userInfo:
_orderIndexForBookmarkInsertedIntoParent:insertAtBeginning:
_updateCachedChildCountForParentID:inDirection:
_clearSyncKeysUnderBookmarkID:isFolder:
_insertTombstoneWithServerID:syncData:
_deleteAncestorTableEntriesForBookmarkID:
_insertAncestorTableEntriesForBookmarkID:withParentID:
bytes
_clearAllSyncKeys
_clearAllTombstones
_insertTombsonesRecursivelyForRootFolder:
_deleteRecursively:
_insertTombsonesRecursivelyHelperCurrentDepth:folder:
initWithBytes:length:
locallyAdded
webFilterStatus
_specialIDForBookmarkTitle:
_databaseTitleForSpecialID:
_childrenOfParentBookmarkAreUnsyncable:
_setSyncable:
_addBookmarkWithTitle:address:parentID:orderIndex:isFolder:externalUUID:associatedBookmark:updateParentChildCount:updateAncestorEntries:
_setHidden:
_updateHiddenAncestorCountForBookmarksUnderFolderID:addingOffset:
_markBookmarkID:withSpecialID:
_reindexBookmarkID:title:
_wb_stringByStandardizingDAVServerID
cStringUsingEncoding:
removeObjectAtIndex:
reverseObjectEnumerator
_unsafeOrderChildrenWithServerIDs:inFolderWithServerID:excludeDeletedBookmarks:
setString:
advanceToNextToken
_clearTitleWordsForBookmarkID:
_indexBookmarkID:title:
initWithCString:encoding:
_collectChangesOfType:withClause:intoArray:
_incrementDAVGeneration
_updateSyncNotificationType
postBookmarksDidReloadNotification
setFavoritesFolderIdentifier:postChangeNotification:
syncStringForKey:
bookmarksBarBookmark
_favoritesFolderIdentifier
_lazyCreateFrequentlyVisitedSitesBookmark
dictionaryWithObject:forKey:
postNotificationName:object:userInfo:
dictionaryWithContentsOfFile:
mergeWithBookmarksDictionary:clearHidden:error:
whiteListAllowedSites
_restoreOrMergeWhiteListFolderAndContentsWithWebFilterWhiteList:ensureChildCount:postChangeNotification:
webFilterWhiteListFolder
indexSet
_ensureFolderChildrenCount:
valueForKey:
webFilterWhiteList
indexOfObject:
addIndex:
removeObjectsAtIndexes:
initReadingListBookmarkWithTitle:address:previewText:
arrayByAddingObject:
folderID
_fastFetchBookmarksInBookmarkFolder:includingHiddenBookmarks:
_initWithSqliteRow:hasIcon:
insertObject:atIndex:
initWithTopLevelDuplicateBookmarksCount:allDuplicateBookmarksCount:
mainBundle
bundleIdentifier
_safariInMemoryChangesFilePath
fileURLWithPath:
_applyInMemoryChangesToDatabasePostChangeNotification:
releaseLock
_deleteBookmarkInMemory:
acquireLockWithTimeout:
_enumerateContentsOfBookmarkFolder:includingSubfolders:usingBlock:
firstObject
deduplicateBookmarksWithRootFolder:depth:
_deduplicateBookmarksWithRootFolder:depth:trackChanges:considerBookmarksWithSyncDataAsUnique:davHomeURL:
_appendDuplicateBookmarkGroupsInBookmarks:toGroups:considerBookmarksWithSyncDataAsUnique:davHomePath:
_bookmark:hasCurrentDAVHomePath:
_deleteAndRebuildAncestorTableRecords
_recalculateCachedChildrenCountAndOrderIndices
_fetchBookmarkIDsInFolder:onlyFolders:includingHiddenBookmarks:
_bookmark:isDuplicateOfBookmark:
_bookmark:hasPriorityOverBookmarkForDeduplication:prioritizeBookmarksWithSyncData:davHomePath:
isEqualToDictionary:
addEntriesFromDictionary:
favoritesFolderSelectionShouldSync
_safariPreferencesDomain
readingListArchivesDiskUsage
safariBookmarkCollection
_syncLockFileName
bookmarkImagesDirectoryPath
databaseLockAcquisitor:acquiredLock:
enumerateBookmarks:andReadingListItems:matchingString:usingBlock:
readingListBookmarksMatchingString:maxResults:onlyArchivedBookmarks:
databaseHealthInformation
initWithPath:
initReadonlySafariBookmarkCollection
initWithPath:migratingBookmarksPlist:syncAnchorPlist:
cleanupReadingListArchives
markArchivedReadingListItemsAsNonRecoverable
updateReadingListWebFilterStatusForUnsetItemsOnly:
localeSettingsChanged
purgeableSpace
purge:
bookmarkWithUUID:
readingListFolder
bookmarkAtPath:
subfoldersOfID:
rootList
bookmarksBarList
isEmpty
shouldFetchIconForBookmark:
bookmarksNeedingIcons
deleteBookmarks:postChangeNotification:
deleteBookmark:
reorderBookmark:toIndex:
reorderList:moveBookmarkAtIndex:toIndex:
saveArchiveForReadingListBookmarkWithID:
saveArchivesForReadingListBookmarks:
deleteArchiveForReadingListBookmarkWithID:
saveIconWithData:urlString:forBookmark:
saveAndMoveBookmark:toFolderID:
_prefixSearch:usingColumns:maxCount:
bookmarksMatchingString:
_bookmarksFromStatementSelectingIDs:withQuery:
firstReadingListBookmarkWithURLMatchingString:prefixMatch:
indexOfReadingListBookmark:countingOnlyUnread:
_orderedWhereClauseForArchiveMode:automaticArchivingEnabled:
countReadingListBookmarksNeedingArchiveInMode:automaticArchivingEnabled:
firstReadingListBookmarkNeedingArchiveInMode:automaticArchivingEnabled:
readingListBookmarksNeedingArchiveInMode:automaticArchivingEnabled:
rollOutLastReadingListItem
rollOutReadingListItemIfNeededToMakeRoomForOneNewItem
rollingReadingListMaximumCount
clearCarrierBookmarks
migrateReadingListIconsFromDatabaseToBookmarkImagesDirectory
_rootFolderHiddenChildrenClause
_sqliteStatementWithQuery:
_metaDataFileChanged:
_clearCachedFavoritesFolderIdentifier
setFavoritesFolder:localOnly:
favoritesFolderList
bookmarkIsFavoritesFolder:
frequentlyVisitedSitesFolder
frequentlyVisitedSitesList
fastFetchBookmarksInBookmarkList:
hasInMemoryChanges
deleteBookmarkInMemory:
deleteBookmarksInMemory:inFolder:
addBookmarkInMemory:toFolderWithID:
modifyBookmarkInMemory:
deduplicateBookmarks
_deduplicateBookmarksForSyncingAndTrackChanges:considerBookmarksWithSyncDataAsUnique:
_usesCloudKit
_test_preventPeriodicallyApplyingInMemoryChangesToDatabase
test_restoreMissingSpecialBookmarks
_locale
_wordTokenizer
_rootBookmark
_dirty
_readonly
_databaseLockAcquisitor
substringToIndex:
timeIntervalSince1970
_addChildrenOfID:toCollection:recursive:error:
_bookmarkDictionaryForSqliteRow:recursive:error:
_syncAdd:toParent:withOrderIndex:error:
_mergeChildrenOfID:referencingBase:error:
mergeWithBookmarksDictionary:clearHidden:clearSyncData:error:
_markSpecialBookmarks
_syncSetString:forKey:updatedExistingKey:
_deleteSyncPropertyForKey:
_syncPropertyExistsForKey:
dataWithBytes:length:
_isLockedSync
_syncFlags
syncLockFileDescriptor
_lockSync
setUnlockSyncRequested:
setSyncLockFileDescriptor:
_unlockSync
lockSyncHoldRequestorPointers
postSyncNotificationWhenUnlocking
_postBookmarksChangedSyncNotificationOnSyncQueue
setPostSyncNotificationWhenUnlocking:
valueWithPointer:
unlockSyncRequested
setSyncNotificationType:
syncAllowed
syncNotificationType
_bookmarkCollectionSyncAllowed
initWithSyncAllowed:
bookmarksDictionary
removePersistedInMemoryBookmarkChangesFile
generation
_setSyncNotificationType:
containsOnlyStockBookmarks
_cloudKitLocalMigrationState
holdLockSync:
unholdLockSync:
_syncAllowed
_postSyncNotificationWhenUnlocking
_unlockSyncRequested
_syncLockFileDescriptor
_syncNotificationType
_lockSyncHoldRequestorPointers
componentsWithString:
_wb_stringByDeletingTrailingSlash
hasSuffix:
isCustomQuery
bookmarksInCollection:fromIndex:toIndex:
bookmarkArrayRequestingCount:
_bookmarks
_bookmarkCount
_skipOffset
_query
countInCollection:
initWithUserName:
restrictionType
reloadSettings
isWebFilterEnabled
_userSettings
setString:withSearchRange:
longCharacterIsMember:
initialize
_string
_stringLength
_rangeOfNextToken
_startOfUnclassifiedRangeBeforeNextToken
addCharactersInRange:
_normalizeUserTypedString:
_preparePrefixesFromNormalizedString:
_listQueryType
_sqliteNotInConditionForInMemoryModifiedAndDeleted:bookmarksInFolder:collection:
_sqliteInConditionForInMemoryModifiedBookmarksInFolder:collection:
_filterBookmarks:
_childCountInDatabaseForFolderFetchInCollection:skipCountingInDatabaseBookmarksThatAreDeletedInMemory:
_inMemoryAddedChildrenCountForBookmarkFolder:collection:skipCountingBookmarksThatAreDeletedInMemory:
initWithCapacity:
objectAtIndexedSubscript:
substringWithRange:
inMemoryFilter
_queryWithOrderBy
_orderBy
_titleWordPrefixes
_titleWordPrefixesForInMemoryFiltering
_urlFilter
_includeHidden
_countShouldUseNumChildrenIfPossible
_customQuery
_folderID
_inMemoryFilter
whitespaceAndNewlineCharacterSet
formUnionWithCharacterSet:
punctuationCharacterSet
componentsSeparatedByCharactersInSet:
indexOfObjectPassingTest:
wb_stringForKey:isValid:
numberWithUnsignedInt:
isEqualToData:
_initWithDomain:
_initWithDomain:usage:
websiteDataRecordWithDomain:
websiteDataRecordFromXPCDictionary:
XPCDictionaryRepresentation
usage
setUsage:
_domain
_usage
topLevelDuplicateBookmarksCount
allDuplicateBookmarksCount
_topLevelDuplicateBookmarksCount
_allDuplicateBookmarksCount
_readingListPropertyNamed:
_modifyExtraReadingListAttributes:
_modifyLocalReadingListAttributes:
readingListIconURL
readingListIconUUID
dateAdded
isEqualToDate:
previewText
localPreviewText
stringByTrimmingCharactersInSet:
stringByReplacingOccurrencesOfString:withString:options:range:
setPreviewText:
setLocallyAdded:
dateLastArchived
setReadingListIconURL:
setReadingListIconUUID:
setDateAdded:
dateLastFetched
setDateLastFetched:
setTitle:previewText:dateLastFetched:
setNextPageURLs:
nextPageURLs
setLocalPreviewText:
hasFetchedMetadata
setHasFetchedMetadata:
mainFrame
DOMDocument
webArchive
data
dataSource
mainResource
writeToFile:options:error:
mainFrameURL
createSymbolicLinkAtPath:withDestinationPath:error:
_quickLookContent
_writeDataAtPath:asArchive:
_createSymlinkInDirectory:pointingToPath:
_quickLookContentFilePath
response
suggestedFilename
pathExtension
MIMEType
preferredExtensionForMIMEType:
_web_userVisibleString
_suggestedFileNameForWebView:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
linkItemAtPath:toPath:error:
fileType
subpathsOfDirectoryAtPath:error:
_sizeForFileOrDirectory:withAttributes:
_removeDirectoryAtPath:
webarchivePathInReaderForm:fileExists:
webarchivePathForNextPageURL:
writeOfflineWebView:asArchive:inReaderForm:
shouldReattemptArchiveWithAutomaticArchivingEnabled:
shouldArchive
setShouldArchive:
initWithType:websiteDataRecord:
taskWithType:
taskForDeletingIndividualWebsiteDataWithRecord:
taskType
websiteDataRecord
_taskType
_websiteDataRecord
_updateToAccessLevel:
accessLevel
_offlineReadingListAvailable
_favoritesFolderSelectionShouldSync
_accessLevel
sharedConnection
isEphemeralMultiUser
setValue:forScalarKey:
didFinishFetching
setHandler:forMessageNamed:
didUpdateProgressWithMessage:
didStartFetchingReadingListItemWithMessage:
didStopFetchingReadingListItemWithMessage:
bookmarksServerProxy:didStartFetchingReadingListItem:
bookmarksServerProxy:didStopFetchingReadingListItem:
bookmarksServerProxy:didUpdateReadingListFetchingProgress:
bookmarksServerProxyDidFinishFetching:
connection:didCloseWithError:
delegate
_delegate
wb_objectOfType:forKey:isValid:
wb_numberForKey:
wb_dateForKey:isValid:
wb_URLForKey:isValid:
sendMessage:withReplyHandler:
getSafariWebDataUsageWithCompletion:
deleteAllSafariSecurityOriginsWithCompletionHandler:
deleteSafariWebsiteDataRecord:completionHandler:
deleteSafariPersistentURLCacheStorageWithCompletionHandler:
getSafariDataUsageByteCountWithCompletionHandler:
clearAllSafariHistoryWithCompletionHandler:
getCurrentlySelectedSearchEngineWithCompletion:
scheduleBookmarksDatabaseMaintenance
scheduleBookmarksDatabaseMigrationTask
acquireLockWithTimeout:retryInterval:
_attemptToLockSyncAndNotifyDelegateOnFailure:
_startTimerWithTimeout:retryInterval:
_stopTimer
isValid
invalidate
_retryTimerFired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
_timer
_webBookmarkCollectionClass
_lockAcquired
_maxRetryCount
_retryCount
_handleMessage:
initWithConnection:
setMessageHandlers:
hasBoolEntitlement:
connection
_messageHandlers
_entitlementLookupCache
_connectionQueue
_handleIncomingConnection:
initListenerForMachService:
_listenerConnection
_clientConnections
_enqueueTask:
_shouldEnqueueTask:
_performNextTask
_attemptCurrentTask
_finishCurrentTask
_currentTaskAttemptDidFinishWithError:
enqueueTask:
startBackgroundTaskAssertionBlock
setStartBackgroundTaskAssertionBlock:
finishBackgroundTaskAssertionBlock
setFinishBackgroundTaskAssertionBlock:
_tasks
_currentTask
_currentRetryCount
_settingsGateway
_backgroundTaskAssertionToken
_startBackgroundTaskAssertionBlock
_finishBackgroundTaskAssertionBlock
Modify
Delete
%@: %@
collection
T@"WebBookmarkCollection",R,N,V_collection
bookmark
T@"WebBookmark",R,N,V_bookmark
changeType
Ti,R,N,V_changeType
<BABookmarkItem %p> wrapping {%@}
T@"WebBookmark",&,N,V_bookmark
Error: domain=%@, code=%ld
B8@?0@"WebBookmark"4
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
originalBookmark
T@"WebBookmark",R,N,V_originalBookmark
duplicates
T@"NSArray",R,N
duplicatesToKeep
foundDuplicates
TB,R,N,V_foundDuplicates
BookmarkID
ParentID
Type
AssociatedBookmark
ModifiedAttributes
dictionaryRepresentation
T@"NSDictionary",R,C,N
bookmarkID
Ti,N,V_bookmarkID
parentID
Ti,N,V_parentID
modifiedAttributes
TQ,R,N,V_modifiedAttributes
ROLLBACK
COMMIT
BEGIN DEFERRED
SELECT NULL FROM bookmarks
apple-internal-install
BEGIN IMMEDIATE
com.apple.MobileSafari.StopSyncing
com.apple.WebBookmarks.BookmarkDAVHealth.TaskSubmitted
com.apple.WebBookmarks.BookmarkDAVHealth.TaskSucceeded
com.apple.WebBookmarks.BookmarkDAVHealth.TaskFailed
com.apple.WebBookmarks.BookmarkDAVHealth.TaskGroupSubmitted
com.apple.WebBookmarks.BookmarkDAVHealth.TaskGroupSucceeded
com.apple.WebBookmarks.BookmarkDAVHealth.TaskGroupFailed
com.apple.WebBookmarks.BookmarkDAVHealth.WokenByPush
Changes
com.apple.WebBookmarks.WebBookmarkChangeSet.%p
v4@?0
fileURL
T@"NSURL",R,C,N,V_fileURL
changes
T@"NSArray",R,C,N
WBErrorDomain
Misuse of WBReadingList interface. Use class method defaultReadingList.
com.apple.WebBookmarks.AddToReadingListQueue
%@ %d (%d)
 '%@' [%@] [%@]
needsSyncUpdate
TB,N,V_needsSyncUpdate
title
T@"NSString",&,N,V_title
address
T@"NSString",&,N,V_url
Ti,R,N,V_parentID
identifier
Ti,R,N,V_id
UUID
T@"NSString",R,N,V_UUID
specialID
Ti,R,N,V_specialID
editable
TB,R,N,GisEditable,V_editable
deletable
TB,R,N,GisDeletable,V_deletable
hidden
TB,R,N,GisHidden,V_hidden
folder
TB,R,N,GisFolder,V_folder
inserted
TB,R,N,GisInserted,V_inserted
syncable
TB,R,N,GisSyncable,V_syncable
fetchedIconData
TB,N,V_fetchedIconData
iconData
T@"NSData",&,N,V_iconData
extraAttributes
T@"NSDictionary",&,N,V_extraAttributes
localAttributes
T@"NSDictionary",&,N,V_localAttributes
DidDownloadIconsNotification
BookmarkIdentifier
com.apple.WebBookmarks.SQLiteError
com.apple.WebBookmarks.DidVacuumDatabaseNotification
WebBookmarksFolderContentsDidChangeNotification
WebBookmarksDidReloadNotification
WebBookmarksSpecialFoldersDidChangeNotification
WebBookmarksChangedFolderID
com.apple.bookmarks.OmitFromUI
_DatabaseResetReason
com.apple.bookmarks.IsBuiltinDeviceBookmark
com.apple.bookmarks.IsCarrierBookmark
com.apple.bookmarks.SelectedFavoritesFolder
com.apple.webbookmarksd.readingListfetching
com.apple.WebBookmarks.webbookmarksd
WebBookmarksDataclassDidChangeNotification
WebBookmarksResetCloudHistoryAccount
ComputerAnchorKey
BASyncData
_FavoritesFolderID
BookmarksBar
BookmarksMenu
com.apple.ReadingList
com.apple.WebFilterWhiteList
com.apple.FrequentlyVisitedSites
Bookmarks.db
corrupted
%@.corrupted
-journal
-wal
-shm
Bookmarks.plist
Bookmarks.plist.anchor.plist
:memory:
SELECT * FROM bookmarks LIMIT 1
Database failed full integrity check.
SELECT name from sqlite_master where type = 'table'
bookmarks
generations
sync_properties
bookmark_title_words
folder_ancestors
PRAGMA integrity_check(1)
com.apple.mobilesafari
Library/Preferences/com.apple.mobilesafari
bookmarkChanges.plist
Library/Caches
ReadingListArchives
Library/Safari
UPDATE bookmarks SET archive_status = ? WHERE archive_status = ? OR archive_status = ?
PendingBookmarkChanges.plist
UPDATE bookmarks SET archive_status = ? WHERE parent = ? AND id IN (%@)
parent = %d AND deleted = 0 AND (archive_status = %d OR archive_status = %d)
UPDATE bookmarks SET archive_status = %d WHERE %@
web_filter_status = %d
UPDATE bookmarks SET web_filter_status = ? WHERE parent = ? AND deleted = 0 AND web_filter_status != ?
VACUUM
parent = %d AND deleted = 0 AND read = 1 AND (archive_status = %d OR archive_status = %d)
id = %d AND deleted = 0
external_uuid = ? AND deleted = 0
SELECT id FROM bookmarks WHERE parent = ? AND type = 1 AND title = ? AND deleted = 0
parent = ? AND title = ? AND deleted = 0 ORDER BY order_index
parent = %d AND type = 1 AND deleted = 0 AND hidden = 0 AND hidden_ancestor_count = 0 ORDER BY order_index
SELECT id FROM bookmarks WHERE special_id = %d AND deleted = 0
web_filter_status != %d
read = 0 AND 
parent = %d AND deleted = 0
 AND %@
order_index DESC
SELECT id FROM bookmarks WHERE special_id = %d
SELECT COUNT(*) FROM bookmarks WHERE special_id == 0 AND id != 0 AND deleted = 0;
http
https
fetched_icon = 0 AND (url LIKE 'http:%%' OR url LIKE 'https:%%') AND parent IN (%@)
UPDATE bookmarks SET fetched_icon = 0 WHERE parent IN (%@)
UPDATE bookmarks SET icon = NULL, fetched_icon = 0 WHERE parent IN (%@)
Trying to save bookmarks without first obtaining the bookmarks database file lock.
Trying to save a bookmark without first obtaining the bookmarks database file lock.
UPDATE bookmarks SET order_index = order_index + 1 WHERE order_index < ? AND order_index >= ? AND parent = ?
UPDATE bookmarks SET order_index = order_index - 1 WHERE order_index > ? AND order_index <= ? AND parent = ?
UPDATE bookmarks SET order_index = ?1, dav_generation = ?2%@ WHERE id = ?3
DISTINCT url
SELECT %s FROM bookmarks WHERE type = 0 AND url >= ? AND url < ? AND deleted = 0 LIMIT ?
SELECT %s FROM bookmarks WHERE type = 0 AND deleted = 0 LIMIT ?
SELECT id, title, url FROM bookmarks WHERE type = 0 AND deleted = 0
AND parent = %d
AND hidden = 0 AND hidden_ancestor_count = 0
SELECT %@ FROM bookmarks INNER JOIN bookmark_title_words ON bookmarks.id = bookmark_title_words.bookmark_id WHERE bookmark_title_words.word LIKE ? AND type = 0 AND deleted = 0 AND web_filter_status != %d AND title IS NOT NULL AND url IS NOT NULL %@
PRAGMA case_sensitive_like = true
@"WebBookmark"4@?0
v16@?0@"NSString"4@"NSString"8^{BookmarkSQLStatement=^^?^{sqlite3_stmt}BBi}12
SELECT %@ FROM bookmarks WHERE url LIKE ? AND type = 0 AND deleted = 0 AND web_filter_status != %d AND title IS NOT NULL AND url IS NOT NULL %@
PRAGMA case_sensitive_like = false
 AND (archive_status = %d OR archive_status = %d)
deleted = 0 AND parent = ? AND web_filter_status != ? AND title IS NOT NULL AND url IS NOT NULL%@ ORDER BY order_index DESC LIMIT ?
SELECT %@ FROM bookmarks INNER JOIN bookmark_title_words ON bookmarks.id = bookmark_title_words.bookmark_id WHERE bookmark_title_words.word LIKE ? AND %@
SELECT %@ FROM bookmarks WHERE url LIKE ? AND %@
i12@?0@4@8
SELECT COUNT(*) FROM bookmarks WHERE order_index < ? AND parent = ? AND (read = 0 AND deleted = 0 AND id NOT IN (%@))
SELECT id FROM bookmarks WHERE parent = %d AND deleted = 0 AND web_filter_status = %d ORDER BY order_index DESC LIMIT %d
id IN (%@) AND 
archive_status IN (%d,%d)
(%@)
(%@) AND (locally_added = 1 OR read = 0)
(%@) AND locally_added = 1
 ORDER BY archive_status ASC, read ASC, locally_added DESC, order_index DESC
 LIMIT 1
read ASC, order_index DESC
syncable = 0 AND parent = 0
com.apple.Bookmarks.lock
SELECT MAX(order_index) + 1 FROM bookmarks WHERE special_id != 0
SELECT COUNT(*), MAX(order_index) FROM bookmarks WHERE parent = ? AND deleted = 0 AND syncable = 1
special_id = ? AND deleted = 0
%@%%
url LIKE ? AND deleted = 0 AND parent = ? LIMIT 1
url = ? AND deleted = 0 AND parent = ? ORDER BY last_modified ASC LIMIT 1
type = 1 AND title = ? AND parent = ? AND deleted = 0 AND %@ IS NULL
server_id
sync_data
type = 0 AND url = ?1 AND parent = ?2 AND deleted = 0 AND server_id IS NULL
type = 0 AND title = ?3 AND url = ?1 AND parent = ?2 AND deleted = 0 AND sync_data IS NULL
PRAGMA user_version
PRAGMA journal_mode = wal
BEGIN
CREATE TABLE generations (generation INTEGER NOT NULL)
INSERT INTO generations (generation) VALUES (1)
CREATE TABLE sync_properties (key TEXT NOT NULL, value TEXT NOT NULL)
CREATE INDEX sync_properties_key_index ON sync_properties (key)
INSERT INTO sync_properties (key, value) VALUES ('_dav_generation', 1)
INSERT INTO bookmarks (id, special_id, parent, type, order_index, num_children, editable, deletable, title, external_uuid) VALUES (1, 1, 0, 1, 0, 0, 0, 0, 'BookmarksBar', '%@')
UPDATE bookmarks SET num_children = 1 WHERE id = 0
PRAGMA user_version = %d
DROP TABLE IF EXISTS bookmark_title_words
CREATE TABLE bookmark_title_words (id INTEGER PRIMARY KEY, bookmark_id INTEGER NOT NULL CONSTRAINT fk_bookmark_id REFERENCES bookmarks(id) ON DELETE CASCADE, word TEXT, word_index INTEGER)
CREATE TRIGGER fkd_bookmark_title_words_bookmark_id BEFORE DELETE ON bookmarks      FOR EACH ROW BEGIN DELETE FROM bookmark_title_words WHERE bookmark_id = OLD.id;      END;
CREATE INDEX title_word_index ON bookmark_title_words(word)
CREATE INDEX title_bookmark_id_index ON bookmark_title_words(bookmark_id)
DROP TABLE IF EXISTS bookmarks
CREATE TABLE bookmarks (id INTEGER PRIMARY KEY,special_id INTEGER DEFAULT 0,parent INTEGER, type INTEGER,title TEXT,url TEXT COLLATE NOCASE,num_children INTEGER DEFAULT 0,editable INTEGER DEFAULT 1,deletable INTEGER DEFAULT 1,hidden INTEGER DEFAULT 0,hidden_ancestor_count INTEGER DEFAULT 0,order_index INTEGER NOT NULL,external_uuid TEXT,read INTEGER DEFAULT NULL,last_modified REAL DEFAULT NULL,server_id TEXT, sync_key TEXT,sync_data BLOB,added INTEGER DEFAULT 1,deleted INTEGER DEFAULT 0,extra_attributes BLOB DEFAULT NULL,local_attributes BLOB DEFAULT NULL,fetched_icon BOOL DEFAULT 0, icon BLOB DEFAULT NULL,dav_generation INTEGER DEFAULT 0,locally_added BOOL DEFAULT 0,archive_status INTEGER DEFAULT 0,syncable BOOL DEFAULT 1,web_filter_status INTEGER DEFAULT 0%@)
CREATE INDEX special_id_index ON bookmarks (special_id)
CREATE INDEX autocomplete_index ON bookmarks (url)
CREATE INDEX folder_list_index ON bookmarks (parent, type, order_index)
CREATE INDEX group_index ON bookmarks (parent, order_index)
CREATE INDEX sync_index ON bookmarks (external_uuid)
CREATE INDEX server_id_index ON bookmarks(server_id)
CREATE INDEX dav_generation_index ON bookmarks(dav_generation)
INSERT INTO bookmarks (id, type, order_index, num_children, title, external_uuid) VALUES (0, 1, 0, 0, 'Root', 'Root')
ALTER TABLE bookmarks ADD COLUMN special_id INTEGER DEFAULT 0
UPDATE bookmarks SET title = 'Root', external_uuid = 'Root' WHERE id = 0
UPDATE bookmarks SET special_id = 1 WHERE id = 1
UPDATE bookmarks SET special_id = 2 WHERE id = 2
PRAGMA user_version = 1
CREATE TRIGGER fkd_bookmark_title_words_bookmark_id BEFORE DELETE ON bookmarks         FOR EACH ROW BEGIN DELETE FROM bookmark_title_words WHERE bookmark_id = OLD.id;         END;
PRAGMA user_version = 3
ALTER TABLE bookmarks ADD COLUMN server_id TEXT
ALTER TABLE bookmarks ADD COLUMN sync_key TEXT
ALTER TABLE bookmarks ADD COLUMN sync_data BLOB
PRAGMA user_version = 4
SELECT count(*) FROM sync_properties WHERE key = '_dav_generation'
ALTER TABLE bookmarks ADD COLUMN deleted INTEGER DEFAULT 0
ALTER TABLE bookmarks ADD COLUMN dav_generation INTEGER DEFAULT 0
PRAGMA user_version = 5
PRAGMA user_version = 6
CREATE TABLE folder_ancestors (id INTEGER PRIMARY KEY, folder_id INTEGER NOT NULL CONSTRAINT fk_ancestors_folder_id REFERENCES bookmarks(id) ON DELETE CASCADE, ancestor_id INTEGER NOT NULL)
CREATE TRIGGER fkd_ancestors_folder_id BEFORE DELETE ON bookmarks FOR EACH ROW BEGIN DELETE FROM folder_ancestors WHERE folder_id = OLD.id; END;
CREATE INDEX ancestor_folder_id_index on folder_ancestors(folder_id)
CREATE INDEX ancestor_ancestor_id_index on folder_ancestors(ancestor_id)
PRAGMA user_version = 7
ALTER TABLE bookmarks ADD COLUMN extra_attributes BLOB DEFAULT NULL
PRAGMA user_version = 8
DROP INDEX IF EXISTS deleted_index
DROP INDEX IF EXISTS autocomplete_index
CREATE INDEX autocomplete_index ON bookmarks(url)
PRAGMA user_version = 9
ALTER TABLE bookmarks ADD COLUMN hidden INTEGER DEFAULT 0
PRAGMA user_version = 10
ALTER TABLE bookmarks ADD COLUMN hidden_ancestor_count INTEGER DEFAULT 0
PRAGMA user_version = 11
ALTER TABLE bookmarks ADD COLUMN read INTEGER DEFAULT NULL
ALTER TABLE bookmarks ADD COLUMN last_modified REAL DEFAULT NULL
PRAGMA user_version = 14
SELECT id FROM bookmarks WHERE special_id = 3
UPDATE bookmarks SET read = 0 WHERE read IS NULL and parent = ?
PRAGMA user_version = 15
CREATE INDEX title_word_bookmark_id_index ON bookmark_title_words(bookmark_id)
PRAGMA user_version = 16
UPDATE bookmarks SET num_children = (SELECT COUNT(*) FROM bookmarks AS count_bookmarks WHERE count_bookmarks.parent = bookmarks.id AND hidden = 0) WHERE type = 1
PRAGMA user_version = 19
SELECT count(*) FROM bookmarks WHERE parent = ? AND deleted = 0
UPDATE bookmarks SET order_index = ? - order_index - 1 WHERE parent = ?
PRAGMA user_version = 21
ALTER TABLE bookmarks ADD COLUMN icon BLOB DEFAULT NULL
ALTER TABLE bookmarks ADD COLUMN fetched_icon BOOL DEFAULT 0
SELECT id, extra_attributes FROM bookmarks WHERE deleted = 0 AND parent = ?
UPDATE bookmarks SET icon = ?, fetched_icon = ?, extra_attributes = ?, dav_generation = ? WHERE id = ?
PRAGMA user_version = 22
DELETE FROM sync_properties WHERE key = '_dav_generation'
INSERT INTO sync_properties (key, value) VALUES ('_dav_generation', ?)
PRAGMA user_version = 23
ALTER TABLE bookmarks ADD COLUMN added INTEGER DEFAULT 1
UPDATE bookmarks SET added = 0 WHERE server_id IS NOT NULL
PRAGMA user_version = 24
ALTER TABLE bookmarks ADD COLUMN archived_offline BOOL DEFAULT 0
ALTER TABLE bookmarks ADD COLUMN last_archived REAL DEFAULT NULL
PRAGMA user_version = 25
PRAGMA user_version = 26
PRAGMA user_version = 27
PRAGMA user_version = 28
ALTER TABLE bookmarks ADD COLUMN locally_added BOOL DEFAULT 0
PRAGMA user_version = 29
ALTER TABLE bookmarks ADD COLUMN local_attributes BLOB DEFAULT NULL
SELECT id, extra_attributes, last_archived FROM bookmarks WHERE deleted = 0 AND parent = ?
UPDATE bookmarks SET extra_attributes = ?, local_attributes = ?, dav_generation = ? WHERE id = ?
ALTER TABLE bookmarks DROP COLUMN last_archived
PRAGMA user_version = 30
ALTER TABLE bookmarks ADD COLUMN archive_status INTEGER DEFAULT 0
UPDATE bookmarks SET archive_status = archived_offline
UPDATE bookmarks SET archived_offline = NULL
UPDATE bookmarks SET last_archived = NULL
PRAGMA user_version = 31
PRAGMA user_version = 32
UPDATE bookmarks SET fetched_icon = 0, icon = NULL WHERE parent = (SELECT id FROM bookmarks WHERE special_id = 3)
PRAGMA user_version = 33
ALTER TABLE bookmarks ADD COLUMN syncable BOOL DEFAULT 1
PRAGMA user_version = 34
UPDATE bookmarks SET archive_status = 0 WHERE archive_status IS NULL
PRAGMA user_version = 35
ALTER TABLE bookmarks ADD COLUMN web_filter_status INTEGER DEFAULT 0
PRAGMA user_version = 36
PRAGMA user_version = 37
PRAGMA user_version = 38
SELECT %@, %s FROM bookmarks
SELECT COUNT(*) FROM bookmarks WHERE special_id = 1
UPDATE bookmarks SET order_index = order_index + 1 WHERE parent = 0
INSERT INTO bookmarks (special_id, parent, type, order_index, editable, deletable, title, external_uuid) VALUES (1, 0, 1, 0, 0, 0, 'BookmarksBar', '')
UPDATE bookmarks SET num_children = num_children + 1 WHERE id = 0
AND hidden = 0 AND id != %d AND (num_children > 0 OR special_id != %d)
SELECT count(*) FROM bookmarks WHERE %@
SELECT id FROM bookmarks WHERE %@
SELECT %@ FROM bookmarks WHERE %@
SELECT COUNT(*) from folder_ancestors WHERE folder_id = ? AND ancestor_id = ?
UPDATE bookmarks SET order_index = order_index + 1 WHERE parent = ? AND order_index >= ?
UPDATE bookmarks SET parent = ?1, order_index = ?2,%@%@ icon = NULL, fetched_icon = 0 WHERE id = ?3
 modified_attributes = modified_attributes | ?4,
 dav_generation = ?5,
UPDATE bookmarks SET order_index = (order_index - 1) WHERE parent = ? AND order_index > ?
INSERT INTO bookmarks (order_index, deleted, parent, server_id%@) VALUES (0, 1, -1, ?%@)
DELETE FROM bookmarks WHERE deleted = 1
UPDATE bookmarks SET added = 1, server_id = NULL, sync_key = NULL, sync_data = NULL WHERE parent IN (select folder_id from folder_ancestors where ancestor_id = ?) OR parent = ? OR id = ?
UPDATE bookmarks SET server_id = NULL, sync_key = NULL, sync_data = NULL
UPDATE bookmarks SET added = 1
UPDATE bookmarks SET order_index = (order_index - 1) WHERE parent = %d AND order_index > %d
DELETE FROM bookmarks WHERE parent IN (SELECT folder_id FROM folder_ancestors WHERE ancestor_id = ?) OR parent = ? OR id = ?
UPDATE bookmarks SET order_index = order_index + 1 WHERE parent = %d AND order_index >= %d
SELECT (hidden + hidden_ancestor_count) FROM bookmarks WHERE id = ?
INSERT INTO bookmarks (title, url, parent, type, external_uuid, order_index, extra_attributes, fetched_icon, icon, locally_added, archive_status, web_filter_status, hidden_ancestor_count, editable, local_attributes, syncable) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
SELECT count(*) FROM Bookmarks WHERE special_id = %u
UPDATE bookmarks SET title = ?1, url = ?2, extra_attributes = ?3, local_attributes = ?11, fetched_icon = ?4, icon = ?5, locally_added = ?10, archive_status = ?8, web_filter_status = ?12%@%@ WHERE id = ?6
, dav_generation = ?7
UPDATE bookmarks SET hidden = ? WHERE id = ?
UPDATE bookmarks SET last_modified = ?, read = ? WHERE id = ?
UPDATE bookmarks SET external_uuid = '%@' WHERE id = %d
UPDATE bookmarks SET special_id = %u, editable = 0, deletable = 0 WHERE id = %u
UPDATE bookmarks SET num_children = num_children - 1 WHERE id = %d
UPDATE bookmarks SET num_children = num_children + 1 WHERE id = %d
SELECT server_id FROM bookmarks WHERE id = ?
deleted = 0 AND
SELECT id FROM bookmarks WHERE %@ %@ ORDER BY server_id ASC
rtrim(server_id, '/') LIKE ?
server_id = ?
%%%@
%@ %@ ORDER BY server_id ASC
UPDATE bookmarks SET server_id = ? WHERE id = ?
UPDATE bookmarks SET sync_key = ? WHERE id = ?
UPDATE bookmarks SET sync_data = ? WHERE id = ?
SELECT sync_key FROM bookmarks WHERE server_id = ? AND deleted = 0 ORDER BY server_id ASC
SELECT sync_key FROM bookmarks WHERE deleted = 0 AND rtrim(server_id, '/') LIKE ? ORDER BY server_id ASC
SELECT server_id from bookmarks where parent = ? AND deleted = 0
SELECT server_id FROM bookmarks WHERE parent = ? AND deleted = 0 AND order_index = ?
UPDATE bookmarks SET order_index = ? WHERE id = ?
SAVEPOINT bookmarksdav_order
RELEASE SAVEPOINT bookmarksdav_order
ROLLBACK TRANSACTION TO SAVEPOINT bookmarksdav_order
SELECT ancestor_id from folder_ancestors WHERE folder_id = ?
DELETE FROM folder_ancestors WHERE folder_id IN (SELECT folder_id FROM folder_ancestors WHERE ancestor_id = ?) OR folder_id = ?;
DELETE FROM bookmark_title_words WHERE bookmark_id = %d
INSERT INTO bookmark_title_words (bookmark_id, word, word_index) VALUES (?, ?, ?)
SELECT id, title FROM bookmarks where type = 0 AND deleted = 0
UPDATE generations SET generation = generation + 1
SELECT %@ %@
FROM folder_ancestors LEFT OUTER JOIN bookmarks ON folder_id = bookmarks.id WHERE bookmarks.id != 0 AND added = 1 AND syncable = 1 GROUP BY folder_id ORDER BY count(ancestor_id) ASC
FROM bookmarks WHERE added = 1 AND id != 0 AND type = 0 AND syncable = 1
FROM bookmarks WHERE dav_generation = %d AND deleted = 0 AND added = 0 AND id != 0 AND syncable = 1
FROM bookmarks WHERE deleted = 1 AND server_id IS NOT NULL AND syncable = 1
UPDATE bookmarks SET added = 0 WHERE added != 0
UPDATE bookmarks SET added = ? WHERE id = ?
SELECT value from sync_properties WHERE key = '_dav_generation'
UPDATE sync_properties SET value = value + 1 WHERE key = '_dav_generation'
com.apple.bookmarks.BookmarksFileChanged
SELECT id FROM bookmarks WHERE special_id = ?
SELECT id, URL FROM bookmarks WHERE type = 0 AND deleted = 0
UPDATE bookmarks SET URL = ? WHERE id = ?
pageTitle
bookmarkPath
title = ? AND parent = 0 AND deleted = 0 ORDER BY order_index ASC
UPDATE bookmarks SET num_children = (SELECT COUNT(*) FROM bookmarks AS count_bookmarks WHERE count_bookmarks.parent = %d) WHERE (bookmarks.id = %d AND bookmarks.num_children < 0)
DROP TABLE IF EXISTS folder_ancestors
DROP TRIGGER IF EXISTS fkd_ancestors_folder_id
INSERT INTO folder_ancestors (folder_id, ancestor_id) VALUES (?, ?)
SELECT id FROM bookmarks WHERE parent = ? AND type = 1 AND deleted = 0
UPDATE bookmarks SET hidden_ancestor_count = hidden_ancestor_count + ? WHERE parent IN (SELECT folder_id from folder_ancestors WHERE ancestor_id = ?) OR parent = ?
 LIMIT ? OFFSET ?
SELECT parent, count(*) AS identical_bookmarks FROM bookmarks GROUP BY parent, type, title, url HAVING identical_bookmarks > 1
v8@?0@"WebBookmark"4
DELETE FROM bookmarks WHERE id = ?
SELECT num_children FROM bookmarks WHERE id = ?
UPDATE bookmarks SET parent = ?1, order_index = order_index + ?2%@ WHERE parent = ?3
UPDATE bookmarks SET num_children = num_children + (SELECT num_children FROM bookmarks WHERE id = ?) WHERE id = ?
DELETE FROM folder_ancestors
UPDATE bookmarks SET num_children = (SELECT COUNT(*) FROM bookmarks AS b WHERE b.parent = ? AND b.hidden = 0) WHERE id = ? AND type = 1
parent = ?%@%@
 AND type = 1
 AND hidden = 0
merging
TB,R,N,GisMerging
com.apple.WebBookmarks.bookmarksCollectionQueue
com.apple.WebBookmarks.titleWordTokenizerAccess
DeviceClass
iPad
WebBookmarkTypeList
WebBookmarkTypeLeaf
WebBookmarkType
Title
URIDictionary
URLString
Children
WebBookmarkUUID
SELECT type, title, url, id, external_uuid FROM bookmarks WHERE parent = ? AND deleted = 0 AND hidden = 0 AND syncable = 1 ORDER BY order_index
SELECT type, title, url, id, external_uuid FROM bookmarks WHERE id = 0
UPDATE bookmarks SET special_id = 1, editable = 0, deletable = 0 WHERE id = (SELECT id FROM bookmarks WHERE title = 'BookmarksBar' AND parent = 0 ORDER BY id ASC LIMIT 1);
UPDATE bookmarks SET special_id = 2, editable = 0, deletable = 0 WHERE id = (SELECT id FROM bookmarks WHERE title = 'BookmarksMenu' AND parent = 0 ORDER BY id ASC LIMIT 1);
DELETE FROM bookmarks WHERE id != 0 AND syncable = 1
DELETE FROM bookmarks WHERE id != 0 AND hidden = 0 AND hidden_ancestor_count = 0 AND syncable = 1
SELECT generation FROM generations
SELECT COUNT(*) FROM sync_properties WHERE key = ?
DELETE FROM sync_properties WHERE key = ?
v8@?0B4
UPDATE sync_properties SET value = ? WHERE key = ?
INSERT INTO sync_properties (value, key) VALUES (?, ?)
SELECT value FROM sync_properties WHERE key = ?
com.apple.bookmarks.dbchanged
SELECT COUNT(*) FROM bookmarks WHERE special_id == 0
_usesCloudKit
TB,R,D,N
_cloudKitLocalMigrationState
Ti,R,N
syncAllowed
TB,R,N,V_syncAllowed
syncLockFileDescriptor
Ti,N,V_syncLockFileDescriptor
syncNotificationType
Ti,N,V_syncNotificationType
postSyncNotificationWhenUnlocking
TB,N,V_postSyncNotificationWhenUnlocking
lockSyncHoldRequestorPointers
T@"NSMutableSet",R,N,V_lockSyncHoldRequestorPointers
unlockSyncRequested
TB,N,V_unlockSyncRequested
com.apple.WebBookmarks.ErrorDomain
SQLiteResult
come.apple.WebBookmarks.syncLockQueue
com.apple.mobilesafari.bookmarks_changed
folderID
com.apple.WebBookmarks
Bookmarks
History (bookmark proxy)
Reading List
Allowed Sites
Favorites
Bookmarks Menu
WebBookmarkWebFilterSettingsDidChange
com.apple.ManagedConfiguration.webContentFilterChanged
userSettings
T@"WFUserSettings",R,N
webFilterEnabled
TB,R,N,GisWebFilterEnabled
webFilterWhiteListOnlyModeEnabled
TB,R,N,GisWebFilterWhiteListOnlyModeEnabled
/System/Library/PrivateFrameworks/WebContentAnalysis.framework/WebContentAnalysis
WFUserSettings
Unable to find class %s
TIWordTokenizer
/System/Library/PrivateFrameworks/TextInput.framework/TextInput
AND hidden = 0
parent = %d %@
order_index ASC
%%%@%%
%@ AND %@
%@ ORDER BY %@
<%@:%p; customQuery = %@; query = "%@"; orderBy = "%@"; titleWordPrefixes = %@>
SELECT COUNT(*) FROM bookmarks WHERE %@
SELECT num_children FROM bookmarks WHERE id = %d
id NOT IN (%@)
id IN (%@)
%@ LIMIT ? OFFSET ?
customQuery
TB,R,N,GisCustomQuery,V_customQuery
Ti,R,N,V_folderID
inMemoryFilter
T@"<WebBookmarkInMemoryChangeFilter>",&,N,V_inMemoryFilter
((%@) OR url LIKE ?)
id IN (SELECT bookmark_id FROM bookmark_title_words WHERE word GLOB ?)
 AND id IN (SELECT bookmark_id FROM bookmark_title_words WHERE word GLOB ?)
(%@ AND %@) OR %@
(%@) OR %@
(%@ AND %@)
B16@?0@"NSString"4I8^B12
bookmarks.type, bookmarks.title, bookmarks.url, bookmarks.id, bookmarks.editable, bookmarks.deletable, bookmarks.hidden, bookmarks.parent, bookmarks.order_index, bookmarks.external_uuid, bookmarks.special_id, bookmarks.server_id, bookmarks.sync_key, bookmarks.sync_data, bookmarks.extra_attributes, bookmarks.local_attributes, bookmarks.fetched_icon, bookmarks.icon, bookmarks.locally_added, bookmarks.archive_status, bookmarks.syncable, bookmarks.web_filter_status%@
AND hidden = 0 
AND type = 1 
AND type = 0 
SELECT bookmarks.type, bookmarks.title, bookmarks.url, bookmarks.id, bookmarks.editable, bookmarks.deletable, bookmarks.hidden, bookmarks.parent, bookmarks.order_index, bookmarks.external_uuid, bookmarks.special_id, bookmarks.server_id, bookmarks.sync_key, bookmarks.sync_data, bookmarks.extra_attributes, bookmarks.local_attributes, bookmarks.fetched_icon, bookmarks.locally_added, bookmarks.archive_status, bookmarks.syncable, bookmarks.web_filter_status%@ FROM bookmarks WHERE parent = ? %@%@ORDER BY order_index ASC
bookmarks.read, bookmarks.deleted
IsFolder
IsEditable
IsDeletable
IsHidden
IsSyncable
IsLocallyAdded
SpecialID
OrderIndex
IsInserted
NeedsSyncUpdate
UsedForInMemoryChangeTracking
serverID
T@"NSString",&,N
syncKey
syncData
T@"NSData",&,N
dictionaryRepresentationForInMemoryChangeTracking
TQ,R,N
WebsiteDataRecordDomain
WebsiteDataRecordUsage
XPCDictionaryRepresentation
T@"NSObject<OS_xpc_object>",R,C,N
domain
T@"NSString",R,C,N,V_domain
usage
TQ,N,V_usage
BookmarkSync
DataMigration
WebsiteData
topLevelDuplicateBookmarksCount
TI,R,N,V_topLevelDuplicateBookmarksCount
allDuplicateBookmarksCount
TI,R,N,V_allDuplicateBookmarksCount
/file
Reader.webarchive
Page.webarchive
v8@?0@"NSMutableDictionary"4
previewText
locallyAdded
TB,N
archiveStatus
Ti,N
webFilterStatus
dateLastArchived
T@"NSDate",&,N
dateAdded
dateLastViewed
dateLastFetched
nextPageURLs
T@"NSDictionary",&,N
localPreviewText
readingListIconURL
readingListIconUUID
hasFetchedMetadata
Page
shouldArchive
PreviewText
DateAdded
DateLastViewed
DateLastFetched
ReadingListIconURL
DateLastArchived
NextPageURLs
LocalPreviewText
ReadingListIconUUID
HasFetchedMetadata
Icon
DateLastFetchedIcon
taskType
Ti,R,N,V_taskType
websiteDataRecord
T@"WBWebsiteDataRecord",R,N,V_websiteDataRecord
SafariDebugOverrideLaunchMode
accessLevel
Ti,R,N,V_accessLevel
offlineReadingListAvailable
TB,R,N,GisOfflineReadingListAvailable,V_offlineReadingListAvailable
favoritesFolderSelectionShouldSync
TB,R,N,V_favoritesFolderSelectionShouldSync
com.apple.mobilesafari.WebBoomarks.migration.markReadingListItemsForWebContentFilterTime
com.apple.mobilesafari.WebBoomarks.migration.vacuumTime
v12@?0@"WebBookmarksXPCConnection"4@"NSObject<OS_xpc_object>"8
delegate
T@"<WebBookmarksClientDelegateProtocol>",W,N,V_delegate
com.apple.safarifetcherd
AddToReadingList
ClearAllCloudTabDevices
ClearCloudTabsForCurrentDevice
DidToggleCloudTabs
DidTogglePrivateBrowsing
RegisterForReadingListFetcherUpdates
StartReadingListFetcher
UnregisterForReadingListFetcherUpdates
DidFinishFetching
DidUpdateProgress
DidStartFetchingItem
DidStopFetchingItem
ClearAllReadingListArchives
ClearReadingListArchive
GetSafariWebDatabaseUsage
DeleteSafariWebSecurityOrigin
DeleteAllSafariWebSecurityOrigins
DeleteSafariPersistentURLCacheStorage
GetSafariDataUsageSummary
ClearAllSafariHistory
ScheduleBookmarksDatabaseMaintenanceTask
ScheduleBookmarksDatabaseMigrationTask
ScheduleReadingListIconMigration
Address
ClientBundleID
Enabled
Items
Progress
TerminateAfterUpdating
DataUsageSize
WebsiteDataAllRecords
WebsiteDataRecord
MessageReceivedAcknowledgement
SafariGetCurrentlySelectedSearchEngineMessage
SearchEngineShortName
http:
https:
B12@?0L4@"NSObject<OS_xpc_object>"8
v12@?0@"NSObject<OS_xpc_object>"4@"NSError"8
T@"<WBDatabaseLockAcquisitorDelegate>",W,N,V_delegate
WebBookmarksXPCConnectionErrorDomain
v8@?0@"NSObject<OS_xpc_object>"4
com.apple.WebBookmarks.WebBookmarksXPCConnectionQueue
connection
T@"NSObject<OS_xpc_object>",R,N,V_connection
T@"<WebBookmarksXPCConnectionDelegate>",N,V_delegate
_name
com.apple.WebBookmarks.WBSettingsTaskHandler.%p
v8@?0@"NSError"4
startBackgroundTaskAssertionBlock
T@?,C,N,V_startBackgroundTaskAssertionBlock
finishBackgroundTaskAssertionBlock
T@?,C,N,V_finishBackgroundTaskAssertionBlock
BAChangeRecord
WebBookmarkCloudKitSyncCollection
BABookmarkItem
WBNSErrorExtras
WebBookmarkInMemoryChangeFilterUnreadOnly
WebBookmarkInMemoryChangeFilter
NSObject
WBDuplicateBookmarkGroup
WebBookmarkChange
WebBookmarkChangeSet
CloudTabServices
WBReadingListPrivate
WBReadingList
WebBookmark
NSCopying
WebBookmarkCollection
WBDatabaseLockAcquisitorDelegate
WBBookmarkProvider
Sync
WebBookmarkCollectionSyncFlags
WebBookmarksExtras
WebBookmarkList
Internal
WebBookmarkWebFilterSettings
WebBookmarkTitleWordTokenizer
WebBookmarkListQuery
WebBookmarkReadonlyCollection
WBWebsiteDataRecord
WBBookmarksDatabaseHealthInformation
ReadingList
ReadingListFetcherExtras
ReadingListArchives
ReadingListInternal
WBSettingsTask
WBFeatureManager
SafariFetcherServerProxy
WebBookmarksXPCConnectionDelegate
WBNSDictionaryExtras
WebBookmarksSettingsGateway
WBDatabaseLockAcquisitor
WebBookmarksXPCConnection
WebBookmarksXPCListener
WBSettingsTaskHandler
@20@0:4@8@12i16
@8@0:4
v8@0:4
i8@0:4
@"WebBookmarkCollection"
@"WebBookmark"
@16@0:4@8@12
v12@0:4@8
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
@16@0:4@8i12
@"NSArray"16@0:4@"WebBookmarkChangeSet"8i12
@20@0:4@8@12@?16
@12@0:4@8
v16@0:4@8B12
@"NSMutableArray"
@20@0:4i8i12i16
@24@0:4@8i12i16i20
B16@0:4Q8
v12@0:4i8
Q8@0:4
i12@0:4@8
B12@0:4i8
@12@0:4i8
I12@0:4i8
v16@0:4i8i12
v12@0:4@?8
@"NSObject<OS_dispatch_queue>"
@"NSMutableOrderedSet"
@"NSMutableDictionary"
@"NSURL"
v12@0:4B8
v16@0:4B8B12
v20@0:4@8@12@16
@"WebBookmarksXPCConnection"
B24@0:4@8@12@16^@20
@"WBReadingListPrivate"
@12@0:4^{_NSZone=}8
@"NSString"
@"NSData"
@"NSDictionary"
v16@0:4@"WBDatabaseLockAcquisitor"8B12
v24@0:4B8B12@16@?20
@20@0:4@8I12B16
v24@0:4B8B12@"NSString"16@?<v@?@"NSString"@"NSString"@?<@"WebBookmark"@?>>20
@"NSArray"20@0:4@"NSString"8I12B16
@"WBBookmarksDatabaseHealthInformation"8@0:4
@16@0:4@8B12
B16@0:4@8B12
@12@0:4B8
@16@0:4B8B12
B20@0:4@8B12^@16
B12@0:4^i8
@28@0:4@8@12@16B20B24
B24@0:4@8@12@16B20
@20@0:4@8@12@16
B12@0:4B8
Q16@0:4Q8
@16@0:4i8I12
@20@0:4i8I12B16
@24@0:4i8I12B16@20
@16@0:4B8@12
B20@0:4@8B12B16
B16@0:4@8i12
B16@0:4@8I12
B20@0:4@8I12I16
v16@0:4@8i12
^{sqlite3_stmt=}20@0:4@8r*12I16
v20@0:4@8@12@?16
@16@0:4r*8@12
v24@0:4@8@12@16i20
I16@0:4@8B12
@16@0:4i8B12
I16@0:4i8B12
v16@0:4@8I12
@20@0:4@8B12i16
@20@0:4@8i12i16
@24@0:4@8@12i16i20
B16@0:4@8@12
^{sqlite3_stmt=}12@0:4@8
^{sqlite3_stmt=}16@0:4@8i12
i12@0:4^{sqlite3_stmt=}8
i12@0:4r*8
B20@0:4@8i12B16
B16@0:4i8B12
B16@0:4I8@12
B44@0:4@8@12i16I20B24@28@32B36B40
B16@0:4i8i12
i16@0:4@8B12
@16@0:4I8@12
B20@0:4@8@12B16
v12@0:4^{__CFString=}8
B16@0:4i8@12
v20@0:4i8@12@16
v16@0:4i8B12
v20@0:4@8B12B16
@24@0:4i8I12i16i20
v20@0:4i8B12@?16
B16@0:4i8I12
B16@0:4B8B12
B28@0:4i8I12B16B20@24
B24@0:4@8@12B16@20
v24@0:4@8@12B16@20
@20@0:4i8B12B16
B24@0:4@8@12B16B20
v20@0:4i8B12B16
^{sqlite3=}
^{__CFLocale=}
@"WebBookmarkTitleWordTokenizer"
@"SafariFetcherServerProxy"
@"WBDatabaseLockAcquisitor"
@20@0:4^{sqlite3_stmt=}8B12^@16
B24@0:4i8@12B16^@20
B24@0:4@8i12I16^@20
B20@0:4i8@12^@16
B24@0:4@8B12B16^@20
B20@0:4@8@12^B16
v12@0:4r^v8
@"NSMutableSet"
@12@0:4I8
@"WebBookmarkListQuery"
@20@0:4@8I12@16
v16@0:4I8I12
I12@0:4I8
@"WFUserSettings"
{_NSRange=II}8@0:4
@"TIWordTokenizer"
{_NSRange="location"I"length"I}
@24@0:4i8@12B16@20
@24@0:4@8i12@16@20
i20@0:4i8@12B16
@20@0:4B8i12@16
@16@0:4i8@12
@20@0:4@8I12I16
@"NSArray"
@"<WebBookmarkInMemoryChangeFilter>"
@12@0:4^{sqlite3_stmt=}8
@16@0:4^{sqlite3_stmt=}8B12
v12@0:4I8
v16@0:4Q8
@20@0:4@8Q12
@16@0:4I8I12
@16@0:4B8^B12
Q16@0:4@8@12
@"WBWebsiteDataRecord"
v16@0:4@8@12
v16@0:4@"WebBookmarksXPCConnection"8@"NSObject<OS_xpc_object>"12
@"<WebBookmarksClientDelegateProtocol>"
@16@0:4@8^B12
@20@0:4#8@12^B16
v16@0:4@8@?12
@12@0:4#8
v16@0:4d8
v24@0:4d8d16
@"NSTimer"
@"<WBDatabaseLockAcquisitorDelegate>"
@12@0:4r*8
v16@0:4@?8r*12
@"NSObject<OS_xpc_object>"
@"<WebBookmarksXPCConnectionDelegate>"
@?8@0:4
@"WBSettingsTask"
@"WebBookmarksSettingsGateway"
Bookmark collection for syncing is deallocated. Unlocking bookmarks sync
BADatabaseOpen()
BADatabaseSave()
BADatabaseClose(shouldSave: %d)
BADatabaseCreateBookmark() returning %{private}@
BADatabaseCreateFolder(folderType: %d) returning %{private}@
BADatabaseAddBookmarkUnderFolderWithServerId(bookmark: %{private}@, parentServerID: %{private}@)
BADatabaseAddFolderUnderFolderWithServerId(bookmark: %{private}@, parentServerID: %{private}@)
BADatabaseCopyBookmarkWithServerId(serverId: %{private}@) returning %{private}@
BADatabaseCopyFolderWithServerId(serverId: %{private}@) returning %{private}@
BAItemSetServerId(item: %{private}@, serverId: %{private}@)
BAItemSetSyncKey(item: %{private}@, syncKey: %{private}@)
BAItemSetSyncData(item: %{private}@, syncData: %{private}@)
BAItemSetTitle(item: %{private}@, title: %{private}@)
BAItemSetExtraAttributes(item: %{private}@, attributes: %{private}@)
BABookmarkSetURL(item: %{private}@, url: %{private}@)
BADatabaseSetChildrenOrderForFolderWithServerId(folderServerId: %{private}@, orderedServerIds: %{private}@)
BADatabaseRemoveItemWithServerId(serverId: %{private}@)
BADatabaseCopyChanges() returning %@
BADatabaseClearChangesForToken()
BADatabaseBeginMergingChanges()
BADatabaseFinishMergingChanges()
BADatabaseCreate()
Item was merged with %{private}@
WebBookmarks could not start a deferred transaction; sleeping and trying again later
WebBookmarks still could not start a deferred transaction; sleeping longer
WebBookmarks could not start a deferred transaction; bailing. Error was: %{public}s
WebBookmarks could not start a deferred transaction; bailing. Result code was: %d
%{public}@
WebBookmarks could not start an immediate transaction; sleeping.
WebBookmarks could not start an immediate transaction; sleeping longer.
WebBookmarks could not start an immediate transaction; bailing. Error was: %{public}s
WebBookmarks could not start an immediate transaction; bailing. Result code was: %d
Error converting in-memory changes into plist data: %@{public}
Failed to persist in-memory bookmarks changes plist: %{public}@
Error converting plist data to dictionary: %{public}@
Persisted bookmark changes plist is corrupted.
Cannot create a Reading List item. URLs must begin with http or https.
Failed to open Bookmarks database. Acquired sync lock: %zd, error: %{public}@.
Couldn't create bookmarks database at %{public}@
Refusing to remove corrupted bookmarks database at %{public}@: The path appears to be a directory.
Refusing to remove corrupted bookmarks database at %{public}@: The file is not named Bookmarks.db.
Still could not open bookmarks database: %{public}@
Could not open bookmarks database: %{public}@
Removing corrupted bookmarks database %{public}@
Corrupted bookmarks saved as %{public}@
Also removed the journal file %{public}@.
Failed to remove the journal file at %{public}@.
Also removed the wal file %{public}@.
Failed to remove the wal file %{public}@.
Also removed the shm file %{public}@.
Failed to remove the shm file %{public}@.
Could not remove bookmarks database %{public}@
A table is missing from bookmarks database. The database is corrupt.
Table %{public}@ is missing from bookmarks database
Skipping integrity check because database is busy or locked (sqlite code = %d)
sqlite3_prepare_v2 failed for integrity_check with error code %d
sqlite3_step failed for integrity_check with error code %d
sqlite integrity_check returned a NULL pointer
Unable to initialize WebBookmarkCollection. Nil was returned from +initSafariBookmarkCollectionCheckingIntegrity:
Starting to migrate and cleanup Reading List archives
Failed to migrate Reading List archives; couldn't reset record status.
Failed to migrate Reading List archives; couldn't update record status to "pending" (error code = %d)
Failed to remove Reading List archive directory %{public}@: %{public}@
Failed to get list of archive directories: %{public}@
Failed to remove Reading List archive directory with UUID %{public}@: %{public}@
Failed to remove reading list archive at path %{public}@: %{public}@
Migrating Reading List web filter status
Starting to mark all Reading List items as allowed by Web Content Filter
Finished marking all Reading List items as allowed by Web Content Filter
Failed to mark all Reading List items as allowed by Web Content Filter with result code: %i
Failed to save bookmark with UUID %{public}@: %{public}@
Failed to save bookmark %{public}@: Write transation isn't valid
Saving a bookmark failed
Saving a previously deleted bookmark failed
Moving bookmark %d to folder %d failed
Bookmarks database appears to have skipped migration steps. Rerunning migration.
Warning: The web bookmarks database has a greater version number than expected. Restoring a database from a newer version is not supported.
Couldn't get current version of bookmarks database.
Clearing all DAV sync data, likely because the user is logging out
Refusing to save a bookmark with no address.
Crashing since we can't save a bookmark with no address. Please file a bug.
Failed to save bookmark %{public}@: Invalid parentID %d
Handling bookmarks metadata file change notification
WebBookmarks sync is not posting a change notfication because the collection is not dirty
%{public}@ Please file a bug citing the following caller:
Error reading bookmark attributes: %{public}@
Received com.apple.bookmarks.BookmarksFileChanged
Bookmarks failed to begin sync transaction with result code: %i. SQL Error: %{public}s
Bookmarks failed to begin sync transaction with result code: %i
Failed to open bookmarks sync lock file at: %{public}s
Setting sync notification type: %zd
Posting com.apple.bookmarks.dbchanged to BookmarkDAV
Could not construct WFUserSettings. Default values will be used.
Error reading bookmark extra attributes: %{public}@
Error reading bookmark local attributes: %{public}@
Could not archive: %{private}@ to path: %{public}@: %{public}@
Could not remove sym link: %{public}@: %{public}@
Could not create sym link from %{public}@ to %{public}@: %{public}@
Could not create Directory for Reading List item archives: %{public}@
Offline Reading List: Overwriting existing archive for bookmark UUID %{public}@.
Could not create hard link for quicklook content: %{public}@
Error calculating directory size getting directory subpaths for offline reading list item at path: %{public}@
Failed to delete %{public}@: %{public}@
Deleted %{public}@ as a result of deleting the bookmark
Sending XPC message to delete all Website data
Error encountered while delivering XPC message to delete all website data. Error: %{public}@
Received acknowledgement that XPC message was delivered to delete all website data
Error encountered while delivering XPC message to delete individual website data. Error: %{public}@
Received acknowledgement that XPC message was delivered to delete individual website data
Error encountered while delivering XPC message to delete persistent URL cache storage. Error: %{public}@
Received acknowledgement that XPC message was delivered to delete persistent URL cache storage
Error encountered while delivering XPC message to delete Safari's history. Error: %{public}@
Received acknowledgement that XPC message was delivered to delete Safari's history
WBDatabaseLockAcquisitor: releasing database lock
WBDatabaseLockAcquisitor: successfully acquired database lock
WBDatabaseLockAcquisitor: failed to acquire database lock
WebBookmarksXPCConnection: No handler registered for the message %{public}s.
Not queueing settings task with type %zd since one has already been scheduled.
Attempting to perform a webbookmarksd settings task while there is no current task set
Dropping settings task with type %zd because maximum retry count exceeded
Performing settings task with type: %zd
Skipping task with type %zd due to incorrect arguments
Marking current task with type %zd as finished. Attempting next available task
Successfully performed settings task with type: %zd
Settings task with type %zd finished with a non-xpc error %{public}@
Received error while performing settings task with type: %zd, error: %{public}@
N12WebBookmarks20BookmarkSQLStatementE
N12WebBookmarks22BookmarkSQLTransactionE
N12WebBookmarks26BookmarkSQLReadTransactionE
N12WebBookmarks27BookmarkSQLWriteTransactionE
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
