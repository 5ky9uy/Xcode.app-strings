alloc
init
addObject:
count
countByEnumeratingWithState:objects:count:
initWithFormat:arguments:
taskWithCommandAndArguments:
setCommandWithArguments:
array
length
characterAtIndex:
substringWithRange:
stringByReplacingCharactersInRange:withString:
setArgv:
argv
objectAtIndex:
UTF8String
redirectStdoutToFileAtPath
fileSystemRepresentation
redirectStderrToFileAtPath
redirectStdoutToFileDescriptor
redirectStderrToFileDescriptor
_enqueueTaskCompletionForLaterWait:
cleanupEmptyFiles
setRedirectStdoutToFileAtPath:
setRedirectStdoutToFileDescriptor:
setRedirectStderrToFileAtPath:
setRedirectStderrToFileDescriptor:
waitForAllLongTasksToFinish
taskWithCommand:
setCommand:
exec
resetRedirect
.cxx_destruct
waitStatus
canTimeout
setCanTimeout:
setCleanupEmptyFiles:
_argv
_redirectStdoutToFileAtPath
_redirectStdoutToFileDescriptor
_redirectStderrToFileAtPath
_redirectStderrToFileDescriptor
_waitQueue
_waitStatus
_canTimeout
_cleanupEmptyFiles
class
raise:format:
initWithMachServiceName:options:
_setTargetUserIdentifier:
generateMemoriesRelatedDiagnosticsLogsWithContext:reply:
dumpAnalysisStatusWithContext:reply:
interfaceWithProtocol:
setRemoteObjectInterface:
resume
dictionaryWithObjects:forKeys:count:
remoteObjectProxyWithErrorHandler:
initWithLibraryPath:targetUserIdentifier:
generateMemoriesRelatedDiagnosticsLogsWithReply:
dumpAnalysisStatusWithReply:
_context
_serviceConnection
defaultManager
contentsOfDirectoryAtPath:error:
stringByAppendingPathComponent:
fileExistsAtPath:isDirectory:
lastPathComponent
addDirectoryToArchive:withDirName:
addFileToArchive:withFileName:
initWithPath:shouldCompress:
closeArchive
_archive
currentHandler
stringWithUTF8String:
handleFailureInMethod:object:file:lineNumber:description:
copy
commandWithName:
parseCommandOptionsWithArgc:argv:
setHelpCommandName:
printFormat:
registerCommandClass:
commandClassWithName:
objectForKey:
commandName
setObject:forKey:
put:
endLine
printFormat:arguments:
startFgColor:bgColor:attr:
resetColorsAndAttributes
_startInCString:fgColor:bgColor:attr:
cursorToTopLeft
cursorLeft:
cursorGotoLineStart
forgetRemainingSpace
puts:len:
_putsAndCrop:len:
stringByReplacingOccurrencesOfString:withString:
puts:
openedLibraryManagerWithTargetUserIdentifier:error:
initForManagement
setDelegate:
date
openWithCompletionHandler:
errorWithDomain:code:userInfo:
timeIntervalSinceNow
localizedDescription
closeWithCompletionHandler:
setStandaloneTool:
execute
register
processInfo
processName
setToolName:
newMainCommandWithToolname:
commandVersion
initWithFormat:
_printUsage
toolName
commandWithArgc:argv:
allCommandNames
shortDescription
parameters
help
executeMainToolWithVersion:argc:argv:
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
libraryManagerStatusDidChange:
libraryManagerDidStartSynchronization:
libraryManagerHasChangesToPull:
libraryManagerDidChangeConfiguration:
libraryManagerHasStatusChanges:
displayableNameForLibraryManager:
putBright:
putUnderline:
clearScreen
eraseEndOfLine
eraseStartOfLine
eraseLine
eraseScreenDown
eraseScreenUp
cursorSave
cursorRestore
cursorToStartOfLine
cursorUp:
cursorDown:
cursorRight:
startNewLine
remainingSpace
openedLibraryManagerWithError:
closeLibraryManager:
disableOutput
isATTY
supportsEscapeSequences
usesColor
_termWidth
_usedTermWidth
_curAttrs
_curFg
_curBg
_isATTY
_supportsEscapeSequences
_usesColor
componentsSeparatedByString:
componentsJoinedByString:
stringWithFormat:
_printUsageWithFirstLine:mainCommandName:secondLine:
executeWithCommandClass:mainCommandName:
initWithCapacity:
executeWithCommandClasses:mainCommandName:
helpCommandName
isStandaloneTool
_standaloneTool
_helpCommandName
initWithShouldSignal:shouldSample:shouldRunMemoryTools:shouldRunTaskInfo:requiresRoot:
baseProcessSpecification
priviledgedProcessSpecification
signalProcessSpecification
addDefaultsDomain:
shouldSignal
setShouldSignal:
shouldSample
setShouldSample:
shouldRunMemoryTools
setShouldRunMemoryTools:
shouldRunTaskInfo
setShouldRunTaskInfo:
requiresRoot
setRequiresRoot:
defaultsDomain
setDefaultsDomain:
_shouldSignal
_shouldSample
_shouldRunMemoryTools
_shouldRunTaskInfo
_requiresRoot
_defaultsDomain
isAppleInternal
setDateFormat:
localeWithLocaleIdentifier:
setLocale:
stringFromDate:
stringWithFileSystemRepresentation:length:
stringByDeletingLastPathComponent
stringByDeletingPathExtension
stringByAppendingString:
stringByAppendingPathExtension:
fileURLWithPath:isDirectory:
URLByAppendingPathComponent:isDirectory:
path
hasPrefix:
substringFromIndex:
displayConsent
arrayWithCapacity:
_simplifiedPathForURL:
createBaseFolderAndLogFile
defaultTimeZone
name
startDiagnostic
timeIntervalSinceReferenceDate
removeItemAtURL:error:
numberWithInt:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
collectOutputOfCommand:label:filename:outputIsStderr:timeout:
collectOutputOfTask:label:filename:outputIsStderr:timeout:
URLByAppendingPathComponent:
regularExpressionWithPattern:options:error:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
rangeOfFirstMatchInString:options:range:
copyItemAtURL:toURL:error:
fileExistsAtPath:
fileURLWithPath:
collectFileAtURL:suffix:
collectFileAtPath:suffix:
collectFileAtPath:
processDetailPath:
collectOutputOfCommand:label:filename:
arrayWithObjects:count:
executeTool:onProcess:
isEqualToString:
stringByExpandingTildeInPath
runAsUser:
containsObject:
absoluteString
_removeResourceDataFromFaceCropChangeCPLSerializedRecords:
_removeShareURLFromScopes:
attributesOfItemAtPath:error:
fileSize
copyDatabaseFromPath:toPath:
collectDatabaseAtPath:libraryPath:subdirectory:
processes
appendFormat:
enumerateKeysAndObjectsUsingBlock:
sampleProcess:
executeMemoryToolsOnProcess:
addInfoToLog:
getStatusForComponents:completionHandler:
writeToURL:atomically:encoding:error:
_plphotoctl:filepath:
collectOutputOfCommand:label:filename:timeout:
allKeys
compare:
sortedArrayUsingSelector:
collectSysdiagnose:
sampleProcesses
collectTaskInfo
signalProcesses
collectCloudPhotodStatus
collectPhotoAnalysisDiagnostics
collectDefaults
collectFiles
collectDuetInfo
collectDiagnosticLogs
collectLocalLibraryMetadataInfo
collectFileListingAtPath:label:filename:extendedDetail:
collectOutputOfCommandAndArguments:label:filename:outputIsStderr:timeout:
collectFilesMatching:inFolder:
collectDiagnosticLog:
collectMbfloagentPhotosLibraryUpgradeLog
_annotation
_outputFolder
_outputFile
_diagnosticLog
host
_isRoot
_optionalTimeOut
_skipDBCopy
_skipBigDBCopy
_skipLibraryPreprocessing
incompleteTasks
_databasesWithPIIData
_hasFullShellCommands
_skipSysdiagnose
_noAutoSuffix
_displayConsent
initWithBytesNoCopy:length:freeWhenDone:
propertyListWithData:options:format:error:
objectForKeyedSubscript:
removeObjectForKey:
outputStreamToBuffer:capacity:
open
writePropertyList:toStream:format:options:error:
close
cpl_safeUnarchiveObjectWithData:class:
momentShare
shareURL
cpl_redactedShareURL
setShareURL:
previewData
setPreviewData:
cpl_archivedDataWithRootObject:
getBytes:range:
initWithBytesNoCopy:length:encoding:freeWhenDone:
runDiagnoseWithLibraryURL:outputDirectoryURL:includeDatabases:includeSysdiagnose:replyHandler:
diagnosticFilename:
initFileURLWithPath:isDirectory:
releasePowerAssertion:
notifyClientsStateChangedOnQueue
takeUserIdlePowerAssertionWithInterval:
moveItemAtURL:toURL:error:
remoteObjectProxy
diagnosticServiceStateDidChange:outputURL:error:
valueForEntitlement:
boolValue
UUID
UUIDString
checkStateWithReplyHandler:
runDiagnoseIncludeDatabases:includeSysdiagnose:replyHandler:
setExportedInterface:
setExportedObject:
setUserInfo:
didInvalidateClientConnectionWithIdentifier:
setInvalidationHandler:
applicationIdentifierForConnection:
initWithPattern:options:error:
matchesInString:options:range:
numberOfRanges
rangeAtIndex:
listener:shouldAcceptNewConnection:
_state
_diagnosticFileURL
_error
_queue
_clientsByIdentifier
serviceListener
v4@?0
-[CPLTask exec]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudPhotoLibrary_Sim/CloudPhotoLibrary-3442.0.150/Tools/cplctl-support/CPLTask.m
self.argv.count > 0
 === Aborted by user
com.apple.cplctl.task
v8@?0r*4
argv
T@"NSArray",&,N,V_argv
redirectStdoutToFileAtPath
T@"NSString",&,N,V_redirectStdoutToFileAtPath
redirectStdoutToFileDescriptor
Ti,N,V_redirectStdoutToFileDescriptor
redirectStderrToFileAtPath
T@"NSString",&,N,V_redirectStderrToFileAtPath
redirectStderrToFileDescriptor
Ti,N,V_redirectStderrToFileDescriptor
canTimeout
TB,N,V_canTimeout
cleanupEmptyFiles
TB,N,V_cleanupEmptyFiles
waitStatus
Ti,R,N,V_waitStatus
cplctl.task
%@ not supported for %@: use initWithLibraryURL:targetUserIdentifier:
com.apple.photoanalysisd
PHPhotoAnalysisOptionPhotoLibraryURLKey
v8@?0@"NSError"4
Error creating archive at path %@ %d
No filename!
archive_entry_new() failed!
failed to write header for file, %s, status, %d, reason: %s
Error opening file %@:%s (%d)
Error writing file %@: request to write %ld bytes but wrote %ld bytes
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudPhotoLibrary_Sim/CloudPhotoLibrary-3442.0.150/Tools/cplctl/CPLCTLCommand.m
+[%@ %@] called twice
+[%@ %@] has not been set yet
help
Invalid command '%@'
Command %@ is already registered (for %@)
TERM
ansi
color
%zd;
[0;0H
    
+[%@ %@] should be overriden
Invalid parameters for %@
%@ is not implemented yet.
Timed out opening library manager
[force closing library manager after it took %.1f seconds to finally open]
[force closing of library manager took %.2f seconds]
[force closing of library manager took %.2f seconds and it failed miserably with error: %@]
[force closing library manager after it took %.1f seconds to finally open and it failed miserably with error: %@]
Can't get access to daemon's library manager: %@
--version
%@ (%@)
%s %s
--help
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
isATTY
TB,R,N,V_isATTY
supportsEscapeSequences
TB,R,N,V_supportsEscapeSequences
usesColor
TB,R,N,V_usesColor
commandVersion
T@"NSString",R,N
[%d%c
cplctl
get some help.
[<command>]
[<command>]
get help on a specific command.
%@ can only take one argument
Usage: %@ %@ %@
Usage: %@ %@
%@ %@
<subcommand> [subcommand-options and arguments]
<command> [command-options and arguments]
%@ %@
Available %s:
subcommands
commands
Try %@ %@ %@ <subcommand> to get help on a specific subcommand.
Try %@ %@ <command> to get help on a specific command.
Unknown command '%@'
helpCommandName
T@"NSString",C,N,V_helpCommandName
standaloneTool
TB,N,GisStandaloneTool,V_standaloneTool
shouldSignal
TB,N,V_shouldSignal
shouldSample
TB,N,V_shouldSample
shouldRunMemoryTools
TB,N,V_shouldRunMemoryTools
shouldRunTaskInfo
TB,N,V_shouldRunTaskInfo
requiresRoot
TB,N,V_requiresRoot
defaultsDomain
T@"NSString",&,N,V_defaultsDomain
diagnose
gather diagnostics on cpl.
 [-c]
[-o <outputfile>] [-s] [-S] [-t] [-d|-D] [-a <annotation>]%@%@
Do not display consent prompt
-o <outputfile>
save diagnostic to a specific file.
skip appending auto suffix to specified diagnostic file.
skip sysdiagnose phase.
time-out long operations.
run library preprocessing
-d/-D
skip database copying. (-d for databases bigger than %d MB, -D always)
-a <annotation>
annotate output file name (e.g. downloader), ignored if -o used.%@%@
InternalBuild
yyyyMMdd-HHmmss
en_US
o:tdDa:LcsSP
%@%@-T%@
cpldiagnostics
%@%@-%s%s%s-T%@
CPL-diagnostics
-root
-limited
/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs/photos
/var/mobile/Library/Logs/
.../%@
********************************  WARNING  ************************************
  You need to run this tool as root in order to collect the new-style of logs.
                   Please run this tool again as root.
*******************************************************************************
Will gather diagnostics in %@
Starting%@ diagnostic - Installed CPL is %@
 limited
Date: %@ (%@)
- Waiting for unfinished tasks if necessary
  Some diagnostic tasks did not finish!
(TOTAL elapsed time minus archiving:: %.2fs)
Incomplete Tasks:
   %@
- Archiving %@ to %@
  elapsed time: %.2fs
  Failed
- Removing %@
  Failed: %@
Changing owner of archive to mobile
mobile
  Failed: %s
  Succeeded
Diagnostic is available at %@
Enjoy.
(TOTAL elapsed time: %.2fs)
Can't create %@: %@
diagnostic.log
Can't create diagnostic log at %@: %s
com.apple.Photos
Press 'Enter' to continue. Ctrl+\ to cancel.
ProcessDetail
- %@
  %c %s
--- Beginning ---
--- End ---
  failed
  took too long. %@ might end up being incomplete
  took too long.
Timed out %@.
  %c recursive file listing of %s into %s
  failed: %@
  empty file removed
Invalid regular expression '%@': %@
- Collecting files matching '%@' in %@
    %@
    %@ - failed: %@
Failed collecting %@.
    (none)
- Collecting %@
- %@ does not exist
/var/mobile/Library/Logs/CrashReporter/DiagnosticLogs
%@-sample.txt
/usr/bin/sample %@ 1 -f %@
Sampling %@
cloudd
nsurlsessiond
dasd
accountsd
mediaanalysisd
photoanalysisd
coreduetd
cloudphotod
com.apple.cloudphotod
assetsd
com.apple.assetsd
MobileSlideShow
com.apple.mobileslideshow
Camera
com.apple.camera
mstreamd
nebulad
mediaserverd
CloudPhotoDerivativeGenerator
leaks
Getting %@ for %@
memgraph
 --forkCorpse --outputGraph=%@
%@-%@.txt
/usr/bin/%@%@ %@
/var/mobile/Media/PhotoData/Caches/changes
~/Library/Logs/photoslibraryupgrade.log
Logs-mbfloagent
filterCPLSerializedRecord
update clientCache set serializedRecord = filterCPLSerializedRecord(serializedRecord) where class='CPLFaceCropChange'
update pullQueue set serializedRecord = filterCPLSerializedRecord(serializedRecord) where class='CPLFaceCropChange'
update transientPullRepository set serializedRecord = filterCPLSerializedRecord(serializedRecord) where class='CPLFaceCropChange'
update cloudCache set serializedRecord = filterCPLSerializedRecord(serializedRecord), stagedSerializedRecord = filterCPLSerializedRecord(stagedSerializedRecord) where class='CPLFaceCropChange'
error creating filterCPLSerializedRecord function to remove CPL storage: remove all CPLFaceCropChange records
update clientCache set serializedRecord = '' where class='CPLFaceCropChange'
update cloudCache set serializedRecord = null, stagedSerializedRecord = null where class='CPLFaceCropChange'
update transientPullRepository set serializedRecord = '' where class='CPLFaceCropChange'
update pullQueue set serializedRecord = '' where class='CPLFaceCropChange'
filterLibraryInfo
update scopes set libraryInfo = filterLibraryInfo(libraryInfo)
error creating filterShareURL function to remove CPL storage: remove shareURL from scopes
update scopes set libraryInfo = null
filterMomentShareURL
update ZMOMENTSHARE set ZSHAREURL = filterMomentShareURL(ZSHAREURL), ZPREVIEWDATA = null
error creating filterMomentShare function to remove Photos storage: remove shareURL from MomentShare
update ZMOMENTSHARE set ZSHAREURL = null, ZPREVIEWDATA = null
?readonly_shm=1
couldn't open source database readonly, trying read/write mode
Failed to open src db %@: sqlite error %d
Failed to open dst db %@: sqlite error %d
Failed to replace %@ with %@: sqlite error %d
  remove PII image data and obfuscate share URLs from %@
update ZFACECROP set ZRESOURCEDATA = null
pragma journal_mode=delete
pragma vacuum
Skipped collecting %@.
- Skipping: The size of the database at %@ is bigger than the maximum allowed in this mode (%.0d MB): (%.0llu MB) 
- Collecting database (%.0llu MB) %@
/var/mobile/Media/PhotoData/CPL/mobileCPL.plist
/var/mobile/Media/PhotoData/CPL/
initialsync_marker
/var/mobile/Media/PhotoData/CPL/cpl-upgrade-events.log
/var/mobile/Media/PhotoData/CPL/cloudphotos-1.0.plist
/var/mobile/Media/PhotoData/CPL/syncstatus.plist
/var/mobile/Media/PhotoData/CPL/resetevents.plist
/var/mobile/Media/PhotoData/Caches/VisionService
/var/mobile/Media/PhotoData/AlbumsMetadata
/var/mobile/Media/PhotoData/Caches/restoreContext.plist
/var/mobile/Media/PhotoData/Caches/datamigratorfinished
/var/mobile/Media/PhotoData/Caches/PLDataMigrationInfo.plist
/var/mobile/Media/PhotoData/Caches/GraphService/PhotoAnalysisServicePreferences.plist
/var/mobile/Media/PhotoData/Caches/search/searchMetadata.plist
/var/mobile/Media/PhotoData/Caches/search/searchSystemInfo.plist
/var/mobile/Media/PhotoData/Caches/search/searchProgress.plist
/var/mobile/Media/PhotoData/CPL/storage/store.cloudphotodb
/var/mobile/Media/PhotoData/Photos.sqlite
/var/mobile/Media/PhotoData/Photos.sqlite.aside
/var/mobile/Media/PhotoData/Caches/search/psi.sqlite
- Could not determine location of client plist and CPL db
v16@?0@"NSString"4@"CPLProcessSpecification"8^B12
/usr/bin/killall -INFO%@
Sending SIGINFO to%@
- Can't sample root processes as %@ is not run with root permissions
/usr/bin/defaults read /var/mobile/Library/Preferences/%@.plist
Getting defaults for %@
%@-defaults.txt
- Collecting %@ status
Collecting CPL diagnostics in %@
v12@?0@"NSString"4@"NSError"8
  took too long
cplstatus.txt
  failed to contact %@: %@
/var/mobile/Media/PhotoData
- Collecting photoanalysis status
v12@?0@"NSDictionary"4@"NSError"8
  took too long (more than %ld seconds)
photoanalysis_status.txt
- Collecting memories diagnostics
/usr/local/bin/cdattrhist2 -name com.apple.coreduet.attribute.screenLock -t i -q
Getting screen lock/unlock events
screenlocks.txt
/usr/local/bin/cdattrhist2 -name com.apple.coreduet.attribute.sleepWake -t i -q
Getting sleep/wake events
sleepwake.txt
/usr/local/bin/plphotosctl %@ '%@'
allmomentsmetadata
all_moments_details.plist
Dumping all moments metadata
/usr/local/bin/plphotosctl printchangestore
Getting the changestore
changestore.txt
/usr/local/bin/plphotosctl listnonsharedphotouuids
Getting local photo GUIDs
local_photo_guids.txt
/usr/local/bin/plphotosctl hascompletedrestore
Getting assetsd restoring state
/usr/local/bin/plphotosctl incompleterestoreprocesses
Getting assetsd incomplete restore processes
/usr/local/bin/plphotosctl listincomplete
Getting assetsd incomplete list
incompletelist.txt
/usr/local/bin/plphotosctl getcplstate
Getting cpl state
cplstate.txt
/usr/bin/taskinfo --threads %@
Gathering taskinfo on %@
%@-taskinfo.txt
Diagnostics for %s
============================
  %@:
/usr/local/bin/ckctl dump
Dumping CloudKit state
ckctl_dump.txt
/usr/local/bin/plphotosctl listcloudphotoguids
Getting local photo cloudGUIDs
local_photo_cloud_guids.txt
/usr/local/bin/plphotosctl librarysummary
Getting local library summary
local_asset_counts.txt
/usr/local/bin/plphotosctl printmoments
Getting Moments info
moments.txt
/usr/local/bin/backupctl restoreInfo
Getting backupd restore info
/usr/local/bin/backupctl listFailures
Getting backupd failures
/usr/local/bin/ckctl -v prod -c com.apple.photos.cloud -x deviceID
Collecting deviceID
deviceID.txt
/var/mobile/Media/DCIM
Getting DCIM contents
DCIM_contents.txt
Getting PhotoData contents
PhotoData_contents.txt
/var/mobile/Media/Photos
Getting Photos contents
Photos_contents.txt
/var/mobile/Media/PhotoStreamsData
Getting PhotoStreamsData contents
PhotoStreamsData_contents.txt
- Wait for sysdiagnose
Error opening recursive listing file for writing.
i12@?0r^^{_ftsent}4r^^{_ftsent}8
Error opening path to find recursive listing.
ERROR %s: directory causes a cycle
ERROR %s: %s
%lld
%s/%s
%FT%T
 %*d %-*u  %-*u  %*lld %s.%03ld 
ERROR ls: %s: %s
 -> 
com.apple.quarantine
%*jd 
allow
deny
unknown
 %d: %s%s %s 
 inherited
%s%s
malloc
read
list
write
add_file
execute
search
delete
append
add_subdirectory
delete_child
readattr
writeattr
readextattr
writeextattr
readsecurity
writesecurity
chown
file_inherit
directory_inherit
limit_inherit
only_inherit
com.apple.private.Photos.CPLDiagnose
CPLDiagnose.queue
%Y%m%d-%H%M%S
%@-T%s%@.tgz
Diagnostic request failed
Diagnose already in progress
running diagnose
Error running Photos Diagnostic.
v16@?0@"NSString"4@"NSXPCConnection"8^B12
connectionIdentifier
anonymous
[0-9,A-Z]{10}\.(.*)
application-identifier
com.apple.
PreventUserIdleSystemSleep
PhotosDiagnostics gathering diagnostics
TimeoutActionTurnOff
Unable to initialize the file actions properly (%s).
Unable to redirect stdin (%s).
Unable to redirect stderr (%s).
Unable to perform spawn action (%s).
Unable to retreive handler for SIGINT.
Unable to spawn a new process (%s).
Unable to detroy the file actions properly (%s).
+[%@ %@] called twice
+[%@ %@] has not been set yet
Command %@ is already registered (for %@)
Error trying to open daemon's library manager: %@
Error closing daemon's library manager: %@
Hello from %@
starting cpldiagnose
error: %@
finished cpldiagnose
validated connection
connection validation error for %@
removing connection %@
Invalid value of "%{public}@" for entitlement "%{public}@". We expect TEAMID.BUNDLEID, and insist that TEAMID is exactly 10 characters long, consisting of [0-9][A-Z].
failed to take power assertion: %d
taking power assertion for %.0fsec
release power assertion
starting %@
CPLTask
PhotoAnalysisDiagnosticClient
CPLCTLPhotoAnalysisClient
CPLDiagnoseArchive
CPLCTLCommand
CPLLibraryManagerDelegate
NSObject
CPLHelpCommand
CPLProcessSpecification
CPLDiagnoseCommand
CPLDiagnoseServiceProtocol
CPLDiagnoseServiceClientProtocol
CPLDiagnoseService
NSXPCListenerDelegate
v12@0:4@8
B8@0:4
@12@0:4@8
@8@0:4
i8@0:4
v8@0:4
v12@0:4i8
v12@0:4B8
@"NSArray"
@"NSString"
@"NSObject<OS_dispatch_queue>"
v16@0:4@8@?12
v16@0:4@"NSDictionary"8@?<v@?@"NSString"@"NSError">12
v16@0:4@"NSDictionary"8@?<v@?@"NSDictionary"@"NSError">12
@16@0:4@8I12
v12@0:4@?8
@"NSDictionary"
@"NSXPCConnection"
@16@0:4@8B12
i16@0:4@8@12
^{archive=}
@16@0:4i8^*12
#12@0:4@8
v12@0:4#8
i20@0:4@8i12^*16
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v12@0:4@"CPLLibraryManager"8
@"NSString"12@0:4@"CPLLibraryManager"8
v16@0:4@8*12
L24@0:4[256c]8i12i16i20
v20@0:4i8i12i16
v12@0:4I8
v16@0:4r*8L12
v12@0:4r*8
B16@0:4i8^*12
@12@0:4^@8
@16@0:4I8^@12
v20@0:4@8@12@16
v16@0:4#8@12
v16@0:4@8@12
@28@0:4B8B12B16B20B24
B20@0:4@8@12@16
B24@0:4@8@12@16B20
B28@0:4@8@12@16B20B24
v24@0:4@8@12@16B20
v12@0:4^{sqlite3=}8
@16@0:4@8@12
@"NSURL"
^{__sFILE=*iiss{__sbuf=*i}i^v^?^?^?^?{__sbuf=*i}^{__sFILEX}i[3C][1C]{__sbuf=*i}iq}
[255c]
@"NSMutableArray"
v20@0:4B8B12@?16
v28@0:4@8@12B16B20@?24
v12@0:4@?<v@?c>8
v20@0:4B8B12@?<v@?B@"NSURL"@"NSError">16
v28@0:4@"NSURL"8@"NSURL"12B16B20@?<v@?B@"NSURL"@"NSError">24
v20@0:4c8@12@16
v20@0:4c8@"NSURL"12@"NSError"16
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
@12@0:4B8
I16@0:4d8
@"NSError"
@"NSMutableDictionary"
@(#)PROGRAM:com.apple.Photos.CPLDiagnose  PROJECT:CloudPhotoLibrary-3442.0.150
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>AAPLPHOTOS.com.apple.Photos.CPLDiagnose</string>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.cloudphotod.access</key>
<string>management</string>
<key>com.apple.private.photoanalysisd.access</key>
<true/>
<key>com.apple.private.sysdiagnose</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServicePhotos</string>
</array>
<key>com.apple.private.xpc.role-account</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.PowerManagement.control</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>CPLDiagnose</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
