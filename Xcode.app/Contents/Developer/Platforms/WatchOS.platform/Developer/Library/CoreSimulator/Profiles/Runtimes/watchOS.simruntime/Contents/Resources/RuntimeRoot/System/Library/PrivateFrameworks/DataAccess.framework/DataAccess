DAAccountVersion2
DAAccountHost
DAAccountPort
DAAccountPrincipalPath
DAAccountUseSSL
DAAccountEmailAddress
ACUIDisplayUsername
DASigningIdentityPersistentReference
DAEncryptionIdentityPersistentReference
DAAccountDidAutodiscover
DAExchangeOAuthSupportedKey
DAExchangeOAuthURI
DAExchangeOAuthTokenRequestURI
DAEASEndPointFQDN
DAIdentityPersist
DAIdentityPersistIsManagedByProfile
DATrustSettingsExceptions
DAAccountValidationDomain
 DAAccountFolderHierarchyChangedNotification
DAAccountFolderContentsChangedNotification
DAAccountFolderHierarchyNeedsUpdateNotification
DAAccountFolderHierarchyNeedsUpdateRequireChangedFoldersNotification
DAAccountFolderUpdatedWithNoChangesNotification
DAAccountPushedFolderPreferencesChangedNotification
DAOldKeychainURLs
DAAcountWasUpgradedFromLegacyAccount
kDAAccountIdentifiersToIgnoreForUniquenessCheck
DAAccountDoNotSaveReason
DAAccountUseTrustedSSLCertificate
DAAccountPersistentUUID
DAAccountConfigurationTag
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/DAAccount.m
<Unknown File>
We shouldn't be resetting our account id, ever
com.apple.dataaccessd-%@
AccountID: %@ ("%@")
Stats %@
No Task Manager initted yet
https
http
v4@?0
v12@?0@"ACAccount"4@"NSError"8
%s MUST be implemented in ALL DAAccount subclasses.  Looks like it's missing in %@
Y=%@; T=%@
Cookie
Valid
InValid
v12@?0B4@"NSError"8
v12@?0i4@"NSError"8
com.apple.dataaccess.StorageSessionSetup
com.apple.dataaccessd.%@
%@: accountID %@ persistentUUID %@
dataclassPropertyURLsByDataclass
T@"NSMutableDictionary",&,N,V_dataclassPropertyURLsByDataclass
statusReport
T@"DAStatusReport",&,N,V_statusReport
trustHandler
T@"DATrustHandler",&,N,V_trustHandler
shouldUseOpportunisticSockets
TB,N,V_shouldUseOpportunisticSockets
wasUserInitiated
TB,N,V_wasUserInitiated
pendingQueries
T@"NSMutableArray",&,N,V_pendingQueries
pendingQueryQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pendingQueryQueue
lastQueryStartedTime
TQ,N,V_lastQueryStartedTime
accountID
T@"NSString",R,N
daAccountVersion
Ti,N,SsetDAAccountVersion:
persistentUUID
T@"NSString",R,C,N
accountDescription
T@"NSString",C,N
username
user
host
port
Ti,N
password
useSSL
TB,N
enabledDataclassesBitmask
Ti,R,N
isChildAccount
TB,R,N
backingAccountInfo
T@"ACAccount",R,N,V_backingAccountInfo
taskManager
T@"DATaskManager",R,N,V_taskManager
changeTrackingID
keychainAccessibilityType
scheduleIdentifier
signingIdentityPersistentReference
T@"NSData",&,N
encryptionIdentityPersistentReference
shouldDoInitialAutodiscovery
shouldAutodiscoverAccountProperties
scheme
principalURL
T@"NSURL",C,N
principalPath
clientToken
emailAddress
emailAddresses
T@"NSArray",C,N
appIdsForPasswordPrompt
T@"NSArray",R,N,V_appIdsForPasswordPrompt
shouldFailAllTasks
TB,R,N,V_shouldFailAllTasks
identityPersist
T@"NSData",R,C,N
isValidating
TB,N,V_isValidating
userAgentHeader
serverComplianceClasses
T@"NSSet",R,N
serverRoot
sourceApplicationBundleIdentifier
T@"NSString",C,N,V_sourceApplicationBundleIdentifier
Account class %@ MUST implement %s
Calendar
Event
Reminder
Alarm
Recurrence
Store
Attendee
Organizer
EventAction
ExceptionDate
Attachment
Category
CategoryLink
Location
Sharee
InviteReply
ResourceChangeNotification
ResourceChange
Participant
CalendarItem
Notification
SuggestionNotification
SuggestedEventInfo
Contact
Undefined
Unknown
calEventChangeId
Ti,N,V_calEventChangeId
calRecurrenceChangeId
Ti,N,V_calRecurrenceChangeId
calAlarmChangeId
Ti,N,V_calAlarmChangeId
calAttendeeChangeId
Ti,N,V_calAttendeeChangeId
highestSequenceNumber
Ti,N,V_highestSequenceNumber
com.apple.dataaccess.DATransactionMonitorQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/DATransactionMonitor.m
Transaction count becomes negative, %d
transactionCount
Ti,N,V_transactionCount
transactions
T@"NSMutableArray",&,N,V_transactions
transactionMonitorDelegate
T@"<DATransactionMonitorDelegate>",W,N,V_transactionMonitorDelegate
abPersonChangeId
Ti,N,V_abPersonChangeId
abGroupChangeId
Ti,N,V_abGroupChangeId
DAReListenForAccounts
DAFrameworkName
DAAccountInfo
ACAccountType
ACParentAccountType
DAAccountClass
DAClientAccountClass
DADaemonAccountClass
DAAgentClass
DAAgentClassBundle
bundle
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/DAAccountLoader.m
Could not find the frameworks directory for bundle %@
AccountInfo.plist
Could not come up with an agent class (name %@) for account %@ parent account %@
Could not come up with an agent class (name %@) for account %@
acAccountTypeToAccountFrameworkSubpath
T@"NSMutableDictionary",&,N,V_acAccountTypeToAccountFrameworkSubpath
acAccountTypeToAccountDaemonBundleSubpath
T@"NSMutableDictionary",&,N,V_acAccountTypeToAccountDaemonBundleSubpath
acAccountTypeToClassNames
T@"NSMutableDictionary",&,N,V_acAccountTypeToClassNames
acParentAccountTypeToChildAccountTypes
T@"NSMutableDictionary",&,N,V_acParentAccountTypeToChildAccountTypes
<%@:
AccountClassName=%@
ClientAccountClassName=%@
DaemonAccountClassName=%@
AgentClassName=%@
accountClassName
T@"NSString",&,N,V_accountClassName
clientAccountClassName
T@"NSString",&,N,V_clientAccountClassName
daemonAccountClassName
T@"NSString",&,N,V_daemonAccountClassName
agentClassName
T@"NSString",&,N,V_agentClassName
modify
remove
fetch
preserve
move
belay-move
soft-delete
pseudo-delete
unknown
<%@: %p> { Change type: %@, ChangedItem: %@ serverId: %@%@}
, Change id: %d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/DAAction.m
Who does non-keyed coding nowadays?
DAAItemChangeType
DAAChangedItem
DAAServerId
DAAInstanceId
DAAChangeId
itemChangeType
TI,N,V_itemChangeType
serverId
T@,&,N,V_serverId
instanceId
T@,&,N,V_instanceId
changedItem
T@,&,N,S_setChangedItem:,V_changedItem
changeId
Ti,N,V_changeId
forwardedAttendees
T@,&,N,V_forwardedAttendees
forwardedAttendeeUUIDs
T@,&,N,V_forwardedAttendeeUUIDs
DAASourceContainerId
DAASourceServerId
DAADestinationContainerId
sourceContainerId
T@"NSString",&,N,V_sourceContainerId
sourceServerId
T@"NSString",&,N,V_sourceServerId
destinationContainerId
T@"NSString",&,N,V_destinationContainerId
DARStatus
status
Ti,N,V_status
 folderID = %@, name = %@, _parentFolderID %@, _dataclass %ld, _isDefault %@
hasRemoteChanges
TB,N,V_hasRemoteChanges
folderName
T@"NSString",C,N,V_folderName
folderID
T@"NSString",C,N,V_folderID
parentFolderID
T@"NSString",C,N,V_parentFolderID
dataclass
Ti,N,V_dataclass
isDefault
TB,N,V_isDefault
com.apple.dataaccess.accountmonitor
accounts
T@"NSHashTable",&,N,V_accounts
accountsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_accountsQueue
DataAccess-
unit-test
v16@?0@"NSURLProtectionSpace"4@"NSDictionary"8^B12
%@?%@
?@/|:
%@:%@@
Password 
Login 
Host 
Scheme 
requestType
Ti,N,V_requestType
bodyFormat
Ti,N,V_bodyFormat
messageID
T@"NSString",C,N,V_messageID
%llu
%llu
%@ messageID "%@", onFlags %llu, offFlags %llu
onFlags
TQ,N,V_onFlags
offFlags
TQ,N,V_offFlags
%@ maxSize %d, bodyFormat %d
maxSize
Ti,N,V_maxSize
%@ messageID "%@"
%@ messageID "%@", maxSize %d, bodyFormat %d
%@ longID "%@", maxSize %d, bodyFormat %d
longID
T@"NSString",C,N,V_longID
serverID
T@"NSString",C,N,V_serverID
%@ message "%@", fromFolder "%@", toFolder "%@"
message
T@"NSString",C,N,V_message
fromFolder
T@"NSString",C,N,V_fromFolder
toFolder
T@"NSString",C,N,V_toFolder
context
T@,&,N,V_context
%@ messageID "%@", attachmentName "%@"
attachmentName
T@"NSString",C,N,V_attachmentName
%@ subject "%@"
T@"DAMailMessage",&,N,V_message
send
TB,N,V_send
%@ status %d, sourceID "%@", destID "%@", origRequest (%@)
sourceID
T@"NSString",C,N,V_sourceID
destID
T@"NSString",C,N,V_destID
origRequest
T@"DAMessageMoveRequest",&,N,V_origRequest
%@ emailAddresses %@
T@"NSArray",&,N,V_emailAddresses
retrieveCertificates
TB,N,V_retrieveCertificates
retrieveAvailablilty
TB,N,V_retrieveAvailablilty
startTime
T@"NSDate",&,N,V_startTime
endTime
T@"NSDate",&,N,V_endTime
%@ status %ld
 email->certs 
status %ld 
(null)
 email->certs status %ld 
%@: 
<cert data length %ld hash %ld> 
 email->availability 
 email->availability status %ld 
certificatesStatus
Ti,N,V_certificatesStatus
mResolvedEmailToX509Certs
T@"NSMutableDictionary",&,N,V_mResolvedEmailToX509Certs
availabilityStatus
Ti,N,V_availabilityStatus
mergedFreeBusy
T@"NSString",&,N,V_mergedFreeBusy
resolvedEmailToX509Certs
T@"NSDictionary",R,N
%a, %d %b %Y %H:%M:%S %z
com.apple.dataaccess.queryqueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/ActiveSync/Utilities/DAConvertCRtoCRLFStream.m
sanity check for stream data
should be able to make run loop source
expected LF, but got 0x%x instead
DASyncStart
DASyncEnd
DACalendarItemsDownloaded
DACalendarItemsUploaded
AccountID
AccountClass
AccountName
NumberOfItemsChanged
ContainerID
NSString *acDataclassForDADataclass(DASingleDataclass)
com.apple.dataaccess.statusreport
@"NSMutableArray"4@?0
v12@?0@"NSArray"4@"NSError"8
v12@?0@"ACAccountType"4@"NSError"8
int flockWithProcessAssertion(int, BOOL, NSString *__strong)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/DAUtils.m
You can't flock a flocked file.  No ref counting for you
com.apple.dataaccess.unknown
0123456789ABCDEF
0123456789abcdef
CFBundleVersion
iOS/%@ (%@) %@/%@
DeviceClass
ProductType
com.apple.MobileAddressBook
com.apple.mobilephone
com.apple.mobilecal
com.apple.reminders
com.apple.mobilenotes
com.apple.mobilemail
com.apple.mobilesafari
@?/:
%%0.%lud
%@://%@%@%@%@%@
%@://%@
%@://%@%@
%@://%@:%u%@
%@://%@/
%@://%@:%u/
DADiagnosticsEnabled
NSDetailedErrors
NSDetailedErrors: 
Library/DataAccess/DeviceSpecificInfo.plist
com.apple.dataaccess.deviceid
DAGlobalDeviceSpecificIdentifier
iPhone Simulator
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/DATaskManager.m
There are queued exclusive tasks remaining during dealloc
There is an active exclusive task remaining during dealloc
There are independent tasks remaining during dealloc
There are held independent tasks remaining during dealloc
There are modal-held independent tasks remaining during dealloc
There are queued tasks remaining during dealloc
There is an active queued task remaining during dealloc
There is a modal-held active queued task remaining during dealloc
Apple-%@/%@
Out of bounds state
DATaskManager %@ state:%@
Active exclusive task: %@
Queued exclusive tasks: %@
Independent tasks: %@
Held independent tasks: %@
Modal-held independent tasks: %@
Active queued task: %@
Queued tasks: %@
Active modal task: %@
Queued modal tasks: %@
Associated with account: %@
Finished task is not being managed, so cannot be active modal task.
Finished task is not being managed, so cannot be in modal queue.
A nil task requested modal?
Cannot request modal behavior during shutdown
Only the active exclusive task can go modal immediately
Out of bounds state.
taskEndModal can only be called in Run Modal state, not %d
Only the active modal task can end modal behavior.
Cannot handle _startModal: in Shutdown state
Cannot have active queued task and active exclusive task at the same time.
Cannot have running independent tasks and an active exclusive task at the same time.
Cannot have active queued task and a modal task at the same time.
Cannot have running independent tasks and a modal task at the same time.
Cannot have active exclusive task in Nominal state.
Cannot have modal task in Nominal state.
We shouldn't be holding independent tasks in Nominal state
We shouldn't have queued exclusive tasks in Nominal state
We shouldn't have any independent tasks that are modal in Nominal state
Cannot have active exclusive task in Hold for Exclusive state.
Should not have any modal task active in Hold for Exclusive state
Should have at least one queued exclusive task in Hold for Exclusive state
Cannot have running independent tasks in Run Exclusive state.
Cannot have active queued task in Run Exclusive state.
Cannot have active modal task in Hold for Modal state.
Should have at least one queued modal task in Hold for Modal state.
Should not be running other independent tasks in Run Modal state.
Should not be running other queued task in Run Modal state.
Only the exclusive task can currently go modal.
queuedExclusiveTasks
T@"NSMutableArray",&,N,V_queuedExclusiveTasks
activeExclusiveTask
T@"<DATask>",&,N,V_activeExclusiveTask
independentTasks
T@"NSMutableSet",&,N,V_independentTasks
heldIndependentTasks
T@"NSMutableSet",&,N,V_heldIndependentTasks
modalHeldIndependentTasks
T@"NSMutableSet",&,N,V_modalHeldIndependentTasks
mQueuedTasks
T@"NSMutableArray",&,N,V_mQueuedTasks
modalHeldActiveQueuedTask
T@"<DATask>",&,N,V_modalHeldActiveQueuedTask
activeQueuedTask
T@"<DATask>",&,N,V_activeQueuedTask
queuedModalTasks
T@"NSMutableArray",&,N,V_queuedModalTasks
activeModalTask
T@"<DATask>",&,N,V_activeModalTask
state
Ti,N,V_state
managerIdleTimer
T@"NSTimer",&,N,V_managerIdleTimer
userInitiatedSyncTimer
T@"NSTimer",&,N,V_userInitiatedSyncTimer
xpcTransactionTimer
T@"NSTimer",&,N,V_xpcTransactionTimer
account
T@"DAAccount",W,N,V_account
queuedTasks
T@"NSArray",R,N
allTasks
Nominal
Hold for Exclusive
Run Exclusive
Hold for Modal
Run Modal
Shutdown
Out of bounds
GenericDataAccessAccount
GenericDataAccessAccountWithLogging
Subscribed Calendars
com.apple.dataaccessd.changeinserter
com.apple.dataaccessd.abDBQueue
com.apple.dataaccessd.calDBQueue
com.apple.dataaccessd.bookmarkDBQueue
com.apple.dataaccessd.noteDBQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/DALocalDBHelper.m
You can't ask for an AddressBook db if you didn't open it.  Geez! %@
ClientIdentifier can not be nil
You can't ask for a cal db if you didn't open it.  Geez! %@
Client identifier is different. Expected "%@" but got "%@"
CalDBIsClosing
You can't ask for a note db if you didn't open it.  Geez! %@
abDB
T^v,N,V_abDB
abConnectionCount
Ti,N,V_abConnectionCount
calDB
T^{CalDatabase={__CFRuntimeBase=IAI}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=l[40c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=l[40c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}B@B},N,V_calDB
calConnectionCount
Ti,N,V_calConnectionCount
clientIdentifier
T@"NSString",&,N,V_clientIdentifier
bookmarkDB
T^v,N,V_bookmarkDB
bookmarkConnectionCount
Ti,N,V_bookmarkConnectionCount
noteDB
T@"NoteContext",&,N,V_noteDB
noteConnectionCount
Ti,N,V_noteConnectionCount
calUnitTestCallbackBlock
T@?,C,N,V_calUnitTestCallbackBlock
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/DAPowerAssertionManager.m
%s must have a non-nil context
%s must have a non-nil group identifier
Shared DAPowerAssertionManager object %@:
Contexts asserting power: %@
Contexts held aside: %@
Active Assertions: %@
com.apple.DataAccess:%d-%p
contexts
T@"NSCountedSet",&,N,V_contexts
groupIdentifierToContexts
T@"NSMapTable",&,N,V_groupIdentifierToContexts
contextToGroupIdentifier
T@"NSMapTable",&,N,V_contextToGroupIdentifier
heldAsideGroupIdentifiers
T@"NSMutableSet",&,N,V_heldAsideGroupIdentifiers
heldAsideContexts
T@"NSCountedSet",&,N,V_heldAsideContexts
contextToPowerAssertionRef
T@"NSMapTable",&,N,V_contextToPowerAssertionRef
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/ASAccountActor.m
Must be called on subclass: %s
ASConcreteAccountActor
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/DADataHandlers.m
Can't initialize a DADataHandler with a nil changeTrackingID
T@"NSString",C,N,V_changeTrackingID
container
T^v,N,V_container
@"EKEventStore"4@?0
isLocal
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/DALocalDBWatcher.m
Someone registered themselves for the AB notification more than once.  Why?  Bad guy %@
Someone registered themselves for the Cal notification more than once.  Why?  Bad guy %@
Someone registered themselves for the Bookmark notification more than once.  Why?  Bad guy %@
Someone registered themselves for the Note notification more than once.  Why?  Bad guy %@
_CalDatabaseChangedNotification
__ABDataBaseChangedByOtherProcessNotification
com.apple.bookmarks.dbchanged
NoteContextDarwinNotificationWithLoggedChanges
lastSavedABSequenceNumber
Ti,N,V_lastSavedABSequenceNumber
lastSavedCalSequenceNumber
Ti,N,V_lastSavedCalSequenceNumber
%@: waiter %@ wants dataclasses %lx
waiter
T@"<DADataclassLockWatcher>",&,N,V_waiter
completionHandler
T@?,C,N,V_completionHandler
dataclasses
Ti,N,V_dataclasses
waiterNum
Ti,R,N,V_waiterNum
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/DALocalDBGateKeeper.m
DALocalDBGateKeeper is shutting down, but the following account is still holding the dataclass lock for dataclass %lx.  Account %@
DALocalDBGateKeeper is shutting down, but the following accounts are still waiting on the dataclass lock for dataclass %lx.  Account %@
DALocalDBGateKeeper is shutting down, but the following accounts are still waiting on the dataclass lock for dataclass type %lx.  Account %@
Waiter %@ tried to relinquish a lock for data class %ld, but it was held by another waiter: %@
_contactsLockHolder %@
_contactsWaiters %@
_waiterIDsExpectingContactsLock %@
_eventsLockHolder %@
_eventsWaiters %@
_waiterIDsExpectingEventsLock %@
_notesLockHolder %@
_notesWaiters %@
_waiterIDsExpectingNotesLock %@
_bookmarksLockHolder %@
_bookmarksWaiters %@
_waiterIDsExpectingBookmarksLock %@
claimedOwnershipOfContacts
TB,N,V_claimedOwnershipOfContacts
contactsLockHolder
T@"<DADataclassLockWatcher>",&,N,V_contactsLockHolder
contactsWaiters
T@"NSMutableArray",&,N,V_contactsWaiters
waiterIDsExpectingContactsLock
T@"NSMutableSet",&,N,V_waiterIDsExpectingContactsLock
claimedOwnershipOfEvents
TB,N,V_claimedOwnershipOfEvents
eventsLockHolder
T@"<DADataclassLockWatcher>",&,N,V_eventsLockHolder
eventsWaiters
T@"NSMutableArray",&,N,V_eventsWaiters
waiterIDsExpectingEventsLock
T@"NSMutableSet",&,N,V_waiterIDsExpectingEventsLock
claimedOwnershipOfNotes
TB,N,V_claimedOwnershipOfNotes
notesLockHolder
T@"<DADataclassLockWatcher>",&,N,V_notesLockHolder
notesWaiters
T@"NSMutableArray",&,N,V_notesWaiters
waiterIDsExpectingNotesLock
T@"NSMutableSet",&,N,V_waiterIDsExpectingNotesLock
claimedOwnershipOfBookmarks
TB,N,V_claimedOwnershipOfBookmarks
bookmarksLockHolder
T@"<DADataclassLockWatcher>",&,N,V_bookmarksLockHolder
bookmarksWaiters
T@"NSMutableArray",&,N,V_bookmarksWaiters
waiterIDsExpectingBookmarksLock
T@"NSMutableSet",&,N,V_waiterIDsExpectingBookmarksLock
unitTestHackRunLoopMode
T@"NSString",&,N,V_unitTestHackRunLoopMode
transactionId
T@"NSString",R,N,V_transactionId
v8@?0@"NSObject<OS_xpc_object>"4
com.apple.dataaccess.ExchangeOAuthCount
com.apple.dataaccess.dataaccessd.dailyaggd
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/DAUserNotificationUtilities.m
Must have a notification
Must have a block here
Already waiting on this notification %p
groupIdentifier
T@"NSString",C,N,V_groupIdentifier
com.apple.dataaccess.dataaccessd
kDAMigrationBuildVersionKey
BuildVersion
.me.com
.icloud.com
v12@?0@4^B8
v8@?0i4
com.apple.dataaccess.trustChallengeQueue
Not 
v8@?0B4
delegate
T@"<DATrustHandlerDelegate>",W,N,V_delegate
haveWarnedAboutCertDict
T@"NSMutableDictionary",&,N,V_haveWarnedAboutCertDict
com.apple.dataaccess.DATrafficQueue
^{__CFString=}40@?0i4^{__CFDate=}8^{__CFString=}12^{__CFString=}16r*20r*24L28^v32^{__CFString=}36
DALogLevel
filename
T@"NSString",&,N,V_filename
SBLockStateChanged
refreshDataclasses
Ti,N,V_refreshDataclasses
UIDataclasses
Ti,N,V_UIDataclasses
v16@?0@"NSString"4@"NSNumber"8^B12
com.apple.dataaccessd.sblockqueue
------
DAPriorityManager: 
[%@ 
Refresh: 0x%lx 
UI: 0x%lx 
------
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/DAPriorityManager.m
You can't request priority with a nil client
clientsToPriorityRequests
T@"NSMapTable",&,N,V_clientsToPriorityRequests
foregroundDataclasses
Ti,N,V_foregroundDataclasses
currentPriority
Ti,R,N,V_currentPriority
Background
Refresh
Could not load source: %ld
/AppleInternal/Library/Frameworks/CalendarDiagnostics.framework/CalendarDiagnostics
IPHONE_SIMULATOR_ROOT
CFFIXED_USER_HOME
RestrictionTimeout
NumFailures
com.apple.dataaccess.babysitter
LastSystemVersion
RestrictedWaiters
RefreshingWaiters
FailedWaiters
DataAccessBabysitterPrefsChanged
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/DataAccess/DABabysitter.m
Use the shared babysitter, jerk.
buildVersion
T@"NSString",&,N,V_buildVersion
refreshingWaiters
T@"NSMutableDictionary",&,N,V_refreshingWaiters
failedWaiters
T@"NSMutableDictionary",&,N,V_failedWaiters
restrictedWaiters
T@"NSMutableDictionary",&,N,V_restrictedWaiters
com.apple.dataaccess.ASTrafficLoggerQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/DataAccess_Sim/DataAccess-1620/ActiveSync/Utilities/ASTrafficLogger.m
_lookasideFileHandle is not nil in _openTempLogFile
_lookasideFilePath is not nil in _openTempLogFile
%d-%d
Warning: couldn't open the log file %s: returned errno %ld, "%s"
ExchangeTraffic
>>>>>>
<<<<<<
END_BLOBD016177C-133C-4AA3-BCDC-DFF0C0E6BFE5
START_BLOB
yMdHms
<<%04d-%02d-%02d %02d:%02d:%02d.%03d>>
BLOB_CHUNK
TEXT_CHUNK
isOutgoingTraffic
TB,N,V_isOutgoingTraffic
DAAccount %p is going away...
Account "%@" (%@) was toggled for a dataclass. Giving it another chance with the babysitter.
%s to be implemented by subclass
%s being ignored by %@
Added consumer %p for task %p to DAAccount %p, count: %lu
Removed consumer for task %p from DAAccount %p, count: %lu
Someone wanted to set a nil password, we're editing the live ACAccountCredential
Calling _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Changing Host From %@ to %@
Removing contacts data for account %@, because it has a significant change
Found %ld contacts sources to remove
Removing event / todo data for account %@, because it has a significant change
Found %ld calendars to remove
Ignoring Notes orphan check.  You asked for it.
Removing notes data for account %@, because it has a significant change
Found a note account to remove
Failed to save: %@
Notes database was corrupted! Non-fatal at this point, but just barely
Account had significant property change, going to flush local data.
OldProperties %@
NewProperties %@
Couldn't get a Yahoo cookie. Not setting authentication headers
Fetching OAuth Crednetials for Backing Account %@
Account Store Returned A %@ OAuth-token From Crednetials Object %@ AccountID: %@
Saving account "%@" (%@)
 _backingAccountInfo.authenticated is %d for Account identifier %@ and username %@
Error saving account %@: %@
Not updating non-existing account: %@
Setting identity certificate. Managed by profile? %@
Not attempting request for account %@ because the backing account credential isn't authed %{public}@
Not attempting request for account %{public}@ because the backing account needs to verify terms. %{public}@
backing account renewed credentials due to needsToVerifyTerms. Result %ld error %{public}@
Not attempting request for account %{public}@ because we don't have access to keychain items with accessibility %d right now
Shutting down the task manager
Canceling task because conditions for on-power mode no longer exist (xpc_activity)
XPC: Saved XPC activity
XPC: Successfully set XPC activity state to XPC_ACTIVITY_STATE_DONE
XPC: Failed to set XPC activity state to XPC_ACTIVITY_STATE_DONE
DataAccess is renewing credentials for account %{public}@ by forcing-prompt: %{public}@
DataAccess successfully renewed credentials for account %{public}@ by forcing-prompt: %{public}@
DataAccess failed to renew credentials for account %{public}@ by forcing-prompt: %{public}@ - renewalResult = %ld
Downloading attachments is not supported on account ID %@. AttachmentUUID: %@
Requesting calendar availability is not supported on account with ID [%@].
Cancelling calendar availability requests is not supported on account with ID [%@].
Performing a calendar directory search is not supported on account with ID [%@].
Cancelling calendar directory searches is not supported on account with ID [%@].  searchID: [%@]
Responding to calendar shares is not supported on account ID %@. calendar ID: %@
Reporting calendar shares as junk is not supported on account ID %@. calendar ID: %@
Transaction count is initialized to %d
Transaction count is incremented to %d
Transaction count is decremented to %d
Remaining transactions: %@
Handling account info mapping %@
Using pre-cached account infos
Going to the disk for our account info providers
We don't know of any bundles for account type "%@"
Could not come up with an account class (name %@) for account %@ parent account %@
Could not come up with an account class (name %@) for account %@
Could not come up with a client account class (name %@) for account %@ parent account %@
Could not come up with a client account class (name %@) for account %@
Could not come up with a daemon account class (name %@) for account %@ parent account %@
Could not come up with a daemon account class (name %@) for account %@
Loading password for %@
Securing ur sekretz: moving credential for account %@ to accessibility %d
Couldn't change password accessibility, error %d
Could not find a password in the keychain for %@, error %d
Removing credential %@
Setting password for account with UUID %@
Error %d, Can't update password for account %@
Removing password for account with UUID %@
Error %d, Couldn't delete password from keychain for account %@
During Migration, password present. Setting _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Saving password for %@
Refusing to save password in keychain because one or more of the necessary fields are null: %@%@%@%@
Error %d while trying to add a password: %@
Refusing to retreive password from keychain because one or more of the necessary fields are null: %@%@%@
Could not find a password in the keychain for %@
Removing password for %@
Refusing to delete password from keychain because one or more of the necessary fields are null: %@%@%@
error %d: Could not delete password for %@
Setting password for account
Couldn't set password, error %d
Couldn't add password, error %d
DAMailMessage initWithCoder: should be called on a subclass only
DAMailMessage encodeWithCoder: should be called on a subclass only
Updating oof settings requested on account %@, which does not support it
Retrieving oof settings requested on account %@, which does not support it
Search requested on account %@, which does not support it
%@ read %lu bytes (now up to %lu of %lu)
%s unhandled dataclass %lx
Applying storage session %@ to request %@
Exception when reading dictionary from %@: %@
Task manager %@ is being deallocated. Ending XPC transaction
Exclusive task %@ submitted, to front: %d
Begin an xpc transaction due to exclusive task
DATransaction starting, ID: %@
Independent task %@ submitted
Begin an xpc transaction due to independent task
Queued task %@ submitted
Begin an xpc transaction due to queued task
Task %@ aborted
Task Manager %p shutting down with account at %p
Task Manager %p shutting down with state %@
Task manager %@ is being shut down. Ending XPC transaction
Task manager %@ has finally drained its queue. Turning opportunistic socket support back on
Task manager %@ has finally drained its queue. Clearing its user initiated sync state
Task manager %@ has finally drained its queue. Ending XPC transaction
Task %@ finished.
Early return because task %@ isn't in our collection
Pending tasks are finished for account %@
Task %@ requesting modal
Task %@ ending modal
The _performTask is invoked after taskManager has been shutdown. Canceling %{public}@ %@
The device is in on-power fetch mode, but is no longer on power or on wifi. Canceling %{public}@ %@
The _startModal is invoked after taskManager has been shutdown. Canceling %{public}@ %@
startModal called on task %@
Task Manager %@ transitioning from state: %@
Task Manager %@ transitioning to state: %@
Scheduling selector: %s with argument: %@ in modes %@
Scheduling modal task: %@
Cancelling task %@ with reason %d
Someone asked us to yield the AddressBook database. Bumping up all clients to UI priority
Creating ab database for client %@
Created ab database %p
Couldn't create ab database: %@
AB database %p opened. Connection count is now %d
_abConnectionCount is > 1, at %d
Saving ab database %p old sequence %d. Connection count is %d
_abCloseDB called too many times (connection count %d).  Resetting count to 0
Decrementing database %p reference count. _abConnectionCount is %d
Destroying ab database %p
Someone asked us to yield the calendar database. Bumping up all clients to UI priority
Creating calendar database for client %@
Created calendar database %p
Cal database %p opened for "%@". Connection count is now %d
_calConnectionCount is > 1, at %d
Saving calendar database %p old sequence %d. Connection count is %d. Client identifier is "%@"
Saving calendar database %p.  Save failed, resetting sequence %d
Saving calendar database %p and flushing caches, old sequence %d. Connection count is %d. Client identifier is "%@"
Saving calendar database %p and flushing caches.  Save failed, resetting sequence %d
Decrementing database %p reference count. _calConnectionCount is %d. Client identifier is "%@"
_calCloseDB called too many times (connection count %d).  Resetting count to 0
Destroying calendar database %p
Creating note database
Created note database %p
Note database %p opened. Connection count is now %d
_noteConnectionCount is > 1, at %d
Saving notes database %p. Connection count is %d
Saving notes database %p failed with error %@
Decrementing database %p reference count. _noteConnectionCount is %d
_noteCloseDB called too many times (connection count %d).  Resetting count to 0
Destroying notes database %p
Setting unit test Address Book Database directory to: %@
Setting unit test Calendar Database directory to: %@
Context %@ retaining power assertion with group identifier %@
Context %@ getting added to our held aside contexts, as group %@ is currently dropped
Context %@ releasing power assertion
Context object %@ attempting to release power assertion without first retaining it
Dropping power assertion for group identifier %@
Reattaining power assertion for group identifier %@
DAPowerAssertionManager retained power assertion %@ for context %p, outstanding assertion count %lu
DAPowerAssertionManager releasing power assertion for context %p, outstanding assertion count %u ontext
Saving sync status for source with identifier %@: lastSyncStartDate = %@, lastSyncEndDate = %@, lastSyncError = %@
Failed to save source sync status with source identifier %@. Error = %@
Tried to update status for store with nil externalID
Tried to update status for store, but could not get a corresponding EKSource for it
__ABDatabaseChangedExternally - comparing current sequence number %d to saved sequence number %d
AddressBook database not yet initialize. Notification info: %@
__CalDatabaseChangedExternally - comparing current sequence number %d to saved sequence number %d
Cal database not yet initialized
Registering concerned cal party: %@
__BookmarkDatabaseChangedExternally
__NotesChanged externally.
Couldn't create an address book DB: %@
Received darwin notification %@
Aborting locks for dataclasses %lx to %@
Notifying waiters for dataclasses %ldd
Granting locks for dataclasses %lx to %@
registerWaiter %@ forDataclassLocks %lx
Not allowing waiter %@ to get the gate, as we're in a holding pattern
Letting everyone know we're done with contacts
Not notifying for contacts.  Claimed %d waiters count %lu holder %p expectant waiters %lu
Letting everyone know we're done with events
Not notifying for events.  Claimed %d waiters count %lu holder %p expectant waiters %lu
Letting everyone know we're done with notes
Not notifying for notes.  Claimed %d waiters count %lu holder %p expectant waiters %lu
Letting everyone know we're done with bookmarks
Not notifying for bookmarks.  Claimed %d waiters count %ld holder %p expectant waiters %lu
unregisterWaiterForDataclassLocks %@
relinquishing locks for waiter %@ dataclasses %lx
Claiming ownership of dataclasses 0x%lx
DATransaction exiting, ID: %@
starting daily AggD reporter
Updating criteria for daily AggD xpc activity.
unregistering daily AggD reporter
Reporting Exchange OAuth accounts count
Reported Exchange OAuth accounts count
Couldn't schedule response for notification %@
No completion block for notification %@
DAMigrationIsNeeded : DataAccess Migrator Comparing Version %@ With %@
DAUpdateMigrationVersion : DataAccess Migrator Current Version %@
Checking to see if we should trust the server certificate
Terminating connection because server does not have an SSL certificate. Host: %@
Account now requires trusted certificate. Setting %@ to YES for account: %@
Got SecTrustEvaluate result %u. Allowing.
Got SecTrustEvaluate result %u. Checking if needing to prompt.
Terminating connection and warning user about an untrusted SSL certificate. The account requires trusted SSL certificate. Account: %@
Account does not require trusted certificate. Prompting user. Account: %@
Got SecTrustEvaluate result %u. Denying.
IT'S A TARP!!! We received an untrusted cert for %@. You really think we're going to fall for that?
prompting certificate for host: %@
got prompt response %d
Grabbing trust challenge lock...
Lock acquired. Checking trust.
%@Continuing connection
SBApplicationState changed: %@. Foreground dataclasses are 0x%lx
DAPERF: DAPriorityManager is changing the priority to %d
Client %@ requested priority %@ for dataclasses 0x%lx
Bumping all client priority requests for dataclasses 0x%lx to UI. Open bar, dude!
Babysitter: The OS version is different. Giving all accounts a second chance at life.
Babysitter: Noting that waiter %@ failed %d times for operation %@
===================
Babysitter: You're once, twice, %d times a failure. Disabling account with ID %@ until it stops crashing. Please file a bug for any dataaccessd crashes you find.
===================
===================
Babysitter: Waiter %@ has crashed %d times now. Since you have the babysitter disabled, we're going to assume you know what you're doing and not disable the waiter. Consider yourself warned.
===================
Restricted accounts are: %@
Babysitter: Marking waiter %@ as performing operation "%@" (attempt #%d)
Babysitter: Decrementing refresh count for all operations on account %@
Babysitter: Decrementing refresh count for operation "%@" on account %@
Babysitter: It's been long enough, we're going to give account %@ another try. Let's hope it doesn't crash this time.
sharedMonitor
unmonitorAccount:
shutdown
dealloc
init
alloc
initWithDelegate:
resetStatusReport
persistentUUID
_setPersistentUUID:
ingestBackingAccountInfoProperties
monitorAccount:
sharedInstance
daemonAppropriateAccountClassForACAccount:
initWithBackingAccountInfo:
accountIntPropertyForKey:
setAccountIntProperty:forKey:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
identifier
accountID
backingAccountInfo
parentAccount
setObject:forKeyedSubscript:
stringWithFormat:
displayAccount
accountDescription
setAccountDescription:
username
setUsername:
enabledDataclasses
countByEnumeratingWithState:objects:count:
isEnabledToSyncDataclass:
isEnabledForDataclass:
setEnabled:forDataclass:
enabledForDADataclass:
displayName
sharedBabysitter
giveAccountWithIDAnotherChance:
dataclassProperties
objectForKeyedSubscript:
setAccountProperty:forKey:
boolValue
numberWithBool:
intValue
numberWithInt:
class
waiterID
respondsToSelector:
statusReport
accountWithIDShouldContinue:
setSyncingAllowed:
protocolVersion
setProtocolVersion:
stateString
setObject:forKey:
count
objectForKey:
removeObjectForKey:
clientToken
length
da_newGUID
addClientToken:
credential
password
accountBoolPropertyForKey:
sharedKeychain
migratePasswordForAccount:
setAccountBoolProperty:forKey:
identityPersist
passwordWithExpected:
setPassword:
initWithPassword:
setCredential:
setAuthenticated:
dataclassPropertyURLsByDataclass
isKindOfClass:
URLWithString:
null
urlFromDataclassPropertiesForDataclass:
host
scheme
lowercaseString
isEqualToString:
port
integerValue
emailAddress
arrayWithObjects:count:
emailAddresses
caseInsensitiveCompare:
numberWithInteger:
da_appendSlashIfNeeded
useSSL
principalPath
da_URLWithScheme:host:port:uri:
setUseSSL:
setHost:
setPort:
path
setPrincipalPath:
setIsValidating:
takeValuesFromModifiedAccount:
removeFromCoreDAVLoggingDelegates
addToCoreDAVLoggingDelegates
account:isValid:validationError:
verifyCredentialsForAccount:saveWhenAuthorized:withHandler:
shouldDoInitialAutodiscovery
parentAccountIdentifier
shouldRemoveDBSyncDataOnAccountChange
sharedInstanceForAccountType:creatingClass:
changeTrackingID
abOpenDBWithClientIdentifier:
abDB
objectAtIndexedSubscript:
abSaveDB
abCloseDBAndSave:
calOpenDBWithClientIdentifier:
calDB
calCloseDBAndSave:
completelyIgnoreNotes
enableChangeLogging:
accountForAccountId:
deleteAccount:
save:
DAExtendedDescription
databaseIsCorrupt:
accountHasSignificantPropertyChangesFromOldAccountInfo:
removeDBSyncData
cleanupAccountFiles
credentialType
credentialItemForKey:
dictionaryWithObjects:forKeys:count:
onBehalfOfBundleIdentifier
oauthToken
monitorFoldersWithIDs:
_isIdentityManagedByProfile
setIdentityCertificatePersistentID:managedByProfile:
isAuthenticated
saveVerifiedAccount:withCompletionHandler:
saveAccountPropertiesWithCompletionHandler:
accountWithIdentifier:
saveAccountProperties
accountType
credentialProtectionPolicy
_daKeychainAccessibilityForSecAccessibility:
user
da_stringByAddingPercentEscapesForUsername
da_urlBySettingUsername:
exceptionsDict
da_hexString
mutableCopy
copyStorageSession
trustHandler
resetCertWarnings
setStatusReport:
setPersistentUUID:
setAccountType:
setDisplayName:
supportsAuthentication
isValidating
wasUserInitiated
aa_needsToVerifyTerms
dropAssertionsAndRenewCredentialsWithHandler:
keychainAccessibilityType
canAccessCredentialsWithAccessibility:
description
removeAllObjects
reload
removeXpcActivity
daAccountSubclassWithBackingAccountInfo:
daAccountVersion
setDAAccountVersion:
upgradeAccount
resetAccountID
syncStoreIdentifier
scheduleIdentifier
setUser:
isDisabled
enabledForAnyDADataclasses:
setEnabled:forDADataclass:
enabledDataclassesBitmask
spinnerIdentifiers
accountPropertyForKey:
removeAccountPropertyForKey:
resumeMonitoringFoldersWithIDs:
suspendMonitoringFoldersWithIDs:
stopMonitoringFolderWithID:
setConsumer:forTask:
consumerForTask:
removeConsumerForTask:
clientTokenRequestedByServer
hostFromDataclassPropertiesForDataclass:
useSSLFromDataclassPropertiesForDataclass:
portFromDataclassPropertiesForDataclass:
usernameWithoutDomain
domainOnly
setEmailAddress:
setEmailAddresses:
accountContainsEmailAddress:
signingIdentityPersistentReference
setSigningIdentityPersistentReference:
encryptionIdentityPersistentReference
setEncryptionIdentityPersistentReference:
principalURL
setPrincipalURL:
checkValidityOnAccountStore:withConsumer:
saveModifiedPropertiesOnBackingAccount
discoverInitialPropertiesWithConsumer:
autodiscoverAccountConfigurationWithConsumer:
setShouldDoInitialAutodiscovery:
shouldAutodiscoverAccountProperties
accountDidChangeFromOldAccountInfo:
userAgentHeader
serverRoot
serverComplianceClasses
handleCertificateError:
additionalHeaderValues
customConnectionProperties
oauth2Token
oauthInfoProvider
tearDown
monitorFolderWithID:
stopMonitoringFoldersWithIDs:
stopMonitoringFolders
defaultContainerIdentifierForDADataclass:
removeClientCertificateData
updateExistingAccountProperties
addUsernameToURL:
exceptionsForDigest:
setExceptions:forDigest:
isChildAccount
shouldFailAllTasks
isEqualToAccount:
isActiveSyncAccount
isLDAPAccount
isBookmarkDAVAccount
isCalDAVAccount
isCardDAVAccount
isCalDAVChildAccount
isHotmailAccount
isGoogleAccount
isSubscribedCalendarAccount
accountTypeIdentifier
shouldCancelTaskDueToOnPowerFetchMode
saveXpcActivity:
saveFetchingAutomaticallyState:
getFetchingAutomaticallyState
.cxx_destruct
shouldUseOpportunisticSockets
setShouldUseOpportunisticSockets:
setWasUserInitiated:
taskManager
setTrustHandler:
appIdsForPasswordPrompt
sourceApplicationBundleIdentifier
setSourceApplicationBundleIdentifier:
setDataclassPropertyURLsByDataclass:
pendingQueries
setPendingQueries:
pendingQueryQueue
setPendingQueryQueue:
lastQueryStartedTime
setLastQueryStartedTime:
_backingAccountInfo
_hasInitted
_shouldUseOpportunisticSockets
_wasUserInitiated
_statusReport
_consumers
_storageSession
_clientToken
_taskManager
_xpcActivity
_isFetchingAutomatically
_shouldFailAllTasks
_isValidating
_trustHandler
_appIdsForPasswordPrompt
_sourceApplicationBundleIdentifier
_dataclassPropertyURLsByDataclass
_pendingQueries
_pendingQueryQueue
_lastQueryStartedTime
handleTrustChallenge:forAccount:
handleTrustChallenge:forAccount:completionHandler:
handleTrustChallenge:
handleTrustChallenge:completionHandler:
getAppleIDSession
sharedPowerAssertionManager
dropPowerAssertionsForGroupIdentifier:
reattainPowerAssertionsForGroupIdentifier:
removePersistentCredentials
renewCredentialsForAccount:force:reason:completion:
openAuthenticationURL:forAccount:shouldConfirm:completion:
_webLoginRequestedAtURL:reasonString:completionBlock:
domain
code
userInfo
CDVObjectForKeyCaseInsensitive:
CDVIsSafeRedirectForRequestURL:
setWithObjects:
_leafAccountTypes
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
addObject:
sharedManager
oneshotListOfAccountIDs
setUserInfo:forClientUUID:
localizedIdenticalAccountFailureMessage
localizedInvalidPasswordMessage
webLoginRequestedAtURL:reasonString:completionBlock:
handleValidationError:completion:
reacquireClientRestrictions:
calEventChangeId
setCalEventChangeId:
calRecurrenceChangeId
setCalRecurrenceChangeId:
calAlarmChangeId
setCalAlarmChangeId:
calAttendeeChangeId
setCalAttendeeChangeId:
highestSequenceNumber
setHighestSequenceNumber:
_calEventChangeId
_calRecurrenceChangeId
_calAlarmChangeId
_calAttendeeChangeId
_highestSequenceNumber
errorWithDomain:code:userInfo:
downloadFinishedError:
calendarAvailabilityRequestFinishedWithError:
calendarDirectorySearchFinishedWithError:exceededResultLimit:
shareResponseFinishedWithError:
defaultEventsFolder
eventsFolders
synchronizeEventsFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
sendEmailsForCalEvents:consumer:
beginDownloadingAttachmentWithUUID:consumer:
cancelDownloadingInstance:error:
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
cancelCalendarAvailabilityRequestWithID:
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
cancelCalendarDirectorySearchWithID:
respondToShareRequestForCalendar:withResponse:consumer:
reportShareRequestAsJunkForCalendar:consumer:
cancelShareResponseInstance:error:
serverId
changedItem
deletedEventID
event
transactionCount
setTransactionCount:
transactions
setTransactions:
didFinishAllXPCTransactions
removeObject:
sharedTransactionMonitor
incrementTransactionCountForTransaction:
decrementTransactionCountForTransaction:
transactionMonitorDelegate
setTransactionMonitorDelegate:
_transactionCount
_transactions
_transactionMonitorDelegate
performSelector:withObject:
da_performSelectorThatDoesntAffectRetainCount:withObject:
abPersonChangeId
setAbPersonChangeId:
abGroupChangeId
setAbGroupChangeId:
_abPersonChangeId
_abGroupChangeId
defaultContactsFolder
contactsFolders
synchronizeContactsFolder:previousTag:previousSyncToken:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:previousTagIsSuspect:moreLocalChangesAvailable:consumer:
deletedContactID
contact
folderID
parentFolderID
mailboxID
parentMailboxID
inboxFolder
sentItemsFolder
deletedItemsFolder
draftsFolder
reattemptInvitationLinkageForMetaData:inFolderWithId:
unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:
bundleForClass:
setAccountClassName:
setClientAccountClassName:
setDaemonAccountClassName:
setAgentClassName:
stringByAppendingPathComponent:
stringByAppendingPathExtension:
setAcAccountTypeToAccountFrameworkSubpath:
setAcAccountTypeToAccountDaemonBundleSubpath:
setAcAccountTypeToClassNames:
setAcParentAccountTypeToChildAccountTypes:
defaultManager
privateFrameworksPath
dictionaryWithContentsOfFile:
_addAccountInfo:forFrameworkNamed:
contentsOfDirectoryAtPath:error:
initWithPath:
infoDictionary
bundleWithPath:
load
_loadFrameworkAtSubpath:
loadFrameworkForACAccountType:
accountClassName
clientAccountClassName
daemonAccountClassName
loadDaemonBundleForACAccountType:
agentClassName
daemonAccountClassForACAccount:
clientAccountClassForACAccount:
accountClassForACAccount:
agentClassForACAccount:
acAccountTypeToAccountFrameworkSubpath
acAccountTypeToAccountDaemonBundleSubpath
acAccountTypeToClassNames
acParentAccountTypeToChildAccountTypes
_acAccountTypeToAccountFrameworkSubpath
_acAccountTypeToAccountDaemonBundleSubpath
_acAccountTypeToClassNames
_acParentAccountTypeToChildAccountTypes
_accountClassName
_clientAccountClassName
_daemonAccountClassName
_agentClassName
itemChangeType
stringForItemChangeType:
changeId
allowsKeyedCoding
decodeIntForKey:
setItemChangeType:
decodeObjectForKey:
_setChangedItem:
setServerId:
setInstanceId:
setChangeId:
encodeInt:forKey:
encodeObject:forKey:
instanceId
hash
isEqual:
encodeWithCoder:
initWithCoder:
initWithItemChangeType:changedItem:serverId:
initWithItemChangeType:changedItem:serverId:instanceId:
forwardedAttendees
setForwardedAttendees:
forwardedAttendeeUUIDs
setForwardedAttendeeUUIDs:
_itemChangeType
_serverId
_instanceId
_changedItem
_changeId
_forwardedAttendees
_forwardedAttendeeUUIDs
setSourceContainerId:
setSourceServerId:
setDestinationContainerId:
sourceContainerId
sourceServerId
destinationContainerId
initWithItemChangeType:changedItem:sourceContainerId:sourceServerId:destinationContainerId:
_sourceContainerId
_sourceServerId
_destinationContainerId
setStatus:
status
initWithItemChangeType:changedItem:serverId:status:
_status
folderName
dataclass
isDefault
stringByAppendingFormat:
setFolderName:
setFolderID:
setParentFolderID:
setDataclass:
setIsDefault:
hasRemoteChanges
setHasRemoteChanges:
_isDefault
_hasRemoteChanges
_folderName
_folderID
_parentFolderID
_dataclass
weakObjectsHashTable
setAccounts:
setAccountsQueue:
accountsQueue
accounts
allObjects
monitoredAccounts
_accounts
_accountsQueue
stringByAppendingString:
_DACopyMutableQueryForAccountWithPersistentUUID:
_secAccessibilityForDAKeychainAccessibility:
initWithData:encoding:
_DACopyMutableAttributesForAccountWithPersistentUUID:accessibility:
sharedCredentialStorage
allCredentials
allValues
copy
isProxy
removeCredential:forProtectionSpace:
enumerateKeysAndObjectsUsingBlock:
removePasswordForAccount:withPersistentUUID:
dataUsingEncoding:
passwordForAccountWithPersistentUUID:expectedAccessibility:shouldSetAccessibility:passwordExpected:
guessPasswordForURL:
removeKeychainInformationsForURL:
setPassword:forAccount:withPersistentUUID:withAccessibility:
stringByURLQuoting
query
stringByDeletingLastPathComponent
URLWithUsername:withPassword:
URLWithoutUsername
URLWithUsername:
absoluteString
hasPrefix:
insertString:atIndex:
da_URLWithDirtyString:
URLByRemovingLastPathComponent
da_classicPortForScheme:
loadKeychainInformationsForURL:
saveKeychainInformationsForURL:andPassword:withAccessibility:
requestType
setRequestType:
bodyFormat
setBodyFormat:
messageID
setMessageID:
_requestType
_bodyFormat
_messageID
setOnFlags:
setOffFlags:
onFlags
offFlags
initWithFormat:
initRequestWithSetFlags:unsetFlags:message:
_onFlags
_offFlags
setMaxSize:
maxSize
initRequestForBodyFormat:withBodySizeLimit:
_maxSize
initRequestWithMessageID:
initRequestForBodyFormat:withMessageID:withBodySizeLimit:
setLongID:
setServerID:
longID
initRequestForBodyFormat:withLongID:withBodySizeLimit:
initRequestForBodyFormat:withFolderID:withServerID:withLongID:withBodySizeLimit:
serverID
_longID
_serverID
setMessage:
setFromFolder:
setToFolder:
message
fromFolder
toFolder
initMoveRequestWithMessage:fromFolder:toFolder:
context
setContext:
_message
_fromFolder
_toFolder
_context
setAttachmentName:
attachmentName
initWithAttachmentName:andMessageServerID:
_attachmentName
setSend:
subject
initWithRequestType:message:send:
send
_send
setSourceID:
setDestID:
sourceID
destID
origRequest
initWithStatus:sourceID:destID:
setOrigRequest:
_sourceID
_destID
_origRequest
setRetrieveCertificates:
setRetrieveAvailablilty:
setStartTime:
setEndTime:
initWithEmailAddresses:
initWithEmailAddresses:retrieveCertificates:retrieveAvailability:withStartTime:endTime:
retrieveCertificates
retrieveAvailablilty
startTime
endTime
_retrieveCertificates
_retrieveAvailablilty
_emailAddresses
_startTime
_endTime
mResolvedEmailToX509Certs
appendString:
certificatesStatus
appendFormat:
mergedFreeBusy
availabilityStatus
setMResolvedEmailToX509Certs:
resolvedEmailToX509Certs
addCert:forEmailAddress:
setCertificatesStatus:
setAvailabilityStatus:
setMergedFreeBusy:
_certificatesStatus
_availabilityStatus
_mergedFreeBusy
_mResolvedEmailToX509Certs
remoteID
from
setAddressListForSender:
date
systemTimeZone
dateWithCalendarFormat:timeZone:
setHeader:forKey:
setAddressListForTo:
setAddressListForCc:
setAddressListForBcc:
replyTo
setAddressList:forKey:
encodedHeaders
appendData:
body
displayTo
importance
read
flagged
bodyType
bodySize
bodyTruncated
messageClass
attachments
meetingRequestUUID
meetingRequestMetaData
meetingRequestIsActionable
threadTopic
conversationId
conversationIndex
lastVerb
sender
isDraft
clientID
instanceID
preview
readIsSet
flaggedIsSet
verbIsSet
smimeType
rfc822Data
settingsRequestFinishedWithResults:status:error:
updateOofSettingsWithParams:consumer:
retrieveOofSettingsForConsumer:
getPendingQueryQueue
consumer
removeObjectAtIndex:
_reallyPerformSearchQuery:
_dequeueQuery
performSelector:withObject:afterDelay:
objectAtIndex:
_reallyCancelSearchQuery:
_reallyCancelPendingSearchQuery:
arrayWithArray:
_reallyCancelAllSearchQueries
_reallySearchQueriesRunning
performSearchQuery:
cancelSearchQuery:
cancelAllSearchQueries
searchQueriesRunning
supportsMailboxSearch
supportsEmailFlagging
searchQuery:finishedWithError:
delegate
stream:handleEvent:
getCFRunLoop
_scheduleInCFRunLoop:forMode:
_unscheduleFromCFRunLoop:forMode:
_scheduleCallback
flushLogs
bytes
setIsOutgoingTraffic:
initWithBytes:length:
logWBXMLData:
initWithMIMEData:preflightData:postflightData:intendToStream:
_streamEventTrigger
_setCFClientFlags:callback:context:
scheduleInRunLoop:forMode:
removeFromRunLoop:forMode:
open
close
setDelegate:
streamStatus
streamError
read:maxLength:
hasBytesAvailable
getBuffer:length:
initWithData:
_mimeData
_preflightData
_postflightData
_totalLength
_readOffset
_lastByteCopiedWasCR
_openEventSent
_streamStatus
_intendToStream
_delegate
_rls
_clientCallback
_clientContext
_trafficLogger
defaultToDosFolder
toDosFolders
synchronizeToDosFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
toDosNumberOfPastDaysToSync
setToDosNumberOfPastDaysToSync:
deletedToDoID
toDo
containsObject:
sharedConnection
array
registerForInterrogationWithBlock:
accountWithIdentifier:completion:
accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:
accountsWithAccountType:completion:
accountTypeWithIdentifier:completion:
_daAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:filterOnDataclasses:withCompletion:
da_loadDAAccountsWithCompletion:
da_loadDAAccountsEnabledForDADataclasses:withCompletion:
da_loadDAAccountsWithAccountTypeIdentifiers:withCompletion:
da_loadDAAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:withCompletion:
da_accounts
da_accountsEnabledForDADataclasses:
da_accountsWithAccountTypeIdentifiers:
da_accountsWithAccountTypeIdentifiers:enabledForDADataclasses:
handleFailureInFunction:file:lineNumber:description:
performSelector:withObject:afterDelay:inModes:
da_addNullRunLoopSourceAndPerformSelector:withObject:afterDelay:inModes:
isCustomerInstall
currentRunLoop
currentMode
initWithBytesNoCopy:length:encoding:freeWhenDone:
replaceOccurrencesOfString:withString:options:range:
uppercaseString
characterSetWithCharactersInString:
characterAtIndex:
characterIsMember:
appendBytes:length:
da_dataWithHexString:stringIsUppercase:
da_lowercaseHexStringWithoutSpaces
da_uppercaseHexStringWithoutSpaces
da_dataWithHexString:
processInfo
processName
hasSuffix:
substringToIndex:
rangeOfString:options:
da_stringByRemovingPercentEscapesForUsername
da_removeSlashIfNeeded
da_stringByURLEscapingPathComponent
da_hasPrefixCaseInsensitive:
da_trimWhiteSpace
da_new64ByteGUID
stringWithString:
objectEnumerator
nextObject
DACompactDescription
relativePath
da_rawPath
da_urlBySettingScheme:keepUsername:
da_urlBySettingHost:keepUsername:
da_urlBySettingPort:keepUsername:
da_urlBySettingPath:keepUsername:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
da_URLWithScheme:host:user:port:uri:
da_isEqualToDAVURL:
da_urlByRemovingUsername
da_urlForLogging
da_urlBySettingScheme:
da_urlBySettingHost:
da_urlBySettingPort:
da_urlBySettingPath:
da_pathWithoutTrailingRemovingSlash
absoluteURL
CDVRawPath
da_leastInfoStringRepresentationRelativeToParentURL:
URLWithString:relativeToURL:
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
_CFURLRequest
_initWithCFURLRequest:
DARequestByApplyingStorageSession:
standardUserDefaults
boolForKey:
allKeys
DAMergeOverrideDictionary:
DAObjectForKeyCaseInsensitive:
fileSystemRepresentation
writeToFile:atomically:
queuedExclusiveTasks
addObjectsFromArray:
activeExclusiveTask
independentTasks
mQueuedTasks
activeQueuedTask
modalHeldActiveQueuedTask
setAccount:
setState:
initWithAccount:
invalidate
_populateVersionDescriptions
_version
account
submitExclusiveTask:toFrontOfQueue:
setTaskManager:
state
cancelTaskWithReason:underlyingError:
xpcTransactionTimer
setXpcTransactionTimer:
transactionId
setActiveExclusiveTask:
insertObject:atIndex:
_schedulePerformTask:
_makeStateTransition
_requestCancelTasksWithReason:
taskManagerDidAddTask:
heldIndependentTasks
setActiveQueuedTask:
cancelTask:withUnderlyingError:
allTasks
cancelTask:
managerIdleTimer
setManagerIdleTimer:
userInitiatedSyncTimer
setUserInitiatedSyncTimer:
_cancelTasksWithReason:
modalHeldIndependentTasks
activeModalTask
queuedModalTasks
shouldForceNetworking
_taskForcesNetworking:
_taskInQueueForcesNetworkConnection:
taskManagerWillRemoveTask:
_releasePowerAssertionForTask:
setModalHeldActiveQueuedTask:
_performTask:
cancelPreviousPerformRequestsWithTarget:selector:object:
_startModal:
setActiveModalTask:
_reactivateHeldTasks
_scheduleStartModal:
_hasTasksForcingNetworkConnection
dateWithTimeIntervalSinceNow:
_useOpportunisticSocketsAgain
initWithFireDate:interval:target:selector:userInfo:repeats:
addTimer:forMode:
_hasTasksIndicatingARunningSync
_clearUserInitiatedSyncTimer
_endXpcTransaction
isShutdown
cancelTasksDueToOnPowerMode
_retainPowerAssertionForTask:
performTask
requestCancelTaskWithReason:
startModal
lastObject
_scheduleSelector:withArgument:
cancelPreviousPerformRequestsWithTarget:
shouldHoldPowerAssertion
retainPowerAssertion:withGroupIdentifier:
releasePowerAssertion:
queuedTasks
_useFakeDescriptions
deviceType
userAgent
server
OAuth2Token
accountPersistentUUID
submitExclusiveTask:
submitIndependentTask:
submitQueuedTask:
cancelAllTasks
_logSyncEnd
taskDidFinish:
taskRequestModal:
taskEndModal:
taskIsModal:
setQueuedExclusiveTasks:
setIndependentTasks:
setHeldIndependentTasks:
setModalHeldIndependentTasks:
setMQueuedTasks:
setQueuedModalTasks:
_transaction
_account
_activeModalTask
_activeQueuedTask
_queuedExclusiveTasks
_activeExclusiveTask
_independentTasks
_heldIndependentTasks
_modalHeldIndependentTasks
_mQueuedTasks
_modalHeldActiveQueuedTask
_queuedModalTasks
_state
_managerIdleTimer
_userInitiatedSyncTimer
_xpcTransactionTimer
clientIdentifier
abDBThrowOnNil:
bumpDataclassesToUIPriority:
_registerForAddressBookYieldNotifications
setClientIdentifier:
_abOpenDBWithClientIdentifier:
sharedGateKeeper
claimedOwnershipOfDataclasses:
sharedDBWatcher
lastSavedABSequenceNumber
setLastSavedABSequenceNumber:
_registerForCalendarYieldNotifications
_calOpenDBWithClientIdentifier:
lastSavedCalSequenceNumber
setLastSavedCalSequenceNumber:
defaultCenter
postNotificationName:object:
calSaveDB
calUnitTestCallbackBlock
noteSaveDB
noteABDBDirChanged
noteCalDBDirChanged
setCalUnitTestCallbackBlock:
abSetTestABDBDir:
abTestABDBDir
calSetTestCalDBDir:
calTestCalDBDir
abOpenDBAsGenericClient
abClearSuperfluousChanges
abProcessAddedRecords
abProcessAddedImages
abConstraintPlistPath
calOpenDBAsGenericClient
calClearSuperfluousChanges
calSaveDBAndFlushCaches
calConnectionCount
noteDB
noteOpenDB
noteCloseDBAndSave:
noteConnectionCount
calUnitTestsSetCallbackBlockForSave:
setAbDB:
abConnectionCount
setAbConnectionCount:
setCalDB:
setCalConnectionCount:
bookmarkDB
setBookmarkDB:
bookmarkConnectionCount
setBookmarkConnectionCount:
setNoteDB:
setNoteConnectionCount:
_abDBQueue
_calDBQueue
_bookmarkDBQueue
_noteDBQueue
_abDB
_abConnectionCount
_calDB
_calConnectionCount
_clientIdentifier
_bookmarkDB
_bookmarkConnectionCount
_noteDB
_noteConnectionCount
_calUnitTestCallbackBlock
setContexts:
setGroupIdentifierToContexts:
setContextToGroupIdentifier:
setHeldAsideContexts:
setHeldAsideGroupIdentifiers:
setContextToPowerAssertionRef:
contexts
countForObject:
heldAsideContexts
heldAsideGroupIdentifiers
groupIdentifierToContexts
contextToGroupIdentifier
_retainAssertionForContext:
_releaseAssertionForContext:
contextToPowerAssertionRef
vendDaemons:
powerAssertionRetainCount:
_contexts
_groupIdentifierToContexts
_contextToGroupIdentifier
_heldAsideGroupIdentifiers
_heldAsideContexts
_contextToPowerAssertionRef
initWithDAAccount:
cancelTaskWithID:
startup
mailboxes
mailNumberOfPastDaysToSync
setMailNumberOfPastDaysToSync:
supportsConversations
supportsDraftFolderSync
supportsSmartForwardReply
supportsUniqueServerId
generatesBulletins
setGeneratesBulletins:
customSignature
setCustomSignature:
monitorFoldersForUpdates:
monitorFoldersForUpdates:persistent:
stopMonitoringFoldersForUpdates:
stopMonitoringAllFolders
folderIDsThatExternalClientsCareAboutWithTag:
folderIDsThatExternalClientsCareAboutForDataclasses:withTag:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
sendMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:useSmartTasksIfPossible:isUserRequested:consumer:context:
sendSmartMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:replaceOriginalMime:isUserRequested:consumer:context:
performMailboxRequest:mailbox:previousTag:isUserRequested:consumer:
performMailboxRequests:mailbox:previousTag:isUserRequested:consumer:
performMoveRequests:consumer:
performFetchAttachmentRequest:consumer:
performFetchMessageSearchResultRequests:consumer:
performResolveRecipientsRequest:consumer:
performFolderChange:isUserRequested:
_newASPolicyKeyNotification:
_daemonDiedNotification:
_folderUpdatedNotification:
_folderHierarchyChanged
_foldersThatExternalClientsCareAboutChanged
_accountPasswordChanged
foldersTag
newDataHandlerForDataclass:container:changeTrackingID:
initWithContainer:changeTrackingID:
setContainer:
getIdFromLocalObject:
copyLocalObjectFromId:
saveContainer
copyOfAllLocalObjectsInContainer
drainContainer
wipeServerIds
drainSuperfluousChanges
openDB
closeDBAndSave:
getDAObjectWithLocalItem:serverId:account:
getDAExceptionObjectWithLocalItem:originalEvent:account:
container
setChangeTrackingID:
_container
_changeTrackingID
defaultNotesFolder
notesFolders
synchronizeNotesFolder:noteContext:previousTag:actions:changeSet:notesToDeleteAfterSync:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
deletedNoteID
note
_updateStatusForStoreWithExternalID:lastSyncStartDate:lastSyncEndDate:lastSyncError:
_accountErrorForNSError:
_eventStore
sources
isSyncing
_updateStatusForSource:lastSyncStartDate:lastSyncEndDate:lastSyncError:
setTimeout:
setPurgingAllowed:
setCreationBlock:
_eventStorePurger
acquireCachedEventStoreOrCreate:
sourceIdentifier
numberWithUnsignedInteger:
setLastSyncStartDate:
setLastSyncEndDate:
setLastSyncError:
eventStore
saveSource:commit:error:
sourceWithExternalID:
_ekAccountErrorFromCoreDAVErrorCode:
_ekAccountErrorFromDAErrorCode:
_ekAccountErrorFromDAValidationErrorCode:
_ekAccountErrorFromSubCalErrorCode:
syncStartedForStoreWithExternalID:
syncEndedForStoreWithExternalID:withError:
resetSyncStatusForAllStoresIfNecessary
mapTableWithWeakToStrongObjects
_handleCalChangeNotification
_handleABChangeNotificationWithInfo:
_handleBookmarkChangeNotification
_notesChangedExternally
registerConcernedABParty:withChangedBlock:
removeConcernedABParty:
registerConcernedCalParty:withChangedBlock:
removeConcernedCalParty:
registerConcernedBookmarkParty:withChangedBlock:
removeConcernedBookmarkParty:
registerConcernedNoteParty:withChangedBlock:
removeConcernedNoteParty:
didReceiveDarwinNotification:
_lastSavedCalSequenceNumber
_lastSavedABSequenceNumber
_abWatcher
_calWatcher
_noteWatcher
_concernedABPartyToBlockMap
_concernedCalPartyToBlockMap
_concernedNotePartyToBlockMap
_watchingBookmarks
_concernedBookmarkPartyToBlockMap
waiter
setWaiter:
completionHandler
setCompletionHandler:
dataclasses
setDataclasses:
waiterNum
_waiter
_dataclasses
_completionHandler
_waiterNum
setContactsWaiters:
setEventsWaiters:
setNotesWaiters:
setBookmarksWaiters:
setWaiterIDsExpectingContactsLock:
setWaiterIDsExpectingEventsLock:
setWaiterIDsExpectingNotesLock:
setWaiterIDsExpectingBookmarksLock:
requestPriority:forClient:dataclasses:
setContactsLockHolder:
setEventsLockHolder:
setNotesLockHolder:
setBookmarksLockHolder:
initWithCapacity:
_canWakenWaiter:
isInHoldingPattern
_abortWaiterForWrappers:
_setUnitTestHackRunLoopMode:
_notifyWaitersForDataclasses:
_registerWaiter:forDataclassLocks:preempt:completionHandler:
relinquishLocksForWaiter:dataclasses:moreComing:
_sendAllClearNotifications
registerPreemptiveWaiter:forDataclassLocks:completionHandler:
registerWaiter:forDataclassLocks:completionHandler:
unregisterWaiterForDataclassLocks:
claimedOwnershipOfContacts
setClaimedOwnershipOfContacts:
contactsLockHolder
contactsWaiters
waiterIDsExpectingContactsLock
claimedOwnershipOfEvents
setClaimedOwnershipOfEvents:
eventsLockHolder
eventsWaiters
waiterIDsExpectingEventsLock
claimedOwnershipOfNotes
setClaimedOwnershipOfNotes:
notesLockHolder
notesWaiters
waiterIDsExpectingNotesLock
claimedOwnershipOfBookmarks
setClaimedOwnershipOfBookmarks:
bookmarksLockHolder
bookmarksWaiters
waiterIDsExpectingBookmarksLock
unitTestHackRunLoopMode
setUnitTestHackRunLoopMode:
_claimedOwnershipOfContacts
_claimedOwnershipOfEvents
_claimedOwnershipOfNotes
_claimedOwnershipOfBookmarks
_contactsLockHolder
_contactsWaiters
_waiterIDsExpectingContactsLock
_eventsLockHolder
_eventsWaiters
_waiterIDsExpectingEventsLock
_notesLockHolder
_notesWaiters
_waiterIDsExpectingNotesLock
_bookmarksLockHolder
_bookmarksWaiters
_waiterIDsExpectingBookmarksLock
_unitTestHackRunLoopMode
_transactionId
reportActiveExchangeOAuthAccountsCount
startDailyAggDReporter
endDailyAggDReporter
setGroupIdentifier:
setHandler:
showUserNotification:groupIdentifier:withCompletionBlock:
handler
groupIdentifier
_handler
_groupIdentifier
mapTableWithStrongToStrongObjects
sharedLogger
logICSMessage:atLevel:
registerWithiCalendar
defaultTrustManager
actionForTrust:forHost:andService:
allowTrust:forHost:service:
initWithObjects:
rawTrustResultForSSLTrust:hostname:service:
haveWarnedAboutCert:forHost:
promptForAllCerts
_serverSuffixesToAlwaysFail
substringFromIndex:
enumerateObjectsUsingBlock:
setTrust:
setService:
setConnectionDisplayName:
setHaveWarnedAboutCert:forHost:
showPromptWithOptions:responseBlock:
protectionSpace
serverTrust
initWithTrust:
useCredential:forAuthenticationChallenge:
continueWithoutCredentialForAuthenticationChallenge:
handleTrust:forHost:forAccount:withCompletionBlock:
_actionForTrust:host:service:
haveWarnedAboutCertDict
setHaveWarnedAboutCertDict:
_haveWarnedAboutCertDict
getRootFolderWithConsumer:
synchronizeBookmarkTreeWithConsumer:hasRemoteChanges:
filename
DAManagedDefaultForKey:
isAppleInternalInstall
setFilename:
_ensureCustomLogFile
enabled
removeItemAtPath:error:
initWithFilename:
logSnippet:
slurpAndRemoveLookasideFile:prefixString:suffixString:
_filename
refreshDataclasses
setRefreshDataclasses:
UIDataclasses
setUIDataclasses:
_refreshDataclasses
_UIDataclasses
appIDsToDataclasses
_setNewPriority
addObserver:selector:name:object:
_SBApplicationStateChanged:
removeObserver:name:object:
string
clientsToPriorityRequests
keyEnumerator
_recalculatePriority
vendPriorityManagers
_setForegroundDataclasses:
setClientsToPriorityRequests:
currentPriority
foregroundDataclasses
setForegroundDataclasses:
_clientsToPriorityRequests
_currentPriority
_foregroundDataclasses
UTF8String
_init
dictionary
babysitterEnabled
distantPast
timeIntervalSinceReferenceDate
numberWithDouble:
setValue:forKey:
_reloadBabysitterProperties
_decrementRefreshCountForWaiter:forOperationWithName:
accountShouldContinue:
_incrementRefreshCountForWaiterID:operationName:
_decrementRefreshCountForWaiterID:operationName:
doubleValue
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceDate:
registerAccount:forOperationWithName:
unregisterAccount:forOperationWithName:
buildVersion
setBuildVersion:
refreshingWaiters
setRefreshingWaiters:
failedWaiters
setFailedWaiters:
restrictedWaiters
setRestrictedWaiters:
_buildVersion
_refreshingWaiters
_failedWaiters
_restrictedWaiters
initWithFileDescriptor:closeOnDealloc:
_logQueue
lengthOfBytesUsingEncoding:
_moveLogFileContentsAtPath:
_openLookasideFile
fileDescriptor
logPlainTextData:
isOutgoingTraffic
_lookasideFileHandle
_lookasideFilePath
_isOutgoingTraffic
_didFlushLogs
DAAccount
TrustHandling
HSA2Support
CoreDAVLogging
AuthenticationExtensions
EventsFolderItemsSyncContext
EventsSupport
Events
DATransactionMonitor
ChillOutARC
ContactFolderItemsSyncContext
ContactsSupport
Contacts
MailFolder
MailFolderSupport
InvitationSupport
DAAccountLoader
DAAccountClassNames
DAAction
NSCoding
DAMoveAction
DAResponse
DAFolder
DAAccountMonitor
DAKeychain
DAKeychainAdditions
DAKeychainAddition
OldAndBusted
DAMailboxRequest
DAMailboxSetFlagsRequest
DAMailboxGetUpdatesRequest
DAMailboxDeleteMessageRequest
DAMailboxFetchMessageRequest
DAMailboxFetchSearchResultRequest
DAMessageMoveRequest
DAMessageFetchAttachmentRequest
DADraftMessageRequest
DAMoveResponse
DAResolveRecipientsRequest
DAResolvedRecipient
DAMailMessage
Email
Settings
Searching
SearchSubclassing
DAConvertCRtoCRLFStream
ToDosSupport
ToDos
DAExtensions
DelayedPerformWithNullSource
DAHexString
DALeastInfoURLExtension
DADAExtendedDescription
DATaskManager
DALocalDBHelper
DAPowerAssertionManager
ASAccountActor
ASAccountActorMessages
DADataHandler
NotesSupport
Notes
DAStoreSyncStatusUpdater
DALocalDBWatcher
DAWaiterWrapper
DALocalDBGateKeeper
DATransaction
DAAggDReporter
DAUserNotificationUtilities
DAUserNotificationInfo
DAiCalendarLogger
ICSLoggingDelegate
DATrustHandler
BookmarksSupport
DATrafficLogger
DAPriorityRequest
DAPriorityManager
DABabysitter
ASTrafficLogger
@12@0:4@8
v8@0:4
i8@0:4
v12@0:4i8
B8@0:4
@8@0:4
v12@0:4@8
B12@0:4@8
v16@0:4B8@12
B12@0:4i8
v16@0:4B8i12
v16@0:4@8@12
i12@0:4@8
v16@0:4i8@12
@12@0:4B8
v12@0:4B8
Vv12@0:4@8
@12@0:4i8
v12@0:4@?8
v16@0:4@8B12
^{__CFData=}12@0:4@8
v16@0:4^{__CFData=}8@12
^{__CFURLStorageSession=}8@0:4
Q8@0:4
v16@0:4Q8
@"ACAccount"
@"DAStatusReport"
@"NSMapTable"
^{__CFURLStorageSession=}
@"NSString"
@"DATaskManager"
@"NSObject<OS_xpc_object>"
@"DATrustHandler"
@"NSArray"
@"NSMutableDictionary"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
B16@0:4@8@?12
v20@0:4@8@12@?16
v16@0:4@8@?12
v40@0:4@8@12@16@20B24B28B32@36
B16@0:4@8@12
@16@0:4@8@12
@28@0:4@8@12@16@20@24
@24@0:4@8@12I16@20
@20@0:4@8i12@16
^{ASEvent=#@@ii@i@?i@}8@0:4
@"<DATransactionMonitorDelegate>"
v16@0:4:8@12
v48@0:4@8@12@16@20@24B28B32B36B40@44
^{ASContact=#@@ii@i@?i@}8@0:4
@20@0:4@8@12^@16
#12@0:4@8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@20@0:4I8@12@16
@24@0:4I8@12@16@20
@12@0:4I8
I8@0:4
v12@0:4I8
@28@0:4I8@12@16@20@24
@24@0:4I8@12@16i20
@"NSHashTable"
^v12@0:4i8
i12@0:4^v8
^{__CFDictionary=}12@0:4@8
^{__CFDictionary=}16@0:4@8i12
@24@0:4@8i12B16B20
B24@0:4@8@12@16i20
B20@0:4@8@12i16
@28@0:4Q8Q16@24
@16@0:4i8i12
@20@0:4i8@12i16
@28@0:4i8@12@16@20i24
@20@0:4@8@12@16
@20@0:4i8@12B16
@"DAMailMessage"
@20@0:4i8@12@16
@"DAMessageMoveRequest"
@28@0:4@8B12B16@20@24
@"NSDate"
v16@0:4^{__CFRunLoop=}8^{__CFString=}12
B20@0:4L8^?12^{?=i^v^?^?^?}16
i16@0:4*8I12
B16@0:4^*8^I12
@24@0:4@8@12@16B20
@"NSData"
^{__CFRunLoopSource=}
{?="version"i"info"^v"retain"^?"release"^?"copyDescription"^?}
@"ASTrafficLogger"
^{ASToDo=#@@ii@i@?i@}8@0:4
v24@0:4@8i12B16@?20
v16@0:4i8@?12
v20@0:4@8i12@?16
@16@0:4@8i12
v28@0:4:8@12d16@24
@16@0:4@8B12
@28@0:4@8@12@16i20@24
@24@0:4@8@12i16@20
@12@0:4^{__CFURLStorageSession=}8
@"DATransaction"
@"DAAccount"
@"<DATask>"
@"NSMutableSet"
@"NSTimer"
@16@0:4@8#12
^v12@0:4B8
^v8@0:4
B12@0:4B8
^{CalDatabase={__CFRuntimeBase=IAI}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=l[40c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=l[40c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}B@B}8@0:4
v12@0:4^v8
v12@0:4^{CalDatabase={__CFRuntimeBase=IAI}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=l[40c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=l[40c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}B@B}8
@?8@0:4
^{CalDatabase={__CFRuntimeBase=IAI}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{_opaque_pthread_mutex_t=l[40c]}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFString}^{__CFString}i@?{_opaque_pthread_mutex_t=l[40c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}B@B}
@"NoteContext"
v12@0:4#8
I12@0:4@8
@"NSCountedSet"
Vv12@0:4i8
Vv8@0:4
Vv12@0:4B8
Vv16@0:4@8B12
@12@0:4^@8
@16@0:4i8^@12
B20@0:4@8@12@16
i52@0:4@8@12i16@20@24@28@32B36B40@44@48
i28@0:4@8@12@16B20@24
i16@0:4@8@12
Vv12@0:4@"DASearchQuery"8
@"NSArray"8@0:4
@"NSData"8@0:4
Vv12@0:4@"NSData"8
@"NSString"8@0:4
Vv12@0:4@"NSString"8
Vv12@0:4@"NSArray"8
Vv16@0:4@"NSArray"8B12
@"NSSet"12@0:4^@8
@"NSSet"16@0:4i8^@12
B20@0:4@"NSSet"8@"NSSet"12@"NSString"16
i52@0:4@"NSData"8@"NSString"12i16@"NSString"20@"NSString"24@"NSString"28@"NSString"32B36B40@"<DAMessageSendConsumer>"44@48
i28@0:4@"DAMailboxRequest"8@"NSString"12@"NSString"16B20@"<DAMailboxRequestConsumer>"24
i28@0:4@"NSArray"8@"NSString"12@"NSString"16B20@"<DAMailboxRequestConsumer>"24
i16@0:4@"NSArray"8@"<DAMessageMoveRequestConsumer>"12
i16@0:4@"DAMessageFetchAttachmentRequest"8@"<DAMessageFetchAttachmentConsumer>"12
i16@0:4@"NSArray"8@"<DAMailboxFetchSearchResultConsumer>"12
i16@0:4@"DAResolveRecipientsRequest"8@"<DAResolveRecipientsConsumer>"12
v16@0:4@"DAFolderChange"8B12
@"DAFolder"8@0:4
B16@0:4@"NSData"8@"NSString"12
@"NSString"20@0:4@"NSData"8@"NSString"12^@16
Vv12@0:4@"NSNotification"8
@20@0:4i8^v12@16
@16@0:4^v8@12
@20@0:4^v8@12@16
v48@0:4@8@12@16@20@24@28B32B36B40@44
^{ASNote=#@@ii@i@?i@}8@0:4
v24@0:4@8@12@16^I20
I12@0:4i8
I12@0:4I8
@"<DADataclassLockWatcher>"
v20@0:4@8i12B16
v20@0:4^{__CFUserNotification=}8@12@?16
v16@0:4@8i12
v16@0:4@"NSString"8i12
i20@0:4^{__SecTrust=}8@12@16
v24@0:4^{__SecTrust=}8@12@16@?20
B20@0:4@8@12@?16
@"<DATrustHandlerDelegate>"
v20@0:4@8@12@16
v20@0:4i8@12i16
@"NSFileHandle"
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
