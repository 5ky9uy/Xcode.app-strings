objectAtIndex:
stringByAppendingPathComponent:
pathToNanoRegistryStateDirectory
UUIDString
stringWithFormat:
_pathToNanoRegistryStateDirectory
_pathToNanoRegistryUnpairTriggerFileDirectory
pathToNanoRegistryHistoryFile
pathToNanoRegistryMigrationRoutingSlip
pathToNanoRegistryClassAFile
pathToNanoRegistryHistorySecurePropertiesFile
pathToNanoRegistryUDIDFile
pathToNanoRegistryHistoryRecoveryManagerFile:
pathToNanoRegistryHistoryActiveStateMachineFile:
_pathToNanoRegistryPairingStorePathDirectory
_pathToDevicePropertiesFile
_pathToStateMachineStateFile
_pathToSecureDevicePropertiesFile
_pathToRecoveryStateFile
_pathToUnpairTriggerFile
fileURLWithPath:
URLByAppendingPathComponent:
alphanumericCharacterSet
mutableCopy
addCharactersInString:
stringByAppendingString:
class
pathToTermsCache
dateWithTimeIntervalSinceReferenceDate:
localizedStringFromDate:dateStyle:timeStyle:
stringForEventType:
digestFromData:
NRSHA256
base64EncodedStringWithOptions:
stringByAddingPercentEncodingWithAllowedCharacters:
dictionaryWithObjects:forKeys:count:
defaultManager
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
pathToTermsWithDigest:
path
fileExistsAtPath:
writeToURL:options:error:
dataWithContentsOfURL:options:error:
isEqual:
errorWithEnum:
isEqualToString:
initWithCoder:
shouldAllowArchivingOfTermsTextToFile
decodeObjectOfClass:forKey:
loadTermsWithPath:
setWritable:
mergeFrom:
init
sharedInstance
getAllDevices
countByEnumeratingWithState:objects:count:
valueForProperty:
timeIntervalSinceReferenceDate
setEventDate:
saveTerms
encodeObject:forKey:
encodeWithCoder:
setEventType:
setTermsText:
setDocumentationID:
setPresentationReason:
setPresentationLocation:
setAcknowledgedDeviceName:
setAcknowledgedDeviceSerialNumber:
setDisplayDeviceName:
setDisplayDeviceSerialNumber:
setLoggingProcessName:
supportsSecureCoding
eventWithProtobuf:
description
initWithDeviceID:
_setEventType:
updateEventDate
_setLoggingProcessName:
.cxx_destruct
termsDigest
setTermsDigest:
writable
_writable
_termsDigest
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
add:forDeviceID:withCompletion:
checkForAcknowledgement:forDeviceID:withCompletion:
interfaceWithProtocol:
alloc
initWithMachServiceName:options:
setRemoteObjectInterface:
resume
connection
remoteObjectProxyWithErrorHandler:
errorStringWithEnum:
errorWithDomain:code:userInfo:
proxyWithErrorHandler:
proxy
_proxy
stringWithUTF8String:
lastPathComponent
methodSignatureForSelector:
retainArguments
invokeWithTarget:
initWithBlahBlahBlahTarget:queue:async:
forwardInvocation:
target
setTarget:
_queue
_async
_target
initWithBlahBlahBlahProxy:
setProxy:
dictionary
mockListeners
setMockListeners:
queue
setQueue:
_mockListeners
processIdentifier
valueForEntitlement:
setExportedInterface:
exportedInterface
setExportedObject:
exportedObject
remoteObjectInterface
remoteObjectProxy
synchronousRemoteObjectProxyWithErrorHandler:
setInterruptionHandler:
interruptionHandler
setInvalidationHandler:
invalidationHandler
suspend
invalidate
_setQueue:
runCompletionBlock:
processName
initWithConnection:
_connection
setDelegate:
listener:shouldAcceptNewConnection:
initWithMachServiceName:
delegate
_listenerDelegate
UTF8String
objectForKeyedSubscript:
serverConnection
serverConnectionWithClientConnection:
invalidated
copy
remoteObjectProxyAsync:
_invalidate
numberWithBool:
_name
_serverConnection
_synchronousRemoteObjectProxy
_remoteObjectProxy
_invalidated
_exportedInterface
_exportedObject
_invalidationHandler
_interruptionHandler
dealloc
initWithListener:clientConnection:
_clientConnection
_listener
setObject:forKeyedSubscript:
removeObjectForKey:
name
_suspended
_delegate
arrayWithCapacity:
addObject:
count
enqueueReadWithBlock:bypassSuspend:async:
objectAtIndexedSubscript:
_suspendReadersAndWaitForDrain
_resumeReaders
array
initWithNumberOfReaders:
enqueueReadWithBlock:bypassSuspend:
enqueueReadWithBlockAsync:bypassSuspend:
enqueueWriteWithBlockAsync:bypassSuspend:
_readerQueues
_writerQueue
_nextReader
_suspendedReadRequests
_suspendedWriteRequests
_lock
removeAllObjects
dictionaryRepresentation
numberWithLongLong:
setObject:forKey:
initWithCapacity:
addHistory:
historysCount
clearHistorys
historyAtIndex:
setSwitchRecords:
allocWithZone:
copyWithZone:
historyType
setStartIndex:
setHasStartIndex:
hasStartIndex
hasSwitchRecords
readFrom:
writeTo:
copyTo:
startIndex
historys
setHistorys:
switchRecords
_startIndex
_historys
_switchRecords
_has
grabRegistryWithReadBlockAsync:
applyDiff:
grabRegistryWithWriteBlockAsync:
syncGrabRegistryWithReadBlock:
syncGrabRegistryWithWriteBlock:
grabHistoryWithReadBlock:
grabHistoryWithWriteBlock:
syncGrabHistoryWithReadBlock:
syncGrabHistoryWithWriteBlock:
xpcGetDeviceCollectionWithBlock:
xpcGetDiffSinceTokenValue:getSecureProperties:withBlock:
xpcRetrieveSecureProperties:block:
xpcGetChangeHistoryWithBlock:
xpcSwitchIndex:
xpcDeviceIDAtSwitchIndex:withBlock:
xpcClientInfo:
xpcApplyDiff:withSecureProperties:block:
xpcSetMigrationConsented:forDeviceID:withBlock:
xpcBeginDiscoveryWithBlock:
xpcEndDiscoveryWithBlock:
xpcCompanionOOBDiscoverAndPairWithName:withOutOfBandPairingKey:withOptions:operationHasBegun:
xpcCompanionPasscodePairWithDeviceID:withOptions:operationHasBegun:
xpcGizmoOOBAdvertiseAndPairWithName:operationHasBegun:
xpcGizmoPasscodeAdvertiseAndPairWithName:operationHasBegun:
xpcAbortPairingReason:withBlock:
xpcEnterCompatibilityState:withDeviceID:
xpcNotifyActivationCompleted:withSuccess:
xpcNotifyPasscode:withDeviceID:
xpcUnpairWithDeviceID:withOptions:operationHasBegun:
xpcPairingShouldContinue
xpcSuspendPairingClientCrashMonitoring:
xpcResumePairingClientCrashMonitoring:
xpcRetriggerUnpairInfoDialogWithBlock:
xpcTriggerVersion4Workaround
xpcSubmitAlbertPairingReport:
xpcPairingClientDidEnterPhase:withBlock:
xpcSwitchActiveDeviceWithDeviceID:isMagicSwitch:operationHasCompleted:
xpcSwitchActiveDeviceWithDeviceID:withAssertionHandler:
xpcInvalidateSwitchAssertionWithIdentifier:block:
xpcActiveDeviceAssertions:
xpcBeginMigrationWithDeviceID:completion:
xpcBeginMigrationWithCompletion:
xpcPairWithSimulator:withCompletion:
xpcUnpairWithSimulator:withCompletion:
xpcSwitchToSimulator:withCompletion:
xpcGetMigrationPairingCharacteristicReadDataWithCompletion:
xpcPutMigrationChallengeCharacteristicWriteData:completion:
xpcSubmitServerRequestReportWithRequestType:duration:errorCode:block:
xpcPingActiveGizmoWithPriority:withMessageSize:withBlock:
xpcStartWatchSetupPushWithBlock:
xpcStopWatchSetupPushWithBlock:
xpcScanForMigratableWatchesWithBlock:
xpcBeginMigrationWithDeviceID:passcode:withBlock:
xpcGetLastMigrationRequestPhoneNameWithCompletion:
xpcKeepPhoneUnlockedInternalTestSPI:
xpcWaitForWatchPairingExtendedMetadataForAdvertisedName:completion:
xpcCheckIfFlaggedForRecoveryWithCompletion:
xpcClearRecoveryFlagWithCompletion:
xpcFakePairedSyncIsCompleteWithCompletion:
enclosedClassTypes
setClasses:forSelector:argumentIndex:ofReply:
arrayWithObjects:count:
setWithArray:
xpcDeviceID:needsPasscode:
xpcHasNewOOBKey:
pairingServicesDelegate
pairingQueue
loudHasEntitlement:
proxyWillBeginPairing:
pairingDelegate
logCaller:args:
hasPrefix:
appPath
proxyWillAbortPairing:
boolValue
proxyWillBeginUnpairing:
proxyWillTakeSwitchAssertion:
proxyWillBeginDiscovering:
proxyWillEndDiscovering:
proxyRequestsSuspensionOfCrashMonitoring:
proxyRequestsResumptionOfCrashMonitoring:
proxyWillBeginPushing:
proxyWillEndPushing:
machServiceName
serverExportedInterface
serverRemoteObjectInterface
clientExportedInterface
clientRemoteObjectInterface
initWithUpdateCounter:block:
block
setBlock:
updateCounter
setUpdateCounter:
_block
_updateCounter
initWithParameters:
managementQueue
_queryDataAsyncIfNeededWithBlock:
registerNotifyTokenWithName:withQueue:withBlock:
tokenValue
updateCounterFromToken:
supportsWatch
_getDevicesUpdateCounterNotifyTokenValue
_connectToDaemon
performUnderCollectionLock:
grabRegistryWithReadBlock:
rawConnection
proxyClass
xpcConnectionClass
setConnection:
_grabRegistryWithReadBlock:
collection
secureProperties
enqueueForRead:
_grabRegistryWithWriteBlockAsync:
getReferencedSecureProperties:fromDiff:
enqueueForWriteAsync:
_nextToken
_queryDataAsyncForce:ifNeededWithBlock:
devicesUpdateCounter
_addQueryCompletionBlockEntry:
_fireQueryCompletionBlocksToUpdateCounter:
_fireAllQueryCompletionBlocks
_queryDaemonWithStartingTokenValue:currentTokenValue:withBlock:
_wipeRegistryWith:block:
setSecureProperties:
setTokenValue:
setCollection:
diffFrom:to:
enqueueForWriteAsync:bypassSuspend:
domain
code
nr_safeDescription
setParentDelegate:
forceImportSecureProperties:
_notifyDiffIndexObserversWithDiff:deviceCollection:secureProperties:index:
addObserverQueue:withBlock:
setQueueCollection:
daemonIdle
addDiffIndexObserverWithWriteBlock:
removeDiffIndexObserver:
lastDevicesUpdateCounterNotifyTokenValue
setLastDevicesUpdateCounterNotifyTokenValue:
devicesUpdateCounterNotifyToken_dispatch
setDevicesUpdateCounterNotifyToken_dispatch:
devicesUpdateCounterNotifyToken_check
setDevicesUpdateCounterNotifyToken_check:
outstandingRegistryQuery
setOutstandingRegistryQuery:
backoffDuration
setBackoffDuration:
registryQueryCompletionBlockEntries
setRegistryQueryCompletionBlockEntries:
_diffIndexObservers
_outstandingRegistryQuery
_devicesUpdateCounterNotifyToken_dispatch
_devicesUpdateCounterNotifyToken_check
_backoffDuration
_registryQueryCompletionBlockEntries
_tokenValue
_lastDevicesUpdateCounterNotifyTokenValue
addArrayValues:
setStringValue:
setNumberValue:
setUUIDValue:
setDataValue:
setSizeValue:
setDictionaryKey:
arrayValuesCount
clearArrayValues
arrayValuesAtIndex:
arrayValuesType
hasStringValue
hasNumberValue
hasUUIDValue
hasDataValue
hasSizeValue
hasDictionaryKey
setIsSet:
setHasIsSet:
hasIsSet
setIsSecurePropertyValue:
setHasIsSecurePropertyValue:
hasIsSecurePropertyValue
setIsDate:
setHasIsDate:
hasIsDate
setIsError:
setHasIsError:
hasIsError
setIsMiniUUIDSet:
setHasIsMiniUUIDSet:
hasIsMiniUUIDSet
stringValue
numberValue
uUIDValue
dataValue
sizeValue
dictionaryKey
arrayValues
setArrayValues:
isSet
isSecurePropertyValue
isDate
isError
isMiniUUIDSet
_arrayValues
_dataValue
_dictionaryKey
_numberValue
_sizeValue
_stringValue
_uUIDValue
_isDate
_isError
_isMiniUUIDSet
_isSecurePropertyValue
_isSet
value
timeIntervalSinceNow
hasUUID:
containsObject:
initWithValue:
initWithDiff:andChangeType:
numberWithUnsignedInteger:
numberWithUnsignedShort:
changeType
diff
pairingID
isPaired
isActive
isArchived
migratable
supportsCapability:
diffsToActivate:withDate:
diffsToPair:withDate:
diffsToSetStatusCode:andCompatibilityState:
diffsToClearStatusCodeAndCompatibilityState
parseDiff:forPropertyChange:withBlock:
numberWithInteger:
initWithDomain:code:userInfo:
componentsSeparatedByString:
integerValue
observer
setObserver:
_observer
applyDiff:upOnly:notifyParent:unconditional:
setByAddingObject:
parentDelegate
child:didApplyDiff:
valueWithNonretainedObject:
nonretainedObjectValue
removeObject:
classTypes
removeObserver:
observers
notifyParentWithDiff:
notifyObserversWithDiff:
_observers
_parentDelegate
raise:format:
unarchivingVerifyObjectIsNotNil:name:owner:
unarchivingVerifyObjectClasses:name:classes:owner:
getUUIDBytes:
initWithData:
length
bytes
dataWithBytesNoCopy:length:
dataWithBytes:length:
appendString:
appendFormat:
initWithUUIDSet:
data
.cxx_construct
setData:
_miniUUIDs
_data
numberWithFloat:
width
setWidth:
height
setHeight:
_height
_width
numberWithInt:
numberWithDouble:
setInt32Value:
setHasInt32Value:
hasInt32Value
setFloatValue:
setHasFloatValue:
hasFloatValue
setDoubleValue:
setHasDoubleValue:
hasDoubleValue
setBoolValue:
setHasBoolValue:
hasBoolValue
setInt64Value:
setHasInt64Value:
hasInt64Value
setIsUnsigned:
setHasIsUnsigned:
hasIsUnsigned
setIsShortOrChar:
setHasIsShortOrChar:
hasIsShortOrChar
int32Value
floatValue
doubleValue
int64Value
isUnsigned
isShortOrChar
_doubleValue
_int64Value
_floatValue
_int32Value
_boolValue
_isShortOrChar
_isUnsigned
minPairingCompatibilityVersionForChipID:
minQuickSwitchPairingCompatibilityVersionForChipID:
maxPairingCompatibilityVersion
minPairingCompatibilityVersionForChipID:name:defaultVersion:
stringByReplacingOccurrencesOfString:withString:
numberFromCFPrefs:
initInternal
stringFromCFPrefs:
systemVersions
minPairingCompatibilityVersion
minQuickSwitchCompatibilityVersion
pairingCompatibilityVersion
isOverrideActive
setPairingCompatibilityVersion:
setMaxPairingCompatibilityVersion:
setMinPairingCompatibilityVersion:
setMinQuickSwitchCompatibilityVersion:
setIsOverrideActive:
_isOverrideActive
_pairingCompatibilityVersion
_maxPairingCompatibilityVersion
_minPairingCompatibilityVersion
_minQuickSwitchCompatibilityVersion
getPairedDevices
maxPairedDeviceCount
setActivePairedDevice:isMagicSwitch:operationHasCompleted:
initWithDevice:identifier:
shouldBoostProcess
initWithBoost:
initWithBoost:disconnected:
paired
_fireChangeNotificationsForDiff:collection:secureProperties:index:notify:
_fireWaitingToPairBlocks
_getStatusWithCollection:
_getCompatibilityStateWithCollection:
_legacyDevicesWithCollection:secureProperties:
sendDevicesUpdatedNotification
_postNotification:forDeviceID:withUserInfo:
initWithRegistry:diff:pairingID:notify:
activeDevice
activeDeviceID
_fireCompatibilityStateChangedNotificationWithCollection:
_fireStatusChangedNotificationWithCollection:
defaultCenter
postNotificationName:object:userInfo:
userInfo
initWithUUIDString:
_fireCompatibilityStateStatusNotificationsWithCollection:
allValues
threadIsBlockedWaitingOn_nanoregistryd_syncGrabLegacyRegistryWithBlock:
pairedDevicesSelectorBlock
getDevicesMatching:
activePairedDeviceSelectorBlock
firstObject
getDevicesWithBlock:
unpairWithDevice:withOptions:operationHasBegun:
getActivePairedDevice
pairingStorePathPairingID:
waitForPairingStorePathPairingID:
abortPairingWithReason:
initWithRequestType:
deviceForBluetoothID:
deviceIDForIDSDevice:
deviceForBTDeviceID:
deviceIDForNRDevice:
nsuuid
_deviceIDAtSwitchIndex:date:
switchIndex
_getSwitchEventsFromIndex:toIndex:inlineCallback:
setMigrationConsented:forDeviceID:withBlock:
sharedMigrator
migrationConsentRequestData
devicesFromMigrationConsentRequestData:
activeDeviceSelectorBlock
_getLocalDeviceCollection
pairedDeviceCountIsLessThanMaxPairedDevices
pairedDeviceSupportQuickSwitch
setActivePairedDevice:operationHasCompleted:
setActivePairedDevice:withActiveDeviceAssertionHandler:
_invalidateActiveDeviceAssertionWithIdentifier:
_getChangeHistory
_getSecureProperties:
_getClientInfo
status
compatibilityState
isKeychainEnabled
getDevices
companionOOBDiscoverAndPairWithName:withOutOfBandPairingKey:withOptions:operationHasBegun:
companionPasscodePairWithDevice:withOptions:operationHasBegun:
gizmoOOBAdvertiseAndPairWithName:operationHasBegun:
gizmoPasscodeAdvertiseAndPairWithName:operationHasBegun:
notifyActivationCompleted:withSuccess:
notifyPasscode:forDevice:
notifyPairingShouldContinue
unpairWithDevice:shouldObliterate:operationHasBegun:
pairWithSimulator:withQueue:withCompletion:
unpairWithSimulator:withQueue:withCompletion:
switchToSimulator:withQueue:withCompletion:
fakePairedSyncIsCompleteWithCompletion:
enterCompatibilityState:forDevice:
waitForActivePairedDevice
abortPairing
suspendPairingClientCrashMonitoring
resumePairingClientCrashMonitoring
pairingStorePath
blockAndQueryVersions
userIsCheckingForUpdate
retriggerUnpairInfoDialog
beginDiscovery
endDiscovery
overrideSignalStrengthLimit:
supportsPairedDevice
serverRequestReporterWithType:
_submitServerRequestReportWithRequestType:duration:errorCode:
_submitAlbertPairingReport
deviceForPairingID:
deviceForIDSDevice:
deviceForNRDevice:fromIDSDevices:
pairingClientDidEnterPhase:
getSwitchEventsFromIndex:inlineCallback:
_getActiveDeviceAssertionsWithInlineBlock:
getMigrationPairingCharacteristicReadDataWithQueue:completion:
putMigrationChallengeCharacteristicWriteData:queue:completion:
_pingActiveGizmoWithPriority:withMessageSize:withBlock:
startWatchSetupPush
isWatchSetupPushActive
stopWatchSetupPush
waitForWatchPairingExtendedMetadataForAdvertisedName:completion:
setMigrationConsented:forDevice:withBlock:
beginMigrationWithDevice:passcode:withBlock:
beginMigrationWithDevice:withCompletion:
lastMigrationRequestPhoneName
keepPhoneUnlockedInternalTestSPI:
checkIfFlaggedForRecoveryWithCompletion:
clearRecoveryFlagWithCompletion:
legacyDevices
setLegacyDevices:
legacyDevicesQueue
setLegacyDevicesQueue:
legacyDevicesQueueFirst
setLegacyDevicesQueueFirst:
lastStatus
setLastStatus:
lastCompatibilityState
setLastCompatibilityState:
waitingToPairBlocks
setWaitingToPairBlocks:
_disconnected
_lastCompatibilityState
_legacyDevices
_legacyDevicesQueue
_legacyDevicesQueueFirst
_lastStatus
_waitingToPairBlocks
compare:
indexOfObject:inSortedRange:options:usingComparator:
insertObject:atIndex:
begin
devices
getCharacters:range:
stringWithCharacters:length:
canMigrate
setID:
setName:
setAdvertisedName:
addDevices:
UDIDUUID
setPhoneUDIDHash:
shortenStringByCompleteUnicodeCharactersToReduceStorageSpace:
setCompressed:
setPossiblyCompressedData:
_SHA256WithString:
subdataWithRange:
dataUsingEncoding:
compressed
possiblyCompressedData
hasPhoneUDIDHash
phoneUDIDHash
advertisedName
getBytes:length:
initWithUUIDBytes:
devicesExpectedToBeMigratableAfterRestore
packMigrationProtobufs:
compressMigrationProtobuf:
shrinkMigrationProtobufs:
migratableDevices
minusSet:
allObjects
dataWithPropertyList:format:options:error:
propertyListWithData:options:format:error:
migrationDataPreRestoreForConsentedDevices:
ingestPostRestoreMigrationDataForConsentedDevices:
migrationIsAvailable
migratableDevicesRequiringConsent
enterPreMigrationMode
migratingDevice
_migrating
_migratingDevice
archived
migrationError
migrationConfirmed
decodeIntegerForKey:
decodeBoolForKey:
encodeInteger:forKey:
encodeBool:forKey:
chipID
setChipID:
productType
setProductType:
postFailsafeObliteration
setPostFailsafeObliteration:
_postFailsafeObliteration
_chipID
_productType
setRequestType:
abs_to_seconds:
setStartTime:
timebaseInfo
abs_to_nanos:
startTime
requestCompletedWithErrorCode:andDuration:
submitted
setSubmitted:
requestType
requestCompletedWithErrorCode:
requestTimedOut
setTimebaseInfo:
_submitted
_requestType
_timebaseInfo
_startTime
setValue:
hasValue
_value
addPairingIDs:
pairingIDsCount
clearPairingIDs
pairingIDsAtIndex:
devicesCount
clearDevices
devicesAtIndex:
pairingIDsType
devicesType
pairingIDs
setPairingIDs:
setDevices:
_devices
_pairingIDs
_phoneUDIDHash
setActiveDeviceID:
setDate:
setSwitchIndex:
state
initWithDeviceID:date:switchIndex:
setDateTimeInterval:
setHasDateTimeInterval:
hasDateTimeInterval
dateTimeInterval
fromUUID:
setDeviceIDBytes:
deviceIDBytes
toUUID
switchRecordWithHistoryEntry:
date
records
lastObject
addSwitchRecordWithHistoryEntry:
indexSetWithIndexesInRange:
removeObjectsAtIndexes:
truncateSwitchRecords
deviceIDAtSwitchIndex:date:
initWithHistoryEntries:
initWithProtobuf:
decodeInt64ForKey:
decodeInt32ForKey:
protobuf
index
setIndex:
setDiff:
stateAtIndex:
dateFormatter:
prefixLinesWithString:withText:
initWithHistory:index:date:diff:switchIndex:
historyManager
setHistoryManager:
_date
_diff
_switchIndex
_historyManager
_index
orderedSet
decodeObjectOfClasses:forKey:
_createIndex
_truncateHistory
numberWithUnsignedLongLong:
_mostRecentStateBefore:
longLongValue
_updateHistoryCachesWithIndex:
_findIndexInHistoryStateCache:type:
pruneStateCacheItems:
removeLastObject
timeIntervalSinceDate:
removeObjectsInRange:
switchDeviceIDFromDiff:
notifyHistoryObserversWithEntry:
historyEntryAtIndex:
isEqualToHistory:
mutableCopyWithZone:
dirty
purgeWorkingSet
nextIndex
deviceCollection
history
setHistory:
historyStateCache
setHistoryStateCache:
historyStateCacheMRU
setHistoryStateCacheMRU:
historyStateCacheIndex
setHistoryStateCacheIndex:
_maxHistoryDepth
_atomicDirty
_observerLock
_cacheLock
_deviceCollection
_history
_historyStateCache
_historyStateCacheMRU
_historyStateCacheIndex
unarchiveDeviceHistory
createMissingDates:
_loadAndNotifySecureProperties
_startQueue
_notifyObserversSecurePropertiesAreAvailableWithCollection:secureProperties:
unarchiveSecureProperties
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
archiveSecureProperties:
archiveDeviceHistory:
_removeUnreferencedSecureProperties
allSecurePropertyIDs
removeSecureProperty:
_persistCollection:secureProperties:
_notifyDiffIndexObserversWithHistoryEntry:deviceCollection:secureProperties:
_notifyDiffObserversWithDiff:deviceCollection:secureProperties:
keyBagStatusChangedNotificationToken
setKeyBagStatusChangedNotificationToken:
_keyBagStatusChangedNotificationToken
hasEntitlement:
hasEntitlements
registryDelegate
_hasInternalEntitlement
entitlements
requireAnEntitlement
setHasIndex:
hasIndex
setHasDate:
hasDate
hasDiff
_supportsWatch
enqueueForReadAsync:
getReferencedSecurePropertyIDsFromDiff:
dictionaryWithCapacity:
readNotifyToken:
enqueueForRead:bypassSuspend:
enqueueForReadAsync:bypassSuspend:
addDiffObserverWithWriteBlock:
removeDiffObserver:
addSecurePropertiesObserverWithReadBlock:
removeSecurePropertiesObserver:
queueCollection
_registryDiffObservers
_registrySecurePropertyObservers
_collectionLock
_readerWriterDispatch
_queueRunning
_collection
_secureProperties
_managementQueue
_queueCollection
hasEntitlement:withBitmask:
shouldMonitorProxy:forSuspension:
initWithConnection:delegate:xpcTarget:entitlementBitmask:
setMonitorClientForSuspension:
monitorClientForSuspension
_entitlementBitmask
_monitorClientForSuspension
_appPath
setWithObject:
nr_secureUnarchiveObjectOfClasses:withFile:
nr_secureArchivedDataWithRootObject:
writeToFile:options:error:
findPairedDateForDeviceID:inHistory:
initWithDiffPropertyDiffs:
initWithDeviceCollectionDiffDeviceDiffs:
nr_secureArchiveRootObject:toFile:
UUID
initWithPropertyString:
_uuid
allKeys
setByAddingObjectsFromSet:
securePropertyForID:
storeSecureProperty:
forceWriteSecurePropertyID:withValue:
_IDToProperty
_propertyToID
_dirtyQueue
_dirty
dataWithLength:
NRSHA256:
dataWithRandomBytesOfSize:
_createIndex:
names
properties
unpackPropertyValue:
setNames:
setProperties:
compare:options:
sortedArrayUsingComparator:
stringByPaddingToLength:withString:startingAtIndex:
propertyForName:
setProperty:forName:
removePropertyForName:
allPropertyNames
setProtobuf:
_protobuf
_properties
hasDeviceIDBytes
setHasSwitchIndex:
hasSwitchIndex
_dateTimeInterval
_deviceIDBytes
hasName
hasID
hasAdvertisedName
_advertisedName
setHasCompressed:
hasCompressed
hasPossiblyCompressedData
_possiblyCompressedData
_compressed
weakObjectsHashTable
_init
startObservingToken
stopObservingToken
notifyObserversWithTokenValue:
activeDeviceAssertionStateDidChange
hasActiveAssertion
addObserver:
setObservers:
workQueue
setWorkQueue:
assertionToken
setAssertionToken:
_workQueue
_assertionToken
addDiffs:
diffsCount
clearDiffs
diffsAtIndex:
diffsType
diffs
setDiffs:
_diffs
_notifyClients
xpcListenerClass
initWithProxyClass:xpcListenerClass:serverDelegate:xpcTarget:services:
sentLaunchUpdate
setSentLaunchUpdate:
_dumpSecureProperties:propertyIDList:
setProcessName:
enumerateClientProxies:
xpcServer:proxyWillConnect:
xpcServer:proxyDidDisconnect:
xpcServer:proxyDidSuspend:
xpcServer:proxyDidResume:
registryServer
setRegistryServer:
devicesUpdateCounterNotifyToken
setDevicesUpdateCounterNotifyToken:
_sentLaunchUpdate
_registryServer
_devicesUpdateCounterNotifyToken
setChangeType:
_changeType
diffCollectionDiffForPairingID:
allPairingIDs
diffDeviceDiffs
_diffDeviceDiffs
weakObjectsPointerArray
_fireChangeNotificationsForDiff:secureProperties:notify:
_updateSelfRetain
_notifySecurePropertiesWithCollection:secureProperties:
_queueFirePropertyObserversForProperty:fromValue:
propertyNames
stringByAppendingFormat:
queueAddPropertyObserver:forPropertyChanges:
objectForKey:
addPointer:
queueRemovePropertyObserver:forPropertyChanges:
removePointerAtIndex:
postNotification:withUserInfo:
arrayByAddingObjectsFromArray:
device:propertyDidChange:fromValue:
queueRegisterForPropertyChanges:withBlock:
queueUnregisterForPropertyChanges:withBlock:
_setValue:forProperty:
addPropertyObserver:forPropertyChanges:
removePropertyObserver:forPropertyChanges:
registerForPropertyChanges:withBlock:
unregisterForPropertyChanges:withBlock:
initWithQueue:
setValue:forProperty:
setPairingID:
registry
setRegistry:
oldPropertiesForChangeNotifications
setOldPropertiesForChangeNotifications:
promiscuousObservers
setPromiscuousObservers:
changeBlocks
setChangeBlocks:
promiscuousChangeBlocks
setPromiscuousChangeBlocks:
_pairingID
_registry
_oldPropertiesForChangeNotifications
_promiscuousObservers
_changeBlocks
_promiscuousChangeBlocks
companionSeed
clearCompanionSeed
setWithSet:
unionSet:
packPropertyValue:
setWithObjects:
substringFromIndex:
setDateFormat:
stringFromDate:
componentsJoinedByString:
nameCounter:
setHasChangeType:
hasChangeType
changeTypeAsString:
StringAsChangeType:
setDevice:forPairingID:
removeDeviceForPairingID:
setDeviceCollection:
childMap
setChildMap:
_childMap
_processName
scanForEntitlementsWithConnection:
_proxyDidDisconnect:
_addAppToMonitorWithProxy:
_removeAppFromMonitorWithProxy:
initWithBundleIDs:states:
intValue
setHandler:
updateInterestedBundleIDs:
applicationInfoForPID:completion:
_resume
_suspend
_xpcListener
_remoteObjectInterface
_machServiceName
_proxies
_appToProxy
_monitor
_serverDelegate
_xpcTarget
_entitlements
_entitlementRequired
_listenerSuspended
_listenerInvalidated
_proxyClass
_services
_xpcIncomingMessageQueue
_diffsToChangeActiveDeviceToDeviceID:
objCType
unsignedIntValue
unsignedLongLongValue
shortValue
unsignedShortValue
charValue
unsignedCharValue
unsignedIntegerValue
numberWithShort:
numberWithUnsignedChar:
numberWithChar:
numberWithUnsignedInt:
valueWithSize:
nr_secureUnarchiveObjectOfClasses:withData:
archivedDataWithRootObject:requiringSecureCoding:error:
nr_secureArchiveRootObject:toFile:withOptions:
stringByDeletingLastPathComponent
removeItemAtPath:error:
_readConnectivityStatus
dropoutCounter
connected
getDropoutCounter:
setConnected:
setDropoutCounter:
_connected
_dropoutCounter
addNames:
namesCount
clearNames
namesAtIndex:
namesType
_names
device
identifier
setIdentifier:
setIsActive:
setDevice:
_isActive
_identifier
_device
dataWithContentsOfFile:options:error:
initForReadingFromData:error:
finishDecoding
setHasEventType:
hasEventType
hasTermsText
hasDocumentationID
hasPresentationReason
setHasPresentationLocation:
hasPresentationLocation
hasAcknowledgedDeviceName
hasAcknowledgedDeviceSerialNumber
hasDisplayDeviceName
hasDisplayDeviceSerialNumber
setHasEventDate:
hasEventDate
hasLoggingProcessName
eventType
termsText
documentationID
presentationReason
presentationLocation
acknowledgedDeviceName
acknowledgedDeviceSerialNumber
displayDeviceName
displayDeviceSerialNumber
eventDate
loggingProcessName
_eventDate
_acknowledgedDeviceName
_acknowledgedDeviceSerialNumber
_displayDeviceName
_displayDeviceSerialNumber
_documentationID
_eventType
_loggingProcessName
_presentationLocation
_presentationReason
_termsText
reason
enqueueBlock:
enqueueBlockAsync:
enqueueBypassBlock:
enqueueBypassBlockAsync:
assertOnQueue
_suspendableQueue
_bypassQueue
diffPropertyDiffForName:
diffPropertyDiffs
_diffPropertyDiffs
addProperties:
propertiesCount
clearProperties
propertiesAtIndex:
propertiesType
addRecords:
recordsCount
clearRecords
recordsAtIndex:
recordsType
setRecords:
_records
DeviceRegistry.state
history.plist
MigrationRoutingSlip.archive
ClassAFile.txt
historySecureProperties.plist
UDIDChangeTracker.plist
recoveryManager-%@.plist
recoveryState.bin
stateMachine-%@.plist
activeStateMachine.plist
DeviceRegistry
properties.bin
state.bin
secureProperties.bin
DeviceRegistry.dontBackUp
deleteMeToUnpair2
com.apple.nanoregistry.termsacknowledgementregistry
termsDigest
termsCache
.termsText
Not Set
Accepted
Rejected
Displayed
Retrieved
Grandfathered
NRTermsEvent[%@] "%@": digest(%@) docID(%@) process(%@) displayDeviceName(%@) acknowlegedDeviceName(%@) presentationReason(%@)
nanoregistryd
DeviceName
SerialNumber
supportsSecureCoding
TB,R
T@"NSString",&,N,V_termsDigest
writable
TB,N,V_writable
v4@?0
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
NRTermsAcknowledgementRegistryErrorCodeCommunicationsFailure
NRTermsAcknowledgementRegistryErrorCodeNotPaired
NRTermsAcknowledgementRegistryErrorCodeFailedToVerifyTerms
NRTermsAcknowledgementRegistryErrorCodeArchivingValidation
NRTermsAcknowledgementRegistryErrorCodeInternalError
NRTermsAcknowledgementRegistryErrorCodeNotWriteable
NRTermsAcknowledgementRegistryErrorCodeDeviceMetadataMismatch
NRTermsAcknowledgementRegistryErrorCodeStaleEvent
NRTermsAcknowledgementRegistryErrorCodeNotActiveDevice
NRTermsAcknowledgementRegistryErrorCodeWatchNotConnected
NRTermsAcknowledgementRegistryErrorCodeNoTermsText
connection
T@"NSXPCConnection",R,N
proxy
T@"<NRTermsAcknowledgementRegistry>",R,N,V_proxy
(unknown)
target
T@,W,N,V_target
T@,&,N,V_proxy
com.apple.nanoregistry.mockxpc.stuff
mockListeners
T@"NSMutableDictionary",&,N,V_mockListeners
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
PID_%ld
exportedInterface
T@"NSXPCInterface",&,N
exportedObject
T@,&,N
remoteObjectInterface
remoteObjectProxy
T@,R,&,N
interruptionHandler
T@?,C,N
invalidationHandler
processIdentifier
Ti,R,N
processName
T@"NSString",R,&,N
delegate
T@"<NRNSXPCListenerDelegate>",&,N
com.apple.nanoregistry.mockxpclistener.%@.serverservice%p
server
NSXPCConnectionInterrupted: Make sure mock server is running
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
serverConnection
T@"NRMockServerNSXPCConnection",R,N
invalidated
TB,R,N,V_invalidated
T@"NSXPCInterface",&,N,V_exportedInterface
T@,&,N,V_exportedObject
T@?,C,N,V_interruptionHandler
T@?,C,N,V_invalidationHandler
client%ld
NSXPCConnectionInvalid: Did mock client stop running?
com.apple.nanoregistry.mockxpclistener.%@
name
T@"NSString",R,N,V_name
T@"<NRNSXPCListenerDelegate>",&,N,V_delegate
com.apple.nanoregistry.pdq.reader%ld
com.apple.nanoregistry.pdq.writer
pairingID
isPaired
isActive
advertisedName
color
bluetoothMACAddress
WIFIMACAddress
totalStorage
systemVersion
serialNumber
productType
chipID
homeButtonType
systemName
marketingProductName
systemBuildVersion
localPairingDataStorePath
localizedModel
regionCode
regionInfo
modelNumber
hwModelStr
buildString
UDID
screenSize
class
enclosureColor
enclosureMaterial
SEID
additionalSEIDs
Dmin
marketingHardwareBehavior
marketingHardwareBehaviorSubBrand
greenTea
signingFuse
screenScale
pairingCompatibilityVersion
maxPairingCompatibilityVersion
minPairingCompatibilityVersion
deviceNameString
currentUserLocale
preferredLanguages
pairedDate
marketingVersion
IMEI
MEID
mainScreenWidth
mainScreenHeight
isInternalInstall
lastActiveDate
lastInactiveDate
pairedDeviceCount
hasSEP
hasSecureElement
deviceCoverGlassColor
deviceHousingColor
deviceBackingColor
isArchived
migrationConsent
migrationConsentDate
fractionCompleted
basebandRegionSKURadioTechnology
wifiAntennaSKUVersion
CPUType
CPUSubType
mainScreenClass
statusCode
compatibilityState
lastPairingError
bluetoothPaired
remoteUnpairingStarted
bogusDevice
capabilities
_RSSI
_bluetoothIdentifier
_migrationIDSCloudIdentifier
_advertisingIdentifierSeed
_migrationCount
com.apple.nanoregistry.pairedsync.isokaytosync
gizmoPairingVersion
obliterate
brick
store
_keychainOff
_lastRSSIUpdate
com.apple.nanoregistry.watchsetuppush
com.apple.nanoregistry.migrationconsentrequested
com.apple.nanoregistry.migrationshowfakesync
com.apple.nanoregistry.migrationconsentexpired
com.apple.nanoregistry.NRDemoModeNotifyNotification
%@ %@
startIndex
history
switchRecords
hasStartIndex
TB,N
Tq,N,V_startIndex
historys
T@"NSMutableArray",&,N,V_historys
hasSwitchRecords
TB,R,N
T@"NRPBSwitchRecordCollection",&,N,V_switchRecords
v12@?0@"NRMutableDeviceCollection"4@"NRSecureDevicePropertyStore"8
@"NRDeviceCollectionDiff"12@?0@"NRMutableDeviceCollection"4@"NRSecureDevicePropertyStore"8
v12@?0@"NRDeviceCollectionHistory"4@"NRSecureDevicePropertyStore"8
@"NRDeviceCollectionDiff"12@?0@"NRDeviceCollectionHistory"4@"NRSecureDevicePropertyStore"8
com.apple.nano.nanoregistry.paireddeviceregistry
com.apple.nano.nanoregistry.pairunpairobliterate
v8@?0@"NSError"4
reason=%@
ignoreSharingdRequestsToAbortPairing
com.apple.NanoRegistry
com.apple.sharingd.
deviceID=%@ options=%@
com.apple.nano.nanoregistry.unpairwithbrick
BDE85C67-0FDD-4A95-A9B9-3CB5DD0C06A2
com.apple.nanoregistry.BDE85C67-0FDD-4A95-A9B9-3CB5DD0C06A2
deviceID=%@
v12@?0@"NSError"4@"NSString"8
assertionID=%@
com.apple.nano.nanoregistry.internal
v12@?0@"NSUUID"4@"NSArray"8
com.apple.nano.nanoregistry.ids.plugin
v8@?0B4
v8@?0@"NSData"4
v8@?0@"NSString"4
com.apple.nanoregistry.unlock.assertion.test.5FB2508F-9F17-42C2-90A4-03E7817791D9
v24@?0B4d8d16
v12@?0B4@"NSError"8
com.apple.nanoregistry.NRDevicesUpdateCounterNotifyNotification
com.apple.demo-settings
StoreDemoMode
FProgramNumber
block
T@?,C,N,V_block
updateCounter
TQ,N,V_updateCounter
v8@?0i4
com.apple.nanoregistry.registryclient.clientupdatingregistry
v20@?0Q4Q12
v12@?0Q4
v20@?0@"NRMutableDeviceCollection"4@"NRSecureDevicePropertyStore"8Q12
v8@?0@"NSDictionary"4
v24@?0@"NRDeviceCollectionDiff"4@"NSDictionary"8B12Q16
v12@?0@"NRDeviceCollectionDiff"4@8
T@"<NRNSXPCConnectionProtocol>",&,N,V_connection
devicesUpdateCounterNotifyToken_dispatch
Ti,N,V_devicesUpdateCounterNotifyToken_dispatch
devicesUpdateCounterNotifyToken_check
Ti,N,V_devicesUpdateCounterNotifyToken_check
lastDevicesUpdateCounterNotifyTokenValue
TQ,N,V_lastDevicesUpdateCounterNotifyTokenValue
tokenValue
TQ,N,V_tokenValue
outstandingRegistryQuery
TB,N,V_outstandingRegistryQuery
backoffDuration
TI,N,V_backoffDuration
registryQueryCompletionBlockEntries
T@"NSMutableArray",&,N,V_registryQueryCompletionBlockEntries
devicesUpdateCounter
TQ,R,N
rawConnection
T@"<NRNSXPCConnectionProtocol>",R,&,N
stringValue
numberValue
UUIDValue
dataValue
sizeValue
dictionaryKey
arrayValues
isSet
isSecurePropertyValue
isDate
isError
isMiniUUIDSet
hasStringValue
T@"NSString",&,N,V_stringValue
hasNumberValue
T@"NRPBNumber",&,N,V_numberValue
hasUUIDValue
uUIDValue
T@"NSData",&,N,V_uUIDValue
hasDataValue
T@"NSData",&,N,V_dataValue
hasSizeValue
T@"NRPBSize",&,N,V_sizeValue
hasDictionaryKey
T@"NRPBPropertyValue",&,N,V_dictionaryKey
T@"NSMutableArray",&,N,V_arrayValues
hasIsSet
TB,N,V_isSet
hasIsSecurePropertyValue
TB,N,V_isSecurePropertyValue
hasIsDate
TB,N,V_isDate
hasIsError
TB,N,V_isError
hasIsMiniUUIDSet
TB,N,V_isMiniUUIDSet
T@"NSUUID",R,N
migratable
XPC failure
already paired with device
multiple device pairing not supported
device not in idle state- check to make sure you are paired or unpaired as expected, and that NanoRegistry is not busy pairing or unpairing
unknown device
internal error
bluetooth connect timeout
bluetooth pairing failure
lost xpc connection to client
bluetooth turned off
xpc nano pairing request timeout
Nano Registry restarted
bluetooth pair complete timeout
IDS connect timeout
initial property exchange timeout
unpair request from peer via IDS
pair or unpair request via XPC
activation failed
daemon enable failure
pairing aborted by client
entitlement missing
busy pairing or unpairing
initial property send failure
timed out waiting to unpair bluetooth devices
gizmo state change request failed to send
companion version is too old for gizmo
pairing client suspended or terminated
disk full can't write state files
incorrect PIN entered on phone
abort pairing user requested
restriction
passcode entry timeout
bluetooth discovery timeout
IDS local pairing API failure
switch failed due to active assertion
configure state requested when devices are incompatible
paired device not compatible with quick switch
Error managing key
File error
Conditions unmet to allow for a MagicSwitch
error %ld missing error string
com.apple.nanoregistry.pairingerror
englishMessage
ProductName
ProductVersion
Watch OS
watchOS
iPhone OS
data
observer
T@?,C,N,V_observer
parentDelegate
T@"<NRMutableStateParentDelegate>",W,N
T@"<NRMutableStateParentDelegate>",W,N,V_parentDelegate
failure unarchiving %@
%@ is nil
%@ is class %@ expected one of %@
Mini Capabilities: 
T@"NSData",&,N,V_data
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
width
height
Tf,N,V_width
Tf,N,V_height
int32Value
floatValue
doubleValue
boolValue
int64Value
isUnsigned
isShortOrChar
hasInt32Value
Ti,N,V_int32Value
hasFloatValue
Tf,N,V_floatValue
hasDoubleValue
Td,N,V_doubleValue
hasBoolValue
TB,N,V_boolValue
hasInt64Value
Tq,N,V_int64Value
hasIsUnsigned
TB,N,V_isUnsigned
hasIsShortOrChar
TB,N,V_isShortOrChar
Minimum pairing compatibility version
mobile
Ti,N,V_pairingCompatibilityVersion
Ti,N,V_maxPairingCompatibilityVersion
Ti,N,V_minPairingCompatibilityVersion
minQuickSwitchCompatibilityVersion
Ti,N,V_minQuickSwitchCompatibilityVersion
isOverrideActive
TB,N,V_isOverrideActive
device
passcode
OOBKey
error
pairingStorePath
previousDevice
NRDeviceDiscoveryControllerDidDiscoverDevice
NRPairedDeviceRegistryDeviceDidBeginPairingNotification
NRPairedDeviceRegistryDeviceDidPairNotification
NRPairedDeviceRegistryDeviceDidFailToPairNotification
NRPairedDeviceRegistryDeviceDidUnpairNotification
NRPairedDeviceRegistryStatusDidChange
NRPairedDeviceRegistryPairingStorePathDidChangeNotification
NRPairedDeviceRegistryDeviceNeedsPasscode
NRPairedDeviceRegistryDeviceOOBKeyDidChange
NRPairedDeviceRegistryDeviceDidBeginActivation
NRPairedDeviceRegistryRemoteUnpairingDidBeginNotification
NRPairedDeviceRegistryDeviceDidEnterCompatibilityStateNotification
NRPairedDeviceRegistryDevicesDidUpdateNotification
NRPairedDeviceRegistryDeviceDidReceiveBTPairingRequestNotification
NRPairedDeviceRegistryDeviceDidBecomeActive
NRPairedDeviceRegistryDeviceDidBecomeInactive
com.apple.nanoregistry.deviceispairinglinkisup
com.apple.nanoregistry.devicedidpair
com.apple.nanoregistry.devicedidunpair
com.apple.nanoregistry.remoteunpairingbeginning
com.apple.nanoregistry.restarted
com.apple.nanoregistry.paireddevicedidchangeversion
com.apple.nanoregistry.paireddevicedidchangecapabilities
com.apple.nanoregistry.watchdidbecomeactive
migrationKeyRevision
NRPairedDeviceRegistryLaunchedByNanoRegistry
NRPairedDeviceRegistryAbortPairingUserRequested
regulatoryModelNumber
Setup
Bridge
magicswitchd
pairtool
com.apple.nanoregistry.registry.legacydevicefirst
com.apple.nanoregistry.registry.legacydevice
v28@?0@"NRDeviceCollectionDiff"4@"NRMutableDeviceCollection"8@"NRSecureDevicePropertyStore"12@16Q20
v8@?0@"NRDeviceCollectionHistory"4
v8@?0@"NSArray"4
previousDeviceID
v16@?0@"NSUUID"4I8@"<NSObject><NSCopying>"12
v16@?0@"NRMutableDeviceCollection"4@"NRSecureDevicePropertyStore"8@"NSDictionary"12
B8@?0@"NRDevice"4
v12@?0@"NSString"4@"NSUUID"8
v8@?0L4
v12@?0@"NSUUID"4@"NSDate"8
v12@?0B4@"NRWatchPairingExtendedMetadata"8
legacyDevices
T@"NSMutableDictionary",&,N,V_legacyDevices
legacyDevicesQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_legacyDevicesQueue
legacyDevicesQueueFirst
T@"NSObject<OS_dispatch_queue>",&,N,V_legacyDevicesQueueFirst
lastStatus
TI,N,V_lastStatus
lastCompatibilityState
TS,N,V_lastCompatibilityState
waitingToPairBlocks
T@"NSMutableArray",&,N,V_waitingToPairBlocks
status
TI,R,N
i12@?0@4@8
devices
T@"NSArray",R,N
UniqueDeviceID
migrationIsAvailable
devicesExpectedToBeMigratableAfterRestore
T@"NSArray",R,&,N
migratableDevicesRequiringConsent
migratableDevices
migratingDevice
T@"NRDevice",R,&,N,V_migratingDevice
119C9267-C24D-4FC3-8FE9-2D394943F2E6
_ShowInternalAutomationUI
com.apple.nanobuddy.automationhelper
NRPairedDeviceRegistryStatusCode UNKNOWN
NRPairedDeviceRegistryStatusCodeInvalid
NRPairedDeviceRegistryStatusCodeReady
NRPairedDeviceRegistryStatusCodeUnpairing
NRPairedDeviceRegistryStatusCodePairing
NRPairedDeviceRegistryStatusCodeSwitching
NRPairedDeviceRegistryStatusCodeMigrating
{ chipID = %ld productType = "%@" postFailsafeObliteration = "%s" }
Ti,N,V_chipID
T@"NSString",&,N,V_productType
postFailsafeObliteration
TB,N,V_postFailsafeObliteration
requestType
T@"NSString",&,N,V_requestType
timebaseInfo
T{mach_timebase_info=II},N,V_timebaseInfo
startTime
Td,N,V_startTime
submitted
TB,N,V_submitted
value
hasValue
T@"NRPBPropertyValue",&,N,V_value
pairingIDs
T@"NSMutableArray",&,N,V_pairingIDs
T@"NSMutableArray",&,N,V_devices
phoneUDIDHash
hasPhoneUDIDHash
T@"NSData",&,N,V_phoneUDIDHash
index
date
diff
switchIndex
switchRecordCollection
activeDeviceID
T@"NSUUID",&,N
T@"NSDate",&,N
%06lld: %@ (switch=%u)
(null)
historyManager
T@"NRDeviceCollectionHistory",W,N,V_historyManager
TQ,N,V_index
T@"NSDate",&,N,V_date
T@"NRDeviceCollectionDiff",&,N,V_diff
TL,N,V_switchIndex
state
T@"NRMutableDeviceCollection",R,N
protobuf
T@"NRPBDeviceCollectionHistoryEntry",R,N
TQ,N,V_startIndex
T@"NSMutableArray",&,N,V_history
T@"NRSwitchRecordCollection",&,N,V_switchRecords
historyStateCache
T@"NSMutableDictionary",&,N,V_historyStateCache
historyStateCacheMRU
T@"NSMutableArray",&,N,V_historyStateCacheMRU
historyStateCacheIndex
T@"NSMutableArray",&,N,V_historyStateCacheIndex
deviceCollection
T@"NRMutableDeviceCollection",R,N,V_deviceCollection
count
nextIndex
dirty
TL,R,N
T@"NRPBDeviceCollectionHistory",R,N
NRRegistryHistoryStoreShouldInitializeWithFirstUnlockStatus
v12@?0@"NRDeviceCollectionHistoryEntry"4@8
T@"NRDeviceCollectionHistory",&,N,V_history
keyBagStatusChangedNotificationToken
Ti,N,V_keyBagStatusChangedNotificationToken
com.apple.bluetoothregistry
com.apple.nano.nanoregistry
com.apple.nano.nanoregistry.applydiff
com.apple.nanoregistry.registry
entitlement required
hasIndex
Tq,N,V_index
hasDate
Td,N,V_date
hasDiff
T@"NRPBDeviceCollectionDiff",&,N,V_diff
NRRegistryShouldCreateCollection
NRRegistryPlatformSupportsWatch
com.apple.nanoregistry.registry.managementqueue
IsUIBuild
DeviceClass
Watch
watch-companion
com.apple.nanoregistry.registry.updating
managementQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_managementQueue
collection
T@"NRMutableDeviceCollection",&,N,V_collection
queueCollection
T@"NRMutableDeviceCollection",&,N,V_queueCollection
secureProperties
T@"NRSecureDevicePropertyStore",&,N,V_secureProperties
appPath
T@"NSString",R,N,V_appPath
T@,R,N,V_target
T@,R,N
T@"<NRNSXPCConnectionProtocol>",R,N,V_connection
monitorClientForSuspension
TB,N,V_monitorClientForSuspension
UUID
secure property UUID
Secure property ID: 
properties
com.apple.nanoregistry.nrsecuredevicepropertystore.dirtyqueue
NRSecureDevicePropertyStore property dictionary
%@: is %@
clean
%@ = %@
TB,R,N,V_dirty
NRSHA256
T@"NSData",R,N
device property key
device property value
device properties dictionary
T@"NSMutableDictionary",&,N,V_properties
T@"NRPBMutableDevice",&,N,V_protobuf
deviceIDBytes
dateTimeInterval
hasDeviceIDBytes
T@"NSData",&,N,V_deviceIDBytes
hasDateTimeInterval
Td,N,V_dateTimeInterval
hasSwitchIndex
Ti,N,V_switchIndex
hasName
T@"NSString",&,N,V_name
hasID
T@"NSData",&,N,V_iD
hasAdvertisedName
T@"NSString",&,N,V_advertisedName
compressed
possiblyCompressedData
hasCompressed
TB,N,V_compressed
hasPossiblyCompressedData
T@"NSData",&,N,V_possiblyCompressedData
com.apple.NanoRegistry.NRActiveDeviceAssertion
com.apple.NanoRegistry.NRActiveDeviceAssertionMonitor
observers
T@"NSHashTable",&,N,V_observers
workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
assertionToken
Ti,N,V_assertionToken
hasActiveAssertion
diffs
T@"NSMutableArray",&,N,V_diffs
Watch1
Watch2
Watch3
v20@?0@"NRDeviceCollectionDiff"4@"NRMutableDeviceCollection"8@"NRSecureDevicePropertyStore"12@16
v16@?0@"NRMutableDeviceCollection"4@"NRSecureDevicePropertyStore"8@12
v8@?0@"NRXPCProxy"4
secure data unavailable
registryServer
T@"NRXPCServer",&,N,V_registryServer
devicesUpdateCounterNotifyToken
Ti,N,V_devicesUpdateCounterNotifyToken
sentLaunchUpdate
TB,N,V_sentLaunchUpdate
deviceDiff
changeType
[DELETED]
[CREATED]
[UPDATED]
T@"NRDeviceDiff",R,N,V_diff
TI,R,N,V_changeType
T@"NRPBDeviceDiffType",R,N
device collection diff type key
device collection diff type value
device collection diff type
i12@?0@"NSUUID"4@"NSUUID"8
diffDeviceDiffs
T@"NSDictionary",R,N,V_diffDeviceDiffs
T@"NRPBDeviceCollectionDiff",R,N
NRDevice: 
%@="%@" 
v12@?0I4@"<NSObject><NSCopying>"8
registry
T@"NRRegistry",&,N,V_registry
T@"NSUUID",&,N,V_pairingID
oldPropertiesForChangeNotifications
T@"NSMutableDictionary",&,N,V_oldPropertiesForChangeNotifications
T@"NSMutableDictionary",&,N,V_observers
promiscuousObservers
T@"NSPointerArray",&,N,V_promiscuousObservers
changeBlocks
T@"NSMutableDictionary",&,N,V_changeBlocks
promiscuousChangeBlocks
T@"NSMutableArray",&,N,V_promiscuousChangeBlocks
AdvertisingIdentifierSeed
property value
T@"<NSObject><NSCopying>",R,&,N,V_value
T@"NRPBMutableDeviceProperty",&,N,V_protobuf
MM-dd-yyyy HH:mm:ss.SSS
%@ %ld
%@ 1
unknown
hasChangeType
Ti,N,V_changeType
T@"NRPBDeviceDiff",&,N,V_diff
NRDiffTypeCreated
NRDiffTypeUpdated
NRDiffTypeDeleted
(unknown: %i)
device collection dictionary key
device collection dictionary value
device collection dictionary
T@"NSMutableDictionary",&,N,V_deviceCollection
childMap
T@"NSMutableDictionary",&,N,V_childMap
T@"NRPBMutableDeviceCollection",&,N,V_protobuf
T@"NSString",C,N,V_processName
com.apple.nanoregistry.nrxpcserver.managementqueue
com.apple.nanoregistry.nrxpcserver.incomingmessagequeue
not 
v12@?0I4@"NSString"8
activeDevice
T@"NRMutableDevice",R,N
TB,R,N,Gpaired
{CGSize=ff}
T@"<NSObject><NSCopying>",R,N,V_value
T@"NRPBDevicePropertyDiff",R,N
framework
daemon
root_daemon
pairing_reporter
magic_switch
com.apple.nanoregistry.dropoutcounter
connected
TB,N,V_connected
dropoutCounter
TQ,N,V_dropoutCounter
names
T@"NSMutableArray",&,N,V_names
com.apple.nanoregistry.activeDeviceAssertion.%p
<%@: %p; isActive = %d; identifier = %@; pairingID = %@>
identifier
T@"NSString",C,N,V_identifier
TB,N,V_isActive
T@"NRDevice",&,N,V_device
eventType
termsText
documentationID
presentationReason
presentationLocation
acknowledgedDeviceName
acknowledgedDeviceSerialNumber
displayDeviceName
displayDeviceSerialNumber
eventDate
loggingProcessName
hasEventType
Ti,N,V_eventType
hasTermsText
T@"NSData",&,N,V_termsText
hasDocumentationID
T@"NSString",&,N,V_documentationID
hasPresentationReason
T@"NSString",&,N,V_presentationReason
hasPresentationLocation
Ti,N,V_presentationLocation
hasAcknowledgedDeviceName
T@"NSString",&,N,V_acknowledgedDeviceName
hasAcknowledgedDeviceSerialNumber
T@"NSString",&,N,V_acknowledgedDeviceSerialNumber
hasDisplayDeviceName
T@"NSString",&,N,V_displayDeviceName
hasDisplayDeviceSerialNumber
T@"NSString",&,N,V_displayDeviceSerialNumber
hasEventDate
Td,N,V_eventDate
hasLoggingProcessName
T@"NSString",&,N,V_loggingProcessName
class=%@ code=%lld domain=%@
class=%@ name=%@ reason=%@
apple-internal-install
com.apple.nanoregistry.bypass.queue
com.apple.nanoregistry.suspendable.queue
propertyDiff
T@"NRDevicePropertyDiff",R,N,V_diff
T@"NRPBDevicePropertyDiffType",R,N
device property diff type
device property diff type key
device property diff type property
diffPropertyDiffs
T@"NSDictionary",R,N,V_diffPropertyDiffs
T@"NRPBDeviceDiff",R,N
T@"NSMutableArray",&,N,V_properties
records
T@"NSMutableArray",&,N,V_records
T@"NRPBDevicePropertyDiff",&,N,V_diff
NRDataFilePaths
NRTermsEvent
NSSecureCoding
NSCoding
NRTermsAcknowledgementRegistry
NSObject
NRMockXPCProxy
NRLoggingXPCProxy
NRMockXPCStuff
NRNSXPCConnection
NRNSXPCConnectionProtocol
NRNSXPCListener
NSXPCListenerDelegate
NRNSXPCListenerProtocol
NRMockClientNSXPCConnection
NRMockServerNSXPCConnection
NRMockNSXPCListener
NRReadWriteConcurrentQueue
NRPBDeviceCollectionHistory
NSCopying
sync
sync_history
NRPairedDeviceRegistryXPCDaemonDelegate
NRXPCRegistryDelegate
NRXPCPairingDelegate
NRPairedDeviceRegistryXPCFrameworkDelegate
NRPairingProxy
NRRegistryQueryCompletionBlockEntry
NRRegistryClient
NRMockRegistryClient
NRPBPropertyValue
Diffs
NRMutableStateBaseObserverWrapper
NRMutableStateBase
NRMutableStateProtocol
NRMutableStateObserverProtocol
NRMutableStateParentProtocol
NRDiffBase
NRDiffProtocol
NRUnarchivedObjectVerifier
NRMiniUUIDSet
NRPBSize
NRPBNumber
NRBlockQueueWrapper
NRPairingCompatibilityVersionInfo
NRPairedDeviceRegistry
NRDeviceDiscoveryController
NRMigrator
migration
NRWatchPairingExtendedMetadata
NRServerRequestReporter
NRPBMutableDeviceProperty
NRPBMutableDeviceCollection
NRPBMigrationDevices
NRSwitchRecord
NRSwitchRecordCollection
NRDeviceCollectionHistoryEntry
NRDeviceCollectionHistoryObserverWrapper
NRDeviceCollectionHistory
NRMutableStateParentDelegate
NSFastEnumeration
NRRegistryHistoryStore
NRRegistryProxy
NRPBDeviceCollectionHistoryEntry
NRRegistry
NRXPCProxy
NRDataFileHistoryHelpers
NRSecureDevicePropertyID
NRSecureDevicePropertyStore
NRUtils
NRMutableDevice
NRPBSwitchRecord
NRPBProperty
NRPBMigrationDeviceInfo
NRPBCompressedData
NRActiveDeviceAssertionMonitor
NRPBDeviceCollectionDiff
NRRegistryServer
NRXPCServerDelegate
NRMockRegistryServer
NRDeviceDiffType
NRDeviceCollectionDiff
NRKeyedUnarchiver
NRDevice
NRMagicSwitchHelper
NRMutableDeviceProperty
NRTextFormattingUtilities
NRPBDeviceDiffType
NRMutableDeviceCollection
NRClientInfo
NRXPCServer
NRNSXPCListenerDelegate
NRXPCProxyDelegate
NRPBDevicePropertyDiff
NRDevicePropertyDiff
NRSecure
NRConnectivitySubscriber
NRPBDeviceDiff
NRActiveDeviceAssertion
NRPBTermsEvent
NRSafeDescription
NRBypassQueue
NRDevicePropertyDiffType
NRDeviceDiff
NRPBMutableDevice
NRPBSwitchRecordCollection
NRPBDevicePropertyDiffType
NRDeviceCapabilities
@8@0:4
@12@0:4@8
B8@0:4
@12@0:4I8
v12@0:4@8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
v8@0:4
v12@0:4i8
v12@0:4I8
v16@0:4d8
v12@0:4B8
@"NSString"
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v20@0:4@8@12@?16
v20@0:4@"NRTermsEvent"8@"NSUUID"12@?<v@?@"NSError">16
v20@0:4@"NRTermsEvent"8@"NSUUID"12@?<v@?B@"NSError">16
@12@0:4@?8
@"<NRTermsAcknowledgementRegistry>"
@20@0:4@8@12B16
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@16@0:4@8I12
v12@0:4@?8
@?8@0:4
i8@0:4
@16@0:4@"NSString"8I12
@12@0:4@?<v@?@"NSError">8
@12@0:4@"NSString"8
v12@0:4@"NSObject<OS_dispatch_queue>"8
v12@0:4@?<v@?>8
@"NSXPCInterface"8@0:4
v12@0:4@"NSXPCInterface"8
@?<v@?>8@0:4
@"NSXPCConnection"
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
@"<NRNSXPCListenerProtocol>"12@0:4@"NSString"8
@"<NRNSXPCListenerDelegate>"8@0:4
v12@0:4@"<NRNSXPCListenerDelegate>"8
@"<NRNSXPCListenerDelegate>"
@12@0:4B8
@"NRMockServerNSXPCConnection"
@"NSXPCInterface"
@16@0:4@8@12
@"NRMockClientNSXPCConnection"
@"NRMockNSXPCListener"
v16@0:4@?8B12
v20@0:4@?8B12B16
@"NSMutableArray"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@12@0:4^{_NSZone=}8
v16@0:4q8
q8@0:4
@"NRPBSwitchRecordCollection"
{?="startIndex"b1}
v24@0:4Q8B16@?20
v16@0:4@8@?12
v16@0:4L8@?12
v20@0:4B8@12@?16
v12@0:4@?<v@?@"NRMutableDeviceCollection"@"NRSecureDevicePropertyStore"Q>8
v24@0:4Q8B16@?<v@?@"NRDeviceCollectionDiff"@"NSDictionary"BQ>20
v16@0:4@"NSSet"8@?<v@?@"NSDictionary">12
v12@0:4@?<v@?@"NRDeviceCollectionHistory">8
v12@0:4@?<v@?L>8
v16@0:4L8@?<v@?@"NSUUID"@"NSDate">12
v12@0:4@?<v@?@"NSArray">8
v20@0:4@"NRDeviceCollectionDiff"8@"NSDictionary"12@?<v@?@"NSError">16
v20@0:4B8@"NSUUID"12@?<v@?>16
v24@0:4@8@12@16@?20
v16@0:4S8@12
v16@0:4@8B12
v16@0:4@8@12
v20@0:4@8B12@?16
v28@0:4@8d12L20@?24
v20@0:4i8I12@?16
v24@0:4@"NSString"8@"NSData"12@"NSDictionary"16@?<v@?@"NSError">20
v20@0:4@"NSUUID"8@"NSDictionary"12@?<v@?@"NSError">16
v16@0:4@"NSString"8@?<v@?@"NSError">12
v16@0:4@"NSString"8@?<v@?>12
v16@0:4S8@"NSUUID"12
v16@0:4@"NSUUID"8B12
v16@0:4@"NSNumber"8@"NSUUID"12
v20@0:4@"NSUUID"8B12@?<v@?@"NSError">16
v16@0:4@"NSUUID"8@?<v@?@"NSError"@"NSString">12
v12@0:4@?<v@?@"NSUUID"@"NSArray">8
v16@0:4@"NSUUID"8@?<v@?@"NSError">12
v12@0:4@?<v@?@"NSError">8
v12@0:4@?<v@?@"NSData">8
v16@0:4@"NSData"8@?<v@?B>12
v28@0:4@"NSString"8d12L20@?<v@?>24
v20@0:4i8I12@?<v@?Bdd>16
v20@0:4@"NSUUID"8@"NSString"12@?<v@?>16
v12@0:4@?<v@?@"NSString">8
v16@0:4@"NSString"8@?<v@?B@"NRWatchPairingExtendedMetadata">12
v12@0:4@?<v@?B@"NSError">8
v16@0:4@"NSUUID"8@"NSNumber"12
v12@0:4@"NSData"8
@20@0:4Q8@?16
Q8@0:4
v16@0:4Q8
Q16@0:4Q8
v28@0:4@8@12@16Q20
v16@0:4B8@?12
v20@0:4Q8@?16
v28@0:4Q8Q16@?24
@"<NRNSXPCConnectionProtocol>"
@"NSData"
@"NRPBPropertyValue"
@"NRPBNumber"
@"NRPBSize"
{?="isDate"b1"isError"b1"isMiniUUIDSet"b1"isSecurePropertyValue"b1"isSet"b1}
@16@0:4B8@12
@16@0:4I8S12
@16@0:4@8@?12
@16@0:4@"NSObject<OS_dispatch_queue>"8@?<v@?@"<NRDiffProtocol>"@>12
@"<NRMutableStateParentDelegate>"8@0:4
v12@0:4@"<NRMutableStateParentDelegate>"8
@24@0:4@8B12B16B20
@"<NRDiffProtocol>"12@0:4@"<NRDiffProtocol>"8
@"<NRDiffProtocol>"24@0:4@"<NRDiffProtocol>"8B12B16B20
@"<NRDiffProtocol>"16@0:4@"<NRMutableStateProtocol>"8@"<NRMutableStateProtocol>"12
@"NSMutableSet"
@"<NRMutableStateParentDelegate>"
v20@0:4@8@12@16
v24@0:4@8@12@16@20
{vector<unsigned int, std::__1::allocator<unsigned int> >="__begin_"^I"__end_"^I"__end_cap_"{__compressed_pair<unsigned int *, std::__1::allocator<unsigned int> >="__value_"^I}}
f8@0:4
v12@0:4f8
d8@0:4
{?="doubleValue"b1"int64Value"b1"floatValue"b1"int32Value"b1"boolValue"b1"isShortOrChar"b1"isUnsigned"b1}
i12@0:4@8
i20@0:4@8@12i16
@16@0:4B8B12
I12@0:4@8
S12@0:4@8
S8@0:4
v32@0:4@8@12@16Q20B28
v24@0:4@8d12L20
L8@0:4
@16@0:4L8^@12
v20@0:4L8L12@?16
v12@0:4S8
@"NRDevice"
d16@0:4Q8
v12@0:4L8
v20@0:4L8d12
{mach_timebase_info=II}8@0:4
v16@0:4{mach_timebase_info=II}8
{mach_timebase_info="numer"I"denom"I}
@20@0:4@8@12L16
@32@0:4@8Q12@20@24L28
@"NSDate"
@"NRDeviceCollectionDiff"
@"NRDeviceCollectionHistory"
v16@0:4@"<NRMutableStateProtocol>"8@"<NRDiffProtocol>"12
I20@0:4^{?=L^@^L[5L]}8^@12I16
@16@0:4Q8
I16@0:4@8I12
@"NSMutableOrderedSet"
@"NRMutableDeviceCollection"
@"NRSwitchRecordCollection"
v16@0:4:8@12
@"NRPBDeviceCollectionDiff"
{?="date"b1"index"b1}
Q12@0:4i8
i20@0:4@8@12@?16
@"NRReadWriteConcurrentQueue"
@"NRSecureDevicePropertyStore"
@24@0:4@8@12@16I20
@"<NRXPCProxyDelegate>"
@"NSUUID"
v12@0:4[32C]8
@"NRPBMutableDevice"
{?="dateTimeInterval"b1"switchIndex"b1}
{?="compressed"b1}
@"NSHashTable"
v16@0:4@"NRXPCServer"8@"NRXPCProxy"12
@"NRXPCServer"
@"NRDeviceDiff"
@"NSDictionary"
@24@0:4@8@12@16B20
v20@0:4@8@12B16
@"NRRegistry"
@"NSPointerArray"
@"<NSObject><NSCopying>"
@"NRPBMutableDeviceProperty"
@12@0:4i8
@"NRPBDeviceDiff"
{?="changeType"b1}
@"NRPBMutableDeviceCollection"
B16@0:4@"<NRNSXPCListenerProtocol>"8@"<NRNSXPCConnectionProtocol>"12
B16@0:4@8I12
B16@0:4@"NSString"8I12
v16@0:4@"NRXPCProxy"8B12
@28@0:4#8#12@16@20@24
@"<NRNSXPCListenerProtocol>"
@"BKSApplicationStateMonitor"
@"<NRXPCServerDelegate>"
B20@0:4@8@12I16
B12@0:4^Q8
{?="eventDate"b1"eventType"b1"presentationLocation"b1}
@"NRDevicePropertyDiff"
@"NRPBDevicePropertyDiff"
%{public}@ called abort pairing with reason %{public}@; Ignoring since flag is set to ignore sharingd failures
%{public}@ needs entitlement %@ to enable %@
_queryDataAsyncIfNeededWithBlock/finishQueryWithTokenValues: Failure to query daemon, backing off interval = %0.1f
_queryDaemonWithStartingTokenValue/xpcGetDeviceCollectionWithBlock: XPC error %{public}@
_queryDaemonWithStartingTokenValue/xpcRetrieveSecureProperties: XPC error %{public}@
_queryDaemonWithStartingTokenValue/xpcGetDiffSinceIndex: XPC error %{public}@
%{public}@ version %{public}@ returned for chip id %{public}@
pairingCompatibilityVersion: returning %ld
maxPairingCompatibilityVersion: returning %ld
minPairingCompatibilityVersion: returning %ld
minQuickSwitchCompatibilityVersion: returning %ld
overrideSignalStrengthLimit:%ld not implemented
%u %u
Received request for characteristic read data
isWatchSetupPushActive not implemented
NRDevice found
NRDevice supports migration
protobuf created
%d bytes of protobuf created
data compressed! It is now only %d bytes
data did not compress. Bummer.
devicesFromMigrationConsentRequestData called
migrationConsentRequestData called
migrationConsentRequestData called- could not squish protobuf data to %d bytes (it's %ld bytes). Not returning any data!
Generating pre-restore migration data blob for (%lu) devices
Failed to serialize with error (%@) device IDs: (%@)
Generated pre-restore migration data blob of length (%lu bytes)
Ingesting post-restore migration data blob of length (%lu bytes)
Failed to unserialize with error (%@) pre-restore data : (%@)
Unserialization returned nil object without error
Unserialized root object not an array (%@)
Unserialization deviceID not a string: (%@)
Failed to convert unserialized deviceID (%@) into a UUID
Failed with error: (%@) to apply consent for deviceID: %@
Writing history to file %@ dirty history=%s secure properties=%s
Can't create path %{public}@! error=%{public}@
client %{public}@ is missing the %@ entitlement
Internal functionality not available in customer builds
%{public}@ called %{public}@ %{public}@
Failed to register block and get notify token for %@
Failure loading history file %{public}@: Unarchiver threw exception %{public}@.
Failure loading history file %{public}@: File has incorrect object %{public}@.
Failure saving history file %{public}@: Archiver returned "nil"
Failure saving active state machine file %{public}@: writeToFile returned "NO" %{public}@
Failure saving history file %{public}@: Archiver threw exception %{public}@.
Failure saving secure properties file %{public}@: Archiver threw exception %{public}@.
Failure saving secure properties file %{public}@: Archiver returned "NO"
Failure loading secure properties file %{public}@: Unarchiver threw exception %{public}@.
Failure loading secure properties file %{public}@: File has incorrect object %{public}@.
Failed to register short lived token with status: (%u)
Failed to query token value with status: (%u)
Failed to unregister short lived token with status: (%u)
Failed to register observer with status: (%u)
Failed to unregister observer with status: (%u)
IMPORTANT! Unsupported ProductType (%@) falling back to generic size (which won't behave correctly in UI)!
Listening to %@
_notifyClients: Daemon notifying %llx->%llx
Stopped listening to %@
xpcSetMigrationConsented: Setting migration consent to %@ for device ID %@
setMigrationConsent: Setting migration consent to %@ for device ID %@
Generated and persisted new companion seed: (%@); ret: (%u)
Cleared Advertising Identifier Seed; ret: (%u)
NRXPCServer: %@ connection from %@.%ld accepted
NRXPCServer: %@ connection rejected from pid %ld because proxy failed to init
NRXPCServer: %@ connection rejected from pid %ld because of missing entitlement %@
NRXPCProxy: Notifying of application %@ %sforground running
NRXPCServer: %@ is monitoring %@
NRXPCServer: %@ is monitoring apps %@
NRXPCServer: %@ is no longer monitoring %@
NRXPCServer: %@ is no longer monitoring any apps
NRXPCServer: %@ connection from %@ disconnected
Caught exception (%{public}@) archiving (%@)
Got error (%{public}@) archiving (%@)
Error (%{public}@) creating directory (%{public}@) for (%@)
Error (%{public}@) writing encoded data for (%@)
Error (%{public}@) deleting file (%{public}@)
Failed to register block and get notify token for %s
Failed to read notify token in %@
Failed to read data from file %{public}@ with error %{public}@
Failed to unarchive data of type %{public}@ with exception %{public}@
Failed to unarchive data of type %{public}@ with error %{public}@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
