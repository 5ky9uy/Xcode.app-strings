init
alloc
initWithIdentifier:forReason:queue:invalidationBlock:
reason
description
invalidate
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
_internalDescription
.cxx_destruct
_accessQueue
_internalAssertion
queueWithMainRunLoopModes:
initWithCalloutQueue:
initWithIdentifier:queue:
processHandle
hasEntitlement:
_handleMessage_setIdleTimerDisabledForClient:withMessage:
_handleMessage_isIdleTimerServiceAvailable:
delegate
clientDidDisconnect:
isIdleTimerServiceAvailable
sendReplyMessageWithPacker:
payload
client:setIdleTimerDisabled:forReason:
shouldAllowClientConnection:withMessage:
noteDidReceiveMessage:withType:fromClient:
noteClientDidDisconnect:
setDelegate:
_delegate
queueWithDispatchQueue:
_addStateCaptureHandler
dealloc
assertOnQueue
_identifierForClient:
objectForKeyedSubscript:
setObject:forKeyedSubscript:
disableIdleTimerForClient:forReason:
addObject:
removeObjectForKey:
removeObject:
copy
countByEnumeratingWithState:objects:count:
bundleIdentifier
stringWithFormat:
initWithDispatchQueue:
_server
_calloutDispatchQueue
_calloutQueue
_assertionsByReason
_assertionReasonsByClientID
_stateCaptureAssertion
_sharedInstanceAccessQueue
_init
initWithIdentifier:calloutQueue:
_requestIsIdleTimerServiceAvailable
messageWithPacker:
sendMessage:withType:
message
sendMessage:withType:replyHandler:waitForReply:timeout:
acquireSharedInstance
relinquishSharedInstance
setIdleTimerDisabled:forReason:
weakObjectsHashTable
_queue_newAssertionToDisableIdleTimerForReason:
UUID
sharedInstance
newAssertionToDisableIdleTimerForReason:
_idleTimerDisableAssertions
initWithFireInterval:repeatInterval:leewayInterval:queue:handler:
schedule
cancel
_idleTimerResetTimer
v8@?0@"BSSimpleAssertion"4
v4@?0
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
reason
T@"NSString",R,C,N
com.apple.idle-timer-services
v8@?0@"NSObject<OS_xpc_object>"4
delegate
T@"<ITIdleTimerStateServerDelegate>",W,N,V_delegate
%@:%ld
IdleTimer - ITIdleTimerStateService - ClientDisableAssertions
@4@?0
T@"<ITIdleTimerStateServiceDelegate>",W,N,V_delegate
ITIdleTimerStateClientSharedInstanceAccess
v8@?0@"FBSXPCMessage"4
ITIdleTimerStateAccessQueue
%@-%@
DisableIdleTimer
v8@?0@"ITIdleTimerDisableAssertion"4
DisableIdleTimer-Shim
IdleTimer - ITIdleTimerState - DisableAssertions
isIdleTimerServiceAvailable
TB,R,N
com.apple.idletimerservices.IdleTimerStateService
param1
param2
com.apple.IdleTimerServices
IdleTimer
ITIdleTimerDisableAssertion
BSInvalidatable
NSObject
ITIdleTimerStateServer
ITIdleTimerStateService
ITIdleTimerStateServerDelegate
ITIdleTimerStateClient
ITIdleTimerStateRequestHandling
ITIdleTimerState
ITIdleTimerStateRequestShim
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v8@0:4
@24@0:4@8@12@16@?20
@"NSObject<OS_dispatch_queue>"
@"BSSimpleAssertion"
@16@0:4@8@12
@12@0:4@8
B16@0:4@8@12
v24@0:4@8q12@20
v12@0:4@8
v16@0:4@8@12
@"<ITIdleTimerStateServerDelegate>"
v20@0:4@8B12@16
v20@0:4@"<FBSServiceFacilityClientHandle>"8B12@"NSString"16
v12@0:4@"<FBSServiceFacilityClientHandle>"8
@"ITIdleTimerStateServer"
@"FBSSerialQueue"
@"NSMutableDictionary"
@"<BSInvalidatable>"
@"<ITIdleTimerStateServiceDelegate>"
v16@0:4B8@12
v16@0:4B8@"NSString"12
@"NSHashTable"
@"BSTimer"
%{public}@ - shouldAllowClientConnection:withMessage: - rejecting unauthorized access from %{public}@
%{public}@ - Adding IdleTimer disable assertion for reason: %{public}@.
%{public}@ - Removing IdleTimer disable assertion for reason: %{public}@.
%{public}@ - setIdleTimerDisabled:%{bool}u forReason:%@
%{public}@ - GSEventResetIdleTimer
@(#)PROGRAM:IdleTimerServices  PROJECT:IdleTimerServices-1
zPLR
zPLR
