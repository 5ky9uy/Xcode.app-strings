sharedInstance
assertQueueIsNotCurrent
init
alloc
initWithDelegate:queue:delegateContext:
performBlock:
self
performBlock:waitUntilDone:
dealloc
state
startAdvertisingOfType:withData:withOptions:
stopAdvertisingOfType:
startScanningForType:withData:mask:peers:withOptions:
startScanningForType:withData:mask:withOptions:
startScanningForType:withData:mask:peers:
startScanningForType:withData:mask:
startScanningForType:withData:mask:peers:withOptions:boostedScan:duplicates:
startScanningForType:withData:mask:withOptions:boostedScan:duplicates:
startScanningForType:withData:mask:peers:boostedScan:duplicates:
startScanningForType:withData:mask:boostedScan:duplicates:
stopScanningForType:
initWithDelegate:queue:
startScanningForType:withData:peers:withOptions:
startScanningForType:withData:withOptions:
startScanningForType:withData:mask:peers:withOptions:boostedScan:
startScanningForType:withData:mask:withOptions:boostedScan:
connectToPeer:
disconnectFromPeer:
startTrackingPeer:
stopTrackingPeer:
startTrackingPeer:forType:
stopTrackingPeer:forType:
.cxx_destruct
_internal
_performBlock:wait:
_setAutoReconnect:
isEqual:
class
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
setupAccountWithLoginID:serviceName:accountType:accountConfig:authToken:password:transactionID:
addAccountWithLoginID:serviceName:uniqueID:accountType:accountInfo:
_removeAccount:
_removeAndDeregisterAccount:
updateAccount:withAccountInfo:
enableAccount:
disableAccount:
authTokenChanged:forAccount:
passwordChanged:forAccount:
authenticationChangedForAccount:
authenticateAccount:
passwordUpdatedForAccount:
updateAuthorizationCredentials:token:forAccount:
validateProfileForAccount:
addAliases:toAccount:
removeAliases:fromAccount:
validateAliases:forAccount:
unvalidateAliases:forAccount:
activateAlias:onAccount:
deactivateAlias:onAccount:
registerAccount:
unregisterAccount:
_reregisterAndReidentify:account:
deactivateAndPurgeIdentifyForAccount:
hardDeregister
triggerFinalDeregister
iCloudSignInHackWithUserName:password:
iCloudSignOutHack
iCloudSignInWithUserName:authToken:password:accountInfo:accountStatus:handles:
iCloudUpdateForUserName:accountInfo:
iCloudModifyForUserName:
iCloudSignOut
iTunesSignInWithUserName:authToken:password:accountInfo:accountStatus:handles:
iTunesSignOut
updateUserWithOldUserName:newUserName:
kickGetDependentForAccount:
reRegisterWithUserID:action:service:
repairAccounts
getRegisteredIdentities
authenticatePhoneWithRequestUUID:
generatePhoneAuthenticationSignatureOverData:withRequestUUID:
setPhoneUserSubscriptionSource:withRequestUUID:
fetchPhoneUserSubscriptionSourceWithRequestUUID:
startLocalSetup
stopLocalSetup
localSetupUnpair
localSetupUnpairStart
localSetupCompleted
addPairedDevice:
connectPairedDevice:
deletePairedDevice:
getLocalDeviceInfo
getPairedDeviceInfo
getDeliveryStats
initialLocalSyncStartedForServices:
initialLocalSyncCompletedForServices:
setAllowedTrafficClasses:
dropAllMessagesWithoutAnyAllowedClassifier
addPairedDeviceWithID:requestID:
connectPairedDeviceWithID:requestID:
setupCompletedForPairedDeviceWithID:requestID:
switchActivePairedDeviceWithID:requestID:
redeliverMessagesForDevice:requestID:
deletePairedDeviceWithID:requestID:
unpairStartForDeviceWithID:requestID:
stopLocalPairingForDeviceWithID:requestID:
unpairDeviceWithID:requestID:
forgetDeviceWithID:requestID:
getPairingDevicesWithRequestID:
getPairedDevicesWithRequestID:
setAllowedTrafficClassifiersForDevice:classifiers:requestID:
dropAllMessagesWithoutAnyAllowedClassifierForDevice:requestID:
reunionSyncStartedForServices:requestID:
reunionSyncCompletedForServices:requestID:
updateSubServices:forService:deviceUniqueID:
setPairedDeviceInfo:
incomingAccountSyncMessage:
regenerateRegisteredIdentity
sendMessageWithSendParameters:
cancelItemWithIdentifier:service:
getProgressUpdateForIdentifier:service:
sendPersistedFile:userInfo:toDestinations:usingAccountWithUniqueID:identifier:
sendServerMessage:command:usingAccountWithUniqueID:
setPreferInfraWiFi:service:
setLinkPreferences:service:
startOTRTest:priority:
testCloudQRConnection:
failedDecryptingMessage:reason:forGroupID:onService:
acknowledgeOutgoingMessageWithGUID:alternateCallbackID:forAccountWithUniqueID:
acknowledgeMessageWithGUID:forAccountWithUniqueID:broadcastTime:messageSize:priority:
acknowledgeMessageWithStorageGUID:realGUID:forAccountWithUniqueID:broadcastTime:messageSize:priority:broadcastID:connectionType:
sendAppAckWithGUID:toDestination:forAccountWithUniqueID:connectionType:
setListenerServices:commands:capabilities:
registerForNotificationsOnServices:
xpcObject:objectContext:
openSocketWithOptions:
closeSocketWithOptions:
setNSUUID:onDeviceWithUniqueID:forService:
setupNewSessionWithConfiguration:
cleanupSession:
sendInvitation:withOptions:
sendInvitation:withData:declineOnError:
cancelInvitation:
cancelInvitation:withData:
cancelInvitation:withRemoteEndedReasonOverride:
acceptInvitation:
acceptInvitation:withData:
declineInvitation:
declineInvitation:withData:
endSession:
endSession:withData:
sendSessionMessage:toDestinations:forSessionWithUniqueID:
setAudioEnabled:forSessionWithUniqueID:
setMuted:forSessionWithUniqueID:
setPreferences:forSessionWithUniqueID:
setInviteTimetout:forSessionWithUniqueID:
acknowledgeSessionID:clientID:
sendAllocationRequest:options:
updateMembers:forGroup:sessionID:withContext:triggeredLocally:
updateParticipantData:forGroup:sessionID:withContext:
joinGroupSession:withOptions:
leaveGroupSession:participantInfo:
requestActiveParticipantsForGroupSession:
setupRealtimeEncryptionController:forAccountWithID:
sendRealTimeMediaPrekey:toGroup:
requestPublicKeysForRealTimeEncryption:forAccountWithID:
sendRealTimeEncryptionMasterKeyMaterial:toGroup:
sendRealTimeEncryptionMKMRecoveryRequest:toGroup:
requestRealTimeEncryptionMasterKeyMaterial:forGroup:
resetRealTimeEncryptionKeys:forGroup:
continuityClientInstanceCreated
continuityStartAdvertisingOfType:withData:withOptions:
continuityStopAdvertisingOfType:
continuityStartScanningForType:withData:mask:
continuityStartScanningForType:withData:mask:peers:
continuityStartScanningForType:withData:mask:boostedScan:duplicates:
continuityStartScanningForType:withData:mask:peers:boostedScan:duplicates:
continuityStopScanningForType:
continuityConnectToPeer:
continuityDisconnectFromPeer:
continuityStartTrackingPeer:forType:
continuityStopTrackingPeer:forType:
reportiMessageSpam:toURI:
reportiMessageUnknownSender:messageID:messageServerTimestamp:toURI:
reportiMessageSpamCheckUnknown:count:requestID:
homeKitGetServiceUserIDs
homeKitGetAdminAccessTokensWithServiceUserID:accessoryID:pairingToken:
homeKitGetConsentTokensWithServiceUserID:accessoryIDs:adminID:
homeKitGetUserAccessTokensWithServiceUserID:userID:userHandle:accessoryRequests:
homeKitRefreshUserAccessTokensWithServiceUserID:userID:accessoryRequests:
appleCareSignInUserName:DSID:authToken:requestID:
appleCareSignOutUserWithRequestID:
registrationControlSetRegistrationStateForRegistrationType:toState:requestID:
registrationControlGetCurrentiMessageStateWithContextForRequestID:
registrationControlGetRegistrationStateForRegistrationType:requestID:
initWithProtocol:
length
stringGUID
copy
setCurXPCMessagePriority:
removeListener:
defaultCenter
removeObserver:name:object:
_localObjectCleanup
_remoteObjectCleanup
isNonUIInstall
_blockUntilSendQueueIsEmpty
services
commands
capabilities
_connectToDaemonWithLaunch:services:commands:capabilities:
connectToDaemonWithLaunch:
_setServices:
_setCommands:
_setCapabilities:
containsObject:
registration
count
setByAddingObjectsFromSet:
unionSet:
enumerateKeysAndObjectsUsingBlock:
isEqualToSet:
unsignedIntValue
connectToDaemonWithLaunch:services:commands:capabilities:
disconnectFromDaemon
addObject:
setWithObject:
hasListenerForID:
setServices:forListenerID:
setCommands:forListenerID:
setObject:forKey:
numberWithUnsignedInt:
_listenerSetUpdated
addListenerID:services:commands:
objectForKey:
numberWithUnsignedInteger:
removeObjectForKey:
_performBlock:
servicesForListenerID:
commandsForListenerID:
capabilitiesForListenerID:
numberWithInt:
isValid
listener
isSetupComplete
_noteDisconnected
setTarget:
invalidate
_disconnectFromDaemonWithForce:
connectToDaemon
systemIsShuttingDown
_autoReconnect
defaultBroadcaster
broadcastProxyForTarget:messageContext:protocol:
sendXPCObject:
_imMethodSignatureForSelector:
isQueueCurrent
curXPCMessagePriority
processInfo
processName
isEqualToString:
broadcastProxyForTarget:messageContext:protocol:priority:completion:
invokeWithTarget:
retainArguments
_applicationWillTerminate
_setApplicationWillTerminate
_handleDaemonException:
_makeConnectionWithLaunch:completionBlock:
_setServices:commands:capabilities:
addedDelegateForService:
addListenerID:services:
removeListenerID:
setCapabilities:forListenerID:shouldLog:
listenerID
isConnecting
isConnected
blockUntilConnected
_noteSetupComplete
remoteObjectExists
localObjectExists
localObject
_agentDidLaunchNotification:
localObjectDiedNotification:
remoteObjectDiedNotification:
sendXPCObject:objectContext:
methodSignatureForSelector:
forwardInvocation:
systemApplicationDidSuspend
systemApplicationDidEnterBackground
systemApplicationWillEnterForeground
systemApplicationDidResume
_remoteMessageQueue
delegate
setDelegate:
_delegate
_remoteObject
_localObject
_daemonListener
_protocol
_listenerID
_ivarQueue
_daemonConnectedGroup
_connectionID
_listenerServices
_services
_cachedServices
_listenerCommands
_commands
_cachedCommands
_listenerCapabilities
_cachedCapabilities
_lastUpdateCaps
_hasCheckedForDaemon
_preventReconnect
_acquiringDaemonConnection
_hasBeenSuspended
_fatalErrorOccured
_curXPCMessagePriority
_notificationServices
NRPairing
deletePairedDevice:withCompletionBlock:queue:
initWithObjects:
getPairedDeviceInfoWithCompletionBlock:queue:
getDeliveryStatsWithCompletionBlock:queue:
accountSync
isDefaultPairedDevice
setAllowedTrafficClassifiers:
allowedTrafficClassifiers
assertQueueIsCurrent
initWithAccount:destinations:options:delegateContext:
objectForKeyedSubscript:
setWithArray:
uniqueID
stringByAppendingString:
sessionEndedReason
setDelegate:queue:
updateMembers:withContext:triggeredLocally:
updateParticipantData:withContext:
setParticipantInfo:
joinGroupSession
joinWithOptions:
leaveGroupSession
setPreferences:
requestActiveParticipants
initWithAccount:destinations:options:
initWithAccount:options:
sessionID
destination
initWithDomain:code:userInfo:
initWithBlock:queue:
scheduleTimeoutWithResponseHandler:timeoutInterval:timeoutBlock:
initWithRequestTimer:
addHandler:
initWithInteger:
initWithObjectsAndKeys:
__mainThreadPostNotificationName:object:userInfo:
object
userInfo
service
integerValue
_postNotificationForService:availability:
_handleServiceMonitorNotification:
addObserver:selector:name:object:
_isValidServiceType:
initWithService:
monitor
_startListeningToMonitor:
containerForService:create:
hasListenerID:
addListenerID:
listeners
_stopListeningToMonitor:
serviceAvailability
hasListenerID:forService:
addListenerID:forService:
removeListenerID:forService:
availabilityForListenerID:forService:
_availabilityHandlers
removeObject:
setMonitor:
_monitor
_listeners
stringWithFormat:
UTF8String
connectionComplete:
setupCompleteWithInfo:
daemonConnected
daemonDisconnected
messageReceived:withGUID:withPayload:forTopic:toIdentifier:fromID:context:
dataReceived:withGUID:forTopic:toIdentifier:fromID:context:
accessoryDataReceived:withGUID:forTopic:toIdentifier:fromID:context:
accessoryReportMessageReceived:accessoryID:controllerID:withGUID:forTopic:toIdentifier:fromID:context:
messageIdentifier:alternateCallbackID:forAccount:updatedWithResponseCode:error:lastCall:context:
messageIdentifier:alternateCallbackID:forAccount:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
messageIdentifier:forTopic:toIdentifier:fromIdentifier:hasBeenDeliveredWithContext:
protobufReceived:withGUID:forTopic:toIdentifier:fromID:context:
OTRTestCallback:time:error:
groupShareReceived:withGUID:forTopic:toIdentifier:fromID:context:
engramDataReceived:withGUID:forTopic:toIdentifier:fromID:context:
checkTransportLogWithReason:
accountAdded:
accountRemoved:
accountUpdated:
accountsChanged:forTopic:
accountEnabled:onService:
accountDisabled:onService:
setupCompleteForAccount:transactionID:setupError:
account:accountInfoChanged:
account:registrationStatusInfoChanged:
account:aliasesChanged:
account:vettedAliasesChanged:
account:profileChanged:
account:loginChanged:
account:displayNameChanged:
registrationFailedForAccount:needsDeletion:
refreshRegistrationForAccount:
updateDeviceIdentity:error:
account:dependentDevicesUpdated:
account:dependentDevicesUpdatedUponReconnect:
account:localDeviceAdded:
account:localDeviceRemoved:
didAuthenticatePhoneWithAuthenticationCertificateData:requestUUID:error:
didGeneratePhoneAuthenticationSignature:nonce:certificate:inputData:requestUUID:error:
didSetPhoneUserSubscriptionSource:requestUUID:error:
didFetchPhoneUserSubscriptionSource:requestUUID:error:
IDQueryCompletedWithFromURI:idStatusUpdates:service:success:error:
sessionInvitationReceivedWithPayload:forTopic:sessionID:toIdentifier:fromID:transportType:
sessionAcceptReceived:fromID:withData:
sessionDeclineReceived:fromID:withData:
sessionCancelReceived:fromID:withData:
sessionMessageReceived:fromID:withData:
sessionEndReceived:fromID:withData:
sessionStarted:
sessionEnded:withReason:error:
groupSessionDidTerminate:
groupSessionEnded:withReason:error:
session:invitationSentToTokens:shouldBreakBeforeMake:
session:audioEnabled:
session:muted:
session:didReceiveReport:
sessionDidJoinGroup:participantsInfo:error:
sessionDidJoinGroup:participantInfo:error:
sessionDidJoinGroup:participantUpdateDictionary:error:
sessionDidLeaveGroup:error:
session:participantDidJoinGroupWithInfo:
session:participantDidLeaveGroupWithInfo:
session:didGetGroupSessionParticipants:requestID:error:
session:didReceiveActiveParticipants:success:
receivedGroupSessionParticipantUpdate:forTopic:toIdentifier:fromID:
receivedGroupSessionParticipantDataUpdate:forTopic:toIdentifier:fromID:
allocationDone:sessionInfo:
groupSession:didReceiveReport:
openedSocket:forHandlerID:error:
localDeviceInfo:
pairedDeviceInfo:
deliveryStats:
device:nsuuidChanged:
device:pairingDeleted:
device:pairingAdded:
continuityDidUpdateState:
continuityDidLosePeer:
continuityDidLosePeer:forType:
continuityDidStartTrackingPeer:error:
continuityDidStartTrackingPeer:forType:error:
continuityDidStopTrackingPeer:
continuityDidStopTrackingPeer:forType:
continuityDidStartAdvertisingOfType:
continuityDidStopAdvertisingOfType:
continuityDidFailToStartAdvertisingOfType:withError:
continuityDidStartScanningForType:
continuityDidStopScanningForType:
continuityDidFailToStartScanningForType:withError:
continuityDidDiscoverType:withData:fromPeer:
continuityDidDiscoverPeerWithData:fromPeer:
continuityDidConnectToPeer:withError:
continuityDidDisconnectFromPeer:withError:
serviceUserIDs:error:
adminAccessTokens:error:
consentTokens:error:
userAccessTokens:error:
refreshUserAccessTokens:error:
deviceIdentifierDidChange:
didSwitchActivePairedDevice:
didSwitchActivePairedDevice:forService:wasHandled:
deactivatePairedDevices
localPairingResponseForRequestID:withError:
localPairingResponseForRequestID:withError:pairedDevices:
applecareResponseForRequestID:withError:
registrationControlResponseForRequestID:withError:
registrationControlResponseForRequestID:withBoolAnswer:andError:
registrationControlResponseForRequestID:withBoolAnswer:additionalContextData:andError:
registrationControlStatusResponseForRequestID:requestID:withError:
iMessageReportSpamCheckUnknownResponseForRequestID:status:abusive:delay:withError:
_callHandlersWithBlockOnIvarQueue:
_performSyncBlock:
weakObjectsHashTable
countByEnumeratingWithState:objects:count:
_callHandlersWithBlockOnIvarQueue:cleanup:
mutableCopy
enumerateObjectsUsingBlock:
removeObjectAtIndex:
_removeAccountOnIvarQueue:
_callHandlersWithBlock:
isEqualToIgnoringCase:
voicemailSync
_stringForKey:
initWithDictionary:
_uniqueIDForDevice:
boolValue
activeID
numberWithBool:
initWithArray:
warning
_internalDidSwitchActivePairedDevice:forService:
addIndex:
removeObjectsAtIndexes:
flushCache
NSUUID
allKeys
IDSService_oversized
_callHandlersAsyncWithBlock:
isActive
_internalSwitchActivePairedDevice:forAccount:
removeAllObjects
accountEnabled
__postSetupComplete
_currentMessageContext
allObjects
_copyForEnumerating
selector
invocationWithMethodSignature:
setSelector:
_setTemporaryMessageContext:
hasPostedSetupComplete
deviceIdentifier
_hidingDisconnect
_setHidingDisconnect:
removeHandler:
accountDictionariesForService:
enabledAccountsForService:
dependentDevicesForAccount:
didGetIdentities:error:
switchActivePairedDevice:forAccount:
_handlers
_topicToAccountDictionaries
_topicToEnabledAccounts
_accountToDevices
_accountToActiveDeviceUniqueID
_deviceIdentifier
_setupComplete
_postedSetupComplete
_setupInfoComplete
_connectionComplete
weakRefWithObject:
didReceivePublickeys:
didReceiveMasterKeyMaterials:
initWithAccount:
sendPrekeyToGroup:
requestPublicKeys
sendMasterKeyMaterialToGroup:
requestMasterKeyMaterialForGroup:
sendMKMRecoveryRequestToGroup:
resetKeysForGroup:
_uniqueID
_accountID
_queue
didCreateGroup:completion:
didCacheGroup:completion:
didUpdateGroup:withNewGroup:completion:
didReceiveDecryptionFailureForGroup:completion:
didReceiveRegistrationIdentityUpdateWithCompletion:
addDelegate:
removeDelegate:
delegates
setDelegates:
_delegates
groupContext
strongToStrongObjectsMapTable
dictionary
_serviceForName:
accounts
_isEnabled
enable
disable
addDelegate:queue:
serviceCallbackMap
nameServiceMap
allKeysForObject:
firstObject
isServiceCurrentlyEnabled:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
enableService:
disableService:
registerEnabledStatusChangedCallback:forService:
unregisterEnabledStatusChangedCallbackForService:
setServiceCallbackMap:
setNameServiceMap:
faceTimePreviousEnabled
setFaceTimePreviousEnabled:
_serviceCallbackMap
_nameServiceMap
_faceTimePreviousEnabled
isiMessageEnabled
enableiMessage
disableiMessage
registeriMessageEnabledStatusChangedCallback:
unregisteriMessageEnabledStatusChangedCallback
isFaceTimeEnabled
enableFaceTime
disableFaceTime
registerFaceTimeEnabledStatusChangedCallback:
unregisterFaceTimeEnabledStatusChangedCallback
initWithAccount:destinations:transportType:delegateContext:
initWithAccount:destinations:transportType:uniqueID:delegateContext:
socket
initialLinkType
sendInvitationWithOptions:
initWithBool:
sendInvitationWithData:declineOnError:
getPreferences
cancelInvitationWithRemoteEndedReasonOverride:
cancelInvitationWithData:
acceptInvitationWithData:
declineInvitationWithData:
cancelInvitation
acceptInvitation
declineInvitation
endSession
endSessionWithData:
sendSessionMessage:
sendSessionMessage:toDestinations:
sendAllocationRequest:
setAudioEnabled:
getAudioEnabled
setMuted:
getMuted
sendData:error:
setInviteTimeout:
inviteTimeout
shouldUseSocketForTransport
MTUForAddressFamily:
initWithAccount:destinations:transportType:
_initWithAccount:destinations:transportType:uniqueID:
sendInvitation
sendInvitationWithData:
setStreamPreferences:
_streamPreferences
setIsAudioEnabled:
isAudioEnabled
setIsMuted:
isMuted
setInvitationTimeOut:
invitationTimeOut
weakToStrongObjectsMapTable
setQueue:
queue
_cacheForService:
addEntriesFromDictionary:
idStatusUpdatedForDestinations:service:
_callDelegatesWithBlock:
_purgeIDStatusCache
___oldDealloc
_connect
watchPairing
invalidateTimeoutAndReturnHandlerForRequestID:
block
initWithDisconnectedBlockAndNoTimeout:
_requestTimer
_disconnectedBlock
initWithService:delegate:queue:
setDestinations:
_initWithAccount:commands:indirectDelegateCallouts:
initWithAccount:commands:indirectDelegateCallouts:delegateContext:
initWithAccount:commands:
account
sendProtobuf:toDestinations:priority:options:identifier:error:
sendMessage:toDestinations:priority:options:identifier:error:
sendData:toDestinations:priority:options:identifier:error:
_connectionWithAccount:commands:indirectDelegateCallouts:
sendMessage:toDestinations:options:identifier:error:
_block
completionBlock
setCompletionBlock:
_completeWithError:
_completionBlock
batchProcessingBlock
setBatchProcessingBlock:
knownRecordIDsFromList
setKnownRecordIDsFromList:
shouldContinueFromLastSyncPoint
setShouldContinueFromLastSyncPoint:
_batchProcessingBlock
_knownRecordIDsFromList
_shouldContinueFromLastSyncPoint
initWithHandler:queue:
handler
setHandler:
_handler
initWithSet:copyItems:
getLocalDeviceInfoWithCompletionBlock:queue:
_deleteCompletion
_localCompletion
_pairedCompletion
_deliveryStatsCompletion
_allowedTrafficClassifiers
authenticationCertificate
dataRepresentation
base64EncodedStringWithOptions:
nonce
signature
initWithAuthenticationCertificate:inputData:nonce:signature:
serverVerifiableEncoding
inputData
_authenticationCertificate
_inputData
_nonce
_signature
_isPhoneCertificateVendorSupported
_clientErrorForCode:underlyingError:
_scheduleTimeoutForPhoneAuthenticationCertificateRequestCompletionBlock:
_scheduleTimeoutForPhoneAuthenticationSignatureRequestCompletionBlock:
_scheduleTimeoutForPhoneSubscriptionSourceCompletionBlock:
numberWithInteger:
selectedPhoneNumberRegistrationSubscriptionWithError:
_subscriptionSourceForContext:
daemonRequestTimer
inFlightRequestCount
setStrongSelfReference:
_debugDescriptionForErrorCode:
setObject:forKeyedSubscript:
errorWithDomain:code:userInfo:
initWithDataRepresentation:
_updateSelfRetentionBasedOnInFlightRequestCount
_subscriptionSourceFromIntegerValue:
slotID
initWithQueue:
authenticatePhoneWithCompletion:
generatePhoneAuthenticationSignatureOverData:withCompletion:
setCurrentPhoneUserSubscriptionSource:completion:
requestCurrentPhoneUserSubscriptionSourceWithCompletion:
currentPhoneUserSubscriptionSourceWithError:
strongSelfReference
_strongSelfReference
_daemonRequestTimer
initWithService:delegateContext:
strongToWeakObjectsMapTable
_initWithService:onIDSQueue:
enabledAccounts
serviceName
accountWithLoginID:service:
accountWithUniqueID:
setupAccountWithLoginID:aliases:password:completionHandler:
setupAccountWithLoginID:password:completionHandler:
setupAccountWithLoginID:authToken:profileID:selfHandle:completionHandler:
setupAccountWithLoginID:authToken:profileID:selfHandle:aliases:completionHandler:
setupAccountWithSetupParameters:aliases:completionHandler:
addAccount:
_enableAccount:
_disableAccount:
_initWithService:
removeAccount:
unsignedIntegerValue
componentsSeparatedByString:
_IDSGroupSession
objectAtIndex:
intValue
_broadcastNewSessionToDaemon
_cleanupSocketPairConnections
dictionaryWithObjects:forKeys:count:
_IDSGroupSession_oversize
bytes
_callDelegateWithBlock:
initWithDictionaryRepresentation:
sessionDidJoinGroup:participantUpdate:error:
participantIdentifier
participantData
relaySessionID
array
connection:didReceiveData:
connectionDidClose:
boostContext
setBoostContext:
_delegateContext
_boostContext
_destinations
_fromID
_unreliableSocketPairConnection
_state
_transportType
_connectionCountHint
_needsToWaitForPreConnectionData
_disallowCellularInterface
_disallowWifiInterface
_preferredAddressFamily
_preferCellularForCallSetup
_clientUUID
_alwaysSkipSelf
_sessionEndedReason
_preferences
_sessionConfig
_useConfServer
_stableGroupID
_groupID
_participantInfo
_cfs_client
_cfs_requestID
_cfsJoinReply
_didJoinCallback
_cfsLeaveReply
_didLeaveCallback
_existingParticipants
_joinLeaveError
_qrReason
_previousError
dictionaryWithDictionary:
arrayWithArray:
dataWithBytes:length:
observer
_contentWithCompletion:
handlerWithTask:delegate:queue:
perform
initWithInput:initialValue:
currentItem
currentResult
continueWithResult:
fetchGroupWithGroupID:completion:
setReducerBlock:
error
value
reduceWithCompletion:
groupContextWithCompletion:
participantsForDestinations:service:listenerID:queue:completionBlock:
cloudKitContainer
transportLog
fetchChangesSinceToken:completion:
archivedDataWithRootObject:requiringSecureCoding:error:
standardUserDefaults
groupContextController:accountsForAlises:
accountIdentity
initWithAccountIdentity:aliasToAccountsMap:serviceName:
_didCreateGroup:completion:
_didCacheGroup:completion:
_didUpdateGroup:withNewGroup:completion:
_didReceiveDecryptionFailureForGroup:completion:
setSeal:
seal
failWithError:
fulfillWithValue:
qGroupContextWithDeviceIdentity:completion:
identitiesForGroupContextController:completion:
initWithAccountKey:deviceKey:
initWithAccountIdentity:dataSource:queue:
groupContextController:didCreateGroup:
setOnGroupCreate:
appendMiddleware:
setGroupContext:
setAccountIdentity:
qSetupSeal
promise
registerResultBlock:
taskHandler:groupsWithGroupIDs:completion:
taskHandler:participantsWithDestinations:completion:
taskHandler:messagesFromToken:completion:
taskHandler:persistToken:completion:
persistedTokenForTaskHandler:completion:
taskHandler:accountInfoForAliases:completion:
initWithServiceName:queue:delegate:
scheduleTransactionLogTask:
setServiceName:
_seal
_serviceName
setCloudKitContainer:
_cloudKitContainer
_groupContext
_accountIdentity
_isSessionInfoValid:
_setAllValuesFromDictionary:
_parseQuickRelayDefaults
setRelayIP:
setRelayPort:
setRelaySessionToken:
setRelaySessionKey:
setRelaySessionID:
setRelayCombinedSoftwareID:
setAppleID:
arrayWithObjects:count:
initWithBytes:length:
initWithBase64EncodedString:options:
initWithUUIDBytes:
UUIDString
numberWithUnsignedShort:
initWithDefaults
relayIP
relayPort
relaySessionKey
relaySessionToken
relayCombinedSoftwareID
appleID
_relayIP
_relayPort
_relaySessionToken
_relaySessionKey
_relaySessionID
_relayCombinedSoftwareID
_appleID
copyStringGUIDForObject:
daemonListener
daemonController
devices
_callDelegatesWithBlock:group:
_callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:group:
setDataToEncrypt:
setWantsResponse:
setWantsProgress:
setFromID:
doubleValue
setTimeout:
pushTopic
destinations
_isDestinationSingleLocalAddress:
priority
setPriority:
setEnforceRemoteTimeouts:
setAccessToken:
setHomeKitPayload:
setSubService:
setFakeMessage:
setDisableAliasValidation:
setCommand:
setWantsAppAck:
setWantsDeliveryStatus:
setDeliveryStatusContext:
setMessageUUID:
setAlternateCallbackID:
setEncryptPayload:
setCompressPayload:
setLocalDelivery:
setAllowCloudDelivery:
setRequireBluetooth:
setRequireLocalWiFi:
setUseDictAsTopLevel:
setExpectsPeerResponse:
setPeerResponseIdentifier:
setAlwaysSkipSelf:
_activeDevice
isCloudConnected
setBypassDuet:
setNonWaking:
setNonCloudWaking:
setLiveMessageDelivery:
setFireAndForget:
setBypassStorage:
callStackSymbols
setActivityContinuation:
setQueueOneIdentifier:
setForceEncryptionOff:
setDuetIdentifiersOverride:
caseInsensitiveCompare:
sortedArrayUsingComparator:
setMetricReportIdentifier:
setInterestingRegistrationProperties:
setRequireAllRegistrationProperties:
setRequireLackOfRegistrationProperties:
setIdentifier:
setAccountUUID:
command
initWithGuid:service:command:priority:
_verifyMatchingName:
shouldLogTouches
name
_touchStartDate
signpostID
uniqueIdentifier
setCheckpointTrace:
destinationURIs
_replaceSentinelInSendParameters:withCurrentActiveDevice:
setGroupData:
alternateCallbackID
identifier
sendToDaemon
dictionaryRepresentationIncludingTrace:
accountType
initWithSet:
destinationWithStrings:
data
dictionaryRepresentation
setProtobuf:
_sendWithParameters:options:loggingType:loggingDataSize:
dataWithPropertyList:format:options:error:
setMessage:
setData:
connection:isActiveChanged:
connection:devicesChanged:
connection:nearbyDevicesChanged:
connection:connectedDevicesChanged:
setDaemonDeathResend:
_resendPendingSends
_handleLastCallForPendingIdentifier:callbackID:
initWithDictionary:boostContext:
serverReceivedTime
serverTimestamp
connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
connection:identifier:didSendWithSuccess:error:context:
connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
_shouldAcceptIncomingType:forTopic:toIdentifier:fromID:validateAliases:
connection:identifier:fromID:hasBeenDeliveredWithContext:
storageGuid
outgoingResponseIdentifier
broadcastTime
timeIntervalSinceReferenceDate
numberWithDouble:
broadcastID
connectionType
handles
unprefixedURI
_stripFZIDPrefix
registrationStatus
_stripPotentialTokenURIWithToken:
suppressedDevices
pushToken
isEqualToData:
incomingResponseIdentifier
connection:incomingMessage:fromID:
connection:incomingMessage:fromID:context:
connection:incomingTopLevelMessage:fromID:messageContext:
wantsAppAck
connection:incomingData:fromID:context:
originalCommand
connection:incomingEngramMessage:fromID:context:
connection:incomingAccessoryData:fromID:context:
connection:incomingAccessoryReportMessage:accessoryID:controllerID:context:
setContext:
connection:incomingProtobuf:fromID:context:
connection:account:sessionInviteReceived:fromID:transportType:options:context:messageContext:
connection:account:receivedGroupSessionParticipantUpdate:
connection:account:receivedGroupSessionParticipantDataUpdate:
connection:incomingGroupData:fromID:context:
unarchivedObjectOfClass:fromData:error:
connection:didUpdateDeviceIdentity:error:context:
connection:didHintCheckingTransportLogWithReason:
account:isActiveChanged:
account:devicesChanged:
account:nearbyDevicesChanged:
account:connectedDevicesChanged:
_callDelegatesRespondingToSelector:withPreCallbacksBlock:callbackBlock:postCallbacksBlock:
setDelegateCapabilities:
sendServerMessage:command:
_messageContext
_delegateToInfo
_account
_serviceToken
_pendingSends
_delegateCapabilities
_indirectDelegateCallouts
initWithMachServiceName:options:
upsertGroupWithInfo:previousGroup:completion:
fetchGroupWithID:completion:
publicDataRepresentationForGroup:completion:
groupFromPublicDataRepresentation:completion:
participantsForCypher:completion:
validateCachedGroup:isParentOfGroup:completion:
latestCachedGroupWithStableID:completion:
fetchAllKnownGroups:
deleteAllKnownGroupsWithCompletion:
deleteAllCachedValuesForGroupWithID:WithCompletion:
interfaceWithProtocol:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
setConnection:
setInvalidationHandler:
setInterruptionHandler:
resume
connection
remoteObjectProxy
groupContextDataSource
groupContextCacheMiddleware
setObserver:
_connection
_observer
_accessDelegateIdentifiersInCriticalSectionWithBlock:
identifierForServiceDelegate:
isAwaitingAcknowledgement
awaitAcknowledgementFromServiceDelegate:
stopAwaitingAcknowledgementFromServiceDelegateWithIdentifier:
stopAwaitingAcknowledgementFromAllServiceDelegates
_delegateIdentifiers
_delegateIdentifiersMutex
uniqueIDOverride
setActiveConnection:forKey:
hasActiveConnection:forKey:
removeActiveConnection:forKey:
_activeConnectionMap
_writeLock
_daemonDied:
nsuuid
deviceConnectionKey
_cleanupCompletionBlock
_close
numberWithLongLong:
dictionaryWithObjectsAndKeys:
close
open
initWithDevice:options:completionHandler:queue:
inputStream
outputStream
metrics
setStreamPairWithInputStream:outputStream:
updateConnectionWithOptions:error:
_nsuuid
_isDefaultPairedDevice
_service
_streamName
_connectionUUID
_socket
_mtu
_openSocketCompletionHandler
_openSocketCompletionHandlerQueue
_openSocketCompletionHandlerID
_inputStreamForSocket
_outputStreamForSocket
_hasTimedOut
_clientTimeout
_awdMetrics
_loadCachedAccounts
_updateLocalAccountVisibility
minusSet:
intersectSet:
accountController:accountRemoved:
accountController:accountAdded:
accountController:accountUpdated:
_initWithDictionary:uniqueID:serviceName:
setAccountInfo:
_setIsEnabled:
__imSetByApplyingBlock:
_loadCachedAccountsWithDictionaries:
addObjectsFromArray:
_updateDelegatesWithOldAccounts:newAccounts:
internalAccounts
loginID
lowercaseString
arrayByApplyingSelector:
_setupAccountWithLoginID:accountConfig:authToken:password:completionHandler:
__imArrayByApplyingBlock:
accountInfo
aliases
accountController:accountEnabled:
accountController:accountDisabled:
_cachedAccounts
_enabledAccounts
_transactionIDToHandlersMap
_accountsLoaded
_isLocalAccountVisible
initWithDictionary:uniqueID:serviceName:delegateContext:
initWithLoginID:uniqueID:serviceName:delegateContext:
displayName
primaryServiceName
isUserDisabled
canSend
nearbyDevices
profileInfo
aliasStrings
vettedAliases
setPassword:
setAuthToken:
isUsableForOuterMessaging
updateAccountWithAccountInfo:
nextRegistrationDate
dateRegistered
registeredURIs
registrationCertificate
regionID
regionBasePhoneNumber
regionServerContext
profileID
addRegistrationDelegate:queue:
removeRegistrationDelegate:
authenticateAccount
passwordUpdated
updateAuthorizationCredentials:token:
validateProfile
addAliases:
removeAliases:
validateAliases:
unvalidateAliases:
registerAccount
unregisterAccount
_reregisterAndReidentify:
deactivateAndPurgeIdentify
_callNearbyDevicesChanged
_reloadCachedDevices
activeAliases
activateAlias:
deactivateAlias:
initWithDictionary:uniqueID:serviceName:
initWithLoginID:uniqueID:serviceName:
setLoginID:
_loginID
initWithString:
isLocallyPaired
initWithFormat:
identities
objectAtIndexedSubscript:
getServiceUserIDsWithCompletionBlock:queue:
getAdminAccessTokensWithWithServiceUserID:accessoryID:pairingToken:completionBlock:queue:
getConsentTokensWithServiceUserID:accessoryIDs:adminID:completionBlock:queue:
getUserAccessTokensWithServiceUserID:userID:userHandle:accessoryRequests:completionBlock:queue:
refreshUserAccessTokensWithServiceUserID:userID:accessoryRequests:completionBlock:queue:
_getServiceUserIDsCompletion
_getAdminAccessTokensCompletion
_getConsentTokensCompletion
_getUserAccessTokensCompletion
_refreshUserAccessTokensCompletion
_loadCachedDevices
_isiCloudPairingService
isInTransientRegistrationState
_objectForKey:
isUserVisible
_isInvisibleAlias:
__imArrayByFilteringWithBlock:
hasSuffix:
initWithUnprefixedURI:
initWithURI:isUserVisible:validationStatus:
registrationInfo
_initWithDictionary:
_setAccount:
supportsiCloudPairing
_updateDependentDevicesWithDevicesInfo:
reloadAccounts
isNearby
_callDevicesChanged
connectedDevices
registrationWithServiceType:accountType:value:
_keychainRegistration
arrayWithObject:
_registeredURIs
_callRegistrationDelegatesWithBlock:
_setObject:forKey:
isTransientCloudPairingAccount
_callConnectedDevicesChanged
_callCloudConnectedDevicesChanged
_accountConfig
_devices
_suppressedDevices
_registrationDelegateToInfo
_devicesLoaded
initWithService:serviceDomain:delegateContext:
initWithService:commands:delegateContext:
setManuallyAckMessages:
initWithService:commands:
performGroupTask:
setProtobufAction:forProtobufType:isResponse:
protobufActionForType:isResponse:
sendProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
sendMessage:fromAccount:toDestinations:priority:options:identifier:error:
sendData:fromAccount:toDestinations:priority:options:identifier:error:
sendAccessoryData:toAccessoryID:accessToken:options:identifier:error:
sendData:priority:options:identifier:error:
sendResourceAtURL:metadata:fromAccount:toDestinations:priority:options:identifier:error:
getProgressUpdateForIdentifier:error:
sendAheadGroup:priority:options:identifier:completion:
sendAckForMessageWithContext:
cancelIdentifier:error:
sendServerMessage:command:fromAccount:
serviceDomain
iCloudAccount
deviceForFromID:
firstRoutableInternetDestinationForSelf
deviceForUniqueID:
devicesForBTUUID:
uriForFromID:
setPreferInfraWiFi:
setLinkPreferences:
startOTRTest:
setPretendingToBeFull:
isPretendingToBeFull
testCloudQRConnection
updateSubServices:forDevice:
datagramConnectionForSessionDestination:error:
datagramConnectionForSocketDescriptor:error:
streamConnectionForSessionDestination:error:
streamConnectionForSocketDescriptor:error:
datagramChannelForSessionDestination:error:
datagramChannelForSocketDescriptor:error:
removeSentinelFromAliases:
_accountWithAlias:
objectsPassingTest:
anyObject
enablePhoneUser
disablePhoneUser
enableiCloudUser
disableiCloudUser
checkMessageSize:priority:
internal
initWithService:serviceDomain:
initWithService:manuallyAckMessages:
setProtobufAction:forIncomingRequestsOfType:
setProtobufAction:forIncomingResponsesOfType:
protobufActionForIncomingRequestsOfType:
protobufActionForIncomingResponsesOfType:
sendMessage:fromAccount:toDestinations:options:identifier:error:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendAheadGroup:priority:options:identifier:error:
maxHomeKitPayloadSize
updateSubServices:
activateAliases:
deactivateAliases:
iCloud
initWithResponseHandler:timeoutBlock:systemTimer:
responseHandler
timeoutBlock
systemTimer
killSystemTimer
_responseHandler
_timeoutBlock
_systemTimer
_accessRequestContextMapInCriticalSectionWithBlock:
_criticalFindRequestContextWithResponseHandler:
_handleSystemTimerFired:
initWithTimeInterval:name:shouldWake:target:selector:userInfo:
allValues
_criticalInvokeTimeoutBlockForRequestID:
_criticalInvalidateTimeoutAndReturnHandlerForRequestID:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
invalidateTimeoutsAndReturnHandlersForAllRequests
_requestContextMap
_requestContextMapLock
initWithBlock:
incrementAccessCount
_cleanupBlock
_accessCount
_setupIDSWakeListenerForService:
receivedIDSSimulatorSupportData:serviceName:messageIdentifier:
unarchivedObjectOfClasses:fromData:error:
initWithProtobufData:type:isResponse:
UUID
stringByAppendingPathComponent:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
writeToFile:options:error:
setAttributes:ofItemAtPath:error:
archivedDataWithRootObject:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
service:account:incomingTopLevelMessage:fromID:messageContext:
service:account:incomingMessage:fromID:
service:account:incomingAccessoryData:fromAccessoryID:context:
service:account:incomingAccessoryReportMessage:controllerID:accessoryID:context:
service:didHintCheckingTransportLogWithReason:
_stopAwaitingQuickSwitchAcknowledgementFromDelegateWithIdentifier:
resendSubServicesToDaemonForCurrentDevice
service:token:time:error:
ACKTracker
lock
unlock
_acknowledgementBlockWithDelegateIdentifier:
_isDroppingMessages
_logConnectionMap
IDSService
_callDelegatesForDevicesChanged
_setupNewConnectionForAccount:
_callIsActiveChanged
_tearDownConnectionForUniqueID:
usedEngram
setWantsManualAck:
groupCrypto
groupID
cacheIncomingGroup:completion:
_groupFromPublicDataRepresentation:completion:
fileURLWithPath:
removeItemAtURL:error:
type
isResponse
keyRepresentationForType:isResponse:
pointerValue
setArgument:atIndex:
_FTOptionallyDecompressData
engramGroupID
_payloadFromDecryptedData:
setUsedEngram:
_FTDataFromBase64String
participants
verifyAndRevealData:sendingDevice:cypherIdentifier:error:
code
_fetchGroupWithGroupID:skipCache:completion:
setTotalUnitCount:
setCompletedUnitCount:
service:account:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:messageContext:
service:account:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:
_filteredAccountsFrom:
_addIdentity:
isEqualToArray:
valueWithPointer:
__imFirstObject
_appearsToBeEmail
_appearsToBePhoneNumber
_sendingAccountForAccount:destination:
phoneNumberAccount
hasPrefix:
_sendSimulatorMessage:fromAccount:toDestinations:priority:options:identifier:error:
dataWithContentsOfFile:options:error:
attributesOfItemAtPath:error:
lastPathComponent
removeItemAtPath:error:
_sendSimulatorProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
_sendSimulatorData:fromAccount:toDestinations:priority:options:identifier:error:
_sendingAccountForAccount:
destinationWithDestinations:
currentProgress
progressWithTotalUnitCount:
containsString:
_handlePretendingToBeFullWithIdentifier:
isFileURL
fileSystemRepresentation
absoluteString
path
canSendMessageWithAccount:toDestination:
_publicDataRepresentationForGroup:completion:
fromID
initWithDestination:
initWithSocketDescriptor:
groupContextController
fetchRegisteredDeviceIdentityWithCompletion:
initWithCapacity:
connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:
_processAccountSet:
manuallyAckMessages
_accountController
_uniqueIDToConnection
_protobufSelectors
_lastIsActiveSet
_subServices
_pretendingToBeFull
_everHadDelegate
_manuallyAckMessages
_listenerCaps
_groupContextController
_idsSimulatorSupportDataHandlerToken
_uniqueIDToProgress
_acknowledgementTracker
_pendingRegisteredIdentitiesBlock
domain
getFileSystemRepresentation:maxLength:
stringWithFileSystemRepresentation:length:
cStringUsingEncoding:
linkItemAtPath:toPath:error:
copyItemAtPath:toPath:error:
_initWithAccountUniqueID:fromID:loginID:serviceName:
dictionaryWithCapacity:
accountUniqueID
_dictionaryRepresentation
transactionLogMessageFromDictionaryRepresentation:
_accountUniqueID
dataValue
initWithData:accountUniqueID:fromID:loginID:serviceName:
_dataValue
dictionaryValue
initWithDictionary:accountUniqueID:fromID:loginID:serviceName:
_dictionaryValue
__sendMessage:queue:reply:failBlock:waitForReply:
_disconnectFromQueryService
_requestCacheForService:completionBlock:
_requestCachedStatusForDestinations:service:listenerID:completionBlock:
_requestStatusForDestinations:service:listenerID:completionBlock:
_requestRemoteDevicesForDestination:service:listenerID:completionBlock:
initialize
mainBundle
bundleIdentifier
executablePath
IDSDataChannels
transactionLog
_nearbyStateChanged
_connectedStateChanged
_cloudConnectedStateChanged
modelIdentifier
linkedUserURIs
supportsSMSRelay
supportsMMSRelay
supportsPhoneCalls
deviceColor
enclosureColor
locallyPresent
productBuildVersion
pairingProtocolVersion
minCompatibilityVersion
maxCompatibilityVersion
isHSATrusted
supportsHandoff
initWithUUIDString:
supportsTethering
dictionaryWithObject:forKey:
closeSocket:
productName
productVersion
fullDescription
lastActivityDate
serviceMinCompatibilityVersion
setNSUUID:
supportsApplePay
socketForDomain:
openSocketWithOptions:completionHandler:onQueue:
closeStreamPairWithInputStream:outputStream:
closeSocketForDomain:
_info
_nearbyToken
_nearby
_connected
_immutableCloudConnected
_cloudConnected
_purgeIDStatusCacheAfter:
_cachedStatusForDestination:service:
_updateCacheWithDictionary:service:
_delegateMapForListenerID:service:
_callDelegatesWithBlock:delegateMap:
_idStatusForDestinations:service:listenerID:allowRenew:completionBlock:
_refreshIDStatusForDestinations:service:listenerID:allowRefresh:queue:completionBlock:
refreshIDStatusForDestinations:service:listenerID:queue:completionBlock:
currentIDStatusForDestinations:service:listenerID:queue:completionBlock:
_currentRemoteDevicesForDestinations:service:listenerID:queue:completionBlock:
initWithDelegateContext:queueController:
_isListenerWithID:listeningToService:
_setCurrentIDStatus:forDestination:service:
refreshIDStatusForDestination:service:listenerID:queue:completionBlock:
currentIDStatusForDestination:service:listenerID:queue:completionBlock:
currentRemoteDevicesForDestinations:service:listenerID:queue:completionBlock:
_hasCacheForService:
_currentCachedIDStatusForDestination:service:listenerID:
_warmupQueryCacheForService:
_flushQueryCacheForService:
addDelegate:forService:listenerID:queue:
removeDelegate:forService:listenerID:
_idStatusCache
_transactionIDToBlockMap
_connectionQueue
_listenerIDToServicesMap
destinationWithDevice:
openSocketForDomain:transportType:
operatingSystemVersion
establishStreamPairWithOptions:completionHandler:onQueue:
cleanupStreamPairWithInputStream:outputStream:
openSocketForDomain:
_linkID
_flags
_networkType
_connectionType
_RATType
_maxMTU
_remoteNetworkType
_remoteConnectionType
_remoteRATType
_maxBitrate
_linkUUID
_QRSessionID
_relayServerProvider
_serverIsDegraded
initWithDummyInformation
initWithLinkID:linkUUID:QRSessionID:flags:networkType:connectionType:RATType:MTU:remoteNetworkType:remoteConnectionType:remoteRATType:maxBitrate:relayServerProvider:relaySessionToken:relaySessionKey:serverIsDegraded:
linkID
linkUUID
QRSessionID
flags
networkType
RATType
maxMTU
maxBitrate
remoteNetworkType
remoteConnectionType
remoteRATType
relayServerProvider
serverIsDegraded
setRATType:
setMTU:
setMaxBitrate:
_verboseFunctionalLogging
_socketDescriptor
_eventHandler
_readHandler
_readHandlerWithOptions
_readState
_readSema
_hasMetadata
_sentFirstReadLinkInfo
_receivedPreConnectionData
_waitForPreConnectionDataForConnected
_startCalled
_startAutomatically
_osChannelFD
_pathEvaluator
_cellularLink
_linkContexts
_defaultLinkID
_preConnectionData
_sendingMetadata
_needsMediaEncryptionInfo
_outgoingBytes
_incomingBytes
_lastOutgoingStatReport
_lastIncomingStatReport
_MKIArrivalTime
_firstPacketArrivalTimeForMKI
numberWithChar:
realTimeContext
numberWithUnsignedChar:
getUUIDBytes:
_reportFirstPacketTimeForMKI:
addNewIDSDataChannelLinkWithAttributes:linkAttributesLength:
removeIDSDataChannelLinkContext:linkUUID:
selectDefaultLink:
sendMediaEncryptionInfoWithMKM:MKS:MKI:isLocallyGenerated:
sendMediaMembershipChangedInfo:
processMetadataForDatagram:size:datagramInfo:options:
_logReceivingStats:
readDatagramWithCompletionHandler:
readDatagramsWithCompletionHandler:
sendEventConnectedWithDummyLinkInfo
setChannelPreferences:
writeDatagrams:datagramSizes:datagramInfo:datagramCount:options:completionHandler:
generateMetadata:maxSize:withDatagramInfo:options:currentDatagramCount:totalDatagramCount:
_logSendingStats:
_writeDatagram:datagramSize:datagramInfo:options:completionHandler:
removeObjectsInRange:
sendMetadata
serializeSessionInfoMetadata:
connectedLinks
defaultLink
cachedMetadata
underlyingFileDescriptor
start
writeDatagrams:datagramsSize:datagramsInfo:datagramsCount:options:completionHandler:
writeDatagram:datagramSize:flags:completionHandler:
writeDatagram:datagramSize:datagramInfo:options:completionHandler:
setEventHandler:
setReadHandler:
setReadHandlerWithOptions:
readyToRead
requestSessionInfoWithOptions:
reportFirstPacketTimeForMKI:
optinStreamIDs:
optoutStreamIDs:
initSocketWithDevice:options:completionHandler:queue:
initStreamWithDevice:options:completionHandler:queue:
acAccountWithProfileID:username:accountStore:
_newNSUUIDArrayFromCBUUIDStrings:
initWithName:contextKey:
timeIntervalSinceNow
participantsFromEndpoints:
_refreshIDStatusForDestination:service:listenerID:
_refreshIDStatusForDestinations:service:listenerID:
_currentIDStatusForDestination:service:listenerID:
_currentIDStatusForDestinations:service:listenerID:
requestIDStatusForDestinations:service:listenerID:queue:completionBlock:
requestIDStatusForDestination:service:listenerID:queue:completionBlock:
_queueController
_handleReconnect
continuity:didStartAdvertisingOfType:
continuity:didStopAdvertisingOfType:
continuity:didFailToStartAdvertisingOfType:withError:
continuity:didStartScanningForType:
continuity:didStopScanningForType:
continuity:didFailToStartScanningForType:withError:
continuity:didDiscoverType:withData:fromPeer:
continuity:didLosePeer:type:
continuity:didStartTrackingPeer:type:error:
continuity:didStopTrackingPeer:type:
_initWithAccount:destinations:options:delegateContext:
sessionEnded:
_setupSocketPairToDaemon
initWithSocket:queue:delegate:
session:didReceiveData:
sendData:
session:receivedInvitationAcceptFromID:withData:
session:receivedInvitationAcceptFromID:
session:receivedInvitationDeclineFromID:withData:
session:receivedInvitationDeclineFromID:
session:receivedInvitationCancelFromID:withData:
session:receivedInvitationCancelFromID:
session:receivedSessionMessageFromID:withData:
session:receivedSessionEndFromID:withData:
session:invitationSentToTokens:
_initWithAccount:destinations:transportType:connectionCountHint:needsToWaitForPreConnectionData:uniqueID:delegateContext:
_setupUnreliableSocketPairConnection
_initialLinkType
_isAudioEnabled
_isMuted
_isLegacy
_inviteTimeout
_disableEncryption
_shouldUseSocketForTransport
_enableSingleChannelDirectMode
destinationWithDeviceURI:
destinationWithRapportPublicIdentifierURI:
destinationWithRapportPublicIdentifier:
_groupContextDataSource
_groupContextCacheMiddleware
groupContext:upsertGroupWithInfo:previousGroup:completion:
groupContext:fetchGroupWithID:completion:
publicDataRepresentationForGroup:inContext:completion:
groupFromPublicDataRepresentation:inContext:completion:
middlewareCacheCostForContext:
groupContext:cacheGroup:completion:
groupContext:cachedGroupWithID:completion:
groupContext:latestCachedGroupWithStableID:completion:
groupContext:fetchAllKnownGroups:
deleteAllKnownGroupsForGroupContext:completion:
deleteCachedValueForForGroupContext:withGroupID:completion:
_contextKey
_invalidateNextQueryTimer
_nextQuery:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
initWithTimeIntervalSinceNow:
idStatusUpdatedForDestinations:
_scheduleNextQuery:
date
timeIntervalSinceDate:
removeObjectsInArray:
_destinationsToQuery
_nextQueryTimer
_timeOfDeath
_numberOfQueriesDone
_isDead
sharedInstanceForBagType:
updateAvailability
_updateAvailability
_postAvailability:
_availability
_token
aliasToAccountsMap
accountForAlias:
_aliasToAccountsMap
initWithTask:delegate:queue:
_init
task
setTask:
_task
qPerformWithToken:
qIngestMessages:completion:
recipientAlias
syncTask
_transactionMessagesFromTransportMessages:withParticipants:groups:accountInfo:completion:
qFetchParticipantsFromDeviceMessges:andGroupsFromGroupMessages:completion:
_destinationsInMessages:
_groupIDsFromMessages:
_groupsByGroupIDFromGroups:
_participantsByAliasFromParticipants:
_transactionMessageFromTransportMessage:groups:participants:accountInfo:
_transactionMessageFromTransportMessage:withGroupID:groups:accountInfo:
_transactionMessageFromTransportMessage:withParticipants:accountInfo:
alias
deviceWithIdentifier:
encryptedPayload
cypherIdentifier
verifyAndRevealData:withReceipient:cypherIdentifier:error:
_transactionMessageFromTransportMessage:withDecryptedPayload:accountInfo:
senderAlias
payload
setSyncTask:
_syncTask
v4@?0
Warning
-[IDSContinuity startTrackingPeer:]
IDSFoundation
%s is deprecated, please use startTrackingPeer:forType:
-[IDSContinuity stopTrackingPeer:]
%s is deprecated, please use stopTrackingPeer:forType:
state
Ti,R
__kIDSDaemonDidConnectNotification
__kIDSDaemonWillConnectNotification
__kIDSDaemonDidDisconnectNotification
__k_IDSDaemonDidConnectNotification
__kIDSDaemonConnectionLostNotification
IDSDaemonControllerContext
com.apple.IDSDaemonControllerIvarQueue
com.apple.IDSDaemonControllerQueue
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
Exception returned from daemon: %@
com.apple.private.alloy.pbbridge
com.apple.private.alloy.accountssync
DaemonController
Sending down new services %@ commands %@ capabilities %d
v16@?0@4@8^B12
Set commands: %@  (Previous: %@)
Updating capabilities: %d  (Previous: %d)
-[IDSDaemonController addedDelegateForService:]_block_invoke
services
commands
xpc-object
object
object-context
com.apple.identityservices.xpc
accountsd
_autoReconnect
TB,S_setAutoReconnect:,V_autoReconnect
_remoteMessageQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_remoteMessageQueue
delegate
T@,W,N,V_delegate
isConnecting
TB,R,N
listenerID
T@"NSString",R,N,V_listenerID
listener
T@"IDSDaemonListener",R,N,V_daemonListener
curXPCMessagePriority
Ti,N,V_curXPCMessagePriority
__kIDSKeyRollingCompleteNotification
socket failed, errno: %d
gethostbyname failed, errno: %d
connect failed, errno: %d
IDSLocalSetup
IDSLocalSetupStart
IDSLocalSetupCompleted
IDSLocalSetupStop
IDSLocalSetupUnpair
IDSLocalSetupUnpairStart
IDSAddPairedDevice %@
DemoModeConfig
12345678-0000-DADA-DADA-DEADBEEEEEEE
IDSConnectPairedDevice %@
IDSDeletePairedDevice
%s %@
IDSDeletePairedDeviceWithCompletion
%s %@ %p %p
v8@?0@"NSDictionary"4
IDSGetPairedDevicesWithCompletionBlock
IDSGetPairedDevices
%s is DEPRECATED! Please use IDSGetPairedDevicesWithCompletionBlock
IDSInitialLocalSyncStarted
%s is DEPRECATED! Please use IDSInitialLocalSyncStartedForServices
IDSInitialLocalSyncCompleted
%s is DEPRECATED! Please use IDSInitialLocalSyncCompletedForServices
IDSInitialLocalSyncStartedForServices
IDSInitialLocalSyncCompletedForServices
IDSSetAllowedTrafficClassifiersForDevice
%s: invalid device %@
IDSGetAllowedTrafficClassifiersForDevice
IDSDropAllMessagesWithoutAnyAllowedTrafficClassifier
com.apple.madrid
com.apple.ess
com.apple.private.ac
com.apple.private.alloy.facetime
com.apple.private.alloy.facetime.mw
com.apple.private.alloy.facetime.multi
com.apple.private.alloy.bulletinboard
com.apple.private.alloy.photostream
com.apple.private.alloy.maps
com.apple.private.alloy.screensharing
com.apple.private.alloy.sms
com.apple.private.alloy.multiplex1
com.apple.private.alloy.biz
session:
sessionID
T@"NSString",R,N
destination
sessionEndedReason
TI,R,N
IDSReportSpam
IDSReportiMessageSpam - %@  (toURI: %@)
IDSReportiMessageUnknownSender - %@, %@, %@  (toURI: %@)
IDSCheckiMessageUnknownSender (toURI: %@ Count: %@)
__IDSServiceAvailabilityDidChangeNotification
availability
service
ServiceAvailability
%@ posting availability change notification (%@) - available: %d
%@ creating monitor for service: %@
%@ adding listener `%@` for service: %@
%@ removing listener `%@` for service: %@
%@ no more listeners for service: %@
monitor
T@"IDSServiceMonitor",&,N,V_monitor
listeners
T@"NSMutableSet",R,N,V_listeners
IDSDaemonListener-ivarQueue: %@
IDSDaemonListenerContext
v8@?0@"<IDSDaemonListenerProtocol>"4
Exception: %@ in handler: %@ while executing a block
IDSDaemonListener _removeAccountOnIvarQueue %@ was told of an account without a unique id or service name: %@
v16@?0@4I8^B12
IDSDaemonListener accountAdded %@ was told of an account without a unique id or service name: %@
-[IDSDaemonListener accountAdded:]
IDSDaemonListener accountRemoved %@ was told of an account without a unique id or service name: %@
-[IDSDaemonListener accountRemoved:]
IDSDaemonListener accountEnabled was told of an account without a unique id %@ or service %@
IDSDaemonListener accountDisabled was told of an account without a unique id %@ or service %@
com.apple.private.alloy.voicemailsync
IDSDaemonListener accountInfoChanged %@ was told of an account without a unique id or service name: %@
v16@?0@"NSDictionary"4I8^B12
serviceInfo
enabledAccountsInfo
dependentDevices
deviceIdentifier
activeDeviceUniqueID
DaemonListener
XPC object received %@:%@
Exception: %@ in handler: %@ while executing: %@
isSetupComplete
hasPostedSetupComplete
_hidingDisconnect
TB,N,S_setHidingDisconnect:
IDSRealTimeEncryptionProxy
Setting up delegate %p
Sending the real-time media prekey of this device to the group %@
object-type
public-keys
_IDSRealTimeEncryptionProxy
the delegate object %@ doesn't respond to the selector didReceivePublickeys:
master-key-materials
the delegate object %@ doesn't respond to the selector didReceiveMasterKeyMaterials:
unknown object type %@
delegates
T@"NSMutableSet",&,N,V_delegates
serviceCallbackMap
T@"NSMapTable",&,N,V_serviceCallbackMap
nameServiceMap
T@"NSMutableDictionary",&,N,V_nameServiceMap
faceTimePreviousEnabled
T@"NSNumber",&,N,V_faceTimePreviousEnabled
v8@?0B4
direction
IDSSession
Received invalid options %@, bailing
socket
Ti,R,N
isAudioEnabled
TB,N
isMuted
invitationTimeOut
Ti,N
IDQuery
IDSIDQueryController
Received IDQueryCompletedWithFromURI %@ idStatusUpdates %@ service %@ success %@ error %@
IDSIDQuery
v16@?0@"NSString"4@"NSDictionary"8^B12
Updated local cache to %@
Notifying delegate %@ about ID status update
v8@?0@"<IDSIDQueryControllerDelegate>"4
addListener:forService:
ListenerID is empty, bailing...
Service name is empty, bailing...
%@ -> %@
Final map after add %@
removeListenerID:forService:
Final map after remove %@
WatchPairing
void IDSSimulatedLocalPairingAddPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
%s  (simulatorDeviceID: %@)
IDSSimulatorLocalPairingAddPairedDevice
IDSSimulatorSupport
void IDSSimulatedLocalPairingDeletePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSSimulatorLocalPairingDeletePairedDevice
void IDSSimulatedLocalPairingSwitchActivePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
IDSSimulatorLocalPairingSwitchActivePairedDevice
IDSBatchIDQueryControllerQueue
v8@?0@"NSObject<OS_xpc_object>"4
IDSSendMessageOptionTimeout
IDSSendMessageOptionSkipPayloadCheck
IDSSendMessageOptionTopLevelDictionary
IDSSendMessageOptionDataToEncrypt
IDSSendMessageOptionWantsResponse
IDSSendMessageOptionFromID
IDSSendMessageOptionCommand
IDSSendMessageOptionWantsDeliveryStatus
IDSSendMessageOptionDeliveryStatusContext
IDSSendMessageOptionUUID
IDSSendMessageOptionAlternateCallbackIdentifier
IDSSendMessageOptionEncryptPayload
IDSSendMessageOptionCompressPayload
IDSSendMessageOptionFireAndForget
IDSSendMessageOptionWantsClientAcknowledgement
IDSSendMessageOptionLocalDelivery
IDSSendMessageOptionForceLocalDelivery
IDSSendMessageOptionRequireBluetooth
IDSSendMessageOptionRequireLocalWiFi
IDSSendMessageOptionDuet
IDSSendMessageOptionExpectsPeerResponse
IDSSendMessageOptionPeerResponseIdentifier
IDSSendMessageOptionOpportunisticDuet
IDSSendMessageOptionTethering
IDSSendMessageOptionActivityContinuation
IDSSendMessageOptionNSURLSession
IDSSendMessageOptionMapTile
IDSSendMessageOptionNonWaking
IDSSendMessageOptionBypassDuet
IDSSendMessageOptionFakeMessage
IDSSendMessageOptionRequireAllRegistrationProperties
IDSSendMessageOptionRequireLackOfRegistrationProperties
IDSSendMessageOptionInterestingRegistrationProperties
IDSSendMessageOptionQueueOneIdentifier
IDSSendMessageOptionDuetIdentifiersOverride
IDSSendMessageOptionSockPuppet
IDSSendMessageOptionEnforceRemoteTimeouts
IDSSendMessageOptionAccessToken
IDSSendMessageOptionHomeKitMessage
IDSSendMessageOptionDisableAliasValidation
IDSSendMessageOptionForceEncryptionOff
IDSSendMessageOptionSubServiceKey
IDSSendMessageOptionAllowCloudDeliveryKey
IDSSendMessageOptionAlwaysSkipSelfKey
IDSSendMessageOptionNonCloudWakingKey
IDSSendMessageOptionMetricReportIdentifier
IDSSendMessageOptionLiveMessageDelivery
IDSSendMessageOptionWantsProgress
_internal
T@"_IDSConnection",R,N
account
T@"IDSAccount",R,N
isActive
Error
%F %T 
%-6u %p %s 
block
T@,R,N,V_block
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
IDSTransactionLogErrorDomain
completionBlock
T@?,C,N,V_completionBlock
batchProcessingBlock
T@?,C,N,V_batchProcessingBlock
knownRecordIDsFromList
T@?,C,N,V_knownRecordIDsFromList
shouldContinueFromLastSyncPoint
TB,N,V_shouldContinueFromLastSyncPoint
handler
T@?,C,N,V_handler
-[IDSPairedDeviceManager setAllowedTrafficClassifiers:]_block_invoke
-[IDSPairedDeviceManager deletePairedDevice:withCompletionBlock:queue:]_block_invoke
-[IDSPairedDeviceManager getLocalDeviceInfoWithCompletionBlock:queue:]
-[IDSPairedDeviceManager getPairedDeviceInfoWithCompletionBlock:queue:]
-[IDSPairedDeviceManager getDeliveryStatsWithCompletionBlock:queue:]
allowedTrafficClassifiers
T@"NSSet",&,N
IDSPhoneCertificateVendorErrorDomain
%ld:%@:%@:%@
serverVerifiableEncoding
authenticationCertificate
T@"IDSAuthenticationCertificate",R,N,V_authenticationCertificate
inputData
T@"NSData",R,N,V_inputData
nonce
T@"NSData",R,N,V_nonce
signature
T@"NSData",R,N,V_signature
com.apple.IDS.IDSPhoneCertificateVendor
FTSelectedPNRSubscription
FTServices
An unknown error occurred
Failed to fetch local phone authentication certificate
Failed to generate phone authentication signature
Request timed out waiting for response from daemon
The requested operation is not supported on this platform
Unknown phone certificate error
strongSelfReference
T@"IDSPhoneCertificateVendor",&,N,V_strongSelfReference
daemonRequestTimer
T@"IDSDaemonRequestTimer",R,N,V_daemonRequestTimer
cfs_client_blob_set_get_blob
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1171.94.2/IDS/Client/IDSCFSClient.c
index < set->count
cfs_client_create
callback != NULL
tcp_connect failed, errno: %d
pthread_create failed, errno: %d
cfs_client_destroy
client->fd >= 0
client->isrunning
shutdown failed, errno: %d
pthread_join failed, errno: %d
start
size > 0
read failed, errno: %d
n == DESERIALIZER_SUCCESS
bad reply type: %d
connection closed
DESERIALIZER_BAD_DATA
deserialize failed
Registration
Couldn't find existing IDSAccountController adding new one %@
AccountController
    %@ -> %p
accounts
T@"NSSet",R,N
com.apple.ids
FixedConferenceServerAddress
joinGroupSessionError
Cannot join a session that is already ended.
Cannot join a session without the participant data information.
v8@?0@"<IDSGroupSessionDelegate>"4
session-device-socket
error
uniqueID
TI,R,N,V_state
boostContext
T@,&,N,V_boostContext
Request type %d failed with error code %d, make sure to set the participant info.
No conference server support, lost connection to server!
Request type %d succeeded
REPLY_TYPE_JOIN_REPLY
cfs_client left group session
Number of clients broadcasted: %u
REPLY_TYPE_JOIN_NOTIFICATION
Client %u left
REPLY_TYPE_BROADCAST_NOTIFICATION
Unknown reply type: %d
process_cfs_client_blob_set: client count: %u
process_cfs_client_blob: clientid: %u, datasz: %u
kIDSGroupContextControllerPersistedToken
kIDSGroupContextControllerListenerID
v12@?0@"IDSGroupContextControllerContent"4@"NSError"8
v12@?0@"ENGroup"4@"NSError"8
v8@?0@"CUTAsyncReducerState"4
v8@?0@"CUTResult"4
v12@?0@"ENGroupContext"4@"NSError"8
v8@?0@"NSArray"4
v20@?0@"NSArray"4B8@"IDSCloudKitTransportLogChangeToken"12@"NSError"16
v12@?0@"IDSDeviceIdentity"4@"NSError"8
v8@?0@"ENGroup"4
ClientGroupContextController
 Group Context Created %@
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"<IDSGroupContextControllerDelegate>",N,V_delegate
seal
T@"CUTPromiseSeal",&,N,V_seal
serviceName
T@"NSString",&,N,V_serviceName
cloudKitContainer
T@"IDSCloudKitContainer",&,N,V_cloudKitContainer
groupContext
T@"ENGroupContext",&,N,V_groupContext
accountIdentity
T@"ENAccountIdentity",&,N,V_accountIdentity
FixedQuickRelayServerAddress
QRAllocator
Faied to get address in FixedQuickRelayServerAddress defaults
Decoded relay-server-address %@:%u
FixedQuickRelaySessionID
Decoded base64 relay-session-id %@
FixedQuickRelaySessionToken
Decoded base64 relay-session-token %@
FixedQuickRelaySessionKey
Decoded base64 relay-session-key %@
Warning, missing %@ to add to %s
sessionInfo
Using preallocated tokens from user defaults
Missing a defaults for hardcoded QR session info
relayIP
T@"NSData",C,V_relayIP
relayPort
T@"NSNumber",C,V_relayPort
relaySessionToken
T@"NSData",C,V_relaySessionToken
relaySessionKey
T@"NSData",C,V_relaySessionKey
relaySessionID
T@"NSData",C,V_relaySessionID
relayCombinedSoftwareID
T@"NSNumber",C,V_relayCombinedSoftwareID
appleID
T@"NSData",C,V_appleID
_IDSConnection
Account delegate has been cleaned up via weak references %p
IDSConnection
whitelistedidsservices
IDSClientBringsUpCloudMessaging
com.apple.private.alloy.nsurlsessionproxy
QueueOneIdentifier not a string! [%@]
callstack %@
IDSActivityContinuationIdentifier
IDSOpportunisticDuetIdentifier
i12@?0@"NSString"4@"NSString"8
OutgoingMessage
_pendingSends
GUIDTRACE
OUTGOING-CLIENT_REQUEST:%@ SERVICE:%@
unknown type
Client request to send %@ on service: %{public}@   guid: %{public}@   to destinations: %@   options: %@    size: %d] (%lu pending)
SendToDaemon
Cannot send to empty destination set
Cannot send with an inactive account
Cannot send payload of this size
Invalid address: %@
protobuf
sendPayload - could not find account uniqueID! self: %@ account: %@
Could not find account uniqueID!
Cannot send empty message
%@ unable to plist-serialize dictionary %@ !!
URGENT
Default
Sync
Client request to send %{public}@ message (dictionary) service: %{public}@  to destinations: %@   options: %@]
message (dictionary)
sendPayload - could not plist serialize dictionary.
Could not plist serialize dictionary or otherwise empty payload
data
%@ asked to send server message %@ with command %@ - invalid value!
v8@?0@"<IDSConnectionDelegate>"4
%@ not connecting to identityservicesd - no serviceName for account %@
Failed to connect to identityservicesd; %@ %@
%@ resending %@ alternate %@ due to daemon disconnection.
v16@?0@"NSString"4@"IDSSendParameters"8^B12
OUTGOING-UPDATE:%@ CODE:%ld LASTCALL:%@
%@ outgoing message guid response: %{public}@  callbackID: %@  response code: %ld   error: %{public}@  WiProx error: Error Domain=%{public}@ Code=%{public}@ %{public}@  lastCall: %@
%@ outgoing message guid response: %{public}@  callbackID: %@  response code: %ld   error: %{public}@   lastCall: %@
Server Timestamp for UpdatedWithResponseCode?%@
IDS sending success is NO though error is unset
Unknown error
  => <%@:%p> finished handling message guid: %@  (connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:)
  => <%@:%p> finished handling message guid: %@  (connection:identifier:didSendWithSuccess:error:context:)
%@ identifier %@ callbackID %@ willSendToDests count %@ skipped count %@  map count %@
  => <%@:%p> finished handling message guid: %@  (connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:)
app-level ack
%@ received app-level ack with identifier %@ context %@
Ignoring %@ for topic %@ my topic is %@
com.apple.private.alloy.electrictouch
Ignoring %@ to: %@ it is not to my aliases: %@ account uuid: %@
Ignoring %@, account is not configured: %@    isActive: %@  isRegistered: %@  isLocal: %@
Ignoring %@ for topic %@ because fromID %@ is a suppressed IDSDevice.
message
%@ received message: %@  topic %@  from: %@  to: %@   payload items: %d
INCOMING-CLIENT_MESSAGE:%@ SERVICE:%@
%@ received data: %@ topic %@  from: %@  to: %@
INCOMING-CLIENT_DATA:%@ SERVICE:%@
%@ received Engram Dict: %@ topic %@  from: %@  to: %@
Accessory data commands are only supported on AppleID accounts, This one is not for me.
%@ received Accessory data: %@ topic %@  from: %@  to: %@
accessoryReportMessage
%@ received Accessory Report Message: %@ topic %@  from: %@  to: %@
INCOMING-CLIENT_PROTOBUF:%@ SERVICE:%@
(unknown)
Client received protobuf from daemon %@ for topic: %@  messageID: %@  fromID: %@
 => Handed protobuf ID %@ to delegate: %@
Ack'ing message %@ to daemon that client got it
session invitation
Received incoming invitation %@ forTopic %@ sessionID %@ toIdentifier %@ fromID %@ transportType %@
group session participant update
Received incoming group session participant update forTopic %@
group session participant data update
Received incoming group session participant data update forTopic %@
Incoming Group Share
Incoming Registered Identities
checkTransportLog {reason: %ld}
com.apple.private.alloy.audiocontrol.music
com.apple.private.alloy.bluetooth.audio
com.apple.private.alloy.bluetoothregistry
com.apple.private.alloy.bluetoothregistry.cloud
com.apple.private.alloy.bluetoothregistryclassa
com.apple.private.alloy.bluetoothregistryclassc
com.apple.private.alloy.bulletindistributor
com.apple.private.alloy.camera.proxy
com.apple.private.alloy.cmsession
com.apple.private.alloy.continuity.activity
com.apple.private.alloy.continuity.auth
com.apple.private.alloy.continuity.auth.classa
com.apple.private.alloy.continuity.encryption
com.apple.private.alloy.continuity.tethering
com.apple.private.alloy.continuity.unlock
com.apple.private.alloy.coreduet
com.apple.private.alloy.ct.commcenter.p2w.settings
com.apple.private.alloy.findmylocaldevice
com.apple.private.alloy.idscredentials
com.apple.private.alloy.idsremoteurlconnection
com.apple.private.alloy.idstool.testservice.1
com.apple.private.alloy.idstool.testservice.2
com.apple.private.alloy.idstool.testservice.3
com.apple.private.alloy.idstool.testservice.4
com.apple.private.alloy.idstransfers
com.apple.private.alloy.location.auth
com.apple.private.alloy.location.motion
com.apple.private.alloy.location.stream
com.apple.private.alloy.location.usage
com.apple.private.alloy.maps.proxy
com.apple.private.alloy.mediaremote
com.apple.private.alloy.otaupdate
com.apple.private.alloy.pairedunlock
com.apple.private.alloy.phonecontinuity
com.apple.private.alloy.proxiedcrashcopier
com.apple.private.alloy.pushproxy
com.apple.private.alloy.sharing.paireddevice
com.apple.private.alloy.siri.device
com.apple.private.alloy.siri.location
com.apple.private.alloy.siri.proxy
com.apple.private.alloy.sms.watch
com.apple.private.alloy.ssh
com.apple.private.alloy.sysdiagnose
com.apple.private.alloy.systemsettings
com.apple.private.alloy.tccd.msg
com.apple.private.alloy.tccd.sync
com.apple.private.alloy.timesync
com.apple.private.alloy.timezonesync
com.apple.private.alloy.willow.proxy
com.apple.private.alloy.wifi.networksync
com.apple.private.alloy.fmf
com.apple.identityservicesd.nsxpc.auth
DaemonProxy
Client has set export object %@
Invalidation Handled
Interruption Handled
connection
T@"NSXPCConnection",&,N,V_connection
groupContextDataSource
T@"<IDSGroupContextDataSourceDaemonProtocol>",R,N
groupContextCacheMiddleware
T@"<IDSGroupContextCacheMiddlewareDaemonProtocol>",R,N
observer
T@"IDSGroupContextNotifyingObserver",&,N,V_observer
v8@?0@"NSMutableSet"4
-[IDSQuickSwitchAcknowledgementTracker awaitAcknowledgementFromServiceDelegate:]
-[IDSQuickSwitchAcknowledgementTracker identifierForServiceDelegate:]
%@ (%p)
-[IDSQuickSwitchAcknowledgementTracker stopAwaitingAcknowledgementFromServiceDelegateWithIdentifier:]
-[IDSQuickSwitchAcknowledgementTracker stopAwaitingAcknowledgementFromAllServiceDelegates]
isAwaitingAcknowledgement
IDSLocalPairingDaemonResponseListener
NRPairing
void IDSLocalPairingAddPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
cbuuid
%s (%s: %@)   (%s: %p)   (%s: %p)
%s received nil requestID. Cannot call daemon. This should never happen!
void IDSLocalPairingConnectPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
void IDSLocalPairingSetupCompletedForPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
void IDSLocalPairingSwitchActivePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
void IDSLocalPairingRedeliverMessages(IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
deviceUniqueID
void IDSLocalPairingDeletePairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
void IDSLocalPairingUnpairStartForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
void IDSLocalPairingStopForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
void IDSLocalPairingUnpairForDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
void IDSLocalPairingForgetPairedDevice(NSUUID *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
void IDSLocalPairingGetPairingDevicesWithCompletionBlock(__strong IDSLocalPairingPairedDevicesCompletionBlock, __strong dispatch_queue_t)
%s (%s: %p)   (%s: %p)
void IDSLocalPairingGetPairedDevicesWithCompletionBlock(__strong IDSLocalPairingPairedDevicesCompletionBlock, __strong dispatch_queue_t)
void IDSLocalPairingSetAllowedTrafficClassifiersForDevice(NSSet *__strong, IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
classifiers
%s (%s: %@)   (%s: %@)   (%s: %p)   (%s: %p)
void IDSLocalPairingGetAllowedTrafficClassifiersForDevice(IDSDevice *__strong, __strong IDSLocalPairingTrafficClassifiersCompletionBlock, __strong dispatch_queue_t)
void IDSLocalPairingDropAllMessagesWithoutAnyAllowedTrafficClassifier(IDSDevice *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
void IDSLocalPairingReunionSyncStartedForServices(NSArray *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
void IDSLocalPairingReunionSyncCompletedForServices(NSArray *__strong, __strong IDSLocalPairingCompletionBlock, __strong dispatch_queue_t)
v8@?0@"NSError"4
v12@?0@"NSArray"4@"NSError"8
_IDSDeviceConnection was created without an IDSDevice %@ or service %@
IDSDeviceConnection
<%p> The client passed the smaller timeout %@ than the default value. IDSDeviceConnection will use the default value.
<%p> Init connection socket %d with options: %@  device: %@  (%@)  (name %@) service %@ connectionUUID %@ timeout %@
completionHandlerID
protocol
<%p> _IDSDeviceConnection has timed out waiting for a socket.
Socket open timed out
<%p> Updating stream pair: %@:%@
Cannot change priority when not connected
<%p> Updated socket traffic class: %d
Could not set traffic class for underlying socket
Invalid priority level specified
Options dictionary contains no valid options
<%p> Closing socket: %d (name %@)
<%p> Closing socket: skipped, a new connection for this %@
device-socket
metrics
<%p> World, id[%@] !=? id[%@]
<%p> xpc object: [%@] context: [%@]
Received XPC Response/Socket: %d    Error: %@
Received XPC Response/Socket: %d
Error: %@
<%p> Opened socket: %d (Success: %@ ) %@ (%@)
Open socket request already timed out, closing %d.
Daemon died, closing socket: %d
%@_%@
T@"NSDictionary",R,N
inputStream
T@"NSInputStream",R,N
outputStream
T@"NSOutputStream",R,N
deserialize failed, bad magic number2
group name length is 0
group name is not 0-terminated
client blob size too big: %u
deserialize failed, bad magic number3
IDSAccountController
Updating delegates of account changes
v8@?0@"<IDSAccountControllerDelegate>"4
Accounts
Re-loading cached accounts for service: %@ with dictionaries %@
Account loaded was of unknown account type %d, ignoring...
@8@?0@4
status
Account added was of unknown account type %d, bailing...
**** Account added has no uniqueID **** %@
**** Account removed has no uniqueID **** %@
Received account updated %@ for topic %@
Account updated was of unknown account type %d, ignoring...
v12@?0@4^B8
Account changed was of unknown account type %d, ignoring...
IDSAccountController-setupCompleteQueue
internalAccounts
enabledAccounts
Creating new IDSAccount %p with config %@ uniqueID %@ serviceName %@
%@: %p [Service: %@  User: %@  ID: %@  Type: %@  Active: %@  Registration Status: %@]
activeAliases
T@"_IDSAccount",R,&,N
_isEnabled
TB,N,S_setIsEnabled:
isUsableForOuterMessaging
aliases
T@"NSArray",R,N
aliasStrings
vettedAliases
handles
profileInfo
accountInfo
T@"NSDictionary",&,N
accountType
displayName
registrationStatus
registeredURIs
registrationCertificate
T@"NSData",R,N
dateRegistered
T@"NSDate",R,N
nextRegistrationDate
pushToken
regionID
regionBasePhoneNumber
regionServerContext
profileID
primaryServiceName
isUserDisabled
loginID
T@"NSString",&,N,V_loginID
canSend
devices
nearbyDevices
IDSiCloudSignInHack
iCloud sign in hack with userName %@ password %@
iCloud sign out hack
Kicking get dependent
device:%@
guest-device:%@
No cloudID Provided
urn:ck:%@
Required Field Is Empty
A required Field Is Empty
ServiceUserID and AdminID can not be the same
Tried to create an account with empty service name, bailing...
Tried to create an account with unknown account type %d, bailing...
No account type specified, setting to Apple ID
com.apple.private.alloy.icloudpairing
New account info %@ for %@
B8@?0@4
inbox.appleid.apple.com
v8@?0@"<IDSAccountDelegate>"4
phone-number-registration
next-registration-date
registration-date
uris
ids-registration-cert
push-token
<%p:%@:%@:%@:%@:%@:%@>
%@ not connecting to identityservicesd - no serviceName for config %@
v8@?0@"<IDSAccountRegistrationDelegate>"4
pushTopic
isInTransientRegistrationState
isTransientCloudPairingAccount
suppressedDevices
T@"NSArray",R,W,N
T@"NSData",R,W,N
T@"NSDate",R,W,N
T@"NSString",R,W,N
T@"NSDictionary",R,W,N
B12@?0@"IDSAccount"4^B8
T@"_IDSService",R,N
T@"NSSet",R,C,N
T@"NSArray",R,C,N
LinkType
PacketsPerSecond
InputBytesPerSecond
OutputBytesPerSecond
Intent
Timestamp
com.apple.registration
saveviewRegTimeout
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1171.94.2/IDS/Client/IDSDaemonRequestTimer.m
<Unknown File>
The request context map should be empty after canceling all countdowns.
%@-idswake
_IDSService
Client received event %s on service %@
v12@?0@"NSObject<OS_xpc_object>"4@"NSObject<OS_xpc_object>"8
IDSSimulatorSupportRegisterDataHandler
v16@?0@"NSString"4@"NSData"8@"NSString"12
Couldn't soft link IDSSimulatorSupportRegisterDataHandler(). Just failing here
Call made to deprecated IDSService API with service domain %@
IDSConnection/IDSAccountController delegates have been cleaned up via weak references %p
IDSSimulatorSupportUnregisterDataHandler
Couldn't soft link IDSSimulatorSupportUnregisterDataHandler(). Just failing here
IDSService deallocating with serviceName %@
Failed to deserialize data %p. error: %@
options
senderDeviceID
type
pbType
pbIsResponse
Failed to create IDSProtobuf from data %p
fileData
fileName
fileAttrs
Failed to create staging directory at %@ from data %p:%@
Failed to write file data to %@ from data %@: %@
Failed to set file attributes for %@ to %@ from data %p: %@
ackedMsgID
ackedSubService
v8@?0@"<IDSServiceDelegate>"4
IDSSimulatorSupportSendDataWithOptions
Failed to to archive ack dict %@ for message %@ on service %@ subservice %@
Failed to send ack for message %@ on service %@ subservice %@
v20@?0B4@"NSString"8@"NSError"12@"NSDictionary"16
Couldn't soft link IDSSimulatorSupportSendData(). Just failing here
v16@?0@4@"IDSConnection"8^B12
IDSService
%@: OTRTestCallback: token is %@, setupTime is %.6f, error==nil is %d
v8@?0@"<IDSServiceDelegatePrivate>"4
v8@?0@"NSString"4
Connection map:
v16@?0@"NSString"4@"IDSConnection"8^B12
   %@ => %@
Tearing down connection for %@
incomingData on connection guid %@ using engram %@
incomingData of size %lu on connection %@ account %@ from ID %@ sender-side-identifier %@
Calling out to IDSService delegate %p for incomingData if it responds.
Done for IDSService delegate %p for incomingData - doesRespondToSelector? %@
Context %@ WantsAppAck %@ AppAckGuid %@ storageGuid %@
Sending app-level ack dispatch called for message %@
incomingGroupData on connection guid %@ using engram %@
incomingGroupData of size %lu on connection %@ account %@ from ID %@ sender-side-identifier %@
Error converting Group Data to ENGroup %@
No error returned however unable to create group from data (timeout?) %@, Original Data: %@
Group Share Persisted %@
Calling out to IDSService delegate %p for incomingAccessoryData if it responds.
Done for IDSService delegate %p for incomingAccessoryData - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingAccessoryReportMessage if it responds.
Done for IDSService delegate %p for incomingAccessoryReportMessage - doesRespondToSelector? %@
incomingMessage on connection %@ account %@ from ID %@  from device: %@  sender-side-identifier: %@
incomingMessage on connection guid %@ using engram %@
Consumed sandbox extension [%@] handle [%llu] for resource [%@]
No sandbox extension for received resource [%@]
Remove file success: %@, error: %@ (accessed %d)
v8@?0i4
Calling out to IDSService delegate %p for incomingResource if it responds.
Done for IDSService delegate %p for incomingResource - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingResource with metadata if it responds.
Done for IDSService delegate %p for incomingResource with metadata - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage if it responds.
Done for IDSService delegate %p for incomingMessage - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage with context if it responds.
Done for IDSService delegate %p for incomingMessage with context - doesRespondToSelector? %@
Incoming protobuf %@, routing to selector/delegate. sender-side-identifier %@
Incoming protobuf on connection guid %@ using engram %@
service:account:fromID:context:
Found selector %@ fullSelector %@ for key 0x%x
 => Delgate %p responds to: %@, passing along protobuf: %p
   * Done handling
No selector for key 0x%x = type(%u) isResponse(%@), notifying delegates
 => Delgate %p responds unhandled protobuf passing along protobuf: %p
No delegate was registered that could handle protobuf %@
incomingTopLevelMessage on connection guid %@ using engram %@
Calling out to IDSService delegate %p for incomingTopLevelMessage if it responds.
Done for IDSService delegate %p for incomingTopLevelMessage - doesRespondToSelector? %@
DecryptedEngramData %@ %@
IDSIncomingMessageDecryptedData
v20@?0@"NSData"4@"ENGroup"8@"NSError"12B16
Decrypting Engram Message, Org Payload %@
Failed decrypting Engram {error: %@, serviceName: %@}
isActiveChanged on connection %@ isActive %@
%@ got messageIdentifier %@ callbackID %@ updatedWithResponseCode: %ld error %@ lastCall %@
%@ got messageIdentifier %@ callbackID %@ updatedWithResponseCode: %ld error %@ lastCall %@ sentBytes %@ totalBytes %@
%@ got identifier %@ callbackID %@ willSendToDestinations %@ skippedDests %@ regPropsToDests (count) %@
%@ got identifier %@ didSendWithSuccess %@  error %@ num delegates: %lu
%@ got identifier %@ hasBeenDeliveredWithContext %@
Sending up options to client: %@
Filtering account %@ with aliases %@  isActive? %@  canSend? %@
Attempting To Send message from account %@ to destinations %@
Attempting to send on a non local account, this message is allowed to progress
Attempting to send to more than 1 destination, this message will fail in the daemon if necessary
Attempting to send to a remote destination from a local account, this is permited if proxy is permitted and will fail in the daemon if not
com.apple.private.alloy.willow
device:
Failed to delete file at %@ after sending
simID
originalSimDestination
IDSSimulatorSupportGetCurrentConnectedSimulatorID
Out of space
Sending AccessoryData Now
sendAccessoryData - Could not find connection for account %@
sendAccessoryData - All accounts %@
Could not find valid account
sendServerMessage - Could not find connection for account %@
sendServerMessage - All accounts %@
setPreferInfraWiFi: %@
setLinkPreferences: %{public}@
Received invalid link preferences
forceOTRNegotiation
sendResourceAtURL - resourceURL not a file %@
Sending non-file resource unsupported
Attempted to link or copy file %@ destination %@ (%s to %@)
sendResourceAtURL - unable to link or copy file %@
Unable to link or copy file
sendResourceAtURL - resourceURL %@  isFileURL %@  localDelivery %@
resourceTransferMessageDict
com.apple.identityservices.send
Issued sandbox extension [%s] for file [%@]
Failed to issue sandbox extension for linked/copied file [%@]
Issued sandbox extension [%s] for original file [%@]
Failed to issue sandbox extension for original file [%@]
sendMessage - Could not find connection for account %@
sendMessage - All accounts %@
sendMessage - Unable to send message to this destination from this account %@
Destination device is not active for this account
v12@?0@"NSData"4@"NSError"8
Call made to manually ack a message, however this service does not support manually acking of messages
Unable to create stream connection with destination
Creating datagram channel with destination %@ => %@
Unable to create datagram channel with destination
Creating datagram channel with socket %d => %@
Unable to create datagram channel with socket descriptor
Fetching Identities {transactionID: %@}
Failed to send group ahead {group: %@, error: %@}
Did send group ahead {group: %@ identifier: %@}
groupContextController
T@"IDSGroupContextController",R,&,N,V_groupContextController
iCloudAccount
serviceDomain
T@"NSString",R,C,N
pretendingToBeFull
TB,N,GisPretendingToBeFull
manuallyAckMessages
TB,N,V_manuallyAckMessages
IDSSimulatorSupportErrorDomain
IDSSimulatorSupportOptionSetMessageIdentifier
_idsSimulatorSupportOptionsFromIDSSendOptions()
Failed to decode data of %lu bytes to a uuid string
.XXXX
sendResourceAtURL - can't allocate %ld bytes for new file path
sendResourceAtURL - failed to clone file %@ => %@ (error %d). Will try hard link.
sendResourceAtURL - failed to link and failed to copy file %@ => %@ (error %@)
IDSTransactionLogMessageAccountUniqueIDKey
IDSTransactionLogMessageFromIDKey
IDSTransactionLogMessageLoginIDKey
IDSTransactionLogMessageServiceNameKey
IDSTransactionLogMessageDictionaryValueKey
IDSTransactionLogMessageDataValueKey
fromID
T@"NSString",R,N,V_fromID
T@"NSString",R,N,V_loginID
accountUniqueID
T@"NSString",R,N,V_accountUniqueID
T@"NSString",R,N,V_serviceName
dataValue
T@"NSData",R,N,V_dataValue
dictionaryValue
T@"NSDictionary",R,N,V_dictionaryValue
com.apple.springboard
Clearing out _connection, we're disconnecting
Forcing a disconnect, terminating connection
No service %@, bailing...
No block %p, bailing...
Cache request for service %@
transactionID map after ADD %@
service-cache-request
transactionID
is-springboard
Sending cache request for service %@ transactionID %@
cache
transactionID map after REMOVE %@
Could not create message for cache query
No listenerID %@, bailing...
Cached ID status request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
No destinations, not issuing query...
cached-id-status-query
destinations
Received cached id status (destinations: %@) (service: %@)
ID status renewal request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
id-status-query
Received id status (destinations: %@) (service: %@)
ID remote device request (destination: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
remote-device-status-query
No message to send %@, ignoring...
Query service disconnected
Error requesting client: %s
No connection to send message on
Unknown account type
Unknown service
Empty user name
Empty service name
Process not entitled
Component disconnected
Component crashed
Remote user isn't registered
Attachment send failed
Encryption failed
Message send failed
Invalid caller id
Payload is too big to send
Unknown exception
Timed out
Replaced
Device Unpaired
Bluetooth required
No space
Cannot read resource
Data protection class unavailable
Database filled up
Revision lock forced failure
Service version not compatible
Destination device is no longer the active device
Destination device for this message was inactive for an extended period
A over C encryption is not available at this time
Class A encryption keys are not available at this time
No error
Invalid state
Operation failed
com.apple.Transport
IDSDataChannels
T@"NSObject<OS_os_log>",R
com.apple.IDS
transactionLog
_IDSGroupSession
_IDSGroupSession-oversize
_IDSGroupSession_oversize
%@-%@
v16@?0i4Q8
[%@ %p:   Name: %@   Model: %@   UniqueID: %@   UniqueID Override: %@   Push Token: %@   Service: %@   Handles: %@   linkedUserURIs: %@   nsuuid: %@   supportsSMSRelay: %@   supportsMMSRelay: %@   supportsPhoneCalls: %@   deviceColor: %@   enclosureColor: %@  local: %@   defaultPairedDevice: %@   isNearby: %@  isConnected: %@  isCloudConnected: %@  isActive: %@  isLocallyPaired: %@  build: %@   pairing protocol: %lu   min compatibility version: %lu   max compatibility version: %lu]
[%@ %p:   Name: %@   Model: %@   UniqueID: %@   UniqueID Override: %@   Push Token: %@   Service: %@   nsuuid: %@   supportsSMSRelay: %@   supportsMMSRelay: %@   supportsPhoneCalls: %@   deviceColor: %@   enclosureColor: %@  local: %@   defaultPairedDevice: %@   isNearby: %@  isConnected: %@  isActive: %@  isLocallyPaired: %@  isHSATrusted: %@  build: %@   pairing protocol: %lu   min compatibility version: %lu   max compatibility version: %lu]
all 0s
IDSDevice
Open socket %d info %@ with options: %@
Failed, already have an open connection
Already have open connection %d
CLosing socket: %d
%@ - wrong socket %d (we have %d)
Updating stream pair: %@:%@
%@ - wrong streams %@ and %@ (we have %@ and %@)
World, id[%@] !=? id[%@]
xpc object: [%@] context: [%@]
Closing socket %d for domain %@
modelIdentifier
productName
productVersion
productBuildVersion
name
nearby
TB,R,N,GisNearby
connected
TB,R,N,GisConnected
cloudConnected
TB,R,N,GisCloudConnected
locallyPresent
isDefaultPairedDevice
isLocallyPaired
pairingProtocolVersion
minCompatibilityVersion
maxCompatibilityVersion
serviceMinCompatibilityVersion
supportsiCloudPairing
supportsTethering
supportsHandoff
supportsApplePay
identities
nsuuid
T@"NSUUID",&,N,SsetNSUUID:
supportsSMSRelay
supportsMMSRelay
supportsPhoneCalls
deviceColor
enclosureColor
linkedUserURIs
isHSATrusted
lastActivityDate
uniqueIDOverride
_IDSIDQueryControllerConnectionQueue
_IDSIDQueryControllerQueue
Purging idStatusCache
set-id-status
Sending ID status update (%d) for service %@ destination %@
No destinations, bailing...
No service, bailing...
No listenerID, bailing...
No query complete block, bailing...
Received results for service: %@  updates %@
v16@?0@"NSDictionary"4@"NSString"8@"NSString"12
No completion block, bailing...
No queue, bailing...
No listener ID, bailing...
_warmupQueryCacheForService:  (service: %@)
No service name, bailing...
Received cache for service %@, %d count
_flushQueryCacheForService:  (service: %@)
addDelegate:forService:listenerID:queue:  (delegate: %p)   (service: %@)   (listenerID: %@)   (queue: %p)
No delegate, bailing...
No queue provided, bailing...
Listeners after ADD %@
removeDelegate:forService:listenerID:  (delegate: %p)   (service: %@)   (listenerID: %@)
Listeners after REMOVE %@
openStreamPairWithOptions for %d - %s %s [%s]!
v12@?0i4@"NSError"8
openSocketForDomain:transportType: please switch to openSocketWithOptions:completionHandler:onQueue:!
isCloudConnected
operatingSystemVersion
T{?=iii},R,N
T@"IDSDestination",R,N
event-type
connected-link
disconnected-link
disconnected-link-ids
disconnected-link-uuids
rat-changed
default-link
default-link-id
rssi-key
preconnection-data-key
mtu-changed
info-report-events-key
error-key
encryption-info-key
membership-changed-reason-key
stat-response-key
session-info-response-key
debug-data-type-key
debug-data-key
preference-default-link-selection
preference-baseband-registration
preference-baseband-queue-flush-payload
preference-baseband-queue-flush
preference-pre-connection-data
preference-wait-for-pre-connection-data
preference-update-qos
preference-update-qos-is-good
preference-discard-link-ids
preference-query-information
preference-max-bitrate
preference-needs-encryption-info
preference-needs-force-update-encryption-info
preference-set-debugdata-type-key
preference-set-debugdata-key
baseband-registration-key
baseband-notification-operation-key
max-bitrate-key
<LinkContext %p> linkID %d (UUID:%@, QRSessionID:%@) flags %08X networkType %u connectionType %ld maxMTU %u RATType %lu maxBitrate %u (remote networkType %u connectionType %ld RATType %lu), relay(provider:%d, token:%dB) serverIsDegraded: %@
linkID
Tc,R
linkUUID
T@"NSUUID",R
QRSessionID
flags
TC,R
networkType
connectionType
RATType
maxMTU
TS,R
relayServerProvider
T@"NSData",R
remoteNetworkType
remoteConnectionType
remoteRATType
maxBitrate
serverIsDegraded
TB,R
DatagramChannelFunctionalLogging
mediaserverd
avconferenced
homed
IDSRealTime
%@%u
<%p> channelFD %d connected %@ eventHandler %p readHandler %p withOptions %p auto %@
<%p> socket %d connected %@ eventHandler %p readHandler %p withOptions %p connetion %@
<%p> socket %d connected %@ eventHandler %p readHandler %p withOptions %p
00000000-0000-0000-0000-000000000000
_internal->_MKIArrivalTime
IDS couldn't receive the response for the session info request.
read sanity check failed: datagramSize %ld metadataSize %ld dataOffset %ld
v16@?0^@4I8i12
-[IDSDatagramChannel start]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1171.94.2/IDS/Client/IDSDataChannels.m
_internal->_readHandler
_internal->_eventHandler
v12@?0i4@"NSObject<OS_nw_error>"8
Failed to malloc %ld bytes
Failed to send write bytes (%d)
No connection
Failed to send all bytes (%d < %d)
Connection terminated
Failed to send (errno %d)
-[IDSDatagramChannel readyToRead]
Could not serialize provided metadata.
_internal->_firstPacketArrivalTimeForMKI
connectedLinks
T@"NSArray",R
defaultLink
T@"IDSDataChannelLinkContext",R
IDSDataChannelsQueue
Unable to create input and output stream
T@"_IDSDeviceConnection",R,N
FTPasswordManager
IDSIDQueryControllerQueue
Adding listener ID: %@   for service: %@
Removing listener ID: %@   for service: %@
Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
Client %@ is attempting to send more than a reasonable amount of URI's in a query {count: %lu}
Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
Client requesting to warmup the query cache for service: %@
Client requesting to flush the query cache for service: %@
** BLOCKING Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
IDSLookupQueue
  => Done: %f
** BLOCKING Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
** BLOCKING Client ID status cache request for destination %@  on service: %@   from listenerID: %@
** BLOCKING Client ID status cache request for destinations %@  on service: %@   from listenerID: %@
Client Remote Device Request
Client ID status request for destinations %@  on service: %@   from listenerID: %@
Client ID status request for destination %@  on service: %@   from listenerID: %@
v8@?0@"<IDSContinuityDelegate>"4
Ti,R,V_state
nbuffer_append
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1171.94.2/IDS/Client/IDSNBuffer.c
nbuffer_get_free_space(buf) >= size
nbuffer_ensure_freespace
_IDSSession
Disconnected from daemon, notifying client of session %@
%@: Empty unique ID
%@: Empty account ID
%@: Empty destinations set
Setting up session delegate %p
v8@?0@"<IDSSessionDelegate>"4
%@ - existing socket pair, ignoring request to create
Setting up socket pair to daemon
Error creating socketpair
%@ - %@ %d (%s)
Error getting socket flags from socketFD[0]
Error setting O_NONBLOCK flag on socketFD[0]
Error getting socket flags from socketFD[1]
Error setting O_NONBLOCK flag on socketFD[1]
Error setting SO_NOSIGPIPE on socketFD[0]
Error setting SO_NOSIGPIPE on socketFD[1]
Error setting SO_SNDBUF size on socketFD[0]
Error setting SO_SNDBUF size on socketFD[1]
Error setting SO_RCVBUF size on socketFD[0]
Error setting SO_RCVBUF size on socketFD[1]
session-socket
socket-type
raw-socket
Sending allocation request with options %@
Sending Session Invitation with options %@
Sending Session Invitation with data (%lu bytes), declineOnError %@
Sending Session Invitation Cancel
Sending Session Invitation Cancel with data (%lu bytes)
Sending Session Invitation Cancel with Reason %u
Sending Session Invitation Accept
Sending Session Invitation Accept with data (%lu bytes)
Sending Session Invitation Decline
Sending Session Invitation Decline with data (%lu bytes)
Skipping destination %{private}@, which is not in this session's list of destinations: %{private}@
Asked if shouldUseSocketForTransport %@
%@ - Session not connected can't send data yet, ignoring...
%@ - No socket pair connection setup, ignoring...
%@ - No data to send, ignoring...
Sending data Client -> Daemon  (hash: %lu)  (length: %lu)
Session accept received fromID %@ sessionID %@ with data %@
Ignoring accept, session doesn't match %@ vs. %@
Session decline received fromID %@ sessionID %@ with data %@
Ignoring decline, session doesn't match %@ vs. %@
Session cancel received fromID %@ sessionID %@ with data %@
Ignoring cancel, session doesn't match %@ vs. %@
Session message received fromID %@ sessionID %@ with data %@
Ignoring message, session doesn't match %@ vs. %@
Session end received fromID %@ sessionID %@ with data %@
Ignoring end, session doesn't match %@ vs. %@
Session %@ invitation sent to tokens %@ shouldBreakBeforeMake %@
Ignoring session:invitationSentToTokens:, session doesn't match %@ vs. %@
Ignoring session started, session doesn't match %@ vs. %@
Session started for IDSSessionID: %@
Session ended %@ with reason %d error %@
Ignoring session ended, session doesn't match %@ vs. %@
Session audio enabled ? %@
Ignoring audioEnabled, session doesn't match %@ vs. %@
Session muted ? %@
Ignoring muted, session doesn't match %@ vs. %@
Ignoring xpc object, session doesn't match %@ vs. %@
session-initial-link-type
Received initial link type %d for session %@ with error %@.
Received invalid initial link type xpc object for session %@ with error %@.
Received invalid xpc object type: %@.
Session %@ received the report: %@
Ignoring didReceiveReport, session doesn't match %@ vs. %@
UNRL: Received data Daemon -> Client  (data hash: %lu)  (length: %lu)
initialLinkType
TI,R,N,V_initialLinkType
inviteTimeout
v12@?0@"NSArray"4B8
v12@?0B4@"NSError"8
IDSInternalQueue
IDSInternalQueueControllerContext
IDSInternalQueue - assertQueueIsCurrent failed %@. The only acceptable callstack includes dealloc.
IDSInternalQueue - assertQueueIsNotCurrent failed %@. The only acceptable callstack includes dealloc.
com.apple.identityservices.error
Client request to invalidate: %@
Scheduling next batch in %f
setDestinations %@
We're dead, bailing
Already issued maximum number of queries, bailing
Destinations are the same, bailing
Setting time of death to %@
Received cached positive results %@
Received 0 cached results, query all destinations
Returning cached results to delegate %p
Returning cached results to delegate %p for service %@
No delegate %p or queue %p
 * Next query timer hit: %@
We're dead, not querying: %@
We've reached the max number of queries for this batch, not adding anymore: %@
We've reached the max number of queries, not adding anymore: %@
Received results %@
Returning results to delegate %p
Returning results to delegate %p for service %@
We've reached the max number of queries, not rescheduling query timer: %@
Invalidating next query timer: %@
batch-query-max
batch-query-time-to-live
batch-query-interval
batch-query-first-interval
batch-query-size
__kIDSServiceMonitorAvailabilityDidChangeNotification
kiMessageChangedNotification
kFaceTimeChangedNotification
kCallingChangedNotification
kScreenSharingChangedNotification
T@"ENAccountIdentity",R,N,V_accountIdentity
aliasToAccountsMap
T@"NSDictionary",R,N,V_aliasToAccountsMap
/BuildRoot/Library/Caches/com.apple.xbs/Sources/IdentityServices_Sim/IdentityServices-1171.94.2/IDS/IDSTransactionLogTaskHandler.m
Unexpected task type
Abstract method
task
T@"IDSTransactionLogTask",&,N,V_task
v12@?0@"IDSCloudKitTransportLogChangeToken"4@"NSError"8
v20@?0@"NSArray"4@"IDSCloudKitTransportLogChangeToken"8B12@"NSError"16
v16@?0@"NSArray"4@"NSArray"8@"NSError"12
v12@?0@"IDSTransactionLogTaskHandlerAccountInfo"4@"NSError"8
Invalid parameter not satisfying: %@
_delegate
syncTask
T@"IDSTransactionLogSyncTask",&,N,V_syncTask
T@"<IDSTransactionLogTaskHandlerDelegate>",W,N,V_delegate
%s is deprecated, please use startTrackingPeer:forType:
%s is deprecated, please use stopTrackingPeer:forType:
Exception returned from daemon: %@
Sending down new services %@ commands %@ capabilities %d. sendServices %@ sendCommands %@ sendCaps %@
Sending down new services %@ commands %@ capabilities %d
Set services: %@  (Previous: %@)
Set commands: %@  (Previous: %@)
Updating capabilities: %d  (Previous: %d)
Disconnecting from daemon - no listeners
%s: adding delegate on service %@ _notificationServices %@
Adding listener with ID: %@    services: %@   commands %@
Removing listener with ID: %@    services (count): %@   commands (count): %@   capabilities %@
Tried to remove non existent listener with ID: %@
Set %@: %@  for listener ID: %@
setCapabilities %d for listenerID %@ has no ID
setCapabilities %d for listenerID %@ is not a valid listener
setCapabilities %d for listenerID %@ - listener map already contains our capabilities
Set caps: %d  for listener ID: %@
Cleaning up daemonConnectedGroup %p
Cleaning up LOCAL object
Cleaning up REMOTE object
Disconnected from agent (local)...
 ... disconnection from agent (local) being handled by ivarQueue
Disconnected from agent (remote)...
 ... disconnection from agent (remote) being handled by ivarQueue
Will auto reconnect...
 ...auto reconnecting
System application did suspend
System application did enter background
System application did enter foreground
System application did resume
Received call to roll encryption keys
IDSLocalSetupStart
IDSLocalSetupCompleted
IDSLocalSetupStop
IDSLocalSetupUnpair
IDSLocalSetupUnpairStart
IDSAddPairedDevice %@
Asked to pair device with cbuuid: %@
IDSConnectPairedDevice %@
%s %@
%s %@ %p %p
%s is DEPRECATED! Please use IDSGetPairedDevicesWithCompletionBlock
%s is DEPRECATED! Please use IDSInitialLocalSyncStartedForServices
%s is DEPRECATED! Please use IDSInitialLocalSyncCompletedForServices
Local setup - received incoming sync message
%s: invalid device %@
IDSReportiMessageSpam - %@  (toURI: %@)
IDSReportiMessageUnknownSender - %@, %@, %@  (toURI: %@)
IDSCheckiMessageUnknownSender (toURI: %@ Count: %@)
%@ posting availability change notification (%@) - available: %d
%@ creating monitor for service: %@
%@ adding listener `%@` for service: %@
%@ removing listener `%@` for service: %@
%@ no more listeners for service: %@
Exception: %@ in handler: %@ while executing a block
IDSDaemonListener _removeAccountOnIvarQueue %@ was told of an account without a unique id or service name: %@
IDSDaemonListener accountAdded %@ was told of an account without a unique id or service name: %@
%s: %@
IDSDaemonListener accountRemoved %@ was told of an account without a unique id or service name: %@
IDSDaemonListener accountEnabled was told of an account without a unique id %@ or service %@
Incoming account enabled: %@
IDSDaemonListener accountDisabled was told of an account without a unique id %@ or service %@
Incoming account disabled: %@
Account info changed %@
IDSDaemonListener accountInfoChanged %@ was told of an account without a unique id or service name: %@
Found active device in dependent devices update, updating activeDevice ID to %@ for %@
Dependent devices updated, setting %@ to (isActive: %@)
Current devices for account %@: %@
Found existing local device, removing %@
Local device added %@, we'll trigger didSwitchActivePairedDevice callback since we already have an active device %@
Local device added %@, we'll trigger didSwitchActivePairedDevice callback since we already had a locally paired device
Local device added, updating activeDevice ID to %@
New devices for account %@: %@
Active device was removed, clearing active uniqueID %@
Refresh registration for account %@
No device ID can't update nsuuid, bailing...
Device unique ID %@
We found a match ! %@
Did get identities {identities: %@, error: %@}
Calling didSwitch for topic %@
DidSwitch callback for %@ (handler %@) was handled %@
Unhandled didSwitch callback for topic %@
Updating isActive state for all accounts %@
New active unique ID is nil
Account unique ID is nil, can't switch active device ID
Switching active device to %@ for account %@
Active paired device switched, updating activeDevice ID to %@
Unsetting active device unique ID due to quick switch or new pairing start
Setup complete with info
Deferred setup on ivar queue, got accounts %@
Services all disappeared, removing all accounts
Deferred setup on ivar queue, got enabled accounts %@
Notified account enabled %@ for service %@
Enabled accounts all disappeared, removing all enabled accounts
Deferred setup on ivar queue, got %lu dependent devices
Dependent devices all disappeared, removing all dependent devices
Device identifier from daemon: %@
Active device uniqueID from daemon: %@ map %@
Setup info is not complete, waiting...
Connection is not complete, waiting...
Connection complete, notifying
Connection complete
XPC object received %@:%@
Exception: %@ in handler: %@ while executing: %@
Device identifier changing from %@ to %@
Unnecessary invocation of deviceIdentifierDidChange:
Setting up delegate %p
Sending the real-time media prekey of this device to the group %@
the delegate object %@ doesn't respond to the selector didReceivePublickeys:
the delegate object %@ doesn't respond to the selector didReceiveMasterKeyMaterials:
unknown object type %@
Did receive registration identity update {delegates: %{public}@}
Received invalid options %@, bailing
Received IDQueryCompletedWithFromURI %@ idStatusUpdates %@ service %@ success %@ error %@
Updated local cache to %@
Notifying delegate %@ about ID status update
addListener:forService:
ListenerID is empty, bailing...
Service name is empty, bailing...
%@ -> %@
Final map after add %@
removeListenerID:forService:
Final map after remove %@
%s  (simulatorDeviceID: %@)
Failed to soft link IDSSimulatorLocalPairingAddPairedDevice
Failed to soft link IDSSimulatorLocalPairingDeletePairedDevice
Failed to soft link IDSSimulatorLocalPairingSwitchActivePairedDevice
%s: received new traffic classifiers %@
Cannot save invalid device info: %@
Received paired device info, sending to daemon for saving
Cannot delete empty CBUUID, cbuuid: %@
%s: device CBUUID: %@
%s: Empty completion block/queue
Querying local device info from IDSD asynchronously
Querying paired device info from IDSD asynchronously
Received pairing added notification from daemon, device: %@, added: %@
Received pairing removed notification from daemon, device: %@, deleted: %@
Invoking pairingDelete completion block
Received local device info from daemon, device: %@
Invoking localDeviceInfo completion block
Received paired device info from daemon, device: %@
Invoking pairedDeviceInfo completion block
Client requested authenticate phone on an unsupported platform -- failing request {clientError: %@}
Client request to authenticate phone {uuid: %@}
Client requested phone authentication signature on an unsupported platform -- failing request {clientError: %@}
Client request to generate phone authentication signature over data {uuid: %@}
Client requested to set current phone user subscription source on an unsupported platform -- failing request {clientError: %@}
Client request to set current phone subscription source {uuid: %@}
Client requested current phone user subscription source on an unsupported platform -- failing request {clientError: %@}
Client request for current phone subscription source {uuid: %@}
Failed to weak link FTSelectedPNRSubscription from FTServices for synchronous fetch of phone user subscription source
Unable to determine selected phone user subscription source synchronously {subscriptionSource: %ld, selectedContext: %@, subscriptionError: %@}
Returning current phone user subscription source synchronously {subscriptionSource: %ld, clientError: %@}
Received authenticate phone response from daemon {uuid: %@, phoneCertificateData: %@, handler: %@, completion: %@, clientError: %@}
Received phone authentication signature response from daemon {uuid: %@, certificate: %@, signature: %@, handler: %@, completion: %@, clientError: %@}
Received response after setting current phone user subscription from daemon {uuid: %@, subscriptionSource: %@, handler: %@, completion: %@, clientError: %@}
Received current phone user subscription response from daemon {uuid: %@, subscriptionSource: %@, handler: %@, completion: %@, clientError: %@}
Timed out phone authentication signature request -- calling completion block with timeout error {completionBlock: %@}
Timed out phone authentication certificate request -- calling completion block with timeout error {completionBlock: %@}
Timed out phone subscription source operation -- calling completion block with timeout error {completionBlock: %@}
Found existing IDSAccountController %@ for service %@
Tried to create IDSAccountController with empty service, ignoring...
Couldn't find existing IDSAccountController adding new one %@
    %@ -> %p
Deallocing IDSAccountController %@
%p will be removed from account controller map automatically
* Request to setup account with loginID: %@   auth token: %@  profileID: %@    service: %@
* Request to setup account with loginID: %@   auth token: %@  profileID: %@  aliases: %@  service: %@
* Request to setup account with aliases: %@ and parameters:
  => password : REDACTED
  => %@ : %@
* Request to add account: %@   service: %@
* Request to remove account: %@   service: %@
* Request to enable account: %@   service: %@
* Request to disable account: %@   service: %@
No conference server support, default not set.
Conference server at: %s:%d
No conference server support, cannot connect to server at %s:%d
Disconnected from daemon, notifying client of groupSession %@
Empty unique ID
Empty account ID
Setting up session delegate %p
joinGroupSession is deprecated. Please use joinWithOptions:. ignoring...
Cannot join a session that is already ended, ignoring...
joinWithOptions: %@
Cannot join a session without the participant data information.
cfs_client_send_join_request, _cfs_requestID: %d, clientID: %d, groupID: %s, data: %@, result: %d
cfs_client_send_leave_request, result: %d
Session %@ received the report: %@
Ignoring didReceiveReport, session doesn't match %@ vs. %@
Ignoring group session termination, session doesn't match %@ vs. %@
Group session %@ was terminated
Group session ended %@ with reason %d error %@
Ignoring group session ended, session doesn't match %@ vs. %@
Did join group session %@, existing participants %@
Ignoring didJoin, group session doesn't match %@ vs. %@
Did join group session %@, participantInfo %@
Did join group session %@, participantUpdate %@
Did leave group session %@
Ignoring didLeave, group session doesn't match %@ vs. %@
ParticipantDidJoin group session %@, participantInfo %@
Ignoring participantDidJoin, group session doesn't match %@ vs. %@
ParticipantDidLeave group session %@, participantInfo %@
Ignoring participantDidLeave, group session doesn't match %@ vs. %@
didReceiveActiveParticipants: %@ for group session: %@
Ignoring didReceiveActiveParticipants, group session doesn't match %@ vs. %@
xpc object: [%@] context: [%@]
Ignoring socket, session doesn't match %@ vs. %@
Received XPC Response Error: %@
Fetching groups from groupIDs {groupIDs.count: %ld}
Failed to fetch groups {error: %{public}@, groupIDs: %{private}@}
Fetched groups with success {groups.count: %ld}
Fetch groupds {groups: %{private}@}
Fetching transport log messages
Fetched messages from transport log
Account identity for task handler - failed to get content - fail {error: %{public}@}
Registration identities updated - clearing client cache
 Group Context Created %@
Faied to get address in FixedQuickRelayServerAddress defaults
Decoded relay-server-address %@:%u
Decoded base64 relay-session-id %@
Decoded base64 relay-session-token %@
Decoded base64 relay-session-key %@
Using preallocated tokens from user defaults
Missing a defaults for hardcoded QR session info
Account delegate has been cleaned up via weak references %p
setCapabilities %u  %@, result = %@
!setState guid=%@
Downgrading priority of message with GUID %@ to Default from Urgent, The client %@ is not in the Urgent whitelist
Client %@ is forcing QR for Cloud Message with GUID %@
QueueOneIdentifier not a string! [%@]
callstack %@
OutgoingMessage
!setState traceIdentifier=%@
OUTGOING-CLIENT_REQUEST:%@ SERVICE:%@
Client request to send %@ on service: %{public}@   guid: %{public}@   to destinations: %@   options: %@    size: %d] (%lu pending)
START %@
SendToDaemon
sendPayload - could not find account uniqueID! self: %@ account: %@
%@ unable to plist-serialize dictionary %@ !!
Client request to send %{public}@ message (dictionary) service: %{public}@  to destinations: %@   options: %@]
sendPayload - could not plist serialize dictionary.
%@ asked to send server message %@ with command %@ - invalid value!
%@ not connecting to identityservicesd - no serviceName for account %@
Failed to connect to identityservicesd; %@ %@
%@ resending %@ alternate %@ due to daemon disconnection.
OUTGOING-UPDATE:%@ CODE:%ld LASTCALL:%@
%@ outgoing message guid response: %{public}@  callbackID: %@  response code: %ld   error: %{public}@  WiProx error: Error Domain=%{public}@ Code=%{public}@ %{public}@  lastCall: %@
%@ outgoing message guid response: %{public}@  callbackID: %@  response code: %ld   error: %{public}@   lastCall: %@
Server Timestamp for UpdatedWithResponseCode?%@
IDS sending success is NO though error is unset
  => <%@:%p> finished handling message guid: %@  (connection:messageIdentifier:alternateCallbackID:updatedWithResponseCode:error:lastCall:)
  => <%@:%p> finished handling message guid: %@  (connection:identifier:didSendWithSuccess:error:context:)
%@ identifier %@ callbackID %@ willSendToDests count %@ skipped count %@  map count %@
  => <%@:%p> finished handling message guid: %@  (connection:identifier:alternateCallbackID:willSendToDestinations:skippedDestinations:registrationPropertyToDestinations:)
%@ received app-level ack with identifier %@ context %@
Ignoring %@ for topic %@ my topic is %@
Ignoring %@ to: %@ it is not to my aliases: %@ account uuid: %@
Ignoring %@, account is not configured: %@    isActive: %@  isRegistered: %@  isLocal: %@
Ignoring %@ for topic %@ because fromID %@ is a suppressed IDSDevice.
Connection recieved message
%@ received message: %@  topic %@  from: %@  to: %@   payload items: %d
INCOMING-CLIENT_MESSAGE:%@ SERVICE:%@
%@ received data: %@ topic %@  from: %@  to: %@
INCOMING-CLIENT_DATA:%@ SERVICE:%@
%@ received Engram Dict: %@ topic %@  from: %@  to: %@
Accessory data commands are only supported on AppleID accounts, This one is not for me.
%@ received Accessory data: %@ topic %@  from: %@  to: %@
%@ received Accessory Report Message: %@ topic %@  from: %@  to: %@
INCOMING-CLIENT_PROTOBUF:%@ SERVICE:%@
Client received protobuf from daemon %@ for topic: %@  messageID: %@  fromID: %@
 => Handed protobuf ID %@ to delegate: %@
Ack'ing message %@ to daemon that client got it
Received incoming invitation %@ forTopic %@ sessionID %@ toIdentifier %@ fromID %@ transportType %@
Received incoming group session participant update forTopic %@
Received incoming group session participant data update forTopic %@
Incoming Group Share
Incoming Registered Identities
checkTransportLog {reason: %ld}
Client has set export object %@
Invalidation Handled
Interruption Handled
%@ %s  (serviceDelegate: %@)
%@ %s  (delegateIdentifier: %@)
%@ %s
Unacknowledged IDSServiceDelegate objects: %@
Listen for local pairing response
First time setup local pairing response listener
Wasn't listening, adding listener { _localPairingListenCount : %d }
Already listening { _localPairingListenCount : %d }
No more expected responses, removing listener
%s (%s: %@)   (%s: %p)   (%s: %p)
%s received nil requestID. Cannot call daemon. This should never happen!
%s (%s: %p)   (%s: %p)
%s (%s: %@)   (%s: %@)   (%s: %p)   (%s: %p)
Firing local pairing completion block { error : %@ }
Local pairing block timed out
Stop listening for local pairing response { count : %d }
_IDSDeviceConnection was created without an IDSDevice %@ or service %@
<%p> The client passed the smaller timeout %@ than the default value. IDSDeviceConnection will use the default value.
<%p> Init connection socket %d with options: %@  device: %@  (%@)  (name %@) service %@ connectionUUID %@ timeout %@
<%p> _IDSDeviceConnection has timed out waiting for a socket.
<%p> Updating stream pair: %@:%@
<%p> Updated socket traffic class: %d
<%p> Closing socket: %d (name %@)
<%p> Closing socket: skipped, a new connection for this %@
<%p> World, id[%@] !=? id[%@]
<%p> xpc object: [%@] context: [%@]
Received XPC Response/Socket: %d    Error: %@
Received XPC Response/Socket: %d
<%p> Opened socket: %d (Success: %@ ) %@ (%@)
Open socket request already timed out, closing %d.
Daemon died, closing socket: %d
IDSAccountController created with service %@ serviceToken %@
Adding listener with ID %@ topics %@
Daemon disconnected, we'll need to reload accounts for service: %@
Updating delegates of account changes
Re-loading cached accounts for service: %@ with dictionaries %@
Account loaded was of unknown account type %d, ignoring...
Old account set %@
New account set %@
New enabled accounts set %@
Requesting setup of account: %@   service: %@  transaction: %@  accountConfig: %@
Request to setup account with loginID: %@   auth token: %@  profileID: %@  aliases: %@  selfURI: %@
We have a real account registered, hiding local account
We don't have a real account registered, adding and enabling local account
Client request to enable account ID: %@
Client request to disable account ID: %@
Account added was of unknown account type %d, bailing...
**** Account added has no uniqueID **** %@
Received account removed %@ for topic %@
Did not find an existing account to remove with unique ID %@
**** Account removed has no uniqueID **** %@
Received account updated %@ for topic %@
Did not find an existing account to update with unique ID %@, creating one
Account updated was of unknown account type %d, ignoring...
Could not create IDSAccount with info %@
**** Account updated has no uniqueID **** %@
Received accounts changed %@ for topic %@  service: %@  (Cached: %@)
No uniqueID for account %@, ignoring...
Did not find an existing account to update with unique ID %@
Account changed was of unknown account type %d, ignoring...
Original accounts %@
Accounts Modified %@
Removing accounts %@
Setup complete - no transaction ID, bailing...
SetupCompleteForAccount %@ transactionID %@ setupError %@
Setup handler block %p for transactionID %@
Account setup completed but we don't have an account, ignoring...
Setup completed for account %@ isActive %@ setupError %@
Account enabled - no unique ID, bailing...
Account enabled - no service, bailing...
Received account enabled %@ on service %@
Adding enabled account %@
Did not find an existing account to enable with unique ID %@
Account disabled - no unique ID, bailing...
Account disabled - no service, bailing...
Received account disabled %@ on service %@
Removing enabled account %@
Did not find an existing account to disable with unique ID %@
Hard deregistering, %@
Triggering final deregister, %@
Creating new IDSAccount %p with config %@ uniqueID %@ serviceName %@
Created new IDSAccount %p with loginID %@ uniqueID %@ serviceName %@
Framework register account
Client requesting to register account: %@
Framework unregister account
Client requesting to unregister account: %@
Framework reregister account
Client requesting to reregister (with reidentify %@) account: %@
Framework deactivate account
Client requesting to deactivate and purge identify account: %@
Framework activate alias
Client request to activate alias { alias: %@ }
Framework deactivate alias
Client request to deactivate alias { alias: %@ }
iCloud sign in hack with userName %@ password %@
iCloud sign out hack
Kicking get dependent
Client request for IDSCopyLocalDeviceUniqueID: %@
Tried to create an account with empty service name, bailing...
Tried to create an account with unknown account type %d, bailing...
No account type specified, setting to Apple ID
New account info %@ for %@
Adding IDSDevice %@
Devices updated %d
Devices before %@
Devices after %@
Local account, ignoring request for keychain registration
Registered URIs for %@ with service type %@ account type %d
Registration cert for %@ with service type %@ account type %d
Push token for %@ with service type %@ account type %d
%@ not connecting to identityservicesd - no serviceName for config %@
Account %@ received registration status changed: %@
Account %@ received aliases changed: %@
Account received %@ vetted aliases changed
Account received %@ profile changed: %@
Account %@ received login changed: %@
Account received %@ displayName changed: %@
Account received %@ dependentDevicesUpdated %@
Account received %@ dependentDevicesUpdatedUponReconnect (devices count: %@)
Account received %@ localDeviceAdded %@
Devices updated %@
Account received %@ localDeviceRemoved %@
Account %@ received request to refresh registration
iCloud sign in with userName %@ authToken %@ password %@ accountInfo %@ status %@ and handles %@
iCloud sign out
iCloud update for userName %@ accountInfo %@
iCloud modify for userName %@
iTunes sign in with userName %@ authToken %@ password %@ accountInfo %@ status %@ and handles %@
iTunes sign out
IDS update user { oldUserName: %@, newUserName: %@ }
Client received event %s on service %@
Framework init with service, commands
!setState service=%@
Call made to deprecated IDSService API with service domain %@
Framework init with service commands
IDSConnection/IDSAccountController delegates have been cleaned up via weak references %p
IDSService deallocating with serviceName %@
Framework Daemon Connected
%@: OTRTestCallback: token is %@, setupTime is %.6f, error==nil is %d
%@ Switched active paired device for service name %@. deviceUniqueID: %@
Ignoring didSwitch callback for %@, mine is %@
%@ Update cache with active device
%@ Pre didSwitch call back block
%@ Notifying delegate %p of active device switch to %@ (delegateIdentifier %@)
%@ Pre devicesChanged call back block
%@ Notifying delegate %p of devices changing (devices %@)
%@ Group notify
Stopped suspending traffic to the daemon.
Connection map:
   %@ => %@
Tearing down connection for %@
activeAccountsChanged, oldSet: %@  newSet: %@
Calling active accounts changed %@ with delegate %p
*** dropping devicesChanged callback!
incomingData on connection guid %@ using engram %@
incomingData of size %lu on connection %@ account %@ from ID %@ sender-side-identifier %@
Calling out to IDSService delegate %p for incomingData if it responds.
Done for IDSService delegate %p for incomingData - doesRespondToSelector? %@
Context %@ WantsAppAck %@ AppAckGuid %@ storageGuid %@
Sending app-level ack dispatch called for message %@
incomingGroupData on connection guid %@ using engram %@
incomingGroupData of size %lu on connection %@ account %@ from ID %@ sender-side-identifier %@
Error converting Group Data to ENGroup %@
No error returned however unable to create group from data (timeout?) %@, Original Data: %@
Received sentAhead group {groupID: %{public}@}
Group Share Persisted %@
Calling out to IDSService delegate %p for incomingAccessoryData if it responds.
Done for IDSService delegate %p for incomingAccessoryData - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingAccessoryReportMessage if it responds.
Done for IDSService delegate %p for incomingAccessoryReportMessage - doesRespondToSelector? %@
Service recieved message
incomingMessage on connection %@ account %@ from ID %@  from device: %@  sender-side-identifier: %@
incomingMessage on connection guid %@ using engram %@
Consumed sandbox extension [%@] handle [%llu] for resource [%@]
No sandbox extension for received resource [%@]
Remove file success: %@, error: %@ (accessed %d)
Calling out to IDSService delegate %p for incomingResource if it responds.
Done for IDSService delegate %p for incomingResource - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingResource with metadata if it responds.
Done for IDSService delegate %p for incomingResource with metadata - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage if it responds.
Done for IDSService delegate %p for incomingMessage - doesRespondToSelector? %@
Calling out to IDSService delegate %p for incomingMessage with context if it responds.
Done for IDSService delegate %p for incomingMessage with context - doesRespondToSelector? %@
Service finished calling out
Incoming protobuf %@, routing to selector/delegate. sender-side-identifier %@
Incoming protobuf on connection guid %@ using engram %@
Found selector %@ fullSelector %@ for key 0x%x
 => Delgate %p responds to: %@, passing along protobuf: %p
   * Done handling
No selector for key 0x%x = type(%u) isResponse(%@), notifying delegates
 => Delgate %p responds unhandled protobuf passing along protobuf: %p
No delegate was registered that could handle protobuf %@
incomingTopLevelMessage on connection guid %@ using engram %@
Calling out to IDSService delegate %p for incomingTopLevelMessage if it responds.
Done for IDSService delegate %p for incomingTopLevelMessage - doesRespondToSelector? %@
DecryptedEngramData %@ %@
  {decryptedData.length: %{public}@}
Decrypting Engram Message, Org Payload %@
Failed decrypting Engram {error: %@, serviceName: %@}
isActiveChanged on connection %@ isActive %@
devicesChanged on connection %@ account %@ all devices %@ num delegates: %lu
connectedDevicesChanged on connection %@ account %@ devices %@
%@ got messageIdentifier %@ callbackID %@ updatedWithResponseCode: %ld error %@ lastCall %@
%@ got messageIdentifier %@ callbackID %@ updatedWithResponseCode: %ld error %@ lastCall %@ sentBytes %@ totalBytes %@
%@ got identifier %@ callbackID %@ willSendToDestinations %@ skippedDests %@ regPropsToDests (count) %@
%@ got identifier %@ didSendWithSuccess %@  error %@ num delegates: %lu
%@ got identifier %@ hasBeenDeliveredWithContext %@
Sending up options to client: %@
Filtering account %@ with aliases %@  isActive? %@  canSend? %@
Ignoring sub-services update, couldn't find active device
Ignoring sub-services update, couldn't find uniqueID for device %@
Triggering Internal resend of Sub Services to daemon
Framework Set Protobuf Action
Framework Get Protobuf Action
Attempting To Send message from account %@ to destinations %@
Attempting to send on a non local account, this message is allowed to progress
Attempting to send to more than 1 destination, this message will fail in the daemon if necessary
Attempting to send to a remote destination from a local account, this is permited if proxy is permitted and will fail in the daemon if not
Framework Send Protobuf
!setState priority=%@
!setState destination=%@
Framework Send Data
Framework Send Accessory Data
!setState accessoryID=%@
Sending AccessoryData Now
sendAccessoryData - Could not find connection for account %@
sendAccessoryData - All accounts %@
sendServerMessage - Could not find connection for account %@
sendServerMessage - All accounts %@
FromID %@, strippedURI %@, token %@
Comparing device token %@ to token %@
Did not find a device matching the token %@
setPreferInfraWiFi: %@
setLinkPreferences: %{public}@
Received invalid link preferences
forceOTRNegotiation
Framework Send Resource At URL
!setState ResourceURL=%@
!setState serviceName=%@
sendResourceAtURL - resourceURL not a file %@
Attempted to link or copy file %@ destination %@ (%s to %@)
sendResourceAtURL - unable to link or copy file %@
sendResourceAtURL - resourceURL %@  isFileURL %@  localDelivery %@
Issued sandbox extension [%s] for file [%@]
Failed to issue sandbox extension for linked/copied file [%@]
Issued sandbox extension [%s] for original file [%@]
Failed to issue sandbox extension for original file [%@]
Sending Ahead group {groupID: %{public}@}
sendMessage - Could not find connection for account %@
sendMessage - All accounts %@
sendMessage - Unable to send message to this destination from this account %@
Call made to manually ack a message, however this service does not support manually acking of messages
Creating datagram channel with destination %@ => %@
Creating datagram channel with socket %d => %@
Fetching Identities {transactionID: %@}
Failed to send group ahead {group: %@, error: %@}
Did send group ahead {group: %@ identifier: %@}
sendResourceAtURL - can't allocate %ld bytes for new file path
sendResourceAtURL - failed to clone file %@ => %@ (error %d). Will try hard link.
sendResourceAtURL - failed to link and failed to copy file %@ => %@ (error %@)
Clearing out _connection, we're disconnecting
Forcing a disconnect, terminating connection
No service %@, bailing...
No block %p, bailing...
Cache request for service %@
transactionID map after ADD %@
Sending cache request for service %@ transactionID %@
transactionID map after REMOVE %@
Could not create message for cache query
No listenerID %@, bailing...
Cached ID status request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
No destinations, not issuing query...
Received cached id status (destinations: %@) (service: %@)
ID status renewal request (destinations: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
Received id status (destinations: %@) (service: %@)
ID remote device request (destination: %@)  (service: %@)  (listenerID: %@)  (transactionID: %@)
No message to send %@, ignoring...
Query service disconnected
Error requesting client: %s
No connection to send message on
Received device state note {uniqueID: %@, weakSelf: %p}
Device note {isNearby: %d, isConnected: %d, isCloudConnected: %d, _nearby: %d, _connected: %d, _cloudConnected: %d}
Client request to set uuid %@ on device %@
  => Device doesn't support it, ignoring
Open socket %d info %@ with options: %@
Failed, already have an open connection
CLosing socket: %d
%@ - wrong socket %d (we have %d)
Updating stream pair: %@:%@
%@ - wrong streams %@ and %@ (we have %@ and %@)
World, id[%@] !=? id[%@]
Closing socket %d for domain %@
Purging idStatusCache
Sending ID status update (%d) for service %@ destination %@
No destinations, bailing...
No service, bailing...
No listenerID, bailing...
No query complete block, bailing...
Received results for service: %@  updates %@
No completion block, bailing...
No queue, bailing...
No listener ID, bailing...
_warmupQueryCacheForService:  (service: %@)
No service name, bailing...
Received cache for service %@, %d count
_flushQueryCacheForService:  (service: %@)
addDelegate:forService:listenerID:queue:  (delegate: %p)   (service: %@)   (listenerID: %@)   (queue: %p)
No delegate, bailing...
No queue provided, bailing...
Listeners after ADD %@
removeDelegate:forService:listenerID:  (delegate: %p)   (service: %@)   (listenerID: %@)
Listeners after REMOVE %@
<%p> Creating with socket %d
<%p> Creating with destination %@
-dealloc called for %@
<%@> sent the first data packet (size: %lu)
<%@> TX %f bytes/s
<%@> received the first data packet (size: %lu)
<%@> RX %f bytes/s
-underlyingFileDescriptor called for %@
<%@> first read, will send dummy link information
<%@> dummy link information
<%@>  removeIDSDataChannelLinkContext:%u, linkContexts %@
<%@> Can't find the linkContext of linkID %u, linkContexts %@
<%@> sent IDSDataChannelEventDisconnected, linkID %u, linkContexts %@
invalid link attribute size (%u), too small.
Got relay server provider:%d, session token:%dB, session key:%dB.
<%@> got connectedLinkID %d (link family:%u) (mtu:%u) (l-conn:%u) (l-RAT:%u) (r-conn:%u) (r-RAT:%u), Current LinkContexts %@
<%@> sent IDSDataChannelEventConnected, current link contexts %@
can't find link %d for the default
<%@> sendMediaEncryptionEventInfo MKM:%{private}@, MKS:%{private}@, MKI:%{private}@ locally generated:%{private}@
<%@> there is no report yet for the first packet of this MKI %{private}@.
<%@> sendMediaMembershipChangedInfo membershipChanged:%u
got PacketLinkID %d
kClientChannelMetadataType_PacketLinkID should be 1 byte, not %u bytes, field: %u
got trafficClass %u
kClientChannelMetadataType_TrafficClassKey should be %d bytes, not %u bytes, field: %u
got arrivalTime %f
kClientChannelMetadataType_PacketArrivalTime should be %d bytes, not %u bytes, field: %u
got invalid streamIDCount %u
got streamIDCount %u
got streamID bytes:%@
kClientChannelMetadataType_StreamIDsKey: size mismatch (%u != %u), ignore.
got Channel Priority %u
kClientChannelMetadataType_PriorityKey should be 1 byte, not %u bytes, field: %u
got CT(packet counting) option
kClientChannelMetadataType_CountPacketKey  should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_GenerationCounterLSBKey should be 1 byte, not %u bytes, field: %u
got probeGroupID %u
kClientChannelMetadataType_ProbeGroupIDKey should be 2 bytes, not %u bytes, field: %u
got Participant ID %llu
error: we received Participant ID %llu
kClientChannelMetadataType_ParticipantID should be 8 byte, not %u bytes, field: %u
got disconnectedLinkID %d, linkUUID %@
kClientChannelMetadataType_LinkDisconnected should be %d byte, not %u bytes, field: %u
got defaultLinkID %d
kClientChannelMetadataType_DefaultLinkID should be 1 byte, not %u bytes, field: %u
got ratType %u
kClientChannelMetadataType_RATChanged requires the cellular link. something is wrong...
kClientChannelMetadataType_RATChanged should be 1 bytes, not %u bytes, field: %u
got preConnectionDataSize %u
kClientChannelMetadataType_PreConnectionDataSizeKey should be 1 bytes, not %u bytes, field: %u
got preConnectionData, called IDSDataChannelEventPreConnectionData event
kClientChannelMetadataType_PreConnectionDataKey should know its size
<%@> sent IDSDataChannelEventRSSI (%u, %u, %u)
kClientChannelMetadataType_QueryRSSI should be %u, not %u bytes, field: %u
kClientChannelMetadataType_MaxBitrateKey should be %u, not %u bytes, field: %u
got MTU %u
kClientChannelMetadataType_CellularMTUChanged requires the cellular link. something is wrong...
kClientChannelMetadataType_CellularMTUChanged should be %u bytes, not %u bytes, field: %u
kClientChannelMetadataType_InfoReportKey report %@
kClientChannelMetadataType_InfoReportKey should be bigger than %u bytes.
kClientChannelMetadataType_EncryptionMKMKey got MKM %@ size %u
kClientChannelMetadataType_EncryptionMKSKey got MKS %@ size %u
kClientChannelMetadataType_EncryptionMKMKey got MKI %@ size %u
kClientChannelMetadataType_EncryptionLocallyGeneratedInfoKey should be 1 byte, not %u
kClientChannelMetadataType_EncryptionMembershipChangedKey should be 1 byte, not %u
kClientChannelMetadataType_SessionReinitiated - IDSDSession is reinitiated
kClientChannelMetadataType_SessionReinitiated should be 1 byte, not %d
kClientChannelMetadataType_SessionInfoKey - Couldn't get NSData from fieldBytes
kClientChannelMetadataType_SessionInfoKey - Couldn't decode NSData %@ (error: %@)
kClientChannelMetadataType_SessionInfoKey - %@
kClientChannelMetadataType_SessionInfoResponseErrorKey should be %u byte, not %u
kClientChannelMetadataType_StatsKey - Couldn't get NSData from fieldBytes
kClientChannelMetadataType_StatsKey - Couldn't decode NSData %@
kClientChannelMetadataType_StatsKey - %@
kClientChannelMetadataType_StatsID should be %u byte, not %u
kClientChannelMetadataType_StatsServerTimeStamp should be %u byte, not %u
kClientChannelMetadataType_StatsServerPacketInterval should be %u byte, not %u
kClientChannelMetadataType_StatsTotalServerPacketReceived should be %u byte, not %u
kClientChannelMetadataType_StatsTotalServerPacketSent should be %u byte, not %u
kClientChannelMetadataType_StatsUplinkBandwidth should be %u byte, not %u
kClientChannelMetadataType_DebugDataTransferTypeKey should be 1 byte, not %u
kClientChannelMetadataType_OptOutPriorityFilter should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_TransitionPacketFlag should be 1 byte, not %u bytes, field: %u
kClientChannelMetadataType_DebugDataTransferKey got data size %u
Unknown metadata type: %u
<%@> read details: datagramSize %ld metadataSize %ld dataOffset %ld [%02x%02x%02x%02x ...]
<%@> read sanity check failed: datagramSize %ld metadataSize %ld dataOffset %ld
<%@> read failed %d due to datagram_count 0 - calling event handler %p
<%@> read nonfatal failure errno %d
<%@> read failed errno %d calling event handler %p
<%@> read returned 0 bytes calling event handler %p
-invalidate called for %@
read is in progress - wait to invalidate %@
read is done - resume invalidation %@
-start called for %@
<%@> nw_connection_create_with_connected_socket failed. socketDescriptor %d might be invalid.
<%@> got connected and calls event handler %p
<%@> does not have readHandler!
<%@> got error %@ and calls event handler %p
<%@> got disconnected with error %@ and calls event handler %p
<%@> write details: datagramSize %ld metadataSize %ld
<%@> write error_number %d calling completion handler %p dataCreateTime %0.6lf writeTime %0.6lf [%013.6lf]
<%@> write failed error_number %d calling completion handler %p
<%@> attempt to write with no connection, calling completion handler %p
<%@> write failed to send all bytes %d < %d
<%@> write returned 0 - connection terminated
<%@> write nonfatal failure errno %d
<%@> write failed errno %d
-setEventHandler called for %@
-setReadHandler called for %@
-setReadHandlerWithOptions called for %@
<%@> write details: metadataSize %ld
<%@> write error_number %d calling setChannelPreferences
<%@> write failed error_number %d calling setChannelPreferences
<%@> write done for setChannelPreferences
<%@> setChannelPreferences dictionary: %@
<%@> IDSDataChannelPreferencePreConnectionDataKey - %@, _waitForPreConnectionDataForConnected? %@
<%@> client channel connection is not ready. Wait to send preConnectionData
<%@> IDSDataChannelPreferenceDefaultLinkSelectionKey - linkID:%d
<%@> IDSDataChannelPreferenceBasebandRegistrationKey - linkID:%d, reg_key:%u registerOperation:%u
<%@> IDSDataChannelPreferenceBasebandQueueFlushKey - %@
<%@> IDSDataChannelPreferenceDiscardLinkIDsKey - %@
<%@> IDSDataChannelPreferenceUpdateQualityOfServiceKey - LinkID: %d, %@
<%@> IDSDataChannelPreferenceQueryInformationKey - queryType: %d
<%@> IDSDataChannelPreferenceSetMaxBitrateKey - maxBitrate: %u for LinkID: %d
<%@> kClientChannelMetadataType_BasebandQueueFlushPayloadSizeKey %u
<%@> kClientChannelMetadataType_DiscardLinkIDsKey the maximum of links is %d
<%@> kClientChannelMetadataType_PreConnectionDataSizeKey %u
<%@> kClientChannelMetadataType_PreConnectionDataKey %@
<%@> kClientChannelMetadataType_UpdateQoSIsGoodKey IsGood:%@ LinkID:%d
<%@> kClientChannelMetadataType_QueryRSSI
<%@> kClientChannelMetadataType_MaxBitrateKey maxBitrate:%u LinkID:%d
<%@> IDSDataChannelPreferenceNeedsEncryptionInfoKey - we'll request the encryption info
<%@> kClientChannelMetadataType_ForceUpdateEncryptionInfoKey - we'll update the encryption info.
%@: requestSessionInfoWithOptions: %{private}@ size: %lu
%@: reportFirstPacketForMKI: first packet arrival: %f for MKI: %{private}@
%@: reportFirstPacketForMKI: MKI %{private}@ has not arriaved yet. report later when it arrives.
%@: _reportFirstPacketForMKI: one of values is nil: MKIArrivalTime %@, firstPacketForMKIArrivalTime %@
%@: _reportFirstPacketForMKI: first packet arrival: %@, MKI arrival: %@
optinStreamIDs: is deprecated. Ignoring...
optoutStreamIDs: is deprecated. Ignoring...
Recieved local pairing response { requestID : %@, completionBlock : %@, responseHandler : %@, userQueue : %@, error : %@ }
Calling completion for local pairing response { requestID : %@ }
Recieved local pairing paired devices response { requestID : %@, completionBlock : %@, responseHandler : %@, userQueue : %@, error : %@, pairedDevices : %@ }
Unable to create an NSUUID from this CBUUID: %@
Adding listener ID: %@   for service: %@
Removing listener ID: %@   for service: %@
Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
Client %@ is attempting to send more than a reasonable amount of URI's in a query {count: %lu}
Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
Client requesting to warmup the query cache for service: %@
Client requesting to flush the query cache for service: %@
** BLOCKING Client ID status to refresh ID status for destination %@  on service: %@   from listenerID: %@
  => Done: %f
** BLOCKING Client ID status to refresh ID status for destinations %@  on service: %@   from listenerID: %@
** BLOCKING Client ID status cache request for destination %@  on service: %@   from listenerID: %@
** BLOCKING Client ID status cache request for destinations %@  on service: %@   from listenerID: %@
Client Remote Device Request
Client ID status request for destinations %@  on service: %@   from listenerID: %@
Client ID status request for destination %@  on service: %@   from listenerID: %@
Disconnected from daemon, notifying client of session %@
%@: Empty unique ID
%@: Empty account ID
%@: Empty destinations set
%@ - existing socket pair, ignoring request to create
Setting up socket pair to daemon
%@ - %@ %d (%s)
Sending allocation request with options %@
Sending Session Invitation with options %@
Sending Session Invitation with data (%lu bytes), declineOnError %@
Sending Session Invitation Cancel
Sending Session Invitation Cancel with data (%lu bytes)
Sending Session Invitation Cancel with Reason %u
Sending Session Invitation Accept
Sending Session Invitation Accept with data (%lu bytes)
Sending Session Invitation Decline
Sending Session Invitation Decline with data (%lu bytes)
Skipping destination %{private}@, which is not in this session's list of destinations: %{private}@
Asked if shouldUseSocketForTransport %@
%@ - Session not connected can't send data yet, ignoring...
%@ - No socket pair connection setup, ignoring...
%@ - No data to send, ignoring...
Sending data Client -> Daemon  (hash: %lu)  (length: %lu)
Session accept received fromID %@ sessionID %@ with data %@
Ignoring accept, session doesn't match %@ vs. %@
Session decline received fromID %@ sessionID %@ with data %@
Ignoring decline, session doesn't match %@ vs. %@
Session cancel received fromID %@ sessionID %@ with data %@
Ignoring cancel, session doesn't match %@ vs. %@
Session message received fromID %@ sessionID %@ with data %@
Ignoring message, session doesn't match %@ vs. %@
Session end received fromID %@ sessionID %@ with data %@
Ignoring end, session doesn't match %@ vs. %@
Session %@ invitation sent to tokens %@ shouldBreakBeforeMake %@
Ignoring session:invitationSentToTokens:, session doesn't match %@ vs. %@
Ignoring session started, session doesn't match %@ vs. %@
Session started for IDSSessionID: %@
Session ended %@ with reason %d error %@
Ignoring session ended, session doesn't match %@ vs. %@
Session audio enabled ? %@
Ignoring audioEnabled, session doesn't match %@ vs. %@
Session muted ? %@
Ignoring muted, session doesn't match %@ vs. %@
Ignoring xpc object, session doesn't match %@ vs. %@
Received initial link type %d for session %@ with error %@.
Received invalid initial link type xpc object for session %@ with error %@.
Received invalid xpc object type: %@.
UNRL: Received data Daemon -> Client  (data hash: %lu)  (length: %lu)
Daemon Interfaced Group context controller starting up
Client request to invalidate: %@
Scheduling next batch in %f
setDestinations %@
We're dead, bailing
Already issued maximum number of queries, bailing
Destinations are the same, bailing
Setting time of death to %@
Received cached positive results %@
Received 0 cached results, query all destinations
Returning cached results to delegate %p
Returning cached results to delegate %p for service %@
No delegate %p or queue %p
 * Next query timer hit: %@
We're dead, not querying: %@
We've reached the max number of queries for this batch, not adding anymore: %@
We've reached the max number of queries, not adding anymore: %@
Received results %@
Returning results to delegate %p
Returning results to delegate %p for service %@
We've reached the max number of queries, not rescheduling query timer: %@
Invalidating next query timer: %@
IDSTransactionLogSync
Got token
!setState Token=%@
failed to get token {error: %@}
Fetching messages
!addState moreComing=%@
Persisted token
moreComing -- continue
No more coming -- done
Failed to persist token {token: %@, error: %@}
Failed to ingest messages {error: %@}
Failed to fetch messages {error: %@}
got transaction messages from transport messages {transactionMessages.count: %ld, transportMessages.count: %ld}
Failed to get transaction messages from transport messges {transportMessages: %{private}@, participants: %{private}@, groups: %{private}@, error: %{public}@}
Failed to get groups or participants {error: %{public}@}
Failed to get account information {error: %{public}@}
Fetching participants/groups for deviceMessges {deviceMessages.count: %ld, groupMessages.count: %ld}
Got participants {participants.count: %ld, destinations: %ld}
Error getting participants from device messages {error: %{public}@, participants: %{private}@, deviceMessages: %{private}@}
Got groups {groups.count: %ld, groupIDs.count: %ld}
Error getting groups from group messages {error: %{public}@, groups: %{private}@, groupMessages: %{private}@}
Error getting groups or participants {error: %{public}@}
Failed to decrypt device message {error: %{public}@}
Failed to get account for recipient alias {alias: %{private}@, accounts: %{private}@, message: %{private}@}
Message missing sender/recipient alias {senderAlias: %{private}@, recipientAlias: %{private}@, message: %{private}@, senderAlias==nil: %{public}@, recipientAlias==nil: %{public}@}
IDSContinuity
IDSDaemonProtocol
NSObject
IDSDaemonController
IDSGroupSession
IDSServiceAvailabilityController
IDSServiceContainer
IDSDaemonListenerProtocol
IDSDaemonListener
_IDSRealTimeEncryptionProxy
IDSGroupContextNotifyingObserver
IDSGroupContextObserverDaemonProtocol
IDSSignInController
IDSServiceDelegate
iMessageSupport
FaceTimeSupport
IDSSession
IDSAppleCareDaemonResponseListener
IDSBatchIDQueryController
IDSConnection
Deprecated
IDSDaemonResponseHandler
IDSTransactionLogTask
IDSTransactionLogSyncTask
_IDSCompletionHandler
IDSPairedDeviceManager
IDSAuthenticationSigningResult
IDSPhoneCertificateVendor
IDSRegistrationControlDaemonResponseListener
IDSAccountController
_IDSGroupSession
IDSBaseSocketPairConnectionDelegate
IDSGroupContextController
IDSTransactionLogTaskHandlerDelegate
IDSGroupContextNotifyingObserverDelegate
IDSGroupContextControllerContent
IDSQuickRelayFixedTokenAllocator
_IDSConnection
IDSAccountDelegate
IDSGroupContextDaemonProtocol
IDSGroupContextDataSourceDaemonProtocol
IDSGroupContextCacheMiddlewareDaemonProtocol
IDSDaemonProtocolController
IDSQuickSwitchAcknowledgementTracker
_IDSDeviceConnectionActiveMap
_IDSDeviceConnection
_IDSAccountController
IDSAccount
_IDSGenericCompletionHandler
IDSHomeKitManager
IDSReportiMessageSpamDaemonResponseListener
_IDSAccount
IDSService
IDSDaemonRequestContext
0"1@
IDSDaemonRequestTimer
IDSAutoCleanup
_IDSService
IDSGroupContextControllerDelegate
IDSAccountControllerDelegate
IDSConnectionDelegatePrivate
IDSConnectionDelegate
IDSTransactionLogMessage
IDSTransactionLogDataMessage
IDSTransactionLogDictionaryMessage
IDSTransportLog
IDSLogging
_IDSDevice
_IDSIDQueryController
IDSDevice
_IDSDataChannelLinkContext
IDSDataChannelLinkContext
_IDSDatagramChannel
IDSDatagramChannel
IDSDeviceConnection
IDSLocalPairingDaemonResponseListener
IDSIDQueryController
_IDSContinuity
_IDSSession
Additions
IDSGroupContextDataSource
ENGroupContextDataSource
ENGroupContextCacheMiddleware
ENGroupContextMiddleware
IDSInternalQueueController
_IDSBatchIDQueryController
IDSIDQueryControllerDelegate
IDSRealTimeEncryptionProxy
IDSServiceMonitor
IDSTransactionLogTaskHandlerAccountInfo
IDSTransactionLogTaskHandler
IDSTransactionLogBaseTaskHandler
IDSTransactionLogSyncTaskHandler
@16@0:4@8@12
v8@0:4
i8@0:4
v20@0:4i8@12@16
v12@0:4i8
v24@0:4i8@12@16@20
v28@0:4i8@12@16@20@24
v32@0:4i8@12@16@20@24B28
v28@0:4i8@12@16@20B24
v36@0:4i8@12@16@20@24B28B32
v32@0:4i8@12@16@20B24B28
v12@0:4@8
v16@0:4@8i12
@"_IDSContinuity"
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v36@0:4@8@12i16@20@24@28@32
v28@0:4@8@12@16i20@24
v16@0:4@8@12
v20@0:4@8@12@16
v32@0:4@8@12@16@20@24@28
v28@0:4@8@12@16@20@24
v16@0:4B8@12
v24@0:4@8i12@16@20
v48@0:4@8@12@16@20@24@28q32q40
v28@0:4@8@12@16q20
v20@0:4@8@12I16
v20@0:4@8@12B16
v16@0:4@8I12
v16@0:4i8@12
v28@0:4@8@12@16@20B24
v24@0:4@8@12@16@20
v28@0:4i8@12@16B20B24
v20@0:4i8i12@16
v36@0:4@"NSString"8@"NSString"12i16@"NSDictionary"20@"NSString"24@"NSString"28@"NSString"32
v28@0:4@"NSString"8@"NSString"12@"NSString"16i20@"NSDictionary"24
v12@0:4@"NSString"8
v16@0:4@"NSString"8@"NSDictionary"12
v16@0:4@"NSString"8@"NSString"12
v20@0:4@"NSString"8@"NSString"12@"NSString"16
v16@0:4@"NSArray"8@"NSString"12
v16@0:4@"NSNumber"8@"NSString"12
v32@0:4@"NSString"8@"NSString"12@"NSString"16@"NSDictionary"20@"NSNumber"24@"NSArray"28
v20@0:4@"NSString"8@"NSNumber"12@"NSString"16
v16@0:4@"NSData"8@"NSString"12
v12@0:4@"NSArray"8
v12@0:4@"NSSet"8
v20@0:4@"NSString"8@"NSArray"12@"NSString"16
v20@0:4@"NSArray"8@"NSString"12@"NSString"16
v12@0:4@"NSDictionary"8
v28@0:4@"NSURL"8@"NSDictionary"12@"NSArray"16@"NSString"20@"NSString"24
v20@0:4@"NSDictionary"8@"NSNumber"12@"NSString"16
v16@0:4B8@"NSString"12
v16@0:4@"NSDictionary"8@"NSString"12
v16@0:4@"NSString"8i12
v24@0:4@"NSDictionary"8i12@"ENGroupID"16@"NSString"20
v28@0:4@"NSString"8@"NSString"12@"NSNumber"16@"NSNumber"20@"NSNumber"24
v48@0:4@"NSString"8@"NSString"12@"NSString"16@"NSNumber"20@"NSNumber"24@"NSNumber"28q32q40
v28@0:4@"NSString"8@"NSString"12@"NSString"16q20
v20@0:4@"NSSet"8@"NSSet"12I16
v16@0:4@"NSObject<OS_xpc_object>"8@"NSDictionary"12
v20@0:4@"NSString"8@"NSData"12B16
v16@0:4@"NSString"8@"NSData"12
v16@0:4@"NSString"8I12
v20@0:4@"NSData"8@"NSSet"12@"NSString"16
v16@0:4i8@"NSString"12
v28@0:4@"NSArray"8@"NSString"12@"NSString"16@"NSData"20B24
v24@0:4@"NSData"8@"NSString"12@"NSString"16@"NSData"20
v20@0:4i8@"NSData"12@"NSDictionary"16
v20@0:4i8@"NSData"12@"NSData"16
v24@0:4i8@"NSData"12@"NSData"16@"NSArray"20
v28@0:4i8@"NSData"12@"NSData"16B20B24
v32@0:4i8@"NSData"12@"NSData"16@"NSArray"20B24B28
v24@0:4@"NSString"8@"NSString"12@"NSNumber"16@"NSString"20
v20@0:4@"NSString"8@"NSString"12@"NSData"16
v24@0:4@"NSString"8@"NSString"12@"NSString"16@"NSArray"20
v20@0:4@"NSString"8@"NSString"12@"NSArray"16
v24@0:4@"NSString"8@"NSString"12@"NSString"16@"NSString"20
v20@0:4i8i12@"NSString"16
v16@0:4@?8B12
v12@0:4@?8
B16@0:4B8@?12
v12@0:4B8
v24@0:4B8@12@16I20
B12@0:4B8
B24@0:4B8@12@16I20
B12@0:4I8
B20@0:4@8@12@16
B16@0:4@8@12
@12@0:4@8
I12@0:4@8
B20@0:4I8@12B16
@"IMRemoteObject<IDSDaemonProtocol>"
@"IMLocalObject"
@"IDSDaemonListener"
@"NSProtocolChecker"
@"NSString"
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_group>"
@"NSMutableDictionary"
@"NSSet"
@"NSMutableSet"
@20@0:4@8@12@16
@"_IDSGroupSession"
@16@0:4@8B12
i16@0:4@8@12
@"IDSServiceMonitor"
v36@0:4@8@12@16@20@24@28@32
v40@0:4@8@12@16@20@24@28@32@36
v36@0:4@8@12@16i20@24B28@32
v24@0:4@8d12@20
v28@0:4@8@12@16B20@24
v20@0:4@8I12@16
v16@0:4@8B12
v20@0:4@8i12@16
v20@0:4@8@12^B16
v20@0:4@8B12@16
v24@0:4@8B12@16@20
v32@0:4@8i12B16d20@28
v36@0:4@"NSDictionary"8@"NSString"12@"NSDictionary"16@"NSString"20@"NSString"24@"NSString"28@"NSDictionary"32
v32@0:4@"NSData"8@"NSString"12@"NSString"16@"NSString"20@"NSString"24@"NSDictionary"28
v40@0:4@"NSString"8@"NSString"12@"NSString"16@"NSString"20@"NSString"24@"NSString"28@"NSString"32@"NSDictionary"36
v36@0:4@"NSString"8@"NSString"12@"NSString"16i20@"NSError"24B28@"NSDictionary"32
v32@0:4@"NSString"8@"NSString"12@"NSString"16@"NSArray"20@"NSArray"24@"NSDictionary"28
v28@0:4@"NSString"8@"NSString"12@"NSString"16@"NSString"20@"NSDictionary"24
v32@0:4@"NSDictionary"8@"NSString"12@"NSString"16@"NSString"20@"NSString"24@"NSDictionary"28
v24@0:4@"NSString"8d12@"NSError"20
v20@0:4@"NSString"8@"NSString"12@"NSError"16
v16@0:4@"NSString"8@"NSArray"12
v16@0:4@"NSString"8@"NSNumber"12
v16@0:4@"NSData"8@"NSError"12
v20@0:4@"NSData"8@"NSString"12@"NSError"16
v32@0:4@"NSData"8@"NSData"12@"NSData"16@"NSData"20@"NSString"24@"NSError"28
v20@0:4@"NSNumber"8@"NSString"12@"NSError"16
v28@0:4@"NSString"8@"NSDictionary"12@"NSString"16B20@"NSError"24
v32@0:4@"NSDictionary"8@"NSString"12@"NSString"16@"NSString"20@"NSString"24@"NSNumber"28
v20@0:4@"NSString"8I12@"NSError"16
v20@0:4@"NSString"8@"NSSet"12B16
v16@0:4@"NSString"8B12
v20@0:4@"NSString"8@"NSArray"12@"NSError"16
v20@0:4@"NSString"8@"NSDictionary"12@"NSError"16
v16@0:4@"NSString"8@"NSError"12
v24@0:4@"NSString"8@"NSArray"12@"NSNumber"16@"NSNumber"20
v20@0:4@"NSString"8@"NSArray"12B16
v24@0:4@"NSDictionary"8@"NSString"12@"NSString"16@"NSString"20
v20@0:4@"NSObject<OS_xpc_object>"8@"NSString"12@"NSError"16
v20@0:4@"NSString"8i12@"NSError"16
v16@0:4i8@"NSError"12
v20@0:4i8@"NSData"12@"NSString"16
v16@0:4@"NSArray"8@"NSError"12
v20@0:4@"NSString"8@"NSString"12^B16
v20@0:4@"NSString"8@"NSError"12@"NSArray"16
v20@0:4@"NSString"8B12@"NSError"16
v24@0:4@"NSString"8B12@"NSData"16@"NSError"20
v20@0:4i8@"NSString"12@"NSError"16
v32@0:4@"NSString"8i12B16d20@"NSError"28
v16@0:4@?8@?12
@"NSHashTable"
@"CUTWeakReference"
v16@0:4@8@?12
v20@0:4@8@12@?16
v16@0:4@"ENGroup"8@?<v@?@"NSError">12
v20@0:4@"ENGroup"8@"ENGroup"12@?<v@?@"NSError">16
v12@0:4@?<v@?@"NSError">8
v32@0:4@8@12@16B20@24@28
v28@0:4@8@12@16i20i24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16i20i24
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@"NSString"20@24
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v20@0:4@"IDSService"8@"IDSAccount"12@"IDSGroupSessionParticipantUpdate"16
v12@0:4@"IDSService"8
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
v16@0:4@?8@12
@"NSMapTable"
@"NSNumber"
@20@0:4@8@12i16
@24@0:4@8@12i16@20
v12@0:4I8
B16@0:4@8^@12
I12@0:4I8
@"_IDSSession"
@12@0:4@?8
@"IDSDaemonRequestTimer"
@"_IDSBatchIDQueryController"
@20@0:4@8@12B16
B32@0:4@8@12i16@20^@24^@28
@"_IDSConnection"
B28@0:4@8@12@16^@20^@24
@?8@0:4
@16@0:4@?8@12
v20@0:4@8@?12@16
@"_IDSCompletionHandler"
@24@0:4@8@12@16@20
@"IDSAuthenticationCertificate"
@"NSData"
v16@0:4i8@?12
i12@0:4^@8
@12@0:4i8
@16@0:4i8@12
i12@0:4i8
i12@0:4@8
@"IDSPhoneCertificateVendor"
v24@0:4@8@12@16@?20
v28@0:4@8@12@16@20@?24
v32@0:4@8@12@16@20@24@?28
@"_IDSAccountController"
v16@0:4@"IDSBaseSocketPairConnection"8@"NSData"12
v12@0:4@"IDSBaseSocketPairConnection"8
@"IDSBaseSocketPairConnection"
@"NSDictionary"
^{cfs_client_s=}
@"NSArray"
@"NSError"
v20@0:4@"IDSTransactionLogTaskHandler"8@"NSArray"12@?<v@?@"NSArray"@"NSError">16
v20@0:4@"IDSTransactionLogTaskHandler"8@"<NSSecureCoding>"12@?<v@?@"NSArray"@"<NSSecureCoding>"B@"NSError">16
v20@0:4@"IDSTransactionLogTaskHandler"8@"<NSSecureCoding>"12@?<v@?@"NSError">16
v16@0:4@"IDSTransactionLogTaskHandler"8@?<v@?@"<NSSecureCoding>"@"NSError">12
v20@0:4@"IDSTransactionLogTaskHandler"8@"NSSet"12@?<v@?@"IDSTransactionLogTaskHandlerAccountInfo"@"NSError">16
@"<IDSGroupContextControllerDelegate>"
@"CUTPromiseSeal"
@"IDSCloudKitContainer"
@"ENGroupContext"
@"ENAccountIdentity"
v16@0:4@"IDSAccount"8B12
v16@0:4@"IDSAccount"8@"NSArray"12
@24@0:4@8@12B16@20
v24@0:4:8@?12@?16@?20
v28@0:4:8@?12@?16@?20@24
@24@0:4@8@12@16I20
B28@0:4@8@12@16@20B24
@"IDSAccount"
v20@0:4@"_ENGroupInfo"8@"ENGroup"12@?<v@?@"ENGroup"@"NSError">16
v16@0:4@"ENGroupID"8@?<v@?@"ENGroup"@"NSError">12
v16@0:4@"ENGroup"8@?<v@?@"NSData"@"NSError">12
v16@0:4@"NSData"8@?<v@?@"ENGroup"@"NSError">12
v16@0:4@"<ENCypher>"8@?<v@?@"NSArray"B>12
v20@0:4@"ENGroup"8@"ENGroup"12@?<v@?B@"NSError">16
v16@0:4@"ENStableGroupID"8@?<v@?@"ENGroup">12
v12@0:4@?<v@?@"NSArray">8
v12@0:4@?<v@?>8
v16@0:4@"ENGroupID"8@?<v@?>12
@"NSXPCConnection"
@"IDSGroupContextNotifyingObserver"
{_opaque_pthread_mutex_t="__sig"l"__opaque"[40c]}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@24@0:4@8@12@?16@20
@"NSInputStream"
@"NSOutputStream"
@"_IDSAccount"
v28@0:4@8@12@16@?20@24
v32@0:4@8@12@16@20@?24@28
@"_IDSGenericCompletionHandler"
@"NSMutableArray"
B16@0:4I8i12
v16@0:4:8S12
:12@0:4S8
B36@0:4@8@12@16i20@24^@28^@32
B32@0:4@8@12@16@20^@24^@28
B28@0:4@8i12@16^@20^@24
@16@0:4@8^@12
@16@0:4i8^@12
@"_IDSService"
@20@0:4@8@?12@16
@"IDSDaemonResponseHandler"
@"IMTimer"
@24@0:4@8d12@?20
v16@0:4@"IDSGroupContextController"8@"ENGroup"12
v16@0:4@"IDSGroupContextController"8@?<v@?@"IDSDeviceIdentity"@"NSError">12
@"NSDictionary"16@0:4@"IDSGroupContextController"8@"NSSet"12
v16@0:4@"IDSAccountController"8@"IDSAccount"12
v28@0:4@8@12B16@20@24
v24@0:4@"IDSConnection"8@"NSDictionary"12@"NSString"16@"IDSMessageContext"20
v24@0:4@"IDSConnection"8@"NSData"12@"NSString"16@"IDSMessageContext"20
v24@0:4@"IDSConnection"8@"IDSDeviceIdentity"12@"NSError"16@"IDSMessageContext"20
v28@0:4@"IDSConnection"8@"NSString"12@"NSString"16@"NSString"20@"IDSMessageContext"24
v24@0:4@"IDSConnection"8@"IDSProtobuf"12@"NSString"16@"IDSMessageContext"20
v16@0:4@"IDSConnection"8B12
v16@0:4@"IDSConnection"8@"NSArray"12
v28@0:4@"IDSConnection"8@"NSString"12B16@"NSError"20@"IDSMessageContext"24
v24@0:4@"IDSConnection"8@"NSString"12@"NSString"16@20
v16@0:4@"IDSConnection"8i12
v20@0:4@"IDSConnection"8@"NSDictionary"12@"NSString"16
v32@0:4@8@12@16i20@24B28
v32@0:4@"IDSConnection"8@"NSString"12@"NSString"16i20@"NSError"24B28
v36@0:4@"IDSConnection"8@"NSString"12@"NSString"16i20@"NSError"24B28@32
v32@0:4@"IDSConnection"8@"NSString"12@"NSString"16@"NSArray"20@"NSArray"24@"NSDictionary"28
v24@0:4@"IDSConnection"8@"NSDictionary"12@"NSString"16@20
v40@0:4@"IDSConnection"8@"IDSAccount"12@"NSString"16@"NSString"20@"NSNumber"24@"NSDictionary"28@"NSData"32@36
v20@0:4@"IDSConnection"8@"IDSAccount"12@"IDSGroupSessionParticipantUpdate"16
@?12@0:4@8
v20@0:4:8S12B16
:16@0:4S8B12
v12@0:4^@8
B40@0:4@8@12@16@20i24@28^@32^@36
B28@0:4@8i12@16^@20@?24
@"IDSAccountController"
@"NSObject<OS_xpc_object>"
@"IDSGroupContextController"
@"IDSQuickSwitchAcknowledgementTracker"
@28@0:4@8@12@16@20@24
@28@0:4@8@12@?16@?20B24
v16@0:4d8
v28@0:4@8@12@16B20@?24
B32@0:4@8@12@16B20@24@?28
B28@0:4@8@12@16@20@?24
i20@0:4@8@12@16
{?=iii}8@0:4
i16@0:4@8i12
@"_IDSDevice"
@"NSUUID"
@72@0:4c8@12@16C20C24i28I32S36C40i44I48I52i56@60@64B68
c8@0:4
C8@0:4
S8@0:4
v12@0:4S8
@"_IDSDataChannelLinkContext"
@"NSObject<OS_dispatch_semaphore>"
@"NSObject<OS_nw_connection>"
@"NSObject<OS_nw_path_evaluator>"
@"IDSDataChannelLinkContext"
v12@0:4L8
v16@0:4c8@12
v16@0:4*8S12
v12@0:4c8
v24@0:4@8@12@16B20
v12@0:4C8
v24@0:4*8L12^{?=cSSC}16^{?=IQSCc[12S]CS{?=SSSSS}d}20
v32@0:4r^^v8^I12^{?=cSSC}16i20^^{?}24@?28
v36@0:4r^^v8^I12{?=cSSC}16i24^{?=IQSCc[12S]CS{?=SSSSS}d}28@?32
v32@0:4r^v8I12{?=cSSC}16^{?=IQSCc[12S]CS{?=SSSSS}d}24@?28
v28@0:4r^v8I12{?=cSSC}16@?24
S36@0:4*8L12{?=cSSC}16^{?=IQSCc[12S]CS{?=SSSSS}d}24C28C32
@"_IDSDatagramChannel"
@"_IDSDeviceConnection"
@"_IDSIDQueryController"
@"IDSInternalQueueController"
@36@0:4@8@12i16I20B24@28@32
@28@0:4@8@12i16@20@24
v24@0:4@"ENGroupContext"8@"_ENGroupInfo"12@"ENGroup"16@?<v@?@"ENGroup"@"NSError">20
v20@0:4@"ENGroupContext"8@"ENGroupID"12@?<v@?@"ENGroup"@"NSError">16
v20@0:4@"ENGroup"8@"ENGroupContext"12@?<v@?@"NSData"@"NSError">16
v20@0:4@"NSData"8@"ENGroupContext"12@?<v@?@"ENGroup"@"NSError">16
i12@0:4@"ENGroupContext"8
v20@0:4@"ENGroupContext"8@"ENGroup"12@?<v@?>16
v20@0:4@"ENGroupContext"8@"ENGroupID"12@?<v@?@"ENGroup">16
v20@0:4@"ENGroupContext"8@"ENStableGroupID"12@?<v@?@"ENGroup">16
v16@0:4@"ENGroupContext"8@?<v@?@"NSArray">12
v16@0:4@"ENGroupContext"8@?<v@?>12
v20@0:4@"ENGroupContext"8@"ENGroupID"12@?<v@?>16
@16@0:4*8^v12
@"NSTimer"
@"NSDate"
@"_IDSRealTimeEncryptionProxy"
@"IDSTransactionLogTask"
@"IDSTransactionLogSyncTask"
@"<IDSTransactionLogTaskHandlerDelegate>"
?@(#)PROGRAM:IDS  PROJECT:IDS-
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
