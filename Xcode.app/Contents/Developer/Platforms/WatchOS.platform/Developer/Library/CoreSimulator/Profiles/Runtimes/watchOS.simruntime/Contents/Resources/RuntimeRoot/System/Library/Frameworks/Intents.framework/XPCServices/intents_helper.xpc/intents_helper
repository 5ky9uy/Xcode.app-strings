setExportedInterface:
alloc
initWithServingConnection:
setExportedObject:
resume
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
listener:shouldAcceptNewConnection:
serviceListener
setDelegate:
loadDataImageForImage:scaledWidth:scaledHeight:usingPortableImageLoader:completion:
storeImage:scaled:qualityOfService:storeType:completion:
retrieveImageWithIdentifier:completion:
purgeImageWithIdentifier:completion:
purgeExpiredImagesInEphemeralStore
loadSchemaURLsForBundleIdentifiers:completion:
interfaceWithProtocol:
setClass:forSelector:argumentIndex:ofReply:
setWithObjects:
setClasses:forSelector:argumentIndex:ofReply:
init
servingConnection
accessSpecifierAppropriateForXPCConnection:
helper
null
setHelper:
_inui_downscaledPNGImageOfSize:error:
loadImageDataFromImage:accessSpecifier:completion:
count
accessLevel
dictionaryWithObjects:forKeys:count:
initWithDomain:code:userInfo:
countByEnumeratingWithState:objects:count:
applicationProxyForIdentifier:
siriActionDefinitionURLs
allValues
initWithArray:
initWithURL:readonly:
addObject:
setObject:forKey:
.cxx_destruct
_filePersistence
_servingConnection
ServiceDelegate
NSXPCListenerDelegate
NSObject
INHServing
INHService
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
Vv36@0:4@8d12d20@28@?32
Vv28@0:4@8B12I16I20@?24
Vv16@0:4@8@?12
Vv36@0:4@"INImage"8d12d20@"INPortableImageLoader"28@?<v@?@"INImage"@"NSError">32
Vv28@0:4@"INImage"8B12I16I20@?<v@?@"NSString"@"NSError">24
Vv16@0:4@"NSString"8@?<v@?@"INImage"@"NSError">12
Vv16@0:4@"NSString"8@?<v@?@"NSError">12
Vv16@0:4@"NSSet"8@?<v@?@"NSDictionary"@"NSError">12
@12@0:4@8
v8@0:4
@"INImageFilePersistence"
@"NSXPCConnection"
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
TMPDIR
/private/var/tmp
com.apple.intents.intents-helper
/System/Library/Frameworks/IntentsUI.framework/IntentsUI
IntentsUILibrary
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ASKit_Sim/ASKit-377.136.1/intents_helper/main.m
frameworkLibrary
-[INHService storeImage:scaled:qualityOfService:storeType:completion:]
-[INHService retrieveImageWithIdentifier:completion:]
-[INHService loadDataImageForImage:scaledWidth:scaledHeight:usingPortableImageLoader:completion:]
v12@?0@"INImage"4@"NSError"8
-[INHService purgeImageWithIdentifier:completion:]
-[INHService purgeExpiredImagesInEphemeralStore]
Client does not have sufficient permissions to load intent definitions
servingConnection
T@"NSXPCConnection",R,W,N,V_servingConnection
INUIPortableImageLoaderHelper
initINUIPortableImageLoaderHelper
/BuildRoot/Library/Caches/com.apple.xbs/Sources/ASKit_Sim/ASKit-377.136.1/intents_helper/INHService.m
classINUIPortableImageLoaderHelper
%s Storing image %@ with INImageFilePersistence
%s Retrieving image with identifier %@ with INImageFilePersistence
%s intents_helper injecting its own UI helper for portable image loader %@
%s Loading image %@ with portable image loader %@
%s Purging image %@ from INImageFilePersistence
%s Purging all expired ephemeral images in INImageFilePersistence
@(#)PROGRAM:intents_helper  PROJECT:Intents-1
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.intents.extension.discovery</key>
<true/>
<key>com.apple.private.coreservices.canmaplsdatabase</key>
<true/>
<key>com.apple.security.exception.files.absolute-path.read-only</key>
<array>
<string>/Applications/</string>
<string>/private/var/containers/Bundle/</string>
</array>
<key>com.apple.security.exception.process-info</key>
<true/>
<key>platform-application</key>
<true/>
<key>seatbelt-profiles</key>
<array>
<string>intents-helper</string>
</array>
</dict>
</plist>
