setPurposeDescription:
setSyntaxDescription:
setDiscussion:
setSingleHyphenLongNames:
alloc
init
startWithMessage:
hasPrefix:
UTF8String
parseArgumentsWithBlock:
usage:
directedGraphWithData:error:
localizedDescription
stackLogReader
processDescriptionString
stringWithUTF8String:
currentHandler
handleFailureInFunction:file:lineNumber:description:
binaryImagesDescription
initWithTask:
usesLiteMode
initWithTask:getBinariesList:
description
addRootNodesFromTask
addMallocNodesFromTask
zoneCount
zoneNameForIndex:
setObject:forKeyedSubscript:
nodeCount
objectForKeyedSubscript:
nodeDetails:
addRange:
enumerateRegionsWithBlock:
count
rangeAtIndex:
getFramesForAddress:size:inLiteZone:stackFramesBuffer:
functionNameForPCaddress:
mapTableWithKeyOptions:valueOptions:
inspectingLiveProcess
liteModeStackIDforAddress:size:
enumerateRecords:
name
isEqualToString:
objectForKey:
setObject:forKey:
initWithSymbolicator:sampler:options:
setStackLogReader:
newlineCharacterSet
getFramesForStackID:stackFramesBuffer:
labelForNode:
componentsSeparatedByCharactersInSet:
objectAtIndex:
stringWithFormat:
addBacktrace:count:numBytes:
sort
addChildWithName:address:count:numBytes:toNode:
allBacktracesHaveBeenAdded
invertedNode
stringFromCallTreeIndentIfNoBranches:
stop
exceptionWithName:reason:userInfo:
member:
addObject:
setCountStyle:
stringFromByteCount:
setNumberStyle:
numberWithLongLong:
stringFromNumber:
initWithFormat:arguments:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
initWithString:
dealloc
handleFailureInMethod:object:file:lineNumber:description:
length
characterAtIndex:
rangeOfString:
appendString:
stringWithString:
appendFormat:
removeAllObjects
userInfo
code
countByEnumeratingWithState:objects:count:
stringByReplacingOccurrencesOfString:withString:
registerOptionWithLongName:shortName:hasArgument:argumentName:optionDescription:handler:
.cxx_destruct
purposeDescription
syntaxDescription
discussion
singleHyphenLongNames
parametersShowAsAssignment
setParametersShowAsAssignment:
_purposeDescription
_syntaxDescription
_discussionDescription
_optionDescriptions
_optionBlockByString
_longOptStructs
_shortOpts
_spacing
_singleHyphenLongNames
_parametersShowAsAssignment
containsString:
hasSuffix:
defaultManager
fileExistsAtPath:isDirectory:
isExecutableFileAtPath:
dataWithContentsOfFile:options:error:
string
processInfo
arguments
arrayWithArray:
objectAtIndexedSubscript:
lastPathComponent
setObject:atIndexedSubscript:
componentsJoinedByString:
class
isKindOfClass:
intValue
is64Bit
valueForEnvVar:
numberWithInt:
stringValue
Displays/aggregates allocation histories in a process
<pid | partial-process-name> [options] <mode> [<address> ...]
'mode' should be one of {-callTree, -allBySize, -allByCount, -allEvents, or one or more addresses}
v4@?0
allBySize
[mode]
allByCount
allEvents
callTree
debug
highWaterMark
showContent
(-calltree only)
invert
ignoreThreads
collapseRecursion
chargeSystemLibraries
consolidateAllBySymbol
consolidateSystemFramesBySymbol
forkCorpse
generate a corpse fork from process and run malloc_history on it
getCorpseFromParent
get_corpse
showTiming
initialization
bad address %@ specified
v12@?0@"NSString"4^@8
no process id or name specified
specify only one mode (-callTree, -allBySize, -allByCount, -allEvents, or one or more addresses)
cannot use -showContent with -highWaterMark, since the malloc heap has probably changed since high water mark
do not pass specific addresses with -allEvents
cannot use call tree options when not passing -callTree
no mode or address specified
%s[%d]: [fatal] unable to read input graph: %s
The target process has no stack logs.  Run it with the MallocStackLogging environment variable set to get stack logs.
Can't show high water mark when reading stack logs for active allocations only, from memory graph file.
int main(int, char **)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SamplingTools_Sim/SamplingTools-63067/malloc_history/malloc_history_main.m
<Unknown File>
expected no addresses to be passed with -allEvents
Note: Process %d is marked CS_RESTRICT.
For security, malloc_history will not show memory contents of restricted processes.
Can't show high water mark when target process is run in lite mode of malloc stack logging.
create symbolicator for task
malloc_history was unable to acquire a symbolicator for the target process.
create process description
finding high water mark
%s[%d]: [fatal] unable to introspect malloc zones to get allocation information
int main(int, char **)_block_invoke_2
v12@?0i4I8
VM Regions
v12@?0@"VMUVMRegion"4^B8
%d blocks in zone %s
%i: %#qx %s -- %ld stack frames
 -- NO STACK !!!
 -- SHORT STACK
  %s
  0x%qx 
%d total blocks
MallocStackLoggingLite
step 1 -- build map table with live malloc block addresses as keys
skipping step 2 of enumerating stack log records to record unique backtrace IDs, since for MallocStackLogging=lite that is done in the previous step of zone enumeration
step 2 -- enumerate stack log records to record unique backtrace IDs for objects of interest
stack log enumeration callbacks
v32@?0I4Q8Q16Q24
skipping step 1 of building map table with live malloc block addresses as keys since we're looking for high water mark
step 2 -- enumerate stack log records to record unique backtrace IDs for objects that were live at high water mark
HighWaterMarkException
void printCallTree(__strong id<VMUCommonGraphInterface>, CSSymbolicatorRef, HighWaterMarkInfo *, VMUCallTreeOptions, BOOL, BOOL, NSHashTable *__strong, __strong id<VMUStackLogReader>)
Unexpected exception
step 3 -- from uniqueBacktraceToObjectsMap, create uniqueBacktraceToObjectsMap
step 4 -- build call tree by iterating the uniqueBacktraceToObjectsMap
%qu unique stacks
%@' PLUS %lu MORE LINES
malloc block
CONTENT:  %@  %@
CONTENT:  %@  size %qu
freeing up call-tree memory
releasing objectIdentifier
step 5 -- print call tree
releasing call tree/autorelease pool
error acquiring stack with identifier: %qd (frame count %u)
void printAllBySizeOrCount(CSSymbolicatorRef, HighWaterMarkInfo *, BOOL, NSHashTable *__strong, __strong id<VMUStackLogReader>)
%d calls for %qd bytes: 
malformed stack; count < 2
thread_%qx | 
0x%qx 
VM_ALLOC
ALLOC
VM_DEALLOC
FREE
%s 0x%qx-0x%qx [size=%qu]: 
OTHER
%s  0x%qx: 
%s  0x%qx-0x%qx [size=%qu]: 
void printAddressHistory(CSSymbolicatorRef, HighWaterMarkInfo *, mach_vm_address_t, __strong id<VMUStackLogReader>)
no stack logs found for 0x%qx
High water mark of allocated heap memory: %*s  at malloc stack log record index %*s
     Current total allocated heap memory: %*s  at malloc stack log record index %*s
Call graph:
Total number in stack -- this line is here to get the correct format for importing with the Sampler instrument in Instruments.app
----
malloc_history Report Version:  2.0
VMUOptionParserDomain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SamplingTools_Sim/SamplingTools-63067/VMUOptionParser.m
Invalid parameter not satisfying: %@
block && (longName || shortName)
!longName || ([longName length] && [longName characterAtIndex:0] != '-')
Option's long-name '%@' is invalid or already in use.
Option's short-name '%c' is invalid or already in use.
%s%@
%c%c%@%c
[@@@spacing@@@]%@
%s flag supplied with no argument
unrecognized option '%s'
[invalid usage]: %s
%s: %s
Usage: %s %s
[@@@spacing@@@]
purposeDescription
T@"NSString",C,N,V_purposeDescription
syntaxDescription
T@"NSString",C,N,V_syntaxDescription
discussion
T@"NSString",C,N,V_discussionDescription
singleHyphenLongNames
TB,N,V_singleHyphenLongNames
parametersShowAsAssignment
TB,N,V_parametersShowAsAssignment
.memgraph
%s[%d]: [fatal] unable to suspend target process: %s
%s[%d]: task_stop_peeking failed. (%s)
Command args:    %@
Target process:  %s [%u]
Parent process:  %s [%u]
Parent process:  unable to determine
DYLD_INSERT_LIBRARIES=/usr/lib/libLeaksAtExit.dylib
SAMPLING_TOOLS_TARGET_PID
%s[%d]: [fatal] error acquiring target task port from parent.
%s[%d]: %s cannot find any existing process %s a name like '%s'%s.
you have access to which has
with
; try running with `sudo`
%s[%d]: cannot examine itself.
%s[%d]: Unable to deallocate target task port: %d (%s)
/usr/lib/system/libsystem_kernel.dylib
task_generate_corpse
%s[%d]: [fatal] Fail to generate corpse from the task, exiting
DYLD_ROOT_PATH
SIMULATOR_UDID
DT_NO_RESPAWN
%s[%d]: [fatal] respawning is disabled (because DYLD_ROOT_PATH or DT_NO_RESPAWN is set), but analysis process does not match architecture of target process %d.
DYLD_FRAMEWORK_PATH
DYLD_SHARED_REGION
avoid
x86_64
i386
posix_spawnattr_init
posix_spawnattr_setbinpref_np
%s[%d]: [fatal] 'mach_ports_register' failed: %s (%d)
__check_mach_ports_lookup
__check_parent_tool_v1
-atExit
%s[%d]: [fatal] posix_spawn: %s could not be launched as a %d-bit process with architecture %s: %s (%d)
%s[%d]: [fatal]  child process status could not be determined; exit code unavailable.
v16@?0I4I8I12
v8@?0I4
i12@?0r^v4r^v8
: terminated; resuming target task
: interrupted; resuming target task
%s[%d]: [fatal] 'pid_for_task' failed: %s (%d)
for unknown reasons
for unknown reasons, even though it appears to exist
because it no longer appears to be running
because the process does not exist
because you do not have appropriate privileges to examine it
%s[%d]: %s cannot examine process %d (%s) %s%s.
%s[%d]: %s cannot examine process %d (with name like '%s') %s.
%s[%d]: %s cannot examine process %d %s.
%s/usr/bin/%s
%s%s
VMUOptionParser
@8@0:4
v8@0:4
v32@0:4@8c12i16@20@24@?28
@12@0:4@?8
v12@0:4@8
B8@0:4
v12@0:4B8
@"NSString"
@"NSMutableArray"
@"NSMutableDictionary"
^{__CFArray=}
@"NSMutableString"
%s[%d]: [error] 'mach_port_allocate' failed: %s (%d)
%s[%d]: [error] 'mach_port_insert_right' failed: %s (%d)
%s[%d]: [error] 'mach_port_mod_refs' failed: %s (%d)
%s[%d]: [error] 'mach_msg_send' failed: %s (%d)
@(#)PROGRAM:malloc_history  PROJECT:SamplingTools-63067
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>CFBundleDevelopmentRegion</key>
<string>English</string>
<key>CFBundleIdentifier</key>
<string>com.apple.SamplingTools</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>SamplingTools</string>
<key>CFBundleVersion</key>
<string>1.0</string>
<key>SecTaskAccess</key>
<array>
<string>allowed</string>
<string>debug</string>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>task_for_pid-allow</key>
<true/>
</dict>
</plist>
zPLR
zPLR
