init
setLogPrefix:
release
dealloc
retain
lock
unlock
reportingAgent
setReportingAgent:
logPrefix
_logPrefix
_mutex
_reportingAgent
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedInt:
setObject:forKey:
class
allocWithZone:
isMemberOfClass:
copyWithZone:
setMaxNetworkBitrate:
setHasMaxNetworkBitrate:
hasMaxNetworkBitrate
setMetadata:
setHasMetadata:
hasMetadata
setMaxMediaBitrate:
setHasMaxMediaBitrate:
hasMaxMediaBitrate
setMaxPacketsPerSecond:
setHasMaxPacketsPerSecond:
hasMaxPacketsPerSecond
setRepairedStreamID:
setHasRepairedStreamID:
hasRepairedStreamID
setRepairedMaxNetworkBitrate:
setHasRepairedMaxNetworkBitrate:
hasRepairedMaxNetworkBitrate
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
ssrc
setSsrc:
maxNetworkBitrate
payload
setPayload:
streamID
setStreamID:
metadata
qualityIndex
setQualityIndex:
supportedVideoFormats
setSupportedVideoFormats:
frameRate
setFrameRate:
keyFrameInterval
setKeyFrameInterval:
maxMediaBitrate
maxPacketsPerSecond
repairedStreamID
repairedMaxNetworkBitrate
_frameRate
_keyFrameInterval
_maxMediaBitrate
_maxNetworkBitrate
_maxPacketsPerSecond
_metadata
_payload
_qualityIndex
_repairedMaxNetworkBitrate
_repairedStreamID
_ssrc
_streamID
_supportedVideoFormats
_has
alloc
initWithObjects:
vpOperationModeForConferenceOperatingMode:deviceRole:
sharedInstance
forceAudioChannelCount
computeHardwarePreferences
countByEnumeratingWithState:objects:count:
isInputMeteringEnabled
isOuputMeteringEnabled
addObject:
removeObject:
containsObject:
removeSinkClient:
removeSourceClient:
array
delegate
respondsToSelector:
performSelector:
count
setObject:atIndexedSubscript:
removeObjectsInArray:
lastObject
operatingMode
deviceRole
format
allowAudioRecording
setAudioUnitType:
setFormat:
setSamplesPerFrame:
setAllowAudioRecording:
setDeviceRole:
setOperatingMode:
setVpOperatingMode:
isRemoteCodecInfoValid
remoteCodecSampleRate
setRemoteCodecSampleRate:
remoteCodecType
setRemoteCodecType:
isRemoteVersionInfoValid
farEndVersionInfo
setFarEndVersionInfo:
audioUnitType
samplesPerFrame
vpOperatingMode
setupIODevicesForAUIO:
checkinWithTimeout:forTask:
isFarEndVersionInfoValid
enableDNNVAD
setInputMetering
setOutputMetering
checkout
isSessionActive
startAudioSessionWithProperties:
_resumeSuspendedClients
resetAudioTimestamps
didSuspend
didResume
removeAllObjects
stopAudioSession
didStart:error:
_suspendAllClients
shouldResetAudioSessionWithProperties:
outputFormat
resetAudioSessionWithProperties:
setCurrentAudioUnitProperties:
controllerFormatChanged:
direction
addSinkClient:
addSourceClient:
startAUIOWithProperties:
stopAUIO
flushEventQueue:
stateRunningToSessionStarted
shouldResetAudioUnitWithProperties:
resetAUIOWithProperties:
_cleanupDeadClients
newAudioUnitPropertiesWithClient:
newAudioSessionMediaPropertiesWithClient:
objectAtIndexedSubscript:
stateIdleWithAudioUnitProperties:sessionProperties:client:newState:
stateSessionStartedWithAudioUnitProperties:sessionProperties:client:newState:
stateRunningWithAudioUnitProperties:sessionProperties:client:newState:
AVConferenceServiceError:detailCode:description:
addClient:
updateStateWithAudioIOClient:
removeClient:
didStop:error:
setCurrentAudioSessionMediaProperties:
processEventQueue:clientList:
pullAudioSamples:controllerTime:
pushAudioSamples:controllerTime:
currentAudioSessionMediaProperties
didSessionPause
didSessionResume
self
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
autorelease
retainCount
zone
superclass
debugDescription
startClient:
stopClient:
updateClient:
refreshInputMetering
refreshOutputMetering
pushAudioSamples:
pullAudioSamples:
didSessionStop
didSessionEnd
didSessionBeginQuietTime
didSessionEndQuietTime
didSessionSampleRateChange
getPreferredFormat:blockSize:vpOperatingMode:forOperatingMode:deviceRole:suggestedFormat:
setMicrophoneMuted:
setCurrentInputDevice:
setCurrentOutputDevice:
isGKVoiceChat
setIsGKVoiceChat:
isMicrophoneMuted
currentInputDevice
currentOutputDevice
isSpeakerPhoneEnabled
setSpeakerPhoneEnabled:
currentAudioUnitProperties
isInDaemon
setIsInDaemon:
_hAUIO
_dispatchQueue
_sourceEventQueue
_sinkEventQueue
_state
_currentAudioSessionMediaProperties
_currentAudioUnitProperties
_vpOperatingModeToAudioSessionMediaFormatMapping
_eventQueue
_allClients
_suspendedClients
_startingIOClients
_sourceClients
_sinkClients
_inputDevice
_outputDevice
_sourceBuffer
_isGKVoiceChat
_isMicrophoneMuted
_isInDaemon
_isInputMeteringEnabled
_isOutputMeteringEnabled
_isSpeakerPhoneEnabled
_isSuspended
_sinkData
_sourceData
_audioLimiter
initWithDelegate:dumpID:forSimulation:isUplink:reportingAgent:
initForSimulation:
initWithStatisticsCollector:
rateControlDumpEnabled
copy
rateControlLogEnabled
weakObjectHolderWithObject:
strong
configureInternal:
registerPeriodicTask
registerStatisticsChangeHandlerWithType:handler:
deregisterPeriodicTask
releaseLogDumpFiles
setPaused:
setVCStatistics:
getRealTimeStatsForServerBasedTxOnly:
getRealTimeStatsForServerBasedRxOnly:
getRealTimeStats:
periodicTask:
sharedEstimatedBandwidthUncapped
sharedRemoteEstimatedBandwidth
basebandExpectedQueuingDelay
basebandQueueDepth
basebandAverageBitrate
basebandTxBitrate
basebandFlushedVideoCount
basebandFlushedAudioCount
rateControlModeFromAVConferenceOperatingMode:
radioAccessTechnologyFromAVConferenceCellTech:isCellular:
configure:
minTierAboveBitrate:maxTierIndex:minTierIndex:
setEstimatedBandwidthCap:
setExpectedBitrate:
learntBitrateForSegment:defaultValue:
indicatorFromRadioTech:
initWithFormat:
maxTierBelowBitrate:maxTierIndex:minTierIndex:
setIsAudioOnly:
setMode:
createLogDumpFiles:
isRadioTechnologyOnCellular:
setAudioFractionTier:
resumeVideoByVCRateControl
setRadioAccessTechnology:
isRadioTechnologyOnWiFiOrLTE:
setIsSenderProbingEnabled:
configureAlgorithmWithRestart:
initialBitrateTierFromLearntBitrateWithLocalTechnology:remoteTech:defaultTier:
setDefaultAlgorithmConfiguration:
isAudioOnly
createVCRateControlAlgorithmWithConfiguration:
configure:restartRequired:
enableBasebandDump:
targetBitrate
rateChangeCounter
reportTargetBitrateChange:rateChangeCounter:
doRateControlWithStatistics:
doRateControlWithBasebandStatistics:
enableLogDump:enablePeriodicLogging:
setMediaController:
printFeedbackMessage:
actualBitrate
checkAndReportAbnormalSymptoms
isNewRateSentOut
setIsTargetBitrateStabilized:
reportNetworkStatistics
sharedEstimatedBandwidth
setLocalBandwidthEstimation:
roundTripTime
packetLossRate
printBasebandNotificationStatistics:
mostBurstLoss
owrd
isCongested
loadDefaultSettings
setTargetBitrate:
rateController:targetBitrateDidChange:rateChangeCounter:
rateControlForceTxCap
rateControlForceTxRate
rateControlForceRxCap
rateControlForceRxRate
UTF8String
audioFractionTier
isVideoStopped
isVideoStoppedByVCRateControl
basebandFlushCount
initWithDelegate:dumpID:isUplink:reportingAgent:
configureWithOperatingMode:isLocalCellular:localCellTech:isRemoteCellular:remoteCellTech:bitrateCapKbps:
setTargetBitrateCap:
createBasebandLogDumpFile
basebandCongestionDetector
setBasebandCongestionDetector:
feedbackController
setFeedbackController:
statisticsCollector
setStatisticsCollector:
mediaController
configuration
targetBitrateCap
estimatedBandwidthCap
expectedBitrate
isPaused
_rateControllerDelegate
_statisticsCollector
_feedbackController
_basebandCongestionDetector
_mediaController
_rateControlAlgorithm
_configuration
_targetBitrateCap
_estimatedBandwidthCap
_expectedBitrate
_actualBitrate
_targetBitrate
_rateChangeCounter
_roundTripTimeMilliseconds
_packetLossPercentage
_totalPacketsReceived
_totalPacketsSent
_totalBytesSent
_totalBytesReceived
_burstPacketLoss
_owrd
_isNetworkCongested
_logDump
_logFeedbackDump
_logBasebandDump
_isDumpFileEnabled
_dumpID
_isPeriodicLoggingEnabled
_isBasebandEnabled
_isForSimulation
_isUplink
_paused
_lastDefaultsReadTime
_forcedTargetBitrate
_forcedMaxBitrate
_reportingAgentWeak
_reportingModuleID
_lastReportFlushedVideoPacketCount
_lastReportFlushedAudioPacketCount
_isTargetBitrateOvershootReported
_lastTimeTargetBitrateOvershootRecorded
_isUnexpectedLowTargetBitrateReported
_lastTimeUnexpectedLowTargetBitrateRecorded
getRateControlFeedbackMessage:type:metaData:error:
translateRateControlFeedbackMessageFromData:
processRateControlFeedbackMessage:type:error:
objectForKeyedSubscript:
doubleValue
getVCStatisticsFeedbackMessage:time:
translateRateControlDataWithFeedbackMessage:
getVCStatisticsWithType:time:
dataWithBytes:length:
bytes
getFeedbackMessage:type:metaData:error:
processFeedbackMessage:type:metaData:error:
processRateControlProbingMessage:type:error:
translateAFRCFeedbackMessage:
translateMediaControlInfo:feedbackMessage:
detectOutOfOrderFeedbackMessage:
setPacketReceivedStatistics:
mode
maxBurstyLossCache
setMaxBurstyLossCache:
_mode
_feedbackMessageCount
_remoteTotalPacketReceivedCount
_isFeedbackReceived
_didRegisterPacketReceivedHandler
_maxBurstyLossCache
setSegments:
setObject:forKeyedSubscript:
numberWithBool:
initWithCapacity:
addSegments:
segmentsCount
clearSegments
segmentsAtIndex:
segmentsType
setIsLocal:
setHasIsLocal:
hasIsLocal
setIsFinal:
setHasIsFinal:
hasIsFinal
utteranceNumber
setUtteranceNumber:
updateNumber
setUpdateNumber:
isLocal
isFinal
segments
_segments
_updateNumber
_utteranceNumber
_isFinal
_isLocal
isAudioPaused
setAudioIsPaused:
isVideoPaused
setIsVideoPaused:
isAudioSending
setIsAudioSending:
capabilities
setCapabilities:
_audioIsPaused
_capabilities
_isVideoPaused
_isAudioSending
defaultCenter
handleGKSConnectivitySettingsUpdate:
addObserver:selector:name:object:
removeObserver:
updateGKSConnectivitySettings
initWithClientUUID:
initWithClientUUID:transportType:
refreshLoggingParameters
setShouldDisplayNetworkQualityGraph:
shouldDisplayNetworkQualityGraph
serverDied
registerBlockForService:block:
UUIDString
initWithUnsignedInt:
sendMessageSync:arguments:
boolValue
takeSnapshotForTask:
intValue
registerBlocksForVCNotifications
listenForNotifications
processInfo
processIdentifier
initWithClientPid:
setDelegate:
setTransportType:
initializeNewCallWithDeviceRole:
warmupForCall
setAudioSessionProperties:
startAudioSession
startAudioSessionWithCompletionHandler:
hasActiveAudioSession
stopListeningForNotifications
stopAllCalls:
cleanupManager
deregisterBlocksForVCNotifications
deregisterFromService:
useViceroyBlobFormat
setUseViceroyBlobFormat:
sendData:toCallID:encrypted:
newRandomParticipantID
inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:block:queue:caller:
callMetadataForCallID:
setPeerCN:callID:
setPeerReportingID:sessionID:callID:
setSessionID:callID:
networkQualityForCallID:
requiresWifi
setRequiresWifi:
length
startNetworkQualityUpdateTimer
startConnectionWithParticipantID:callID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:
startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:
startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:
startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:error:
stopCallID:
cancelCallID:
remoteCancelledCallID:
setCallReport:withReport:
setActive:
lastActiveCall
setLastActiveCall:
processRemoteIPChange:callID:
isOutputMeteringEnabled
setOutputMeteringEnabled:
setInputMeteringEnabled:
isInputFrequencyMeteringEnabled
setInputFrequencyMeteringEnabled:
isOutputFrequencyMeteringEnabled
setOutputFrequencyMeteringEnabled:
outputMeterLevel
getIsAudioPaused:callID:error:
getIsVideoPaused:callID:error:
inputMeterLevel
setInputDevice:
setOutputDevice:
networkQualityGraphLayer
networkQuality
setHidden:
setOpaque:
superlayer
bounds
setBackgroundColor:
setFrame:
setNeedsDisplay
networkQualityUpdateTimer
invalidate
updateNetworkQualityGraph
timerWithTimeInterval:target:selector:userInfo:repeats:
setNetworkQualityUpdateTimer:
mainRunLoop
addTimer:forMode:
localFramerateForCallID:
localBitrateForCallID:
remoteFramerateForCallID:
remoteBitrateForCallID:
localFrameHeight
localFrameWidth
remoteFrameSizeForCallID:
remotePacketLossRateForCallID:
localPacketLossRateForCallID:
roundTripTimeForCallID:
statsForCallID:
dictionaryWithDictionary:
setEnableSpeakerPhone:
natType
setPauseAudio:callID:error:
setPauseVideo:callID:error:
isAudioEnabled
isVideoEnabled
updateCapabilities:forCallID:
setServerAddresses:
AVConferencePreviewSingleton
localScreenAttributesForVideoAttributes:
setLocalScreenAttributes:
doBlockingConnectionCheck:
doBlockingConnectionCheck
conference:didStartSession:withCallID:error:
conference:didStartSession:withUserInfo:
initWithDictionary:
conference:didStopWithCallID:error:
conference:withCallID:isSendingAudio:error:
conference:withCallID:didPauseAudio:error:
conference:withCallID:didPauseVideo:error:
conference:didStopWithCallID:error:callMetadata:
conference:localIPChange:withCallID:
conference:withCallID:remoteMediaStalled:
conference:receivedFirstRemoteFrameForCallID:
camera
conference:remoteVideoAttributesChanged:callID:
conference:remoteAudioPaused:callID:
conference:remoteVideoPaused:callID:
conference:remoteScreenAttributesChanged:callID:
conference:updateInputFrequencyLevel:
conference:updateOutputFrequencyLevel:
conference:updateInputMeterLevel:
conference:updateOutputMeterLevel:
conference:isRemoteAudioBelowThreshold:
conference:inititiateRelayRequest:requestDict:
conference:sendRelayUpdate:updateDict:
conference:cancelRelayRequest:requestDict:
conference:videoQualityNotificationForCallID:isDegraded:isRemote:
conference:withCallID:networkHint:
conference:didReceiveARPLData:withCallID:
conference:didReceiveData:forCallID:
conference:didChangeLocalVariablesForCallID:
conference:remoteAudioEnabled:forCallID:
conference:localAudioEnabled:forCallID:error:
conference:remoteCallingModeChanged:forCallID:
conference:reinitializeCallForCallID:
conference:closeConnectionForCallID:
processRelayRequestResponse:responseDict:didOriginateRequest:
processRelayUpdate:updateDict:didOriginateRequest:
setConferenceState:forCallID:
setConferenceVisualRectangle:forCallID:
setPeerProtocolVersion:forCallID:
addressPointerFromBlob:
externalAddressForSelfConnectionBlob:
initializeNewCall
isUsingViceroyBlobFormat
setSetSessionID:forCallID:
addGKSCallEvent:sessionID:
sendARPLData:toCallID:
sendData:forCallID:encrypted:
inviteDictionaryForCallID:remoteInviteDictionary:nonCellularCandidateTimeout:block:queue:
setPeerReportingIdentifier:sessionIdentifier:forCallID:
convertBlobtoOldBlob:
convertBlobtoNewBlob:
startConnectionWithCallID:inviteData:isCaller:capabilities:destination:error:
startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:
startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:error:
sendProtobuf:withType:forCallID:
lastActiveCallID
setLastActiveCallID:
getIsSendingAudio:callID:error:
currentAudioInputDevice
currentAudioOutputDevice
setAudioInputDevice:
setAudioOutputDevice:
stopNetworkQualityUpdateTimer
remoteVideoLayer
remoteVideoBackLayer
setRemoteVideoLayer:
setRemoteVideoBackLayer:
videoStreamTokenForCallID:
remoteFrameHeightForCallID:
remoteFrameWidthForCallID:
setSendingAudio:callID:error:
capabilitiesForCallID:
setServerInfo:
videoConference:didStartSession:withCallID:error:
videoConference:didStartSession:withCallID:withUserInfo:error:
videoConference:didStopWithCallID:error:
videoConference:withCallID:isSendingAudio:error:
videoConference:withCallID:didPauseAudio:error:
videoConference:withCallID:didPauseVideo:error:
videoConference:didStopWithCallID:error:callMetadata:
videoConference:localIPChange:withCallID:
videoConference:remoteMediaStalled:callID:
videoConference:didReceiveFirstRemoteFrameForCallID:
videoConference:didRemoteVideoAttributesChange:forCallID:
videoConference:remoteAudioPaused:callID:
videoConference:remoteVideoPaused:callID:
videoConference:didRemoteScreenAttributesChange:forCallID:
videoConference:updateInputFrequencyLevel:
videoConference:updateOutputFrequencyLevel:
videoConference:updateInputMeterLevel:
videoConference:updateOutputMeterLevel:
videoConference:isRemoteAudioBelowThreshold:
videoConference:inititiateRelayRequest:requestDict:
videoConference:sendRelayUpdate:updateDict:
videoConference:cancelRelayRequest:requestDict:
videoConference:videoQualityNotificationForCallID:isDegraded:isRemote:
videoConference:withCallID:networkHint:
videoConference:didReceiveARPLData:forCallID:
videoConference:didReceiveData:forCallID:
videoConference:didChangeLocalVariablesForCallID:
videoConference:remoteAudioEnabled:forCallID:
videoConference:localAudioEnabled:forCallID:error:
videoConference:remoteCallingModeChanged:forCallID:
videoConference:reinitializeCallForCallID:
videoConference:closeConnectionForCallID:
processCancelRelayRequest:cancelDict:didOriginateRequest:
shouldSendBlackFrames:callID:
setNetworkQualityGraphLayer:
inputAudioPowerSpectrumToken
outputAudioPowerSpectrumToken
connection
opaqueConf
useServer
_delegate
serverBag
_isUsingFrontCamera
_microphoneMuted
_stateCacheForCallID
_stateQueue
_callbackQueue
_inputAudioPowerSpectrumToken
_outputAudioPowerSpectrumToken
shouldDisplayNetworkQualityGraph_
networkQualityUpdateTimer_
networkQualityGraphLayer_
unsignedIntValue
initWithDomain:code:userInfo:
integerValue
registerBlockForService:block:queue:
setCallState:forCallID:
callStateForCallID:
initWithEncodedDictionary:
registerBlockForService:block:queue:eventLogLevel:
floatValue
serverDiedForConference:
removeObjectForKey:
serverReconnected
cleanUp
cleanupHanningWindow
cleanupBinInterpolation
cleanupOctave2IndexTable
cleanupChannel:
appendFormat:
setupOctave2IndexTableWithBinCount:
setupBinInterpolationWithBinCount:
setupHanningWindow
setupChannel:
setupOctave2IndexTableForChannel:
setupFFTForChannel:
setupBinsForChannel:
cleanupBinsForChannel:
cleanupFFTForChannel:
cleanupOctave2IndexTableForChannel:
initWithFrequencyRange:
setupAudioPowerSpectrumWithBinCount:format:
computeSpectrumForChannelIndex:
didUpdateAudioPowerSpectrum:
setPowerLevel:
initWithBinCount:streamToken:delegate:
frequencyBinsForChannelIndex:
getNumChannels
frequencyRange
streamToken
_frequencyRange
_sampleRate
_fftSampleCount
_format
_sampleBuffer
_hanningWindow
_octave2IndexTable6
_octave2IndexTable6Count
_fftNormFactor
_channelSettings
_lerpIdxs
_outputBinCount
_powerSpectrumConfigured
_streamToken
initWithQueueSize:shouldBlockWhenFull:
processVCStatistics:
setMessageHandler:
start
stop
setEstimatedBandwidth:
addStatisticsMessage:
addStatisticsHistory:
computeOtherStatistics:
initWithInt:
addEntriesFromStatistics:
addStatsHistory:
computeBWEstimation:
recordRemoteEstimatedBandwidthForLargeFrameInfo:
updateLocalEstimatedBandwidth
computeOWRDEstimation:
addPacketLossInfo:
addActualBitrateInfo:
estimatedBandwidth
estimatedBandwidthUncapped
bandwidthEstimatorWithID:isProbingSequence:isEndOfProbingSequence:
calculateBandwidthEstimationForBandwidthSample:arrivalTime:
deregisterBandwidthEstimatorWithID:
calculateBandwidthEstimationAtTime:mediaTimestamp:mediaDataSize:probingSequence:probingSequenceID:
relativeSendTimeWithTimestamp:timestampRate:
relativeReceiveTimeWithTimestamp:timestampRate:
calculateOWRDWithSendTime:receiveTime:
getPacketLossRateAtTime:inMostRecentDuration:
getReceivingBitrateAtTime:inMostRecentDuration:
getSendingBitrateAtTime:inMostRecentDuration:
getServerStatsBitrateAtTime:inMostRecentDuration:
setStatistics:
getStatistics:
radioAccessTechnology
_statistics
_statisticsCollection
_statisticChangeHandlerDictionary
_bandwidthEstimatorMap
_owrdEstimator
_history
_queue
_radioAccessTechnology
_sharedEstimatedBandwidth
_sharedEstimatedBandwidthUncapped
_sharedRemoteEstimatedBandwidth
_statisticsCollectionLock
setMaxTierIndex:minTierIndex:
getDoubleValueForKey:defaultValue:
className
updatePacketLossRate:time:
shouldRampDown
rampDownTier
stateChange:
shouldRampUp
rampUpTier
calculateOWRDWithTimestamp:sampleRate:time:
stateExit
stateEnter
lossEventCount
lossEventCountThresholdForBitrate:
resetLossEventBuffer
doRateControlWithTime:roundTripTime:packetLossRate:operatingTierIndex:averageReceivedBitrate:
updateRTPReceiveWithTimestamp:sampleRate:time:
state
nowrd
nowrdShort
nowrdAcc
rateControlInterval
setRateControlInterval:
printRateControlFullInfoWithLogDump:time:videoStall:videoFrozenDuration:averageTargetBitrate:
_packetLossRate
_roundTripTime
_firstReceiveTime
_shortAverageLag
_longAverageLag
_firstSendTimestamp
_previousSendTimestamp
_previousTimestampDiff
_sendTimestampWrappedAround
_lossEventBuffer
_lossEventBufferIndex
_lastLossEventTime
_rampUpFrozenTime
_rampUpFrozenDuration
_rampDownOWRDThreshold
_rampDownLossRateThreshold
_rampDownLossEventBitrateThreshold
_rampDownLossEventCountThreshold
_rampUpNoLossEventDurationRatio
_rampUpStatusRateLimitedThreshold
_rampUpStatus
_rateControlTime
_averageReceivedBitrate
_currentTierIndex
_minTierIndex
_maxTierIndex
_rateControlInterval
numberWithFloat:
setSupportedPayloads:
setHasSupportedPayloads:
hasSupportedPayloads
supportedPayloads
_supportedPayloads
dataFromPropertyList:format:errorDescription:
propertyListFromData:mutabilityOption:format:errorDescription:
copyGKSDeepMutable
observer
clearRetries
tryNATCheckWithDelay:
drain
setObserver:
observer_
doesNotRecognizeSelector:
initWithOptions:
currentNATType
shouldTryNATCheck
registerForNetworkChanges
hasPrefix:
numberWithInt:
unsignedLongValue
setFlags:forInterface:isCached:isCachedKey:mask:
natTypeForCommNATFlags:isCarrier:
calculateSummmaryNATType:andCarrierNATType:andNonCarrierNATType:copyInterfaceInfoDictionary:
NATTypeDictionaryUpdated:
initWithObjectsAndKeys:
NATTypeDidChange:
reportNATType
getIPPortForService:
getClientOption:
standardUserDefaults
objectForKey:
getCachesDirectoryPath
createDirectory:
stringByAppendingString:
initWithContentsOfFile:
ensureNatCachePathExists
updateNatTypeCache_CachePlistScheme:
writeToFile:atomically:
copyNatTypeCachePlistScheme
copyNatTypeCache
date
earlierDate:
updateNatTypeCache:
nameForNetworkWithIPPort:interfaceName:
lookupCachedNATFlagsForNetwork:
setCommNATFlags:forInterface:isCached:
setTCPFlags:forInterface:isCached:
setSSLFlags:forInterface:isCached:
isEqualToString:
setValue:forKey:
callCommNATTestFromIPPort:ipv6Prefix:
cacheNATFlags:forNetwork:
getAddressForService:
callHTTPTestFromIPPort:ipv6Prefix:ToServer:isSSL:
allKeys
mutableCopy
triggerInterfaceChange
ipport
initWithPrefix:
ipv6Prefix
NATCheckWithIPPort:ipv6Prefix:useCache:
HTTPCheckWithIPPort:ipv6Prefix:useCache:
HTTPSCheckWithIPPort:ipv6Prefix:useCache:
getNATTypeFromCarrierBundle
removeObjectsForKeys:
arrayWithObjects:count:
allValues
copyNatTypeCache_OSXGamedScheme
updateNatTypeCache_OSXGamedScheme:
_dynamicStore
_xNATCheck
_lastReportedNATType
_lastReportedCarrierNATType
_lastReportedNonCarrierNATType
_interfaceInfoDictionary
_nonCarrierInterfacesOnly
_checkTCPAndSSL
_favorNonCarrier
_newCarrierType
_addInRangeFlag
_addCarrierFlag
_ignoreNatTypeCache
_ignoreCarrierBundle
_NATCheckRetryCount
_NATCheckRetryDelay
_currentNetworkNames
_natCheckQueue
_reportNATQueue
_natCheckGroup
_natCheckNetNameSema
_fNATCheckQueued
_fNATCheckInProgress
_sccontext
_hasNATCheckStarted
_hasNATCheckEnded
stringWithUTF8String:
micCallback
speakerCallback
setUsePacketThread:
setStartCompletionHandler:
setMicFormat:
setMicCallback:
setMicCallbackContext:
setSpeakerFormat:
setSpeakerCallback:
setSpeakerCallbackContext:
micFormat
speakerFormat
usePacketThread
micCallbackContext
speakerCallbackContext
destroyPacketThread
closeRecordings
createAudioBuffersWithIOBufferDuration:
getNSError:code:detailedCode:filePath:description:reason:
isInitialized
isEqualToRelayIO:
createPacketThreadWithIOBufferDuration:name:error:
createRecordingsWithName:
printStreamFormats
micBuffer
speakerBuffer
speakerTimestamp
setSpeakerTimestamp:
micTimestamp
setMicTimestamp:
startCompletionHandler
packetThread
micPowerRMS
setMicPowerRMS:
speakerPowerRMS
setSpeakerPowerRMS:
isRunning
_usePacketThread
_packetThread
_isRunning
_micTimestamp
_micFormat
_micCallback
_micCallbackContext
_micBuffer
_speakerTimestamp
_speakerFormat
_speakerCallback
_speakerCallbackContext
_speakerBuffer
_micPowerRMS
_speakerPowerRMS
_startCompletionHandler
stopClientIO
stopRemoteIO
destroyAudioConverters
canSetPropertyWithError:
setRemoteIO:
createAudioConvertersWithError:
setClientIO:
startRelayThreadWithError:
startPeriodicHealthPrint
startRelayIO:name:recordingsName:
stopRelayThread
stopRelayIO:
newAudioConverterWithInputFormat:outputFormat:withError:
IOBufferDuration
clientIO
blocksRelayedCount
clientUplinkPowerMovingAverage
clientDownlinkPowerMovingAverage
forwardSamplesFromIO:toIO:withConverter:
updateRealTimeStats
sleepTillTime:
setIOBufferDuration:withError:
setRemoteIO:withError:
setClientIO:withError:
startClientIO
startRemoteIO
rmsPowerOfBuffer:numSamples:
relayCallback
remoteIO
isRelayRunning
remoteToClientConverter
clientToRemoteConverter
periodicHealthPrintDispatchSource
_isRelayRunning
_IOBufferDuration
_relayThread
_wakeUpCondition
_wakeUpMutex
_clientToRemoteConverter
_remoteToClientConverter
_remoteIO
_clientIO
_relayLock
_clientIOLock
_remoteIOLock
_periodicHealthPrintDispatchSource
_blocksRelayedCount
_clientUplinkPowerMovingAverage
_clientDownlinkPowerMovingAverage
applyConfigurationUsingClientDict:
setReportingHierarchyToken:
initWithClientDictionary:
updateWithClientDictionary:
isContinuity
maxRemoteParticipants
setMaxRemoteParticipants:
sessionMode
setSessionMode:
reportingHierarchyToken
_maxRemoteParticipants
_sessionMode
_reportingHierarchyToken
setupAMRModesWithClientModeMask:
setupAMRWBModesWithClientModeMask:
setupEVSModesWithClientModeMask:
initWithCodecType:
isComfortNoise
setupModesWithClientModeMask:
setPreferredModeWithClientMode:
codecType
isDTXEnabled
setDtxEnabled:
preferredMode
setPreferredMode:
supportedModes
setSupportedModes:
isOctetAligned
setOctetAligned:
isDTMF
setDtmf:
networkPayload
setNetworkPayload:
evsChannelAwareOffset
setEvsChannelAwareOffset:
evsHeaderFullOnly
setEvsHeaderFullOnly:
_codecType
_dtxEnabled
_preferredMode
_supportedModes
_octetAligned
_dtmf
_networkPayload
_evsChannelAwareOffset
_evsHeaderFullOnly
initWithRTCPPacket:
packetType
SSRC
newPacketWithRTCPPacket:
setPacketType:
setSSRC:
_packetType
_SSRC
NTPMostSignificantWord
NTPLeastSignificantWord
RTPTimestamp
packetsSent
octetsSent
receiverReport
setNTPMostSignificantWord:
setNTPLeastSignificantWord:
setRTPTimestamp:
setPacketsSent:
setOctetsSent:
setReceiverReport:
_NTPMostSignificantWord
_NTPLeastSignificantWord
_RTPTimestamp
_packetsSent
_octetsSent
_receiverReport
reportedSourceSSRC
fractionLost
cumulativePacketsLost
extendedHighestSequenceNumber
interarrivalJitter
lastSRTimestamp
delaySinceLastSR
setReportedSourceSSRC:
setFractionLost:
setCumulativePacketsLost:
setExtendedHighestSequenceNumber:
setInterarrivalJitter:
setLastSRTimestamp:
setDelaySinceLastSR:
_reportedSourceSSRC
_fractionLost
_cumulativePacketsLost
_extendedHighestSequenceNumber
_interarrivalJitter
_lastSRTimestamp
_delaySinceLastSR
initWithBytes:length:encoding:
type
text
setType:
setText:
_type
_text
initWithCapacity:bytesPerFrame:
increaseCapacity:
store:numSamples:timestamp:
needsNewNumSamples:timestamp:
fetch:numSamples:timestamp:
ringBufRef
endTime
capacity
bytesPerFrame
copyGKSDeep
setIpport:
_ipport
_ipv6Prefix
postNotificationName:object:
addEntriesFromDictionary:
compare:
getKeepAliveTimeoutFromCarrierBundle
getAllSettings
initialize
setAddress:forService:
setClientOptions:
getCachedIPPort
supportsEVSCodec
supportsRedAudio
supportiRATRecommendation
getRateControllerType
getDecryptionTimeoutInterval
getNewSessionJoiningInterval
getAdaptiveLearningState
getShortTermHistoryLength
getLongTermHistoryLength
getAdaptiveLearningA
getAdjustmentFactorA
getShortTermValueWeightA
getLongTermValueWeightA
getAdaptiveLearningB
getAdjustmentFactorB
getShortTermValueWeightB
getLongTermValueWeightB
getAdjustmentFactorC
getShortTermValueWeightC
getLongTermValueWeightC
computeRedundancyInfo
updateRedundancyStrategyWithNetworkStatistics:
redundancyPercentage
redundancyInterval
_redundancyPercentage
_redundancyInterval
AVConferenceServiceError:detailedCode:returnCode:filePath:description:reason:
AVConferenceServiceError:detailedCode:filePath:description:reason:
getNSError:code:detailedCode:returnCode:filePath:description:reason:
calculateNOWRD:time:
OWRDList
_nowrd
_nowrdShort
_nowrdAcc
_nowrdRampDownThreshold
_nowrdRampUpThreshold
_nowrdAccRampDownThreshold
_nowrdAccRampUpThreshold
_rampDownStatus
_totalActualBitrate
_doRateControlCounter
_prevOperatingTierIndex
set_isCellUp:
set_isWifiUp:
interfaceListenerDelegate
_isWifiUp
_isCellUp
interfaceStateDidChangeWithWifiUp:cellUp:
stopChangeListener
hasConnectionWithWifi:cell:
networkStateDidChange
startChangeListener
startRoutingChangeListener
stopRoutingChangeListener
setInterfaceListenerDelegate:
_notificationMutex
_interfaceListenerDelegate
_notifyToken
_monitoringAvailable
componentsSeparatedByString:
configurationAsString:
StringAsConfiguration:
setConfiguration:
maxBandwidth
setMaxBandwidth:
_maxBandwidth
initWithResult:
initWithCallID:
setResult:
result
callID
setCallID:
isQueryAnswered
setIsQueryAnswered:
copyResultForCallID:
addResult:forCallID:
queryList
resCond
resMutex
initWithDelegate:bufferLength:dispatchQueue:
allocTransferSession
cleanupTransferSession
updateAudioBuffer:WithSample:timestamp:
setRemoteScreenAttributes:
ratio
writeToFileWithTimestamp:transactionID:URL:
errorWithDomain:code:userInfo:
setCompeletionHandler:forTransactionID:
setEndRTPTimestampWithTimestamp:
shouldFinishWritingSampleBuffer:RTPtimeStamp:
handlePendingRequestsWithSourceURL:error:
finishWritingWithHandler:
getCount
shouldAppendSampleBuffer:RTPtimeStamp:
appendSampleWithWriter:buffer:sample:
flushHistoryBuffers
getClosestSampleForTimestamp:
setupResizingSessionsWithVisibleRect:cameraStatusBit:
writeToLivePhotoToFileWithFrame:transactionID:URL:cameraStatusBits:
calculateVisibleAreaWithVisibleRect:cameraStatusBit:
setupBufferPool:width:height:
setStillImageTime:
getFilePathWithTransactionID:type:
fileURLWithPath:
defaultManager
copyItemAtURL:toURL:error:
rewriteMovieMetadataWithURL:transactionID:
handleSinglePendingRequestWithTransactionID:sourceURL:
handlePendingRequestWithError:
handlePendingRequestSuccessWithSourceURL:
updateBufferWithSample:timestamp:
flushBuffer
appendVideoSampleBuffer:cameraStatus:mediaType:
appendAudioSampleBuffer:mediaType:
historyBuffer:didDequeueSample:timestamp:
addLocalAudioSample:timestamp:
addRemoteAudioSample:timestamp:
addLocalVideoSampleBuffer:cameraStatusBits:timestamp:
updateRemoteScreenAttributes:
getPhotoWithTransactionID:Timestamp:completionHandler:
getLivePhotoWithTransactionID:timestamp:completionHandler:
startVideoRecording:timestamp:completionHandler:
endVideoRecording:timestamp:completionHandler:
cleanupActiveRequests
cancelRequestWithTransactionID:
setupStillImageWithTimestamp:transactionID:visibleRect:cameraStatusBit:
setupWriterWithTransactionID:filePath:stillImageTime:visibleRect:cameraStatusBit:
copyBuffer:
updateVideoBuffer:withPresentationTime:cameraStatusBits:timestamp:
updateCaptureSizesWithFirstFrame:
registerDirectoryWithFilePath:
remoteScreenAttributes
_writers
_writer
_masterTransactionID
_pendingRequests
_momentsQueue
_frameBuffer
_localAudioBuffer
_remoteAudioBuffer
_completionHandlers
_remoteScreenAttributes
_bufferPool
_copyPool
_transferSession
_copyTransferSession
_captureHeight
_captureWidth
_resize
_isFirstFrame
resetRampingStatus
resetOscillationDetection
logToDumpFilesWithString:
getDoubleTimeFromTimestamp:timestampTick:wrapAroundCounter:
calculateCongestionMetricsFromOWRD:time:
checkActualBitrates
checkBandwidthOvershoot
updateLossEvent:time:
checkPaused
checkCongestionStatus
stateChangeTo:
checkTargetBitrateOscillation
printRateControlInfoToLogDump
shouldRampDownDueToBaseband
rampDownTierDueToBaseband
shouldRampUpDueToBaseband
updateBasebandSuggestionWithStatistics:
recentlyGoAboveRampUpBandwidth
keepOvershootingRampDownBandwidth
updateLastEmergencyBasebandRampDownTimeWithTierIndex:
prepareOWRDList:time:
calculateNOWRDWithDuration:
updateRecentTierWindow
countDeviationChangeInTierWindow
totalPacketReceived
localBandwidthEstimation
_config
_pauseStartTime
_previousTimestamp
_timestampWrapAroundCounter
_rateControlCounter
_lastRateChangeCounter
_remoteBandwidthEstimation
_localBandwidthEstimation
_owrdList
_isOWRDListReady
_isOWRDConstant
_lastOWRDChangeTime
_lastCongestionTime
_lastRampUpTime
_isCongested
_isFirstTimestampArrived
_isNewRateSentOut
_actualSendBitrate
_isSendBitrateLimited
_lastLossEventRampDownTime
_lossEventCount
_isOvershoot
_belowNoRampUpBandwidth
_lastNoOvershootBWEstimationTime
_firstBelowNoRampUpBandwidthTime
_recentTierWindow
_recentTierWindowSize
_recentTierWindowIndex
_totalTierNumbersInWindow
_recentAverageTier
_lastTimeDetectNoOscillation
_isTargetBitrateOscillating
_deviationChangeCount
_totalPacketReceived
_totalPacketSent
_mostBurstLoss
_roundTripTimeTick
_averageRoundTripTime
_previousPacketLossRate
_basebandNotificationArrivalTime
_basebandAverageBitrate
_basebandTotalQueueDepth
_basebandExpectedQueuingDelay
_basebandNormalizedBDCD
_basebandNormalizedQueuingDelay
_isWaitingForBasebandRampDown
_lastBasebandRampDownTime
_lastHighNBDCDTime
_lastEmergencyBasebandRampDownTime
_basebandAdditionalTiersForRampUp
_previousTierIndex
sendCharacter:
sendText:
receiveDelegate
didReceiveText:
numberWithInteger:
defaultStreamConfig
defaultTransport
rtpHandle
isRedEnabled
numRedundantPayloads
txIntervalMin
initWithConfiguration:
rxPayloadMap
createTransport
configureWithStreamConfig:setupInfo:customRTCPPackets:error:
setupTextTransmitter
setupTextReceiverWithError:
sendControlPacket:
lastReceivedRTPPacketTime
lastReceivedRTCPPacketTime
setReceiveDelegate:
didReceiveCharacter:
onCallIDChanged
onConfigureStreamWithConfiguration:error:
onStartWithCompletionHandler:
onStopWithCompletionHandler:
onPauseWithCompletionHandler:
onResumeWithCompletionHandler:
onSendRTCPPacket
onRTPTimeout
onRTCPTimeout
rtcpHeartbeatLeeway
_textReceiver
_textTransmitter
_receiveDelegate
dataWithBytesNoCopy:length:freeWhenDone:
loopbackSocketTunnel:receivedData:from:
initWithPort:delegate:error:
sendPacketToVTP:
getIPPort:
getVTPIPPort:
setVTPIP:
shutdownSocket
serverLoopProc
optionalArg
setOptionalArg:
_port
sockFD
vtpSA
foundVTPIP
setAudioUnitModel:
setHasAudioUnitModel:
hasAudioUnitModel
rtpSSRC
setRtpSSRC:
audioUnitModel
supportFlags
setSupportFlags:
payloadFlags
setPayloadFlags:
secondaryFlags
setSecondaryFlags:
useSBR
setUseSBR:
_audioUnitModel
_payloadFlags
_rtpSSRC
_secondaryFlags
_supportFlags
_useSBR
weightFactor
budgetInCaptureFrames
addStream:
compareBudget:
setBudgetInCaptureFrames:
streams
setWeightFactor:
framePosition
setFramePosition:
_framePosition
_budgetInCaptureFrames
_weightFactor
_streams
reportRedundancyPercentage:redundancyInterval:
redundancyController:redundancyPercentageDidChange:
redundancyControlForceVideoRedundancyPercentage
initWithDelegate:statisticsCollector:mode:
statisticsID
setStatisticsID:
_redundancyControllerDelegate
_algorithm
_currentRedundancyPercentage
_forceRedundancyPercentage
_lastDefaultSettingLoadingTime
_statisticsID
setMapKey:
initWithBytes:bufferSize:
getUUIDBytes:
initWithUUIDBytes:
numberWithUnsignedChar:
stringValue
isMapped
mapKey
activeSize
initWithUUID:
setActiveSize:
newMKIWithBytes:bufferSize:
makeInvalidKey
initWithNSUUID:
fullKeyBytes:
mappedKeySize
mappedKeyBytes:size:
setMapping:
isValid
_MKI
_activeSize
_isMapped
_mapKey
initWithObject:
_weakObject
initWithSRTPInfo:
_SRTPInfo
forceDisableMessageEncryption
getKeyDerivationCryptoSet:withKeyMaterial:derivedSSRC:
updateEncryption:derivedSSRC:
setCurrentSendMKIWithKeyMaterial:
getBytes:length:
initializeSRTPInfo:
initializeEncryption
finalizeEncryption
updateEncryptionWithKeyMaterial:
encryptData:size:sequenceNumber:
decryptWithMKI:data:size:sequenceNumber:
videoSource
framerate
txMaxBitrate
txMinBitrate
videoResolution
sizeForVideoResolution:
recommendedMTU
initWithFrameWidth:frameHeight:frameRate:
generateKeyFrame
reportingParentID
enableCVO
cvoExtensionID
initVideoCompressionWithWidth:height:bitrate:keyFrameIntervalDuration:
gatherRealtimeStats:
forceKeyFrameProperties
isKeyFrame:
prependSPSPPS:dataPointer:
transmitEncodedVideoFrame:size:timestamp:hostTime:cameraStatusBits:
setLastKeyFrameSentTime:
reportingVideoStreamEvent:
transmitFrameInGroups:numOfPackets:timestamp:hostTime:cameraStatusBits:
transmitVideoPackets:packetSizes:startPacket:packetCount:lastGroup:timestamp:hostTime:cameraStatusBits:bytesSent:
recordDataWithSize:atTime:
updateMinMaxSinceTime:
bitrateKbps
maxFrameDurationMillis
setMaxFrameDurationMillis:
getBitrateKbpsSinceTime:
maxBitrateKbps
setMaxBitrateKbps:
minBitrateKbps
setMinBitrateKbps:
getFramerateSinceTime:
maxFramerate
setMaxFramerate:
minFramerate
setMinFramerate:
initWithConfig:
startVideo
stopVideo
enqueueVideoFrame:frameTime:droppedFrames:cameraStatusBits:
setTemporaryMaximumBitrate:
setKeyFrameOnlyStreamID:
setStreamIDs:numOfStreamIDs:repairedStreamIDs:numOfRepairedStreamIDs:
setFECRatio:
encodeVideoFrame:
transmitEncodedVideoFrame:cameraStatusBits:
handleActiveConnectionChange:
_videoRTP
_transmitterQueue
_encoderThread
_terminateEncoderThread
_bufferQueueSemaphore
_savedSampleBuffer
_bufferQueue
_buffer
_bufferSize
_packetBufferSize
_packetBuffer
_maxPacketCount
_packetSizes
_packetFlags
_lastKeyFrameSampleBufferSize
_iSMBCount
_keyFrameIntervalDuration
_recommendedMTU
_videoCodecType
_videoSource
_dwRefreshFrameCounter
_xMBs
_shouldGenerateKeyFrame
_stats
_reportingIntervalStartTime
_reportingLastUpdateTime
_lastCameraStatusBits
_enableCVO
_cvoExtensionID
_encoder
_encodingArgPool
initWithStreamToken:
isValidContext:
streamTokenFromClientContext:
initWithStreamToken:captionsSource:
newContext
removeContext:
captionsSource
clientContextList
_captionsSource
_clientContextList
deregisterBlocksForService
registerCaptionsEventDelegate:
AVConferenceXPCServerSingleton
sendMessageAsync:arguments:context:
initWithBool:
archivedDataWithRootObject:requiringSecureCoding:error:
notifyClientsWithStreamToken:service:arguments:
initWithUnsignedChar:
streamToken:didEnableCaptions:error:
streamToken:didDisableCaptions:error:
streamToken:didStartCaptioningWithReason:
streamToken:didStopCaptioningWithReason:
streamToken:didUpdateCaptions:
registerCaptionsSource:streamToken:
unregisterCaptionsSourceWithStreamToken:
captionsSourceFromClientContext:
registerBlocksForService
_streamTokenList
_connection
_xpcCommandQueue
orientation
cameraSwitching
videoSourceScreen
videoMirrored
sendMessageSync:
registerBlocksForNotifications
deregisterBlocksForNotifications
time
numberWithLongLong:
dictionaryWithObjects:forKeys:count:
sendMessageAsync:arguments:
initWithDelegate:
avcVideoFrameDidRelease:
setEffectType:
encodeProcessedVideoFrame:
effectType
_avConferenceEffectsQueue
_isEffectsApplied
_isFaceMeshTrackingEnabled
_effectType
initilizeStreamInfoMapWithStreamInfos:
newVideoStreamKeyFrameScheduleWithStreamIDs:
initWithStreams:captureFramerate:
framesPerIdrPeriod
pauseStreams
setWithArray:
minusSet:
resumeStreams
controller:didChangeActiveVideoStreams:
handleStreamsPendingKeyFrameGeneration
handleStreamsResetIDR
anchorStreamIDWithCappedVideoStreamIDs:
intersectSet:
allObjects
streamConfigs
multiwayConfig
idsStreamID
numberWithUnsignedShort:
shouldGenerateIDRWithStreamSchedule:
setPause:
videoStreamPendingKeyFrameGenerationWithStreamID:shouldRemoveFromPendingArray:
compoundStreamIDs
sendingStreamID
schedulerStreamWithVideoStream:
schedulerStreamWithKeyFrameInterval:framerate:weightFactor:
initWithVideoStreams:streamInfos:delegate:
setStreamIDsCell:
setStreamIDsWifi:
setPendingVideoStreams:
setCurrentFrameTime:
setIsLocalOnCellular:cappedVideoStreamIDs:
generateKeyFrameWithStreamID:
activeVideoStreams
pendingVideoStreams
captureFrameRate
setCaptureFrameRate:
streamIDsCell
streamIDsWifi
currentFrameTime
_startTime
_currentFrameTime
_videoStreams
_streamInfoMap
_activeVideoStreams
_streamToPause
_streamToResume
_streamScheduleWifi
_streamScheduleCell
_currentStreamSchedule
_pendingVideoStreams
_schedulerWifi
_schedulerCell
_pendingStreamsUpdated
_streamsPendingKeyFrameGeneration
_streamResetIDR
_streamIDsWifi
_streamIDsCell
_captureFrameRate
exceptionWithName:reason:userInfo:
isMatchedPacket:size:
isRTCPPayload:
isPayloadTypeMatched:
initWithIncomingSSRC:acceptPacketType:
setupAudioRulesWithSBR:isContinuity:
addAudioPayload:isSecondary:sbr:
initWithPayload:isSecondary:sbr:samplesPerBlock:
addAudioRule:
getForcedPayload
arrayByAddingObject:
forceAudioPayload
clearAudioRules
addAudioRules:
isSecondary
setAllowAudioSwitching:
setAacBlockSize:
initWithPhoneContinuity:allowAudioSwitching:sbr:aacBlockSize:
initPrimaryPayload:dtxPayload:redPayload:secondaryPayloads:allowAudioSwitching:sbr:aacBlockSize:
setRules:
isPayloadSupported:
rules
secondaryPayloads
allowAudioSwitching
aacBlockSize
_rules
_deviceRole
_allowAudioSwitching
_allowAudioRecording
_aacBlockSize
_secondaryPayloads
bitrateForAMRCodecMode:
bitrateForAMRWBCodecMode:
bitrateForEVSCodecMode:
codecTypeForPayload:
bitrateForCodecType:mode:
isUseCaseWatchContinuity:primaryPayload:
isPayloadSupportedInFaceTime:
sampleRateForPayload:
blockSizeForPayload:
canSetBitrateForPayload:
shouldUseCookieForPayload:
canBundleExternallyForPayload:forBundlingScheme:operatingMode:
internalBundleFactorForPayload:
shouldEnablePacketSizeLimitForPayload:
qualityForPayload:forBitrate:
payloadForCodecType:
supportsCodecRateModesForCodecType:
processInternalEvents
audioPowerSpectrumSinkDidRegister
audioPowerSpectrumSinkDidUnregister
initWithStreamToken:delegate:
registerAudioPowerSpectrumSink:
unregisterAudioPowerSpectrumSink:
_powerSpectrumSinks
_powerSpectrumSourceDelegate
_eventQueueAdd
_eventQueueRemove
unsignedIntegerValue
initWithBinCount:refreshRate:delegate:
meters
forceDisableAudioPowerSpectrumRegister
sources
registerNewAudioPowerSpectrumForStreamToken:spectrumSource:
audioPowerSpectrums
releaseAudioPowerSpectrumForStreamToken:
null
audioPowerSpectrumMeter:didUpdateAudioPowerSpectrums:
registerAudioPowerMeterSource:
unregisterAudioPowerSpectrumSourceForStreamToken:
_meters
_sources
audioRulesNegotiated
setAudioRulesNegotiated:
audioRules
setAudioRules:
_audioRules
_audioRulesNegotiated
initWithSocketDescriptor:token:error:
setupDatagramChannel:eventHandler:error:
removeDatagramChannel:
initWithDestination:token:error:
token
setReadHandler:
setEventHandler:
destination
addDatagramChannelWithDescriptor:eventHandler:error:
addDatagramChannelWithDestination:eventHandler:error:
executeBlockForToken:blockToExecute:
executeBlockForIDSDestination:blockToExecute:
readHandler
_stateLock
_nextToken
_readHandler
_datagramChannels
_destinations
initWithIntervalSeconds:callbackBlock:clientQueue:
callbackBlock
initWithIntervalSeconds:callbackBlock:
_callbackBlock
_timer
_intervalSeconds
_running
_clientQueue
audioTransmitter
currentAudioPayloadConfig
codecSampleRate
codecConfigurations
internalSampleRateForCodecType:
computePacketTimestampWithInputTimestamp:numSamples:hostTime:
shouldTransmitDTMFWithTimestamp:
isCurrentDTXEnabled
setCurrentDTXEnable:
sendingDTMFEventWithTimeStamp:interval:RTPHandle:
setInputTimestamp:packetTimestamp:hostTime:
syncSourceDelegate
updateSourcePlayoutSampleRTPTimestamp:systemTime:uuid:
momentsCollectorDelegate
stream:addAudioSampleBuffer:timestamp:
submitWRMReportWithJitterBufferMetrics:
vcMediaStream:remoteMediaStalled:
updateRemoteMediaStallState:
processPulledSamples:rtpTimestamp:
setupAudio:
config
codecTypeFromAudioPayload:
setRemoteCodecType:sampleRate:
startWithCompletionHandler:
stopWithCompletionHandler:
streamConfig
getSupportedPayloads
addAudioPayload:
preferredAudioBitrateForPayload:
setBitrate:
getCodecConfigForPayload:block:
forceEVSWideBand
numberWithDouble:
ptime
numberWithUnsignedLong:
initWithConfigDict:
configForPayloadType:
bundlingSchemeForOperatingMode:payloadType:
flags
streamStateToString:
updateSourceState:
initWithTransportSessionID:
setupAudioStreamWithClientPid:
initWithTransportSessionID:localSSRC:
setFrequencyMeteringEnabled:meterType:
remoteSSRC
regularExpressionWithPattern:options:error:
numberOfMatchesInString:options:range:
idsStreamId
enableMaxBitrateOnNoChangeCMR
participantId
sessionId
setReceiverPayloads
registerCodecRateModeChangeNotifications
registerActiveAudioStreamChangeNotifications
getPacketsPerBundleForStreamConfig:
setRtpHandle:
setControlInfoGenerator:
setAudioPayloads:
setChosenAudioPayload:
setChosenDTXPayload:
setInputFormat:
setAfrcHandle:
setUseRateControl:
setBundlingScheme:
setSupportsAdaptation:
setNeedsPacketThread:
setReportingParentID:
setPacketsPerBundle:
setTransmitROC:
setIgnoreSilence:
setChosenRedPayloadType:
setRedEnabled:
setIncludeRedSequenceOffset:
setRedNumPayloads:
setRedMaxDelay20ms:
setStreamIDs:
setTierNetworkBitrate:
maxIDSStreamIdCount
setMaxIDSStreamIdCount:
supportedNumRedundantPayload
setSupportedNumRedundantPayload:
setSendActiveVoiceOnly:
sendDTMFEvent:atTimestamp:withSampleRate:
stopDTMFEvent
arrayWithObjects:
supportedAudioPayloads
computeWithSampleBuffer:
vcMediaStream:updateFrequencyLevel:isInputMeter:
isLatencySensitiveMode
setMuted:
generateReceptionReportList:reportCount:
setStreamDirection:
audioIODirectionWithMediaStreamDirection:
setDirection:
setWRMCallId:
audioStreamMode
initWithDelegate:handle:callId:localSSRC:enableNetworkMonitor:
setAudioTransmitter:
createReportSSRCListWithStreamConfigs:
validateAudioStreamConfigurations:
cleanupBeforeReconfigure:
operatingModeForAudioStreamMode:
getReportingClientType
getReportingClientName
getReportingServiceID
getClientSpecificUserInfo:
_computeInternalFormatForAudioConfig:
isRTPTimeoutEnabled
isRTCPTimeoutEnabled
setThrottlingInterval:
setupPayloads
setDTXPayload:
initWithOperatingMode:deviceRole:direction:allowAudioRecording:delegate:clientPid:
reconfigureWithOperatingMode:deviceRole:direction:allowAudioRecording:
setAudioIO:
setClientFormat:
createAudioReceiver
isSendingMedia
streamIDsFromTransport
createAudioTransmitter:streamIDs:
prepareAudio
cleanupAudio
bitrate
notifyCTCurrentAudioPayload:mode:bitrate:
startAudioWithCompletionHandler:
reportingAudioStreamEvent:
audioTxBitrate
resetPayloadMapping
stopAudioWithCompletionHandler:
reset
audioBundler
resetBuffer
isEqualToNumber:
unsignedShortValue
componentsJoinedByString:
redNumPayloads
redMaxDelay20ms
pullDecodedMeshMode:
updateSoundMeter:sampleBuffer:
captureMeshMode:
setIsValid:
updateSourceNTPTime:withRTPTimeStamp:
handleCodecRateModeChange:withBitrate:
setRtpTimeOutEnabled:
setRtcpTimeOutEnabled:
vcMediaStreamDidInterruptionBegin:
vcMediaStreamDidInterruptionEnd:
collectRxChannelMetrics:
currentChannelMetrics
localCellTech
remoteCellTech
setSyncSourceDelegate:
getSyncSourceSampleRate
didSuspendAudioIO:
didResumeAudioIO:
setState:
initWithClientPid:ssrc:
initWithClientPid:ssrc:transportSessionID:
sendDTMFEvent:
stopSendDTMFEvent
isFrequencyMeteringEnabled:
isMuted
sendActiveVoiceOnly
setStreamIDs:repairStreamIDs:
setTargetStreamID:
canProcessAudio
setCanProcessAudio:
vcMediaStreamTransport:updateSourceNTPTime:rtpTimeStamp:
unregisterCodecRateModeChangeNotifications
handleCodecRateModeChange:payload:
collectRxChannelMetrics:interval:
collectTxChannelMetrics:
conferenceID
audioIO
isRemoteMuted
setRemoteMuted:
targetStreamID
volume
setVolume:
_clientPid
numBufferBytesAvailable
pausedAudioHeartBeat
dAudioHostTime
lastVoiceActive
lastInputAudioTimeStamp
lastSentAudioSampleTime
awdTime
sampleRate
stateLock
audioPayloads
vpioFormat
preferredAudioCodec
dtmfEventHandler
wrmClient
currentAudioPayload
currentDTXPayload
_audioReceiver
_audioTransmitter
_telephonyInterface
soundMeter
_audioMediaControlInfoGenerator
_audioIO
_isMuted
_isRemoteMuted
_lastRTPTimestamp
_reportingSSRCList
_reportingSSRCCount
_sendActiveVoiceOnly
_isRemoteMediaStalled
_packetsSinceStallCount
_lastReceivedAudioTimestamp
_currentDTXEnable
_targetStreamID
_volume
_rtpEnabledBeforeInterrupt
_rtcpEnabledBeforeInterrupt
_pullAudioSamplesCount
vcMediaStream:didSwitchToAudioStreamWithID:
initWithService:
datagramChannelWithDestination:error:
sharedIDSService
datagramChannelForSessionDestination:error:
datagramChannelForSocketDescriptor:error:
setReadHandlerWithOptions:
readyToRead
osChannelInfoLog
writeDatagram:datagramSize:datagramInfo:options:completionHandler:
writeDatagrams:datagramsSize:datagramsInfo:datagramsCount:options:completionHandler:
setChannelPreferences:
requestSessionInfoWithOptions:
setupDriverSocket
defaultLink
connectedLinks
underlyingFileDescriptor
optInStreamIDs:
optOutStreamIDs:
_token
_idsChannel
_destination
_driverSocket
_eventHandler
linkID
serverStatsSizeInByteForUplink:connection:
networkOverheadInBytesWithNumOfStreamId:isPriorityIncluded:
updateSessionStats:connection:totalPacketSent:totalPacketReceived:
getLocalStats:localSessionStats:
getMostRecentLocalStats
_stateRWLock
_localStats
_currentLocalStatsIndex
_uplinkServerStatsByteUsed
detectOutOfOrderAndSpikeWithSendTimestamp:
detectOutOfOrderAndSpikeWithReceiveTimestamp:
resetOWRDEstimation
_previousSendTimestampDiff
_firstSendTime
_firstReceiveTimestamp
_previousReceiveTimestamp
_previousReceiveTimestampDiff
_receiveTimestampWrappedAround
_sendTimestampSpikeDetected
_receiveTimestampSpikeDetected
_averageSendInterval
_averageReceiveInterval
getValue:
value:withObjCType:
getCustomRootQueueWithPriority:isFixedPriority:
_lock
_rootQueues
dequeueOneFrame
getUpdatedTimestampWithTimestamp:
enqueueWithSample:timestamp:
removeObjectAtIndex:
_bufferLength
_timestampQueue
_sampleMap
_lastTimestamp
code
domain
userInfo
addNSError:toXPCArgumentDictionary:
numberWithChar:
setLocalParticipantInfo:networkSockets:withError:
initWithMode:clientPid:
textStreamWithStreamToken:
initWithSendDelegate:clientPid:delegate:delegateQueue:
setStreamConfig:withError:
startSynchronization:
stopSynchronization
setMomentsCollectorDelegate:
updateVideoConfig:
setRtcpEnabled:
setRtpTimeOutInterval:
setRtcpTimeOutInterval:
setRtcpSendInterval:
requestLastDecodedFrame
vcMediaStream:didStartStream:error:
vcMediaStreamDidStop:
vcMediaStream:didPauseStream:error:
vcMediaStream:didResumeStream:error:
vcMediaStreamDidRTPTimeOut:
vcMediaStreamDidRTCPTimeOut:
vcMediaStream:didReceiveRTCPPackets:
vcMediaStreamDidDecryptionTimeOut:
vcMediaStream:didReceiveDTMFEventWithDigit:
vcMediaStream:didReceiveTTYCharacter:
vcMediaStream:didReceiveText:
vcMediaStream:downlinkQualityDidChange:
vcMediaStream:uplinkQualityDidChange:
vcMediaStream:didUpdateVideoConfiguration:error:dictionary:
vcMediaStream:priorityDidChange:
vcMediaStream:didReceiveFirstVideoFrameWithTime:
vcMediaStream:didSwitchFromStreamID:toStreamID:
vcMediaStream:requestKeyFrameGenerationWithStreamID:
pauseStreams:
streamArray
xpcQueue
_vcMomentsCollectorDictionary
initWithFrameWidth:frameHeight:frameRate:payload:priority:
iWidth
iHeight
fRate
iPayload
fPref
setFrameWidth:frameHeight:frameRate:
initWithFrameWidth:frameHeight:frameRate:payload:
compareByPref:
setToVideoRule:
setFPref:
_width
_height
_priority
_rampDownPacketLossRate
_rampDownRoundTripTime
_rampUpPacketLossRate
initWithConnectionResult:type:
connectionResult
priority
waitToBeNominated
isLocalOnWiFi
isRemoteOnWiFi
isRelay
ipportToString:
relayChannelNumber
isLocalOnCellular
isRemoteOnCellular
isRemoteIPPort:
isSameAsConnection:
isOnSameInterfacesWithConnection:
getSourceDestinationInfo:
matchesSourceDestinationInfo:
isIPv6
connectionMTU
setConnectionMTU:
connectionId
isVPN
serverIsDegraded
connectionUUID
localConnectionType
remoteConnectionType
setLocalCellTech:
setRemoteCellTech:
setPriority:
localInterfaceTypeString
remoteInterfaceTypeString
uplinkBitrateCap
setUplinkBitrateCap:
downlinkBitrateCap
setDownlinkBitrateCap:
initWithCandidatePair:
isLocalIPPort:
isOnSameIPPortWithConnection:
isUpgraded
isReplaceOnly
cellularMTU
setWaitToBeNominated:
_waitToBeNominated
_connectionResult
defaultVideoConferenceManager
SIPHandle
messageReceivedDelegate
controlChannel:receivedMessage:transactionID:fromParticipant:
sendReliableMessageAndWait:
controlChannel:sendReliableMessage:didSucceed:toParticipant:
initWithCallID:reportingAgent:
sendReliableMessage:
_callID
_SIPHandle
setTransportDelegate:
processRemotePhotoRequest:
processRemoteVideoRequest:
processRemoteLivePhotoRequest:
deviceHasSufficientFreeSpace
updateVCMomentsMode
transportDelegate
moments:shouldProcessRequest:
processRequest:
momentsDelegate
streamTokenDidCleanupAllRequests:
isHistorySupported
handleInsufficientFreeSpaceWithRequest:delegate:
streamToken:didStartProcessingRequest:error:
URLByDeletingLastPathComponent
streamToken:didEndProcessingRequest:URL:error:
directorySize:
notifyRemoteFinishWithRequest:didSucceed:fileSize:
streamToken:didFinishRequest:didSucceed:
validateNumberOfRequestsWithError:
notifyFinishWithRequest:didSucceed:fileSize:
notifyLocalFinishWithRequest:didSucceed:
numberWithLong:
getMomentsCapabilities
path
subpathsOfDirectoryAtPath:error:
objectEnumerator
nextObject
stringByAppendingPathComponent:
attributesOfItemAtPath:error:
fileSize
deviceFreeDiskSpace
attributesOfFileSystemForPath:error:
setMomentsDelegate:
processClientRequest:error:
registerClient
deregisterClient
getInitialRemoteScreenAttributes:
isClientRegistered
_transportDelegate
_momentsHistory
delegateNotificationQueue
_currentActiveRequestsCount
_isClientRegistered
_requests
_lastRequest
redPayloadDescription:
redundantPayloadsDescription:
resetOutputPayload:
pointerAtIndex:
timestampOffsetFor20msBlocks:
isPayloadTimestampWithinThreshold:forTimestamp:
setCount:
nearestRedPayloadForTimestamp:
redundantPayloads:containsPointer:
addPointer:
stringWithString:
appendString:
selectRedPayloadsForPrimaryPayload:
buildRedPayloadWithPrimaryPayload:redPayloads:
payloadHistoryDescription
redOverheadForNumPayloads:
redPayloadForPrimaryPayload:
updatePayloadHistory:
initWithRedPayloadType:sampleRate:numPayloads:maxDelay:includeSequenceOffset:
getPrimaryPayloadWithBuffer:length:payloadType:timestamp:priority:
maxDelay
setMaxDelay:
numPayloads
setNumPayloads:
redPayloadType
_redPayloadType
_numPayloads
_maxDelay
_includeSequenceOffset
_latestPrimaryPayload
_selectedRedPayloads
_redPayloadToSend
_redPayloadBufferToSend
_payloadHistory
_payloadHistoryCount
_payloadBufferHistory
_payloadBufferHistoryIndex
initWithString:
SDPUsername
addMediaLine:mediaType:
parseSDPFromString:
initWithUnsignedInteger:
addPayload:rtpMap:formatParameters:
getMediaLineForType:
setPayload:mediaLine:
composeSessionString
composeAudioString
sortedArrayUsingSelector:
mediaTypeToString:
payloads
string
createVideoImageAttr:direction:dimensions:count:
fillImageStruct:imageStruct:
videoImageAttributes:
getVideoSendImages:
sortUsingFunction:context:
supportImage:width:height:rate:
getVideoRecvImages:
setVideoPayloads:count:
toStringWithVideoEnabled:
setBasebandCodecType:sampleRate:
getBasebandCodecType:sampleRate:
getNegotiatedResolutionForPayload:forInterface:withRule:direction:result:remoteSupportsHD:screenSharing:
origin
setOrigin:
secondaryAudioPayloads
sessionIP
setSessionIP:
audioRTPPort
setAudioRTPPort:
audioRTCPPort
setAudioRTCPPort:
audioRTPID
setAudioRTPID:
allowRTCPFB
setAllowRTCPFB:
answerBandwidth
setAnswerBandwidth:
allowsDynamicMaxBitrate
setAllowsDynamicMaxBitrate:
featuresListDict
setFeaturesListDict:
allowsContentsChangeWithAspectPreservation
setAllowsContentsChangeWithAspectPreservation:
_sdpUsername
_audioParameters
videoRTPID
basebandCodecType
basebandCodecSampleRate
_mediaLines
composeBandwidthString
composeFLSString
enumerateKeysAndObjectsUsingBlock:
addObjectsFromArray:
audioRecordingEnabled
composeAudioFMTPForPayload:
fieldValue
parseMediaLineHeader:mediaType:supportedPayloads:rtpPort:
nextLine
initWithParser:rtpPort:payloads:
parsingDone
fieldType
parseAudioMediaAttributes:
parseIP:
parseBandwidth:
parseMediaLine:
parseSessionAttributes:
rangeOfString:
substringFromIndex:
substringToIndex:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
caseInsensitiveCompare:
parseRTPID:
parseRTCPPort:
parseAudioFormatAttribute:
attributes
addAttribute:
rulesFramerate:
rulesImageSizeForExternalPayload:pWidth:pHeight:
setUseSbr:blockSize:forAACFormat:
getUseSbr:blockSize:forAACFormat:
setVideoRTCPFB:useNACK:
startTime
setStartTime:
lastProbingSequenceTimeExpect
setLastProbingSequenceTimeExpect:
lastProbingSequenceTimeActual
setLastProbingSequenceTimeActual:
largeFrameSizeRequested
setLargeFrameSizeRequested:
largeFrameSizeAtCurrentBandwidth
setLargeFrameSizeAtCurrentBandwidth:
probingSequencePacketSize
setProbingSequencePacketSize:
probingSequencePacketCount
setProbingSequencePacketCount:
probingSequenceCount
setProbingSequenceCount:
totalLargeFrameWaste
setTotalLargeFrameWaste:
isLastFrameProbingSequence
setIsLastFrameProbingSequence:
isLargeFrameRequestDisabled
setIsLargeFrameRequestDisabled:
probingInterval
isRTPFlushBasebandFromVCRateControl
decreaseFlushCount:
setBasebandFlushCount:
increaseFlushCountForVideoRefresh:transactionID:
recordVideoRefreshFrameWithTimestamp:payloadType:packetCount:isKeyFrame:
increaseBasebandFlushCountInternallyWithSuggestion:
mediaController:mediaSuggestionDidChange:
isProbingLargeFrameRequiredAtTime:
updateLargeFrameSizeWithBandwidth:
scheduleProbingSequenceAtTime:
printLargeFrameStatsAtTime:timeSinceLastProbingSequence:frameSize:wastedBytes:isFrameRequested:
updateProbingLargeFrameSizeCap
initWithMediaQueue:delegate:
enableBasebandLogDump:
getMediaQueueInVideoBitrate:outVideoBitrate:inAudioBitrate:outAudioBitrate:
getMediaQueueRateChangeCounter:rateChangeTime:
computePacketLossWithTimestamp:totalRemoteReceivedPackets:packetBurstLoss:packetLossRate:mostBurstLoss:
pauseVideoByUser:
stopVideoByVCRateControl
didMediaGetFlushedWithPayloadType:transactionID:packetDropped:sequenceNumberArray:
setAudioSendingBitrate:
rampDownAudioFraction
rampUpAudioFraction
probingLargeFrameSize
scheduleProbingSequenceWithFrameSize:paddingBytes:isProbingSequenceScheduled:
videoSendingBitrate
setVideoSendingBitrate:
audioSendingBitrate
minTargetBitrate
setMinTargetBitrate:
isSenderProbingEnabled
isInThrottlingMode
isRateLimitedMaxTimeExceeded
setIsRateLimitedMaxTimeExceeded:
shouldDisableLargeFrameRequestsWhenInitialRampUp
setShouldDisableLargeFrameRequestsWhenInitialRampUp:
afrcRemoteEstimatedBandwidth
setAfrcRemoteEstimatedBandwidth:
setIsRTPFlushBasebandFromVCRateControl:
lastVideoKeyFrameTime
_mediaControllerDelegate
_hMediaQueue
_videoSendingBitrate
_audioSendingBitrate
_minTargetBitrate
_isVideoStoppedByVCRateControl
_isVideoStoppedByBaseband
_isVideoPausedByUser
_isAudioOnly
_isBasebandFlushing
_isAudioStall
_isInThrottlingMode
_audioFractionTier
_lastAudioFractionChangeTime
_lastAudioEnoughRateTime
_videoPayloadType
_videoTransactionID
_videoRefreshFrameTimestamp
_videoRefreshFramePacketCount
_lastVideoKeyFrameTime
_senderLargeFrameInfo
_probingLargeFrameSize
_probingLargeFrameSizeCap
_probingSequencePacketSize
_probingSequencePacketCount
_shouldDisableLargeFrameRequestsWhenInitialRampUp
_isRateLimitedMaxTimeExceeded
_isSenderProbingEnabled
_basebandFlushCount
_basebandFlushedVideoCount
_basebandFlushedAudioCount
_lastBasebandFlushAudioTime
_lastBasebandFlushVideoTime
_videoFlushTransactionID
_audioStallBitrate
_lastAudioStallFlushTime
_isRTPFlushBasebandFromVCRateControl
_basebandFlushableQueueDepth
_basebandNBDCD
_lastBasebandHighNBDCDTime
_isBasebandQueuingDelayHigh
_afrcRemoteEstimatedBandwidth
computeBasePeriod
computeCaptureFramerate
computeGroupList
computeSchedulerItemList
computeSchedulerItemsBudget
computeSchedulerItemsPosition
computeStreamsIDRPosition
realignStreams
computeGcdForX:y:
initWithPeriodCount:framesPerBasePeriod:
computeScheduleItemList
placeRemainingItems:placedItems:leftItem:rightItem:
basePeriodMs
captureFramerate
_schedulerGroups
_schedulerItems
_basePeriodMs
_framesPerBasePeriod
_captureFramerate
shouldNominateCandidatePairInternal:interfaceMask:nominated:demote:connectionPriority:replaceOnly:
shouldNominateConnection:
isBetterConnection:asPrimary:
nominateConnection:asPrimary:interfaceMask:demote:connectionPriority:replaceOnly:
getPrimaryConnectionToBeCompared
primaryConnection
secondaryConnection
pendingPrimaryConnection
pendingSecondaryConnection
setPendingPrimaryConnection:
lastPrimaryConnectionInUse
useConnectionAsPrimary:
setSecondaryConnection:
setPendingSecondaryConnection:
getNumberOfConnectionsInternal
primaryConnectionChanged:oldPrimaryConnection:
connectionCallback:isInitialConnection:
setDuplicationEnabledInternal:
reportConnection:isInitialConnection:
removeConnectionWithIPPort:isLocalInterface:
removeConnectionWithIPPortInternal:isLocalInterface:
setPrimaryConnection:
promoteSecondaryConnectionToPrimary:
isOptimalConnection:asPrimary:interfaceMask:
updateStateWithCurrentConnection:asPrimary:interfaceMask:demote:replaceOnly:
getSecondaryConnectionToBeCompared
shouldNominateCandidatePair:interfaceMask:nominated:demote:connectionPriority:replaceOnly:
addConnection:
removeConnection:
updateCellularMTU:
updateCellularTech:forLocalInterface:
sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:
shouldAcceptDataFromSourceDestinationInfo:
copyConnectionWithSourceDestinationInfo:isPrimary:
updateSessionStats:
updatePacketCountAndByteCountWithIndex:packetSize:numOfStreamId:isPriorityIncluded:isOutgoing:
synchronizeParticipantGenerationCounter:
getPacketCountWithIndex:isOutgoing:
getByteCountWithIndex:isOutgoing:
shouldHandoverWhenUpdateWRMDuplication:
relayConnectionID
setRelayConnectionID:
_pendingPrimaryConnection
_pendingSecondaryConnection
_validConnections
_relayConnectionID
initWithPixelBuffer:time:imageData:
initWithPixelBuffer:depthPixelBuffer:time:imageData:delegate:
setDepthPixelBuffer:
setPixelBuffer:
pixelBuffer
setTime:
imageData
setImageData:
effectsMetadata
setEffectsMetadata:
renderProcessTime
setRenderProcessTime:
depthPixelBuffer
_pixelBuffer
_depthPixelBuffer
_time
_imageData
_effectsMetadata
_renderProcessTime
transportSessionID
dictionaryWithObjectsAndKeys:
dictionaryWithCapacity:
participantForID:
participantVideoToken
idsParticipantID
initWithIDSDestination:configurationDict:delegate:processId:
sessions
uuid
localParticipant
opaqueData
removeParticipant:
updateConfiguration:
setWithCapacity:
participantConfigFromXPCDictionary:
addParticipantConfigurations:processID:
VCSessionParticipantErrorEvent:errorPath:
setAudioPosition:
setAudioEnabled:
setVideoEnabled:
setAudioPaused:
setVideoPaused:
setUuid:
setVideoQuality:
setVisibilityIndex:
setProminenceIndex:
updateParticipantConfigurations:
unsignedLongLongValue
setIdsParticipantID:
setParticipantData:
setAudioMuted:
vcSession:didStart:error:
vcSession:didStopWithError:
vcSession:addParticipantWithID:didSucceed:error:
vcSession:removeParticipantWithID:didSucceed:error:
vcSession:updateConfiguration:didSucceed:error:
vcSession:participantID:audioEnabled:didSucceed:error:
vcSession:participantID:videoEnabled:didSucceed:error:
vcSession:participantID:remoteAudioEnabledDidChange:
vcSession:participantID:remoteVideoEnabledDidChange:
vcSession:participantID:audioPaused:didSucceed:error:
vcSession:participantID:videoPaused:didSucceed:error:
vcSession:participantID:remoteAudioPausedDidChange:
vcSession:participantID:remoteVideoPausedDidChange:
vcSession:participantID:didChangeProminence:description:
vcSession:participantID:didDetectError:
sessionForUUID:
sessionForStreamToken:
_sessions
initWithType:
addBandwidthAllocationTableEntry:
generate
_assignCurrentTables
videoEntries
isEnabled
setEnabled:
_isAvailableStreamConfiguration:
_audioEntriesForTargetBitrate:
_videoEntriesForTargetBitrate:ignorePausedOnDemandStreams:
hasRepairStreamID
repairStreamID
aggregatedAudioVideoTableWithRedundancy
aggregatedAudioOnlyTableWithRedundancy
aggregatedAudioVideoTable
aggregatedAudioOnlyTable
addBandwidthAllocationTableEntry:updateNow:
setRedundancyEnabled:
isRedundancyEnabled
enableVideoStream:streamID:
audioStreamIDsforTargetBitrate:
videoStreamIDsforTargetBitrate:ignorePausedOnDemandStreams:
audioRepairStreamIDsforTargetBitrate:
videoRepairStreamIDsforTargetBitrate:ignorePausedOnDemandStreams:
videoRepairStreamIDsForStreamIDs
audioRepairStreamIDsForStreamIDs
_table
_currentTable
_videoEnabled
_redundancyEnabled
newControlInfo
newControlInfoWithBuffer:length:optionalControlInfo:
newControlInfoFromPool
initWithBuffer:length:optionalControlInfo:
configureWithBuffer:length:optionalControlInfo:
disposeControlInfo:
registerFillBlobCallback:processBlobCallback:context:
deregisterCallbacksWithContext:
newMediaControlInfo
newMediaControlInfoWithBuffer:length:optionalControlInfo:
_callbacksDict
_controlInfoPool
_controlInfoPoolLock
checkNumChannels:
applyChannelBins:channelID:
processOutput
_audioSpectrumBinCount
_audioSpectrumRefreshRate
_lastDeliveryTime
_isProcessingOutput
_audioPowerSpectrums
_outputPowerSpectrums
_streamTokenRemovedEventQueue
_streamTokenAddedEventQueue
initWithStreamToken:messenger:
messenger
_messenger
messengerFromClientContext:
newRequestWithArguments:state:
fileSystemRepresentation
registerMomentsMessenger:withStreamToken:
unregisterMomentsMessengerWithStreamToken:
stream:addVideoSampleBuffer:cameraStatusBits:timestamp:
_moments
forceAudioPowerTimeInterval
forceAudioPowerThreshold
vcAudioPowerLevelMonitor:isAudioBelowThreshold:
detectRemoteAveragePowerLevel:timestamp:
startDetectRemoteAudioLowPowerTime
audioPowerThreshold
audioLowPowerTimeInterval
isAudioPowerBelowThreshold
isAudioPowerMovingAverage
audioPowerMovingAverageCoefficient
currentAudioAverage
initWithRTPHandle:reportingAgent:receiverStats:dumpID:reportingParentID:
enable2vuyCapture
stopNetworkReceiveThread
teardownDecodeSession:
setEnableRateAdaptation:maxBitrate:minBitrate:adaptationInterval:
startNetworkReceiveThread
setSyncSource:
initWithSourceSampleRate:destinationSampleRate:
syncSource
handleAlarmForTimeStamp:
setDestinationAlarmHandler:
processVideoRTP
processVideoRTCP
updateVideoStallStatus:
scheduleDecodeForFrameWithBuffer:size:timestamp:hostTime:showFrame:
scheduleDecodeForTimestamp:
scheduleVideoDecode:schedule_n:
updateSequenceNumber:
runVideoStreamRateAdaptation
operatingBitrate
sendTmmbrBitrate
isOperatingAtMaxBitrate
isOperatingAtMinBitrate
vcVideoReceiver:downlinkQualityDidChange:
setRoundTripTime:
processReceptionReportBlock:arrivalNTPTime:
updateDestinationNTPTime:withRTPTimeStamp:
vcVideoReceiver:receivedTMMBR:
receivedTMMBN:
vcVideoReceiverRequestKeyFrame:rtcpPSFBType:
scheduleDestinationPlaybackWithRTPTimestamp:
decodeFrame:showFrame:
updateVideoStall:withStallDuration:
createDecodeSession:
canDequeue:forTimestamp:
dequeueAndDecodeForTimestamp:
setOrientation:
setCamera:
setVideoMirrored:
setRatio:
isEqualToVideoAttributes:
handleRemoteVideoAttributesChange:
vcVideoReceiver:didReceiveRemoteFrame:atTime:newVideoAttributes:isFirstFrame:
packetLossPercentage
maxOWRD
setMaxOWRD:
initWithRTP:delegate:reportingAgent:dumpID:reportingParentID:
setEnableCVO:cvoExtensionID:
pauseVideo
updateSourcePlayoutTimestamp:
networkReceivePackets
rtcpSendIntervalElapsed
showDecodedFrame:atTime:
_hRTP
_blockBufferMemoryPool
_blockBufferMemoryPoolAllocator
_decompressionSession
_receivedFirstPacket
_receivedFirstRemoteFrame
_lastSequenceNumber
_sequenceNumberOutOfOrder
_firSequenceNumber
_lastFIRArrivalTime
_rateAdaptation
_videoQueue
_mostRecentTimestamp
_lastVideoTimestamp
_videoTimestampWrapCount
_formatDescription
_videoStreamReceiverQueue
_networkReceiveThread
_runNetworkReceiveThread
_sRecvReset
_videoPacketBuffer
_remoteVideoAttributes
_mediaStreamSynchronizer
_remoteVideoCamera
_remoteVideoMirrored
_lastFrameTime
_lastDisplayTime
_receivedBytes
_videoStallDurationMillis
_videoStallStartTime
_enableReceiveBitstreamDump
initWithIDSDestination:delegate:processId:sessionUUID:
localSettings
setIsCaller:
initWithLocalSettings:
propertyListWithData:options:format:error:
processParticipantInfo
setupAudioStreamFromMediaBlobWithIDSDestination:
setupVideoStreamFromMediaBlobWithIDSDestination:
updateProminenceDefaults
audioEnabled
videoEnabled
audioPaused
videoPaused
audioMuted
audioPosition
updateDownlinkBandwithAllocatorClientConfigurations:
forceFECRepairStream
prominenceActiveAccumulationThreshold
prominenceActiveProbabilityThreshold
prominenceInactiveAccumulationThreshold
prominenceInactiveProbabilityThreshold
vcSessionParticipant:audioPaused:didSucceed:error:
callDelegateWithBlock:
vcSessionParticipant:videoPaused:didSucceed:error:
stream
setDidReceiveFirstFrame:
vcSessionParticipant:remoteVideoEnabledDidChange:
videoQuality
visibilityIndex
prominenceIndex
updateShouldEnableFaceZoom
integerValueForKey:defaultValue:
processInviteBlob:
initWithData:
formattedText
stringByReplacingOccurrencesOfString:withString:
setupRedWithRxPayload:txPayload:
addCodecConfiguration:
setForceEVSWideBand:
setupRTPForIDS
multiwayStreamConfig
setRemoteSSRC:
setMultiwayConfig:
setupAudioStreamConfiguration:audioRules:
completeStreamSetup:
initWithClient:type:networkBitrate:qualityIndex:streamID:
setIsLowestQualityAudio:
isLowestQualityAudio
subStreamConfigs
audioRuleCollection
negotiatedMultiwayAudioStreams
newAudioStreamConfigurationWithMultiwayAudioNegotiationResult:
addStreamConfig:
setupBandwidthAllocationTableForMediaStreamConfigs:entryType:
setupStreamRTP:
setStream:
entryForStreamID:
audioStreamInfo
setOptedInAudioStreamID:
setOptedInVideoStreamID:
isAudioActive
isVideoActive
vcSessionParticipant:didRequestVideoRedundancy:
pullAudioSamplesCount
isVideoExpected
setVideoIsExpected:
videoIsExpected
videoStreamInfo
updateWithCurrentFramerate:bitrate:time:
isVideoQualityDegraded
setVideoDegraded:
forceDisableVideoDegraded
remoteVideoDidDegrade:streamToken:
multiwayVideoNetworkBitrateCapWifi
multiwayVideoNetworkBitrateCapCellular
isDeviceLargeScreen
maxAudioNetworkBitrateForLocalInterfaceOnWiFi:
audioEntries
actualNetworkBitrate
isVisible
maxVideoNetworkBitrateForVideoQuality:isLocalOnWiFi:isRedundancyRequested:
remoteVideoDidSuspend:streamToken:
resolution
setVideoResolution:
addTxPayloadType:networkPayload:
addRxPayloadType:networkPayload:
setFramerate:
setSourceFramerate:
setRemoteVideoInitialOrientation:
setRxMinBitrate:
setRxMaxBitrate:
setTxMinBitrate:
setTxMaxBitrate:
negotiatedMultiwayVideoStreams
newVideoStreamConfigurationWithNegotiationVideoResult:
setActualNetworkBitrate:
notifyChangeInActiveMediaBitrate:
vcSessionParticipantDidChangeActualNetworkBitrateVideo:
vcSessionParticipantDidChangeActualNetworkBitrateAudio:
forceDisableFaceZoom
setShouldEnableFaceZoom:
debounceAudioPriority:
vcSessionParticipant:didChangeProminence:description:
vcSessionParticipantDidMediaDecryptionTimeOut:
updateVideoPriority:
reportParticipantsPerfTimingsOnce
setRemoteVideoEnabled:
setActualBitrateForOptedInStreamID:withActiveStreamID:isVideo:
vcSessionParticipant:didSwitchFromStreamID:toStreamID:
vcSessionParticipantDidChangeReceivingStreams:
updateVideoQualityNotification
updateAudioPriority:
mediaEntries
actualNetworkBitrateVideo
actualNetworkBitrateAudio
optedInNetworkBitrateVideo
optedInNetworkBitrateAudio
optedInVideoStreamID
optedInAudioStreamID
activeDownlinkVideoStreamID
activeDownlinkAudioStreamID
isVideoSuspended
setVideoSuspended:
initWithIDSDestination:idsParticipantID:mediaNegotiator:opaqueData:delegate:processId:transportSessionID:sessionUUID:config:
setRemoteVideoPaused:
getAudioDumpName
setActiveStreamIDs:
recommendedStreamIDsForSelectedMediaEntries:forceSeamlessTransition:
negotiateAudioRules:
receivedMediaPacketAtTime:isDecryptable:
redundancyController:redundancyIntervalDidChange:
collectVideoChannelMetrics:
collectAudioChannelMetrics:
isRemoteVideoEnabled
isRemoteVideoPaused
_optedInVideoStreamID
_optedInAudioStreamID
_activeDownlinkVideoStreamID
_activeDownlinkAudioStreamID
_remoteVideoEnabled
_remoteVideoPaused
_videoQuality
_visibilityIndex
_prominenceIndex
_mediaTable
_repairMediaTable
_videoQualityInfo
_lastVideoQualityNotificationUpdate
_lastVideoPriority
_isProcessingVideoOptIn
_isVideoDegraded
_videoSuspended
_isRedundancyRequested
_prominenceInfo
_perfTimers
_haveReportedPerfTimers
initWithCallID:requireEncryptionInfo:reportingAgent:notificationQueue:isMultiwaySession:
initWithNotificationQueue:reportingAgent:
initWithMultiwayEnabled:
setupConnectionHealthMonitor
isHandoverSupported
setSupportDuplication:
initWithDelegate:connectionManager:reportingAgent:
startTimingForKey:
dispatchedProcessDatagramChannelEventInfo:
handleLinkConnectedWithInfo:
stopTimingForKey:
handleLinkDisconnectedWithInfo:
handleDefaultLinkUpdatedWithInfo:
handlePreConnectionDataReceived:
handleRATChanged:
handleCellularMTUChanged:
handleChannelInfoReport:
handleIDSEncryptionInfoEvent:
handleIDSMembershipChangeInfoEvent:
handleUpdateRemoteSessionInfo:
callEventHandlerWithEvent:info:
processDatagramChannelEventInfo:
setPiggybackBlobPreference
initWithLinkContext:dataChannelToken:
updateVCIDSSessionInfoResponse:
isValidTimingForKey:
timingForKey:
setTiming:forKey:
setRelayServerProvider:
setConnectionSetupTime
setQuickRelayServerProvider:
setDefaultLink:
optInStreamIDsForNewPrimaryConnection:oldPrimaryConnection:
optInStreamIDsForConnection:
optOutStreamIDsForNonPrimaryConnection:sentOnConnection:
checkVCIDSSessionInfoNeedUpdate:
resetParticipantGenerationCounter
didEnableDuplication:activeConnection:
discardConnection:
updateParticipantGenerationCounter:
optOutAllStreamsForConnection:
VCIDSSessionInfoSynchronizer:sendVCIDSSessionInfoRequest:
getConnectionSetupData:withOptions:error:
setConnectionSetupPiggybackBlob:
connectionSetupPiggybackBlob
setDestination:
socket
setSocket:
sessionInfoSynchronizer
_socket
_datagramChannel
_requireEncryptionInfo
_sessionInfoSynchronizer
_isIDSDCEventUsageErrorReported
collectChannelMetrics:interval:
remoteVideoOrientation
setRemoteVideoOrientation:
lastReceivedVideoRTPPacketTime
lastReceivedVideoRTCPPacketTime
_remoteVideoOrientation
_syncSource
_lastReceivedVideoRTPPacketTime
_lastReceivedVideoRTCPPacketTime
getMetaDataArrayWithIndentifier:
setVideoPayloadCollections:
objectAtIndex:
addVideoPayloadCollections:
videoPayloadCollectionsCount
clearVideoPayloadCollections
videoPayloadCollectionsAtIndex:
videoPayloadCollectionsType
videoPayloadCollections
_videoPayloadCollections
_allowRTCPFB
initWithDumpID:
setMaxTargetBitrate:minTargetBitrate:
minBitrate
scheduleTMMBR:
setOperatingBitrate:
averageReceivedBitrate
doRateControlWithTime:roundTripTime:packetLossRate:operatingBitrate:averageReceivedBitrate:
maxBitrate
_rtpHandle
_sendTmmbrBitrate
_receivedTmmbnBitrate
_operatingBitrate
_rateAdaptationEnabled
_downlinkQualityDidChange
_isOperatingAtMaxBitrate
_isOperatingAtMinBitrate
_tmmbrSendTime
_tmmbnReceiveTime
_tmmbRTT
_adaptationTime
_maxOWRD
_averageBitrateWindowDuration
_rateController
_summerHandle
_lastRecordingTime
_maxBitrateKbps
_minBitrateKbps
_maxFramerate
_minFramerate
_maxFrameDurationMillis
VCSessionErrorEvent:errorPath:
newLocalFeaturesStringWithType:
initWithCameraStatusBits:aspectRatio:contentsRect:
remoteVideoAttributes
setRemoteVideoAttributes:
vcVideoReceiver:requestKeyFrameGenerationWithStreamID:
vcVideoReceiver:didSwitchFromStreamID:toStreamID:
initWithConfig:delegate:reportingAgent:statisticsCollector:
handleRemoteFrame:timestamp:cameraStatusBits:
handleRequestingKeyFrameGenerationWithStreamID:
handleKeyFrameRequestWithSizeAndFistMBs:count:didReceiveRTCPFB:didReceiveFIR:
didSwitchFromStreamID:toStreamID:
shouldEnableFaceZoom
_videoReceiverHandle
_controlInfoGenerator
remoteFrameWidth
remoteFrameHeight
receivedFirstRemoteFrame
_shouldEnableFaceZoom
_lastKeyFrameRequestTime
_lastKeyFrameRequestStreamID
connectionForQualityInternal:
reasonStringWithDuplicationType:
isInterfaceOnCellularForActiveConnectionWithQuality:forLocalInterface:
updateWRMDuplicationForLocaliRATSuggestion
updateWRMDuplicationForRemoteiRATSuggestion
connectionForQuality:
updateCellularExcessiveBytesWithSourceDestinationInfo:bytes:isMediaData:isOutgoing:
updateWRMDuplicationForHandover
connectionForDuplication
checkiRATSuggestionDefaultValue
requestWRMNotificationAtTime:
localWRMLinkType
processWRMNotification:
setDuplicationEnabled:
updateReceiveStats
checkiRATSuggestion
updateTransmittedExcessiveBytes:isMediaData:isIPv6:
updateReceivedExcessiveBytes:isMediaData:isIPv6:
generateStatsBlob
processPeerStatsBlob:
receiveNewPacket:
setLastPrimaryConnectionInUse:
setPreferredLocalInterfaceForDuplication:
updateConnectionStatsWithIndicatorNoPackets:
updateConnectionStatsWithIndicatorNone:
updateConnectionStatsWithIndicatorPrimaryImproved:
resetConnectionStats:
updateConnectionHealthWithIndicator:
connectionHealthDidUpdate:isLocalConnection:
setDuplicationCallback:withContext:
setConnectionPause:isLocalConnection:
setWRMUpdateCallback:requestNotificationCallback:withContext:
processRemoteWRMSuggestion:isRemoteDuplicating:
connectionCount
getConnectionTypeForActiveConnectionWithQuality:forLocalInterface:
getCellularTechForActiveConnectionWithQuality:forLocalInterface:
getCellularMTUForActiveConnectionWithQuality:
isConnectedOnIPv6ForActiveConnectionWithQuality:
isConnectedOnRelayForActiveConnectionWithQuality:
updateTransmittedPacketsAndBytesWithSourceDestinationInfo:bytesSent:isMediaData:shouldCountPacket:numOfStreamId:isPriorityIncluded:
updateReceivedPacketsAndBytesWithSourceDestinationInfo:bytesReceived:isMediaData:shouldCountPacket:numOfStreamId:isPriorityIncluded:
createSourceDestinationInfoList
isLocalCellularInterfaceUsed
setConnectionHealthOnControlInfo:
processConnectionHealthFromControlInfo:
setDuplicationFlag:withPreferredLocalLinkTypeForDuplication:
relayServerProvider
isDuplicationEnabled
preferredLocalInterfaceForDuplication
preferredRemoteInterfaceForDuplication
setPreferredRemoteInterfaceForDuplication:
setConnectionForDuplication:
supportDuplication
mediaExcessiveCellularTxBytes
mediaExcessiveCellularRxBytes
signalingExcessiveCellularTxBytes
signalingExcessiveCellularRxBytes
remoteNoRemotePacketInterval
statsRecorder
_relayServerProvider
_stateRWlock
_primaryConnection
_secondaryConnection
_connectionForDuplication
_lastPrimaryConnectionInUse
_isInitialConnectionEstablished
_mediaExcessiveCellularTxBytes
_mediaExcessiveCellularRxBytes
_signalingExcessiveCellularTxBytes
_signalingExcessiveCellularRxBytes
_delegateQueue
_duplicationType
_duplicationCallback
_lastConnectionUnstableTime
_duplicationContext
_duplicationPending
_enableDuplication
_supportDuplication
_preferredLocalInterfaceForDuplication
_preferredRemoteInterfaceForDuplication
_isPrimaryLocalUsingCell
_connectionHealthMonitor
_localConnectionStats
_remoteConnectionStats
_remoteNoRemotePacketInterval
_localiRATLinkTypeSuggestion
_remoteiRATLinkTypeSuggestion
_isRemoteDuplicating
_lastiRATCheckTime
_localLinkTypeSuggestionChangeTime
_iRATNotificationRequestTime
_localWRMLinkTypeFromDefaults
_allowRequestForWRMNotification
_forceHandoverToCell
_disableRemoteInterfaceInference
_wrmStatusUpdateCallback
_wrmRequestNotificationCallback
_wrmCallbacksContext
_statsRecorder
startVTP
stopVTP
initWithTargetBitrateCap:
setupWCMClient
setupWRMClient
cleanupWRMClient
cleanupWCMClient
requestNotificationFaceTimeCalling
strongDelegate
recommendedSettingsChanged:
clientTargetBitrateCap
clientTargetBitrate
startWRMClientWithMode:
stopWRMClient
wcmSetCallConfig:interferenceLevel:
wcmGetCallConfig:targetBitrate:
setWRMMetricConfig:
setWRMNotification:
initWithDelegate:connectionManager:
recommendedTargetBitrateCap
requestWRMNotification
setClientTargetBitrate:
setClientTargetBitrateCap:
_WCMClient
_WRMClient
_connectionManager
_recommendedSettings
_clientTargetBitrate
_clientTargetBitrateCap
_weakDelegate
startAudioIOWithCompletionHandler:
startAudioSessionWithError:
stopAudioIOWithCompletionHandler:
stopAudioSessionWithError:
initWithProcessId:
muteWithError:
unmuteWithError:
resetAudioSessionOutputPortOverride:
startWithError:
stopWithError:
getCurrentAudioDeviceWithType:
setCurrentAudioDevice:type:
inputDevice
outputDevice
processId
_processId
_muted
_stateMutex
_lastAudioSessionStart
_isOnHold
_selectedSettings
_requestedSettings
data
convertPixelBufferToJPEG:withAssetIdentifier:cameraStatusBits:
getBestCaptureSizeForEncodingSize:
videoResolutionForWidth:height:
adjustFaceMetadataForPixelBuffer:originalWidth:originalHeight:
adjustFaceBounds:fromOriginalBufferSize:toCroppedBufferSize:
compareVideoAspectRatioSizeA:toSizeB:
addInfoListWithNotificationArrivalTime:transmittedBytes:
calculateBitratesAndDelays:totalQueueDepth:
normalizeBDCD:
addBDCDListWithNotificationArrivalTime:bdcd:queuingDelay:
resetBDCDList
getBasebandMetricsWithNotification:
isTargetBitrateStabilized
_lastBasebandNotification
_bdcd
_normalizedBDCD
_normalizedDelay
_isBDCDListReady
_bdcdList
_infoList
_txBitrate
_averageBitrate
_previousAverageBitrate
_averageBitrateLong
_expectedQueuingDelay
_expectedQueuingDelayLong
_isTargetBitrateStabilized
_resetAverageBitrateLong
processBasebandNotification:arrivalTime:error:
processBasebandAck:
printFlushAckToBasebandDump:transactionID:packetDropped:sequenceNumberArray:
stringByAppendingFormat:
processBasebandNotification:metaData:error:
_basebandMetrics
_notificationArrivalTime
_basebandTxBitrate
_basebandQueueDepth
initWithClient:type:networkBitrate:qualityIndex:streamID:hasRepairStreamID:repairStreamID:repairMaxNetworkBitrate:enabled:
compareAudioEntry:audioEntry:
compareAudioEntry:videoEntry:
compareVideoEntry:videoEntry:
client
repairMaxNetworkBitrate
_client
_isLowestQualityAudio
_actualNetworkBitrate
_hasRepairStreamID
_repairStreamID
_repairMaxNetworkBitrate
_enabled
setReceiveHandler:
setAllocationResponseHandler:
setBindingResponseHandler:
setDestroyHandler:
setTerminationHandler:
terminationHandler
destroyDispatchTimer
reportErrorAndTerminate:detail:returnCode:description:reason:
appendBytes:length:
setLength:
receiveHandler
receivedControlData:
sendTCPData:bufSize:
createDispatchTimer:withDetailedError:
allocationResponseHandler
vcArg:sendControlData:isTypeSSL:withTimeout:withDetail:
bindingResponseHandler
sendRefreshMsg:error:
destroyHandler
monitorBufferPool
sendChannelBindingMsgWithDict:error:
receivedSSLConnectionData:recordType:
getBytes:range:
processSocketWrite:
processSocketRead
processSocketReadSSL
resetConnection
finalize
getBufferFromPool:
returnBufferToPool:
vcArg:sendRealTimeData:toParticipantID:
initWithRelayRequestDictionary:withCallID:relayType:errorCode:
connectionType
sendAllocateMsg:
unbindChannel
closeTunnelSocket
isTunnelSocketClosed
participantID
setParticipantID:
_connectState
_connectedFD
_isChannelBound
_handler
_allocationResponseHandler
_terminationHandler
_bindingResponseHandler
_destroyHandler
_readSource
_writeSource
_writeSourceSuspended
_fTimeout
_participantID
_channelNumber
_reqRespDict
_relayUpdateDict
_serverIPPort
_allocateReq
_channelBReq
_allocationTimestamp
_currentlyReadingMessage
_currentlyReadingDataGoalLength
_currentMsgType
_currentPadding
_writeBuf
_head
_tail
poolSize
head
tail
avail
poolLock
initWithDeviceRole:transportType:
mapPacketMultiplexModeToSIPMode:
startSIPWithPacketMultiplexMode:transportType:
initWithRTTThreshold:lossRateThreshold:
enableiRATSuggestion
setSupportsSKEOptimization:
setPerfTimings:
connectionManager
requiresWiFi
setRequiresWiFi:
useCompressedConnectionData
setUseCompressedConnectionData:
setWithObjects:
evaluateEnableRRx:
configureRateController
resetVideoRulesForInterface:videoReportingDictionary:
stopVideoSend:error:
startVideoSend:error:
maxAllowedAudioOnlyBitrateForConnection:
maxAllowedBitrateForConnection:operatingMode:
videoIsPaused
updateWithCurrentFramerate:bitrate:packetLossRate:time:
session:withCallID:videoIsDegraded:isRemote:
setMaxUDPPayloadSize:
isCallOngoing
supportsDynamicMaxBitrate
newPackedMessageFromDictionary:
sendMessage:withTopic:
currentAudioCap
updateMaxPktLength
setCellBandwidth:
findFeatureString:value:valueLength:withPrefix:
session:didChangeRemoteScreenAttributes:
newRemoteScreenAttributesForOrientation:
Conference_SetBWEstMode:bFakeLargeFrameMode:
setUseControlByte:
setUseUEP:
isDuplexAudioOnly
usePreNegotiation
negotiatedScreenSettings
videoRuleCollections
negotiatedVideoSettings
getVideoRulesForTransport:payload:encodingType:
imageAttributeRules
extractDimensionsForInterface:direction:
chooseVideoPayload:operatingMode:isLocalOnCellular:isRemoteOnCellular:
disconnect:didRemoteCancel:
getVideoSettings:forInterface:payload:width:height:framerate:bitRate:
primaryConnectionDidChangeTo:oldConnection:
getAudioTxBitrate
session:remoteMediaStalled:
resetLastGoodVideoQualityTime:
detailedErrorCode
disconnectWithNoRemotePackets:
addNewRTT:packetLossRate:timestamp:
isLinkCongested
lossRate:forParticipantID:
logDetailedNetworkInformation
updateNetworkCheckHint:
session:receivedNoPacketsForSeconds:
reportNetworkConditionsDegraded
updateLastReceivedPacketWithTimestamp:
sendTimings
stopSIPWithTransportType:
setupConnectionTimeoutTimerWithErrorCode:detailedCode:description:reason:
cancelConnectionTimeoutTimer
cancelFirstRemoteFrameTimer
isAudioRunning
shouldSendAudio
actualAudioSendingBitrate
processResponseBlob:
setupPeerInfo:usingInviteData:isCaller:capabilities:
setupIDSConnectionForCallID:destination:socket:error:
handleReceivedPiggybackBlobIDS:
configureLegacyTransportWithInviteInfo:error:
handleReceivedPiggybackBlobLegacy:
isAudioPausedToStart
setCallActive:
handleNewConnectionSetup:isInitialConnection:
handlePrimaryConnectionChanged:oldPrimaryConnection:
handleDuplicationEnabled:activeConnection:
localCallInfo
handleCellTechChange:
hAFRC
setSKEBlobOnTransportSession
handleKeyExchangeCompleted
reportMetricsFaceTimeCalling:
sendStatusUpdateFaceTimeCalling:
disconnectInternal:disconnectError:didRemoteCancel:
setAudioSSRC:
setVideoSSRC:
setAudioRuleCollection:
setVideoRuleCollections:
setScreenRuleCollections:
setPreferredAudioCodec:
setVideoFeatureStrings:
setBitrateArbiter:
setCallLogFile:
setBasebandCodec:
setBasebandCodecSampleRate:
isCaller
newInviteBlob
newResponseBlob
deviceType
initWithRelevantStorebagEntries
reportOperatingMode
newSKEBlobWithRemoteSKEBlob:
isLowBitrateCodecPreferred:
newMediaBlobWithRemoteMediaBlob:localCallID:isLowBitrateCodecPreferred:
addLocalCallInfoToInviteDictionary:
getVCCurrentVersion
setClientVersion:
initWithCString:encoding:
setDeviceType:
setOsVersion:
setOSVersion:
setFrameworkVersion:
clientVersion
setU8Version:
frameworkVersion
osVersion
setInputMeter:
session:isSendingAudio:error:
stopPausedHeartbeat
startPausedHeartbeat
packetsPerBundle
maxPacketSize
bundledPackets
inputMeter
processRemoteIPChange:
didChangeLocalVariablesForSession:
session:didPauseAudio:error:
audioVersionInfo:
session:setRemoteBasebandCodecType:sampleRate:
session:startAudioWithFarEndVersionInfo:internalFormat:internalSamplesPerFrame:completionHandler:
session:stopAudioWithCompletionHandler:
setPauseAudio:force:error:
session:didPauseVideo:error:
setVideoIsPaused:
startVideo:error:
stopVideo:error:
setPauseVideo:force:error:
processRelayRequestResponse:didOriginateRequest:
processRelayUpdate:didOriginateRequest:
logPerfTimings
sendData:messageType:encrypted:
primaryConnectionType
audioReceiver
supportsSKEOptimization
sendCallingModeMessage
enableAudio:
actualAudioCodec
setActualAudioCodec:
preferredVideoCodec
setPreferredVideoCodec:
actualVideoCodec
setActualVideoCodec:
updateDeviceRole:
currentAudioTier
networkBitrate
audioCodecBitrate
payloadConfig
dtxMetrics
schedulePrimaryConnectionChange:oldConnection:
session:connectionDidChangeWithLocalInterfaceType:remoteInterfaceType:callID:
cellBandwidth
handleFirstConnectionSetup:
updateCachedConnectionState
isRemoteOSPreLion
setIsPreLionOS:
startMediaWithPreNegotiatedSettings:
sipConnectThreadProc:
detachNewThreadSelector:toTarget:withObject:
setupCalleeSIPStartTimeout:
logConnectionSuccess
isKeyExchangeEnabled
setupSecureDataChannel
setCellTech:remoteCellular:isIPV6:audioCap:
subdataWithRange:
initWithLocalCallID:remoteCallID:isCaller:sharedSecret:error:
keyPathsForValuesAffectingNetworkQuality
isCurrentPayloadTypeValid
startAWDStats
updateVideoQualityStatus:bitrate:time:isRemote:
isBetterForSIPInviteWithSourceDestinationInfo:thanSession:
thermalLevelDidChange:
remoteCellTechStateUpdate:maxRemoteBitrate:
getFeaturesListStringForPayload:
applyFeaturesListStringForPayload:
chooseVideoPayloadForInterface:
getVideoRuleForVideoMode:interface:sessionBitrate:
handlePendingPrimaryConnectionChange
setQualityDelegate:
qualityDelegate
updateLastReceivedAudioTime
updateLastReceivedPacket:
handshakeComplete:withError:
timeoutUnfinishedConnection
setUpFirstRemoteFrameTimer
isLocalOrRemoteOnCellular
startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:
rtcpDescriptor
reportWRMMetrics:
sendWRMStatusUpdate:
cancel:
inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:error:
setRemoteCallInfoFromInviteDictionary:
setShouldSendAudio:
setSuspendAudio
setResumeAudio
setPauseAudio:error:
setSuspendVideo
setResumeVideo
setPauseVideo:error:
stillWantsToRelay
processRelayRequestResponseDict:didOriginateRequest:
processRelayUpdateDict:didOriginateRequest:
processCancelRelayRequest:didOriginateRequest:
rcvdFirstRemoteFrame
remoteParticipantID
localParticipantID
negotiatedReceivingFramerate
callMetadata
pullAudioSamples:rtpTimestamp:lastReceivedAudioTime:padding:paddingLength:silence:
isSKEOptimizationEnabled
audioTierNetworkBitrate
audioTierAudioCodecBitrate
audioTierPacketsPerBundle
audioTierRedNumPayloads
audioTierPayload
setSessionConferenceState:callID:
setSessionConferenceVisualRectangle:callID:
setPeerProtocolVersion:
messageVCMomentsRequest:
reportSymptom:
reportingMomentsWithRequest:
isVideoRunning
notifyDelegateActiveConnectionDidChange
connectionChangeState
setConnectionChangeState:
setConnectionManager:
maxPacketLength
setMaxPacketLength:
videoPayload
setVideoPayload:
setSampleRate:
isWaitingForICEResult
setIsWaitingForICEResult:
receivedSIPInvite
setReceivedSIPInvite:
hMediaQueue
setHMediaQueue:
setHAFRC:
ringBuf
setRingBuf:
lastReceived
setLastReceived:
useControlByte
useUEP
bandwidthUpstream
setBandwidthUpstream:
bandwidthDownstream
setBandwidthDownstream:
mutedPeers
setMutedPeers:
audioIsPaused
setNatType:
peerCN
setPeerCN:
setPacketLossRate:
networkConditionsTimeoutInSeconds
setNetworkConditionsTimeoutInSeconds:
signalStrength
setSignalStrength:
signalRaw
setSignalRaw:
signalGrade
setSignalGrade:
packetLateAndMissingRatio
setPacketLateAndMissingRatio:
sessionID
setSessionID:
shouldTimeoutPackets
setShouldTimeoutPackets:
useRateControl
isRTCPFBEnabled
setIsRTCPFBEnabled:
isStarted
setIsStarted:
setImageAttributeRules:
setRemoteFrameWidth:
setRemoteFrameHeight:
isRemoteMediaStalled
setBasebandCodecType:
sipState
setSipState:
didSend200OK
setDidSend200OK:
peerReportingID
setPeerReportingID:
srtpKeyBytes
setSrtpKeyBytes:
remoteCallInfo
packetMultiplexMode
rtpVideo
videoMediaControlInfoGenerator
audioMediaControlInfoGenerator
toBeChangedPrimaryConnection
_mediaNegotiator
connectionChangeQueue
_sipState
negotiatedAudioPayloads
_currentRedPayloadType
_isRedEnabled
screenPayload
hSIP
mutex
iRemoteRTPPort
iRemoteRTCPPort
caps
_allPayloadsLocalFeaturesString
featuresListStringDict
pauseLock
videoQueue
videoAsyncQueue
audioQueue
_isUseCaseWatchContinuity
carrierBitrateCap
shouldUpdateLastReceivedPacketTimestamp
lastReceivedPacketTimestamp
packetsSinceStall
perfTimers
timeLastCheckedNetworkConditions
timeLastKnowGoodNetworkPLR
timeLastKnowGoodNetworkRTT
sampleLogCount
timeSinceLastReportedNoPackets
noRemotePacketsTimeout
previousNoRemoteInProgress
didAttemptSIPInvite
qualityDelegateLock
qualityQueue
srtpLock
didPrepareSRTP
useAFRC
useVCRC
congestionDetector
bBWEstOperatingModeInitialized
bBWEstNewBWEstModeEnabled
bBWEstFakeLargeFrameModeEnabled
bBWEstActiveProbingSenderLog
remoteScreenPortraitAspectRatio
remoteScreenLandscapeAspectRatio
remoteExpectedPortraitAspectRatio
remoteExpectedLandscapeAspectRatio
isInitiator
sentClientSuccessfulDidStart
videoThrottlingTimeout
awdCallNonce
messaging
controlChannel
isCurrentNetworkBad
callSessionBitrate
cellTechQueue
cellTechChangeSource
callSessionBitrateArbiter
connectionTimeoutSource
firstRemoteFrameTimemoutSource
initialSentBytes
initialReceivedBytes
_captionsReceiver
hVideoReceiver
hVideoTransmitter
remoteSupportsVisibleRect
remoteSupportsExpectedAspectRatio
canLocalResizePIP
canRemoteResizePIP
fecMode
sessionHealthMonitor
lastVideoQualityNotificationUpdate
vcWCMClient
vcWRMClient
iRATSuggestionEnabled
hdTransferSession
hdBufferPool
expectedDecodeSize
reportUpdateInterval
reportReportFrequency
didReportNoRemotePackets
didReportLongConnectionTime
didReportAudioStall
enableRateControlDump
skeState
secretKey
secureDataChannel
_didSendBasebandCodec
dwRTT_ice
timestampQueue
shouldSendBlackFrame
_peerProtocolVersion
wrmInfo
_shouldReportWRMMetrics
_inviteDataRequested
_transportType
_transportSession
_cleanupDone
_isLocalCellular_LowestConnectionQuality
_isRemoteCellular_LowestConnectionQuality
_isConnectedOnIPv6_LowestConnectionQuality
_callLogFile
processCaptionsData:
session:didReceiveData:messageType:withCallID:
vcSecureDataChannel:messageType:receivedData:
didReceiveCaptions:remoteClient:
didReceiveCaptions:
setUserAgent:
usesInitialFECImplementation
handleIncomingWithCallID:msgIn:msgOut:optional:confIndex:error:
setupEncryptionWithKey:confIndex:
sendBasebandCodecMessage
startMediaQueue:
isDTLSEnabled
processSIPMessage:msgOut:optional:confIndex:
shouldNotifyDelegateDidStartBeforeAudioSetup
notifyDelegateSessionStarted
removeTimingForKey:
enableSessionHealthMonitor
shutdownVoiceChatFromRemoteSIPSignal:withReason:
handleConnectionSetupDataChangeMessageDelivered
handleMediaReceivedOverPeerToPeerLinkWithConnectionId:
handleMediaReceivedOverRelayLinkWithConnectionId:
sipCallback:callID:msgIn:msgOut:optional:confIndex:
isRelayForced
setForceRelay
isRelayEnabled
setAllowsRelay:
setLocalParticipantID:
setRemoteParticipantID:
setRemoteCallID:
valueWithPointer:
setRemoteConnectionData:
setNATType:
retrieveIdentity
setIdentity:
session:withCallID:networkHint:
setIsDTLSEnabled:
supportSDPCompression
setupDTLSDefaults
isVideoPausedToStart
setLocalIdentityForKeyExchange
setupMessaging
logIdentity:
calculateSIPEndAction:currentState:error:
doSipEndAction:callID:error:
session:didStart:connectionType:localInterfaceType:remoteInterfaceType:error:
session:didStopWithError:
session:cleanUpWithDelay:error:
resultQueue
disableSessionHealthMonitor
pauseHeartbeatInterval
hasKey:
remoteVideoDidPause:callID:
remoteAudioDidPause:callID:
disconnectWithNoRemotePackets:timeoutUsed:
setRtpId:
addWifiRules:cellularRules:payload:direction:
initWithUTF8String:
lengthOfBytesUsingEncoding:
setSdp:
remoteMaxBandwidthForOperatingMode:connectionType:
maxAllowedScreenShareCellularBitrate
treatAsCellular
negotiatedSettings
setSupportsDynamicMaxBitrate:
negotiateMediaMaxBandwidth
remoteBasebandCodec
remoteBasebandCodecSampleRate
remoteUserAgent
setRxPayloadList:withPayloadTypes:isRedEnabled:
negotiatedAudioSettings
setAuNumber:
allowSwitching
allowRecording
primaryPayload
dtxPayload
redPayload
disableRed
setupAudioCodecWithPayload:
negotiatedAudioPayloadTypes
basebandNotificationRegistrationToken
setRTPPayloads:withError:
isSupported
forceHWI
forceVideoPayload
forceRecvVideoPayload
setFeatureStrings:
featureStrings
videoFeatureStrings
negotiatedFeaturesStringWithLocalFeaturesString:remoteFeaturesString:
negotiatedMomentsSettings
session:setMomentsCapabilities:
createRTPHandles:
prepareSRTPWithError:
createMediaQueueHandle:
applyNegotiatedSettings
applyNegotiatedAudioSettings:
applyNegotiatedVideoSettings:
applyNegotiatedCaptionsSettings
applyNegotiatedMomentsSettings
setMediaQueueStreamSettings
startRateControl:
createAudioTransmitter:
setSdpString:
negotiatePayloads:withError:
initWithArray:
negotiateMaxBandwidth:
getAllCompatibleVideoPayloads:forMediaType:
maxAllowedBitrateRuleForConnection:
isHDVideoSupported
getCompatibleLocalFeaturesListForPayloads:count:
createSDP:audioPayloadCount:secondaryPayloadTypes:secondaryPayloadCount:videoPayloadTypes:videoPayloadCount:localFeaturesList:answerBandwidth:maxBandwidth:imageSizesSend:imageSendCount:imageSizesRecv:imageRecvCount:sdp:numSDPBytes:error:
stopMediaQueue:
releaseRTPHandles
resetState
enumerateObjectsUsingBlock:
getAllPayloadsForAudio:count:secondaryPayloads:secondaryCount:
getAllPayloadsForVideo:count:
allPayloadsLocalFeaturesString
stringWithCString:encoding:
canSendSIPInviteWithError:
createInviteSDPWithError:
establishSIPDialogWithSDP:error:
fillMediaControlInfo:
processMediaControlInfo:isAudio:
setIsUseCaseWatchContinuity:
setTransportSession:
setMediaQueue:
setRtpVideo:
setAllowLargePackets:
supportsSpecialAACBundle
setRateChangeCounter:
audioSSRC
mapPacketMultiplexModeToRTPMode:
videoSSRC
arrayWithCapacity:
pickFeaturesStringForPayload:featuresListDict:remote:
setMatchedFeaturesString:localFeaturesString:remoteFeaturesString:
sdpString
swapSendAndReceiveRules
rtpId
setRxPayloadList:withPayloadTypes:
choosePayload:
chooseSecondaryPayloads:
chooseDTXPayloads:
getDecodePayloadTypes:secondaryPayloadTypes:
isDuplexVideoOnly
negotiateFeaturesString:forPayload:
doesVideoPayloadMatchRemoteImageAttributeRules:
canNegotiateVideoPayload:supportedPayloads:isLocalOnCellular:isRemoteOnCellular:
isValidVideoPayloadOverride:
sendSIPInviteWithError:
setupCallerRTPChannelWithError:
setupAudioCookies
session:localAudioEnabled:withCallID:error:
stopAudioIO:
getMagicCookie:withLength:
startVideoReceive:
stopVideoReceive:isPausing:
useNewPLCalc
startAFRC:
startVCRC:
forceAudioPacketsPerBundle
setupAACELDPayload:
inputSampleRate
audioIOFormat
codecBitmapForPayloads:
sipConnectWithError:
isIOS
setBWEOptions:UseNewBWEMode:FakeLargeFrameMode:ProbingSenderLog:
requiresImplicitFeatureString
initWithDeviceRole:callLogFile:
maxAllowedCellularBitrate
maxAllowedBitrate
maxBitrateForConnectionType
mainBundle
infoDictionary
reportDashboardEndResult:
stopRateControl:
cleanupMedia
notifyDelegateAndEndCall:didRemoteCancel:error:
stopMessaging
flushBasebandQueueWithPayloads:flushCount:
remotePauseDidChangeToState:forVideo:
addScreenConfigToSDP:
getAllPayloadsForScreen:count:
interfaceForCurrentCall
doSipEndProc:
matchedFeaturesStringForPayload:
setupBitrateNegotiation
adjustBitrateForConnectionType
shouldSendBlackFrame:
sendSymptomToRemote:groupID:
setDuplicationFlag:withPreferredLocalLinkTypeForDuplication:notifyPeer:
initWithControlChannel:remoteVersion:
setupVideoPauseMessages
setupAudioPauseMessages
setupCellTechChangeMessages
setupMomentsMessages
setupAudioPausedHBMessages
setupCallingModeMessages
setupHandoverCandidateChangeMessage
setupPiPStateChangeMessage
setupPreferredInterfaceMessage
setupSymptomEnabledMessage
setupBasebandCodecInfoMessages
addTopic:associatedStrings:allowConcurrent:receiveHandler:
session:remoteAudioEnabled:withCallID:
session:remoteCallingModeChanged:withCallID:
newDictionaryFromUnpackedMessage:
initWithBase64EncodedString:options:
newDictionaryFromUnpackedMomentsMessage:
session:didReceiveMomentsRequest:
setupAudioOnOffStateMessages
session:localIPChange:withCallID:
base64EncodedDataWithOptions:
initWithData:encoding:
session:cancelRelayRequest:
session:initiateRelayRequest:
session:sendRelayResponse:
transportSession:connectionSetupDataDidChange:
transportSession:cancelRelayRequest:
transportSession:initiateRelayRequest:
transportSession:sendRelayResponse:
isAudioStalled
setIsAudioStalled:
setIsLinkCongested:
rttThreshold
lossRateThreshold
session:packMeters:withLength:
packMeters:withLength:
limitingRule
supportedVideoRulesForBitrate:transportType:payload:encodingType:
setIsAudioEnabled:
setIsVideoEnabled:
setIsDuplexAudioOnly:
setIsDuplexVideoOnly:
setIsVideoPausedToStart:
setIsVideoSourceScreen:
decodeFromNSDictionary:
encodeBool:forKey:
encodeInt:forKey:
decodeBoolForKey:
decodeIntForKey:
DataOnlyVCCapabilities
AudioOnlyVCCapabilities
VideoOnlyVCCapabilities
screenSharingVCCapabilities
encodeWithCoder:
initWithCoder:
newEncodedDictionary
isVideoSourceScreen
setIsKeyExchangeEnabled:
setIsAudioPausedToStart:
setIsRelayEnabled:
setIsRelayForced:
handle
setHandle:
addVideoConference:
setActiveConference:
cleanupQueues
newSessionWithDeviceRole:
natTypeForCallSessions:
wrlock
removeVideoConference:
rdlock
pullStoreBagKeys
setupNATObserver
verifyRequiredKeys:
verifyRequiredVoiceChatKeys:
notifyDelegateOfLocalVariablesChange
deregisterForVideoFramesWithDeviceRole:
registerForVideoFramesWithDeviceRole:captureRule:isUnpausing:
setUpAudioIO:
setConferenceOperatingMode:
updateCapabilities:forSession:
startConnectionWithParticipantID:callID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:
sessionForParticipantID:
indexOfObject:
stopCallID:didRemoteCancel:error:
cancelCallID:error:
getCString:maxLength:encoding:
sessionTransmittingFramerate
sessionTransmittingBitrate
sessionReceivingFramerate
sessionReceivingBitrate
conferenceWithMic
didStartSpeaking:
setConferenceWithMic:
didStopSpeaking:
tryrdlock
updateSpeaking:timeStamp:
captureAsFocus:
captureAsFocusClient:
pullDecodedAsFocus:
pullDecodedAsFocusClient:
packetLossRateForCallID:
setChatMode:
setIsFocus:
setIsUsingSuppression:
connectionBlobForParticipantID:callID:block:queue:caller:
connectionBlobForParticipantID:callID:error:
shouldSendAudioForCallID:
setSendAudio:forCallID:
shouldReinitializeCallWithDuration:forCallID:
conferenceOperatingMode
setCurrentFocus:
updatedMutedPeers:forParticipantID:
updatedConnectedPeers:
setCallReportProtobuf:withProtobufData:forMetricID:
forceNoICE:
setHasMic:
hasMic
setConferenceVolume:
conferenceVolume
handleCellTechChange:cellularMaxPktLen:
powerFloatToInt:
powerIntToFloat:
chatMode
isFocus
currentFocus
preferredCodec
setPreferredCodec:
upstreamBandwidth
setUpstreamBandwidth:
downstreamBandwidth
setDownstreamBandwidth:
speakingDelegate
setSpeakingDelegate:
isUsingSuppression
talkingPeersLimit
setTalkingPeersLimit:
disableVAD
setDisableVAD:
shouldPrioritizeParticipantIDForSIPInvite
setShouldPrioritizeParticipantIDForSIPInvite:
conferenceCaptureRule
transportType
_captionsDelegate
_sinkBuffer
_sinkBufferMix
manager
sessionDict
sessionArray
_startedSessions
outputMeteringEnabled
inputMeteringEnabled
inputFrequencyMeteringEnabled
outputFrequencyMeteringEnabled
_inputFFTMeter
_outputFFTMeter
_inputAudioPowerSpectrumSource
_outputAudioPowerSpectrumSource
microphoneMuted
xRemoteLayer
xAudioTS
dwAudioTS
forceNoICE
currentFocusSession
connectedPeers
speakingArray
longTerm
shortTerm
isTalking
talkTime
recvRTPTimeStamp
requestedCameraType
natTypeDictionary
natMutex
_remoteAudioPowerLevelMonitor
natObserver
mostRecentStartedCall
_isWarmedUp
bweOperatingModeInitialized
useNewBWEMode
useActiveProbingSenderLog
useFakeLargeFrameMode
shouldResumeAudio
shouldResumeVideo
timeStampUpdateCounter
_vcMoments
recvSamplesForSession:sampleBuffer:
pruneQuietestPeers:talking:mask:meters:
calculateTalkingMaskAtTimeStamp:
calculateMixingArrays:talkingMask:
updateAudioTimestampsForSession:withNewSampleTime:hostTime:numSamples:
updateMeter:forParticipant:atIndex:
updateMeters:
sessionForIncomingParticipantID:
sessionForSourceDestinationInfo:
loopbackSessionWaitingForSIPInvite
sipCallbackNotification:callID:msgIn:msgOut:optional:confIndex:
openSessionForParticipant:
matchesCallID:
matchesOpenSessionForParticipantID:
callIDForOpenSessionWithParticipantID:
matchesParticipantID:
conferenceMatchesSourceDestinationInfo:
hasSessionWaitingForSIPInvite
stateForCallID:
markUnfinishedSessions
cleanupProc:
dateWithTimeIntervalSinceNow:
sleepUntilDate:
threadSafeCleanupSession:
cleanupSession:withDelay:
cleanupSession:didRemoteCancel:
defaultCleanupSession:
setPauseAudio:
setPauseVideo:
videoConference:receivedNoRemotePacketsForTime:callID:
videoConference:didReceiveARPLData:fromCallID:
clientAudioFormat
momentsCapabilitiesWithNegotiationBlobMomentsSettings_Capabilities:
session:didChangeVideoRule:
session:receivedRemoteFrame:atTime:withScreenAttributes:videoAttributes:isFirstFrame:isVideoPaused:
session:didReceiveARPLData:fromCallID:
session:startVideoSend:captureRuleWifi:captureRuleCell:interface:isUnpausing:
session:startVideoReceive:
session:stopVideoReceive:isPausing:
session:didStopVideoIO:error:
session:changeVideoRulesToCaptureRule:encodeRule:featuresListString:
clientCaptureRule
initiateResolutionChangeToWidth:height:rate:
onCaptureFrame:frameTime:droppedFrames:cameraStatusBits:
avConferencePreviewError:
avConferenceScreenCaptureError:
shouldSendBlackFrame:callID:
sourceFrameRateDidChange:
frameRateIsBeingThrottled:thermalLevelDidChange:powerLevelDidChange:
setupTransport
stopConnectivityCheckForCallID:
discardRelayBindingForCallID:
updateICERoleForCallID:role:remoteCallID:sessionID:
initiateRelayRequest
remoteConnectionData
startConnectionWithBlob:useRelay:isInitialRelay:error:
pointerValue
forceIPv6
setForceIPv6ForCallID:
remoteRelayUpdate
iceTimeoutInSeconds:
startConnectionCheckForCallID:remoteConnectionDataBlob:relayDictionary:iceTimeout:securityIdentity:skeState:usedRelay:
setSKEState:forCallID:
registerICEBlockForCallID:connectedBlock:newCandidatesBlock:newNominationBlock:removeIPPortBlock:
cleanup
stopLoopback
setForceRelayForCallID:
setLocalRelayRequestResponse:
localRelayRequestResponse
setRemoteRelayRequestResponse:
remoteRelayRequestResponse
unsignedCharValue
deleteTCPTunnel
createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:
resetICETimeoutToLongTimeout
createRelayUpdateDictionary:
setLocalRelayUpdate:
localRelayUpdate
isEqualToData:
setRemoteRelayConnectionData:
remoteRelayConnectionData
getConnectionDataUsingRelay:isInitialRelay:nonCellularCandidateTimeout:queue:completionHandler:
setRemoteRelayUpdate:
destroySecondaryRelayDispatchTimer
setupSecondaryRelayForCall:callerRequired:
notifyDelegateToCancelRelay
isConnectedAndAllowAdditionalConnection
createInitiateRelayDictionaryForCall:primaryConnection:
createInitiateRelayDictionary
getRemoteICEVersion:remoteICEVersion:
updateInterfaceList:shouldFilterCellInterface:isUpdateNeeded:
localConnectionData
signal
IPPortForPrimaryConnectionOnLocalInterface:
ipPortStillExists:requiresWifi:
getConnectionDataForCallID:version:useCompressedData:pConnectionData:connectDataSizeInBytes:relayDictionary:interfaceUpdate:nonCellularCandidateTimeout:
appendData:
createSecondaryRelayDispatchTimer:callID:callerRequired:
processRemoteInterfaceChangeMessageWithLocalCallID:remoteCallID:remoteData:remoteLen:remoteCandidateVersion:
processRemoteIPChange:dataLength:remoteCandidateVersion:
handleExchangedKey:result:
connectionTypeForConnectionResult:
resetLoopback
setLocalRelayConnectionData:
receivedRealTimeData:fromParticipantID:
setICETimeout:
setupLoopbackWithConnectionType:
getLoopbackIP:
stopLoopbackProc:
numberWithShort:
getRemoteCIDForDstIPPort:callID:
getNextBestCandidate:callID:isLocal:IPPortToExclude:
localRelayConnectionData
connectionDataUsingRelay:isInitialRelay:nonCellularCandidateTimeout:error:
generateConnectionData:forCallID:connectionDataSize:nonCellularCandidateTimeout:
detailedErrorCodeForConnectionWithCallID:
setLocalConnectionData:
initWithTimeIntervalSinceNow:
waitUntilDate:
connectionResultCallback:didReceiveICEPacket:didUseRelay:secretKey:skeResult:
handleNewCandidates:version:
setupInitialSecondaryRelayWithCallbackRelayFlag:callID:connectionId:
setupPendingSecondaryRelayWithNewPrimary:
pendingRelayCount
setPendingRelayCount:
initialSecondaryRelaySetupDone
setInitialSecondaryRelaySetupDone:
allowsRelay
remoteCallID
connectionSetupRTTEstimate
NATType
_localU8Version
relayState
callerPreEmptiveTimeoutInSecs
_connectionSetupRTTEstimate
requestedTimeoutRelay
_isCaller
_didReceivePiggybackBlob
_useLoopback
_isRemoteOSPreLion
_isStarted
relaySetupTimer
transport
_remoteCallID
_NATType
_localRelayRequestResponse
_localRelayUpdate
_remoteRelayRequestResponse
_remoteRelayUpdate
_localConnectionData
_localRelayConnectionData
_remoteConnectionData
_remoteRelayConnectionData
_localParticipantID
_remoteParticipantID
_sessionID
_identity
_tcpTunnelClient
rtChannel
_tunnel
_loopbackConnection
_connectionDataTimeoutCondVar
_interfaceListener
_operatingMode
setEnableDNNVAD:
_samplesPerFrame
_audioUnitType
_vpOperatingMode
_isFarEndVersionInfoValid
_farEndVersionInfo
_remoteCodecType
_remoteCodecSampleRate
_enableDNNVAD
processRTPPacket
processRTCPPacket
allocTextPacket
retrieveRTPPacket:
releaseTextPacket:
splitPacket:packetArray:
validateAndEnqueuePackets:
isSupportedPayload:
enqueuePacket:
allocTextFrame
allocFrameWithPacket:data:dataLength:timestamp:
parsePacket:
didDetectMissingFrame
didReceiveFrame:
receiverThreadCallback:
setLastReceivedRTPPacketTime:
setLastReceivedRTCPPacketTime:
_receiverThread
_jitterBuffer
_lastReceivedRTPPacketTime
_lastReceivedRTCPPacketTime
addNSError:toConferenceXPCArgumentDictionary:
initWithDouble:
copyEncodedDictionary
initWithFloat:
addAssertion
createSIPWithPacketMultiplexMode:
removeAssertion
cleanupVTP
arrayWithArray:
isSIPHandleValid:
conferenceForCallID:
hasVideoConference:
conferenceForParticipantID:
conferenceForSourceDestinationInfo:
pauseVideoConferences:
broadcastCellTechChange:cellularMaxPktLen:
getClientUUID:
activeConference
vcList
_clientUUID
sipLock
sipRefCount
_vtpWrapper
isVTPInitialized
_networkAgent
enablePacketLogging
setAudioSettings:
setVideoSettings:
setScreenSettings:
setBandwidthSettings:
setCaptionsSettings:
setMultiwayAudioStreams:
setMomentsSettings:
setMultiwayVideoStreams:
numberWithUnsignedLongLong:
addBandwidthSettings:
addMultiwayAudioStreams:
addMultiwayVideoStream:
bandwidthSettingsCount
clearBandwidthSettings
bandwidthSettingsAtIndex:
multiwayAudioStreamsCount
clearMultiwayAudioStreams
multiwayAudioStreamsAtIndex:
multiwayVideoStreamsCount
clearMultiwayVideoStreams
multiwayVideoStreamAtIndex:
bandwidthSettingsType
multiwayAudioStreamsType
multiwayVideoStreamType
setAllowDynamicMaxBitrate:
setHasAllowDynamicMaxBitrate:
hasAllowDynamicMaxBitrate
setHasAllowsContentsChangeWithAspectPreservation:
hasAllowsContentsChangeWithAspectPreservation
hasAudioSettings
hasVideoSettings
hasScreenSettings
hasUserAgent
hasBasebandCodec
setHasBasebandCodecSampleRate:
hasBasebandCodecSampleRate
hasCaptionsSettings
hasMomentsSettings
setNtpTime:
setHasNtpTime:
hasNtpTime
setBlobVersion:
setHasBlobVersion:
hasBlobVersion
allowDynamicMaxBitrate
audioSettings
videoSettings
screenSettings
userAgent
basebandCodec
bandwidthSettings
captionsSettings
multiwayAudioStreams
momentsSettings
ntpTime
blobVersion
multiwayVideoStreams
_ntpTime
_audioSettings
_bandwidthSettings
_basebandCodec
_basebandCodecSampleRate
_blobVersion
_captionsSettings
_momentsSettings
_multiwayAudioStreams
_multiwayVideoStreams
_screenSettings
_userAgent
_videoSettings
_allowDynamicMaxBitrate
_allowsContentsChangeWithAspectPreservation
encodingMode
videoPriorityPointer
computeTimestamp:hostTime:forFrame:
setIsServerBasedBandwidthProbingEnabled:
_videoTransmitter
updateInternalParametersWithMode:
updateRoundTripTimeWithStatistics:
updateRedundancyPercentage
_packetLossPercentages
_packetLossThreshold
_packetLossWindowSize
_packetLossPercentageIndex
addRuleForVideoPayload:withDirection:width:height:frameRate:priority:interface:
appendPayload:dimensions:direction:attributeString:
addImageAttributeRules:transportType:payload:direction:attributeString:
addVideoImageAttr:ForPayload:
hasSuffix:
longLongValue
parseImageAttributeRules:
parseAttribute:
fillImageStructWithDictionary:forInterface:imageStruct:
fillImageArray:imageArray:
videoDisplayAttribute:withHeight:
rtpPort
rtcpPort
_attributes
_imageAttributeRules
_payloads
_rtpId
_rtcpPort
_rtpPort
UUID
forceDisableReporting
createSessionMessaging
setupUplinkBitrateCaps
setStreamDelegate:
initWithDelegate:reportingAgent:
initWithReportingAgent:
forceDisableMediaQueue
createMediaQueue
setupRateControllers
setupTransportSessionWithDestination:
setSessionInfoSynchronizerCallbacks
connectionStatsStreamID
initWithConnectionManager:uplinkStatsCollector:downlinkStatsCollector:reportingAgent:transportSessionID:streamID:mediaQueue:
setCellularUniqueTag:
audioStreams
setRtcpReportProvider:
getClientSpecificUserInfo
reportingSessionParticipantEvent:withParticipant:
registerReportingTask
configureWithIsContinuity:
forceDisableMediaPriority
destroySessionMessaging
unregisterReportingTask
sessionStateToString:
remoteParticipants
dispatchedAddParticipantConfigurations:processID:
dispatchedRemoveParticipant:
dispatchedStart
dispatchedStopWithError:
dispatchedUpdateConfiguration:
distributeBitrateAndOptInToStreamIDsWithSeamlessTransition:
currentActiveConnection
setCurrentActiveConnection:
sessionStatsController
handleCellTechChange:connection:
handleCellularMTUChanged:connection:
handleEncryptionInfoEvent:
handleMembershipChangeInfoEvent:
currentUplinkTotalBitrateAudio
currentUplinkTotalBitrateVideo
dispatchedParticipant:didStart:error:
dispatchedParticipant:didStopWithError:
broadcastMessage:withTopic:
mediaStateChangedForParticipant:
reportingSessionRemoteParticipantEvent:withParticipant:value:
remoteVideoDidPause:streamToken:
actualNetworkBitrateVideoDidChangeForClient:
actualNetworkBitrateAudioDidChangeForClient:
sendMessage:withTopic:participantID:
reportingSessionParticipantEvent:withStreamID:
calculateExpectedTotalNetworkBitrateUplink
calculateExpectedTotalNetworkBitrateDownlink
updateUplinkTargetBitrate:
setMediaQueuePeakBitrateWithTargetBitrate:
distributeBitrate:
isEqualToDictionary:
setVCIDSSessionInfoSubscribedStreamIDs:
reportingSessionDownlinkOptInEvent:selectedMediaEntriesForParticipants:
setOptInDictionary:
setSessionInfoSynchronizerErrorResponseCallback
setSessionInfoSynchronizerPeerSubscribedStreamsCallback
transportSession
optInDictionary
downlinkRateController
setErrorResponseCallback:
setPeerSubscribedStreams:
setPeerSubscribedStreamCallback:
maxBitrateWiFiUplink
setUplinkBitrateCapWifi:
maxBitrateLTEUplink
setUplinkBitrateCapCell:
mediaQueueDumpEnabled
mediaQueue
supportedAudioRules
updateSupportedAudioRules:
allParticipantStreamInfo
localSSRC
creationTime
addNewKeyMaterial:
addSecurityKeyMaterial:
pruneSendKeyMaterialWithDelay:
pruneRecvKeyMaterialWithDelay:
reportingSessionParticipantEvent:keyChangeReason:newMKI:
registerMediaStreamNotificationDelegateForParticipant:
addActiveParticipant:
registerForBandwidthAllocationWithClient:
unregisterMediaStreamNotificationDelegateForParticipant:
deregisterForBandwidthAllocationWithClient:
removeActiveParticipant:
initWithTransportSessionID:reportingAgent:
setupAudioEnabledMessages
setupVideoEnabledMessages
setupAudioPausedMessages
setupVideoPausedMessages
setupKeyFrameGenerationMessages
setupSymptomEnabledMessages
stopSessionMessaging
startMessaging
flushActiveMessages
removeAllActiveParticipants
remoteParticipantsMapByServerID
vcSessionParticipant:remoteAudioEnabledDidChange:
vcSessionParticipant:remoteAudioPausedDidChange:
vcSessionParticipant:remoteVideoPausedDidChange:
generateKeyFrameWithReceivedMessage:
sessionMessaging
setNotificationDelegate:
getRTCPReportNTPTimeMiddle32ForReportId:
getExtendedSequenceNumberForSequenceNumber:
didReceiveReportPacket:arrivalNTPTime:
didReceiveCustomReportPacket:arrivalNTPTime:
getRecvKeyMaterialWithIndex:
handleEncryptionInfoChange:
reportingSessionParticipantEvent:withParticipant:keyChangeReason:newMKI:
resetDecryptionTimeout
setEncryptionInfoReceived:
reportingSessionParticipantEvent:withParticipant:keyChangeReason:newMKI:withStreamID:
collectSessionEventKeyFields:eventType:withParticipant:keyChangeReason:newMKI:withStreamID:
numberWithUnsignedInteger:
mediaNegotiator
participantData
detectSSRCCollision:resetNeeded:
setDelegatesForRemoteParticipant:
updateLocalStreamConfiguration
registerRemoteParticipantToSession:
dispatchedAddParticipantWithConfig:processID:
minParticipantCountSendVoiceActiveOnly
setEnableVADFiltering:
removeDelegatesForRemoteParticipant:
unregisterRemoteParticipantFromSession:
setTransportSessionEventHandler
startRateControllers
startLocalSessionStatsUpdate
startSessionMessaging
tearDown
stopAllParticipants
stopLocalSessionStatsUpdate
updateConfigurationWithIsContinuity:
participantsToString
forceMuteAtStart
reportingSessionStopEventWithError:
vcSessionParticipant:didStart:error:
vcSessionParticipant:didStopWithError:
didReceiveRTCPPackets:
mediaStream:didReceiveNewMasterKeyIndex:
vcSessionParticipant:audioEnabled:didSucceed:error:
vcSessionParticipant:videoEnabled:didSucceed:error:
vcSessionParticipant:requestKeyFrameGenerationWithStreamID:
vcSessionParticipantDidChangeSendingStreams:
vcSessionParticipant:didDetectError:
flushBasebandWithPayloads:
optInStreamWithIDSStreamIDs:
optOutStreamWithIDSStreamIDs:
sendSymptomsToRemoteParticipants:symptom:groupID:
setupVideoRedundancyMessages
idsDestination
setRemoteParticipantsMapByServerID:
setSessionMessaging:
_sessionQueue
_notificationQueue
_uuid
_idsDestination
_controlChannel
_sessionMessaging
_localParticipant
_remoteParticipantsMapByUUID
_remoteParticipantsMapByServerID
_reportUpdateInterval
_reportReportFrequency
_sessionStatsController
_startingParticipants
_stoppingParticipants
_initializingParticipants
_securityKeyManager
_currentconnectionType
_currentActiveConnection
_transportSessionID
_localSourceNeedsReset
_useReducedSizeRTCP
_uplinkRateController
_downlinkRateController
_uplinkTargetBitrate
_downlinkTargetBitrate
_uplinkMediaController
_basebandFlushTransactionID
_downlinkBandwidthAllocator
_optInDictionary
_sessionStartTime
_mediaQueue
_forceDisableMediaPriority
_stopError
initWithRelayType:relayIOType:
initializeStateStrings
removeClient:clientArray:eventQueue:
loadRelay
updateStateWithClient:
addStartingClient:controllerFormat:
newRelayIOWithCompletionHandler:
startRelayIO:
unloadRelay
addClient:clientArray:eventQueue:
computeFormat:newClient:
stateIdleWithNegotiatedFormat:client:newState:
statePrepareWithNegotiatedFormat:client:newState:
stateStartingWithNegotiatedFormat:client:newState:
stateRunningWithNegotiatedFormat:client:newState:
sharedInstanceRemoteFacing
sharedInstanceClientFacing
sharedInstanceSafeViewRemoteFacing
sharedInstanceSafeViewClientFacing
_relayType
_relayIOType
_relay
RATType
remoteRATType
maxMTU
relaySessionToken
relaySessionKey
networkType
remoteNetworkType
QRSessionID
linkUUID
worstCaseNetworkOverheadInBytesWithNumOfStreamId:isPriorityIncluded:
sharedDigestKey
connectionQRSessionID
setCellularMTU:
matchesChannelTokenWithSourceDestinationInfo:
datagramChannelToken
_linkContext
_datagramChannelToken
_localCellTech
_remoteCellTech
_connectionMTU
_uplinkBitrateCap
_downlinkBitrateCap
setCameraSwitching:
contentsRect
setContentsRect:
setVideoSourceScreen:
devicesWithMediaType:
position
uniqueID
encodeSize:forKey:
encodeRect:forKey:
decodeSizeForKey:
decodeRectForKey:
videoAttributesWithVideoAttributes:
videoAttributeCameraForCameraUID:
cameraUIDForVideoAttributeCamera:
setBitrateUnstable
getTimestampFromMicroTime:
updateInternalStatus
calculateRoundTripTime
calculatePacketLossWithReceivedPacketCount:packetBurstLoss:
basebandAdditionalTiersForRampUp
checkMediaQueueBitrates
checkStabilizationWithEchoedTimestamp:queuingDelay:
shouldRampDownDueToNOWRD
shouldRampDownDueToNOWRDAcc
_echoedTimestamp
_queuingDelayTimestamp
_receiveTimestamp
_newOWRDSampleCollected
_previousNOWRD
_sendBitrateLimitedStartTime
_stabilizationTime
_rateChangeSystemTime
_lastRampDownTime
_lastPositiveOWRDTime
_isRampUpSettling
_isStable
_inVideoBitrate
_outVideoBitrate
_inAudioBitrate
_outAudioBitrate
_fastRampDownBitrateRange
samplesPerBlock
_isSecondary
_sbr
_samplesPerBlock
getCharTimestampForSystemTime:
updatePayloadHistory:timestamp:payloadType:payload:payloadLength:
startHeartbeat
stopHeartbeat
stringWithCharacters:length:
cStringUsingEncoding:
characterAtIndex:
sendTextFrameWithRedundancy:marker:
heartbeat
_txIntervalMin
_redBuilder
_currentPayloadType
_isIdle
_textFramesSendQueueLock
_textFramesSendQueue
_heartbeat
_idleDuration
_emptyFramesToBeSent
connect
disconnect
didStartProcessingRequestHelperWithResult:
didEndProcessingRequestHelperWithResult:
didFinishRequestHelperWithResult:
momentsServerDidDisconnect:
initWithMediaType:initiatorID:transactionID:
transactionID
unarchivedObjectOfClass:fromData:error:
moments:didStartProcessingRequest:error:
moments:didEndProcessingRequest:url:error:
removeItemAtURL:error:
moments:didFinishRequest:error:
moments:capabilitiesDidChange:
initWithMediaType:initiatorID:
validateWithError:
initiatorID
mediaType
initWithStreamToken:deviceID:delegate:dispatchQueue:
newRequestWithMediaType:
avcMomentsRequestDidStartRequest:withError:
avcMomentsRequestDidEndRequest:withError:
avcMomentsRequestDidRejectRequest:withError:
deviceID
activeRequestCount
pendingRequestCount
_deviceID
_currentPendingRequestsCount
generateStreamID
setupAudioStreamsWithConfigProvider:
setupVideoStreamsWithConfigProvider:
updatePayloadTypesWithConfigProvider:
initializeUplinkVideoStreamController
computeMediaBlob
createParticipantInfo
audioPriorityRampUpSpeed
audioPriorityDecaySlow
audioPriorityDecayFast
audioVoiceDetectionSensitivity
silenceLevelMovingAveragePeriod
forceAudioPriorityValue
forceAudioPriorityEnabled
createOpaqueData
flushAudioEventQueue
flushAudioRedundancyEventQueue
flushVideoRedundancyEventQueue
enableRedundancy:
startVoiceActivityDetection
updateActiveVoiceOnly
registerForVideoCapture
deregisterForVideoCapture
dispatchedUpdateUplinkMediaStreamsWithTargetBitrate:
stopVoiceActivityDetection
audioStreamConfigurations
setupAudioStreamWithConfiguration:
setupAudioStreamWithConfiguration:idsDestination:
startOnDemand
videoStreamConfigurations
setupVideoStreamWithConfiguration:
setupVideoStreamWithConfiguration:idsDestination:
streamIds
setCreationTime:
multiwayAudioStreamConfigs
multiwayVideoStreamConfigs
txPayloadMap
containsStreamWithSSRC:
containsStreamWithIDSStreamID:
audioRuleCollectionWithAudioStreamConfig:
addCallInfoBlobToParticipantInfo:
dataWithPropertyList:format:options:error:
updateActiveAudioStreams:allStreamIds:
processAudioStreamUpdateEvent
processAudioRedundancyChangeEvent
rxMinBitrate
rxMaxBitrate
generateSSRC
setIdsStreamID:
initWithTransportSessionID:ssrc:streamToken:
setupEncodingModeWithVideoStreamConfig:
setEncodingMode:
setVideoPriorityPointer:
checkSubscribedStreamsConsistency:
updateUplinkStreamsForPeerSubscribedStreams:
intersectsSet:
updateActiveAudioStreamWithTargetBitrate:
updateActiveVideoStreamWithTargetBitrate:
calculateUplinkTotalBitrateForMediaStreams:
generateKeyFrameForStreamsWithNewCompoundStreamIDsWithActiveVideoStreams:
isCompoundStreamIDsIncreased
processVideoEventQueue
setFecRatio:
setLastSentAudioSampleTime:
setLastSentAudioHostTime:
processEventQueues
updateAudioPriorityWithSampleBuffer:
updateStreamIDsWithActiveVideoStreams:
applyVideoEnabledSetting:
updateVideoPaused:
stopAudioIOCompletion
isHighPriorityAudioWithPower:voiceActive:
setupVideoStreamConfig:initialConfiguration:
encryptionInfoReceived
uplinkBitrateCapWifi
uplinkBitrateCapCell
enableVADFiltering
peerSubscribedStreams
audioPayloadTypes
videoPayloadTypes
_uplinkBandwidthAllocator
_activeUplinkAudioStreams
_pendingActiveUplinkVideoStreams
_encryptionInfoReceived
_shouldUpdateActiveVideoStream
_currentUplinkTargetBitrate
_audioStreamUpdateEventQueue
_audioRedundancyChangeEventQueue
_videoRedundancyChangeEventQueue
_lastSentAudioSampleTime
_lastSentAudioHostTime
_audioTimestampRWLock
_audioPriority
_connectionStatsStreamID
_uplinkVideoStreamController
_uplinkBitrateCapWifi
_uplinkBitrateCapCell
_audioStreamUpdatePool
_redundancyPool
_videoRedundancyPool
_videoPriority
_shouldResize
_enableRedundancy
_enableVADFiltering
_peerSubscribedStreams
_localPublishedStreams
_averageSilenceAudioPower
_audioPriorityRampUp
_audioPriorityDecaySlow
_audioPriorityDecayFast
_audioVoiceDetectionSensitivity
_audioSilencePowerAverageMultiplier
_forcedAudioPriorityValue
_forcedAudioPriorityLastUpdateTime
_forcedAudioPriorityEnabled
_videoRule
_speechDetected
_voiceDetector
_fecRatio
_audioPayloadTypes
_videoPayloadTypes
_currentUplinkTotalBitrateVideo
_currentUplinkTotalBitrateAudio
readHardwareValues
readStoreBagValues
rangeCheck:
bitrateForStoreBagKey:connectionType:currentBitrate:
maxBitrate2GUplink
maxBitrate3GUplink
maxBitrate2GDownlink
maxBitrate3GDownlink
maxBitrateLTEDownlink
maxBitrateWiFiDownlink
_maxBitrate2GUplink
_maxBitrate2GDownlink
_maxBitrate3GUplink
_maxBitrate3GDownlink
_maxBitrateLTEUplink
_maxBitrateLTEDownlink
_maxBitrateWiFiUplink
_maxBitrateWiFiDownlink
_currentSettings
setStartTime:forKey:
setStopTime:forKey:
controllerForDeviceRole:
initWithDelegate:clientPid:
forceCleanup
releaseConverters
createConverterForSource:error:
computeTimestampForControllerTime:hostTime:endpoint:
setMute:
controllerFormat
_audioIOController
_controllerClient
_loadedDelegate
_clientFormat
_clientSamplesPerFrame
_controllerFormat
_controllerSamplesPerFrame
_isControllerAudioFormatValid
_isControllerReset
_isConverterNeeded
_startCompletionBlock
_stopCompletionBlock
enqueue:
isQueueFull
emptyMessageQueue
dequeue:
processMessage:
isThreadRunning
messageHandler
_thread
_isThreadRunning
_shouldBlockWhenFull
_messageQueue
_firstMessageIndex
_lastMessageIndex
_maxQueueSize
_messageHandler
_queueMutex
_queueNotFullCondition
_queueNotEmptyCondition
locale
initWithDelegate:streamToken:
captionsEnabled
captionsSupported
enableCaptions:
configureCaptions:
clientPid
_isRemoteCodecInfoValid
_isRemoteVersionInfoValid
_direction
isBluetoothDevice
createName
createUID
rangeOfString:options:
isSomethingConnectedToJack
initWithDeviceID:
createNameForScope:
isValidDevice
isValidInputDevice
isBuiltInDevice
allocDeviceControlListAndSize:
getDataSourceControlID
isStreamAvailableForScope:
deviceName
inputAvailable
outputAvailable
isPreferredDevice
_deviceName
_UID
_inputAvailable
_outputAvailable
_preferredDevice
_isBluetoothDevice
_isLineIn
newDeviceList
setArray:
defaultDeviceOfType:
dataSourceControlID
notifyDeviceListChanged
deviceList
setChangeListener:
changeListener
listLock
devices
indexesOfObjectsPassingTest:
objectsAtIndexes:
defaultInputDevice
defaultOutputDevice
deviceForUID:
inputDevices
outputDevices
_internalList
isPacketLossSignificantWithStatistics:
shouldApplyRedundancy
_reasonCode
_currentSSRC
_isPacketLossSignificant
_percentageOfLossyRemoteParticipants
_worstPacketLossPercentage
_averagePacketLossOverLossyParticipants
isConnectedToSession
sharedXPCConnection
participant:audioEnabled:didSucceed:error:
participant:videoEnabled:didSucceed:error:
participant:audioPaused:didSucceed:error:
participant:videoPaused:didSucceed:error:
deregisterFromNotifications
setupNotificationQueue:
setupConfig
setStateVideoEnabled:
newNSErrorWithErrorDictionary:
registerBlockWithUUID:service:block:
setStateAudioEnabled:
participant:remoteAudioEnabledDidChange:
participant:remoteVideoEnabledDidChange:
setStateAudioPaused:
setStateVideoPaused:
participant:remoteAudioPausedDidChange:
participant:remoteVideoPausedDidChange:
participant:prominenceDidChange:
participant:mediaPrioritiesDidChange:
deregisterWithUUID:service:
negotiationData
isAudioMuted
frequencyLevels
setSharedXPCConnection:
setVideoToken:
initWithParticipantID:data:delegate:queue:
stateQueue
setStateQueue:
videoToken
configurationInProgress
setConfigurationInProgress:
hasPendingChanges
setHasPendingChanges:
_idsParticipantID
_participantData
_delegateNotificationQueue
_frequencyLevels
_videoToken
_participantConfig
_audioMuted
_audioEnabled
_audioPaused
_videoPaused
_audioPosition
_configurationInProgress
_hasPendingChanges
eventHandler
isCallActive
perfTimings
_isCallActive
_requiresWiFi
_useCompressedConnectionData
_didRegisterForBasebandNotifications
_basebandNotificationRegistrationToken
_connectionSetupPiggybackBlob
_perfTimings
setCodecType:
setRecommendedMTU:
setCvoExtensionID:
setEnableCVO:
setVideoSource:
_videoResolution
_reportingParentID
_framerate
_txMaxBitrate
_txMinBitrate
_videoPayload
_encodingMode
_videoPriorityPointer
hasReceivedFirstFrame
setHasReceivedFirstFrame:
isVideoDegraded
setIsVideoDegraded:
isMediaStalled
setIsMediaStalled:
localInterfaceType
setLocalInterfaceType:
remoteInterfaceType
setRemoteInterfaceType:
setIsVideoSuspended:
_hasReceivedFirstFrame
_isMediaStalled
_isVideoSuspended
_localInterfaceType
_remoteInterfaceType
cleanupDictionaries
newQueueForStreamToken:videoMode:imageQueueProtected:
releaseQueueForStreamToken:
didReceiveFirstRemoteFrameForStreamToken:
remoteScreenAttributesDidChange:streamToken:
remoteVideoAttributesDidChange:streamToken:
remoteMediaDidStall:streamToken:
connectionDidChangeWithLocalInterfaceType:remoteInterfaceType:streamToken:
doesQueueExistForStreamToken:
slotForStreamToken:videoMode:
notifyCachedStateForStreamToken:
remoteVideoServerDidDie
newQueueForStreamToken:videoMode:
getQueueForStreamToken:videoMode:
_queuesForStreamTokenDict
_stateCacheForStreamTokenDict
_remoteVideoLock
_xpcCallbackQueue
encodeObject:forKey:
decodeObjectForKey:
supportsSecureCoding
bins
_bins
assign:
removeObjectsInRange:
applyChannelBins:
setCanDisplayCaptions:
setHasCanDisplayCaptions:
hasCanDisplayCaptions
setSenderLanguages:
setHasSenderLanguages:
hasSenderLanguages
canDisplayCaptions
senderLanguages
_senderLanguages
_canDisplayCaptions
setupRTPWithIDSDestination:error:
setupRTPWithIPInfo:error:
setupMediaStream
initWithDelegate:handle:localSSRC:
decryptionStatusChanged:
startRTCPSendHeartbeat
startTimeoutHeartbeat
onStop
onStart
stopRTCPSendHeartbeat
stopTimeoutHeartbeat
setupRTPWithSockets:error:
setupRTPWithLocalParticipantInfo:error:
streamDirection
isDecryptionTimeoutEnabled
isRTCPSendEnabled
setRtpTimeoutEnabled:
processRTPTimeoutSettingChange
setRtcpTimeoutEnabled:
processRTCPTimeoutSettingChange
setDecryptionTimeoutEnabled:
processDecryptionTimeoutSettingChange
setRtpTimeoutInterval:
setRtcpTimeoutInterval:
setDecryptionTimeoutInterval:
resetRTCPSendHeartbeatTimer:
generateReceptionReport:reportCount:
rtcpSendInterval
sendIntervalDidElapse:remainingTime:
isRTCPEnabled
rtcpSendHeartbeat
resetTimeoutHeartbeatTimer:
rtpTimeoutInterval
rtcpTimeoutInterval
decryptionTimeoutInterval
checkRTPPacketTimeoutAgainstTime:lastReceivedPacketTime:
computeNextTimoutWithEnabledTime:timeoutInterval:lastReceivedPacketTime:currentTime:lastTimeoutReportTime:
checkRTCPPacketTimeoutAgainstTime:lastReceivedPacketTime:
checkDecryptionTimeoutAgainstTime:decryptionErrorStartTime:
resetTimeoutHeartbeatWithRTPTimeout:rtcpTimeout:decryptionTimeout:currentTime:
timeoutHeartbeat
isSameSRTPKey:newKey:
setDecryptionTimeOutEnabled:
setDecryptionTimeOutInterval:
vcMediaStreamTransport:didReceiveRTCPPackets:
rtcpReportProvider
notificationDelegate
_streamLock
_momentsCollectorDelegate
_isSRTPInitialized
_useRandomTS
_rtpTimeoutEnabledTime
_rtcpTimeoutEnabledTime
_decryptionTimeoutEnabledTime
_rtcpSendHeartbeat
_timeoutHeartbeat
_lastRTPTimeoutReportTime
_lastRTCPTimeoutReportTime
_lastDecryptionTimeoutReportTime
_decryptionErrorStartTime
_localSSRC
_notificationDelegate
_rtcpReportProvider
_transportSetupInfo
_transportArray
_vcMediaCallback
_lastReceivedMKI
initWithHardwareSettings:
_hardwareSettings
deviceClass
getMomentsCapabilitiesForSupportedDevices
chipId
setupServiceConnection
releaseServiceConnection
sendProcessInfoWithProcessID:
sendSubscriptionInfoFaceTimeCalling
sendUnsubscriptionInfoFaceTimeCalling
sendStatusUpdateInfoFaceTimeCalling:
dumpReport:
sendReport:
reportMetricsWifiCalling:
processNotificationList:
_connectionQueue
_wrmClientDelegate
initWithText:confidence:spaceAfter:
confidence
hasSpaceAfter
_confidence
_hasSpaceAfter
stringByReplacingMatchesInString:options:range:withTemplate:
initWithCapacity:utteranceComplete:utteranceNumber:updateNumber:
addTokenWithString:confidence:spaceAfter:
utteranceComplete
tokens
_utteranceComplete
_tokens
setLocale:
_locale
isPrimaryConnectionSameAsConnection:
updatePrimaryWithConnection:
updateSecondaryWithConnection:
addConnectionToConnectionArray:
uplinkBitrateCapForConnectionType:
downlinkBitrateCapForConnectionType:
selectPrimaryAndSecondaryWithConnection:
updateConnectionForDuplication
handleSecondaryConnectionRemoved
optOutAllStreamsForNonPrimaryConnections
handlePrimaryConnectionRemoved
resetPacketCountAndByteCountWithConnection:
handoverWithWRMSuggestion:
shouldReplaceConnection:withConnection:
_connectionArray
_lastTimestampForRemoteSendingFromNonPrimary
_lastTimestampPreferredRemoteInterfaceUpdated
_sentPacketCount
_sentByteCount
_receivedPacketCount
_receivedByteCount
_bitrateArbiter
_isMultiwaySession
initWithKeyFrameInterval:framerate:weightFactor:
compareWeightFactor:
setFramesPerIdrPeriod:
_framesPerIdrPeriod
setFeatureString:
addVideoRuleCollections:
videoRuleCollectionsCount
clearVideoRuleCollections
videoRuleCollectionsAtIndex:
videoRuleCollectionsType
featureString
parameterSet
setParameterSet:
_featureString
_parameterSet
_videoRuleCollections
queue
setQueue:
block
setBlock:
eventLogLevel
setEventLogLevel:
_eventLogLevel
createConnectionToServer
newServerDiedDictionary
closeConnectionToServer
newNSDictionaryFromXPCDictionary:
newNSErrorFromNSDictionary:
sendMessageAsync:arguments:reply:queue:
sendMessageAsync:arguments:xpcArguments:reply:queue:
newXPCDictionaryFromNSDictionary:
connectionPersists
copyConnection
sendMessageSync:arguments:xpcArguments:
AVConferenceXPCClientSingleton
newNSDictionaryFromNSError:
newTimeoutDictionary
sendMessageAsync:
sendMessageAsync:arguments:reply:
sendMessageAsync:arguments:xpcArguments:reply:
registeredBlocks
replyQueue
connectionQueue
initSupportedPayloads
computeEncodingScore
computeDecodingScore
setupRules
encodingScore
canDoHiDefEncoding
hardwareScore
canDecodeHD
canDoHiDefDecoding
addVideoRules:transportType:payload:encodingType:
setupH264WifiRules
setupH264CellularRules
setupH264Rules
useSoftFramerateSwitching
removeVideoRulesWithWidth:height:transportType:encodingType:
isMacBookWVGA
appendVideoRules:transportType:payload:encodingType:
resetEncodingRulesForCameraIsHD:isWVGA:
_encodeScore
_decodeScore
getSendKeyMaterialWithIndex:
getLatestSendKeyMaterial
getLatestRecvKeyMaterial
_sendKeys
_receiveKeys
_latestSendKeyIndex
_latestReceiveKeyIndex
_keyIndexNotReceived
_isSendKeysCleanUpPending
_isReceiveKeysCleanUpPending
_keyManagerQueue
_isKeyIndexNotReceivedReported
_lastKeyIndexNotReceived
_unknownKeyIndexList
setAudioUnitNumber:
setCaptionsSenderLanguages:
setCaptionsReceiverLanguages:
screenRuleCollections
audioUnitNumber
bitrateArbiter
captionsSenderLanguages
captionsReceiverLanguages
callLogFile
_audioSSRC
_videoSSRC
_audioRuleCollection
_screenRuleCollections
_preferredAudioCodec
_audioUnitNumber
_videoFeatureStrings
_captionsReceiverLanguages
_captionsSenderLanguages
_creationTime
setRemoteUserAgent:
setRemoteBasebandCodec:
setRemoteBasebandCodecSampleRate:
_supportsDynamicMaxBitrate
_remoteUserAgent
_remoteBasebandCodec
_remoteBasebandCodecSampleRate
addSecondaryPayload:
setPrimaryPayload:
setDtxPayload:
setRedPayload:
setAllowRecording:
setAllowSwitching:
_remoteSSRC
_allowRecording
_allowSwitching
_primaryPayload
_dtxPayload
_redPayload
addFeatureString:key:
addParameterSet:key:
setIsSupported:
parameterSets
setParameterSets:
_isSupported
_isRTCPFBEnabled
_featureStrings
_parameterSets
localLanguages
setLocalLanguages:
remoteLanguages
setRemoteLanguages:
remoteCanDisplayCaptions
setRemoteCanDisplayCaptions:
_remoteCanDisplayCaptions
_localLanguages
_remoteLanguages
setMultiwayStreamConfig:
_multiwayStreamConfig
isCellular16x9EncodeCapable
setupBandwidthSettingsForMediaBlob:
initWithSSRC:audioRuleCollection:allowAudioRecording:audioUnitNumber:
initWithSSRC:allowRTCPFB:videoRuleCollections:featureStrings:isCellular16x9Capable:
initWithScreenSSRC:allowRTCPFB:videoRuleCollections:featureStrings:isCellular16x9Capable:
setupCaptionsForMediaBlob:
setupMomentsForMediaBlob:
setupMultiwayAudioStreamsForMediaBlob:
setupMultiwayVideoStreamsForMediaBlob:
newCompressedBlob:
printWithTitle:blobSize:logFile:
dumpBlob:prefix:
newDecompressedBlob:
saveRemoteBandwidthSettingsWithMediaBlob:
negotiateAudioSettings:
negotiateVideoSettings:
negotiateScreenSettings:
negotiateCaptionsWithCaptionsSettings:
negotiateMomentsWithMomentsSettings:
negotiateMultiwayAudioStreams:
negotiateMultiwayVideoStreams:
setupAudioWithNegotiatedSettings:
setupVideoWithNegotiatedSettings:
setupScreenWithNegotiatedSettings:
bandwidthConfigurationWithOperatingMode:connectionType:
firstObject
dumpMediaBlob
addBandwidthSettingsForMediaBlob:operatingMode:connectionType:
initWithBytes:length:
newAudioRuleCollection
negotiateAudioUseSBR:audioRuleCollection:
negotiateAudioAllowRecording:
negotiateAudioPrimaryPayload:
negotiateAudioDTXPayload:
negotiateAudioREDPayload:
negotiateAudioSecondaryPayloads:
reverseObjectEnumerator
newVideoRuleCollectionsForScreen:isCellular16x9Capable:
negotiateVideoMaxResolutionWithEncodeRules:decodeRules:isEncoder:
selectVideoFeatureString:selectedPayload:
encodingType
processParameterSets:videoResults:
negotiateRTCPFB:
getPreferredVideoPayloadList:
canEncodeVideo:
canDecodeVideo:
selectBestVideoRuleForTransport:payload:encodingType:localVideoRuleCollection:remoteVideoSettings:negotiatedVideoSettings:isScreen:
getPreferredScreenPayloadList
momentsUserPreferenceEnabled
initWithMultiwayConfig:
newAudioRuleCollectionWithAudioRuleCollection:
initWithMultiwayConfig:isSubStream:
initWithPayload:transportType:encodingType:
negotiationBlobFromData:
isVideoStreamSupported:
negotiatedCaptionsSettings
_usePreNegotiation
_negotiationDone
_isCellular16x9Capable
_localSettings
_negotiatedSettings
_negotiatedAudioSettings
_negotiatedVideoSettings
_negotiatedScreenSettings
_negotiatedCaptionsSettings
_negotiatedMomentsSettings
_negotiatedMultiwayAudioStreams
_negotiatedMultiwayVideoStreams
updateThrottleRate
processFrame:
converter:didConvertFrame:frameTime:droppedFrames:cameraStatusBits:
setDestinationFramerate:
sourceFramerate
destinationFramerate
_destinationFramerate
_sourceFramerate
_throttleRate
_sourceFrameCount
_lastDestinationFrameCount
_isThrottling
updateStatsHistory
updateRatiosForHistory:withIndex:
reportConnectionHealthWithStatsHistory:index:isPeerStats:
resetHistory:
isPrimaryConnectionImprovedFromHistory:withIndex:
isHistoryImproved:currentIndex:
isHistoryValid:
_lastReportedIndex
_currentReceivingStats
_statsHistory
_peerStateRWLock
_peerStatsHistory
initializeStreams
initializeAudioStreams
initializeVideoStreams
streamPayloadFromProviderConfig:
setResolution:
setStartOnDemand:
addPayload:
addSubStreamConfig:
forceEncodeWidth
forceEncodeHeight
forceFramerate
forceKeyFrameInterval
forceBitrate
initializeVideoStreamWithConfig:streamIndex:
initializeAudioStreamWithIndex:supportedAudioRules:
audioRuleCollectionWithAudioConfig:supportedAudioRules:
addSupportedNumRedundantPayload:
setNumRedundantPayloads:
computeMaxNetworkBitrate:maxMediaBitrate:maxPacketsPerSecond:audioStreamIndex:
initializeVideoStreamWithDefaults
highestEncodingResolution
isEncodingSqaures
_allocatedStreamIDs
_audioStreamConfigurations
_videoStreamConfigurations
_highestEncodingResolution
_isEncodingSqaures
dataWithLength:
mutableBytes
fftSetup
dspSplitComplex
sampleHistory
magnitudeBuffer
fftBuffer
windowBuffer
windowHistory
octaveDbOld
octaveDb
octaveDbFilt
lerpIdxs
fftNormFactor
adjust0DB
mediaStreamDelegate
pause
resume
sendDelegate
mediaStreamDelegateQueue
setMediaStreamDelegate:
setMediaStreamDelegateQueue:
_sendDelegate
_mediaStreamDelegate
_mediaStreamDelegateQueue
SRTPCipherSuite
SRTCPCipherSuite
sendMasterKey
receiveMasterKey
onRTCPPacket:arrivalNTPTime:
registerRTCPCallback
unregisterRTCPCallback
isSameSRTPConfig:
setupRTPWithTransportSetupInfo:error:
remoteAddress
port
setupSRTP
cName
registerRTPPayloadMappings
rxNetworkPayloads
cellularUniqueTag
getSRTPMasterKeyLength:
getCryptoSet:withMasterKey:
SRTPCipherSuiteForVCMediaStreamCipherSuite:
setupRTPForIDS:
getKeyDerivationCryptoSet:withKeyMaterial:
isRTPTimeOutEnabled
rtpTimeOutInterval
isRTCPTimeOutEnabled
rtcpTimeOutInterval
isDecryptionTimeOutEnabled
decryptionTimeOutInterval
reportRTCPPackets:
configureForMultiway
_streamConfig
setConnection:
setContext:
setTokenData:
selfTerminateDueToTimeout:
startTimeoutTimer
stopTimeoutTimer
createTimeoutTimer
destroyTimeoutTimer
setPid:
setPersistent:
isPersistent
context
tokenData
_pid
_transaction
_isPersistent
_timeoutTimer
_timeoutTimerQueue
_timeoutTimerStarted
_xpc_remove_connections_from_list
newXPCDictionaryFromNSDictionary:forEvent:
_xpc_get_connection_from_list_for_context:
_xpc_get_connections_from_list_for_context:
_xpc_get_connection_from_list_for_connection:
_xpc_handle_incoming_request:
sendMessageAsync:arguments:xpcArguments:context:
sendMessageAsync:arguments:toAllClientsWithContext:
newClientDiedDictionary
appendPIDToDictionary:pid:
appendContextToDictionary:forConnection:
_xpc_start_listening_for_connections
authorizedTokenData
listener
clientConnections
incomingMessageQueue
outgoingMessageQueue
clientConnectionsQueue
_xpc_add_connection_to_list:
_xpc_remove_connection_from_list:
calculateInterfaceName
parseResults:secondLastLine:
initWithIPAsString:usingWifi:
usingWifi
stddev
ipAsString
interfaceNameToTest
lastReturnedError
parsePingLineForBadInterface:
parsePingLineForBadCommand:
parsePingLineForPLR:
parsePingLineForLatencyStats:
bestVideoRuleForEncodingType:aspectRatio:payload:
preferredAspectRatio
bestVideoRuleForEncodingType:aspectRatio:
isHiDefCapable
getBestPreviewFrameWidth:frameHeight:frameRate:
bitrateConfiguration
_encodeHighDef
_decodeHighDef
arrayWithObject:
_resolution
_subStreamConfigs
applyVideoStreamClientDictionary:
validateClientDictionary:
remoteVideoInitialOrientation
isVideoProtected
setIsVideoProtected:
_rxMaxBitrate
_rxMinBitrate
_remoteVideoInitialOrientation
_isVideoProtected
registeredUUIDServiceBlocks
_registeredUUIDServiceBlocks
_registeredBlocksQueue
addFrame:time:
releaseFrameWithTime:
setEffectsMode:
effectsMode
effectsApplied
setEffectsApplied:
faceMeshTrackingEnabled
setFaceMeshTrackingEnabled:
_effectsMode
_effectsApplied
_faceMeshTrackingEnabled
capDefaultValues:
insertionIndex:forValue:
indexOfObject:inSortedRange:options:usingComparator:
initWithOperatingMode:withBitrateCap:
defaultValueForNetwork:
limits
defaultValue
defaultValueCellular
defaultValue2G
allPossibleCombinations:supportedPacketsPerBundle:redNumPayloads:headerSize:operatingMode:usingCellular:useCaseWatchContinuity:
selectHighestQualityAudioTiers:forBitrateLimits:isHardLimit:
printCreatedAudioTiers:
arrayHasObject:withPayloadType:
supportedBitrates
shouldFilterTierForPayloadConfig:bitRate:packetsPerBundle:operatingMode:redNumPayloads:cellular:
newAudioTierForPayloadConfig:operatingMode:audioCodecBitrate:packetsPerBundle:redNumPayloads:headerSize:
qualityForBitRate:
valueForNetworkBitrate:networkBitrate:
initWithOperatingMode:payloadConfigs:packetsPerBundle:supportedRedNumPayloads:headerSize:usingCellular:useCaseWatchContinuity:defaultMaxCap:
tierForNetworkBitrate:withLegacyDuplication:
tierForNetworkBitrate:withRedNumPayloads:
allAudioTiers
defaultTier
tierTablesForRedNumPayloads
fallbackTier
usingCellular
useCaseWatchContinuity
bitrateLimits
screenWidth
screenHeight
videoEncoderType
hardwareConfigurationForPayload:transportType:
setupVideoRulesForPayload:transportType:encodingType:formatList:formatListCount:preferredFormat:supportsHighDef:
interfaceKey:forInterface:directionKey:forDirection:
videoStreamRateControlAlgorithm
videoStreamRateControlDumpEnabled
createLogDumpFile:
releaseLogDumpFile
minTierIndex:
maxTierIndex:
updateAverageTargetBitrate:interval:
setOperatingTierIndexWithBitrate:
_rateControl
_minBitrate
_maxBitrate
_operatingTierIndex
_previousRTPTimestamp
_averageTargetBitrate
_accumulatedTargetDataSize
_totalTime
_videoFrozenDuration
_didVideoStall
_videoStreamRateControllerQueue
sendUnreliableMessage:sessionID:participantID:transactionDelegate:
isParticipantActive:
addToSentStats:
initWithTransportSessionID:transactionData:participantID:transactionDelegate:
flushTransactions
confirmedTransactionByParticipantID:sessionID:
sendReliableMessage:sessionID:participantID:
_data
_transactionLock
_transactionDone
_isConfirmed
_isFlushed
_weakTransactionDelegate
isEncryptionEnabled
lastUsedMKIBytes
encryptMessage:buffer:size:sequenceNumber:transactionDelegate:
newEncryptedMessageFromMessage:sequenceNumber:transactionDelegate:
removeTransactionForTransactionID:
scheduleAfter:block:
sendConfirmationToParticipantID:transactionID:sessionID:transactionDelegate:
processMessageFromParticipant:transactionID:status:sessionID:transactionDelegate:
initWithSessionID:participantID:transactionDelegate:
flushActiveDialogs
sendReliableMessage:transactionDelegate:
processMessageFromParticipant:transactionID:status:
_transactionID
_transactions
flushReportingStats
decryptMessageWithMKI:message:buffer:size:sequenceNumber:
processEncryptedMessage:sequenceNumber:MKIData:participantID:
sendReliableMessageAndWait:participantID:
controlChannel:clearTransactionCacheForParticipant:
flushRealTimeReportingStats
addToReceivedStats:
messageReceived:participantInfo:
sendReliableMessage:participantID:
sendUnreliableMessage:participantID:
broadcastUnreliableMessage:
setTransportSessionID:
vfdMessage
setVfdMessage:
vfdCancel
setVfdCancel:
dialogs
_vfdMessage
_vfdCancel
_pidReceiveProc
_dialogs
_activeParticipants
_isCCReliableDataNotReceivedReported
_isEncryptionEnabled
_cryptors
_currentSendMKI
_sequentialKeyMaterialQueue
taskIsComplete
setTaskIsComplete:
jitterQueuePushPacket:
releaseTextFrame:
_resetRequested
_preloadQueue
_jitterQueue
_firstFrameReceived
createResizeFrame:transferSession:bufferPool:
pixelBufferPool:matchesWidth:height:
initLock
reallocateBufferWithMaxPacketSize:maxPacketCount:
releaseBundleBuffer
bundleBufferSizeWidthMaxPacketSize:maxPacketCount:
encodedBufferForRFC3640
encodedBufferSizeForRFC3640
accessUnitHeaderSectionSize
accessUnitDataSectionHead
accessUnitHeaderSectionSizeMaximum
bundleAudioLegacy:numInputBytes:payloadType:timestamp:
bundleAudioRFC3640:numInputBytes:payloadType:timestamp:
_copyInputBytes:numInputBytes:payloadType:timestamp:
updatePriority:
initWithOperatingMode:
allocateBundleBuffer:
setMaxPacketSize:
encodedBuffer
encodedBufferSize
isTalkSpurtStart
bundleAudio:numInputBytes:payloadType:timestamp:voiceActivity:priority:
allowLargePackets
isFull
timestamp
setTimestamp:
bundlingScheme
_maxPacketSize
_packetsPerBundle
_timestamp
_encodedBufferSize
_accessUnitDataSectionSize
_bundledPackets
_currentBundleVoiceActivity
_lastBundleVoiceActivity
_accessUnitHeaderInfo
_bundlingScheme
_allowLargePackets
_isFull
_videoIsExpected
_isVideoQualityDegraded
_lastGoodVideoQualityTime
_lastBadVideoQualityTime
_lastVideoQualityDegradedSwitchTime
_firstDegradedMeasure
_videoDegradedThreshold
initWithLocalAddress:networkSockets:IDSDestination:isOriginator:callID:error:
interfaceName
isValidAudioConfig
initWithInteger:
streamDirectionWithClientDirection:
audio
streamDidInterruptionBegin:
streamDidInterruptionEnd:
streamDidServerDie:
stream:didStart:error:
streamDidStop:
stream:didPause:error:
stream:didResume:error:
stream:didStartSynchronizer:error:
streamDidRTPTimeOut:
streamDidRTCPTimeOut:
vcMediaStream:updateInputFrequencyLevel:
vcMediaStream:updateOutputFrequencyLevel:
didInterruptionBeginHandler
didInterruptionEndHandler
stream:didReceiveDTMFEventWithDigit:
stream:didReceiveRTCPPackets:
stream:updateInputFrequencyLevel:
stream:updateOutputFrequencyLevel:
initWithLocalAddress:error:
initWithLocalAddress:callID:error:
initWithLocalAddress:isOriginator:error:
initWithLocalAddress:isOriginator:callID:error:
initWithNetworkSockets:isOriginator:error:
initWithNetworkSockets:isOriginator:callID:error:
initWithIDSDestination:isOriginator:error:
initWithIDSDestination:isOriginator:callID:error:
terminateSession
configure:error:
sendDTMFDigitString:withVolume:duration:interval:
startContinuousDTMFWithDigit:volume:
stopContinuousDTMF
startSynchronizeWithStream:
setRtpTimeOutIntervalSec:
rtpTimeOutIntervalSec
setRtcpTimeOutIntervalSec:
rtcpTimeOutIntervalSec
setRtcpSendIntervalSec:
rtcpSendIntervalSec
registerBlocksForDelegateNotifications
deregisterBlocksForDelegateNotifications
_opaqueStream
sortUsingSelector:
requiredAudioBitrate:highestAudioBitrates:
sortMediaEntries
simultaneousTalkers
updateHighestAudioBitrates:bitrate:
updateClient:bandwidthConstrained:decoderConstrained:
updateSelectedMediaEntriesForClientWithUUID:
reportingSessionParticipantEventBitrateChanged:optedInNetworkBitrate:actualNetworkBitrate:optedInStreamID:actualStreamID:
_clients
_selectedMediaEntriesForClients
_allocatedMediaEntriesForClients
_decoderConstrainedClients
_bandwidthConstrainedClients
_sortedMediaEntries
_maxConcurrentVideoClients
agentDomain
agentType
agentFromData:
copyAgentData
_assertionRefCount
didStartPreview
didPausePreview
didStopPreview
didReceiveFirstPreviewFrameFromCamera:
didReceiveFirstPreviewFrameFromCameraUniqueID:
didChangeLocalVideoAttributes:
didChangeLocalScreenAttributes:
didReceiveErrorFromCameraUniqueID:error:
didReceiveCommError
didGetSnapshot:
cameraDidBecomeAvailableForUniqueID:
cameraDidBecomeInterruptedForForUniqueID:reason:
begin
objectForSlot:
setContents:
commit
name
setLocalVideoLayer:front:
startPreview
connectLayer:withSlot:
startPreviewUnpausing:
pausePreview
stopPreview
isPreviewRunning
getSnapshot
localVideoLayer:
setLocalCamera:
setLocalCameraWithUID:
localCamera
localCameraUID
setLocalVideoAttributes:
localVideoAttributes
beginPreviewToPIPAnimation
endPreviewToPIPAnimation
beginPIPToPreviewAnimation
endPIPToPreviewAnimation
setAnimoji:
setMemoji:
addStickerWithURL:isFaceSticker:atPosition:identifier:
clearAllStickers:
clientWantsPreview
connectionAttempts
caLayerFront
caLayerBack
localScreenPortraitAspectRatio
localScreenLandscapeAspectRatio
avConferencePreviewQueue
avConferencePreviewNotificationQueue
_isPreviewRunning
_localCameraUID
insertStartBlockWithEvent:volume:timestamp:
insertStopBlockWithTimestamp:
constructDTMFEventPacketWithEvent:volume:durationCounter:interval:dataBuffer:isEnd:
dtmfEventQueue
dtmfQueue
currentEventInTransmission
currentEventNeedsEndBlock
currentIsMarker
currentEvent
currentVolume
currentStartTimestamp
currentDurationCounter
currentEndTimestamp
frequencyMeteringEnabled
setFrequencyMeteringEnabled:
_frequencyMeteringEnabled
setupWithSharedSecret:isCaller:error:
convertEncryptedData:toData:encrypted:
registerDataReceivedHandler:forCallID:
maxEncryptedDataSize
maxUnencryptedDataSize
convertData:toEncryptedData:encrypted:
sendData:localCallID:remoteCallID:encrypted:OFTType:
initWithLength:
maxUDPPayloadSize
_localCallID
tlsRecord
_transport
_maxUDPPayloadSize
sessionInfoSynchronizerDelegate
isEqualToArray:
setVCIDSSessionInfoPublishedStreamIDs:
peerSubscribedStreamCallback
peerPublishedStreamCallback
setPeerPublishedStreamCallback:
errorReponseCallback
setErrorReponseCallback:
_peerPublishedStreams
_publishedStreams
_subscribedStreams
_peerSubscribedStreamCallback
_peerPublishedStreamCallback
_errorReponseCallback
_currentParticipantGenerationCounter
_primaryLinkID
_duplicationLinkID
_isSessionInfoErrorResponseReported
_sessionInfoRequestBytesUsed
_sessionInfoResponseBytesUsed
_lastProcessedBytesSent
_bytesSentToReport
_maxSentRate
_minSentRate
_lastProcessedBytesReceived
_bytesReceivedToReport
_maxReceivedRate
_minReceivedRate
_lastUpdateTimestamp
setPrimaryLinkID:
primaryLinkID
setDuplicationLinkID:
duplicationLinkID
initWithTransportSessionID:options:
VCTransportStreamSendPacket:
startLocalSessionStatsReceive
startLocalSessionStatsSend
sendLocalStats
triggerRateControlWithLocalSessionStats:time:
VCTransportStreamUnblock
translateTimestampFromMicro:
receivePacket:
handleRemoteSessionStats:
healthPrintForServerStats
updateRemoteSessionStats:
resetHealthPrintCounters
statsReceiveStatsPayload
_uplinkStatisticsCollector
_downlinkStatisticsCollector
_remoteStats
_localSessionStatsTimemoutSource
_statsRequestCounter
_transportStream
_lastTriggerRateControlTime
_downlinkServerStatsByteUsed
_statsReceiveThread
_statsArrayIndex
_previousTotalPacketSent
_previousTotalPacketReceived
_uplinkMostRecentSendTimestamp
_downlinkMostRecentSendTimestamp
_didReceiveServerStatsResponse
_lastUpdateTime
_lastTimeReceiveStatsFailed
_isReceiveStatsFailedSymptomReported
_statsResponseCounter
_numStatsDroppedDueToStatsID
_numStatsDroppedDueToLinkID
_numStatsProcessed
_numStatsTriggered
_totalStatsTransportStreamQueueTime
_maxStatsTransportStreamQueueTime
_lastHealthPrintTime
setPacketFilter:
startMonitoringFileDescriptor:forConnection:
stopMonitoringFileDescriptor:
receiveDataOnSocket:
sendData:size:error:
isDemuxNeeded
setIsDemuxNeeded:
packetFilter
initWithSocket:remoteAddress:packetFilter:
_isDemuxNeeded
_unixSocket
_isConnectedSocket
_remoteIPPort
_remoteIPPortLength
dataBuffer
_packetFilter
isResumed
setIsResumed:
writeDatagram:datagramSize:flags:completionHandler:
initWithIDSSocketDescriptor:
initWithIDSDestination:
_isResumed
_packetRelayService
connectionWithSocket:
connectionWithSocket:remoteAddress:
connectionWithSocket:remoteAddress:packetFilter:
connectionWithIDSDestination:
connectionWithIDSSocketDescriptor:
initWithConnections:multiplexedConnection:error:
isAllConnectionTypeValid:
findConnectionToForwardData:size:
multiplexedConnection
setMultiplexedConnection:
setConnections:
startAllConnections
packetRelay:didStart:error:
stopAllConnections
packetRelay:didStop:error:
initWithConnection:connection:error:
connections
_packetDriver
_connections
_multiplexedConnection
differenceBetweenRtpTimestamp:rtpTimestamp:
sourceTimeForDestinationRTPTimestamp:
callDestinationAlarmHandlerWithTimestamp:pending:behind:
calculatePlayoutTimeWithRTPTimestamp:
_source
_destinationPlayoutSampleRTPTimestamp
_destinationRTPTimestampWraps
_sourcePlayoutSampleSystemTime
_sourcePlayoutSampleRTPTimestamp
_sourceRTPTimestampWraps
_sourceState
_mediaStreamSynchronizerQueue
_hSoundPlayer
_destinationHandler
isValidTextConfig
initWithNetworkSockets:callID:error:
margin
setMargin:
minSamplesCount
setMinSamplesCount:
minMarginRequired
setMinMarginRequired:
percentage
setPercentage:
durationThresholdUpward
setDurationThresholdUpward:
durationThresholdDownward
setDurationThresholdDownward:
updateQualificationParameters
initializeBandwidthEstimationAtTime:mediaTimestamp:probingSequence:probingSequenceID:
isPacketProcessedLateWithArrivalTime:
resetBandwidthWithParameters:probingSequenceDuration:probingSequenceSize:packetsInProbingSequence:
updateBandwidthEstimation:arrivalTime:
updateInitialBandwidthEstimationForCellularAtTime:bandwidth:
detectSuddenChangeWithBandwidth:suddenChangeAbove:suddenChangeBelow:
compensateSuddenChangeBandwidths
recordSuddenChangeBandwidth:
isSuddenChangeDurationMetAtArrivalTime:
updateBandwidthDivergeCountAtArrivalTime:suddenChangeAbove:suddenChangeBelow:
setEstimatedBandwidthUncapped:
_totalBytesInProbingSequence
_totalPacketsInProbingSequence
_lastPacketInProbingSequenceArrivalTime
_referencePacketArrivalTime
_earlyProbingPacketArrivalTime
_earlyBytesInProbingSequence
_earlyPacketsInProbingSequence
_referencePacketDataSize
_isInitialized
_isFirstBWEstimationReleased
_lastProbingSequenceReferenceTimestamp
_firstDivergeTime
_bandwidthDivergeCount
_suddenChangeBandwidthBufferIndex
_suddenChangeBandwidthBuffer
_overRangePacketsCount
_totalBandwidth
_suddenChangeParameters
_minPacketsCount
_minEstimationWindowDuration
_maxDetectableBandwidth
_maxOverRangePacketsCount
_estimatedBandwidth
_estimatedBandwidthUncapped
_bandwidthEstimationState
_estimatorMap
_currentActiveEstimatorID
encodeFloat:forKey:
decodeFloatForKey:
minFrequency
maxFrequency
powerLevel
_minFrequency
_maxFrequency
_powerLevel
setConfidence:
setHasConfidence:
hasConfidence
setHasSpaceAfter:
setHasHasSpaceAfter:
hasHasSpaceAfter
hasText
unregisterBlocksForService
_clientList
lastFrameTime
setLastFrameTime:
lastRTPTimestamp
setLastRTPTimestamp:
lastKeyFrameSentTime
lastSentAudioHostTime
isServerBasedBandwidthProbingEnabled
_encodingWidth
_encodingHeight
_targetFramerate
_temporaryMaximumBitrate
_latestSampleBufferTimestamp
_lastKeyFrameSentTime
_isServerBasedBandwidthProbingEnabled
setupVTPSocket
relayIDSPacket
stopRelay
initWithIDSSocket:
setConnectionResult:
startRelay
relayVTPPacket
stopVTPReceiveThread
_vtpSocket
_idsSocket
_idsReadSource
_idsReadQueue
_isConnectionResultSet
_vtpDestination
_vtpDestinationLength
_vtpReceiveTID
_stopVTPReceiveThread
newXPCDictionaryWithCVPixelBuffer:depthPixelBuffer:time:
CVPixelBufferFromXPCDictionary:isDepth:
CMTimeFromXPCDictionary:
characterSetWithCharactersInString:
printWithLogFile:
printVideoWithLogFile:
printScreenWithLogFile:
printBandwidthSettingsWithLogFile:
printCaptionsSettingsWithLogFile:
printMomentsSettingsWithLogFile:
printMultiwayAudioStreamsWithLogFile:
printMultiwayVideoStreamsWithLogFile:
setVideoRuleCollections:featureStrings:isScreen:isCellular16x9Capable:
getPayloadSettingsForPayload:
setTransport:
setOperation:
preferredFormat
setPreferredFormat:
formats
setFormats:
addSupportedPayload:
checkAndInsertRuleWithWidth:height:framerate:payload:priority:negotiationBitfield:negotiationBit:rules:isCellular16x9Capable:
operation
parameterSetStringFromPayloadSettings:
hasPreferredFormat
negotiationPayloadFromPayload:
payloadFromNegotiationPayload:
setPayloadFlagsWithAudioRuleCollection:
videoFormatForWidth:height:
videoPayloadForPayload:
isSubStream
convertVideoFormat:width:height:
payloadForVideoPayload:
createEncoderWithInputFormat:
blockSize
startVirtualTTYWithCompletionHandler:
encodeAudio:numInputSamples:outputBytes:numOutputBytes:
_vpioSamplesPerFrame
sessionLock
_currentAudioPayload
_decoder
_charQueue
_characterPool
_textStream
transportAsString:
StringAsTransport:
operationAsString:
StringAsOperation:
setHasPreferredFormat:
_formats
_operation
_preferredFormat
setupMacDecodingOnlyRules
selectPreferredRule:screenSize:
initForMacDecodingOnly
socketWithIPAddress:srcPort:shouldConnect:error:
socketWithIPAddress:srcPort:error:
newEncryptionInfoWithMasterKeyIndex:
connectedSocketWithIPAddress:srcPort:error:
newRTPSocketDictionary:rtpSourcePort:
securityKeyMaterialWithMasterKeyIndex:
initWithCaptureServer:
captureServer
_captureServer
status
initWithURL:fileType:error:
setKey:
setKeySpace:
setValue:
setDataType:
initWithMediaType:outputSettings:
setExpectsMediaDataInRealTime:
addInput:
initWithMediaType:outputSettings:sourceFormatHint:
initWithAssetWriterInput:
assetWriterInput
startWriting
setupInputs
processSampleQueue:input:lastPresentationTime:
markAsFinished
requestMediaDataWhenReadyOnQueue:usingBlock:
isReadyForMoreMediaData
startWritingAtTime:
appendSampleBuffer:
error
initWithItems:timeRange:
appendTimedMetadataGroup:
startSessionAtSourceTime:
appendMetaData
setupInput:queue:dispatchGroup:lastPresentationTime:
finishWritingWithCompletionHandler:
initWithOutputURL:transactionID:
setupWriterWithMode:
startRTPTimeStamp
setStartRTPTimeStamp:
endRTPTimeStamp
setEndRTPTimeStamp:
writerMode
outputURL
setOutputURL:
setupContectRect:withCaptureHeight:
setupAssetWriterWithWidth:height:transactionID:
_lastVideoPresentationTime
_lastLocalAudioPresentationTime
_lastRemoteAudioPresentationTime
_stillImageTime
_assetWriter
_videoInput
_localAudioInput
_remoteAudioInput
_metadataInput
_adapter
_outputURL
_writerMode
_isVideoStarted
_isEndRTPTimestampSet
_startRTPTimeStamp
_endRTPTimeStamp
_writingStarted
_localAudioQueue
_remoteAudioQueue
_serializationQueue
_completionHandler
_contectRect
_visibleWidth
_visibleHeight
startWRM
stopWRM
initWithDelegate:handle:callId:localSSRC:
_wrmClient
_wrmInfo
setFrequencyRange:
internalBundleFactor
evsSIDPeriod
payloadOctetAligned
isDTXEmptyPacket:
forcingBitrate
forceAudioBitrate
resetEncoder
resetEncoderWithSampleBuffer:numBytes:
_bitrate
_shouldReset
forceVideoStreamResolution
forceVideoStreamTxMaxBitrate
forceVideoStreamTxMinBitrate
forceVideoStreamFramerate
forceVideoStreamKeyFrameInterval
forceVideoStreamRxMaxBitrate
forceVideoStreamRxMinBitrate
primaryTxCodecType
enableVPBLogging
enableBitstreamCapture
useUEPForVideoConfig:
enableRecvBitstreamDump
isRateAdaptationEnabled
destroyVideoTransmitter
destroyVideoReceiver
setupVideoStream
supportedVideoPayloads
initVideoTransmitter
updateVideoReceiver:
sendLastRemoteVideoFrame:
validateVideoStreamConfigurations:
overrideConfigWithDefaults
cacheRemoteVideoFrame:
destroyVideoModules
setupVideoReceiver:
arrayByAddingObjectsFromArray:
setupCompoundStreamIDsWithStreamIDs:
localAddress
collectVideoConfigMetrics:
reportingVideoStreamEvent:newVideoAttributes:
reportingVideoStreamEvent:newVideoAttributes:currentStreamID:
collectVideoStreamStartMetrics:
setRTPPayloads:numPayloads:withError:
didReceiveFirstFrame
fecRatio
_lastDecodedFrameQueue
_remoteLayerLock
_localLayerLock
_uplinkOperatingBitrate
_cachedRemoteVideoFrame
_videoReceiver
_captureConverter
_lastMediaPriority
_compoundStreamIDs
_sendingStreamID
_isCompoundStreamIDsIncreased
_didReceiveFirstFrame
bundleHeaderBytes
initWithNetworkBitrate:operatingMode:audioCodecBitrate:packetsPerBundle:redNumPayloads:payloadConfig:
bundlingAppliedByCodecForPayload:operatingMode:
isEqualTo:
_bundlingAppliedByCodec
initWithUUIDString:
registerBlocksForConference
setMessageReceivedDelegate:
setIsSendingEnabled:
initWithTopicKey:strings:allowConcurrent:controlChannel:receiveHandler:
topicKey
sendMessage:
sendMessage:participantID:
rangeOfCharacterFromSet:
isStringAssociated:
passMessage:sequence:fromParticipant:
clearTransactionCacheForParticipant:
newPackedMessageFromMomentsDictionary:
topics
controlChannelWeak
setIp:
setInterfaceName:
setPort:
ipVersion
setIpVersion:
_interfaceName
_ipVersion
setSessionId:
setParticipantId:
_sessionId
_participantId
_idsStreamID
_maxIDSStreamIdCount
_hasRepairedStreamID
_startOnDemand
setupMediaStreamConfig
applyMediaStreamClientDictionary:
shortValue
addRxPayloadType:
addTxPayloadType:
setLocalAddress:
setRemoteAddress:
setCName:
rtcpRemotePort
setRtcpRemotePort:
setSendMasterKey:
setReceiveMasterKey:
setSRTPCipherSuite:
setSRTCPCipherSuite:
setRateAdaptationEnabled:
_localAddress
_cName
_remoteAddress
_sendMasterKey
_txPayloadMap
_receiveMasterKey
_rxPayloadMap
_SRTPCipherSuite
_rtpTimeOutEnabled
_rtpTimeOutInterval
_decryptionTimeOutEnabled
_decryptionTimeOutInterval
_cellularUniqueTag
_rtcpEnabled
_rtcpSendInterval
_SRTCPCipherSuite
_rtcpTimeOutEnabled
_rtcpTimeOutInterval
_rtcpRemotePort
_multiwayConfig
deriveAspectRatioFLS
retrieveRawFeaturesStringWithType:
copyObjectForKey:p2pID:
setObject:forKey:forP2PID:
allCalls
sendMessage:participantID:withSequence:numRetries:
isSendingEnabled
associatedStrings
allowConcurrent
outMessageQueue
inMessageQueue
receiveBlock
latestOutgoingMessageIndex
shouldEncodeTopicKeyInMessage
topicPrefix
transactionCache
_isUplinkRecentlyCongested
channels
sourceType
_channels
_sourceType
convertAndScalePixelBuffer:toWidth:toHeight:withPixelFormat:usingPixelBufferPool:andStoreTo:
_tempBuffer1
_tempBuffer2
_tempBufferWidth
_tempBufferHeight
_stream
_streamConfigs
auNumber
localizedCaseInsensitiveCompare:
supportsDynamicContentsRectWithAspectPreservation
isPreLionOS
setIsVideoQualityDegraded:
visibleRectCropping
setVisibleRectCropping:
u8Version
OSVersion
lastGoodVideoQualityTime
lastBadVideoQualityTime
lastVideoQualityDegradedSwitchTime
is4x
firstDegradedMeasure
videoDegradedThreshold
_frameworkVersion
_osVersion
_deviceType
setStarted:
meterServerDidDisconnect
delegateQueue
meterServerDidDisconnect:
unarchivedObjectOfClasses:fromData:error:
initWithConfig:delegate:queue:
registerPowerSpectrumForStreamToken:
unregisterPowerSpectrumForStreamToken:
sessionToken
_sessionToken
isLoaded
addObserverForName:object:queue:usingBlock:
startBagLoad
verifyRequiredKeys:withError:
checkKeysAgainstHardcodedPrefs:
retrieveBag
waitForBagLoad
isLoadedCondition
isLoadedMutex
updateRedundancyPercentageWithPLRThresholds:
_packetLossPercentageIncreaseThresholds
_packetLossPercentageDecreaseThresholds
_isPacketLossIncreasing
_packetLossPercentageThreshold
_burstLossPacketCount
basePeriodCount
_basePeriodCount
controlInfoGenerator
afrcHandle
chosenAudioPayload
chosenDTXPayload
chosenRedPayloadType
isUseCaseWatchContinuity
supportsAdaptation
inputFormat
includeRedSequenceOffset
transmitROC
ignoreSilence
needsPacketThread
streamIDs
tierNetworkBitrate
_rtpVideo
_afrcHandle
_audioPayloads
_chosenAudioPayload
_chosenDTXPayload
_useRateControl
_supportsAdaptation
_chosenRedPayloadType
_redEnabled
_includeRedSequenceOffset
_redNumPayloads
_redMaxDelay20ms
_transmitROC
_needsPacketThread
_inputFormat
_ignoreSilence
_streamIDs
_tierNetworkBitrate
_supportedNumRedundantPayload
endWithError:
rejectWithError:
_initiatorID
_mediaType
setupCodecWithClientDictionary:
setupCNCodecWithClientDictionary:
setupDTMFCodecWithClientDictionary:
setAudioStreamMode:
setPtime:
maxPtime
setMaxPtime:
setLatencySensitiveMode:
setEnableMaxBitrateOnNoChangeCMR:
_ptime
_maxPtime
_audioStreamMode
_latencySensitiveMode
_codecConfigurations
_numRedundantPayloads
_enableMaxBitrateOnNoChangeCMR
_forceEVSWideBand
setCurrentTranscription:
currentTranscription
_captionsLastUtteranceNumber
_captionsLastUpdateNumber
_currentTranscription
_currentRedundancyInterval
shouldDisplayVideoInfoLayer
setVideoLayer:forMode:
terminateConnection
cleanupSubLayerForMode:
insertSubLayerInLayer:videoMode:videoSlot:
remoteVideoClientDidReceiveFirstFrame:
remoteVideoClient:remoteScreenAttributesDidChange:
remoteVideoClient:remoteVideoAttributesDidChange:
remoteVideoClient:remoteVideoDidPause:
remoteVideoClient:remoteMediaDidStall:
remoteVideoClient:videoDidDegrade:
remoteVideoClient:videoDidSuspend:
remoteVideoClientDidReceiveLastFrame:
remoteVideoServerDidDie:
sublayers
layer
addSublayer:
setBounds:
setPosition:
setTransform:
setContentsGravity:
setName:
setMasksToBounds:
subLayerRefForMode:
removeFromSuperlayer
setFontSize:
setWrapped:
setForegroundColor:
connectionTypeString
setString:
setAlignmentMode:
subLayerForMode:
setActiveVideoLayerForMode:
setConnectionTypeString:
drawText:inSubLayer:
containsString:
slotForMode:
insertInfoSubLayerIntoLayer:videoMode:
updateConnectionInfoWithLocalInterfaceType:remoteInterfaceType:
hasReceivedLastFrame
setHasReceivedLastFrame:
setShouldDisplayVideoInfoLayer:
_primaryCameraLayer
_secondaryCameraLayer
_screenLayer
_primaryCameraSubLayer
_secondaryCameraSubLayer
_screenSubLayer
_activeVideoMode
_hasReceivedLastFrame
_shouldDisplayVideoInfoLayer
_slotsForModes
_connectionTypeString
_avcRemoteVideoQueue
initWithBitrate:connectionType:limitingRule:
setConnectionType:
_connectionType
readStoreBagValues:
readCarrierBundleValues
createSupportedBitrateRuleSets
maxAllowedBitrateForConnection:
maxAllowedScreenShareBitrateForConnection:
maxAllowedBitrate2G
maxAllowedBitrate3G
maxAllowedBitrateLTE
maxAllowedBitrateWifi
_maxAllowedBitrate
_maxAllowedBitrate2G
_maxAllowedBitrate3G
_maxAllowedBitrateLTE
_maxAllowedBitrateWifi
_maxAllowedScreenShareBitrate2G
_maxAllowedScreenShareBitrate3G
_maxAllowedScreenShareBitrateLTE
_maxAllowedScreenShareBitrateWifi
_maxAllowedAudioOnlyBitrate2G
_maxAllowedAudioOnlyBitrate3G
_maxAllowedAudioOnlyBitrateLTE
_maxAllowedAudioOnlyBitrateWifi
supportedBitrateRules
resetHistory
isStatsElementOutOfOrder:
handleWrappedAroundByteCountForStats:
getStatsHistoryElementIndex:time:inMostRecentDuration:
_statsHistorySize
_currentStatsHistoryIndex
_lastStats
_currentLinkID
_lastHistoryNotEnoughLogTime
logFilename:dumpID:logNameType:prefix:suffix:
stringByDeletingLastPathComponent
fileExistsAtPath:isDirectory:
getDefaultLogDumpPath
removeOldFilesInDefaultLogDumpPath
contentsOfDirectoryAtPath:error:
localizedDescription
sortedArrayUsingComparator:
filesSortedByTimestamp:
removeItemAtPath:error:
setDay:
currentCalendar
dateByAddingComponents:toDate:options:
removeFilesInDirectory:olderThan:
clientSessionModeWithSessionMode:
sessionModeWithClientSessionMode:
setUpWithDictionary:
_maxBufferCount
forceRedMaxDelay
initAudioValues
redundancyControllerModeForOperatingMode:isRedEnabled:
forceRedNumPayloads
setupAudioHeaderSize
setupAudioTierPicker
logTierInfo:
setupAudioEncoders
maximumSamplesPerFrame
allocateLastInputSampleBuffer:
sentAudioBytes
usedAudioPayloadForType:
removeUnusedAudioPayloads
encodeAudio:numInputSamples:outputBytes:numOutputBytes:withPayload:isTalking:
bundleAndSendSamples:numEncodedBytes:withPayload:timeStamp:bufferedSamples:hasNewSamples:voiceActivity:priority:
encodeBundleAndSendAudio:sampleCount:
shouldUseDtx
useAudioPayload:withBitrate:
updateAudioTxBitrate
useAudioTier:
setRedNumPayloads:withMaxDelay:
reportRedundancyConfigChange
sendAudioPacket:payloadLength:payloadType:timestamp:priority:marker:nextInterval:padding:paddingLength:sendReport:
chooseAudioNetworkBitrate
nextAudioInterval:
sendAudioBundle:atTimeStamp:nextInterval:
sendAudioPacketImpl:bytesSent:
generateControlInfo
sendAudioPacket:
qualityIndicator
setQualityIndicator:
setCurrentChannelMetrics:
_audioBundler
_redundancyController
_encodeBuffer
_lastIsTalking
_lastTierSwitch
_audioInterval
_audioTierChangeRequestCount
_audioTxBitrate
_actualAudioSendingBitrate
_inputMeter
_blockSize
_blockSeconds
_lastUpdateQualityIndicator
_qualityIndicator
_audioTierPicker
_currentAudioTier
_requestedAudioTier
_lastInputSampleBuffer
_lastInputSampleBufferSize
_audioHeaderSize
_audioTierHysteresis
_currentTargetBitrate
_currentDuplication
_redundancyControllerNumPayloads
_redundancyControllerMaxDelay20ms
_isAudioStalled
_sentAudioBytes
_totalTxAudioBytes
_estimateTxAudioBytes
_audioFrameCounter
_silenceFrameCounter
_vadSegmentCounter
_afrc
_currentDTXPayload
_currentAudioCap
_lastReportingCallbackTime
_currentChannelMetrics
_idsChannelDataFormat
_clientVersion
registerForNotifications
unregisterForNotifications
handleTelephonyNotification:withInfo:
handleVocoderNotificationWithInfo:
translateVocoderTypeToCoreAudioType:
initWithMode:error:streamToken:
device:didStart:error:
deviceDidStop:
device:didReceiveCharacter:
device:didReceiveText:
initWithStreamToken:error:
initWithMode:error:
setupEncodeProperties:
createSupportedBitrates
aacBitrate
createSupportedBitratesForAACELD
createSupportedBitratesForOpus
createSupportedBitratesForAMR8k
createSupportedBitratesForAMR16k
createSupportedBitratesForEVS
_codecSampleRate
_inputSampleRate
_codecSamplesPerFrame
_inputSamplesPerFrame
_internalBundleFactor
_bundleHeaderBytes
_supportedBitrates
_forcingBitrate
_isDTXEnabled
_evsSIDPeriod
_payloadOctetAligned
_vtpReceiveSocket
_vtpCancelSocket
generateAudioOnlyBandwidthAllocationTable
generateAudioVideoBandwidthAllocationTable
generateAudioOnlyBandwidthAllocationTableWithRedundancy
generateAudioVideoBandwidthAllocationTableWithRedundancy
generateAudioOnlyBitrateToStreamIDsTable
generateVideoOnlyBitrateToStreamIDsTable
generateAudioVideoBitrateToStreamIDsTable
newAggregateTableWithAudioTable:videoTable:isVideoEnabled:isRedundancyEnabled:
printTable:
newBitrateToStreamIDsTableWithAudioTable:videoTable:
audioVideoBitrateToStreamIDsTable
audioOnlyBitrateToStreamIDsTable
videoOnlyBitrateToStreamIDsTable
_aggregatedAudioOnlyTable
_aggregatedAudioVideoTable
_aggregatedAudioOnlyTableWithRedundancy
_aggregatedAudioVideoTableWithRedundancy
_audioTable
_videoTable
_audioOnlyBitrateToStreamIDsTable
_audioVideoBitrateToStreamIDsTable
_videoOnlyBitrateToStreamIDsTable
_streamIDToEntryTable
resetEffectsLogging
effectsArray
removeObjectIdenticalTo:
renderPixelBuffer:time:
capturedPixelBuffer:depthBuffer:time:imageData:toClient:
encodeProcessedPixelBuffer:time:imageData:processTime:
sharedManager
isEffectsOn
isFaceMeshTrackingEnabled
updateThermalLevel:
capturedPixelBuffer:depthDataPixelBuffer:time:imageData:
checkEffectsHealth
effectsRegistered:
setEffectsArray:
_effectsArray
_effectsRegistered
_loggingLock
_lastPrintTimestamp
_lastReceivedTimestamp
_lastSentTimestamp
_consecutiveDroppedFrameCount
_cameraFrameCount
_sentFrameCount
_receivedFrameCount
_droppedFrameCount
_failedFrameCount
_effectsTimeoutThreshold
_thermalPressureLevel
audioFormat
setAudioFormat:
blockSizeSamples
setBlockSizeSamples:
clientCaptureBlock
setClientCaptureBlock:
clientRenderBlock
setClientRenderBlock:
_audioFormat
_blockSizeSamples
_canProcessAudio
_clientCaptureBlock
_clientRenderBlock
initWithCaptureBlock:renderBlock:
_internal
booleanValueForKey:defaultValue:
booleanValueForKey:
integerValueForKey:
forceScreenHWI
forceMultiwayHWI
forceDisableThermal
seperateString:
forceCaptureWidth
forceCaptureHeight
forceEncodeFramerate
forceARCapture
forceMirroredCapture
forceEnablePearlCamera
forceThermalLevelFramerate:
enableTxSourceYuvDump
enableTxBitstreamDump
extraPayloads
bundleAudio
forceAudioHardwareSampleRate
forceUseFloat
cannedReplayEnabled
max2GRate
maxActiveVideoEncoders
maxActiveVideoDecoders
forceVisibilityIndex
enableAudioDumpParticipantRemote:
enableAudioDumpParticipantLocal:
multiwayAudioNetworkBitrateCapWifi
multiwayAudioNetworkBitrateCapCellular
forceDynamicEffectsFramerate
depthFrameRateMultiplier
forceDisableMediaStalled
shouldOverrideEffectsFramerate:
forceDisableMediaEncryption
_forceCaptureWidth
_forceCaptureHeight
_forceEncodeWidth
_forceEncodeHeight
_forceEncodeFramerate
_forceFramerate
_forceBitrate
_forceVideoPayload
_forceRecvVideoPayload
_forceKeyFrameInterval
throwNotSupportedExceptionForMethod:
_messageReceivedDelegate
_bytesSent
_bytesReceived
_asyncProcessingQueue
setInfo:size:type:
hasInfoType:
getInfo:bufferLength:infoSize:type:
serializeToBuffer:bufferLength:blobLength:
dispose
serializedSize
_bitmap
_serializedSize
_controlInfoCVO
handleOptionalControlInfo:
_controlInfoFeedback
_controlInfoMediaQueue
_controlInfoStats
_controlInfoReceivedKbits
_controlInfoReceivedPackets
_controlInfoAudioPacketSize
_controlInfoAudioTimestamp
_controlInfoArrivalTime
_controlInfoCameraStatus
_controlInfoLTRBits
_controlInfoLTRTimestamp
_controlInfoFEC
_controlInfoFECLength
_controlInfoProbe
_controlInfoVideoPacketSize
_controlInfoVideoTimestamp
_controlInfoVideoArrivalTime
_controlInfoROC
_controlInfoMKI
onPlayVideo:frameTime:cameraStatusBits:
processBlackFrame:
onCaptureFrame:audioTS:audioHT:videoHT:droppedFrames:cameraBits:
parameterSetForPayload:
computeVisibleAspectRatioWithRemoteScreenAspectRatio:remoteExpectedAspectRatio:encodeWidth:encodeHeight:
initializeVideoTransmitter:encodeRule:captureRuleWifi:captureRuleCellular:unpausing:reportingAgent:
initializeVideoReceiver:reportingAgent:
updateVideoQualityNotification:
processResolutionChangeToVideoRule:captureRule:featuresListString:
callAlarmsWithRTPTimeStamp:
addParticipants:
validateParticipantToAdd:
session:addParticipant:didSucceed:error:
session:removeParticipant:didSucceed:error:
removeParticipants:
validateParticipantToRemove:
session:didStart:error:
remoteParticipantsMap
sessionServerDidDisconnect:
participantsToAdd
xpcConnection
session:didUpdate:configuration:error:
session:didDetectError:
session:frequencyLevelsDidChange:
session:audioEnabled:didSucceed:error:
session:videoEnabled:didSucceed:error:
session:audioPaused:didSucceed:error:
session:videoPaused:didSucceed:error:
initWithTransportToken:configuration:delegate:queue:
addParticipant:
beginParticipantConfiguration
endParticipantConfiguration
participant:frequencyLevelsDidChange:
_remoteParticipants
_participantsToAdd
_transportToken
_activeConfigurationCount
initWithLocalAddress:networkSockets:IDSDestination:callID:error:
isValidVideoConfig
stream:didUpdateVideoConfiguration:error:
stream:didGetLastDecodedFrame:
stream:downlinkQualityDidChange:
extractClientDownlinkQualityInfoDictionary:
stream:uplinkQualityDidChange:
extractClientUplinkQualityInfoDictionary:
video
initWithIDSDestination:callID:error:
updateVideoConfiguration:
getStats
setTxIntervalMin:
maxNetworkBitrateMultiwayAudioOnWifi:
maxNetworkBitrateMultiwayVideoOnWifi:
_encodingType
supportedVideoSizesForKey:
filterRules:byBitrateRule:
supportedVideoRulesSyncForTransportType:payload:encodingType:
supportedVideoRulesSizesForBitrate:transportType:payload:encodingType:
callStreamDelegateWithBlock:
startAudioStreams
startVideoStreams
streamsToString
processStartedStream:didStart:
allStartingStreamsStarted
processStoppedStream:
allStoppingStreamsStopped
allResumingStreamsResumed
allPausingStreamsPaused
isAnyStreamRunningOrPaused
stopAudioDump
processResumedStream:didResume:
processPausedStream:didPause:
stopAudioStreams
participantStateToString:
stopVideoStreams
pauseAudioStreams
resumeAudioStreams
pauseVideoStreams
resumeVideoStreams
dataWithCapacity:
startAudioDump
stopAudioStreamsCompletion
isAudioStream:
shouldStartAudioIO
startAudioIO
isVideoStream:
generateEncryptionKey
setupNetworkAddressesForMediaConfig:
configureAudioIOWithContinuity:
dispatchedStop
dispatchedSetAudioEnabled:
dispatchedSetVideoEnabled:
dispatchedSetAudioPaused:
dispatchedSetVideoPaused:
createRedundancyControllers
dispatchedStream:didStart:error:
dispatchedStreamDidStop:
dispatchedStream:didPause:error:
dispatchedStream:didResume:error:
sendAudioPowerSpectrumSourceRegistration:
streamDelegate
setLocalOnWiFi:
_participantQueue
_streamDelegate
_participantVideoToken
_sessionUUID
_opaqueData
_callInfoBlob
_mediaBlobCompressed
_participantInfo
_supportedAudioRules
_isContinuity
_startingAudioStreams
_stoppingAudioStreams
_runningAudioStreams
_pausingAudioStreams
_resumingAudioStreams
_pausedAudioStreams
_startingVideoStreams
_stoppingVideoStreams
_runningVideoStreams
_pausingVideoStreams
_resumingVideoStreams
_pausedVideoStreams
_audioStreams
_streamMap
_audioPausedToStart
_videoPausedToStart
_audioStateChangeInProgress
_videoStateChangeInProgress
_audioIOStateChangeInProgress
_powerSpectrumSource
_localOnWiFi
_audioRedundancyController
_videoRedundancyController
preferredSampleRate
preferredBlockSize
setPreferredBlockSize:
setPreferredSampleRate:
setOutputFormat:
setProcessId:
setSessionActive:
_preferredSampleRate
_preferredBlockSize
_outputFormat
_sessionActive
setIsIPv6:
isAudioCodecValid
txPayloadType
rxPayloadType
clientStreamDirectionWithDirection:
clientCipherSuiteWithCipherSuite:
dictionaryForCommonStreamConfig:
isRTCPXREnabled
cipherSuiteWithClientCipherSuite:
setTxPayloadType:
setRxPayloadType:
setRtcpXREnabled:
setAudio:
setVideo:
_txPayloadType
_rxPayloadType
_rtcpXREnabled
_audio
_video
isDTMFValid
isCNValid
isRedValid
dtmfPayloadType
isCNEnabled
cnPayloadType
txRedPayloadType
rxRedPayloadType
clientStreamModeWithStreamMode:
clientCodecTypeWithCodecType:
clientCodecRateMaskForCodecRateMode:
clientCodecRateModeForCodecRateMode:
streamModeWithClientStreamMode:
codecRateMaskForClientCodecRateMode:
codecRateModeForClientCodecRateMode:
codecTypeWithClientCodecType:
setCnEnabled:
setCnPayloadType:
setDtmfPayloadType:
dtmfTimestampRate
setDtmfTimestampRate:
channelAwareOffset
setChannelAwareOffset:
isOctectAligned
isHeaderFullOnly
setHeaderFullOnly:
codecRateModeMask
setCodecRateModeMask:
preferredCodecRateMode
setPreferredCodecRateMode:
setTxRedPayloadType:
setRxRedPayloadType:
_cnEnabled
_cnPayloadType
_dtmfPayloadType
_dtmfTimestampRate
_channelAwareOffset
_codecRateModeMask
_preferredCodecRateMode
_headerFullOnly
_txRedPayloadType
_rxRedPayloadType
txCodecType
rxCodecType
clientVideoResolutionFromResolution:
videoResolutionFromClientResolution:
setTxCodecType:
setRxCodecType:
_txCodecType
_rxCodecType
stopWCMClient
startWCMClient
wcmClientDelegate
setWcmClientDelegate:
subarrayWithRange:
stringToMediaType:
fieldName
_lines
_lineEnumerator
_fieldNameMap
_fieldName
_fieldValue
_fieldType
_parsingDone
iceConnectedForCallID:result:didReceivePacket:useRelay:secretKey:skeResult:
iceNewCandidatesForCallID:blob:size:newCandidateVersion:
iceShouldNominateNewCandidate:forCallID:interfaceMask:nominated:demote:connectionPriority:replaceOnly:
iceRemoveIPPort:forCallID:isLocalInterface:
receivedDataPacket:length:forCallID:encrypted:OFTType:
discardRelayBindingForCallID:withChannelNumber:
setupDTLSSecurity:connectionResult:completionHandler:
sendUDPPacketReliableEncrypted:localIPPort:destinationIPPort:oftType:
updateQoS:
setARPLHandler:
tpHandle
iceBlocks
dataReceivedHandlers
dataReceivedHandlerQueue
initializeAudioSessionQ
resetAudioSessionOutputPortOverride
setDeviceList:
logPrefix
T@"NSString",&,N,V_logPrefix
reportingAgent
T^{opaqueRTCReporting=},N
v4@?0
%@ %@
ssrc
maxNetworkBitrate
payload
streamID
metadata
qualityIndex
supportedVideoFormats
frameRate
keyFrameInterval
maxMediaBitrate
maxPacketsPerSecond
repairedStreamID
repairedMaxNetworkBitrate
TI,N,V_ssrc
hasMaxNetworkBitrate
TB,N
TI,N,V_maxNetworkBitrate
TI,N,V_payload
TI,N,V_streamID
hasMetadata
TI,N,V_metadata
TI,N,V_qualityIndex
TI,N,V_supportedVideoFormats
TI,N,V_frameRate
TI,N,V_keyFrameInterval
hasMaxMediaBitrate
TI,N,V_maxMediaBitrate
hasMaxPacketsPerSecond
TI,N,V_maxPacketsPerSecond
hasRepairedStreamID
TI,N,V_repairedStreamID
hasRepairedMaxNetworkBitrate
TI,N,V_repairedMaxNetworkBitrate
NOT SET
IDLE
STARTED
RUNNING
-[VCAudioManager getPreferredFormat:blockSize:vpOperatingMode:forOperatingMode:deviceRole:suggestedFormat:]
com.apple.AVConference.audiomanagerqueue
-[VCAudioManager setMicrophoneMuted:]_block_invoke
-[VCAudioManager processEventQueue:clientList:]
%s: Iterations=%d
-[VCAudioManager flushEventQueue:]
-[VCAudioManager _cleanupDeadClients]
-[VCAudioManager newAudioUnitPropertiesWithClient:]
-[VCAudioManager startAUIOWithProperties:]
startAudioIO
-[VCAudioManager shouldResetAudioUnitWithProperties:]
-[VCAudioManager shouldResetAudioSessionWithProperties:]
-[VCAudioManager stopAUIO]
-[VCAudioManager addSourceClient:]
-[VCAudioManager removeSourceClient:]
-[VCAudioManager addSinkClient:]
-[VCAudioManager removeSinkClient:]
-[VCAudioManager stateSessionStartedWithAudioUnitProperties:sessionProperties:client:newState:]
-[VCAudioManager stateRunningWithAudioUnitProperties:sessionProperties:client:newState:]
-[VCAudioManager updateStateWithAudioIOClient:]
-[VCAudioManager startClient:]
Controller doesn't support client role: %d
-[VCAudioManager startClient:]_block_invoke
Controller request denied: client (%p) is alread started
Client (%p) failed to start
-[VCAudioManager stopClient:]
Controller request denied: client (%p) is not running
Client (%p) failed to stop
-[VCAudioManager updateClient:]_block_invoke
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
currentAudioSessionMediaProperties
T@"VCAudioSessionMediaProperties",&,N,V_currentAudioSessionMediaProperties
currentAudioUnitProperties
T@"VCAudioUnitProperties",&,N,V_currentAudioUnitProperties
currentInputDevice
T@"AVAudioDevice",&,N,V_inputDevice
currentOutputDevice
T@"AVAudioDevice",&,N,V_outputDevice
microphoneMuted
TB,N,GisMicrophoneMuted,V_isMicrophoneMuted
isInDaemon
TB,N,V_isInDaemon
isGKVoiceChat
TB,N,V_isGKVoiceChat
speakerPhoneEnabled
TB,N,GisSpeakerPhoneEnabled,V_isSpeakerPhoneEnabled
LogProfileTimeOverLimit
AVCRC
-[AVCRateController initWithDelegate:dumpID:forSimulation:isUplink:reportingAgent:]
enabled
disabled
v132@?0{?=id(?={?=IIIIIdddd[64c]}{?=IIIIIII}{?=dIIIIIQ}{?=IBBBIIdI}{?=CIIIIIIIIIdddIII}{?=IId}{?=IIId}{?=IIII}{?=IIIII}{?=IIIIBIII})}4
-[AVCRateController configure:]
v8@?0^v4
ULPLR
RTTUL
ULTBR
ULSBR
ULBWE
ULTBSNT
ULTPRC
ULTPST
DLTPRC
DLPLR
RTTDL
DLTBR
DLRBR
DLBWE
DLTBRCVD
TTxR
%5.1f
BbTx
InTxR
-[AVCRateController setTargetBitrateCap:]
-[AVCRateController setEstimatedBandwidthCap:]
%@:%@
-[AVCRateController initialBitrateTierFromLearntBitrateWithLocalTechnology:remoteTech:defaultTier:]
-[AVCRateController loadDefaultSettings]
VCRC-UL
VCRC-DL
VCRateControl
.afrcdump
com.apple.VideoConference.AFRClog
STime
dTime/ETxTS
OWRD
NOWRD
NOWRDS
NOWRDA
PLR/FEC
BR/TR
MQIn: A/V
MQOut: A/V
ABRL
TxAT
MODE
TxSTATE
.fbdump
com.apple.VideoConference.AFRClogFB
MyTxTS
QDelay
RemoteBWE
BurstLoss
RecvPkt
RemoteTxTS
OWRD
TxTS
RxTS
LinkID
TxPkt
RxPkt
TxByte
RxByte
OWRD
.bbdump
com.apple.VideoConference.AFRClogBB
STime
V-R-A-F-T
XmitB
LTxTS
IBR_OLD
ABRS
ABRL
BDCD
NBDCD
%8.3f
EndOfFile
%04X
%04X
%04X
%04X
%.2f
%.3f
-[AVCRateController printFeedbackMessage:]
%s %4u
%.4f
%.4f
%4u %d %c(%1d,%1d) FC:%d
mediaController
T@"VCRateControlMediaController",&,N,V_mediaController
targetBitrate
TI,R,N,V_targetBitrate
configuration
T{AVCRateControlConfig=IIIII},R,N,V_configuration
targetBitrateCap
TI,N,V_targetBitrateCap
estimatedBandwidthCap
TI,N,V_estimatedBandwidthCap
expectedBitrate
TI,N,V_expectedBitrate
T@,R
statisticsCollector
T@"AVCStatisticsCollector",&,N,V_statisticsCollector
feedbackController
T@"AVCRateControlFeedbackController",&,N,V_feedbackController
basebandCongestionDetector
T@"AVCBasebandCongestionDetector",&,N,V_basebandCongestionDetector
paused
TB,N,GisPaused,V_paused
MetaDataMessageArrivalTime
MetaDataTestSimulationTime
VCRC
-[AVCRateControlFeedbackController getRateControlFeedbackMessage:type:metaData:error:]
mode
TI,N,V_mode
maxBurstyLossCache
TI,N,V_maxBurstyLossCache
utteranceNumber
updateNumber
isLocal
isFinal
segments
TI,N,V_utteranceNumber
TI,N,V_updateNumber
hasIsLocal
TB,N,V_isLocal
hasIsFinal
TB,N,V_isFinal
T@"NSMutableArray",&,N,V_segments
GKSRelaySelfNatType
GKSRelaySelfBlob
GKSRelaySelfAddrPointer
GKSRelaySelfExternalAddr
GKSRelayPeerID
GKSRelayPeerNatType
GKSRelayPeerBlob
GKSRelayPeerAddrPointer
GKSRelayPeerExternalAddr
GKSRelayRemotePrimaryIdentifier
GKSRelayType
GKSRelayConnectionID
GKRelayTransactionID
GKRelayToken
GKSRelayPeerRelayIP
GKSRelayPeerRelayPort
GKSRelaySelfRelayIP
GKSRelaySelfRelayPort
GKSRelaySelfRelayNatIP
GKSRelaySelfRelayNatPort
GKSRelayPeerRelayNatIP
GKSRelayPeerRelayNatPort
ClientData
notificationEvent
didStart
callID
connType
localUseCellular
remoteUseCellular
error
NSErrorUserInfoDetailedError
NSErrorUserInfoReturnCode
InitiateInvitePush
InitiateRejectPush
InitiateAcceptPush
InitiateCancelPush
ReceivedInvitePush
ReceivedRejectPush
ReceivedAcceptPush
ReceivedCancelPush
LocalFrameRate
RemoteFrameRate
LocalBitRate
RemoteBitRate
AudioTierNetworkBitrate
AudioTierAudioBitrate
AudioTierPacketsPerBundle
AudioTierRedNumPayloads
AudioTierPayload
LocalFrameWidth
LocalFrameHeight
RemoteFrameWidth
RemoteFrameHeight
LocalPacketLossRate
RemotePacketLossRate
RoundTripTime
AVConferenceConnectionType
P2PUpgrade
Relay
FrontCaptureTime
BackCaptureTime
SessionBitRate
SessionSentBytes
SessionReceivedBytes
LocalUsesCell
RemoteUsesCell
SessionDataNonce
InviteDataCallInfoBlob
InviteDataConnectionBlob
InviteDataSKEBlob
InviteDataMediaBlob
AVConferenceBlockServiceCallID
AVConferenceBlockServiceConference
AVConferenceBlockServiceConnectionBlob
audioIsPaused
TB,N,GisAudioPaused,V_audioIsPaused
isVideoPaused
TB,N,GisVideoPaused,V_isVideoPaused
isAudioSending
TB,N,GisAudioSending,V_isAudioSending
capabilities
T@"VCCapabilities",&,N,V_capabilities
com.apple.VideoConference
-[AVConference initWithClientUUID:transportType:]
shouldDisplayNetworkQualityGraph
AVConferenceAPI
com.apple.avconference.avconference.callback.queue
conferenceDidServerDie
SERVERDIED
-[AVConference initWithClientUUID:transportType:]_block_invoke
v12@?0@"NSDictionary"4@"NSError"8
conferenceClientUUID
conferenceTransportType
conferenceInitialize
conferenceInitialized
AVConference server init failed
conferenceInputAudioPowerSpectrumToken
conferenceOutputAudioPowerSpectrumToken
-[AVConference initializeNewCallWithDeviceRole:]
-[AVConference warmupForCall]
-[AVConference dealloc]
conferenceTerminate
-[AVConference sendARPLData:toCallID:]
-[AVConference sendData:forCallID:encrypted:]
-[AVConference setPeerReportingIdentifier:sessionIdentifier:forCallID:]
<nil>
-[AVConference startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:destination:error:]
-[AVConference startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:]
-[AVConference startConnectionWithCallID:inviteData:isCaller:capabilities:destination:error:]
-[AVConference startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:idsSocket:error:]
-[AVConference startConnectionWithCallID:oldCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:error:]
-[AVConference startConnectionWithCallID:usingInviteData:isCaller:relayResponseDict:didOriginateRelayRequest:capabilities:error:]
-[AVConference stopCallID:]
-[AVConference cancelCallID:]
-[AVConference remoteCancelledCallID:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AVConference.m
network-quality
float
-[AVConference remoteVideoLayer]
-[AVConference remoteVideoBackLayer]
-[AVConference setRemoteVideoLayer:]
-[AVConference setRemoteVideoBackLayer:]
-[AVConference statsForCallID:]
-[AVConference natType]
-[AVConference setSendingAudio:callID:error:]
-[AVConference setPauseAudio:callID:error:]
-[AVConference setPauseVideo:callID:error:]
-[AVConference updateCapabilities:forCallID:]
-[AVConference setServerInfo:]
Calling -conference:didStartSession:withCallID:error:
Calling -conference:didStartSession:withUserInfo:
Calling -conference:didStopWithCallID:error:
Calling conference:withCallID:isSendingAudio:error:
Calling conference:withCallID:didPauseAudio:error:
Calling %s
Calling -conference:didStopWithCallID:error:callMetadata:
-[AVConference videoConference:localIPChange:withCallID:]
Calling -conference:localIPChange:withCallID:
-[AVConference videoConference:remoteMediaStalled:callID:]
Calling -conference:withCallID:remoteMediaStalled:
Calling -conference:remoteAudioPaused:callID:
Calling -conference:remoteVideoPaused:callID:
Calling -conference:didReceiveData:forCallID:
-[AVConference processRelayRequestResponse:responseDict:didOriginateRequest:]
-[AVConference processRelayUpdate:updateDict:didOriginateRequest:]
networkQualityGraphLayer
T@"CALayer",&,VnetworkQualityGraphLayer_
networkQualityUpdateTimer
T@"NSTimer",&,VnetworkQualityUpdateTimer_
TB,VshouldDisplayNetworkQualityGraph_
useViceroyBlobFormat
TB,GisUsingViceroyBlobFormat
delegate
T@"NSObject<AVConferenceDelegate>",N
TB,N,GisMicrophoneMuted,V_microphoneMuted
inputFrequencyMeteringEnabled
TB,N,GisInputFrequencyMeteringEnabled
outputFrequencyMeteringEnabled
TB,N,GisOutputFrequencyMeteringEnabled
outputMeteringEnabled
TB,N,GisOutputMeteringEnabled
inputMeteringEnabled
TB,N,GisInputMeteringEnabled
outputMeterLevel
Tf,R
inputMeterLevel
requiresWifi
inputAudioPowerSpectrumToken
Ti,R,V_inputAudioPowerSpectrumToken
outputAudioPowerSpectrumToken
Ti,R,V_outputAudioPowerSpectrumToken
localFrameHeight
Ti,R
localFrameWidth
enableSpeakerPhone
TB,GisSpeakerPhoneEnabled
natType
-[AVConference(Private) registerBlocksForVCNotifications]_block_invoke
conferenceCallID
conferenceConnectionStarted
conferenceError
conferenceErrorDomain
conferenceErrorCode
conferenceErrorUserInfo
conferenceUserInfo
conferenceDidStartConnection
conferenceCallMetadata
conferenceDidStopConnection
conferenceAudioSending
conferenceIsSendingAudio
conferenceAudioPause
conferenceDidPauseAudio
conferenceVideoPause
conferenceDidPauseVideo
firstRemoteFrame
conferenceDidReceiveRemoteFrame
conferenceDidRemoteAudioPause
conferenceDidRemoteVideoPause
conferenceCallNewBlob
conferenceLocalIPChange
conferenceIsRemoteMediaStalled
conferenceRemoteMediaStalled
conferenceRelayRequest
conferenceInitiateRelayRequest
conferenceSendRelayUpdate
conferenceCancelRelayRequest
conferenceRemoteVideoAttributes
conferenceDidRemoteAttributesChange
conferenceRemoteScreenAttributes
conferenceDidRemoteScreenAttributesChange
conferenceInputFreqMetering
conferenceUpdateInputFrequencyMetering
conferenceOutputFreqMetering
conferenceUpdateOutputFrequencyMetering
conferenceInputMetering
conferenceUpdateInputMetering
conferenceOutputMetering
conferenceUpdateOutputMetering
conferenceAudioBelowThreshold
conferenceRemoteAudioBelowThreshold
conferenceIsRemote
conferenceIsVideoDegraded
conferenceVideoDegraded
conferenceNetworkHint
conferenceARPLData
conferenceReceivedARPL
conferenceData
conferenceReceivedData
conferenceDidChangeLocalVariables
conferenceAudioEnabled
conferenceRemoteAudioEnabled
conferenceLocalAudioEnabled
conferenceCallingMode
conferenceRemoteCallingModeChanged
conferenceReinitializeCall
conferenceCloseConnection
-[AVConference(Private) serverReconnected]_block_invoke
-[AVConference(Private) serverDied]
%@: [%f;%f] : 
 channel[%d] bins:
-[VCAudioPowerSpectrum setupAudioPowerSpectrumWithBinCount:format:]
-[VCAudioPowerSpectrum setupChannel:]
-[VCAudioPowerSpectrum setupOctave2IndexTableWithBinCount:]
-[VCAudioPowerSpectrum setupBinInterpolationWithBinCount:]
-[VCAudioPowerSpectrum setupOctave2IndexTableForChannel:]
-[VCAudioPowerSpectrum setupFFTForChannel:]
-[VCAudioPowerSpectrum pushAudioSamples:]
frequencyRange
T{_VCRange=ff},R,N,V_frequencyRange
streamToken
Ti,R,N,V_streamToken
T@"<VCAudioPowerSpectrumDelegate>",R,N
-[AVCStatisticsCollector dealloc]
-[AVCStatisticsCollector setStatistics:]
-[AVCStatisticsCollector getStatistics:]
-[AVCStatisticsCollector getVCStatisticsWithType:time:]
radioAccessTechnology
TI,N,V_radioAccessTechnology
sharedEstimatedBandwidth
TI,R,N,V_sharedEstimatedBandwidth
sharedEstimatedBandwidthUncapped
TI,R,N,V_sharedEstimatedBandwidthUncapped
sharedRemoteEstimatedBandwidth
TI,R,N,V_sharedRemoteEstimatedBandwidth
videoStreamRampUpFrozenDuration
videoStreamRampUpNoLossEventDurationRatio
videoStreamRampDownLossEventCountThreshold
videoStreamRampDownLossEventBitrateThreshold
videoStreamRampUpStatusRateLimitedThreshold
videoStreamRampDownOWRDThreshold
videoStreamRampDownLossRateThreshold
%@ state:%d OWRD:%.3f RTT:%.3f packetLossRate:%f
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:0
MBL:0
%3u/%3u
 0:0/0  0:0/0 CS: 0 0 0 BB: %u
 UAT S _
-[VCVideoStreamOWRDLossEventRateControl stateChange:]
-[VCVideoStreamOWRDLossEventRateControl calculateOWRDWithTimestamp:sampleRate:time:]
state
Ti,R,N
TI,R,N
owrd
Td,R,N
nowrd
nowrdShort
nowrdAcc
rateControlInterval
Td,N
Ti,R,N,V_state
Td,R,N,V_owrd
Td,N,V_rateControlInterval
CommTest
CommReport
socket() failed (%d)
getsockname() failed (%d)
supportedPayloads
hasSupportedPayloads
TI,N,V_supportedPayloads
Tf,N,V_maxPacketsPerSecond
nonCarrier
checkTCPSSL
favorNonCar
carrierType
addInRange
addCarrier
ignoreCache
ignoreCarrierBundle
summaryType
nonCarrierType
ifDictionary
interfaceType
commnatFlags
commnatCached
tcpCached
sslCached
gk_ci_
natTypeCache
/cache.plist
GKNATObserverDynamicStoreCallback
observer
T@"GKNATObserverInternal",N,Vobserver_
T@"NSObject<GKNATObserverDelegate>"
com.apple.gamekitservices.GKNATObserver.%p.natCheckQueue
com.apple.gamekitservices.GKNATObserver.%p.reportNATQueue
-[GKNATObserverInternal initWithOptions:]
-[GKNATObserverInternal dealloc]
-[GKNATObserverInternal setFlags:forInterface:isCached:isCachedKey:mask:]
-[GKNATObserverInternal currentNATType]
-[GKNATObserverInternal shouldTryNATCheck]
-[GKNATObserverInternal reportNATType]_block_invoke
0.0.0.0
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/GKNATObserver.m
-[GKNATObserverInternal callCommNATTestFromIPPort:ipv6Prefix:]
CommNATMainIP
CommNATMainPort0
CommNATMainPort1
CommNATCohortIP
CommNATCohortPort0
-[GKNATObserverInternal callHTTPTestFromIPPort:ipv6Prefix:ToServer:isSSL:]
%@:%u
HTTP/1
HTTPS
HTTP
-[GKNATObserverInternal ensureNatCachePathExists]
com.apple.conference
com.apple.gamed
natFlags
-[GKNATObserverInternal lookupCachedNATFlagsForNetwork:]
-[GKNATObserverInternal cacheNATFlags:forNetwork:]
natFlagsLastUpdated
-[GKNATObserverInternal NATCheckWithIPPort:ipv6Prefix:useCache:]
gk_ci_cache
-[GKNATObserverInternal HTTPCheckWithIPPort:ipv6Prefix:useCache:]
-[GKNATObserverInternal HTTPSCheckWithIPPort:ipv6Prefix:useCache:]
NAT64ResolverCallBack
-[GKNATObserverInternal tryNATCheckWithDelay:]
-[GKNATObserverInternal tryNATCheckWithDelay:]_block_invoke
State:/Network/Service/[^/]+/IPv4
State:/Network/Interface/[^/]+/IPv6
-[GKNATObserverInternal nameForNetworkWithIPPort:interfaceName:]
InterfaceName
NetworkSignature
%u.%u.%u.%u%%%@
com.apple.gamekitservices.GKNATObserver.%p
-[GKNATObserverInternal registerForNetworkChanges]
State:/Network/Interface/[^/]+/Link
Host
createTCPSocket
gk_ci_%s
v16@?0^v4*8L12
-[VCAudioRelayIO createPacketThreadWithIOBufferDuration:name:error:]
createPacketThreadWithIOBufferDuration failed
PacketThread_Create failed
SpeakerInFormat:
MicOutFormat:
speakerTimestamp
TL,V_speakerTimestamp
micTimestamp
TL,V_micTimestamp
packetThread
T^{PacketThread_s=},R,V_packetThread
micPowerRMS
Tf,V_micPowerRMS
speakerPowerRMS
Tf,V_speakerPowerRMS
isRunning
TB,R,N,V_isRunning
usePacketThread
TB,V_usePacketThread
startCompletionHandler
T@?,C,V_startCompletionHandler
micFormat
T{AudioStreamBasicDescription=dIIIIIIII},V_micFormat
micCallback
T^?,V_micCallback
micCallbackContext
T^v,V_micCallbackContext
micBuffer
T^{opaqueVCAudioBufferList=},R,N,V_micBuffer
speakerFormat
T{AudioStreamBasicDescription=dIIIIIIII},V_speakerFormat
speakerCallback
T^?,V_speakerCallback
speakerCallbackContext
T^v,V_speakerCallbackContext
speakerBuffer
T^{opaqueVCAudioBufferList=},R,N,V_speakerBuffer
Can't start: relay IO is nil
-[VCAudioRelay startRelayIO:name:recordingsName:]
-[VCAudioRelay startClientIO]
vcaudiorelay.client
client_relay_io
-[VCAudioRelay startRemoteIO]
vcaudiorelay.remote
remote_relay_io
-[VCAudioRelay stopRelayIO:]
-[VCAudioRelay stopClientIO]
-[VCAudioRelay stopRemoteIO]
Cannot set VCAudioRelay property
VCAudioRelay is running
createRelayThreadWithError failed
pthread_cond_init failed
pthread_mutex_init failed
pthread_create failed
-[VCAudioRelay newAudioConverterWithInputFormat:outputFormat:withError:]
newAudioConverterFromFormat failed
AudioConverter new failed
-[VCAudioRelay printStreamFormats]
-[VCAudioRelay forwardSamplesFromIO:toIO:withConverter:]
-[VCAudioRelay startPeriodicHealthPrint]
-[VCAudioRelay startPeriodicHealthPrint]_block_invoke
com.apple.VideoConference.VCAudioRelay
-[VCAudioRelay relayCallback]
periodicHealthPrintDispatchSource
T@"NSObject<OS_dispatch_source>",R,V_periodicHealthPrintDispatchSource
blocksRelayedCount
TL,R,V_blocksRelayedCount
clientUplinkPowerMovingAverage
Tf,R,V_clientUplinkPowerMovingAverage
clientDownlinkPowerMovingAverage
Tf,R,V_clientDownlinkPowerMovingAverage
remoteToClientConverter
T^{OpaqueAudioConverter=},R,V_remoteToClientConverter
clientToRemoteConverter
T^{OpaqueAudioConverter=},R,V_clientToRemoteConverter
remoteIO
T@"VCAudioRelayIO",C,N,V_remoteIO
clientIO
T@"VCAudioRelayIO",C,N,V_clientIO
isRelayRunning
TB,R,V_isRelayRunning
IOBufferDuration
Td,R,V_IOBufferDuration
-[VCSessionConfiguration updateWithClientDictionary:]
vcSessionMaxRemoteParticipants
vcSessionType
vcSessionParentHierarchyToken
maxRemoteParticipants
TI,N,V_maxRemoteParticipants
sessionMode
Ti,N,V_sessionMode
isContinuity
TB,R,N
reportingHierarchyToken
T@,&,N,V_reportingHierarchyToken
codecType
Ti,R,N,V_codecType
octetAligned
TB,N,GisOctetAligned,V_octetAligned
dtxEnabled
TB,N,GisDTXEnabled,V_dtxEnabled
preferredMode
Ti,N,V_preferredMode
supportedModes
T@"NSArray",&,N,V_supportedModes
isComfortNoise
dtmf
TB,N,GisDTMF,V_dtmf
networkPayload
TI,N,V_networkPayload
evsChannelAwareOffset
TS,N,V_evsChannelAwareOffset
evsHeaderFullOnly
TB,N,V_evsHeaderFullOnly
+[AVCRTCPPacket newPacketWithRTCPPacket:]
-[AVCRTCPPacket initWithRTCPPacket:]
packetType:%u, SSRC:%u
packetType
TC,N,V_packetType
SSRC
TI,N,V_SSRC
%@, NTPMostSignificantWord:%u, NTPLeastSignificantWord:%u, RTPTimestamp:%u, packetsSent:%u, octetsSent:%u, receiverReport:%@
NTPMostSignificantWord
TI,N,V_NTPMostSignificantWord
NTPLeastSignificantWord
TI,N,V_NTPLeastSignificantWord
RTPTimestamp
TI,N,V_RTPTimestamp
packetsSent
TI,N,V_packetsSent
octetsSent
TI,N,V_octetsSent
receiverReport
T@"AVCRTCPReceiverReport",&,N,V_receiverReport
%@, reportedSourceSSRC:%u, fractionLost:%u, cumulativePacketsLost:%u, extendedHighestSequenceNumber:%u, interarrivalJitter:%u, lastSRTimestamp:%u, delaySinceLastSR:%u
reportedSourceSSRC
TI,N,V_reportedSourceSSRC
fractionLost
TC,N,V_fractionLost
cumulativePacketsLost
TI,N,V_cumulativePacketsLost
extendedHighestSequenceNumber
TI,N,V_extendedHighestSequenceNumber
interarrivalJitter
TI,N,V_interarrivalJitter
lastSRTimestamp
TI,N,V_lastSRTimestamp
delaySinceLastSR
TI,N,V_delaySinceLastSR
%@, type:%u, text:%@
type
TC,N,V_type
text
T@"NSString",&,N,V_text
gk-cdx
gk-commnat-main0
gk-commnat-main1
gk-commnat-cohort
gk-commnat-main0-name
gk-commnat-main1-name
gk-commnat-cohort-name
gk-p2p-tcp-check-url
gk-p2p-ssl-check-url
gk-p2p-video-degraded-threshold
gk-p2p-ice-timeout
gk-p2p-nat-type-timeout
gk-p2p-blob-size-max
gk-p2p-relay-bitrate-max
gk-p2p-tcp-relay-bitrate-max
gk-p2p-pre-relay-timeout
gk-p2p-video-throttling-timeout
gk-p2p-startup-timeout
gk-p2p-local-gaming-discovery-timeout
gk-p2p-local-gaming-discovery-heartbeat
gk-p2p-remote-packets-timeout
gk-p2p-network-conditions-timeout
staticnattypefromcarrierbundle
keepalivetimeoutfromcarrierbundle
gk-p2p-bitrate-max-2g
gk-p2p-bitrate-max-3g
gk-p2p-bitrate-max-lte
rtc-ss-bitrate-max-2g
rtc-ss-bitrate-max-3g
rtc-ss-bitrate-max-lte
rtc-ac-bitrate-max-2g
rtc-ac-bitrate-max-3g
rtc-ac-bitrate-max-lte
rtc-ac-relay-bitrate-max
rtc-ac-tcp-relay-bitrate-max
vc-max-bitrate-2g-uplink
vc-max-bitrate-3g-uplink
vc-max-bitrate-lte-uplink
vc-max-bitrate-wifi-uplink
vc-max-bitrate-2g-downlink
vc-max-bitrate-3g-downlink
vc-max-bitrate-lte-downlink
vc-max-bitrate-wifi-downlink
vc-enable-evs-audio-codec
vc-enable-red-audio
vc-red-state-value-A
vc-enable-irat-recommendation
vc-rate-controller-type
vc-adaptive-learning-enabled
vc-short-term-history-length
vc-long-term-history-length
vc-adaptive-learning-A
vc-adjustment-factor-A
vc-short-term-value-weight-A
vc-long-term-value-weight-A
vc-adaptive-learning-B
vc-adjustment-factor-B
vc-short-term-value-weight-B
vc-long-term-value-weight-B
vc-adjustment-factor-C
vc-short-term-value-weight-C
vc-long-term-value-weight-C
vc-decryption-timeout-interval
vc-new-session-joining-interval
GKSConnSettingsUpdate
ipport
T^{tagIPPORT=i[16c](?=I[16C])S},V_ipport
ipv6Prefix
Tr^{?=i[12C]},R,V_ipv6Prefix
+[GKSConnectivitySettings setServerAddresses:]
specialAllocForHeapInspection
+[GKSConnectivitySettings getCachedIPPort]
+[GKSConnectivitySettings getIPPortForService:]
+[GKSConnectivitySettings supportsEVSCodec]
+[GKSConnectivitySettings supportsRedAudio]
+[GKSConnectivitySettings supportiRATRecommendation]
NOT 
+[GKSConnectivitySettings getRateControllerType]
+[GKSConnectivitySettings getDecryptionTimeoutInterval]
+[GKSConnectivitySettings getNewSessionJoiningInterval]
useAdaptiveLearningForFaceTime
+[GKSConnectivitySettings getAdaptiveLearningState]
+[GKSConnectivitySettings getShortTermHistoryLength]
+[GKSConnectivitySettings getLongTermHistoryLength]
+[GKSConnectivitySettings getAdaptiveLearningA]
+[GKSConnectivitySettings getAdjustmentFactorA]
+[GKSConnectivitySettings getShortTermValueWeightA]
+[GKSConnectivitySettings getLongTermValueWeightA]
+[GKSConnectivitySettings getAdaptiveLearningB]
+[GKSConnectivitySettings getAdjustmentFactorB]
+[GKSConnectivitySettings getShortTermValueWeightB]
+[GKSConnectivitySettings getLongTermValueWeightB]
+[GKSConnectivitySettings getAdjustmentFactorC]
+[GKSConnectivitySettings getShortTermValueWeightC]
+[GKSConnectivitySettings getLongTermValueWeightC]
-[VCRedundancyControlAlgorithmVideo updateRedundancyStrategyWithNetworkStatistics:]
redundancyPercentage
redundancyInterval
TI,R,N,V_redundancyPercentage
Td,R,N,V_redundancyInterval
GKVoiceChatServiceErrorDomain
videoStreamRampDownNOWRDThreshold
videoStreamRampUpNOWRDThreshold
videoStreamRampDownNOWRDAccThreshold
videoStreamRampUpNOWRDAccThreshold
%@ state:%d OWRD:%.3f NOWRD:%.3f NOWRDACC:%.3f RTT:%.3f packetLossRate:%f rampingStatus:0x%04X
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%3u
MBL:0
%3u/%3u
 0:0/0  0:0/0 CS: 0 0 0 BB: %u
%04X
 UAT S _
-[VCVideoStreamNOWRDLossEventRateControl stateChange:]
-[VCVideoStreamNOWRDLossEventRateControl calculateOWRDWithTimestamp:sampleRate:time:]
Td,R,N,V_nowrd
Td,R,N,V_nowrdShort
Td,R,N,V_nowrdAcc
DynamicStoreCallbackForWifiChanges
State:/Network/Interface/
State:/Network/Interface/pdp_ip
/IPv4
/IPv6
-[GKInterfaceListener hasConnectionWithWifi:cell:]
GKInterfaceListener%d
State:/Network/Interface/[^/]+/IPv4
State:/Network/Interface/[^/]+/LinkIssues
-[GKInterfaceListener startChangeListener]
-[GKInterfaceListener startRoutingChangeListener]_block_invoke
v8@?0i4
-[GKInterfaceListener startRoutingChangeListener]
_isWifiUp
TB,V_isWifiUp
_isCellUp
TB,V_isCellUp
interfaceListenerDelegate
T@"<InterfaceListenerDelegate>"
LinkIssues
TimeStamp
ModuleID
Info
checkForLinkIssues
maxBandwidth
Ti,N,V_configuration
TI,N,V_maxBandwidth
mode_Invalid
mode_Default_Wifi
mode_Default_LTE
mode_FaceTime_Wifi
mode_FaceTime_LTE
mode_Screen_Wifi
mode_Screen_LTE
mode_FaceTime_3G
mode_Screen_3G
mode_Default_3G
mode_FaceTime_2G
mode_Screen_2G
mode_Default_2G
mode_SUPPORTED
(unknown: %i)
result
T^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}}
TL,VcallID
isQueryAnswered
TB,VisQueryAnswered
-[ICEResultWaitQueue copyResultForCallID:]
com.apple.AVConferenceVCMomentsHistory.moments
-[VCMomentsHistory addLocalAudioSample:timestamp:]
-[VCMomentsHistory addRemoteAudioSample:timestamp:]
-[VCMomentsHistory updateRemoteScreenAttributes:]
-[VCMomentsHistory getPhotoWithTransactionID:Timestamp:completionHandler:]
-[VCMomentsHistory getPhotoWithTransactionID:Timestamp:completionHandler:]_block_invoke
VCMomentsHistory
-[VCMomentsHistory endVideoRecording:timestamp:completionHandler:]
-[VCMomentsHistory endVideoRecording:timestamp:completionHandler:]_block_invoke
-[VCMomentsHistory historyBuffer:didDequeueSample:timestamp:]
v12@?0@"NSURL"4@"NSError"8
-[VCMomentsHistory cleanupActiveRequests]_block_invoke
-[VCMomentsHistory cancelRequestWithTransactionID:]_block_invoke
bCameraStatusBits
-[VCMomentsHistory setupStillImageWithTimestamp:transactionID:visibleRect:cameraStatusBit:]
-[VCMomentsHistory setupResizingSessionsWithVisibleRect:cameraStatusBit:]
-[VCMomentsHistory rewriteMovieMetadataWithURL:transactionID:]
-[VCMomentsHistory handleSinglePendingRequestWithTransactionID:sourceURL:]
-[VCMomentsHistory updateAudioBuffer:WithSample:timestamp:]
localAudioBuffer
remoteAudioBuffer
-[VCMomentsHistory updateVideoBuffer:withPresentationTime:cameraStatusBits:timestamp:]
-[VCMomentsHistory updateCaptureSizesWithFirstFrame:]
remoteScreenAttributes
T@"VideoAttributes",&,N,V_remoteScreenAttributes
TI,N,V_capabilities
-[VCRateControlAlgorithmSparseNOWRD configure:restartRequired:]
Configure with targetBitrate=%d, minBitrate=%d, maxBitrate=%d
-[VCRateControlAlgorithmSparseNOWRD doRateControlWithStatistics:]
-[VCRateControlAlgorithmSparseNOWRD doRateControlWithBasebandStatistics:]
-[VCRateControlAlgorithmSparseNOWRD checkPaused]
Pause rate control algorithm
Resume rate control algorithm
[%u] Ramp up bitrate to %u
[%u] Congestion!!! New bitrate down to %u
[%u] Congestion due to baseband!!! New bitrate down to %u
Initial Rampup done!
-[VCRateControlAlgorithmSparseNOWRD printRateControlInfoToLogDump]
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%u
MBL:%d %u
%4u/%4u
 %4u:%4u/%4u  %4u:%4u/%4u  CS: %04X %04X %u BB: %3u
 UAT %s
T@"VCRateControlMediaController",&,N
rateChangeCounter
isCongested
mostBurstLoss
packetLossRate
totalPacketReceived
roundTripTime
isNewRateSentOut
localBandwidthEstimation
TI,N
TB,N,GisPaused
actualBitrate
TI,R,N,V_rateChangeCounter
TB,R,N,V_isCongested
TI,R,N,V_mostBurstLoss
Td,R,N,V_packetLossRate
TI,R,N,V_totalPacketReceived
Td,R,N,V_roundTripTime
TB,R,N,V_isNewRateSentOut
TI,N,V_localBandwidthEstimation
TI,R,N,V_actualBitrate
VCTextStream
-[VCTextStream init]
-[VCTextStream dealloc]
-[VCTextStream sendCharacter:]
-[VCTextStream sendText:]
-[VCTextStream didReceiveCharacter:]
Failed to allocate the text receiver
%s:%d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCTextStream.m
Invalid Parameter
Called with an invalid parameter
-[VCTextStream onConfigureStreamWithConfiguration:error:]
Failed to create transport
Create transport failed
receiveDelegate
T@"<VCTextReceiverDelegate>",N
lastReceivedRTPPacketTime
lastReceivedRTCPPacketTime
127.0.0.1
com.apple.AVConference.LoopbackSocketTunnel.ReceiveProc
-[LoopbackSocketTunnel initWithPort:delegate:error:]
LoopbackSocketTunnel init failed
FigThreadCreate failed
-[LoopbackSocketTunnel setVTPIP:]
optionalArg
T@"NSObject",VoptionalArg
LoopbackTunnelReceiveProc
rtpSSRC
audioUnitModel
supportFlags
payloadFlags
secondaryFlags
useSBR
TI,N,V_rtpSSRC
hasAudioUnitModel
TI,N,V_audioUnitModel
TI,N,V_supportFlags
TI,N,V_payloadFlags
TI,N,V_secondaryFlags
TB,N,V_useSBR
IDR Scheduler Item: Budget=%d (frames) weightFactor:%d framePosition:%@ streams:%@
framePosition
TI,N,V_framePosition
weightFactor
TI,N,V_weightFactor
budgetInCaptureFrames
TI,N,V_budgetInCaptureFrames
streams
T@"NSArray",R,N,V_streams
-[VCRedundancyControllerVideo initWithDelegate:statisticsCollector:mode:]
-[VCRedundancyControllerVideo updateRedundancyStrategyWithNetworkStatistics:]
-[VCRedundancyControllerVideo reportRedundancyPercentage:redundancyInterval:]
statisticsID
TQ,N,V_statisticsID
-[VCMasterKeyIndex initWithBytes:bufferSize:]
unmapped
%@(%d):%@
-[VCMasterKeyIndex mappedKeyBytes:size:]
-[VCMasterKeyIndex setMapping:]
activeSize
isMapped
TB,R
mapKey
TC,R
%04X 
AFRCLog_PrintCongestionInfo
%8.3f
%8.3f/%04X:
%.4f(%d)
RTT:%-4u
PLR:%4.1f@%.1f
RRx:%u
MBL:%u
%3u/%3u
 %3u:%3u/%3u  %3u:%3u/%3u
BB: %u
%s%s
 UAT
 LAT
AFRCLog_PrintCongestionFullInfo
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.1f@%.1f
RRx:%u
MBL:%d %u
%3u/%3u
 %3u:%3u/%3u  %3u:%3u/%3u CS: %1d %3u %3u BB: %u
%s%s%s
%d/%d
%s TID[%04X] Drop ACK for PT %u: %2u packets dropped [%s]%s
, taking new samples.
%s TID[%04X] Drop ACK, no packet dropped%s
%s TID[%04X] Drop ACK reported a failure%s
%s Request video refresh for PT (%u).
initialBitrateTierFromLearntBitrateWithCellTech
AFRCCreateHandle
AFRCCreateHandle_block_invoke
BTPw
RxPC
RxSC
TxPC
TxSC
AFRCUpdateOperatingMode
AFRCCloseHandle
AFRCSetTxCap
UpdateRxEstimate
AFRCCalcRxEstimate_New
NEW AFRCCalcRxEstimate [%d]: [%f] //////
/////@@@@@ tp: %d  ts/arr: %d/%f 
 seq: %d sz: %d 
 Probe: %d/%d 
 path: %d (%d)  BWD: %f/%f  Est: %f
///// 
 TS: %d  
 arrival: %f/%f 
 total: %d/%d (%.1f ms) ref_size: %d
NEW AFRCCalcRxEstimate: [%d]  (%d %d)  //////
NEW AFRCCalcRxEstimate: [%d]  //////
///// 
 LOSS [%d/%d] @ %d: //////
AFRCCalcRxEstimate
AFRCSetAudioBitRate
New audio rate [%ukbps], fraction [%.2f], FEC [%.2f], RED[%u %u]
AFRCSetAudioPayload
AFRCGetAudioTxInfo
AFRCGetTxInfo
AFRCRecordMaxBurstyLoss
AFRCUpdateIntTxBytes
AFRCSetFeedbackControlInfo
AFRCGetPeerArrivalTime
AFRCProcessFeedbackPacket
AFRCGetStat
AFRCProcessBasebandNotification
Video %s...
AFRCSetAudioPaused
AFRCSetAudioSilent
AFRCSetPLCalc
AFRCUpdateCellTech
AFRCUpdateRateTier
AFRCProcessWCMSetCallConfig
AFRCProcessWCMGetCallConfig
AFRCMarkNetworkChange
network state changed.
AFRCAddBBDump
AFRCMarkResetCS
reset connection stats.
AFRCSetConnectionNumber
connection #: (%d->%d).
BWEstEnableNewEstSenderSide
BWEstEnableNewEstRecvrSide
BWEstProbeInterval
BWEstLogType
BWEstLogLevel
BWEstDemoLogInterval
HackUploadBW
V1BWE
BWEstConfigureDefaults
BWEstResetRecvrBWState
BWEUpdateFilterType
BWEUpdateSenderRecvrEnabledStates
AFRCSetBWEstMode
AFRCGetSendersLogState
AFRCGetSenderRecvrModes
AFRCSetBWECap
AFRCSetStatisticsCollector
%010u
AFRC-DashBoard.dump
========== Start logging from File %d ==========
AFRCLog_OpenLogs
AFRC
STime
dTime/ETxTS
OWRD
NOWRD
NOWRDS
NOWRDA
PLR/FEC
BR/TR
MQIn: A/V
MQOut: A/V
ABRL
TxAT
MODE
TxSTATE
Audio:PL/Rate
connection #: %d.
MyTxTS
Delay
RecvKb
BLoss
RecvPkt
YrTxTS
OWRD
%ums(%u)%c 
UpdateBigFrameReporter
UpdateBBAction
%s%sAudio[%u %.2f %.2f %u %u], Action[%02X->%02X(%u)]%s.
HWM is hit! 
AWM is hit! 
Detected AS, restore state. 
Missed AS. 
, ignore samples
Stopped
Resumed
RampDownTxRate
Congestion!!! TxRate v %u, Baseband.
Rate change [%u] (Ramp Down to %u, Baseband).
Initial Rampup done!
DoRateControl
Congestion!!! TxRate v %u
Rate change [%u] (Ramp Down to %u, AFRC).
Congestion!!! Pause video.
Congestion!!! Pause video.
AFRC: Congestion!!! Pause video.
Initial Rampup Done!
TxRate ^ %u
Rate change [%u] (Ramp Up to %u).
Initial Rampup Done!
DetectCongestion
[%u] Rate was limited
Rate is limited(%ukbps).
[%u] Stabilized (TxTS %u >= %u FB). now collecting samples...
Rate(%ukbps) stabilized.
[%u] Collected %d samples (TxTS %u)
AFRC collected %d samples.
OWRD has been 0 for %f seconds, reset NOWRDAcc
AFRCUpdateBBNote
Rate change done, [%.6f %u>=%d %u%s], taking new samples.
Still trying to flush baseband with flush counter: %d. Stop ramp-up and possibly decrease audio fraction based on BBAvgTxRate: %d
Congestion!!! TxRate v %u, BaseBand.
%2u%2u%2u%2u%2u %6u
%u %4u
%.4f
%.4f
%4u %.2f %c(%1d,%1d) %1d %4d
%2u%2u%2u%2u%2u %6u
%u [Bogus notification, discard]
Get Out of Antenna Imbalance Mode!
Get Into of Antenna Imbalance Mode!
STime
ATime
V-R-A-F-T
XmitB
LTxTS
ABRS
ABRL
BDCD
NBDCD
forcedTxCap
forcedTxRate
forcedPLRForAudioFEC100
forcedPLRForAudioFEC150
forcedPLRForAudioFEC200
ConfigureAFRCDefaults
BWEstInit
BWEstUninit
BWEstCheckIfLargeFrameNeeded
setCapOnLF
BWE_FILTER__NONE
BWE_FILTER__WIFI
BWE_FILTER__CELLULAR_2G_3G
BWE_FILTER__CELLULAR_LTE
UNEXPECTED
MediaQueue_CreateHandle
MediaQueue_CloseHandle
MediaQueue_Start
com.apple.avconference.mediaqueue.sendproc
MediaQueue_Malloc
MediaQueue_AddPacket
MediaQueue_SetRedundantAudio
MediaQueue_SetAudioFraction
MediaQueue_SetAudioFECLevel
MediaQueue_GetTimeRateChanged
MediaQueue_UpdateAudioOnlyRateChange
MediaQueue_RecordNewPacketWithSize
MediaQueue_FindPacketInTxHistory
MediaQueue_SetPLCalc
MediaQueue_SetActiveProbingLog
MediaQueue_SetAFRCSendMode
ActiveProbing_Uninit
ActiveProbing_UpdateRTPProbeSeqId
ActiveProbing_ProcessIncomingPacket
MediaQueue_SetThrottlingAudioInterval
MediaQueue_SetThrottlingIsIPv6
MediaQueue_RetrieveAudioVideoRates
MediaQueueSendProc
MediaQueue_SendPacket
MediaQueue_UpdateSeqNumber
strong
T@,R,N
T^{tagSRTPINFO=ii{_opaque_pthread_mutex_t=l[40c]}{_opaque_pthread_cond_t=l[24c]}IISSIIQii[32C][14C][32C][14C][20C]{_opaque_pthread_mutex_t=l[40c]}^v^vII{tagSRTPCryptContext={?=I*}^{_CCCryptor}[404C]}{tagSRTPTransformPolicy=iiiiiii}I},R
-[VCControlChannelMultiWay(Encryption) updateEncryptionWithKeyMaterial:]
-[VCControlChannelMultiWay(Encryption) setCurrentSendMKIWithKeyMaterial:]
-[VCControlChannelMultiWay(Encryption) getKeyDerivationCryptoSet:withKeyMaterial:derivedSSRC:]
-[VCControlChannelMultiWay(Encryption) updateEncryption:derivedSSRC:]
-[VCControlChannelMultiWay(Encryption) encryptData:size:sequenceNumber:]
-[VCControlChannelMultiWay(Encryption) decryptWithMKI:data:size:sequenceNumber:]
Bad encoding parameter (iNumSymbol %d)
encode
decode
-[VCVideoStreamTransmitter initWithConfig:]
com.apple.VideoConference.VCVideoStreamTransmitter
com.apple.VideoConference.VCVideoTransmitter.Encoder
-[VCVideoStreamTransmitter startVideo]
-[VCVideoStreamTransmitter enqueueVideoFrame:frameTime:droppedFrames:cameraStatusBits:]
cameraStatusBits
-[VCVideoStreamTransmitter generateKeyFrame]
-[VCVideoStreamTransmitter setFECRatio:]
-[VCVideoStreamTransmitter encodeVideoFrame:]
-[VCVideoStreamTransmitter prependSPSPPS:dataPointer:]
-[VCVideoStreamTransmitter transmitEncodedVideoFrame:cameraStatusBits:]
-[VCVideoStreamTransmitter transmitEncodedVideoFrame:size:timestamp:hostTime:cameraStatusBits:]
-[VCVideoStreamTransmitter transmitFrameInGroups:numOfPackets:timestamp:hostTime:cameraStatusBits:]
-[VCVideoStreamTransmitter gatherRealtimeStats:]
VCVSTxMaxFrameDuration
VCVSTxAvgBitrate
VCVSTxMaxBitrate
VCVSTxMinBitrate
%5.2f
VCVSTxAvgFramerate
VCVSTxMaxFramerate
VCVSTxMinFramerate
VCVSKeyFrameSize
-[VCVideoStreamTransmitter handleActiveConnectionChange:]
VCVideoStreamEncoderProc
encoderFrameCallback
captionsSource
T@"<VCCaptionsSource>",R,N,V_captionsSource
clientContextList
T@"NSArray",R,N,V_clientContextList
com.apple.AVConference.VCCaptionsManager.XPCCommandQueue
-[VCCaptionsManager registerCaptionsSource:streamToken:]_block_invoke
vcCaptionsEnabled
vcCaptionsError
vcCaptionsDidEnableCaptions
vcCaptionsDisabled
vcCaptionsDidDisableCaptions
vcCaptionsStartReason
vcCaptionsDidCaptionsStart
vcCaptionsStopReason
vcCaptionsDidCaptionsEnd
vcCaptionsTranscription
vcCaptionsDidUpdateCaptions
JitterQueue_Insert
JitterQueue_Reset
JitterQueue_IsAHole
com.apple.avconference.effects
vcEffectsInitialize
-[AVCEffects initWithDelegate:]
vcEffectsTerminate
-[AVCEffects dealloc]
vcEffectsDidCaptureVideo
vcEffectsServerDidDisconnect
vcEffectsServerTimeOut
vcEffectsFrameTime
vcEffectsClientReleasedVideoFrame
-[AVCEffects setEffectType:]
Ti,N,V_mode
effectType
Ti,N,V_effectType
-[VCSessionUplinkVideoStreamController setStreamIDsCell:]
-[VCSessionUplinkVideoStreamController setStreamIDsWifi:]
-[VCSessionUplinkVideoStreamController setPendingVideoStreams:]
-[VCSessionUplinkVideoStreamController setCurrentFrameTime:]
-[VCSessionUplinkVideoStreamController setIsLocalOnCellular:cappedVideoStreamIDs:]
-[VCSessionUplinkVideoStreamController anchorStreamIDWithCappedVideoStreamIDs:]
-[VCSessionUplinkVideoStreamController resumeStreams]
-[VCSessionUplinkVideoStreamController shouldGenerateIDRWithStreamSchedule:]
-[VCSessionUplinkVideoStreamController videoStreamPendingKeyFrameGenerationWithStreamID:shouldRemoveFromPendingArray:]
-[VCSessionUplinkVideoStreamController handleStreamsResetIDR]
activeVideoStreams
T@"NSMutableDictionary",R,V_activeVideoStreams
pendingVideoStreams
T@"NSDictionary",C,N,V_pendingVideoStreams
captureFrameRate
TI,V_captureFrameRate
streamIDsWifi
T@"NSArray",C,N,V_streamIDsWifi
streamIDsCell
T@"NSArray",C,N,V_streamIDsCell
currentFrameTime
Tf,N,V_currentFrameTime
%s must be overridden in a subclass/category
-[AVCPacketFilter isMatchedPacket:size:]
-[AVCPacketFilterRTP initWithIncomingSSRC:acceptPacketType:]
ACDTXEncoderFactory
ACDTXDecoderFactory
ACOpusEncoderFactory
ACOpusDecoderFactory
ACAMREncoderFactory
ACAMRDecoderFactory
ACEVSEncoderFactory
ACEVSDecoderFactory
ACSpeexEncoderFactory
ACSpeexDecoderFactory
RegisterExternalAudioCodecs
/System/Library/Frameworks/AudioToolbox.framework/AudioCodecs
+[VCAudioRuleCollection getForcedPayload]
aacBlockSize
Ti,N,V_aacBlockSize
rules
T@"NSArray",R,N,V_rules
secondaryPayloads
T@"NSArray",R,N,V_secondaryPayloads
allowAudioSwitching
TB,N,V_allowAudioSwitching
allowAudioRecording
TB,N,V_allowAudioRecording
+[VCPayloadUtils blockSizeForPayload:]
+[VCPayloadUtils codecTypeForPayload:]
+[VCPayloadUtils payloadForCodecType:]
+[VCPayloadUtils bitrateForAMRCodecMode:]
+[VCPayloadUtils bitrateForAMRWBCodecMode:]
VCPayloadUtils_AudioCodecRateModeForBitrate
_VCPayloadUtils_AudioCodecRateModeForAMRBitrate
_VCPayloadUtils_AudioCodecRateModeForAMRWBBitrate
com.apple.AVConference
-[VCAudioPowerSpectrumSource processInternalEvents]
com.apple.AVConferenceVCAudioPowerSpectrumManager.XPCCommandQueue
-[VCAudioPowerSpectrumManager registerAudioPowerMeterSource:]_block_invoke
CLIENTDIED
vcAudioPowerSpectrumBinCount
vcAudioPowerSpectrumRefreshRate
-[VCAudioPowerSpectrumManager registerBlocksForService]_block_invoke
CONTEXT
@"NSDictionary"12@?0@"NSDictionary"4^@8
vcAudioPowerSpectrumInitializeRemoteVideoForStreamToken
vcAudioPowerSpectrumStreamToken
vcAudioPowerSpectrumRegisterListener
vcAudioPowerSpectrumUnregisterListener
vcAudioPowerSpectrumTerminateMeter
-[VCAudioPowerSpectrumManager audioPowerSpectrumMeter:didUpdateAudioPowerSpectrums:]
vcAudioPowerSpectrumRemoteSpectrum
vcAudioPowerSpectrumServerDidReceiveSpectrum
meters
T@"NSMutableArray",R,N,V_meters
sources
T@"NSMutableDictionary",R,N,V_sources
audioRules
T@"VCAudioRuleCollection",&,N,V_audioRules
audioRulesNegotiated
T@"VCAudioRuleCollection",&,N,V_audioRulesNegotiated
RTCPCustomReportPackets
RTPGetRTCPDescriptor
RTPGetRTCPHasPendingPLI
RTPGetRecvStats
RTCPSetSendPLI
RTCPSetSendTMMBR
RTPCheckRTCPSendIntervalElapsed
RTPSendControlPacket
RTPSendRTCP
RTPRecvRTCP
RTPGetLatestRTCPTimestamp
RTPSetRTCPReceivedCallback
RTCPInitializeReceptionReportBlock
_RTCPInitializeReceptionReportBlock
_RTPRecvRTCPInternal
_RTCPInitializePacketList
_RTCPProcessSenderReportPacket
_RTCPProcessReceiverReportPacket
-[VCDatagramChannelManager addDatagramChannelWithDescriptor:eventHandler:error:]
-[VCDatagramChannelManager addDatagramChannelWithDestination:eventHandler:error:]
-[VCDatagramChannelManager setupDatagramChannel:eventHandler:error:]
v28@?0r^v4I8{?=cSSC}12^{?=IQSCc[12S]CS{?=SSSSS}d}20@"NSError"24
-[VCDatagramChannelManager removeDatagramChannel:]
readHandler
T@?,C,V_readHandler
-[VCDispatchTimer initWithIntervalSeconds:callbackBlock:clientQueue:]
-[VCDispatchTimer initWithIntervalSeconds:callbackBlock:clientQueue:]_block_invoke
-[VCDispatchTimer dealloc]
-[VCDispatchTimer start]
-[VCDispatchTimer stop]
callbackBlock
T@?,R,N,V_callbackBlock
TB,R,N,V_running
VCAudioStream
-[VCAudioStream computePacketTimestampWithInputTimestamp:numSamples:hostTime:]
-[VCAudioStream updateRemoteMediaStallState:]
-[VCAudioStream codecTypeFromAudioPayload:]
-[VCAudioStream startAudioWithCompletionHandler:]
-[VCAudioStream stopAudioWithCompletionHandler:]
-[VCAudioStream getCodecConfigForPayload:block:]
v12@?0@"VCAudioStreamConfig"4@"VCAudioStreamCodecConfig"8
-[VCAudioStream setReceiverPayloads]
-[VCAudioStream setState:]
-[VCAudioStream setupAudioStreamWithClientPid:]
-[VCAudioStream dealloc]
^\d{1,10}$
-[VCAudioStream createAudioReceiver]
-[VCAudioStream createAudioTransmitter:streamIDs:]
-[VCAudioStream createTransport]
-[VCAudioStream cleanupBeforeReconfigure:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCAudioStream.m
-[VCAudioStream onConfigureStreamWithConfiguration:error:]
-[VCAudioStream onConfigureStreamWithConfiguration:error:]_block_invoke
v8@?0^{__CFArray=}4
v12@?0B4@"NSError"8
-[VCAudioStream onPauseWithCompletionHandler:]_block_invoke
-[VCAudioStream onPauseWithCompletionHandler:]
-[VCAudioStream onResumeWithCompletionHandler:]_block_invoke
-[VCAudioStream onResumeWithCompletionHandler:]
-[VCAudioStream setTargetStreamID:]
VCSUUID
VCSPUUID
VCASStreamIDs
VCASDirection
VCASMaxNetworkBitRate
VCASCurrentPayload
VCASCodecBitRate
VCASRedundancyLevel
VCASRedundancyDelay
-[VCAudioStream pullAudioSamples:]
-[VCAudioStream pushAudioSamples:]
-[VCAudioStream collectRxChannelMetrics:]
audioTransmitter
T@"VCAudioTransmitter",&,V_audioTransmitter
audioIO
T@"VCAudioIO",&,V_audioIO
syncSourceDelegate
T@"NSObject<VCMediaStreamSyncSourceDelegate>",N,VsyncSourceDelegate
conferenceID
TI,R,VconferenceID
isValid
TB,N,VisValid
deviceRole
Ti,N,VdeviceRole
muted
TB,N,GisMuted,V_isMuted
remoteMuted
TB,N,GisRemoteMuted,V_isRemoteMuted
sendActiveVoiceOnly
currentDTXEnable
TB,N,GisCurrentDTXEnabled,V_currentDTXEnable
targetStreamID
T@"NSNumber",&,N,V_targetStreamID
volume
Tf,N,V_volume
Audio
RTPSendH264Packet
RTPProcessH264Packet
VERSION = 2.6, DTX Support
CALLID = %s
STime
Timestamp
Bundling
NetworkType
FirstTimestamp
Wraps
IsRed
AvgLag
MaxLag
MinLag
JumpThresh
SlopeThresh
Flat
ClippedLag
MinLagAdjustment
MinClipThreshold
JBMin
JBMax
TargetJ
RedOverheadInTargetJ
TargetJQSize
JQSize
AvgJQSize
ERASURE
MODE
Payload Type
Seq Number
INTS
OUTTS
LeftOverSamples
Prominence
StreamID
JBDump_OpenLog
Enabled
Disabled
enableTFRCDump
JitterBuffer
.jbdump
com.apple.VideoConference.Jitterlog
RTPMapAddMappingForPayload
RTPMapResetMapping
RTPMapPrintMapping
RTPMapGetInternalPayload
RTPMapGetExternalPayload
RTPCreateHandle
RTPCloseHandle
RTPGetJitter
RTPGetPacketSent
RTPSetAudioReceiver
RTPSetWRMInfo
RTPGetPacketLossMetrics
RTPResetHandle
RTPResetDecryptionStatus
RTPSetDestinationWithToken
RTPSetDestination
RTPSetRTCPFB
RTPSetTxPayloadList
RTPSetRxPayloadList
RTPAddMappingForPayload
RTPResetPayloadMapping
RTPGetInternalPayload
RTPGetExternalPayload
RTPSetSourceRate
RTPGetPacketMultiplexMode
RTPSetPacketMultiplexMode
RTPSetThrottlingAudioInterval
RTPSetRTCPEnabled
RTPSetRTCPSendInterval
RTPGetSequenceNumber
RTPGetSendROCWithSequenceNumber
RTCPGetReportNTPTimeMiddle32
RTPGetExtendedSequenceNumber
RTPSendRTP
SendRTP
RTPRecvRTP
RTPGetReceiveStatus
RTPGetLocalSSRC
RTPSetRemoteSSRC
RTPSetCellularUniqueTag
RTPSetStreamDirection
RTPSetSockets
RTPCreateSocketsForIDSInternal
RTPCreateSocketsForIDS
RTPCreateSocketsRetryBind
RTPSetCName
RTPCreateSockets
RTPSetMediaQueue
RTPSetVCMediaQueue
RTPSetStatisticsCollector
RTPSetBasebandCongestionDetector
RTPSetAFRCHandle
RTPGetAFRCTxInfo
RTPSetRedundantAudio
RTPGetOWRD
RTPGetAFRCStat
RTPSetAFRCRecvMode
RTPUpdateAudioOnlyRateChange
RTPResetConnectionStats
RTPUpdateIsIPv6
RTPGetAFRCProbeSeqId
RTPInsertAFRCProbeSeqId
RTPSetWRMMetricConfig
RTPSetWRMMetricsCallback
RTPSetWRMCallId
RTPUpdateWRMInfo
RTPProcessMediaControlInfo
RTPRegisterPacketCallback
v12@?0^v4^{_VTPPacketInfo=d{sockaddr_storage=CC[6c]q[112c]}I{tagIPPORT=i[16c](?=I[16C])S}{tagVPKTFLAG=iIIBBBBii{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=i{tagIPPORT=i[16c](?=I[16C])S}})^{tagVCSourceDestinationInfo}}iiiiiB{?=[12S]CBSCBBQBBBS{?=SSSSS}B}}I*}8
RTPUnregisterPacketCallback
RTPReset
_RTPTransport_ReceivePacket
_RTPProcessDecryptionStatusChange
RTPUninitialize
RTPMapPacketMultiplexModeToVTPMode
user
%s%08X@%s%s%s
RTPSetDefaultCNAME
CreateSocket
_RTPPacketCallback
BitrateToQuality
FileUtil_PrintBasicDesc
useZeroSignaling
SoundDec_Create
in  format:
out format:
DecodeNilPacket
SoundDec_Decode
 (AVC Out of Data error)
SoundDec_Encode
SoundDec_SetDTXPrimerSamples
SoundDec_SetBitrateInternal
SoundDec_SetDTX
SoundDec_SetEVSSIDPeriod
SoundDec_SetEVSChannelAwareOffset
SoundDec_SetEVSFormatHandling
SoundDec_SetEVSDecodeRF
SoundDec_SetAMRPayloadFormat
SoundDec_SetBitrate
SoundDec_GetMagicCookie
SoundDec_GetSpeechCodecBundleData
SoundDec_SetMagicCookie
TranslateASBDToPayloadFormat
com.apple.private.alloy.avconference.icloud
Signalled error at %s: Failed to create VTP socket
-[VCDatagramChannelIDS setupDriverSocket]
connectedLinks
T@"NSArray",R
defaultLink
T@"IDSDataChannelLinkContext",R
token
TI,R,V_token
destination
T@"NSString",R,V_destination
SoundPlayer_QueueAlarm
SoundPlayer_CallAlarms
com.apple.avconference.soundplayer.recvproc
SoundPlayer_Create
SoundPlayer_Destroy
SoundPlayer_AlarmThread
CStrToFourcc
{%f, %s, %x, %d, %d, %d, %d, %d}
SummerCreateHandle
SummerCloseHandle
SummerAdd
SummerLengthPred
SummerSumPred
hw.physicalcpu
Width
Height
FirstMB
SliceType
ReadFrameSliceHeader
SimplifyRatio
 %u,
TranslateVCPSliceTypeToGKS
-[VCStatsRecorder updateSessionStats:connection:totalPacketSent:totalPacketReceived:]
-[VCStatsRecorder getLocalStats:localSessionStats:]
-[VCStatsRecorder serverStatsSizeInByteForUplink:connection:]
-[VCRateControlOWRDEstimator relativeSendTimeWithTimestamp:timestampRate:]
-[VCRateControlOWRDEstimator relativeReceiveTimeWithTimestamp:timestampRate:]
-[VCRateControlOWRDEstimator calculateOWRDWithSendTime:receiveTime:]
-[VCRateControlOWRDEstimator detectOutOfOrderAndSpikeWithSendTimestamp:]
-[VCRateControlOWRDEstimator detectOutOfOrderAndSpikeWithReceiveTimestamp:]
-[VCRateControlOWRDEstimator resetOWRDEstimation]
{?=iB@}
-[VCMomentsHistoryBuffer initWithDelegate:bufferLength:dispatchQueue:]
-[VCMomentsHistoryBuffer updateBufferWithSample:timestamp:]
-[VCMomentsHistoryBuffer getClosestSampleForTimestamp:]
-[VCMomentsHistoryBuffer dequeueOneFrame]
-[VCMomentsHistoryBuffer enqueueWithSample:timestamp:]
vcKeyVideoStreamDownlinkOptimalBitrate
vcKeyVideoStreamDownlinkOperatingBitrate
vcKeyVideoStreamDownlinkIsOperatingAtMaxBitrate
vcKeyVideoStreamDownlinkIsOperatingAtMinBitrate
vcKeyVideoStreamUplinkOperatingBitrate
ERROR_DOMAIN
ERROR_CODE
ERROR_USERINFO
vcMediaStreamError
com.apple.AVConference.VCStreamManagerXPCQueue
-[VCMediaStreamManager pauseStreams:]
v8@?0L4
vcMediaStreamConnectionStarted
vcMediaStreamDidStartConnection
vcMediaStreamDidStopConnection
vcMediaStreamDidInterruptionBegin
vcMediaStreamDidInterruptionEnd
vcMediaStreamPaused
vcMediaStreamDidPause
vcMediaStreamResumed
vcMediaStreamDidResume
vcMediaStreamDTMFDigitReceived
vcMediaStreamTTYCharacterReceived
vcMediaStreamTextReceived
vcMediaStreamRTPPacketTimeout
vcMediaStreamRTCPPacketTimeout
vcMediaStreamRTCPPackets
vcMediaStreamRTCPPacketsReceived
vcMediaStreamInputFreqMetering
vcMediaStreamUpdateInputFrequencyMetering
vcMediaStreamOutputFreqMetering
vcMediaStreamUpdateOutputFrequencyMetering
vcMediaStreamDownlinkQualityInfo
vcMediaStreamDownlinkQualityDidChange
vcMediaStreamUplinkQualityInfo
vcMediaStreamUplinkQualityDidChange
vcMediaStreamUpdatedVideoConfiguration
-[VCMediaStreamManager vcMediaStream:didUpdateVideoConfiguration:error:dictionary:]
vcMediaStreamDidUpdateVideoConfiguration
vcMediaStreamDictionary
CLIENTPID
-[VCMediaStreamManager registerBlocksForService]_block_invoke
USERXPCARGUMENTS
vcMediaStreamStreamCapabilities
vcMediaStreamInitializeAudio
vcVirtualTTYDeviceInitialize
vcMediaStreamToken
vcVirtualRTTDeviceInitialize
vcVirtualTTYDeviceSendCharacter
vcVirtualTTYDeviceSendText
vcVirtualTTYDeviceTerminate
vcMediaStreamTerminateAudio
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCMediaStreamManager.m
Unexpected stream type
setStreamConfig called on an unsupported object
Stream config allocation failure
Failed to allocate the stream configuration
vcMediaStreamSetSessionConfig
vcMediaStreamSendDTMFEvent
vcMediaStreamStopSendDTMFEvent
vcMediaStreamVolume
-[VCMediaStreamManager registerBlocksForService]_block_invoke_3
vcMediaStreamSetVolume
vcMediaStreamStartConference
vcMediaStreamStopConference
vcMediaStreamSynchronizationStarted
vcMediaStreamDidStartSynchronization
vcMediaStreamStartSynchronization
vcMediaStreamPauseState
vcMediaStreamSetPause
vcMediaStreamUpdateVideoConfig
vcMediaStreamDirection
-[VCMediaStreamManager registerBlocksForService]_block_invoke_2
vcMediaStreamSetStreamDirection
vcMediaStreamRTCPEnabled
vcMediaStreamSetRTCPEnabled
vcMediaStreamRTPTimeoutEnabled
vcMediaStreamSetRTPTimeoutEnabled
vcMediaStreamRTCPTimeoutEnabled
vcMediaStreamSetRTCPTimeoutEnabled
vcMediaStreamRTPTimeoutInterval
vcMediaStreamSetRTPTimeoutInterval
vcMediaStreamRTCPTimeoutInterval
vcMediaStreamSetRTCPTimeoutInterval
vcMediaStreamRTCPSendInterval
vcMediaStreamSetRTCPSendInterval
vcMediaStreamInputFreqMeterEnabled
vcMediaStreamGetInputFrequencyMeteringEnabled
vcMediaStreamSetInputFrequencyMeteringEnabled
vcMediaStreamOutputFreqMeterEnabled
vcMediaStreamGetOutputFrequencyMeteringEnabled
vcMediaStreamSetOutputFrequencyMeteringEnabled
vcMeidaStreamInitializeVideo
vcMediaStreamTerminateVideo
vcMediaStreamRequestLastDecodedFrame
vcMediaStreamInitializeText
vcMediaStreamTerminateText
Video rule width %d height %d frame rate %.1f pref %.2f payload: %d
iWidth
Ti,R,N,V_width
iHeight
Ti,R,N,V_height
fRate
Tf,R,N,V_frameRate
iPayload
Ti,R,N,V_payload
T@"NSString",R,N
fPref
Tf,N,V_priority
videoStreamRampUpPacketLossRate
videoStreamRampDownPacketLossRate
videoStreamRampDownRoundTripTime
%@ state:%d RTT:%.3f packetLossRate:%f
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:0
MBL:0
%3u/%3u
 0:0/0  0:0/0 CS: 0 0 0 BB: 0
 UAT S _
-[VCVideoStreamRTTPLRRateControl stateChange:]
.vpbdump
VideoPacketBuffer_Destroy
VideoPacketBuffer_Reset
VideoPacketBuffer_AddPacket
VideoPacketBuffer_ScheduleFrames
VideoPacketBuffer_GetNextFrame
RecoverOneFECGroup
RTPProcessH264Packet failed
First packet is not start of GOB
%s, %u -> %u: %s%d, %d-%d-%d (%dB)
FEC recovered %d parity %d
missing 
Loss in middle of frame
Frame did not end with end_of_frame packet
Bad Slice size
AssembleFrame_H264
%d: MB %u ST %u
%d: FirstMB!=0 Stop!
%d: iSlices >= MAX_SLICES  Stop!
SPS/PPS received
ImgDesc: %dx%d
Needed a refresh frame, but this is not one
Preceding loss but not refresh frame
%s TS:%X %dB %s reason = %s
GOOD
NONE
VCAudioDecoderList_GetDecoderSettings
VCAudioDecoderList_Cleanup
VCAudioDecoderList_SetMagicCookieForPayload
VCAudioDecoderList_Setup
VCAudioDecoderList_GetSpeechCodecBundleData
VCAudioDecoderList_IsDTXFrame
-[VCConnectionLegacy initWithConnectionResult:type:]
-[VCConnectionLegacy isLocalIPPort:]
-[VCConnectionLegacy isRemoteIPPort:]
-[VCConnectionLegacy isOnSameIPPortWithConnection:]
-[VCConnectionLegacy isOnSameInterfacesWithConnection:]
Unknown
[%s %@(%s)<>%@<===>%@<>%@(%s)]
RELAY
NOT RELAY
WiFi
Cell
-[VCConnectionLegacy downlinkBitrateCap]
-[VCConnectionLegacy uplinkBitrateCap]
-[VCConnectionLegacy setDownlinkBitrateCap:]
-[VCConnectionLegacy setUplinkBitrateCap:]
isLocalOnWiFi
isRemoteOnWiFi
isLocalOnCellular
isRemoteOnCellular
isIPv6
connectionMTU
connectionId
isRelay
isVPN
serverIsDegraded
connectionUUID
T@"NSUUID",R
localConnectionType
remoteConnectionType
localCellTech
remoteCellTech
priority
localInterfaceTypeString
T@"NSString",R
remoteInterfaceTypeString
uplinkBitrateCap
downlinkBitrateCap
connectionResult
T^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}},R,V_connectionResult
waitToBeNominated
TB,V_waitToBeNominated
relayChannelNumber
TS,R
isUpgraded
isReplaceOnly
Ti,V_priority
TI,R,V_type
v12@?0^{__CFString=}4I8
com.apple.AVConferenceVCMoments.Notification
-[VCMoments processRequest:]
vcMomentsTransactionID
vcMomentsMediaType
-[VCMoments setCapabilities:]
vcMomentsRequestTimestamp
-[VCMoments processClientRequest:error:]
vcMomentsRequestState
-[VCMoments registerClient]
-[VCMoments deregisterClient]
v8@?0@"NSError"4
-[VCMoments processRemoteVideoRequest:]_block_invoke_2
vcMomentsRequestDidSucceed
-[VCMoments processRemoteLivePhotoRequest:]
-[VCMoments processRemotePhotoRequest:]
-[VCMoments notifyFinishWithRequest:didSucceed:fileSize:]
vcMomentsFileSize
VCMomentsError
isClientRegistered
TB,R,N,V_isClientRegistered
VCAudioRedBuilder
%s: primaryPayload:%s redPayloads:%s
-[VCAudioRedBuilder buildRedPayloadWithPrimaryPayload:redPayloads:]
-[VCAudioRedBuilder isPayloadTimestampWithinThreshold:forTimestamp:]
%s: redTimestamp:%d current:%s previous:%s
-[VCAudioRedBuilder nearestRedPayloadForTimestamp:]
%s: primary:%s numPayloads:%d maxDelay:%d strideIn20msBlocks:%f
-[VCAudioRedBuilder selectRedPayloadsForPrimaryPayload:]
%s: primary:%s numPayloads:%d maxDelay:%d count:%d
{ VCAudioRedPayload payloadType=%d bufferLen:%d timestamp=%u isRedAudio=%d redCount=%d sequenceOffset=%d }
VCAudioRedPayload NULL
count:%d history:%s 
-[VCAudioRedBuilder updatePayloadHistory:]
-[VCAudioRedBuilder initWithRedPayloadType:sampleRate:numPayloads:maxDelay:includeSequenceOffset:]
-[VCAudioRedBuilder setMaxDelay:]
-[VCAudioRedBuilder setNumPayloads:]
numPayloads
TI,N,V_numPayloads
maxDelay
TI,N,V_maxDelay
redPayloadType
Ti,R,N,V_redPayloadType
_VCAudioRedBuilder_SplitRedPacketIntoArray
VTU_ReallocPktsInfo
VTU_SplitVideoIntoPackets
VTU_PrepareH264FrameData
AddOneVPList
PrepareLastH264Fragment
audio
video
screen
rtpmap:123 H264/90000
fmtp:123 imagesize 0 rules 15:320:240:320:240:15
rtpmap:126 X-H264/90000
fmtp:126 imagesize 0 rules 15:320:240:320:240:15
%@=%@ %@ %@ %@%@
%VRTP-PORT%
RTP/AVP
origin
T@"NSString",&,N,Vorigin
audioPayloads
T@"NSMutableArray",R,N,VaudioPayloads
secondaryAudioPayloads
T@"NSMutableArray",R,N,VsecondaryAudioPayloads
sessionIP
T@"NSString",&,N,VsessionIP
audioRTPPort
T@"NSNumber",&,N,VaudioRTPPort
audioRTCPPort
T@"NSNumber",&,N,VaudioRTCPPort
audioRTPID
T@"NSNumber",&,N,VaudioRTPID
allowRTCPFB
TB,N,VallowRTCPFB
answerBandwidth
T@"NSNumber",&,N,VanswerBandwidth
T@"NSNumber",&,N,VmaxBandwidth
allowsDynamicMaxBitrate
TB,N,VallowsDynamicMaxBitrate
featuresListDict
T@"NSDictionary",&,N,VfeaturesListDict
allowsContentsChangeWithAspectPreservation
TB,N,VallowsContentsChangeWithAspectPreservation
T@"NSNumber",&,N,VaacBlockSize
T@"NSNumber",&,N,VaudioUnitModel
TB,N,VallowAudioRecording
AS:%@:%@
AS:%@
%@=0
%@=%@ 0 0 IN %@ %@
%RTP-IP-AF%
%RTP-IP%
%@=%@
%@=IN %@ %@
%@=0 0
DMBR
%@=%@:%@:%u
BBCODEC
%@=%@:%d %@
X_FLS
v16@?0@4@8^B12
%@=audio %@ %@ %@
%ARTP-PORT%
%@=rtcp:%@
%ARTCP-PORT%
%@=fmtp:AAC SamplesPerBlock %@
%@=allowrecording
%@=rtpID:%@
%@=au:%@
%@=fmtp:%@ %@
-[SDPMini(SDPParsing) parseMediaLine:]
-[SDPMini(SDPParsing) parseSessionAttributes:]
fmtp:AAC SamplesPerBlock
rtpID
rtcp:
fmtp:
allowrecording
fmtp:%d
block %u
block 
rtcp-fb:*%s%s
 rpsi
 nack
VCAudioLimiter_Allocate
VCAudioLimiter_Start
VCAudioLimiter_Process
/System/Library/Components/AudioDSP.component/Contents/MacOS/AudioDSP
AUControlFreakFactory
Apple: ControlFreak
_registerDynamicAudioUnits
_registerDynamicAudioUnit
startTime
Td,N,VstartTime
lastProbingSequenceTimeExpect
Td,N,VlastProbingSequenceTimeExpect
lastProbingSequenceTimeActual
Td,N,VlastProbingSequenceTimeActual
largeFrameSizeRequested
TI,N,VlargeFrameSizeRequested
largeFrameSizeAtCurrentBandwidth
TI,N,VlargeFrameSizeAtCurrentBandwidth
probingSequencePacketSize
TI,N,VprobingSequencePacketSize
probingSequencePacketCount
TI,N,VprobingSequencePacketCount
probingSequenceCount
Ti,N,VprobingSequenceCount
totalLargeFrameWaste
Ti,N,VtotalLargeFrameWaste
isLastFrameProbingSequence
TB,N,VisLastFrameProbingSequence
isLargeFrameRequestDisabled
TB,N,VisLargeFrameRequestDisabled
-[VCRateControlMediaController initWithMediaQueue:delegate:]
-[VCRateControlMediaController updateBasebandSuggestionWithStatistics:]
VCRateControl turn audio stall ON!
VCRateControl turn audio stall OFF!
 flush audio
 flush video
 stop video
Baseband queue HWM is hit, [delay:%.3f, queueDepth:%u, BBRate:%u, minRate:%u, audioRate:%u, audioFraction:%d, mediaSuggestion:%s%s%s]
Baseband queue LWM is hit, [delay:%.3f, queueDepth:%u, BBRate:%u, audioRate:%d, audioFraction:%d, resume video]
-[VCRateControlMediaController pauseVideoByUser:]
pause
resume
Video %s by user, [rate:%u, BBRate:%u, audioFraction:%d, videoStopped:%d]
-[VCRateControlMediaController stopVideoByVCRateControl]
-[VCRateControlMediaController resumeVideoByVCRateControl]
Decrease basebandFlushCount %d -> %d.
-[VCRateControlMediaController decreaseFlushCount:]
-[VCRateControlMediaController setAudioSendingBitrate:]
Change audio fraction tier from %d -> %d.
%s frame (%08X) is generated PT (%u), %d packets.
KeyFrame
RefreshFrame
Increase basebandFlushCount %d -> %d due to video refresh [TID:%0X].
Increase basebandFlushCount %d -> %d internally with suggestion.
-[VCRateControlMediaController printLargeFrameStatsAtTime:timeSinceLastProbingSequence:frameSize:wastedBytes:isFrameRequested:]
ARRIVED
OBSERVED
-[VCRateControlMediaController updateProbingLargeFrameSizeCap]
videoSendingBitrate
TI,N,V_videoSendingBitrate
audioSendingBitrate
TI,N,V_audioSendingBitrate
minTargetBitrate
TI,N,V_minTargetBitrate
TI,N,V_targetBitrate
basebandFlushCount
Ti,N,V_basebandFlushCount
basebandFlushedVideoCount
Ti,R,N,V_basebandFlushedVideoCount
basebandFlushedAudioCount
Ti,R,N,V_basebandFlushedAudioCount
isVideoStoppedByVCRateControl
TB,R,N,V_isVideoStoppedByVCRateControl
isVideoStopped
isInThrottlingMode
TB,R,N,V_isInThrottlingMode
isSenderProbingEnabled
TB,N,V_isSenderProbingEnabled
isAudioOnly
TB,N,V_isAudioOnly
isRateLimitedMaxTimeExceeded
TB,N,V_isRateLimitedMaxTimeExceeded
shouldDisableLargeFrameRequestsWhenInitialRampUp
TB,N,V_shouldDisableLargeFrameRequestsWhenInitialRampUp
probingLargeFrameSize
TI,R,N,V_probingLargeFrameSize
TI,R,N,V_probingSequencePacketCount
TI,R,N,V_probingSequencePacketSize
afrcRemoteEstimatedBandwidth
TI,N,V_afrcRemoteEstimatedBandwidth
isRTPFlushBasebandFromVCRateControl
TB,N,V_isRTPFlushBasebandFromVCRateControl
audioFractionTier
Ti,N,V_audioFractionTier
lastVideoKeyFrameTime
Td,R,N,V_lastVideoKeyFrameTime
DLCreateHandle
DLCloseHandle
DLUpdate
DLUnlock
DLSetConfIndex
DLGetData
DLSetState
DLGetState
DLGetCallID
DLSetAck
DLGetAck
DLPutMsg
DLGetMsg
DLIncreaseLocalSeq
DLSetMediaType
DLGetConfIndex
DLGetSIPPing
MatchSipMsgAndLock
-[VCIDRScheduler initWithStreams:captureFramerate:]
-[VCIDRScheduler computeBasePeriod]
-[VCIDRScheduler computeCaptureFramerate]
-[VCIDRScheduler computeGroupList]
-[VCIDRScheduler computeSchedulerItemList]
-[VCIDRScheduler computeSchedulerItemsBudget]
-[VCIDRScheduler placeRemainingItems:placedItems:leftItem:rightItem:]
-[VCIDRScheduler computeSchedulerItemsPosition]
IDR Scheduler: framerate:%d, basePeriod:%dms framesPerBasePeriod:%d groups:%@
basePeriodMs
TI,R,N,V_basePeriodMs
captureFramerate
TI,R,N,V_captureFramerate
-[VCConnectionManagerLegacy shouldNominateCandidatePairInternal:interfaceMask:nominated:demote:connectionPriority:replaceOnly:]
OPTIMAL
PRIMARY
SECONDARY
-[VCConnectionManagerLegacy addConnection:]
-[VCConnectionManagerLegacy removeConnection:]
-[VCConnectionManagerLegacy removeConnectionWithIPPortInternal:isLocalInterface:]
LOCAL
REMOTE
-[VCConnectionManagerLegacy reportConnection:isInitialConnection:]
connectionResultCallback %s/%s (rtt: %f cell: %d/%d v6/rel: %d/%d)  RTT=%d/%d
relay
-[VCConnectionManagerLegacy sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:]
pendingPrimaryConnection
T@"<VCConnectionProtocol>",&,N,V_pendingPrimaryConnection
pendingSecondaryConnection
T@"<VCConnectionProtocol>",&,N,V_pendingSecondaryConnection
relayConnectionID
T@"NSString",C,N,V_relayConnectionID
MQCreateHandle
MQCloseHandle
MQPut
MQGet
pixelBuffer
T^{__CVBuffer=},N,V_pixelBuffer
depthPixelBuffer
T^{__CVBuffer=},N,V_depthPixelBuffer
imageData
T@"NSData",&,V_imageData
time
T{?=qiIq},V_time
effectsMetadata
T@"NSData",&,V_effectsMetadata
renderProcessTime
Tf,V_renderProcessTime
vcSessionError
com.apple.AVConference.VCSessionManager.xpcCommandQueue
vcSessionStarted
vcSessionDidStart
vcSessionDidStop
vcSessionSucceeded
vcSessionParticipantID
vcSessionParameterVideoToken
vcSessionAddParticipantDidSuceed
vcSessionRemoveParticipantDidSucceed
vcSessionConfiguration
vcSessionDidUpdateConfiguration
vcServiceType
vcSessionParameterAudioEnabled
vcSessionAudioEnabledDidSucceed
vcSessionParameterVideoEnabled
vcSessionVideoEnabledDidSucceed
vcSessionRemoteAudioEnabledDidChange
vcSessionRemoteVideoEnabledDidChange
vcSessionParameterAudioPaused
vcSessionAudioPausedDidSucceed
vcSessionParameterVideoPaused
vcSessionVideoPausedDidSucceed
vcSessionRemoteAudioPausedDidChange
vcSessionRemoteVideoPausedDidChange
vcSessionParameterParticipantProminence
vcSessionParameterParticipantProminenceString
vcSessionRemoteProminenceDidChange
vcSessionDidDetectError
vcSessionIDSDestination
-[VCSessionManager registerBlocksForService]_block_invoke
vcSessionUUID
vcSessionParticipantData
vcSessionToken
vcSessionCapabilities
vcSessionInitialize
vcSessionTerminate
vcSessionParticipantIDs
vcSessionRemoveParticipants
vcSessionStart
vcSessionStop
vcSessionUpdateConfiguration
vcSessionParticipantConfigs
-[VCSessionManager registerBlocksForService]_block_invoke_5
vcSessionAddParticipants
vcSessionParameterMute
vcSessionSetMute
vcSessionParameterVolume
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCSessionManager.m
vcSessionSetVolume
vcSessionParameterAudioPosition
vcSessionSetAudioPosition
-[VCSessionManager registerBlocksForService]_block_invoke_4
vcSessionSetAudioEnabled
vcSessionSetVideoEnabled
vcSessionSetAudioPaused
vcSessionSetVideoPaused
vcSessionParameterParticipantConfiguration
vcSessionParameterVideoQuality
vcSessionParameterVisibilityIndex
vcSessionParameterProminenceIndex
-[VCSessionManager registerBlocksForService]_block_invoke_3
vcSessionUpdateParticipantConfiguration
vcSessionIDSParticipantID
sessions
T@"NSMutableDictionary",R,N,V_sessions
videoEnabled
TB,N,GisVideoEnabled,V_videoEnabled
redundancyEnabled
TB,N,GisRedundancyEnabled
-[VCAudioPowerSpectrumMeter initWithBinCount:refreshRate:delegate:]
-[VCAudioPowerSpectrumMeter processInternalEvents]
-[VCAudioPowerSpectrumMeter didUpdateAudioPowerSpectrum:]
audioPowerSpectrums
T@"NSDictionary",R,N,V_audioPowerSpectrums
messenger
T@"<VCMomentsMessenger>",R,N,V_messenger
com.apple.AVConference.VCMomentssManager.XPCCommandQueue
-[VCMomentsManager registerMomentsMessenger:withStreamToken:]_block_invoke
-[VCMomentsManager unregisterMomentsMessengerWithStreamToken:]_block_invoke
vcMomentsStreamToken
VCMomentsManager
vcMomentsCapabilities
-[VCMomentsManager registerBlocksForService]_block_invoke
vcMomentsInitialize
vcMomentsUninitialize
vcMomentsStartRequest
vcMomentsEndRequest
vcMomentsRejectRequest
-[VCMomentsManager notifyClientsWithStreamToken:service:arguments:]_block_invoke
vcMomentsError
vcMomentsDidStartProcessingRequest
vcMomentsFileURL
com.apple.avconference.moments
vcMomentsFileURLSandboxExtensionToken
-[VCMomentsManager streamToken:didEndProcessingRequest:URL:error:]
vcMomentsDidEndProcessingRequest
vcMomentsDidFinishRequest
-[VCMomentsManager streamTokenDidCleanupAllRequests:]_block_invoke
vcMomentsInitiatorID
vcMomentsRequestMode
T@"<VCMomentsMessengerDelegate>",N,V_delegate
*Invalid*
INVITE
OPTIONS
CANCEL
REGISTER
MESSAGE
REFER
SUBSCRIBE
NOTIFY
INFO
ParseMessage
SIP/
ParseStatusLine
SIP/2.0
ParseRequestLine
kern.osversion
hw.model
iProd
-[VCMomentsCollector dealloc]
T@"NSObject<VCAudioPowerLevelMonitorDelegate>",N,Vdelegate
-[VCVideoStreamReceiver initWithRTP:delegate:reportingAgent:dumpID:reportingParentID:]
com.apple.VideoConference.VCVideoStreamReceiver
v20@?0I4i8d12
com.apple.AVConference.videoreceiver.networkreceiveproc
-[VCVideoStreamReceiver startNetworkReceiveThread]_block_invoke
-[VCVideoStreamReceiver updateSequenceNumber:]
-[VCVideoStreamReceiver scheduleDecodeForTimestamp:]
-[VCVideoStreamReceiver processVideoRTP]
-[VCVideoStreamReceiver processVideoRTCP]
-[VCVideoStreamReceiver scheduleDecodeForFrameWithBuffer:size:timestamp:hostTime:showFrame:]
-[VCVideoStreamReceiver decodeFrame:showFrame:]
-[VCVideoStreamReceiver canDequeue:forTimestamp:]
-[VCVideoStreamReceiver dequeueAndDecodeForTimestamp:]
-[VCVideoStreamReceiver gatherRealtimeStats:]
VCVSTMMB
VCVSRxOperatingBitrate
%.5f
VCVSRxPacketLossPercentage
VCVSRxRoundTripTime
VCVSRxMaxOWRD
VCVSRxNOWRD
VCVSRxNOWRDSHORT
VCVSRxNOWRDACC
VCVSRxVideoStallDuration
VCVSRxMaxFrameDuration
VCVSRxAvgBitrate
VCVSRxMaxBitrate
VCVSRxMinBitrate
VCVSRxAvgFramerate
VCVSRxMaxFramerate
VCVSRxMinFramerate
VCVSRxVideoWidth
VCVSRxVideoHeight
VCVSRxVideoOrientation
-[VCVideoStreamReceiver handleActiveConnectionChange:]
createVideoFormatDescription
decoderFrameCallback
-[VCSessionParticipantRemote initWithIDSDestination:idsParticipantID:mediaNegotiator:opaqueData:delegate:processId:transportSessionID:sessionUUID:config:]
participantID:%@ 
v8@?0@"<VCSessionParticipantDelegate>"4
-[VCSessionParticipantRemote setRemoteVideoEnabled:]_block_invoke
forceVisibilityIndex
forceProminenceIndex
-[VCSessionParticipantRemote processParticipantInfo]
uuid:%@ 
-[VCSessionParticipantRemote setupAudioStreamConfiguration:audioRules:]
-[VCSessionParticipantRemote newAudioStreamConfigurationWithMultiwayAudioNegotiationResult:]
-[VCSessionParticipantRemote setupBandwidthAllocationTableForMediaStreamConfigs:entryType:]
-[VCSessionParticipantRemote setupAudioStreamFromMediaBlobWithIDSDestination:]
-[VCSessionParticipantRemote entryForStreamID:]
-[VCSessionParticipantRemote setActiveStreamIDs:]_block_invoke
v16@?0@"NSNumber"4@"VCVideoStream"8^B12
-[VCSessionParticipantRemote recommendedStreamIDsForSelectedMediaEntries:forceSeamlessTransition:]_block_invoke
-[VCSessionParticipantRemote negotiateAudioRules:]_block_invoke
-[VCSessionParticipantRemote redundancyController:redundancyPercentageDidChange:]_block_invoke
-[VCSessionParticipantRemote collectAudioChannelMetrics:]_block_invoke
-[VCSessionParticipantRemote updateVideoQualityNotification]
-[VCSessionParticipantRemote setVideoDegraded:]
VCSPVideoDegraded
-[VCSessionParticipantRemote mediaEntries]_block_invoke
-[VCSessionParticipantRemote isVideoExpected]
-[VCSessionParticipantRemote newVideoStreamConfigurationWithNegotiationVideoResult:]
-[VCSessionParticipantRemote setupVideoStreamFromMediaBlobWithIDSDestination:]
-[VCSessionParticipantRemote setActualBitrateForOptedInStreamID:withActiveStreamID:isVideo:]
-[VCSessionParticipantRemote updateShouldEnableFaceZoom]
-[VCSessionParticipantRemote debounceAudioPriority:]
-[VCSessionParticipantRemote updateAudioPriority:]
-[VCSessionParticipantRemote vcMediaStreamDidRTPTimeOut:]
-[VCSessionParticipantRemote vcMediaStreamDidRTCPTimeOut:]
-[VCSessionParticipantRemote vcMediaStreamDidDecryptionTimeOut:]
-[VCSessionParticipantRemote vcMediaStream:didReceiveFirstVideoFrameWithTime:]
-[VCSessionParticipantRemote vcMediaStream:didSwitchFromStreamID:toStreamID:]_block_invoke
uuid
mediaEntries
actualNetworkBitrateVideo
actualNetworkBitrateAudio
optedInNetworkBitrateVideo
optedInNetworkBitrateAudio
optedInVideoStreamID
T@"NSNumber",R
optedInAudioStreamID
activeDownlinkVideoStreamID
activeDownlinkAudioStreamID
videoQuality
visibilityIndex
prominenceIndex
isVisible
videoSuspended
TB,N,GisVideoSuspended
audioStreamInfo
T@"VCSessionParticipantMediaStreamInfo",R,N
videoStreamInfo
T@"NSNumber",&,N,V_optedInAudioStreamID
T@"NSNumber",&,N,V_optedInVideoStreamID
remoteVideoEnabled
TB,N,GisRemoteVideoEnabled,V_remoteVideoEnabled
remoteVideoPaused
TB,N,GisRemoteVideoPaused,V_remoteVideoPaused
isVideoExpected
TC,N,V_videoQuality
TI,N,V_visibilityIndex
TI,N,V_prominenceIndex
TS,R,V_activeDownlinkVideoStreamID
TS,R,V_activeDownlinkAudioStreamID
-[VCTransportSessionIDS dispatchedProcessDatagramChannelEventInfo:]
-[VCTransportSessionIDS start]_block_invoke
Start VCTransportSessionIDS failed
Destination/socket not set
v8@?0@"NSDictionary"4
Could not start transport session
datagramChannel start failed
-[VCTransportSessionIDS setConnectionSetupPiggybackBlob:]_block_invoke
-[VCTransportSessionIDS setPiggybackBlobPreference]
-[VCTransportSessionIDS setDefaultLink:]_block_invoke
-[VCTransportSessionIDS handleLinkConnectedWithInfo:]
-[VCTransportSessionIDS handleLinkDisconnectedWithInfo:]
-[VCTransportSessionIDS handleDefaultLinkUpdatedWithInfo:]
-[VCTransportSessionIDS handleIDSEncryptionInfoEvent:]
-[VCTransportSessionIDS handleIDSMembershipChangeInfoEvent:]
-[VCTransportSessionIDS handleUpdateRemoteSessionInfo:]
-[VCTransportSessionIDS handleChannelInfoReport:]
-[VCTransportSessionIDS discardConnection:]
-[VCTransportSessionIDS discardConnection:]_block_invoke
-[VCTransportSessionIDS VCIDSSessionInfoSynchronizer:sendVCIDSSessionInfoRequest:]
socket
Ti,N,V_socket
T@"NSString",C,N,V_destination
sessionInfoSynchronizer
T@"VCIDSSessionInfoSynchronizer",R,N,V_sessionInfoSynchronizer
-[VCVideoReceiverBase setEnableCVO:cvoExtensionID:]
-[VCVideoReceiverBase setEnableRateAdaptation:maxBitrate:minBitrate:adaptationInterval:]
-[VCVideoReceiverBase startVideo]
-[VCVideoReceiverBase stopVideo]
-[VCVideoReceiverBase pauseVideo]
-[VCVideoReceiverBase rtcpSendIntervalElapsed]
-[VCVideoReceiverBase startSynchronization:]
-[VCVideoReceiverBase stopSynchronization]
-[VCVideoReceiverBase updateSourcePlayoutTimestamp:]
-[VCVideoReceiverBase collectChannelMetrics:interval:]
-[VCVideoReceiverBase setTargetStreamID:]
-[VCVideoReceiverBase handleActiveConnectionChange:]
remoteVideoOrientation
Ti,V_remoteVideoOrientation
T@"<VCVideoReceiverDelegate>",N,V_delegate
syncSource
T@"<VCMediaStreamSyncSource>",N,V_syncSource
Td,V_roundTripTime
lastReceivedVideoRTPPacketTime
Td,R,V_lastReceivedVideoRTPPacketTime
lastReceivedVideoRTCPPacketTime
Td,R,V_lastReceivedVideoRTCPPacketTime
SIPSetMessageDelegateForCallID
SIPMessageReceivedHandler
SIPSetCellConditionChangeHandler
SIPCreateHandle
SIPCloseHandle
SIPSetPacketMultiplexMode
SIPStartListen
SIPStopListen
SIPConnectIPPort
10.0.0.1
10.0.0.2
SIPCancel
Remote Hang Up
SIPHangupWithTimeout
SIPCloseCall
SIPSendMessage
VCHandoverCandidateChange:VCHandoverNewCandidateBlob
SIPSendMessageAll
PING
SIPGetRemoteInfo
SIPSetDoKeyExchange
SIPSetEnableCompression
SIPSetAllowSameSourceDestination
TUMsgCallback
com.apple.avconference.sip.newcallproc
SIPNewCallProc
Timeout
Transport Error(%08X)
Cancelled
Internal Error(%08X)
SendTAStatus
SendTAStatusGeneric
com.apple.avconference.sip.cancelproc
SIPCancelProc
com.apple.avconference.sip.hangupproc
SIPHangupProc
com.apple.avconference.sip.messageproc
SIPMessageProc
SendTPStatus
SIPMapPacketMultiplexModeToTransportMode
SIPListenOnVirtualInterface
SIPStopListenOnInterface
virtual
physical
SIPListenOnPhysicalInterface
DLIsFinishedCallback
TUGenericLogCallback
videoPayloadCollections
TB,N,V_allowRTCPFB
T@"NSMutableArray",&,N,V_videoPayloadCollections
videoStreamAverageBitrateWindowDuration
-[VCVideoStreamRateAdaptation runVideoStreamRateAdaptation]
-[VCVideoStreamRateAdaptation receivedTMMBN:]
-[VCVideoStreamRateAdaptation scheduleTMMBR:]
VCVSRxOWRD
packetLossPercentage
Td,R,N,V_packetLossPercentage
Td,R,N,V_tmmbRTT
operatingBitrate
TI,R,N,V_operatingBitrate
sendTmmbrBitrate
TI,R,N,V_sendTmmbrBitrate
isOperatingAtMaxBitrate
TB,R,N,V_isOperatingAtMaxBitrate
isOperatingAtMinBitrate
TB,R,N,V_isOperatingAtMinBitrate
maxOWRD
Td,N,V_maxOWRD
Accept
Accept-Encoding
Accept-Language
Alert-Info
Allow
Allow-Events
Authentication-Info
Authorization
Call-ID
Call-Info
Contact
Content-Disposition
Content-Encoding
Content-Language
Content-Length
Content-Type
CSeq
Date
Error-Info
Event
Expires
From
In-Reply-To
Max-Forwards
MIME-Version
Min-Expires
Organization
Priority
Proxy-Authenticate
Proxy-Authorization
Proxy-Require
Record-Route
Refer-To
Reply-To
Require
Retry-After
Route
Server
Subject
Subscription-State
Supported
Timestamp
Unsupported
User-Agent
Warning
WWW-Authenticate
SKESeq
X-Call-ID
Reason
active
pending
terminated
deactivated
probation
rejected
timeout
giveup
noresource
conference
refer
ParseHeader
%s: %s
, %s
%s: 
%c: 
%c: %s
isfocus
ismultiway
%c: %s%s%s
%CLENGTH%
%c: %d
%s: %lu %s
%c: %s;%s
%s: %d
;%s%s
tag=
%c: %s<%s>%s
%s: %s; cause=%d
%s: %s<%s>
;%s%d
expires=
%s: %s%s
reason=
retry-after=
%s: %s%s%s
%c: %s%s
%s: %s
%c: %s/%s %s%s%s
%c: %s/%s [%s]%s%s
branch=
received=
%s: %lu;%d
CreateAcceptHdr
application/sdp
message/sipfrag
application/conference-info+xml
CreateAllowHdr
CreateAllowEventsHdr
CreateCallIDHdr
CreateContactHdr
CreateContentEncodingHdr
CreateContentLengthHdr
CreateContentTypeHdr
CreateCSeqHdr
CreateExpiresHdr
CreateFromHdr
CreateMaxForwardsHdr
CreateMinExpiresHdr
CreateToHdr
CreateUserAgentHdr
CreateViaHdr
CreateReasonHdr
CopySipHeader
ParseUnsupported
ParseAcceptHdr
ParseAllowHdr
ParseAllowEventsHdr
ParseCallIDHdr
ParseContactHdr
ParseContentEncodingHdr
ParseContentLengthHdr
ParseContentTypeHdr
ParseCSeqHdr
ParseEventHdr
ParseExpiresHdr
ParseFromHdr
ParseMaxForwardsHdr
ParseReasonHdr
cause=
text=
ParseMinExpiresHdr
ParseReferToHdr
ParseSubscriptionStateHdr
ParseToHdr
ParseUserAgentHdr
ParseViaHdr
ParseSKESeqHdr
ParseXCallIDHdr
CreateInvite
"%s"
Viceroy 1.7.0/GK
CreateAck
CreateCancel
CreateBye
application/ske
CreateBinaryMessageInDialog
text/plain
CreateGenericStatus
%s %s %s
%s %d %s
ConstructSipMsg
AssignHeader
CreateGenericSIPMsg
SIPCompressCallback
%08x-%04x-%04x-%04x-%08x%04x
z9hG4bK%08x%08x
ParseSipUri
transport=
method=
%s:%s%s%s%s%s%s
%s:%s%s[%s]%s%s%s
-[VCMediaStreamStats init]
bitrateKbps
maxBitrateKbps
TI,N,V_maxBitrateKbps
minBitrateKbps
TI,N,V_minBitrateKbps
framerate
maxFramerate
Td,N,V_maxFramerate
minFramerate
Td,N,V_minFramerate
maxFrameDurationMillis
TS,N,V_maxFrameDurationMillis
Add participant failed
Unable to init remote participant
Remote participant already exist in session
Remote participant data is nil
Trying to remove an unknown participant
Invalid participant
Bad API usage
Start called on a stopping session
Stop called on a starting session
Start called while session is already in progress
Stop called on an already stopped session
Session start failed
One or more participants failed to start
Local source collision detected
Remote source collision detected
Update configuration failed
Failed to update session configuration
Media decryption failed
Remote media decryption failed
Fractured media detected
Remote participant subscribed to unknown stream ID
Failed to set the volume
Invalid input
Failed to set audio position
Audio position value is out of range
Participant start error
Start called on stopping participant
Participant stop error
Stop called on a starting participant
Start called on an already started participant
Stop called on an already stopped participant
Participant enabling/disabling audio/video in progress
Enable/disable audio or video called when it is already in progress
Participant stop in progress
Enable/disable audio or video called on a stopping participant
Participant start in progress
Enable/disable audio or video called on a starting participant
Participant in invalid
API called when not in the right state
Invalid Status
Trying
Ringing
Call Is Being Forwarded
Queued
Session Progress
Accepted
Multiple Choices
Moved Permanently
Moved Temporarily
Use Proxy
Alternative Service
Bad Request
Unauthorized
Payment Required
Forbidden
Not Found
Method Not Allowed
Not Acceptable
Proxy Authentication Required
Request Timeout
Gone
Request Entity Too Large
Request-URI Too Large
Unsupported Media Type
Unsupported URI Scheme
Bad Extension
Extension Required
Interval Too Brief
Temporarily not available
Call Leg/Transaction Does Not Exist
Loop Detected
Too Many Hops
Address Incomplete
Ambiguous
Busy Here
Request Terminated
Not Acceptable Here
Bad Event
Request Pending
Undecipherable
Internal Server Error
Not Implemented
Bad Gateway
Service Unavailable
Server Time-out
SIP Version not supported
Message Too Large
Busy Everywhere
Decline
Does not exist anywhere
TACreateHandle
TACloseHandle
TASend
TACancel
RTTAdjustedTimeOut(%d): %d -> %d (RTT: %d)
RTTAdjustedTimeOut
TAStart
TASetRTT
com.apple.avconference.transaction.inviteclientproc
TAInviteClientProc
TAMsgCallback
com.apple.avconference.transaction.noninviteclientproc
TANonInviteClientProc
com.apple.avconference.transaction.inviteserverproc
TAInviteServerProc
com.apple.avconference.transaction.noninviteserverproc
TANonInviteServerProc
-[VCVideoReceiverDefault handleRequestingKeyFrameGenerationWithStreamID:]
remoteVideoAttributes
T@"VideoAttributes",&,VremoteVideoAttributes
shouldEnableFaceZoom
TB,N,V_shouldEnableFaceZoom
EncoderVTCreateHandle
EncoderVTCloseHandle
EncoderVTSetThermalLevel
EncoderVTSetBitRate
EncoderVTEncodeFrame
EncoderVTGenerateKeyFrame
EncoderVTSendImgDesc
EncoderVTPixelBufferFromPool
com.apple.VideoConference.VCConnectionManagerDelegateQueue
com.apple.VideoConference.VCConnectionManagerCallbackQueue
-[VCConnectionManager setupConnectionHealthMonitor]
-[VCConnectionManager setConnectionPause:isLocalConnection:]
-[VCConnectionManager setDuplicationEnabledInternal:]
No duplication
Local iRAT suggestion
Remote iRAT suggestion
Both local and remote iRAT suggestion
Local no packet received
Remote no packet received
-[VCConnectionManager processWRMNotification:]
Cellular
-[VCConnectionManager processRemoteWRMSuggestion:isRemoteDuplicating:]
with
without
-[VCConnectionManager updatePacketCountAndByteCountWithIndex:packetSize:numOfStreamId:isPriorityIncluded:isOutgoing:]
-[VCConnectionManager synchronizeParticipantGenerationCounter:]
-[VCConnectionManager getPacketCountWithIndex:isOutgoing:]
-[VCConnectionManager getByteCountWithIndex:isOutgoing:]
-[VCConnectionManager updateSessionStats:]
-[VCConnectionManager primaryConnectionChanged:oldPrimaryConnection:]
-[VCConnectionManager isBetterConnection:asPrimary:]
-[VCConnectionManager isOptimalConnection:asPrimary:interfaceMask:]
is not
-[VCConnectionManager connectionForQualityInternal:]
-[VCConnectionManager checkiRATSuggestion]
-[VCConnectionManager checkiRATSuggestionDefaultValue]
-[VCConnectionManager updateWRMDuplicationForLocaliRATSuggestion]
-[VCConnectionManager updateWRMDuplicationForRemoteiRATSuggestion]
-[VCConnectionManager updateWRMDuplicationForHandover]
-[VCConnectionManager shouldHandoverWhenUpdateWRMDuplication:]
-[VCConnectionManager createSourceDestinationInfoList]
-[VCConnectionManager addConnection:]
-[VCConnectionManager removeConnection:]
-[VCConnectionManager updateCellularMTU:]
-[VCConnectionManager updateCellularTech:forLocalInterface:]
-[VCConnectionManager sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:]
-[VCConnectionManager copyConnectionWithSourceDestinationInfo:isPrimary:]
-[VCConnectionManager shouldAcceptDataFromSourceDestinationInfo:]
-[VCConnectionManager updateConnectionStatsWithIndicatorNoPackets:]
no-remote
remote-no-remote
-[VCConnectionManager updateConnectionStatsWithIndicatorPrimaryImproved:]
lastPrimaryConnectionInUse
T@"<VCConnectionProtocol>",&,N,V_lastPrimaryConnectionInUse
connectionForDuplication
T@"<VCConnectionProtocol>",&,N,V_connectionForDuplication
TL,V_callID
relayServerProvider
Ti,V_relayServerProvider
isDuplicationEnabled
TB,N,SsetDuplicationEnabled:,V_enableDuplication
preferredLocalInterfaceForDuplication
Ti,V_preferredLocalInterfaceForDuplication
preferredRemoteInterfaceForDuplication
Ti,V_preferredRemoteInterfaceForDuplication
isLocalCellularInterfaceUsed
T@"<VCConnectionManagerDelegate>"
TB,V_isAudioOnly
supportDuplication
TB,V_supportDuplication
primaryConnection
T@"<VCConnectionProtocol>",&,N,V_primaryConnection
secondaryConnection
T@"<VCConnectionProtocol>",&,N,V_secondaryConnection
connectionCount
mediaExcessiveCellularTxBytes
Ti,R,V_mediaExcessiveCellularTxBytes
mediaExcessiveCellularRxBytes
Ti,R,V_mediaExcessiveCellularRxBytes
signalingExcessiveCellularTxBytes
Ti,R,V_signalingExcessiveCellularTxBytes
signalingExcessiveCellularRxBytes
Ti,R,V_signalingExcessiveCellularRxBytes
remoteNoRemotePacketInterval
Td,R,V_remoteNoRemotePacketInterval
statsRecorder
T@"VCStatsRecorder",R,N,V_statsRecorder
TI,R,V_targetBitrateCap
-[VCNetworkFeedbackController requestWRMNotification]
-[VCNetworkFeedbackController setWRMNotification:]
-[VCNetworkFeedbackController wcmSetCallConfig:interferenceLevel:]
-[VCNetworkFeedbackController wcmGetCallConfig:targetBitrate:]
-[VCNetworkFeedbackController setupWRMClient]
-[VCNetworkFeedbackController cleanupWRMClient]
recommendedTargetBitrateCap
clientTargetBitrate
TI,V_clientTargetBitrate
clientTargetBitrateCap
TI,V_clientTargetBitrateCap
-[VCAudioClient startWithError:]
Session parameters have not been set
Timeout while starting the client
-[VCAudioClient stopWithError:]_block_invoke
-[VCAudioClient stopWithError:]
inputDevice
T@"AVAudioDevice",&,N
outputDevice
processId
Ti,R,N,V_processId
isMuted
TB,R,N,V_muted
T@"VCAudioIO",&,N,V_audioIO
MVRA
RVRA1
RVRA2
VideoUtil_CreateSampleFromBuffer
+[VideoUtil convertPixelBufferToJPEG:withAssetIdentifier:cameraStatusBits:]
+[VideoUtil sizeForVideoResolution:]
TPSendUDPPacketARPL
TPSendUDPDataPacket
TPCreateHandle
com.apple.VideoConference.ICEConnectivityCallbackQueue
TPCloseHandle
TPCloseHandle_block_invoke
TPSetPacketMultiplexMode
TPSetupOpenFaceTimeSecurity
TPGetLoopbackIP
TPListenVirtualInterface
TPListenOnPhysicalInterface
TPStopListen
TPSend
TPAddTransaction
TPRemoveTransaction
TPGetType
TPStopHeartbeat
TPGetInterfaceStillExists
TPGetConnectionData
TPStartConnectionCheck
TPDiscardConnectionResult
TPDiscardRelayBinding
TPDiscardRelayBindingWithChannelNumber
TPRemovePreservedPortBindForCallID
TPSetCellConditionChangeHandler
TPUpdateInterfaceList
TPStopConnectivityCheck
TPGetNextBestCandidate
TPGetRemoteCIDForDstIPPort
TPSetSKEState
TPSetForceRelay
TPSetForceIPv6
TPSetReportingAgent
TPSetICETimeout
TPSetARPLHandler
TPCleanupARPLHandler
TPUpdateICERole
TPUpdateQoS
TPGetConnErrorCode
TPSetDataPacketReceivedCallback
TPProcessRemoteInterfaceChangeMessage
TPGetRemoteICEVersion
TPSetAllowSameSourceDestination
SendUDPPacket
SendUDPPacketForCList
dtls
ListenIDS
CreateSocketForIDS
TPEnsureRecvProcStarted
com.apple.avconference.transport.recvproc
TPRecvProc
RecvMessageUDP
PassMessage
CallSIPMessageCallback
ListenUDP
SendUDP
%VRTCP-PORT%
CompressMsg
AppendBinaryBody
TPAddIPPortToCLIST
RemoveCListForCallID
CreateSocketAndBind
TransportMapPacketMultiplexModeToVTPMode
needUpdateRemoteCandidateList
TPSendUDPPacket
TPRecvUDPPacketWithTimeout
TPConnectedCallback
TPConnectedCallback_block_invoke
TPCancelRecvUDP
TPProcessICENomination
TPNewCandidatesCallback
TPNewCandidatesCallback_block_invoke
TPShouldNominateICECandidatePair
TPRemoveIPPort
TPRemoveIPPort_block_invoke
%2u%2u%2u%2u%2u %6u
Baseband target bitrate changed and not stable.
New bitrate stabilized for baseband, collected %d BDCD samples and start normalizing BDCD.
Unstable bitrate for baseband, start re-collecting BDCD list...
isTargetBitrateStabilized
TB,N,V_isTargetBitrateStabilized
-[AVCBasebandCongestionDetector dealloc]
Start re-collecting BDCD samples [flushCount %d, BBAvgTxRate %d].
[Bogus baseband notification, discard]
TID[%04X] Baseband Drop ACK no packet dropped
TID[%04X] Baseband Drop ACK reported failure
TID[%04X] Baseband Drop ACK for PT %u: %2u packets dropped [%s]
basebandTxBitrate
TI,R,N,V_basebandTxBitrate
basebandAverageBitrate
TI,R,N,V_basebandAverageBitrate
basebandQueueDepth
TI,R,N,V_basebandQueueDepth
basebandExpectedQueuingDelay
Td,R,N,V_basebandExpectedQueuingDelay
{ %@: %@ type=%d maxNetworkBitrate=%u qualityIndex=%u videoQuality=%u visibilityIndex=%u prominenceIndex=%u streamID=%u repairStreamID=%u repairNetworkBitrate=%u actualNetworkBitrate=%u isLowestQualityAudio=%d }
-[VCSessionBandwidthAllocationTableEntry compare:]
+[VCSessionBandwidthAllocationTableEntry compareAudioEntry:audioEntry:]
+[VCSessionBandwidthAllocationTableEntry compareVideoEntry:videoEntry:]
+[VCSessionBandwidthAllocationTableEntry compareAudioEntry:videoEntry:]
client
T@"<VCSessionDownlinkBandwidthAllocatorClient>",R,V_client
TI,R,V_maxNetworkBitrate
TI,R,V_qualityIndex
isLowestQualityAudio
TB,V_isLowestQualityAudio
TC,R,V_type
TI,R,V_streamID
actualNetworkBitrate
TI,V_actualNetworkBitrate
repairStreamID
TI,R,V_repairStreamID
repairMaxNetworkBitrate
TI,R,V_repairMaxNetworkBitrate
hasRepairStreamID
TB,R,V_hasRepairStreamID
TB,GisEnabled,V_enabled
SRTPCleanUpEncryption
SRTPPrepareEncryption
SRTPUseEncryption
SRTPUpdateEncryption
SRTPUpdateEncryptionInfo
SRTPDeriveMasterKeyInfo
SRTPEncryptData
SRTPEncrypt
SRTCPEncrypt
SRTPAddAuthenticationTag
SRTCPAddAuthenticationTag
SRTCPVerifyAuthenticationTag
SRTPCancelEncryption
SRTPWaitUseEncryption
getSRTPROC
SRTPInitCrypt
MakeCounter
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m
-[TCPTunnelClient destroyDispatchTimer]
-[TCPTunnelClient createDispatchTimer:withDetailedError:]_block_invoke
cannot establish TCP TURN channel
TURN request is timed out
-[TCPTunnelClient createDispatchTimer:withDetailedError:]
TCP TURN channel closed
Socket closed while accepting packets
-[TCPTunnelClient processSocketRead]
-[TCPTunnelClient sendTCPData:bufSize:]
Socket closed while writing
-[TCPTunnelClient processSocketWrite:]
-[TCPTunnelClient receivedControlData:]
Error parsing TURN message (%08X)
Allocation Failed: %u
ChannelBind Failed: %u
Refresh Failed: %u
-[TCPTunnelClient processSocketReadSSL]
TCP/SSL TURN channel closed
-[TCPTunnelClient receivedSSLConnectionData:recordType:]
-[TCPTunnelClient initWithRelayRequestDictionary:withCallID:relayType:errorCode:]
Dummy
com.apple.viceroy.TCPTunnel
-[TCPTunnelClient initWithRelayRequestDictionary:withCallID:relayType:errorCode:]_block_invoke
can't create write source.
can't connect socket.
can't create read source.
-[TCPTunnelClient dealloc]
-[TCPTunnelClient sendAllocateMsg:]
Sending TCPTunnel Allocate Request failed.
Make request error: %x.
Encode request error: %x.
-[TCPTunnelClient sendAllocateMsg:]_block_invoke
-[TCPTunnelClient sendChannelBindingMsgWithDict:error:]
Sending TCPTunnel ChannelBinding Request failed.
-[TCPTunnelClient sendChannelBindingMsgWithDict:error:]_block_invoke
-[TCPTunnelClient sendRefreshMsg:error:]
Sending TCPTunnel Refresh Request failed.
-[TCPTunnelClient unbindChannel]_block_invoke
-[TCPTunnelClient closeTunnelSocket]
-[TCPTunnelClient closeTunnelSocket]_block_invoke
receiveHandler
T@?,C,V_handler
allocationResponseHandler
T@?,C,V_allocationResponseHandler
terminationHandler
T@?,C,V_terminationHandler
bindingResponseHandler
T@?,C,V_bindingResponseHandler
destroyHandler
T@?,C,V_destroyHandler
participantID
T@"NSString",C,V_participantID
-[TCPBufferPool getBufferFromPool:]
-[TCPBufferPool returnBufferToPool:]
Pool(%d):
 %4d
-[TCPBufferPool monitorBufferPool]
<VCCallSession localCallID = %d, remoteCallID = %d, state = %d, sentDidStartAsYES = %d>
VCCallSession
-[VCCallSession initWithDeviceRole:transportType:]
com.apple.VideoConference.VCCallSession.connectionChangeQueue
com.apple.VideoConference.VCCallSession.videoQueue
com.apple.VideoConference.VCCallSession.videoAsyncQueue
com.apple.VideoConference.VCCallSession.qualityQueue
com.apple.VideoConference.VCCallSession.audioQueue
com.apple.VideoConference.VCCallSession.delegateNotificationQueue
com.apple.avconference.vccallsession.celltech
CallSettings
.calldump
com.apple.VideoConference.CallSettingsLog
-[VCCallSession initWithDeviceRole:transportType:]_block_invoke
com.apple.avconference.vccallsession.timestamp
bandwidthUpstream
packetLateAndMissingRatio
-[VCCallSession setOperatingMode:]_block_invoke
-[VCCallSession updateVideoQualityStatus:bitrate:time:isRemote:]_block_invoke
enableBBNote
-[VCCallSession evaluateEnableRRx:]
enableRRx
-[VCCallSession updateMaxPktLength]
-[VCCallSession handleCellTechChange:]
-[VCCallSession handleCellTechChange:]_block_invoke_2
-[VCCallSession handleCellTechChange:]_block_invoke
VCCellTechKey
VCMaxBitrateKey
VCCellTechChange
CellTech
-[VCCallSession remoteCellTechStateUpdate:maxRemoteBitrate:]_block_invoke
matchedFeaturesListString
-[VCCallSession getFeaturesListStringForPayload:]
localFeaturesListString
remoteFeaturesListString
-[VCCallSession applyFeaturesListStringForPayload:]
%d/%d,%d/%d
useFakeLF
-[VCCallSession chooseVideoPayloadForInterface:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCCallSession.m
Could not find a compatible codec. Participant may switched wireless interface.
-[VCCallSession schedulePrimaryConnectionChange:oldConnection:]_block_invoke
-[VCCallSession handlePendingPrimaryConnectionChange]_block_invoke
-[VCCallSession updateRemoteMediaStallState:]
SymptomReporterOptionalKeySessionID
SymptomReporterOptionalKeyPeerID
-[VCCallSession updateLastReceivedPacketWithTimestamp:]_block_invoke_2
-[VCCallSession updateLastReceivedPacketWithTimestamp:]_block_invoke
Network conditions became unusable for %d seconds
Bad network conditions
-[VCCallSession handshakeComplete:withError:]
DTLS
No trust for Peer
Peer Common Name Mismatch
-[VCCallSession dealloc]
The connection timed out without getting started
Client disconnected session before completely initializing it
-[VCCallSession cancelConnectionTimeoutTimer]
-[VCCallSession setupConnectionTimeoutTimerWithErrorCode:detailedCode:description:reason:]_block_invoke
treatLTEAs4G
-[VCCallSession startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]
Failed to process response media blob
Media blob error
-[VCCallSession startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]_block_invoke
v8@?0@4
v12@?0I4@8
-[VCCallSession handleReceivedPiggybackBlobIDS:]
Signalled error at %s: Piggyback SKE blob is nil
Signalled error at %s: skeState is NULL
Signalled error at %s: SKEState_SetBlob(1) failed
Signalled error at %s: SKEState_CopySecretKeySync failed
Media insecure
Key exchange failed
-[VCCallSession rtcpDescriptor]
-[VCCallSession setupWRMClient]
-[VCCallSession cleanupWRMClient]
-[VCCallSession setWRMNotification:]
-[VCCallSession sendWRMStatusUpdate:]
-[VCCallSession requestWRMNotification]
-[VCCallSession newMediaBlobWithRemoteMediaBlob:localCallID:isLowBitrateCodecPreferred:]
-[VCCallSession reportOperatingMode]
Mode
Watch
-[VCCallSession inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:error:]
Failed to generate the media blob
1431.31
-[VCCallSession addLocalCallInfoToInviteDictionary:]
-[VCCallSession setRemoteCallInfoFromInviteDictionary:]
VCAudioPaused
AudioPauseStateMessageTopic
VCAudioUnpaused
-[VCCallSession setPauseAudio:force:error:]
-[VCCallSession setPauseAudio:force:error:]_block_invoke
-[VCCallSession setSuspendVideo]
VCVideoPaused
VideoPauseStateMessageTopic
-[VCCallSession setResumeVideo]
VCVideoUnpaused
-[VCCallSession setPauseVideo:force:error:]_block_invoke_2
-[VCCallSession processRelayRequestResponseDict:didOriginateRequest:]
-[VCCallSession processRelayUpdateDict:didOriginateRequest:]
-[VCCallSession processCancelRelayRequest:didOriginateRequest:]
-[VCCallSession sendARPLData:toCallID:]
-[VCCallSession negotiatedReceivingFramerate]
-[VCCallSession setSessionConferenceState:callID:]
VCWindowState
VCWindowStateChange
-[VCCallSession setSessionConferenceVisualRectangle:callID:]
VCWindowOriginX
VCWindowOriginY
VCWindowWidth
VCWindowHeight
-[VCCallSession setPeerProtocolVersion:]
-[VCCallSession handleNewConnectionSetup:isInitialConnection:]
-[VCCallSession handleFirstConnectionSetup:]
-[VCCallSession setupSecureDataChannel]
connectionChangeState
Ti,VconnectionChangeState
connectionManager
T@"VCConnectionManager",&,VconnectionManager
localCallInfo
T@"VCCallInfo",R,VlocalCallInfo
peerCN
T@"NSString",C,N,VpeerCN
audioReceiver
T^{tagVCAudioReceiver={tagVCAudioReceiverConfig=I[3{tagVCAudioReceiverStream=^{tagHANDLE}S}]^v^vIiiB^{opaqueRTCReporting}iB^{__CFString}^{__CFString}SB}^v^v^{opaqueVCJitterBuffer}B^{AudioStreamBasicDescription}id{?=qiIq}^{tagVCRealTimeThread}{tagVCAudioReceiverReportingTask=^{opaqueRTCReporting}i^{tagHANDLE}}B{_opaque_pthread_mutex_t=l[40c]}{_opaque_pthread_mutex_t=l[40c]}{tagVCAudioDecoderList=^{tagDecoderSettings}I}I{tagVCAudioReceiverStatistics=AI}^{tagWRMMetricsInfo}^?{tagVCAudioReceiverCallbackContext=^v^?^?}^?{tagVCAudioReceiverCallbackContext=^v^?^?}I[2{_RTCPPacketList=(tagNTP=Q{?=II})C[10^{tagRTCPPACKET}][1472C]I[1472C]}]dI[300{tagPacketHistoryInfo=ISIBB}]SS^{tagVCAudioReceiverStream}SSBSSSSI},R,VaudioReceiver
isCurrentPayloadTypeValid
isCaller
sessionID
T@"NSString",C,N,VsessionID
isStarted
TB,N,VisStarted
imageAttributeRules
T@"VCImageAttributeRules",&,N,VimageAttributeRules
shouldSendAudio
TB,N,VshouldSendAudio
TI,N,VroundTripTime
useRateControl
TB,N,VuseRateControl
isRTCPFBEnabled
TB,N,VisRTCPFBEnabled
Td,N,VpacketLossRate
Tf,N,VpacketLateAndMissingRatio
networkQuality
Td,R
networkConditionsTimeoutInSeconds
Td,N,VnetworkConditionsTimeoutInSeconds
signalStrength
Ti,N,VsignalStrength
signalRaw
Ti,N,VsignalRaw
signalGrade
Ti,N,VsignalGrade
lastSentAudioSampleTime
Ti,N,VnatType
useCompressedConnectionData
T@"NSObject<VCCallSessionDelegate>",&,Vdelegate
rtpHandle
T^{tagHANDLE=i},VrtpHandle
numBufferBytesAvailable
maxPacketLength
TS,VmaxPacketLength
Ti,Vstate
sipState
Ti,V_sipState
didSend200OK
TB,VdidSend200OK
videoPayload
Ti,VvideoPayload
sampleRate
Ti,VsampleRate
isAudioRunning
TB,R,VisAudioRunning
isVideoRunning
videoIsPaused
TB,R,VaudioIsPaused
isWaitingForICEResult
TB,VisWaitingForICEResult
receivedSIPInvite
TB,VreceivedSIPInvite
hMediaQueue
T^{tagHANDLE=i},VhMediaQueue
hAFRC
T^{tagHANDLE=i},VhAFRC
ringBuf
T@"GKRingBuffer",&,N,VringBuf
lastReceived
TI,VlastReceived
bundledPackets
packetsPerBundle
preferredAudioCodec
Ti,VpreferredAudioCodec
useControlByte
TB,VuseControlByte
useUEP
TB,VuseUEP
inputMeter
Ti,VbandwidthUpstream
bandwidthDownstream
Ti,VbandwidthDownstream
mutedPeers
T@"NSArray",&,N,VmutedPeers
qualityDelegate
T@"NSObject<VideoConferenceChannelQualityDelegate>"
shouldTimeoutPackets
TB,VshouldTimeoutPackets
srtpKeyBytes
T@"NSData",&,VsrtpKeyBytes
T@"VideoAttributes",&,N,VremoteVideoAttributes
remoteFrameWidth
TI,VremoteFrameWidth
remoteFrameHeight
TI,VremoteFrameHeight
operatingMode
Ti,N,VoperatingMode
isSKEOptimizationEnabled
isRemoteMediaStalled
TB,R,VisRemoteMediaStalled
T@"VCCapabilities",&
Ti,V_deviceRole
peerReportingID
T@"NSString",C,N,VpeerReportingID
basebandCodecSampleRate
T@"NSNumber",&,N,VbasebandCodecSampleRate
basebandCodecType
T@"NSString",C,N,VbasebandCodecType
audioTierNetworkBitrate
audioTierAudioCodecBitrate
audioTierPacketsPerBundle
audioTierRedNumPayloads
audioTierPayload
dtxMetrics
T@"NSDictionary",R,N
T^{opaqueRTCReporting=},R,N
-[VCCallSession(WCMClientDelegate) wcmSetCallConfig:interferenceLevel:]
-[VCCallSession(WCMClientDelegate) wcmGetCallConfig:targetBitrate:]
-[VCCallSession(Callbacks) sipCallback:callID:msgIn:msgOut:optional:confIndex:]
DTLS-SRTP
Video Insecure
Encryption key setup did not complete successfully
Audio Insecure
Identif
UserMessage
MediaCallback
-[VCCallSession(PrivateMethods) setupIDSConnectionForCallID:destination:socket:error:]
Cannot setup IDS connection
No destination/socket
-[VCCallSession(PrivateMethods) setSKEBlobOnTransportSession]
-[VCCallSession(PrivateMethods) configureLegacyTransportWithInviteInfo:error:]
Cannot setup legacy connection
No remote connection blob
SKECheckRemoteCert
v16@?0^{SKEStateOpaque=}4^{__SecCertificate=}8^i12
-[VCCallSession(PrivateMethods) newSKEBlobWithRemoteSKEBlob:]
-[VCCallSession(PrivateMethods) setupEncryptionWithKey:confIndex:]
-[VCCallSession(PrivateMethods) initWithRelevantStorebagEntries]
-[VCCallSession(PrivateMethods) logDetailedNetworkInformation]
forceDTLS
-[VCCallSession(PrivateMethods) setupDTLSDefaults]
-[VCCallSession(PrivateMethods) setupPeerInfo:usingInviteData:isCaller:capabilities:]
Connection to remote participant timed out
Connection took too long
-[VCCallSession(PrivateMethods) notifyDelegateAndEndCall:didRemoteCancel:error:]
-[VCCallSession(PrivateMethods) reportDashboardEndResult:]
Media cleanup
Ping!
VCPingTopic
-[VCCallSession(PrivateMethods) stopPausedHeartbeat]
-[VCCallSession(PrivateMethods) logPerfTimings]
-[VCCallSession(PrivateMethods) processSIPMessage:msgOut:optional:confIndex:]
SKEComplete
SKEReportError
skeDetailCode
filePath
reason
-[VCCallSession(PrivateMethods) resetState]
-[VCCallSession(PrivateMethods) setupCalleeSIPStartTimeout:]_block_invoke
GKVoiceChatService
-[VCCallSession(PrivateMethods) createSDP:audioPayloadCount:secondaryPayloadTypes:secondaryPayloadCount:videoPayloadTypes:videoPayloadCount:localFeaturesList:answerBandwidth:maxBandwidth:imageSizesSend:imageSendCount:imageSizesRecv:imageRecvCount:sdp:numSDPBytes:error:]
Could not create session description
-[VCCallSession(PrivateMethods) negotiateMediaMaxBandwidth]
-[VCCallSession(PrivateMethods) applyNegotiatedSettings]
-[VCCallSession(PrivateMethods) applyNegotiatedAudioSettings:]
Failed to apply audio settings
Error: %x.
-[VCCallSession(PrivateMethods) applyNegotiatedVideoSettings:]
Failed to apply video settings
-[VCCallSession(PrivateMethods) startMediaWithPreNegotiatedSettings:]
Failed to start media
-[VCCallSession(PrivateMethods) handleIncomingWithCallID:msgIn:msgOut:optional:confIndex:error:]
-[VCCallSession(PrivateMethods) getAllPayloadsForVideo:count:]
v16@?0@4I8^B12
no longer attempting to connect
State != GKVoiceChatServiceStateCallerAttemptingToConnect
-[VCCallSession(PrivateMethods) createInviteSDPWithError:]
Failed to create the offer SDP
Error status: 0x%08x
Unable to establish session with the remote participant.
SIPConnectIPPort failed
-[VCCallSession(PrivateMethods) sendSIPInviteWithError:]
Could not setup RTP
Failed to allocate audio transmitter
-[VCCallSession(PrivateMethods) createAudioTransmitter:]
Error creating handle
Failed to initialize audio receiver
Error setting VTP mode
Error creating video handle
Could not setup video RTP
Failed to associate audio/video handles
Failed to create the captions receiver
-[VCCallSession(PrivateMethods) createRTPHandles:]
Could not prepare SRTP for audio RTP handle
Error calling SRTPPrepareEncryption
-[VCCallSession(PrivateMethods) prepareSRTPWithError:]
Could not prepare SRTP for video RTP handle
-[VCCallSession(PrivateMethods) createMediaQueueHandle:]
Could not setup media queue
-[VCCallSession(PrivateMethods) negotiateFeaturesString:forPayload:]
-[VCCallSession(PrivateMethods) negotiatePayloads:withError:]
Unable to parse session description. The remote participant may be using an incompatible version.
Bad SDP.
No matching codec
Could not find a compatible codec.  The remote participant may be using an incompatible version.
SetBWEstMode critical failure
SetBWEstMode critical failure.
-[VCCallSession(PrivateMethods) negotiateMaxBandwidth:]
-[VCCallSession(PrivateMethods) chooseVideoPayload:operatingMode:isLocalOnCellular:isRemoteOnCellular:]
cellRules
wifiRules
send
recv
-[VCCallSession(PrivateMethods) getAllCompatibleVideoPayloads:forMediaType:]
-[VCCallSession(PrivateMethods) getCompatibleLocalFeaturesListForPayloads:count:]
-[VCCallSession(PrivateMethods) setRTPPayloads:withError:]
Error
Could not set RTP payload
-[VCCallSession(PrivateMethods) setMediaQueueStreamSettings]
-[VCCallSession(PrivateMethods) setupCallerRTPChannelWithError:]
-[VCCallSession(PrivateMethods) sipConnectWithError:]
Could not stop audio.
Audio is not running
disableAudio
-[VCCallSession(PrivateMethods) startAudioWithCompletionHandler:]_block_invoke
Could not start audio.
Call already completed
Couldn't setup encoder.
Bad cookie?
-[VCCallSession(PrivateMethods) startAudioIOWithCompletionHandler:]
Audio started after call ended.
-[VCCallSession(PrivateMethods) startAudioIOWithCompletionHandler:]_block_invoke
-[VCCallSession(PrivateMethods) updateDeviceRole:]
updateDeviceRole failed
Invalid transition from role %d to %d
-[VCCallSession(PrivateMethods) updateDeviceRole:]_block_invoke
Stop Audio Timed out
Start Audio Timed out
VCVideoMode
VCAudioMode
VCDataMode
CallingModeTopic
-[VCCallSession(PrivateMethods) sendCallingModeMessage]
-[VCCallSession(PrivateMethods) setupAudioCookies]
enableTFRCLog
-[VCCallSession(PrivateMethods) startAFRC:]
Could not setup AFRC
could not create handle
-[VCCallSession(PrivateMethods) startVCRC:]
-[VCCallSession(PrivateMethods) startRateControl:]
-[VCCallSession(PrivateMethods) configForPayloadType:]
-[VCCallSession(PrivateMethods) choosePayload:]
SIP failed with internal fatal error
Remote participant cancelled request.
Remote participant cancelled session.
Remote participant hangup.
-[VCCallSession(PrivateMethods) audioRTPID]
-[VCCallSession(PrivateMethods) videoRTPID]
-[VCCallSession(PrivateMethods) disconnectWithNoRemotePackets:timeoutUsed:]_block_invoke
No remote packets for %d seconds
Remote network outage?
Normal Call Termination
-[VCCallSession(PrivateMethods) doSipEndAction:callID:error:]
-[VCCallSession(PrivateMethods) setLocalIdentityForKeyExchange]
We could not establish end-to-end security for this call.
No local identity could be retrieved.
-[VCCallSession(PrivateMethods) logIdentity:]
-[VCCallSession(PrivateMethods) pickFeaturesStringForPayload:featuresListDict:remote:]
remote
local
-[VCCallSession(PrivateMethods) setMatchedFeaturesString:localFeaturesString:remoteFeaturesString:]
CABAC
-[VCCallSession(PrivateMethods) maxBitrateForConnectionType]
CFBundleName
AppName
-[VCCallSession(PrivateMethods) sendBasebandCodecMessage]
VCBasebandCodecType
VCBasebandCodecSampleRate
VCBasebandCodecChange
VCSymptomReporterSymptom
VCSymptomReporterGroupID
VCSymptomReporterMessage
-[VCCallSession(PrivateMethods) mapPacketMultiplexModeToRTPMode:]
-[VCCallSession(PrivateMethods) mapPacketMultiplexModeToSIPMode:]
-[VCCallSession(PrivateMethods) disconnectInternal:disconnectError:didRemoteCancel:]_block_invoke
-[VCCallSession(Messages) setupAudioPauseMessages]_block_invoke
v16@?0@"NSString"4@"NSError"8@"NSNumber"12
-[VCCallSession(Messages) setupVideoPauseMessages]_block_invoke
-[VCCallSession(Messages) setupAudioPausedHBMessages]_block_invoke
AudioOnOffStateMessageTopic
VCAudioEnabled
VCAudioDisbaled
-[VCCallSession(Messages) setupAudioOnOffStateMessages]_block_invoke
-[VCCallSession(Messages) setupCallingModeMessages]_block_invoke
-[VCCallSession(Messages) setupBasebandCodecInfoMessages]_block_invoke
VCHandoverCandidateChange
VCHandoverNewCandidateBlob
-[VCCallSession(Messages) setupHandoverCandidateChangeMessage]_block_invoke
-[VCCallSession(Messages) setupPiPStateChangeMessage]_block_invoke
-[VCCallSession(Messages) setupCellTechChangeMessages]_block_invoke
VCMomentsStateMessageTopic
-[VCCallSession(Messages) setupMomentsMessages]_block_invoke
VCPreferredInterfaceMessageTopic
-[VCCallSession(Messages) setupPreferredInterfaceMessage]_block_invoke
VCPreferredInterfaceKey
VCPreferredInterfaceDuplicatingKey
-[VCCallSession(Messages) setupSymptomEnabledMessage]_block_invoke
SymptomReporterOptionalKeyGroupID
-[VCCallSession(VCTransportSessionLegacyDelegate) transportSession:connectionSetupDataDidChange:]
-[VCCallSession(AVCRateControllerDelegate) rateController:targetBitrateDidChange:rateChangeCounter:]
-[VCCallSession(VCRateControlMediaControllerDelegate) mediaController:mediaSuggestionDidChange:]
flush audio
flush video
refresh video
stop video
start video
stall audio
unstall audio
isLinkCongested
TB,N,VisLinkCongested
imageAttrForAnswer
remove16x9Resolutions
SymptomReporterCallbackKeySymptomID
SymptomReporterCallbackKeyGroupID
reportingStatusCodeForConnectionType
{VCCapabilities: isAudioEnabled = %d, isAudioPausedToStart = %d, isVideoEnabled = %d, isVideoPausedToStart = %d, isVideoSourceScreen = %d, isDuplexAudioOnly = %d, isDuplexVideoOnly = %d, isKeyExchangeEnabled = %d, isRelayEnabled = %d, isRelayForced = %d, requiresWifi = %d, isDTLSEnabled = %d, preferredAudioCodec = %u, actualAudioCodec = %u, preferredVideoCodec = %u, actualVideoCodec = %u, deviceRole = %d}
audioEnabled
videoSourceScreen
duplexAudioOnly
duplexVideoOnly
keyExchangeEnabled
startAudioPaused
startVideoPaused
actualAudioCodec
preferredVideoCodec
actualVideoCodec
relayEnabled
relayForced
DTLSEnabled
isAudioEnabled
TB,VisAudioEnabled
isAudioPausedToStart
TB,VisAudioPausedToStart
isVideoEnabled
TB,VisVideoEnabled
isVideoPausedToStart
TB,VisVideoPausedToStart
isVideoSourceScreen
TB,VisVideoSourceScreen
isDuplexVideoOnly
TB,VisDuplexVideoOnly
isDuplexAudioOnly
TB,VisDuplexAudioOnly
isKeyExchangeEnabled
TB,VisKeyExchangeEnabled
isRelayEnabled
TB,VisRelayEnabled
isRelayForced
TB,VisRelayForced
TB,VrequiresWifi
isDTLSEnabled
TB,VisDTLSEnabled
TI,VpreferredAudioCodec
TI,VactualAudioCodec
TI,VpreferredVideoCodec
TI,VactualVideoCodec
Ti,VdeviceRole
handle
T^{tagHANDLE=i},Vhandle
VideoConference
-[VideoConference initWithClientPid:]
disableFacetimeTimeout
com.apple.VideoConference.Notification
-[VideoConference dealloc]
newSession
-[VideoConference newSessionWithDeviceRole:]
-[VideoConference sendARPLData:toCallID:]
-[VideoConference warmupForCall]
-[VideoConference setupNATObserver]_block_invoke
-[VideoConference natType]
-[VideoConference inviteDataForParticipantID:callID:remoteInviteData:nonCellularCandidateTimeout:error:]
connectionBlobForParticipantID
-[VideoConference natTypeForCallSessions:]
requiresNoWifi
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VideoConference.m
No CallID
Called without a callID we know about
-[VideoConference setPauseAudio:callID:error:]
-[VideoConference setPeerCN:callID:]
-[VideoConference setSessionID:callID:]
-[VideoConference setPeerReportingID:sessionID:callID:]
-[VideoConference updateCapabilities:forSession:]
-[VideoConference updateCapabilities:forCallID:]
-[VideoConference setUpAudioIO:]
-[VideoConference startConnectionWithParticipantID:callID:usingInviteData:isCaller:capabilities:idsSocket:destination:error:]
-[VideoConference setCurrentFocus:]
-[VideoConference stopAllCalls:]
-[VideoConference stopCallID:]
-[VideoConference cancelCallID:]
-[VideoConference remoteCancelledCallID:]
Report
-[VideoConference setPacketsPerBundle:]
-[VideoConference processRelayRequestResponse:responseDict:didOriginateRequest:]
-[VideoConference processRelayUpdate:updateDict:didOriginateRequest:]
-[VideoConference pushAudioSamples:]
-[VideoConference pullAudioSamples:]
TB,N,VuseCompressedConnectionData
TB,N,VrequiresWifi
transportType
TI,N,V_transportType
shouldPrioritizeParticipantIDForSIPInvite
TB,N,VshouldPrioritizeParticipantIDForSIPInvite
T@"NSObject<VideoConferenceDelegate>",N
TB,N,VuseViceroyBlobFormat
TB,N,GisMicrophoneMuted
Tf,R,N
Ti,R,N,V_inputAudioPowerSpectrumToken
Ti,R,N,V_outputAudioPowerSpectrumToken
chatMode
Ti,N,VchatMode
isFocus
TB,N,VisFocus
currentFocus
T@"NSString",C,N,VcurrentFocus
Ti,N,VpacketsPerBundle
hasMic
conferenceVolume
speakingDelegate
T@"NSObject<VideoConferenceSpeakingDelegate>",VspeakingDelegate
talkingPeersLimit
TI,VtalkingPeersLimit
disableVAD
TB,VdisableVAD
upstreamBandwidth
Ti,VupstreamBandwidth
downstreamBandwidth
Ti,VdownstreamBandwidth
Ti,R,VlocalFrameHeight
Ti,R,VlocalFrameWidth
preferredCodec
TI,N,VpreferredCodec
isUsingSuppression
TB,N,VisUsingSuppression
TB,N,VisGKVoiceChat
conferenceCaptureRule
T@"VCVideoRule",R,N,VconferenceCaptureRule
lastActiveCall
TL,VlastActiveCall
TB,VisValid
Ti,R,V_deviceRole
-[VideoConference(AudioProcessing) updateSpeaking:timeStamp:]
-[VideoConference(AudioProcessing) updateAudioTimestampsForSession:withNewSampleTime:hostTime:numSamples:]
-[VideoConference(AudioProcessing) pullDecodedMeshMode:]
-[VideoConference(SIPDispatch) sipCallbackNotification:callID:msgIn:msgOut:optional:confIndex:]
-[VideoConference(SessionInfo) conferenceMatchesSourceDestinationInfo:]
-[VideoConference(SessionInfo) sessionForSourceDestinationInfo:]
-[VideoConference(SessionInfo) sessionForIncomingParticipantID:]
-[VideoConference(PrivateMethods) stopCallID:didRemoteCancel:error:]
-[VideoConference(PrivateMethods) cancelCallID:error:]
session
date
-[VideoConference(PrivateMethods) defaultCleanupSession:]
-[VideoConference(PrivateMethods) threadSafeCleanupSession:]
-[VideoConference(PrivateMethods) cleanupSession:didRemoteCancel:]
-[VideoConference(PrivateMethods) setPauseAudio:]_block_invoke_2
-[VideoConference(PrivateMethods) setPauseAudio:]_block_invoke
-[VideoConference(SessionDelegate) session:didStart:connectionType:localInterfaceType:remoteInterfaceType:error:]
-[VideoConference(SessionDelegate) session:cleanUpWithDelay:error:]
-[VideoConference(SessionDelegate) session:didStopWithError:]_block_invoke
-[VideoConference(SessionDelegate) session:didReceiveARPLData:fromCallID:]
-[VideoConference(SessionDelegate) session:didReceiveData:messageType:withCallID:]
-[VideoConference(SessionDelegate) session:initiateRelayRequest:]
-[VideoConference(SessionDelegate) session:sendRelayResponse:]
Audio is already running
Stopping audio session but session wasn't started
-[VideoConference(NATDelegate) triggerInterfaceChange]
-[VideoConference(NATDelegate) NATTypeDictionaryUpdated:]
NATTypeDictionaryUpdated
-[VideoConference(NATDelegate) NATTypeDictionaryUpdated:]_block_invoke
transportSessionLegacyOptionNonCellularCandidateTimeout
enableRelay
-[VCTransportSessionLegacy start]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCTransportSessionLegacy.m
Could not connect
connection check returned error
-[VCTransportSessionLegacy startConnectionWithBlob:useRelay:isInitialRelay:error:]
-[VCTransportSessionLegacy setForceRelay]
-[VCTransportSessionLegacy processRelayRequestResponse:didOriginateRequest:]
-[VCTransportSessionLegacy processRelayRequestResponse:didOriginateRequest:]_block_invoke
v12@?0@"NSData"4@"NSError"8
-[VCTransportSessionLegacy processRelayUpdate:didOriginateRequest:]
-[VCTransportSessionLegacy processRelayUpdate:didOriginateRequest:]_block_invoke
-[VCTransportSessionLegacy createSecondaryRelayDispatchTimer:callID:callerRequired:]_block_invoke_2
-[VCTransportSessionLegacy destroySecondaryRelayDispatchTimer]
-[VCTransportSessionLegacy setupPendingSecondaryRelayWithNewPrimary:]_block_invoke
-[VCTransportSessionLegacy notifyDelegateToCancelRelay]
-[VCTransportSessionLegacy setupSecondaryRelayForCall:callerRequired:]
-[VCTransportSessionLegacy setupInitialSecondaryRelayWithCallbackRelayFlag:callID:connectionId:]_block_invoke
-[VCTransportSessionLegacy initiateRelayRequest]
-[VCTransportSessionLegacy initiateRelayRequest]_block_invoke
-[VCTransportSessionLegacy isHandoverSupported]
-[VCTransportSessionLegacy networkStateDidChange]_block_invoke
-[VCTransportSessionLegacy handleNewCandidates:version:]
-[VCTransportSessionLegacy processRemoteIPChange:]
-[VCTransportSessionLegacy connectionResultCallback:didReceiveICEPacket:didUseRelay:secretKey:skeResult:]
-[VCTransportSessionLegacy handleExchangedKey:result:]
Media Insecure
Optimized SKE failed
-[VCTransportSessionLegacy connectionCallback:isInitialConnection:]
Creating TCPTunnel Client failed.
Error was encountered
-[VCTransportSessionLegacy createTCPTunnelForParticipantID:relayDictionary:didOriginateRequest:relayType:error:]_block_invoke_2
v8@?0@"NSMutableDictionary"4
v12@?0@"NSData"4@"NSString"8
v8@?0I4
-[VCTransportSessionLegacy resetLoopback]
-[VCTransportSessionLegacy setupLoopbackWithConnectionType:]
-[VCTransportSessionLegacy createInitiateRelayDictionaryForCall:primaryConnection:]
-[VCTransportSessionLegacy createRelayUpdateDictionary:]
-[VCTransportSessionLegacy connectionDataUsingRelay:isInitialRelay:nonCellularCandidateTimeout:error:]
No local connection data
Check network settings.
NATType
-[VCTransportSessionLegacy generateConnectionData:forCallID:connectionDataSize:nonCellularCandidateTimeout:]
v24@?0^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}}4B8B12^{__CFData=}16i20
v12@?0@"NSData"4S8
v28@?0^{tagCANDIDATEPAIR={tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}iSS[8C]{tagIPPORT=i[16c](?=I[16C])S}Iiiiiiiii^{tagCANDIDATEPARIR}}4i8^i12^i16^i20^i24
v12@?0^{tagIPPORT=i[16c](?=I[16C])S}4B8
-[VCTransportSessionLegacy resetICETimeoutToLongTimeout]
-[VCTransportSessionLegacy isConnectedAndAllowAdditionalConnection]
pendingRelayCount
Ti,N,VpendingRelayCount
initialSecondaryRelaySetupDone
TB,N,VinitialSecondaryRelaySetupDone
localRelayUpdate
T@"NSDictionary",&,N,V_localRelayUpdate
remoteRelayUpdate
T@"NSDictionary",&,N,V_remoteRelayUpdate
remoteRelayRequestResponse
T@"NSMutableDictionary",&,N,V_remoteRelayRequestResponse
remoteRelayConnectionData
T@"NSData",&,N,V_remoteRelayConnectionData
localRelayRequestResponse
T@"NSMutableDictionary",&,V_localRelayRequestResponse
localConnectionData
T@"NSData",&,V_localConnectionData
localRelayConnectionData
T@"NSData",&,V_localRelayConnectionData
allowsRelay
TB,VallowsRelay
TB,V_isCaller
remoteCallID
TL,V_remoteCallID
T@"<VCTransportSessionLegacyDelegate>"
localParticipantID
T@"NSString",C,V_localParticipantID
remoteParticipantID
T@"NSString",C,V_remoteParticipantID
T@"NSString",C,V_sessionID
remoteConnectionData
T@"NSData",&,V_remoteConnectionData
Ti,V_NATType
Ti,V_operatingMode
unknown
AUIO
BBIO
%@ type=%s(%d) format=%s samplesPerFrame=%u operatingRole=%d deviceRole=%d vpOperatingMode=%d audioRecording=%d enableDNNVAD=%d
samplesPerFrame
TI,N,V_samplesPerFrame
format
T{AudioStreamBasicDescription=dIIIIIIII},N,V_format
audioUnitType
TI,N,V_audioUnitType
Ti,N,V_operatingMode
Ti,N,V_deviceRole
vpOperatingMode
TL,N,V_vpOperatingMode
isFarEndVersionInfoValid
TB,R,N,V_isFarEndVersionInfoValid
farEndVersionInfo
T{VoiceIOFarEndVersionInfo=[64C][64C]I},N
remoteCodecType
TI,N,V_remoteCodecType
remoteCodecSampleRate
Td,N,V_remoteCodecSampleRate
enableDNNVAD
TB,N,V_enableDNNVAD
VCMediaQueuePacketBundler_Create
VCMediaQueuePacketBundler_AddPacket
VCMediaQueuePacketBundler_SetMTU
VCMediaQueuePacketBundler_BundlePackets
_VCMediaQueuePacketBundler_ReturnProcessedPackets
_VCMediaQueuePacketBundler_GetSizeOfHeaderWithBundledPackets
VCMediaQueuePacketBundlerClass
VCTextReceiver
-[VCTextReceiver initWithConfiguration:]
com.apple.avconference.textreceiver.rtprecvproc
-[VCTextReceiver dealloc]
-[VCTextReceiver start]
-[VCTextReceiver stop]
-[VCTextReceiver retrieveRTPPacket:]
-[VCTextReceiver receiverThreadCallback:]
-[VCTextReceiver processRTCPPacket]
-[VCTextReceiver isSupportedPayload:]
-[VCTextReceiver validateAndEnqueuePackets:]
-[VCTextReceiver parsePacket:]
-[VCTextReceiver didReceiveFrame:]
T@"NSArray",&,N,V_supportedPayloads
Td,N,V_lastReceivedRTPPacketTime
Td,N,V_lastReceivedRTCPPacketTime
com.apple.AVConference.VideoConferenceManager.xpcCommandQueue
conferenceNoRemotePacketsTime
-[VideoConferenceManager videoConference:didReceiveARPLData:fromCallID:]
-[VideoConferenceManager createSIPWithPacketMultiplexMode:]
-[VideoConferenceManager startSIPWithPacketMultiplexMode:transportType:]
-[VideoConferenceManager isSIPHandleValid:]
-[VideoConferenceManager cleanupVTP]_block_invoke
-[VideoConferenceManager stopSIPWithTransportType:]
Closing SIP Handle
-[VideoConferenceManager pauseVideoConferences:]
-[VideoConferenceManager pauseVideoConferences:]_block_invoke_2
activeConference
T@"VideoConference",VactiveConference
conferenceWithMic
T@"VideoConference"
resultQueue
T@"ICEResultWaitQueue",R,VresultQueue
vcList
T@"NSMutableArray",R,VvcList
SIPCallback
CellConditionChangeCallback
VTPCallback
VTP_Initialize
com.apple.avconference.vtransport.recvproc
DisableWMM
fttc
VTP_Cleanup
VTP_SetCallback
VTP_SetSessionID
VTP_SetDTLS
VTP_SocketWithRealSocket
VTP_SocketForIDSWithFileDescriptor
VTP_SetPayloadList
%s %i,
VTP_SetSocketMode
VTP_SetPktType
VTP_AddPktType
VTP_RemovePktType
VTP_Getsockname
VTP_SetRemoteSSRC
VTP_SetTransportSessionID
VTP_Setsockopt
VTP_SetSourceDestinationWithToken
VTP_SetSourceDestinationWithIPPort
VTP_Close
VTP_Bind
VTP_BindNew
VTP_Sendto
VTP_Send
ssize_t VTP_Send(int, const void *, size_t, int, VPKTFLAG *)
VTP_SendCompoundPacket
VTP_Recvfrom
VTP_SetAFRCRecvMode
VTP_SetAFRC
VTP_SetAFRCConnectionNumber
int VTP_SetAFRCConnectionNumber(int)
VTP_NotifyAFRCRxEstimate
VTP_RegisterPacketCallback
VTP_UnregisterPacketCallback
VTP_Select
VTP_GetSendRecvStats
VTP_SetCellularUniqueTag
VTP_SetRTPSrc
VTP_SetNetworkLogLevel
VTP_NotifyRemoteNoRemotePacket
VTP_SetClientRelayVFD
VTP_DetectNAT64Prefix
VTP_RegisterConnectionManagerWithCallID
int VTP_RegisterConnectionManagerWithCallID(VCConnectionManager *, uint32_t)
VTP_DeregisterConnectionManagerWithCallID
int VTP_DeregisterConnectionManagerWithCallID(uint32_t)
VTP_GetVFD
VTP_ReleaseVFD
FindConnectionResultByKey
SendOnePacketOnVFDList
PrepareOFTMAC
PrepareOFTCRC32
_VTP_HealthPrint
VTP_CreateSourceDestinationInfoListWithVFD
VCSourceDestinationInfo *VTP_CreateSourceDestinationInfoListWithVFD(int)
VTPRecvProc
VTP_LogOSChannelInfoWithInterval
VTP_LogOSChannelInfoToIDSDatagramChannel_block_invoke
v8@?0@"VCDatagramChannelIDS"4
VTP_RecvAndProcessOnePacketFromSocket
recvfrom
VTP_RecvFromSocket
VTP_IFIndexToName
VTP_ProcessPacketType
ProcessOFTData
IsValidOFTMAC
VTP_UpdateReceivedBytes
void VTP_UpdateReceivedBytes(uint32_t, int, _Bool, _Bool, VCSourceDestinationInfo *, _Bool, int, _Bool)
VTP_RecvAndProcessPacketsFromDatagramChannel
VTP_RecvAndProcessPacketsFromDatagramChannel_block_invoke
VTP_DemuxPacketsToVFDList
VTP_PassHsk
VTP_PassPkt
VTP_BandwidthEstimationWithMediaPacket
AddOneVFDSETList
SetVFDSASrc
FindVFDByLocalIPPort
VTP_NAT64PrefixResolvedCallback
VTP_SendWithSourceDestinationInfo
VTP_SendOnePacketWithIPPort
ssize_t VTP_SendOnePacketWithIPPort(IPPORT *, IPPORT *, IPBasedRelayInfo *, const void *, size_t, int, VPKTFLAG *)
VTP_SendOnePacketWithSocket
ssize_t VTP_SendOnePacketWithSocket(int, IPPORT *, BOOL, const void *, size_t, int)
VTP_SendOnePacketWithDatagramChannelToken_block_invoke
ssize_t VTP_SendOnePacketWithDatagramChannelToken(VCDatagramChannelToken, ids_datagram_info_t, const void *, size_t, int, VPKTFLAG *)_block_invoke
VTP_SendOnePacketWithDatagramChannelToken_block_invoke_2
_VTP_UpdateIDSDatagramOptionWithChannelDataFormat
VTP_ReportTransmittedBytes
void VTP_ReportTransmittedBytes(UInt32, VCSourceDestinationInfo *, int, _Bool)
VTP_SendCompoundPacketWithDatagramChannelToken
VTP_SendCompoundPacketWithDatagramChannelToken_block_invoke
ssize_t VTP_SendCompoundPacketWithDatagramChannelToken(VCDatagramChannelToken, ids_datagram_info_t, int, const void **, uint32_t *, int, VPKTFLAG *, uint8_t)_block_invoke
VTP_SendCompoundPacketWithDatagramChannelToken_block_invoke_2
v32@?0I4r^v8I12{?=cSSC}16^{?=IQSCc[12S]CS{?=SSSSS}d}24@"NSError"28
VTP_SetIDSReadHandler_block_invoke
VTP_SynchronizeParticipantGenerationCounter
void VTP_SynchronizeParticipantGenerationCounter(uint32_t, uint8_t)
allowDynamicMaxBitrate
audioSettings
videoSettings
screenSettings
userAgent
basebandCodec
bandwidthSettings
captionsSettings
multiwayAudioStreams
momentsSettings
ntpTime
blobVersion
multiwayVideoStream
hasAllowDynamicMaxBitrate
TB,N,V_allowDynamicMaxBitrate
hasAllowsContentsChangeWithAspectPreservation
TB,N,V_allowsContentsChangeWithAspectPreservation
hasAudioSettings
T@"VCMediaNegotiationBlobAudioSettings",&,N,V_audioSettings
hasVideoSettings
T@"VCMediaNegotiationBlobVideoSettings",&,N,V_videoSettings
hasScreenSettings
T@"VCMediaNegotiationBlobVideoSettings",&,N,V_screenSettings
hasUserAgent
T@"NSString",&,N,V_userAgent
hasBasebandCodec
T@"NSString",&,N,V_basebandCodec
hasBasebandCodecSampleRate
TI,N,V_basebandCodecSampleRate
T@"NSMutableArray",&,N,V_bandwidthSettings
hasCaptionsSettings
T@"VCMediaNegotiationBlobCaptionsSettings",&,N,V_captionsSettings
T@"NSMutableArray",&,N,V_multiwayAudioStreams
hasMomentsSettings
T@"VCMediaNegotiationBlobMomentsSettings",&,N,V_momentsSettings
hasNtpTime
TQ,N,V_ntpTime
hasBlobVersion
TI,N,V_blobVersion
multiwayVideoStreams
T@"NSMutableArray",&,N,V_multiwayVideoStreams
-[VCRedundancyControlAlgorithmVideoMultiway updateRedundancyStrategyWithNetworkStatistics:]
-[VCRedundancyControlAlgorithmVideoMultiway updateRoundTripTimeWithStatistics:]
imageattr:%d
 [x=%d,
 [x=[%d:%d:%d],
y=%d,
y=[%d:%d:%d],
fps=%d
,i=1
,q=%.2f]
-[SDPMediaLine getVideoSendImages:]
-[SDPMediaLine getVideoRecvImages:]
width
height
fps=
+[SDPMediaLine fillImageStruct:imageStruct:]
ftdisplayattr:resolution
-[SDPMediaLine videoDisplayAttribute:withHeight:]
rtcp-fb
rtcp
imageattr
%@=%@:%u%@
%@=%@:%@%@
%@=%@%@
rtpId
TI,N,V_rtpId
TB,R,N,V_allowRTCPFB
rtcpPort
Ti,R,N,V_rtcpPort
rtpPort
Ti,R,N,V_rtpPort
attributes
T@"NSArray",R,N,V_attributes
payloads
T@"NSArray",R,N,V_payloads
T@"VCImageAttributeRules",&,N,V_imageAttributeRules
string
VCSession
-[VCSession initWithIDSDestination:configurationDict:delegate:processId:]
com.apple.AVConference.vcSessionQueue
com.apple.AVConference.vcSessionNotificationQueue
-[VCSession initWithIDSDestination:configurationDict:delegate:processId:]_block_invoke
-[VCSession dealloc]
-[VCSession setState:]
Starting
Start Failed
Running
Stopping
idsDestination[%@] state[%s] localParticipantID[%@] remoteParticipants[%@]
stoppingParticipants[%@] startingParticipants[%@] initializingParticipants[%@]
-[VCSession mediaStateChangedForParticipant:]
-[VCSession setTransportSessionEventHandler]_block_invoke
-[VCSession handleActiveConnectionChange:]
-[VCSession calculateExpectedTotalNetworkBitrateDownlink]
-[VCSession calculateExpectedTotalNetworkBitrateUplink]
VCSessionMessageAudioEnabled
VCSessionMessageAudioDisabled
VCSessionMessageTopicAudioEnabledState
VCSessionMessageVideoEnabled
VCSessionMessageVideoDisabled
VCSessionMessageTopicVideoEnabledStateb
VCSessionMessageAudioPaused
VCSessionMessageAudioUnpaused
VCSessionMessageTopicAudioPausedState
VCSessionMessageVideoPaused
VCSessionMessageVideoUnpaused
VCSessionMessageTopicVideoPausedState
-[VCSession vcSessionParticipant:requestKeyFrameGenerationWithStreamID:]
VCSessionMessageStreamID
VCSessionMessageTopicGenerateKeyFrame
VCSessionMessageVideoRedundancyRequested
VCSessionMessageVideoRedundancyDismissed
VCSessionMessageTopicVideoRedundancyState
-[VCSession vcSessionParticipantDidMediaDecryptionTimeOut:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCSession.m
-[VCSession updateParticipantConfigurations:]_block_invoke
-[VCSession distributeBitrateAndOptInToStreamIDsWithSeamlessTransition:]
VCSPTargetBitrate
VCSPUUIDList
VCSPDownlinkBitrates
VCSPActiveStreamIDTuples
VCSCallEndReason
VCSCallEndDetailedReason
-[VCSession setSessionInfoSynchronizerErrorResponseCallback]_block_invoke
-[VCSession setSessionInfoSynchronizerPeerSubscribedStreamsCallback]_block_invoke
v8@?0@"NSArray"4
session_%@
-[VCSession createMediaQueue]
-[VCSession createMediaQueue]_block_invoke
v20@?0^v4d8i16
-[VCSession setMediaQueuePeakBitrateWithTargetBitrate:]
-[VCSession detectSSRCCollision:resetNeeded:]
-[VCSession handleEncryptionInfoEvent:]
-[VCSession handleMembershipChangeInfoEvent:]
-[VCSession registerRemoteParticipantToSession:]
-[VCSession unregisterRemoteParticipantFromSession:]
VCSessionMessageSymptom
VCSessionMessageGroupID
-[VCSession sendSymptomsToRemoteParticipants:symptom:groupID:]_block_invoke
VCSessionMessageTopicSymptom
-[VCSession setupAudioEnabledMessages]_block_invoke
-[VCSession setupVideoEnabledMessages]_block_invoke
-[VCSession setupAudioPausedMessages]_block_invoke
-[VCSession setupVideoPausedMessages]_block_invoke
-[VCSession setupKeyFrameGenerationMessages]_block_invoke
-[VCSession setupSymptomEnabledMessages]_block_invoke
-[VCSession generateKeyFrameWithReceivedMessage:]
-[VCSession setupVideoRedundancyMessages]_block_invoke
-[VCSession didReceiveReportPacket:arrivalNTPTime:]
-[VCSession didReceiveCustomReportPacket:arrivalNTPTime:]
-[VCSession handleEncryptionInfoChange:]_block_invoke
-[VCSession reportingSessionParticipantEvent:withParticipant:keyChangeReason:newMKI:withStreamID:]
VCSMaxRemoteParticipants
VCSMode
VCSPAudioEnabled
VCSPVideoEnabled
VCSPIDSID
VCSKeyChangeReason
VCSNewMKI
VCSPAudioPaused
VCSPVideoPaused
VCSPConnectionType
-[VCSession reportingSessionRemoteParticipantEvent:withParticipant:value:]
-[VCSession dispatchedAddParticipantWithConfig:processID:]
-[VCSession dispatchedRemoveParticipant:]
-[VCSession dispatchedStart]
-[VCSession dispatchedStopWithError:]
-[VCSession tearDown]
-[VCSession dispatchedUpdateConfiguration:]
-[VCSession dispatchedParticipant:didStart:error:]
-[VCSession dispatchedParticipant:didStopWithError:]
-[VCSession registerReportingTask]_block_invoke
VCSVTxBR
VCSATxBR
VCSTxBR
VCSVRxBR
VCSARxBR
VCSRxBR
VCSVRxBRs
VCSARxBRs
optInDictionary
T@"NSMutableDictionary",&,V_optInDictionary
mediaQueue
T^{tagVCMediaQueue=},N,V_mediaQueue
remoteParticipantsMapByServerID
T@"NSMutableDictionary",&,N,V_remoteParticipantsMapByServerID
sessionMessaging
T@"VCSessionMessaging",&,N,V_sessionMessaging
sessionStatsController
T@"VCSessionStatsController",R,N,V_sessionStatsController
localParticipant
T@"VCSessionParticipant",R,N,V_localParticipant
remoteParticipants
T@"NSArray",R,N
T@"<VCSessionDelegate>",R,N
idsDestination
T@"NSString",R,N,V_idsDestination
T@"NSString",R,N,V_uuid
transportSessionID
TL,R,N,V_transportSessionID
currentActiveConnection
T@"<VCConnectionProtocol>",&,N,V_currentActiveConnection
transportSession
T@"VCTransportSession",R,N,V_transportSession
T^{opaqueRTCReporting=},R,N,V_reportingAgent
downlinkRateController
T@"AVCRateController",R,N,V_downlinkRateController
SymptomReporterOptionalKeyParticipantID
com.apple.AVConference.AudioIORelayControllerQueue
-[VCAudioRelayIOController _cleanupDeadClients]
-[VCAudioRelayIOController stateStartingWithNegotiatedFormat:client:newState:]
-[VCAudioRelayIOController updateStateWithClient:]
-[VCAudioRelayIOController processEventQueue:clientList:]
-[VCAudioRelayIOController flushEventQueue:]
-[VCAudioRelayIOController updateClient:]
PREPARE
STARTING
VCAudioIOControllerIOState_GetControllerTimestamp
Token (%d) Link (%d): %s <-> %s (%s, %s), priority %d, uplink bitrate cap (%u), downlink bitrate cap (%u)
IPv6
IPv4
-[VCConnectionIDS isOnSameInterfacesWithConnection:]
datagramChannelToken
TI,R,V_datagramChannelToken
linkID
relaySessionToken
sharedDigestKey
T@"NSData",R
TI,V_uplinkBitrateCap
TI,V_downlinkBitrateCap
VCConnectionIDSCellTechForRATType
+[VideoAttributes cameraUIDForVideoAttributeCamera:]
[ratio:%.2fx%.2f orientation:%s camera:%s switching:%s contentsRect:%.2fx%.2f@(%.2f,%.2f) videoSourceScreen:%s videoMirrored:%s]
Portrait
PortraitUpsideDown
LandscapeLeft
LandscapeRight
Invalid
Front
Back
ratio
orientation
camera
cameraSwitching
contentsRect
videoMirrored
T{CGSize=ff},N,Vratio
Ti,N,Vorientation
Ti,N,Vcamera
TB,N,VcameraSwitching
T{CGRect={CGPoint=ff}{CGSize=ff}},N,VcontentsRect
TB,N,VvideoSourceScreen
TB,N,VvideoMirrored
-[VCRateControlAlgorithmStabilizedNOWRD setPaused:]
-[VCRateControlAlgorithmStabilizedNOWRD configure:restartRequired:]
-[VCRateControlAlgorithmStabilizedNOWRD doRateControlWithStatistics:]
-[VCRateControlAlgorithmStabilizedNOWRD doRateControlWithBasebandStatistics:]
Ramp Up!!! Resume video first!
Ramp Up!!! Ramp up audio fraction first. Video is still stopped!
Congestion!!! Stop video!
[%u] Congestion due to baseband!!! New audio fraction tier down to %u. Video stopped.
OWRD has been 0 for %f seconds, reset NOWRDAcc
Still trying to flush baseband with flush counter %d. No ramp-up and possibly decrease audio fraction.
Try to ramp down audio fraction with [flushCount:%d, BBAvgRate:%d]
[%u] Sending rate was limited for a long time, stabilizing the bitrate
[%u] VCRC rate stabilized since no mediaController. Collecting VCRC samples...
[%u] VCRC rate stabilized (TxTS %u >= %u FB). Collecting VCRC samples...
[%u] Collected %d VCRC samples (TxTS %u)
-[VCRateControlAlgorithmStabilizedNOWRD printRateControlInfoToLogDump]
%8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%u
MBL:%d %u
%4u/%4u
 %4u:%4u/%4u  %4u:%4u/%4u  CS: %04X %04X %u BB: %3u
 UAT %s %s
%@: payload=%u secondary=%s sbr=%s samplesPerBlock=%u
isSecondary
TB,R,N,V_isSecondary
TB,R,N,V_sbr
samplesPerBlock
TI,R,N,V_samplesPerBlock
com.apple.AVConference.VCTextTransmitter
VCTextTransmitter
-[VCTextTransmitter start]
-[VCTextTransmitter stop]
-[VCTextTransmitter sendText:]
-[VCTextTransmitter sendTextFrameWithRedundancy:marker:]
-[VCTextTransmitter updatePayloadHistory:timestamp:payloadType:payload:payloadLength:]
-[VCTextTransmitter startHeartbeat]
-[AVCMoments initWithStreamToken:deviceID:delegate:dispatchQueue:]
com.apple.AVConference.AVCMoments.delegateQueue
%@: streamToken[%ld] capabilities[%X] deviceID[%@]
-[AVCMoments connect]
ERROR
-[AVCMoments disconnect]
-[AVCMoments registerBlocksForNotifications]_block_invoke
vcMomentsServerDidDisconnect
-[AVCMoments didEndProcessingRequestHelperWithResult:]
-[AVCMoments didFinishRequestHelperWithResult:]
AVCMoments
-[AVCMoments newRequestWithMediaType:]
-[AVCMoments avcMomentsRequestDidStartRequest:withError:]
-[AVCMoments avcMomentsRequestDidEndRequest:withError:]
-[AVCMoments avcMomentsRequestDidRejectRequest:withError:]
T@"<AVCMomentsDelegate>",R,N,V_delegate
TI,R,N,V_capabilities
deviceID
T@"NSString",R,N,V_deviceID
activeRequestCount
Ti,R,N,V_currentActiveRequestsCount
pendingRequestCount
Ti,R,N,V_currentPendingRequestsCount
-[VCSessionParticipantLocal initWithIDSDestination:delegate:processId:sessionUUID:]
-[VCSessionParticipantLocal start]
-[VCSessionParticipantLocal setUplinkBitrateCapCell:]
-[VCSessionParticipantLocal setUplinkBitrateCapWifi:]
-[VCSessionParticipantLocal applyVideoEnabledSetting:]
-[VCSessionParticipantLocal updateVideoPaused:]
-[VCSessionParticipantLocal updateActiveVoiceOnly]
-[VCSessionParticipantLocal collectVideoChannelMetrics:]_block_invoke
-[VCSessionParticipantLocal collectAudioChannelMetrics:]_block_invoke
-[VCSessionParticipantLocal setupAudioStreamsWithConfigProvider:]
-[VCSessionParticipantLocal setupAudioStreamWithConfiguration:]
-[VCSessionParticipantLocal setupVideoStreamsWithConfigProvider:]
-[VCSessionParticipantLocal setupVideoStreamWithConfiguration:]
-[VCSessionParticipantLocal updatePayloadTypesWithConfigProvider:]
-[VCSessionParticipantLocal audioRuleCollectionWithAudioStreamConfig:]
-[VCSessionParticipantLocal setupAudioStreamWithConfiguration:idsDestination:]
-[VCSessionParticipantLocal addCallInfoBlobToParticipantInfo:]
-[VCSessionParticipantLocal createParticipantInfo]
-[VCSessionParticipantLocal processAudioStreamUpdateEvent]
-[VCSessionParticipantLocal setupVideoStreamWithConfiguration:idsDestination:]
-[VCSessionParticipantLocal generateKeyFrameWithStreamID:]
-[VCSessionParticipantLocal updateUplinkStreamsForPeerSubscribedStreams:]
subscribed to
unsubscribed from
-[VCSessionParticipantLocal checkSubscribedStreamsConsistency:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCSessionParticipantLocal.m
VCSErrorDetected
-[VCSessionParticipantLocal setPeerSubscribedStreams:]
-[VCSessionParticipantLocal enableRedundancy:]
-[VCSessionParticipantLocal redundancyController:redundancyPercentageDidChange:]
-[VCSessionParticipantLocal updateUplinkTargetBitrate:]
-[VCSessionParticipantLocal updateActiveVideoStreamWithTargetBitrate:]
-[VCSessionParticipantLocal updateActiveAudioStreamWithTargetBitrate:]
-[VCSessionParticipantLocal updateStreamIDsWithActiveVideoStreams:]
-[VCSessionParticipantLocal generateKeyFrameForStreamsWithNewCompoundStreamIDsWithActiveVideoStreams:]
-[VCSessionParticipantLocal onCaptureFrame:frameTime:droppedFrames:cameraStatusBits:]
-[VCSessionParticipantLocal avConferencePreviewError:]
-[VCSessionParticipantLocal thermalLevelDidChange:]
VCSPFR
VCSPTLC
VCSPPLC
-[VCSessionParticipantLocal sourceFrameRateDidChange:]
-[VCSessionParticipantLocal pushAudioSamples:]
-[VCSessionParticipantLocal controller:didChangeActiveVideoStreams:]
-[VCSessionParticipantLocal handleActiveConnectionChange:]_block_invoke
encryptionInfoReceived
TB,N,V_encryptionInfoReceived
connectionStatsStreamID
TS,R,N,V_connectionStatsStreamID
uplinkBitrateCapWifi
TI,N,V_uplinkBitrateCapWifi
uplinkBitrateCapCell
TI,N,V_uplinkBitrateCapCell
enableVADFiltering
TB,N,V_enableVADFiltering
peerSubscribedStreams
T@"NSArray",C,N,V_peerSubscribedStreams
audioPayloadTypes
T@"NSSet",R,N,V_audioPayloadTypes
videoPayloadTypes
T@"NSSet",R,N,V_videoPayloadTypes
currentUplinkTotalBitrateVideo
TI,R,N,V_currentUplinkTotalBitrateVideo
currentUplinkTotalBitrateAudio
TI,R,N,V_currentUplinkTotalBitrateAudio
-[VCSessionBitrateArbiter rangeCheck:]
-[VCSessionBitrateArbiter bitrateForStoreBagKey:connectionType:currentBitrate:]
maxBitrate2GUplink
TI,R,V_maxBitrate2GUplink
maxBitrate3GUplink
TI,R,V_maxBitrate3GUplink
maxBitrateLTEUplink
TI,R,V_maxBitrateLTEUplink
maxBitrateWiFiUplink
TI,R,V_maxBitrateWiFiUplink
maxBitrate2GDownlink
TI,R,V_maxBitrate2GDownlink
maxBitrate3GDownlink
TI,R,V_maxBitrate3GDownlink
maxBitrateLTEDownlink
TI,R,V_maxBitrateLTEDownlink
maxBitrateWiFiDownlink
TI,R,V_maxBitrateWiFiDownlink
VCPerfTimingUtilsLog
VCAudioIO
+[VCAudioIO controllerForDeviceRole:]
-[VCAudioIO initWithOperatingMode:deviceRole:direction:allowAudioRecording:delegate:clientPid:]
-[VCAudioIO reconfigureWithOperatingMode:deviceRole:direction:allowAudioRecording:]
-[VCAudioIO forceCleanup]
-[VCAudioIO setFarEndVersionInfo:]
-[VCAudioIO setDirection:]
-[VCAudioIO createConverterForSource:error:]
source
sink
-[VCAudioIO didStart:error:]
-[VCAudioIO didStop:error:]
-[VCAudioIO didStop:error:]_block_invoke
-[VCAudioIO controllerFormatChanged:]
-[VCAudioIO didSuspend]
-[VCAudioIO didResume]
-[VCAudioIO startWithCompletionHandler:]
-[VCAudioIO stopWithCompletionHandler:]
-[VCAudioIO pullAudioSamples:controllerTime:]
controllerFormat
T{AudioStreamBasicDescription=dIIIIIIII},R,N,V_controllerFormat
clientAudioFormat
T{AudioStreamBasicDescription=dIIIIIIII},R,N,V_clientFormat
TI,R,N,V_clientSamplesPerFrame
direction
TC,N
TI,R,N,V_state
pullAudioSamplesCount
TI,R,N,V_pullAudioSamplesCount
-[VCStatisticsCollectorQueue dealloc]
com.apple.AVConference.VCRateControlStatisticsProc
-[VCStatisticsCollectorQueue start]
-[VCStatisticsCollectorQueue stop]
-[VCStatisticsCollectorQueue enqueue:]
isThreadRunning
TB,R,V_isThreadRunning
messageHandler
T@?,C,V_messageHandler
VCRateControlStatisticsProc
VCAudioEventQueue_Create
avcKeyRTPSocket
avcKeyRTCPSocket
avcKeySharedSocket
avcKeySourcePort
avcKeySupportedCodecs
avcKeySupportedAudioCodecs
avcKeySupportedVideoEncodingCodecs
avcKeySupportedVideoDecodingCodecs
avcKeySupportedVideoEncodingResolutions
avcKeySupportedVideoDecodingResolutions
avcKeyRTPLocalSSRC
avcKeyVideoStreamDownlinkOptimalBitrate
avcKeyVideoStreamDownlinkOperatingBitrate
avcKeyVideoStreamDownlinkIsOperatingAtMaxBitrate
avcKeyVideoStreamDownlinkIsOperatingAtMinBitrate
avcKeyVideoStreamUplinkOperatingBitrate
avcKeySupportedMaxVideoDecodes
-[AVCCaptionsClient initWithDelegate:streamToken:]
-[AVCCaptionsClient connect]
vcCaptionsStreamToken
vcCaptionsClientInitialize
-[AVCCaptionsClient disconnect]
vcCaptionsClientUninitialize
vcCaptionsGetCaptionsEnabled
vcCaptionsGetCaptionsSupported
vcCaptionsSupported
vcCaptionsEnable
vcCaptionsSetCaptionsEnabled
vcCaptionsLocale
vcCaptionsSetCaptionsConfiguration
T@"<AVCCaptionsClientDelegate>",R
captionsSupported
captionsEnabled
Ti,R,V_streamToken
%@ clientFormat=%s operatingRole=%d deviceRole=%d audioRecording=%d
-[VCAudioIOControllerClient pullAudioSamples:controllerTime:]
clientPid
Ti,R,N,V_clientPid
T@"<VCAudioIOControllerDelegate><VCAudioIOControllerSink><VCAudioIOControllerSource>",R,N
T{AudioStreamBasicDescription=dIIIIIIII},R,N,V_format
TC,N,V_direction
isRemoteCodecInfoValid
TB,R,N,V_isRemoteCodecInfoValid
TI,R,N,V_remoteCodecType
Td,R,N,V_remoteCodecSampleRate
isRemoteVersionInfoValid
TB,R,N,V_isRemoteVersionInfoValid
T{VoiceIOFarEndVersionInfo=[64C][64C]I},R,N,V_farEndVersionInfo
TB,N,GisInputMeteringEnabled,V_isInputMeteringEnabled
TB,N,GisOuputMeteringEnabled,V_isOutputMeteringEnabled
%@: deviceName[%@] deviceID[%@] UID[%@] isPreferred[%d] inputAvailable[%d] outputAvailable[%d]
VPAUAggregateAudioDevice
com.apple.audio.CoreAudio
-[AVAudioDevice isSomethingConnectedToJack]
deviceName
T@"NSString",R,N,V_deviceName
T@"NSNumber",R,N,V_deviceID
T@"NSString",R,N,V_UID
inputAvailable
TB,R,N,V_inputAvailable
outputAvailable
TB,R,N,V_outputAvailable
preferredDevice
TB,R,N,GisPreferredDevice,V_preferredDevice
isBluetoothDevice
-[AVInternalDeviceList dataSourceControlID]
Calling changeListener %s
-[AVInternalDeviceList notifyDeviceListChanged]_block_invoke_2
changeListener
T@?,C,N
B16@?0@4I8^B12
RedundancyControlSSRC
RedundancyControlPacketLossPercentage
RedundancyControlLastSequenceNumber
-[VCRedundancyControlAlgorithmAudioMultiWay updateRedundancyStrategyWithNetworkStatistics:]
-[VCRedundancyControlAlgorithmAudioMultiWay computeRedundancyInfo]
MediaTypeAudio
MediaTypeVideo
ProminenceValue
ProminenceString
%@[%p] idsParticipantID[%llu] _participantID[%@] _hasPendingChanges[%d] audioEnabled[%d] videoEnabled[%d] videoQuality[%d] visibilityIndex[%d] promienceIndex[%d] participantData[%@]
-[AVCSessionParticipant setAudioMuted:]_block_invoke
-[AVCSessionParticipant setAudioEnabled:]
-[AVCSessionParticipant setAudioEnabled:]_block_invoke
-[AVCSessionParticipant setVideoEnabled:]
-[AVCSessionParticipant setVideoEnabled:]_block_invoke
-[AVCSessionParticipant setAudioPaused:]
-[AVCSessionParticipant setAudioPaused:]_block_invoke
-[AVCSessionParticipant setVideoPaused:]
-[AVCSessionParticipant setVideoPaused:]_block_invoke
-[AVCSessionParticipant setVolume:]_block_invoke
-[AVCSessionParticipant setAudioPosition:]_block_invoke
-[AVCSessionParticipant setVideoQuality:]_block_invoke
vcSessionSetVideoQuality
-[AVCSessionParticipant setVisibilityIndex:]_block_invoke
vcSessionSetVisibilityIndex
-[AVCSessionParticipant setProminenceIndex:]_block_invoke
vcSessionSetProminenceIndex
-[AVCSessionParticipant setStateAudioPaused:]
-[AVCSessionParticipant setStateVideoPaused:]
-[AVCSessionParticipant setStateAudioEnabled:]
-[AVCSessionParticipant setStateVideoEnabled:]
-[AVCSessionParticipant initWithParticipantID:data:delegate:queue:]
vcSessionParticipantKeyUUID
-[AVCSessionParticipant registerBlocksForNotifications]_block_invoke
com.apple.AVConference.AVCSessionParticipant.notificationQueue
negotiationData
T@"NSData",R,N
audioMuted
TB,N,GisAudioMuted
TB,N,GisAudioEnabled
TB,N,GisVideoEnabled
audioPaused
TB,N,GisAudioPaused
videoPaused
TB,N,GisVideoPaused
Tf,N
frequencyLevels
delegateNotificationQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateNotificationQueue
videoToken
Ti,N,V_videoToken
sharedXPCConnection
T@"VCXPCClientShared",&,N
config
configurationInProgress
TB,N,V_configurationInProgress
hasPendingChanges
TB,N,V_hasPendingChanges
stateQueue
T@"NSObject<OS_dispatch_queue>",N
T@"<AVCSessionParticipantDelegate>",N
audioPosition
Tf,N,V_audioPosition
TQ,R,N,V_idsParticipantID
T@"NSString",R,N,V_participantID
T@"NSData",R,N,V_participantData
TB,N,GisAudioMuted,V_audioMuted
TB,N,GisAudioEnabled,V_audioEnabled
TB,N,GisAudioPaused,V_audioPaused
TB,N,GisVideoPaused,V_videoPaused
T@"NSData",R,N,V_frequencyLevels
transportSessionEventInfoNewLink
transportSessionEventInfoIsFirstLink
transportSessionEventInfoDisconnectedLink
transportSessionEventInfoNewPrimary
transportSessionEventInfoOldPrimary
transportSessionEventInfoIsDuplicationEnabled
transportSessionEventInfoActiveConnection
com.apple.VideoConference.VCTransportSessionIDS.stateQueue
com.apple.VideoConference.VCTransportSessionIDS.notificationQueue
-[VCTransportSession start]
-[VCTransportSession stop]_block_invoke
-[VCTransportSession callEventHandlerWithEvent:info:]_block_invoke
detailedErrorCode
isHandoverSupported
isRemoteOSPreLion
requiresWiFi
TB,N,V_requiresWiFi
TB,N,V_useCompressedConnectionData
connectionSetupRTTEstimate
connectionSetupPiggybackBlob
T@"NSObject",&,N,V_connectionSetupPiggybackBlob
perfTimings
T@"TimingCollection",&,N,V_perfTimings
T@"VCConnectionManager",R,N,V_connectionManager
eventHandler
T@?,C,N,V_eventHandler
basebandNotificationRegistrationToken
TI,R,N,V_basebandNotificationRegistrationToken
isCallActive
TB,N,SsetCallActive:
{ %s: videoResolution:%ld codecType:%ld framerate:%lu txMaxBitrate:%lu txMinBitrate:%lu keyFrameInterval:%lu recommendedMTU:%lu cvoExtensionID:%lu enableCVO:%d }
videoResolution
Ti,N,V_videoResolution
videoSource
Ti,N,V_videoSource
Ti,N,V_codecType
TI,N,V_framerate
txMaxBitrate
TI,N,V_txMaxBitrate
txMinBitrate
TI,N,V_txMinBitrate
enableCVO
TB,N,V_enableCVO
cvoExtensionID
TI,N,V_cvoExtensionID
recommendedMTU
TI,N,V_recommendedMTU
T^{tagHANDLE=i},N,V_rtpHandle
T^{opaqueRTCReporting=},N,V_reportingAgent
reportingParentID
Ti,N,V_reportingParentID
Ti,N,V_videoPayload
encodingMode
Ti,N,V_encodingMode
videoPriorityPointer
T^AC,N,V_videoPriorityPointer
+[VCVisualAlert start]
+[VCVisualAlert stop]
hasReceivedFirstFrame
TB,V_hasReceivedFirstFrame
TB,V_isVideoPaused
isMediaStalled
TB,V_isMediaStalled
isVideoDegraded
TB,V_isVideoDegraded
isVideoSuspended
TB,V_isVideoSuspended
T@"VideoAttributes",&,V_remoteScreenAttributes
T@"VideoAttributes",&,V_remoteVideoAttributes
localInterfaceType
T@"NSString",C,N,V_localInterfaceType
remoteInterfaceType
T@"NSString",C,N,V_remoteInterfaceType
-[VCRemoteVideoManager releaseQueueForStreamToken:]
-[VCRemoteVideoManager didReceiveFirstRemoteFrameForStreamToken:]
-[VCRemoteVideoManager remoteScreenAttributesDidChange:streamToken:]
-[VCRemoteVideoManager remoteVideoAttributesDidChange:streamToken:]
-[VCRemoteVideoManager remoteVideoDidPause:streamToken:]
-[VCRemoteVideoManager remoteMediaDidStall:streamToken:]
-[VCRemoteVideoManager remoteVideoDidDegrade:streamToken:]
-[VCRemoteVideoManager remoteVideoDidSuspend:streamToken:]
-[VCRemoteVideoManager notifyCachedStateForStreamToken:]
vcRemoteVideoSlotsForModes
-[VCRemoteVideoManager registerBlocksForService]_block_invoke
vcRemoteVideoInitializeRemoteVideoForStreamToken
vcRemoteVideoTerminate
vcRemoteVideoGetCachedNotifications
T@"<VCRemoteVideoManagerDelegate>",N,V_delegate
bins
supportsSecureCoding
T@"NSArray",R,N,V_bins
canDisplayCaptions
senderLanguages
hasCanDisplayCaptions
TB,N,V_canDisplayCaptions
hasSenderLanguages
TI,N,V_senderLanguages
VCMediaStream
-[VCMediaStream decryptionStatusChanged:]
vcMediaStreamDestID
vcMediaStreamSourceIP
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCMediaStream.m
No IDS destination or IP Address specified
No IDS destination
-[VCMediaStream setupRTPWithIDSDestination:error:]_block_invoke
-[VCMediaStream setupRTPWithIDSDestination:error:]
Could not start setup RTP
No IP Address specified
vcMediaStreamSourceInterfaceName
com.apple.AVConference.VCMediaStream.Notification
kVCMediaStreamStateStopped
kVCMediaStreamStateStarting
kVCMediaStreamStateRunning
kVCMediaStreamStateStopping
kVCMediaStreamStatePaused
-[VCMediaStream createTransport]
-[VCMediaStream resetDecryptionTimeout]
-[VCMediaStream setStreamConfig:withError:]
setStreamConfig called while media stream is running
-[VCMediaStream start]
Start called while media stream is running or starting
-[VCMediaStream start]_block_invoke
-[VCMediaStream stop]
-[VCMediaStream stop]_block_invoke
-[VCMediaStream setPause:]
Trying to pause while the media stream is not actively starting or running
-[VCMediaStream setPause:]_block_invoke
Trying to resume while the media stream is not paused
vcMediaStreamCallID
-[VCMediaStream setLocalParticipantInfo:networkSockets:withError:]
-[VCMediaStream setStreamDirection:]
-[VCMediaStream streamDirection]
-[VCMediaStream setRtcpEnabled:]
-[VCMediaStream setRtpTimeOutEnabled:]
-[VCMediaStream setRtcpTimeOutEnabled:]
-[VCMediaStream setDecryptionTimeOutEnabled:]
-[VCMediaStream setRtpTimeOutInterval:]
-[VCMediaStream setRtcpTimeOutInterval:]
-[VCMediaStream setDecryptionTimeOutInterval:]
-[VCMediaStream setRtcpSendInterval:]
-[VCMediaStream generateReceptionReportList:reportCount:]
-[VCMediaStream rtcpSendHeartbeat]
-[VCMediaStream startRTCPSendHeartbeat]
-[VCMediaStream stopRTCPSendHeartbeat]
-[VCMediaStream setStreamIDs:repairStreamIDs:]
-[VCMediaStream resetTimeoutHeartbeatWithRTPTimeout:rtcpTimeout:decryptionTimeout:currentTime:]
-[VCMediaStream checkRTPPacketTimeoutAgainstTime:lastReceivedPacketTime:]
-[VCMediaStream checkRTCPPacketTimeoutAgainstTime:lastReceivedPacketTime:]
-[VCMediaStream checkDecryptionTimeoutAgainstTime:decryptionErrorStartTime:]
-[VCMediaStream timeoutHeartbeat]
-[VCMediaStream startTimeoutHeartbeat]
-[VCMediaStream stopTimeoutHeartbeat]
-[VCMediaStream onCallIDChanged]
-[VCMediaStream supportedPayloads]
-[VCMediaStream onConfigureStreamWithConfiguration:error:]
-[VCMediaStream onStartWithCompletionHandler:]
-[VCMediaStream onStopWithCompletionHandler:]
-[VCMediaStream onPauseWithCompletionHandler:]
-[VCMediaStream onResumeWithCompletionHandler:]
-[VCMediaStream onSendRTCPPacket]
-[VCMediaStream onRTPTimeout]
-[VCMediaStream onRTCPTimeout]
-[VCMediaStream lastReceivedRTPPacketTime]
-[VCMediaStream lastReceivedRTCPPacketTime]
-[VCMediaStream rtcpHeartbeatLeeway]
-[VCMediaStream collectRxChannelMetrics:interval:]
-[VCMediaStream collectRxChannelMetrics:]
-[VCMediaStream collectTxChannelMetrics:]
-[VCMediaStream handleActiveConnectionChange:]
T@"<VCMediaStreamDelegate>",N
momentsCollectorDelegate
T@"<VCMomentsCollectorDelegate>",N,V_momentsCollectorDelegate
localSSRC
TI,R,N,V_localSSRC
notificationDelegate
T@"<VCMediaStreamNotification>",N
rtcpReportProvider
T@"<RTCPReportProvider>",N
rtcpHeartbeatLeeway
defaultTransport
T@"VCMediaStreamTransport",R,N
defaultStreamConfig
T@"VCMediaStreamConfig",R,N
isSendingMedia
VCMediaCallback
Throttling_MediaQueue_AddPacket_ScheduleAndActiveProbing
Throttling_MediaQueue_SetAudioInterval
Throttling_MediaQueue_SetIsIPv6
Throttling_VideoTransmitterUtil_ForceFirstProbePktSize
Throttling
Throttling_AFRC_GetDefaults
HardCodeBWEstRate
HardCodeTxRate
ThrottlingSendLog
ThrottlingRecvLog
ThrottlingProbeSeqLog
RealTimeStats_Init
ProcessThrottledPktsWithNewAudioPkt
ScheduleReleasedPkts
CheckIfBoostNeeded
CalcBoostIncrease
AccelerateThrottlingQueue
SchedulePkt
ProcessThrottledPktsWithTime
TagMPWithOpportunisticBWEProbeSeq
dtlsHandshakeTimeout
DTLS_Create
DTLS_Cleanup
DTLS_Handshake
No datagram context available
DTLS_UpdateHandshake
DTLS_IsConnected
DTLS_Read
DTLS_Write
com.apple.AVConference.WRMClientQueue
T@"<WRMClientDelegate>"
VCBasebandNotificationParser_ParseNotification
AVCCaptions
-[AVCCaptionsToken initWithText:confidence:spaceAfter:]
%@: text[%@] confidence[%f] hasSpaceAfter[%d]
T@"NSString",R,N,V_text
confidence
Td,R,N,V_confidence
hasSpaceAfter
TB,R,N,V_hasSpaceAfter
-[AVCCaptionsResult initWithCapacity:utteranceComplete:utteranceNumber:updateNumber:]
%@: tokens:[%@] utteranceCompleted[%d]
utteranceComplete
TB,R,N,V_utteranceComplete
tokens
T@"NSArray",R,N,V_tokens
TI,R,N,V_utteranceNumber
TI,R,N,V_updateNumber
%@: locale[%@]
locale
T@"NSLocale",&,N,V_locale
-[VCConnectionManagerIDS selectPrimaryAndSecondaryWithConnection:]
-[VCConnectionManagerIDS addConnection:]
-[VCConnectionManagerIDS handlePrimaryConnectionRemoved]
-[VCConnectionManagerIDS handleSecondaryConnectionRemoved]
-[VCConnectionManagerIDS removeConnection:]
-[VCConnectionManagerIDS optOutAllStreamsForNonPrimaryConnections]
-[VCConnectionManagerIDS handoverWithWRMSuggestion:]
-[VCConnectionManagerIDS setPreferredLocalInterfaceForDuplication:]
-[VCConnectionManagerIDS setPreferredRemoteInterfaceForDuplication:]
-[VCConnectionManagerIDS updateSessionStats:]
-[VCConnectionManagerIDS updateConnectionForDuplication]
-[VCConnectionManagerIDS addConnectionToConnectionArray:]
-[VCConnectionManagerIDS sourceDestinationInfo:isSourceOnCellular:isSourceIPv6:]
-[VCConnectionManagerIDS reportConnection:isInitialConnection:]
QRSAK
QRSAP
QRSUN
Stream: KeyInterval=%d, framerate=%d, weightFactor:%d
 => FramesPerPeriod:%d FramePosition:%d
framesPerIdrPeriod
TI,N,V_framesPerIdrPeriod
VCSignalErrorAt
videoRuleCollections
featureString
parameterSet
T@"NSMutableArray",&,N,V_videoRuleCollections
T@"NSString",&,N,V_featureString
TI,N,V_parameterSet
queue
T@"NSObject<OS_dispatch_queue>",&,N,Vqueue
block
T@?,C,N,Vblock
eventLogLevel
Ti,N,V_eventLogLevel
AVConferenceXPCClient
-[AVConferenceXPCClient init]
AVConferenceXPCClientReplyQueue
AVConferenceXPCClientConnectionQueue
-[AVConferenceXPCClient dealloc]
RESULTS
TIMEOUT
-[AVConferenceXPCClient closeConnectionToServer]_block_invoke
-[AVConferenceXPCClient createConnectionToServer]_block_invoke
com.apple.videoconference.camera
XPCARGUMENTS
v8@?0@"NSObject<OS_xpc_object>"4
USERPERSISTENT
-[AVConferenceXPCClient sendMessageAsync:arguments:xpcArguments:reply:queue:]
-[AVConferenceXPCClient sendMessageAsync:arguments:xpcArguments:reply:queue:]_block_invoke
EXPECTSREPLY
-[AVConferenceXPCClient sendMessageSync:arguments:xpcArguments:]
-[AVConferenceXPCClient registerBlockForService:block:queue:eventLogLevel:]
-[AVConferenceXPCClient deregisterFromService:]
connection
T@"NSObject<OS_xpc_object>",R,Vconnection
registeredBlocks
T@"NSMutableDictionary",R,VregisteredBlocks
connectionPersists
TB,R,VconnectionPersists
-[VCVideoRuleCollectionsCameraMac initWithHardwareSettings:]
-[VCVideoRuleCollectionsCameraMac computeEncodingScore]
-[VCVideoRuleCollectionsCameraMac setupH264WifiRules]
SecurityKey
SecuritySalt
SecurityKeyIndex
SecurityKeySetTime
SecurityLocallyGenerated
com.apple.AVConference.VCSecurityKeyManagerQueue
-[VCSecurityKeyManager initWithDelegate:reportingAgent:]
-[VCSecurityKeyManager dealloc]
-[VCSecurityKeyManager addSecurityKeyMaterial:]_block_invoke
-[VCSecurityKeyManager getSendKeyMaterialWithIndex:]_block_invoke
-[VCSecurityKeyManager getRecvKeyMaterialWithIndex:]_block_invoke
-[VCSecurityKeyManager getLatestSendKeyMaterial]_block_invoke
-[VCSecurityKeyManager getLatestRecvKeyMaterial]_block_invoke
-[VCSecurityKeyManager pruneSendKeyMaterialWithDelay:]_block_invoke
-[VCSecurityKeyManager pruneRecvKeyMaterialWithDelay:]_block_invoke
audioSSRC
TI,N,V_audioSSRC
videoSSRC
TI,N,V_videoSSRC
audioRuleCollection
T@"VCAudioRuleCollection",&,N,V_audioRuleCollection
T@"VCVideoRuleCollections",&,N,V_videoRuleCollections
screenRuleCollections
T@"VCVideoRuleCollections",&,N,V_screenRuleCollections
audioUnitNumber
TI,N,V_audioUnitNumber
Ti,N,V_preferredAudioCodec
videoFeatureStrings
T@"NSDictionary",&,N,V_videoFeatureStrings
TB,N,V_isCaller
bitrateArbiter
T@"VCBitrateArbiter",&,N,V_bitrateArbiter
captionsSenderLanguages
T@"NSSet",&,N,V_captionsSenderLanguages
captionsReceiverLanguages
T@"NSSet",&,N,V_captionsReceiverLanguages
callLogFile
T^v,N,V_callLogFile
creationTime
TQ,N,V_creationTime
T@"NSArray",&,N,V_multiwayAudioStreams
T@"NSArray",&,N,V_multiwayVideoStreams
supportsDynamicMaxBitrate
TB,N,V_supportsDynamicMaxBitrate
remoteUserAgent
T@"NSString",&,N,V_remoteUserAgent
remoteBasebandCodec
T@"NSString",&,N,V_remoteBasebandCodec
remoteBasebandCodecSampleRate
TI,N,V_remoteBasebandCodecSampleRate
T@"NSMutableDictionary",&,N,V_bandwidthSettings
remoteSSRC
TI,N,V_remoteSSRC
allowRecording
TB,N,V_allowRecording
allowSwitching
TB,N,V_allowSwitching
primaryPayload
Ti,N,V_primaryPayload
dtxPayload
Ti,N,V_dtxPayload
redPayload
Ti,N,V_redPayload
isSupported
TB,N,V_isSupported
TB,N,V_isRTCPFBEnabled
T@"VCVideoRuleCollections",R,N,V_videoRuleCollections
featureStrings
T@"NSDictionary",&,N,V_featureStrings
parameterSets
T@"NSDictionary",&,N,V_parameterSets
remoteCanDisplayCaptions
TB,N,V_remoteCanDisplayCaptions
localLanguages
T@"NSSet",&,N,V_localLanguages
remoteLanguages
T@"NSSet",&,N,V_remoteLanguages
Ti,N,V_capabilities
multiwayStreamConfig
T@"VCMediaStreamMultiwayConfigAudio",&,N,V_multiwayStreamConfig
T@"VCMediaStreamMultiwayConfigVideo",&,N,V_multiwayStreamConfig
-[VCMediaNegotiator initWithLocalSettings:]
-[VCMediaNegotiator isCellular16x9EncodeCapable]
-[VCMediaNegotiator newInviteBlob]
Created invite media blob
mediablob_invite
mediablob_invite_remote
-[VCMediaNegotiator processInviteBlob:]
Received invite media blob
-[VCMediaNegotiator newResponseBlob]
Created response media blob
mediablob_response
mediablob_response_remote
-[VCMediaNegotiator processResponseBlob:]
Received response media blob
-[VCMediaNegotiator negotiatedFeaturesStringWithLocalFeaturesString:remoteFeaturesString:]
-[VCMediaNegotiator dumpBlob:prefix:]
.blob
com.apple.VideoConference.MediaBlob
-[VCMediaNegotiator bandwidthConfigurationWithOperatingMode:connectionType:]
-[VCMediaNegotiator addBandwidthSettingsForMediaBlob:operatingMode:connectionType:]
+[VCMediaNegotiator newDecompressedBlob:]
+[VCMediaNegotiator newCompressedBlob:]
-[VCMediaNegotiator negotiateAudioDTXPayload:]
-[VCMediaNegotiator negotiateAudioREDPayload:]
-[VCMediaNegotiator negotiateAudioSettings:]
-[VCMediaNegotiator setupAudioWithNegotiatedSettings:]
-[VCMediaNegotiator selectVideoFeatureString:selectedPayload:]
-[VCMediaNegotiator getPreferredVideoPayloadList:]
-[VCMediaNegotiator selectBestVideoRuleForTransport:payload:encodingType:localVideoRuleCollection:remoteVideoSettings:negotiatedVideoSettings:isScreen:]
-[VCMediaNegotiator processParameterSets:videoResults:]
v16@?0@"VCVideoRuleCollectionKey"4@"NSArray"8^B12
-[VCMediaNegotiator negotiateVideoSettings:]
-[VCMediaNegotiator setupVideoWithNegotiatedSettings:]
-[VCMediaNegotiator negotiateScreenSettings:]
-[VCMediaNegotiator setupScreenWithNegotiatedSettings:]
-[VCMediaNegotiator setupMomentsForMediaBlob:]
-[VCMediaNegotiator negotiateMomentsWithMomentsSettings:]
-[VCMediaNegotiator negotiateMultiwayAudioStreams:]
-[VCMediaNegotiator negotiateMultiwayVideoStreams:]
usePreNegotiation
TB,R,N,V_usePreNegotiation
localSettings
T@"VCMediaNegotiatorLocalConfiguration",R,N,V_localSettings
negotiatedSettings
T@"VCMediaNegotiatorResults",R,N,V_negotiatedSettings
negotiatedAudioSettings
T@"VCMediaNegotiatorAudioResults",R,N,V_negotiatedAudioSettings
negotiatedVideoSettings
T@"VCMediaNegotiatorVideoResults",R,N,V_negotiatedVideoSettings
negotiatedScreenSettings
T@"VCMediaNegotiatorVideoResults",R,N,V_negotiatedScreenSettings
negotiatedCaptionsSettings
T@"VCMediaNegotiatorCaptionsResults",R,N,V_negotiatedCaptionsSettings
negotiatedMomentsSettings
T@"VCMediaNegotiatorMomentsResults",R,N,V_negotiatedMomentsSettings
negotiatedMultiwayAudioStreams
T@"NSArray",R,N,V_negotiatedMultiwayAudioStreams
negotiatedMultiwayVideoStreams
T@"NSArray",R,N,V_negotiatedMultiwayVideoStreams
-[VCVideoCaptureConverter setSourceFramerate:]
-[VCVideoCaptureConverter setDestinationFramerate:]
-[VCVideoCaptureConverter updateThrottleRate]
-[VCVideoCaptureConverter avConferencePreviewError:]
sourceFramerate
TI,N,V_sourceFramerate
destinationFramerate
TI,N,V_destinationFramerate
com.apple.VCConnectionHealthMonitor.delegateQueue
-[VCConnectionHealthMonitor processPeerStatsBlob:]
-[VCConnectionHealthMonitor updateStatsHistory]
T@"<VCConnectionHealthMonitorDelegate>",V_delegate
-[VCSessionMediaStreamConfigurationProvider init]
-[VCSessionMediaStreamConfigurationProvider initializeStreams]
-[VCSessionMediaStreamConfigurationProvider initializeVideoStreamWithConfig:streamIndex:]
-[VCSessionMediaStreamConfigurationProvider initializeVideoStreamWithDefaults]
-[VCSessionMediaStreamConfigurationProvider initializeAudioStreams]
-[VCSessionMediaStreamConfigurationProvider initializeAudioStreamWithIndex:supportedAudioRules:]
-[VCSessionMediaStreamConfigurationProvider audioRuleCollectionWithAudioConfig:supportedAudioRules:]
audioStreamConfigurations
T@"NSArray",R,N,V_audioStreamConfigurations
videoStreamConfigurations
T@"NSArray",R,N,V_videoStreamConfigurations
highestEncodingResolution
Ti,R,N,V_highestEncodingResolution
isEncodingSqaures
TB,R,N,V_isEncodingSqaures
com.apple.VideoConference.VCVirtualTextDevice
-[VCVirtualTextDevice initWithSendDelegate:clientPid:delegate:delegateQueue:]
-[VCVirtualTextDevice start]
Invalid state
-[VCVirtualTextDevice stop]
-[VCVirtualTextDevice pause]
-[VCVirtualTextDevice resume]
-[VCVirtualTextDevice sendCharacter:]
-[VCVirtualTextDevice sendText:]
mediaStreamDelegate
T@"NSObject<VCMediaStreamDelegate>",N
mediaStreamDelegateQueue
T@"NSObject<OS_dispatch_queue>",&,N
-[VCMediaStreamTransport configureWithStreamConfig:setupInfo:customRTCPPackets:error:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCMediaStreamTransport.m
Call with empty remoteIP address
Failed to setup SRTP encryption
setupSRTP failed with error %d
-[VCMediaStreamTransport getCryptoSet:withMasterKey:]
-[VCMediaStreamTransport setupSRTP]
RTPSetSockets failed
RTP set multiplex mode failed
RTP set IDS descriptor
RTPCreateSocketsRetryBind failed
Setup type not set
Invalid setup type
-[VCMediaStreamTransport lastReceivedRTCPPacketTime]
-[VCMediaStreamTransport getKeyDerivationCryptoSet:withKeyMaterial:]
-[VCMediaStreamTransport handleEncryptionInfoChange:]
-[VCMediaStreamTransport generateReceptionReport:reportCount:]
-[VCMediaStreamTransport getRTCPReportNTPTimeMiddle32ForReportId:]
-[VCMediaStreamTransport getExtendedSequenceNumberForSequenceNumber:]
streamConfig
T@"VCMediaStreamConfig",R,N,V_streamConfig
T^{tagHANDLE=i},R,N,V_rtpHandle
idsStreamId
TS,R,N
T@"<VCMediaStreamTransportDelegate>",R,N
rtcpSendEnabled
TB,R,N,GisRTCPSendEnabled
streamDirection
Ti,N
rtpTimeoutInterval
rtpTimeoutEnabled
TB,N,GisRTPTimeoutEnabled
decryptionTimeoutInterval
decryptionTimeoutEnabled
TB,N,GisDecryptionTimeoutEnabled
rtcpTimeoutInterval
rtcpSendInterval
rtcpTimeoutEnabled
TB,N,GisRTCPTimeoutEnabled
rtcpEnabled
TB,N,GisRTCPEnabled
timeoutQueueLabel-%d
AVConferenceXPCServer
+[VCXPCConnection selfTerminateDueToTimeout:]
AVConference %d %s
<VCXPCConnection connection: %p client pid: %d, context: %@>
-[VCXPCConnection setConnection:]
T@"NSObject<OS_xpc_object>",&,N
context
T@,&,N,Vcontext
tokenData
T@"NSData",&,N,VtokenData
persistent
TB,GisPersistent
AVConferenceXPCServerIncomingQueue
AVConferenceXPCServerOutgoingQueue
AVConferenceXPCServerClientConnectionsQueue
pingServer
-[AVConferenceXPCServer init]_block_invoke
SUCCESS
Ping
-[AVConferenceXPCServer sendMessageAsync:arguments:]
-[AVConferenceXPCServer sendMessageAsync:arguments:xpcArguments:context:]
-[AVConferenceXPCServer sendMessageAsync:arguments:context:]
-[AVConferenceXPCServer sendMessageAsync:arguments:toAllClientsWithContext:]
-[AVConferenceXPCServer sendMessageAsync:arguments:toAllClientsWithContext:]_block_invoke
-[AVConferenceXPCServer registerBlockForService:block:queue:eventLogLevel:]
-[AVConferenceXPCServer deregisterFromService:]
listener
T@"NSObject<OS_xpc_object>",R,Vlistener
-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]
com.apple.videoconference.allow-conferencing
CACHEAUTHTOKEN
-[AVConferenceXPCServer(XPCManagement) _xpc_handle_incoming_request:]_block_invoke
-[AVConferenceXPCServer(XPCManagement) _xpc_add_connection_to_list:]_block_invoke
-[AVConferenceXPCServer(XPCManagement) _xpc_remove_connection_from_list:]_block_invoke
-[AVConferenceXPCServer(XPCManagement) _xpc_remove_connections_from_list]
-[AVPingTest calculateInterfaceName]
pdp_ip0
/sbin/ping -b %@ -c 7 %@
-[AVPingTest start]
AVPingTest: lastReturnedError = %d, packetLossRate = %f, min = %f, max = %f, stddev = %f, avg = %f
usingWifi
TB,R,N,VusingWifi
Tf,R,N,Vmin
Tf,R,N,Vmax
Tf,R,N,Vavg
stddev
Tf,R,N,Vstddev
Tf,R,N,VpacketLossRate
round-trip min/avg/max/stddev = 
-[AVPingTest(ParsingHelper) parsePingLineForLatencyStats:]
round-trip min/avg/max/stddev = %f/%f/%f/%f 
bad interface name
No such file or directory
packets transmitted
-[AVPingTest(ParsingHelper) parsePingLineForPLR:]
%d packets transmitted, %d packets received, %f
-[VCVideoRuleCollectionsCamera setupH264CellularRules]
-[VCVideoRuleCollectionsCamera bestVideoRuleForEncodingType:aspectRatio:payload:]
-[VCVideoRuleCollectionsCamera getBestPreviewFrameWidth:frameHeight:frameRate:]
resolution
Ti,N,V_resolution
T@"NSSet",R,N,V_payloads
subStreamConfigs
T@"NSArray",R,N,V_subStreamConfigs
%s[%p] %s
-[VCVideoStreamConfig initWithClientDictionary:]
vcMediaStreamRXCodecType
vcMediaStreamTXCodecType
vcMediaStreamFramerate
vcMediaStreamEnableCVO
vcMediaStreamCVOExtensionID
vcMediaStreamRxPayloadType
vcMediaStreamTxPayloadType
vcMediaStreamTXMinBitrate
vcMediaStreamTXMaxBitrate
vcMediaStreamRXMinBitrate
vcMediaStreamRXMaxBitrate
vcMediaStreamKeyFrameInterval
vcMediaStreamRemoteVideoInitialOrientation
vcMediaStreamIsVideoProtected
vcMediaStreamVideoResolution
rxMaxBitrate
TI,N,V_rxMaxBitrate
rxMinBitrate
TI,N,V_rxMinBitrate
remoteVideoInitialOrientation
Ti,N,V_remoteVideoInitialOrientation
isVideoProtected
TB,N,V_isVideoProtected
Ti,N,V_type
-[VCXPCClientShared init]
com.apple.AVConference.AVCSessionXPCClient.stateQueue
-[VCXPCClientShared registerBlockWithUUID:service:block:]_block_invoke
registeredUUIDServiceBlocks
T@"NSMutableDictionary",R,N,V_registeredUUIDServiceBlocks
-[VCEffects setEffectsMode:]
effectsMode
Ti,N,V_effectsMode
effectsApplied
TB,N,V_effectsApplied
faceMeshTrackingEnabled
TB,N,V_faceMeshTrackingEnabled
i12@?0@4@8
Ti,R,N,VoperatingMode
limits
T@"NSArray",R,N,Vlimits
-[VCAudioTierPicker initWithOperatingMode:payloadConfigs:packetsPerBundle:supportedRedNumPayloads:headerSize:usingCellular:useCaseWatchContinuity:defaultMaxCap:]
+[VCAudioTierPicker selectHighestQualityAudioTiers:forBitrateLimits:isHardLimit:]
 new
-[VCAudioTierPicker printCreatedAudioTiers:]
Video
-[VCAudioTierPicker tierForNetworkBitrate:withLegacyDuplication:]
-[VCAudioTierPicker tierForNetworkBitrate:withRedNumPayloads:]
defaultTier
T@"VCAudioTier",R,VdefaultTier
-[VCVideoRuleCollectionsCameraEmbedded initWithHardwareSettings:]
%@: screenSize[%dx%d] deviceClass[%ld] VCHardwareVideoEncoderType[%ld] useSoftFramerateSwitching[%d]
-[VCVideoRuleCollectionsCameraEmbedded setupVideoRulesForPayload:transportType:encodingType:formatList:formatListCount:preferredFormat:supportsHighDef:]
-[VCVideoRuleCollectionsCameraEmbedded setupH264Rules]
-[VCVideoRuleCollectionsCameraEmbedded bitrateConfiguration]
-[VCImageAttributeRules addRuleForVideoPayload:withDirection:width:height:frameRate:priority:interface:]
-[VCImageAttributeRules extractDimensionsForInterface:direction:]
T@"NSMutableDictionary",&,N,V_imageAttributeRules
-[VCVideoStreamRateController initWithDumpID:]
com.apple.VideoConference.VCVideoStreamRateController
-[VCVideoStreamRateController doRateControlWithTime:roundTripTime:packetLossRate:operatingBitrate:averageReceivedBitrate:]_block_invoke
-[VCVideoStreamRateController minTierIndex:]
-[VCVideoStreamRateController maxTierIndex:]
-[VCVideoStreamRateController setOperatingTierIndexWithBitrate:]
VCVideoRC
STime
dTime/ETxTS
OWRD
NOWRD
NOWRDS
NOWRDA
PLR/FEC
BR/TR
MQIn: A/V
MQOut: A/V
ABRL
TxAT
MODE
TxSTATE
minBitrate
TI,R,N,V_minBitrate
maxBitrate
TI,R,N,V_maxBitrate
Message
EncryptedMessage
Status
TransactionID
-[VCControlChannelTransaction initWithTransportSessionID:transactionData:participantID:transactionDelegate:]
-[VCControlChannelTransaction dealloc]
-[VCControlChannelTransaction flushTransactions]
-[VCControlChannelTransaction confirmedTransactionByParticipantID:sessionID:]
-[VCControlChannelTransaction sendReliableMessage:sessionID:participantID:]
FAILURE
+[VCControlChannelTransaction sendUnreliableMessage:sessionID:participantID:transactionDelegate:]
-[VCControlChannelDialog initWithSessionID:participantID:transactionDelegate:]
-[VCControlChannelDialog dealloc]
-[VCControlChannelDialog removeTransactionForTransactionID:]
+[VCControlChannelDialog encryptMessage:buffer:size:sequenceNumber:transactionDelegate:]
+[VCControlChannelDialog newEncryptedMessageFromMessage:sequenceNumber:transactionDelegate:]
-[VCControlChannelDialog sendReliableMessage:transactionDelegate:]
+[VCControlChannelDialog sendUnreliableMessage:sessionID:participantID:transactionDelegate:]
-[VCControlChannelDialog processMessageFromParticipant:transactionID:status:]
+[VCControlChannelDialog processMessageFromParticipant:transactionID:status:sessionID:transactionDelegate:]
-[VCControlChannelMultiWay initWithTransportSessionID:reportingAgent:]
com.apple.VideoConference.VCControlChannel.keyMaterialQueue
-[VCControlChannelMultiWay dealloc]
-[VCControlChannelMultiWay start]_block_invoke
-[VCControlChannelMultiWay stop]_block_invoke
-[VCControlChannelMultiWay decryptMessageWithMKI:message:buffer:size:sequenceNumber:]
-[VCControlChannelMultiWay processEncryptedMessage:sequenceNumber:MKIData:participantID:]
-[VCControlChannelMultiWay messageReceived:participantInfo:]
-[VCControlChannelMultiWay sendReliableMessageAndWait:participantID:]
-[VCControlChannelMultiWay sendReliableMessage:participantID:]
-[VCControlChannelMultiWay sendUnreliableMessage:participantID:]
-[VCControlChannelMultiWay broadcastUnreliableMessage:]
-[VCControlChannelMultiWay lastUsedMKIBytes]
CCMinBytesSent
CCMaxBytesSent
CCRawBytesSent
CCMinBytesReceived
CCMaxBytesReceived
CCRawBytesReceived
isEncryptionEnabled
TI,N,V_transportSessionID
vfdMessage
Ti,N,V_vfdMessage
vfdCancel
Ti,N,V_vfdCancel
dialogs
T@"NSMutableDictionary",R,N,V_dialogs
TB,R,V_isRunning
TB,R,V_isEncryptionEnabled
receiveProc
com.apple.vccontrolchannel.receiveproc
+[SnapshotTimer takeSnapshotForTask:]
-[SnapshotTimer checkinWithTimeout:forTask:]_block_invoke
taskIsComplete
TB,N,VtaskIsComplete
-[VCTextJitterBuffer initWithConfiguration:]
-[VCTextJitterBuffer dealloc]
-[VCTextJitterBuffer start]
-[VCTextJitterBuffer stop]
-[VCTextJitterBuffer startHeartbeat]
-[VCTextJitterBuffer heartbeat]
+[VCMomentsUtil createResizeFrame:transferSession:bufferPool:]
-[VCPacketBundler bundleAudioRFC3640:numInputBytes:payloadType:timestamp:]
-[VCPacketBundler bundleAudio:numInputBytes:payloadType:timestamp:voiceActivity:priority:]
-[VCPacketBundler _copyInputBytes:numInputBytes:payloadType:timestamp:]
-[VCPacketBundler bundleAudioLegacy:numInputBytes:payloadType:timestamp:]
maxPacketSize
allowLargePackets
TB,N,V_allowLargePackets
Ti,N,V_payload
timestamp
TI,N,V_timestamp
bundlingScheme
Ti,N,V_bundlingScheme
encodedBuffer
T*,R,N
encodedBufferSize
TI,R,N,V_bundledPackets
isFull
TB,R,N,V_isFull
isTalkSpurtStart
TC,R,N,V_priority
-[VCVideoQualityInfo init]
-[VCVideoQualityInfo updateWithCurrentFramerate:bitrate:time:]
-[VCVideoQualityInfo setVideoIsExpected:]
isVideoQualityDegraded
TB,R,N,V_isVideoQualityDegraded
videoIsExpected
TB,N,V_videoIsExpected
com.apple.avconference.avcaudiostream.callback.queue
AVCAudioStream
-[AVCAudioStream dealloc]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AVCAudioStream.m
-[AVCAudioStream configure:error:]
-[AVCAudioStream start]
AVCAudioStream hasn't been configured
-[AVCAudioStream stop]
-[AVCAudioStream pause]
-[AVCAudioStream resume]
event
duration
interval
-[AVCAudioStream startSynchronizeWithStream:]
-[AVCAudioStream setVolume:]
-[AVCAudioStream didInterruptionBeginHandler]
-[AVCAudioStream didInterruptionEndHandler]
-[AVCAudioStream registerBlocksForDelegateNotifications]_block_invoke
vcMediaStreamDidServerDie
T@"NSDictionary",&,N,V_capabilities
T@"AVCMediaStreamConfig",&,N,V_configuration
rtpTimeOutEnabled
TB,N,GisRTPTimeOutEnabled
rtcpTimeOutEnabled
TB,N,GisRTCPTimeOutEnabled
rtpTimeOutIntervalSec
rtcpTimeOutIntervalSec
rtcpSendIntervalSec
T@"<AVCAudioStreamDelegate>",N,V_delegate
com.apple.AVConference.vcSessionDownlinkBandwidthAllocatorClientQueue
VCSessionDownlinkBandwidthAllocator
-[VCSessionDownlinkBandwidthAllocator distributeBitrate:]
-[VCSessionDownlinkBandwidthAllocator distributeBitrate:]_block_invoke
VCSPActualBitrate
VCSPOptedInBitrate
VCSPActiveStreamID
VCSPOptedInStreamID
VCMQSchBytes
VCMQSchHeaderBytes
VCMQSchPkts
VCMQSentBytes
VCMQSentHeaderBytes
VCMQSentPkts
VCMQUnsentPkts
VCMQSavedBytes
VCMQSavedPkts
VCMQPeakBR
VCMQMTU
VCMQStreamID
VCMediaQueue
_VCMediaQueue_FreeMediaPacket
_VCMediaQueue_SchedulePackets
_VCMediaQueue_SchedulePacketsWithLimitedBudget
_VCMediaQueue_ScheduleThrottlingQueuesAndReduceRemainingBudget
_VCMediaQueue_SendAndFreePackets
_VCMediaQueue_CreateInternalQueue
_VCMediaQueue_FlushInternalQueueBeforeTimestamp
_VCMediaQueue_ResetStatistics
%4.3f
%u/%u/%u/%u
%08X
%08X
%.3f
%u/%u
%u/%u
%u/%u
[InternalQueue]
%u/%u
.mqdump
com.apple.VideoConference.VCMediaQueuelog
STime
SchedulePolicy
ExpInterval
BudgetTuple
IDRBitmap
SendBitmap
PktLeft
WQSize
BundlePolicy
PktCount
NetworkOverhead
TotalSize
[InternalQueue]
Index
Type
StreamId
QSizeTuple
OldTS
PktSch
LastSchTS
VCMediaQueue_Create
disableMQPacketBundling
com.apple.AVConference.VCMediaQueueSendProc
VCMediaQueue_Start
VCMediaQueue_Stop
VCMediaQueue_AllocMediaPacket
VCMediaQueue_AddPacket
VCMediaQueue_FlushPacketsInStream
VCMediaQueue_SetPeakBitrate
VCMediaQueue_SetMTUBytes
VCMediaQueue_SetMediaQueueSizeThresholdExceededBlock
_VCMediaQueueFinalize
l20@?0^{tagVCMediaPacket=iS^{OpaqueCMBlockBuffer}{?=[12S]CBSCBBQBBBS{?=SSSSS}B}iBiIIiddBBBBBB^{tagVCMediaPacket}}4S8S12s16
WiFiManager
CallInProgress
didStartPreview
didStopPreview
AVConferencePreview
-[AVConferencePreview didReceiveErrorFromCameraUniqueID:error:]_block_invoke
-[AVConferencePreview didGetSnapshot:]_block_invoke
-[AVConferencePreview cameraDidBecomeAvailableForUniqueID:]_block_invoke
-[AVConferencePreview cameraDidBecomeInterruptedForForUniqueID:reason:]_block_invoke
-[AVConferencePreview connectLayer:withSlot:]
-[AVConferencePreview registerBlocksForDelegateNotifications]_block_invoke
previewInitialize
localCameraUIDString
previewDidReceiveFirstFrame
previewCameraUIDChanged
videoSlotNumber
previewDidStart
previewDidPause
previewDidStop
snapShotFrame
previewDidGetSnapShot
localVideoAttributes
previewDidLocalVideoAttributesChange
previewDidLocalScreenAttributesChange
previewDidReceiveCameraError
videoSlotFacing
previewDidLocalVideoSlotChange
previewCameraDidBecomeAvailable
previewInterruptionReason
previewCameraDidBecomeInterrupted
-[AVConferencePreview isPreviewRunning]
-[AVConferencePreview setLocalCamera:]
-[AVConferencePreview setLocalCameraWithUID:]
-[AVConferencePreview localCamera]
-[AVConferencePreview localCameraUID]
T@"NSObject<AVConferencePreviewClientDelegate>",&,N,Vdelegate
com.apple.avconference.DTMFEventHandler.queue
startTimestamp
endTimestamp
-[DTMFEventHandler sendDTMFEvent:atTimestamp:withSampleRate:]_block_invoke
-[DTMFEventHandler sendingDTMFEventWithTimeStamp:interval:RTPHandle:]_block_invoke
%@[%p] idsParticipantID[%llu] participantUUID[%@] audioEnabled[%d] videoEnabled[%d] videoQuality[%d] visibilityIndex[%d] prominenceIndex[%d]
participantData
T@"NSData",&,N,V_participantData
T@"NSString",&,N,V_uuid
idsParticipantID
TQ,N,V_idsParticipantID
TB,N,V_audioEnabled
TB,N,V_videoEnabled
frequencyMeteringEnabled
TB,N,V_frequencyMeteringEnabled
TB,N,V_audioMuted
TB,N,V_audioPaused
TB,N,V_videoPaused
-[VCSecureDataChannel initWithLocalCallID:remoteCallID:isCaller:sharedSecret:error:]_block_invoke
v16@?0@"NSData"4B8i12
-[VCSecureDataChannel initWithLocalCallID:remoteCallID:isCaller:sharedSecret:error:]
-[VCSecureDataChannel setupWithSharedSecret:isCaller:error:]
Could not setup secure data channel
-[VCSecureDataChannel sendData:messageType:encrypted:]
-[VCSecureDataChannel convertEncryptedData:toData:encrypted:]
-[VCSecureDataChannel convertData:toEncryptedData:encrypted:]
T@"<VCSecureDataChannelDelegate>",N
maxEncryptedDataSize
maxUnencryptedDataSize
maxUDPPayloadSize
TI,N,V_maxUDPPayloadSize
getOFTTypeForSecureDataMessageType
Signalled error at %s: Invalid message type %d
secureDataMessageTypeForOFTType
-[VCIDSSessionInfoSynchronizer setVCIDSSessionInfoSubscribedStreamIDs:]
-[VCIDSSessionInfoSynchronizer setVCIDSSessionInfoSubscribedStreamIDs:]_block_invoke
-[VCIDSSessionInfoSynchronizer setVCIDSSessionInfoPublishedStreamIDs:]_block_invoke
peerSubscribedStreamCallback
T@?,C,N,V_peerSubscribedStreamCallback
peerPublishedStreamCallback
T@?,C,N,V_peerPublishedStreamCallback
errorReponseCallback
T@?,C,N,V_errorReponseCallback
com.apple.AVConference.VCIDSSessionInfoSynchronizer
-[VCIDSSessionInfoSynchronizer(PrivateMethods) setPrimaryLinkID:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) setDuplicationLinkID:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) resetParticipantGenerationCounter]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) checkVCIDSSessionInfoNeedUpdate:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) updateVCIDSSessionInfoResponse:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) optInStreamIDsForConnection:]
-[VCIDSSessionInfoSynchronizer(PrivateMethods) optInStreamIDsForConnection:]_block_invoke
-[VCIDSSessionInfoSynchronizer(PrivateMethods) optOutStreamIDsForNonPrimaryConnection:sentOnConnection:]
SIMinBytesSent
SIMaxBytesSent
SIRawBytesSent
SIMinBytesReceived
SIMaxBytesReceived
SIRawBytesReceived
primaryLinkID
T@"NSNumber",&,N
duplicationLinkID
-[VCSessionStatsController initWithConnectionManager:uplinkStatsCollector:downlinkStatsCollector:reportingAgent:transportSessionID:streamID:mediaQueue:]
-[VCSessionStatsController dealloc]
-[VCSessionStatsController reset]
com.apple.AVConference.vcsessionStatsController.receiveproc
-[VCSessionStatsController startLocalSessionStatsReceive]
SUCCEEDED
FAILED
-[VCSessionStatsController startLocalSessionStatsSend]
-[VCSessionStatsController stopLocalSessionStatsUpdate]
-[VCSessionStatsController updateRemoteSessionStats:]
-[VCSessionStatsController triggerRateControlWithLocalSessionStats:time:]
-[VCSessionStatsController statsReceiveStatsPayload]
-[VCSessionStatsController handleRemoteSessionStats:]
-[VCSessionStatsController healthPrintForServerStats]
SSMinBytesSent
SSMaxBytesSent
SSRawBytesSent
SSMinBytesReceived
SSMaxBytesReceived
SSRawBytesReceived
statsReceiveProc
%s signalled err=%d (%s) (%s) at %s:%d
ENOMEM
emulation3Byte malloc
RemoveEmulation3Byte
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/H264Bridge.c
err = kFigBridgeInvalidSerializedSampleDescriptionErr
{PullParamSetSPS} ERROR: Wrong forbidden_bit in SPS NAL unit, will bail ...
PullParamSetSPS
{PullParamSetSPS} ERROR: Wrong nal_ref_idc in SPS NAL unit, will bail ...
{PullParamSetSPS} ERROR: Wrong nal_unit_type in SPS NAL unit, will bail ...
PullParamSetSPS: chroma_format_idc too large for high profile
PullParamSetSPS: bit_depth_luma_minus8 too large for high profile
PullParamSetSPS: bit_depth_chroma_minus8 too large for high profile
PullParamSetSPS: qpprime_y_zero_transform_bypass_flag too large for high profile
{PullParamSetSPS} Overflowing NALU size, will bail ...
PullParamSetSPS: thiss->seq_parameter_set_id too large
PullParamSetSPS: wrong SeqParamSet.num_ref_frames_in_pic_order_cnt_cycle number
kFigBridgeInvalidSerializedSampleDescriptionErr
h264bridge_u_pull
Buffer overflow!
UE_PULL should :numZeros<=12
h264bridge_ue_pull
h264bridge_se_pull
Overran SPS
PullVUIParamSet
thiss->cpb_cnt_minus1 too big
h264bridge_u_pulllong
h264bridge_ue_pulllong
logic error
UE_PULLlong: data too large for UINT
AVCPacketRelayErrorDomain
com.apple.private.alloy.willow.stream
-[AVCPacketRelaySocketConnection initWithSocket:remoteAddress:packetFilter:]
-[AVCPacketRelaySocketConnection start]
-[AVCPacketRelaySocketConnection stop]
-[AVCPacketRelaySocketConnection receiveDataOnSocket:]
-[AVCPacketRelaySocketConnection sendData:size:error:]
socket connection with remote IPPort %s, socket %d (connected %d)
-[AVCPacketRelaySocketConnection dealloc]
isDemuxNeeded
T@?,C
packetFilter
T@"AVCPacketFilter",&
TB,V_isDemuxNeeded
T@"AVCPacketFilter",&,V_packetFilter
-[AVCPacketRelayIDSConnection initWithIDSSocketDescriptor:]
-[AVCPacketRelayIDSConnection initWithIDSDestination:]
-[AVCPacketRelayIDSConnection start]
-[AVCPacketRelayIDSConnection start]_block_invoke
v24@?0r^v4I8{?=cSSC}12@"NSError"20
-[AVCPacketRelayIDSConnection stop]
-[AVCPacketRelayIDSConnection sendData:size:error:]
-[AVCPacketRelayIDSConnection sendData:size:error:]_block_invoke
-[AVCPacketRelayIDSConnection dealloc]
isResumed
TB,V_isResumed
-[AVCPacketRelay initWithConnections:multiplexedConnection:error:]
com.apple.avconference.AVCPacketRelayQueue
-[AVCPacketRelay initWithConnections:multiplexedConnection:error:]_block_invoke
v20@?0r^v4I8B12@"NSError"16
-[AVCPacketRelay start]_block_invoke
-[AVCPacketRelay stop]_block_invoke
-[AVCPacketRelay dealloc]
-[AVCPacketRelay startAllConnections]
-[AVCPacketRelay stopAllConnections]
connections
T@"NSArray",&,V_connections
multiplexedConnection
T@"<AVCPacketRelayConnectionProtocol>",&,V_multiplexedConnection
T@"<AVCPacketRelayDelegate>",N,V_delegate
-[VCMediaStreamSynchronizer initWithSourceSampleRate:destinationSampleRate:]
com.apple.VideoConference.VCMediaStreamSynchronizer
-[VCMediaStreamSynchronizer calculatePlayoutTimeWithRTPTimestamp:]_block_invoke
+[VCMediaStreamSynchronizer differenceBetweenRtpTimestamp:rtpTimestamp:]
-[VCMediaStreamSynchronizer sourceTimeForDestinationRTPTimestamp:]_block_invoke
-[VCMediaStreamSynchronizer updateSourceState:]_block_invoke
com.apple.avconference.avctextstream.callback.queue
AVCTextStream
-[AVCTextStream initWithNetworkSockets:callID:error:]
-[AVCTextStream configure:error:]
AVCTextStream configuration is invalid
-[AVCTextStream start]
AVCTextStream hasn't been configured
-[AVCTextStream stop]
-[AVCTextStream pause]
-[AVCTextStream resume]
-[AVCTextStream setDirection:]
-[AVCTextStream setRtcpEnabled:]
-[AVCTextStream setRtpTimeOutEnabled:]
-[AVCTextStream setRtcpTimeOutEnabled:]
-[AVCTextStream setRtpTimeOutIntervalSec:]
-[AVCTextStream setRtcpTimeOutIntervalSec:]
-[AVCTextStream setRtcpSendIntervalSec:]
T@"<AVCTextStreamDelegate>",N,V_delegate
VCRealTimeThread_Initialize
VCRealTimeThread_Finalize
VCRealTimeThread_Start
VCRealTimeThread_Stop
VCRealTimeThread_ChangeState
VCRealTimeThread_InternalStart
VCRealTimeThread_ThreadProc
VCRealTimeThread_CreateStopSocket
margin
Ti,N,Vmargin
minSamplesCount
Ti,N,VminSamplesCount
minMarginRequired
Ti,N,VminMarginRequired
percentage
Td,N,Vpercentage
durationThresholdUpward
Td,N,VdurationThresholdUpward
durationThresholdDownward
Td,N,VdurationThresholdDownward
-[VCRateControlBandwidthEstimator calculateBandwidthEstimationAtTime:mediaTimestamp:mediaDataSize:probingSequence:probingSequenceID:]
-[VCRateControlBandwidthEstimator calculateBandwidthEstimationForBandwidthSample:arrivalTime:]
-[VCRateControlBandwidthEstimator updateQualificationParameters]
estimatedBandwidth
Td,N,V_estimatedBandwidth
estimatedBandwidthUncapped
Td,N,V_estimatedBandwidthUncapped
-[VCRateControlBandwidthEstimatorMap bandwidthEstimatorWithID:isProbingSequence:isEndOfProbingSequence:]
-[VCRateControlBandwidthEstimatorMap deregisterBandwidthEstimatorWithID:]
minFrequency
maxFrequency
powerLevel
Tf,R,N,V_minFrequency
Tf,R,N,V_maxFrequency
Tf,R,N,V_powerLevel
hasConfidence
TI,N,V_confidence
hasHasSpaceAfter
TB,N,V_hasSpaceAfter
hasText
com.apple.AVConference.VCAudioClientManager.XPCCommandQueue
-[VCVideoTransmitterBase initWithConfig:]
-[VCVideoTransmitterBase enqueueVideoFrame:frameTime:droppedFrames:cameraStatusBits:]
-[VCVideoTransmitterBase startVideo]
-[VCVideoTransmitterBase stopVideo]
-[VCVideoTransmitterBase generateKeyFrame]
-[VCVideoTransmitterBase setTemporaryMaximumBitrate:]
-[VCVideoTransmitterBase setKeyFrameOnlyStreamID:]
-[VCVideoTransmitterBase setStreamIDs:numOfStreamIDs:repairedStreamIDs:numOfRepairedStreamIDs:]
-[VCVideoTransmitterBase collectChannelMetrics:interval:]
-[VCVideoTransmitterBase setFECRatio:]
-[VCVideoTransmitterBase handleActiveConnectionChange:]
lastFrameTime
T{?=qiIq},V_latestSampleBufferTimestamp
lastKeyFrameSentTime
Td,V_lastKeyFrameSentTime
lastRTPTimestamp
TI,V_timestamp
TI,V_lastSentAudioSampleTime
lastSentAudioHostTime
Td,V_lastSentAudioHostTime
isServerBasedBandwidthProbingEnabled
TB,N,V_isServerBasedBandwidthProbingEnabled
-[VCClientRelay setupVTPSocket]
-[VCClientRelay startRelay]
com.apple.videoconference.VCClientRelayVTPReceiveProc
com.apple.videoconference.vcclientrelay.idsreadqueue
-[VCClientRelay stopRelay]
-[VCClientRelay relayIDSPacket]
-[VCClientRelay relayVTPPacket]
stopVTPReceiveThread
TB,R,V_stopVTPReceiveThread
VCClientRelayVTPReceiveProc
vcEffectsXPCCMTime
VCAudioBufferList_Allocate
VCAudioBufferList_Destroy
VCAudioBufferList_ZeroMemory
VCAudioBufferList_ApplyGain
VCAudioBufferList_Mix
VCAudioBufferList_Append
VCAudioBufferList_Shift
VCAudioBufferList_Convert
VCAudioBufferList_GetSampleFormat
VCAudioBufferList_GetAudioBufferList
VCAudioBufferList_GetBufferAtIndex
VCAudioBufferList_Reset
VCAudioBufferList_Resample
VCAudioBufferList_InvalidateAveragePower
VCAudioBufferList_GetTimestamp
VCAudioBufferList_GetAudioTimestamp
VCAudioBufferList_GetHostTime
VCAudioBufferList_GetVoiceActivity
VCAudioBufferList_SetVoiceActivity
VCAudioBufferList_GetSampleCount
VCAudioBufferList_GetSampleCapacity
VCAudioBufferList_GetChannelCount
VCAudioBufferList_GetAveragePower
VCAudioBufferList_GetSerializedSize
VCAudioBufferList_CreateSampleBuffer
VCAudioBufferList_GetPriority
VCAudioBufferList_SetPriority
VCAudioBufferList_InvalidateNetworkTimestamp
VCAudioBufferList_SetNetworkTimestamp
VCAudioBufferList_GetNetworkTimestamp
VCAudioBufferList_SetVoiceProbability
VCAudioBufferListConverterCallback
Bandwidth Settings:
 %@(%@)=%u,
-[VCMediaNegotiationBlob(Utils) printBandwidthSettingsWithLogFile:]
Media Blob - %s
-[VCMediaNegotiationBlob(Utils) printCaptionsSettingsWithLogFile:]
Media Blob - Captions Settings: canDisplayCaptions=%d
Sender languages:
 %@,
Media Blob -     %s
Moments Settings:
-[VCMediaNegotiationBlob(Utils) printMomentsSettingsWithLogFile:]
-[VCMediaNegotiationBlob(Utils) printMultiwayAudioStreamsWithLogFile:]
Media Blob - Multiway Audio: count=%d
-[VCMediaNegotiationBlob(Utils) printMultiwayVideoStreamsWithLogFile:]
Media Blob - Multiway Video: count=%d
%@ (size=%u): UserAgent=%s
, basebandCodec=%@, basebandCodecSampleRate=%u
, allowDynamicMaxBitrate=%d
, allowsContentsChangeWithAspectPreservation=%d
-[VCMediaNegotiationBlob(Utils) printWithTitle:blobSize:logFile:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) initWithSSRC:allowRTCPFB:videoRuleCollections:featureStrings:isCellular16x9Capable:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) initWithScreenSSRC:allowRTCPFB:videoRuleCollections:featureStrings:isCellular16x9Capable:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) setVideoRuleCollections:featureStrings:isScreen:isCellular16x9Capable:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) checkAndInsertRuleWithWidth:height:framerate:payload:priority:negotiationBitfield:negotiationBit:rules:isCellular16x9Capable:]
-[VCMediaNegotiationBlobVideoSettings(VideoRules) newVideoRuleCollectionsForScreen:isCellular16x9Capable:]
, %@
-[VCMediaNegotiationBlobVideoSettings(VideoRules) printVideoWithLogFile:]
Media Blob - Video Settings: SSRC=%x allowRTCPFB=%u
Media Blob -     Payload=%u Format string=%s
Media Blob -     Payload=%u Parameter set: %s
Payload=%u %s %s
 %@@%@fps%s
 (preferred)
-[VCMediaNegotiationBlobVideoSettings(VideoRules) printScreenWithLogFile:]
Media Blob - Screen Settings: SSRC=%x allowRTCPFB=%u
Media Blob -     Format string=%s
Media Blob -     Payload=%u parameter set: %s
 %@@%@fps
Audio Settings: SSRC=%x sbr=%d audioSwitching=%d audioRecording=%d
 model=%u
-[VCMediaNegotiationBlobAudioSettings(AudioRules) printWithLogFile:]
Primary payloads:
Secondary payloads:
Multiway Audio Stream Settings: SSRC=%x maxNetworkBitrate=%d maxMediaBitrate=%d maxPacketsPerSecond=%f supportedPayloads=0x%08x streamID=%d qualityIndex=%d hasRepaired:%u repairedMaxNetworkBitrate=%d repairedStreamID=%d
-[VCMediaNegotiationBlobMultiwayAudioStream(MultiwayAudioStream) printWithLogFile:]
Multiway Video Stream Settings: SSRC=%x maxNetworkBitrate=%d maxMediaBitrate=%d maxPacketsPerSecond=%d payload=%d streamID=%d qualityIndex=%d supportedvideoFormats=%d frameRate=%d keyFrameInterval=%u metadata=%u hasRepaired:%u repairedMaxNetworkBitrate=%d repairedStreamID=%d
-[VCMediaNegotiationBlobMultiwayVideoStream(MultiwayVideoStream) printWithLogFile:]
isSubStream
invalid
en_us
zh_cn
supported
no_history
history_image
history_video
ImageDescription
video_INVALID
video_320x240_15
video_320x240_30
video_480x368_15
video_480x368_30
video_640x480_15
video_640x480_30
video_848x480_15
video_848x480_30
video_1024x768_15
video_1024x768_30
video_1280x720_15
video_1280x720_30
video_1024x768_60
video_1280x720_60
video_480x272_15
video_480x272_30
video_1280x720_15_dec
video_1280x720_30_dec
video_1280x720_60_dec
video_192x112_15
video_192x192_15
video_240x240_15
video_320x320_30
video_480x480_30
video_640x640_30
video_720x720_30
video_SUPPORTED
screen_INVALID
screen_1024x768_30
screen_1024x768_60
screen_1136x640_30
screen_1136x640_60
screen_1334x750_30
screen_1334x750_60
screen_1664x1248_30
screen_1664x1248_60
screen_1920x1080_30
screen_1920x1080_60
screen_2208x1242_30
screen_2208x1242_60
screen_2048x1536_30
screen_2048x1536_60
screen_1280x720_30
screen_1280x720_60
screen_1920x896_30
screen_1920x896_60
screen_SUPPORTED
G722
AACELD_16000
AACELD_22050
AACELD_24000
SPEEX_8K
SPEEX_16K
OPUS
AMR_8000
AMR_16000
EVS_32000
SUPPORTED
INVALID
VCVirtualTTYDevice
-[VCVirtualTTYDevice initWithMode:clientPid:]
-[VCVirtualTTYDevice start]
-[VCVirtualTTYDevice sendCharacter:]
-[VCVirtualTTYDevice sendText:]
-[VCVirtualTTYDevice setPause:]
-[VCVirtualTTYDevice pushAudioSamples:]
T@"NSObject<VCMediaStreamDelegate>",N,Vdelegate
transport
operation
formats
preferredFormat
Ti,N,V_transport
Ti,N,V_operation
TI,N,V_formats
hasPreferredFormat
TI,N,V_preferredFormat
NEGOTIATION_TRANSPORT_TYPE_WIFI
NEGOTIATION_TRANSPORT_TYPE_CELLULAR
NEGOTIATION_OPERATION_TYPE_ENCODE
NEGOTIATION_OPERATION_TYPE_DECODE
AUIOCreateHandle
AUIOCloseHandle
AUIOSuspend
AUIOResume
AUIOSetupFormats
AUIOReceiverIsReady
AUIOStart
com.apple.AVConference.auio
AUIOStart_block_invoke
AUIOStop
AUIOSetInputMeterEnabled
AUIOSetOutputMeterEnabled
AUIOSetMute
_AUIOMicProc
IOProc: shenanigans mic proc
_AUIOProcessMetaData
_AUIOLogAbnormalTimestamps
_AUIOSpkrProc
IOProc: shenanigans spkr proc
_AUIOSpkrProcGKS
_AUIOSetPropertiesAndInitialize
forceMute
AUIOSetupMic
MicOutFmt:
AUIOSetupSpeaker
SpkrIn:
_AUIOPostinitialization
_AUIOSendMicSamples
_AUIOSetRemoteCodecProperties
-[VCVideoRuleCollectionsScreen initWithHardwareSettings:]
-[VCVideoRuleCollectionsScreen initForMacDecodingOnly]
-[VCVideoRuleCollectionsScreen setupH264Rules]
cannot create socket
bind failed
connect failed
rtp socket creation failed
00110011
11100010
captureServer
T@"NSObject<VideoCaptureServer>",R
RateMonitorUpdateDataSamples
com.apple.avconference.writerqueue
-[VCMovieWriter setupContectRect:withCaptureHeight:]
-[VCMovieWriter appendAudioSampleBuffer:mediaType:]
VCMovieWriter
-[VCMovieWriter setupAssetWriterWithWidth:height:transactionID:]
com.apple.quicktime.content.identifier
mdta
FaceTime
-[VCMovieWriter setupInput:queue:dispatchGroup:lastPresentationTime:]_block_invoke
-[VCMovieWriter processSampleQueue:input:lastPresentationTime:]
com.apple.quicktime.still-image-time
-[VCMovieWriter appendMetaData]
-[VCMovieWriter startWritingAtTime:]
startRTPTimeStamp
endRTPTimeStamp
writerMode
outputURL
T@"NSURL",&,N
TI,V_startRTPTimeStamp
TI,V_endRTPTimeStamp
TC,R,V_writerMode
T@"NSURL",&,N,V_outputURL
-[VCAudioStreamTransport initWithDelegate:handle:callId:localSSRC:enableNetworkMonitor:]
[%f;%f;%f]
T{_VCRange=ff},N,V_frequencyRange
Tf,N,V_powerLevel
-[VCAudioPayload initWithConfig:]
-[VCAudioPayload createEncoderWithInputFormat:]
-[VCAudioPayload encodeAudio:numInputSamples:outputBytes:numOutputBytes:]
{ VCAudioPayload config=%@ currentBitrate=%d }
T@"VCAudioPayloadConfig",R,N,V_config
bitrate
TL,R,N,V_bitrate
VCVideoStream
-[VCVideoStream initVideoTransmitter]
-[VCVideoStream destroyVideoTransmitter]
-[VCVideoStream updateVideoReceiver:]
-[VCVideoStream destroyVideoReceiver]
-[VCVideoStream destroyVideoModules]
-[VCVideoStream setupCompoundStreamIDsWithStreamIDs:]
com.apple.AVConference.VCVideoStream.lastDecodedFrame
-[VCVideoStream setupVideoStream]
-[VCVideoStream dealloc]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCVideoStream.m
updateVideoConfig Called while video stream is not running
-[VCVideoStream updateVideoConfig:]
-[VCVideoStream updateSourcePlayoutTimestamp:]
-[VCVideoStream generateKeyFrame]
-[VCVideoStream sendLastRemoteVideoFrame:]
-[VCVideoStream cleanupBeforeReconfigure:]
-[VCVideoStream setTargetStreamID:]
-[VCVideoStream setShouldEnableFaceZoom:]
-[VCVideoStream onConfigureStreamWithConfiguration:error:]
-[VCVideoStream registerForVideoCapture]
-[VCVideoStream onStartWithCompletionHandler:]_block_invoke
-[VCVideoStream setStreamIDs:repairStreamIDs:]
VCVSStreamIDs
VCVSDirection
VCVSConfigTxMaxBitrate
VCVSConfigTxMinBitrate
VCVSConfigRxMaxBitrate
VCVSConfigRxMinBitrate
VCVSKeyFrameInterval
VCVSRemoteVInitialOrientation
VCVSConfigTxCodecType
VCVSConfigRxCodecType
VCVSConfigTxFramerate
VCVSConfigTxResolution
CallID
-[VCVideoStream collectVideoStreamStartMetrics:]
Time
VCVSUUID
%@:%d
VCVSLocalIPPort
VCVSRemoteIPPort
VCVSIDSDestination
VCVSStreamToken
VCVSRateAdaptationEnabled
VCVSRtcpSendInterval
VCVSRepairIDs
VCVSSubStreamIDs
VCVSActiveStreamID
-[VCVideoStream vcVideoReceiver:requestKeyFrameGenerationWithStreamID:]
-[VCVideoStream vcVideoReceiverRequestKeyFrame:rtcpPSFBType:]
-[VCVideoStream avConferencePreviewError:]
-[VCVideoStream thermalLevelDidChange:]
-[VCVideoStream converter:didConvertFrame:frameTime:droppedFrames:cameraStatusBits:]
sendingStreamID
T@"NSNumber",R,N,V_sendingStreamID
compoundStreamIDs
T@"NSArray",R,N,V_compoundStreamIDs
isCompoundStreamIDsIncreased
TB,R,N,V_isCompoundStreamIDsIncreased
didReceiveFirstFrame
TB,N,V_didReceiveFirstFrame
fecRatio
Td,N,V_fecRatio
{ VCAudioTier: payload=%d bundle=%d%s audioCodecBitrate=%d redNumPayloads=%d redMaxDelay20ms=%d networkBitrate=%d }
networkBitrate
TL,R,VnetworkBitrate
audioCodecBitrate
TL,R,VaudioCodecBitrate
TL,R,VpacketsPerBundle
redNumPayloads
TL,R,VredNumPayloads
redMaxDelay20ms
TL,R,VredMaxDelay20ms
payloadConfig
T@"VCAudioPayloadConfig",R,VpayloadConfig
-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke
conferenceWarmUpForCall
conferenceDeviceRole
-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_2
conferenceInitializeNewCall
conferenceUsingBlobFormat
conferenceGetIsUsingBlobFormat
conferenceSetIsUsingBlobFormat
conferencePeerReportingIdentifier
conferenceSessionID
conferenceSetReportingIdentifier
conferenceSetSessionID
conferenceCallEvent
conferenceAddGKSCallEvent
conferenceParticipantID
conferenceConnectionBlob
conferenceGetConnectionBlob
conferenceInviteData
conferenceNonCellularCandidateTimeout
conferenceGetInviteData
conferenceGetCallMetadata
conferencePeerCN
conferenceSetPeerCN
conferenceNetworkQuality
conferenceNetworkQualityForCall
conferenceRequiresWifi
conferenceGetRequiresWifi
conferenceSetRequiresWifi
conferenceOldCallID
conferenceIsCaller
conferenceCapabilities
conferenceDestination
FILEDESCRIPTOR
conferenceStartConnectionUsingInviteData
conferenceStopCallID
conferenceCancelCallID
conferenceRemoteCancelledCallID
conferenceCallReport
conferenceCallReportProtobuf
conferenceCallReportProtobufID
conferenceSetCallReport
conferenceActive
conferenceSetActive
conferenceRemoteIPChange
conferenceGetIsOutputMeteringEnabled
conferenceSetIsOutputMeteringEnabled
conferenceGetIsInputMeteringEnabled
conferenceSetIsInputMeteringEnabled
conferenceGetIsInputFrequencyMeteringEnabled
conferenceSetIsInputFrequencyMeteringEnabled
conferenceGetIsOutputFrequencyMeteringEnabled
conferenceSetIsOutputFrequencyMeteringEnabled
conferenceGetOutputMeterLevel
conferenceGetInputMeterLevel
conferenceMicrophoneMute
conferenceGetIsMicrophoneMuted
conferenceSetIsMicrophoneMuted
conferenceLocalFrameRate
conferenceGetLocalFrameRate
conferenceLocalBitRate
conferenceGetLocalBitRate
conferenceRemoteFrameRate
conferenceGetRemoteFrameRate
conferenceRemoteBitRate
conferenceGetRemoteBitRate
conferenceRemotePacketLossRate
conferenceGetLocalPacketLossRate
conferenceGetRemotePacketLossRate
conferenceRoundTripTime
conferenceGetRoundTripTime
conferenceCallStats
conferenceGetStatsForCallID
conferenceSpeakerEnabled
conferenceSetIsSpeakerEnabled
conferenceGetIsSpeakerEnabled
conferenceNATType
conferenceGetNATType
conferenceSetAudioSending
conferenceSetPauseAudio
conferenceSetPauseVideo
conferenceServerInfo
conferenceSetServerInfo
conferenceLocalFrameWidth
conferenceGetLocalFrameWidth
conferenceLocalFrameHeight
conferenceGetLocalFrameHeight
conferenceRemoteFrameWidth
conferenceGetRemoteFrameWidth
conferenceRemoteFrameHeight
conferenceGetRemoteFrameHeight
conferenceProcessRelayRequestResponse
conferenceProcessRelayRequestUpdate
-[VideoConferenceManager(VideoConference) registerBlocksForConference]_block_invoke_40
conferenceSendARPL
conferenceEncryptData
conferenceSendData
conferenceGetLastActiveCallID
conferenceSetLastActiveCallID
conferenceUpdateCapabilities
conferenceShouldSendBlackFrameState
conferenceShouldSendBlackFrame
conferenceState
conferenceSetState
conferenceVisualRectangle
conferenceSetVisualRectangle
conferenceProtocolVersion
conferenceSetPeerProtocolVersion
-[VCSessionMessaging dealloc]
-[VCSessionMessaging sendMessage:withTopic:]
-[VCSessionMessaging sendMessage:withTopic:participantID:]
%@=%@:
%@%@=%@:
%@=%@?
-[VCSessionMessaging controlChannel:receivedMessage:transactionID:fromParticipant:]
-[VCSessionMessaging controlChannel:sendReliableMessage:didSucceed:toParticipant:]
-[VCSessionMessaging controlChannel:clearTransactionCacheForParticipant:]
T@"NSString",C,N,V_ip
port
TS,N,V_port
ipVersion
TS,N,V_ipVersion
interfaceName
T@"NSString",C,N,V_interfaceName
sessionId
T@"NSString",&,N,V_sessionId
participantId
T@"NSString",&,N,V_participantId
idsStreamID
TS,N,V_idsStreamID
maxIDSStreamIdCount
TI,N,V_maxIDSStreamIdCount
TS,N,V_repairedStreamID
TB,N,V_hasRepairedStreamID
startOnDemand
TB,N,V_startOnDemand
streamIds
%@ (%p)
vcMediaStreamDestIp
vcMediaStreamDestPort
vcMediaStreamDestIsIPv6
vcMediaStreamRemoteSSRC
vcMediaStreamSourcePort
vcMediaStreamSourceIsIPv6
vcMediaStreamCName
vcMediaStreamRecommendedMTU
vcMediaStreamRateAdaptationEnabled
vcMediaStreamDecryptionTimeoutEnabled
vcMediaStreamDecryptionTimeoutInterval
vcMediaStreamSRTPCipherSuite
vcMediaStreamRTCPRemotePort
vcMediaStreamSRTCPCipherSuite
vcMediaStreamSRTPSendMasterKey
vcMediaStreamSRTPReceiveMasterKey
Ti,N,V_direction
localAddress
T@"VCNetworkAddress",&,N,V_localAddress
cName
T@"NSString",C,N,V_cName
remoteAddress
T@"VCNetworkAddress",&,N,V_remoteAddress
TL,N,V_remoteSSRC
sendMasterKey
T@"NSData",&,N,V_sendMasterKey
receiveMasterKey
T@"NSData",&,N,V_receiveMasterKey
txPayloadMap
T@"NSDictionary",R,N,V_txPayloadMap
rxPayloadMap
T@"NSDictionary",R,N,V_rxPayloadMap
SRTPCipherSuite
Ti,N,V_SRTPCipherSuite
TB,N,GisRTPTimeOutEnabled,V_rtpTimeOutEnabled
rtpTimeOutInterval
Td,N,V_rtpTimeOutInterval
decryptionTimeOutEnabled
TB,N,GisDecryptionTimeOutEnabled,V_decryptionTimeOutEnabled
decryptionTimeOutInterval
Td,N,V_decryptionTimeOutInterval
cellularUniqueTag
TI,N,V_cellularUniqueTag
SRTCPCipherSuite
Ti,N,V_SRTCPCipherSuite
TB,N,GisRTCPEnabled,V_rtcpEnabled
TB,N,GisRTCPTimeOutEnabled,V_rtcpTimeOutEnabled
rtcpTimeOutInterval
Td,N,V_rtcpTimeOutInterval
Td,N,V_rtcpSendInterval
rtcpRemotePort
TS,N,V_rtcpRemotePort
primaryTxCodecType
rateAdaptationEnabled
TB,N,GisRateAdaptationEnabled,V_rateAdaptationEnabled
multiwayConfig
T@"VCMediaStreamMultiwayConfig",&,N,V_multiwayConfig
%s:%d/%d,%d/%d;%s;
%s:%d/%d,%d/%d;%s:%d/%d,%d/%d;
-[SIPClientDataDictionary dealloc]
-[VCSessionMessageTopic dealloc]
com.apple.VideoConference.VCSessionMessageTopic.out
-[VCSessionMessageTopic sendMessage:participantID:withSequence:numRetries:]
-[VCSessionMessageTopic sendMessage:participantID:withSequence:numRetries:]_block_invoke
-[VCSessionMessageTopic passMessage:sequence:fromParticipant:]
com.apple.VideoConference.VCSessionMessageTopic.in
-[VCSessionMessageTopic clearTransactionCacheForParticipant:]
isSendingEnabled
TB,N,SsetIsSendingEnabled:,VisSendingEnabled
topicKey
T@"NSString",R,VtopicKey
VCMemoryPool_Alloc
VCMemoryPool_Free
-[VCRedundancyControlAlgorithmAudioLegacy updateRedundancyStrategyWithNetworkStatistics:]
-[VCRedundancyControlAlgorithmAudioLegacy computeRedundancyInfo]
channels
T@"NSArray",R,N,V_channels
sourceType
Ti,R,N,V_sourceType
-[AVCAudioPowerSpectrum(VCPrivateAccess) applyChannelBins:channelID:]
stream
T@"VCMediaStream",&,N,V_stream
streamConfigs
T@"NSArray",R,N,V_streamConfigs
-[VCCallInfo init]
Viceroy 1.4.0
Viceroy 1.4.1
Viceroy 1.4.2
Viceroy 1.4
Viceroy 1.5
Viceroy 1.6
Viceroy 1.7
auNumber
TL,N,VauNumber
TL,N,VmaxBandwidth
cellBandwidth
TL,N,VcellBandwidth
T@"NSString",C,N,VparticipantID
isHDVideoSupported
isPreLionOS
TB,N,VisPreLionOS
TB,N,VisVideoQualityDegraded
TB,N,VvideoIsPaused
sdpString
T@"NSString",&,N,VsdpString
T@"SDPMini",&,N,Vsdp
requiresImplicitFeatureString
isIOS
TB,R,N,VisIOS
usesInitialFECImplementation
TB,R,N,VusesInitialFECImplementation
TB,N,VsupportsDynamicMaxBitrate
supportsSKEOptimization
TB,N,VsupportsSKEOptimization
supportsSpecialAACBundle
TB,R,N,VsupportsSpecialAACBundle
visibleRectCropping
TL,N,VvisibleRectCropping
useNewPLCalc
TB,R,N,VuseNewPLCalc
u8Version
TC,N,Vu8Version
supportsDynamicContentsRectWithAspectPreservation
frameworkVersion
T@"NSString",C,N,V_frameworkVersion
OSVersion
T@"NSString",C,N,V_osVersion
deviceType
T@"NSString",C,N,V_deviceType
started
TB,N,GisStarted,V_isStarted
com.apple.AVConference.AVCAudioPowerSpectrumMeter.notificationQueue
-[AVCAudioPowerSpectrumMeter initWithConfig:delegate:queue:]
-[AVCAudioPowerSpectrumMeter dealloc]
-[AVCAudioPowerSpectrumMeter registerPowerSpectrumForStreamToken:]
-[AVCAudioPowerSpectrumMeter unregisterPowerSpectrumForStreamToken:]
-[AVCAudioPowerSpectrumMeter registerBlocksForNotifications]_block_invoke
vcAudioPowerSpectrumServerDidDisconnect
T@"<AVCAudioPowerSpectrumMeterDelegate>",R,N,V_delegate
sessionToken
TI,R,N,V_sessionToken
delegateQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_delegateQueue
-[VCServerBag waitForBagLoad]
-[VCServerBag waitForBagLoad]_block_invoke_2
v8@?0@"NSNotification"4
com.apple.facetime
+[VCServerBag checkKeysAgainstHardcodedPrefs:]
+[VCServerBag verifyRequiredKeys:withError:]
No store bag is present so we failed the call.
Missing required store bag keys.
-[VCRedundancyControlAlgorithmAudio updateRedundancyStrategyWithNetworkStatistics:]
-[VCRedundancyControlAlgorithmAudio updateRedundancyPercentageWithPLRThresholds:]
-[VCIDRSchedulerPeriodGroup computeStreamsIDRPosition]
IDR Period Group: BasePeriodCount=%d frames:%d streams:%@
basePeriodCount
TI,R,N,V_basePeriodCount
{ %s: audioPayloads:%@ chosenAudioPayload:%@ chosenDTXPayload:%@ chosenRedPayloadType:%d             
 packetsPerBundle:%d useRateControl:%d bundlingScheme:%d allowAudioSwitching:%d supportsAdaptation:%d operatingMode:%d isRedEnabled:%d transmitROC:%d ignoreSilence:%d }
afrcHandle
T^{tagHANDLE=i},N,V_afrcHandle
T^{tagHANDLE=i},N,V_mediaQueue
rtpVideo
T^{tagHANDLE=i},N,V_rtpVideo
controlInfoGenerator
T^v,N,V_controlInfoGenerator
T@"NSMutableArray",&,N,V_audioPayloads
chosenAudioPayload
T@"VCAudioPayload",&,N,V_chosenAudioPayload
chosenDTXPayload
T@"VCAudioPayload",&,N,V_chosenDTXPayload
TC,N,V_packetsPerBundle
TB,N,V_useRateControl
isUseCaseWatchContinuity
TB,N,V_isUseCaseWatchContinuity
supportsAdaptation
TB,N,V_supportsAdaptation
needsPacketThread
TB,N,V_needsPacketThread
chosenRedPayloadType
Ti,N,V_chosenRedPayloadType
redEnabled
TB,N,GisRedEnabled,V_redEnabled
includeRedSequenceOffset
TB,N,V_includeRedSequenceOffset
TI,N,V_redNumPayloads
TI,N,V_redMaxDelay20ms
transmitROC
TB,N,V_transmitROC
T@"VCTransportSession",&,N,V_transportSession
inputFormat
T{AudioStreamBasicDescription=dIIIIIIII},N,V_inputFormat
ignoreSilence
TB,N,V_ignoreSilence
streamIDs
T@"NSArray",&,N,V_streamIDs
tierNetworkBitrate
TI,N,V_tierNetworkBitrate
supportedNumRedundantPayload
T@"NSArray",&,N,V_supportedNumRedundantPayload
TB,N,V_sendActiveVoiceOnly
-[AVCMomentsRequest initWithMediaType:initiatorID:transactionID:]
%@: transactionID[%@] mediaType[%hhu] initiatorID[%@]
transactionID is nil
initiatorID is nil
media type is invalid
mode is invalid
AVCMomentsRequest
-[AVCMomentsRequest validateWithError:]
T@"NSObject<AVCMomentsRequestDelegate>",N,V_delegate
TC,N,V_mode
transactionID
T@"NSString",R,N,V_transactionID
mediaType
TC,R,N,V_mediaType
initiatorID
T@"NSString",R,N,V_initiatorID
-[VCAudioStreamConfig initWithClientDictionary:]
vcMediaStreamAudioStreamMode
vcMediaStreamPtime
vcMediaStreamMaxPtime
vcMediaStreamLatencySensitiveMode
vcMediaStreamEnableMaxBitrateOnNoChangeCMR
vcMediaStreamCodecType
-[VCAudioStreamConfig setupCodecWithClientDictionary:]
vcMediaStreamEVSChannelAwareOffset
vcMediaStreamEVSHeaderFullOnly
vcMediaStreamAMRIsOctetAligned
vcMediaStreamAMRDTXEnabled
vcMediaStreamCodecRateModePreferred
vcMediaStreamCodecRateModeMask
vcMediaStreamNumRedundantPayloads
vcMediaStreamTxRedPayloadType
vcMediaStreamRxRedPayloadType
vcMediaStreamCNEnabled
-[VCAudioStreamConfig setupCNCodecWithClientDictionary:]
vcMediaStreamCNPayloadType
-[VCAudioStreamConfig setupDTMFCodecWithClientDictionary:]
vcMediaStreamDTMFPayloadType
audioStreamMode
Ti,N,V_audioStreamMode
ptime
TI,N,V_ptime
maxPtime
TI,N,V_maxPtime
latencySensitiveMode
TB,N,GisLatencySensitiveMode,V_latencySensitiveMode
codecConfigurations
T@"NSDictionary",R,N,V_codecConfigurations
TB,R,N,GisRedEnabled,V_redEnabled
numRedundantPayloads
TC,N,V_numRedundantPayloads
enableMaxBitrateOnNoChangeCMR
TB,N,V_enableMaxBitrateOnNoChangeCMR
forceEVSWideBand
TB,N,V_forceEVSWideBand
VCNAT64ResolverCleanup
VCNAT64ResolverRegisterForPrefixUpdate
VCNAT64ResolverDeregisterAll
VCNAT64ResolverGetPrefix
VCNAT64ResolverGetSharedInstance
com.apple.VTP.DNSCallbackQueue
com.apple.VTP.DNSRetryQueue
VCNAT64ResolveNAT64Prefix
VCNAT64ResolveNAT64Prefix_block_invoke
VCNAT64ResolveNAT64Prefix_block_invoke_2
v12@?0i4^{?=i[12C]}8
VCNAT64ResolverDeregisterFromInterface
VCSDInfoConstructWithSocket
VCSDInfoIsPacketFromKnownRemote
VCSourceDestinationInfo IPPort mode with IP port: %s-%s isRelay %d, relayChannelNumber %d
VCSourceDestinationInfo BoundSocket mode with socket: %d destination: %s
VCSourceDestinationInfo ConnectedSocket mode with socket: %d
VCSourceDestinationInfo IDSLink mode with token: %d linkID: %d
Unrecogized VCSourceDestinationInfoMode %d
-[VCCaptionsReceiver processCaptionsData:]
T@"<VCCaptionsReceiverDelegate>",R,V_delegate
currentTranscription
T@"VCCaptionsTranscription",&,N,V_currentTranscription
-[VCRedundancyControllerAudio initWithDelegate:statisticsCollector:mode:]
-[VCRedundancyControllerAudio reportRedundancyPercentage:redundancyInterval:]
com.apple.avconference.remotevideo
-[AVCRemoteVideoClient initWithStreamToken:delegate:]
-[AVCRemoteVideoClient dealloc]
-[AVCRemoteVideoClient setVideoLayer:forMode:]
-[AVCRemoteVideoClient slotForMode:]
AVCRemoteVideoSubLayer%p(%d)
-[AVCRemoteVideoClient subLayerRefForMode:]
AVCRemoteVideoInfoLayer%p(%d)
L:%@ -- R:%@
-[AVCRemoteVideoClient updateConnectionInfoWithLocalInterfaceType:remoteInterfaceType:]
AVCRemoteVideoInfoLayer
-[AVCRemoteVideoClient drawText:inSubLayer:]
T@"VideoAttributes",&,N,V_remoteVideoAttributes
TB,N,V_hasReceivedFirstFrame
TB,N,V_isVideoPaused
TB,N,V_isMediaStalled
TB,N,V_isVideoDegraded
TB,N,V_isVideoSuspended
hasReceivedLastFrame
TB,N,V_hasReceivedLastFrame
shouldDisplayVideoInfoLayer
TB,N,V_shouldDisplayVideoInfoLayer
connectionTypeString
T@"NSString",C,N,V_connectionTypeString
T@"<AVCRemoteVideoClientDelegate>",R,N,V_delegate
Bitrate rule bitrate %u connection type %d limit %@
TI,V_bitrate
connectionType
Ti,V_connectionType
limitingRule
T@"VCVideoRule",R,N,VlimitingRule
-[VCBitrateArbiter initWithDeviceRole:callLogFile:]
-[VCBitrateArbiter maxAllowedBitrateForConnection:]
-[VCBitrateArbiter maxAllowedScreenShareBitrateForConnection:]
-[VCBitrateArbiter maxAllowedAudioOnlyBitrateForConnection:]
-[VCBitrateArbiter maxAllowedBitrateRuleForConnection:]
maxAllowedBitrate
TI,R,V_maxAllowedBitrate
maxAllowedBitrate2G
TI,R,V_maxAllowedBitrate2G
maxAllowedBitrate3G
TI,R,V_maxAllowedBitrate3G
maxAllowedBitrateLTE
TI,R,V_maxAllowedBitrateLTE
maxAllowedBitrateWifi
TI,R,V_maxAllowedBitrateWifi
-[AVCPacketRelayDriver startMonitoringFileDescriptor:forConnection:]
-[AVCPacketRelayDriver stopMonitoringFileDescriptor:]
-[AVCPacketRelayDriver init]
-[AVCPacketRelayDriver dealloc]
1.2.11
ZLibAndGZipCompress
ZLibAndGZipDecompress
-[VCStatisticsHistory getPacketLossRateAtTime:inMostRecentDuration:]
-[VCStatisticsHistory getSendingBitrateAtTime:inMostRecentDuration:]
-[VCStatisticsHistory getReceivingBitrateAtTime:inMostRecentDuration:]
-[VCStatisticsHistory getServerStatsBitrateAtTime:inMostRecentDuration:]
-[VCStatisticsHistory getStatsHistoryElementIndex:time:inMostRecentDuration:]
-[VCStatisticsHistory handleWrappedAroundByteCountForStats:]
-[VCStatisticsHistory resetHistory]
createDirectory
openLogDump
%02d%02d%02d.%06d
%s%c%s
Library/Caches/com.apple.VideoConference
/logs/
%04d%02d%02d-%02d%02d%02d-%@-%@%@
%@-%@%@
+[LogDumpUtility filesSortedByTimestamp:]
+[LogDumpUtility removeFilesInDirectory:olderThan:]
(.*)(\d{10})(-.*)$
T@,C,N,V_reportingHierarchyToken
-[VCVideoFrameBufferPool addFrame:time:]
-[VCVideoFrameBufferPool releaseFrameWithTime:]
VCAudioReceiver_CreateReceiver
v12@?0^v4^{_RTPPacket=^{tagHANDLE}i(?={_RTPMediaPacket=iiSId*II[256C]IB{tagVPKTFLAG=iIIBBBBii{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=i{tagIPPORT=i[16c](?=I[16C])S}})^{tagVCSourceDestinationInfo}}iiiiiB{?=[12S]CBSCBBQBBBS{?=SSSSS}B}}I[50C]}{?=iSd(?={?=SCSCcIIII}{?=SSS[6{?=CS[500S]}]}{?=SS})})}8
com.apple.avconference.audioreceiver.rtprecvproc
session_%s-participant_%s
VCAudioReceiver_Finalize
VCAudioReceiver_Start
VCAudioReceiver_Stop
VCAudioReceiver_GetLatestAudioTimestamp
VCAudioReceiver_SetupDecoders
VCAudioReceiver_RegisterCodecRateModeRequestCallback
VCAudioReceiver_RegisterActiveAudioStreamRequestCallback
VCAudioReceiver_UpdateCellTech
VCAudioReceiver_GetPercentPacketsLateAndMissing
VCAudioReceiver_PullAudioSamples
VCAudioReceiver_CollectChannelMetrics
VCAudioReceiver_DiscardQueueExcess
_VCAudioReceiver_SetActiveStream
VCAudioReceiver_CalculateBurstLoss
VCAudioReceiver_ReportAWDMetrics
VCAudioReceiver_GetJitterBufferMetrics
VCAudioReceiver_SendStartCallReport
VCAudioReceiver_SendEndCallReport
VCAudioReceiver_SetMagicCookieForPayload
VCAudioReceiver_SetJitterBufferMode
VCAudioReceiver_SetTargetStreamID
_VCAudioReceiver_Lock
_VCAudioReceiver_Cleanup
_VCAudioReceiver_UnregisterReportingTask
_VCAudioReceiver_RegisterReportingTask_block_invoke
AJQS
XJoW
FrameErasureRate
RedErasureCompensationRate
RedRxPlayedCount
RedRxPlayedBytes
FramesPlayedCount
RedRxCount
RedRxBytes
RedRxDiscardCount
RedRxDiscardBytes
ARxR
forceNOLOG
_VCAudioReceiver_ComputeExtendedTimestamp
_VCAudioReceiver_RTPPacketHandler
_VCAudioReceiver_HandleRTPPacket
_VCAudioReceiver_HandleRTPMediaPacket
_VCAudioReceiver_ShouldProcessAudioPacket
VCASActiveStreamID
_VCAudioReceiver_ValidateAndEnqueuePackets
_VCAudioReceiver_EnqueuePacket
_VCAudioReceiver_ParsePacket
_VCAudioReceiver_UpdatePacketHistory
_VCAudioReceiver_HandleRTPBasebandNotificationPacket
_VCAudioReceiver_ReceiveProc
_VCAudioReceiver_ProcessRTPPacket
_VCAudioReceiver_ProcessRTCPPacket
RTPPacketLossRate
JitterBufferUnderflowRate
_VCAudioReceiver_CollectAWDMetrics
JitterBufferResidencyTime
JitterPreloadQueue_AudioFrameAlloc
JitterPreloadQueue_AudioPacketAlloc
JitterPreloadQueue_Create
JitterPreloadQueue_Destroy
-[VCAudioTransmitter initWithConfig:]
-[VCAudioTransmitter handleCodecRateModeChange:withBitrate:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCAudioTransmitter.m
Couldn't setup audio selector
Bad audio payload?
Bad remote payload?
Couldn't allocate memory for audio
Malloc?
ATxR
AFEC
DtxFramesTotal
DtxFrameSilent
DtxCompRatio
TxBytesActual
TxBytesEstimate
-[VCAudioTransmitter allocateLastInputSampleBuffer:]
-[VCAudioTransmitter pushAudioSamples:]
-[VCAudioTransmitter chooseAudioNetworkBitrate]
-[VCAudioTransmitter bundleAndSendSamples:numEncodedBytes:withPayload:timeStamp:bufferedSamples:hasNewSamples:voiceActivity:priority:]
voicedFrameCount
silenceFrameCount
-[VCAudioTransmitter setupAudioTierPicker]
-[VCAudioTransmitter updateAudioTxBitrate]
-[VCAudioTransmitter useAudioPayload:withBitrate:]
rtpsend
-[VCAudioTransmitter generateControlInfo]
-[VCAudioTransmitter setRedNumPayloads:withMaxDelay:]
-[VCAudioTransmitter redundancyController:redundancyPercentageDidChange:]
currentAudioPayloadConfig
T@"VCAudioPayloadConfig",R,N
audioBundler
T@"VCPacketBundler",R,N,V_audioBundler
currentAudioTier
T@"VCAudioTier",R,N,V_currentAudioTier
audioTxBitrate
Ti,R,N,V_audioTxBitrate
actualAudioSendingBitrate
Ti,R,N,V_actualAudioSendingBitrate
TI,R,N,V_lastSentAudioSampleTime
sentAudioBytes
TC,V_inputMeter
T@"<VCAudioTransmitterDelegate>"
isRedEnabled
TB,R,N,V_isRedEnabled
TB,R,N,V_ignoreSilence
TI,N,V_rateChangeCounter
currentChannelMetrics
T{?=IId},N,V_currentChannelMetrics
isAudioStalled
TB,N,V_isAudioStalled
qualityIndicator
Ti,N,V_qualityIndicator
buffer
remove
ARPLSessionCreate
ARPLSend_internal
reliable
non-reliable
ARPL_Sendto
ARPL_Recvfrom
encrypted
non-encrypted
ARPLSessionRelease
checkSendingSet
clientVersion
osVersion
TI,N,V_callID
TI,N,V_clientVersion
T@"NSString",&,N,V_deviceType
T@"NSString",&,N,V_frameworkVersion
T@"NSString",&,N,V_osVersion
T@"<AVTelephonyInterfaceDelegate>"
AVCVirtualTTYDevice
-[AVCVirtualTTYDevice initWithMode:error:streamToken:]
-[AVCVirtualTTYDevice sendCharacter:]
-[AVCVirtualTTYDevice sendText:]
-[AVCVirtualTTYDevice registerBlocksForDelegateNotifications]_block_invoke
T@"<AVCVirtualTTYDeviceDelegate>",N,V_delegate
vcAudioPayloadConfigKeyPayloadType
vcAudioPayloadConfigKeyInputSampleRate
vcAudioPayloadConfigKeyBlockSize
vcPayloadConfigKeyInternalBundleFactor
vcPayloadConfigKeyDTXEnabled
vcPayloadConfigKeyOctetAligned
vcPayloadConfigKeyUseSBR
vcPayloadConfigKeySampleRate
vcPayloadConfigKeyEVSSIDPeriod
vcPayloadConfigKeyEVSChannelAwareOffset
vcPayloadConfigKeyEVSHeaderFullOnly
vcPayloadConfigKeyCodecBitrates
vcPayloadConfigKeyPreferredBitrate
vcAudioPayloadConfigKeyPayloadTypeOverride
-[VCAudioPayloadConfig configure:]
forceAACELDBitrate
-[VCAudioPayloadConfig aacBitrate]
%@ payload=%d blockSize=%d codecSampleRate=%d codecSamplesPerFrame=%d inputSampleRate=%d inputSamplesPerFrame=%d isDTXEnabled=%d octedAligned=%d useSBR=%d, internalBundleFactor=%d initialBitrate=%d SIDPeriod=%d channelAwareOffset=%d headerFullOnly=%d
%@ payload=%d blockSize=%d codecSampleRate=%d codecSamplesPerFrame=%d inputSampleRate=%d inputSamplesPerFrame=%d isDTXEnabled=%d octedAligned=%d useSBR=%d, internalBundleFactor=%d initialBitrate=%d
flags
TL,R,N,V_inputSamplesPerFrame
codecSampleRate
TL,R,N,V_codecSampleRate
Ti,R,N,V_format
internalBundleFactor
TL,R,N,V_internalBundleFactor
payloadOctetAligned
TB,R,N,V_payloadOctetAligned
forcingBitrate
TB,R,N,V_forcingBitrate
supportedBitrates
T@"NSArray",R,N,V_supportedBitrates
inputSampleRate
TL,R,N,V_inputSampleRate
isDTXEnabled
TB,R,N,V_isDTXEnabled
evsSIDPeriod
TL,R,N,V_evsSIDPeriod
blockSize
TL,R,N,V_blockSize
bundleHeaderBytes
TL,R,N,V_bundleHeaderBytes
TS,R,N,V_evsChannelAwareOffset
TB,R,N,V_evsHeaderFullOnly
JLagProcessor_Initialize
JLagProcessor_NewStream
JLagProcessor_Process
JLagProcessor_ComputeLag
Moved reference to Secondary 
JLagProcessor_RecordOWRD
JLagProcessor_DetectSpike
JTargetJBEstimator_AddLagToHistory
Leaving SPIKE, SpikeSize = %f 
Entering %s SPIKE, earliest Lag = %f
SLOPE
JUMP
transportStreamStreamTypeKey
-[VCTransportStream initWithTransportSessionID:options:]
-[VCTransportStream dealloc]
-[VCTransportStream VCTransportStreamSendPacket:]
-[VCTransportStream receivePacket:]
-[VCSessionBandwidthAllocationTable generateAudioOnlyBandwidthAllocationTable]
-[VCSessionBandwidthAllocationTable generateAudioVideoBandwidthAllocationTable]
-[VCSessionBandwidthAllocationTable generateAudioOnlyBandwidthAllocationTableWithRedundancy]
-[VCSessionBandwidthAllocationTable generateAudioVideoBandwidthAllocationTableWithRedundancy]
-[VCSessionBandwidthAllocationTable generateAudioOnlyBitrateToStreamIDsTable]
-[VCSessionBandwidthAllocationTable generateAudioVideoBitrateToStreamIDsTable]
-[VCSessionBandwidthAllocationTable generateVideoOnlyBitrateToStreamIDsTable]
-[VCSessionBandwidthAllocationTable printTable:]
aggregatedAudioOnlyTable
T@"NSDictionary",R,N,V_aggregatedAudioOnlyTable
aggregatedAudioVideoTable
T@"NSDictionary",R,N,V_aggregatedAudioVideoTable
aggregatedAudioOnlyTableWithRedundancy
T@"NSDictionary",R,N,V_aggregatedAudioOnlyTableWithRedundancy
aggregatedAudioVideoTableWithRedundancy
T@"NSDictionary",R,N,V_aggregatedAudioVideoTableWithRedundancy
audioOnlyBitrateToStreamIDsTable
T@"NSDictionary",R,N,V_audioOnlyBitrateToStreamIDsTable
audioVideoBitrateToStreamIDsTable
T@"NSDictionary",R,N,V_audioVideoBitrateToStreamIDsTable
videoOnlyBitrateToStreamIDsTable
T@"NSDictionary",R,N,V_videoOnlyBitrateToStreamIDsTable
audioEntries
videoEntries
com.apple.avconference.VCEffectsManager.xpc.commands
effectsTimeoutThreshold
-[VCEffectsManager updateThermalLevel:]_block_invoke
-[VCEffectsManager capturedPixelBuffer:depthDataPixelBuffer:time:imageData:]
-[VCEffectsManager checkEffectsHealth]
T@"<VCEffectsManagerDelegate>",N,V_delegate
effectsArray
T@"NSMutableArray",&,V_effectsArray
None
WarpSpeech
WarpSilent
SkipSpeech
SkipSilence
DupSpeech
DupSilence
DupDTX
Copy
Discard
DiscardSpike
enableWSOLA
JPlayback_Initialize
printMissingAudioPackets
JPlayback_UpdateLosses
JPlayback_GetSilenceSamples
JPlayback_GetSamples
SpkrProc: Skip
SpkrProc: Dup
SpkrProc: Copy
SpkrProc: GetSamplesLoop, iterations %d
JPlayback_DiscardSamples
JPlayback_DecodeSamples
SpkrProc: SoundDec_Decode
SpkrProc: WsolaTail
JPlayback_WsolaAdapt
SpkrProc: Warping
JPlayback_DecodeWarpWsola
PacketThread_Create
com.apple.avconference.packetThread.%s
PacketThread_Send
PacketThread_Destroy
PacketThread_AllocatePacketBuffer
SendPacketsProc
audioFormat
T{AudioStreamBasicDescription=dIIIIIIII},N,V_audioFormat
blockSizeSamples
TI,N,V_blockSizeSamples
canProcessAudio
TB,N,V_canProcessAudio
clientCaptureBlock
T@?,C,N,V_clientCaptureBlock
clientRenderBlock
T@?,C,N,V_clientRenderBlock
-[VCVoIPRelay initWithCaptureBlock:renderBlock:]
-[VCVoIPRelay dealloc]
-[VCVoIPRelay startWithCompletionHandler:]
-[VCVoIPRelay startWithCompletionHandler:]_block_invoke
-[VCVoIPRelay stopWithCompletionHandler:]
-[VCVoIPRelay stopWithCompletionHandler:]_block_invoke
T{AudioStreamBasicDescription=dIIIIIIII},R,N
+[VCDefaults getDoubleValueForKey:defaultValue:]
+[VCDefaults integerValueForKey:defaultValue:]
+[VCDefaults booleanValueForKey:defaultValue:]
forceScreenHWI
-[VCDefaults forceScreenHWI]
forceDisableThermal
-[VCDefaults forceDisableThermal]
ARCaptureEnabled
-[VCDefaults forceARCapture]
forceMirroredCapture
forceEnablePearlCamera
forceThermalLevelFramerate
enableBitstreamCapture
-[VCDefaults enableBitstreamCapture]
enable2vuyCapture
-[VCDefaults enable2vuyCapture]
enableVPBLogging
-[VCDefaults enableVPBLogging]
enableRecvBitstreamDump
-[VCDefaults enableRecvBitstreamDump]
enableTxSourceYuvDump
-[VCDefaults enableTxSourceYuvDump]
enableTxBitstreamDump
-[VCDefaults enableTxBitstreamDump]
enablePacketLogging
-[VCDefaults enablePacketLogging]
extraPL
-[VCDefaults extraPayloads]
encodingScore
-[VCDefaults encodingScore]
canDecodeHD
-[VCDefaults canDecodeHD]
-[VCDefaults disableVAD]
bundleAudio
-[VCDefaults bundleAudio]
AllowAudioRecording
-[VCDefaults audioRecordingEnabled]
forceAudioPayload
-[VCDefaults forceAudioPayload]
forceAudioBitrate
-[VCDefaults forceAudioBitrate]
forceAudioPacketsPerBundle
-[VCDefaults forceAudioPacketsPerBundle]
forceHWAudioSampleRate
-[VCDefaults forceAudioHardwareSampleRate]
audioPowerThreshold
-[VCDefaults forceAudioPowerThreshold]
audioPowerTimeInterval
-[VCDefaults forceAudioPowerTimeInterval]
forceUseFloat
-[VCDefaults forceUseFloat]
audioChannelCount
-[VCDefaults forceAudioChannelCount]
disableAudioPowerSpectrumRegister
-[VCDefaults forceDisableAudioPowerSpectrumRegister]
disableRed
-[VCDefaults disableRed]
forceRedNumPayloads
-[VCDefaults forceRedNumPayloads]
forceRedMaxDelay
-[VCDefaults forceRedMaxDelay]
-[VCDefaults useSBR]
forceAACELDFrames
-[VCDefaults aacBlockSize]
forceVideoStreamResolution
-[VCDefaults forceVideoStreamResolution]
forceVideoStreamTxMaxBitrate
-[VCDefaults forceVideoStreamTxMaxBitrate]
forceVideoStreamTxMinBitrate
-[VCDefaults forceVideoStreamTxMinBitrate]
forceVideoStreamFramerate
-[VCDefaults forceVideoStreamFramerate]
forceVideoStreamKeyFrameInterval
-[VCDefaults forceVideoStreamKeyFrameInterval]
forceVideoStreamRxMaxBitrate
-[VCDefaults forceVideoStreamRxMaxBitrate]
forceVideoStreamRxMinBitrate
-[VCDefaults forceVideoStreamRxMinBitrate]
videoStreamRateControlDumpEnabled
-[VCDefaults videoStreamRateControlDumpEnabled]
videoStreamRateControlAlgorithm
-[VCDefaults videoStreamRateControlAlgorithm]
cannedReplay
forceDisableMediaQueue
-[VCDefaults forceDisableMediaQueue]
enableMediaQueueDump
-[VCDefaults mediaQueueDumpEnabled]
-[VCDefaults rateControlDumpEnabled]
-[VCDefaults rateControlLogEnabled]
-[VCDefaults rateControlForceTxCap]
forcedRxCap
-[VCDefaults rateControlForceTxRate]
forcedRxRate
-[VCDefaults rateControlForceRxRate]
forceVideoRedundancyPercentage
max2GRate
-[VCDefaults max2GRate]
forceIPv6
-[VCDefaults forceIPv6]
enableiRATSuggestion
-[VCDefaults enableiRATSuggestion]
localWRMLinkType
pauseHeartbeatInterval
-[VCDefaults pauseHeartbeatInterval]
-[VCDefaults shouldDisplayVideoInfoLayer]
FaceTimePhotosEnabled
-[VCDefaults momentsUserPreferenceEnabled]
dumpMediaBlob
-[VCDefaults dumpMediaBlob]
MaxActiveVideoEncoders
-[VCDefaults maxActiveVideoEncoders]
MaxActiveVideoDecoders
-[VCDefaults maxActiveVideoDecoders]
ForceEVSWideBand
-[VCDefaults forceEVSWideBand]
forceMuteAtStart
-[VCDefaults forceMuteAtStart]
minParticipantCountSendVoiceActiveOnly
-[VCDefaults minParticipantCountSendVoiceActiveOnly]
forceFECRepairStream
enableAudioDumpParticipantRemote
enableAudioDumpParticipantLocal
forceDisableMediaPriority
-[VCDefaults forceDisableMediaPriority]
audioPriorityDecaySlow
-[VCDefaults audioPriorityDecaySlow]
audioPriorityDecayFast
-[VCDefaults audioPriorityDecayFast]
audioPriorityRampUp
-[VCDefaults audioPriorityRampUpSpeed]
audioVoiceDetectionSensitivity
-[VCDefaults audioVoiceDetectionSensitivity]
silenceLevelMovingAveragePeriod
-[VCDefaults silenceLevelMovingAveragePeriod]
forceAudioPriorityValue
-[VCDefaults forceAudioPriorityValue]
forceAudioPriorityEnabled
-[VCDefaults forceAudioPriorityEnabled]
multiwayAudioNetworkBitrateCapWifi
-[VCDefaults multiwayAudioNetworkBitrateCapWifi]
multiwayAudioNetworkBitrateCapCellular
-[VCDefaults multiwayAudioNetworkBitrateCapCellular]
multiwayVideoNetworkBitrateCapWifi
-[VCDefaults multiwayVideoNetworkBitrateCapWifi]
multiwayVideoNetworkBitrateCapCellular
-[VCDefaults multiwayVideoNetworkBitrateCapCellular]
forceDisableFaceZoom
-[VCDefaults forceDisableFaceZoom]
forceDynamicEffectsFrameRate
-[VCDefaults forceDynamicEffectsFramerate]
depthFrameRateMultiplier
forceDisableVideoDegraded
-[VCDefaults forceDisableVideoDegraded]
forceDisableMediaStalled
-[VCDefaults forceDisableMediaStalled]
effectsFrameRate
-[VCDefaults shouldOverrideEffectsFramerate:]
forceDisableMediaEncryption
-[VCDefaults forceDisableMediaEncryption]
forceDisableMessageEncryption
-[VCDefaults forceDisableMessageEncryption]
forceDisableReporting
-[VCDefaults forceDisableReporting]
prominenceActiveProbabilityThreshold
-[VCDefaults prominenceActiveProbabilityThreshold]
prominenceActiveAccumulationThreshold
-[VCDefaults prominenceActiveAccumulationThreshold]
prominenceInactiveProbabilityThreshold
-[VCDefaults prominenceInactiveProbabilityThreshold]
prominenceInactiveAccumulationThreshold
-[VCDefaults prominenceInactiveAccumulationThreshold]
forceHWI
forceMultiwayHWI
forceCaptureWidth
forceCaptureHeight
forceEncodeFramerate
forceEncodeWidth
forceEncodeHeight
forceFramerate
forceBitrate
forceVideoPayload
forceRecvVideoPayload
forceKeyFrameInterval
forceARCapture
audioRecordingEnabled
forceAudioHardwareSampleRate
forceAudioPowerThreshold
forceAudioPowerTimeInterval
forceDisableAudioPowerSpectrumRegister
forceAudioChannelCount
cannedReplayEnabled
mediaQueueDumpEnabled
rateControlDumpEnabled
rateControlLogEnabled
rateControlForceTxCap
rateControlForceRxCap
rateControlForceTxRate
rateControlForceRxRate
redundancyControlForceVideoRedundancyPercentage
extraPayloads
momentsUserPreferenceEnabled
maxActiveVideoEncoders
maxActiveVideoDecoders
audioPriorityRampUpSpeed
forceDynamicEffectsFramerate
com.apple.VideoConference.VCControlChannel.AsyncProcessingQueue
flushActiveMessages:
Not supported method %@
Class VCControlChannel should not be instantiated directly. Use VCControlChannelFaceTime or VCControlChannelMultiWay instead.
sendReliableMessageAndWait:
sendReliableMessage:
sendReliableMessageAndWait:participantID:
sendReliableMessage:participantID:
sendUnreliableMessage:participantID:
broadcastUnreliableMessage:
messageReceivedDelegate
T@,N,V_messageReceivedDelegate
-[VCMediaControlInfo configureWithBuffer:length:optionalControlInfo:]
-[VCMediaControlInfo setInfo:size:type:]
-[VCMediaControlInfo hasInfoType:]
-[VCMediaControlInfo getInfo:bufferLength:infoSize:type:]
-[VCMediaControlInfo serializeToBuffer:bufferLength:blobLength:]
serializedSize
TL,R,V_serializedSize
T@"<VCMediaControlInfoDelegate>",V_delegate
-[VCMediaControlInfoIPCamera serializeToBuffer:bufferLength:blobLength:]
-[VCMediaControlInfoFaceTimeAudio configureWithBuffer:length:optionalControlInfo:]
-[VCMediaControlInfoFaceTimeAudio setInfo:size:type:]
-[VCMediaControlInfoFaceTimeAudio serializeToBuffer:bufferLength:blobLength:]
camera status %08X size %ld, 
LTR bits %08X size %ld, 
LTR timestamp %08X size %ld, 
FEC size %ld, 
probe %08X, size %ld, 
-[VCMediaControlInfoFaceTimeVideo configureWithBuffer:length:optionalControlInfo:]
-[VCMediaControlInfoFaceTimeVideo serializeToBuffer:bufferLength:blobLength:]
ROC %08X size %ld, 
MKI %08X size %ld, 
-[VCMediaControlInfoMultiwayAudio configureWithBuffer:length:optionalControlInfo:]
-[VCMediaControlInfoMultiwayAudio serializeToBuffer:bufferLength:blobLength:]
-[VCCallSession(VideoConferencing) processBlackFrame:]
-[VCCallSession(VideoConferencing) computeVisibleAspectRatioWithRemoteScreenAspectRatio:remoteExpectedAspectRatio:encodeWidth:encodeHeight:]
-[AVCSession dealloc]
%@: transportToken[%@] configuration[%@]
-[AVCSession setAudioMuted:]
-[AVCSession setVolume:]
-[AVCSession setAudioEnabled:]
-[AVCSession setVideoEnabled:]
-[AVCSession setAudioPaused:]
-[AVCSession setVideoPaused:]
-[AVCSession initWithTransportToken:configuration:delegate:queue:]
com.apple.AVConference.AVCSession.stateQueue
-[AVCSession addParticipants:]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AVCSession.m
-[AVCSession removeParticipants:]_block_invoke
-[AVCSession start]_block_invoke
-[AVCSession stop]_block_invoke
-[AVCSession updateConfiguration:]_block_invoke
-[AVCSession beginParticipantConfiguration]_block_invoke
-[AVCSession endParticipantConfiguration]_block_invoke
-[AVCSession registerBlocksForNotifications]_block_invoke
vcSessionServerDidDisconnect
com.apple.AVConference.AVCSession.notificationQueue
-[AVCSession participant:audioEnabled:didSucceed:error:]
-[AVCSession participant:videoEnabled:didSucceed:error:]
-[AVCSession participant:audioPaused:didSucceed:error:]
-[AVCSession participant:videoPaused:didSucceed:error:]
T@"AVCSessionConfiguration",&,N,V_configuration
remoteParticipantsMap
T@"NSMutableDictionary",R,N,V_remoteParticipants
participantsToAdd
T@"NSMutableDictionary",R,N,V_participantsToAdd
T@"AVCSessionParticipant",R,N,V_localParticipant
xpcConnection
T@"VCXPCClientShared",R,N,V_connection
Ti,R,N,V_sessionToken
T@"<AVCSessionDelegate>",N
com.apple.avconference.avcvideostream.callback.queue
AVCVideoStream
-[AVCVideoStream dealloc]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AVCVideoStream.m
-[AVCVideoStream configure:error:]
-[AVCVideoStream start]
AVCVideoStream hasn't been configured
-[AVCVideoStream stop]
-[AVCVideoStream pause]
-[AVCVideoStream resume]
-[AVCVideoStream updateVideoConfiguration:]
-[AVCVideoStream requestLastDecodedFrame]
-[AVCVideoStream registerBlocksForDelegateNotifications]_block_invoke
Calling -stream:didStart:error:
vcMediaStreamLastDecodedFrame
vcMediaStreamDidGetLastDecodedFrame
Calling -streamDidStop:
T@"<AVCVideoStreamDelegate>",N,V_delegate
-[VCTextStreamConfig initWithClientDictionary:]
vcMediaStreamTextCodecType
vcMediaStreamTextNumRedundantPayloads
vcMediaStreamTextTxRedPayloadType
vcMediaStreamTextRxRedPayloadType
vcMediaStreamTextTxIntervalMin
txIntervalMin
Tf,N,V_txIntervalMin
Payload:%d %@ %@ rules
encoding
decoding
TC,R,N,V_transportType
encodingType
TC,R,N,V_encodingType
-[VCVideoRuleCollections init]
-[VCVideoRuleCollections filterRules:byBitrateRule:]
T@"NSArray",R,V_supportedPayloads
T@"NSDictionary",R,V_rules
vcSessionParticipantKeyMediaBlob
vcSessionParticipantKeyCallInfoBlob
-[VCSessionParticipant callDelegateWithBlock:]
-[VCSessionParticipant dispatchedStart]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCSessionParticipant.m
v8@?0@"<VCSessionParticipantStreamDelegate>"4
-[VCSessionParticipant dispatchedStop]
-[VCSessionParticipant dispatchedStream:didStart:error:]
-[VCSessionParticipant dispatchedStreamDidStop:]
-[VCSessionParticipant dispatchedStream:didResume:error:]
-[VCSessionParticipant dispatchedStream:didPause:error:]
-[VCSessionParticipant dispatchedSetAudioEnabled:]
-[VCSessionParticipant dispatchedSetVideoEnabled:]
-[VCSessionParticipant dispatchedSetAudioPaused:]
-[VCSessionParticipant dispatchedSetVideoPaused:]
%@[%p] idsDestination[%@] idsParticipantID[%llu] participantUUID[%@] state[%s]
allAudioStreams[%@]
 allVideoStreams[%@]
 runningAudioStreams[%@]
 startingAudioStreams[%@]
 stoppingAudioStreams[%@]
 resumingAudioStreams[%@]
 pausingAudioStreams[%@]
 pausedAudioStreams[%@]
 runningVideoStreams[%@]
 startingVideoStreams[%@]
 stoppingVideoStreams[%@]
 resumingVideoStreams[%@]
 pausingVideoStreams[%@]
 pausedVideoStreams[%@]
-[VCSessionParticipant tearDown]
-[VCSessionParticipant startAudioIO]
-[VCSessionParticipant stopAudioStreamsCompletion]_block_invoke
-[VCSessionParticipant stopAudioStreams]
-[VCSessionParticipant stopVideoStreams]
-[VCSessionParticipant processStartedStream:didStart:]
-[VCSessionParticipant processStoppedStream:]
-[VCSessionParticipant processResumedStream:didResume:]
-[VCSessionParticipant processPausedStream:didPause:]
-[VCSessionParticipant configureAudioIOWithContinuity:]
-[VCSessionParticipant updateConfigurationWithIsContinuity:]_block_invoke
-[VCSessionParticipant configureWithIsContinuity:]
-[VCSessionParticipant initWithIDSDestination:delegate:processId:sessionUUID:]
com.apple.AVConference.vcSessionParticipantQueue
-[VCSessionParticipant dealloc]
-[VCSessionParticipant setState:]
Running Changing Media State
-[VCSessionParticipant applyVideoEnabledSetting:]
-[VCSessionParticipant updateVideoPaused:]
-[VCSessionParticipant setBasebandCongestionDetector:]
-[VCSessionParticipant createRedundancyControllers]
-[VCSessionParticipant collectVideoChannelMetrics:]
-[VCSessionParticipant collectAudioChannelMetrics:]
-[VCSessionParticipant vcMediaStream:didStartStream:error:]
-[VCSessionParticipant vcMediaStreamDidStop:]
-[VCSessionParticipant vcMediaStream:didPauseStream:error:]
-[VCSessionParticipant vcMediaStream:didResumeStream:error:]
-[VCSessionParticipant vcMediaStream:requestKeyFrameGenerationWithStreamID:]
-[VCSessionParticipant resetDecryptionTimeout]
-[VCSessionParticipant pullAudioSamples:]
-[VCSessionParticipant pushAudioSamples:]
-[VCSessionParticipant redundancyController:redundancyIntervalDidChange:]
-[VCSessionParticipant redundancyController:redundancyPercentageDidChange:]
VCSPAPSReg
opaqueData
T@"NSData",R,N,V_opaqueData
T@"<VCSessionParticipantDelegate>",R,N
streamDelegate
T@"<VCSessionParticipantStreamDelegate>",N
Tf,R,N,V_audioPosition
Tf,R,N,V_volume
audioStreams
allParticipantStreamInfo
T(tagNTP=Q{?=II}),R,N,V_creationTime
participantVideoToken
Ti,R,N,V_participantVideoToken
supportedAudioRules
T@"VCAudioRuleCollection",R,N,V_supportedAudioRules
mediaNegotiator
T@"VCMediaNegotiator",R,N,V_mediaNegotiator
localOnWiFi
TB,N,GisLocalOnWiFi,V_localOnWiFi
AVCPacketRelayDriverThreadStart
com.apple.avconference.AVCPacketRelayDriverProc
AVCPacketRelayDriverThreadStop
int AVCPacketRelayDriverThreadStop()
AVCPacketRelayDriverThreadAddFileDescriptorWithConnection
int AVCPacketRelayDriverThreadAddFileDescriptorWithConnection(int, id<AVCPacketRelayConnectionProtocol>)
AVCPacketRelayDriverThreadRemoveFileDescriptor
int AVCPacketRelayDriverThreadRemoveFileDescriptor(int)
AVCPacketRelayDriverProc
%@: sampleRate=%f blockSize=%f, operatingMode=%d, VP=%d, sampleRateIn=%f, sampleRateOut=%f, processId=%d, active=%d
preferredSampleRate
Td,N,V_preferredSampleRate
preferredBlockSize
Td,N,V_preferredBlockSize
TI,N,V_vpOperatingMode
outputFormat
T{AudioStreamBasicDescription=dIIIIIIII},N,V_outputFormat
Ti,N,V_processId
sessionActive
TB,N,GisSessionActive,V_sessionActive
WARNING! WSOLAInfo is increasing size of extendedBuffer by 8x.
%lld > %lld WSOLA TIMEOUT!!!!!!!!
%lld  
WARNING wsola_adapt(): output buffer size %d is insufficient to hold data.
COPY OUTPUT: %d =========
T@"NSString",C,N,Vip
TS,N,Vport
TB,N,VisIPv6
T@"NSString",C,N,VinterfaceName
vcMediaStreamRTCPXREnabled
T@"AVCNetworkAddress",&,N,V_localAddress
T@"AVCNetworkAddress",&,N,V_remoteAddress
txPayloadType
TI,N,V_txPayloadType
rxPayloadType
TI,N,V_rxPayloadType
rtcpXREnabled
TB,N,GisRTCPXREnabled,V_rtcpXREnabled
T@"AVCAudioStreamConfig",&,N,V_audio
T@"AVCVideoStreamConfig",&,N,V_video
T@"AVCTextStreamConfig",&,N,V_text
vcMediaStreamDTMFTsRate
cnEnabled
TB,N,GisCNEnabled,V_cnEnabled
cnPayloadType
TI,N,V_cnPayloadType
dtmfPayloadType
TI,N,V_dtmfPayloadType
dtmfTimestampRate
TI,N,V_dtmfTimestampRate
channelAwareOffset
TI,N,V_channelAwareOffset
TB,N,GisOctectAligned,V_octetAligned
headerFullOnly
TB,N,GisHeaderFullOnly,V_headerFullOnly
preferredCodecRateMode
Ti,N,V_preferredCodecRateMode
codecRateModeMask
TI,N,V_codecRateModeMask
TI,N,V_numRedundantPayloads
txRedPayloadType
TI,N,V_txRedPayloadType
rxRedPayloadType
TI,N,V_rxRedPayloadType
txCodecType
Ti,N,V_txCodecType
rxCodecType
Ti,N,V_rxCodecType
+[AVCTextStreamConfig codecTypeWithClientCodecType:]
VCWCMClientQueue
connectionQueue
T@"NSObject<OS_dispatch_queue>",R,VconnectionQueue
wcmClientDelegate
T@"<WCMClientDelegate>",&,N,VwcmClientDelegate
-[SDPParser parseMediaLineHeader:mediaType:supportedPayloads:rtpPort:]
fieldName
T@"NSString",R,N,V_fieldName
fieldValue
T@"NSString",R,N,V_fieldValue
fieldType
TC,R,N,V_fieldType
parsingDone
TB,R,N,V_parsingDone
com.apple.VideoConference.vctransport
com.apple.VideoConference.vctransport.dataReceivedHandlerQueue
NewConnection
NewCandidates
NewNomination
RemoveIPPort
-[VCTransport iceShouldNominateNewCandidate:forCallID:interfaceMask:nominated:demote:connectionPriority:replaceOnly:]_block_invoke
-[VCTransport iceRemoveIPPort:forCallID:isLocalInterface:]_block_invoke
static
VCJitterBuffer_Create
VCJitterBuffer_Finalize
VCJitterBuffer_InitializePlayback
VCJitterBuffer_Reset
VCJitterBuffer_DiscardQueueExcess
VCJitterBuffer_SetRedAudioDelayInSamples
VCJitterBuffer_Flush
VCJitterBuffer_ResetPlaybackReportingMetrics
VCJitterBuffer_EnqueuePacket
State = RESET
forceJitterBufferSize
State = STATE_NEWSTREAM, iSampleRate = %d
State = SETTLE
State = FILL
State = RUN
VCJitterBuffer_PlaybackGetSamples
VCJitterBuffer_GetAWDReportingMetrics
VCJitterBuffer_GetWRMReportingMetrics
VCJitterBuffer_GetPlaybackReportingMetrics
VCJitterBuffer_GetReportingMetrics
Red Rx Stats, redAudioFramesReceived = %d , redAudioBytesReceived = %d , redAudioFramesDiscarded = %d , redAudioBytesDiscarded = %d 
VCJitterBuffer_SetMode
VCJitterBuffer_SetNetworkType
VCJitterBuffer_AudioPacketAlloc
VCJitterBuffer_AudioFrameAlloc
VCJitterBuffer_AudioPacketFree
%02.6f
%02.6f
%02.6f
%02.6f
%02.4f
%02.4f
%02.6f
%02.6f
%02.6f
%02.4f
%02.4f
%02.4f
%02.4f
%02.4f
_VCJitterBuffer_DequeuePacketsFromPreloadQueue
SpkrProc: PreloadQueue_Dequeue and AddPacket
SpkrProc: PreloadQueueDequeue
SpkrProc: PreloadQueueDequeue Loop, Iterations = %d
SpkrProc: _VCJitterBuffer_UpdateAudioQSize
_VCJitterBuffer_UpdateAvgQSize
SpkrProc: UpdateAvgQSize
VCJitterBuffer_GetSampleMultiChannel
+[AVAudioClient startAudioSessionWithCompletionHandler:]
+[AVAudioClient startAudioSession]
+[AVAudioClient stopAudioSession]
AVCAudioClient
+[AVAudioClient resetAudioSessionOutputPortOverride]
deviceList
T@"AVAudioDeviceList",&,N,VdeviceList
T@?,N
VCObject
VCMediaNegotiationBlobMultiwayVideoStream
NSCopying
VCAudioManager
VCAudioIOControllerControl
NSObject
VCAudioIOSink
VCAudioIOSource
VCAudioSessionDelegate
AVCRateController
AVCRateControlFeedbackController
VCCaptionsTranscription
AVConferenceCallState
AVConference
Private
VCAudioPowerSpectrum
AVCStatisticsCollector
VCVideoStreamOWRDLossEventRateControl
VCVideoStreamRateControlProtocol
VCMediaNegotiationBlobMultiwayAudioStream
GK_NSDictionaryDeepMutableCopy
GKNATObserver_SCContext
GKNATObserver
GKNATObserverInternal
VCAudioRelayIO
VCAudioRelay
VCSessionConfiguration
VCAudioStreamCodecConfig
AVCRTCPPacket
AVCRTCPSenderReport
AVCRTCPReceiverReport
AVCRTCPSourceDescription
GKRingBuffer
NSDictionaryCopy_AVConference
IPPortWrapper
IPv6PrefixWrapper
GKSConnectivitySettings
VCRedundancyControlAlgorithmVideo
VCRedundancyControlAlgorithm
GKVoiceChatError
VCVideoStreamNOWRDLossEventRateControl
GKInterfaceListener
VCMediaNegotiationBlobBandwidthSettings
ICEResultQuery
ICEResultWaitQueue
VCMomentsHistory
VCMomentsHistoryBufferDelegate
VCMediaNegotiationBlobMomentsSettings
VCRateControlAlgorithmSparseNOWRD
VCRateControlAlgorithm
VCTextStream
VCTextSender
VCTextReceiverDelegate
LoopbackSocketTunnel
VCMediaNegotiationBlobAudioSettings
VCIDRSchedulerItem
VCRedundancyControllerVideo
VCRedundancyControllerProtocol
VCMasterKeyIndex
VCWeakObjectHolder
VCCryptoInfo
Encryption
VCControlChannelencryptionDelegate
VCVideoStreamTransmitter
VCCaptionsClientContext
VCCaptionsManagerStreamTokenClientList
VCCaptionsManager
VCCaptionsSourceDelegate
AVCEffects
VCSessionUplinkVideoStreamController
AVCPacketFilter
AVCPacketFilterRTP
VCAudioRuleCollection
VCPayloadUtils
VCAudioPowerSpectrumSource
VCAudioPowerSpectrumManager
VCAudioPowerSpectrumMeterDelegate
VCSessionParticipantAudioStreamConfig
VCDatagramChannelManager
VCDispatchTimer
VCAudioStream
VCMediaStreamSyncSource
VCAudioIODelegate
VCDatagramChannelIDS
VCStatsRecorder
VCRateControlOWRDEstimator
VCDispatchQueue
VCMomentsHistoryBuffer
VCMediaStreamSyncDestination
VCMediaStreamManager
VCMediaStreamDelegate
VCVideoRule
VCVideoStreamRTTPLRRateControl
VCConnectionLegacy
VCConnectionProtocol
VCControlChannelFaceTime
VCMoments
VCMomentsMessenger
VCAudioRedBuilder
helper
SDPMini
SDPComposing
SDPParsing
mediaParameters
SenderLargeFrameInfo
VCRateControlMediaController
VCIDRScheduler
VCConnectionManagerLegacy
AVCVideoFrame
VCSessionManager
VCSessionDelegate
VCSessionUplinkBandwidthAllocator
VCMediaControlInfoGenerator
VCMediaControlInfoDelegate
VCAudioPowerSpectrumMeter
VCAudioPowerSpectrumDelegate
VCMomentsClientContext
VCMomentsManagerStreamTokenClientList
VCMomentsManager
VCMomentsMessengerDelegate
VCMomentsCollector
VCMomentsCollectorDelegate
VCAudioPowerLevelMonitor
VCVideoStreamReceiver
VCSessionParticipantRemote
VCSessionDownlinkBandwidthAllocatorClient
VCTransportSessionIDS
VCConnectionManagerDelegate
VCIDSSessionInfoSynchronizerDelegate
VCVideoReceiverBase
VCConnectionChangedHandler
VCMovieWriterUtil
VCMediaNegotiationBlobVideoSettings
VCVideoStreamRateAdaptation
VCMediaStreamStats
VCSessionErrorUtils
VCVideoReceiverDefault
VCConnectionManager
VCConnectionHealthMonitorDelegate
VCVTPWrapper
VCRecommendedNetworkSettings
VCNetworkFeedbackController
WCMClientDelegate
WRMClientDelegate
VCAudioClient
VideoUtil
VCBasebandMetrics
AVCBasebandCongestionDetector
VCSessionBandwidthAllocationTableEntry
TCPTunnelClient
VideoConferenceRealTimeChannel
TCPBufferPool
VCCallSession
VCSecureDataChannelDelegate
VCCaptionsReceiverDelegate
Callbacks
PrivateMethods
Messages
VCTransportSessionLegacyDelegate
AVCRateControllerDelegate
VCRateControlMediaControllerDelegate
VCCallLinkCongestionDetector
SessionDelegate
VCCapabilities
NSCoding
HandleWrapper
VideoConference
VCAudioPowerLevelMonitorDelegate
VCMomentTransportDelegate
AudioProcessing
SIPDispatch
SessionInfo
VCCallSessionDelegate
VideoProcessing
VCVideoCaptureClient
NATDelegate
GKNATObserverDelegate
VCTransportSessionLegacy
LoopbackSocketTunnelDelegate
InterfaceListenerDelegate
VCAudioUnitProperties
VCTextReceiver
VCTextFrameReceiver
VideoConferenceManager
VideoConferenceDelegate
VCMediaNegotiationBlob
VCVideoTransmitterDefault
VCRedundancyControlAlgorithmVideoMultiway
SDPMediaLine
VCSession
VCSessionParticipantStreamDelegate
VCMediaStreamNotification
RTCPReportProvider
VCSecurityEventHandler
VCSessionParticipantDelegate
VCNetworkFeedbackControllerDelegate
VCAudioRelayIOController
VCConnectionIDS
VideoAttributes
VCSessionParticipantVideoStreamConfig
VCRateControlAlgorithmStabilizedNOWRD
VCAudioRule
VCTextTransmitter
AVCMoments
VCSessionParticipantLocal
VCSessionUplinkVideoStreamControllerDelegate
VCSessionBitrateArbiter
AVConferenceError
VCAudioIO
VCAudioIOControllerSource
VCAudioIOControllerSink
VCAudioIOControllerDelegate
VCStatisticsCollectorQueue
AVCCaptionsClient
VCAudioIOControllerClient
AVAudioDevice
AVInternalDeviceList
AVAudioDeviceList
VCRedundancyControlAlgorithmAudioMultiWay
AVCSessionParticipant
AVCSessionParticipantControlProtocol
VCTransportSession
VCVideoTransmitterConfig
VCVisualAlert
VCRemoteVideoState
VCRemoteVideoManager
VCRemoteVideoManagerDelegate
AVCAudioPowerSpectrumChannel
NSSecureCoding
VCPrivateAccess
VCMediaNegotiationBlobCaptionsSettings
VCMediaStream
VCMediaStreamProtocol
VCMediaStreamTransportDelegate
VCVideoRuleCollectionsMoments
VCVideoRuleCollectionsMomentsMac
VCVideoRuleCollectionsMomentsEmbeded
WRMClient
AVCCaptionsToken
AVCCaptionsResult
AVCCaptionsConfig
VCConnectionManagerIDS
VCIDRSchedulerStream
VCMediaNegotiationBlobVideoPayloadSettings
XPCClientUser
AVConferenceXPCClient
VCVideoRuleCollectionsCameraMac
VCSecurityKeyManager
VCMediaNegotiatorLocalConfiguration
VCMediaNegotiatorResults
VCMediaNegotiatorAudioResults
VCMediaNegotiatorVideoResults
VCMediaNegotiatorCaptionsResults
VCMediaNegotiatorMomentsResults
VCMediaNegotiatorMultiwayAudioResults
VCMediaNegotiatorMultiwayVideoResults
VCMediaNegotiator
VCVideoCaptureConverter
VCConnectionHealthMonitor
VCSessionMediaStreamConfigurationProvider
FFTMeter
VCVirtualTextDevice
VCMediaStreamTransport
VCXPCConnection
VCXPCServerUser
AVConferenceXPCServer
XPCManagement
AVPingTest
ParsingHelper
VCVideoRuleCollectionsCamera
VCMediaStreamMultiwayConfigVideo
VCVideoStreamConfig
VCXPCClientShared
VCEffects
BitrateLimits
VCAudioTierPicker
VCVideoRuleCollectionsCameraEmbedded
VCImageAttributeRules
VCVideoStreamRateController
VCControlChannelTransaction
VCControlChannelDialog
VCControlChannelMultiWay
VCControlChannelTransactionDelegate
SnapshotTimer
VCTextJitterBuffer
VCMomentsUtil
VCPacketBundler
VCVideoQualityInfo
AVCAudioStream
VCSessionDownlinkBandwidthAllocator
VCNetworkAgent
AVConferencePreview
DTMFEventHandler
VCSessionParticipantConfig
VCSecureDataChannel
VCIDSSessionInfoSynchronizer
VCSessionStatsController
AVCPacketRelaySocketConnection
AVCPacketRelayConnectionProtocol
AVCPacketRelayIDSConnection
AVCPacketRelayConnection
AVCPacketRelay
VCMediaStreamSynchronizer
VCMediaStreamSyncSourceDelegate
AVCTextStream
SuddenChangeParameters
VCRateControlBandwidthEstimator
VCRateControlBandwidthEstimatorMap
AVCAudioPowerSpectrumBin
VCCaptionsSegment
VCAudioClientManager
VCVideoTransmitterBase
VCClientRelay
VCVideoFrameUtil
Utils
VideoRules
AudioRules
MultiwayAudioStream
MultiwayVideoStream
VCVirtualTTYDevice
VCMediaNegotiationBlobVideoRuleCollection
VCVideoRuleCollectionsScreen
NetworkUtils
VCVideoCapture
VCMovieWriter
VCMovieWriterProtocol
WRMReporting
VCAudioStreamTransport
VCAudioPowerSpectrumBin
VCAudioPayload
VCVideoStream
VCVideoReceiverDelegate
VCVideoCaptureConverterDelegate
VCAudioTier
VCSessionMessaging
VCControlChannelDelegate
VCNetworkAddress
VCMediaStreamMultiwayConfig
VCMediaStreamConfig
VCVideoFeatureListStringHelper
SIPClientDataDictionary
VCSessionMessageTopic
VCRedundancyControlAlgorithmAudioLegacy
AVCAudioPowerSpectrum
VideoScaler
VCSessionParticipantMediaStreamInfo
VCCallInfo
VCCameraPreview
AVCAudioPowerSpectrumMeter
VCServerBag
VCRedundancyControlAlgorithmAudio
VCIDRSchedulerPeriodGroup
VCAudioTransmitterConfig
AVCMomentsRequest
VCMediaStreamMultiwayConfigAudio
VCAudioStreamConfig
VCCaptionsReceiver
VCRedundancyControllerAudio
AVCRemoteVideoClient
VCBitrateRule
VCBitrateArbiter
AVCPacketRelayDriver
VCStatisticsHistory
LogDumpUtility
AVCSessionConfiguration
VCVideoFrameBufferPool
VCRedundancyControllerDelegate
VCAudioTransmitter
VCCallInfoBlob
AVTelephonyInterface
AVCVirtualTTYDevice
VCAudioPayloadConfig
VCTransportStream
VCSessionBandwidthAllocationTable
VCEffectsManager
VCVoIPRelayInternal
VCVoIPRelay
VCDefaults
VCControlChannel
VCMediaControlInfo
VCMediaControlInfoIPCamera
VCMediaControlInfoFaceTimeAudio
VCMediaControlInfoFaceTimeVideo
VCMediaControlInfoMultiwayAudio
VideoConferencing
AVCSession
AVCSessionParticipantDelegate
AVCVideoStream
VCTextStreamConfig
VCHardwareSettings
VCVideoRuleCollectionKey
VCVideoRuleCollections
VCSessionParticipant
VCAudioPowerSpectrumSourceDelegate
VCAudioSessionMediaProperties
AVCNetworkAddress
AVCMediaStreamConfig
AVCAudioStreamConfig
AVCVideoStreamConfig
AVCTextStreamConfig
VCWCMClient
SDPParser
VCTransport
AVAudioClient
@8@0:4
v8@0:4
^{opaqueRTCReporting=}8@0:4
v12@0:4^{opaqueRTCReporting=}8
v12@0:4@8
@"NSString"
{_opaque_pthread_mutex_t="__sig"l"__opaque"[40c]}
@12@0:4^{_NSZone=}8
v12@0:4I8
v12@0:4B8
B8@0:4
B12@0:4@8
I8@0:4
{?="maxMediaBitrate"b1"maxNetworkBitrate"b1"maxPacketsPerSecond"b1"metadata"b1"repairedMaxNetworkBitrate"b1"repairedStreamID"b1}
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v12@0:4@"VCAudioIOControllerClient"8
v12@0:4^{opaqueVCAudioBufferList=}8
v32@0:4^{AudioStreamBasicDescription=dIIIIIIII}8^d12^I16i20i24^{AudioStreamBasicDescription=dIIIIIIII}28
v16@0:4^{AudioEventQueue_t=}8@12
v12@0:4^{AudioEventQueue_t=}8
L16@0:4i8i12
@12@0:4@8
v12@0:4^{tagHANDLE=i}8
B24@0:4@8@12@16^I20
^{tagHANDLE=i}
@"NSObject<OS_dispatch_queue>"
^{AudioEventQueue_t=}
@"VCAudioSessionMediaProperties"
@"VCAudioUnitProperties"
@"NSDictionary"
@"NSMutableArray"
@"NSMutableSet"
@"AVAudioDevice"
^{opaqueVCAudioBufferList=}
{_VCAudioIOControllerIOState="timestampInitialized"B"lastHostTime"d"lastInputTimestamp"I"lastInputSampleCount"I"lastBlockSize"d"lastTimestamp"Q}
^{opaqueVCAudioLimiter=}
@24@0:4@8@12B16@20
@28@0:4@8@12B16B20@24
v28@0:4{AVCRateControlConfig=IIIII}8
v12@0:4^v8
v12@0:4^{__CFDictionary=}8
v32@0:4i8B12i16B20i24I28
I12@0:4i8
I16@0:4i8B12
@12@0:4I8
B12@0:4I8
i20@0:4I8I12i16
v12@0:4^{VCRateControlAlgorithmConfig=^IiiiiiiiiiidddddddddddddiiddddddddIIIIBBBidddddddddddBdii}8
v360@0:4{VCRateControlAlgorithmConfig=^IiiiiiiiiiidddddddddddddiiddddddddIIIIBBBidddddddddddBdii}8
v136@0:4{?=id(?={?=IIIIIdddd[64c]}{?=IIIIIII}{?=dIIIIIQ}{?=IBBBIIdI}{?=CIIIIIIIIIdddIII}{?=IId}{?=IIId}{?=IIII}{?=IIIII}{?=IIIIBIII})}8
v16@0:4I8I12
i20@0:4I8i12i16
{AVCRateControlConfig=IIIII}8@0:4
@"AVCStatisticsCollector"
@"AVCRateControlFeedbackController"
@"AVCBasebandCongestionDetector"
@"VCRateControlMediaController"
@"<VCRateControlAlgorithm>"
{AVCRateControlConfig="mode"I"localRadioAccessTechnology"I"remoteRadioAccessTechnology"I"maxBitrate"I"minBitrate"I}
B24@0:4^@8I12^@16^@20
B24@0:4@8I12@16^@20
B20@0:4^{?=id(?={?=IIIIIdddd[64c]}{?=IIIIIII}{?=dIIIIIQ}{?=IBBBIIdI}{?=CIIIIIIIIIdddIII}{?=IId}{?=IIId}{?=IIII}{?=IIIII}{?=IIIIBIII})}8d12
B44@0:4{?=IIIIIII}8I36^@40
B44@0:4{?=IBBBIIdI}8I36^@40
@36@0:4{?=IIIIIII}8
{?=IIIIIII}12@0:4@8
{?=IIIIIII}40@0:4{tagAFRCFB=IIIIIIII}8
B16@0:4^v8^{?=IIIIIII}12
B36@0:4{?=IIIIIII}8
v28@0:4{?=IIId}8
{?="isFinal"b1"isLocal"b1}
@"VCCapabilities"
s12@0:4@8
v12@0:4@?8
I12@0:4B8
@16@0:4@8I12
i8@0:4
i12@0:4i8
v16@0:4@8i12
v16@0:4@8@12
v20@0:4@8i12B16
v32@0:4i8@12d16@?24@28
@12@0:4i8
v20@0:4@8@12i16
d12@0:4i8
B48@0:4i8i12@16B20@24B28@32i36@40^@44
B44@0:4i8i12@16B20@24B28@32i36^@40
B32@0:4i8@12B16@20@24^@28
B40@0:4i8@12B16@20B24@28i32^@36
B40@0:4i8i12@16B20@24B28@32^@36
B36@0:4i8@12B16@20B24@28^@32
v12@0:4i8
v20@0:4@8i12i16
v16@0:4i8@12
B12@0:4B8
f8@0:4
B20@0:4^B8i12^@16
^v8@0:4
B20@0:4B8i12^@16
v24@0:4@8B12L16@20
v28@0:4@8B12L16@20@24
v20@0:4@8L12@16
v24@0:4@8i12B16@20
v24@0:4@8L12@16@20
v20@0:4@8@12L16
v20@0:4@8B12L16
v16@0:4@8L12
v16@0:4@8f12
v16@0:4@8B12
v24@0:4@8L12B16B20
v20@0:4@8L12B16
v20@0:4@8L12L16
v20@0:4i8@12B16
v16@0:4B8i12
v16@0:4I8i12
v28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8i24
@"AVConferenceXPCClient"
@"NSMutableDictionary"
@"NSTimer"
@"CALayer"
@20@0:4I8i12@16
B16@0:4I8r^{AudioStreamBasicDescription=dIIIIIIII}12
B12@0:4^{_VCAudioPowerSpectrumChannel=I^f^f^f^f^{vDSP_DFT_SetupStruct}{DSPSplitComplex=^f^f}^ff^f^f@}8
v12@0:4^{_VCAudioPowerSpectrumChannel=I^f^f^f^f^{vDSP_DFT_SetupStruct}{DSPSplitComplex=^f^f}^ff^f^f@}8
{_VCRange=ff}8@0:4
{_VCRange="min"f"max"f}
{AudioStreamBasicDescription="mSampleRate"d"mFormatID"I"mFormatFlags"I"mBytesPerPacket"I"mFramesPerPacket"I"mBytesPerFrame"I"mChannelsPerFrame"I"mBitsPerChannel"I"mReserved"I}
^{_VCAudioPowerSpectrumChannel=I^f^f^f^f^{vDSP_DFT_SetupStruct}{DSPSplitComplex=^f^f}^ff^f^f@}
@"<VCAudioPowerSpectrumDelegate>"
@12@0:4B8
v16@0:4i8@?12
{?=id(?={?=IIIIIdddd[64c]}{?=IIIIIII}{?=dIIIIIQ}{?=IBBBIIdI}{?=CIIIIIIIIIdddIII}{?=IId}{?=IIId}{?=IIII}{?=IIIII}{?=IIIIBIII})}20@0:4i8d12
v12@0:4^{?=id(?={?=IIIIIdddd[64c]}{?=IIIIIII}{?=dIIIIIQ}{?=IBBBIIdI}{?=CIIIIIIIIIdddIII}{?=IId}{?=IIId}{?=IIII}{?=IIIII}{?=IIIIBIII})}8
^{tagVCStatisticsCollection={?=IIIIIII}{?=dIIIIIQ}{?=CIIIIIIIIIdddIII}{?=IId}{?=IIId}{?=IIIIBIII}}
@"VCRateControlBandwidthEstimatorMap"
@"VCRateControlOWRDEstimator"
@"VCStatisticsHistory"
@"VCStatisticsCollectorQueue"
{_opaque_pthread_rwlock_t="__sig"l"__opaque"[124c]}
v40@0:4d8d16d24S32I36
v24@0:4I8I12d16
v16@0:4S8S12
d8@0:4
v16@0:4d8
v36@0:4^v8d12B20d24I32
S8@0:4
v24@0:4d8d16
i12@0:4I8
[4B]
v12@0:4f8
{?="maxMediaBitrate"b1"maxNetworkBitrate"b1"maxPacketsPerSecond"b1"repairedMaxNetworkBitrate"b1"repairedStreamID"b1"supportedPayloads"b1}
@"GKNATObserverInternal"
i16@0:4I8B12
I28@0:4I8@12B16@20I24
I20@0:4I8@12B16
v24@0:4^i8^i12^i16^@20
^{tagCommNATInfo=II[3S]I}16@0:4^{tagIPPORT=i[16c](?=I[16C])S}8r^{?=i[12C]}12
i24@0:4^{tagIPPORT=i[16c](?=I[16C])S}8r^{?=i[12C]}12@16B20
v20@0:4^{tagIPPORT=i[16c](?=I[16C])S}8r^{?=i[12C]}12B16
@16@0:4^{tagIPPORT=i[16c](?=I[16C])S}8@12
^{__SCDynamicStore=}
@"NSRecursiveLock"
@"NSObject<OS_dispatch_group>"
@"NSObject<OS_dispatch_semaphore>"
@"GKNATObserver_SCContext"
B24@0:4d8@16^@20
{AudioStreamBasicDescription=dIIIIIIII}8@0:4
v48@0:4{AudioStreamBasicDescription=dIIIIIIII}8
^?8@0:4
v12@0:4^?8
^{opaqueVCAudioBufferList=}8@0:4
L8@0:4
v12@0:4L8
@?8@0:4
^{PacketThread_s=}8@0:4
^{PacketThread_s=}
B20@0:4d8^@16
B16@0:4@8^@12
B20@0:4@8@12@16
B12@0:4^@8
^{OpaqueAudioConverter=}20@0:4^{AudioStreamBasicDescription=dIIIIIIII}8^{AudioStreamBasicDescription=dIIIIIIII}12^@16
f16@0:4^f8I12
v20@0:4@8@12^{OpaqueAudioConverter=}16
v12@0:4^{timespec=il}8
^{OpaqueAudioConverter=}8@0:4
^{_opaque_pthread_t=l^{__darwin_pthread_handler_rec}[4088c]}
{_opaque_pthread_cond_t="__sig"l"__opaque"[24c]}
^{OpaqueAudioConverter=}
@"VCAudioRelayIO"
@"NSObject<OS_dispatch_source>"
v12@0:4S8
@12@0:4^{tagRTCPPACKET={tagRTCPCOMMON=b5b1b2b8S}(?={tagSR_RTCP=IIIIII[1{tagRTCP_RRB=Ib8b24IIII}]}{tagRR_RTCP=I[1{tagRTCP_RRB=Ib8b24IIII}]}{tagSDES_RTCP=I{tagRTCPSDES=CC[258c]}}{tagBYE_RTCP=I}{tagRTCP_APP=II}{tagRTCP_APP_LTRP={tagRTCP_APP=II}I}{tagFIR_RTCP=I[10S]}{tagNACK_RTCP=ISS}{tagRTCP_PSFB_PLI={tagRTCP_FBCOMMON=II}}{tagRTCP_PSFB_SLI={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_FIR={tagRTCP_FBCOMMON=II}IC[3C]}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_RTPFB_GNACK={tagRTCP_FBCOMMON=II}SS}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagRTCP_CUSTOM_SR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_SENDER_INFO=IIIIb4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_RECEIVER_INFO=b4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]})}8
C8@0:4
v12@0:4C8
@"AVCRTCPReceiverReport"
@16@0:4L8L12
B20@0:4*8L12L16
l16@0:4L8L12
l20@0:4*8L12L16
^{tagIPPORT=i[16c](?=I[16C])S}8@0:4
v12@0:4^{tagIPPORT=i[16c](?=I[16C])S}8
^{tagIPPORT=i[16c](?=I[16C])S}
@12@0:4^{?=i[12C]}8
r^{?=i[12C]}8@0:4
^{?=i[12C]}
^{tagIPPORT=i[16c](?=I[16C])S}12@0:4@8
B36@0:4^@8i12i16i20@24@28@32
B32@0:4^@8i12i16@20@24@28
{OWRDList="time"[100d]"owrd"[100d]"frontIndex"i"rearIndex"i"size"i}
v16@0:4^B8^B12
i12@0:4@8
@12@0:4^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}}8
@12@0:4L8
v12@0:4^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}}8
^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}}8@0:4
^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}}
v16@0:4^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}}8L12
v20@0:4@8^{opaqueCMSampleBuffer=}12I16
v20@0:4@"VCMomentsHistoryBuffer"8^{opaqueCMSampleBuffer=}12I16
v16@0:4^{opaqueVCAudioBufferList=}8I12
v20@0:4^{opaqueCMSampleBuffer=}8C12I16
v20@0:4@8I12@?16
B20@0:4I8@12^@16
B24@0:4^{__CVBuffer=}8@12^@16C20
{?=qiIq}24@0:4I8@12^{CGRect={CGPoint=ff}{CGSize=ff}}16*20
v28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8C24
{CGSize=ff}28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8C24
v60@0:4@8@12{?=qiIq}16{CGRect={CGPoint=ff}{CGSize=ff}}40C56
@16@0:4@8C12
l16@0:4@8@12
^{__CVBuffer=}12@0:4^{opaqueCMSampleBuffer=}8
v44@0:4^{__CVBuffer=}8{?=qiIq}12C36I40
v20@0:4@8@12^{opaqueCMSampleBuffer=}16
v12@0:4^{opaqueCMSampleBuffer=}8
v16@0:4@?8@12
@"NSObject<VCMovieWriterProtocol>"
@"VCMomentsHistoryBuffer"
@"VideoAttributes"
^{__CVPixelBufferPool=}
^{OpaqueVTPixelTransferSession=}
v364@0:4{VCRateControlAlgorithmConfig=^IiiiiiiiiiidddddddddddddiiddddddddIIIIBBBidddddddddddBdii}8B360
B136@0:4{?=id(?={?=IIIIIdddd[64c]}{?=IIIIIII}{?=dIIIIIQ}{?=IBBBIIdI}{?=CIIIIIIIIIdddIII}{?=IId}{?=IIId}{?=IIII}{?=IIIII}{?=IIIIBIII})}8
v16@0:4^v8B12
@"VCRateControlMediaController"8@0:4
v12@0:4@"VCRateControlMediaController"8
B24@0:4d8d16
d16@0:4d8
d20@0:4I8I12I16
{VCRateControlAlgorithmConfig="tierBitrates"^I"initialTierIndex"i"maxTierIndex"i"minTierIndex"i"lowestNonEmergencyTierIndex"i"lowestEffectiveBWETierIndex"i"lowestTierIndexReactToNoServerActivity"i"rampUpTierNumber"i"rampDownTierNumber"i"rampUpAdditionalTierAtInitial"i"rampDownAdditionalTierAtInitial"i"rampDownNOWRDThreshold"d"rampDownNOWRDAccThreshold"d"rampDownAggressiveNOWRDThreshold"d"rampDownAggressiveNOWRDAccThreshold"d"rampDownConstantOWRDDuration"d"rampDownOvershootDuration"d"rampDownOvershootNextTierRatio"d"rampUpFrozenDuration"d"rampUpSettleDuration"d"rampUpOWRDThreshold"d"rampUpNOWRDThreshold"d"rampUpNOWRDAccThreshold"d"rampUpOverBandwidthCalmDuration"d"rampUpOverBandwidthTierNumber"i"rampDownLossEventThreshold"i"rampUpFrozenPLRThreshold"d"rampUpRateLimitedRatio"d"unstableRateLimitedDuration"d"congestionWaitDuration"d"owrdWindowDuration"d"owrdShortWindowDuration"d"minimumNOWRDTimeDifference"d"owrdInitialRampUpReadyDuration"d"owrdHistorySize"I"owrdMininumHistorySize"I"fastRampDownBitrateRange"I"fastRampUpBitrateRange"I"receivedBandwidthEstimationEnabled"B"basebandAdaptationEnabled"B"rateLimitedEnabled"B"stabilizationScheme"i"rampDownNBDCDThreshold"d"rampDownAggressiveNBDCDThreshold"d"rampDownNormalizedQueuingDelayThreshold"d"rampDownMediumQueuingDelayThreshold"d"rampDownHighQueuingDelayThreshold"d"rampDownEmergencyTierCoolDownTime"d"rampUpNBDCDThreshold"d"rampUpQueuingDelayThreshold"d"rampUpNBDCDCoolDownTime"d"rampUpAudioFractionCoolDownTime"d"autoResumeDurationAfterPaused"d"oscillationDetectionEnabled"B"oscillationCoolDownTime"d"oscillationDeviationTierNumber"i"oscillationDeviationCountThreshold"i}
{?="time"[100d]"owrd"[100d]"frontIndex"i"rearIndex"i"size"I}
[5B]
[256i]
v12@0:4^{NSString=#}8
@"VCTextReceiver"
@"VCTextTransmitter"
@"<VCTextReceiverDelegate>"
@20@0:4S8@12^@16
{sockaddr_in="sin_len"C"sin_family"C"sin_port"S"sin_addr"{in_addr="s_addr"I}"sin_zero"[8c]}
@"NSObject"
@"NSObject<LoopbackSocketTunnelDelegate>"
{?="audioUnitModel"b1}
@20@0:4@8@12I16
v20@0:4I8d12
Q8@0:4
v16@0:4Q8
@"<VCRedundancyControlAlgorithm>"
@16@0:4*8I12
@12@0:4[16C]8
r*8@0:4
v12@0:4[16C]8
I16@0:4*8I12
B12@0:4C8
[16C]
@12@0:4^{tagSRTPINFO=ii{_opaque_pthread_mutex_t=l[40c]}{_opaque_pthread_cond_t=l[24c]}IISSIIQii[32C][14C][32C][14C][20C]{_opaque_pthread_mutex_t=l[40c]}^v^vII{tagSRTPCryptContext={?=I*}^{_CCCryptor}[404C]}{tagSRTPTransformPolicy=iiiiiii}I}8
^{tagSRTPINFO=ii{_opaque_pthread_mutex_t=l[40c]}{_opaque_pthread_cond_t=l[24c]}IISSIIQii[32C][14C][32C][14C][20C]{_opaque_pthread_mutex_t=l[40c]}^v^vII{tagSRTPCryptContext={?=I*}^{_CCCryptor}[404C]}{tagSRTPTransformPolicy=iiiiiii}I}8@0:4
{tagSRTPINFO="fSRTPInitialized"i"fCancelled"i"xWait"{_opaque_pthread_mutex_t="__sig"l"__opaque"[40c]}"cWait"{_opaque_pthread_cond_t="__sig"l"__opaque"[24c]}"dwSSRC"I"dwRTPROC"I"wFirstRTPSeq"S"wHighestRTPSeq"S"dwFirstRTCPSeq"I"dwHighestRTCPSeq"I"SRTPIndex"Q"masterKeyLength"i"sessionKeyLength"i"MasterKey"[32C]"MasterSalt"[14C]"SessionKey"[32C]"SessionSalt"[14C]"SessionAuthenticationKey"[20C]"MKIAccess"{_opaque_pthread_mutex_t="__sig"l"__opaque"[40c]}"masterKeyIndex"^v"masterKeyIndexInPacket"^v"SRTCPIndex"I"dwDerivationRate"I"cryptContext"{tagSRTPCryptContext="secAsn1Key"{?="Length"I"Data"*}"ccCryptorRef"^{_CCCryptor}"ccContext"[404C]}"policy"{tagSRTPTransformPolicy="cipherMode"i"masterKeyLength"i"sessionKeyLength"i"sessionSaltLength"i"authenticationMode"i"sessionAuthenticationKeyLength"i"sessionAuthenticationTagLength"i}"operatingMode"I}
v12@0:4^{tagSRTPINFO=ii{_opaque_pthread_mutex_t=l[40c]}{_opaque_pthread_cond_t=l[24c]}IISSIIQii[32C][14C][32C][14C][20C]{_opaque_pthread_mutex_t=l[40c]}^v^vII{tagSRTPCryptContext={?=I*}^{_CCCryptor}[404C]}{tagSRTPTransformPolicy=iiiiiii}I}8
l20@0:4^{?=[65c]i[65c]i^v}8@12^I16
l16@0:4^{?=[65c]i[65c]i^v}8I12
B20@0:4*8i12S16
B24@0:4^v8*12i16S20
B24@0:4r^v8*12i16S20
B44@0:4^{opaqueCMSampleBuffer=}8{?=qiIq}12i36C40
I12@0:4I8
v24@0:4^S8C12^S16C20
v24@0:4L8L12L16L20
^{__CFDictionary=}8@0:4
B16@0:4^I8*12
B12@0:4^{opaqueCMSampleBuffer=}8
v16@0:4^{opaqueCMSampleBuffer=}8C12
l32@0:4*8L12I16d20C28
l32@0:4*8i12I16d20C28
l48@0:4r*8^i12i16i20i24I28d32C40^i44
^{tagVCRealTimeThread=II{_opaque_pthread_mutex_t=l[40c]}{_opaque_pthread_mutex_t=l[40c]}{_opaque_pthread_cond_t=l[24c]}^?^v^{OpaqueFigThread}i[60c]II}
^{opaqueCMSampleBuffer=}
^{opaqueCMBufferQueue=}
@"VCMediaStreamStats"
^{opaqueRTCReporting=}
{?="encoderVTable"^{?}"type"i"encoderHandle"^{tagHANDLE}}
^{tagVCMemoryPool={?=^vl}I}
@16@0:4i8@12
@"<VCCaptionsSource>"
v20@0:4i8B12@16
v16@0:4i8C12
v20@0:4i8B12@"NSError"16
v16@0:4i8@"NSData"12
v20@0:4i8*12@16
@20@0:4@8@12@16
v16@0:4B8@12
@16@0:4@8^B12
@"VCIDRScheduler"
@"NSArray"
B16@0:4r^v8i12
@16@0:4I8C12
B12@0:4S8
@24@0:4B8B12B16i20
@36@0:4i8i12i16@20B24B28i32
v20@0:4i8B12B16
v16@0:4B8B12
B12@0:4i8
B16@0:4i8i12
L12@0:4i8
B20@0:4i8i12i16
f16@0:4i8L12
I16@0:4i8i12
^{opaqueCMSimpleQueue=}
v16@0:4@"VCAudioPowerSpectrumMeter"8@"NSDictionary"12
@"VCAudioRuleCollection"
@20@0:4i8@?12^@16
@20@0:4@8@?12^@16
B20@0:4@8@?12^@16
v16@0:4I8@?12
v16@0:4@8@?12
@16@0:4i8@?12
@20@0:4i8@?12@16
C12@0:4i8
v12@0:4@"<VCMediaStreamSyncSourceDelegate>"8
v12@0:4@"VCAudioIO"8
I24@0:4I8i12d16
v24@0:4I8i12d16
i12@0:4^{opaqueVCAudioBufferList=}8
@16@0:4i8I12
@20@0:4i8I12L16
i16@0:4i8i12
B16@0:4i8@12
v16@0:4i8^{opaqueVCAudioBufferList=}12
B16@0:4^{_RTCP_RECEPTION_REPORT=IIIIIIIIC}8*12
v16@0:4@8I12
^{__CFDictionary=}12@0:4@8
^{__CFString=}8@0:4
v24@0:4@8d12I20
v16@0:4i8i12
v16@0:4^{?=IId}8f12
v12@0:4^{?=IId}8
@"DTMFEventHandler"
@"WRMClient"
@"VCAudioPayload"
^{tagVCAudioReceiver={tagVCAudioReceiverConfig=I[3{tagVCAudioReceiverStream=^{tagHANDLE}S}]^v^vIiiB^{opaqueRTCReporting}iB^{__CFString}^{__CFString}SB}^v^v^{opaqueVCJitterBuffer}B^{AudioStreamBasicDescription}id{?=qiIq}^{tagVCRealTimeThread}{tagVCAudioReceiverReportingTask=^{opaqueRTCReporting}i^{tagHANDLE}}B{_opaque_pthread_mutex_t=l[40c]}{_opaque_pthread_mutex_t=l[40c]}{tagVCAudioDecoderList=^{tagDecoderSettings}I}I{tagVCAudioReceiverStatistics=AI}^{tagWRMMetricsInfo}^?{tagVCAudioReceiverCallbackContext=^v^?^?}^?{tagVCAudioReceiverCallbackContext=^v^?^?}I[2{_RTCPPacketList=(tagNTP=Q{?=II})C[10^{tagRTCPPACKET}][1472C]I[1472C]}]dI[300{tagPacketHistoryInfo=ISIBB}]SS^{tagVCAudioReceiverStream}SSBSSSSI}
@"VCAudioTransmitter"
@"AVTelephonyInterface"
[2{_METER_INFO="frequencyMeteringEnabled"B"fftMeter"@"FFTMeter"}]
@"VCAudioIO"
@"NSNumber"
@20@0:4@8I12^@16
@16@0:4@8^@12
@20@0:4i8I12^@16
v32@0:4r^v8I12{?=cSSC}16^{?=IQSCc[12S]CS{?=SSSSS}d}24@?28
v32@0:4r^^v8^I12^{?=cSSC}16i20^^{?}24@?28
l8@0:4
@"IDSDatagramChannel"
v24@0:4S8@12I16I20
v16@0:4S8^{?=dCSIII}12
{?=dCSIII}8@0:4
i16@0:4B8@12
[128{?="requestTime"d"linkID"C"statsIdentifier"S"totalLocalMediaPacketSent"I"totalLocalMediaPacketReceived"I"totalServerStatsByteUsed"I}]
d16@0:4S8S12
@16@0:4i8B12
@20@0:4@8i12@16
v16@0:4^{opaqueCMSampleBuffer=}8I12
^{opaqueCMSampleBuffer=}12@0:4I8
B12@0:4@"<VCMediaStreamSyncSource>"8
v20@0:4@8B12@16
v16@0:4@8c12
v20@0:4@8@12B16
v16@0:4@8S12
v16@0:4@8^{NSString=#}12
v24@0:4@8B12@16@20
v16@0:4@8C12
v36@0:4@8{?=qiIq}12
v20@0:4@8S12S16
v20@0:4@"<VCMediaStreamProtocol>"8B12@"NSError"16
v12@0:4@"<VCMediaStreamProtocol>"8
v16@0:4@"<VCMediaStreamProtocol>"8@"NSArray"12
v16@0:4@"<VCMediaStreamProtocol>"8c12
v20@0:4@"<VCMediaStreamProtocol>"8@"NSData"12B16
v16@0:4@"<VCMediaStreamProtocol>"8S12
v16@0:4@"<VCMediaStreamProtocol>"8B12
v16@0:4@"<VCMediaStreamProtocol>"8^{NSString=#}12
v16@0:4@"<VCMediaStreamProtocol>"8@"NSDictionary"12
v24@0:4@"<VCMediaStreamProtocol>"8B12@"NSError"16@"NSDictionary"20
v16@0:4@"<VCMediaStreamProtocol>"8C12
v36@0:4@"<VCMediaStreamProtocol>"8{?=qiIq}12
v20@0:4@"<VCMediaStreamProtocol>"8S12S16
@28@0:4i8i12f16i20f24
@20@0:4i8i12f16
@24@0:4i8i12f16i20
v20@0:4i8i12f16
v12@0:4^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=i{tagIPPORT=i[16c](?=I[16C])S}}{?=I{?=cSSC}})^{tagVCSourceDestinationInfo}}8
B12@0:4^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=i{tagIPPORT=i[16c](?=I[16C])S}}{?=I{?=cSSC}})^{tagVCSourceDestinationInfo}}8
B12@0:4@"<VCConnectionProtocol>"8
@"NSUUID"8@0:4
@16@0:4^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}}8I12
@12@0:4^{tagCANDIDATEPAIR={tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}iSS[8C]{tagIPPORT=i[16c](?=I[16C])S}Iiiiiiiii^{tagCANDIDATEPARIR}}8
B12@0:4^{tagIPPORT=i[16c](?=I[16C])S}8
@12@0:4^{tagIPPORT=i[16c](?=I[16C])S}8
@16@0:4I8^{opaqueRTCReporting=}12
v12@0:4@"<VCMomentsMessengerDelegate>"8
B16@0:4@"NSDictionary"8^@12
@16@0:4I8@12
v20@0:4@8B12l16
L12@0:4@8
@"VCMomentsHistory"
^{tagVCAudioRedPayload=i*iIBCCC}16@0:4^{tagVCAudioRedPayload=i*iIBCCC}8@12
B16@0:4^{tagVCAudioRedPayload=i*iIBCCC}8I12
*12@0:4^{tagVCAudioRedPayload=i*iIBCCC}8
^{tagVCAudioRedPayload=i*iIBCCC}12@0:4I8
@12@0:4^{tagVCAudioRedPayload=i*iIBCCC}8
B16@0:4@8^v12
^{tagVCAudioRedPayload=i*iIBCCC}12@0:4^{tagVCAudioRedPayload=i*iIBCCC}8
v12@0:4^{tagVCAudioRedPayload=i*iIBCCC}8
@28@0:4i8I12I16I20B24
^{tagVCAudioRedPayload=i*iIBCCC}28@0:4*8i12i16I20C24
{tagVCAudioRedPayload="payloadType"i"buffer"*"bufferLength"i"timestamp"I"isRedAudio"B"redCount"C"sequenceOffset"C"priority"C}
@"NSPointerArray"
[1472C]
[9{tagVCAudioRedPayload="payloadType"i"buffer"*"bufferLength"i"timestamp"I"isRedAudio"B"redCount"C"sequenceOffset"C"priority"C}]
B16@0:4^i8i12
B16@0:4^@8^@12
v24@0:4i8i12^{imageTag=iiiiiiifi}16i20
v36@0:4i8i12@16i20^{imageTag=iiiiiiifi}24B28B32
v20@0:4i8^i12^i16
v20@0:4B8i12i16
B20@0:4^B8^i12i16
@16@0:4^{tagHANDLE=i}8@12
v24@0:4^d8^d12^d16^d20
v16@0:4^I8^d12
v28@0:4S8I12I16^d20^I24
B24@0:4C8S12S16^S20
v20@0:4I8I12^B16
v24@0:4I8C12I16B20
B16@0:4i8S12
v12@0:4^{VCRateControlMediaSuggestion=BBBBBBB}8
v36@0:4d8d16I24I28B32
B16@0:4d8
@"SenderLargeFrameInfo"
I16@0:4I8I12
v24@0:4@8@12@16@20
l32@0:4^{tagCANDIDATEPAIR={tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}iSS[8C]{tagIPPORT=i[16c](?=I[16C])S}Iiiiiiiii^{tagCANDIDATEPARIR}}8i12^i16^i20^i24^i28
l12@0:4@8
l16@0:4^{tagIPPORT=i[16c](?=I[16C])S}8B12
l32@0:4@8B12i16^i20^i24^i28
l28@0:4@8B12i16^i20^i24
v16@0:4i8B12
v20@0:4^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=i{tagIPPORT=i[16c](?=I[16C])S}}{?=I{?=cSSC}})^{tagVCSourceDestinationInfo}}8^B12^B16
@16@0:4^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=i{tagIPPORT=i[16c](?=I[16C])S}}{?=I{?=cSSC}})^{tagVCSourceDestinationInfo}}8^B12
v28@0:4C8i12i16B20B24
I16@0:4C8B12
@"<VCConnectionProtocol>"
@40@0:4^{__CVBuffer=}8{?=qiIq}12@36
@48@0:4^{__CVBuffer=}8^{__CVBuffer=}12{?=qiIq}16@40@44
v12@0:4^{__CVBuffer=}8
^{__CVBuffer=}8@0:4
{?=qiIq}8@0:4
v32@0:4{?=qiIq}8
^{__CVBuffer=}
{?="value"q"timescale"i"flags"I"epoch"q}
@"NSData"
v24@0:4@8@12B16@20
v28@0:4@8@12B16B20@24
v24@0:4@8@12C16@20
v20@0:4@8@12@16
v20@0:4@"VCSession"8B12@"NSError"16
v16@0:4@"VCSession"8@"NSError"12
v24@0:4@"VCSession"8@"NSString"12B16@"NSError"20
v24@0:4@"VCSession"8@"NSDictionary"12B16@"NSError"20
v28@0:4@"VCSession"8@"NSString"12B16B20@"NSError"24
v20@0:4@"VCSession"8@"NSString"12B16
v24@0:4@"VCSession"8@"NSString"12C16@"NSString"20
v20@0:4@"VCSession"8@"NSString"12@"NSError"16
B16@0:4B8S12
@16@0:4I8B12
@"VCSessionBandwidthAllocationTable"
v12@0:4@"VCMediaControlInfo"8
l20@0:4^?8^?12^v16
l12@0:4^v8
^v20@0:4r*8L12^{?=diIII}16
^{__CFDictionary=}
v12@0:4@"VCAudioPowerSpectrum"8
@24@0:4S8d12@20
{atomic_flag="_Value"AB}
@"<VCMomentsMessenger>"
v20@0:4i8@12@16
v24@0:4i8@12@16@20
v20@0:4i8@"NSDictionary"12@"NSError"16
v24@0:4i8@"NSDictionary"12@"NSURL"16@"NSError"20
v20@0:4i8@"NSDictionary"12B16
v24@0:4@8^{opaqueCMSampleBuffer=}12C16I20
v20@0:4@8^{opaqueVCAudioBufferList=}12I16
v24@0:4@"VCMediaStream"8^{opaqueCMSampleBuffer=}12C16I20
v20@0:4@"VCMediaStream"8^{opaqueVCAudioBufferList=}12I16
@"VCMoments"
v16@0:4f8I12
@"NSObject<VCAudioPowerLevelMonitorDelegate>"
@28@0:4^{tagHANDLE=i}8@12^{opaqueRTCReporting=}16I20i24
v16@0:4B8I12
v28@0:4B8I12I16d20
v12@0:4^{?=qiIq}8
v16@0:4^I8i12
v20@0:4^{tagRTCP_RRB=Ib8b24IIII}8(tagNTP=Q{?=II})12
l32@0:4*8L12I16d20B28
v12@0:4^{opaqueCMFormatDescription=}8
l16@0:4^{opaqueCMSampleBuffer=}8B12
B16@0:4^{opaqueCMBufferQueue=}8I12
B12@0:4^{__CVBuffer=}8
l36@0:4^{__CVBuffer=}8{?=qiIq}12
^{OpaqueCMMemoryPool=}
^{__CFAllocator=}
^{OpaqueVTDecompressionSession=}
@"VCVideoStreamRateAdaptation"
^{opaqueCMFormatDescription=}
^{OpaqueFigThread=}
^{VideoPacketBuffer_t=}
@"VCMediaStreamSynchronizer"
I20@0:4C8B12B16
@"NSArray"8@0:4
@"NSNumber"8@0:4
@48@0:4@8Q12@20@24@28i32L36@40@44
B16@0:4@8@12
B16@0:4@8C12
@16@0:4@8B12
v20@0:4d8B16
v20@0:4@8d12
@"VCVideoQualityInfo"
{_VCSessionParticipantProminenceInfo="isAudioActive"B"audioActiveProbabilityThreshold"I"audioInactiveProbabilityThreshold"I"audioActiveAccumulationThreshold"I"audioInactiveAccumulationThreshold"I"audioActiveCount"I"lastProminence"I"refreshCounter"I}
@"TimingCollection"
v16@0:4@"<VCConnectionProtocol>"8@"<VCConnectionProtocol>"12
v16@0:4@"<VCConnectionProtocol>"8B12
v16@0:4B8@"<VCConnectionProtocol>"12
v12@0:4@"<VCConnectionProtocol>"8
v16@0:4^v8@12
v16@0:4^v8@"NSDictionary"12
@16@0:4L8@12
@28@0:4L8B12@16@20B24
B20@0:4^@8@12^@16
@"VCDatagramChannelIDS"
@"VCIDSSessionInfoSynchronizer"
@"<VCVideoReceiverDelegate>"
@"<VCMediaStreamSyncSource>"
@28@0:4^{tagHANDLE=i}8^{opaqueRTCReporting=}12@16I20i24
@"VCVideoStreamRateController"
I16@0:4d8
@24@0:4^{tagVCVideoReceiverConfig=I[4{tagVCVideoReceiverStreamConfig=^{tagHANDLE}SSBI[4S][4S]S}]BliiiIiiiiiiB^v^?^?^?Q}8@12^{opaqueRTCReporting=}16@20
v40@0:4^{__CVBuffer=}8{?=qiIq}12C36
v24@0:4^S8i12B16B20
v16@0:4^?8^v12
r*12@0:4i8
l12@0:4^{?=iiQQQ}8
l16@0:4i8B12
B16@0:4i8B12
i16@0:4i8B12
v32@0:4^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=i{tagIPPORT=i[16c](?=I[16C])S}}{?=I{?=cSSC}})^{tagVCSourceDestinationInfo}}8i12B16B20i24B28
B16@0:4@8B12
B20@0:4@8B12i16
^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=i{tagIPPORT=i[16c](?=I[16C])S}}{?=I{?=cSSC}})^{tagVCSourceDestinationInfo}}8@0:4
v24@0:4^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=i{tagIPPORT=i[16c](?=I[16C])S}}{?=I{?=cSSC}})^{tagVCSourceDestinationInfo}}8i12B16B20
v12@0:4^{?=dddBi}8
@"VCConnectionHealthMonitor"
{?="lastReceivedPacketTimestamp"d"lastReportTimestamp"d"noPacketInterval"d"isConnectionPaused"B"type"i}
@"VCStatsRecorder"
v16@0:4^I8^I12
v12@0:4^{?=Q}8
v12@0:4^{?=iiQQQ}8
@16@0:4@8@12
@"VCWCMClient"
@"VCConnectionManager"
@"VCRecommendedNetworkSettings"
@"<VCNetworkFeedbackControllerDelegate>"
{VCAudioClientSettings="isValid"B"enableAudioPreWarming"B"operatingMode"i"deviceRole"i}
@20@0:4^{__CVBuffer=}8@12C16
{CGSize=ff}12@0:4i8
{CGSize=ff}16@0:4{CGSize=ff}8
v20@0:4^{__CVBuffer=}8L12L16
{CGRect={CGPoint=ff}{CGSize=ff}}40@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8{CGSize=ff}24{CGSize=ff}32
i20@0:4^^{__CVPixelBufferPool}8f12f16
i24@0:4{CGSize=ff}8{CGSize=ff}16
{?=id(?={?=IIIIIdddd[64c]}{?=IIIIIII}{?=dIIIIIQ}{?=IBBBIIdI}{?=CIIIIIIIIIdddIII}{?=IId}{?=IIId}{?=IIII}{?=IIIII}{?=IIIIBIII})}12@0:4^{?=iSd(?={?=SCSCcIIII}{?=SSS[6{?=CS[500S]}]}{?=SS})}8
v20@0:4d8I16
v32@0:4d8d16d24
{?="type"i"version"S"arrivalTime"d"notes"(?="report"{?="radioTechnology"S"transmissionAntenna"C"numberOfFlows"S"flowType"C"transmissionPower"c"queueDepth1"I"queueDepth2"I"basebandTransmissionBytes"I"lastTransmissionTimestamp"I}"dropAck"{?="transactionID"S"totalNumDropped"S"numberOfPayloadTypes"S"PTSpecific"[6{?="payloadType"C"numberOfPacketDropped"S"awDroppedSN"[500S]}]}"codecRateChange"{?="currentBitrate"S"suggestedBitrate"S})}
{?="time"[15d]"bdcd"[15d]"delay"[15d]"frontIndex"i"rearIndex"i"size"I}
{?="time"[15d]"transmittedBytes"[15I]"frontIndex"i"rearIndex"i"size"I}
B20@0:4@8@12^@16
B24@0:4^{?=iSd(?={?=SCSCcIIII}{?=SSS[6{?=CS[500S]}]}{?=SS})}8d12^@20
v12@0:4^{?=iSd(?={?=SCSCcIIII}{?=SSS[6{?=CS[500S]}]}{?=SS})}8
v24@0:4C8S12S16^S20
@"VCBasebandMetrics"
i16@0:4@8@12
@28@0:4@8C12I16I20I24
@44@0:4@8C12I16I20I24B28I32I36B40
@"<VCSessionDownlinkBandwidthAllocatorClient>"
v20@0:4@8@"NSData"12@"NSString"16
v28@0:4i8i12i16@20@24
v16@0:4f8i12
v16@0:4r^v8i12
v28@0:4@8@12B16f20i24
@24@0:4@8L12C16^i20
B16@0:4I8^@12
{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}
@"NSMutableData"
@"TCPBufferPool"
*12@0:4i8
v12@0:4*8
^{tagBufferNode=*ii^{tagBufferNode}}
v36@0:4d8d16d24B32
B16@0:4^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=i{tagIPPORT=i[16c](?=I[16C])S}}{?=I{?=cSSC}})^{tagVCSourceDestinationInfo}}8@12
B12@0:4^i8
v16@0:4i8I12
l12@0:4i8
@20@0:4I8i12^i16
B16@0:4^{SSLContext=}8^^{__CFError}12
v24@0:4i8i12@16@20
B40@0:4@8L12@16B20@24i28@32^@36
v12@0:4r^{?=QQQQQQQQQQQQQQQQQQQQQQQQQQQQ}8
v12@0:4r^{?=iiiI}8
@20@0:4@8I12B16
@32@0:4@8^I12@16d20^@28
B20@0:4B8B12^@16
B16@0:4B8^@12
v20@0:4@8I12B16
B32@0:4^{opaqueVCAudioBufferList=}8^I12^d16*20*24^i28
v16@0:4I8L12
v28@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8L24
^{tagHANDLE=i}8@0:4
^{tagVCAudioReceiver={tagVCAudioReceiverConfig=I[3{tagVCAudioReceiverStream=^{tagHANDLE}S}]^v^vIiiB^{opaqueRTCReporting}iB^{__CFString}^{__CFString}SB}^v^v^{opaqueVCJitterBuffer}B^{AudioStreamBasicDescription}id{?=qiIq}^{tagVCRealTimeThread}{tagVCAudioReceiverReportingTask=^{opaqueRTCReporting}i^{tagHANDLE}}B{_opaque_pthread_mutex_t=l[40c]}{_opaque_pthread_mutex_t=l[40c]}{tagVCAudioDecoderList=^{tagDecoderSettings}I}I{tagVCAudioReceiverStatistics=AI}^{tagWRMMetricsInfo}^?{tagVCAudioReceiverCallbackContext=^v^?^?}^?{tagVCAudioReceiverCallbackContext=^v^?^?}I[2{_RTCPPacketList=(tagNTP=Q{?=II})C[10^{tagRTCPPACKET}][1472C]I[1472C]}]dI[300{tagPacketHistoryInfo=ISIBB}]SS^{tagVCAudioReceiverStream}SSBSSSSI}8@0:4
@"NSObject<VCCallSessionDelegate>"
@"VCCallInfo"
@"VCMediaNegotiator"
@"VCImageAttributeRules"
@"AVCRateController"
@"GKRingBuffer"
@"NSObject<VideoConferenceChannelQualityDelegate>"
@"VCCallLinkCongestionDetector"
{CGSize="width"f"height"f}
@"VCSessionMessaging"
@"VCControlChannel"
@"VCBitrateArbiter"
@"VCCaptionsReceiver"
^{SKEStateOpaque=}
^{__CFData=}
@"VCSecureDataChannel"
^{tagWRMMetricsInfo=B^{tagHANDLE}IIIIIIIIIIIQQQi^?{?=^v^?^?}{_opaque_pthread_mutex_t=l[40c]}IIIIIIIII}
@"VCTransportSession"
v20@0:4@8I12@16
v20@0:4@"VCSecureDataChannel"8I12@"NSData"16
v12@0:4@"VCCaptionsTranscription"8
i32@0:4i8L12r*16*20^v24^i28
l16@0:4@8^I12
B24@0:4L8@12i16^@20
l16@0:4r^^{__CFData}8^i12
^{__SecIdentity=}8@0:4
i20@0:4B8i12@16
v24@0:4*8*12^v16^i20
B72@0:4^i8i12^i16i20^i24i28@32i36i40^^{imageTag}44^i48^^{imageTag}52^i56*60^i64^@68
i32@0:4L8r*12*16^v20^i24^@28
v24@0:4^^i8^i12^^i16^i20
v16@0:4^^i8^i12
@12@0:4^@8
l16@0:4^v8B12
B24@0:4i8@12B16B20
B24@0:4@8i12B16B20
i16@0:4^^i8i12
@16@0:4^i8i12
B16@0:4^@8B12
B36@0:4i8i12i16^i20^i24^i28^i32
I12@0:4@8
v16@0:4i8r*12
v20@0:4i8d12
v20@0:4i8L12@16
l16@0:4B8B12
v12@0:4^{__SecIdentity=}8
@20@0:4i8@12B16
B20@0:4*8@12@16
B24@0:4r*8*12I16r*20
v20@0:4B8i12B16
B20@0:4B8@12B16
l16@0:4^{tagHANDLE=i}8@12
l20@0:4^{tagHANDLE=i}8@12B16
v16@0:4@"VCTransportSessionLegacy"8@"NSData"12
v16@0:4@"VCTransportSessionLegacy"8@"NSDictionary"12
v20@0:4^v8I12I16
i16@0:4@8i12
i16@0:4@"NSString"8i12
v19@0:4^v8{VCRateControlMediaSuggestion=BBBBBBB}12
@24@0:4d8d16
v16@0:4*8*12
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
v16@0:4@"VCAudioPowerLevelMonitor"8B12
v16@0:4@"VCMoments"8@"NSDictionary"12
d12@0:4L8
v36@0:4@8L12@16I20@?24@28@32
v28@0:4@8L12@?16@20@24
@20@0:4@8^I12^@16
i12@0:4r*8
B20@0:4^B8L12^@16
B12@0:4L8
v16@0:4B8L12
B20@0:4B8L12^@16
B20@0:4d8L16
B52@0:4@8L12L16@20B24@28B32@36i40@44^@48
B48@0:4@8L12@16B20@24B28@32i36@40^@44
v16@0:4L8@12
v20@0:4L8@12i16
{CGSize=ff}12@0:4L8
v20@0:4L8@12B16
v16@0:4i8S12
C12@0:4f8
f12@0:4C8
@"VideoConferenceManager"
@"FFTMeter"
@"VCAudioPowerSpectrumSource"
@"VCCallSession"
@"NSObject<VideoConferenceSpeakingDelegate>"
@"VCAudioPowerLevelMonitor"
@"GKNATObserver"
@"VCVideoRule"
B16@0:4L8I12
I24@0:4I8I12I16*20
v16@0:4^I8I12
v28@0:4@8I12d16i24
v20@0:4C8@12I16
B16@0:4@8^{opaqueVCAudioBufferList=}12
@12@0:4^{tagVCSourceDestinationInfo=i(?={?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{?=BS}}{?=i{tagIPPORT=i[16c](?=I[16C])S}}{?=I{?=cSSC}})^{tagVCSourceDestinationInfo}}8
i12@0:4L8
v20@0:4L8B12@16
v24@0:4@8@12@16L20
v32@0:4@8B12I16@20@24@28
v20@0:4@8i12@16
v20@0:4@8*12*16
B56@0:4@8^{__CVBuffer=}12{?=qiIq}16@40@44B48B52
v24@0:4@8@12L16L20
B32@0:4@8^@12@16@20i24B28
B20@0:4i8@12B16
B20@0:4@8^@12B16
B20@0:4@8B12^@16
v24@0:4B8B12B16B20
v64@0:4@8^{VoiceIOFarEndVersionInfo=[64C][64C]I}12{AudioStreamBasicDescription=dIIIIIIII}16I56@?60
v24@0:4@8I12d16
v32@0:4@"VCCallSession"8B12I16@"NSString"20@"NSString"24@"NSError"28
v20@0:4@"VCCallSession"8i12@"NSError"16
v16@0:4@"VCCallSession"8@"NSError"12
B56@0:4@"VCCallSession"8^{__CVBuffer=}12{?=qiIq}16@"VideoAttributes"40@"VideoAttributes"44B48B52
B20@0:4@"VCCallSession"8B12^@16
v20@0:4@"VCCallSession"8B12@"NSError"16
v16@0:4@"VCCallSession"8@"NSDictionary"12
v20@0:4@"VCCallSession"8d12
v16@0:4@"VCCallSession"8B12
v20@0:4@"VCCallSession"8*12*16
v16@0:4@"VCCallSession"8@"VideoAttributes"12
v24@0:4@"VCCallSession"8L12B16B20
v20@0:4@"VCCallSession"8L12B16
v16@0:4@"VCCallSession"8@"VCVideoRule"12
v20@0:4@"VCCallSession"8@"NSData"12L16
v24@0:4@"VCCallSession"8@"NSString"12@"NSString"16L20
v24@0:4@"VCCallSession"8@"VCVideoRule"12@"VCVideoRule"16@"NSString"20
v24@0:4@"VCCallSession"8@"NSData"12L16L20
v12@0:4@"VCCallSession"8
v20@0:4@"VCCallSession"8B12L16
v24@0:4@"VCCallSession"8B12L16@"NSError"20
v20@0:4@"VCCallSession"8L12L16
B32@0:4@"VCCallSession"8^@12@"VCVideoRule"16@"VCVideoRule"20i24B28
B16@0:4@"VCCallSession"8^@12
B20@0:4@"VCCallSession"8^@12B16
v16@0:4@"VCCaptionsTranscription"8I12
v64@0:4@"VCCallSession"8^{VoiceIOFarEndVersionInfo=[64C][64C]I}12{AudioStreamBasicDescription=dIIIIIIII}16I56@?<v@?B@"NSError">60
v16@0:4@"VCCallSession"8@?<v@?B@"NSError">12
v24@0:4@"VCCallSession"8I12d16
v16@0:4@"VCCallSession"8i12
v12@0:4@"NSString"8
@"VCVideoRule"8@0:4
v12@0:4@"NSDictionary"8
v20@0:4@8@12^{tagIPPORT=i[16c](?=I[16C])S}16
v20@0:4@"LoopbackSocketTunnel"8@"NSData"12^{tagIPPORT=i[16c](?=I[16C])S}16
B24@0:4@8B12B16^@20
v20@0:4f8L12B16
v16@0:4L8B12
v20@0:4B8L12i16
v20@0:4*8i12S16
v28@0:4^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}}8B12B16@20i24
B16@0:4@8i12
B28@0:4@8@12B16C20^@24
@16@0:4L8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}}12
v32@0:4B8B12d16@24@?28
@28@0:4B8B12d16^@24
l28@0:4^*8L12^i16d20
d12@0:4B8
{tagIPPORT=i[16c](?=I[16C])S}12@0:4B8
I12@0:4^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}}8
@"VCTransport"
^{__SecIdentity=}
@"TCPTunnelClient"
@"NSObject<VideoConferenceRealTimeChannel>"
@"LoopbackSocketTunnel"
@"NSCondition"
@"GKInterfaceListener"
{VoiceIOFarEndVersionInfo=[64C][64C]I}8@0:4
v140@0:4{VoiceIOFarEndVersionInfo=[64C][64C]I}8
{VoiceIOFarEndVersionInfo="farEndHwModel"[64C]"farEndOSVersion"[64C]"farEndAUVersion"I}
v12@0:4^{tagAudioFrame=iiBSI[800C]ii[16C]Ciidi^?^v^{tagDecoderSettings}BICS^{tagAudioFrame}^{tagAudioFrame}}8
@12@0:4^{_VCTextReceiverConfiguration=^{tagHANDLE}I}8
l12@0:4^{tagAudioPacket=iiiBSIidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}8
v12@0:4^{tagVCRealTimeThreadParameters=i}8
v12@0:4^{tagAudioPacketArray=[100^{tagAudioPacket}]II}8
v16@0:4^{tagAudioPacket=iiiBSIidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}8^{tagAudioPacketArray=[100^{tagAudioPacket}]II}12
^{tagAudioFrame=iiBSI[800C]ii[16C]Ciidi^?^v^{tagDecoderSettings}BICS^{tagAudioFrame}^{tagAudioFrame}}24@0:4^{tagAudioPacket=iiiBSIidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}8*12i16I20
B12@0:4^{tagAudioPacket=iiiBSIidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}8
@"VCTextJitterBuffer"
v24@0:4@8L12B16@20
v24@0:4@8d12L20
v24@0:4@"VideoConference"8B12L16@"NSError"20
v20@0:4@"VideoConference"8L12@"NSError"16
v24@0:4@"VideoConference"8L12@"NSError"16@"NSDictionary"20
v28@0:4@"VideoConference"8B12L16@"NSDictionary"20@"NSError"24
v24@0:4@"VideoConference"8L12B16@"NSError"20
v24@0:4@"VideoConference"8d12L20
v20@0:4@"VideoConference"8B12L16
v16@0:4@"VideoConference"8L12
v20@0:4@"VideoConference"8@"VideoAttributes"12L16
v16@0:4@"VideoConference"8@"NSData"12
v16@0:4@"VideoConference"8f12
v16@0:4@"VideoConference"8B12
v20@0:4@"VideoConference"8L12@"NSDictionary"16
v24@0:4@"VideoConference"8L12B16B20
v20@0:4@"VideoConference"8L12B16
v20@0:4@"VideoConference"8@"NSData"12L16
v20@0:4@"VideoConference"8L12L16
B12@0:4^{tagHANDLE=i}8
@"VideoConference"
@"ICEResultWaitQueue"
@"VCMediaNegotiationBlobAudioSettings"
@"VCMediaNegotiationBlobCaptionsSettings"
@"VCMediaNegotiationBlobMomentsSettings"
@"VCMediaNegotiationBlobVideoSettings"
{?="ntpTime"b1"basebandCodecSampleRate"b1"blobVersion"b1"allowDynamicMaxBitrate"b1"allowsContentsChangeWithAspectPreservation"b1}
v20@0:4^I8^d12^{opaqueCMSampleBuffer=}16
[20d]
v20@0:4@8i12^{imageTag=iiiiiiifi}16
v16@0:4@8^{imageTag=iiiiiiifi}12
v24@0:4i8^{imageTag=iiiiiiifi}12i16@20
v28@0:4@8C12i16i20@24
v24@0:4@8@12i16i20
B24@0:4@8i12i16i20
B16@0:4^i8^i12
v20@0:4@"VCSessionParticipant"8B12@"NSError"16
v16@0:4@"VCSessionParticipant"8@"NSError"12
v12@0:4^{_RTCPPacketList=(tagNTP=Q{?=II})C[10^{tagRTCPPACKET}][1472C]I[1472C]}8
v16@0:4@"VCMediaStream"8@"VCMasterKeyIndex"12
I12@0:4C8
I12@0:4S8
B12@0:4@"NSDictionary"8
v24@0:4@8B12B16@20
v20@0:4@8C12@16
v24@0:4@"VCSessionParticipant"8B12B16@"NSError"20
v16@0:4@"VCSessionParticipant"8B12
v20@0:4@"VCSessionParticipant"8C12@"NSString"16
v12@0:4@"VCSessionParticipant"8
v16@0:4@"VCSessionParticipant"8S12
v20@0:4@"VCSessionParticipant"8S12S16
v12@0:4@"VCRecommendedNetworkSettings"8
@24@0:4@8@12@16i20
*12@0:4I8
v16@0:4S8@12
B16@0:4@8^B12
v20@0:4^{tagRTCPPACKET={tagRTCPCOMMON=b5b1b2b8S}(?={tagSR_RTCP=IIIIII[1{tagRTCP_RRB=Ib8b24IIII}]}{tagRR_RTCP=I[1{tagRTCP_RRB=Ib8b24IIII}]}{tagSDES_RTCP=I{tagRTCPSDES=CC[258c]}}{tagBYE_RTCP=I}{tagRTCP_APP=II}{tagRTCP_APP_LTRP={tagRTCP_APP=II}I}{tagFIR_RTCP=I[10S]}{tagNACK_RTCP=ISS}{tagRTCP_PSFB_PLI={tagRTCP_FBCOMMON=II}}{tagRTCP_PSFB_SLI={tagRTCP_FBCOMMON=II}I}{tagRTCP_PSFB_FIR={tagRTCP_FBCOMMON=II}IC[3C]}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_PSFB_TST={tagRTCP_FBCOMMON=II}II}{tagRTCP_RTPFB_GNACK={tagRTCP_FBCOMMON=II}SS}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagRTCP_RTPFB_TMMB={tagRTCP_FBCOMMON=II}II}{tagRTCP_CUSTOM_SR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_SENDER_INFO=IIIIb4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]}{tagRTCP_CUSTOM_RR={tagRTCP_APP=II}I{tagRTCP_CUSTOM_RECEIVER_INFO=b4b4}[1{tagRTCP_CUSTOM_RECEPTION_REPORT=Ib4b12SSCC}]})}8(tagNTP=Q{?=II})12
v20@0:4S8@12@16
v24@0:4S8@12@16@20
v28@0:4S8@12@16@20S24
v32@0:4^{__CFDictionary=}8S12@16@20@24S28
^{tagVCMediaQueue=}8@0:4
v12@0:4^{tagVCMediaQueue=}8
@"<VCSessionDelegate>"
@"VCControlChannelMultiWay"
@"VCSessionConfiguration"
@"VCSessionParticipantLocal"
@"VCSessionStatsController"
@"VCNetworkFeedbackController"
@"VCSecurityKeyManager"
@"VCSessionDownlinkBandwidthAllocator"
^{tagVCMediaQueue=}
@"NSError"
@16@0:4I8I12
v20@0:4@8@12^{AudioEventQueue_t=}16
v16@0:4^{AudioStreamBasicDescription=dIIIIIIII}8@12
@12@0:4@?8
B20@0:4^{AudioStreamBasicDescription=dIIIIIIII}8@12^I16
v16@0:4@8^{AudioStreamBasicDescription=dIIIIIIII}12
@"VCAudioRelay"
@"IDSDataChannelLinkContext"
@36@0:4C8{CGSize=ff}12{CGRect={CGPoint=ff}{CGSize=ff}}20
{CGSize=ff}8@0:4
v16@0:4{CGSize=ff}8
{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4
v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
{CGRect="origin"{CGPoint="x"f"y"f}"size"{CGSize="width"f"height"f}}
S16@0:4d8
@24@0:4i8B12B16I20
@12@0:4^{_VCTextTransmitterConfiguration=^{tagHANDLE}IBIf}8
v28@0:4@8I12^i16^*20^i24
{_VCTextTransmitterConfiguration="rtpHandle"^{tagHANDLE}"sampleRate"I"isRedEnabled"B"numRedundantPayloads"I"txIntervalMin"f}
@"VCAudioRedBuilder"
@"NSLock"
@24@0:4i8@12@16@20
@12@0:4C8
v16@0:4@"VCSessionUplinkVideoStreamController"8@"NSDictionary"12
@24@0:4@8@12i16@20
B16@0:4f8B12
@"VCSessionUplinkBandwidthAllocator"
@"VCSessionUplinkVideoStreamController"
^{opaqueVCVoiceDetector=}
I20@0:4@8i12I16
@28@0:4i8i12@16@20@24
@32@0:4i8i12i16@20@24@28
@20@0:4i8i12@16
v16@0:4^{opaqueVCAudioBufferList=}8r^{_VCAudioIOControllerTime=IQ}12
v16@0:4B8@"NSError"12
@32@0:4i8i12C16B20@24i28
B24@0:4i8i12C16B20
v12@0:4^{VoiceIOFarEndVersionInfo=[64C][64C]I}8
I24@0:4r^{_VCAudioIOControllerTime=IQ}8d12^{_VCAudioEndpointData=^{SoundDec_t}^{opaqueVCAudioBufferList}dIIB}20
@"<VCAudioIOControllerControl>"
@"VCAudioIOControllerClient"
@"<VCAudioIODelegate><VCAudioIOSource><VCAudioIOSink>"
{_VCAudioEndpointData="converter"^{SoundDec_t}"converterBuffer"^{opaqueVCAudioBufferList}"lastHostTime"d"lastTimestamp"I"timestampOffset"I"controllerChanged"B}
B12@0:4^{?=id(?={?=IIIIIdddd[64c]}{?=IIIIIII}{?=dIIIIIQ}{?=IBBBIIdI}{?=CIIIIIIIIIdddIII}{?=IId}{?=IIId}{?=IIII}{?=IIIII}{?=IIIIBIII})}8
[100{?="type"i"arrivalTime"d""(?="baseband"{?="queueDepth1"I"queueDepth2"I"txBitrate"I"averageBitrate"I"averageBitrateLong"I"expectedQueuingDelay"d"bdcd"d"normalizedBDCD"d"normalizedDelay"d"bbString"[64c]}"feedback"{?="sendTimestamp"I"queuingDelay"I"remoteBWEstimation"I"maxBurstyLoss"I"totalReceivedPackets"I"echoedSendTimestamp"I"owrd"I}"network"{?="packetLossPercentage"d"burstPacketLoss"I"roundTripTimeMilliseconds"I"isNetworkCongested"I"owrd"I"targetBitrate"I"statisticsID"Q}"probing"{?="estimatorID"I"deregisterEstimator"B"isProbingSequence"B"isEndOfProbingSequence"B"probingSequenceID"I"messageLength"I"arrivalTime"d"mediaTimestamp"I}"serverStats"{?="linkID"C"sendTimestamp"I"receiveTimestamp"I"totalPacketSent"I"totalPacketReceived"I"totalByteSent"I"totalByteReceived"I"serverStatsByteUsed"I"bandwidthSample"I"bandwidthEstimation"I"roundTripTime"d"owrd"d"packetLossRate"d"actualBitrate"I"serverStatsBitrate"I"expectedBitrate"I}"packetSent"{?="packetId"I"totalPacketsSent"I"sendTimestamp"d}"packetReceived"{?="packetId"I"totalPacketsReceived"I"localBurstyLoss"I"receiveTimestamp"d}"rtcpRR"{?="ssrc"I"packetLossPercentage"I"lastSequenceNumber"I"roundTripTimeMilliseconds"I}"config"{?="mode"I"remoteRadioAccessTechnology"I"localRadioAccessTechnology"I"maxBitrate"I"minBitrate"I}"mediaEvent"{?="mediaEventType"I"additionalFlushCount"I"transactionID"I"audioStallBitrate"I"isKeyFrame"B"refreshFrameTimestamp"I"refreshFramePayloadType"I"refreshFramePacketCount"I})}]
@16@0:4@8i12
^I12@0:4^I8
@"AVInternalDeviceList"
@"NSData"8@0:4
@28@0:4Q8@16@20@24
@"VCXPCClientShared"
@16@0:4@8^{opaqueRTCReporting=}12
v16@0:4I8@12
^AC8@0:4
v12@0:4^AC8
v16@0:4@"VideoAttributes"8i12
v20@0:4@"NSString"8@"NSString"12i16
@16@0:4i8i12
@20@0:4i8i12B16
@16@0:4L8i12
@"<VCRemoteVideoManagerDelegate>"
{?="senderLanguages"b1"canDisplayCaptions"b1}
@20@0:4@8@12^@16
B16@0:4@"NSArray"8^@12
@"NSDictionary"16@0:4@"NSString"8^@12
@"NSDictionary"16@0:4@"NSObject<OS_xpc_object>"8^@12
@"NSDictionary"20@0:4@"NSDictionary"8@"NSObject<OS_xpc_object>"12^@16
v16@0:4@"VCMediaStreamTransport"8@"NSArray"12
v24@0:4@"VCMediaStreamTransport"8d12I20
@16@0:4L8I12
v40@0:4d8d16d24d32
d48@0:4d8d16d24d32d40
@"<VCMediaStreamDelegate>"
@"<VCMomentsCollectorDelegate>"
@"VCWeakObjectHolder"
{_VCMediaStreamTransportSetupInfo="setupType"C""(?="socketInfo"{?="rtpSocket"i"rtcpSocket"i}"ipInfo"{?="srcIPPORT"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"srcRTPIPPort"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}})"sourceRate"I"datagramChannelToken"I"isSessionIDValid"B}
@"VCMasterKeyIndex"
@"<VCHardwareSettingsMacProtocol>"
@"<VCHardwareSettingsEmbeddedProtocol>"
@"NSObject<OS_xpc_object>"
@24@0:4@8d12B20
@24@0:4i8B12I16I20
B24@0:4@8d12B20
@"NSLocale"
[256I]
@"VCSessionBitrateArbiter"
@20@0:4I8I12I16
v16@0:4*8@12
v20@0:4*8@12@?16
v24@0:4*8@12@?16@20
v24@0:4*8@12@16@?20
v28@0:4*8@12@16@?20@24
@12@0:4*8
@16@0:4*8@12
@20@0:4*8@12@16
v16@0:4*8@?12
v20@0:4*8@?12@16
v24@0:4*8@?12@16i20
@"VCVideoRuleCollections"
@"NSSet"
v24@0:4@8C12i16C20
@"VCMediaStreamMultiwayConfigAudio"
@"VCMediaStreamMultiwayConfigVideo"
B20@0:4@8i12i16
@20@0:4@8@12B16
B36@0:4C8i12C16@20@24@28B32
@"VCMediaNegotiatorLocalConfiguration"
@"VCMediaNegotiatorResults"
@"VCMediaNegotiatorAudioResults"
@"VCMediaNegotiatorVideoResults"
@"VCMediaNegotiatorCaptionsResults"
@"VCMediaNegotiatorMomentsResults"
v12@0:4^{ConnectionStatsHistory=C[5C][2[5C]][2[5C]]}8
v20@0:4^{ConnectionStatsHistory=C[5C][2[5C]][2[5C]]}8i12B16
v16@0:4^{ConnectionStatsHistory=C[5C][2[5C]][2[5C]]}8i12
B12@0:4*8
B16@0:4*8i12
B16@0:4^{ConnectionStatsHistory=C[5C][2[5C]][2[5C]]}8i12
{ConnectionStats="totalPacketsReceived"C"connectionStats"[2C]"currentIndex"C"startTime"d}
{ConnectionStatsHistory="latestConnectionStatsIndex"C"totalPacketsReceived"[5C]"connectionStats"[2[5C]]"connectionStatsRatio"[2[5C]]}
v24@0:4^I8^I12^f16I20
i12@0:4^{_VCMediaStreamConfigurationProviderVideo=iIIIIIiIB}8
B16@0:4^{_VCMediaStreamConfigurationProviderVideo=iIIIIIiIB}8I12
B16@0:4I8@12
@16@0:4^{_VCMediaStreamConfigurationProviderAudio=I{_VCMediaStreamConfigurationProviderAudioBitrateInfo=iIII}I[4{_VCMediaStreamConfigurationProviderAudioPayload=ii}]I[4I]i}8@12
@12@0:4^{opaqueVCAudioBufferList=}8
^{vDSP_DFT_SetupStruct=}
{DSPSplitComplex="realp"^f"imagp"^f}
[3840f]
[1920f]
[54f]
[55f]
[66f]
@24@0:4@8i12@16@20
@20@0:4@8^{tagHANDLE=i}12I16
B24@0:4@8^{_VCMediaStreamTransportSetupInfo=C(?={?=ii}{?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}})IIB}12B16^@20
v12@0:4^{_RTCP_SEND_CONTROL_PARAMETERS=Ii*IC^SiSSI^{_RTCP_RECEPTION_REPORT}C}8
l16@0:4^{tagSRTPExchangeInfo=[65c][29c]^v}8@12
B16@0:4^{_VCMediaStreamTransportSetupInfo=C(?={?=ii}{?={tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}})IIB}8^@12
l16@0:4^{?=[65c]i[65c]i^v}8@12
B16@0:4^i8^d12
@"VCMediaStreamConfig"
@"NSObject<OS_os_transaction>"
v24@0:4*8@12@16@20
v20@0:4*8@12@16
i16@0:4*8*12
@24@0:4C8d12i20
@20@0:4C8d12
B20@0:4^i8^i12^f16
^{_VCBitrateConfiguration=SSSS}8@0:4
v20@0:4@8*12@?16
v16@0:4@8*12
B20@0:4^{__CVBuffer=}8q12
B16@0:4q8
@"VCVideoFrameBufferPool"
I16@0:4@8@12
@36@0:4@8@12L16L20i24B28B32
B32@0:4@8L12L16i20L24B28
@16@0:4@8L12
@40@0:4i8@12@16@20I24B28B32I36
@16@0:4I8i12
@"VCAudioTier"
@"BitrateLimits"
^{_VCHardwareConfiguration=q{_VCVideoFormat=III}I^{_VCVideoFormat}I^{_VCVideoFormat}{_VCBitrateConfiguration=SSSS}}16@0:4i8C12
B36@0:4i8C12C16^{_VCVideoFormat=III}20I24@28^B32
v36@0:4i8i12i16i20i24i28i32
v24@0:4^@8i12^@16i20
v40@0:4d8d16d24I32I36
S12@0:4I8
@"<VCVideoStreamRateControlProtocol>"
B24@0:4@8I12@16@20
@24@0:4I8@12@16@20
B20@0:4@8I12@16
@"<VCControlChannelTransactionDelegate>"
B28@0:4@8*12I16S20@24
@20@0:4@8S12@16
v24@0:4@8@12I16@20
B28@0:4@8@12I16I20@24
@20@0:4I8@12@16
B20@0:4@8@12I16
B16@0:4Q8
v16@0:4I8@?<v@?>12
B28@0:4^v8@12*16I20S24
@24@0:4@8@12@16@20
v16@0:4@8^{?=[12S]CBSCBBQBBBS{?=SSSSS}B}12
B20@0:4@8Q12
v20@0:4@8Q12
v20@0:4d8@16
@12@0:4^{tagVCTextJitterBufferConfiguration=I@}8
^{tagAudioPacket=iiiBSIidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}8@0:4
v12@0:4^{tagAudioPacket=iiiBSIidi[1472C]i[256C]C[4^{tagAudioFrame}]idi^{tagDecoderSettings}BICS}8
^{tagAudioFrame=iiBSI[800C]ii[16C]Ciidi^?^v^{tagDecoderSettings}BICS^{tagAudioFrame}^{tagAudioFrame}}8@0:4
{tagVCTextJitterBufferConfiguration="sampleRate"I"delegate"@"<VCTextFrameReceiver>"}
^{JitterPreloadQueue_t=}
^{JitterQueue_t=}
^{__CVBuffer=}20@0:4^{__CVBuffer=}8^{OpaqueVTPixelTransferSession=}12^{__CVPixelBufferPool=}16
^{OpaqueVTPixelTransferSession=}8@0:4
B20@0:4^{__CVPixelBufferPool=}8i12i16
B16@0:4I8I12
*8@0:4
B24@0:4^v8I12i16I20
B32@0:4^v8I12i16I20B24C28
{tagAccessUnitHeaderInfo="accessUnitCount"S"accessUnitSize"[3S]}
B32@0:4d8d16d24
@20@0:4@8B12^@16
@24@0:4@8B12@16^@20
@32@0:4@8@12@16B20@24^@28
v24@0:4@8C12S16S20
v16@0:4c8C12
@"VCAudioStream"
@"AVCMediaStreamConfig"
@12@0:4^{opaqueRTCReporting=}8
I16@0:4I8@12
v20@0:4@8B12B16
v28@0:4@8I12I16S20S24
v28@0:4@8B12{CGPoint=ff}16@24
@"NSObject<AVConferencePreviewClientDelegate>"
B20@0:4C8C12I16
v20@0:4I8I12^{tagHANDLE=i}16
i32@0:4C8C12I16I20*24B28
@28@0:4L8L12B16@20^@24
l20@0:4@8B12^@16
l20@0:4@8I12B16
l20@0:4@8^@12B16
^{_tls_record_s=}
@36@0:4@8@12@16^{opaqueRTCReporting=}20L24S28^{tagVCMediaQueue=}32
v32@0:4{?=dCSSSSSS}8
v40@0:4{?=dCSIII}8d32
v12@0:4^{?=Cd[1472C]ii{?=[12S]CBSCBBQBBBS{?=SSSSS}B}}8
{?="responseTime"d"linkID"C"statsIdentifier"S"remoteTimestamp"S"serverPacketInterval"S"uplinkBandwidthSample"S"totalRemoteMediaPacketSent"S"totalRemoteMediaPacketReceived"S}
@"VCTransportStream"
B20@0:4r^v8I12^@16
@?<v@?^vIB@"NSError">8@0:4
v12@0:4@?<v@?^vIB@"NSError">8
@"AVCPacketFilter"8@0:4
v12@0:4@"AVCPacketFilter"8
@20@0:4S8@12@16
{sockaddr="sa_len"C"sa_family"C"sa_data"[14c]}
@"AVCPacketFilter"
@12@0:4S8
@"IDSService"
@16@0:4S8@12
@16@0:4r^v8i12
@"AVCPacketRelayDriver"
@"<AVCPacketRelayDelegate>"
@"<AVCPacketRelayConnectionProtocol>"
q16@0:4I8I12
v24@0:4I8d12@20
v24@0:4I8d12@"NSString"20
{?=qiIq}12@0:4I8
d12@0:4I8
{tagVCMediaStreamSyncTime="ntpTime"d"sampleRate"i"rtpTimestampOfNTP"I}
@"VCTextStream"
v32@0:4d8I16I20B24I28
d32@0:4d8d16I24I28
d24@0:4d8d16
v28@0:4d8I16B20I24
v24@0:4d8^B16^B20
v24@0:4d8B16B20
[30d]
@"SuddenChangeParameters"
@20@0:4I8B12B16
{?="confidence"b1"hasSpaceAfter"b1}
{tagCONNRESULT="dwCallID"I"iResultCount"i"iRole"i"dwRemoteCallID"I"proto"i"bIfRelay"i"wRelayServType"S"wChannelNumber"S"mbLocal"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbRemote"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbSrc"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbDst"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbRemoteSrc"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"mbRelayExt"{tagIPPORT="iFlags"i"szIfName"[16c]"IP"(?="dwIPv4"I"abIPv6"[16C])"wPort"S}"dwRTT"I"bIfLocalCellularQoS"i"bIfRemoteCellularQoS"i"iLocalCellTech"i"iRemoteCellTech"i"wCellularMTU"S"bIfUpgrade"i"bIfPrimary"i"bIfReplaceOnly"i"next"^{tagCONNRESULT}}
{sockaddr_storage="ss_len"C"ss_family"C"__ss_pad1"[6c]"__ss_align"q"__ss_pad2"[112c]}
@40@0:4^{__CVBuffer=}8^{__CVBuffer=}12{?=qiIq}16
^{__CVBuffer=}16@0:4@8B12
{?=qiIq}12@0:4@8
v20@0:4@8I12^v16
@28@0:4I8B12@16@20B24
B24@0:4@8@12B16B20
v48@0:4I8I12i16i20d24^I32I36@40B44
@16@0:4B8B12
@24@0:4I8@12B16I20
B20@0:4i8^i12^i16
@"NSObject<VCMediaStreamDelegate>"
^{SoundDec_t={AudioStreamBasicDescription=dIIIIIIII}{AudioStreamBasicDescription=dIIIIIIII}ii^{OpaqueAudioConverter}*i{AudioStreamPacketDescription=qII}^{AudioBufferList}^{AudioBufferList}**iiiiCiiII}
{?="preferredFormat"b1}
v20@0:4@8{CGSize=ff}12
i20@0:4@8s12^@16
i24@0:4@8s12B16^@20
@16@0:4B8s12
@"NSObject<VideoCaptureServer>"
v20@0:4^{opaqueCMSampleBuffer=}8C12C16
B16@0:4^{opaqueCMSampleBuffer=}8I12
@16@0:4@"NSURL"8@"NSString"12
v12@0:4@?<v@?@"NSURL"@"NSError">8
@"NSURL"8@0:4
v12@0:4@"NSURL"8
v24@0:4@8^{opaqueCMBufferQueue=}12@16^{?=qiIq}20
v20@0:4^{opaqueCMBufferQueue=}8@12^{?=qiIq}16
@"AVAssetWriter"
@"AVAssetWriterInput"
@"AVAssetWriterInputMetadataAdaptor"
@"NSURL"
@24@0:4@8^{tagHANDLE=i}12I16I20
@28@0:4@8^{tagHANDLE=i}12I16I20B24
v12@0:4^{tagVCJitterBufferWRMReportingMetrics=IIIIQQII}8
{tagWRMMetricsInfo="bInitialized"B"hRTPHandle"^{tagHANDLE}"dwReportInterval"I"dwWrmTime"I"dwPlaybackCount"I"dwPlaybackCountSpeech"I"dwErasureCount"I"dwErasureSilence"I"dwTimeOfLastRRPacket"I"dwEstimatedRTTMilliSeconds"I"dwJitter"I"dwTotalPacketRecv"I"dwDTXPacketRecv"I"callId"Q"nominalJitterBufferDelay"Q"targetJitterQueueSize"Q"nFraction"i"reportWRMMetricsCallback"^?"wrmMetricsReportingContext"{?="info"^v"retain"^?"release"^?}"wrmMetricsReportingLock"{_opaque_pthread_mutex_t="__sig"l"__opaque"[40c]}"dwInternalTSRate"I"dwPacketSent"I"isCallAudioOnly"I"bwEstimation"I"targetBitrate"I"oneWayRelativeDelay"I"adaptationPacketLossPercentage"I"isLocalCellular"I"isVideoPaused"I}
@16@0:4{_VCRange=ff}8
v16@0:4{_VCRange=ff}8
B12@0:4^{AudioStreamBasicDescription=dIIIIIIII}8
i24@0:4^{opaqueVCAudioBufferList=}8i12^v16i20
v16@0:4*8i12
B16@0:4*8^I12
@"VCAudioPayloadConfig"
B48@0:4@8^{__CVBuffer=}12{?=qiIq}16@40B44
I16@0:4@8I12
B48@0:4@"VCVideoReceiverBase"8^{__CVBuffer=}12{?=qiIq}16@"VideoAttributes"40B44
v16@0:4@"VCVideoReceiverBase"8S12
v16@0:4@"VCVideoReceiverBase"8I12
v16@0:4@"VCVideoReceiverBase"8@"NSDictionary"12
I16@0:4@"VCVideoReceiverBase"8I12
v20@0:4@"VCVideoReceiverBase"8S12S16
v48@0:4@8^{opaqueCMSampleBuffer=}12{?=qiIq}16i40C44
v48@0:4@"VCVideoCaptureConverter"8^{opaqueCMSampleBuffer=}12{?=qiIq}16i40C44
B20@0:4^i8i12^@16
@20@0:4L8I12i16
@"VCVideoTransmitterBase"
@"VCVideoReceiverBase"
@"VCVideoCaptureConverter"
@32@0:4@8i12L16L20L24L28
@32@0:4L8i12L16L20L24@28
v24@0:4@"VCControlChannel"8@"NSString"12I16@"NSNumber"20
v24@0:4@"VCControlChannel"8@"NSString"12B16@"NSNumber"20
v16@0:4@"VCControlChannel"8@"NSNumber"12
v24@0:4@8@12B16@?20
v24@0:4@8@12Q16
@"VCNetworkAddress"
@"VCMediaStreamMultiwayConfig"
@28@0:4@8@12B16@20@?24
v28@0:4@8Q12i20i24
l32@0:4^{__CVBuffer=}8i12i16L20^{__CVPixelBufferPool=}24^^{__CVBuffer}28
@"VCMediaStream"
B36@0:4d8d16f24d28
{VoiceIOFarEndVersionInfo=[64C][64C]I}12@0:4B8
@"SDPMini"
@36@0:4{_AVCAudioPowerSpectrumMeterConfig=iISd}8@28@32
I12@0:4^I8
[3I]
@16@0:4C8@12
@20@0:4C8@12@16
@"VCCaptionsTranscription"
^@12@0:4i8
@16@0:4i8^v12
v56@0:4{VCStatisticsStatsHistoryElement=CdIIIQQQ}8
B56@0:4{VCStatisticsStatsHistoryElement=CdIIIQQQ}8
B28@0:4^i8d12d20
B12@0:4^{VCStatisticsStatsHistoryElement=CdIIIQQQ}8
[500{VCStatisticsStatsHistoryElement="linkID"C"statsUpdateTime"d"statsTimestamp"I"totalPacketSent"I"totalPacketReceived"I"totalByteSent"Q"totalByteReceived"Q"totalByteServerStatsUsed"Q}]
{VCStatisticsStatsHistoryElement="linkID"C"statsUpdateTime"d"statsTimestamp"I"totalPacketSent"I"totalPacketReceived"I"totalByteSent"Q"totalByteReceived"Q"totalByteServerStatsUsed"Q}
@28@0:4i8@12i16@20@24
B16@0:4C8L12
v24@0:4i8i12i16I20
f12@0:4i8
i32@0:4^{opaqueVCAudioBufferList=}8i12^v16i20^i24B28
i20@0:4B8I12f16
i40@0:4*8i12i16I20i24B28B32C36
B16@0:4^{tagAudioPacketData={tagAudioHeaderData=iI[16C]CfiiiC}*i}8^i12
i64@0:4{tagAudioPacketData={tagAudioHeaderData=iI[16C]CfiiiC}*i}8
i48@0:4*8i12i16I20C24i28f32*36C40i44
{?=IId}8@0:4
v24@0:4{?=IId}8
@"VCPacketBundler"
@"VCRedundancyControllerAudio"
@"VCAudioTierPicker"
{?="averageNetworkBitrate"I"averageMediaBitrate"I"averageFramerate"d}
{?="streamIDs"[12S]"numOfStreamIDs"C"probingGroupIDIsSet"B"probingGroupID"S"priority"C"pktCountingFlag"B"participantIDIsSet"B"participantID"Q"participantGenerationCounterIsSet"B"ignorePriority"B"statsIDIsSet"B"statsID"S"statsPayload"{?="serverTimestamp"S"serverPacketInterval"S"totalServerPacketReceived"S"totalServerPacketSent"S"uplinkBandwidthEstimate"S}"isTransitionPacket"B}
v20@0:4i8i12I16
^{__CTServerConnection=}
@16@0:4i8^@12
@20@0:4i8^@12i16
B12@0:4^{NSString=#}8
f12@0:4L8
l12@0:4^{?=Cd[1472C]ii{?=[12S]CBSCBBQBBBS{?=SSSSS}B}}8
@24@0:4@8@12B16B20
v44@0:4^{__CVBuffer=}8^{__CVBuffer=}12{?=qiIq}16@40
v36@0:4^{__CVBuffer=}8{?=qiIq}12
v48@0:4^{__CVBuffer=}8^{__CVBuffer=}12{?=qiIq}16@40@44
v44@0:4^{__CVBuffer=}8{?=qiIq}12@36@40
@16@0:4@?8@?12
@"VCVoIPRelayInternal"
d20@0:4^{__CFString=}8d12
l12@0:4^{__CFString=}8
l16@0:4^{__CFString=}8l12
B12@0:4^{__CFString=}8
B16@0:4^{__CFString=}8B12
B12@0:4^I8
@20@0:4r*8L12^{?=diIII}16
l20@0:4r*8L12^{?=diIII}16
l20@0:4^v8L12I16
l24@0:4^v8L12^I16I20
l20@0:4*8L12^I16
@"<VCMediaControlInfoDelegate>"
[8C]
l12@0:4^{?=diIII}8
[6C]
[36C]
B56@0:4^{opaqueCMSampleBuffer=}8I12d16{?=qiIq}24i48C52
{CGSize=ff}32@0:4{CGSize=ff}8{CGSize=ff}16i24i28
B32@0:4^@8@12@16@20B24^{opaqueRTCReporting=}28
B16@0:4^@8^{opaqueRTCReporting=}12
v24@0:4@"AVCSessionParticipant"8B12B16@"NSError"20
v16@0:4@"AVCSessionParticipant"8B12
v16@0:4@"AVCSessionParticipant"8@"NSDictionary"12
@"AVCSessionParticipant"
@"AVCSessionConfiguration"
@28@0:4@8@12@16@20^@24
@"VCVideoStream"
@20@0:4i8C12C16
@20@0:4C8i12C16
@24@0:4@8C12i16C20
v24@0:4i8i12C16C20
v16@0:4@"<VCRedundancyControllerProtocol>"8I12
v20@0:4@"<VCRedundancyControllerProtocol>"8d12
B12@0:4f8
(tagNTP=Q{?=II})8@0:4
(tagNTP="wide"Q"time"{?="frac"I"sec"I})
@"VCCallInfoBlob"
@"VCRedundancyControllerVideo"
@"AVCNetworkAddress"
@"AVCAudioStreamConfig"
@"AVCVideoStreamConfig"
@"AVCTextStreamConfig"
@"NSObject<WCMClientDelegate>"
B24@0:4@8^i12@16^i20
@"NSEnumerator"
v28@0:4L8@?12@?16@?20@?24
l20@0:4L8B12^i16
v32@0:4L8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}}12i16i20^{__CFData=}24i28
v24@0:4L8*12i16S20
v36@0:4^{tagCANDIDATEPAIR={tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}iSS[8C]{tagIPPORT=i[16c](?=I[16C])S}Iiiiiiiii^{tagCANDIDATEPARIR}}8L12i16^i20^i24^i28^i32
v20@0:4^{tagIPPORT=i[16c](?=I[16C])S}8L12B16
v16@0:4@?8L12
v28@0:4*8i12L16B20i24
l12@0:4L8
@16@0:4^{tagIPPORT=i[16c](?=I[16C])S}8L12
l24@0:4^{tagCANDIDATE=iiI[8C]SS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}I}8L12i16^{tagIPPORT=i[16c](?=I[16C])S}20
l16@0:4L8i12
l44@0:4L8C12B16^^v20^i24^{__CFDictionary=}28B32d36
l20@0:4L8^{tagCONNRESULT=IiiIiiSS{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}{tagIPPORT=i[16c](?=I[16C])S}IiiiiSiii^{tagCONNRESULT}}12@?16
l40@0:4L8@12@16d20^{__SecIdentity=}28^{SKEStateOpaque=}32^i36
B16@0:4^{tagIPPORT=i[16c](?=I[16C])S}8B12
l24@0:4@8^{tagIPPORT=i[16c](?=I[16C])S}12^{tagIPPORT=i[16c](?=I[16C])S}16i20
l28@0:4@8L12L16B20i24
l24@0:4L8i12L16^{__CFString=}20
l16@0:4^{SKEStateOpaque=}8L12
l16@0:4d8
l12@0:4B8
l12@0:4^{tagIPPORT=i[16c](?=I[16C])S}8
l28@0:4L8L12^v16i20S24
l16@0:4L8^I12
@"AVAudioDeviceList"
?ffffff
?333333
MbP?
?ffffff
MbP?
?333333
@333333
zt?333333
?UUUUUU
Mb`?
MbP?
MbP?
?UUUUUU
mcpl)
cckg
xxtd
lcaa
wala
walu
mcpl,
mcpl
333333
?xfuakrfclppa
xfuakrfclppa
0@(knN
333333
?333333
?kcajtpni
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
060425214036Z
350209214036Z0b1
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
, op
https://www.apple.com/appleca/0
Reliance on this certificate by any party assumes acceptance of the then applicable standard terms and conditions of use, certificate policy and certification practice statements.0
=&g 
Sj[d
uu!0
Apple Inc.1&0$
Apple Certification Authority1
Apple Root CA0
070412174328Z
220412174328Z0y1
Apple Inc.1&0$
Apple Certification Authority1-0+
$Apple iPhone Certification Authority0
!p(E`\
)XI
c{>c
4*."
/0-0+
%http://www.apple.com/appleca/root.crl0
kK>{
1+kT
>%(%
JAlXV
Apple Inc.1&0$
Apple Certification Authority1-0+
$Apple iPhone Certification Authority0
070416225446Z
140416225446Z0Z1
Apple Inc.1
Apple iPhone1
Apple iPhone Device CA0
MMNT
wE/g\
4*."
|508
10/0-
'http://www.apple.com/appleca/iphone.crl0
gzLV+
yR:L=y[
Mb`?
uouaoipvlppa
21ARPLReceiveSetElement
25ARPLAssociationSetElement
14ARPLSetElement
21ARPLSendingSetElement
?333333
?333333
?ffffff
Mb`?
?[YO?
Pd?KMD?'
Cw>(
l~?8
MbP?
@(#)PROGRAM:AVConference  PROJECT:AVConference-
 [%s] %s:%d using audio channelCount[%d]
 [%s] %s:%d setMicrophoneMuted:%d
 [%s] %s:%d Added controller client[%p]
 [%s] %s:%d Removed controller client[%p]
 [%s] %s:%d +[%s %s]:%d Removing dead client (%p)!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Removing dead client (%p)!
 [%s] %s:%d Selected audio unit properties: UnitType:%d, format:{%f, %s, %x, %d, %d, %d, %d, %d} samplesPerFrame=%d VPOperatingMode:%d
 [%s] %s:%d AUIO already exists
 [%s] %s:%d operatingMode[%d] deviceRole[%d] remoteCodecType[%s] remoteCodecRate[%f]
 [%s] %s:%d Starting AUIO
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCAudioManager.m:%d: Failed to create the audio limiter
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCAudioManager.m:%d: Failed to start the audio limiter
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCAudioManager.m:%d: AUIOCreateHandle failed(%X)
 [%s] %s:%d AUIOSetupFormats() failed. hResult=0x%08X
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCAudioManager.m:%d: AUIOStart failed(%08lX)
 [%s] %s:%d startAudioIO is completed
 [%s] %s:%d Recording changed: %d->%d
 [%s] %s:%d Sample rate changed: %d->%d
 [%s] %s:%d VP operating mode changed: %d->%d
 [%s] %s:%d enableDNNVAD changed: %d->%d
 [%s] %s:%d Current settings: %@
 [%s] %s:%d Old settings: %@
 [%s] %s:%d Session properties changed!
 [%s] %s:%d AUIO doesn't exists
 [%s] %s:%d Adding source client[%p] in current manager state %d
 [%s] %s:%d Removing source client[%p] in current manager state %d
 [%s] %s:%d Adding sink client[%p] in current manager state %d
 [%s] %s:%d Removing sink client[%p] in current manager state %d
 [%s] %s:%d reset audio session: %d
 [%s] %s:%d reset audio unit: %d
 [%s] %s:%d (%p) audioIO=%p clientCount:%d AUIO=%d/%d AudioSession=%d
 [%s] %s:%d new client: %@
 [%s] %s:%d Process state: %@ (%d)
 [%s] %s:%d State change: %@ (%d) -> %@ (%d)
 [%s] %s:%d Client is nil!
 [%s] %s:%d Invalid device role: %d!
 [%s] %s:%d Client already registered!
 [%s] %s:%d controller start client (audioIO=%p)
 [%s] %s:%d controller start client FAILED (audioIO=%p)
 [%s] %s:%d Update client[%p]. Current manager state %d
 [%s] %s:%d +[%s %s]:%d client not found: %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@client not found: %@
 [%s] %s:%d %s: Took a long time %fs
AVCRC [%s] %s:%d AVCRateController init with VCRateControl dumpFile %s, VCRateControl logging %s.
AVCRC [%s] %s:%d AVCRateController configuration with mode:%d, LocalRAT:%d, RemoteRAT:%d, minBitrate:%d, maxBitrate:%d, statisticsCollector:%p
AVCRC [%s] %s:%d AVCRateController target bitrate cap %d -> %d
AVCRC [%s] %s:%d AVCRateController bandwidth estimation cap %d -> %d
AVCRC [%s] %s:%d AdaptiveLearning(AVCRateController): Setting up initial bitrate for segment %@ - learnt target bitrate %d, selected tier %d, default bitrate %d
AVCRC [%s] %s:%d AdaptiveLearning(AVCRateController): Initial bitrate defaulted to %d
AVCRC [%s] %s:%d Forcing VCRateControl TxCap to %u from defaults
AVCRC [%s] %s:%d Forcing VCRateControl TxRate to %u from defaults
AVCRC [%s] %s:%d Configuration mode %d not supported
VCRC [%s] %s:%d Cannot get rate control feedback message!
AVConferenceAPI [%s] %s:%d Network quality graph is enabled.
AVConferenceAPI [%s] %s:%d +[%s %s]:%d useServer=%d
AVConferenceAPI [%s] %s:%d -[(%s*)%p %s]:%d %@useServer=%d
AVConferenceAPI [%s] %s:%d AVConference: server died, but AVConference has already deallocated, NO-OP
AVConferenceAPI [%s] %s:%d AVConference: Server initialization failed
AVConferenceAPI [%s] %s:%d initializeNewCallWithDeviceRole:%d callID=%d (not using XPC)
AVConferenceAPI [%s] %s:%d +[%s %s]:%d 
AVConferenceAPI [%s] %s:%d -[(%s*)%p %s]:%d %@
AVConferenceAPI [%s] %s:%d >>>>> Sending ARPL data to VideoConference via XPC (in AVConference) <<<<<
AVConferenceAPI [%s] %s:%d >>>>> mediaservd not supported - cannot send ARPL data <<<<<
AVConferenceAPI [%s] %s:%d AVConference: report session ID: %s
AVConferenceAPI [%s] %s:%d AVConference: Server - Calling startConnectionWithParticipantIDUsingInviteData caps = %s] 
AVConferenceAPI [%s] %s:%d AVConference startConnectionWithCallID: IDS Socket %d duped to %d
AVConferenceAPI [%s] %s:%d AVConference: Server - Finished calling startConnectionWithParticipantIDUsingInviteData]
AVConferenceAPI [%s] %s:%d this function is deprecated
AVConferenceAPI [%s] %s:%d statsForCallID: %s, %d
AVConferenceAPI [%s] %s:%d AVConference: My nat type is = %d
AVConferenceAPI [%s] %s:%d updateCapabilities: isAudioEnabled needs to be YES when isVideoEnabled is set
AVConferenceAPI [%s] %s:%d callID %ld newCapabilities %s
AVConferenceAPI [%s] %s:%d AVConference: setServerInfo completed with %s
AVConferenceAPI [%s] %s:%d AVConference: Notify client %d, ipChange %s
AVConferenceAPI [%s] %s:%d AVConference: notifying client %p of remoteMediaStalled %d for callID %d
AVConferenceAPI [%s] %s:%d +[%s %s]:%d callID=%d, responseDict=%s
AVConferenceAPI [%s] %s:%d -[(%s*)%p %s]:%d %@callID=%d, responseDict=%s
AVConferenceAPI [%s] %s:%d didStartConnectionBlock: error = %p, result = %s
AVConferenceAPI [%s] %s:%d didStartConnectionBlock:strongAVConference == NULL
AVConferenceAPI [%s] %s:%d didStartConnectionBlock:strongAVConference (%d)
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of didStartCallID %d
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of didStopCallID %d, callMetadataDict = %s
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of callID %d isSendingAudio %d
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of callID %d didPauseAudio %d
AVConferenceAPI [%s] %s:%d AVConference: notified client %p of callID %d didPauseVideo %d
AVConferenceAPI [%s] %s:%d relayCancelBlock called (callID %d) with...%s
relayCancelBlock called (callID %d)
AVConferenceAPI [%s] %s:%d relayCancelBlock called (callID %d)
AVConferenceAPI [%s] %s:%d AVConference: notified client %p (%d) of video degraded %d isRemote = %d
AVConferenceAPI [%s] %s:%d AVConference: notified client %p (%d) of network connection hint %d
AVConferenceAPI [%s] %s:%d AVConference: >>>>> Relaying incoming ARPL data from VideoConferenceManager via XPC connection to AVConference delegate (in AVConference) <<<<<
AVConferenceAPI [%s] %s:%d AVConference: notified client of outdated cache for call ID %d
serverDied
AVConferenceAPI [%s] %s:%d serverDied
AVConferenceAPI [%s] %s:%d AVConference: mediaserverd died, notifying client
 [%s] %s:%d binCount:%d
 [%s] %s:%d Unsupported format id: %d
 [%s] %s:%d Unsupported format flags: %x
 [%s] %s:%d Failed to allocate sample buffer
 [%s] %s:%d Failed to create octave to index table
 [%s] %s:%d Failed to create bin interpolation indexes
 [%s] %s:%d Failed to create hanning window
 [%s] %s:%d Failed to create channel settings: channelCount=%d
 [%s] %s:%d Failed to setup the channel settings[%d]
 [%s] %s:%d Failed to create FFT
 [%s] %s:%d Failed to create bins
 [%s] %s:%d Failed to allocate _octave2IndexTable6 [count=%d]
 [%s] %s:%d lerp[%d] : %f
 [%s] %s:%d Failed to allocate octaveDbOld [count=%d]
 [%s] %s:%d Failed to allocate octaveDb [count=%d]
 [%s] %s:%d Failed to allocate octaveDbFilt [count=%d]
 [%s] %s:%d Failed to allocate octaveDbFiltInterpolated [count=%d]
 [%s] %s:%d Failed to history buffer
 [%s] %s:%d Failed to allocate fftBuffer
 [%s] %s:%d error setting up VCAudioPowerSpectrum
VCRC [%s] %s:%d dealloc called %p
VCRC [%s] %s:%d setStatistics:newStatsistics is deprecated
VCRC [%s] %s:%d getStatistics:keys is deprecated
VCRC [%s] %s:%d Mode %d does not support reading the statistics collection
 [%s] %s:%d %s:%d Exiting state:%d Entering state:%d
 [%s] %s:%d Time counter wrapped around
 [%s] %s:%d calculateOWRDWithTimestamp: Lag (%fs) looks spurios (short %fs: long %fs : threshold %fs), discarding
 [%s] %s:%d calculateOWRDWithTimestamp: timestamp: %u, now: %f, Lag %fs short %fs: long %fs : owrd %fs
 [%s] %s:%d CommTest: select() failed (%d)
 [%s] %s:%d CommTest: recvfrom() failed (%d)
 [%s] %s:%d CommTest: recvfrom() returns 0
 [%s] %s:%d CommTest: bad seq# %08X.
 [%s] %s:%d GKNATObserver_SCContext: GKNATObserverDynamicStoreCallback(): changedKeys = %s
 [%s] %s:%d GKNATObserver_SCContext: GKNATObserverDynamicStoreCallback(): self.observer = %s
 [%s] %s:%d GKNATObserver: no NAT cache available, running NAT check
 [%s] %s:%d GKNATObserverInternal(%p) -init
 [%s] %s:%d GKNATObserverInternal(%p) -dealloc
 [%s] %s:%d GKNATObserver setting flags[%08X] mask[%08X] old[%08X]=>result[%08X] (cached:%d)
 [%s] %s:%d GKNATObserver _commNATFlagDictionary = %s
 [%s] %s:%d GKNATObserver: running NAT check from startConnection
 [%s] %s:%d GKNATObserver: updating cache with new NAT dict
 [%s] %s:%d GKNATObserver: using cached NAT dict
 [%s] %s:%d GKNATObserver reporting NAT Type dictionary [%s]
 [%s] %s:%d GKNATObserver not reporting NAT Type dictionary [%s] - no change
 [%s] %s:%d GKNATObserver reporting NAT Type %d
 [%s] %s:%d GKNATObserver cannot report NAT Type %d (%d/%d), delegate does not respond to callbacks!
 [%s] %s:%d GKNATObserver cannot report NAT Type %d (%d/%d), delegate is nil!
 [%s] %s:%d natchecktimeout using default: %lf
 [%s] %s:%d natchecktimeout set to %lf from bag
 [%s] %s:%d commnat_test: [%08X] after %0.6lfs (%s)
 [%s] %s:%d callHTTPTestFromIPPort: [%s], IP: %u.%u.%u.%u:%u
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/GKNATObserver.m:%d: connectTCPSocket: connect failed (%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: select failed for connect (%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: connect timed out %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: connect refused (%d)
 [%s] %s:%d callHTTPTestFromIPPort: TCP socket connected!
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: write failed
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: read failed
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/GKNATObserver.m:%d: callHTTPTestFromIPPort: server terminated
 [%s] %s:%d callHTTPTestFromIPPort: for %s result %d
 [%s] %s:%d GKNATObserver:ensureNatCachePathExists : %d
 [%s] %s:%d GKNATObserver: NAT Cache = %s
 [%s] %s:%d GKNATObserver: Caching NAT flags [%s] for network "%s"...
 [%s] %s:%d GKNATObserver: Pruning network "%s" from NAT flags cache. (GKNATObserverMaxCachedNetworks=%d)
 [%s] %s:%d GKNATObserver: NATCheckWithIPPort starting for %s
 [%s] %s:%d GKNATObserver: nameForNetworkWithIPPort took %0.lf seconds
 [%s] %s:%d GKNATObserver: cache lookup took %0.lf seconds
 [%s] %s:%d GKNATObserver: Cached NAT flags for network "%s": [%08lX]
 [%s] %s:%d GKNATObserver: Network on interface "%s" [%s] did not change, skipping...
 [%s] %s:%d GKNATObserver: cache lookup semaphore took %0.lf seconds
 [%s] %s:%d GKNATObserver: updating NAT flags dictionary took %0.lf seconds
 [%s] %s:%d GKNATObserver: caching took %0.lf seconds
 [%s] %s:%d No tcp server... aborting
 [%s] %s:%d No https server... aborting
 [%s] %s:%d NAT64ResolverCallBack: got prefix for %s
 [%s] %s:%d GKNATObserver: %s
 [%s] %s:%d GKNATObserver: start setting up NAT checks (delay: %lf)
 [%s] %s:%d Trigger interface change directly from non-carrier check
 [%s] %s:%d GKNATObserver: queued non-carrier NAT check %d@%d, %s
 [%s] %s:%d GKNATObserver: carrier static NAT type: %08X
 [%s] %s:%d Trigger interface change directly from carrier check
 [%s] %s:%d GKNATObserver: queued carrier NAT check on %s
 [%s] %s:%d GKNATObserver: empty carrier NAT type set
 [%s] %s:%d GKNATObserver: No usable carrier interfaces found.
 [%s] %s:%d GKNATObserver: _nonCarrierInterfacesOnly set, skipping carrier interfaces test
 [%s] %s:%d GKNATObserver: Removing interfaces from consideration: %s
 [%s] %s:%d GKNATObserver: no usable interfaces (retry #%d in %0.3lfs)
 [%s] %s:%d GKNATObserver: no usable interfaces (already retried %d times)
 [%s] %s:%d GKNATObserver: done waiting for NAT check group
 [%s] %s:%d GKNATObserver: SCDS dictionary: %s
 [%s] %s:%d GKNATObserver: SCDynamicStoreSetNotificationKeys failed, we will miss network change notifications!
 [%s] %s:%d GKNATObserver: SCDynamicStoreSetDispatchQueue failed, we will miss network change notifications!
 [%s] %s:%d GKNATObserver: SCDynamicStoreCreate failed, we will miss network change notifications!
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/GKNATObserver.m:%d: createTCPSocket: socket() failed (%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/GKNATObserver.m:%d: createTCPSocket: bind() failed (%d)
 [%s] %s:%d createPacketThreadWithIOBufferDuration: PacketThread_Create failed
 [%s] %s:%d Relay IO is already started
 [%s] %s:%d Failed to create packet thread: %@
 [%s] %s:%d Failed to start the relay thread: %@
 [%s] %s:%d Starting client relay IO
 [%s] %s:%d Failed to start client IO
 [%s] %s:%d Starting remote relay IO
 [%s] %s:%d Failed to start remote IO
 [%s] %s:%d Can't stop: relay IO is nil
 [%s] %s:%d Relay IO is not running
 [%s] %s:%d VCAudioRelay stopped
 [%s] %s:%d Stopping client relay IO
 [%s] %s:%d VCAudioRelay client stopped
 [%s] %s:%d Stopping remote relay IO
 [%s] %s:%d newAudioConverterFromFormat failed with error %d
 [%s] %s:%d AudioConverterSetProperty(kAudioConverterPrimeMethod) failed with error %d
 [%s] %s:%d Remote relay IO:
 [%s] %s:%d Client relay IO:
 [%s] %s:%d forwardSamplesFromIO: PacketThread_Send failed
 [%s] %s:%d Periodic health print already initialized
 [%s] %s:%d VCAudioRelay IO is RUNNING. blocksRelayedCount[%d] clientUplinkPower[%f], clientDownlinkPower[%f]
 [%s] %s:%d setRealTimeConstraints() failed with error %d
 [%s] %s:%d VCAudioRelayThread stopped
 [%s] %s:%d +[%s %s]:%d Invalid client dictionary!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Invalid client dictionary!
 [%s] %s:%d +[%s %s]:%d Invalid packet type: %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Invalid packet type: %d
 [%s] %s:%d +[%s %s]:%d RTPC Packet is nil
 [%s] %s:%d -[(%s*)%p %s]:%d %@RTPC Packet is nil
 [%s] %s:%d GKSConnSettings: set server: %s
 [%s] %s:%d  **** GKSConnectivitySettings:setServerAddresses: "Special Allocation For Heap Inspection" has been enabled.
 [%s] %s:%d GKSConnSettings: prepare to enter getIPPortForService
 [%s] %s:%d GKSConnSettings getCachedIPPort: %08X:%u
 [%s] %s:%d GKSConnSettings getCachedIPPort failed
 [%s] %s:%d GKSConnSettings getIPPortForService: %s == 00
 [%s] %s:%d GKSConnSettings getIPPortForService: %s == nil
 [%s] %s:%d GKSConnSettings getIPPortForService: GKS setting for get SNATMAP IP: %s
 [%s] %s:%d GKSConnSettings getIPPortForService: %s failed to resolve
 [%s] %s:%d GKSConnSettings getIPPortForService: cached %08X:%u
 [%s] %s:%d GKSConnSettings getIPPortForService: %s == %08X:%u
 [%s] %s:%d value %s
 [%s] %s:%d %s is not present!
 [%s] %s:%d Disabling EVS on watch
 [%s] %s:%d storebag shows we do %s support iRAT recommendation
 [%s] %s:%d storebag does not have %s, enable iRAT recommendation support by default
 [%s] %s:%d storebag shows we should use rate controller type %d
 [%s] %s:%d storebag does not have %s, select both rate controller type by default
 [%s] %s:%d storebag value for '%@' is '%d'
 [%s] %s:%d storebag does not have '%@', default value '%d' selected
 [%s] %s:%d storebag does not have %@, default value '%d' selected
 [%s] %s:%d %s: Read key 'useAdaptiveLearningForFaceTime' from user defaults: %d
 [%s] %s:%d %s: No key 'useAdaptiveLearningForFaceTime' in user defaults. Trying to find it in the storebag
 [%s] %s:%d %s: found storebag value '%@'=%d
 [%s] %s:%d %s: storebag does not have %@, using defaul value %D
 [%s] %s:%d %s: storebag does not have %@, using defaul value %d
 [%s] %s:%d %s: found storebag value '%@'=%f
 [%s] %s:%d %s: storebag does not have %@, using defaul value %f
 [%s] %s:%d wrong type of statistics message is processed by VCRedundancyControl
 [%s] %s:%d GKInterfaceListener Dynamic store instance NULL, discontinuing Wifi detection.
 [%s] %s:%d DynamicStoreCallbackForWifiChanges: key[%d]=%s
 [%s] %s:%d GKInterfaceListener network %d %s
 [%s] %s:%d GKInterfaceListener no active interface found.
 [%s] %s:%d GKInterfaceListener SCDynamicStoreSetNotificationKeys failed
 [%s] %s:%d GKInterfaceListener: network information changed.
 [%s] %s:%d GKInterfaceListener: not setting up correctly
 [%s] %s:%d Link issues with interface %s 
 %s=%s 
 %s=%s 
 %s=%s
 [%s] %s:%d Didn't return a connection result in the ICE result wait queue.  This shouldn't happen
 [%s] %s:%d sampleBuffer is NULL for audioBufferList %p
 [%s] %s:%d sampleBuffer is NULL %p
 [%s] %s:%d remoteScreenAttributes is %f, %f
 [%s] %s:%d VCMomentsHistory %s
 [%s] %s:%d VCMomentsHistory %s photo writing to file success(%d)
 [%s] %s:%d VCMomentsHistory %s timestamp %d
 [%s] %s:%d current writer doesn't exist
 [%s] %s:%d sample is NULL
 [%s] %s:%d completion handler count is %lu
 [%s] %s:%d , %@
 [%s] %s:%d write to file %d %@
 [%s] %s:%d can not find such frame for timestamp %d in buffer
 [%s] %s:%d , setupBufferPool for resizing failed
 [%s] %s:%d VCMomentsHistory visible Width is %f, height %f rect (%f,%f) (%fx%f)
 [%s] %s:%d for %@
 [%s] %s:%d copying live photo for %@
 [%s] %s:%d copying file failed %@
 [%s] %s:%d copying file from  %@ to %@ error %d
 [%s] %s:%d handler for %@ not found
 [%s] %s:%d , failed to create sample buffer for %s, timestamp %d
 [%s] %s:%d Updating video buffer for timestamp %d
 [%s] %s:%d captureWidth is %d, captureHeight is %d
VCRC [%s] %s:%d Configuring VCRateControl algorithm with targetBitrate=%d, minBitrate=%d, maxBitrate=%d
VCRC [%s] %s:%d wrong type of statistics message is processed by VCRateControl
VCRC [%s] %s:%d Duplicated feedback or out-of-order feedback messages! timestamp:0x%04X, previousTimestamp:0x%04X
VCRC [%s] %s:%d Rate controller is paused
VCRC [%s] %s:%d Unknown VCRateControl state %d
VCRC [%s] %s:%d wrong type of statistics message is processed by VCRateControl baseband
VCRC [%s] %s:%d Pause VCRateControl algorithm
VCRC [%s] %s:%d Resume VCRateControl algorithm
VCRC [%s] %s:%d %8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%4u
MBL:%d
%4u/%4u
  CS:%04X %04X %u BB: %3u
 UAT %s _
VCTextStream [%s] %s:%d VCTextStream[%p] %s
VCTextStream [%s] %s:%d +[%s %s]:%d 
VCTextStream [%s] %s:%d -[(%s*)%p %s]:%d %@
VCTextStream [%s] %s:%d +[%s %s]:%d '%C'
VCTextStream [%s] %s:%d -[(%s*)%p %s]:%d %@'%C'
VCTextStream [%s] %s:%d +[%s %s]:%d %@
VCTextStream [%s] %s:%d -[(%s*)%p %s]:%d %@%@
VCTextStream [%s] %s:%d +[%s %s]:%d Error: -didReceiveText: should be called instead of this method.
VCTextStream [%s] %s:%d -[(%s*)%p %s]:%d %@Error: -didReceiveText: should be called instead of this method.
VCTextStream [%s] %s:%d +[%s %s]:%d error[%s]
VCTextStream [%s] %s:%d -[(%s*)%p %s]:%d %@error[%s]
VCTextStream [%s] %s:%d +[%s %s]:%d Failed to create transport
VCTextStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create transport
 [%s] %s:%d FigThreadCreate(LoopbackTunnelReceiveProc) failed %d
 [%s] %s:%d vtpIP = %s
 [%s] %s:%d LoopbackTunnelReceiveProc stopped
 [%s] %s:%d Video redundancy is disabled.
 [%s] %s:%d In-appropriate mode %d for VCRedundancyControllerVideo
 [%s] %s:%d Filter out statistics not belong to this redundancyController with id:%llu, statisticsID:%llu
 [%s] %s:%d Video redundancy percentage changed from %d to %d with mode %d
 [%s] %s:%d Video redundancy interval %f, which should be 0 since we don't support cross-frame FEC yet
 [%s] %s:%d Invalid parameters 'buffer' passed to the method
 [%s] %s:%d Invalid size of input data %d
 [%s] %s:%d Invalid parameters passed to the method
 [%s] %s:%d Size of input buffer is too small (%d < %d)
 [%s] %s:%d Attempt to set mapping for already mapped key '%@'. Suggested map '%d' will be ignored
 [%s] %s:%d Mapping set for '%@'
VCRC [%s] %s:%d AFRC: %8.3f %.3f/%04X %.4f(%d) %u %.4f %u %u %u %u%s
VCRC [%s] %s:%d AFRC: %8.3f/%04X: %.4f %.4f %.4f %.4f %c RTT:%u PLR:%4.1f@%.1f %u %u RRx:%u MBL:%d %3u/%3u%s
BB: %u
%s%s
VCRC [%s] %s:%d AdaptiveLearning(AFRC): Setting up initial bitrate for segment %@ - learnt target bitrate %d, selected tier %d, default bitrate %d
VCRC [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: calloc(%d) failed
VCRC [%s] %s:%d AFRCCreateHandle: RTCReportingAgent is nil
VCRC [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: AFRCCreateHandle failed
VCRC [%s] %s:%d AFRCCreateHandle (CellTech local[%s:%d] remote[%s:%d]).
VCRC [%s] %s:%d Invalid parameter dwTxCap %u
VCRC [%s] %s:%d AFRC: Forcing AFRC TxCap to %u from defaults
VCRC [%s] %s:%d ### AFRCSetTxCap: (%u->%u)
VCRC [%s] %s:%d *!*!*!* UpdateRxEstimate: too short Seq; ------ dBWD: 0 (%d/%f/%d) 
VCRC [%s] %s:%d ArrivalTime:%.4f, BWD:%.2f, state:%d, divergeCount:%d prob_seq:[duration:%.4f, size:%d, count:%d], EstimatedBandwidth:%.2f
VCRC [%s] %s:%d AFRCCalcRxEstimate [%d]: //////
/////@@@@@ tp: %d  ts/arr: %d/%f 
 seq: %d sz: %d 
 path: %d (%d)  BWD: %f/%f  Est: %f
VCRC [%s] %s:%d AFRCCalcRxEstimate [%d]: //////
VCRC [%s] %s:%d AFRCCalcRxEstimate [%d]: //////
VCRC [%s] %s:%d AFRCCalcRxEstimate [%d]: //////
/////@@@@@ tp: %d  ts/arr: %d/%f 
 seq: %d sz: %d 
 path: %d (%d)  BWD: %f/%f  Est: %f
VCRC [%s] %s:%d 
 AFRCCalcRxEstimate [%d]: //////
VCRC [%s] %s:%d Bandwidth estimation new: %d, afrc:%d
VCRC [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: Bad ACK, #dropped SN doesn't match(%d != %u).
VCRC [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: Bad ACK, #dropped SN exceeds limit(%d > %d).
VCRC [%s] %s:%d Baseband dropped %u packet(s) for PT %u.
VCRC [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/MediaQueue/AFRC.c:%d: Got PTs more than MAX_PAYLOADTYPES(%d) in a DropACK
VCRC [%s] %s:%d AFRCSetAudioPaused: local? %d, audio paused? %d
VCRC [%s] %s:%d AFRCUpdateCellTech: iLocalCellTech: %s -> %s  iRemoteCellTech: %s -> %s  fEnableRRx: %d  didHandover: %d
VCRC [%s] %s:%d ProcessWCMSetCallConfig: (%u->%u), interference: (%u), clientTxCap: %u
VCRC [%s] %s:%d ProcessWCMGetCallConfig: (TxCap %u, TxRate %u).
VCRC [%s] %s:%d ### Add BB dump for AFRC
VCRC [%s] %s:%d AFRCSetConnectionNumber (%d->%d)
VCRC [%s] %s:%d HackUploadBW: %d  V1BWE: %d 
VCRC [%s] %s:%d BWEstResetRecvrBWState
VCRC [%s] %s:%d BWEst FilterType: %d/%s <-- ImOnCellular: %d/%s  RemoteOnCellular: %d/%s  PeerIsOnIOS: %d 
VCRC [%s] %s:%d ////^^^^ BWEUpdateSenderRecvrEnabledStates: Sender/Recvr %d/%d iLocalCellTech: %s  iRemoteCellTech: %s
VCRC [%s] %s:%d ////^^^^ AFRCSetBWEstMode: Sender/Recvr (master) %d/%d 
VCRC [%s] %s:%d ////^^^^ AFRCSetBWEstMode: FALLING TO BW-EST BACKWARD COMPATIBLITY MODE
VCRC [%s] %s:%d AFRCSetBWECap newBitrateCap: %d -> dwFakeBitrateCap: %d  
VCRC [%s] %s:%d ### AFRC log %s
VCRC [%s] %s:%d ### AFRC dump %s
VCRC [%s] %s:%d 
@@@@@BIG FRAME report at %.3f, %d/%d frames: %s
VCRC [%s] %s:%d Audio fraction change [%.2f->%.2f].
VCRC [%s] %s:%d %s is hit, [audio:%u, factor:%.2f, FEC:%.2f, RED:%u, %u, %02X->%02X]
VCRC [%s] %s:%d AFRC: Video %s...
VCRC [%s] %s:%d AFRC: Congestion!!! TxRate v %u, Baseband.
VCRC [%s] %s:%d AFRC: Congestion!!! TxRate v %u
VCRC [%s] %s:%d AFRC: TxRate ^ %u
VCRC [%s] %s:%d AFRC: %s
VCRC [%s] %s:%d AFRC: [%u] Rate was limited
VCRC [%s] %s:%d AFRC: [%u] Stabilized (TxTS %u >= %u FB). now collecting samples...
VCRC [%s] %s:%d AFRC: [%u] Collected %d samples (TxTS %u)
VCRC [%s] %s:%d Forcing Audio FEC Level 100,150,200 at PLR:(%.2f, %.2f, %.2f) from defaults
VCRC [%s] %s:%d Forcing AFRC TxCap to %u from defaults
VCRC [%s] %s:%d Forcing AFRC TxRate to %u from defaults
VCRC [%s] %s:%d ////^^^^ Initial BWEstEnableNewst_Recvr/_Sender %d/%d  
 BWEstProbeInterval: %f  BWEstDemoLogInterval: %d  BWEstLogType: %d  BWEstLogLevel: %x 
VCRC [%s] %s:%d ///////////////////////AFRCCreateHandle startAFRC//////////////////////// %p
VCRC [%s] %s:%d ////////////////// Loss event reports //////////////////////////
///// Video: %d/%d
last seq#: %d 
 Audio: %d/%d last seq#: %d
///// Avg. BW: %f  
  with %d reports
///////////////////////////////////////////////////////
VCRC [%s] %s:%d //////
////// In %.1f seconds: Video: %f KB/%d = %d B  avg. %.1f kbits/s  %.1f pkts/s 
//////                  Audio: %f KB/%d = %d B  avg. %.1f kbits/s  %.1f pkts/s 
VCRC [%s] %s:%d 
///// Avg. BW (ORG Scheme): %f  
  with %d reports
////// In %.1f seconds: Video: %f KB/%d = %d B  avg. %.1f kbits/s  %.1f pkts/s 
//////                  Audio: %f KB/%d = %d B  avg. %.1f kbits/s  %.1f pkts/s 
///////////////////////////////////////////////////////
VCRC [%s] %s:%d Enabling LF
VCRC [%s] %s:%d ^ %.3f since last LF; CRITICAL: letting it go; size is %d 
VCRC [%s] %s:%d ^^^^^ LARGE frame req'd of %d 
VCRC [%s] %s:%d ^^^^^ LARGE frame req'd of %d (%d, %d, R %d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: calloc(%d) failed
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: CreateHandle failed
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: pthread_create(MediaQueueSendProc) failed (%08X)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: Request buffer size(%d) too big!
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/MediaQueue/MediaQueue.c:%d: Media queue closing, free packet!
 [%s] %s:%d MediaQueue_SetRedundantAudio (%d->%d)
 [%s] %s:%d MediaQueue_SetdAudioFraction (%.2f->%.2f)
 [%s] %s:%d MediaQueue_SetAudioFECLevel (%.3f->%.3f)
 [%s] %s:%d ^^^^^^ 
 @@@@@@@ActiveProbing_Uninit  V/A packets sent: %d/%d
 [%s] %s:%d ^^^^ SeqId for VMP TS/seq %d/%d to %d
 [%s] %s:%d AddPacket: ^^^^^^
 incoming %d %d/%d/%d 
 [%s] %s:%d AddPacket: ^^^^^^
 ProbeSeq %d/%d bNewProbeSeq %d bVideoPacketPartOfActiveProbeSeq %d 
 [%s] %s:%d AddPacket: ^^^^^^
 MP belonging to an active Probe. Going to the main list
 [%s] %s:%d AddPacket: ^^^^^^
 Audio %d CAME. KICKING ProbeSeq (%d) from %d/%d/%d to %d/%d/%d 
 [%s] %s:%d AddPacket: ^^^^^^
 Regular frame %d is blocked in the waiting list...
 [%s] %s:%d AddPacket: ^^^^^^
 ProbeSeq/Regular frame %d (%d) waiting for the next Audio
 [%s] %s:%d MediaQueueSendProc Thread start...
 [%s] %s:%d SENDPROC: ^^^^^^ @%.3f
MP %d  %d/%d/%d  QLen: %d/%d  Probe: %d
 [%s] %s:%d MediaQueueSendProc Thread end...
 [%s] %s:%d Refresh frame counter[%d], time[%.4f].
 [%s] %s:%d Adding extension failed with result %08X
 [%s] %s:%d RTP(%08X): seq number wc %d
 [%s] %s:%d Could not create crypto set for messaging, result:%X
 [%s] %s:%d Could not update encryption cryptors for messaging, result:%X
 [%s] %s:%d Can not set currentSendMKI with keyMaterial '%@': can not find corresponding cryptor
 [%s] %s:%d Can not set currentSendMKI with keyMaterial '%@': absent MKI
 [%s] %s:%d Oversize member key length (limit[%d], given[%d])
 [%s] %s:%d Oversize member salt length (limit[%d], given[%d])
 [%s] %s:%d updateEncryption: master key/salt derivation failed
 [%s] %s:%d SRTPUpdateEncryptionInfo: failed to update encryption info
 [%s] %s:%d Cryptor for keyIndex:%@ is updated
 [%s] %s:%d Failed to create cryptoInfo with keyIndex:%@
 [%s] %s:%d encryptData: with currentSendMKI='%@', sequenceNumber=%d
 [%s] %s:%d encryptData: _currentSendMKI (%@) failed to match any cryptors
 [%s] %s:%d decryptWithMKI: currentSendMKI='%@', sequenceNumber=%d
 [%s] %s:%d decryptWithMKI: MKI (%@) failed to match any cryptors
 [%s] %s:%d encode = %dx%d
 [%s] %s:%d Failed to create buffer queue
 [%s] %s:%d Failed to create thread "%s"
 [%s] %s:%d VCVideoStreamTransmitter startVideo
 [%s] %s:%d Drop a pending frame (encoder). Already has a frame for encoder
 [%s] %s:%d key frame requested for next pixel buffer.
 [%s] %s:%d key frame was already requested.
 [%s] %s:%d Not implemented!
 [%s] %s:%d Failed to get image buffer
 [%s] %s:%d sendFrame: Error while allocating %d bytes
 [%s] %s:%d sendFrame: Error: Error getting data buffer
 [%s] %s:%d sendFrame: Error while getting image buffer data
 [%s] %s:%d sendFrame: transmitEncodedVideoFrame returned error %d (0x%08x). isKeyFrame=%d
 [%s] %s:%d successfully sent key frame
 [%s] %s:%d VideoTransmitter transmit: Cannot check in RTP handle
 [%s] %s:%d VTU_SplitVideoIntoPackets returned 0
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCVideoStreamTransmitter.m:%d: VideoTransmitter transmitGroup failed (%08lX) for group (%d) #packet (%d)
 [%s] %s:%d VideoStreamStats - Tx - framerate:%f, bitrate:%dkbps
 [%s] %s:%d Tx RTCReporting:%s
 [%s] %s:%d Handling active connection change is not implemented for VCVST
 [%s] %s:%d Encoder thread "%s" terminated
 [%s] %s:%d Failed to dequeue sample buffer
 [%s] %s:%d frame encode error %d
 [%s] %s:%d VCCaptionsManager: Context already exists for stream token: %u
 [%s] %s:%d Discarding an old primary frame, timestamp %u, last Decoded %u
 [%s] %s:%d Discarding an old redundant frame, timestamp %u, last Decoded %u
 [%s] %s:%d Discarding duplicate audio frame isRedAudio:%d timestamp:%u
 [%s] %s:%d *** FATAL - Jitter Queue Max Hole Size is not set - FATAL ***
 [%s] %s:%d Jitter Queue was reset
 [%s] %s:%d Timestamp jumped to %d from %d when sequence moved to %d for payload:%d from %d for payload:%d
 [%s] %s:%d Results from initializtion: %@
 [%s] %s:%d Results from termination: %@
 [%s] %s:%d Effect type is already set to %d
 [%s] %s:%d streamIDsCell is nil
 [%s] %s:%d Cell stream %@ position %d, framesPerIdrPeriod %d
 [%s] %s:%d StreamScheduleCell is %@
 [%s] %s:%d streamIDsWifi is nil
 [%s] %s:%d Wifi stream %@, position %d, framesPerIdrPeriod %d
 [%s] %s:%d StreamScheduleWifi is %@
 [%s] %s:%d Setting pending streams %@
 [%s] %s:%d FrameTime is %f
 [%s] %s:%d Current interface isLocalOnCellular %d %@
 [%s] %s:%d anchor stream doesn't exist
 [%s] %s:%d schedule for anchor stream %@ on Wifi not found
 [%s] %s:%d schedule for anchor stream %@ on cell not found
 [%s] %s:%d no streams available
 [%s] %s:%d Stream is nil
 [%s] %s:%d reminder time percentage %f, expected time percentage %f
 [%s] %s:%d Requesting a streamID %@ that is not in any of the compound streamIDs
 [%s] %s:%d Schedule stream is nil for streamID %@, sendingStreamID %@
 [%s] %s:%d Stream is nil for streamID %@, sendingStreamID %@
 [%s] %s:%d Schedule stream is nil
 [%s] %s:%d AVCPacketFilterRTP: init filter with SSRC %08X, type %d
 [%s] %s:%d Forcing audio payload: %d
 [%s] %s:%d Invalid payload (%d) for forceAudioPayload. Forcing PureVoice.
 [%s] %s:%d Unsupported payload %d
 [%s] %s:%d Unsupported codec type %d
 [%s] %s:%d Unsupported mode %d
 [%s] %s:%d Unsupported bitrate %d
 [%s] %s:%d +[%s %s]:%d source %p is registered to sink %p
 [%s] %s:%d -[(%s*)%p %s]:%d %@source %p is registered to sink %p
 [%s] %s:%d error sink[%p] already registered
 [%s] %s:%d +[%s %s]:%d source %p is unregistered to sink %p
 [%s] %s:%d -[(%s*)%p %s]:%d %@source %p is unregistered to sink %p
 [%s] %s:%d error sink[%p] wasn't registered
 [%s] %s:%d source[streamToken=%ld] already existed
 [%s] %s:%d VCPowerSpectrumMeter failed to allocate
 [%s] %s:%d VCPowerSpectrumMeter[%p] created
 [%s] %s:%d +[%s %s]:%d Force disableAudioPowerSpectrumRegister is YES: inhibiting call to API_VCAUDIOPOWERSPECTURM_REGISTER_LISTENER_KEY
 [%s] %s:%d -[(%s*)%p %s]:%d Force disableAudioPowerSpectrumRegister is YES: inhibiting call to API_VCAUDIOPOWERSPECTURM_REGISTER_LISTENER_KEY
 [%s] %s:%d releasing old VCAudioPowerSpectrumMeter[%p]
 [%s] %s:%d meter[%p] spectrums[%@]
 [%s] %s:%d Error encoding audioPowerSpectrumDictionary[%@]
 [%s] %s:%d PSFB PLI will be sent in the next RTCP interval
 [%s] %s:%d PSFB PLI is already scheduled to be sent in the next RTCP interval
 [%s] %s:%d RTPFB TMMBR bitrate:%d, will be sent in the next RTCP interval
 [%s] %s:%d RTPFB TMMBR is already scheduled to be sent in the next RTCP interval
 [%s] %s:%d SRTCP encryption failed (%X)
 [%s] %s:%d SRTCP add authentication tag failed (%X)
 [%s] %s:%d RTCP receive failed! hResult:(%08X)
 [%s] %s:%d localSSRC:%X remoteSSRC:%X dwPacketExp = %u lPacketLost = %ld, dwPacketExpInt = %d, lPacketLostInt = %ld, fraction = %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Drop RTCP packet from a unknown connection.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: RTCP packet failed Version, padding bit, packet type check
 [%s] %s:%d SRTCP verification failed (%X)
 [%s] %s:%d SRTCP decryption failed (%X)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP SDES message
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP BYE message
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP FIR message
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP NACK message
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP PSFB message
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP RTPFB message
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP header
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP version
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Bad RTCP packet
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP SR packet
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTCPTransport.c:%d: Invalid RTCP RR packet
 [%s] %s:%d DatagramChannel creation failed with error %s
 [%s] %s:%d DatagramChannel setup failed
 [%s] %s:%d VCDatagramChannelManager: found existing datagram channel with token %d for destination %s
 [%s] %s:%d VCDatagramChannelManager: added datagram channel with token %d
 [%s] %s:%d VCDatagramChannelManager: removed datagram channel with token %d
 [%s] %s:%d VCDatagramChannelManager: removed destination %s
 [%s] %s:%d Failed to create dispatch timer
 [%s] %s:%d VCDispatchTimer[%p] timer has been cancelled
 [%s] %s:%d VCDispatchTimer[%p] timer is waiting to be test cancelled
 [%s] %s:%d VCDispatchTimer[%p] timer has been test cancelled
 [%s] %s:%d started a timer that was already running
 [%s] %s:%d stopped a timer that was already stop
VCAudioStream [%s] %s:%d %s Timestamp jumped: %u (%u to %u), host time: %f (%d samples) (%f to %f). Adjustment: %d
VCAudioStream [%s] %s:%d Stalling lastReceivedPacketTime %f currentTime %f
VCAudioStream [%s] %s:%d Unstalling lastReceivedPacketTime %f currentTime %f packetCount %d
VCAudioStream [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCAudioStream.m:%d: codecTypeFromAudioPayload: error unsupported payload type: %d
VCAudioStream [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCAudioStream.m:%d: Benign Error (possibly not): We started audio before we negotiated our codec.
VCAudioStream [%s] %s:%d alreadyStarted = %d
VCAudioStream [%s] %s:%d (%p) starting audioIO=%p
VCAudioStream [%s] %s:%d (%p) stopping audioIO=%p
VCAudioStream [%s] %s:%d +[%s %s]:%d Failed to retrieve codec config.
VCAudioStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to retrieve codec config.
VCAudioStream [%s] %s:%d +[%s %s]:%d Failed to setup receiver decoders.
VCAudioStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to setup receiver decoders.
VCAudioStream [%s] %s:%d Exiting state:%s Entering state:%s
VCAudioStream [%s] %s:%d +[%s %s]:%d Failed to allocate audio payloads
VCAudioStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate audio payloads
VCAudioStream [%s] %s:%d +[%s %s]:%d Failed to allocate the DTMF event handler
VCAudioStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate the DTMF event handler
VCAudioStream [%s] %s:%d +[%s %s]:%d 
VCAudioStream [%s] %s:%d -[(%s*)%p %s]:%d %@
VCAudioStream [%s] %s:%d VCAudioStream[%p] Failed to create the audio receiver
VCAudioStream [%s] %s:%d VCAudioStream[%p] Failed to set audio receiver payloads
VCAudioStream [%s] %s:%d VCAudioStream[%p] Failed to create the audio transmitter
VCAudioStream [%s] %s:%d +[%s %s]:%d Failed to create RTP extension. Error=%d
VCAudioStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create RTP extension. Error=%d
VCAudioStream [%s] %s:%d VCAudioStream[%p] Failed to create RTP extension. Error=%d
VCAudioStream [%s] %s:%d +[%s %s]:%d Reconfiguring VCAudioStream with a different number of transports.
VCAudioStream [%s] %s:%d -[(%s*)%p %s]:%d %@Reconfiguring VCAudioStream with a different number of transports.
VCAudioStream [%s] %s:%d +[%s %s]:%d error[%s]
VCAudioStream [%s] %s:%d -[(%s*)%p %s]:%d %@error[%s]
VCAudioStream [%s] %s:%d +[%s %s]:%d Reporting not available (no backends)
VCAudioStream [%s] %s:%d -[(%s*)%p %s]:%d %@Reporting not available (no backends)
VCAudioStream [%s] %s:%d +[%s %s]:%d Failed to create transport
VCAudioStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create transport
VCAudioStream [%s] %s:%d +[%s %s]:%d Failed to configure transport
VCAudioStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to configure transport
VCAudioStream [%s] %s:%d (%p) created audioIO=%p operatingMode:%d deviceRole:%d direction:%d
VCAudioStream [%s] %s:%d (%p) reconfigured audioIO=%p operatingMode:%d deviceRole:%d direction:%d
VCAudioStream [%s] %s:%d VCAudioStream[%p] setPauseAudio: error pausing audio
VCAudioStream [%s] %s:%d (%p) pausing audioIO=%p
VCAudioStream [%s] %s:%d VCAudioStream[%p] setPauseAudio: error unpausing audio
VCAudioStream [%s] %s:%d (%p) resume audioIO=%p
VCAudioStream [%s] %s:%d TargetStreamID didn't change %@
VCAudioStream [%s] %s:%d +[%s %s]:%d Setting target stream id: %@
VCAudioStream [%s] %s:%d -[(%s*)%p %s]:%d %@Setting target stream id: %@
VCAudioStream [%s] %s:%d VCAudioStream[%p] IOProc:  Missing grabbing lock onPlaySound at %u
VCAudioStream [%s] %s:%d VCAudioStream[%p] IOProc:  Missing grabbing lock onCaptureSound at %u
VCAudioStream [%s] %s:%d VCAudioStream[%p] PullAudioSamples count:%u, state:%d, participantID:[%@], audioReceiver[%p]
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPH264.c:%d: data size too big (%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPH264.c:%d: Invalid aggregation unit length (%d) for H264NALU_STAP_A packet, discarded.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPH264.c:%d: Invalid fragmentation unit length (%d)
 [%s] %s:%d JB Dump is %s
 [%s] %s:%d internalPayload is invalid.
 [%s] %s:%d Internal payload(%d)'s mapping is overwriten
 [%s] %s:%d External payloads send(%d), recv(%d) are used twice by existing internal payload %d and new internal payload %d. Treated as no-op
 [%s] %s:%d RTPMap is NULL!
 [%s] %s:%d *** RTPPrintRTPMapping *** external payload receive %d -> internal payload %d -> external payload send %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Unknown Payload Type(%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: calloc failed(%d)
 [%s] %s:%d %p Starting SeqNum for PayloadType %d = %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: CreateHandle failed(%08X)
 [%s] %s:%d Releasing the statisticsCollector:%p
 [%s] %s:%d Releasing the basebandCongestionDetector:%p
 [%s] %s:%d Releasing the mediaQueue:%p
 [%s] %s:%d RTP/RTCP Destination for PT%d = [IDS datagram channel token %u]
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: getaddrinfo(%s,%s) failed(%08X)
 [%s] %s:%d RTP/RTCP Destination for PT%d(%d) = [%s:%u/%u]
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: calloc(%d) failed
 [%s] %s:%d Invalid RTP handle
 [%s] %s:%d RTP SendRTP direction[%d] dropping packet
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Bad RTP extension length (%ld)
 [%s] %s:%d SRTP encryption failed (%X)
 [%s] %s:%d SRTP add authentication tag failed (%X)
 [%s] %s:%d Unknown packet passing to the VCMediaQueue!
 [%s] %s:%d Cannot alloc media packet from VCMediaQueue!
 [%s] %s:%d Cannot add media packet to VCMediaQueue!
 [%s] %s:%d Sent RTP packet with marker: %u, payload type: %u, sequence number: %u, timestamp: %u, ssrc: %u
 [%s] %s:%d RTP relay flag (%d->%d, S%d/R%d).
 [%s] %s:%d RTPSetRemoteSSRC [%d/%d]: SSRC = 0x%X(%u)
 [%s] %s:%d RTPSetCellularUniqueTag vfd = %d tag = 0x%X(%u)
 [%s] %s:%d RTPSetStreamDirection [%p] [%d/%d]: Direction[%d]
 [%s] %s:%d RTPSetSockets: Invalid sockets passed: rtp(%d) rtcp(%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: VTP_SocketWithRealSocket RTP failed(%08X)
 [%s] %s:%d Start listening RTP on sock %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: VTP_SocketWithRealSocket RTCP failed(%08X)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: VTP_Getsockname on %d failed(%08X)
 [%s] %s:%d Start listening RTCP on sock %d
 [%s] %s:%d RTP  vfd (%d) accepts pkt (%04X)
 [%s] %s:%d RTCP vfd (%d) accepts pkt (%04X)
 [%s] %s:%d RTP/RTCP sockets for PayloadType %d are %d and %d
 [%s] %s:%d RTPSetSockets hRTP %p, iSocRTP %d, dwRemoteSSRC %08X, cellularUniqueTag %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: VTP_SocketWithIDSDescriptor for RTP failed(%08X)
 [%s] %s:%d Start listening RTP on virtual socket %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: VTP_SocketWithIDSDescriptor for RTCP failed(%08X)
 [%s] %s:%d Start listening RTCP on virtual socket %d
 [%s] %s:%d RTPCreateSocketsForIDS iSocRTP %d, iSocRTCP %d, dwRemoteSSRC %08X, cellularUniqueTag %d
 [%s] %s:%d RTPCreateSocketsRetryBind: RTP port(%d) must be even
 [%s] %s:%d RTPCreateSocketsRetryBind failed to create RTCP socket: hResult(%x) port(%d)
 [%s] %s:%d RTPCreateSocketsRetryBind failed to create RTP socket: hResult(%x) port(%d)
 [%s] %s:%d RTPCreateSockets hRTP %p, iSocRTP %d, dwRemoteSSRC %08X cellularUniqueTag %d
 [%s] %s:%d CNAME for RTP Handle(%d) is [%s]
 [%s] %s:%d RTPCreateSockets hRTP %p, iSocRTP %d, dwRemoteSSRC %08X cellularUniquetag %d
 [%s] %s:%d RTPCreateSocket:VTP_SetAFRC failed with %d for hRTP/iSocRTP: %p/%d hAFRC %p 
 [%s] %s:%d RTPSetAFRCHandle:VTP_SetAFRC failed with %d for hRTP/iSockRTP: %p/%d  hAFRC %p 
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Bad version of RTP header extension!
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: RTP extension length(%u) invalid.
 [%s] %s:%d 
 RTPGetAFRCProbeSeqId for VP %d/%d: net %x   id %d 
 [%s] %s:%d INSERT: ^^^^^^ MP %d/%d/%d P: %d  PROBE_id: %d
 [%s] %s:%d INSERT: ^^^^^^ MP %d/%d/%d P: %d  PROBE_id: %d 
 [%s] %s:%d WRM: Set metric config = %d
 [%s] %s:%d Invalid parameter rtpHandle[%p] callbackContext[%p]!
 [%s] %s:%d Failed to checking rtpHandle[%p]
 [%s] %s:%d RTPHandle[%p] Packet callback already registered
 [%s] %s:%d RTPHandle[%p] Failed to allocate callback buffer (size:%lu)
 [%s] %s:%d RTPHandle[%p] Failed to allocate packet info (size:%lu)
 [%s] %s:%d RTPHandle[%p] Failed store the callback
 [%s] %s:%d RTPHandle[%p], Socket[%d] is invalid
 [%s] %s:%d RTPHandle:%p Packet callback was not registered
 [%s] %s:%d SSRC:%X
 [%s] %s:%d Received baseband notification with type %d
 [%s] %s:%d Received codec rate mode change request with suggested bitrate %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Drop RTP packet from a unknown source[%s].
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: First RTP packet had sequence number 0. Dropping
 [%s] %s:%d RTP(%d): recv started(%X,%X, %d) SeqNum = %u, TimeStamp = %u
 [%s] %s:%d %d packets dropped on sock %i
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: Wrong connection index: %d.
 [%s] %s:%d Invalid packet! length:%d iRet:%d iOffset:%d padding:%d, 
 [%s] %s:%d MEDIANOTIFICATION_DECRYPTION_STATUS callback failed. (%08lX)
 [%s] %s:%d Uninitializing RTP with error %X
 [%s] %s:%d Invalid RTP packet multiplex mode
 [%s] %s:%d CNAME for RTP(%p) is [%s]
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: socket failed(%08X)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: bind on %s failed(%08X)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/RTPTransport.c:%d: set sockopt IP_BOUND_IF failed
 [%s] %s:%d RTP error[%x]
 [%s] %s:%d Unexpected Codec Family: %d, asking for variable bitrate change using quality setting
 [%s] %s:%d %s mSampleRate : mFormatID : mFormatFlags : mBytesPerPacket : mFramesPerPacket : mBytesPerFrame : mChannelsPerFrame : mBitsPerChannel :
 [%s] %s:%d %s %8.0f    : %7s   :  0x%08x  : %8u        : %9u        : %8u       : %9u         : %9u       :
 [%s] %s:%d SoundDec_Create(%08x --> %08x)
 [%s] %s:%d Failed to register: %X
 [%s] %s:%d AudioConverterNew returned %d '%s'
 [%s] %s:%d AudioConverterSetProperty failed to set kAudioCodecPrivatePropertyEnableSAD with error %d
 [%s] %s:%d AudioConverterSetProperty failed to set kAudioConverterSampleRateConverterQuality with error %d
 [%s] %s:%d AudioConverterSetProperty failed to set kAudioCodecPropertySpeexEncodeQuality with error %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/SoundDec.c:%d: AudioConverterSetProperty failed to set property kAudioCodecPropertyBitRateControlMode with error %08x
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/SoundDec.c:%d: AudioConverterSetProperty failed to set property kAudioConverterPrimeMethod with error %08x
 [%s] %s:%d Leaving SoundDec_Create
 [%s] %s:%d AudioConverterFillComplexBuffer on lost packet returned %d
 [%s] %s:%d AudioConverter (%s/%d -> %s/%d) returned error %d%s during FillComplexBuffer.
 [%s] %s:%d Error filling a gap? packets[%d] < full_packets[%d]
 [%s] %s:%d %s AudioConverter (%s/%d -> %s/%d) returned error %d%s during FillComplexBuffer inBytes[%d] packets[%d].
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/SoundDec.c:%d: Failed to set DTX encoder primer sample buffer[%p] bytes[%d] err[%d]
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/SoundDec.c:%d: Failed to set max packet size[%d] for bitrate[%d] with err[%d]
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/SoundDec.c:%d: Failed to set bitrate[%d]: %d
 [%s] %s:%d NEW AUDIO BITRATE (vbr) set to %d
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEnableSAD with error %08x
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEVSSIDPeriod %d with error %08x
 [%s] %s:%d Set EVS channel aware offset to %d
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEVSRFParams %d with error %08x
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEVSFormatHandling %d with error %08x
 [%s] %s:%d AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyEVSDecodeRF %d with error %08x
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/SoundDec.c:%d: AudioConverterSetProperty failed to set property kAudioCodecPrivatePropertyAMRPayloadFormat %d with error %08x
 [%s] %s:%d SoundDec_SetBitrate Requested bitrate: %d
 [%s] %s:%d SoundDec_GetMagicCookie Failed to retrieve cookie [%p, %u] %d
 [%s] %s:%d SoundDec_GetSpeechCodecBundleData Failed to get bundle data [%p, %u] %d
 [%s] %s:%d SoundDec_SetMagicCookie Failed to set cookie [%p, %u] %d
 [%s] %s:%d SoundDec_SetMagicCookie succeeded %d
 [%s] %s:%d SoundDec didn't understand the asbd sent to it
 [%s] %s:%d CStrToFourcc: input %s, output %s(%X)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/Util.c:%d: calloc failed(%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/Util.c:%d: CreateHandle failed(%08X)
 [%s] %s:%d ReadFrameSliceHeader: UNEXPECTED payload %d
 [%s] %s:%d Resetting the ratio from %d:%d to 3:4
 [%s] %s:%d TranslateVCPSliceType unexpected type: %d
 [%s] %s:%d Connection is NIL
 [%s] %s:%d localSessionStats is invalid
VCRC [%s] %s:%d Time counter wrapped around
VCRC [%s] %s:%d Repeated or out of order timestamp detected when calculating OWRD
VCRC [%s] %s:%d Lag [%f = (%f) - (%f)] looks spurios (short %fs: long %fs : threshold %fs), discarding
VCRC [%s] %s:%d Detected out of order at send timestamp %X, previousTS:%X, timestampDiff:%d, current owrd:%f
VCRC [%s] %s:%d Detected spike at send timestamp %X, previousTS:%X, timestampDiff:%d, average send interval:%f, current owrd:%f
VCRC [%s] %s:%d Detected spike before send timestamp %X, previousTS:%X, timestampDiff:%d, average send interval:%f, current owrd:%f
VCRC [%s] %s:%d Detected out of order at receive timestamp %X, previousTS:%X, timestampDiff:%d, current owrd:%f
VCRC [%s] %s:%d Detected spike at receive timestamp %X, previousTS:%X, timestampDiff:%d, average send interval:%f, current owrd:%f
VCRC [%s] %s:%d Detected spike before receive timestamp %X, previousTS:%X, timestampDiff:%d, average send interval:%f, current owrd:%f
VCRC [%s] %s:%d Reset OWRD from %f to 0
 [%s] %s:%d VCMomentsHistoryBuffer Delegate parameter is nil
 [%s] %s:%d VCMomentsHistoryBuffer timestampQueue length %d != sampleMap length %d, sizes are inconsistent
 [%s] %s:%d Image not found in the buffer, retrieving the latest one instead
 [%s] %s:%d Can't find last object in timestamp queue, get last object in the image buffer
 [%s] %s:%d VCMomentsHistoryBuffer %s the old frame does not in buffer, something is wrong
 [%s] %s:%d timestamp %d exists already, enqueue failed
 [%s] %s:%d isPause[%d] begin
 [%s] %s:%d VCMediaStream didUpdateVideoConfiguration configDict is nil
 [%s] %s:%d VCMediaStream allocated new VCAudioStream %p
 [%s] %s:%d VCMediaStream allocated new virtual TTY device %p with mode %ld
 [%s] %s:%d Text device for stream token %ld
 [%s] %s:%d Couldn't find text stream for stream token %ld
 [%s] %s:%d VCMediaStream releasing old VCAudioStream[%p]
 [%s] %s:%d +[%s %s]:%d Unexpected stream type [%s]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Unexpected stream type [%s]
 [%s] %s:%d +[%s %s]:%d Failed to allocate stream config
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate stream config
 [%s] %s:%d VCMediaStream failed to set volume nil xpcDict
 [%s] %s:%d VCMediaStream setMomentsCollectorDelegate for audioStream=%p: videostream=%p, delegate=%p
 [%s] %s:%d VCMediaStream startSynchronization succeeded=%d %s
 [%s] %s:%d VCMediaStream failed to set PAUSE state, nil xpcDict
 [%s] %s:%d VCMediaStream failed to set stream direction nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtcpEnabled nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtpTimeOutEnabled nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtcpTimeOutEnabled nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtpTimeOutInterval nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtcpTimeOutInterval nil xpcDict
 [%s] %s:%d VCMediaStream failed to set rtcpSendInterval nil xpcDict
 [%s] %s:%d VCMediaStream failed to set 'input frequency meter enabled' nil xpcDict
 [%s] %s:%d VCMediaStream failed to set 'output frequency meter enabled' nil xpcDict
 [%s] %s:%d VCMediaStream allocated new VCVideoStream %p
 [%s] %s:%d VCMediaStream created momentsCollector for video stream %ld. vcMomentsCollectorDictionary=%@
 [%s] %s:%d VCMediaStream releasing old VCVideoStream %p. Removed momentsCollector for video stream %ld, vcMomentsCollectorDictionary=%@
 [%s] %s:%d +[%s %s]:%d Allocated new %s(%p)
 [%s] %s:%d -[(%s*)%p %s]:%d %@Allocated new %s(%p)
 [%s] %s:%d +[%s %s]:%d Releasing old %s(%p) stream:%ld 
 [%s] %s:%d -[(%s*)%p %s]:%d %@Releasing old %s(%p) stream:%ld 
 [%s] %s:%d %s VideoPacketBuffer pointer is null
 [%s] %s:%d VideoPacketBuffer pointer is null
 [%s] %s:%d VideoPacketBuffer[%p] wFirstSeqNumber:%d, dwFirstTimestamp=%d
 [%s] %s:%d pFECHeader is NULL
 [%s] %s:%d $ Discarding packet %d, frame %lu.  Packet.payload disagree, first %d, then %d
 [%s] %s:%d $ Discarding packet %d, frame %lu.  Packet.srcfmt disagree, first %d, then %d
 [%s] %s:%d $ Discarding packet %d, frame %lu.  Packet.pctype disagree, first %d, then %d
 [%s] %s:%d %s VideoPacketBuffer schedule pointer is null
 [%s] %s:%d group_id mismatch, expected (%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/VideoPacketBuffer.c:%d: malloc failed
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/VideoPacketBuffer.c:%d: RSU_Decode failed (%d)
 [%s] %s:%d recovered frame (%08X) group (%d:%d)
 [%s] %s:%d AssembleFrame_H264: FRAMEHEADER_SLICEINFO bad dictHeaderInfo
 [%s] %s:%d *** BAD FRAME -- %d: iSlices >= MAX_SLICES  Stop!
 [%s] %s:%d AssembleFrame_H264: FRAMEHEADER_SPSPPS bad dictHeaderInfo
 [%s] %s:%d RECEIVED SPS/PPS TS: %08X
 [%s] %s:%d AssembleFrame_H264: FRAMEHEADER_IMGDESC bad dictHeaderInfo
 [%s] %s:%d RECEIVED IMGDESC(%dx%d) TS:%08X
 [%s] %s:%d AssembleFrame_H264: Unknown InfoType: %d
 [%s] %s:%d RECEIVED NO IMGDESC YET TS:%08X
 [%s] %s:%d RECEIVED A FRAME WITH NO MATCHING SLICES(%d -> %d)
 [%s] %s:%d RECEIVED REFRESH FRAME TS:%08X BITS:%04X SLICES:%d
 [%s] %s:%d RECEIVED INTRA FRAME TS:%08X BITS:%04X SLICES:%d
 [%s] %s:%d RECEIVED IMGDESC ONLY TS:%08X
 [%s] %s:%d Audio decoder (%p) received a packet with unknown payload: %d
 [%s] %s:%d Found existing audio receiver (%p) decoder (%p) at index %u. Release decoder.
 [%s] %s:%d AudioDecoder is NULL
 [%s] %s:%d Failed to allocate payload structure for audio receiver (%p).
 [%s] %s:%d SoundDec_Create failed(%08X) for audio receiver (%p).
 [%s] %s:%d InternalBlockSize:%d useRTC:%d amrOctetAligned:%d payload:%d flags:%d blockSize:%d
 [%s] %s:%d Update audio receiver (%p) decoders: count=%u
 [%s] %s:%d Asking SpeechCodecBundleData for a invalid bundle data for payload type: %d
 [%s] %s:%d unable to read bundle data[%d]
 [%s] %s:%d No packets in the bundle data [%p, %u]
 [%s] %s:%d VCConnection: initWithConnectionResult: %s
 [%s] %s:%d VCConnection: isLocalIPPort: NO
 [%s] %s:%d VCConnection: isLocalIPPort: %s
 [%s] %s:%d VCConnection: isRemoteIPPort: NO
 [%s] %s:%d VCConnection: isRemoteIPPort: %s
 [%s] %s:%d VCConnection: isOnSameIPPortWithConnection: %s vs. %s
 [%s] %s:%d VCConnection: isOnSameIPPortWithConnection: YES
 [%s] %s:%d VCConnection: isOnSameIPPortWithConnection: NO
 [%s] %s:%d VCConnection: isOnSameInterfacesWithConnection: NO
 [%s] %s:%d VCConnection: isOnSameInterfacesWithConnection: %s vs. %s
 [%s] %s:%d VCConnection: isOnSameInterfacesWithConnection: %s
 [%s] %s:%d Downlink bitrate cap is not implemented for legacy VCConnection
 [%s] %s:%d Uplink bitrate cap is not implemented for legacy VCConnection
 [%s] %s:%d Setting uplink bitrate cap is not implemented for legacy VCConnection
 [%s] %s:%d Setting downlink bitrate cap is not implemented for legacy VCConnection
 [%s] %s:%d VCMoments request %@ is processed, ignoring the duplicate
 [%s] %s:%d VCMoments set capabilities %d
 [%s] %s:%d mode=%d, timestamp=%d, request %@
 [%s] %s:%d 
 [%s] %s:%d AVCMomentsRequestMode invalid
 [%s] %s:%d The number of requests exceeds the max %d
 [%s] %s:%d mode=%d, didSucceed=%d, fileSize=%ld
 [%s] %s:%d AVCMomentsRequestModeInvalid
VCAudioRedBuilder [%s] %s:%d %s %s
VCAudioRedBuilder [%s] %s:%d Discarding Red payload that is too big :%d
VCAudioRedBuilder [%s] %s:%d Discarding Red payload with too old sequence offset :%d
VCAudioRedBuilder [%s] %s:%d Discarding Red payload with too old timestamp offset :%d
VCAudioRedBuilder [%s] %s:%d timestampOffsetThreshold:%d highThreshold:%d lowThreshold:%d payloadTimestamp:%d
VCAudioRedBuilder [%s] %s:%d blockOffset:%d timestampOffset:%d redTimestamp:%d redPayload:%s
VCAudioRedBuilder [%s] %s:%d timestampOffset:%d redPayload:%s
VCAudioRedBuilder [%s] %s:%d Failed to allocate red payload buffer history
VCAudioRedBuilder [%s] %s:%d Cap exceeded for maxDelay:%d using %d instead
VCAudioRedBuilder [%s] %s:%d Cap exceeded for number of red payloads:%d using %d instead
VCAudioRedBuilder [%s] %s:%d redundant payloads count:%d
 [%s] %s:%d VTU_ReallocPktsInfo failed; iNewMaxPacketCount==0 BUT ppiPacketSizes: %p piCurPacketFlags: %p
 [%s] %s:%d VTU_ReallocPktsInfo requested %d exceeds the MAX pkts %d. 
 [%s] %s:%d VTU_ReallocPktsInfo requested %d. Already have larger %d pkts.
 [%s] %s:%d VTU_ReallocPktsInfo has exceeded the MAX pkts %d. 
 [%s] %s:%d VTU_ReallocPktsInfo failed to allocate %d elements for piPacketSizes.
 [%s] %s:%d VTU_ReallocPktsInfo.....Reallocing piPacketSizes from [0x%08x, 0x%08x):%d to [%p, %p):%d 
 [%s] %s:%d VTU_ReallocPktsInfo failed to allocate %d elements for piNewPacketFlags
 [%s] %s:%d VTU_ReallocPktsInfo.....Reallocing piPacketFlags from [0x%08x, 0x%08x):%d to [%p, %p):%d 
 [%s] %s:%d VTU_ReallocPktsInfo succeeded for %d elements.
 [%s] %s:%d VTU_SplitVideoIntoPackets: bEnableInitialMTUOverrideFor2G
MTU: %d %d->%d  Tx: %d  len: %d   %f->%f pkts 
 [%s] %s:%d UNEXPECTED: MTU: %d  LowerMTU: %d  dwTxRate: %d 
 [%s] %s:%d CU_SplitVideoIntoPackets failed sanity check!: iProbeSeqPacketSize = %d iProbeSeqFirstPacketSize = %d iProbeSeqPacketCount = %d len = %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: Invalid slice length (%d), discarded.
 [%s] %s:%d VTU_SplitVideoIntoPackets: FRAMEHEADER_IMGDESC/SPS bad RetrieveMBSlice
 [%s] %s:%d VTU_SplitVideoIntoPackets: FRAMEHEADER_SLICEINFO bad RetrieveMBSlice
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: calloc %d bytes failed
 [%s] %s:%d Skip the frame since we failed to prepare the last fragement
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: malloc %d bytes failed
 [%s] %s:%d Failed at VTU_ReallocPktsInfo!
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: %s: calloc failed.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/VideoTransmitterUtils.c:%d: Invalid size iGobs = %d, iHeads = %d, buffer size = %u, dataLen = %d
 [%s] %s:%d Found out-of-bound data length %d
 [%s] %s:%d Failed to initialize media line
 [%s] %s:%d Invalid media line type
 [%s] %s:%d Can't parse attribute: %s
 [%s] %s:%d Failed to allocate audio limiter
 [%s] %s:%d Audio limiter component not found.
 [%s] %s:%d Failed to create a voice limiter instance %d
 [%s] %s:%d Error AudioUnitSetProperty voiceLimiterUnit, kAudioUnitProperty_MaximumFramesPerSlice %d
 [%s] %s:%d Error AudioUnitSetProperty voiceLimiterUnit, kAudioUnitProperty_StreamFormat, kAudioUnitScope_Input %d
 [%s] %s:%d Failed to set the voiceLimiterUnit threshold db %d
 [%s] %s:%d Failed to set the voiceLimiterUnit min fast gain %d
 [%s] %s:%d Failed to set the voiceLimiterUnit fast gain release time %d
 [%s] %s:%d Failed to set the voiceLimiterUnit lookahead %d
 [%s] %s:%d Failed to set the voiceLimiterUnit input gain %d
 [%s] %s:%d Error AudioUnitInitialize voiceLimiterUnit %d
 [%s] %s:%d Error AudioUnitProcess voiceLimiterUnit %d
 [%s] %s:%d Failed to register all dynamic audio units
 [%s] %s:%d Failed to register
VCRC [%s] %s:%d VCRateControlMediaController init
VCRC [%s] %s:%d wrong type of statistics message is processed by media controller
VCRC [%s] %s:%d Baseband queue HWM is hit, [mediaSuggestion:%s%s%s]
VCRC [%s] %s:%d Baseband queue LWM is hit
VCRC [%s] %s:%d Baseband queue LWM is hit, [resume video]
VCRC [%s] %s:%d Video %s by user [rate:%u, videoStopped:%d]
VCRC [%s] %s:%d Suggest to stop video from rate controller due to congestion [pause:%d,stopByBB:%d,stopByRC:%d]
VCRC [%s] %s:%d Suggest to resume video from rate controller due to no congestion [pause:%d,stopByBB:%d,stopByRC:%d]
VCRC [%s] %s:%d Stop resuming video since user already pause the video
VCRC [%s] %s:%d Negative flush count: %d. Bad flush count maintainance!
VCRC [%s] %s:%d Audio sending bitrate is set higher than the available uplink bandwidth.
VCRC [%s] %s:%d A LARGE FRAME of %d size %s (req %d), rate:%f, [waste:%d wastBitrate:%d, avgWastBitrate:%d], txRate:%d, remoteBW:%d, throttling:%d
VCRC [%s] %s:%d Audio sending bitrate used up all available uplink bandwidth, do minimum probing by setting large frame size cap to 0
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Dialog.c:%d: Invalid Request message(%p)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Dialog.c:%d: calloc(%d) failed
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Dialog.c:%d: MQCreateHandle failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Dialog.c:%d: CreateHandle failed
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Dialog.c:%d: Invalid Response message(%p,%d,%d)
SIP [%s] %s:%d MatchSipMsgAndLock: got a closing handle.
SIP [%s] %s:%d Dialog(CREATED) Match(STATUS) [%s]=[%s], [%s]=[%s]
SIP [%s] %s:%d Dialog(CREATED) Match(REQUEST) [%s]=[%s], [%s]=[%s]
SIP [%s] %s:%d Dialog Match(STATUS): [%s]=[%s], [%s]=[%s], [%s]=[%s]
SIP [%s] %s:%d Dialog Match(REQUEST): [%s]=[%s], [%s]=[%s], [%s]=[%s]
 [%s] %s:%d Failed to compute a valid capture framerate
 [%s] %s:%d Computed base period: %d frames
 [%s] %s:%d Computed capture frame rate is not a valid frame rate (%d)
 [%s] %s:%d Capture frame (%d) rate is incompatible with stream frame rate (%d)
 [%s] %s:%d Computed capture frame rate: %d
 [%s] %s:%d Computed group list: %@
 [%s] %s:%d Computed scheduler item list: %@
 [%s] %s:%d Total budget: time:%dms weight:%d frames:%d
 [%s] %s:%d Bugdet computed for item: %@
 [%s] %s:%d Position next item (start position=%d leftDist=%d rightDist=%d): %@
 [%s] %s:%d Left item: %@
 [%s] %s:%d Right item: %@
 [%s] %s:%d Remaining items: %@
 [%s] %s:%d Place item in the right bucket (position=%d leftDist=%d rightDist=%d): %@ 
 [%s] %s:%d Place item in the left bucket (position=%d leftDist=%d rightDist=%d): %@ 
 [%s] %s:%d Placing first item: %@
 [%s] %s:%d HandoverReport: DID nominate connection %s as %s %s connection. Demote current: %d, replace current: %d
 [%s] %s:%d HandoverReport: DID NOT nominate connection %s
 [%s] %s:%d HandoverReport: Finished nominating a candidate pair. Primary %s; Secondary: %s; Pending primary: %s; Pending secondary %s
 [%s] %s:%d HandoverReport: %s received a nil VCConnection!
 [%s] %s:%d HandoverReport: set a PRIMARY connection %s
 [%s] %s:%d HandoverReport: new connection %s is not the pending primary %s
 [%s] %s:%d HandoverReport: Secondary nomination response comes back first. Use connection %s as a temporary primary
 [%s] %s:%d HandoverReport: set a SECONDARY connection %s
 [%s] %s:%d HandoverReport: new connection %s is not the pending secondary %s
 [%s] %s:%d HandoverReport: Add result %s %s connection %s. Primary %s; Secondary: %s; Pending primary: %s; Pending secondary: %s
 [%s] %s:%d HandoverReport: removed SECONDARY connection %s due to %s IPPort %s change
 [%s] %s:%d HandoverReport: removed PRIMARY connection %s due to %s IPPort %s change
 [%s] %s:%d HandoverReport: replace primary connection %s with new primary %s due to removed IPPort %s
 [%s] %s:%d HandoverReport: no available connection after interface change
 [%s] %s:%d reportConnection: reportingAgent is nil, can not report connections
 [%s] %s:%d reportConnection: %s
 [%s] %s:%d invalid parameters
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/MsgQue.c:%d: calloc(%d) failed
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/MsgQue.c:%d: CreateHandle failed
SIP [%s] %s:%d Message Queue is full
SIP [%s] %s:%d MQIgnore: out of memory
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/MsgQue.c:%d: ppSipMsg is NULL
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/MsgQue.c:%d: Message Queue Closed during MQGet
 [%s] %s:%d sessionInitializeBlock allocated new VCSession[%p]
 [%s] %s:%d sessionTerminateBlock releasing old VCSession[%p]
 [%s] %s:%d adding new VCSessionParticipant(s) with config(s):%s to VCSession[%p]
 [%s] %s:%d changing VCSessionParticipant[%p] audioEnabled to %d
 [%s] %s:%d changing VCSessionParticipant[%p] videoEnabled to %d
 [%s] %s:%d %@
 [%s] %s:%d Failed to create _streamTokenRemovedEventQueue
 [%s] %s:%d Failed to create _streamTokenAddedEventQueue
 [%s] %s:%d +[%s %s]:%d streamToken %lu is registered to source %p with spectrum %p
 [%s] %s:%d -[(%s*)%p %s]:%d %@streamToken %lu is registered to source %p with spectrum %p
 [%s] %s:%d error VCAudioPowerSpectrum already exists for streamToken[%@]
 [%s] %s:%d VCMomentsMessenger: Context already exists for stream token: %u
 [%s] %s:%d VCMomentsMessenger: Context doesn't exists for stream token: %u
 [%s] %s:%d VCMomentsManager: New moments client. Context=0x%p
 [%s] %s:%d VCMomentsManager: Unregister moments client. Context=0x%p
 [%s] %s:%d AVCMomentsManager: clientStartRequest %s
 [%s] %s:%d AVCMomentsManager: clientEndRequest %s
 [%s] %s:%d AVCMomentsManager: clientRejctRequest %s
 [%s] %s:%d notifyClientsWithStreamToken streamClientList is nil
 [%s] %s:%d Failed to issue sandbox extension for moments URL: %@
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Parse.c:%d: calloc(%d) failed
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Parse.c:%d: No Topline found in the message[%s]
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Parse.c:%d: No SIP Version found in Status-Line[%s]
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Parse.c:%d: Invalid SIP version in Status-Line[%s]
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Parse.c:%d: No status code found in Status-Line[%s]
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Parse.c:%d: Invalid status code(%d[%s])
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Parse.c:%d: No Method found in Request-Line[%s]
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Parse.c:%d: Extension Method is not supported[%s]
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Parse.c:%d: No RequestURI found in Request-Line[%s]
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Parse.c:%d: ParseSipUri failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Parse.c:%d: Invalid SIP version in Request-Line[%s]
 [%s] %s:%d VCMomentsCollector: dealloc for streamToken=%u
 [%s] %s:%d no delegate specified!
 [%s] %s:%d Network receive thread create failed (%d)
 [%s] %s:%d Out of order packets[%d,%d]
 [%s] %s:%d Sending RTCP PSFB FIR(%d)
 [%s] %s:%d bCameraStatusBits = %x
 [%s] %s:%d Invalid header extension profile 0x%x (should be 0x%x) or ID %d (should be %d)
 [%s] %s:%d processVideoRTP called RTPRecvRTP packet (%d bytes)
 [%s] %s:%d Received payload of unknown type %d
 [%s] %s:%d Received zero length packet (seq:%d, ts:%d, payload:%d)
 [%s] %s:%d Received RTCP SR
 [%s] %s:%d Received RTCP RR
 [%s] %s:%d Received RTCP SDES
 [%s] %s:%d Received RTCP PSFB:%d
 [%s] %s:%d currentTime=%.3f, lastFIRArrivalTime=%.3f, dRTT=%.3f
 [%s] %s:%d Ignoring too many FIR
 [%s] %s:%d Received TMMBR:%d, mantissa:%d, exponent:%d, overhead:%d adjusted TMMBN bitrate:%d
 [%s] %s:%d Received TMMBN:%d, mantissa:%d, exponent:%d, overhead:%d
 [%s] %s:%d Received unknown RTCP RTPFB:%d
 [%s] %s:%d Received RTCP FIR RFC 2032
 [%s] %s:%d Received RTCP NACK RFC 2032
 [%s] %s:%d Received RTCP APP
 [%s] %s:%d Received unknown RTCP packet type:%d
 [%s] %s:%d VRTCP: Fraction=%03d, Lost=%d, Jitter=%lu, RTT=%.3f, FIR=%d
 [%s] %s:%d CMSampleBufferCreate failed
 [%s] %s:%d CMBufferQueueEnqueue failed %d
 [%s] %s:%d Resetting VTDecompressionSession due to format change
 [%s] %s:%d timestamp:%08X count:%ld
 [%s] %s:%d CMSampleBufferGetDecodeTimeStamp is invalid timestamp:%u
 [%s] %s:%d CMBufferQueueDequeueAndRetain returned null!
 [%s] %s:%d CMSampleBufferCreateCopyWithNewTiming failed %d
 [%s] %s:%d VideoStreamStats - Rx - framerate:%f, bitrate:%dkbps
 [%s] %s:%d Rx RTCReporting:%s
 [%s] %s:%d Handling active connection change is not implemented for VCVSR
 [%s] %s:%d CMVideoFormatDescriptionCreateFromH264ParameterSets failed (%d)
 [%s] %s:%d frame decode error %d
 [%s] %s:%d +[%s %s]:%d Failed to copy local configuration!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to copy local configuration!
 [%s] %s:%d +[%s %s]:%d Nil remote participant data!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Nil remote participant data!
 [%s] %s:%d +[%s %s]:%d Failed to deserialize remote participant data!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to deserialize remote participant data!
 [%s] %s:%d +[%s %s]:%d Failed to process participant info!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to process participant info!
 [%s] %s:%d +[%s %s]:%d Failed to setup the remote audio stream
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to setup the remote audio stream
 [%s] %s:%d +[%s %s]:%d Failed to setup the remote video stream
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to setup the remote video stream
 [%s] %s:%d +[%s %s]:%d _isRedundancyRequested set to YES by forceFECRepairStream
 [%s] %s:%d -[(%s*)%p %s]:%d %@_isRedundancyRequested set to YES by forceFECRepairStream
 [%s] %s:%d +[%s %s]:%d Participant init %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant init %@
 [%s] %s:%d +[%s %s]:%d setRemoteVideoEnabled:%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@setRemoteVideoEnabled:%d
 [%s] %s:%d +[%s %s]:%d Ignoring setRemoteVideoEnabled:%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Ignoring setRemoteVideoEnabled:%d
 [%s] %s:%d +[%s %s]:%d Missing participant UUID
 [%s] %s:%d -[(%s*)%p %s]:%d %@Missing participant UUID
 [%s] %s:%d +[%s %s]:%d Missing media blob
 [%s] %s:%d -[(%s*)%p %s]:%d %@Missing media blob
 [%s] %s:%d +[%s %s]:%d Missing callInfo blob
 [%s] %s:%d -[(%s*)%p %s]:%d %@Missing callInfo blob
 [%s] %s:%d +[%s %s]:%d Media negotiation failed
 [%s] %s:%d -[(%s*)%p %s]:%d %@Media negotiation failed
 [%s] %s:%d +[%s %s]:%d Failed to allocate callInfo blob
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate callInfo blob
 [%s] %s:%d +[%s %s]:%d Remote Participant callInfoBlob = %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Remote Participant callInfoBlob = %@
 [%s] %s:%d +[%s %s]:%d Failed to allocate codec config for payload=%d!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate codec config for payload=%d!
 [%s] %s:%d +[%s %s]:%d Failed to allocate stream configuration!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate stream configuration!
 [%s] %s:%d +[%s %s]:%d Failed to setup the audio stream config
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to setup the audio stream config
 [%s] %s:%d +[%s %s]:%d Failed to allocate allocator entry!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate allocator entry!
 [%s] %s:%d +[%s %s]:%d Failed to retrieve the list of supported audio rules
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to retrieve the list of supported audio rules
 [%s] %s:%d +[%s %s]:%d Failed to allocate participant info
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate participant info
 [%s] %s:%d +[%s %s]:%d Failed to allocate audio stream config!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate audio stream config!
 [%s] %s:%d +[%s %s]:%d Failed to allocate audio stream config. The %d highest quality streams will not be available.
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate audio stream config. The %d highest quality streams will not be available.
 [%s] %s:%d +[%s %s]:%d Failed to setup bandwidth allocation table for audio!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to setup bandwidth allocation table for audio!
 [%s] %s:%d +[%s %s]:%d Failed to allocate audio stream!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate audio stream!
 [%s] %s:%d +[%s %s]:%d invalid capabilies dictionary!
 [%s] %s:%d -[(%s*)%p %s]:%d %@invalid capabilies dictionary!
 [%s] %s:%d +[%s %s]:%d No media entry found for stream ID: %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@No media entry found for stream ID: %@
 [%s] %s:%d +[%s %s]:%d Failed to match unknown activeStreamID %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to match unknown activeStreamID %@
 [%s] %s:%d +[%s %s]:%d Opted out of all video streams!!!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Opted out of all video streams!!!
 [%s] %s:%d +[%s %s]:%d Starting seamless video switch with target stream id: %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Starting seamless video switch with target stream id: %@
 [%s] %s:%d +[%s %s]:%d Non-seamless video switch with target stream id: %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Non-seamless video switch with target stream id: %@
 [%s] %s:%d +[%s %s]:%d Ending seamless video switch with target stream id: %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Ending seamless video switch with target stream id: %@
 [%s] %s:%d +[%s %s]:%d Trying to opt into more than %d video streams! Streams:%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Trying to opt into more than %d video streams! Streams:%@
 [%s] %s:%d +[%s %s]:%d Adding currently optedInVideoStreamID:%@ to allow seamless video stream transition. Force=%d, Bitrate %d -> %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Adding currently optedInVideoStreamID:%@ to allow seamless video stream transition. Force=%d, Bitrate %d -> %d
 [%s] %s:%d +[%s %s]:%d %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@%@
 [%s] %s:%d +[%s %s]:%d No compatible stream configuration!
 [%s] %s:%d -[(%s*)%p %s]:%d %@No compatible stream configuration!
 [%s] %s:%d +[%s %s]:%d New redundancy percentage %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@New redundancy percentage %d
 [%s] %s:%d +[%s %s]:%d Dismissing video redundancy
 [%s] %s:%d -[(%s*)%p %s]:%d %@Dismissing video redundancy
 [%s] %s:%d +[%s %s]:%d Requesting video redundancy
 [%s] %s:%d -[(%s*)%p %s]:%d %@Requesting video redundancy
 [%s] %s:%d +[%s %s]:%d PullAudioSamples count:%u, state:%d, VCAudioIO[%p] pullAudioSamples count %u, state:%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@PullAudioSamples count:%u, state:%d, VCAudioIO[%p] pullAudioSamples count %u, state:%d
 [%s] %s:%d +[%s %s]:%d videoIsExpected=%d, isRemoteMediaStalled=%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@videoIsExpected=%d, isRemoteMediaStalled=%d
 [%s] %s:%d +[%s %s]:%d framerate=%f, bitrate=%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@framerate=%f, bitrate=%d
 [%s] %s:%d +[%s %s]:%d updateWithCurrentFramerate returned YES. videoDegraded=%d, framerate = %f, bitrate = %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@updateWithCurrentFramerate returned YES. videoDegraded=%d, framerate = %f, bitrate = %d
 [%s] %s:%d +[%s %s]:%d Ignoring setVideoDegraded:%d with same value
 [%s] %s:%d -[(%s*)%p %s]:%d %@Ignoring setVideoDegraded:%d with same value
 [%s] %s:%d +[%s %s]:%d maxAudioEntryBitrate:%d isLocalOnWifi:%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@maxAudioEntryBitrate:%d isLocalOnWifi:%d
 [%s] %s:%d +[%s %s]:%d maxVideoEntryBitrate:%d videoQuality:%d isLocalOnWifi:%d isRedundancyRequested:%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@maxVideoEntryBitrate:%d videoQuality:%d isLocalOnWifi:%d isRedundancyRequested:%d
 [%s] %s:%d +[%s %s]:%d videoEnabled:%d remoteVideoEnabled:%d videoPaused:%d remoteVideoPaused:%d isVisible:%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@videoEnabled:%d remoteVideoEnabled:%d videoPaused:%d remoteVideoPaused:%d isVisible:%d
 [%s] %s:%d +[%s %s]:%d Failed to allocate video participant info
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate video participant info
 [%s] %s:%d +[%s %s]:%d Failed to allocate video stream config!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate video stream config!
 [%s] %s:%d +[%s %s]:%d Failed to allocate video stream config. The %d highest quality streams will not be available.
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate video stream config. The %d highest quality streams will not be available.
 [%s] %s:%d +[%s %s]:%d Failed to setup bandwidth allocation table for video!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to setup bandwidth allocation table for video!
 [%s] %s:%d Remote has no video streams
 [%s] %s:%d +[%s %s]:%d Switching from stream %@ to new stream %@, with opted-in stream %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Switching from stream %@ to new stream %@, with opted-in stream %@
 [%s] %s:%d +[%s %s]:%d FaceZoom is disabled.
 [%s] %s:%d -[(%s*)%p %s]:%d %@FaceZoom is disabled.
 [%s] %s:%d +[%s %s]:%d ActiveCount:%d audioPriority:%d audioActive:%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@ActiveCount:%d audioPriority:%d audioActive:%d
 [%s] %s:%d +[%s %s]:%d Updating prominence %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Updating prominence %d
 [%s] %s:%d +[%s %s]:%d stream:%p
 [%s] %s:%d -[(%s*)%p %s]:%d %@stream:%p
 [%s] %s:%d +[%s %s]:%d Got the first frame but did not receive remote video enabled control channel message!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Got the first frame but did not receive remote video enabled control channel message!
 [%s] %s:%d +[%s %s]:%d Completed transition to streamId:%d (previous:%@). Opt out of old stream id if needed.
 [%s] %s:%d -[(%s*)%p %s]:%d %@Completed transition to streamId:%d (previous:%@). Opt out of old stream id if needed.
 [%s] %s:%d IDS eventHandler called without event type
 [%s] %s:%d Received IDS data channel event[%@]
 [%s] %s:%d %s, IDSDataChannelEventUsageError
 [%s] %s:%d Received unknown IDSDatagramChannelEvent %d
 [%s] %s:%d IDS destination not set
 [%s] %s:%d DatagramChannel start failed with error %x
 [%s] %s:%d Caching piggyback blob %p
 [%s] %s:%d Set piggyback blob %p on datagram channel %d
 [%s] %s:%d HandoverReport: set default link %d on datagram channel %d
 [%s] %s:%d HandoverReport: new link established with link context %s
 [%s] %s:%d HandoverReport: link %s disconnected
 [%s] %s:%d HandoverReport: default link updated to %d
 [%s] %s:%d [(VCTransportSession*)%p %s]:%d IDS channel encryption info
 [%s] %s:%d [(VCTransportSession*)%p %s]:%d IDS channel membership change info
 [%s] %s:%d No valid remoteSessionInfo
 [%s] %s:%d Callee's accept delay %d milliseconds
 [%s] %s:%d got a nil connection, return
 [%s] %s:%d HandoverReport: discard link %d on datagram channel %d
 [%s] %s:%d synchronizer = %p, request = %p
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: SIPSetMessageDelegateForCallID: Invalid SIP Handle
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: SIPSetCellConditionChangeHandler: Invalid SIP Handle
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: fpAppCallback is NULL
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: Bad Transport Protocol(%d)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: calloc(%d) failed
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateHandle failed
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: TPCreateHandle failed(%08X)
SIP [%s] %s:%d SIPListenOnPhysicalInterface failed with error %08X
SIP [%s] %s:%d SIPListenOnVirtualInterface failed with error %08X
SIP [%s] %s:%d invalid SIP transport type %d
SIP [%s] %s:%d SIPStopListenOnInterface(Physical) failed with error %08X
SIP [%s] %s:%d SIPStopListenOnInterface(Virtual) failed with error %08X
SIP [%s] %s:%d SIPConnect start...
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: Call SIPStartListen first.
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: DLCountActiveDialogs(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateInvite failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: DLCreateHandle failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: DLGetMsg failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateCancel failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: TACreateHandle failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: TAStart failed(%08X)
SIP [%s] %s:%d Call request cancelled before receiving any response
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateAck failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: TPSend failed(%08X)
SIP [%s] %s:%d SIPConnect stop(%X)...
SIP [%s] %s:%d SIPCancel start...
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: Cannot find call ID(%d)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: DLPutMsg failed(%08X)
SIP [%s] %s:%d SIPCancel stop(%X)...
SIP [%s] %s:%d SIPHangup start with detailed code (%u), Reason:(%s)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: Call(%d) is in state %d
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateBye failed(%08X)
SIP [%s] %s:%d SIPHangup stop(%X)...
SIP [%s] %s:%d SIPCloseCall start...
SIP [%s] %s:%d SIPCloseCall stop(%X)...
SIP [%s] %s:%d SIPSendMessage start...
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateMessageInDialog failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: CallID(%d) is invalid
SIP [%s] %s:%d SIPSendMessage status(%d)...
SIP [%s] %s:%d HandoverReport: got %s back for candidateChangeMessage, status: %d
SIP [%s] %s:%d SIPSendMessage stop(%X)...
SIP [%s] %s:%d SIPSendMessageAll start...
SIP [%s] %s:%d SIPSendMessageAll stop(%X)...
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: pthread_create failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: Found no-match: Discard message(%08X)
SIP [%s] %s:%d SIPNewCallProc Thread start...
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: Invalid SIP Handle
SIP [%s] %s:%d SIPNewCallProc: SIPGETCALLEECALLID result == DENIED: Declining SIP INVITE
SIP [%s] %s:%d Found an existing dialog with Call ID %d. Closing.
SIP [%s] %s:%d Incoming call for Call ID %d
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: SendTAStatus cancelled
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: SendTAStatus failed(%08X)
SIP [%s] %s:%d SIPNewCallProc Thread end(%d)...
SIP [%s] %s:%d |        |        |        |    --- iBodyLen %d
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateGenericStatus failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: DLUpdate failed(%08X)
SIP [%s] %s:%d SIPCancelProc Thread start...
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: Cannot find a dialog to cancel, sending 481
SIP [%s] %s:%d SIPCancelProc Thread end(%d)...
SIP [%s] %s:%d SIPHangupProc Thread start...
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: Cannot find a dialog to hangup, sending 481
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: DLUnlock: failed to unlock.
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: DLUnlock: failed to unlock also.
SIP [%s] %s:%d SIPHangupProc Thread end(%d)...
SIP [%s] %s:%d SIPMessageProc Thread start...
SIP [%s] %s:%d SIP MESSAGE is missing a body - length = %d, body = %p
SIP [%s] %s:%d SIPMessageProc Thread end(%d)...
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SIP.c:%d: CreateStatus failed(%08X)
SIP [%s] %s:%d Invalid SIP packet multiplex mode
SIP [%s] %s:%d TPListenVirtualInterface failed(%08X)
SIP [%s] %s:%d SIPListenOnVirtualInterface succeeded
SIP [%s] %s:%d TPStopListen failed(%08X)
SIP [%s] %s:%d SIPStopListenOnInterface %s succeeded
SIP [%s] %s:%d TPListenOnPhysicalInterface failed(%08X)
SIP [%s] %s:%d TPListenOnPhysicalInterface on port %d
 [%s] %s:%d packetsExpectedForInterval:%u packetsLostForInterval:%u
 [%s] %s:%d %s:%d - Failed to receive TMMBN!
 [%s] %s:%d %s:%d received TMMBN:%u RTT:%.3f requested TMMBR:%u, operatingTierBitrate:%u
 [%s] %s:%d %s:%d TMMBR scheduled - new bitrate:%u
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipHdr.c:%d: No '%c' in the header[%s]
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipHdr.c:%d: No header field name[%s]
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipHdr.c:%d: CreateReasonHdr: calloc(%d) failed
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipHdr.c:%d: malloc(%d) failed
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipHdr.c:%d: Unsupported header[%s]
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipHdr.c:%d: calloc(%d) failed
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipHdr.c:%d: No '>' in SIP URI[%s]
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipHdr.c:%d: Multiple Event packages in Event header[%s]
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipHdr.c:%d: ParseReasonHdr calloc(%d) failed
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipHdr.c:%d: Invalid protocol version[%s] in Via
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipHdr.c:%d: No ']' after '[' for an IPv6 address[%s]
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipHdr.c:%d: More Via than the maximum %d
SIP [%s] %s:%d Relay external addr [%s] type %u channel %x
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateCallIDHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateContactHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateContentLengthHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateContentTypeHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateCSeqHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateFromHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateMaxForwardsHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateToHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateViaHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateUserAgentHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: malloc(%d) failed
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CopySipHeader failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: DLGetData failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateReasonHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateAcceptHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateAllowHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateExpiresHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateAllowEventsHdr failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: CreateMinExpires failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: Invalid SIP Message(%d)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: # of Via exceeded the maximum %d < %d+%d
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipMsg.c:%d: calloc(%d) failed
SIP [%s] %s:%d SIPCompressCallback: already compressed.
SIP [%s] %s:%d SIPCompressCallback: too small to compress %d
SIP [%s] %s:%d SIPCompressCallback: Not worth compressing %d --> %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipUri.c:%d: No colon after sip scheme[%s]
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipUri.c:%d: No ']' after '[' for an IPv6 address[%s]
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/SipUri.c:%d: Unknown URI parameter[%s]
 [%s] %s:%d failed to create Summer handle!
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transaction.c:%d: calloc(%d) failed
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transaction.c:%d: MQPut failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transaction.c:%d: CreateCancel failed(%08X)
SIP [%s] %s:%d TAInviteClientProc:%s
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transaction.c:%d: pthread_create failed(%08X)
SIP [%s] %s:%d TASetRTT: %d ms
SIP [%s] %s:%d TAInviteClientProc Thread start...
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transaction.c:%d: Invalid Transaction Handle
SIP [%s] %s:%d Save this ToTag: %s
SIP [%s] %s:%d TAInviteClientProc Thread end(%X)...
SIP [%s] %s:%d TANonInviteClientProc Thread start...
SIP [%s] %s:%d TANonInviteClientProc Thread end(%X)...
SIP [%s] %s:%d TAInviteServerProc Thread start...
SIP [%s] %s:%d TAInviteServerProc Thread end(%X)...
SIP [%s] %s:%d TANonInviteServerProc Thread start...
SIP [%s] %s:%d TANonInviteServerProc Thread end(%X)...
 [%s] %s:%d Ignoring key frame request key frame too soon for the same streamID:%d
 [%s] %s:%d Requesting Key Frame with stream ID %d
 [%s] %s:%d Invalid resolution %dx%d
 [%s] %s:%d VTCompressionSessionCreate failed (%d)
 [%s] %s:%d not implemented!
 [%s] %s:%d bitrateBps:%d, dataSizeBytes:%d, duration:%f
 [%s] %s:%d VTCompressionSession set average bitrate property failed with %d
 [%s] %s:%d VTCompressionSession set data rate limits property failed with %d
 [%s] %s:%d VTCompressionSessionEncodeFrame error: %d, the system may run into a low memory state
 [%s] %s:%d VTCompressionSessionEncodeFrame error: %d
 [%s] %s:%d VTCompressionSession is not initialized
 [%s] %s:%d HandoverReport: VCConnectionHealthMonitor is running
 [%s] %s:%d local? %d, audio paused? %d
 [%s] %s:%d HandoverReport: Reset _duplicationPending state if we stop duplication.
 [%s] %s:%d HandoverReport: enable duplication (%d) already applied.
 [%s] %s:%d HandoverReport: can't enable duplication when there is no secondary connection.
 [%s] %s:%d HandoverReport: Receive and cache local iRAT suggestion to %s.
 [%s] %s:%d HandoverReport: Receive and cache remote iRAT suggestion to %s %s duplication
 [%s] %s:%d VCConnectionManager: Delegate didn't implement primaryConnectionChanged
 [%s] %s:%d HandoverReport: connections %s, and %s are identical for primary, choosing %s
 [%s] %s:%d HandoverReport: connection %s %s optimal primary connection
 [%s] %s:%d HandoverReport: connection %s %s optimal secondary connection
 [%s] %s:%d VCConnectionManager: unrecognized connection quality: %d
 [%s] %s:%d HandoverReport: dupe state: %d and enableDuplication %d.
 [%s] %s:%d HandoverReport: actively request for the latest iRAT recommendation from WRM.
 [%s] %s:%d HandoverReport: Defaults settings force local iRATSuggestion to be %d
 [%s] %s:%d HandoverReport: duplication is not supported
 [%s] %s:%d HandoverReport: force handover instead of changing duplication by local iRAT suggestion.
 [%s] %s:%d HandoverReport: stop dupe by local iRAT suggestion.
 [%s] %s:%d HandoverReport: stop dupe by local iRAT but remain dupe by remote iRAT suggestion.
 [%s] %s:%d HandoverReport: start dupe by local iRAT suggestion.
 [%s] %s:%d HandoverReport: start dupe by both local and remote iRAT suggestion.
 [%s] %s:%d HandoverReport: local iRAT suggests %s during other type of duplication.
 [%s] %s:%d HandoverReport: force handover instead of changing duplication by remote iRAT suggestion.
 [%s] %s:%d HandoverReport: stop dupe by remote iRAT suggestion.
 [%s] %s:%d HandoverReport: stop dupe by remote iRAT but remain dupe by local iRAT suggestion.
 [%s] %s:%d HandoverReport: start dupe by remote iRAT suggestion.
 [%s] %s:%d HandoverReport: start dupe by both remote and local iRAT suggestion.
 [%s] %s:%d HandoverReport: remote iRAT suggests %s during other type of duplication.
 [%s] %s:%d HandoverReport: stop dupe with local iRAT suggestion in handover.
 [%s] %s:%d HandoverReport: stop dupe with both local and remote iRAT suggestion in handover.
 [%s] %s:%d HandoverReport: stop dupe with remote iRAT suggestion in handover.
 [%s] %s:%d HandoverReport: start dupe with local iRAT suggestion in handover.
 [%s] %s:%d Primary connection should not be nil
 [%s] %s:%d HandoverReport: start dupe by %s.
 [%s] %s:%d Start duplicate, %s for %.6f seconds.
 [%s] %s:%d HandoverReport: stop dupe by %s.
 [%s] %s:%d Request for the latest iRAT notification by resubscribing again
 [%s] %s:%d Get iRAT notification for %u, %u, %llu, (%llu, %llu)
 [%s] %s:%d wcmSetCallConfig callback.
 [%s] %s:%d wcmGetCallConfig callback.
 [%s] %s:%d WRMClient setup start.
 [%s] %s:%d WRMClient cleanup start.
 [%s] %s:%d Audio client is trying to start but session parameters have not been set! (client PID=%d)
 [%s] %s:%d +[%s %s]:%d Timeout occured while waiting for audio IO start!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Timeout occured while waiting for audio IO start!
 [%s] %s:%d VCAudioClient=%p
 [%s] %s:%d +[%s %s]:%d Timeout occured while waiting for audio IO stop!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Timeout occured while waiting for audio IO stop!
 [%s] %s:%d CMBlockBufferCreateWithMemoryBlock failed %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/Others/VideoUtil.m:%d: CMBlockBufferCreateWithMemoryBlock: error: %d, len: %d
 [%s] %s:%d CMSampleBufferCreate failed %d
 [%s] %s:%d CVPixelBufferCreate failed %d
 [%s] %s:%d VTPixelTransferSessionCreate failed %d
 [%s] %s:%d VTPixelTransferSessionTransferImage failed %d
 [%s] %s:%d Failed to create color space
 [%s] %s:%d CGDataProviderCreateWithData failed %d
 [%s] %s:%d source image is NULL
 [%s] %s:%d Failed to create exif jpeg
 [%s] %s:%d Invalid resolution: %d
SIP [%s] %s:%d >>>>>  ARPL packet is UNENCRYPTED in TPSendUDPPacketARPL (in Transport) <<<<<
SIP [%s] %s:%d >>>>>  ARPL packet pbMsg is NULL in TPSendUDPPacketARPL(in Transport) <<<<<
SIP [%s] %s:%d >>>>>  ARPL packet iLen==0 in TPSendUDPPacketARPL(in Transport) <<<<<
SIP [%s] %s:%d ((((( In TPCreateHandle with g_iHandleRefCount = %d and g_hActualTPHandle = %p )))))
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: calloc(%d) failed
SIP [%s] %s:%d ((((( In TPCreateHandle [A] phTP = %p and *phTP = %ld )))))
SIP [%s] %s:%d ((((( In TPCreateHandle [B] phTP = %p and *phTP = %ld )))))
SIP [%s] %s:%d ((((( In TPCreateHandle [C] phTP = %p and *phTP = %ld )))))
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: ICECreateHandle failed(%08X)
SIP [%s] %s:%d ((((( In TPCreateHandle AREA 1 with g_iHandleRefCount = %d and g_hActualTPHandle = %p )))))
SIP [%s] %s:%d ((((( Leaving TPCreateHandle successfully with g_iHandleRefCount = %d and g_hActualTPHandle = %p )))))
SIP [%s] %s:%d ((((( In TPCloseHandle with g_iHandleRefCount = %d and g_hActualTPHandle = %p )))))
SIP [%s] %s:%d Unmatched call to TPCreateHandle, TPCloseHandle called with non-positive ref count
SIP [%s] %s:%d TPGetLoopbackIP:: found loopbackIP = %s
SIP [%s] %s:%d TPGetLoopbackIP:: error loopbackIP = %s
SIP [%s] %s:%d Stop listening on IDS interface vfd %d
SIP [%s] %s:%d Stop listening on %s(%s) vfd %d
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: SipMsg doesn't have a Via header
SIP [%s] %s:%d Stop heartbeat to %s
SIP [%s] %s:%d Setting ice timeout to iceTimeout = %f
SIP [%s] %s:%d Keep listening on %s
SIP [%s] %s:%d Adding [%s] to list
SIP [%s] %s:%d ICEAddOneInterface failed %08x
SIP [%s] %s:%d Keep listening on virtual interface (vfd %d)
SIP [%s] %s:%d Interface '%s' is not in the routing table but still valid. Keeping it
SIP [%s] %s:%d Stop listening on %s
SIP [%s] %s:%d TPUpdateInterfaceList: %u
SIP [%s] %s:%d TPUpdateInterfaceList:%d valid interfaces found.
SIP [%s] %s:%d Setting ice timeout to %f
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: Remote candidate data is invalid (data:%p len:%d).
SIP [%s] %s:%d HandoverReport: TPProcessRemoteInterfaceChangeMessage, remote candidate list already updated
SIP [%s] %s:%d >>>>>  ARPL packet is UNENCRYPTED in sendudppacket(in Transport) <<<<<
SIP [%s] %s:%d >>>>>  ARPL packet pbMsg is NULL in sendudppacket(in Transport) <<<<<
SIP [%s] %s:%d >>>>>  ARPL packet iLen==0 in sendudppacket(in Transport) <<<<<
SIP [%s] %s:%d Retry SIP packet using default result key.
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: Retry SIP packet using default result key failed (%08lX).
SIP [%s] %s:%d >>>>>  ARPL packet is UNENCRYPTED in SendUDPPacketForCList(in Transport) <<<<<
SIP [%s] %s:%d SendUDPPacketForCList: SENDING PACKET FROM %s:%d
SIP [%s] %s:%d SendUDPPacketForCList: SENDING PACKET TO %s:%d
SIP [%s] %s:%d SendUDPPacketForCList: skip mismatched interface: IPv4
SIP [%s] %s:%d DTLS: entering (dwCallID == %08X)...
SIP [%s] %s:%d DTLS:: (dwCallID == %08X) found clist local IP == %s
SIP [%s] %s:%d DTLS:: (dwRemoteCallID == %08X) dtls to remote == %s
SIP [%s] %s:%d DTLS: initialize and perform handshake...
SIP [%s] %s:%d DTLS_Create failed with %d
SIP [%s] %s:%d dtls: ARPLSessionCreate(p2pID == %08X) ...
SIP [%s] %s:%d dtls: ARPLSessionCreate failed with %d
SIP [%s] %s:%d DTLS: handshake result == %08X ...
SIP [%s] %s:%d DTLS: error description [%s]
SIP [%s] %s:%d DTLS: exiting (hResult == %08X)...
SIP [%s] %s:%d Create socket for IDS interface failed with error %08X
SIP [%s] %s:%d Start listening on IDS interface vfd %d
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: pthread_create(TPRecvProc) failed(%08X)
SIP [%s] %s:%d TPRecvProc(%p) started
SIP [%s] %s:%d TPRecvProc already started
SIP [%s] %s:%d Transport(UDP) Thread start...
SIP [%s] %s:%d TPRecvProc: UNEXPECTED! Breaking the loop due to invalid pTP->sReset
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: select failed(%08X)
SIP [%s] %s:%d Transport(UDP) Thread end(%08X)...
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: recvfrom(%d) returned 0: empty message
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: recvfrom(%d) failed(%08X)
SIP [%s] %s:%d >>>> SKIPPING INCOMING ARPL PACKET! <!bEncrypted>  (in Transport) <<<<<
SIP [%s] %s:%d >>>> SKIPPING INCOMING ARPL PACKET! <!DTLS_IsConnected(pCList->hDTLS)>  (in Transport) <<<<<
SIP [%s] %s:%d RecvMessageUDP: ignore unrecognized OFT packet for callID %08X
SIP [%s] %s:%d RecvMessageUDP: localCallID == %08X remoteCallID == %08X
SIP [%s] %s:%d RecvMessageUDP: pass message SIP
SIP [%s] %s:%d Updating heartbeat from %s to %s
SIP [%s] %s:%d >>>>> Received incoming ARPL data with szMessage=[%s] and length=[%d] <NEED TO DO SOMETHING HERE> (in Transport) <<<<<
SIP [%s] %s:%d calloc(%d) failed(%08X)
SIP [%s] %s:%d [[%s
%s]] from %s
SIP [%s] %s:%d [[%s
<binary>]] from %s
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: ParseMessage failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: INVITE doesn't have Contact header.
SIP [%s] %s:%d doesn't have valid source destination info
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: CONTENT-LENGTH less than 0 (%d).
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: CONTENT-LENGTH incorrect (%d/%d).
SIP [%s] %s:%d Use relay external addr [%s], relay %u, channel %x
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: Via header missing or no field value
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: CSeq header missing
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: CONTENT-TYPE null when body not empty.
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: Decompress failed: %d, %d, (%08X)
SIP [%s] %s:%d Uncompressed SDP(%d): [%s] from size %d
SIP [%s] %s:%d Uncompress binary body from %d to %d
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: malloc(%d) failed
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: CallSIPMessageCallback failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: No network interface found.
SIP [%s] %s:%d %d interfaces found.
SIP [%s] %s:%d %d valid interfaces found. (pTP->pCList == NULL) = %d
SIP [%s] %s:%d Same Local and Destination IP:Port(%s)
SIP [%s] %s:%d ( )( )( )( )( ) SIP BODY IS BINARY? (%d)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: Compress Binary SDP failed(%08X)
SIP [%s] %s:%d RTP using %s and %s as hints
SIP [%s] %s:%d Overriding Video RTCP port from %u to %u
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: Compress INVITE/200 SDP failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: Compress other SIP SDP failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: ConstructSipMsg failed(%08X)
SIP [%s] %s:%d Send to %s [%s]
SIP [%s] %s:%d Compress binary body from %d to %d
SIP [%s] %s:%d Compress SDP(%d): [%s] to size %d
SIP [%s] %s:%d ( )( )( )( )( ) TP BINARY BODY (%d + %d)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: CreateSocketAndBind failed in TPAddIPPortToCLIST = (%08x)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: ICEAddOneInterface failed in TPAddIPPortToCLIST = (%08x)
SIP [%s] %s:%d RemoveCListForCallID for a callid [%d == %d]
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: getaddrinfo failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: getaddrinfo returned NULL
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: socket failed(%08X)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: bind on %d failed(%d)
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: getsockname failed(%08X)
SIP [%s] %s:%d Start listening on %s(%s) sock %d
SIP [%s] %s:%d CreateSocketAndBind: Unable to set delegatedUUID(%s) for socket %s with error %d)
SIP [%s] %s:%d CreateSocketAndBind: Set delegatedUUID(%s) for socket %s)
SIP [%s] %s:%d Invalid transport packet multiplex mode
SIP [%s] %s:%d HandoverReport: needUpdateRemoteCandidateList didn't find matched callID
SIP [%s] %s:%d TPConnectedCallback: pCCResult == %08X, fUseRelay = %d ...
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: TPConnectedCallback: CheckInHandle failed in the dispatched block
SIP [%s] %s:%d TPConnectedCallback: theCCResult == %08X, ifDidRecvPacket = %d fUseRelay = %d ...
SIP [%s] %s:%d TPConnectedCallback:: result#%d
SIP [%s] %s:%d TPConnectedCallback:: local = %s
SIP [%s] %s:%d TPConnectedCallback:: remote = %s
SIP [%s] %s:%d TPConnectedCallback:: src = %s
SIP [%s] %s:%d TPConnectedCallback:: dst = %s
SIP [%s] %s:%d TPConnectedCallback:: remoteSrc = %s
SIP [%s] %s:%d TPConnectedCallback:: relay ext = %s
SIP [%s] %s:%d TPConnectedCallback:: bIfRelay = %d wRelayServType = %d wChannelNumber = %04x
SIP [%s] %s:%d TPConnectedCallback:: cell_tech (local:%d, remote:%d)
SIP [%s] %s:%d TPConnectedCallback:: dwCallID = %08X iRemoteCallID = %08X
SIP [%s] %s:%d TPConnectedCallback:: upgrade = %d primary = %d, replace = %d
SIP [%s] %s:%d TPProcessICENomination Callback: callID[%08X] local[%s] dst[%s].
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: TPNewCandidatesCallback: CheckInHandle failed in the dispatched block
SIP [%s] %s:%d TPNewCandidatesCallback: blob size: %d
SIP [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/Transport.c:%d: TPRemoveIPPort: CheckInHandle failed in the dispatched block
AVCRC [%s] %s:%d Releasing baseband congestion detector:%p
 [%s] %s:%d compare method returning NSOrderedSame -- sort result will be indeterministic
 [%s] %s:%d result=%d (%@ vs. %@)
 [%s] %s:%d SRTPInfo not initialized properly. Call SRTPPrepareEncryption first
 [%s] %s:%d invalid SRTP exchange info provided
 [%s] %s:%d SRTPUpdateEncryptionInfo: attempt to set an invalid master key index
 [%s] %s:%d SRTPDeriveMasterKeyInfo: master key/salt derivation failed
 [%s] %s:%d SRTPEncryptData: In=[%s]
 [%s] %s:%d CCCryptorCreateWithMode failed with error %d
 [%s] %s:%d CCCryptorUpdate failed with error %d
 [%s] %s:%d SRTPEncryptData: Out=[%s]
 [%s] %s:%d SRTPEnc (SSRC==%08lX,SEQ=%u):
 [%s] %s:%d Max number of SRTP packets reached
 [%s] %s:%d Max number of SRTCP packets reached
 [%s] %s:%d No extra buffer space to add authentication tag
 [%s] %s:%d Invalid masterKeyIndex. Stop sending the packet
 [%s] %s:%d Authentication tag doesn't match. Authentication failed
 [%s] %s:%d SRTCP packet too short
 [%s] %s:%d SRTPCancelEncryption
 [%s] %s:%d PreCalc: dwROC=%u (wSeq=%u)
 [%s] %s:%d PreCalc: use dwROC=%u (wSeq=%u)
 [%s] %s:%d failed with error %d
 [%s] %s:%d Invalid operating mode %d, falling back to kSRTPOperatingModeRFCCompliant
 [%s] %s:%d   counters: [%s], ROC=%d
 [%s] %s:%d TCPTUNNEL: timer is deleted.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Request timed out after %5.2f sec.
 [%s] %s:%d TCPTUNNEL: timer is set.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: Unknown types: %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: socket error, tear down the connection.
 [%s] %s:%d TCPTUNNEL: wcb resume
 [%s] %s:%d TCPTUNNEL: put %d on write buffer.
 [%s] %s:%d TCPTUNNEL: shift %d, put %d on write buffer.
 [%s] %s:%d TCPTUNNEL: wcb: %d
 [%s] %s:%d TCPTUNNEL: socket is successfully connected %d.
 [%s] %s:%d TCPTUNNEL: We got a TCP connection!
 [%s] %s:%d TCPTUNNEL: Start SSL handshake
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Socket error, tear down the connection.
 [%s] %s:%d TCPTUNNEL: reset write buffer
 [%s] %s:%d TCPTUNNEL: wcb suspend
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Error parsing TURN message (%08X)
 [%s] %s:%d TCPTUNNEL: %d, Received TURN message: %x, %x
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: ProcessAllocateResponse failed
 [%s] %s:%d TCPTUNNEL: send saved ChannelBinding request now.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Got error response for Allocate request.
 [%s] %s:%d TCPTUNNEL: refreshing now.
 [%s] %s:%d TCPTUNNEL: refreshing after %5.2f seconds
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Got error response for ChannelBinding request.
 [%s] %s:%d TCPTUNNEL: Got TURN terminating response.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Got error response for Refresh request.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: throw away TURN Message(%x).
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: TCP/SSL socket is closed while accepting packets
 [%s] %s:%d TCPTUNNEL: SSL enabled channel has set up.
 [%s] %s:%d TCPTUNNEL: send Allocate request in queue now.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: handshake error: %d, %d
 [%s] %s:%d TCPTUNNEL: STARTING! %s
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: Only Carrier interface available.
 [%s] %s:%d TCPTUNNEL: interface %s is behind NAT64 with prefix %s
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: can't create socket
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: no port to bind to.
 [%s] %s:%d TCPTUNNEL: local IP %s, local port: %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: can't reserver buffer pool
 [%s] %s:%d TCPTUNNEL: attempt a TCP connection to %s
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: can't create write source.
 [%s] %s:%d TCPTUNNEL: connect is done immediately %d.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: We can't connect: %d, %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: can't create read source.
 [%s] %s:%d TCPTUNNEL: TCP tunnel released.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendAllocateMsg: MakeAllocateRequest error: %x
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendAllocateMsg: STUNEncodeMessage error: %x
 [%s] %s:%d sendAllocateMsg: save the message for set-up in progress.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendChannelBindingMsg: MakeChannelBindRequest error: %x
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendChannelBindingMsg: STUNEncodeMessage error: %x
 [%s] %s:%d sendChannelBindingMsgWithDict: save message for set-up in progress.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: sendRefreshMsg: STUNEncodeMessage error: %x
 [%s] %s:%d TCPTUNNEL: TCP channel is unbound.
 [%s] %s:%d TCPTUNNEL: closeTunnelSocket %d
 [%s] %s:%d TCPTUNNEL: Canceling the writeSource.
 [%s] %s:%d TCPTUNNEL: Canceling the readSource.
 [%s] %s:%d TCPTUNNEL: buffer pool limit reached.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: malloc error for a new node
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: malloc error for buffer %d
 [%s] %s:%d TCPTUNNEL: add new buffer to the pool %d
 [%s] %s:%d TCPTUNNEL: replace %d with %d.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/TCPTunnelClient.m:%d: TCPTUNNEL: not found in buffer pool %p
 [%s] %s:%d TCPTUNNEL: %s
VCCallSession [%s] %s:%d +[%s %s]:%d deviceRole = %d, transportType = %d
VCCallSession [%s] %s:%d -[(%s*)%p %s]:%d %@deviceRole = %d, transportType = %d
VCCallSession [%s] %s:%d RTCReporting: can't configure the reporting agent.
VCCallSession [%s] %s:%d RTCReporting: reporting dictionary %s
VCCallSession [%s] %s:%d setOperatingMode - startVideo failed with error %s
VCCallSession [%s] %s:%d setOperatingMode - stop failed with error %s
VCCallSession [%s] %s:%d framerate = %f, bitrate = %f, packetLossRate = %f
VCCallSession [%s] %s:%d updateWithCurrentFramerate returned YES. framerate = %f, bitrate = %f, packetLossRate = %f
VCCallSession [%s] %s:%d Found enableBBNote NO. Disable baseband notification
VCCallSession [%s] %s:%d Found enableRRx %d for AFRC.
VCCallSession [%s] %s:%d 
 VCCallSession:UpdateMTU remote is %s. Lowering local MTU: %d -> %d 
VCCallSession [%s] %s:%d VCCallSession:UpdateMTU MTU: %d -> %d Cellular: %d/%d 
VCCallSession [%s] %s:%d VCCallSession: handleCellTechChange (%s to %s) 
VCCallSession [%s] %s:%d VCCallSession: received unsupported cell tech change to %d
VCCallSession [%s] %s:%d Remote is legacy device: setting local bandwidth estimation cap: %d 
VCCallSession [%s] %s:%d VCCallSession: Local CellTech has changed %s, max bitrate %u, max remote bitrate %u
VCCallSession [%s] %s:%d VCCallSession: Local cell tech change ignored, current connection type %d
VCCallSession [%s] %s:%d VCCallSession: Remote CellTech has changed %s, max bitrate %u, max remote bitrate %u
VCCallSession [%s] %s:%d HandoverReport: transmitter updated features list string to %s, for payload: %ld
VCCallSession [%s] %s:%d NO matched features list string for selected payload %d
VCCallSession [%s] %s:%d Setting remote screen aspect ratio numbers %d/%d,%d/%d (%sPR), remote expects to receive %d/%d,%d/%d
VCCallSession [%s] %s:%d Could not find matching video codec for interface %d
VCCallSession [%s] %s:%d HandoverReport: schedule a pending primary connection change, old primary connection: %s
VCCallSession [%s] %s:%d invalid connection change state %ld
VCCallSession [%s] %s:%d HandoverReport: handle a pending primary connection change
VCCallSession [%s] %s:%d HandoverReport: audio/video setup done. Update connection change state to ready
VCCallSession [%s] %s:%d VCCallSession: Stalling lastReceivedPacketTime %f currentTime %f
VCCallSession [%s] %s:%d VCCallSession: Unstalling lastReceivedPacketTime %f currentTime %f packetCount %d
VCCallSession [%s] %s:%d roundTripTime = %d, packetLossRate = %f
VCCallSession [%s] %s:%d PLR too high:Disconnecting
VCCallSession [%s] %s:%d RTT too high:Disconnecting
VCCallSession [%s] %s:%d DTLS: Handshake done
VCCallSession [%s] %s:%d DTLS: Handshake error
VCCallSession [%s] %s:%d DTLS: Handshake OK...
VCCallSession [%s] %s:%d CheckRemoteCert: peerCN = '%s'
VCCallSession [%s] %s:%d Common names: %s
VCCallSession [%s] %s:%d CheckRemoteCert: specified peer common name not found...
VCCallSession [%s] %s:%d +[%s %s]:%d perfTimers=%s
VCCallSession [%s] %s:%d -[(%s*)%p %s]:%d %@perfTimers=%s
VCCallSession [%s] %s:%d Cancelling Timeout Source
VCCallSession [%s] %s:%d Connection timeout occurred, disconnecting
VCCallSession [%s] %s:%d startConnectionWithParticipantID: callID = %d, isCaller = %d, self.deviceRole = %d, caps = %s, inviteData = %s
VCCallSession [%s] %s:%d Failed to process response media blob
VCCallSession [%s] %s:%d SKEState_SetBlob(0) failed with error %d
VCCallSession [%s] %s:%d - Reporting not available (no backends)
VCCallSession [%s] %s:%d Received transportSession event %d while call is not ongoing. Skipping
VCCallSession [%s] %s:%d Received invalid transportSession event(%d)
VCCallSession [%s] %s:%d Received piggyback blob %p
VCCallSession [%s] %s:%d rtcpDescriptor failed: hRes = %08x
VCCallSession [%s] %s:%d WRM: vcWRMClient setup start.
VCCallSession [%s] %s:%d WRM: vcWRMClient cleanup start.
VCCallSession [%s] %s:%d WRM: Get iRAT notification for %u, %u, %llu, (%llu, %llu)
VCCallSession [%s] %s:%d WRM: Send iRAT status update for %u, %u
VCCallSession [%s] %s:%d WRM: Request for the latest iRAT notification by resubscribing again
VCCallSession [%s] %s:%d Failed to create audio rules for media negotiator
VCCallSession [%s] %s:%d Failed to create local feature string for media negotiator
VCCallSession [%s] %s:%d Failed to create local configuration for the media negotiator
VCCallSession [%s] %s:%d Failed to create media negotiator
VCCallSession [%s] %s:%d Failed to create the invite media blob
VCCallSession [%s] %s:%d Remote caller doesn't use media pre-negotiation
VCCallSession [%s] %s:%d Failed to process media blob
VCCallSession [%s] %s:%d Failed to create the response media blob
VCCallSession [%s] %s:%d Operating mode is INVALID
VCCallSession [%s] %s:%d Failed to generate the media blob
VCCallSession [%s] %s:%d falls back to SDP. remoteInviteData = %@, remoteMediaBlob = %@
VCCallSession [%s] %s:%d Local callInfoBlob = %s
VCCallSession [%s] %s:%d Both connectionBlob and callInfoBlob are nil. No callID and client version
VCCallSession [%s] %s:%d Remote callInfoBlob = %s
VCCallSession [%s] %s:%d setPauseAudio (was %d is %d state is %d)
VCCallSession [%s] %s:%d setPauseAudio early return due to state == %d
VCCallSession [%s] %s:%d Baseband codec not set propertly
VCCallSession [%s] %s:%d isVideoEnabled=%d
VCCallSession [%s] %s:%d failed to start video with error %@
VCCallSession [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCCallSession.m:%d: processRelayRequestResponseDict bailing because (![self isCallOngoing] == %d)
VCCallSession [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCCallSession.m:%d: processRelayUpdateDict bailing because (![self isCallOngoing] == %d)
VCCallSession [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCCallSession.m:%d: processRelayUpdateDict: remoteCallInfo is nil.
VCCallSession [%s] %s:%d STUB:processCancelRelayRequest:%s, %d
VCCallSession [%s] %s:%d >>>>> Sending ARPL data <%s> with callID %d (in VCCallSession) <<<<<
VCCallSession [%s] %s:%d framerate is not set.
VCCallSession [%s] %s:%d setSessionConferenceState, %d
VCCallSession [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCCallSession.m:%d: setSessionConferenceState: invalid state
VCCallSession [%s] %s:%d setSessionConferenceVisualRectangle: (%g, %g), %gx%g
VCCallSession [%s] %s:%d PeerProtocolVersion set to %d
VCCallSession [%s] %s:%d connectionEstablishedCallback: initialize remote cell bitrate cap to %u, cell tech %d, operation mode %d
VCCallSession [%s] %s:%d VCCallSession: sipConnectThreadProc
VCCallSession [%s] %s:%d VCSecureDataChannel already exists. Releasing it and creating a new one. 
VCCallSession [%s] %s:%d Setting up secureDataChannel with dataChannelSharedSecret %@
VCCallSession [%s] %s:%d VCSecureDataChannel init failed with error %s
VCCallSession [%s] %s:%d WCM: wcmSetCallConfig callback.
VCCallSession [%s] %s:%d WCM: wcmGetCallConfig callback.
VCCallSession [%s] %s:%d SIPINCOMINGCONFERENCE state == GKVoiceChatServiceStateCalleeAttemptingToConnect = %d, %d
VCCallSession [%s] %s:%d SIPINCOMING: WE ARE BUSY BUSY (state = %d)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: use DTLS-SRTP is enabled...
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: GKVoiceChatServiceSRTPEncryptionSetupError... (dtls-srtp)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: DTLS-SRTP is not enabled...
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: Need to wait for SRTP to init... (video)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: GKVoiceChatServiceSRTPEncryptionSetupError... (video)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: Need to wait for SRTP to init... (audio)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: end wait SRTP @ %.3f seconds (%08X)
VCCallSession [%s] %s:%d SIPCONNECTEDCONFERENCE: GKVoiceChatServiceSRTPEncryptionSetupError... (audio)
VCCallSession [%s] %s:%d sipCallback(SIPGENERICREPORTLOG):%s
VCCallSession [%s] %s:%d sipCallback: message %d requires no action.
VCCallSession [%s] %s:%d MediaCallback: call (%08X) is not using relay for connection %d
VCCallSession [%s] %s:%d MediaCallback: call (%08X) is upgraded from relay to P2P, relay will be torn down in handlePrimaryConnChange.
VCCallSession [%s] %s:%d MediaCallback: call (%08X) started with relay for connection %d
VCCallSession [%s] %s:%d MediaCallback: srtp key update is not supported for call (%08X).
VCCallSession [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCCallSession.m:%d: MediaCallback: notificaiton %d unknown, no action.
VCCallSession [%s] %s:%d startConnectionWithParticipantID: idsSocket and destination are invalid
VCCallSession [%s] %s:%d SKEState_CopyBlobSync(1) failed with error %d
VCCallSession [%s] %s:%d configureLegacyTransportWithInviteInfo failed: remote blob %s
VCCallSession [%s] %s:%d SKEState_Create failed with error %d
VCCallSession [%s] %s:%d SKEState_CopyBlobSync(0) failed with error %d
VCCallSession [%s] %s:%d Failed retreiving the localIdentity from APS
VCCallSession [%s] %s:%d setupEncryption
VCCallSession [%s] %s:%d networkConditionsTimeoutInSeconds = %f
VCCallSession [%s] %s:%d NQ = %.3f, RTT = %u, TxBW = %ub/sec, PLR = %.2f%%, PLaMR = %.2f%%, signal = [%d %d %d]
VCCallSession [%s] %s:%d DTLS force set to (%d) for call (%d): 
VCCallSession [%s] %s:%d NO DTLS force set for call (%d).  We are ignoring the capabilities passed.
VCCallSession [%s] %s:%d setupPeerInfo isAudioPausedToStart = %d, isVideoPausedToStart = %d
VCCallSession [%s] %s:%d VCCallSession: notifying delegate didStop %d:%d (%d, %d)
VCCallSession [%s] %s:%d Reporting excessive cellular data usage: signalingExcessiveCellularRxBytes %d, signalingExcessiveCellularTxBytes %d, mediaExcessiveCellularRxBytes %d, mediaExcessiveCellularTxBytes %d
VCCallSession [%s] %s:%d We are tearing down our heartbeat!
VCCallSession [%s] %s:%d sendTimings:Key = %d, value = %d
VCCallSession [%s] %s:%d SipCallbackNotification SIPMESSAGE...%s
VCCallSession [%s] %s:%d SipCallbackNotification SKEComplete...
VCCallSession [%s] %s:%d SipCallbackNotification SKECheckRemoteCert...
VCCallSession [%s] %s:%d SKECheckRemoteCert: peerCN = '%s'
VCCallSession [%s] %s:%d SKECheckRemoteCert: specified peer common name not found...
VCCallSession [%s] %s:%d SipCallbackNotification SKECheckRemoteCert valid == %d...
VCCallSession [%s] %s:%d SipCallbackNotification SKEReportError...
VCCallSession [%s] %s:%d The call failed.
VCCallSession [%s] %s:%d inviteeICEResultTimer:ready to go, %d
VCCallSession [%s] %s:%d createSDP failed
VCCallSession [%s] %s:%d localMaxBandwidth: %u remoteMaxBandwidth: %u answerBandwidth: %u
VCCallSession [%s] %s:%d Baseband codec information form negotiated settings: basebandCodecType:%s, sampleRate:%u
VCCallSession [%s] %s:%d Silence Suppression using DTX payload[%d] enabled
VCCallSession [%s] %s:%d Forcing Red to be disabled
VCCallSession [%s] %s:%d Apply negotiated redPayload settings. RedPayloadType:%d, isRedEnabled:%d
VCCallSession [%s] %s:%d Failed to set audio remote RTP id
VCCallSession [%s] %s:%d Failed to apply audio settings!!! error = (%s)
VCCallSession [%s] %s:%d Video settings not found in pre-negotiated settings
VCCallSession [%s] %s:%d No valid video rules found for the current connection settings
VCCallSession [%s] %s:%d Failed to apply video settings!!! error = (%s)
VCCallSession [%s] %s:%d failed: Couldn't create the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d failed: Couldn't prepare SRTP for the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d failed: Couldn't create the media queue handle! error = (%s)
VCCallSession [%s] %s:%d Callee: setMediaQueueStreamSettings returned NO
VCCallSession [%s] %s:%d HandoverReport: handover is %ssupported.
VCCallSession [%s] %s:%d Failed to start rate controller
VCCallSession [%s] %s:%d HandoverReport: iRAT recommendation is enabled.
VCCallSession [%s] %s:%d failed: Couldn't create the audio rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d Failed to start media queue
VCCallSession [%s] %s:%d Failed to start video
VCCallSession [%s] %s:%d Failed to start media!!! error = (%s)
VCCallSession [%s] %s:%d input SDP was NULL
VCCallSession [%s] %s:%d Couldn't create the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d Couldn't prepare SRTP for the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d Couldn't create the media queue handle! error = (%s)
VCCallSession [%s] %s:%d Callee: negotiatePayloadWithError returned NO with error %s
VCCallSession [%s] %s:%d Callee: setRTPPayloadWithError returned NO with error %s
VCCallSession [%s] %s:%d imageAttrForAnswer returned an error
VCCallSession [%s] %s:%d Callee: createSDP failed with error %s
VCCallSession [%s] %s:%d Couldn't create the audio transmitter!!! error = (%s)
VCCallSession [%s] %s:%d Video payload OVERRIDE to %d
VCCallSession [%s] %s:%d Override unrecognized payload
VCCallSession [%s] %s:%d Video receive payload OVERRIDE to %d
VCCallSession [%s] %s:%d Failed to allocate image attributes memory for image send
VCCallSession [%s] %s:%d Failed to allocate image attributes memory for image receive
VCCallSession [%s] %s:%d Failed to allocate image attributes memory for image send count
VCCallSession [%s] %s:%d Failed to allocate image attributes memory for image receive count
VCCallSession [%s] %s:%d sendSIPInviteWithError: createSDP failed with error %s
VCCallSession [%s] %s:%d sendSIPInviteWithError failed state: no longer attempting to connect! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: Couldn't create the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: Couldn't prepare SRTP for the rtp handles!!! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: Couldn't create the media queue handle! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: SDP string is empty! error = (%s)
VCCallSession [%s] %s:%d sendSIPInviteWithError failed: couldn't establish connection with SDP! error = (%s)
VCCallSession [%s] %s:%d %s: %s
VCCallSession [%s] %s:%d VCCallSession: FAILED TO PREPARE ENCRYPTION FOR AUDIO...
VCCallSession [%s] %s:%d VCCallSession: FAILED TO PREPARE ENCRYPTION FOR VIDEO...
VCCallSession [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCCallSession.m:%d: MediaQueue_CreateHandle failed (%08X)
VCCallSession [%s] %s:%d matched FeaturesString = [%s], for payload %d
VCCallSession [%s] %s:%d setMatchedFeaturesString returned NO for payload %d
VCCallSession [%s] %s:%d parseSDP failed
VCCallSession [%s] %s:%d SDP has basebandCodecType:%s, sampleRate:%d
VCCallSession [%s] %s:%d AllowAudioRecording: %d (local: %d remote: %d)
VCCallSession [%s] %s:%d isRTCPFBEnabled = %d
VCCallSession [%s] %s:%d Could not find matching codec
VCCallSession [%s] %s:%d Not using secondary audio, no codecs found
VCCallSession [%s] %s:%d Could not find matching video codec
VCCallSession [%s] %s:%d SetBWEstMode critical failure.
VCCallSession [%s] %s:%d ===== Actual Video Payload (%d) =====
VCCallSession [%s] %s:%d localMaxBandwidth: %d remoteMaxBandwidth: %d answerBandwidth: %d
VCCallSession [%s] %s:%d filterFeaturesListForPayloads: Unexpected for %s count: %d
VCCallSession [%s] %s:%d failed: result=%x
VCCallSession [%s] %s:%d RTPSetThrottlingAudioInterval returned %d
VCCallSession [%s] %s:%d negotiatePayloadWithError returned NO with error %s
VCCallSession [%s] %s:%d setRTPPayloadWithError returned NO with error %s
VCCallSession [%s] %s:%d setMediaQueueStreamSettings returned NO
VCCallSession [%s] %s:%d VCAudioReceiver_Start returned NO
VCCallSession [%s] %s:%d (state == GKVoiceChatServiceStateCallerAttemptingToConnect = %d, sipState = %d
VCCallSession [%s] %s:%d createAudioTransmitter returned NO with error %s
VCCallSession [%s] %s:%d sendSIPInvite returned NO error = %s
VCCallSession [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCCallSession.m:%d: Benign Error (possibly not): We started audio before we negotiated our codec.
VCCallSession [%s] %s:%d disableAudio is set to True, not starting audio!
VCCallSession [%s] %s:%d alreadyStarted = %d, isEnabled = %d
VCCallSession [%s] %s:%d 
VCCallSession [%s] %s:%d SAME device role %d set, No-Op
VCCallSession [%s] %s:%d Invalid transition from role %d to %d
VCCallSession [%s] %s:%d Updating from role %d to %d. shouldRestartAudio %d
VCCallSession [%s] %s:%d Finished starting audio didStart[%d]
VCCallSession [%s] %s:%d Finished stopping audio didStop[%d]
VCCallSession [%s] %s:%d stopping audio
VCCallSession [%s] %s:%d stop audio timed out
VCCallSession [%s] %s:%d starting audio
VCCallSession [%s] %s:%d updateDeviceRole: start audio timed out
VCCallSession [%s] %s:%d Finished update to role %d
VCCallSession [%s] %s:%d Sending VCCallingModeTopic %s
VCCallSession [%s] %s:%d Getting cookie for payload type %d
VCCallSession [%s] %s:%d Found enableTFRCLog YES. Enable rate control log
VCCallSession [%s] %s:%d Local device uses cellular:[%s], remote device uses cellular:[%s]
VCCallSession [%s] %s:%d Current connection number %d, enableBBDump %d
VCCallSession [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCCallSession.m:%d: AFRCCreateHandle failed (%08X)
VCCallSession [%s] %s:%d Starting AFRC
VCCallSession [%s] %s:%d Starting VCRateController (%p) and VCMediaController (%p)
VCCallSession [%s] %s:%d Failed to start AFRC
VCCallSession [%s] %s:%d Failed to start VCRC
VCCallSession [%s] %s:%d AMR packetsPerBundle[%d] octetAligned[%d] dtxEnabled[%d]
VCCallSession [%s] %s:%d EVS dtxEnabled[%d] evsSIDPeriod[%d]
VCCallSession [%s] %s:%d Selecting PL_AAC_ELD/24000!
VCCallSession [%s] %s:%d Selecting PL_AAC_ELD/22050!
VCCallSession [%s] %s:%d Selecting PL_AAC_ELD/16000!
VCCallSession [%s] %s:%d Selecting PL_G722!
VCCallSession [%s] %s:%d Selecting PL_OPUS
VCCallSession [%s] %s:%d Selecting PL_CN
VCCallSession [%s] %s:%d Selecting PL_SPEEX_8K
VCCallSession [%s] %s:%d Selecting PL_SPEEX_16K
VCCallSession [%s] %s:%d Selecting MULAW!
VCCallSession [%s] %s:%d Selecting PL_AMR_16000!
VCCallSession [%s] %s:%d Selecting PL_AMR_8000!
VCCallSession [%s] %s:%d Selecting PL_EVS_32000!
VCCallSession [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCCallSession.m:%d: RTPGetLocalSSRC for audio failed (%08X) handle = %p
VCCallSession [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCCallSession.m:%d: RTPGetLocalSSRC for video failed (%08X)
VCCallSession [%s] %s:%d Failing due to no remote packets.  local callid: %x
VCCallSession [%s] %s:%d Finished sip end action %d
VCCallSession [%s] %s:%d SIPSetDoKeyExchange = %d, ident = %s, peerCN =%s, caps = %s
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: SecIdentityCopyCertificate error
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: display common name(s) from local cert...
VCCallSession [%s] %s:%d %s
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: no common name(s) found in local cert...
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: done displaying common name(s) from local cert...
VCCallSession [%s] %s:%d setLocalIdentityForKeyExchange: no local cert found...
VCCallSession [%s] %s:%d pickFeaturesStringForPayload: DID NOT FIND payload %d.
VCCallSession [%s] %s:%d pickFeaturesStringForPayload for %d (%s) from %s: %s
VCCallSession [%s] %s:%d setMatchedFeaturesString: local=[%s] remote=[%s]
VCCallSession [%s] %s:%d NO matched featuresString
VCCallSession [%s] %s:%d TCP maxBitrateForConnectionType is %d
VCCallSession [%s] %s:%d Use general RelayBitRate for TCP: %d
VCCallSession [%s] %s:%d UDP maxBitrateForConnectionType is %d
VCCallSession [%s] %s:%d +[%s %s]:%d Not sending message. codecType = %s, codecRate = %s
VCCallSession [%s] %s:%d -[(%s*)%p %s]:%d %@Not sending message. codecType = %s, codecRate = %s
VCCallSession [%s] %s:%d Invalid VCCallSession packet multiplex mode
VCCallSession [%s] %s:%d Stop audio failed with error: %s
VCCallSession [%s] %s:%d disconnect: callID = %d state = %d, stateIsCallee = %d, didRemoteCancel = %d, didSend200OK = %d, error = %s
VCCallSession [%s] %s:%d VCCallSession callID[%u] receives message :%s
VCCallSession [%s] %s:%d VCCallSession callID[%u] received message about BasebandCodecChange type :%s, sampleRate %u
VCCallSession [%s] %s:%d HandoverReport: VCCallSession callID[%d] received message about remote candidate change:%s
VCCallSession [%s] %s:%d VCCallSession callID[%d] received message about PIP State change:%@
VCCallSession [%s] %s:%d VCCallSession received message about CellTech change :%d, remote bitrate %u
VCCallSession [%s] %s:%d moment message %s
VCCallSession [%s] %s:%d setupMomentsMessages message is nil
VCCallSession [%s] %s:%d Preferred interface message %s
VCCallSession [%s] %s:%d setupPreferredInterfaceMessage message is nil
VCCallSession [%s] %s:%d Receives message:%s, symptomID = %d, groupID = %@
VCCallSession [%s] %s:%d groupID is nil, return
VCCallSession [%s] %s:%d HandoverReport: sending SIP message to inform ipChange %s
VCCallSession [%s] %s:%d VCRC targetBitrateDidChange:%d, rateChangeCounter:%d callID %d
VCCallSession [%s] %s:%d VCRC mediaSuggestion:[%s,%s,%s,%s,%s,%s,%s]
VCCallSession [%s] %s:%d *pSendCount is zero (payload=%d)
VCCallSession [%s] %s:%d *pReceiveCount is zero (payload=%d)
VCCallSession [%s] %s:%d Removing resolution %dx%d %f for SDP
VCCallSession [%s] %s:%d Invalid connection type %d
VideoConference [%s] %s:%d +[%s %s]:%d 
VideoConference [%s] %s:%d -[(%s*)%p %s]:%d %@
VideoConference [%s] %s:%d Tearing down the natObserver.
VideoConference [%s] %s:%d session.requiresWifi = %d
VideoConference [%s] %s:%d New session array = %s
VideoConference [%s] %s:%d >>>>> ERROR: VCCallSession is nil (in VideoConference) <<<<<
VideoConference [%s] %s:%d >>>>> Relaying outgoing ARPL data from VideoConferenceManager to VCCallsession with callID=%d (in VideoConference) <<<<<
VideoConference [%s] %s:%d warmupForCall: Setting up the natObserver. (requiresWifi: %d)
VideoConference [%s] %s:%d Something is wrong with getting the snatmapserver
VideoConference [%s] %s:%d Getting natType: %d [requiresWifi: %d]
VideoConference [%s] %s:%d inviteDataForParticipantID:callID %d
VideoConference [%s] %s:%d inviteDataForParticipantID: session.requiresWifi = %d
VideoConference [%s] %s:%d inviteDataForParticipantID: Setting natType %d for callID %d
VideoConference [%s] %s:%d VideoConference: CALLID MISMATCH %p client callID %ld internal callID %u
VideoConference [%s] %s:%d Returning invite data: %s
connection-data-returned
VideoConference [%s] %s:%d connection-data-returned
VideoConference [%s] %s:%d natTypeForCallSessions(%s): natTypeDictionary %s. natType is %d.
VideoConference [%s] %s:%d setPauseAudio called...session = %s, callID = %d
VideoConference [%s] %s:%d setPeerCN: called...session = %s, peerCN = %s callID = %d
VideoConference [%s] %s:%d setSessionID: called...session = %s, sessionID = %s callID = %d
VideoConference [%s] %s:%d setPeerReportingID: called...peerReportingID = %s, session = %s, sessionID = %s callID = %d
VideoConference [%s] %s:%d audio for the session should not be running
VideoConference [%s] %s:%d deregisterForVideoFramesWithDeviceRole failed; self = %p
VideoConference [%s] %s:%d registerForVideoFramesWithDeviceRole failed; self = %p
VideoConference [%s] %s:%d self = %p, callID = %d, capabilities = %@, _deviceRole = %d
VideoConference [%s] %s:%d _startedSessions is not empty
VideoConference [%s] %s:%d (%p) reconfigured audioIO=%p operatingMode:%d deviceRole:%d direction:%d
VideoConference [%s] %s:%d startConnectionWithParticipantID called...session = %s, callID = %d
startConnectionWithParticipantID-completed
VideoConference [%s] %s:%d startConnectionWithParticipantID-completed
VideoConference [%s] %s:%d setCurrentFocus: updateLastReceivedPacket at focus for session: %p
VideoConference [%s] %s:%d setCurrentFocus: updateLastReceivedPacket at client for session: %p
stopAllCalls-completed
VideoConference [%s] %s:%d stopAllCalls-completed
stopCallID-completed
VideoConference [%s] %s:%d stopCallID-completed
cancelCallID-completed
VideoConference [%s] %s:%d cancelCallID-completed
remoteCancelledCallID-completed
VideoConference [%s] %s:%d remoteCancelledCallID-completed
VideoConference [%s] %s:%d VideoConference setPacketsPerBundle %d -> %d
VideoConference [%s] %s:%d processRelayRequestResponse:session %s
VideoConference [%s] %s:%d processRelayUpdate:session %s
VideoConference [%s] %s:%d IOProc:  Missing grabbing lock onCaptureSound at %u
VideoConference [%s] %s:%d VideoConference[%p] IOProc:  Missing grabbing lock onPlaySound at %u
VideoConference [%s] %s:%d START TALKING at %u
VideoConference [%s] %s:%d STOP TALKING at %u
VideoConference [%s] %s:%d Timestamp jumped by %d, %d to %d at %f. host time jump %f (%d)
VideoConference [%s] %s:%d Detected large timestamp jump by %d, from %d to %d. host time jump %f (%d)
VideoConference [%s] %s:%d pullAudioSamples() took a long time = %f
VideoConference [%s] %s:%d sipCallbackNotification:%d
VideoConference [%s] %s:%d shouldPrioritizeParticipantIDForSIPInvite %d
VideoConference [%s] %s:%d sipCallbackNotification:session = %s
VideoConference [%s] %s:%d %s matches session %s for %s
VideoConference [%s] %s:%d returns %s out of %s
VideoConference [%s] %s:%d sessionForIncomingParticipantID returned: %s
VideoConference [%s] %s:%d stopCallID: %d, didRemoteCancel = %d, session = %s
VideoConference [%s] %s:%d cancelCallID: %d, session = %s
VideoConference [%s] %s:%d defaultCleanupSession!
VideoConference [%s] %s:%d threadSafeCleanupSession!
VideoConference [%s] %s:%d threadSafeCleanupSession end!
VideoConference [%s] %s:%d cleanupSession: session = %s, session.state == GKVoiceChatServiceStateRunning = %d
VideoConference [%s] %s:%d InterruptMe:%s Begin Pausing audio session %s
VideoConference [%s] %s:%d InterruptMe:%s End Pausing audio session  done%s
VideoConference [%s] %s:%d VideoConference: didStart when call is not running? session %s
VideoConference [%s] %s:%d didStart:session %s, didStart = %d, connType = %u, InterfaceType = %s, %s, error = %s, claimed Session = %s
VideoConference [%s] %s:%d VideoConference: clean up session (call ID %d) with delay %ld, error %s
VideoConference [%s] %s:%d VideoConference: notifying delegate of didStop for call ID %d
VideoConference [%s] %s:%d VCCallSession callID[%d] call end audio metrics: %s
VideoConference [%s] %s:%d >>>>> Relaying incoming ARPL data from VCCallSession to VideoConferenceManager with callID=%d (in VideoConference) <<<<<
VideoConference [%s] %s:%d >>>>> DATA ERROR (in VideoConference) <<<<<
VideoConference [%s] %s:%d Unsupported data received from callId=%d with messageType=%u
VideoConference [%s] %s:%d +[%s %s]:%d session=%s
VideoConference [%s] %s:%d -[(%s*)%p %s]:%d %@session=%s
VideoConference [%s] %s:%d Forced interface change
VideoConference [%s] %s:%d NATTypeDictionaryUpdated: requiresWifi: %d  natTypeDictionary %s
VideoConference [%s] %s:%d Setting natType %d for callID %d
 [%s] %s:%d startConnectionWithBlob for P2P failed with error %s
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: VCCallSession: StartConnectionCheck failed(%X)
 [%s] %s:%d Force Relay is set for call (%d)
 [%s] %s:%d Relay: processRelayRequestResponseDict:%s, %d, %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayRequestResponseDict bailing because relay is not allowed.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayRequestResponseDict bailing because relayState is %d
 [%s] %s:%d processRelayRequestResponseDict: %s relay.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayRequestResponseDict: can't find relay type info in the dictionary
 [%s] %s:%d +[%s %s]:%d Unable to create TCPTunnel: %s
 [%s] %s:%d -[(%s*)%p %s]:%d %@Unable to create TCPTunnel: %s
 [%s] %s:%d +[%s %s]:%d Unabled to create UDP relay blob: %s
 [%s] %s:%d -[(%s*)%p %s]:%d %@Unabled to create UDP relay blob: %s
 [%s] %s:%d Relay: processRelayUpdateDict:%s, %d, %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayUpdateDict bailing because relay is not allowed.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayUpdateDict: wait until allocation is finished %d
 [%s] %s:%d processRelayUpdateDict: %s relay, %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: processRelayUpdateDict: can't find relay type info in the dictionary
 [%s] %s:%d TCPTUNNEL: relayUpdateDict %s
 [%s] %s:%d HandoverReport: secondary relay dispatch timed out after %5.2f sec. Start relay setup
 [%s] %s:%d HandoverReport: secondary relay dispatch timer is deleted.
 [%s] %s:%d HandoverReport: handlePrimaryConnChange, setup initial secondary relay
 [%s] %s:%d notifyDelegateToCancelRelay: No need, relay state %d.
 [%s] %s:%d notifyDelegateToCancelRelay: Resetting relay state from %d.
 [%s] %s:%d HandoverReport: setupSecondaryRelayForCall
 [%s] %s:%d HandoverReport: setupSecondaryRelay fail, relayState %d
 [%s] %s:%d MediaCallback: link doesnot match(%d, %d)
 [%s] %s:%d MediaCallback: call (%08X) has optimal P2P primary: cancel preemptive relay
 [%s] %s:%d MediaCallback: call (%08X) has optimal P2P primary: setup initial secondary relay
 [%s] %s:%d MediaCallback: not initial secondary relay, return, let ProcessRemoteIPChange setup secondary relay
 [%s] %s:%d MediaCallback: call (%08X) has optimal relay primary: setup secondary relay
 [%s] %s:%d MediaCallback: add a pending relay count = 1 relayFlag: %d, let handlePrimaryConnChange start initial secondary relay
 [%s] %s:%d initiateRelayRequest: caller start relay in %f seconds
 [%s] %s:%d initiateRelayRequest bailing because already connected
 [%s] %s:%d initiateRelayRequest bailing because relay has already started %d
 [%s] %s:%d initiateRelayRequest bailing because transportSession has been stopped
 [%s] %s:%d Remote ICE Version:%u, handover is %ssupported.
 [%s] %s:%d networkStateDidChange: Failed updating interface list %x
 [%s] %s:%d networkStateDidChange: checking for %s.
 [%s] %s:%d networkStateDidChange: no need to collect blob: %d, %d, %d.
 [%s] %s:%d networkStateDidChange: Error %x getting connection data!
 [%s] %s:%d HandoverReport: Relay state: %d, local blob is updated %s
 [%s] %s:%d HandoverReport: processRemoteIPChange: callID:%u length:%d
 [%s] %s:%d HandoverReport: Bad blob version number: %d
 [%s] %s:%d connectionResultCallback: pConnResult = %p, didReceiveICEPacket = %d resultCount = %d, secretKey = %p, skeResult = %d
 [%s] %s:%d Key exchange failed with error: %d
 [%s] %s:%d HandoverReport: P2P established, no need for TCP relay.
 [%s] %s:%d TCPTUNNEL: continue with ChannelBinding, %s.
 [%s] %s:%d TCP Channel is set up, time out ICE right away.
 [%s] %s:%d HandoverReport: Remove loopback connection %s
 [%s] %s:%d call [transport getLoopbackIP]...
 [%s] %s:%d done [transport getLoopbackIP]...
 [%s] %s:%d call tunnel setVTPIP...
 [%s] %s:%d done tunnel setVTPIP...
 [%s] %s:%d HandoverReport: Add loopback connection %s
 [%s] %s:%d Didn't find valid remote candidate ID, cannot create relay dictionary
 [%s] %s:%d VCCallSession: preparing for secondary connection, %x, %x
 [%s] %s:%d createInitiateRelayDictionaryForCall: No new candidate for secondary connection
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCTransportSessionLegacy.m:%d: createRelayUpdateDictionary: requestResponse is %s
 [%s] %s:%d createRelayUpdateDictionary: dict %s
 [%s] %s:%d The max blob size allowed = %d
 [%s] %s:%d Error %x getting sip connection data!
 [%s] %s:%d connectDataSizeInBytes = %d, connectionData = %p, transport = %p
 [%s] %s:%d Relayconnectiondata = %s
 [%s] %s:%d SIPGetConnectionData failed, retrying
 [%s] %s:%d VCCallSession generateConnectionData: timed out
 [%s] %s:%d [transport setICETimeout] timeout failed with %08x
 [%s] %s:%d number of connection is %d
 [%s] %s:%d NULL bundlerOut
 [%s] %s:%d allocate failed
 [%s] %s:%d CMSimpleQueueCreate failed (%d)
 [%s] %s:%d NULL bundler
 [%s] %s:%d NULL mediaPacket
 [%s] %s:%d mediaPacket->next is not NULL
 [%s] %s:%d mediaPacket->dataSizeByte(%u) is bigger than bundler->currentMTUBytes(%u)
 [%s] %s:%d Failed to add media packet to bundler (%d)
 [%s] %s:%d NULL outputBlockHandler
 [%s] %s:%d Output Block failed (%d)
 [%s] %s:%d Reach of number of max packets
VCTextReceiver [%s] %s:%d Failed to create the jitter buffer
VCTextReceiver [%s] %s:%d Failed to initalize the text receiver thread
VCTextReceiver [%s] %s:%d VCTextReceiver cleanup DONE!
VCTextReceiver [%s] %s:%d +[%s %s]:%d 
VCTextReceiver [%s] %s:%d -[(%s*)%p %s]:%d %@
VCTextReceiver [%s] %s:%d Failed to start jitter buffer
VCTextReceiver [%s] %s:%d received packet time[%f]
VCTextReceiver [%s] %s:%d RTPReceiveRTP returned[%x] sleeping 15000usecs??
VCTextReceiver [%s] %s:%d Received an error %x
VCTextReceiver [%s] %s:%d +[%s %s]:%d Receiving RTP packet
VCTextReceiver [%s] %s:%d -[(%s*)%p %s]:%d %@Receiving RTP packet
VCTextReceiver [%s] %s:%d Failed to retrieve RTCP packet. Error:%x
VCTextReceiver [%s] %s:%d Received a packet with unknown payload: %d
VCTextReceiver [%s] %s:%d Payload not supported:%d
VCTextReceiver [%s] %s:%d Failed to enqueue packet
VCTextReceiver [%s] %s:%d FATAL - Unrecognized payload type: %d
VCTextReceiver [%s] %s:%d FATAL - Unable to fit audio data into the audioFrame buffer. Data size: %d, padding len: %u
VCTextReceiver [%s] %s:%d FATAL - Failed to create frame. Data size: %d, padding len: %u
VCTextReceiver [%s] %s:%d Unexpected payload type: %u
VCTextReceiver [%s] %s:%d Discarding empty text frame
VCTextReceiver [%s] %s:%d +[%s %s]:%d Received text:%@ length:%lu
VCTextReceiver [%s] %s:%d -[(%s*)%p %s]:%d %@Received text:%@ length:%lu
 [%s] %s:%d >>>>> Relaying incoming ARPL data from VideoConference to AVConference via XPC (in VideoConferenceManager) <<<<<
 [%s] %s:%d >>>>> DATA ERROR (in VideoConferenceManager) <<<<<
 [%s] %s:%d SOMETHING WENT WRONG MAKING THE SIP HANDLE!%08x
 [%s] %s:%d VideoConferenceManager:  starting sip with refCount = %d
 [%s] %s:%d SOMETHING WENT WRONG IN SIP LISTEN! %08x
 [%s] %s:%d SIPCallback tried to use stale/invalid handle %d. actual is %d
 [%s] %s:%d Entering cleanupVTP...with isVTPInitialized = %d and sip is invalid = %d
 [%s] %s:%d Finished cleanupVTP...
 [%s] %s:%d VideoConferenceManager:  stopping sip with refCount = %d
 [%s] %s:%d InterruptMe: (%d) pauseVideoConferences begin
 [%s] %s:%d InterruptMe: (%d) Pausing audio and video for conference %s
 [%s] %s:%d SIPCallback: %p, dwCallID = %d (%d)
 [%s] %s:%d SIPCallback: VCManager %p matched VC %s to get callee callID
 [%s] %s:%d VideoConferenceManager: CellConditionChangeCallback
 [%s] %s:%d VCM:VTPCallback: context (%p) notification (%d) data (%p) optional (%p).
 [%s] %s:%d VCM: Receive remote-no-remote-packet notification, %f. callID %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VideoConferenceManager.m:%d: VTPCallback error: unknown notificaiton %d.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VCMemPool_Create(%d) failed
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: calloc(%d) failed
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: CreateHandle failed (%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTPRecvProc thread failed (%d)
 [%s] %s:%d WMM is %s.
 [%s] %s:%d Override DisableWMM due to FT traffic class is set.
 [%s] %s:%d Force FaceTime traffic class to (%d).
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid FaceTime traffic class value (%d), ignore.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTPRecvProc thread(%p) started...
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Close failed due to invalid handle.
 [%s] %s:%d VTPRecvProc thread(%p) end...
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Socket failed due to invalid handle.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_GetVFD returned invalid handle.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: socket failed (%d)
 [%s] %s:%d VTP create VFDList failed with errno %d
 [%s] %s:%d VTP_SetPayloadList failed due to invalid handle.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_SetPayloadList failed to alloc.
 [%s] %s:%d VTP_SetPayloadList for vfd[%d]: %i payloads:%s
 [%s] %s:%d VTP_SetSocketMode failed due to invalid input mode.
 [%s] %s:%d VTP_SetSocketMode failed due to invalid handle.
 [%s] %s:%d VTP_SetPktType failed due to invalid handle.
 [%s] %s:%d VTP_AddPktType failed due to invalid handle.
 [%s] %s:%d VTP_RemovePktType failed due to invalid handle
 [%s] %s:%d VTP_Getsockname failed due to invalid handle.
 [%s] %s:%d VTP_SetRTPSSRC failed due to invalid handle.
 [%s] %s:%d VTP_SetTransportSessionID failed due to invalid handle.
 [%s] %s:%d VTP_Setsockopt failed due to invalid handle.
 [%s] %s:%d VTP_Getsockopt failed due to invalid handle.
 [%s] %s:%d VTP_Close failed due to invalid handle.
 [%s] %s:%d VTP_Bind failed due to invalid handle.
 [%s] %s:%d All binding tries failed. Trying a random port...
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: bind failed(%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Sendto failed due to invalid parameter.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Sendto failed due to invalid packet type (%d).
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Sendto failed due to invalid handle.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: DTLS_Write failed %08X.
 [%s] %s:%d VTP_Sendto: isICEPacket = 1  mbLocal = %s, mbLocalIsCellular = %d, mbDst = %s, matchedType = %d, shouldCountBytes = %d, length = %lu, numResult = %d, isSecondaryCellular = %d
 [%s] %s:%d HandoverReport: matching localIP: %s
 [%s] %s:%d HandoverReport: matching vfd, %s
 [%s] %s:%d got a NULL VPKTFlag
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s: failed due to invalid handle.
 [%s] %s:%d got a NULL datagramsVPKTFlag
 [%s] %s:%d got a NULL datagramsLength
 [%s] %s:%d got a NULL datagramsBuffer
 [%s] %s:%d got a bad datagramsCount %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: Failed due to invalid handle
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: callID should not be 0 when sending IDS compound packet
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: index=%d, statsID = %d
 [%s] %s:%d VTP_Recvfrom failed due to invalid handle.
 [%s] %s:%d VTP_Recvfrom failed due to no real socket found for vfd
 [%s] %s:%d VTP_Recvfrom failed due to socket already closed
 [%s] %s:%d VTP_Recvfrom truncates pkt [%d->%d].
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_SetAFRCRecvMode failed due to invalid handle.
 [%s] %s:%d VTP_SetAFRC failed due to invalid handle.
 [%s] %s:%d VTP_NotifyAFRCRxEstimate INVALID_HANDLE
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_NotifyAFRCRxEstimate
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: Failed due to invalid parameter.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: Failed VTP check-in
 [%s] %s:%d Failed to add new vfd set.
 [%s] %s:%d Failed to copy readFDs.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: Failed VTP check-in.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_Select failed due to invalid parameter.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_GetSendRecvStats failed due to invalid handle.
 [%s] %s:%d VTP_GetSendRecvStats %lld/%lld
 [%s] %s:%d VTP_SetCellularUniqueTag failed due to invalid handle.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_SetRTPSrc failed due to invalid handle.
 [%s] %s:%d VTP_SetRTPSrc for callID(%08X) local[%s] dst[%s].
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: RealSocketForConnectionResult returned invalid socket
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: ioctl(SIOCSIFLOG) for interface %s failed with error %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTPCallback failed due to undefined pointer.
 [%s] %s:%d VTP_DetectNAT64Prefix failed due to invalid handle.
 [%s] %s:%d Interface %s (VFD %d) IS behind NAT
 [%s] %s:%d Interface %s (VFD %d) ISNOT behind NAT (result %d, local is IPv6 %d, isNoneZero %d)
 [%s] %s:%d VTP registered connectionManager %p with callID %d
 [%s] %s:%d VTP de-registered connectionManager with callID %d, remaining items number %ld
 [%s] %s:%d ***VTP_GetVFD: UNEXPECTED; ran out of vfd's with i=%d. There must be some socket LEAK!
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: vfd (%d) is out-of-range.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: No VFD result found.
 [%s] %s:%d VTP default result key uses vfd(%d) for send.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: No VFD found for default result key.
 [%s] %s:%d HandoverReport: packet destination matched connection result %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid relay server type(%d).
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: SessionID is NULL, cannot generate MAC, reset flag.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: SessionID length 0, cannot generate MAC, reset flag.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: No key available to generate MAC, reset flag.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: PrepareOFTCRC32 failed due to invalid parameter.
 [%s] %s:%d Health Monitor for VTP Send [packet count:%d, byte count:%d, interval:%.3fs, rate:%.3fkbps]
 [%s] %s:%d Health Monitor for VTP Recv [packet count:%d, byte count:%d, interval:%.3fs, rate:%.3fkbps][maxQueueLength:%d, maxQueueDelay:%.2fms]
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s failed due to invalid handle.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s failed due to VFDList not found.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTPRecvProc failed due to invalid handle.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: select failed (%08X)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: Select timeout, VTP has received with total of %d packets
 [%s] %s:%d Triggering osChannelInfoLog [IDS readyToReadCount: %d]
 [%s] %s:%d Channel token %u didn't match a channel, cannot log os channel info!
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s(%d) returned 0: empty message
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s(%d) failed (%08X)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: if_indextoname failed for index %d (%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: realloc (%d) failed
 [%s] %s:%d VTP_IFIndexToName mapping [if_index:%d if_name:%s]
 [%s] %s:%d ++++++++++++++++ ARPL packet detected in VTP_RecvPkt(...) ++++++++++++++++
 [%s] %s:%d >>>>> ARPL packetin VTP_RecvPkt(...) is encrypted <<<<<
 [%s] %s:%d >>>>> ARPL packetin VTP_RecvPkt(...) is UNENCRYPTED <<<<<
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: out-of-bound OFT type.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: unrecognized openfacetime type: %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP_RecvPkt recv bad message (%04X)
 [%s] %s:%d received packet with type %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid OFT RTP header version, discard.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid OFT header, discard.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid OFT MAC, discard.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: OFT packet (%d) missing OFT MAC, discard.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: Invalid OFT RTP header version with bad CRC, discard.
 [%s] %s:%d Skip OFT MAC validation for packet(%d), sessionID not ready.
 [%s] %s:%d Wrong source destination info mode, cannot receive packet!
 [%s] %s:%d Channel token %u didn't match a channel, cannot receive packet!
 [%s] %s:%d VTP recv bad message (%04X)
 [%s] %s:%d VTP_PassHsk bad packet. encrypted? %d type_check %d
 [%s] %s:%d ###### VTP_PassPkt packet list is growing and not draining!!! count:%d (len=%d type=%04X) streamIDs:%s, vfd:%d ######
 [%s] %s:%d notify AFRC failed (%08X): VFD %d AFRC handle %p  packet type %d/%d packet length: %d
 [%s] %s:%d VTP added VFDSASrc successfully.
 [%s] %s:%d VTP found duplicate VFDSASrc entry.
 [%s] %s:%d Connection result with localIPPort %s uses vfd(%d) for send.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: No VFD found for connection result with localIPPort %s
 [%s] %s:%d Interface %s (VFD %d) IS behind NAT 64 with prefix: %s
 [%s] %s:%d provided a all zeroed prefix (%d), local is IPv6 (%d)
 [%s] %s:%d RealTransport: source destination info with mode %d is not supported
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: %s failed due to invalid parameter.
 [%s] %s:%d failed to match a VFDList
 [%s] %s:%d failed due to NULL destination IPPort
 [%s] %s:%d RealTransport: failed to write to datagram channel with error %s
 [%s] %s:%d RealTransport: failed to get datagram channel with token %d
 [%s] %s:%d Option cannot be NULL
 [%s] %s:%d Datagram count %d is larger than VTP max compound packet datagram count %d
 [%s] %s:%d Cannot not handle open facetime with IDS compound packet
 [%s] %s:%d Failed to write to datagram channel with error %s
 [%s] %s:%d Failed to get datagram channel with token %d
 [%s] %s:%d Datagram channel %d failed to read with error %s
 [%s] %s:%d Datagram channel %d returned empty datagram
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VCDatagramChannelReadHandler failed due to invalid handle.
 [%s] %s:%d VCDatagramChannelReadHandler received data which size %d greater than max buffer size %lu
 [%s] %s:%d Process packet type failed with error %08X
 [%s] %s:%d datagram readHandler received packet from participantID=%llu
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VTP/VTransport.m:%d: VTP packet calloc(%d) failed
 [%s] %s:%d datagram readHandler received packet with numOfStreamIDs:%d and streamID[0]:%u
 [%s] %s:%d Redundancy algorithm [%p] RTT level changed from %f to %f, new mode:%d with packetLossThreshold:%f, window size:%ds, bitrate:%ubps
 [%s] %s:%d multiple send markers found!
 [%s] %s:%d multiple recv markers found!
 [%s] %s:%d Parameter %s is not supported
VCSession [%s] %s:%d +[%s %s]:%d Unable to initialize the session. Destination=%s
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Unable to initialize the session. Destination=%s
VCSession [%s] %s:%d Reporting agent is disabled through default.
VCSession [%s] %s:%d +[%s %s]:%d Unable to initialize the session's local participant!
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Unable to initialize the session's local participant!
VCSession [%s] %s:%d RTCReporting: can't configure the reporting agent.
VCSession [%s] %s:%d +[%s %s]:%d Unable to configure local participant streams for the session. Destination=%s localParticipant=%p
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Unable to configure local participant streams for the session. Destination=%s localParticipant=%p
VCSession [%s] %s:%d +[%s %s]:%d Session init %@
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Session init %@
VCSession [%s] %s:%d +[%s %s]:%d Session dealloc %@
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Session dealloc %@
VCSession [%s] %s:%d +[%s %s]:%d Exiting state session %s. Entering state session %s.
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Exiting state session %s. Entering state session %s.
VCSession [%s] %s:%d uuid:%@
VCSession [%s] %s:%d Received transportSession event %d while call is not ongoing. Skipping
VCSession [%s] %s:%d Established initial connection '%@'
VCSession [%s] %s:%d Removing current active connection '%@'
VCSession [%s] %s:%d Primary connection changed to '%@'
VCSession [%s] %s:%d Duplication state changed to %d, active connection is '%@'
VCSession [%s] %s:%d Received invalid transportSession event(%d)
VCSession [%s] %s:%d Connection changed to '%@'
VCSession [%s] %s:%d New downlink expected bitrate:%u
VCSession [%s] %s:%d New uplink expected bitrate:%u
VCSession [%s] %s:%d Participant:%@ requestKeyFrameGenerationWithStreamID %d
VCSession [%s] %s:%d +[%s %s]:%d Session State:%d, Participant:%@
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Session State:%d, Participant:%@
VCSession [%s] %s:%d +[%s %s]:%d %@
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@%@
VCSession [%s] %s:%d +[%s %s]:%d forceSeamLess:%d
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@forceSeamLess:%d
VCSession [%s] %s:%d +[%s %s]:%d New opt-in dictionary for new target bitrate:[%u]
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@New opt-in dictionary for new target bitrate:[%u]
VCSession [%s] %s:%d %s %s
VCSession [%s] %s:%d strongSelf is nil, return
VCSession [%s] %s:%d transportSessionIDS is invalid
VCSession [%s] %s:%d Opt in dictionary is invalid
VCSession [%s] %s:%d Failed to create media queue with error 0x%X
VCSession [%s] %s:%d +[%s %s]:%d Media Queue size threshold exceeded for streamID=%d longestQueueSizeInSecond=%f - FLUSHING!
VCSession [%s] %s:%d -[(%s*)%p %s]:%d Media Queue size threshold exceeded for streamID=%d longestQueueSizeInSecond=%f - FLUSHING!
VCSession [%s] %s:%d No VCMediaQueue created!
VCSession [%s] %s:%d SSRC collsion detected! ssrc:%d
VCSession [%s] %s:%d Security key material with key index '%@' added
VCSession [%s] %s:%d Start pruning keys in the security key manager due to membershipChangeReason: %@
VCSession [%s] %s:%d Participant count:%d
VCSession [%s] %s:%d remoteParticipantIDs = %p
VCSession [%s] %s:%d VCSession[%@] transportSessionID[%u] participantId:[%@] participantUUID[%@] receives message:%s
VCSession [%s] %s:%d VCSession[%@] transportSessionID[%u] idsParticipantID[%@] participantUUID[%@] receives message:%s
VCSession [%s] %s:%d VCSession[%@] transportSessionID[%u] participantId:[%@] participantUUID[%@] receives message:%s, symptomID = %d, groupID = %@
VCSession [%s] %s:%d groupID is nil, return
VCSession [%s] %s:%d streamIDTuples is nil, can't proceed
VCSession [%s] %s:%d +[%s %s]:%d RTCP report not found!!
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@RTCP report not found!!
VCSession [%s] %s:%d +[%s %s]:%d RTCP report found!!
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@RTCP report found!!
VCSession [%s] %s:%d +[%s %s]:%d Received custom report (%d) from %x with %d reception reports
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Received custom report (%d) from %x with %d reception reports
VCSession [%s] %s:%d +[%s %s]:%d Received encryption info from IDS with destination[%@]
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Received encryption info from IDS with destination[%@]
VCSession [%s] %s:%d +[%s %s]:%d Reporting agent is not properly configured
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Reporting agent is not properly configured
VCSession [%s] %s:%d +[%s %s]:%d Session Event failed - EventType:%d needs a participant but it is nil
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Session Event failed - EventType:%d needs a participant but it is nil
VCSession [%s] %s:%d +[%s %s]:%d EventType:%d is not relevant for Session Remote Participant Event logging
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@EventType:%d is not relevant for Session Remote Participant Event logging
VCSession [%s] %s:%d +[%s %s]:%d Adding participant[%s]
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Adding participant[%s]
VCSession [%s] %s:%d +[%s %s]:%d Removing participant[%@]
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Removing participant[%@]
VCSession [%s] %s:%d +[%s %s]:%d Start called. remoteParticipants[%@]
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Start called. remoteParticipants[%@]
VCSession [%s] %s:%d +[%s %s]:%d Session stop in progress
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Session stop in progress
VCSession [%s] %s:%d +[%s %s]:%d Session is already started/starting
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Session is already started/starting
VCSession [%s] %s:%d +[%s %s]:%d Local source marked as invalid. Can't start.
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Local source marked as invalid. Can't start.
VCSession [%s] %s:%d +[%s %s]:%d Stop called. remoteParticipants[%@] error[%@]
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Stop called. remoteParticipants[%@] error[%@]
VCSession [%s] %s:%d +[%s %s]:%d Session already stopped
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Session already stopped
VCSession [%s] %s:%d Session stop when start in progress
VCSession [%s] %s:%d Tearing down session
VCSession [%s] %s:%d +[%s %s]:%d VCSession:[%p] configurationDict:[%@]
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@VCSession:[%p] configurationDict:[%@]
VCSession [%s] %s:%d VCSession:[%p] Failed to update the session configuration
VCSession [%s] %s:%d VCSession:[%p] Failed to update the local participant configuration
VCSession [%s] %s:%d VCSession:[%p] Failed to update the remote participant:[%@] configuration
VCSession [%s] %s:%d +[%s %s]:%d Participant didStart:%d error:[%@] participantID[%@] %@
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Participant didStart:%d error:[%@] participantID[%@] %@
VCSession [%s] %s:%d +[%s %s]:%d Session failed to start.
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Session failed to start.
VCSession [%s] %s:%d +[%s %s]:%d Participant didStopWithError:[%@] participantID[%@] %@
VCSession [%s] %s:%d -[(%s*)%p %s]:%d %@Participant didStopWithError:[%@] participantID[%@] %@
VCSession [%s] %s:%d [VCSession]: reporting periodic task: strongSelf == nil
VCSession [%s] %s:%d Health Monitor for Local Participant[%@] Total Video[%ukbps] Total Audio[%ukbps]
VCSession [%s] %s:%d Health Monitor for Remote Participant[%@] StreamID[video:%u audio:%u] Video[%ukbps %4.1ffps] Audio[%ukbps]
 [%s] %s:%d Client facing:%d relay stopped
 [%s] %s:%d %d:%d: Process state: %@ (%d)
 [%s] %s:%d %d:%d: State change: %@ (%d) -> %@ (%d)
 [%s] %s:%d +[%s %s]:%d Not supported: %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Not supported: %@
 [%s] %s:%d Unexpected timestamp received: %u, expected:%u
 [%s] %s:%d Audio callback called too quickly. Delta:%f
 [%s] %s:%d Real time miss. Timestamp jumped: %u (%u to %u), host time: %f (%d samples) (%f to %f).
 [%s] %s:%d VCConnection: connection to check is nil
 [%s] %s:%d Unknown IDSDataChannelRATType %lu
 [%s] %s:%d invalid cameraType=%d!
 [%s] %s:%d cameraUID=%@ for cameraType=%d
VCRC [%s] %s:%d Not supported in current algorithm
VCRC [%s] %s:%d Duplicated feedback or out-of-order feedback messages! timestamp:0x%04X
VCRC [%s] %s:%d media controller is required for VCRateControl
VCRC [%s] %s:%d %8.3f/%04X:
%.4f
%.4f
%.4f
%.4f %c
RTT:%-4u
PLR:%4.2f@%.1f
RRx:%4u
MBL:%d
%4u/%4u
  CS:%04X %04X %u BB: %3u
 UAT %s %s
VCTextTransmitter [%s] %s:%d +[%s %s]:%d 
VCTextTransmitter [%s] %s:%d -[(%s*)%p %s]:%d %@
VCTextTransmitter [%s] %s:%d +[%s %s]:%d Trying to send when the transmitter is stopped!
VCTextTransmitter [%s] %s:%d -[(%s*)%p %s]:%d %@Trying to send when the transmitter is stopped!
VCTextTransmitter [%s] %s:%d +[%s %s]:%d Sending text:%@
VCTextTransmitter [%s] %s:%d -[(%s*)%p %s]:%d %@Sending text:%@
VCTextTransmitter [%s] %s:%d +[%s %s]:%d failed to send RTP
VCTextTransmitter [%s] %s:%d -[(%s*)%p %s]:%d %@failed to send RTP
VCTextTransmitter [%s] %s:%d +[%s %s]:%d Starting sending heartbeat (interval=%f)
VCTextTransmitter [%s] %s:%d -[(%s*)%p %s]:%d %@Starting sending heartbeat (interval=%f)
VCTextTransmitter [%s] %s:%d +[%s %s]:%d Failed to create polling
VCTextTransmitter [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create polling
 [%s] %s:%d Delegate parameter is nil
 [%s] %s:%d Failed to allocate moments XPC connection for streamToken:%u
 [%s] %s:%d Failed to allocate moments _delegateQueue
 [%s] %s:%d Failed to connect to moments server with streamToken:%u
 [%s] %s:%d AVCMoments: connect for streamToken:%u
 [%s] %s:%d AVCMomentsClient: Failed connection for streamToken=%u Error=%s
 [%s] %s:%d AVCMoments: capabilities is %d
 [%s] %s:%d AVCMoments: disconnect for streamToken:%u
 [%s] %s:%d AVCMoments: did start processing request from AVCMomentsManager %s
 [%s] %s:%d AVCMoments: did end processing request from AVCMomentsManager %s
 [%s] %s:%d AVCMoments: did finish request from AVCMomentsManager %s
 [%s] %s:%d +[%s %s]:%d received callback for serverDidDisconnect
 [%s] %s:%d -[(%s*)%p %s]:%d received callback for serverDidDisconnect
 [%s] %s:%d AVCMoments current requests %@
 [%s] %s:%d Did not find sandbox extension token to consume
 [%s] %s:%d Failed to remove item at URL %@: %@
 [%s] %s:%d Notify client with new caps %d, currentActiveRequestsCount %d
 [%s] %s:%d Current active request count has reached max. Can't process anymore
 [%s] %s:%d Notify client reached max request capabilities %d
 [%s] %s:%d AVCMoments: avcMomentsRequestDidStartRequest %s
 [%s] %s:%d failed validation with error %s
 [%s] %s:%d AVCMoments: avcMomentsRequestDidEndRequest %s
 [%s] %s:%d failed validation
 [%s] %s:%d +[%s %s]:%d Failed to create the list of supported audio rules
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create the list of supported audio rules
 [%s] %s:%d +[%s %s]:%d Failed to create VCSessionUplinkBandwidthAllocator
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create VCSessionUplinkBandwidthAllocator
 [%s] %s:%d +[%s %s]:%d Failed to allocate config provider
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate config provider
 [%s] %s:%d +[%s %s]:%d Failed to setup audio streams
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to setup audio streams
 [%s] %s:%d +[%s %s]:%d Failed to setup video stream
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to setup video stream
 [%s] %s:%d +[%s %s]:%d Failed to setup media blob
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to setup media blob
 [%s] %s:%d +[%s %s]:%d Failed to create participant info
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create participant info
 [%s] %s:%d +[%s %s]:%d Failed to create audio event queue
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create audio event queue
 [%s] %s:%d +[%s %s]:%d Failed to create audioRedundancyChangeQueue
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create audioRedundancyChangeQueue
 [%s] %s:%d +[%s %s]:%d Failed to create videoRedundancyChangeQueue
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create videoRedundancyChangeQueue
 [%s] %s:%d +[%s %s]:%d _enableRedundancy set to YES by forceFECRepairStream
 [%s] %s:%d -[(%s*)%p %s]:%d %@_enableRedundancy set to YES by forceFECRepairStream
 [%s] %s:%d +[%s %s]:%d Setting uplink bit rate cap cell is %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Setting uplink bit rate cap cell is %d
 [%s] %s:%d +[%s %s]:%d Setting uplink bit rate cap wifi is %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Setting uplink bit rate cap wifi is %d
 [%s] %s:%d +[%s %s]:%d %@ videoEnabled[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@%@ videoEnabled[%d]
 [%s] %s:%d +[%s %s]:%d Changing participant videoPaused to %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Changing participant videoPaused to %d
 [%s] %s:%d +[%s %s]:%d Send active voice only set to %d for stream:%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Send active voice only set to %d for stream:%@
 [%s] %s:%d +[%s %s]:%d Health Monitor for Local Participant Video StreamID[main:%u repair:%u] Video[%ukbps %4.1ffps]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Health Monitor for Local Participant Video StreamID[main:%u repair:%u] Video[%ukbps %4.1ffps]
 [%s] %s:%d +[%s %s]:%d Health Monitor for Local Participant Audio StreamID[%u] Audio[%ukbps]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Health Monitor for Local Participant Audio StreamID[%u] Audio[%ukbps]
 [%s] %s:%d +[%s %s]:%d Failed to set up audio stream %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to set up audio stream %d
 [%s] %s:%d +[%s %s]:%d Failed to setup stream
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to setup stream
 [%s] %s:%d +[%s %s]:%d Failed to set up video stream %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to set up video stream %d
 [%s] %s:%d video payload types: %@, audio payload types: %@
 [%s] %s:%d +[%s %s]:%d Missing payload:%d (codecType:%d). Supported rules:%@ secondary:%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Missing payload:%d (codecType:%d). Supported rules:%@ secondary:%@
 [%s] %s:%d +[%s %s]:%d Audio stream config is missing!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Audio stream config is missing!
 [%s] %s:%d +[%s %s]:%d audio stream successfully created: %p!
 [%s] %s:%d -[(%s*)%p %s]:%d %@audio stream successfully created: %p!
 [%s] %s:%d +[%s %s]:%d Failed to allocate participant audio stream info
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate participant audio stream info
 [%s] %s:%d +[%s %s]:%d Failed to initialize audio rule collection!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to initialize audio rule collection!
 [%s] %s:%d +[%s %s]:%d Local Participant callInfoBlob = %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Local Participant callInfoBlob = %@
 [%s] %s:%d +[%s %s]:%d Video stream config is missing!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Video stream config is missing!
 [%s] %s:%d +[%s %s]:%d Failed to allocate video stream!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate video stream!
 [%s] %s:%d +[%s %s]:%d video stream successfully created: %p!
 [%s] %s:%d -[(%s*)%p %s]:%d %@video stream successfully created: %p!
 [%s] %s:%d +[%s %s]:%d Failed to allocate participant video stream info
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate participant video stream info
 [%s] %s:%d +[%s %s]:%d Passing key frame request to controller to schedule for streamID %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Passing key frame request to controller to schedule for streamID %d
 [%s] %s:%d +[%s %s]:%d Remote %s %dx%d.
 [%s] %s:%d -[(%s*)%p %s]:%d %@Remote %s %dx%d.
 [%s] %s:%d +[%s %s]:%d MEDIA FRACTURE SITUATION! peer asking for unknown stream:%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@MEDIA FRACTURE SITUATION! peer asking for unknown stream:%@
 [%s] %s:%d +[%s %s]:%d Set peer subscribed streams %@, published streams %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Set peer subscribed streams %@, published streams %@
 [%s] %s:%d +[%s %s]:%d Enqueue new redunancy fecRatio: %f
 [%s] %s:%d -[(%s*)%p %s]:%d %@Enqueue new redunancy fecRatio: %f
 [%s] %s:%d +[%s %s]:%d Enqueue new audio redunancy percentage: %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Enqueue new audio redunancy percentage: %d
 [%s] %s:%d +[%s %s]:%d Unknown redundancy controller sends the callback
 [%s] %s:%d -[(%s*)%p %s]:%d %@Unknown redundancy controller sends the callback
 [%s] %s:%d +[%s %s]:%d TargetBitrate changed from %u to %u
 [%s] %s:%d -[(%s*)%p %s]:%d %@TargetBitrate changed from %u to %u
 [%s] %s:%d +[%s %s]:%d VideoStreamIDs:%@ for targetBitrate:%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@VideoStreamIDs:%@ for targetBitrate:%d
 [%s] %s:%d +[%s %s]:%d not found video stream with stream ID %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@not found video stream with stream ID %@
 [%s] %s:%d +[%s %s]:%d AudioStreamIDs:%@ for targetBitrate:%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@AudioStreamIDs:%@ for targetBitrate:%d
 [%s] %s:%d +[%s %s]:%d No repair stream ID for main stream ID %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@No repair stream ID for main stream ID %@
 [%s] %s:%d +[%s %s]:%d Currently sending streamIDs %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Currently sending streamIDs %@
 [%s] %s:%d +[%s %s]:%d compound streamID increased for stream %@, generating key frame
 [%s] %s:%d -[(%s*)%p %s]:%d %@compound streamID increased for stream %@, generating key frame
 [%s] %s:%d +[%s %s]:%d video no-op no MKM
 [%s] %s:%d -[(%s*)%p %s]:%d %@video no-op no MKM
 [%s] %s:%d +[%s %s]:%d avConferencePreviewError %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@avConferencePreviewError %@
 [%s] %s:%d +[%s %s]:%d thermalLevelDidChange %u
 [%s] %s:%d -[(%s*)%p %s]:%d %@thermalLevelDidChange %u
 [%s] %s:%d +[%s %s]:%d frameRate=%u
 [%s] %s:%d -[(%s*)%p %s]:%d %@frameRate=%u
 [%s] %s:%d +[%s %s]:%d audio no-op no MKM
 [%s] %s:%d -[(%s*)%p %s]:%d %@audio no-op no MKM
 [%s] %s:%d +[%s %s]:%d activeVideoStreams:%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@activeVideoStreams:%@
 [%s] %s:%d +[%s %s]:%d Active connection changed with new connection uplinkBitrateCap %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Active connection changed with new connection uplinkBitrateCap %d
 [%s] %s:%d +[%s %s]:%d Updating active video streams for active connection change %d.
 [%s] %s:%d -[(%s*)%p %s]:%d %@Updating active video streams for active connection change %d.
 [%s] %s:%d VCSessionBitrateArbiter: value %d failed bitrate range check, ignored
 [%s] %s:%d Overriding bitrate for connection type %d with storebag value of %d
 [%s] %s:%d Hardware does not support connection type %d, ignored storebag value of %d
 [%s] %s:%d sendTimings:Key = %d, value = %d
 [%s] %s:%d No controller found for device role:%d
 [%s] %s:%d Controller not found for device role:%d
 [%s] %s:%d Operation not allowed while the audio IO is running
 [%s] %s:%d VCAudioIO(%p) is being released but it is not in the right state: %d
 [%s] %s:%d VCAudioIO(%p) now in the right state to be released: %d
 [%s] %s:%d Set direction from %d to %d. Current state:%d
 [%s] %s:%d The controller audio format is invalid!
 [%s] %s:%d Failed to create %s converter for audioIO:%p! Err:%d
 [%s] %s:%d +[%s %s]:%d Unexpected audioIO state:%d. Stop may have been called before the didStart callback
 [%s] %s:%d -[(%s*)%p %s]:%d %@Unexpected audioIO state:%d. Stop may have been called before the didStart callback
 [%s] %s:%d (%p): Stream successfully started
 [%s] %s:%d (%p): Failed to start!!
 [%s] %s:%d VCAudioIO:%p completionHandler:%p
 [%s] %s:%d +[%s %s]:%d Unexpected audioIO state:%d. Start may have been called before the didStop callback
 [%s] %s:%d -[(%s*)%p %s]:%d %@Unexpected audioIO state:%d. Start may have been called before the didStop callback
 [%s] %s:%d VCAudioIO:%p
 [%s] %s:%d (%p): Stream successfully stopped
 [%s] %s:%d (%p): Failed to stop!!
 [%s] %s:%d Controller format: {%f, %7s, 0x%08x, %u, %u, %u, %u, %u}
 [%s] %s:%d Client format: {%f, %7s, 0x%08x, %u, %u, %u, %u, %u}
 [%s] %s:%d (%p): Starting...
 [%s] %s:%d VCAudioIO:%p Start failed. error:%@
 [%s] %s:%d (%p): Stopping...
 [%s] %s:%d VCAudioIO:%p Stop failed. error:%@
 [%s] %s:%d [%p] Audio IO pullAudioSamples, with converter, audioIOSource[%p]
 [%s] %s:%d [%p] Audio IO pullAudioSamples, no converter, audioIOSource[%p]
VCRC [%s] %s:%d dealloc called
VCRC [%s] %s:%d VCRateControlStatisticsProc thread create failed (%d)
VCRC [%s] %s:%d VCRateControlStatisticsProc thread started
VCRC [%s] %s:%d VCRateControlStatisticsProc thread ended
VCRC [%s] %s:%d Message queue is full, a statistic message is ignored!
VCRC [%s] %s:%d Cannot dequeue statistic message from message queue!
 [%s] %s:%d AudioEventQueue: Create failed
 [%s] %s:%d Audio Event Queue Created
 [%s] %s:%d In-process captions handling is not supported.
 [%s] %s:%d AVCCaptionsClient: connect for streamToken:%u
 [%s] %s:%d AVCCaptionsClient: Failed connection for streamToken=%u Error=%s
 [%s] %s:%d AVCCaptionsClient: disconnect for streamToken:%u
 [%s] %s:%d Source delegate is nil
 [%s] %s:%d AudioDeviceGetProperty returned %d for JackIsConnected
 [%s] %s:%d Built-in audio device[%@]'s data source control ID[%u]
 [%s] %s:%d %s %s
 [%s] %s:%d Audio redundancy percentage: %d, redundancy interval: %f [reasone code: %04X]
 [%s] %s:%d +[%s %s]:%d Participant audio is already muted [%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant audio is already muted [%d]
 [%s] %s:%d +[%s %s]:%d audioMuted[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@audioMuted[%d]
 [%s] %s:%d +[%s %s]:%d audioEnabled[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@audioEnabled[%d]
 [%s] %s:%d +[%s %s]:%d Participant audio is already enabled[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant audio is already enabled[%d]
 [%s] %s:%d +[%s %s]:%d videoEnabled[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@videoEnabled[%d]
 [%s] %s:%d +[%s %s]:%d Participant video is already enabled[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant video is already enabled[%d]
 [%s] %s:%d +[%s %s]:%d audioPaused[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@audioPaused[%d]
 [%s] %s:%d +[%s %s]:%d Participant audio is already paused[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant audio is already paused[%d]
 [%s] %s:%d +[%s %s]:%d videoPaused[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@videoPaused[%d]
 [%s] %s:%d +[%s %s]:%d Participant video is already paused[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant video is already paused[%d]
 [%s] %s:%d +[%s %s]:%d Participant volume is already [%f]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant volume is already [%f]
 [%s] %s:%d +[%s %s]:%d volume[%f]
 [%s] %s:%d -[(%s*)%p %s]:%d %@volume[%f]
 [%s] %s:%d +[%s %s]:%d Participant audioPosition is already [%f]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant audioPosition is already [%f]
 [%s] %s:%d +[%s %s]:%d audioPosition[%f]
 [%s] %s:%d -[(%s*)%p %s]:%d %@audioPosition[%f]
 [%s] %s:%d +[%s %s]:%d videoQuality[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@videoQuality[%d]
 [%s] %s:%d +[%s %s]:%d videoQuality is already at %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@videoQuality is already at %d
 [%s] %s:%d +[%s %s]:%d videoQuality[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d -[(%s*)%p %s]:%d %@videoQuality[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d +[%s %s]:%d visibilityIndex[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@visibilityIndex[%d]
 [%s] %s:%d +[%s %s]:%d visibilityIndex is already at %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@visibilityIndex is already at %d
 [%s] %s:%d +[%s %s]:%d visibilityIndex[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d -[(%s*)%p %s]:%d %@visibilityIndex[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d +[%s %s]:%d prominenceIndex[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@prominenceIndex[%d]
 [%s] %s:%d +[%s %s]:%d prominenceIndex is already at %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@prominenceIndex is already at %d
 [%s] %s:%d +[%s %s]:%d prominenceIndex[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d -[(%s*)%p %s]:%d %@prominenceIndex[%d] is cached until endParticipantConfiguration is called.
 [%s] %s:%d +[%s %s]:%d _stateQueue is not set
 [%s] %s:%d -[(%s*)%p %s]:%d %@_stateQueue is not set
 [%s] %s:%d +[%s %s]:%d 
 [%s] %s:%d -[(%s*)%p %s]:%d %@
 [%s] %s:%d +[%s %s]:%d Participant[%@] received callback for video enabled[%d] did succeed[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d Participant[%@] received callback for video enabled[%d] did succeed[%d]
 [%s] %s:%d +[%s %s]:%d Participant[%@] received callback for audio enabled[%d] did succeed[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d Participant[%@] received callback for audio enabled[%d] did succeed[%d]
 [%s] %s:%d +[%s %s]:%d Participant[%@] received callback for remote audio enabled[%d] did change
 [%s] %s:%d -[(%s*)%p %s]:%d Participant[%@] received callback for remote audio enabled[%d] did change
 [%s] %s:%d +[%s %s]:%d Participant[%@] received callback for remote video enabled[%d] did change
 [%s] %s:%d -[(%s*)%p %s]:%d Participant[%@] received callback for remote video enabled[%d] did change
 [%s] %s:%d +[%s %s]:%d Participant[%@] received callback for audio paused[%d] did succeed[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d Participant[%@] received callback for audio paused[%d] did succeed[%d]
 [%s] %s:%d +[%s %s]:%d Participant[%@] received callback for video paused[%d] did succeed[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d Participant[%@] received callback for video paused[%d] did succeed[%d]
 [%s] %s:%d +[%s %s]:%d Participant[%@] received callback for remote audio paused[%d] did change
 [%s] %s:%d -[(%s*)%p %s]:%d Participant[%@] received callback for remote audio paused[%d] did change
 [%s] %s:%d +[%s %s]:%d Participant[%@] received callback for remote video paused[%d] did change
 [%s] %s:%d -[(%s*)%p %s]:%d Participant[%@] received callback for remote video paused[%d] did change
 [%s] %s:%d +[%s %s]:%d Participant[%@] received callback for prominence change:[%@] (%@)
 [%s] %s:%d -[(%s*)%p %s]:%d Participant[%@] received callback for prominence change:[%@] (%@)
 [%s] %s:%d stopping transport session
 [%s] %s:%d Could not dispatch transportSessionEvent %d as eventHandler is nil
 [%s] %s:%d VCVisualAlert disabled
 [%s] %s:%d queue doesn't exist for streamToken=%u
 [%s] %s:%d did release for streamToken=%u, [queueDict count]=%lu
 [%s] %s:%d streamToken[%ld]
 [%s] %s:%d streamToken[%ld] screenAttributes[%s]
 [%s] %s:%d streamToken[%ld] videoAttributes[%s]
 [%s] %s:%d streamToken[%ld] didPause[%d]
 [%s] %s:%d streamToken[%ld] didStall[%d]
 [%s] %s:%d streamToken[%ld] isDegraded[%d]
 [%s] %s:%d streamToken[%ld] isSuspended[%d]
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCRemoteVideoManager.m:%d: token[%ld] state[%s]
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCRemoteVideoManager.m:%d: %s Error no VCRemoteVideoState for this stream token
 [%s] %s:%d VCRemoteVideoManager: new client initialized for streamToken=%ld
 [%s] %s:%d VCRemoteVideoManager: ERROR video queue does not exist for streamToken=%u
 [%s] %s:%d VCRemoteVideoManager: Terminate remoteVideo connection for streamToken=%u
VCMediaStream [%s] %s:%d %s[%p] %s canDecrypt[%d]
VCMediaStream [%s] %s:%d IDS eventHandler called without event type
VCMediaStream [%s] %s:%d IDS channel connected
VCMediaStream [%s] %s:%d IDS channel disconnected
VCMediaStream [%s] %s:%d %s[%p]: Create datagram channel failed with error %s
VCMediaStream [%s] %s:%d DatagramChannel start failed with error %x
VCMediaStream [%s] %s:%d +[%s %s]:%d Failed to create RTP extension. Error=%d
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create RTP extension. Error=%d
VCMediaStream [%s] %s:%d +[%s %s]:%d Failed to create media stream transport
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create media stream transport
VCMediaStream [%s] %s:%d Resetting decryption status
VCMediaStream [%s] %s:%d %s[%p] %s
VCMediaStream [%s] %s:%d %s[%p] error[%s]
VCMediaStream [%s] %s:%d %s[%p] %s error configuring stream
VCMediaStream [%s] %s:%d +[%s %s]:%d Start called while media stream is running (state=%d)
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Start called while media stream is running (state=%d)
VCMediaStream [%s] %s:%d +[%s %s]:%d Failed to start media
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to start media
VCMediaStream [%s] %s:%d +[%s %s]:%d Stop called while media stream is already stopped (state=%d)
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Stop called while media stream is already stopped (state=%d)
VCMediaStream [%s] %s:%d +[%s %s]:%d %s[%p] Executing stop completion handler, stop succeeded[%d]
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@%s[%p] Executing stop completion handler, stop succeeded[%d]
VCMediaStream [%s] %s:%d +[%s %s]:%d %s[%p] Stopping stream transports
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@%s[%p] Stopping stream transports
VCMediaStream [%s] %s:%d +[%s %s]:%d Failed to stop media
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to stop media
VCMediaStream [%s] %s:%d +[%s %s]:%d %s[%p] Notifying delegate[%p] of stream stop
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@%s[%p] Notifying delegate[%p] of stream stop
VCMediaStream [%s] %s:%d %s[%p] setPause (was %d is %d)
VCMediaStream [%s] %s:%d +[%s %s]:%d Error pausing media
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Error pausing media
VCMediaStream [%s] %s:%d +[%s %s]:%d Error resuming media
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Error resuming media
VCMediaStream [%s] %s:%d %s[%p] infoDict = %s networkSockets = %s callID = %s
VCMediaStream [%s] %s:%d %s[%p] %s was[%d] now[%d]
VCMediaStream [%s] %s:%d %s[%p] %s streamDirection[%ld]
VCMediaStream [%s] %s:%d %s[%p] %s rtcpEnabled[%d]
VCMediaStream [%s] %s:%d %s[%p] %s rtpTimeOutEnabled[%d]
VCMediaStream [%s] %s:%d %s[%p] %s rtcpTimeOutEnabled[%d]
VCMediaStream [%s] %s:%d %s[%p] %s decryptionTimeOutEnabled[%d]
VCMediaStream [%s] %s:%d %s[%p] %s rtpTimeOutInterval[%f]
VCMediaStream [%s] %s:%d %s[%p] %s rtcpTimeOutInterval[%f]
VCMediaStream [%s] %s:%d %s[%p] %s decryptionTimeOutInterval[%f]
VCMediaStream [%s] %s:%d %s[%p] %s rtcpSendInterval[%f]
VCMediaStream [%s] %s:%d +[%s %s]:%d Failed to generate reception report.
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to generate reception report.
VCMediaStream [%s] %s:%d +[%s %s]:%d RTCP send heartbeat called while the stream has already stopped.
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@RTCP send heartbeat called while the stream has already stopped.
VCMediaStream [%s] %s:%d RTCP HeartBeat intervalElapsed:%d remainingInterval:%.5f
VCMediaStream [%s] %s:%d +[%s %s]:%d Error already started
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Error already started
VCMediaStream [%s] %s:%d +[%s %s]:%d RTCP not properly configured. Do not start heart beat. Enabled=%d, interval=%f
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@RTCP not properly configured. Do not start heart beat. Enabled=%d, interval=%f
VCMediaStream [%s] %s:%d +[%s %s]:%d Starting RTCP send heartbeat (interval=%f)
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Starting RTCP send heartbeat (interval=%f)
VCMediaStream [%s] %s:%d +[%s %s]:%d Failed to create RTCP send heartbeat
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create RTCP send heartbeat
VCMediaStream [%s] %s:%d +[%s %s]:%d Tearing down rtcp heartbeat!
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Tearing down rtcp heartbeat!
VCMediaStream [%s] %s:%d +[%s %s]:%d Schedule next timeout @ %f currentTime:%f
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Schedule next timeout @ %f currentTime:%f
VCMediaStream [%s] %s:%d Last RTP packet receive time:%f now:%f
VCMediaStream [%s] %s:%d Last RTCP packet receive time:%f now:%f
VCMediaStream [%s] %s:%d DecryptionErrorStartTime:%f now:%f
VCMediaStream [%s] %s:%d +[%s %s]:%d RTP/RTCP/Decryption timeouts not configured. RTP Enabled=%d, interval=%f, RTCP Enabled=%d, interval=%f Decryption Enabled=%d, interval=%f
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@RTP/RTCP/Decryption timeouts not configured. RTP Enabled=%d, interval=%f, RTCP Enabled=%d, interval=%f Decryption Enabled=%d, interval=%f
VCMediaStream [%s] %s:%d +[%s %s]:%d already started
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@already started
VCMediaStream [%s] %s:%d +[%s %s]:%d Starting timeout heartbeat (interval=%f)
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Starting timeout heartbeat (interval=%f)
VCMediaStream [%s] %s:%d +[%s %s]:%d Failed to create timeout heartbeat
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create timeout heartbeat
VCMediaStream [%s] %s:%d +[%s %s]:%d heartbeat is not active
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@heartbeat is not active
VCMediaStream [%s] %s:%d +[%s %s]:%d Tearing down timeout heartbeat!
VCMediaStream [%s] %s:%d -[(%s*)%p %s]:%d %@Tearing down timeout heartbeat!
VCMediaStream [%s] %s:%d MediaCallback: SRTP key needs update
VCMediaStream [%s] %s:%d MediaCallback: call back is not supported for notification %d.
VCMediaStream [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCMediaStream.m:%d: MediaCallback: notificaiton %d unknown, no action.
 [%s] %s:%d AddPacket: ^^^^^^ @%.3f MP %d  %d/%d/%d P: %d  pTWL: %p %d
 [%s] %s:%d  *#*#*#*#*#*#*#*# BAD AUD. pkt INTERVAL: %f (avg: %f) 
 [%s] %s:%d  AUD. pkt INTERVAL: %f (avg: %f) 
 [%s] %s:%d ActiveProbing_ProcessIncomingPacket: %d  ScheduleReleasedPkts: %d 
 [%s] %s:%d MediaQueue_Throttling_SetAudioInterval: %f
 [%s] %s:%d MediaQueue_Throttling_SetIsIPv6: %d 
 [%s] %s:%d 
 FORCE_MIN_PKT org: %d new: %d gob: %d 
 [%s] %s:%d 
 FORCE_MIN_PKT did NOT take effect: iGobBytes: %d  iPktBytes: %d 
 [%s] %s:%d Throttling: %d 
 [%s] %s:%d dwHardCodeBWEstRate: %d 
 dwHardCodeTxRate: %d 
 [%s] %s:%d g_bThrottlingSendLog: %d  g_bThrottlingRecvLog: %d  g_bThrottlingProbeSeqLog: %d 
 [%s] %s:%d  ------ MQ IN/OUT RealTime stats are ENABLED
 [%s] %s:%d ProcessThrottledPktsWithNewAudioPkt: Pkts: %d  now: %f   interval: %f  next_audio: %f 
 [%s] %s:%d ScheduleReleasedPkts: Updating last pkt's in pThrottledPktsWaitingList == NULL
 [%s] %s:%d  VIDEO GAP: %f  last: %f  now: %.3f new: %f 
 [%s] %s:%d  TOO FAST: now: %.3f last: %f factor: %.3f 
 [%s] %s:%d  TOO FAST: now: %.3f last: %f --> updated: %f   factor: %.3f 
 [%s] %s:%d  TOO MUCH ACCEL!!!!!!!!!!!!!!!!!!
 [%s] %s:%d  PROBESEQ comp: %f -> new: %f 
 [%s] %s:%d  dSinceLastPktIssue %f  dNow %f    dBaseTime %f = dFirstPktScheduleTime %f - dDeliveryEstimate %f (%d %d)
 [%s] %s:%d UNEXPECTED!!! CalcBoostIncrease:  SCHEME2: %f  SCHEME1: %f  last: %f base: %f, %f %d %d %f %f %d %f 
 [%s] %s:%d  SCHEME %d:   %f   %f    (INC %f)
 [%s] %s:%d  Accelerating: ^^^^^^ MP %d  %d/%d/%d P: %d  by %.3fs (%.5f %d) to %.3f b: %d 
 [%s] %s:%d AccelerateThrottlingQueue: %.3f from %.3f to %.3f (%d pkts) 
 [%s] %s:%d 
 THROTTLING: disabled->enabled   dLastThrottledVideoPktTime init: %f 
 [%s] %s:%d 
 THROTTLING: enabled->disabled  EMPTY THROT QUEUE -> DISABLED
 [%s] %s:%d 
 THROTTLING: enabled->disabled  EDGE ... signalling the caller to FLUSH pending pkts in queue
 [%s] %s:%d 
 SCHEDULING: len/rate: %d/%d  take: %f  me: %f  next: %f 
 [%s] %s:%d  SchedulePkt: %d  %d/%d/%d rate: %d  sched: %f now: %f aud: %f  b: %d mode: %c 
 [%s] %s:%d ProcessThrottledPktsWithTime: ^^^^^^ MP %d  %d/%d/%d P: %d  pTWL: %p %d  sched: %.3f now: %.3f
 [%s] %s:%d OpportunisticBWEProbeSeqTagging: ^^^^^^ MP %d  %d/%d/%d P: %d  pTWL: %p %d  sched: %.3f now: %.3f PROBE_id: %d 
 [%s] %s:%d OpportunisticBWEProbeSeqTagging FAILED for pkt %d/%d/%d and audio pkt %d/%d/%d 
 [%s] %s:%d DTLS timeout: set via preferences to %d seconds for call (%d)
 [%s] %s:%d DTLS_Cleanup done on handle %d
 [%s] %s:%d SECURETRANSPORT SETUP %s...
 [%s] %s:%d SECURETRANSPORT FAILED...
 [%s] %s:%d DTLS_UpdateHandshake:: process late incoming handshake packet...
 [%s] %s:%d DTLS_UpdateHandshake invalid incoming handshake packet
 [%s] %s:%d DTLS_Read failed with %d
 [%s] %s:%d DTLS_Write failed with %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCBasebandNotificationParser.c:%d: Bad ACK, #dropped SN doesn't match(%d != %u).
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCBasebandNotificationParser.c:%d: Bad ACK, #dropped SN exceeds limit(%d > %d).
 [%s] %s:%d Baseband dropped %u packet(s) for PT %u.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCBasebandNotificationParser.c:%d: Got PTs more than VC_BBNOTE_MAX_PAYLOAD_TYPES (%d) in a DropACK
AVCCaptions [%s] %s:%d Invalid closed captions token received
AVCCaptions [%s] %s:%d Failed to allocate closed captions token array
 [%s] %s:%d HandoverReport: Get the same connection for multiway. Keep using the old connection
 [%s] %s:%d HandoverReport: add result backup IDS connection %s
 [%s] %s:%d HandoverReport: connection array %s has %lu connections
 [%s] %s:%d HandoverReport: add result %s IDS connection %s. Primary: %s, secondary: %s
 [%s] %s:%d HandoverReport: no connection available after link is removed!
 [%s] %s:%d HandoverReport: selected new primary %s due to interface change (current secondary %s)
 [%s] %s:%d HandoverReport: no secondary connection available after link is removed!
 [%s] %s:%d HandoverReport: selected new secondary %s due to interface change
 [%s] %s:%d Opting out all streams for non primary connections!
 [%s] %s:%d HandoverReport: handover to cellular with new primary %s, new secondary %s
 [%s] %s:%d HandoverReport: handover back when WiFi recovers with new primary %s, new secondary %s
 [%s] %s:%d HandoverReport: updated preferred local interface for duplication to %s
 [%s] %s:%d HandoverReport: updated preferred remote interface for duplication to %s
 [%s] %s:%d HandoverReport: updateConnectionForDuplication check connection %s
 [%s] %s:%d HandoverReport: updateConnectionForDuplication picks connection %s
 [%s] %s:%d HandoverReport: selected connection %s for duplication
 [%s] %s:%d HandoverReport: new connection %s is not added, stop keep alive
 [%s] %s:%d HandoverReport: connection %s is replaced, stop keep alive
 [%s] %s:%d %s
AVConferenceXPCClient [%s] %s:%d +[%s %s]:%d 
AVConferenceXPCClient [%s] %s:%d -[(%s*)%p %s]:%d %@
AVConferenceXPCClient [%s] %s:%d XPC Client: disposing off connection to server
AVConferenceXPCClient [%s] %s:%d XPC Client: creating new connection to server
AVConferenceXPCClient [%s] %s:%d XPC Client: Cannot talk to server because server died or parent deallocated, %s
AVConferenceXPCClient [%s] %s:%d XPC Client: processing registered reply for service %s
AVConferenceXPCClient [%s] %s:%d XPC Client: no registered block found for service %s
AVConferenceXPCClient [%s] %s:%d XPC Client: Sending message to server for service: %s
AVConferenceXPCClient [%s] %s:%d XPC Client: received error from server while processing reply, %s
AVConferenceXPCClient [%s] %s:%d XPC Client: executing reply block for service %s
AVConferenceXPCClient [%s] %s:%d XPC Client: Sending sync message to server for service: %s
AVConferenceXPCClient [%s] %s:%d XPC Client: Adding registered block for service %s
AVConferenceXPCClient [%s] %s:%d XPC Client: Removing registered block for service %s
 [%s] %s:%d Failed to create camera rules!
 [%s] %s:%d VCVideoRuleCollectionsCameraMac: Found default encode score setting, setting encode score to %d
 [%s] %s:%d H264 Wifi rules: failed to allocate QVGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate QVGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate HVGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate HVGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate VGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate VGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate WVGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate WVGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate XVGA15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate XVGA30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate 720p15 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate 720p30 rule
 [%s] %s:%d H264 Wifi rules: failed to allocate video rules array for encoding
 [%s] %s:%d H264 Wifi rules: failed to allocate video rules array for decoding
 [%s] %s:%d +[%s %s]:%d security delegate %p
 [%s] %s:%d -[(%s*)%p %s]:%d %@security delegate %p
 [%s] %s:%d +[%s %s]:%d deallocating
 [%s] %s:%d -[(%s*)%p %s]:%d %@deallocating
 [%s] %s:%d +[%s %s]:%d Found duplicate key index '%@': sendKeys (%@), receiveKeys (%@) passed down from IDS. Updating key material
 [%s] %s:%d -[(%s*)%p %s]:%d %@Found duplicate key index '%@': sendKeys (%@), receiveKeys (%@) passed down from IDS. Updating key material
 [%s] %s:%d +[%s %s]:%d Received keyIndex '%@', calling resetDecryptionTimeout
 [%s] %s:%d -[(%s*)%p %s]:%d %@Received keyIndex '%@', calling resetDecryptionTimeout
 [%s] %s:%d +[%s %s]:%d Found keyIndex '%@' in send keys in key manager
 [%s] %s:%d -[(%s*)%p %s]:%d %@Found keyIndex '%@' in send keys in key manager
 [%s] %s:%d +[%s %s]:%d Cannot find keyIndex '%@' in send keys array of %d elements
 [%s] %s:%d -[(%s*)%p %s]:%d %@Cannot find keyIndex '%@' in send keys array of %d elements
 [%s] %s:%d +[%s %s]:%d %p Found keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d -[(%s*)%p %s]:%d %@%p Found keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d +[%s %s]:%d Cannot find keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d -[(%s*)%p %s]:%d %@Cannot find keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d +[%s %s]:%d Found _latestSendKeyIndex '%@' in send keys array of %d elements
 [%s] %s:%d -[(%s*)%p %s]:%d %@Found _latestSendKeyIndex '%@' in send keys array of %d elements
 [%s] %s:%d +[%s %s]:%d Cannot find _latestSendKeyIndex '%@' in receive keys array of %d elements. Invalidating it...
 [%s] %s:%d -[(%s*)%p %s]:%d %@Cannot find _latestSendKeyIndex '%@' in receive keys array of %d elements. Invalidating it...
 [%s] %s:%d +[%s %s]:%d Found keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d -[(%s*)%p %s]:%d %@Found keyIndex '%@' in receive keys array of %d elements
 [%s] %s:%d +[%s %s]:%d Cannot find _latestReceiveKeyIndex '%@' in receive keys array of %d elements. Invalidating it...
 [%s] %s:%d -[(%s*)%p %s]:%d %@Cannot find _latestReceiveKeyIndex '%@' in receive keys array of %d elements. Invalidating it...
 [%s] %s:%d +[%s %s]:%d Pruning obsolete send keys (%@)
 [%s] %s:%d -[(%s*)%p %s]:%d %@Pruning obsolete send keys (%@)
 [%s] %s:%d +[%s %s]:%d Pruned keyIndex '%@'
 [%s] %s:%d -[(%s*)%p %s]:%d %@Pruned keyIndex '%@'
 [%s] %s:%d +[%s %s]:%d Updating the security key material with _latestSendKeyIndex '%@' for send %f seconds after key pruning
 [%s] %s:%d -[(%s*)%p %s]:%d %@Updating the security key material with _latestSendKeyIndex '%@' for send %f seconds after key pruning
 [%s] %s:%d +[%s %s]:%d Pruned _latestSendKeyIndex '%@
 from sendKeys (%@). Nullifying it
 [%s] %s:%d -[(%s*)%p %s]:%d %@Pruned _latestSendKeyIndex '%@
 from sendKeys (%@). Nullifying it
 [%s] %s:%d +[%s %s]:%d Pruning obsolete receive keys (%@)
 [%s] %s:%d -[(%s*)%p %s]:%d %@Pruning obsolete receive keys (%@)
 [%s] %s:%d +[%s %s]:%d Pruned _latestReceiveKeyIndex '%@
 from receiveKeys (%@). Nullifying it
 [%s] %s:%d -[(%s*)%p %s]:%d %@Pruned _latestReceiveKeyIndex '%@
 from receiveKeys (%@). Nullifying it
 [%s] %s:%d Local preferredAudioCodec:%d, allowAudioSwitching:%d
 [%s] %s:%d Failed to allocate negotiation results
 [%s] %s:%d Failed to allocate negotiation audio results
 [%s] %s:%d Failed to allocate negotiation video results
 [%s] %s:%d Failed to allocate negotiation screen results
 [%s] %s:%d Failed to allocate negotiation captions results
 [%s] %s:%d Failed to allocate negotiation moments results
 [%s] %s:%d Failed to allocate multiway audio streams
 [%s] %s:%d Failed to allocate multiway video streams
 [%s] %s:%d Capable of streaming 16x9 cellular!
 [%s] %s:%d Not capable of streaming 16x9 cellular!
 [%s] %s:%d Invalid media negotiator state: The callee tried to create the invite blob
 [%s] %s:%d Failed to create the invite blob
 [%s] %s:%d Failed to create bandwidth settings for media blob
 [%s] %s:%d Failed to allocate invite blob audio settings
 [%s] %s:%d Failed to allocate invite blob video settings
 [%s] %s:%d Failed to compress the media blob
 [%s] %s:%d Invalid media negotiator state: The caller tried to process the invite blob
 [%s] %s:%d Failed to decompress the media blob
 [%s] %s:%d Failed to decode the media blob
 [%s] %s:%d Failed to negotiate audio settings
 [%s] %s:%d Failed to negotiate video settings
 [%s] %s:%d Failed to negotiate screen settings
 [%s] %s:%d Failed to negotiate captions settings
 [%s] %s:%d Failed to negotiate moments settings
 [%s] %s:%d Failed to negotiate multiway audio streams
 [%s] %s:%d Failed to negotiate multiway video streams
 [%s] %s:%d Invalid media negotiator state: The caller tried to create the response blob
 [%s] %s:%d Failed to create the response blob
 [%s] %s:%d Failed to create the response blob audio rules
 [%s] %s:%d Failed to create the reponse blob audio settings
 [%s] %s:%d Failed to create the reponse blob video settings
 [%s] %s:%d Failed to create the reponse blob screen settings
 [%s] %s:%d Invalid media negotiator state: The callee tried to process the response blob
 [%s] %s:%d Failed to parse audio rules from response blob
 [%s] %s:%d Failed to parse video rules from response blob
 [%s] %s:%d Failed to parse screen rules from response blob
 [%s] %s:%d Failed to negotiation captions settings
 [%s] %s:%d Failed to negotiation moments settings
 [%s] %s:%d Unable to allocate dictionary for local feature string
 [%s] %s:%d Unable to allocate dictionary for remote feature string
 [%s] %s:%d Media blob dump enabled !!
 [%s] %s:%d Invalid bandwidth configuration: connection type=%d, operating mode=%d 
 [%s] %s:%d Failed to create bandwidth setting: connection type=%d, operating mode=%d 
 [%s] %s:%d Media blob size %s: %d -> %d bytes
 [%s] %s:%d Media blob size %s: %d -> %d bytes with ratio %f
 [%s] %s:%d DTX payload not available!
 [%s] %s:%d RED payload not available!
 [%s] %s:%d Unable to extract audio rules from media negotiation blob
 [%s] %s:%d Failed to negotiation primary audio payload
 [%s] %s:%d Unable to extract audio rules from media response blob
 [%s] %s:%d Failed to find local video feature list %d
 [%s] %s:%d Video payload OVERRIDE is PL_INVALID! Ignoring ...
 [%s] %s:%d Remote client doesn't support video OVERRIDE payload (%d). Ignoring ...
 [%s] %s:%d Local client doesn't support video OVERRIDE payload (%d). Ignoring ...
 [%s] %s:%d Video payload OVERRIDE to %d
 [%s] %s:%d Failed to extract the remote video rules for payload=%d transport=%d encoding=%d
 [%s] %s:%d No matching remote rules for payload=%d transport=%d encoding=%d
 [%s] %s:%d Failed to select feature string for payload=%d
 [%s] %s:%d Parameter set is not valid for payload %u
 [%s] %s:%d Unable to extract video rules from media negotiation blob
 [%s] %s:%d Unable to find a any video payload in media negotiation blob
 [%s] %s:%d Failed to set video parameter set
 [%s] %s:%d No available payloads
 [%s] %s:%d Unable to find a video rule for transport=%d encoding=%d
 [%s] %s:%d forceHWI enabled! No match found when select video rules for transport=%d, encoding=%d
 [%s] %s:%d Failed to extract the video rule collection from response
 [%s] %s:%d Unable to extract screen rules from media negotiation blob
 [%s] %s:%d Unable to find a any screen payload in media negotiation blob
 [%s] %s:%d Failed to set screen parameter set
 [%s] %s:%d Failed to extract the screen rule collection from response
 [%s] %s:%d Moments user preference Not Enabled.
 [%s] %s:%d Failed to allocate moments settings.
 [%s] %s:%d Unable to allocate multiway audio results
 [%s] %s:%d Unable to allocate multiway audio config
 [%s] %s:%d Unable to allocate multiway audio rule collection
 [%s] %s:%d +[%s %s]:%d Skipping all video streams (device doesn't support video)
 [%s] %s:%d -[(%s*)%p %s]:%d %@Skipping all video streams (device doesn't support video)
 [%s] %s:%d Source frame rate is already at %u
 [%s] %s:%d Source frame rate set to %u
 [%s] %s:%d setting destination frame rate to %d
 [%s] %s:%d _sourceFramerate=%u, _destinationFramerate=%u, _throttleRate=%f, _isThrottling=%d
 [%s] %s:%d received an error %s
 [%s] %s:%d HandoverReport: receive - last packet with feedback index %d, %u, bucket [%u %u %u] ratios [%u %u]
 [%s] %s:%d HandoverReport: send - last received packet with index %d, %u, bucket [%u %u %u] ratios [%u %u]
 [%s] %s:%d +[%s %s]:%d Failed to allocate audio stream array
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate audio stream array
 [%s] %s:%d +[%s %s]:%d Failed to allocate video stream array
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate video stream array
 [%s] %s:%d +[%s %s]:%d Failed to allocate stream id array
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate stream id array
 [%s] %s:%d +[%s %s]:%d Failed to initialize streams
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to initialize streams
 [%s] %s:%d +[%s %s]:%d Stream initialization failed
 [%s] %s:%d -[(%s*)%p %s]:%d %@Stream initialization failed
 [%s] %s:%d +[%s %s]:%d Failed to create video multiway config
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create video multiway config
 [%s] %s:%d +[%s %s]:%d Failed to create video stream config
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create video stream config
 [%s] %s:%d videoResolution is %d, not encoding squares
 [%s] %s:%d force encode size width is %d, height is %d
 [%s] %s:%d video reolution is %d
 [%s] %s:%d +[%s %s]:%d Failed to forceHWI initialize video multiway stream
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to forceHWI initialize video multiway stream
 [%s] %s:%d +[%s %s]:%d Created video stream config with forceHWI to initialize video a multiway stream. Stream[Codec=%d,W=%d,H=%d,fps=%d,%xkbps, %dIDR/sec]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Created video stream config with forceHWI to initialize video a multiway stream. Stream[Codec=%d,W=%d,H=%d,fps=%d,%xkbps, %dIDR/sec]
 [%s] %s:%d +[%s %s]:%d Failed to load supported audio rule collection
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to load supported audio rule collection
 [%s] %s:%d +[%s %s]:%d Failed to create audio stream config
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create audio stream config
 [%s] %s:%d +[%s %s]:%d Failed to create audio rules multiway config
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create audio rules multiway config
 [%s] %s:%d +[%s %s]:%d Failed to allocate EVS codec config!
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate EVS codec config!
 [%s] %s:%d +[%s %s]:%d Failed to create audio rules collection
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create audio rules collection
 [%s] %s:%d +[%s %s]:%d Setup error[%s]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Setup error[%s]
 [%s] %s:%d +[%s %s]:%d error[%s]
 [%s] %s:%d -[(%s*)%p %s]:%d %@error[%s]
 [%s] %s:%d +[%s %s]:%d SRTP setup error[%s]
 [%s] %s:%d -[(%s*)%p %s]:%d %@SRTP setup error[%s]
 [%s] %s:%d +[%s %s]:%d unexpected master key/salt length (expected[%d], given[%d])
 [%s] %s:%d -[(%s*)%p %s]:%d %@unexpected master key/salt length (expected[%d], given[%d])
 [%s] %s:%d +[%s %s]:%d SRTPPrepareEncryption failed
 [%s] %s:%d -[(%s*)%p %s]:%d %@SRTPPrepareEncryption failed
 [%s] %s:%d +[%s %s]:%d create send crypto set failed
 [%s] %s:%d -[(%s*)%p %s]:%d %@create send crypto set failed
 [%s] %s:%d +[%s %s]:%d create receive crypto set failed
 [%s] %s:%d -[(%s*)%p %s]:%d %@create receive crypto set failed
 [%s] %s:%d +[%s %s]:%d SRTPUseEncryption failed
 [%s] %s:%d -[(%s*)%p %s]:%d %@SRTPUseEncryption failed
 [%s] %s:%d +[%s %s]:%d SRTPUseEncryption completed
 [%s] %s:%d -[(%s*)%p %s]:%d %@SRTPUseEncryption completed
 [%s] %s:%d +[%s %s]:%d Failed to retrieve last RTCP timesamp. error=%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to retrieve last RTCP timesamp. error=%d
 [%s] %s:%d +[%s %s]:%d Oversize member key length (limit[%d], given[%d])
 [%s] %s:%d -[(%s*)%p %s]:%d %@Oversize member key length (limit[%d], given[%d])
 [%s] %s:%d +[%s %s]:%d Oversize member salt length (limit[%d], given[%d])
 [%s] %s:%d -[(%s*)%p %s]:%d %@Oversize member salt length (limit[%d], given[%d])
 [%s] %s:%d +[%s %s]:%d SRTP should be initialized first before we can update security key material
 [%s] %s:%d -[(%s*)%p %s]:%d %@SRTP should be initialized first before we can update security key material
 [%s] %s:%d +[%s %s]:%d create crypto set failed
 [%s] %s:%d -[(%s*)%p %s]:%d %@create crypto set failed
 [%s] %s:%d %s[%p] %s failed to generate the reception report: status=%d
 [%s] %s:%d %s[%p] %s failed to retrieve the report[%d] time: status=%d
 [%s] %s:%d %s[%p] %s failed to retrieve extended sequence number: status=%d
AVConferenceXPCServer [%s] %s:%d ##### TERMINATING %s [%d] due to timeout (client %s [%d])
AVConferenceXPCServer [%s] %s:%d ##### TERMINATING %s [%d] now
AVConferenceXPCServer [%s] %s:%d setting connection again with same value
AVConferenceXPCServer [%s] %s:%d VCXPCServer: Ping saw client death, ignored by ping
AVConferenceXPCServer [%s] %s:%d VCXPCServer: Server was pinged successfully
AVConferenceXPCServer [%s] %s:%d VCXPCServer: preparing to send message to clients for service %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: sending notification to client for service %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: sending notification to all clients for service %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: XPC connectionsToUse count =%lu
AVConferenceXPCServer [%s] %s:%d VCXPCServer: Adding registered block for service %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: Removing registered block for service %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: AVConferenceXPCServer _xpc_handle_connection incoming request
AVConferenceXPCServer [%s] %s:%d AVConferenceXPCServer: Incoming connection request failed credentials, ignoring connection
AVConferenceXPCServer [%s] %s:%d VCXPCServer: caching audit token from PID %d
AVConferenceXPCServer [%s] %s:%d VCXPCServer: dispatching registered block for service %s, block %p, queue %p
AVConferenceXPCServer [%s] %s:%d VCXPCServer: executing registered block for service %s, block %p, queue %p
AVConferenceXPCServer [%s] %s:%d VCXPCServer: invalid service requested or no block registered for service %s, ignoring
AVConferenceXPCServer [%s] %s:%d VCXPCServer: client connection fully disconnected or error from unrecognized client
AVConferenceXPCServer [%s] %s:%d VCXPCServer: XPC Error, %s
AVConferenceXPCServer [%s] %s:%d VCXPCServer: XPC Error, IGNORING INCOMING REQUEST
AVConferenceXPCServer [%s] %s:%d VCXPCServer: _xpc_add_connection_to_list PID %d
AVConferenceXPCServer [%s] %s:%d VCXPCServer: _xpc_remove_connection_from_list PID %d
AVConferenceXPCServer [%s] %s:%d 
 [%s] %s:%d AVPingTest: interfaceNameToTest = %s
 [%s] %s:%d Starting AVPingTest with command %s
 [%s] %s:%d ping has output: %s
 [%s] %s:%d popen failed %d
 [%s] %s:%d ParsePingLineForLatencyStats: prefixString = %s
 [%s] %s:%d ParsePingLineForLatencyStats: lineToParse = %s, hasPrefix = %d
 [%s] %s:%d ParsePingLineForLatencyStats: %f, %f, %f, %f
 [%s] %s:%d ParsePingLineForPLR: lineToParse = %s
 [%s] %s:%d ParsePingLineForPLR: %d packets transmitted, %d packets received, %f
 [%s] %s:%d Failed to allocate video H264 rules array for cellular
 [%s] %s:%d Failed to allocate QVGA15 rule for H264 cellular
 [%s] %s:%d Failed to allocate HVGA15 rule for H264 cellular
 [%s] %s:%d Best video settings %s for aspect ratio=%g payload=%d
 [%s] %s:%d %dx%d/%f
 [%s] %s:%d Registered service %s with key %@, particiantID: %@
 [%s] %s:%d +[%s %s]:%d Received callback for service %@ with particiantID: %@
 [%s] %s:%d -[(%s*)%p %s]:%d Received callback for service %@ with particiantID: %@
 [%s] %s:%d Setting effects to disabled, re-initialize the buffer
 [%s] %s:%d AVAudioTierPicker failed to generate tiers
 [%s] %s:%d AudioTierSelection (%s) %d: %s quality[%f] diff=%d+%d=%d)%s
 [%s] %s:%d (%s) %d: %s
 [%s] %s:%d Multiway doesn't use legacy duplication. Tier not found!
 [%s] %s:%d No corresponding tier found for AudioBitRate, using fallback: %@
 [%s] %s:%d (%s) Using tier: %d
 [%s] %s:%d Tier for bitrate %d not found!
 [%s] %s:%d Tier for bitrate %d -> %@
 [%s] %s:%d Cap exceeded for number of red payloads:%d using %d instead
 [%s] %s:%d RED value of %d is not supported. Next RED value: %d
 [%s] %s:%d No corresponding tier found for AudioBitRate, using fallback
 [%s] %s:%d (%s) Using tier:%d %s
 [%s] %s:%d formatList size is zero for payload=%d, transfportType=%d
 [%s] %s:%d Failed setupVideoRulesForPayload for unrecognized payload %d!
 [%s] %s:%d Failed to allocate preferred H264 wifi rule
 [%s] %s:%d Failed to setup Wifi encoding rules for H264
 [%s] %s:%d Failed to setup Wifi decoding rules for H264
 [%s] %s:%d Failed to allocate preferred H264 cell rule
 [%s] %s:%d Failed to setup cell encoding rules for H264
 [%s] %s:%d Failed to setup cell decoding rules for H264
 [%s] %s:%d Couldn't find configuration for _hardwareSettings.deviceClass = %d
 [%s] %s:%d VCImageAttrbuteRules: %s received invalid arguments 
 [%s] %s:%d VCImageAttrbuteRules: %s received unknown wireless interface
 [%s] %s:%d VCImageAttributeRules: extract dimensions for interface %d direction %d: %s, from %s
 [%s] %s:%d Creating a VCVideoStreamRateController with unknown algorithm.
 [%s] %s:%d %s doRateControlWithTime - %s maxTierBitrate:%u minTierBitrate:%u operatingTierBitrate:%u targetBitrate:%u rxBitrate:%u
 [%s] %s:%d %s:%d bitrate is greater than the maximum possible tier!
 [%s] %s:%d %s:%d bitrate is less than the minimum possible tier!
 [%s] %s:%d %s: operating bitrate is greater than the configured max bitrate: %u!
 [%s] %s:%d %s: operating bitrate is less than the configured min bitrate: %u!
 [%s] %s:%d +[%s %s]:%d Created VCControlChannelTransaction object for sessionID=%d, participantID=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Created VCControlChannelTransaction object for sessionID=%d, participantID=%@
 [%s] %s:%d +[%s %s]:%d Dealloc VCControlChannelTransaction object for sessionID=%d, participantID=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Dealloc VCControlChannelTransaction object for sessionID=%d, participantID=%@
 [%s] %s:%d +[%s %s]:%d flushTransactions: transaction has been flushed for sessionID=%d, participantID=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@flushTransactions: transaction has been flushed for sessionID=%d, participantID=%@
 [%s] %s:%d +[%s %s]:%d transactionConfirmedByParticipantID: message has been ACKed for sessionID=%d, participantID=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@transactionConfirmedByParticipantID: message has been ACKed for sessionID=%d, participantID=%@
 [%s] %s:%d +[%s %s]:%d transactionConfirmedByParticipantID: confirmation mismatch: sessionID %d!=%d, participantID %@!=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@transactionConfirmedByParticipantID: confirmation mismatch: sessionID %d!=%d, participantID %@!=%@
 [%s] %s:%d +[%s %s]:%d sendUnreliableMessage: could not send message to remote participant %@ for session %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@sendUnreliableMessage: could not send message to remote participant %@ for session %d
 [%s] %s:%d +[%s %s]:%d sendReliableMessage: Sent on attempt %d, sessionID=%d, participantID=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@sendReliableMessage: Sent on attempt %d, sessionID=%d, participantID=%@
 [%s] %s:%d +[%s %s]:%d sendReliableMessage pthread_cond_timedwait_relative_np timed out
 [%s] %s:%d -[(%s*)%p %s]:%d %@sendReliableMessage pthread_cond_timedwait_relative_np timed out
 [%s] %s:%d +[%s %s]:%d sendReliableMessage: message has been confirmed for sessionID=%d by remote participant participantID=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@sendReliableMessage: message has been confirmed for sessionID=%d by remote participant participantID=%@
 [%s] %s:%d +[%s %s]:%d sendReliableMessage: finished sending message to participantID=%@ for sessionID=%d, result='%s'
 [%s] %s:%d -[(%s*)%p %s]:%d %@sendReliableMessage: finished sending message to participantID=%@ for sessionID=%d, result='%s'
 [%s] %s:%d +[%s %s]:%d sendUnreliableMessage: attempt to send message to remote participant %@ which is not part of session %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@sendUnreliableMessage: attempt to send message to remote participant %@ which is not part of session %d
 [%s] %s:%d +[%s %s]:%d Created VCControlChannelDialog object with remoteParticipantID=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Created VCControlChannelDialog object with remoteParticipantID=%@
 [%s] %s:%d +[%s %s]:%d Dealloc VCControlChannelDialog object with remoteParticipantID=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Dealloc VCControlChannelDialog object with remoteParticipantID=%@
 [%s] %s:%d +[%s %s]:%d removeTransactionForTransactionID: transactionID=%d removed from list of transactions
 [%s] %s:%d -[(%s*)%p %s]:%d %@removeTransactionForTransactionID: transactionID=%d removed from list of transactions
 [%s] %s:%d +[%s %s]:%d encryptMessage: message '%@' is too long (%d > %d)
 [%s] %s:%d -[(%s*)%p %s]:%d %@encryptMessage: message '%@' is too long (%d > %d)
 [%s] %s:%d +[%s %s]:%d newEncryptedMessageFromMessage: encryption failed. Dropping the message...
 [%s] %s:%d -[(%s*)%p %s]:%d %@newEncryptedMessageFromMessage: encryption failed. Dropping the message...
 [%s] %s:%d +[%s %s]:%d sendReliableMessage: encryption failed. Dropping the message...
 [%s] %s:%d -[(%s*)%p %s]:%d %@sendReliableMessage: encryption failed. Dropping the message...
 [%s] %s:%d +[%s %s]:%d sendReliableMessage messageData=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@sendReliableMessage messageData=%@
 [%s] %s:%d +[%s %s]:%d sendReliableMessage: attempt to send duplicate transaction detected for _sessionID=%d, _participantID=%@, transactionID=%d. Aborted send...
 [%s] %s:%d -[(%s*)%p %s]:%d %@sendReliableMessage: attempt to send duplicate transaction detected for _sessionID=%d, _participantID=%@, transactionID=%d. Aborted send...
 [%s] %s:%d +[%s %s]:%d sendReliableMessage: creating a new transaction for _sessionID=%d, _participantID=%@, transactionID=%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@sendReliableMessage: creating a new transaction for _sessionID=%d, _participantID=%@, transactionID=%d
 [%s] %s:%d +[%s %s]:%d sendUnreliableMessage: encryption failed. Dropping the message...
 [%s] %s:%d -[(%s*)%p %s]:%d %@sendUnreliableMessage: encryption failed. Dropping the message...
 [%s] %s:%d +[%s %s]:%d processMessage: sequenceNumber may not be nil!!! Aborting processing message for _sessionID=%d, participantID=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@processMessage: sequenceNumber may not be nil!!! Aborting processing message for _sessionID=%d, participantID=%@
 [%s] %s:%d +[%s %s]:%d processMessage: Found matching transaction for  _sessionID=%d, participantID=%@, transactionID=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@processMessage: Found matching transaction for  _sessionID=%d, participantID=%@, transactionID=%@
 [%s] %s:%d +[%s %s]:%d processMessage: Could not find matching transaction for  _sessionID=%d, participantID=%@, transactionID=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@processMessage: Could not find matching transaction for  _sessionID=%d, participantID=%@, transactionID=%@
 [%s] %s:%d +[%s %s]:%d -processMessage: Sent confirmation for _sessionID=%d, participantID=%@, transactionID=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@-processMessage: Sent confirmation for _sessionID=%d, participantID=%@, transactionID=%@
 [%s] %s:%d +[%s %s]:%d -processMessageFromParticipant: shouldNotifyClient=%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@-processMessageFromParticipant: shouldNotifyClient=%d
 [%s] %s:%d +[%s %s]:%d +processMessage: Sent confirmation for _sessionID=%d, participantID=%@, transactionID=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@+processMessage: Sent confirmation for _sessionID=%d, participantID=%@, transactionID=%@
 [%s] %s:%d +[%s %s]:%d +processMessageFromParticipant: shouldNotifyClient=%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@+processMessageFromParticipant: shouldNotifyClient=%d
 [%s] %s:%d +[%s %s]:%d Could not create VTP socket for MW control channel (%08X) for sessionID %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Could not create VTP socket for MW control channel (%08X) for sessionID %d
 [%s] %s:%d +[%s %s]:%d Created VCControlChannelMultiWay object for sessionID %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Created VCControlChannelMultiWay object for sessionID %d
 [%s] %s:%d +[%s %s]:%d Dealloccing VCControlChannelMultiWay object with sessionID %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Dealloccing VCControlChannelMultiWay object with sessionID %d
 [%s] %s:%d +[%s %s]:%d VCControlChannelMultiWay object has been dealloced while its thread is still running. [VCControlChannelMultiWay stop] should have been invoked for sessionID '%d'!
 [%s] %s:%d -[(%s*)%p %s]:%d %@VCControlChannelMultiWay object has been dealloced while its thread is still running. [VCControlChannelMultiWay stop] should have been invoked for sessionID '%d'!
 [%s] %s:%d +[%s %s]:%d VCControlChannelMultiWay object has been dealloced with sessionID %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@VCControlChannelMultiWay object has been dealloced with sessionID %d
 [%s] %s:%d +[%s %s]:%d Failed to create receiveProc for MW control channel for sessionID %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create receiveProc for MW control channel for sessionID %d
 [%s] %s:%d +[%s %s]:%d MW control channel already stopped for sessionID %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@MW control channel already stopped for sessionID %d
 [%s] %s:%d +[%s %s]:%d Started MW control channel for sessionID %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Started MW control channel for sessionID %d
 [%s] %s:%d +[%s %s]:%d Stopped MW control channel for sessionID %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Stopped MW control channel for sessionID %d
 [%s] %s:%d +[%s %s]:%d decryptMessageWithMKI='%@' message='%@', sequenceNumber=%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@decryptMessageWithMKI='%@' message='%@', sequenceNumber=%d
 [%s] %s:%d +[%s %s]:%d decryptMessageWithMKI: message '%@' is too long (%d > %d)
 [%s] %s:%d -[(%s*)%p %s]:%d %@decryptMessageWithMKI: message '%@' is too long (%d > %d)
 [%s] %s:%d +[%s %s]:%d processEncryptedMessage: message received but MKI is not included in the packet from participantID='%@'. Dropping message...
 [%s] %s:%d -[(%s*)%p %s]:%d %@processEncryptedMessage: message received but MKI is not included in the packet from participantID='%@'. Dropping message...
 [%s] %s:%d +[%s %s]:%d processEncryptedMessage: message received from participantID='%@' but could not decrypt it. Dropping message...
 [%s] %s:%d -[(%s*)%p %s]:%d %@processEncryptedMessage: message received from participantID='%@' but could not decrypt it. Dropping message...
 [%s] %s:%d +[%s %s]:%d processEncryptedMessage: message encryption is enabled but remote participant '%@' sends un-encrypted messages. Dropping un-encrypted message. FIX ENCRYPTION INCONSYSTENCY!!!)
 [%s] %s:%d -[(%s*)%p %s]:%d %@processEncryptedMessage: message encryption is enabled but remote participant '%@' sends un-encrypted messages. Dropping un-encrypted message. FIX ENCRYPTION INCONSYSTENCY!!!)
 [%s] %s:%d +[%s %s]:%d messageReceived: message encryption is disabled locally via user defaults but remote participant '%@' sends encrypted messages. Dropping encrypted message. FIX ENCRYPTION INCONSYSTENCY!!!)
 [%s] %s:%d -[(%s*)%p %s]:%d %@messageReceived: message encryption is disabled locally via user defaults but remote participant '%@' sends encrypted messages. Dropping encrypted message. FIX ENCRYPTION INCONSYSTENCY!!!)
 [%s] %s:%d +[%s %s]:%d messageReceived  for sessionID %d: message=%@, participantID=%@, sequenceNumber=%@, status=%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@messageReceived  for sessionID %d: message=%@, participantID=%@, sequenceNumber=%@, status=%d
 [%s] %s:%d +[%s %s]:%d messageReceived: found existing dialog for participantID=%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@messageReceived: found existing dialog for participantID=%@
 [%s] %s:%d +[%s %s]:%d messageReceived: found no existing dialog for participantID=%@. Processing without dialog
 [%s] %s:%d -[(%s*)%p %s]:%d %@messageReceived: found no existing dialog for participantID=%@. Processing without dialog
 [%s] %s:%d +[%s %s]:%d messageReceived: no participantID provided. Processing without dialog
 [%s] %s:%d -[(%s*)%p %s]:%d %@messageReceived: no participantID provided. Processing without dialog
 [%s] %s:%d +[%s %s]:%d messageReceived: finished for sessionID %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@messageReceived: finished for sessionID %d
 [%s] %s:%d +[%s %s]:%d VCControlChannelMultiWay: sendReliableMessageAndWait: message %@ for sessionID %d, participantID %llu
 [%s] %s:%d -[(%s*)%p %s]:%d %@VCControlChannelMultiWay: sendReliableMessageAndWait: message %@ for sessionID %d, participantID %llu
 [%s] %s:%d +[%s %s]:%d sendMessage: found existing dialog for participantID=%llu
 [%s] %s:%d -[(%s*)%p %s]:%d %@sendMessage: found existing dialog for participantID=%llu
 [%s] %s:%d +[%s %s]:%d VCControlChannelMultiWay: sendReliableMessage: message %@ for sessionID %d, participantID %llu
 [%s] %s:%d -[(%s*)%p %s]:%d %@VCControlChannelMultiWay: sendReliableMessage: message %@ for sessionID %d, participantID %llu
 [%s] %s:%d +[%s %s]:%d VCControlChannelMultiWay: sendUnreliableMessage: message %@ for sessionID %d, participantID %llu
 [%s] %s:%d -[(%s*)%p %s]:%d %@VCControlChannelMultiWay: sendUnreliableMessage: message %@ for sessionID %d, participantID %llu
 [%s] %s:%d +[%s %s]:%d VCControlChannelMultiWay: broadcastUnreliableMessage: message %@ for sessionID %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@VCControlChannelMultiWay: broadcastUnreliableMessage: message %@ for sessionID %d
 [%s] %s:%d +[%s %s]:%d currentSendMKI is nil
 [%s] %s:%d -[(%s*)%p %s]:%d %@currentSendMKI is nil
 [%s] %s:%d control channel starts listening for sessionID=%d
 [%s] %s:%d receiveProc: vfdMessage=%d, exiting receiveProc for sessionID=%d
 [%s] %s:%d receiveProc: vfdCancel=%d, exiting receiveProc for sessionID=%d
 [%s] %s:%d select failed(%08X) for sessionID=%d
 [%s] %s:%d from sessionID=%d
 [%s] %s:%d VTP_Recvfrom(%d) returned 0: empty message for sessionID=%d
 [%s] %s:%d VTP_Recvfrom(%d) failed(%08X) for sessionID=%d
 [%s] %s:%d receiveProc for MW control channel received message for sessionID=%d
 [%s] %s:%d receiveProc unrecognized version of control channel messaging protocol %d. Ignoring the message...
 [%s] %s:%d control channel receiveProc ended for sessionID=%d
 [%s] %s:%d MarcoPerformSnapshot no longer in use
 [%s] %s:%d SnapshotTimer: %s complete before deadline, ignored
 [%s] %s:%d Invalid Config (nil)
 [%s] %s:%d Failed to create pre-load queue
 [%s] %s:%d Failed to create jitter queue
 [%s] %s:%d Jitter Buffer Created Successfully
 [%s] %s:%d +[%s %s]:%d Cleaning up JitterBuffer
 [%s] %s:%d -[(%s*)%p %s]:%d %@Cleaning up JitterBuffer
 [%s] %s:%d +[%s %s]:%d Starting heartbeat (interval=%f)
 [%s] %s:%d -[(%s*)%p %s]:%d %@Starting heartbeat (interval=%f)
 [%s] %s:%d +[%s %s]:%d Failed to create polling
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create polling
 [%s] %s:%d +[%s %s]:%d Reset the queue
 [%s] %s:%d -[(%s*)%p %s]:%d %@Reset the queue
 [%s] %s:%d +[%s %s]:%d Frame received seqNumber:%d length:%d isRed:%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Frame received seqNumber:%d length:%d isRed:%d
 [%s] %s:%d , transferSession is NULL
 [%s] %s:%d , bufferPool is NULL
 [%s] %s:%d , CVPixelBufferPoolCreatePixelBuffer failed
 [%s] %s:%d , VTPixelTransferSessionTransferImage failed
 [%s] %s:%d RFC3640 bundling encountered an error: inputBytes=%u bufferSize=%u accessUnitDataSectionSize=%u bundledCount=%u
 [%s] %s:%d Bundling encountered an error: inputBytes=%u bufferSize=%u accessUnitDataSectionSize=%u bundledCount=%u
 [%s] %s:%d : bundler buffer is full
 [%s] %s:%d : bundler can't mix payload types
 [%s] %s:%d Bundling encountered an error: inputBytes=%u bufferSize=%u encodedBufferSize=%u bundledCount=%u
 [%s] %s:%d : Large packet bundling encountered an error: inputBytes=%u bufferSize=%u encodedBufferSize=%u bundledCount=%u
 [%s] %s:%d Small packet bundling encountered an error: inputBytes=%u bufferSize=%u encodedBufferSize=%u bundledCount=%u
 [%s] %s:%d +[%s %s]:%d videoDegradedThreshold=%f
 [%s] %s:%d -[(%s*)%p %s]:%d %@videoDegradedThreshold=%f
 [%s] %s:%d +[%s %s]:%d isVideoQualityDegraded:%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@isVideoQualityDegraded:%d
 [%s] %s:%d +[%s %s]:%d videoIsExpected=%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@videoIsExpected=%d
AVCAudioStream [%s] %s:%d +[%s %s]:%d 
AVCAudioStream [%s] %s:%d -[(%s*)%p %s]:%d %@
AVCAudioStream [%s] %s:%d +[%s %s]:%d Invalid audio configuration: error[%s]
AVCAudioStream [%s] %s:%d -[(%s*)%p %s]:%d %@Invalid audio configuration: error[%s]
AVCAudioStream [%s] %s:%d AVCAudioStream start (not using XPC)
AVCAudioStream [%s] %s:%d AVCAudioStream: synchronizeWithStream %u
AVCAudioStream [%s] %s:%d Volume out of range:%f expected [0.0 - 1.0]
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p interruption begin
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p interruption end
AVCAudioStream [%s] %s:%d AVCAudioStream: mediaserverd died, notifying client
AVCAudioStream [%s] %s:%d AVCAudioStream: server died, but AVCAudioStream has already deallocated, NO-OP
AVCAudioStream [%s] %s:%d didStartConnectionBlock: error = %p, result = %s
AVCAudioStream [%s] %s:%d AVCAudioStream: didStartConnectionBlock: strongSelf == nil
AVCAudioStream [%s] %s:%d AVCAudioStream: didStartConnectionBlock strongSelf started(%d)
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didStart started[%d]
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didStop
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didPause [%d]
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didResume [%d]
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p of didStartSynchronizer [%d]
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p RTP packet timeout
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p RTCP packet timeout
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p received RTCP packets
AVCAudioStream [%s] %s:%d AVCAudioStream: notified client %p received input frequency metering packets
VCSessionDownlinkBandwidthAllocator [%s] %s:%d +[%s %s]:%d bitrate=%d
VCSessionDownlinkBandwidthAllocator [%s] %s:%d -[(%s*)%p %s]:%d %@bitrate=%d
VCSessionDownlinkBandwidthAllocator [%s] %s:%d +[%s %s]:%d Sorted media entries:
VCSessionDownlinkBandwidthAllocator [%s] %s:%d -[(%s*)%p %s]:%d %@Sorted media entries:
VCSessionDownlinkBandwidthAllocator [%s] %s:%d +[%s %s]:%d %@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d -[(%s*)%p %s]:%d %@%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d +[%s %s]:%d Reached max number of decoder streams (%d). Unable to display video for client:%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d -[(%s*)%p %s]:%d %@Reached max number of decoder streams (%d). Unable to display video for client:%@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d +[%s %s]:%d Opt in [%d] to client[%@] to upgrade to stream %@ remaining %d
VCSessionDownlinkBandwidthAllocator [%s] %s:%d -[(%s*)%p %s]:%d %@Opt in [%d] to client[%@] to upgrade to stream %@ remaining %d
VCSessionDownlinkBandwidthAllocator [%s] %s:%d +[%s %s]:%d Bitrate distribution completed; remaining %d (candidate: %@ %@)
VCSessionDownlinkBandwidthAllocator [%s] %s:%d -[(%s*)%p %s]:%d %@Bitrate distribution completed; remaining %d (candidate: %@ %@)
VCSessionDownlinkBandwidthAllocator [%s] %s:%d +[%s %s]:%d Allocated media entries for clients:
VCSessionDownlinkBandwidthAllocator [%s] %s:%d -[(%s*)%p %s]:%d %@Allocated media entries for clients:
VCSessionDownlinkBandwidthAllocator [%s] %s:%d +[%s %s]:%d Selected media entries for clients:
VCSessionDownlinkBandwidthAllocator [%s] %s:%d -[(%s*)%p %s]:%d %@Selected media entries for clients:
VCSessionDownlinkBandwidthAllocator [%s] %s:%d +[%s %s]:%d %@: %@
VCSessionDownlinkBandwidthAllocator [%s] %s:%d -[(%s*)%p %s]:%d %@%@: %@
VCMediaQueue [%s] %s:%d Cannot get internal queue index for packet type %d, streamId %d
VCMediaQueue [%s] %s:%d Media packets are drained from the busy pool of stream %d out of order!
VCMediaQueue [%s] %s:%d Internal queue has error %d when free media packet for packet type %d, streamId %d
VCMediaQueue [%s] %s:%d Unknown schedule policy %d
VCMediaQueue [%s] %s:%d Starting budget in this interval: %d
VCMediaQueue [%s] %s:%d Total byte count scheduled in this interval: %d, remaining budget: %d
VCMediaQueue [%s] %s:%d Schedule policy %d should not reach here!
VCMediaQueue [%s] %s:%d CMBlock error %d when send/free media packet for streamId %d
VCMediaQueue [%s] %s:%d Datagram count %d is larger than VTP max compound packet datagram count %d
VCMediaQueue [%s] %s:%d Sending out probing group ID:%d, streamID:%d, size:%d
VCMediaQueue [%s] %s:%d Out of memory when creating CMBlockBuffer!
VCMediaQueue [%s] %s:%d Out of memory when creating internal queues!
VCMediaQueue [%s] %s:%d Internal queue has error %d when free media packet for streamId %d
VCMediaQueue [%s] %s:%d VCMediaQueue internal queue flushed with %u packets, %d remaining
VCMediaQueue [%s] %s:%d Internal queue with index %d is NULL
VCMediaQueue [%s] %s:%d Not enough memory to create run time instance
VCMediaQueue [%s] %s:%d Number of internal queues are set too large
VCMediaQueue [%s] %s:%d Not enough memory to create main queue
VCMediaQueue [%s] %s:%d Not enough memory to create internal queues
VCMediaQueue [%s] %s:%d VCMediaQueue: Force Disabling Packet Bundling
VCMediaQueue [%s] %s:%d Failed to create packet bundler
VCMediaQueue [%s] %s:%d Failed to create internal thread
VCMediaQueue [%s] %s:%d VCMediaQueue created successfully with 1 main queue, %d internal queues
VCMediaQueue [%s] %s:%d VCMediaQueueSendProc thread started
VCMediaQueue [%s] %s:%d VCMediaQueueSendProc thread ended
VCMediaQueue [%s] %s:%d Cannot get internal queue index for streamId %d
VCMediaQueue [%s] %s:%d Cannot get media packet from its pool for streamId %d
VCMediaQueue [%s] %s:%d Add media packet for an unknown packet type %d
VCMediaQueue [%s] %s:%d Internal queue has error %d when adding media packet for packet type %d, streamId %d
VCMediaQueue [%s] %s:%d VCMediaQueue set with peak bitrate = %u
VCMediaQueue [%s] %s:%d VCMediaQueue set with MTU bytes = %u
VCMediaQueue [%s] %s:%d Callback is NULL
VCMediaQueue [%s] %s:%d Finalize the media queue:%p
AVConferencePreview [%s] %s:%d cameraUID=%s, error=%@
AVConferencePreview [%s] %s:%d AVConferencePreview calling didGetSnapshot size=%lu
AVConferencePreview [%s] %s:%d AVConferencePreview delegate does not respond to didGetSnapshot:
AVConferencePreview [%s] %s:%d cameraUniqueID:%s
AVConferencePreview [%s] %s:%d AVConferencePreview delegate does not respond to cameraDidBecomeAvailableForUniqueID:
AVConferencePreview [%s] %s:%d cameraUID=%s, reason=%d
AVConferencePreview [%s] %s:%d AVConferencePreview delegate does not respond to cameraDidBecomeInterruptedForForUniqueID:reason:
AVConferencePreview [%s] %s:%d AVConferencePreview: connectLayer:withSlot: failed layer %p slot %d
AVConferencePreview [%s] %s:%d AVConferencePreview: connectLayer:withSlot: connected slot %d to layer %s
AVConferencePreview [%s] %s:%d AVConferencePreview: retrying connection to server in %g seconds, connection attempts %u
AVConferencePreview [%s] %s:%d AVConferencePreview: sending re-connect message to server
AVConferencePreview [%s] %s:%d AVConferencePreview: connected to server
AVConferencePreview [%s] %s:%d AVConferencePreview previewStarted callback: connect layer to preview slot=%d
AVConferencePreview [%s] %s:%d AVConferencePreview: received new slot %d for layer %p facing %d
AVConferencePreview [%s] %s:%d returning %d
AVConferencePreview [%s] %s:%d ---- STOP! ---- setLocalCamera is deprecated! Use setLocalCameraWithUID instead! AVConferencePreview setLocalCamera %u
AVConferencePreview [%s] %s:%d requestedCameraUniqueID = %@
AVConferencePreview [%s] %s:%d AVConferencePreview localCamera %u
AVConferencePreview [%s] %s:%d AVConferencePreview localCamera %@
 [%s] %s:%d DTMF: error, unsupported event %u
 [%s] %s:%d DTMF: error, not a start block
 [%s] %s:%d DTMF: error, not a stop block
 [%s] %s:%d Packet handler called after secure data channel was released!
 [%s] %s:%d Failed to decrypt the data. (%X)
 [%s] %s:%d +[%s %s]:%d maxEncryptedDataSize = %ld
 [%s] %s:%d -[(%s*)%p %s]:%d %@maxEncryptedDataSize = %ld
 [%s] %s:%d +[%s %s]:%d maxUnencryptedDataSize = %ld
 [%s] %s:%d -[(%s*)%p %s]:%d %@maxUnencryptedDataSize = %ld
 [%s] %s:%d sharedSecret (%p) invalid: requiredSize = %d, passedSize = %d
 [%s] %s:%d tls_record_init_pending_ciphers failed with error 0x%X
 [%s] %s:%d tls_record_advance_read_cipher failed with error 0x%X
 [%s] %s:%d tls_record_advance_write_cipher failed with error 0x%X
 [%s] %s:%d Data is too large (%d)
 [%s] %s:%d Failed to encrypt the client data (%X)
 [%s] %s:%d Failed with status: %X
 [%s] %s:%d Invalid encrypted data passed to %s.
 [%s] %s:%d need sharedSecret for encrypted data
 [%s] %s:%d tls_record_decrypt failed with error 0x%X
 [%s] %s:%d tls_record_decrypt returned contentType = %d != tls_record_type_AppData
 [%s] %s:%d Invalid secure data passed to %s.
 [%s] %s:%d Invalid OFT Type %d
 [%s] %s:%d streamIDsDictionary is nil
 [%s] %s:%d set streamIDsDictionary: %@
 [%s] %s:%d subscribedStreamIDs equal: %@
 [%s] %s:%d primary connection is nil
 [%s] %s:%d set publishedStreamIDs: %@
 [%s] %s:%d publishedStreamIDs equal: %@
 [%s] %s:%d set primaryLinkID: %@
 [%s] %s:%d set duplicationLinkID: %@
 [%s] %s:%d Reset participant generation counter from %d to 0
 [%s] %s:%d participantGenerationCounterLSByte = %d, %d
 [%s] %s:%d update vcIDSSessionInfoResponse = %@
 [%s] %s:%d vcIDSSessionInfoResponse has IDSDataChannelError, %@
 [%s] %s:%d ERROR = %@
 [%s] %s:%d Primary connection is nil
 [%s] %s:%d Opt in for connection, request = %@
 [%s] %s:%d Connection is nil
 [%s] %s:%d Opt out for non primary connection, request = %@
 [%s] %s:%d stats controller [%p] init with transportStream [%p] and transportSessionId: %u
 [%s] %s:%d dealloc [%p]
 [%s] %s:%d session stats controller reset
 [%s] %s:%d VCRealTimeThread_Start for session stats controller %s
 [%s] %s:%d VCRealTimeThread_Initialize for session stats controller thread FAILED
 [%s] %s:%d start local session stats update
 [%s] %s:%d stop local session stats update
 [%s] %s:%d Round trip time is greater than 12 seconds [RTT:%dms]
 [%s] %s:%d Local VTP queue time is greater than 1 seconds [qTime:%dms]
 [%s] %s:%d index = %d, sessionStatsLocal: uplinkID = %d, request time = %f, totalLocalMediaPacketSent = %d, totalServerStatsByteUsed = %d
 [%s] %s:%d Trigger rate control without serverStats response with uplinkSendTimestamp:0x%04X, downlinkSendTimestamp:0x%04X
 [%s] %s:%d Receive packet from transport stream fails!
 [%s] %s:%d Invalid remoteSessionStats
 [%s] %s:%d Do not update session stats since linkID does not match %d, %d
 [%s] %s:%d statsID is same as the previous one %u
 [%s] %s:%d Health Monitor for severStats: total stats request count:%u, total response count:%d, [this interval processed:%u, dropped:%u,%u, triggered:%u, average queue time:%.2fms, max queue time:%.2fms]
 [%s] %s:%d statsController is NULL!
 [%s] %s:%d AVCPacketRelaySocketConnection: getpeername failed on connected socket %d with errno %d
 [%s] %s:%d AVCPacketRelaySocketConnection: invalid remote IPPort
 [%s] %s:%d AVCPacketRelaySocketConnection: socket %d is connected. Expected an unconnected socket
 [%s] %s:%d Created AVCPacketRelaySocketConnection %s successfully
 [%s] %s:%d AVCPacketRelaySocketConnection: init error %08X
 [%s] %s:%d AVCPacketRelaySocketConnection: starting...
 [%s] %s:%d AVCPacketRelaySocketConnection: cannot start without setting read handler
 [%s] %s:%d AVCPacketRelaySocketConnection: stopping...
 [%s] %s:%d AVCPacketRelaySocketConnection: received from %s
 [%s] %s:%d AVCPacketRelaySocketConnection: receive failed with error %d on socket %d
 [%s] %s:%d AVCPacketRelaySocketConnection: received %d bytes of data
 [%s] %s:%d AVCPacketRelaySocketConnection: send failed with error %d on socket %d
 [%s] %s:%d AVCPacketRelaySocketConnection: send failed with broken pipe (socket %d), error %d
 [%s] %s:%d AVCPacketRelaySocketConnection: sent %zu bytes < %u total bytes
 [%s] %s:%d AVCPacketRelaySocketConnection: sent %zu bytes
 [%s] %s:%d AVCPacketRelaySocketConnection: dealloc
 [%s] %s:%d Created AVCPacketRelayIDSConnection %s successfully
 [%s] %s:%d AVCPacketRelayIDSConnection: init error %08X
 [%s] %s:%d AVCPacketRelayIDSConnection: already started
 [%s] %s:%d AVCPacketRelayIDSConnection: cannot start without setting read handler
 [%s] %s:%d AVCPacketRelayIDSConnection: starting...
 [%s] %s:%d AVCPacketRelayIDSConnection: Datagram channel link %d failed to read with error %s
 [%s] %s:%d AVCPacketRelayIDSConnection: Datagram channel link %d returned empty datagram
 [%s] %s:%d AVCPacketRelayIDSConnection: reading %u bytes
 [%s] %s:%d AVCPacketRelayIDSConnection: IDS eventHandler called without event type
 [%s] %s:%d AVCPacketRelayIDSConnection: IDS channel connected
 [%s] %s:%d AVCPacketRelayIDSConnection: IDS channel disconnected
 [%s] %s:%d AVCPacketRelayIDSConnection: stopping...
 [%s] %s:%d AVCPacketRelayIDSConnection: resume the connection and wait to be connected before sending data
 [%s] %s:%d AVCPacketRelayIDSConnection: write %u bytes failed with error %s
 [%s] %s:%d AVCPacketRelayIDSConnection: write %u bytes successfully
 [%s] %s:%d AVCPacketRelayIDSConnection: dealloc
 [%s] %s:%d AVCPacketRelay: init connection is nil
 [%s] %s:%d AVCPacketRelay: init connection has wrong type
 [%s] %s:%d AVCPacketRelay: failed to create AVCPacketRelayQueue
 [%s] %s:%d AVCPacketRelay: readHandler failed with error %s
 [%s] %s:%d AVCPacketRelay: doesn't know how to forward packet
 [%s] %s:%d AVCPacketRelay: forwarding packet failed with error %s
 [%s] %s:%d Created AVCPacketRelay %s successfully
 [%s] %s:%d AVCPacketRelay: init failed with error %s
 [%s] %s:%d AVCPacketRelay: starting...
 [%s] %s:%d AVCPacketRelay: stopping...
 [%s] %s:%d AVCPacketRelay: dealloc
 [%s] %s:%d AVCPacketRelay: start failed with result %08X
 [%s] %s:%d AVCPacketRelay: stop connection failed with result %08X
 [%s] %s:%d AVCPacketRelay: stop multiplexed connection failed with result %08X
 [%s] %s:%d AVCPacketRelay: stop failed with result %08X
 [%s] %s:%d VCMediaStreamSynchronizer failed! sourceSampleRate:%u destinationSampleRate:%u
 [%s] %s:%d VCMediaStreamSynchronizer: sourceSampleRate:%ld destinationSampleRate:%ld
 [%s] %s:%d VCMediaStreamSynchronizer: source info not ready
 [%s] %s:%d VCMediaStreamSynchronizer: destination info not ready
 [%s] %s:%d VCMediaStreamSynchronizer: DToS: %u->%u
 [%s] %s:%d VCMediaStreamSynchronizer: calculated playout time = %lld/%d
 [%s] %s:%d VCMediaStreamSynchronizer: wrap around playoutSampleRTP(%lld)-destRTPOfNTP(%lld)=%lld
 [%s] %s:%d isSourceActive:%d
AVCTextStream [%s] %s:%d +[%s %s]:%d Failed to allocate callback queue
AVCTextStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate callback queue
AVCTextStream [%s] %s:%d +[%s %s]:%d Failed to allocate text stream
AVCTextStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate text stream
AVCTextStream [%s] %s:%d +[%s %s]:%d Failed to get capabilities dictionary
AVCTextStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to get capabilities dictionary
AVCTextStream [%s] %s:%d +[%s %s]:%d Invalid text configuration: error[%s]
AVCTextStream [%s] %s:%d -[(%s*)%p %s]:%d %@Invalid text configuration: error[%s]
AVCTextStream [%s] %s:%d +[%s %s]:%d start (not using XPC)
AVCTextStream [%s] %s:%d -[(%s*)%p %s]:%d %@start (not using XPC)
AVCTextStream [%s] %s:%d direction is already set to %d
AVCTextStream [%s] %s:%d rtcpEnabled is already set to %d
AVCTextStream [%s] %s:%d rtpTimeOutEnabled is already set to %d
AVCTextStream [%s] %s:%d rtcpTimeOutEnabled is already set to %d
AVCTextStream [%s] %s:%d rtpTimeOutInterval is already set to %f
AVCTextStream [%s] %s:%d rtcpTimeOutIntervalSec is already set to %f
AVCTextStream [%s] %s:%d rtcpSendIntervalSec is already set to %f
 [%s] %s:%d called with invalid parameter: routine=%p context=%p identifier=%p
 [%s] %s:%d Failed to allocate real time thread
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCRealTimeThread.c:%d: Failed to start the thread
 [%s] %s:%d called with NULL context!
 [%s] %s:%d ### VCRealTimeThread_Start(%s) called!
 [%s] %s:%d ### VCRealTimeThread_Stop(%s) called!
 [%s] %s:%d Successful thread state transition: %d -> %d
 [%s] %s:%d Thread state transition failed: %d -> %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCRealTimeThread.c:%d: Thread creation failed (%d)
 [%s] %s:%d ### VCRealTimeThread_ThreadProc(%s) start!
 [%s] %s:%d ### VCRealTimeThread_ThreadProc(%s) running!
 [%s] %s:%d ### VCRealTimeThread_ThreadProc(%s) pausing!
 [%s] %s:%d ### VCRealTimeThread_ThreadProc(%s) stop!
 [%s] %s:%d Socket creation error - %u
VCRC [%s] %s:%d Probing sequence head is late, early probing sequence packet number: %d, bytes:%d
VCRC [%s] %s:%d Bandwidth Estimation: ArrivalTime:%.4f, BWD:%.2f, state:%d, divergeCount:%d, prob_seq:[duration:%.4f, size:%d, count:%d], EstimatedBandwidth:%.2f
VCRC [%s] %s:%d Bandwidth Estimation(BWD:%.2f): ArrivalTime:%.4f, state:%d, divergeCount:%d, EstimatedBandwidth:%.2f
VCRC [%s] %s:%d Update bandwidth estimator qualification parameters with RAT=%d, mode=%d. [maxBW:%f, minWin:%f, maxOverRange:%d, minPacketCount:%d]
VCRC [%s] %s:%d Create bandwidth estimator for estimator id: %d
VCRC [%s] %s:%d Remove bandwidth estimator for estimator id: %d
 [%s] %s:%d %s: capture = %dx%d, encode = %dx%d
 [%s] %s:%d setupVTPSocket called before connectionResult was set
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCClientRelay.m:%d: socket failed(%08X)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCClientRelay.m:%d: bind on %s failed(%08X)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCClientRelay.m:%d: getaddrinfo(%s,%s) failed(%08X)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCClientRelay.m:%d: setupVTPSocket failed(%x)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCClientRelay.m:%d: VTPRecvProcVCCR thread create failed(%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCClientRelay.m:%d: startRelay: _idsReadQueue creation failed
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCClientRelay.m:%d: startRelay: _idsReadSource creation failed
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCClientRelay.m:%d: startRelay VTP_SetClientRelayMode(%d) failed(%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCClientRelay.m:%d: relayIDSPacket: recv failed(%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCClientRelay.m:%d: relayIDSPacket: VTP_Sendto: sentBytes = %d, errno = %d
 [%s] %s:%d +[%s %s]:%d recv(%d) = %d, sent(%d) = (%d)
 [%s] %s:%d -[(%s*)%p %s]:%d %@recv(%d) = %d, sent(%d) = (%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCClientRelay.m:%d: VCClientRelayVTPReceiveProc: VTP_Select failed(%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCClientRelay.m:%d: VCClientRelayVTPReceiveProc: VTP_Recvfrom failed(%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/VCClientRelay.m:%d: VCClientRelayVTPReceiveProc send: sentBytes = %d, errno = %d
 [%s] %s:%d VCCR - VCClientRelayVTPReceiveProc stop!
 [%s] %s:%d invalid input parameter
 [%s] %s:%d Failed to allocate buffer list
 [%s] %s:%d Nothing to do. The audio buffer list is already NULL
 [%s] %s:%d No support for interleaved audio channels
 [%s] %s:%d Formats don't match
 [%s] %s:%d Sample count mismatch: source=%u dest=%u don't match
 [%s] %s:%d Formats don't match: source=%f dest=%f
 [%s] %s:%d Unable to append all the source samples!
 [%s] %s:%d failed with %d
 [%s] %s:%d invalid input parameter. Index=%u
 [%s] %s:%d Invalid input parameter
 [%s] %s:%d Invalid input parameter. inSampleBuffer=%p outSampleBuffer=%p converter=%p
 [%s] %s:%d Unable to resample. Needed capacity=%d capacity=%d
 [%s] %s:%d Invalid channel count. inSampleBuffer=%d outSampleBuffer=%d
 [%s] %s:%d converter failed
 [%s] %s:%d Failed to create format description for audio buffer
 [%s] %s:%d Failed to create the CMSampleBuffer description: %d
 [%s] %s:%d Failed to create the CMSampleBuffer: %d
 [%s] %s:%d One of the pointers passed to AudioConverterInput callback is NULL
 [%s] %s:%d Insufficent input samples: needed = %d, available = %lu
 [%s] %s:%d Media Blob - %s
 [%s] %s:%d Media Blob - Captions Settings: canDisplayCaptions=%d
 [%s] %s:%d Media Blob -     %s
 [%s] %s:%d Media Blob - Multiway Audio: count=%d
 [%s] %s:%d Media Blob - Multiway Video: count=%d
 [%s] %s:%d Failed to create video rules media blob entries
 [%s] %s:%d Failed to create screen sharing media blob entries
 [%s] %s:%d Failed to add video format to negotiation blob: %dx%d %f
 [%s] %s:%d Found duplicated rule for %dx%d (%d) payload=%d 0x%x
 [%s] %s:%d Failed to allocate video rule collection (screen=%d)
 [%s] %s:%d Failed to allocate video rules array (screen=%d)
 [%s] %s:%d Detected an unknown formats (0x%08x - screen=%d). Ignoring ...
 [%s] %s:%d Media Blob - Video Settings: SSRC=%x allowRTCPFB=%u
 [%s] %s:%d Media Blob -     Payload=%u Format string=%s
 [%s] %s:%d Media Blob -     Payload=%u Parameter set: %s
 [%s] %s:%d Media Blob - Screen Settings: SSRC=%x allowRTCPFB=%u
 [%s] %s:%d Media Blob -     Format string=%s
 [%s] %s:%d Media Blob -     Payload=%u parameter set: %s
 [%s] %s:%d Media Blob -     %s
VCVirtualTTYDevice [%s] %s:%d Virtual TTY Device mode(%ld) not supported
VCVirtualTTYDevice [%s] %s:%d VCVirtualTTYDevice[%p] %s
VCVirtualTTYDevice [%s] %s:%d 
VCVirtualTTYDevice [%s] %s:%d Sending character:'%C'
VCVirtualTTYDevice [%s] %s:%d Not supported
VCVirtualTTYDevice [%s] %s:%d Received character:%c
 [%s] %s:%d using kAudioUnitSubType_RemoteIO w/o AEC
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioComponentCopyName() returned error %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioComponentCopyName() gave a NULL name!
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: CFStringGetCString() failed!
 [%s] %s:%d Creating "%s" Component Instance
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioComponentInstanceNew failed(%X)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioUnitSetProperty failed(%X)
 [%s] %s:%d AUIO Closed Handle.
 [%s] %s:%d Stopping the audio unit.
 [%s] %s:%d AUIO Unit is not found during reinitialization
 [%s] %s:%d AudioOutputUnitStop failed(%d)
 [%s] %s:%d AudioUnitUninitialize failed(%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioOutputUnitStart returned %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioOutputUnitStart completed
 [%s] %s:%d AUIOStart failed to create mic thread
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: ERROR AudioOutputUnitStart returned %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioOutputUnitStart() completed
 [%s] %s:%d pAUIO->micProcsCalled = %ld, pAUIO->bReady=%d, Returned = %ld, Internal = %ld, voiceActivityCount = %ld, speakerProcsCalled = %ld, Returned = %ld, averageInputPower = %f, MovingAverage = %f, averageOutputPower = %f, latestMicTimeStamp %u, mic shenanigans=%d, speaker shenanigans = %d, swap count = %d
 [%s] %s:%d IO Proc health monitor called with invalid HANDLE
 [%s] %s:%d Stopped the audio unit.
 [%s] %s:%d AUIO Stop!
 [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_MuteOutput to %u with error %08x %d
 [%s] %s:%d Changed mute to %u
 [%s] %s:%d getting called with no inRefCon!
 [%s] %s:%d Frame size changed and sample buffer size is not big enough
 [%s] %s:%d AudioUnitComplexRender: error %d
 [%s] %s:%d STACK OVERFLOW: Please file a radar. MetaData buffer is too small (%d). Required:%d
 [%s] %s:%d VoiceActivity[%d] VoiceActivityDNN[%f:%d] -> %f
 [%s] %s:%d Modifying timestamp delta to %d because mic also jumped %d -> %d
 [%s] %s:%d Corrupted metadata!
 [%s] %s:%d inSampleTime - pAUIO->numBufferedMicSamples = %d, inTimeStamp = %f, converted %lld, inSampleTime %u, HostTime %lld %f
 [%s] %s:%d speaker sample buffer is too small (%d). Expected=%d frames=%d bytesPerFrame=%d channels=%d! BufferCount=%d size=%d
 [%s] %s:%d Setting timestamp delta to %d: speaker %d - mic %d
 [%s] %s:%d AudioUnitSetProperty(RequestMetadata) failed(%d)
 [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_OperationMode %d %d %.4s
 [%s] %s:%d AudioUnitSetProperty(EnableDNNVAD) failed(%d)
 [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_MuteOutput with error %08x %d
 [%s] %s:%d AudioUnitSetProperty failed to set property kAudioOutputUnitProperty_IOBufferDuration with error %08x %d
 [%s] %s:%d AudioUnitSetProperty failed to set property kAUVoiceIOProperty_EnableRecording with error %08x %d
 [%s] %s:%d allowAudioRecording and kAUVoiceIOProperty_EnableRecording set to YES
 [%s] %s:%d AudioUnitInitialize failed(%d) attempt %d
 [%s] %s:%d AudioUnitInitialize failed(%d)
 [%s] %s:%d AudioUnitInitialize succeeded
 [%s] %s:%d VoiceIO Remote OS Version = %s
 [%s] %s:%d VoiceIO Remote HW Model = %s
 [%s] %s:%d VoiceIO Remote AU Version = %u
 [%s] %s:%d AudioUnitSetProperty failed to set property FarEndVersionInfo with error %08x %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioUnitGetProperty(MicOut) failed(%d)
 [%s] %s:%d AudioUnitSetProperty(MicOut) StreamFormat failed(%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioUnitGetProperty(SpkrIn) failed(%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AUIO/AUIO.mm:%d: AudioUnitSetProperty(SpkrIn) failed(%d)
 [%s] %s:%d AudioUnitGetProperty(MaximumMetadataByteSize) failed(%d)
 [%s] %s:%d pAUIO->iMinSamplesPerFrame %d to pAUIO->iNewSamplesPerFrame %d
 [%s] %s:%d kAUVoiceIOProperty_PrimaryCodecType failed(%d) codecType(%d)
 [%s] %s:%d kAUVoiceIOProperty_PrimaryCodecType succeeded codecType(%d)
 [%s] %s:%d kAUVoiceIOProperty_PrimaryCodecSampleRate failed(%d) sampleRate(%d)
 [%s] %s:%d kAUVoiceIOProperty_PrimaryCodecSampleRate succeded: sampleRate(%d)
 [%s] %s:%d Screen sharing rules: Failed to create H264 rules
 [%s] %s:%d Screen sharing rules: Failed to create Mac Decoding only rules
 [%s] %s:%d Screen sharing rules: no H264 support
 [%s] %s:%d Screen sharing rules: Could not retrieve main screen width
 [%s] %s:%d Screen sharing rules: Could not retrieve main screen height
 [%s] %s:%d Screen sharing rules: Could not retrieve hardware encoder type
 [%s] %s:%d Device has no screen sharing rules
 [%s] %s:%d Screen sharing rules: No suitable rules for this device
 [%s] %s:%d Rate Monitor: head index %d, tail index %d, dataSample1 %f, dataSample2 %f, tierTolerance %f, isAbnormalData %d, _abnormalCounter %d, isExceedingThreshold %d
 [%s] %s:%d transferSession or Bufferpool is not NULL
 [%s] %s:%d appending audio error is %d
 [%s] %s:%d _assetWriter init failed
 [%s] %s:%d VCMovieWriter, finished writing
 [%s] %s:%d VCMovieWriter, append success(%d) error(%@) for sampleTime(%f)
 [%s] %s:%d current time older than last frame
 [%s] %s:%d Writing metadata for VCMovieWriter %@ with URL %@
 [%s] %s:%d appendTimeMetadataGroup failed %s
 [%s] %s:%d VCMovieWriter, started writing at %f
 [%s] %s:%d +[%s %s]:%d Failed to set the WRM info. Error=%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to set the WRM info. Error=%d
 [%s] %s:%d Configuration is nil!
 [%s] %s:%d SoundDec_Create failed!
 [%s] %s:%d %s: SoundDec_Encode failed (%x). reset=%d inSamples=%d outBytes=%d %s
VCVideoStream [%s] %s:%d VCVideoStream[%p] %s
VCVideoStream [%s] %s:%d Compound streamIDs are %@, sending streamID is %@
VCVideoStream [%s] %s:%d VCVideoStream[%p] %s remoteVideo create queue for streamToken=%u transportSessionID=%d
VCVideoStream [%s] %s:%d VCVideoStream[%p] %s remoteVideo release queue for streamToken=%u
VCVideoStream [%s] %s:%d VCVideoStream[%p] error[%s]
VCVideoStream [%s] %s:%d This should not be called for IP camera
VCVideoStream [%s] %s:%d Returning, No need to request a key frame generation with periodic IDR
VCVideoStream [%s] %s:%d Sending stream ID is %@, compound stream ID is %@
VCVideoStream [%s] %s:%d not implemented
VCVideoStream [%s] %s:%d +[%s %s]:%d Reconfiguring VCVideoStream with a different number of transports.
VCVideoStream [%s] %s:%d -[(%s*)%p %s]:%d %@Reconfiguring VCVideoStream with a different number of transports.
VCVideoStream [%s] %s:%d TargetStreamID didn't change %@
VCVideoStream [%s] %s:%d +[%s %s]:%d Setting target stream id: %@
VCVideoStream [%s] %s:%d -[(%s*)%p %s]:%d %@Setting target stream id: %@
VCVideoStream [%s] %s:%d Setting shouldEnableFaceZoom in receiver to %d
VCVideoStream [%s] %s:%d +[%s %s]:%d error[%s]
VCVideoStream [%s] %s:%d -[(%s*)%p %s]:%d %@error[%s]
VCVideoStream [%s] %s:%d +[%s %s]:%d Failed to create transport
VCVideoStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create transport
VCVideoStream [%s] %s:%d +[%s %s]:%d Failed to configure transport
VCVideoStream [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to configure transport
VCVideoStream [%s] %s:%d +[%s %s]:%d Updating maxFramerate from %u to  %lu
VCVideoStream [%s] %s:%d -[(%s*)%p %s]:%d %@Updating maxFramerate from %u to  %lu
VCVideoStream [%s] %s:%d capture = %dx%d, encode = %dx%d
VCVideoStream [%s] %s:%d RTCReporting: can't configure the reporting agent.
VCVideoStream [%s] %s:%d Setting streamIDs (%@), repair streamIDs (%@)
VCVideoStream [%s] %s:%d No callID provided for stream!
VCVideoStream [%s] %s:%d Requesting streamID to generate a key frame %hu
VCVideoStream [%s] %s:%d VCVideoStream[%p] %s requesting Key frame for unknown RTCP FB:%d
VCVideoStream [%s] %s:%d VCVideoStream[%p] %s Requesting to generate key frame. RTT:%.3f timeDelta:%.3f timeToNextKeyFrame:%.3f
VCVideoStream [%s] %s:%d VCVideoStream[%p] %s Ignoring request to generate key frame. RTT:%.3f timeDelta:%.3f timeToNextKeyFrame:%.3f
VCVideoStream [%s] %s:%d VCVideoStream[%p] %s Unable to request key frame
VCVideoStream [%s] %s:%d received an error %s
VCVideoStream [%s] %s:%d Handling of thermal changes not implemented yet
VCVideoStream [%s] %s:%d Can't enqueue, VideoStream is not running yet
 [%s] %s:%d allocated new VideoConference object %p, with transportType %d
 [%s] %s:%d released old VideoConference object %p
 [%s] %s:%d initializeNewCallWithDeviceRole:%d (server side) callID=%d
 [%s] %s:%d >>>>> ERROR: Incoming arguments are nil (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d >>>>> ERROR: Call ID is nil (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d >>>>> ERROR: VideoConference context is nil (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d >>>>> Relaying outgoing ARPL data from AVConference via XPC to VideoConference with callID=%d (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d >>>>> [incomingArgs objectForKey:CLIENT_DIED_KEY] != nil (in VideoConferenceManagerCategories) <<<<<
 [%s] %s:%d VCSessionMessaging dealloc
 [%s] %s:%d VCSessionMessaging: sendMessage:%@, %@, %@
 [%s] %s:%d VCSessionMessaging: sendMessage:%@ for participantID:%llu, %@, %@
 [%s] %s:%d VCControlChannelDelegate receivedMessage callback...
 [%s] %s:%d Is topic assoicated %s with message %s block...
 [%s] %s:%d VCControlChannelDelegate sendReliableMessage callback...
 [%s] %s:%d VCControlChannelDelegate clearParticipantTransactionCacheForParticipant callback...
 [%s] %s:%d SIPClientDataDictionary dealloc
 [%s] %s:%d VCSessionMessageTopic with topic %s dealloc
 [%s] %s:%d sendMessage:withSequence:numRetries:%d, %d, %d, %d
 [%s] %s:%d sendReliableMessageAndWait result was %s, participantID=%llu, index=%ld, retry=%ld, message=%@
 [%s] %s:%d sendReliableMessageAndWait result was %s
 [%s] %s:%d passMessage: %s with topic %s
 [%s] %s:%d passMessage: Ignoring duplicate message %s with topic %s
 [%s] %s:%d clearTransactionCacheForParticipant:%@
 [%s] %s:%d parameter memory pool is NULL!
 [%s] %s:%d invalid memory pool %p or pointer %p!
 [%s] %s:%d Redundancy percentage: %d is out of bound in legacy duplication
 [%s] %s:%d +[%s %s]:%d Number of channels is incorrect (%d >= %lu)
 [%s] %s:%d -[(%s*)%p %s]:%d %@Number of channels is incorrect (%d >= %lu)
 [%s] %s:%d videoDegradedThreshold = %f
 [%s] %s:%d +[%s %s]:%d succeeded
 [%s] %s:%d -[(%s*)%p %s]:%d %@succeeded
 [%s] %s:%d +[%s %s]:%d failed error[%@]
 [%s] %s:%d -[(%s*)%p %s]:%d %@failed error[%@]
 [%s] %s:%d +[%s %s]:%d deallocating AVCAudioPowerSpectrumMeter
 [%s] %s:%d -[(%s*)%p %s]:%d %@deallocating AVCAudioPowerSpectrumMeter
 [%s] %s:%d Decoding: error %@.
 [%s] %s:%d Waiting for bag load.
 [%s] %s:%d Bag Load Notification came in %s
 [%s] %s:%d This is what we are reading in %s = %s
 [%s] %s:%d We don't have the required keys %s.  Please file.
 [%s] %s:%d verifyRequiredKeys finished.
 [%s] %s:%d Filter out statistics not belong to this redundancyController with statisticsID:%llu
 [%s] %s:%d Audio redundancy percentage change due to packet loss: %d, new threshold: %d [%d to %d]
 [%s] %s:%d Assign IDR slot for streams in item: %@
 [%s] %s:%d Setting position and period: %@
 [%s] %s:%d AVCMomentsRequest: initWithMediaType %d initiatorID %s transactionID %s
 [%s] %s:%d %p failed validation: %s
 [%s] %s:%d +[%s %s]:%d Failed to allocate config for type: %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to allocate config for type: %d
 [%s] %s:%d VCNAT64ResolverCleanup: no more registered callbackContexts left. Destroying NAT64Resolver
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: begin registration of context %08X on interface %s
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: could not create a shared instance of NAT64Resolver
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: failed on creating VCNAT64ListenerContext
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: failed on creating NAT64CallBackContext
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: failed on creating interfaceName
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: failed on creating listeners array
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: context %08X has already been registered for interface %s
 [%s] %s:%d VCNAT64ResolverRegisterForPrefixUpdate: succesfully registered context %08X on interface %s
 [%s] %s:%d VCNAT64ResolverDeregisterAll: nothing to deregister
 [%s] %s:%d VCNAT64ResolverGetPrefix: could not create a shared instance of NAT64Resolver
 [%s] %s:%d VCNAT64ResolverGetPrefix: can not fetch NAT64 prefix as '%s' has not been registered on NAT64Resolver
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: shared instance of NAT64Resolver does not exist. Creating it...
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: failed to create VCNAT64Resolver
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: failed to create interface dictionary for shared instance
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: failed to create dispatch queue for shared instance
 [%s] %s:%d VCNAT64ResolverGetSharedInstance: failed to create retry queue for shared instance
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: callbackContext should not be NULL
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: DNS callback context has already been released for nterface %s
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: Interface %s IS NOT behind NAT 64
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: Re-trying in 1 second for Interface %s, attempt %d out of %d
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: NAT64 prefix resolution failed with error %d
 [%s] %s:%d VCNAT64ResolveNAT64Prefix: Interface %s IS behind NAT 64
 [%s] %s:%d VCNAT64ResolverDeregisterFromInterface: removing context %08x from interface %s at index %d
 [%s] %s:%d VCNAT64ResolverDeregisterFromInterface: removing interface %s as it has no listeners
 [%s] %s:%d destinationIPPort is NULL for socket %d with getpeername errno %d
 [%s] %s:%d invalid packet srcDstInfo mode %d
 [%s] %s:%d Failed to decode captions blob
 [%s] %s:%d Audio redundancy is disabled.
 [%s] %s:%d In-appropriate mode %d for VCRedundancyController
 [%s] %s:%d Audio redundancy percentage changed from %d to %d with mode %d
 [%s] %s:%d Audio redundancy interval changed from %f to %f with mode %d
 [%s] %s:%d Video info layer is enabled.
 [%s] %s:%d ERROR queue for streamToken=%u doesn't exist.
 [%s] %s:%d ERROR OSX only support one client %u.
 [%s] %s:%d sucess streamToken=%u
 [%s] %s:%d AVCRemoteVideoClient: dealloc for streamToken=%u
 [%s] %s:%d AVCRemoteVideoClient: setVideoLayer %s for mode %d
 [%s] %s:%d AVCRemoteVideoClient: slotForMode %d
 [%s] %s:%d ERROR no valid slot for mode=%d
 [%s] %s:%d Invalid video mode:%d
 [%s] %s:%d HandoverReport: connection changed to: %s
 [%s] %s:%d Setting textLayer
 [%s] %s:%d VCBitrateArbiter: Bitrate rules %s
 [%s] %s:%d VCBitrateArbiter: received connection type %d
 [%s] %s:%d AVCPacketRelayDriver: invalid file descriptor to drive
 [%s] %s:%d AVCPacketRelayDriver: invalid file descriptor to stop
 [%s] %s:%d AVCPacketRelayDriver init failed: unable to start driver thread with errno %d
 [%s] %s:%d AVCPacketRelayDriver init %p
 [%s] %s:%d AVCPacketRelayDriver dealloc
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/CompressionUtils.c:%d: Error initializing deflate.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/CompressionUtils.c:%d: Error ending deflate.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/CompressionUtils.c:%d: Error initializing inflate.
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/SIP/CompressionUtils.c:%d: Error ending inflate.
AVCRC [%s] %s:%d Statistics has reverse history! packet count is not incremental, sendDiff:%d, receiveDiff:%d, time:%f, index:%d [%d,%d]
AVCRC [%s] %s:%d Received more packets than sent, sendDiff:%d, receiveDiff:%d, time:%f, index:%d [%d,%d]
AVCRC [%s] %s:%d Statistics has reverse history! byte count is not incremental, sendDiff:%d, currentCount:%llu, previousCount:%llu, time:%f, index:%d
AVCRC [%s] %s:%d Statistics has reverse history! byte count is not incremental, receiveDiff:%d, currentCount:%llu, previousCount:%llu, time:%f, index:%d
AVCRC [%s] %s:%d Statistics has reverse history! byte count is not incremental, serverStatsDiff:%d, currentCount:%llu, previousCount:%llu, time:%f, index:%d
AVCRC [%s] %s:%d Statistics history cannot match, because elementIndex is NULL!
AVCRC [%s] %s:%d Statistics history does not have enough history for the stats within the most recent %f seconds. History size: %f seconds
AVCRC [%s] %s:%d Statistics history receives out of order statistics for totalByteSent!
AVCRC [%s] %s:%d Statistics history receives out of order statistics for totalByteReceived!
AVCRC [%s] %s:%d Reset VCRC statistics history
 [%s] %s:%d %s ret: %d (%s)
 [%s] %s:%d failed to create %@
 [%s] %s:%d file exists at %@
 [%s] %s:%d failed to open %@ with error %d
 [%s] %s:%d successfully created %@
 [%s] %s:%d failed to read directory %@ (%@)
 [%s] %s:%d Total size: %llu
 [%s] %s:%d removed %@ (%@, %llu bytes, dumpID %u) - %llu bytes remaining
 [%s] %s:%d failed to remove %@ (%@)
 [%s] %s:%d Dropping the frame, Client fell behind. Buffer is full.
 [%s] %s:%d Can't release frame with time %lld, doesn't exist
 [%s] %s:%d Failed to allocate the audio receiver
 [%s] %s:%d Failed to iniitalize the receiver thread
 [%s] %s:%d Failed to create VCJitterBuffer
 [%s] %s:%d Failed to set audio receiver for RTP (%d)
 [%s] %s:%d Initialized AudioReceiver[%p] with JitterBuffer[%p]
 [%s] %s:%d Invalid audio receiver (nil)
 [%s] %s:%d Cleaning up audioReceiver (0x%p)
 [%s] %s:%d Playback was not initialized before start
 [%s] %s:%d AudioReceiver is NULL
 [%s] %s:%d Failed to initialize audio receiver (%p) playback.
 [%s] %s:%d Done updating audio receiver (%p) decoders. Status=%X
 [%s] %s:%d JB: Updated CellTech isCellular[%d] LocalCellTech:%d, RemoteCellTech=%d
 [%s] %s:%d error bad handle
 [%s] %s:%d VCAudioReceiver_PullAudioSamples: Failed to grab the lock
 [%s] %s:%d FATAL: Audio is asking for invalid number of samples %d 
 [%s] %s:%d AudioReceiver[%p] PullAudioSamples count:%u
 [%s] %s:%d AudioReceiver[%p] resetting non target stream %d
 [%s] %s:%d Calculated maxBurstLoss in samples: %u, in 20ms blocks: %u, sampleRate: %f
 [%s] %s:%d CollectAWDMetrics:audioReceiver is nil
 [%s] %s:%d VCAudioReceiver_CollectAWDMetrics: Failed to grab the lock
 [%s] %s:%d wrmMetrics is NULL
 [%s] %s:%d Receiver is being torn down
 [%s] %s:%d VCAudioReceiver cleanup DONE (0x%p)
 [%s] %s:%d Failed to unregister the reporting task: (0x%p)
 [%s] %s:%d Audio health report for participant id:%s with PLR percentage:%.2f
 [%s] %s:%d AudioReceiver[%p] Detected timestamp rollover
 [%s] %s:%d AudioReceiver[%p] Detected misordered packet during timestamp rollover
 [%s] %s:%d ERROR bad handle
 [%s] %s:%d Unsupported packet type:%d
 [%s] %s:%d Packet received on non-target stream. Ignore incoming RTP media packet.
 [%s] %s:%d FATAL: Could not allocate memory for Audio Packet
 [%s] %s:%d received packet time[%f]
 [%s] %s:%d First audio packet received. AudioReceiver[%p] jb[%p] time[%f] timestamp[%d]
 [%s] %s:%d AudioReceiver[%p] UNEXPECTED: IDS channel data is not available on RTP packet
 [%s] %s:%d AudioReceiver[%p] Switching audio stream: %d -> %d
 [%s] %s:%d ERROR unknown payloadType[%d]
 [%s] %s:%d [%p]
 [%s] %s:%d FATAL - Too many frames in audio packet, possible corruption
 [%s] %s:%d FATAL - Unable to fit audio data into the audioFrame buffer. Data size: %d, padding len: %u
 [%s] %s:%d New burst loss entry: SQ: %u, timestamp: %u, isDTX: %d, duration: %u, isValid: %d, AR highest received SQ: %u, AR packet entry count: %u
 [%s] %s:%d received VTP_PKT_BBNOTE
 [%s] %s:%d Received local codec rate mode change request
 [%s] %s:%d Tearing down audio receiver thread
 [%s] %s:%d Audio receiver %p RTPRecvRTP returned[%x] sleeping 15000usecs??
 [%s] %s:%d Audio receiver %p received an error %x
 [%s] %s:%d Failed to retrieve RTCP packet. Error:%x
 [%s] %s:%d High audio erasure rate: %f
 [%s] %s:%d Collected AWD metric samples (rtpPacketLossRate=%f, jitterBufferUnderflowRate=%f, frameErasureRate=%f, jitterBufferResidencyTime=%f)
 [%s] %s:%d JitterPreloadQueue: Allocation failed as the Queue is not valid
 [%s] %s:%d JitterPreloadQueue: Create Failed
 [%s] %s:%d JitterPreloadQueue: Failed to created Audio Packet Pool
 [%s] %s:%d JitterPreloadQueue: Failed to created Audio Frame Pool
 [%s] %s:%d JitterPreloadQueue: Too many frames seen in audio packet, possible corruption
 [%s] %s:%d VCAudioTransmitter[%p] Codec rate mode change requested: mode=%u bitrate=%u
 [%s] %s:%d VCAudioTransmitter[%p] Codec rate mode change request failed: mode=%u
 [%s] %s:%d error zero sampleBufferSize requested
 [%s] %s:%d encoderSamplePerFrame:%d bufferedSamples:%d totalSamples:%d timestamp:%d
 [%s] %s:%d Switching audio bitrates without changing tier %d -> %d
 [%s] %s:%d Time Hysteresis preventing tier upgrade from %d to %d, last upgrade at %6.3f
 [%s] %s:%d Switching audio bitrate tier payload %d -> %d for total tx %d: netBitrate %d -> %d, bundle %d -> %d
 [%s] %s:%d Unable to add samples to the bundle!
 [%s] %s:%d VCAT bundleAndSendSamples: frame#[%d] payload[%d] numBytes[%d] %s[%d]
 [%s] %s:%d Tier Table for Operating Mode %d
 [%s] %s:%d Setting audioTxBitrate to %d, %d audio + %d ((%d/%d+%d)*%d/%d) header
 [%s] %s:%d Switching payloads -> %d %d samplesPerFrame
 [%s] %s:%d +[%s %s]:%d Current ROC %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Current ROC %d
 [%s] %s:%d numPayloads:%d maxDelay(in20ms):%d
 [%s] %s:%d +[%s %s]:%d redundancyPercentage=%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@redundancyPercentage=%d
 [%s] %s:%d buffer: CAN'T BUFFER (%08X:%02d:%02d)...
 [%s] %s:%d buffer: FAILED TO BUFFER A RELIABLE PACKET SERIALNUMBER (%08X:%02d:%02d)...
 [%s] %s:%d %p remove: send bitmap == %08X%08X
 [%s] %s:%d %p remove: SET HEAD (%02d) FOR (%08X)...
 [%s] %s:%d %p remove: done bitmap == %08X%08X
 [%s] %s:%d ARPLSessionCreate: new session (%08X)...
 [%s] %s:%d ARPL_Sendto(%d): send %ld bytes %s ...
 [%s] %s:%d ARPL %p send: BUFFERED A NEW RELIABLE PACKET SERIALNUMBER (%08X:%02d:%02d) to (%08X)...
 [%s] %s:%d ARPL %p send: FAILED TO BUFFER A RELIABLE PACKET ..
 [%s] %s:%d ARPL_Recvfrom(%d): recv %d bytes %s ...
 [%s] %s:%d %p recv: packet checksum == (%04x)...
 [%s] %s:%d %p recv: calculated checksum == (%04x)...
 [%s] %s:%d %p recv: FORCE ACK ONLY for timeout %08X from remoteID %08X
 [%s] %s:%d %p recv: INCOMING BUFFER %d for packet serial_number %08X from remoteID %08X
 [%s] %s:%d %p recv: DISCARD DUPLICATE %d for packet serial_number %08X from remoteID %08X
 [%s] %s:%d %p recv: DISCARD NO BUFFER AVAILABLE %d for packet serial_number %08X from remoteID %08X
 [%s] %s:%d %p recv: got chunk segment %d of %d segments (%08X) @index %d
 [%s] %s:%d chunk not complete: check seg_idx %d
 [%s] %s:%d chunk not complete: len %d 
 [%s] %s:%d chunk not complete: max %d should be %d
 [%s] %s:%d chunk not complete: message fragment @index %d ser %08X should be %08X
 [%s] %s:%d FAIL: message fragment @index %d ser %08X seg_idx %d should be %d
 [%s] %s:%d START %d != HEAD %d
 [%s] %s:%d recv : deliver (%08X:%02d:%02d) from remoteID %08X...
 [%s] %s:%d ARPL_Recvfrom: return %d ...
 [%s] %s:%d ARPLSessionRelease: enter...
 [%s] %s:%d ARPLSessionRelease: old session (%08X)...
 [%s] %s:%d ARPLSessionRelease: delete...
 [%s] %s:%d ARPLSessionRelease: done...
 [%s] %s:%d ERROR: CAN'T RESEND (BAD TIMESTAMP) !!!!!!!!!!!!
 [%s] %s:%d %p check: RESEND serial number %08X to destination %08X INDEX %d
 [%s] %s:%d ERROR: CAN'T RESEND (BAD ADDRESS) !!!!!!!!!!!!
AVCVirtualTTYDevice [%s] %s:%d mode=%d, streamToken=%d
AVCVirtualTTYDevice [%s] %s:%d Sending character:'%C'
AVCVirtualTTYDevice [%s] %s:%d Sending text:%@
AVCVirtualTTYDevice [%s] %s:%d %@ has not started.
AVCVirtualTTYDevice [%s] %s:%d didStartConnectionBlock: error = %p, result = %s
AVCVirtualTTYDevice [%s] %s:%d AVCVirtualTTYDevice: didStartConnectionBlock: strongSelf == nil
AVCVirtualTTYDevice [%s] %s:%d AVCVirtualTTYDevice: didStartConnectionBlock strongSelf started(%d)
AVCVirtualTTYDevice [%s] %s:%d AVCVirtualTTYDevice: notified client %p of didStart started[%d]
AVCVirtualTTYDevice [%s] %s:%d AVCVirtualTTYDevice: notified client %p of didStop
AVCVirtualTTYDevice [%s] %s:%d Received text:%@
AVCVirtualTTYDevice [%s] %s:%d Received text:'%C'
 [%s] %s:%d Missing payloadType
 [%s] %s:%d payload:%d Invalid Codec SampleRate
 [%s] %s:%d payload:%d Invalid internal bundle factor
 [%s] %s:%d payload:%d Invalid block size
 [%s] %s:%d forceAACELDBitRate to %d
 [%s] %s:%d Lag processor initialized with invalid pointer
 [%s] %s:%d Invalid parameter passed to lag processor new stream. LagProcessor=%p, audioPacket=%p, TSRate=%u, samplesPerFrame=%u
 [%s] %s:%d Invalid parameter passed to lag processor. LagProcessor=%p audioPacket=%p samplesPerFrame=%d videoQSize=%d, state=%d
 [%s] %s:%d Skip lag computation for Red Audio
 [%s] %s:%d Spurious lag noted (Pkt: SN:0X%4X TS:0X%8X) (Ref: SN:0X%4X TS:0X%8X)
 [%s] %s:%d Moving reference to secondary (Was: SN:0X%4X TS:0X%8X) (Now: SN:0X%4X TS:0X%8X)
 [%s] %s:%d RecordOWRD: Lag (%fs) looks spurios (short %fs: long %fs : threshold %fs), discarding
 [%s] %s:%d Samples per frame looks incorrect %d
 [%s] %s:%d Bundling , looks incorrect %d
 [%s] %s:%d Entering OWRD SPIKE %.4f - %.4f > %.4f
 [%s] %s:%d Leaving OWRD SPIKE due to recovery
 [%s] %s:%d Leaving OWRD SPIKE due to flatness
 [%s] %s:%d Leaving OWRD SPIKE due to timeout %d
 [%s] %s:%d Large Jump seen in sequence number %u startSeq=%u
 [%s] %s:%d Noted jump in AddLagToHistory %f
 [%s] %s:%d Could not create VTP socket for VCTransportStream (%08X) for sessionID %d
 [%s] %s:%d Created VCTransportStream object [%p] for sessionID %d, with vfd:%d, vfdCancel:%d
 [%s] %s:%d invalid packet
 [%s] %s:%d Failed to allocate media packet. (%X)
 [%s] %s:%d Failed to add media packet. (%X)
 [%s] %s:%d Invalid socket, return
 [%s] %s:%d +[%s %s]:%d Printing audio only table
 [%s] %s:%d -[(%s*)%p %s]:%d %@Printing audio only table
 [%s] %s:%d +[%s %s]:%d Printing audio video table
 [%s] %s:%d -[(%s*)%p %s]:%d %@Printing audio video table
 [%s] %s:%d +[%s %s]:%d Printing audio only table with redundancy
 [%s] %s:%d -[(%s*)%p %s]:%d %@Printing audio only table with redundancy
 [%s] %s:%d +[%s %s]:%d Printing audio video table with redundancy
 [%s] %s:%d -[(%s*)%p %s]:%d %@Printing audio video table with redundancy
 [%s] %s:%d +[%s %s]:%d audio only bitrate to stream IDs table %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@audio only bitrate to stream IDs table %@
 [%s] %s:%d +[%s %s]:%d audio video bitrate to stream IDs table %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@audio video bitrate to stream IDs table %@
 [%s] %s:%d +[%s %s]:%d Video only bitrate to stream IDs table %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Video only bitrate to stream IDs table %@
 [%s] %s:%d +[%s %s]:%d Priting Table ########### 
 [%s] %s:%d -[(%s*)%p %s]:%d %@Priting Table ########### 
 [%s] %s:%d +[%s %s]:%d Bandwidth %@, audio streams %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Bandwidth %@, audio streams %@
 [%s] %s:%d +[%s %s]:%d Bandwidth %@, video streams %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Bandwidth %@, video streams %@
 [%s] %s:%d Turning effects back on is not supported
 [%s] %s:%d Turning off effect: %@
 [%s] %s:%d Sending video frame to extension to process
 [%s] %s:%d Sending video frame to AVC to process
 [%s] %s:%d Sending video frame to client to be processed
 [%s] %s:%d Dropping video frame due to effects being disabled
 [%s] %s:%d Frames Sent: %d (%f FPS) Frames Received: %d (%f FPS) Frames Dropped: %d Frames Failed: %d
 [%s] %s:%d Cannot send frames to AVCEffects. Consecutive Dropped frames: %d
 [%s] %s:%d Have not received frames from AVCEffects. Sent Frames: %d Received Frames: %d
 [%s] %s:%d WSOLA is disabled, channelCount[%d] 
 [%s] %s:%d WSOLA is enabled, Sample Rate = %d 
 [%s] %s:%d Fraction of missing packets during 5 seconds = %f, missing = %d, total = %d, average = %f [max interarrival = %f, average jitter size = %f, average interarrival = %f]
 [%s] %s:%d Timestamp did not increment: %d
 [%s] %s:%d Extracted WSOLA tail, size=%u
 [%s] %s:%d Forcing WSOLA, time since silence: %f, Adjust = %f, time since low adjust: %f
 [%s] %s:%d WSOLA Skip silence
 [%s] %s:%d Please file a radar on AVConference Media | All. Average JB queue size is negative! Current size: %f, new size: %f, in_samples: %d, out_samples: %d, needed samples: %d, iteration: %d, playback mode: %d, silent: %d
 [%s] %s:%d JQ too high, discarding. CurrentJQSize:%f currentTime:%f lastSpkrCallback:%f
 [%s] %s:%d Please file a radar on AVConference Media | All. Average JB queue size is negative! Current size: %f, new size: %f, jitter samples: %f
 [%s] %s:%d NewJQSize:%f
 [%s] %s:%d nil decode for crossfade failed (%x). Previous payload=%d, payload=%d, history=%x lastSeq=%x seq=%d reset=%d
 [%s] %s:%d  Decode Buffer Overflow, adding %d = >
 [%s] %s:%d  clipped to %d
 [%s] %s:%d Missing a packet %f [expected seq = %x]
 [%s] %s:%d nil decode failed (%x). Previous payload=%d, history=%x, dtx=%d lastSeq=%x reset=%d output_frame_ts=%d
 [%s] %s:%d SoundDec_Decode failed (%x). Previous payload=%d, payload=%d, dtx=%d lastSeq=%x seq=%x reset=%d firstFrameDecoded=%d
 [%s] %s:%d Could not decode for WSOLA, budget left %lf
 [%s] %s:%d Could not perform WSOLA, budget left %lf
 [%s] %s:%d WSOLA WARP, scale = %f, in size = %u, out size = %u
 [%s] %s:%d Send callback is null
 [%s] %s:%d Failed to allocate packetThread struct
 [%s] %s:%d Failed to create dispatch_semaphore
 [%s] %s:%d Failed to allocate packetPool of %u packets
 [%s] %s:%d Failed to allocate buffers of %u
 [%s] %s:%d PacketThread failed to create packet thread %d
 [%s] %s:%d PacketThread_Create completed for %s
 [%s] %s:%d IOProc: PacketThread_Send failed to store a packet
 [%s] %s:%d PacketThread_Send called with too many bytes %d
 [%s] %s:%d PacketThread_Destroy complete.
 [%s] %s:%d SendPacketsProc starting
 [%s] %s:%d SendPacketsProc got lapped! sent %d stored %d, dropping packets.
 [%s] %s:%d SendPacketsProc failed to fetch a packet
 [%s] %s:%d SendPacketsProc ending. dispatch_semaphore_wait returned %ld
 [%s] %s:%d didSucceed[%d] error[%s]
 [%s] %s:%d VideoConferenceDefaults: %s:%.3f
 [%s] %s:%d : %@=%d
 [%s] %s:%d %@=%d
 [%s] %s:%d VideoConferenceDefaults: Forced screen capture settings: %dx%d@%dfps
 [%s] %s:%d VideoConferenceDefaults: %@=%d
 [%s] %s:%d VideoConferenceDefaults: Found ARCaptureEnabled YES. ARKit capture will be used
 [%s] %s:%d VideoConferenceDefaults: Found enableBitstreamCapturePref YES. Bistream capture will be used
 [%s] %s:%d VideoConferenceDefaults: Found enable2vuyCapture set to %d
 [%s] %s:%d VideoConferenceDefaults: Found enable2vuyCapture but the value[%d] is invalid (should be 1 or 2)
 [%s] %s:%d enableVPBLogging %s
 [%s] %s:%d VideoConferenceDefaults: Found enableRecvBitstreamDump YES. Enabled Received H.264 Bitstream Dumping.
 [%s] %s:%d VideoConferenceDefaults: Found enableTxSourceYuvDump set to %d
 [%s] %s:%d VideoConferenceDefaults: Found enableTxSourceYuvDump but the value[%d] is invalid (should be 1 or 2)
 [%s] %s:%d VideoConferenceDefaults: Found enableTxBitstreamDump YES. Enabled Transmitter H.264 Bitstream Dumping.
 [%s] %s:%d VideoConferenceDefaults: Extra payloads:%d
 [%s] %s:%d VideoConferenceDefaults: Encoding score:%d
 [%s] %s:%d VideoConferenceDefaults: Can decode HD:%s
 [%s] %s:%d VideoConferenceDefaults: Found disableVAD NO. Voice Activity Detection is enabled
 [%s] %s:%d VideoConferenceDefaults: Found bundleAudio. Bundling %d audio packets
 [%s] %s:%d VideoConferenceDefaults: Found bundleAudio but the value[%d] is invalid (should be 1-10)
 [%s] %s:%d +[%s %s]:%d allowAudioRecording: %d keyExists: %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@allowAudioRecording: %d keyExists: %d
 [%s] %s:%d VideoConferenceDefaults: Found %s:%d
 [%s] %s:%d VideoConferenceDefaults: Found forceAudioBitrate %d bps
 [%s] %s:%d VideoConferenceDefaults: Found forceAudioPacketsPerBundle %d x 20ms
 [%s] %s:%d VideoConferenceDefaults: Found forceHWAudioSampleRate %d samples per second
 [%s] %s:%d VideoConferenceDefaults: Found forceAudioPowerTimeInterval %ds
 [%s] %s:%d VideoConferenceDefaults: Found forceUseFloat YES.
 [%s] %s:%d Found channelCount[%d]
 [%s] %s:%d VideoConferenceDefaults: Found DisableAudioPowerSpectrumRegister:%s
 [%s] %s:%d VideoConferenceDefaults: Found disableRed:%s
 [%s] %s:%d +[%s %s]:%d Found %s: %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Found %s: %d
 [%s] %s:%d VideoConferenceDefaults: Found forceVideoStreamResolution %d
 [%s] %s:%d VideoConferenceDefaults: Found forceVideoStreamTxMaxBitrate %d
 [%s] %s:%d VideoConferenceDefaults: Found forceVideoStreamTxMinBitrate %d
 [%s] %s:%d VideoConferenceDefaults: Found forceVideoStreamFramerate %d
 [%s] %s:%d VideoConferenceDefaults: Found forceVideoStreamKeyFrameInterval %d
 [%s] %s:%d VideoConferenceDefaults: Found forceVideoStreamRxMaxBitrate %d
 [%s] %s:%d VideoConferenceDefaults: Found forceVideoStreamRxMinBitrate %d
 [%s] %s:%d VideoConferenceDefaults: Found videoStreamRateControlDumpEnabled=%d
 [%s] %s:%d VideoConferenceDefaults: Found videoStreamRateControlAlgorithm %d
 [%s] %s:%d VideoConferenceDefaults: Found enableMediaQueueDump = %d
 [%s] %s:%d VideoConferenceDefaults: Found enableTFRCDump = %d
 [%s] %s:%d VideoConferenceDefaults: Found enableTFRCLog = %d
 [%s] %s:%d VideoConferenceDefaults: Found forcedTxCap %d
 [%s] %s:%d VideoConferenceDefaults: Found forcedTxRate %d
 [%s] %s:%d VideoConferenceDefaults: Found %@=%d
 [%s] %s:%d VideoConferenceDefaults: Force 2G bitrate cap to %d Kbps.
 [%s] %s:%d VideoConferenceDefaults: Found forceIPv6 YES. Only allow IPv6 over P2P.
 [%s] %s:%d VideoConferenceDefaults: Found enableiRATSuggestion YES. force iRATSuggestion to be ON.
 [%s] %s:%d VideoConferenceDefaults: Found enableiRATSuggestion NO. force iRATSuggestion to be OFF.
 [%s] %s:%d VideoConferenceDefaults: Found shouldDisplayVideoInfoLayer YES. Show info layer.
 [%s] %s:%d VideoConferenceDefaults: %@=%u
 [%s] %s:%d Not enough buffer for media control info
 [%s] %s:%d Missing CVO info
 [%s] %s:%d Bad buffer length for FaceTime audio media control info
 [%s] %s:%d Bad version for FaceTime audio media control info
 [%s] %s:%d Bad data length for FaceTime audio media control info
 [%s] %s:%d Bad data buffer length for FaceTime audio media control info
 [%s] %s:%d Handle optional control info failed with error %08X for FaceTime audio
 [%s] %s:%d failed with error %08X
 [%s] %s:%d Missing feedback info
 [%s] %s:%d Missing media queue info
 [%s] %s:%d Bad buffer length for FaceTime video media control info
 [%s] %s:%d Bad version for FaceTime video media control info
 [%s] %s:%d Bad data length for FaceTime video media control info
 [%s] %s:%d FEC oversized
 [%s] %s:%d Bad data buffer length for FaceTime video media control info
 [%s] %s:%d Handle optional control info failed with error %08X for FaceTime video
 [%s] %s:%d Bad buffer length for Multiway audio media control info
 [%s] %s:%d Missing ROC info
 [%s] %s:%d Missing MKI info
VCCallSession [%s] %s:%d Failed to get image buffer
VCCallSession [%s] %s:%d remoteScreenAspectRatio %.0f:%.0f (%f), remoteScreenAspectRatio %.0f:%.0f (%f), encode %.0f:%.0f (%f) --> visibleAspectRatio %.0f:%.0f (%f)
 [%s] %s:%d +[%s %s]:%d Session change to muted[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Session change to muted[%d]
 [%s] %s:%d +[%s %s]:%d Session change to volume[%f]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Session change to volume[%f]
 [%s] %s:%d +[%s %s]:%d Session change to audio enabled[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Session change to audio enabled[%d]
 [%s] %s:%d +[%s %s]:%d Session change to video enabled[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Session change to video enabled[%d]
 [%s] %s:%d +[%s %s]:%d Session change to audio paused[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Session change to audio paused[%d]
 [%s] %s:%d +[%s %s]:%d Session change to video paused[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Session change to video paused[%d]
 [%s] %s:%d +[%s %s]:%d transportToken[%@]
 [%s] %s:%d -[(%s*)%p %s]:%d %@transportToken[%@]
 [%s] %s:%d +[%s %s]:%d Transport token is nil
 [%s] %s:%d -[(%s*)%p %s]:%d %@Transport token is nil
 [%s] %s:%d +[%s %s]:%d localParticipant [%p] has been created and  stateQueue [%p] and shared xpc connection [%p] have been set
 [%s] %s:%d -[(%s*)%p %s]:%d %@localParticipant [%p] has been created and  stateQueue [%p] and shared xpc connection [%p] have been set
 [%s] %s:%d +[%s %s]:%d failed transportToken[%@]
 [%s] %s:%d -[(%s*)%p %s]:%d %@failed transportToken[%@]
 [%s] %s:%d +[%s %s]:%d participants[%@]
 [%s] %s:%d -[(%s*)%p %s]:%d %@participants[%@]
 [%s] %s:%d +[%s %s]:%d participantIDs[%@]
 [%s] %s:%d -[(%s*)%p %s]:%d %@participantIDs[%@]
 [%s] %s:%d +[%s %s]:%d _activeConfigurationCount=%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@_activeConfigurationCount=%d
 [%s] %s:%d +[%s %s]:%d (%d) uuid=%@ videoQuality=%d visibilityIndex=%d prominenceIndex=%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@(%d) uuid=%@ videoQuality=%d visibilityIndex=%d prominenceIndex=%d
 [%s] %s:%d +[%s %s]:%d received callback for didStart
 [%s] %s:%d -[(%s*)%p %s]:%d received callback for didStart
 [%s] %s:%d +[%s %s]:%d received callback for didStop
 [%s] %s:%d -[(%s*)%p %s]:%d received callback for didStop
 [%s] %s:%d +[%s %s]:%d received callback for addParticipantDidSucceed %@, participantID %@
 [%s] %s:%d -[(%s*)%p %s]:%d received callback for addParticipantDidSucceed %@, participantID %@
 [%s] %s:%d ParticipantID is nil
 [%s] %s:%d Participant is nil
 [%s] %s:%d +[%s %s]:%d received callback for removeParticipantDidSucceed
 [%s] %s:%d -[(%s*)%p %s]:%d received callback for removeParticipantDidSucceed
 [%s] %s:%d +[%s %s]:%d received callback for didUpdateConfig
 [%s] %s:%d -[(%s*)%p %s]:%d received callback for didUpdateConfig
 [%s] %s:%d +[%s %s]:%d received callback for didDetectError:%@
 [%s] %s:%d -[(%s*)%p %s]:%d received callback for didDetectError:%@
 [%s] %s:%d +[%s %s]:%d AVCSession[%@] received callback for audio enabled[%d] did succeed[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d AVCSession[%@] received callback for audio enabled[%d] did succeed[%d]
 [%s] %s:%d +[%s %s]:%d AVCSession[%@] received callback for video enabled[%d] did succeed[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d AVCSession[%@] received callback for video enabled[%d] did succeed[%d]
 [%s] %s:%d +[%s %s]:%d AVCSession[%@] received callback for audio paused[%d] did succeed[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d AVCSession[%@] received callback for audio paused[%d] did succeed[%d]
 [%s] %s:%d +[%s %s]:%d AVCSession[%@] received callback for video paused[%d] did succeed[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d AVCSession[%@] received callback for video paused[%d] did succeed[%d]
AVCVideoStream [%s] %s:%d +[%s %s]:%d 
AVCVideoStream [%s] %s:%d -[(%s*)%p %s]:%d %@
AVCVideoStream [%s] %s:%d +[%s %s]:%d Invalid video configuration: error[%s]
AVCVideoStream [%s] %s:%d -[(%s*)%p %s]:%d %@Invalid video configuration: error[%s]
AVCVideoStream [%s] %s:%d AVCVideoStream start (not using XPC)
AVCVideoStream [%s] %s:%d AVCVideoStream[%p] %s error[%s]
AVCVideoStream [%s] %s:%d %s only supported in the daemon
AVCVideoStream [%s] %s:%d AVCVideoStream: mediaserverd died, notifying client
AVCVideoStream [%s] %s:%d AVCVideoStream: server died, but AVCVideoStream has already deallocated, NO-OP
AVCVideoStream [%s] %s:%d didStartConnectionBlock: error = %p, result = %s
AVCVideoStream [%s] %s:%d AVCVideoStream: didStartConnectionBlock: strongSelf == nil
AVCVideoStream [%s] %s:%d AVCVideoStream: didStartConnectionBlock strongSelf started(%d)
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didStart started[%d]
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didStop
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didPause [%d]
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didResume [%d]
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p RTP packet timeout
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p RTCP packet timeout
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p received RTCP packets
AVCVideoStream [%s] %s:%d %s: notified client %p didGetLastDecodedFrame
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of downlinkQualityDidChange [%s]
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of uplinkQualityDidChange [%s]
AVCVideoStream [%s] %s:%d AVCVideoStream: notified client %p of didUpdateVideoConfiguration [%d]
 [%s] %s:%d VCVideoRules: Failed to create rules array
 [%s] %s:%d VCVideoRules: Failed to create supported payload array
 [%s] %s:%d VCVideoRuleCollections: invalid bitrate rule
 [%s] %s:%d VCVideoRuleCollections: Returning filtered video rules %s
 [%s] %s:%d +[%s %s]:%d block is nil
 [%s] %s:%d -[(%s*)%p %s]:%d %@block is nil
 [%s] %s:%d +[%s %s]:%d delegate could not be loaded
 [%s] %s:%d -[(%s*)%p %s]:%d %@delegate could not be loaded
 [%s] %s:%d +[%s %s]:%d audioStreams[%@] videoStreams[%@]
 [%s] %s:%d -[(%s*)%p %s]:%d %@audioStreams[%@] videoStreams[%@]
 [%s] %s:%d +[%s %s]:%d Participant stop in progress
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant stop in progress
 [%s] %s:%d +[%s %s]:%d Participant already started
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant already started
 [%s] %s:%d +[%s %s]:%d Participant is enabling/disabling media
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant is enabling/disabling media
 [%s] %s:%d +[%s %s]:%d Participant start audio
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant start audio
 [%s] %s:%d +[%s %s]:%d Participant start video
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant start video
 [%s] %s:%d +[%s %s]:%d Participant already stopped
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant already stopped
 [%s] %s:%d +[%s %s]:%d Participant stop when start in progress
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant stop when start in progress
 [%s] %s:%d Participant stop when media state change in progress
 [%s] %s:%d +[%s %s]:%d stream:[%p] didStart:%d error:[%@] %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@stream:[%p] didStart:%d error:[%@] %@
 [%s] %s:%d +[%s %s]:%d Audio enabled succeeded:[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Audio enabled succeeded:[%d]
 [%s] %s:%d +[%s %s]:%d Video enabled succeeded:[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Video enabled succeeded:[%d]
 [%s] %s:%d +[%s %s]:%d stream:[%p] %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@stream:[%p] %@
 [%s] %s:%d +[%s %s]:%d Audio disabled succeeded
 [%s] %s:%d -[(%s*)%p %s]:%d %@Audio disabled succeeded
 [%s] %s:%d +[%s %s]:%d Video disabled succeeded
 [%s] %s:%d -[(%s*)%p %s]:%d %@Video disabled succeeded
 [%s] %s:%d +[%s %s]:%d stream:[%p] didResume:%d error:[%@] %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@stream:[%p] didResume:%d error:[%@] %@
 [%s] %s:%d +[%s %s]:%d Audio resume succeeded:[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Audio resume succeeded:[%d]
 [%s] %s:%d +[%s %s]:%d Video resume succeeded:[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Video resume succeeded:[%d]
 [%s] %s:%d +[%s %s]:%d stream:[%p] didPause:%d error:[%@] %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@stream:[%p] didPause:%d error:[%@] %@
 [%s] %s:%d +[%s %s]:%d Audio paused succeeded:[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Audio paused succeeded:[%d]
 [%s] %s:%d +[%s %s]:%d Video paused succeeded:[%d]
 [%s] %s:%d -[(%s*)%p %s]:%d %@Video paused succeeded:[%d]
 [%s] %s:%d +[%s %s]:%d runningAudioStreams[%@]
 [%s] %s:%d -[(%s*)%p %s]:%d %@runningAudioStreams[%@]
 [%s] %s:%d Participant audio already set to enabled[%d]
 [%s] %s:%d Participant start in progress
 [%s] %s:%d Participant stop in progress
 [%s] %s:%d Participant audio is currently enabling/disabling
 [%s] %s:%d Failed to set audio enabled[%d] due to invalid state %s
 [%s] %s:%d +[%s %s]:%d runningVideoStreams[%@]
 [%s] %s:%d -[(%s*)%p %s]:%d %@runningVideoStreams[%@]
 [%s] %s:%d Participant video already set to enabled[%d]
 [%s] %s:%d Participant video is currently enabling/disabling
 [%s] %s:%d Failed to set video enabled[%d] due to invalid state %s
 [%s] %s:%d Can't set pause when participant audio is not enabled
 [%s] %s:%d Participant audio already set to paused[%d]
 [%s] %s:%d Participant audio is currently enabling/disabling or pausing/resuming
 [%s] %s:%d Shouldn't come here when setting audio audio paused
 [%s] %s:%d Failed to set audio paused[%d] due to invalid state %s
 [%s] %s:%d Can't set pause when participant video is not enabled
 [%s] %s:%d Participant video already set to paused[%d]
 [%s] %s:%d Participant video is currently enabling/disabling or pausing/resuming
 [%s] %s:%d Shouldn't come here when setting video paused
 [%s] %s:%d Failed to set video paused[%d] due to invalid state %s
 [%s] %s:%d +[%s %s]:%d Tearing down participant
 [%s] %s:%d -[(%s*)%p %s]:%d %@Tearing down participant
 [%s] %s:%d (%p) starting audioIO=%p
 [%s] %s:%d +[%s %s]:%d Stopping audio streams %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Stopping audio streams %@
 [%s] %s:%d +[%s %s]:%d Stopping audioIO=%p
 [%s] %s:%d -[(%s*)%p %s]:%d %@Stopping audioIO=%p
 [%s] %s:%d +[%s %s]:%d Stopping video streams %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Stopping video streams %@
 [%s] %s:%d +[%s %s]:%d stream[%p] not found in startingAudioStreams:%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@stream[%p] not found in startingAudioStreams:%@
 [%s] %s:%d +[%s %s]:%d stream[%p] not found in startingVideoStreams:%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@stream[%p] not found in startingVideoStreams:%@
 [%s] %s:%d +[%s %s]:%d stream[%p] not found in stoppingAudioStreams:%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@stream[%p] not found in stoppingAudioStreams:%@
 [%s] %s:%d +[%s %s]:%d stream[%p] not found in stoppingVideoStreams:%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@stream[%p] not found in stoppingVideoStreams:%@
 [%s] %s:%d +[%s %s]:%d stream[%p] not found in resumingAudioStreams:%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@stream[%p] not found in resumingAudioStreams:%@
 [%s] %s:%d +[%s %s]:%d stream[%p] not found in resumingVideoStreams:%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@stream[%p] not found in resumingVideoStreams:%@
 [%s] %s:%d +[%s %s]:%d stream[%p] not found in pausingAudioStreams:%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@stream[%p] not found in pausingAudioStreams:%@
 [%s] %s:%d +[%s %s]:%d stream[%p] not found in pausingVideoStreams:%@
 [%s] %s:%d -[(%s*)%p %s]:%d %@stream[%p] not found in pausingVideoStreams:%@
 [%s] %s:%d +[%s %s]:%d Failed created audioIO=%p operatingMode:%d deviceRole:%d direction:%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed created audioIO=%p operatingMode:%d deviceRole:%d direction:%d
 [%s] %s:%d +[%s %s]:%d Failed to reconfigure: audioIO=%p operatingMode:%d deviceRole:%d direction:%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to reconfigure: audioIO=%p operatingMode:%d deviceRole:%d direction:%d
 [%s] %s:%d +[%s %s]:%d configured audioIO=%p operatingMode:%d deviceRole:%d direction:%d
 [%s] %s:%d -[(%s*)%p %s]:%d %@configured audioIO=%p operatingMode:%d deviceRole:%d direction:%d
 [%s] %s:%d +[%s %s]:%d Failed to create source buffer
 [%s] %s:%d -[(%s*)%p %s]:%d %@Failed to create source buffer
 [%s] %s:%d stop audio IO timed out
 [%s] %s:%d start audio IO timed out
 [%s] %s:%d Attempted reconfiguration during state transition (state=%d)
 [%s] %s:%d +[%s %s]:%d Error configuring audioIO
 [%s] %s:%d -[(%s*)%p %s]:%d %@Error configuring audioIO
 [%s] %s:%d Error configuring audio stream [%@]
 [%s] %s:%d Error configuring video stream [%@]
 [%s] %s:%d +[%s %s]:%d Unable to initialize participant. Destination=%s 
 [%s] %s:%d -[(%s*)%p %s]:%d %@Unable to initialize participant. Destination=%s 
 [%s] %s:%d +[%s %s]:%d Participant dealloc %@
 [%s] %s:%d -[(%s*)%p %s]:%d %@Participant dealloc %@
 [%s] %s:%d +[%s %s]:%d Exiting state participant %s. Entering state participant %s.
 [%s] %s:%d -[(%s*)%p %s]:%d %@Exiting state participant %s. Entering state participant %s.
 [%s] %s:%d +[%s %s]:%d Changing participant videoEnabled to %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Changing participant videoEnabled to %d
 [%s] %s:%d Set VCRateControl baseband congestion detector to all audio streams
 [%s] %s:%d Redundancy controllers are created
 [%s] %s:%d Stream did start %p
 [%s] %s:%d Stream did stop %p
 [%s] %s:%d Stream did pause %p
 [%s] %s:%d Stream did resume %p
 [%s] %s:%d requestKeyFrameGenerationWithStreamID %d
 [%s] %s:%d +[%s %s]:%d Resetting decryption status
 [%s] %s:%d -[(%s*)%p %s]:%d %@Resetting decryption status
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: AVCPacketRelayDriverThread: calloc(%d) failed
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: AVCPacketRelayDriverThread: CreateHandle failed (%d)
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: AVCPacketRelayDriverThread: AVCPacketRelayDriverProc start failed (%d)
 [%s] %s:%d AVCPacketRelayDriverThread: AVCPacketRelayDriverProc thread(%p) started...
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: %s: failed due to invalid handle.
 [%s] %s:%d AVCPacketRelayDriverThread: AVCPacketRelayDriverProc thread(%p) end...
 [%s] %s:%d AVCPacketRelayDriverThread: allocate new connection failed
 [%s] %s:%d AVCPacketRelayDriverThread: now driving file descriptor %d
 [%s] %s:%d AVCPacketRelayDriverThread: stop driving file descriptor %d
 [%s] %s:%d AVCPacketRelayDriverThread: didn't find file descriptor %d
 [%s] %s:%d /BuildRoot/Library/Caches/com.apple.xbs/Sources/AVConference_Sim/AVConference-1431.31/AVConference.subproj/Sources/AVCPacketRelayDriverThread.m:%d: AVCPacketRelayDriverProc failed due to invalid handle.
 [%s] %s:%d AVCPacketRelayDriverProc: select failed with errno %d
 [%s] %s:%d +[%s %s]:%d Unexpected codec type: %d
 [%s] %s:%d -[(%s*)%p %s]:%d %@Unexpected codec type: %d
 [%s] %s:%d Invalid parameters passed to parseMediaLineHeader
 [%s] %s:%d Corrupted media line header
 [%s] %s:%d Failed to match the media line type
 [%s] %s:%d iceNewNominationBlock didn't exist
 [%s] %s:%d iceRemoveIPPortBlock didn't exist
 [%s] %s:%d Failed to allocate the JitterBuffer memory
 [%s] %s:%d Failed to initialize the target estimator
 [%s] %s:%d Failed to allocate the JitterBuffer
 [%s] %s:%d Invalid JitterBuffer handle (nil)
 [%s] %s:%d Cleaning up JitterBuffer (0x%p)
 [%s] %s:%d [%p] sampleRate[%f] channelCount[%d] blockSize20ms[%d]
 [%s] %s:%d [%p] redAudioDelayInSamples:%d
 [%s] %s:%d [%p] state Reset dropping packet
 [%s] %s:%d [%p] Setting state Reset, jqRequested[%d] packetNewStream[%d]
 [%s] %s:%d [%p] JBState NEWSTREAM -> SETTLE
 [%s] %s:%d [%p] JBState[%d] payloadType[%d] bytes[%d] shouldEnqueue[%d] 
 [%s] %s:%d [%p] Playback get samples
 [%s] %s:%d [%p] JBState[%d] sampleCount[%d] timestamp[%d] isSilence[%d]
 [%s] %s:%d [%p] AWD Metrics: underflowRate[%f] frameErasureRate[%f] totalQueueSizeSamples[%d]
 [%s] %s:%d [%p] WRM Metrics: playbackCount[%d] playbackCountSpeech[%d] erasureCount[%d] erasureSilence[%d] nominalJitterBufferDelay[%llu] targetJitterQueueSize(Audio)[%llu]
 [%s] %s:%d [%p] VRDB Playback Metrics: avgLossRate[%f] lastAvgMissPercent[%f] averageJitter[%f] maxJitterForWindow[%f]
 [%s] %s:%d [%p] VRDB RED Playback Metrics: totalFrameErasureRate[%f] redErasureCompensationRate[%f] redAudioFramesPlayed[%d] redAudioBytesPlayed[%d] totalFramesPlayed[%d]
 [%s] %s:%d jitterBufferMode[%d]
 [%s] %s:%d isCellular[%d] isLTE[%d]
 [%s] %s:%d [%p] Dequeue packet, is audio packet null:%d, state %d
 [%s] %s:%d [%p] JBState[%d] packetDequeue[%d]
 [%s] %s:%d Please file a radar on AVConference Media | All. Average JB queue size is negative! Current size: %f, new size: %f, jitter samples: %d, total samples: %f, adaptation rate: %f, adaptation frames: %f
 [%s] %s:%d SoundDec_Decode failed (%x). Previous payload=%d, payload=%d, dtx=%d lastSeq=%x seq=%x firstFrameDecoded=%d samplesCount[%d] bytesOuts[%d]
AVCAudioClient [%s] %s:%d Not supported
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
identityF
deflate
gzip
