.AUUUUUU
AVTimer
AVPlaybackControlsViewController
AVLogging
AVNowPlayingInfoController
AVAdditions
AVWatchPlaybackControlsViewController
PUICSliderDelegate
NSObject
AVKeyValueObservationController
AVKeyValueChange
AVKeyValueObservationControllerProxyObserver
AVDoneButton
AVButton
AVRemoteCommandController
AVChapter
NSCopying
AVPlayerControllerTimeResolver
NSCoding
TimeObserverAdditions
AVPlaybackProgressIndicator
AVUnsupportedContentIndicatorView
AVPlayerViewController
AVPlaybackControlsViewControllerVisibility
AVPlaybackControlsViewControllerActions
AVPlayerLayerView
AVValueTiming
NSMutableCopying
AVMutableValueTiming
AVConcreteMutableValueTiming
AVConcreteValueTiming
AVValueTimingCreation
AVExtendedValueTiming
AVExtendedMutableValueTiming
AVVolumeSlider
AVAudioRecorderViewController
AVWaveformViewDataSource
AVAudioRecorderDelegate
AVAudioPlayerDelegate
_AVBacklightAssertion
AVTimeLabel
AVMediaSelection
AVPlayerController
_AVBundle
AVLabel
AVPlayPauseButton
AVWaveformView
AVPlayerControllerExternalPlaybackSupportInternal
interval
Td,R,V_interval
%@ is not a valid initializer. You must call -[%@ initWithTimeInterval:queue:block:repeats:].
com.apple.avkit.AVTimer.timer %p
com.apple.avkit.AVTimer.manage %p
playerController
T@"AVPlayerController",&,N
playerViewController
T@"AVPlayerViewController",W,N,V_playerViewController
showsDoneButton
TB,N,V_showsDoneButton
playing
TB,N,GisPlaying,V_playing
playPauseButtonEnabled
TB,N,GisPlayPauseButtonEnabled,V_playPauseButtonEnabled
showsStreamingControls
TB,N,V_showsStreamingControls
showsLiveStreamScrubber
TB,N,V_showsLiveStreamScrubber
showsScaleButton
TB,N,V_showsScaleButton
scaleButtonType
Ti,N,V_scaleButtonType
showsLoadingIndicator
TB,N,V_showsLoadingIndicator
showsMediaSelectionButton
TB,N,V_showsMediaSelectionButton
showsExitFullScreenButton
TB,N,V_showsExitFullScreenButton
showsPictureInPictureButton
TB,N,V_showsPictureInPictureButton
pictureInPictureButtonEnabled
TB,N,GisPictureInPictureButtonEnabled,V_pictureInPictureButtonEnabled
showsVolumeSlider
TB,N,V_showsVolumeSlider
metadata
T@"NSDictionary",&,N,V_metadata
playerController.volume
PLAYBACK_CONTROLS_VIEW_CONTROLLER_LIVE_LABEL_TEXT
PlayerController has media selection options changed: %d
PlayerController has seekable live streaming content changed: %d
PlayerController has live streaming content changed: %d
contentDuration
playerController.metadata
playerController.hasMediaSelectionOptions
playerController.hasSeekableLiveStreamingContent
playerController.hasLiveStreamingContent
playerController.canScanForward
playerController.canTogglePlayback
playerController.canScanBackward
playerController.playing
playerController.contentDurationWithinEndTimes
playerController.canSeek
categories
T@"NSMutableDictionary",&,N,V_categories
reusableLogQueue
T@"NSMutableArray",&,N,V_reusableLogQueue
loggingQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_loggingQueue
--- %@ ---
AVKit
AVKit-%@
com.apple.avkit
com.apple.avkit.loggingQueue
AVLoggingLevel
AVUserLog
%@ (%p) %@
hasContent
audioOnlyContent
TB,N,GisAudioOnlyContent
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
playerController.atMaxTime
playerController.atMinTime
V:[volumeSlider]-(1)-|
H:|-(1)-[volumeSlider]-(1)-|
volumeSlider
H:|-(4)-[metadataLabel]-(4)-|
metadataLabel
V:|-(margin)-[playbackProgressView]
margin
H:|-(1)-[playbackProgressView]-(1)-|
playbackProgressView
H:[remainingTimeLabel]-(4)-|
remainingTimeLabel
H:|-(4)-[doneButton]
doneButton
V:[vignetteLowerGradientView]|
H:|[vignetteLowerGradientView]|
vignetteLowerGradientView
V:|[vignetteUpperGradientView]
H:|[vignetteUpperGradientView]|
vignetteUpperGradientView
SeekForwardButton
SeekBackwardButton
PLAYBACK_CONTROLS_VIEW_CONTROLLER_DONE_BUTTON_TITLE
VignetteLowerGradient
VignetteUpperGradient
%@: %@
artist
AVKitErrorDomain
AVKIT_ERROR_RECORDING_FAILED
AVKIT_ERROR_UNKNOWN
v20@?0@"NSDictionary"4@8@"NSString"12@"NSString"16
value
T@,R,N
oldValue
initialValue
TB,R,N,GisInitialValue
keyPath
T@"NSString",R,N,V_keyPath
observationToken
T@,R,N,V_observationToken
token
T@"NSString",R,N,V_token
options
TI,R,N,V_options
observedObject
observer
T@,R,W,N,V_observer
keyPaths
T@"NSSet",R,N,V_keyPaths
changesBlock
T@?,R,N,V_changesBlock
com.apple.avkit.AVKitKVOProxyObserver
You must call -[AVKeyValueObservationController stopAllObservation] before destroying it, perhaps in its owner's dealloc. %@
com.apple.avkit.AVKeyValueObservationController
AV_compact
TB,R,N,GAV_isCompact
AVRemoteCommandControllerDidReceiveStopCommandEventNotification
canPause
canPlay
canTogglePlayback
canSeekChapterForward
canSeekChapterBackward
canSeek
canScanForward
canScanBackward
startTime
Td,R,V_startTime
duration
Td,R,V_duration
number
TI,R,V_number
title
T@"NSString",R,C,V_title
image
T@"UIImage",R,V_image
com.apple.AVKit.ChapterImageQueue
minTime
Td,V_minTime
maxTime
Td,V_maxTime
T@"<AVTimeControlling>",&
resolution
currentTime
AVResolution
AVInterval
AVPlayerController
playerController.minTime
playerController.minTiming
playerController.maxTime
playerController.maxTiming
playerController.timing
targetTime
targetTimeWithinEndTimes
remainingTargetTimeWithinEndTimes
Td,R
currentTimeWithinEndTimes
remainingTime
remainingTimeWithinEndTimes
seekableTimeRangeDuration
thirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
TB,R,GisThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
currentTimeAtEndOfSeekableTimeRanges
TB,R,GisCurrentTimeAtEndOfSeekableTimeRanges
playerController.seekableTimeRanges
playerController.contentDuration
playerController.seekToTime
playerController.seeking
playbackProgress
Td,N
V:|[progressView]|
H:|[progressView]
progressView
V:|[trackView]|
H:|[trackView]|
trackView
V:|-(>=10)-[imageView]-(>=10)-|
H:|-(>=10)-[imageView]-(>=10)-|
imageView
UnsupportedContentIndicator
readyForDisplay
TB,R,N,GisReadyForDisplay
delegate
T@"<AVPlayerViewControllerDelegate>",W,N
player
T@"AVPlayer",&,N
videoGravity
T@"NSString",C,N
_showsPlaybackControlsView
_playerLayerView
playerController.hasEnabledAudio
playerController.hasEnabledVideo
playerController.status
V:|[playbackControlsView]|
H:|[playbackControlsView]|
playbackControlsView
V:|[playerLayerView]|
H:|[playerLayerView]|
playerLayerView
V:|[unsupportedContentIndicatorView]|
H:|[unsupportedContentIndicatorView]|
unsupportedContentIndicatorView
%@ only supports AVPlayer instances that have been initialized with the main queue as the dispatch queue for serializing key-value observations.
AVVideoGravity
AVPlayerShouldAutoplay
AVPlayerAssetFilename
_playerLayerView.readyForDisplay
_playerLayerView.videoGravity
playerController.player
Ti,N
videoRect
T{CGRect={CGPoint=ff}{CGSize=ff}},R,N
videoScaled
TB,N,GisVideoScaled
layer.videoRect
layer.readyForDisplay
layer.videoGravity
anchorValue
Td,R,N
anchorTimeStamp
rate
*** -%@ only defined for abstract class.  Define %c[%@ %@]!
*** -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
time stamp
Td,D,N
currentValue
*** initialization method -%@ cannot be sent to an abstract object of class %@: Create a concrete instance!
%@ is not a valid initializer. You must call -[%@ initWithFrame:].
VolumeDown
VolumeUp
state
outputURL
T@"NSURL",R,N,V_outputURL
actionTitle
T@"NSString",R,C,N,V_actionTitle
autorecord
TB,R,N,V_autorecord
alwaysShowActionTitle
TB,R,N,V_alwaysShowActionTitle
maximumDuration
Td,R,N,V_maximumDuration
settings
T@"NSDictionary",C,N,V_settings
T@"<AVAudioRecorderViewControllerDelegate>",W,N,V_delegate
StopRecording
EndRecording
StartRecording
PauseAuditionButton
PlayAuditionButton
StopRecordingButton
StartRecordingButton
Audio Recorder View Controller Cancel Button Title
AUDIO_RECORDER_VIEW_CONTROLLER_CANCEL_BUTTON_TITLE
Audio Recorder View Controller Save Button Title
AUDIO_RECORDER_VIEW_CONTROLLER_SAVE_BUTTON_TITLE
%@ does not support unarchiving from a nib.
%@ is not a valid initializer. You must call -[%@ initWithOutputURL:settings:maximumRecordingDuration:finishString:].
AVKit is playing audiovisual content. That prevents backlight dim and screen off.
AC3Only
TB,R,GisAC3Only
main
TB,R,GisMain
TB,R,GisSDH
TB,R,GisCC
easyReader
TB,R,GisEasyReader
auxiliary
TB,R,GisAuxiliary
Selected option: %@ for mediaCharacteristic: %@
%@ mediaOption: %@ mediaCharacteristic: %@
%@ filtereLegibleList: %@
i12@?0@4@8
%@ legibleOptions: %@
%@ filteredOptions: %@
%@ audibleOptions: %@
player.currentItem.currentMediaSelection
player.currentItem.asset
player.appliesMediaSelectionCriteriaAutomatically
%@ AudioMediaSelectionOptions: %@
legibleMediaSelectionOptions
audioMediaSelectionOptions
hasLegibleMediaSelectionOptions
hasAudioMediaSelectionOptions
TB,N,GisPlaying
PlayButton
PauseButton
localizedDisplayName
T@"NSString",R,N
shortLocalizedDisplayName
MEDIA_SELECTION_OPTION_AUTO_TITLE
MEDIA_SELECTION_OPTION_OFF_TITLE
Td,N,V_currentTime
recording
TB,N,GisRecording,V_recording
dataSource
T@"<AVWaveformViewDataSource>",W,N,V_dataSource
AVPlayerControllerCurrentTimeJumpedNotification
AVPlayerControllerPlaybackDidEndNotification
AVPlayerControllerDidSeekChapterNotification
AVPlayerControllerDidSeekChapterChapterKey
atMaxTime
TB,N,GisAtMaxTime,V_atMaxTime
atMinTime
TB,N,GisAtMinTime,V_atMinTime
scrubbing
TB,N,GisScrubbing,V_scrubbing
T@"AVPlayer",&,N,V_player
timing
T@"AVValueTiming",&,N,V_timing
minTiming
T@"AVValueTiming",&,N,V_minTiming
maxTiming
T@"AVValueTiming",&,N,V_maxTiming
seekingInternal
TB,GisSeekingInternal,V_seekingInternal
seeking
TB,N,GisSeeking,V_seeking
seekToTimeInternal
T{?=qiIq},V_seekToTimeInternal
seekToTime
Td,N,V_seekToTime
contentChapters
T@"NSArray",&,N,V_contentChapters
composable
TB,N,GisComposable,V_composable
hasProtectedContent
TB,N,V_hasProtectedContent
availableMetadataFormats
T@"NSArray",&,N,V_availableMetadataFormats
compatibleWithAirPlayVideo
TB,N,GisCompatibleWithAirPlayVideo,V_compatibleWithAirPlayVideo
rateBeforeScrubBegan
Td,N,V_rateBeforeScrubBegan
preventingIdleSystemSleep
TB,N,GisPreventingIdleSystemSleep,V_preventingIdleSystemSleep
preventingIdleDisplaySleep
TB,N,GisPreventingIdleDisplaySleep,V_preventingIdleDisplaySleep
disablingAutomaticTermination
TB,N,GisDisablingAutomaticTermination,V_disablingAutomaticTermination
cachedContentDuration
T{?=qiIq},N,V_cachedContentDuration
forwardPlaybackEndTime
T{?=qiIq},N,V_forwardPlaybackEndTime
reversePlaybackEndTime
T{?=qiIq},N,V_reversePlaybackEndTime
deviceBatteryChargingOrFull
TB,N,GisDeviceBatteryChargingOrFull,V_deviceBatteryChargingOrFull
shouldPreventIdleDisplaySleep
TB,R,N
seekTimer
T@"NSObject<OS_dispatch_queue>",R,N,V_seekTimer
status
Ti,R,N
error
T@"NSError",R,N
v4@?0
Calls to -[AVPlayerController stopUsingNetworkResourcesForLiveStreamingWhilePaused] must be counterbalanced with calls to -[AVPlayerController startUsingNetworkResourcesForLiveStreamingWhilePaused].
%@ %@
HDMIOutput
Speaker
%@ maxTimingNeedsUpdate: %d, new maxTiming with maxTime: %f old maxTime: %f, delta: %f
%@ minTimingNeedsUpdate: %d, new minTiming with minTime: %f, rate: %f, old minTime: %f, delta: %f
%@ segmentDuration: %f
Modifying seekableTimeRange by: %f
%@ skipInterval: %f
%@ sampleBasedSeekTarget: %f
%@ stepByCount: %ld
v8@?0B4
Seek completed: %@
%@ time: %f toleranceBefore: %f toleranceAfter: %f
ScrubbingEnded
ScrubbingStarted
com.apple.motion.notserializable
%@ volume: %f
%@ playing: %d
Can play immediately: %d
Retrying play immediately.
v12@?0d4
Could not play immediatley, setting a play immediately retry block.
Calling playImmediatelyAtRate: %f
Setting prevent idle display sleep to NO
Setting prevent idle display sleep to YES
Rate changed to: %f
isPlaybackBufferEmpty: %d
Playback likely to keep up changed to: %@
Time control status = %ld
liveStreamEventModePossible: %d
SeekableTimeRanges changed {%f, %f} -> {%f, %f}.
Duration changed: %f
availableChapterLocales
i12@?0@"AVChapter"4@"AVChapter"8
commonMetadata
New asset: %@
New playerItem: %@
PlayerItemDidChange
%@ queuePlayer: %d
audioFormats
hasLiveStreamingContent
player.rate
player.externalPlaybackActive
player.currentItem.playbackLikelyToKeepUp
player.currentItem.playbackBufferEmpty
player.currentItem.loadedTimeRanges
player.currentItem.reversePlaybackEndTime
player.currentItem.forwardPlaybackEndTime
player.currentItem.seekableTimeRanges
player.timeControlStatus
player.currentItem.duration
player.currentItem
com.apple.avkit.seekQueue
v8@?0@"NSNotification"4
B4@?0
AVAudioSessionInterruptionTypeEnded: %@
AVAudioSessionInterruptionTypeBegan: %@
v28@?0{?=qiIq}4
%@ player: %@
player.currentItem.liveUpdateInterval
playingOnExternalScreen
hasEnabledVideo
player.externalPlaybackType
externalPlaybackActive
player.allowsExternalPlayback
seekableTimeRanges
player.currentItem.canPlayFastReverse
player.currentItem.canPlayFastForward
completelySeekable
player.currentItem.seekableTimeRangesLastModifiedTime
player.currentItem.status
player.currentItem.hasEnabledVideo
player.currentItem.hasVideo
player.currentItem.hasEnabledAudio
hasSeekableLiveStreamingContent
player.currentItem.presentationSize
player.muted
player.currentItem.error
playingOnSecondScreen
TB,N,GisPlayingOnSecondScreen
_queue
_timer
_invalidated
_interval
initWithTimeInterval:queue:block:repeats:
init
dealloc
invalidate
.cxx_destruct
interval
raise:format:
UTF8String
stringWithFormat:
_playerController
_intervalTimeResolver
_resolutionTimeResolver
_elapsedTimeFormatter
_remainingTimeFormatter
_AVSystemControllerCurrentRouteHasVolumeControlDidChangeObserver
_viewAppeared
_showsDoneButton
_playing
_playPauseButtonEnabled
_showsStreamingControls
_showsLiveStreamScrubber
_showsScaleButton
_showsLoadingIndicator
_showsMediaSelectionButton
_showsExitFullScreenButton
_showsPictureInPictureButton
_pictureInPictureButtonEnabled
_showsVolumeSlider
_playerViewController
_scaleButtonType
_metadata
initWithNibName:bundle:
playerController
setPlayerController:
viewDidLoad
viewDidAppear:
viewDidDisappear:
observeValueForKeyPath:ofObject:change:context:
_updateElapsedTimeLabel
_updateRemainingTimeLabel
_updatePlaybackProgress
_updateVolumeSliderVisibility
_userInteractionObservationControlTouchDown:
_userInteractionObservationControlTouchUp:
updatePlaybackControlsEnabledStates
updateElapsedTimeLabel:
updateRemainingTimeLabel:
updatePlaybackProgress:
updateVolumeSliderValue:
addControlForUserInteractionObservation:
removeControlForUserInteractionObservation:
doneButtonTapped:
scaleButtonTapped:
volumeSliderValueChanged:
skipBackwardThirtySeconds:
seekChapterBackward:
beginScanningBackward:
endScanningBackward:
togglePlayback:
beginScanningForward:
endScanningForward:
seekChapterForward:
gotoEndOfSeekableRanges:
mediaSelectionButtonTapped:
fullScreenButtonTapped:
pictureInPictureButtonTapped:
playerViewController
setPlayerViewController:
showsDoneButton
setShowsDoneButton:
isPlaying
setPlaying:
isPlayPauseButtonEnabled
setPlayPauseButtonEnabled:
showsStreamingControls
setShowsStreamingControls:
showsLiveStreamScrubber
setShowsLiveStreamScrubber:
showsScaleButton
setShowsScaleButton:
scaleButtonType
setScaleButtonType:
showsLoadingIndicator
setShowsLoadingIndicator:
showsMediaSelectionButton
setShowsMediaSelectionButton:
showsExitFullScreenButton
setShowsExitFullScreenButton:
showsPictureInPictureButton
setShowsPictureInPictureButton:
isPictureInPictureButtonEnabled
setPictureInPictureButtonEnabled:
showsVolumeSlider
setShowsVolumeSlider:
metadata
setMetadata:
addObserver:forKeyPath:options:context:
removeObserver:forKeyPath:context:
isViewLoaded
removeTarget:action:forControlEvents:
addTarget:action:forControlEvents:
stringFromSeconds:
setFormatTemplate:
setStyle:
alloc
count
addObserverForName:object:queue:usingBlock:
mainQueue
sharedAVSystemController
defaultCenter
removeObserver:
_log
_loggingLevel
_categories
_reusableLogQueue
_loggingQueue
logString:type:logLevel:
actuallyLogString:type:logLevel:
pushCategory:
popCategory:
categories
setCategories:
reusableLogQueue
setReusableLogQueue:
loggingQueue
setLoggingQueue:
lastObject
removeLastObject
addObject:
setObject:forKeyedSubscript:
objectForKeyedSubscript:
integerValue
containsObject:
allKeys
environment
processInfo
sharedLogging
substringFromIndex:
initWithFormat:arguments:
rangeOfString:
substringToIndex:
_playerControllerCurrentTimeJumpedObserver
_nowPlayingInfoNeedsUpdate
_setNowPlayingInfoNeedsUpdate
_updateNowPlayingInfoIfNeeded
_updateNowPlayingInfo
setNowPlayingInfo:
numberWithDouble:
initWithImage:
dictionary
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
object
imageNamed:inBundle:shouldCache:useDeviceVariant:
AV_imageNamed:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
setPriority:
AV_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:
setActive:
AV_constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:priority:active:
layer
setMasksToBounds:
setShadowPathIsBounds:
setShadowRadius:
setCornerRadius:
AV_setBackgroundBackgroundColor:
AV_setCornerRadius:
CGColor
setShadowColor:
setShadowOffset:
setShadowOpacity:
_metadataLabelText
_audioOnlyContent
_remainingTimeLabelText
_playbackProgress
_volumeSliderValue
_doneButton
_remainingTimeLabel
_playbackProgressIndicator
_seekBackwardButton
_playPauseButton
_seekForwardButton
_metadataLabel
_volumeSlider
_playPauseButtonAudioOnlyContentLayoutConstraint
slider:didTapTouchTarget:
sliderDidBeginCrownInteraction:
sliderDidEndCrownInteraction:
sliderDidRequestFocus:
debugDescription
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
isAudioOnlyContent
setAudioOnlyContent:
loadView
prefersStatusBarHidden
viewWillAppear:
viewWillDisappear:
willMoveToParentViewController:
didMoveToParentViewController:
_seekBackwardButtonTapped:
_seekForwardButtonTapped:
_volumeSliderValueChanged:
setEnabled:
presentingViewController
resignFirstResponder
becomeFirstResponder
numberWithFloat:
currentDevice
defaultPUICStatusBarFontBaseLine
dictionaryWithObjects:forKeys:count:
activateConstraints:
constraintsWithVisualFormat:options:metrics:views:
setValue:
setTextAlignment:
setTintColor:
clearColor
setImage:forState:
setHidden:
setText:
setTitle:forState:
addSubview:
setTranslatesAutoresizingMaskIntoConstraints:
setImage:
setView:
setValue:animated:
transitionWithView:duration:options:animations:completion:
view
setEnabled:animated:
errorWithDomain:code:userInfo:
_controllerIvarAccessQueue
_proxyObserversByTokens
_owner
initWithOwner:
startObserving:keyPaths:includeInitialValue:observationHandler:
startObserving:keyPath:includeInitialValue:observationHandler:
stopObserving:
stopAllObservation
_stopAllObservation
stopObserving
countByEnumeratingWithState:objects:count:
removeAllObjects
allValues
removeObjectForKey:
arrayWithObjects:count:
token
startObserving
initWithObservedObject:observer:keyPaths:retainingObservedObject:options:changesBlock:
isInitialValue
value
oldValue
initWithChanges:keyPath:observationToken:
_changes
_keyPath
_observationToken
objectOrNilFor:
object:as:
keyPath
observationToken
null
_retainedObservedObject
_unsafeUnretainedObservedObject
_context
_proxyObserverIvarAccessQueue
_token
_options
_observer
_keyPaths
_changesBlock
observedObject
_handleValueChangeForKeyPath:ofObject:change:context:
options
observer
keyPaths
changesBlock
isMainThread
globallyUniqueString
setWithArray:
copy
initWithFrame:
_titleBaselineOffsetFromBoundsTop
_firstLineBaselineOffsetFromBoundsTop
frame
titleLabel
setFont:
defaultPUICStatusBarFont
systemGrayTextColor
setTitleColor:forState:
whiteColor
colorWithRed:green:blue:alpha:
systemGrayColor
AV_indicatorBackgroundColor
AV_indicatorForegroundColor
buttonWithType:
setHighlighted:
alignmentRectInsets
animateWithDuration:animations:
setTransform:
setAlpha:
isHighlighted
setAdjustsImageWhenHighlighted:
setAdjustsImageWhenDisabled:
puic_deviceVariant
AV_isCompact
_handleRemoteCommandEvent:
_updateRegisteredRemoteCommandEnabledStates
changePlaybackPositionCommand
changePlaybackRateCommand
seekBackwardCommand
seekForwardCommand
skipBackwardCommand
skipForwardCommand
previousTrackCommand
nextTrackCommand
togglePlayPauseCommand
stopCommand
playCommand
pauseCommand
sharedCommandCenter
positionTime
playbackRate
type
postNotificationName:object:
command
removeTarget:action:
addTarget:action:
_image
_imageBlock
_number
_title
_startTime
_duration
copyWithZone:
initWithStartTime:duration:number:title:imageFaultBlock:
startTime
duration
number
title
image
isEqualToString:
didChangeValueForKey:
initWithCGImage:
willChangeValueForKey:
initialize
playbackChapterWithStartTime:duration:number:title:imageFaultBlock:
chapterAtTime:inChapters:
objectAtIndexedSubscript:
_resolution
_currentTime
_minTime
_maxTime
encodeWithCoder:
initWithCoder:
setInterval:
resolution
setResolution:
currentTime
setCurrentTime:
minTime
setMinTime:
maxTime
setMaxTime:
seekableTimeRangeDuration
encodeDouble:forKey:
encodeObject:forKey:
decodeDoubleForKey:
decodeObjectForKey:
automaticallyNotifiesObserversOfCurrentTime
CMTimeRangeValue
targetTimeWithinEndTimes
setTargetTimeWithinEndTimes:
remainingTargetTimeWithinEndTimes
currentTimeWithinEndTimes
setCurrentTimeWithinEndTimes:
remainingTime
remainingTimeWithinEndTimes
isThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
isCurrentTimeAtEndOfSeekableTimeRanges
keyPathsForValuesAffectingTargetTime
keyPathsForValuesAffectingTargetTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTargetTimeWithinEndTimes
keyPathsForValuesAffectingCurrentTimeWithinEndTimes
keyPathsForValuesAffectingRemainingTime
keyPathsForValuesAffectingRemainingTimeWithinEndTimes
keyPathForValuesAffectingSeekableTimeRangeDuration
keyPathsForValuesAffectingThirtySecondsBeforeCurrentTimeWithinSeekableTimeRanges
keyPathsForValuesAffectingCurrentTimeAtEndOfSeekableTimeRanges
setWithObjects:
targetTime
setTargetTime:
URLForResource:withExtension:
stringByDeletingPathExtension
checkResourceIsReachableAndReturnError:
imageForResource:size:
URLForMovieResource:
dataWithContentsOfURL:
imageWithData:
pathExtension
length
_progressViewWidthLayoutConstraint
playbackProgress
setPlaybackProgress:
setPlaybackProgress:animated:
setBounds:
updateConstraints
intrinsicContentSize
_updateProgressViewWidthLayoutConstraintWithPlaybackProgress:animated:
setConstant:
constant
bounds
setNeedsUpdateConstraints
setBackgroundColor:
colorWithWhite:alpha:
_imageView
addConstraints:
addConstraint:
_flatImageWithColor:
imageNamed:inBundle:
setContentMode:
_playerShouldAutoplay
_videoGravity
_nowPlayingInfoController
_remoteCommandController
_unsupportedContentIndicatorView
_playerLayerView
_playbackControlsViewController
_playbackControlsViewVisibilityNeedsUpdate
_playbackControlsViewVisibilityCounter
_playbackControlsViewVisibilityTimer
_isShowingPlaybackControlsViewForUserInteraction
_isShowingPlaybackControlsViewAfterUserInteraction
_isShowingPlaybackControlsViewForUnsupportedContent
_isShowingPlaybackControlsViewForAudioOnlyContent
_showsPlaybackControlsView
_delegate
_delegateRespondsTo
player
setPlayer:
videoGravity
setVideoGravity:
isReadyForDisplay
delegate
setDelegate:
childViewControllerForStatusBarHidden
canBecomeFirstResponder
_isUnsupportedContent
_updateUnsupportedContentIndicatorView
_isAudioOnlyContent
_updatePlaybackControlsViewVisibilityForUnsupportedContent
_updatePlaybackControlsViewVisibilityForAudioOnlyContent
_handleDoubleTapGesture:
_handleSingleTapGesture:
_showPlaybackControlsViewIfNeeded
_hidePlaybackControlsViewIfPossible
_hidePlaybackControlsViewIfPossibleAfterDelayIfPlaying
_hidePlaybackControlsViewIfPossibleAfterDelayIfPlayingWithDelay:
_showPlaybackControlsViewIfNeededAndHideIfPossibleAfterDelayIfPlaying
_showPlaybackControlsViewIfNeededAndHideIfPossibleAfterDelayIfPlayingWithDelay:
_firePlaybackControlsViewVisibilityTimer:
_hidePlaybackControlsViewIfPossibleUntilFurtherUserInteraction
_setPlaybackControlsViewVisibilityNeedsUpdate
_updatePlaybackControlsViewVisibilityIfNeeded
_showOrHidePlaybackControlsView
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
boolValue
setNeedsStatusBarAppearanceUpdate
requireGestureRecognizerToFail:
addGestureRecognizer:
setNumberOfTapsRequired:
initWithTarget:action:
addChildViewController:
setClipsToBounds:
blackColor
playerViewControllerShouldHandleDoneButtonTap:
dispatchQueue
encodeInteger:forKey:
decodeIntegerForKey:
decodeBoolForKey:
playerWithURL:
mainBundle
containsValueForKey:
keyPathsForValuesAffectingPlayer
keyPathsForValuesAffectingVideoGravity
keyPathsForValuesAffectingReadyForDisplay
setWithObject:
showPlaybackControlsViewForTouchDown
hidePlaybackControlsViewForTouchUp
showPlaybackControlsViewForVolumeChange
dismissViewControllerAnimated:completion:
videoRect
isVideoScaled
setVideoScaled:
layerClass
keyPathsForValuesAffectingVideoRect
keyPathsForValuesAffectingVideoScaled
mutableCopyWithZone:
classForCoder
_timing
anchorValue
anchorTimeStamp
rate
initWithAnchorValue:anchorTimeStamp:rate:
initWithValueTiming:
allocWithZone:
setAnchorValue:
setAnchorTimeStamp:
setRate:
_value
_timeStamp
_rate
isEqualToValueTiming:
valueTimingWithAnchorValue:anchorTimeStamp:rate:
systemUptime
currentTimeStamp
valueForTimeStamp:
currentValue
timeStampForValue:
setValueTiming:
initWithSliderStyle:
gestureRecognizerShouldBegin:
systemOrangeColor
setShouldFadeAccessoryImages:
setNumberOfSteps:
setMinimumValueImage:
setMaximumValueImage:
_audioRecorder
_audioPlayer
_waveformView
_timeLabel
_cancelButton
_saveButton
_recorderButton
_timeFormatter
_displayedTime
_state
_stateToSetAfterInterruption
_audioSessionInterruptionObserver
_applicationWillResignActiveObserver
_autorecord
_alwaysShowActionTitle
_outputURL
_actionTitle
_settings
_maximumDuration
waveformViewPowerForCurrentTime:
audioRecorderDidFinishRecording:successfully:
audioRecorderEncodeErrorDidOccur:error:
audioRecorderBeginInterruption:
audioRecorderEndInterruption:withOptions:
audioRecorderEndInterruption:withFlags:
audioRecorderEndInterruption:
audioPlayerDidFinishPlaying:successfully:
audioPlayerDecodeErrorDidOccur:error:
audioPlayerBeginInterruption:
audioPlayerEndInterruption:withOptions:
audioPlayerEndInterruption:withFlags:
audioPlayerEndInterruption:
initWithOutputURL:settings:autorecord:maximumRecordingDuration:actionTitle:alwaysShowActionTitle:
initWithOutputURL:settings:
initWithOutputURL:settings:maximumRecordingDuration:finishString:
viewWillLayoutSubviews
recorderButtonPressed
state
setState:
cancel
save
_startRecording
_recordingDidStop
_failureWithError:
_disableUserIdleDisplaySleep
_enableUserIdleDisplaySleep
outputURL
actionTitle
autorecord
alwaysShowActionTitle
maximumDuration
settings
setSettings:
averagePowerForChannel:
updateMeters
audioRecorderViewControllerRequestsBacklightAssertionRelease:
audioRecorderViewControllerRequestsBacklightAssertionCreate:
audioRecorderViewController:didFailWithError:
initWithContentsOfURL:error:
audioRecorderViewControllerDidStart:
record
setMeteringEnabled:
setInstantaneousMetering:
initWithURL:settings:error:
audioRecorderViewControllerDidFinish:
audioRecorderViewControllerDidCancel:
stop
play
pause
setActive:error:
setCategory:error:
setFrame:
sizeThatFits:
userInterfaceLayoutDirectionForSemanticContentAttribute:
semanticContentAttribute
setTextColor:
pointSize
font
unsignedIntegerValue
userInfo
setFullWidth:
fontDescriptor
numberWithInt:
fontAttributes
floatValue
fontWithDescriptor:size:
fontWithName:size:
timeFontWithFont:
systemFontOfSize:
boldSystemFontOfSize:
italicSystemFontOfSize:
monospacedDigitSystemFontOfSize:weight:
timeFontWithName:size:
timeFontOfSize:
boldTimeFontOfSize:
italicTimeFontOfSize:
monospacedTimeFontOfSize:
fontDescriptorByAddingAttributes:
_backlightAssertion
_takeAssertion
_releaseAssertion
tickle
initWithReason:forDisplay:willPreventScreenOff:willPreventGestures:timeoutSeconds:timeoutBlock:
sharedInstance
takeAssertion
releaseAssertion
hasAudioMediaSelectionOptions
hasLegibleMediaSelectionOptions
isAC3Only
arrayWithArray:
mediaSelectionOptionsFromArray:withoutMediaCharacteristics:
mediaSelectionOptionsFromArray:withMediaCharacteristics:
arrayByAddingObjectsFromArray:
isCC
extendedLanguageTag
isAuxiliary
isEasyReader
isSDH
isMain
selectMediaOptionAutomaticallyInMediaSelectionGroup:
selectMediaOption:inMediaSelectionGroup:
hasMediaSelectionOptions
currentAudioMediaSelectionOption
keyPathsForValuesAffectingCurrentAudioMediaSelectionOption
setCurrentAudioMediaSelectionOption:
currentLegibleMediaSelectionOption
keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption
setCurrentLegibleMediaSelectionOption:
toggleCaptions
reloadOptions
reloadAudioOptions
_selectedMediaOptionWithMediaCharacteristic:
reloadLegibleOptions
keyPathsForValuesAffectingHasMediaSelectionOptions
keyPathsForValuesAffectingHasAudioMediaSelectionOptions
keyPathsForValuesAffectingHasLegibleMediaSelectionOptions
mediaSubTypes
unsignedIntValue
mediaType
autoupdatingCurrentLocale
objectForKey:
localeIdentifier
canonicalLanguageIdentifierFromString:
locale
displayName
localizedCaseInsensitiveCompare:
audioFormats
_setMediaOption:mediaCharacteristic:
legibleMediaSelectionOptions
hasMediaCharacteristic:
appliesMediaSelectionCriteriaAutomatically
currentItem
asset
mediaSelectionGroupForMediaCharacteristic:
currentMediaSelection
selectedMediaOptionInMediaSelectionGroup:
_disableLegibleMediaSelectionOptions:
_enableAutoMediaSelection:
setSavedCaptionAppearanceDisplayType:
savedCaptionAppearanceDisplayType
audioOptions
legibleOptions
setAudioMediaSelectionOptions:
setLegibleMediaSelectionOptions:
audioMediaSelectionOptions
_optionsForGroup:
playableMediaSelectionOptionsFromArray:
languageCompare:
sortedArrayUsingComparator:
array
bundle
bundleForClass:
localizedStringForKey:value:table:
setImageEdgeInsets:
localizedDisplayName
shortLocalizedDisplayName
_isCompact
_samples
_timeOfLastSample
_recording
_dataSource
reset
setRecording:
drawRect:
_originForTime:
_offsetForTime:
_pointsPerSecond
_numberOfSamplesForWidth:
isRecording
dataSource
setDataSource:
setNeedsDisplay
_jKeyDown
_kKeyDown
_lKeyDown
_audioMediaSelectionOptions
_legibleMediaSelectionOptions
_savedCaptionAppearanceDisplayType
_seekQueue
_ignoreRateKeyValueChange
_updateAtMinMaxTimePeriodicObserverToken
_timebaseEffectiveRateObserver
_timebaseTimeJumpedObserver
_playerItemTimeJumpedObserver
_playerItemDidPlayToEndTimeObserver
_currentLocaleDidChangeObserver
_pictureInPictureInterrupted
_rateToRestoreAfterAudioSessionInterruptionEnds
_isPictureInPictureSupported
_retryPlayingImmediatelyBlock
_shouldPlayImmediately
_looping
_actionAtItemEnd
_pendingSeek
_toleranceBefore
_toleranceAfter
_isScanningForward
_isScanningBackward
_scanningCount
_preScanningRate
_liveStreamMinTiming
_liveStreamMaxTiming
_liveStreamEventModePossible
_canUseNetworkResourcesForLiveStreamingWhilePausedCount
_previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused
_shouldPlayWhenLikelyToKeepUp
_deviceBatteryStateDidChangeObserver
_deviceBatteryMonitoringWasEnabled
_playingOnSecondScreen
_allowsIdleSleepPreventionCount
_atMaxTime
_atMinTime
_scrubbing
_seekingInternal
_seeking
_composable
_hasProtectedContent
_compatibleWithAirPlayVideo
_preventingIdleSystemSleep
_preventingIdleDisplaySleep
_disablingAutomaticTermination
_deviceBatteryChargingOrFull
_player
_minTiming
_maxTiming
_contentChapters
_availableMetadataFormats
_seekTimer
_seekToTime
_rateBeforeScrubBegan
_seekToTimeInternal
_cachedContentDuration
_forwardPlaybackEndTime
_reversePlaybackEndTime
initWithPlayer:
_queuePlayer
status
error
seekableTimeRanges
isCompletelySeekable
shouldPreventIdleDisplaySleep
_retryPlayImmediatelyIfNeeded
canPlayImmediately
canPlay
play:
autoplay:
canPause
pause:
canTogglePlayback
togglePlaybackEvenWhenInBackground:
isLooping
setLooping:
updateAtMinMaxTime
volume
setVolume:
increaseVolume:
decreaseVolume:
changeVolumeToMinimum:
changeVolumeToMaximum:
isMuted
setMuted:
toggleMuted:
hasContent
contentDuration
nominalFrameRate
isStreaming
contentDimensions
contentDurationWithinEndTimes
loadedTimeRanges
hasEnabledAudio
hasVideo
hasEnabledVideo
hasContentChapters
hasLiveStreamingContent
hasSeekableLiveStreamingContent
hasTrimmableContent
hasShareableContent
_isRestrictedFromSavingPlayerItem:
_isMarkedNotSerializablePlayerItem:
timeControlStatus
canSeek
seekToTime:
beginScrubbing
endScrubbing
seekToTime:toleranceBefore:toleranceAfter:
seekToCMTime:toleranceBefore:toleranceAfter:
throttledSeekToTime:toleranceBefore:toleranceAfter:
actuallySeekToTime
seekByTimeInterval:
seekByTimeInterval:toleranceBefore:toleranceAfter:
canScanForward
scanForward:
_updateScanningForwardRate
canScanBackward
scanBackward:
_updateScanningBackwardRate
canSeekToBeginning
seekToBeginning:
canSeekToEnd
seekToEnd:
canSeekFrameForward
seekFrameForward:
canSeekFrameBackward
seekFrameBackward:
seekOrStepByFrameCount:
beginScrubbing:
endScrubbing:
seekToChapter:
canSeekChapterForward
canSeekChapterBackward
updateTiming
updateMinMaxTiming
allowsExternalPlayback
setAllowsExternalPlayback:
isPlayingOnExternalScreen
isExternalPlaybackActive
isPlayingOnSecondScreen
externalPlaybackType
externalPlaybackAirPlayDeviceLocalizedName
isPictureInPicturePossible
isPictureInPictureInterrupted
setPictureInPictureInterrupted:
segmentDuration
startUsingNetworkResourcesForLiveStreamingWhilePaused
stopUsingNetworkResourcesForLiveStreamingWhilePaused
canUseNetworkResourcesForLiveStreamingWhilePaused
setCanUseNetworkResourcesForLiveStreamingWhilePaused:
_cancelPendingSeeksIfNeeded
scanningDelays
isAtMaxTime
setAtMaxTime:
isAtMinTime
setAtMinTime:
isScrubbing
setScrubbing:
timing
setTiming:
minTiming
setMinTiming:
maxTiming
setMaxTiming:
isSeekingInternal
setSeekingInternal:
isSeeking
setSeeking:
seekToTimeInternal
setSeekToTimeInternal:
seekToTime
setSeekToTime:
contentChapters
setContentChapters:
isComposable
setComposable:
hasProtectedContent
setHasProtectedContent:
availableMetadataFormats
setAvailableMetadataFormats:
isCompatibleWithAirPlayVideo
setCompatibleWithAirPlayVideo:
rateBeforeScrubBegan
setRateBeforeScrubBegan:
isPreventingIdleSystemSleep
setPreventingIdleSystemSleep:
isPreventingIdleDisplaySleep
setPreventingIdleDisplaySleep:
isDisablingAutomaticTermination
setDisablingAutomaticTermination:
cachedContentDuration
setCachedContentDuration:
forwardPlaybackEndTime
setForwardPlaybackEndTime:
reversePlaybackEndTime
setReversePlaybackEndTime:
isDeviceBatteryChargingOrFull
setDeviceBatteryChargingOrFull:
seekTimer
cancelPendingSeeks
liveUpdateInterval
localizedModel
seekableTimeRangesLastModifiedTime
firstObject
timebase
postNotificationName:object:userInfo:
reverseObjectEnumerator
isEnabled
assetTrack
tracks
stepByCount:
canStepBackward
canStepForward
doubleValue
canPlayFastReverse
canPlayFastForward
seekToTime:toleranceBefore:toleranceAfter:completionHandler:
getBytes:length:
dataValue
objectAtIndex:
numberWithUnsignedInt:
metadataItemsFromArray:withKey:keySpace:
metadataForFormat:
presentationSize
_isStreaming
timeRange
tracksWithMediaType:
_setUserVolume:
_userVolume
setActionAtItemEnd:
actionAtItemEnd
setAttribute:forKey:error:
bundleIdentifier
isPlaybackLikelyToKeepUp
items
isPlaybackBufferEmpty
playImmediatelyAtRate:
applicationState
sharedApplication
CMTimeValue
sortUsingComparator:
stringValue
arrayWithCapacity:
chapterMetadataGroupsBestMatchingPreferredLanguages:
arrayByAddingObject:
preferredLanguages
loadValuesAsynchronouslyForKeys:completionHandler:
statusOfValueForKey:error:
dictionaryWithDictionary:
commonMetadata
valueForKey:
removeTimeObserver:
setBatteryMonitoringEnabled:
batteryState
isBatteryMonitoringEnabled
addPeriodicTimeObserverForInterval:queue:usingBlock:
keyPathsForValuesAffectingStatus
keyPathsForValuesAffectingError
keyPathsForValuesAffectingSeekableTimeRanges
keyPathsForValuesAffectingCompletelySeekable
keyPathsForValuesAffectingShouldPreventIdleDisplaySleep
keyPathsForValuesAffectingRate
keyPathsForValuesAffectingCanPlay
keyPathsForValuesAffectingPlaying
keyPathsForValuesAffectingCanPause
keyPathsForValuesAffectingCanTogglePlayback
keyPathsForValuesAffectingMuted
keyPathsForValuesAffectingHasContent
keyPathsForValuesAffectingContentDuration
keyPathsForValuesAffectingContentDimensions
keyPathsForValuesAffectingCurrentTime
keyPathsForValuesAffectingMinTime
keyPathsForValuesAffectingMaxTime
keyPathsForValuesAffectingContentDurationWithinEndTimes
keyPathsForValuesAffectingLoadedTimeRanges
keyPathsForValuesAffectingHasEnabledAudio
keyPathsForValuesAffectingHasVideo
keyPathsForValuesAffectingHasEnabledVideo
keyPathsForValuesAffectingHasContentChapters
keyPathsForValuesAffectingHasLiveStreamingContent
keyPathsForValuesAffectingHasSeekableLiveStreamingContent
keyPathsForValuesAffectingHasTrimmableContent
keyPathsForValuesAffectingHasShareableContent
keyPathsForValuesAffectingTimeControlStatus
keyPathsForValuesAffectingCanSeek
keyPathsForValuesAffectingCanScanForward
keyPathsForValuesAffectingCanScanBackward
keyPathsForValuesAffectingCanSeekToBeginning
keyPathsForValuesAffectingCanSeekToEnd
keyPathsForValuesAffectingCanSeekFrameForward
keyPathsForValuesAffectingCanSeekFrameBackward
keyPathsForValuesAffectingCanSeekChapterForward
keyPathsForValuesAffectingCanSeekChapterBackward
keyPathsForValuesAffectingAllowsExternalPlayback
keyPathsForValuesAffectingPlayingOnExternalScreen
keyPathsForValuesAffectingExternalPlaybackActive
keyPathsForValuesAffectingExternalPlaybackType
keyPathsForValuesAffectingExternalPlaybackAirPlayDeviceLocalizedName
keyPathsForValuesAffectingPictureInPicturePossible
keyPathsForValuesAffectingSegmentDuration
setPlayingOnSecondScreen:
@"NSObject<OS_dispatch_queue>"
@"NSObject<OS_dispatch_source>"
@28@0:4d8@16@?20B24
@8@0:4
v8@0:4
d8@0:4
@"AVPlayerController"
@"AVPlayerControllerTimeResolver"
@"AVTimeFormatter"
@"AVPlayerViewController"
@"NSDictionary"
@16@0:4@8@12
v12@0:4@8
v12@0:4B8
v24@0:4@8@12@16^v20
v12@0:4f8
B8@0:4
i8@0:4
v12@0:4i8
@"NSObject<OS_os_log>"
@"NSMutableDictionary"
@"NSMutableArray"
v20@0:4@8C12i16
@12@0:4@8
@40@0:4@8i12i16@20i24f28f32f36
@44@0:4@8i12i16@20i24f28f32f36B40
@"NSString"
@"AVDoneButton"
@"AVLabel"
@"AVPlaybackProgressIndicator"
@"UIButton"
@"AVPlayPauseButton"
@"UILabel"
@"AVVolumeSlider"
@"NSLayoutConstraint"
v16@0:4@"PUICSlider"8i12
v12@0:4@"PUICSlider"8
v16@0:4@8i12
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4@"Protocol"8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
@"NSString"8@0:4
@24@0:4@8@12B16@?20
@20@0:4@8@12@16
@16@0:4@8#12
@"NSSet"
@32@0:4@8@12@16B20I24@?28
@?8@0:4
@24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
f8@0:4
@12@0:4i8
{UIEdgeInsets=ffff}8@0:4
i12@0:4@8
@"UIImage"
@12@0:4^{_NSZone=}8
@36@0:4d8d16I24@28@?32
@20@0:4d8@16
@"<AVTimeControlling>"
@"AVTimer"
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
v16@0:4d8
@20@0:4@8{CGSize=ff}12
v20@0:4d8B16
v24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
{CGSize=ff}8@0:4
@"UIImageView"
@"AVNowPlayingInfoController"
@"AVRemoteCommandController"
@"AVUnsupportedContentIndicatorView"
@"AVPlayerLayerView"
@"AVWatchPlaybackControlsViewController"
@"NSTimer"
@"<AVPlayerViewControllerDelegate>"
{?="playerViewControllerShouldHandleDoneButtonTap"B}
{CGRect={CGPoint=ff}{CGSize=ff}}8@0:4
{?=dd}8@0:4
@32@0:4d8d16d24
d16@0:4d8
@"AVAudioRecorder"
@"AVAudioPlayer"
@"AVWaveformView"
@"NSURL"
@"<AVAudioRecorderViewControllerDelegate>"
f12@0:4@"AVWaveformView"8
f12@0:4@8
v16@0:4@"AVAudioRecorder"8B12
v16@0:4@"AVAudioRecorder"8@"NSError"12
v12@0:4@"AVAudioRecorder"8
v16@0:4@"AVAudioRecorder"8I12
v16@0:4@8B12
v16@0:4@8@12
v16@0:4@8I12
v16@0:4@"AVAudioPlayer"8B12
v16@0:4@"AVAudioPlayer"8@"NSError"12
v12@0:4@"AVAudioPlayer"8
v16@0:4@"AVAudioPlayer"8I12
@36@0:4@8@12B16d20@28B32
@28@0:4@8@12d16@24
@16@0:4@8f12
@12@0:4f8
@"CSLSBacklightAssertion"
l8@0:4
v12@0:4l8
@"<AVWaveformViewDataSource>"
f16@0:4d8
i12@0:4f8
@"NSArray"
@"NSNumber"
{?="value"q"timescale"i"flags"I"epoch"q}
@"AVValueTiming"
@"AVPlayer"
v32@0:4d8d16d24
v80@0:4{?=qiIq}8{?=qiIq}32{?=qiIq}56
{?=qiIq}8@0:4
v32@0:4{?=qiIq}8
zPLR
