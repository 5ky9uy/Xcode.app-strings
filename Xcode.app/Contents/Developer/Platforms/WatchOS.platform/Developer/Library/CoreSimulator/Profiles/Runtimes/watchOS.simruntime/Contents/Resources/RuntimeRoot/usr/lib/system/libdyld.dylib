__dyld__NSGetExecutablePath
__dyld_register_func_for_add_image
__dyld_register_func_for_remove_image
__dyld_image_count
__dyld_get_image_header
__dyld_get_image_vmaddr_slide
__dyld_get_image_name
__dyld_get_image_slide
__dyld_register_thread_helpers
__dyld_dlerror
__dyld_dladdr
__dyld_dlclose
__dyld_dlopen
__dyld_dlopen_preflight
__dyld_dlsym
__dyld_get_all_image_infos
__dyld_find_unwind_sections
__dyld_fast_stub_entry
__dyld_image_path_containing_address
__dyld_get_image_header_containing_address
__dyld_shared_cache_some_image_overridden
__dyld_get_shared_cache_uuid
__dyld_get_shared_cache_range
__dyld_process_is_restricted
__dyld_shared_cache_file_path
__dyld_dynamic_interpose
__dyld_fork_child
/System/Library/Caches/com.apple.dyld/
__dyld_is_memory_immutable
__dyld_objc_notify_register
.dylib
__TEXT
__DATA
__LINKEDIT
__DATA_DIRTY
__DATA_CONST
__OBJC
received unknown message id=0x%X, size=%d
v4@?0
operator[]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/libdyld_Sim/dyld-519.4/dyld3/LaunchCache.h
idx < _count
not a fat file
fat header too large: %u entries
slice %d extends beyond end of file
file too short
not a mach-o file
wrong cpu type
file does not start with MH_MAGIC[_64]
malformed load command #%d, size too small %d
malformed load command #%d, size too large 0x%X
v12@?0r^{load_command=II}4^B8
v40@?0r*4I8I12Q16Q24C32^B36
/BuildRoot/Library/Caches/com.apple.xbs/Sources/libdyld_Sim/dyld-519.4/dyld3/MachOParser.cpp
v32@?0r*4B8B12B16I20I24^B28
forEachDependentDylib_block_invoke
dylibCmd->dylib.name.offset < cmd->cmdsize
v56@?0r*4r*8I12Q16r^v24Q28I36I40I44B48^B52
v64@?0r*4I8Q12r*20I24Q28Q36I44I48I52B56^B60
could not find re-exported dylib %s
findExportedSymbol
ordinal >= 1
ordinal %lld out of range for %s
dependent dylib %lld not found for re-exported symbol %s
unsupported exported symbol kind. flags=%llu at node offset=0x%0lX
v32@?0r*4Q8C16C20S24^B28
LC_DYLD_INFO load command size wrong
multiple LC_DYLD_INFO load commands
LC_SYMTAB load command size wrong
multiple LC_SYMTAB load commands
LC_DYSYMTAB load command size wrong
multiple LC_DYSYMTAB load commands
LC_SEGMENT_SPLIT_INFO load command size wrong
multiple LC_SEGMENT_SPLIT_INFO load commands
LC_FUNCTION_STARTS load command size wrong
multiple LC_FUNCTION_STARTS load commands
LC_DATA_IN_CODE load command size wrong
multiple LC_DATA_IN_CODE load commands
LC_CODE_SIGNATURE load command size wrong
multiple LC_CODE_SIGNATURE load commands
LC_UUID load command size wrong
multiple LC_UUID load commands
LC_VERSION_* load command size wrong
multiple LC_VERSION_MIN_* load commands
LC_BUILD_VERSION load command size wrong
multiple LC_BUILD_VERSION load commands
LC_ENCRYPTION_INFO load command size wrong
multiple LC_ENCRYPTION_INFO load commands
LC_ENCRYPTION_INFO_64 load command size wrong
multiple LC_ENCRYPTION_INFO_64 load commands
LC_ENCRYPTION_INFO_64 found in 32-bit mach-o
LC_DYSYMTAB but no LC_SYMTAB load command
malformed trie node, terminalSize=0x%llX extends past end of trie
malformed trie node, child node extends past end of trie
malformed trie child, nodeOffset=0x%llX out of range
malformed trie child, cycle to nodeOffset=0x%llX
malformed trie too deep
malformed uleb128
uleb128 too big for uint64
v28@?0r^v4Q8Q16I24
LoadedImage
/BuildRoot/Library/Caches/com.apple.xbs/Sources/libdyld_Sim/dyld-519.4/dyld3/AllImages.cpp
loadedAddress() == mh
init
v16@?0I4r^{LoadedImage=^{mach_header}^{Image}}8^B12
addImages
count != 0
dyld: %s
v16@?0I4^^?8^B12
dyld: add notifier %p called with mh=%p
dyld: objc-mapped-notifier called with %d images:
dyld:  objc-mapped: %p %s
removeImages
dyld: remove notifier %p called with mh=%p
dyld: objc-unmapped-notifier called with image %p %s
dyld: unloaded %s
v16@?0I4^{LoadedImage=^{mach_header}^{Image}}8^B12
mainExecutable
_programVars != nullptr
mainExecutableImage
_mainClosure != nullptr
v16@?0I4r^^{ImageGroup}8^B12
v16@?0{Image=^{Image}}4{Image=^{Image}}8^B12
v16@?0I4^{DlopenCount=^{mach_header}I}8^B12
v16@?0I4r^{DlopenCount=^{mach_header}I}8^B12
v20@?0I4{Image=^{Image}}8i12^B16
v40@?0I4I8I12q16Q24C32^B36
   %s: path is directory: %s
not a file
   %s: closured built ImageGroup for path: %s
   %s: closured failed for path: %s, error: %s
   %s: file does not exist for path: %s
v12@?0r*4^B8
dyld: cache fixup: *%p = %p
v16@?0^I4L8^B12
did not find loaded image to patch into cache: %s
v20@?0I4r^{Image=b1b1b1b1b1b1b1b1b1b1b1b1b1b7b12iII(FileInfo={?=QQ}{?=[16C]})[16C]SSSSSSSSSS}8I12^B16
called initialzer %p in %s
v8@?0r^v4
runInitialzersBottomUp_block_invoke
foundEntry != nullptr
dyld: already initializing '%s'
dyld: objc-init-notifier called with mh=%p, path=%s
dyld: called initialzer %p in %s
v8@?0{Image=^{Image}}4
withWriteLock
pthread_rwlock_wrlock(&_lock) == 0
pthread_rwlock_unlock(&_lock) == 0
count <= (_allocCount - _inUseCount)
withReadLock
pthread_rwlock_rdlock(&_lock) == 0
remove
index < _inUseCount
_dyld_image_count()
_dyld_get_image_header(%d)
_dyld_get_image_slide(%p)
_dyld_get_image_vmaddr_slide(%d)
_dyld_get_image_name(%d)
NSVersionOfLinkTimeLibrary("%s")
   NSVersionOfLinkTimeLibrary() => 0x%08X
NSVersionOfRunTimeLibrary("%s")
   NSVersionOfRunTimeLibrary() => 0x%08X
   NSVersionOfRunTimeLibrary() => -1
dyld_get_program_sdk_watch_os_version()
dyld_get_program_min_watch_os_version()
dyld_get_sdk_version(%p)
dyld_get_program_sdk_version()
dyld_get_min_os_version(%p)
dyld_get_program_min_os_version()
_dyld_get_image_uuid(%p, %p)
_NSGetExecutablePath(%p, %p)
_dyld_register_func_for_add_image(%p)
_dyld_register_func_for_remove_image(%p)
_dyld_objc_notify_register(%p, %p, %p)
dyld_image_header_containing_address(%p)
dyld_image_path_containing_address(%p)
   dyld_image_path_containing_address() => %s
   dyld_image_path_containing_address() => NULL
dladdr(%p, %p)
   dladdr() => 0
__dso_handle
   dladdr() => 1, { "%s", %p, "%s", %p }
dlerror()
dlclose(%p)
invalid handle passed to dlclose()
unexpected > %d images loaded
v8@?0r^{Image=b1b1b1b1b1b1b1b1b1b1b1b1b1b7b12iII(FileInfo={?=QQ}{?=[16C]})[16C]SSSSSSSSSS}4
loadImageAndDependents
/BuildRoot/Library/Caches/com.apple.xbs/Sources/libdyld_Sim/dyld-519.4/dyld3/APIs.cpp
needToLoadCount > 0
v20@?0I4r^{mach_header=IiiIIII}8{Image=^{Image}}12^B16
dlopen("%s", 0x%08X)
NULL
   dlopen: path inode/mtime matches already loaded image
   dlopen(%s) => %p
   dlopen: matches already loaded image %s
   dlopen: real path=%s
   dlopen: checking for pre-built closure for path: %s
   dlopen: checking for pre-built closure for real path: %s
   dlopen(%s) => NULL
   dlopen: trying existing closure image=%p
   dlopen: existing closure no longer valid
dlopen
   dlopen: using closured built image=%p
dlopen(%s, 0x%04X): closured error
   dlopen: closured error
dlopen(%s, 0x%04X): %s
   dlopen: closured error: %s
dlopen(%s, 0x%04X): %s %s
   dlopen: closured error: %s %s
dlopen(%s, 0x%04X): %s %s %s
   dlopen: closured error: %s %s %s
dlopen_preflight(%s)
v24@?0I4I8r^v12L16^B20
dlsym(%p, "%s")
@rpath/
B24@?0I4r*8^v12r^^{mach_header}16^^v20
   dlsym() => %p
dlsym(RTLD_DEFAULT, %s): symbol not found
   dlsym() => NULL
dlsym(RTLD_MAIN_ONLY, %s): symbol not found
dlsym(RTLD_NEXT, %s): called by unknown image (caller=%p)
dlsym(RTLD_SELF, %s): called by unknown image (caller=%p)
dlsym(%p, %s): invalid handle
dlsym(%p, %s): symbol not found
dyld_shared_cache_some_image_overridden()
dyld_shared_cache_some_image_overridden
0 && "not implemented yet"
_dyld_get_shared_cache_uuid()
_dyld_get_shared_cache_range()
_dyld_find_unwind_sections(%p, %p)
__eh_frame
__unwind_info
v32@?0r*4r*8I12r^v16L20B24^B28
dyld_process_is_restricted()
dyld_shared_cache_file_path()
dyld_dynamic_interpose(%p, %p, %lu)
dyld_shared_cache_find_iterate_text()
v28@?0Q4Q12[16C]20r*24
dyld_shared_cache_iterate_text()
v12@?0r^{Image=b1b1b1b1b1b1b1b1b1b1b1b1b1b7b12iII(FileInfo={?=QQ}{?=[16C]})[16C]SSSSSSSSSS}4^B8
DYLD_PRINT_LIBRARIES
DYLD_PRINT_SEGMENTS
DYLD_PRINT_INITIALIZERS
DYLD_PRINT_APIS
DYLD_PRINT_NOTIFICATIONS
DYLD_PRINT_BINDINGS
DYLD_PRINT_DOFS
unmapImage
/BuildRoot/Library/Caches/com.apple.xbs/Sources/libdyld_Sim/dyld-519.4/dyld3/Loading.cpp
loadAddress != nullptr
v20@?0I4r^{Image=b1b1b1b1b1b1b1b1b1b1b1b1b1b7b12iII(FileInfo={?=QQ}{?=[16C]})[16C]SSSSSSSSSS}8r^{mach_header=IiiIIII}12^B16
dyld: mapped by kernel %s
%14s (%c%c%c) 0x%012llX->0x%012llX 
cached dylib mod-time has changed, dylib cache has: 0x%08llX, file has: 0x%08lX, for: %s
cached dylib inode has changed, dylib cache has: 0x%08llX, file has: 0x%08llX, for: %s
cached dylib overridden: %s
missing cached dylib: %s
dyld: Using from dyld cache %s
%14s (%c%c%c) 0x%012lX->0x%012lX 
v32@?0I4Q8Q16C24^B28
mapAndFixupImages_block_invoke_3
image.neverUnload()
file system sandbox blocked open("%s", O_RDONLY)
open("%s", O_RDONLY) failed with errno=%d
file system sandbox blocked stat("%s")
stat("%s") failed with errno=%d
file mtime/inode changed since closure was built for '%s'
code signature invalid (errno=%d) sliceOffset=0x%08llX, codeBlobOffset=0x%08X, codeBlobSize=0x%08X for '%s'
fcntl(fd, F_ADDFILESIGS_RETURN) failed with errno=%d, sliceOffset=0x%08llX, codeBlobOffset=0x%08X, codeBlobSize=0x%08X for '%s'
code signature does not cover entire file up to signature
code signature in (%s) not valid for use in process: %s
vm_allocate(size=0x%0llX) failed with result=%d
dyld: Mapping %s (slice offset=%llu)
dyld: Mapping %s
file system sandbox blocked mmap() of '%s'
code signing blocked mmap() of '%s'
mmap(addr=0x%0llX, size=0x%08X) failed with errno=%d for %s
code signature missing
code signature extends beyond end of __LINKEDIT
code signature changed since closure was built
code signature format invalid
dyld: load %s
file-read-data
file-read-metadata
file-map-executable
vm_protect() failed trying to make text segment writable, result=%d
fixup is past end of segment. segOffset=0x%0llX, segSize=0x%0llX, segIndex=%d
dyld: fixup: %s:%p += %p
dyld: fixup: %s:%p = %p
dyld: text fixup: %s:%p += %p
dyld: text fixup: %s:%p = %p
dyld: CALL fixup: %s:%p = %p (pc+0x%08X)
dyld: JMP fixup: %s:%p = %p (pc+0x%08X)
unknown fixup kind %d
v28@?0Q4i12{TargetSymbolValue=(?={SharedCacheOffsetTarget=b2b62}{AbsoluteTarget=b2b62}{GroupImageTarget=b2b1b7b12b42}{DynamicGroupImageTarget=b2b1b30b31}Q)}16^B24
vm_protect() failed trying to make text segment non-writable, result=%d
/dev/dtracehelper
can't open /dev/dtracehelper to register dtrace DOF sections
dyld: registering DOF section %p in %s with dtrace, ID=0x%08X
DYLD_LIBRARY_PATH
DYLD_FRAMEWORK_PATH
DYLD_FALLBACK_FRAMEWORK_PATH
DYLD_FALLBACK_LIBRARY_PATH
DYLD_INSERT_LIBRARIES
DYLD_IMAGE_SUFFIX
DYLD_ROOT_PATH
v8@?0r*4
/usr/local/lib
/usr/lib
/Library/Frameworks
/System/Library/Frameworks
.framework/
resolveTarget
/BuildRoot/Library/Caches/com.apple.xbs/Sources/libdyld_Sim/dyld-519.4/dyld3/LaunchCacheReader.cpp
_data.sharedCache.offsetIntoCache != 0
image for groupNum=%d, indexInGroup=%d not found
@flat
@main
@weak_def
dynamic symbol '%s' not found for %s
Closure
closure->magic == binary_format::Closure::magicV1
imageBinary
index <_binaryData->imagesPoolCount
indexInGroup
image(index)._binaryData == img
findImageByCacheOffset
groupNum() == 0
stringFromPool
offset < _binaryData->stringsPoolSize
dependentPool
index < _binaryData->dependentsPoolCount
segmentPool
index < _binaryData->segmentsPoolCount
indirectGroupNum
offset < _binaryData->indirectGroupNumPoolCount
forEachDyldCachePatch
_binaryData->imagesEntrySize == sizeof(binary_format::CachedImage) && "only callable on group-0 in shared cache"
patchTargetIndex < _binaryData->cachePatchTableCount
offsetsIndex < _binaryData->cachePatchOffsetsCount
v16@?0(ImageRef=I{?=b2b18b12})4(ImageRef=I{?=b2b18b12})8^B12
forEachDyldCachePatchLocation_block_invoke
delta < 32
v20@?0I4I8B12^B16
forEachDependentImage
!_binaryData->isInvalid
forEachDiskSegment
isDiskImage()
forEachCacheSegment
!isDiskImage()
forEachInitializer
startIndex + initCount <= group().initializerOffsetsCount()
forEachInitBefore
startIndex + initCount <= endIndex
forEachDOF
startIndex + dofCount <= group().dofOffsetsCount()
v8@?0(ImageRef=I{?=b2b18b12})4
asDiskImage
_binaryData->isDiskImage
!_binaryData->isDiskImage
cacheOffset
forEachFixup
0 && "bad opcode"
segFixups->pageCount*segFixups->pageSize <= segContent.size
ordinalsIndexInGroupPool < group().targetValuesCount()
forEachFixup_block_invoke
targetOrdinal < maxOrdinal
v20@?0I4i8I12^B16
TypedContentBuffer
/BuildRoot/Library/Caches/com.apple.xbs/Sources/libdyld_Sim/dyld-519.4/dyld3/ClosureBuffer.cpp
::vm_allocate(mach_task_self(), &bufferAddress, _size, VM_FLAGS_ANYWHERE) == 0
addItem
!_readOnly
((char*)_currentEnd + len) < ((char*)_buffer + _size)
vmBuffer
_readOnly
vmBufferSize
forEach
v12@?0r^v4L8
result != nullptr
imageGroup
executable_path
@(#)PROGRAM:dyld  PROJECT:dyld-519.4
33333;
