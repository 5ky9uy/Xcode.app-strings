%@ %@
identifier
-[SPProtoObjectMessage writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-879.1.2/Generated/SPProtoObjectMessage.m
nil != self->_identifier
T@"NSString",&,N,V_identifier
playerItemIdentifiers
-[SPProtoAudioFileQueuePlayerSetItems writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-879.1.2/Generated/SPProtoAudioFileQueuePlayerSetItems.m
T@"NSMutableArray",&,N,V_playerItemIdentifiers
rate
-[SPProtoAudioFileQueuePlayerSetRate writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-879.1.2/Generated/SPProtoAudioFileQueuePlayerSetRate.m
Tf,N,V_rate
upsertWithItems
destroy
setRate
replaceCurrentItem
setStatus
advanceToNextItem
appendItem
removeItem
removeAllItems
setCurrentItem
hasUpsertWithItems
TB,R,N
T@"SPProtoAudioFileQueuePlayerSetItems",&,N,V_upsertWithItems
hasDestroy
T@"SPProtoObjectMessage",&,N,V_destroy
hasSetRate
T@"SPProtoAudioFileQueuePlayerSetRate",&,N,V_setRate
hasReplaceCurrentItem
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_replaceCurrentItem
hasSetStatus
T@"SPProtoAudioFilePlayerStatus",&,N,V_setStatus
hasAdvanceToNextItem
T@"SPProtoObjectMessage",&,N,V_advanceToNextItem
hasAppendItem
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_appendItem
hasRemoveItem
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_removeItem
hasRemoveAllItems
T@"SPProtoObjectMessage",&,N,V_removeAllItems
hasSetCurrentItem
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_setCurrentItem
containedIdentifier
-[SPProtoAudioFilePlayerUpdateContainedIdentifier writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-879.1.2/Generated/SPProtoAudioFilePlayerUpdateContainedIdentifier.m
hasContainedIdentifier
T@"NSString",&,N,V_containedIdentifier
status
errorDomain
errorCode
errorDict
hasIdentifier
hasStatus
TB,N
Ti,N,V_status
hasErrorDomain
T@"NSString",&,N,V_errorDomain
hasErrorCode
Tq,N,V_errorCode
hasErrorDict
T@"NSData",&,N,V_errorDict
upsertWithAsset
getCurrentTime
notifyTimeJumped
notifyDidPlayToEndTime
notifyFailedToPlayToEndTime
setItemCurrentTime
hasUpsertWithAsset
T@"SPProtoAudioFilePlayerUpdateContainedIdentifier",&,N,V_upsertWithAsset
hasGetCurrentTime
T@"SPProtoObjectMessage",&,N,V_getCurrentTime
hasNotifyTimeJumped
T@"SPProtoObjectMessage",&,N,V_notifyTimeJumped
hasNotifyDidPlayToEndTime
T@"SPProtoObjectMessage",&,N,V_notifyDidPlayToEndTime
hasNotifyFailedToPlayToEndTime
T@"SPProtoObjectMessage",&,N,V_notifyFailedToPlayToEndTime
hasSetItemCurrentTime
T@"SPProtoAudioFilePlayerItemSetCurrentTime",&,N,V_setItemCurrentTime
duration
title
albumTitle
artist
sandboxExtensionToken
-[SPProtoAudioFilePlayerAssetUpdateMetaData writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-879.1.2/Generated/SPProtoAudioFilePlayerAssetUpdateMetaData.m
hasURL
T@"NSString",&,N,V_uRL
hasDuration
Td,N,V_duration
hasTitle
T@"NSString",&,N,V_title
hasAlbumTitle
T@"NSString",&,N,V_albumTitle
hasArtist
T@"NSString",&,N,V_artist
hasSandboxExtensionToken
T@"NSString",&,N,V_sandboxExtensionToken
upsertWithMetaData
hasUpsertWithMetaData
T@"SPProtoAudioFilePlayerAssetUpdateMetaData",&,N,V_upsertWithMetaData
currentTime
-[SPProtoAudioFilePlayerItemSetCurrentTime writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-879.1.2/Generated/SPProtoAudioFilePlayerItemSetCurrentTime.m
hasCurrentTime
Td,N,V_currentTime
asset
playerItem
queuePlayer
hasAsset
T@"SPProtoAudioFilePlayerAsset",&,N,V_asset
hasPlayerItem
T@"SPProtoAudioFilePlayerItem",&,N,V_playerItem
hasQueuePlayer
T@"SPProtoAudioFileQueuePlayer",&,N,V_queuePlayer
com.apple.watchkit.extension.extensionsQueue
com.apple.watchkit.handlesbgtcache
%{public}s:%d: failed to create directory at %{public}@, error: %{public}@
+[SPExtension handlesBackgroundTasksCacheDirectory]_block_invoke
v4@?0
%{public}s:%d: Failed to find extension %{public}@ with app %{public}@
+[SPExtension extensionWithAppIdentifier:create:]_block_invoke
%{public}s:%d: Initializing for %{public}@ / %{public}@
-[SPExtension initWithAppProxy:extensionProxy:]
%@.y
%@.n
com.apple.watchkit.extension.
com.apple.watchkit.extension.activeClientIdentifiersQueue
%{public}s:%d: handlesBackgroundTasks for %{public}@ changed, caching...
-[SPExtension observeValueForKeyPath:ofObject:change:context:]
%{public}s:%d: setting _hasActiveAppConnection = YES with pid %d for %{public}@
-[SPExtension setHasActiveAppConnectionWithPid:]_block_invoke
%{public}s:%d: setting _hasActiveAppConnection = NO for %{public}@
-[SPExtension _on_extensionQueue_setDoesNotHaveActiveAppConnection]
%{public}s:%d: tried to set a connection for a non-native extension %{public}@
-[SPExtension setClientConnection:]
%{public}s:%d: moving from a presently valid connection for %{public}@? this shouldn't happen
-[SPExtension setClientConnection:]_block_invoke
%{public}s:%d: connection between gizmoappd and %{public}@ invalidated
-[SPExtension setClientConnection:]_block_invoke_2
%{public}s:%d: INTERRUPTED %{public}@
%{public}s:%d: serverIdentifier: %{public}@ clientIdentifier: %{public}@, _activeNotificationClientIdentifiers:%{public}@
-[SPExtension addActiveNotificationClientIdentifier:]_block_invoke
-[SPExtension removeActiveNotificationClientIdentifier:]_block_invoke
%{public}s:%d: serverIdentifier: %{public}@
-[SPExtension removeAllActiveClientIdientifiers]
hasActiveAppConnection
TB,N,V_hasActiveAppConnection
appProxy
T@"LSApplicationProxy",&,N,V_appProxy
clientConnection
T@"NSXPCConnection",&,N,V_clientConnection
lastKnownPID
Ti,N,V_lastKnownPID
extensionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_extensionQueue
serverIdentifier
T@"NSString",R,V_serverIdentifier
extensionIdentifier
T@"NSString",R,V_extensionIdentifier
pluginURL
T@"NSURL",R,V_pluginURL
applicationDebugging
TB,V_applicationDebugging
backgroundUpdating
TB,V_backgroundUpdating
applicationRunningInBackground
TB,V_applicationRunningInBackground
creatingNotificationUI
TB,V_creatingNotificationUI
handlesBackgroundTasks
Ti,V_handlesBackgroundTasks
activeNotificationClientIdentifiers
T@"NSMutableSet",R,V_activeNotificationClientIdentifiers
hasBGWorkoutProcessingInfoPlistEntry
TB,R,V_hasBGWorkoutProcessingInfoPlistEntry
launchEnv
T@"NSDictionary",&,V_launchEnv
launchArgs
T@"NSArray",&,V_launchArgs
notificationUIActive
TB,R,D
applicationUIIsActive
TB,V_applicationUIIsActive
alive
native
plist
audioFilePlayerMessage
hasPlist
T@"SPProtoSockPuppetPlist",&,N,V_plist
hasAudioFilePlayerMessage
T@"SPProtoAudioFilePlayerMessage",&,N,V_audioFilePlayerMessage
com.apple.watchkit.native.send
com.apple.watchkit.plugin.cache
%{public}s:%d: isNativePlugin:%{public}@ - known YES
-[SPGizmoPlugInManager isNativePlugin:]_block_invoke
%{public}s:%d: isNativePlugin:%{public}@ - known NO
%{public}s:%d: isNativePlugin:%{public}@ - lookup %{public}@
%{public}s:%d: appRemoteLaunchWithIdentifier:%{public}@
-[SPGizmoPlugInManager appRemoteLaunchWithIdentifier:launchEnv:launchArgs:]
%{public}s:%d: appRemoteTerminateWithIdentifier:%{public}@
-[SPGizmoPlugInManager appRemoteTerminateWithIdentifier:]
%{public}s:%d: removeLocalConnectionWithIdentifier:%{public}@, client:%{public}@
-[SPGizmoPlugInManager removeLocalConnectionWithIdentifier:clientIdentifier:]
%{public}s:%d: updateLocalConnectionsWithConnection:%{public}@, client:%{public}@, extensionDidBeginUsingResults:%{public}@
-[SPGizmoPlugInManager updateLocalConnectionsWithConnection:withIdentifier:clientIdentifier:extensionDidBeginUsingResults:]
%{public}s:%d: somehow got here for an extension we know think is non-native? %{public}@
%{public}s:%d: somehow got here for  non-native extension %@. (impossible if the extension was really non-native, bookkeeping error)
%{public}s:%d: extensionDidBeginUsingWithLaunchEnv:%{public}@, handlesBackgroundTasks: %i
%{public}s:%d: fetchExtensionCapabilitiesForAppBundleID:%{public}@, handlesBackgroundTasks:%d
-[SPGizmoPlugInManager fetchExtensionCapabilitiesForAppBundleID:handlesBackgroundTasks:]
%{public}s:%d: plugin for app %{public}@ has no PID yet
-[SPGizmoPlugInManager appStateInfosForAppBundleIDs:]
%{public}s:%d: sendInterfaceInfo:%{public}@
-[SPGizmoPlugInManager sendInterfaceInfo:forAppIdentifier:]
/Library/Preferences/com.apple.UIKit
UIPreferredContentSizeCategoryName
%{public}s:%d: Unable to locate app bundle for %{public}@ to determine layout direction. (installed:%d)
-NSForceRightToLeftWritingDirection
%{public}s:%d: got reset for %{public}@, but this is only for WK1 apps
-[SPGizmoPlugInManager appDidResetContents:clientIdentifier:]
%{public}s:%d: serverIdentifier=%{public}@
-[SPGizmoPlugInManager appWillEnterForeground:]
-[SPGizmoPlugInManager appDidEnterBackground:]
%{public}s:%d: did begin Bar task: %{public}@ client:%{public}@, barTaskUUID=%{public}@
-[SPGizmoPlugInManager appDidBeginBackgroundBARTask:barTaskUUID:clientIdentifier:]
%{public}s:%d: Unable to find a native plugin for identifier %{public}@, barTaskUUID=%{public}@
%{public}s:%d: did end Bar task: %{public}@ client:%{public}@, barTaskUUID=%{public}@
-[SPGizmoPlugInManager appDidEndBackgroundBARTask:barTaskUUID:clientIdentifier:]
%{public}s:%d: This is here for protocol implementation, but should never be called. It was called for application=%{public}@, visibleVCID=%{public}@, clientIdentifier=%{public}@, barTaskUUID=%{public}@
-[SPGizmoPlugInManager app:handleWatchTaskKeys:reasonForSnapshot:visibleVCID:barTaskUUID:clientIdentifier:]
%{public}s:%d: serverIdentifier=%{public}@, clientIdentifier=%{public}@
-[SPGizmoPlugInManager notificationUIDidBecomeActive:clientIdentifier:]
-[SPGizmoPlugInManager notificationUIWillResignActive:clientIdentifier:]
%{public}s:%d: extension -> app sendData:%d, identifier:%{public}@ clientIdentifiers:%{public}@
-[SPGizmoPlugInManager sendData:identifier:clientIdentifiers:]
%{public}s:%d: appIdentifier=%{public}@, handlesBGTasks=%d
-[SPGizmoPlugInManager extensionDelegate:handlesBGTasksDidChange:]
%{public}s:%d: We were asked for notification %{public}@ for a WK2 app, but this should only ever be called for WK1 apps
-[SPGizmoPlugInManager fetchNotificationForNotificationID:completion:]
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
nativePlugInIdentifiers
T@"NSMutableArray",&,N,V_nativePlugInIdentifiers
nonNativePluginIdentifiers
T@"NSMutableArray",&,N,V_nonNativePluginIdentifiers
sendQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_sendQueue
pluginCacheQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_pluginCacheQueue
object
objects
T@"NSMutableArray",&,N,V_objects
cacheIdentifier
permanentCache
transientCache
-[SPProtoCacheSyncData writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-879.1.2/Generated/SPProtoCacheSyncData.m
nil != self->_cacheIdentifier
self->_permanentCache != nil
self->_transientCache != nil
T@"NSString",&,N,V_cacheIdentifier
T@"SPProtoCacheAssets",&,N,V_permanentCache
T@"SPProtoCacheAssets",&,N,V_transientCache
com.apple.watchkit.errors
SPErrorNoErrorMessage
SPErrorUnknownMessage
SPErrorBadGizmoAppURLMessage
SPErrorAppURLMessage
SPErrorApplicationIconNotFoundMessage
SPErrorInvalidBundleNoGizmoBinaryMessage
SPErrorMissingCompanionAppIdentifierMessage
SPErrorApplicationVerificationMessage
SPErrorHostPrincipalForPluginNotFoundMessage
SPErrorFailedToTerminateGizmoAppMessage
SPErrorPlistToDataErrorMessage
SPErrorGizmoInstallNeverFinishedErrorMessage
SPErrorGizmoLaunchCanceledErrorMessage
SPErrorDeviceIsLockedMessage
SPErrorBuildAndRunLaunchFailedCantFindApplicationMessage
SPErrorInstallationErrorMessage
SPErrotInstallationErrorPluginNotFoundMessage
SPErrorInstallationErrorIncorrectPluginURLMessage
SPErrorInstallationErrorMissingWatchAppBundleURLMessage
SPErrorInstallationErrorCantCreateStagingDirectoryMessage
SPErrorInstallationErrorMissingCFBundleDisplayNameMessage
SPErrorInstallationErrorMissingCFBundleNameMessage
SPErrorInstallationErrorMissingInfoDictionaryMessage
SPErrorInstallationErrorCantDetermineSizeOfFileToInstallMessage
SPErrorInstallationErrorBOMCopierFailedMessage
SPErrorInstallationErrorMissingIconsFromInfoPListMessage
SPErrorInstallationErrorFailedToSendAllChunksMessage
SPErrorInstallationErrorMissingFileToTransferMessage
SPErrorInstallationErrorTriedToReadNonExistentDataMessage
SPErrorInstallationErrorFailedToSerializeInstallPacketMessage
SPErrorInstallationErrorUnknownBetaApplicationMessage
SPErrorInstallationErrorEmptyProfileDataMessage
SPErrorInstallationErrorInvalidEntitlementsMessage
SPErrorBuildAndRunLaunchFailedGlancesNotSupportedMessage
SPErrorWK1AppsCantReceiveContextsMessage
SPErrorAudioPlaybackErrorMessage
SPErrorAudioPLaybackConnectionLostMessage
IDS no space error
PKPlugin beginUsing: never called back
Secure transport required, but no first unlock yet.
Profile removal  error.
Profile install  error.
WatchKit app not found.
%{public}s:%d: launching app with identifier %{public}@, launchMode %{public}@, launchEnv %{public}@, launchArgs %{public}@
-[SPGizmoAppLauncher launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:completion:]
%{public}s:%d: got error %{public}@ launching %{public}@
-[SPGizmoAppLauncher launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:completion:]_block_invoke
v12@?0B4@"NSError"8
%{public}s:%d: Glances are no longer supported
v8@?0B4
-[SPGizmoAppLauncher _launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:completion:]
CLKRemoteComplicationReloadDarwinNotification
%{public}s:%d: Got nil bundleProxy.cacheGUID for %{public}@
%{public}s:%d: launching app %{public}@ with openApplicationOptions %{public}@
v8@?0@"NSError"4
%{public}s:%d: identifier=%{public}@, processIsRunning=%d
-[SPGizmoAppLauncher terminateAppWithIdentifier:completion:]
TERM-%@-%@
%{public}s:%d: Acquired termination assertion for app with bundleID %{public}@, assertionName=%{public}@, processWasRunning=%d
-[SPGizmoAppLauncher terminateAppWithIdentifier:completion:]_block_invoke
%{public}s:%d: Failed to acquire termination assertion for app with bundleID %{public}@, assertionName=%{public}@, processWasRunning=%d, error=%{public}@
mostRecentLaunchedAppIdentifier
T@"NSString",C,N,V_mostRecentLaunchedAppIdentifier
mostRecentLaunchedAppMode
T@"NSString",C,N,V_mostRecentLaunchedAppMode
spUtils_localizedStringForSystemLanguage
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-879.1.2/SockPuppetCommon/SPUtils.m
[[NSLocale preferredLanguages] firstObject] != nil
SIMULATOR_ROOT
Localizable
%{public}s:%d: Failed to localize key "%{public}@" in bundle at %{public}@. bundleExists=%d
 [%013.06f]
CFBundleIdentifier
v12@?0@"LSBundleProxy"4^B8
B16@?0@"LSPlugInKitProxy"4I8^B12
%{public}s:%d: Posting %{public}@
spUtils_postDarwinNotificationOfActiveUIStateChange
SPFontAttributes
SPFont
supportsSecureCoding
TB,R
font
T@"UIFont",&,N,V_font
strings
com.apple.demo-settings
StoreDemoMode
FProgramNumber
%{public}s:%d: Demo mode enabled = %d, Demo program number = %d
DemoProgramNumber_block_invoke
Unable to find class %s
/System/Library/Frameworks/UIKit.framework/UIKit
LSApplicationWorkspace
/System/Library/Frameworks/MobileCoreServices.framework/MobileCoreServices
LSApplicationProxy
UIFont
UIFontDescriptor
%{public}s:%d: failed to serialize spList
+[SPIDSProtobuf protobufWithSPPlist:identifier:]
%{public}s:%d: SPProtoSerializerTypeString, text field is empty
+[SPProtoSerializer dictionaryWithSPPlist:]
%{public}s:%d: SPProtoSerializerTypeData, object field is empty
%{public}s:%d: SPProtoSerializerTypeObject, object field is empty
+[SPProtoSerializer arrayWithSPPlist:]
T@"NSString",&,N,V_key
state
TI,N,V_state
size
TI,N,V_size
accessDate
Td,N,V_accessDate
assets
T@"NSMutableArray",&,N,V_assets
T@"SPAssetCacheAssets",&,N,V_permanentCache
T@"SPAssetCacheAssets",&,N,V_transientCache
messageType
cacheType
assetKey
gizmoCacheIdentifier
assetData
syncData
Ti,N,V_messageType
Ti,N,V_cacheType
hasAssetKey
T@"NSString",&,N,V_assetKey
hasGizmoCacheIdentifier
T@"NSString",&,N,V_gizmoCacheIdentifier
hasAssetData
T@"NSData",&,N,V_assetData
hasSyncData
T@"SPProtoCacheSyncData",&,N,V_syncData
appServer
T@"SPGizmoAppServer",R,N,V_appServer
connection
T@"NSXPCConnection",R,N,V_connection
uuid
T@"NSUUID",R,N,V_uuid
/Library/Caches/
com.apple.watchkit.imagecache
-[SPGizmoCacheManager cacheDirectory]_block_invoke
%{public}s:%d: failed to delete cache, error: %{public}@
-[SPGizmoCacheManager deleteCache:]
%{public}s:%d: cache id: %{public}@, type: %d, asset key: %{public}@
-[SPGizmoCacheManager getData:cacheIdentifier:completion:]
%{public}s:%d: image not found for cache id: %{public}@, asset key: %{public}@
-[SPGizmoCacheManager addData:cacheIdentifier:completion:]
%{public}s:%d: failed to delete asset at: %{public}@, error: %{public}@
%{public}s:%d: failed to write asset at: %{public}@, error: %{public}@
-[SPGizmoCacheManager deleteData:cacheIdentifier:completion:]
%{public}s:%d: cache id: %{public}@, type: %d
-[SPGizmoCacheManager clearAllCachedImages:cacheIdentifier:completion:]
%{public}s:%d: cache id: %{public}@
-[SPGizmoCacheManager setupCacheWithIdentifier:completion:]_block_invoke
%{public}s:%d: error, permCache == nil, cache id: %{public}@
%{public}s:%d: error, transCache == nil, cache id: %{public}@
%{public}s:%d: should not be called with completion
%{public}s:%d: done, cache id: %{public}@
%{public}s:%d: failed to create directory at: %{public}@, error: %{public}@
-[SPGizmoCacheManager cacheAssets:cacheType:cacheIdentifier:]
%{public}s:%d: contentsOfDirectoryAtURL failed at: %{public}@, error: %{public}@
%{public}s:%d: NSURLContentModificationDateKey failed at: %{public}@, for: %{public}@, error: %{public}@
%{public}s:%d: NSURLFileSizeKey failed at: %{public}@, for: %{public}@, error: %{public}@
%{public}s:%d: removeItemAtPath failed at: %{public}@, error: %{public}@
%{public}s:%d: SPProtoSerializer failed
-[SPGizmoCacheManager sendCacheReply:cacheIdentifier:]
%{public}s:%d: sendPlist, sendPlist failed, error : %{public}@
-[SPGizmoCacheManager sendCacheReply:cacheIdentifier:]_block_invoke
v8@?0@"NSDictionary"4
companionAppServer
T@"SPCompanionAppServer",W,V_companionAppServer
-[SPProtoCacheAsset writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-879.1.2/Generated/SPProtoCacheAsset.m
nil != self->_key
TQ,N,V_size
com.apple.private.alloy.sockpuppet
com.apple.private.alloy.sockpuppet.classd
com.apple.companionappd
com.apple.gizmoappd
com.apple.sockpuppet.activeComplications
com.apple.sockpuppet.complications.updated
com.apple.sockpuppet.extensionActiveUIStateDidChange
com.apple.sockpuppet.runningWatchKitAppsDidChange
lgbl
activeComplications
com.apple.watchkit
WKAppBundleIdentifier
WKWatchKitVersion
/System/Library/Frameworks/WatchKit.framework
appStateOwnedBySystem
workout
btSupport
type
objectData
receiver
-[SPProtoSockPuppetIDSObject writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/SockPuppet_Sim/SockPuppet-879.1.2/Generated/SPProtoSockPuppetIDSObject.m
nil != self->_objectData
Ti,N,V_type
T@"NSData",&,N,V_objectData
hasReceiver
T@"NSString",&,N,V_receiver
contextData
context
TI,R,N
T@"NSDictionary",R,N
.PolL
.idx
.sgd
.egd
.bgd
action
WK_APP_LAUNCHED_BY_XCODE
default
WKBackgroundModes
workout-processing
3cbtk
active
NativeComplications
ExtDidBeginUsing
Tl,N,V_messageType
TI,N,V_cacheType
T@"SPAssetCacheSyncData",&,N,V_syncData
error
TI,N,V_error
subtype
cacheMessage
text
ndouble
nfloat
nint64
nint32
nuint64
nuint32
nbool
hasSubtype
Ti,N,V_subtype
hasCacheMessage
T@"SPProtoCacheMessage",&,N,V_cacheMessage
hasKey
hasText
T@"NSString",&,N,V_text
hasNdouble
Td,N,V_ndouble
hasNfloat
Tf,N,V_nfloat
hasNint64
Tq,N,V_nint64
hasNint32
Ti,N,V_nint32
hasNuint64
TQ,N,V_nuint64
hasNuint32
TI,N,V_nuint32
hasNbool
TB,N,V_nbool
hasObject
T@"NSData",&,N,V_object
com.apple.companionappd.transportMessagesAccess
com.apple.watchkit.transportSend
com.apple.companionappd.retainedIDSMessageContexts
%{public}s:%d: we will try to use wifi
-[SPTransport enableWiFiIfNeededForDataOfSize:]
%{public}s:%d: don't need wifi anymore
-[SPTransport disableWiFiIfNeededForDataOfSize:]
%{public}s:%d: Currently blocking outgoing messages on %{public}@
-[SPTransport _sendPlist:timeOut:securityType:retryExpiration:tryGeneration:withCompletion:]
com.apple.watchkit.blockedOutgoingMessage
%{public}s:%d: canSend == NO
%{public}s:%d: propertyList == nil
%{public}s:%d: dataWithPropertyListe error: (%{public}@)
%{public}s:%d: IDS outgoingData == nil
sendPlist1
application
length
%{public}s:%d: sendPlist, Error - could not send data on service (%{public}@) for %{public}@ (%{public}@)
%{public}s:%d: sent message with identifier %{public}@ for %{public}@ on %{public}@ service
secure
insecure
%{public}s:%d: Blocking further sends until %{public}@ succeeds or fails
completion
propertyList
timeOut
securityType
retryExpiration
lastSendAttemptDate
tryGeneration
-[SPTransport _sendData:forApplication:idsPriority:installer:withCompletion:]
sendData
%@.installer
%{public}s:%d: Error - could not send data on service (%{public}@) for %{public}@ (%{public}@)
%{public}s:%d: Got success sending message with identifier %{public}@ on %{public}@ service
-[SPTransport service:account:identifier:didSendWithSuccess:error:]_block_invoke
%{public}s:%d: Got failure sending message with identifier (%{public}@) on service (%{public}@). sends currently %{public}@ blocked until send of this message.%{public}@ error: %{public}@
ARE NOT
 Unblocking now.
%{public}s:%d: identifier (%{public}@), serviceName (%{public}@), success: %d error, domain: %{public}@, code: %ld
%{public}s:%d: Error - cannot find completion block for (%{public}@) serviceName: (%{public}@)
%{public}s:%d: Error - cannot find message for (%{public}@) serviceName: (%{public}@)
%{public}s:%d: 
-[SPTransport serviceSpaceDidBecomeAvailable:]
%{public}s:%d: received data msg with identifier %{public}@ on %{public}@ service
-[SPTransport service:account:incomingData:fromID:context:]
%{public}s:%d: IDS incomingData == nil,  account: %{public}@, serviceName: %{public}@, fromID: %{public}@, context: %{public}@
-[SPTransport _sendProtobuf:sender:timeOut:securityType:retryExpiration:tryGeneration:withCompletion:]
%{public}s:%d: isXcodeCommand, setting IDSSendMessageOptionBypassDuetKey=YES
sendPlist2
%{public}s:%d: # # # # %{public}@ size=%d
sender
protobuf
%{public}s:%d: First unlock was %1.0f seconds ago (less than %1.0f seconds), so saving for possible resend upon failure
-[SPTransport saveForPossibleResend:]
%{public}s:%d: received protobuf msg with identifier %{public}@ on secure service
-[SPTransport incomingSecureProtobuf:]
%{public}s:%d: received protobuf msg with identifier %{public}@ on insecure service
-[SPTransport incomingInsecureProtobuf:]
-[SPTransport incomingProtobuf:]
%{public}s:%d: %lu retained IDSMessageContexts
-[SPTransport temporarilyRetainIDSMessageContext:]_block_invoke_2
%{public}s:%d: Got data protection class send failure, but we've done first unlock. Giving up after %1.0f seconds
-[SPTransport handleDataProtectionSendFailureOrRetryFailureOnService:account:identifier:error:]
%{public}s:%d: Got error re-trying to send the message we're blocked on, but we've done first unlock. Giving up after %1.0f seconds. %{public}@
%{public}s:%d: Got data protection class send failure, but we've done first unlock. Will try again in %1.0f seconds
%{public}s:%d: Got error re-trying to send the message we're blocked on, but we've done first unlock. Will try again in %1.0f seconds. %{public}@
%{public}s:%d: we were blocked on %{public}@ and it %{public}@. unblocking
-[SPTransport removeOutgoingMessageBlockIfIdentiferMatches:sendError:]
succeeded
failed with error %@
%{public}s:%d: flushing _blockedOutgoingMessagesQueue
secureRemoteService
T@"IDSService",&,V_secureRemoteService
insecureRemoteService
T@"IDSService",&,V_insecureRemoteService
delegate
T@"<SPTransportDelegate>",&,V_delegate
messages
T@"NSMutableDictionary",&,V_messages
messagesAccessQueue
T@"NSObject<OS_dispatch_queue>",&,V_messagesAccessQueue
canSend
TB,V_canSend
wifiThresholdCount
Tq,V_wifiThresholdCount
wifiEnabled
TB,V_wifiEnabled
wifiTimer
T@"NSObject<OS_dispatch_source>",&,N,V_wifiTimer
retainedIDSMessageContextsQueue
T@"NSObject<OS_dispatch_queue>",&,V_retainedIDSMessageContextsQueue
retainedIDSMessageContexts
T@"NSMutableArray",&,N,V_retainedIDSMessageContexts
outgoingMessageBlockedUntil
T@"NSString",&,V_outgoingMessageBlockedUntil
blockedOutgoingMessagesQueue
T@"NSObject<OS_dispatch_queue>",&,V_blockedOutgoingMessagesQueue
T@"NSObject<OS_dispatch_queue>",&,V_sendQueue
IDSSimulatorSupportSetSimulatedDeviceNetworkingState
/System/Library/PrivateFrameworks/IDSSimulatorSupport.framework/IDSSimulatorSupport
block
expirationDate
%{public}s:%d: ******* SPGizmoAppServer, init started
-[SPGizmoAppServer init]
com.apple.gizmoappd.appmanager
com.apple.gizmoappd.queue
com.apple.gizmoappd.lastAppResetDatesAccess
com.apple.watchkit.timingTestQueue
com.apple.notifyd.matching
v8@?0@"NSObject<OS_xpc_object>"4
com.apple.distnoted.matching
com.apple.LaunchServices.applicationRegistered
com.apple.LaunchServices.applicationUnregistered
NCSSettingsChangedNotification
com.apple.language.changed
v8@?0i4
com.apple.gizmoappd.appServerProxies
%{public}s:%d: Running in F5 demo mode
%{public}s:%d: Running in F201 demo mode
%{public}s:%d: SPGizmoAppServer - init done
%{public}s:%d: ======== Gizmo Daemon gizmoappd
-[SPGizmoAppServer _setupSignalHandlers]_block_invoke
%{public}s:%d: -------- Installed Applications
%{public}s:%d: %{public}@
%{public}s:%d: -------- XPC Connected Applications
%{public}s:%d: --------
%{public}s:%d: *** Could not set up signal handler for %d.
-[SPGizmoAppServer _setupSignal:handler:]
B16@?0@"NSDictionary"4I8^B12
%{public}s:%d: Got connection request on applicationListener from %{public}@ with pid %d before we were paired. Refusing
-[SPGizmoAppServer listener:shouldAcceptNewConnection:]
%{public}s:%d: connection interrupted/invalidated early
-[SPGizmoAppServer listener:shouldAcceptNewConnection:]_block_invoke
com.apple.gizmoappd.appmanager.allow
%{public}s:%d: Got error %{public}@ while checking entitlement for process %{public}@ with pid %d
%{public}s:%d: process %{public}@ with pid %d is not entitled. Rejecting connection
%{public}s:%d: Accepting connection on applicationManagerListener from %{public}@ with PID %d
%{public}s:%d: applicationManagerListener connection interrupted
%{public}s:%d: applicationManagerListener connection invalidated
%{public}s:%d: Got connection on applicationListener from %{public}@ with PID %d for %{public}@ with clientIdentifier %{public}@, extensionDidBeginUsingResults %{public}@
-[SPGizmoAppServer receiveServerIdentifier:clientIdentifier:extensionDidBeginUsingResults:connection:appServerProxyUUID:]
%{public}s:%d: connection interrupted - %{public}@
-[SPGizmoAppServer receiveServerIdentifier:clientIdentifier:extensionDidBeginUsingResults:connection:appServerProxyUUID:]_block_invoke
%{public}s:%d: connection invalidated - %{public}@
%@:%@
%{public}s:%d: registering connection - %{public}@
-[SPGizmoAppServer updateLocalConnectionsWithConnection:withIdentifier:clientIdentifier:extensionDidBeginUsingResults:]_block_invoke
%{public}s:%d: started BKSApplicationStateMonitor for native WK app %{public}@
%{public}s:%d: app with bundle ID %{public}@ was terminated.
-[SPGizmoAppServer updateLocalConnectionsWithConnection:withIdentifier:clientIdentifier:extensionDidBeginUsingResults:]_block_invoke_3
%{public}s:%d: Got appStateMonitor update for %{public}@ with state %x: %{public}@
%{public}s:%d: delayed block for %{public}@
%{public}s:%d: GizD:->IDS propertyList=%{private}@
-[SPGizmoAppServer sendPlist:securityType:]
%{public}s:%d: sendPlist, spPlistWithDictionary failed
%{public}s:%d: Got WatchKit error %{public}@
-[SPGizmoAppServer sendSPPlist:receiver:securityType:]_block_invoke
%{public}s:%d: got error %{public}@ for receiver %{public}@
%{public}s:%d: Got IDSErrorTypeIncompatibleDestinationVersion error %{public}@. Killing %{public}@
Got IDSErrorTypeIncompatibleDestinationVersion error %@. Killing %@
%{public}s:%d: Got continous send errors for more than %1.0f secs. Killing %{public}@
Got continous send errors for more than %1.0f secs. Killing %@
%{public}s:%d: sendSPPlist failed and it's been more than %1.0f seconds since the last reset of %{public}@, so resetting app contents
%{public}s:%d: sendSPPlist failed, but it's been less than %1.0f seconds since the last reset of %{public}@, so just dropping the failure
%{public}s:%d: We shouldn't be passed a NULL block here
-[SPGizmoAppServer performBlockForClientIdentifiers:serverIdentifier:block:]
%{public}s:%d: no local connection for %{public}@. will hold data for %1.0f secs to try for delivery when connection comes up
-[SPGizmoAppServer performBlockForClientIdentifiers:serverIdentifier:block:]_block_invoke
%{public}s:%d: GizD:->GizF application=%{public}@ clientIdentifiers=%{public}@ data=%{private}@
-[SPGizmoAppServer sendData:orPlist:serverIdentifier:clientIdentifiers:reply:]_block_invoke
%{public}s:%d: plist variant doesn't support a reply
-[SPGizmoAppServer sendData:orPlist:serverIdentifier:clientIdentifiers:reply:]_block_invoke_2
v12@?0@"NSXPCConnection"4@"NSString"8
%{public}s:%d: This should only be called for WK1 apps. Got for %{public}@
-[SPGizmoAppServer sendDataToCompanion:serverIdentifier:clientIdentifier:]
%{public}s:%d: GizD:<-GizF serverIdentifier=%{public}@ clientIdentifier=%{public}@ didLaunchSuspended=%d
-[SPGizmoAppServer appDidFinishLaunching:clientIdentifier:didLaunchSuspended:]
%{public}s:%d: started BKSApplicationStateMonitor for WK1 app %{public}@
-[SPGizmoAppServer appDidFinishLaunching:clientIdentifier:didLaunchSuspended:]_block_invoke
%{public}s:%d: app with bundle ID %{public}@ was terminated. Requesting termination of extension on companion
-[SPGizmoAppServer appDidFinishLaunching:clientIdentifier:didLaunchSuspended:]_block_invoke_3
%{public}s:%d: GizD:<-GizF serverIdentifier=%{public}@ clientIdentifier=%{public}@
-[SPGizmoAppServer appDidResetContents:clientIdentifier:]
%{public}s:%d: App reset is only for WK1 apps. got reset for %{public}@
-[SPGizmoAppServer appDidBecomeActive:clientIdentifier:]
%{public}s:%d: only for WK1 apps. got for %{public)@
-[SPGizmoAppServer appWillResignActive:clientIdentifier:]
%{public}s:%d: Should only be called for native extensions. Called for %{public}@
-[SPGizmoAppServer appWillEnterForeground:]
-[SPGizmoAppServer appDidEnterBackground:]
%{public}s:%d: GizD:<-GizF serverIdentifier=%{public}@ clientIdentifier=%{public}@, barTaskUUID=%{public}@
-[SPGizmoAppServer appDidBeginBackgroundBARTask:barTaskUUID:clientIdentifier:]
%{public}s:%d: Background update tasks are only supported on Wk3
-[SPGizmoAppServer appDidEndBackgroundBARTask:barTaskUUID:clientIdentifier:]
%{public}s:%d: GizD<-GizF application=%{public}@, barTaskUUID=%{public}@
-[SPGizmoAppServer app:handleWatchTaskKeys:reasonForSnapshot:visibleVCID:barTaskUUID:clientIdentifier:]
%{public}s:%d: Called Wk2 app %{public}@. this should never have happened. Ignoring
-[SPGizmoAppServer notificationUIDidBecomeActive:clientIdentifier:]
-[SPGizmoAppServer notificationUIWillResignActive:clientIdentifier:]
-[SPGizmoAppServer didActivateDataConnection:clientIdentifier:]
%{public}s:%d: only for WK1 apps. got for %{public)@ %{public}@
-[SPGizmoAppServer willDeactivateDataConnection:clientIdentifier:]
-[SPGizmoAppServer duetAppDidBecomeActive:clientIdentifier:]
-[SPGizmoAppServer duetAppWillResignActive:clientIdentifier:]
%{public}s:%d: sending SPGizmoAppStillActivePingCommand for %{public}@
-[SPGizmoAppServer startGizmoAppStillActivePingTimer:]_block_invoke_4
dummy
%{public}s:%d: ERROR: failed to add pass (%{public}@)
-[SPGizmoAppServer addPassesData:serverIdentifier:clientIdentifier:]_block_invoke
%{public}s:%d: ERROR: SPProtoSerializer spPlistWithDictionary failed
-[SPGizmoAppServer sockPuppetDataFromDictionary:]
%{public}s:%d: ERROR: SPProtoSockPuppetMessage data failed
%{public}s:%d: Error - could not initialize protoPlist
-[SPGizmoAppServer handleIncomingProtoPlist:]
%{public}s:%d: Error - could not deserialize protoPlist
incomingData
%{public}s:%d: Error - could not deserialize data (%{public}@)
-[SPGizmoAppServer incomingData:]
%{public}s:%d: IDS > GizD plist=%{private}@
-[SPGizmoAppServer handleIncomingPlist:]
SPUserNotificationAddressBook
SPUserNotificationCalendar
SPUserNotificationLocation
SPUserNotificationPhotos
SPUserNotificationReminders
SPUserNotificationMicrophone
SPUserNotificationNotification
/System/Library/PrivateFrameworks/SockPuppetGizmo.framework
%{public}s:%d: Companion daemon restarted - resetting gizmo apps
-[SPGizmoAppServer notifyClientsCompanionDaemonRestarted]
%{public}s:%d: Companion app extension died - killing gizmo app %{public}@
-[SPGizmoAppServer notifyClientsExtensionTerminated:]
%{public}s:%d: received notification of extension %{public}@ terminated less than 1.0 secs ago. ignoring
-[SPGizmoAppServer notifyClientsExtensionTerminated:]_block_invoke
Extension terminated - killing gizmo apps
%{public}s:%d: Couldn't determine clientIdentifier from connectionIdentifier %{public}@
-[SPGizmoAppServer wakeAppForBackgroundUIUpdate:]_block_invoke
-AppleLanguages
-AppleTextDirection
-AppleLocale
-NSDoubleLocalizedStrings
%{public}s:%d: Successfully launched app with identifier %{public}@
-[SPGizmoAppServer launchApplication:withTransactionID:backlightTime:launchMode:launchEnv:launchArgs:]_block_invoke_3
%{public}s:%d: Failed to launch app with identifier %{public}@. Got error %{public}@
%{public}s:%d: Successfully terminated app with identifier %{public}@
-[SPGizmoAppServer terminateApplication:withTransactionID:]_block_invoke
%{public}s:%d: Failed to terminate app with identifier %{public}@
%{public}s:%d: app with identifier is running status = %d
-[SPGizmoAppServer getApplicationRunningStatus:withTransactionID:]_block_invoke
%{public}s:%d: requestFirstUnlockStatus
-[SPGizmoAppServer requestFirstUnlockStatus]
%{public}s:%d: calling completion for appBundleID %{public}@ with handlesBackgroundTasks=%ld
-[SPGizmoAppServer fetchExtensionCapabilitiesForAppBundleID:completion:]
%{public}s:%d: sending context to app %{public}@
-[SPGizmoAppServer sendContextData:toAppWithIdentifier:completion:]
%{public}s:%d: received response from %{public}@ : %{public}@ from action %{public}@
-[SPGizmoAppServer sendContextData:toAppWithIdentifier:completion:]_block_invoke
v8@?0@"BSActionResponse"4
%{public}s:%d: Successfully sent contextData to %{public}@
%{public}s:%d: Failed to send contextData to %{public}@: %{public}@
%{public}s:%d: %{public}@ is a WatchKit 1 app and can't receive contexts
appBundleIDs
interestedStateTypes
%{public}s:%d: darwinNotification=%{public}@, appBundleIDs=%{public}@, interestedStateTypes=%lu
-[SPGizmoAppServer registerWKAppUIStateObserver:forBundleIDs:interestedStateTypes:]
%{public}s:%d: Got null callback for observer %{public}@
-[SPGizmoAppServer fetchWKAppUIStateInfoForObserver:callback:]
%{public}s:%d: Got nil appBundleID
-[SPGizmoAppServer addBundleID:forWKAppUIStateObserver:]
%{public}s:%d: Added %{public}@ for %{public}@ wkActiveUIStateObservers()=%{public}@
-[SPGizmoAppServer addBundleID:forWKAppUIStateObserver:]_block_invoke
-[SPGizmoAppServer removeBundleID:forWKAppUIStateObserver:]
%{public}s:%d: Removed %{public}@ for %{public}@ wkActiveUIStateObservers()=%{public}@
-[SPGizmoAppServer removeBundleID:forWKAppUIStateObserver:]_block_invoke
%{public}s:%d: %{public}@ changed. Posting notifs %{public}@
-[SPGizmoAppServer uiActiveStateDidChange:uiActivateStateType:]
keys:
 data, len: %lu, %@
 %@: %@,
 %@ : ***
%{public}s:%d: unknown proto data
-[SPGizmoAppServer decodeOutData:]
can't decode data
 %@,
%{public}s:%d: unlocked=%d
-[SPGizmoAppServer _notifyFirstUnlockStatus:]
-[SPGizmoAppServer _notifyComplicationFirstUnlockChanged:]_block_invoke
%{public}s:%d: Error: Missing NSXPCConnection for key %{public}@
UserInfo
%{public}s:%d: Didn't get any user info from applicationRegistered
-[SPGizmoAppServer applicationIDsFromLaunchServicesXPCEvent:isPlaceHolder:]
%{public}s:%d: User info was not a dictionary for applicationRegistered
%{public}s:%d: Failed to convert user info XPC dictionary to CF dictionary for applicationRegistered
bundleIDs
isPlaceholder
%{public}s:%d: received kHKHealthDaemonActiveWorkoutServersDidUpdateNotification
-[SPGizmoAppServer activeWorkoutStatusDidChange]
%{public}s:%d: appIdentifier is %{public}@, _currentWKWorkoutAppBundleID is %{public}@
-[SPGizmoAppServer activeWorkoutStatusDidChange]_block_invoke
v12@?0@"NSString"4@"NSError"8
applicationListener
T@"NSXPCListener",&,V_applicationListener
applicationManagerListener
T@"NSXPCListener",&,V_applicationManagerListener
localConnections
T@"NSMutableDictionary",&,V_localConnections
pendingDatasForDroppedConnections
T@"NSMutableDictionary",&,N,V_pendingDatasForDroppedConnections
gizmoApplicationsUpdateTimer
T@"NSObject<OS_dispatch_source>",&,N,V_gizmoApplicationsUpdateTimer
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
currentActiveApp
T@"NSString",C,V_currentActiveApp
dateOfFirstContinuousSendError
T@"NSDate",&,N,V_dateOfFirstContinuousSendError
lastAppResetDates
T@"NSMutableDictionary",&,N,V_lastAppResetDates
lastAppResetDatesAccessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_lastAppResetDatesAccessQueue
lastExtensionTerminatedDates
T@"NSMutableDictionary",&,N,V_lastExtensionTerminatedDates
gizmoAppStillActivePingTimers
T@"NSMutableDictionary",&,N,V_gizmoAppStillActivePingTimers
appStateMonitors
T@"NSMutableDictionary",&,N,V_appStateMonitors
unlockedSinceBoot
TB,N,V_unlockedSinceBoot
companionCapabilities
T@"NSDictionary",&,V_companionCapabilities
companionCapabilitiesSema
T@"NSObject<OS_dispatch_semaphore>",&,V_companionCapabilitiesSema
currentWKWorkoutAppBundleID
T@"NSString",C,N,V_currentWKWorkoutAppBundleID
appServerProxies
T@"NSMutableDictionary",&,N,V_appServerProxies
appServerProxiesQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_appServerProxiesQueue
timingTest_IDSSendTime
Td,N,V_timingTest_IDSSendTime
timingTest_IDSSendSize
TI,N,V_timingTest_IDSSendSize
timingTest_IDSReceiveTime
Td,N,V_timingTest_IDSReceiveTime
timingTest_lastServerIdentifier
T@"NSString",&,N,V_timingTest_lastServerIdentifier
timingTest_lastClientIdentifier
T@"NSArray",&,N,V_timingTest_lastClientIdentifier
timingTest_queue
T@"NSObject<OS_dispatch_queue>",&,N,V_timingTest_queue
%{public}s:%d: %{public}@ posted SPComplicationVendorsDidChangeNotification due to the set of installed applications changing
_handleApplicationsChangedNotificaiton
SPComplicationVendorsDidChangeNotification
%{public}s:%d: %{public}@ posted SPComplicationVendorsDidChangeNotification due to settings change
_handleComplicationSettingsChangeNotification
%{public}s:%d: %{public}@ posted SPComplicationVendorsDidChangeNotification due to language change
_handleLangueChangedNotification
BSBundleIDForXPCConnection
/System/Library/PrivateFrameworks/BaseBoard.framework/BaseBoard
com.apple.watchkit.wkActiveUIStateObservers
SP-transport
com.apple.watchkit.powerlog.queue
count
eventsByBundleID
T@"NSMutableDictionary",&,V_eventsByBundleID
logUpdateTimer
T@"NSObject<OS_dispatch_source>",&,N,V_logUpdateTimer
logQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_logQueue
cmsg
SPApplicationsDomain
com.apple.watchkit.applicationManagerConnectionsQueue
%{public}s:%d: Found application state in %{public}@ even though we are no longer in charge of it.
+[SPGizmoAppManager removeAllStateFromDefaultsIfNeeded]
%{public}s:%d: Clearing out the installation state as it is now being tracked by the System.
PlugIns
self ENDSWITH '.appex'
Info.plist
%{public}s:%d: Semaphore timed out! Please file a radar.
-[SPGizmoAppManager setActiveComplications:]
%{public}s:%d: %{public}@ syncing domain %{public}@ with bundleIDs%{public}@
-[SPGizmoAppManager activeComplicationsWithCompletion:]
%{public}s:%d: %{public}@ fetching domain %{public}@ returned bundleIDs %{public}@
%{public}s:%d: applicationWithBundleIDsWereInstalled - Processing apps: %{public}@
-[SPGizmoAppManager applicationsWithBundlefIDsWereInstalled:]
%{public}s:%d: applicationsWithBundlefIDsWereUninstalled - Processing apps: %{public}@
-[SPGizmoAppManager applicationsWithBundlefIDsWereUninstalled:]
NSExtensionAttributes
applicationManagerConnections
T@"NSMutableDictionary",&,V_applicationManagerConnections
applicationManagerConnectionsQueue
T@"NSObject<OS_dispatch_queue>",&,V_applicationManagerConnectionsQueue
updateSema
T@"NSObject<OS_dispatch_semaphore>",&,V_updateSema
com.apple.watchkit.spdaemonmanager.transactionQueue
%{public}s:%d: calling xpc_transaction_begin()
-[SPDaemonManager beginTransaction]_block_invoke
%{public}s:%d: calling xpc_transaction_end()
-[SPDaemonManager endTransaction]_block_invoke
refCount
Ti,N,V_refCount
TB,N,V_active
transactionTimer
T@"NSObject<OS_dispatch_source>",&,N,V_transactionTimer
transactionQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_transactionQueue
transactionObservers
T@"NSMutableSet",&,N,V_transactionObservers
extension_loading
bg_app_refresh
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
setIdentifier:
class
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
readFrom:
writeTo:
copyTo:
mergeFrom:
.cxx_destruct
identifier
_identifier
removeAllObjects
alloc
addObject:
count
objectAtIndex:
addPlayerItemIdentifiers:
countByEnumeratingWithState:objects:count:
playerItemIdentifiersCount
clearPlayerItemIdentifiers
playerItemIdentifiersAtIndex:
playerItemIdentifiersType
playerItemIdentifiers
setPlayerItemIdentifiers:
_playerItemIdentifiers
numberWithFloat:
rate
setRate:
_rate
setUpsertWithItems:
setDestroy:
setSetRate:
setReplaceCurrentItem:
setSetStatus:
setAdvanceToNextItem:
setAppendItem:
setRemoveItem:
setRemoveAllItems:
setSetCurrentItem:
hasUpsertWithItems
hasDestroy
hasSetRate
hasReplaceCurrentItem
hasSetStatus
hasAdvanceToNextItem
hasAppendItem
hasRemoveItem
hasRemoveAllItems
hasSetCurrentItem
upsertWithItems
destroy
setRate
replaceCurrentItem
setStatus
advanceToNextItem
appendItem
removeItem
removeAllItems
setCurrentItem
_advanceToNextItem
_appendItem
_destroy
_removeAllItems
_removeItem
_replaceCurrentItem
_setCurrentItem
_setRate
_setStatus
_upsertWithItems
setContainedIdentifier:
hasContainedIdentifier
containedIdentifier
_containedIdentifier
numberWithInt:
numberWithLongLong:
setErrorDomain:
setErrorDict:
hasIdentifier
setStatus:
setHasStatus:
hasStatus
hasErrorDomain
setErrorCode:
setHasErrorCode:
hasErrorCode
hasErrorDict
status
errorDomain
errorCode
errorDict
_errorCode
_errorDict
_errorDomain
_status
_has
setUpsertWithAsset:
setGetCurrentTime:
setNotifyTimeJumped:
setNotifyDidPlayToEndTime:
setNotifyFailedToPlayToEndTime:
setSetItemCurrentTime:
hasUpsertWithAsset
hasGetCurrentTime
hasNotifyTimeJumped
hasNotifyDidPlayToEndTime
hasNotifyFailedToPlayToEndTime
hasSetItemCurrentTime
upsertWithAsset
getCurrentTime
notifyTimeJumped
notifyDidPlayToEndTime
notifyFailedToPlayToEndTime
setItemCurrentTime
_getCurrentTime
_notifyDidPlayToEndTime
_notifyFailedToPlayToEndTime
_notifyTimeJumped
_setItemCurrentTime
_upsertWithAsset
numberWithDouble:
setURL:
setTitle:
setAlbumTitle:
setArtist:
setSandboxExtensionToken:
hasURL
setDuration:
setHasDuration:
hasDuration
hasTitle
hasAlbumTitle
hasArtist
hasSandboxExtensionToken
duration
title
albumTitle
artist
sandboxExtensionToken
_duration
_albumTitle
_artist
_sandboxExtensionToken
_title
_uRL
setUpsertWithMetaData:
hasUpsertWithMetaData
upsertWithMetaData
_upsertWithMetaData
setCurrentTime:
setHasCurrentTime:
hasCurrentTime
currentTime
_currentTime
setAsset:
setPlayerItem:
setQueuePlayer:
hasAsset
hasPlayerItem
hasQueuePlayer
asset
playerItem
queuePlayer
_asset
_playerItem
_queuePlayer
self
arrayWithObjects:count:
pathWithComponents:
defaultManager
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
objectForKeyedSubscript:
applicationProxyForIdentifier:
bundleIdentifier
initWithAppProxy:extensionProxy:
setObject:forKeyedSubscript:
handlesBackgroundTasksCacheDirectory
stringByAppendingPathComponent:
handlesBackgroundTasks
addObserver:forKeyPath:options:context:
bundleURL
bundleWithURL:
infoDictionary
isKindOfClass:
containsObject:
stringByAppendingString:
UTF8String
invalidate
removeObserver:forKeyPath:
dealloc
intValue
createFileAtPath:contents:attributes:
removeItemAtPath:error:
observeValueForKeyPath:ofObject:change:context:
setLastKnownPID:
_on_extensionQueue_setDoesNotHaveActiveAppConnection
native
processIdentifier
setClientConnection:
extensionIdentifier
setInterruptionHandler:
setInvalidationHandler:
removeObject:
sharedPlugInManager
isNativePlugin:
initialize
extensionWithAppIdentifier:create:
setHasActiveAppConnectionWithPid:
setDoesNotHaveActiveAppConnection
hasActiveAppConnection
lastKnownPID
addActiveNotificationClientIdentifier:
removeActiveNotificationClientIdentifier:
removeAllActiveClientIdientifiers
notificationUIActive
serverIdentifier
pluginURL
applicationDebugging
setApplicationDebugging:
backgroundUpdating
setBackgroundUpdating:
applicationRunningInBackground
setApplicationRunningInBackground:
creatingNotificationUI
setCreatingNotificationUI:
setHandlesBackgroundTasks:
activeNotificationClientIdentifiers
hasBGWorkoutProcessingInfoPlistEntry
launchEnv
setLaunchEnv:
launchArgs
setLaunchArgs:
applicationUIIsActive
setApplicationUIIsActive:
setHasActiveAppConnection:
appProxy
setAppProxy:
clientConnection
extensionQueue
setExtensionQueue:
_applicationDebugging
_backgroundUpdating
_applicationRunningInBackground
_creatingNotificationUI
_hasBGWorkoutProcessingInfoPlistEntry
_applicationUIIsActive
_hasActiveAppConnection
_lastKnownPID
_serverIdentifier
_extensionIdentifier
_pluginURL
_handlesBackgroundTasks
_activeNotificationClientIdentifiers
_launchEnv
_launchArgs
_appProxy
_clientConnection
_extensionQueue
setPlist:
setAudioFilePlayerMessage:
hasPlist
hasAudioFilePlayerMessage
plist
audioFilePlayerMessage
_audioFilePlayerMessage
_plist
array
pluginCacheQueue
sharedAppServer
setExtensionWithServerIdentifier:isDebugging:isNative:
remoteObjectProxy
setExtensionIsDebugging:isNative:
boolValue
dictionaryWithCapacity:
numberWithBool:
dictionaryWithObjects:forKeys:count:
numberWithUnsignedInteger:
standardUserDefaults
persistentDomainForName:
preferredContentSizeCategory:
isInstalled
localizations
preferredLanguages
preferredLocalizationsFromArray:forPreferences:
firstObject
isEqualToString:
layoutDirection:
uiActiveStateDidChange:uiActivateStateType:
length
objectAtIndexedSubscript:
sendData:serverIdentifier:clientIdentifiers:
sendData:orPlist:serverIdentifier:clientIdentifiers:reply:
errorWithCode:
extensionWithIdentifier:gotUnknownInterfaceController:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
sendDataToCompanion:serverIdentifier:clientIdentifier:
appDidFinishLaunching:clientIdentifier:didLaunchSuspended:
appDidResetContents:clientIdentifier:
appDidBecomeActive:clientIdentifier:
appWillResignActive:clientIdentifier:
appWillEnterForeground:
appDidEnterBackground:
appDidBeginBackgroundBARTask:barTaskUUID:clientIdentifier:
appDidEndBackgroundBARTask:barTaskUUID:clientIdentifier:
app:handleWatchTaskKeys:reasonForSnapshot:visibleVCID:barTaskUUID:clientIdentifier:
notificationUIDidBecomeActive:clientIdentifier:
notificationUIWillResignActive:clientIdentifier:
didActivateDataConnection:clientIdentifier:
willDeactivateDataConnection:clientIdentifier:
processCacheDictionary:serverIdentifier:completion:
processCacheDictionary:serverIdentifier:
startBacklightAssertion:clientIdentifier:reason:
renewBacklightAssertion:clientIdentifier:
releaseBacklightAssertion:clientIdentifier:
resetTimingInfo
retreiveTimingInfo:
addPassesData:serverIdentifier:clientIdentifier:
extensionDidBeginNotificationUICreation:
extensionDidEndNotificationUICreation:
extensionDelegate:handlesBGTasksDidChange:
receiveServerIdentifier:clientIdentifier:extensionDidBeginUsingResults:
duetAppDidBecomeActive:clientIdentifier:
duetAppWillResignActive:clientIdentifier:
sendCacheRequest:identifier:
sendData:identifier:clientIdentifiers:
sendData:identifier:clientIdentifiers:reply:
fetchNotificationForNotificationID:completion:
requestTimingData:timingMetaData:
launchCompanionAppForGizmoAppWithIdentifier:withUserInfoData:reply:
clearPluginCacheForIdentifier:
purgePlugInCache
appRemoteLaunchWithIdentifier:launchEnv:launchArgs:
appRemoteTerminateWithIdentifier:
removeLocalConnectionWithIdentifier:clientIdentifier:
updateLocalConnectionsWithConnection:withIdentifier:clientIdentifier:extensionDidBeginUsingResults:
app:activeWorkoutStatusDidChange:
isAppRunning:
fetchExtensionUIActiveStateForBundleID:uiIsActive:uiActiveInBackground:doingNotificationControllerCreation:
fetchExtensionCapabilitiesForAppBundleID:handlesBackgroundTasks:
appStateInfosForAppBundleIDs:
activeUIStateInfosForAppBundleIDs:interestedStateTypes:
sendInterfaceInfo:forAppIdentifier:
nativePlugInIdentifiers
setNativePlugInIdentifiers:
nonNativePluginIdentifiers
setNonNativePluginIdentifiers:
sendQueue
setSendQueue:
setPluginCacheQueue:
_nativePlugInIdentifiers
_nonNativePluginIdentifiers
_sendQueue
_pluginCacheQueue
receiveData:fromIdentifier:
receiveProtoData:fromIdentifier:
applicationDidTerminate:
applicationDidFinishConnecting:
applicationDidBecomeActive:
applicationWillResignActive:
applicationIsStillActive
applicationHandleWatchTaskKeys:reasonForSnapshot:visibleVCID:barTaskUUID:clientIdentifier:
receivePlist:fromIdentifier:
applicationWillEnterForeground:withVisibleViewControllerID:
applicationDidEnterBackground:withVisibleViewControllerID:
applicationUpdateState:suspendedUnderLock:clientIdentifier:
applicationBeginWorkout:clientIdentifier:
applicationDidReceiveNotification:clientIdentifier:withCompletionHandler:
receiveNativeComplicationRequest:completion:
replyTimingData:
receiveContextData:withCompletionHandler:
extensionHasForegroundGPU
extensionDoesNotHaveForegroundGPU:
dataInterfaceDidBecomeActive:
dataInterfaceWillResignActive:
extensionDidBeginUsingWithLaunchEnv:launchArgs:completion:
initWithCapacity:
objectsCount
clearObjects
objectType
objects
setObjects:
_objects
setCacheIdentifier:
setPermanentCache:
setTransientCache:
cacheIdentifier
permanentCache
transientCache
_cacheIdentifier
_permanentCache
_transientCache
errorWithDomain:code:userInfo:
userInfo
mutableCopy
domain
code
errorWithCode:additionalDescription:
isValidationErrorCode:
_launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:completion:
terminateAppWithIdentifier:completion:
sharedTileNavigationService
navigateToClockAnimated:completion:
addEntriesFromDictionary:
bundleProxyForIdentifier:
sequenceNumber
cacheGUID
UUIDString
sharedService
openApplication:options:withResult:
UUID
initWithBundleIdentifier:efficacy:name:withHandler:
sharedInstance
launchAppWithIdentifier:launchMode:backlightTime:launchEnv:launchArgs:completion:
getRunningStatusForAppWithIdentifier:completion:
mostRecentLaunchedAppIdentifier
setMostRecentLaunchedAppIdentifier:
mostRecentLaunchedAppMode
setMostRecentLaunchedAppMode:
_mostRecentLaunchedAppIdentifier
_mostRecentLaunchedAppMode
initWithBundleIDs:states:
applicationStateForApplication:
processInfo
initForWritingWithMutableData:
encodeObject:forKey:
finishEncoding
unarchiveObjectWithData:
stringWithUTF8String:
bundleWithPath:
sharedApplication
userInterfaceLayoutDirection
URLQueryAllowedCharacterSet
formUnionWithCharacterSet:
removeCharactersInString:
hasSuffix:
methodForSelector:
instanceMethodForSelector:
cStringUsingEncoding:
colorWithWhite:alpha:
colorWithRed:green:blue:alpha:
defaultWorkspace
watchKitVersion
enumerateBundlesOfType:block:
isWatchKitApp
plugInKitPlugins
protocol
indexOfObjectPassingTest:
setFont:
fontDescriptor
fontAttributes
font
decodeObjectForKey:
fontDescriptorWithFontAttributes:
fontWithDescriptor:size:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
unarchiver:cannotDecodeObjectOfClassName:originalClasses:
unarchiver:didDecodeObject:
unarchiver:willReplaceObject:withObject:
unarchiverWillFinish:
unarchiverDidFinish:
initWithFont:
_font
arrayWithObject:
pathForResource:ofType:inDirectory:forLocalization:
dictionaryWithContentsOfFile:
objectForKey:
localizedStringForKey:value:table:
rangeOfString:
substringFromIndex:
floatValue
substringToIndex:
hasPrefix:
colorWithAlphaComponent:
setObjectData:
setReceiver:
setType:
data
initWithProtobufData:type:isResponse:
cacheRequestWithProtoData:identifier:
protobufWithSPPlist:identifier:
toProto:
setCacheMessage:
initWithData:
type
cacheMessage
fromProto:
setKey:
objCType
setSubtype:
setNbool:
integerValue
setNint64:
unsignedIntegerValue
setNuint64:
charValue
setNint32:
shortValue
longValue
setNfloat:
doubleValue
setNdouble:
longLongValue
subtype
nbool
nint64
nuint64
numberWithUnsignedLongLong:
nint32
numberWithChar:
numberWithShort:
nfloat
ndouble
setText:
setObject:
spPlistWithDictionary:
spPlistWithArray:
protoSPObjectWithString:forKey:
protoSPObjectWithNumber:forKey:
protoSPObjectWithData:forKey:
protoSPObjectWithDictionary:forKey:
protoSPObjectWithArray:forKey:
protoSPObjectWithObject:forKey:
text
numberWithSPProtoSockPuppetObject:
object
arrayWithSPPlist:
dictionaryWithSPPlist:
dataWithObject:
objectWithData:
timeIntervalSinceReferenceDate
size
setSize:
state
setState:
accessDate
setAccessDate:
initWithName:size:state:accessDate:
_key
_state
_size
_accessDate
assets
addAssets:
addAsset:
setAssets:
_assets
setAssetKey:
setGizmoCacheIdentifier:
setAssetData:
setSyncData:
hasAssetKey
hasGizmoCacheIdentifier
hasAssetData
hasSyncData
messageType
setMessageType:
cacheType
setCacheType:
assetKey
gizmoCacheIdentifier
assetData
syncData
_assetData
_assetKey
_cacheType
_gizmoCacheIdentifier
_messageType
_syncData
receiveServerIdentifier:clientIdentifier:extensionDidBeginUsingResults:connection:appServerProxyUUID:
initWithAppServer:connection:
connection
uuid
appServer
_connection
_uuid
_appServer
cacheDirectory
_sp_stringByEncodingIllegalFilenameCharacters
cacheDirectoryWithCacheIdentifier:
processCacheMessage:connectionIdentifier:completion:
initWithDictionary:
setupCacheWithIdentifier:completion:
getData:cacheIdentifier:completion:
addData:cacheIdentifier:completion:
deleteData:cacheIdentifier:completion:
clearAllCachedImages:cacheIdentifier:completion:
assetPath:cacheIdentifier:cacheType:
dataWithContentsOfFile:
date
dictionaryWithObject:forKey:
setAttributes:ofItemAtPath:error:
numberWithInteger:
numberWithLong:
sendCacheReply:cacheIdentifier:
writeToFile:options:error:
cacheDirectoryWithCacheIdentifier:cacheType:
contentsOfDirectoryAtPath:error:
cacheAssets:cacheType:cacheIdentifier:
fileExistsAtPath:isDirectory:
initFileURLWithPath:isDirectory:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
getResourceValue:forKey:error:
path
timeIntervalSinceDate:
lastPathComponent
stringByRemovingPercentEncoding
sendProtobuf:sender:timeOut:securityType:withCompletion:
deleteCache:
processCacheMessageData:connectionIdentifier:
processCacheDictionary:connectionIdentifier:completion:
companionAppServer
setCompanionAppServer:
_companionAppServer
numberWithUnsignedInt:
hasReceiver
objectData
receiver
_objectData
_receiver
_type
setObject:forSetting:
initWithInfo:timeout:forResponseOnQueue:withHandler:
info
objectForSetting:
unsignedLongValue
initWithType:context:timeout:forResponseOnQueue:withHandler:
context
PUICActionType
keyDescriptionForSetting:
unsignedIntValue
error
setError:
_error
setHasSubtype:
hasSubtype
hasCacheMessage
hasKey
hasText
setHasNdouble:
hasNdouble
setHasNfloat:
hasNfloat
setHasNint64:
hasNint64
setHasNint32:
hasNint32
setHasNuint64:
hasNuint64
setNuint32:
setHasNuint32:
hasNuint32
setHasNbool:
hasNbool
hasObject
nuint32
_ndouble
_nint64
_nuint64
_cacheMessage
_nfloat
_nint32
_nuint32
_object
_subtype
_text
_nbool
initWithService:
setSecureRemoteService:
setInsecureRemoteService:
secureRemoteService
incomingSecureProtobuf:
setProtobufAction:forIncomingRequestsOfType:
insecureRemoteService
incomingInsecureProtobuf:
addDelegate:queue:
setPreferInfraWiFi:
killWiFiTimer
startWiFiTimer
wifiTimeOut
_sendPlist:timeOut:securityType:retryExpiration:tryGeneration:withCompletion:
null
outgoingMessageBlockedUntil
dataWithPropertyList:format:options:error:
logEvent:withName:
setWithObject:
delegate
logDataSent:application:
serviceForTransport:
accounts
anyObject
sendData:fromAccount:toDestinations:priority:options:identifier:error:
serviceName
saveForPossibleResend:
setOutgoingMessageBlockedUntil:
dateWithTimeIntervalSinceNow:
copy
messages
_sendData:forApplication:idsPriority:installer:withCompletion:
removeOutgoingMessageBlockIfIdentiferMatches:sendError:
handleDataProtectionSendFailureOrRetryFailureOnService:account:identifier:error:
removeObjectForKey:
outgoingResponseIdentifier
didReceiveSecureData
incomingData:
temporarilyRetainIDSMessageContext:
_sendProtobuf:sender:timeOut:securityType:retryExpiration:tryGeneration:withCompletion:
uncompressedData
sendProtobuf:fromAccount:toDestinations:priority:options:identifier:error:
dateOfFirstUnlock
timeIntervalSinceNow
incomingProtobuf:
compare:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
setTransportDelegate:
enableWiFiIfNeededForDataOfSize:
disableWiFiIfNeededForDataOfSize:
isWiFiEnabled
isWiFiRequiredForSize:
keepWiFiAliveIfNeeded
sendPlist:timeOut:securityType:withCompletion:
sendData:forApplication:idsPriority:installer:withCompletion:
setDelegate:
setMessages:
messagesAccessQueue
setMessagesAccessQueue:
canSend
setCanSend:
wifiThresholdCount
setWifiThresholdCount:
wifiEnabled
setWifiEnabled:
wifiTimer
setWifiTimer:
retainedIDSMessageContextsQueue
setRetainedIDSMessageContextsQueue:
retainedIDSMessageContexts
setRetainedIDSMessageContexts:
blockedOutgoingMessagesQueue
setBlockedOutgoingMessagesQueue:
_canSend
_wifiEnabled
_secureRemoteService
_insecureRemoteService
_delegate
_messages
_messagesAccessQueue
_wifiTimer
_retainedIDSMessageContextsQueue
_retainedIDSMessageContexts
_outgoingMessageBlockedUntil
_blockedOutgoingMessagesQueue
_wifiThresholdCount
removeAllStateFromDefaultsIfNeeded
_setupSignalHandlers
initWithMachServiceName:
setApplicationListener:
applicationListener
setApplicationManagerListener:
applicationManagerListener
setLocalConnections:
applicationIDsFromLaunchServicesXPCEvent:isPlaceHolder:
applicationsWithBundlefIDsWereInstalled:
applicationsWithBundlefIDsWereUninstalled:
activeWorkoutStatusDidChange
_notifyFirstUnlockStatus:
requestFirstUnlockStatus
resume
currentRunLoop
localConnections
_setupSignal:handler:
_saveSendTimeAndSize:
timingTest_IDSSendTime
setTimingTest_IDSSendTime:
setTimingTest_IDSSendSize:
timingTest_IDSReceiveTime
setTimingTest_IDSReceiveTime:
setTimingTest_lastServerIdentifier:
setTimingTest_lastClientIdentifier:
pendingDatasForDroppedConnections
allKeys
indexesOfObjectsPassingTest:
removeObjectsAtIndexes:
removeObjectsForKeys:
isPaired
_xpcConnection
extensionDidTerminate
companionDaemonDidRestart
extensionGotUnknownControllerID:
receiveData:reply:
receiveData:
receivePlistFromExtension:
receiveSetViewController:key:property:value:
receiveSetViewController:values:
receivePushPagingScrollTableRow:row:seguesByRowName:rowNamesAndContextIDs:
fetchConnectionIdentifierWithReply:
appBeginBackgroundUIUpdate
interfaceWithProtocol:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
auditToken
setActiveComplications:
activeComplicationsWithCompletion:
fetchExtensionUIActiveStateForBundleID:completion:
fetchWatchKitApplicationStateInfo:
fetchExtensionCapabilitiesForAppBundleID:completion:
sendContextData:toAppWithIdentifier:completion:
registerWKAppUIStateObserver:forBundleIDs:interestedStateTypes:
fetchWKAppUIStateInfoForObserver:callback:
addBundleID:forWKAppUIStateObserver:
removeBundleID:forWKAppUIStateObserver:
addXPCConnection:withIdentifier:
removeXPCConnection:
_localConnectionIdentifierForServerIdentifier:clientIdentifier:
sendPlist:securityType:
currentActiveApp
cancelGizmoAppStillActivePingTimer:
setCurrentActiveApp:
endTransaction
componentsSeparatedByString:
lastObject
appStateMonitors
_notifyRunningWKAppsDidChange
setHandler:
logDictionary:
sendSPPlist:receiver:securityType:
clearLastResetDateForApp:
clearDateOfFirstContinuousSendError
terminateApplication:forReason:andReport:withDescription:
appWithIdentifierIsKnownWatchKitApp:
shouldResetAppOnError:
restartAppContents:
lastAppResetDates
_serverIdentifierForLocalConnectionIdentifier:
_clientIdentifierForLocalConnectionIdentifier:
addPendingDataForDroppedConnection:typeKey:localConnectionIdentifier:
logStringArray:
decodeOutData:
performBlockForClientIdentifiers:serverIdentifier:block:
beginTransaction
startGizmoAppStillActivePingTimer:
applicationInfoForApplication:completion:
timingTest_IDSSendSize
sockPuppetDataFromDictionary:
timingTest_lastServerIdentifier
timingTest_lastClientIdentifier
addPassData:completion:
handleIncomingProtoPlist:
appBundleIDFromPlist:
handleIncomingPlist:
propertyListWithData:options:format:error:
companionCapabilities
unlockedSinceBoot
setUnlockedSinceBoot:
notifyClientsCompanionDaemonRestarted
notifyClientsExtensionTerminated:
launchApplication:withTransactionID:backlightTime:launchMode:launchEnv:launchArgs:
terminateApplication:withTransactionID:
getApplicationRunningStatus:withTransactionID:
setCompanionCapabilities:
_saveReceiveTimeWithServerIdentifier:clientIdentifier:
setLastResetDateForApp:
setWithArray:
stringWithString:
appendFormat:
componentsJoinedByString:
_activeWorkoutApplicationIdentifierWithCompletion:
listener:shouldAcceptNewConnection:
cancelGizmoApplicationsUpdateTimer
wakeAppForBackgroundUIUpdate:
_notifyComplicationFirstUnlockChanged:
setPendingDatasForDroppedConnections:
gizmoApplicationsUpdateTimer
setGizmoApplicationsUpdateTimer:
queue
setQueue:
dateOfFirstContinuousSendError
setDateOfFirstContinuousSendError:
setLastAppResetDates:
lastAppResetDatesAccessQueue
setLastAppResetDatesAccessQueue:
lastExtensionTerminatedDates
setLastExtensionTerminatedDates:
gizmoAppStillActivePingTimers
setGizmoAppStillActivePingTimers:
setAppStateMonitors:
companionCapabilitiesSema
setCompanionCapabilitiesSema:
currentWKWorkoutAppBundleID
setCurrentWKWorkoutAppBundleID:
appServerProxies
setAppServerProxies:
appServerProxiesQueue
setAppServerProxiesQueue:
timingTest_queue
setTimingTest_queue:
_unlockedSinceBoot
_applicationListener
_applicationManagerListener
_localConnections
_pendingDatasForDroppedConnections
_gizmoApplicationsUpdateTimer
_queue
_currentActiveApp
_dateOfFirstContinuousSendError
_lastAppResetDates
_lastAppResetDatesAccessQueue
_lastExtensionTerminatedDates
_gizmoAppStillActivePingTimers
_appStateMonitors
_companionCapabilities
_companionCapabilitiesSema
_currentWKWorkoutAppBundleID
_appServerProxies
_appServerProxiesQueue
_timingTest_IDSSendSize
_timingTest_lastServerIdentifier
_timingTest_lastClientIdentifier
_timingTest_queue
_timingTest_IDSSendTime
_timingTest_IDSReceiveTime
watchKitApplicationsChangedExternally
assetsCount
clearAssets
assetsAtIndex:
assetsType
name
valid
initWithBundleIdentifier:flags:reason:name:withHandler:
initWithPID:flags:reason:name:withHandler:
cancelLogUpdateTimer
startLogUpdateTimer
newEventFromEvent:usingLogEvent:
updatePowerLogs
eventsByBundleID
setEventsByBundleID:
logUpdateTimer
setLogUpdateTimer:
logQueue
setLogQueue:
_eventsByBundleID
_logUpdateTimer
_logQueue
setPersistentDomain:forName:
synchronize
predicateWithFormat:
filteredArrayUsingPredicate:
pathComponents
applicationProxyForIdentifier:placeholder:
initWithDomain:
synchronizeUserDefaultsDomain:keys:
arrayForKey:
newlyInstalledApplicationIsAWatchKitApplication:
stopUsingExtensionIfNecessaryForApplicationWithIdentifier:
pluginKitDictionary
applicationManagerConnections
extensionInfoPListInGizmoApplication:
needsToUpdateComplicationInfoInAppliationInfo:withComplicationsInfo:
identifierForPluginProxy:
sendStatusData:
setApplicationManagerConnections:
applicationManagerConnectionsQueue
setApplicationManagerConnectionsQueue:
updateSema
setUpdateSema:
_applicationManagerConnections
_applicationManagerConnectionsQueue
_updateSema
setWithCapacity:
daemonManagerDidBeginXPCTransaction
daemonManagerWillEndXPCTransaction
addTransactionObserver:
removeTransactionObserver:
refCount
setRefCount:
active
setActive:
transactionTimer
setTransactionTimer:
transactionQueue
setTransactionQueue:
transactionObservers
setTransactionObservers:
_active
_refCount
_transactionTimer
_transactionQueue
_transactionObservers
characterSetWithCharactersInString:
invertedSet
stringByAddingPercentEncodingWithAllowedCharacters:
SPProtoObjectMessage
NSCopying
SPProtoAudioFileQueuePlayerSetItems
SPProtoAudioFileQueuePlayerSetRate
SPProtoAudioFileQueuePlayer
SPProtoAudioFilePlayerUpdateContainedIdentifier
SPProtoAudioFilePlayerStatus
SPProtoAudioFilePlayerItem
SPProtoAudioFilePlayerAssetUpdateMetaData
SPProtoAudioFilePlayerAsset
SPProtoAudioFilePlayerItemSetCurrentTime
SPProtoAudioFilePlayerMessage
SPExtension
SPProtoSockPuppetMessage
SPGizmoPlugInManager
SPGizmoAppServerProtocol
NSObject
SPCompanionAppServerProtocol
SPGizmoPlugInManagerRemoteInterfaceStub
SPRemoteInterfaceProtocol
SPProtoSockPuppetPlist
SPProtoCacheSyncData
SPError
SPGizmoAppLauncher
SPFont
NSSecureCoding
NSCoding
NSKeyedUnarchiverDelegate
SPIDSProtobuf
SPProtoSerializer
SPCacheAsset
SPAssetCacheAssets
SPAssetCacheSyncData
SPProtoCacheMessage
SPGizmoAppServerProxy
SPGizmoCacheManager
SPProtoCacheAsset
SPProtoSockPuppetIDSObject
SPServerToExtensionAction
SPCacheMessage
SPProtoSockPuppetObject
0"2@
SPTransport
IDSServiceDelegate
SPGizmoApplicationProtocol
SPGizmoApplicationManagerProtocol
SPGizmoApplicationManagerServerProtocol
SPGizmoAppServer
SPTransportDelegate
NSXPCListenerDelegate
SPProtoCacheAssets
SPPowerLog
SPGizmoAppManager
SPDaemonManager
SPExtras
@12@0:4^{_NSZone=}8
@8@0:4
B12@0:4@8
v12@0:4@8
I8@0:4
v8@0:4
@"NSString"
#8@0:4
@12@0:4I8
@"NSMutableArray"
f8@0:4
v12@0:4f8
B8@0:4
@"SPProtoObjectMessage"
@"SPProtoAudioFilePlayerUpdateContainedIdentifier"
@"SPProtoAudioFileQueuePlayerSetRate"
@"SPProtoAudioFilePlayerStatus"
@"SPProtoAudioFileQueuePlayerSetItems"
v12@0:4i8
v12@0:4B8
v16@0:4q8
i8@0:4
q8@0:4
@"NSData"
{?="errorCode"b1"status"b1}
@"SPProtoAudioFilePlayerItemSetCurrentTime"
v16@0:4d8
d8@0:4
{?="duration"b1}
@"SPProtoAudioFilePlayerAssetUpdateMetaData"
{?="currentTime"b1}
@"SPProtoAudioFilePlayerAsset"
@"SPProtoAudioFilePlayerItem"
@"SPProtoAudioFileQueuePlayer"
@16@0:4@8B12
@16@0:4@8@12
v24@0:4@8@12@16^v20
@"NSURL"
@"NSMutableSet"
@"NSDictionary"
@"NSArray"
@"LSApplicationProxy"
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"SPProtoAudioFilePlayerMessage"
@"SPProtoSockPuppetPlist"
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v20@0:4@8@12@16
v20@0:4@8@12B16
v16@0:4@8@12
v32@0:4@8@12I16@20@24@28
v20@0:4@8@12@?16
v20@0:4@8@12i16
v16@0:4@8B12
v20@0:4@"NSData"8@"NSString"12@"NSString"16
v20@0:4@"NSString"8@"NSString"12B16
v16@0:4@"NSString"8@"NSString"12
v12@0:4@"NSString"8
v20@0:4@"NSString"8@"NSUUID"12@"NSString"16
v32@0:4@"NSString"8@"NSDictionary"12I16@"NSString"20@"NSUUID"24@"NSString"28
v20@0:4@"NSDictionary"8@"NSString"12@?<v@?@"NSDictionary">16
v16@0:4@"NSDictionary"8@"NSString"12
v20@0:4@"NSString"8@"NSString"12i16
v20@0:4@"NSArray"8@"NSString"12@"NSString"16
v16@0:4@"NSString"8B12
v20@0:4@"NSString"8@"NSString"12@"NSDictionary"16
v24@0:4@8@12@16@?20
v16@0:4@8@?12
v16@0:4@"NSData"8@"NSString"12
v20@0:4@"NSData"8@"NSString"12@"NSArray"16
v24@0:4@"NSData"8@"NSString"12@"NSArray"16@?<v@?@"NSData"@"NSError">20
v16@0:4@"NSString"8@?<v@?@"NSDictionary"@"NSData"@"NSData"@"NSError">12
v16@0:4@"NSString"8@"NSDictionary"12
v20@0:4@"NSString"8@"NSData"12@?<v@?@"NSDictionary"@"NSError"i@"NSString">16
v24@0:4@8@12@16@20
v24@0:4@8^B12^B16^B20
v16@0:4@8^i12
@12@0:4@8
@16@0:4@8I12
v28@0:4@8I12@16@20@24
v20@0:4i8B12@16
v28@0:4@"NSDictionary"8I12@"NSString"16@"NSUUID"20@"NSString"24
v16@0:4@8@"NSString"12
v20@0:4i8B12@"NSString"16
v20@0:4@"NSData"8@"NSString"12@?<v@?I>16
v16@0:4@"NSDictionary"8@?<v@?@"NSDictionary">12
v12@0:4@"NSDictionary"8
v12@0:4@?8
@"SPProtoCacheAssets"
@12@0:4i8
@16@0:4i8@12
B12@0:4i8
v32@0:4@8@12@16@20@24@?28
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
#20@0:4@8@12@16
#20@0:4@"NSKeyedUnarchiver"8@"NSString"12@"NSArray"16
@16@0:4@"NSKeyedUnarchiver"8@12
v20@0:4@"NSKeyedUnarchiver"8@12@16
v12@0:4@"NSKeyedUnarchiver"8
@"UIFont"
@24@0:4@8I12I16@20
v12@0:4I8
@"SPAssetCacheAssets"
@"SPProtoCacheSyncData"
@"NSUUID"
@"SPGizmoAppServer"
@20@0:4@8@12I16
@20@0:4@8I12@16
@"SPCompanionAppServer"
Q8@0:4
v16@0:4Q8
@32@0:4I8@12d16@24@?28
l8@0:4
v12@0:4l8
@"SPAssetCacheSyncData"
@"SPProtoCacheMessage"
{?="ndouble"b1"nint64"b1"nuint64"b1"nfloat"b1"nint32"b1"nuint32"b1"subtype"b1"nbool"b1}
v28@0:4@8@12@16@20@24
v32@0:4@8@12@16@20@24@28
v28@0:4@8@12@16B20@24
v32@0:4@8@12@16B20@24@28
v28@0:4@"IDSService"8@"IDSAccount"12@"NSDictionary"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSData"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSProtobuf"16@"NSString"20@"IDSMessageContext"24
v28@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSString"20@"IDSMessageContext"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSURL"16@"NSDictionary"20@"NSString"24@"IDSMessageContext"28
v16@0:4@"IDSService"8@"NSSet"12
v16@0:4@"IDSService"8@"NSArray"12
v28@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24
v32@0:4@"IDSService"8@"IDSAccount"12@"NSString"16B20@"NSError"24@"IDSMessageContext"28
v24@0:4@"IDSService"8@"IDSAccount"12@"NSString"16@20
v24@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSDictionary"24
v28@0:4@"IDSService"8@"IDSAccount"12@"IDSSession"16@"NSString"20@"NSData"24
v12@0:4@"IDSService"8
v20@0:4@"IDSService"8@"IDSDevice"12@?<v@?>16
B16@0:4q8
v28@0:4@8d12i20@?24
v36@0:4@8d12i20@24I28@?32
v28@0:4@8@12i16@20@?24
B32@0:4@8@12d16i24@?28
B40@0:4@8@12d16i24@28I32@?36
B24@0:4@8@12@16@20
@"IDSService"
@"<SPTransportDelegate>"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_source>"
v24@0:4@8i12@16@20
v16@0:4B8B12
v16@0:4@"NSData"8@?<v@?@"NSData"@"NSError">12
v12@0:4@"NSData"8
v24@0:4@"NSString"8@"NSString"12@"NSString"16@20
v16@0:4@"NSString"8@"NSArray"12
v24@0:4@"NSString"8i12@"NSDictionary"16@"NSArray"20
v12@0:4@?<v@?@"NSString"@"NSString"@"NSDictionary">8
v20@0:4@8@12I16
v12@0:4@"NSArray"8
v12@0:4@?<v@?@"NSArray">8
v16@0:4@"NSString"8@?<v@?BBB@"NSError">12
v12@0:4@?<v@?@"NSDictionary"@"NSError">8
v16@0:4@"NSString"8@?<v@?@"NSDictionary"@"NSError">12
v20@0:4@"NSData"8@"NSString"12@?<v@?@"NSError">16
v20@0:4@"NSString"8@"NSArray"12I16
v16@0:4I8@12
v16@0:4I8@"NSString"12
v12@0:4@"IDSProtobuf"8
@"NSDate"8@0:4
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
@16@0:4i8@?12
v16@0:4@8i12
v28@0:4@8@12@16@20@?24
v20@0:4@8B12B16
v16@0:4@8I12
@16@0:4@8^B12
@"NSXPCListener"
@"NSDate"
@"NSObject<OS_dispatch_semaphore>"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.assertiond.app-state-monitor</key>
<true/>
<key>com.apple.bulletinboard.utilities</key>
<true/>
<key>com.apple.carousel.backlightaccess</key>
<true/>
<key>com.apple.frontboard.debugapplications</key>
<true/>
<key>com.apple.frontboard.launchapplications</key>
<true/>
<key>com.apple.multitasking.systemappassertions</key>
<true/>
<key>com.apple.multitasking.termination</key>
<true/>
<key>com.apple.multitasking.unlimitedassertions</key>
<true/>
<key>com.apple.nanopassd.connect</key>
<true/>
<key>com.apple.private.CacheDelete</key>
<array>
<string>CLIENT_ENTITLEMENT</string>
</array>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.healthkit</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.sockpuppet</string>
<string>com.apple.private.alloy.sockpuppet.classd</string>
</array>
<key>com.apple.private.ids.messaging.high-priority</key>
<array>
<string>com.apple.private.alloy.sockpuppet</string>
<string>com.apple.private.alloy.sockpuppet.classd</string>
</array>
<key>com.apple.private.mobileinstall.allowedSPI</key>
<array>
<string>CopyInstalledAppsForLaunchServices</string>
<string>CopyDiskUsageForLaunchServices</string>
<string>InstallForLaunchServices</string>
<string>UninstallForLaunchServices</string>
<string>CopyGuestContainerPath</string>
</array>
<key>com.apple.private.tcc.manager</key>
<true/>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.gizmo.NanoPassbookService</string>
<string>com.apple.misagent</string>
<string>com.apple.carousel.tilenavigation</string>
</array>
<key>seatbelt-profiles</key>
<array>
<string>gizmoappd</string>
</array>
</dict>
</plist>
zPLR
zPLR
zPLR
zPLR
