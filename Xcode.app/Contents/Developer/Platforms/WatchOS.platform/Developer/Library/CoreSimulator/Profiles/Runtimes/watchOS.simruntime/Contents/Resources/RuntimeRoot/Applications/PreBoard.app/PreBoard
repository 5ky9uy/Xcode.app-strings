PBAPasscodeViewController
PBALogoManager
CSLHIDEventListener
PBAApplication
AWDCarouselBatteryACStatusChanged
NSCopying
CSLObliterationConfirmationViewController
CSLHIDButtonCheckProvider
CSLButtonCheckProviderProtocol
CSLStartupButtonHeldCheck
PBAOrientationController
CSLObliterationViewController
PBARootViewController
CSLObliterationViewControllerOwnerDelegate
CSLObliterationViewControllerDelegate
CUISPasscodeViewControllerDelegate
NSObject
PBAIdleSleepController
BSPowerMonitorObserver
Typesafe
PBAHIDEventController
PBASecureWindow
PBAAppDelegate
UIApplicationDelegate
_IOSSHLBatteryNotifySender
IOSSHLBatteryStatus
CSLStartupObliterationSecureWindow
CSLStartupObliterationPresenter
v4@?0
hasService
TB,R,N
listening
TB,R,N,GisListening
Built-In
v8@?0^{__IOHIDEvent=}4
lockButtonTimer
T@"NSTimer",&,N,V_lockButtonTimer
idleSleepController
T@"PBAIdleSleepController",&,N,V_idleSleepController
%@ %@
timestamp
onAC
hasTimestamp
TB,N
TQ,N,V_timestamp
hasOnAC
TB,N,V_onAC
ARE_YOU_SURE_YOU_WANT_TO_CONTINUE_LABEL
General
WARNING_LABEL
small_passlock_wipe_green_check
small_passlock_wipe_red_x
v8@?0@"NSError"4
RESET_FAILED_MESSAGE
v8@?0B4
ownerDelegate
T@"<CSLObliterationViewControllerOwnerDelegate>",W,N,V_ownerDelegate
delegate
T@"<CSLObliterationViewControllerDelegate>",W,N,V_delegate
useBlackBackground
TB,N,V_useBlackBackground
down
CSLStartupButtonHeldCheckQueue
invertUI
com.apple.nano
ERASE_ALL_CONTENT_AND_SETTINGS_LABEL
CONNECT_TO_POWER_BEFORE_ERASE_LABEL
CANCEL_LABEL
%@ %p
 (%@)
orb-reset
RESET_OKAY
PreBoard
orb-cancel
RESET_CANCEL
RESET_TITLE
RESET_MESSAGE
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
mainView
T@"UIView",&,N,V_mainView
contentView
T@"UIView",&,N,V_contentView
passcodeController
T@"PBAPasscodeViewController",&,N,V_passcodeController
isCompact
TB,V_isCompact
backlight
 retroactively
allowIdleTimerToBeReset
TB,N,V_allowIdleTimerToBeReset
displayDim
TB,N,GisDisplayDim,V_displayDim
idleSleepTimeout
Td,N,V_idleSleepTimeout
eventRouter
T@"BKSHIDEventRouter",&,N,V_eventRouter
savedEventRouters
T@"NSArray",C,N,V_savedEventRouters
window
T@"UIWindow",&,N
rootViewController
T@"PBARootViewController",&,N,V_rootViewController
orientationController
T@"PBAOrientationController",&,N,V_orientationController
T@"UIWindow",&,N,V_window
com.apple.system.prefs.changed
kIOSSHLBatteryNotChargingStatusChangedNotification
kIOSSHLACStatusChangeNotification
kIOSSHLUnsupportedChargingAccessoryStatusChangedNotification
isOnAC
TB,N,V_isOnAC
isOnACForUI
TB,N,V_isOnACForUI
isBatteryCharging
TB,N,V_isBatteryCharging
batteryCapacity
Tf,N,V_batteryCapacity
supportsDetailedBatteryCapacity
TB,N,V_supportsDetailedBatteryCapacity
isConnectedToChargeIncapablePowerSource
TB,N,V_isConnectedToChargeIncapablePowerSource
isConnectedToUnsupportedChargingAccessory
TB,N,V_isConnectedToUnsupportedChargingAccessory
hideACPower
TB,V_hideACPower
lowBatteryLevel
Tl,V_lowBatteryLevel
chargerFamilyKey
Ti,N,V_chargerFamilyKey
batteryStatusLogger
T@"<CSLBatteryStatusLogger>",W,N,V_batteryStatusLogger
SBHideACPower
SBLowBatteryLevel
PBAScreenWillBlankNotification
PBAScreenDidBlankNotification
PBAScreenWillUnblankNotification
PBAScreenDidUnblankNotification
Should Obliterate Window
alloc
init
sharedInstance
showLogo
hideLogo
stopListening
dealloc
hasService
initWithServiceUsagePage:usage:additionalMatchingCriteria:log:eventQueue:eventBlock:
waitForMatchedHIDService:
copyEventType:matchingEvent:options:
isListening
startListening
.cxx_destruct
_log
_listening
sharedController
setIdleSleepController:
resetIdleTimerAndUndim:
presentObliterationControllerWithCanceledBlock:
initWithHeldBlock:notHeldBlock:callbackQueue:buttonCheckProvider:
numberWithBool:
dictionaryWithObjects:forKeys:count:
dimDisplay
updateBatteryState:
_lockButtonDown
_lockButtonUp
_menuButtonDown
_menuButtonUp
__handleHIDEvent:
_handleHIDEvent:
_hidEvent
isDisplayDim
_startLockButtonTimer
shutdownWithOptions:forSource:
_lockButtonLongPress
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setLockButtonTimer:
invalidate
lockButtonTimer
_cancelLockButtonTimer
shouldCheckInWithBackboard
registerAsSystemApp
_createStatusBarWithRequestedStyle:orientation:hidden:
_isSpringBoard
applicationWillOrderInContext:windowLevel:screen:
applicationDidOrderOutContext:screen:
batteryStatusDidChange:
_handlePhysicalButtonEvent:
idleSleepController
_buttonHeldCheck
_hidScreenCoverListener
_obliterationPresenter
_screenCovered
_lockButtonTimer
_idleSleepController
description
dictionaryRepresentation
stringWithFormat:
dictionary
numberWithUnsignedLongLong:
setObject:forKey:
class
allocWithZone:
isMemberOfClass:
copyWithZone:
setTimestamp:
setHasTimestamp:
hasTimestamp
setOnAC:
setHasOnAC:
hasOnAC
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
timestamp
onAC
_timestamp
_onAC
_has
mainScreen
bounds
initWithFrame:
useBlackBackground
blackColor
setBackgroundColor:
clearColor
addSubview:
systemFontOfSize:
mainBundle
localizedStringForKey:value:table:
setText:
setFont:
setNumberOfLines:
setLineBreakMode:
setBaselineAdjustment:
setAdjustsFontSizeToFitWidth:
setClipsToBounds:
whiteColor
setTextColor:
setTextAlignment:
boundingRectWithSize:options:attributes:context:
setFrame:
frame
buttonWithType:
imageNamed:
setImage:forState:
sizeToFit
performObliteration
addTarget:action:forControlEvents:
cancelObliteration
setView:
viewWillAppear:
defaultCenter
_powerStatusUpdated:
addObserver:selector:name:object:
removeObserver:
viewDidDisappear:
currentConditionsDoAllowObliteration
showObliterationDialog
center
setCenter:
setAnimating:
view
failSafeObliterate
activeDeviceSelectorBlock
getDevicesMatching:
firstObject
unpairWithDevice:shouldObliterate:operationHasBegun:
showResetFailureMessage
deactivateController:withCompletion:
systemOrangeColor
setAlpha:
removeFromSuperview
animateWithDuration:delay:options:animations:completion:
initWithForceSWUpdate:
loadView
ownerDelegate
setOwnerDelegate:
delegate
setDelegate:
setUseBlackBackground:
_spinner
_forceSWUpdate
_useBlackBackground
_ownerDelegate
_delegate
copy
buttonHoldTime
startupUsingEventQueue:withCompletion:
startListeningForEventsWithBlock:
stopListeningForEvents
isButtonDown
_hidEventListener
_hidKeyboardEventToMatch
_buttonEventBlock
_startListeningForEvents
_stopListeningForEvents
_performCallbackWasHeld:
setHeldBlock:notHeldBlock:
_provider
_heldBlock
_notHeldBlock
_callbackQueue
_keyWasDown
_keyWasReleased
_timerDidFire
_callbackPerformed
_eventQueue
initWithRadians:
attachDefaultTransform:forDisplayWithRootIdentity:
_sceneTransform
setTitle:forState:
titleLabel
sizeThatFits:
setTitleColor:forState:
colorWithRed:green:blue:alpha:
layer
setCornerRadius:
obliterateClicked
font
pointSize
setMinimumScaleFactor:
colorWithWhite:alpha:
cancelClicked
_statusUpdated:
_updateViews
showObliterationConfirmationDialog
_obliterateButton
_connectPowerLabel
_showObliterateButton
isViewLoaded
name
setName:
stringByAppendingFormat:
viewDidLoad
currentDevice
puic_deviceVariant
_createAndShowPasscodeControllerIfNecessary
initWithMode:
setShouldUseLockScreenAnimation:
reset
addChildViewController:
didMoveToParentViewController:
willMoveToParentViewController:
removeFromParentViewController
viewDidAppear:
window
_setActionControllerOrbGestureEnabled:inWindow:
viewWillDisappear:
_removePasscodeController
finishDeviceUnlock
_resetConfirm:
actionItemWithImage:title:target:action:
setActionItemType:
_resetCancel:
arrayWithObjects:count:
initWithActionItems:actionStyle:
preferredFontForTextStyle:
setHeaderView:
initWithActionGroup:
dismissViewControllerAnimated:completion:
presentViewController:animated:completion:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
passcodeViewController:didComplete:
passcodeViewController:didVerifyPasscode:
canProvideActionController
actionController
mainView
setMainView:
contentView
setContentView:
passcodeController
setPasscodeController:
isCompact
setIsCompact:
_obliterationConfirmationController
_isCompact
_mainView
_contentView
_passcodeController
setDisplayDim:
_undimDisplayForce
addObserver:
postNotificationName:object:
_preventIdleSleep
_setHIDUILockedState:
_preventIdleSleepForNumberOfSeconds:
_allowIdleSleep
cancelPreviousPerformRequestsWithTarget:selector:object:
setPreventIdleSleep:forReason:
performSelector:withObject:afterDelay:inModes:
undimDisplay
_nextLockTimeDuration
powerMonitorSystemSleepRequested:
powerMonitorSystemSleepRequestAborted:
powerMonitorSystemWillSleep:
powerMonitorSystemWillWakeFromSleep:
powerMonitorSystemDidWakeFromSleep:
_userEventsDidIdle
_userEventOccurred
_userEventPresenceTimerExpired
_requestedUserEventNotificationOccurred
_startAllowingIdleTimer
idleSleepTimeout
setIdleSleepTimeout:
allowIdleTimerToBeReset
setAllowIdleTimerToBeReset:
_displayDim
_allowIdleTimerToBeReset
_idleSleepTimeout
objectForKey:
count
mutableCopy
addEntriesFromDictionary:
typeSafeObjectForKey:ofType:
dictionaryByAddingEntriesFromDictionary:
typeSafeSetObject:forKey:
routerWithDestination:
defaultEventRouters
countByEnumeratingWithState:objects:count:
hidEventDescriptors
addHIDEventDescriptors:
descriptorWithPage:usage:
setWithObject:
addObject:
setSystemAppControlsFocusOnMainDisplay:
bundleIdentifier
processInfo
processIdentifier
setForegroundApplicationOnMainDisplay:pid:
eventRouters
setSavedEventRouters:
setEventRouters:
startReceivingEvents:
stopReceivingEvents
eventRouter
setEventRouter:
savedEventRouters
_eventRouter
_savedEventRouters
_isSecure
setOrientationController:
makeKeyAndVisible
setRootViewController:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
setWindow:
rootViewController
orientationController
_window
_rootViewController
_orientationController
setStateForFullPower:
postFullPower
setStateForPluggedIn:
postPluggedIn
setStateForCurvedBatteryCapacity:
postCurvedBattery
_queue
_fullPowerToken
_pluggedInToken
_curvedBatteryCapacityToken
_fullPowerTokenRegistered
_pluggedInTokenRegistered
_curvedBatterCapacityTokenRegistered
_removePreferencesObserver
setHideACPower:
setLowBatteryLevel:
postNotificationName:object:userInfo:
_loadPreferences
_addPreferencesObserver
logAWDMetric
setIsConnectedToUnsupportedChargingAccessory:
batteryCapacityAsPercentage
isOnAC
setIsOnAC:
isOnACForUI
setIsOnACForUI:
isBatteryCharging
setIsBatteryCharging:
isConnectedToUnsupportedChargingAccessory
batteryCapacity
setBatteryCapacity:
batteryStatusLogger
setBatteryStatusLogger:
supportsDetailedBatteryCapacity
setSupportsDetailedBatteryCapacity:
isConnectedToChargeIncapablePowerSource
setIsConnectedToChargeIncapablePowerSource:
hideACPower
lowBatteryLevel
chargerFamilyKey
setChargerFamilyKey:
_notifySender
_isOnAC
_isOnACForUI
_isBatteryCharging
_isConnectedToUnsupportedChargingAccessory
_supportsDetailedBatteryCapacity
_isConnectedToChargeIncapablePowerSource
_hideACPower
_batteryCapacity
_batteryStatusLogger
_lowBatteryLevel
_chargerFamilyKey
setWindowLevel:
setHidden:
_obliterationController
_canceledBlock
@8@0:4
v8@0:4
@32@0:4l8l12@16@20@24@?28
v12@0:4@?8
^{__IOHIDEvent=}20@0:4I8^{__IOHIDEvent=}12L16
B8@0:4
@"NSObject<OS_os_log>"
v20@0:4i8i12B16
v20@0:4@8f12@16
v16@0:4@8@12
v12@0:4@8
B12@0:4^{__IOHIDEvent=}8
v12@0:4^{__IOHIDEvent=}8
B12@0:4@8
@"CSLStartupButtonHeldCheck"
@"CSLHIDEventListener"
@"CSLStartupObliterationPresenter"
@"NSTimer"
@"PBAIdleSleepController"
@12@0:4^{_NSZone=}8
v16@0:4Q8
v12@0:4B8
I8@0:4
Q8@0:4
{?="timestamp"b1"onAC"b1}
@12@0:4B8
@"PUICActivityIndicatorView"
@"<CSLObliterationViewControllerOwnerDelegate>"
@"<CSLObliterationViewControllerDelegate>"
d8@0:4
v16@0:4@8@?12
v16@0:4@"NSObject<OS_dispatch_queue>"8@?<v@?>12
v12@0:4@?<v@?B>8
^{__IOHIDEvent=}
@24@0:4@?8@?12@16@20
v16@0:4@?8@?12
@"<CSLButtonCheckProviderProtocol>"
@"NSObject<OS_dispatch_queue>"
@"FBSceneTransform"
@"UIButton"
@"UILabel"
v16@0:4B8@?12
v16@0:4B8@?<v@?>12
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v16@0:4@8B12
v16@0:4@"CUISPasscodeViewController"8B12
v16@0:4@"CUISPasscodeViewController"8@"NSString"12
@"CSLObliterationConfirmationViewController"
@"UIView"
@"PBAPasscodeViewController"
B12@0:4@"BSPowerMonitor"8
v12@0:4@"BSPowerMonitor"8
v12@0:4f8
v16@0:4B8@12
v16@0:4d8
@16@0:4@8#12
@12@0:4@8
@"BKSHIDEventRouter"
@"NSArray"
B16@0:4@8@12
B24@0:4@8@12@16@20
B20@0:4@8@12@16
v24@0:4@8i12d16
v16@0:4@8i12
v28@0:4@8{CGRect={CGPoint=ff}{CGSize=ff}}12
v24@0:4@8@12@16@?20
v28@0:4@8@12@16@20@?24
v20@0:4@8@12@?16
I16@0:4@8@12
@20@0:4@8@12@16
B20@0:4@8@12@?16
v20@0:4@8@12@16
v12@0:4@"UIApplication"8
B16@0:4@"UIApplication"8@"NSDictionary"12
B16@0:4@"UIApplication"8@"NSURL"12
B24@0:4@"UIApplication"8@"NSURL"12@"NSString"16@20
B20@0:4@"UIApplication"8@"NSURL"12@"NSDictionary"16
v24@0:4@"UIApplication"8i12d16
v16@0:4@"UIApplication"8i12
v28@0:4@"UIApplication"8{CGRect={CGPoint=ff}{CGSize=ff}}12
v16@0:4@"UIApplication"8@"UIUserNotificationSettings"12
v16@0:4@"UIApplication"8@"NSData"12
v16@0:4@"UIApplication"8@"NSError"12
v16@0:4@"UIApplication"8@"NSDictionary"12
v16@0:4@"UIApplication"8@"UILocalNotification"12
v24@0:4@"UIApplication"8@"NSString"12@"UILocalNotification"16@?<v@?>20
v28@0:4@"UIApplication"8@"NSString"12@"NSDictionary"16@"NSDictionary"20@?<v@?>24
v24@0:4@"UIApplication"8@"NSString"12@"NSDictionary"16@?<v@?>20
v28@0:4@"UIApplication"8@"NSString"12@"UILocalNotification"16@"NSDictionary"20@?<v@?>24
v20@0:4@"UIApplication"8@"NSDictionary"12@?<v@?I>16
v16@0:4@"UIApplication"8@?<v@?I>12
v20@0:4@"UIApplication"8@"UIApplicationShortcutItem"12@?<v@?B>16
v20@0:4@"UIApplication"8@"NSString"12@?<v@?>16
v20@0:4@"UIApplication"8@"NSDictionary"12@?<v@?@"NSDictionary">16
v20@0:4@"UIApplication"8@"INIntent"12@?<v@?@"INIntentResponse">16
I16@0:4@"UIApplication"8@"UIWindow"12
B16@0:4@"UIApplication"8@"NSString"12
@"UIViewController"20@0:4@"UIApplication"8@"NSArray"12@"NSCoder"16
B16@0:4@"UIApplication"8@"NSCoder"12
v16@0:4@"UIApplication"8@"NSCoder"12
B20@0:4@"UIApplication"8@"NSUserActivity"12@?<v@?@"NSArray">16
v20@0:4@"UIApplication"8@"NSString"12@"NSError"16
v16@0:4@"UIApplication"8@"NSUserActivity"12
v16@0:4@"UIApplication"8@"CKShareMetadata"12
@"UIWindow"8@0:4
v12@0:4@"UIWindow"8
@"UIWindow"
@"PBARootViewController"
@"PBAOrientationController"
i8@0:4
f8@0:4
l8@0:4
v12@0:4l8
v12@0:4i8
@"_IOSSHLBatteryNotifySender"
@"<CSLBatteryStatusLogger>"
@"CSLObliterationViewController"
%p init
%p dealloc
already listening for events
was not listening for events
will bring up obliteration check
user canceled - will not obliterate
usagePage: 0x%x usage: 0x%x downEvent: %d
Lock button down
Shutting down device
Lock button up, lockButtonTimer = %@
Triggering fail safe obliteration
Triggering unpair with device %@
-unpairWithDevice returns Error %@
Obliteration failed to start: '%@'
Unpairing/Obliteration has begun
crown?(%d:%d) %s  [startup button held check]
unexpected hid event: %p (%d) [startup button held check]
cannot start listening, no listener
hidEventListener does not have a service
button is down at startup, waiting to see if down long enough
button no longer down, ignoring timer expiration
button held long enough
button no longer down, but did not see button up event
button held long enough and still held when callback changed
button no longer down, after callback changed, likely already canceled by user
button still down, waiting for timer to fire
button down again - will ignore
button released, not held long enough
button up again - will ignore
callback already made, ignoring second request (%{BOOL}u)
battery now charging, will confirm obliteration
battery not charging, will until it is before proceeding to confirm obliteration
unlocked, exiting...
Undimming display
Dimming display
Got kIOMessageCanSystemSleep
Got kIOMessageSystemWillNotSleep
Got kIOMessageSystemWillSleep
Got kIOMessageSystemWillPowerOn
Got kIOMessageSystemHasPoweredOn
disabling idle timer
Setting next autolock duration to %f%@
User Events Did Idle
User Events Did UnIdle
User Events Occurred
User Events Presence Timer Expired
User Event Notification fired
Got notification that backboardd is done doing setup work and is ready for the idle timer to be reset
########## DBG_CODE: (%d)
will ask to obliterate
will confirm obliteration
obliteration confirmation attempted before obliteration
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>com.apple.CommCenter.Preferences-delete</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.pairedunlock.userauthentication</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.ids.registration-reset</key>
<true/>
<key>com.apple.private.kernel.darkboot</key>
<true/>
<key>com.apple.private.security.no-sandbox</key>
<true/>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
