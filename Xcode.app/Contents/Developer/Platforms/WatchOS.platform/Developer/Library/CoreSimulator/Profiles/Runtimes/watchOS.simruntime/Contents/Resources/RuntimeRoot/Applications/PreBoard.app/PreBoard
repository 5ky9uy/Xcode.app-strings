PBAPasscodeViewController
PBALogoManager
PBAApplication
PBAOrientationController
PBARootViewController
PUICActionControllerDelegate
NSObject
CUISPasscodeViewControllerDelegate
PBAIdleSleepController
BSPowerMonitorObserver
PBAHIDEventController
PBASecureWindow
PBAAppDelegate
UIApplicationDelegate
alloc
init
sharedInstance
showLogo
hideLogo
sharedController
setIdleSleepController:
_lockButtonDown
_lockButtonUp
_menuButtonDown
_menuButtonUp
__handleHIDEvent:
_handleHIDEvent:
_hidEvent
isDisplayDim
resetIdleTimerAndUndim:
_startLockButtonTimer
shutdownWithOptions:
_lockButtonLongPress
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setLockButtonTimer:
invalidate
lockButtonTimer
_cancelLockButtonTimer
dimDisplay
shouldCheckInWithBackboard
registerAsSystemApp
_createStatusBarWithRequestedStyle:orientation:hidden:
_isSpringBoard
applicationWillOrderInContext:windowLevel:screen:
applicationDidOrderOutContext:screen:
_handlePhysicalButtonEvent:
.cxx_destruct
idleSleepController
_lockButtonTimer
_idleSleepController
initWithRadians:
attachDefaultTransform:forDisplayWithRootIdentity:
_sceneTransform
viewDidLoad
currentDevice
puic_deviceVariant
view
blackColor
setBackgroundColor:
mainScreen
bounds
setFrame:
initWithFrame:
setClipsToBounds:
addSubview:
_createAndShowPasscodeControllerIfNecessary
initWithMode:
setDelegate:
setShouldUseLockScreenAnimation:
reset
addChildViewController:
didMoveToParentViewController:
willMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
viewDidAppear:
window
_setActionControllerOrbGestureEnabled:inWindow:
viewWillDisappear:
_removePasscodeController
frame
mainBundle
localizedStringForKey:value:table:
setText:
setTextAlignment:
setNumberOfLines:
systemOrangeColor
setTextColor:
setAlpha:
animateWithDuration:delay:options:animations:completion:
_unpairDevice:
_showResetFailureMessage
unpairWithDevice:shouldObliterate:operationHasBegun:
getActivePairedDevice
imageNamed:
_resetConfirm:
actionItemWithImage:title:target:action:
setTag:
setActionItemType:
_resetCancel:
arrayWithObjects:count:
initWithActionItems:actionStyle:
whiteColor
clearColor
preferredFontForTextStyle:
setFont:
sizeThatFits:
setHeaderView:
initWithActionGroup:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
actionControllerItemsMayChange:
actionControllerDidCancel:
actionControllerWillAppear:
actionControllerDidAppear:
actionControllerWillDisappear:
actionControllerDidDisappear:
actionController:willSelectActionItem:
passcodeViewController:didComplete:
passcodeViewController:didVerifyPasscode:
canProvideActionController
actionController
mainView
setMainView:
contentView
setContentView:
passcodeController
setPasscodeController:
isCompact
setIsCompact:
_isCompact
_mainView
_contentView
_passcodeController
setDisplayDim:
_undimDisplayForce
addObserver:
removeObserver:
dealloc
defaultCenter
postNotificationName:object:
_preventIdleSleep
_setHIDUILockedState:
_preventIdleSleepForNumberOfSeconds:
_allowIdleSleep
cancelPreviousPerformRequestsWithTarget:selector:object:
setPreventIdleSleep:forReason:
performSelector:withObject:afterDelay:inModes:
undimDisplay
_nextLockTimeDuration
powerMonitorSystemSleepRequested:
powerMonitorSystemSleepRequestAborted:
powerMonitorSystemWillSleep:
powerMonitorSystemWillWakeFromSleep:
powerMonitorSystemDidWakeFromSleep:
_userEventsDidIdle
_userEventOccurred
_userEventPresenceTimerExpired
_requestedUserEventNotificationOccurred
_startAllowingIdleTimer
idleSleepTimeout
setIdleSleepTimeout:
allowIdleTimerToBeReset
setAllowIdleTimerToBeReset:
_displayDim
_allowIdleTimerToBeReset
_idleSleepTimeout
routerWithDestination:
defaultEventRouters
countByEnumeratingWithState:objects:count:
hidEventDescriptors
addHIDEventDescriptors:
descriptorWithPage:usage:
setWithObject:
addObject:
setSystemAppControlsFocusOnMainDisplay:
bundleIdentifier
processInfo
processIdentifier
setForegroundApplicationOnMainDisplay:pid:
eventRouters
setSavedEventRouters:
setEventRouters:
startReceivingEvents:
stopReceivingEvents
eventRouter
setEventRouter:
savedEventRouters
_eventRouter
_savedEventRouters
_isSecure
setOrientationController:
makeKeyAndVisible
setRootViewController:
applicationDidFinishLaunching:
application:willFinishLaunchingWithOptions:
application:didFinishLaunchingWithOptions:
applicationDidBecomeActive:
applicationWillResignActive:
application:handleOpenURL:
application:openURL:sourceApplication:annotation:
application:openURL:options:
applicationDidReceiveMemoryWarning:
applicationWillTerminate:
applicationSignificantTimeChange:
application:willChangeStatusBarOrientation:duration:
application:didChangeStatusBarOrientation:
application:willChangeStatusBarFrame:
application:didChangeStatusBarFrame:
application:didRegisterUserNotificationSettings:
application:didRegisterForRemoteNotificationsWithDeviceToken:
application:didFailToRegisterForRemoteNotificationsWithError:
application:didReceiveRemoteNotification:
application:didReceiveLocalNotification:
application:handleActionWithIdentifier:forLocalNotification:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:
application:handleActionWithIdentifier:forRemoteNotification:completionHandler:
application:handleActionWithIdentifier:forLocalNotification:withResponseInfo:completionHandler:
application:didReceiveRemoteNotification:fetchCompletionHandler:
application:performFetchWithCompletionHandler:
application:performActionForShortcutItem:completionHandler:
application:handleEventsForBackgroundURLSession:completionHandler:
application:handleWatchKitExtensionRequest:reply:
applicationShouldRequestHealthAuthorization:
application:handleIntent:completionHandler:
applicationDidEnterBackground:
applicationWillEnterForeground:
applicationProtectedDataWillBecomeUnavailable:
applicationProtectedDataDidBecomeAvailable:
application:supportedInterfaceOrientationsForWindow:
application:shouldAllowExtensionPointIdentifier:
application:viewControllerWithRestorationIdentifierPath:coder:
application:shouldSaveApplicationState:
application:shouldRestoreApplicationState:
application:willEncodeRestorableStateWithCoder:
application:didDecodeRestorableStateWithCoder:
application:willContinueUserActivityWithType:
application:continueUserActivity:restorationHandler:
application:didFailToContinueUserActivityWithType:error:
application:didUpdateUserActivity:
application:userDidAcceptCloudKitShareWithMetadata:
setWindow:
rootViewController
orientationController
_window
_rootViewController
_orientationController
v4@?0
lockButtonTimer
T@"NSTimer",&,N,V_lockButtonTimer
idleSleepController
T@"PBAIdleSleepController",&,N,V_idleSleepController
invertUI
com.apple.nano
RESET_FAILED_MESSAGE
PreBoard
v8@?0B4
v8@?0@"NSError"4
orb-reset-compact
orb-reset-regular
RESET_OKAY
orb-cancel-compact
orb-cancel-regular
RESET_CANCEL
RESET_TITLE
RESET_MESSAGE
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
mainView
T@"UIView",&,N,V_mainView
contentView
T@"UIView",&,N,V_contentView
passcodeController
T@"PBAPasscodeViewController",&,N,V_passcodeController
isCompact
TB,V_isCompact
backlight
 retroactively
allowIdleTimerToBeReset
TB,N,V_allowIdleTimerToBeReset
displayDim
TB,N,GisDisplayDim,V_displayDim
idleSleepTimeout
Td,N,V_idleSleepTimeout
eventRouter
T@"BKSHIDEventRouter",&,N,V_eventRouter
savedEventRouters
T@"NSArray",C,N,V_savedEventRouters
window
T@"UIWindow",&,N
rootViewController
T@"PBARootViewController",&,N,V_rootViewController
orientationController
T@"PBAOrientationController",&,N,V_orientationController
T@"UIWindow",&,N,V_window
PBAScreenWillBlankNotification
PBAScreenDidBlankNotification
PBAScreenWillUnblankNotification
PBAScreenDidUnblankNotification
@8@0:4
v8@0:4
B8@0:4
v20@0:4i8i12B16
v20@0:4@8f12@16
v16@0:4@8@12
B12@0:4^{__IOHIDEvent=}8
v12@0:4^{__IOHIDEvent=}8
B12@0:4@8
v12@0:4@8
@"NSTimer"
@"PBAIdleSleepController"
@"FBSceneTransform"
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
B12@0:4@"PUICActionController"8
v12@0:4@"PUICActionController"8
v16@0:4@"PUICActionController"8@"PUICActionItem"12
v16@0:4@8B12
v16@0:4@"CUISPasscodeViewController"8B12
v16@0:4@"CUISPasscodeViewController"8@"NSString"12
v12@0:4B8
@"UIView"
@"PBAPasscodeViewController"
B12@0:4@"BSPowerMonitor"8
v12@0:4@"BSPowerMonitor"8
v12@0:4f8
v16@0:4B8@12
d8@0:4
v16@0:4d8
@"BKSHIDEventRouter"
@"NSArray"
B16@0:4@8@12
B24@0:4@8@12@16@20
B20@0:4@8@12@16
v24@0:4@8i12d16
v16@0:4@8i12
v28@0:4@8{CGRect={CGPoint=ff}{CGSize=ff}}12
v24@0:4@8@12@16@?20
v28@0:4@8@12@16@20@?24
v20@0:4@8@12@?16
v16@0:4@8@?12
I16@0:4@8@12
@20@0:4@8@12@16
B20@0:4@8@12@?16
v20@0:4@8@12@16
v12@0:4@"UIApplication"8
B16@0:4@"UIApplication"8@"NSDictionary"12
B16@0:4@"UIApplication"8@"NSURL"12
B24@0:4@"UIApplication"8@"NSURL"12@"NSString"16@20
B20@0:4@"UIApplication"8@"NSURL"12@"NSDictionary"16
v24@0:4@"UIApplication"8i12d16
v16@0:4@"UIApplication"8i12
v28@0:4@"UIApplication"8{CGRect={CGPoint=ff}{CGSize=ff}}12
v16@0:4@"UIApplication"8@"UIUserNotificationSettings"12
v16@0:4@"UIApplication"8@"NSData"12
v16@0:4@"UIApplication"8@"NSError"12
v16@0:4@"UIApplication"8@"NSDictionary"12
v16@0:4@"UIApplication"8@"UILocalNotification"12
v24@0:4@"UIApplication"8@"NSString"12@"UILocalNotification"16@?<v@?>20
v28@0:4@"UIApplication"8@"NSString"12@"NSDictionary"16@"NSDictionary"20@?<v@?>24
v24@0:4@"UIApplication"8@"NSString"12@"NSDictionary"16@?<v@?>20
v28@0:4@"UIApplication"8@"NSString"12@"UILocalNotification"16@"NSDictionary"20@?<v@?>24
v20@0:4@"UIApplication"8@"NSDictionary"12@?<v@?I>16
v16@0:4@"UIApplication"8@?<v@?I>12
v20@0:4@"UIApplication"8@"UIApplicationShortcutItem"12@?<v@?B>16
v20@0:4@"UIApplication"8@"NSString"12@?<v@?>16
v20@0:4@"UIApplication"8@"NSDictionary"12@?<v@?@"NSDictionary">16
v20@0:4@"UIApplication"8@"INIntent"12@?<v@?@"INIntentResponse">16
I16@0:4@"UIApplication"8@"UIWindow"12
B16@0:4@"UIApplication"8@"NSString"12
@"UIViewController"20@0:4@"UIApplication"8@"NSArray"12@"NSCoder"16
B16@0:4@"UIApplication"8@"NSCoder"12
v16@0:4@"UIApplication"8@"NSCoder"12
B20@0:4@"UIApplication"8@"NSUserActivity"12@?<v@?@"NSArray">16
v20@0:4@"UIApplication"8@"NSString"12@"NSError"16
v16@0:4@"UIApplication"8@"NSUserActivity"12
v16@0:4@"UIApplication"8@"CKShareMetadata"12
@"UIWindow"8@0:4
v12@0:4@"UIWindow"8
@"UIWindow"
@"PBARootViewController"
@"PBAOrientationController"
usagePage: 0x%x usage: 0x%x downEvent: %d
Lock button down
Shutting down device
Lock button up, lockButtonTimer = %@
unlocked, exiting...
~~~~~~ '%@' while unpairing/obliterating with device, retrying without device
~~~~~~ '%@' while obliterating without device
~~~~~~ Unpairing/obliteration has begun
Undimming display
Dimming display
Got kIOMessageCanSystemSleep
Got kIOMessageSystemWillNotSleep
Got kIOMessageSystemWillSleep
Got kIOMessageSystemWillPowerOn
Got kIOMessageSystemHasPoweredOn
disabling idle timer
Setting next autolock duration to %f%@
User Events Did Idle
User Events Did UnIdle
User Events Occurred
User Events Presence Timer Expired
User Event Notification fired
Got notification that backboardd is done doing setup work and is ready for the idle timer to be reset
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>allow-obliterate-device</key>
<true/>
<key>com.apple.CommCenter.Preferences-delete</key>
<true/>
<key>com.apple.QuartzCore.displayable-context</key>
<true/>
<key>com.apple.QuartzCore.secure-mode</key>
<true/>
<key>com.apple.backboard.client</key>
<true/>
<key>com.apple.keystore.device</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.pairedunlock.userauthentication</key>
<true/>
<key>com.apple.private.bmk.allow</key>
<true/>
<key>com.apple.private.ids.registration-reset</key>
<true/>
<key>com.apple.private.security.no-sandbox</key>
<true/>
<key>com.apple.private.xpc.launchd.app-server</key>
<true/>
<key>com.apple.wifi.manager-access</key>
<true/>
</dict>
</plist>
