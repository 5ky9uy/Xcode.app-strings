init
dictionary
setEngineCache:
alloc
setIdleManager:
idleManager
setDelegate:
setXpcServer:
xpcServer
engineCache
identifier
objectForKeyedSubscript:
setObject:forKey:
removeObjectForKey:
_removeEngineFromCache:
_cachedEngineForEngine:
sourceNodeWithIdentifier:
analysisOptions
clientID
voiceOverActivityOccurred
triggerWithContext:cacheKey:resultHandler:
purgeResources:
enumerateKeysAndObjectsUsingBlock:
removeAllObjects
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
prewarmVisionEngineService
visionEngine:evaluateSource:context:options:result:
willBecomeIdle:completion:
.cxx_destruct
_xpcServer
_engineCache
_idleManager
array
setConnections:
serviceListener
resume
invalidate
connections
removeObject:
delegate
setExportedInterface:
setExportedObject:
interfaceWithProtocol:
setRemoteObjectInterface:
setInterruptionHandler:
_destroyXPCConnection:
setInvalidationHandler:
addObject:
auditSessionIdentifier
numberWithInt:
processIdentifier
listener:shouldAcceptNewConnection:
_delegate
_connections
initWithTargetSerialQueue:
setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:
_queue_voiceOverActivityOccurred
containsObject:
_queue_addActiveReason:
_queue_removeActiveReason:
afterDelay:processBlock:cancelBlock:
count
_queue
_queue_activeReasons
_queue_voiceOverActivityTimer
_queue_transitioningToIdle
stringWithFormat:
*** AXMediaUtilities service starting up ***
*** AXMediaUtilities service about to exit ***
Service did receive prewarm message
notified that service will go idle. purging engine resources
did purge engine resources
Will destroy connection to client: %@
Connection from client interrupted
Connection from client invalidated
Accepting connection from client. AuditID:%@. PID:%@. connection: %@
active reason already exists: %@
Added activeReason: '%@'. all:[%@]
Will begin xpc transaction now
active reason did not exist: %@
Removed activeReason: '%@'. all:[%@]
No activeReasons remain. Will transition to idle
Will end xpc transaction now
activeReason added while transitioning to idle. aborting
*** AXMediaUtilitiesService is starting ***
Could not switch to mobile. aborting
No source found with identifier: %@. engineID:%@
v12@?0@"AXMVisionResult"4@"NSError"8
v4@?0
v16@?0@"NSString"4@"AXMVisionEngine"8^B12
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
xpcServer
T@"AXMServiceXPCServer",&,N,V_xpcServer
engineCache
T@"NSMutableDictionary",&,N,V_engineCache
idleManager
T@"AXMIdleManager",&,N,V_idleManager
connections
T@"NSMutableArray",&,N,V_connections
delegate
T@"<AXMServiceXPCServerDelegate>",W,N,V_delegate
VoiceOverActivity
AXMIdleManager
T@"<AXMIdleManagerDelegate>",W,N,V_delegate
mobile
AXMServiceInstance
AXMServiceXPCServerDelegate
AXMServiceInterface
NSObject
AXMIdleManagerDelegate
AXMServiceClientInterface
AXMServiceXPCServer
NSXPCListenerDelegate
AXMIdleManager
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v8@0:4
v28@0:4@8@12@16i20@?24
v28@0:4@"AXMVisionEngine"8@"AXMSourceNode"12@"AXMVisionPipelineContext"16i20@?<v@?@"AXMVisionResult"@"NSError">24
v16@0:4@8@?12
v16@0:4@"AXMIdleManager"8@?<v@?>12
@12@0:4@8
v12@0:4@8
@"AXMServiceXPCServer"
@"NSMutableDictionary"
@"AXMIdleManager"
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
@"<AXMServiceXPCServerDelegate>"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@"AXDispatchTimer"
@"<AXMIdleManagerDelegate>"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.QuartzCore.global-capture</key>
<true/>
<key>com.apple.accessibility.api</key>
<true/>
<key>com.apple.private.photoanalysisd.access</key>
<true/>
<key>com.apple.private.security.no-sandbox</key>
<true/>
</dict>
</plist>
zPLR
