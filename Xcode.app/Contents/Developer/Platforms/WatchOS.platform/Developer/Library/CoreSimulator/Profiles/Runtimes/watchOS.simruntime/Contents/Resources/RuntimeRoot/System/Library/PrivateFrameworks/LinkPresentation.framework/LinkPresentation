v4@?0
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
rgba(%d, %d, %d, %g)
#%02X%02X%02X
Link: %@ (%@)
Link: %@
metadata
T@"LPLinkMetadata",R,C,N,V_metadata
T@"NSURL",R,C,N,V_URL
previewSummary
T@"NSString",R,C,N
previewImage
T@"LPImage",R,&,N
subscription
anonymousDownload
type
TI,R,N,V_type
storeIdentifier
T@"NSString",C,N,V_storeIdentifier
storefrontIdentifier
T@"NSString",C,N,V_storefrontIdentifier
previewURL
T@"NSURL",C,N,V_previewURL
offers
T@"NSArray",C,N,V_offers
isAvailableForAnonymousDownload
TB,R,N
accessibilityText
T@"NSString",C,N,V_accessibilityText
Trying to create an LPImage with nil data.
Trying to create an LPImage with nil MIME type.
Trying to create an LPImage with nil file URL.
Trying to create an LPImage with URL which is not a file URL.
Trying to create an LPImage from a nil LPPlatformImage.
v8@?0@"UIImage"4
@%lux
v8@?0@?<v@?@"UIImage">4
image/png
supportsSecureCoding
TB,R
platformImage
T@"UIImage",&,N,V_platformImage
_encodedSize
TL,R,N
_pixelSize
T{CGSize=ff},R,N
_placeholderIcon
TB,N,G_isPlaceholderIcon,V_placeholderIcon
_remoteURLsForEmailCompatibleOutput
T@"NSArray",&,N,V_remoteURLsForEmailCompatibleOutput
fileURL
T@"NSURL",&,N,V_fileURL
data
T@"NSData",R,C,N
MIMEType
properties
T@"LPImageProperties",R,C,N
scale
TI,R,N,V_scale
T@"NSURL",R,&,N,V_URL
com.apple.LinkPresentation.AsyncImageLoadingRequest
com.apple.LinkPresentation.AsyncImageLoading
LPMetadataURL
LPMetadataTitle
LPMetadataDescription
LPMetadataSelectedText
LPMetadataSiteName
LPMetadataItemType
LPMetadataRelatedURL
LPMetadataCreator
LPMetadataCreatorFacebookProfile
LPMetadataCreatorTwitterUsername
LPMetadataAppleContentID
LPMetadataIcons
LPMetadataImages
LPMetadataVideos
LPMetadataStreamingVideos
LPMetadataAudios
version
originalURL
title
summary
selection
siteName
itemType
relatedURL
creator
creatorFacebookProfile
creatorTwitterUsername
appleContentID
icon
iconMetadata
image
imageMetadata
video
videoMetadata
icons
images
videos
streamingVideos
audios
specialization2
specialization
TI,R,N,V_version
T@"NSURL",C,N,V_originalURL
T@"NSURL",C,N,V_URL
T@"NSString",C,N,V_title
T@"NSString",C,N,V_summary
selectedText
T@"NSString",C,N,V_selectedText
T@"NSString",C,N,V_siteName
T@"NSString",C,N,V_itemType
T@"NSURL",C,N,V_relatedURL
T@"NSString",C,N,V_creator
T@"NSString",C,N,V_creatorFacebookProfile
T@"NSString",C,N,V_creatorTwitterUsername
T@"NSString",C,N,V_appleContentID
T@"LPImage",&,N,V_icon
T@"LPIconMetadata",&,N,V_iconMetadata
T@"LPImage",&,N,V_image
T@"LPImageMetadata",&,N,V_imageMetadata
T@"LPVideo",&,N,V_video
T@"LPVideoMetadata",&,N,V_videoMetadata
T@"NSArray",C,N,V_icons
T@"NSArray",C,N,V_images
T@"NSArray",C,N,V_videos
T@"NSArray",C,N,V_streamingVideos
T@"NSArray",C,N,V_audios
T@"LPSpecializationMetadata",C,N,V_specialization
LPMetadataImageURL
LPMetadataImageType
LPMetadataImageAccessibilityText
LPMetadataImageWidth
LPMetadataImageHeight
size
T@"NSString",C,N,V_type
T{CGSize=ff},N,V_size
colors
T@"NSDictionary",C,N,V_colors
LPMetadataVideoURL
LPMetadataVideoType
LPMetadataVideoWidth
LPMetadataVideoHeight
LPMetadataAudioURL
LPMetadataAudioType
storeFrontIdentifier
name
artist
album
lyrics
artwork
T@"NSString",C,N,V_storeFrontIdentifier
T@"NSString",C,N,V_name
T@"NSString",C,N,V_artist
T@"NSString",C,N,V_album
T@"NSString",C,N,V_lyrics
T@"LPImage",&,N,V_artwork
artworkMetadata
T@"LPArtworkMetadata",C,N,V_artworkMetadata
genre
T@"NSString",C,N,V_genre
curator
T@"NSString",C,N,V_curator
platform
screenshots
isMessagesOnlyApp
messagesAppIcon
T@"NSString",C,N,V_platform
T@"NSArray",&,N,V_screenshots
TB,N,V_isMessagesOnlyApp
T@"LPImage",&,N,V_messagesAppIcon
author
T@"NSString",C,N,V_author
narrator
T@"NSString",C,N,V_narrator
episodeName
podcastName
releaseDate
T@"NSString",C,N,V_episodeName
T@"NSString",C,N,V_podcastName
T@"NSDate",C,N,V_releaseDate
seasonName
T@"NSString",C,N,V_seasonName
brandingText
branding
T@"LPImage",&,N,V_branding
T@"NSString",&,N,V_brandingText
application
applicationBundleIdenfier
T@"NSString",C,N,V_applicationBundleIdenfier
T@"NSString",C,N,V_application
game
numberOfPlayers
minimumNumberOfPlayers
maximumNumberOfPlayers
T@"NSString",C,N,V_game
TI,N,V_numberOfPlayers
TI,N,V_minimumNumberOfPlayers
TI,N,V_maximumNumberOfPlayers
subtitle
action
T@"NSString",C,N,V_subtitle
T@"NSString",C,N,V_action
T@"LPLinkMetadata",&,N,V_metadata
delegate
T@"<LPLinkMetadataStatusTransformerDelegate>",W,N,V_delegate
wantsStatusItem
TB,R,N,V_wantsStatusItem
statusText
T@"NSAttributedString",R,C,N
actionURL
T@"NSURL",R,C,N
canonicalURL
B16@?0@"NSString"4I8^B12
v16@?0@"NSString"4I8^B12
http://
https://
www.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-.
Pages
Notes
Numbers
Keynote
iCloud Drive
com.apple.mobilenotes
Shared from %@
Shared using iCloud Sharing
Link: Document shared from %@
Link: Document shared using iCloud Sharing
text
T@"NSString",C,N,V_text
attributedText
T@"NSAttributedString",C,N,V_attributedText
color
T@"UIColor",&,N,V_color
textScale
Tf,N,V_textScale
maximumNumberOfLines
T@"NSNumber",&,N,V_maximumNumberOfLines
hasAnyContent
leading
T@"LPCaptionPresentationProperties",R,&,N,V_leading
trailing
T@"LPCaptionPresentationProperties",R,&,N,V_trailing
leadingIcon
T@"LPImage",&,N,V_leadingIcon
leadingIconMaskColor
T@"UIColor",&,N,V_leadingIconMaskColor
trailingIcon
T@"LPImage",&,N,V_trailingIcon
trailingIconMaskColor
T@"UIColor",&,N,V_trailingIconMaskColor
belowLeadingIcon
T@"LPImage",&,N,V_belowLeadingIcon
belowLeadingIconMaskColor
T@"UIColor",&,N,V_belowLeadingIconMaskColor
leadingAccessoryType
Ti,N,V_leadingAccessoryType
trailingAccessoryType
Ti,N,V_trailingAccessoryType
aboveTop
T@"LPCaptionRowPresentationProperties",R,&,N,V_aboveTop
T@"LPCaptionRowPresentationProperties",R,&,N,V_top
bottom
T@"LPCaptionRowPresentationProperties",R,&,N,V_bottom
belowBottom
T@"LPCaptionRowPresentationProperties",R,&,N,V_belowBottom
minimumHeight
T@"NSNumber",&,N,V_minimumHeight
Invitation to play %@
%d-%d Players
%d Player(s)
hasFetchedSubresources
TB,N,V_hasFetchedSubresources
Artist: %@
Radio: %@
App Store: %@
Podcasts
Podcast: %@
TV Season: %@
Movie: %@
LPShowDebugIndicators
LPDisableLegacyStoreLookups
showDebugIndicators
disableLegacyStoreLookups
bgColor
textColor1
textColor2
textColor3
textColor4
height
width
v16@?0@"NSString"4i8@"NSString"12
Ti,R,N
data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='%g' height='%g'></svg>
audio
assets
flavor
plusAudio
standardAudio
preview
isEVOD
T@"NSURL",R,C,N,V_previewURL
T@"NSString",R,C,N,V_type
hasAudio
TB,R,N,V_hasAudio
hasVideo
TB,R,N,V_hasVideo
TB,R,N,V_isEVOD
Trying to update a text stack after it has been laid out.
T@"UIImage",&,N,V_image
animationOrigin
Ti,N,V_animationOrigin
imageView
T@"UIView",R,&,N
text/html
image/x-icon
image/jpg
video/
application/
video/webm
video/x-webm
video/x-flv
video/ogg
application/ogg
application/vnd.apple.mpegurl
application/x-mpegurl
video/3gpp
video/3gpp2
video/mp4
video/mpeg
video/mpeg2
video/mpg
video/quicktime
video/x-m4v
video/x-mpeg
video/x-mpg
captionBar
T@"LPCaptionBarPresentationProperties",&,N,V_captionBar
mediaTopCaptionBar
T@"LPCaptionBarPresentationProperties",&,N,V_mediaTopCaptionBar
mediaBottomCaptionBar
T@"LPCaptionBarPresentationProperties",&,N,V_mediaBottomCaptionBar
topCaption
T@"NSString",C,N,V_topCaption
bottomCaption
T@"NSString",C,N,V_bottomCaption
trailingTopCaption
T@"NSString",C,N,V_trailingTopCaption
trailingBottomCaption
T@"NSString",C,N,V_trailingBottomCaption
mediaTopCaption
T@"NSString",C,N,V_mediaTopCaption
mediaBottomCaption
T@"NSString",C,N,V_mediaBottomCaption
backgroundColor
T@"UIColor",&,N,V_backgroundColor
http
https
got ICU error while trying to look at scripts: %d
got negative number for script code from ICU: %d
IDNScriptWhiteList.txt
Common
Inherited
Arabic
Armenian
Bopomofo
Canadian_Aboriginal
Devanagari
Deseret
Gujarati
Gurmukhi
Hangul
Hebrew
Hiragana
Katakana_Or_Hiragana
Katakana
Latin
Tamil
Thai
 #%*[^
]%*[
 %32[^# 
]%*[^# 
illegal hex digit
v16@?0@"NSString"4{_NSRange=II}8
mailto:
:/?#
143441
143455
143444
143442
143456
143457
143443
143449
143460
143458
143462
143450
143459
143489
143445
143491
143454
143452
143469
143508
143501
143503
143468
143505
143558
143447
143596
143602
143605
143549
143496
143531
143568
143504
143532
143589
143542
143563
143485
143522
143488
143587
143595
143471
143567
143556
143474
143483
143544
143525
143551
143477
143562
143519
143537
143570
143518
143448
143446
143593
143581
143451
143486
143517
143521
143480
143512
143535
143553
143472
143453
143559
143586
143529
143603
143580
143497
143510
143594
143487
143572
143591
143600
143478
143550
143548
143530
143481
143461
143579
143541
143539
143554
143597
143598
143578
143515
143506
143575
143601
143552
143585
143476
143545
143571
143526
143479
143502
143564
143464
143546
143574
143582
143493
143588
143507
143547
143555
143498
143524
143557
143494
143465
143584
143499
143590
143520
143484
143573
143538
143492
143583
143495
143561
143490
143513
143463
143566
143604
143540
143473
143536
143467
143470
143577
143534
143523
143475
143482
143509
143560
143533
143511
143599
143569
143516
143576
143466
143543
143528
143514
143527
143592
143565
143500
_overlappingControlsColor
T@"UIColor",&,N,S_setOverlappingControlsColor:,V__overlappingControlsColor
TB,N,V_hasAudio
overlappingControlsColor
_intrinsicSize
_asset
T@"AVAsset",R,N
streamingURL
T@"NSURL",R,&,N,V_streamingURL
youTubeURL
T@"NSURL",R,&,N,V_youTubeURL
T@"NSString",R,C,N,V_MIMEType
T@"LPVideoProperties",R,C,N
style
T@"LPTextViewStyle",R,&,N
T{CGSize=ff},R,N,V_size
%gpx
value
Tf,R,N,V_value
T@"LPPointUnit",R,&,N,V_width
T@"LPPointUnit",R,&,N,V_height
asSize
%gpx %gpx %gpx %gpx
T@"LPPointUnit",&,N,V_top
T@"LPPointUnit",&,N,V_leading
T@"LPPointUnit",&,N,V_bottom
T@"LPPointUnit",&,N,V_trailing
font
T@"UIFont",&,N,V_font
maximumLines
TI,N,V_maximumLines
textAlignment
Ti,N,V_textAlignment
firstLineLeading
T@"LPPointUnit",&,N,V_firstLineLeading
leadingGlyph
T@"LPGlyphStyle",&,N,V_leadingGlyph
padding
T@"LPPadding",R,&,N,V_padding
T@"LPTextViewStyle",R,N,V_leading
T@"LPTextViewStyle",R,N,V_trailing
lastLineDescent
T@"LPPointUnit",&,N,V_lastLineDescent
aboveTopCaption
T@"LPTextRowStyle",R,N,V_aboveTopCaption
T@"LPTextRowStyle",R,N,V_topCaption
T@"LPTextRowStyle",R,N,V_bottomCaption
belowBottomCaption
T@"LPTextRowStyle",R,N,V_belowBottomCaption
captionTextPadding
T@"LPPadding",R,&,N,V_captionTextPadding
emailCompatibleMargin
T@"LPPadding",R,&,N,V_emailCompatibleMargin
margin
T@"LPPadding",R,&,N,V_margin
T@"LPSize",&,N,V_size
filter
Ti,N,V_filter
backgroundInset
T@"LPPointUnit",&,N,V_backgroundInset
foregroundOpacity
Tf,N,V_foregroundOpacity
cornerRadius
T@"LPPointUnit",&,N,V_cornerRadius
darkeningAmount
Tf,N,V_darkeningAmount
maskColor
T@"UIColor",&,N,V_maskColor
opacity
Tf,N,V_opacity
imageStyle
T@"LPImageViewStyle",R,N,V_imageStyle
baselineOffset
T@"LPPointUnit",&,N,V_baselineOffset
backgroundSize
T@"LPSize",&,N,V_backgroundSize
disabledOpacity
Tf,N,V_disabledOpacity
playButton
T@"LPVideoPlayButtonStyle",R,N,V_playButton
muteButton
T@"LPImageViewStyle",R,N,V_muteButton
muteButtonPadding
T@"LPPadding",R,&,N,V_muteButtonPadding
muteButtonOpacity
Tf,N,V_muteButtonOpacity
muteButtonHighlightedOpacity
Tf,N,V_muteButtonHighlightedOpacity
pulsingLoadIndicatorColor
T@"UIColor",&,N,V_pulsingLoadIndicatorColor
pulsingLoadIndicatorMaximumOpacity
Tf,N,V_pulsingLoadIndicatorMaximumOpacity
pulsingLoadIndicatorDuration
Td,N,V_pulsingLoadIndicatorDuration
pulsingLoadIndicatorTimingFunction
T@"CAMediaTimingFunction",&,N,V_pulsingLoadIndicatorTimingFunction
fullScreenBackgroundColor
T@"UIColor",&,N,V_fullScreenBackgroundColor
T@"LPImageViewStyle",R,N,V_leadingIcon
T@"LPImageViewStyle",R,N,V_trailingIcon
T@"LPImageViewStyle",R,N,V_belowLeadingIcon
leadingAccessory
T@"LPCaptionBarAccessoryStyle",R,N,V_leadingAccessory
trailingAccessory
T@"LPCaptionBarAccessoryStyle",R,N,V_trailingAccessory
textStack
T@"LPVerticalTextStackViewStyle",R,N,V_textStack
minimumWidth
T@"LPPointUnit",&,N,V_minimumWidth
T@"LPPointUnit",&,N,V_minimumHeight
placeholderIcon
T@"LPImageViewStyle",R,N,V_placeholderIcon
T@"LPMusicPlayButtonStyle",R,N,V_playButton
playButtonPadding
T@"LPPadding",R,&,N,V_playButtonPadding
tapHighlightColor
T@"UIColor",&,N,V_tapHighlightColor
caption
T@"LPTextViewStyle",R,N,V_caption
T@"LPPointUnit",&,N,V_width
T@"LPPointUnit",&,N,V_height
Trying to add a LPThemeClient that is already a client.
--%@:%@;
v12@?0@"NSString"4^B8
highlightColor
T@"UIColor",&,N,V_highlightColor
T@"LPCaptionBarStyle",R,N,V_captionBar
quotedText
T@"LPTextViewStyle",R,N,V_quotedText
mediaImage
T@"LPImageViewStyle",R,N,V_mediaImage
mediaVideo
T@"LPVideoViewStyle",R,N,V_mediaVideo
mediaBackgroundColor
T@"UIColor",&,N,V_mediaBackgroundColor
T@"LPCaptionBarStyle",R,N,V_mediaTopCaptionBar
T@"LPCaptionBarStyle",R,N,V_mediaBottomCaptionBar
tapToLoad
T@"LPTapToLoadViewStyle",R,N,V_tapToLoad
maximumWidth
T@"LPPointUnit",&,N,V_maximumWidth
maximumIntrinsicHeight
T@"LPPointUnit",&,N,V_maximumIntrinsicHeight
widthFractionForTallMedia
Tf,N,V_widthFractionForTallMedia
%ld-%d-%ld
search
webhp
.google.ae
.google.am
.google.as
.google.at
.google.az
.google.ba
.google.be
.google.bg
.google.bi
.google.bs
.google.ca
.google.cd
.google.cg
.google.ch
.google.ci
.google.cl
.google.cn
.google.co.bw
.google.co.ck
.google.co.cr
.google.co.id
.google.co.il
.google.co.im
.google.co.in
.google.co.je
.google.co.jp
.google.co.ke
.google.co.kr
.google.co.ls
.google.co.ma
.google.co.nz
.google.co.th
.google.co.ug
.google.co.uk
.google.co.uz
.google.co.ve
.google.co.vi
.google.co.za
.google.co.zm
.google.com
.google.com.af
.google.com.ag
.google.com.ar
.google.com.au
.google.com.bd
.google.com.bh
.google.com.bo
.google.com.br
.google.com.bz
.google.com.co
.google.com.cu
.google.com.do
.google.com.ec
.google.com.eg
.google.com.et
.google.com.fj
.google.com.gi
.google.com.gt
.google.com.hk
.google.com.jm
.google.com.ly
.google.com.mt
.google.com.mx
.google.com.my
.google.com.na
.google.com.nf
.google.com.ni
.google.com.np
.google.com.om
.google.com.pa
.google.com.pe
.google.com.ph
.google.com.pk
.google.com.pr
.google.com.py
.google.com.qa
.google.com.sa
.google.com.sb
.google.com.sg
.google.com.sv
.google.com.tj
.google.com.tr
.google.com.tw
.google.com.ua
.google.com.uy
.google.com.vc
.google.com.vn
.google.cz
.google.de
.google.dj
.google.dk
.google.dm
.google.ee
.google.es
.google.fi
.google.fm
.google.fr
.google.ge
.google.gg
.google.gl
.google.gm
.google.gr
.google.hn
.google.hr
.google.ht
.google.hu
.google.ie
.google.is
.google.it
.google.jo
.google.kg
.google.kz
.google.li
.google.lk
.google.lt
.google.lu
.google.lv
.google.md
.google.mn
.google.ms
.google.mu
.google.mw
.google.nl
.google.no
.google.nr
.google.nu
.google.off.ai
.google.pl
.google.pn
.google.pt
.google.ro
.google.ru
.google.rw
.google.sc
.google.se
.google.sh
.google.si
.google.sk
.google.sm
.google.sn
.google.tm
.google.to
.google.tp
.google.tt
.google.vg
.google.vu
.google.ws
.yahoo.com
.yahoo.co.jp
search;
.yandex.ru
.ya.ru
.yandex.by
.yandex.kz
.yandex.com.tr
.yandex.ua
.yandex.com
yandsearch
.bing.com
.discoverbing.com
.duckduckgo.com
lite
html
.baidu.com
word
T@"LPCaptionBarView",&,N,V_captionBar
media
T@"LPComponentView",&,N,V_media
T@"LPCaptionBarView",&,N,V_mediaTopCaptionBar
T@"LPCaptionBarView",&,N,V_mediaBottomCaptionBar
quote
T@"LPTextView",&,N,V_quote
associatedView
widthSpring
heightSpring
fadeIn
bounds.size.width
maskWidthSpring
transform.translation.x
maskViewSpring
bounds.size.height
maskHeightSpring
transform.translation.y
verticalSlide
transform.translation
transformSpring
previousCaptionBarPositionMaintaining
captionBarAdjustedTransformSpring
transform.scale.x
mediaScaleSpring
transform.scale.y
mediaScaleYSpring
CKBalloonView
backgroundColorTransition
_disableAnimations
TB,N,S_setDisableAnimations:,V_disableAnimations
_animationOrigin
Ti,N,S_setAnimationOrigin:,V_animationOrigin
_disableTapGesture
TB,N,S_setDisableTapGesture:,V_disableTapGesture
_disableHighlightGesture
TB,N,S_setDisableHighlightGesture:,V_disableHighlightGesture
_disablePlayback
TB,N,S_setDisablePlayback:,V_disablePlayback
_disablePlaybackControls
TB,N,S_setDisablePlaybackControls:,V_disablePlaybackControls
_disableAutoPlay
TB,N,S_setDisableAutoPlay:,V_disableAutoPlay
_allowsTapToLoad
TB,N,S_setAllowsTapToLoad:,V_allowsTapToLoad
_usesDeferredLayout
TB,N,S_setUsesDeferredLayout:,V_usesDeferredLayout
_forceFlexibleWidth
TB,N,S_setForceFlexibleWidth:,V_forceFlexibleWidth
_applyCornerRadius
TB,N,S_setApplyCornerRadius:,V_applyCornerRadius
_style
T@"<LPLinkViewDelegate>",W,N,V_delegate
T@"LPLinkMetadata",C,N,V_metadata
contentInset
T{UIEdgeInsets=ffff},N,V_contentInset
v16@?0@4@8^B12
identifier
T@"NSString",R,C,N,V_identifier
storefrontCountryCode
T@"NSString",R,C,N,V_storefrontCountryCode
LPErrorDomain
 on Twitter
complete
TB,N,GisComplete,V_complete
allowsTapToLoad
TB,N,V_allowsTapToLoad
forceMiniStyle
TB,N,V_forceMiniStyle
videoID
T@"NSString",C,N,V_videoID
startTime
Td,N,V_startTime
twitter.com
mobile.twitter.com
status
weibo.com
pbs.twimg.com
profile_images
github.com
m.reddit.com
reddit.com
youtube.com
www.youtube.com
watch
embed
start
m.youtube.com
youtu.be
/watch
i.imgur.com
imgur.com
Chevron
Safari
https://www.icloud.com/mail_resources/app_icons/pages.png
https://www.icloud.com/mail_resources/app_icons/pages@2x.png
https://www.icloud.com/mail_resources/app_icons/pages@3x.png
https://www.icloud.com/mail_resources/app_icons/notes.png
https://www.icloud.com/mail_resources/app_icons/notes@2x.png
https://www.icloud.com/mail_resources/app_icons/notes@3x.png
https://www.icloud.com/mail_resources/app_icons/numbers.png
https://www.icloud.com/mail_resources/app_icons/numbers@2x.png
https://www.icloud.com/mail_resources/app_icons/numbers@3x.png
https://www.icloud.com/mail_resources/app_icons/keynote.png
https://www.icloud.com/mail_resources/app_icons/keynote@2x.png
https://www.icloud.com/mail_resources/app_icons/keynote@3x.png
iCloudDrive
https://www.icloud.com/mail_resources/app_icons/icloud.png
https://www.icloud.com/mail_resources/app_icons/icloud@2x.png
https://www.icloud.com/mail_resources/app_icons/icloud@3x.png
Search
Play
Pause
Mute
Unmute
MusicPlay
MusicPause
Beats1
IndeterminateProgress
forceRTL
TB,N
forceImageLoadingScaleFactor
TI,N
customLoader
T@"<LPTestingLoader>",&,N
Trying to update a caption bar after it has been laid out.
captionFadeOutSpring
transform.scale.xy
spinnerShrinkOutSpring
f36@?0{CGRect={CGPoint=ff}{CGSize=ff}}4{UIEdgeInsets=ffff}20
useProgressSpinner
TB,N,V_useProgressSpinner
preliminary
TB,N,GisPreliminary,V_preliminary
Ti,N,V_style
T@"NSString",C,N,V_quotedText
iTunesPlaybackInformation
T@"LPiTunesPlaybackInformation",&,N,V_iTunesPlaybackInformation
Tap to Load Preview
captionShrinkSpring
highlightFadeOut
progressFadeInSpring
progressGrowSpring
fadeOut
scaleOut
highlightFadeOutSpring
T@"<LPTapToLoadViewDelegate>",W,N,V_delegate
alloc
init
null
shared
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
actionForLayer:forKey:
getRed:green:blue:alpha:
_lp_CSSTextHexFormat
_lp_CSSText
_lp_HTMLAttributeText
stringWithFormat:
bundleForClass:
localizedStringForKey:value:table:
specialization
previewSummaryForTransformer:
previewImageForTransformer:
title
_lp_simplifiedDisplayString
initWithMetadata:URL:
previewSummary
previewImage
.cxx_destruct
metadata
_metadata
_URL
count
countByEnumeratingWithState:objects:count:
isEqualToString:
initWithType:
availability
isAvailableForAnonymousDownload
type
storeIdentifier
setStoreIdentifier:
storefrontIdentifier
setStorefrontIdentifier:
previewURL
setPreviewURL:
offers
setOffers:
_type
_storeIdentifier
_storefrontIdentifier
_previewURL
_offers
allocWithZone:
accessibilityText
copy
setAccessibilityText:
copyWithZone:
_accessibilityText
initWithData:MIMEType:properties:
raise:format:
initByReferencingFileURL:MIMEType:properties:
isFileURL
checkResourceIsReachableAndReturnError:
setFileURL:
initWithPlatformImage:properties:
forceImageLoadingScaleFactor
stringByAppendingFormat:
imageNamed:inBundle:
_initWithPlatformImageGenerator:
_lp_strictlyDecodeObjectOfClass:forKey:
_createDataFromPlatformImage
_shouldEncodeData
encodeObject:forKey:
_lp_encodeObjectIfNotNil:forKey:
_waitForAsynchronouslyLoadedImageIfNeeded
data
initWithData:
platformImage
_mapDataFromFileURL
dataWithContentsOfURL:options:error:
length
size
_PNGImageNamed:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
_initWithImage:
initWithData:MIMEType:
initByReferencingFileURL:MIMEType:
initWithPlatformImage:
_preparePlatformImageWithCompletionHandler:
MIMEType
properties
_encodedSize
_pixelSize
_isPlaceholderIcon
set_placeholderIcon:
_remoteURLsForEmailCompatibleOutput
set_remoteURLsForEmailCompatibleOutput:
fileURL
setPlatformImage:
_originalPlatformImage
_data
_MIMEType
_properties
_asynchronousLoadGroup
_placeholderIcon
_fileURL
_platformImage
initWithScale:URL:
scale
_scale
objectForKey:
_initWithURL:
addObject:
_initWithDictionary:
decodeInt32ForKey:
_lp_isHTTPFamilyOrLinkPresentationTestingURL
_lp_strictlyDecodeArrayOfObjectsOfClass:forKey:
version
originalURL
setOriginalURL:
setURL:
setTitle:
summary
setSummary:
selectedText
setSelectedText:
siteName
setSiteName:
itemType
setItemType:
relatedURL
setRelatedURL:
creator
setCreator:
creatorFacebookProfile
setCreatorFacebookProfile:
creatorTwitterUsername
setCreatorTwitterUsername:
appleContentID
setAppleContentID:
icon
setIcon:
iconMetadata
setIconMetadata:
image
setImage:
imageMetadata
setImageMetadata:
video
setVideo:
videoMetadata
setVideoMetadata:
icons
setIcons:
images
setImages:
videos
setVideos:
streamingVideos
setStreamingVideos:
audios
setAudios:
setSpecialization:
encodeInt32:forKey:
_lp_encodeArrayIfNotEmpty:forKey:
initForReadingFromData:error:
setDecodingFailurePolicy:
finishDecoding
initRequiringSecureCoding:
encodedData
metadataWithDataRepresentation:
dataRepresentation
_reduceSizeByDroppingResourcesIfNeeded
_version
_originalURL
_title
_summary
_selectedText
_siteName
_itemType
_relatedURL
_creator
_creatorFacebookProfile
_creatorTwitterUsername
_appleContentID
_icon
_iconMetadata
_image
_imageMetadata
_video
_videoMetadata
_icons
_images
_videos
_streamingVideos
_audios
_specialization
doubleValue
setType:
setSize:
_size
_lp_strictlyDecodeDictionaryOfObjectsWithKeysOfClass:andObjectsOfClass:forKey:
colors
setColors:
_colors
populateLinkMetadataForBackwardCompatibility:
storeFrontIdentifier
setStoreFrontIdentifier:
name
setName:
artist
setArtist:
album
setAlbum:
lyrics
setLyrics:
artwork
setArtwork:
artworkMetadata
setArtworkMetadata:
_storeFrontIdentifier
_name
_artist
_album
_lyrics
_artwork
_artworkMetadata
genre
setGenre:
_genre
curator
setCurator:
_curator
decodeBoolForKey:
encodeBool:forKey:
platform
setPlatform:
screenshots
setScreenshots:
isMessagesOnlyApp
setIsMessagesOnlyApp:
messagesAppIcon
setMessagesAppIcon:
_isMessagesOnlyApp
_platform
_screenshots
_messagesAppIcon
author
setAuthor:
_author
narrator
setNarrator:
_narrator
episodeName
setEpisodeName:
podcastName
setPodcastName:
releaseDate
setReleaseDate:
_episodeName
_podcastName
_releaseDate
seasonName
setSeasonName:
_seasonName
brandingText
setBrandingText:
branding
setBranding:
_branding
_brandingText
application
setApplication:
applicationBundleIdenfier
setApplicationBundleIdenfier:
_applicationBundleIdenfier
_application
game
setGame:
numberOfPlayers
setNumberOfPlayers:
minimumNumberOfPlayers
setMinimumNumberOfPlayers:
maximumNumberOfPlayers
setMaximumNumberOfPlayers:
_game
_numberOfPlayers
_minimumNumberOfPlayers
_maximumNumberOfPlayers
subtitle
setSubtitle:
action
setAction:
_subtitle
_action
URLWithString:
arrayWithObjects:count:
decodeCGSizeForKey:
encodeCGSize:forKey:
initWithText:style:
_lp_isLTR
addSubview:
setContentInset:
style
firstLineLeading
value
font
ascender
descender
bounds
_layoutCaptionPairForSize:applyingLayout:
sizeThatFits:
setFrame:
initWithLeadingText:leadingStyle:trailingText:trailingStyle:
layoutComponentView
_leftView
_rightView
_contentInset
fontDescriptor
floatValue
numberWithFloat:
_lp_CSSFontWeight
initializeForTransformer:
destroyForTransformer:
statusForTransformer:
actionURLForTransformer:
dealloc
statusTransformerDidUpdate:
setMetadata:
statusText
actionURL
canonicalURL
delegate
setDelegate:
wantsStatusItem
_wantsStatusItem
_delegate
_lp_userVisibleHost
rangeOfString:options:
caseInsensitiveCompare:
_lp_isEqualIgnoringCase:
indexOfObjectPassingTest:
reverseObjectEnumerator
stringWithCapacity:
insertString:atIndex:
_lp_reverseEnumerateComponents:usingBlock:
_web_looksLikeIPAddress
componentsSeparatedByString:
_lp_topLevelDomainUsingCFFromComponents:
_lp_hasCaseInsensitivePrefix:
rangeOfString:options:range:
stringByReplacingCharactersInRange:withString:
substringFromIndex:
substringToIndex:
substringWithRange:
_lp_highLevelDomainFromHost
stringByAppendingString:
_lp_stringForcingLeftToRightDirection
_lp_isEqualToAnyIgnoringCase:
_lp_simplifiedUserVisibleURLStringWithSimplifications:forDisplayOnly:
characterSetWithCharactersInString:
invertedSet
rangeOfCharacterFromSet:options:range:
pagesIcon
notesIcon
numbersIcon
keynoteIcon
iCloudDriveIcon
dictionaryWithObjects:forKeys:count:
objectForKeyedSubscript:
applicationProxyForIdentifier:
localizedNameForContext:
setStyle:
setCaptionBar:
captionBar
computeIcon
setLeadingIcon:
computeLocalizedApplicationName
leading
setText:
bottom
presentationPropertiesForTransformer:
setMediaBottomCaptionBar:
mediaBottomCaptionBar
sharedApplication
preferredContentSizeCategory
insertString:intoTrieWithCache:
addStringToFailedSuffixes:
hasSuffix:remainingPrefix:
characterAtIndex:
initWithSuffixes:
hasSuffix:
_trie
_trieNodeCount
_maxLength
_failedSuffixes
CGImage
initWithCGImage:
_flatImageWithColor:
_lp_CGImage
_lp_flatImageWithColor:
_lp_createImageWithCGImage:
forceRTL
userInterfaceLayoutDirection
initWithString:
string
setTextScale:
setAttributedText:
text
attributedText
color
setColor:
textScale
maximumNumberOfLines
setMaximumNumberOfLines:
_text
_attributedText
_color
_textScale
_maximumNumberOfLines
trailing
left
right
hasAnyContent
_leading
_trailing
leadingIcon
trailingIcon
leadingIconMaskColor
trailingIconMaskColor
belowLeadingIcon
belowLeadingIconMaskColor
leadingAccessoryType
trailingAccessoryType
leftIcon
leftIconMaskColor
rightIcon
rightIconMaskColor
belowLeftIcon
belowLeftIconMaskColor
belowRightIcon
belowRightIconMaskColor
leftAccessoryType
rightAccessoryType
setLeadingIconMaskColor:
setTrailingIcon:
setTrailingIconMaskColor:
setBelowLeadingIcon:
setBelowLeadingIconMaskColor:
setLeadingAccessoryType:
setTrailingAccessoryType:
aboveTop
belowBottom
minimumHeight
setMinimumHeight:
_leadingIcon
_leadingIconMaskColor
_trailingIcon
_trailingIconMaskColor
_belowLeadingIcon
_belowLeadingIconMaskColor
_leadingAccessoryType
_trailingAccessoryType
_aboveTop
_top
_bottom
_belowBottom
_minimumHeight
bezierPathWithRoundedRect:cornerRadius:
CGPath
CGColor
mainScreen
_iconVariantForUIApplicationIconFormat:scale:
imageWithCGImage:scale:orientation:
localizedStringWithFormat:
invitationText
playerCountText
setMediaTopCaptionBar:
mediaTopCaptionBar
hasFetchedSubresources
setHasFetchedSubresources:
_hasFetchedSubresources
iTunesPlaybackInformationForURL:
setITunesPlaybackInformation:
storeIdentifierForTransformer:
iTunesPlaybackInformation
colorForColorKind:inColorDictionary:
beatsOneLogo
objectAtIndexedSubscript:
setDateStyle:
stringFromDate:
initWithURL:
storefrontCountryCode
storefrontIdentifierFromCountryCode:
standardUserDefaults
boolForKey:
initialize
showDebugIndicators
disableLegacyStoreLookups
integerValue
setObject:forKey:
numberWithInteger:
stringValue
mutableCopy
replaceCharactersInRange:withString:
UTF8String
colorWithRed:green:blue:alpha:
initWithDictionary:
height
width
URLWithHeight:width:cropStyle:format:
_dictionary
imageDataURLMatchingAspectRatioOfSize:
typeForOffer:
previewURLForOffer:
hasAudioForOffer:
hasVideoForOffer:
isEVODForOffer:
boolValue
hasAudio
hasVideo
isEVOD
_hasAudio
_hasVideo
_isEVOD
indexOfObject:
_layoutTextStackForSize:applyingLayout:
lastLineDescent
initWithStyle:
addArrangedSubview:
_items
_hasEverBuilt
_style
layer
setBackgroundColor:
setOpacity:
setNeedsLayout
insertSubview:aboveSubview:
insertSubview:belowSubview:
window
screen
effectiveUserInterfaceLayoutDirection
_setContinuousCornerRadius:
setMasksToBounds:
bringSubviewToFront:
_lp_setBackgroundColor:
_lp_setOpacity:
_lp_setNeedsLayout
_lp_insertSubview:aboveSubview:
_lp_insertSubview:belowSubview:
_lp_backingScaleFactor
_lp_setCornerRadius:
_lp_bringSubviewToFront:
layoutSubviews
setContents:
setContentsScale:
anchorPoint
setAnchorPoint:
capInsets
setContentsCenter:
setSublayerTransform:
imageView
setAnimationOrigin:
animationOrigin
_animationOrigin
_imageView
isHTMLType:
isImageType:
isVideoType:
isPreliminary
topCaption
bottomCaption
trailingTopCaption
trailingBottomCaption
mediaTopCaption
mediaBottomCaption
quotedText
backgroundColor
setTopCaption:
setBottomCaption:
setTrailingTopCaption:
setTrailingBottomCaption:
setMediaTopCaption:
setMediaBottomCaption:
_captionBar
_mediaTopCaptionBar
_mediaBottomCaptionBar
_topCaption
_bottomCaption
_trailingTopCaption
_trailingBottomCaption
_mediaTopCaption
_mediaBottomCaption
_backgroundColor
canBeConvertedToEncoding:
_lp_userVisibleString
host
lowercaseString
_lp_URLWithData:baseURL:
_lp_userVisibleStringUsesEncodedHost
_lp_highLevelDomain
_lp_URLWithUserTypedString:relativeToURL:
dataWithBytesNoCopy:length:freeWhenDone:
_lp_originalData
bytes
scheme
compare:options:
_lp_componentsNoCopy
componentsWithURL:resolvingAgainstBaseURL:
pathComponents
queryItems
_lp_components
_lp_pathComponentAtIndex:
_lp_valueForQueryKey:
getCharacters:range:
stringWithCharacters:length:
objectAtIndex:
stringByAppendingPathComponent:
fileSystemRepresentation
stringWithUTF8String:
precomposedStringWithCanonicalMapping
valueWithRange:
rangeValue
rangeOfString:
dataUsingEncoding:
dataWithBytesNoCopy:length:
setBeginTime:
_lp_copyWithBeginTime:
setMass:
setStiffness:
setDamping:
setFillMode:
settlingDuration
setDuration:
_lp_springWithMass:stiffness:damping:
uppercaseString
isValidStorefrontCountryCode:
defaultStorefrontCountryCode
_intrinsicSize
setHasAudio:
_overlappingControlsColor
_setOverlappingControlsColor:
__overlappingControlsColor
initWithStreamingURL:properties:
initWithYouTubeURL:properties:
isYouTubeEmbedURL:
resourceLoader:shouldWaitForLoadingOfRequestedResource:
resourceLoader:shouldWaitForRenewalOfRequestedResource:
resourceLoader:didCancelLoadingRequest:
resourceLoader:shouldWaitForResponseToAuthenticationChallenge:
resourceLoader:didCancelAuthenticationChallenge:
_initWithVideo:
initWithData:MIMEType:hasAudio:
initByReferencingFileURL:MIMEType:hasAudio:
initWithStreamingURL:hasAudio:
initWithYouTubeURL:
_asset
streamingURL
youTubeURL
_mediaLoadingQueue
_mediaServicesResetNotificationHandler
_streamingURL
_youTubeURL
asSize
cornerRadius
filter
foregroundOpacity
backgroundInset
maskColor
whiteColor
_createImageViewWithImage:
darkeningAmount
_createOverlayViewWithOpacity:
padding
asInsetsForView:
frame
setContentMode:
setClipsToBounds:
imageSizeThatFits:
colorWithWhite:alpha:
initWithImage:
setUserInteractionEnabled:
setAccessibilityLabel:
initWithImage:style:
componentViewDidMoveToWindow
_overlayView
textAlignment
defaultParagraphStyle
setAlignment:
setLineBreakMode:
addAttributes:range:
_createTextViewWithAttributedString:style:
leadingGlyph
imageStyle
opacity
_effectiveContentInset
maximumLines
setNumberOfLines:
setContentCompressionResistancePriority:forAxis:
_textView
_glyphView
chevron
initWithType:side:
_accessoryView
_shouldFlipHorizontally
initWithValue:
_value
initWithSize:
initWithSquareSize:
_width
_height
setTop:
setLeading:
setBottom:
setTrailing:
blackColor
systemFontOfSize:
setFont:
setMaximumLines:
setTextAlignment:
setFirstLineLeading:
setLeadingGlyph:
_font
_maximumLines
_textAlignment
_firstLineLeading
_leadingGlyph
_padding
emailCompatibleMargin
initWithPlatform:
setLastLineDescent:
aboveTopCaption
belowBottomCaption
captionTextPadding
_lastLineDescent
_aboveTopCaption
_belowBottomCaption
_captionTextPadding
_emailCompatibleMargin
margin
_margin
setFilter:
setBackgroundInset:
setForegroundOpacity:
setCornerRadius:
setDarkeningAmount:
setMaskColor:
_filter
_backgroundInset
_foregroundOpacity
_cornerRadius
_darkeningAmount
_maskColor
searchGlyph
initSearchGlyph
baselineOffset
setBaselineOffset:
_opacity
_imageStyle
_baselineOffset
backgroundSize
setBackgroundSize:
disabledOpacity
setDisabledOpacity:
_backgroundSize
_disabledOpacity
functionWithControlPoints::::
playButton
muteButton
muteButtonPadding
muteButtonOpacity
setMuteButtonOpacity:
muteButtonHighlightedOpacity
setMuteButtonHighlightedOpacity:
pulsingLoadIndicatorColor
setPulsingLoadIndicatorColor:
pulsingLoadIndicatorMaximumOpacity
setPulsingLoadIndicatorMaximumOpacity:
pulsingLoadIndicatorDuration
setPulsingLoadIndicatorDuration:
pulsingLoadIndicatorTimingFunction
setPulsingLoadIndicatorTimingFunction:
fullScreenBackgroundColor
setFullScreenBackgroundColor:
_playButton
_muteButton
_muteButtonPadding
_muteButtonOpacity
_muteButtonHighlightedOpacity
_pulsingLoadIndicatorColor
_pulsingLoadIndicatorMaximumOpacity
_pulsingLoadIndicatorTimingFunction
_fullScreenBackgroundColor
_pulsingLoadIndicatorDuration
systemPinkColor
leadingAccessory
trailingAccessory
leftAccessory
rightAccessory
textStack
minimumWidth
setMinimumWidth:
placeholderIcon
playButtonPadding
_leadingAccessory
_trailingAccessory
_textStack
_minimumWidth
_playButtonPadding
systemBlueColor
tapHighlightColor
setTapHighlightColor:
caption
setWidth:
setHeight:
_tapHighlightColor
_caption
defaultCenter
didChangeContentSizeCategory:
addObserver:selector:name:object:
didChangeDarkenColorsStatus:
removeObserver:
didChangeThemeParameters
weakObjectsHashTable
containsObject:
removeAllObjects
themeParametersDidChange
addClient:
_clients
themeWithStyle:icon:platform:
allKeys
firstObject
removeObjectForKey:
initWithStyle:icon:platform:
systemGrayColor
initWithCapacity:
CSSTextForThemeProperty:
enumerateObjectsUsingBlock:
componentsJoinedByString:
stringByReplacingOccurrencesOfString:withString:
valueForKeyPath:
regularTheme
valueForUndefinedKey:
CSSCustomPropertiesForThemePropertiesInSet:
highlightColor
setHighlightColor:
mediaImage
mediaVideo
mediaBackgroundColor
setMediaBackgroundColor:
tapToLoad
maximumWidth
setMaximumWidth:
maximumIntrinsicHeight
setMaximumIntrinsicHeight:
widthFractionForTallMedia
setWidthFractionForTallMedia:
_highlightColor
_quotedText
_mediaImage
_mediaVideo
_mediaBackgroundColor
_tapToLoad
_maximumWidth
_maximumIntrinsicHeight
_widthFractionForTallMedia
systemFontOfSize:weight:
preferredFontForTextStyle:
colorWithAlphaComponent:
preferredFontDescriptorWithTextStyle:
fontDescriptorWithSymbolicTraits:
fontWithDescriptor:size:
boldSystemFontOfSize:
valueWithCGRect:
valueWithCGSize:
_lp_valueWithCGRect:
_lp_valueWithCGSize:
initWithPlaybackInformation:style:
isGoogleSearchURL:
isGoogleURL:
searchQueryForURL:
fragment
setQuery:
media
setMedia:
quote
setQuote:
_media
_quote
isFlipped
initWithFrame:
_commonInitWithURL:
initWithPresentationProperties:URL:
_setPresentationProperties:
preload
setHidden:
redColor
setBorderColor:
setBorderWidth:
greenColor
_setupInteraction
_invalidateLayout
_invalidatePresentationProperties
setComplete:
setAllowsTapToLoad:
presentationProperties
_layoutLinkView
_computePresentationPropertiesFromMetadataIfNeeded
_layoutLinkViewForSize:applyingLayout:
animateOut
removeFromSuperview
valueForKey:
setValue:forKey:
animationForKey:
removeAnimationForKey:
setSuppressMask:
convertTime:fromLayer:
setKeyPath:
numberWithInt:
setFromValue:
setToValue:
animateInWithBaseAnimation:currentTime:
addAnimation:forKey:
setRemovedOnCompletion:
functionWithName:
setTimingFunction:
superview
_createCaptionBar
_createMediaView
_createMediaTopCaptionBarView
_createMediaBottomCaptionBarView
_createQuotedTextView
animateOutAndRemoveViews
subviews
lastObject
_createComponents
animateInViews
animateBackgroundColor
_installTapGestureRecognizers
_disableHighlightGesture
_installHighlightGestureRecognizers
_setupView
_rebuildSubviewsWithAnimation:
animateFromOldFrame:oldMediaBackgroundFrame:oldCaptionBarView:
invalidateIntrinsicContentSize
linkViewNeedsResize:
initWithStyle:presentationProperties:
setUseProgressSpinner:
setPlaybackInformation:
_createTapToLoadView
_addHighlightRecognizerToView:
_addTapRecognizerToView:
view
removeGestureRecognizer:
_uninstallHighlightGestureRecognizers
_uninstallTapGestureRecognizers
_rebuildGestureRecognizersIfNeeded
_tapRecognized:
initWithTarget:action:
addGestureRecognizer:
_highlightLongPressRecognized:
setMinimumPressDuration:
setCancelsTouchesInView:
isDescendantOfView:
setEnabled:
state
openURL:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
animationDidStart:
animationDidStop:finished:
tapToLoadViewWasTapped:
initWithPresentationProperties:
_setApplyCornerRadius:
_setMetadata:isFinal:
intrinsicContentSize
_setMaskImage:
_performDeferredLayout
_setAllowsTapToLoad:
_setDisableTapGesture:
_setDisableHighlightGesture:
gestureRecognizer:canPreventGestureRecognizer:
_didScroll
_disableAnimations
_setDisableAnimations:
_disableTapGesture
_disableAutoPlay
_setDisableAutoPlay:
_disablePlayback
_setDisablePlayback:
_disablePlaybackControls
_setDisablePlaybackControls:
_setAnimationOrigin:
_allowsTapToLoad
_usesDeferredLayout
_setUsesDeferredLayout:
_forceFlexibleWidth
_setForceFlexibleWidth:
_applyCornerRadius
contentInset
_loggingID
_mayReceiveAdditionalMetadata
_usesComputedPresentationProperties
_theme
_tapGestureRecognizers
_highlightGestureRecognizers
_highlightView
_isPreliminary
_overrideBackgroundColor
_iTunesPlaybackInformation
_components
_componentsForSizing
_contentView
_animationView
_mediaViewBackground
_animationMaskView
_needsRebuild
_shouldAnimateDuringNextBuild
_hasValidPresentationProperties
_hasSetDisableHighlightGesture
didMoveToWindow
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
enumerateKeysAndObjectsUsingBlock:
initWithURL:resolvingAgainstBaseURL:
path
identifierFromQueryItems:pathComponent:
storefrontCountryCodeFromPathComponent:
hasPrefix:
identifier
_identifier
_storefrontCountryCode
isMicroblogPost:
shouldPreferMiniStyleForURL:
topCaptionForStyle:
bottomCaptionForStyle:
videoForStyle:
isSinaWeiboURL:
isTweetURL:
rangeOfComposedCharacterSequencesForRange:
safariIcon
setPreliminary:
rendererStyle
mainCaptionBarForStyle:
quotedTextForStyle:
setQuotedText:
backgroundColorForStyle:
imageForStyle:icon:
isComplete
allowsTapToLoad
forceMiniStyle
setForceMiniStyle:
_complete
_forceMiniStyle
initWithMetric:
stopTiming
_metricKey
_startTime
_isTiming
incrementMetric:
startTimingForMetric:
scanUnsignedLongLong:
scanString:intoString:
isAtEnd
parseYouTubeTimeFormat:outTime:
formatAsYouTubeTime:
videoID
setVideoID:
startTime
setStartTime:
_videoID
decimalDigitCharacterSet
rangeOfCharacterFromSet:
setHost:
youTubeVideoComponentsForVideoURL:
youTubeVideoComponentsForEmbedURL:
setPath:
setFragment:
setScheme:
initWithName:value:
setQueryItems:
stringByDeletingPathExtension
nonMobileTweetURLForTweetURL:
nonMobileRedditURLForRedditURL:
nonDirectURLForImgurURL:
nonMobileYouTubeURLForURL:
youTubeVideoURLForEmbedURL:
destinationForGoogleRedirectURL:
isYouTubeURL:
isGitHubURL:
isTwitterProfileImageURL:
isYouTubeVideoURL:
canonicalMetadataURLForURL:
shouldLoadInsteadOfUsingExistingWebViewForURL:
initWithBytesNoCopy:length:encoding:freeWhenDone:
pauseButton
unmuteButton
musicPlayButton
musicPauseButton
metadataExtractorJS
indeterminateProgressSpinner
reset
setForceRTL:
setForceImageLoadingScaleFactor:
setCustomLoader:
customLoader
numberWithDouble:
_buildViewsForCaptionBarIfNeeded
initWithActivityIndicatorStyle:
startAnimating
_layoutCaptionBarForSize:applyingLayout:
_createIndeterminateProgressIndicator
useProgressSpinner
_presentationProperties
_leftIconView
_rightIconView
_belowLeftIconView
_belowRightIconView
_leftAccessoryView
_rightAccessoryView
_aboveTopCaptionView
_topCaptionView
_bottomCaptionView
_belowBottomCaptionView
_textStackView
_useProgressSpinner
unsignedIntValue
pointSize
fontWithSize:
_preliminary
_buildViews
_animateToProgressView
animateOutWithCompletionHandler:
_captionView
_progressView
_highlightGestureRecognizer
_wasTapped
_animateOutCompletionHandler
LPActionDisablingCALayerDelegate
CALayerDelegate
NSObject
LPExtras
LPCSSText
LPHTMLAttributeText
LPLinkMetadataPreviewTransformerAdaptor
LPLinkMetadataPreviewTransformer
LPiTunesPlaybackInformation
LPImageProperties
NSCopying
LPImage
NSSecureCoding
NSCoding
LPImageRemoteURLRepresentation
LPLinkMetadata
LPIconMetadata
LPImageMetadata
LPArtworkMetadata
LPVideoMetadata
LPAudioMetadata
LPSpecializationMetadata
LPiTunesMediaSongMetadata
LPiTunesMediaAlbumMetadata
LPiTunesMediaMusicVideoMetadata
LPiTunesMediaArtistMetadata
LPiTunesMediaPlaylistMetadata
LPiTunesMediaRadioMetadata
LPiTunesMediaSoftwareMetadata
LPiTunesMediaBookMetadata
LPiTunesMediaAudioBookMetadata
LPiTunesMediaPodcastEpisodeMetadata
LPiTunesMediaPodcastMetadata
LPiTunesMediaTVEpisodeMetadata
LPiTunesMediaTVSeasonMetadata
LPiTunesMediaMovieMetadata
LPiCloudSharingMetadata
LPGameCenterInvitationMetadata
LPiCloudFamilyInvitationMetadata
LPHorizontalCaptionPairView
LPTextStyleable
LPContentInsettable
LPCustomLinkMetadata
LPLinkMetadataStatusTransformerAdaptor
LPLinkMetadataStatusTransformer
LPInternal
Transformer
LPLinkMetadataPresentationTransformerAdaptor
Transformers
LPURLSuffixChecker
LPCaptionPresentationProperties
LPCaptionRowPresentationProperties
LPCaptionBarPresentationProperties
LPSharingMetadataWrapper
LPLinkMetadataStoreTransformerAdaptor
LPSettings
LPiTunesMediaLookupItemArtwork
LPHTMLPlaceholderImageGenerator
LPiTunesMediaOffer
LPVerticalTextStackView
LPAnimationMaskView
LPMIMETypeRegistry
LPAppLinkPresentationProperties
LPLinkPresentationPropertyProvider
LPiTunesMediaStorefrontMappings
LPVideoProperties
LPVideo
AVAssetResourceLoaderDelegate
LPImageView
LPTextView
LPCaptionBarAccessoryView
LPPointUnit
LPSize
LPPadding
LPTextViewStyle
LPTextRowStyle
LPVerticalTextStackViewStyle
LPEmailCompatibleCaptionBarItemChild
LPCaptionBarAccessoryStyle
LPImageViewStyle
LPGlyphStyle
LPVideoPlayButtonStyle
LPVideoViewStyle
LPMusicPlayButtonStyle
LPCaptionBarStyle
LPTapToLoadViewStyle
LPThemeParametersObserver
LPTheme
LPiTunesPlayButtonView
Search
LPLinkViewComponents
LPFlippedView
LPLinkView
UIGestureRecognizerDelegate
CAAnimationDelegate
LPTapToLoadViewDelegate
LPThemeClient
LPComponentView
LPiTunesMediaURLComponents
LPLinkMetadataPresentationTransformer
LPStatisticsTimingToken
LPStatistics
LPYouTubeURLComponents
LPPresentationSpecializations
LPResources
LPTestingOverrides
LPCaptionBarView
LPWebLinkPresentationProperties
LPLinkMetadataStoreTransformer
LPTapToLoadView
@8@0:4
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v12@0:4@8
v16@0:4@8^{CGContext=}12
@16@0:4@8@12
v12@0:4@"CALayer"8
v16@0:4@"CALayer"8^{CGContext=}12
@"<CAAction>"16@0:4@"CALayer"8@"NSString"12
@12@0:4@8
@"NSString"12@0:4@"LPLinkMetadataPreviewTransformer"8
@"LPImage"12@0:4@"LPLinkMetadataPreviewTransformer"8
v8@0:4
@"LPLinkMetadata"
@"NSURL"
@12@0:4I8
@"NSString"
@"NSArray"
@12@0:4^{_NSZone=}8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@20@0:4@8@12@16
@12@0:4@?8
v12@0:4@?8
L8@0:4
{CGSize=ff}8@0:4
v12@0:4B8
@"UIImage"
@"NSData"
@"LPImageProperties"
@"NSObject<OS_dispatch_group>"
@16@0:4I8@12
@"LPImage"
@"LPIconMetadata"
@"LPImageMetadata"
@"LPVideo"
@"LPVideoMetadata"
@"LPSpecializationMetadata"
v16@0:4{CGSize=ff}8
{CGSize="width"f"height"f}
@"NSDictionary"
@"LPArtworkMetadata"
@"NSDate"
v12@0:4I8
f8@0:4
v24@0:4{UIEdgeInsets=ffff}8
@24@0:4@8@12@16@20
{CGSize=ff}16@0:4{CGSize=ff}8
{CGSize=ff}20@0:4{CGSize=ff}8B16
@"LPTextView"
{UIEdgeInsets="top"f"left"f"bottom"f"right"f}
v12@0:4@"LPLinkMetadataStatusTransformer"8
@"NSAttributedString"12@0:4@"LPLinkMetadataStatusTransformer"8
@"NSURL"12@0:4@"LPLinkMetadataStatusTransformer"8
@"<LPLinkMetadataStatusTransformerDelegate>"
@16@0:4I8B12
v16@0:4@8@?12
@"LPWebLinkPresentationProperties"12@0:4@"LPLinkMetadataPresentationTransformer"8
B16@0:4@8^{?=[32{?=SS}]I}12
B16@0:4@8^@12
^{?=[27S]}
@"NSMutableArray"
^{CGImage=}8@0:4
@12@0:4^{CGImage=}8
v12@0:4f8
@"NSAttributedString"
@"UIColor"
@"NSNumber"
@"LPCaptionPresentationProperties"
i8@0:4
v12@0:4i8
@"LPCaptionRowPresentationProperties"
@"NSString"12@0:4@"LPLinkMetadataStoreTransformer"8
@24@0:4i8i12@16@20
@16@0:4{CGSize=ff}8
@"LPVerticalTextStackViewStyle"
v16@0:4@8@12
@"UIView"
@"LPImage"8@0:4
@"LPCaptionBarPresentationProperties"8@0:4
@"LPVideo"8@0:4
@"UIColor"8@0:4
@"LPiTunesPlaybackInformation"8@0:4
@"LPCaptionBarPresentationProperties"
@16@0:4d8
@20@0:4f8f12f16
B16@0:4@8@12
B16@0:4@"AVAssetResourceLoader"8@"AVAssetResourceLoadingRequest"12
B16@0:4@"AVAssetResourceLoader"8@"AVAssetResourceRenewalRequest"12
v16@0:4@"AVAssetResourceLoader"8@"AVAssetResourceLoadingRequest"12
B16@0:4@"AVAssetResourceLoader"8@"NSURLAuthenticationChallenge"12
v16@0:4@"AVAssetResourceLoader"8@"NSURLAuthenticationChallenge"12
@20@0:4@8@12B16
@16@0:4@8B12
@"NSObject<OS_dispatch_queue>"
@"AVURLAsset"
@"LPVideoProperties"
@12@0:4f8
@"LPImageViewStyle"
{UIEdgeInsets=ffff}8@0:4
@"UILabel"
@"LPImageView"
@"LPTextViewStyle"
@16@0:4i8i12
@"LPPointUnit"
{UIEdgeInsets=ffff}12@0:4@8
@"UIFont"
@"LPGlyphStyle"
@"LPPadding"
@"LPPadding"8@0:4
@12@0:4i8
@"LPTextRowStyle"
@"LPSize"
d8@0:4
v16@0:4d8
@"LPVideoPlayButtonStyle"
@"CAMediaTimingFunction"
@"LPCaptionBarAccessoryStyle"
@"LPMusicPlayButtonStyle"
@"NSHashTable"
@20@0:4i8@12i16
@"LPCaptionBarStyle"
@"LPVideoViewStyle"
@"LPTapToLoadViewStyle"
@24@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8
@"LPCaptionBarView"
@"LPComponentView"
B12@0:4@"UIGestureRecognizer"8
B16@0:4@"UIGestureRecognizer"8@"UIGestureRecognizer"12
B16@0:4@"UIGestureRecognizer"8@"UITouch"12
B16@0:4@"UIGestureRecognizer"8@"UIPress"12
v16@0:4@8B12
v12@0:4@"CAAnimation"8
v16@0:4@"CAAnimation"8B12
v12@0:4@"LPTapToLoadView"8
v44@0:4{CGRect={CGPoint=ff}{CGSize=ff}}8{CGRect={CGPoint=ff}{CGSize=ff}}24@40
@"LPTheme"
@"LPiTunesPlaybackInformation"
@"LPLinkViewComponents"
@"LPAnimationMaskView"
@"<LPLinkViewDelegate>"
@16@0:4#8@12
@20@0:4#8#12@16
@16@0:4i8^@12
B16@0:4@8^d12
v20@0:4@8d12
@"LPiTunesPlayButtonView"
@"LPCaptionBarAccessoryView"
@"LPComponentView<LPTextStyleable>"
@"LPVerticalTextStackView"
@"UILongPressGestureRecognizer"
@"<LPTapToLoadViewDelegate>"
Failed to decode LPLinkMetadata 'specialization2': %@
Failed to decode LPLinkMetadata 'specialization': %@
LPLinkMetadata: Failed to decode: %@
ICU error under uscript_getScript: %d
LPLinkView<%d>: laid out to larger than maximum requested size (%g > %g)
f * %
, i 
zPLR
zPLR
zPLR
zPLR
zPLR
//  LinkPresentation
//  Copyright 
 2015-2016 Apple Inc. All rights reserved.
// FIXME: Twitter equivalents?
var MetadataExtractor = {
    doc : undefined,
    responseURL : undefined,
    result : {},
    resolveURL : function (URLString) {
        // Don't absolutize empty strings.
        if (URLString == "" || !URLString)
            return URLString;
        var URL = new window.URL(URLString, this.responseURL);
        return URL.toString();
    },
    extractAndSortIconsWithSelector : function (selector) {
        var extractedIcons = this.doc.head.querySelectorAll(selector);
        if (!extractedIcons.length)
            return [];
        const IconTypeFavicon = 0;
        const IconTypeAppleTouchIcon = 1;
        const IconTypeAppleTouchIconPrecomposed = 2;
        const AppleTouchIconDefaultWidth = 60;
        function getIconType(icon) {
            var iconTypeString = icon.getAttribute("rel");
            if (iconTypeString === "apple-touch-icon")
                return IconTypeAppleTouchIcon;
            if (iconTypeString === "apple-touch-icon-precomposed")
                return IconTypeAppleTouchIconPrecomposed;
            return IconTypeFavicon;
        }
        function compareIconsDescending(icon1, icon2) {
            var icon1Type = getIconType(icon1);
            var icon2Type = getIconType(icon2);
            // Apple Touch icons always come first.
            if (icon1Type === IconTypeFavicon && icon2Type !== IconTypeFavicon)
                return 1;
            if (icon2Type === IconTypeFavicon && icon1Type !== IconTypeFavicon)
                return -1;
            var icon1Size = icon1.getAttribute("sizes");
            var icon2Size = icon2.getAttribute("sizes");
            var icon1Width = 0;
            var icon2Width = 0;
            if (icon1Size)
                icon1Width = parseInt(icon1Size);
            else if (!icon1Size && (icon1Type === IconTypeAppleTouchIcon || icon1Type === IconTypeAppleTouchIconPrecomposed))
                icon1Width = AppleTouchIconDefaultWidth;
            if (icon2Size)
                icon2Width = parseInt(icon2Size);
            else if (!icon2Size && (icon2Type === IconTypeAppleTouchIcon || icon2Type === IconTypeAppleTouchIconPrecomposed))
                icon2Width = AppleTouchIconDefaultWidth;
            if (icon2Width > icon1Width)
                return 1;
            if (icon2Width < icon1Width)
                return -1;
            // A Precomposed icon should come first if both icons have the same size.
            if (icon1Type !== IconTypeAppleTouchIconPrecomposed && icon2Type === IconTypeAppleTouchIconPrecomposed)
                return 1;
            if (icon2Type !== IconTypeAppleTouchIconPrecomposed && icon1Type === IconTypeAppleTouchIconPrecomposed)
                return -1;
            return 0;
        }
        return Array.prototype.slice.call(extractedIcons).sort(compareIconsDescending);
    },
    extractTouchIconURLs : function () {
        var icons = this.extractAndSortIconsWithSelector("link[rel=apple-touch-icon], link[rel=apple-touch-icon-precomposed]");
        var urls = [];
        for (var i = 0; i < icons.length; ++i) {
            var url = icons[i].href;
            if (url)
                urls.push(this.resolveURL(url));
        }
        return urls;
    },
    extractFavIconURLs : function () {
        var icons = this.extractAndSortIconsWithSelector("link[rel=icon], link[rel='shortcut icon']");
        var urls = [];
        for (var i = 0; i < icons.length; ++i) {
            var url = icons[i].href;
            if (url)
                urls.push(this.resolveURL(url));
        }
        return urls;
    }
var propertiesDefinitions = {
    LPMetadataURL : {
        properties : ["og:url"],
        transformationFunction : function(val) { return val ? MetadataExtractor.resolveURL(val) : MetadataExtractor.responseURL; },
    },
    LPMetadataTitle : {
        properties : ["og:title", "twitter:title"],
        transformationFunction : function(val) { return val ? val : MetadataExtractor.doc.title; },
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataDescription : {
        properties : ["og:description", "twitter:description", "Description", "description"],
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataSiteName : {
        properties : ["og:site_name"],
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataItemType : {
        properties : ["og:type"],
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataRelatedURL : {
        properties : ["og:see_also"],
        transformationFunction : function(val) { return MetadataExtractor.resolveURL(val); },
    },
    LPMetadataCreator : {
        properties : ["author"],
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataCreatorFacebookProfile : {
        properties : ["article:author"],
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataCreatorTwitterUsername : {
        properties : ["twitter:creator", "twitter:creator:id"],
        stripLeadingAndTrailingWhitespace : true,
        decodeHTMLEntities : true,
    },
    LPMetadataAppleContentID : {
        properties : ["apple:content_id"],
    },
    LPMetadataImages : {
        repeatProperties : ["og:image:secure_url", "og:image", "og:image:url", "twitter:image", "image"],
        properties : ["og:image:secure_url", "og:image", "og:image:url", "og:image:width", "og:image:height", "og:image:type", "twitter:image:alt", "twitter:image", "image"],
        children : {
            LPMetadataImageURL : {
                properties : ["og:image:secure_url", "og:image", "og:image:url", "twitter:image", "image"],
                transformationFunction : function(val) { return MetadataExtractor.resolveURL(val); },
            },
            LPMetadataImageWidth : {
                properties : ["og:image:width"],
                transformationFunction : function(val) { return parseInt(val, 10); },
            },
            LPMetadataImageHeight : {
                properties : ["og:image:height"],
                transformationFunction : function(val) { return parseInt(val, 10); },
            },
            LPMetadataImageType : {
                properties : ["og:image:type"],
            },
            LPMetadataImageAccessibilityText : {
                properties : ["twitter:image:alt"],
            }
        },
    },
    LPMetadataVideos : {
        repeatProperties : ["og:video:secure_url", "og:video", "og:video:url"],
        properties : ["og:video:secure_url", "og:video", "og:video:url", "og:video:width", "og:video:height", "og:video:type"],
        children : {
            LPMetadataVideoURL : {
                properties : ["og:video:secure_url", "og:video", "og:video:url"],
                transformationFunction : function(val) { return MetadataExtractor.resolveURL(val) },
            },
            LPMetadataVideoWidth : {
                properties : ["og:video:width"],
                transformationFunction : function(val) { return parseInt(val, 10) },
            },
            LPMetadataVideoHeight : {
                properties : ["og:video:height"],
                transformationFunction : function(val) { return parseInt(val, 10) },
            },
            LPMetadataVideoType : {
                properties : ["og:video:type"],
            },
        },
    },
    LPMetadataStreamingVideos : {
        repeatProperties : ["twitter:player:stream"],
        properties : ["twitter:player:stream", "twitter:player:stream:content_type"],
        children : {
            LPMetadataVideoURL : {
                properties : ["twitter:player:stream"],
                transformationFunction : function(val) { return MetadataExtractor.resolveURL(val) },
            },
            LPMetadataVideoType : {
                properties : ["twitter:player:stream:content_type"],
            },
        }
    },
    LPMetadataAudios : {
        repeatProperties : ["og:audio:secure_url", "og:audio", "og:audio:url"],
        properties : ["og:audio:secure_url", "og:audio", "og:audio:url", "og:audio:type"],
        children : {
            LPMetadataAudioURL : {
                properties : ["og:audio:secure_url", "og:audio", "og:audio:url"],
                transformationFunction : function(val) { return MetadataExtractor.resolveURL(val) },
            },
            LPMetadataAudioType : {
                properties : ["og:audio:type"],
            },
        }
    }
function propertyDefinitionNameForProperty(key)
    for (var propertyDefinitionName in propertiesDefinitions) {
        if (!propertiesDefinitions[propertyDefinitionName].properties.includes(key))
            continue;
        return propertyDefinitionName;
    }
    return undefined;
function resolvePropertyWithDefinition(result, values, propertyDefinition, propertyDefinitionName)
    var value = undefined;
    for (var propertyName of propertyDefinition.properties)
    {
        value = values[propertyName];
        if (value)
            break;
    }
    var transformationFunction = propertyDefinition.transformationFunction;
    if (transformationFunction)
        value = transformationFunction(value);
    if (propertyDefinition.stripLeadingAndTrailingWhitespace) {
        if (typeof value == "string")
            value = value.trim();
    }
    if (value)
        result[propertyDefinitionName] = value;
function resolveProperties(result, collectedValues, definitions)
    for (var propertyDefinitionName in definitions) {
        var propertyDefinition = definitions[propertyDefinitionName];
        if (!propertyDefinition)
            continue;
        resolvePropertyWithDefinition(result, collectedValues, propertyDefinition, propertyDefinitionName);
    }
function resolveRepeatedProperty(collectedValues, repeatedPropertyName)
    var result = {};
    resolveProperties(result, collectedValues, propertiesDefinitions[repeatedPropertyName].children)
    if (!MetadataExtractor.result.hasOwnProperty(repeatedPropertyName))
        MetadataExtractor.result[repeatedPropertyName] = [];
    MetadataExtractor.result[repeatedPropertyName].push(result);
function hasAnyKeysNotInArray(dict, arr)
    for (var key in dict) {
        if (!arr.includes(key))
            return true;
    }
    return false;
function decodeHTMLEntities(rawString)
    var el = document.createElement("textarea");
    el.innerHTML = rawString;
    return el.value;
function parseMetaTags()
    var allMetaElements = MetadataExtractor.doc.getElementsByTagName("meta");
    var rootCollectedValues = {};
    var childCollectedValues = {};
    for (var i = 0; i < allMetaElements.length; i++) {
        var el = allMetaElements[i];
        var property = el.getAttribute("property") || el.getAttribute("name") || el.getAttribute("itemprop");
        var content = el.content;
        if (!property || !content)
            continue;
        var propertyDefinitionName = propertyDefinitionNameForProperty(property);
        if (!propertyDefinitionName)
            continue;
        var propertyDefinition = propertiesDefinitions[propertyDefinitionName];
        if (!propertyDefinition)
            continue;
        if (propertyDefinition.decodeHTMLEntities)
            content = decodeHTMLEntities(content);
        if (!propertyDefinition.hasOwnProperty("repeatProperties")) {
            // Not a repeating property, so take the first value.
            if (!rootCollectedValues.hasOwnProperty(property))
                rootCollectedValues[property] = content;
        } else {
            // A repeating property.
            if (propertyDefinition.repeatProperties.includes(property)) {
                var collectedValuesForProperty = childCollectedValues[propertyDefinitionName];
                if (collectedValuesForProperty && (hasAnyKeysNotInArray(collectedValuesForProperty, propertyDefinition.repeatProperties) || Object.keys(collectedValuesForProperty).includes(property))) {
                    resolveRepeatedProperty(collectedValuesForProperty, propertyDefinitionName);
                    childCollectedValues[propertyDefinitionName] = {};
                }
            }
            if (!childCollectedValues.hasOwnProperty(propertyDefinitionName))
                childCollectedValues[propertyDefinitionName] = {};
            childCollectedValues[propertyDefinitionName][property] = content;    
        }
    }
    for (var propertyDefinitionName in childCollectedValues)
        resolveRepeatedProperty(childCollectedValues[propertyDefinitionName], propertyDefinitionName);
    resolveProperties(MetadataExtractor.result, rootCollectedValues, propertiesDefinitions);
function fetchMetadataForMainFrame()
    MetadataExtractor.responseURL = window.location.href;
    MetadataExtractor.doc = document;
    try {
        parseMetaTags();
        var touchIcons = MetadataExtractor.extractTouchIconURLs();
        var favIcons = MetadataExtractor.extractFavIconURLs();
        // FIXME: We should also support the device-specific touch icons that MobileSafari fetches.
        var potentialImplicitTouchIcons = [MetadataExtractor.resolveURL("/apple-touch-icon-precomposed.png"), MetadataExtractor.resolveURL("/apple-touch-icon.png")];
        var potentialImplicitFavIcons = [MetadataExtractor.resolveURL("/favicon.ico")];
        MetadataExtractor.result["LPMetadataIcons"] = touchIcons.concat(potentialImplicitTouchIcons).concat(favIcons).concat(potentialImplicitFavIcons);
        MetadataExtractor.result["LPMetadataSelectedText"] = window.getSelection().toString();
        return MetadataExtractor.result;
    } catch(e) {
        return { error: "Exception: " + e };
    }
fetchMetadataForMainFrame()
