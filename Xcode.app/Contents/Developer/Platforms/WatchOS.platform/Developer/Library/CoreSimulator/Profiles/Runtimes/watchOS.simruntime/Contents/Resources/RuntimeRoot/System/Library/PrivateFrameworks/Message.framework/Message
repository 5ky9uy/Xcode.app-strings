initWithDebugOutput:modelInfo:
init
setDebugOutput:
setModelInfo:
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
debugOutput
modelInfo
initWithDebugOutput:
_debugOutput
_modelInfo
alloc
initWithObject:measure:
setMeasure:
setObject:
measure
object
stringWithFormat:
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
countByEnumeratingWithState:objects:count:
compare:
sortedArrayUsingComparator:
count
subarrayWithRange:
object:withMeasure:
max:
reverseSortedObjects:limit:
_object
_measure
initWithCondition:
lockWhenCondition:
unlock
networkThread
currentThread
methodSignatureForSelector:
invocationWithMethodSignature:
setTarget:
setSelector:
invoke
performSelector:onThread:withObject:waitUntilDone:
close
setArgument:atIndex:
getReturnValue:
objectForKey:
propertyForKey:
_copyPropertyForKey:
setValue:forKey:
setProperty:forKey:
retainArguments
numberWithInteger:
dictionaryWithObjects:forKeys:count:
powerlog:eventData:
_createPairWithSocketToHostName:port:
setDelegate:
currentRunLoop
scheduleInRunLoop:forMode:
open
defaultSessionConfiguration
setTLSMinimumSupportedProtocol:
setTLSMaximumSupportedProtocol:
sessionWithConfiguration:delegate:delegateQueue:
streamTaskWithHostName:port:
startSecureConnection
resume
captureStreams
lock
isOpen
dateWithTimeIntervalSinceNow:
waitUntilDate:
broadcast
removeFromRunLoop:forMode:
numberWithUnsignedInteger:
invalidateAndCancel
_readBytesFromStream
mf_publicDescription
write:maxLength:
streamError
_closeAndReleaseStream:logMessage:
read:maxLength:
setNetworkThread:
_networkDispatchQueue
stream:handleEvent:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
initCallBack:onDispatchQueue:
openToHostName:port:
URLSession:streamTask:didBecomeInputStream:outputStream:
_session
_streamTask
_rStream
_wStream
_properties
_callback
_location
_capacity
_length
_buffer
_error
_streamCanRead
_streamCanWrite
_dispatchedBytesAvailable
_bytesRead
_bytesWritten
_condition
valueInAccountPropertiesForKey:
boolValue
numberWithBool:
setValueInAccountProperties:forKey:
savePersistentAccount
existingAccountForUniqueID:
_certificateIsTrustedForAccount:
defaultTrustManager
rawTrustResultForSSLTrust:hostname:service:
_setCertificateIsTrusted:forAccount:
errorWithDomain:code:localizedDescription:
domain
allowsTrustPrompt
setHost:
setService:
setTrust:
allowTrust:forHost:service:
showPromptWithOptions:responseBlock:
stream
isEqualToString:
clientCertificates
_waitForSocketOpenAndFlag:
_evaluateTrust:errorPtr:
code
securityProtocol
_negotiatedProtocolVersion
_startSSLHandshakeWithProtocol:errorPtr:
currentMonitor
setError:
arrayWithCapacity:
addObject:
mf_lock
mf_unlock
standardUserDefaults
integerForKey:
boolForKey:
abort
setStream:
networkActivityEnded:
sharedInstance
inAirplaneMode
networkActivityStarted:
copy
isForeground
numberWithInt:
mf_copyStringByEncodingIDNA
error
length
bytes
_bufferedByteCount
errorWithDomain:code:userInfo:
shouldCancel
unsignedIntValue
dataWithBytes:length:
setSecurityProtocol:
serverCertificates
setConnectionServiceType:
isReadable
isWritable
isValid
connectToHost:withPort:service:
writeBytes:length:
readBytes:length:
setEventHandler:
remoteHostname
remotePortNumber
sourceIPAddress
isCellularConnection
enableThroughputMonitoring:
timeout
setTimeout:
setAllowsTrustPrompt:
usesOpportunisticSockets
setUsesOpportunisticSockets:
disableEphemeralDiffieHellmanCiphers
setDisableEphemeralDiffieHellmanCiphers:
setClientCertificates:
sourceApplicationBundleIdentifier
setSourceApplicationBundleIdentifier:
accountIdentifier
setAccountIdentifier:
_protocol
_host
_service
_connectionServiceType
_eventHandler
_clientCertificates
_lowThroughputCounter
_numTimeoutSecs
_allowsTrustPrompt
_usesOpportunisticSockets
_socketCanRead
_socketCanWrite
_disableEphemeralDiffieHellmanCiphers
_sourceApplicationBundleIdentifier
_accountIdentifier
_stream
unlockWithCondition:
shouldHealAccounts
accountWithProperties:
setWithObjects:
initWithProperties:
knownSchemes
canAuthenticateAccountClass:connection:
mf_filter:
initWithPersistentAccount:
mutableCopy
_accountClass
setObject:forKey:
_setAccountProperties:
_newPersistentAccount
setPersistentAccount:
uniqueId
sharedAccountStore
existingAccountWithPersistentAccount:
accountTypeIdentifier
newPersistentAccountWithAccountTypeIdentifier:
supportedDataclassesWithAccountTypeIdentifier:
setWithArray:
setProvisionedDataclasses:
setEnabled:forDataclass:
setAuthenticated:
releaseAllConnections
persistentAccountDidChange:previousAccount:
savePersistentAccountWithAccount:
removePersistentAccountWithAccount:
accountPropertyForKey:
persistentAccount
parentAccount
parentAccountIdentifier
doesNotRecognizeSelector:
_objectForAccountInfoKey:
isActive
mf_SHA1Digest
mf_copyHexString
_privacySafeDescription
stringByAppendingFormat:
accountProperties
_basicPropertyForKey:persistentAccount:
_setBasicProperty:forKey:persistentAccount:
setAccountProperty:forKey:
removeObjectForKey:
identifier
username
accountDescription
setIdentifier:
setUsername:
setAccountDescription:
accountTypeString
displayedAccountTypeString
accountInfoDidChange
cancelPreviousPerformRequestsWithTarget:selector:object:
performSelector:withObject:afterDelay:
initWithData:encoding:
setOAuth2Token:refreshToken:error:
excludedAccountPropertyKeys
containsObject:
setPassword:
addressListFromEncodedString:
_queueAccountInfoDidChange
removeAccountPropertyForKey:
usesSSL
password
componentsJoinedByString:
allKeys
setActive:
hostname
displayName
mf_stringWithNoExtraSpaces
isManaged
_boolForAccountInfoKey:defaultValue:
_credentialCreateIfNecessary:
_credentialCreateIfNecessary:error:
credentialWithError:
setCredential:
_password
_passwordWithError:
preferredAuthScheme
requiresPassword
mf_isInaccessibleAccountCredentialError
credentialItemForKey:error:
credentialItemForKey:
setCredentialItem:forKey:error:
setCredentialItem:forKey:
oauthToken
setOauthToken:
setOauthRefreshToken:
accountForRenewingCredentials
persistentStore
errorWithDomain:code:localizedDescription:title:userInfo:
renewCredentialsForAccount:options:completion:
dictionaryWithDictionary:
dictionary
setObject:forKeyedSubscript:
_renewCredentialsWithOptions:completion:
openAuthenticationURL:forAccount:shouldConfirm:completion:
intValue
defaultSecurePortNumber
defaultPortNumber
portNumber
predefinedValueForKey:
_shouldTryDirectSSLConnectionOnPort:
copyIdentityForPersistentReference:error:
copyClientSSLIdentityForHostName:error:
arrayWithObjects:count:
objectAtIndex:
persistentReferenceForIdentity:error:
defaultCenter
properties
postNotificationName:object:userInfo:
requiresAuthentication
schemeWithName:
name
connectionClass
connectionClassForAccountClass:
_newConnection
_connectAndAuthenticate:
setUsesSSL:
setHostname:
setPortNumber:
certUIService
setCertUIService:
setTryDirectSSL:
tryDirectSSL
secureServiceName
serviceName
setServiceName:
connectionServiceType
defaultConnectionSettings
credentialAccessibility
localizedDescription
customDescriptionForError:authScheme:defaultDescription:
setLocalizedDescription:
connectUsingFallbacksForAccount:
authenticateUsingAccount:
disconnect
reportAuthenticationError:authScheme:
enabledDataclasses
allObjects
isEnabledForDataclass:
initWithFormat:
setShouldHealAccounts:
newAccountWithDictionary:
authSchemesForAccountClass
accountWithPersistentAccount:
isPredefinedAccountType
propertiesWhichRequireValidation
displayedShortAccountTypeString
legacyKeychainProtocol
accountPropertiesValueForKey:value:
isCommonPortNumber:
isSSLEditable
saslProfileName
supportedDataclasses
shouldFetchACEDBInfoForError:
copyWithZone:
removePersistentAccount
type
accountClass
removeValueInAccountPropertiesForKey:
canGoOffline
setDisplayName:
supportsMailDrop
_credential
oauth2Token
renewCredentialsWithOptions:completion:
promptUserForPasswordWithTitle:message:completionHandler:
promptUserForWebLoginWithURL:shouldConfirm:completionHandler:
managedTag
fetchTokensIfNecessary:
releaseAllForcedConnections
setDomain:
setPreferredAuthScheme:
authenticatedConnection
applySettingsAsDefault:
alternateConnectionSettings
insecureConnectionSettings
secureConnectionSettings
syncStoreIdentifier
nameForMailboxUid:
shouldEnableAfterError:
enableAccount
shouldDisplayHostnameInErrorMessages
missingPasswordErrorWithTitle:
inaccessiblePasswordErrorWithTitle:
loginDisabledErrorWithTitle:
isSyncingNotes
copyDiagnosticInformation
_persistentAccount
_persistentAccountLock
_unsavedAccountProperties
mf_isMissingAccountCredentialError
rangeOfString:
substringWithRange:
UTF8String
mf_addressDomain
lowercaseString
array
stringForKey:
setScheme:
setPath:
requestWithURL:
setHTTPMethod:
addValue:forHTTPHeaderField:
dataUsingEncoding:
setHTTPBody:
bundleForClass:
pathForResource:ofType:
fileSystemRepresentation
indexOfObject:
initWithUTF8String:
initWithPerformsValidationInBackground:
stop
accountValidator:finishedValidationOfAccount:usedSSL:
validateAccount:useSSL:withCompletion:
_validateAccount:withFallbacks:
validateAccountWithoutFallbacks:withCompletion:
authSchemesForAccount:connection:
shouldUseAuthentication
initWithArray:
initWithObjects:
allocWithZone:
connectUsingAccount:
addObjectsFromArray:
removeObject:
userInfo
pep_getInvocation:
_backgroundValidateAccountFinished:authSchemes:
performSelectorOnMainThread:withObject:waitUntilDone:
cancel
_validateAccount:
_validateAccountWithoutFallbacks:
invocationWithSelector:target:object:taskName:priority:canBeCancelled:
monitor
setCanBeCancelled:
performsValidationInBackground
sharedInvocationQueue
addInvocation:
account
_outgoingServerValid
_incomingServerValid
validateAccount:useSSL:
validateAccountWithoutFallbacks:
cancelValidation
_ispAccountInfo
accountValidationCanceled
validationInvocation
accountIsValid
accountSupportsSSL
delegate
_account
_accountValidationActivity
_validationInvocation
_completionBlock
_flags
_incomingServerValidationError
_smtpServerValidationError
_incomingServerAuthSchemes
_smtpServerAuthSchemes
_delegate
arrayByAddingObjectsFromArray:
shouldTryFallbacksAfterError:
setAllowsFallbacks:
hasEncryption
quit
postNotificationName:object:
initWithObjectsAndKeys:
threadDictionary
resetConnectionStats
postActivityStarting
mf_clearLocks
postActivityFinished:
numberWithFloat:
userInfoForNotification
postDidChangeWithUserInfo:
_ntsThrottledUserInfoDict
setSupportsPerItemProgress:
setWithSet:
percentDone
setStatusMessage:percentDone:
setStatusMessage:percentDone:withKey:
setPercentDone:withKey:
setDisplayName:maxCount:
addActivityTarget:
_lockedAddActivityTarget:
dictionaryWithObjectsAndKeys:
removeActivityTarget:
primaryTarget
setPrimaryTarget:
allTargets
isMainThread
_cancelAssociatedCancelables
cancelMessage
didCancel:
_didChange
makeObjectsPerformSelector:
setShouldCancel:
currentDesignator
destroyCurrentDesignator
setStatusMessage:withKey:
destroyMonitor
startActivity
finishedActivity:
notifyConnectionEstablished
setMaxCount:
setCurrentCount:
setPercentDoneOfCurrentItem:
reset
setGotNewMessagesState:
gotNewMessagesState
addReason:
hasReason:
reasons
changeCount
setStatusMessage:
statusMessage
setPercentDone:
startTime
setExpectedLength:
expectedLength
taskName
setTaskName:
setActivityTarget:
activityTarget
addActivityTargets:
activityTargets
canBeCancelled
addCancelable:
removeCancelable:
setInvocationQueue:
acquireExclusiveAccessKey
relinquishExclusiveAccessKey:
recordBytesRead:
recordBytesWritten:
bytesRead
bytesWritten
mailbox
setMailbox:
isRemoteSearch
setIsRemoteSearch:
_runningThread
_taskName
_displayName
_statusMessage
_descriptionString
_ourQueue
_percentDone
_key
_canCancel
_shouldCancel
_isActive
_changeCount
_target
_expectedLength
_maxCount
_currentCount
_currentItemPercentDone
_supportsPerItemProgress
_mailbox
_lastTime
_startTime
_gotNewMessagesState
_reasons
_associatedCancelables
_isRemoteSearch
_primaryTarget
_allTargets
initWithCapacity:
registerSchemeClass:
allValues
authenticationMechanisms
authenticatorClass
initWithAuthScheme:account:connection:
initialize
defaultPortForAccount:
authenticatorForAccount:connection:
humanReadableName
initWithMaximumSize:latency:
sizeForItem:
flushIfNecessary
removeAllObjects
handleItems:
_flush
addItem:
flush
isEmpty
size
maximumSize
setMaximumSize:
maximumLatency
setMaximumLatency:
_maximumSize
_maximumLatency
_timeOfLastFlush
_queue
_currentSize
stringArrayForKey:
componentsSeparatedByString:
initWithName:andDelegate:
readLoggingDefaults
sharedController
addDiagnosticsGenerator:
removeObserver:
removeDiagnosticsGenerator:
_setupSocketWithSettings:
connectUsingSettings:
saslName
authenticateUsingAccount:authenticator:
securityLayer
capabilities
rangeOfString:options:range:
substringFromIndex:
uppercaseString
encryptionBufferSize
appendBytes:length:
createEncryptedDataForBytes:length:
setLength:
appendData:
errorWithException:
writeBytes:length:dontLogBytesInRange:
writeData:dontLogBytesInRange:
initWithBytes:length:encoding:
endCompression
appendString:
appendFormat:
logConnection:type:data:
flushLog
logClasses
setLogClasses:
logAllSocketActivity
setLogAllSocketActivity:
logActivityOnPorts
setLogActivityOnPorts:
logActivityOnHosts
setLogActivityOnHosts:
isFetching
setIsFetching:
loginDisabled
writeData:
setDesiredReadBufferLength:
logReadChars:length:
readLineIntoData:
readBytesIntoData:desiredLength:
startTLSForAccount:
startCompression
hasBytesAvailable
lastUsedTime
connectionSettings
setConnectionSettings:
_securityLayer
_connectionSettings
_socket
_lastUsedTime
_bufferRemainingBytes
_bufferStart
_bufferLength
_desiredBufferLength
_deflater
_inflater
_zbuffer
_readBytesNotLogged
_isFetching
_allowFallbacks
_compressionEnabled
_hostname
_serviceName
_certUIService
_portNumber
_usesSSL
_tryDirectSSLConnection
mf_isUserCancelledError
setUserInfoObject:forKey:
setShortDescription:
data
logBytes:length:
createDecryptedDataForBytes:length:
getBytes:length:
raise
sendsPlainTextPasswords
responseForServerData:
simplifiedCriterion
fixOnce
_criterionForSQL
identifiersMatchingCriterion:
indexSet
integerValue
addIndex:
initWithType:qualifier:expression:
setLibraryIdentifiers:
criterionType
libraryIdentifiers
qualifier
indexSetWithIndex:
addIndexes:
mf_intersectIndexes:
isFullTextSearchableCriterion
_evaluateFTSCriterionWithIndex:mailboxIDs:
criteria
allCriteriaMustBeSatisfied
_resolveWithIndex:mailboxIDs:
arrayWithArray:
setCriterionType:
setAllCriteriaMustBeSatisfied:
setCriteria:
_collapsedMessageNumberCriterion:allMustBeSatisfied:collapsedIndexes:
removeObjectsAtIndexes:
insertObject:atIndex:
hasLibraryIDCriterion
SQLExpressionWithContext:depth:
expression
bestBaseTable
_addCriteriaSatisfyingPredicate:toCollector:
objectAtIndexedSubscript:
includesCriterionSatisfyingPredicate:restrictive:
firstObject
criterionByApplyingTransform:
lastObject
criteriaSatisfyingPredicate:
orCompoundCriterionWithCriteria:
unreadMessageCriterion
criterionForSQL
SQLExpressionWithTables:baseTable:protectedDataAvailable:searchableIndex:mailboxIDs:
extractedDateCriterion
extractedUnreadCriterion
dateIsRelative
dateUnits
setDateUnits:
setDateIsRelative:
andCompoundCriterionWithCriteria:
date
currentCalendar
components:fromDate:
setDay:
hour
setHour:
minute
setMinute:
second
setSecond:
dateByAddingComponents:toDate:options:
weekday
setMonth:
setYear:
month
timeIntervalSince1970
criterionIdentifier
mf_SQLEscapedString
longLongValue
_SQLExpressionForMailboxCriterion
expressionIsSanitized
expressionWithString:
equalToString:
beginsWithString:
endsWithString:
containsString:
doesNotContainsString:
SQLExpression
newDeliveryWithMessage:
setDAMailAccount:
newDeliveryWithHeaders:mixedContent:textPartsAreHTML:
newDeliveryWithHeaders:HTML:plainTextAlternative:other:charsets:
initWithDAMailAccount:
deliveryClass
mailAccountIfAvailable
_DAMailAccount
setDone:
actionFailed:forTask:error:
messageDidSendWithContext:
messageDidSendWithContext:sentBytesCount:receivedBytesCount:
status
_status
firstHeaderForKey:
initWithHeaders:mixedContent:textPartsAreHTML:
initWithHeaders:HTML:plainTextAlternative:other:charsets:
newMessageWriter
setAllowsQuotedPrintable:
message
messageIDHeaderInFortyBytesOrLess
shouldSignMessage
shouldEncryptMessage
messageDataHolder
accountConduit
isUserRequested
sendMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:useSmartTasksIfPossible:isUserRequested:consumer:context:
waitUntilDone
initWithStatus:
setDuration:
setBytesSent:
supportsThreadOperations
conversationFlags
mailboxUidOfType:createIfNeeded:
deliverSynchronously
_folderId
_accountId
_repliedMessageId
_forwardedMessageId
_repliedLongId
_forwardedLongId
rangeOfString:options:
hasPrefix:
initWithLibrary:persistentAccount:
isMobileMail
sharedNetworkObserver
_reachabilityChanged:
addNetworkReachableObserver:selector:
isNetworkReachable
accountID
stringByAppendingPathComponent:
initWithPath:
setDAAccount:
mailboxForFolderID:
backingAccountInfo
allMailboxUids
resetSpecialMailboxes
mainBundle
localizedStringForKey:value:table:
initWithName:attributes:account:folderID:
rootMailboxUid
setParent:
virtualAllSearchMailbox
emptyFrequencyForMailboxType:
bundleIdentifier
folderID
_loadChildrenForParent:fromMap:intoArray:replacingInbox:withID:
folderName
isRunningInDisallowedBundle
_isUnitTesting
mf_invocationWithSelector:target:object:
mailboxes
_offlineCache
performWithAccount:offlineCache:
folderChangeResult
applyToFolderMap:
enumerateOperationsUsingBlock:
_replayOfflineCache:
inboxFolder
sentItemsFolder
deletedItemsFolder
draftsFolder
supportsServerDrafts
parentFolderID
caseInsensitiveCompare:
_loadMailboxListingIntoCache:attributes:children:parent:
_writeMailboxCacheWithPrejudice:
startListeningForNotifications
foldersContentsChanged:
_accountConduitClass
initWithDAAccount:
addObserver:selector:name:object:
accountHierarchyChanged:
stopListeningForNotifications
sharedConnection
updateFolderListForAccountID:andDataclasses:
_ensureWeHaveLoadedInitialMailboxList
_copyMailboxUidWithParent:name:attributes:existingMailboxUid:dictionary:
setFolderID:
_newMailboxWithParent:name:attributes:dictionary:withCreationOption:
folderIDForMailbox:
initFolderChangeWithChangeType:folderId:parentFolderId:displayName:dataclass:consumer:
wasSuccessful
_performFolderChange:completion:
_renameMailbox:newName:parent:
hasDeferredOperations
setConsumer:
performFolderChange:isUserRequested:
waitForResult
statusCode
mf_deferredOperation
deferOperation:
newMailboxNameIsAcceptable:reasonForFailure:
characterSetWithCharactersInString:
rangeOfCharacterFromSet:
_URLScheme
setAccount:
isHotmailAccount
persistentUUID
enabledForDADataclass:
emailAddress
emailAddresses
supportsMailboxSearch
supportsEmailFlagging
mailNumberOfPastDaysToSync
relativePath
folderIDForRelativePath:accountID:
addRequests:mailbox:consumers:
initWithAccount:folderID:
addRequests:consumers:
_deferMailboxRequests:mailbox:offlineCache:
performRequests:mailbox:consumers:
syncAnchorForFolderID:mailbox:
initWithCurrentTag:accountID:requests:consumers:
performMailboxRequests:mailbox:previousTag:isUserRequested:consumer:
setSyncAnchor:forFolderID:mailbox:
moreAvailable
shouldRetryRequest
library
URLString
messagesNeedingSyncConfirmationForMailbox:
compactMessages:
remoteID
removeObjectsInArray:
hasTemporaryUid
initMoveRequestWithMessage:fromFolder:toFolder:
initWithMessageIDs:newRemoteIDsByMessageID:failures:
performMoveRequests:consumer:
nextTemporaryMessageID
initWithMessages:temporaryIDs:sourceMailbox:destinationMailbox:
duplicateMessages:newRemoteIDs:forMailbox:setFlags:clearFlags:messageFlagsForMessages:createNewCacheFiles:
notificationWithName:object:userInfo:
postNotification:
localAccount
initWithResultCode:failedMessages:transferedMessage:
_relativePathForType:
mailboxUidForRelativePath:create:
isMailboxLocalForType:
_localMailboxNameForType:usingDisplayName:
_relativePathSpecialMailboxUidWithType:create:
mailboxUidForRelativePath:create:withOption:
setRepresentedAccount:
primaryMailboxUid
supportsDraftFolderSync
supportsUniqueServerId
uniqueServerIdForMessage:
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:
shutdown
invalidate
isCustomerInstall
hasSuffix:
removeNetworkReachableObserver:
mf_invocationWithSelector:target:
loadMeetingData
messageStore
mailboxUid
reattemptInvitationLinkageForMetaData:inFolderWithId:
unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:
folderIDsThatExternalClientsCareAboutForDataclasses:withTag:
_inboxFolderID
isEqualToSet:
isBatterySaverModeEnabled
pushedFoldersPrefsChanged:
_updateWatchedFolderIdsAndNotify:
canReceiveNewMailNotifications
monitorFoldersForUpdates:persistent:
stopMonitoringAllFolders
sequenceIdentifierForMailbox:
setSequenceIdentifier:forMailbox:
supportsConversations
performSearchQuery:
cancelSearchQuery:
_watchedFolderIds
_folderIdsForMailboxUids:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
stopMonitoringFoldersForUpdates:
initWithLibrary:account:
deferredOperation
setLastSelectedMailbox:
replayOperationsUsingBlock:
signingIdentityPersistentReference
setSigningIdentityPersistentReference:
encryptionIdentityPersistentReference
setEncryptionIdentityPersistentReference:
initWithEmailAddresses:
performResolveRecipientsRequest:consumer:
waitForResolvedRecipients
resolvedEmailToX509Certs
isFatPipe
isPluggedIn
is4GConnection
is3GConnection
setFetchMaxBytes:
csAccountTypeString
accountIDForDirectoryName:isAccountDirectory:
statisticsKind
deliveryAccount
uniqueIdForPersistentConnection
allMailMailboxUid
finishedInitialMailboxListLoad
fetchMailboxList
storeClass
_copyMailboxWithParent:name:attributes:dictionary:
_synchronouslyLoadListingForParent:
renameMailbox:newName:parent:
_deleteMailbox:
shouldAppearInMailSettings
mailboxPathExtension
syncAnchorForMailbox:
supportsRemoteAppend
supportsMailboxEditing
_infoForMatchingURL:
mailboxUidForInfo:
addRequest:mailbox:consumer:
processRequests:mailbox:consumers:
moveMessages:fromMailbox:toMailbox:markAsRead:
_specialMailboxUidWithType:create:
supportsMessageFlagging
shouldArchiveByDefault
sourceIsManaged
shouldFetchAgainWithError:foregroundRequest:
needsRemoteSearchResultsVerification
iconString
derivesDeliveryAccountInfoFromMailAccount
reconstituteOrphanedMeetingInMessage:
unactionableInvitationICSRepresentationInMessage:summary:
meetingStorePersistentID
shouldRestoreMessagesAfterFailedDelete
supportsServerSearch
daysToSync
supportsUserPushedMailboxes
pushedMailboxUids
changePushedMailboxUidsAdded:deleted:
addUserFocusMailbox:
removeUserFocusMailbox:
signingIdentityPersistentReferenceForAddress:
setSigningIdentityPersistentReference:forAddress:
encryptionIdentityPersistentReferenceForAddress:
setEncryptionIdentityPersistentReference:forAddress:
secureMIMEEnabled
perMessageEncryptionEnabled
secureCompositionSigningPolicyForAddress:
secureCompositionEncryptionPolicyForAddress:
copyDataForRemoteEncryptionCertificatesForAddress:error:
restrictedFromTransferingMessagesToOtherAccounts
restrictedFromSendingExternally
restrictedFromSyncingRecents
fetchLimits
unsupportedContinuationTypes
setVirtualAllSearchMailbox:
_accountConduit
_daAccount
_offlineCacheLock
_isNetworkReachable
_cachedAccountID
_cachedAccountPersistentUUID
_cachedDisplayName
_cachedEmailAddress
_cachedEmailAddresses
_cachedIconString
_cachedIsActive
_cachedIsHotmailAccount
_cachedCalendarEnabled
_cachedSecureMIMEEnabled
_cachedPerMessageEncryptionEnabled
_cachedSecureMIMEShouldSign
_cachedSecureMIMEShouldEncrypt
_cachedRestrictMessageTransfersToOtherAccounts
_cachedRestrictSendingFromExternalProcesses
_cachedRestrictSyncingRecents
_cachedIsManaged
_cachedSupportsMailDrop
_cachedArchiveByDefault
_cachedSourceIsManaged
_cachedStoreDraftsOnServer
_cachedInboxFolderID
_cachedSentMessagesFolderID
_cachedTrashFolderID
_cachedJunkFolderID
_cachedDraftsFolderID
_temporaryInbox
_loadedInitialMailboxList
_receivedInitialMailboxUpdate
_doneInitialInboxCheck
_observingPushedFoldersPrefsChanged
_supportsServerSearch
_supportsMessageFlagging
_supportsConversations
_supportsServerDrafts
_supportsUniqueServerId
_daysToSync
_requestQueuesByFolderID
_watchedFolderIdsLock
_userFocusMailboxIds
_folderTag
_virtualAllSearchMailbox
initWithName:attributes:forAccount:extraAttributes:
mergeWithUserInfo:
_folderID
saveUserInfo
flushCriteria
userInfoObjectForKey:
URLForInfo:
absoluteString
mutableDictionaryRepresentation
URLStringWithAccount:
dictionaryRepresentation
initWithAlwaysReportFailures:
initWithName:condition:andDelegate:
lockWhenCondition:beforeDate:
taskFailed:statusCode:error:
waitUntilDoneBeforeDate:
_doneCondition
_shouldRetryRequest
_alwaysReportFailures
shouldSend
filterRequests:consumers:newConsumers:
bodyFormat
processRequests:consumers:
streaming
streamingDone
initWithData:streaming:streamingDone:
resolvedRecipientsByEmailAddress:
_conditionLock
_resolvedRecipientsByEmailAddress
mf_alwaysReportFailures
_setTag:
handleResponse:error:
messageID
drainMailbox
receiveSyncActions:
commitSyncActions
actionsConsumer
initWithItemChangeType:changedItem:serverId:
serverId
objectForKeyedSubscript:
originalThreadMonitor
handleSyncResponses:
setStreamConsumer:
requestType
streamingContentConsumer
streamConsumer
shouldBeginStreamingForMailMessage:format:
consumeData:length:format:mailMessage:
didEndStreamingForMailMessage:
refreshFolderHierarchyAndWait:
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
condition
runUntilDate:
resultsForMailbox:newTag:actions:responses:percentComplete:moreAvailable:
resultsForMailbox:newTag:actions:responses:percentComplete:moreAvailable:sentBytesCount:receivedBytesCount:
partialResultsForMailbox:actions:responses:percentComplete:moreAvailable:
_requests
_consumers
_tag
_accountID
_monitor
_streamConsumer
_bodyData
_moreAvailable
_receivedFirstItem
_firstSyncBatch
_syncKeyResets
_serverErrors
_syncResponseConsumersByMessageId
_accountHierarchyLock
conversationId
mf_encodeBase64
rfc822Data
messageWithRFC822Data:
subject
headers
messageFlags
read
flagged
lastVerb
attachments
meetingRequestUUID
messageBody
bodySize
valueForKeyPath:
initWithDAMailMessage:mailbox:
externalConversationID
headersIfAvailable
messageData:messageSize:isComplete:downloadIfNecessary:
messageDataHolder:messageSize:isComplete:downloadIfNecessary:
remoteMailboxURL
messageSize
DAMailMessage
_DAMailMessage
_rfc822CreatedMessage
_externalConversationID
initWithBytesNoCopy:length:
consumerFactory
dataConsumerForPart:
setAlternatePartConsumer:
alternatePartConsumer
dataConsumer
bodyData
done
succeeded
didBeginStreaming
timeOfLastActivity
setDataConsumer:
setConsumerFactory:
requestedFormat
setRequestedFormat:
_requestedFormat
_dataConsumer
_alternatePartConsumer
_consumerFactory
_triedCreatingAlternatePartConsumer
_didBeginStreaming
_succeeded
_timeOfLastActivity
_message
initWithMailboxUid:readOnly:
willFetchMessages
_folderIDForFetching
setMonitor:
initRequestForBodyFormat:withBodySizeLimit:isUserRequested:
serverSearchResults
dateOfOldestNonIndexedNonSearchResultMessage
distantFuture
isEqualToDate:
setLatestDateToAdd:
backedByVirtualAllSearchMailbox
mailboxSearchQueryWithSearchString:predicate:consumer:
setBodyType:
setCollectionID:
setMIMESupport:
setRange:
setTruncationSize:
setPriorToDate:
setDeepTraversal:
initWithTimeIntervalSinceNow:
resetDoneCondition
searchResult
setContinueOffset:
daBasicSearchString
daSearchPredicate
_remoteIDsMatchingSearchText:predicate:limit:offset:filterByDate:handler:
mf_boolForKey:
initRequestWithSetFlags:unsetFlags:message:
isSearchResultWithBogusRemoteId
initRequestWithMessageID:
setFlagsFromDictionary:forMessages:
issueFlagUpdates:forMessages:
mf_invocationWithSelector:target:object1:object2:
copyOfAllMessagesWithOptions:
messageForRemoteID:inMailbox:
messageWithRemoteID:inRemoteMailbox:
setMessageStore:
messagesForMailbox:olderThanNumberOfDays:
deleteMessagesOlderThanNumberOfDays:compact:
messagesWithSummariesForMailbox:fromRowID:limit:
makeObjectsPerformSelector:withObject:
isMessageContentsLocallyAvailable
loadMeetingExternalIDForMessage:
loadMeetingDataForMessage:
loadMeetingMetadataForMessage:
copyNewMimeBoundary
setType:
setSubtype:
setBodyParameter:forKey:
addSubpart:
substringToIndex:
setContentID:
setDisposition:
setDispositionParameter:forKey:
isMostDefinitelyBase64ed
setContentTransferEncoding:
setIsGenerated:
appendDataForMimePart:toData:withPartData:
initRequestForBodyFormat:withFolderID:withServerID:withLongID:withBodySizeLimit:
performFetchMessageSearchResultRequests:consumer:
cancelTaskWithID:
initRequestForBodyFormat:withMessageID:withBodySizeLimit:
hasLocalCopyOfData
pairWithFirst:second:
_fetchBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:partial:
dataConsumerForMessage:isPartial:
setLibrary:
setMessage:
_fetchBodyDataForSearchResult:folderID:format:streamConsumer:
_fetchBodyDataForNormalMessage:format:part:streamConsumer:
first
mf_rangeOfRFC822HeaderData
mf_subdataWithRange:
initWithHeaderData:encoding:
updateThreadingInfoForMessage:fromHeaders:
updateAdditionalThreadingInfoForSentMessageWithHeaders:externalConversationID:
initWithData:partial:incomplete:
_cachedBodyDataContainerForMessage:valueIfNotPresent:
setStore:
preferredEncoding
partNumber
mimeBody
contentID
initWithActivityMonitor:
range
initWithAttachmentName:andMessageServerID:
contentTransferEncoding
initWithConsumer:expectedSize:
progressBlock
setProgressBlock:
setProgressFilter:
performFetchAttachmentRequest:consumer:
fetchSucceeded
dataWasBase64
initWithConsumer:
decryptedTopLevelPartForPart:
defaultAlternativeForPart:
copyBodyDataToOffset:resultOffset:downloadIfNecessary:
alternativeAtIndex:
bestAlternativeForPart:
isGenerated
longID
setHeader:forKey:
_additionalHeadersForAction:ofMessage:
appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:flagsToSet:
fetchNumMessages:preservingUID:options:
initWithMessage:mailbox:
success
addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:remoteIDs:setFlags:clearFlags:messageFlagsForMessages:copyFiles:addPOPUIDs:dataSectionsByMessage:
fetchMessagesMatchingCriterion:limit:
storeSearchResultMatchingSearchText:criterion:limit:offset:error:
setServerFlagsFromDictionary:forMessages:
willSetFlagsFromDictionary:forMessages:
setFlagsForAllMessagesFromDictionary:
allowsAppend
messageForRemoteID:
purgeMessagesBeyondLimit:keepingMessage:
copyOfAllMessagesForBodyLoadingFromRowID:limit:
shouldSetSummaryForMessage:
shouldDownloadBodyDataForMessage:
wantsLineEndingConversionForMIMEPart:
bodyFetchRequiresNetworkActivity
_downloadHeadersForMessages:
_fetchDataForMimePart:range:isComplete:consumer:
canFetchSearchResults
hasMoreFetchableMessages
fetchWindow
shouldGrowFetchWindow
growFetchWindow
messageCanBeTriaged:
additionalHeadersForReplyOfMessage:
additionalHeadersForForwardOfMessage:
setBackedByVirtualAllSearchMailbox:
_DAFolder
_backedByVirtualAllSearchMailbox
initRequestForBodyFormat:withBodySizeLimit:
generationNumber
_isUserRequested
initWithSetFlagsRequest:
initWithDeleteMessageRequest:
consumer
store
dataForMimePart:inRange:isComplete:downloadIfNecessary:didDownload:
bodyDataForMessage:isComplete:isPartial:downloadIfNecessary:
part
format
partial
onFlags
offFlags
allowsKeyedCoding
decodeInt64ForKey:
decodeObjectForKey:
encodeInt64:forKey:
encodeObject:forKey:
selectedMailboxID
initWithCoder:
encodeWithCoder:
_onFlags
_offFlags
_messageID
numNewMessages
removeAllMessagesFromMailbox:removeMailbox:andNotify:
itemChangeType
isDraft
readIsSet
flaggedIsSet
verbIsSet
setFlagsLocallyFromDictionary:forMessages:
mf_groupBy:
enumerateKeysAndObjectsUsingBlock:
earlierDate:
serverID
addRemoteID:mailbox:
dateReceived
searchQuery:returnedResults:
searchQuery:finishedWithError:
searchQuery:returnedTotalCount:
latestDateToAdd
earliestDateAdded
doneCondition
timeReceivedLastResponse
totalCount
changedItem
wantsData
setData:
_data
_store
setHasLocalCopyOfData:
_hasLocalCopyOfData
dataConsumerForMessage:part:
_library
progressFilter
consumeData:ofContentType:forAttachmentNamed:ofMessageWithServerID:
attachmentFetchCompletedWithStatus:forAttachmentNamed:ofMessageWithServerID:dataWasBase64:
attachmentFetchCompletedWithStatus:forAttachmentNamed:ofMessageWithServerID:dataWasBase64:sentBytesCount:receivedBytesCount:
_progressFilter
_accumulatedLength
_dataWasBase64
_fetchSucceeded
searchResultFetchedWithResponses:
from
setAddressListForSender:
setAddressListForTo:
setAddressListForCc:
setAddressListForBcc:
encodedHeaders
transferFailureSnapshotForTemporaryID:
originalRemoteID
originalMailboxID
translatedIDForTemporaryID:
body
smimeType
setPartName:
setComplete:
setPartial:
meetingRequestMetaData
meetingRequestIsActionable
archivedDataWithRootObject:
fetchMaxBytes
dateReceivedAsTimeIntervalSince1970
stringByAppendingString:
fullPath
initWithMailbox:
defaultPath
defaultManager
fileExistsAtPath:isDirectory:
stringWithCString:encoding:
_executeStatements:db:
_writeToDisk:
mf_makeCompletePath:mode:
_markMailboxForReconciliation:db:
legacyJournal
preparedStatement:pattern:
handleSqliteError:format:
performReadTransaction:
mailboxUidFromActiveAccountsForURL:
journalForMailbox:
mergeWithLibrary:
attributesOfItemAtPath:error:
_processJournalFile:db:
performWriteTransaction:
createFileAtPath:contents:attributes:
defaultInstance
append:mergeUpdateStatement:
commit:isProtectedDataAvailable:
clear
_path
_lock
_journalStatements
_onMergeEnvelopeUpdates
contentsOfDirectoryAtPath:error:
sortedArrayUsingFunction:context:
_postDeliveryAccountsHaveChanged
notificationWithName:object:
deliveryAccounts
accountWithIdentifier:
accountWithHostname:username:lookForExistingAccounts:
existingAccountWithHostname:username:
_updateAccountDescriptionWithUsername:hostname:
addDeliveryAccount:
initWithMessage:
setShouldUseAuthentication:
unsignedLongLongValue
maximumMessageBytes
numberWithUnsignedLongLong:
mailAccounts
reloadDeliveryAccounts
removeDeliveryAccount:
accountWithUniqueId:
existingAccountWithIdentifier:
accountWithHostname:username:
carrierDeliveryAccount
newDefaultInstance
setMaximumMessageBytes:
hasNoReferences
displayHostname
canBeFallbackAccount
hasEnoughInformationForEasySetup
supportsOutboxCopy
shouldUseSaveSentForAccount:
accountsWithTypeIdentifiers:error:
setAuthenticationState:
authenticationState
setSecurityLevel:
securityLevel
setMaxBuffer:
setCryptInfo:
setExpectedResponse:
_maxbuf
_securityLevel
_expectedResponse
_cryptInfo
mf_appendCString:
mf_encodeBase64WithoutLineBreaks
mf_lineBreakBeforeIndex:withinRange:
mf_nextWordFromIndex:forward:
whitespaceAndNewlineCharacterSet
getLineStart:end:contentsEnd:forRange:
characterAtIndex:
setString:
drain
mf_convertFromFlowedText:visuallyEmpty:
newWithPlainTextDocument:encoding:
outputString
addedTrailingSpaces
quotedString
getFormatFlowedString:insertedTrailingSpaces:encoding:
quotedString:
urlMatchesForString:
rangeOfComposedCharacterSequenceAtIndex:
_findLineBreakInRange:maxCharWidthCount:endIsURL:
deleteCharactersInRange:
replaceOccurrencesOfString:withString:options:range:
fragmentCount
getString:quoteLevel:ofFragmentAtIndex:
_outputQuotedParagraph:range:withQuoteLevel:
_inputDocument
_encoding
_outputString
_quotedString
_addedTrailingSpaces
_lineString
currentLocale
localeIdentifier
getCharacters:
initWithCharacters:length:
setDateFormat:
localeWithLocaleIdentifier:
setLocale:
stringFromDate:
mf_addressComment
mf_uncommentedAddress
mf_descriptionForMimeHeaders
mf_replyPrefixForSender:
mf_integerForKey:
mf_setBool:forKey:
mf_setInteger:forKey:
mf_addObject:forKey:
mf_objectForKey:ofClass:
removeOverride
pthread
isLowPriority
desiredQoS
initWithPthread:desiredQoS:lowPriority:
applyOverrideWhileForeground:
_override
_lowPriority
_desiredQoS
_pthread
initWithMaxThreadCount:
setThreadRecycleTimeout:
priority
_drainQueue:
detachNewThreadSelector:toTarget:withObject:
member:
mf_shouldLogInvocation
target
selector
_processInvocation:
removeObjectAtIndex:
totalInvocationCount
_adjustThreadPrioritiesIsForeground:
flushAllInvocationQueues
contentProtectionStateChanged:previousState:
setMaxThreadCount:
maxThreadCount
invocationCount
removeAllItems
applicationWillSuspend
applicationWillResume
threadCount
threadPriorityTrigger
setThreadPriorityTrigger:
threadRecycleTimeout
_items
_numThreads
_maxThreads
_threadPriorityTrigger
_threadRecycleTimeout
_threadOverrides
_isForeground
_keybagQueue
initWithLibraryID:
urlForMailboxID:
mailboxUidForMessage:
_updateUID
libraryID
numberWithUnsignedInt:
stringValue
setRemoteID:
commit
setMessage:isPartial:
isMessageContentsLocallyAvailable:
setPreferredEncoding:
setFlags:forMessage:
setSummary:
setSummary:forMessage:
setMessageFlagsWithoutCommitting:
dataPathForMessage:
dataPathForMessage:part:
sharedInstanceIfExists
accountForMessage:
addressesThatReceivedMessage:
firstEmailAddress
emailAddressesAndAliasesList
mf_uncommentedAddressList
defaultEmailAddress
isOutgoingMailboxUid
senders
accountContainingEmailAddress:
fullUserName
mf_formattedAddressWithName:email:useQuotes:
setData:forMessage:isPartial:
copyMessageInfo
setUid:
setMailboxID:
setUidIsLibraryID:
_initializeMetadata
updateMessage:withMetadata:
metadataForMessage:key:
mailboxID
_attachmentStorageLocation
messageWithLibraryID:options:inMailbox:
_forceLoadOfMessageSummaryFromProtectedStore
loadCachedHeaderValuesFromHeaders:
messageWithLibraryID:
persistentID
setOriginalMailboxID:
originalMailboxURL
setMessageSize:
uniqueRemoteId
setUniqueRemoteId:
isPartial
setIsPartial:
setHasTemporaryUid:
mailboxName
compareByUidWithMessage:
setMessageFlags:
setFlags:
setMutableInfoFromMessage:
path
dataPathForMimePart:
markAsViewed
markAsNotViewed
markAsFlagged
markAsNotFlagged
markAsReplied
markAsForwarded
preferredEmailAddressToReplyWith
setConversationFlags:
setRemoteID:flags:size:mailboxID:originalMailboxID:
setMessageData:isPartial:
dataConsumerForMimePart:
isLibraryMessage
setMetadataValue:forKey:
metadataValueForKey:
attachmentStorageLocation
_libraryID
_remoteID
_uid
_uniqueRemoteId
_size
_mailboxID
_originalMailboxID
_conversationFlags
_metadata
_metadataChangedKeys
_metadataLock
serialDispatchQueueSchedulerWithName:qualityOfService:
_setForeground:
persistedRemainingIndexingBudget
budgetPeriodInSeconds
budgetInSeconds
budgetResumeOverageCount
_persistRemainingIndexingBudgetValue:
initWithCoalescingAction:
_registerDistantFutureSpotlightVerification
powerObservable
_powerStateChanged
observerWithResultBlock:
subscribe:
scheduleBatchOfBudgetedMessageProcessing
refresh
budgetConfiguration
_budgetPersistenceKey
dictionaryForKey:
doubleValue
dateByAddingUnit:value:toDate:options:
_scheduleResetIndexingBudgetTimer
setRemainingIndexingBudget:shouldPersist:
_logIndexingPowerEventWithIdentifier:additionalEventData:usePersistentLog:
_queueTransitionActive:
xpcGracePeriod
_resetIndexingBudgetTimer
numberWithDouble:
coalesceValue:
_scheduleSpotlightVerificationOnIndexingQueueWithCompletion:
_processSpotlightVerificationWithCompletion:
_transitionWithBudgetTimeUsed:
_verifySpotlightIndex
fileURLWithPathComponents:
_localClientStateURL
dataWithContentsOfURL:options:error:
clientStateFromData:
archiveRepresentation
writeToURL:options:error:
removeItemAtURL:error:
numberWithLongLong:
_queueRefresh
searchableIndex:assignTransaction:updates:
_dataSourceScheduleWork:
initWithIdentifier:
mf_map:
setItemsRequiringIndexing:
_dataSourceAssignTransaction:updates:completion:
searchableIndex:invalidateItemsGreaterThanTransaction:
updatesForSearchableIndex:count:
itemsRequiringIndexing
removedIdentifiers
setWithObject:
removeItemsWithIdentifiers:reasons:
_indexItems:fromRefresh:
removedDomainIdentifiers
removeItemsForDomainIdentifier:
_throttleRequestedSize:action:
_coalescingTimerFired
_queueConsumeBudgetElapsedPeriod:
_fetchLastClientState
_stopCoalescingTimer
_scheduleProcessPendingItems
_startCoalescingTimer
_scheduleDataSourceRefresh
_scheduleSpotlightVerification
_consumeBatchOfSize:
_getDomainRemovals:identifierRemovals:
updates
identifiers
setRemovedIdentifiers:
setRemovedDomainIdentifiers:
_nextTransaction
_invalidateCache
_processRefreshRequestWithCompletion:
addEntriesFromDictionary:
removeObjectsInRange:
_dataSourceRequestNeededUpdatesWithCompletion:
_dataSourceVerifyRepresentativeSampleWithCompletion:
nullFuture
removeAllIdentifiers
_saveLocalClientState:
_dataSourceInvalidateItemsGreaterThanTransaction:completion:
removeIdentifier:
indexOfObject:inSortedRange:options:usingComparator:
setBodyData:
_queueConsumeBudgetItemCount:
indexesOfObjectsPassingTest:
addIdentifiers:withReasons:
domainIdentifier
_reindexAllSearchableItemsWithOptions:acknowledgementHandler:
setCriterion:
spotlightQueryString
objectForKey:generator:
_localClientState
initWithName:dataSource:
addMiddleware:
pendingIndexItemsCount
_noteNeedsLastClientStateFetch
_transaction
suspend
_dataSourceAssignTransaction:forIdentifiers:completion:
requestSpotlightDiagnosticsForMessageRowId:
indexedEmptySubjectIdentifers
reindexSearchableItemsWithIdentifiers:acknowledgementHandler:
reindexAllSearchableItemsWithAcknowledgementHandler:
indexItems:
removeItemsWithIdentifiers:
dataSource
setDataSource:
_indexName
_cancelationToken
_coalescingTimer
_resumeCount
_throttledIndexingBatchSize
_throttledDataSourceBatchSize
_currentMaximumBatchSize
_budgetCoalescer
_remainingIndexingBudget
_remainingIndexingBudgetOverage
_batchIndexingActivity
_pendingItems
_pendingDomainRemovals
_pendingIdentifierRemovals
_indexingQueue
_dataSourceQueue
_indexingBatchScheduler
_searchResultsCache
_middleware
_needsRefresh
_needsVerification
_clientStateFetched
_coalesceTimerFired
_scheduledProcessing
_scheduledRefresh
_scheduledVerification
_dataSource
_budgetConfiguration
JSONObjectWithData:options:error:
initWithDictionary:
setSystemBuildVersion:
dateWithTimeIntervalSince1970:
setTransactionDate:
dataWithJSONObject:options:error:
clientState
setTransaction:
transactionValue
transaction
transactionDate
systemBuildVersion
_transactionValue
_transactionDate
_systemBuildVersion
criterion
mailboxIDs
isEqualToIndexSet:
setMailboxIDs:
_criterion
_mailboxIDs
hasNonFullTextSearchableCriterion
_itemsRequiringIndexing
_removedIdentifiers
_removedDomainIdentifiers
initWithMessage:bodyData:
itemWithMessage:bodyData:
searchableItemWithClientState:
fetchIndexableAttachments
searchableItem
indexingType
setIndexingType:
hasCompleteBodyData
setHasCompleteBodyData:
_hasCompleteBodyData
_identifier
_searchableItem
_indexingType
_identifiersPassingReasonsTest:
unionSet:
purgedIdentifiers
deletedIdentifiers
_reasonsByIdentifier
_budgetPeriodInSeconds
_budgetInSeconds
_budgetResumeOverageCount
messageNeedsReindexForFlagsUpdateFromOldFlags:toNewFlags:
intersectsSet:
initWithQueryString:context:
discreteProgressWithTotalUnitCount:
addChild:withPendingUnitCount:
becomeCurrentWithPendingUnitCount:
_cancel
resignCurrent
future
logPrefixString
isFinished
setQueryStatusString:
completedUnitCount
setTotalUnitCount:
finishWithResult:
mf_cancelledError
_isCancellationError:
finishWithError:
_failedWithError:
_removeAllResultsBlocks
addSuccessBlock:
addFailureBlock:
_operandStringForOperand:
_modifierStringFromModifiers:
mf_stringForQuotingWithCharacter:
queryStringByJoiningQueries:withOperand:
_queryStringForPhrase:attributes:modifiers:
searchWordsForPhrase:
componentsSeparatedByCharactersInSet:
initWithString:
intervalForSpotlightFailureSimulation
queryWithString:context:
queryStringForPhrase:attributes:modifiers:
progress
truncatedDescription
_foundItems:
_completed
start
addResultsBlock:
addCompletionBlock:
queryString
setLogPrefixString:
queryStatusString
_progress
_internalProgress
_resultsPromise
_resultsBlocks
_queryString
_logPrefixString
_queryStatusString
mutableFetchAttributes
mutableProtectionClasses
mutableRankingQueries
setFetchAttributes:
fetchAttributes
addFetchAttribute:
setProtectionClasses:
protectionClasses
addProtectionClass:
setRankingQueries:
rankingQueries
addRankingQuery:
setMutableFetchAttributes:
setMutableProtectionClasses:
setMutableRankingQueries:
_mutableFetchAttributes
_mutableProtectionClasses
_mutableRankingQueries
isKnownToHaveAttachments
senderVIP
initWithUid:mailboxID:messageID:dateReceivedInterval:dateSentInterval:conversationHash:read:knownToHaveAttachments:flagged:isVIP:
dateReceivedInterval
dateSentInterval
conversationHash
messageIDHash
deleted
externalID
dateSent
initWithCriterion:mailbox:readOnly:
initWithCriterion:
removeObserver:name:object:
_queueMessagesAdded:
_queueMessageFlagsChanged:
_queueMessagesWillBeCompacted:
_queueMessagesWereCompacted:
invalidateFetchWindow
didOpen
totalCountForMailbox:
nonDeletedCountForMailbox:includeServerSearchResults:includeThreadSearchResults:
allNonDeleteCountForMailbox:includeServerSearchResults:includeThreadSearchResults:
messagesWithSummariesForMailbox:range:
arrayWithObject:
messageIsDeletedCriterion:
messageIsServerSearchResultCriterion:
messagesMatchingCriterion:options:range:
copyMessageInfosForMailbox:
copyOfMessageInfos
criterionForMailboxURL:
copyMessageInfosMatchingCriterion:
copyMessageInfosForConversationsContainingMessagesMatchingCriterion:forMailbox:
copyOfMessagesInRange:options:generation:
copyOfMessagesInRange:options:
messagesWereAdded:
addCountsForMessages:shouldUpdateUnreadCount:
messagesWithoutSummariesForMailbox:fromRowID:limit:
copyOfAllMessages
setCriterionIdentifier:
messagesMatchingCriterion:options:
copyMessagesWithRemoteIDs:options:inMailbox:
copyMessagesWithRemoteIDs:options:inRemoteMailbox:
copySendersByLibraryIDForConversation:mailbox:limit:
oldestKnownConversationInMailbox:
oldestKnownMessageInMailbox:
serverSearchResultMessagesForMailbox:
dateOfOldestNonIndexedNonSearchResultMessageInMailbox:
dateOfNewestNonSearchResultMessageInMailbox:
dateOfOldestNonSearchResultMessageInMailbox:
setEarliestReceivedDate:
_fetchWindowMultiple
_fetchWindowMinimum
allNonDeletedCountIncludingServerSearch:andThreadSearch:
fetchWindowCap
_calculateFetchWindowWithAdditionalMultiple:
filterContiguousMessages:forCriterion:options:
messagesWereAdded:earliestReceivedDate:
filterMessagesByMembership:
_handleFlagsChangedForMessages:flags:oldFlagsByMessage:
messageFlagsDidChange:flags:
allMessageFlagsDidChange:
_memberMessagesWithCompactionNotification:
messagesWereCompacted:
messagesWillBeCompacted:
messageWithMessageID:options:inMailbox:
headerDataForMessage:
bodyDataForMessage:andHeaderDataIfReadilyAvailable:
dataForMimePart:inRange:isComplete:withConsumer:downloadIfNecessary:didDownload:
parentPart
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:usePartDatas:didDownload:
dataForMimePart:isComplete:
dataConsumerForMessage:part:incomplete:
firstChildPart
nextSiblingPart
isAttachment
decodedDataForData:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:
messageBodyUpdatingFlags:
messageBodyIfAvailableUpdatingFlags:
topLevelPart
_copyDataFromMimePart:threshold:downloadIfNecessary:
_fetchFullBodyDataForMessage:andHeaderDataIfReadilyAvailable:downloadIfNecessary:didDownload:
_cachedHeaderDataForMessage:valueIfNotPresent:
bodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:
deleteBodyDataForMessage:
deleteDataForMessage:
keyEnumerator
nextObject
accountWithPath:
storeForMailboxUid:
appendMessages:unsuccessfulOnes:
setFlag:state:forMessages:
setFlagsFromDictionary:forMessagesInMailboxURLString:
setNumberOfAttachments:isSigned:isEncrypted:forMessage:
arrayByApplyingSelector:
updateMessages:updateNumberOfAttachments:
canCompact
isOpened
compactMailbox:
mf_canWriteToDirectoryAtPath:
serverUnreadOnlyOnServerCount
unreadCount
unreadCountMatchingCriterion:
setKeyGenerator:
setComparator:
_cachedHeadersForMessage:valueIfNotPresent:
nonDeletedCountForMailbox:
purgeMessages:
hasMessageForAccount:
handleMessagesAdded:earliestReceivedDate:
_addInvocationToQueue:
handleMessageFlagsChanged:
handleMessagesWillBeCompacted:
handleMessagesCompacted:
hasCompleteDataForMimePart:
defaultLoadOptions
storeWithCriterion:
storeWithMailbox:
createEmptyStoreForPath:
storeAtPathIsWritable:
openSynchronously
nonDeletedCountIncludingServerSearch:andThreadSearch:
messageWithLibraryID:options:
copyOfMessageInfosMatchingCriterion:
copyOfMessageInfosForConversationsContainingMessagesMatchingCriterion:
mutableCopyOfAllMessages
copyMessagesMatchingText:options:
copyMessagesMatchingCriterion:options:
copyMessagesWithRemoteIDs:options:
copySendersByLibraryIDForConversation:limit:
oldestKnownConversation
oldestKnownMessage
dateOfNewestNonSearchResultMessage
messageForMessageID:options:
_fetchHeaderDataForMessage:downloadIfNecessary:
storeData:forMimePart:isComplete:
fullBodyDataForMessage:andHeaderDataIfReadilyAvailable:isComplete:downloadIfNecessary:didDownload:
indexOfMessage:
deleteMessages:moveToTrash:
doCompact
writeUpdatedMessageDataToDisk
updateMetadata
updateUserInfoToLatestValues
_setNeedsAutosave
newObjectCache
_cachedBodyForMessage:valueIfNotPresent:
earliestReceivedDate
_earliestReceivedDate
_serverMessageCount
_fetchWindow
defaultAccountDirectory
_loadEntriesFromFileSystemPath:parent:
isContainer
attributes
setAttributes:
_setChildren:forMailboxUid:
childWithName:
mf_isSubdirectoryOfPath:
isStore
tildeAbbreviatedPath
pathExtension
mf_stringByExpandingTildeWithSharedResourcesDirectoryInPath
initWithAccount:
mutableCopyOfChildren
setChildren:
transientDraftsFolderShouldCreate:
saveState
resourceSpecifier
stringByRemovingPercentEncoding
defaultPathNameForAccountWithHostname:username:
canFetch
_shouldConfigureMailboxCache
supportsPurge
mailboxUidForFileSystemPath:
transientDraftsFolder
deleteInPlaceForMailbox:
supportsAppend
supportsArchiving
displayNameAtPath:
mf_stringByReallyAbbreviatingSharedResourcesDirectoryWithTildeInPath
mutableCopyWithZone:
mf_betterStringByResolvingSymlinksInPath
_addAccountToSortedPaths:
_loadDataAccessAccountsWithError:
existingDAMailAccountForDAAccount:
_removeLookAsideValuesNotInAccountList:
accountDidLoad
da_loadDAAccountsWithAccountTypeIdentifiers:withCompletion:
disableMailboxListingNotifications
_loadAllAccountsWithOptions:error:
_setMailAccounts:saveIfChanged:alreadyLocked:
enableMailboxListingNotifications:
mailAccountsWithError:
reloadAccounts
setMailAccounts:saveIfChanged:
setMaxConcurrentOperationCount:
indexOfObjectIdenticalTo:
_setupSortedPathsForAccounts:
addOperationWithBlock:
waitUntilAllOperationsAreFinished
activeAccountsWithError:
purgableAccountsWithError:
mf_firstObjectPassingTest:
isEquivalentTo:hostname:username:
isAccountClassEquivalentTo:
isHostnameEquivalentTo:
isUsernameEquivalentTo:
compare:options:
activeAccounts
resetMailboxTimer
callStackSymbols
_accountContainingEmailAddress:matchingAddress:fullUserName:includingInactive:
copyAddressListForResentFrom
accountContainingEmailAddress:includingInactive:
accountForHeaders:message:includingInactive:
copyAddressListForTo
copyAddressListForCc
_setOutboxMailboxUid:
outboxMailboxUid
removeLastObject
isActiveWithPersistentAccount:
_didBecomeActive:
_invalidateCachedMailboxen
newAccountWithPath:
deliveryAccountWillBeRemoved:
setupLibrary
storeClassForMailbox:
initWithBlock:
_setPath:
initWithLibrary:path:
defaultPathForAccountWithHostname:username:
_defaultMailAccountForDeliveryIncludingRestricted:
defaultMailAccountForDelivery
_deliveryAccountCreateIfNeeded:
initWithBool:
primaryDeliveryAccountIsDynamic
string
emailAddressesDictionary
receiveEmailAliasAddresses
fromEmailAddressesIncludingDisabled
initWithDouble:
lastEmailAliasesSyncDate
timeIntervalSinceNow
updateEmailAliases
_assignSpecialMailboxToAppropriateIvar:forType:
invalidateAccount:
allLocalMailboxUids
deleteMailboxes:account:
deleteMailbox:
outboxMessageStore:
accountThatMessageIsFrom:
deleteAccount:
_deleteHook
deleteDeliveryAccountIfNeeded
_invalidateAndDeleteAccountData:
_asynchronouslyInvalidateAndDeleteAccountData:
_mailboxPathPrefix
emptyTrash
_synchronizeMailboxListWithFileSystem
invocationWithSelector:target:taskName:priority:canBeCancelled:
deliveryAccountInUseByOtherAccounts:
deliveryAccountAlternates
isStandardizedMailboxUid
_cachedSpecialMailboxOfType:
exchangeObjectAtIndex:withObjectAtIndex:
suggestionsLostMessageSearchTimestamp
suggestionsLostMessageSearchResultCount
_setSpecialMailbox:forType:
_canEmptyMessagesFromMailboxUid:
_emptyFrequencyForKey:defaultValue:
_setEmptyFrequency:forKey:
deleteMessagesFromMailboxUid:olderThanNumberOfDays:
_pathComponentForUidName:
mailboxListingNotificationAreEnabled
_resetSpecialMailboxes
pathComponents
parent
depthFirstEnumerator
_uidNameForPathComponent:
setName:
stringByDeletingLastPathComponent
fileExistsAtPath:
renameMailboxes:to:
stringByDeletingPathExtension
accountRelativePath
_resetAllMailboxURLs:
childWithExtraAttribute:
_childOfMailbox:withComponentName:
scheme
user
mf_hostNilForEmpty
port
accountWithURL:
_URLForInfo:
URLWithString:
infoForURL:
ownsMailboxUidWithURL:
setLastEmailAliasesSyncDate:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
standardAccountClass:valueForKey:
libraryIDForAccount:
createLibraryIDForAccount:
cachePolicy
setDeliveryAccount:
mailboxUidForFileSystemPath:create:
stringByStandardizingPath
_removeAccountFromSortedPaths:
replaceObjectAtIndex:withObject:
mf_insertObject:usingSortFunction:context:allowDuplicates:
_cleanInboxDuplication:
mf_makeDirectoryWithMode:
mailboxCachePath
children
_writeCustomInfoToMailboxCache:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
_specialMailboxIvarOfType:
specialMailboxNameForType:
_setSpecialMailboxName:forType:
_defaultSpecialMailboxNameForType:
accountAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
URLPathAllowedCharacterSet
globalMessageURL
pathRelativeToMailbox:
valueInAccountLookAsidePropertiesForKey:
setValueInAccountLookAsideProperties:forKey:
_setValueInAccountLookAsideProperties:forKey:subKey:
preventArchiveForMailbox:
canArchiveForMailbox:
MCIsManaged
setMailAccountLoadOptions:
lastMailAccountsReloadDate
lastMailAccountsReloadError
setMailAccounts:
purgableAccounts
existingAccountWithType:hostname:username:
resetMailboxTimers
updateAutoFetchSettings
allEmailAddressesIncludingFullUserName:includeReceiveAliases:
accountUsingHeadersFromMessage:
accountThatMessageIsFrom:includingInactive:
allActivePrimaryMailboxUids
setGlobalPathForAccounts:
defaultMailAccountForDeliveryExcludingRestricted
defaultDeliveryAccount
saveStateForAllAccounts
synchronouslyEmptyMailboxUidType:inAccounts:
accountWithURLString:
updateEmailAliasesForActiveAccounts
usernameIsEmailAddress
getConfigurationFromServerForEmail:
_accountWithPath:
setDataclassesConsideredActive:
canMoveMessagesFromAccount:toAccount:
setLastKnownHostname:
setFullUserName:
isPrimaryDeliveryAccountDisabled
setPrimaryDeliveryAccountDisabled:
setDeliveryAccountAlternates:
canUseDeliveryAccount:
setCanUseCarrierDeliveryFallback:
canUseCarrierDeliveryFallback
setDefaultEmailAddress:
setEnabled:forEmailAddress:
pushUpdateForAliasData
setEmailAddresses:
receiveEmailAliasAddressesList
setReceiveEmailAliasAddresses:
fromEmailAddresses
emailAddressesAndAliases
invalidateAndDelete
nowWouldBeAGoodTimeToStartBackgroundSynchronization
forceFetchMailboxList
canAppendMessages
shouldExpungeMessagesOnDelete
isSpecialMailbox:
mailboxesForSuggestionsLostMessageSearchPriorToTime:
transferDisabledMailboxUids
setMailboxUid:forMailboxType:
setEmptyFrequency:forMailboxType:
displayNameForMailboxUid:
canCreateNewMailboxes
canMailboxBeRenamed:
canMailboxBeDeleted:
moveMailbox:intoParent:
renameMailbox:newName:
resetMailboxURLs
setConnectionError:
connectionError
mailboxUidForURL:
transferNotificationSessionToAccount:
systemDidWake
systemWillSleep
canForwardWithoutDownload
supportsSyncingReadState
setCachePolicy:
displayUsername
archiveSentMessages
deleteInPlaceForAllMailboxes
displayNameUsingSpecialNamesForMailboxUid:
persistentNameForMailbox:
loggingIdentifier
_registerPushNotificationPrefix:forMailboxNames:
willPerformActionForChokePoint:coalescePoint:result:
didFinishActionForChokePoint:coalescePoint:withResult:
_mailboxesWereRemovedFromTree:withFileSystemPaths:
setMailboxCachePath:
powerAssertionIdentifierWithPrefix:
_shouldLogDeleteActivity
_readCustomInfoFromMailboxCache:
URLForMessage:
newMailboxWithParent:name:
shouldFetchBodiesWhenMovingToTrash
saveSentFolder
customSignature
setCustomSignature:
archiveDestinationForMailbox:
supportsContinuationType:
supportsFastRemoteBodySearch
_nonPersistentPath
_rootMailboxUid
_inboxMailboxUid
_draftsMailboxUid
_sentMessagesMailboxUid
_trashMailboxUid
_archiveMailboxUid
_junkMailboxUid
_cachedMailboxenLock
_deletionLock
_lastConnectionError
_currentChokedActions
_mailboxCachePath
_messageStoresCache
_cachedLibraryID
_cachedLibraryIDLock
_lastKnownHostname
_supportsFastRemoteBodySearch
mf_indexOfMailboxDictionaryWithName:
initWithContentsOfFile:options:error:
handleFailureInFunction:file:lineNumber:description:
stringByAppendingPathExtension:
fileURLWithPath:
weakReferenceWithObject:
_initWithName:attributes:forAccount:
extraAttributes
_dictionaryRepresentation
retainedReference
specialNameForType:
representedAccount
serverUnreadOnlyOnServerCountForMailbox:
unreadCountForMailbox:
unreadCountForMailbox:matchingCriterion:
statusCountDeltaForMailbox:
mostRecentStatusCountForMailbox:
setMostRecentStatusCount:forMailbox:
_mutableChildren
childEnumeratorIncludingHiddenChildren:
_initWithMailbox:includeHiddenChildren:
numberOfDescendants
isEqualToArray:
URLStringNonNil
fullPathNonNil
sortUsingFunction:context:
reference
topMailbox
rootMailbox
removeChild:
isStandardizedMailboxUidType:
isSentMailboxType:
isOutgoingMailboxType:
ancestralAccount
mailboxIDForURLString:
initWithContentsOfFile:
_loadUserInfo
addToPostOrderTraversal:
unsignedIntegerValue
timeIntervalSinceReferenceDate
fileURLForMailboxURL:
isDraftsMailboxType:
typeIsValidTransferDestination:
displayNameUsingSpecialNames
accountDisplayName
nonDeletedCount
statusCountDelta
updateMostRecentStatusCount:
shouldUseNonDeletedForUnreadCount
hasChildren
childEnumerator
numberOfChildren
childAtIndex:
indexOfChild:
descendantWithExtraAttribute:
sortChildren
isSpecialMailboxUid
isSentMailboxUid
isNotesMailboxUid
realFullPath
pathRelativeToMailboxForDisplay:
oldURLString
compareWithMailboxUid:
indexToInsertChildMailboxUid:
isDescendantOfMailbox:
isVisible
userInfoBoolForKey:
setUserInfoBool:forKey:
userInfoDictionary
setUserInfoWithDictionary:
userInfoForSerialization
isShared
alwaysWriteFullMessageFile
lastViewedMessageID
lastViewedMessageDate
setLastViewedMessageID:
updateSuggestionsLostMessageSearchResultCount:
setExtraAttributes:
_pathComponent
_attributes
_parent
_children
_representedAccount
_realFullPath
_extraAttributes
_pendingLevel
_type
_userInfo
_mailboxes
_index
_includeHidden
stringByReplacingOccurrencesOfString:withString:
newWithMessage:
stripInternalHeaders
setMessageBody:
compositionSpecification
initWithCompositionSpecification:
createMessageWithHtmlString:plainTextAlternative:otherHtmlStringsAndAttachments:charsets:headers:
createMessageWithPlainTextDocumentsAndAttachments:headers:
setDateSentTimeIntervalSince1970:
originalHeaders
removeHeaderForKey:
headersForDelivery
rawData
appendHeaderData:andRecipients:
dataHolderWithData:
addData:
deliverMessageData:toRecipients:
setStatus:
newWithHeaders:mixedContent:textPartsAreHTML:
newWithHeaders:HTML:plainTextAlternative:other:charsets:
deliverMessage:
archiveAccount
setArchiveAccount:
deliveryStatus
deliveryResult
deliverAsynchronously
setCellDataOnly:
archive
setCompositionSpecification:
setIsUserRequested:
_archiveAccount
_result
_headers
_compositionSpecification
_mixedContent
_textPartsAreHTML
_htmlString
_plainTextAlternative
_otherStringsAndAttachments
_charsets
_threaded
_useCellDataOnly
firstSenderAddress
classForMimePart
validatePriority:
headersForMessage:fetchIfNotAvailable:
setPriorityFromHeaders:
setMessageIDHash:
mf_subjectPrefixLength
subjectAndPrefixLength:
setSubject:
mailMessageStore
conversationID
messageIDHeader
setSubject:to:cc:bcc:sender:dateReceived:dateSent:messageIDHash:conversationIDHash:summary:withOptions:
summary
setDateReceivedInterval:
dateSentAsTimeIntervalSince1970
setDateSentInterval:
setConversationHash:
setIsVIP:
setRead:
setFlagged:
setKnownToHaveAttachments:
bestAlternativePart:
contentToOffset:resultOffset:downloadIfNecessary:asHTML:isComplete:
bestAlternativeInPart:
htmlData
writableTypeIdentifiersForItemProvider
forwardedMessagePrefixWithSpacer:
dataMessageStoreToUse
displayablePriorityForPriority:
externalDataTypeIdentifiers
modSequenceNumber
setModSequenceNumber:
subjectNotIncludingReAndFwdPrefix
loadMeetingExternalID
loadMeetingMetadata
numberOfAttachments
shouldSetSummary
bestAlternativePart
shouldUseMailDrop
setShouldUseMailDrop:
_messageFlags
_subjectPrefixLength
_modSequenceNumber
_info
_globalMessageURL
_shouldUseMailDrop
useFlaggedForUnreadCount
unreadCountCriterion
renameOrRemoveDatabaseIfNeeded
initWithDelegate:maxConcurrentBackgroundReaders:
setCacheSize:
_setProtectedDataAvailabilityState:
_schedulePeriodicStatisticsLogging
cancelSuspendTimer
closeDatabaseConnections
startSuspendTimer
searchableIndex
getWriterDB
unlockDB:
postOldFlags:newFlags:forMessage:
beginTransaction:withType:
postFlagsChangedForMessages:flags:oldFlagsByMessage:
removeSearchableItemsForMessages:
updateFlagsForMessages:changes:transformer:
enumerateByteRangesUsingBlock:
references
subjectWithoutPrefix
messageIDsBySubject
setConversationIDHash:
setSender:
setTo:
setCc:
setBcc:
matchMessageReferenceContext:withCandidateMessageReferenceContexts:
conversationIDHash
_insertThreadReferences:toMessageWithLibraryID:usingDatabase:
enumerateIndexesWithBlock:
conversationFlagsRef
isProtectedDataAvailable:
subjectPrefixLength
_addMessageToThreadAtUnlock:
_addThreadingInfoWithContext:usingDatabase:
conversationIDsOfMessagesInSameThreadAsMessageWithLibraryID:messageIDHash:
conversationIdForMessageIds:
removeIndex:
firstIndex
flagsForConversationId:
indexGreaterThanIndex:
setFlags:forConversationId:
library:willAddMessage:
library:didAddMessages:
library:didIndexMessages:
dataHolder
beginTransaction:withType:forMailbox:
messageDataHolderIsComplete:downloadIfNecessary:
_tellMiddlewareWillAddMessage:
copyAddressListForSender
copyAddressListForBcc
copyFirstStringValueForKey:
parseContentTypeHeader:type:subtype:
mf_UUID
mf_messageIDSubstring
referencesFromHeaders:
appendToJournal:mergeUpdateStatement:
setLibraryID:
setReferences:
setMessageIDsBySubject:
setConversationFlagsRef:
setConversationID:
notifyConversation:hasMergedIntoConversation:
addReferenceForContext:usingDatabase:mergeHandler:
partName
isComplete
_writeEmlxFile:withBodyData:protectionClass:
_libraryMessageWithLibraryID:wasCached:
setGenerationNumber:
sendersIfCached
toIfCached
ccIfCached
bccIfCached
setMessageInfo:to:cc:bcc:sender:dateReceivedTimeIntervalSince1970:dateSentTimeIntervalSince1970:messageIDHash:conversationID:summary:
setContentType:
setExternalID:
setMessageIDHeader:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
moveItemAtPath:toPath:error:
rollbackTransaction:
commitTransaction:
_tellMiddlewareDidAddMessages:
setSenderList:
setToList:
setCcList:
setBccList:
iterateStatement:db:withProgressMonitor:andRowHandler:context:
newMessagesAvailable:
sendMessagesForStatement:db:to:options:timestamp:
sendMessagesMatchingCriterion:to:options:baseTable:
messages
getReaderDB
_firstDateForQuery:inMailbox:
queryForCriterion:db:options:
queryForCriterion:db:options:baseTable:
setExpressionIsSanitized:
_integerForQuery:withTextArgument:
countMessagesMatchingCriterion:groupBy:
queryForCriterion:db:options:baseTable:isSubquery:
_libraryIDForOldestKnownMessageInMailbox:
_computeUnreadCountForMailboxes:
unreadCountForAggregatedMailboxes:matchingCriterion:
unreadCountForAggregatedMailboxes:
_flaggedCountForAggregatedMailboxes:
_attachmentCountForAggregatedMailboxes:
_includesMeCountForAggregatedMailboxes:
includeRelatedMessages
countOfRelatedMessagesMatchingCriterion:forConversationsContainingMessagesMatchingCriterion:forMailboxCriterion:
anyObject
_queryForMailboxesIDsFromMailboxes:
flaggedCountForMailbox:
attachmentCountForMailbox:
includesMeCountForMailbox:
nonDeletedCountForAggregatedMailboxes:includeServerSearchResults:includeThreadSearchResults:
_messageForStatement:options:timestamp:isProtectedDataAvailable:
_canSelectMessagesWithOptions:db:
copyMessages
getDetailsForMessagesWithRemoteIDInRange:fromMailbox:
_copyReferenceHashesWithoutMessagesForMessageWithConversation:
_getReferencesForHashesWithOwners:
containsIndex:
remoteStoreForMessage:
canFetchMessageIDs
fetchMessagesWithMessageIDs:andSetFlags:
stringForQuery:monitor:
unsignedLongValue
pathForMailboxURL:
mailboxURLForMessage:
mf_addObjectIfAbsent:
_notifyDidCompact:messages:mailboxes:
writersWaiting
cleanupProtectedTables
sortUsingSelector:
removeSearchableItemsForAccount:mailboxID:
getDetailsForAllMessagesFromMailbox:
removeSearchableItemsForMailbox:
URLByAppendingPathComponent:
lastPathComponent
mf_prefixToString:
dataPathForMessage:type:
attachmentsDirectoryURLForMessage:inMailboxFileURL:
mf_sizeForDirectoryAtURL:error:
initWithLibrary:message:part:partial:incomplete:compressionQueue:
cStringUsingEncoding:
_setMessageData:libraryID:part:partial:complete:
_setMessageDataString:forKey:forMessage:
initWithBytes:length:
unarchiveObjectWithData:
loadData:forMessage:usingBlock:
bodyDataAtPath:headerData:
headerDataAtPath:
dataWithContentsOfFile:options:error:
equalToMailboxIDsFromCriterion:
_activeAccountsClause
queryForCriterion:db:options:baseTable:isSubquery:range:
sendMessagesMatchingQuery:db:to:options:
sendMessagesMatchingCriterion:to:options:baseTable:range:success:
handleMessage:
iterateMessagesMatchingCriterion:withResultHandler:options:withMonitor:
sendMessagesMatchingCriterion:to:options:range:
sendMessagesMatchingCriterion:to:options:
removeSearchableItemsForAccount:
_mailboxesClauseForAccounts:
setRowid:
hasRowid
rowid
initWithBytesNoCopy:length:freeWhenDone:
_indexSetOfMessagesDeleted
removeSearchableItemsWithLibraryIDs:
enumerateObjectsUsingBlock:
setStart:
setProtectedDataAvailable:
setMessages:
setMessageData:
setMessagesDeleted:
setMessageDataDeleted:
setMessagesMarkedAsJournaled:
setMailboxesNeedingReconcilication:
setProtectedMessages:
setProtectedMessageData:
_collectStatistics_nts
protectedDataAvailable
duration
messagesMarkedAsJournaled
protectedMessages
messageData
protectedMessageData
messagesDeleted
messageDataDeleted
mailboxesNeedingReconcilication
_logStatistics
_handleJournalMergeFailure
_deleteJournaledEntries
_activeConnectionWithDB:
isProtectedDatabaseAttached
_canAccessProtectedData
_reconcileAfterKeybagUnlock
initWithName:
_reconcileJournal
minusSet:
setBasePath:
setDatabaseName:
setProtectedDatabaseName:
initWithConfiguration:
_handleSQLiteErrorCode:db:
migrateWithSQLiteConnection:
_handleFailedMigration
performSpotlightReindexIfNeededWithHandler:
performIncrementalVacuumForSchema:
_setActiveJournal:
beginTransactionWithType:
_activeJournal
commitTransaction
_handleJournalWriteFailure
scheduleIncrementalVacuum
rollbackTransaction
_performTransaction:forWriting:
_connectionForWriting:
_activeConnectionWrapper
connection
writerConnection
readerConnection
backgroundReaderConnection
_setActiveConnection:forWriting:
attachProtectedDatabase
writer
incrementRefcount
decrementRefcount
detachProtectedDatabase
setInvalid:
checkInConnection:
pool
wrapperWithConnection:forWriting:
_activeConnection
preparedStatementForPattern:
_handleCorruptDatabase
_handleFullDatabase
_handleProtectedDataIOError
_handleInvalidDatabaseIOError
_handleDetachedDatabaseIOError
_handleIOError
_handleBusyError
removeLibraryOnNextLaunch
_removeLibrary:atPath:
removeItemAtPath:error:
globalAsyncSchedulerWithQualityOfService:
performBlock:
mf_uniqueFilenameWithRespectToFilenames:
_purgeSpotlightTombstonesBeforeTransaction:database:
_assignTransaction:messageIndexingState:forLibraryIDIndexSet:missingLibraryIDIndexSet:database:
_stringsForIndexSet:
_assignTransaction:forSpotlightTombstones:type:database:
_assignTransaction:messageIndexingState:forLibraryIDs:missingLibraryIDIndexSet:database:
mf_mapSelector:
_tellMiddleWareDidIndexMessages:
enumerateRangesUsingBlock:
_prepareBatchStatement:pattern:objects:count:
mf_enumerateObjectsInBatchesOfSize:block:
stringWithString:
initWithIndexSet:
lastIndex
getIndexes:maxCount:inIndexRange:
_prepareBatchStatement:pattern:libraryIDs:batchSize:
indexSetWithIndexesInRange:
removeIndexes:
setTransmogrifier:
_nonLocalAccountsClause
_searchableItemIndexesForDb:indexingType:nonLocalAccountsClause:protectedDataAvailable:whereClause:limit:
addSpotlightTombstones:type:
_resetTransactionIndexForAccount:mailboxID:
objectForKey:wasCached:
setDateReceivedTimeIntervalSince1970:
setListIDHash:
setDefaultInstance:
removeLibraryAtPath:
verificationDataSamplesForSearchableIndex:
newConnectionForConnectionPool:
invalidateAndWait
setFlagsForMessages:mask:
updateFlagsForMessagesInPlace:success:
notifyNewDataAvailableForMessages:
removeMiddleware:
countMessagesMatchingCriterion:
messagesWithoutSummariesForMailbox:
orderedBatchOfMessagesEndingAtRowId:limit:success:
recomputeUnreadCountForMailboxWithURL:
deletedCountForMailbox:
attachmentCountForMailboxes:
nonDeletedCountForAggregatedMailboxes:
indexedCountForMailbox:limit:
setServerUnreadOnlyOnServerCount:forMailbox:
setLastSyncAndMostRecentStatusCount:forMailbox:
oldestMessageInMailbox:
maximumRemoteIDForMailbox:
canProvideMinimumRemoteID
minimumRemoteIDForMailbox:
sequenceIdentifierForMessagesWithRemoteIDs:inMailbox:
setSequenceIdentifier:forMessageWithLibraryID:
setSequenceIdentifier:forMessagesWithRemoteIDs:inMailbox:
getDetailsForMessages:absoluteBottom:topOfDesiredRange:range:fromMailbox:
messagesWithMessageIDHeader:
mailboxLocationOfMessageID:usingDatabase:
missingReferencesForConversationContainingMessage:
countOfMessagesMissingFromThreadContainingMessage:
loadMoreMessagesForThreadContainingMessage:hasNoMoreMessages:
stringForQuery:
mailboxURLsForIDs:
syncedConversations
setConversationInfo:syncKey:flags:
messageIdsForConversationId:limit:
storedIntegerPropertyWithName:
setStoredIntegerPropertyWithName:value:
compactMessages:permanently:
vacuumDataForObsoleteAccountURLString:
messageWithMessageID:inMailbox:
attachmentsDirectoryURLForMessage:
deleteAttachmentsForMessage:inMailboxFileURL:
dataConsumerForMessage:
metadataForMessage:
bodyDataForMessage:
queryForCriterion:db:options:range:
sendMessagesMatchingCriterion:to:options:baseTable:range:
iterateMessagesMatchingCriterion:options:handler:
messagesMatchingCriterion:options:range:success:
messagesMatchingCriterion:options:success:
rebuildActiveAccountsClauseWithAccounts:
appendOfflineCacheOperation:forAccount:lastTemporaryID:
markOfflineCacheOperationAsComplete:
offlineCacheOperationsForAccount:lastTemporaryID:
appendOfflineCacheReplayData:forAccountID:
consumeOfflineCacheReplayDataForAccount:usingBlock:
deleteOfflineCacheDataForAccount:
deletePOPUID:inMailbox:
UIDsToDeleteInMailbox:
deletedUIDsInMailbox:
allUIDsInMailbox:
hiddenPOPUIDsInMailbox:
protectedDataAvailability
checkDatabaseConsistency
reconcileJournalOnStartup
migrate
withReaderDB:
_handleProtectedDataInconsistencies
renameOrRemoveDatabase
pruneConversationTables:
setMailboxPathProvider:
allMailboxURLStrings
_libraryMessageCache
setSearchableIndex:
_connectionPool
_mailboxCache
_statsQueue
_mailboxPathProvider
_migrator
_threadLocalHandleKey
_threadLocalJournalKey
_activeAccountClause
_nonLocalAccountClause
_protectedDataAvailability
_keyBagQueue
_messagesToThreadAtUnlock
_suspendTimer
_lastStats
_compressionQueue
_searchableIndex
_protectedDataAvailable
_messages
_protectedMessages
_messageData
_protectedMessageData
_messagesDeleted
_messageDataDeleted
_messagesMarkedAsJournaled
_mailboxesNeedingReconcilication
_start
_duration
initWithConnection:forWriting:
callStackReturnAddresses
refcount
invalid
_stack
_writer
_invalid
_connection
_refcount
transmogrifier
_transmogrifier
beginResult:
setResultSubject:
setResultSender:
setResultDateRecieved:
setResultUnread:
endResult
setResultSummary:
filter
_block
_cancelled
pathForStorage
addFile:
_consumer
_part
_partial
_incomplete
filterMessageWithStatement:
initWithMailboxes:
isAllowedToAccessProtectedData
mf_deleteFilesInSortedArray:matchingPrefix:fromDirectory:
mf_indexOfObject:usingSortFunction:context:
attributesOfFileSystemForPath:error:
mf_dictionaryWithMessagesSortedByStore
mf_enumerateByStoreUsingBlock:
resultCode
transferedMessages
failedMessages
_resultCode
_failedMessages
_transferedMessages
createEmptyStoreIfNeededForPath:
distantPast
serverMessageCount
storeSearchResultMatchingCriterion:limit:offset:error:
_defaultRouterDestination
replaceObjectsInRange:withObjectsFromArray:
appendMessages:unsuccessfulOnes:newMessageIDs:newMessages:
appendMessages:unsuccessfulOnes:newMessageIDs:
_updateFlagForMessage:key:value:
retainAssertionWithIdentifier:withAccount:
releaseAssertionWithIdentifier:
fetchMobileSynchronously:preservingUID:options:
_flushAllMessageData
_setOrGetBody:forMessage:updateFlags:
calculateAttachmentInfoFromBody:
_setFlagsForMessages:
_shouldChangeComponentMessageFlagsForMessage:
_shouldChangeComponentMessageFlags
copyMessages:toMailbox:markAsRead:deleteOriginals:isDeletion:
headersClass
openAsynchronously
cancelOpen
storePathRelativeToAccount
isReadOnly
isDrafts
structureDidChange
deletedCount:andSize:
serverUnreadCount
serverNonDeletedCount
copyOfMessagesInRange:
copyMessagesMatchingText:
remoteIDsFromUniqueRemoteIDs:
fetchMessagesWithRemoteIDs:andSetFlags:
finishRoutingMessages:routed:
undeleteMessages:
messagesWereDeleted:
lastViewedMessageWithOptions:
uniqueRemoteIDsForMessages:
headerDataForMessage:downloadIfNecessary:
hasCachedDataForMimePart:
setFlagsCancelled:forMessages:
setFlagForAllMessages:state:
fetchMobileSynchronously:
setPreferredEncoding:forMessage:
shouldDeleteInPlace
shouldArchive
archiveDestination
_rebuildTableOfContentsSynchronously
messageIdRollCall:
_state
_mailboxUid
_deletedMessagesSize
_deletedMessageCount
_unreadMessageCount
_generationNumber
_lastFetchCount
_openMonitor
mf_stringFromMimeRichTextString:asHTML:
initWithMimePart:htmlData:encoding:
mf_stringFromMimeEnrichedString:asHTML:
copyBodyDataToOffset:resultOffset:downloadIfNecessary:isComplete:
textEncoding
htmlContentToOffset:resultOffset:downloadIfNecessary:
mf_dataUsingEncoding:
setVisuallyEmpty:
fileWrapperForcingDownload:
attachmentFilename
setPreferredFilename:
preferredFilename
setFilename:
configureFileWrapper:
fileWrapper
fileWrapperForDecodedObject:withFileData:
bodyParameterForKey:
setURL:
isPlaceholder
regularFileContents
fileAttributes
isRecognizedClassForContent:
initWithMimePart:
_shouldContinueDecodingProcess
attachmentClass
decodeTextRichtext
decodeTextEnriched
decodeTextHtml
htmlContentToOffset:resultOffset:
htmlContent
decodeTextPlain
decodeTextCalendar
decodeMultipartAppledouble
storeData:inMessage:isComplete:
decodeText
messageWithRFC822Data:withParentPart:
messageURL
setMessageURL:
initWithMessageData:parentPart:
allManagers
addProvider:forBaseURL:
contentToOffset:resultOffset:asHTML:isComplete:
decodeMessageDelivery_status
decodeMessageRfc822
decodeMessagePartial
decodeMessageExternal_body
hasBeenDownloaded
isOnWWAN
_displayedMimePart
approximateRawSize
shouldDownloadAttachmentOnDisplay
numberOfArguments
mf_performOnewaySelectorInMainThread:withObject:withObject:
criteriaFromDefaultsArray:removingRecognizedKeys:
initWithDictionary:andRemoveRecognizedKeysIfMutable:
setExpression:
setQualifier:
initWithCriterion:expression:
messageRuleQualifierForString:
includeRemoteBodyContent
descriptionWithDepth:
_qualifierString
dictionaryWithCapacity:
criterionTypeForString:
stringForCriterionType:
stringForMessageRuleQualifier:
mf_commaSeparatedString
uniqueHeaderKeyStringForString:
doesMessageSatisfyCriterion:
_headersRequiredForEvaluation
copyHeadersForKey:
isStructuredHeaderKey:
mf_flatMap:
_evaluatePartOfStructure:
firstSender
localizedCaseInsensitiveCompare:
rangeOfString:options:range:locale:
mimePart
_evaluateCompoundCriterion:
_evaluateFlagCriterion:
_evaluateAddressBookCriterion:
_evaluateHeaderCriterion:
_evaluateSenderHeaderCriterion:
_evaluateAccountCriterion:
_evaluateDateCriterion:
_evaluateAddressHistoryCriterion:
_evaluateFullNameCriterion:
_evaluateIsDigitallySignedCriterion:
_evaluateIsEncryptedCriterion:
_evaluatePriorityIsNormalCriterion:
_evaluatePriorityIsHighCriterion:
_evaluatePriorityIsLowCriterion:
_evaluateAttachmentCriterion:
_evaluateConversationIDCriterion:
_evaluateMailboxCriterion:
simplifyOnce
criterionForMailbox:
notCriterionWithCriterion:
criterionForConversationID:
setUseFlaggedForUnreadCount:
expressionForDate:
criteriaFromDefaultsArray:
defaultsArrayFromCriteria:
_updateAddressComments:
criterionForAccount:
criterionExcludingMailboxes:
messageIsJournaledCriterion:
criterionForNotDeletedConversationID:
criterionForLibraryID:
VIPSenderMessageCriterion
threadNotifyMessageCriterion
threadMuteMessageCriterion
flaggedMessageCriterion
readMessageCriterion
includesMeCriterion
toMeCriterion
ccMeCriterion
hasAttachmentsCriterion
todayMessageCriterion
criterionForDateReceivedOlderThanDate:
dateFromExpression
isVIPCriterion
preferFullTextSearch
setPreferFullTextSearch:
setIncludeRelatedMessages:
setIncludeRemoteBodyContent:
_criterionIdentifier
_qualifier
_name
_uniqueId
_expression
_criteria
_dateUnitType
_allCriteriaMustBeSatisfied
_dateIsRelative
_includeRelatedMessages
_requiredHeaders
_preferFullTextSearch
_useFlaggedForUnreadCount
_expressionIsSanitized
_includeRemoteBodyContent
_libraryIdentifiers
stringWithCapacity:
decodeValueOfObjCType:at:
encodeValueOfObjCType:at:
realFlags
initFileURLWithPath:
synchronize
initWithLibrary:
flagsChangedForMessages:flags:oldFlagsByMessage:
libraryExists
isBusy
lockDBForWriting
addMessages:withMailbox:fetchBodies:newMessagesByOldMessage:
setFlagsForMessages:
dataProvider
_attachmentDataProvider
initWithData:
setDataHolder:
_dataHolder
_complete
_partName
bundleWithIdentifier:
mf_copyUncommentedAddress
newTrustManager
actionForSMIMETrust:sender:
initWithObjects:count:
addSMIMETrust:sender:
removeSMIMETrust:sender:
_hasExceptionsForSMIMETrust:sender:
initWithSender:trust:verification:
commonName
action
certificates
copyTrust
addTrustException
removeTrustException
hasTrustException
sender
_trust
_sender
_uncommentedSender
senderAddressComment
reason
null
subtype
subparts
disposition
isSubclassOfClass:
createMessageWithString:headers:
createMessageWithHtmlString:plainTextAlternative:otherHtmlStringsAndAttachments:headers:
createMessageWithHtmlString:attachments:headers:
allows8BitMimeParts
setAllows8BitMimeParts:
allowsBinaryMimeParts
setAllowsBinaryMimeParts:
allowsQuotedPrintable
setWriteSizeDispositionParameter:
setMessageClassToInstantiate:
shouldWriteAttachmentPlaceholders
setShouldWriteAttachmentPlaceholders:
_messageClassToInstantiate
_allows8BitMimeParts
_allowsBinaryMimeParts
_writeSizeDispositionParameter
_allowsQuotedPrintable
_shouldWriteAttachmentPlaceholders
isLastCharacterNewLine
_rawData
_count
_lastNewLine
dataWithCapacity:
mf_makeImmutable
mutableHeaders
messageBodyIfAvailable
setMutableHeaders:
_messageBody
_messageHeaders
mf_bestMimeCharsetUsingHint:
encoding
charsetForEncoding:
mf_bestMimeCharsetForMessageDeliveryUsingSubtype:
charsetName
isImageFile
isSymbolicLink
symbolicLinkDestination
isRegularFile
mimeType
messageWriter:willGenerateHeadersForMimePart:
bodyParameterKeys
dataUsingEncoding:allowLossyConversion:
mf_appendRFC2231CompliantValue:forKey:
dispositionParameterKeys
dispositionParameterForKey:
contentDescription
languages
contentLocation
messageWriter:willEncodeHeaders:forMimePart:
insertString:atIndex:
fileName
mailDropMetadata
flags
fetchPlaceholderData
fetchDataSynchronously:stripPrivateMetadata:
setFileName:
setStandardLineBreak
setAllowSlash:
setPadChar:
mf_lossyDefaultCStringBytes
newSignedPartWithData:sender:compositionSpecification:signatureData:
newEncryptedPartWithData:compositionSpecification:encryptedData:
mf_messageIDStringWithDomainHint:
versionString
isReadableText
mf_dataByConvertingUnixNewlinesToNetwork
setForTextPart:
accountClassForPersistentAccount:error:
_accountClassStringWithPersistentAccount:error:
_accountClassForString:error:
loadBundleForAccountClassString:error:
_bundlePathForAccountClassString:
bundleWithPath:
loadAndReturnError:
bundlePath
accountWithPersistentAccount:error:
accountWithAccountTypeIdentifier:error:
setPersistentStore:
_accountsStoreChanged:
accountTypeWithAccountTypeIdentifier:
initWithAccountType:
accountsWithAccountTypeIdentifiers:completion:
_shouldUpdateAccountsInPlace
_accountWithPersistentAccount:useExisting:
_accountWithAccountClass:persistentAccount:useExisting:
isDirty
saveVerifiedAccount:withCompletionHandler:
removeAccount:withCompletionHandler:
_accountStoreLock
_accountStore
observableObserver
initWithBundleIDs:states:
applicationStateForApplication:
_updateApplicationState:observer:
setHandler:
distinctUntilChanged
map:
observerDidReceiveResult:
appStateObservable
.cxx_destruct
_appState
_appStateMonitor
_observable
isMailDrop
metadataForAttachment:forKey:
setMetadataForAttachment:toValue:forKey:
filterWithConsumer:
isDataAvailableLocally
isContainedInRFC822
fetchDataForAttachment:
downloadProgress
fetchLocalData:stripPrivateMetadata:
isContainedInCompose
promise
_dataProvider
fetchDataForAttachment:consumer:progress:completion:
result:
readFromDisk
filterData:
fileURL
fetchCompletionBlock
finishWithResult:error:
setFetchCompletionBlock:
fetchDataSynchronouslyForAttachment:
isPlaceholderSerializedRepresentation:
placeholderFromSerializedRepresentation:
dataForPlaceholder:
setPlaceholder:
cancelFetchForAttachment:
placeholder
fetchDataSynchronously:
temporaryFileURLWithFileName:
directUrl
rawDataForContentID:
rangedFilterWithConsumer:range:
serializedRepresentation
placeholdersAvailable
setMailDropMetadata:
encodedFileSize
progressWithTotalUnitCount:
setCompletedUnitCount:
pause
setDownloadProgress:
fileURLWithPath:isDirectory:
contentTypeConformsToEventVCS
filterVCSData:
rangeOfData:options:range:
replaceBytesInRange:withBytes:length:
isInvalid
isExpired
isCached
_dataProviderForAttachmentURL:error:
dataProviderWithURL:
exists
messageForAttachment:
currentDownloadLimit
mf_stringForMimeTypeFromFileName:
fileNameByStrippingZipIfNeeded:
_filePathForAttachment:
_fileUTTypeForFileName:
_contentIDForAttachment:
setContentID:forAttachment:
fileSize
sizeOnDisk
decodedFileSize
numberWithUnsignedLong:
valueForKey:
attachmentManager
compressionQueue
isReadableFileAtPath:
textEncodingGuessWithData:
fileUTType
contentTypeConformsToEventICS
conformsToType:
initWithURL:attachmentManager:
decodeFilterWithDataConsumer:
fetchData
fetchLocalData
fetchDataToURL:
isMailDropPhotoArchive
setIsPlaceholder:
updateProgressWithCurrentBytes:
resetProgress
filterICSData:
isAvailable
shouldAutoDownload
inferredMimeType
remoteImageFileName
setRemoteImageFileName:
attachmentContentTypeForFileName:
setMimeType:
setDecodedFileSize:
setEncodedFileSize:
writeToDiskWithData:
textEncodingNameForData:mimeType:
contentTypeConformsToVCard
contentTypeConformsToEvent
contentTypeConformsToProvisionment
contentTypeConformsToMarkup
contentTypeConformsToPassbook
contentTypeConformsToIWork
setUrl:
setPart:
isAutoArchive
customConsumer
setCustomConsumer:
wantsCompletionBlockOffMainThread
setWantsCompletionBlockOffMainThread:
setAttachmentManager:
lastProgressBytes
setLastProgressBytes:
lastProgressTime
setLastProgressTime:
_attachmentManager
_isDataAvailableLocally
_placeholder
_downloadProgress
_isAutoArchive
_wantsCompletionBlockOffMainThread
_url
_disposition
_fetchCompletionBlock
_customConsumer
_lastProgressBytes
_lastProgressTime
capabilitiesDictionary
_limitMailDropOverCellular
mailDropAvailableForAccount:
_mailDropLimit
mailDropAvailable
aa_primaryAppleAccount
_isMailDropDevice
mailDropConfigured
mailDropPreferences
currentUploadLimit
currentMessageLimit
mailDropThreshold
currentPlaceholderThreshold
attachmentCapabilities
currentUploadLimitForAccount:
mailDropExpiration
mailDropWhitelistedDownloadDomains
attachmentDownloadQueue
addDataConsumer:
initWithMainConsumer:
totalUnitCount
_callProgressBlockForAttachmentURL:withBytes:expectedSize:
mf_observeKeyPath:options:usingBlock:
_fetchCompletedForAttachment:error:
_fetchInvocationCallUsingBlock:
setPowerAssertionId:
_queueForAttachment:
attachmentForURL:error:
addData:forContentID:
initWithData:forContentID:
sharedMappings
MIMETypeForExtension:
attachmentForCID:
attachmentForData:mimeType:fileName:contentID:context:
removeDataForAttachment:
_composeAttachmentDataProviderForContext:
recordPasteboardDataForAttachments:
recordUndoDataForAttachments:
_fetchDataForAttachment:withProvider:syncLock:
attachmentsForContext:
loadAttachmentURL:forContextID:
updateAttachment:withNewData:
removeAttachmentForURL:
recordPasteboardAttachmentsForURLs:forContextID:
recordUndoAttachmentsForURLs:forContextID:
_defaultDownloadQueue
_composeAttachmentURLs
clearMetadataForAttachment:
attachmentsBaseURL
removeProviderForBaseURL:
initWithContextID:
contextID
setAttachmentsBaseURL:
_contextID
_attachmentsBaseURL
initWithURL:
isFileURL
_isFileURL
_fileAttributes:
dataProviderWithPath:
errorWithMessage:code:
save:
setMessageLibrary:
mf_lastPartNumber
partWithNumber:
initWithConsumers:expectedSize:
dataForMimePart:inRange:withConsumer:downloadIfNecessary:
mf_rowID
messageLibrary
fetchLocalDataForAttachment:
storageLocationForAttachment:withMessage:
_messageLibrary
_messageAttachmentStorageLocationsDidChangeNotification:
partURL
attachmentForURL:withMimeBody:error:
initWithPrimaryLibrary:
attachmentsForMessage:withSchemes:
mf_isValidAttachmentURL
storagePath
mf_partNumbers
URLByDeletingLastPathComponent
_setupAttachment:withMimeBody:error:
componentsWithURL:resolvingAgainstBaseURL:
setQuery:
attachmentForContentID:preferredSchemes:
tryLockWhenCondition:
mf_partition:
removeObjectIdenticalTo:
supportedDocumentUTIs
removeProvider:
imageScalingQueue
attachmentsForURLs:error:
attachmentForTextAttachment:error:
attachmentForContentID:
_arrayAccessQueue
_providers
_attachments
_metaDataLock
_imageScalingQueue
fileURLString
useMailDrop
placeholderDirectory
securityScopedURL:
startReadAccess
isFileBundleURL:
cloneFileAtURL:toPlaceholderURL:
writeData:forURL:
dataForFileBundleURL:
_localStoreURLForFileData:contentID:
subdataWithRange:
_setJSONDictionary:
_placeholderMagic
dataWithData:
UUID
UUIDString
_localStoreURLForFileURL:contentID:
getResourceValue:forKey:error:
setFileSize:
setFileURLString:
placeholderForFileURL:mimeType:contentID:
securityScopedURL:withToken:
futureWithResult:
completionHandlerAdapter
securityScopeForPlaceholderURL:completionBlock:
then:
copyItemAtURL:toURL:error:
setAttributes:ofItemAtPath:error:
removePlaceholderForFileURL:
initFileURLWithPath:isDirectory:
mf_canonicalizedAbsolutePath
hasPlaceholderRepresentation:
placeholderRepresentations:
placeholderForData:fileName:mimeType:contentID:
placeholderForMediaURL:mimeType:contentID:
removePlaceholder:
removePlaceholderForContentID:
serializedPlaceholderForFileName:fileSize:mimeType:contentID:
serializedPlaceholderForData:fileName:mimeType:contentID:
serializedPlaceholderForURL:mimeType:contentID:
setUseMailDrop:
_jsonDictionary
attachmentData:fileName:mimeType:contentID:
attachmentData:fileName:mimeType:
_fileName
_mimeType
_contentID
processInfo
globallyUniqueString
temporaryDirectory
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
_temporaryDirectoryUniqueURL
temporaryFileURLWithExtension:
mimeTypeForFileName:
isBundle
archiveDirectory
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
_stripBundlePath:entryPath:
initWithContents:path:
setArchiveEntry:
contents
compressContents:completion:
resultWithTimeout:error:
initWithSecurityScopedURL:withToken:
stopAccess
_attachSecurityScope
startAccessingSecurityScopedResource
coordinateWritingItemAtURL:options:error:byAccessor:
isWritableFileAtPath:
checkPromisedItemIsReachableAndReturnError:
_temporaryReadURL:error:
coordinateReadingItemAtURL:options:error:byAccessor:
linkItemAtURL:toURL:error:
stopAccessingSecurityScopedResource
_removeTemporaryReadURL
securityScopeToken
startWriteAccess
_fileCoordinator
_securityScopedURL
_securityScopeToken
_secureReadURL
_securedRead
_secureWriteURL
_securedWrite
setPredictor:
setCache:
setCacheKeysByProperty:
_cacheKeyForMessages:
cache
predictor
predictMailboxIDsForMessages:limit:diagnostics:
_propertyKeysForMessage:
_trackCacheKey:forPropertyKey:
cacheKeysByProperty
listIDHash
toAddressList
initWithPredictor:
invalidatePredictionsAffectedByMessages:
removeAllPredictions
_predictor
_cache
_cacheKeysByProperty
isEqualToData:
dataForContentID:
_dataForAttachment:
_attachmentsData
_attachmentsPlaceholderData
_attachmentsPasteboardData
_attachmentsUndoData
mf_decodeFailedErrorWithUserInfo:
content
initWithObserver:queue:
setTimeStyle:
setDateStyle:
dateWithTimeIntervalSinceReferenceDate:
observer
queue
_observerReference
folderId
initWithStatusCode:error:folderID:folderName:
folderChange:finishedWithStatus:error:
_folderName
_statusCode
setRenameOnCollision:
setFolderName:
setParentFolderID:
setDataclass:
initWithDisplayName:parentFolderID:temporaryFolderID:
_parentFolderID
_temporaryFolderID
initWithFolderID:
parentFolderId
initWithFolderID:newParentFolderID:newDisplayName:
_newParentFolderID
_newDisplayName
changeType
initWithMailMessage:clientID:
replyTo
clientID
setClientID:
bodyType
_clientID
initWithRequestType:message:send:
initWithMessageIDHeader:mailbox:
_messageIDHeader
sourceID
destID
resultsForMessageMove:
_messagesIDs
_newRemoteIDsByMessageID
_failures
initWithUnsignedLongLong:
replaceTransferFailureSnapshotTemporaryID:withTemporaryID:
setTranslatedID:forTemporaryID:
initWithOriginalRemoteID:mailboxID:messageFlags:
setTransferFailureSnapshot:forTemporaryID:
originalMessageFlags
_sourceRemoteIDs
_originalFlags
_temporaryRemoteIDs
_sourceMailboxID
_destinationMailboxID
deleteOfflineCacheData
_lastSelectedFolderID
setSelectedMailboxID:
_success
_serverId
setMimeBody:
initWithDecryptedMessage:
bytesSent
isWifi
setIsWifi:
_isWifi
_bytesSent
mf_setDecoder:forDomain:
initWithDomain:code:userInfo:
mf_moreInfo
mf_shortDescription
recoveryAttempter
setMoreInfo:
useGenericDescription:
_moreUserInfo
mf_isSMIMEError
mf_shouldBeReportedToUser
mf_shouldFailDownload
initWithURL:rootMailboxUid:
host
setUnreadCount:forMailbox:
_nameForMailboxUid:
minID
setCachedConnection:
connectionForStore:delegate:options:
flagChangesForMailboxPath:UID:connectTime:
flagChangesLock
_URL
_cachedConnection
_flagChangesLock
_deliveryAccount
initWithAccount:URLString:fullPath:isSpecial:
setFakeURLString:
setFakeFullPath:
setFakeIsSpecialMailboxUid:
fakeURLString
fakeFullPath
fakeIsSpecialMailboxUid
initWithAccount:URLString:fullPath:
_fakeIsSpecialMailboxUid
_fakeFullPath
_fakeURLString
setHeaders:
fetchMinBytes
setFetchMinBytes:
minBytesLeft
setMinBytesLeft:
_fetchMinBytes
_fetchMaxBytes
_minBytesLeft
unregisterBlocks
readerBlock
writerBlock
outputData
rangeOfCentralDirectoryInData:
_compressionArchive
_compressContents:withArchive:error:
_errorForArchiveStatus:
_compressContents:error:
setContents:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
initWithDirectoryPath:
archiveEntries
isDirectory
_archiveDirectoryName:withArchive:error:
_compressContents:fileName:withArchive:error:
_compressionCompleteForArchive:error:
_compressionArchiveEntryWithName:length:isDirectory:
_decompressionArchive
_decompressArchive:intoArchiveDirectory:error:
_decompressionCompleteForArchive:error:
_decompressContents:inMemoryWithError:mainEntry:
registerBlocks:writer:
compressFolder:error:
_compressWithArchive:error:
decompressContents:completion:
inputData
setInputData:
inputRange
setInputRange:
setOutputData:
setReaderBlock:
setWriterBlock:
_inputData
_outputData
_readerBlock
_writerBlock
_inputRange
inputWithData:
_rangeOfCentralDirectory:
_centralDirectory:
_entriesFromCentralDictionary:inData:archiveData:
_centralHeader:
archiveEntryWithCentralHeader:archiveData:
_scrubContentDirectory
indexOfObjectPassingTest:
uncompressedSize
merge:
_hasZipSignature:
inputWithURL:
mainEntry
setMainEntry:
scrubbedArchiveEntries
_entries
_scrubbedEntries
_mainEntry
_contents
archiveEntry
setUncompressedSize:
setIsDeflated:
setCompressedRange:
compressedRange
isDeflated
_inflateError:
inflateWithWriter:
compressedSize
inflate
setIsDirectory:
_isDeflated
_isDirectory
_uncompressedSize
_compressedRange
setUserProfileProvider:
setMailboxIDCache:
setParameters:
initWithUserProfileProvider:libraryAdapter:
_mergeDefaultParameters:withParameters:
setDebugLog:
debugLog
_modeParameterIs:
_predictionsForMessage:limit:
parameters
_summedWeightedPredictionsForMessage:limit:
_orderedModePredictionForMessage:
_weightedModePredictionsForMessage:
_countsForField:message:
_topHitFromMailboxDictionary:message:
_removeSpecialMailboxesInCounts:message:
_conversationIDCountsForMessage:
_senderCountsForMessage:
_recipientCountsForMessage:
_listIDCountsForMessage:
_limitToRecents
countMessagesMatchingQuery:variable:groupBy:
mf_isLegalEmailAddress
_allowedRecipientsForMessage:
mailboxIDCache
mailboxesMatchingQuery:variable:
_userCreatedMailboxIDs
removeObjectsForKeys:
_normalizedTermFrequencyTopHitFromDictionary:withThreshold:
_topHitFromMailboxDictionary:
sortedArrayUsingSelector:
_objectWithMeasure:timesHigherThanFollowUpInMeasures:
userProfileProvider
allEmailAddresses
_isAllowedRecipient:
ccAddressList
initWithUserProfileProvider:libraryAdapter:parameters:
_userProfileProvider
_parameters
_mailboxIDCache
_debugLog
copyFormattedHeaderValueFromAddressList:
basicHeaders
headersForKey:
_capitalizedKeyForKey:
appendHeaderMarkupForKey:value:toString:
localizedHeaders
localizedHeadersFromEnglishHeaders:
englishHeadersFromLocalizedHeaders:
markupString
mf_stringByLocalizingReOrFwdPrefix
mf_copyDateInCommonFormatsWithString:
_receiveLockState:
isLocked
startWith:
lockStateObservable
_token
_isLocked
_defaultDownloadSessionForAttachment:
downloadTaskWithURL:
setTaskDescription:
taskDescription
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:downloadTask:didFinishDownloadingToURL:
URLSession:downloadTask:didWriteData:totalBytesWritten:totalBytesExpectedToWrite:
URLSession:downloadTask:didResumeAtOffset:expectedTotalBytes:
backgroundSessionConfigurationWithIdentifier:
setTimeoutIntervalForRequest:
setTimeoutIntervalForResource:
setAllowsCellularAccess:
fullResolutionStorageLocationForAttachmentWithMimePart:withMessage:
pathWithComponents:
fullResolutionAttachmentURLForAttachmentURL:
fullResolutionAttachmentForAttachment:
attachmentURLs
objectsAtIndexes:
_processAttachments
deliverSynchronouslyWithCompletion:
containerWithIdentifier:
privateCloudDatabase
initWithRecordType:zoneID:
initWithFileURL:
recordID
_uploadAttachmentsViaCloudKit:zone:records:zippedPhotos:attachmentRecords:images:
scaledImages:
setAttachments:
_recordZoneIDInDatabase:completionHandler:
updateMessageWithAttachmentsSynchronously
initWithRecordIDs:
setConfiguration:
setRequestedTTL:
setFileNamesByAssetFieldNames:
downloadURL
parseURL:intoMetadata:
imageArchiveMetadata
setAssetPublishedBlock:
addOperation:
setImageArchiveMetadata:
initWithRecordsToSave:recordIDsToDelete:
setDatabase:
setQueuePriority:
setQualityOfService:
values
setPerRecordProgressBlock:
setPerRecordCompletionBlock:
_publishRecord:database:attachmentRecords:images:allowsCellularAccess:
join:
setModifyRecordsCompletionBlock:
_mailDropZone
initWithZoneName:ownerName:
initWithZoneID:
saveRecordZone:completionHandler:
fetchRecordZoneWithID:completionHandler:
addPassword:forServiceName:accountName:keychainAccessibility:synchronizable:error:
passwordForServiceName:accountName:synchronizable:error:
mailDropState
setMailDropState:
_imageArchiveMetadata
_mailDropState
query
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
parseExpiration:
setExpiration:
setAutoArchive:
_domainIsWhitelisted:
_parseWrappedURL:intoMetadata:
_parseDirectURL:intoMetadata:
setIsInvalid:
setWrappedUrl:
_parseURLQuery:
defaultAllowedCharacterSet
setDirectUrl:
setUUID:
parseHeaderValue:forField:
isBanner
directUrlString
laterDate:
autoArchive
wrappedUrlString
wrappedUrl
expiration
mf_MD5Digest
isPhotoArchive
isBannerWithMultiple
_uuid
_autoArchive
_isInvalid
_fileSize
_directUrl
_wrappedUrl
_expiration
listUnsubscribeCommands
listUnsubscribe
answered
junk
conversationVIP
conversationMuted
noteNeedsSpotlightReindex
noteRebuildMessageInfoIndex
noteNeedsRebuildTriggers
resetTTRPromptAndForceReindex
needsRebuildTriggers
needsRebuildMessageInfoIndex
_needsRebuildTriggers
_needsRebuildMessageInfoIndex
_needsSpotlightReindex
initWithContentsOfFile:encoding:error:
initWithUnsignedInt:
mf_stringByEscapingSQLLikeSpecialCharactersWithEscapeCharater:
like:escapeCharacter:
notLike:escapeCharacter:
equalToExpresion:
like:
notLike:
myEmailAddresses
analyzeMessages:myEmailAddresses:
initWithMessages:relationships:
orderedSet
sendersOfMessage:
relationOfMessage:toMessage:previousSenders:myEmailAddresses:
isMessage:responseToMessage:previousSenders:myEmailAddresses:
isMessageDraft:
isMessage:forwardOfMessage:myEmailAddresses:
isMessage:sentByAddress:
isMessage:addressedToPreviousSender:
isMessage:addressedToMailingListForMessage:
recipientsOfMessage:
mf_any:
mf_containsSubstring:options:
mf_flatten
mf_caseInsensitiveIsEqualToString:
analysisOfConversation:
relationOfMessage:toMessage:
relationOfMessage:
_relationships
mailboxToRemoteIdDictionary
enumerateMailboxesAndRemoteIDsUsingBlock:
continueOffset
setMailboxToRemoteIdDictionary:
_continueOffset
_mailboxToRemoteIdDictionary
initWithComparator:
messagesCount
firstMessage
lastMessage
countWithDuplicates
uniqueMessageInfos
allMessageInfos
messageCollectionHash
addMessageInfo:
indexOfMessageInfo:
removeMessageInfo:
indexWhereMessageInfoWouldBeInserted:
messageInfoAtIndex:
messageInfoEquivalentToMessageInfo:
duplicatesOfMessageInfo:
stateForMessages:
duplicatePreferenceComparator
setDuplicatePreferenceComparator:
initWithHash:comparator:
messageCountWithDuplicates
visibleMessageInfo
mergeWithCollection:
state
_messageInfoSet
_messageCollectionHash
_shouldConvertEqualsToContainsForKey:
messageCriterionConverter:predicateKeysForCriterionType:
messageCriterionConverter:willUsePredicateOperatorType:forKey:
messageCriterionConverter:criterionTypeForKey:
predicateFromMessageCriterion:
compoundPredicateType
subpredicates
initWithType:subpredicates:
expressionForConstantValue:
_proposedPredicateOperatorType:forKey:
predicateWithLeftExpression:rightExpression:modifier:type:options:
_predicateForKey:value:qualifier:
_simplifiedCompoundPredicateOfType:forSubqueries:
_defaultKeysForCriterionType:
_predicateKeysForCriterion:
_searchPredicateForCriterion:
_orPredicateForAttributes:matchingValue:qualifier:
notPredicateWithSubpredicate:
_defaultCriterionTypeForKey:
expressionType
constantValue
_criterionTypeForKey:
predicateOperatorType
leftExpression
_criterionTypeFromExpression:
rightExpression
messageCriterionFromPredicate:
_messageCriterionForCompoundPredicate:
_messageCriterionForComparisonPredicate:
predicateWithFormat:
messageCriterionFromPredicateFormatString:
_flagDescription
isVIP
uidIsLibraryID
newGenerationNumber
setDeleted:
generationCompare:
sortUid
setSortUid:
sortDateReceivedInterval
setSortDateReceivedInterval:
_flagged
_read
_deleted
_uidIsLibraryID
_hasAttachments
_isVIP
_isHighPriority
_dateSentInterval
_dateReceivedInterval
_sortUid
_sortDateReceivedInterval
_conversationHash
_messageIDHash
_invalidate
comparator
mf_insertObject:usingComparator:allowDuplicates:
setObject:atIndexedSubscript:
_addMessageInfoToDuplicates:
_removeDuplicatesForMessageInfo:
mf_removeObject:usingComparator:
_scanForMessageInfoSimilarTo:
removeMessageInfoAtIndex:
enumerateIndexesWithOptions:usingBlock:
mf_indexOfObject:usingComparator:
mf_indexWhereObjectWouldBeInserted:usingComparator:
mf_objectEquivalentTo:usingComparator:
_duplicateMessageInfosForMessageInfo:
enumerateObjectsWithOptions:usingBlock:
removeMessageInfosAtIndexes:
removeAllMessageInfos
replaceMessageInfo:withReplacement:inPlace:
allDuplicatesOfMessageInfo:
enumerateUniqueMessageInfosWithOptions:usingBlock:
_knownMessageIDs
_mutableMessageInfos
_duplicateMessageInfos
_comparator
_duplicatePreferenceComparator
senderList
toList
ccList
bccList
participants
_senderList
_toList
_ccList
_bcc
_bccList
_subject
_references
_messageIDsBySubject
_conversationFlagsRef
_conversationIDHash
setAccounts:
messagesMatchingQuery:variable:limit:
_userCreatedMailboxes
_criterionForQuery:variable:
countMessagesMatchingQuery:variable:
initWithAccounts:mailLibrary:
mostRecent:messagesForMailbox:
accounts
_accounts
compressFilesInQueue:shouldDefer:
hasNext
nextFile
compressFile:error:
registerActivity:withCompressionQueue:
unregisterActivity
addNetworkObserverBlock:queue:
_checkKeys:forStore:
_setUpTelephony_nts
_inititializeWifiManager
_setupSymptons
initWithQueue:
_setDataStatus_nts:
_pollDataAndCallStatus_nts
_tearDownTelephony_nts
_isNetworkUp_nts
dataStatus
_simulationOverrideForType:actualValue:
execute
_networkAssertionWithIdentifier:
initWithBlock:queue:
removeNetworkObserver:
addCancelationBlock:
observableWithBlock:
networkObservable
_updateWifiClientType
setReachabilityFlags:
setDnsEnabled:
setWifiEnabled:
setDataInterface:
setCellData:
setDataIndicator:
setRoamingAllowed:
setNumActiveCalls:
setNumBackgroundWifiClients:
networkAssertionWithIdentifier:
airplaneModeChanged
isDataAvailable
isNetworkUp
hasAlternateAdvice
_setFlags:forReachability:
_handleNotification:info:forConnection:
_handleWiFiNotification:
wifiObservable
addBackgroundWifiClient:
removeBackgroundWifiClient:
awdNetworkDiagnosticReport
_thread
_observers
_dns
_calls
_backgroundWifiClients
_interface
_wiFiPreferences
_hasCellDataCapability
_hasWiFiCapability
_isWiFiEnabled
_isRoamingAllowed
_alternateAdviceState
_dataIndicator
_radiosPreferences
_prefsQueue
_symptomsToken
_reachability
_store_source
_telephony
applyToReplayContext:
initWithMailboxID:
_applyReplayContextTransformation:
initWithTemporaryID:translatedID:
translatedIDsByTemporaryID
initWithTemporaryID:transferFailureSnapshot:
failureSnapshotsByTemporaryID
initWithTemporaryID:newTemporaryID:
_accountLibraryID
_deferredOperations
_replayContext
_lastTemporaryMessageID
_isReplaying
_selectedMailboxID
_translatedIDsByTemporaryID
_failureSnapshotsByTemporaryID
_originalRemoteID
_originalMessageFlags
_temporaryID
_translatedID
_snapshot
_newTemporaryID
_rowid
setPlaceholders:
libraryContent
richtextContent
multipartContent
placeholders
_placeholders
setLibraryMessage:
libraryMessage
_libraryMessage
setPlaintextAlternative:
setMixedContent:
textPartsAreHTML
setTextPartsAreHTML:
plaintextAlternative
mixedContent
_plaintextAlternative
setHtmlBody:
htmlBody
_htmlBody
_currentDeliveryObject
sharedAggregateDictionary
pushValue:forKey:
_deliverSynchronouslyWithCurrentSettings:
notifyUserDeliverySucceeded:
_deliveryAccountForInitializers
attachmentContext
setAttachmentContext:
originalConversationId
setOriginalConversationId:
_otherHTMLAndAttachments
_attachmentContext
_originalConversationId
_initDuet
_applicationForegroundStateChanged:
_releaseAssertion_nts
_retainAssertion_nts
_lowPowerModeChangedNotification:
isLowPowerModeEnabled
_assertionTimeout
assertionDidExpire
_setupAssertionTimer:
retainAssertionWithIdentifier:
observableOnDefaultNotificationCenterWithName:object:
countForObject:
_setPluggedIn:
isHoldingAssertion
startListeningForBatterySaverNotifications
pluggedInObservable
lowPowerModeObservable
duetIdentifier
_deleteDuetAttributesForAccountWithUniqueId:
recordDuetEventForAccount:event:
_powerQueue
_pluggedIn
_powerToken
_identifiers
_appStateCancelable
_vfsModuleName
configuration
protectedDatabasePath
_vfsName
_attached
messageWithRFC822Data:withParentPart:generateMessageIDHash:
bodyForMessage:fetchIfNotAvailable:updateFlags:
_parentPart
initWithSendingAccount:signingPolicy:encryptionPolicy:
_updateSigningStatus_nts
_updateEncryptionStatus_nts
_notifyDelegateEncryptionStatusDidChange:certsByRecipient:errorsByRecipient:identity:error:
_determineEncryptionStatusWithNewRecipients:
_notifyDelegateSigningStatusDidChange:identity:error:
_determineIdentitiesWithSendingAddress:forSigning:encryption:
_determineSigningStatusWithSendingAddress:
_determineEncryptionStatusWithSendingAddress:
copySigningIdentityForAccount:sendingAddress:error:
copyEncryptionIdentityForAccount:sendingAddress:error:
_nts_setSigningIdentity:error:
_nts_setEncryptionIdentity:error:
isRevokedCertificate:sendingAddress:
_nts_copySigningIdentity:error:
_determineRevocationStatusWithIdentity:sendingAddress:
secureMIMECompositionManager:signingStatusDidChange:context:
_nts_copyEncryptionIdentity:error:certificatesByRecipient:errorsByRecipient:
copyEncryptionCertificatesForAccount:recipientAddress:error:
secureMIMECompositionManager:encryptionStatusDidChange:context:
_shouldAllowSend_nts
_shouldSign_nts
_shouldEncrypt_nts
copyEncryptionCertificateForAddress:error:
copySMIMESigningPolicyForAddress:
initWithSigningPolicy:encryptionPolicy:
addRecipients:
removeRecipients:
setSendingAddress:
sendingAddress
sendingAccount
signingPolicy
encryptionPolicy
signingStatus
encryptionStatus
recipients
shouldAllowSend
_sendingAccount
_sendingAddress
_signingIdentity
_signingIdentityError
_encryptionIdentity
_encryptionIdentityError
_recipients
_errorsByRecipient
_certificatesByRecipient
_signingPolicy
_encryptionPolicy
_signingStatus
_encryptionStatus
_encryptionStatusSemaphore
_signingStatusSemaphore
_invalidated
fileCompressionQueueLock
fileCompressionQueue
activityCreated
createCompressionActivity
fileCompressionQueueActivity
setActivityCreated:
setFileCompressionQueue:
setFileCompressionQueueLock:
libraryCompressionActivity
setLibraryCompressionActivity:
setFileCompressionQueueActivity:
_activityCreated
_fileCompressionQueue
_fileCompressionQueueLock
_libraryCompressionActivity
_fileCompressionQueueActivity
_modelSpecificLocalizedStringKeyForKey:
_getValue:
defaultSignature
signature
_setValue:value:
signatureForAccount:
useAccountSignatures
plainTextFromHTMLSnippet:
setSignature:forAccount:
signatureForSendingEmailAddress:
signatureMarkupFormat:
signaturePlainTextFormat:
regularExpressionWithPattern:options:error:
rangeOfFirstMatchInString:options:range:
stripSignatureMarkup:
setSignature:
clearSignature
setUseAccountSignatures:
setSignature:forEmailAddress:
signatureMarkupForSendingEmailAddress:
signaturePlainTextForSendingEmailAddress:
_insertionPositionOfIndex:
_incrementStorageIfNecessaryForCount:
_positionOfIndex:
_garbageCollectStorageIfNecessary
_storageSize
_cursor
_storage
basePath
databaseFileSystemPath
_makeCompletePath
_fixFilePermission
beginTransaction
setPool:
_databaseName
_statementCache
_ICUSearchContext
_CPSearchContext
_transactionType
_transactionCount
_pool
_configuration
databaseName
_databasePathWithDatabaseName:
databasePath
queryItemWithName:value:
setQueryItems:
_basePath
protectedDatabaseName
protectedDatabaseFileSystemPath
_protectedDatabaseName
cancelTerminationTimer
_connectionWithType:
_semaphoreForConnectionType:waitCounter:
initWithConnection:generation:
generation
_interruptActiveConnections
interruptConnectionsAfterDelay:
cacheSize
maxConcurrentReaders
maxConcurrentWriters
backgroundReadersWaiting
maxConcurrentBackgroundReaders
_cacheLock
_cacheSize
_cacheGeneration
_maxConcurrentBackgroundReaders
_maxConcurrentWriters
_checkoutLock
_checkoutMap
_backgroundReaderSemaphore
_backgroundReadersWaiting
_writerSemaphore
_writersWaiting
_terminationTimer
_generation
initWithPID:flags:reason:name:withHandler:
initWithName:expiration:preventIdleSleep:
cancelTimer
valid
initWithName:preventIdleSleep:
_assertion
_timer
intersectSet:
addProbeWithConnection:
objectForKey:shouldGenerate:wasCached:
setKey:
weakObjectCacheRefForKey:
_dictionary
currentFont
parenSet
parseParameterString:
floatValue
initWithFloat:
nowWouldBeAGoodTimeToAppendToTheAttributedString
handleNoParameterCommand:
setupFontStackEntry:
mismatchError:
scannerWithString:
scanHexInt:
scanString:intoString:
punctuationSet
appendNewLine:
resetStateWithString:outputString:
readTokenInto:
beginCommand:
endCommand:
appendStringToBuffer:
closeUpQuoting
setWantsHTML:
convertRichTextString:intoOutputString:
convertEnrichedString:intoOutputString:
_inputBuffer
_currentIndex
_inputLength
_noFillLevel
_eatOneNewline
_insideComment
_wantsPlainText
_lastQuoteLevel
_commandStack
_outputBuffer
_prependHTML
_postpendHTML
_indentWidth
methodSignature
setPriority:
addObserverForName:object:queue:usingBlock:
invocationWithSelector:target:object1:object2:taskName:priority:canBeCancelled:
setShouldLogInvocation:
setIsLowPriority:
powerAssertionId
_shouldLogInvocation
_isLowPriority
_powerAssertionId
removeAllIndexes
mf_waitForLock
_passwordForHost:username:port:keychainProtocol:
_passwordForGenericAccount:service:error:
passwordForServiceName:accountName:error:
_matchSSLClientIdentity:withHostname:
validateSigningIdentity:forAddress:error:
_copyAllIdentitiesWithError:usingBlock:
validateEncryptionIdentity:forAddress:error:
_validateIdentity:forAddress:policy:usage:error:
copySMIMEEncryptionPolicyForAddress:
initWithObjects:forKeys:count:
_copyCertificateForPersistent:error:
_removeCertificateForPersistent:
_addCertificate:persistent:
_addPersistentMapping:forAddress:
_actionForCertificate:policy:uncommentedAddress:
passwordForHost:username:port:keychainProtocol:
setPassword:forHost:username:port:keychainProtocol:keychainAccessibility:
removePasswordForHost:username:port:keychainProtocol:
passwordForServiceName:accountName:
setPassword:forServiceName:accountName:keychainAccessibility:
removePasswordForServiceName:accountName:
copyAllSigningIdentitiesForAddress:error:
copyAllEncryptionIdentitiesForAddress:error:
saveEncryptionCertificate:forAddress:
actionForSigningIdentity:address:
actionForEncryptionCertificate:address:
mf_addImmediateObserver:selector:name:object:
mf_removeObservers:
mf_anyPassingTest:
mf_all:
mf_countObjectsPassingTest:
mf_debugDescription
compare:options:range:
getFileSystemRepresentation:maxLength:
getCharacters:range:
stringByReplacingOccurrencesOfString:withString:options:range:
mf_fileSystemString
mf_stringByEscapingForXML
mf_stringByEscapingHTMLCodes
mf_stringByAddingPercentEscapesUsingEncoding:
mf_stringByReplacingPercentEscapesUsingEncoding:
mf_containsSubstring:
mf_stringByTrimmingWhitespaceAndNewlineCharacters
mf_stringRepresentationForBytes:
mf_stringWithAttachmentCharacter
mf_isResourceURL
mf_firstPartNumber
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didReceiveData:
response
_responseBody
_promise
_response
ephemeralSessionConfiguration
dataTaskWithRequest:
mf_stringByAbbreviatingSharedResourcesDirectoryWithTildeInPath
stringByResolvingSymlinksInPath
stringWithFileSystemRepresentation:length:
stringWithCharacters:length:
setMissingPasswordError
justSentPlainTextPassword
_justSentPassword
_range
_quoteLevel
appendString:withQuoteLevel:
archivedRepresentation
appendArchivedRepresentation:
_text
_fragments
_initializeTopLevelPartWithHeaders:
_continueParsing
progressiveMimeParser:beganMimePart:
progressiveMimeParser:finishedMimePart:
progressiveMimeParser:beganDataForMimePart:
progressiveMimeParser:failedWithError:
_reportError:
mf_rangeOfCString:options:range:
_currentBoundary
mf_rangeOfData:options:range:
_continueParsingStartOfPart
_continueParsingHeaders
_continueParsingBody
initWithBodyData:topLevelHeaders:headersToPreserve:
setContext:
context
noteDataLengthChanged:
currentPart
_preserveHeaders
_context
_lastLength
_topLevelPart
_currentPart
_parserFlags
willAddRequests:consumers:
_processRequests:consumers:
processRequest:consumer:
addRequest:consumer:
_waitingOutside
_waitingInside
authScheme
supportsInitialClientResponse
isUsingSSL
base64EncodeResponseData
couldRetry
_authScheme
_authenticationState
SMIMEError
copySigners
contentsForTextSystem
_needsSignatureVerification:
usesKnownSignatureProtocol
dataForMimePart:
signedData
initWithPartData:error:
lastSecCMSError
verifyAgainstSenders:signingError:
signers
_setSigners:
_setSMIMEError:
decryptedMessageBodyIsEncrypted:isSigned:
isContentEncrypted
isContentSigned
mf_convertNetworkLineEndingsToUnix
setMessageClassForStore:
setStoragePath:
setMessageInfoFromMessage:
_setDecryptedMessageBody:isEncrypted:isSigned:
decodeMultipartSigned
decodeApplicationPkcs7_mime
_SecCMSError
_digest
_signers
_signedData
_envelopedData
_isEncrypted
initForSigningWithSender:compositionSpecification:error:
initForEncryptionWithCompositionSpecification:error:
_appendBytes:length:
_encoder
_singleShot
_defaultSettingsWithPort:useSSL:directSSL:
connectionSettingsForAuthentication:secure:insecure:
timeLastCommandWasSent
noop
supportsPipelining
setSupportsPipelining:
setSupportsOutboxCopy:
disconnect:
connectionExpired:
scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:
setTimer
_isAppleServiceDeliveryHostname:
registerAppleServiceDeliveryHostname:
setDeliveryClass:
customAuthenticationErrorStringForError:authScheme:
errorForResponse:
authenticatedConnection:
_deliveryClass
_lastTimerSetTime
_supportsPipelining
_supportsOutboxCopy
_hasParameter:forKeyword:
_supportsSaveSentExtension
_supportsExtension:
_sendCommand:length:argument:trailer:
_getReply
lastResponseLine
mf_decodeBase64
_connectUsingAccount:
_doHandshakeUsingAccount:
supportsBinaryMime
supports8BitMime
mf_copyIDNAEncodedEmailAddress
numberOfNewlinesNeedingConversion:
_sendData:progressHandler:
enumerateConvertingNewlinesUsingBlock:
_dataForCommand:length:argument:trailer:
supportsChunking
dataForMailFrom:
dataForRcptTo:
dataForDataCmd
_sendData:
errorMessageWithAddress:defaultMessage:
failureReason
sendBData:
sendData:
mailFrom:
rcptTo:
_setLastResponse:
_sendBytes:length:progressHandler:
mutableBytes
_readResponseRange:isContinuation:
setLastResponseLine:
setContinuationResponses:
initWithPattern:options:error:
initWithBytesNoCopy:length:encoding:freeWhenDone:
firstMatchInString:options:range:
numberOfRanges
rangeAtIndex:
lastResponse
domainName
setDomainName:
supportsEnhancedStatusCodes
mailFrom:recipients:withData:host:errorTitle:errorMessage:serverResponse:displayError:errorCode:errorUserInfo:
setUseSaveSent:toFolder:
_lastResponse
_serviceExtensions
_mdata
_domainName
_saveSentMbox
_originalSocketTimeout
_lastCommandTimestamp
_hideLoggedData
_useSaveSent
_dislikesSaveSentMbox
_openConnection
_updateEnhancedStatusCodesFromLastResponse
statusClass
statusSubject
statusDetail
statusString
continuationResponses
_lastResponseLine
_statusClass
_statusSubject
_statusDetail
_statusString
_continuationResponses
_loadMailboxRowidIfNecessary:
objectEnumerator
initWithLibrary:URLString:
knownMessageIDsFromSet:
messageIDsAddedBeforeDate:
deleteUIDsNotInArray:
numberOfMessageIDs
deleteAllUIDs
flagsForUID:
_mailboxRowid
initWithSearchString:options:
matches:matchType:
_setOfAllSources
allSources
attachmentForURL:
setAttachment:forURL:
_attachmentsLock
_attachmentsByURL
isHTML
textHtmlPart
_initWithMimePart:htmlData:
initWithString:relativeToURL:
absoluteURL
mimePartForURL:
initRegularFileWithContents:
initWithMimeBody:
attachmentsInDocument
preferredCharacterSet
baseURL
isVisuallyEmpty
_baseURL
_mimeBody
_htmlPart
_htmlData
_partsByURL
_partsByFilename
_preferredEncoding
_visuallyEmpty
_MFMailboxPredictorDiagnostics
MFMailboxPredictorDiagnostics
NSObject
_MFMeasuredObject
MFStream
NSStreamDelegate
NSURLSessionDelegate
_MFSocket
MFAccount
MFPubliclyDescribable
MFAccountValidator
MFActivityMonitor
MFCancelable
_MFActivityMonitorMultiTarget
MFAuthScheme
MFBufferedQueue
MFConnection
MFDiagnosticsGenerator
MFConnectionSettings
NSCopying
MFCRAM_MD5AuthScheme
MFCRAM_MD5Authenticator
LibraryAdditions
PrivateLibraryAdditions
DADeliveryAccount
MFDADeliveryConsumer
DAMessageSendConsumer
DAActionConsumer
MFDADelivery
MFDADeferredFolderChangeOperation
MFDAOfflineCacheOperation
DAMailAccount
MFDAMailbox
MFDAMailAccountConsumer
MFDARequestQueue
MFDAMessagePayloadFetchResponseImpl
MFDAMessagePayloadFetchResponse
_MFDAResolveRecipientsConsumer
DAResolveRecipientsConsumer
MFDASyncResponseConsumer
MFRequestQueueResponseConsumer
MFDASyncActionsConsumer
MFDAMailAccountSyncConsumer
DAMailboxRequestConsumer
DAMailboxStreamingContentConsumer
MFDAMessage
MFDAMessageContentConsumer
MFDAStreamingContentConsumer
MFDAMessageStore
MFAdditions
_MFDAMessageStoreGetUpdatesRequest
MFDAMailAccountRequest
_MFDAMessageStoreSetFlagsRequest
_MFDAMessageStoreDeleteRequest
_MFDAMessageStoreFetchHeadersRequest
_MFDAMessageStoreFetchRequest
_MFDADeferredSetFlagsOperation
_MFDADeferredDeleteMessageOperation
_MFDAMSBasicConsumer
_MFDAMSUpdateConsumer
_MFDAMSSearchResponseConsumer
DASearchQueryConsumer
_MFDAMessageHeaderFetchConsumer
_MFDAMessageBodyFetchConsumer
DAMailAccountStreamConsumerFactory
_MFDALibraryConsumerFactory
MFMessageDataConsumerFactory
_MFDAMessageFetchAttachmentConsumer
DAMessageFetchAttachmentConsumer
_MFDAMessageStoreSearchResultBodyConsumer
DAMailboxFetchSearchResultConsumer
MFDbJournal
DeliveryAccount
MFDigestMD5AuthScheme
_MFDigestMD5Authenticator
FormatFlowedSupportInternal
FormatFlowedSupport
_MFFormatFlowedWriter
Goodies
_MFInvocationQOSOverride
MFInvocationQueue
MFContentProtectionObserver
MFLibraryMessage
MFLibrarySearchableIndexMiddleware
MFLibrarySearchableIndex
_MFLibrarySearchableIndexClientState
_MFLibrarySearchableIndexResultKey
MFLibrarySearchableIndexAdditions
MFLibrarySearchableIndexUpdates
MFLibrarySearchableIndexItem
_MFLibrarySearchableIndexPendingRemovals
_MFLibrarySearchableIndexBudgetConfiguration
MFLibrarySearchableIndexQuery
NSProgressReporting
MFLibrarySearchableIndexQueryAdditions
MFLibrarySearchableIndexQueryContext
MFMessageDetails
MFBaseMessage
MFLibraryStore
LocalAccount
_MFRootlessMailboxUid
MailAccount
SortedMailboxes
MFMailboxUid
_MFMailboxUidEnumerator
_MFMailboxUidChildrenEnumerator
MFMailDelivery
MFMailDataMessageStore
MFMailMessage
UnreadCountCriterion
MFMailMessageLibrary
MFLibrarySearchableIndexDataSource
MFSQLiteConnectionPoolDelegate
_MFMailMessageLibraryStatistics
_MFLibrarySQLiteConnectionWrapper
_MFMessageCollector
MessageConsumer
QueryProgressMonitor
_MFBlockIterationHandler
MFSearchResultHandler
_MFDataCollector
MFGuaranteedCollectingDataConsumer
MFCollectingDataConsumer
MFDataConsumer
MFMailboxMessageIterationFilter
MFMessageIterationFilter
StoreEnumeration
MFMessageTransferResult
MFMailMessageStore
MFMailMimePart
DecodeMessage
MFMailMimeTextAttachment
MainThreadMessaging
MFMessageCriterion
_MFMessageFlags
NSCoding
MFMessageLibrary
MFBasicMessageDataSection
MFMessageDataSection
MFMessageSigner
MFMessageWriter
_MFOutgoingMessageBody
MFOutgoingMessage
MFAccountLoader
iTunesSync
MFAccountStore
MFAppStateMonitor
MFAttachment
MFAttachmentCapabilities
MFAttachmentComposeManager
MFAttachmentCompositionContext
MFAttachmentDataProvider
MFAttachmentLibraryDataProvider
MFAttachmentDataProviderProtocol
MFAttachmentLibraryManager
MFAttachmentManager
MFAttachmentPlaceholder
MFAttachmentRaw
MFAttachmentUtilities
MFAttachmentBundle
MFAttachmentSecurityScope
MFCachingMailboxPredictor
MFMailboxPredictor
MFComposeAttachmentDataProvider
MFContentErrorDocument
_MFContentProtectionObserverWrapper
MFDAFolderChangeConsumer
DAFolderChangeConsumer
MFDAFolderChangeResult
_MFDADeferredNewMailboxOperation
_MFDADeferredDeleteMailboxOperation
_MFDADeferredModifyMailboxOperation
MFDADraftMessage
MFDAMessageStoreSaveDraftRequest
MFDAMoveResponseConsumer
DAMessageMoveRequestConsumer
MFDADeferredMessageMoveOperation
MFDAOfflineCache
_MFDADeferredSelectMailboxOperation
MFDAStoreDraftConsumer
MFDADeferredStoreDraftOperation
MFDecryptedAttachmentDataProvider
MFDeliveryResult
MFError
MessageAdditions
MFFakeMailAccount
MFFakeMailboxUid
MFFakeMailMessage
MFFetchLimits
MFFileArchive
MFFileArchiveDirectory
MFFileArchiveEntry
MFHeuristicsMailboxPredictor
MFLocalizedMessageHeaders
MFLockStateMonitor
MailboxPrediction
MFMailboxPredictionMailbox
ECMailbox
MFMailDropAttachmentDataProvider
NSURLSessionDownloadDelegate
NSURLSessionTaskDelegate
MFMailDropAttachmentPreviewDataProvider
MFMailDropMailDelivery
MFMailDropMailParser
MFMailDropMetadata
MFMailboxPredictionMessage
ProtocolAdapter
ECMessage
MFMailMessageLibraryMigrator
SQLiteFormat
MFSQLExpression
MFMailMessageRelationshipAnalyzer
MFMailMessageStoreSearchResult
MFMessageCollectionInfo
_MFDASearchCriterionConverterDelegate
MFMessageCriterionConverterDelegate
DASearch
MFMessageCriterionConverter
MFMessageInfo
MFMessageInfoOrderedSet
MFMessageReferenceContext
MFMobileLibraryAdapter
MFQueryableLibraryAdapter
MFFileCompressionQueueActivityManager
MFNetworkController
RadiosPreferencesDelegate
_MFNetworkObserver
MFOfflineCache
MFOfflineCacheReplayContext
MFOfflineTransferFailureSnapshot
_MFSelectMailboxReplayContextTransformation
MFOfflineCacheReplayContextTransformation
_MFTranslateTemporaryIDReplayContextTransformation
_MFTransferFailureReplayContextTransformation
_MFReplaceTemporaryIDForTransferFailureReplayContextTransformation
MFOfflineCacheOperation
MFOutgoingMessageContent
MFOutgoingLibraryMessageContent
MFOutgoingRichtextMessageContent
MFOutgoingMultipartRelatedContent
MFOutgoingMessageDelivery
MFPowerController
MFProtectedSQLiteConnection
MFRFC822AttachmentDataProvider
MFSecureMIMECompositionManager
MFFileCompressionQueue
MFSignatures
MFSparseMutable64IndexSet
NSMutableCopying
MFSQLiteConnection
MFSQLiteConnectionConfiguration
MFProtectedSQLiteConnectionConfiguration
MFSQLiteConnectionPool
_MFSQLiteConnectionWrapper
MFTaskAssertion
MFThreadFuzzyMatcher
MFUnreadCountProbe
_MFWeakObjectCacheRef
MFWeakObjectCache
MFMimeEnrichedReader
MimeEnrichedReader
MailExtensions
MFMonitoredInvocation
Additions
MFMessageKeychainManager
Functional
NSStringUtils
AttachmentURLUtilities
MFMessageURLConnectionDelegate
MFDirectoryPathUtils
MFSharedResourcesDirectoryPathUtils
MFPlainAuthScheme
_MFPlainAuthenticator
_MFLoginAuthenticator
MFPlainTextFragment
MFPlainTextDocument
MFProgressiveMimeParser
MFRequestQueue
MFSASLAuthenticator
SMIMESupport
SMIMEDecoding
SMIMEDecodingPrivate
_MFSecCMSDecoder
SMIMEEncoding
_MFSecCMSEncoder
_MFSecDataMessageStore
SMTPAccount
MFSMTPConnection
MFSMTPDelivery
MFSMTPResponse
MFSqliteMessageIDStore
MFWebAttachmentSource
MFWebMessageDocument
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
@"NSDictionary"8@0:4
@12@0:4@8
@16@0:4@8@12
v8@0:4
v12@0:4@8
@"NSString"
@"NSDictionary"
@20@0:4@8d12
@16@0:4@8I12
i12@0:4@8
d8@0:4
v16@0:4d8
v16@0:4@8I12
v16@0:4@"NSStream"8I12
v16@0:4@8@12
v20@0:4@8@12@?16
v16@0:4@"NSURLSession"8@"NSError"12
v20@0:4@"NSURLSession"8@"NSURLAuthenticationChallenge"12@?<v@?i@"NSURLCredential">16
v12@0:4@"NSURLSession"8
@16@0:4@?8@12
B16@0:4@8@12
v16@0:4@8i12
v24@0:4@8@12@16@20
i16@0:4*8I12
i16@0:4r*8I12
@"NSURLSession"
@"NSURLSessionStreamTask"
@"NSInputStream"
@"NSOutputStream"
@"NSMutableDictionary"
@"NSObject<OS_dispatch_queue>"
@"NSError"
@"NSCondition"
v16@0:4B8@12
B16@0:4^{__SecTrust=}8^@12
B16@0:4@8^@12
B12@0:4^B8
v12@0:4^{__CFString=}8
B20@0:4@8I12@16
i16@0:4r*8L12
i16@0:4*8L12
v12@0:4B8
i8@0:4
v12@0:4i8
^{__CFString=}
@"NSInvocation"
@"NSArray"
@"MFStream"
B20@0:4@8@12@16
^v8@0:4
B12@0:4I8
@12@0:4^{_NSZone=}8
B16@0:4@8B12
@12@0:4B8
@16@0:4B8^@12
@12@0:4^@8
@16@0:4@8^@12
B20@0:4@8@12^@16
B16@0:4@8@?12
B20@0:4@8@12@?16
B20@0:4@8B12@?16
B12@0:4^@8
v12@0:4I8
^{__CFString=}8@0:4
@20@0:4@8@12@16
@"ACAccount"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
v16@0:4@8B12
v20@0:4@8B12@?16
v16@0:4@8@?12
@"MFAccount"
@"MFActivityMonitor"
@"MFMonitoredInvocation"
{?="useSSL"b1"incomingServerSupportsSSL"b1"smtpServerSupportsSSL"b1"canceled"b1"performsValidationInBackground"b1"unused"b27}
@"MFError"
v20@0:4@8d12
v24@0:4@8d12i20
v20@0:4d8i16
@"NSThread"
@"MFInvocationQueue"
@"MFMailboxUid"
@"NSMutableSet"
v12@0:4#8
#12@0:4#8
I12@0:4@8
B16@0:4#8@12
@20@0:4I8d12
@"NSMutableArray"
v20@0:4@8i12@16
B24@0:4r*8L12{_NSRange=II}16
B20@0:4@8{_NSRange=II}12
v12@0:4L8
v16@0:4r*8L12
B16@0:4@8L12
@"<MFSASLSecurityLayer>"
@"MFConnectionSettings"
@"_MFSocket"
^{z_stream_s=*II*II*^{internal_state}^?^?^viII}
@20@0:4@8B12^@16
@28@0:4^I8I12B16@20@24
v16@0:4^?8@12
@12@0:4^?8
B16@0:4^?8B12
@12@0:4@?8
@16@0:4^{?=@@IIBBB}8I12
@20@0:4@8@12B16
@28@0:4@8@12@16@20@24
@"DAMailAccount"
v20@0:4i8@12@16
v20@0:4i8@12@"NSError"16
v20@0:4@8I12I16
B16@0:4@"DAMailAccount"8@"MFDAOfflineCache"12
@"MFDAFolderChangeResult"8@0:4
v12@0:4@"NSMutableDictionary"8
@16@0:4@8^B12
i12@0:4i8
v28@0:4@8@12@16@20@24
@24@0:4@8@12I16@20
@28@0:4@8@12I16@20@24
@28@0:4@8@12I16@20i24
v20@0:4@8@12@16
@24@0:4@8@12@16B20
@12@0:4i8
@16@0:4i8B12
B12@0:4i8
v20@0:4@8@12^@16
@"NSObject<ASAccountActorMessages>"
@"DAAccount"
@"MFRecursiveLock"
@"MFDAOfflineCache"
@"MFDAMailbox"
@"NSLock"
@"NSSet"
@"NSCountedSet"
@24@0:4@8I12@16@20
@"NSConditionLock"
@20@0:4@8@12^@16
@"NSData"8@0:4
@20@0:4@8B12B16
@"NSData"
v12@0:4@"NSDictionary"8
@"MFConditionLock"
v16@0:4@8@"MFError"12
v12@0:4@"NSArray"8
v36@0:4@8@12@16@20d24B32
v44@0:4@8@12@16@20d24B32I36I40
v36@0:4@"NSString"8@"NSString"12@"NSArray"16@"NSArray"20d24B32
v44@0:4@"NSString"8@"NSString"12@"NSArray"16@"NSArray"20d24B32I36I40
B16@0:4@8i12
v24@0:4*8i12i16@20
B16@0:4@"DAMailMessage"8i12
v24@0:4*8i12i16@"DAMailMessage"20
v12@0:4@"DAMailMessage"8
@24@0:4@8@12@16@20
v32@0:4@8@12@16d20B28
@"NSMutableData"
Q8@0:4
B24@0:4^@8^I12^B16B20
@"DAMailMessage"
@"MFMessage"
@"<MFCollectingDataConsumer>"
@"<MFMessageDataConsumerFactory>"
@16@0:4@8B12
i20@0:4I8@12I16
v32@0:4@8@12I16@20B24@?28
i16@0:4@8I12
@28@0:4@8@12I16@20^@24
v16@0:4i8B12
v16@0:4I8@12
@16@0:4I8I12
@24@0:4@8@12i16@20
@24@0:4@8i12@16@20
@24@0:4@8^@12B16^B20
B28@0:4@8{_NSRange=II}12^B20@24
@16@0:4i8@12
I28@0:4@8@12@16@20@24
@"DAFolder"
@"MFOfflineCacheOperation<MFDAOfflineCacheOperation>"8@0:4
@20@0:4i8i12B16
@"<MFRequestQueueResponseConsumer>"
@"MFDAMessageStore"
@"<MFRequestQueueResponseConsumer><DAMailAccountStreamConsumerFactory>"
@"MFMimePart"
@"MFMailMessageLibrary"
v16@0:4@"DASearchQuery"8@"NSArray"12
v16@0:4@"DASearchQuery"8@"NSError"12
v16@0:4@"DASearchQuery"8@"NSNumber"12
@"NSDate"
@"MFMailMessageStoreSearchResult"
@"<DAMailboxStreamingContentConsumer>"8@0:4
@"<MFDAStreamingContentConsumer>"
@"<MFCollectingDataConsumer>"12@0:4@"NSString"8
@"MFMessageLibrary"
v24@0:4i8@12@16B20
v32@0:4i8@12@16B20I24I28
v24@0:4@"NSData"8@"NSString"12@"NSString"16@"NSString"20
v24@0:4i8@"NSString"12@"NSString"16B20
v32@0:4i8@"NSString"12@"NSString"16B20I24I28
@"MFProgressFilterDataConsumer"
B16@0:4r*8r*12
i16@0:4^{sqlite3=}8B12
i16@0:4@8^{sqlite3=}12
B12@0:4^{sqlite3=}8
B16@0:4B8^{sqlite3=}12
{_opaque_pthread_mutex_t="__sig"l"__opaque"[40c]}
v16@0:4Q8
v12@0:4^v8
I20@0:4I8{_NSRange=II}12
I16@0:4I8B12
@16@0:4I8^B12
v20@0:4^@8^B12L16
@12@0:4L8
@16@0:4@8L12
I24@0:4{_NSRange=II}8I16B20
v24@0:4@8{_NSRange=II}12I20
@"MFPlainTextDocument"
@"NSMutableString"
v16@0:4i8@12
@16@0:4@8#12
@20@0:4^{_opaque_pthread_t=l^{__darwin_pthread_handler_rec}[4088c]}8I12B16
^{_opaque_pthread_t=l^{__darwin_pthread_handler_rec}[4088c]}8@0:4
^{pthread_override_s=}
^{_opaque_pthread_t=l^{__darwin_pthread_handler_rec}[4088c]}
v16@0:4i8i12
@12@0:4I8
L8@0:4
v32@0:4r*8Q12I20I24I28
@"MFLock"
v20@0:4d8B16
v12@0:4@?8
d16@0:4^I8@?12
q8@0:4
v24@0:4q8@16@?20
v20@0:4q8@?16
v20@0:4@8@12B16
v16@0:4^@8^@12
v16@0:4I8@?12
@"MFCancelationToken"
@"NSObject<OS_dispatch_source>"
@"MFCoalescer"
@"NSObject<OS_os_activity>"
@"_MFLibrarySearchableIndexPendingRemovals"
@"<MFScheduler>"
@"MFLazyCache"
@"MFWeakSet"
@"<MFLibrarySearchableIndexDataSource>"
@"_MFLibrarySearchableIndexBudgetConfiguration"
v16@0:4q8
@"NSNumber"
@"MFMessageCriterion"
@"NSIndexSet"
@"MFMailMessage"
@"CSSearchableItem"
B24@0:4Q8Q16
@16@0:4@8i12
@20@0:4@8@12I16
@"NSProgress"8@0:4
@"NSProgress"
@"MFPromise"
@12@0:4c8
@"MFMessageInfo"8@0:4
I16@0:4B8B12
@24@0:4{_NSRange=II}8I16^I20
@20@0:4{_NSRange=II}8I16
@20@0:4@8I12@16
^{__CFDictionary=}20@0:4q8i16
I12@0:4B8
@32@0:4@8{_NSRange=II}12^B20B24^B28
B36@0:4@8{_NSRange=II}12^B20@24B28^B32
@20@0:4@8I12B16
@32@0:4@8^@12^B16B20B24^B28
@28@0:4@8^@12^B16B20^B24
@24@0:4@8^B12^B16B20
v24@0:4I8B12B16@20
@16@0:4I8^@12
v20@0:4@8B12B16
@16@0:4B8B12
@24@0:4@8^@12^@16B20
@16@0:4#8@12
@16@0:4d8
#12@0:4@8
@20@0:4@8B12i16
i16@0:4@8@12
B24@0:4@8I12@16@20
^@12@0:4i8
{?="cacheDirtyCount"b16"synchronizationThreadIsRunning"b1"cacheHasBeenRead"b1"disableCacheWrite"b1"_UNUSED_"b13}
@"MFWeakObjectCache"
@"MFWeakReferenceHolder"
@"MailAccount"
@"DeliveryAccount"
@"MFDeliveryResult"
@"MFMutableMessageHeaders"
I12@0:4i8
@12@0:4^I8
S8@0:4
v68@0:4@8@12@16@20@24d28d36q44q52@60I64
@12@0:4^B8
@"MFMessageInfo"
@"NSURL"
@24@0:4@8q12@20
v20@0:4@8q12
@"MFLibrarySearchableIndexUpdates"16@0:4@"MFLibrarySearchableIndex"8I12
@"NSArray"24@0:4@"MFLibrarySearchableIndex"8q12@"MFLibrarySearchableIndexUpdates"20
v20@0:4@"MFLibrarySearchableIndex"8q12
@"NSDictionary"12@0:4@"MFLibrarySearchableIndex"8
@"MFSQLiteConnection"12@0:4@"MFSQLiteConnectionPool"8
v20@0:4Q8@16
v20@0:4@8Q12
v16@0:4@8^B12
@20@0:4@8@12@?16
B20@0:4@8@12i16
v24@0:4q8q16
@16@0:4@8^{sqlite3=}12
B20@0:4@8I12^{sqlite3=}16
q20@0:4@8^{sqlite3=}12@?16
@60@0:4@8@12B16@20@24Q28Q36@44B48B52@56
v28@0:4^{sqlite3_stmt=}8^{sqlite3=}12@16^?20^v24
v32@0:4^{sqlite3_stmt=}8^{sqlite3=}12@16I20Q24
v24@0:4r*8^{sqlite3=}12@16I20
I20@0:4@8@12@16
q12@0:4@8
^{__CFDictionary=}24@0:4q8@16i20
@20@0:4@8{_NSRange=II}12
@20@0:4@8I12I16
@20@0:4I8I12^B16
I16@0:4@8@12
I20@0:4@8B12B16
I16@0:4@8I12
@20@0:4{_NSRange=II}8@16
@28@0:4I8I12I16^{_NSRange=II}20@24
@20@0:4I8I12@16
i16@0:4I8^{sqlite3=}12
@20@0:4I8q12
^{__CFDictionary=}12@0:4@8
@12@0:4^{__CFDictionary=}8
i16@0:4@8^B12
B16@0:4I8^{sqlite3=}12
Q16@0:4q8
v24@0:4Q8q16
v28@0:4q8@16Q20
@20@0:4q8I16
v20@0:4B8@12@16
q16@0:4@8@12
B28@0:4@8I12@16B20B24
@20@0:4@8^@12^B16
@36@0:4@8^{sqlite3=}12I16I20B24{_NSRange=II}28
@28@0:4@8^{sqlite3=}12I16I20B24
@24@0:4@8^{sqlite3=}12I16I20
@28@0:4@8^{sqlite3=}12I16{_NSRange=II}20
@20@0:4@8^{sqlite3=}12I16
v36@0:4@8@12I16I20{_NSRange=II}24^B32
v32@0:4@8@12I16I20{_NSRange=II}24
v24@0:4@8@12I16I20
v28@0:4@8@12I16{_NSRange=II}20
v20@0:4@8@12I16
v24@0:4@8@12I16@20
v20@0:4@8I12@?16
@24@0:4@8I12{_NSRange=II}16
@28@0:4@8I12{_NSRange=II}16^B24
@20@0:4@8I12^B16
v20@0:4@8i12I16
@16@0:4i8^I12
v16@0:4i8@?12
i16@0:4^{sqlite3=}8i12
i20@0:4^{sqlite3=}8i12@16
i12@0:4^{sqlite3=}8
i12@0:4@?8
i16@0:4@?8B12
^{sqlite3=}8@0:4
v12@0:4^{sqlite3=}8
@12@0:4^{sqlite3=}8
^{sqlite3_stmt=}16@0:4^{sqlite3=}8@12
i16@0:4^{sqlite3=}8@12
v16@0:4i8^{sqlite3=}12
v28@0:4q8@16i20^{sqlite3=}24
v20@0:4q8^{sqlite3=}16
^{sqlite3_stmt=}24@0:4^{sqlite3=}8@12^@16I20
v32@0:4q8i16@20^@24^{sqlite3=}28
^{sqlite3_stmt=}24@0:4^{sqlite3=}8@12^I16I20
@32@0:4^{sqlite3=}8i12@16B20@24I28
@28@0:4^{sqlite3_stmt=}8I12Q16B24
@"MFSQLiteConnectionPool"
^{__CFDictionary=}
@"<MFMailboxPathProvider>"
@"MFMailMessageLibraryMigrator"
@"_MFMailMessageLibraryStatistics"
@"MFFileCompressionQueue"
@"<MFMailMessageLibraryDelegate>"
@"MFLibrarySearchableIndex"
@"MFProtectedSQLiteConnection"
@?8@0:4
v12@0:4*8
v12@0:4@"MFLibraryMessage"8
@"NSObject<MFMessageIterationFilter>"8@0:4
i12@0:4@"NSData"8
@32@0:4@8@12@16B20B24@28
@"MFLibraryMessage"
@"MFBufferedDataConsumer"
B12@0:4^{sqlite3_stmt=}8
@20@0:4I8@12@16
@28@0:4@8@12B16B20B24
v16@0:4^I8^I12
@16@0:4{_NSRange=II}8
@24@0:4@8I12@16^@20
i20@0:4@8Q12
I24@0:4@8@12@16@20
v20@0:4@8B12@16
i12@0:4I8
B16@0:4L8@12
B20@0:4@8@12B16
{?="isReadOnly"b1"hasUnsavedChangesToMessageData"b1"haveOpenLockFile"b1"compacting"b1"cancelInvalidation"b1"forceInvalidation"b1"isWritingChangesToDisk"b1"isTryingToClose"b1"compactOnClose"b1"reserved"b23}
@20@0:4I8^I12B16
@16@0:4I8^I12
@28@0:4I8^I12B16B20^B24
v20@0:4:8@12@16
@16@0:4q8
@20@0:4i8i12@16
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@44@0:4@8@12@16Q20Q28@36B40
Vv16@0:4@8@?12
@24@0:4@8@12B16@20
v28@0:4Q8Q16@24
@"MFAttachmentLibraryDataProvider"
@"MFDataHolder"8@0:4
@"MFDataHolder"
@20@0:4@8^{__SecTrust=}12i16
^{__SecTrust=}8@0:4
^{__SecTrust=}
@"MFMessageBody"
#16@0:4@8^@12
@20@0:4#8@12B16
@"ACAccountStore"
@"BKSApplicationStateMonitor"
@"MFObservable<MFObserver>"
@16@0:4^@8B12
@"MFAttachmentManager"
@"MFAttachmentPlaceholder"
@"<MFDataConsumer>"
v24@0:4@8@12@16@?20
v24@0:4@"MFAttachment"8@"<MFDataConsumer>"12@"NSProgress"16@?<v@?B@"NSError"B>20
@"NSData"12@0:4@"MFAttachment"8
@"MFMessage"12@0:4@"MFAttachment"8
@"NSString"16@0:4@"MFAttachment"8@"MFMessage"12
@"NSFileCoordinator"
@20@0:4@8I12^@16
@"NSArray"20@0:4@"NSArray"8I12^@16
@"<MFMailboxPredictor>"
@"NSCache"
v20@0:4@"DAFolderChange"8i12@"NSError"16
@"MFDAFolderChangeResult"
@24@0:4i8@12@16@20
B12@0:4@?8
@20@0:4@8i12@16
@28@0:4@8i12@16@20@24
@20@0:4@8@12i16
@24@0:4@8I12d16
@"MFIMAPConnection"
@"NSRecursiveLock"
@"MFMessageHeaders"
v16@0:4@?8@?12
^{archive=}8@0:4
i20@0:4@8^{archive=}12^@16
i16@0:4^{archive=}8^@12
^{archive_entry=}20@0:4@8I12B16
i24@0:4@8@12^{archive=}16^@20
B20@0:4@8^@12B16
B20@0:4^{archive=}8@12^@16
{_NSRange=II}8@0:4
v16@0:4{_NSRange=II}8
{_NSRange="location"I"length"I}
{_NSRange=II}12@0:4@8
@20@0:4^{CentralDirectory=[4C]SSSSIIS}8@12@16
^{CentralHeader=[4C]CCCCSSIIIISSSSSII*}12@0:4@8
^{CentralDirectory=[4C]SSSSIIS}12@0:4@8
{_NSRange=II}12@0:4i8
@"MFFileArchiveEntry"
@16@0:4^{CentralHeader=[4C]CCCCSSIIIISSSSSII*}8@12
@20@0:4d8@16
@"<MFUserProfileProvider>"
@"<MFQueryableLibraryAdapter>"
v28@0:4@8@12@16@20@?24
v40@0:4@8@12q16q24q32
v24@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLRequest"16@?<v@?i@"NSURLRequest">20
v16@0:4@"NSURLSession"8@"NSURLSessionTask"12
v28@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSHTTPURLResponse"16@"NSURLRequest"20@?<v@?@"NSURLRequest">24
v24@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLAuthenticationChallenge"16@?<v@?i@"NSURLCredential">20
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@?<v@?@"NSInputStream">16
v40@0:4@"NSURLSession"8@"NSURLSessionTask"12q16q24q32
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSURLSessionTaskMetrics"16
v20@0:4@"NSURLSession"8@"NSURLSessionTask"12@"NSError"16
v32@0:4@8@12q16q24
v20@0:4@"NSURLSession"8@"NSURLSessionDownloadTask"12@"NSURL"16
v40@0:4@"NSURLSession"8@"NSURLSessionDownloadTask"12q16q24q32
v32@0:4@"NSURLSession"8@"NSURLSessionDownloadTask"12q16q24
@28@0:4@8@12@16@20B24
B32@0:4@8@12@16@20@24@28
@"MFMailDropMetadata"
@"<MFMailboxPredictionMailbox>"8@0:4
@"NSArray"8@0:4
@"NSDate"8@0:4
@"<ECMailbox>"8@0:4
@"<ECMimePart>"8@0:4
@12@0:4S8
@16@0:4@8S12
B24@0:4@8@12@16@20
@20@0:4q8@?16
@"MFMessageInfoOrderedSet"
I20@0:4@8I12@16
@"NSArray"16@0:4@"MFMessageCriterionConverter"8i12
I20@0:4@"MFMessageCriterionConverter"8I12@"NSString"16
i16@0:4@"MFMessageCriterionConverter"8@"NSString"12
@16@0:4I8@12
I16@0:4I8@12
@"<MFMessageCriterionConverterDelegate>"
@56@0:4I8I12q16I24I28q32B40B44B48B52
I12@0:4I8
@"MFSparseMutable64IndexSet"
^Q8@0:4
v12@0:4^Q8
@20@0:4I8@12I16
@"NSDictionary"20@0:4I8@12I16
@"NSArray"20@0:4I8@12I16
@"NSArray"16@0:4I8@12
{?=ii}8@0:4
B16@0:4I8B12
v16@0:4I8^{__SCNetworkReachability=}12
v16@0:4@8^{__SCDynamicStore=}12
v20@0:4@8@12^{__CTServerConnection=}16
^{__CFRunLoop=}
^{__SCPreferences=}
@"RadiosPreferences"
^{__SCNetworkReachability=}
^{__SCDynamicStore=}
^{__CFRunLoopSource=}
^{__CTServerConnection=}
@"MFOfflineCacheReplayContext"
@24@0:4@8@12Q16
v12@0:4@"MFOfflineCacheReplayContext"8
@"MFOfflineTransferFailureSnapshot"
@"<MFDeliveryDelegate>"
@"MFMailDelivery"
@"MFAttachmentCompositionContext"
@"<MFCancelable>"
r*8@0:4
^{__SecIdentity=}20@0:4@8@12^@16
B16@0:4^{__SecCertificate=}8@12
@16@0:4i8i12
@20@0:4@8i12i16
v16@0:4^{__SecIdentity=}8@12
v20@0:4i8^{__SecIdentity=}12@16
v16@0:4^^{__SecIdentity}8^@12
v24@0:4^^{__SecIdentity}8^@12^@16^@20
v28@0:4i8@12@16^{__SecIdentity=}20@24
@"<MFSecureMIMECompositionManagerDelegate>"
^{__SecIdentity=}
v16@0:4@8^v12
L16@0:4Q8
B16@0:4Q8
Q16@0:4Q8
^{sqlite3_stmt=}12@0:4@8
^{sqlite3=}
@"MFSQLiteConnectionConfiguration"
@16@0:4I8^^i12
@"<MFSQLiteConnectionPoolDelegate>"
@"NSObject<OS_dispatch_semaphore>"
@"MFSQLiteConnection"
@24@0:4@8d12B20
@"BKSProcessAssertion"
@"<NSCopying>"
@20@0:4@8B12^B16
^{__CFCharacterSet=}8@0:4
v12@0:4r^{?=@b1b1b1b2}8
v12@0:4^{_CommandStackEntry=^{?}@}8
i12@0:4^@8
{?="buffer"[64S]"theString"^{__CFString}"directUniCharBuffer"^S"directCStringBuffer"*"rangeToBuffer"{?="location"i"length"i}"bufferedRangeStart"i"bufferedRangeEnd"i}
^{__CFArray=}
@24@0:4:8@12@16@20
@28@0:4:8@12@16i20B24
@32@0:4:8@12@16@20i24B28
@36@0:4:8@12@16@20@24i28B32
@24@0:4@8@12i16^{__CFString=}20
@24@0:4@8@12i16^v20
v32@0:4@8@12@16i20^v24^v28
v24@0:4@8@12i16^v20
@24@0:4@8@12B16^@20
B32@0:4@8@12@16^v20B24^@28
v24@0:4@8@12@16^v20
^{__SecPolicy=}12@0:4@8
^{__SecIdentity=}16@0:4@8^@12
@16@0:4^{__SecIdentity=}8^@12
B16@0:4^{__SecIdentity=}8@12
@16@0:4^@8@?12
B20@0:4^{__SecIdentity=}8@12^@16
B28@0:4^{__SecIdentity=}8@12^{__SecPolicy=}16I20^@24
^{__SecCertificate=}16@0:4@8^@12
@16@0:4^{__SecCertificate=}8^@12
@16@0:4^{__SecCertificate=}8@12
i20@0:4^{__SecCertificate=}8^{__SecPolicy=}12@16
i16@0:4^{__SecIdentity=}8@12
i16@0:4^{__SecCertificate=}8@12
@24@0:4@8:12@16@20
I12@0:4@?8
B16@0:4@8I12
@"NSURLResponse"
v20@0:4^@8^I12I16
{?="delegateBeganMimePart"b1"delegateFinishedMimePart"b1"delegateBeganData"b1"delegateFailed"b1"state"b3}
@"MFConnection"
@"MFAuthScheme"
l8@0:4
^{SecCmsMessageStr=}
^{SecCmsDigestContextStr=}
^{SecCmsSignedDataStr=}
^{SecCmsEnvelopedDataStr=}
@24@0:4@8@12@16^@20
v16@0:4r^v8L12
^{SecCmsEncoderStr=}
@20@0:4I8B12B16
@20@0:4B8@12@16
@"MFSMTPConnection"
@"NSTimer"
i48@0:4@8@12@16@20^@24^@28^@32^B36^i40^@44
i20@0:4r*8I12@?16
i16@0:4@8@?12
@24@0:4r*8I12@16r*20
i24@0:4r*8I12@16r*20
i16@0:4^{_NSRange=II}8^B12
@"MFSMTPResponse"
Q12@0:4@8
@20@0:4@8@12L16
@"MFMimeBody"
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
debugOutput
T@"NSString",&,N,V_debugOutput
modelInfo
T@"NSDictionary",&,N,V_modelInfo
<_MFMeasuredObject: %lf: %@>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/MailboxPrediction/_MFMeasuredObject.m
<Unknown File>
Invalid parameter not satisfying: %@
[otherObject isKindOfClass:[_MFMeasuredObject class]]
i12@?0@"_MFMeasuredObject"4@"_MFMeasuredObject"8
object
T@,&,N,V_object
measure
Td,N,V_measure
MFStreamEventCanAcceptBytes
MFStreamEventHasBytesAvailable
MFStreamEventErrorOccurred
MFStreamEventEndEncountered
MFStreamDispatchQueue
v12@?0@"MFStream"4@"NSString"8
-[MFStream openToHostName:port:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Utilities.subproj/_NSSocket.m
(nil == _rStream) && (nil == _wStream)
StreamOpen
stream
host
port
StreamClose
v4@?0
 error: 
-[MFStream write:maxLength:]
_streamCanWrite
closed the write half
closed the read half
-[MFStream stream:handleEvent:]
isReadStream
%@ stream %@%@
read
write
error: 
ended
streamError
T@"NSError",R,N,V_error
isOpen
TB,R,N
trust manager said deny
user said deny
v8@?0i4
trust manager said prompt, but we're not allowed to prompt
kSSLProtocolUnknown
kSSLProtocol3
kTLSProtocol1
kTLSProtocol11
kTLSProtocol12
kDTLSProtocol1
kSSLProtocol2
kSSLProtocol3Only
kTLSProtocol1Only
kSSLProtocolAll
unknown-protocol-version(%d)
start SSL
SSL negotiation failed
Connection timed out while negotiating SSL
Failed to set SSL properties
CFReadStreamSetProperty()
set security protocol
SocketTimeout
DisableThroughputMonitoring
LowThroughput
threshold
low throughput
v8@?0^{__CFReadStream=}4
connect
T@"MFStream",&,V_stream
timeout
Ti,N,V_numTimeoutSecs
allowsTrustPrompt
TB,N,V_allowsTrustPrompt
usesOpportunisticSockets
TB,N,V_usesOpportunisticSockets
disableEphemeralDiffieHellmanCiphers
TB,N,V_disableEphemeralDiffieHellmanCiphers
clientCertificates
T@"NSArray",&,N,V_clientCertificates
sourceApplicationBundleIdentifier
T@"NSString",C,N,V_sourceApplicationBundleIdentifier
accountIdentifier
T@"NSString",C,N,V_accountIdentifier
serverCertificates
T@"NSArray",R,N
remoteHostname
T@"NSString",R,N
remotePortNumber
TI,R,N
sourceIPAddress
T@"NSData",R,N
isReadable
isWritable
isCellularConnection
isValid
Password
Class
Type
DisplayName
Username
Hostname
AccountInfoDidChange
AccountOfflineStatusDidChange
AuthenticationScheme
SSLEnabled
SSLClientIdentity
SSLEnabledIsEditable
SSLIsDirect
SMIMEEnabled
PerMessageSMIMEEnabled
SMIMESigningEnabled
SMIMEEncryptionEnabled
SMIMESigningIdentity
SMIMEEncryptionIdentity
PortNumber
NumberOfDaysToKeepTrash
DeliveryHostname
DeliverySSLEnabled
DeliveryPortNumber
ManagedTag
mcProfileUUID
MFRestrictMessageTransfersToOtherAccounts
MFRestrictSendingFromExternalProcesses
Prevent Recents Syncing
MFAccountSupportsMailDrop
showAlertNow
dateLastFetchAceDB
OAuth2Token
OAuth2RefreshToken
ASStoreDraftsOnServer
MFServerSSLCertificateIsTrusted
B8@?0@"MFAuthScheme"4
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Accounts.subproj/Account.m
Cannot set persistent account on account with unsaved account properties
<%@ %p> ID=%@ active=%sactive
not 
 displayName=%@
Account
%@:%@@%@
NOT 
, error:
v12@?0i4@"NSError"8
success
failure
v12@?0B4@"NSError"8
Domain
PLAIN
-[MFAccount certUIService]
0 && "Must be implemented by subclass"
NO_PASSWORD_PROVIDED_FOR_USER_FORMAT
NO_PASSWORD_PROVIDED_FOR_ACCOUNT_FORMAT
PASSWORD_INACCESSIBLE_FOR_ACCOUNT_FORMAT
LOGIN_DISABLED_FOR_ACCOUNT_FORMAT
  account : %@
mf_publicDescription
T@"NSString",R,C,N
accountForRenewingCredentials
T@"ACAccount",R
persistentAccount
parentAccount
parentAccountIdentifier
T@"NSString",R
properties
T@"NSDictionary",R
uniqueId
identifier
syncStoreIdentifier
managedTag
type
username
T@"NSString",&,N
hostname
displayName
AccountConfigUsernameIncludesDomain
Protocol
POPAccount
IMAPAccount
name
service
note
unsupported
null
UTF-8
domain
cellular-data
TestAccountConfiguration
EasySetupHost
mdev.apple.com
EasySetupUseSSL
iphone-services.apple.com
https
http
/iconfig/conf
POST
Apple iPhone MailConfig v%@
User-agent
domain=%@&carriers=%@&version=1
EmailDomains
Incoming
Outgoing
protocol
IMAP
requires
authentication
usernameIncludesDomain
SMTP
lang
content
v12@?0@"MFAccount"4B8
FAILED_LOGIN
Delayed
SMTP_CONNECTION_FAILED_MESSAGE_FORMAT
Assistant
CONNECTION_FAILED_MESSAGE_FORMAT
CHECKING_CONNECTION
Checking connection
performsValidationInBackground
validationInvocation
T@"MFMonitoredInvocation",R,N
delegate
T@,N,V_delegate
accountIsValid
accountSupportsSSL
error
T@"MFError",R,N
account
T@"MFAccount",R,N
MonitoredActivityStarted
MonitoredActivityEnded
MonitoredActivityDidAddActivityTarget
MonitoredActivityDidRemoveActivityTarget
MonitoredActivityPrimaryTargetChanged
MonitoredActivityMessage
NetworkConnectionEstablished
MonitoredActivityDictMessage
MonitoredActivityCurrentCount
MonitoredActivityMaxCount
MonitoredActivityReset
MonitoredActivityCurrentItemProgress
MonitoredActivityOldPrimaryTarget
MonitoredActivityNewPrimaryTarget
MonitoredActivityInvocation
MonitoredActivityReasonCompacting
MonitoredActivityReasonFetching
MonitoredActivityReasonArchiving
MonitoredActivityReasonDeleting
MonitoredActivityReasonJunking
MonitoredActivityReasonMoving
MF_INDETERMINATE_PROGRESS_FORMAT
%@...
RESET
[%@] %@
AddedTarget
RemovedTarget
mailbox
T@"MFMailboxUid",&,V_mailbox
canBeCancelled
TB,N
shouldCancel
isRemoteSearch
TB,N,V_isRemoteSearch
CRAM-MD5
GSSAPI
KERBEROS_V4
X-APOP
X-KPOP
NTLM
DIGEST-MD5
MFPlainAuthScheme
MFCRAM_MD5AuthScheme
MFNTLMAuthScheme
MFDigestMD5AuthScheme
size
TI,R,N,V_currentSize
maximumSize
TI,N,V_maximumSize
maximumLatency
Td,N,V_maximumLatency
MFReloadNetworkLoggingNotification
LogActivityOnAllPorts
LogActivityOnPort
LogActivityOnHost
logLock
%@ _socket: %p
-[MFConnection _setupSocketWithSettings:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Accounts.subproj/Connection.m
_socket
DONT_KNOW_SERVICE_PORT
AUTH_NOT_SUPPORTED_FORMAT
AUTH=
-[MFConnection writeBytes:length:dontLogBytesInRange:]
Z_STREAM_ERROR != err
Internal error: -[%@ %@] needs to be implemented in a concrete subclass.
-[MFConnection startCompression]
zlibStream
1.2.11
==== Connection State ====
    Host: %@
    Port Number: %u
    SSL Version: %@
    Socket: %p
    Thread: %p
isFetching
lastUsedTime
Td,R,N
capabilities
authenticationMechanisms
securityProtocol
hasBytesAvailable
loginDisabled
%@<%@>:%d %s SSL (%s)%s%s%s%@
direct
indirect
 (opportunistic)
 disallows trust prompt
, source application: 
certUIService
T@"NSString",C,N,V_certUIService
T@"NSString",C,N,V_hostname
serviceName
T@"NSString",C,N,V_serviceName
T@"NSArray",C,N,V_clientCertificates
portNumber
TI,N,V_portNumber
usesSSL
TB,N,V_usesSSL
tryDirectSSL
TB,N,V_tryDirectSSLConnection
CONNECTED
READ
READ(encrypted)
WROTE
WROTE(encrypted)
CONNECTION_TIMED_OUT
HOST_UNREACHABLE
MF_SSL_CONNECTION_FAILURE
CONNECTION_REFUSED
CONNECTION_FAILED
SSL_CERT_CHAIN_INVALID_FORMAT
The certificate for the server is invalid.
SSL_BAD_CERT_FORMAT
The format of the certificate for the server is bad.
SSL_UNKNOWN_ROOT_CERT_FORMAT
The root certificate for this server could not be verified.
SSL_NO_ROOT_CERT_FORMAT
There is no root certificate for this server.
SSL_CERT_EXPIRED_FORMAT
The certificate for this server has expired.
SSL_HOST_MISMATCH_MESSAGE
SSL_GENERIC_READ_ERROR
SSL_ALERT_TITLE_FORMAT
Unable to verify SSL server %@
[Omitted]
SSL_GENERIC_WRITE_ERROR
_fillBuffer
MESSAGE_AUTH_CRAM_MD5
MD5 Challenge-Response
%02x
NOT (%@)
SELECT messages.ROWID FROM %@WHERE %@
messages.ROWID IN (%@)
 UNION 
 AND 
 OR 
NULL
date_received
date_last_viewed
messages.ROWID
messages.external_id
cpsearch(subject, '%@', %d)
messages.message_id
%@ %@ %lld
%@ %@ %@
sender LIKE '%%%@%%'
cpsearch(sender, '%@', %d)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/CriterionAdditions.m
Only MessageRuleIsEqualTo is supported for ListIDHashCriterionType
messages.list_id_hash = %lld
cpsearch(IFNULL(sender, '') || ' ' || IFNULL(subject, '') || ' ' || IFNULL(_to, '') || ' ' || IFNULL(cc, ''), '%@', %d)
messages.conversation_id IN (%@)
messages.conversation_id NOT IN (%@)
(_to LIKE '%%%@%%' OR cc LIKE '%%%@%%')
cpsearch(IFNULL(_to, '') || ' ' || IFNULL(cc, ''), '%@', %d)
(messages.flags & %@) = %@
deleted = '%d'
journaled = '%d'
sender_vip = '%d'
(conversations.flags&1) > 0
(conversations.flags&(1<<1)) > 0
((messages.flags&(63<<10))>>10) BETWEEN 1 AND 62
(messages.flags&(1<<39)) > 0
(messages.flags&(1<<40)) > 0
(messages.flags&(3<<39)) > 0
and64
not and64
%@(messages.flags, %@)
unsupported criterion type %ld
Qualifier not supported
mailbox %@ IFNULL((SELECT ROWID FROM mailboxes WHERE %@), -1)
mailbox IN (SELECT ROWID FROM mailboxes WHERE %@)
LIKE
NOT LIKE
'%@'
'%%%@%%'
'%@%%'
'%%%@'
ASHTTPConnectionErrorDomain
T@"MFError",&,N,V_error
status
Ti,R,N,V_status
bytesRead
TI,R,N,V_bytesRead
bytesWritten
TI,R,N,V_bytesWritten
MFWalkUpDAErrorChain
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/DataAccess/DAMailAccount.m
error && "Error ref passed in to here must not be NULL."
ExchangeActiveSync
Exchange ActiveSync
Exchange
DAMailAccount_OfflineCacheLock
%@%@
DAChangedFolders
SEARCH_ALL_MAILBOXES
Main
kDAMailAccountAllMailboxesFolderID
com.apple.Preferences
com.apple.dataaccess.dataaccessd
com.apple.Accounts
com.apple.datamigrator
com.apple.managedconfiguration.profiled
DAFolderID
v8@?0@"MFOfflineCacheOperation"4
junk
junk e-mail
junk email
70FB9178-576E-4CAA-A08E-F68D57BFD01E
should never make account conduits in %@.
folderID must be non-nil
v8@?0@"MFDAFolderChangeResult"4
EASOfflineFolderActions
&<>:;/()+'"\
MAILBOX_NAME_INCLUDES_SPECIAL_CHARACTERS
mbox
MCAccountIsManaged
FolderID
B8@?0@"MFLibraryMessage"4
Archive
Junk
requested relative path for unsupported mailbox type %d
ForceSourceIsManaged
exchangeAccountIcon
outlookAccountIcon
HatesAppleDesign
@apple.com
.apple.com
appleAccountIcon
Expected a DAMailbox
B8@?0@"MFOfflineCacheOperation"4
reachable
unreachable
SMIME_MISSING_REMOTE_ENCRYPTION_CERT_MESSAGE
MIME_GENERIC_REMOTE_ENCRYPTION_CERT_MESSAGE
An error occurred while retrieving the encryption certificate.
SMIME_CANT_ENCRYPT_TITLE
Unable to Encrypt
virtualAllSearchMailbox
T@"MFMailboxUid",&,N,V_virtualAllSearchMailbox
DAMailboxUid
RelativePath
 folderID=%@
folderID
T@"NSString",C
MFDAMailAccountConsumer_doneCondition
should have same number of requests and consumers
_MFDAResolveRecipientsConsumer_Lock
T@"NSError",R
-[MFDAMailAccountSyncConsumer initWithCurrentTag:accountID:requests:consumers:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/DataAccess/DAMailAccountSyncConsumer.m
requests.count == consumers.count && "Number of requests does not match number of consumers"
we failed to find a sync actions consumer! requests: %@
DOWNLOADING_STATUS
Downloading
T@"NSString",R,N,V_tag
streamConsumer
T@,&,N,V_streamConsumer
moreAvailable
TB,R,N,V_moreAvailable
@sum.size
DAMailMessage
T@"DAMailMessage",R,N,V_DAMailMessage
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/DataAccess/DAMessageContentConsumer.m
sanity check 
 removal
sanity check 
 removal.
requestedFormat
Ti,N,V_requestedFormat
dataConsumer
T@"<MFCollectingDataConsumer>",&,N,V_dataConsumer
alternatePartConsumer
T@"<MFCollectingDataConsumer>",&,N,V_alternatePartConsumer
consumerFactory
T@"<MFMessageDataConsumerFactory>",&,N,V_consumerFactory
message
T@"DAMailMessage",R,&,N,V_message
bodyData
T@"NSMutableData",R,&,N,V_bodyData
timeOfLastActivity
Td,R,N,V_timeOfLastActivity
191AF69B-0088-47D2-AD66-6C9D08949C46
meeting.ics
-[MFDAMessageStore fetchNumMessages:preservingUID:options:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/DataAccess/DAMessageStore.m
[[self library] isKindOfClass:[MFMailMessageLibrary class]]
update consumer queue should be empty at this point.
-[MFDAMessageStore _remoteIDsMatchingSearchText:predicate:limit:offset:filterByDate:handler:]
v12@?0i4@"MFMailMessageStoreSearchResult"8
-[MFDAMessageStore issueFlagUpdates:forMessages:]
should only have LibraryMessages in %s
-[MFDAMessageStore loadMeetingExternalIDForMessage:]
-[MFDAMessageStore loadMeetingDataForMessage:]
-[MFDAMessageStore loadMeetingMetadataForMessage:]
multipart
alternative
boundary
mixed
text
plain
application
octet-stream
attachment
filename
base64
calendar
rfc822
was cancelled
timed out
-[MFDAMessageStore _fetchDataForMimePart:range:isComplete:consumer:]
pending-draft
backedByVirtualAllSearchMailbox
TB,N,V_backedByVirtualAllSearchMailbox
shouldSend
isUserRequested
fetchable messages should have non-zero generationNumer
-[_MFDADeferredSetFlagsOperation initWithCoder:]
[aDecoder allowsKeyedCoding] && "aDecoder must allow keyed coding"
OnFlags
OffFlags
MessageID
-[_MFDADeferredSetFlagsOperation encodeWithCoder:]
[aCoder allowsKeyedCoding] && "aCoder must allow keyed coding"
-[_MFDADeferredSetFlagsOperation performWithAccount:offlineCache:]
[offlineCache selectedMailboxID]
%@ message-id "%@", on-flags %llu, off-flags %llu
-[_MFDADeferredDeleteMessageOperation initWithCoder:]
-[_MFDADeferredDeleteMessageOperation encodeWithCoder:]
-[_MFDADeferredDeleteMessageOperation performWithAccount:offlineCache:]
%@ message-id "%@"
monitor
T@"MFActivityMonitor",&,N,Vmonitor
T@"MFError",&,N,Verror
should only reach here in the error case.
done
@"<NSCopying>"8@?0@"MFDAMessage"4
v16@?0@"MFMailboxUid"4@"NSArray"8^B12
latestDateToAdd
T@"NSDate",&,N,VlatestDateToAdd
earliestDateAdded
T@"NSDate",R,&,N,VearliestDateAdded
searchResult
T@"MFMailMessageStoreSearchResult",R,&,N,VsearchResult
succeeded
TB,R,N,V_succeeded
data
T@"NSData",&,N,V_data
store
T@"MFDAMessageStore",&,N,V_store
should not have error and response
should not get streaming responses
T@"<MFDAStreamingContentConsumer>",&,N,V_streamConsumer
hasLocalCopyOfData
TB,N,V_hasLocalCopyOfData
library
T@"MFMessageLibrary",&,N,V_library
T@"MFMessage",&,N,V_message
progressFilter
T@"MFProgressFilterDataConsumer",&,N,V_progressFilter
expectedLength
TI,N,V_expectedLength
dataWasBase64
TB,R,V_dataWasBase64
fetchSucceeded
TB,R,V_fetchSucceeded
multipart/alternative; boundary="%@"
Unknown remote identifier. No valid longID or serverID found
Success
Failures 
Interrupted
Journal
Vault
BEGIN IMMEDIATE
COMMIT
ROLLBACK
creating journal directory
-[MFDbJournal _writeToDisk:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/DbJournal.m
creating journal file
setting protection class
0 && "failed to set protection class"
wrote wrong number of version bytes to journal
wrote wrong number of bytes to journal
-[MFDbJournal _processJournalFile:db:]
buf && "failed to allocate buffer during journal merge"
opening journal file
executing SQL statement from journal (%s)
SELECT url FROM mailboxes WHERE reconcile = '1'
getting mailboxes to be reconciled
B12@?0^{sqlite3=}4B8
-[MFDbJournal mergeWithLibrary:]
_journalStatements.count == 0 && _onMergeEnvelopeUpdates.count == 0
UPDATE mailboxes SET reconcile = ? WHERE url = ?
%05d.log
DeliveryAccounts
ShouldUseAuthentication
DeliveryAccountWillBeRemoved
DeliveryAccountsDidChange
%@:%@
SMTPServers
MaxMessageBytes
%@@%@
HTTP MD5 Digest
realm
nonce
cnonce
digest-uri
response
maxbuf
charset
utf-8
stale
algorithm
md5-sess
cipher-opts
rspauth
auth
auth-int
auth-conf
%08x
%@/%@
Digest session key to server-to-client signing key magic constant
Digest session key to client-to-server signing key magic constant
AUTHENTICATE
:00000000000000000000000000000000
<HTML><BODY>
</BODY></HTML>
From 
AppleTextBreakLocale
<BLOCKQUOTE type="cite">
<SPAN>
 &nbsp; &nbsp;
&nbsp;
&lt;
&gt;
&amp;
</SPAN><BR>
</BLOCKQUOTE>
System/Library/PrivateFrameworks/DataDetectorsCore.framework/DataDetectorsCore
DDURLifier
EEE, d MMM yyyy HH:mm:ss ZZ
en_US_POSIX
ja_JP_TRADITIONAL
REPLY_ATTRIBUTION_SENDER
%@ <%@>
REPLY_ATTRIBUTION
On %@, at %@, %@ wrote:
lowPriority
TB,R,N,GisLowPriority,V_lowPriority
desiredQoS
TI,R,N,V_desiredQoS
pthread
T^{_opaque_pthread_t=l^{__darwin_pthread_handler_rec}[4088c]},R,N,V_pthread
InvocationQueue_lock
com.apple.message.invocationqueue.keybag
DebugWorkerThreads
MFInvocationQueue starting invocation %p [%s %s]
MFInvocationQueue finished invocation %p [%s %s] in %5.5fs
==== %@Invocation Queue <%@: %p> ====
Shared 
number of running threads: %d
==== Queued ====
  %@
(empty)
maxThreadCount
TI,N
threadPriorityTrigger
Ti,N,V_threadPriorityTrigger
threadRecycleTimeout
Td,N,V_threadRecycleTimeout
invocationCount
threadCount
TI,R,N,V_numThreads
com.apple.message.InvocationQueueState
Metadata Lock
temp-
 libraryID=%u remoteID=%@
@"NSDictionary"4@?0
Attachments
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/LibraryMessage.m
Expected message %@ to be self %@
com.apple.message.searchableIndex
com.apple.message.searchableIndex.indexingQueue
com.apple.message.searchableIndex.dataSource
com.apple.message.searchableIndex.indexingQueue.batch
v8@?0@"NSDictionary"4
v8@?0@4
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/LibrarySearchableIndex.m
[middleware conformsToProtocol:@protocol(MFLibrarySearchableIndexMiddleware)]
==== Searchable Index State ====
  transaction:                    %lld
  active:                         %@ (rc=%lld)
  foreground:                     %@
  client state fetched:           %@
  coalesce timer fired:           %@
  scheduled processing:           %@
  needs refresh:                  %@
  scheduled refresh:              %@
  needs verification:             %@
  scheduled verification:         %@
  indexing batch size:            %lu
  data source batch size:         %lu
  maximum batch size:             %lu
  remaining time budget:          %.4fs
  remaining item overage budget:  %ld
  pending items:                  %lu (%p)
  pending removals:               %lu (%p)
  pending domain removals:        %lu (%p)
Indexed Empty Subjects:
%@-%@
date
budget
com.apple.mobilemail.spotlight.underDailyBudget
com.apple.mobilemail.spotlight.exceededDailyBudget
Reset Indexing Budget
com.apple.message.resetIndexingBudgetTimer
v8@?0@"NSObject<OS_xpc_object>"4
com.apple.mobilemail.spotlight.verificationFailed
v12@?0I4@"MFFuture"8
com.apple.message.spotlightVerification
DisableSpotlightVerification
SpotlightState.json
v8@?0@"_MFLibrarySearchableIndexClientState"4
suspending
already suspended
still resumed
suspend
state
resumeCount
resuming
already resumed
still suspended
resume
@"MFLibrarySearchableIndexItem"8@?0@"NSString"4
I8@?0I4
com.apple.mobilemail.spotlight.indexingTime
Begin Indexing
countOfItemsIndexed
elapsedTime
itemsPerSecond
End Indexing
pending
remainingIndexingBudget
remainingIndexingBudgetOverage
[MFLibrarySearchableIndex - %@]
@"NSNumber"8@?0@"NSDictionary"4
v8@?0@"NSError"4
i12@?0@4@8
-[MFLibrarySearchableIndex _indexItems:fromRefresh:]_block_invoke
item != otherItem
@"NSString"8@?0@"MFLibrarySearchableIndexItem"4
B16@?0@"MFLibrarySearchableIndexItem"4I8^B12
B8@?0@"MFLibrarySearchableIndexItem"4
@"NSArray"4@?0
transaction
Tq,R,G_transaction
foreground
TB,N,G_isForeground,S_setForeground:
budgetConfiguration
T@"_MFLibrarySearchableIndexBudgetConfiguration",R,N,V_budgetConfiguration
dataSource
T@"<MFLibrarySearchableIndexDataSource>",N,V_dataSource
pendingIndexItemsCount
yyyy-MM-dd HH:mm:ssZ
<%@: %p> version=%@ date=%@ transaction=%lld
build
Tq,N,V_transaction
transactionValue
T@"NSNumber",R,N
transactionDate
T@"NSDate",&,N,V_transactionDate
systemBuildVersion
T@"NSString",C,N,V_systemBuildVersion
<%@: %p> %@ %@
criterion
T@"MFMessageCriterion",&,N,V_criterion
mailboxIDs
T@"NSIndexSet",C,N,V_mailboxIDs
<%@: %p> %lu added items, %lu removed items, %lu removed domains
itemsRequiringIndexing
T@"NSArray",C,N,V_itemsRequiringIndexing
removedIdentifiers
T@"NSArray",C,N,V_removedIdentifiers
removedDomainIdentifiers
T@"NSArray",C,N,V_removedDomainIdentifiers
-[MFLibrarySearchableIndexItem init]
%@.%u
T@"NSString",R,C,N,V_identifier
domainIdentifier
T@"MFMailMessage",R,&,N,V_message
searchableItem
T@"CSSearchableItem",R,&,N,V_searchableItem
indexingType
Ti,N,V_indexingType
T@"NSData",&,N,V_bodyData
hasCompleteBodyData
TB,N,V_hasCompleteBodyData
v16@?0@"<NSCopying>"4@"NSSet"8^B12
count
identifiers
purgedIdentifiers
deletedIdentifiers
i12@?0@"NSString"4i8
IndexingBudgetPeriodInSeconds
IndexingBudgetInSeconds
IndexingBudgetResumeOverageCount
budgetPeriodInSeconds
Ti,R,N,V_budgetPeriodInSeconds
budgetInSeconds
Ti,R,N,V_budgetInSeconds
budgetResumeOverageCount
Ti,R,N,V_budgetResumeOverageCount
xpcGracePeriod
Tq,R,N
B16@?0@"NSSet"4@"NSSet"8@"NSSet"12
kSearchableIndexQueryKeyIntervalForSpotlightFailureSimulation
-[MFLibrarySearchableIndexQuery init]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/LibrarySearchableIndexQuery.m
<%@: %p>
not started
v8@?0@"NSArray"4
%s%s%s%s%s
f070
 %@ 
(%@)
%@ = '%@*'%@
@"NSString"8@?0@"NSString"4
progress
T@"NSProgress",R
intervalForSpotlightFailureSimulation
logPrefixString
T@"NSString",&,N,V_logPrefixString
queryStatusString
T@"NSString",&,N,V_queryStatusString
queryString
T@"NSString",R,C,N,V_queryString
mutableFetchAttributes
T@"NSMutableArray",&,N,V_mutableFetchAttributes
mutableProtectionClasses
T@"NSMutableArray",&,N,V_mutableProtectionClasses
mutableRankingQueries
T@"NSMutableArray",&,N,V_mutableRankingQueries
fetchAttributes
T@"NSArray",C,N
protectionClasses
rankingQueries
gathering
completed
cancelled
failed
<%@:%p libraryID=%u uid=%u flags=0x%x>
TL,R,N
dateReceivedInterval
dateSentInterval
conversationHash
mailboxID
messageIDHash
flagged
deleted
senderVIP
knownToHaveAttachments
TB,R,N,GisKnownToHaveAttachments
libraryMessage
TB,R,N,GisLibraryMessage
libraryID
TL,R,N,Vuid
messageFlags
TQ,R,N,VmessageFlags
T@"MFMailboxUid",R,W,N
TI,R,N,VdateReceived
TI,R,N,VdateSent
externalID
T@"NSString",R,N,VexternalID
Tq,R,N,VconversationHash
TI,R,N,VmailboxID
Tq,R,N,VmessageIDHash
TI,R,N,VlibraryID
StoreServerCountChanged
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/LibraryStore.m
messages shouldn't have a zero generation number.
FetchWithoutLimits
oldFlagsByMessage
SUCCESS
FAILED
X-Apple-Content-Length: %lu
I12@?0@"MFMessage"4i8
earliestReceivedDate
T@"NSDate",&,N,V_earliestReceivedDate
Mailboxes
LocalAccountId
Local
PERSONAL_MAILBOXES
Local Mailboxes
MAILBOX_EXISTS_FORMAT
x-apple-transient-drafts
local
EmailAddresses
ReceiveEmailAliasAddresses
LastEmailAliasesSyncDate
FullUserName
SMTPDisabled
CustomSignature
SMTPAlternateIdentifiers
DraftsMailboxName
SentMessagesMailboxName
TrashMailboxName
ArchiveMailboxName
JunkMailboxName
ArchiveMessages
CachePolicy
DefaultSendingAccount
MFMailDefaultSendingAccountDidChange
defaultAddress
MFNameKey
MailAccounts
MailAccountInvalidateMeetingCache
MailboxUserInfoDidChange
AccountMailboxListingDidChange
mboxes
MailboxAttributes
MailboxChildren
MailboxName
MailboxExtraAttributes
MailAccountContentsDidChange
MailAccountContentsDidChangeUids
MailboxUpdatedWithNoChanges
MailAccountCurrentURLDidChange
MFMailAccountPushedMailboxUidsDidChange
v12@?0@"NSArray"4@"NSError"8
B8@?0@"MailAccount"4
Outbox
@"MFMailboxUid"8@?0@"MailAccount"4
AccountPath
CachedMailboxenLock
MailAccountDeletionLock
MailAccount LibraryID Lock
@"MFMailMessageStore"8@?0@"MFMailboxUid"4
Library/Mail
%@-%@@%@
SMTPIdentifier
SMTPCarrierFallbackAllowed
SYNCHRONIZING_WITH_FILE_SYSTEM_FORMAT
Synchronizing with file system
B8@?0@"MFMailboxUid"4
i12@?0@"MFMailboxUid"4@"MFMailboxUid"8
Unknown
MAILBOX_NAME_INCLUDES_PATH_SEPARATOR
RENAME_FAILED
DELETE_FAILED_FORMAT
-[MailAccount storeClass]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Accounts.subproj/MailAccount.m
plist
-[MailAccount libraryID]
0 && "account must have a library ID"
SaveSentMessages
MFMailboxDictClientCount
MFMailboxDictLock
ChokeLock
-[MailAccount didFinishActionForChokePoint:coalescePoint:withResult:]
Active Dataclasses Lock
.mboxCache.plist
OldChildren
NewChildren
 path=%@
-%@-(%@)
INBOX
Drafts
Sent Messages
Deleted Messages
LogDeleteActivity
IncludeDefaultSecurePortNumber
 (%@)
AccountIcon
otherAccountIcon
-[MailAccount _setValueInAccountLookAsideProperties:forKey:subKey:]
[dictionary isKindOfClass:[NSDictionary class]]
SendingIdentities
EncryptionIdentities
-[MailAccount archiveDestinationForMailbox:]
[self supportsArchiving] && "only accounts that support archiving should call into this"
shouldArchiveByDefault
TB,R
sourceIsManaged
mailboxPathExtension
supportsFastRemoteBodySearch
TB,R,N,V_supportsFastRemoteBodySearch
needsRemoteSearchResultsVerification
CacheAllMessages
CacheMessagesAsRead
CacheNoMessages
CacheAllBodies
"%@"
_readMailboxCache
self->_rootMailboxUid
BOOL _readMailboxCache(MailAccount *)
<Unknown Function>
InvalidMailboxUidType
RootlessMailboxUid
GenericMailboxUid
JunkMailboxUid
ArchiveMailboxUid
TrashMailboxUid
SentMessagesUid
DraftsMailboxUid
OutboxUid
InboxUid
RootMailboxUid
INBOXSpecialMailboxUid
JunkSpecialMailboxUid
ArchiveSpecialMailboxUid
TrashSpecialMailboxUid
SentMessagesSpecialMailboxUid
DraftsSpecialMailboxUid
OutboxSpecialMailboxUid
MailboxUidDidBecomeInvalidNotification
MFMailboxUidWasRenamedNotification
LastViewedMessageInMailbox
LastViewedMessageInMailboxDate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Accounts.subproj/MailboxUid.m
should not have a path component and a account on the same mailboxuid.
*** Orphaned mailbox %@
INBOX_SPECIAL_MAILBOX_NAME
Inbox
DRAFTS_SPECIAL_MAILBOX_NAME
SENT_MESSAGES_SPECIAL_MAILBOX_NAME
Sent
TRASH_SPECIAL_MAILBOX_NAME
Trash
OUTBOX_SPECIAL_MAILBOX_NAME
ARCHIVE_SPECIAL_MAILBOX_NAME
JUNK_SPECIAL_MAILBOX_NAME
URLString
Notes
 relativePath=%@
<%@ %p> ID=%u type=%@ attributes=%d
Info.plist
IsDirty
suggestionsLostMessageSearchResultCount
suggestionsLostMessageSearchTimestamp
extraAttributes
T@"NSArray",&,N,V_extraAttributes
%@ (
SEND_MESSAGE_FORMAT
Sending message: %@
NO_SUBJECT
No subject
INTERNAL_DELIVERY_ERROR_FORMAT
NO_RECIPIENTS
compositionSpecification
T@"NSDictionary",&,N,V_compositionSpecification
conversationFlags
TQ,N,V_conversationFlags
TB,N,V_isUserRequested
FORWARDED_MESSAGE_PREFIX
Begin forwarded message:
<%@ %p> conversationID=%lld messageID=%lld received=%@
T@"MFMailboxUid",R,N
modSequenceNumber
shouldUseMailDrop
TB,N,V_shouldUseMailDrop
TQ,N
_Encoding
MailMessageLibraryConversationHasMerged
MailMessageLibraryNotificationsConversationIDKey
MailMessageLibraryNotificationsOldConversationIDKey
MailMessageLibraryMessagesHaveNewData
MailMessageLibraryNotificationsMessagesKey
MailMessageLibraryWillBecomeUnavailable
MailMessageLibraryDidBecomeAvailable
MailMessageLibraryDidFinishReconciliation
MailMessageLibraryDidFinishReconciliationOfMailbox
MailMessageLibraryReconciledMailboxKey
MailMessageLibraryProtectedDataAvailibilityKey
.reset-database
@"MFLibraryMessage"8@?0@"NSNumber"4
_MessageLibraryHandle-%p
_MessageLibraryJournal-%p
com.apple.message.library
com.apple.message.library.stats
com.apple.message.library.keybag
UPDATE messages SET flags = (flags|:flags) WHERE rowid = :rowid
:flags
:rowid
setting flags
SELECT flags FROM messages WHERE ROWID = ?;
Q12@?0Q4
UPDATE messages SET flags = ((flags | ?) & ?)%@ WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?)
mass updating flags
v20@?0r^v4{_NSRange=II}8^B16
@"MFLibrarySearchableIndexItem"8@?0@"MFLibraryMessage"4
SELECT messages.message_id, messages.conversation_id, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, messages.date_sent FROM messages JOIN protected.messages AS protected_messages ON messages.rowid = protected_messages.rowid WHERE subject LIKE ? AND mailbox = ?
%%%@
querying subject references for threads
INSERT INTO threads (message_id, reference, is_originator) VALUES (?, ?, NULL)
inserting THREAD references
v16@?0Q4^B12
UPDATE messages SET conversation_id = ?, content_index_transaction_id = NULL, flags = flags & ~(1<<33) WHERE rowid = ?
inserting conversation id into message row
INSERT OR IGNORE INTO conversations (conversation_id) VALUES (?)
inserting row into conversations table
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id, message_id) SELECT ?, reference FROM THREADS WHERE message_id=?
inserting row into conversation_id_message_id table (1)
INSERT OR REPLACE INTO conversation_id_message_id (conversation_id, message_id, date_sent) VALUES (?, ?, ?)
inserting row into conversation_id_message_id table (2)
UPDATE messages SET conversation_id = ?, content_index_transaction_id = NULL, flags = flags & ~(1<<33) WHERE conversation_id = ?
udpating other conversations to point to this one
UPDATE OR IGNORE conversation_id_message_id SET conversation_id = ? WHERE conversation_id = ?
DELETE FROM conversations WHERE conversation_id = ?
deleting row from conversations table
SELECT protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, protected_messages.subject, remote.ROWID, original.ROWID, original.url, content_type, messages.message_id, messages.external_id, messages.unique_id, messages.list_id_hash FROM messages LEFT OUTER JOIN protected.messages AS protected_messages ON messages.rowid = protected_messages.rowid LEFT OUTER JOIN mailboxes AS remote ON messages.remote_mailbox = remote.ROWID LEFT OUTER JOIN mailboxes AS original ON messages.original_mailbox = original.ROWID WHERE messages.ROWID = ?
preparing statement to add message
fetching fields for message
INSERT INTO messages (remote_id, date_sent, date_received, mailbox, remote_mailbox, original_mailbox, flags, read, flagged, deleted, sender_vip, visible, size, encoding, content_type, message_id, sequence_identifier, external_id, unique_id, list_id_hash, journaled) values (:remote_id, :date_sent, :date_received, :mailbox, :remote_mailbox, :original_mailbox, :flags, :read, :flagged, :deleted, :sender_vip, :visible, :size, :encoding, :content_type, :message_id, :sequence_identifier, :external_id, :unique_id, :list_id_hash, :journaled)
:remote_id
:date_sent
:date_received
:mailbox
:remote_mailbox
:original_mailbox
:read
:flagged
:deleted
:sender_vip
:visible
:size
:encoding
:content_type
:message_id
:sequence_identifier
:external_id
:unique_id
:list_id_hash
:journaled
inserting message (unprotected)
preparing insert statement
INSERT INTO protected.messages (message_id, sender, subject, _to, cc, bcc) values (%u, %Q, %Q, %Q, %Q, %Q);
UPDATE messages SET journaled = '0' WHERE rowid = %u;
INSERT OR REPLACE INTO pop_uids (mailbox, uid, date_added) VALUES (?, ?, ?);
inserting POP UID
v20@?0q4q12
@"MFMailboxUid"8@?0@"MFLibraryMessage"4
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id, message_id) VALUES (?, ?)
inserting row into conversation_id_message_id table (3)
UPDATE messages SET message_id = ? WHERE rowid = ?
inserting message_id digest into message row
SELECT message_id FROM messages WHERE rowid = ?
pulling out the faked message-id
loading messages
preparing statement for send messages query
error performing query: %@
SELECT date_received FROM messages WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND flags & 128 = 0 ORDER BY date_received ASC LIMIT 1;
SELECT date_received FROM messages WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND content_index_transaction_id IS NOT NULL AND flags & 128 = 0 ORDER BY date_received ASC LIMIT 1;
SELECT date_received FROM messages WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND flags & 128 = 0 ORDER BY date_received DESC LIMIT 1;
SELECT rowid, date_received, date_sent, conversation_id, mailbox, flags, message_id FROM messages WHERE mailbox = (SELECT rowid FROM mailboxes WHERE url = ?) AND deleted = '0' AND journaled = '0' AND flags & 128 = 0
attached
not attached
SELECT COUNT(DISTINCT(messages.message_id)) %@;
SELECT mailboxes.url, COUNT(DISTINCT(messages.message_id)) %@ GROUP BY 1;
SELECT conversation_id FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) GROUP BY conversation_id ORDER BY MAX(date_received) LIMIT 1
:url
SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) ORDER BY date_received ASC LIMIT 1
SELECT m.ROWID, pm.sender FROM messages m JOIN protected.messages pm ON (m.ROWID = pm.message_id) WHERE m.conversation_id = :hash ORDER BY m.read, m.date_received
SELECT m.ROWID, pm.sender FROM messages m JOIN protected.messages pm ON (m.ROWID = pm.message_id) WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND m.conversation_id = :hash ORDER BY m.read, m.date_received
 LIMIT %ld
:hash
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND deleted = '0' ORDER BY date_received DESC, ROWID DESC LIMIT :limit OFFSET :offset;
:limit
:offset
SELECT messages.rowid, remote_id, date_received, date_sent, flags, size, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, mailbox, original_mailbox, content_type, protected_message_data.data, encoding FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN protected.messages AS protected_messages ON messages.rowid = protected_messages.rowid LEFT OUTER JOIN message_data ON selection.message_id = message_data.message_id AND message_data.part = :summaryPartName LEFT OUTER JOIN protected.message_data AS protected_message_data ON message_data.rowid = protected_message_data.rowid;
:summaryPartName
DELETE FROM temp_selected_messages;
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND deleted = '0';
SELECT messages.rowid, remote_id, date_received, date_sent, flags, size, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, mailbox, original_mailbox, content_type, protected_message_data.data, encoding FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN protected.messages AS protected_messages ON messages.rowid = protected_messages.rowid LEFT OUTER JOIN message_data ON selection.message_id = message_data.message_id AND message_data.part = :summaryPartName LEFT OUTER JOIN protected.message_data AS protected_message_data ON message_data.rowid = protected_message_data.rowid WHERE protected_message_data.data IS NULL;
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND deleted = '0' AND rowID >= :rowID LIMIT :limit
:rowID
SELECT messages.rowid, remote_id, date_received, date_sent, flags, size, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, mailbox, original_mailbox, content_type, protected_message_data.data, encoding FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN protected.messages AS protected_messages ON messages.rowid = protected_messages.rowid LEFT OUTER JOIN message_data ON selection.message_id = message_data.message_id AND message_data.part = :summaryPartName LEFT OUTER JOIN protected.message_data AS protected_message_data ON message_data.rowid = protected_message_data.rowid ORDER BY rowid ASC;
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE rowid >= 0 AND rowid <= :maxRowId ORDER BY rowid DESC LIMIT :limit;
:maxRowId
SELECT messages.rowid, remote_id, date_received, date_sent, flags, size, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, mailbox, original_mailbox, content_type, NULL, conversation_id, encoding, external_id, messages.message_id, NULL, unique_id FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN protected.messages AS protected_messages ON messages.rowid = protected_messages.rowid;
INSERT INTO temp_selected_messages SELECT rowid FROM messages WHERE mailbox = ifnull((SELECT rowid FROM mailboxes WHERE url = :url), -1) AND deleted = '0' AND rowid >= :rowID;
SELECT messages.rowid, remote_id, date_received, date_sent, flags, size, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, mailbox, original_mailbox, content_type, protected_message_data.data, encoding FROM temp_selected_messages AS selection LEFT OUTER JOIN messages ON selection.message_id = messages.rowid LEFT OUTER JOIN protected.messages AS protected_messages ON messages.rowid = protected_messages.rowid LEFT OUTER JOIN message_data ON selection.message_id = message_data.message_id AND message_data.part = :summaryPartName LEFT OUTER JOIN protected.message_data AS protected_message_data ON message_data.rowid = protected_message_data.rowid WHERE protected_message_data.data IS NULL ORDER BY rowid ASC LIMIT :limit;
UPDATE mailboxes SET unread_count = ? WHERE url = ?
updating cached unread count
@8@?0@"NSString"4
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE flags&%llu = 0 AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&16 > 0 AND flags&2 = 0) AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0) AND mailbox IN (%@)
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((flags&(3<<39)>>39) > 0 AND flags&1 = 0) AND mailbox IN (%@)
url = %Q
SELECT ROWID FROM mailboxes WHERE %@
SELECT unread_count FROM mailboxes WHERE url = ?
SELECT flagged_count FROM mailboxes WHERE url = ?
SELECT attachment_count FROM mailboxes WHERE url = ?
SELECT to_cc_count FROM mailboxes WHERE url = ?
SELECT deleted_count FROM mailboxes WHERE url = ?
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND mailbox IN (%@)
SELECT count(*) FROM messages WHERE mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) AND (flags & %llu = 0) AND deleted = '0'
SELECT total_count - deleted_count FROM mailboxes WHERE url = ?
SELECT COUNT(rowid) FROM messages WHERE mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) AND flags & %llu AND deleted = '0'
SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags & %llu = 0) AND (deleted = '0') AND mailbox IN (%@)
SELECT total_count FROM mailboxes WHERE url = ?
SELECT server_unread_count FROM mailboxes WHERE url = ?
SELECT count() FROM (SELECT content_index_transaction_id FROM messages WHERE mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY ROWID DESC LIMIT %lu) WHERE content_index_transaction_id NOTNULL
SELECT count() FROM messages WHERE mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) AND content_index_transaction_id NOTNULL
UPDATE mailboxes SET server_unread_count = ? WHERE url = ?
updating server unread-only-on-server count
SELECT most_recent_status_count - last_sync_status_count FROM mailboxes WHERE url = ?
UPDATE mailboxes SET last_sync_status_count = ?, most_recent_status_count = ? WHERE rowid = ?
updating unseen count
SELECT most_recent_status_count FROM mailboxes WHERE url = ?
UPDATE mailboxes SET most_recent_status_count = ? WHERE rowid = ?
%s FROM messages WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY messages.date_received LIMIT 1
finding message with earliest date
%s FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND messages.remote_id = ? LIMIT 1
finding message for UID
%s FROM messages %s WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = :url)AND messages.remote_id IN (:beginset
:beginset
SELECT remote_id, flags FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY remote_id DESC
finding maximum remote ID
SELECT remote_id, flags FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY remote_id
SELECT sequence_identifier FROM mailboxes WHERE url = ?
loading mailbox sequence identifier
UPDATE mailboxes SET sequence_identifier = ? WHERE ROWID = ?
setting mailbox sequence identifier
SELECT MIN(sequence_identifier) FROM messages WHERE mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) AND remote_id IN (?
%llu
loading per-message minimum sequence identifier
UPDATE messages SET sequence_identifier = ? WHERE ROWID = ?
setting per-message sequence identifier
UPDATE messages SET sequence_identifier = ? WHERE MAILBOX IN (SELECT ROWID FROM mailboxes WHERE url = ?) AND remote_id IN(?
setting en masse per-message sequence identifier
SELECT ROWID, remote_id, flags, mailbox, date_received, date_sent, conversation_id, message_id, external_id FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) ORDER BY remote_id
SELECT ROWID, remote_id, flags, mailbox, date_received, date_sent, conversation_id, message_id, external_id FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND remote_id >= ? AND remote_id <= ? ORDER BY remote_id
fetching message details
SELECT ROWID, remote_id, flags, mailbox, date_received, date_sent, conversation_id, message_id, external_id FROM messages WHERE remote_mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND remote_id >= ? AND remote_id <= ? ORDER BY remote_id DESC LIMIT ?
SELECT messages.ROWID, remote_id, date_received, date_sent, flags, size, NULL, NULL, NULL, NULL, NULL, mailbox, original_mailbox, content_type, NULL, conversation_id, encoding, external_id, messages.message_id, NULL, unique_id FROM messages WHERE messages.ROWID = ? LIMIT 1
SELECT messages.ROWID, remote_id, date_received, date_sent, flags, size, NULL, NULL, NULL, NULL, NULL, mailbox, original_mailbox, content_type, NULL, conversation_id, encoding, external_id, messages.message_id, NULL, unique_id FROM messages WHERE messages.ROWID = ? AND mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) LIMIT 1
SELECT messages.ROWID, remote_id, date_received, date_sent, messages.flags, size, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, mailbox, original_mailbox, content_type, protected_message_data.data, messages.conversation_id, encoding, external_id, messages.message_id, unique_id, conversations.flags, messages.list_id_hash FROM messages JOIN protected.messages AS protected_messages ON messages.ROWID = protected_messages.ROWID LEFT OUTER JOIN message_data ON messages.ROWID = message_data.message_id AND message_data.part = 'summary' LEFT OUTER JOIN protected.message_data AS protected_message_data ON protected_message_data.rowid = message_data.rowid LEFT OUTER JOIN conversations ON messages.conversation_id = conversations.conversation_id WHERE messages.ROWID = ? LIMIT 1
SELECT messages.ROWID, remote_id, date_received, date_sent, messages.flags, size, protected_messages.subject, protected_messages.sender, protected_messages._to, protected_messages.cc, protected_messages.bcc, mailbox, original_mailbox, content_type, protected_message_data.data, messages.conversation_id, encoding, external_id, messages.message_id, unique_id, conversations.flags, messages.list_id_hash FROM messages JOIN protected.messages AS protected_messages ON messages.ROWID = protected_messages.ROWID LEFT OUTER JOIN message_data ON messages.ROWID = message_data.message_id AND message_data.part = 'summary' LEFT OUTER JOIN protected.message_data AS protected_message_data ON protected_message_data.rowid = message_data.rowid LEFT OUTER JOIN conversations ON messages.conversation_id = conversations.conversation_id WHERE messages.ROWID = ? AND mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) LIMIT 1
SELECT messages.ROWID, remote_id, date_received, date_sent, messages.flags, size, NULL, NULL, NULL, NULL, NULL, mailbox, original_mailbox, content_type, messages.conversation_id, encoding, external_id, messages.message_id, NULL, unique_id, conversations.flags, messages.list_id_hash FROM messages LEFT OUTER JOIN conversations ON messages.conversation_id = conversations.conversation_id WHERE messages.ROWID = ? LIMIT 1
SELECT messages.ROWID, remote_id, date_received, date_sent, messages.flags, size, NULL, NULL, NULL, NULL, NULL, mailbox, original_mailbox, content_type, messages.conversation_id, encoding, external_id, messages.message_id, NULL, unique_id, conversations.flags, messages.list_id_hash FROM messages LEFT OUTER JOIN conversations ON messages.conversation_id = conversations.conversation_id WHERE messages.ROWID = ? AND mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) LIMIT 1
AND mailbox IN (SELECT ROWID FROM mailboxes WHERE url = ?) 
%s FROM messages %s WHERE messages.ROWID = ? %sLIMIT 1
finding message for ROWID
SELECT mailbox FROM messages WHERE rowid = ?
Getting mailbox of the current message for filtering conversations
SELECT conversation_id FROM messages WHERE rowid IN (SELECT message_id FROM threads WHERE reference IN (SELECT reference FROM threads WHERE message_id = ?));
Ref Ref Error! Ref!
SELECT conversation_id FROM messages WHERE message_id IN (SELECT reference FROM threads WHERE message_id = ?);
Ref Error!
SELECT messages.conversation_id FROM threads, messages WHERE reference IN (SELECT message_id FROM messages WHERE rowid = ?) AND messages.rowid = threads.message_id;
Deref error!
SELECT conversation_id FROM messages WHERE message_id = ? AND rowid != ?;
Message error!
SELECT threads.message_id, reference FROM threads LEFT OUTER JOIN messages ON reference = messages.message_id WHERE threads.message_id IN (SELECT rowid FROM messages WHERE conversation_id in (SELECT conversation_id FROM messages WHERE rowid = ?)) AND messages.rowid IS NULL
Getting references that do not exist in the DB in this conversation.
SELECT url FROM mailboxes WHERE ROWID = ?;
-[MFMailMessageLibrary mailboxURLsForIDs:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/MailMessageLibrary.m
urlsByID.count == mailboxIDs.count
SELECT rowid FROM mailboxes WHERE url = ?;
-[MFMailMessageLibrary _canSelectMessagesWithOptions:db:]
NULL != db
SELECT conversation_id, sync_key FROM conversations WHERE sync_key NOT NULL
SELECT flags FROM conversations WHERE conversation_id = ?
fetching conversation flags
UPDATE conversations SET flags = ? WHERE conversation_id = ?
setting conversation flags
UPDATE conversations SET flags = ?, sync_key = ? WHERE conversation_id = ?
setting conversation flags and sync key
%lld
SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE message_id IN (%@)
finding conversation id
SELECT message_id FROM conversation_id_message_id WHERE conversation_id = ? ORDER BY date_sent DESC LIMIT ?
finding message ids for conversation id
SELECT value FROM properties WHERE key = ?
INSERT OR REPLACE INTO properties (key, value) VALUES (?,?)
DELETE FROM properties WHERE key = ?
%@ property %@
updating
deleting
DELETE FROM messages WHERE ROWID = ?
UPDATE pop_uids SET flags = ? WHERE mailbox = ? AND uid = ?
deleting message
clearing flags in pop_uids
DELETE FROM messages WHERE mailbox IN (SELECT ROWID FROM mailboxes where url = '%q') AND flags & %d
deleting messages
UPDATE mailboxes SET url = '%q' WHERE url = '%q';
DELETE FROM mailboxes WHERE url = '%q'
deleting mailbox URL
renaming mailbox
DELETE FROM messages WHERE mailbox = %d
deleting all messages from mailbox
DELETE FROM mailboxes WHERE rowid = %d
deleting mailbox row
SELECT url FROM mailboxes WHERE %@
fetching mailboxes for accountURL
DELETE FROM messages WHERE ROWID IN (SELECT ROWID FROM messages WHERE mailbox = %d LIMIT %d)
deleting mailbox
Messages
%@.%@.%@
emlxpart
SELECT rowid FROM message_data WHERE message_id = ? AND part = ?
searching for existing message_data entry
INSERT INTO message_data (message_id, part, partial, complete, length) VALUES (:message_id, :part, :partial, :complete, :length)
UPDATE message_data SET message_id = :message_id, part = :part, partial = :partial, complete = :complete, length = :length WHERE rowid = :rowid
:part
:partial
:complete
:length
inserting message data (unprotected)
INSERT OR REPLACE INTO protected.message_data (message_data_id, data) VALUES (%u, NULL);
INSERT OR REPLACE INTO protected.message_data (message_data_id, data) VALUES (%u, X'%s');
INSERT OR REPLACE INTO protected.message_data (message_data_id, data) VALUES (%u, %Q);
Could not get mailbox for message %p (store: %p)
INSERT OR REPLACE INTO message_metadata (message_id, key, data) VALUES (:message_id, :key, :data)
:key
:data
inserting metadata
SELECT data FROM message_metadata WHERE message_id = :message_id AND key = :key
fetching metadata
SELECT key, data FROM message_metadata WHERE message_id = :message_id
fetching all metadata
SELECT data FROM protected.message_data WHERE rowid = (SELECT rowid FROM message_data WHERE message_id = ? AND part = ?)
fetching message data
@12@?0r^v4i8
DELETE FROM protected.message_data WHERE message_data_id IN (SELECT rowid FROM message_data WHERE message_id = ? AND (part IS NULL OR part == ? ))
Deleting rows from protected index
Preparing delete statement
DELETE FROM message_data WHERE message_id = ? AND (part IS NULL OR part == ? )
Deleting rows
SELECT complete FROM message_data WHERE message_id = ? and part = ?
SELECT length FROM message_data WHERE message_id = ? AND part IS NULL
fetching data length
addresses AS sender JOIN messages ON sender.ROWID = messages.sender %s
addresses AS recipient JOIN recipients on recipient.ROWID = recipients.address_id JOIN messages ON recipients.message_id = messages.ROWID %s
attachments AS attachment JOIN messages ON attachment.message_id = messages.ROWID %s
mailboxes JOIN messages ON mailboxes.ROWID = messages.mailbox %s
messages %s
@"MFMessageCriterion"8@?0@"MFMessageCriterion"4
%s FROM %s WHERE %s
%s FROM %s WHERE %s%s
 ORDER BY date_received%s, messages.ROWID%s
 DESC
 LIMIT %lu OFFSET %lu
preparing statement for iteration
INSERT INTO accounts (text_id) VALUES (?)
creating an entry for an account
SELECT ROWID FROM accounts WHERE text_id = ? LIMIT 1
getting an account library ID
DELETE FROM accounts WHERE text_id = ?
deleting an account entry
 AND messages.mailbox+0 IN (SELECT ROWID FROM mailboxes WHERE %@) 
INSERT INTO offline_cache_operations (account_id, completed, last_temporary_id, operation_data) VALUES (?, '0', ?, ?)
appending an operation to the offline cache
UPDATE offline_cache_operations SET completed = '1' WHERE rowid = ? 
deleting offline cache operations
SELECT ROWID, last_temporary_id, operation_data FROM offline_cache_operations WHERE account_id = ? AND completed = '0' ORDER BY rowid ASC
getting offline cache operation blob
getting offline cache operations
INSERT INTO offline_cache_replay_data (account_id, replay_data) VALUES (?, ?)
appending replay data to the offline cache
SELECT replay_data FROM offline_cache_replay_data WHERE account_id = ? ORDER BY rowid ASC
getting offline cache replay data blob
processing offline cache replay data
DELETE FROM offline_cache_operations WHERE account_id = ?
DELETE FROM offline_cache_replay_data WHERE account_id = ?
deleting offline cache replay data
UPDATE pop_uids SET del = 1 WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND uid = ?;
setting pop_uid.del = 1
SELECT uid FROM pop_uids WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND del NOT NULL;
SELECT uid FROM pop_uids WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND del =  1;
SELECT uid FROM pop_uids WHERE mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?);
SELECT uid FROM pop_uids AS uid LEFT OUTER JOIN messages AS message ON uid.mailbox = message.remote_mailbox AND uid.uid = message.remote_id WHERE uid.mailbox = (SELECT ROWID FROM mailboxes WHERE url = ?) AND message.rowid IS NULL OR (message.flags & 2) > 0;
SELECT message_id FROM messages_deleted
collecting deleted message identifiers
DELETE FROM protected.messages WHERE rowid IN (SELECT * FROM messages_deleted)
DELETE FROM protected.message_data WHERE rowid IN (SELECT * FROM message_data_deleted)
DELETE FROM messages_deleted
DELETE FROM message_data_deleted
cleaning up protected tables
v16@?0@"NSString"4I8^B12
checking database consistency
i8@?0@"NSString"4
SELECT COUNT(*) from messages WHERE rowid NOT IN (SELECT rowid FROM protected.messages);
SELECT COUNT(*) from protected.messages WHERE rowid NOT IN (SELECT rowid FROM messages);
SELECT COUNT(*) from message_data WHERE rowid NOT IN (SELECT rowid FROM protected.message_data);
SELECT COUNT(*) from protected.message_data WHERE rowid NOT IN (SELECT rowid FROM message_data);
SELECT COUNT(*) FROM messages
SELECT COUNT(*) FROM message_data
SELECT COUNT(*) FROM messages_deleted
SELECT COUNT(*) FROM message_data_deleted
SELECT COUNT(*) FROM messages WHERE journaled = '1'
SELECT COUNT(*) FROM mailboxes WHERE reconcile = '1'
SELECT COUNT(*) FROM protected.messages
SELECT COUNT(*) FROM protected.message_data
DELETE FROM messages WHERE journaled = '1'
deleting journaled entries from messages table
Detected messages marked as journaled after successful reconciliation
-[MFMailMessageLibrary contentProtectionStateChanged:previousState:]
0 && "Device is unlocked but Protected Data is not available"
Protected Index
-[MFMailMessageLibrary _reconcileAfterKeybagUnlock]
kMFMailMessageLibraryProtectedDataUnreconciled == _protectedDataAvailability
com.apple.message.reconciliation
CREATE TEMPORARY TABLE temp_selected_messages (message_id INTEGER);
protected
PRAGMA %@.freelist_count;
PRAGMA %@.page_count;
PRAGMA %@.incremental_vacuum(%d);
main
-[MFMailMessageLibrary beginTransaction:withType:forMailbox:]
journal
beginning transaction
committing transaction (main)
rolling back transaction
-[MFMailMessageLibrary _connectionForWriting:]
nil != result
wrapper.writer
-[MFMailMessageLibrary unlockDB:]
connection.db == db
connection wrapper replaced without %@ connection %p being checked in to its pool %p. (%@)
writer
reader
-[MFMailMessageLibrary _activeConnectionWithDB:]
nil != connection
[connection db] == db
-[MFMailMessageLibrary _setActiveJournal:]
!(journal && existingJournal)
-[MFMailMessageLibrary appendToJournal:mergeUpdateStatement:]
Envelope Index
Access to protected data went away during transaction (NOT a crash)
Moving database files
SavedFolders
Removing 
DELETE FROM conversations WHERE sync_key IS NULL AND conversation_id NOT IN (SELECT DISTINCT(conversation_id) FROM conversation_id_message_id WHERE date_sent > ?) AND conversation_id NOT IN (SELECT DISTINCT(conversation_id) FROM messages)
pruning conversation tables
UPDATE messages SET content_index_transaction_id = NULL, flags = flags & ~(1<<33) WHERE content_index_transaction_id > :tid
UPDATE spotlight_tombstones SET transaction_id = NULL WHERE transaction_id > :tid
:tid
invalidating spotlight %@ transaction identifiers
B12@?0@"NSString"4@"NSString"8
tombstone
v16@?0{_NSRange=II}4^B12
UPDATE spotlight_tombstones SET transaction_id = :tid WHERE type = :type AND identifier IN 
DELETE FROM spotlight_tombstones WHERE type = :type AND identifier IN 
:type
assigning spotlight tombstone transaction identifiers
v20@?0^@4{_NSRange=II}8^B16
DELETE FROM spotlight_tombstones WHERE transaction_id < :tid
purging old tombstone identifiers
(:identifier
:identifier
SELECT ROWID FROM messages WHERE
UPDATE messages SET content_index_transaction_id = :tid WHERE
UPDATE messages SET content_index_transaction_id = :tid, flags = flags & ~(1<<33) WHERE
UPDATE messages SET content_index_transaction_id = :tid, flags = flags | (1<<33) WHERE
assigning content index transaction identifiers
 ROWID IN (:rowid
%s FROM messages %s WHERE %@ %@ ORDER BY date_received DESC, messages.ROWID LIMIT %lu
content_index_transaction_id IS NULL AND deleted = '0'
content_index_transaction_id IS NOT NULL AND deleted = '0' AND reindex.type = %ld
SELECT type, identifier FROM spotlight_tombstones WHERE transaction_id IS NULL
INSERT OR REPLACE INTO spotlight_tombstones (type, identifier) VALUES (:type, :identifier)
inserting spotlight tombstone
v16@?0@"MFLibraryMessage"4I8^B12
UPDATE messages SET content_index_transaction_id = NULL, flags = flags & ~(1<<33)
 WHERE mailbox IN (SELECT ROWID FROM mailboxes WHERE %@)
 WHERE mailbox = %u
resetting content index transaction identifiers
SELECT url FROM mailboxes
getting mailbox URLs
searchableIndex
T@"MFLibrarySearchableIndex",&,N,V_searchableIndex
T@"<MFMailMessageLibraryDelegate>",N,V_delegate
protectedDataAvailability
start
Td,N,V_start
duration
Td,N,V_duration
protectedDataAvailable
TB,N,V_protectedDataAvailable
messages
TI,N,V_messages
protectedMessages
TI,N,V_protectedMessages
messageData
TI,N,V_messageData
protectedMessageData
TI,N,V_protectedMessageData
messagesDeleted
TI,N,V_messagesDeleted
messageDataDeleted
TI,N,V_messageDataDeleted
messagesMarkedAsJournaled
TI,N,V_messagesMarkedAsJournaled
mailboxesNeedingReconcilication
TI,N,V_mailboxesNeedingReconcilication
connection wrapper %p deallocated without %@ connection %p being checked in to its pool %p.
-[_MFLibrarySQLiteConnectionWrapper decrementRefcount]
_refcount > 0
connection
T@"MFProtectedSQLiteConnection",R,N,V_connection
TB,R,N,V_writer
refcount
TI,R,N,V_refcount
invalid
TB,N,V_invalid
transmogrifier
T@?,C,N,V_transmogrifier
SELECT 1 FROM messages WHERE ROWID = ?;
testing for message existence
SELECT length FROM message_data WHERE message_id = ? AND part = ?
DELETE FROM message_data WHERE message_id = ? AND part = ?
DELETE FROM message_data WHERE message_id = ? AND part IS NULL
deleting message data
_IsAllowedToAccessProtectedData
nil != userAgent
com.apple.message.statisticsLogging
UPDATE messages SET flags = :flags, read = :read, flagged = :flagged, deleted = :deleted, sender_vip = :sender_vip, encoding = :encoding, remote_id = :uid
 WHERE ROWID = :rowid
:uid
INSERT OR REPLACE INTO spotlight_message_reindex (message_id, type) VALUES (:message_id, :type)
inserting or replacing spotlight_message_reindex entry
sender_vip
, %@ = '%d'
v16@?0@"NSString"4@8^B12
audio
video
INSERT INTO mailboxes (url) values ('%q')
inserting mailbox URL
SELECT messages.conversation_id 
SELECT rowid, date_received, date_sent, messages.conversation_id, mailbox, messages.flags, messages.message_id
SELECT COUNT(DISTINCT(message_id)) 
SELECT messages.ROWID, remote_id, date_received, date_sent, messages.flags, size, %s, %s, %s, %s, %s, mailbox, original_mailbox, content_type, %s, messages.conversation_id, encoding, external_id, messages.message_id
protected_messages.subject
protected_messages.sender
protected_messages._to
protected_messages.cc
protected_messages.bcc
protected_message_data.data
 JOIN protected.messages AS protected_messages ON messages.ROWID = protected_messages.ROWID
 JOIN mailboxes AS mailbox ON messages.mailbox = mailbox.ROWID
 LEFT OUTER JOIN message_data ON messages.ROWID = message_data.message_id AND message_data.part = 'summary' LEFT OUTER JOIN protected.message_data AS protected_message_data ON protected_message_data.rowid = message_data.rowid
 JOIN conversations AS conversations ON messages.conversation_id = conversations.conversation_id
 JOIN spotlight_message_reindex AS reindex ON messages.ROWID = reindex.message_id
@"NSString"8@?0@"NSNumber"4
SELECT ROWID, url FROM mailboxes WHERE ROWID IN (%@);
preparing statement for fetching mailbox URLs
iterating results for mailbox URLs
v8@?0^{sqlite3=}4
SELECT ROWID, url FROM mailboxes
selecting mailbox URLs
%@.partial.%@
emlx
%@.%@
SELECT %@ FROM message_data AS a JOIN protected.message_data AS b ON a.rowid = b.rowid AND a.rowid = (SELECT rowid FROM message_data WHERE message_id = ? AND %@)
b.data, a.complete
part = ?
PART IS NULL
b.data
part = ? AND complete IS NOT NULL
part IS NULL AND complete IS NOT NULL
%@ AND partial IS NULL
loading UIDs to delete
_writeDataHolderForMessageAndPart
directory
BOOL _writeDataHolderForMessageAndPart(MFMailMessageLibrary *, LibraryID, NSString *, NSString *, NSString *, MFDataHolder *, BOOL, BOOL)
cannot write partial MIME parts.
flags
mailboxes
previous earliest received date
MailMessageStoreMessageFlagsChanged
MailMessageStoreStructureChanged
MailMessageStoreMessagesAdded
MailMessageStoreMessagesWillBeCompacted
MailMessageStoreMessagesRemoved
MailMessageStoreMessagesAttachmentStorageLocationChanged
MailMessageStoreDidOpen
MailMessageStoreDidClose
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/MessageStores.subproj/MailMessageStore.m
block
Cancelled
Failed
Succeeded
<%@:%p (
result:%@
transfered:%@
failed:%@)>
resultCode
TI,R,N,V_resultCode
failedMessages
T@"NSArray",R,N,V_failedMessages
transferedMessages
T@"NSArray",R,N,V_transferedMessages
+[MFMailMessageStore createEmptyStoreForPath:]
+[MFMailMessageStore storeAtPathIsWritable:]
-[MFMailMessageStore openSynchronously]
-[MFMailMessageStore writeUpdatedMessageDataToDisk]
MAILBOX_DISPLAY_FORMAT
%@ --- %@
<%@: %p (uid=%@)>
destinationMailbox
v12@?0@"MFMailMessageStore"4@"NSArray"8
%@|%lu|%@|%d
com.apple.message.fetchMobileSynchronously
-[MFMailMessageStore _fetchHeaderDataForMessage:downloadIfNecessary:]
-[MFMailMessageStore _rebuildTableOfContentsSynchronously]
messageFlagsMask
&aid=%@
format
flowed
delsp
Partial message, part %@ of %@
To read this message, select all of the parts of the message and select the Message --> MIME --> Combine Messages menu item.
number
total
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Utilities.subproj/MainThread.m
Couldn't find signature for target %p selector %@
VIPCriterion
ThreadNotifyCriterionName
ThreadMuteCriterionName
FlaggedCriterion
UnreadCriterion
ReadCriterion
IncludesMeCriterion
ToMeCriterionName
CcMeCriterionName
HasAttachmentsCriterion
TodayCriterion
Qualifier
Header
Expression
CriterionUniqueId
AllCriteriaMustBeSatisfied
AccountURL
Name
Criteria
DateUnitType
DateIsRelative
(none)
%@Criterion: %@
%@%@  All criteria must be satisfied: %@
%@  Criteria: %@
%@  Name: %@
%@Criterion: %@
%@ Sub-Criterion: 
%@Criterion: %@
%@  Qualifier: %@
%@  Expression: %@
<%@: %p> %@
From
To or Cc
AnyRecipient
 or 
@"NSArray"8@?0@"NSString"4
BeginsWith
EndsWith
IsEqualTo
IsNotEqualTo
DoesNotContain
IsLessThan
IsGreaterThan
ASCIIContains
Contains
Body
SenderIsInAddressBook
SenderIsNotInAddressBook
SenderHeader
AnyMessage
DateReceived
DateLastViewed
DateSent
SenderIsInAddressHistory
SenderIsNotInAddressHistory
AnyRecipientIncludesFullName
NoRecipientIncludesFullName
IsDigitallySigned
IsEncrypted
PriorityIsNormal
PriorityIsHigh
PriorityIsLow
AnyAttachment
Mailbox
MessageNumber
ExternalID
Compound
Flag
NotInTrashMailbox
ContainsAttachments
SpotlightSearch
ConversationID
Negation
MessageIdHash
ListIDHash
ToRecipient
CcRecipient
SenderIsMemberOfGroup
SenderIsNotMemberOfGroup
InSpecialMailbox
NotInASpecialMailbox
@"MFMessageCriterion"8@?0@"MFMailboxUid"4
criterionType
Ti,N
criterionIdentifier
qualifier
Ti,N,V_qualifier
expression
T@"NSString",C,N
libraryIdentifiers
T@"NSIndexSet",&,N,V_libraryIdentifiers
preferFullTextSearch
TB,N,V_preferFullTextSearch
useFlaggedForUnreadCount
TB,N,V_useFlaggedForUnreadCount
includeRelatedMessages
TB,N,V_includeRelatedMessages
expressionIsSanitized
TB,N,V_expressionIsSanitized
includeRemoteBodyContent
TB,N,V_includeRemoteBodyContent
T@"NSString",&,N,V_name
criteria
    
MessageIsRead
MessageIsDeleted
MessageIsJournaled
MessageIsFlagged
MessageWasRepliedTo
MessageWasForwarded
MessageWasRedirected
MessagePriorityLevel
MessageIsEncrypted
MessageIsSigned
MessageSenderIsVIP
MessageToContainsAccountAddress
MessageCcContainsAccountAddress
MessageToOrCcContainsAccountAddress
MFMessageHasAttachments
MessageIsJunk
MessageIsNotJunk
MessageNumberOfAttachmentsChanged
MessageFontSizeDelta
MessageHighlightTextInTOC
MessageHasBeenViewed
MessageViewedDate
MessageIsServerSearchResult
MessageIsThreadSearchResult
MessageDeliveryInProgress
MessageQueuedForDelivery
MessageNeedsSyncConfirmation
shouldUseICSRepresentation
MessageConversationIsVIP
MessageConversationIsMuted
0x%llx (%s
unread
, junk
, not-junk
, deleted
, answered
, forwarded
, redirected
, flagged
, VIP
, encrypted
, signed
, recent
, draft
, server search result
, thread search result
, needs sync
, priority=%x
, partial
, delivery
, temp UID
, indexed message body
MFUIFocusedMessageDidChange
x-apple-msg-load
Library
Mail
summary
meeting
meeting data
meeting metadata
partial
TB,N,GisPartial,V_partial
complete
TB,N,GisComplete,V_complete
dataHolder
T@"MFDataHolder",&,N,V_dataHolder
partName
T@"NSString",&,N,V_partName
com.apple.Message
Message
MFSignerInfoErrorKey
MFMessageSignerTrustDidChangeNotification
SMIME_DAMAGED_SIG
SMIME_UNREADABLE_SIG
There was a problem reading the digital signature for this message.
SMIME_SIG_TITLE
Unable to verify message signature
sender
T@"NSString",R,N,V_sender
commonName
emailAddress
action
Ti,R,N
certificates
readstatus
received-date
from
html
related
inline
-[MFMessageWriter setMessageClassToInstantiate:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Message.subproj/MessageWriter.m
T@"NSDictionary",R,N,V_compositionSpecification
shouldWriteAttachmentPlaceholders
TB,N,V_shouldWriteAttachmentPlaceholders
UseFormatFlowedForWrapping
BAD_CHARSET_FORMAT
BAD_CHARSET_TITLE
Invalid Text Encoding
external-body
local-file
access-type
x-unix-mode
remote-image
unknown
x-apple-content-length
signed
binary
8bit
7bit
quoted-printable
MFAccountLoaderErrorDomain
MailServices
InstantiableMailAccountClasses
GmailAccount
YahooAccount
SMTPAccount
MFUpdateAccountsInPlaceKey
persistentStore
T@"ACAccountStore",R
com.apple.message.applicationStateMonitor
@"MFAppStateMonitor"8@?0@"NSNumber"4
appStateObservable
T@"MFObservable",R,N
TB,R,N,GisForeground
Terminated
Background Task Suspended
Background Running
Foreground Running
Process Server
Foreground Running Obscured
com.apple.mobileconfig
com.apple.mobileprovision
com.apple.ical.ics
com.apple.ical.vcs
com.apple.iwork
com.apple.mail.email
MFAttachmentIsSinglePagePDFKey
<%@: %p> url=%@, path=%@, contentID=%@, mimeType=%@, mimePart=%@, isMailDrop=%d
x-uuencode
v12@?0@"NSData"4@"NSError"8
x-attach-maildrop
x-attach-maildrop-image
MFAttachmentIsPlaceholder
MFAttachmentMailDropMetaData
DisableAttachmentFilters
VERSION:1.0
VERSION:2.0
x-attach-RFC822
message/rfc822
message/delivery-status
x-attach-compose
image/
MFAttachmentFileNameKey
MFAttachmentPathKey
MFAttachmentRemoteImageFileNameKey
MFAttachmentUTTypeKey
application/zip
MFAttachmentMimetypeKey
MFAttachmentDecodedFileSizeKey
MFAttachmentEncodedFileSizeKey
text/html
text/
_MFAttachmentEncodingKey
attachmentManager
T@"MFAttachmentManager",N,V_attachmentManager
isContainedInRFC822
isContainedInCompose
contentID
downloadProgress
T@"NSProgress",&,N,V_downloadProgress
lastProgressBytes
TI,N,V_lastProgressBytes
lastProgressTime
Td,N,V_lastProgressTime
T@"NSURL",C,N,V_url
part
T@"MFMimePart",&,N,V_part
fileName
T@"NSString",C,D,N
path
T@"NSString",R,D
mimeType
disposition
T@"NSString",C,N,V_disposition
remoteImageFileName
decodedFileSize
encodedFileSize
isDataAvailableLocally
shouldAutoDownload
inferredMimeType
fileUTType
isAutoArchive
TB,R,V_isAutoArchive
isPlaceholder
TB,D
placeholder
T@"MFAttachmentPlaceholder",&,N,V_placeholder
mailDropMetadata
T@"MFMailDropMetadata",&,D,N
fetchCompletionBlock
T@?,C,N,V_fetchCompletionBlock
customConsumer
T@"<MFDataConsumer>",&,N,V_customConsumer
wantsCompletionBlockOffMainThread
TB,N,V_wantsCompletionBlockOffMainThread
v16@?0B4@"NSError"8B12
apple_ak
enc_base_image
enc_model
B12@?0^{__CFString=}4^{CGImageMetadataTag=}8
MFMailAttachmentUploadLimitKey
MFMailAttachmentMessageLimitKey
MFMailAttachmentMailDropThresholdKey
MFMailAttachmentPlaceholderThresholdKey
MFMailAttachmentPlaceholdersAvailableKey
MFMailAttachmentMailDropAvailableKey
MFMailAttachmentMailDropConfiguredKey
DisableMailDropCellularLimit
MailDropLowerLimit
MailDropShortExp
mailDrop
whitelistedDownloadDomains
.digitalhub.com
.icloud.com
.icloud-content.com
AttachmentPlaceholderLowerLimit
attachmentDownloadQueue
T@"MFInvocationQueue",R,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/MFAttachmentComposeManager.m
attachments already contains %@
fractionCompleted
FetchDataForURL
com.apple.message.MFAttachmentComposeManager
x-attach-compose://%@
contextID
T@"NSString",R,N,V_contextID
attachmentsBaseURL
T@"NSURL",C,N,V_attachmentsBaseURL
attachments
MFAttachmentDataProviderErrorDomain
T@"NSURL",&,V_url
v16@?0I4I8I12
Could not retrieve library data for attachment.
No Data Found
Invalid attachment URL.
Invalid Attachment URL
messageLibrary
T@"MFMessageLibrary",W,V_messageLibrary
x-attach
MFLocalizedDescriptionKey
MFErrorTitleKey
Could not find a provider for the given URL.
No Provider Found
x-attach://
MFAttachmentCollectionFilterKey
MFAttachmentAttachmentKey
MFAttachmentPrimaryConsumerKey
MFAttachmentMonitorKey
MFAttachmentSyncLockKey
MFAttachmentInvocationURLKey
MFAttachmentInvocationFilterKey
MFAttachmentContentIDKey
MFMailAttachmentCachedSizesChangedNotification
com.apple.mail.attachmentManagerAttachmentArray
com.apple.message.attachmentManager.imagescaling
Invalid attachment URL.  Too few parts.
v16@?0@"NSURL"4@"NSDictionary"8^B12
-[MFAttachmentManager _fetchDataForAttachment:withProvider:syncLock:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/MFAttachmentManager.m
B8@?0@"MFAttachment"4
v8@?0@"MFAttachment"4
Download Canceled.
Download Canceled
=FA=CA=DE{
fileSize
fileURL
application/x-apple-placeholder
%@ %lu [%@] @ %@ : %@ [%s]
MailDrop
@"<MFFuture>"8@?0@"NSData"4
AttachmentPlaceholders
T@"NSString",&,N,V_fileName
T@"NSString",&,N,V_mimeType
T@"NSString",C,N,V_contentID
file
XXXXX.%@
B12@?0@"NSURL"4@"NSError"8
B8@?0@"NSError"4
v8@?0@"NSURL"4
/MobileMailAttachments
R %@
S %@
predictor
T@"<MFMailboxPredictor>",&,N,V_predictor
cache
T@"NSCache",&,N,V_cache
cacheKeysByProperty
T@"NSMutableDictionary",&,N,V_cacheKeysByProperty
Could not find data for compose attachment.
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Message.subproj/MIME.subproj/MFContentErrorDocument.m
mimePart
CANNOT_DECODE_MULTIPART_MESSAGE
This message cannot be displayed because of the way it is formatted. Ask the sender to send it again using a different format or email program.
%@/%@
MFRegisterContentProtectionObserver
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Utilities.subproj/MFContentProtectionObserver.m
nil != observer
NULL != queue
_observationQueue != queue
MFUnregisterContentProtectionObserver
==== MFContentProtectionObserver ====
Recorded state: %@
Unlocked since boot: %s
never
Last lock_status notification: %@ (began observing %@)
Observers:
<%@:%p> (%s)
observer
T@"<MFContentProtectionObserver>",R,N
queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
com.apple.message.MFContentProtectionObserver
_NotifyObserversWithContentProtectionState
kMFContentProtectionStateInvalid != state
kMFContentProtectionStateInvalid != _contentProtectionState
disabled
unlocked
locking
locked
_MFDAFolderChangeConsumer_Lock
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/DataAccess/MFDAFolderChangeConsumer.m
%@ should not be called twice
%@ status %ld, error %@, folderID "%@", folderName "%@"
statusCode
Ti,R,V_statusCode
T@"NSError",R,V_error
T@"NSString",R,V_folderID
folderName
T@"NSString",R,V_folderName
-[_MFDADeferredNewMailboxOperation initWithCoder:]
ParentFolderID
TemporaryFolderID
-[_MFDADeferredNewMailboxOperation encodeWithCoder:]
 (renamed)
folderMap should not contain %@
%@ display-name "%@", parent-folder-id "%@", temporary-folder-id "%@"
-[_MFDADeferredDeleteMailboxOperation initWithCoder:]
-[_MFDADeferredDeleteMailboxOperation encodeWithCoder:]
%@ folder-id "%@"
-[_MFDADeferredModifyMailboxOperation initWithCoder:]
NewParentFolderID
NewDisplayName
-[_MFDADeferredModifyMailboxOperation encodeWithCoder:]
%@ folder-id "%@", new-parent-folder-id "%@", new-display-name "%@"
failed to create deferred operation for folder change %@
-[MFDADeferredMessageMoveOperation initWithCoder:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/DataAccess/MFDAMoveResponseConsumer.m
SourceMailbox
DestinationMailbox
SourceRemoteIDs
OriginalFlags
TemporaryIDs
-[MFDADeferredMessageMoveOperation encodeWithCoder:]
%@ source "%@", destination "%@", %lu messages
incomplete
-[_MFDADeferredSelectMailboxOperation initWithCoder:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/DataAccess/MFDAOfflineCache.m
-[_MFDADeferredSelectMailboxOperation encodeWithCoder:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/DataAccess/MFDAStoreDraftConsumer.m
got non-successful status code %ld for response
got a successful response with no server id
%s %d : Caught exception %@
serverId
T@"NSString",R,N,V_serverId
T@"MFError",R,N,V_error
TB,R,N,V_success
-[MFDADeferredStoreDraftOperation initWithCoder:]
-[MFDADeferredStoreDraftOperation encodeWithCoder:]
%s: consumer returned error: %@
-[MFDADeferredStoreDraftOperation performWithAccount:offlineCache:]
Could not retrieve decrypted data for attachment.
MessageDeliveryFatalError
MessageDeliveryTransientError
MessageDeliveryPermanentError
MessageDeliveryCancelled
MessageDeliveryConfigurationError
MessageDeliverySucceeded
MessageDeliveryQueued
MessageDeliveryMailDropIncomplete
status: %@, duration:%f, bytesSent: %d, isWifi: %d
Ti,N,V_status
bytesSent
TI,N,V_bytesSent
isWifi
TB,N,V_isWifi
attributes
Ti,N,V_attributes
MFMessageErrorDomain
UserFriendlyErrorDescription
RecoveryAttemptorClassName
RequestedWebLoginURLKey
MFAccountsWithErrorsKey
@"NSString"8@?0i4
_MFShortDescription
_MFMoreInfo
MSG_SERVER_ERROR
The server error encountered was: %@
MFSSLErrorCertificateKey
MFSSLErrorCertificateDigestKey
Account Is Locked Out
Unrecoverable Server Error
User Cancelled
Internal
Generic
Unknown Service
Authentication Failed
Server Unavailable
Command Failed
Unsupported Feature
Encryption
Signature
User Confirmation Required
Character Set
No Internet Connection
No Host
Socket Read
Invalid Sender
No Recipients
Invalid Recipient
Sender Mailbox Full
Missing Password
Inaccessible Password
Login Disabled
Account In Use
No Delivery Accounts Configured
Missing Identity
Message Rejected
Message Too Large
Data Blocked By Call
Account Needs Web Login
Multiple Account Errors
Unknown Error Code %d
MFNoErrorLog
account://test
fakedisplayname
test
MFFakeMailAccount
test-unique-id
deliveryAccount
T@"DeliveryAccount",&,N,V_deliveryAccount
fakeFullPath
T@"NSString",C,N,V_fakeFullPath
fakeURLString
T@"NSString",C,N,V_fakeURLString
fakeIsSpecialMailboxUid
TB,N,V_fakeIsSpecialMailboxUid
T@"NSString",&,N,V_displayName
headers
T@"MFMessageHeaders",&,N,V_headers
T@"MailAccount",&,N,V_account
T@"MFMailboxUid",&,N,V_mailbox
<%@: %p> min=%lu, max=%lu, remaining=%lu
fetchMinBytes
TI,N,V_fetchMinBytes
fetchMaxBytes
TI,N,V_fetchMaxBytes
minBytesLeft
TI,N,V_minBytesLeft
Input range:%lu:%lu
Input data:%lu
Output data:%lu
MFFileArchiveStatusOK
MFFileArchiveStatusFatal
MFFileArchiveStatusFailed
MFFileArchiveStatusWarn
MFFileArchiveStatusRetry
MFFileArchiveStatusFailedHeaderWrite
MFFileArchiveStatusFailedDataWrite
MFFileArchiveStatusUnknown
MFFileArchiveDomain
Failed to close archive
hdrcharset=UTF-8:zip:compression=deflate
inputData
T@"NSData",&,N,V_inputData
inputRange
T{_NSRange=II},N,V_inputRange
outputData
T@"NSMutableData",&,N,V_outputData
readerBlock
T@?,C,N,V_readerBlock
writerBlock
T@?,C,N,V_writerBlock
Class:%@
URL:%@
Entries[%@]
B16@?0@4I8^B12
__MACOSX/
T@"NSURL",&,N,V_url
contents
T@"NSData",&,N,V_contents
T@"NSError",R,&,N,V_error
%@ Path:%@ Data:%lu Uncompressed:%lu Range:[%lu:%lu]
IO error
Invalid compression level
Invalid or incomplete deflate data
Out of memory
Buffer error
Zlib version mismatch
MFFileArchiveErrorDomain
Archive entry has no contents assigned
T@"NSString",&,V_path
uncompressedSize
Ti,V_uncompressedSize
compressedRange
T{_NSRange=II},V_compressedRange
isDeflated
TB,V_isDeflated
isDirectory
TB,V_isDirectory
T@"NSData",&,V_contents
mode
ordered
ignoreUserAddresses
confusionThreshold
orderedThreshold
order
conversationID
recipient
listID
weightedThreshold
weights
limitToRecentMessages
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/MailboxPrediction/MFHeuristicsMailboxPredictor.m
[mergedParams[kConfusionThresholdParameterKey] isKindOfClass:[NSNumber class]] || [mergedParams[kConfusionThresholdParameterKey] isKindOfClass:[NSNull class]]
[mergedParams[kOrderParameterKey] isKindOfClass:[NSArray class]]
weighted
[mergedParams[kWeightsParameterKey] isKindOfClass:[NSDictionary class]]
Unknown mode: %@
Predicting for message persistentID=%@, subject="%@"
Aggregate: %@
## Ordered Mode:
Raw counts for %@: %@
Found %.0lf hit for **%@** in %@
Ignoring because it is the message's current mailbox.
Ignoring because count (%.0f) is under threshold (%.0f).
## Summed Weighted Mode:
Raw counts for %@:
Found field=%@ in mailbox=%@: weightedHits=%.1lf
## Weighted Mode:
Found %.0lf (weighted=%.1lf) hits for **%@** in %@
Ignoring because weighted (%.0f) is under threshold (%.0f).
Winner: %@ (weighted=%.1lf)
Unknown field: %@
Not a legal sender address: %@
MFUserCreatedMailboxIDs
Ignoring mailboxes: %@
v16@?0@"NSString"4@"NSNumber"8^B12
Not a legal recipient address: %@
userProfileProvider
T@"<MFUserProfileProvider>",&,N,V_userProfileProvider
T@"<MFQueryableLibraryAdapter>",&,N,V_library
parameters
T@"NSDictionary",&,N,V_parameters
mailboxIDCache
T@"NSCache",&,N,V_mailboxIDCache
debugLog
T@"NSMutableString",&,N,V_debugLog
<BR>
Reply-To
Subject
Date
Resent-To
Resent-Cc
Resent-From
&nbsp; 
<B>%@:</B> 
<B>%@</B><BR>
%@<BR>
com.apple.message.lockStateMonitor
com.apple.message.lockStateMonitor.notifyq
com.apple.springboard.lockstate
lockStateObservable
TB,R,GisLocked
persistentID
com.apple.mobilemail.MailDropDownload
com.apple.mobilemail.MailDropDownloadWIFIOnly
downloadPromise
primaryConsumer
kMFMailDropServiceKey
MainAccount
MailDropDeliveryStateKey
com.apple.largeattachment
mailAttachment
contentType
uploadDate
v12@?0@"CKRecordZoneID"4@"NSError"8
v20@?0@"CKRecordID"4@"NSString"8@"CKAsset"12@"NSError"16
filesize
v16@?0@"CKRecord"4d8
v12@?0@"CKRecord"4@"NSError"8
@"MFFuture"8@?0@"CKRecord"4
v16@?0@"NSArray"4@"NSArray"8@"NSError"12
v12@?0@"CKRecordZone"4@"NSError"8
Could not get zoneID to create zone.
T@"NSArray",&,N,V_attachments
imageArchiveMetadata
T@"MFMailDropMetadata",&,N,V_imageArchiveMetadata
mailDropState
Ti,N,V_mailDropState
https://www.icloud.com/attachment/
https://
expiration-date
x-mac-auto-archive
${f}
${uk}
Ptr:[%p]
Name:[%@]
Size:[%lu]
MIME:[%@]
Auto-archive:[%s]
Expiration:[%@]
UUID:[%@]
MDType:[%lu]
URL:[%@]
Wrapped URL:[%@]
isBanner:[%@]
--------------
%@-%@-%@-%@-%@
T@"NSString",C,N,V_fileName
Ti,V_fileSize
T@"NSString",C,N,V_mimeType
autoArchive
TB,V_autoArchive
directUrl
T@"NSURL",C,N,V_directUrl
wrappedUrl
T@"NSURL",C,N,V_wrappedUrl
expiration
T@"NSDate",C,N,V_expiration
TI,V_flags
UUID
T@"NSString",GUUID,SsetUUID:
isInvalid
TB,V_isInvalid
subject
T@"NSArray",R,C,N
dateReceived
T@"NSDate",R,N
listUnsubscribe
remoteID
T@"<ECMailbox>",R,N
answered
conversationVIP
conversationMuted
messageBody
T@"<ECMimePart>",R,N
TI,R,D,N
Tq,R,D,N
_MFTTRUserPromptLastResponseUserDefaultsKey
_MFTTRUserPromptLastResponseVersionUserDefaultsKey
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/MFMailMessageLibraryMigrator.m
handler
SELECT value FROM properties WHERE key = 'version'
INSERT OR REPLACE INTO properties (key, value) values ('version', ?)
setting library version
preparing library version insert statement
tables.sql
triggers.sql
_ExecuteSQLFile
nil != filename
performing statements from file "%@"
SELECT rowid FROM messages WHERE conversation_id = 0 or conversation_id is NULL
gathering library ids of messages without conversation hashes
UPDATE messages SET conversation_id = ?, content_index_transaction_id = NULL WHERE rowid = ?
updating messages with new conversation hashes
DROP INDEX message_deleted_index
dropping message deleted index
ALTER TABLE messages ADD COLUMN sender_vip;
adding sender_vip column
ALTER TABLE messages ADD COLUMN unique_id;
adding unique_id column
ALTER TABLE messages ADD COLUMN content_index_transaction_id INTEGER;
adding content_index_transaction_id column
CREATE INDEX message_content_index_transaction_id_index ON messages(content_index_transaction_id);
adding content_index_transaction_id index
DROP INDEX IF EXISTS message_conversation_id_index;
CREATE INDEX message_conversation_id_index ON messages(conversation_id, mailbox, read, date_received);
DROP INDEX IF EXISTS message_oldest_conversation_index;
CREATE INDEX message_oldest_conversation_index on messages(mailbox, conversation_id, date_received);
replacing conversation indexes
DROP INDEX IF EXISTS message_sequence_identifier_index;
CREATE INDEX message_sequence_identifier_index ON messages(mailbox, remote_id, sequence_identifier);
adding sequence identifier index
ALTER TABLE mailboxes ADD COLUMN flagged_count INTEGER DEFAULT 0; ALTER TABLE mailboxes ADD COLUMN attachment_count INTEGER DEFAULT 0;
altering mailboxes table
update mailboxes set flagged_count = (select count(*) from messages where mailbox = mailboxes.rowid AND flags&16 > 0);
updating flagged_count
update mailboxes set attachment_count = (select count(*) from messages where mailbox = mailboxes.rowid AND (((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0);
updating attachment_count
ALTER TABLE mailboxes ADD COLUMN to_cc_count INTEGER DEFAULT 0;
INSERT OR REPLACE INTO properties (key, value) VALUES ('MaxRowIdForMigrationToVersion31', (SELECT MAX(rowid) FROM messages));
adding maxrowid property
ALTER TABLE mailboxes ADD COLUMN server_unread_count INTEGER DEFAULT 0;
UPDATE mailboxes SET flagged_count = (select count(*) FROM messages WHERE mailbox = mailboxes.rowid AND flags&16 > 0 AND flags&2 == 0);
CREATE TABLE conversations (conversation_id INTEGER PRIMARY KEY, flags INTEGER DEFAULT 0, sync_key TEXT);
CREATE TABLE conversation_id_message_id (conversation_id INTEGER, message_id INTEGER, date_sent INTEGER DEFAULT 0, UNIQUE (conversation_id, message_id), FOREIGN KEY (conversation_id) REFERENCES conversations(conversation_id) ON DELETE CASCADE ON UPDATE CASCADE);
CREATE INDEX conversation_id_message_id_index ON conversation_id_message_id(conversation_id, message_id); CREATE INDEX message_id_conversation_id_index ON conversation_id_message_id(message_id, conversation_id);
INSERT INTO conversations (conversation_id) SELECT DISTINCT(conversation_id) FROM messages;
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id,message_id,date_sent) SELECT conversation_id, message_id, date_sent FROM messages;
INSERT OR IGNORE INTO conversation_id_message_id (conversation_id,message_id) SELECT messages.conversation_id, threads.reference FROM messages, threads WHERE messages.rowid = threads.message_id;
creating conversations and conversation_id_message_id tables
DROP INDEX IF EXISTS message_infos_index;
CREATE INDEX message_infos_index ON messages(mailbox, deleted, journaled, sender_vip, flags, conversation_id, date_sent, message_id, date_received DESC, ROWID DESC);
updating message_infos_index covering index
UPDATE mailboxes SET total_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET unread_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&1 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET deleted_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&2 > 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET flagged_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&16 > 0 AND flags&2 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET attachment_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((((flags&(63<<10))>>10) BETWEEN 1 AND 62) AND flags&1 = 0) AND (mailbox = mailboxes.ROWID));
UPDATE mailboxes SET to_cc_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE ((flags&(3<<39)>>39) > 0 AND flags&1 = 0) AND (mailbox = mailboxes.ROWID));
updating mailboxes counts
UPDATE mailboxes SET unread_count = (SELECT COUNT(DISTINCT(message_id)) FROM messages WHERE (flags&1 = 0 AND flags&128 = 0 AND flags&1048576 = 0) AND (mailbox = mailboxes.ROWID));
updating mailboxes unread_count
DROP INDEX message_content_index_transaction_id_index;
CREATE INDEX message_content_index_transaction_id_index ON messages(content_index_transaction_id, deleted, date_received DESC, ROWID);
updating message_content_index_transaction_id
CREATE INDEX message_mailbox_content_index ON messages (mailbox, content_index_transaction_id, flags, date_received ASC)
adding message_mailbox_content_index
DROP TABLE IF EXISTS spotlight_tombstones
CREATE TABLE spotlight_tombstones (ROWID INTEGER PRIMARY KEY AUTOINCREMENT,
                                   type INTEGER,
                                   identifier TEXT,
                                   transaction_id INTEGER,
                                   UNIQUE(type, identifier))
CREATE INDEX spotlight_tombstones_transaction_index ON spotlight_tombstones(transaction_id, type, identifier)
adding spotlight tombstones table
UPDATE mailboxes SET server_unread_count = 0 WHERE url LIKE "pop:%";
ALTER TABLE messages ADD COLUMN list_id_hash INTEGER;
adding list_id_hash column
CREATE INDEX message_list_id_hash_index ON messages(list_id_hash);
adding message_list_id_hash_index index
ALTER TABLE mailboxes ADD COLUMN last_sync_status_count INTEGER DEFAULT 0;
ALTER TABLE mailboxes ADD COLUMN most_recent_status_count INTEGER DEFAULT 0;
adding mailboxes status count columns
SELECT DISTINCT mailbox FROM messages WHERE flags&64 = 64;
finding mailbox IDs of draft mailboxes
UPDATE mailboxes SET last_sync_status_count = unread_count + server_unread_count, most_recent_status_count = unread_count + server_unread_count WHERE url LIKE 'imap:%%' AND rowid NOT IN (%s)
updating count columns for non-draft mailboxes
UPDATE mailboxes SET last_sync_status_count = unread_count + server_unread_count, most_recent_status_count = unread_count + server_unread_count WHERE url LIKE 'imap:%'
updating count columns
ALTER TABLE mailboxes ADD COLUMN reconcile;
adding reconcile column
DROP TABLE IF EXISTS spotlight_message_reindex;
CREATE TABLE spotlight_message_reindex (message_id INTEGER,
                                        type INTEGER,
                                        UNIQUE(message_id),
                                        FOREIGN KEY (message_id) REFERENCES messages(ROWID) ON DELETE CASCADE);
CREATE INDEX spotlight_message_reindex_index ON spotlight_message_reindex(message_id, type);
adding spotlight message reindex table
DROP TABLE IF EXISTS mbl_queue;
removing mbl_queue table
ALTER TABLE messages ADD COLUMN journaled DEFAULT '0';
adding journaled column
UPDATE mailboxes SET last_sync_status_count = 0, most_recent_status_count = 0 WHERE url LIKE 'imap:%%' AND rowid IN (%s)
%C%@
v12@?0@"NSString"4S8
%@ = '%@'
%@ LIKE '%@'
%@ LIKE '%@' ESCAPE '%C'
%@ NOT LIKE '%@'
%@ NOT LIKE '%@' ESCAPE '%C'
%@%%
%%%@%%
T@"NSString",&,N,V_expression
@"NSNumber"8@?0@"MFMailMessage"4
B8@?0@"NSString"4
@"NSArray"8@?0@"MailAccount"4
v16@?0@"MFMailboxUid"4@"NSMutableSet"8^B12
mailboxToRemoteIdDictionary
T@"NSMutableDictionary",&,N,V_mailboxToRemoteIdDictionary
continueOffset
T@"NSDate",&,N,V_continueOffset
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Message.subproj/MFMessageCollectionInfo.m
comparator
<%@ %p> hash=%lld messageInfoSet=%@
Trying to add a messageInfo that has a different conversationHash from this collectionInfo
Something is horribly wrong the messageInfo should have been at this index path
isEmpty
firstMessage
T@"MFMessageInfo",R,N
lastMessage
messagesCount
messageCountWithDuplicates
uniqueMessageInfos
allMessageInfos
messageCollectionHash
Tq,R,N,V_messageCollectionHash
duplicatePreferenceComparator
T@?,C,N
BccRecipient
Spotlight
IsRead
HasAttachments
Flagged
@"NSPredicate"8@?0@"NSString"4
@"NSPredicate"8@?0@"MFMessageCriterion"4
@"MFMessageCriterion"8@?0@"NSPredicate"4
T@"<MFMessageCriterionConverterDelegate>",W,N,V_delegate
-[MFMessageInfo hash]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Message.subproj/MFMessageInfo.m
0 && "Tried to get the hash of an object that had no UID"
, sortUid=%u
, sortReceived=%u
<%@: %p; uid=%u; conversation=%lld; messageID=%lld; received=%u%@%@; %@;>
read=%@
, flagged=YES
, isVIP=YES
, hasAttachments=YES
flags={ %@%@%@%@ }
i12@?0@"MFMessageInfo"4@"MFMessageInfo"8
generationNumber
Tq,R,N,V_generationNumber
TI,N,V_uid
TI,N,V_dateReceivedInterval
TI,N,V_dateSentInterval
Tq,N,V_conversationHash
TI,N,V_mailboxID
Tq,N,V_messageIDHash
uidIsLibraryID
isVIP
TB,N,GisKnownToHaveAttachments
sortUid
TI,N,V_sortUid
sortDateReceivedInterval
TI,N,V_sortDateReceivedInterval
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Message.subproj/MFMessageInfoOrderedSet.m
messageInfo.messageIDHash != 0
Inconsitency: this messageID was in _knownMessageIDs, it must be in _mutableMessageInfos
messageID mismatch, did not find the real duplicate
v12@?0I4^B8
messageInfo != nil
replacementMessageInfo != nil
messageInfo.conversationHash == replacementMessageInfo.conversationHash
Could not find the original message info
We just tried to swap the message info, Y U NO at the same index?
Added replacement is a duplicate?! Impossibru!
@"NSArray"8@?0@"MFMessageInfo"4
B16@?0@"MFMessageInfo"4I8^B12
<%@: %p> (
| dupe=%@
T@?,C,N,V_comparator
T@?,C,N,V_duplicatePreferenceComparator
countWithDuplicates
T@"MFMailMessage",&,N,V_message
TI,N,V_libraryID
T@"NSString",C,N,V_subject
subjectPrefixLength
subjectWithoutPrefix
references
T@"MFSparseMutable64IndexSet",&,N,V_references
messageIDsBySubject
T@"NSMutableDictionary",&,N,V_messageIDsBySubject
Ti,N,V_mailboxID
conversationIDHash
Tq,N,V_conversationIDHash
conversationFlagsRef
T^Q,N,V_conversationFlagsRef
Td,N,V_dateSentInterval
senderList
T@"NSArray",C,N,V_senderList
toList
T@"NSArray",C,N,V_toList
ccList
T@"NSArray",C,N,V_ccList
bccList
T@"NSArray",C,N,V_bccList
T@"NSString",C,N,V_sender
T@"NSString",C,N,V_to
T@"NSString",C,N,V_cc
T@"NSString",C,N,V_bcc
participants
T@"MFEmailSet",R,N
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/MailboxPrediction/MFMobileLibraryAdapter.m
Unexpected mailbox object.
groupBy == MFMessageQueryGroupByMailboxPersistentID
NSNumber variable required, got %@
NSString variable required, got %@
NSSet variable required, got %@
T@"MFMailMessageLibrary",&,N,V_library
accounts
T@"NSArray",&,N,V_accounts
_MFDisallowNetworkActivityAssertionKey
_MFMainThreadNetworkingAllowedAssertionKey
_IncrementThreadLocalCounterForKey
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Utilities.subproj/MFNetworkAssertions.m
[countNumber isKindOfClass:[NSNumber class]]
count < NSUIntegerMax
_DecrementThreadLocalCounterForKey
0 < count
_ThreadLocalAssertionForKey
[number isKindOfClass:[NSNumber class]]
B4@?0
com.apple.message.fileCompressionQueueActivity
NetworkConfigurationDidChangeNotification
MFNetworkSimulationBitfieldKey
NetworkSymptonsHasAlternativeAdvice
com.apple.message.mfnetworkcontroller
wi-fi
com.apple.wifi.plist
com.apple.mail.radioPreferences
com.apple.symptoms.hasAlternateAdvice
-[MFNetworkController dealloc]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Utilities.subproj/MFNetworkController.m
NULL == _telephony
NULL == _store
NULL == _reachability
@"<MFCancelable>"8@?0@"<MFObserver>"4
@"NSNumber"8@?0@"MFNetworkController"4
==== Network Controller State ====
    reachability flags: 0x%02x
    has DNS: %s
    wifi enabled: %s
    data context interface ID: %d
    has cell data: %s
    data status indicator: %@
    roaming allowed: %s
    calls: %lu
    background wifi clients: %lu
networkObservable
wifiObservable
awdNetworkDiagnosticReport
T@"AWDMailNetworkDiagnosticsReport",R,N
%s (%d)
-[MFOfflineCache initWithLibrary:account:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/MFOfflineCache.m
library && "library must not be nil"
account && "account must not be nil"
TEMP:%u
-[MFOfflineCache _applyReplayContextTransformation:]
_isReplaying && _replayContext
nextTemporaryMessageID
T@"NSString",R,D,N
selectedMailboxID
T@"NSString",C,N,V_selectedMailboxID
translatedIDsByTemporaryID
T@"NSMutableDictionary",R,N,V_translatedIDsByTemporaryID
failureSnapshotsByTemporaryID
T@"NSMutableDictionary",R,N,V_failureSnapshotsByTemporaryID
-[MFOfflineTransferFailureSnapshot initWithCoder:]
RemoteID
MailboxID
MessageFlags
-[MFOfflineTransferFailureSnapshot encodeWithCoder:]
%@ remote-id "%@", mailbox-id "%@", flags %llu
originalRemoteID
T@"NSString",R,N,V_originalRemoteID
originalMailboxID
T@"NSString",R,N,V_originalMailboxID
originalMessageFlags
TQ,R,N,V_originalMessageFlags
-[_MFSelectMailboxReplayContextTransformation initWithCoder:]
-[_MFSelectMailboxReplayContextTransformation encodeWithCoder:]
-[_MFTranslateTemporaryIDReplayContextTransformation initWithCoder:]
TemporaryID
TranslatedID
-[_MFTranslateTemporaryIDReplayContextTransformation encodeWithCoder:]
-[_MFTransferFailureReplayContextTransformation initWithCoder:]
TransferFailureSnapshot
-[_MFTransferFailureReplayContextTransformation encodeWithCoder:]
-[_MFReplaceTemporaryIDForTransferFailureReplayContextTransformation initWithCoder:]
NewTemporaryID
-[_MFReplaceTemporaryIDForTransferFailureReplayContextTransformation encodeWithCoder:]
-[MFOfflineCacheOperation setRowid:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/MFOfflineCacheOperation.m
![self hasRowid]
rowid
Tq,N,V_rowid
T@"MFMutableMessageHeaders",&,N,V_headers
placeholders
T@"NSArray",&,N,V_placeholders
libraryContent
T@"MFOutgoingLibraryMessageContent",R,N
richtextContent
T@"MFOutgoingRichtextMessageContent",R,N
multipartContent
T@"MFOutgoingMultipartRelatedContent",R,N
T@"MFLibraryMessage",&,N,V_libraryMessage
textPartsAreHTML
TB,N,V_textPartsAreHTML
plaintextAlternative
T@"MFPlainTextDocument",&,N,V_plaintextAlternative
mixedContent
T@"NSArray",&,N,V_mixedContent
htmlBody
T@"NSString",&,N,V_htmlBody
com.apple.mobilemail.sentMessageSize
attachmentContext
T@"MFAttachmentCompositionContext",&,N,V_attachmentContext
originalConversationId
Tq,N,V_originalConversationId
MFPowerAssertionDidExpire
MFBatterySaverModeDidChange
com.apple.message.MFPowerController.state
com.apple.message.MFPowerController.power
v8@?0@"MFAppStateMonitor"4
+[MFPowerController sharedInstance]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Utilities.subproj/MFPowerController.m
instance != nil
plugged in
unplugged
_MFPowerStateDidChange
assertion IS NOT NULL
assertion timer IS NOT nil
com.apple.message.preventSleep
assertion IS NULL
assertion timer IS nil
@8@?0@"NSNotification"4
@"NSNumber"8@?0@"MFPowerController"4
@"NSNumber"8@?0@4
==== Power State ====
  charging: %@
  low-power mode: %@
  holding assertion: %@
==== Internal Assertions ====
  %@: %d
pluggedInObservable
lowPowerModeObservable
pluggedIn
TB,R,GisPluggedIn
batterySaverModeEnabled
TB,R,GisBatterySaverModeEnabled
holdingAssertion
TB,R,GisHoldingAssertion
-[MFProtectedSQLiteConnection attachProtectedDatabase]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/MFProtectedSQLiteConnection.m
NULL != _db
ATTACH DATABASE "%@" AS protected
attaching Protected Index
PRAGMA protected.journal_mode = WAL;
setting journal mode on Protected Index
CREATE TABLE IF NOT EXISTS protected.messages (message_id INTEGER PRIMARY KEY, sender, subject, _to, cc, bcc);
CREATE TABLE IF NOT EXISTS protected.message_data (message_data_id INTEGER PRIMARY KEY, data);
creating Protected Index schema
-[MFProtectedSQLiteConnection detachProtectedDatabase]
DETACH DATABASE protected
detaching Protected Index
isProtectedDatabaseAttached
TB,R,N,V_attached
Could not retrieve RFC822 data for attachment.
ShouldSign
ShouldEncrypt
SigningIdentity
EncryptionIdentity
RecipientCertificates
IdentityRef
IdentityError
ErrorsByRecipient
CertificatesByRecipient
MFSecureMIMECompositionManager_lock
com.apple.mobilemail.MFSecureMIMECompositionManagerQueue
-[MFSecureMIMECompositionManager _determineSigningStatusWithSendingAddress:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Authentication.subproj/MFSecureMIMECompositionManager.m
_signingStatusSemaphore > 0
-[MFSecureMIMECompositionManager _determineEncryptionStatusWithSendingAddress:]
_encryptionStatusSemaphore > 0
-[MFSecureMIMECompositionManager _determineEncryptionStatusWithNewRecipients:]
-[MFSecureMIMECompositionManager compositionSpecification]
_signingIdentity
_encryptionIdentity
SMIME_MISSING_SIGNING_IDENTITY_FORMAT
SMIME_MISSING_ENCRYPTION_IDENTITY_FORMAT
SMIME_OTHER_ENCRYPTION_CERT_ERROR_MESSAGE
SMIME_MISSING_ENCRYPTION_CERT_MESSAGE
T@"<MFSecureMIMECompositionManagerDelegate>"
sendingAddress
sendingAccount
T@"MailAccount",R
signingPolicy
Ti,R
encryptionPolicy
signingStatus
encryptionStatus
recipients
T@"NSSet",R
com.apple.private.accounts.allaccounts
x-apple-maildropbanner
x-apple-maildrop
maildrop-thumbnail
Images.zip
class
data-expiration
data-url
data-filename
data-size
fileCompressionQueue
T@"NSMutableArray",&,N,V_fileCompressionQueue
fileCompressionQueueLock
T@"NSLock",&,N,V_fileCompressionQueueLock
libraryCompressionActivity
T@"NSObject<OS_os_activity>",&,N,V_libraryCompressionActivity
fileCompressionQueueActivity
T@"NSObject<OS_os_activity>",&,N,V_fileCompressionQueueActivity
activityCreated
TB,N,V_activityCreated
GSDeviceName
_SIMULATOR
%@_%@
DEFAULT_SIGNATURE
DEFAULT_SIGNATURE_IPHONE
Sent from my iPhone
SignatureKey
com.apple.mail.MailAccountSignaturesChanged
UseAccountSignatures
<br/><br/>
(?:<br[/]?>){2}
-[MFSparseMutable64IndexSet _incrementStorageIfNecessaryForCount:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Utilities.subproj/MFSparseMutable64IndexSet.m
newStorage && "Must have been able to reallocate size"
i12@?0r^v4r^v8
<%@: %p> [
%llu,
-[MFSQLiteConnection dealloc]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/MFSQLiteConnection.m
NULL == _db
-[MFSQLiteConnection open]
enabling extended error codes
creating custom and64 function
icusearch
creating custom icusearch function
cpsearch
creating custom cpsearch function
setting busy timeout
PRAGMA page_size = 8192;
setting page_size
PRAGMA auto_vacuum = 2;
setting auto_vacuum
PRAGMA cache_size = 1000;
setting cache_size
PRAGMA journal_mode = WAL;
setting journal_mode
PRAGMA foreign_keys = ON;
setting foreign_keys
opening database %s
-[MFSQLiteConnection preparedStatementForPattern:]
preparing statement for query "%@"
-[MFSQLiteConnection beginTransactionWithType:]
BEGIN DEFERRED
BEGIN EXCLUSIVE
0 && "unsupported transaction type"
_transactionType >= type
-[MFSQLiteConnection commitTransaction]
-[MFSQLiteConnection rollbackTransaction]
configuration
T@"MFSQLiteConnectionConfiguration",C,N,V_configuration
pool
T@"MFSQLiteConnectionPool",W,N,V_pool
T^{sqlite3=},R,N,V_db
shared
memory
basePath
T@"NSString",C,N,V_basePath
databaseName
T@"NSString",C,N,V_databaseName
databasePath
databaseFileSystemPath
Tr*,R,N
protectedDatabaseName
T@"NSString",C,N,V_protectedDatabaseName
protectedDatabasePath
protectedDatabaseFileSystemPath
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Library.subproj/MFSQLiteConnectionPool.m
maxConcurrentBackgroundReaders > 0
NULL != waitCounter
nil != connectionWrapper
Preemptively terminated active sqlite connection(s) after device lock (NOT a crash)
T@"<MFSQLiteConnectionPoolDelegate>",V_delegate
cacheSize
maxConcurrentBackgroundReaders
TI,R,V_maxConcurrentBackgroundReaders
maxConcurrentWriters
backgroundReadersWaiting
writersWaiting
T@"MFSQLiteConnection",R,N,V_connection
generation
TI,R,N,V_generation
TI,N,V_type
v8@?0B4
B8@?0@"MFMessageReferenceContext"4
i12@?0@"MFMessageReferenceContext"4@"MFMessageReferenceContext"8
probe_message_update
probe_message_add
probe_message_delete
CREATE TEMPORARY TRIGGER probe_message_update AFTER UPDATE OF flags ON messages BEGIN SELECT probe_message_update(OLD.ROWID, OLD.flags, NEW.flags, NEW.message_id, NEW.mailbox); END
CREATE TEMPORARY TRIGGER probe_message_add AFTER INSERT ON messages BEGIN SELECT probe_message_add(NEW.ROWID, NEW.flags, NEW.message_id, NEW.mailbox); END
CREATE TEMPORARY TRIGGER probe_message_delete AFTER DELETE ON messages BEGIN SELECT probe_message_delete(OLD.ROWID, OLD.flags, OLD.message_id, OLD.mailbox); END
ROW: %u; 
Count: %ld -> %ld; 
Flags: %llu -> %llu (
R: %@ -> %@ | 
SR: %@ -> %@ | 
TSR: %@ -> %@ ); 
dup msgs: %lu;
#Update
SELECT message_id FROM messages WHERE message_id = ? AND rowid != ? AND flags&2 > 0 AND mailbox = ? AND (flags&1 = 0 AND flags&128 = 0 AND flags&1048576 = 0)
SELECT unread_count FROM mailboxes WHERE ROWID = ?
Flags: %llu (
R: %@ | 
SR: %@ | 
TSR: %@ ); 
#Add
#Delete
T@"<NSCopying>",C,N,V_key
T@"MFWeakObjectCache",W,N,V_cache
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Utilities.subproj/MFWeakObjectCache.m
couldn't create a weak reference for %@
bold
italic
fixed
smaller
bigger
x-tad-bigger
x-tad-smaller
fontfamily
color
underline
nofill
excerpt
param
x-fontsize
superscript
subscript
paragraph
signature
heading
footing
comment
no-op
</U>
<SUP>
</SUP>
<SUB>
</SUB>
<SPAN style="
color: %s; 
font-size: %dpt; 
</SPAN>
&nbsp;&nbsp;&nbsp;&nbsp;
<br/>
-[MFMimeEnrichedReader setupFontStackEntry:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Message.subproj/MIME.subproj/MimeEnrichedReader.m
NULL != stackEntry
font-weight: bold
font-style: italic
rgba(%d, %d, %d, 1)
font-family: 
font-face: Helvetica
<%@:%p
_commandStack = %p (%ld entries):
[%@ parameter=%@]
_outputBuffer=%@
_outputString=%@
-------------------------------------------------------------------
v8@?0@"NSNotification"4
Exception raised during monitored invocation of %@, exception: %@
<%@: %p priority: %d target: %@ selector: %s lowPriority: %@>
T@"MFActivityMonitor",R,N,V_monitor
isLowPriority
TB,N,V_isLowPriority
powerAssertionId
T@"NSString",C,N,V_powerAssertionId
,%lu
MFMessageKeychainManagerCertificateDeniedDomain
keychainLock
1.2.840.113635.100.6.7
B8@?0^{__SecIdentity=}4
S/MIME Encryption for %@
com.apple.mobilemail.smime
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Utilities.subproj/NSSetAdditions.m
transform
B8@?0@4
"%@" : %lu
REPLY_SUBJECT_PREFIX
FORWARD_SUBJECT_PREFIX
Fwd:
%@-%d.%@
%@-%d
&apos;
&quot;
<br>
future
T@"MFFuture",R,N
T@"NSURLResponse",R,N,V_response
imap
LOGIN
MESSAGE_AUTH_PLAIN_TEXT
user
pass
string
quoteLevel
ProgressiveMimeParseErrorDomain
Data is not as long as reported
Unable to parse Content-type header in top-level part
No Content-type header found in top-level part
Invalid parser state (%d)
condition
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Utilities.subproj/RequestQueue.m
nobody should be waiting at -dealloc time
x-apple-smime-error
x-apple-smime-signers
--%@
SMIME_CANT_DECRYPT_MESSAGE
This message is encrypted.  Install a profile containing your encryption identity to decrypt this message.
%@://%@
x-attach-SMIME
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Authentication.subproj/SecureMimePart.m
The message body should be a MFMimeBody.
SMIME_CANT_DECRYPT_TITLE
Unable to decrypt message
(Unknown)
lastSecCMSError
Tl,R,N,V_SecCMSError
signers
T@"NSArray",R,N,V_signers
SMIME_CANT_SIGN_MESSAGE
application/pkcs7-signature
sha1
micalg
pkcs7-signature
smime.p7s
SMIME_CANT_SIGN_TITLE
Unable to Sign
SMIME_CANT_ENCRYPT_MESSAGE
An error occurred while trying to encrypt your message. Verify that you have valid certificates in your keychain for all of the recipients.
pkcs7-mime
smime.p7m
enveloped-data
smime-type
storagePath
smtp
FAILED_SEND_TITLE
Cannot Send Mail
FAILED_SEND_SSL_NEEDED
FAILED_SEND
X-AOL-OUTBOX-COPY
PIPELINING
8BITMIME
Enable8BITMIME
BINARYMIME
EnableBINARYMIME
ENHANCEDSTATUSCODES
CHUNKING
DisableCHUNKING
SIZE
AUTH
STARTTLS
> BODY=BINARYMIME
> BODY=8BITMIME
BDAT %lu LAST
B20@?0r*4L8B12B16
 imapmailbox="%@"
SMTP_INVALID_SENDER_ADDRESS
SMTP_SENDING_CONTENT_FAILED
Sending the message content to the server failed.
SMTP_1_BAD_RECIPIENT
SMTPFailureReason
SMTP_SENDING_CONTENT_LATER
Mail will try to send the message again later.
SMTP_BAD_RECIPIENTS
The recipients were rejected by the server.
SMTP_RECIPIENTS_UNRECOGNIZED
Verify that you have addressed this message correctly. Check your SMTP server settings in Mail Preferences and verify any advanced settings with your system administrator.
SMTP_SENDING_FAILED_TITLE
Unable to Send Email
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Delivery.subproj/SMTPConnection.m
Invalid argument %@
SMTP_GENERIC_ERROR_FORMAT
^([0-9]+)([- ])?(.*)$
Unable to init regular expression from %@
-[MFSMTPConnection _readResponseRange:isContinuation:]
[match numberOfRanges] == 4
localhost
SSNT
IPv6:
NO_SMTP_HOST
You have not specified an SMTP server in Mail Preferences. You must specify a server before you can send mail.
SMTP_NO_CONNECTION
MESSAGE_TOO_LARGE
Your message has size %@, which exceeds %@, the maximum allowed by the server.
MailErrorHandlerDoNotSanitize
SMTPFailureReasonUserUnknown
SMTPFailureReasonRelayingNotAllowed
SMTPFailureReasonInvalidAddress
SMTPFailureReasonSendingLimitExceeded
SMTPFailureNoAuthCommandGiven
SMTPFailureInvalidSenderAddress
SMTPFailureReasonBadCredentials
SMTPFailureReasonWebLoginRequired
SMTPFailureReasonUnknown
^([0-9]+)\.([0-9]+)\.([0-9]+)([ ]+)(.*)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/Message_Sim/Message-3445.4.4/Delivery.subproj/SMTPResponse.m
MF_SMTP_RECIPIENT_UNKNOWN
MF_SMTP_RECIPIENT_RELAYING_NOT_ALLOWED
MF_SMTP_RECIPIENT_INVALID_ADDRESS
MF_SMTP_SENDING_LIMIT_EXCEEDED
Sending the message failed because you exceeded your sending limit.
NO_PASSWORD_PROVIDED_ERROR
No password provided.
Please go to Mail Account Settings and enter a password.
%d (%d.%d.%d) %@
%d %@
statusClass
TI,R,N,V_statusClass
statusSubject
TI,R,N,V_statusSubject
statusDetail
TI,R,N,V_statusDetail
statusString
T@"NSString",R,N,V_statusString
continuationResponses
T@"NSArray",&,N,V_continuationResponses
sending limit
from address is not one of your addresses
SELECT ROWID from mailboxes WHERE url = ?;
SELECT 1 FROM pop_uids WHERE mailbox = ? AND uid = ? AND flags IS NULL;
SELECT uid FROM pop_uids WHERE mailbox = ? AND date_added < ?;
SELECT uid FROM pop_uids WHERE mailbox = ?;
DELETE FROM pop_uids WHERE mailbox = ? AND uid = ?;
SELECT COUNT() FROM pop_uids WHERE mailbox = ?;
DELETE FROM pop_uids WHERE mailbox = ?;
SELECT flags FROM pop_uids WHERE mailbox = ? AND uid = ?;
-journal
-wal
-shm
MFWebAttachmentSource_AttachmentLock
<%@ %p>, attachments=%@
x-msg://%ul/
MFWebMessageDocument/%ul
visuallyEmpty
TB,GisVisuallyEmpty,V_visuallyEmpty
baseURL
T@"NSURL",R,V_baseURL
mimeBody
T@"MFMimeBody",R,V_mimeBody
T@"MFMimePart",R,V_htmlPart
htmlData
T@"NSData",R,V_htmlData
preferredEncoding
TL,V_preferredEncoding
T@"MFAttachmentManager",&,N,V_attachmentManager
?333333
name=
From 
MbP?
L=AUTH 
STARTTLS
MAIL FROM:<
RCPT TO:<
NOOP
QUIT
DATA
SSNT
EHLO 
AUTH=
RSET
HELO 
@(#)PROGRAM:Message  PROJECT:Message-3445.4.4
#Streams (%p) created
#Streams (%p) deallocated
#Streams (%p) set property %@
#Streams (%p) set property %@ with%s success
#Streams Opening stream (%p) to %@:%ld
#Streams (%p) %@
#Streams (%p) has closed
#Streams (%p) read %lu bytes
#Streams (%p) dispatching MFStreamEventHasBytesAvailable (%ld)
#Streams (%p) dispatching %@%@%{public}@
#Streams (%p) no longer has an open write stream, aborting write of %lu bytes
#Streams (%p) wrote %ld bytes
#Streams (%p) bumped the buffer to %ld bytes
#Streams (%p) buffered %ld bytes
#Streams (%p) dispatching MFStreamEventCanAcceptBytes
#Network <%{public}@:%p> Got SecTrustResultType %u for %@
*** _NSSocket.m:%s failed; socket=%p error=(%@,%ld)
#Network <%{public}@:%p> SSL handshake completed successfully: %{public}@ %{public}@, %@
#Streams throughput monitoring is OFF
#Streams low throughput threshold is %d bytes/sec
#Streams (%p) received low throughput notification
#Streams (%p) tearing down connection %@ due to low throughput
#Streams socket %p (stream %p) opening connection to %@
#Streams throughput monitoring ON for stream %@
#Streams throughput monitoring OFF for stream %@
Encountered error while fetching credential for %@ (will %screate new credential): %{public}@
Creating new credential for account %{public}@
Credential renewal result: %ld%@%@
Web login result: %@%@%@
#ACE-DB using url %s
#ACE-DB payload is %s
#ACE-DB response is %s
#ACE-DB error retrieving configuration: %{public}@
Account database: failed to parse db file
Account database: couldn't find path to db file
#ACE-DB ignoring service because capability '%s' is not satisfied
#Warning Activity monitor cancelled on the Main Thread.  Why?
%{public}s <%{public}@:%p> [%@:%u%{public}@]
%{public}s <%{public}@:%p> [%@:%u%{public}@] %{mobilemail:networkData}.*P
#Network %d for %@
Detected server with low-grade DH cipher. Re-trying with DH disabled.
deflateInit2 failed with error %d
inflateInit2 failed with error %d
Unsupported header criterion %@
#Warning unsupported qualifier %d in flag criterion
unsupported operator %d
#Warning warning, %@ got ping for folder ID %{public}@, but can't find mailboxUid with that ID.
performing %lu mailbox requests with %{public}@, folder-id %{public}@, anchor %@, user requested %s
mail db had no sync anchor for %{public}@, folderID %{public}@.  Will erase local messages, perform full sync.
server returned null sync key for sync of %{public}@, folderID %{public}@.  Will erase local messages, perform full sync.
setting sync key %@ for mailbox %{public}@
canceled mailbox request for %{public}@, folderID %{public}@
compacting %lu messages that needed sync confirmation
message %{public}@ has a temporary ID, but we have no deferred operations
message %@ was successfully transferred, but we don't have a new remote ID for it
DAMAilAccount %p is invalidating
DAMailAccount %p is deallocating
watched folder IDs changed: %@
account %{public}@ will NOT start listening for notifications, battery-saver mode is ON
Requesting push for folders: %@
#Warning mailboxForFolderID returned nil (folderId = %{public}@)
Add user focus mailbox: %{public}@
Remove user focus mailbox: %@
%@: Network became %s
reslove recipients task %@ failed with code %ld
server indicated invalid sync state for task %@ (code %ld).  resetting mailbox sync key.
server has reset the sync state %@ times in the same sync attempt, giving up.
#Power [New Message] subject=%@;
About to process remote ids matching searchtext:%@ predicate: %@
Invalid search returned for predicate: %@
%@ Seems like the server exhausted the search results (%ld of %lu), un-setting a continue offset
Attempted to fetch messages from DA without basic search convertable criteria: %@
Searching for criterion: %@
Predicate is not supported, bailing.
Caller did not supply searchText. Generated basic search text:%@ from criterion:%@
Attempted to fetch messages from DA without searchText
Search result body fetch for message %@ %s
failed to download body for message "%@"
#Warning DAMessageStore: this is not a MFLibraryMessage: %@
#Warning DAMessageStore: this is not a MFMailMessage: %@
#Warning Error while fetching headers for message %@: %@
#Warning don't know how to fetch data for mime part %@
<%@:%p> set flags %llu, cleared flags %llu on message-id "%@" 
<%@:%p> deleted message-id "%@"
Erasing locally cached messages for folderID %@
Failed erasing messages for folderID %@ - no such local mailbox.
sync confirmed message with remote-id "%@"
received a redundant SyncAddAction for a message with remote-id %@
#Warning Caught exception %@
error syncing folder: %@
DAMessageStore - allMailboxes searchQuery returned result with invalid folderID: %@
#Library sqlite error %d when committing journal statements 
#Library sqlite error %d when committing journal merge statements 
#Library An error occurred while committing the transaction on %p: failed to commit merge statements
#Library An error occurred while committing the transaction on %p: could not flush journal
#Library creating new journal file %@
#Library created new journal file %@ (fd: %d)
#Library failed setting F_NOCACHE on %@ (error %d: %s)
#Library flushing journal fd %d (%lu bytes)
#Library processing journal file %@
#Library read wrong number of version bytes from journal, expected: %lu actual: %zd
#Library found journal file of wrong version, expected: %d actual: %lu
#Library realloc failed when merging journal with database
#Library read wrong number of bytes from journal, expected: %lu actual: %zd
#Library Could not find mailbox for %@
#Library DBJournalMergeResult %@
#Library An error occurred while processing %@ (error %d: %s)
#Library An error occurred while committing transaction for %@ (sqlite error %d)
#Library Successfully reconciled journal file %@
#Library Skipping empty journal file %@
#Library No journal files found
#Library Error %d %@ at path %@: %s
#Library %s (error %d: %s)
*** Missing rspauth value in server message
*** Bogus rspauth value returned from the server
*** Unexpected character '%c', aborting
*** Duplicate value for %@. Ignoring
*** Unexpected value %@ for %@. Ignoring
*** Unable to parse %@. Ignoring
*** Unable to parse %@. Aborting
*** Parse failure(unexpected character '%c'). Ignoring
*** Missing algorithm=md5-sess in server response
*** SASLPrivacySecurityLevel is not supported.
Bad line break index
#Warning Failed to load DataDetectorsCore.framework (%s)
#Warning NSClassFromString(@"DDURLifier") returned Nil
#Warning failed to create date formatter
#Warning failed to create time formatter
Bad arguments to %@, %@
processing low pri invocation: qos override already existed for %p, just ending it
#Indexing Using budgetPeriod:%lds (%.1fh) budget:%lds (min:%.1fm) overage:%ld remaining:%.4fs
processing batch of indexable items
#Indexing applied persisted budget: %@
#Indexing persisted budget is out of date (%@), resetting
#Indexing no persisted budget
#Indexing Scheduling budget reset using period:%ld grace:%lld
#Indexing persisting budget value: %@
#Indexing verifying representative sample of items in the datasource are actually indexed
#Indexing datasource couldn't verify
#Indexing Spotlight found everything from the sample
#Indexing Spotlight index is corrupt, items may be missing or duplicated
#Indexing -[MFLibrarySearchableIndex resume]: %@ (%lld)
#Indexing requesting refresh from data source
#Indexing starting coalescing timer (t=%gs)
#Indexing stopping coalescing timer
#Indexing coalescing timer fired
#Indexing suspending indexing queue
#Indexing resuming indexing queue
#Indexing scheduling processing of pending items
#Indexing batch of %lu items took %.4gs to index
#Indexing %{public}@ : %{public}@
consuming %lu items out of a potential %lu
#Indexing failed to delete all items from MobileMail's domain: %{public}@
#Indexing requested %lu items to be indexed while inactive
#Indexing requested %lu items to be indexed (%lu new)
#Indexing #MailboxPrediction Canceling before querying Spotlight
#Indexing searching spotlight index for %@
#Indexing #MailboxPrediction Canceling after querying Spotlight
%{public}@ status changed to '%{public}@'
#CacheLoads requesting data for MIME part %{public}@:%{public}@
#CacheLoads found full cached data for %{public}@:%{public}@
#CacheLoads found part data in database %{public}@:%{public}@
#CacheLoads extracted part data from full body data in database %{public}@:%{public}@
#CacheLoads downloading part data from server %{public}@:%{public}@
#CacheLoads %@ downloading part data from server %{public}@:%{public}@
#CacheLoads extracted part data from full body data via download %{public}@:%{public}@
#CacheLoads returning cached full body data for %@
#CacheLoads returning cached body data for %@
#CacheLoads returning body data from Library for %@
#CacheLoads fetching body data from network for %@
[LogMessageDeletionTimes] Deleting %lu messages took %4.5f seconds (%4.5f s/msg)
[LogMessageDeletionTimes] Searching for and deleting %lu messages in %@ took: %fs
updateAutoFetchSettings was called. Backtrace:
%{public}@
#Warning Returned unhandled email addresses %@
failed to remove path %@
#Warning %@: no library!
#Warning <rdar://problem/17733540> _currentChokedActions: %@
mailboxDict: %@
Removing lookaside properties for accounts with identifiers: %@
Exception while getting all email addresses: %@
Failed to read cached info for %{public}@: %@
Error %{public}@ occurred while trying to append messages to outgoing store. Ignoring and proceeding with delivery...
Unexpected flag key "%@"
#Library access to protected data is allowed
#Library access to protected data is not allowed
#Library closing database connections after suspend
found message flags discrepancy
#Library could not set protection class for %@
#Library wrote wrong number of bytes to file %@!
#Library failed to open a file for message data at path %@, (error: %d, %s)
adding message references took %.2f (messageID: %d)
#Library couldn't load body for %@, aborting
#Library couldn't load headers for %@, skipping
#Library delegate denied adding message %{public}@
#Library failed to find mailbox row for message %{public}@: mailboxURL = %@ for %{public}@
#Warning [addMessages] setting conversation id for message with library id %d failed
#Library error importing message %{public}@, aborting
#Library inserting message failed, rolling back transaction
#Warning [updateThreadingInfoForMessage] updating conversation id for message with library id %d failed
#SQLite #Performance %.3f seconds to load first batch of %lu messages
#SQLite #Performance loaded %d messages in %.3f seconds
#Library NULL query
#Library criterion %@ couldn't be turned into a query, <db:%p, protected %@>
#Library Could not create sqlite statement from criterionType=%ld groupByKey=%lu
#Library criterion %ld couldn't be turned into a query, <db:%p, protected %@>
#Library could not update sequence identifier for mailbox %@
#Library couldn't load message with libraryID %u because protected data is unavailable
#Library no message for library ID %u, URL: %@
#Library NULL database
#Library Error %d performing query: %s
#SQLite #Performance %0.4f seconds to perform query %@
#Library Compacted %lu messages (%f seconds)
Vacuuming mailboxes: %@
Failed to delete attachments at %{public}@ with error %{public}@
#Library Could not get mailbox for message %{public}@ (store: %@)
#Library Ignoring metadata storage key %u for message %@ - data too large.
#CacheLoads Loaded data of length %lu for message %{public}@ from file
#CacheLoads loaded data of length %lu for message %{public}@%@ from file
#CacheLoads did not load data from file %@: %@
#Library failed to archive offline cache operation %@
#Library can't mark %@ as completed because it doesn't have a rowid
#Library Exception thrown while unarchiving offline cache operation: %@
#Library failed to archive offline cache replay data
#Library Posting %@
#Library cleanupProtectedTables took %.4f seconds
#Library skipping cleaning up protected tables because protected data is not available
#Library Database consistency check failed, the following statement returned a non-zero count (%ld): %@
#Library STATS %.2fs j:%lu m:%lu pm:%lu md:%lu pmd:%lu mdel:%lu mddel:%lu mbox:%lu
#Library STATS %.2fs j:%lu m:%lu pm:* md:%lu pmd:* mdel:%lu mddel:%lu mbox:%lu
#Library Time spent waiting on sqlite writer lock for reconciliation: %.2f secs
#Library Found and deleted %lu messages marked as journaled after successful reconciliation
#Library Key bag locked
#Library Key bag unlocked
#Library Skipping reconciliation after unlock because Protected Index could not be opened
#Library Failed to open %s (error: %d). Retrying %d more times.
#Library Aborting reconciliation, protected data is unavailable
#Library Database reconciliation took %.4f seconds (result: %@)
#Library Updated conversation hashes on %lu messages (%.4f seconds)
#Library Opened new sqlite connection %p
#Library Starting incremental vacuum for %@ database
#Library Skipping incremental vacuum because protected tables are not available
#Library Skipping incremental vacuum because free count (%d) is below limit (256)
#Library Skipping incremental vacuum because load factor (%.2f) is above threshold (0.85)
#Library Error performing incremental vacuum: %s
#Library Successfully performed incremental vacuum on %@ database
#Library Warning: getting writer connection on the main thread
Abort if mobilemail
Could not open fd for %@
Could not set protection class on %@
#Warning %@
#Library Mail db will be reset on next launch
Could not create %@
#Warning Removing mail database and files
#Library pruned %d conversations
invalidated %d %{public}@ with transaction ID > %lld
assigning transaction identifier %lld to %lu type %lu tombstones
purging tombstones older than transaction %ld
assigning transaction identifier %lld to %lu messages (indexing state %ld)
#Warning deferring refresh request until we have determined our active non-local accounts
requesting batch size of up to %lu items requiring indexing
recording spotlight type %ld tombstones: %@
reset transaction index for %d messages for account %{public}@ mailboxID %u
#Library Exception occurred while message with ID %u: %@
writing out no data since existing data is equally long
not saving message data for non-existent message
#Library storage path is nil! _libary: %@ _message: %@ _part: %@ _partial: %@ messageUrl: %@
#Library Error attempting to write to file "%@": %{public}@
#Library Couldn't make complete path "%@"
#Library Exception occurred while writing to "%@": %@
#Library Empty message data
#CacheLoads loaded data of length %lu for message %{public}@%@ from database
Error - could not stat path %@
#Warning %@ has no content protection class set
#Warning Could not get content protection class for %@
%@ is in protection class (directory none) 
%@ is in protection class %c
#Warning %@/%@ bytes (free/total)
#Warning failure to get file system size: %@
#Performance %@ : took %fs
[LogMessageTransferTimes] Transferring %lu messages took %4.5f seconds (%4.5f s/msg).
#UnreadCount _unreadMessageCount went negative
[LogJunkMailActivity] '%s' is addressed to known full name '%s'
#Warning Unhandled qualifier %ld for type %ld
#Warning Unhandled criterion type %ld
#Warning Could not open fd for %@
#Warning Could not set protection class on %@
#SMIMEErrors Verification was not good (%ld)
#SMIMEErrors Verification went south (%ld)
#SMIMEErrors Added trust exception for %@
#SMIMEErrors Removed trust exception for %@
Exception raised during message encoding: %@
*** BAD!!! Used old attachments for %@
*** Unexpected object <%@:%p>
#Warning Must be called with a subclass of MFOutgoingMessage.  You provided %@
Unable to encode %@ as a MIME attachment
Loaded bundle at %@
Ignoring MailServices bundle %@ for %@
Missing account type for identifier %@
Failed to fetch accounts for types [%@]: %{public}@
Failed to load account for persistent account "%@"%s%{public}@
Saved account "%@" (%@)
Failed to save account "%@" (%@) error: %{public}@
Nothing to save for account "%@" (%@)
Removed account "%@" (%@)
Failed to remove account "%@" (%@) error: %{public}@
Received %@ notification
transitioning from %@ to %@
#Attachments %@ performing no conversion (isDataAvailableLocally=%d, isContainedInRFC822=%d, isMailDrop=%d, part=%p, contentTransferEncoding=%{public}@)
#Attachments %@ stripping line endings (contentTransferEncoding=%{public}@)
#Attachments %@ quoted-printable
#Attachments %@ base64
#Attachments %@ uuencode
#Attachments %@ unknown encoding (contentTransferEncoding=%{public}@)
#Attachments Failed to fetch data for attachment [%@]
FIXME: calls that come from the main thread should use fetchLocalData
#Attachments Failed to fetch data for attachment [%@] due to %{public}@
#Attachments Failed to fetch candidate placeholder contents for attachment [%@]
#Attachments Unable to obtain data provider for attachemnt [%@] due to %{public}@
UTType [%@] for filename:[%@] via extension:[%@] mimeType:[%@]
UTType [%@] for filename:[%@] could not derive extension
UTType [%@] for filename:[%@] extension:[%@] via mimeType:[%@]
#Attachments UTType for filename:[%@] extension:[%@] mimeType:[%@] indeterminate
UTType [%@] for filename:[%@] via cache
#Attachments Failed to create path %@ for attachment [%p, %@]: %{public}@
#Attachments Failed to create file URL for path %@
#Attachments Failed to create directory %@ for attachment [%@]: %{public}@
#Attachments Unable to read file URL [%@] due to error: %{public}@
#Attachments Unable to read file URL [%@]
#Attachments requesting download of attachment %p with URL %@
#Attachments not writing attachment %p %@ to disk (no-existing-attachment-dictionary)
#Attachments not writing attachment %p %@ to disk (shouldWriteToDisk=%d, success=%d, data.length=%lu, error=%@)
Calling progress block for %@.  %lu/%lu
#Attachments ContextID was nil for filename:%@ contentID:%@
#Attachments Data was nil for filename:%@ contentID:%@
#Attachments nil path detected in initializer
#Attachments Failed to create file for attachment %@: %@
#Attachments Failed to create directory for attachment %@: %@
#Attachments failed to find a store for message %{public}@, things may behave unexpectedly
#Attachments FIXME: Blocking call requested on the main thread
removing attachment %@
#Attachments Failed to deserialize placeholder
#Attachments Failed to serialize placeholder
#Attachments Failed create placeholder for URL [%@]
#Attachments Failed create placeholder for fileName [%@]
#Attachments Failed obtain data for temporary file
#Attachments Attempted to resolve placeholder for non-existant file: %@
#Attachments Placeholder attachment data write error %{public}@
#Attachments Failed to remove temporary file
#Attachments Failed to create placeholder directory %@
#Attachments Failed to enumerate URL [%@] due to error [%{public}@]
#Attachments Failed to read bundle URL [%@]
#Attachments Failed to archive bundle attachment URL: %@ due to error: %{public}@
#Attachments Failed to read attachment URL: %@
#Attachments Failed to access attachment URL: %@
#Attachments URL is not a bundle: %@
NSFileCoordinator ops can block, the caller should move to a background thread
#Attachments Error accessing secure write URL [%{public}@]
#Attachments Error confirming URL is writeable [%@]
#Attachments Error accessing secure read URL [%{public}@]
#Attachments Error confirming URL is readable [%@]
#Attachments Failed to create temporary read URL [%@] error [%{public}@]
#Attachments Failed to create temporary read directory [%@]
Failed to remove temporary read URL [%@] error [%@]
Failed to remove temporary read directory [%@] error [%@]
#MailboxPrediction Cache hit for %@
#MailboxPrediction Cache miss for %@
No attachment for [%@]
Zero length attachment for [%@]
Keybag transitioning from %@ to %@
Brace for impact, keybag was locked without grace period!
Ignoring lock state change from %@ to %@
folder with temporary-id "%@" got server-id "%@" and name "%@"%s
folder with temporary-id "%@" could not be created, status code %ld
folder with server-id "%@" could not be deleted, status code %ld
deleted folder with server-id "%@"
folder with server-id "%@" got parent-id "%@" and name "%@"%s
failed to modify folder with server-id "%@", status code %ld
got %@ with untracked sourceID "%@"
<%@:%p> replaced temporary-id "%@" with "%@" for message move snapshot %@
<%@:%p> temporary-id "%@" became remote ID "%@"
<%@:%p> temporary-id "%@" got last mailbox snapshot %@
<%@:%p> deferring operation %@
<%@:%p> beginning offline cache replay...
<%@:%p> replay finished (%s)
<%@:%p> deleting offline cache data
<%@:%p> selected folder-id "%@"
Created error: %{public}@
#Attachments Couldn't create archive, input is not a directory.
#Attachments Couldn't add file to archive. Error: %{public}@
#Attachments Failed to write entire data buffer
#Attachments Failed to validate archive central header
#Attachments Failed to validate archive central directory
#MailboxPrediction Predicting for message persistentID=%@, subject="%@"
#MailboxPrediction Aggregate: %@
#MailboxPrediction ## Ordered Mode:
#MailboxPrediction Raw counts for %@: %@
#MailboxPrediction Found %.0lf hit for **%@** in %@
#MailboxPrediction Ignoring because it is the message's current mailbox.
#MailboxPrediction Ignoring because count (%.0f) is under threshold (%.0f).
#MailboxPrediction ## Summed Weighted Mode:
#MailboxPrediction Raw counts for %@:
#MailboxPrediction Found field=%@ in mailbox=%@: weightedHits=%.1lf
#MailboxPrediction ## Weighted Mode:
#MailboxPrediction Found %.0lf (weighted=%.1lf) hits for **%@** in %@
#MailboxPrediction Ignoring because weighted (%.0f) is under threshold (%.0f).
#MailboxPrediction Winner: %@ (weighted=%.1lf)
#MailboxPrediction Not a legal sender address: %@
#MailboxPrediction Ignoring mailboxes: %@
#MailboxPrediction Not a legal recipient address: %@
Downloading attachment: %@ using URL session: %@
#Attachments Mail Drop couldn't create zone. Error: %{public}@
#Attachments Mail Drop couldn't create archive. Error: %{public}@
#Attachments Mail Drop couldn't create record.
Mail Drop attachment: %@
#Attachments Mail Drop error publishing asset. %{public}@
Mail Drop asset URL: %@
Mail Drop progress %f for record:%@
#Attachments Mail Drop error for record: %{public}@
#Attachments Mail Drop complete for record:%@
#Attachments Mail Drop error with upload. %{public}@
Start uploading records to CloudKit database [%@] ...
#Attachments Failure encountered during Mail Drop processing [%{public}@]
Start fetching CloudKit record zone for ID [%@] ...
#Attachments Error encountered while fetching CloudKit record zone [%{public}@]
#Attachments Error encountered while saving CloudKit record zone [%{public}@]
#Attachments failed to get zone identifier from keychain: %{public}@
#Warning Error: migration is not supported for version %d
#Warning Error %d %@: %s
#Warning Error: failed to get contents of "%@": %@
#Warning Error: failed to find "%@"
#MessageCriteria Received unexpected qualifier %d for MessageIsRead criterion.
#MessageCriteria Received unknown criterion type for criterion: %@
#MessageCriteria Attempted to handle unsupported criterion %@
#MessageCriteria Returning criterion:%@ result:%@
#MessageCriteria Compound Criterion should not appear here - should be an NSCompoundPredicate
Received unknown criterion type for predicate: %@
Attempted to handle unsupported predicate %@
#MailServices Cannot currently handle a NOT predicate with more than one sub
Got unexpected Predicate: %@
#MessageCriteria Received unhandled MessageRuleQualifier value:%d - assuming contains
#MessageCriteria Received unhandled NSPredicateOperatorType value:%lu - assuming contains
%@ Will replace %{public}@, ours=%{public}@ with %{public}@ (inPlace=%d) in set: %@
#Warning networking is disallowed on the main thread
Assert if seed or internal build
#Warning networking is disallowed
#FileCompressionQueue Running File Compression Queue Activity. %ld files in the queue
#FileCompressionQueue Compressed all files in File Compression Queue
#FileCompressionQueue Deferred before compressing all files in File Compression Queue.
#FileCompressionQueue Can not run File Compression Queue Activity. Device in battery saver mode.
#FileCompressionQueue Exiting Compression Queue Activity. %ld files left in the queue
#Warning Could not create SCDynamicStore
device is now %@
listening for low-power mode notifications
low-power mode changed to %@
#Assertions [*] cancel power assertion timer
#Assertions [*] schedule %d sec power assertion timer
#Assertions [*] power assertion timer expired
#Assertions [+] %@
#Assertions [-] %@
#Library Connection %p is already attached
#Library Attached Protected Index on connection %p
#Library Connection %p is already detached
#Library Detach Protected Index on connection %p
#SMIMEErrors SecIdentityCopyCertificate could not find certificate for %@
#SMIMEErrors SecCertificateCreateWithData() failed for %@
#SMIMEErrors SecTrustCreateWithCertificates returned %ld
#SMIMEErrors Revocation check failed with status %ld
#SMIMEErrors Revocation check succeeded (SecTrustResultType: %d)
Mail File Compression Queue Activity
#Library Closing sqlite connection %p
#Warning Terminating outstanding connection %p
Acquired task assertion: %{public}@
could not aquire task assertion: %{public}@
Invalidating task assertion: %{public}@
#Warning Error %d: %s
#UnreadCount [UnreadCount] %@ %s
Ignoring unmatched </%@> command
elapsed time %gs (input length=%ld, output length=%lu)
deallocating %p %@
#Warning SecItemCopyMatching result: %d
SecItemCopyMatching succeeded with empty results
#Warning SecItemAdd result: %ld
#Warning SecItemUpdate result: %ld
#Warning SecItemDelete result: %ld
#SMIMEErrors Found %lu (out of %lu) matching signing identities for "%@"
#SMIMEErrors Found %lu (out of %lu) matching encryption identities for "%@"
#SMIMEErrors SecItemCopyMatching returned %ld
#SMIMEErrors Found no certificates for "%@" (%ld)
#SMIMEErrors Found %s certificate for "%@".
#SMIMEErrors Error saving encryption certificate for "%@": %@
#Warning Exception raised while processing requests: %@
#SMIMEErrors Missing signed data!
#SMIMEErrors Missing signature part!
#SMIMEErrors decodeMultipartSigned failed with %{public}@
#SMIMEErrors There was no error while decrypting the message but there was no body either!
#SMIMEErrors decodeApplicationPkcs7_mime failed with %{public}@
#SMIMEErrors SecCmsDecoderCreate returned %ld
#SMIMEErrors SecCmsDecoderUpdate returned %ld for %lu bytes
#SMIMEErrors SecCmsDecoderFinish returned %ld
#SMIMEErrors SecCmsDigestContextStartMultiple failed
#SMIMEErrors -appendData: called on _MFSecCMSDecoder after an error has occurred!
#SMIMEErrors -appendData: called on _MFSecCMSDecoder with no signed or enveloped data!
#SMIMEErrors SecCmsSignedDataSetDigestContext on -done returned %ld
#SMIMEErrors _MFSecCMSDecoder asked to verify with pending error (%ld)
#SMIMEErrors There were no digests in the message
#SMIMEErrors The message sender is missing
#SMIMEErrors SecCmsSignedDataVerifySignerInfo returned %ld for #%d:%@
#SMIMEErrors There was a signing error %{public}@
#SMIMEErrors newSignedPart... failed with %{public}@
#SMIMEErrors newEncryptedPart... failed with %{public}@
#SMIMEErrors Found no identity for "%@"
#SMIMEErrors SecCmsMessageCreate for signing failed
#SMIMEErrors SecCmsSignedDataCreate failed
#SMIMEErrors SecCmsContentInfoSetContentSignedData returned %ld
#SMIMEErrors SecCmsContentInfoSetContentData for signing returned %ld
#SMIMEErrors SecCmsSignerInfoCreate failed
#SMIMEErrors SecCmsSignerInfoIncludeCerts returned %ld
#SMIMEErrors SecCmsSignedDataAddCertChain returned %ld
#SMIMEErrors SecSMIMEFindBulkAlgForRecipients returned %ld
#SMIMEErrors SecCmsMessageCreate for encryption failed
#SMIMEErrors SecCmsEnvelopedDataCreate failed
#SMIMEErrors SecCmsContentInfoSetContentEnvelopedData returned %ld
#SMIMEErrors SecCmsContentInfoSetContentData for encryption returned %ld
#SMIMEErrors Failed to create all the required recipients
#SMIMEErrors -appendData: called on _MFSecCMSEncoder after an error has occurred!
#SMIMEErrors SecCmsMessageEncode returned %ld
#SMIMEErrors -appendData: called twice _MFSecCMSEncoder (only once is allowed for now)!
#SMIMEErrors SecCmsEncoderFinish on -done returned %ld
SMTP error for recipient %@: %@
SMTP delivery:%d valid recipients; invalid recipients = %@
--- Got unexpected EHLO response ESMTP params %@
no entry for mailbox %@?
Error %d on connection %p %@: %s - I/O error %d (%s)
Error %d on connection %p %@: %s
Wrong number of arguments (%d) to and64
wrong number of arguments (%d) to icusearch
#Library Renaming database %@ to %@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
