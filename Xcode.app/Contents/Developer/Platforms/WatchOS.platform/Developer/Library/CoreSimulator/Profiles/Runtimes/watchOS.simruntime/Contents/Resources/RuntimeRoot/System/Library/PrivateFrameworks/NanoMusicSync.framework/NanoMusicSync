init
class
isKindOfClass:
totalSize
totalDuration
count
stringWithFormat:
decodeInt64ForKey:
decodeDoubleForKey:
encodeInt64:forKey:
encodeDouble:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
sizeDurationRatio
averageSize
isEqual:
description
setTotalSize:
setTotalDuration:
setCount:
_totalSize
_totalDuration
_count
_setupFromCache
length
sizeInfoDict
objectForKeyedSubscript:
setObject:forKeyedSubscript:
archivedDataWithRootObject:requiringSecureCoding:error:
sharedDefaults
setPodcastSizeEstimationData:
_minimumSizeThreshold
_adjustedSizeDurationRatio:
_defaultEstimatedSize
_cachedPodcastSizeInfoDict
dictionaryWithDictionary:
_totalSizeDurationRatio
_totalAverageSize
podcastSizeEstimationData
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
enumerateKeysAndObjectsUsingBlock:
_defaultSizeDurationRatio
isEmpty
incrementSize:duration:forFeedURL:
synchronize
sizeForFeedURL:duration:feedProvidedSize:
.cxx_destruct
setSizeInfoDict:
_empty
_sizeInfoDict
logMessage
alloc
initWithMessage:
logActionWithMessage:
_message
arrayWithCapacity:
_writeLogMessageFromActions:includingPartNumber:
_addAction:toPendingActions:limit:
removeAllObjects
addObject:
valueForKey:
componentsJoinedByString:
_logMessageFromPendingLogActions:includingPartNumber:
initWithIdentifier:logCategory:
setMessageBufferLimit:
addLogAction:
flush
prefix
setPrefix:
messageBufferLimit
_pendingLogActions
_identifier
_category
_partNumber
_prefix
_messageBufferLimit
size
duration
isDownloaded
decodeBoolForKey:
initWithSize:duration:downloaded:
encodeBool:forKey:
_downloaded
_size
_duration
_initWithCache:
_registerForCacheChanged
dealloc
copy
_cachedPodcastEpisodeSizeDictionary
isNSDictionary__
_podcastSizeCacheFilePath
dataWithContentsOfFile:
arrayWithObjects:count:
pathWithComponents:
defaultManager
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
stringByAppendingPathComponent:
UTF8String
defaultCenter
postNotificationName:object:
itemsForFeedURL:
episodeSizeInfoDict
relationshipDict
_episodeSizeInfoDict
_notifyToken
_internalQueue
_relationshipDict
dictionary
mutableRelationshipDict
mutableEpisodeSizeInfoDict
_currentPodcastSizeDictionary
writeToFile:atomically:
setEpisodes:forFeedURL:
setEpisodeSizeInfo:forEpisode:
setMutableRelationshipDict:
setMutableEpisodeSizeInfoDict:
_mutableRelationshipDict
_mutableEpisodeSizeInfoDict
identifer
setIdentifer:
itemSize
setItemSize:
listTotalSize
setListTotalSize:
listQuota
setListQuota:
containerIndex
setContainerIndex:
itemIndex
setItemIndex:
_identifer
_containerIndex
_itemIndex
_itemSize
_listTotalSize
_listQuota
initWithActionType:state:
_stringForType:
logActionWithActionType:state:
_type
_state
currentIdentifier
currentContainerIndex
currentItemIndex
sizeForCurrentIdentifier
sizeForItemListWithinQuota
evaluationState
array
objectForKey:
_evaluateAddedItemsIfNecessary
_containerListForIdentifier:
itemListWithinQuota
offPowerItemListWithinQuota
nominatedItemSize
allValues
countByEnumeratingWithState:objects:count:
itemGroups
iteratingOrder
quotaData
numItemsAboveQuota
quotaRefObj
numItemsAdded
date
dictionaryWithCapacity:
numberWithUnsignedLongLong:
setObject:forKey:
stringByAppendingString:
mutableCopy
unsignedLongLongValue
isCurrentIdentifierEstimate
containsObject:
addCurrentIdentifierToWithinQuotaList
removeCurrentIdentifier
removeObject:
isCurrentItemDownloadableOffPower
skipCurrentIdentifier
removeObjectForKey:
resetToIterateOverQuotaIdentifiers
allObjects
initWithGroupIterators:quota:
groupIteratorForIdentifier:
itemsWithinQuota
itemsWithinQuotaForIdentifier:
sizeOfItemsWithinQuota
sizeOfItemsWithinQuotaForIdentifier:
offPowerItemsWithinQuota
offPowerItemsWithinQuotaForIdentifier:
sizeOfNominatedItemsForIdentifier:
isItemGroupWithinQuota:
_groupIterators
_quota
_itemListWithinQuota
_offPowerItemListWithinQuota
_quotaUsage
_hasEvaluated
renderHint
_existingRepresentationForArtworkCatalog:fromCacheOnly:
_cacheRepresentation:forCatalog:
_cachedRepresentationForCatalog:
token
_cachedArtworkImageWithToken:
representationWithSize:image:
artworkCacheDirectory
contentsOfDirectoryAtPath:error:
setWithArray:
cache
mainScreen
scale
imageWithData:scale:
sharedDataSource
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
areRepresentationsAvailableForCatalog:
isRepresentation:bestRepresentationForArtworkCatalog:
existingRepresentationForArtworkCatalog:
loadRepresentationForArtworkCatalog:completionHandler:
cancelLoadingRepresentationForArtworkCatalog:
visualIdenticalityIdentifierForCatalog:
existingArtworkEffectResultForEffectType:catalog:options:
loadArtworkEffectResultForEffectType:catalog:options:systemEffectHandler:completionHandler:
hasExistingRepresentationOnDiskForArtworkCatalog:
getExportableArtworkPropertiesForCatalog:completionHandler:
artworkCacheExistsForToken:
_fallbackCache
ic_sharedAccountStore
ic_activeStoreAccount
standardUserDefaults
integerValue
_statusWithActiveAccount:icStatusType:
_updateICSubscriptionStatusType
sharedMonitor
addObserver:
_handleAccountStoreDidChangeNotification:
addObserver:selector:name:object:
_handleICSubscriptionStatusDidChangeNotification:
sharedStatusController
removeObserver:
isRemoteServerLikelyReachable
isCurrentNetworkLinkHighQuality
_updateActiveAccount
ic_DSID
isEqualToNumber:
_updateSubscriptionStatus
statusType
numberWithInteger:
setValue:forKey:
getSubscriptionStatusWithCompletionHandler:
sharedManager
environmentMonitorDidChangeNetworkReachability:
environmentMonitorDidChangeNetworkType:
environmentMonitorDidChangePower:
environmentMonitorDidChangeTelephonyStatus:
subscriptionStatus
_queue
_icStatusType
_activeAccount
_subscriptionStatus
_failedGetSubscriptionStatusAttempts
identifiers
globalPlaylistID
storeCloudID
stringValue
storeAdamID
numberWithLongLong:
storeCloudAlbumID
syncInfoContainerIdentifier
_initWithTarget:readAndObserveChanges:
_registerForInfoChanged
_readInfo
allKeys
floatValue
info
unsignedIntegerValue
_notificationName
_syncInfoFilePath
dictionaryWithContentsOfFile:
_targetIdentifier
_syncInfoDirectory
initWithTarget:
containers
itemsForContainer:
statusForContainer:
statusForItem:
progressForContainer:
progressForItem:
playabilityForContainer:
userInfoForContainer:
userInfoForItem:
_isValid
_hasItemsForContainer:
_preferencesApplicationID
_preferencesInfoKey
setInfo:
target
_info
_target
_updateAggregateContainerInfoIfNeeded
_infoForContainer:
numberWithUnsignedInteger:
_infoForItem:
_writeInfo
_notifyInfoChanged
enumerateObjectsUsingBlock:
numberWithDouble:
_persistingOptions
setItems:forContainer:
setStatus:forItem:
setProgressBytes:totalBytes:forItem:
setUserInfo:forContainer:
setUserInfo:forItem:
_needsUpdateAggregateContainerInfo
request
containerIDs
initWithRequestedItemIdentifiers:reason:
allSupportedProperties
initWithRequestedPropertySet:
itemIdentifiers
storeItemMetadataForItemIdentifier:
appendSection:
childStoreItemMetadatas
modelObjectWithStoreItemMetadata:
appendItem:
initWithRequest:
setResults:
configurationForLoadingModelDataWithStoreBagDictionary:error:
produceResponseWithLoadedOutput:completion:
setRequest:
setResponseHandler:
copyWithZone:
newOperationWithResponseHandler:
setContainerIDs:
_containerIDs
mutableItemListWithinQuota
mutableOffPowerItemListWithinQuota
remainingItemLists
itemSizesDict
setRemainingItemLists:
setItemSizesDict:
itemList
arrayWithArray:
addEntriesFromDictionary:
objectEnumerator
_generateItemListAndSizesDictIfNecessary
objectAtIndex:
remainingContainers
numItemsSkipped
setNumItemsSkipped:
_continueToNextIdentifier
_markToBeRemoved
numItemsRemoved
setNumItemsRemoved:
setNumItemsAdded:
indexesToBeRemoved
removeObjectsAtIndexes:
removeObjectAtIndex:
setCurrentContainerIndex:
setCurrentItemIndex:
offPowerSyncAllowed
referenceObj
longLongValue
deviceLibraryPersistentID
predicatesForFeedURL
predicateMatchingPredicates:
sharedLibrary
unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:
enumeratePersistentIDsAndProperties:usingBlock:
identifier
isEqualToString:
libraryIdentifiersForContainerType:
addObjectsFromArray:
predicateWithBlock:
filteredArrayUsingPredicate:
indexSet
addIndex:
initWithItemGroups:
itemGroupForIdentifiers:
identifiersForContainersOfType:
mediaContainersAboveQuota
setSizeForItemListWithinQuota:
sizeForOffPowerItemListWithinQuota
setSizeForOffPowerItemListWithinQuota:
setNominatedItemSize:
setItemGroups:
setRemainingContainers:
setMutableItemListWithinQuota:
setMutableOffPowerItemListWithinQuota:
setIndexesToBeRemoved:
_itemGroups
_remainingContainers
_remainingItemLists
_itemSizesDict
_currentContainerIndex
_currentItemIndex
_mutableItemListWithinQuota
_mutableOffPowerItemListWithinQuota
_indexesToBeRemoved
_sizeForItemListWithinQuota
_sizeForOffPowerItemListWithinQuota
_nominatedItemSize
_resetMaxItemListSize
_maxItemListSize
_handleMusicPinningSelectionsDidChangeNotification:
_handlePodcastsPinningSelectionsDidChangeNotification:
_handleRecommendationLibraryContentsDidChangeNotification:
_handleRecommendationsDidUpdateNotification:
_handleMediaLibraryEntitiesAddedOrRemovedNotification:
_handlePodcastSizeInfoDidChangeNotification:
_handleICAgeVerificationStateDidChangeNotification:
sharedInstance
getActivePairedDevice
valueForProperty:
_invalidateMusicCache
quotaManager
_mediaStorageSizeForCurrentDevice
_quotaManagerShouldFetchDownloadedItemsOnlyForBundleID:
_newMusicGroupIteratorWithDownloadedItemsOnly:
_newPodcastsGroupIteratorWithDownloadedItemsOnly:
dictionaryWithObjects:forKeys:count:
_cachedAlbumIdentifiersFilePath
_refreshAlbumIdentifiersWithPath:
pinnedAlbums
_cachedPlaylistIdentifiersFilePath
_refreshPlaylistIdentifiersWithPath:
pinnedPlaylists
_isAlbumPinned:
_isPlaylistPinned:
setPinnedAlbums:
playlistPIDValidForPinning:
setPinnedPlaylists:
workoutPlaylistID
initWithDomain:
setBool:forKey:
setWithObject:
synchronizeNanoDomain:keys:
setWorkoutPlaylistID:
_updateWorkoutSettingsPlaylistPIDTo:
_setWorkoutPlaylistID:
predicateWithProperty:value:comparison:
unrestrictedQueryWithLibrary:predicate:orderingTerms:
boolValue
addedMusicItems
addedPodcastsItems
_invalidatePodcastsCache
pinnedPodcastsAreUserSet
setPinnedPodcastsAreUserSet:
gizmoPodcastDownloadOrders
setGizmoPodcastDownloadOrders:
pinnedPodcastFeedURLs
indexOfObject:
setPinnedPodcastFeedURLs:
gizmoPodcastEpisodeLimits
setGizmoPodcastEpisodeLimits:
_cachedPodcastFeedURLsFilePath
_refreshPodcastFeedURLsWithPath:
initWithCapacity:
contentItemID
setObject:atIndexedSubscript:
listenNowPodcastFeedURLs
isEqualToArray:
setListenNowPodcastFeedURLs:
numberWithInt:
podcastsAssetSyncLimit
setPodcastsAssetSyncLimit:
listenNowPodcastEpisodes
setListenNowPodcastEpisodes:
pinnedPodcastIdentifiers
setPinnedPodcastIdentifiers:
clientPinningSettingsToken
_tokenForInstance:
userInfo
name
setLastUserPinningChangeDateForBundleID:
isCharging
initWithBundleID:
isAppDormant
orderedSet
itemGroupWithSyncedPlaylistID:downloadedItemsOnly:
itemGroupWithSyncedAlbumID:downloadedItemsOnly:
_fetchMusicRecommendations
isHeavyRotation
isSelected
itemGroupWithStoreRecommendation:downloadedItemsOnly:
shouldUseLibraryRecommendations
libraryRecommendationPlaylists
itemGroupWithLibraryHeavyRotationRecommendation:playlistID:downloadedItemsOnly:
libraryRecommendationAlbums
itemGroupWithLibraryHeavyRotationRecommendation:albumID:downloadedItemsOnly:
numberWithBool:
predicateWithProperty:equalToValue:
predicateWithProperty:values:
subarrayWithRange:
itemGroupWithPodcastFeedURL:downloadOrder:episodeLimit:downloadedItemsOnly:
_invalidateAddedItemsCache
removeItemAtPath:error:
_cachedIdentifiersDirectoryPath
fetchRecommendationsWithQueue:completion:
minusSet:
_pairedWatchVersion
invalidateMusicCache
addedItems
addedItemsForDownloadWithinAvailableSpace:
addedSongsSize
nominatedSongsSize
albumIdentifiers
playlistIdentifiers
isAlbumPinned:
isPlaylistPinned:
pinAlbum:
pinPlaylist:
unpinAlbum:
unpinPlaylist:
addedItemsWithMediaTypes:
invalidatePodcastsCache
setGizmoDownloadOrder:forPodcastWithFeedURL:
removePodcastWithFeedURL:
downloadOrderForPodcastWithFeedURL:
setGizmoEpisodeLimit:forPodcastWithFeedURL:
episodeLimitForPodcastWithFeedURL:
podcastFeedURLs
pinPodcastWithFeedURL:
unpinPodcastWithFeedURL:
isPodcastWithFeedURLPinned:
setListenNowEpisodePIDs:
isPodcastWithIdentifiersPinned:
pinPodcastWithIdentifiers:
unpinPodcastWithIdentifiers:
currentSyncSettingsStateToken
addedPodcastEpisodesArray
offPowerEligibleSongsList
onlyOnPowerSongsList
setQuotaManager:
_sharedDefaults
_podcastSizeCache
_cachedPlaylistIdentifiers
_cachedAlbumIdentifiers
_cachedPodcastFeedURLs
_quotaManager
_setupNotifiers
_reloadPropertiesFromDefaultsOnMainThread
musicRecommendationDict
_removeObjectForKey:domain:
_objectForKey:domain:
_setObject:forKey:domain:
dictionaryWithObject:forKey:
_writeDate:forKey:withBundleID:domain:
_dateValueForKey:bundleID:domain:
beginWaitingForUpdates
endWaitingForUpdates
_removeOldMusicRecommendationsInfoIfPossible
initWithNotificationName:
setDelegate:
_deviceHasCapability:forCapabilitiesKey:
_addCapability:forCapabilitiesKey:
arrayByAddingObject:
_reloadPropertiesFromDefaults
isMainThread
_migrateDataIfNecessary
doubleValue
initWithTimeIntervalSinceReferenceDate:
timeIntervalSinceReferenceDate
scheduleLocalDarwinNotification
beginBatchUpdates
numberWithUnsignedInt:
_defaultPlaylistPersistentID
assetSyncLimitType
assetSyncLimit
_spaceQuotaForNumberOfSongs:
synchronizeUserDefaultsDomain:keys:
_addWatchCapability:
endBatchUpdates
_playlistPersistentIDForPlaylistName:
localizedStringForKey:value:table:
predicateWithValue:forProperty:comparisonType:
playlistsQuery
addFilterPredicate:
collectionPersistentIdentifiers
firstObject
_writePropertiesToDefaults
_setNeedsSynchronize
_boolForKey:domain:defaultValue:
_setBool:forKey:domain:
_clearAssetSyncPlaylistDependentDefaults
pidsFromMIDDataArray:
midDataArrayFromPlaylistPIDs:
_setLegacyObject:forKey:ifRemoteDeviceMissingCapability:
pidFromMIDData:
midDataFromPlaylistPID:
midDataArrayFromAlbumPIDs:
initWithDictionary:
dictionaryRepresentation
_continueUsingMusicRecommendationKey
_preSeed2_setMusicRecommendationDict:
dateWithTimeIntervalSinceReferenceDate:
_phoneHasCapability:
_notifyChangesForKey:
dispatcherDidReceiveNotificationFromRemoteDevice:
dispatcherDidReceiveNotificationFromCurrentProcess:
dispatcherDidReceiveNotificationFromOtherProcess:
clearPodcastsDefaults
clearAppActivityStatusDefaultsForBundleID:
setLastUserLaunchDateForBundleID:
setInstallDateForBundleID:
lastUserLaunchDateForBundleID:
lastUserPinningChangeDateForBundleID:
installDateForBundleID:
dormancyIntervalInHoursForBundleID:
_watchHasCapability:
_addPhoneCapability:
setAssetSyncLimit:
allowOffChargerAssetSync
setAllowOffChargerAssetSync:
setAssetSyncLimitType:
setAssetSyncType:
setAssetSyncPlaylistPersistentID:
setLastFullySentAssetSyncPlaylistPersistentID:
setLastFullySentAssetSyncPlaylistVersion:
listenNowPodcastIdentifiers
pinnedPodcasts
setPinnedPodcasts:
setLibraryRecommendationAlbums:
setLibraryRecommendationPlaylists:
setShouldUseLibraryRecommendations:
setMusicRecommendationDict:
recommendationExpirationDate
setRecommendationExpirationDate:
cachedRecommendationsData
setCachedRecommendationsData:
lastMusicAppActiveDate
setLastMusicAppActiveDate:
lastSiriFaceActiveDate
setLastSiriFaceActiveDate:
syncStateDict
setSyncStateDict:
lastFullySentAssetSyncPlaylistPersistentID
lastFullySentAssetSyncPlaylistVersion
modificationDate
assetSyncType
assetSyncPlaylistPersistentID
setListenNowPodcastIdentifiers:
_needsSync
_pairingID
_domainAccessorQueue
_domainAccessor
_notifiersDict
_settingsNotifier
_musicPinningSelectionsNotifier
_podcastsPinningSelectionsNotifier
_podcastsSubscriptionMetadataNotifier
_recoSelectionsNotifier
_libraryRecoNotifier
_storeRecoNotifier
_syncStateNotifier
_podcastsSizeInfoNotifier
_assetSyncLimit
_lastFullySentAssetSyncPlaylistPersistentID
_lastFullySentAssetSyncPlaylistVersion
_modificationDate
_assetSyncLimitType
_assetSyncType
_assetSyncPlaylistPersistentID
_listenNowPodcastIdentifiers
_associatedObject
assetSyncPlaylist
persistentID
predicateWithValue:forProperty:
collections
setAssetSyncPlaylist:
_mediaLibraryDidChangeNotification:
_assetSyncPlaylist
originalIdentifierSet
shouldShowFullAlbum
_invalidate
itemKind
modelClass
_requestPlaylistsEntries
_requestSongs
_requestAlbums
_requestPlaylists
errorWithDomain:code:userInfo:
finishWithError:
scopedContainers
label
setLabel:
kindWithVariants:
setItemKind:
itemProperties
relationships
setItemProperties:
filteringOptions
setFilteringOptions:
_mpIdentifierSetsFromStringIdentifiers:
setAllowedItemIdentifiers:
shouldIncludeContentItemID
setShouldIncludeContentItemID:
contentRange
results
setSong:
initWithIdentifiers:block:
enumerateItemsUsingBlock:
sortUsingComparator:
appendItems:
finish
start
_requestContainerWithClass:
storeRecommendationModelObjects
_modelObjectWithCachedArtworkFromModelObject:
initWithToken:dataSource:
setArtworkCatalogBlock:
copyWithIdentifiers:block:
numberFromString:
setDeviceLibraryPersistentID:
initWithBlock:
execute
responseHandler
_request
_responseHandler
initWithSuiteName:
_boolForKey:
_setBool:forKey:
boolForKey:
greenTeaMusicIsMirroringStreamingSettings
setGreenTeaMusicIsMirroringStreamingSettings:
greenTeaMusicAllowCellularForStreaming
setGreenTeaMusicAllowCellularForStreaming:
greenTeaMusicAllowCellularForHighQualityStreaming
setGreenTeaMusicAllowCellularForHighQualityStreaming:
initWithPersistentID:name:type:
type
addedDate
setAddedDate:
playedDate
setPlayedDate:
_name
_persistentID
_addedDate
_playedDate
_handleArtworksDidUpdateNotification:
_handleRecommendationStoreContentsDidChangeNotification:
_handleRecommendationSelectionsDidChangeNotification:
_handleSubscriptionStatusDidChangeNotification:
_handleActiveAccountDidChangeNotification:
_removeLegacyRecommendationsDefaultsIfNecessary
_registerForPairingFinishedNotification
_unregisterForPairingFinishedNotification
_reloadRecommendationContentsIfNecessary
_importArtworkIfNecessaryForObjectsIgnorePreviousCache:
_handlePairingFinishedNotification:
removeObserver:name:object:
UUID
_reloadRecommendationsFromDefaultsWithCompletion:
_removePreviousRecommendationDefaults
_notifyMusicRecommendationsDidUpdateNotification
_updateRecommendationsSelections
isPaired
activeAccount
initWithIdentity:
sharedBagProvider
valueForBagKey:
timeIntervalSinceDate:
_invalidateRecommendationRetryTimer
_reloadStoreRecommendations
getBagForRequestContext:withCompletionHandler:
allSupportedSectionProperties
setSectionProperties:
allSupportedItemProperties
setClientIdentifier:
setClientVersion:
_updateRecommendationsWithRecommendationsResponse:
_isRecommendationExpired
_scheduleNextRecommendationReloadIfNecessary
_sortedContainersBasedOnRecency
_expirationDateForUpdateDate:withOffsetDays:preferredTimeWindow:
initWithPersistentID:inLibrary:
containerQueryWithContainer:
hasEntities
_fetchAddedDateForContainer:
_startRecommendationRetryTimer
_lookUpRecommendationsWithRecommendationsResponse:
performWithResponseHandler:
groupType
title
itemType
album
playlist
enumerateSectionsUsingBlock:
_importRecommendationsWithLookupResponse:recommendationsResponse:
_finishLoadingContentsWithRecommendationsResponse:
setShouldLibraryAdd:
setModelObjects:
storeSubscriptionAdamID
enumerateItemsInSectionAtIndex:usingBlock:
_persistUpdatedRecommendationsWithRecommendationsResponse:
initWithRecommendationGroup:
insertObject:atIndex:
initWithPlaylist:recommendationGroup:
initLibraryRecommendation
setSelected:
persistRecommendationsSelections:
_recommendationsData
intValue
_invalidateRecommendationExpirationTimer
compare:
currentCalendar
setDay:
dateByAddingComponents:toDate:options:
components:fromDate:
setHour:
setMinute:
dateFromComponents:
_deleteCachedArtworksWithTokens:
_importArtworkForPlaylists:
_invalidateArtworkRetryTimer
artworkCatalog
bounds
setFittingSize:
setDestinationScale:
_setArtworkImageCache:withToken:
requestImageWithCompletionHandler:
_startArtworkRetryTimer
isEqualToSet:
stringByDeletingLastPathComponent
_retryFailedArtworkImportsIfNecessary
setWantsContentsUpdate:
hasSelectedRecommendationWithIdentifier:
_recommendations
_reloadLibraryRecommendations
wantsContentsUpdate
_loadingContents
_recommendationExpirationTimer
_recommendationRetryTimer
_recommendationRetryInterval
_artworkRetryTimer
_artworkRetryInterval
_artworkRetryPlaylists
_initialRecommendationsFetchGroup
_hasFetchedInitialRecommendations
_wantsContentsUpdate
_setRecommendationsData:
_produceResponseWithRecommendationsArray:storeItemMetadataResults:completion:
_finishWithResponse:error:
shouldCacheResponse
setShouldCacheResponse:
_shouldCacheResponse
_cachedRecommendationsData
initWithRequest:responseHandler:
decodeObjectForKey:
encodeObject:forKey:
endObservingUpdates
addObserver:forKeyPath:options:context:
_reconcileGreenTeaSettingsIfNecessary
removeObserver:forKeyPath:context:
sharedSynchronizer
beginObservingUpdates
_createDefaultGreenTeaSettingsIfNecessary
observeValueForKeyPath:ofObject:change:context:
_isObserving
_mediaPlaybackCoreDefaults
_mobileIPodDefaults
_nanoMusicSyncDefaults
setMaxConcurrentOperationCount:
setName:
setQualityOfService:
propertySetWithProperties:
initWithProperties:relationships:
kindWithKinds:
kindWithPlaylistEntryKind:options:
setSectionKind:
emptyPropertySet
setScopedContainers:
isCancelled
numberOfItemsInSection:
song
localFileAsset
fileSize
isNonPurgeable
storeAsset
isRedownloadable
setCompletionBlock:
sharedLibraryRequestQueue
addOperation:
kindWithSongKind:
unionSet:
kindWithVariants:options:
kindWithEpisodeKind:
sectionProperties
propertySetByCombiningWithPropertySet:
feedURL
absoluteString
syncInfo
_syncInfo
_handleMediaPinningMusicContentsInvalidatedNotification:
_handleMediaPinningPodcastsContentsInvalidatedNotification:
_handleMusicRecommendationsDidUpdateNotification:
_handleMediaLibraryDidChangeNotification:
defaultMediaLibrary
beginGeneratingLibraryChangeNotifications
_setNeedsMediaSyncInfoUpdate
endGeneratingLibraryChangeNotifications
cancelAllOperations
sharedMediaSyncInfoUpdater
beginUpdatingSyncInfo
endUpdatingSyncInfo
_targetsNeedingSyncInfoSynchronize
_currentSyncInfoSynchronizeTimer
_observing
setQuotaRefObj:
_quotaRefObj
_numItemsAdded
_numItemsSkipped
_numItemsRemoved
initWithFeedURL:episodeLimit:downloadOrder:
episodeLimit
downloadOrder
initWithFeedURL:downloadOrder:
setEpisodeLimit:
_feedURL
_episodeLimit
_downloadOrder
setLimit:
setContentItemID:
downloadedItemsOnly
orderingTermWithProperty:direction:
_sharedPodcastSizeCache
recommendation
_itemsForContainerClass:containerIDs:includingNonLibraryContent:includingDownloadedContentOnly:sizesDictOut:
totalItemCount
_fetchSizeDictForItems:
isEstimate
initWithType:refObj:offPowerSyncAllowed:quotaRefObj:downloadedItemsOnly:
isEqualToContainer:
libraryIdentifiers
ageVerificationState
status
sortDescriptorWithKey:ascending:
setItemSortDescriptors:
itemGroupWithPodcastFeedURL:downloadOrder:
itemGroupWithQuotaRefObj:
setReferenceObj:
setQuotaData:
setType:
setOffPowerSyncAllowed:
setDownloadedItemsOnly:
_offPowerSyncAllowed
_downloadedItemsOnly
_referenceObj
_quotaData
bundleID
distantPast
laterDate:
isEqualToDate:
_exceedsDormancyIntervalForDate:
_bundleID
_handleLocalNotificationIgnoringSenderPID:
_handleRemoteNotification
_postLocalDarwinNotification
postNotificationName:object:userInfo:
baseNotificationName
delegate
_localNotifyToken
_remoteNotifyToken
_localDarwinNotificationName
_remoteDarwinNotificationName
_waitingCount
_hasPendingUpdates
_baseNotificationName
_delegate
numberOfItems
itemAtIndex:
bundleWithIdentifier:
nanoMusicSyncBundle
_pidsFromSyncIDs:containerClass:
_multiverseIdentifiersWithPIDs:groupingType:
midDataArrayFromPlaylistSyncIDs:
initWithData:
entityWithMultiverseIdentifier:
multiverseIdentifierForCollectionWithPersistentID:groupingType:
data
midDataArrayFromAlbumSyncIDs:
midDataFromPlaylistSyncID:
_commonInit
storeRecommendationID
lastModifiedDateComponents
initWithCalendarIdentifier:
setDateFormat:
stringFromDate:
localizedStringWithFormat:
setNumberOfRows:
setNumberOfColumns:
setTileSpacing:
setEntityIdentifier:
setNamespaceIdentifier:
setRevisionIdentifier:
systemGrayColor
setFill
_missingArtImage
staticArtworkCatalogWithImage:
_tiledArtworkRequestForPlaylists:albums:
_artworkCatalogsForLibraryRecommendationAlbumsWithCount:
_artworkCatalogsForLibraryRecommendationPlaylistsWithCount:
arrayByAddingObjectsFromArray:
_fillArtworkMutableArray:toCount:
setArtworkCatalogsBlock:
tracksTiledArtworkCatalogWithRows:columns:
setContentRange:
allocWithZone:
referencesOnlyLibraryContainers
subtitle
lastModifiedDate
_modelObject
_storeRecommendationModelObjects
_subtitle
_lastModifiedDate
_artworkCatalog
_serializerQueue
_selected
_storeRecommendationID
_stringFromSyncState:
assetType
setAssetType:
syncState
setSyncState:
estimatedSyncProgress
setEstimatedSyncProgress:
numberOfAssetItems
setNumberOfAssetItems:
numberOfAssetItemsSynced
setNumberOfAssetItemsSynced:
numberOfAssetItemsNeedingDownload
setNumberOfAssetItemsNeedingDownload:
aggregateAssetItemBytesAdded
setAggregateAssetItemBytesAdded:
_assetType
_syncState
_estimatedSyncProgress
_numberOfAssetItems
_numberOfAssetItemsSynced
_numberOfAssetItemsNeedingDownload
_aggregateAssetItemBytesAdded
activeSyncSessionIdentifier
setActiveSyncSessionIdentifier:
_activeSyncSessionIdentifier
initWithStoreID:feedURL:
storeID
isEqualToPodcastIdentifierSet:
_storeID
<%@:%p totalSize:%llu totalDuration:%f count:%llu>
supportsSecureCoding
TB,R
totalSize
TQ,N,V_totalSize
totalDuration
Td,N,V_totalDuration
count
TQ,N,V_count
v16@?0@"NSString"4@"NMSPodcastSizeInfo"8^B12
sizeInfoDict
T@"NSMutableDictionary",&,V_sizeInfoDict
empty
TB,R,N,GisEmpty
logMessage
T@"NSString",R,N
 (part #%lu) 
%@ - %@%@: <
prefix
T@"NSString",&,N,V_prefix
messageBufferLimit
TI,N,V_messageBufferLimit
podcast-episodes
episode-size-info
NMSPodcastSizeCacheDidUpdateNotification
<%@:%p size:%llu duration:%f isDownloaded:%@>
size
TQ,R,N,V_size
duration
Td,R,N,V_duration
downloaded
TB,R,N,GisDownloaded,V_downloaded
com.apple.NanoMusicSync.NMSPodcastSizeCache
v4@?0
Library
NanoMusicSync
CachedSizeInfo
PodcastCache
v8@?0i4
relationshipDict
T@"NSDictionary",R,N,V_relationshipDict
episodeSizeInfoDict
T@"NSDictionary",R,N
mutableRelationshipDict
T@"NSMutableDictionary",&,V_mutableRelationshipDict
mutableEpisodeSizeInfoDict
T@"NSMutableDictionary",&,V_mutableEpisodeSizeInfoDict
[MediaQuota]
identifer
T@"NSNumber",&,N,V_identifer
itemSize
TQ,N,V_itemSize
listTotalSize
TQ,N,V_listTotalSize
listQuota
TQ,N,V_listQuota
containerIndex
Ti,N,V_containerIndex
itemIndex
Ti,N,V_itemIndex
CTNR:%3d
ITEM:%3d
itemSize:%llu
listSize:%llu
RECOVERED
SKIPPED
REMOVED
evaluationState
T@"NMSQuotaEvaluationState",R,N
-[NMSMediaQuotaManager _evaluateAddedItemsIfNecessary]
 QuotaEvaluation process
Ran out of items
v16@?0@"NSString"4@"NMSMediaItemGroupIterator"8^B12
Reset to interate over quota identifiers with new quota %llu
-[NMSMediaQuotaManager _evaluateAddedItemsIfNecessary]_block_invoke
Artwork
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
NMSActiveAccountDidChangeNotification
NMSSubscriptionStatusDidChangeNotification
CachedICSubscriptionStatusType
com.apple.NanoMusicSync.NMSSubscriptionManager
v12@?0@"ICMusicSubscriptionStatus"4@"NSError"8
sharedManager
T@"NMSSubscriptionManager",R
subscriptionStatus
TI,R,N
syncInfoContainerIdentifier
NanoMusic
NanoPodcasts
Recommendations
NMSMediaSyncInfoDidUpdateNotification
containers
items
itemsIdentifiers
status
cachedProgress
totalBytes
progressBytes
itemCount
playability
userInfo
com.apple.NanoMusicSync
NMSMediaSyncInfo-%@
com.apple.NMSMediaSyncInfo.%@.changed
.plist
MediaSyncInfo
info
T@"NSDictionary",&,N,V_info
target
TI,R,N,V_target
v16@?0@"NSString"4I8^B12
v16@?0@"NSString"4@"NSMutableDictionary"8^B12
T@"NSMutableDictionary",&,D,N
containerIDs
T@"NSArray",C,N,V_containerIDs
 Building item list
CTNR:%3d %@ generated item list which has %lu items.
Skipped %@ because it's empty.
-[NMSMediaItemGroupIterator itemGroupForIdentifiers:]
v24@?0q4r^@12I16^B20
B12@?0@"NMSMediaItemGroup"4@"NSDictionary"8
itemListWithinQuota
T@"NSArray",R,N
sizeForItemListWithinQuota
TQ,N,V_sizeForItemListWithinQuota
sizeForCurrentIdentifier
TQ,R,N
offPowerItemListWithinQuota
sizeForOffPowerItemListWithinQuota
TQ,N,V_sizeForOffPowerItemListWithinQuota
nominatedItemSize
TQ,N,V_nominatedItemSize
iteratingOrder
itemGroups
T@"NSArray",&,N,V_itemGroups
remainingContainers
T@"NSMutableArray",&,N,V_remainingContainers
remainingItemLists
T@"NSMutableArray",&,N,V_remainingItemLists
itemSizesDict
T@"NSMutableDictionary",&,N,V_itemSizesDict
currentContainerIndex
TI,N,V_currentContainerIndex
currentItemIndex
TI,N,V_currentItemIndex
mutableItemListWithinQuota
T@"NSMutableOrderedSet",&,N,V_mutableItemListWithinQuota
mutableOffPowerItemListWithinQuota
T@"NSMutableOrderedSet",&,N,V_mutableOffPowerItemListWithinQuota
indexesToBeRemoved
T@"NSMutableArray",&,N,V_indexesToBeRemoved
NMSMediaPinningMusicContentsInvalidatedNotification
NMSMediaPinningPodcastsContentsInvalidatedNotification
MusicGroupIteratorIdentifier
PodcastsGroupIteratorIdentifier
com.apple.podcasts
com.apple.NanoMusic
com.apple.NanoMusicSync.MediaPinning
com.apple.nanolifestyle.sessiontrackerapp
EnableMusicAutoStart
MusicPlaylistPersistentID
v16@?0@"MPIdentifierSet"4I8^B12
Instance
Date
==> No client token found <==
local
another
playlists
albums
podcasts
CachedIdentifiers
DiskUsage
v8@?0@"NSArray"4
quotaManager
T@"NMSMediaQuotaManager",&,N,V_quotaManager
addedItems
addedMusicItems
addedPodcastsItems
pinnedPlaylists
playlistIdentifiers
pinnedAlbums
albumIdentifiers
workoutPlaylistID
T@"NSNumber",&,N
pinnedPodcastsAreUserSet
TB,N
podcastFeedURLs
offPowerEligibleSongsList
onlyOnPowerSongsList
addedPodcastEpisodesArray
podcastsAssetSyncLimit
NanoMusicCore
NanoMediaRemote
NanoAudioControl
NanoMediaUI
NanoMediaTool
NanoMediaRemote-Oversize
NanoMusicSync-Oversize
com.apple.nanomusic
com.apple.Music
AllowsCellularDataDownloads
PodcastDownloadOrders
PodcastEpisodeLimits
PinnedPodcastsAreUserSet
ListenNowPodcastFeedURLs
PinnedPodcastFeedURLs
PodcastSizeEstimationData
PodcastsSyncAmount
PinnedUpNextPodcastEpisodes
ManuallyPinnedPodcasts
PinnedPodcastIdentifiers
ListenNowPodcastIdentifiers
com.apple.nanomusicsync.settings
com.apple.nanomusicsync.music-pinning-selections
com.apple.nanomusicsync.podcasts-pinning-selections
com.apple.nanomusicsync.podcasts-subscription-metadata
com.apple.nanomusicsync.reco-selections
com.apple.nanomusicsync.reco-library
com.apple.nanomusicsync.reco-store
com.apple.nanomusicsync.sync-state
com.apple.nanomusicsync.podcasts-size-info
IsInProcessNotification
com.apple.nanomusic.sync.defaults
Recently Added
Recently Played
<%@:%p, limitType: %@, limit: %@, pairingID: %@ pinnedPlaylists: %@, pinnedAlbums: %@, workoutPlaylistID: %@ shouldUseLibraryRecommendations: %x, musicRecommendations: %@, libraryRecommendationAlbums: %@, libraryRecommendationPlaylists: %@, pinned podcasts are user set: %x, podcastDownloadOrders %@, podcastEpisodeLimits %@, listenNowPodcastFeedURLs %@, pinnedPodcastFeedURLs %@>
AppActivityStatus
LastUserLaunchDate
LastUserPinningChangeDate
InstallDate
HoursUntilDormant
PinnedPlaylists
WorkoutPlaylist
PinnedAlbums
PinnedPlaylistMIDs
WorkoutPlaylistMID
PinnedAlbumMIDs
LibraryRecommendationPlaylists
LibraryRecommendationAlbums
LibraryRecommendationPlaylistMIDs
LibraryRecommendationAlbumMIDs
ShouldUseLibraryRecommendations
StoreMusicRecommendations
StoreMusicRecommendationsToExclude
CachedRecommendationsData
ClientPinningSettingsToken
SyncStateDict
WatchDefaultsCapabilities
PhoneDefaultsCapabilities
UsesSplitMusicRecommendations
AllowOffChargerAssetSync
SyncPlaylistID
SyncAmountType
SyncAmount
SyncType
LastFullSyncPlaylistID
SyncPlaylistVers
ModDate
SyncDataMigrationRevision
SyncAssetsEnabled
MusicRecommendations
selected
v16@?0@"NSString"4@"NSNumber"8^B12
LastRecommendationUpdateDate
UsesMultiverseIdentifiers
AvailableMediaStorageOnWatch
CachedRecommendationsResponse
SelectedStoreLibraryRecommendationAlbums
SelectedStoreLibraryRecommendationPlaylists
MLLocalizable
RecommendationExpirationDate
LastMusicAppActiveDate
LastSiriFaceActiveDate
assetSyncLimit
T@"NSNumber",C,N,V_assetSyncLimit
T@"NSArray",C,N
libraryRecommendationPlaylists
libraryRecommendationAlbums
shouldUseLibraryRecommendations
musicRecommendationDict
T@"NSDictionary",C,N
cachedRecommendationsData
T@"NSData",C,N
recommendationExpirationDate
T@"NSDate",C,N
lastFullySentAssetSyncPlaylistPersistentID
T@"NSNumber",C,N,V_lastFullySentAssetSyncPlaylistPersistentID
lastFullySentAssetSyncPlaylistVersion
T@"NSNumber",C,N,V_lastFullySentAssetSyncPlaylistVersion
lastMusicAppActiveDate
lastSiriFaceActiveDate
gizmoPodcastDownloadOrders
gizmoPodcastEpisodeLimits
listenNowPodcastFeedURLs
pinnedPodcastFeedURLs
allowOffChargerAssetSync
modificationDate
T@"NSDate",R,N,V_modificationDate
clientPinningSettingsToken
syncStateDict
assetSyncLimitType
TI,N,V_assetSyncLimitType
assetSyncType
TI,N,V_assetSyncType
assetSyncPlaylistPersistentID
T@"NSNumber",&,N,SsetAssetSyncPlaylistPersistentID:,V_assetSyncPlaylistPersistentID
T@"NSNumber",C,N
pinnedPodcasts
T@"NSSet",C,N
listenNowPodcastEpisodes
listenNowPodcastIdentifiers
T@"NSArray",C,N,V_listenNowPodcastIdentifiers
pinnedPodcastIdentifiers
assetSyncPlaylist
T@"MPMediaPlaylist",&,N
T@"MPMediaPlaylist",&,N,V_assetSyncPlaylist
DiskSpace
SongCount
shouldShowFullAlbum
TB,R,N
Requesting recommendations with type: %@ is not supported
Requesting recommendation playlist entries requires a scoped container MPModelPlaylist.
Songs for %@
v8@?0@"MPModelPlaylistEntry"4
v16@?0@4@"NSIndexPath"8^B12
i12@?0@"MPModelPlaylistEntry"4@"MPModelPlaylistEntry"8
v12@?0@"MPModelLibraryResponse"4@"NSError"8
Requesting recommendation songs requires a scoped container MPModelAlbum.
i12@?0@"MPModelSong"4@"MPModelSong"8
@"MPArtworkCatalog"8@?0@"MPModelPlaylist"4
v8@?0@"MPModelPlaylist"4
v8@?0@"MPIdentifierSet"4
request
T@"NMSModelRecommendationsLibraryRequest",C,N,V_request
responseHandler
T@?,C,N,V_responseHandler
GreenTeaMobileIpodCellularKeysAreMirrored
GreenTeaMusicAllowsCellularData
GreenTeaMusicAllowsHighQualityStreamingOnCellular
NMSMusicRecommendationsDidUpdateNotification
NMSMusicRecommendationArtworkDidUpdateNotification
_NMSMusicRecommendationArtworksDidUpdateDistributedNotification
name
T@"NSString",R,N,V_name
persistentID
T@"NSNumber",R,N,V_persistentID
type
TI,R,N,V_type
addedDate
T@"NSNumber",&,N,V_addedDate
playedDate
T@"NSNumber",&,N,V_playedDate
com.apple.NanoMusicSync.NMSMusicRecommendationManager
v8@?0B4
forYouFetchDaysTillStale
debugForYouFetchConfigEnabled
debugForYouFetchMinutesTillStale
v12@?0@"ICURLBag"4@"NSError"8
For You Recommendation
v12@?0@"MPModelResponse"4@"NSError"8
i12@?0@"NMSContainer"4@"NMSContainer"8
v12@?0@"MPModelForYouRecommendationItem"4^B8
v16@?0@"MPModelForYouRecommendationGroup"4i8^B12
v16@?0@"MPModelObject"4i8^B12
v16@?0@"NSString"4i8^B12
v12@?0@"NSArray"4@"NSError"8
forYouFetchMinutesStart
forYouFetchMinutesEnd
debugForYouFetchMinutesStart
debugForYouFetchMinutesEnd
debugForYouFetchDaysFrequency
v16@?0@"MPModelObject"4I8^B12
v16@?0@"NMSMusicRecommendation"4I8^B12
v12@?0@"MPModelPlaylist"4^B8
v8@?0@"UIImage"4
v12@?0@"NSString"4^B8
wantsContentsUpdate
TB,N,V_wantsContentsUpdate
recommendationsArray
storeItemMetadataResults
T@"NSData",&,N,V_cachedRecommendationsData
shouldCacheResponse
TB,N,V_shouldCacheResponse
com.apple.mediaplaybackcore
MPCPlaybackPrivateListeningEnabled
com.apple.mobileipod
MusicAllowsCellularData
MusicAllowsHighQualityStreamingOnCellular
com.apple.NanoMusicSync.MediaSettingsSynchronizer
v16@?0B4{?=ii}8
sharedSynchronizer
T@"NMSMediaSettingsSynchronizer",R
com.apple.NanoMusicSync.NMSMediaSyncInfoUpdater.LibraryRequestQueue
v8@?0@"MPModelObject"4
Sync Info Playlist 
v16@?0@"MPModelPlaylistEntry"4i8^B12
v16@?0@"MPModelPlaylist"4i8^B12
Sync Info Album 
v16@?0@"MPModelSong"4i8^B12
v16@?0@"MPModelAlbum"4i8^B12
Sync Info Recommendation Song
v16@?0@"MPModelSong"4@"NSIndexPath"8^B12
Sync Info Podcasts
v16@?0@"MPModelPodcastEpisode"4i8^B12
v16@?0@"MPModelPodcast"4i8^B12
syncInfo
T@"NSDictionary",R,N,V_syncInfo
numItemsAdded
TI,N,V_numItemsAdded
numItemsSkipped
TI,N,V_numItemsSkipped
numItemsRemoved
TI,N,V_numItemsRemoved
quotaRefObj
T@,W,N,V_quotaRefObj
numItemsAboveQuota
<%@ - feedURL: %@>
feedURL
T@"NSString",R,N,V_feedURL
episodeLimit
TI,N,V_episodeLimit
downloadOrder
TI,R,N,V_downloadOrder
-[NMSRecommendationMediaItemGroup itemList]
Downloaded Items For NonLibrary Container 
-[NMSRecommendationMediaItemGroup itemList]_block_invoke
-[NMSMediaItemGroup initWithType:refObj:offPowerSyncAllowed:quotaRefObj:downloadedItemsOnly:]
<%@ type:%tu, refObj:%@>
-[NMSMediaItemGroup libraryIdentifiersForContainerType:]
-[NMSMediaItemGroup itemList]
+[NMSMediaItemGroup _itemsForContainerClass:containerIDs:includingNonLibraryContent:includingDownloadedContentOnly:sizesDictOut:]
Pinned Items For 
v16@?0@"MPModelObject"4@"NSIndexPath"8^B12
+[NMSMediaItemGroup _itemsForContainerClass:containerIDs:includingNonLibraryContent:includingDownloadedContentOnly:sizesDictOut:]_block_invoke
TI,N,V_type
referenceObj
T@,&,N,V_referenceObj
quotaData
T@"NMSMediaContainerQuotaData",&,N,V_quotaData
offPowerSyncAllowed
TB,N,V_offPowerSyncAllowed
isEstimate
downloadedItemsOnly
TB,N,V_downloadedItemsOnly
T@"NSDictionary",&,N,V_itemSizesDict
%@ bundleID <%@> lastLaunch <%@> lastPinChange <%@> dormancyIntervalInHours <%ld> installDate <%@>
bundleID
T@"NSString",R,N,V_bundleID
.local
.remote
com.apple.NanoMusicSync.NotificationDispatcher
baseNotificationName
T@"NSString",R,N,V_baseNotificationName
delegate
T@"<NMSNotificationDispatcherDelegate>",W,N,V_delegate
_recommendationsData
T@"NSData",&,N,G_recommendationsData,S_setRecommendationsData:
HeavyRotation
com.apple.NanoMusic.Recommendation
com.apple.NanoMusicSync.NMSMusicRecommendation
<%@:%p identifier: %@, modelObject: %@, type: %tu, selected: %@>
RECOMMENDATION_DEFAULT_TITLE_NON_SUBSCRIBER
Heavy Rotation
RECOMMENDATION_HEAVY_ROTATION_SUBTITLE
EEEE
RECOMMENDATION_PERSONALIZED_MIXES_SUBTITLE
Updated every %@
v16@?0@"MPArtworkCatalog"4I8^B12
@"NSArray"8@?0I4
v16@?0@"NSNumber"4I8^B12
Playlist Artwork
v16@?0@"MPModelPlaylist"4@"NSIndexPath"8^B12
Album Artwork
v16@?0@"MPModelAlbum"4@"NSIndexPath"8^B12
identifier
T@"NSString",R,N,V_identifier
storeRecommendationID
T@"NSString",R,N,V_storeRecommendationID
TB,N,GisSelected,V_selected
referencesOnlyLibraryContainers
isHeavyRotation
title
subtitle
lastModifiedDate
T@"NSDate",R,N
artworkCatalog
T@"MPArtworkCatalog",R,N
storeRecommendationModelObjects
NMSSyncManagerSyncStateDidChangeNotification
Unknown
Idle
Pending
Waiting
Metadata Syncing
Asset Updating
Asset Syncing
Unknown [%tu]
NMSSyncProgressInfo [%@]: state %@, progress %0.4f, assets %ld/%ld (need %ld)
assetType
T@"NSString",&,N,V_assetType
syncState
TI,N,V_syncState
estimatedSyncProgress
Tf,N,V_estimatedSyncProgress
numberOfAssetItems
Ti,N,V_numberOfAssetItems
numberOfAssetItemsSynced
Ti,N,V_numberOfAssetItemsSynced
numberOfAssetItemsNeedingDownload
Ti,N,V_numberOfAssetItemsNeedingDownload
aggregateAssetItemBytesAdded
TQ,N,V_aggregateAssetItemBytesAdded
T@"NMSSyncManager",R,N
activeSyncSessionIdentifier
T@,&,N,V_activeSyncSessionIdentifier
storeID
%@ storeID <%@> feedURL <%@>
T@"NSNumber",R,N,V_storeID
NMSPodcastSizeInfo
NSSecureCoding
NSCoding
NMSPodcastSizeEstimation
NMLogAction
NMGenericMessageLogAction
NMLogActionsCoalescer
NMSEpisodeSizeInfo
NMSPodcastSizeCache
NMSMutablePodcastSizeCache
NMSQuotaEvaluationState
NMSQuotaEvaluationLogAction
Logging
NMSMediaQuotaManager
NMSRecommendationArtworkDataSource
MPArtworkDataSource
NSObject
NMSSubscriptionManager
ICEnvironmentMonitorObserver
NanoMusicSync
NMSMediaSyncInfo
NMSMutableMediaSyncInfo
NMSStoreModelLookupRequestOperation
NMSStoreModelLookupRequest
NMSMediaItemGroupIterator
NMSSequentialMediaItemGroupIterator
NMSAlternatingMediaItemGroupIterator
NMSMediaPinningManager
NMSyncDefaults
NMSNotificationDispatcherDelegate
MediaPlayer_Additions
_NMSyncDefaultsAssociatedObject
NMSModelRecommendationsLibraryResponse
NMSModelRecommendationsLibraryRequestOperation
NMSModelRecommendationsLibraryRequest
NMSGreenTeaStreamingDefaults
NMSContainer
NMSMusicRecommendationManager
NMSModelRecommendationsStoreRequestOperation
NMSModelRecommendationsStoreRequest
NMSMediaSettingsSynchronizer
NMSMediaSyncInfoUpdaterOperation
NMSMediaSyncInfoUpdater
NMSMediaContainerQuotaData
NMSPodcastDownloadInfo
NMSPodcastMediaItemGroup
NMSSyncedMediaItemGroup
NMSRecommendationMediaItemGroup
NMSMediaItemGroup
NMSAppActivityStatus
NMSNotificationDispatcher
NMSAdditions
NMSMusicRecommendation
NSCopying
NMSSyncProgressInfo
NMSSyncStatesDict
NMSSyncManager
NMSPodcastIdentifierSet
B8@0:4
v12@0:4@8
@12@0:4@8
v12@0:4@"NSCoder"8
@12@0:4@"NSCoder"8
@8@0:4
d8@0:4
Q8@0:4
B12@0:4@8
v16@0:4Q8
v16@0:4d8
B28@0:4Q8d16@24
v8@0:4
Q28@0:4@8d12Q20
d16@0:4d8
@"NSMutableDictionary"
@"NSString"
@16@0:4@8@12
v12@0:4I8
v20@0:4@8@12I16
@16@0:4@8B12
v16@0:4@8B12
I8@0:4
@"NSMutableArray"
@"NSObject<OS_os_log>"
@28@0:4Q8d16B24
@12@0:4B8
@"NSDictionary"
@"NSObject<OS_dispatch_queue>"
v16@0:4@8@12
i8@0:4
v12@0:4i8
@"NSNumber"
@16@0:4I8@12
@12@0:4I8
@"NMSQuotaEvaluationState"
@20@0:4@8Q12
Q12@0:4@8
@"NSArray"
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B12@0:4#8
B12@0:4:8
Vv8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
B16@0:4@8@12
v16@0:4@8@?12
@20@0:4i8@12@16
v28@0:4i8@12@16@?20@?24
B12@0:4@"MPArtworkCatalog"8
B16@0:4@"MPArtworkRepresentation"8@"MPArtworkCatalog"12
@"MPArtworkRepresentation"12@0:4@"MPArtworkCatalog"8
v16@0:4@"MPArtworkCatalog"8@?<v@?@"MPArtworkRepresentation"@"NSError">12
v12@0:4@"MPArtworkCatalog"8
@"<MPArtworkDataSourceVisualIdenticality>"12@0:4@"MPArtworkCatalog"8
@20@0:4i8@"MPArtworkCatalog"12@"NSDictionary"16
v28@0:4i8@"MPArtworkCatalog"12@"NSDictionary"16@?<v@?@?<v@?@@"NSError">>20@?<v@?@@"NSError">24
v16@0:4@"MPArtworkCatalog"8@?<v@?@"MPExportableArtworkProperties"@"NSError">12
@"NSCache"
v12@0:4@"ICEnvironmentMonitor"8
I16@0:4@8i12
@"ACAccount"
@16@0:4I8B12
I12@0:4@8
f12@0:4@8
v16@0:4I8@12
v28@0:4Q8Q16@24
@16@0:4@8^@12
@12@0:4@?8
@12@0:4^{_NSZone=}8
@"NSMutableOrderedSet"
@16@0:4Q8
@12@0:4L8
v12@0:4B8
v20@0:4q8@16
q12@0:4@8
@"NMSyncDefaults"
@"NMSPodcastSizeCache"
@"NMSMediaQuotaManager"
v12@0:4@"NMSNotificationDispatcher"8
v24@0:4@8@12@16@20
@20@0:4@8@12@16
i12@0:4@8
I12@0:4I8
v20@0:4@8@12@16
B20@0:4@8@12B16
v20@0:4B8@12@16
@"NPSDomainAccessor"
@"NMSNotificationDispatcher"
@"NSDate"
@"MPMediaPlaylist"
v12@0:4#8
@?8@0:4
v12@0:4@?8
@"NMSModelRecommendationsLibraryRequest"
v16@0:4B8@12
@"NSUserDefaults"
@20@0:4@8@12I16
@24@0:4@8i12{_NSRange=II}16
@"NSObject<OS_dispatch_source>"
@"NSSet"
@"NSObject<OS_dispatch_group>"
v20@0:4@8@12@?16
@"NSData"
v24@0:4@8@12@16^v20
@"NSOperationQueue"
@20@0:4@8I12I16
@16@0:4@8I12
@24@0:4@8I12I16B20
@20@0:4@8@12B16
@28@0:4#8@12B16B20^@24
@28@0:4I8@12B16@20B24
@"NMSMediaContainerQuotaData"
@"<NMSNotificationDispatcherDelegate>"
@16@0:4@8i12
@16@0:4@8#12
v16@0:4@8I12
@"MPModelObject"
@"MPArtworkCatalog"
f8@0:4
v12@0:4f8
[PodcastSize] Failed to update podcast size estimation cache with size: %llu, duration: %f, feedURL: %@
[PodcastSize] Updating podcastSizeInfo. Before: %@
[PodcastSize] Updating podcastSizeInfo. After: %@
[PodcastSize] Failed to archive podcasts size info due to: %@
[PodcastSize] Synchronizing sizeInfo updates: %@
[PodcastSize] Podcast %@ provided size %llu is larger than threshold.
[PodcastSize] Podcast %@ provided size is %llu, duration is %f, estimated size %llu based on podcast ratio %f.
[PodcastSize] Podcast %@ provided size is %llu, duration is %f, estimated size %llu based on podcast average.
[PodcastSize] Podcast %@ provided size is %llu, duration is %f, estimated size %llu based on total average ratio %f.
[PodcastSize] Podcast %@ provided size is %llu, duration is %f, total average is %llu, estimated size %llu based on total average.
[PodcastSize] Podcast %@ provided size is %llu, duration is %f, estimated size is %llu. Using static estimate instead.
[PodcastSize] Failed to uarchive podcasts size info due to: %@
%{public}@
[EpisodeSize] Failed to setup due to unexpected dictionary object: %@
[EpisodeSize] Unexpected podcast-episodes dictionary: %@
[EpisodeSize] Unexpected episode-size-info dictionary: %@
[EpisodeSize] Failed to unarchive cached data due to error: %@
Failed to register for notification: %@ with status: %d
[EpisodeSize] Persisting podcastSizeDictionary: %@
[EpisodeSize] Failed to archive podcast size dictionary: %@
%@ %s ****** Started QuotaEvaluation %@!
%@ %s Evaluating items with quota %llu for container lists %{public}@
%@ %s Calculated initial per identifier quotas %{public}@
%@ %s QuotaEvaluation result: itemListWithinQuota (quota: %llu) (count: %lu)
%@ %s QuotaEvaluation result: offPowerItemListWithinQuota (quota: %llu) (count: %lu)
%@ %s QuotaEvaluation result: itemListWithinQuota using %llu bytes
%@ %s Evaluation result: container list %{public}@ used %llu bytes for %lu items
%@ %s ****** Finished QuotaEvaluation! %@
[Subscription] Retrying get subscription status after remote server likely becoming reachable.
[Subscription] Received account store did change notification.
[Subscription] Received subscription status did change notification.
[Subscription] Active account is %@[%@]
[Subscription] currentActiveAccountDSID == nil && newActiveAccountDSID == nil, exiting early
[Subscription] Active account has changed from %@[%@] to %@[%@]
[Subscription] Will get subscription status now
[Subscription] Failed to get IC subscription status with error: %@
[Subscription] Will retry get subscription status after %f seconds
[Subscription] Retrying get subscription status (attempt #%lu).
[Subscription] IC subscription status is now %ld
[Subscription] IC subscription status is updated from %ld to %ld
[Subscription] NanoMusicSync subscription status is updated from %ld to %ld
[SyncInfo] Failed to find valid identifier for container: %@.
%@ %s The reference object array has unexpected type %@
%@ %s Skipping the recommendation (%@) as it has a nil identifier
%@ %s The reference object type is unexpected: %@
Watch version <%@>
NMSMediaPinningManager invalidating Music cache. [External]
Failed to unarchive cached albumIdentifiers due to %@
Failed to archive albumIdentifiers due to %@
Failed to unarchive cached playlistIdentifiers due to %@
Failed to archive playlistIdentifiers due to %@
Pinning album <%{public}@>
[Pinning Validation] pinPlaylist: <%{public}@>, valid: %@
Pinning playlist <%{public}@>
Unpinning album <%{public}@>
Unpinning playlist <%{public}@>
[Pinning Validation] setWorkoutPlaylistID: <%{public}@>, valid: %@
Setting workoutPlaylistID <%{public}@>
[Pinning Validation] Rejecting invalid Playlist PID: %{public}@ -- hidden:%d geniusPlaylist:%d geniusMix:%d folder:%d
[Pinning Validation] Rejecting invalid Playlist PID: %{public}@ -- matchedObjects:%tu
[Pinning Validation] Rejecting invalid Playlist PID: %{public}@
NMSMediaPinningManager invalidating Podcasts cache. [External]
Setting new pinned podcasts are user set value %x
Setting download order %lu for podcast %{public}@
Removing podcast %{public}@
Podcast was previously pinned %{public}@
Setting episode limit %lu for podcast %{public}@
Failed to unarchive cached podcastFeedURLs due to %@
Failed to archive podcastFeedURLs due to %@
Setting new listen now podcast feedURLs %{public}@
Pinning podcast <%{public}@>
Unpinning podcast <%{public}@>
Setting new podcasts asset sync limit %{public}@
Setting new listen now pids %{public}@
[SyncStatus] No clientPinningSettingsToken; using default
[SyncStatus] Vending current syncState stateToken: %{public}@
NMSMediaPinningManager got %{public}@ from %@ process
NMSMediaPinningManager got %{public}@.
NMSMediaPinningManager power state did change %x
_quotaManager (Music containers) workoutPlaylistID: %{public}@
_quotaManager (Music containers) pinnedPlaylists %{public}@
_quotaManager (Music containers) pinnedAlbums %{public}@
_quotaManager (Music containers) including enabled store recommendation %{public}@
_quotaManager (Music containers) NOT including disabled store recommendation %{public}@
_quotaManager (Music containers) Multiple heavyRotationRecommendation; have:%{public}@; got:%{public}@
_quotaManager (Music containers) NOT including disabled Heavy Rotation.
_quotaManager (Music containers) shouldUseLibraryRecommendations:%d, including enabled HR recommendation %{public}@
_quotaManager (Music containers) libraryRecommendationPlaylists %{public}@
_quotaManager (Music containers) libraryRecommendationAlbums %{public}@
_quotaManager (Music containers) skipping Heavy Rotation because there is no enabled Heavy Rotation recommendation.
_quotaManager (Podcasts containers) pinnedPodcastsAreUserSet %x
_quotaManager (Podcast containers) Found Listen Now feed url with downloaded episodes %{private}@
_quotaManager (Podcast containers) Found Listen Now feed url with no downloaded episodes %{private}@
_quotaManager (Podcasts containers) adding podcast %{public}@ with download order %lu
_quotaManager Creating new quota manager with quota %llu
NMSMediaPinningManager invalidating Music cache. [Internal]
NMSMediaPinningManager refreshing playlists and albums. [Internal]
NMSMediaPinningManager invalidating Podcasts cache. [Internal]
NMSMediaPinningManager refreshing podcasts. [Internal]
Could not get disk usage information from the system, using a quota of %llu.
[NMSyncDefaults] Clearing Podcasts defaults
[NMSyncDefaults] Clearing app activity status defaults for %@
[NMSyncDefaults] Begin batch updates.
[NMSyncDefaults] End batch updates.
[NMSyncDefaults] Non-NPS managed properties were updated: %@
[NMSyncDefaults] StoreMusicRecommendations does NOT contain excluded recommendation: %@!
[NMSyncDefaults] Unexpected nil value for key: %{public}@ domain: %{public}@
[NMSyncDefaults] updated value for key: %@ from old value: %@ to new value: %@
[NMSyncDefaults] Removing value for key: %@
[NMSyncDefaults] Updated value for key: %@ from old value: %d to new value: %d
[Recommendation] set wantsContentsUpdate: %@
[Recommendation] Will fetch recommendations for request: %@, queue: %@, completion: %@
[Recommendation] Will return existing recommendations for request: %@
[Recommendation] Calling completion handler with existing recommendations for request: %@
[Recommendation] Initial fetch started for request: %@
[Recommendation] Initial fetch complete for request: %@
[Recommendation] Will wait for initial fetch to complete for request: %@
[Recommendation] Calling completion handler with newly fetched recommendations for request: %@
[Recommendation] Persisting recommendation selections for: %@
[Recommendation] Subscription status changed to %ld. Removing recommendations defaults.
[Recommendation] Subscription status changed to %ld. Reloading store recommendations.
[Recommendation] Active account is changed. Removing recommendations defaults of previous account.
[Recommendation] Pairing finished. Reloading recommendations.
[Recommendation] Requested to reload recommendations before pairing had finished. Skipping.
[Recommendation] Requested to reload recommendations but NanoMusic was never launched. Setting initial active date to now.
[Recommendation] Requested to reload recommendations but Siri Face was never launched. Setting initial active date to now.
[Recommendation] [BagPolicy] Will get bag to determine ForYou fetch staleness period..
[Recommendation] [BagPolicy] Failed to get bag to determine ForYou fetch staleness period: %@
[Recommendation] [BagPolicy] ForYou fetch staleness period from bag is: %@ days
[Recommendation] [BagPolicy] [DebugOverrides] ForYou fetch staleness period from defaults is: %@ minutes
[Recommendation] [BagPolicy] Invalid ForYou fetch staleness period, defaulting to %.0f days.
[Recommendation] [BagPolicy] Requested to reload recommendations but bag indicates to never fetch. Skipping.
[Recommendation] [BagPolicy] Requested to reload recommendations but no recent activity. NanoMusic last active on: %@. Siri Face last active on: %@. Skipping.
[Recommendation] (Defaults) Performing request: %{public}@
[Recommendation] (Defaults) %{public}@ failed with error: %{public}@
[Recommendation] (Defaults) Got cached response: %@
[Recommendation] (Defaults) No previously cached For You feed. Setting up recommendations with library contents.
[Recommendation] Notifying clients about updated recommendations.
[Recommendation] NOT evaluating library music recommendations; expiration date is: %{public}@.
[Recommendation] evaluating library music recommendations.
[Recommendation] Library music recommendations are empty, skipping persisting.
[Recommendation] (Store) Skipped reloading because it's already loading content.
[Recommendation] (Store) Skipped reloading because subscription status is %ld
[Recommendation] (Store) Skipped reloading because expiration date is %@.
[Recommendation] (Store) Performing request: %{public}@
[Recommendation] (Store) %{public}@ failed with error: %{public}@
[Recommendation] (Store) Got response: %@
[Recommendation] (Lookup) Processing section %@ with type: %{public}lu
[Recommendation] (Lookup) Found recommended album: %{public}@
[Recommendation] (Lookup) Found recommended playlist: %{public}@
[Recommendation] (Lookup) Performing request: %{public}@
[Recommendation] (Lookup) %{public}@ failed with error: %{public}@
[Recommendation] (Lookup) Got response: %@
[Recommendation] (Import) Performing request: %{public}@
[Recommendation] (Import) %{public}@ failed with error: %{public}@
[Recommendation] (Import) Imported recommendations songs: %@
[Recommendation] Recommendations contents updated: %@
[Recommendation] Recommendations selections updated: %@
[Recommendation] [BagPolicy] Will get bag to determine next ForYou fetch window..
[Recommendation] [BagPolicy] Failed to get bag to determine next ForYou fetch window: %@
[Recommendation] [BagPolicy] Next ForYou fetch window from bag is: %@ - %@
[Recommendation] [BagPolicy] [DebugOverrides] Next ForYou fetch window from defaults is: %@ - %@
[Recommendation] [BagPolicy] [DebugOverrides] ForYou fetch interval is: %ld days.
[Recommendation] [BagPolicy] Rescheduling next ForYou fetch at: %@
[Recommendation] [BagPolicy] Invalid next ForYou fetch window range, will proceed with previously scheduled date.
[Recommendation] MediaSyncInfo for recommendations no longer valid, deleting old defaults.
[Recommendation] Retry timer fired. Reloading store recommendations.
[Recommendation] Setting up recommendation retry timer after %f seconds.
[Recommendation] (Reload) Scheduling expiration timer with date: %@ (in %f seconds)
[Recommendation] (Reload) Expiration timer fired.
[Recommendation] (Reload) Skipped scheduling reload with expiration date: %@
[Recommendation] (Artwork) Caching artworks for %@
[Recommendation] (Artwork) Cached to artwork for %@ successfully to %@!
[Recommendation] (Artwork) Failed to remove artwork cache at: %@
[Recommendation] (Artwork) Setting up artwork retry timer after %f seconds for %@.
Failed to archive recommendationsData due to %@
Failed to unarchive recommendationsData due to %@
[NMSMediaSettingsSynchronizer] Begin observing setting updates.
[NMSMediaSettingsSynchronizer] Already have default Green Tea cellular settings
[NMSMediaSettingsSynchronizer] Will set default Green Tea cellular settings
[NMSMediaSettingsSynchronizer] Fetched mirroring policy %x
[NMSMediaSettingsSynchronizer] Error fetching mirroring policy %d %d
[NMSMediaSettingsSynchronizer] Neither device is Green Tea capable. Will not reconcile.
[NMSMediaSettingsSynchronizer] Companion has not set Green Tea mirroring yet. We'll wait.
[NMSMediaSettingsSynchronizer] Reconciling on init. Overriding CellularStreamingAllowed with %x and MusicAllowsHighQualityStreamingOnCellular with %x
[NMSMediaSettingsSynchronizer] End observing setting updates.
[NMSMediaSettingsSynchronizer] Devices are not Green Tea. Doing nothing
[NMSMediaSettingsSynchronizer] GreenTeaCellularStreamingAllowed did change. Overriding CellularStreamingAllowed with %x
[NMSMediaSettingsSynchronizer] GreenTeaMusicAllowsHighQualityStreamingOnCellular did change. Overriding MusicAllowsHighQualityStreamingOnCellular with %x
[NMSMediaSettingsSynchronizer] GreenTeaMobileIpodCellularKeysAreMirrored did change. Overriding CellularStreamingAllowed with %x and MusicAllowsHighQualityStreamingOnCellular with %x
[NMSMediaSettingsSynchronizer] Not handling %@ isMirroring %x
[NMSMediaSettingsSynchronizer] Not handling %@
-[NMSMediaSyncInfoUpdaterOperation execute] - %@
-[%@ performWithResponseHandler:] failed with error: %@
NMSMediaSyncInfoUpdater the playlist entry (%@) has a song (%@) with a file size of 0. Assuming that it will be %d MB.
NMSMediaSyncInfoUpdater the album song (%@) has a file size of 0. Assuming that it will be %d MB.
NMSMediaSyncInfoUpdater the recommended song (%@) has a file size of 0. Assuming that it will be %d MB.
NMSMediaSyncInfoUpdater the podcast episode (%@) has a file size of 0. Assuming that it will be %d MB.
/-[NMSMediaSyncInfoUpdaterOperation execute] (finished) - %@
NMSMediaSyncInfoUpdater finished updating sync info for target: %@
NMSMediaSyncInfoUpdater updating due to Music sync preferences changes: %@
NMSMediaSyncInfoUpdater updating due to Podcasts sync preferences changes: %@
NMSMediaSyncInfoUpdater updating due to recommendations changes: %@
NMSMediaSyncInfoUpdater updating due to library changes: %@
%@ %s NMSRecommendationMediaItemGroup: (Library) Fetched %tu itemIDs for %{public}@.
%@ %s NMSRecommendationMediaItemGroup: (SyncInfo) Fetched %tu itemIDs for %{public}@ before checking downloaded status.
%@ %s NMSRecommendationMediaItemGroup: (SyncInfo) Fetched %tu songs for %{public}@
%@ %s NMSRecommendationMediaItemGroup: (SyncInfo) Failed to fetch songs for %{public}@ due to %{public}@
%@ %s Unexpected nil quotaRefObj for refObj:%{public}@
%@ %s No identifiers for type (%lu): %{public}@
%@ %s No itemList: %{public}@
ICAgeVerificationStatus requires verification. Filtering out all explicit content
%@ %s NMSMediaItemGroup: Failed to fetch songs due to empty containers with type: %{public}@
%@ %s NMSMediaItemGroup: Failed to fetch songs for containers with type: %{public}@
%@ %s NMSMediaItemGroup: Fetched %tu songs for containers with sizes %{public}@: %{public}@
%@ %s NMSMediaItemGroup: Failed to fetch songs for containers with type %{public}@: %{public}@ due to %{public}@
[NMSyncDefaults] Received notification: %@
[NMSyncDefaults] Posting notification: %@
[NMSyncDefaults] Found PID %lld which matches MID %{public}@
[NMSyncDefaults] Failed to create entity->PID for MID: %{public}@
[NMSyncDefaults] Created MID %{public}@ for PID %{public}@
[NMSyncDefaults] Failed to create multiverse id for pid: %{public}@, type: %ld
No lastModifiedDateComponents for playlist %@
Filling tiled artwork catalog %tu -> %tu
The recommendation [%{public}@] is an album, but the album information is missing. This is likely to manifest as missing artwork in Music's settings in the Watch app.
The recommended album [%{public}@] is missing its artwork catalog. This is likely to manifest as missing artwork in Music's settings in the Watch app.
The recommendation [%{public}@] is a playlist, but the playlist information is missing. This is likely to manifest as missing artwork in Music's settings in the Watch app.
The recommended playlist [%{public}@] is missing its artwork catalog. This is likely to manifest as missing artwork in Music's settings in the Watch app.
The recommended playlist %@ is missing its artwork catalog.
Failed to fetch artworks for playlists %@ due to %@
The recommended album %@ is missing its artwork catalog.
Failed to fetch artworks for albums %@ due to %@
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
