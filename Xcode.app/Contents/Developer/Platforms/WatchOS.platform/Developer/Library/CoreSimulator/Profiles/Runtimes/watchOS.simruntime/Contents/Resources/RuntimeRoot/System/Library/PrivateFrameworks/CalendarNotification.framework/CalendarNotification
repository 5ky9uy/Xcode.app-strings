@@(#)PROGRAM:CalendarNotification  PROJECT:CalendarNotification-1
CALNBulletinExpireAlertAction
CALNBulletinExpireNotificationAction
CALNBulletinCloseAction
CALNNotificationCloseAction
CALNBulletinAlertViewAction
CALNNotificationViewAction
CALNBulletinSnoozeAction
changeObjectID
entityID
externalID
defaultURL
v4@?0
SignificantTimeChangeNotification
com.apple.mobilecal.preference.notification.calendarsExcludedFromNotifications
com.apple.calaccessd.bulletins.alertsQ
com.apple.calaccessd.bulletins.notificationsQ
com.apple.calaccessd.bulletins.databaseQ
@"EKEventStore"4@?0
v8@?0@"EKTimedEventStorePurger"4
x-apple-eventkit-alert-%@
Close action for alert infos
Close
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
logHandle
T@"NSObject<OS_os_log>",R,N
timedEventStorePurger
T@"EKTimedEventStorePurger",&,N,V_timedEventStorePurger
proxy
T@"BBDataProviderProxy",&,V_proxy
databaseQueue
T@"NSObject<OS_dispatch_queue>",R,V_databaseQueue
alertQueue
T@"NSObject<OS_dispatch_queue>",R,V_alertQueue
context
T@"CALNPersistedNotificationsContext",R,V_context
com.apple.calaccessd.bulletins
v12@?0@"NSDate"4@"NSString"8
v8@?0@"NSString"4
v12@?0@"NSString"4B8
com.apple.calaccessd.notificationMonitorQ
com.apple.calaccessd.bulletinsQ
@"NSArray"4@?0
B12@?0@"EKCalendarNotificationReference"4@"NSDictionary"8
I4@?0
v8@?0@?<v@?>4
RemindersDateAlarmFired
com.apple.calendar.notification
modules
T@"NSArray",R,N
DataProvider
EventProvider
ReminderProvider
AlarmEngine
com.apple.navd.wakeUpForHypothesisUpdate
work
callback
v16@?0@4I8^B12
v8@?0@"EKTravelEngineAgendaEntry"4
com.apple.calendar.LocationAuthDenied
periodicRefreshTimer
B16@?0@4@"EKTravelEngineAgendaEntry"8^B12
v12@?0@"NSString"4^B8
v16@?0@"EKEvent"4I8^B12
v16@?0@"NSString"4@"EKTravelEngineAgendaEntry"8^B12
authorizedInternal
TB,N,V_authorizedInternal
adviceBlock
T@?,C,N,V_adviceBlock
authorized
TB,R,N
authorizationChangedBlock
T@?,C,N,V_authorizationChangedBlock
eventSignificantlyChangedBlock
T@?,C,N,V_eventSignificantlyChangedBlock
/tmp/CalNotificationsAvailable
Notifications
momd
-[CALNPersistedNotificationsContext createPersistentStoreCoordinator]
/Library/Calendar/
Notifications.db
Bulletin
recordID == %@
sectionID = %@
isAlarm = 1
isNotification = 1
bulletinData
AlertInfo
RefreshTimes
recordID
sectionID
isAlarm
isNotification
publisherBulletinID
title
location
eventDate
endDate
eventTimeZone
action
allDay
tentative
proximity
acknowledged
dismissalID
alarmID
refiring
offsetFromTravelTime
pseudoEvent
mapKitHandle
hasGeolocationCoordinates
geolocationLatitude
geolocationLongitude
organizerNotCurrentUser
organizerEmail
startLocationRouting
locationAddress
fireTimeOffsetFromTravelTime
lastTimeBulletinAdded
hasDisplayedLeaveBy
hasDisplayedLeaveNow
hasDisplayedRunningLate
v12@?0@"NSData"4@"NSError"8
appLink
latestHypothesis
refreshTime
EKAlarmEngineAlarmsDidFireNotification
EKAlarmEngineAlarmOccurrencesKey
kCalAlarmEngineDidScheduleAlarmsNotification
com.apple.locationd.vehicle.connected
com.apple.locationd.vehicle.disconnected
LastDBSequence
com.apple.calendar.notification.alarmengine
phone rebooted
calaccessd relaunched
-[_EKAlarmEngine _storeAlarms:nextScheduleLimit:eventStore:]
CacheEndDate
com.apple.mobilecal
CalendarsExcludedFromNotifications
v8@?0@"NSArray"4
-[_EKAlarmEngine _rescheduleTimer]
calshow:%d?eventid=%d
-[_EKAlarmEngine _removeStaleRefiringAlarmsWithEventStore:]
Not Determined
Restricted
Denied
Authorized Always
Authorized In Use
Unknown status
UUID
v12@?0@"RTLocationOfInterest"4@"NSError"8
ENTER
EXIT
-[_EKAlarmEngine _proximityAlertTriggered:entered:]
CONNECTED
DISCONNECTED
UNKNOWN
-[_EKAlarmEngine _vehicleTriggerFired:]_block_invoke_2
/?&:$+,;=@
x-apple-reminder://%@
fireTime
T@"NSDate",&,D,N
entityURI
T@"NSString",&,D,N
T@"NSNumber",&,D,N
entityDate
entityTimeZone
isDelayedProximityAlarm
acknowledgedDate
nextEmissionDate
throttleQueue
emissionTimer
%@-%@
running
TB,N,V_running
throttleIdentifier
T@"NSString",&,N,V_throttleIdentifier
T@"NSObject<OS_dispatch_queue>",&,N,V_throttleQueue
T@"NSDate",&,N,V_nextEmissionDate
T@"PCPersistentTimer",&,N,V_emissionTimer
eventExternalURL
T@"NSString",&,V_eventExternalURL
requestHypothesisRefreshBlock
T@?,C,N,V_requestHypothesisRefreshBlock
cancelHypothesisRequestRefreshBlock
T@?,C,N,V_cancelHypothesisRequestRefreshBlock
emissionBlock
T@?,C,N,V_emissionBlock
startDate
locationString
B12@?0@"NSData"4@"NSData"8
B12@?0@"NSDate"4@"NSDate"8
B12@?0@"CLLocation"4@"CLLocation"8
B12@?0@"NSString"4@"NSString"8
T@"NSString",&,N,V_eventExternalURL
T@"NSDate",&,N,V_startDate
T@"NSDate",&,N,V_endDate
transportTypeOverride
Ti,N,V_transportTypeOverride
T@"NSString",&,N,V_locationString
geoLocation
T@"CLLocation",&,N,V_geoLocation
locationMapKitHandle
T@"NSData",&,N,V_locationMapKitHandle
locationIsAConferenceRoom
TB,N,V_locationIsAConferenceRoom
automaticGeocodingAllowed
TB,N,V_automaticGeocodingAllowed
%@ <%p> {title = %@; date = %@; timeZone = %@}
T@"NSString",R,N
T@"NSString",R,N,V_publisherBulletinID
T@"NSString",R,N,V_title
T@"NSString",R,N,V_location
T@"NSDate",R,N,V_eventDate
T@"NSDate",R,N,V_endDate
T@"NSTimeZone",R,N,V_eventTimeZone
T@"NSUserActivity",R,N,V_appLink
T@"NSURL",R,N,V_action
T@"NSURL",R,N,V_entityID
TB,R,N,V_allDay
TB,R,N,V_tentative
Ti,R,N,V_proximity
T@"NSString",R,N,V_externalID
TB,R,N,V_acknowledged
T@"NSString",R,N,V_dismissalID
T@"NSString",R,N,V_alarmID
TB,R,N,V_refiring
isOffsetFromTravelTimeStart
TB,R,N,V_isOffsetFromTravelTimeStart
isPseudoEvent
TB,R,N,V_isPseudoEvent
T@"NSData",&,N,V_mapKitHandle
hasGeoLocationCoordinates
TB,N,V_hasGeoLocationCoordinates
geoLocationCoordinates
T{CLLocationCoordinate2D=dd},N,V_geoLocationCoordinates
hasOrganizerThatIsNotCurrentUser
TB,N,V_hasOrganizerThatIsNotCurrentUser
organizerEmailAddress
T@"NSString",&,N,V_organizerEmailAddress
T@"NSString",&,N,V_startLocationRouting
T@"NSString",&,N,V_locationAddress
T@"EKTravelEngineHypothesis",&,N,V_latestHypothesis
lastFireTimeOfAlertOffsetFromTravelTime
T@"NSDate",&,N,V_lastFireTimeOfAlertOffsetFromTravelTime
T@"NSDate",&,N,V_lastTimeBulletinAdded
isSuggestedLocation
TB,N,V_isSuggestedLocation
conferenceURL
T@"NSURL",&,N,V_conferenceURL
isOnSharedCalendar
TB,N,V_isOnSharedCalendar
hasDisplayedLeaveByMessage
TB,N,V_hasDisplayedLeaveByMessage
hasDisplayedLeaveNowMessage
TB,N,V_hasDisplayedLeaveNowMessage
hasDisplayedRunningLateMessage
TB,N,V_hasDisplayedRunningLateMessage
currentRouteHypothesizerNotificationType
TI,N,V_currentRouteHypothesizerNotificationType
fireDate
T@"NSDate",&,N,V_fireDate
isPurelyATimeToLeaveAlert
+[RemindersCalendarSourceInfo sortedGroupsOfCalendarsInEventStore:includingInvitations:]
DEFAULT_TASK_CALENDAR_NAME
We're having a really bad day, and we can't even create a reminder list in the local source: %@
the local store doesn't allow tasks and we have no default calendar :(
v16@?0@4@8^B12
calendarArray
T@"NSMutableArray",R,V_array
%@ - Failed to create a valid persistent coordinator or store; context will be nil!
+[EKSideTableContext sideTableContextWithPath:]
Alarm
fireTime > %@
fireTime >= %@ and fireTime <= %@
isDelayedProximityAlarm = YES
refiring = YES and fireTime < %@
refiring = YES and alarmID = %d and fireTime < %@
Setting
key = %@
value
Extras.db
Unable to recover by deleting old database! %@, %@
SideTables
Failed to load schema at %@
Error while importing %@, %@
Creating new database...
Created new database successfully.
Second Error while creating new database %@, %@
%@ - Unable to remove sqlite files
-[EKSideTableContext _persistentStoreCoordinator]
calendarUpcomingEvent
calendarEventInvitation
calendarAttendeeReply
calendarResourceChange
CALNNotificationAcceptAction
CALNBulletinDirectionsAction
CALNBulletinReportProblemAction
CALNNotificationMaybeAction
CALNNotificationDeclineAction
CALNNotificationDeleteAction
CALNSharedCalendarJoinActionIdentifier
CALNSharedCalendarDeclineActionIdentifier
CALNResourceExpireAction
CALNNotificationReportJunkEventAction
CALNNotificationReportJunkCalendarAction
CALNNotificationConferenceCallAction
CALNNotificationSuggestionAcceptActionIdentifier
CALNNotificationSuggestionIgnoreActionIdentifier
CALNNotificationSuggestionDeleteActionIdentifier
Mail_identifier
MKLaunchOptionsDirectionsModeDefault
MKLaunchOptionsDirectionsModeDriving
MKLaunchOptionsDirectionsModeWalking
MKLaunchOptionsDirectionsModeTransit
travel=true
v16@?0@"NSString"4@"EKCalendarItemAlertInfo"8^B12
Suggested Location: %@
com.apple.mobilecal.bulletin-subsection.upcomingEvents
upcomingEventsThread
B8@?0@"<EKIdentityProtocol>"4
com.apple.mobilecal.bulletin-subsection.Responses
com.apple.mobilecal.bulletin-subsection.invitations
Attendee Response
Invitation alert title
Invitation
Time changed to %@
Date changed to %@
Location changed to %@
Location removed
Canceled by %@
Invitation From %@
Unknown Sender
[NOTE] summary argument = %@
status
calinvite:%@
View button for calendar notification
View
Report as spam button for invitation
Report Junk
Accept button for event invitation
Accept
Decline
Maybe
Delete button for event canceled notification
Delete
Shared Calendar Invitation
Invitation to share a calendar with %@.
calinvitelist:
View button for a shared calendar invitation
Join button for shared calendar invitation
Join
com.apple.mobilecal.bulletin-subsection.resourceChanges
Resource change alert title
Shared Event Change
com.apple.mobilecal.bulletin-subsection.suggestions
Add to calendar button for a suggested event
Add to Calendar
Ignore button for a suggested event
Ignore
Delete button for a canceled suggested event
CNContactStore
CNContact
Close action for resource change notifications
View action for resource change notifications
changeType
resourceChangeURI
OK button for resource change notifications
View event
?travel=true
CALNDirectionsMapURLString
Email sender unknown title
Event
mailto:%@?subject=%@
travelAdvisory.userAction.emailSender
Email Sender
MKPlacemark
MKMapItem
MKLaunchOptionsDirectionsModeKey
_MKLaunchOptionsRoutingArrivalDateKey
_MKLaunchOptionsFromTimeToLeaveNotificationKey
FormattedAddressLines
Directions
Snooze
Join Meeting
com.apple.NanoCalendar
com.apple.Calendar
Calendar
sectionSubtype
date
dateIsAllDay
notification.hiddenPreviewsBodyPlaceholder.upcomingEvent
Upcoming Event
notification.hiddenPreviewsBodyPlaceholder.event.invitation
notification.hiddenPreviewsBodyPlaceholder.calendar.invitation
notification.hiddenPreviewsBodyPlaceholder.resourceChange
%u more upcoming events
Summaries
Unlock action label for calendar
Full unlock action label for calendar
slide to view
You have %@ upcoming calendar events
travelAdvisory.userAction.close
travelAdvisory.userAction.view
travelAdvisory.userAction.directions
v12@?0@"EKCalendarItem"4@"EKAlarm"8
travelAdvisory.userAction.snooze
Upcoming Events
Invitations
Invitee Responses
Shared Calendar Changes
Siri Found in Apps
v12@?0@"EKEventStore"4@"EKCalendarItem"8
v12@?0@"NSString"4@"EKTravelEngineHypothesis"8
v8@?0@"EKTravelEngine"4
%@-[%@]
CalendarNotificationRefreshTimer-
travelAdvisory.hypothesisSuppressed
travelAdvisory.hypothesisDisplayed
CSLSUITriggerRemoteClientFactory
com.apple.calendarnotification.uitrigger
com.apple.NanoCalendar.uitrigger.upcomingEvents
Create an alerting event WITH database save.
com.apple.NanoCalendar.uitrigger.upcomingEvents-dry
Create an upcoming event alert WITHOUT database save.
com.apple.NanoCalendar.uitrigger.invitation
Create an invitation WITHOUT database save.
com.apple.NanoCalendar.uitrigger.invitationModified
Create an invitation modification WITHOUT database save.
com.apple.NanoCalendar.uitrigger.invitationCancelled
Create an invitation cancellation WITHOUT database save.
com.apple.NanoCalendar.uitrigger.attendeeReplied
Create an attendee reply WITHOUT database save.
com.apple.NanoCalendar.uitrigger.sharedCalendar.invitation
Create an invitation for a shared calendar WITHOUT database save.
com.apple.NanoCalendar.uitrigger.sharedCalendar.inviteReply
Create a reply for a shared calendar invitation WITHOUT database save.
com.apple.NanoCalendar.uitrigger.sharedCalendar.eventAdded
Create an event for a shared calendar WITHOUT database save.
com.apple.NanoCalendar.uitrigger.sharedCalendar.eventUpdated
Create an event update on a shared calendar WITHOUT database save.
com.apple.NanoCalendar.uitrigger.sharedCalendar.eventDeleted
Create an event deletion on a shared calendar WITHOUT database save.
com.apple.NanoCalendar.uitrigger.nextEvent
Create an alert for the next upcoming event in the database. Currently only used by F5.
Design Sync-up with a longer title
Dino Room
error %@
%@://%@
null-event-id
Design Sync-up
Dinosaur Room
ToBeDecided
null-alarm-id
Gustavo Chaurais
gchaurais@apple.com
I can't make it tomorrow. Could you re-schedule?
x-apple-calevent://null-event-id-%@
Trip to Hawaii
organizer
David Schimon
dschimon@apple.com
name
email
Notifications Design Update
Natalia Maric
nmaric@apple.com
{M} Golden Gate (20) {RESTRICTED} VG6 2nd
absoluteStartDate
relativeStartDateFromNow
absoluteEndDate
relativeEndDateFromStartDate
Beach Time
Waimea Beach
countOfSuggestedNotificationsToIgnoreBlock
T@?,C,N,V_countOfSuggestedNotificationsToIgnoreBlock
reloadNotificationsBlock
T@?,C,N,V_reloadNotificationsBlock
requestHypothesisRefresh
T@?,C,N,V_requestHypothesisRefresh
cancelHypothesisRefreshRequest
T@?,C,N,V_cancelHypothesisRefreshRequest
ceaseTravelMonitoringEvent
T@?,C,N,V_ceaseTravelMonitoringEvent
sendTravelAdviceFeedback
T@?,C,N,V_sendTravelAdviceFeedback
adviceReceivedBlock
T@?,R,N
eventSignficantlyChangedBlock
v8@?0@"NSDate"4
geoCodedLocationsCount
travelEngine.geocoding.unneeded
travelEngine.geocoding.success
MKErrorDomain
travelEngine.geocoding.failure.UnrecognizedDomain
travelEngine.geocoding.failure.MKErrorDomain.UnrecognizedCode
travelEngine.geocoding.failure.MKErrorDomain.MKErrorUnknown
travelEngine.geocoding.failure.MKErrorDomain.MKErrorServerFailure
travelEngine.geocoding.failure.MKErrorDomain.MKErrorLoadingThrottled
travelEngine.geocoding.failure.MKErrorDomain.MKErrorPlacemarkNotFound
travelEngine.geocoding.failure.MKErrorDomain.MKErrorDirectionsNotFound
travelEngine.eligibleEvents.hypothesizerSentHypothesis
travelEngine.eligibleEvents.hypothesizerNeverSentHypothesis
travelEngine.eligibleEvents.maximumTravelTimeDistribution
travelEngine.eligibleEvents.travelTimeNeverExceededLimit
travelEngine.eligibleEvents.travelTimeSometimesExceededLimit
travelEngine.eligibleEvents.travelTimeAlwaysExceededLimit
emi-%@-%@
v12@?0@"MKMapItem"4@"NSError"8
workQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
originalEventInternal
T@"EKTravelEngineOriginalEvent",&,N,V_originalEventInternal
throttle
T@"EKTravelEngineThrottle",&,N,V_throttle
geocoder
T@"CalGeocoder",&,N,V_geocoder
hypothesizer
T@"GEORouteHypothesizer",&,N,V_hypothesizer
geocodedEventEncountered
TB,N,V_geocodedEventEncountered
hypothesizerSentAtLeastOneHypothesis
TB,N,V_hypothesizerSentAtLeastOneHypothesis
travelTimeThresholdExceededState
Ti,N,V_travelTimeThresholdExceededState
maximumTravelDurationEncountered
Td,N,V_maximumTravelDurationEncountered
agendaEntryIdentifier
T@"NSString",&,N,V_agendaEntryIdentifier
originalEvent
T@"EKTravelEngineOriginalEvent",R,N
updateBlock
T@?,C,N,V_updateBlock
entrySignificantlyChangedBlock
T@?,C,N,V_entrySignificantlyChangedBlock
dismissed
TB,N,V_dismissed
PreHypothesizing
Hypothesizing
UnableToHypothesizePermanently
UnableToHypothesizeTemporarily
DoneHypothesizing
(unknown: %lu)
CALNBulletinPerformAssociatedAction
CALNBulletinMarkCompletedAction
CALNBulletinSnooze1HourAction
CALNBulletinSnoozeEveningAction
CALNBulletinSnoozeTomorrowAction
actionURL
userActivity
CALNDefaultReminderSnoozeActionKey
CALNDefaultCompactReminderSnoozeActionKey
com.apple.calaccessd.bulletins.badgeQ
loc=true
com.apple.reminders
CellularTelephonyCapability
facetime
location alerts allowed
locations not allowed
super says YES
super says NO
firstAlert
alarm.fire
Shared Reminders List Invitation
Invitation to share a reminders list with %@.
OK button for shared calendar invitation reply
View reminder
?bb=true
?loc=true
default Reminder title
Reminder
Mark as Completed
Remind me in %d Hour
Remind me this evening
Remind me Tomorrow
Call Now
FaceTime
message
v12@?0@"LSAppLink"4@"NSError"8
Open %@
com.apple.NanoReminders
com.apple.Reminders
Reminders
Watch-QL-Small
Watch-QL-Large
Watch-LL-Small
Watch-LL-Large
New Reminder
Full unlock action label for reminders
You have %@ reminders
%u more reminders
alarm.fire.close
alarm.fire.openLink
v12@?0B4@"NSError"8
alarm.fire.complete
alarm.fire.snooze
New in %@
com.apple.reminders.applicationquickactionnew
com.apple.reminders.applicationquickactionnew.identifier
When I leave
sbApplicationShortcutService
T@"SBSApplicationShortcutService",&,V_sbApplicationShortcutService
class
UTF8String
stateChangedNotificationName
arrayWithObjects:count:
init
alloc
setTimedEventStorePurger:
setTimeout:
setPurgingAllowed:
calendarTimeZone
setTimeZone:
setCreationBlock:
databaseChanged
setChangedBlock:
defaultCenter
_timeZoneChanged:
addObserver:selector:name:object:
dataIsAccessible
fetchDataFromContext
removeObserver:
dealloc
eventStoreWithDispatch:
timedEventStorePurger
acquireCachedEventStoreOrCreate:
allAlarms
countByEnumeratingWithState:objects:count:
externalID
isEqualToString:
sectionIdentifier
fetchAlarmBulletinsForSectionID:
fetchNotificationBulletinsForSectionID:
recordID
setObject:forKey:
_calDatabaseChangedNotificationReceived
_syncDidStart
_syncDidEnd
_significantTimeChanged
firstUnlock
_calendarNotificationSettingChanged
allValues
setWithArray:
protectedItemForBulletinRecordID:
shouldWithdrawBulletin:forItem:
logHandle
protectedRemoveBulletinForID:
proxy
withdrawBulletinsWithRecordID:
_resetSyncTimer
_killSyncTimer
reloadNotifications
removeAllObjects
saveBulletin:withRecordID:forAlarm:
removeObjectForKey:
removeBulletinWithRecordID:
initWithCapacity:
objectForKey:
entityID
scheme
entityScheme
acknowledged
bulletinRequestForAlertInfo:
CalSimulatedDateForNow
willPostBulletinForAlertInfo:
endDate
compare:
addBulletin:forDestinations:
title
subtitle
message
protectedSaveBulletin:forAlertInfo:usingID:
shouldModfyBulletinForAlert:
copy
modifyBulletin:
shouldWithdrawBeforePostingBulletinForAlert:
context
alarmForCalendarItem:matchingExternalID:
absoluteDate
isKindOfClass:
startDateComponents
date
startDate
relativeOffset
dateWithTimeInterval:sinceDate:
numberWithDouble:
acknowledgedDate
timeIntervalSinceDate:
shouldPostBulletinForAlertInfo:
postBulletinForAlertInfo:
array
bulletinRequestWithCalendarNotification:
setRecencyDate:
saveNotificationBulletin:replace:
addObject:
notification
absoluteString
notificationBulletins
containsObject:
addBulletin:interrupt:
setSectionID:
setRecordID:
setPublisherBulletinID:
setUsesExternalSync:
stringWithFormat:
bulletinRequestWithRecordID:publisherBulletinID:
titleStringForAlertInfo:
setTitle:
messageStringForAlertInfo:
setMessage:
eventDate
setDate:
timeIntervalSinceReferenceDate
dateWithTimeIntervalSinceReferenceDate:
setEndDate:
allDay
setDateIsAllDay:
setHasEventDate:
setDateFormatStyle:
setSectionSubtype:
expirationDateForAlertInfo:
setExpirationDate:
actionWithIdentifier:
setExpireAction:
expirationDate
dismissalID
setDismissalID:
initWithToneAlert:
setSound:
closeActionForAlertInfo:
setDismissAction:
viewActionForAlertInfo:
setDefaultAction:
supplementaryActionsForAlertInfo:bulletin:compactLayout:
setSupplementaryActions:forLayout:
contentWithTitle:subtitle:message:
setStarkBannerContent:
setContextValue:forKey:
launchURL
bundleForClass:
localizedStringForKey:value:table:
appearanceWithTitle:
setAppearance:
setActivationMode:
defaultURLForAlertInfo:
setLaunchURL:
dateByAddingTimeInterval:
actionID
bulletinRecordID
withdrawAlertBulletin:
bulletinAcknowledgedWithResponse:acknowledgeAlarm:extraActions:
bulletinContext
URLWithString:
acknowledgeLocationAlertWithURL:entityID:
withdrawNotificationBulletin:
dateWithTimeIntervalSinceNow:
setFireDate:
_syncTimerFired:
initWithFireDate:interval:target:selector:userInfo:repeats:
currentRunLoop
addTimer:forMode:
invalidate
sectionSubtype
protectedAcknowledgeAlarm:forBulletinWithEntityID:externalID:extraActions:
acknowledgeAlerts:includeRefiringAlerts:
removeAlerts:
allKeys
hiddenFromNotificationCenter
needsAlert
removeObject:
_loadNotifications
invalidateBulletins
requestedDarwinNotifications
isEqual:
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
universalSectionIdentifier
defaultSectionInfo
sectionDisplayName
sectionIcon
sectionIconData
parentSectionIdentifier
sortDescriptors
bulletinsWithRequestParameters:lastCleared:
clearedInfoForBulletins:lastClearedInfo:
clearedInfoForClearingAllBulletinsWithLastClearedInfo:
clearedInfoForClearingBulletinsFromDate:toDate:lastClearedInfo:
clearedInfoForBulletins:
sectionParameters
getDataForAttachmentUUID:recordID:withCompletionHandler:
getPNGDataForAttachmentUUID:recordID:sizeConstraints:withCompletionHandler:
getAspectRatioForAttachmentUUID:recordID:withCompletionHandler:
primaryAttachmentDataForRecordID:
attachmentPNGDataForRecordID:sizeConstraints:
attachmentAspectRatioForRecordID:
dataProviderDidLoad
defaultSubsectionInfos
displayNameForSubsectionID:
migrateSectionInfo:oldSectionInfo:
noteSectionInfoDidChange:
receiveMessageWithName:userInfo:
handleBulletinActionResponse:
handleBulletinActionResponse:withCompletion:
syncsBulletinDismissal
displayNameForFilterID:
bulletinsFilteredBy:count:lastCleared:
bulletinsFilteredBy:enabledSectionIDs:count:lastCleared:
initWithNotificationFetchBlock:
eventStore
protectedEventStore
handleDarwinNotification:
alertInfosFired:
unalertedNotificationsReceived:withNotificationReferences:
notificationCountChanged:
notificationsChanged
alarmBulletins
clearAlerts:
reloadNotificationsIfNeeded
.cxx_destruct
databaseQueue
alertQueue
setProxy:
_alertQueue
_notificationsQueue
_databaseQueue
_alarmBulletins
_notificationBulletins
_ignoreLowLevelDatabaseChangedNotifications
_syncTimer
_pendingChanges
_fetchNotificationReferences
_notificationsNeedLoad
_context
_proxy
_timedEventStorePurger
_bbProviderDarwinNotifications
arrayByAddingObjectsFromArray:
startAlarmEngine
startNotificationMonitor
registerDataProviders
registerForNotifications
startTravelEngine
activate
isTravelAdvisorySupported
stop
_alarmsDidFire:
_unalertedNotificationsReceived:
_notificationCountChanged:
_notificationsChanged:
sharedInstance
adviceReceivedBlock
setAdviceBlock:
eventSignficantlyChangedBlock
setEventSignificantlyChangedBlock:
authorizationChangedBlock
setAuthorizationChangedBlock:
requestHypothesisRefreshAtDate:forEventWithExternalURL:
setRequestHypothesisRefresh:
cancelHypothesisRefreshRequestForEventWithExternalURL:
setCancelHypothesisRefreshRequest:
ceaseMonitoringForEventWithExternalURL:
setCeaseTravelMonitoringEvent:
sendFeedbackForPostingLeaveNowNotificationForEventWithExternalURL:
sendFeedbackForPostingLeaveByNotificationForEventWithExternalURL:
setSendTravelAdviceFeedback:
start
initByHandlingTypes:bulletinBoardWithEventStoreGetter:
setAllowedToMarkAlerted:
initWithServiceName:onQueue:
eventNotificationReferences
type
predicateWithBlock:
filteredArrayUsingPredicate:
count
setCountOfSuggestedNotificationsToIgnoreBlock:
attemptReloadSynchronously:
setReloadNotificationsBlock:
addDataProvider:
reminderNotificationReferences
handleBTAJob:named:
userInfo
location
attemptReload
sharedProvider
deactivate
receivedNotificationNamed:
_bulletinQueue
_notificationMonitorQueue
_bbConnection
_eventsProvider
_remindersProvider
_alarmEngine
_travelEngine
_notificationMonitor
modules
_isProtectedDataAvailable
_stopInternal
_registerForNotificationObservation
_installPeriodicRefreshTimer
_installLocationManager
_refreshIfNeeded
_uninstallLocationManager
_unregisterAllAgendaEntries
_unregisterForNotificationObservation
_uninstallSyncYieldTimer
_uninstallPeriodicRefreshTimer
requestHypothesisRefreshAtDate:
cancelHypothesisRefreshRequest
shared
preventMarkingTravelAdvisoryEntriesAsDismissed
setDismissed:
reset
_calSyncClientBeginningMultiSaveNotificationReceived
_calSyncClientFinishedMultiSaveNotificationReceived
_enableTravelAdvisoriesForAutomaticBehaviorNotificationReceived
_significantTimeChangeNotificationReceived
_eventKitFeatureSetChanged
_updateDatabaseEncryptionState
_suggestEventLocationsSettingChanged
btaJobName
cStringUsingEncoding:
_periodicRefreshTimerFired:
throttle
enumerateObjectsUsingBlock:
calendarsForEntityType:
isIgnoringEventAlerts
travelEligibleEventsInCalendars:startDate:endDate:
authorizedInternal
sendFeedbackForPostingLeaveByNotification
_sendFeedbackForPostingNotificationForEventWithExternalURL:feedback:
sendFeedbackForPostingLeaveNowNotification
authorizationStatusAsString:
isLocationManagerStatusAuthorized:
postNotificationName:object:userInfo:deliverImmediately:
setAuthorizedInternal:
numberWithBool:
_installSyncYieldTimer
fuzzyMaximumInitialUpdateIntervalBeforeStartDate
_travelAgendaTimeWindowInterval
_periodicRefreshInterval
initWithTimeInterval:serviceIdentifier:target:selector:userInfo:
setMinimumEarlyFireProportion:
scheduleInQueue:
originalEvent
CalIsBeforeOrSameAsDate:
CalIsAfterDate:
keysOfEntriesPassingTest:
allObjects
removeObjectsForKeys:
bundle
authorizationStatusForBundle:
_authorizedToAcquireLocation
_trimAgendaEntriesBeforeDate:andAfterDate:
travelEligibleEvents:fromStartDate:untilEndDate:
externalURL
preferredLocation
shouldIgnoreNotificationForEvent:
travelStartLocation
routing
routingModeEnumForCalRouteType:
geoTransportTypeAsString:
geoTransportTypeForCalLocationRoutingMode:
latestHypothesis
adviceBlock
setUpdateBlock:
eventSignificantlyChangedBlock
setEntrySignificantlyChangedBlock:
dismissed
structuredLocation
locationString
isEqualToDate:
setEventExternalURL:
setStartDate:
setTransportTypeOverride:
setLocationString:
geoLocation
setGeoLocation:
locationIsAConferenceRoom
setLocationIsAConferenceRoom:
mapKitHandle
setLocationMapKitHandle:
automaticLocationGeocodingAllowed
setAutomaticGeocodingAllowed:
updateWithOriginalEvent:
enumerateKeysAndObjectsUsingBlock:
lastSystemWakeDate
initWithEffectiveBundle:
setDelegate:
requestRefreshTimeInterval
locationManager:didUpdateToLocation:fromLocation:
locationManager:didUpdateLocations:
locationManager:didUpdateHeading:
locationManagerShouldDisplayHeadingCalibration:
locationManager:didDetermineState:forRegion:
locationManager:didRangeBeacons:inRegion:
locationManager:rangingBeaconsDidFailForRegion:withError:
locationManager:didEnterRegion:
locationManager:didExitRegion:
locationManager:didFailWithError:
locationManager:monitoringDidFailForRegion:withError:
locationManager:didChangeAuthorizationStatus:
locationManager:didStartMonitoringForRegion:
locationManagerDidPauseLocationUpdates:
locationManagerDidResumeLocationUpdates:
locationManager:didFinishDeferredUpdatesWithError:
locationManager:didVisit:
authorized
_workQueue
_callbackQueue
_syncYieldTimer
_running
_needsRefresh
_databaseIsEncryptedAndUnreadable
_yieldingToSync
_eventExternalURLsToAgendaEntries
_periodicRefreshTimer
_locationManager
_authorizedInternal
_adviceBlock
_authorizationChangedBlock
_eventSignificantlyChangedBlock
defaultManager
pathForSentinelFile
fileExistsAtPath:
deleteDBIfNeeded
createPersistentStoreCoordinator
setPersistentStoreCoordinator:
setUndoManager:
setMergePolicy:
pathForResource:ofType:
fileURLWithPath:
initWithContentsOfURL:
managedObjectModel
urlForPersistentStore
dictionaryWithObjectsAndKeys:
initWithManagedObjectModel:
addPersistentStoreWithType:configuration:URL:options:error:
removeSqliteFiles
stringWithUTF8String:
createFileAtPath:contents:attributes:
shouldBehaveAsRestart
persistentStoreCoordinator
_destroyPersistentStoreAtURL:withType:options:error:
rootDirectory
stringByAppendingPathComponent:
fetchRequestWithEntityName:
setFetchLimit:
predicateWithFormat:
setPredicate:
executeFetchRequest:error:
firstObject
andPredicateWithSubpredicates:
arrayWithCapacity:
valueForKey:
unarchivedObjectOfClass:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
fetchBulletin:
insertNewObjectForEntityForName:inManagedObjectContext:
setValue:forKey:
sectionID
save:
deleteObject:
fetchAlertInfo:
publisherBulletinID
eventTimeZone
name
action
tentative
proximity
numberWithInteger:
alarmID
refiring
isOffsetFromTravelTimeStart
isPseudoEvent
hasGeoLocationCoordinates
geoLocationCoordinates
hasOrganizerThatIsNotCurrentUser
organizerEmailAddress
startLocationRouting
locationAddress
lastFireTimeOfAlertOffsetFromTravelTime
lastTimeBulletinAdded
hasDisplayedLeaveByMessage
hasDisplayedLeaveNowMessage
hasDisplayedRunningLateMessage
appLink
_createUserActivityDataWithOptions:completionHandler:
fetchRefreshTime:
fetchBulletinsInSection:includeAlarms:includeNotifications:
dictionaryWithCapacity:
timeZoneWithName:
_initWithUserActivityData:
boolValue
integerValue
initWithTitle:location:date:endDate:timeZone:allDay:tentative:publisherBulletinID:entityID:appLink:action:proximity:externalID:acknowledged:dismissalID:alarmID:isOffsetFromTravelTimeStart:refiring:pseudoEvent:
setMapKitHandle:
setHasGeoLocationCoordinates:
doubleValue
setGeoLocationCoordinates:
setHasOrganizerThatIsNotCurrentUser:
setOrganizerEmailAddress:
setStartLocationRouting:
setLocationAddress:
setLatestHypothesis:
setLastFireTimeOfAlertOffsetFromTravelTime:
setLastTimeBulletinAdded:
setHasDisplayedLeaveByMessage:
setHasDisplayedLeaveNowMessage:
setHasDisplayedRunningLateMessage:
saveAlertInfo:withRecordID:
removeAlertInfoWithRecordID:
saveRefreshTime:forRecordID:
removeRefreshTimeForRecordID:
fetchAlertInfosAndRecordIDs
fetchRefreshTimesAndRecordIDs
_updateRegionMonitoring:
removeObserver:name:object:
_killTimer
sideTableContext
settingForKey:
intValue
_simulatedOffsetChanged:
_isRegionMonitoringSupported
_shouldRefireAlarms
_shouldUseCoreRoutine
_allowConservativeEntry
_updateWithForceForAlarmTable:forFences:
_isDataProtected
_rescheduleTimer
areLocationsCurrentlyEnabled
_removeAllFencesSynch
_databaseChanged
_timeDidChangeSignificantly
_locationDaemonDidLaunch
_protectedDataDidBecomeAvailable
_motionUpdatedWithConnectionState:
_eventStore
_haveAlarmsChanged:
_populateAlarmTable:
_adjustFences:
_removeStaleRefiringAlarmsWithEventStore:
sequenceNumber
changesSinceSequenceNumber:
delayedProximityAlarms
refiringAlarms
deleteAllAlarms
stringValue
insertNewAlarm
ownerID
ownerDate
ownerURI
setEntityURI:
numberWithInt:
setEntityID:
setEntityDate:
ownerTimeZone
setEntityTimeZone:
setAlarmID:
fireDate
setFireTime:
setExternalID:
setAcknowledgedDate:
setRefiring:
fireTime
objectIDWithEntityType:rowID:
objectWithObjectID:
insertObject:
setSetting:forKey:
standardUserDefaults
synchronize
persistentDomainForName:
CalIsBeforeDate:
_dateFormatter
stringFromDate:
calendarIdentifier
addObjectsFromArray:
_storeAlarms:nextScheduleLimit:eventStore:
_populateFinished
alarmOccurrencesBetweenStartDate:endDate:inCalendars:completion:
setDateStyle:
setTimeStyle:
nextAlarmFireTime
dictionaryWithObject:forKey:
postNotificationName:object:userInfo:
alarmsBetweenStartDate:endDate:
arrayWithArray:
setWithCapacity:
initWithCalendarIdentifier:
entityTimeZone
length
eventForUID:occurrenceDate:
entityDate
components:fromDate:toDate:options:
dateByAddingComponents:toDate:options:
conferenceURLForDisplay
_publisherBulletinIDForTask:
entityURI
initWithString:
_alertInfoAlarmIDFromSideAlarm:
setConferenceURL:
_notifyAlarmsFired:
objectID
rowID
publicObjectWithObjectID:
_isAlarmAcknowledgedWithAcknowledgedDate:fireDate:
owner
completionDate
dueDate
monitoredRegions
identifier
stopMonitoringForRegion:
areLocationsAllowedWithAuthorizationStatus:
bundleWithPath:
_stringForAuthorizationStatus:
_shouldAdjustFencesWithStatus:
systemTimeZone
calendarDateWithDate:timeZone:
calendarDateForDay
calendarDateByAddingDays:
UUID
center
coordinate
radius
defaultGeofencedReminderRadius
referenceFrame
initWithCenter:radius:identifier:
setReferenceFrame:
startMonitoringForRegion:
initWithLatitude:longitude:
_updateRegionMonitoringForRegion:withLocationOfInterest:forLocation:
fetchLocationOfInterestAtLocation:withHandler:
locationBasedAlarmOccurrencesWithCompletion:
alwaysSetArrivedAndSettledForReminders
setConservativeEntry:
isConservativeEntryEnabled
alarmWithUUID:
areLocationsAllowed
ownerUUID
calendarItemWithIdentifier:
externalURI
dueDateComponents
dateFromComponents:
hour
minute
second
timeZone
_alertInfoAlarmIDFromEKAlarm:
clientLocation
address
_publisherBulletinIDForReminder:
_proximityAlertTriggered:entered:
_removeAllFences
_setupLocationManager
_resetLocationManager
areVehicleTriggersEnabled
_insertSideAlarmObjectForVehicleTriggerAlarm:forReminder:withDelay:eventStore:context:
vehicleTriggerAlarmOccurrencesWithCompletion:
refiringAlarmAlreadyExists:
_publisherBulletinIDForTaskUniqueIdentifier:
calendarItemExternalIdentifier
_timerFired
_allowVehicleTrigger
_debugStringForVehicleConnectionState:
_vehicleTriggerFired:
_lastDBSequence
_dispatchQueue
_nextFireDate
_lastCheckpoint
_populating
_populateStart
_needsAlarmTablePopulation
_fencesNeedAdjusted
_routineManager
_tomorrow
_regionMonitoringEnabled
_includeRefiringAlarmsForInitialReschedule
_refirePastAlarmsForInitialUpdate
_monitoredRegions
_shouldUpdateWithForceForAlarmTable
_shouldUpdateWithForceForFences
_vehicleConnectionState
setThrottleIdentifier:
throttleIdentifier
setThrottleQueue:
_uninstallEmissionTimer
initWithSuperclassDescription:
nextEmissionDate
setKey:withDate:
throttleQueue
setKey:withPointerAddress:
emissionTimer
setKey:withObject:
build
shouldBypassTravelEngineThrottle
_fireEmissionBlock
emissionThresholdTimeInterval
_updateEmissionDate:
eventExternalURL
numberWithUnsignedInteger:
_emissionTimerFired:
setNextEmissionDate:
_createEmissionTimerWithDate:
emissionBlock
setEmissionTimer:
_requestHypothesisRefreshInterval
tearDown
updatePredictedDepartureDate:
requestHypothesisRefreshBlock
setRequestHypothesisRefreshBlock:
cancelHypothesisRequestRefreshBlock
setCancelHypothesisRequestRefreshBlock:
setEmissionBlock:
running
setRunning:
_eventExternalURL
_requestHypothesisRefreshBlock
_cancelHypothesisRequestRefreshBlock
_emissionBlock
_throttleIdentifier
_throttleQueue
_nextEmissionDate
_emissionTimer
setKey:withString:
isEqualToData:
altitude
transportTypeOverride
locationMapKitHandle
automaticGeocodingAllowed
isEqualToOriginalEvent:
_locationIsAConferenceRoom
_automaticGeocodingAllowed
_startDate
_endDate
_transportTypeOverride
_locationString
_geoLocation
_locationMapKitHandle
copyWithZone:
isPurelyATimeToLeaveAlert
resetTimeToLeaveDisplayState
isSuggestedLocation
setIsSuggestedLocation:
conferenceURL
isOnSharedCalendar
setIsOnSharedCalendar:
currentRouteHypothesizerNotificationType
setCurrentRouteHypothesizerNotificationType:
_allDay
_tentative
_acknowledged
_refiring
_isOffsetFromTravelTimeStart
_isPseudoEvent
_hasGeoLocationCoordinates
_hasOrganizerThatIsNotCurrentUser
_isSuggestedLocation
_isOnSharedCalendar
_hasDisplayedLeaveByMessage
_hasDisplayedLeaveNowMessage
_hasDisplayedRunningLateMessage
_publisherBulletinID
_title
_location
_eventDate
_eventTimeZone
_appLink
_action
_entityID
_proximity
_externalID
_dismissalID
_alarmID
_mapKitHandle
_organizerEmailAddress
_startLocationRouting
_locationAddress
_latestHypothesis
_lastFireTimeOfAlertOffsetFromTravelTime
_lastTimeBulletinAdded
_conferenceURL
_currentRouteHypothesizerNotificationType
_fireDate
_geoLocationCoordinates
sourceType
constraints
allowsCalendarAddDeleteModify
canAddList
_isNonEmpty
dictionary
sources
readWriteCalendarsForEntityType:
sharedCalendarInvitationsForEntityTypes:
defaultCalendarForNewReminders
localSource
isEnabled
allowsTasks
calendarForEntityType:eventStore:
setSource:
saveCalendar:commit:error:
sortedGroupsOfCalendarsInEventStore:includingInvitations:
initWithSource:
sortOrder
source
canDeleteList
shouldShowWhenEditingLists
shouldShowWhenViewingLists
calendarArray
_source
_array
sourceIdentifier
isSharingInvitation
sideTableContextWithPath:
initWithPath:
persistentStores
_persistentStoreCoordinator
entityForName:inManagedObjectContext:
setEntity:
setIncludesPendingChanges:
_alarmsMatchingPredicate:
sortDescriptorWithKey:ascending:
arrayWithObject:
setSortDescriptors:
objectAtIndex:
_settingForKey:
_pathForPersistentStore
_managedObjectModel
_urlForPersistentStore
_removeSqliteFiles
_path
junkStatus
transportType
_launchOptionsDirectionsModeForTransportType:
_launchOptionsDirectionsModeForLocationRoutingMode:
showReportAProblemNotificationButton
initWithEvent:view:forceLocal:
_eventOccurrenceWithURI:
containsString:
allowsLocationAlerts
initWithEffectiveBundleIdentifier:
markAsHavingReceivedLocation
_date:isWithinEightMinutesOfDate:
dictionaryWithDictionary:
authorizationStatusForBundleIdentifier:
_updateRefreshTimerForEventWithExternalURL:
_alertHasTravelInformation:
_mayCeaseRouteMonitoringForAlertInfo:
ceaseTravelMonitoringEvent
_removeRefreshTimerForEventWithExternalURL:
countOfSuggestedNotificationsToIgnoreBlock
sharedService
setBadgeValue:forBundleID:
bulletinRequestWithSuggestionNotifications:
mutableCopy
removeObjectsInArray:
shouldIncludeTravelAdvisoryDescription:
timeToLeaveStringWithHypothesis:location:
timeToLeaveStringForAlertInfo:
setWithObject:
setSubsectionIDs:
setThreadID:
_eventWithURI:checkValid:
isAllDay
setCategoryID:
organizer
isCurrentUser
_getContactIdentifierForIdentity:
setPeopleIDs:
attendees
_getContactIdentifiersForAttendees:includeBlock:
currentCalendar
_iconForDate:calendar:
setIcon:
_setEventRepresentationForAlertBulletin:timeToLeaveString:eventIfExists:
_iconImageDataForDate:calendar:format:
variantWithFormat:imageData:
addVariant:
iconImageWithDate:calendar:format:
initWithObjects:
timeChanged
dateChanged
locationChanged
dateTimeStringForEventDate:alwaysIncludeDate:allDayEvent:
couldBeJunk
_getDisplayNameForJunkIdentity:
insertObject:atIndex:
scanForConflicts
sharedGenerator
conflictStringForConflictDetails:maxTitleLength:
componentsJoinedByString:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
status
_expirationDateForEventInvitation:
setSummaryArgument:
canBeRespondedTo
supplementaryActions
setModalAlertContent:
_setPropertiesOnBulletinRequest:fromResourceChange:contactIdentifier:
allDescriptionStringsWithOptions:
_logDisplayedSuggestionNotification:
modalAlertContent
statusChanged
participantStatus
commentChanged
comment
subsectionIDs
anyObject
initWithToneAlert:accountIdentifier:
_setEventRepresentationForNotification:bulletin:
entityType
calendarItem
suggestionInfo
uniqueKey
logEventShowedNotificationWithUniqueKey:
_getContactIdentifierForIdentity:withStore:
_getContactPredicateForIdentity:
unifiedContactsMatchingPredicate:keysToFetch:error:
contactPredicate
emailAddress
predicateForContactsMatchingEmailAddress:
phoneNumber
phoneNumberWithStringValue:
predicateForContactsMatchingPhoneNumber:
formattedStringForPhoneNumber:
coalescedInfoForSuggestionNotifications:
earliestSuggestionNotification
descriptionText
setClearable:
buttonWithTitle:action:
addButton:
defaultAction
appendString:
changeType
dictionaryRepresentation
_expirationDateForResourceChange:
URIRepresentation
eventID
resourceChangeFromEventStore:
launchActionWithURL:callblock:
timeToLeaveNotificationRepresentationWithHypothesisMessage:event:date:displayTimeZone:
upcomingEventNotificationRepresentationWithEvent:date:displayTimeZone:
notes
defaultEventNotificationRepresentationWithTitle:message:notes:
userActivityUserInfoForEvent:
setUserActivityUserInfo:
setOrganizerForContactDictionary:
invitationNotificationRepresentationWithNotification:event:date:endDate:timeZone:
responseNotificationWithTitle:message:
resourceChangeNotificationWithNotification:message:date:endDate:timeZone:
hasRecurrenceRules
distantFuture
stringByAppendingString:
directionsActionForAlertInfo:
_conferenceCallActionWithAlertInfo:
addToScalar:value:domain:
actionWithCallblock:
setIdentifier:
_snoozeOrReportAProblemActionForAlertInfo:
_directionsModeForAlertInfo:
dictionaryWithObjects:forKeys:count:
_urlForMapItemHandles:options:
initWithCoordinate:addressDictionary:
initWithPlacemark:
stringByReplacingOccurrencesOfString:withString:
setName:
urlForMapItem:options:
_shouldRequestReportAProblemAction
_reportAProblemActionForAlertInfo:
_snoozeActionWithAlertInfo:
locationStringForAlertInfo:
autoupdatingCurrentLocale
setLocale:
setDoesRelativeDateFormatting:
localizedStringFromDate:dateStyle:timeStyle:
defaultSectionInfoForType:
setSectionType:
setVersion:
setSuppressedSettings:
setNotificationCenterLimit:
setCarPlaySetting:
initWithKey:ascending:
publisherDestination
enabledSectionIDs
maximumCount
sinceDate
distantPast
intersectsSet:
publicationDate
invitationStatus
calendarWithExternalURI:
_resourceChangeURIFromBulletin:
objectIDWithURL:
setInvitationStatus:forEvents:error:
hideCalendarsFromNotificationCenter:error:
removeResourceChanges:error:
removeInviteReplyNotifications:error:
reloadNotificationsBlock
parametersForSubtype:
setHiddenPreviewsBodyPlaceholder:
setVisuallyIndicatesWhenDateIsInFuture:
setSubtypeSummaryFormat:
defaultSubtypeParameters
setUnlockActionLabel:
setFullUnlockActionLabel:
setMissedBannerDescriptionFormat:
setPreservesUnlockActionCase:
setPrivacySettings:
setOrderSectionUsingRecencyDate:
setShowsDateInFloatingLockScreenAlert:
setUsesVariableLayout:
setMessageNumberOfLines:
notifyHypothesizerNotificationForAlertInfo:dismissed:
_trackDirectionsEngagedForTTLAlertForAlertInfo:
snoozeAlarm:withTimeIntervalFromNow:
setSnoozeTimeInterval:alarm:reminder:
_setParticipantStatus:recordID:
_deleteCalendarItemForRecordID:span:
_reportJunkCalendarItemForRecordID:
respond:toCalendarInvite:isJunk:
initWithDictionaryRepresentation:
removeResourceChange:error:
_acknowledgeSuggestedEventForRecordID:accept:
removeEvent:span:error:
_ttlEventTrackerAlertTypeForDate:hypothesis:
_ttlEventTrackerTransportTypeForGEOTransportType:
_ttlEventTrackerETATypeForHypothesis:
trackDirectionsEngagedForTTLAlertWithAlertType:transportType:etaType:hasSuggestedLocation:isOnSharedCalendar:
geoDestinationForAlertInfo:
didDismissUINotification:forPlannedDestination:dismissalType:
initWithMapItemHandle:
initWithCoordinate:
setArrivalDate:
setTransportType:
registerUIAlertTriggers
setSubsectionID:
setShowsInNotificationCenter:
setShowsInLockScreen:
setShowsMessagePreview:
setPushSettings:
setAlertType:
version
subsections
showsInNotificationCenter
showsInLockScreen
showsMessagePreview
pushSettings
subsectionID
alertType
setIsJunk:
sharedConnection
respondToSharedCalendarInvite:forCalendarWithID:accountID:queue:completionBlock:
sharedOwnerName
sharedOwnerEmail
sharedOwnerPhoneNumber
recordRecentForContactWithName:emailAddress:phoneNumber:
responseMustApplyToAll
setParticipationStatus:
setInvitationStatus:
_spanForNewStatusWithEvent:
setParticipantStatus:span:event:
saveEvent:span:error:
performCalendarItemForRecordID:action:
deleteEvent:span:
setIsJunk:shouldSave:
acceptSuggestedEvent:
logEventConfirmedNotificationWithUniqueKey:
logEventRejectedNotificationWithUniqueKey:
deleteSuggestedEvent:
_logSuggestionNotificationResponse:
calendar
isSuggestedEventCalendar
logEventDismissedNotificationWithUniqueKey:
logEventEngagedNotificationWithUniqueKey:
_receivedHypothesis:forEventWithExternalURL:
_clearTravelAdvisoryHypotheses
startTimeZone
uniqueId
isTentative
hasAlarms
isSuggestionsCalendar
isPrediction
sharingStatus
_clearHypothesisAndUpdateBulletinForAlertInfo:
travelState
_updateNotificationTypeForAlertInfo:withDate:
doesHypothesisSatisfyMinimumAllowableTravelTime:
forceDisplayOfNewTravelAdvisoryHypotheses
aggressiveTravelTime
_recordUpcomingEventAlertSuppression
travelStateIndicatesTravelingTowardDestination:
_timeToLeaveStateAlreadyDisplayedBasedOnHypothesis:alertInfo:date:
effectiveTravelAdvisoryTravelTimeForHypothesis:
minimumAllowableTravelTime
_recordDisplayOfInitialTimeToLeaveAlertWithDate:event:hypothesis:wasFoundInApps:
date:representsApproachingDepartureDateForHypothesis:
sendTravelAdviceFeedback
date:representsImmediateDepartureForHypothesis:
date:representsLatenessForHypothesis:
effectiveDepartureDate
aggressiveDepartureDate
dateBySubtractingCalSimulatedOffset
_setUpRefreshTimerAt:forEventWithExternalURL:
btaJobNameForEvent:
_ttlEventTrackerTravelStateForHypothesisTravelState:
hasPredictedLocation
trackEventFiredTTLAlertWithAlertType:transportType:etaType:travelState:hasSuggestedLocation:isOnSharedCalendar:
trackPseudoEventInitialTimeToLeaveFired
logEventShowedTimeToLeaveNotificationWithUniqueKey:
_recordDisplayOfInitialTimeToLeaveAlert
remoteClientWithMachServiceName:
objectForKeyedSubscript:
addUITriggerRemoteProvider:forUITriggerName:englishUsage:
_createAndSaveFakeEvent
_newFakeUpcomingEventAlertInfo
_newFakeInviteNotificationWithDictionary:
_newFakeInviteModifiedNotificationWithDictionary:
_newFakeInviteCancelledNotificationWithDictionary:
_newFakeAttendeeRepliedNotificationWithDictionary:
_newFakeSharedCalendarInvitationNotificationWithDictionary:
_newFakeSharedCalendarInviteReplyNotificationWithDictionary:
_newFakeSharedCalendarEventAddedNotificationWithDictionary:
_newFakeSharedCalendarEventUpdatedNotificationWithDictionary:
_newFakeSharedCalendarEventDeletedNotificationWithDictionary:
_newFakeNextEventBulletinRequest
eventWithEventStore:
defaultCalendarForNewEvents
setCalendar:
setLocation:
setAllDay:
alarmWithAbsoluteDate:
setAlarms:
saveEvent:span:commit:error:
localizedDescription
initWithType:
_setUpDefaultFakeInvitationNotification:withDictionary:
setTimeChanged:
setDateChanged:
setLocationChanged:
attendeeWithName:emailAddress:address:
setCommentChanged:
setComment:
setParticipantStatus:
initWithParticipant:forEvent:
setAttendees:
setAttendeeReplyChanged:
UUIDString
setURL:
setAlerted:
setHiddenFromNotificationCenter:
setEmailAddress:
setStatus:
setChangeType:
_setUpDefaultFakeSharedInvitationNotification:withDictionary:
predicateForEventsWithStartDate:endDate:calendars:
eventsMatchingPredicate:
calendarItemIdentifier
setCalendarName:
requestHypothesisRefreshInterval
_refreshTimerFired:
handleUITriggerWithName:dictionary:reason:completion:
requestHypothesisRefresh
_alertRecordIDsToAlertInfos
_alertRecordIDsToRefreshTimes
_uiTriggerClient
_suggestionAddedMessages
_countOfSuggestedNotificationsToIgnoreBlock
_reloadNotificationsBlock
_requestHypothesisRefresh
_cancelHypothesisRefreshRequest
_ceaseTravelMonitoringEvent
_sendTravelAdviceFeedback
setAgendaEntryIdentifier:
setWorkQueue:
setCallbackQueue:
setTravelTimeThresholdExceededState:
_uninstallRequestHypothesisRefreshTimer
workQueue
originalEventInternal
setOriginalEventInternal:
entrySignificantlyChangedBlock
callbackQueue
performAgendaEntryEqualityChecksInTravelEngine
_clearEverything
setThrottle:
_createEmissionHypothesisRefreshTimerWithDate:
cancelEmissionHypothesisRefresh
updateBlock
_enhanceLocation
hypothesizer
requestRefresh
_hypothesisRefreshTimerFired
_uninstallEmissionHypothesisRefreshTimer
_createHypothesisRequestRefreshTimerWithDate:
requestHypothesisRefreshBTAJobName
createBTAJobWithName:atDate:
removeBTAJobWithName:
emissionHypothesisRefreshBTAJobName
_performAnalyticsPostProcessing
maximumAllowableTravelTime
_sendFeedbackToHypothesizerForPostingNotification:
geocodedEventEncountered
setGeocodedEventEncountered:
_trackTTLCandidateEvent:
domain
code
maximumTravelDurationEncountered
pushToDistribution:value:domain:significantDigits:
travelTimeThresholdExceededState
hypothesizerSentAtLeastOneHypothesis
_accountForHypothesizerSendingHypothesis
_accountForHypothesizerNeverHavingSentHypothesis
_accountForTravelDurationThresholdExceededState
_accountForMaximumTravelDuration
agendaEntryIdentifier
_requestHypothesisRefreshTimerFired:
_emissionHypothesisRefreshTimerFired
didPostUINotification:
setHypothesizerSentAtLeastOneHypothesis:
setMaximumTravelDurationEncountered:
geocoder
cancel
setGeocoder:
stopHypothesizing
setHypothesizer:
_setUpRouteMonitoring
_accountForNoLocationEnhancementNeeded
elapsedTimeAsNumber:
_accountForGeocodingFailureWithError:
_accountForLocationEnhancementSuccess
_handle
placemark
saveGeocodedLocationsInTravelEngine
updateWithGeocodedMapItemAndSaveWithCommit:eventStore:error:
initWithLocationString:andCompletionBlock:
startGeocoding
_generateDestination
overrideTravelAdvisoryHypothesis
_createSyntheticHypothesis
_updateWithHypothesis:
_accountForGeocodedEventEncounter
_createHypothesizerForDestination:
overriddenTravelAdvisoryHypothesisConservativeTravelTime
overriddenTravelAdvisoryHypothesisEstimatedTravelTime
overriddenTravelAdvisoryHypothesisAggressiveTravelTime
initWithStartDate:conservativeTravelTime:estimatedTravelTime:aggressiveTravelTime:
overriddenTravelAdvisoryHypothesisTransportType
geoTransportTypeForString:
overriddenTravelAdvisoryHypothesisRouteName
overriddenTravelAdvisoryHypothesisSupportsLiveTraffic
overriddenTravelAdvisoryHypothesisCurrentTrafficDensity
geoTrafficDensityForString:
overriddenTravelAdvisoryHypothesisTravelState
geoRouteHypothesisTravelStateForString:
setRouteName:
setSupportsLiveTraffic:
setCurrentTrafficDensity:
setTravelState:
initWithSyntheticGEORouteHypothesis:
hypothesizerForPlannedDestination:
state
currentHypothesis
conservativeTravelTime
estimatedTravelTime
initWithGEORouteHypothesis:
_updateTravelTimeExceededThresholdStateUsingExceededValue:
startHypothesizingWithUpdateHandler:
_dismissed
_geocodedEventEncountered
_hypothesizerSentAtLeastOneHypothesis
_updateBlock
_entrySignificantlyChangedBlock
_originalEventInternal
_throttle
_geocoder
_hypothesizer
_travelTimeThresholdExceededState
_agendaEntryIdentifier
_maximumTravelDurationEncountered
updateQuickActions
resourceSpecifier
calendarItemsWithExternalIdentifier:
hasPrefix:
_updateBadgeCount:
reminderWithExternalURI:
_updateBulletinRequest:forReminder:
firstAlertDate
setFirstAlertDate:
isCompleted
_setReminderContinuityInfo:bulletinRequest:
setLaunchBundleID:
stringRepresentation
hasTimeComponents
dateIsAllDay
originalItem
initWithRemindersList:forceLocal:
customActionWithAlertInfo:forBulletin:
markAsCompletedActionWithAlertInfo:
snoozeActionForAlertInfo:timeSpan:snoozeInterval:
actionButtonTitleForAlertInfo:
actionButtonColorForAlertInfo:
setColor:
component:fromDate:
dateBySettingHour:minute:second:ofDate:options:
timeIntervalSinceNow
useShortReminderSnoozeInterval
localizedStringWithFormat:
_determineMatchingApplicationBundleIdentifierWithOptions:
applicationProxyForIdentifier:
targetApplicationProxy
getAppLinkWithURL:completionHandler:
defaultWorkspace
URLOverrideForURL:
applicationForOpeningResource:
localizedName
systemGreenColor
getRed:green:blue:alpha:
colorWithRed:green:blue:alpha:
setEnabled:
setBulletinCount:
variantWithFormat:imageName:inBundle:
arrayWithObjects:
_shouldIncludeBulletin:sinceDate:addedIDs:
setAllowsAddingToLockScreenWhenUnlocked:
setAllowsAutomaticRemovalFromLockScreen:
_handleDeclineAndRemindMessageWithUserInfo:
openUserActivity:withApplicationProxy:options:completionHandler:
shouldCompleteReminderWhenCustomActionExecuted:
setCompleted:
setCompleted:reminder:
saveReminder:error:
predicateForIncompleteRemindersDueBeforeOrOnDueDate:calendars:sortOrder:
remindersMatchingPredicate:
areQuickActionsSupported
_springBoardRemindersShortcutItemsFromEventStore:
sbApplicationShortcutService
updateDynamicApplicationShortcutItems:forBundleIdentifier:
_sortedListOfCalendarsFromEventStore:
setType:
setLocalizedTitle:
setUserInfo:
launchActionWithBundleID:callblock:
alarms
_bulletinRequestForReminder:
setExpirationEvents:
stringByRemovingURLEscapes
formattedStringValue
authorizationStatusForEntityType:
predicateForContactMatchingPhoneNumber:
digits
phoneNumbers
value
label
localizedStringForLabel:
_formattedPhoneNumberFromPhoneNumber:
_phoneNumberTypeStringFromPhoneNumber:
setSbApplicationShortcutService:
_badgeCountQueue
_sbApplicationShortcutService
CALNRemoteDataProvider
BBRemoteDataProvider
BBDataProvider
BBSectionIdentity
NSObject
CALNBulletinBoardProvider
CADModule
CalActivatable
CalDarwinNotificationReceiver
CALNModuleProvider
CADModuleProvider
EKTravelEngine
CLLocationManagerDelegate
CALNPersistedNotificationsContext
_EKAlarmEngine
EKSideAlarm
EKTravelEngineThrottle
EKTravelEngineOriginalEvent
EKCalendarItemAlertInfo
NSCopying
CALNBundle
RemindersCalendarSourceInfo
EKSideTableContext
CALNNotificationFilter
CALNRemoteEventProvider
EKTravelEngineAgendaEntry
CALNRemoteReminderProvider
Received notification: [%@]
Ignored low-level [%@] notification.
Sync running. Waiting for it to finish before updating in %@.
Validating all alerts.
Removing invalid alert for record ID: %{public}@.
Sync started. Suppressing updates while it runs.
Sync done. %@ will now reload if needed.
Received notification: [%@].
First unlock called in data provider: [%@].
Time zone changed. Reloading.
posting alert-only bulletin for alarm for already past %@
Posting bulletin for alert info with record ID: %{public}@. Alert info: %@. Bulletin: %@. Bulletin title: %@. Bulletin subtitle: %@. Bulletin message: %@.
Inspecting item to determine whether or not to withdraw bulletin. Item: %@. Bulletin: %@.
Fetched alarm for calendar item matching external ID: %{public}@. Alarm: %@.
Setting fire date to absolute date: %{public}@.
Alarm absolute date is nil. Computing fire date using alarm's relative offset and item start date. Alarm's relative offset: %{public}@. Item start date: %{public}@.
Computed fire date: %{public}@. Inspecting item's alarm acknowledged date to determine whether or not to withdraw bulletin. Item's alarm acknowledged date: %{public}@. Bulletin record ID: %{public}@.
Time interval between fire date and alarm acknowledged date: [%{public}@]. Current value of [%{public}@] for should withdraw bulletin. Bulletin record ID: %{public}@.
Item's alarm acknowledged date is nil. Current value of [%{public}@] for should withdraw bulletin. Bulletin record ID: %{public}@.
Item's alarm is nil. Current value of [%{public}@] for should withdraw bulletin. Bulletin record ID: %{public}@.
Item is nil. Current value of [%{public}@] for should withdraw bulletin. Bulletin record ID: %{public}@.
Withdrawing alert: %@.
%@ told not to post bulletin for %@
Unalerted notifications received with notification references. Notifications: %@. Notification references: %@.
Withdrawing bulletin for no-longer-existent notification with record ID: %{public}@. Notification: %@.
Posting bulletin for notification with record ID: %{public}@. Bulletin: %@. Bulletin title: %@. Bulletin subtitle: %@. Bulletin message: %@.
using expiration date %@ for %@
using dismissal ID %@
using alert type %lu for %@
Alert expired: %@.
The user tapped the 'Close' action.  Alert info: [%@]
The user tapped the 'View' action.  Alert info: [%@]
Calendar notification %@ expired
Data provider did load: [%@]
Sync timer fired in %@.
Removing alert with record ID: [%@]
Fetching notifications from the monitor.
Adding notification for %@.
Posting %@.
Removing invalid notification for %@.
invalidating bulletins
reloadNotificationsIfNeeded is about to reload.
Activating Bulletin Board provider
Deactivating Bulletin Board provider.
CALNBulletinBoardProvider notified about darwin notification %@
CALNBulletinBoardProvider does not support handling darwin notification %@.
Handling darwin notification %@
Travel advisories are not supported.  Will not start travel engine.
Starting travel engine.
Registered data providers.
Alarms fired: %lu
received unalerted notifications %@
received count changed %@
received notifications changed
Travel engine initialized: [%@]
The travel engine is already running.  Will not start engine: [%@]
Travel engine preparing to start: [%@]
Travel engine started: [%@]
The travel engine is not running.  Will not stop engine: [%@]
The travel engine is preparing to stop: [%@]
Travel engine stopped: [%@]
nil 'externalURL' given. Will not request hypothesis refresh at date: [%@] for any events.
Requesting hypothesis refresh at date: [%@] for event that has external URL: [%@]
Will not request hypothesis refresh at date: [%@] for event that has external URL: [%@] because is isn't being monitored
nil 'externalURL' given. Will not cancel a hypothesis refresh request for any events.
Canceling hypothesis refresh request for event that has external URL: [%@]
Will not cancel refresh request for event that has external URL: [%@] because it isn't being monitored.
nil 'externalURL' given.  Will not cease monitoring for any events.
Ceasing monitoring for event that has external URL: [%@]
Will not cease monitoring for event that has external URL: [%@] because it isn't being monitored.
Will search for travel agenda candidates between [%@] and [%@].  Calendars to search: [%@]
Location authorization status changed to [%@]
The location authorization state has changed.  self.authorizedInternal: [%@]
The state EventKit feature set was changed
The state of SuggestEventLocations was changed
The travel engine is yielding to sync already.  Ignoring notification.
The travel engine is not currently yielding to sync.  Ignoring notification.
Updating database encryption state.
Installing sync yield timer for travel engine: [%@].
Sync yield timer fired.  Overriding sync yield and refreshing if needed.
Installed sync yield timer with [%ld] second length for travel engine: [%@].
Uninstalling sync yield timer for travel engine: [%@].
Installing a periodic refresh timer for travel engine: [%@].  Timer interval: [%@].  Estimated earliest fire date (based on system time): [%@].  Estimated latest fire date (based on system time): [%@]
Uninstalling the periodic refresh timer for travel engine: [%@].
Registering notification observation for travel engine: [%@].
Unregistering notification observation for travel engine: [%@].
Trimming entries before [%@] and after [%@].
Removing travel agenda entry that ends before the time window: [%@]
Removing travel agenda entry that starts after the time window: [%@]
Data does not need to be refreshed.  Will not refresh data for travel engine: [%@]
Cannot access data. Will not refresh data for travel engine: [%@]
Currently yielding to sync. Will not refresh data for travel engine: [%@]
Calendar system service is not authorized to use location
Refreshing data for travel engine: [%@]
The travel agenda time window interval is [%@] seconds.
Found [%lu] travel agenda candidates.
Inspecting travel agenda candidate event with title [%@], location [%@], start date [%@], and external URL [%@].
No external url for event: [%@].  Will not register as travel agenda item.
No location for event with external URL: [%@].  Will unregister as travel entry if it exists.
Unregistering event with external URL [%@] since it seems to have lost its location.
Event is or may be junk. Will not register as travel agenda item.
No routing method found on event with external URL [%@].  Defaulting to [%@].
Using routing method [%@] for event with external URL [%@].
Creating agenda entry because one does not exist for event with external URL: [%@]
Hypothesis updated for event with external URL: [%@].  Hypothesis: [%@]
Significant change encountered for event with external URL [%@].
The entry has been dismissed, but it's location has changed.  Clearing the dismissed flag for the entry for event with external URL: [%@]
The entry has been dismissed, but it's start date has changed.  Clearing the dismissed flag for the entry for event with external URL: [%@]
The entry has been dismissed.  Will not update the entry for event with external URL: [%@]
Unregistering event with external URL since it's not in the travel window: [%@]
Unregistering all agenda entries.
The periodic refresh timer fired for travel engine: [%@].  Fire time: [%@].  Last system wake date: [%@].
Installation of location manager requested.
Installation of location manager complete.  Location manager: [%@]
Uninstallation of location manager requested.
Uninstallation of location manager complete.
nil 'externalURL' given.  Will not send feedback for posting notification.
nil 'feedback' given.  Will not send feedback for posting notification.
Will not send feedback for posting notification for event that has external URL: [%@] because it isn't being monitored.
Failed to load schema at %{public}@
Couldn't get modelPath.
Error while importing %@, %@
Removing database...
%{public}@ - Unable to remove sqlite files
Unable to recover by deleting old database! %@, %@
Error unarchiving bulletin from persisted notifications context: [%@]
Error saving bulletin data. [%@]
Error archiving Hypothesis Data. [%@]
Error while trying to decode hypothesis from persisted notifications context: [%@]
Stopping
Starting up. Last sequence was %d, context is %@
Alarm engine behaving like %@
Locations not available.  Removing all installed fences.
Protected data now available.
Data protection enabled. Waiting for unlock before updating.
Sync running. Waiting for it to finish before updating.
Alarm table population not started.  Will wait until the end of an existing population action to retry.
Database changed.
Alarms may have changed: %s
Time zone changed.
Simulated offset changed.
%s - EKSideTableContext failed to be created, nothing will be stored
There were %lu alarms found which will occur in the next 15 days
Found %d pre-existing past refiring alarms in the side table...
Replacing previously-held refiring alarm, because it's already in the set of alarms to store: %@ (new fireDate = %@)
Re-adding %ld past refiring alarms to the side table.
Unable to save alarm side table: %@
Populating alarm table
Calendar TZ = %@; System TZ = %@; Time Zone Support = %@
Time Zone Support pref is suspect (%@)
Searching for alarms between [%@] and [%@]
Alarm Table populated in %f
Retrying alarm table population due to previous request to do so.
Rescheduling timer
No cache end date. This means we haven't populated the table. No timer will be set.
We're close to our cache end date. Going to attempt a rebuild.
No alarms found. Setting time to cache end date.
Set _nextFireDate to [%@]
%s - refire date was nil and a new timer won't be scheduled, context was %@
Notifying: %lu alarms fired.
Timer Fired.
Fire date suspiciously old. Resetting to one minute before now.
Looking for alarms between %@ and %@
Found %lu timedAlarms
Found %lu alarm(s)
Removing side alarm for junk or maybe junk event with rowID: %@
Removing side alarm for completed reminder with rowID: %@
Side alarm has no Entity URI, will not fire. rowID: %@
Unable to save alarm side table when pruning side alarms: %@
%s - Unable to create side table context; stale refiring alarms will NOT be removed
Checking for stale refiring side alarms to remove...
Removing refiring side alarm for alarm row ID %d because it was acknowledged (sideAlarm check)
Removing refiring side alarm for row ID %d because it was acknowledged (EKAlarm check)
Removing refiring side alarm for row ID %d because the EKAlarm is gone
Removing refiring side alarm for row ID %d because the owning entity is gone
Removing refiring side alarm for row ID %d because the reminder was completed
Removing refiring side alarm for row ID %d because the fire date moved into the future (old = %@, new = %@)
Sync timer fired.
Sync done.
Significant time change.
Per-calendar notification suppression setting changed.
Location daemon restarted.
Stopping Monitoring for region ID %@
Current location authorization status: %@
Region monitoring not available or enabled. Trigger ignored!
Searching for location-based alarms
Found %lu location-based alarms
CL is monitoring %lu regions
Date criteria not met for alert %@.
Region for alert %@ no longer meets date criteria.  Removing.
Region for alert %@ has changed. Removing.
Can't create region for alarm %@.
Started monitoring for alarm %@.
Could not determine if location for alarm was a location of interest, error: %@
Event store was nil when updating fences!
Updated monitoring for alarm %@, waiting for settled: %@
Not updating monitoring for alarm %@: region appears to have changed
Not updating monitoring for alarm %@: region appears to have been deleted
PROXIMITY ALARM TRIGGERED (%@): %@
Location-based alarm with delay %.f triggered proximity: %@.
Firing location-based reminder alarm: %@
Notifying location-based alarm fired: %@.
%s - Unable to fetch alarm %@.
Entered region %@.
Exited region %@.
General location manager error %@.
region monitoring error for %@: %@.
Location manager authorization status is %@.
Aborted our last attempt to adjust fences.  Doing it now.
Removing all fences due to authorization change
Creating location manager with bundle path %@
Region monitoring supported [%d]
Removing ourselves as a delegate and removing reference to location manager
Changing to monitoring regions
Changing to disabled monitoring regions
Vehicle trigger alarms fired, connected = %@
%s - Unable to create alarm side table, no vehicle triggers will be handled
Firing vehicle delayed trigger alarm for: %@
Vehicle-triggered alarm: %@ with delay %f being added to side table
'NULL' task given.  Will not create a distinct publisher bulletin ID.
Could not find unique identifier for task with entity ID: [%@].  Will not create a distinct publisher bulletin ID.
'nil' task given.  Will not create a distinct publisher bulletin ID.
Could not find unique identifier for reminder: [%@].  Will not create a distinct publisher bulletin ID.
'nil' unique identifier given.  Will not create a publisher bulletin ID.
Could not encode unique identifier: [%@].  Will not create a distinct publisher bulletin ID.
Throttle has been requested to tear down: [%@]
Travel engine throttle tear down: [%@]
No date given.  Tearing down emission timer.
'nil' emission timer given.  Uninstalling emission timer.
The given emission date %@ is before now %@.  Firing the emission block and uninstalling the timer.
The given emission date is the same as the existing emission date.  Will not update the emission timer.  Emission date: [%@]
Firing emission block for travel engine throttle: [%@]
Created a new emission timer [%@] that will fire on the emission date: [%@]
Uninstalling timer [%@] for travel engine throttle: [%@].
Emission timer fired at [%@]
Cleared out the next emission date due to emission timer firing.
%s: Failed to find a reminders calendar. Making one.
Ignoring junk event
Returning nil directions mode since 'alertInfo' is nil.
Directions mode is [%@] for alert info with 'entityID': [%@]. It was determined using the 'transport type': [%@] obtained from the alert info's 'latestHypothesis': [%@].
Directions mode is [%@] for alert info with 'entityID': [%@]. It was determined using the 'location routing mode': [%@] obtained from the alert info's 'startLocationRouting': [%@]
Directions mode is nil since the 'latest hypothesis' and 'startLocationRouting' are nil for alert info with 'entityID': [%@]
Error: Could not find MapKit symbols. As a result cannot obtain launch options directions mode for transport type: [%@]
Error: Could not find MapKit symbols. As a result cannot obtain launch options directions mode for location routing mode: [%@]
Inspecting existing alert info's latest hypothesis to determine whether or not to withdraw bulletin. Bulletin record ID: %{public}@. Latest hypothesis: %@. Existing alert info: %@.
Inspecting bulletin context's external ID to determine whether or not to withdraw bulletin. External ID: %{public}@. Bulletin record ID: %{public}@.
Latest hypothesis is not nil. Current value of [%{public}@] for should withdraw bulletin. Bulletin record ID: %{public}@.
Should withdraw bulletin: [%{public}@]. Bulletin record ID: %{public}@.
Invitation notification count changed to %d
Event badge will change to %ld
Posting bulletin for coalesced suggestion bulletin with record ID: %{public}@. Bulletin: %@. Bulletin title: %@. Bulletin subtitle: %@. Bulletin message: %@.
Constructing time to leave string for alert info: [%@]
Hypothesis is nil. Will not proceed to construct a time to leave string for alert info: [%@].
Determined that travel advisory description should not be included for alert info: [%@].
WARNING: Time to leave description generator returned a time to leave string of length 0 for hypothesis: [%@].
This notification is not of type EKObjectTypeResourceChange: %@
Event Notification continuity omitted because notification had no URI or couldn't find event: %@ / %@
Calendar item does not have an organizer that is not the current user.  In other words, there is no organizer for this event or the current user is the organizer.  Will not add the 'Email sender' action.  Alert info entityID: [%@]
Could not find organizer's email address.  Will not add the 'Email sender' action.  Alert info entityID: [%@].  Organizer's email address: [%@]
The user tapped the 'Email sender' action.  Alert info entityID: [%@]
Added 'Email sender' supplementary action.  'mailto' string: [%@] Alert info entityID: [%@]
The alert info doesn't contain a structured location.  Will not add 'Directions' supplementary action.  Alert info entityID: [%@]
Could not find MapKit symbols.  Will not add 'Directions' supplementary action.  Alert info entityID: [%@]
Could not find directions mode.  Will not add 'Directions' supplementary action.  Alert info entityID: [%@]
Using directions mode [%@] for alert info entityID: [%@]
Map handle found.  Generated URL: [%@]
Geocoordinates found.  Generated URL: [%@]
No map item URL was generated.  Will not add 'Directions' supplementary action.
Added 'Directions' supplementary action.  Action: [%@].  launchURL: [%@].  Alert info entityID: [%@]
Will not request a 'Report a Problem' action for alertInfo with recordID: [%@].
Generated a 'Report a Problem' action for alertInfo with recordID: [%@].
Since a 'Report a Problem' action was generated, the 'Snooze' action will be hidden.  alertInfo recordID: [%@].
No 'alertInfo' provided.  Will not generate a 'Report a problem' action.
The 'alertInfo' does not have a hypothesis.  Will not generate a 'Report a problem' action for the alertInfo with recordID: [%@].
Could not load the diagnostics framework.  Will not generate a 'Report a problem' action.
Will not generate a 'Report a problem' action for alertInfo with recordID [%@] on the watch.
bulletins requested: %@
returning bulletins: %@
Clear requested: %@
Marking %lu invitations as read.
Error marking events as read: %@
Marking %lu shared calendar invitations as read.
Error marking calendars as read: %@
Deleting %lu resource changes.
Error removing resource changes: %@
Deleting %lu invite replies.
Error removing invite reply notifications: %@
Clearing %lu alerts.
The user tapped the 'Directions' action.  launchURL: [%@].  Alert info entityID: [%@]
The user tapped the 'Report a problem' button for the alertInfo with recordID: [%@]
The user tapped the 'Snooze' action.  Alert info entityID: [%@]
Snoozed event: %@ duration: %.1f
The user tapped the 'Delete' action.  Alert info entityID: [%@]
Resource change %@ expired
Removed resource change %@ from database
Failed to remove expired resource change %@
Couldn't find expired resource change %@ to remove
Error deleting canceled suggested event: %@
Set participant status:%ld recordID:%@
Error acknowledging event request %@: %@
resourceChangeURI from bulletin's recordID is %@
resourceChangeURI from context is %@
Error acknowledging request %@: %@
Hypothesis for [%@] received: [%@]
Travel engine authorization state changed to: [%@]
Travel engine event changed significantly.  Will reset 'Time to Leave' display state.  Event external URL: [%@]
Travel hypothesis received: [%@] for event with external URL: [%@]
Acquired event information for travel event with title [%@] location [%@] and external URL: [%@]
'nil' hypothesis received.  Will clear travel advisory information from outstanding bulletin.  Event external URL: [%@].  Event title: [%@]
Suppressing alert because location alerts are disallowed.
We've detected that the user has arrived at the event's location.  Event external URL: [%@].  Event title: [%@]
Modifying alert due to the user's arrival since this event's alert info indicates that the notification stream for this event included at least one manual alert.  Event external URL: [%@].  Event title: [%@]
Removing alert because the user has arrived and we've only shown pure 'Time to Leave' alerts and no manual alerts for this event.  Event external URL: [%@].  Event title: [%@]
The user has not seen travel advisory information for this event yet and we've detected that the user will not arrival until the event is over.  Will not show travel advisory information. Event external URL: [%@]
Found existing alert info for event: [%@]
Bulletin has existing travel hypothesis.  Modifying bulletin.  Event external URL: [%@].
Bulletin recently fired due to a travel time alert.  Modifying bulletin.  Event external URL: [%@].
An alert was already fired for the event and the user is traveling to the destination.  Modifying bulletin.  Event external URL: [%@].
An alert was already fired for this event and showed a Time to Leave message with the same state indicated by this hypothesis.  Suppressing alert.  Event external URL: [%@].
New travel hypothesis received for existing alert.  Re-posting bulletin.  Event external URL: [%@].
WARNING: The predicted travel time of [%@] is less than [%@] (minimum allowable travel time threshold), so we can't provide a 'Time to leave' alert.  Event external URL: [%@].
The event's start date is before now and we haven't posted a bulletin yet.  Ignoring travel advice, which will prevent a bulletin from being posted.  Event external URL: [%@].
The user is definitely traveling to the destination and we haven't posted an alert for this event at all.  Don't bother the user with a new alert.  Suppressing alert.  Event external URL: [%@].
The user is traveling toward the destination and we haven't posted an alert for this event at all.  The event also already has normal alarms on it, so the user will be reminded of this event at some point.  Suppressing alert.  Event external URL: [%@].
New travel advice received and no associated alert exists already.  Adding bulletin.  Event external URL: [%@].
Added bulletin for travel advice with message: [%@]. Event external URL: [%@].
Recording initial alert of Time to Leave notification.
Given 'eventExternalURL' is nil.  Will not update any refresh timers.
Updating refresh timer for event with external URL: [%@]
There is no hypothesis.  Will try to remove the associated refresh timer.  Event external URL: [%@].
Will refresh at date: [%@] when the user needs to 'Leave Now' according to the effective departure date of [%@].  Event external URL: [%@].
Will refresh when the user will become late according to the aggressive departure date of [%@].  Event external URL: [%@].
No message content update is needed.  Will not refresh.  Event external URL: [%@].
Will set up a refresh timer with an adjusted refresh date of [%@].  Event external URL: [%@].
Given 'fireDate' is nil.  Will not set up a refresh timer.
Given 'eventExternalURL' is nil.  Will not set up a refresh timer.
A refresh timer with the same fire date of [%@] has already been set up.  Will not set up a new timer.  Event external URL: [%@].
Scheduling a refresh timer with a fire date of [%@].  Job name: [%s].  Event external URL: [%@].
The refresh timer for event with external URL [%@] fired.
Could not find the corresponding alert info for the event with external URL [%@].  The refresh timer fired, but we won't re-post the bulletin due to this.
This provider is not allowed to post location-based alerts.  The refresh timer fired for the event with external URL [%@], but we won't re-post the bulletin due to this.
The user is traveling to the destination or has arrived.  Will only update the bulletin.  Event external URL: [%@].
An alert was already fired for this event and showed a 'Leave Now' message.  Suppressing alert.  Event external URL: [%@].
The user needs to see the 'Leave Now' alert, so we'll re-post the bulletin for event with external URL: [%@].  Alert info: [%@]
Updating the bulletin for event with external URL: [%@].  Alert info: [%@]
Given 'eventExternalURL' is nil.  Will not remove a refresh timer.
There is no existing timer for event with external URL: [%@].  Will not remove a refresh timer.
Invalidated and removed timer for event with external URL: [%@].
Clearing travel advisory hypothesis information from bulletins.
Refreshing notification after clearing hypothesis information from bulletin with alert info: [%@]
Registering UI triggers
Registering UI trigger %@
EKBBWatchEventProvider: UITrigger requested (Name = %@; Dictionary = %@).
Update with original event requested: [%@]
Event has significantly changed: [%@].  Original event: [%@]
No equality check was performed.  Original event: [%@]
Will attempt to hypothesize.  Previous original event: [%@] Original event: [%@]
Firing request hypothesis refresh block in travel engine for [%@]
Firing cancel hypothesis request block in travel engine for [%@]
Firing emission block in travel engine for [%@]
Requesting refresh for hypothesizer, %@
Request hypothesis refresh timer fired at [%@]
Emission hypothesis refresh timer fired at [%@]
Created a new request refresh timer that will fire at: [%@] for entry: [%@]
Uninstalling request refresh timer for agenda entry: [%@].
Created a new emission refresh timer that will fire at: [%@] for entry: [%@]
Uninstalling emission refresh timer for agenda entry: [%@].
'nil' error given.  Will not account for geocoding failure.
Sending UI feedback to the hypothesizer.  Notification type: [%@].  Original event: [%@]
Clearing all state in the agenda entry for original event: [%@]
A map handle already exists on the event.  Will not enhance location by geocoding the location string.  Original event: [%@]
A geolocation already exists on the event.  Will not enhance location by geocoding the location string.  Original event: [%@]
The location is a conference room without structured location information.  Will not proceed to monitor route.  Original event: [%@].
No map handle or geolocation exists on the event.  Will enhance location by geocoding the location string.  Original event: [%@]
Automatic geocoding is not allowed yet. We will not attempt to geocode for this event [%@]
Geocoding complete.  Elapsed time: [%@] ms.  Original event: [%@]
Encountered error while geocoding.  Will not proceed to monitor route.  Location string: [%@] Error: [%@].
No geocoding results found.  Will not proceed to monitor route.  Location string: [%@].
Map item found after geocoding.  Location string: [%@].  Map item: [%@]
No event external URL found.  Will not save geocoding result to the database. Original event: [%@].
'saveGeocodedLocationsInTravelEngine' set to 'NO.'  Will not save geocoding result to the database. Original event: [%@].
Saved geocoding result to the database successfully. Original event: [%@].
Failed to save the geocoding result to the database successfully. Original event: [%@].  Error: [%@]
Setting up route monitoring.  Original event: [%@]
No map handle or geolocation found.  Will not monitor routing for event.  Original event: [%@]
Found map handle.  Will use to generate destination.  Original event: [%@]
Found geolocation.  Will use for route monitoring.  Original event: [%@].  Geocoordinates - Latitude: [%@], Longitude: [%@]
Creating a synthetic hypothesis.  Original event: [%@]
Created a synthetic hypothesis: [%@]
Creating hypothesizer to monitor routing.  Destination: [%@] Original event: [%@] Hypothesizer: [%@]
Hypothesizer is gone.  Returning early.
Hypothesizer updated to state: [%@].  Original event: [%@]. Hypothesis: [%@]
Done hypothesizing for original event: [%@]
Analyzing hypothesis for original event: [%@]
Conservative Travel time [%@] does not satisfy the initial emission travel time requirement since it is more than the maximum allowable travel time: [%@]. Will not emit hypothesis as a result.
Hypothesis's conservative travel time [%@] meets the initial emission travel time requirement since it is less than or equal to the maximum allowable travel time: [%@]).
Set 'encounteredHypothesisThatSatisfiesInitialEmissionRequirement' to [%@].
Determining whether or not hypothesis satisfies additional travel time requirements. Hypothesis: [%@].
Travel time: [%@] is less than the minimum allowable travel time: [%@]. Will not emit hypothesis as a result.
Arrival time: [%@] is after event end date: [%@]. Will not emit hypothesis as a result.
Hypothesis satisfied additional travel time requirements. Will emit hypothesis as a result. Hypothesis: [%@].
Encountered hypothesis that satisfies additional travel time requirements. Hypothesis: [%@]. Original event: [%@]
Updating agenda entry with hypothesis: [%@]. Agenda entry: [%@].
database changed
Updating badge count since database changed. EventStore: [%@]
Updating badge count due to first unlock. EventStore: [%@]
Should post bulletin for item: %@ ? %@ %@
Updating badge count as a result of a date alarm being fired. EventStore: [%@]
overriding alert type to %lu for %@
Upcoming reminder: title %@, date %@, isAllDay %i, expirationDate %@
Bulletins requested.
Added %lu alerts.
Added %ld reminder list notifications.
Marking %lu shared reminder list invitations as read.
Updating badge count as a result of the data provider loading. EventStore: [%@]. DataProvider: [%@]
Received message: %@ userInfo: %@
Error opening app link: %@
Completed reminder: %@
Snoozed reminder: %@ duration: %f
Updating badge count to [%@]
Could not get reminder with identifier "%@" from event store!
@8@0:4
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
@"BBSectionInfo"8@0:4
@"BBSectionIcon"8@0:4
@"NSData"8@0:4
@16@0:4@8@12
@12@0:4@8
@20@0:4@8@12@16
v20@0:4@8@12@?16
v24@0:4@8@12@16@?20
f12@0:4@8
v8@0:4
B16@0:4@8@12
v12@0:4@8
v16@0:4@8@12
v16@0:4@8@?12
@20@0:4I8I12@16
@24@0:4I8@12I16@20
@"NSArray"8@0:4
@"NSSet"16@0:4@"BBBulletinRequestParameters"8@12
@16@0:4@"NSSet"8@12
@20@0:4@"NSDate"8@"NSDate"12@16
@12@0:4@"NSSet"8
@"BBSectionParameters"8@0:4
v20@0:4@"NSUUID"8@"NSString"12@?<v@?@"NSData">16
v24@0:4@"NSUUID"8@"NSString"12@"BBThumbnailSizeConstraints"16@?<v@?@"NSData">20
v20@0:4@"NSUUID"8@"NSString"12@?<v@?f>16
@"NSData"12@0:4@"NSString"8
@"NSData"16@0:4@"NSString"8@"BBThumbnailSizeConstraints"12
f12@0:4@"NSString"8
@"NSString"12@0:4@"NSString"8
B16@0:4@"BBSectionInfo"8@"BBSectionInfo"12
v12@0:4@"BBSectionInfo"8
v16@0:4@"NSString"8@"NSDictionary"12
v12@0:4@"BBActionResponse"8
v16@0:4@"BBActionResponse"8@?<v@?B>12
@"NSSet"20@0:4I8I12@16
@"NSSet"24@0:4I8@"NSSet"12I16@20
@12@0:4@?8
@12@0:4B8
v20@0:4@8@12@16
B16@0:4@8B12
@20@0:4@8@12B16
v16@0:4@8B12
v20@0:4@8B12@?16
v24@0:4B8@12@16@?20
@"NSObject<OS_dispatch_queue>"
@"NSMutableDictionary"
@"NSTimer"
@"CALNPersistedNotificationsContext"
@"BBDataProviderProxy"
@"EKTimedEventStorePurger"
v12@0:4@"NSString"8
v16@0:4@8r*12
@"BBDataProviderConnection"
@"CALNRemoteEventProvider"
@"CALNRemoteReminderProvider"
@"_EKAlarmEngine"
@"EKTravelEngine"
@"_EKNotificationMonitor"
d8@0:4
v20@0:4@8i12@16
v16@0:4@8i12
v20@0:4@"CLLocationManager"8@"CLLocation"12@"CLLocation"16
v16@0:4@"CLLocationManager"8@"NSArray"12
v16@0:4@"CLLocationManager"8@"CLHeading"12
B12@0:4@"CLLocationManager"8
v20@0:4@"CLLocationManager"8i12@"CLRegion"16
v20@0:4@"CLLocationManager"8@"NSArray"12@"CLBeaconRegion"16
v20@0:4@"CLLocationManager"8@"CLBeaconRegion"12@"NSError"16
v16@0:4@"CLLocationManager"8@"CLRegion"12
v16@0:4@"CLLocationManager"8@"NSError"12
v20@0:4@"CLLocationManager"8@"CLRegion"12@"NSError"16
v16@0:4@"CLLocationManager"8i12
v12@0:4@"CLLocationManager"8
v16@0:4@"CLLocationManager"8@"CLVisit"12
B12@0:4i8
@?8@0:4
v12@0:4@?8
v12@0:4B8
@"NSObject<OS_dispatch_source>"
@"PCPersistentTimer"
@"CLLocationManager"
@20@0:4@8B12B16
v20@0:4@8@12B16
@12@0:4^v8
v16@0:4B8B12
@12@0:4i8
v32@0:4@8@12{CLLocationCoordinate2D=dd}16
v12@0:4i8
@32@0:4@8@12d16@24@28
@"NSDate"
@"NSDateFormatter"
@"RTRoutineManager"
@"NSString"
i8@0:4
@"CLLocation"
@"NSData"
@12@0:4^{_NSZone=}8
@84@0:4@8@12@16@20@24B28B32@36@40@44@48i52@56B60@64@68B72B76B80
{CLLocationCoordinate2D=dd}8@0:4
v24@0:4{CLLocationCoordinate2D=dd}8
v12@0:4I8
@"NSTimeZone"
@"NSUserActivity"
@"NSURL"
@"EKTravelEngineHypothesis"
{CLLocationCoordinate2D="latitude"d"longitude"d}
@16@0:4@8B12
@"EKSource"
@"NSMutableArray"
i12@0:4@8
B20@0:4@8@12@16
@20@0:4@8@12i16
@16@0:4@8@?12
v20@0:4@8@12^@16
v16@0:4@8I12
v20@0:4B8@12B16
v16@0:4i8@12
v24@0:4@8@12@16B20
I16@0:4@8@12
I12@0:4i8
I12@0:4@8
v24@0:4@8@12i16@?20
@"CSLSUITriggerRemoteClient"
@"NSArray"
v16@0:4d8
@"EKTravelEngineOriginalEvent"
@"EKTravelEngineThrottle"
@"CalGeocoder"
@"GEORouteHypothesizer"
@20@0:4@8i12^d16
@"SBSApplicationShortcutService"
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
zPLR
