sharedInstance
sendMessage:category:type:reporters:
init
createReporterID
addReporter:
reporterID
setServiceType:reporterID:
numberWithLongLong:
arrayWithObjects:count:
startReporters:
stopReporters:
destroyReporterWithID:
dealloc
sendSingleMessage:category:type:
initWithNewReporterID
initWithReporterID:serviceType:
updateWithReporterID:
setServiceType:
cacheServiceType:
start
sendMessage:category:type:
stop
serviceType
_serviceType
_reporterID
setClientReporters:
alloc
initWithMachServiceName:options:
setConnection:
connection
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
createReportingSession:
setServiceType:reportingSession:
getServiceNameForReporterID:reply:
startReportingSessionForID:
sendMessage:withCategory:andType:forReportingIDs:reply:
stopReportingSessionForID:
destroyReportingSession:
reporterID:valid:
getAllReporters:
postSimpleAWDMetric:
postAWDMetric:withData:
interfaceWithProtocol:
setRemoteObjectInterface:
localizedDescription
remoteObjectProxyWithErrorHandler:
setServerDelegateAsync:
synchronousRemoteObjectProxyWithErrorHandler:
setServerDelegateSync:
setInterruptionHandler:
setInvalidationHandler:
resume
processInfo
processIdentifier
serverDelegateAsync
clientReporters
objectForKey:
serverDelegateSync
integerValue
intValue
dictionaryWithObjects:forKeys:count:
addEntriesFromDictionary:
allKeys
containsObject:
removeObjectForKey:
countByEnumeratingWithState:objects:count:
getClient
listener:shouldAcceptNewConnection:
reporterWithID:
listClientReporterIDs
listServerReporterIDs
getServiceTypeForReporterID:
destroyClient
.cxx_destruct
_connection
_clientReporters
_serverDelegateAsync
_serverDelegateSync
%s:%d:%s: creating CAReporter %lli serviceType %i
%s:%d:%s: setting service type %i
%s:%d:%s: caching service type %i
%s:%d:%s: starting reporter %lli
%s:%d:%s: sending message reporter %lli
%s:%d:%s: stopping reporter %lli
%s:%d:%s: deallocing reporter %lli
%s:%d:%s: creating CAReportingClient
%s:%d:%s: Error creating XPC connection to %@
%s:%d:%s: %@
%s:%d:%s: Interruption Handler: connection got interrupted
%s:%d:%s: Invalidation Handler: client exited
%s:%d:%s: created reporter %lli
%s:%d:%s: reporterID %lli
%s:%d:%s: adding reporterID %lli to client
%s:%d:%s: removing %lli from client and server
%s:%d:%s: attempted to remove a reporter (%lli) not created by this client
%s:%d:%s: starting %@
%s:%d:%s: stopping %@
%s:%d:%s: message %@: %@
%s:%d:%s: serviceName %i: %lli
%s:%d:%s: ERROR: subscope bits are set in scope: 0x%lx
%s:%d:%s:  CAMutex::CAMutex: Could not init the mutex
%s:%d:%s:  CAMutex::Lock: Could not lock the mutex
%s:%d:%s:  CAMutex::Unlock: Could not unlock the mutex
%s:%d:%s:  CAMutex::Unlock: A thread is attempting to unlock a Mutex it doesn't own
%s:%d:%s:  CAMutex::Try: call to pthread_mutex_trylock failed, Error: %d (%s)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-970.1/Source/CAServices/Statistics/Client/CAReportingClient.mm
-[CAReporter init]
-[CAReporter initWithNewReporterID]
-[CAReporter initWithReporterID:serviceType:]
-[CAReporter setServiceType:]
-[CAReporter cacheServiceType:]
-[CAReporter start]
-[CAReporter sendMessage:category:type:]
-[CAReporter stop]
-[CAReporter dealloc]
serviceType
TS,N,V_serviceType
reporterID
Tq,R,V_reporterID
-[CAReportingClient init]
com.apple.audio.reporting.xpc
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
-[CAReportingClient init]_block_invoke
v8@?0@"NSError"4
-[CAReportingClient init]_block_invoke_2
-[CAReportingClient init]_block_invoke_3
v4@?0
-[CAReportingClient init]_block_invoke_4
carc
com.apple.coreaudio
reporting_client_verbose
-[CAReportingClient createReporterID]
-[CAReportingClient reporterWithID:]
v8@?0@"NSDictionary"4
-[CAReportingClient addReporter:]
-[CAReportingClient destroyReporterWithID:]
v8@?0@"NSArray"4
-[CAReportingClient startReporters:]
-[CAReportingClient stopReporters:]
-[CAReportingClient sendMessage:category:type:reporters:]
-[CAReportingClient sendMessage:category:type:reporters:]_block_invoke
-[CAReportingClient setServiceType:reporterID:]
v8@?0S4
connection
T@"NSXPCConnection",&,V_connection
clientReporters
T@"NSMutableDictionary",&,V_clientReporters
serverDelegateAsync
T@"<CAReportingServerInterface>",&,V_serverDelegateAsync
serverDelegateSync
T@"<CAReportingServerInterface>",&,V_serverDelegateSync
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-970.1/CoreAudioUtility/Source/Utility/CALog.cpp
RegisterScope
error
warning
note
notice
info
details
minutiae
spew
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CoreAudioServices_Sim/CoreAudioServices-970.1/CoreAudioUtility/Source/PublicUtility/CAMutex.cpp
CAMutex
Lock
Unlock
CAException
CAReporter
CAReportingServerInterface
NSObject
CAReportingClient
NSXPCListenerDelegate
v20@0:4@8S12S16
@8@0:4
@20@0:4q8S16
v16@0:4q8
v12@0:4S8
v8@0:4
q8@0:4
S8@0:4
B12@0:4@8
#8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
v20@0:4S8q12
v20@0:4q8@?16
v28@0:4@8S12S16@20@?24
v12@0:4@?8
v12@0:4I8
v16@0:4I8@12
v20@0:4q8@?<v@?S>16
v28@0:4@"NSDictionary"8S12S16@"NSArray"20@?<v@?@"NSError">24
v20@0:4q8@?<v@?@"NSDictionary">16
v12@0:4@?<v@?@"NSArray">8
v16@0:4I8@"PBCodable"12
B16@0:4@8@12
B16@0:4@"NSXPCListener"8@"NSXPCConnection"12
@16@0:4q8
v12@0:4@8
v24@0:4@8S12S16@20
S16@0:4q8
@"NSXPCConnection"
@"NSMutableDictionary"
@"<CAReportingServerInterface>"
St12length_error
St11logic_error
St9exception
NSt3__117bad_function_callE
11CAException
zPLR
zPLR
zPLR
zPLR
zPLR
