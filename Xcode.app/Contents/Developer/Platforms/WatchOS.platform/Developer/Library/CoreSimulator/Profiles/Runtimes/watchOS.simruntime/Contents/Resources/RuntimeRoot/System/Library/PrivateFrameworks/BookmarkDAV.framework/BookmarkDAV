init
retain
setPropertiesFromXBEL:
release
dealloc
isEqualToString:
objectForKey:
alloc
initWithString:
mutableCopy
appendString:
initWithData:encoding:
initWithData:
setShouldProcessNamespaces:
setDelegate:
parse
initWithBase64EncodedString:options:
propertyListFromData:mutabilityOption:format:errorDescription:
startElement:inNamespace:withAttributeNamesAndValues:
absoluteString
appendElement:inNamespace:withStringContent:withAttributeNamesAndValues:
count
dataWithPropertyList:format:options:error:
base64EncodedStringWithOptions:
endElement:inNamespace:
data
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
autorelease
retainCount
zone
hash
superclass
description
debugDescription
initWithURL:eTag:dataPayload:inContainerWithURL:withAccountInfoProvider:
serverID
setServerID:
dataPayload
syncKey
childrenOrder
sourceURL
setSourceURL:
destinationURL
setDestinationURL:
parserDidStartDocument:
parserDidEndDocument:
parser:foundNotationDeclarationWithName:publicID:systemID:
parser:foundUnparsedEntityDeclarationWithName:publicID:systemID:notationName:
parser:foundAttributeDeclarationWithName:forElement:type:defaultValue:
parser:foundElementDeclarationWithName:model:
parser:foundInternalEntityDeclarationWithName:value:
parser:foundExternalEntityDeclarationWithName:publicID:systemID:
parser:didStartElement:namespaceURI:qualifiedName:attributes:
parser:didEndElement:namespaceURI:qualifiedName:
parser:didStartMappingPrefix:toURI:
parser:didEndMappingPrefix:
parser:foundCharacters:
parser:foundIgnorableWhitespace:
parser:foundProcessingInstructionWithTarget:data:
parser:foundComment:
parser:foundCDATA:
parser:resolveExternalEntityName:systemID:
parser:parseErrorOccurred:
parser:validationErrorOccurred:
initWithBookmarkURL:serverID:name:syncKey:appleAttributes:
bookmarkURL
name
appleAttributes
bulkUploadErrorItem
setBulkUploadErrorItem:
_bookmarkURL
_serverID
_sourceURL
_destinationURL
_name
_syncKey
_appleAttributeString
_appleAttributes
_parseState
_ignoreLevel
_bulkUploadErrorItem
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
lockForClient:
unlockForClient:
databaseRef
_databaseLockCount
_databaseRef
initWithDataPayload:dataContentType:atURL:previousETag:
additionalHeaderValues
dictionary
setObject:forKey:
path
CDVPreconditionHeaderValueWithCTag:pathTag:
initWithRootElementNameSpace:name:parseClass:baseURL:
initWithNameSpace:name:parseClass:
initWithObjects:
setParseHints:
responseBodyParser
rootElement
extraChildItems
countByEnumeratingWithState:objects:count:
nameSpace
payloadAsString
setNextRootCTag:
setNextRootSyncToken:
orderedResponses
errorItem
ctagOkay
firstHref
payloadAsFullURL
successfulPropertiesToValues
status
CDVIsHTTPStatusLineWithStatusCode:
attributes
value
initWithServerID:containerName:appleAttributes:
URLWithString:
CDVObjectForKeyWithNameSpace:andName:
bookmarkFolder
initWithURL:andProperties:
payload
removeObject:
addObject:
componentsSeparatedByString:
CDVfixedURLByAppendingPathComponent:
_foundChildrenOrder:inFolderWithURL:
finishCoreDAVTaskWithError:
initWithDataPayload:atURL:checkCTag:checkCTagURL:
copyDefaultParserForContentType:
parsedBookmarks
parsedFolders
folderURLToChildrenURLOrder
nextRootCTag
nextRootSyncToken
_checkCTag
_parsedBookmarks
_parsedBookmarksByURL
_parsedFolders
_parsedFoldersByURL
_folderURLToChildrenURLOrder
_nextRootCTag
_nextRootSyncToken
_checkCTagURL
standardUserDefaults
doubleForKey:
bdv_overrideTimeoutInterval
setTimeoutInterval:
bdv_applyOverrideTimeoutIntervalIfNeeded
length
bdv_redactedServerID
CDVAddItemParserMappingWithNameSpace:name:parseClass:
applyParsedProperties:
setBulkParsedCTag:
setBulkParsedPTag:
resourceType
bookmarkBarFolder
bookmarkMenuFolder
initWithNameSpace:andName:
setCollection:
_faultResourceType
setBookmarkFolder:
setBookmarkBarFolder:
setBookmarkMenuFolder:
dataFromPropertyList:format:errorDescription:
setPayloadAsString:
_appleAttributesString
initWithPropertiesToSet:andRemove:atURL:
initWithPropertiesToSet:atURL:
copyPropertyMappingsForParser
copyPropPatchTask
copyMkcolTask
isBookmarkFolder
isBookmarkBarFolder
isBookmarkMenuFolder
setIsBookmarkFolder:
setIsBookmarkBarFolder:
setIsBookmarkMenuFolder:
bulkParsedCTag
bulkParsedPTag
_childrenOrder
_bulkParsedCTag
_bulkParsedPTag
appendFormat:
_copyAccountPropertiesPropFindElements
hrefsAsFullURLs
initWithCapacity:
scheme
user
password
host
port
CDVRawPath
parameterString
query
fragment
initWithCDVScheme:user:password:host:port:path:parameterString:query:fragment:
_setPropertiesFromParsedResponses:
homeSet
bookmarkHomes
_bookmarkHomes
initWithURLs:atContainerURL:appSpecificDataItemClass:
initWithFolderURL:previousCTag:previousPTag:previousSyncToken:actions:syncItemOrder:context:accountInfoProvider:taskManager:
copyMultiGetTaskWithURLs:
copyFolderMultiGetTaskWithURLs:
dataContentType
shouldSyncChildWithResourceType:
removeObjectForKey:
boolValue
numberWithBool:
pushKey
ctag
ptag
etag
syncToken
pushTransports
bulkRequests
bookmarksBarId
bookmarksMenuId
unsignedIntegerValue
bookmarksBarOrder
numberWithUnsignedInteger:
bookmarksMenuOrder
clientVersion
accountPrsId
knownQuotaRemaining
initWithBookmarkDatabase:
writeToBookmarkDB
homeURL
setHomeURL:
initialSyncDone
setInitialSyncDone:
supportsSyncCollection
setSupportsSyncCollection:
setPushKey:
setCtag:
setPtag:
setEtag:
setSyncToken:
setPushTransports:
setBulkRequests:
setBookmarksBarId:
setBookmarksMenuId:
setBookmarksBarOrder:
setBookmarksMenuOrder:
setClientVersion:
setAccountPrsId:
principalURL
setPrincipalURL:
heldAsideOrderings
setHeldAsideOrderings:
hasHitQuotaLimit
setHasHitQuotaLimit:
setKnownQuotaRemaining:
hasChanges
_backingDict
_hasChanges
copy
_invokeAndNilGetAccountPropertiesHandlerWithSuccess:error:
anyObject
setWithObject:
initWithAccountInfoProvider:containerURLs:taskManager:
setContainerInfoDepth:
startTaskGroup
setPushTransport:
topLevelSyncData
supportsSyncCollectionReport
quotaAvailable
longLongValue
quotaUsed
numberWithLongLong:
isEqualToNumber:
_closeDBAndSave:
setGetAccountPropertiesHandler:
initWithAccountInfoProvider:taskManager:
lastPathComponent
URLByAppendingPathComponent:
_cloneCoreAttributesFromItem:toItem:isBookmark:
_bookmarkByUpdatingBookmark:withServerID:
_copyDAVBookmarkFromBookmarkRef:
_folderByUpdatingFolder:withServerID:
_copyDAVFolderFromFolderRef:
initWithAction:context:absoluteOrder:
CDVStringByAppendingSlashIfNeeded
stringByAppendingFormat:
stringByAppendingString:
_dbRelativeString:
indexOfObject:
removeObjectAtIndex:
insertObject:atIndex:
setSyncHandler:
errorWithDomain:code:userInfo:
_syncWithRemoteChanges:completionHandler:skipAddChanges:
getAccountPropertiesWithCompletionHandler:
setPreflightCTag:
initWithRemoteMoveMap:
_setServerIdOnItem:isBookmark:suggestedId:
unsignedIntValue
_serverOrderForChange:
URLByRewritingURL:
_updatePayload:forMovedItem:sourceServerID:
_copySyntheticModifyActionForMovedItem:change:destinationURL:absoluteOrder:
bdv_isEqualToDAVURL:
URLByDeletingLastPathComponent
setObject:forKeyedSubscript:
createURLByRewritingURL:
initWithAction:context:
initWithDatabase:
recursivelyRewriteServerIDsInMap:
_saveDB
action
context
absoluteOrder
_clientOrderOfItemPrecedingItemAtServerOrder:inParentWithURL:
setPriorURL:
objectAtIndexedSubscript:
rewriteOrderedPayloadsFromProvider:
allKeys
containsObject:
containerTitle
pushTransport
_makeFolderFromContainer:
_makeBookmarkFromDAVNode:
_handleAddsOrModifies:removes:
folderURL
valueForKey:
_setChildrenOrder:forFolderURL:
objectForKeyedSubscript:
syncWithRemoteChanges:completionHandler:
code
domain
_finishInitialSyncShouldPushChanges:
numberWithUnsignedInt:
taskGroup:didFinishWithError:
getCTag:pTag:forFolderWithURL:
copyLocalETagsForURLs:
copyAllLocalURLsInFolderWithURL:
setLocalETag:forItemWithURL:
recursiveContainerSyncTask:receivedAddedOrModifiedFolder:
recursiveContainerSyncTask:retrievedAddedOrModifiedActions:removed:
recursiveContainerSyncTask:completedSyncOfFolderWithURL:newCTag:newPTag:addedOrModified:removed:error:
recursiveContainerSyncTask:completedFullSyncWithNewCTag:newPTag:newSyncToken:error:
notePutToURL:withDataPayload:finishedWithIgnoredError:
moveTaskFromURL:toURL:finishedWithIgnoredError:
task:didFinishWithError:
deleteTask:completedWithError:
getAccountPropertiesTask:completedWithError:
containerInfoTask:completedWithContainers:error:
initWithAccountInfoProvider:taskManager:openDBBlock:getDBBlock:saveDBBlock:closeDBBlock:registerForPush:forceSafariOrdering:
outstandingActionCount
accountInfoProvider
getAccountPropertiesHandler
syncHandler
accountPropertyFetchAttempt
setAccountPropertyFetchAttempt:
_accountInfoProvider
_taskManager
_outstandingTaskGroups
_getAccountPropertiesHandler
_syncHandler
_changeToken
_homeURL
_pushKey
_pushTransport
_openDBBlock
_getDBBlock
_saveDBBlock
_closeDBBlock
_topLevelSyncData
_registerForPush
_forceSafariOrdering
_forceSave
_inboundOnlySyncRequested
_serverIDsAddedUponInboundOnlySync
_serverIDsRemovedUponInboundOnlySync
_inboundMovedBookmarkServerIDMap
_accountPropertyFetchAttempt
numberWithInt:
initWithObjectsAndKeys:
stringWithFormat:
startElement:inNamespace:withAttributes:
_addChange:toData:numActionsP:runningSizeP:maxResources:maxSize:foldersToAddByServerId:parentToArrayOfChildrenFolderChanges:pushedParentToArrayOfChildrenFolders:
hasPrefix:
pathComponents
sortUsingComparator:
_handleErrorItem:forBAItem:
_matchParsedFolders:toPushedFolders:unmatchedParsedFolders:parsedSetsOfChildrenFoldersByParentURL:arraysOfChildrenByNameByParent:
allObjects
addObjectsFromArray:
CDVURLByDeletingLastPathComponent
_applyUnmatchedParsedFolders:
integerValue
intValue
_folderXBELDataForTopmostFolderChanges:foldersToAddByServerId:parentToArrayOfChildrenFolderChanges:pushedParentToArrayOfChildrenFolders:pushedTopmostFolders:maxResources:maxSize:
setAccountInfoProvider:
error
_applyReturnedFolders:parentToArrayOfChildrenFolders:topmostFolders:postedToURL:
_removeTempIdsFromFoldersInDict:
_setRootCTag:rootSyncToken:knownOrderings:
setCompletionBlock:
submitQueuedCoreDAVTask:
_bookmarkXBELDataForBookmarkChanges:pushedBookmarks:maxResources:maxSize:
_applyReturnedBookmarks:withPushedBookmarks:
CDVStringByRemovingTerminatingSlashIfNeeded
objectAtIndex:
extraChildWithNameSpace:name:
setExtraChild:forNameSpace:name:
componentsWithString:
setUser:
setPassword:
string
_recursivelyRewriteServerIDsForItemWithServerID:newParentID:mutableMap:
_recursivelyRewriteServerIDsInMutableMap:sortingHint:
stringByReplacingOccurrencesOfString:withString:options:range:
hasDirectoryPath
URLByAppendingPathComponent:isDirectory:
sortedArrayUsingFunction:context:hint:
firstObject
sortedArrayHint
recursivelyRewriteServerIDsForItemWithServerID:newParentID:
_database
_depthSortedRemoteSourceServerIDs
sortedArrayUsingComparator:
_remoteMoveMap
_sortedRemoteSourceServerIDs
starting element %@ %@ %@ state %d
Could not create a URL from bookmark string, setting a dummy value instead
## Original URL: %@
oddly formed xbel payload
ending element %@ %@ state %d
found characters %@ state %d
found cdata %@ state %d
Couldn't create a plist from attribute dict: %{public}@
## Attribute dict: %@
%{public}@ attempting to lock backing store
%{public}@ backing store was already locked
%{public}@ successfully locked backing store
%{public}@ failed to lock backing store
%{public}@ did not unlock backing store due to outstanding lock requests
%{public}@ unlocked backing store
## Got children order %@ for folder with url %@, but I already knew about that (I had %@)
%{public}@ <%p> (info provider: %{public}@ <%p>): Something interrupted our bulk upload partway through item %p
## Current response item: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): Response node %p has no URL. Ignoring it
%{public}@ <%p> (info provider: %{public}@ <%p>): Got ignorable error %p
%{public}@ <%p> (info provider: %{public}@ <%p>): Got fatal error %p
## URL: %@; error: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): Couldn't make URL out of bookmark target URL
## URL: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): Couldn't make a folder or bookmark out of properties
## Properties: %@
Couldn't cons up a child url from base url %{public}@ and child path %{public}@
Couldn't create a plist from attribute dict
%{public}@ <%p> (info provider: %{public}@ <%p>): Could not inline username into url
## Could not inline username %@ into url %@
Task failed with error: %{public}@
Task group failed with error: %{public}@
%{public}@ <%p> (info provider: %{public}@ <%p>): BookmarkDAVGetAccountPropertiesTaskGroup %p completed with error %{public}@
## BookmarkDAVGetAccountPropertiesTaskGroup: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): Got a non-1 count of home set URLs.
%{public}@ <%p> (info provider: %{public}@ <%p>): CoreDAVContainerInfoTaskGroup %p completed with error %{public}@
## CoreDAVContainerInfoTaskGroup: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): Got a non-1 (%zd) count of containers
%{public}@ <%p> (info provider: %{public}@ <%p>): Couldn't open the database; failing the sync
%{public}@ <%p> (info provider: %{public}@ <%p>): Found a discrepancy between current home set and database home set; prepping DB for initial sync
## Current home set %@, database home set: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): Giving adds another chance, we've got more room
%{public}@ <%p> (info provider: %{public}@ <%p>): Bookmark ref doesn't have a valid url as a server id, has %{public}@
%{public}@ <%p> (info provider: %{public}@ <%p>): Folder ref doesn't have a valid url as a server id, has %{public}@
## For root folder, started with childrenOrder %@
## For folder id %@, setting childrenOrder %@
%{public}@ <%p> (info provider: %{public}@ <%p>): Unable to open the database. Failing the sync
%{public}@ <%p> (info provider: %{public}@ <%p>): Skipping all add changes, as we've overflowed our quota on the server
%{public}@ <%p> (info provider: %{public}@ <%p>): No home set url in our database; getting account properties instead of syncing
Attempt %lu for fetching Account properties.
Successfully fetched Account properties.
More than %lu attempts have been made to update Account properties. Failing BookmarkDAV Sync.
%{public}@ <%p> (info provider: %{public}@ <%p>): Database gave %ld changes
Starting inbound-only informational sync
%{public}@ <%p> (info provider: %{public}@ <%p>): Database tried to delete bar; rejecting delete, and hoping for corresponding add
%{public}@ <%p> (info provider: %{public}@ <%p>): Database tried to delete menu; rejecting delete, and hoping for corresponding add
%{public}@ <%p> (info provider: %{public}@ <%p>): Bookmark Add change without a changed item. Skipping
%{public}@ <%p> (info provider: %{public}@ <%p>): Bookmark Add change, but item already has a server id of %{public}@
%{public}@ <%p> (info provider: %{public}@ <%p>): Not syncing bookmark, as it's too big (cur size %d, previous failure at %d)
## Bookmark: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): Folder Add change without a changed item. Skipping
%{public}@ <%p> (info provider: %{public}@ <%p>): Folder Add change, but item already has a server id of %{public}@
%{public}@ <%p> (info provider: %{public}@ <%p>): Reconstituting old bar id
## Old bar id: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): Client is duplicating bookmark bar
%{public}@ <%p> (info provider: %{public}@ <%p>): Reconstituting old menu id
## Old menu id: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): Client is duplicating bookmark menu
%{public}@ <%p> (info provider: %{public}@ <%p>): Not syncing folder, as it's too big
## Folder: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): Change that's neither a bookmark nor folder change. Skipping it
%{public}@ <%p> (info provider: %{public}@ <%p>): Bookmark Modify change without a changed item. Skipping
%{public}@ <%p> (info provider: %{public}@ <%p>): Not syncing bookmark as it's too big (cur size %d, previous failure at %d)
%{public}@ <%p> (info provider: %{public}@ <%p>): Folder Modify change without a changed item. Skipping
%{public}@ <%p> (info provider: %{public}@ <%p>): Not syncing folder as it's too big
%{public}@ <%p> (info provider: %{public}@ <%p>): Change that's neither a bookmark or folder change. Skipping it
%{public}@ <%p> (info provider: %{public}@ <%p>): Delete change without a server id. Skipping it
%{public}@ <%p> (info provider: %{public}@ <%p>): Database tried to delete bar. Rejecting delete, and hoping for corresponding add
%{public}@ <%p> (info provider: %{public}@ <%p>): Database tried to delete menu. Rejecting delete, and hoping for corresponding add
%{public}@ <%p> (info provider: %{public}@ <%p>): Delete change with a server id that wasn't a url (was %{public}@). Skipping it
%{public}@ <%p> (info provider: %{public}@ <%p>): Unknown change type of %d
%{public}@ <%p> (info provider: %{public}@ <%p>): To reiterate: skipping poorly formed change
%{public}@ <%p> (info provider: %{public}@ <%p>): Not syncing bookmarks, as there are no pending changes locally or on the server
%{public}@ <%p> (info provider: %{public}@ <%p>): Server order is %d. Client order is %d
%{public}@ <%p> (info provider: %{public}@ <%p>): Had a malformed URL in the database
%{public}@ <%p> (info provider: %{public}@ <%p>): Database returned nil from BADatabaseCopyServerIdsInFolderWithServerId(), bailing sync
%{public}@ <%p> (info provider: %{public}@ <%p>): Got a folder finish for a folder I don't know
## Folder URL: %@
Completed inbound-only informational sync
%{public}@ <%p> (info provider: %{public}@ <%p>): Going into no-add mode, as we're past our quota limits on the server
%{public}@ <%p> (info provider: %{public}@ <%p>): Item has previous bad size %d, new bad size of %d
%{public}@ <%p> (info provider: %{public}@ <%p>): Ran out of room for bulk upload, numactions %d size %d
%{public}@ <%p> (info provider: %{public}@ <%p>): Couldn't create a plist from attribute dict
%{public}@ <%p> (info provider: %{public}@ <%p>): Got an unexpectedly NULL tempServerId for folder
## Title: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): Couldn't find the orig folder for temp ID %{public}@.
## Folder title: %@, known folders to add: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): For child of folder, got an unexpectedly NULL childTempServerId
## Title: %@, got an unexpectedly NULL childTempServerId
%{public}@ <%p> (info provider: %{public}@ <%p>): Couldn't find the orig child for temp ID %{public}@.
## Parent folder title: %@; known folders to add: %@
## Attribute dict %@
%{public}@ <%p> (info provider: %{public}@ <%p>): No matching pushed folders for parsed folder
## Parsed folder: %@, pushed folders: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): For parsed bookmark %p I have no matching pushed bookmarks %p
## Bookmark: %@, Pushed bookmarks: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): Starting bulk upload
%{public}@ <%p> (info provider: %{public}@ <%p>): Couldn't open the database; failing the bulk upload
%{public}@ <%p> (info provider: %{public}@ <%p>): Asked to do bulk upload, but the server doesn't support that. Performing non-bulk upload.
%{public}@ <%p> (info provider: %{public}@ <%p>): Have an unexpected folder add in my change list, with a temp server id. Going to re-push an add, this may cause dupes. serverId: %{public}@
%{public}@ <%p> (info provider: %{public}@ <%p>): Set temp id %{public}@ on folder and added it to foldersToAdd
%{public}@ <%p> (info provider: %{public}@ <%p>): Skipping changes for tree rooted at %{public}@ due to blacklisting
%{public}@ <%p> (info provider: %{public}@ <%p>): We have %zd folders to add
%{public}@ <%p> (info provider: %{public}@ <%p>): Our topmost folder to add has a parent id of %{public}@, but we have no such folder in the database; posting to the top of the tree instead
%{public}@ <%p> (info provider: %{public}@ <%p>): We have folders to add, but encountered problems in figuring out where to add them. Failing the upload, but not requesting a new sync
%{public}@ <%p> (info provider: %{public}@ <%p>): Finished posting folder xbel with error: %{public}@
%{public}@ <%p> (info provider: %{public}@ <%p>): Unexpectedly, I got back bookmarks from a folder bulk post; going to ignore them
## Bookmarks: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): Skipping change for bookmark due to blacklisting
## Target URL: %@
%{public}@ <%p> (info provider: %{public}@ <%p>): We have %zd folders with bookmarks to add
%{public}@ <%p> (info provider: %{public}@ <%p>): We wanted to push our bookmarks in a folder with parent id of %{public}@, but we have no such folder in the database; posting to the top of the tree instead
%{public}@ <%p> (info provider: %{public}@ <%p>): We have bookmarks to add, but encountered problems in figuring out where to add them. Failing the upload, but not requesting a new sync
%{public}@ <%p> (info provider: %{public}@ <%p>): Finished posting bookmark xbel with error %{public}@
javascript:void(0)
hash
TI,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
serverID
T@"NSURL",&,N
dataPayload
T@"NSData",R,N
syncKey
T@"NSString",R,N
childrenOrder
T@"NSArray",R,N
sourceURL
destinationURL
bookmarkURL
T@"NSURL",R,&,N,V_bookmarkURL
name
T@"NSString",R,&,N,V_name
appleAttributes
T@"NSDictionary",R,&,N,V_appleAttributes
T@"NSURL",&,N,V_sourceURL
T@"NSURL",&,N,V_destinationURL
bulkUploadErrorItem
T@"CoreDAVErrorItem",&,N,V_bulkUploadErrorItem
T@"NSURL",&,N,V_serverID
T@"NSString",R,N,V_syncKey
/BuildRoot/Library/Caches/com.apple.xbs/Sources/BookmarkDAV_Sim/BookmarkDAV-127/Framework/BookmarkDAVDatabaseLockArbiter.m
<Unknown File>
There must not be outstanding clients of the database by the time the arbiter is deallocated
If the lock count was non-zero, we should already have a BADatabaseRef
If the lock count was zero, we should not have a BADatabaseRef
If a client is trying to unlock the database, the lock count must be at least 1
If a client is trying to unlock the database, we must already have a BADatabaseRef
databaseRef
Tr^v,R,N,V_databaseRef
application/xbel+xml; charset=utf-8
return-changed-data, include-ptag
nextRootCTag
T@"NSString",&,N,V_nextRootCTag
nextRootSyncToken
T@"NSString",&,N,V_nextRootSyncToken
parsedBookmarks
T@"NSArray",R,N,V_parsedBookmarks
parsedFolders
T@"NSArray",R,N,V_parsedFolders
folderURLToChildrenURLOrder
T@"NSDictionary",R,N,V_folderURLToChildrenURLOrder
DebugTimeoutInterval
bulkParsedCTag
T@"NSString",&,N,V_bulkParsedCTag
bulkParsedPTag
T@"NSString",&,N,V_bulkParsedPTag
isBookmarkFolder
TB,D,N
isBookmarkBarFolder
isBookmarkMenuFolder
T@"NSDictionary",R,N,V_appleAttributes
T@"NSArray",R,N,V_childrenOrder
Bookmark home urls: %@
bookmarkHomes
T@"NSSet",R,N,V_bookmarkHomes
HomeURLString
InitialSyncDone
SupportsSyncCollection
PushKey
CTag
PTag
ETag
SyncToken
PushTransports
BulkRequests
BookmarkBarId
BookmarkMenuId
BookmarksBarOrder
BookmarksMenuOrder
ClientVersion
AccountPrsId
PrincipalURLString
HeldAsideOrderings
HasHitQuotaLimit
KnownQuotaRemaining
hasChanges
TB,R,N,V_hasChanges
homeURL
initialSyncDone
TB,N
pushTransports
T@"NSDictionary",&,N
pushKey
T@"NSString",&,N
ctag
ptag
etag
syncToken
bulkRequests
supportsSyncCollection
bookmarksBarId
bookmarksMenuId
bookmarksBarOrder
TI,N
bookmarksMenuOrder
heldAsideOrderings
hasHitQuotaLimit
knownQuotaRemaining
T@"NSNumber",&,N
clientVersion
accountPrsId
principalURL
/BuildRoot/Library/Caches/com.apple.xbs/Sources/BookmarkDAV_Sim/BookmarkDAV-127/Framework/BookmarkDAVSyncDriver.m
Asked to update payload for move, but no source server ID is available for the move
%@.xbel
v12@?0B4@"NSError"8
413Blacklist
@"<CoreDAVLeafDataPayload>"8@?0I4
can't query an unopened db
NO_TITLE
absoluteString
T@"NSURL",&,N,V_homeURL
T@"NSString",&,N,V_pushKey
pushTransport
T@"NSDictionary",&,N,V_pushTransport
getAccountPropertiesHandler
T@?,C,N,V_getAccountPropertiesHandler
syncHandler
T@?,C,N,V_syncHandler
topLevelSyncData
T@"BookmarkDAVSyncData",R,N
accountPropertyFetchAttempt
TI,N,V_accountPropertyFetchAttempt
accountInfoProvider
T@"<CoreDAVAccountInfoProvider>",R,N,V_accountInfoProvider
outstandingActionCount
TI,R,N
blacklistFromBulkUpload
TempServerIdPrefix
i12@?0@4@8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/BookmarkDAV_Sim/BookmarkDAV-127/Framework/BookmarkDAVSyncDriverBulkUpload.m
This call cannot fail, as we already have the database lock
crud
max-resources
max-size
v4@?0
bookmarkFolder
T@"CoreDAVItemWithNoChildren",&,N
bookmarkBarFolder
bookmarkMenuFolder
urn:mobileme:bookmarks
bookmark-home-set
bookmark-data
getptag
bookmarkfolder
bookmarkbarfolder
bookmarkmenufolder
bookmark-multiget
root-ctag
root-sync-token
http://www.python.org/topics/xml/xbel/
xbel
bookmark
folder
href
title
info
metadata
owner
com.apple.bookmark.extraattributes
position
com.apple.BookmarkDAV
BookmarkSync
domain='%@', code=%ld
Nil redacted server ID
/BuildRoot/Library/Caches/com.apple.xbs/Sources/BookmarkDAV_Sim/BookmarkDAV-127/Framework/BookmarkDAVMoveIDUpdater.m
Use -initWithDatabase: instead
Use -initWithRemoteMoveMap: instead
i12@?0@"NSURL"4@"NSURL"8
BookmarkDAVBookmark
CoreDAVLeafDataPayload
NSObject
NSXMLParserDelegate
BookmarkDAVDatabaseLockArbiter
BookmarkDAVBulkPostTask
BookmarkDAVExtras
BoomarkDAVExtras
BookmarkDAVFolder
CoreDAVModifiedContainer
CoreDAVAddedContainer
BookmarkDAVGetAccountPropertiesTaskGroup
BookmarkDAVMultiGetTask
BookmarkDAVFolderMultiGetTask
BookmarkDAVRecursiveContainerSyncTaskGroup
BookmarkDAVSyncData
BookmarkDAVSyncDriver
CoreDAVLocalDBTreeInfoProvider
CoreDAVTaskGroupDelegate
CoreDAVDeleteTaskDelegate
CoreDAVTaskDelegate
CoreDAVGetAccountPropertiesTaskGroupDelegate
CoreDAVContainerInfoTaskGroupDelegate
BulkUploadSupport
BookmarkDAVNSURLExtras
BookmarkDAVExtensions
BookmarkLoggingExtras
BookmarkDAVMoveIDUpdater
BookmarkDAVMoveURLRewriter
B12@0:4@8
#8@0:4
@8@0:4
@12@0:4:8
@16@0:4:8@12
@20@0:4:8@12@16
B8@0:4
B12@0:4#8
B12@0:4:8
Vv8@0:4
I8@0:4
^{_NSZone=}8@0:4
B12@0:4@"Protocol"8
@"NSString"8@0:4
@28@0:4@8@12@16@20@24
v12@0:4@8
@28@0:4@"NSURL"8@"NSString"12@"NSData"16@"NSURL"20@"<CoreDAVAccountInfoProvider>"24
@"NSURL"8@0:4
v12@0:4@"NSURL"8
@"NSData"8@0:4
@"NSArray"8@0:4
v24@0:4@8@12@16@20
v28@0:4@8@12@16@20@24
v20@0:4@8@12@16
v16@0:4@8@12
@20@0:4@8@12@16
v12@0:4@"NSXMLParser"8
v24@0:4@"NSXMLParser"8@"NSString"12@"NSString"16@"NSString"20
v28@0:4@"NSXMLParser"8@"NSString"12@"NSString"16@"NSString"20@"NSString"24
v20@0:4@"NSXMLParser"8@"NSString"12@"NSString"16
v28@0:4@"NSXMLParser"8@"NSString"12@"NSString"16@"NSString"20@"NSDictionary"24
v16@0:4@"NSXMLParser"8@"NSString"12
v16@0:4@"NSXMLParser"8@"NSData"12
@"NSData"20@0:4@"NSXMLParser"8@"NSString"12@"NSString"16
v16@0:4@"NSXMLParser"8@"NSError"12
v8@0:4
@"NSURL"
@"NSString"
@"NSMutableString"
@"NSDictionary"
@"CoreDAVErrorItem"
r^v8@0:4
@24@0:4@8@12@16@20
@12@0:4@8
@"NSMutableArray"
@"NSMutableDictionary"
d8@0:4
@"CoreDAVPropPatchTask"8@0:4
@"CoreDAVMkcolTask"8@0:4
v12@0:4B8
@"NSSet"
@20@0:4@8@12#16
@44@0:4@8@12@16@20@24B28@32@36@40
@12@0:4^v8
v12@0:4I8
v16@0:4@"CoreDAVTaskGroup"8@"NSError"12
B20@0:4^@8^@12@16
B16@0:4@8@12
v36@0:4@8@12@16@20@24@28@32
B20@0:4^@8^@12@"NSURL"16
@"NSDictionary"12@0:4@"NSArray"8
@"NSSet"12@0:4@"NSURL"8
B16@0:4@"NSString"8@"NSURL"12
v16@0:4@"CoreDAVRecursiveContainerSyncTaskGroup"8@12
v20@0:4@"CoreDAVRecursiveContainerSyncTaskGroup"8@"NSSet"12@"NSSet"16
v36@0:4@"CoreDAVRecursiveContainerSyncTaskGroup"8@"NSURL"12@"NSString"16@"NSString"20@"NSSet"24@"NSSet"28@"NSError"32
v28@0:4@"CoreDAVRecursiveContainerSyncTaskGroup"8@"NSString"12@"NSString"16@"NSString"20@"NSError"24
v20@0:4@"NSURL"8@"NSData"12@"NSError"16
v20@0:4@"NSURL"8@"NSURL"12@"NSError"16
v16@0:4@"CoreDAVTask"8@"NSError"12
v16@0:4@"CoreDAVDeleteTask"8@"NSError"12
v16@0:4@"CoreDAVGetAccountPropertiesTaskGroup"8@"NSError"12
v20@0:4@"CoreDAVContainerInfoTaskGroup"8@"NSSet"12@"NSError"16
@40@0:4@8@12@?16@?20@?24@?28@?32B36
v16@0:4B8@12
v12@0:4@?8
v20@0:4@8^v12@16
^v16@0:4^v8@12
v20@0:4^v8^v12B16
@24@0:4^v8^v12@16i20
v20@0:4^v8B12@16
i12@0:4^v8
i16@0:4i8@12
v20@0:4B8@?12B16
v16@0:4B8@?12
@?8@0:4
@"<CoreDAVAccountInfoProvider>"
@"<CoreDAVTaskManager>"
@"NSMutableSet"
@"BookmarkDAVSyncData"
B16@0:4@8^v12
B44@0:4^v8@12^i16^i20i24i28^{__CFDictionary=}32^{__CFDictionary=}36^{__CFDictionary=}40
@36@0:4^{__CFArray=}8^{__CFDictionary=}12^{__CFDictionary=}16^{__CFDictionary=}20^{__CFArray=}24i28i32
@24@0:4^{__CFArray=}8^{__CFArray=}12i16i20
v12@0:4^{__CFDictionary=}8
B28@0:4@8^{__CFDictionary=}12@16@20^{__CFDictionary=}24
B24@0:4@8^{__CFDictionary=}12^{__CFArray=}16@20
B16@0:4@8^{__CFArray=}12
@16@0:4@8@12
@"NSArray"
